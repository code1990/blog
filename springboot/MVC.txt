第2 章 Spring 框架核心概念....32
2.1 Spring 框架总览  33
2.2 依赖注入与控制反转 .... 37
2.3 AOP 编程 .... 46
第3 章 Spring MVC 及常用 MediaType.....52
3.1 Spring MVC 简介 .... 53
3.2 JSON 类型的处理 ... 56
3.3 XML 类型的处理 ..... 61
3.4 文件上传的处理  63
第11章 Spring Boot的小彩蛋  260
11.1 修改启动Banner  260
11.1.1 启动Banner介绍  260
11.1.2 启动Banner修改  263
11.2 使用LomBok让编程更简单  264
11.2.1 什么是LomBok  264
11.2.2 IntelliJ IDEA安装Lombok插件  264
11.2.3 如何使用LomBok  265
11.3 邮件发送  266
11.3.1 在Spring Boot中使用邮件发送  266
11.3.2 基础配置信息  267
11.3.3 文本邮件发送  268
11.3.4 网页邮件发送  269
11.3.5 附件邮件发送  270
11.3.6 嵌入静态资源邮件发送  271
11.4 三“器”的使用  272
11.4.1 过滤器  272
11.4.2 拦截器  274
11.4.3 监听器  275
11.4.4 Spring Boot引用三“器”  276
11.4.5 测试  277
11.5 事务使用  278
11.5.1 事务介绍  278
11.5.2 在项目中使用事务  279
11.5.3 Spring事务拓展介绍  280
11.6 统一处理异常  282
11.6.1 异常介绍  282
11.6.2 Java异常分类  282
11.6.3 Spring Boot中统一处理异常  284
11.7 使用AOP  284
11.7.1 AOP介绍  285
11.7.2 Spring Boot使用AOP  285
11.8 使用validator后台校验  288
11.9 使用Swagger构建接口文档  291
11.9.1 什么是Swagger  291
11.9.2 Swagger 2注解介绍  291
11.9.3 Spring Boot使用Swagger  293
11.10 使用ApiDoc构建接口文档  298
11.10.1 如何使用ApiDoc接口文档  298
11.10.2 ApiDoc常用注解  298
11.10.3 Spring Boot使用ApiDoc  299
11.11 小结  302
第 5 章  Spring Web MVC .... 129
5.1  Spring Web MVC 简介 .. 129
5.2  用 Spring Boot 学习Web MVC  129
5.2.1  核心注解 ... 129
5.2.2  RESTful 服务 .. 130
5.2.3  @ControllerAdvice ... 146
5.2.4  @RestControllerAdvice .. 151
5.2.5  JSON 定制  156
5.2.6  RestTemplate ... 159
5.3  Web MVC 配置 .... 161
5.3.1  Spring MVC 的工作原理 ..... 161
5.3.2  配置MVC . 161
5.3.3  Interceptor . 162
5.3.4  Formatter ... 164
5.3.5  HttpMessageConverter .... 166
5.3.6  方法参数和返回值处理设置 ..... 169
5.3.7  初始化数据绑定设置 ..... 176
5.3.8  类型转换原理与设置 ..... 176
5.3.9  路径匹配和内容协商 ..... 183
5.3.10  JSON . 188
5.3.11 其他外部属性配置 ... 189
5.4  Servlet 容器 .... 191
5.4.1  注册 Servlet、Filter 和 Listener . 191
5.4.2  配置 Servlet 容器  196
5.5  异步请求 .. 202
5.5.1  Servlet 3.0 异步返回  202
5.5.2  HTTP Streaming.. 206
5.5.3  HTTP/2  212
5.6  小结 .... 214
第 3 章  Spring 5.X 基础 ... 30
3.1  IoC 容器 ..... 30
3.2  Spring Bean 的配置 ..... 31
3.2.1  注解配置（@Component） ... 31
3.2.2  Java 配置（@Configuration 和@Bean） .. 31
3.2.3  依赖注入（Dependency Injection） .... 32
3.2.4  运行检验（CommandLineRunner） ... 37
3.2.5  Bean 的 Scope ... 38
3.2.6  Bean 的生命周期 .. 40
3.2.7  应用环境 ..... 43
3.2.8  条件配置（@Conditional） .. 46
3.2.9  开启配置（@Enable*和@Import） .... 47
3.3  对 Bean 的处理（BeanPostProcessor） .. 53
3.4  Spring Aware 容器 . 54
3.5  Bean 之间的事件通信 . 57
3.6  Spring EL .... 59
3.7  AOP  61
3.8  注解工作原理 .. 64
3.8.1  BeanPostProcessor  64
3.8.2  BeanFactoryPostProcessor  66
3.8.3  使用AOP .... 68
3.8.4  组合元注解 . 68
3.9小结....68
第9章　Spring Boot中的AOP编程 170
9.1　Spring Boot与AOP 170
9.1.1　AOP简介 170
9.1.2　Spring AOP介绍 172
9.1.3　实现一个简单的日志切面 172
9.2　项目实战：使用AOP + Filter实现登录鉴权与权限控制 175
9.2.1　系统整体架构 175
9.2.2　创建工程 176
9.2.3　数据库表结构设计 177
9.2.4　用户登录逻辑 179
9.2.5　登录态鉴权过滤器 181
9.2.6　AOP实现用户权限管理 185
9.2.7　用户注册 187
9.2.8　数据后端校验 188
9.3　本章小结 192
第1章　Java EE简介
1.1　Java EE
1.1.1　Java EE架构
1.1.2　Java EE的缺点
1.2　Spring
1.2.1　Spring IoC容器和AOP
1.2.2　Spring的缺点
1.3　Spring Boot
1.4　Hello，Spring Boot
1.4.1　创建一个Maven工程
1.4.2　增加Web支持
1.4.3　Hello Spring Boot示例
1.4.4　使用热部署
1.4.5　添加REST支持
第3章　MVC框架
3.1　集成MVC框架
3.1.1　引入依赖
3.1.2　Web应用目录结构
3.1.3　Java包名结构
3.2　使用Controller
3.3　URL映射到方法
3.3.1　@RequestMapping
3.3.2　URL路径匹配
3.3.3　HTTP method匹配
3.3.4　consumes和produces
3.3.5　params和header匹配
3.4　方法参数
3.4.1　PathVariable
3.4.2　Model&ModelAndView
3.4.3　JavaBean接受HTTP参数
3.4.4　@RequsetBody接受JSON
3.4.5　MultipartFile
3.4.6　@ModelAttribute
3.4.7　@InitBinder
3.5　验证框架
3.5.1　JSR-303
3.5.2　MVC中使用@Validated
3.5.3　自定义校验
3.6　WebMvcConfigurer
3.6.1　拦截器
3.6.2　跨域访问
3.6.3　格式化
3.6.4　注册Controller
3.7　视图技术
3.7.1　使用Freemarker
3.7.2　使用Beetl
3.7.3　使用Jackson
3.7.4　Redirect和Forward
3.8　通用错误处理
3.9　@Service和@Transactional
3.9.1　声明一个Service类
3.9.2　事务管理
3.10　curl命令