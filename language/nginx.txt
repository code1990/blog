1	{"count":37,"start":0,"total":37,"books":[{"rating":{"max":10,"numRaters":108,"average":"8.8","min":0},"subtitle":"模块开发与架构解析","author":["陶辉"],"pubdate":"2016-2","tags":[{"count":264,"name":"Nginx","title":"Nginx"},{"count":132,"name":"服务器","title":"服务器"},{"count":98,"name":"计算机","title":"计算机"},{"count":94,"name":"nginx","title":"nginx"},{"count":63,"name":"Web开发","title":"Web开发"},{"count":61,"name":"Web","title":"Web"},{"count":54,"name":"计算机科学","title":"计算机科学"},{"count":43,"name":"技术类","title":"技术类"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s33520236.jpg","binding":"平装","translator":[],"catalog":"第一部分　Nginx能帮我们做什么\n第1章　研究Nginx前的准备工作 2\n1.1　Nginx是什么 2\n1.2　为什么选择Nginx 5\n1.3　准备工作 7\n1.3.1　Linux操作系统 7\n1.3.2　使用Nginx的必备软件 7\n1.3.3　磁盘目录 8\n1.3.4　Linux内核参数的优化 9\n1.3.5　获取Nginx源码 10\n1.4　编译安装Nginx 11\n1.5　configure详解 11\n1.5.1　configure的命令参数 11\n1.5.2　configure执行流程 18\n1.5.3　configure生成的文件 21\n1.6　Nginx的命令行控制 23\n1.7　小结 27\n第2章　Nginx的配置 28\n2.1　运行中的Nginx进程间的关系 28\n2.2　Nginx配置的通用语法 31\n2.2.1　块配置项 31\n2.2.2　配置项的语法格式 32\n2.2.3　配置项的注释 33\n2.2.4　配置项的单位 33\n2.2.5　在配置中使用变量 33\n2.3　Nginx服务的基本配置 34\n2.3.1　用于调试进程和定位问题的配置项 34\n2.3.2　正常运行的配置项 36\n2.3.3　优化性能的配置项 37\n2.3.4　事件类配置项 39\n2.4　用HTTP核心模块配置一个静态Web服务器 40\n2.4.1　虚拟主机与请求的分发 41\n2.4.2　文件路径的定义 45\n2.4.3　内存及磁盘资源的分配 47\n2.4.4　网络连接的设置 49\n2.4.5　MIME类型的设置 52\n2.4.6　对客户端请求的限制 53\n2.4.7　文件操作的优化 54\n2.4.8　对客户端请求的特殊处理 56\n2.4.9　ngx_http_core_module模块提供的变量 57\n2.5　用HTTP proxy module配置一个反向代理服务器 59\n2.5.1　负载均衡的基本配置 61\n2.5.2　反向代理的基本配置 63\n2.6　小结 66\n第二部分　如何编写HTTP模块\n第3章　开发一个简单的HTTP模块 68\n3.1　如何调用HTTP模块 68\n3.2　准备工作 70\n3.2.1　整型的封装 71\n3.2.2　ngx_str_t数据结构 71\n3.2.3　ngx_list_t数据结构 71\n3.2.4　ngx_table_elt_t数据结构 75\n3.2.5　ngx_buf_t数据结构 75\n3.2.6　ngx_chain_t数据结构 77\n3.3　如何将自己的HTTP模块编译进Nginx 77\n3.3.1　config文件的写法 77\n3.3.2　利用configure脚本将定制的模块加入到Nginx中 78\n3.3.3　直接修改Makefile文件 81\n3.4　HTTP模块的数据结构 82\n3.5　定义自己的HTTP模块 86\n3.6　处理用户请求 89\n3.6.1　处理方法的返回值 89\n3.6.2　获取URI和参数 92\n3.6.3　获取HTTP头部 94\n3.6.4　获取HTTP包体 97\n3.7　发送响应 99\n3.7.1　发送HTTP头部 99\n3.7.2　将内存中的字符串作为包体发送 101\n3.7.3　经典的“Hello World”示例 102\n3.8　将磁盘文件作为包体发送 103\n3.8.1　如何发送磁盘中的文件 104\n3.8.2　清理文件句柄 106\n3.8.3　支持用户多线程下载和断点续传 107\n3.9　用C++语言编写HTTP模块 108\n3.9.1　编译方式的修改 108\n3.9.2　程序中的符号转换 109\n3.10　小结 110\n第4章　配置、error日志和请求上下文 111\n4.1　http配置项的使用场景 111\n4.2　怎样使用http配置 113\n4.2.1　分配用于保存配置参数的数据结构 113\n4.2.2　设定配置项的解析方式 115\n4.2.3　使用14种预设方法解析配置项 121\n4.2.4　自定义配置项处理方法 131\n4.2.5　合并配置项 133\n4.3　HTTP配置模型 135\n4.3.1　解析HTTP配置的流程 136\n4.3.2　HTTP配置模型的内存布局 139\n4.3.3　如何合并配置项 142\n4.3.4　预设配置项处理方法的工作原理 144\n4.4　error日志的用法 145\n4.5　请求的上下文 149\n4.5.1　上下文与全异步Web服务器的关系 149\n4.5.2　如何使用HTTP上下文 151\n4.5.3　HTTP框架如何维护上下文结构 152\n4.6　小结 153\n第5章　访问第三方服务 154\n5.1　upstream的使用方式 155\n5.1.1　ngx_http_upstream_t结构体 158\n5.1.2　设置upstream的限制性参数 159\n5.1.3　设置需要访问的第三方服务器地址 160\n5.1.4　设置回调方法 161\n5.1.5　如何启动upstream机制 161\n5.2　回调方法的执行场景 162\n5.2.1　create_request回调方法 162\n5.2.2　reinit_request回调方法 164\n5.2.3　finalize_request回调方法 165\n5.2.4　process_header回调方法 165\n5.2.5　rewrite_redirect回调方法 167\n5.2.6　input_filter_init与input_filter回调方法 167\n5.3　使用upstream的示例 168\n5.3.1　upstream的各种配置参数 168\n5.3.2　请求上下文 170\n5.3.3　在create_request方法中构造请求 170\n5.3.4　在process_header方法中解析包头 171\n5.3.5　在finalize_request方法中释放资源 175\n5.3.6　在ngx_http_mytest_handler方法中启动upstream 175\n5.4　subrequest的使用方式 177\n5.4.1　配置子请求的处理方式 177\n5.4.2　实现子请求处理完毕时的回调方法 178\n5.4.3　处理父请求被重新激活后的回调方法 179\n5.4.4　启动subrequest子请求 179\n5.5　subrequest执行过程中的主要场景 180\n5.5.1　如何启动subrequest 180\n5.5.2　如何转发多个子请求的响应包体 182\n5.5.3　子请求如何激活父请求 185\n5.6　subrequest使用的例子 187\n5.6.1　配置文件中子请求的设置 187\n5.6.2　请求上下文 188\n5.6.3　子请求结束时的处理方法 188\n5.6.4　父请求的回调方法 189\n5.6.5　启动subrequest 190\n5.7　小结 191\n第6章　开发一个简单的HTTP过滤模块 192\n6.1　过滤模块的意义 192\n6.2　过滤模块的调用顺序 193\n6.2.1　过滤链表是如何构成的 194\n6.2.2　过滤链表的顺序 196\n6.2.3　官方默认HTTP过滤模块的功能简介 197\n6.3　HTTP过滤模块的开发步骤 198\n6.4　HTTP过滤模块的简单例子 200\n6.4.1　如何编写config文件 201\n6.4.2　配置项和上下文 201\n6.4.3　定义HTTP过滤模块 203\n6.4.4　初始化HTTP过滤模块 204\n6.4.5　处理请求中的HTTP头部 204\n6.4.6　处理请求中的HTTP包体 206\n6.5　小结 206\n第7章　Nginx提供的高级数据结构 207\n7.1　Nginx提供的高级数据结构概述 207\n7.2　ngx_queue_t双向链表 209\n7.2.1　为什么设计ngx_queue_t双向链表 209\n7.2.2　双向链表的使用方法 209\n7.2.3　使用双向链表排序的例子 212\n7.2.4　双向链表是如何实现的 213\n7.3　ngx_array_t动态数组 215\n7.3.1　为什么设计ngx_array_t动态数组 215\n7.3.2　动态数组的使用方法 215\n7.3.3　 使用动态数组的例子 217\n7.3.4　动态数组的扩容方式 218\n7.4　ngx_list_t单向链表 219\n7.5　ngx_rbtree_t红黑树 219\n7.5.1　为什么设计ngx_rbtree_t红黑树 219\n7.5.2　红黑树的特性 220\n7.5.3　红黑树的使用方法 222\n7.5.4　使用红黑树的简单例子 225\n7.5.5　如何自定义添加成员方法 226\n7.6　ngx_radix_tree_t基数树 228\n7.6.1　ngx_radix_tree_t基数树的原理 228\n7.6.2　基数树的使用方法 230\n7.6.3　使用基数树的例子 231\n7.7　支持通配符的散列表 232\n7.7.1　ngx_hash_t基本散列表 232\n7.7.2　支持通配符的散列表 235\n7.7.3　带通配符散列表的使用例子 241\n7.8　小结 245\n第三部分　深入Nginx\n第8章　Nginx基础架构 248\n8.1　Web服务器设计中的关键约束 249\n8.2　Nginx的架构设计 251\n8.2.1　优秀的模块化设计 251\n8.2.2　事件驱动架构 254\n8.2.3　请求的多阶段异步处理 256\n8.2.4　管理进程、多工作进程设计 259\n8.2.5　平台无关的代码实现 259\n8.2.6　内存池的设计 259\n8.2.7　使用统一管道过滤器模式的HTTP过滤模块 260\n8.2.8　其他一些用户模块 260\n8.3　Nginx框架中的核心结构体ngx_cycle_t 260\n8.3.1　ngx_listening_t结构体 261\n8.3.2　ngx_cycle_t结构体 262\n8.3.3　ngx_cycle_t支持的方法 264\n8.4　Nginx启动时框架的处理流程 266\n8.5　worker进程是如何工作的 269\n8.6　master进程是如何工作的 271\n8.7　ngx_pool_t内存池 276\n8.8　小结 284\n第9章　事件模块 285\n9.1　事件处理框架概述 286\n9.2　Nginx事件的定义 288\n9.3　Nginx连接的定义 291\n9.3.1　被动连接 292\n9.3.2　主动连接 295\n9.3.3　ngx_connection_t连接池 296\n9.4　ngx_events_module核心模块 297\n9.4.1　如何管理所有事件模块的配置项 299\n9.4.2　管理事件模块 300\n9.5　ngx_event_core_module事件模块 302\n9.6　epoll事件驱动模块 308\n9.6.1　epoll的原理和用法 308\n9.6.2　如何使用epoll 310\n9.6.3　ngx_epoll_module模块的实现 312\n9.7　定时器事件 320\n9.7.1　缓存时间的管理 320\n9.7.2　缓存时间的精度 323\n9.7.3　定时器的实现 323\n9.8　事件驱动框架的处理流程 324\n9.8.1　如何建立新连接 325\n9.8.2　如何解决“惊群”问题 327\n9.8.3　如何实现负载均衡 329\n9.8.4　post事件队列 330\n9.8.5　ngx_process_events_and_timers流程 331\n9.9　文件的异步I\/O 334\n9.9.1　Linux内核提供的文件异步I\/O 335\n9.9.2　ngx_epoll_module模块中实现的针对文件的异步I\/O 337\n9.10　TCP协议与Nginx 342\n9.11　小结 347\n第10章　HTTP框架的初始化 348\n10.1　HTTP框架概述 349\n10.2　管理HTTP模块的配置项 352\n10.2.1　管理main级别下的配置项 353\n10.2.2　管理server级别下的配置项 355\n10.2.3　管理location级别下的配置项 358\n10.2.4　不同级别配置项的合并 364\n10.3　监听端口的管理 367\n10.4　server的快速检索 370\n10.5　location的快速检索 370\n10.6　HTTP请求的11个处理阶段 372\n10.6.1　HTTP处理阶段的普适规则 374\n10.6.2　NGX_HTTP_POST_READ_PHASE阶段 375\n10.6.3　NGX_HTTP_SERVER_REWRITE_PHASE阶段 378\n10.6.4　NGX_HTTP_FIND_CONFIG_PHASE阶段 378\n10.6.5　NGX_HTTP_REWRITE_PHASE阶段 378\n10.6.6　NGX_HTTP_POST_REWRITE_PHASE阶段 379\n10.6.7　NGX_HTTP_PREACCESS_PHASE阶段 379\n10.6.8　NGX_HTTP_ACCESS_PHASE阶段 379\n10.6.9　NGX_HTTP_POST_ACCESS_PHASE阶段 380\n10.6.10　NGX_HTTP_TRY_FILES_PHASE阶段 380\n10.6.11　NGX_HTTP_CONTENT_PHASE阶段 380\n10.6.12　NGX_HTTP_LOG_PHASE阶段 382\n10.7　HTTP框架的初始化流程 382\n10.8　小结 384\n第11章　HTTP框架的执行流程 385\n11.1　HTTP框架执行流程概述 386\n11.2　新连接建立时的行为 387\n11.3　第一次可读事件的处理 388\n11.4　接收HTTP请求行 394\n11.5　接收HTTP头部 398\n11.6　处理HTTP请求 400\n11.6.1　ngx_http_core_generic_phase 406\n11.6.2　ngx_http_core_rewrite_phase 408\n11.6.3　ngx_http_core_access_phase 409\n11.6.4　ngx_http_core_content_phase 412\n11.7　subrequest与post请求 415\n11.8　处理HTTP包体 417\n11.8.1　接收包体 419\n11.8.2　放弃接收包体 425\n11.9　发送HTTP响应 429\n11.9.1　ngx_http_send_header 430\n11.9.2　ngx_http_output_filter 432\n11.9.3　ngx_http_writer 435\n11.10　结束HTTP请求 437\n11.10.1　ngx_http_close_connection 438\n11.10.2　ngx_http_free_request 439\n11.10.3　ngx_http_close_request 440\n11.10.4　ngx_http_finalize_connection 441\n11.10.5　ngx_http_terminate_request 443\n11.10.6　ngx_http_finalize_request 443\n11.11　小结 446\n第12章　upstream机制的设计与实现 447\n12.1　upstream机制概述 448\n12.1.1　设计目的 448\n12.1.2　ngx_http_upstream_t数据结构的意义 450\n12.1.3　ngx_http_upstream_conf_t配置结构体 453\n12.2　启动upstream 455\n12.3　与上游服务器建立连接 457\n12.4　发送请求到上游服务器 460\n12.5　接收上游服务器的响应头部 463\n12.5.1　应用层协议的两段划分方式 463\n12.5.2　处理包体的3种方式 464\n12.5.3　接收响应头部的流程 465\n12.6　不转发响应时的处理流程 469\n12.6.1　input_filter方法的设计 469\n12.6.2　默认的input_filter方法 470\n12.6.3　接收包体的流程 472\n12.7　以下游网速优先来转发响应 473\n12.7.1　转发响应的包头 474\n12.7.2　转发响应的包体 477\n12.8　以上游网速优先来转发响应 481\n12.8.1　ngx_event_pipe_t结构体的意义 481\n12.8.2　转发响应的包头 485\n12.8.3　转发响应的包体 487\n12.8.4　ngx_event_pipe_read_upstream方法 489\n12.8.5　ngx_event_pipe_write_to_downstream方法 494\n12.9　结束upstream请求 496\n12.10　小结 499\n第13章　邮件代理模块 500\n13.1　邮件代理服务器的功能 500\n13.2　邮件模块的处理框架 503\n13.2.1　一个请求的8个独立处理阶段 503\n13.2.2　邮件类模块的定义 504\n13.2.3　邮件框架的初始化 506\n13.3　初始化请求 506\n13.3.1　描述邮件请求的ngx_mail_session_t结构体 506\n13.3.2　初始化邮件请求的流程 509\n13.4　接收并解析客户端请求 509\n13.5　邮件认证 510\n13.5.1　ngx_mail_auth_http_ctx_t结构体 510\n13.5.2　与认证服务器建立连接 511\n13.5.3　发送请求到认证服务器 513\n13.5.4　接收并解析响应 514\n13.6　与上游邮件服务器间的认证交互 514\n13.6.1　ngx_mail_proxy_ctx_t结构体 516\n13.6.2　向上游邮件服务器发起连接 516\n13.6.3　与邮件服务器认证交互的过程 518\n13.7　透传上游邮件服务器与客户端间的流 520\n13.8　小结 524\n第14章　进程间的通信机制 525\n14.1　概述 525\n14.2　共享内存 526\n14.3　原子操作 530\n14.3.1　不支持原子库下的原子操作 530\n14.3.2　x86架构下的原子操作 531\n14.3.3　自旋锁 533\n14.4　Nginx频道 535\n14.5　信号 538\n14.6　信号量 540\n14.7　文件锁 541\n14.8　互斥锁 544\n14.8.1　文件锁实现的ngx_shmtx_t锁 546\n14.8.2　原子变量实现的ngx_shmtx_t锁 548\n14.9　小结 553\n第15章　变量 554\n15.1　使用内部变量开发模块 555\n15.1.1　定义模块 556\n15.1.2　定义http模块加载方式 557\n15.1.3　解析配置中的变量 558\n15.1.4　处理请求 560\n15.2　内部变量工作原理 561\n15.2.1　何时定义变量 561\n15.2.2　相关数据结构详述 564\n15.2.3　定义变量的方法 572\n15.2.4　使用变量的方法 572\n15.2.5　如何解析变量 573\n15.3　定义内部变量 576\n15.4　外部变量与脚本引擎 577\n15.4.1　相关数据结构 578\n15.4.2　编译“set”脚本 581\n15.4.3　脚本执行流程 586\n15.5　小结 589\n第16章　slab共享内存 590\n16.1　操作slab共享内存的方法 590\n16.2　使用slab共享内存池的例子 592\n16.2.1　共享内存中的数据结构 593\n16.2.2　操作共享内存中的红黑树与链表 595\n16.2.3　解析配置文件 600\n16.2.4　定义模块 603\n16.3　slab内存管理的实现原理 605\n16.3.1　内存结构布局 607\n16.3.2　分配内存流程 613\n16.3.3　释放内存流程 617\n16.3.4　如何使用位操作 619\n16.3.5　slab内存池间的管理 624\n16.4　小结 624","pages":"624","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s33520236.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s33520236.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s33520236.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26745255\/","id":"26745255","publisher":"机械工业出版社","isbn10":"7111526252","isbn13":"9787111526254","title":"深入理解Nginx（第2版）","url":"https:\/\/api.douban.com\/v2\/book\/26745255","alt_title":"","author_intro":"陶辉，毕业于西安交通大学计算机科学与技术专业，曾就职于华为中央软件部、腾讯QQ空间、思科中国CRDC等公司，目前在阿里巴巴云计算公司的飞天团队工作，研究方向为介于Iaas和Paas间的弹性计算，多年以来专注于Nginx的定制化应用，对Nginx的设计与特性有深刻认识，实战经验丰富，编写过许多优秀的Nginx模块并应用于企业级产品中，同时撰写了大量关于Nginx的技术文章。擅长Linux下高性能服务器的开发，以及分布式环境下海量数据存储的设计开发。","summary":"本书致力于说明开发Nginx模块的必备知识，第1版发行以后，深受广大读者的喜爱．然而由于Ng,nx功能繁多且性能强大，以致必须了解的基本技能也很庞杂，而第1版成书匆忙，缺失了几个进阶的技巧描述，因此第2版在此基础上进行了完善。\n书中首先通过介绍官方Nginx的基本用法和配置规则，帮助读者了解一般Nginx模块的用法，然后重点介绍了女口何开发HTTP模块(含HTTP过滤模块)来得到定制化的Nginx，其中包括开发—个功能复杂的模块所需要了解的各种知识，并对内存池的实现细节及TCP协议进行了详细介绍；接着，综合Nginx框架代码分析了Nginx架构的设计理念和技巧，此外，还新增了如何在模块中支持HTTP变量，以及与slab共享内存等相关的内容，相信通过完善，可进一步帮助读者更好地开发出功能丰富、性能—流的Nginx模块。","price":"99.00元"},{"rating":{"max":10,"numRaters":15,"average":"8.8","min":0},"subtitle":"A Practical Guide to High Performance","author":["Stephen Corona"],"pubdate":"2016-3-25","tags":[{"count":19,"name":"nginx","title":"nginx"},{"count":17,"name":"Nginx","title":"Nginx"},{"count":9,"name":"Web","title":"Web"},{"count":8,"name":"服务器","title":"服务器"},{"count":4,"name":"网络编程","title":"网络编程"},{"count":3,"name":"软件开发","title":"软件开发"},{"count":2,"name":"计算机","title":"计算机"},{"count":1,"name":"软件","title":"软件"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s28349118.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"250","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s28349118.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s28349118.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s28349118.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26350103\/","id":"26350103","publisher":"O'Reilly Media","isbn10":"1491924772","isbn13":"9781491924778","title":"nginx","url":"https:\/\/api.douban.com\/v2\/book\/26350103","alt_title":"","author_intro":"","summary":"","price":"USD 34.99"},{"rating":{"max":10,"numRaters":152,"average":"8.4","min":0},"subtitle":"模块开发与架构解析","author":["陶辉"],"pubdate":"2013-4-15","tags":[{"count":482,"name":"Nginx","title":"Nginx"},{"count":239,"name":"服务器","title":"服务器"},{"count":128,"name":"架构","title":"架构"},{"count":98,"name":"计算机","title":"计算机"},{"count":67,"name":"编程","title":"编程"},{"count":64,"name":"网络","title":"网络"},{"count":54,"name":"网络编程","title":"网络编程"},{"count":36,"name":"programming","title":"programming"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s26036498.jpg","binding":"平装","translator":[],"catalog":"前　言\n第一部分　Nginx能帮我们做什么\n第1章　研究Nginx前的准备工作 \/ 2\n1.1　Nginx是什么 \/ 2\n1.2　为什么选择Nginx \/ 4\n1.3　准备工作 \/ 7\n1.3.1　Linux操作系统 \/ 7\n1.3.2　使用Nginx的必备软件 \/ 7\n1.3.3　磁盘目录 \/ 8\n1.3.4　Linux内核参数的优化 \/ 9\n1.3.5　获取Nginx源码 \/ 11\n1.4　编译安装Nginx \/ 11\n1.5　configure详解 \/ 11\n1.5.1　configure的命令参数 \/ 12\n1.5.2　configure执行流程 \/ 18\n1.5.3　configure生成的文件 \/ 22\n1.6　Nginx的命令行控制 \/ 24\n1.7　小结 \/ 27\n第2章　Nginx的配置 \/ 28\n2.1　运行中的Nginx进程间的关系 \/ 28\n2.2　Nginx配置的通用语法 \/ 31\n2.2.1　块配置项 \/ 31\n2.2.2　配置项的语法格式 \/ 32\n2.2.3　配置项的注释 \/ 33\n2.2.4　配置项的单位 \/ 33\n2.2.5　在配置中使用变量 \/ 33\n2.3　Nginx服务的基本配置 \/ 34\n2.3.1　用于调试进程和定位问题的配置项 \/ 34\n2.3.2　正常运行的配置项 \/ 36\n2.3.3　优化性能的配置项 \/ 38\n2.3.4　事件类配置项 \/ 39\n2.4　用HTTP核心模块配置一个静态Web服务器 \/ 41\n2.4.1　虚拟主机与请求的分发 \/ 42\n2.4.2　文件路径的定义 \/ 45\n2.4.3　内存及磁盘资源的分配 \/ 48\n2.4.4　网络连接的设置 \/ 50\n2.4.5　MIME类型的设置 \/ 53\n2.4.6　对客户端请求的限制 \/ 54\n2.4.7　文件操作的优化 \/ 55\n2.4.8　对客户端请求的特殊处理 \/ 57\n2.4.9　ngx_http_core_module模块提供的变量 \/ 59\n2.5　用HTTP proxy module配置一个反向代理服务器 \/ 60\n2.5.1　负载均衡的基本配置 \/ 62\n2.5.2　反向代理的基本配置 \/ 64\n2.6　小结 \/ 68\n第二部分　如何编写HTTP模块\n第3章　开发一个简单的HTTP模块 \/ 70\n3.1　如何调用HTTP模块 \/ 70\n3.2　准备工作 \/ 72\n3.2.1　整型的封装 \/ 72\n3.2.2　ngx_str_t数据结构 \/ 73\n3.2.3　ngx_list_t数据结构 \/ 73\n3.2.4　ngx_table_elt_t数据结构 \/ 77\n3.2.5　ngx_buf_t数据结构 \/ 77\n3.2.6　ngx_chain_t数据结构 \/ 79\n3.3　如何将自己的HTTP模块编译进Nginx \/ 79\n3.3.1　config文件的写法 \/ 80\n3.3.2　利用configure脚本将定制的模块加入到Nginx中 \/ 80\n3.3.3　直接修改Makefile文件 \/ 84\n3.4　HTTP模块的数据结构 \/ 85\n3.5　定义自己的HTTP模块 \/ 88\n3.6　处理用户请求 \/ 92\n3.6.1　处理方法的返回值 \/ 92\n3.6.2　获取URI和参数 \/ 95\n3.6.3　获取HTTP头部 \/ 98\n3.6.4　获取HTTP包体 \/ 101\n3.7　发送响应 \/ 102\n3.7.1　发送HTTP头部 \/ 102\n3.7.2　将内存中的字符串作为包体发送 \/ 104\n3.7.3　经典的“Hello World”示例 \/ 106\n3.8　将磁盘文件作为包体发送 \/ 107\n3.8.1　如何发送磁盘中的文件 \/ 107\n3.8.2　清理文件句柄 \/ 110\n3.8.3　支持用户多线程下载和断点续传 \/ 111\n3.9　用C++语言编写HTTP模块 \/ 112\n3.9.1　编译方式的修改 \/ 112\n3.9.2　程序中的符号转换 \/ 114\n3.10　小结 \/ 114\n第4章　配置、error日志和请求上下文 \/ 115\n4.1　http配置项的使用场景 \/ 115\n4.2　怎样使用http配置 \/ 117\n4.2.1　分配用于保存配置参数的数据结构 \/ 117\n4.2.2　设定配置项的解析方式 \/ 119\n4.2.3　使用14种预设方法解析配置项 \/ 125\n4.2.4　自定义配置项处理方法 \/ 136\n4.2.5　合并配置项 \/ 137\n4.3　HTTP配置模型 \/ 140\n4.3.1　解析HTTP配置的流程 \/ 141\n4.3.2　HTTP配置模型的内存布局 \/ 144\n4.3.3　如何合并配置项 \/ 147\n4.3.4　预设配置项处理方法的工作原理 \/ 149\n4.4　error日志的用法 \/ 150\n4.5　请求的上下文 \/ 155\n4.5.1　上下文与全异步Web服务器的关系 \/ 155\n4.5.2　如何使用HTTP上下文 \/ 156\n4.5.3　HTTP框架如何维护上下文结构 \/ 157\n4.6　小结 \/ 158\n第5章　访问第三方服务 \/ 159\n5.1　upstream的使用方式 \/ 160\n5.1.1　ngx_http_upstream_t结构体 \/ 163\n5.1.2　设置upstream的限制性参数 \/ 164\n5.1.3　设置需要访问的第三方服务器地址 \/ 165\n5.1.4　设置回调方法 \/ 166\n5.1.5　如何启动upstream机制 \/ 166\n5.2　回调方法的执行场景 \/ 167\n5.2.1　create_request回调方法 \/ 167\n5.2.2　reinit_request回调方法 \/ 169\n5.2.3　finalize_request回调方法 \/ 170\n5.2.4　process_header回调方法 \/ 171\n5.2.5　rewrite_redirect回调方法 \/ 172\n5.2.6　input_filter_init与input_filter回调方法 \/ 172\n5.3　使用upstream的示例 \/ 173\n5.3.1　upstream的各种配置参数 \/ 174\n5.3.2　请求上下文 \/ 175\n5.3.3　在create_request方法中构造请求 \/ 176\n5.3.4　在process_header方法中解析包头 \/ 177\n5.3.5　在finalize_request方法中释放资源 \/ 180\n5.3.6　在ngx_http_mytest_handler方法中启动upstream \/ 181\n5.4　subrequest的使用方式 \/ 183\n5.4.1　配置子请求的处理方式 \/ 183\n5.4.2　实现子请求处理完毕时的回调方法 \/ 184\n5.4.3　处理父请求被重新激活后的回调方法 \/ 185\n5.4.4　启动subrequest子请求 \/ 185\n5.5　subrequest执行过程中的主要场景 \/ 186\n5.5.1　如何启动subrequest \/ 186\n5.5.2　如何转发多个子请求的响应包体 \/ 188\n5.5.3　子请求如何激活父请求 \/ 192\n5.6　subrequest使用的例子 \/ 193\n5.6.1　配置文件中子请求的设置 \/ 194\n5.6.2　请求上下文 \/ 194\n5.6.3　子请求结束时的处理方法 \/ 195\n5.6.4　父请求的回调方法 \/ 196\n5.6.5　启动subrequest \/ 197\n5.7　小结 \/ 198\n第6章　开发一个简单的HTTP过滤模块 \/ 199\n6.1　过滤模块的意义 \/ 199\n6.2　过滤模块的调用顺序 \/ 200\n6.2.1　过滤链表是如何构成的 \/ 200\n6.2.2　过滤链表的顺序 \/ 203\n6.2.3　官方默认HTTP过滤模块的功能简介 \/ 204\n6.3　HTTP过滤模块的开发步骤 \/ 206\n6.4　HTTP过滤模块的简单例子 \/ 207\n6.4.1　如何编写config文件 \/ 208\n6.4.2　配置项和上下文 \/ 208\n6.4.3　定义HTTP过滤模块 \/ 210\n6.4.4　初始化HTTP过滤模块 \/ 211\n6.4.5　处理请求中的HTTP头部 \/ 212\n6.4.6　处理请求中的HTTP包体 \/ 213\n6.5　小结 \/ 214\n第7章　Nginx提供的高级数据结构 \/ 215\n7.1　Nginx提供的高级数据结构概述 \/ 215\n7.2　ngx_queue_t双向链表 \/ 217\n7.2.1　为什么设计ngx_queue_t双向链表 \/ 217\n7.2.2　双向链表的使用方法 \/ 217\n7.2.3　使用双向链表排序的例子 \/ 219\n7.2.4　双向链表是如何实现的 \/ 221\n7.3　ngx_array_t动态数组 \/ 222\n7.3.1　为什么设计ngx_array_t动态数组 \/ 223\n7.3.2　动态数组的使用方法 \/ 223\n7.3.3　 使用动态数组的例子 \/ 225\n7.3.4　动态数组的扩容方式 \/ 226\n7.4　ngx_list_t单向链表 \/ 226\n7.5　ngx_rbtree_t红黑树 \/ 227\n7.5.1　为什么设计ngx_rbtree_t红黑树 \/ 227\n7.5.2　红黑树的特性 \/ 228\n7.5.3　红黑树的使用方法 \/ 230\n7.5.4　使用红黑树的简单例子 \/ 233\n7.5.5　如何自定义添加成员方法 \/ 234\n7.6　ngx_radix_tree_t基数树 \/ 236\n7.6.1　ngx_radix_tree_t基数树的原理 \/ 236\n7.6.2　基数树的使用方法 \/ 238\n7.6.3　使用基数树的例子 \/ 239\n7.7　支持通配符的散列表 \/ 240\n7.7.1　ngx_hash_t基本散列表 \/ 240\n7.7.2　支持通配符的散列表 \/ 243\n7.7.3　带通配符散列表的使用例子 \/ 250\n7.8　小结 \/ 254\n第三部分　深入Nginx\n第8章　Nginx基础架构 \/ 256\n8.1　Web服务器设计中的关键约束 \/ 256\n8.2　Nginx的架构设计 \/ 259\n8.2.1　优秀的模块化设计 \/ 259\n8.2.2　事件驱动架构 \/ 263\n8.2.3　请求的多阶段异步处理 \/ 264\n8.2.4　管理进程、多工作进程设计 \/ 267\n8.2.5　平台无关的代码实现 \/ 268\n8.2.6　内存池的设计 \/ 268\n8.2.7　使用统一管道过滤器模式的HTTP过滤模块 \/ 268\n8.2.8　其他一些用户模块 \/ 269\n8.3　Nginx框架中的核心结构体ngx_cycle_t \/ 269\n8.3.1　ngx_listening_t结构体 \/ 269\n8.3.2　ngx_cycle_t结构体 \/ 271\n8.3.3　ngx_cycle_t支持的方法 \/ 273\n8.4　Nginx启动时框架的处理流程 \/ 275\n8.5　worker进程是如何工作的 \/ 278\n8.6　master进程是如何工作的 \/ 281\n8.7　小结 \/ 286\n第9章　事件模块 \/ 287\n9.1　事件处理框架概述 \/ 287\n9.2　Nginx事件的定义 \/ 290\n9.3　Nginx连接的定义 \/ 293\n9.3.1　被动连接 \/ 294\n9.3.2　主动连接 \/ 297\n9.3.3　ngx_connection_t连接池 \/ 298\n9.4　ngx_events_module核心模块 \/ 300\n9.4.1　如何管理所有事件模块的配置项 \/ 301\n9.4.2　管理事件模块 \/ 303\n9.5　ngx_event_core_module事件模块 \/ 305\n9.6　epoll事件驱动模块 \/ 310\n9.6.1　epoll的原理和用法 \/ 311\n9.6.2　如何使用epoll \/ 313\n9.6.3　ngx_epoll_module模块的实现 \/ 315\n9.7　定时器事件 \/ 323\n9.7.1　缓存时间的管理 \/ 324\n9.7.2　缓存时间的精度 \/ 326\n9.7.3　定时器的实现 \/ 327\n9.8　事件驱动框架的处理流程 \/ 328\n9.8.1　如何建立新连接 \/ 329\n9.8.2　如何解决“惊群”问题 \/ 330\n9.8.3　如何实现负载均衡 \/ 333\n9.8.4　post事件队列 \/ 334\n9.8.5　ngx_process_events_and_timers流程 \/ 335\n9.9　文件的异步I\/O \/ 338\n9.9.1　Linux内核提供的文件异步I\/O \/ 339\n9.9.2　ngx_epoll_module模块中实现的针对文件的异步I\/O \/ 342\n9.10　小结 \/ 346\n第10章　HTTP框架的初始化 \/ 347\n10.1　HTTP框架概述 \/ 348\n10.2　管理HTTP模块的配置项 \/ 351\n10.2.1　管理main级别下的配置项 \/ 352\n10.2.2　管理server级别下的配置项 \/ 354\n10.2.3　管理location级别下的配置项 \/ 357\n10.2.4　不同级别配置项的合并 \/ 362\n10.3　监听端口的管理 \/ 367\n10.4　server的快速检索 \/ 369\n10.5　location的快速检索 \/ 371\n10.6　HTTP请求的11个处理阶段 \/ 372\n10.6.1　HTTP处理阶段的普适规则 \/ 374\n10.6.2　NGX_HTTP_POST_READ_PHASE阶段 \/ 376\n10.6.3　NGX_HTTP_SERVER_REWRITE_PHASE阶段 \/ 378\n10.6.4　NGX_HTTP_FIND_CONFIG_PHASE阶段 \/ 379\n10.6.5　NGX_HTTP_REWRITE_PHASE阶段 \/ 379\n10.6.6　NGX_HTTP_POST_REWRITE_PHASE阶段 \/ 379\n10.6.7　NGX_HTTP_PREACCESS_PHASE阶段 \/ 379\n10.6.8　NGX_HTTP_ACCESS_PHASE阶段 \/ 380\n10.6.9　NGX_HTTP_POST_ACCESS_PHASE阶段 \/ 380\n10.6.10　NGX_HTTP_TRY_FILES_PHASE阶段 \/ 381\n10.6.11　NGX_HTTP_CONTENT_PHASE阶段 \/ 381\n10.6.12　NGX_HTTP_LOG_PHASE阶段 \/ 382\n10.7　HTTP框架的初始化流程 \/ 383\n10.8　小结 \/ 385\n第11章　HTTP框架的执行流程 \/ 386\n11.1　HTTP框架执行流程概述 \/ 387\n11.2　新连接建立时的行为 \/ 388\n11.3　第一次可读事件的处理 \/ 390\n11.4　接收HTTP请求行 \/ 396\n11.5　接收HTTP头部 \/ 399\n11.6　处理HTTP请求 \/ 403\n11.6.1　ngx_http_core_generic_phase \/ 409\n11.6.2　ngx_http_core_rewrite_phase \/ 411\n11.6.3　ngx_http_core_access_phase \/ 412\n11.6.4　ngx_http_core_content_phase \/ 415\n11.7　subrequest与post请求 \/ 419\n11.8　处理HTTP包体 \/ 421\n11.8.1　接收包体 \/ 422\n11.8.2　放弃接收包体 \/ 429\n11.9　发送HTTP响应 \/ 433\n11.9.1　ngx_http_send_header \/ 434\n11.9.2　ngx_http_output_filter \/ 436\n11.9.3　ngx_http_writer \/ 440\n11.10　结束HTTP请求 \/ 442\n11.10.1　ngx_http_close_connection \/ 443\n11.10.2　ngx_http_free_request \/ 444\n11.10.3　ngx_http_close_request \/ 446\n11.10.4　ngx_http_finalize_connection \/ 447\n11.10.5　ngx_http_terminate_request \/ 447\n11.10.6　ngx_http_finalize_request \/ 448\n11.11　小结 \/ 452\n第12章　upstream机制的设计与实现 \/ 453\n12.1　upstream机制概述 \/ 453\n12.1.1　设计目的 \/ 454\n12.1.2　ngx_http_upstream_t数据结构的意义 \/ 456\n12.1.3　ngx_http_upstream_conf_t配置结构体 \/ 459\n12.2　启动upstream \/ 462\n12.3　与上游服务器建立连接 \/ 464\n12.4　发送请求到上游服务器 \/ 467\n12.5　接收上游服务器的响应头部 \/ 470\n12.5.1　应用层协议的两段划分方式 \/ 470\n12.5.2　处理包体的3种方式 \/ 471\n12.5.3　接收响应头部的流程 \/ 473\n12.6　不转发响应时的处理流程 \/ 476\n12.6.1　input_filter方法的设计 \/ 477\n12.6.2　默认的input_filter方法 \/ 478\n12.6.3　接收包体的流程 \/ 479\n12.7　以下游网速优先来转发响应 \/ 481\n12.7.1　转发响应的包头 \/ 482\n12.7.2　转发响应的包体 \/ 484\n12.8　以上游网速优先来转发响应 \/ 489\n12.8.1　ngx_event_pipe_t结构体的意义 \/ 489\n12.8.2　转发响应的包头 \/ 493\n12.8.3　转发响应的包体 \/ 495\n12.8.4　ngx_event_pipe_read_upstream方法 \/ 498\n12.8.5　ngx_event_pipe_write_to_downstream方法 \/ 502\n12.9　结束upstream请求 \/ 504\n12.10　小结 \/ 508\n第13章　邮件代理模块 \/ 509\n13.1　邮件代理服务器的功能 \/ 509\n13.2　邮件模块的处理框架 \/ 512\n13.2.1　一个请求的8个独立处理阶段 \/ 512\n13.2.2　邮件类模块的定义 \/ 514\n13.2.3　邮件框架的初始化 \/ 516\n13.3　初始化请求 \/ 517\n13.3.1　描述邮件请求的ngx_mail_session_t结构体 \/ 517\n13.3.2　初始化邮件请求的流程 \/ 519\n13.4　接收并解析客户端请求 \/ 520\n13.5　邮件认证 \/ 520\n13.5.1　ngx_mail_auth_http_ctx_t结构体 \/ 520\n13.5.2　与认证服务器建立连接 \/ 522\n13.5.3　发送请求到认证服务器 \/ 522\n13.5.4　接收并解析响应 \/ 525\n13.6　与上游邮件服务器间的认证交互 \/ 526\n13.6.1　ngx_mail_proxy_ctx_t结构体 \/ 526\n13.6.2　向上游邮件服务器发起连接 \/ 527\n13.6.3　与邮件服务器认证交互的过程 \/ 528\n13.7　透传上游邮件服务器与客户端间的流 \/ 530\n13.8　小结 \/ 535\n第14章　进程间的通信机制 \/ 536\n14.1　概述 \/ 536\n14.2　共享内存 \/ 536\n14.3　原子操作 \/ 541\n14.3.1　不支持原子库下的原子操作 \/ 541\n14.3.2　x86架构下的原子操作 \/ 542\n14.3.3　自旋锁 \/ 545\n14.4　Nginx频道 \/ 546\n14.5　信号 \/ 549\n14.6　信号量 \/ 551\n14.7　文件锁 \/ 553\n14.8　互斥锁 \/ 556\n14.8.1　文件锁实现的ngx_shmtx_t锁 \/ 558\n14.8.2　原子变量实现的ngx_shmtx_t锁 \/ 560\n14.9　小结 \/ 565","ebook_url":"https:\/\/read.douban.com\/ebook\/15153589\/","pages":"584","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s26036498.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s26036498.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s26036498.jpg"},"alt":"https:\/\/book.douban.com\/subject\/22793675\/","id":"22793675","publisher":"机械工业出版社","isbn10":"7111414780","isbn13":"9787111414780","title":"深入理解Nginx","url":"https:\/\/api.douban.com\/v2\/book\/22793675","alt_title":"","author_intro":"陶辉，毕业于西安交通大学计算机科学与技术专业，曾就职于华为中央软件部、腾讯QQ空间、思科中国CRDC等公司，目前在阿里巴巴云计算公司的飞天团队工作，研究方向为介于IaaS和PaaS间的弹性计算，多年以来专注于Nginx的定制化应用，对Nginx的设计与特性有深刻认识，实战经验丰富，编写过许多优秀的Nginx模块并应用于企业级产品中，同时撰写了大量关于Nginx的技术文章。擅长Linux环境下高性能服务器的开发，以及分布式环境下海量数据存储的设计开发。","summary":"本书是阿里巴巴资深Nginx技术专家呕心沥血之作，是作者多年的经验结晶，也是目前市场上唯一一本通过还原Nginx设计思想，剖析Nginx架构来帮助读者快速高效开发HTTP模块的图书。\n本书首先通过介绍官方Nginx的基本用法和配置规则，帮助读者了解一般Nginx模块的用法，然后重点介绍如何开发HTTP模块（含HTTP过滤模块）来得到定制的Nginx，其中包括开发一个功能复杂的模块所需要了解的各种知识，如Nginx的基础数据结构、配置项的解析、记录日志的工具以及upstream、subrequest的使用方法等。在此基础上，综合Nginx框架代码分析Nginx的架构，介绍其设计理念和技巧，进一步帮助读者自由、有效地开发出功能丰富、性能一流的Nginx模块。","ebook_price":"30.00","price":"89.00元"},{"rating":{"max":10,"numRaters":407,"average":"6.6","min":0},"subtitle":"取代Apache的高性能Web服务器","author":["张宴"],"pubdate":"2010年2月","tags":[{"count":410,"name":"nginx","title":"nginx"},{"count":186,"name":"web","title":"web"},{"count":144,"name":"服务器","title":"服务器"},{"count":119,"name":"架构","title":"架构"},{"count":86,"name":"Web开发","title":"Web开发"},{"count":78,"name":"实战Nginx：取代Apache的高性能Web服务器","title":"实战Nginx：取代Apache的高性能Web服务器"},{"count":75,"name":"性能","title":"性能"},{"count":62,"name":"计算机","title":"计算机"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s4149106.jpg","binding":"平装","translator":[],"catalog":"第1部分 基础篇\n第1章 Nginx简介\n1.1 常用的Web服务器简介\n1.2 Nginx简介\n1.3 选择Nginx的理由\n1.4 Nginx与Apache、Lighttpd的综合对比\n第2章 Nginx服务器的安装与配置\n2.1 安装Nginx服务器所需要的系统资源\n2.2 Nginx的下载\n2.3 Nginx的安装\n2.4 Nginx的启动、停止、平滑重启\n2.5 Nginx的平滑重启\n2.6 Nginx的信号控制\n2.7 Nginx的平滑升级\n第2部分 进阶篇\n第3章 Nginx的基本配置与优化\n3.1 Nginx的完整配置示例\n3.2 Nginx的虚拟主机配置\n3.3 Nginx的日志文件配置与切割\n3.4 Nginx的压缩输出配置\n3.5 Nginx的自动列目录配置\n3.6 Nginx的浏览器本地缓存设置\n第4章 Nginx与PHP（FastCGI）的安装、配置与优化\n4.1 获取相关开源程序\n4.2 安装PHP 5.2.10（FastCGI模式）\n4.3 安装Nginx 0.8.15\n4.4 配置开机自动启动Nginx + PHP\n4.5 优化Linux内核参数\n4.6 在不停止Nginx服务的情况下平滑变更Nginx配置\n4.7 编写每天定时切割Nginx日志的脚本\n第5章 Nginx与JSP、ASP.NET、Perl的安装与配置\n5.1 Nginx与JSP（Tomcat）在Linux上的安装、配置\n5.2 Nginx与ASP.NET（Mono+FastCGI）在Linux上的安装、配置\n5.3 Nginx与Perl（FastCGI）在Linux上的安装、配置\n第6章 Nginx HTTP负载均衡和反向代理的配置与优化\n6.1 什么是负载均衡和反向代理\n6.2 常见的Web负载均衡方法\n6.3 Nginx负载均衡与反向代理的配置实例\n6.4 Nginx负载均衡的HTTP Upstream 模块\n6.5 Nginx负载均衡服务器的双机高可用\n第7章 Nginx的Rewrite规则编写实例\n7.1 什么是Nginx的Rewrite规则\n7.2 Nginx Rewrite规则相关指令\n7.3 PCRE正则表达式语法\n7.4 Nginx的Rewrite规则编写实例\n7.5 Nginx与Apache的Rewrite规则实例对比\n第8章 Nginx模块开发\n8.1 Nginx模块概述\n8.2 Nginx模块编写实践\n第9章 Nginx的Web缓存服务与新浪网的开源NCACHE模块\n9.1 什么是Web缓存？\n9.2 Nginx的Web缓存服务\n9.3 新浪网开源软件项目——基于Nginx的NCache网页缓存系统\n第3部分 实战篇\n第10章 Nginx在国内知名网站中的应用案例\n10.1 Nginx反向代理与负载均衡类网站应用案例\n10.2 Nginx+PHP类网站应用案例\n第11章 Nginx的非典型应用实例\n11.1 用HTTPS（SSL）构建一个安全的Nginx Web服务器\n11.2 采用Nginx搭建FLV视频服务器\n11.3 Nginx+PHP+MySQL在小内存VPS服务器上的优化\n11.4 采用Nginx搭建正向代理服务器\n第4部分 模块篇\n第12章 Nginx的核心模块\n12.1 主模块指令\n12.2 主模块变量\n12.3 事件模块指令\n第13章 Nginx的标准HTTP模块\n13.1 HTTP的核心模块\n13.2 HTTP Upstream模块\n13.3 Http Access 模块\n13.4 HTTP Auth Basic 模块\n13.5 Http Autoindex 模块\n13.6 Http Browser 模块\n13.7 Http Charset 模块\n13.8 Http Empty Gif模块\n13.9 Http Fcgi 模块\n13.10 geo 模块\n13.11 Gzip 模块\n13.12 Http Headers模块\n13.13 Http Index模块\n13.14 HTTP Referer模块\n13.15 Http Limit Zone模块\n13.16 Http Limit Req模块\n13.17 Http Log模块\n13.18 Http Map模块\n13.19 Http Memcached模块\n13.20 Http Proxy模块\n第14章 Nginx的其他HTTP模块\n14.1 Http Addition模块\n14.2 Embedded Perl模块\n14.3 Flv Stream模块\n14.3 flv 指令\n14.4 Http Gzip Static模块\n14.5 Http Random Index模块\n14.6 Http Geo IP模块\n14.7 Http RealIp模块\n14.8 Http SSL模块\n14.9 Http Stub Status模块\n14.10 Http Sub模块\n14.11 Http Dav模块\n14.12 Google Perftools模块\n14.13 Http XSLT模块\n14.14 Http Secure Link模块\n14.15 Http Image Filter模块\n第15章 Nginx的邮件模块\n15.1 Nginx邮件核心模块\n15.2 Nginx邮件认证模块\n15.3 Nginx邮件代理模块\n15.4 Nginx邮件SSL模块\n15.5 Nginx邮件模块配置实例\n索引\n参考资料","pages":"318","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s4149106.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s4149106.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s4149106.jpg"},"alt":"https:\/\/book.douban.com\/subject\/4251875\/","id":"4251875","publisher":"电子工业出版社","isbn10":"7121102471","isbn13":"9787121102479","title":"实战Nginx","url":"https:\/\/api.douban.com\/v2\/book\/4251875","alt_title":"","author_intro":"张宴，就职于北京金山软件公司，金山游戏官方网站──逍遥网（xoyo.com）系统架构师，技术支持部平台组组长。曾在新浪网、赶集网等公司任系统工程师、系统架构师，工作内容主要涉及：服务器系统架构设计与部署、系统运维与调优、网络故障解决、网站后端以及接口类PHP程序开发、Unix开源软件二次开发、服务器监控系统开发、系统运维与平台研发团队管理。","summary":"Nginx (“engine x”) 是俄罗斯人Igor Sysoev编写的一款高性能HTTP 和反向代理服务器。Nginx选择了epoll和kqueue作为网络I\/O模型，在高连接并发的情况下，Nginx是Apache服务器不错的替代品，它能够支持高达50 000个并发连接数的响应，运行稳定，且内存、CPU等系统资源消耗非常低。\n本书主要分为4个部分，第1部分为基础篇，介绍了Nginx服务器的安装与配置方法；第2部分为进阶篇，重点介绍了Nginx的配置优化方法、Nginx与PHP\/Ruby\/Python\/JSP\/Perl\/Memcached的结合配置方法、Nginx HTTP反向代理与负载均衡的配置与优化、Nginx模块开发等，最后还分析了新浪的开源软件项目──基于Nginx的NCache网页缓存系统；第3部分为实战篇，分析了Nginx在国内知名网站（如新浪播客、搜狐博客等）中的应用案例；第4部分为模块篇，对Nginx的基本模块和第三方模块进行了集中介绍。\n本书是为对配置管理Nginx服务器感兴趣的读者准备的，适用于以前没有接触过Nginx，或者对Nginx有一些了解并希望能够进一步深入学习的专业系统工程师、个人网站站长及Linux\/Unix从业人员。","price":"55.00元"},{"rating":{"max":10,"numRaters":37,"average":"7.1","min":0},"subtitle":"","author":["高群凯"],"pubdate":"2013-5-1","tags":[{"count":92,"name":"Nginx","title":"Nginx"},{"count":26,"name":"网络编程","title":"网络编程"},{"count":23,"name":"计算机","title":"计算机"},{"count":16,"name":"源码分析","title":"源码分析"},{"count":14,"name":"编程","title":"编程"},{"count":14,"name":"nginx","title":"nginx"},{"count":12,"name":"深入剖析Nginx","title":"深入剖析Nginx"},{"count":9,"name":"技术","title":"技术"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s26591024.jpg","binding":"平装","translator":[],"catalog":"目　录\n第1章　源码分析的准备工作\t1\n1.1　主要特性\t1\n1.2　源码下载\t4\n1.3　源码目录结构\t5\n1.4　源码分析工具\t6\n1.5　测试辅助工具\t7\n1.6　编译与执行\t8\n1.7　其他准备\t9\n第2章　跟踪与调试\t10\n2.1　利用gdb调试\t10\n2.1.1　绑定Nginx到gdb\t10\n2.1.2　gdb的watch指令\t13\n2.1.3　Nginx对gdb的支持\t14\n2.1.4　宏\t16\n2.1.5　cgdb\t18\n2.2　利用日志信息跟踪Nginx\t19\n2.3　利用strace\/pstack调试Nginx\t21\n2.4　获得Nginx程序完整执行流程\t23\n2.5　加桩调试\t29\n2.6　特殊应用逻辑的调试\t31\n第3章　进程模型\t35\n3.1　整体架构\t35\n3.2　核心进程模型\t36\n3.2.1　监控进程\t36\n3.2.2　工作进程\t38\n3.3　Cache进程模型\t38\n3.3.1　Cache管理进程\t40\n3.3.2　Cache加载进程\t42\n3.4　进程通信\t43\n3.5　共享内存\t46\n3.6　slab机制\t50\n3.7　信号处理\t59\n3.7.1　准备工作\t60\n3.7.2　设置生效\t61\n3.7.3　处理实例\t62\n第4章　数据结构\t65\n4.1　内存池\t65\n4.2　Hash\t72\n4.3　Radix tree\t77\n第5章　配置解析\t81\n5.1　配置文件格式\t81\n5.2　配置项目解析准备\t84\n5.3　配置文件解析流程\t86\n5.4　配置信息组织结构\t95\n5.5　配置信息的继承\t108\n第6章　模块综述\t113\n6.1　Handler模块\t116\n6.2　Filter模块\t124\n6.3　Upstream模块\t127\n6.4　Load-balance模块\t132\n第7章　事件管理机制\t134\n7.1　I\/O多路复用模型\t134\n7.2　epoll模型\t138\n7.3　事件处理\t144\n7.4　负载均衡\t146\n7.4.1　客户端请求均衡\t146\n7.4.2　多核绑定\t152\n7.5　超时管理\t153\n第8章　变量机制\t160\n8.1　初识变量\t160\n8.2　支撑机制\t163\n8.3　脚本引擎\t174\n8.4　执行顺序\t180\n第9章　请求处理与响应\t182\n9.1　创建监听套接口\t182\n9.2　创建连接套接口\t188\n9.3　请求处理\t191\n9.4　数据响应\t197\n9.5　子请求\t201\n9.6　连接关闭\t214\n9.6.1　keepalive机制\t217\n9.6.2　延迟关闭机制\t221\n第10章　请求定位\t228\n10.1　Location的生成\t228\n10.2　Location的整理\t232\n10.3　Server的定位\t239\n10.4　Location的定位与使用\t242\n10.5　未命名location的使用\t244\n10.6　try_files指令\t248\n第11章　动态页面请求处理\t252\n11.1　测试环境\t252\n11.2　客户端发起Php请求\t255\n11.3　请求转发\t259\n11.3.1　建立连接\t261\n11.3.2　发送请求数据\t265\n11.4　数据响应\t267\n11.4.1　接收并处理Fastcgi响应头\t267\n11.4.2　接收并发送Fastcgi响应体\t273\n第12章　过滤模块\t283\n12.1　ngx_http_not_modified_filter_module\t283\n12.1.1　304状态码\t283\n12.1.2　412状态码\t285\n12.2　ngx_http_headers_filter_module\t288\n12.2.1　HTTP缓存功能的扩展\t289\n12.2.2　增加自定义响应头\t290\n12.3　ngx_http_gzip_filter_module\t291\n12.4　ngx_http_range_filter_module\t293\n第13章　负载均衡\t299\n13.1　负载均衡策略\t300\n13.2　加权轮询\t301\n13.2.1　准备工作\t301\n13.2.2　选择后端服务器\t304\n13.2.3　后端服务器权值计算\t307\n13.2.4　释放后端服务器\t307\n13.3　IP哈希\t310\n选择后端服务器\t310\n13.4　两种策略对比\t313\n第14章　访问控制\t315\n14.1　禁止指定IP访问\t315\n14.2　密码认证访问\t318\n14.3　其他访问控制措施\t327\n14.3.1　禁止用户通过IP地址访问服务器\t327\n14.3.2　禁止对某目录或某类文件的访问\t327\n附录A\t329\n附录B\t332\n附录C\t333","pages":"334","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s26591024.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s26591024.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s26591024.jpg"},"alt":"https:\/\/book.douban.com\/subject\/23759678\/","id":"23759678","publisher":"人民邮电出版社","isbn10":"7115307628","isbn13":"9787115307620","title":"深入剖析Nginx","url":"https:\/\/api.douban.com\/v2\/book\/23759678","alt_title":"","author_intro":"高群凯，重庆大学计算机学院硕士毕业，接触Linux等自由\/开源软件已有11年，在技术领域的兴趣主要包括Linux、高性能服务（Web服务如Lighttpd、Nginx、Apache等；数据库服务如Mongodb等），以及x86、MIPS（Cavium、RMI、Tilera）等。一直在深信服科技有限公司工作，专职从事Linux相关研究，对系统底层性能优化、内核oops宕机以及x86疑难问题排查等相关技术有一些研究和积累。曾著有《Lighttpd源码分析》一书。个人博客：http:\/\/lenky.info\/。","summary":"Nginx是一款功能强大的高性能Web和反向代理服务器，最初由俄罗斯程序员Igor Sysoev开发，而当前由Igor Sysoev领导的专业公司Nginx, Inc.进行持续的维护与更新。\nNginx可以在大多数UNIX或类UNIX系统上编译运行，比如FreeBSD、Solaris、Linux等，并且官方还提供Windows下的可执行版本。目前，Nginx在Netflix 、Wordpress.com、新浪、网易、腾讯、豆瓣等国内外众多知名网站中得到应用。\n从源码剖析的角度出发，是程序员常用的学习和提高方法。本书是作者多年研读Nginx源码、深入思考和不断结合实践的结晶。本书重点在于通过剖析Nginx的源码，探究其功能结构及其内部实现原理。\n本书内容包括：\n◎ 剖析Nginx源码前的准备工作；\n◎ 跟踪和调试的方法；\n◎ Nginx的整体架构和进程模型；\n◎ Nginx的数据结构，包括内存池、Hash 和Radixtree ；\n◎ Nginx的配置指令；\n◎ Nginx主要功能模块，包括Handler 、Filter 、Load-balance等；\n◎ I\/O多路复用模型和I\/O事件处理等；\n◎ 完整的客户端请求分析，包括请求处理与响应、请求定位、动态页面请求处理等；\n◎ Filter模块实例；\n◎ 负载均衡策略，包括加权轮询策略和IP哈希策略；\n◎ Nginx的编译模块、运行配置。\n本书适合系统程序员、软件开发工程师、Nginx高级运维工程师阅读参考，对于有志从事相关工作的IT专业学生，更是不可多得的学习资料。","price":"59.00元"},{"rating":{"max":10,"numRaters":50,"average":"6.6","min":0},"subtitle":"","author":["内德尔库(Clement Nedelcu)"],"pubdate":"2012-1-1","tags":[{"count":50,"name":"nginx","title":"nginx"},{"count":24,"name":"HTTP","title":"HTTP"},{"count":19,"name":"server","title":"server"},{"count":13,"name":"计算机","title":"计算机"},{"count":9,"name":"互联网","title":"互联网"},{"count":8,"name":"Nginx","title":"Nginx"},{"count":5,"name":"2012","title":"2012"},{"count":4,"name":"计算机网络","title":"计算机网络"}],"origin_title":"Nginx HTTP server","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s27294108.jpg","binding":"平装","translator":["陶利军"],"catalog":"目录\n前言 1\n第1章 准备工作环境 7\n设置终端仿真器 7\n查找并下载PuTTY 8\n建立会话 8\n使用PuTTY和shell 10\n基本的shell命令 11\n文件和目录管理 11\n用户和组管理 15\n程序和进程 18\n了解Linux文件系统 22\n目录结构 22\n特殊文件和设备 25\n文件和inode 28\nEXT3文件系统 29\n文件处理 32\n系统管理工具 37\n以超级管理员身份运行\n命令 37\n系统检查和维护 39\n软件包 40\n文件和权限 43\n小结 46\n第2章 下载和安装Nginx 47\n准备先决条件 47\nGCC——GNU编译器集合 48\nPCRE库 49\nzlib 库 50\nOpenSSL 50\n下载Nginx 51\n网站和资源 51\n版本分支 52\n功能 53\n下载并解压 54\n配置选项 55\n容易的方法 55\n路径选项 56\n先决条件选项 58\n模块选项 59\n杂项 61\n配置举例 62\n普通的HTTP和HTTPS服务器 67\n建立配置的问题 65\n编译和安装 66\n控制Nginx 服务 67\n守护进程和服务 67\n用户和组 68\nNginx命令行开关项 68\n启动和停止守护进程 69\n测试配置文件 69\n其他开关选项 70\n添加Nginx作为系统服务 71\nSystem V 脚本 71\n什么是init脚本? 73\n为Nginx建立init脚本 73\n安装Nginx的init脚本 75\n小结 77\n第3章 Nginx的基本配置 79\n配置文件的语法 79\n配置指令 80\n组织和包含 81\n指令块 83\n高级语言规则 84\n基本模块指令 86\n什么是基本模块? 87\nNginx 进程结构 87\n核心模块指令 88\nEvents模块 93\nConfiguration模块 95\n适合你需求的配置文件 95\n理解默认的配置文件 95\n必要的调整 96\n适当选择硬件 97\n测试服务器 99\n建立测试服务器 99\n性能测试 100\n平滑升级Nginx 105\n小结 106\n第4章 HTTP配置 107\nHTTP核心模块 107\n区段的结构 108\n模块指令 109\n套接字和主机的配置 110\n路径和文档 114\n客户端请求 117\nMIME 类型 121\n限制和约束 123\n文件处理和缓存 125\n其他指令 127\n模块变量 130\n请求头 130\n响应头 131\nNginx产生的变量 132\nLocation区段 133\nLocation修饰符 133\n查找顺序和优先级 136\n小结 139\n第5章 模块配置 141\nRewrite模块 141\n正则表达式 142\n内部请求 146\n条件结构 151\n指令 153\n通用重写规则 156\nSSI模块 157\n模块指令和变量 158\nSSI命令 160\n其他模块 164\n站点访问和日志记录 164\n限制和约束 168\n内容和编码 170\n与访问者相关的模块 179\nSSL和安全 184\n其他杂项模块 187\n第三方模块 189\n小结 190\n第6章 Nginx与PHP、\nPython 191\nFastCGI入门 192\n理解Web服务的机制 192\nCGI通用网关接口 193\nFastCGI 194\n主要指令 195\nFastCGI缓存 201\nUpstream块 204\nNginx＋PHP 207\n结构 207\nPHP-FPM 208\n设置PHP和PHP-FPM 208\nNginx 配置 211\nNginx与Python 212\nDjango 212\n设置Python 和 Django 213\nNginx的配置文件 215\n小结 215\n第7章 Nginx和Apache 217\nNginx作为反向代理 217\n理解问题根源 218\n反向代理机制 219\n优势和劣势 220\nNginx代理模块 221\n主要指令 222\n配置Apache和Nginx 230\n重新配置Apache 231\n配置 Nginx 233\n高级配置 237\n其他步骤 238\n转发正确的IP地址 238\nSSL问题及解决方案 239\n服务器面板控制问题 239\n小结 240\n第8章 从Apache到Nginx 241\nNginx对Apache 241\n特征 242\n灵活性和团队 244\n性能 244\n使用 245\n结论 246\n移植Apache配置 246\n指令 246\n模块 249\n虚拟主机和配置部分 250\n.htaccess文件 254\n重写规则 257\n一般意见 257\nWordPress 259\nMediaWiki 261\nvBulletin 262\n小结 263\n附录A 指令索引 265\n附录B 模块参考 287\n附录C 疑难解答 299\n索引 305\n译者注 329","pages":"346","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s27294108.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s27294108.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s27294108.jpg"},"alt":"https:\/\/book.douban.com\/subject\/10519268\/","id":"10519268","publisher":"清华大学出版社","isbn10":"7302270899","isbn13":"9787302270898","title":"学习Nginx HTTP Server中文版","url":"https:\/\/api.douban.com\/v2\/book\/10519268","alt_title":"Nginx HTTP server","author_intro":"Clement Nedelcu出生并成长于法国，在英国、法国和中国的大学接受过教育。他曾在中国江苏科学技术大学担任计算机教师。他同时兼任法国企业的技术顾问，他精通Web和Microsoft.NET开发以及Linux服务器管理。自2005年以来，他在业余时间一直管理着一个大型的网站，最终领略到Nginx的好处，由此开博讨论Nginx，由此有了本书……","summary":"Clement Nedelcu编著的《学习Nginx HTTP Server(中文版)》是Nginx新手管理员和资深管理员的理想读物。对于初学者，可从中学习如何以快速而安全的方式安装Nginx并对各个模块进行配置。对于有经验的管理员，它提供了不同视角的解决方案。《学习Nginx HTTP Server(中文版)》中提供Nginx所有模块和指令的完整参考，解释了如何用Nginx取代现有服务器，如何将Nginx配置为现有服务器的前端系统。完成本书的阅读后，读者能够轻松实现Nginx服务器，提升Web应用的速度。","price":"49.00元"},{"rating":{"max":10,"numRaters":49,"average":"6.7","min":0},"subtitle":"","author":["Clément Nedelcu"],"pubdate":"2010-7-20","tags":[{"count":57,"name":"nginx","title":"nginx"},{"count":25,"name":"HTTP","title":"HTTP"},{"count":23,"name":"server","title":"server"},{"count":15,"name":"服务器","title":"服务器"},{"count":14,"name":"web","title":"web"},{"count":7,"name":"计算机","title":"计算机"},{"count":7,"name":"Nginx","title":"Nginx"},{"count":5,"name":"互联网","title":"互联网"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s6987071.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"348","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s6987071.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s6987071.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s6987071.jpg"},"alt":"https:\/\/book.douban.com\/subject\/4925996\/","id":"4925996","publisher":"Packt Publishing","isbn10":"1849510865","isbn13":"9781849510868","title":"Nginx HTTP Server","url":"https:\/\/api.douban.com\/v2\/book\/4925996","alt_title":"","author_intro":"","summary":"","price":"USD 44.99"},{"rating":{"max":10,"numRaters":9,"average":"0.0","min":0},"subtitle":"From Beginner to Pro","author":["Rahul Soni"],"pubdate":"2016-9-24","tags":[{"count":2,"name":"计算机","title":"计算机"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29014167.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"240","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s29014167.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s29014167.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29014167.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26864609\/","id":"26864609","publisher":"Apress","isbn10":"1484216571","isbn13":"9781484216576","title":"Nginx","url":"https:\/\/api.douban.com\/v2\/book\/26864609","alt_title":"","author_intro":"","summary":"","price":"GBP 27.99"},{"rating":{"max":10,"numRaters":48,"average":"6.7","min":0},"subtitle":"","author":["苗泽"],"pubdate":"2013-10","tags":[{"count":57,"name":"Nginx","title":"Nginx"},{"count":26,"name":"nginx","title":"nginx"},{"count":12,"name":"运维","title":"运维"},{"count":12,"name":"web","title":"web"},{"count":10,"name":"互联网","title":"互联网"},{"count":9,"name":"WebServer","title":"WebServer"},{"count":7,"name":"计算机","title":"计算机"},{"count":5,"name":"网络","title":"网络"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s27294106.jpg","binding":"平装","translator":[],"catalog":"第1章  Nginx初探\t1\n1.1  Nginx的历史\t1\n1.2  常见服务器产品介绍\t2\n1.2.1  Apache服务器\t2\n1.2.2  Microsoft IIS\t3\n1.2.3  Tomcat服务器\t3\n1.2.4  Lighttpd服务器\t4\n1.2.5  Nginx诞生记\t4\n1.2.6  版本变更大事记\t5\n1.3  Nginx的功能特性\t5\n1.3.1  基本HTTP服务\t6\n1.3.2  高级HTTP服务\t6\n1.3.3  邮件代理服务\t7\n1.4  常用功能介绍\t7\n1.4.1  HTTP代理和反向代理\t7\n1.4.2  负载均衡\t7\n1.4.3  Web缓存\t8\n1.5  本章小结\t9\n第2章  Nginx服务器的安装部署\t10\n2.1  如何获取Nginx服务器安装文件\t10\n2.1.1  获取新版本的Nginx服务器\t11\n2.1.2  获取Nginx服务器的历史版本\t11\n2.2  安装Nginx服务器和基本配置\t12\n2.2.1  Windows版本的安装\t12\n2.2.2  Linux版本的编译和安装：准备工作\t13\n2.2.3  Linux版本的编译和安装：Nginx软件的自动脚本\t14\n2.2.4  Linux版本的编译和安装：Nginx源代码的编译和安装\t18\n2.3  Nginx服务的启停控制\t21\n2.3.1  Nginx服务的信号控制\t21\n2.3.2  Nginx服务的启动\t22\n2.3.3  Nginx服务的停止\t23\n2.3.4  Nginx服务的重启\t23\n2.3.5  Nginx服务器的升级\t24\n2.4  Nginx服务器基础配置指令\t24\n2.4.1  nginx.conf文件的结构\t25\n2.4.2  配置运行Nginx服务器用户（组）\t28\n2.4.3  配置允许生成的worker process数\t28\n2.4.4  配置Nginx进程PID存放路径\t29\n2.4.5  配置错误日志的存放路径\t29\n2.4.6  配置文件的引入\t30\n2.4.7  设置网络连接的序列化\t30\n2.4.8  设置是否允许同时接收多个网络连接\t30\n2.4.9  事件驱动模型的选择\t30\n2.4.10 配置最大连接数\t31\n2.4.11 定义MIME-Type\t31\n2.4.12 自定义服务日志\t32\n2.4.13 配置允许sendfile方式传输文件\t33\n2.4.14 配置连接超时时间\t33\n2.4.15 单连接请求数上限\t34\n2.4.16 配置网络监听\t34\n2.4.17 基于名称的虚拟主机配置\t35\n2.4.18 基于IP的虚拟主机配置\t36\n2.4.19 配置location块\t38\n2.4.20 配置请求的根目录\t39\n2.4.21 更改location的URI\t39\n2.4.22 设置网站的默认首页\t40\n2.4.23 设置网站的错误页面\t40\n2.4.24 基于IP配置Nginx的访问权限\t42\n2.4.25 基于密码配置Nginx的访问权限\t43\n2.5  Nginx服务器基础配置实例\t43\n2.5.1  测试myServer1的访问\t46\n2.5.2  测试myServer2的访问\t46\n2.6  本章小结\t47\n第3章  Nginx服务器架构初探\t48\n3.1  模块化结构\t48\n3.1.1  什么是“模块化设计”\t48\n3.1.2  Nginx模块化结构\t49\n3.2  Nginx服务器的Web请求处理机制\t54\n3.2.1  多进程方式\t54\n3.2.2  多线程方式\t55\n3.2.3  异步方式\t55\n3.2.4  Nginx服务器如何处理请求\t56\n3.2.5  Nginx服务器的事件处理机制\t57\n3.3  Nginx服务器的事件驱动模型\t57\n3.3.1  事件驱动模型概述\t57\n3.3.2  Nginx中的事件驱动模型\t58\n3.3.3  select库\t59\n3.3.4  poll库\t59\n3.3.5  epoll库\t60\n3.3.6  rtsig模型\t60\n3.3.7  其他事件驱动模型\t61\n3.4  设计架构概览\t61\n3.4.1  Nginx服务器架构\t62\n3.4.2  Nginx服务器的进程\t63\n3.4.3  进程交互\t64\n3.4.4  Run Loops事件处理循环模型\t64\n3.5  本章小结\t65\n第4章  Nginx服务器的高级配置\t67\n4.1  针对IPv4的内核7个参数的配置优化\t67\n4.2  针对CPU的Nginx配置优化的2个指令\t68\n4.3  与网络连接相关的配置的4个指令\t70\n4.4  与事件驱动模型相关的配置的8个指令\t71\n4.5  本章小结\t73\n第5章  Nginx服务器的Gzip压缩\t74\n5.1  由ngx_http_gzip_module模块处理的9个指令\t74\n5.2  由ngx_http_gzip_static_module模块处理的指令\t78\n5.3  由ngx_http_gunzip_module模块处理的2个指令\t79\n5.4  Gzip压缩功能的使用\t80\n5.4.1  Gzip压缩功能综合配置实例\t80\n5.4.2  Gzip压缩功能与IE6浏览器运行脚本的兼容问题\t82\n5.4.3  Nginx与其他服务器交互时产生的Gzip压缩功能相关问题\t83\n5.5  本章小结\t84\n第6章  Nginx服务器的Rewrite功能\t85\n6.1  Nginx后端服务器组的配置的5个指令\t85\n6.2  Rewrite功能的配置\t88\n6.2.1  “地址重写”与“地址转发”\t88\n6.2.2  Rewrite规则\t89\n6.2.3  if指令\t89\n6.2.4  break指令\t91\n6.2.5  rewrite指令\t92\n6.2.6  rewrite_log指令\t94\n6.2.7  set指令\t94\n6.2.8  uninitialized_variable_warn指令\t94\n6.2.9  Rewrite常用全局变量\t94\n6.3  Rewrite的使用\t95\n6.3.1  域名跳转\t95\n6.3.2  域名镜像\t96\n6.3.3  独立域名\t97\n6.3.4  目录自动添加“\/”\t98\n6.3.5  目录合并\t99\n6.3.6  防盗链\t99\n6.4  本章小结\t101\n第7章  Nginx服务器的代理服务\t102\n7.1  正向代理与反向代理的概念\t102\n7.2  Nginx服务器的正向代理服务\t104\n7.2.1  Nginx服务器正向代理服务的配置的3个指令\t104\n7.2.2  Nginx服务器正向代理服务的使用\t105\n7.3  Nginx服务器的反向代理服务\t105\n7.3.1  反向代理的基本设置的21个指令\t106\n7.3.2  Proxy Buffer的配置的7个指令\t113\n7.3.3  Proxy Cache的配置的12个指令\t115\n7.4   Nginx服务器的负载均衡\t119\n7.4.1  什么是负载均衡\t120\n7.4.2  Nginx服务器负载均衡配置\t120\n7.4.3  配置实例一：对所有请求实现一般轮询规则的负载均衡\t120\n7.4.4  配置实例二：对所有请求实现加权轮询规则的负载均衡\t121\n7.4.5  配置实例三：对特定资源实现负载均衡\t121\n7.4.6  配置实例四：对不同域名实现负载均衡\t122\n7.4.7  配置实例五：实现带有URL重写的负载均衡\t123\n7.5  本章小结\t124\n第8章  Nginx服务器的缓存机制\t125\n8.1  Web缓存技术简述\t125\n8.2  404错误驱动Web缓存\t126\n8.3  资源不存在驱动Web缓存\t127\n8.4  基于memcached的缓存机制的6个指令\t128\n8.5  Proxy Cache缓存机制\t130\n8.6  Nginx与Squid组合\t133\n8.6.1  Squid服务器的配置\t133\n8.6.2  Nginx服务器的配置\t133\n8.7  基于第三方模块ncache的缓存机制\t134\n8.8  本章小结\t134\n第9章  Nginx服务器的邮件服务\t135\n9.1  邮件服务\t135\n9.2  Nginx邮件服务的配置的12个指令\t136\n9.3  Nginx邮件服务配置实例\t140\n9.4  本章小结\t142\n第10章  Nginx源码结构\t143\n10.1  Nginx源码的3个目录结构\t143\n10.1.1  core目录\t144\n10.1.2  event目录\t144\n10.1.3  http目录\t145\n10.2  Nginx源码的模块化结构\t145\n10.2.1  公共功能\t145\n10.2.2  配置解析\t146\n10.2.3  内存管理\t147\n10.2.4  事件驱动\t147\n10.2.5  日志管理\t148\n10.2.6  HTTP服务\t148\n10.2.7  Mail服务\t149\n10.2.8  模块支持\t150\n10.3  本章小结\t150\n第11章  Nginx基本数据结构\t151\n11.1  ngx_module_s结构体\t151\n11.1.1  分类标识ctx_index\t152\n11.1.2  模块计数器index\t152\n11.1.3  模块上下文\t153\n11.1.4  回调函数\t153\n11.2  ngx_command_s结构体\t154\n11.2.1  type成员\t154\n11.2.2  函数指针set\t156\n11.2.3  conf和offset\t156\n11.3  3个基本模块的指令集数组结构\t157\n11.3.1  http模块\t157\n11.3.2  event模块\t158\n11.3.3  mail模块\t159\n11.4  ngx_ pool_s结构体\t160\n11.4.1  ngx_pool_data_t结构体\t160\n11.4.2  ngx_pool_large_s结构体\t161\n11.4.3  ngx_pool_cleanup_s结构体\t161\n11.5  Nginx socket相关的数据结构\t161\n11.5.1  ngx_listening_s结构体\t161\n11.5.2  ngx_http_conf_port_t结构体\t162\n11.5.3  ngx_http_conf_addr_t结构体\t163\n11.6  ngx_event_s结构体\t163\n11.7  ngx_connection_s结构体\t164\n11.8  ngx_cycle_s结构体\t166\n11.9  ngx_conf_s结构体\t168\n11.9.1  配置上下文*ctx\t169\n11.9.2  指令类型type\t169\n11.10  ngx_signal_t结构体\t170\n11.11  ngx_process_t结构体\t172\n11.12  本章小结\t172\n第12章  Nginx的启动初始化\t173\n12.1  Nginx启动过程概览\t173\n12.1.1  程序初始化\t173\n12.1.2  启动多进程\t174\n12.2  Nginx的初始化\t175\n12.2.1  读取并处理启动参数\t176\n12.2.2  继承socket\t185\n12.2.3  初始化时间及建立新的cycle结构\t187\n12.2.4  建立core模块上下文结构\t188\n12.2.5  解析配置文件\t190\n12.2.6  初始化core模块上下文\t196\n12.2.7  创建PID文件\t199\n12.2.8  处理监听socket\t199\n12.2.9  信号设置\t201\n12.2.10  启动Master Process\t203\n12.2.11  Nginx初始化过程总结\t204\n12.3  Nginx的启动\t205\n12.3.1  主进程设置信号阻塞\t206\n12.3.2  设置进程标题\t206\n12.3.3  启动工作进程\t208\n12.3.4  启动缓存索引重建及管理进程\t211\n12.3.5  循环处理信号\t212\n12.3.6  Nginx启动过程总结\t216\n12.4  本章小结\t217\n第13章  Nginx的时间管理\t218\n13.1  获取系统时间的一般方法\t218\n13.1.1  系统调用的开销\t218\n13.1.2  gettimeofday()\t219\n13.2  Nginx时间管理的工作原理\t220\n13.2.1  时间缓存的更新\t220\n13.2.2  更新时间缓存的时机\t224\n13.3  缓存时间的精度\t226\n13.3.1  设置缓存时间的精度\t226\n13.3.2  缓存时间精度的控制原理\t226\n13.4  本章小结\t228\n第14章  Nginx的内存管理\t229\n14.1  内存池的逻辑结构\t229\n14.2  内存池的管理\t230\n14.2.1  创建内存池\t231\n14.2.2  销毁内存池\t234\n14.2.3  重置内存池\t235\n14.3  内存的使用\t235\n14.3.1  申请内存\t235\n14.3.2  释放内存\t241\n14.3.3  回收内存\t241\n14.4  本章小结\t243\n第15章  Nginx工作进程\t244\n15.1  工作进程概览\t244\n15.2  相关源码分析\t245\n15.2.1  设置工作进程运行环境\t246\n15.2.2  监听和处理进程控制事件\t249\n15.2.3  接收网络请求事件\t250\n15.2.4  执行进程控制\t254\n15.3  Nginx服务器进程间通信\t256\n15.3.1  Linux进程间通信方式\t256\n15.3.2  Linux进程间双工通信的实现\t257\n15.3.3  通信通道的建立和设置\t257\n15.3.4  通信通道的使用\t259\n15.3.5  消息的读写\t259\n15.4  本章小结\t263\n第16章  Nginx的模块编程\t264\n16.1  模块的种类\t264\n16.2  模块开发实践\t265\n16.2.1  “Hello_Nginx”模块编程实例\t265\n16.2.2  模块的结构\t268\n16.2.3  模块命名规则\t272\n16.3  模块的编译与安装\t272\n16.4  本章小结\t274\n第17章  Nginx在动态网站建设中的应用实例\t275\n17.1  Nginx在JSP网站建设中的应用\t275\n17.1.1  环境描述\t275\n17.1.2  特别模块说明\t276\n17.1.3  配置方案\t276\n17.2  Nginx在PHP网站建设中的应用\t278\n17.2.1  环境描述\t278\n17.2.2  特别模块说明\t279\n17.2.3  配置方案\t280\n17.3  Nginx+Perl脚本在网站建设中的应用\t281\n17.3.1  环境描述\t282\n17.3.2  特别模块说明\t282\n17.3.3  配置方案\t282\n17.4  本章小结\t285\n第18章  Nginx经典应用——LNAMP\t286\n18.1  LNAMP概述\t286\n18.2  手动部署和配置\t287\n18.2.1  环境准备\t287\n18.2.2  安装和配置MySQL\t288\n18.2.3  安装和配置Apache\t289\n18.2.4  安装 PHP\t289\n18.3  自动安装\t293\n18.4  本章小结\t293\n附录A  Nginx内置变量\t294\n附录B  正则表达式语法\t296","pages":"300","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s27294106.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s27294106.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s27294106.jpg"},"alt":"https:\/\/book.douban.com\/subject\/25773187\/","id":"25773187","publisher":"电子工业出版社","isbn10":"7121215187","isbn13":"9787121215186","title":"Nginx高性能Web服务器详解","url":"https:\/\/api.douban.com\/v2\/book\/25773187","alt_title":"","author_intro":"苗泽，Linux研发工程师，GIS研发工程师，分布式系统研究人员。先后在中国科学院地理科学与资源研究所、北京邦诺存储科技有限公司研发中心、中国科学院电子学研究所从实研发工作。热爱互联网，并热衷于各种Web技术，对多种语言均有涉猎，擅长Linux和GIS相关研发工作，拥有丰富的Web技术实战经验，愿意与他人分享自己对技术的理解与感悟。","summary":"《Nginx高性能Web服务器详解》全面介绍了当前Internet上流行的一款开放源代码的Web服务器——Nginx。全书一共分为四大部分，分别从入门、功能、实现和应用等四个方面对Nginx服务器的知识进行完整阐述，从而满足广大读者在应用Nginx服务器时的普遍性需求。同时也深入剖析了Nginx服务器的工作原理和实现技术，对其中使用到的数据结构和方法进行了详细阐述，并且结合实际的应用情况给出了多个基于Nginx服务器，同时还部署有其他典型服务器的分布式网站架构部署配置。\n《Nginx高性能Web服务器详解》特别适合于希望了解和掌握Nginx服务器应用技术和实现技术的广大教师、学生和电脑爱好者阅读，对使用Nginx服务器搭建Web服务器架构或进行网络服务器应用开发的技术人员尤其具有重要的阅读和参考价值。","price":"59.00元"},{"rating":{"max":10,"numRaters":27,"average":"6.2","min":0},"subtitle":"高性能Web服务器详解与运维","author":["陶利军"],"pubdate":"2012-6-1","tags":[{"count":39,"name":"nginx","title":"nginx"},{"count":16,"name":"Linux","title":"Linux"},{"count":13,"name":"服务器","title":"服务器"},{"count":11,"name":"运维","title":"运维"},{"count":8,"name":"Server","title":"Server"},{"count":6,"name":"计算机网络","title":"计算机网络"},{"count":6,"name":"计算机","title":"计算机"},{"count":6,"name":"web","title":"web"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s27298828.jpg","binding":"平装","translator":[],"catalog":"第1部分 Nginx服务器\n第1章 Nginx的功能\n1.1 功能描述\n1.1.1 基本HTTP功能\n1.1.2 其他HTTP功能\n1.1.3 邮件代理服务器功能\n1.1.4 架构和可扩展性\n1.1.5 被测试的系统和平台\n1.2 服务器的类型\n1.3 认识Nginx服务器的基本模块\n1.3.1 Nginx的内核模块\n1.3.2 Nginx的事件模块\n1.3.3 Nginx的HTTP内核模块\n第2章 Nginx的模块管理和\n进程管理\n2.1 模块管理\n2.1.1 从源码看模块\n2.1.2 选择使用Nginx的模块\n2.1.3 Nginx使用第三方模块\n2.2 进程管理\n2.2.1 master进程和worker进程\n2.2.2 关于worker数目的设置\n2.3 针对Nginx对Linux系统的优化\n2.3.1 关闭系统中不需要的服务\n2.3.2 优化写磁盘操作\n2.3.3 优化资源限制\n2.3.4 优化内核TCP选项\n2.4 优化Nginx服务器\n2.4.1 关闭访问日志\n2.4.2 使用epoll\n2.4.3 Nginx服务器配置优化\n第3章 Nginx如何处理一个请求\n3.1 IP、域名部分的处理\n3.1.1 基于名字的虚拟主机\n3.1.2 阻止处理对不明确主机名的请求\n3.1.3 基于IP和域名的虚拟域名服务器处理请求\n3.2 URI部分的处理\n3.2.1 实例\n3.2.2 分析\n第4章 服务器名字\n4.1 通配符名字\n4.2 正则表达式名字\n4.3 其他不同种类的名字\n4.4 名字优化\n4.5 兼容性\n4.6 对服务器名字的扩展\n4.7 基于目录名的域名访问\n4.7.1 正则表达式处于主机名字的位置上\n4.7.2 正则表达式处于域名的位置上\n4.8 关于$1、$2…的使用\n第5章 协助用户操作Nginx的工具\n5.1 工具1——nginx.vim\n5.1.1 下载与安装\n5.1.2 使用\n5.2 工具2——eperusio-nginx_ensit\n5.2.1 下载与安装\n5.2.2 相关命令\n5.2.3 实例\n5.3 工具3——htpasswd.py\n5.3.1 下载文件\n5.3.2 命令的使用方法\n5.4 工具4——Nginx启动脚本\n第6章 5xx错误及处理\n6.1 500内部服务器错误\n6.1.1 问题分析\n6.1.2 问题解决\n6.2 502问题—— 502 bad gateway\n6.3 504问题—— 504 gatewaytime-out\n第7章 使用TCMalloc优化Nginx\n7.1 相关安装\n7.2 配置示例\n7.3 指令\n7.4 使用实例\n第8章 PCRE正则表达式\n8.1 安装PCRE\n8.2 命令\n8.2.1 pcre-config命令\n8.2.2 pcretest命令\n8.3 man目录\n8.4 Nginx与正则表达式\n8.4.1 正则表达式支持UTF-8\n8.4.2 Nginx使用正则表达式\n第9章 Nginx高可用的实现\n9.1 安装Heartbeat\n9.1.1 下载安装glue\n9.1.2 下载安装Heartbeat\n9.1.3 安装agents\n9.2 配置Heartbeat\n9.2.1 ha.cf文件\n9.2.2 haresources文件\n9.2.3 authkeys文件\n9.3 启动Heartbeat\n9.3.1 环境部署\n9.3.2 启动主Heartbeat\n9.3.3 启动备用Heartbeat\n9.4 测试Heartbeat\n9.4.1 宕掉主节点\n9.4.2 重新启动主节点\n第10章 10个QA\n10.1 什么是Nginx\n10.2 Nginx可以安装在哪些操作系统下\n10.3 Nginx在Windows下的性能如何\n10.4 Nginx与Apache比较有哪些优点\n10.5 Nginx解决了C10k问题\n10.6 从Nginx接收客户端请求处理的角度来说，它与Apache有何不同\n10.7 安装完成Nginx后，如何查看Nginx的版本\n10.8 安装完成Nginx后，如何查看configure时的配置\n10.9 启动Nginx后，能不能看到Nginx当前都支持哪些模块\n10.10 Https仅能用在指定的目录下吗\n第2部分 Nginx服务器的功能模块\n第11章 限 制 流 量\n11.1 指令\n11.2 实例配置\n第12章 限制用户并发连接数\n12.1 示例配置\n12.2 指令\n12.3 配置实例\n第13章 修改或隐藏Nginx的版本号\n13.1 隐藏版本号\n13.2 修改版本号\n第14章 配置FLV服务器\n14.1 示例配置\n14.2 指令\n14.3 配置实例\n第15章 Nginx的访问控制\n15.1 配置示例\n15.2 指令\n15.3 使用实例\n第16章 提供FTP下载\n16.1 配置示例\n16.2 指令\n16.3 使用实例\n第17章 Nginx与编码\n17.1 文件和文件名的编码\n17.2 使用convmv\n17.3 使用enca\n17.4 字符集设置模块\n第18章 网页压缩传输\n18.1 HttpGzipModule\n18.2 HttpGzipStaticModule\n第19章 控制Nginx如何记录日志\n第20章 map模块的使用\n第21章 Nginx预防应用层DDoS攻击\n21.1 Limit request模块\n21.2 访问测试\n21.2.1 限制连接数\n21.2.2 未限制连接数\n第22章 为Nginx添加、清除或改写响应\n22.1 HttpHeadersModule\n22.2 ngx_headers_more\n第23章 重写URI\n第24章 Nginx与服务器端包含\n24.1 ssi指令\n24.2 使用实例\n第25章 Nginx与X-Sendfile\n25.1 处理流程\n25.2 特殊头\n25.3 使用实例 2\n第26章 在Nginx的响应体之前或之后添加内容\n第27章 Nginx与访问者的地理信息\n第28章 Nginx的图像处理\n第29章 location中随机显示文件\n第30章 后台Nginx服务器记录原始客户端的IP地址\n第31章 解决防盗链\n31.1 使用Referer模块\n31.2 使用AccessKey模块\n31.3 使用SecureLink模块\n第32章 Nginx提供HTTPS服务\n32.1 兼容性\n32.2 安装SSL服务\n32.3 通配符证书\n32.4 变量\n32.5 非标准的错误代码\n32.6 使用举例\n32.6.1 单向认证\n32.6.2 更新Nginx配置\n32.6.3 访问测试\n32.6.4 双向认证\n32.6.5 创建相关目录\n32.7 HTTPS 服务器优化\n第33章 监控Nginx的工作状态\n第34章 使用empty_gif\n第35章 Nginx实现对响应体内容的替换\n第36章 Nginx的WebDAV\n第37章 Nginx的Xslt模块\n第38章 Nginx的基本认证方式\n38.1 生成密码\n38.2 添加配置\n38.3 访问测试\n第39章 Nginx的cookie\n第40章 Nginx基于客户端请求头的访问分\n第41章 通过Upstream模块使得Nginx实现后台服务器集群\n第42章 根据浏览器选择主页\n第43章 关于Nginx提供下载.ipa或.apk文件的处理方法\n第44章 SCGI\n44.1 被传递给SCGI服务器的参数\n44.2 实例1：Perl语言的应用\n44.3 实例2：Python语言的应用\n44.4 在Nginx中使用Etag\n第45章 Expires与ETag\n45.1 安装nginx-static-etags模块\n45.2 安装nginx-dynamic-etags模块\n45.3 四个头的区别与联系\n第46章 使用upstream_keepalive模块实现keep-live\n第47章 后台服务器的健康检测\n第48章 使用sticky模块实现粘贴性会话\n第49章 Nginx对后台服务器实现“公平”访问\n第50章 Nginx使用redis数据库\n50.1 安装redis模块\n50.2 安装redis2模块\n50.3 关于redis\n第51章 Nginx访问MongoDB\n51.1 安装nginx-gridfs模块\n51.2 关于MongoDB\n第52章 Nginx访问Mogilefs\n第3部分 Nginx与缓存\n第53章 缓存技术——proxy_cache","pages":"662","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s27298828.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s27298828.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s27298828.jpg"},"alt":"https:\/\/book.douban.com\/subject\/10746087\/","id":"10746087","publisher":"清华大学出版社","isbn10":"7302287848","isbn13":"9787302287841","title":"决战Nginx系统卷","url":"https:\/\/api.douban.com\/v2\/book\/10746087","alt_title":"","author_intro":"陶利军，互联网行业高端低调人士，专注于Linux平台下开源产品的研究和推广，运维构架（服务搭建、集群及高可用），网络安全评估，分布式存储等。","summary":"在这个点击率就是生命的时代，高可用是不可少的。本书完整讲述了Nginx服务器的各种技术细节以及安装、部署、运维等方面的内容。\n《决战Nginx系统卷：高性能Web服务器详解与运维》第一部分首先讲述了Nginx服务器的功能、模块管理和进程管理，然后讲述Nginx如何处理请求，在这个基础之上再认识Nginx提供的服务器的名字，Nginx服务器最大的焦点在于高并发和反向代理，在不多却足够使用的模块下实现了更多的功能。\n在第二部分中，通过具体使用实例讲述了Nginx的模块（包括官方模块和第三方模块），并详细介绍了充分使用Nginx的方式方法。同时在这里使用了Heartbeat服务实现Nginx服务器的高可用。\n本书的最后一部分是关于Nginx使用缓存技术的方法，共列举了Nginx使用的五大缓存，特别是广泛使用的代理缓存、Memcached和Varnish，另外对于Memcached服务器的使用贯穿了整套书。在本书中着重讲述了它的协议、原理和使用，而在本书姊妹篇中则通过不同语言的客户端对Memcached服务器实现具体使用。\n本书适用于广大的Linux爱好者、具有一定Linux基础的系统管理员、Linux下的Web服务器管理员、Linux服务器下动态语言开发人员、Nginx服务器管理员、培训中心师生、运维人员以及一切应该了解和使用Nginx的用户。","series":{"id":"31397","title":"决战Nginx"},"price":"79.00元"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Surhone, Lambert M.; Timpledon, Miriam T.; Marseken, Susan F."],"pubdate":"","tags":[{"count":1,"name":"web_server","title":"web_server"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s21909369.jpg","binding":"","translator":[],"catalog":"","pages":"114","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s21909369.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s21909369.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s21909369.jpg"},"alt":"https:\/\/book.douban.com\/subject\/19096999\/","id":"19096999","publisher":"","isbn10":"6130902743","isbn13":"9786130902742","title":"Nginx","url":"https:\/\/api.douban.com\/v2\/book\/19096999","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":1,"average":"0.0","min":0},"subtitle":"","author":[],"pubdate":"","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","binding":"","translator":[],"catalog":"","pages":"0","images":{"small":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","large":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","medium":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif"},"alt":"https:\/\/book.douban.com\/subject\/18192648\/","id":"18192648","publisher":"BOOK ON DEMAND POD","isbn10":"5511300411","isbn13":"9785511300412","title":"NGINX","url":"https:\/\/api.douban.com\/v2\/book\/18192648","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":10,"average":"6.5","min":0},"subtitle":"高性能Web服务器部署与运维","author":["陶利军"],"pubdate":"2012-6","tags":[{"count":18,"name":"Ngnix","title":"Ngnix"},{"count":10,"name":"服务器","title":"服务器"},{"count":6,"name":"nginx","title":"nginx"},{"count":6,"name":"Linux","title":"Linux"},{"count":5,"name":"计算机","title":"计算机"},{"count":4,"name":"Nginx","title":"Nginx"},{"count":4,"name":"HTTPServer","title":"HTTPServer"},{"count":3,"name":"运维","title":"运维"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s10351733.jpg","binding":"平装","translator":[],"catalog":"","pages":"898","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s10351733.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s10351733.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s10351733.jpg"},"alt":"https:\/\/book.douban.com\/subject\/10746086\/","id":"10746086","publisher":"清华大学出版社","isbn10":"730228783X","isbn13":"9787302287834","title":"决战Nginx技术卷","url":"https:\/\/api.douban.com\/v2\/book\/10746086","alt_title":"","author_intro":"","summary":"《决战Nginx技术卷:高性能Web服务器部署与运维(基于php、Java、ASP.NET等)》详细讲述了Nginx服务器与动态语言应用的结合，动态语言包括PHP、Python、Perl、Java、Ruby及ASP.NET架构。对于PHP部分，我们使用了php-fpm方式运行，在这一部分除了使用纯PHP架构的memcache外，还介绍了使用libmemcached的memcached。对于使用Python作为开发的网站，使用了uWSCGI服务器，并且详细讲述了它的协议和使用，通过8个实例讲述了在不同情况下的使用，例如Django框架。还有Python的三种客户端：python-memcached、cmemcache和libmemcached。同样，以Perl、Java（以Tomcat应用服务器为例讲述）和Ruby开发的网站都会从中获益，包括对应用服务器的管理。对于ASP.NET的用户来说，现在从Windows系统下向Linux系统迁移的用户很多，这就无疑会使用Mono，在书中同样能够找到Mono的使用和迁移的解决方案。","series":{"id":"31397","title":"决战Nginx"},"price":"99.00元"},{"rating":{"max":10,"numRaters":23,"average":"6.2","min":0},"subtitle":"","author":["[瑞士]艾维利"],"pubdate":"2015-2","tags":[{"count":10,"name":"Nginx","title":"Nginx"},{"count":5,"name":"服务器","title":"服务器"},{"count":5,"name":"server","title":"server"},{"count":4,"name":"技术","title":"技术"},{"count":3,"name":"运维","title":"运维"},{"count":3,"name":"网络","title":"网络"},{"count":3,"name":"互联网","title":"互联网"},{"count":3,"name":"web","title":"web"}],"origin_title":"Master Nginx","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s28271787.jpg","binding":"平装","translator":["陶利军"],"catalog":"第1章 安装Nginx及第三方模块 1\n1.1 使用包管理器安装Nginx 2\n1.1.1 CentOS 2\n1.1.2 Debian 3\n1.2 从源代码安装Nginx 3\n1.2.1 准备编译环境 4\n1.2.2 从源代码编译 4\n1.3 配置web或者mail服务器 6\n1.3.1 邮件代理的配置选项 6\n1.3.2 指定路径的配置选项 7\n1.4 使用各种模块 8\n1.5 查找并安装第三方模块 11\n1.6 组合在一起 12\n1.7 总结 14\n第2章 配置指南 15\n2.1 基本配置格式 15\n2.2 Nginx的全局配置参数 16\n2.3 使用include文件 17\n2.4 Http的server部分 18\n2.4.1 客户端指令 18\n2.4.2 文件I\/O指令 19\n2.4.3 Hash指令 20\n2.4.4 Socket指令 21\n2.4.5 示例配置文件 22\n2.5 虚拟server部分 22\n2.6 Locations——wheve，when，how 26\n2.7 mail的server部分 28\n2.8 完整的样本配置文件 30\n2.9 总结 31\n第3章 使用mail模块 33\n3.1 基本代理服务 33\n3.1.1 POP3服务 35\n3.1.2 IMAP服务 36\n3.1.3 SMTP服务 36\n3.1.4 使用SSL\/TLS 37\n3.1.5 完整的mail示例 40\n3.2 认证服务 42\n3.3 与Memcached结合 49\n3.4 解释日志文件 52\n3.5 操作系统的限制 54\n3.6 总结 55\n第4章 Nginx作为反向代理 57\n4.1 反向代理简介 58\n4.1.1 代理模块 59\n4.1.2 upstream模块 64\n4.2 upstream服务器的类型 67\n4.2.1 单个upstream服务器 67\n4.2.2 多个upstream服务器 69\n4.2.3 非Http型upstream服务器 70\n4.3 将if配置转换为一个更现代的解释 72\n4.4 使用错误文件来处理upstream的问题 76\n4.5 确定客户端的真实IP地址 78\n4.6 总结 78\n第5章 反向代理高级话题 81\n5.1 实现安全隔离 82\n5.1.1 使用SSL对流量进行加密 82\n5.1.2 使用SSL进行客户端身份验证 84\n5.1.3 基于原始IP地址阻止流量 86\n5.2 孤立应用程序的扩展 89\n5.3 反向代理服务器的性能调优 92\n5.3.1 缓冲 92\n5.3.2 缓存 94\n5.3.3 压缩 100\n5.4 总结 103\n第6章 Nginx Http服务器 105\n6.1 Nginx的系统结构 106\n6.2 Http的核心模块 106\n6.2.1 server 107\n6.2.2 日志 108\n6.2.3 文件查找 111\n6.2.4 名字解析 113\n6.2.5 客户端交互 115\n6.3 使用limit指令防止滥用 117\n6.4 约束访问 121\n6.5 流媒体文件 126\n6.6 预定义变量 127\n6.7 使用Nginx和PHP-FPM 129\n6.8 将Nginx和uWSGI连接在一起工作 141\n6.9 总结 143\n第7章 Nginx的开发 145\n7.1 缓存集成 145\n7.1.1 应用程序没有缓存 146\n7.1.2 使用数据库缓存 148\n7.1.3 使用文件做缓存 150\n7.2 动态修改内容 154\n7.2.1 addition模块 154\n7.2.2 sub模块 155\n7.2.3 xslt模块 156\n7.3 使用服务器端包含SSI 157\n7.4 在Nginx中的决策 159\n7.5 创建安全链接 163\n7.6 生成图像 165\n7.7 跟踪网站的访问者 169\n7.8 防止意外的代码执行 170\n7.9 总结 171\n第8章 故障排除技巧 173\n8.1 分析日志文件 173\n8.1.1 错误日志文件格式 174\n8.1.2 错误日志文件条目实例 175\n8.2 配置高级日志记录 178\n8.2.1 调试日志记录 178\n8.2.2 使用访问日志文件进行调试 185\n8.3 常见的配置错误 188\n8.3.1使用if取代try_files 188\n8.3.2 使用if作为主机名切换 189\n8.3.3 不使用server部分的配置追求更好的效果 190\n8.4 操作系统限制 192\n8.4.1 文件描述符限制 192\n8.4.2 网络限制 194\n8.5 性能问题 195\n8.6 使用Stub Status模块 197\n8.7 总结 198\n附录A 指令参考 199\n附录B Rewrite规则指南 241\nB.1 介绍rewrite模块 241\n创建新的rewrite规则 245\nB.2 转换Apache的重写规则 247\nB.2.1 规则 #1：使用try_files替代目录和文件存在性检测 247\nB.2.2 规则 #2：使用location替代匹配REQUEST_URI 247\nB.2.3 规则 #3：使用server替代匹配R Http_HOST 248\nB.2.4 规则 #4：变量检查使用if替代RewriteCond 250\nB.3 总结 251\n附录C Nginx的社区 253\nC.1 邮件列表 253\nC.2 IRC频道 254\nC.3 Web资源 254\nC.4 撰写好的bug报告 254\nC.5 总结 255\n附录D Solaris系统下的网络调优 257","pages":"259","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s28271787.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s28271787.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s28271787.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26341690\/","id":"26341690","publisher":"人民邮电出版社","isbn10":"7115381410","isbn13":"9787115381415","title":"精通Nginx","url":"https:\/\/api.douban.com\/v2\/book\/26341690","alt_title":"Master Nginx","author_intro":"Dimitri Aivaliotis 在瑞士苏黎世的一个主机托管商就职于系统架构师。他的职业生涯，从为学校构建基于Linux的计算机网络到为银行构建双数据中心的高可用性基础设施和在线门户网站。他在解决客户问题上已经花费了10年的时间，并且在这条路上发现了Nginx。他使用Nginx每天为他的客户提供Web访问，代理和流媒体服务。","summary":"Nginx是一个高性能的轻量级Web服务器，本书从配置文件的角度出发，介绍了多种关于 Nginx配置文件的技巧。\n本书以模块化风格写成，几乎每一章都是一个独立的模块，读者将能够自由地在各个模块间切换阅读。全书分两部分，第一部分用8章内容介绍了安装Nginx及第三方模块、配置指南、使用mail模块、Nginx作为反向代理、反向代理高级话题、Nginx Http服务器、Nginx的开发以及故障排除技巧；第二部分用4个附录的形式介绍了指令参考、Rewrite规则指南、Nginx社区以及Solaries系统下的网络调优。\n本书适合在安装和配置服务器方面有经验的系统管理员或系统工程师，阅读本书不需要任何Nginx使用经验，想信这本书会帮助你更好地完成任务。","price":"49.00元"},{"rating":{"max":10,"numRaters":11,"average":"7.0","min":0},"subtitle":"","author":["Dipankar Sarkar"],"pubdate":"2011-5-23","tags":[{"count":23,"name":"nginx","title":"nginx"},{"count":8,"name":"server","title":"server"},{"count":6,"name":"Web","title":"Web"},{"count":4,"name":"计算机","title":"计算机"},{"count":3,"name":"Cookbook","title":"Cookbook"},{"count":2,"name":"英文版","title":"英文版"},{"count":2,"name":"服务器","title":"服务器"},{"count":2,"name":"2011","title":"2011"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s6866509.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"236","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s6866509.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s6866509.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s6866509.jpg"},"alt":"https:\/\/book.douban.com\/subject\/6109359\/","id":"6109359","publisher":"Packt Publishing","isbn10":"1849514968","isbn13":"9781849514965","title":"Nginx 1 Web Server Implementation Cookbook","url":"https:\/\/api.douban.com\/v2\/book\/6109359","alt_title":"","author_intro":"","summary":"","price":"USD 39.99"},{"rating":{"max":10,"numRaters":3,"average":"0.0","min":0},"subtitle":"Excel in Nginx quickly by learning to use its most essential features in real-life applications","author":["Valery Kholodkov"],"pubdate":"2015-7-1","tags":[{"count":3,"name":"nginx","title":"nginx"},{"count":2,"name":"web","title":"web"},{"count":2,"name":"http","title":"http"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s28305732.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"150","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s28305732.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s28305732.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s28305732.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26631077\/","id":"26631077","publisher":"Packt Publishing","isbn10":"1785289535","isbn13":"9781785289538","title":"Nginx Essentials","url":"https:\/\/api.douban.com\/v2\/book\/26631077","alt_title":"","author_intro":"About the Author\nValery Kholodkov\nValery Kholodkov is a seasoned IT professional with a decade of experience in creating, building, scaling, and maintaining industrial-grade web services, web applications, and mobile application backends. Throughout his career, he has worked for well-known brands, such as Yandex, Booking.com, and AVG. He currently works for his own consultancy firm. Valery has a deep understanding of technology and is able to express its essence, advantages, and risks to a layman, which makes him an accomplished author of technology books.","summary":"About This Book\nLearn how to set up, configure, and operate an Nginx installation for day-to-day useExplore the vast features of Nginx to manage it like a pro, and use them successfully to run your websiteExample-based guide to get the best out of Nginx to reduce resource usage footprint\nWho This Book Is For\nThis book is ideal for skilled web masters and site reliability engineers who want to switch to Nginx or solidify their knowledge of Nginx. Knowledge of Unix and webmaster skills are required.\nWhat You Will Learn\nGet started with an Nginx installation from scratch in various environments and customize it for your purposesStart and stop a basic Nginx installation, discover the basics of process management, and learn how to set up Nginx to serve static dataCreate highly-maintainable configuration files to perform the most critical Nginx maintenance tasksSet up Nginx as a reverse proxy and learn to use the Nginx caching featureDiscover how to benefit from the Nginx rewrite engine and how to use access restrictions in NginxUse various Nginx features to manage inbound traffic and understand how to use Nginx load balancing and fault tolerance featuresUnderstand advanced feature-independent performance tuning strategies and optimizationsManage inbound and outbound traffic and configure access control\nIn Detail\nNginx is an open source and cross-platform reverse proxy server designed for low memory usage and high performance and concurrency.\nThis book provides both basic and in-depth knowledge to help you effectively solve challenges with Nginx, or comfortably go through a transition period when switching to Nginx.\nStarting with the basics, you will learn by example how to set up, configure, and operate an Nginx installation and use features of Nginx to elegantly solve challenges you experience every day when running your website. You will learn to use the rewrite engine to solve day-to-day tasks and be able to configure access restrictions in Nginx. You will also be able to manage inbound traffic using a number of Nginx features and use Nginx for load balancing and fault-tolerance features. Finally, you will learn how to solve common performance problems and apply a number of performance-tuning strategies.\nThrough easy exploration of the most intricate topics, this book aims to bring you to the next level in your Nginx experience.","price":"USD 34.99"},{"rating":{"max":10,"numRaters":5,"average":"0.0","min":0},"subtitle":"","author":["卓朗科技技术团队"],"pubdate":"2019-2","tags":[{"count":9,"name":"直播","title":"直播"},{"count":6,"name":"rtmp","title":"rtmp"},{"count":5,"name":"nginx","title":"nginx"},{"count":4,"name":"编程","title":"编程"},{"count":4,"name":"Nginx","title":"Nginx"},{"count":3,"name":"计算机","title":"计算机"},{"count":1,"name":"@weixinread","title":"@weixinread"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29969394.jpg","binding":"平装","translator":[],"catalog":"第1 章 Nginx 基础  1\n1.1 Nginx 概述及作用  1\n1.1.1 可作为Web 服务器  1\n1.1.2 可作为反向代理服务器  2\n1.1.3 可作为邮件代理服务器  3\n1.2 为什么选择Nginx  3\n1.3 安装Nginx  4\n1.3.1 选择安装版本  4\n1.3.2 编译安装Nginx  5\n1.3.3 配置防火墙  7\n1.3.4 加入自启动和系统服务  9\n1.3.5 加入系统变量  12\n1.4 Nginx 命令行  13\n1.4.1 命令行参数  14\n1.4.2 启动、停止和重启  15\n1.4.3 信号控制  17\n1.4.4 平滑升级  18\n1.5 Nginx 配置  19\n1.5.1 配置命令  20\n1.5.2 配置上下文  20\n1.5.3 配置文件结构  21\n1.5.4 配置变量  22\n1.5.5 配置实例  23\n1.6 Nginx 模块化体系  25\n1.6.1 模块概述  25\n1.6.2 模块分类  26\n1.7 本章小结  26\n第2 章 Nginx-rtmp-module 基础  27\n2.1 Nginx-rtmp-module 介绍  27\n2.2 RTMP 协议与HLS 协议  28\n2.2.1 RTMP 协议  28\n2.2.2 HLS 协议  29\n2.3 NRM 的搭建  34\n2.4 搭建第一个直播系统  36\n2.5 本章小结  40\n第3 章 Nginx-rtmp-module 进阶  41\n3.1 如何使NRM 支持HLS 协议直播  41\n3.2 推\/拉流与串流码  43\n3.3 Control 控制器  43\n3.3.1 record 命令  44\n3.3.2 drop 命令  47\n3.3.3 redirect 命令  47\n3.4 数据统计模块  47\n3.5 Exec 相关功能  48\n3.6 本章小结  48\n第4 章 Nginx-rtmp-module 应用  49\n4.1 FFmpeg  49\n4.1.1 FFmpeg 的安装  51\n4.1.2 FFmpeg 的配置  54\n4.1.3 FFmpeg 与直播的应用  59\n4.2 基础配置信息  59\n4.3 本章小结  64\n第5 章 Android 端解决方案  65\n5.1 移动端视频直播介绍  65\n5.2 Yasea 框架介绍  66\n5.3 IJKPlayer 框架介绍  69\n5.4 Android 端开发实战  74\n5.4.1 主要功能  75\n5.4.2 框架导入  75\n5.4.3 滤镜  77\n5.4.4 推流  80\n5.4.5 拉流  83\n5.4.6 弹幕  90\n5.5 本章小结  94\n第6 章 iOS 端解决方案  95\n6.1 iOS 端视频直播介绍  95\n6.2 SDK 的选择和前期准备  96\n6.3 GPUImage 框架介绍  99\n6.4 LFLiveKit 框架介绍  103\n6.5 IJKPlayer 框架介绍  106\n6.6 iOS 端开发实战  110\n6.6.1 主要功能  110\n6.6.2 框架导入  111\n6.6.3 滤镜  112\n6.6.4 推流  116\n6.6.5 拉流  121\n6.6.6 点赞  126\n6.6.7 弹幕  129\n6.7 本章小结  132\n第7 章 Web 端解决方案  133\n7.1 Adobe Flash Player  133\n7.1.1 Flash Player  134\n7.1.2 为什么要使用Flash  134\n7.2 ActionScript 与Flex  135\n7.2.1 Flex 环境的搭建  135\n7.2.2 Flex 项目的创建  137\n7.2.3 使用ActionScript 组件  142\n7.2.4 NetStream 对象  148\n7.2.5 获取视频流  149\n7.2.6 实例：使用as 实现一个基础的推流器  151\n7.3 SWFObject  156\n7.3.1 为什么选择SWFObject  156\n7.3.2 静态嵌入Flash Player  158\n7.3.3 动态嵌入Flash Player  162\n7.4 Flex 与JavaScript 的通信  167\n7.4.1 使用Flex 调用JavaScript 函数  167\n7.4.2 使用JavaScript 调用Flex 函数  168\n7.4.3 使用JavaScript 获取SWF 对象的引用  169\n7.4.4 实例：使用SWFObject 将Flash 播放器嵌入网页中  170\n7.5 播放器的制作  171\n7.5.1 主要功能  171\n7.5.2 相关变量  172\n7.5.3 初始化视频画布  172\n7.5.4 加载视频流并播放  172\n7.5.5 高亮显示播放进度及缓冲进度  174\n7.5.6 视频的播放与暂停  175\n7.5.7 拖曳滑块播放视频  176\n7.5.8 播放结束处理  177\n7.5.9 音量大小控制  177\n7.5.10 全屏显示控制  178\n7.5.11 流数据字符格式化  178\n7.5.12 视频画面的平滑优化处理  179\n7.5.13 播放接口的调用  179\n7.5.14 实例：制作自定义播放器  180\n7.6 Web 端开发实战  185\n7.6.1 推流  185\n7.6.2 拉流  195\n7.7 本章小结  199","pages":"212","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s29969394.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s29969394.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29969394.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30423374\/","id":"30423374","publisher":"电子工业出版社","isbn10":"7121351781","isbn13":"9787121351785","title":"直播系统开发：基于Nginx与Nginx-rtmp-module","url":"https:\/\/api.douban.com\/v2\/book\/30423374","alt_title":"","author_intro":"","summary":"《直播系统开发：基于Nginx与Nginx-rtmp-module》是一本通俗易懂的直播系统开发入门书籍。通过《直播系统开发：基于Nginx与Nginx-rtmp-module》读者可以从零开始学习搭建直播系统。《直播系统开发：基于Nginx与Nginx-rtmp-module》分为三部分，第一部分（第1 章）主要介绍Nginx，包括什么是Nginx，为什么要选择Nginx，在特定的环境下如何安装、配置及使用Nginx。第二部分（第2~4 章）主要介绍基于Nginx 的Nginx-rtmp-module、FFmpeg 组件的安装与配置，并完整地搭建了一个简单的直播系统。第三部分（第5~7 章）主要介绍在多终端下如何使用不同技术建立基于直播的SDK，并介绍多种SDK 相关技术框架。\n《直播系统开发：基于Nginx与Nginx-rtmp-module》适合对直播系统开发有兴趣的人员、高级语言开发者、音\/视频开发入门者。","price":"69"},{"rating":{"max":10,"numRaters":4,"average":"0.0","min":0},"subtitle":"使用C++11和Boost程序库","author":["罗剑锋"],"pubdate":"2015-10","tags":[{"count":4,"name":"nginx","title":"nginx"},{"count":4,"name":"c++","title":"c++"},{"count":4,"name":"Nginx","title":"Nginx"},{"count":1,"name":"编程","title":"编程"},{"count":1,"name":"期待","title":"期待"},{"count":1,"name":"c","title":"c"},{"count":1,"name":"C++","title":"C++"},{"count":1,"name":"#IBOM#","title":"#IBOM#"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s28325550.jpg","binding":"平装","translator":[],"catalog":"目录\n第0章  导读\t1\n0.1  关于本书\t1\n0.2  读者对象\t2\n0.3  读者要求\t3\n0.4  运行环境\t3\n0.5  本书的结构\t4\n0.6  如何阅读本书\t6\n0.7  本书的源码\t6\n第1章  Nginx入门\t7\n1.1  关于Nginx\t7\n1.1.1  历史\t8\n1.1.2  特点\t8\n1.1.3  进程模型\t9\n1.1.4  版本\t10\n1.2  安装Nginx\t11\n1.2.1  准备工作\t11\n1.2.2  快速安装\t11\n1.2.3  运行命令\t12\n1.2.4  验证安装\t13\n1.2.5  定制安装\t14\n1.3  配置Nginx\t15\n1.3.1  配置文件格式\t16\n1.3.2  进程配置\t17\n1.3.3  运行日志配置\t18\n1.3.4  http配置\t18\n1.3.5  server配置\t19\n1.3.6  location配置\t20\n1.3.7  文件访问配置\t21\n1.3.8  upstream配置\t22\n1.3.9  变量\t22\n1.4  总结\t24\n第2章  Nginx开发准备\t25\n2.1  开发环境\t25\n2.1.1  C++标准\t25\n2.1.2  Boost程序库\t26\n2.2  Nginx的目录结构\t26\n2.3  Nginx源码的特点\t27\n2.3.1  代码风格\t28\n2.3.2  代码优化\t28\n2.3.3  面向对象思想\t28\n2.4  在Nginx里使用C++\t29\n2.4.1  实现原则\t29\n2.4.2  代码风格\t29\n2.4.3  编译脚本\t30\n2.5  基本的C++包装类\t32\n2.5.1  类定义\t32\n2.5.2  构造和析构\t33\n2.5.3  成员函数\t33\n2.6  总结\t34\n第3章  Nginx基础设施\t35\n3.1  头文件\t35\n3.2  整数类型\t36\n3.2.1  标准整数类型\t36\n3.2.2  自定义整数类型\t36\n3.2.3  无效值\t37\n3.2.4  C++封装\t38\n3.3  错误处理\t41\n3.3.1  错误码定义\t41\n3.3.2  C++异常\t41\n3.4  内存池\t44\n3.4.1  结构定义\t44\n3.4.2  操作函数\t45\n3.4.3  C++封装\t45\n3.4.4  清理机制\t48\n3.4.5  C++内存分配器\t50\n3.5  字符串\t52\n3.5.1  结构定义\t52\n3.5.2  操作函数\t53\n3.5.3  C++封装\t55\n3.6  时间与日期\t58\n3.6.1  时间结构定义\t58\n3.6.2  时间操作函数\t58\n3.6.3  日期结构定义\t59\n3.6.4  日期操作函数\t60\n3.6.5  C++封装时间\t61\n3.6.6  C++封装日期\t62\n3.7  运行日志\t64\n3.7.1  结构定义\t65\n3.7.2  操作函数\t65\n3.7.3  C++封装\t66\n3.8  总结\t68\n第4章  Nginx高级数据结构\t71\n4.1  动态数组\t71\n4.1.1  结构定义\t71\n4.1.2  操作函数\t73\n4.1.3  C++封装\t73\n4.2  单向链表\t76\n4.2.1  结构定义\t77\n4.2.2  操作函数\t78\n4.2.3  C++迭代器\t79\n4.2.4  C++封装链表\t81\n4.3  双端队列\t84\n4.3.1  结构定义\t84\n4.3.2  操作函数\t85\n4.3.3  C++节点\t87\n4.3.4  C++迭代器\t89\n4.3.5  C++封装队列\t90\n4.4  缓冲区\t95\n4.4.1  结构定义\t95\n4.4.2  操作函数\t97\n4.4.3  C++封装\t98\n4.5  数据块链\t100\n4.5.1  结构定义\t100\n4.5.2  操作函数\t101\n4.5.3  C++节点\t101\n4.5.4  C++迭代器\t103\n4.5.5  C++封装数据块链\t105\n4.6  键值对\t107\n4.6.1  简单键值对\t107\n4.6.2  散列表键值对\t107\n4.7  总结\t108\n第5章  Nginx开发综述\t111\n5.1  最简单的Nginx模块\t111\n5.1.1  模块设计\t112\n5.1.2  配置解析\t112\n5.1.3  处理函数\t114\n5.1.4  模块集成\t116\n5.1.5  编译脚本和命令\t117\n5.1.6  测试验证\t118\n5.2  Nginx开发基本流程\t119\n5.2.1  设计\t119\n5.2.2  开发\t119\n5.2.3  编译\t120\n5.2.4  测试验证\t120\n5.2.5  调优\t121\n5.3  Nginx的模块\t121\n5.3.1  模块的数据结构\t121\n5.3.2  模块的种类\t123\n5.3.3  http模块\t124\n5.3.4  模块的类图\t124\n5.3.5  模块的组织形式\t125\n5.4  Nginx的配置\t127\n5.4.1  结构定义\t128\n5.4.2  配置解析的基本流程\t131\n5.4.3  配置数据的存储模型\t133\n5.4.4  访问配置数据\t138\n5.4.5  确定配置数据的位置\t138\n5.4.6  配置解析函数\t140\n5.4.7  配置数据的合并\t141\n5.4.8  配置指令的类型\t142\n5.5  Nginx模块源码分析\t143\n5.5.1  ngx_core_module\t143\n5.5.2  ngx_errlog_module\t146\n5.6  Nginx的编译脚本\t147\n5.6.1  运行机制\t147\n5.6.2  使用的变量\t148\n5.7  C++封装模块信息\t149\n5.7.1  NgxModuleConfig\t149\n5.7.2  NgxModule\t153\n5.8  C++封装配置解析\t155\n5.8.1  NgxCommand\t155\n5.8.2  NgxTake\t155\n5.8.3  NGX_MODULE_NULL\t157\n5.9  C++开发Nginx模块\t158\n5.9.1  C++模块的基本组成\t158\n5.9.2  配置信息类\t159\n5.9.3  业务逻辑类\t160\n5.9.4  模块集成类\t162\n5.9.5  实现源文件\t164\n5.9.6  增加更多功能\t164\n5.10  总结\t165\n第6章  Nginx HTTP框架综述\t169\n6.1  HTTP框架简介\t169\n6.1.1  模块分类\t169\n6.1.2  处理流程\t170\n6.1.3  请求结构体\t172\n6.1.4  请求的处理阶段\t173\n6.1.5  请求的环境数据\t175\n6.2  HTTP处理引擎\t176\n6.2.1  处理函数原型\t176\n6.2.2  处理函数的存储方式\t176\n6.2.3  内容处理函数\t177\n6.2.4  引擎的数据结构\t178\n6.2.5  引擎的初始化\t179\n6.2.6  引擎的运行机制\t181\n6.2.7  日志阶段的处理\t182\n6.3  HTTP过滤引擎\t183\n6.3.1  过滤函数原型\t183\n6.3.2  过滤函数链表\t184\n6.3.3  过滤函数的顺序\t185\n6.3.4  过滤链表的运行机制\t187\n6.3.5  请求体过滤\t188\n6.4  Nginx模块源码分析\t188\n6.4.1  ngx_http_static_module\t188\n6.4.2  ngx_http_not_modified_filter_ module\t189\n6.5  C++封装\t190\n6.5.1  NgxModuleCtx\t191\n6.5.2  NgxHttpCoreModule\t193\n6.5.3  NgxFilter\t195\n6.6  总结\t197\n第7章  Nginx HTTP请求处理\t199\n7.1  HTTP状态码\t199\n7.2  请求结构体\t200\n7.3  请求行\t201\n7.3.1  请求方法\t201\n7.3.2  协议版本号\t202\n7.3.3  资源标识符\t202\n7.4  请求头\t203\n7.5  请求体\t204\n7.5.1  结构定义\t205\n7.5.2  操作函数\t205\n7.6  响应头\t206\n7.6.1  结构定义\t206\n7.6.2  操作函数\t207\n7.7  响应体\t207\n7.8  C++封装\t208\n7.8.1  NgxHeaders\t208\n7.8.2  NgxRequestBody\t211\n7.8.3  NgxRequest\t212\n7.8.4  NgxResponse\t213\n7.9  开发HTTP处理模块\t216\n7.9.1  模块设计\t216\n7.9.2  配置信息类\t217\n7.9.3  业务逻辑类\t217\n7.9.4  模块集成类\t219\n7.9.5  实现源文件\t221\n7.9.6  编译脚本\t221\n7.9.7  测试验证\t221\n7.10  开发HTTP过滤模块\t222\n7.10.1  模块设计\t222\n7.10.2  配置信息类\t222\n7.10.3  环境数据类\t223\n7.10.4  业务逻辑类\t223\n7.10.5  模块集成类\t227\n7.10.6  实现源文件\t228\n7.10.7  编译脚本\t228\n7.10.8  测试验证\t228\n7.11  总结\t229\n第8章  Nginx HTTP请求转发\t231\n8.1  upstream框架简介\t231\n8.1.1  工作原理\t232\n8.1.2  请求结构体\t233\n8.1.3  上游结构体\t234\n8.1.4  上游配置参数\t236\n8.2  upstream运行机制\t237\n8.2.1  回调函数\t237\n8.2.2  初始化upstream\t239\n8.2.3  设置upstream\t239\n8.2.4  启动upstream\t241\n8.2.5  处理upstream数据\t241\n8.3  load-balance运行机制\t242\n8.3.1  结构定义\t243\n8.3.2  初始化模块入口\t247\n8.3.3  初始化IP地址列表\t248\n8.3.4  初始化算法\t250\n8.3.5  执行算法\t251\n8.4  Nginx模块源码分析\t251\n8.4.1  ngx_http_memcached_module\t251\n8.4.2  ngx_http_upstream_ip_hash_ module\t254\n8.5  C++封装\t257\n8.5.1  NgxUpstream\t257\n8.5.2  NgxUpstreamHelper\t259\n8.5.3  NgxHttpUpstreamModule\t261\n8.5.4  NgxLoadBalance\t263\n8.6  开发upstream模块\t264\n8.6.1  模块设计\t264\n8.6.2  配置信息类\t264\n8.6.3  业务逻辑类\t265\n8.6.4  模块集成类\t268\n8.6.5  实现源文件\t269\n8.6.6  编译脚本\t269\n8.6.7  测试验证\t269\n8.7  开发load-balance模块\t270\n8.7.1  模块设计\t271\n8.7.2  配置信息类\t271\n8.7.3  业务逻辑类\t271\n8.7.4  模块集成类\t273\n8.7.5  实现源文件\t275\n8.7.6  编译脚本\t275\n8.7.7  测试验证\t275\n8.8  总结\t276\n第9章  Nginx HTTP子请求\t277\n9.1  子请求简介\t277\n9.1.1  工作原理\t278\n9.1.2  请求结构体\t279\n9.1.3  回调函数\t280\n9.1.4  待处理请求链表\t282\n9.1.5  子请求存储结构\t282\n9.2  子请求运行机制\t283\n9.2.1  创建子请求\t283\n9.2.2  处理引擎\t287\n9.2.3  数据整理\t288\n9.3  C++封装\t290\n9.3.1  NgxSubRequestHandler\t290\n9.3.2  NgxSubRequest\t292\n9.4  数据回传模块\t293\n9.4.1  模块设计\t293\n9.4.2  环境数据类\t293\n9.4.3  业务逻辑类\t295\n9.4.4  模块集成类\t297\n9.4.5  编译脚本\t298\n9.5  在模块里使用子请求\t299\n9.5.1  模块设计\t299\n9.5.2  配置信息类\t299\n9.5.3  业务逻辑类\t300\n9.5.4  测试验证\t303\n9.6  总结\t304\n第10章  Nginx变量\t305\n10.1  结构定义\t305\n10.1.1  变量值\t305\n10.1.2  变量访问对象\t306\n10.1.3  变量的存储\t307\n10.1.4  请求结构体\t307\n10.2  运行机制\t308\n10.2.1  注册变量\t308\n10.2.2  获取变量\t309\n10.3  C++封装\t310\n10.3.1  NgxVariableValue\t310\n10.3.2  NgxVariable\t311\n10.3.3  NgxVariables\t312\n10.3.4  NgxVarManager\t313\n10.3.5  NgxVariableValueProxy\t314\n10.4  在模块里使用变量\t315\n10.4.1  添加变量\t316\n10.4.2  读写变量\t317\n10.5  总结\t317\n第11章  Nginx辅助设施\t319\n11.1  摘要算法\t319\n11.1.1  MD5\t319\n11.1.2  SHA-1\t320\n11.1.3  MurmurHash\t321\n11.1.4  C++封装\t321\n11.2  编码和解码\t324\n11.2.1  CRC校验\t324\n11.2.2  Base64编码解码\t325\n11.2.3  URI编码解码\t326\n11.2.4  HTML和JSON编码\t327\n11.3  正则表达式\t327\n11.4  共享内存\t328\n11.4.1  结构定义\t328\n11.4.2  操作函数\t329\n11.4.3  C++共享内存\t329\n11.5  定时器\t331\n11.5.1  结构定义\t331\n11.5.2  操作函数\t332\n11.5.3  C++定时器事件\t332\n11.5.4  C++定时器工厂\t333\n11.6  总结\t335\n第12章  Nginx与设计模式\t337\n12.1  设计模式简介\t337\n12.2  框架级别的模式\t337\n12.3  业务级别的模式\t339\n12.4  代码级别的模式\t340\n12.5  总结\t342\n第13章  结束语\t343\n13.1  本书的遗憾\t343\n13.2  下一步\t344\n13.3  临别赠言\t345\n附录A  推荐书目\t347\n附录B  GDB调试简介\t349\n附录C  Nginx的字符串格式化\t351\n附录D  Nginx里的void*变量\t353\n附录E  Nginx C++模块简介\t355\n附录F  Nginx Lua模块简介\t357","pages":"372","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s28325550.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s28325550.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s28325550.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26649735\/","id":"26649735","publisher":"电子工业出版社","isbn10":"7121272946","isbn13":"9787121272943","title":"Nginx模块开发指南","url":"https:\/\/api.douban.com\/v2\/book\/26649735","alt_title":"","author_intro":"","summary":"Nginx 是由俄罗斯工程师Igor Sysoev 开发的一个高性能Web 服务器，运行效率远超传统的Apache、Tomcat，是世界第二大Web 服务器，被国内外诸多顶级互联网公司采用。\nNginx 的一个突出特点是其灵活优秀的模块化架构，可以在不修改核心的前提下增加任意功能，自2004 年发布至今，已经拥有百余个官方及非官方的功能模块（如fastcgi、memcached、mysql 等），使得Nginx 成长为了一个近乎“全能”的服务器软件。\nNginx 以纯C 语言实现，开发扩展功能模块也大多使用C 语言，但由于C 语言固有的过程式特性，编写、调试代码都较麻烦——特别是对于Nginx 的初学者。《Nginx 模块开发指南：使用C++11 和Boost 程序库》深入源码，详细解析了模块体系、配置指令、HTTP 框架等Nginx 核心运行机制，并在此基础上讲解如何使用C++和Boost 程序库来开发Nginx 模块，充分利用现代C++里的大量新特性和库组件，让Nginx 的模块开发变得更加便捷、轻松和愉快。\n《Nginx 模块开发指南：使用C++11 和Boost 程序库》结构严谨、脉络清晰、论述精确、详略得当，值得广大软件开发工程师、系统运维工程师和编程爱好者拥有。","price":"79.00元"},{"rating":{"max":10,"numRaters":8,"average":"0.0","min":0},"subtitle":"","author":["Dimitri Aivaliotis"],"pubdate":"2013-3-19","tags":[{"count":10,"name":"nginx","title":"nginx"},{"count":3,"name":"Networking","title":"Networking"},{"count":2,"name":"计算机","title":"计算机"},{"count":2,"name":"NGINX","title":"NGINX"},{"count":1,"name":"英文版","title":"英文版"},{"count":1,"name":"技术","title":"技术"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s26383132.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"322","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s26383132.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s26383132.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s26383132.jpg"},"alt":"https:\/\/book.douban.com\/subject\/17802580\/","id":"17802580","publisher":"Packt Publishing","isbn10":"1849517444","isbn13":"9781849517447","title":"Mastering Nginx","url":"https:\/\/api.douban.com\/v2\/book\/17802580","alt_title":"","author_intro":"","summary":"","price":"USD 49.99"},{"rating":{"max":10,"numRaters":7,"average":"0.0","min":0},"subtitle":"","author":["Clement Nedelcu"],"pubdate":"2015-12-1","tags":[{"count":5,"name":"nginx","title":"nginx"},{"count":4,"name":"Web","title":"Web"},{"count":3,"name":"Nginx","title":"Nginx"},{"count":2,"name":"Server","title":"Server"},{"count":1,"name":"计算机","title":"计算机"},{"count":1,"name":"Network","title":"Network"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s28349117.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"232","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s28349117.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s28349117.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s28349117.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26672913\/","id":"26672913","publisher":"Packt Publishing - ebooks Account","isbn10":"1785280333","isbn13":"9781785280337","title":"Nginx HTTP Server - Third Edition","url":"https:\/\/api.douban.com\/v2\/book\/26672913","alt_title":"","author_intro":"","summary":"","price":"USD 44.99"},{"rating":{"max":10,"numRaters":7,"average":"0.0","min":0},"subtitle":"","author":["Clément Nedelcu"],"pubdate":"2013-7-19","tags":[{"count":4,"name":"Nginx","title":"Nginx"},{"count":2,"name":"HTTP","title":"HTTP"},{"count":1,"name":"计算机网络","title":"计算机网络"},{"count":1,"name":"计算机科学","title":"计算机科学"},{"count":1,"name":"计算机","title":"计算机"},{"count":1,"name":"英文","title":"英文"},{"count":1,"name":"网络","title":"网络"},{"count":1,"name":"programming","title":"programming"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s27218024.jpg","binding":"Paperback","translator":[],"catalog":"Preface\nChapter 1: Downloading and Installing Nginx\nChapter 2: Basic Nginx Configuration\nChapter 3: HTTP Configuration\nChapter 4: Module Configuration\nChapter 5: PHP and Python with Nginx\nChapter 6: Apache and Nginx Together\nChapter 7: From Apache to Nginx\nAppendix A: Directive Index\nAppendix B: Module Reference\nAppendix C: Troubleshooting","pages":"318","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s27218024.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s27218024.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s27218024.jpg"},"alt":"https:\/\/book.douban.com\/subject\/25826915\/","id":"25826915","publisher":"Packt Publishing","isbn10":"1782162321","isbn13":"9781782162322","title":"Nginx HTTP Server - Second Edition","url":"https:\/\/api.douban.com\/v2\/book\/25826915","alt_title":"","author_intro":"Clément Nedelcu\nClément Nedelcu was born in France and studied in UK, French, and Chinese universities. After teaching computer science and programming in several eastern Chinese universities, he worked as a Technology Consultant in France, specializing in web and Microsoft .NET programming as well as Linux server administration. Since 2005, he has also been administering a major network of websites in his spare time. This eventually led him to discover Nginx: it made such a difference that he started his own blog about it. One thing leading to another…","summary":"Make the most of your infrastructure and serve pages faster than ever with Nginx\nOverview\nComplete configuration directive and module reference\nDiscover possible interactions between Nginx and Apache to get the best of both worlds\nLearn to configure your servers and virtual hosts efficiently\nA step-by-step guide to switching from Apache to Nginx\nIn Detail\nNginx is a lightweight HTTP server designed for high-traffic websites, with network scalability as the primary objective. With the advent of high speed Internet access, short loading times and fast transfer rates have become a necessity. This free, open source solution will either come as a full replacement of other software such as Apache, or stand in front of your existing infrastructure to improve its overall speed.\n\"Nginx HTTP Server - Second Edition\" provides a detailed guide to setting up Nginx in different ways that correspond to actual production situations: as a standalone server, as a reverse proxy, interacting with applications via FastCGI and more. In addition, the complete directive reference will be your best friend at all stages of the configuration and maintenance processes.\nThis book is the perfect companion for both Nginx beginners and experienced administrators. For beginners, it will take you through the complete process of setting up this lightweight HTTP server on your system and configuring its various modules to get it to do exactly what you need, in a fast and secure way. For more experienced administrators, this book provides different angles of approach that can help you make the most of your current infrastructure. Nginx can be employed in many situations, whether you are looking to construct an entirely new web-serving architecture or simply want to integrate an efficient tool to optimize your site loading speeds.\nThis book takes you through the setup and configuration of Nginx by detailing every step of the way, from downloading to configuring your server in a selection of common architectures.\nWhat you will learn from this book\nDownload and build Nginx from source along with its dependencies\nThe basics of Nginx configuration: syntax, structure, semantics\nCreate virtual host configurations effortlessly\nDiscover all first-party modules and how to enable, configure and use them\nEstablish advanced rewrite rules with the Nginx Rewrite module\nSet up Nginx to work with PHP, Python and more via FastCGI\nConfigure Nginx to work as a frontend for your existing HTTP server\nLearn how to port your Apache rewrite rules through three practical examples\nTroubleshoot if something goes wrong with the server\nApproach\nThis tutorial book includes detailed instructions for each of the processes it describes: downloading and installing the application, configuring and using modules, and much more. It provides a step-by-step tutorial to replace your existing web server with Nginx. With commented configuration sections and in-depth module descriptions, you will be able to make the most of the performance potential offered by Nginx.","price":"USD 44.99"},{"rating":{"max":10,"numRaters":2,"average":"0.0","min":0},"subtitle":"","author":["罗剑锋"],"pubdate":"2017-6","tags":[{"count":19,"name":"Nginx","title":"Nginx"},{"count":4,"name":"计算机科学","title":"计算机科学"},{"count":4,"name":"网络编程","title":"网络编程"},{"count":4,"name":"lua","title":"lua"},{"count":4,"name":"LAMP","title":"LAMP"},{"count":3,"name":"计算机","title":"计算机"},{"count":3,"name":"编程","title":"编程"},{"count":3,"name":"c","title":"c"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29461776.jpg","binding":"平装","translator":[],"catalog":"第0章  导读\t1\n0.1  关于本书\t1\n0.2  读者对象\t2\n0.3  读者要求\t3\n0.4  运行环境\t4\n0.5  本书的结构\t4\n0.6  如何阅读本书\t7\n0.7  本书的源码\t8\n第1章  Nginx入门\t9\n1.1  关于Nginx\t9\n1.2  安装Nginx\t13\n1.3  配置Nginx\t19\n1.4  总结\t30\n第2章  Nginx开发准备\t31\n2.1  开发环境\t31\n2.2  目录结构\t32\n2.3  源码特点\t34\n2.4  使用C++\t35\n2.5  C++包装类\t38\n2.6  总结\t40\n第3章  Nginx基础设施\t41\n3.1  头文件\t41\n3.2  整数类型\t42\n3.3  错误处理\t47\n3.4  内存池\t50\n3.5  字符串\t58\n3.6  时间与日期\t64\n3.7  运行日志\t70\n3.8  总结\t74\n第4章  Nginx高级数据结构\t77\n4.1  动态数组\t77\n4.2  单向链表\t83\n4.3  双端队列\t90\n4.4  红黑树\t101\n4.5  缓冲区\t108\n4.6  数据块链\t113\n4.7  键值对\t120\n4.8  总结\t121\n第5章  Nginx开发综述\t123\n5.1  最简单的模块\t123\n5.2  开发基本流程\t131\n5.3  编译脚本\t134\n5.4  总结\t137\n第6章  Nginx模块体系\t139\n6.1  模块架构\t139\n6.2  配置解析\t152\n6.3  源码分析\t168\n6.4  C++封装\t172\n6.5  C++开发模块\t180\n6.6  总结\t187\n第7章  Nginx HTTP框架综述\t191\n7.1  框架简介\t191\n7.2  处理引擎\t198\n7.3  过滤引擎\t205\n7.4  源码分析\t211\n7.5  C++封装\t213\n7.6  总结\t219\n第8章  Nginx HTTP请求处理\t221\n8.1  状态码\t221\n8.2  请求结构体\t222\n8.3  请求行\t223\n8.4  请求头\t225\n8.5  请求体\t226\n8.6  响应头\t227\n8.7  响应体\t229\n8.8  源码分析\t229\n8.9  C++封装\t232\n8.10  开发handler模块\t241\n8.11  开发filter模块\t246\n8.12  总结\t253\n第9章  Nginx HTTP请求转发\t255\n9.1  框架简介\t255\n9.2  请求转发机制\t261\n9.3  负载均衡机制\t266\n9.4  源码分析\t275\n9.5  C++封装\t281\n9.6  开发upstream模块\t288\n9.7  开发load-balance模块\t294\n9.8  总结\t299\n第10章  Nginx HTTP子请求\t301\n10.1  子请求简介\t301\n10.2  子请求运行机制\t307\n10.3  C++封装\t314\n10.4  数据回传模块\t317\n10.5  在模块里使用子请求\t323\n10.6  总结\t328\n第11章  Nginx变量\t329\n11.1  结构定义\t329\n11.2  运行机制\t332\n11.3  复杂变量\t334\n11.4  C++封装\t335\n11.5  在模块里使用变量\t341\n11.6  在模块里使用复杂变量\t343\n11.7  总结\t345\n第12章  Nginx辅助设施\t347\n12.1  摘要算法\t347\n12.2  编码和解码\t352\n12.3  正则表达式\t356\n12.4  共享内存\t356\n12.5  总结\t359\n第13章  Nginx进程机制\t361\n13.1  基本系统调用\t361\n13.2  进程系统调用\t362\n13.3  信号系统调用\t364\n13.4  结构定义\t365\n13.5  全局变量\t368\n13.6  启动过程\t370\n13.7  信号处理\t377\n13.8  单进程模式\t379\n13.9  多进程模式\t382\n13.10  总结\t390\n第14章  Nginx事件机制\t393\n14.1  基本系统调用\t393\n14.2  socket系统调用\t395\n14.3  epoll系统调用\t399\n14.4  结构定义\t403\n14.5  定时器\t415\n14.6  模块体系\t419\n14.7  全局变量\t425\n14.8  运行机制\t427\n14.9  总结\t452\n第15章  Nginx多线程机制\t455\n15.1  eventfd系统调用\t455\n15.2  pthread系统调用\t456\n15.3  结构定义\t457\n15.4  事件通知\t460\n15.5  运行机制\t463\n15.6  在模块里使用多线程\t469\n15.7  总结\t474\n第16章  Nginx Stream机制\t477\n16.1  模块体系\t477\n16.2  监听端口\t483\n16.3  处理引擎\t491\n16.4  过滤引擎\t495\n16.5  运行机制\t496\n16.6  开发stream模块\t507\n16.7  总结\t514\n第17章  Nginx HTTP机制\t517\n17.1  结构定义\t517\n17.2  初始化连接\t519\n17.3  执行引擎\t528\n17.4  处理请求体\t534\n17.5  发送数据\t540\n17.6  结束请求\t543\n17.7  总结\t548\n第18章  Nginx与设计模式\t551\n18.1  设计模式简介\t551\n18.2  框架级别的模式\t551\n18.3  业务级别的模式\t553\n18.4  代码级别的模式\t554\n18.5  总结\t556\n第19章  OpenResty开发\t557\n19.1  简介\t557\n19.2  Lua语言\t566\n19.3  LuaJIT\t577\n19.4  Lua模块\t581\n19.5  功能接口\t585\n19.6  应用实例\t594\n19.7  Stream Lua模块\t598\n19.8  lua-resty库\t601\n19.9  总结\t603\n第20章  结束语\t605\n20.1  本书的遗憾\t605\n20.2  下一步\t605\n20.3  临别赠言\t606\n附录A  推荐书目\t607\n附录B  GDB调试简介\t609\n附录C  Nginx C++模块简介\t611\n附录D  Nginx的字符串格式化\t613\n附录E  nginScript简介\t615","pages":"632","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s29461776.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s29461776.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29461776.jpg"},"alt":"https:\/\/book.douban.com\/subject\/27055717\/","id":"27055717","publisher":"电子工业出版社","isbn10":"7121314576","isbn13":"9787121314575","title":"Nginx完全开发指南：使用C、C++和OpenResty","url":"https:\/\/api.douban.com\/v2\/book\/27055717","alt_title":"","author_intro":"罗剑锋（网名Chrono）1996年就读于东北财经大学；1997年开始接触C\/C++；1998年参加计算机软件专业技术资格和水平考试，获高级程序员资质；2003年毕业于北京理工大学，获计算机专业硕士学位。主要研究方向为C\/C++、设计模式、高性能网络服务器开发，业余爱好是阅读、旅游、欣赏音乐和电影。","summary":"Nginx是著名的Web服务器，性能优异，运行效率远超传统的Apache、Tomcat，广泛应用于国内外诸多顶级互联网公司。\nNginx的一个突出特点是其灵活优秀的模块化架构，可以在不修改核心的前提下增加任意功能，自2004年发布至今，已经拥有百余个官方及非官方的功能模块（如proxy、mysql、redis、rtmp、lua等），使得Nginx成长为了一个近乎“全能”的服务器软件。\nNginx功能强大，架构复杂，学习、维护和开发的门槛较高。为了帮助读者跨越这一障碍，《Nginx完全开发指南：使用C、C++和OpenResty》深入最新的Nginx源码（Stable 1.12.0），详细剖析了模块体系、动态插件、功能框架、进程模型、事件驱动、线程池、TCP\/UDP\/HTTP处理等Nginx核心运行机制，在此基础上讲解如何使用C、C++、Lua、nginScript等语言来增强扩展Nginx，让任何人都能够便捷、轻松地开发和定制Nginx，进而应用到自己的实际工作中，创造出更多的价值。\n《Nginx完全开发指南：使用C、C++和OpenResty》结构严谨、脉络清晰、论述精确、详略得当、图文并茂，值得广大软件开发工程师、系统运维工程师和编程爱好者拥有。","price":"99.00"},{"rating":{"max":10,"numRaters":2,"average":"0.0","min":0},"subtitle":"","author":[],"pubdate":"2013-4","tags":[{"count":1,"name":"高性能","title":"高性能"},{"count":1,"name":"互联网","title":"互联网"},{"count":1,"name":"nginx","title":"nginx"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s28115101.jpg","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s28115101.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s28115101.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s28115101.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26429903\/","id":"26429903","publisher":"","isbn10":"1782165126","isbn13":"9781782165125","title":"Instant Nginx Starter","url":"https:\/\/api.douban.com\/v2\/book\/26429903","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":1,"average":"0.0","min":0},"subtitle":"Practical Solutions with NGINX and Microsoft Azure","author":["by Arlan Nugara"],"pubdate":"2019-5-7","tags":[{"count":2,"name":"微服务","title":"微服务"},{"count":1,"name":"架构","title":"架构"},{"count":1,"name":"CS","title":"CS"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s33298436.jpg","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s33298436.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s33298436.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s33298436.jpg"},"alt":"https:\/\/book.douban.com\/subject\/34432422\/","id":"34432422","publisher":"","isbn10":"1492053902","isbn13":"9781492053903","title":"Load Balancing in Microsoft Azure","url":"https:\/\/api.douban.com\/v2\/book\/34432422","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"Harness the power of Nginx to make the most of your infrastructure and serve pages faster than ever before","author":["Martin Fjordvald","Clement Nedelcu"],"pubdate":"2018-2-14","tags":[],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s30025166.jpg","binding":"","translator":[],"catalog":"","pages":"348","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s30025166.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s30025166.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s30025166.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30488706\/","id":"30488706","publisher":"Packt Publishing","isbn10":"178862355X","isbn13":"9781788623551","title":"Nginx HTTP Server - Fourth Edition","url":"https:\/\/api.douban.com\/v2\/book\/30488706","alt_title":"","author_intro":"","summary":"","price":"$44.99"},{"rating":{"max":10,"numRaters":15,"average":"5.4","min":0},"subtitle":"","author":["Dimitri Aivaliotis（艾维利）"],"pubdate":"2017-8-1","tags":[{"count":14,"name":"Nginx","title":"Nginx"},{"count":5,"name":"软件架构","title":"软件架构"},{"count":4,"name":"计算机","title":"计算机"},{"count":3,"name":"web","title":"web"},{"count":2,"name":"编程","title":"编程"},{"count":2,"name":"HTTP","title":"HTTP"},{"count":1,"name":"书","title":"书"},{"count":1,"name":"一般","title":"一般"}],"origin_title":"Mastering NGINX，Second Edition","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29516373.jpg","binding":"平装","translator":["李红军"],"catalog":"版权\n版权声明\n内容提要\n作者简介\n审稿人简介\n译者序\n前言\n第1章　安装Nginx及第三方模块\n第2章　配置指南\n第3章　使用mail模块\n第4章　Nginx作为反向代理\n第5章　反向代理高级话题\n第6章　Nginx HTTP服务器\n第7章　Nginx的开发\n第8章　在Nginx中集成Lua\n第9章　故障排除技巧\n附录A　指令参考\n附录B　Rewrite规则指南\n附录C　Nginx社区\n附录D　Solaris系统下的网络调优","pages":"264","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29516373.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29516373.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29516373.jpg"},"alt":"https:\/\/book.douban.com\/subject\/27113382\/","id":"27113382","publisher":"人民邮电出版社","isbn10":"7115459967","isbn13":"9787115459961","title":"精通Nginx(第2版)","url":"https:\/\/api.douban.com\/v2\/book\/27113382","alt_title":"Mastering NGINX，Second Edition","author_intro":"","summary":"Nginx是一个高性能的轻量级Web服务器，本书从配置文件的角度出发，介绍了多种关于Nginx配置的技巧。\n本书以模块化风格写成，几乎每一章都是一个独立的模块，读者将能够自由地在各个模块间切换阅读。全书分两部分，第一部分用9章内容介绍了安装Nginx及第三方模块、配置向导、使用mail模块、Nginx作为反向代理、Nginx Http服务器、Nginx的开发、在Nginx中集成Lua以及故障排除技巧；第二部分用4个附录的形式介绍了指令参考、Rewrite规则指南、Nginx社区以及Solaris系统下的网络调优。\n本书适合在安装和配置服务器方面有经验的系统管理员或系统工程师，阅读本书不需要任何Nginx使用经验，相信这本书会帮助读者更好地完成任务。","price":"59.00"},{"rating":{"max":10,"numRaters":7,"average":"0.0","min":0},"subtitle":"","author":["Rahul Sharma"],"pubdate":"2015-7-16","tags":[{"count":2,"name":"nginx","title":"nginx"},{"count":1,"name":"负载均衡","title":"负载均衡"},{"count":1,"name":"★自学编程","title":"★自学编程"},{"count":1,"name":"●2018","title":"●2018"},{"count":1,"name":"▲系统运维","title":"▲系统运维"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s28279601.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"168","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s28279601.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s28279601.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s28279601.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26595613\/","id":"26595613","publisher":"Packt Publishing - ebooks Account","isbn10":"1785281836","isbn13":"9781785281839","title":"Nginx High Performance","url":"https:\/\/api.douban.com\/v2\/book\/26595613","alt_title":"","author_intro":"","summary":"","price":"USD 39.99"},{"rating":{"max":10,"numRaters":1,"average":"0.0","min":0},"subtitle":"","author":["Alex Kapranoff"],"pubdate":"2016-4-22","tags":[{"count":1,"name":"Nginx","title":"Nginx"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s28749540.jpg","binding":"Paperback","translator":[],"catalog":"Searching for Problems in Nginx Configuration\nSearching for Problems in Log Files\nTroubleshooting Functionality\nOptimizing Website Performance\nTroubleshooting Rare Specific Problems\nMonitoring Nginx\nGoing Forward with Nginx\nRare Nginx Error Messages","pages":"172","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s28749540.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s28749540.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s28749540.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26801598\/","id":"26801598","publisher":"Packt Publishing","isbn10":"1785288652","isbn13":"9781785288654","title":"Nginx Troubleshooting","url":"https:\/\/api.douban.com\/v2\/book\/26801598","alt_title":"","author_intro":"Alex Kapranoff is an established IT professional with more than 20 years of experience in roles ranging from a database developer to the CTO of a social search engine start-up to an infrastructure manager of a huge web application with hundreds of millions of users. His background allows him to be more on the developer side of things, and he is happy to share some of that perspective with fellow system administration specialists.","summary":"Nginx is clearly winning the race to be the dominant software to power modern websites. It is fast and open source, maintained with passion by a brilliant team. This book will help you maintain your Nginx instances in a healthy and predictable state.\nIt will lead you through all the types of problems you might encounter as a web administrator, with a special focus on performance and migration from older software.\nYou will learn how to write good configuration files and will get good insights into Nginx logs. It will provide you solutions to problems such as missing or broken functionality and also show you how to tackle performance issues with the Nginx server. A special chapter is devoted to the art of prevention, that is, monitoring and alerting services you may use to detect problems before they manifest themselves on a big scale. The books ends with a reference to error and warning messages Nginx could emit to help you during incident investigations.","price":"USD 29.99"},{"rating":{"max":10,"numRaters":7,"average":"0.0","min":0},"subtitle":"","author":[],"pubdate":"","tags":[{"count":2,"name":"Web服务器","title":"Web服务器"},{"count":1,"name":"Nginx","title":"Nginx"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29781426.jpg","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s29781426.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s29781426.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29781426.jpg"},"alt":"https:\/\/book.douban.com\/subject\/27129298\/","id":"27129298","publisher":"","isbn10":"7302472440","isbn13":"9787302472445","title":"Nginx高性能Web服务器实战教程(国家信息技术紧缺人才培养工程指定教材)","url":"https:\/\/api.douban.com\/v2\/book\/27129298","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":2,"average":"0.0","min":0},"subtitle":"","author":["Dimitri Aivaliotis"],"pubdate":"2016-7-29","tags":[{"count":1,"name":"Nginx","title":"Nginx"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29435954.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"320","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s29435954.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s29435954.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29435954.jpg"},"alt":"https:\/\/book.douban.com\/subject\/27030313\/","id":"27030313","publisher":"Packt Publishing - ebooks Account","isbn10":"1782173315","isbn13":"9781782173311","title":"Mastering NGINX - Second Edition","url":"https:\/\/api.douban.com\/v2\/book\/27030313","alt_title":"","author_intro":"","summary":"","price":"USD 49.99"},{"rating":{"max":10,"numRaters":4,"average":"0.0","min":0},"subtitle":"","author":["Tim Butler"],"pubdate":"2017-10-5","tags":[{"count":1,"name":"计算机","title":"计算机"},{"count":1,"name":"nginx","title":"nginx"},{"count":1,"name":"CS","title":"CS"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29550946.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"306","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s29550946.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s29550946.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29550946.jpg"},"alt":"https:\/\/book.douban.com\/subject\/27146714\/","id":"27146714","publisher":"Packt Publishing - ebooks Account","isbn10":"1786466171","isbn13":"9781786466174","title":"Nginx 1.9 Cookbook","url":"https:\/\/api.douban.com\/v2\/book\/27146714","alt_title":"","author_intro":"","summary":"","price":"USD 44.99"},{"rating":{"max":10,"numRaters":10,"average":"6.6","min":0},"subtitle":"Advanced Recipes for Operations","author":["Derek DeJonghe"],"pubdate":"2017-5-26","tags":[{"count":2,"name":"计算机","title":"计算机"},{"count":1,"name":"Web","title":"Web"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29815023.jpg","binding":"Ebook","translator":[],"catalog":"","pages":"","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29815023.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29815023.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29815023.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30269959\/","id":"30269959","publisher":"O’Reilly Media Inc","isbn10":"1491968958","isbn13":"9781491968956","title":"Complete NGINX Cookbook","url":"https:\/\/api.douban.com\/v2\/book\/30269959","alt_title":"","author_intro":"Derek has had a life long passion for technology. His indepth background and experience in Web Development, System Administration, and Networking give him a well rounded understanding of modern day web architecture. Leading a team of Site Reliability Engineers, producing self healing, auto scaling infrastructure for numerous different applications, Derek specializes in Linux Cloud Environments. While designing, building, and maintaining highly available applications for clients, he often engages in a embedded consulting role for larger organizations as they embark on their journey to the Cloud. Derek and his team are on the forefront of a technology tidal wave and are engineering cloud best practices every day. With a proven track record for resilient cloud architecture, Derek helps RightBrain Networks be one of the strongest cloud consulting agencies and managed service providers in partnership with AWS today.","summary":"Learn ways to manage the operations and deployment of NGINX in the third and final installment of this practical cookbook. After presenting recipes on load balancing and security in the first two parts of this guide, part three focuses on methods for monitoring and maintaining the application delivery platform of both NGINX and NGINX Plus, the free and licensed versions of this open source server.\nNGINX is one of the most widely used web servers in use today because it also acts as a load balancer and a reverse proxy server for HTTP and other network protocols. In this installment, author Derek DeJonghe provides more than 30 recipes to help you deploy NGINX to Amazon Web Services, Microsoft Azure, and Google Cloud Compute, with the help of Docker containers.","price":""},{"rating":{"max":10,"numRaters":8,"average":"0.0","min":0},"subtitle":"","author":["李明江"],"pubdate":"2018-2","tags":[{"count":8,"name":"lua","title":"lua"},{"count":7,"name":"nginx","title":"nginx"},{"count":6,"name":"Nginx","title":"Nginx"},{"count":3,"name":"计算机","title":"计算机"},{"count":2,"name":"Lua","title":"Lua"},{"count":1,"name":"微信读书","title":"微信读书"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29723757.jpg","binding":"","translator":[],"catalog":"前言\n第一部分　Nginx操作基础\n第1章　Nginx高效服务器 2\n1.1　Nginx的特点 2\n1.2　Nginx的安装 3\n1.3　configure命令参数 7\n1.4　小结 12\n第2章　数据库的基本操作 13\n2.1　Nginx应用中的数据库 13\n2.2　MySQL关系型数据库 15\n2.2.1　yum安装方法 16\n2.2.2　使用mysql测试服务 18\n2.2.3　MySQL文件分布 19\n2.2.4　数据库操作 19\n2.3　Redis内存数据库 22\n2.3.1　Redis安装 22\n2.3.2　启动Redis服务 23\n2.3.3　Redis 配置 23\n2.3.4　参数说明 26\n2.3.5　数据类型 29\n2.4　PostgreSQL关系型数据库 31\n2.5　Memcached内存数据库 33\n2.5.1　Memcached安装 34\n2.5.2　连接编辑 34\n2.5.3　管理Memcached服务 35\n2.5.4　Memcached命令 37\n2.6　MongoDB分布式NoSQL数据库 42\n2.6.1　MongoDB安装 43\n2.6.2　mongod.conf配置说明 45\n2.7　小结 48\n第3章　OpenResty 49\n3.1　OpenResty：概述 49\n3.2　OpenResty的组成 50\n3.3　OpenResty的安装 52\n3.4　Nginx多实例 54\n3.5　小结 54\n第4章　Nginx核心技术 55\n4.1　Nginx设计目标 55\n4.2　Nginx架构 57\n4.2.1　事件驱动 57\n4.2.2　异步多阶段处理 59\n4.2.3　模块化设计 61\n4.2.4　管理进程、工作进程设计 63\n4.2.5　内存池 65\n4.2.6　连接池 66\n4.2.7　时间缓存 66\n4.2.8　延迟关闭 67\n4.2.9　跨平台 67\n4.2.10　HTTP模块管道过滤模式 67\n4.2.11　keepalive 68\n4.2.12　pipeline 69\n4.3　小结 69\n第5章　Nginx的工作流程 70\n5.1　Nginx的启动流程 70\n5.2　管理进程的工作流程 72\n5.3　工作进程的工作流程 75\n5.4　配置加载流程 76\n5.5　HTTP框架初始化流程 79\n5.6　HTTP模块调用流程 81\n5.7　HTTP请求处理流程 82\n5.8　小结 83\n第二部分　Lua脚本语言\n第6章　Lua教程 86\n6.1　Lua基础 86\n6.1.1　Lua的特性 86\n6.1.2　Lua的应用场景 87\n6.1.3　安装Lua环境 87\n6.2　Lua基本语法 88\n6.2.1　第一个Lua程序 88\n6.2.2　注释 89\n6.2.3　标识符 90\n6.2.4　关键词 90\n6.2.5　全局变量 90\n6.3　Lua的数据类型 90\n6.4　Lua变量 96\n6.4.1　赋值语句 96\n6.4.2　索引 97\n6.5　Lua循环 98\n6.6　Lua流程控制 98\n6.7　Lua函数 99\n6.7.1　函数的定义 99\n6.7.2　多返回值 100\n6.7.3　可变参数 101\n6.8　Lua运算符 101\n6.8.1　算术运算符 102\n6.8.2　关系运算符 102\n6.8.3　逻辑运算符 103\n6.8.4　其他运算符 104\n6.8.5　运算符的优先级 105\n6.9　Lua字符串 106\n6.10　Lua数组 107\n6.10.1　一维数组 107\n6.10.2　多维数组 108\n6.11　Lua迭代器 109\n6.11.1　泛型for迭代器 109\n6.11.2　无状态的迭代器 110\n6.11.3　多状态的迭代器 111\n6.12　Lua表 112\n6.13　Lua模块与包 113\n6.13.1　require函数 114\n6.13.2　加载机制 115\n6.13.3　C包 115\n6.14　Lua元表 116\n6.14.1　_index元方法 117\n6.14.2　_newindex元方法 118\n6.14.3　为表添加运算符 119\n6.14.4　_call元方法 119\n6.14.5　_tostring元方法 120\n6.15　Lua协同程序 121\n6.15.1　基本语法 121\n6.15.2　生产者–消费者问题 124\n6.16　Lua错误处理 125\n6.16.1　语法错误 125\n6.16.2　运行错误 125\n6.16.3　错误处理 126\n6.16.4　error函数 126\n6.16.5　pcall、xpcall、debug 127\n6.17　Lua调试 128\n6.18　Lua垃圾回收 130\n6.19　Lua面向对象 131\n6.19.1　Lua中面向对象 132\n6.19.2　Lua继承 134\n6.20　Lua数据库访问 136\n6.21　小结 137\n第7章　Lua通用库 138\n7.1　字符串库 138\n7.2　表库 141\n7.3　文件I\/O库 143\n7.3.1　简单模式 144\n7.3.2　完全模式 145\n7.3.3　其他方法 146\n7.4　数学库 147\n7.5　操作系统库 150\n7.6　小结 151\n第三部分　Nginx开发技术\n第8章　JSON数据交换格式 154\n8.1　什么是JSON 154\n8.2　JSON转换为JavaScript对象 155\n8.3　JSON与XML的比较 155\n8.4　JSON语法规则 156\n8.5　格式化 157\n8.6　小结 158\n第9章　nginx.conf文件配置 159\n9.1　默认nginx.conf文件 159\n9.2　nginx.conf示例 162\n9.3　全局配置与顶层配置块 166\n9.3.1　main全局配置 166\n9.3.2　events配置块 170\n9.3.3　http服务器配置块 172\n9.3.4　ngx_http_core_module变量 194\n9.3.5　stream 195\n9.4　中文版nginx.conf 201\n9.5　小结 204\n第10章　Nginx下Lua实现机制 206\n10.1　ngx_lua原理 206\n10.2　HTTP请求的处理阶段 209\n10.3　ngx_lua的处理阶段 210\n10.4　Lua阶段解析 212\n10.4.1　init_by_lua 212\n10.4.2　init_worker_by_lua 213\n10.4.3　set_by_lua 214\n10.4.4　rewrite_by_lua 216\n10.4.5　access_by_lua 217\n10.4.6　content_by_lua 218\n10.4.7　header_filter_by_lua 220\n10.4.8　body_filter_by_lua 220\n10.4.9　log_by_lua 220\n10.4.10　balancer_by_lua_block 221\n10.5　小结 222\n第四部分　Nginx Lua开发实战\n第11章　Redis操作 224\n11.1　Redis操作方法概述 224\n11.2　HttpRedis访问方法 225\n11.2.1　示例 225\n11.2.2　HttpRedis API 226\n11.2.3　HttpRedis变量 228\n11.3　HttpRedis2Module访问方法 229\n11.3.1　示例 229\n11.3.2　nginx.conf配置 230\n11.3.3　常用指令 231\n11.3.4　技术点 234\n11.3.5　应答包解析 238\n11.4　lua-resty-redis访问方法 239\n11.4.1　示例 239\n11.4.2　API函数 240\n11.4.3　技术点 244\n11.4.4　问题列表 246\n11.4.5　限制 247\n11.4.6　安装 247\n11.5　小结 247\n第12章　MySQL操作 248\n12.1　lua-restry-mysql访问方式 248\n12.1.1　示例 248\n12.1.2　安装 250\n12.1.3　方法与函数 251\n12.1.4　多结果集返回示例 254\n12.1.5　其他注意事项 255\n12.1.6　限制 255\n12.2　HttpDrizzleModule访问方式 255\n12.2.1　示例 256\n12.2.2　安装 257\n12.2.3　技术点 258\n12.2.4　配置指令 259\n12.2.5　变量 263\n12.2.6　输出格式 264\n12.3　HttpDrizzleModule完整示例 265\n12.4　小结 272\n第13章　Memcached操作 273\n13.1　mem-nginx-module访问方式 273\n13.1.1　概述 273\n13.1.2　命令 276\n13.1.3　指令 279\n13.1.4　安装 281\n13.1.5　说明 281\n13.1.6　示例 282\n13.2　lua-resty-memcached 访问方式 285\n13.2.1　概述 285\n13.2.2　API 286\n13.2.3　自动日志 291\n13.2.4　限制 291\n13.3　小结 291\n第14章　PostgreSQL操作 292\n14.1　概述 292\n14.2　配置指令 293\n14.3　配置变量 295\n14.4　示例 296\n14.5　小结 298\n第15章　MongoDB操作 299\n15.1　安装 299\n15.2　配置 299\n15.3　操作函数 300\n15.3.1　连接对象方法 300\n15.3.2　数据库对象方法 301\n15.3.3　列对象方法 301\n15.4　示例 302\n15.5　小结 303\n第16章　bit库的使用 304\n16.1　示例 304\n16.2　安装 305\n16.3　函数 305\n16.4　说明 307\n16.5　小结 308\n第17章　lfs库的使用 309\n17.1　目录迭代示例 309\n17.2　安装 310\n17.3　LuaFileSystem函数 310\n17.4　小结 312\n第18章　resty.http库的使用 313\n18.1　安装 313\n18.2　概述 314\n18.3　函数 315\n18.3.1　连接类 315\n18.3.2　应答类 318\n18.3.3　代理类 319\n18.3.4　工具类 319\n18.4　小结 320\n第19章　lcurl库的使用 321\n19.1　安装 321\n19.1.1　安装libcurl 321\n19.1.2　安装lcurl 322\n19.2　示例 322\n19.3　函数 324\n19.3.1　httpform类 325\n19.3.2　easy类 327\n19.3.3　multi类 331\n19.3.4　error类 333\n19.3.5　share类 333\n19.4　常用变量 334\n19.4.1　字符串数组类选项 334\n19.4.2　字符串选项 334\n19.4.3　数值型选项 336\n19.4.4　布尔型选项 337\n19.5　完整示例 338\n19.6　小结 340\n第20章　FFI扩展C库 341\n20.1　示例 341\n20.1.1　调用外部C函数 341\n20.1.2　使用C结构体数据 342\n20.2　FFI库的使用 344\n20.2.1　载入FFI库 344\n20.2.2　访问标准系统函数 344\n20.2.3　访问zlib压缩库 345\n20.2.4　为一个C类型定义元方法 346\n20.2.5　转换C语法 347\n20.3　FFI API 348\n20.3.1　声明和访问外部符号 348\n20.3.2　创建cdata对象 349\n20.3.3　C类型信息 349\n20.3.4　功能函数 350\n20.3.5　特定目标信息 351\n20.3.6　方法回调 351\n20.3.7　扩展标准库函数 351\n20.4　调用curl库的完整示例 352\n20.5　小结 352\n第21章　cjson库的使用 353\n21.1　示例 353\n21.2　函数 354\n21.3　变量 358\n21.4　小结 358\n第22章　lua-resty-template类的使用 359\n22.1　示例 359\n22.2　模板符号 360\n22.2.1　短转义符号 361\n22.2.2　上下文表中的复杂key 361\n22.2.3　HTML转义 361\n22.2.4　保留的上下文key和评论 362\n22.3　安装 363\n22.3.1　Nginx\/OpenResty配置 363\n22.3.2　使用document_root 363\n22.3.3　使用template_root 364\n22.3.4　使用template_location 364\n22.4　Lua API 364\n22.5　模板预编译 368\n22.6　模板助手 368\n22.7　用法示例 369\n22.7.1　引用模板 369\n22.7.2　Layouts的views 370\n22.7.3　使用Blocks 371\n22.7.4　继承 373\n22.7.5　Macros 374\n22.7.6　调用模板中的方法 375\n22.7.7　模板内嵌的Angular或其他标签\/模板 376\n22.7.8　模板内嵌的Markdown 376\n22.7.9　LSP 377\n22.8　FAQ 378\n22.9　小结 379\n第23章　WebSocket的使用 380\n23.1　示例 381\n23.2　安装 383\n23.3　resty.websocket.server 383\n23.4　resty.websocket.client 386\n23.5　resty.websocket.protocol 389\n23.6　使用注意事项 390\n23.7　小结 390\n第24章　TCP私有服务器实例 391\n24.1　协议 391\n24.1.1　协议总体要求 391\n24.1.2　包头定义 392\n24.1.3　协议命令 393\n24.2　DDP系统架构 394\n24.3　DDP服务实现 395\n24.3.1　nginx.conf配置 395\n24.3.2　init.lua 398\n24.3.3　ddp.lua 399\n24.3.4　DDP代码解析 405\n24.3.5　Redis和MySQL的\nlocation 407\n24.3.6　管理页面REST操作 411\n24.4　小结 412\n第25章　WebSocket接入服务器实战 413\n25.1　nginx.conf内容 413\n25.2　ws_svr.lua内容 421\n25.3　update_alarts代码 436\n25.4　小结 438\n第26章　Nginx应用简述 439\n26.1　简单系统 439\n26.2　读写分离系统 439\n26.3　引入缓存系统 440\n26.4　缓存主从系统 441\n26.5　小结 442\n第五部分　开发手册\n第27章　ngx_lua_module模块配置指令详解 444\n27.1　概述 444\n27.2　Lua配置顺序 456\n27.3　配置指令 457\n27.4　小结 487\n第28章　ngx_lua API详解 488\n28.1　概述 488\n28.2　API与常量 491\n28.3　小结 565","pages":"565","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s29723757.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s29723757.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29723757.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30176601\/","id":"30176601","publisher":"机械工业出版社","isbn10":"7111590295","isbn13":"9787111590293","title":"Nginx Lua开发实战","url":"https:\/\/api.douban.com\/v2\/book\/30176601","alt_title":"","author_intro":"李明江，资深软件开发专家，安防领域技术专家，拥有超过20年的研发经验。创办过两家公司。\n曾经在信雅达等国内多家上市公司担任研发要职，参与并主导了大量大型项目的研发。如在南方电网广州亚运会大型安保系统总体研发和管理中担任总负责人；参与中国电信全球眼规范、国家电网安保平台规范、南方电网／国家电网视频监控系统规范、公安部3111规范等规范的制定。\n在C++、分布式平台开发、物联网、云计算、安防、信息安全等领域有非常深厚的积累，擅长Nginx和Lua开发相关的技术，有非常丰富的实践经验。此外，因为有多年带领团队和创业的经历，在团队组建、团队建设、技术方向确立、核心体系搭建、核心技术攻关等方面颇有心得。","summary":"","price":"99.00"},{"rating":{"max":10,"numRaters":3,"average":"0.0","min":0},"subtitle":"","author":["王力","汤永全"],"pubdate":"2019-3","tags":[{"count":2,"name":"运维","title":"运维"},{"count":2,"name":"计算机网络","title":"计算机网络"},{"count":2,"name":"Nginx","title":"Nginx"},{"count":2,"name":"Lua","title":"Lua"},{"count":1,"name":"计算机科学","title":"计算机科学"},{"count":1,"name":"编程","title":"编程"},{"count":1,"name":"微信读书","title":"微信读书"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s30004399.jpg","binding":"平装","translator":[],"catalog":"第1章  Nginx学前必知  1\n1.1  HTTP请求报文  1\n1.2  HTTP响应报文  2\n1.3  安装Nginx  2\n1.4  支持HTTPS  4\n1.5  添加模块  4\n1.6  小结  4\n第2章  基础配置  5\n2.1  Nginx指令和指令块  5\n2.2  Nginx基本配置说明  6\n2.2.1  Main配置  6\n2.2.2  与客户端有关的配置  7\n2.2.3  server块  7\n2.2.4  location块  8\n2.3  include的使用  9\n2.4  常见配置  9\n2.4.1  常见配置注解  10\n2.4.2  常见配置实战技巧  11\n2.5  内置变量  13\n2.5.1  常见内置变量  13\n2.5.2  常见内置变量实战技巧  15\n2.6  小结  16\n第3章  强化基础配置  17\n3.1  牢记Context标识  17\n3.2  获取请求的IP地址  18\n3.2.1  获取用户的真实IP地址  18\n3.2.2  防止IP地址伪造  19\n3.2.3  后端服务器对IP地址的需求  19\n3.3  管理请求的行为  20\n3.3.1  限制IP地址的访问  20\n3.3.2  auth身份验证  21\n3.3.3  利用LDAP服务加强安全  22\n3.3.4  satisfy二选一的访问限制功能  23\n3.4  proxy代理  23\n3.4.1  proxy_pass请求代理规则  24\n3.4.2  减少后端服务器的网络开销  24\n3.4.3  控制请求头和请求体  25\n3.4.4  控制请求和后端服务器的交互时间  26\n3.5  upstream使用手册  26\n3.5.1  代理多台服务器  27\n3.5.2  故障转移  28\n3.5.3  负载均衡  29\n3.5.4  通过hash分片提升缓存命中率  29\n3.5.5  利用长连接提升性能  30\n3.5.6  利用resolver加速内部域名访问  31\n3.6  rewrite使用手册  32\n3.6.1  内部重定向  32\n3.6.2  域名跳转  33\n3.6.3  跳转POST请求  34\n3.6.4  设置变量的值  34\n3.7  限速白名单  35\n3.8  日志  36\n3.8.1  记录自定义变量  36\n3.8.2  日志格式规范  36\n3.8.3  日志存储  37\n3.9  HTTP执行阶段  38\n3.10  小结  39\n第4章  常用模块精解  40\n4.1  定制HTTP头信息  40\n4.1.1  使用ngx_http_headers_module设置响应头  40\n4.1.2  使用headers-more-nginx控制请求头和响应头  43\n4.2  第三方模块set-misc-nginx  45\n4.2.1  设置变量  46\n4.2.2  防止SQL注入  46\n4.2.3  字符串非转义和转义  47\n4.2.4  基于键值的集群分片  48\n4.2.5  base编码  48\n4.2.6  md5编码  50\n4.2.7  生成随机数  50\n4.2.8  本地时间的输出  52\n4.2.9  实战经验  52\n4.3  图片的处理  53\n4.3.1  image_filter图片处理  53\n4.3.2  采用渐进式方式打开JPEG图片  55\n4.3.3  WebP格式  56\n4.3.4  优化图片  56\n4.3.5  实战经验：动态切图  58\n4.4  TCP和UDP代理  58\n4.4.1  代理配置说明  58\n4.4.2  DNS服务的反向代理  62\n4.4.3  MySQL集群代理配置  62\n4.4.4  实战经验  63\n4.5  常用模块介绍  63\n4.5.1  基于访问IP地址跳转到对应城市  63\n4.5.2  修改响应内容  65\n4.5.3  零像素文件的生成及其作用  66\n4.5.4  图片的防盗链  67\n4.6  小结  68\n第5章  缓存系统  69\n5.1  缓存配置说明  69\n5.2  控制缓存有效期  71\n5.3  性能优化  72\n5.3.1  缓存未命中的最佳实践  72\n5.3.2  横向扩展最佳实践  75\n5.3.3  避免硬盘I\/O阻塞  76\n5.3.4  集群模式  77\n5.4  高可用方案  77\n5.5  proxy_cache配置模板  78\n5.6  小结  81\n第6章  引入Lua  82\n6.1  为什么要引入Lua  82\n6.2  Lua和LuaJIT  83\n6.3  环境搭建  83\n6.4  Lua的数据类型  84\n6.4.1  类型说明  84\n6.4.2  类型示例  85\n6.5  表达式  89\n6.5.1  算术运算符  89\n6.5.2  关系运算符  90\n6.5.3  逻辑运算符  91\n6.5.4  字符串连接和字符串长度计算  92\n6.5.5  运算符优先级  93\n6.6  变量  93\n6.6.1  全局变量  94\n6.6.2  局部变量  94\n6.6.3  变量赋值  94\n6.7  流程控制  95\n6.7.1  if-else  95\n6.7.2  for循环  96\n6.7.3  while循环  97\n6.7.4  break和return  97\n6.8  函数  98\n6.8.1  函数格式  98\n6.8.2  传参方式  99\n6.8.3  函数的创建位置  100\n6.9  模块  100\n6.9.1  模块格式  101\n6.9.2  加载模块  101\n6.10  Lua常见操作  102\n6.10.1  操作table  102\n6.10.2  定义字符串  103\n6.10.3  字符串连接  104\n6.11  引入Lua的插曲  104\n6.12  小结  105\n第7章  Lua-Nginx-Module常用指令  106\n7.1  Nginx和OpenResty  106\n7.2  安装Ngx_Lua  107\n7.3  牢记Context标识  108\n7.4  Hello world  108\n7.5  避免I\/O阻塞  109\n7.6  定义模块搜索路径  109\n7.6.1  定义Lua模块的搜索路径  109\n7.6.2  定义C模块的搜索路径  110\n7.7  读\/写Nginx的内置变量  110\n7.8  控制请求头  111\n7.8.1  添加请求头  111\n7.8.2  清除请求头  112\n7.8.3  获取请求头  112\n7.9  控制响应头  113\n7.9.1  获取响应头  113\n7.9.2  修改响应头  114\n7.9.3  清除响应头  116\n7.10  读取请求体  116\n7.10.1  强制获取请求体  116\n7.10.2  用同步非阻塞方式获取请求体  117\n7.10.3  使用场景示例  118\n7.10.4  使用建议  121\n7.11  输出响应体  121\n7.11.1  异步发送响应体  121\n7.11.2  同步发送响应体  122\n7.12  正则表达式  124\n7.12.1  单一捕获  124\n7.12.2  全部捕获  125\n7.12.3  更高效的匹配和捕获  126\n7.12.4  替换数据  128\n7.12.5  转义符号  129\n7.13  子请求  130\n7.13.1  请求方法  130\n7.13.2  单一子请求  130\n7.13.3  并发子请求  134\n7.14  获取Nginx的环境变量  135\n7.14.1  获取环境所在的模块  135\n7.14.2  确认调试模式  136\n7.14.3  获取prefix路径  136\n7.14.4  获取Nginx的版本号  136\n7.14.5  获取configure信息  136\n7.14.6  获取Ngx_Lua的版本号  137\n7.14.7  判断worker进程是否退出  137\n7.14.8  获取worker进程的ID  137\n7.14.9  获取worker进程的数量  137\n7.15  定时任务  138\n7.15.1  创建定时任务  138\n7.15.2  性能优化  140\n7.15.3  禁用的Lua API  141\n7.16  常用指令  142\n7.16.1  请求重定向  142\n7.16.2  日志记录  144\n7.16.3  请求中断处理  146\n7.17  提升开发和测试效率  149\n7.17.1  断开客户端连接  149\n7.17.2  请求休眠  150\n7.17.3  获取系统时间  150\n7.17.4  编码与解码  152\n7.17.5  防止SQL注入  154\n7.17.6  判断是否为子请求  155\n7.17.7  设置MIME类型  156\n7.18  小结  156\n第8章  Ngx_Lua的执行阶段  157\n8.1  init_by_lua_block  157\n8.1.1  阶段说明  157\n8.1.2  初始化配置  158\n8.1.3  控制初始值  159\n8.1.4  init_by_lua_file  160\n8.1.5  可使用的Lua API指令  160\n8.2  init_worker_by_lua_block  160\n8.2.1  阶段说明  160\n8.2.2  启动Nginx的定时任务  161\n8.2.3  动态进行后端健康检查  162\n8.3  set_by_lua_block  165\n8.3.1  阶段说明  165\n8.3.2  变量赋值  165\n8.3.3  rewrite阶段的混用模式  166\n8.3.4  阻塞事件  167\n8.3.5  被禁用的Lua API指令  167\n8.4  rewrite_by_lua_block  168\n8.4.1  阶段说明  168\n8.4.2  利用rewrite_by_lua_no_postpone改变执行顺序  168\n8.4.3  阶段控制  169\n8.5  access_by_lua_block  169\n8.5.1  阶段说明  169\n8.5.2  利用access_by_lua_no_postpone改变执行顺序  170\n8.5.3  阶段控制  170\n8.5.4  动态配置黑白名单  170\n8.6  content_by_lua_block  170\n8.6.1  阶段说明  170\n8.6.2  动态调整执行文件的路径  171\n8.7  balancer_by_lua_block  171\n8.7.1  阶段说明  171\n8.7.2  被禁用的Lua API指令  172\n8.8  header_filter_by_lua_block  172\n8.8.1  阶段说明  172\n8.8.2  被禁用的Lua API指令  173\n8.9  body_filter_by_lua_block  173\n8.9.1  阶段说明  173\n8.9.2  控制响应体数据  173\n8.9.3  被禁用的Lua API指令  175\n8.10  log_by_lua_block  176\n8.10.1  阶段说明  176\n8.10.2  被禁用的Lua API指令  176\n8.11  Lua和ngx.ssl  177\n8.12  Ngx_Lua执行阶段  177\n8.13  小结  180\n第9章  Nginx与数据库的交互  181\n9.1  安装cjson  181\n9.2  与MySQL交互  183\n9.2.1  安装lua-resty-mysql模块  183\n9.2.2  读取MySQL数据  183\n9.2.3  执行多条SQL语句  187\n9.2.4  防止SQL注入  189\n9.3  与Redis交互  189\n9.3.1  安装lua-resty-redis  189\n9.3.2  读\/写Redis  189\n9.3.3  管道命令  191\n9.3.4  密码登录  193\n9.3.5  其他执行命令  194\n9.4  与数据库交互的常见问题  194\n9.4.1  连接池  194\n9.4.2  读\/写分离  197\n9.4.3  分离配置文件和代码  197\n9.5  小结  198\n第10章  缓存利器  199\n10.1   worker进程的共享内存  200\n10.1.1  创建共享内存区域  200\n10.1.2  操作共享内存  201\n10.1.3  制造消息队列  205\n10.1.4  lua-resty-core  207\n10.1.5  配置环境  208\n10.2  Lua模块下的共享内存  209\n10.2.1  安装lua-resty-lrucache  209\n10.2.2  使用lua-resty-lrucache进行缓存的方法  209\n10.3  当前请求在各执行阶段间的数据共享  213\n10.3.1  ngx.ctx的使用  213\n10.3.2  子请求和内部重定向的缓存区别  214\n10.4  利用共享内存配置动态IP地址认证  215\n10.5  缓存和数据库的交互  218\n10.5.1  从数据库获取数据  218\n10.5.2  避免因缓存失效引起的“风暴”  223\n10.6  小结  228\n第11章  动态管理upstream  229\n11.1  实战需求分析  230\n11.2  ngx_http_dyups_module  230\n11.2.1  安装模块  230\n11.2.2  动态管理upstream  230\n11.2.3  确保upstream数据的完整性  232\n11.3  nginx-upsync-module  233\n11.3.1  安装nginx-upsync-module和Consul  233\n11.3.2  Consul的键值操作  234\n11.3.3  动态管理upstream  235\n11.3.4  验证动态配置功能  237\n11.3.5  高可用、高并发设计  237\n11.4  基于balancer_by_lua_block的灵活控制  238\n11.5  小结  239\n第12章  Nginx日志分析系统  240\n12.1  实战需求分析  240\n12.2  ngxtop实时分析  241\n12.3  Flume方案的日志分析  243\n12.4  智能化nginx_log_analysis  244\n12.4.1  架构重构  244\n12.4.2  日志远程传输  245\n12.4.3  时序数据库  245\n12.4.4  日志规则设计  245\n12.5  lua-resty-logger-socket传输方案  246\n12.5.1  安装lua-resty-logger-socket  246\n12.5.2  远程传输配置  247\n12.5.3  参数解读  248\n12.6  时序数据库InfluxDB  249\n12.6.1  安装InfluxDB  249\n12.6.2  基本概念和操作  249\n12.6.3  数据分析之查询函数  250\n12.6.4  数据存放之保留策略  251\n12.6.5  定时任务之连续查询  251\n12.6.6  客户端操作之API  252\n12.6.7  使用UDP模式传输数据  253\n12.7  利用lua-resty-http实现API交互  254\n12.7.1  安装lua-resty-http  254\n12.7.2  使用方式  254\n12.8  提升InfluxDB性能  255\n12.9  小结  255\n第13章  静态容灾系统  256\n13.1  荆棘之路  257\n13.2  设计之路  259\n13.3  架构流程图  261\n13.3.1  反向代理系统  261\n13.3.2  日志分析系统  261\n13.3.3  后台系统  261\n13.3.4  爬虫系统  262\n13.3.5  容灾的缓存系统  262\n13.3.6  时间版本的用途  263\n13.3.7  异地容灾  263\n13.4  核心代码解说  264\n13.4.1  Ngx_Lua应用  264\n13.4.2  爬虫和日志系统的关系  266\n13.4.3  全部容灾和部分容灾功能  266\n13.5  静态容灾的智能关闭方案  267\n13.5.1  从日志分析系统中复制请求  267\n13.5.2  利用goreplay复制流量  267\n13.5.3  Nginx的镜像功能  268\n13.5.4  灰度验证容灾系统缓存  269\n13.6  小结  269\n第14章  深入挖掘反向代理  270\n14.1  验证码防御中心  270\n14.2  鉴权管理中心  272\n14.2.1  利用auth_request管理鉴权  272\n14.2.2  利用Ngx_Lua子请求实现鉴权功能  273\n14.3  并行访问  274\n14.3.1  轻线程的启动和终止  275\n14.3.2  等待和终止轻线程  276\n14.3.3  URL的外部合并和内部并发  278\n14.3.4  使用cosocket实现外部访问  281\n14.4  小结  281\n第15章  爬虫  282\n15.1  区分搜索引擎爬虫和恶意爬虫  282\n15.2  应对搜索引擎爬虫  284\n15.2.1  搜索引擎的User-Agent  284\n15.2.2  Robots协议  285\n15.2.3  控制搜索引擎爬虫实战  286\n15.3  应对恶意爬虫  288\n15.3.1  发现恶意爬虫  288\n15.3.2  抵御恶意爬虫之禁止访问  289\n15.3.3  抵御恶意爬虫之验证码拦截  290\n15.4  小插曲——使用假数据迷惑恶意爬虫  290\n15.5  小结  291\n第16章  性能分析和优化  292\n16.1  性能分析场景搭建  292\n16.1.1  安装SystemTap  292\n16.1.2  LuaJIT的Debug模式  293\n16.1.3  开启PCRE的Debug模式  294\n16.1.4  分析工具下载  294\n16.1.5  找出Debug不支持的包  295\n16.2  流量复制  295\n16.3  各项指标分析和优化建议  295\n16.3.1  连接池使用状态分析  295\n16.3.2  找出读\/写频繁的文件  297\n16.3.3  执行阶段耗时分析  297\n16.3.4  连接数和文件打开数分析  298\n16.3.5  找出CPU“偷窃者”  298\n16.3.6  正则表达式耗时分析  299\n16.3.7  找出消耗CPU资源较多的指令  301\n16.3.8  利用火焰图展示和分析数据  303\n16.4  检查全局变量  305\n16.5  小结  305\n第17章  值得拥有的OpenResty  306\n17.1  OPM  307\n17.2  使用DNS提升访问效率  309\n17.3  TCP和UDP服务  310\n17.4  多层级缓存  312\n17.5  lua-resty-core扩展  313\n17.6  字符串分割  313\n17.7  Nginx进程管理  313\n17.8  全局唯一标识符UUID  315\n17.9  “全家福”awesome-resty  316\n17.10  OpenResty，未来！  316\n第18章  开发环境下的常见问题  317\n18.1  被截断的响应体  317\n18.2  “邪恶”的if  317\n18.3  “贪婪”的正则匹配  318\n18.4  规范HTTP状态码  319\n18.5  规范URL  319\n18.6  proxy_set_header的误操作  320\n18.7  开发环境下的证书问题  320\n18.8  深层次的错误重定向  323\n18.9  压测环境下的限速和短连接  323\n18.10  小结  323","pages":"344","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s30004399.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s30004399.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s30004399.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30459546\/","id":"30459546","publisher":"电子工业出版社","isbn10":"7121354608","isbn13":"9787121354601","title":"Nginx实战：基于Lua语言的配置、开发与架构详解","url":"https:\/\/api.douban.com\/v2\/book\/30459546","alt_title":"","author_intro":"王力\n折800运维架构师，Nginx开发工程师，具有多年互联网相关项目的开发经验。喜欢使用小众技术完成运维、开发和测试任务，擅长通过架构设计降低开发难度，擅长搭建Nginx高性能服务。\n汤永全\n折800运维主管，具有多年互联网相关项目的运维工作经验。历经传统运维和互联网运维，一步一个脚印，积累了不少运维相关的经验和感悟。活跃于成都运维管理人员的线下组织“运维罗汉堂”。","summary":"《Nginx实战：基于Lua语言的配置、开发与架构详解》主要讲解了Nginx在反向代理和应用开发中的作用，阅读本书可以了解Nginx在互联网开发中扮演的多个角色，充分利用这些角色的各项功能有助于提升服务的整体性能。《Nginx实战：基于Lua语言的配置、开发与架构详解》所介绍的大部分功能是通过Nginx+Lua进行开发和配置的，但并不要求读者精通Lua，在必要的位置本书会对Lua进行选择性讲解。涉及实战的内容会有配套源码，方便读者学习和使用。\n《Nginx实战：基于Lua语言的配置、开发与架构详解》适合广大运维人员和开发人员学习，对使用Nginx完成各种服务架构感兴趣的架构师也可以阅读《Nginx实战：基于Lua语言的配置、开发与架构详解》。阅读本书需要有Nginx初级或中级配置经验。","price":"79"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":[],"pubdate":"","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","large":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","medium":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif"},"alt":"https:\/\/book.douban.com\/subject\/30843733\/","id":"30843733","publisher":"","isbn10":"9865764318","isbn13":"9789865764319","title":"王者歸來：進擊的伺服器：用Nginx取代Apache建立全語言種類的雲端網站","url":"https:\/\/api.douban.com\/v2\/book\/30843733","alt_title":"","author_intro":"","summary":"","price":"176.80元"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":[],"pubdate":"","tags":[],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s31637835.jpg","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s31637835.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s31637835.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s31637835.jpg"},"alt":"https:\/\/book.douban.com\/subject\/32747459\/","id":"32747459","publisher":"","isbn10":"4295000728","isbn13":"9784295000723","title":"nginx実践ガイド","url":"https:\/\/api.douban.com\/v2\/book\/32747459","alt_title":"","author_intro":"","summary":"单行本-平装, インプレス,インプレス インプレス 0480","price":""},{"rating":{"max":10,"numRaters":1,"average":"0.0","min":0},"subtitle":"","author":["罗剑锋"],"pubdate":"2019-5","tags":[{"count":1,"name":"C++","title":"C++"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s32341864.jpg","binding":"平装","translator":[],"catalog":"第0章  导读\t1\n0.1  关于本书\t1\n0.2  读者对象\t3\n0.3  读者要求\t4\n0.4  运行环境\t5\n0.5  本书的结构\t5\n0.6  如何阅读本书\t6\n0.7  本书的源码\t7\n第1章  Nginx入门\t8\n1.1  关于Nginx\t8\n1.1.1  历史\t9\n1.1.2  特点\t9\n1.1.3  进程模型\t10\n1.1.4  版本\t12\n1.2  安装Nginx\t12\n1.2.1  准备工作\t13\n1.2.2  快速安装\t13\n1.2.3  运行命令\t14\n1.2.4  验证安装\t15\n1.2.5  定制安装\t16\n1.3  配置Nginx\t18\n1.3.1  语法格式\t19\n1.3.2  进程管理\t20\n1.3.3  动态模块\t22\n1.3.4  运行日志\t22\n1.3.5  事件机制\t22\n1.4  HTTP服务\t23\n1.4.1  基本配置\t24\n1.4.3  location配置\t25\n1.4.4  file配置\t26\n1.5  TCP\/UDP服务\t27\n1.6  反向代理\t28\n1.6.1  上游集群\t28\n1.6.2  负载均衡\t29\n1.6.3  代理转发\t30\n1.7  变量\t30\n1.8  总结\t32\n第2章  Nginx开发准备\t33\n2.1  源码结构\t33\n2.2  源码特点\t34\n2.2.1  代码风格\t34\n2.2.2  代码优化\t35\n2.2.3  面向对象思想\t35\n2.3  头文件\t36\n2.4  总结\t36\n第3章  Nginx基础设施\t37\n3.1  常数\t37\n3.1.1  环境信息\t37\n3.1.2  版本信息\t38\n3.1.3  错误码\t38\n3.2  整数类型\t39\n3.2.1  标准整数类型\t39\n3.2.2  自用整数类型\t40\n3.2.3  无效值\t40\n3.3  内存池\t42\n3.3.1  结构定义\t42\n3.3.2  操作函数\t43\n3.3.3  用法示例\t44\n3.4  字符串\t44\n3.4.1  结构定义\t44\n3.4.2  操作函数\t45\n3.4.3  用法示例\t48\n3.5  时间\t49\n3.5.1  结构定义\t49\n3.5.2  操作函数\t49\n3.5.3  用法示例\t50\n3.6  日期\t50\n3.6.1  结构定义\t50\n3.6.2  操作函数\t51\n3.6.3  用法示例\t52\n3.7  运行日志\t52\n3.7.1  结构定义\t52\n3.7.2  操作函数\t53\n3.7.3  用法示例\t54\n3.8  摘要算法\t54\n3.8.1  Times33\t55\n3.8.2  CRC\t55\n3.8.3  MurmurHash\t56\n3.8.4  MD5\t57\n3.8.5  SHA-1\t57\n3.9  数据编码\t58\n3.9.1  Base64\t58\n3.9.2  HTML\/JSON\t59\n3.10  总结\t60\n第4章  Nginx高级数据结构\t61\n4.1  动态数组\t61\n4.1.1  结构定义\t62\n4.1.2  操作函数\t63\n4.1.3  用法示例\t64\n4.2  单向链表\t65\n4.2.1  结构定义\t65\n4.2.2  操作函数\t66\n4.2.3  用法示例\t66\n4.3  双端队列\t68\n4.3.1  结构定义\t68\n4.3.2  操作函数\t69\n4.3.3  用法示例\t71\n4.4  红黑树\t72\n4.4.1  结构定义\t73\n4.4.2  操作函数\t75\n4.4.3  用法示例\t76\n4.5  缓冲区\t78\n4.5.1  结构定义\t78\n4.5.2  操作函数\t80\n4.5.3  用法示例\t81\n4.6  数据块链\t82\n4.6.1  结构定义\t82\n4.6.2  操作函数\t83\n4.6.3  用法示例\t83\n4.7  总结\t84\n第5章  Nginx开发概述\t85\n5.1  开发示例\t85\n5.1.1  模块设计\t85\n5.1.2  配置解析\t86\n5.1.3  处理函数\t88\n5.1.4  模块集成\t90\n5.1.5  编译脚本\t91\n5.1.6  测试验证\t92\n5.2  开发流程\t92\n5.2.1  设计\t93\n5.2.2  开发\t93\n5.2.3  编译\t94\n5.2.4  测试验证\t94\n5.2.5  调优\t94\n5.2.6  流程图\t95\n5.3  编译脚本\t95\n5.3.1  运行机制\t96\n5.3.2  脚本变量\t96\n5.3.3  添加模块\t97\n5.3.4  脚本格式\t97\n5.3.5  旧式脚本\t98\n5.4  总结\t99\n第6章  Nginx模块体系\t100\n6.1  模块架构\t100\n6.1.1  结构定义\t100\n6.1.2  模块的签名\t102\n6.1.3  模块的种类\t103\n6.1.4  模块的函数指针表\t104\n6.1.5  模块的类图\t105\n6.1.6  模块的组织形式\t106\n6.1.7  模块的静态加载\t108\n6.1.8  模块的动态加载\t110\n6.2  配置解析\t113\n6.2.1  结构定义\t113\n6.2.2  配置解析的基本流程\t116\n6.2.3  存储模型\t118\n6.2.4  访问配置数据\t122\n6.2.5  配置数据的位置\t123\n6.2.6  配置数据的解析\t124\n6.2.7  配置数据的合并\t126\n6.2.8  配置指令的类型\t127\n6.3  源码分析\t128\n6.3.1  ngx_core_module\t128\n6.3.2  ngx_errlog_module\t130\n6.4  总结\t132\n第7章  Nginx功能框架\t134\n7.1  框架简介\t134\n7.1.1  模块分类\t134\n7.1.2  处理流程\t135\n7.1.3  请求的处理阶段\t137\n7.1.4  请求结构体\t138\n7.1.5  请求的环境数据\t140\n7.2  处理引擎\t141\n7.2.1  函数原型\t141\n7.2.2  处理函数的存储方式\t141\n7.2.3  内容处理函数\t142\n7.2.4  引擎的数据结构\t143\n7.2.5  引擎的初始化\t144\n7.2.6  引擎的运行机制\t145\n7.2.7  日志阶段的处理\t148\n7.3  过滤引擎\t148\n7.3.1  函数原型\t148\n7.3.2  过滤函数链表\t149\n7.3.3  过滤函数的顺序\t150\n7.3.4  过滤链表的运行机制\t152\n7.3.5  请求体过滤\t153\n7.4  源码分析\t153\n7.4.1  ngx_http_static_module\t154\n7.4.2  ngx_http_not_modified_filter_module\t155\n7.5  总结\t156\n第8章  Nginx请求处理\t158\n8.1  状态码\t158\n8.2  请求结构体\t159\n8.3  请求行\t160\n8.3.1  请求方法\t160\n8.3.2  协议版本号\t161\n8.3.3  资源标识符\t161\n8.4  请求头\t162\n8.5  请求体\t163\n8.5.1  结构定义\t163\n8.5.2  操作函数\t164\n8.6  响应头\t164\n8.6.1  结构定义\t164\n8.6.2  操作函数\t165\n8.7  响应体\t166\n8.8  源码分析\t166\n8.8.1  ngx_http_static_module\t166\n8.8.2  ngx_http_not_modified_filter_module\t168\n8.9  开发示例：content handler\t169\n8.9.1  模块设计\t169\n8.9.2  配置数据\t169\n8.9.3  处理函数\t170\n8.9.4  注册函数\t171\n8.9.5  模块集成\t172\n8.9.6  编译脚本\t173\n8.9.7  测试验证\t173\n8.10  开发示例：filter\t173\n8.10.1  模块设计\t173\n8.10.2  配置数据\t174\n8.10.3  环境数据\t174\n8.10.4  注册过滤函数\t175\n8.10.5  过滤响应头\t175\n8.10.6  过滤响应体\t176\n8.10.7  模块集成\t178\n8.10.8  编译脚本\t179\n8.10.9  测试验证\t179\n8.11  总结\t180\n第9章  Nginx请求转发\t181\n9.1  框架简介\t181\n9.1.1  工作原理\t182\n9.1.2  请求结构体\t183\n9.1.3  上游结构体\t184\n9.1.4  上游配置参数\t185\n9.2  请求转发\t186\n9.2.1  回调函数\t186\n9.2.2  初始化\t188\n9.2.3  设置参数\t189\n9.2.4  启动连接\t190\n9.2.5  处理响应头\t190\n9.2.6  处理响应体\t191\n9.3  负载均衡\t192\n9.3.1  结构定义\t192\n9.3.2  初始化模块入口\t196\n9.3.3  初始化地址列表\t197\n9.3.4  初始化算法\t199\n9.3.5  执行算法\t200\n9.4  源码分析\t200\n9.4.1  ngx_http_memcached_module\t201\n9.4.2  ngx_http_upstream_ip_hash_module\t203\n9.5  开发示例：upstream\t206\n9.5.1  模块设计\t206\n9.5.2  配置数据\t206\n9.5.3  上行数据\t208\n9.5.4  下行数据\t208\n9.5.5  启动转发\t209\n9.5.6  注册函数\t210\n9.5.7  模块集成\t210\n9.5.8  编译脚本\t211\n9.5.9  测试验证\t212\n9.6  开发示例：balance\t212\n9.6.1  模块设计\t212\n9.6.2  配置数据\t212\n9.6.3  算法数据结构\t213\n9.6.4  模块入口\t213\n9.6.5  算法实现\t214\n9.6.6  模块集成\t215\n9.6.7  编译脚本\t216\n9.6.8  测试验证\t216\n9.7  总结\t216\n第10章  Nginx子请求\t218\n10.1  框架简介\t218\n10.1.1  工作原理\t219\n10.1.2  请求结构体\t220\n10.1.3  回调函数\t221\n10.1.4  待处理请求链表\t223\n10.1.5  子请求存储结构\t223\n10.2  运行机制\t223\n10.2.1  创建子请求\t224\n10.2.2  处理引擎\t228\n10.2.3  数据整理\t229\n10.3  开发示例\t230\n10.3.1  模块设计\t231\n10.3.2  配置数据\t231\n10.3.3  环境数据\t231\n10.3.4  回调函数\t231\n10.3.5  处理函数\t232\n10.3.6  注册函数\t233\n10.3.7  测试验证\t234\n10.4  总结\t234\n第11章  Nginx变量\t236\n11.1  结构定义\t236\n11.1.1  变量\t237\n11.1.2  复杂变量\t238\n11.1.3  变量的存储\t239\n11.1.4  请求结构体\t239\n11.2  操作变量\t240\n11.2.1  添加变量\t240\n11.2.2  获取变量\t241\n11.2.3  修改变量\t242\n11.2.4  编译复杂变量\t242\n11.2.5  获取复杂变量\t242\n11.3  开发示例：变量\t243\n11.3.1  模块设计\t243\n11.3.2  定义变量\t243\n11.3.3  添加变量\t244\n11.3.4  获取变量\t244\n11.3.5  测试验证\t245\n11.4  开发示例：复杂变量\t246\n11.4.1  模块设计\t246\n11.4.2  定义复杂变量\t246\n11.4.3  编译复杂变量\t246\n11.4.4  获取复杂变量\t247\n11.4.5  测试验证\t247\n11.5  总结\t247\n第12章  Nginx内存管理机制\t249\n12.1  基本系统调用\t250\n12.1.1  malloc\t250\n12.1.2  posix_memalign\t251\n12.1.3  free\t251\n12.2  块式内存池\t252\n12.2.1  结构定义\t252\n12.2.2  常量定义\t255\n12.2.3  创建内存池\t255\n12.2.4  分配内存\t257\n12.2.5  分配大块内存\t258\n12.2.6  分配小块内存\t259\n12.2.7  释放内存\t264\n12.2.8  清理机制\t264\n12.2.9  清空内存池\t265\n12.2.10  销毁内存池\t266\n12.3  页式内存池\t267\n12.3.1  结构定义\t268\n12.3.2  常量定义\t270\n12.3.3  初始化内存池\t271\n12.3.4  分配内存\t273\n12.3.5  分配大块内存\t275\n12.3.6  分配小块内存\t277\n12.3.7  释放内存\t280\n12.4  总结\t282\n第13章  Nginx进程机制\t284\n13.1  基本系统调用\t284\n13.1.1  errno\t284\n13.1.2  getrlimit\t285\n13.2  进程系统调用\t285\n13.2.1  getpid\t285\n13.2.2  fork\t286\n13.2.3  waitpid\t286\n13.3  信号系统调用\t287\n13.3.1  kill\t287\n13.3.2  sigaction\t288\n13.3.3  sigsuspend\t288\n13.4  结构定义\t288\n13.4.1  ngx_cycle_t\t288\n13.4.2  ngx_core_conf_t\t289\n13.4.3  ngx_process_t\t290\n13.5  全局变量\t291\n13.5.1  命令行相关\t291\n13.5.2  操作系统相关\t292\n13.5.3  进程功能相关\t292\n13.5.4  信号功能相关\t293\n13.6  启动过程\t293\n13.6.1  基本流程\t293\n13.6.2  解析命令行\t294\n13.6.3  版本和帮助信息\t294\n13.6.4  初始化cycle\t294\n13.6.5  测试配置\t296\n13.6.6  发送信号\t297\n13.6.7  守护进程化\t297\n13.6.8  启动工作进程\t298\n13.6.9  流程图\t298\n13.7  信号处理\t299\n13.7.1  信号处理函数\t300\n13.7.2  发送信号\t300\n13.7.3  处理信号\t301\n13.8  单进程模式\t302\n13.8.1  single进程\t302\n13.8.2  single进程流程图\t304\n13.9  多进程模式\t304\n13.9.1  产生子进程\t304\n13.9.2  master进程\t306\n13.9.3  master进程流程图\t309\n13.9.4  worker进程\t310\n13.9.5  worker进程流程图\t312\n13.10  总结\t313\n第14章  Nginx进程间通信机制\t315\n14.1  基本系统调用\t315\n14.1.1  atomic\t315\n14.1.2  sched_yield\t316\n14.1.3  semaphore\t316\n14.1.4  mmap\t317\n14.2  共享内存（Ⅰ）\t317\n14.2.1  结构定义\t317\n14.2.2  创建共享内存\t317\n14.2.3  使用共享内存\t318\n14.3  自旋锁\t318\n14.3.1  自旋锁定\t319\n14.3.2  解除锁定\t320\n14.3.3  使用自旋锁\t320\n14.4  互斥锁\t320\n14.4.1  结构定义\t320\n14.4.2  创建互斥锁\t321\n14.4.3  互斥锁定\t322\n14.4.4  解除锁定\t323\n14.4.5  销毁互斥锁\t324\n14.4.6  使用互斥锁\t324\n14.5  读写锁\t325\n14.5.1  写锁定\t325\n14.5.2  读锁定\t325\n14.5.3  解除锁定\t326\n14.5.4  降级锁定\t326\n14.5.5  使用读写锁\t327\n14.6  共享内存（Ⅱ）\t327\n14.6.1  结构定义\t327\n14.6.2  添加共享内存\t328\n14.6.3  创建共享内存\t329\n14.6.4  使用共享内存\t330\n14.7  总结\t331\n第15章  Nginx事件机制\t333\n15.1  基本系统调用\t333\n15.1.1  errno\t334\n15.1.2  ioctl\t334\n15.1.3  setitimer\t334\n15.1.4  gettimeofday\t334\n15.2  socket系统调用\t335\n15.2.1  socket\t335\n15.2.2  bind\t335\n15.2.3  listen\t336\n15.2.4  accept\t336\n15.2.5  connect\t336\n15.2.6  recv\t336\n15.2.7  send\t337\n15.2.8  setsockopt\t337\n15.2.9  close\t337\n15.2.10  函数关系图\t338\n15.3  epoll系统调用\t338\n15.3.1  epoll_create\t339\n15.3.2  epoll_ctl\t339\n15.3.3  epoll_wait\t340\n15.3.4  LT和ET\t341\n15.3.5  函数关系图\t342\n15.4  结构定义\t342\n15.4.1  ngx_event_t\t342\n15.4.2  ngx_connection_t\t343\n15.4.3  ngx_listening_t\t345\n15.4.4  ngx_cycle_t\t346\n15.4.5  ngx_os_io_t\t347\n15.4.6  ngx_event_actions_t\t351\n15.4.7  ngx_posted_events\t353\n15.4.8  关系图\t354\n15.5  定时器\t354\n15.5.1  红黑树\t354\n15.5.2  操作函数\t355\n15.5.3  超时处理\t355\n15.6  模块体系\t358\n15.6.1  函数指针表\t358\n15.6.2  模块的组织形式\t359\n15.6.3  核心配置\t361\n15.6.4  epoll模块\t362\n15.7  全局变量\t363\n15.7.1  更新时间相关\t363\n15.7.2  事件机制相关\t364\n15.7.3  负载均衡相关\t365\n15.7.4  统计相关\t365\n15.8  进程初始化\t366\n15.8.1  初始化函数\t366\n15.8.2  基本参数初始化\t368\n15.8.3  事件机制初始化\t369\n15.8.4  连接池初始化\t370\n15.8.5  监听端口初始化\t371\n15.8.6  初始化流程图\t373\n15.9  运行机制\t373\n15.9.1  添加事件\t374\n15.9.2  删除事件\t377\n15.9.3  处理事件\t378\n15.9.4  接受连接\t382\n15.9.5  负载均衡\t384\n15.10  避免阻塞\t389\n15.11  总结\t390\n第16章  Nginx多线程机制\t392\n16.1  eventfd系统调用\t392\n16.2  pthread系统调用\t393\n16.3  结构定义\t393\n16.3.1  ngx_thread_task_t\t394\n16.3.2  ngx_thread_pool_queue_t\t394\n16.3.3  ngx_thread_pool_t\t395\n16.3.4  结构关系图\t396\n16.4  事件通知\t396\n16.4.1  函数接口\t396\n16.4.2  初始化\t397\n16.4.3  发送通知\t398\n16.4.4  处理通知\t398\n16.5  运行机制\t399\n16.5.1  完成任务队列\t399\n16.5.2  创建线程池\t399\n16.5.3  创建任务\t400\n16.5.4  投递任务\t401\n16.5.5  执行任务\t402\n16.5.6  任务完成回调\t404\n16.5.7  销毁线程池\t405\n16.6  开发示例\t406\n16.6.1  模块设计\t406\n16.6.2  配置数据\t407\n16.6.3  线程任务\t407\n16.6.4  任务完成回调\t408\n16.6.5  投递任务\t409\n16.6.6  测试验证\t410\n16.7  总结\t410\n第17章  Nginx Stream机制\t412\n17.1  模块体系\t412\n17.1.1  函数指针表\t413\n17.1.2  基础模块\t413\n17.1.3  核心模块\t415\n17.1.4  结构关系图\t416\n17.1.5  存储模型\t416\n17.2  监听端口\t418\n17.2.1  结构定义\t418\n17.2.2  解析配置\t420\n17.2.3  启动监听\t424\n17.3  处理引擎\t425\n17.3.1  阶段定义\t426\n17.3.2  函数原型\t426\n17.3.3  处理函数的存储方式\t426\n17.3.4  引擎数据结构\t427\n17.3.5  结构关系图\t428\n17.3.6  引擎的初始化\t428\n17.4  过滤引擎\t430\n17.4.1  函数原型\t430\n17.4.2  过滤函数链表\t430\n17.5  运行机制\t431\n17.5.1  会话结构体\t431\n17.5.2  创建会话\t432\n17.5.3  执行引擎\t435\n17.5.4  通用阶段处理\t437\n17.5.5  预读数据\t438\n17.5.6  产生响应数据\t442\n17.5.7  过滤数据\t442\n17.5.8  结束会话\t442\n17.6  开发示例\t443\n17.6.1  discard协议\t444\n17.6.2  time协议\t446\n17.6.3  echo协议\t448\n17.7  总结\t450\n第18章  Nginx HTTP机制\t452\n18.1  结构定义\t452\n18.1.1  ngx_http_state_e\t452\n18.1.2  ngx_http_connection_t\t453\n18.1.3  ngx_http_request_t\t453\n18.2  初始化连接\t454\n18.2.1  建立连接\t455\n18.2.2  等待数据\t456\n18.2.3  读取请求头\t458\n18.3  执行引擎\t463\n18.3.1  初始化引擎\t463\n18.3.2  通用阶段\t465\n18.3.3  改写阶段\t466\n18.3.4  访问控制阶段\t467\n18.3.5  内容产生阶段\t469\n18.4  处理请求体\t470\n18.4.1  丢弃缓冲区数据\t470\n18.4.2  读取并丢弃数据\t471\n18.4.3  读事件处理函数\t473\n18.4.4  启动丢弃处理\t474\n18.5  发送数据\t475\n18.5.1  发送初始化\t475\n18.5.2  事件处理函数\t476\n18.6  结束请求\t478\n18.6.1  释放请求资源\t478\n18.6.2  检查引用计数结束请求\t479\n18.6.3  检查状态结束请求\t480\n18.6.4  综合处理结束请求\t481\n18.7  总结\t483\n第19章  Nginx与设计模式\t485\n19.1  设计模式简介\t485\n19.2  框架级别的模式\t485\n19.3  业务级别的模式\t487\n19.4  代码级别的模式\t488\n19.5  总结\t490\n第20章  Nginx C++开发\t491\n20.1  语言简介\t491\n20.2  开发准备\t492\n20.2.1  程序库\t492\n20.2.2  头文件\t492\n20.2.3  编程范式\t493\n20.2.4  实现原则\t493\n20.2.5  源码组织\t494\n20.2.6  编译脚本\t495\n20.3  封装类\t497\n20.3.1  基础设施\t497\n20.3.2  高级数据结构\t500\n20.3.3  功能框架\t505\n20.3.4  请求处理\t509\n20.4  开发示例：content handler\t510\n20.4.1  配置信息类\t510\n20.4.2  业务逻辑类\t511\n20.4.3  模块集成类\t512\n20.4.4  实现源文件\t515\n20.5  开发示例：filter\t515\n20.5.1  配置信息类\t515\n20.5.2  环境数据类\t515\n20.5.3  业务逻辑类\t516\n20.5.4  模块集成类\t518\n20.5.5  实现源文件\t519\n20.6  总结\t519\n第21章  Nginx JavaScript开发\t521\n21.1  语言简介\t521\n21.2  模块简介\t522\n21.3  开发准备\t523\n21.4  指令简介\t523\n21.5  功能接口\t524\n21.5.1  运行日志\t524\n21.5.2  变量\t525\n21.5.3  请求处理\t525\n21.5.4  子请求\t527\n21.5.5  定时器\t527\n21.5.6  流处理\t527\n21.6  开发示例\t528\n21.6.1  content handler\t528\n21.6.2  subrequest\t529\n21.6.3  A\/B testing\t530\n21.7  总结\t531\n第22章  Nginx Lua开发\t532\n22.1  语言简介\t532\n22.2  模块简介\t533\n22.2.1  http_lua\t533\n22.2.2  stream_lua\t533\n22.2.3  lua-resty-lib\t534\n22.3  开发准备\t534\n22.4  指令简介\t535\n22.4.1  配置指令\t536\n22.4.2  功能指令\t536\n22.4.3  指令关系图\t538\n22.5  应用开发流程\t538\n22.6  功能接口\t539\n22.6.1  运行日志\t539\n22.6.2  时间与日期\t540\n22.6.3  变量\t540\n22.6.4  正则表达式\t541\n22.6.5  请求处理\t542\n22.6.6  请求转发\t544\n22.6.7  子请求\t545\n22.6.8  定时器\t546\n22.6.9  共享内存\t546\n22.7  开发示例\t547\n22.7.1  content handler\t548\n22.7.2  filter\t549\n22.7.3  upstream\t550\n22.7.4  subrequest\t550\n22.7.5  discard\t551\n22.7.6  echo\t552\n22.8  总结\t552\n第23章  Nginx调试与测试\t554\n23.1  调试\t554\n23.1.1  调试器\t554\n23.1.2  调试断点\t555\n23.1.3  调试日志\t556\n23.2  功能测试\t558\n23.2.1  测试套件\t559\n23.2.2  测试用例\t559\n23.2.3  运行测试\t564\n23.3  性能测试\t564\n23.3.1  ab\t565\n23.3.2  http_load\t565\n23.3.3  wrk\t566\n23.3.4  Test::Nginx\t567\n23.4  总结\t568\n第24章  Nginx性能分析\t569\n24.1  简介\t569\n24.2  火焰图\t570\n24.3  分析工具\t572\n24.3.1  使用方式\t572\n24.3.2  处理数据\t573\n24.4  动态追踪\t576\n24.4.1  CPU分析\t577\n24.4.2  I\/O分析\t579\n24.4.3  Memory分析\t580\n24.4.4  观测工具\t581\n24.5  总结\t582\n第25章  结束语\t583\n25.1  本书的遗憾\t583\n25.2  下一步\t583\n25.3  临别赠言\t584\n附录A  推荐书目\t585\n附录B  字符串格式化\t587\n附录C  开发辅助工具\t589","pages":"608","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s32341864.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s32341864.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s32341864.jpg"},"alt":"https:\/\/book.douban.com\/subject\/33477001\/","id":"33477001","publisher":"电子工业出版社","isbn10":"7121364360","isbn13":"9787121364365","title":"Nginx完全开发指南：使用C、C++、JavaScript和Lua","url":"https:\/\/api.douban.com\/v2\/book\/33477001","alt_title":"","author_intro":"罗剑锋（网名Chrono），1996年就读于东北财经大学；1997年开始接触C\/C++；1998年参加计算机软件专业技术资格和水平考试，获高级程序员资质；2003年毕业于北京理工大学，获计算机专业硕士学位。主要研究方向为C\/C++、设计模式、高性能网络服务器开发，业余爱好是阅读、旅游、欣赏音乐和电影。","summary":"Nginx是著名的Web服务器，性能优异，运行效率远超传统的Apache、Tomcat，广泛应用于国内外诸多顶级互联网公司。\nNginx的一个突出特点是其灵活优秀的模块化架构，可以在不修改核心的前提下增加任意功能，自2004 年发布至今，已经拥有百余个官方及非官方的功能模块（如proxy、mysql、redis、rtmp、lua等），使得Nginx 成长为了一个近乎“全能”的服务器软件。\nNginx功能强大，架构复杂，学习、维护和开发的门槛较高。为了帮助读者跨越这一障碍，《Nginx完全开发指南：使用C、C++、JavaScript和Lua》深入最新的Nginx源码（Stable 1.16.0），详细剖析了模块体系、动态插件、功能框架、内存分配、进程模型、事件驱动、线程池、TCP\/UDP\/HTTP 处理等Nginx 核心运行机制，在此基础上讲解如何使用C、C++、JavaScript、Lua 等语言来增强扩展Nginx，让任何人都能够便捷、轻松地开发和定制Nginx，进而应用到自己的实际工作中，创造出更多的价值。\n《Nginx完全开发指南：使用C、C++、JavaScript和Lua》结构严谨、脉络清晰、论述精确、详略得当、图文并茂，值得广大软件开发工程师、系统运维工程师和编程爱好者拥有。","price":"109.00元"}]}
