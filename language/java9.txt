1	{"count":51,"start":0,"total":51,"books":[{"rating":{"max":10,"numRaters":19,"average":"7.8","min":0},"subtitle":"","author":["[西] 哈维尔·费尔南德斯·冈萨雷斯"],"pubdate":"2018-10","tags":[{"count":43,"name":"Java","title":"Java"},{"count":22,"name":"并发","title":"并发"},{"count":13,"name":"多线程","title":"多线程"},{"count":7,"name":"编程","title":"编程"},{"count":6,"name":"软件开发","title":"软件开发"},{"count":6,"name":"计算机","title":"计算机"},{"count":6,"name":"Concurrency","title":"Concurrency"},{"count":3,"name":"图灵","title":"图灵"}],"origin_title":"Mastering Concurrency Programming with Java 9","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29870933.jpg","binding":"平装","translator":["唐富年"],"catalog":"第1章　第一步：并发设计原理　　1\n1.1　基本的并发概念　　1\n1.1.1　并发与并行　　1\n1.1.2　同步　　2\n1.1.3　不可变对象　　2\n1.1.4　原子操作和原子变量　　3\n1.1.5　共享内存与消息传递　　3\n1.2　并发应用程序中可能出现的问题　　3\n1.2.1　数据竞争　　3\n1.2.2　死锁　　4\n1.2.3　活锁　　4\n1.2.4　资源不足　　4\n1.2.5　优先权反转　　5\n1.3　设计并发算法的方法论　　5\n1.3.1　起点：算法的一个串行版本　　5\n1.3.2　第1步：分析　　5\n1.3.3　第2步：设计　　5\n1.3.4　第3步：实现　　6\n1.3.5　第4步：测试　　6\n1.3.6　第5步：调整　　6\n1.3.7　结论　　7\n1.4　Java 并发API　　8\n1.4.1　基本并发类　　8\n1.4.2　同步机制　　8\n1.4.3　执行器　　9\n1.4.4　Fork\/Join 框架　　9\n1.4.5　并行流　　9\n1.4.6　并发数据结构　　9\n1.5　并发设计模式　　10\n1.5.1　信号模式　　10\n1.5.2　会合模式　　11\n1.5.3　互斥模式　　11\n1.5.4　多元复用模式　　12\n1.5.5　栅栏模式　　12\n1.5.6　双重检查锁定模式　　12\n1.5.7　读?写锁模式　　13\n1.5.8　线程池模式　　14\n1.5.9　线程局部存储模式　　14\n1.6　设计并发算法的提示和技巧　　14\n1.6.1　正确识别独立任务　　14\n1.6.2　在尽可能高的层面上实施并发处理　　15\n1.6.3　考虑伸缩性　　15\n1.6.4　使用线程安全API　　15\n1.6.5　绝不要假定执行顺序　　16\n1.6.6　在静态和共享场合尽可能使用局部线程变量　　16\n1.6.7　寻找更易于并行处理的算法版本　　17\n1.6.8　尽可能使用不可变对象　　17\n1.6.9　通过对锁排序来避免死锁　　17\n1.6.10 使用原子变量代替同步　　18\n1.6.11 占有锁的时间尽可能短　　19\n1.6.12 谨慎使用延迟初始化　　19\n1.6.13 避免在临界段中使用阻塞操作　　19\n1.7　小结　　20\n第2章　使用基本元素：Thread 和Runnable　　21\n2.1　Java 中的线程　　21\n2.1.1　Java 中的线程：特征和状态　　22\n2.1.2　Thread 类和Runnable 接口　　23\n2.2　第一个例子：矩阵乘法　　24\n2.2.1　公共类　　24\n2.2.2　串行版本　　25\n2.2.3　并行版本　　25\n2.3　第二个例子：文件搜索　　32\n2.3.1　公共类　　32\n2.3.2　串行版本　　32\n2.3.3　并发版本　　33\n2.3.4　对比解决方案　　37\n2.4　小结　　38\n第3章　管理大量线程：执行器　　39\n3.1　执行器简介　　39\n3.1.1　执行器的基本特征　　39\n3.1.2　执行器框架的基本组件　　40\n3.2　第一个例子：k-最近邻算法　　40\n3.2.1　k-最近邻算法：串行版本　　41\n3.2.2　k-最近邻算法：细粒度并发版本　　42\n3.2.3　k-最近邻算法：粗粒度并发版本　　45\n3.2.4　对比解决方案　　46\n3.3　第二个例子：客户端\/服务器环境下的并发处理　　48\n3.3.1　客户端\/服务器：串行版　　48\n3.3.2　客户端\/服务器：并行版本　　51\n3.3.3　额外的并发服务器组件　　54\n3.3.4　对比两种解决方案　　59\n3.3.5　其他重要方法　　61\n3.4　小结　　62\n第4章　充分利用执行器　　63\n4.1　执行器的高级特性　　63\n4.1.1　任务的撤销　　63\n4.1.2　任务执行调度　　64\n4.1.3　重载执行器方法　　64\n4.1.4　更改一些初始化参数　　64\n4.2　第一个例子：高级服务器应用程序　　65\n4.2.1　ServerExecutor 类　　65\n4.2.2　命令类　　70\n4.2.3　服务器部件　　72\n4.2.4　客户端部件　　78\n4.3　第二个例子：执行周期性任务　　79\n4.3.1　公共部件　　79\n4.3.2　基础阅读器　　81\n4.3.3　高级阅读器　　84\n4.4　有关执行器的其他信息　　87\n4.5　小结　　87\n第5章　从任务获取数据：Callable接口与Future 接口　　88\n5.1　Callable 接口和Future 接口简介　　88\n5.1.1　Callable 接口　　88\n5.1.2　Future 接口　　89\n5.2　第一个例子：单词最佳匹配算法　　89\n5.2.1　公共类　　90\n5.2.2　最佳匹配算法：串行版本　　91\n5.2.3　最佳匹配算法：第一个并发版本　　92\n5.2.4　最佳匹配算法：第二个并发版本　　95\n5.2.5　单词存在算法：串行版本　　96\n5.2.6　单词存在算法：并行版本　　98\n5.2.7　对比解决方案　　100\n5.3　第二个例子：为文档集创建倒排索引　　102\n5.3.1　公共类　　103\n5.3.2　串行版本　　104\n5.3.3　第一个并发版本：每个文档一个任务　　105\n5.3.4　第二个并发版本：每个任务多个文档　　109\n5.3.5　对比解决方案　　112\n5.3.6　其他相关方法　　113\n5.4　小结　　113\n第6章　运行分为多阶段的任务：Phaser 类　　115\n6.1　Phaser 类简介　　115\n6.1.1　参与者的注册与注销　　116\n6.1.2　同步阶段变更　　116\n6.1.3　其他功能　　116\n6.2　第一个例子：关键字抽取算法　　117\n6.2.1　公共类　　118\n6.2.2　串行版本　　121\n6.2.3　并发版本　　123\n6.2.4　对比两种解决方案　　128\n6.3　第二个例子：遗传算法　　129\n6.3.1　公共类　　130\n6.3.2　串行版本　　132\n6.3.3　并发版本　　134\n6.3.4　对比两种解决方案　　139\n6.4　小结　　141\n第7章　优化分治解决方案： Fork\/Join 框架　　142\n7.1　Fork\/Join 框架简介　　142\n7.1.1　Fork\/Join 框架的基本特征　　143\n7.1.2　Fork\/Join 框架的局限性　　143\n7.1.3　Fork\/Join 框架的组件　　144\n7.2　第一个例子：k-means 聚类算法　　144\n7.2.1　公共类　　145\n7.2.2　串行版本　　149\n7.2.3　并发版本　　151\n7.2.4　对比解决方案　　155\n7.3　第二个例子：数据筛选算法　　157\n7.3.1　公共特性　　157\n7.3.2　串行版　　157\n7.3.3　并发版本　　159\n7.3.4　对比两个版本　　165\n7.4　第三个例子：归并排序算法　　166\n7.4.1　共享类　　166\n7.4.2　串行版本　　167\n7.4.3　并发版本　　169\n7.4.4　对比两个版本　　172\n7.5　Fork\/Join 框架的其他方法　　172\n7.6　小结　　173\n第8章　使用并行流处理大规模数据集：MapReduce 模型　　174\n8.1　流的简介　　174\n8.1.1　流的基本特征　　174\n8.1.2　流的组成部分　　175\n8.1.3　MapReduce 与MapCollect　　177\n8.2　第一个例子：数值综合分析应用程序　　178\n8.2.1　并发版本　　178\n8.2.2　串行版本　　185\n8.2.3　对比两个版本　　186\n8.3　第二个例子：信息检索工具　　186\n8.3.1　约简操作简介　　187\n8.3.2　第一种方式：全文档查询　　188\n8.3.3　第二种方式：约简的文档查询　　191\n8.3.4　第三种方式：生成一个含有结果的HTML 文件　　191\n8.3.5　第四种方式：预先载入倒排索引　　194\n8.3.6　第五种方式：使用我们的执行器　　195\n8.3.7　从倒排索引获取数据：ConcurrentData 类　　196\n8.3.8　获取文件中的单词数　　196\n8.3.9　获取文件的平均tfxidf 值　　196\n8.3.10 获取索引中的最大tfxidf值和最小tfxidf 值　　197\n8.3.11 ConcurrentMain 类　　198\n8.3.12 串行版　　199\n8.3.13 对比两种解决方案　　199\n8.4　小结　　202\n第9章　使用并行流处理大规模数据集：MapCollect 模型　　203\n9.1　使用流收集数据　　203\n9.2　第一个例子：无索引条件下的数据搜索　　205\n9.2.1　基本类　　205\n9.2.2　第一种方式：基本搜索　　207\n9.2.3　第二种方式：高级搜索　　209\n9.2.4　本例的串行实现　　211\n9.2.5　对比实现方案　　211\n9.3　第二个例子：推荐系统　　212\n9.3.1　公共类　　212\n9.3.2　推荐系统：主类　　213\n9.3.3　ConcurrentLoaderAccumulator 类　　215\n9.3.4　串行版　　216\n9.3.5　对比两个版本　　216\n9.4　第三个例子：社交网络中的共同联系人　　217\n9.4.1　基本类　　218\n9.4.2　并发版本　　219\n9.4.3　串行版本　　223\n9.4.4　对比两个版本　　223\n9.5　小结　　224\n第10章　异步流处理：反应流　　225\n10.1　Java 反应流简介　　225\n10.1.1　Flow.Publisher 接口　　226\n10.1.2　Flow.Subscriber 接口　　226\n10.1.3　Flow.Subscription 接口　　226\n10.1.4　SubmissionPublisher 类　　226\n10.2　第一个例子：面向事件通知的集中式系统　　 227\n10.2.1　Event 类　　227\n10.2.2　Producer 类　　 227\n10.2.3　Consumer 类　　 228\n10.2.4　Main 类　　230\n10.3　第二个例子：新闻系统　　231\n10.3.1　News 类　　232\n10.3.2　发布者相关的类　　232\n10.3.3　Consumer 类　　 235\n10.3.4　Main 类　　236\n10.4　小结　　238\n第11章　探究并发数据结构和同步工具　　240\n11.1　并发数据结构　　240\n11.1.1　阻塞型数据结构和非阻塞型数据结构　　241\n11.1.2　并发数据结构　　241\n11.1.3　使用新特性　　244\n11.1.4　原子变量　　251\n11.1.5　变量句柄　　252\n11.2　同步机制　　254\n11.2.1　CommonTask 类　　255\n11.2.2　Lock 接口　　255\n11.2.3　Semaphore 类　　256\n11.2.4　CountDownLatch 类　　258\n11.2.5　CyclicBarrier 类　　259\n11.2.6　CompletableFuture 类　　261\n11.3　小结　　268\n第12章　测试与监视并发应用程序　　269\n12.1　监视并发对象　　269\n12.1.1　监视线程　　269\n12.1.2　监视锁　　270\n12.1.3　监视执行器　　272\n12.1.4　监视Fork\/Join 框架　　273\n12.1.5　监视Phaser　　274\n12.1.6　监视流API　　275\n12.2　监视并发应用程序　　276\n12.2.1　Overview 选项卡　　278\n12.2.2　Memory 选项卡　　279\n12.2.3　Threads 选项卡　　280\n12.2.4　Classes 选项卡　　280\n12.2.5　VM Summary 选项卡　　281\n12.2.6　MBeans 选项卡　　283\n12.2.7　About 选项卡　　284\n12.3　测试并发应用程序　　284\n12.3.1　使用MultithreadedTC 测试并发应用程序　　285\n12.3.2　使用Java Pathfinder 测试并发应用程序　　288\n12.4　小结　　293\n第13章　JVM 中的并发处理：Clojure、带有GPars 库的Groovy 以及Scala　　294\n13.1　Clojure 的并发处理　　294\n13.1.1　使用Java 元素　　295\n13.1.2　引用类型　　295\n13.1.3　Ref 对象　　298\n13.1.4　Delay　　299\n13.1.5　Future　　300\n13.1.6　Promise　　301\n13.2　Groovy 及其GPars 库的并发处理　　302\n13.3　软件事务性内存　　302\n13.3.1　使用Java 元素　　302\n13.3.2　数据并行处理　　303\n13.3.3　Fork\/Join 处理　　307\n13.3.4　Actor　　308\n13.3.5　Agent　　315\n13.3.6　Dataf low　　316\n13.4　Scala 的并发处理　　322\n13.4.1　Scala 中的Future 对象　　322\n13.4.2　Promise　　328\n13.5　小结　　329","pages":"344","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29870933.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29870933.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29870933.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30327401\/","id":"30327401","publisher":"人民邮电出版社","isbn10":"7115491666","isbn13":"9787115491664","title":"精通Java并发编程（第2版）","url":"https:\/\/api.douban.com\/v2\/book\/30327401","alt_title":"Mastering Concurrency Programming with Java 9","author_intro":"哈维尔·费尔南德斯·冈萨雷斯（Javier Fernández González）\n软件架构师，拥有十余年Java研发经验，对J2EE、Struts框架和使用Java开发大规模数据处理的应用程序颇有心得，为保险、医疗、交通等领域客户开发了许多J2EE Web应用程序。","summary":"Java 提供了一套非常强大的并发API，可以轻松实现任何类型的并发应用程序。本书讲述Java 并发API 最重要的元素，包括执行器框架、Phaser 类、Fork\/Join 框架、流API、并发数据结构、同步机制，并展示如何在实际开发中使用它们。此外，本书还介绍了设计并发应用程序的方法论、设计模式、实现良好并发应用程序的提示和技巧、测试并发应用程序的工具和方法，以及如何使用面向Java 虚拟机的其他编程语言实现并发应用程序。","series":{"id":"46192","title":"图灵程序设计丛书·Java系列"},"price":"89.00元"},{"rating":{"max":10,"numRaters":2,"average":"0.0","min":0},"subtitle":"Create clean code with Dependency Injection principles","author":["Krunal Patel","Nilang Patel"],"pubdate":"2018-4","tags":[{"count":1,"name":"Java9","title":"Java9"},{"count":1,"name":"DependencyInjection","title":"DependencyInjection"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29760784.jpg","binding":"Paperback","translator":[],"catalog":"Table of Contents\n1: WHY DEPENDENCY INJECTION?\n2: DEPENDENCY INJECTION IN JAVA 9\n3: DEPENDENCY INJECTION WITH SPRING\n4: DEPENDENCY INJECTION WITH GOOGLE GUICE\n5: SCOPES\n6: ASPECT-ORIENTED PROGRAMMING AND INTERCEPTORS\n7: IOC PATTERNS AND BEST PRACTICES","pages":"246","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s29760784.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s29760784.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29760784.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30214560\/","id":"30214560","publisher":"","isbn10":"1788296257","isbn13":"9781788296250","title":"Java 9 Dependency Injection","url":"https:\/\/api.douban.com\/v2\/book\/30214560","alt_title":"","author_intro":"Krunal Patel\nKrunal Patel has been working at Liferay Portal for over 5 years and has over 9 years of experience in enterprise application development using Java and Java EE technologies. He has worked in various domains, such as healthcare, hospitality, and enterprise intranet.\nHe was awarded an ITIL® Foundation Certificate in IT Service Management in 2015, a Liferay 6.1 Developer Certification in 2013, and a MongoDB for Java Developers certificate in 2013.\nHe has reviewed Mastering Apache Solr 7.x by Packt Publishing.\nNilang Patel\nNilang Patel has over 14 years of core IT experience in leading project, software design and development, and supporting enterprise applications using enterprise Java technologies.\nHe is experienced in core Java\/J2EE based application and has experience in healthcare, human resource, taxation, intranet application, energy and risk management domain. He contributes to various forums and has a personal blog.\nHe acquired the Liferay 6.1 Developer Certification in 2013, Brainbench Java 6 certification in 2012, and a Sun Certified Programmer for the Java 2 Platform 1.5 (SCJP) in 2007.","summary":"Dependency Injection (DI) is a design pattern that allows us to remove the hard-coded dependencies and make our application loosely coupled, extendable, and maintainable. We can implement DI to move the dependency resolution from compile-time to runtime. This book will be your one stop guide to write loosely coupled code using the latest features of Java 9 with frameworks such as Spring 5 and Google Guice.\nWe begin by explaining what DI is and teaching you about IoC containers. Then you’ll learn about object compositions and their role in DI. You’ll find out how to build a modular application and learn how to use DI to focus your efforts on the business logic unique to your application and let the framework handle the infrastructure work to put it all together.\nMoving on, you’ll gain knowledge of Java 9’s new features and modular framework and how DI works in Java 9. Next, we’ll explore Spring and Guice, the popular frameworks for DI. You’ll see how to define injection keys and configure them at the framework-specific level. After that, you’ll find out about the different types of scopes available in both popular frameworks. You’ll see how to manage dependency of cross-cutting concerns while writing applications through aspect-oriented programming.\nTowards the end, you’ll learn to integrate any third-party library in your DI-enabled application and explore common pitfalls and recommendations to build a solid application with the help of best practices, patterns, and anti-patterns in DI.","price":""},{"rating":{"max":10,"numRaters":6,"average":"0.0","min":0},"subtitle":"Patterns and Practices for Developing Maintainable Applications","author":["Paul Bakker","Sander Mak"],"pubdate":"2017-9","tags":[{"count":8,"name":"Java","title":"Java"},{"count":4,"name":"计算机","title":"计算机"},{"count":2,"name":"编程","title":"编程"},{"count":1,"name":"虚拟机","title":"虚拟机"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29559295.jpg","binding":"Paperback","translator":[],"catalog":"Chapter 1 Modularity Matters\nChapter 2 Modules and the Modular JDK\nChapter 3 Working with Modules\nChapter 4 Services\nChapter 5 Modularity Patterns\nChapter 6 Advanced Modularity Patterns\nChapter 7 Migration Without Modules\nChapter 8 Migration to Modules\nChapter 9 Library Migration\nChapter 10 Building Modular Codebases\nChapter 11 Scaling Down with Custom Runtime Images\nChapter 12 A Modular Future","pages":"300","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s29559295.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s29559295.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29559295.jpg"},"alt":"https:\/\/book.douban.com\/subject\/27154251\/","id":"27154251","publisher":"O'Reilly Media","isbn10":"1491954167","isbn13":"9781491954164","title":"Java 9 Modularity","url":"https:\/\/api.douban.com\/v2\/book\/27154251","alt_title":"","author_intro":"Sander Mak is a Fellow at Luminis in The Netherlands, where he crafts modular and scalable software. Most often on the JVM, but with a touch of TypeScript where needed. He writes, is an avid conference speaker and loves sharing knowledge through his blog at branchandbound.net, and also as a Pluralsight instructor.\nPaul Bakker is a software architect for Luminis Technologies. His current focus is on building modular enterprise applications and the cloud. He believes that modularity and the cloud are the two main points we have to deal with to bring technology to a next level, and is working on making this possible for main stream software development. Today he is working on educational software focussed on personalised learning for high school students in the Netherlands. He is also responsible for pushing technology forward. Luminis strongly believes in open source and all the technology development they are doing happens in the open source community. Paul is an active contributor on projects such as Amdatu, Apache ACE, JBoss Forge and BndTools. He has a background as trainer on Java related technology and is a regular speaker on conferences.","summary":"The upcoming Java 9 module system will affect existing applications and offer new ways of creating modular and maintainable applications. With this hands-on book, Java developers will learn not only about the joys of modularity, but also about the patterns needed to create truly modular and reliable applications. Authors Sander Mak and Paul Bakker teach you the concepts behind the Java 9 module system, along with the new tools it offers. You’ll also gain learn how to modularize existing code and how to build new Java applications in a modular way.\n- Understand Java 9 module system concepts\n- Master the patterns and practices for building truly modular applications\n- Migrate existing applications and libraries to Java 9 modules\n- Use JDK 9 tools for modular development and migration","price":"USD 34.49"},{"rating":{"max":10,"numRaters":10,"average":"6.0","min":0},"subtitle":"核心原则与实践","author":[],"pubdate":"2018-6","tags":[{"count":9,"name":"Java","title":"Java"},{"count":7,"name":"java","title":"java"},{"count":5,"name":"模块化","title":"模块化"},{"count":4,"name":"计算科学","title":"计算科学"},{"count":1,"name":"软件开发","title":"软件开发"},{"count":1,"name":"计算机","title":"计算机"},{"count":1,"name":"架构","title":"架构"}],"origin_title":"Java 9 Modularity","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29858106.jpg","binding":"","translator":["王净"],"catalog":"目录\n前言  1\n第一部分 Java模块系统介绍\n第1章 模块化概述  8\n1.1 什么是模块化  9\n1.2 在Java 9之前  10\n1.2.1 将JAR作为模块？  11\n1.2.2 类路径地狱  13\n1.3 Java 9模块  14\n第2章 模块和模块化JDK  18\n2.1 模块化JDK  19\n2.2 模块描述符  22\n2.3 可读性  23\n2.4 可访问性  24\n2.5 隐式可读性  25\n2.6 限制导出  29\n2.7 模块解析和模块路径  29\n2.8 在不使用模块的情况下使用模块化JDK  31\n第3章 使用模块  33\n3.1 第一个模块  33\n3.1.1 剖析模块  33\n3.1.2 命名模块  35\n3.1.3 编译  36\n3.1.4 打包  37\n3.1.5 运行模块  37\n3.1.6 模块路径  39\n3.1.7 链接模块  40\n3.2 任何模块都不是一座孤岛  41\n3.2.1 EasyText示例介绍  41\n3.2.2 两个模块  43\n3.3 使用平台模块  46\n3.3.1 找到正确的平台模块  46\n3.3.2 创建GUI模块  47\n3.4 封装的限制  51\n第4章 服务  54\n4.1 工厂模式  54\n4.2 用于实现隐藏的服务  57\n4.2.1 提供服务  57\n4.2.2 消费服务  59\n4.2.3 服务生命周期  61\n4.2.4 服务提供者方法  62\n4.3 工厂模式回顾  64\n4.4 默认服务实现  65\n4.5 服务实现的选择  66\n4.6 具有服务绑定的模块解析  68\n4.7 服务和链接  70\n第5章 模块化模式  73\n5.1 确定模块边界  74\n5.2 精益化模块  76\n5.3 API模块  76\n5.3.1 API模块中应该包含什么  77\n5.3.2 隐式可读性  78\n5.3.3 带有默认实现的API模块  81\n5.4 聚合器模块  82\n5.4.1 在模块上构建一个外观  83\n5.4.2 安全拆分模块  84\n5.5 避免循环依赖  86\n5.5.1 拆分包  86\n5.5.2 打破循环  87\n5.6 可选的依赖关系  90\n5.6.1 编译时依赖关系  91\n5.6.2 使用服务实现可选依赖关系  95\n5.7 版本化模块  96\n5.8 资源封装  99\n5.8.1 从模块加载资源  100\n5.8.2 跨模块加载资源  101\n5.8.3 使用ResourceBundle类  102\n第6章 高级模块化模式  104\n6.1 重温强封装性  104\n6.1.1 深度反射  105\n6.1.2 开放式模块和包  106\n6.1.3 依赖注入  109\n6.2 对模块的反射  111\n6.2.1 内省  112\n6.2.2 修改模块  113\n6.2.3 注释  114\n6.3 容器应用程序模式  115\n6.3.1 层和配置  116\n6.3.2 层中的类加载  119\n6.3.3 插件体系结构  122\n6.3.4 容器体系结构  127\n6.3.5 解析容器中的平台模块  132\n第二部分 迁移\n第7章 没有模块的迁移  134\n7.1 类路径已经“死”了？  135\n7.2 库、强封装和JDK 9类路径  135\n7.3 编译和封装的API  138\n7.4 删除的类型  141\n7.5 使用JAXB和其他Java EE API  142\n7.6 jdk.unsupported模块  145\n7.7 其他更改  146\n第8章 迁移到模块  148\n8.1 迁移策略  148\n8.2 一个简单示例  149\n8.3 混合类路径和模块路径  150\n8.4 自动模块  152\n8.5 开放式包  155\n8.6 开放式模块  157\n8.7 破坏封装的VM参数  158\n8.8 自动模块和类路径  158\n8.9 使用jdeps  161\n8.10 动态加载代码  164\n8.11 拆分包  166\n第9章 迁移案例研究：Spring和Hibernate  167\n9.1 熟悉应用程序  167\n9.2 使用Java 9在类路径上运行  172\n9.3 设置模块  173\n9.4 使用自动模块  174\n9.5 Java平台依赖项和自动模块  176\n9.6 开放用于反射的包  176\n9.7 解决非法访问问题  177\n9.8 重构到多个模块  178\n第10章 库迁移  180\n10.1 模块化之前  181\n10.2 选择库模块名称  181\n10.3 创建模块描述符  184\n10.4 使用模块描述符更新库  186\n10.5 针对较旧的Java版本  187\n10.6 库模块依赖关系  188\n10.6.1 内部依赖关系  188\n10.6.2 外部依赖关系  191\n10.7 针对多个Java版本  192\n10.7.1 多版本JAR  192\n10.7.2 模块化多版本JAR  195\n第三部分 模块化开发工具\n第11章 构建工具和IDE  198\n11.1 Apache Maven  198\n11.1.1 多模块项目  200\n11.1.2 使用Apache Maven创建EasyText示例  200\n11.1.3 使用Apache Maven运行模块化的应用程序  204\n11.2 Gradle  205\n11.3 IDE  205\n第12章 测试模块  207\n12.1 黑盒测试  208\n12.2 使用JUnit进行黑盒测试  210\n12.3 白盒测试  212\n12.4 测试工具  216\n第13章 使用自定义运行时映像进行缩减  217\n13.1 静态链接和动态链接  218\n13.2 使用jlink  219\n13.3 查找正确的服务提供者模块  223\n13.4 链接期间的模块解析  223\n13.5 基于类路径应用程序的jlink  224\n13.6 压缩大小  225\n13.7 提升性能  227\n13.8 跨目标运行时映像  228\n第14章 模块化的未来  229\n14.1 OSGi  230\n14.2 Java EE  232\n14.3 微服务  232\n14.4 下一步  233","pages":"234","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s29858106.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s29858106.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29858106.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30297395\/","id":"30297395","publisher":"机械工业出版社","isbn10":"7111601297","isbn13":"9787111601296","title":"Java 9模块化开发","url":"https:\/\/api.douban.com\/v2\/book\/30297395","alt_title":"Java 9 Modularity","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Herbert Schi"],"pubdate":"2005年05月16日","tags":[{"count":1,"name":"侯捷","title":"侯捷"},{"count":1,"name":"Java","title":"Java"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s1359773.jpg","binding":"","translator":["侯捷"],"catalog":"","pages":"","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s1359773.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s1359773.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s1359773.jpg"},"alt":"https:\/\/book.douban.com\/subject\/1333022\/","id":"1333022","publisher":"上奇科技","isbn10":"9867529928","isbn13":"9789867529923","title":"實戰Java 9個別具特色的實作經驗(The Art","url":"https:\/\/api.douban.com\/v2\/book\/1333022","alt_title":"","author_intro":"","summary":"\n本書以精采的實作範例告訴您如何充分充分展現Java的威力，迥異於市面上所有的Java書籍 中西名家聯手打造，名著名譯，不容錯過！ 英文版《The Art of Java》Amazon.com一致好評熱賣中！\n\n可以說，Java對資訊界的重要性奠定在兩大支柱上：內建的Internet支援能力，以及電腦語言設計上的提升。任何一個原因便足以使Java成為好語言，兩個原因加起來更使Java成為偉大的程式語言，確立了它在電腦史上的地位。本書將向您展示，為什麼Java是如此獨特非凡的一個語言。 本書和大多數Java書籍相當不同。本書告訴您如何把Java應用到一些更有趣、更有用，有時候甚至不可思議的的編程工作上。過程中將展現Java語言的威力、多功能，和優雅。唯有透過Java運用上的藝術，才能將Java設計上的藝術性展露無遺。 一如您所預期，書中會出現一些直接和Internet有關的應用程式。然而另有許多章節的程式碼向您展示Java在Internet以外的豐富性。每一章開發出來的程式碼，都可以在無任何修改的情況下直接使用。當您把這些程式拿來當作自己開發工作的出發點，最大的好處才真正顯現。不妨把這些程式和次系統當作您的專案的一個初期發展平台。 本書包含以下主題：算式解析器 （Expression Parser） 語言直譯器 （Language Interpreter） 檔案下載器 （File Download Manager） E-mail客戶端程式 （E-mail Client） 網頁爬行器 （Crawling the Web） HTML描繪器 （Rendering HTML） 統計與繪圖 （Statistics and cartography） 金融計算 （Financial Calculations） 人工智慧搜尋解法 （AI-Based Problem Solving\n","price":"NT$ 680"},{"rating":{"max":10,"numRaters":3,"average":"0.0","min":0},"subtitle":"","author":["Javier Fernández González"],"pubdate":"2017-5-4","tags":[{"count":3,"name":"java并发","title":"java并发"},{"count":2,"name":"Java","title":"Java"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29438443.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"529","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29438443.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29438443.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29438443.jpg"},"alt":"https:\/\/book.douban.com\/subject\/27032929\/","id":"27032929","publisher":"Packt Publishing","isbn10":"178712441X","isbn13":"9781787124417","title":"Java 9 Concurrency Cookbook - Second Edition","url":"https:\/\/api.douban.com\/v2\/book\/27032929","alt_title":"","author_intro":"About the Author\nJavier Fernández González is a software architect with almost 15 years' experience with Java technologies. He has worked as a teacher, researcher, programmer, analyst, writer, and now as an architect in all types of projects related to Java, especially J2EE.As a teacher, he has taught over 1,000 hours of training in basic Java, J2EE, and Struts framework. As a researcher, he has worked in the field of information retrieval, developing applications in order to process large amounts of data in Java and has been a part of several journal articles and conference presentations as a coauthor.In recent years, he has worked on developing J2EE web applications for various clients from different sectors (public administration, insurance, healthcare, transportation, and so on). Currently, he is working as a software architect at Capgemini, which includes developing and maintaining applications for insurance companies and banks. Also, he is the author of Java 7 Concurrency Cookbook, Packt Publishing and Mastering Concurrency Programming with Java 8, Packt Publishing.\nRead more","summary":"Key Features\nGet detailed coverage of important recipes on multi-threading and parallel programmingThis book takes a close look at the Java 9 APIs and their impact on concurrencySee practical examples on thread safety, high-performance classes, safe sharing, and a whole lot more\nBook Description\nWriting concurrent and parallel programming applications is an integral skill for any Java programmer. Java 9 comes with a host of fantastic features, which includes significant performance improvements and new APIs. This book will take you through all the new APIs, showing you how to build parallel and multi-threaded applications. It covers all the elements of the Java Concurrency API, with essential recipes that will help you take advantage of the exciting new capabilities.\nInside you'll discover a whole range of recipes from everything like thread management, synchronization, executors, parallel and reactive streams, and a whole lot more. If you're a Java developers who want to learn concurrency in a practical manner to keep by your side then this title is one you need!\nWhat you will learn\nFind out to manage the basic components of the Java Concurrency APIUse synchronization mechanisms to avoid data race conditions and other problems of concurrent applicationsSeparate the thread management from the rest of the application with the Executor frameworkSolve problems using a parallelized version of the divide and conquer paradigm with the Fork \/ Join frameworkProcess massive data sets in an optimized way using streams and reactive streamsSee which data structures we can use in concurrent applications and how to use themPractice efficient techniques to test concurrent applicationsGet to know tips and tricks to design concurrent applications","price":"USD 49.99"},{"rating":{"max":10,"numRaters":2,"average":"0.0","min":0},"subtitle":"Practical techniques and best practices for optimizing Java applications through concurrency, reactive programming, and more","author":["Mayur Ramgir","Nick Samoylov"],"pubdate":"2017-11","tags":[{"count":2,"name":"Java","title":"Java"},{"count":1,"name":"Performance","title":"Performance"},{"count":1,"name":"High","title":"High"},{"count":1,"name":"9","title":"9"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29641792.jpg","binding":"Paperback","translator":[],"catalog":"Table of Contents\n1: LEARNING JAVA 9 UNDERLYING PERFORMANCE IMPROVEMENTS\n2: IDENTIFYING PERFORMANCE BOTTLENECKS\n3: LEARNING HOW TO TROUBLESHOOT CODE\n4: LEARNING HOW TO USE PROFILING TOOLS\n5: UNDERSTANDING GARBAGE COLLECTION AND MAKING USE OF IT\n6: OPTIMIZING CODE WITH MICROBENCHMARKING\n7: SPEEDING UP JSON GENERATION\n8: TOOLS FOR HIGHER PRODUCTIVITY AND FASTER APPLICATION\n9: MULTITHREADING AND REACTIVE PROGRAMMING\n10: MICROSERVICES\n11: MAKING USE OF NEW APIS TO IMPROVE YOUR CODE","pages":"398","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29641792.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29641792.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29641792.jpg"},"alt":"https:\/\/book.douban.com\/subject\/27606472\/","id":"27606472","publisher":"","isbn10":"1787120783","isbn13":"9781787120785","title":"Java 9 High Performance","url":"https:\/\/api.douban.com\/v2\/book\/27606472","alt_title":"","author_intro":"Mayur Ramgir\nMayur Ramgir has more than 16 years of experience in the software industry, working at various levels. He is a Sun Certified Java Programmer and Oracle Certified SQL Database Expert. He completed an MS in computational science and engineering at Georgia Tech, USA (rank 7th in the world for computer science), and an M.Sc. in multimedia application and virtual environments at University of Sussex, UK. He has also attended various universities for other degrees and courses, such as MIT for applied software security, and University of Oxford for system and software security.\nHe is the CEO of a software company, Zonopact, Inc. headquartered in Boston, USA, which specializes in bringing innovative applications based on AI, robotics, big data, and more. He has single-handedly developed Zonopact’s flagship product, Clintra (B2B-integrated AI-assisted business management software). He is also the inventor of two patent pending technologies, ZPOD (an automated cloud-based medical kiosk system) and ZPIC (an AI-enabled robotic in-car camera system). Apart from this, he is also a prolific business writer who has authored two international award-winning books, Unbarred Innovation: A Pathway to Greatest Discoveries and Evolve Like a Butterfly: A Metamorphic Approach to Leadership.\nHe was featured on the TV and in print media, including Fox News, NBC News, CBS News, Fox Business, Bloomberg International TV, Forbes, Inc. magazine, Daily Mirror, and The Huffington Post. He is also a contributing author of New York Daily Newspaper, the Software Development Times magazine, Newsmax Finance, AlleyWatch, Singapore's top entrepreneurship magazine Young Upstarts, and several more. He is frequently invited as a guest lecturer at various technical and management schools. He has also been invited as a judge at an international innovation challenge competition (Living Talent) in Dubai in December 2017.\nNick Samoylov\nNick Samoylov was born in Moscow, raised in Ukraine, and lived in the Crimea. He graduated as an engineer-physicist from Moscow Institute of Physics and Technologies and has even worked as a theoretical physicist. He has learned programming as a tool for testing his mathematical models using FORTRAN and C++.\nAfter the demise of the USSR, Nick created and successfully ran a software company, but was forced to close it under the pressure of governmental and criminal rackets. In 1999, with his wife, Luda, and two daughters, he emigrated to the USA and has been living in Colorado since then.\nNick adopted Java in 1997 and used it for his work as a software developer-contractor for a variety of companies, including BEA Systems, Warner Telecom, and Boeing. For Boeing, he and his wife, also a Java programmer, developed a system to load application data to an airplane via the internet.\nNick's current projects are related to machine learning and developing a highly scalable system of microservices using non-blocking reactive technologies, including Vert.x, RxJava, and RESTful webservices on Linux deployed in a cloud.\nNick and Luda have two daughters who graduated from Harvard and Tufts universities, respectively. One of their daughters has also received a doctoral degree from Brown University and now works as a professor in the University of California in Chico. Their other daughter is an executive director of the investment bank JPMorgan, in Madrid, Spain.\nIn his free time, Nick likes to read (mostly non-fiction), write (fiction novels and blogs), and hike the Rocky Mountains.","summary":"Finally, a book that focuses on the practicalities rather than theory of Java application performance tuning. This book will be your one-stop guide to optimize the performance of your Java applications.\nWe will begin by understanding the new features and APIs of Java 9. You will then be taught the practicalities of Java application performance tuning, how to make the best use of garbage collector, and find out how to optimize code with microbenchmarking. Moving ahead, you will be introduced to multithreading and learning about concurrent programming with Java 9 to build highly concurrent and efficient applications. You will learn how to fine tune your Java code for best results. You will discover techniques on how to benchmark performance and reduce various bottlenecks in your applications. We'll also cover best practices of Java programming that will help you improve the quality of your codebase.\nBy the end of the book, you will be armed with the knowledge to build and deploy efficient, scalable, and concurrent applications in Java.\nWhat You Will Learn\nWork with JIT compilers\nUnderstand the usage of profiling tools\nGenerate JSON with code examples\nLeverage the command-line tools to speed up application development\nBuild microservices in Java 9\nExplore the use of APIs to improve application code\nSpeed up your application with reactive programming and concurrency","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Gaston C. Hillar"],"pubdate":"2017-4-6","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29420248.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"421","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s29420248.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s29420248.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29420248.jpg"},"alt":"https:\/\/book.douban.com\/subject\/27014746\/","id":"27014746","publisher":"Packt Publishing","isbn10":"1787282848","isbn13":"9781787282841","title":"Java 9 with JShell","url":"https:\/\/api.douban.com\/v2\/book\/27014746","alt_title":"","author_intro":"About the Author\nGaston C. Hillar Gaston C. Hillar is Italian and has been working with computers since he was 8 years old. In the early 80s, he began programming with the legendary Texas TI-99\/4A and Commodore 64 home computers. Gaston has a bachelor's degree in computer science (he graduated with honors). He also holds an MBA (he graduated with an outstanding thesis). At present, Gaston is an independent IT consultant and a freelance author who is always looking for new adventures around the world. He was a senior contributing editor at Dr. Dobb's and has written more than a hundred articles on software development topics. He has received the prestigious Intel® Black Belt Software Developer award eight times. He has written many articles about Java for Oracle Java Magazine. Gaston was also a former Microsoft MVP in technical computing. He is a guest blogger at Intel® Software Network (http:\/\/software.intel.com). You can reach him at gastonhillar@hotmail.com and follow him on Twitter at http:\/\/twitter.com\/gastonhillar. Gaston's blog is http:\/\/csharpmulticore.blogspot.com. He lives with his wife, Vanesa, and his two sons, Kevin and Brandon.\nRead more","summary":"Key Features\nA full account of Java 9's new featuresThis tutorial emphasises fluency using JShell exercisesGet a thorough introduction to contract programming code reuse via Java genericsLearn how to use the new module systemHow to use proper functional programming style inside Java 9\nBook Description\nThe release of Java 9 has brought many subtle and not-so-subtle changes to the way in which Java programmers approach their code. The most important ones are definitely the availability of a REPL, known as JShell, which will make experiments and prototyping much more straightforward than the old IDE-based project-led approach. Another, more subtle change can be seen in the module system, which will lead to more modularized, maintainable code. The techniques to take full advantage of object-oriented code, functional programming and the new modularity features in Java 9 form the main subjects of this book.\nEach chapter will add to the full picture of Java 9 programming starting out with classes and instances and ending with generics and modularity in Java.\nWhat you will learn\nEngage with object-oriented programming in Java 9, starting with code snippets in JShellOptimize your code, applying functional programming featuresDiscover the advantages of modularityBecome very proficient at using JShell itselfLearn the new approach to Java programming, which uses the REPL as a prototyping tool\nAbout the Author\nGaston C. Hillar is Italian and has been working with computers since he was 8 years old. In the early 80s, he began programming with the legendary Texas TI-99\/4A and Commodore 64 home computers. Gaston has a bachelor's degree in computer science (he graduated with honors). He also holds an MBA (he graduated with an outstanding thesis). At present, Gaston is an independent IT consultant and a freelance author who is always looking for new adventures around the world.\nHe was a senior contributing editor at Dr. Dobb's and has written more than a hundred articles on software development topics. He has received the prestigious Intel® Black Belt Software Developer award eight times. He has written many articles about Java for Oracle Java Magazine. Gaston was also a former Microsoft MVP in technical computing.\nHe is a guest blogger at Intel® Software Network (http:\/\/software.intel.com). You can reach him at gastonhillar@hotmail.com and follow him on Twitter at http:\/\/twitter.com\/gastonhillar. Gaston's blog is http:\/\/csharpmulticore.blogspot.com.\nHe lives with his wife, Vanesa, and his two sons, Kevin and Brandon.\nTable of Contents\nJShell – A Read-Evaluate-Print-Loop for Java 9Real-World Objects to UML Diagrams and Java 9 via JShellClasses and InstancesEncapsulation of DataMutable and Immutable ClassesInheritance, Abstraction, Extension, and SpecializationMembers Inheritance and PolymorphismContract Programming with InterfacesAdvanced Contract Programming with InterfacesMaximization of Code Reuse with GenericsAdvanced GenericsObject-Oriented, Functional Programming, and Lambda ExpressionsModularity in Java 9Exercise Answers","price":"USD 49.99"},{"rating":{"max":10,"numRaters":1,"average":"0.0","min":0},"subtitle":"","author":["Kishori Sharan"],"pubdate":"2017-5-19","tags":[{"count":1,"name":"编程","title":"编程"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29436252.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"520","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29436252.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29436252.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29436252.jpg"},"alt":"https:\/\/book.douban.com\/subject\/27030688\/","id":"27030688","publisher":"Apress","isbn10":"1484225910","isbn13":"9781484225912","title":"Java 9 Revealed: For Early Adoption and Migration","url":"https:\/\/api.douban.com\/v2\/book\/27030688","alt_title":"","author_intro":"From the Back Cover\nPreview the new Java 9 modules, SDK, JDK, JVM and more in this short early adopter book. This book covers what's new in Java 9 and how to use some of these new features.Java 9 Revealedis for experienced Java programmers looking to make the migration from Java 7 or Java 8 to Java 9.You will:Develop Java applications using new the module system introduced in Java 9Use the JShell tool in Java 9 for quick prototypingLearn how to use the Reactive Streams API in Java 9Discover what is new in the Process APIInspect a thread's stack with the Stack-Walking APILearn about the new layout of the modular JDK\/JRE runtime imageUse the jlink tool to create a custom runtime imageLearn about the breaking changes in Java 9Create collections with the new convenience factory methodsWork with HTML5 Javadoc\nRead more\nAbout the Author\nKishori Sharan has earned a Master of Science in Computer Information Systems degree from Troy State University, Alabama. He is a Sun Certified Java 2 programmer. He has vast experience in providing training to professional developers in Java, JSP, EJB, and Web technology. He possesses over ten years of experience in implementing enterprise level Java application.\nRead more","summary":"Preview the new Java 9 modules, SDK, JDK, JVM and more in this comprehensive early adopter title. This book covers what’s new in Java 9 and how to use these new features. Java 9 Revealed is for experienced Java programmers looking to make the migration from Java 7 or Java 8 to Java 9.Author Kishori Sharan begins by covering how to develop Java applications using new the module system introduced in Java 9 and how to use the JShell tool in Java 9 for quick prototyping. There is extensive coverage of new Java 9 features, such as the new layout of the modular JDK\/JRE runtime image, new convenience factory methods for creating collections, the new spin-wait hints introduced to improve performance of spin loops in your code, and the new Desktop API for implementing platform-specific desktop features. Along the way you will also learn how to use the Reactive Streams API in Java 9 and, most importantly, this book will show you the breaking changes in Java 9.\nWhat You'll Learn\nDiscover what is new in the Process APIInspect a thread’s stack with the Stack-Walking APIUse the jlink tool to create a custom runtime imageWork with HTML5 Javadoc and use the new search feature in JavadocLearn how to use new methods and collectors in the Streams APILearn how to create a custom logger to log messages from platform classes and how to use JVM logsLearn about new methods in the Optional class and how to use themLearn how to compare arrays and slices of arraysLearn how to use the enhanced try-with-resources blocksMake your object deserialization more secure by using object deserialization filters\nWho This Book Is For\nExperienced Java programmers and developers.","price":"USD 24.19"},{"rating":{"max":10,"numRaters":2,"average":"0.0","min":0},"subtitle":"Project Jigsaw and Scalable Java Applications","author":["Alexandru Jecan"],"pubdate":"2017-7-1","tags":[{"count":2,"name":"模块化","title":"模块化"},{"count":2,"name":"Java","title":"Java"},{"count":1,"name":"软件开发","title":"软件开发"},{"count":1,"name":"计算机","title":"计算机"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29580555.jpg","binding":"平装","translator":[],"catalog":"About the Author                                                                                                      xv\nAbout the Technical Reviewer                                                                                xvii\nAcknowledgments                                                                                                  xix\nIntroduction                                                                                                            xxi\n■Chapter 1: Modular Programming Concepts                                                           1\n■Chapter 2: Project Jigsaw                                                                                     17\n■Chapter 3: Modular JDK and Source Code                                                            31\n■Chapter 4: Defining and Using Modules                                                                45\n■Chapter 5: Modular Runtime Images                                                                    87\n■Chapter 6: Services                                                                                               95\n■Chapter 7: Jlink: The Java Linker                                                                       105\n■Chapter 8: Migration                                                                                           123\n■Chapter 9: The New Module API                                                                          155\n■Chapter 10: Advanced Topics                                                                              173\n■Chapter 11: Testing Modular Applications                                                          189\n■Chapter 12: Integration with Tools                                                                      205","pages":"","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s29580555.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s29580555.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29580555.jpg"},"alt":"https:\/\/book.douban.com\/subject\/27172127\/","id":"27172127","publisher":"Apress","isbn10":"1484227123","isbn13":"9781484227121","title":"Java 9 Modularity Revealed","url":"https:\/\/api.douban.com\/v2\/book\/27172127","alt_title":"","author_intro":"Alexandru Jecan is a software engineer, author, trainer, and speaker residing in Munich, Germany. He earned a degree in computer science from the Technical University of Cluj-Napoca, Romania. Alexandru provides professional in-house training on various software technologies across Germany. He also speaks at tech conferences and user groups, both in Europe and the US, on different topics related to software development. He was awarded the title of “Author of the Month” by the German JavaMagazine. Alexandru likes to read during his free time and to spend time with his family.","summary":"Develop modular applications using the Java Platform Module System, the single most anticipated feature in Java 9. You will improve maintainability and performance of your Java applications by deploying only modules that are needed and encapsulating their implementation details.\nUntil now Java has been monolithic. Using any one part of Java has meant incorporating the entirety of the runtime environment, an approach ill-suited to the increasing number of IoT devices such as fitness monitors, kitchen appliances, toys and games, and so forth. This book shows a new way, to make Java scale from the smallest of footprints in the smallest of devices through desktop PCs and on up to server platforms.\nWith Java 9 Modularity Revealed you will learn to make your projects more reliable and scalable than ever using the most important feature in Java 9—The Java Platform Module System, known more commonly as Project Jigsaw. You will learn how to avoid one of the major pain points of Java programming, that of conflicting class names from different modules, or packages. You will learn to create custom run-time images that represent a minimal and more compact JRE containing only those modules that you need. You will further learn to migrate existing Java applications to modular ones using different approaches and tools. The end result is a new ability to plug together different modules without fear of namespace and other conflicts, and you can deploy to everything from small devices to large servers.\nThis book provides code examples and explanations.\nWhat You'll Learn\nBuild Java applications using the new modular system introduced in Java 9\nCreate your own JRE consisting only of the modules that you require\nAdapt your testing techniques toward modular applications\nlare your dependencies on other modules\nEnable modules to export only specific packages\nMigrate existing Java applications to modular ones\nImprove maintainability and performance of Java applications","price":"USD 29.95"},{"rating":{"max":10,"numRaters":3,"average":"0.0","min":0},"subtitle":"","author":["Peter Verhas"],"pubdate":"2017-4-26","tags":[{"count":2,"name":"Java","title":"Java"},{"count":1,"name":"计算机","title":"计算机"},{"count":1,"name":"编程","title":"编程"},{"count":1,"name":"DEV","title":"DEV"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29565124.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"504","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s29565124.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s29565124.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29565124.jpg"},"alt":"https:\/\/book.douban.com\/subject\/27159288\/","id":"27159288","publisher":"Packt Publishing","isbn10":"178646828X","isbn13":"9781786468284","title":"Java 9 Programming By Example","url":"https:\/\/api.douban.com\/v2\/book\/27159288","alt_title":"","author_intro":"Peter Verhas is a senior Software Architect at EPAM Switzerland. He has more than 10 years of Java development experience and more than 20 years of C with and other programming languages. He wrote books in Hungarian and regularly blogs in English (at DZONE, Java Code Geeks and his on blog Javax0.wordpress.com).\nPeter has MSc. Electrical Engineering and studied at TU Budapest, TU Wien and TU Delft. He worked for companies like Digital Equipment Corporation, T-Mobile supporting telecom and finance industries and was a teacher at TU Budapest for a short period. Peter also publishes open source programs on github.com\/verhas and he is the author of the ScriptBasic interpreter.","summary":"Key Features\nWe bridge the gap between \"learning\" and \"doing\" by providing real-world examples that will improve your software developmentOur example-based approach will get you started quickly with software programming, get you up-to-speed with Java 9, and improve your Java skillsThis book will show you the best practices of Java coding and improve your productivity\nBook Description\nThis book gets you started with essential software development easily and quickly, guiding you through Java's different facets. By adopting this approach, you can bridge the gap between learning and doing immediately. You will learn the new features of Java 9 quickly and experience a simple and powerful approach to software development. You will be able to use the Java runtime tools, understand the Java environment, and create Java programs.\nWe then cover more simple examples to build your foundation before diving to some complex data structure problems that will solidify your Java 9 skills. With a special focus on modularity and HTTP 2.0, this book will guide you to get employed as a top notch Java developer.\nBy the end of the book, you will have a firm foundation to continue your journey towards becoming a professional Java developer.\nWhat you will learn\nCompile, package and run a trivial program using a build management toolGet to know the principles of test-driven development and dependency managementSeparate the wiring of multiple modules from the application logic into an application using dependency injectionBenchmark Java execution using Java 9 microbenchmarkingSee the workings of the Spring framework and use Java annotations for the configurationMaster the scripting API built into the Java language and use the built-in JavaScript interpreterUnderstand static versus dynamic implementation of code and high-order reactive programming in Java\nAbout the Author\nPeter Verhas is a senior software engineer and software architect having electrical engineering and economics background from TU Budapest (MsC) and PTE Hungary (MBA), and also studied at TU Delft and TU Vienna. He created his first programs in 1979, and since then he has authored several open source programs. He has worked in several positions in the telecommunications and finance industries and was the CIO of the Hungarian start-up index.hu during its early days.\nPeter works for EPAM Systems in Switzerland, participating in software development projects at various customer sites, and he supports talent acquisition by interviewing candidates, training programs for developers, and internal mentoring programs.\nYou can follow Peter on Twitter at @verhas, LinkedIn, and GitHub.\nTable of Contents\nGetting Started with Java 9The First Real Java Program - Sorting NamesOptimizing the Sort - Making Code ProfessionalMastermind - Creating a GameExtending the Game - Run Parallel, Run FasterMaking Our Game Professional - Do it as a WebappBuilding a Commercial Web Application Using RESTExtending Our E-Commerce ApplicationBuilding an Accounting Application Using Reactive ProgrammingFinalizing Java Knowledge to a Professional Level","price":"USD 44.99"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Jason Lee"],"pubdate":"2017-8-4","tags":[],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29509931.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"538","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29509931.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29509931.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29509931.jpg"},"alt":"https:\/\/book.douban.com\/subject\/27105341\/","id":"27105341","publisher":"Packt Publishing","isbn10":"178646019X","isbn13":"9781786460196","title":"Java 9 Programming Blueprints","url":"https:\/\/api.douban.com\/v2\/book\/27105341","alt_title":"","author_intro":"About the Author\nJason LeeJason Lee has been writing software professionally for over 20 years, but his love for computers started over a decade earlier, in the fourth grade, when his dad brought home a Commodore 64. He has been working with Java for almost his entire career, with the last 12+ years focused primarily on Enterprise Java. He has written in-house web applications and libraries, and also worked on large, more public projects, such as the JavaServer Faces reference implementation Mojarra, GlassFish, and WebLogic Server. Jason is currently the President of the Oklahoma City Java Users Group, and is an occasional speaker at conferences. Ever the technology enthusiast, his current interests include cloud computing, mobile development, and emerging JVM languages. Apart from work, Jason enjoys spending time with his wife, Angela, and his two sons, Andrew and Noah. He is active in the music ministry of his local church, and enjoys reading, running, martial arts, and playing his bass guitar.\nRead more","summary":"Key Features\nSee some of the new features of Java 9 and be introduced to parts of the Java SDKThis book provides a set of diverse, interesting projects that range in complexity from fairly simple to advanced and cover HTTP 2.0Take advantage of Java's new modularity features to write real-world applications that solve a variety of problems\nBook Description\nJava is a powerful language that has applications in a wide variety of fields. From playing games on your computer to performing banking transactions, Java is at the heart of everything.\nThe book starts by unveiling the new features of Java 9 and quickly walks you through the building blocks that form the basis of writing applications. There are 10 comprehensive projects in the book that will showcase the various features of Java 9. You will learn to build an email filter that separates spam messages from all your inboxes, a social media aggregator app that will help you efficiently track various feeds, and a microservice for a client\/server note application, to name a few. The book covers various libraries and frameworks in these projects, and also introduces a few more frameworks that complement and extend the Java SDK.\nThrough the course of building applications, this book will not only help you get to grips with the various features of Java 9, but will also teach you how to design and prototype professional-grade applications with performance and security considerations.\nWhat you will learn\nLearn how to package Java applications as modules by using the Java Platform Module SystemImplement process management in Java by using the all-new process handling APIIntegrate your applications with third-party services","price":"USD 49.99"},{"rating":{"max":10,"numRaters":2,"average":"0.0","min":0},"subtitle":"","author":["Anubhava Srivastava"],"pubdate":"2017-8-4","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29517578.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"158","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s29517578.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s29517578.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29517578.jpg"},"alt":"https:\/\/book.douban.com\/subject\/27114468\/","id":"27114468","publisher":"Packt Publishing","isbn10":"1787288706","isbn13":"9781787288706","title":"Java 9 Regular Expressions","url":"https:\/\/api.douban.com\/v2\/book\/27114468","alt_title":"","author_intro":"","summary":"","price":"GBP 28.99"},{"rating":{"max":10,"numRaters":1,"average":"0.0","min":0},"subtitle":"","author":["Josh Juneau"],"pubdate":"2017-6-1","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29489568.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"626","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s29489568.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s29489568.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29489568.jpg"},"alt":"https:\/\/book.douban.com\/subject\/27083542\/","id":"27083542","publisher":"Apress","isbn10":"1484219759","isbn13":"9781484219751","title":"Java 9 Recipes: A Problem-Solution Approach","url":"https:\/\/api.douban.com\/v2\/book\/27083542","alt_title":"","author_intro":"From the Back Cover\nQuickly find solutions to dozens of common programming problemsencountered while building Java applications. Content is presented in the popular problem-solution format. Look up the programming problem that you want to resolve. Read the solution. Apply the solution directly in your own code. Problem solved!This revised edition covers important new features such as Java 9's jShell and the new modularity features enabling you to separate code into independent modules that perform discrete tasks. Also covered are the new garbage collection algorithm and completely revamped process API. Enhanced JSON coverage is provided as well as a new chapter on JavaServer Faces development for web applications.What You Will Learn:Develop Java SE applications using the latest in Java SE technologyExploit advanced features like modularity and lambdasUtilize the jShell to quickly develop solutionsBuild dynamic web applications with JavaScript and Project NashornCreate great-looking web interfaces with JavaServer FacesGenerate graphics and work with media such as sound and videoAdd internationalization support to your Java applications\nRead more\nAbout the Author\nJosh Juneau has been developing software and enterprise applications since the early days of Java EE. Application and database development have been his focus since the start of his career. He became an Oracle database administrator and adopted the PL\/SQL language for performing administrative tasks and developing applications for the Oracle database. In an effort to build more complex solutions, he began to incorporate Java into his PL\/SQL applications and later developed standalone and web applications with Java. Josh wrote his early Java web applications utilizing JDBC and servlets or JSP to work with backend databases. Later, he began to incorporate frameworks into his enterprise solutions, such as Java EE and JBoss Seam. Today, he primarily develops enterprise web solutions utilizing Java EE and other technologies. He also includes the use of alternative languages, such as Jython and Groovy, for some of his projects.Over the years, Josh has dabbled in many different programming languages, including alternative languages for the JVM, in particular. In 2006, Josh began devoting time to the Jython Project as editor and publisher of the Jython Monthly newsletter. In late 2008, he began a podcast dedicated to the Jython programming language. Josh was the lead author for The Definitive Guide to Jython, Oracle PL\/SQL Recipes, and Java 7 Recipes, and a solo author of Java EE 7 Recipes and Introducing Java EE 7, which were all published by Apress. He works as an application developer and system analyst at Fermi National Accelerator Laboratory, and he also writes technical articles for Oracle and OTN. He was a member of the JSR 372 and JSR 378 expert groups, and is an active member of the Java Community, helping to lead the Chicago Java User Group’s Adopt-a-JSR effort.When not coding or writing, Josh enjoys spending time with his wonderful wife and five children, especially swimming, fishing, playing ball, and watching movies. To hear more from Josh, follow his blog at http:\/\/jj-blogger.blogspot.com. You can also follow him on Twitter at @javajuneau.\nRead more","summary":"Quickly find solutions to dozens of common programming problemsencountered while building Java applications. Content is presented in the popular problem-solution format. Look up the programming problem that you want to resolve. Read the solution. Apply the solution directly in your own code. Problem solved!\nThis revised edition covers important new features such as Java 9's JShell and the new modularity features enabling you to separate code into independent modules that perform discrete tasks. Also covered are the new garbage collection algorithm and completely revamped process API. Enhanced JSON coverage is provided as well as a new chapter on JavaServer Faces development for web applications.\nWhat You'll Learn\nDevelop Java SE applications using the latest in Java SE technologyExploit advanced features like modularity and lambdasUse JShell to quickly develop solutionsBuild dynamic web applications with JavaScript and Project NashornCreate great-looking web interfaces with JavaServer FacesGenerate graphics and work with media such as sound and videoAdd internationalization support to your Java applicationsWho This Book Is ForBoth beginning Java programmers and advanced Java developers","price":"USD 31.31"},{"rating":{"max":10,"numRaters":2,"average":"0.0","min":0},"subtitle":"","author":["Raja Malleswara Rao Pattamsetti"],"pubdate":"2017-6-30","tags":[{"count":2,"name":"Java","title":"Java"},{"count":1,"name":"分布式","title":"分布式"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29500649.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"304","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s29500649.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s29500649.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29500649.jpg"},"alt":"https:\/\/book.douban.com\/subject\/27094543\/","id":"27094543","publisher":"Packt Publishing","isbn10":"1787126994","isbn13":"9781787126992","title":"Distributed Computing in Java 9","url":"https:\/\/api.douban.com\/v2\/book\/27094543","alt_title":"","author_intro":"About the Author\nRaja Malleswara Rao PattamsettiRaja Malleswara Rao Pattamsetti is a Java expert, focusing on enterprise architecture and development of applications with Java and related technologies. He is a certified Java and web components professional with deep expertise in building enterprise applications using diverse frameworks and methodologies. He has a thorough knowledge of the distributed system setup and developing applications that support distributed computing. He is an active participant in technical forums, groups, and conferences. He has worked with several Fortune 500 organizations and is passionate about learning new technologies and their developments. He has also authored a book, Spring Batch Essentials, for Packt previously\nRead more","summary":"Key Features\nMake the best of Java 9 features to write succinct codeHandle large amounts of data using HPCMake use of AWS and Google App Engine along with Java to establish a powerful remote computation system\nBook Description\nDistributed computing is the concept with which a bigger computation process is accomplished by splitting it into multiple smaller logical activities and performed by diverse systems, resulting in maximized performance in lower infrastructure investment. This book will teach you how to improve the performance of traditional applications through the usage of parallelism and optimized resource utilization in Java 9.\nAfter a brief introduction to the fundamentals of distributed and parallel computing, the book moves on to explain different ways of communicating with remote systems\/objects in a distributed architecture. You will learn about asynchronous messaging with enterprise integration and related patterns, and how to handle large amount of data using HPC and implement distributed computing for databases.\nMoving on, it explains how to deploy distributed applications on different cloud platforms and self-contained application development. You will also learn about big data technologies and understand how they contribute to distributed computing. The book concludes with the detailed coverage of testing, debugging, troubleshooting, and security aspects of distributed applications so the programs you build are robust, efficient, and secure.\nWhat You Will Learn\nUnderstand the basic concepts of parallel and distributed computing\/programmingAchieve performance improvement using parallel processing, multithreading, concurrency, memory sharing, and hpc cluster computingGet an in-depth understanding of Enterprise Messaging concepts with Java Messaging Service and Web Services in the context of Enterprise Integration PatternsWork with Distributed Database technologiesUnderstand how to develop and deploy a distributed application on different cloud platforms including Amazon Web Service and Docker CaaS ConceptsExplore big data technologiesEffectively test and debug distributed systemsGain thorough knowledge of security standards for distributed applications including two-way Secure Socket Layer\nAbout the Author\nRaja Malleswara Rao Pattamsetti is a Java expert, focusing on enterprise architecture and development of applications with Java and related technologies. He is a certified Java and web components professional with deep expertise in building enterprise applications using diverse frameworks and methodologies. He has a thorough knowledge of the distributed system setup and developing applications that support distributed computing. He is an active participant in technical forums, groups, and conferences. He has worked with several Fortune 500 organizations and is passionate about learning new technologies and their developments. He has also authored a book, Spring Batch Essentials, for Packt previously\nTable of Contents\nQuick Start to Parallel and Distributed ComputingCommunication between distributed applicationsCORBA Services and JavaspaceEnterprise MessagingHPC Cluster ComputingDatabasesCloud & Distributed ComputingBig Data AnalyticsTesting, Debugging & TroubleshootingSecurity","price":"USD 44.99"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Fu Cheng"],"pubdate":"2018-1-2","tags":[],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29700946.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"174","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s29700946.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s29700946.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29700946.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30153725\/","id":"30153725","publisher":"Apress","isbn10":"1484233298","isbn13":"9781484233290","title":"Exploring Java 9: Build Modularized Applications in Java","url":"https:\/\/api.douban.com\/v2\/book\/30153725","alt_title":"","author_intro":"From the Back Cover\nDiscover all the new features and changes in Java 9, including module systems―JPMS or Project Jigsaw. This book covers the whole Java application development life cycle. You'll review all the important concepts, including module descriptor, unnamed module, automatic module, and command line tools.Exploring Java 9also serves as a practical guide for migration to module systems. Code samples from real-world scenarios solidify a foundation for learning and development and allow you to apply best practices in actual development.Additionally, you'll learn about concurrency, ECMAScript 6 features in Nashorn and Parser API, stack-walking API, Stream and Optional, utilities classes, and I\/O. And it’s now possible to build modularized applications in Java. You'll see how JPMS affects not only the JDK itself, but also applications that are developed upon it.\nRead more\nAbout the Author\nFu Cheng is a software developer living in Auckland, New Zealand with rich experience in applying best practices in real product development and strong problem solving skills.He is the author ofBuild Mobile Apps with Ionic 2 and Firebaseby Apress andUnderstanding Java 7: The Core Techniques and Best Practices (Simplified Chinese edition), which covers the new features of Java SE 7 and provides a deep dive of Java platform core features, including JVM internals, byte code manipulation, class loader, generics, security, concurrent programming and serialization.He is also a regular writer on the IBM developerWorks China and InfoQ China website with more than 50 published technical articles covering various technical topics.\nRead more","summary":"Discover all the new features and changes in Java 9, including module systems―JPMS or Project Jigsaw. This book covers the whole Java application development life cycle. You'll review all the important concepts, including module descriptor, unnamed module, automatic module, and command line tools.\nExploring Java 9 also serves as a practical guide for migration to module systems. Code samples from real-world scenarios solidify a foundation for learning and development and allow you to apply best practices in actual development.\nAdditionally, you'll learn about concurrency, ECMAScript 6 features in Nashorn and Parser API, stack-walking API, Stream and Optional, utilities classes, and I\/O. And it’s now possible to build modularized applications in Java. You'll see how JPMS affects not only the JDK itself, but also applications that are developed upon it.\nWhat You'll Learn\n• Build modularized applications in Java\n• Migrate to module systems\n• Master enhanced method handles\nWho This Book Is For\nJava developers with basic development skills","price":"USD 29.97"},{"rating":{"max":10,"numRaters":1,"average":"0.0","min":0},"subtitle":"","author":["Koushik Kothagal"],"pubdate":"2017-8-29","tags":[{"count":1,"name":"Java","title":"Java"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29697831.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"298","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29697831.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29697831.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29697831.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30150569\/","id":"30150569","publisher":"Packt Publishing","isbn10":"1787126900","isbn13":"9781787126909","title":"Modular Programming in Java 9: Build large scale applications using Java modularity and Project Jigsaw","url":"https:\/\/api.douban.com\/v2\/book\/30150569","alt_title":"","author_intro":"About the Author\nKoushik Kothagal is the founder of Java Brains, an online training website that offers courses on various enterprise Java and JavaScript technologies entirely for free. He works as a Senior Staff Engineer at Financial Engines. He has over 14 years of professional experience working on full-stack web applications and has worked extensively with technologies such as Java, Spring, Java EE, JavaScript, and Angular. He loves teaching, and when he's not coding Java and JavaScript, he's probably teaching it! He currently lives in the Bay Area.\nRead more","summary":"Key Features\nMaster design patterns and best practices to build truly modular applications in Java 9Upgrade your old Java code to Java 9 with easeBuild and run a smooth functioning multi-module application.\nBook Description\nThe Java 9 module system is an important addition to the language that affects the way we design, write, and organize code and libraries in Java. It provides a new way to achieve maintainable code by the encapsulation of Java types, as well as a way to write better libraries that have clear interfaces. Effectively using the module system requires an understanding of how modules work and what the best practices of creating modules are.\nThis book will give you step-by-step instructions to create new modules as well as migrate code from earlier versions of Java to the Java 9 module system. You'll be working on a fully modular sample application and add features to it as you learn about Java modules. You'll learn how to create module definitions, setup inter-module dependencies, and use the built-in modules from the modular JDK. You will also learn about module resolution and how to use jlink to generate custom runtime images.\nWe will end our journey by taking a look at the road ahead. You will learn some powerful best practices that will help you as you start building modular applications. You will also learn how to upgrade an existing Java 8 codebase to Java 9, handle issues with libraries, and how to test Java 9 applications.\nWhat you will learn\nGet introduced to the concept of modules and modular programming by working on a fully modular Java applicationBuild and configure your own Java 9 modulesWork with multiple modules and establish inter-module dependenciesUnderstand and use the principles of encapsulation, readability, and accessibilityUse jlink to generate fully loaded custom runtime images like a proDiscover the best practices to help you write awesome modules that are a joy to use and maintainUpgrade your old Java code to use the new Java 9 module system\nAbout the Author\nKoushik Kothagal is the founder of Java Brains, an online training website that offers courses on various enterprise Java and JavaScript technologies entirely for free. He works as a Senior Staff Engineer at Financial Engines. He has over 14 years of professional experience working on full-stack web applications and has worked extensively with technologies such as Java, Spring, Java EE, JavaScript, and Angular. He loves teaching, and when he's not coding Java and JavaScript, he's probably teaching it! He currently lives in the Bay Area.\nTable of Contents\nWhat's Java modularity all about?Writing your first Java moduleHandling inter-module dependenciesIntroducing the modular JDKUsing Platform APIsModule resolution, accessibility and readabilityIntroducing ServicesUnderstanding linking and using jlinkModule design patterns and strategiesUpgrading your code to Java 9Java 9 and OSGiUsing build systems and testing Java modules","price":"USD 34.99"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Debasish Ray Chawdhuri"],"pubdate":"2017-6-6","tags":[],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29444903.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"330","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29444903.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29444903.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29444903.jpg"},"alt":"https:\/\/book.douban.com\/subject\/27038822\/","id":"27038822","publisher":"Packt Publishing - ebooks Account","isbn10":"1785889346","isbn13":"9781785889349","title":"Java 9 Data Structures and Algorithms","url":"https:\/\/api.douban.com\/v2\/book\/27038822","alt_title":"","author_intro":"","summary":"","price":"USD 39.99"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Paul Deitel","Harvey Deitel"],"pubdate":"2017-5-21","tags":[{"count":1,"name":"#FK#","title":"#FK#"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29456180.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"1120","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29456180.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29456180.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29456180.jpg"},"alt":"https:\/\/book.douban.com\/subject\/27050254\/","id":"27050254","publisher":"Prentice Hall","isbn10":"0134777565","isbn13":"9780134777566","title":"Java 9 for Programmers","url":"https:\/\/api.douban.com\/v2\/book\/27050254","alt_title":"","author_intro":"","summary":"","price":"USD 59.99"},{"rating":{"max":10,"numRaters":5,"average":"0.0","min":0},"subtitle":"","author":["【美】Robert Liguori（罗伯特·利果里）","Patricia Liguori（帕特丽夏·利果里）"],"pubdate":"2018-7","tags":[{"count":3,"name":"Java","title":"Java"},{"count":1,"name":"Buy","title":"Buy"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29823815.jpg","binding":"平装","translator":["张卫滨"],"catalog":"前言  XIII\n第1 部分 语言\n第1 章 命名约定  3\n缩略词  3\n注解名  3\n类名  4\n常量名  4\n枚举名称  4\n泛型类型参数名  4\n实例与静态变量名  5\n接口名  5\n方法名  5\n包名  5\n模块名  6\n参数和本地变量名  6\n第2 章 词法元素  9\nUnicode 与ASCII  9\n压缩字符串  11\n注释  11\n关键字  12\n识别符  13\n分隔符  14\n操作符  15\n字面量  16\n转义序列  19\nUnicode 货币符号  20\n第3 章 基本类型  23\n原始类型  23\n原始类型的字面量  24\n浮点实体  26\n原始类型的数值提升  28\n包装类  29\n自动装箱和拆箱  30\n第4 章 引用类型  33\n引用类型与原始类型的对比  34\n默认值  34\n引用对象的转换  36\n原始类型与引用类型的转换  37\n传递引用类型到方法中  37\n引用类型的对比  38\n拷贝引用类型  40\n引用类型的内存分配与垃圾回收  42\n第5 章 面向对象编程  43\n类和对象  43\n可变长度的参数列表  49\n抽象类与抽象方法  50\n静态数据成员、静态方法、静态常量以及静态初始化器  51\n接口  52\n枚举  53\n注解类型  54\n函数式接口  56\n第6 章 语句和代码块  57\n表达式语句  57\n空语句  58\n代码块  58\n条件语句  58\n迭代语句  60\n控制转移  62\nsynchronized 语句  63\n断言语句  63\n异常处理语句  64\n第7 章 异常处理  65\n异常层级结构  65\n检查型\/ 非检查型异常和错误  66\n常见的检查型\/ 非检查型异常和错误  67\n异常处理的关键字  69\n异常处理的过程  74\n定义自己的异常类  74\n打印异常信息  75\n第8 章 Java 修饰符  77\n访问修饰符  78\n其他（非访问）修饰符  79\n修饰符的编码  80\n第2 部分 平台\n第9 章 Java 平台，标准版  83\n常用的Java SE API 库  83\n第10 章 开发的基础工具  97\nJava 运行时环境  97\nJava 开发工具集  97\nJava 程序结构  99\n命令行工具  100\n类路径  105\n第11 章 内存管理  107\n垃圾收集器  107\n内存管理工具  109\n命令行参数  110\n调整Java 堆的大小  113\n元空间  113\n与GC 进行交互  113\n第12 章 基本输入和输出  115\n标准的流in、out 和err  115\n标准输入和输出类的层级结构  116\n文件读取和写入  117\nSocket 读取和写入  118\n序列化  120\n压缩和解压文件  121\n第13 章 新I\/O API（NIO.2）  123\nPath 接口  123\nFiles 类  124\n其他特性  125\n第14 章 并发  127\n创建线程  127\n线程状态  128\n线程优先级  129\n常用方法  129\n同步  130\n并发工具集  132\n第15 章 Java 集合框架  135\nCollection 接口  135\n实现  136\n集合框架方法  136\n集合类的算法  137\n算法的效率  138\nComparator 函数式接口  139\n便利的工厂方法  142\n第16 章 泛型框架  143\n泛型类与接口  143\n具有泛型的构造器  144\n替换原则  145\n类型参数、通配符与边界  145\nGet 和Put 原则  146\n泛型具体化  147\n非泛型类型中的泛型方法  148\n第17 章 Java 脚本API  149\n脚本语言  149\n脚本引擎实现  149\n搭建脚本语言和引擎环境  151\n第18 章 日期和时间API  155\n与遗留系统的互操作  156\n区域性日历  156\nISO 日历  156\n第19 章 Lambda 表达式  163\nλE 基础  163\n特定用途的函数式接口  166\n通用的函数式接口  167\n关于λE 的资源  168\n第20 章 JShell ：Java Shell  171\n起步  171\n片段  172\n使用JShell  173\nJShell 的特性  180\nJShell 命令小结  184\n第21 章 Java 模块系统  187\nJigsaw 项目  187\nJava 模块  188\n编译模块  190\n模块化JDK  191\njdeps  194\n定义模块  196\n导出包  196\n声明依赖  197\n传递性依赖  197\n定义服务提供者  198\njlink  200\n第3 部分 附录\n附录A Fluent API  203\n附录B 第三方工具  205\n附录C UML 基础  215\n索引  225","ebook_url":"https:\/\/read.douban.com\/ebook\/58295031\/","pages":"260","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s29823815.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s29823815.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29823815.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30278595\/","id":"30278595","publisher":"电子工业出版社","isbn10":"7121346028","isbn13":"9787121346026","title":"Java 9 口袋指南（第4版）","url":"https:\/\/api.douban.com\/v2\/book\/30278595","alt_title":"","author_intro":"","summary":"《Java 9 口袋指南（第4版）》以通俗易懂的语言介绍了Java语言的语法、类型、并发编程等基础知识，同时还以样例的形式讲解了Lambda表达式、Java模块系统、JShell这些Java 8和Java 9新引入的特性。《Java 9 口袋指南（第4版）》不仅能够满足初学者了解、掌握Java语言的需要，还能帮助资深的工程师快速熟悉和把握Java新技术的发展趋势。《Java 9 口袋指南（第4版）》内容简洁、样例丰富，可以作为Java开发人员案头常备的参考书籍。","ebook_price":"34.30","price":"49.00元"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Javier Fernández González"],"pubdate":"2019-8","tags":[],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s33454375.jpg","binding":"","translator":[],"catalog":"第 1章 线程管理 1\n1.1 简介 1\n1.2 线程的创建、运行和设置 2\n1.3 线程中断 8\n1.4 控制线程中断 11\n1.5 线程的休眠和唤醒 14\n1.6 等待线程执行结束 16\n1.7 守护线程的创建与运行 19\n1.8 处理线程中的不可控异常 23\n1.9 使用线程本地变量 26\n1.10 线程分组及线程组中不可控异常的处理 29\n1.11 使用工厂创建线程 33\n第 2章 线程同步基础 37\n2.1 简介 37\n2.2 方法同步 38\n2.3 在同步代码块中使用条件 46\n2.4　在同步代码块中使用锁机制 51\n2.5 用读\/写锁保护同步代码块 57\n2.6 在一个锁中使用多个条件 62\n2.7 高阶知识：StampedLock的使用 70\n第3章 线程同步工具 78\n3.1 简介 78\n3.2 控制对资源的一个或多个副本的并发访问 79\n3.3 等待多个并发事件 85\n3.4 在指定状态点同步任务 90\n3.5 运行阶段性并发任务 98\n3.6 阶段性并发任务中阶段转变的控制 108\n3.7 两个并发任务间的数据交换 114\n3.8 异步地完成和关联任务 118\n第4章 线程执行器 128\n4.1 简介 128\n4.2 创建一个线程执行器并实现其拒绝策略 129\n4.3 在一个执行器里执行任务并返回结果 136\n4.4 运行多个任务并处理第 一个返回结果 140\n4.5 运行多个任务并处理全部返回结果 146\n4.6 在执行器内延迟运行任务 150\n4.7 在执行器内周期性地运行任务 154\n4.8 在执行器内取消任务 157\n4.9 在执行器内控制任务的完成 160\n4.10 在执行器内分离任务的启动并处理返回结果 164\n第5章 fork\/join框架 171\n5.1 简介 171\n5.2 创建一个fork\/join池 173\n5.3 合并任务的执行结果 180\n5.4 异步地运行任务 189\n5.5 在任务中抛出异常 196\n5.6 取消一个任务 200\n第6章 并行反应式流 208\n6.1 简介 208\n6.2 使用不同的源创建流 210\n6.3 归约一个流的元素 217\n6.4 收集流中的元素 224\n6.5 把一个动作应用到流的每个元素上 231\n6.6 过滤流中的元素 234\n6.7 转换流中的元素 237\n6.8 排序流中的元素 241\n6.9 在流中的元素上验证条件 244\n6.10 在反应式流上反应式编程 248\n第7章 并发集合 256\n7.1 简介 256\n7.2 运用非阻塞线程安全的双端队列 257\n7.3 运用阻塞线程安全的双端队列 262\n7.4 运用按优先级排序的阻塞线程安全队列 265\n7.5 运用带延迟元素的线程安全列表 271\n7.6 运用线程安全的跳表 276\n7.7 运用线程安全的HashMap 281\n7.8 运用原子性变量 287\n7.9 运用原子性数组 294\n7.10 运用volatile关键字 298\n7.11 运用变量句柄 302\n第8章 自定义并发类 307\n8.1 简介 307\n8.2 自定义ThreadPoolExecutor类 308\n8.3 实现一个基于优先级的Executor类 313\n8.4 实现ThreadFactory接口来生成自定义线程 317\n8.5 在一个Executor对象中使用ThreadFactory 322\n8.6 自定义在一个周期调度性线程池中运行的任务 324\n8.7 实现一个ThreadFactory以生成fork\/join框架的自定义线程 331\n8.8 自定义运行于fork\/join框架中的任务 338\n8.9 实现一个自定义Lock类 342\n8.10 实现一个基于优先级的传递队列 348\n8.11 实现自己的原子性对象 359\n8.12 实现自己的流生成器 363\n8.13 实现自己的异步流 369\n第9章 并发程序的测试 378\n9.1 简介 378\n9.2 监测Lock接口 379\n9.3　监测Phaser类 383\n9.4　监测Executor框架 387\n9.5 监测fork\/join任务池 390\n9.6 监测流 395\n9.7　输出有效日志信息 397\n9.8　利用FindBugs分析并发程序代码 402\n9.9　使用Eclipse调试并发程序代码 406\n9.10　使用NetBeans调试并发程序代码 408\n9.11 使用MultithreadedTC调试并发程序代码 413\n9.12 使用JConsole监测 416\n第 10章 附加信息 421\n10.1 简介 421\n10.2 在Executor框架中处理Runnable对象的结果 421\n10.3 在ForkJoinPool类中处理未控制的异常 427\n10.4 使用线程安全的阻塞队列在生产者和消费者之间进行交互 431\n10.5 监测Thread类 436\n10.6 监测Semaphore类 440\n10.7 生成并发随机数 443\n第 11章 并发编程设计 445\n11.1 简介 445\n11.2 尽可能使用不可变对象 446\n11.3 对锁排序以避免死锁 449\n11.4 使用原子变量替代同步 451\n11.5 尽可能短地持有锁 455\n11.6 委托执行器管理线程 459\n11.7 使用并发数据结构替代手动编程 462\n11.8 使用延迟初始化预防问题 464\n11.9 使用fork\/join框架替代执行器 466\n11.10 避免在锁中使用阻塞操作 470\n11.11 避免使用已弃用的方法 472\n11.12 使用执行器替代线程组 473\n11.13 使用流处理大数据集 474\n11.14 其他提示和技巧 479","pages":"","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s33454375.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s33454375.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s33454375.jpg"},"alt":"https:\/\/book.douban.com\/subject\/34790228\/","id":"34790228","publisher":"人民邮电出版社","isbn10":"7115505861","isbn13":"9787115505866","title":"Java 9 并发编程实战","url":"https:\/\/api.douban.com\/v2\/book\/34790228","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"Write reactive, modular, concurrent, and secure code","author":["Dr. Edward Lavieri","Peter Verhas"],"pubdate":"2017-10","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29695377.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"456","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s29695377.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s29695377.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29695377.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30148297\/","id":"30148297","publisher":"Packt Publishing","isbn10":"1786468735","isbn13":"9781786468734","title":"Mastering Java 9","url":"https:\/\/api.douban.com\/v2\/book\/30148297","alt_title":"","author_intro":"Dr. Edward Lavieri is a veteran developer with a strong academic background. He earned a doctorate in computer science from Colorado Technical University, an MS in management information systems (Bowie State University), an MS in education (Capella University), and an MS in operations management (University of Arkansas).\nHe has been creating and teaching computer science courses since 2002. Edward retired from the U.S. Navy as a Command Master Chief after 25 years of service. As the founder and creative director of three19, a software design and development studio, Edward is constantly designing and developing software. He uses a variety of game engines and development tools. His passions include developing adaptive learning systems, educational games, and mobile apps.\nEdward has authored Adaptive Learning for Educational Game Design (CreateSpace), Getting Started with Unity 5 (Packt), Learning AWS Lumberyard Game Development (Packt), LiveCode Mobile Development HOTSHOT (Packt), LiveCode Mobile Development Cookbook (Packt), and Software Consulting: A Revolutionary Approach (CreateSpace). He was the technical editor for Excel Formulas and Functions for Dummies (Wiley Publishing). He has also developed numerous college courses involving computer science, information systems, and game development.\nPeter Verhas is a senior developer and software system architect with more than 30 years of software development experience. He currently works for EPAM as a senior developer, where he is involved in many customer projects and actively participates in the education activities of the company. Peter writes a technical blog and is committed to open source software development. He has been using Java since 2005 and is also an author at Java Code Geeks.","summary":"About This Book\nThis book will teach you to build highly scalable, fast, and secure applications\nIt covers major concepts introduced with the new version of Java 9, which includes modular programming, HTTP 2.0, API changes, and more\nIt will guide you with tools, techniques and best practices to enhance application development\nWho This Book Is For\nThis book is for enterprise developers and existing Java developers. Basic knowledge of Java would help.\nWhat You Will Learn\nWrite modular Java applications in terms of the newly introduced module system\nMigrate existing Java applications to modular ones\nUnderstand how to use the G1 garbage collector in order to leverage the performance of your applications\nLeverage the possibilities provided the newly introduced Java shell\nTest your application's effectiveness with the JVM harness\nSee how Java 9 provides support for the h ttp 2.0 standard\nUse the new process API\nDiscover additional enhancements and features provided by Java 9\nIn Detail\nJava 9 and its new features add to the richness of the language, one of the languages most used by developers to build robust software applications. Java 9 comes with a special emphasis on modularity with its integration with Jigsaw. This would be your one-stop guide to mastering the language.\nYou'll be provided with an overview and explanation of the new features introduced in Java 9 and the importance of the new APIs and enhancements. Some of the new features of Java 9 are ground-breaking and if you are an experienced programmer, you will be able to make your enterprise application leaner by learning these new features. You'll be provided with practical guidance in applying the newly acquired knowledge in regards to Java 9 and further information on future developments of the Java platform. This book will improve your productivity, making your application faster. By learning the best practices in Java, you'll become the \"go-to\" person in your organization.\nBy the end of the book, you'll not only know the important concepts of Java 9, but you'll also have a nuanced understanding of the important aspects of programming with this great language.\nStyle and approach\nConcepts and new terminology are explained in simple step-by-step manner. We cover a lot of real-world examples and case studies that will improve your Java productivity. This book covers new features on Java 9 and the much talked about Jigsaw integration.","price":"$44.99"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"Build Asynchronous applications with Rx.Java 2.0, Flow API and Spring WebFlux","author":["Tejaswini Mandar Jog"],"pubdate":"2017-9-21","tags":[{"count":1,"name":"Reactive","title":"Reactive"},{"count":1,"name":"Programming","title":"Programming"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29695375.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"402","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s29695375.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s29695375.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29695375.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30148295\/","id":"30148295","publisher":"Packt Publishing","isbn10":"1787124231","isbn13":"9781787124233","title":"Reactive Programming With Java 9","url":"https:\/\/api.douban.com\/v2\/book\/30148295","alt_title":"","author_intro":"Tejaswini Mandar Jog is a passionate and enthusiastic Java trainer. She has more than nine years of experience in the IT training field, specializing in Java, J2EE, Spring, and relevant technologies. She has worked with many renowned corporate companies on training and skill enhancement programs. She is also involved in the development of projects using Java, Spring, and Hibernate. Tejaswini has written two books. In her first book, Learning Modular Java Programming, the reader explores the power of modular programming to build applications with Java and Spring. The second book, Learning Spring 5.0, explores building an application using the Spring 5.0 framework with the latest modules such as WebFlux for dealing with reactive programming.","summary":"Key Features\nLearn about Java 9's Flow API, Reactive programming along with Kafka and Mockito, and how these aspects are utilized by RxJava\nBuild fast and concurrent applications with ease, without the complexity of Java's concurrent API and shared states, with the help of Spring\nExplore a wide variety of code examples to easily get used to all the features and tools provided by RxJava\nBook Description\nReactive programming is an asynchronous programming model that helps you tackle the essential complexity that comes with writing such applications.\nUsing Reactive programming to start building applications is not immediately intuitive to a developer who has been writing programs in the imperative paradigm. To tackle the essential complexity, Reactive programming uses declarative and functional paradigms to build programs. This book sets out to make the paradigm shift easy.\nThis book begins by explaining what Reactive programming is, the Reactive manifesto, and the Reactive Streams specifi cation. It uses Java 9 to introduce the declarative and functional paradigm, which is necessary to write programs in the Reactive style. It explains Java 9's Flow API, an adoption of the Reactive Streams specifi cation. From this point on, it focuses on RxJava 2.0, covering topics such as creating, transforming,fi ltering, combining, and testing Observables. It discusses how to use Java's popular framework, Spring, to build event-driven, Reactive applications. You will also learn how to implement resiliency patterns using Hystrix. By the end, you will be fully equipped with the tools and techniques needed to implement robust, event-driven, Reactive applications.\nWhat you will learn\nUnderstand the Reactive Manifesto\nGrasp the Reactive Streams","price":"$ 44.99"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Kishori Sharan"],"pubdate":"2017-11-3","tags":[],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29695875.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"1037","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s29695875.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s29695875.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29695875.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30148668\/","id":"30148668","publisher":"Apress","isbn10":"148422843X","isbn13":"9781484228432","title":"Beginning Java 9 Fundamentals: Arrays, Objects, Modules, JShell, and Regular Expressions","url":"https:\/\/api.douban.com\/v2\/book\/30148668","alt_title":"","author_intro":"From the Back Cover\nLearn the basics of Java 9, including basic programming concepts and the object-oriented fundamentals necessary at all levels of Java development. Author Kishori Sharan walks you through writing your first Java program step-by-step. Armed with that practical experience, you'll be ready to learn the core of the Java language.Beginning Java 9 Fundamentalsprovides over 90 diagrams and 240 complete programs to help you learn the topics faster.The book continues with a series of foundation topics, including using data types, working with operators, and writing statements in Java. These basics lead onto the heart of the Java language: object-oriented programming. By learning topics such as classes, objects, interfaces, and inheritance you'll have a good understanding ofJava's object-oriented model.The final collection of topics takes what you've learned and turns you into a real Java programmer. You'll see how to take the power of object-oriented programming and write programs that can handle errors and exceptions, process strings and dates, format data, and work with arrays to manipulate data.This book is a companion to two other books also by Sharan focusing on APIs and advanced Java topics.You will:Write your first Java programs with an emphasis on learning object-oriented programming in JavaWork with data types, operators, statements, classes and objectsHandle exceptions, assertions, strings and dates, and object formattingUse regular expressionsWork with arrays, interfaces, enums, and inheritanceDeploy Java applications on memory-constrained devices using compact profilesTake advantage of the new JShell REPL tool\nRead more\nAbout the Author\nKishori Sharan has earned a Master of Science in Computer Information Systems degree from Troy State University, Alabama. He is a Sun Certified Java 2 programmer. He has vast experience in providing training to professional developers in Java, JSP, EJB, and Web technology. He possesses over ten years of experience in implementing enterprise level Java application.\nRead more","summary":"Learn the basics of Java 9, including basic programming concepts and the object-oriented fundamentals necessary at all levels of Java development. Author Kishori Sharan walks you through writing your first Java program step-by-step. Armed with that practical experience, you'll be ready to learn the core of the Java language. Beginning Java 9 Fundamentals provides over 90 diagrams and 240 complete programs to help you learn the topics faster.\nThe book continues with a series of foundation topics, including using data types, working with operators, and writing statements in Java. These basics lead onto the heart of the Java language: object-oriented programming. By learning topics such as classes, objects, interfaces, and inheritance you'll have a good understanding of\nJava's object-oriented model.\nThe final collection of topics takes what you've learned and turns you into a real Java programmer. You'll see how to take the power of object-oriented programming and write programs that can handle errors and exceptions, process strings and dates, format data, and work with arrays to manipulate data.\nThis book is a companion to two other books also by Sharan focusing on APIs and advanced Java topics.\nWhat You’ll Learn\nWrite your first Java programs with an emphasis on learning object-oriented programming in JavaWork with data types, operators, statements, classes and objectsHandle exceptions, assertions, strings and dates, and object formattingUse regular expressionsWork with arrays, interfaces, enums, and inheritanceTake advantage of the new JShell REPL tool\nWho This Book Is For\nThose who are new to Java programming, who may have some or even no prior programming experience.","price":"USD 44.95"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"Master the art of implementing scalable microservices in your production environment with ease","author":["Sourabh Sharma"],"pubdate":"2017-12-7","tags":[{"count":1,"name":"编程","title":"编程"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29701108.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"316","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s29701108.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s29701108.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29701108.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30153865\/","id":"30153865","publisher":"Packt Publishing","isbn10":"1787281442","isbn13":"9781787281448","title":"Mastering Microservices with Java 9 - Second Edition","url":"https:\/\/api.douban.com\/v2\/book\/30153865","alt_title":"","author_intro":"About the Author\nSourabh SharmaSourabh Sharma has over 15 years of experience in product\/application development. His expertise lies in designing, developing, deploying, and testing N-tier web applications and leading teams. He loves to troubleshoot complex problems and look for the best solutions. Throughout his career, he has successfully delivered various on-premise and cloud applications\/products to some of the fortune 500 companies that has amazed stakeholders, including happy satisfied customers. Sourabh believes in the continuous process of learning and has been continuously updating his skill set―from standalone application development to microservices development, from JDK 1.2 to Java 9, from IE 5 dependent frontend code to cross-browser development, and from on-premise deployment to cloud deployment. He has effectively managed delivering single products to bouquets of applications.\nRead more","summary":"Key Features\nUse domain-driven design to build microservicesUse Spring Cloud to use Service Discovery and RegisterationUse Kafka, Avro and Spring Streams for implementing event based microservices\nBook Description\nMicroservices are the next big thing in designing scalable, easy-to-maintain applications. It not only makes app development easier, but also offers great flexibility to utilize various resources optimally. If you want to build an enterprise-ready implementation of the microservices architecture, then this is the book for you!\nStarting off by understanding the core concepts and framework, you will then focus on the high-level design of large software projects. You will gradually move on to setting up the development environment and configuring it before implementing continuous integration to deploy your microservice architecture. Using Spring security, you will secure microservices and test them effectively using REST Java clients and other tools like RxJava 2.0. We'll show you the best patterns, practices and common principals of microservice design and you'll learn to troubleshoot and debug the issues faced during development. We'll show you how to design and implement reactive microservices. Finally, we’ll show you how to migrate a monolithic application to microservices based application.\nBy the end of the book, you will know how to build smaller, lighter, and faster services that can be implemented easily in a production environment.\nWhat you will learn\nUse domain-driven design to design and implement microservicesSecure microservices using Spring SecurityLearn to develop REST service developmentDeploy and test microservicesTroubleshoot and debug the issues faced during developmentLearning best practices and common principals about microservices\nWho This Book Is For\nThis book is for Java developers who are familiar with the microservices architecture and now wants to take a deeper dive into effectively implementing microservices at an enterprise level. A reasonable knowledge level and understanding of core microservice elements and applications is expected.\nTable of Contents\nA Solution ApproachSetting up the development environment (Update)Domain Driven DesignImplementing microservices (Update)Deployment and Testing (Update)Reactive Microservices (New)Securing MicroservicesConsuming microservices using Web AppBest practices and common principles (Update)Troubleshooting Guide (Update)Migration of Monolithic App to Microservice based App (New)","price":"USD 44.97"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"9","author":["[美] 爱德华·拉维耶里","皮特·维哈斯 著"],"pubdate":"","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","binding":"平装-胶订","translator":[],"catalog":"","pages":"","images":{"small":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","large":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","medium":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif"},"alt":"https:\/\/book.douban.com\/subject\/30768559\/","id":"30768559","publisher":"东南大学出版社","isbn10":"7564177357","isbn13":"9787564177355","title":"精通Java 9（影印版）","url":"https:\/\/api.douban.com\/v2\/book\/30768559","alt_title":"","author_intro":"","summary":"","price":"99元"},{"rating":{"max":10,"numRaters":512,"average":"8.3","min":0},"subtitle":"","author":["（美）Cay S. Horstmann","（美）Gary Cornell"],"pubdate":"2013-11-1","tags":[{"count":336,"name":"java","title":"java"},{"count":317,"name":"Java","title":"Java"},{"count":200,"name":"java基础","title":"java基础"},{"count":185,"name":"编程","title":"编程"},{"count":148,"name":"计算机","title":"计算机"},{"count":123,"name":"程序设计","title":"程序设计"},{"count":73,"name":"程序员","title":"程序员"},{"count":61,"name":"技术","title":"技术"}],"origin_title":"Cay S. Horstmann,Gary Cornell","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s27123141.jpg","binding":"平装","translator":["周立新","陈波","叶乃文","邝劲筠","杜永萍"],"catalog":"译者序\n前言\n致谢\n第1章 Java程序设计概述\n1.1 Java程序设计平台\n1.2 Java“白皮书”的关键术语\n1.2.1 简单性\n1.2.2 面向对象\n1.2.3 网络技能\n1.2.4 健壮性\n1.2.5 安全性\n1.2.6 体系结构中立\n1.2.7 可移植性\n1.2.8 解释型\n1.2.9 高性能\n1.2.10 多线程\n1.2.11 动态性\n1.3 Java applet与Internet\n1.4 Java发展简史\n1.5 关于Java的常见误解\n第2章 Java程序设计环境\n2.1 安装Java开发工具箱\n2.1.1 下载JDK\n2.1.2 设置执行路径\n2.1.3 安装库源文件和文档\n2.1.4 安装本书中的示例\n2.1.5 导航Java目录\n2.2 选择开发环境\n2.3 使用命令行工具\n2.4 使用集成开发环境\n2.5 运行图形化应用程序\n2.6 建立并运行applet\n第3章 Java的基本程序设计结构\n3.1 一个简单的Java应用程序\n3.2 注释\n3.3 数据类型\n3.3.1 整型\n3.3.2 浮点类型\n3.3.3 char类型\n3.3.4 boolean类型\n3.4 变量\n3.4.1 变量初始化\n3.4.2 常量\n3.5 运算符\n3.5.1 自增运算符与自减运算符\n3.5.2 关系运算符与boolean运算符\n3.5.3 位运算符\n3.5.4 数学函数与常量\n3.5.5 数值类型之间的转换\n3.5.6 强制类型转换\n3.5.7 括号与运算符级别\n3.5.8 枚举类型\n3.6 字符串\n3.6.1 子串\n3.6.2 拼接\n3.6.3 不可变字符串\n3.6.4 检测字符串是否相等\n3.6.5 空串与Null串\n3.6.6 代码点与代码单元\n3.6.7 字符串API\n3.6.8 阅读联机API文档\n3.6.9 构建字符串\n3.7 输入输出\n3.7.1 读取输入\n3.7.2 格式化输出\n3.7.3 文件输入与输出\n3.8 控制流程\n3.8.1 块作用域\n3.8.2 条件语句\n3.8.3 循环\n3.8.4 确定循环\n3.8.5 多重选择：switch语句\n3.8.6 中断控制流程语句\n3.9 大数值\n3.10 数组\n3.10.1 for each循环\n3.10.2 数组初始化以及匿名数组\n3.10.3 数组拷贝\n3.10.4 命令行参数\n3.10.5 数组排序\n3.10.6 多维数组\n3.10.7 不规则数组\n第4章 对象与类\n4.1 面向对象程序设计概述\n4.1.1 类\n4.1.2 对象\n4.1.3 识别类\n4.1.4　类之间的关系\n4.2 使用预定义类\n4.2.1 对象与对象变量\n4.2.2 Java类库中的Gregorian-Calendar类\n4.2.3 更改器方法与访问器方法\n4.3 用户自定义类\n4.3.1 Employee类\n4.3.2 多个源文件的使用\n4.3.3 剖析Employee类\n4.3.4 从构造器开始\n4.3.5 隐式参数与显式参数\n4.3.6 封装的优点\n4.3.7 基于类的访问权限\n4.3.8 私有方法\n4.3.9 final实例域\n4.4 静态域与静态方法\n4.4.1 静态域\n4.4.2 静态常量\n4.4.3 静态方法\n4.4.4 工厂方法\n4.4.5 main方法\n4.5 方法参数\n4.6 对象构造\n4.6.1 重载\n4.6.2 默认域初始化\n4.6.3 无参数的构造器\n4.6.4 显式域初始化\n4.6.5 参数名\n4.6.6 调用另一个构造器\n4.6.7 初始化块\n4.6.8 对象析构与finalize方法\n4.7 包\n4.7.1 类的导入\n4.7.2 静态导入\n4.7.3 将类放入包中\n4.7.4 包作用域\n4.8 类路径\n4.9 文档注释\n4.9.1 注释的插入\n4.9.2 类注释\n4.9.3 方法注释\n4.9.4 域注释\n4.9.5 通用注释\n4.9.6 包与概述注释\n4.9.7 注释的抽取\n4.10 类设计技巧\n第5章 继承\n5.1 类、超类和子类\n5.1.1 继承层次\n5.1.2 多态\n5.1.3 动态绑定\n5.1.4 阻止继承：final类和方法\n5.1.5 强制类型转换\n5.1.6 抽象类\n5.1.7 受保护访问\n5.2 Object：所有类的超类\n5.2.1 equals方法\n5.2.2 相等测试与继承\n5.2.3 hashCode方法\n5.2.4 toString方法\n5.3 泛型数组列表\n5.3.1 访问数组列表元素\n5.3.2 类型化与原始数组列表的兼容性\n5.4 对象包装器与自动装箱\n5.5 参数数量可变的方法\n5.6 枚举类\n5.7 反射\n5.7.1 Class类\n5.7.2 捕获异常\n5.7.3 利用反射分析类的能力\n5.7.4 在运行时使用反射分析对象\n5.7.5 使用反射编写泛型数组代码\n5.7.6 调用任意方法\n5.8 继承设计的技巧\n第6章 接口与内部类\n6.1 接口\n6.1.1 接口的特性\n6.1.2 接口与抽象类\n6.2 对象克隆\n6.3 接口与回调\n6.4 内部类\n6.4.1 使用内部类访问对象状态\n6.4.2 内部类的特殊语法规则\n6.4.3 内部类是否有用、必要和安全\n6.4.4 局部内部类\n6.4.5 由外部方法访问final变量\n6.4.6 匿名内部类\n6.4.7 静态内部类\n6.5 代理\n第7章 图形程序设计\n7.1 Swing概述\n7.2 创建框架\n7.3 框架定位\n7.3.1 框架属性\n7.3.2 确定合适的框架大小\n7.4 在组件中显示信息\n7.5 处理2D图形\n7.6 使用颜色\n7.7 文本使用特殊字体\n7.8 显示图像\n第8章 事件处理\n8.1 事件处理基础\n8.1.1 实例：处理按钮点击事件\n8.1.2 建议使用内部类\n8.1.3 创建包含一个方法调用的监听器\n8.1.4 实例：改变观感\n8.1.5 适配器类\n8.2 动作\n8.3 鼠标事件\n8.4 AWT事件继承层次\n第9章 Swing用户界面组件\n9.1 Swing和模型-视图-控制器设计模式\n9.1.1 设计模式\n9.1.2 模型-视图-控制器模式\n9.1.3 Swing按钮的模型-视图-控制器分析\n9.2 布局管理概述\n9.2.1 边框布局\n9.2.2 网格布局\n9.3 文本输入\n9.3.1 文本域\n9.3.2 标签和标签组件\n9.3.3 密码域\n9.3.4 文本区\n9.3.5 滚动窗格\n9.4 选择组件\n9.4.1 复选框\n9.4.2 单选按钮\n9.4.3 边框\n9.4.4 组合框\n9.4.5 滑动条\n9.5 菜单\n9.5.1 菜单创建\n9.5.2 菜单项中的图标\n9.5.3 复选框和单选按钮菜单项\n9.5.4 弹出菜单\n9.5.5 快捷键和加速器\n9.5.6 启用和禁用菜单项\n9.5.7 工具栏\n9.5.8 工具提示\n9.6 复杂的布局管理\n9.6.1 网格组布局\n9.6.2 组布局\n9.6.3 不使用布局管理器\n9.6.4 定制布局管理器\n9.6.5 遍历顺序\n9.7 对话框\n9.7.1 选项对话框\n9.7.2 创建对话框\n9.7.3 数据交换\n9.7.4 文件对话框\n9.7.5 颜色选择器\n第10章 部署应用程序和applet\n10.1 JAR文件\n10.1.1 清单文件\n10.1.2 可运行JAR文件\n10.1.3 资源\n10.1.4 密封\n10.2 Java Web Start\n10.2.1 沙箱\n10.2.2 签名代码\n10.2.3 JNLP API\n10.3 applet\n10.3.1 一个简单的applet\n10.3.2 applet的HTML标记和属性\n10.3.3 object标记\n10.3.4 使用参数向applet传递信息\n10.3.5 访问图像和音频文件\n10.3.6 applet上下文\n10.4 应用程序首选项存储\n10.4.1 属性映射\n10.4.2 Preferences API\n第11章 异常、断言、日志和调试\n11.1 处理错误\n11.1.1 异常分类\n11.1.2 声明已检查异常\n11.1.3 如何抛出异常\n11.1.4 创建异常类\n11.2 捕获异常\n11.2.1 捕获多个异常\n11.2.2 再次抛出异常与异常链\n11.2.3 finally子句\n11.2.4 带资源的try语句\n11.2.5 分析堆栈跟踪元素\n11.3 使用异常机制的技巧\n11.4 使用断言\n11.4.1 启用和禁用断言\n11.4.2 使用断言完成参数检查\n11.4.3 为文档假设使用断言\n11.5 记录日志\n11.5.1 基本日志\n11.5.2 高级日志\n11.5.3 修改日志管理器配置\n11.5.4 本地化\n11.5.5 处理器\n11.5.6 过滤器\n11.5.7 格式化器\n11.5.8 日志记录说明\n11.6 调试技巧\n11.7 GUI程序排错技巧\n11.8 使用调试器\n第12章 泛型程序设计\n12.1 为什么要使用泛型程序设计\n12.2 定义简单泛型类\n12.3 泛型方法\n12.4 类型变量的限定\n12.5 泛型代码和虚拟机\n12.5.1 翻译泛型表达式\n12.5.2 翻译泛型方法\n12.5.3 调用遗留代码\n12.6 约束与局限性\n12.6.1 不能用基本类型实例化类型参数\n12.6.2 运行时类型查询只适用于原始类型\n12.6.3 不能创建参数化类型的数组\n12.6.4 Varargs警告\n12.6.5 不能实例化类型变量\n12.6.6 泛型类的静态上下文中类型变量无效\n12.6.7 不能抛出或捕获泛型类的实例\n12.6.8 注意擦除后的冲突\n12.7 泛型类型的继承规则\n12.8 通配符类型\n12.8.1 通配符的超类型限定\n12.8.2 无限定通配符\n12.8.3 通配符捕获\n12.9 反射和泛型\n12.9.1 使用Class参数进行类型匹配\n12.9.2 虚拟机中的泛型类型信息\n第13章 集合\n13.1 集合接口\n13.1.1 将集合的接口与实现分离\n13.1.2 Java类库中的集合接口和迭代器接口\n13.2 具体的集合\n13.2.1 链表\n13.2.2 数组列表\n13.2.3 散列集\n13.2.4 树集\n13.2.5 对象的比较\n13.2.6 队列与双端队列\n13.2.7 优先级队列\n13.2.8 映射表\n13.2.9 专用集与映射表类\n13.3 集合框架\n13.3.1 视图与包装器\n13.3.2 批操作\n13.3.3 集合与数组之间的转换\n13.4 算法\n13.4.1 排序与混排\n13.4.2 二分查找\n13.4.3 简单算法\n13.4.4 编写自己的算法\n13.5 遗留的集合\n13.5.1 Hashtable类\n13.5.2 枚举\n13.5.3 属性映射表\n13.5.4 栈\n13.5.5 位集\n第14章 多线程\n14.1 什么是线程\n14.2 中断线程\n14.3 线程状态\n14.3.1 新创建线程\n14.3.2 可运行线程\n14.3.3 被阻塞线程和等待线程\n14.3.4 被终止的线程\n14.4 线程属性\n14.4.1 线程优先级\n14.4.2 守护线程\n14.4.3 未捕获异常处理器\n14.5 同步\n14.5.1 竞争条件的一个例子\n14.5.2 竞争条件详解\n14.5.3 锁对象\n14.5.4 条件对象\n14.5.5 synchronized关键字\n14.5.6 同步阻塞\n14.5.7 监视器概念\n14.5.8 Volatile域\n14.5.9 final变量\n14.5.10 原子性\n14.5.11 死锁\n14.5.12 线程局部变量\n14.5.13 锁测试与超时\n14.5.14 读\/写锁\n14.5.15 为什么弃用stop和suspend方法\n14.6 阻塞队列\n14.7 线程安全的集合\n14.7.1 高效的映射表、集合和队列\n14.7.2 写数组的拷贝\n14.7.3 较早的线程安全集合\n14.8 Callable与Future\n14.9 执行器\n14.9.1 线程池\n14.9.2 预定执行\n14.9.3 控制任务组\n14.9.4 Fork-Join框架\n14.10 同步器\n14.10.1 信号量\n14.10.2 倒计时门栓\n14.10.3 障栅\n14.10.4 交换器\n14.10.5 同步队列\n14.11 线程与Swing\n14.11.1 运行耗时的任务\n14.11.2 使用Swing工作线程\n14.11.3 单一线程规则\n附录　Java关键字","pages":"720","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s27123141.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s27123141.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s27123141.jpg"},"alt":"https:\/\/book.douban.com\/subject\/25762168\/","id":"25762168","publisher":"机械工业出版社","isbn10":"7111445147","isbn13":"9787111445142","title":"Java核心技术·卷1：基础知识（原书第9版）","url":"https:\/\/api.douban.com\/v2\/book\/25762168","alt_title":"Cay S. Horstmann,Gary Cornell","author_intro":"Cay S. Horstmann，圣何塞州立大学计算机科学系教授、Java语言的倡导者，也是《Scala for the Impatient》一书（Addison-Wesley，2012）的作者和《Core JavaServer· Faces，3rd》一书（Prentice Hall, 2010）的合著者。他还经常在计算机会议上发表演讲。\nCray Cornell，已经教授程序设计专业课程20多年，并撰写了多部专著。他是Apress的创始人之一，他写的程序设计专业书籍非常畅销，曾荣获Jolt震撼大奖，并获得Visual Basic Magazine的读者最喜爱作品大奖。","summary":"Java领域最有影响力和价值的著作之一，拥有20多年教学与研究经验的资深Java技术专家撰写（获Jolt大奖），与《Java编程思想》齐名，10余年全球畅销不衰，广受好评。第9版根据JavaSE7全面更新，同时修正了第8版中的不足，系统全面讲解Java语言的核心概念、语法、重要特性和开发方法，包含大量案例，实践性强。\n《Java核心技术·卷1：基础知识》共14章。第1章概述了Java语言与其他程序设计语言不同的性能；第2章讲解了如何下载和安装JDK及本书的程序示例；第3章介绍了变量、循环和简单的函数；第4章讲解了类和封装；第5章介绍了继承；第6章解释了接口和内部类；第7章概述了图形用户界面程序设计知识；第8章讨论AWT的事件模型；第9章探讨了SwingGUI工具箱；第10章讲解如何部署自己的应用程序或applet；第11章讨论异常处理；第12章概要介绍泛型程序设计；第13章讲解Java平台的集合框架；第14章介绍了多线程。本书最后还有一个附录，其中列出了Java语言的保留字。","series":{"id":"34391","title":"Java核心技术系列"},"price":"119.00"},{"rating":{"max":10,"numRaters":151,"average":"8.4","min":0},"subtitle":"","author":["[美] Cay S. Horstmann","[美] Gary Cornell"],"pubdate":"2014-3-1","tags":[{"count":148,"name":"Java","title":"Java"},{"count":55,"name":"编程","title":"编程"},{"count":43,"name":"java","title":"java"},{"count":39,"name":"计算机","title":"计算机"},{"count":32,"name":"程序设计","title":"程序设计"},{"count":27,"name":"编程语言","title":"编程语言"},{"count":23,"name":"计算机科学","title":"计算机科学"},{"count":21,"name":"Programming","title":"Programming"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s28038862.jpg","binding":"平装","translator":["陈昊鹏","王浩","姚建平"],"catalog":"译者序\n前言\n第1章　流与文件\t1\n1.1　流\t1\n1.1.1　读写字节\t1\n1.1.2　完整的流家族\t3\n1.1.3　组合流过滤器\t7\n1.2　文本输入与输出\t10\n1.2.1　如何写出文本输出\t10\n1.2.2　如何读入文本输入\t13\n1.2.3　以文本格式存储对象\t13\n1.2.4　字符集\t16\n1.3　读写二进制数据\t20\n1.4　ZIP文档\t27\n1.5　对象流与序列化\t29\n1.5.1　理解对象序列化的文件格式\t34\n1.5.2　修改默认的序列化机制\t39\n1.5.3　序列化单例和类型安全的枚举\t40\n1.5.4　版本管理\t42\n1.5.5　为克隆使用序列化\t44\n1.6　操作文件\t46\n1.6.1　Path\t46\n1.6.2　读写文件\t48\n1.6.3　复制、移动和删除文件\t49\n1.6.4　创建文件和目录\t50\n1.6.5　获取文件信息\t51\n1.6.6　迭代目录中的文件\t53\n1.6.7　ZIP文件系统\t55\n1.7　内存映射文件\t56\n1.7.1　缓冲区数据结构\t62\n1.7.2　文件加锁机制\t64\n1.8　正则表达式\t66\n第2章　XML\t76\n2.1　XML概述\t76\n2.2　解析XML文档\t81\n2.3　验证XML文档\t91\n2.3.1　文档类型定义\t92\n2.3.2　XML Schema\t98\n2.3.3　实用示例\t101\n2.4　使用XPath来定位信息\t113\n2.5　使用命名空间\t119\n2.6　流机制解析器\t121\n2.6.1　使用SAX解析器\t122\n2.6.2　使用StAX解析器\t126\n2.7　生成XML文档\t129\n2.7.1　不带命名空间的文档\t130\n2.7.2　带命名空间的文档\t130\n2.7.3　写出文档\t131\n2.7.4　示例：生成SVG文件\t131\n2.7.5　使用StAX写XML文档\t133\n2.8　XSL转换\t140\n第3章　网络\t151\n3.1　连接到服务器\t151\n3.1.1　套接字超时\t155\n3.1.2　因特网地址\t156\n3.2　实现服务器\t157\n3.2.1　为多个客户端服务\t160\n3.2.2　半关闭\t163\n3.3　可中断套接字\t164\n3.4　获取Web数\t171\n3.4.1　URL和URI\t171\n3.4.2　使用URLConnection获取信息\t173\n3.4.3　提交表单数据\t181\n3.5　发送E-mail\t187\n第4章　数据库编程\t191\n4.1　JDBC的设计\t191\n4.1.1　JDBC驱动程序类型\t192\n4.1.2　JDBC的典型用法\t193\n4.2　结构化查询语言\t194\n4.3　JDBC配置\t198\n4.3.1　数据库URL\t199\n4.3.2　驱动程序JAR文件\t199\n4.3.3　启动数据库\t199\n4.3.4　注册驱动器类\t200\n4.3.5　连接到数据库\t201\n4.4　执行SQL语句\t203\n4.4.1　管理连接、语句和结果集\t206\n4.4.2　分析SQL异常\t207\n4.4.3　组装数据库\t209\n4.5　执行查询操作\t212\n4.5.1　预备语句\t212\n4.5.2　读写LOB\t218\n4.5.3　SQL转义\t219\n4.5.4　多结果集\t220\n4.5.5　获取自动生成键\t221\n4.6　可滚动和可更新的结果集\t222\n4.6.1　可滚动的结果集\t222\n4.6.2　可更新的结果集\t224\n4.7　行集\t228\n4.7.1　构建行集\t228\n4.7.2　被缓存的行集\t229\n4.8　元数据\t231\n4.9　事务\t240\n4.9.1　保存点\t241\n4.9.2　批量更新\t241\n4.9.3　高级SQL类型\t243\n4.10　Web与企业应用中的连接管理\t244\n第5章　国际化\t246\n5.1　Locales \t246\n5.2　数字格式\t251\n5.3　日期和时间\t257\n5.4　排序\t264\n5.4.1　排序强度\t265\n5.4.2　分解\t265\n5.5　消息格式化\t270\n选择格式\t272\n5.6　文本文件和字符集\t273\n源文件的字符编码\t274\n5.7　资源包\t275\n5.7.1　定位资源包\t275\n5.7.2　属性文件\t276\n5.7.3　包类\t277\n5.8　一个完整的例子\t278\n第6章　高级Swing\t293\n6.1　列表\t293\n6.1.1　JList构件\t293\n6.1.2　列表模式\t298\n6.1.3　插入和移除值\t302\n6.1.4　值的绘制\t304\n6.2　表格\t307\n6.2.1　简单表格\t307\n6.2.2　表格模型\t310\n6.2.3　对行和列的操作\t314\n6.2.4　单元格的绘制和编辑\t328\n6.3　树\t338\n6.3.1　简单的树\t339\n6.3.2　节点枚举\t352\n6.3.3　绘制节点\t353\n6.3.4　监听树事件\t356\n6.3.5　定制树模型\t362\n6.4　文本构件\t370\n6.4.1　文本构件中的修改跟踪\t371\n6.4.2　格式化的输入框\t373\n6.4.3　JSpinner构件\t388\n6.4.4　用JEditorPane显示HTML\t395\n6.5　进度指示器\t401\n6.5.1　进度条\t401\n6.5.2　进度监视器\t404\n6.5.3　监视输入流的进度\t407\n6.6　构件组织器和装饰器\t411\n6.6.1　分割面板\t411\n6.6.2　选项卡面板\t414\n6.6.3　桌面面板和内部框体\t419\n6.6.4　级联与平铺\t422\n6.6.5　否决属性设置\t425\n第7章　高级AWT\t440\n7.1　绘图操作流程\t440\n7.2　形状\t442\n7.3　区域\t456\n7.4　笔划\t458\n7.5　着色\t465\n7.6　坐标变换\t466\n7.7　剪切\t471\n7.8　透明与组合\t473\n7.9　绘图提示\t481\n7.10　图像的读取器和写入器\t486\n7.10.1　获得图像文件类型的读取器和写入器\t487\n7.10.2　读取和写入带有多个图像的文件\t488\n7.11　图像处理\t496\n7.11.1　构建光栅图像\t496\n7.11.2　图像过滤\t502\n7.12　打印\t510\n7.12.1　图形打印\t510\n7.12.2　打印多页文件\t518\n7.12.3　打印预览\t520\n7.12.4　打印服务程序\t528\n7.12.5　流打印服务程序\t531\n7.12.6　打印属性\t532\n7.13　剪贴板\t538\n7.13.1　用于数据传递的类和接口\t539\n7.13.2　传递文本\t540\n7.13.3　Transferable接口和数据风格\t543\n7.13.4　构建一个可传递的图像\t545\n7.13.5　通过系统剪贴板传递Java对象\t548\n7.13.6　使用本地剪贴板来传递对象引用\t552\n7.14　拖放操作\t552\n7.14.1　Swing对数据传递的支持\t553\n7.14.2　拖曳源\t557\n7.14.3　放置目标\t559\n7.15　平台集成\t566\n7.15.1　闪屏\t566\n7.15.2　启动桌面应用程序\t571\n7.15.3　系统托盘\t576\n第8章　JavaBean构件\t581\n8.1　为何使用Bean\t581\n8.2　编写Bean的过程\t583\n8.3　使用Bean构造应用程序\t585\n8.3.1　将Bean打包成JAR文件\t585\n8.3.2　在开发环境中组合Bean\t586\n8.4　Bean属性与事件的命名模式\t591\n8.5　Bean属性的类型\t594\n8.5.1　简单属性\t594\n8.5.2　索引属性\t594\n8.5.3　绑定属性\t595\n8.5.4　约束属性\t596\n8.6　BeanInfo类\t603\n8.7　属性编辑器\t607\n8.8　定制器\t616\n8.9　JavaBean持久化\t624\n8.9.1　JavaBean持久化可用于任何数据\t628\n8.9.2　一个JavaBean持久化的完整示例\t633\n第9章　安全\t644\n9.1　类加载器\t645\n9.1.1　类加载器的层次结构\t646\n9.1.2　将类加载器作为命名空间\t647\n9.1.3　编写你自己的类加载器\t648\n9.2　字节码校验\t653\n9.3　安全管理器与访问权限\t657\n9.3.1　Java平台安全性\t658\n9.3.2　安全策略文件\t661\n9.3.3　定制权限\t667\n9.3.4　实现权限类\t669\n9.4　用户认证\t674\n9.5　数字签名\t687\n9.5.1　消息摘要\t688\n9.5.2　消息签名\t691\n9.5.3　校验签名\t693\n9.5.4　认证问题\t695\n9.5.5　证书签名\t697\n9.5.6　证书请求\t698\n9.6　代码签名\t699\n9.6.1　JAR文件签名\t699\n9.6.2　软件开发者证书\t702\n9.7　加密\t704\n9.7.1　对称密码\t705\n9.7.2　密钥生成\t706\n9.7.3　密码流\t710\n9.7.4　公共密钥密码\t711\n第10章　脚本、编译与注解处理\t716\n10.1　Java平台的脚本\t716\n10.1.1　获取脚本引擎\t716\n10.1.2　脚本赋值与绑定\t717\n10.1.3　重定向输入和输出\t719\n10.1.4　调用脚本的函数和方法\t720\n10.1.5　编译脚本\t722\n10.1.6　一个示例：用脚本处理GUI事件\t722\n10.2　编译器API\t727\n10.2.1　编译便捷之法\t727\n10.2.2　使用编译工具\t727\n10.2.3　一个示例：动态Java代码生成\t732\n10.3　使用注解\t737\n10.4　注解语法\t743\n10.5　标准注解\t746\n10.5.1　用于编译的注解\t747\n10.5.2　用于管理资源的注解\t748\n10.5.3　元注解\t748\n10.6　源码级注解处理\t750\n10.7　字节码工程\t756\n第11章　分布式对象\t765\n11.1　客户与服务器的角色\t765\n11.2　远程方法调用\t767\n11.3　RMI编程模型\t769\n11.3.1　接口与实现\t769\n11.3.2　RMI注册表\t770\n11.3.3　部署程序\t774\n11.3.4　记录RMI活动的日志\t776\n11.4　远程方法中的参数和返回值\t778\n11.4.1　传递远程对象\t778\n11.4.2　传递非远程对象\t779\n11.4.3　动态类加载\t781\n11.4.4　具有多重接口的远程引用\t785\n11.4.5　远程对象与equals、hashCode和clone方法\t786\n11.5　远程对象激活\t786\n第12章　本地方法\t792\n12.1　从Java程序中调用C函数\t793\n12.2　数值参数与返回值\t797\n12.3　字符串参数\t799\n12.4　访问域\t804\n12.4.1　访问实例域\t804\n12.4.2　访问静态域\t808\n12.5　编码签名\t809\n12.6　调用Java方法\t810\n12.6.1　实例方法\t810\n12.6.2　静态方法\t813\n12.6.3　构造器\t814\n12.6.4　替代方法调用\t815\n12.7　访问数组元素\t816\n12.8　错误处理\t820\n12.9　使用调用API\t824\n12.10　完整的示例：访问Windows注册表\t829\n12.10.1　Windows注册表概述\t829\n12.10.2　访问注册表的Java平台接口\t830\n12.10.3　以本地方法方式实现注册表访问函数\t830","pages":"856","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s28038862.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s28038862.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s28038862.jpg"},"alt":"https:\/\/book.douban.com\/subject\/25841326\/","id":"25841326","publisher":"机械工业出版社","isbn10":"7111442504","isbn13":"9787111442509","title":"Java核心技术（卷2）：高级特性（原书第9版）","url":"https:\/\/api.douban.com\/v2\/book\/25841326","alt_title":"","author_intro":"Cay S。 Horstmann，圣何塞州立大学计算机科学系教授、Java的倡导者，经常在开发人员会议上发表演讲。他是《Scala for the Impatient》（Addison-Wesley， 2012）的作者，并参与撰写了《Core JavaServerTM Faces，Third Edition》（Prentice Hall， 2010）。\nGary Cornell，已经教授程序设计专业课程20余年，并撰写了多部专著。他是Apress的创始人之一。他撰写的程序设计专业书籍十分畅销，曾荣获Jolt大奖，并获得Visual Basic Magazine的读者最喜爱作品大奖。","summary":"Java领域最有影响力和价值的著作之一，由拥有20多年教学与研究经验的资深Java技术专家撰写（获Jolt大奖），与《Java编程思想》齐名，10余年全球畅销不衰，广受好评。第9版根据Java SE 7全面更新，同时修正了第8版中的不足，系统全面讲解Java语言的核心概念、语法、重要特性和开发方法。本书全面覆盖Java技术的高级主题，包括流与文件、XML、网络、数据库编程、国际化等，详细描述了图形与GUI编程，还涉及安全、远程方法、注解处理、本地方法等。本书对Java技术的阐述精确到位，叙述方式深入浅出，并包含大量示例代码，能够帮助读者充分理解Java语言并灵活应用。","series":{"id":"34391","title":"Java核心技术系列"},"price":"139.00"},{"rating":{"max":10,"numRaters":70,"average":"8.5","min":0},"subtitle":"Fundamentals","author":["Cay S. Horstmann","Gary Cornell"],"pubdate":"2012-12-7","tags":[{"count":49,"name":"Java","title":"Java"},{"count":17,"name":"计算机","title":"计算机"},{"count":13,"name":"编程语言","title":"编程语言"},{"count":11,"name":"编程","title":"编程"},{"count":8,"name":"CoreJava","title":"CoreJava"},{"count":6,"name":"programming","title":"programming"},{"count":5,"name":"程序设计","title":"程序设计"},{"count":4,"name":"程序设计之语言","title":"程序设计之语言"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s24458333.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"1008","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s24458333.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s24458333.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s24458333.jpg"},"alt":"https:\/\/book.douban.com\/subject\/6340221\/","id":"6340221","publisher":"Prentice Hall","isbn10":"0137081898","isbn13":"9780137081899","title":"Core Java, Volume I (9th Edition)","url":"https:\/\/api.douban.com\/v2\/book\/6340221","alt_title":"","author_intro":"","summary":"Fully updated to reflect Java SE 7 language changes, Core Java(TM), Volume I-Fundamentals, Ninth Edition, is the definitive guide to the Java platform. Designed for serious programmers, this reliable, unbiased, no-nonsense tutorial illuminates key Java language and library features with thoroughly tested code examples. As in previous editions, all code is easy to understand, reflects modern best practices, and is specifically designed to help jumpstart your projects. Volume I quickly brings you up-to-speed on Java SE 7 core language enhancements, including the diamond operator, improved resource handling, and catching of multiple exceptions. All of the code examples have been updated to reflect these enhancements, and complete descriptions of new SE 7 features are integrated with insightful explanations of fundamental Java concepts. You'll learn all you need to be productive with * The Java programming environment  * Objects, classes, and inheritance  * Interfaces and inner classes  * Reflection and proxies  * Graphics programming  * Event handling and the event listener model * Swing-based user interface components  * Application and applet deployment  * Exceptions, logging, assertions, and debugging  * Generic programming  * Collections  * Concurrency, and more  For detailed coverage of advanced features, including the new API for file input\/output and enhancements to the concurrency utilities, look for Core Java(TM), Volume II-Advanced Features, Ninth Edition (ISBN-13: 978-0-13-708160-8).","price":"USD 59.99"},{"rating":{"max":10,"numRaters":15,"average":"8.1","min":0},"subtitle":"基础知识","author":["[美]Cay S. Horstmann","Gary Cornell"],"pubdate":"2013-7-1","tags":[{"count":13,"name":"Java","title":"Java"},{"count":7,"name":"计算机","title":"计算机"},{"count":5,"name":"编程","title":"编程"},{"count":4,"name":"Programming","title":"Programming"},{"count":2,"name":"程序设计","title":"程序设计"},{"count":1,"name":"编程语言","title":"编程语言"},{"count":1,"name":"技术","title":"技术"},{"count":1,"name":"成长","title":"成长"}],"origin_title":"Core Java Volume I—Fundamentals, Ninth Edition","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s26816599.jpg","binding":"平装","translator":[],"catalog":"Contents\nPreface　v\nAcknowledgments　ix\nChapter 1: An Introduction to Java　1\n1.1　Java As a Programming Platform　1\n1.2　The Java “White Paper” Buzzwords　2\n1.2.1　Simple　3\n1.2.2　Object-Oriented　4\n1.2.3　Network-Savvy　4\n1.2.4　Robust　5\n1.2.5　Secure　5\n1.2.6　Architecture-Neutral　6\n1.2.7　Portable　7\n1.2.8　Interpreted　7\n1.2.9　High-Performance　8\n1.2.10　Multithreaded　8\n1.2.11　Dynamic　8\n1.3　Java Applets and the Internet　9\n1.4　A Short History of Java　10\n1.5　Common Misconceptions about Java　13\nChapter 2: The Java Programming Environment　17\n2.1　Installing the Java Development Kit　18\n2.1.1　Downloading the JDK　18\n2.1.2　Setting the Executable Path　20\n2.1.3　Installing the Library Source and Documentation　22\n2.1.4　Installing the Core Java Program Examples　23\n2.1.5　Navigating the Java Directories　24\n2.2　Choosing a Development Environment　24\n2.3　Using the Command-Line Tools　25\n2.3.1　Troubleshooting Hints　27\n2.4　Using an Integrated Development Environment　28\n2.4.1　Locating Compilation Errors　32\n2.5　Running a Graphical Application　33\n2.6　Building and Running Applets　36\nChapter 3: Fundamental Programming Structures in Java　41\n3.1　A Simple Java Program　42\n3.2　Comments　45\n3.3　Data Types　46\n3.3.1　Integer Types　47\n3.3.2　Floating-Point Types　48\n3.3.3　The char Type　49\n3.3.4　The boolean Type　51\n3.4　Variables　52\n3.4.1　Initializing Variables　53\n3.4.2　Constants　54\n3.5　Operators　55\n3.5.1　Increment and Decrement Operators　56\n3.5.2　Relational and boolean Operators　57\n3.5.3　Bitwise Operators　58\n3.5.4　Mathematical Functions and Constants　59\n3.5.5　Conversions between Numeric Types　60\n3.5.6　Casts　61\n3.5.7　Parentheses and Operator Hierarchy　62\n3.5.8　Enumerated Types　63\n3.6　Strings　64\n3.6.1　Substrings　64\n3.6.2　Concatenation　64\n3.6.3　Strings Are Immutable　65\n3.6.4　Testing Strings for Equality　67\n3.6.5　Empty and Null Strings　68\n3.6.5　Code Points and Code Units　68\n3.6.6　The String API　69\n3.6.7　Reading the Online API Documentation　72\n3.6.8　Building Strings　74\n3.7　Input and Output　76\n3.7.1　Reading Input　76\n3.7.2　Formatting Output　79\n3.7.3　File Input and Output　84\n3.8　Control Flow　86\n3.8.1　Block Scope　86\n3.8.2　Conditional Statements　87\n3.8.3　Loops　91\n3.8.4　Determinate Loops　95\n3.8.5　Multiple Selections—The switch Statement　99\n3.8.6　Statements That Break Control Flow　102\n3.9　Big Numbers　105\n3.10　Arrays　107\n3.10.1　The “for each” Loop　109\n3.10.2　Array Initializers and Anonymous Arrays　110\n3.10.3　Array Copying　111\n3.10.4　Command-Line Parameters　112\n3.10.5　Array Sorting　113\n3.10.6　Multidimensional Arrays　116\n3.10.7　Ragged Arrays　120\nChapter 4: Objects and Classes　125\n4.1　Introduction to Object-Oriented Programming　126\n4.1.1　Classes　127\n4.1.2　Objects　128\n4.1.3　Identifying Classes　129\n4.1.4　Relationships between Classes　129\n4.2　Using Predefined Classes　132\n4.2.1　Objects and Object Variables　132\n4.2.2　The GregorianCalendar Class of the Java Library　136\n4.2.3　Mutator and Accessor Methods　138\n4.3　Defining Your Own Classes　145\n4.3.1　An Employee Class　145\n4.3.2　Use of Multiple Source Files　148\n4.3.3　Dissecting the Employee Class　149\n4.3.4　First Steps with Constructors　150\n4.3.5　Implicit and Explicit Parameters　152\n4.3.6　Benefits of Encapsulation　153\n4.3.7　Class-Based Access Privileges　156\n4.3.8　Private Methods　156\n4.3.9　Final Instance Fields　157\n4.4　Static Fields and Methods　157\n4.4.1　Static Fields　157\n4.4.2　Static Constants　158\n4.4.3　Static Methods　159\n4.4.4　Factory Methods　161\n4.4.5　The main Method　161\n4.5　Method Parameters　164\n4.6　Object Construction　171\n4.6.1　Overloading　171\n4.6.2　Default Field Initialization　172\n4.6.3　The Constructor with No Arguments　173\n4.6.4　Explicit Field Initialization　174\n4.6.5　Parameter Names　175\n4.6.6　Calling Another Constructor　176\n4.6.7　Initialization Blocks　176\n4.6.8　Object Destruction and the finalize Method　181\n4.7　Packages　182\n4.7.1　Class Importation　182\n4.7.2　Static Imports　184\n4.7.3　Addition of a Class into a Package　185\n4.7.4　Package Scope　188\n4.8　The Class Path　190\n4.8.1　Setting the Class Path　192\n4.9　Documentation Comments　193\n4.9.1　Comment Insertion　193\n4.9.2　Class Comments　194\n4.9.3　Method Comments　195\n4.9.4　Field Comments　196\n4.9.5　General Comments　196\n4.9.6　Package and Overview Comments　197\n4.9.7　Comment Extraction　198\n4.10　Class Design Hints　199\nChapter 5: Inheritance　203\n5.1　Classes, Superclasses, and Subclasses　204\n5.1.1　Inheritance Hierarchies　212\n5.1.2　Polymorphism　213\n5.1.3　Dynamic Binding　214\n5.1.4　Preventing Inheritance: Final Classes and Methods　217\n5.1.5　Casting　218\n5.1.6　Abstract Classes　221\n5.1.7　Protected Access　227\n5.2　Object: The Cosmic Superclass　228\n5.2.1　The equals Method　228\n5.2.2　Equality Testing and Inheritance　230\n5.2.3　The hashCode Method　234\n5.2.4　The toString Method　236\n5.3　Generic Array Lists　243\n5.3.1　Accessing Array List Elements　246\n5.3.2　Compatibility between Typed and Raw Array Lists　249\n5.4　Object Wrappers and Autoboxing　251\n5.5　Methods with a Variable Number of Parameters　254\n5.6　Enumeration Classes　256\n5.7　Reflection　258\n5.7.1　The Class Class　259\n5.7.2　A Primer on Catching Exceptions　261\n5.7.3　Using Reflection to Analyze the Capabilities of Classes　263\n5.7.4　Using Reflection to Analyze Objects at Runtime　269\n5.7.5　Using Reflection to Write Generic Array Code　274\n5.7.6　Invoking Arbitrary Methods　278\n5.8　Design Hints for Inheritance　282\nChapter 6: Interfaces and Inner Classes　285\n6.1　Interfaces　286\n6.1.1　Properties of Interfaces　292\n6.1.2　Interfaces and Abstract Classes　294\n6.2　Object Cloning　295\n6.3　Interfaces and Callbacks　302\n6.4　Inner Classes　305\n6.4.1　Use of an Inner Class to Access Object State　307\n6.4.2　Special Syntax Rules for Inner Classes　311\n6.4.3　Are Inner Classes Useful? Actually Necessary? Secure?　312\n6.4.4　Local Inner Classes　315\n6.4.5　Accessing final Variables from Outer Methods　315\n6.4.6　Anonymous Inner Classes　318\n6.4.7　Static Inner Classes　322\n6.5　Proxies　326\n6.5.1　Properties of Proxy Classes　331\nChapter 7: Graphics Programming　333\n7.1　Introducing Swing　334\n7.2　Creating a Frame　339\n7.3　Positioning a Frame　342\n7.3.1　Frame Properties　345\n7.3.2　Determining a Good Frame Size　345\n7.4　Displaying Information in a Component　350\n7.5　Working with 2D Shapes　356\n7.6　Using Color　365\n7.7　Using Special Fonts for Text　369\n7.8　Displaying Images　378\nChapter 8: Event Handling　383\n8.1　Basics of Event Handling　383\n8.1.1　Example: Handling a Button Click　386\n8.1.2　Becoming Comfortable with Inner Classes　391\n8.1.3　Creating Listeners Containing a Single Method Call　394\n8.1.4　Example: Changing the Look-and-Feel　395\n8.1.5　Adapter Classes　399\n8.2　Actions　403\n8.3　Mouse Events　411\n8.4　The AWT Event Hierarchy　419\n8.4.1　Semantic and Low-Level Events　421\nChapter 9: User Interface Components with Swing　425\n9.1　Swing and the Model-View-Controller Design Pattern　426\n9.1.1　Design Patterns　426\n9.1.2　The Model-View-Controller Pattern　428\n9.1.3　A Model-View-Controller Analysis of Swing Buttons　432\n9.2　Introduction to Layout Management　433\n9.2.1　Border Layout　437\n9.2.2　Grid Layout　439\n9.3　Text Input　443\n9.3.1　Text Fields　444\n9.3.2　Labels and Labeling Components　446\n9.3.3　Password Fields　447\n9.3.4　Text Areas　448\n9.3.5　Scroll Panes　449\n9.4　Choice Components　452\n9.4.1　Checkboxes　452\n9.4.2　Radio Buttons　454\n9.4.3　Borders　458\n9.4.4　Combo Boxes　462\n9.4.5　Sliders　466\n9.5　Menus　473\n9.5.1　Menu Building　473\n9.5.2　Icons in Menu Items　476\n9.5.3　Checkbox and Radio Button Menu Items　477\n9.5.4　Pop-Up Menus　479\n9.5.5　Keyboard Mnemonics and Accelerators　480\n9.5.6　Enabling and Disabling Menu Items　483\n9.5.7　Toolbars　488\n9.5.8　Tooltips　490\n9.6　Sophisticated Layout Management　492\n9.6.1　The Grid Bag Layout　494\n9.6.1.1　The gridx, gridy, gridwidth, and gridheight Parameters　496\n9.6.1.2　Weight Fields　496\n9.6.1.3　The fill and anchor Parameters　497\n9.6.1.4　Padding　497\n9.6.1.5　Alternative Method to Specify the gridx, gridy, idwidth,and gridheight Parameters　497\n9.6.1.6　A Helper Class to Tame the Grid Bag Constraints　499\n9.6.2　Group Layout　505\n9.6.3　Using No Layout Manager　516\n9.6.4　Custom Layout Managers　516\n9.6.5　Traversal Order　521\n9.7　Dialog Boxes　522\n9.7.1　Option Dialogs　523\n9.7.2　Creating Dialogs　533\n9.7.3　Data Exchange　538\n9.7.4　File Dialogs　545\n9.7.5　Color Choosers　557\nChapter 10: Deploying Applications and Applets　565\n10.1　JAR Files　566\n10.1.1　The Manifest　567\n10.1.2　Executable JAR Files　568\n10.1.3　Resources　569\n10.1.4　Sealing　573\n10.2　Java Web Start　574\n10.2.1　The Sandbox　578\n10.2.2　Signed Code　579\n10.2.3　The JNLP API　582\n10.3　Applets　591\n10.3.1　A Simple Applet　591\n10.3.1.1　Converting Applications to Applets　595\n10.3.2　The applet HTML Tag and Its Attributes　596\n10.3.3　The object Tag　599\n10.3.4　Use of Parameters to Pass Information to Applets　600\n10.3.5　Accessing Image and Audio Files　606\n10.3.6　The Applet Context　607\n10.3.6.1　Inter-Applet Communication　608\n10.3.6.2　Displaying Items in the Browser　609\n10.4　Storage of Application Preferences　610\n10.4.1　Property Maps　611\n10.4.2　The Preferences API　616\nChapter 11: Exceptions, Assertions, Logging, and Debugging　625\n11.1　Dealing with Errors　626\n11.1.1　The Classification of Exceptions　628\n11.1.2　Declaring Checked Exceptions　630\n11.1.3　How to Throw an Exception　632\n11.1.4　Creating Exception Classes　634\n11.2　Catching Exceptions　635\n11.2.1　Catching Multiple Exceptions　637\n11.2.2　Rethrowing and Chaining Exceptions　639\n11.2.3　The finally Clause　640\n11.2.4　The Try-with-Resources Statement　644\n11.2.5　Analyzing Stack Trace Elements　646\n11.3　Tips for Using Exceptions　649\n11.4　Using Assertions　653\n11.4.1　Assertion Enabling and Disabling　654\n11.4.2　Using Assertions for Parameter Checking　655\n11.4.3　Using Assertions for Documenting Assumptions　656\n11.5　Logging　657\n11.5.1　Basic Logging　658\n11.5.2　Advanced Logging　658\n11.5.3　Changing the Log Manager Configuration　661\n11.5.4　Localization　662\n11.5.5　Handlers　663\n11.5.6　Filters　667\n11.5.7　Formatters　667\n11.5.8　A Logging Recipe　668\n11.6　Debugging Tips　677\n11.7　Tips for Troubleshooting GUI Programs　682\n11.7.1　Letting the AWT Robot Do the Work　686\n11.8　Using a Debugger　690\nChapter 12: Generic Programming　697\n12.1　Why Generic Programming?　698\n12.1.1　Who Wants to Be a Generic Programmer?　699\n12.2　Defining a Simple Generic Class　700\n12.3　Generic Methods　702\n12.4　Bounds for Type Variables　704\n12.5　Generic Code and the Virtual Machine　706\n12.5.1　Translating Generic Expressions　708\n12.5.2　Translating Generic Methods　708\n12.5.3　Calling Legacy Code　711\n12.6　Restrictions and Limitations　712\n12.6.1　Type Parameters Cannot Be Instantiated with Primitive Types　712\n12.6.2　Runtime Type Inquiry Only Works with Raw Types　712\n12.6.3　You Cannot Create Arrays of Parameterized Types　713\n12.6.4　Varargs Warnings　713\n12.6.5　You Cannot Instantiate Type Variables　715\n12.6.6　Type Variables Are Not Valid in Static Contexts of Generic Classes　717\n12.6.7　You Cannot Throw or Catch Instances of a Generic Class　717\n12.6.7.1　You Can Defeat Checked Exception Checking　718\n12.6.8　Beware of Clashes after Erasure　720\n12.7　Inheritance Rules for Generic Types　721\n12.8　Wildcard Types　723\n12.8.1　Supertype Bounds for Wildcards　725\n12.8.2　Unbounded Wildcards　728\n12.8.3　Wildcard Capture　728\n12.9　Reflection and Generics　731\n12.9.1　Using Class Parameters for Type Matching　732\n12.9.2　Generic Type Information in the Virtual Machine　733\nChapter 13: Collections　741\n13.1　Collection Interfaces　741\n13.1.1　Separating Collection Interfaces and Implementation　742\n13.1.2　Collection and Iterator Interfaces in the Java Library　745\n13.1.2.1　Iterators　745\n13.1.2.2　Removing Elements　748\n13.1.2.3　Generic Utility Methods　748\n13.2　Concrete Collections　751\n13.2.1　Linked Lists　752\n13.2.2　Array Lists　762\n13.2.3　Hash Sets　763\n13.2.4　Tree Sets　767\n13.2.5　Object Comparison　768\n13.2.6　Queues and Deques　774\n13.2.7　Priority Queues　776\n13.2.8　Maps　777\n13.2.9　Specialized Set and Map Classes　782\n13.2.9.1　Weak Hash Maps　782\n13.2.9.2　Linked Hash Sets and Maps　783\n13.2.9.3　Enumeration Sets and Maps　785\n13.2.9.4　Identity Hash Maps　785\n13.3　The Collections Framework　787\n13.3.1　Views and Wrappers　792\n13.3.1.1　Lightweight Collection Wrappers　793\n13.3.1.2　Subranges　794\n13.3.1.3　Unmodifiable Views　794\n13.3.1.4　Synchronized Views　796\n13.3.1.5　Checked Views　796\n13.3.1.6　A Note on Optional Operations　797\n13.3.2　Bulk Operations　799\n13.3.3　Converting between Collections and Arrays　800\n13.4　Algorithms　801\n13.4.1　Sorting and Shuffling　802\n13.4.2　Binary Search　805\n13.4.3　Simple Algorithms　806\n13.4.4　Writing Your Own Algorithms　808\n13.5　Legacy Collections　810\n13.5.1　The Hashtable Class　810\n13.5.2　Enumerations　810\n13.5.3　Property Maps　811\n13.5.4　Stacks　812\n13.5.5　Bit Sets　813\n13.5.5.1　The “Sieve of Eratosthenes” Benchmark　814\nChapter 14: Multithreading　819\n14.1　What Are Threads?　820\n14.1.1　Using Threads to Give Other Tasks a Chance　827\n14.2　Interrupting Threads　833\n14.3　Thread States　836\n14.3.1　New Threads　836\n14.3.2　Runnable Threads　836\n14.3.3　Blocked and Waiting Threads　837\n14.3.4　Terminated Threads　839\n14.4　Thread Properties　839\n14.4.1　Thread Priorities　840\n14.4.2　Daemon Threads　841\n14.4.3　Handlers for Uncaught Exceptions　841\n14.5　Synchronization　843\n14.5.1　An Example of a Race Condition　843\n14.5.2　The Race Condition Explained　848\n14.5.3　Lock Objects　850\n14.5.4　Condition Objects　854\n14.5.5　The synchronized Keyword　859\n14.5.6　Synchronized Blocks　864\n14.5.7　The Monitor Concept　865\n14.5.8　Volatile Fields　866\n14.5.9　Final Variables　867\n14.5.10　Atomics　868\n14.5.11　Deadlocks　868\n14.5.12　Thread-Local Variables　871\n14.5.13　Lock Testing and Timeouts　873\n14.5.14　Read\/Write Locks　874\n14.5.15　Why the stop and suspend Methods Are Deprecated　875\n14.6　Blocking Queues　877\n14.7　Thread-Safe Collections　886\n14.7.1　Efficient Maps, Sets, and Queues　886\n14.7.2　Copy on Write Arrays　888\n14.7.3　Older Thread-Safe Collections　888\n14.8　Callables and Futures　890\n14.9　Executors　895\n14.9.1　Thread Pools　896\n14.9.2　Scheduled Execution　900\n14.9.3　Controlling Groups of Tasks　901\n14.9.4　The Fork-Join Framework　902\n14.10　Synchronizers　905\n14.10.1　Semaphores　906\n14.10.2　Countdown Latches　907\n14.10.3　Barriers　907\n14.10.4　Exchangers　908\n14.10.5　Synchronous Queues　908\n14.11　Threads and Swing　909\n14.11.1　Running Time-Consuming Tasks　910\n14.11.2　Using the Swing Worker　915\n14.11.3　The Single-Thread Rule　923\nAppendix: Java Keywords　925\nIndex　929","pages":"974","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s26816599.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s26816599.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s26816599.jpg"},"alt":"https:\/\/book.douban.com\/subject\/24845015\/","id":"24845015","publisher":"人民邮电出版社","isbn10":"7115319472","isbn13":"9787115319470","title":"Java核心技术卷I：(第9版·英文版)","url":"https:\/\/api.douban.com\/v2\/book\/24845015","alt_title":"Core Java Volume I—Fundamentals, Ninth Edition","author_intro":"Cay S. Horstmann 是Scala for the Impatient的作者，还与人合著了Core JavaServer Faces。他是圣何塞州立大学计算机科学专业的教授，还是一名Java Champion，并经常在很多开发者大会上演讲。\nGary Cornell 在编程方面拥有20多年的写作和教育经验。他是Apress的创始人之一，编写了很多与开发相关的畅销书，是Jolt大奖的获奖者之一，还荣获过Visual Basic Magazine的读者选择奖。","summary":"《Java核心技术 卷I：基础知识(第9版·英文版)(上、下册)》是经典的《Java核心技术 卷I：基础知识》的最新版。这一版针对Java SE 7平台进行了全面更新，以反映Java SE 7的特性。\n书中囊括了Java的全部基础知识，提供了大量完整且具有实际意义的应用示例，详细介绍了Java语言基础、面向对象编程、反射与代理、接口与内部类、事件监听器模型、使用Swing GUI工具进行图形用户界面程序设计、打包应用程序、异常处理、登录与调试、泛型编程、集合框架、多线程等内容。\n《Java核心技术 卷I：基础知识(第9版·英文版)(上、下册)》适合想将Java应用于实际项目的软件开发人员、高等院校教师和学生参考阅读。","price":" 109"},{"rating":{"max":10,"numRaters":27,"average":"9.3","min":0},"subtitle":"","author":["施密特 (Herbert Schildt)"],"pubdate":"2015-1-1","tags":[{"count":35,"name":"Java","title":"Java"},{"count":8,"name":"计算机","title":"计算机"},{"count":2,"name":"图书馆","title":"图书馆"},{"count":2,"name":"java","title":"java"},{"count":1,"name":"编程","title":"编程"},{"count":1,"name":"技术","title":"技术"},{"count":1,"name":"8","title":"8"}],"origin_title":"Java: The Complete Reference, 9th Edition","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s28240334.jpg","binding":"平装","translator":["战晓苏","江凌"],"catalog":"第Ⅰ部分 Java 语言\n第1章 Java的历史和演变\n1.1 Java的家世\n1.1.1 现代编程语言的诞生：C语言\n1.1.2 C++：下一个阶段\n1.1.3 Java出现的时机已经成熟\n1.2 Java的诞生\n1.3 Java改变Internet的方式\n1.3.1 Java\n1.3.2 安全性\n1.3.3 可移植性\n1.4 Java的魔力：字节码\n1.5 servlet：服务器端的\n1.6 Java的关键特性\n1.6.1 简单性\n1.6.2 面向对象\n1.6.3 健壮性\n1.6.4 多线程\n1.6.5 体系结构中立\n1.6.6 解释执行和高性能\n1.6.7 分布式\n1.6.8 动态性\n1.7 Java的演变历程\n1.8 Java\n1.9 文化革新\n第2章 Java综述\n2.1 面向对象编程\n2.1.1 两种范式\n2.1.2 抽象\n2.1.3 OOP三原则\n2.2第一个简单程序\n2.2.1 输入程序\n2.2.2 编译程序\n2.2.3 深入分析第一个示例程序\n2.3第二个简短程序\n2.4 两种控制语句\n2.4.1 if语句\n2.4.2 for循环\n2.5 使用代码块\n2.6 词汇问题\n2.6.1 空白符\n2.6.2 标识符\n2.6.3 字面值\n2.6.4 注释\n2.6.5 分隔符\n2.6.6 Java关键字\n2.7 Java类库\n第3章 数据类型、变量和数组\n3.1 Java是强类型化的语言\n3.2 基本类型\n3.3 整型\n3.3.1\n3.3.2\n3.3.\n3.3.4\n3.4 浮点型\n3.4.1\n3.4.2\n3.5 字符型\n3.6 布尔型\n3.7 深入分析字面值\n3.7.1 整型字面值\n3.7.2 浮点型字面值\n3.7.3 布尔型字面值\n3.7.4 字符型字面值\n3.7.5 字符串字面值\n3.8 变量\n3.8.1 变量的声明\n3.8.2 动态初始化\n3.8.3 变量的作用域和生存期\n3.9 类型转换和强制类型转换\n3.9.1 Java的自动类型转换\n3.9.2 强制转换不兼容的类型\n3.10 表达式中的自动类型提升\n3.11 数组\n3.11.1 一维数组\n3.11.2 多维数组\n3.11.3 另一种数组声明语法\n3.12 关于字符串的一些说明\n3.13 向C\/C++程序员提供指针方面的说明\n第4章 运算符\n4.1 算术运算符\n4.1.1 基本算术运算符\n4.1.2 求模运算符\n4.1.3 算术与赋值复合运算符\n4.1.4 自增与自减运算符\n4.2 位运算符\n4.2.1 位逻辑运算符\n4.2.2 左移\n4.2.3 右移\n4.2.4 无符号右移\n4.2.5 位运算符与赋值的组合\n4.3 关系运算符\n4.4 布尔逻辑运算符\n4.5 赋值运算符\n4.6 “？”运算符\n4.7 运算符的优先级\n4.8 使用圆括号\n第5章 控制语句\n5.1 Java的选择语句\n19.18.2 java.util.fun\n19.18.3 java.uti\n19.18.4 java.util.lo\n19.18.5 java.util.\n19.18.6 java.util.\n19.18.7 java.uti\n19.18.8 java.util.s\n19.18.9 java.uti\n第20章 输入\/输出：探究ja\n20.1 I\/O类和接口\n20.2 File类\n20.2.1 目录\n20.2.2 使用FilenameFilter接口\n20.2.3 listFiles（）方法\n20.2.4 创建目录\n20.3 AutoCloseable、Closeable和Flushable接口\n20.4 I\/O异常\n20.5 关闭流的两种方式\n20.6 流类\n20.7 字节流\n20.7.1 InputStream类\n20.7.2 OutputStream类\n20.7.3 FileInputStream类\n20.7.4 FileOutputStream类\n20.7.5 ByteArrayInputStream类\n20.7.6 ByteArrayOutputStream类\n20.7.7 过滤的字节流\n20.7.8 缓冲的字节流\n20.7.9 SequenceInputStream类\n20.7.10 PrintStream类\n20.7.11 DataOutputStream和DataInputStream类\n20.7.12 RandomAccessFile类\n20.8 字符流\n20.8.1 Reader类\n20.8.2 Writer类\n20.8.3 FileReader类\n20.8.4 FileWriter类\n20.8.5 CharArrayReader类\n20.8.6 CharArrayWriter类\n20.8.7 BufferedReader类\n20.8.8 BufferedWriter类\n20.8.9 PushbackReader类\n20.8.10 PrintWriter类\n20.9 Console类\n20.10 串行化\n20.10.1 Serializable接口\n20.10.2 Externalizable接口\n20.10.3 ObjectOutput接口\n20.10.4 ObjectOutputStream类\n20.10.5 ObjectInput接口\n20.10.6 ObjectInputStream类\n20.10.7 串行化示例\n20.11 流的优点\n第21章 探究\n21.1 NIO类\n21.2 NIO的基础知识\n21.2.1 缓冲区\n21.2.2 通道\n21.2.3 字符集和选择器\n21.3 JDK 7对NIO的增强\n21.3.1 Path接口\n21.3.2 Files类\n21.3.3 Path接口\n21.3.4 文件属性接口\n21.3.5 FileSystem、FileSystems和FileStore类\n21.4 使用NIO系统\n21.4.1 为基于通道的I\/O使用\n21.4.2 为基于流的I\/O使用\n21.4.3 为路径和文件系统操作使用\n21.5 JDK 7之前基于通道的例子\n21.5.1 读文件（JDK 7之前\n21.5.2 写文件（JDK 7之前\n第22章 联网\n22.1 联网的基础知识\n22.2 联网类和接口\n22.3 InetAddress类\n22.3.1 工厂方法\n22.3.2 实例方法\n22.4 Inet4Address类和Inet6Address类\n22.5 TCP\/IP客户端套接字\n22.6 URL类\n22.7 URLConnection类\n22.8 HttpURLConnection类\n22.9 URI类\n22.10 c\n22.11 TCP\/IP服务器套接字\n22.12 数据报\n22.12.1 DatagramSocket类\n22.12.2 DatagramPacket类\n22.12.3 数据报示例\n第23章 Applet类\n23.1 applet的两种类型\n23.2 applet的基础知识\n23.3 applet的架构\n23.4 applet的骨架\n23.4.1 applet的初始化和终止\n23.4.2 重写update（）方法\n23.5 简单的applet显示方法\n23.6 请求重画\n23.7 使用状态栏窗口\n23.8 HTML APPLET标记\n23.9 向applet传递参数\n23.10 getDocumentBase（）和getCodeB\n23.11 AppletContext接口和showDocument（）方法\n23.12 AudioClip接口\n23.13 AppletStub接口\n23.14 向控制台输出\n第24章 事件处理\n24.1 两种事件处理机制\n24.2 委托事件模型\n24.2.1 事件\n24.2.2 事件源\n24.2.3 事件监听器\n24.3 事件类\n24.3.1 ActionEvent类\n24.3.2 AdjustmentEvent类\n24.3.3 ComponentEvent类\n24.3.4 ContainerEvent类\n24.3.5 FocusEvent类\n24.3.6 InputEvent类\n24.3.7 ItemEvent类\n24.3.8 KeyEvent类\n24.3.9 MouseEvent类\n24.3.10 MouseWheelEvent类\n24.3.11 TextEvent类\n24.3.12 WindowEvent类\n24.4 事件源\n24.5 事件监听器接口\n24.5.1 ActionListener接口\n24.5.2 AdjustmentListener接口\n24.5.3 ComponentListener接口\n24.5.4 ContainerListener接口\n24.5.5 FocusListener接口\n24.5.6 ItemListener接口\n24.5.7 KeyListener接口\n24.5.8 MouseListener接口\n24.5.9 MouseMotionListener接口\n24.5.10 MouseWheelListener接口\n24.5.11 TextListener接口\n24.5.12 WindowFocusListener接口\n24.5.13 WindowListener接口\n24.6 使用委托事件模型\n24.6.1 处理鼠标事件\n24.6.2 处理键盘事件\n24.7 适配器类\n24.8 内部类\n第25章 AWT介绍：使用窗口、图形和文本\n25.1 AWT类\n25.2 窗口基本元素\n25.2.1 Component类\n25.2.2 Container类\n25.2.3 Panel类\n25.2.4 Window类\n25.2.5 Frame类\n25.2.6 Canvas类\n25.3 使用框架窗口\n25.3.1 设置窗口的尺寸\n25.3.2 隐藏和显示窗口\n25.3.3 设置窗口的标题\n25.3.4 关闭框架窗口\n25.4 在基于AWT的applet中创建框架窗口\n25.5 创建基于窗口的程序\n25.6 在窗口中显示信息\n25.7 使用图形\n25.7.1 绘制直线\n25.7.2 绘制矩形\n25.7.3 绘制椭圆和圆\n25.7.4 绘制弧形\n25.7.5 绘制多边形\n25.7.6 演示绘制方法\n25.7.7 改变图形的大小\n25.8 使用颜色\n25.8.1 Color类的方法\n25.8.2 设置当前图形的颜色\n25.8.3 一个演示颜色的a\n25.9 设置绘图模式\n25.10 使用字体\n25.10.1 确定可用字体\n25.10.2 创建和选择字体\n25.10.3 获取字体信息\n25.11 使用FontMetrics管理文本输出\n25.11.1 显示多行文本\n25.11.2 居中显示文本\n25.11.3 对齐多行文本\n第26章 使用AWT控件、布局管理器和菜单\n26.1 AWT控件的基础知识\n26.1.1 添加和移除控件\n26.1.2 响应控件\n26.1.3 HeadlessException异常\n26.2 使用标签\n26.3 使用命令按钮\n26.4 使用复选框\n26.5 使用复选框组\n26.6 使用下拉列表\n26.7 使用列表框\n26.8 管理滚动条\n26.9 使用Text\n26.10 使用Tex\n26.11 理解布局管理器\n26.11.1 FlowLayout布局管理器\n26.11.2 BorderLayout布局管理器\n26.11.3 使用I\n26.11.4 GridLayout布局管理器\n26.11.5 CardLayout布局管理器\n26.11.6 GridBagLayout布局管理器\n26.12 菜单栏和菜单\n26.13 对话框\n26.14 FileDialog类\n26.15 关于重写paint（）方法\n第27章 图像\n27.1 文件格式\n27.2 图像基础：创建、加载与显示\n27.2.1 创建Image对象\n27.2.2 加载图像\n27.2.3 显示图像\n27.3 ImageObserver接口\n27.4 双缓冲\n27.5 MediaTracker类\n27.6 ImageProducer接口\n27.7 ImageConsumer接口\n27.8 ImageFilter类\n27.8.1 CropImageFilter类\n27.8.2 RGBImageFilter类\n27.9 其他图像类\n第28章 并发实用工具\n28.1 并发API包\n28.1.1 java.util.concurrent包\n28.1.2 java.util.concurrent.atomic包\n28.1.3 java.util.concurrent.locks包\n28.2 使用同步对象\n28.2.1 Semaphore类\n28.2.2 CountDownLatch类\n28.2.3 CyclicBarrier类\n28.2.4 Exchanger类\n28.2.5 Phaser类\n28.3 使用执行器\n28.3.1 一个简单的执行器示例\n28.3.2 使用Callable和Future接口\n28.4 TimeUnit枚举\n28.5 并发集合\n28.6 锁\n28.7 原子操作\n28.8 通过Fork\/Join框架进行并行编程\n28.8.1 主要的Fork\/Join类\n28.8.2 分而治之的策略\n28.8.3 一个简单的Fork\/Join示例\n28.8.4 理解并行级别带来的影响\n28.8.5 一个使用RecursiveTask[V]的例子\n28.8.6 异步执行任务\n28.8.7 取消任务\n28.8.8 确定任务的完成状态\n28.8.9 重新启动任务\n28.8.10 深入研究\n28.8.11 关于Fork\/Join框架的一些提示\n28.9 并发实用工具与Java传统方式的比较\n第29章 流\n29.1 流的基础知识\n29.1.1 流接口\n29.1.2 如何获得流\n29.1.3 一个简单的流示例\n29.2 缩减操作\n29.3 使用并行流\n29.4 映射\n29.5 收集\n29.6 迭代器和流\n29.6.1 对流使用迭代器\n29.6.2 使用Splite\n29.7 流API中更多值得探究的地方\n第30章 正则表达式和其他包\n30.1 核心Java API包\n30.2 正则表达式处理\n30.2.1 Pattern类\n30.2.2 Matcher类\n30.2.3 正则表达式的语法\n30.2.4 演示模式匹配\n30.2.5 模式匹配的两个选项\n30.2.6 探究正则表达式\n30.3 反射\n30.4 远程方法调用\n30.5 使用java.text格式化日期和时间\n30.5.1 DateFormat类\n30.5.2 SimpleDateFormat类\n30.6 JDK 8新增的时间和日？\n30.6.1 时间和日期的基础知识\n30.6.2 格式化日期和时间\n30.6.3 解析日期和时间字符串\n30.7 探究java.time包的其他方面\n第Ⅲ部分 使用Swing进行 GUI编程\n第31章 Swing简介\n31.1 Swing的起源\n31.2 Swing以AWT为基础\n31.3 两个关键的Swing特性\n31.3.1 Swing组件是轻量级的\n31.3.2 Swing支持可插入外观\n31.4 MVC连接\n31.5 组件与容器\n31.5.1 组件\n31.5.2 容器\n31.5.3 顶级容器窗格\n31.6 Swing包\n31.7 一个简单的Swing应用程序\n31.8 事件处理\n31.9 创建Swing ap\n31.10 在Swing中绘图\n31.10.1 绘图的基础知识\n31.10.2 计算可绘制区域\n31.10.3 一个绘图示例\n第32章 探究S\n32.1 JLabel与Image\n32.2 JTextF\n32.3 Swing按钮\n32.3.1 JBu\n32.3.2 JToggleBu\n32.3.3 复选框\n32.3.4 单选按钮\n32.4 JTabbed\n32.5 JScroll\n32.6 J\n32.7 JComb\n32.8 树\n32.9 JT\n第33章 Swing菜单简介\n33.1 菜单的基础知识\n33.2 JMenuBar、JMenu和JMenuItem概述\n33.2.1 JMen\n33.2.2 J\n33.2.3 JMenu\n33.3 创建主菜单\n33.4 向菜单项添加助记符和加速键\n33.5 向菜单项添加图片和工具提示\n33.6 使用JRadioButtonMenuItem和JCheckBoxMenu\n33.7 创建弹出菜单\n33.8 创建工具栏\n33.9 使用动作\n33.10 完整演示MenuDemo程序\n33.11 继续探究S\n第Ⅳ部分 使用JavaFX进行GUI编程\n第34章 JavaFX GUI编程简介\n34.1 JavaFX的基础概念\n34.1.1 JavaFX包\n34.1.2 Stage和Scene类\n34.1.3 节点和场景图\n34.1.4 布局\n34.1.5 Application类和生命周期方法\n34.1.6 启动JavaFX应用程序\n34.2 JavaFX应用程序的骨架\n34.3 编译和运行JavaFX程序\n34.4 应用程序线程\n34.5 一个简单的JavaFX控件：L\n34.6 使用按钮和事件\n34.6.1 事件的基础知识\n34.6.2 按钮控件简介\n34.6.3 演示事件处理和按钮\n34.7 直接在画布上绘制\n第35章 探究JavaFX控件\n35.1 使用Image和Image\n35.1.1 向标签添加图片\n35.1.2 在按钮中使用图片\n35.2 ToggleBu\n35.3 RadioBu\n35.3.1 处理开关组中的变化事件\n35.3.2 处理单选按钮的另一种方式\n35.4 Chec\n35.5 List\n35.5.1 ListView的滚动条\n35.5.2 启用多项选择\n35.6 Comb\n35.7 TextF\n35.8 Scroll\n35.9 Tree\n35.10 效果和变换简介\n35.10.1 效果\n35.10.2 变换\n35.10.3 演示效果和变换\n35.11 添加工具提示\n35.12 禁用控件\n第36章 JavaFX菜单简介\n36.1 菜单的基础知识\n36.2 MenuBar、Menu和MenuItem概述\n36.2.1 Men\n36.2.2\n36.2.3 Menu\n36.3 创建主菜单\n36.4 向菜单项添加助记符和加速键\n36.5 向菜单项添加图片\n36.6 使用RadioMenuItem和CheckMenu\n36.7 创建上下文菜单\n36.8 创建工具栏\n36.9 完整的MenuDemo程序\n36.10 继续探究Ja\n第Ⅴ部分 应用\n第37章 Java\n37.1 Java Bean是什么\n37.2 Java Bean的优势\n37.3 内省\n37.3.1 属性的设计模式\n37.3.2 事件的设计模式\n37.3.3 方法与设计模式\n37.3.4 使用BeanInfo接口\n37.4 绑定属性与约束属性\n37.5 持久性\n37.6 定制器\n37.7 Java Bean\n37.7.1 Introspector类\n37.7.2 PropertyDescriptor类\n37.7.3 EventSetDescriptor类\n37.7.4 MethodDescriptor类\n37.8 一个Bean示例\n第38章 ser\n38.1 背景\n38.2 servelet的生命周期\n38.3 servlet开发选项\n38.4 使用To\n38.5 一个简单的ser\n38.5.1 创建和编译servlet源代码\n38.5.2 启动To\n38.5.3 启动Web浏览器并请求ser\n38.6 Servlet\n38.7 javax.servlet包\n38.7.1 Servlet接口\n38.7.2 ServletConfig接口\n38.7.3 ServletContext接口\n38.7.4 ServletRequest接口\n38.7.5 ServletResponse接口\n38.7.6 GenericServlet类\n38.7.7 ServletInputStream类\n38.7.8 ServletOutputStream类\n38.7.9 servlet异常类\n38.8 读取servlet参数\n38.9 javax.servlet.http包\n38.9.1 HttpServletRequest接口\n38.9.2 HttpServletResponse接口\n38.9.3 HttpSession接口\n38.9.4 Cookie类\n38.9.5 HttpServlet类\n38.10 处理HTTP请求和响应\n38.10.1 处理HTTP GET请求\n38.10.2 处理HTTP POST请求\n38.11 使用co\n38.12 会话跟踪\n附录 使用Java的文档注释\n5.1.1 if语句\n5.1.2 switch语句\n5.2 迭代语句\n5.2.1 while语句\n5.2.2 do-while语句\n5.2.3 for语句\n5.2.4 for循环的for-each版本\n5.2.5 嵌套的循环\n5.3 跳转语句\n5.3.1 使用break语句\n5.3.2 使用continue语句\n5.3.3 return语句\n第6章 类\n6.1 类的基础知识\n6.1.1 类的一般形式\n6.1.2 一个简单的类\n6.2 声明对象\n6.3 为对象引用变量赋值\n6.4 方法\n6.4.1 为Box类添加方法\n6.4.2 返回值\n6.4.3 添加带参数的方法\n6.5 构造函数\n6.6 this关键字\n6.7 垃圾回收\n6.8 finalize（）方法\n6.9 堆栈类\n第7章 方法和类的深入分析\n7.1 重载方法\n7.2 将对象用作参数\n7.3 参数传递的深入分析\n7.4 返回对象\n7.5 递归\n7.6 访问控制\n7.7 理解st\n7.8 final介绍\n7.9 重新审视数组\n7.10 嵌套类和内部类\n7.11 String类介绍\n7.12 使用命令行参数\n7.13 varargs：可变长度参数\n7.13.1 重载varargs方法\n7.13.2 varargs方法与模糊性\n第8章 继承\n8.1 继承的基础知识\n8.1.1 成员访问与继承\n8.1.2 一个更实际的例子\n8.1.3 超类变量可以引用子类对象\n8.2 使用super关键字\n8.2.1 使用super调用超类的构造函数\n8.2.2 super的另一种用法\n8.3 创建多级继承层次\n8.4 构造函数的调用时机\n8.5 方法重写\n8.6 动态方法调度\n8.6.1 重写方法的目的\n8.6.2 应用方法重写\n8.7 使用抽象类\n8.8 在继承中使用final关键字\n8.8.1 使用final关键字阻止重写\n8.8.2 使用final关键字阻止继承\n8.9 Object类\n第9章 包和接口\n9.1 包\n9.1.1 定义包\n9.1.2 包查找与CLAS\n9.1.3 一个简短的包示例\n9.2 访问保护\n9.3 导入包\n9.4 接口\n9.4.1 定义接口\n9.4.2 实现接口\n9.4.3 嵌套接口\n9.4.4 应用接口\n9.4.5 接口中的变量\n9.4.6 接口可以扩展\n9.5 默认接口方法\n9.5.1 默认方法的基础知识\n9.5.2 一个更加实用的例子\n9.5.3 多级继承的问题\n9.6 在接口中使用静态方法\n9.7 关于包和接口的最后说明\n第10章 异常处理\n10.1 异常处理的基础知识\n10.2 异常类型\n10.3 未捕获的异常\n10.4 使用try和\n10.5 多条catch子句\n10.6 嵌套的try语句\n10.7\n10.8 t\n10.9 fi\n10.10 Java的内置异常\n10.11 创建自己的异常子类\n10.12 链式异常\n10.13 3个近期添加的异常特性\n10.14 使用异常\n第11章 多线程编程\n11.1 Java线程模型\n11.1.1 线程优先级\n11.1.2 同步\n11.1.3 消息传递\n11.1.4 Thread类和Runnable接口\n11.2 主线程\n11.3 创建线程\n11.3.1 实现Runnable接口\n11.3.2 扩展Thread类\n11.3.3 选择一种创建方式\n11.4 创建多个线程\n11.5 使用isAlive（）和join（）方法\n11.6 线程优先级\n11.7 同步\n11.7.1 使用同步方法\n11.7.2 synchronized语句\n11.8 线程间通信\n11.9 挂起、恢复与停止线程\n11.10 获取线程的状态\n11.11 使用多线程\n第12章 枚举、自动装箱与注解（元数据\n12.1 枚举\n12.1.1 枚举的基础知识\n12.1.2 values（）和valueOf（）方法\n12.1.3 Java枚举是类类型\n12.1.4 枚举继承自Enum类\n12.1.5 另一个枚举示例\n12.2 类型封装器\n12.2.1 Character封装器\n12.2.2 Boolean封装器\n12.2.3 数值类型封装器\n12.3 自动装箱\n12.3.1 自动装箱与方法\n12.3.2 表达式中发生的自动装箱\/拆箱\n12.3.3 布尔型和字符型数值的自动装箱\/拆箱\n12.3.4 自动装箱\/拆箱有助于防止错误\n12.3.5 一些警告\n12.4 注解（元数据\n12.4.1 注解的基础知识\n12.4.2 指定保留策略\n12.4.3 在运行时使用反射获取注解\n12.4.4 AnnotatedElement接口\n12.4.5 使用默认值\n12.4.6 标记注解\n12.4.7 单成员注解\n12.4.8 内置注解\n12.5 类型注解\n12.6 重复注解\n第13章 I\/O、applet以及其他主题\n13.1 I\/O的基础知识\n13.1.1 流\n13.1.2 字节流和字符流\n13.1.3 预定义流\n13.2 读取控制台输入\n13.2.1 读取字符\n13.2.2 读取字符串\n13.3 向控制台写输出\n13.4 PrintWriter类\n13.5 读\/写文件\n13.6 自动关闭文件\n13.7 applet的基础知识\n13.8 transient和volatile修饰符\n13.9 使用instanceof运算符\n13.10 str\n13.11 本地方法\n13.12 使用a\n13.13 静态导入\n13.14 通过this（）调用重载的构造函数\n13.15 紧凑API配置文件\n第14章 泛型\n14.1 什么是泛型\n14.2 一个简单的泛型示例\n14.2.1 泛型只使用引用类型\n14.2.2 基于不同类型参数的泛型类型是不同的\n14.2.3 泛型提升类型安全性的原理\n14.3 带两个类型参数的泛型类\n14.4 泛型类的一般形式\n14.5 有界类型\n14.6 使用通配符参数\n14.7 创建泛型方法\n14.8 泛型接口\n14.9 原始类型与遗留代码\n14.10 泛型类层次\n14.10.1 使用泛型超类\n14.10.2 泛型子类\n14.10.3 泛型层次中的运行时类型比较\n14.10.4 强制转换\n14.10.5 重写泛型类的方法\n14.11 泛型的类型推断\n14.12 擦除\n14.13 模糊性错误\n14.14 使用泛型的一些限制\n14.14.1 不能实例化类型参数\n14.14.2 对静态成员的一些限制\n14.14.3 对泛型数组的一些限制\n14.14.4 对泛型异常的限制\n第15章 lambda表达式\n15.1 lambda表达式简介\n15.1.1 lambda表达式的基础知识\n15.1.2 函数式接口\n15.1.3 几个lambda表达式示例\n15.2 块lambda表达式\n15.3 泛型函数式接口\n15.4 作为参数传递lambda表达式\n15.5 lambda表达式与异常\n15.6 lambda表达式和变量捕获\n15.7 方法引用\n15.7.1 静态方法的方法引用\n15.7.2 实例方法的方法引用\n15.7.3 泛型中的方法引用\n15.8 构造函数引用\n15.9 预定义的函数式接口\n第Ⅱ部分 Java库\n第16章 字符串处理\n16.1 String类的构造函数\n16.2 字符串的长度\n16.3 特殊的字符串操作\n16.3.1 字符串字面值\n16.3.2 字符串连接\n16.3.3 字符串和其他数据类型的连接\n16.3.4 字符串转换和toString（）方法\n16.4 提取字符\n16.4.1 cha\n16.4.2 getCh\n16.4.3 getBy\n16.4.4 toCharAr\n16.5 比较字符串\n16.5.1 equals（）和equalsIgnoreC\n16.5.2 regionMatc\n16.5.3 startsWith（）和endsW\n16.5.4 equals（）与\n16.5.5 compar\n16.6 查找字符串\n16.7 修改字符串\n16.7.1 substr\n16.7.2 con\n16.7.3 repl\n16.7.4 t\n16.8 使用valueOf（）转换数据\n16.9 改变字符串中字符的大小写\n16.10 连接字符串\n16.11 其他String方法\n16.12 StringBuffer类\n16.12.1 StringBuffer类的构造函数\n16.12.2 length（）与capac\n16.12.3 ensureCapac\n16.12.4 setLen\n16.12.5 charAt（）与setCha\n16.12.6 getCh\n16.12.7 app\n16.12.8 ins\n16.12.9 reve\n16.12.10 delete（）与deleteCha\n16.12.11 repl\n16.12.12 substr\n16.12.13 其他StringBuffer方法\n16.13 StringBuilder类\n第17章 探究java\n17.1 基本类型封装器\n17.1.1 N\n17.1.2 Double与\n17.1.3 理解isInfinite（）与is\n17.1.4 Byte、Short、Integer？\n17.1.5 Char\n17.1.6 对Unicode代码点的附加支持\n17.1.7 Bo\n17.2 Void类\n17.3 Process类\n17.4 Runtime类\n17.4.1 内存管理\n17.4.2 执行其他程序\n17.5 ProcessBuilder类\n17.6 System类\n17.6.1 使用currentTimeMillis（）计时程序的执行\n17.6.2 使用arrayc\n17.6.3 环境属性\n17.7 Object类\n17.8 使用clone（）方法和Cloneable接口\n17.9 Class类\n17.10 ClassLoader类\n17.11 Math类\n17.11.1 三角函数\n17.11.2 指数函数\n17.11.3 舍入函数\n17.11.4 其他数学方法\n17.12 StrictMath类\n17.13 Compiler类\n17.14 Thread类、ThreadGroup类和Runnable接口\n17.14.1 Runnable接口\n17.14.2 Thread类\n17.14.3 ThreadGroup类\n17.15 ThreadLocal和\nInheritableThreadLocal类\n17.16 Package类\n17.17 RuntimePermission类\n17.18 Throwable类\n17.19 SecurityManager类\n17.20 StackTraceElement类\n17.21 Enum类\n17.22 ClassValue类\n17.23 CharSequence接口\n17.24 Comparable接口\n17.25 Appendable接口\n17.26 Iterable接口\n17.27 Readable接口\n17.28 AutoCloseable接口\n17.29 Thread.UncaughtExceptionHandler接口\n17.30 java.lang子包\n17.30.1 java.lang.annot\n17.30.2 java.lang.instr\n17.30.3 java.lang.i\n17.30.4 java.lang.manag\n17.30.5 java.lan\n17.30.6 java.lang.re\n第18章 java.util第1部分：集合框架\n18.1 集合概述\n18.2 JDK 5对集合框架的修改\n18.2.1 泛型从根本上改变了集合框架\n18.2.2 自动装箱使得使用基本类型更加容易\n18.2.3 for-each风格的for循环\n18.3 集合接口\n18.3.1 Collection接口\n18.3.2 List接口\n18.3.3 Set接口\n18.3.4 SortedSet接口\n18.3.5 NavigableSet接口\n18.3.6 Queue接口\n18.3.7 Deque接口\n18.4 集合类\n18.4.1 ArrayList类\n18.4.2 LinkedList类\n18.4.3 HashSet类\n18.4.4 LinkedHashSet类\n18.4.5 TreeSet类\n18.4.6 PriorityQueue类\n18.4.7 ArrayDeque类\n18.4.8 EnumSet类\n18.5 通过迭代器访问集合\n18.5.1 使用迭代器\n18.5.2 使用for-each循环替代迭代器\n18.6 Splite\n18.7 在集合中存储用户定义的类\n18.8 RandomAccess接口\n18.9 使用映射\n18.9.1 映射接口\n18.9.2 映射类\n18.10 比较器\n18.11 集合算法\n18.12 Arrays类\n18.13 遗留的类和接口\n18.13.1 Enumeration接口\n18.13.2 Vector类\n18.13.3 Stack类\n18.13.4 Dictionary类\n18.13.5 Hashtable类\n18.13.6 Properties类\n18.13.7 使用store（）和l\n18.14 集合小结\n第19章 java.util第2部分：更多实用工具类\n19.1 StringTokenizer类\n19.2 BitSet类\n19.3 Optional、OptionalDouble、OptionalInt和Optiona\n19.4 Date类\n19.5 Calendar类\n19.6 GregorianCalendar类\n19.7 TimeZone类\n19.8 SimpleTimeZone类\n19.9 Locale类\n19.10 Random类\n19.11 Observable类\n19.11.1 Observer接口\n19.11.2 Observer示例\n19.12 Timer和TimerTask类\n19.13 Currency类\n19.14 Formatter类\n19.14.1 Formatter类的构造函数\n19.14.2 Formatter类的方法\n19.14.3 格式化的基础知识\n19.14.4 格式化字符串和字符\n19.14.5 格式化数字\n19.14.6 格式化时间和日期\n19.14.7 %n和%%说明符\n19.14.8 指定最小字段宽度\n19.14.9 指定精度\n19.14.10 使用格式标志\n19.14.11 对齐输出\n19.14.12 空格、“+”、“0”以及“（”标志\n19.14.13 逗号标志\n19.14.14 “#”标志\n19.14.15 大写选项\n19.14.16 使用参数索引\n19.14.17 关闭Formatter对象\n19.14.18 printf（）方法\n19.15 Scanner类\n19.15.1 Scanner类的构造函数\n19.15.2 扫描的基础知识\n19.15.3 一些Scanner示例\n19.15.4 设置定界符\n19.15.5 其他Scanner特性\n19.16 ResourceBundle、ListResourceBundle和\n19.17 其他实用工具类和接口\n19.18 java.util子包\n19.18.1 java.util.concurrent、java.util.concurrent.atomic和 java.util.concurrent.","pages":"1255","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s28240334.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s28240334.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s28240334.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26556574\/","id":"26556574","publisher":"清华大学出版社","isbn10":"7302387400","isbn13":"9787302387404","title":"Java 8编程参考官方教程","url":"https:\/\/api.douban.com\/v2\/book\/26556574","alt_title":"Java: The Complete Reference, 9th Edition","author_intro":"Herbert Schildt，世界顶级程序设计大师，全球顶尖编程图书作者之一。他是C、C++、Java和C#编程语言方面的权威，也是Windows编程方面的专家。他的编程书籍在全球销量已经超过300万册，并被翻译成多种语言流传于世，包括Java:The Complete Reference 、C++:The Complete Reference 、C: The Complete Reference 等。","summary":"《Java 8编程参考官方教程（第9版）》针对Java SE 8做了全面更新，介绍了如何开发、编译、调试和运行Java程序。畅销书作者Herbert Schildt撰写过众多经典的计算机编程图书。在本书中，他详尽地讲解了Java语言，包括Java的语法、关键字和基本编程原则，以及Java API库的主要内容。另外，本书还介绍了Java Bean、servlet、applet和Swing，并通过真实案例展示了Java语言的应用。《Java 8编程参考官方教程（第9版）》对Java SE 8的新特性也进行了深入讲解，包括lambda表达式、流库和默认接口方法，书末介绍的JavaFX知识为深入学习打下了坚实基础。\n主要内容\n●　数据类型、变量、数组和运算符\n●　控制语句\n●　类、对象和方法\n●　方法重载和重写\n●　继承\n●　接口和包\n●　异常处理\n●　多线程编程\n●　枚举、自动装箱和注解\n●　I\/O类\n●　泛型\n●　lambda表达式\n●　字符串处理\n●　集合框架\n●　联网\n●　事件处理\n●　AWT和Swing\n●　并发API\n●　流API\n●　正则表达式\n●　JavaFX\n●　Java Bean\n●　applet和servlet","price":"139.00"},{"rating":{"max":10,"numRaters":6,"average":"0.0","min":0},"subtitle":"高级特性","author":["[美]Cay S. Horstmann","Gary Cornell"],"pubdate":"2013-7-1","tags":[{"count":9,"name":"Java","title":"Java"},{"count":2,"name":"编程语言","title":"编程语言"},{"count":2,"name":"编程","title":"编程"},{"count":2,"name":"Programming","title":"Programming"},{"count":1,"name":"计算机","title":"计算机"},{"count":1,"name":"英文版","title":"英文版"},{"count":1,"name":"程序设计","title":"程序设计"},{"count":1,"name":"技术","title":"技术"}],"origin_title":"Core Java Volume II—Advanced Features, Ninth Edition","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s26816189.jpg","binding":"平装","translator":[],"catalog":"Contents\nPreface　v\nAcknowledgments　ix\nChapter 1: Streams and Files　1\n1.1　Streams　2\n1.1.1　Reading and Writing Bytes　2\n1.1.2　The Complete Stream Zoo　4\n1.1.3　Combining Stream Filters　9\n1.2　Text Input and Output　13\n1.2.1　How to Write Text Output　13\n1.2.2　How to Read Text Input　16\n1.2.3　Saving Objects in Text Format　16\n1.2.4　Character Sets　20\n1.3　Reading and Writing Binary Data　25\n1.3.1　Random-Access Files　28\n1.4　ZIP Archives　33\n1.5　Object Streams and Serialization　36\n1.5.1　Understanding the Object Serialization File Format　42\n1.5.2　Modifying the Default Serialization Mechanism　48\n1.5.3　Serializing Singletons and Typesafe Enumerations　50\n1.5.4　Versioning　52\n1.5.5　Using Serialization for Cloning　54\n1.6　Working with Files　57\n1.6.1　Paths　57\n1.6.2　Reading and Writing Files　60\n1.6.3　Copying, Moving, and Deleting Files　61\n1.6.4　Creating Files and Directories　62\n1.6.5　Getting File Information　63\n1.6.6　Iterating over the Files in a Directory　64\n1.6.7　ZIP File Systems　67\n1.7　Memory-Mapped Files　68\n1.7.1　The Buffer Data Structure　77\n1.7.2　File Locking　79\n1.8　Regular Expressions　81\nChapter 2: XML　93\n2.1　Introducing XML　94\n2.1.1　The Structure of an XML Document　96\n2.2　Parsing an XML Document　99\n2.3　Validating XML Documents　113\n2.3.1　Document Type Definitions　114\n2.3.2　XML Schema　122\n2.3.3　A Practical Example　125\n2.4　Locating Information with XPath　140\n2.5　Using Namespaces　147\n2.6　Streaming Parsers　150\n2.6.1　Using the SAX Parser　150\n2.6.2　Using the StAX Parser　156\n2.7　Generating XML Documents　159\n2.7.1　Documents without Namespaces　159\n2.7.2　Documents with Namespaces　160\n2.7.3　Writing Documents　161\n2.7.4　An Example: Generating an SVG File　161\n2.7.5　Writing an XML Document with StAX　164\n2.8　XSL Transformations　173\nChapter 3: Networking　185\n3.1　Connecting to a Server　185\n3.1.1　Socket Timeouts　190\n3.1.2　Internet Addresses　192\n3.2　Implementing Servers　194\n3.2.1　Serving Multiple Clients　197\n3.2.2　Half-Close　201\n3.3　Interruptible Sockets　202\n3.4　Getting Web Data　210\n3.4.1　URLs and URIs　210\n3.4.2　Using a URLConnection to Retrieve Information　212\n3.4.3　Posting Form Data　222\n3.5　Sending E-Mail　230\nChapter 4: Database Programming　235\n4.1　The Design of JDBC　236\n4.1.1　JDBC Driver Types　236\n4.1.2　Typical Uses of JDBC　238\n4.2　The Structured Query Language　239\n4.3　JDBC Configuration　245\n4.3.1　Database URLs　246\n4.3.2　Driver JAR Files　246\n4.3.3　Starting the Database　247\n4.3.4　Registering the Driver Class　248\n4.3.5　Connecting to the Database　249\n4.4　Executing SQL Statements　252\n4.4.1　Managing Connections, Statements, and Result Sets　255\n4.4.2　Analyzing SQL Exceptions　256\n4.4.3　Populating a Database　258\n4.5　Query Execution　262\n4.5.1　Prepared Statements　263\n4.5.2　Reading and Writing LOBs　269\n4.5.3　SQL Escapes　271\n4.5.4　Multiple Results　272\n4.5.5　Retrieving Autogenerated Keys　273\n4.6　Scrollable and Updatable Result Sets　274\n4.6.1　Scrollable Result Sets　274\n4.6.2　Updatable Result Sets　277\n4.7　Row Sets　281\n4.7.1　Constructing Row Sets　282\n4.7.2　Cached Row Sets　282\n4.8　Metadata　286\n4.9　Transactions　296\n4.9.1　Save Points　297\n4.9.2　Batch Updates　298\n4.9.3　Advanced SQL Types　300\n4.10　Connection Management in Web and Enterprise Applications　302\nChapter 5: Internationalization　305\n5.1　Locales　306\n5.2　Number Formats　311\n5.2.1　Currencies　318\n5.3　Date and Time　319\n5.4　Collation　328\n5.4.1　Collation Strength　329\n5.4.2　Decomposition　329\n5.5　Message Formatting　336\n5.5.1　Choice Formats　338\n5.6　Text Files and Character Sets　340\n5.6.1　Character Encoding of Source Files　340\n5.7　Resource Bundles　341\n5.7.1　Locating Resource Bundles　342\n5.7.2　Property Files　343\n5.7.3　Bundle Classes　344\n5.8 A　Complete Example　346\nChapter 6: Advanced Swing　363\n6.1　Lists　364\n6.1.1　The JList Component　364\n6.1.2　List Models　370\n6.1.3　Inserting and Removing Values　375\n6.1.4　Rendering Values　377\n6.2　Tables　381\n6.2.1　A Simple Table　382\n6.2.2　Table Models　386\n6.2.3　Working with Rows and Columns　390\n6.2.3.1　Column Classes　390\n6.2.3.2　Accessing Table Columns　392\n6.2.3.3　Resizing Columns　392\n6.2.3.4　Resizing Rows　393\n6.2.3.5　Selecting Rows, Columns, and Cells　394\n6.2.3.6　Sorting Rows　395\n6.2.3.7　Filtering Rows　396\n6.2.3.8　Hiding and Displaying Columns　398\n6.2.4　Cell Rendering and Editing　408\n6.2.4.1　Rendering the Header　409\n6.2.4.2　Cell Editing　410\n6.2.4.3　Custom Editors　411\n6.3　Trees　420\n6.3.1　Simple Trees　421\n6.3.1.1　Editing Trees and Tree Paths　431\n6.3.2　Node Enumeration　440\n6.3.3　Rendering Nodes　442\n6.3.4　Listening to Tree Events　445\n6.3.5　Custom Tree Models　453\n6.4　Text Components　462\n6.4.1　Change Tracking in Text Components　463\n6.4.2　Formatted Input Fields　467\n6.4.2.1　Integer Input　468\n6.4.2.2　Behavior on Loss of Focus　468\n6.4.2.3　Filters　470\n6.4.2.4　Verifiers　471\n6.4.2.5　Other Standard Formatters　472\n6.4.2.6　Custom Formatters　474\n6.4.3　The JSpinner Component　485\n6.4.4　Displaying HTML with the JEditorPane　494\n6.5　Progress Indicators　501\n6.5.1　Progress Bars　501\n6.5.2　Progress Monitors　505\n6.5.3　Monitoring the Progress of Input Streams　509\n6.6　Component Organizers and Decorators　514\n6.6.1　Split Panes　514\n6.6.2　Tabbed Panes　518\n6.6.3　Desktop Panes and Internal Frames　524\n6.6.4　Cascading and Tiling　527\n6.6.5　Vetoing Property Settings　531\n6.6.5.1　Dialogs in Internal Frames　533\n6.6.5.2　Outline Dragging　534\n6.6.6.3　Layers　543\nChapter 7: Advanced AWT　549\n7.1　The Rendering Pipeline　550\n7.2　Shapes　553\n7.2.1　Using the Shape Classes　555\n7.3　Areas　570\n7.4　Strokes　572\n7.5　Paint　581\n7.6　Coordinate Transformations　583\n7.7　Clipping　589\n7.8　Transparency and Composition　592\n7.9　Rendering Hints　601\n7.10　Readers and Writers for Images　608\n7.10.1　Obtaining Readers and Writers for Image File Types　608\n7.10.2　Reading and Writing Files with Multiple Images　610\n7.11　Image Manipulation　619\n7.11.1　Constructing Raster Images　619\n7.11.2　Filtering Images　626\n7.12　Printing　636\n7.12.1　Graphics Printing　637\n7.12.2　Multiple-Page Printing　647\n7.12.3　Print Preview　649\n7.12.4　Print Services　659\n7.12.5　Stream Print Services　664\n7.12.6　Printing Attributes　664\n7.13　The Clipboard　672\n7.13.1　Classes and Interfaces for Data Transfer　674\n7.13.2　Transferring Text　674\n7.13.3　The Transferable Interface and Data Flavors　678\n7.13.4　Building an Image Transferable　680\n7.13.5　Transferring Java Objects via the System Clipboard　685\n7.13.6　Using a Local Clipboard to Transfer Object References　689\n7.14　Drag and Drop　689\n7.14.1　Data Transfer Support in Swing　691\n7.14.2　Drag Sources　696\n7.14.3　Drop Targets　699\n7.15　Platform Integration　707\n7.15.1　Splash Screens　708\n7.15.2　Launching Desktop Applications　713\n7.15.3　The System Tray　719\nChapter 8: JavaBeans Components　725\n8.1　Why Beans?　726\n8.2　The Bean-Writing Process　728\n8.3　Using Beans to Build an Application　731\n8.3.1　Packaging Beans in JAR Files　731\n8.3.2　Composing Beans in a Builder Environment　733\n8.4　Naming Patterns for Bean Properties and Events　740\n8.5　Bean Property Types　743\n8.5.1　Simple Properties　744\n8.5.2　Indexed Properties　744\n8.5.3　Bound Properties　745\n8.5.4　Constrained Properties　746\n8.6　BeanInfo Classes　754\n8.7　Property Editors　758\n8.7.1　Writing Property Editors　762\n8.7.1.1　String-Based Property Editors　762\n8.7.1.2　GUI-Based Property Editors　765\n8.8　Customizers　770\n8.8.1　Writing a Customizer Class　772\n8.9　JavaBeans Persistence　779\n8.9.1　Using JavaBeans Persistence for Arbitrary Data　784\n8.9.1.1　Writing a Persistence Delegate to Construct an Object　784\n8.9.1.2　Constructing an Object from Properties　786\n8.9.1.3　Constructing an Object with a Factory Method　787\n8.9.1.4　Postconstruction Work　787\n8.9.1.5　Transient Properties　788\n8.9.2 A　Complete Example for JavaBeans Persistence　791\nChapter 9: Security　803\n9.1　Class Loaders　804\n9.1.1　The Class Loader Hierarchy　806\n9.1.2　Using Class Loaders as Namespaces　808\n9.1.3　Writing Your Own Class Loader　808\n9.2　Bytecode Verification　816\n9.3　Security Managers and Permissions　821\n9.3.1　Java Platform Security　822\n9.3.2　Security Policy Files　826\n9.3.3　Custom Permissions　834\n9.3.4　Implementation of a Permission Class　835\n9.4　User Authentication　842\n9.4.1　JAAS Login Modules　849\n9.5　Digital Signatures　858\n9.5.1　Message Digests　859\n9.5.2　Message Signing　862\n9.5.3　Verifying a Signature　865\n9.5.4　The Authentication Problem　868\n9.5.5　Certificate Signing　870\n9.5.6　Certificate Requests　872\n9.6　Code Signing　873\n9.6.1　JAR File Signing　873\n9.6.2　Software Developer Certificates　878\n9.7　Encryption　880\n9.7.1　Symmetric Ciphers　881\n9.7.2　Key Generation　882\n9.7.3　Cipher Streams　887\n9.7.4　Public Key Ciphers　888\nChapter 10: Scripting, Compiling, and Annotation Processing　893\n10.1　Scripting for the Java Platform　894\n10.1.1　Getting a Scripting Engine　894\n10.1.2　Script Evaluation and Bindings　895\n10.1.3　Redirecting Input and Output　898\n10.1.4　Calling Scripting Functions and Methods　899\n10.1.5　Compiling a Script　901\n10.1.6　An Example: Scripting GUI Events　901\n10.2　The Compiler API　907\n10.2.1　Compiling the Easy Way　907\n10.2.2　Using Compilation Tasks　907\n10.2.3　An Example: Dynamic Java Code Generation　913\n10.3　Using Annotations　919\n10.3.1　An Example: Annotating Event Handlers　920\n10.4　Annotation Syntax　926\n10.5　Standard Annotations　931\n10.5.1　Annotations for Compilation　932\n10.5.2　Annotations for Managing Resources　932\n10.5.3　Meta-Annotations　933\n10.6　Source-Level Annotation Processing　935\n10.7　Bytecode Engineering　943\n10.7.1　Modifying Bytecodes at Load Time　949\nChapter 11: Distributed Objects　953\n11.1　The Roles of Client and Server　954\n11.2　Remote Method Calls　957\n11.2.1　Stubs and Parameter Marshalling　957\n11.3　The RMI Programming Model　959\n11.3.1　Interfaces and Implementations　959\n11.3.2　The RMI Registry　961\n11.3.3　Deploying the Program　965\n11.3.4　Logging RMI Activity　968\n11.4　Parameters and Return Values in Remote Methods　970\n11.4.1　Transferring Remote Objects　971\n11.4.2　Transferring Nonremote Objects　971\n11.4.3　Dynamic Class Loading　974\n11.4.4　Remote References with Multiple Interfaces　979\n11.4.5　Remote Objects and the equals, hashCode, and clone Methods　980\n11.5　Remote Object Activation　980\nChapter 12: Native Methods　989\n12.1　Calling a C Function from a Java Program　990\n12.2　Numeric Parameters and Return Values　997\n12.2.1　Using printf for Formatting Numbers　997\n12.3　String Parameters　999\n12.4　Accessing Fields　1005\n12.4.1　Accessing Instance Fields　1005\n12.4.2　Accessing Static Fields　1009\n12.5　Encoding Signatures　1010\n12.6　Calling Java Methods　1012\n12.6.1　Instance Methods　1012\n12.6.2　Static Methods　1016\n12.6.3　Constructors　1017\n12.6.4　Alternative Method Invocations　1018\n12.7　Accessing Array Elements　1019\n12.8　Handling Errors　1023\n12.9　Using the Invocation API　1028\n12.10　A Complete Example: Accessing the Windows Registry　1034\n12.10.1　Overview of the Windows Registry　1034\n12.10.2　A Java Platform Interface for Accessing the Registry　1036\n12.10.3　Implementation of Registry Access Functions as Native Methods　1036\nIndex　1051","pages":"1118","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s26816189.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s26816189.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s26816189.jpg"},"alt":"https:\/\/book.douban.com\/subject\/24845016\/","id":"24845016","publisher":"人民邮电出版社","isbn10":"7115319480","isbn13":"9787115319487","title":"Java核心技术 卷II(第9版·英文版)","url":"https:\/\/api.douban.com\/v2\/book\/24845016","alt_title":"Core Java Volume II—Advanced Features, Ninth Edition","author_intro":"Cay S. Horstmann 是Scala for the Impatient的作者，还与人合著了Core JavaServer Faces。他是圣何塞州立大学计算机科学专业的教授，还是一名Java Champion，并经常在很多开发者大会上演讲。\nGary Cornell 在编程方面拥有20多年的写作和教育经验。他是Apress的创始人之一，编写了很多与开发相关的畅销书，是Jolt大奖的获奖者之一，还荣获过Visual Basic Magazine的读者选择奖。","summary":"Java经典图书最新版，前一版曾获得第13届Jolt生产效率大奖。\nJava平台的权威指南，，介绍了Java支持企业级开发和桌面应用开发的最强大特性。新版做了全面更新，体现了Java SE 7的变化，并将对Java SE 7新特性的完整描述融入对Java基本概念的精辟阐述中。\nJava核心技术 卷II：高级特性(第9版·英文版)(上、下册)专为做实际项目的程序员编写，是一本真实可信、不偏不倚且简单直接的Java教程，书中使用了全面测试过的代码示例来阐述关键的Java语言与库的特性，体现了最佳的编程实践。\nJava核心技术 卷II：高级特性(第9版·英文版)(上、下册)两位作者均是业内权威人物，有丰富的写作和实战经验。","price":" 119.00"},{"rating":{"max":10,"numRaters":11,"average":"8.6","min":0},"subtitle":"","author":["Deitel, Paul; Deitel, Harvey;"],"pubdate":"2011-3-7","tags":[{"count":5,"name":"Java","title":"Java"},{"count":3,"name":"计算机","title":"计算机"},{"count":3,"name":"编程","title":"编程"},{"count":2,"name":"计算机科学","title":"计算机科学"},{"count":2,"name":"教材","title":"教材"},{"count":1,"name":"Programming","title":"Programming"}],"origin_title":"Paul Deitel, Harvey Deitel","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s6873754.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"1536","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s6873754.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s6873754.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s6873754.jpg"},"alt":"https:\/\/book.douban.com\/subject\/6795773\/","id":"6795773","publisher":"Prentice Hall","isbn10":"0132575663","isbn13":"9780132575669","title":"Java How to Program (9th Edition)","url":"https:\/\/api.douban.com\/v2\/book\/6795773","alt_title":"Paul Deitel, Harvey Deitel","author_intro":"Paul J. Deitel, CEO and Chief Technical Officer of Deitel & Associates, Inc., is a graduate of MIT’s Sloan School of Management, where he studied Information Technology. He holds the Java Certified Programmer and Java Certified Developer certifications, and has been designated by Sun Microsystems as a Java Champion. Through Deitel & Associates, Inc., he has delivered Java, C, C++, C# and Visual Basic courses to industry clients, including IBM, Sun Microsystems, Dell, Lucent Technologies, Fidelity, NASA at the Kennedy Space Center, the National Severe Storm Laboratory, White Sands Missile Range, Rogue Wave Software, Boeing, Stratus, Cambridge Technology Partners, Open Environment Corporation, One Wave, Hyperion Software, Adra Systems, Entergy, CableData Systems, Nortel Networks, Puma, iRobot, Invensys and many more. He has also lectured on Java and C++ for the Boston Chapter of the Association for Computing Machinery. He and his father, Dr. Harvey M. Deitel, are the world’s best-selling programming language textbook authors.\nDr. Harvey M. Deitel, Chairman and Chief Strategy Officer of Deitel & Associates, Inc., has 45 years of academic and industry experience in the computer field. Dr. Deitel earned B.S. and M.S. degrees from MIT and a Ph.D. from Boston University. He has 20 years of college teaching experience, including earning tenure and serving as the Chairman of the Computer Science Department at Boston College before founding Deitel & Associates, Inc., with his son, Paul J. Deitel. He and Paul are the co-authors of several dozen books and multimedia packages and they are writing many more. With translations published in Japanese, German, Russian, Spanish, Traditional Chinese, Simplified Chinese, Korean, French, Polish, Italian, Portuguese, Greek, Urdu and Turkish, the Deitels’ texts have earned international recognition. Dr. Deitel has delivered hundreds of professional seminars to major corporations, academic institutions, government organizations and the military.","summary":"The Deitels’ groundbreaking How to Program series offers unparalleled breadth and depth of object-oriented programming concepts and intermediate-level topics for further study. Their Live Code Approach features thousands of lines of code in hundreds of complete working programs. This enables readers  to confirm that programs run as expected. Java How to Program (Early Objects) 9e contains an optional extensive OOD\/UML 2 case study on developing and implementing the software for an automated teller machine.This edition covers both Java SE7 and SE6.","price":"USD 131.00"},{"rating":{"max":10,"numRaters":2,"average":"0.0","min":0},"subtitle":"Advanced Features","author":["Cay S. Horstmann","Gary Cornell"],"pubdate":"2013-3-6","tags":[{"count":4,"name":"Java","title":"Java"},{"count":2,"name":"编程","title":"编程"},{"count":1,"name":"英文原版","title":"英文原版"},{"count":1,"name":"编程语言","title":"编程语言"},{"count":1,"name":"程序设计","title":"程序设计"},{"count":1,"name":"java;javase","title":"java;javase"},{"count":1,"name":"CoreJava","title":"CoreJava"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s26685446.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"1152","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s26685446.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s26685446.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s26685446.jpg"},"alt":"https:\/\/book.douban.com\/subject\/11723019\/","id":"11723019","publisher":"Prentice Hall","isbn10":"013708160X","isbn13":"9780137081608","title":"Core Java, Volume II (9th Edition)","url":"https:\/\/api.douban.com\/v2\/book\/11723019","alt_title":"","author_intro":"","summary":"Fully updated to reflect Java SE 7 language changes, Core Java(r), Volume II-Advanced Features, Ninth Edition, is the definitive guide to Java's most powerful features for enterprise and desktop application development. Designed for serious programmers, this reliable, unbiased, no-nonsense tutorial illuminates advanced Java language and library features with thoroughly tested code examples. As in previous editions, all code is easy to understand and displays modern best-practice solutions to the realworld challenges faced by professional developers. Volume II quickly brings you up-to-speed on key Java SE 7 enhancements, ranging from the new file I\/O API to improved concurrency utilities. All code examples are updated to reflect these enhancements. Complete descriptions of new language and platform features are highlighted and integrated with insightful explanations of advanced Java programming techniques. You'll learn all you need to build robust production software with * Streams, files, and regular expressions * XML * Networking * Database programming facilities * JNDI\/LDAP directory integration * Internationalization * Advanced Swing techniques * JavaBeans components * Web services * Advanced platform security features * Annotations * Distributed objects * Native methods, and more For detailed coverage of fundamental Java SE 7 features, including objects, classes, inheritance, interfaces, reflection, events, exceptions, graphics, Swing, generics, collections, concurrency, and debugging, look for Core Java(TM), Volume I-Fundamentals, Ninth Edition (ISBN-13: 978-0-13-708189-9).","price":"USD 59.99"},{"rating":{"max":10,"numRaters":3,"average":"0.0","min":0},"subtitle":"","author":["Schildt, Herbert"],"pubdate":"2013-9","tags":[{"count":4,"name":"Java","title":"Java"},{"count":2,"name":"计算机","title":"计算机"},{"count":1,"name":"编程语言","title":"编程语言"},{"count":1,"name":"编程","title":"编程"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s26560978.jpg","binding":"","translator":[],"catalog":"","pages":"1120","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s26560978.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s26560978.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s26560978.jpg"},"alt":"https:\/\/book.douban.com\/subject\/24132327\/","id":"24132327","publisher":"McGraw-Hill\/Osborne Media","isbn10":"0071808558","isbn13":"9780071808552","title":"Java the Complete Reference 9\/E","url":"https:\/\/api.douban.com\/v2\/book\/24132327","alt_title":"","author_intro":"","summary":"","price":"$ 67.80"},{"rating":{"max":10,"numRaters":8,"average":"0.0","min":0},"subtitle":"","author":["Ken Kousen"],"pubdate":"2017-8-25","tags":[{"count":11,"name":"Java","title":"Java"},{"count":3,"name":"计算机","title":"计算机"},{"count":3,"name":"编程","title":"编程"},{"count":1,"name":"软件开发","title":"软件开发"},{"count":1,"name":"软件工程","title":"软件工程"},{"count":1,"name":"英文版","title":"英文版"},{"count":1,"name":"编程语言","title":"编程语言"},{"count":1,"name":"java","title":"java"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29494238.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"304","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s29494238.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s29494238.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29494238.jpg"},"alt":"https:\/\/book.douban.com\/subject\/27088096\/","id":"27088096","publisher":"O'Reilly Media","isbn10":"149197317X","isbn13":"9781491973172","title":"Modern Java Recipes: Simple Solutions to Difficult Problems in Java 8 and 9","url":"https:\/\/api.douban.com\/v2\/book\/27088096","alt_title":"","author_intro":"I'm a software developer, speaker, and technical trainer based in Marlborough, CT. I'm president of my own company, Kousen IT, Inc., through which I mostly teach technical training courses in all areas related to Java, focusing especially on subjects like Android, Spring, Hibernate, Groovy, and Grails.\nI'm a regular speaker on the No Fluff, Just Stuff tour, where I give technical talks on topics as diverse as the Gradle build tool, building and testing Android applications, and managing your manager.\nI have a range of technical certifications, but don't do that much any more. I also have a lot of academic degrees, which include a BS in Mathematics and a BS in Mechanical Engineering from M.I.T., an MA and a Ph.D. in Aerospace Engineering from Princeton, and an MS in Computer Science from Rensselaer Polytechnic Institute. I'm also an adjunct professor at RPI in Hartford, CT, where I teach an occasional graduate class.","summary":"Need simple solutions to specific challenges with Java 8 and Java 9? This book of practical recipes provides a quick, easy reference for developers who prefer useful examples over detailed explanations. Modern Java Recipes shows you how to solve a wide range of problems using the newest features of Java.Learn functional programming with lambdas, method references, and streamsAdopt the new static and default methods in interfacesWork with the new set of functional interfaces added to the languageUse collectors and comparators to search, filter, and sort dataEmploy the new Optional type and use it correctlyUnderstand the new java.time package to handle Date and Time functionality, including time zone adjustmentsUse the Java Read-Eval-Print-Loop in Java 9Employ the new Jigsaw mechanism to modularize deployables","price":"USD 36.29"},{"rating":{"max":10,"numRaters":4,"average":"0.0","min":0},"subtitle":"2nd Edition","author":["Cay S. Horstmann"],"pubdate":"2017-10-2","tags":[{"count":7,"name":"Java","title":"Java"},{"count":3,"name":"编程语言","title":"编程语言"},{"count":2,"name":"计算机","title":"计算机"},{"count":1,"name":"软件工程","title":"软件工程"},{"count":1,"name":"计算机科学","title":"计算机科学"},{"count":1,"name":"编程","title":"编程"},{"count":1,"name":"java","title":"java"},{"count":1,"name":"P","title":"P"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29507554.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"560","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s29507554.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s29507554.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29507554.jpg"},"alt":"https:\/\/book.douban.com\/subject\/27102965\/","id":"27102965","publisher":"Addison-Wesley Professional","isbn10":"0134694724","isbn13":"9780134694726","title":"Core Java SE 9 for the Impatient","url":"https:\/\/api.douban.com\/v2\/book\/27102965","alt_title":"","author_intro":"","summary":"","price":"USD 49.99"},{"rating":{"max":10,"numRaters":1,"average":"0.0","min":0},"subtitle":"Solutions for Developers Using PL\/SQL and Java","author":["Bjarki Holm","John Carnell","Tomas Stubbs","Poornachandra Sarang","Kevin Mukhar","Sant Singh","Jaeda Goodman","Ben Marcotte","Mauricio Naranjo","Anand Raj","Mark Piermanini"],"pubdate":"2001-12","tags":[],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s4053595.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s4053595.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s4053595.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s4053595.jpg"},"alt":"https:\/\/book.douban.com\/subject\/4134300\/","id":"4134300","publisher":"Peer Information","isbn10":"1861006020","isbn13":"9781861006028","title":"Oracle 9i Java Programming","url":"https:\/\/api.douban.com\/v2\/book\/4134300","alt_title":"","author_intro":"","summary":"","price":"USD 49.99"},{"rating":{"max":10,"numRaters":6,"average":"0.0","min":0},"subtitle":"Java常见问题的简单解法","author":["[美]肯·寇森（Ken Kousen）"],"pubdate":"2018-8","tags":[{"count":18,"name":"Java","title":"Java"},{"count":5,"name":"计算机","title":"计算机"},{"count":3,"name":"计算科学","title":"计算科学"},{"count":3,"name":"技术","title":"技术"},{"count":2,"name":"java","title":"java"},{"count":1,"name":"未资源","title":"未资源"},{"count":1,"name":"图灵","title":"图灵"},{"count":1,"name":"图书馆k","title":"图书馆k"}],"origin_title":"Modern Java Recipes: Simple Solutions to Difficult Problems in Java 8 and 9","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29827740.jpg","binding":"平装","translator":["蒋楠"],"catalog":"译者序　　ix\n序　　xi\n前言　　xiii\n第1章　基础知识　　1\n1.1　lambda 表达式　　2\n1.2　方法引用　　5\n1.3　构造函数引用　　8\n1.4　函数式接口　　12\n1.5　接口中的默认方法　　14\n1.6　接口中的静态方法　　17\n第2章　java.util.function 包　　20\n2.1　Consumer 接口　　20\n2.2　Supplier 接口　　22\n2.3　Predicate 接口　　25\n2.4　Function 接口　　28\n第3章　流式操作　　31\n3.1　流的创建　　31\n3.2　装箱流　　35\n3.3　利用reduce 方法实现归约操作　　36\n3.4　利用reduce 方法校验排序　　44\n3.5　利用peek 方法对流进行调试　　45\n3.6　字符串与流之间的转换　　47\n3.7　获取元素数量　　50\n3.8　汇总统计　　52\n3.9　查找流的第一个元素　　54\n3.10　使用anyMatch、allMatch 与noneMatch 方法　　58\n3.11　使用flatMap 与map 方法　　60\n3.12　流的拼接　　63\n3.13　惰性流　　66\n第4章　比较器与收集器　　69\n4.1　利用比较器实现排序　　69\n4.2　将流转换为集合　　72\n4.3　将线性集合添加到映射　　75\n4.4　对映射排序　　77\n4.5　分区与分组　　79\n4.6　下游收集器　　81\n4.7　查找最大值和最小值　　83\n4.8　创建不可变集合　　85\n4.9　实现Collector 接口　　87\n第5章　流式操作、lambda 表达式与方法引用的相关问题　　91\n5.1　java.util.Objects 类　　91\n5.2　lambda 表达式与效果等同于final 的变量　　93\n5.3　随机数流　　96\n5.4　Map 接口的默认方法　　97\n5.5　默认方法冲突　　101\n5.6　集合与映射的迭代　　103\n5.7　利用Supplier 创建日志消息　　105\n5.8　闭包复合　　107\n5.9　利用提取的方法实现异常处理　　110\n5.10　受检异常与lambda 表达式　　112\n5.11　泛型异常包装器的应用　　114\n第6章　Optional 类　　117\n6.1　Optional 的创建　　118\n6.2　从Optional 中检索值　　120\n6.3　getter 和setter 方法中的Optional　　122\n6.4　Optional.flatMap 与Optional.map 方法　　124\n6.5　Optional 的映射　　127\n第7章　文件I\/O　　131\n7.1　文件处理　　132\n7.2　以流的形式检索文件　　134\n7.3　文件系统的遍历　　135\n7.4　文件系统的搜索　　137\n第8章　java.time 包　　139\n8.1　Date-Time API 中的基本类　　140\n8.2　根据现有实例创建日期和时间　　143\n8.3　调节器与查询　　147\n8.4　将java.util.Date 转换为java.time.LocalDate　　152\n8.5　解析与格式化　　155\n8.6　查找具有非整数小时偏移量的时区　　158\n8.7　根据UTC 偏移量查找地区名　　160\n8.8　获取事件之间的时间　　162\n第9章　并行与并发　　165\n9.1　将顺序流转换为并行流　　166\n9.2　并行流的优点　　169\n9.3　调整线程池大小　　173\n9.4　Future 接口　　175\n9.5　完成CompletableFuture　　178\n9.6　多个CompletableFuture 之间的协调（第1 部分）　　181\n9.7　多个CompletableFuture 之间的协调（第2 部分）　　186\n第10章　Java 9 新特性　　193\n10.1　Jigsaw 中的模块　　194\n10.2　接口中的私有方法　　198\n10.3　创建不可变集合　　200\n10.4　新增的Stream 方法　　204\n10.5　下游收集器：filtering 与flatMapping　　207\n10.6　新增的Optional 方法　　210\n10.7　日期范围　　212\n附录A　泛型与Java 8　　215\n作者简介　　230\n封面介绍　　230","pages":"248","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29827740.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29827740.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29827740.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30282531\/","id":"30282531","publisher":"人民邮电出版社","isbn10":"7115488800","isbn13":"9787115488800","title":"Java攻略","url":"https:\/\/api.douban.com\/v2\/book\/30282531","alt_title":"Modern Java Recipes: Simple Solutions to Difficult Problems in Java 8 and 9","author_intro":"[美]肯·寇森\n知名的技术培训师、软件开发者与会议演讲者，对Java以及Android、Spring、Hibernate\/JPA、Groovy、Grails、Gradle等开源软件颇有研究。2013和2016年荣膺JavaOne Rock Star大奖。\n具有深厚的学术背景，拥有麻省理工学院机械工程与数学学士学位、普林斯顿大学航空工程硕士与博士学位，并于伦斯勒理工学院取得计算机科学硕士学位。\n目前担任Kousen IT公司总裁。","summary":"本书旨在成为让读者可以迅速查找到Java 8和Java 9相关特性介绍的指南，并给出可以用于实际开发的示例。书中范例提炼自开发人员日常工作时遇到的问题，介绍了如何利用Java 8和Java 9的新特性解决这些问题，从而以更自然的方式让开发人员对这门语言的变化了然于心。","series":{"id":"46192","title":"图灵程序设计丛书·Java系列"},"price":"69.00元"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["De Java-Suikerindustrie, Proefstation Vo"],"pubdate":"","tags":[],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s14643993.jpg","binding":"","translator":[],"catalog":"","pages":"508","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s14643993.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s14643993.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s14643993.jpg"},"alt":"https:\/\/book.douban.com\/subject\/13552525\/","id":"13552525","publisher":"","isbn10":"1149462248","isbn13":"9781149462249","title":"Mededeelingen Van Het Proefstation Voor de Java-Suikerindustrie Volume Deel.9 1919","url":"https:\/\/api.douban.com\/v2\/book\/13552525","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["(美)何姆等著、康博译"],"pubdate":"2002-8","tags":[{"count":1,"name":"JAVA","title":"JAVA"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s1306505.jpg","binding":"平装","translator":["何姆"],"catalog":"","pages":"757","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s1306505.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s1306505.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s1306505.jpg"},"alt":"https:\/\/book.douban.com\/subject\/1240990\/","id":"1240990","publisher":"清华大学出版社","isbn10":"7302056838","isbn13":"9787302056836","title":"Oracle 9i Java程序设计","url":"https:\/\/api.douban.com\/v2\/book\/1240990","alt_title":"","author_intro":"","summary":"本书主要介绍Java在Oracle 9i数据库中的实际使用。具体介绍了Java消息处理和图像生成工具，协同使用PL\/SQL和Java 的方法，操作系统资源的使用。","price":"88.0"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Monica Beckwith"],"pubdate":"2019-8-19","tags":[{"count":1,"name":"软件工程","title":"软件工程"},{"count":1,"name":"计算机科学","title":"计算机科学"},{"count":1,"name":"Java","title":"Java"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s33322655.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"672","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s33322655.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s33322655.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s33322655.jpg"},"alt":"https:\/\/book.douban.com\/subject\/34466036\/","id":"34466036","publisher":"Addison-Wesley Professional","isbn10":"0134659872","isbn13":"9780134659879","title":"Inside Java SE 9 (Developer's Library)","url":"https:\/\/api.douban.com\/v2\/book\/34466036","alt_title":"","author_intro":"Monica Beckwith is an independent performance consultant optimizing customer applications for server class systems running the Java Virtual Machine. She has worked with Java HotSpot VM optimizing the JIT Compiler, the generated code, the JVM heuristics and garbage collection and collectors. Monica led Oracle’s Garbage First Garbage Collector performance team and was named a JavaOne Rock Star.","summary":"Inside Java SE 9  shows experienced programmers exactly how to take full advantage of the highly anticipated new features in Java SE 9. Featuring sample code that reflects real-world use cases, this practical book by JavaOne Rockstar Monica Beckwith explains the key features and functions of Java SE 9 and demonstrates the benefits of utilizing them.\nBeckwith shows how Java’s new module system (“Project Jigsaw”) enables working developers to build scalable solutions that are more secure and maintainable; and deliver exceptional performance. She reviews Java SE 9 changes in areas ranging from data types to performance optimizations; showing how to make the most of Java’s new tools and facilities. For example, you’ll learn how to:\nCreate microbenchmarks using the microbenchmarking harness\nCreate a modular jar\nTake advantage of Java’s new logging interface\nTake full advantage of the new default GC (garbage collection)\nUse sjavac, segmented code caches, and contended object monitors\nCreate, compile and profile simple applications using the Netbeans IDE, and Oracle Developer Studio Performance Analyzer And much more\nIf you’re moving to Java SE 9 -- or want to know why you should -- Inside Java SE 9 is the book you’ve been waiting for.","price":"USD 49.99"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":[],"pubdate":"","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","binding":"","translator":[],"catalog":"","pages":"0","images":{"small":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","large":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","medium":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif"},"alt":"https:\/\/book.douban.com\/subject\/11923288\/","id":"11923288","publisher":"Addison Wesley Publishing Company","isbn10":"0321206770","isbn13":"9780321206770","title":"Prin Databs Sys W\/Int& Java& Oracle9i Prog Pk","url":"https:\/\/api.douban.com\/v2\/book\/11923288","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["VANDERLINDEN"],"pubdate":"","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","large":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","medium":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif"},"alt":"https:\/\/book.douban.com\/subject\/11693441\/","id":"11693441","publisher":"","isbn10":"0131471279","isbn13":"9780131471276","title":"JUST JAVA 2 & ORACLE 9I MOD SYS ANALYSIS PK","url":"https:\/\/api.douban.com\/v2\/book\/11693441","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":[],"pubdate":"","tags":[],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s23480460.jpg","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s23480460.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s23480460.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s23480460.jpg"},"alt":"https:\/\/book.douban.com\/subject\/20300117\/","id":"20300117","publisher":"","isbn10":"7894470007","isbn13":"9787894470003","title":"2011下半年9月计算机等级考试二级Access、C++、Java模拟软件","url":"https:\/\/api.douban.com\/v2\/book\/20300117","alt_title":"","author_intro":"","summary":"2011下半年9月计算机等级考试二级Access、C++、Java模拟软件，ISBN：9787894470003，作者：","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["(美)保罗·戴特尔\/\/哈维·戴特尔"],"pubdate":"2017-06-01","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","binding":"","translator":[],"catalog":"","pages":"1121","images":{"small":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","large":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","medium":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif"},"alt":"https:\/\/book.douban.com\/subject\/27085421\/","id":"27085421","publisher":"电子工业","isbn10":"7121317605","isbn13":"9787121317606","title":"Java大学教程(第9版英文版)\/国外计算机科学教材系列","url":"https:\/\/api.douban.com\/v2\/book\/27085421","alt_title":"","author_intro":"","summary":"","price":"168.0"},{"rating":{"max":10,"numRaters":2,"average":"0.0","min":0},"subtitle":"","author":["林信良"],"pubdate":"2018-6-1","tags":[{"count":4,"name":"Java","title":"Java"},{"count":3,"name":"计算机","title":"计算机"},{"count":1,"name":"源码","title":"源码"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s30020160.jpg","binding":"平装","translator":[],"catalog":"Chapter 1 Java平台概论 1\n1.1 Java不只是语言 2\n1.1.1 前世今生 2\n1.1.2 三大平台 5\n1.1.3 JCP与JSR 6\n1.1.4 Oracle JDK与OpenJDK 7\n1.1.5 建议的学习路径 8\n1.2 JVM\/JRE\/JDK 12\n1.2.1 什么是JVM 12\n1.2.2 区分JRE与JDK 14\n1.2.3 下载、安装JDK 15\n1.2.4 认识JDK安装内容 18\n1.3 重点复习 19\nChapter 2 从JDK到IDE 21\n2.1 从Hello World开始 22\n2.1.1 撰写Java原始码 22\n2.1.2 PATH是什么 24\n2.1.3 JVM(java)与CLASSPATH 27\n2.1.4 编译程序(javac)与\nCLASSPATH 29\n2.2 管理原始码与位码文档 30\n2.2.1 编译程序(javac)与\nSOURCEPATH 30\n2.2.2 使用package管理类 32\n2.2.3 使用import偷懒 34\n2.3 初识模块平台系统 36\n2.3.1 JVM(java)与module-\npath 37\n2.3.2 编译程序(javac)与\nmodule-path 39\n2.3.3 编译程序(javac)与\nmodule-source-path 40\n2.4 使用IDE 41\n2.4.1 IDE项目管理基础 41\n2.4.2 使用了哪个JRE 47\n2.4.3 类文档版本 49\n2.5 重点复习 51\nChapter 3 基础语法 53\n3.1 类型、变量与运算符 54\n3.1.1 类型 54\n3.1.2 变量 57\n3.1.3 运算符 60\n3.1.4 类型转换 65\n3.2 流程控制 68\n3.2.1 if...else条件式 68\n3.2.2 switch条件式 70\n3.2.3 for循环 72\n3.2.4 while循环 73\n3.2.5 break、continue 74\n3.3 重点复习 76\n3.4 课后练习 77\nChapter 4 认识对象 78\n4.1 类与对象 79\n4.1.1 定义类 79\n4.1.2 使用标准类 81\n4.1.3 对象指定与相等性 84\n4.2 基本类型打包器 86\n4.2.1 打包基本类型 86\n4.2.2 自动装箱、拆箱 87\n4.2.3 自动装箱、拆箱的内幕 88\n4.3 数组对象 90\n4.3.1 数组基础 91\n4.3.2 操作数组对象 93\n4.3.3 数组复制 98\n4.4 字符串对象 100\n4.4.1 字符串基础 101\n4.4.2 字符串特性 103\n4.4.3 字符串编码 107\n4.5 查询Java API文件 108\n4.6 重点复习 113\n4.7 课后练习 114\nChapter 5 对象封装 116\n5.1 何谓封装 117\n5.1.1 封装对象初始流程 117\n5.1.2 封装对象操作流程 119\n5.1.3 封装对象内部数据 121\n5.2 类语法细节 123\n5.2.1 public权限修饰 123\n5.2.2 关于构造函数 125\n5.2.3 构造函数与方法重载 126\n5.2.4 使用this 128\n5.2.5 static类成员 130\n5.2.6 不定长度自变量 135\n5.2.7 内部类 136\n5.2.8 传值调用 138\n5.3 重点复习 140\n5.4 课后练习 141\nChapter 6 继承与多态 142\n6.1 何谓继承 143\n6.1.1 继承共同行为 143\n6.1.2 多态与is-a 147\n6.1.3 重新定义行为 150\n6.1.4 抽象方法、抽象类 153\n6.2 继承语法细节 154\n6.2.1 protected成员 154\n6.2.2 重新定义的细节 156\n6.2.3 再看构造函数 157\n6.2.4 再看final关键字 159\n6.2.5 java.lang.Object 160\n6.2.6 关于垃圾收集 165\n6.2.7 再看抽象类 167\n6.3 重点复习 169\n6.4 课后练习 170\nChapter 7 接口与多态 171\n7.1 何谓接口 172\n7.1.1 接口定义行为 172\n7.1.2 行为的多态 175\n7.1.3 解决需求变化 178\n7.2 接口语法细节 183\n7.2.1 接口的默认 183\n7.2.2 匿名内部类 187\n7.2.3 使用enum枚举常数 190\n7.3 重点复习 192\n7.4 课后练习 193\nChapter 8 异常处理 194\n8.1 语法与继承架构 195\n8.1.1 使用try、catch 195\n8.1.2 异常继承架构 197\n8.1.3 要抓还是要抛 202\n8.1.4 贴心还是造成麻烦 205\n8.1.5 认识堆栈追踪 206\n8.1.6 关于assert 210\n8.2 异常与资源管理 213\n8.2.1 使用finally 213\n8.2.2 自动尝试关闭资源 215\n8.2.3 java.lang.AutoCloseable\n接口 217\n8.3 重点复习 221\n8.4 课后练习 222\nChapter 9 Collection与Map 223\n9.1 使用Collection收集对象 224\n9.1.1 认识Collection架构 224\n9.1.2 具有索引的List 225\n9.1.3 内容不重复的Set 228\n9.1.4 支持队列操作的Queue 232\n9.1.5 使用泛型 234\n9.1.6 简介Lambda表达式 238\n9.1.7 Interable与\nIterator 240\n9.1.8 Comparable与\nComparator 243\n9.2 键值对应的Map 248\n9.2.1 常用Map操作类 249\n9.2.2 访问Map键值 252\n9.3 不可变的Collection\n与Map 255\n9.3.1 浅谈不可变特性 255\n9.3.2 Collections的\nunmodifiableXXX()\n方法 256\n9.3.3 List、Set、Map的of()\n方法 258\n9.4 重点复习 260\n9.5 课后练习 262\nChapter 10 输入\/输出 263\n10.1 InputStream与\nOutputStream 264\n10.1.1 串流设计的概念 264\n10.1.2 串流继承架构 266\n10.1.3 串流处理装饰器 269\n10.2 字符处理类 273\n10.2.1 Reader与Writer继承\n架构 274\n10.2.2 字符处理装饰器 275\n10.3 重点复习 277\n10.4 课后练习 278\nChapter 11 线程与并行API 279\n11.1 线程 280\n11.1.1 线程简介 280\n11.1.2 Thread与Runnable 282\n11.1.3 线程生命周期 284\n11.1.4 关于ThreadGroup 290\n11.1.5 synchronized与\nvolatile 292\n11.1.6 等待与通知 301\n11.2 并行API 305\n11.2.1 Lock、ReadWriteLock与\nCondition 305\n11.2.2 使用Executor 313\n11.2.3 并行Collection简介 323\n11.3 重点复习 326\n11.4 课后练习 327\nChapter 12 Lambda 328\n12.1 认识Lambda语法 329\n12.1.1 Lambda语法概览 329\n12.1.2 Lambda表达式与函数\n接口 332\n12.1.3 Lambda遇上this与\nfinal 334\n12.1.4 方法与构造函数参考 336\n12.1.5 接口默认方法 338\n12.2 Functional与Stream API 343\n12.2.1 使用Optional取代\nnull 343\n12.2.2 标准API的函数接口 345\n12.2.3 使用Stream进行管道\n操作 348\n12.2.4 进行Stream的reduce\n与collect 351\n12.2.5 关于flatMap()方法 356\n12.2.6 Stream相关API 359\n12.2.7 JDK9 Optional与\nStream增强 360\n12.3 Lambda、平行化与异步\n处理 362\n12.3.1 Stream与平行化 362\n12.3.2 Arrays与平行化 366\n12.3.3 CompletableFuture\n非同步处理 367\n12.3.4 JDK9 CompletableFuture\n增强 369\n12.4 重点复习 370\n12.5 课后练习 371\nChapter 13 时间与日期 372\n13.1 认识时间与日期 373\n13.1.1 时间的度量 373\n13.1.2 年历简介 374\n13.1.3 认识时区 375\n13.2 认识Date与Calendar 376\n13.2.1 时间轴上瞬间的Date 376\n13.2.2 格式化时间日期的\nDateFormat 377\n13.2.3 处理时间日期的\nCalendar 379\n13.2.4 设定TimeZone 382\n13.3 新时间日期API 383\n13.3.1 机器时间观点的API 383\n13.3.2 人类时间观点的API 385\n13.3.3 对时间的运算 387\n13.3.4 年历系统设计 389\n13.4 重点复习 390\n13.5 课后练习 391\nChapter 14 NIO与NIO2 393\n14.1 认识NIO 394\n14.1.1 NIO概述 394\n14.1.2 Channel架构与操作 395\n14.1.3 Buffer架构与操作 396\n14.2 NIO2文件系统 398\n14.2.1 NIO2架构 398\n14.2.2 操作路径 399\n14.2.3 属性读取与设定 401\n14.2.4 操作文档与目录 404\n14.2.5 读取、访问目录 406\n14.2.6 过滤、搜索文档 410\n14.3 重点复习 412\n14.4 课后练习 413\nChapter 15 通用API 414\n15.1 日志 415\n15.1.1 日志API简介 415\n15.1.2 指定日志层级 417\n15.1.3 使用Handler与\nFormatter 419\n15.1.4 自定义Handler、Formatter\n与Filter 420\n15.1.5 使用logging.\nproperties 422\n15.2 国际化基础 423\n15.2.1 使用ResourceBundle 423\n15.2.2 使用Locale 424\n15.3 规则表示式 426\n15.3.1 规则表示式简介 426\n15.3.2 Pattern与Matcher 433\n15.4 处理数字 435\n15.4.1 使用BigInteger 435\n15.4.2 使用BigDecimal 437\n15.4.3 数字的格式化 439\n15.5 再谈堆栈追踪 441\n15.5.1 获取\nStackTraceElement 441\n15.5.2 JDK9的Stack-\nWalking API 443\n15.6 重点复习 447\n15.7 课后练习 448\nChapter 16 整合数据库 449\n16.1 JDBC入门 450\n16.1.1 JDBC简介 450\n16.1.2 连接数据库 454\n16.1.3 使用Statement、\nResultSet 459\n16.1.4 使用PreparedStatement、\nCallableStatement 464\n16.2 JDBC进阶 468\n16.2.1 使用DataSource取得\n联机 468\n16.2.2 使用ResultSet卷动、\n更新数据 471\n16.2.3 批次更新 473\n16.2.4 Blob与Clob 474\n16.2.5 交易简介 474\n16.2.6 metadata简介 481\n16.2.7 RowSet简介 484\n16.3 重点复习 486\n16.4 课后练习 487\nChapter 17 反射与类加载器 489\n17.1 运用反射 490\n17.1.1 Class与.class文档 490\n17.1.2 使用Class.\nforName() 492\n17.1.3 从Class获得信息 494\n17.1.4 从Class建立对象 496\n17.1.5 操作对象方法与成员 499\n17.1.6 动态代理 501\n17.1.7 当反射遇上模块 505\n17.1.8 使用ServiceLoader 511\n17.2 了解类加载器 513\n17.2.1 JDK9类加载器层级 513\n17.2.2 建立ClassLoader\n实例 516\n17.3 重点复习 517\n17.4 课后练习 519\nChapter 18 自定义泛型、枚举与注释 520\n18.1 自定义泛型 521\n18.1.1 使用extends与? 521\n18.1.2 使用super与? 525\n18.2 自定义枚举 528\n18.2.1 了解java.lang.Enum类 528\n18.2.2 enum高级运用 531\n18.3 关于注释 536\n18.3.1 常用标准注释 536\n18.3.2 自定义注释类型 540\n18.3.3 执行时期读取注释信息 545\n18.4 重点复习 548\n18.5 课后练习 549\nChapter 19 深入模块化 550\n19.1 运用模块 551\n19.1.1 模块的种类 551\n19.1.2 requires、exports与\nopens细节 554\n19.1.3 修补模块 557\n19.1.4 放宽模块封装与依赖 558\n19.2 模块API 560\n19.2.1 使用Module 560\n19.2.2 使用\nModuleDescriptor 562\n19.2.3 浅谈ModuleLayer 562\n19.3 打包模块 564\n19.3.1 使用jar打包 564\n19.3.2 使用jmod打包 566\n19.3.3 使用jlink建立执行时期\n映像 568\n19.4 重点复习 569\n19.5 课后练习 570\nAppendix 571\nA.1 项目环境配置 572\nA.2 打开案例 572\nJava SE 9 新功能索引\nJava SE 9后的特性版本时间轴变动 15\nJDK 9文档实体布局变动 18\n初探模块平台系统 36\njavac新增-release参数 50\n支持Unicode 8.0 54\n内建jshell 56\nJava API文件支持搜索功能 112\nStackTraceElement新增方法 207\nTry-with-resources语法改进 217\n定义匿名类别时的泛型语法改进 239\nList、Set、Map新增of( )方法 258\n接口支持定义private方法 340\nCollectors新增filtering( )方法 356\nCollectors新增flatMapping( )方法 359\nOptional与Stream增强 360\nCompletableFuture增强 369\n支持UTF-8编码的.properities文件 425\nStack-Walking API 443\n反射与类加载器机制 490\n@Deprecated增强 537\nElementType新增MODULE 545\n深入模块化 551","pages":"588","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s30020160.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s30020160.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s30020160.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30483092\/","id":"30483092","publisher":"清华大学出版社","isbn10":"7302501181","isbn13":"9787302501183","title":"Java JDK 9学习笔记","url":"https:\/\/api.douban.com\/v2\/book\/30483092","alt_title":"","author_intro":"作者：林信良\n林信良（网名：良葛格），毕业于台湾大学电机工程学系。擅长技术写作、翻译与教育培训。喜好研究程序语言、框架、社群，从中学习设计、典范及文化，并利用闲暇之余记录所学技术，涵盖C\/C++、Java、Ruby\/Rails、Python、JavaScript、Haskell、OpenSCAD等领域。目前出版的著作有《JSP & Servlet学习笔记（第2版）》《Spring技术手册》《Java JDK 8 学习笔记》等，译作有《Ajax实战手册》《jQuery实战手册（第2版）》。","summary":"是作者多年来教学实践经验的总结，汇集了学员在学习课程或认证考试时遇到的概念、操作、应用等问题及解决方案；\n 针对Java SE 9新功能全面版，无论章节架构还是范例程序代码，都做了重新编写与全面翻新；\n 详细介绍了Java 9模块化后，JVM、JRE、Java SE API、JDK与IDE之间的对照关系；\n 从Java SE API的源代码分析，了解各种语法在Java SE API中的具体应用\n 提供丰富全面的Lab项目范例操作文档，方便读者掌握练习重点；\n 将IDE操作纳入教学内容，使读者能与实践结合；\n 提供资源下载：各章NetBeans范例项目、各章Lab的NetBeans项目、教学PPT.","price":"98"},{"rating":{"max":10,"numRaters":5,"average":"0.0","min":0},"subtitle":"","author":["【美】Cay S. Horstmann"],"pubdate":"2018-10","tags":[{"count":2,"name":"akb","title":"akb"},{"count":1,"name":"operartorhs","title":"operartorhs"},{"count":1,"name":"Java","title":"Java"},{"count":1,"name":"CS","title":"CS"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29902153.jpg","binding":"","translator":["杨谦 等"],"catalog":"第1章  基本的编程结构  1\n1.1  第一个程序  2\n1.1.1  \"Hello,World!\"程序解析  2\n1.1.2  编译与运行Java程序  3\n1.1.3  方法调用  5\n1.1.4  JShell  7\n1.2  基本类型  11\n1.2.1  有符号整型  11\n1.2.2  浮点类型  12\n1.2.3  char型  13\n1.2.4  布尔型  14\n1.3  变量  14\n1.3.1  变量的声明  14\n1.3.2  名称  14\n1.3.3  初始化  15\n1.3.4  常量  15\n1.4  算术操作  17\n1.4.1  赋值  18\n1.4.2  基本运算  18\n1.4.3  数学方法  20\n1.4.4  数字类型转换  21\n1.4.5  关系操作符和逻辑操作符  22\n1.4.6  大数  24\n1.5  字符串  24\n1.5.1  字符串的连接  25\n1.5.2  子字符串  26\n1.5.3  字符串比较  26\n1.5.4  数字与字符串转换  28\n1.5.5  String类API  29\n1.5.6  编码点和编码单元  31\n1.6  输入与输出  33\n1.6.1  读取输入  33\n1.6.2  格式化输出  35\n1.7  控制流  37\n1.7.1  分支  37\n1.7.2  循环  39\n1.7.3  跳出循环与继续循环  41\n1.7.4  局部变量作用域  43\n1.8  数组和数组列表  44\n1.8.1  使用数组  44\n1.8.2  构造数组  45\n1.8.3  数组列表  47\n1.8.4  基本类型包装类  48\n1.8.5  增强的for循环  48\n1.8.6  数组与数组列表的复制  49\n1.8.7  数组算法  50\n1.8.8  命令行参数  51\n1.8.9  多维数组  52\n1.9  功能分解  55\n1.9.1  静态方法的声明与调用  55\n1.9.2  数组参数与返回值  55\n1.9.3  可变参数  56\n练习  57\n第2章  面向对象编程  61\n2.1  使用对象  62\n2.1.1  访问器方法和修改器方法  64\n2.1.2  对象引用  65\n2.2  实现类  67\n2.2.1  实例变量  67\n2.2.2  方法头  67\n2.2.3  方法体  68\n2.2.4  实例方法调用  69\n2.2.5  this引用  69\n2.2.6  值调用  70\n2.3  构造对象  72\n2.3.1  实现构造函数  72\n2.3.2  重载  73\n2.3.3  调用另一个构造函数  74\n2.3.4  默认初始化  74\n2.3.5  实例变量的初始化  75\n2.3.6  final实例变量  76\n2.3.7  无参构造函数  76\n2.4  静态变量和方法  77\n2.4.1  静态变量  77\n2.4.2  静态常量  78\n2.4.3  静态初始块  79\n2.4.4  静态方法  80\n2.4.5  工厂方法  81\n2.5  包  82\n2.5.1  包的声明  82\n2.5.2  jar命令  83\n2.5.3  类路径  84\n2.5.4  包访问权限  86\n2.5.5  导入类  87\n2.5.6  静态导入  88\n2.6  嵌套类  89\n2.6.1  静态嵌套类  89\n2.6.2  内部类  91\n2.6.3  内部类的特殊语法  93\n2.7  文档注释  95\n2.7.1  插入注释  95\n2.7.2  类注释  96\n2.7.3  方法注释  97\n2.7.4  变量注释  97\n2.7.5  通用注释  98\n2.7.6  链接  98\n2.7.7  包、模块和概述注释  99\n2.7.8  注释的提取  99\n练习  100\n第3章  接口和lambda表达式  105\n3.1  接口  106\n3.1.1  声明接口  106\n3.1.2  实现接口  107\n3.1.3  转换为接口类型  109\n3.1.4  强制类型转换和instanceof操作符  109\n3.1.5  继承接口  110\n3.1.6  实现多个接口  111\n3.1.7  常量  111\n3.2  静态方法、默认方法和私有方法  112\n3.2.1  静态方法  112\n3.2.2  默认方法  112\n3.2.3  解决默认方法冲突的问题  113\n3.2.4  私有方法  115\n3.3  接口示例  115\n3.3.1  Comparable接口  115\n3.3.2  Comparator接口  117\n3.3.3  Runnable接口  118\n3.3.4  UI回调  119\n3.4  lambda表达式  120\n3.4.1  lambda表达式语法  121\n3.4.2  函数式接口  122\n3.5  方法引用和构造函数引用  123\n3.5.1  方法引用  123\n3.5.2  构造函数引用  125\n3.6  使用lambda表达式  126\n3.6.1  实现延迟执行  126\n3.6.2  选择函数式接口  127\n3.6.3  实现自己的函数式接口  129\n3.7  lambda表达式和变量作用域  130\n3.7.1  lambda表达式的作用域  130\n3.7.2  访问来自闭合作用域的变量  131\n3.8  高阶函数  133\n3.8.1  返回函数的方法  134\n3.8.2  修改函数的方法  134\n3.8.3  Comparator方法  135\n3.9  局部类和匿名类  136\n3.9.1  局部类  136\n3.9.2  匿名类  137\n练习  138\n第4章  继承与反射  143\n4.1  继承一个类  144\n4.1.1  父类与子类  144\n4.1.2  定义和继承子类方法  145\n4.1.3  方法覆盖  145\n4.1.4  子类的构造  147\n4.1.5  父类赋值  147\n4.1.6  转换  148\n4.1.7  final方法和类  149\n4.1.8  抽象方法和类  149\n4.1.9  受保护访问  150\n4.1.10  匿名子类  151\n4.1.11  继承和默认方法  152\n4.1.12  带super的方法表达式  153\n4.2  Object：终极父类  153\n4.2.1  toString方法  154\n4.2.2  equals方法  156\n4.2.3  hashCode方法  159\n4.2.4  克隆对象  160\n4.3  枚举  163\n4.3.1  枚举方法  164\n4.3.2  构造函数、方法和域  165\n4.3.3  实例的实现体  165\n4.3.4  静态成员  166\n4.3.5  switch枚举对象  167\n4.4  运行时类型信息和资源  168\n4.4.1  Class类  168\n4.4.2  资源加载  172\n4.4.3  类加载器  172\n4.4.4  上下文类加载器  174\n4.4.5  服务加载器  176\n4.5  反射  178\n4.5.1  枚举类成员  178\n4.5.2  对象检查  179\n4.5.3  方法调用  180\n4.5.4  对象构造  181\n4.5.5  JavaBeans  182\n4.5.6  使用数组  183\n4.5.7  代理  185\n练习  187\n第5章  异常、断言和日志处理  191\n5.1  异常处理  192\n5.1.1  异常抛出  192\n5.1.2  异常继承层次  193\n5.1.3  已检查异常的声明  195\n5.1.4  异常捕获  196\n5.1.5  try-with-resources语句  197\n5.1.6  finally子句  199\n5.1.7  异常重抛和链接  200\n5.1.8  未捕获的异常和堆栈踪迹  202\n5.1.9  Objects.requireNonNull方法  203\n5.2  断言  204\n5.2.1  使用断言  205\n5.2.2  启用和禁用断言  205\n5.3  记录日志  206\n5.3.1  采用日志记录器  206\n5.3.2  日志记录器  207\n5.3.3  日志级别  207\n5.3.4  其他日志记录方法  208\n5.3.5  日志记录的配置项  210\n5.3.6  日志处理器  211\n5.3.7  过滤器和格式化器  214\n练习  215\n第6章  泛型编程  219\n6.1  泛型类  220\n6.2  泛型方法  221\n6.3  类型限定  222\n6.4  类型变异和通配符  223\n6.4.1  子类型通配符  224\n6.4.2  父类型通配符  225\n6.4.3  带类型变量的通配符  226\n6.4.4  无限定通配符  228\n6.4.5  通配符捕获  228\n6.5  Java虚拟机中的泛型  229\n6.5.1  类型擦除  229\n6.5.2  转换插入  230\n6.5.3  桥方法  230\n6.6  泛型约束  232\n6.6.1  无基本类型参数  232\n6.6.2  所有类型在运行时都是原始的  233\n6.6.3  不能实例化类型变量  234\n6.6.4  不能构造参数化类型的数组  236\n6.6.5  静态上下文中的类类型变量不是有效的  237\n6.6.6  类型擦除后的方法可能不冲突  238\n6.6.7  异常与泛型  239\n6.7  反射与泛型  240\n6.7.1  Class<T>类  240\n6.7.2  虚拟机中的泛型类型信息  242\n练习  243\n第7章  集合  249\n7.1  集合框架概要  249\n7.2  迭代器  254\n7.3  set  256\n7.4  map  257\n7.5  其他集合  261\n7.5.1  Properties  261\n7.5.2  位组  262\n7.5.3  枚举set和枚举map  264\n7.5.4  栈、队列、双端队列、优先级队列  264\n7.5.5  弱哈希映射表  266\n7.6  视图  266\n7.6.1  小集合  267\n7.6.2  范围  268\n7.6.3  不可修改的视图  268\n练习  269\n第8章  Stream  273\n8.1  从迭代到Stream操作  274\n8.2  创建Stream  275\n8.3  filter、map和flatMap方法  277\n8.4  提取子流和组合流  279\n8.5  其他流转换  280\n8.6  简单归约  281\n8.7  Optional类型  282\n8.7.1  如何使用Optional类型值  282\n8.7.2  如何不使用Optional类型值  284\n8.7.3  创建Optional类型值  284\n8.7.4  使用flatMap来组合可选值函数  285\n8.7.5  将Optional转变为流  286\n8.8  收集结果  287\n8.9  将结果收集到map中  289\n8.10  分组和分片  290\n8.11  下游收集器  291\n8.12  归约操作  294\n8.13  基本类型流  296\n8.14  并行流  297\n练习  300\n第9章  输入与输出处理  305\n9.1  输入\/输出流、Reader和Writer  306\n9.1.1  获取流对象  306\n9.1.2  读取字节  307\n9.1.3  写字节  308\n9.1.4  字符编码  308\n9.1.5  文本输入  311\n9.1.6  文本输出  313\n9.1.7  读\/写二进制数据  314\n9.1.8  随机存取文件  315\n9.1.9  内存映射文件  315\n9.1.10  文件锁  316\n9.2  路径、文件和目录  317\n9.2.1  路径  317\n9.2.2  创建文件和目录  319\n9.2.3  复制、移动和删除文件  320\n9.2.4  访问目录内容  321\n9.2.5  ZIP文件系统  324\n9.3  HTTP连接  325\n9.3.1  URLConnection类和HttpURLConnection类  326\n9.3.2  HTTP Client API  327\n9.4  正则表达式  330\n9.4.1  正则表达式概述  330\n9.4.2  找到一个匹配  334\n9.4.3  找到所有匹配  335\n9.4.4  分组  336\n9.4.5  以分隔符号分割  337\n9.4.6  替换匹配结果  338\n9.4.7  标记  339\n9.5  序列化  339\n9.5.1  Serializable接口  340\n9.5.2  瞬态实例变量  342\n9.5.3  readObject和writeObject方法  342\n9.5.4  readResolve和writeReplace方法  343\n9.5.5  版本化  345\n练习  346\n第10章  并发编程  351\n10.1  并发任务  352\n10.1.1  运行任务  352\n10.1.2  Future  354\n10.2  异步计算  357\n10.2.1  可完成的Future  357\n10.2.2  组合可完成的Future  359\n10.2.3  UI回调中的长时间运行任务  362\n10.3  线程安全  364\n10.3.1  可见性  364\n10.3.2  竞争条件  366\n10.3.3  安全并发的策略  369\n10.3.4  不可变类  369\n10.4  并行算法  370\n10.4.1  并行流  370\n10.4.2  并行数组操作  371\n10.5  线程安全的数据结构  372\n10.5.1  ConcurrentHashMap  373\n10.5.2  阻塞队列  374\n10.5.3  其他线程安全的数据结构  375\n10.6  原子计数器和累加器  376\n10.7  锁和条件  379\n10.7.1  锁  379\n10.7.2  synchronized关键字  380\n10.7.3  条件等待  382\n10.8  线程  385\n10.8.1  启动线程  385\n10.8.2  线程中断  386\n10.8.3  线程变量  388\n10.8.4  线程的其他属性  388\n10.9  进程  389\n10.9.1  构建进程  389\n10.9.2  运行进程  391\n10.9.3  ProcessHandle  392\n练习  393\n第11章  注解  401\n11.1  使用注解  402\n11.1.1  注解元素  402\n11.1.2  多注解和重复注解  403\n11.1.3  注解声明  404\n11.1.4  注解类型用途  405\n11.1.5  明确接收者  406\n11.2  定义注解  408\n11.3  标准注解  410\n11.3.1  编译相关的注解  411\n11.3.2  资源管理相关的注解  412\n11.3.3  元注解  412\n11.4  运行时注解处理  414\n11.5  源码级注解处理  418\n11.5.1  注解处理器  418\n11.5.2  语言模型API  419\n11.5.3  使用注解生成源码  419\n练习  423\n第12章  日期和时间API  427\n12.1  时间线  428\n12.2  本地日期  430\n12.3  日期调整器  433\n12.4  本地时间  435\n12.5  时区时间  436\n12.6  格式化和解析  439\n12.7  应对遗留代码  442\n练习  443\n第13章  国际化  447\n13.1  本地化  448\n13.1.1  指定本地化  448\n13.1.2  默认的locale  451\n13.1.3  显示名称  452\n13.2  数字格式化  453\n13.3  货币符号  454\n13.4  日期和时间格式化  455\n13.5  排序和规范化  457\n13.6  消息格式化  459\n13.7  资源束  461\n13.7.1  组织资源束  462\n13.7.2  资源束类  464\n13.8  字符编码  465\n13.9  首选项  466\n练习  468\n第14章  编译与脚本  471\n14.1  编译器API  471\n14.1.1  调用编译器  472\n14.1.2  启动编译任务  472\n14.1.3  从内存读取源文件  473\n14.1.4  向内存写入字节码  474\n14.1.5  捕获诊断信息  476\n14.2  脚本API  476\n14.2.1  获取脚本引擎  476\n14.2.2  绑定  477\n14.2.3  重定向输入与输出  478\n14.2.4  调用脚本函数和方法  479\n14.2.5  编译脚本  480\n14.3  Nashorn脚本引擎  481\n14.3.1  从命令行运行Nashorn  481\n14.3.2  调用getter、setter和重载方法  482\n14.3.3  构造Java对象  483\n14.3.4  JavaScript和Java中的字符串  485\n14.3.5  数字  485\n14.3.6  使用数组  486\n14.3.7  列表与映射  487\n14.3.8  lambda表达式  488\n14.3.9  继承Java类与实现Java接口  489\n14.3.10  异常  491\n14.4  shell脚本与Nashorn  491\n14.4.1  执行shell命令  492\n14.4.2  字符串插值  492\n14.4.3  脚本输入  493\n练习  494\n第15章  Java平台模块系统  499\n15.1  模块的概念  500\n15.2  模块命名  501\n15.3  模块化“Hello, World!”程序  502\n15.4  引入模块  504\n15.5  导出包  506\n15.6  模块化和反射访问  510\n15.7  模块化的JAR  513\n15.8  自动模块和未命名模块  515\n15.9  用于迁移的命令行标识  516\n15.10  传递和静态引入  518\n15.11  限定导入和打开  520\n15.12  服务加载  521\n15.13  模块化用的工具  522\n练习  525","pages":"552","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29902153.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29902153.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29902153.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30358017\/","id":"30358017","publisher":"电子工业出版社","isbn10":"7121342782","isbn13":"9787121342783","title":"写给大忙人的Java SE 9核心技术","url":"https:\/\/api.douban.com\/v2\/book\/30358017","alt_title":"","author_intro":"Cay S. Horstmann是Java SE 8 for the Really Impatient和Scala for the Impatient（都是Addison-Wesley出版社的书）两本书的作者，也是Core Java™，Volumes I and II, Tenth Edition（Prentice Hall于2016年出版）一书的主要作者。他还编写了一系列针对专业编程人员和计算机专业学生的书籍。他是圣荷西州立大学计算机系的教授，也是一位JavaChampion。","summary":"《写给大忙人的Java SE 9核心技术》是经典著作《Java核心技术》（Core Java）作者Cay S. Horstmann的全新力作，书中以关键的核心技术为着眼点，以全局高度提炼语言精髓，以高浓度、高含金量的方式对Java SE 9的新特性进行细致讲解。作者将其沉浸于Java多年的真知灼见蕴藏于书中，既扎实覆盖Java编程的基础知识，又独具匠心地从Java 9及其重要的新特性之一——模块发端，带领读者一路探索和实践Java 的诸多新特性，诸如JShell、集合类工厂方法、改进的Stream API、私有接口、HTTP\/2、并发编程中的增强部分、全新的时间\/日期API，以及脚本语言在Java中的使用。\n“Impatient”系列图书风格鲜明，除悉数出自大师之手外，更以文笔轻松、易读易懂、富含生动且可用于实践的示例程序（下载源代码后可直接运行）而见长。这种亲身实践的讲授模式，非常便于读者加深对技术的理解和掌握。初学者可用来参考入门；有开发经验者也可用来巩固编程核心知识，与时俱进地把握技术发展现状与未来趋势。\n《写给大忙人的Java SE 9核心技术》适合有一定Java开发经验的工程师或者架构师阅读，也可以作为Java新特性的参考手册。","price":"128"},{"rating":{"max":10,"numRaters":2,"average":"0.0","min":0},"subtitle":"","author":[],"pubdate":"","tags":[{"count":1,"name":"编程","title":"编程"},{"count":1,"name":"技术","title":"技术"},{"count":1,"name":"成长","title":"成长"}],"origin_title":"","image":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","large":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","medium":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif"},"alt":"https:\/\/book.douban.com\/subject\/30562247\/","id":"30562247","publisher":"","isbn10":"7115380376","isbn13":"9787115380371","title":"Java核心技术 卷I：基础知识（第9版 英文版）","url":"https:\/\/api.douban.com\/v2\/book\/30562247","alt_title":"","author_intro":"","summary":"","price":"91.30"},{"rating":{"max":10,"numRaters":1,"average":"0.0","min":0},"subtitle":"","author":[],"pubdate":"","tags":[{"count":1,"name":"编程","title":"编程"},{"count":1,"name":"技术","title":"技术"},{"count":1,"name":"成长","title":"成长"}],"origin_title":"","image":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","large":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","medium":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif"},"alt":"https:\/\/book.douban.com\/subject\/30937400\/","id":"30937400","publisher":"","isbn10":"7115380384","isbn13":"9787115380388","title":"Java核心技术 卷II：高级特性（第9版 英文版）（套装上下册）","url":"https:\/\/api.douban.com\/v2\/book\/30937400","alt_title":"","author_intro":"","summary":"","price":"79.80元"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":[],"pubdate":"","tags":[],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s32014980.jpg","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s32014980.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s32014980.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s32014980.jpg"},"alt":"https:\/\/book.douban.com\/subject\/33125039\/","id":"33125039","publisher":"","isbn10":"9864769863","isbn13":"9789864769865","title":"Java SE11與Android 9.x程式設計範例教本","url":"https:\/\/api.douban.com\/v2\/book\/33125039","alt_title":"","author_intro":"","summary":"页面: 592, 平装, 碁峰資訊股份有限公司","price":""}]}
