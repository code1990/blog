>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python编程
第一部分　基础知识
第1章　起步　　2
1.1　搭建编程环境　　2
1.1.1　Python 2和Python 3　　2
1.1.2　运行Python代码片段　　3
1.1.3　Hello World程序　　3
1.2　在不同操作系统中搭建Python编程环境　　3
1.2.1　在Linux系统中搭建Python编程环境　　3
1.2.2　在OS X系统中搭建Python编程环境　　6
1.2.3　在Windows系统中搭建Python编程环境　　8
1.3　解决安装问题　　12
1.4　从终端运行Python程序　　13
1.4.1　在Linux和OS X系统中从终端运行Python程序　　13
1.4.2　在Windows系统中从终端运行Python程序　　13
1.5　小结　　14
第2章　变量和简单数据类型　　15
2.1　运行hello_world.py时发生的情况　　15
2.2　变量　　16
2.2.1　变量的命名和使用　　16
2.2.2　使用变量时避免命名错误　　17
2.3　字符串　　18
2.3.1　使用方法修改字符串的大小写　　19
2.3.2　合并（拼接）字符串　　19
2.3.3　使用制表符或换行符来添加空白　　20
2.3.4　删除空白　　21
2.3.5　使用字符串时避免语法错误　　22
2.3.6　Python 2中的print语句　　23
2.4　数字　　24
2.4.1　整数　　24
2.4.2　浮点数　　25
2.4.3　使用函数str()避免类型错误　　25
2.4.4　Python 2中的整数　　26
2.5　注释　　27
2.5.1　如何编写注释　　27
2.5.2　该编写什么样的注释　　28
2.6　Python之禅　　28
2.7　小结　　30
第3章　列表简介　　31
3.1　列表是什么　　31
3.1.1　访问列表元素　　32
3.1.2　索引从0而不是1开始　　32
3.1.3　使用列表中的各个值　　33
3.2　修改、添加和删除元素　　33
3.2.1　修改列表元素　　34
3.2.2　在列表中添加元素　　34
3.2.3　从列表中删除元素　　35
3.3　组织列表　　39
3.3.1　使用方法sort()对列表进行永久性排序　　39
3.3.2　使用函数sorted()对列表进行临时排序　　40
3.3.3　倒着打印列表　　41
3.3.4　确定列表的长度　　41
3.4　使用列表时避免索引错误　　42
3.5　小结　　43
第4章　操作列表　　44
4.1　遍历整个列表　　44
4.1.1　深入地研究循环　　45
4.1.2　在for循环中执行更多的操作　　46
4.1.3　在for循环结束后执行一些操作　　47
4.2　避免缩进错误　　47
4.2.1　忘记缩进　　48
4.2.2　忘记缩进额外的代码行　　48
4.2.3　不必要的缩进　　49
4.2.4　循环后不必要的缩进　　49
4.2.5　遗漏了冒号　　50
4.3　创建数值列表　　51
4.3.1　使用函数range()　　51
4.3.2　使用range()创建数字列表　　51
4.3.3　对数字列表执行简单的统计计算　　53
4.3.4　列表解析　　53
4.4　使用列表的一部分　　54
4.4.1　切片　　54
4.4.2　遍历切片　　56
4.4.3　复制列表　　56
4.5　元组　　59
4.5.1　定义元组　　59
4.5.2　遍历元组中的所有值　　59
4.5.3　修改元组变量　　60
4.6　设置代码格式　　61
4.6.1　格式设置指南　　61
4.6.2　缩进　　61
4.6.3　行长　　61
4.6.4　空行　　62
4.6.5　其他格式设置指南　　62
4.7　小结　　63
第5章　if语句　　64
5.1　一个简单示例　　64
5.2　条件测试　　65
5.2.1　检查是否相等　　65
5.2.2　检查是否相等时不考虑大小写　　65
5.2.3　检查是否不相等　　66
5.2.4　比较数字　　67
5.2.5　检查多个条件　　67
5.2.6　检查特定值是否包含在列表中　　68
5.2.7　检查特定值是否不包含在列表中　　69
5.2.8　布尔表达式　　69
5.3　if语句　　70
5.3.1　简单的if语句　　70
5.3.2　if-else语句　　71
5.3.3　if-elif-else结构　　72
5.3.4　使用多个elif代码块　　73
5.3.5　省略else代码块　　74
5.3.6　测试多个条件　　74
5.4　使用if语句处理列表　　76
5.4.1　检查特殊元素　　77
5.4.2　确定列表不是空的　　78
5.4.3　使用多个列表　　78
5.5　设置if语句的格式　　80
5.6　小结　　80
第6章　字典　　81
6.1　一个简单的字典　　81
6.2　使用字典　　82
6.2.1　访问字典中的值　　82
6.2.2　添加键—值对　　83
6.2.3　先创建一个空字典　　83
6.2.4　修改字典中的值　　84
6.2.5　删除键—值对　　85
6.2.6　由类似对象组成的字典　　86
6.3　遍历字典　　87
6.3.1　遍历所有的键—值对　　87
6.3.2　遍历字典中的所有键　　89
6.3.3　按顺序遍历字典中的所有键　　91
6.3.4　遍历字典中的所有值　　91
6.4　嵌套　　93
6.4.1　字典列表　　93
6.4.2　在字典中存储列表　　95
6.4.3　在字典中存储字典　　97
6.5　小结　　99
第7章　用户输入和while循环　　100
7.1　函数input()的工作原理　　100
7.1.1　编写清晰的程序　　101
7.1.2　使用int()来获取数值输入　　102
7.1.3　求模运算符　　103
7.1.4　在Python 2.7中获取输入　　104
7.2　while循环简介　　104
7.2.1　使用while循环　　104
7.2.2　让用户选择何时退出　　105
7.2.3　使用标志　　106
7.2.4　使用break退出循环　　107
7.2.5　在循环中使用continue　　108
7.2.6　避免无限循环　　109
7.3　使用while循环来处理列表和字典　　110
7.3.1　在列表之间移动元素　　110
7.3.2　删除包含特定值的所有列表元素　　111
7.3.3　使用用户输入来填充字典　　112
7.4　小结　　113
第8章　函数　　114
8.1　定义函数　　114
8.1.1　向函数传递信息　　115
8.1.2　实参和形参　　115
8.2　传递实参　　116
8.2.1　位置实参　　116
8.2.2　关键字实参　　118
8.2.3　默认值　　118
8.2.4　等效的函数调用　　119
8.2.5　避免实参错误　　120
8.3　返回值　　121
8.3.1　返回简单值　　121
8.3.2　让实参变成可选的　　122
8.3.3　返回字典　　123
8.3.4　结合使用函数和while循环　　124
8.4　传递列表　　126
8.4.1　在函数中修改列表　　126
8.4.2　禁止函数修改列表　　129
8.5　传递任意数量的实参　　130
8.5.1　结合使用位置实参和任意数量实参　　131
8.5.2　使用任意数量的关键字实参　　131
8.6　将函数存储在模块中　　133
8.6.1　导入整个模块　　133
8.6.2　导入特定的函数　　134
8.6.3　使用as给函数指定别名　　134
8.6.4　使用as给模块指定别名　　135
8.6.5　导入模块中的所有函数　　135
8.7　函数编写指南　　136
8.8　小结　　137
第9章　类　　138
9.1　创建和使用类　　138
9.1.1　创建Dog类　　139
9.1.2　根据类创建实例　　140
9.2　使用类和实例　　142
9.2.1　Car类　　143
9.2.2　给属性指定默认值　　143
9.2.3　修改属性的值　　144
9.3　继承　　147
9.3.1　子类的方法__init__()　　147
9.3.2　Python 2.7中的继承　　149
9.3.3　给子类定义属性和方法　　149
9.3.4　重写父类的方法　　150
9.3.5　将实例用作属性　　150
9.3.6　模拟实物　　152
9.4　导入类　　153
9.4.1　导入单个类　　153
9.4.2　在一个模块中存储多个类　　155
9.4.3　从一个模块中导入多个类　　156
9.4.4　导入整个模块　　157
9.4.5　导入模块中的所有类　　157
9.4.6　在一个模块中导入另一个模块　　157
9.4.7　自定义工作流程　　158
9.5　Python标准库　　159
9.6　类编码风格　　161
9.7　小结　　161
第10章　文件和异常　　162
10.1　从文件中读取数据　　162
10.1.1　读取整个文件　　162
10.1.2　文件路径　　164
10.1.3　逐行读取　　165
10.1.4　创建一个包含文件各行内容的列表　　166
10.1.5　使用文件的内容　　166
10.1.6　包含一百万位的大型文件　　168
10.1.7　圆周率值中包含你的生日吗　　168
10.2　写入文件　　169
10.2.1　写入空文件　　170
10.2.2　写入多行　　170
10.2.3　附加到文件　　171
10.3　异常　　172
10.3.1　处理ZeroDivisionError异常　　172
10.3.2　使用try-except 代码块　　173
10.3.3　使用异常避免崩溃　　173
10.3.4　else 代码块　　174
10.3.5　处理FileNotFoundError异常　　175
10.3.6　分析文本　　176
10.3.7　使用多个文件　　177
10.3.8　失败时一声不吭　　178
10.3.9　决定报告哪些错误　　179
10.4　存储数据　　180
10.4.1　使用json.dump()和json.load()　　180
10.4.2　保存和读取用户生成的数据　　181
10.4.3　重构　　183
10.5　小结　　186
第11章　测试代码　　187
11.1　测试函数　　187
11.1.1　单元测试和测试用例　　188
11.1.2　可通过的测试　　188
11.1.3　不能通过的测试　　190
11.1.4　测试未通过时怎么办　　191
11.1.5　添加新测试　　191
11.2　测试类　　193
11.2.1　各种断言方法　　193
11.2.2　一个要测试的类　　194
11.2.3　测试AnonymousSurvey类　　195
11.2.4　方法setUp()　　197
11.3　小结　　199
第二部分　项 目
项目1 外星人入侵　　202
第12章　武装飞船　　203
12.1　规划项目　　203
12.2　安装Pygame　　204
12.2.1　使用pip安装Python包　　204
12.2.2　在Linux系统中安装Pygame　　206
12.2.3　在OS X系统中安装Pygame　　207
12.2.4　在Windows系统中安装Pygame　　207
12.3　开始游戏项目　　207
12.3.1　创建Pygame窗口以及响应用户输入　　208
12.3.2　设置背景色　　209
12.3.3　创建设置类　　210
12.4　添加飞船图像　　211
12.4.1　创建Ship类　　212
12.4.2　在屏幕上绘制飞船　　213
12.5　重构：模块game_functions　　214
12.5.1　函数check_events()　　214
12.5.2　函数update_screen()　　215
12.6　驾驶飞船　　216
12.6.1　响应按键　　216
12.6.2　允许不断移动　　217
12.6.3　左右移动　　219
12.6.4　调整飞船的速度　　220
12.6.5　限制飞船的活动范围　　221
12.6.6　重构check_events()　　222
12.7　简单回顾　　223
12.7.1　alien_invasion.py　　223
12.7.2　settings.py　　223
12.7.3　game_functions.py　　223
12.7.4　ship.py　　223
12.8　射击　　224
12.8.1　添加子弹设置　　224
12.8.2　创建Bullet类　　224
12.8.3　将子弹存储到编组中　　226
12.8.4　开火　　227
12.8.5　删除已消失的子弹　　228
12.8.6　限制子弹数量　　229
12.8.7　创建函数update_bullets()　　229
12.8.8　创建函数fire_bullet()　　230
12.9　小结　　231
第13章　外星人　　232
13.1　回顾项目　　232
13.2　创建第一个外星人　　233
13.2.1　创建Alien类　　233
13.2.2　创建Alien实例　　234
13.2.3　让外星人出现在屏幕上　　235
13.3　创建一群外星人　　236
13.3.1　确定一行可容纳多少个外星人　　236
13.3.2　创建多行外星人　　236
13.3.3　创建外星人群　　237
13.3.4　重构create_fleet()　　239
13.3.5　添加行　　240
13.4　让外星人群移动　　242
13.4.1　向右移动外星人　　243
13.4.2　创建表示外星人移动方向的设置　　244
13.4.3　检查外星人是否撞到了屏幕边缘　　244
13.4.4　向下移动外星人群并改变移动方向　　245
13.5　射杀外星人　　246
13.5.1　检测子弹与外星人的碰撞　　246
13.5.2　为测试创建大子弹　　247
13.5.3　生成新的外星人群　　248
13.5.4　提高子弹的速度　　249
13.5.5　重构update_bullets()　　249
13.6　结束游戏　　250
13.6.1　检测外星人和飞船碰撞　　250
13.6.2　响应外星人和飞船碰撞　　251
13.6.3　有外星人到达屏幕底端　　254
13.6.4　游戏结束　　255
13.7　确定应运行游戏的哪些部分　　255
13.8　小结　　256
第14章　记分　　257
14.1　添加Play 按钮　　257
14.1.1　创建Button类　　258
14.1.2　在屏幕上绘制按钮　　259
14.1.3　开始游戏　　261
14.1.4　重置游戏　　261
14.1.5　将Play 按钮切换到非活动状态　　263
14.1.6　隐藏光标　　263
14.2　提高等级　　264
14.2.1　修改速度设置　　264
14.2.2　重置速度　　266
14.3　记分　　267
14.3.1　显示得分　　267
14.3.2　创建记分牌　　268
14.3.3　在外星人被消灭时更新得分　　270
14.3.4　将消灭的每个外星人的点数都计入得分　　271
14.3.5　提高点数　　271
14.3.6　将得分圆整　　272
14.3.7　最高得分　　274
14.3.8　显示等级　　276
14.3.9　显示余下的飞船数　　279
14.4　小结　　283
项目2 数据可视化　　284
第15章　生成数据　　285
15.1　安装matplotlib　　285
15.1.1　在Linux系统中安装matplotlib　　286
15.1.2　在OS X系统中安装matplotlib　　286
15.1.3　在Windows系统中安装matplotlib　　286
15.1.4　测试matplotlib　　287
15.1.5　matplotlib画廊　　287
15.2　绘制简单的折线图　　287
15.2.1　修改标签文字和线条粗细　　288
15.2.2　校正图形　　289
15.2.3　使用scatter()绘制散点图并设置其样式　　290
15.2.4　使用scatter()绘制一系列点　　291
15.2.5　自动计算数据　　292
15.2.6　删除数据点的轮廓　　293
15.2.7　自定义颜色　　293
15.2.8　使用颜色映射　　294
15.2.9　自动保存图表　　295
15.3　随机漫步　　295
15.3.1　创建RandomWalk()类　　296
15.3.2　选择方向　　296
15.3.3　绘制随机漫步图　　297
15.3.4　模拟多次随机漫步　　298
15.3.5　设置随机漫步图的样式　　299
15.3.6　给点着色　　299
15.3.7　重新绘制起点和终点　　300
15.3.8　隐藏坐标轴　　301
15.3.9　增加点数　　301
15.3.10　调整尺寸以适合屏幕　　302
15.4　使用Pygal模拟掷骰子　　303
15.4.1　安装Pygal　　304
15.4.2　Pygal画廊　　304
15.4.3　创建Die类　　304
15.4.4　掷骰子　　305
15.4.5　分析结果　　305
15.4.6　绘制直方图　　306
15.4.7　同时掷两个骰子　　307
15.4.8　同时掷两个面数不同的骰子　　309
15.5　小结　　311
第16章　下载数据　　312
16.1　CSV文件格式　　312
16.1.1　分析CSV文件头　　313
16.1.2　打印文件头及其位置　　314
16.1.3　提取并读取数据　　314
16.1.4　绘制气温图表　　315
16.1.5　模块datetime　　316
16.1.6　在图表中添加日期　　317
16.1.7　涵盖更长的时间　　318
16.1.8　再绘制一个数据系列　　319
16.1.9　给图表区域着色　　320
16.1.10　错误检查　　321
16.2　制作世界人口地图：JSON格式　　324
16.2.1　下载世界人口数据　　324
16.2.2　提取相关的数据　　324
16.2.3　将字符串转换为数字值　　326
16.2.4　获取两个字母的国别码　　327
16.2.5　制作世界地图　　329
16.2.6　在世界地图上呈现数字数据　　330
16.2.7　绘制完整的世界人口地图　　331
16.2.8　根据人口数量将国家分组　　333
16.2.9　使用Pygal设置世界地图的样式　　334
16.2.10　加亮颜色主题　　335
16.3　小结　　337
第17章　使用API　　338
17.1　使用Web API　　338
17.1.1　Git和GitHub　　338
17.1.2　使用API调用请求数据　　339
17.1.3　安装requests　　339
17.1.4　处理API响应　　340
17.1.5　处理响应字典　　340
17.1.6　概述最受欢迎的仓库　　342
17.1.7　监视API的速率限制　　343
17.2　使用Pygal可视化仓库　　344
17.2.1　改进Pygal图表　　346
17.2.2　添加自定义工具提示　　347
17.2.3　根据数据绘图　　349
17.2.4　在图表中添加可单击的链接　　350
17.3　Hacker News API　　350
17.4　小结　　353
项目3 Web 应用程序　　354
第18章　Django入门　　355
18.1　建立项目　　355
18.1.1　制定规范　　355
18.1.2　建立虚拟环境　　356
18.1.3　安装virtualenv　　356
18.1.4　激活虚拟环境　　357
18.1.5　安装Django　　357
18.1.6　在Django中创建项目　　357
18.1.7　创建数据库　　358
18.1.8　查看项目　　359
18.2　创建应用程序　　360
18.2.1　定义模型　　360
18.2.2　激活模型　　362
18.2.3　Django管理网站　　363
18.2.4　定义模型Entry　　365
18.2.5　迁移模型Entry　　366
18.2.6　向管理网站注册Entry　　366
18.2.7　Django shell　　367
18.3　创建网页：学习笔记主页　　369
18.3.1　映射URL　　369
18.3.2　编写视图　　371
18.3.3　编写模板　　372
18.4　创建其他网页　　373
18.4.1　模板继承　　373
18.4.2　显示所有主题的页面　　375
18.4.3　显示特定主题的页面　　378
18.5　小结　　381
第19章　用户账户　　382
19.1　让用户能够输入数据　　382
19.1.1　添加新主题　　382
19.1.2　添加新条目　　386
19.1.3　编辑条目　　390
19.2　创建用户账户　　392
19.2.1　应用程序users　　393
19.2.2　登录页面　　394
19.2.3　注销　　396
19.2.4　注册页面　　397
19.3　让用户拥有自己的数据　　400
19.3.1　使用@login_required限制访问　　400
19.3.2　将数据关联到用户　　402
19.3.3　只允许用户访问自己的主题　　405
19.3.4　保护用户的主题　　405
19.3.5　保护页面edit_entry　　406
19.3.6　将新主题关联到当前用户　　406
19.4　小结　　408
第20章　设置应用程序的样式并对其进行部署　　409
20.1　设置项目“学习笔记”的样式　　409
20.1.1　应用程序django-bootstrap3　　410
20.1.2　使用Bootstrap来设置项目“学习笔记”的样式　　411
20.1.3　修改base.html　　411
20.1.4　使用jumbotron设置主页的样式　　414
20.1.5　设置登录页面的样式　　415
20.1.6　设置new_topic页面的样式　　416
20.1.7　设置topics页面的样式　　417
20.1.8　设置topic页面中条目的样式　　417
20.2　部署“学习笔记”　　419
20.2.1　建立Heroku账户　　420
20.2.2　安装Heroku Toolbelt　　420
20.2.3　安装必要的包　　420
20.2.4　创建包含包列表的文件requirements.txt　　421
20.2.5　指定Python版本　　422
20.2.6　为部署到Herohu而修改settings.py　　422
20.2.7　创建启动进程的Procfile　　423
20.2.8　为部署到Herohu而修改wsgi.py　　423
20.2.9　创建用于存储静态文件的目录　　424
20.2.10　在本地使用gunicorn服务器　　424
20.2.11　使用Git跟踪项目文件　　425
20.2.12　推送到Heroku　　426
20.2.13　在Heroku上建立数据库　　427
20.2.14　改进Heroku部署　　428
20.2.15　确保项目的安全　　429
20.2.16　提交并推送修改　　430
20.2.17　创建自定义错误页面　　431
20.2.18　继续开发　　434
20.2.19　设置SECRET_KEY　　434
20.2.20　将项目从Heroku删除　　434
20.3　小结　　435
附录A　安装Python　　436
附录B　文本编辑器　　441
附录C　寻求帮助　　447
附录D　使用Git进行版本控制　　451
后记　　460
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python深度学习
第一部分　深度学习基础
第1章　什么是深度学习　　2
1.1　人工智能、机器学习与深度学习　　2
1.1.1　人工智能　　3
1.1.2　机器学习　　3
1.1.3　从数据中学习表示　　4
1.1.4　深度学习之“深度”　　6
1.1.5　用三张图理解深度学习的工作原理　　7
1.1.6　深度学习已经取得的进展　　9
1.1.7　不要相信短期炒作　　9
1.1.8　人工智能的未来　　10
1.2　深度学习之前：机器学习简史　　11
1.2.1　概率建模　　11
1.2.2　早期神经网络　　11
1.2.3　核方法　　12
1.2.4　决策树、随机森林与梯度提升机　　13
1.2.5　回到神经网络　　14
1.2.6　深度学习有何不同　　14
1.2.7　机器学习现状　　15
1.3　为什么是深度学习，为什么是现在　　15
1.3.1　硬件　　16
1.3.2　数据　　17
1.3.3　算法　　17
1.3.4　新的投资热潮　　17
1.3.5　深度学习的大众化　　18
1.3.6　这种趋势会持续吗　　18
第2章　神经网络的数学基础　　20
2.1　初识神经网络　　20
2.2　神经网络的数据表示　　23
2.2.1　标量（0D张量）　　23
2.2.2　向量（1D张量）　　24
2.2.3　矩阵（2D张量）　　24
2.2.4　3D张量与更高维张量　　24
2.2.5　关键属性　　25
2.2.6　在Numpy中操作张量　　26
2.2.7　数据批量的概念　　27
2.2.8　现实世界中的数据张量　　27
2.2.9　向量数据　　27
2.2.10　时间序列数据或序列数据　　28
2.2.11　图像数据　　28
2.2.12　视频数据　　29
2.3　神经网络的“齿轮”：张量运算　　29
2.3.1　逐元素运算　　30
2.3.2　广播　　31
2.3.3　张量点积　　32
2.3.4　张量变形　　34
2.3.5　张量运算的几何解释　　34
2.3.6　深度学习的几何解释　　35
2.4　神经网络的“引擎”：基于梯度的优化　　36
2.4.1　什么是导数　　37
2.4.2　张量运算的导数：梯度　　38
2.4.3　随机梯度下降　　38
2.4.4　链式求导：反向传播算法　　41
2.5　回顾第一个例子　　41
本章小结　　42
第3章　神经网络入门　　43
3.1　神经网络剖析　　43
3.1.1　层：深度学习的基础组件　　44
3.1.2　模型：层构成的网络　　45
3.1.3　损失函数与优化器：配置学习过程的关键　　45
3.2　Keras简介　　46
3.2.1　Keras、TensorFlow、Theano 和CNTK　　47
3.2.2　使用Keras 开发：概述　　48
3.3　建立深度学习工作站　　49
3.3.1　Jupyter笔记本：运行深度学习实验的首选方法　　49
3.3.2　运行Keras：两种选择　　50
3.3.3　在云端运行深度学习任务：优点和缺点　　50
3.3.4　深度学习的最佳GPU　　50
3.4　电影评论分类：二分类问题　　51
3.4.1　IMDB 数据集　　51
3.4.2　准备数据　　52
3.4.3　构建网络　　52
3.4.4　验证你的方法　　56
3.4.5　使用训练好的网络在新数据上生成预测结果　　59
3.4.6　进一步的实验　　59
3.4.7　小结　　59
3.5　新闻分类：多分类问题　　59
3.5.1　路透社数据集　　60
3.5.2　准备数据　　61
3.5.3　构建网络　　61
3.5.4　验证你的方法　　62
3.5.5　在新数据上生成预测结果　　65
3.5.6　处理标签和损失的另一种方法　　65
3.5.7　中间层维度足够大的重要性　　65
3.5.8　进一步的实验　　66
3.5.9　小结　　66
3.6　预测房价：回归问题　　66
3.6.1　波士顿房价数据集　　67
3.6.2　准备数据　　67
3.6.3　构建网络　　68
3.6.4　利用K折验证来验证你的方法　　68
3.6.5　小结　　72
本章小结　　73
第4章　机器学习基础　　74
4.1　机器学习的四个分支　　74
4.1.1　监督学习　　74
4.1.2　无监督学习　　75
4.1.3　自监督学习　　75
4.1.4　强化学习　　75
4.2　评估机器学习模型　　76
4.2.1　训练集、验证集和测试集　　77
4.2.2　评估模型的注意事项　　80
4.3　数据预处理、特征工程和特征学习　　80
4.3.1　神经网络的数据预处理　　80
4.3.2　特征工程　　81
4.4　过拟合与欠拟合　　83
4.4.1　减小网络大小　　83
4.4.2　添加权重正则化　　85
4.4.3　添加dropout正则化　　87
4.5　机器学习的通用工作流程　　89
4.5.1　定义问题，收集数据集　　89
4.5.2　选择衡量成功的指标　　89
4.5.3　确定评估方法　　90
4.5.4　准备数据　　90
4.5.5　开发比基准更好的模型　　90
4.5.6　扩大模型规模：开发过拟合的模型　　91
4.5.7　模型正则化与调节超参数　　92
本章小结　　92
第二部分　深度学习实践
第5章　深度学习用于计算机视觉　　94
5.1　卷积神经网络简介　　94
5.1.1　卷积运算　　96
5.1.2　最大池化运算　　101
5.2　在小型数据集上从头开始训练一个卷积神经网络　　102
5.2.1　深度学习与小数据问题的相关性　　103
5.2.2　下载数据　　103
5.2.3　构建网络　　106
5.2.4　数据预处理　　107
5.2.5　使用数据增强　　111
5.3　使用预训练的卷积神经网络　　115
5.3.1　特征提取　　116
5.3.2　微调模型　　124
5.3.3　小结　　130
5.4　卷积神经网络的可视化　　130
5.4.1　可视化中间激活　　131
5.4.2　可视化卷积神经网络的过滤器　　136
5.4.3　可视化类激活的热力图　　142
本章小结　　146
第6章　深度学习用于文本和序列　　147
6.1　处理文本数据　　147
6.1.1　单词和字符的one-hot编码　　149
6.1.2　使用词嵌入　　151
6.1.3　整合在一起：从原始文本到词嵌入　　155
6.1.4　小结　　162
6.2　理解循环神经网络　　162
6.2.1　Keras中的循环层　　164
6.2.2　理解LSTM层和GRU层　　168
6.2.3　Keras中一个LSTM的具体例子　　170
6.2.4　小结　　172
6.3　循环神经网络的高级用法　　172
6.3.1　温度预测问题　　172
6.3.2　准备数据　　175
6.3.3　一种基于常识的、非机器学习的基准方法　　177
6.3.4　一种基本的机器学习方法　　178
6.3.5　第一个循环网络基准　　180
6.3.6　使用循环dropout来降低过拟合　　181
6.3.7　循环层堆叠　　182
6.3.8　使用双向RNN　　184
6.3.9　更多尝试　　187
6.3.10　小结　　187
6.4　用卷积神经网络处理序列　　188
6.4.1　理解序列数据的一维卷积　　188
6.4.2　序列数据的一维池化　　189
6.4.3　实现一维卷积神经网络　　189
6.4.4　结合CNN和RNN来处理长序列　　191
6.4.5　小结　　195
本章总结　　195
第7章　高级的深度学习最佳实践　　196
7.1　不用Sequential模型的解决方案：Keras 函数式API　　196
7.1.1　函数式API简介　　199
7.1.2　多输入模型　　200
7.1.3　多输出模型　　202
7.1.4　层组成的有向无环图　　204
7.1.5　共享层权重　　208
7.1.6　将模型作为层　　208
7.1.7　小结　　209
7.2　使用Keras回调函数和TensorBoard来检查并监控深度学习模型　　210
7.2.1　训练过程中将回调函数作用于模型　　210
7.2.2　TensorBoard简介：TensorFlow的可视化框架　　212
7.2.3　小结　　219
7.3　让模型性能发挥到极致　　219
7.3.1　高级架构模式　　219
7.3.2　超参数优化　　222
7.3.3　模型集成　　223
7.3.4　小结　　224
本章总结　　225
第8章　生成式深度学习　　226
8.1　使用LSTM生成文本　　227
8.1.1　生成式循环网络简史　　227
8.1.2　如何生成序列数据　　228
8.1.3　采样策略的重要性　　229
8.1.4　实现字符级的LSTM文本生成　　230
8.1.5　小结　　234
8.2　DeepDream　　235
8.2.1　用Keras实现DeepDream　　236
8.2.2　小结　　241
8.3　神经风格迁移　　241
8.3.1　内容损失　　242
8.3.2　风格损失　　243
8.3.3　用Keras实现神经风格迁移　　243
8.3.4　小结　　249
8.4　用变分自编码器生成图像　　249
8.4.1　从图像的潜在空间中采样　　249
8.4.2　图像编辑的概念向量　　250
8.4.3　变分自编码器　　251
8.4.4　小结　　256
8.5　生成式对抗网络简介　　257
8.5.1　GAN 的简要实现流程　　258
8.5.2　大量技巧　　259
8.5.3　生成器　　260
8.5.4　判别器　　261
8.5.5　对抗网络　　261
8.5.6　如何训练DCGAN　　262
8.5.7　小结　　264
本章总结　　264
第9章　总结　　265
9.1　重点内容回顾　　265
9.1.1　人工智能的各种方法　　265
9.1.2　深度学习在机器学习领域中的特殊之处　　266
9.1.3　如何看待深度学习　　266
9.1.4　关键的推动技术　　267
9.1.5　机器学习的通用工作流程　　268
9.1.6　关键网络架构　　268
9.1.7　可能性空间　　272
9.2　深度学习的局限性　　273
9.2.1　将机器学习模型拟人化的风险　　273
9.2.2　局部泛化与极端泛化　　275
9.2.3　小结　　276
9.3　深度学习的未来　　277
9.3.1　模型即程序　　277
9.3.2　超越反向传播和可微层　　278
9.3.3　自动化机器学习　　279
9.3.4　终身学习与模块化子程序复用　　279
9.3.5　长期愿景　　281
9.4　了解一个快速发展领域的最新进展　　281
9.4.1　使用Kaggle练习解决现实世界的问题　　281
9.4.2　在arXiv阅读最新进展　　282
9.4.3　探索Keras生态系统　　282
9.5　结束语　　282
附录A　在Ubuntu上安装Keras及其依赖　　283
附录B　在EC2 GPU实例上运行Jupyter笔记本　　287
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python深度学习
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>利用Python进行数据分析
目录
前言 1
第1章 准备工作 5
本书主要内容 5
为什么要使用Python进行数据分析 6
重要的Python库 7
安装和设置 10
社区和研讨会 16
使用本书 16
致谢 18
第2章 引言 20
来自bit.ly的1.usa.gov数据 21
MovieLens 1M数据集 29
1880—2010年间全美婴儿姓名 35
小结及展望 47
第3章 IPython：一种交互式计算和开发环境 48
IPython基础 49
内省 51
使用命令历史 60
与操作系统交互 63
软件开发工具 66
IPython HTML Notebook 75
利用IPython提高代码开发效率的几点提示 77
高级IPython功能 79
致谢 81
第4章 NumPy基础：数组和矢量计算 82
NumPy的ndarray：一种多维数组对象 83
通用函数：快速的元素级数组函数 98
利用数组进行数据处理 100
用于数组的文件输入输出 107
线性代数 109
随机数生成 111
范例：随机漫步 112
第5章 pandas入门 115
pandas的数据结构介绍 116
基本功能 126
汇总和计算描述统计 142
处理缺失数据 148
层次化索引 153
其他有关pandas的话题 158
第6章 数据加载、存储与文件格式 162
读写文本格式的数据 162
二进制数据格式 179
使用HTML和Web API 181
使用数据库 182
第7章 数据规整化：清理、转换、合并、重塑 186
合并数据集 186
重塑和轴向旋转 200
数据转换 204
字符串操作 217
示例：USDA食品数据库 224
第8章 绘图和可视化 231
matplotlib API入门 231
pandas中的绘图函数 244
绘制地图：图形化显示海地地震危机数据 254
Python图形化工具生态系统 260
第9章 数据聚合与分组运算 263
GroupBy技术 264
数据聚合 271
分组级运算和转换 276
透视表和交叉表 288
示例：2012联邦选举委员会数据库 291
第10章 时间序列 302
日期和时间数据类型及工具 303
时间序列基础 307
日期的范围、频率以及移动 311
时区处理 317
时期及其算术运算 322
重采样及频率转换 327
时间序列绘图 334
移动窗口函数 337
性能和内存使用方面的注意事项 342
第11章 金融和经济数据应用 344
数据规整化方面的话题 344
分组变换和分析 355
更多示例应用 361
第12章 NumPy高级应用 368
ndarray对象的内部机理 368
高级数组操作 370
广播 378
ufunc高级应用 383
结构化和记录式数组 386
更多有关排序的话题 388
NumPy的matrix类 393
高级数组输入输出 395
性能建议 397
附录A Python语言精要 401
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>利用Python进行数据分析
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python编程快速上手
第一部分Python编程基础
第1章 Python基础 3
1.1 在交互式环境中输入表达式 3
1.2 整型、浮点型和字符串数据类型 6
1.3 字符串连接和复制 6
1.4 在变量中保存值 7
1.4.1 赋值语句 7
1.4.2 变量名 9
1.5 第一个程序 9
1.6 程序剖析 11
1.6.1 注释 11
1.6.2 print（）函数 11
1.6.3 input（）函数 11
1.6.4 打印用户的名字 12
1.6.5 len（）函数 12
1.6.6 str（）、int（）和float（）函数 13
1.7 小结 15
1.8 习题 15
第2章 控制流 17
2.1 布尔值 18
2.2 比较操作符 19
2.3 布尔操作符 20
2.3.1 二元布尔操作符 20
2.3.2 not操作符 21
2.4 混合布尔和比较操作符 21
2.5 控制流的元素 22
2.5.1 条件 22
2.5.2 代码块 22
2.6 程序执行 23
2.7 控制流语句 23
2.7.1 if语句 23
2.7.2 else语句 24
2.7.3 elif语句 25
2.7.4 while循环语句 30
2.7.5 恼人的循环 31
2.7.6 break语句 33
2.7.7 continue语句 34
2.7.8 for循环和range（）函数 37
2.7.9 等价的while循环 39
2.7.10 range（）的开始、停止和步长参数 39
2.8 导入模块 40from import语句 41
2.9 用sys.exit（）提前结束程序 41
2.10 小结 41
2.11 习题 41
第3章 函数 43
3.1 def语句和参数 44
3.2 返回值和return语句 45
3.3 None值 46
3.4 关键字参数和print（）47
3.5 局部和全局作用域 48
3.5.1 局部变量不能在全局作用域内使用 48
3.5.2 局部作用域不能使用其他局部作用域内的变量 49
3.5.3 全局变量可以在局部作用域中读取 49
3.5.4 名称相同的局部变量和全局变量 50
3.6 global语句 50
3.7 异常处理 52
3.8 一个小程序：猜数字 54
3.9 小结 55
3.10 习题 56
3.11 实践项目 56
3.11.1 Collatz序列 56
3.11.2 输入验证 57
第4章 列表 59
4.1 列表数据类型 59
4.1.1 用下标取得列表中的单个值 60
4.1.2 负数下标 61
4.1.3 利用切片取得子列表 61
4.1.4 用len（）取得列表的长度 62
4.1.5 用下标改变列表中的值 62
4.1.6 列表连接和列表复制 62
4.1.7 用del语句从列表中删除值 63
4.2 使用列表 63
4.2.1 列表用于循环 64
4.2.2 in和notin操作符 65
4.2.3 多重赋值技巧 66
4.3 增强的赋值操作 66
4.4 方法 67
4.4.1 用index（）方法在列表中查找值 67
4.4.2 用append（）和insert（）方法在列表中添加值 68
4.4.3 用remove（）方法从列表中删除值 69
4.4.4 用sort（）方法将列表中的值排序 69
4.5 例子程序：神奇8球和列表 70
4.6 类似列表的类型：字符串和元组 71
4.6.1 可变和不可变数据类型 72
4.6.2 元组数据类型 73
4.6.3 用list（）和tuple（）函数来转换类型 74
4.7 引用 75
4.7.1 传递引用 76
4.7.2 copy模块的copy（）和deepcopy（）函数 77
4.8 小结 78
4.9 习题 78
4.10 实践项目 79
4.10.1 逗号代码 79
4.10.2 字符图网格 79
第5章 字典和结构化数据 81
5.1 字典数据类型 81
5.1.1 字典与列表 82
5.1.2 keys（）、values（）和items（）方法 83
5.1.3 检查字典中是否存在键或值 84
5.1.4 get（）方法 84
5.1.5 setdefault（）方法 85
5.2 漂亮打印 86
5.3 使用数据结构对真实世界建模 87
5.3.1 井字棋盘 88
5.3.2 嵌套的字典和列表 91
5.4 小结 92
5.5 习题 93
5.6 实践项目 93
5.6.1 好玩游戏的物品清单 93
5.6.2 列表到字典的函数，针对好玩游戏物品清单 94
第6章 字符串操作 95
6.1 处理字符串 95
6.1.1 字符串字面量 95
6.1.2 双引号 96
6.1.3 转义字符 96
6.1.4 原始字符串 96
6.1.5 用三重引号的多行字符串 97
6.1.6 多行注释 97
6.1.7 字符串下标和切片 98
6.1.8 字符串的in和notin操作符 98
6.2 有用的字符串方法 99
6.2.1 字符串方法upper（）、lower（）、isupper（）和islower（）99
6.2.2 isX字符串方法 100
6.2.3 字符串方法startswith（）和endswith（）102
6.2.4 字符串方法join（）和split（）102
6.2.5 用rjust（）、ljust（）和center（）方法对齐文本 103
6.2.6 用strip（）、rstrip（）和lstrip（）删除空白字符 104
6.2.7 用pyperclip模块拷贝粘贴字符串 105
6.3 项目：口令保管箱 106
第1步：程序设计和数据结构 106
第2步：处理命令行参数 106
第3步：复制正确的口令 107
6.4 项目：在Wiki标记中添加无序列表 108
第1步：从剪贴板中复制和粘贴 108
第2步：分离文本中的行，并添加星号 109
第3步：连接修改过的行 109
6.5 小结 110
6.6 习题 110
6.7 实践项目 111
表格打印 111
第二部分 自动化任务
第7章 模式匹配与正则表达式 115
7.1 不用正则表达式来查找文本模式 116
7.2 用正则表达式查找文本模式 117
7.2.1 创建正则表达式对象 118
7.2.2 匹配Regex对象 118
7.2.3 正则表达式匹配复习 119
7.3 用正则表达式匹配更多模式 119
7.3.1 利用括号分组 119
7.3.2 用管道匹配多个分组 120
7.3.3 用问号实现可选匹配 121
7.3.4 用星号匹配零次或多次 121
7.3.5 用加号匹配一次或多次 122
7.3.6 用花括号匹配特定次数 122
7.4 贪心和非贪心匹配 123
7.5 findall（）方法 124
7.6 字符分类 124
7.7 建立自己的字符分类 125
7.8 插入字符和美元字符 126
7.9 通配字符 126
7.9.1 用点—星匹配所有字符 127
7.9.2 用句点字符匹配换行 127
7.10 正则表达式符号复习 128
7.11 不区分大小写的匹配 128
7.12 用sub（）方法替换字符串 129
7.13 管理复杂的正则表达式 129
7.14 组合使用re.IGNORECASE、re.DOTALL和re.VERBOSE 130
7.15 项目：电话号码和Email地址提取程序 130
第1步：为电话号码创建一个正则表达式 131
第2步：为email地址创建一个正则表达式 132
第3步：在剪贴板文本中找到所有匹配 132
第4步：所有匹配连接成一个字符串，复制到剪贴板 133
第5步：运行程序 133
第6步：类似程序的构想 134
7.16 小结 134
7.17 习题 134
7.18 实践项目 136
7.18.1 强口令检测 136
7.18.2 strip（）的正则表达式版本 136
第8章 读写文件 137
8.1 文件与文件路径 137
8.1.1 Windows上的倒斜杠以及OS X和Linux上的正斜杠 138
8.1.2 当前工作目录 139
8.1.3 绝对路径与相对路径 139
8.1.4 用os.makedirs（）创建新文件夹 140
8.1.5 os.path模块 140
8.1.6 处理绝对路径和相对路径 141
8.1.7 查看文件大小和文件夹内容 142
8.1.8 检查路径有效性 143
8.2 文件读写过程 144
8.2.1 用open（）函数打开文件 145
8.2.2 读取文件内容 145
8.2.3 写入文件 146
8.3 用shelve模块保存变量 147
8.4 用pprint.pformat（）函数保存变量 148
8.5 项目：生成随机的测验试卷文件 149
第1步：将测验数据保存在一个字典中 149
第2步：创建测验文件，并打乱问题的次序 150
第3步：创建答案选项 151
第4步：将内容写入测验试卷和答案文件 151
8.6 项目：多重剪贴板 153
第1步：注释和shelf设置 153
第2步：用一个关键字保存剪贴板内容 154
第3步：列出关键字和加载关键字的内容 154
8.7 小结 155
8.8 习题 155
8.9 实践项目 156
8.9.1 扩展多重剪贴板 156
8.9.2 疯狂填词 156
8.9.3 正则表达式查找 156
第9章 组织文件 157
9.1 shutil模块 158
9.1.1 复制文件和文件夹 158
9.1.2 文件和文件夹的移动与改名 158
9.1.3 永久删除文件和文件夹 160
9.1.4 用send2trash模块安全地删除 160
9.2 遍历目录树 161
9.7 用zipfile模块压缩文件 162
9.3.1 读取ZIP文件 163
9.3.2 从ZIP文件中解压缩 164
9.3.3 创建和添加到ZIP文件 164
9.4 项目：将带有美国风格日期的文件改名为欧洲风格日期 165
第1步：为美国风格的日期创建一个正则表达式 165
第2步：识别文件名中的日期部分 166
第3步：构成新文件名，并对文件改名 167
第4步：类似程序的想法 168
9.5 项目：将一个文件夹备份到一个ZIP文件 168
第1步：弄清楚ZIP文件的名称 168
第2步：创建新ZIP文件 169
第3步：遍历目录树并添加到ZIP文件。170
第4步：类似程序的想法 170
9.6 小结 171
9.7 习题 171
9.8 实践项目 171
9.8.1 选择性拷贝 171
9.8.2 删除不需要的文件 172
9.8.3 消除缺失的编号 172
第10章 调试 173
10.1 抛出异常 174
10.2 取得反向跟踪的字符串 175
10.3 断言 176
10.3.1 在交通灯模拟中使用断言 177
10.3.2 禁用断言 178
10.4 日志 178
10.4.1 使用日志模块 178
10.4.2 不要用print（）调试 180
10.4.3 日志级别 180
10.4.4 禁用日志 181
10.4.5 将日志记录到文件 182
10.5 IDLE的调试器 182
10.5.1 Go 183
10.5.2 Step 183
10.5.3 Over 183
10.5.4 Out 183
10.5.5 Quit 183
10.5.6 调试一个数字相加的程序 184
10.5.7 断点 185
10.6 小结 187
10.7 习题 187
10.7 实践项目 188
调试硬币抛掷 188
第11章 从Web抓取信息 189
11.1 项目：利用webbrowser模块的mapIt.py 190
第1步：弄清楚URL 190
第2步：处理命令行参数 191
第3步：处理剪贴板内容，加载浏览器 191
第4步：类似程序的想法 192
11.2 用requests模块从Web下载文件 192
11.2.1 用requests.get（）函数下载一个网页 193
11.2.2 检查错误 193
10.3 将下载的文件保存到硬盘 194
10.4 HTML 195
10.4.1 学习HTML的资源 195
10.4.2 快速复习 195
10.4.3 查看网页的HTML源代码 196
10.4.4 打开浏览器的开发者工具 197
10.4.5 使用开发者工具来寻找HTML元素 198
10.5 用BeautifulSoup模块解析HTML 199
10.5.1 从HTML创建一个BeautifulSoup对象 200
10.5.2 用select（）方法寻找元素 200
10.5.3 通过元素的属性获取数据 202
10.6 项目：“I’mFeelingLucky”Google查找 202
第1步：获取命令行参数，并请求查找页面 203
第2步：找到所有的结果 203第3步：针对每个结果打开Web浏览器 204
第4步：类似程序的想法 205
10.7 项目：下载所有XKCD漫画 205
第1步：设计程序 206
第2步：下载网页 207
第3步：寻找和下载漫画图像 207
第4步：保存图像，找到前一张漫画 208
第4步：类似程序的想法 209
10.8 用selenium模块控制浏览器 210
10.8.1 启动selenium控制的浏览器 210
10.8.2 在页面中寻找元素 211
10.8.3 点击页面 212
10.8.4 填写并提交表单 212
10.8.5 发送特殊键 213
10.8.6 点击浏览器按钮 213
10.8.7 关于selenium的更多信息 214
10.9 小结 214
10.10 习题 214
10.11 实践项目 215
10.11.1 命令行邮件程序 215
10.11.2 图像网站下载 215
10.11.32048215
10.11.4 链接验证 215
第12章 处理Excel电子表格 217
12.1 Excel文档 217
12.2 安装openpyxl模块 218
12.3 读取Excel文档 218
12.3.1 用openpyxl模块打开Excel文档 219
12.3.2 从工作簿中取得工作表 219
12.3.3 从表中取得单元格 220
12.3.4 列字母和数字之间的转换 221
12.3.5 从表中取得行和列 222
12.3.6 工作薄、工作表、单元格 223
12.4 项目：从电子表格中读取数据 223
第1步：读取电子表格数据 224
第2步：填充数据结构 225
第3步：将结果写入文件 226
第4步：类似程序的思想 227
12.5 写入Excel文档 227
12.5.1 创建并保存Excel文档 227
12.5.2 创建和删除工作表 228
12.5.3 将值写入单元格 229
12.6 项目：更新一个电子表格 229
第1步：利用更新信息建立数据结构 230
第2步：检查所有行，更新不正确的价格 231
第4步：类似程序的思想 231
12.7 设置单元格的字体风格 232
12.8 Font对象 232
12.9 公式 234
12.10 调整行和列 235
12.10.1 设置行高和列宽 235
12.10.2 合并和拆分单元格 236
12.10.3 冻结窗格 237
12.10.4 图表 238
12.11 小结 240
12.11 习题 240
12.12 实践项目 241
12.12.1 乘法表 241
12.12.2 空行插入程序 241
12.12.3 电子表格单元格翻转程序 242
12.12.4 文本文件到电子表格 242
12.12.5 电子表格到文本文件 242
第13章 处理PDF和Word文档 243
13.1 PDF文档 243
13.1.1 从PDF提取文本 244
13.1.2 解密PDF 245
13.1.3 创建PDF 246
13.1.4 拷贝页面 246
13.1.5 旋转页面 247
13.1.6 叠加页面 248
13.1.7 加密PDF 249
13.2 项目：从多个PDF中合并选择的页面 250
第1步：找到所有PDF文件 250
第2步：打开每个PDF文件 251
第3步：添加每一页 252
第4步：保存结果 252
第5步：类似程序的想法 253
13.3 Word文档 253
13.3.1 读取Word文档 254
13.3.2 从.docx文件中取得完整的文本 254
13.3.3 设置Paragraph和Run对象的样式 255
13.3.4 创建带有非默认样式的Word文档 257
13.3.5 Run属性 257
13.3.6 写入Word文档 258
13.3.7 添加标题 260
13.3.8 添加换行符和换页符 261
13.3.9 添加图像 261
13.4 小结 262
13.5 习题 262
13.6 实践项目 263
13.6.1 PDF偏执狂 263
13.6.2 定制邀请函，保存为Word文档 263
13.6.3 暴力PDF口令破解程序 264
第14章 处理CSV文件和JSON数据 265
14.1 csv模块 265
14.2.1 Reader对象 266
14.2.2 在for循环中，从Reader对象读取数据 267
14.2.3 Writer对象 268
14.2.4 delimiter和lineterminator关键字参数 269
14.3 项目：从CSV文件中删除表头 269
第1步：循环遍历每个CSV文件 270
第2步：读入CSV文件 270
第3步：写入CSV文件，没有
第一行 271
第4步：类似程序的想法 272
14.4 JSON和API 272
14.5 json模块 273
14.5.1 用loads（）函数读取
JSON 273
14.5.2 用dumps函数写出
JSON 273
14.6 项目：取得当前的天气数据 274
第1步：从命令行参数获取位置 274
第2步：下载JSON数据 275
第3步：加载JSON数据并打印天气 275
第4步：类似程序的想法 277
14.7 小结 277
14.8 习题 277
14.9 实践项目 277
Excel到CSV的转换程序 277
第15章 保持时间、计划任务和启动程序 279
15.1 time模块 279
15.1.1 time.time（）函数 279
15.1.2 time.sleep（）函数 280
15.2 数字四舍五入 281
15.3 项目：超级秒表 282
第1步：设置程序来记录时间 282
第2步：记录并打印单圈时间 283
第4步：类似程序的想法 283
15.4 datetime模块 284
15.4.1 timedelta数据类型 285
15.4.2 暂停直至特定日期 286
15.4.3 将datetime对象转换为字符串 287
15.4.4 将字符串转换成datetime对象 288
15.5 回顾Python的时间函数 288
15.6 多线程 289
15.6.1 向线程的目标函数传递参数 290
15.6.2 并发问题 291
15.7 项目：多线程XKCD下载程序 291
第1步：修改程序以使用函数 292
第2步：创建并启动线程 293
第3步：等待所有线程结束 293
15.8 从Python启动其他程序 294
15.8.1 向Popen（）传递命令行参数 295
15.8.2 TaskScheduler、launchd和
cron 296
15.8.3 用Python打开网站 296
15.8.4 运行其他Python脚本 296
15.8.5 用默认的应用程序打开文件 297
15.9 项目：简单的倒计时程序 298
第1步：倒计时 298
第2步：播放声音文件 298
第3步：类似程序的想法 299
15.10 小结 299
15.11 习题 300
15.12 实践项目 300
15.12.1 美化的秒表 300
15.12.2 计划的Web漫画下载 301
第16章 发送电子邮件和短信 303
16.1 SMTP 303
16.2 发送电子邮件 304
16.2.1 连接到SMTP服务器 304
16.2.2 发送SMTP的“Hello”消息 305
16.2.3 开始TLS加密 306
16.2.4 登录到SMTP服务器 306
16.2.5 发送电子邮件 306
16.2.6 从SMTP服务器断开 307
16.3 IMAP 307
16.4 用IMAP获取和删除电子邮件 307
16.4.1 连接到IMAP服务器 308
16.4.2 登录到IMAP服务器 309
16.4.3 搜索电子邮件 309
16.4.4 选择文件夹 309
16.4.5 执行搜索 310
16.4.6 大小限制 312
16.4.7 取邮件并标记为已读 312
16.4.8 从原始消息中获取电子邮件地址 313
16.4.9 从原始消息中获取正文 314
16.4.10 删除电子邮件 315
16.4.11 从IMAP服务器断开 315
16.5 项目：向会员发送会费提醒电子邮件 316
第1步：打开Excel文件 316
第2步：查找所有未付成员 317
第3步：发送定制的电子邮件提醒 318
16.6 用Twilio发送短信 319
16.6.1 注册Twilio账号 319
16.6.2 发送短信 320
16.7 项目：“只给我发短信”模块 321
16.8 小结 322
16.9 习题 323
16.10 实践项目 323
16.10.1 随机分配家务活的电子邮件程序 323
16.10.2 伞提醒程序 324
16.10.3 自动退订 324
16.10.4 通过电子邮件控制你的电脑 324
第17章 操作图像 327
17.1 计算机图像基础 327
17.1.1 颜色和RGBA值 328
17.1.2 坐标和Box元组 329
17.2 用Pillow操作图像 330
17.2.1 处理Image数据类型 331
17.2.2 裁剪图片 332
17.2.3 复制和粘贴图像到其他图像 333
17.2.4 调整图像大小 335
17.2.5 旋转和翻转图像 336
17.2.6 更改单个像素 338
17.3 项目：添加徽标 339
第1步：打开徽标图像 340
第2步：遍历所有文件并打开图像 341
第3步：调整图像的大小 341
第4步：添加徽标，并保存更改 342
第5步：类似程序的想法 343
17.4 在图像上绘画 344
17.4.1 绘制形状 344
17.4.2 绘制文本 346
17.5 小结 347
17.6 习题 348
17.7 实践项目 348
17.7.1 扩展和修正本章项目的程序 348
17.7.2 在硬盘上识别照片文件夹 349
17.7.3 定制的座位卡 350
第18章 用GUI自动化控制键盘和鼠标 351
18.1 安装pyautogui模块 351
18.2 走对路 352
18.2.1 通过注销关闭所有程序 352
18.2.2 暂停和自动防故障装置 352
18.3 控制鼠标移动 353
18.3.1 移动鼠标 354
18.3.2 获取鼠标位置 354
18.4 项目：“现在鼠标在哪里？”355
第1步：导入模块 355
第2步：编写退出代码和无限循环 355
第3步：获取并打印鼠标坐标。356
18.5 控制鼠标交互 357
18.5.1 点击鼠标 357
18.5.2 拖动鼠标 357
18.5.3 滚动鼠标 359
18.6 处理屏幕 360
18.6.1 获取屏幕快照 360
18.6.2 分析屏幕快照 360
18.7 项目：扩展mouseNow程序 361
18.8 图像识别 362
18.9 控制键盘 363
18.9.1 通过键盘发送一个字符串 363
18.9.2 键名 364
18.9.3 按下和释放键盘 365
18.9.4 热键组合 365
18.10 复习PyAutoGUI的函数 366
18.11 项目：自动填表程序 367
第1步：弄清楚步骤 368
第2步：建立坐标 368
第3步：开始键入数据 370
第4步：处理选择列表和单选按钮 371
第5步：提交表单并等待 372
18.12 小结 372
18.13 习题 373
18.14 实践项目 373
18.14.1 看起来很忙 373
18.14.2 即时通信机器人 373
18.14.3 玩游戏机器人指南 374
附录A 安装第三方模块 375
附录B 运行程序 377
附录C 习题答案 381
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python编程快速上手
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Effective Python
本书赞誉
译者序
前言
致谢
第1章　用Pythonic方式来思考 1
第1条：确认自己所用的Python版本 1
第2条：遵循PEP 8风格指南 3
第3条：了解bytes、str与unicode的区别 5
第4条：用辅助函数来取代复杂的表达式 8
第5条：了解切割序列的办法 10
第6条：在单次切片操作内，不要同时指定start、end和stride 13
第7条：用列表推导来取代map和filter 15
第8条：不要使用含有两个以上表达式的列表推导 16
第9条：用生成器表达式来改写数据量较大的列表推导 18
第10条：尽量用enumerate取代range 20
第11条：用zip函数同时遍历两个迭代器 21
第12条：不要在for和while循环后面写else块 23
第13条：合理利用try/except/else/finally结构中的每个代码块 25
第2章　函数 28
第14条：尽量用异常来表示特殊情况，而不要返回None 28
第15条：了解如何在闭包里使用外围作用域中的变量 30
第16条：考虑用生成器来改写直接返回列表的函数 35
第17条：在参数上面迭代时，要多加小心 37
第18条：用数量可变的位置参数减少视觉杂讯 41
第19条：用关键字参数来表达可选的行为 43
第20条：用None和文档字符串来描述具有动态默认值的参数 46
第21条：用只能以关键字形式指定的参数来确保代码明晰 49
第3章　类与继承 53
第22条：尽量用辅助类来维护程序的状态，而不要用字典和元组 53
第23条：简单的接口应该接受函数，而不是类的实例 58
第24条：以@classmethod形式的多态去通用地构建对象 62
第25条：用super初始化父类 67
第26条：只在使用Mix-in组件制作工具类时进行多重继承 71
第27条：多用public属性，少用private属性 75
第28条：继承collections.abc以实现自定义的容器类型 79
第4章　元类及属性 84
第29条：用纯属性取代get和set方法 84
第30条：考虑用@property来代替属性重构 88
第31条：用描述符来改写需要复用的@property方法 92
第32条：用__getattr__、__getattribute__和__setattr__实现按需生成的属性 97
第33条：用元类来验证子类 102
第34条：用元类来注册子类 104
第35条：用元类来注解类的属性 108
第5章　并发及并行 112
第36条：用subprocess模块来管理子进程 113
第37条：可以用线程来执行阻塞式I/O，但不要用它做平行计算 117
第38条：在线程中使用Lock来防止数据竞争 121
第39条：用Queue来协调各线程之间的工作 124
第40条：考虑用协程来并发地运行多个函数 131
第41条：考虑用concurrent.futures来实现真正的平行计算 141
第6章　内置模块 145
第42条：用functools.wraps定义函数修饰器 145
第43条：考虑以contextlib和with语句来改写可复用的try/finally代码 148
第44条：用copyreg实现可靠的pickle操作 151
第45条：应该用datetime模块来处理本地时间，而不是用time模块 157
第46条：使用内置算法与数据结构 161
第47条：在重视精确度的场合，应该使用decimal 166
第48条：学会安装由Python开发者社区所构建的模块 168
第7章　协作开发 170
第49条：为每个函数、类和模块编写文档字符串 170
第50条：用包来安排模块，并提供稳固的API 174
第51条：为自编的模块定义根异常，以便将调用者与API相隔离 179
第52条：用适当的方式打破循环依赖关系 182
第53条：用虚拟环境隔离项目，并重建其依赖关系 187
第8章　部署 193
第54条：考虑用模块级别的代码来配置不同的部署环境 193
第55条：通过repr字符串来输出调试信息 195
第56条：用unittest来测试全部代码 198
第57条：考虑用pdb实现交互调试 201
第58条：先分析性能，然后再优化 203
第59条：用tracemalloc来掌握内存的使用及泄漏情况 208
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Effective Python
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>流畅的Python
前言 xvii
第一部分 序幕
第1章 Python 数据模型 2
1.1 一摞 Python 风格的纸牌 3
1.2 如何使用特殊方法 6
1.2.1 模拟数值类型 7
1.2.2 字符串表示形式 9
1.2.3 算术运算符 10
1.2.4 自定义的布尔值 10
1.3 特殊方法一览 10
1.4 为什么 len 不是普通方法 12
1.5 本章小结 12
1.6 延伸阅读 13
第二部分 数据结构
第2章 序列构成的数组 16
2.1 内置序列类型概览 17
2.2 列表推导和生成器表达式 18
2.2.1 列表推导和可读性 18
2.2.2 列表推导同 filter 和 map 的比较 20
2.2.3 笛卡儿积 20
2.2.4 生成器表达式 21
2.3 元组不仅仅是不可变的列表 22
2.3.1 元组和记录 23
2.3.2 元组拆包 23
2.3.3 嵌套元组拆包 25
2.3.4 具名元组 26
2.3.5 作为不可变列表的元组 27
2.4 切片 28
2.4.1 为什么切片和区间会忽略最后一个元素 28
2.4.2 对对象进行切片 29
2.4.3 多维切片和省略 30
2.4.4 给切片赋值 31
2.5 对序列使用 + 和 * 31
2.6 序列的增量赋值 33
2.7 list.sort 方法和内置函数 sorted 36
2.8 用 bisect 来管理已排序的序列 37
2.8.1 用 bisect 来搜索 38
2.8.2 用 bisect.insort 插入新元素 40
2.9 当列表不是首选时 41
2.9.1 数组 41
2.9.2 内存视图 44
2.9.3 NumPy 和 SciPy 45
2.9.4 双向队列和其他形式的队列 47
2.10 本章小结 49
2.11 延伸阅读 50
第3章 字典和集合 54
3.1 泛映射类型 54
3.2 字典推导 56
3.3 常见的映射方法 57
3.4 映射的弹性键查询 61
3.4.1 defaultdict ：处理找不到的键的一个选择 61
3.4.2 特殊方法 __missing__ 62
3.5 字典的变种 65
3.6 子类化 UserDict 65
3.7 不可变映射类型 67
3.8 集合论 68
3.8.1 集合字面量 69
3.8.2 集合推导 71
3.8.3 集合的操作 71
3.9 dict 和 set 的背后 73
3.9.1 一个关于效率的实验 74
3.9.2 字典中的散列表 75
3.9.3 dict 的实现及其导致的结果 78
3.9.4 set 的实现以及导致的结果 80
3.10 本章小结 80
3.11 延伸阅读 81
第4章 文本和字节序列 83
4.1 字符问题 84
4.2 字节概要 85
4.3 基本的编解码器 88
4.4 了解编解码问题 89
4.4.1 处理 UnicodeEncodeError 90
4.4.2 处理 UnicodeDecodeError 90
4.4.3 使用预期之外的编码加载模块时抛出的 SyntaxError 91
4.4.4 如何找出字节序列的编码 92
4.4.5 BOM：有用的鬼符 93
4.5 处理文本文件 94
4.6 为了正确比较而规范化 Unicode 字符串 99
4.6.1 大小写折叠 101
4.6.2 规范化文本匹配实用函数 102
4.6.3 极端“规范化”：去掉变音符号 103
4.7 Unicode 文本排序 105
4.8 Unicode 数据库 108
4.9 支持字符串和字节序列的双模式 API 109
4.9.1 正则表达式中的字符串和字节序列 109
4.9.2 os 函数中的字符串和字节序列 111
4.10 本章小结 112
4.11 延伸阅读 113
第三部分 把函数视作对象
第5章 一等函数 118
5.1 把函数视作对象 119
5.2 高阶函数 120
5.3 匿名函数 122
5.4 可调用对象 122
5.5 用户定义的可调用类型 123
5.6 函数内省 124
5.7 从定位参数到仅限关键字参数 126
5.8 获取关于参数的信息 127
5.9 函数注解 131
5.10 支持函数式编程的包 132
5.10.1 operator 模块 132
5.10.2 使用 functools.partial 冻结参数 135
5.11 本章小结 137
5.12 延伸阅读 137
第6章 使用一等函数实现设计模式 141
6.1 案例分析：重构“策略”模式 142
6.1.1 经典的“策略”模式 142
6.1.2 使用函数实现“策略”模式 145
6.1.3 选择最佳策略：简单的方式 148
6.1.4 找出模块中的全部策略 149
6.2 “命令”模式 150
6.3 本章小结 151
6.4 延伸阅读 152
第7章 函数装饰器和闭包 154
7.1 装饰器基础知识 155
7.2 Python 何时执行装饰器 156
7.3 使用装饰器改进“策略”模式 157
7.4 变量作用域规则 159
7.5 闭包 161
7.6 nonlocal 声明 164
7.7 实现一个简单的装饰器 165
7.8 标准库中的装饰器 168
7.8.1 使用 functools.lru_cache 做备忘 168
7.8.2 单分派泛函数 170
7.9 叠放装饰器 172
7.10 参数化装饰器 173
7.10.1 一个参数化的注册装饰器 173
7.10.2 参数化 clock 装饰器 175
7.11 本章小结 177
7.12 延伸阅读 178
第四部分 面向对象惯用法
第8章 对象引用、可变性和垃圾回收 182
8.1 变量不是盒子 183
8.2 标识、相等性和别名 184
8.2.1 在 == 和 is 之间选择 185
8.2.2 元组的相对不可变性 186
8.3 默认做浅复制 187
8.4 函数的参数作为引用时 190
8.4.1 不要使用可变类型作为参数的默认值 191
8.4.2 防御可变参数 193
8.5 del 和垃圾回收 195
8.6 弱引用 196
8.6.1 WeakValueDictionary 简介 197
8.6.2 弱引用的局限 199
8.7 Python 对不可变类型施加的把戏 199
8.8 本章小结 201
8.9 延伸阅读 201
第9章 符合 Python 风格的对象 205
9.1 对象表示形式 206
9.2 再谈向量类 206
9.3 备选构造方法 208
9.4 classmethod 与 staticmethod 209
9.5 格式化显示 210
9.6 可散列的 Vector2d 213
9.7 Python 的私有属性和“受保护的”属性 218
9.8 使用 __slots__ 类属性节省空间 220
9.9 覆盖类属性 222
9.10 本章小结 224
9.11 延伸阅读 225
第10章 序列的修改、散列和切片 229
10.1 Vector 类：用户定义的序列类型 230
10.2 Vector 类第1 版：与 Vector2d 类兼容 230
10.3 协议和鸭子类型 232
10.4 Vector 类第2 版：可切片的序列 233
10.4.1 切片原理 234
10.4.2 能处理切片的 __getitem__ 方法 236
10.5 Vector 类第3 版：动态存取属性 237
10.6 Vector 类第4 版：散列和快速等值测试 240
10.7 Vector 类第5 版：格式化 244
10.8 本章小结 251
10.9 延伸阅读 251
第11章 接口：从协议到抽象基类 256
11.1 Python 文化中的接口和协议 257
11.2 Python 喜欢序列 258
11.3 使用猴子补丁在运行时实现协议 260
11.4 Alex Martelli 的水禽 262
11.5 定义抽象基类的子类 266
11.6 标准库中的抽象基类 267
11.6.1 collections.abc 模块中的抽象基类 267
11.6.2 抽象基类的数字塔 269
11.7 定义并使用一个抽象基类 270
11.7.1 抽象基类句法详解 273
11.7.2 定义 Tombola 抽象基类的子类 274
11.7.3 Tombola 的虚拟子类 276
11.8 Tombola 子类的测试方法 278
11.9 Python 使用 register 的方式 281
11.10 鹅的行为有可能像鸭子 281
11.11 本章小结 283
11.12 延伸阅读 284
第12章 继承的优缺点 289
12.1 子类化内置类型很麻烦 289
12.2 多重继承和方法解析顺序 292
12.3 多重继承的真实应用 296
12.4 处理多重继承 298
12.5 一个现代示例：Django 通用视图中的混入 301
12.6 本章小结 304
12.7 延伸阅读 304
第13章 正确重载运算符 307
13.1 运算符重载基础 308
13.2 一元运算符 308
13.3 重载向量加法运算符 + 310
13.4 重载标量乘法运算符 * 315
13.5 众多比较运算符 318
13.6 增量赋值运算符 321
13.7 本章小结 325
13.8 延伸阅读 326
第五部分 控制流程
第14章 可迭代的对象、迭代器和生成器 330
14.1 Sentence 类第1 版：单词序列 331
14.2 可迭代的对象与迭代器的对比 334
14.3 Sentence 类第2 版：典型的迭代器 337
14.4 Sentence 类第3 版：生成器函数 339
14.5 Sentence 类第4 版：惰性实现 343
14.6 Sentence 类第5 版：生成器表达式 344
14.7 何时使用生成器表达式 345
14.8 另一个示例：等差数列生成器 346
14.9 标准库中的生成器函数 349
14.10 Python 3.3 中新出现的句法： yield from 357
14.11 可迭代的归约函数 358
14.12 深入分析 iter 函数 359
14.13 案例分析：在数据库转换工具中使用生成器 360
14.14 把生成器当成协程 362
14.15 本章小结 362
14.16 延伸阅读 363
第15章 上下文管理器和 else 块 368
15.1 先做这个，再做那个： if 语句之外的 else 块 369
15.2 上下文管理器和 with 块 370
15.3 contextlib 模块中的实用工具 374
15.4 使用 @contextmanager 375
15.5 本章小结 378
15.6 延伸阅读 378
第16章 协程 381
16.1 生成器如何进化成协程 382
16.2 用作协程的生成器的基本行为 382
16.3 示例：使用协程计算移动平均值 385
16.4 预激协程的装饰器 386
16.5 终止协程和异常处理 388
16.6 让协程返回值 391
16.7 使用 yield from 393
16.8 yield from 的意义 398
16.9 使用案例：使用协程做离散事件仿真 403
16.9.1 离散事件仿真简介 403
16.9.2 出租车队运营仿真 404
16.10 本章小结 410
16.11 延伸阅读 411
第17章 使用期物处理并发 416
17.1 示例：网络下载的三种风格 416
17.1.1 依序下载的脚本 418
17.1.2 使用 concurrent.futures 模块下载 420
17.1.3 期物在哪里 421
17.2 阻塞型 I/O 和 GIL 424
17.3 使用 concurrent.futures 模块启动进程 424
17.4 实验 Executor.map 方法 426
17.5 显示下载进度并处理错误 429
17.5.1 flags2 系列示例处理错误的方式 433
17.5.2 使用 futures.as_completed 函数 435
17.5.3 线程和多进程的替代方案 437
17.6 本章小结 437
17.7 延伸阅读 438
第18章 使用 asyncio 包处理并发 442
18.1 线程与协程对比 443
18.1.1 asyncio.Future ：故意不阻塞 448
18.1.2 从期物、任务和协程中产出 449
18.2 使用 asyncio 和 aiohttp 包下载 450
18.3 避免阻塞型调用 454
18.4 改进 asyncio 下载脚本 456
18.4.1 使用 asyncio.as_completed 函数 456
18.4.2 使用 Executor 对象，防止阻塞事件循环 461
18.5 从回调到期物和协程 462
18.6 使用 asyncio 包编写服务器 466
18.6.1 使用 asyncio 包编写 TCP 服务器 467
18.6.2 使用 aiohttp 包编写 Web 服务器 471
18.6.3 更好地支持并发的智能客户端 474
18.7 本章小结 475
18.8 延伸阅读 476
第六部分 元编程
第19章 动态属性和特性 482
19.1 使用动态属性转换数据 483
19.1.1 使用动态属性访问 JSON 类数据 485
19.1.2 处理无效属性名 487
19.1.3 使用 __new__ 方法以灵活的方式创建对象 488
19.1.4 使用 shelve 模块调整 OSCON 数据源的结构 490
19.1.5 使用特性获取链接的记录 493
19.2 使用特性验证属性 498
19.2.1 LineItem 类第1 版：表示订单中商品的类 498
19.2.2 LineItem 类第2 版：能验证值的特性 499
19.3 特性全解析 500
19.3.1 特性会覆盖实例属性 501
19.3.2 特性的文档 503
19.4 定义一个特性工厂函数 504
19.5 处理属性删除操作 506
19.6 处理属性的重要属性和函数 507
19.6.1 影响属性处理方式的特殊属性 507
19.6.2 处理属性的内置函数 508
19.6.3 处理属性的特殊方法 509
19.7 本章小结 510
19.8 延伸阅读 510
第20章 属性描述符 514
20.1 描述符示例：验证属性 514
20.1.1 LineItem 类第3 版：一个简单的描述符 515
20.1.2 LineItem 类第4 版：自动获取储存属性的名称 519
20.1.3 LineItem 类第5 版：一种新型描述符 524
20.2 覆盖型与非覆盖型描述符对比 526
20.2.1 覆盖型描述符 528
20.2.2 没有 __get__ 方法的覆盖型描述符 529
20.2.3 非覆盖型描述符 530
20.2.4 在类中覆盖描述符 531
20.3 方法是描述符 531
20.4 描述符用法建议 533
20.5 描述符的文档字符串和覆盖删除操作 534
20.6 本章小结 535
20.7 延伸阅读 536
第21章 类元编程 538
21.1 类工厂函数 539
21.2 定制描述符的类装饰器 541
21.3 导入时和运行时比较 543
21.4 元类基础知识 547
21.5 定制描述符的元类 552
21.6 元类的特殊方法 __prepare__ 554
21.7 类作为对象 556
21.8 本章小结 557
21.9 延伸阅读 557
结语 560
附录 A 辅助脚本 563
Python 术语表 588
作者简介 600
关于封面 600
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>流畅的Python
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python基础教程（第2版）
第1章 基础知识
1.1 安装Python
1.1.1 Windows
1.1.2 Linux和UNIX
1.1.3 苹果机（Macintosh）
1.1.4 其他发布版
1.1.5 时常关注，保持更新
1.2 交互式解释器
1.3 算法是什么
1.4 数字和表达式
1.4.1 长整型数
1.4.2 十六进制和八进制
1.5 变量
1.6 语句
1.7 获取用户输入
1.8 函数
1.9 模块
1.9.1 cmath和复数
1.9.2 回到future
1.10 保存并执行程序
1.10.1 通过命令提示符运行Python脚本
1.10.2 让脚本像普通程序一样运行
1.10.3 注释
1.11 字符串
1.11.1 单引号字符串和转义引号
1.11.2 拼接字符串
1.11.3 字符串表示和repr
1.11.4 input和rawinpm的比较
1.11.5 长字符串、原始字符串和Unicode
1.12 小结
1.12.1 本章的新函数
1.12.2 接下来学什么
第2章 列表和元组
2.1 序列概览
2.2 通用序列操作
2.2.1 索引
2.2.2 分片
2.2.3 序列相加
2.2.4.乘法
2.2.5 成员资格
2.2.6 长度、最小值和最大值
2.3 列表：Python的“苦力”
2.3.1 list函数
2.3.2 基本的列表操作
2.3.3 列表方法
2.4 元组：不可变序列
2.4.1 tuple函数
2.4.2 基本元组操作
2.4.3 那么，意义何在
2.5 小结
2.5.1 本章的新函数
2.5.2 接下来学什么
第3章 使用字符串
3.1 基本字符串操作
3.2 字符串格式化：精简版
3.3 字符串格式化：完整版
3.3.1 简单转换
3.3.2 字段宽度和精度
3.3.3 符号、对齐和0填充
3.4 字符串方法
3.4.1 f1nd
3.4.2 join
3.4.3 jower
3.4.4 replace
3.4.5 spl1t
3.4.6 strlD
3.4.7 tralqslate
3.5 小结
3.5.1 本章的新函数
3.5.2 接下来学什么
第4章 字典：当索引不好用时
4.1 字典的使用
4.2 创建和使用字典
4.2.1 dict函数
4.2.2 基本字典操作
4.2.3 字典的格式化字符串
4.2.4 字典方法
4.3 小结
4.3.1 本章的新函数
4.3.2 接下来学什么
第5章 条件、循环和其他语句
5.1 print和import的更多信息
5.1.1 使用逗号输出
5.1.2 把某件事作为另一件事导入
5.2 赋值魔法
5.2.1 序列解包
5.2.2 链式赋值
5.2.3 增量赋值
5.3 语句块：缩排的乐趣
5.4 条件和条件语句
5.4.1 这就是布尔变量的作用
5.4.2 条件执行和if语句
5.4.3 else子句
5.4.4 elif子句
5.4.5 嵌套代码块
5.4.6 更复杂的条件
5.4.7 断言
5.5 循环
5.5.1 while循环
5.5.2 for循环
5.5.3 循环遍历字典元素
5.5.4 一些迭代工具
5.5.5 跳出循环
5.5.6 循环中的else子句
5.6 列表推导式——轻量级循环
5.7 三人行
5.7.1 什么都没发生
5.7.2 使用del删除
5.7.3 使用exec和eval执行和求值字符串
5.8 小结
5.8.1 本章的新函数
5.8.2 接下来学什么
第6章 抽象
6.1 懒惰即美德
6.2 抽象和结构
6.3 创建函数
6.3.1 记录函数
6.3.2 并非真正函数的函数
6.4 参数魔法
6.4.1 值从哪里来
6.4.2 我能改变参数吗
6.4.3 关键字参数和默认值
6.4.4 收集参数
6.4.5 反转过程
6.4.6 练习使用参数
6.5 作用域
6.6 递归
6.6.1 两个经典：阶乘和幂
6.6.2 另外一个经典：二元查找
6.7 小结
6.7.1 本章的新函数
6.7.2 接下来学什么
第7章 更加抽象
7.1 对象的魔力
7.1.1 多态
7.1.2 封装
7.1.3 继承
7.2 类和类型
7.2.1 类到底是什么
7.2.2 创建自己的类
7.2.3 特性、函数和方法
7.2.4 类的命名空间
7.2.5 指定超类
7.2.6 调查继承
7.2.7 多个超类
7.2.8 接口和内省
7.3 一些关于面向对象设计的思考
7.4 简明总结
7.4.1 本章的新函数
7.4.2 接下来学什么
第8章 异常
8.1 什么是异常
8.2 按自己的方式出错
8.2.1 raise语句
8.2.2 自定义异常类
8.3 捕捉异常
8.4 不止一个except子句
8.5 用一个块捕捉两个异常
8.6 捕捉对象
8.7 真正的全捕捉
8.8 万事大吉
8.9 最后
8.10 异常和函数
8.11 异常之禅
8.12小结
8.12.1 本章的新函数
8.12.2 接下来学什么
第9章 魔法方法、属性和迭代器
9.1 准备工作
9.2 构造方法
9.2.1 重写一般方法和特殊的构造方法
9.2.2 调用未绑定的超类构造方法
9.2.3 使用super、函数
9.3 成员访问
9.3.1 基本的序列和映射规则
9.3.2 子类化列表，字典和字符串
9.4 更多魔力
9.5 属性
9.5.1 property函数
9.5.2 静态方法和类成员方法
9.5.3 getattr、setattr和它的朋友们
9.6 迭代器
9.6.1 迭代器规则
9.6.2 从迭代器得到序列
9.7 生成器
9.7.1 创建生成器
9.7.2 递归生成器
9.7.3 通用生成器
9.7.4 生成器方法
9.7.5 模拟生成器
9.8 八皇后问题
9.8.1 生成器和回溯
9.8.2 问题
9.8.3 状态表示
9.8.4 寻找冲突
9.8.5 基本情况
9.8.6 需要递归的情况
9.8.7 打包
9.9 小结
9.9.1 本章的新函数
9.9.2 接下来学什么
第10章 充电时刻
10.1 模块
10.1.1 模块是程序
10.1.2 模块用于定义
10.1.3 让你的模块可用
10.1.4 包
10.2 探究模块
10.2.1 模块中有什么
10.2.2 用help获取帮助
10.2.3 文档
10.2.4 使用源代码
10.3 标准库：一些最爱
10.3.1 sys
10.3.2 OS
10.3.3 fileinput
10.3.4 集合、堆和双端队列
10.3.5 time
10.3.6 random
10.3.7 shelve
10.3.8 re
10.3.9 其他有趣的标准模块
10.4 小结
10.4.1 本章的新函数
10.4.2 接下来学什么
第11章 文件和素材
11.1 打开文件
11.1.1 文件模式
11.1.2 缓冲
11.2 基本文件方法
11.2.1 读和写
11.2.2 管式输出
11.2.3 读写行
11.2.4 关闭文件
11.2.5 使用基本文件方法
11.3 对文件内容进行迭代
11.3.1 按字节处理
11.3.2 按行操作
11.3.3 读取所有内容
11.3.4 使用fileinput实现懒惰行迭代
11.3.5 文件迭代器
11.4 小结
11.4.1 本章的新函数
11.4.2 接下来学什么
第12章 图形用户界面
12.1 丰富的平台
12.2 下载和安装wxpytbon
12.3 创建示例GUI应用程序
12.3.1 开始
12.3.2 窗口和组件
12.3.3 标签、标题和位置
12.3.4 更智能的布局
12.3.5 事件处理
12.3.6 完成了的程序
12.4 但是我宁愿用
12.4..1 使用Tkinter
12.4.2 使用Jython和Swing
12.4..3 使用其他开发包
12.5 小结
第13章 数据库支持
13.1 Python数据库API
13.1.1 全局变量
13.1.2 异常
13.1.3 连接和游标
13.1.4 类型
13.2 SQLite和PySQLite
13.2.1 入门
13.2.2 数据库应用程序示例
13.3 小结
13.3.1 本章的新函数
13.3.2 接下来学什么
第14章 网络编程
14.1 少数几个网络设计模块
14.1.1 socket模块
14.1.2 urllib和urllib2模块
14.1.3 其他模块
14.2 SocketServer和它的朋友们
14.3 多连接
14.3.1 使用SocketServer进行分叉和线程处理
14.3.2 带有select和port的异步I／O
14.4 Twisted
14.4.1 下裁并安装Twisted
14.4.2 编写Twisted服务器
14.5 小结
14.5.1 本章的新函数
14.5.2 接下来学什么
第15章 Python和万维网
15.1 屏幕抓取
15.1.1 Tidy和XHTML解析
……
第16章 测试
第17章 扩展Python
第18章 程序打包
第19章 好玩的编程
第20章 项目1：即时标记
第21章 项目2：画幅好画
第22章 项目3：万能的XML
第23章 项目4：新闻聚合
第24章 项目5：虚拟茶话会
第25章 项目6：使用CGI进行远程编辑
第26章 项目7：自定义电子公告板
第27章 项目8：使用XML-RPC进行文件共享
第28章 项目9：文件共享2——GUI版本
第29章 项目10：DIY街机游戏
附录A 简明版本
附录B Python参考手册
附录C 在线资源
附录D Python3.0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python基础教程（第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>父与子的编程之旅
第1章　出发吧　　1
1.1　安装Python　　1
1.2　从IDLE 启动Python　　3
1.3　来点指令吧　　4
1.4　与Python 交互　　6
1.5　该编程了　　7
1.6　运行你的第一个程序　　9
1.7　如果出问题　　10
1.8　你的第二个程序　　12
第2章　记住内存和变量　　15
2.1　输入、处理和输出　　15
2.2　名字　　17
2.3　名字里是什么　　21
2.4　数字和字符串　　22
2.5　它们有多“可变”　　23
2.6　全新的我　　24
第3章　基本数学运算　　27
3.1　四大基本运算　　27
3.2　操作符　　29
3.3　运算顺序　　30
3.4　另外两个操作符　　32
3.5　非常大和非常小　　34
第4章　数据的类型　　39
4.1　改变类型　　39
4.2　得到更多信息：type()　　42
4.3　类型转换错误　　43
4.4　使用类型转换　　43
第5章　输入　　45
5.1　raw_input()　　45
5.2　print 命令和逗号　　46
5.3　输入数字　　48
5.4　来自互联网的输入　　50
第6章　GUI—图形用户界面　　54
6.1　什么是GUI　　54
6.2　第一个GUI　　55
6.3　GUI 输入　　56
6.4　选择你的口味　　57
6.5　再看猜数游戏……　　60
6.6　其他GUI 组件　　61
第7章　判断再判断　　64
7.1　测试，测试　　64
7.2　缩进　　66
7.3　是不是有问题　　67
7.4　其他类型的测试　　68
7.5　如果测试为假会怎么样　　69
7.6　测试多个条件　　71
7.7　使用and　　72
7.8　使用or　　73
7.9　使用not　　73
第8章　转圈圈　　77
8.1　计数循环　　78
8.2　使用计数循环　　80
8.3　一条捷径—range()　　81
8.4　风格问题—循环变量名　　83
8.5　按步长计数　　85
8.6　没有数字的计数　　87
8.7　关于这个问题……　　88
8.8　 跳出循环—break 和continue　　89
第9章　全都为了你—注释　　93
9.1　增加注释　　93
9.2　单行注释　　94
9.3　行末注释　　94
9.4　多行注释　　94
9.5　注释风格　　95
9.6　注释掉　　96
第10章　游戏时间到了　　98
第11章　嵌套与可变循环　　103
11.1　嵌套循环　　103
11.2　可变循环　　105
11.3　可变嵌套循环　　106
11.4　更多可变嵌套循环　　107
11.5　使用嵌套循环　　109
第12章　 收集起来—列表与字典　　116
12.1　什么是列表　　116
12.2　创建列表　　117
12.3　向列表增加元素　　117
12.4　这个点是什么　　118
12.5　列表可以包含任何内容　　118
12.6　从列表获取元素　　119
12.7　列表“分片”　　120
12.8　修改元素　　122
12.9　 向列表增加元素的其他方法　　122
12.10　从列表删除元素　　124
12.11　搜索列表　　125
12.12　循环处理列表　　126
12.13　列表排序　　127
12.14　可改变和不可改变　　130
12.15　双重列表：数据表　　130
12.16　字典　　133
第13章　函数　　140
13.1　函数—积木　　140
13.2　调用函数　　142
13.3　向函数传递参数　　143
13.4　有多个参数的函数　　146
13.5　返回值的函数　　148
13.6　变量作用域　　149
13.7　强制为全局　　152
13.8　关于变量命名的一点建议　　153
第14章　对象　　155
14.1　真实世界中的对象　　155
14.2　Python 中的对象　　156
14.3　对象 = 属性+ 方法　　157
14.4　这个点是什么　　157
14.5　创建对象　　158
14.6　一个示例类—HotDog　　163
14.7　隐藏数据　　168
14.8　多态和继承　　168
14.9　未雨绸缪　　170
第15章　 模块　　173
15.1　什么是模块　　173
15.2　为什么使用模块　　173
15.3　积木桶　　174
15.4　如何创建模块　　174
15.5　如何使用模块　　174
15.6　命名空间　　176
15.7　标准模块　　179
第16章　 图形　　183
16.1　寻求帮助—Pygame　　183
16.2　Pygame 窗口　　183
16.3　在窗口中画图　　185
16.4　单个像素　　194
16.5　图像　　198
16.6　动起来　　200
16.7　动画　　201
16.8　更流畅的动画　　202
16.9　让球反弹　　203
16.10　让球翻转　　206
第17章　 动画精灵和碰撞检测　　209
17.1　动画精灵　　209
17.2　嘣! 碰撞检测　　215
17.3　统计时间　　219
第18章　一种新的输入—事件　　224
18.1　事件　　224
18.2　键盘事件　　226
18.3　鼠标事件　　230
18.4　定时器事件　　232
18.5　另一个游戏—PyPong　　234
第19章　声音　　246
19.1　 从Pygame 寻求更多帮助—mixer　　246
19.2　制造声音与播放声音　　247
19.3　播放声音　　247
19.4　控制音量　　250
19.5　重复音乐　　252
19.6　为PyPong 添加声音　　252
19.7　更多声音　　253
19.8　为PyPong 添加音乐　　257
第20章　更多GUI　　261
20.1　使用PyQt　　261
20.2　让GUI 做点事情　　266
20.3　事件处理器的返回　　268
20.4　移动按钮　　269
20.5　更多有用的GUI　　269
20.6　TempGUI　　269
20.7　菜单上是什么　　275
第21章　打印格式化与字符串　　281
21.1　换行　　282
21.2　水平间隔—制表符　　283
21.3　在字符串中插入变量　　285
21.4　数字格式化　　286
21.5　格式化的新方法　　291
21.6　更多字符串处理　　292
第22章　文件输入与输出　　299
22.1　什么是文件　　299
22.2　文件名　　300
22.3　文件位置　　301
22.4　打开文件　　304
22.5　读文件　　305
22.6　文本文件和二进制文件　　307
22.7　写文件　　309
22.8　 在文件中保存内容：pickle　　312
22.9　 又到了游戏时间—Hangman　　314
第23章　碰运气—随机性　　322
23.1　什么是随机性　　322
23.2　掷骰子　　323
23.3　创建一副牌　　328
23.4　Crazy Eights　　332
第24章　计算机仿真　　345
24.1　真实世界建模　　345
24.2　Lunar Lander　　346
24.3　跟踪时间　　351
24.4　时间对象　　352
24.5　把时间保存到文件　　355
24.6　电子宠物　　357
第25章　Skier 游戏的说明　　368
25.1　滑雪者　　368
25.2　障碍物　　372
第26章　Python Battle　　381
26.1　Python Battle　　381
26.2　 创建一个Python Battle机器人　　383
26.3　更复杂的机器人　　385
26.4　坐标系统　　385
第27章　接下来呢　　390
27.1　致年龄小的读者　　390
27.2　Python　　391
27.3　游戏编程与Pygame　　391
27.4　 其他语言的游戏编程（非Python）　　391
27.5　传承BASIC　　392
27.6　移动应用　　392
27.7　回顾　　392
附录A　变量命名规则　　394
附录B　Python 2 与Python 3的差异　　396
附录C　自测题答案　　399
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>父与子的编程之旅
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python源码剖析
第0章 Python源码剖析——编译Python
0.1 Python总体架构
0.2 Python源代码的组织
0.3 Windows环境下编译Python
0.4 Unix/Linux环境下编译Python
0.5 修改Python源代码
0.6 通往Python之路
0.7 一些注意事项
第1部分 Python内建对象
第1章 Python对象初探
1.1 Python内的对象
1.2 类型对象
1.3 Python对象的多态性
1.4 引用计数
1.5 Python对象的分类
第2章 Python中的整数对象
2.1 初识PyIntObject对象
2.2 PyIntObject对象的创建和维护
2.3 Hack PyIntObject
第3章 Python中的字符串对象
3.1 PyStringObject与PyString_Type
3.2 创建PyStringObject对象
3.3 字符串对象的intern机制
3.4 字符缓冲池
3.5 PyStringObject效率相关问题
3.6 Hack PyStringObject
第4章 Python中的List对象
4.1 PyListObject对象
4.2 PyListObject对象的创建与维护
4.3 PyListObject对象缓冲池
4.4 Hack PyListObject
第5章 Python中的Dict对象
5.1 散列表概述
5.2 PyDictObject
5.3 PyDictObject的创建和维护
5.4 PyDictObject对象缓冲池
5.5 Hack PyDictObject
第6章 最简单的Python模拟——Small Python
6.1 Small Python
6.2 对象机制
6.3 解释过程
6.4 交互式环境
第2部分 Python虚拟机
第7章 Python的编译结果——Code对象与pyc文件
7.1 Python程序的执行过程
7.2 Python编译器的编译结果——PyCodeObject对象
7.3 Pyc文件的生成
7.4 Python的字节码
7.5 解析pyc文件
第8章 Python虚拟机框架
8.1 Python虚拟机中的执行环境
8.2 名字、作用域和名字空间
8.3 Python虚拟机的运行框架
8.4 Python运行时环境初探
第9章 Python虚拟机中的一般表达式
9.1 简单内建对象的创建
9.2 复杂内建对象的创建
9.3 其他一般表达式
第10章 Python虚拟机中的控制流
10.1 Python虚拟机中的if控制流
10.2 Python虚拟机中的for循环控制流
10.3 Python虚拟机中的while循环控制结构
10.4 Python虚拟机中的异常控制流
第11章 Python虚拟机中的函数机制
11.1 PyFunctionObject对象
11.2 无参函数调用
11.3 函数执行时的名字空间
11.4 函数参数的实现
11.5 函数中局部变量的访问
11.6 嵌套函数、闭包与decorator
第12章 Python虚拟机中的类机制
12.1 Python中的对象模型
12.2 从type对象到class对象
12.3 用户自定义class
12.4 从class对象到instance对象
12.5 访问instance对象中的属性
12.6 千变万化的descriptor
第13章 Python运行环境初始化
13.1 线程环境初始化
13.2 系统module初始化
13.3 激活Python虚拟机
第14章 Python模块的动态加载机制
14.1 import前奏曲
14.2 Python中import机制的黑盒探测
14.3 import机制的实现
14.4 Python中的import操作
14.5 与module有关的名字空间问题
第15章 Python多线程机制
15.1 GIL与线程调度
15.2 初见Python Thread
15.3 Python线程的创建
15.4 Python线程的调度
15.5 Python子线程的销毁
15.6 Python线程的用户级互斥与同步
15.7 高级线程库——threading
第16章 Python的内存管理机制
16.1 内存管理架构
16.2 小块空间的内存池
16.3 循环引用的垃圾收集
16.4 Python中的垃圾收集
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python源码剖析
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python核心编程（第二版）
第1部分　Python核心
第1章　欢迎来到Python世界
1.1　什么是Python
1.2　起源
1.3　特点
1.3.1　高级
1.3.2　面向对象
1.3.3　可升级
1.3.4　可扩展
1.3.5　可移植性
1.3.6　易学
1.3.7　易读
1.3.8　易维护
1.3.9　健壮性
1.3.10　高效的快速原型开发工具
1.3.11　内存管理器
1.3.12　解释性和（字节）编译性
1.4　下载和安装Python
1.5　运行Python
1.5.1　命令行上的交互式解释器
1.5.2　从命令行启动脚本
1.5.3　集成开发环境
1.5.4　其他的集成开发环境和执行环境
1.6　Python文档
1.7　比较Python（Python与其他语言的比较）
1.8　其他实现
1.9　练习
第2章　快速入门
2.1　程序输出，print语句及“Hello World!”
2.2　程序输入和raw_input（）内建函数
2.3　注释
2.4　操作符
2.5　变量和赋值
2.6　数字
2.7　字符串
2.8　列表和元组
2.9　字典
2.10　代码块及缩进对齐
2.11　if语句
2.12　while循环
2.13　for循环和range（）内建函数
2.14　列表解析
2.15　文件和内建函数open（）、file（）
2.16　错误和异常
2.17　函数
2.17.1　如何定义函数
2.17.2　如何调用函数
2.17.3　默认参数
2.18　类
2.19　模块
2.19.1　如何导入模块
2.19.2　如何访问一个模块函数或访问一个模块变量
2.20　实用的函数
2.21　练习
第3章　Python基础
3.1　语句和语法
3.1.1　注释（#）
3.1.2　继续（\）
3.1.3　多个语句构成代码组（:）
3.1.4　代码组由不同的缩进分隔
3.1.5　同一行书写多个语句（;）
3.1.6　模块
3.2　变量赋值
3.2.1　赋值操作符
3.2.2　增量赋值
3.2.3　多重赋值
3.2.4　“多元”赋值
3.3　标识符
3.3.1　合法的Python标识符
3.3.2　关键字
3.3.3　内建
3.3.4　专用下划线标识符
3.4　基本风格指南
3.4.1　模块结构和布局
3.4.2　在主程序中书写测试代码
3.5　内存管理
3.5.1　变量定义
3.5.2　动态类型
3.5.3　内存分配
3.5.4　引用计数
3.5.5　垃圾收集
3.6　第一个Python程序
3.7　相关模块和开发工具
3.8　练习
第4章　Python对象
4.1　Python 对象
4.2　标准类型
4.3　其他内建类型
4.3.1　类型对象和type类型对象
4.3.2　None--Python的Null对象
4.4　内部类型
4.4.1　代码对象
4.4.2　帧对象
4.4.3　跟踪记录对象
4.4.4　切片对象
4.4.5　省略对象
4.4.6　XRange 对象
4.5　标准类型操作符
4.5.1　对象值的比较
4.5.2　对象身份比较
4.5.3　布尔类型
4.6　标准类型内建函数
4.6.1　type（）
4.6.2　cmp（）
4.6.3　str（）和repr（）（及``操作符）
4.6.4　type（）和isinstance（）
4.6.5　Python类型操作符和内建函数总结
4.7　类型工厂函数
4.8　标准类型的分类
4.8.1　存储模型
4.8.2　更新模型
4.8.3　访问模型
4.9　不支持的类型
4.10　练习
第5章　数字
5.1　数字简介
5.1.1　如何创建数值对象并用其赋值（数字对象）
5.1.2　如何更新数字对象
5.1.3　如何删除数字对象
5.2　整型
5.2.1　布尔型
5.2.2　标准整型
5.2.3　长整型
5.2.4　整型和长整型的统一
5.3　双精度浮点型
5.4　复数
5.5　操作符
5.5.1　混合模式操作符
5.5.2　标准类型操作符
5.5.3　算术操作符
5.5.4　*位操作符（只适用于整型）
5.6　内建函数与工厂函数
5.6.1　标准类型函数
5.6.2　数字类型函数
5.6.3　仅用于整型的函数
5.7　其他数字类型
5.7.1　布尔“数”
5.7.2　十进制浮点型
5.8　相关模块
5.9　练习
第6章　序列：字符串、列表和元组
6.1　序列
6.1.1　标准类型操作符
6.1.2　序列类型操作符
6.1.3　内建函数（BIF）
6.2　字符串
6.3　字符串和操作符
6.3.1　标准类型操作符
6.3.2　序列操作符切片（[]和[:]）
6.4　只适用于字符串的操作符
6.4.1　格式化操作符（％）
6.4.2　字符串模板: 更简单的替代品
6.4.3　原始字符串操作符（r/R）
6.4.4　Unicode字符串操作符（u/U）
6.5　内建函数
6.5.1　标准类型函数
6.5.2　序列类型函数
6.5.3　字符串类型函数
6.6　字符串内建函数
6.7　字符串的独特特性
6.7.1　特殊字符串和控制字符
6.7.2　三引号
6.7.3　字符串不变性
6.8　Unicode
6.8.1　术语
6.8.2　什么是Unicode
6.8.3　怎样使用Unicode
6.8.4　Codec是什么
6.8.5　编码解码
6.8.6　把Unicode应用到实际应用中
6.8.7　从现实中得来的教训
6.8.8　Python的Unicode支持
6.9　相关模块
6.10　字符串关键点总结
6.11　列表
6.12　操作符
6.12.1　标准类型操作符
6.12.2　序列类型操作符
6.12.3　列表类型操作符和列表解析
6.13　内建函数
6.13.1　标准类型函数
6.13.2　序列类型函数
6.13.3　列表类型内建函数
6.14　列表类型的内建函数
6.15　列表的特殊特性
6.16　元组
6.17　元组操作符和内建函数
6.17.1　标准类型操作符、序列类型操作符和内建函数
6.17.2　元组类型操作符和内建函数、内建方法
6.18　元组的特殊特性
6.18.1　不可变性给元组带来了什么影响
6.18.2　元组也不是那么“不可变”
6.18.3　默认集合类型
6.18.4　单元素元组
6.18.5　字典的关键字
6.19　相关模块
6.20　*拷贝Python对象、浅拷贝和深拷贝
6.21　序列类型小结
6.22　练习
第7章　映像和集合类型
7.1　映射类型：字典
7.1.1　如何创建字典和给字典赋值
7.1.2　如何访问字典中的值
7.1.3　如何更新字典
7.1.4　如何删除字典元素和字典
7.2　映射类型操作符
7.2.1　标准类型操作符
7.2.2　映射类型操作符
7.3　映射类型的内建函数和工厂函数
7.3.1　标准类型函数[type（）、str（）和cmp（）]
7.3.2　映射类型相关的函数
7.4　映射类型内建方法
7.5　字典的键
7.5.1　不允许一个键对应多个值
7.5.2　键必须是可哈希的
7.6　集合类型
7.6.1　如何创建集合类型和给集合赋值
7.6.2　如何访问集合中的值
7.6.3　如何更新集合
7.6.4　如何删除集合中的成员和集合
7.7　集合类型操作符
7.7.1　标准类型操作符（所有的集合类型）
7.7.2　集合类型操作符（所有的集合类型）
7.7.3　集合类型操作符（仅适用于可变集合）
7.8　内建函数
7.8.1　标准类型函数
7.8.2　集合类型工厂函数
7.9　集合类型内建方法
7.9.1　方法（所有的集合方法）
7.9.2　方法（仅适用于可变集合）
7.9.3　操作符和内建方法比较
7.10　集合类型总结表
7.11　相关模块
7.12　练习
第8章　条件和循环
8.1　if语句
8.1.1　多重条件表达式
8.1.2　单一语句的代码块
8.2　else语句
8.3　elif（即else-if）语句
8.4　条件表达式（即“三元操作符”）
8.5　while语句
8.5.1　一般语法
8.5.2　计数循环
8.5.3　无限循环
8.6　for语句
8.6.1　一般语法
8.6.2　用于序列类型
8.6.3　用于迭代器类型
8.6.4　range（）内建函数
8.6.5　xrange（） 内建函数
8.6.6　与序列相关的内建函数
8.7　break语句
8.8　continue语句
8.9　pass语句
8.10　再谈else语句
8.11　迭代器和iter（）函数
8.11.1　什么是迭代器
8.11.2　为什么要迭代器
8.11.3　如何迭代
8.11.4　使用迭代器
8.11.5　可变对象和迭代器
8.11.6　如何创建迭代器
8.12　列表解析
8.13　生成器表达式
8.14　相关模块
8.15　练习
第9章　文件和输入输出
9.1　文件对象
9.2　文件内建函数（open（）和file（））
9.2.1　工厂函数file（）
9.2.2　通用换行符支持（UNS）
9.3　文件内建方法
9.3.1　输入
9.3.2　输出
9.3.3　文件内移动
9.3.4　文件迭代
9.3.5　其他
9.3.6　文件方法杂项
9.4　文件内建属性
9.5　标准文件
9.6　命令行参数
9.7　文件系统
9.8　文件执行
9.9　永久存储模块
9.9.1　pickle和marshal模块
9.9.2　DBM风格的模块
9.9.3　shelve模块
9.10　相关模块
9.11　练习
第10章　错误和异常
10.1　什么是异常
10.1.1　错误
10.1.2　异常
10.2　Python 中的异常
10.3　检测和处理异常
10.3.1　try-except语句
10.3.2　包装内建函数
10.3.3　带有多个except的try语句
10.3.4　处理多个异常的except语句
10.3.5　捕获所有异常
10.3.6　“异常参数”
10.3.7　在应用使用我们封装的函数
10.3.8　else子句
10.3.9　finally子句
10.3.10　try-finally语句
10.3.11　try-except-else-finally：厨房一锅端
10.4　上下文管理
10.4.1　with语句
10.4.2　*上下文管理协议
10.5　*字符串作为异常
10.6　触发异常
10.7　断言
10.8　标准异常
10.9　*创建异常
10.10　（现在）为什么用异常
10.11　到底为什么要异常
10.12　异常和sys模块
10.13　相关模块
10.14　练习
第11章　函数和函数式编程
11.1　什么是函数？
11.1.1　函数vs过程
11.1.2　返回值与函数类型
11.2　调用函数
11.2.1　函数操作符
11.2.2　关键字参数
11.2.3　默认参数
11.2.4　参数组
11.3　创建函数
11.3.1　def语句
11.3.2　声明与定义比较
11.3.3　前向引用
11.3.4　函数属性
11.3.5　内部/内嵌函数
11.3.6　*函数（与方法）装饰器
11.4　传递函数
11.5　Formal Arguments
11.5.1　位置参数
11.5.2　默认参数
11.6　可变长度的参数
11.6.1　非关键字可变长参数（元组）
11.6.2　关键字变量参数（字典）
11.6.3　调用带有可变长参数对象函数
11.7　函数式编程
11.7.1　匿名函数与lambda
11.7.2　内建函数apply（）、filter（）、map（）、reduce（）
11.7.3　偏函数应用
11.8　变量作用域
11.8.1　全局变量与局部变量
11.8.2　globa语句
11.8.3　作用域的数字
11.8.4　闭包
11.8.5　作用域和lambda
11.8.6　变量作用域和名称空间
11.9　*递归
11.10　生成器
11.10.1　简单的生成器特性
11.10.2　加强的生成器特性
11.11　练习
第12章　模块
12.1　什么是模块
12.2　模块和文件
12.2.1　模块名称空间
12.2.2　搜索路径和路径搜索
12.3　名称空间
12.3.1　名称空间与变量作用域比较
12.3.2　名称查找、确定作用域、覆盖
12.3.3　无限制的名称空间
12.4　导入模块
12.4.1　import语句
12.4.2　from-import语句
12.4.3　多行导入
12.4.4　扩展的import语句（as）
12.5　模块导入的特性
12.5.1　载入时执行模块
12.5.2　导入（import）和加载（load）
12.5.3　导入到当前名称空间的名称
12.5.4　被导入到导入者作用域的名字
12.5.5　关于__future__
12.5.6　警告框架
12.5.7　从ZIP文件中导入模块
12.5.8　“新的”导入钩子
12.6　模块内建函数
12.6.1　__import__（）
12.6.2　globals（）和locals（）
12.6.3　reload（）
12.7　包
12.7.1　目录结构
12.7.2　使用from-import导入包
12.8　模块的其他特性
12.8.1　自动载入的模块
12.8.2　阻止属性导入
12.8.3　不区分大小的导入
12.8.4　源代码编码
12.8.5　导入循环
12.8.6　模块执行
12.9　相关模块
12.10　练习
第13章　面向对象编程
13.1　引言
13.2　面向对象编程
13.2.1　面向对象设计与面向对象编程的关系
13.2.2　现实中的问题
13.2.3　*常用术语
13.3　类
13.3.1　创建类
13.3.2　声明与定义
13.4　类属性
13.4.1　类的数据属性
13.4.2　Methods
13.4.3　决定类的属性
13.4.4　特殊的类属性
13.5　实例
13.5.1　初始化：通过调用类对象来创建实例
13.5.2　__init__（）“构造器”方法
13.5.3　__new__（）“构造器”方法
13.5.4　__del__（）“解构器”方法
13.6　实例属性
13.6.1　“实例化”实例属性（或创建一个更好的构造器）
13.6.2　查看实例属性
13.6.3　特殊的实例属性
13.6.4　建类型属性
13.6.5　实例属性vs类属性
13.7　绑定和方法调用
13.7.1　调用绑定方法
13.7.2　调用非绑定方法
13.8　静态方法和类方法
13.8.1　staticmethod（）和classmethod（）内建函数
13.8.2　使用函数修饰符
13.9　组合
13.10　子类和派生
13.11　继承
13.11.1　__bases__类属性
13.11.2　通过继承覆盖方法
13.11.3　从标准类型派生
13.11.4　多重继承
13.12　类、实例和其他对象的内建函数
13.12.1　issubclass（）
13.12.2　isinstance（）
13.12.3　hasattr（）、getattr（）、setattr（）、delattr（）
13.12.4　dir（）
13.12.5　super（）
13.12.6　vars（）
13.13　用特殊方法定制类
13.13.1　简单定制（RoundFloat2）
13.13.2　数值定制（Time60）
13.13.3　迭代器（RandSeq和AnyIter）
13.13.4　*多类型定制（NumStr）
13.14　私有化
13.15　*授权
13.15.1　包装
13.15.2　实现授权
13.16　新式类的高级特性（Python 2.2+）
13.16.1　新式类的通用特性
13.16.2　__slots__类属性
13.16.3　__getattribute__（）特殊方法
13.16.4　描述符
13.16.5　元类和__metaclass__
13.17　相关模块和文档
13.18　练习
第14章　执行环境
14.1　可调用对象
14.1.1　函数
14.1.2　方法
14.1.3　类
14.1.4　类的实例
14.2　代码对象
14.3　可执行的对象声明和内建函数
14.3.1　callable（）
14.3.2　compile（）
14.3.3　eval（）
14.3.4　exec
14.3.5　input（）
14.3.6　使用Python在运行时生成和执行Python代码
14.4　执行其他（Python）程序
14.4.1　导入
14.4.2　execfile（）
14.4.3　将模块作为脚本执行
14.5　执行其他（非Python）程序
14.5.1　os.system（）
14.5.2　os.popen（）
14.5.3　os.fork（）、os.exec*（）、os.wait*（）
14.5.4　os.spawn*（）
14.5.5　subprocess 模块
14.5.6　相关函数
14.6　受限执行
14.7　结束执行
14.7.1　sys.exit（） and SystemExit
14.7.2　sys.exitfunc（）
14.7.3　os._exit（） 函数
14.7.4　os.kill（） Function
14.8　各种操作系统接口
14.9　相关模块
14.10　练习
第2部分　高级主题
第15章　正则表达式
15.1　引言/动机
15.2　正则表达式使用的特殊符号和字符
15.2.1　用管道符号（|）匹配多个正则表达式模式
15.2.2　匹配任意一个单个的字符（.）
15.2.3　从字符串的开头或结尾或单词边界开始匹配（^/$ /\b /\B ）
15.2.4　创建字符类（[]）
15.2.5　指定范围（-）和否定（^）
15.2.6　使用闭包操作符（*，+，?，{}）实现多次出现/重复匹配
15.2.7　特殊字符表示、字符集
15.2.8　用圆括号（（））组建组
15.3　正则表达式和Python语言
15.3.1　re模块：核心函数和方法
15.3.2　使用compile（）编译正则表达式
15.3.3　匹配对象和group（）、groups（）方法
15.3.4　用match（）匹配字符串
15.3.5　search（）在一个字符串中查找一个模式（搜索与匹配的比较）
15.3.6　匹配多个字符串（|）
15.3.7　匹配任意单个字符（.）
15.3.8　创建字符集合（[]）
15.3.9　重复、特殊字符和子组
15.3.10　从字符串的开头或结尾匹配及在单词边界上的匹配
15.3.11　用findall（）找到每个出现的匹配部分
15.3.12　用sub（）（和subn（））进行搜索和替换
15.3.13　用split（）分割（分隔模式）
15.4　正则表达式示例
15.4.1　匹配一个字符串
15.4.2　搜索与匹配的比较，“贪婪”匹配
15.5　练习
第16章　网络编程
16.1　引言
16.1.1　什么是客户端/服务器架构
16.1.2　客户端/服务器网络编程
16.2　套接字：通信端点
16.2.1　什么是套接字
16.2.2　套接字地址：主机与端口
16.2.3　面向连接与无连接
16.3　Python中的网络编程
16.3.1　socket（）模块函数
16.3.2　套接字对象（内建）方法
16.3.3　创建一个TCP服务器
16.3.4　创建TCP客户端
16.3.5　运行我们的客户端与TCP服务器
16.3.6　创建一个UDP服务器
16.3.7　创建一个UDP客户端
16.3.8　执行UDP服务器和客户端
16.3.9　Socket模块属性
16.4　*SocketServer模块
16.4.1　创建一个SocketServerTCP服务器
16.4.2　创建SocketServerTCP客户端
16.4.3　执行TCP服务器和客户端
16.5　Twisted框架介绍
16.5.1　创建一个Twisted Reactor TCP服务器
16.5.2　创建一个Twisted Reactor TCP客户端
16.5.3　执行TCP服务器和客户端
16.6　相关模块
16.7　练习
第17章　网络客户端编程
17.1　什么是因特网客户端
17.2　文件传输
17.2.1　文件传输网际协议
17.2.2　文件传输协议（FTP）
17.2.3　Python和FTP
17.2.4　ftplib.FTP类方法
17.2.5　交互式FTP示例
17.2.6　客户端FTP程序举例
17.2.7　FTP的其他方面
17.3　网络新闻
17.3.1　Usenet与新闻组
17.3.2　网络新闻传输协议（NNTP）
17.3.3　Python和NNTP
17.3.4　nntplib.NNTP类方法
17.3.5　交互式NNTP举例
17.3.6　客户端程序NNTP举例
17.3.7　NNTP的其他方面
17.4　电子邮件
17.4.1　电子邮件系统组件和协议
17.4.2　发送电子邮件
17.4.3　Python和SMTP
17.4.4　smtplib.SMTP类方法
17.4.5　交互式SMTP示例
17.4.6　SMTP的其他方面
17.4.7　接收电子邮件
17.4.8　POP和IMAP
17.4.9　Python和POP3
17.4.10　交互式POP3举例
17.4.11　poplib.POP3类方法
17.4.12　客户端程序SMTP和POP3举例
17.5　相关模块
17.5.1　电子邮件
17.5.2　其他网络协议
17.6　练习
第18章　多线程编程
18.1　引言/动机
18.2　线程和进程
18.2.1　什么是进程
18.2.2　什么是线程
18.3　Python、线程和全局解释器锁
18.3.1　全局解释器锁（GIL）
18.3.2　退出线程
18.3.3　在Python中使用线程
18.3.4　没有线程支持的情况
18.3.5　Python的threading模块
18.4　thread模块
18.5　threading模块
18.5.1　Thread类
18.5.2　斐波那契、阶乘和累加和
18.5.3　threading模块中的其他函数
18.5.4　生产者-消费者问题和Queue模块
18.6　相关模块
18.7　练习
第19章　图形用户界面编程
19.1　简介
19.1.1　什么是Tcl、Tk和Tkinter
19.1.2　安装和使用Tkinter　533
19.1.3　客户端/服务器架构　534
19.2　Tkinter与Python编程　534
19.2.1　Tkinter模块：把Tk引入你的程序
19.2.2　GUI程序开发简介
19.2.3　顶层窗口：Tkinter.Tk（）
19.2.4　Tk组件
19.3　Tkinter举例
19.3.1　标签组件
19.3.2　按钮组件
19.3.3　标签和按钮组件
19.3.4　标签、按钮和进度条组件
19.3.5　偏函数应用举例
19.3.6　中级Tkinter范例
19.4　其他GUI简介
19.4.1　Tk Interface eXtensions （Tix）
19.4.2　Python MegaWidgets （PMW）
19.4.3　wxWidgets和wxPython
19.4.4　GTK+和PyGTK
19.5　相关模块和其他GUI
19.6　练习
第20章　Web编程
20.1　介绍
20.1.1　Web应用：客户端/服务器计算
20.1.2　因特网
20.2　使用Python进行Web应用：创建一个简单的Web客户端
20.2.1　统一资源定位符
20.2.2　urlparse模块
20.2.3　urllib模块
20.2.4　urllib2模块
20.3　高级Web客户端
20.4　CGI：帮助Web服务器处理客户端数据
20.4.1　CGI介绍
20.4.2　CGI应用程序
20.4.3　cgi模块
20.5　建立CGI应用程序
20.5.1　建立Web服务器
20.5.2　建立表单页
20.5.3　生成结果页
20.5.4　生成表单和结果页面
20.5.5　全面交互的Web站点
20.6　在CGI中使用Unicode编码
20.7　高级CGI
20.7.1　Mulitipart表单提交和文件的上传
20.7.2　多值字段
20.7.3　cookie
20.7.4　使用高级CGI
20.8　Web（HTTP）服务器
20.9　相关模块
20.10　练习
第21章　数据库编程
21.1　介绍
21.1.1　持久存储
21.1.2　基本的数据库操作和SQL语言
21.1.3　数据库和Python
21.2　Python数据库应用程序程序员接口（DB-API）
21.2.1　模块属性
21.2.2　连接对象
21.2.3　游标对象
21.2.4　类型对象和构造器
21.2.5　关系数据库
21.2.6　数据库和Python：接口程序
21.2.7　使用数据库接口程序举例
21.3　对象-关系管理器（ORM）
21.3.1　考虑对象，而不是SQL
21.3.2　Python和ORM
21.3.3　雇员数据库举例
21.3.4　总结
21.4　相关模块
21.5　练习
第22章　扩展Python　623
22.1　引言/动机
22.1.1　什么是扩展
22.1.2　为什么要扩展Python
22.2　创建Python扩展
22.2.1　创建您的应用程序代码
22.2.2　用样板来包装你的代码
22.2.3　编译
22.2.4　导入和测试
22.2.5　引用计数
22.2.6　线程和全局解释器锁（GIL）
22.3　相关话题
22.4　练习
第23章　其他话题
23.1　Web服务
23.2　用Win32的COM来操作微软Office
23.2.1　客户端COM编程
23.2.2 微软Excel
23.2.3　微软Word　第1部分　Python核心
23.2.4　微软PowerPoint
23.2.5　微软Outlook
23.2.6　中等规模的例子
23.3　用Jython写Python和Java的程序
23.3.1　什么是Jython
23.3.2　Swing GUI开发（Java或者Python!）
23.4　练习
23.2.4　微软PowerPoint
23.2.5　微软Outlook
23.2.6　中等规模的例子
23.3　用Jython写Python和Java的程序
23.3.1　什么是Jython
23.3.2　Swing GUI开发（Java或者Python!）
23.4　练习
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python核心编程（第二版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据科学手册
译者序 xiii
前言 xv
第1 章　IPython：超越Python 1
1.1　shell还是Notebook 1
1.1.1　启动IPython shell 2
1.1.2　启动Jupyter Notebook 2
1.2　IPython的帮助和文档 3
1.2.1　用符号? 获取文档 3
1.2.2　通过符号?? 获取源代码 4
1.2.3　用Tab补全的方式探索模块 5
1.3　IPython shell中的快捷键 7
1.3.1　导航快捷键 7
1.3.2　文本输入快捷键 7
1.3.3　命令历史快捷键 8
1.3.4　其他快捷键 9
1.4　IPython魔法命令 9
1.4.1　粘贴代码块：%paste和%cpaste 9
1.4.2　执行外部代码：%run 10
1.4.3　计算代码运行时间：%timeit 11
1.4.4　魔法函数的帮助：?、%magic 和%lsmagic 11
1.5　输入和输出历史 12
1.5.1　IPython的输入和输出对象 12
1.5.2　下划线快捷键和以前的输出 13
1.5.3　禁止输出 13
1.5.4　相关的魔法命令 13
1.6　IPython和shell命令 14
1.6.1　shell快速入门 14
1.6.2　IPython中的shell命令 15
1.6.3　在shell中传入或传出值 15
1.7　与shell相关的魔法命令 16
1.8　错误和调试 17
1.8.1　控制异常：%xmode 17
1.8.2　调试：当阅读轨迹追溯不足以解决问题时 19
1.9　代码的分析和计时 21
1.9.1　代码段计时：%timeit和%time 22
1.9.2　分析整个脚本：%prun 23
1.9.3　用%lprun进行逐行分析 24
1.9.4　用%memit和%mprun进行内存分析 25
1.10　IPython参考资料 26
1.10.1　网络资源 26
1.10.2　相关图书 27
第2 章　NumPy入门 28
2.1　理解Python中的数据类型 29
2.1.1　Python整型不仅仅是一个整型 30
2.1.2　Python列表不仅仅是一个列表 31
2.1.3　Python中的固定类型数组 32
2.1.4　从Python列表创建数组 32
2.1.5　从头创建数组 33
2.1.6　NumPy标准数据类型 34
2.2　NumPy数组基础 35
2.2.1　NumPy数组的属性 36
2.2.2　数组索引：获取单个元素 37
2.2.3　数组切片：获取子数组 38
2.2.4　数组的变形 41
2.2.5　数组拼接和分裂 42
2.3　NumPy数组的计算：通用函数 44
2.3.1　缓慢的循环 44
2.3.2　通用函数介绍 45
2.3.3　探索NumPy的通用函数 46
2.3.4　高级的通用函数特性 49
2.3.5　通用函数：更多的信息 51
2.4　聚合：最小值、最大值和其他值 51
2.4.1　数组值求和 51
2.4.2　最小值和最大值 52
2.4.3　示例：美国总统的身高是多少 54
2.5　数组的计算：广播 55
2.5.1　广播的介绍 55
2.5.2　广播的规则 57
2.5.3　广播的实际应用 60
2.6　比较、掩码和布尔逻辑 61
2.6.1　示例：统计下雨天数 61
2.6.2　和通用函数类似的比较操作 62
2.6.3　操作布尔数组 64
2.6.4　将布尔数组作为掩码 66
2.7　花哨的索引 69
2.7.1　探索花哨的索引 69
2.7.2　组合索引 70
2.7.3　示例：选择随机点 71
2.7.4　用花哨的索引修改值 72
2.7.5　示例：数据区间划分 73
2.8　数组的排序 75
2.8.1　NumPy中的快速排序：np.sort和np.argsort 76
2.8.2　部分排序：分隔 77
2.8.3　示例：K个最近邻 78
2.9　结构化数据：NumPy的结构化数组 81
2.9.1　生成结构化数组 83
2.9.2　更高级的复合类型 84
2.9.3　记录数组：结构化数组的扭转 84
2.9.4　关于Pandas 85
第3 章　Pandas数据处理 86
3.1　安装并使用Pandas 86
3.2　Pandas对象简介 87
3.2.1　Pandas的Series对象 87
3.2.2　Pandas的DataFrame对象 90
3.2.3　Pandas的Index对象 93
3.3　数据取值与选择 95
3.3.1　Series数据选择方法 95
3.3.2　DataFrame数据选择方法 98
3.4　Pandas数值运算方法 102
3.4.1　通用函数：保留索引 102
3.4.2　通用函数：索引对齐 103
3.4.3　通用函数：DataFrame与Series的运算 105
3.5　处理缺失值 106
3.5.1　选择处理缺失值的方法 106
3.5.2　Pandas的缺失值 107
3.5.3　处理缺失值 110
3.6　层级索引 113
3.6.1　多级索引Series 113
3.6.2　多级索引的创建方法 116
3.6.3　多级索引的取值与切片 119
3.6.4　多级索引行列转换 121
3.6.5　多级索引的数据累计方法 124
3.7　合并数据集：Concat与Append操作 125
3.7.1　知识回顾：NumPy数组的合并 126
3.7.2　通过pd.concat实现简易合并 126
3.8　合并数据集：合并与连接 129
3.8.1　关系代数 129
3.8.2　数据连接的类型 130
3.8.3　设置数据合并的键 132
3.8.4　设置数据连接的集合操作规则 134
3.8.5　重复列名：suffixes参数 135
3.8.6　案例：美国各州的统计数据 136
3.9　累计与分组 140
3.9.1　行星数据 140
3.9.2　Pandas的简单累计功能 141
3.9.3　GroupBy：分割、应用和组合 142
3.10　数据透视表 150
3.10.1　演示数据透视表 150
3.10.2　手工制作数据透视表 151
3.10.3　数据透视表语法 151
3.10.4　案例：美国人的生日 153
3.11　向量化字符串操作 157
3.11.1　Pandas字符串操作简介 157
3.11.2　Pandas字符串方法列表 159
3.11.3　案例：食谱数据库 163
3.12　处理时间序列 166
3.12.1　Python的日期与时间工具 166
3.12.2　Pandas时间序列：用时间作索引 169
3.12.3　Pandas时间序列数据结构 170
3.12.4　时间频率与偏移量 172
3.12.5　重新取样、迁移和窗口 173
3.12.6　更多学习资料 178
3.12.7　案例：美国西雅图自行车统计数据的可视化 179
3.13　高性能Pandas：eval()与query() 184
3.13.1　query()与eval()的设计动机：复合代数式 184
3.13.2　用pandas.eval()实现高性能运算 185
3.13.3　用DataFrame.eval()实现列间运算 187
3.13.4　DataFrame.query()方法 188
3.13.5　性能决定使用时机 189
3.14　参考资料 189
第4 章　Matplotlib数据可视化 191
4.1　Matplotlib常用技巧 192
4.1.1　导入Matplotlib 192
4.1.2　设置绘图样式 192
4.1.3　用不用show()？如何显示图形 192
4.1.4　将图形保存为文件 194
4.2　两种画图接口 195
4.2.1　MATLAB风格接口 195
4.2.2　面向对象接口 196
4.3　简易线形图 197
4.3.1　调整图形：线条的颜色与风格 199
4.3.2　调整图形：坐标轴上下限 200
4.3.3　设置图形标签 203
4.4　简易散点图 204
4.4.1　用plt.plot画散点图 205
4.4.2　用plt.scatter画散点图 206
4.4.3　plot与scatter：效率对比 208
4.5　可视化异常处理 208
4.5.1　基本误差线 209
4.5.2　连续误差 210
4.6　密度图与等高线图 211
4.7　频次直方图、数据区间划分和分布密度 215
4.8　配置图例 219
4.8.1　选择图例显示的元素 221
4.8.2　在图例中显示不同尺寸的点 222
4.8.3　同时显示多个图例 223
4.9　配置颜色条 224
4.9.1　配置颜色条 224
4.9.2　案例：手写数字 228
4.10　多子图 230
4.10.1　plt.axes：手动创建子图 230
4.10.2　plt.subplot：简易网格子图 231
4.10.3　plt.subplots：用一行代码创建网格 233
4.10.4　plt.GridSpec：实现更复杂的排列方式 234
4.11　文字与注释 235
4.11.1　案例：节假日对美国出生率的影响 236
4.11.2　坐标变换与文字位置 237
4.11.3　箭头与注释 239
4.12　自定义坐标轴刻度 241
4.12.1　主要刻度与次要刻度 242
4.12.2　隐藏刻度与标签 243
4.12.3　增减刻度数量 244
4.12.4　花哨的刻度格式 245
4.12.5　格式生成器与定位器小结 247
4.13　Matplotlib自定义：配置文件与样式表 248
4.13.1　手动配置图形 248
4.13.2　修改默认配置：rcParams 249
4.13.3　样式表 251
4.14　用Matplotlib画三维图 255
4.14.1　三维数据点与线 256
4.14.2　三维等高线图 256
4.14.3　线框图和曲面图 258
4.14.4　曲面三角剖分 259
4.15　用Basemap可视化地理数据 261
4.15.1　地图投影 263
4.15.2　画一个地图背景 267
4.15.3　在地图上画数据 269
4.15.4　案例：美国加州城市数据 270
4.15.5　案例：地表温度数据 271
4.16　用Seaborn做数据可视化 273
4.16.1　Seaborn与Matplotlib 274
4.16.2　Seaborn图形介绍 275
4.16.3　案例：探索马拉松比赛成绩数据 283
4.17　参考资料 290
4.17.1　Matplotlib资源 290
4.17.2　其他Python画图程序库 290
第5 章　机器学习 291
5.1　什么是机器学习 291
5.1.1　机器学习的分类 292
5.1.2　机器学习应用的定性示例 292
5.1.3　小结 299
5.2　Scikit-Learn简介 300
5.2.1　Scikit-Learn的数据表示 300
5.2.2　Scikit-Learn的评估器API 302
5.2.3　应用：手写数字探索 309
5.2.4　小结 313
5.3　超参数与模型验证 313
5.3.1　什么是模型验证 314
5.3.2　选择最优模型 317
5.3.3　学习曲线 322
5.3.4　验证实践：网格搜索 326
5.3.5　小结 327
5.4　特征工程 327
5.4.1　分类特征 327
5.4.2　文本特征 329
5.4.3　图像特征 330
5.4.4　衍生特征 330
5.4.5　缺失值填充 332
5.4.6　特征管道 332
5.5　专题：朴素贝叶斯分类 333
5.5.1　贝叶斯分类 333
5.5.2　高斯朴素贝叶斯 334
5.5.3　多项式朴素贝叶斯 336
5.5.4　朴素贝叶斯的应用场景 339
5.6　专题：线性回归 340
5.6.1　简单线性回归 340
5.6.2　基函数回归 342
5.6.3　正则化 346
5.6.4　案例：预测自行车流量 349
5.7　专题：支持向量机 353
5.7.1　支持向量机的由来 354
5.7.2　支持向量机：边界最大化 355
5.7.3　案例：人脸识别 363
5.7.4　支持向量机总结 366
5.8　专题：决策树与随机森林 367
5.8.1　随机森林的诱因：决策树 367
5.8.2　评估器集成算法：随机森林 371
5.8.3　随机森林回归 373
5.8.4　案例：用随机森林识别手写数字 374
5.8.5　随机森林总结 376
5.9　专题：主成分分析 376
5.9.1　主成分分析简介 377
5.9.2　用PCA作噪音过滤 383
5.9.3　案例：特征脸 385
5.9.4　主成分分析总结 387
5.10　专题：流形学习 388
5.10.1　流形学习：“HELLO” 388
5.10.2　多维标度法（MDS） 389
5.10.3　将MDS用于流形学习 391
5.10.4　非线性嵌入：当MDS失败时 393
5.10.5　非线性流形：局部线性嵌入 395
5.10.6　关于流形方法的一些思考 396
5.10.7　示例：用Isomap 处理人脸数据 397
5.10.8　示例：手写数字的可视化结构 400
5.11　专题：k-means聚类 402
5.11.1　k-means简介 403
5.11.2　k-means算法：期望最大化 404
5.11.3　案例 409
5.12　专题：高斯混合模型 415
5.12.1　高斯混合模型（GMM）为什么会出现：k-means算法
的缺陷 415
5.12.2　一般化E-M：高斯混合模型 417
5.12.3　将GMM用作密度估计 421
5.12.4　示例：用GMM生成新的数据 425
5.13　专题：核密度估计 427
5.13.1　KDE的由来：直方图 428
5.13.2　核密度估计的实际应用 431
5.13.3　示例：球形空间的KDE 433
5.13.4　示例：不是很朴素的贝叶斯 436
5.14　应用：人脸识别管道 439
5.14.1　HOG特征 440
5.14.2　HOG实战：简单人脸识别器 441
5.14.3　注意事项与改进方案 445
5.15　机器学习参考资料 446
5.15.1　Python中的机器学习 446
5.15.2　通用机器学习资源 447
关于作者 448
关于封面 448
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据科学手册
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python Cookbook
第1章 文本 1
引言 1
1.1 每次处理一个字符 6
1.2 字符和字符值之间的转换 7
1.3 测试一个对象是否是类字符串 8
1.4 字符串对齐 10
1.5 去除字符串两端的空格 11
1.6 合并字符串 11
1.7 将字符串逐字符或逐词反转 14
1.8 检查字符串中是否包含某字符集合中的字符 15
1.9 简化字符串的translate方法的使用 18
1.10 过滤字符串中不属于指定集合的字符 20
1.11 检查一个字符串是文本还是二进制 23
1.12 控制大小写 25
1.13 访问子字符串 26
1.14 改变多行文本字符串的缩进 29
1.15 扩展和压缩制表符 31
1.16 替换字符串中的子串 33
1.17 替换字符串中的子串-Python 2.4 34
1.18 一次完成多个替换 36
1.19 检查字符串中的结束标记 39
1.20 使用Unicode来处理国际化文本 40
1.21 在Unicode和普通字符串之间转换 43
1.22 在标准输出中打印Unicode字符 45
1.23 对Unicode数据编码并用于XML和HTML 46
1.24 让某些字符串大小写不敏感 49
1.25 将HTML文档转化为文本显示到UNIX终端上 52
第2章 文件 55
引言 55
2.1 读取文件 59
2.2 写入文件 62
2.3 搜索和替换文件中的文本 64
2.4 从文件中读取指定的行 65
2.5 计算文件的行数 66
2.6 处理文件中的每个词 68
2.7 随机输入/输出 70
2.8 更新随机存取文件 71
2.9 从zip文件中读取数据 73
2.10 处理字符串中的zip文件 74
2.11 将文件树归档到一个压缩的tar文件 76
2.12 将二进制数据发送到Windows的标准输出 77
2.13 使用C++的类iostream语法 78
2.14 回退输入文件到起点 80
2.15 用类文件对象适配真实文件对象 83
2.16 遍历目录树 84
2.17 在目录树中改变文件扩展名 85
2.18 从指定的搜索路径寻找文件 86
2.19 根据指定的搜索路径和模式寻找文件 87
2.20 在Python的搜索路径中寻找文件 88
2.21 动态地改变Python搜索路径 89
2.22 计算目录间的相对路径 91
2.23 跨平台地读取无缓存的字符 93
2.24 在Mac OS X平台上统计PDF文档的页数 94
2.25 在Windows平台上修改文件属性 95
2.26 从OpenOffice.org文档中提取文本 96
2.27 从微软Word文档中抽取文本 97
2.28 使用跨平台的文件锁 98
2.29 带版本号的文件名 100
2.30 计算CRC-64循环冗余码校验 102
第3章 时间和财务计算 105
引言 105
3.1 计算昨天和明天的日期 111
3.2 寻找上一个星期五 112
3.3 计算日期之间的时段 114
3.4 计算歌曲的总播放时间 115
3.5 计算日期之间的工作日 116
3.6 自动查询节日 118
3.7 日期的模糊查询 121
3.8 检查夏令时是否正在实行 123
3.9 时区转换 124
3.10 反复执行某个命令 125
3.11 定时执行命令 127
3.12 十进制数学计算 129
3.13 将十进制数用于货币处理 130
3.14 用Python实现的简单加法器 133
3.15 检查信用卡校验和 136
3.16 查看汇率 137
第4章 Python技巧 139
引言 139
4.1 对象拷贝 140
4.2 通过列表推导构建列表 144
4.3 若列表中某元素存在则返回之 146
4.4 循环访问序列中的元素和索引 147
4.5 在无须共享引用的条件下创建列表的列表 148
4.6 展开一个嵌套的序列 149
4.7 在行列表中完成对列的删除和排序 152
4.8 二维阵列变换 154
4.9 从字典中取值 155
4.10 给字典增加一个条目 157
4.11 在无须过多援引的情况下创建字典 158
4.12 将列表元素交替地作为键和值来创建字典 159
4.13 获取字典的一个子集 161
4.14 反转字典 163
4.15 字典的一键多值 164
4.16 用字典分派方法和函数 166
4.17 字典的并集与交集 167
4.18 搜集命名的子项 169
4.19 用一条语句完成赋值和测试 171
4.20 在Python中使用printf 174
4.21 以指定的概率获取元素 174
4.22 在表达式中处理异常 176
4.23 确保名字已经在给定模块中被定义 178
第5章 搜索和排序 180
引言 180
5.1 对字典排序 185
5.2 不区分大小写对字符串列表排序 185
5.3 根据对象的属性将对象列表排序 187
5.4 根据对应值将键或索引排序 189
5.5 根据内嵌的数字将字符串排序 192
5.6 以随机顺序处理列表的元素 193
5.7 在增加元素时保持序列的顺序 195
5.8 获取序列中最小的几个元素 197
5.9 在排序完毕的序列中寻找元素 199
5.10 选取序列中最小的第n个元素 200
5.11 三行代码的快速排序 203
5.12 检查序列的成员 206
5.13 寻找子序列 208
5.14 给字典类型增加排名功能 210
5.15 根据姓的首字母将人名排序和分组 214
第6章 面向对象编程 217
引言 217
6.1 温标的转换 223
6.2 定义常量 225
6.3 限制属性的设置 227
6.4 链式字典查询 229
6.5 继承的替代方案-自动托管 231
6.6 在代理中托管特殊方法 234
6.7 有命名子项的元组 237
6.8 避免属性读写的冗余代码 239
6.9 快速复制对象 240
6.10 保留对被绑定方法的引用且支持垃圾回收 243
6.11 缓存环的实现 245
6.12 检查一个实例的状态变化 249
6.13 检查一个对象是否包含某种必要的属性 252
6.14 实现状态设计模式 255
6.15 实现单例模式 257
6.16 用Borg惯用法来避免“单例”模式 259
6.17 Null对象设计模式的实现 263
6.18 用_ _init_ _参数自动初始化实例变量 266
6.19 调用超类的_ _init_ _方法 267
6.20 精确和安全地使用协作的超类调用 270
第7章 持久化和数据库 273
引言 273
7.1 使用marshal模块序列化数据 275
7.2 使用pickle和cPickle模块序列化数据 277
7.3 在Pickling的时候压缩 280
7.4 对类和实例使用cPickle模块 281
7.5 Pickling被绑定方法 284
7.6 Pickling代码对象 286
7.7 通过shelve修改对象 288
7.8 使用Berkeley DB数据库 291
7.9 访问MySQL数据库 294
7.10 在MySQL数据库中储存BLOB 295
7.11 在PostgreSQL中储存BLOB 296
7.12 在SQLite中储存BLOB 298
7.13 生成一个字典将字段名映射为列号 300
7.14 利用dtuple实现对查询结果的灵活访问 302
7.15 打印数据库游标的内容 304
7.16 适用于各种DB API模块的单参数传递风格 306
7.17 通过ADO使用Microsoft Jet 308
7.18 从Jython Servlet访问JDBC数据库 310
7.19 通过Jython和ODBC获得Excel数据 313
第8章 调试和测试 315
引言 315
8.1 阻止某些条件和循环的执行 316
8.2 在Linux上测量内存使用 317
8.3 调试垃圾回收进程 318
8.4 捕获和记录异常 320
8.5 在调试模式中跟踪表达式和注释 322
8.6 从traceback中获得更多信息 324
8.7 当未捕获异常发生时自动启用调试器 327
8.8 简单的使用单元测试 328
8.9 自动运行单元测试 330
8.10 在Python 2.4中使用doctest和unittest 331
8.11 在单元测试中检查区间 334
第9章 进程、线程和同步 336
引言 336
9.1 同步对象中的所有方法 339
9.2 终止线程 342
9.3 将Queue.Queue用作优先级队列 344
9.4 使用线程池 346
9.5 以多组参数并行执行函数 349
9.6 用简单的消息传递协调线程 351
9.7 储存线程信息 353
9.8 无线程的多任务协作 357
9.9 在Windows中探测另一个脚本实例的运行 359
9.10 使用MsgWaitForMultipleObjects处理Windows消息 360
9.11 用popen驱动外部进程 363
9.12 获取UNIX Shell命令的输出流和错误流 364
9.13 在UNIX中fork一个守护进程 367
第10章 系统管理 370
引言 370
10.1 生成随机密码 371
10.2 生成易记的伪随机密码 372
10.3 以POP服务器的方式验证用户 375
10.4 统计Apache中每个IP的点击率 376
10.5 统计Apache的客户缓存的命中率 378
10.6 在脚本中调用编辑器 379
10.7 备份文件 381
10.8 选择性地复制邮箱文件 383
10.9 通过邮箱创建一个邮件地址的白名单 384
10.10 阻塞重复邮件 386
10.11 检查你的Windows声音系统 388
10.12 在Windows中注册和反注册DLL 388
10.13 检查并修改Windows自动运行任务 390
10.14 在Windows中创建共享 391
10.15 连接一个正在运行的Internet Explorer实例 392
10.16 读取Microsoft Outlook Contacts 393
10.17 在Mac OS X中收集详细的系统信息 396
第11章 用户界面 400
引言 400
11.1 在文本控制台中显示进度条 402
11.2 避免在编写回调函数时使用lambda 404
11.3 在tkSimpleDialog函数中使用默认值和区间 405
11.4 给Tkinter列表框增加拖曳排序能力 406
11.5 在Tkinter部件中输入一个重音字符 408
11.6 在Tkinter中嵌入内联的GIF 410
11.7 转换图片格式 412
11.8 在Tkinter中实现一个秒表 415
11.9 用线程实现GUI和异步I/O 的结合 417
11.10 在Tkinter中使用IDLE的 Tree部件 421
11.11 在Tkinter Listbox中支持单行多值 423
11.12 在Tkinter部件之间复制Geometry方法和选项 427
11.13 在Tkinter中实现一个带标签的记事本 429
11.14 使用wxPython实现带面板的记事本 431
11.15 在Jython中实现一个ImageJ插件 433
11.16 用Swing和Jython来通过URL查看图片 434
11.17 在Mac OS中获得用户输入 434
11.18 程序化地创建Python Cocoa GUI 437
11.19 用IronPython实现淡入窗口 439
第12章 XML处理 441
引言 441
12.1 检查XML的格式完好性 443
12.2 计算文档中标签的个数 444
12.3 获得XML文档中的文本 445
12.4 自动探测XML的编码 447
12.5 将一个XML文档转化成Python对象树 449
12.6 从XML DOM节点的子树中删除仅有空白符的文本节点 451
12.7 解析Microsoft Excel的XML 452
12.8 验证XML文档 454
12.9 过滤属于指定命名空间的元素和属性 455
12.10 用SAX合并连续的文本事件 458
12.11 使用MSHTML来解析XML或HTML 461
第13章 网络编程 462
引言 462
13.1 通过Socket数据报传输消息 464
13.2 从Web抓取文档 466
13.3 过滤FTP站点列表 467
13.4 通过SNTP协议从服务器获取时间 468
13.5 发送HTML邮件 469
13.6 在MIME消息中绑入文件 471
13.7 拆解一个分段MIME消息 474
13.8 删除邮件消息中的附件 475
13.9 修复Python 2.4的email.FeedParser 解析的消息 477
13.10 交互式地检查POP3邮箱 479
13.11 探测不活动的计算机 482
13.12 用HTTP监视网络 487
13.13 网络端口的转发和重定向 489
13.14 通过代理建立SSL隧道 492
13.15 实现动态IP协议 495
13.16 登录到IRC并将消息记录到磁盘 498
13.17 访问LDAP服务 500
第14章 Web编程 502
引言 502
14.1 测试CGI是否在工作 503
14.2 用CGI脚本处理URL 506
14.3 用CGI上传文件 507
14.4 检查web页面的存在 509
14.5 通过HTTP检查内容类型 510
14.6 续传HTTP下载文件 512
14.7 抓取Web页面时处理Cookie 513
14.8 通过带身份验证的代理进行HTTPS导航 516
14.9 用Jython实现Servlet 517
14.10 寻找Internet Explorer的cookie 519
14.11 生成OPML文件 521
14.12 聚合RSS Feed 524
14.13 通过模板将数据放入Web页面 527
14.14 在Nevow中呈现任意对象 530
第15章 分布式编程 534
引言 534
15.1 实现一个XML-RPC方法调用 536
15.2 服务XML-RPC请求 537
15.3 在Medusa中使用XML-RPC 539
15.4 允许XML-RPC服务被远程终止 541
15.5 SimpleXMLRPCServer的一些细节 542
15.6 给一个XML-RPC服务提供一个wxPython GUI 544
15.7 使用Twisted的Perspective Broker 546
15.8 实现一个CORBA服务和客户 549
15.9 使用telnetlib执行远程登录 551
15.10 使用SSH执行远程登录 554
15.11 通过HTTPS验证一个SSL客户端 557
第16章 关于程序的程序 559
引言 559
16.1 验证字符串是否代表着一个合法的数字 564
16.2 导入一个动态生成的模块 565
16.3 导入一个名字在运行时被确定的模块 567
16.4 将参数和函数联系起来 568
16.5 组合函数 571
16.6 使用内建的Tokenizer给Python源码上色 572
16.7 合并和拆解Token 575
16.8 检查字符串是否有平衡的圆括号 577
16.9 在Python中模拟枚举 580
16.10 在创建列表推导时引用它自身 583
16.11 自动化py2exe将脚本编译成Windows可执行文件的过程 585
16.12 在UNIX中将主脚本和模块绑成一个可执行文件 587
第17章 扩展和嵌入 590
引言 590
17.1 实现一个简单的扩展类型 592
17.2 用Pyrex实现一个简单的扩展类型 597
17.3 在Python中使用C++库 598
17.4 调用Windows DLL的函数 601
17.5 在多线程环境中使用SWIG生成的模块 603
17.6 用PySequence_Fast将Python序列转为 C数组 604
17.7 用迭代器逐个访问Python序列的元素 608
17.8 从Python可调用的C函数中返回None 611
17.9 用gdb调试动态载入的C扩展 613
17.10 调试内存问题 614
第18章 算法 616
引言 616
18.1 消除序列中的重复 619
18.2 在保留序列顺序的前提下消除其中的重复 621
18.3 生成回置采样 625
18.4 生成无回置的抽样 626
18.5 缓存函数的返回值 627
18.6 实现一个FIFO容器 629
18.7 使用FIFO策略来缓存对象 631
18.8 实现一个Bag（Multiset）收集类型 634
18.9 在Python模拟三元操作符 637
18.10 计算素数 640
18.11 将整数格式化为二进制字符串 642
18.12 以任意数为基将整数格式化为字符串 644
18.13 通过法雷分数将数字转成有理数 646
18.14 带误差传递的数学计算 648
18.15 以最大精度求和 651
18.16 模拟浮点数 653
18.17 计算二维点集的凸包和直径 656
第19章 迭代器和生成器 660
引言 660
19.1 编写一个类似range的浮点数递增的函数 663
19.2 从任意可迭代对象创建列表 665
19.3 生成Fibonacci序列 667
19.4 在多重赋值中拆解部分项 669
19.5 自动拆解出需要的数目的项 670
19.6 以步长n将一个可迭代对象切成n片 672
19.7 通过重叠窗口循环序列 674
19.8 并行地循环多个可迭代对象 678
19.9 循环多个可迭代对象的矢量积 680
19.10 逐段读取文本文件 683
19.11 读取带有延续符的行 685
19.12 将一个数据块流处理成行流 687
19.13 用生成器从数据库中抓取大记录集 688
19.14 合并有序序列 690
19.15 生成排列、组合以及选择 694
19.16 生成整数的划分 696
19.17 复制迭代器 697
19.18 迭代器的前瞻 701
19.19 简化队列消费者线程 703
19.20 在另一个线程中运行迭代器 705
19.21 用itertools.groupby来计算汇总报告 706
第20章 描述符、装饰器和元类 710
引言 710
20.1 在函数调用中获得常新的默认值 712
20.2 用嵌套函数来编写property属性 715
20.3 给属性值起别名 717
20.4 缓存属性值 719
20.5 用同一个方法访问多个属性 722
20.6 封装一个方法来给类增加功能 723
20.7 增强所有方法来给类增加功能 726
20.8 在运行时给一个类实例添加方法 728
20.9 检查接口的实现 730
20.10 在自定义元类中正确地使用_ _new_ _和_ _init_ _ 732
20.11 允许对List的可变方法的链式调用 734
20.12 通过更紧凑的语法使用协作的超类调用 736
20.13 不使用_ _init_ _来初始化实例属性 738
20.14 实例属性的自动初始化 740
20.15 重新加载时自动更新类实例 743
20.16 在编译时绑定常量 747
20.17 解决元类冲突 752
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python Cookbook
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Head First Python（中文版）
引子
1 初识Python:人人都爱列表
2 共享你的代码：函数模块
3 文件与异常：处理错误
4 持久存储：数据保存到文件
5 推导数据：处理数据！
6 定制数据对象：打包代码与数据
7 Web开发：集成在一起
8 移动应用开发：小设备
9 管理你的数据：处理输入
10 扩展你的Web应用：来真格的
11 处理复杂性：数据加工
I 其他：（我们没有谈到的）十大问题
索引
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Head First Python（中文版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python学习手册（第4版）
前言	1
第一部分 使用入门
第1章 问答环节	19
人们为何使用Python	19
软件质量	20
开发效率	21
Python是“脚本语言”吗	21
好吧，Python的缺点是什么呢	23
如今谁在使用Python	23
使用Python可以做些什么	24
系统编程	25
用户图形接口	25
Internet脚本	25
组件集成	26
数据库编程	26
快速原型	27
数值计算和科学计算编程	27
游戏、图像、人工智能、XML、机器人等	27
Python如何获得支持	28
Python有哪些技术上的优点	28
面向对象	28
免费	29
可移植	29
功能强大	30
可混合	31
简单易用	31
简单易学	32
Python和其他语言比较起来怎么样	32
本章小结	33
本章习题	33
习题解答	34
Python是工程，不是艺术	34
第2章 Python如何运行程序	36
Python解释器简介	36
程序执行	37
程序员的视角	37
Python的视角	39
执行模块的变体	41
Python实现的替代者	42
执行优化工具	43
冻结二进制文件	44
其他执行选项	45
未来的可能性	46
本章小结	46
本章习题	47
习题解答	47
第3章 如何运行程序	48
交互提示模式下编写代码	48
交互地运行代码	49
为什么使用交互提示模式	51
使用交互提示模式	52
系统命令行和文件	54
第一段脚本	55
使用命令行运行文件	56
使用命令行和文件	57
UNIX可执行脚本(#!)	58
UNIX env查找技巧	59
点击文件图标	60
在Windows中点击图标	60
input的技巧	61
图标点击的其他限制	63
模块导入和重载	63
模块的显要特性：属性	65
import和reload的使用注意事项	68
使用exec运行模块文件	69
IDLE用户界面	70
IDLE基础	71
使用IDLE	72
高级IDLE工具	74
其他的IDE	74
其他启动选项	76
嵌入式调用	76
冻结二进制的可执行性	77
文本编辑器启动的选择	77
其他的启动选择	77
未来的可能	77
我应该选用哪种	78
调试Python代码	78
本章小结	80
本章习题	80
习题解答	80
第一部分 练习题	81
第二部分 类型和运算
第4章 介绍Python对象类型	87
为什么使用内置类型	88
Python的核心数据类型	88
数字	90
字符串	92
序列的操作	92
不可变性	94
类型特定的方法	94
寻求帮助	96
编写字符串的其他方法	97
模式匹配	98
列表	98
序列操作	98
类型特定的操作	99
边界检查	100
嵌套	100
列表解析	101
字典	103
映射操作	103
重访嵌套	104
键的排序：for 循环	105
迭代和优化	107
不存在的键：if 测试	107
元组	109
为什么要用元组	109
文件	110
其他文件类工具	111
其他核心类型	111
如何破坏代码的灵活性	113
用户定义的类	114
剩余的内容	115
本章小结	115
本章习题	116
习题解答	116
第5章 数字	117
Python的数字类型	117
数字常量	118
内置数学工具和扩展	119
Python表达式操作符	120
在实际应用中的数字	125
变量和基本的表达式	125
数字显示的格式	126
比较：一般的和连续的	127
str和repr显示格式	128
除法： 传统除法、Floor除法和真除法	129
整数精度	133
复数	133
十六进制、八进制和二进制记数	134
位操作	136
其他的内置数学工具	137
其他数字类型	139
小数数字	139
分数类型	141
集合	145
布尔型	151
数字扩展	152
本章小结	153
本章习题	153
习题解答	153
第6章 动态类型简介	155
缺少类型声明语句的情况	155
变量、对象和引用	156
类型属于对象，而不是变量	157
对象的垃圾收集	158
共享引用	159
共享引用和在原处修改	161
共享引用和相等	163
动态类型随处可见	164
本章小结	165
本章习题	165
习题解答	165
第7章 字符串	167
字符串常量	169
单双引号字符串是一样的	170
用转义序列代表特殊字节	171
raw字符串抑制转义	173
三重引号编写多行字符串块	175
实际应用中的字符串	176
基本操作	176
索引和分片	177
为什么要在意：分片	181
字符串转换工具	181
修改字符串	184
字符串方法	185
字符串方法实例：修改字符串	187
字符串方法实例：文本解析	189
实际应用中的其他常见字符串方法	190
最初的字符串模块（在Python 3.0中删除）	191
字符串格式化表达式	192
更高级的字符串格式化表达式	194
基于字典的字符串格式化	196
字符串格式化调用方法	196
基础知识	197
添加键、属性和偏移量	198
添加具体格式化	198
与%格式化表达式比较	200
为什么用新的格式化方法	203
通常意义下的类型分类	206
同样分类的类型共享其操作集合	206
可变类型能够在原处修改	207
本章小结	208
本章习题	208
习题解答	208
第8章 列表与字典	210
列表	210
实际应用中的列表	213
基本列表操作	213
列表迭代和解析	213
索引、分片和矩阵	214
原处修改列表	215
字典	220
实际应用中的字典	222
字典的基本操作	222
原处修改字典	223
其他字典方法	224
语言表	225
字典用法注意事项	226
为什么要在意字典接口	229
创建字典的其他方法	230
Python 3.0中的字典变化	231
本章小结	237
本章习题	237
习题解答	237
第9章 元组、文件及其他	239
元组	239
实际应用中的元组	241
为什么有了列表还要元组	243
文件	243
打开文件	244
使用文件	245
实际应用中的文件	246
其他文件工具	252
重访类型分类	254
为什么要在意操作符重载	255
对象灵活性	255
引用 VS 拷贝	256
比较、相等性和真值	258
Python 3.0的字典比较	260
Python中真和假的含义	261
Python的类型层次	263
Type对象	263
Python中的其他类型	265
内置类型陷阱	265
赋值生成引用，而不是拷贝	265
重复能够增加层次深度	266
留意循环数据结构	266
不可变类型不可以在原处改变	267
本章小结	267
本章习题	268
习题解答	268
第二部分练习题	269
第三部分 语句和语法
第10章 Python语句简介	275
重访Python程序结构	275
Python的语句	276
两个if的故事	278
Python增加了什么	279
Python删除了什么	279
为什么使用缩进语法	281
几个特殊实例	283
简短实例：交互循环	285
一个简单的交互式循环	285
对用户输入数据做数学运算	287
用测试输入数据来处理错误	288
用try语句处理错误	289
嵌套代码三层	290
本章小结	290
本章习题	291
习题解答	291
第11章 赋值、表达式和打印	292
赋值语句	292
赋值语句的形式	293
序列赋值	294
Python 3.0中的扩展序列解包	297
多目标赋值语句	301
增强赋值语句	302
变量命名规则	305
Python的废弃协议	306
表达式语句	308
表达式语句和在原处的修改	309
打印操作	310
Python 3.0的print函数	311
Python 2.6 print语句	313
打印流重定向	315
版本独立的打印	318
为什么要注意print和stdout	319
本章小结	320
本章习题	321
习题解答	321
第12章 if测试和语法规则	322
if语句	322
通用格式	322
基本例子	323
多路分支	323
Python语法规则	325
代码块分隔符	326
语句的分隔符	328
一些特殊情况	329
真值测试	330
if/else三元表达式	332
为什么要在意布尔值	334
本章小结	335
本章习题	335
习题解答	335
第13章 while和for循环	336
while循环	336
一般格式	336
例子	337
break、continue、pass和循环else	338
一般循环格式	338
pass	338
continue	340
break	340
循环else	341
为什么要在意“模拟C 语言的while循环”	342
for循环	343
一般格式	343
例子	344
为什么要在意“文件扫描”	349
编写循环的技巧	350
循环计数器：while和range	351
非完备遍历：range和分片	352
修改列表：range	353
并行遍历：zip和map	354
产生偏移和元素：enumerate	357
本章小结	358
本章习题	358
习题解答	359
第14章 迭代器和解析，第一部分	360
迭代器：初探	360
文件迭代器	361
手动迭代：iter和next	363
其他内置类型迭代器	365
列表解析：初探	367
列表解析基础知识	368
在文件上使用列表解析	369
扩展的列表解析语法	370
其他迭代环境	371
Python 3.0中的新的可迭代对象	375
range迭代器	376
map、zip和filter迭代器	377
多个迭代器 VS单个迭代器	378
字典视图迭代器	379
其他迭代器主题	381
本章小结	381
本章习题	381
习题解答	382
第15章 文档	383
Python文档资源	383
#注释	384
dir函数	384
文档字符串：__doc__	385
PyDoc：help函数	388
PyDoc：HTML报表	390
标准手册集	393
网络资源	394
已出版的书籍	394
常见编写代码的陷阱	395
本章小结	397
本章习题	397
习题解答	397
第三部分练习题	398
第四部分 函数
第16章 函数基础	403
为何使用函数	404
编写函数	405
def语句	406
def语句是实时执行的	407
第一个例子：定义和调用	408
定义	408
调用	408
Python中的多态	409
第二个例子：寻找序列的交集	410
定义	410
调用	411
重访多态	411
本地变量	412
本章小结	413
本章习题	413
习题解答	413
第17章 作用域	415
Python作用域基础	415
作用域法则	416
变量名解析：LEGB原则	418
作用域实例	419
内置作用域	420
在Python 2.6中违反通用性	422
global语句	422
最小化全局变量	423
最小化文件间的修改	424
其他访问全局变量的方法	426
作用域和嵌套函数	427
嵌套作用域的细节	427
嵌套作用域举例	427
nonlocal语句	433
nonlocal基础	433
nonlocal应用	435
为什么使用nonlocal	437
本章小结	440
本章习题	441
习题解答	442
第18章 参数	444
传递参数	444
参数和共享引用	445
避免可变参数的修改	447
对参数输出进行模拟	448
特定的参数匹配模型	449
基础知识	449
匹配语法	450
细节	452
关键字参数和默认参数的实例	452
任意参数的实例	455
Python 3.0 Keyword-Only参数	459
min调用	462
满分	463
加分点	464
结论	465
一个更有用的例子：通用set函数	465
模拟Python 3.0 print函数	466
使用Keyword-Only参数	467
为什么要在意：关键字参数	469
本章小结	469
本章习题	470
习题解答	470
第19章 函数的高级话题	472
函数设计概念	472
递归函数	474
用递归求和	474
编码替代方案	475
循环语句VS递归	476
处理任意结构	477
函数对象：属性和注解	478
间接函数调用	478
函数内省	479
函数属性	480
Python 3.0中的函数注解	481
匿名函数： lambda	483
lambda表达式	483
为什么使用lambda	484
如何（不要）让Python代码变得晦涩难懂	486
嵌套lambda和作用域	487
为什么要在意：回调	488
在序列中映射函数：map	489
函数式编程工具：filter和reduce	490
本章小结	492
本章习题	492
习题解答	492
第20章 迭代和解析，第二部分	494
回顾列表解析：函数式编程工具	494
列表解析与map	495
增加测试和嵌套循环	496
列表解析和矩阵	498
理解列表解析	499
为什么要在意：列表解析和map	500
重访迭代器：生成器	501
生成器函数：yield VS return	502
生成器表达式：迭代器遇到列表解析	506
生成器函数 VS 生成器表达式	507
生成器是单迭代器对象	508
用迭代工具模拟zip和map	510
为什么你会留意：单次迭代	514
内置类型和类中的值生成	515
Python 3.0解析语法概括	516
解析集合和字典解析	517
针对集合和字典的扩展的解析语法	517
对迭代的各种方法进行计时	518
对模块计时	519
计时脚本	519
计时结果	520
计时模块替代方案	523
其他建议	527
函数陷阱	528
本地变量是静态检测的	528
默认和可变对象	529
没有return语句的函数	531
嵌套作用域的循环变量	532
本章小结	532
本章习题	532
习题解答	533
第四部分练习题	533
第五部分 模块
第21章 模块：宏伟蓝图	539
为什么使用模块	540
Python程序架构	540
如何组织一个程序	541
导入和属性	541
标准库模块	543
import如何工作	543
1.搜索	544
2.编译（可选）	544
3.运行	545
模块搜索路径	545
配置搜索路径	547
搜索路径的变动	548
sys.path列表	548
模块文件选择	549
高级的模块选择概念	550
第三方工具：distutils	550
本章小结	551
本章习题	551
习题解答	551
第22章 模块代码编写基础	553
模块的创建	553
模块的使用	554
import语句	554
from语句	555
from *语句	555
导入只发生一次	555
import和from是赋值语句	556
文件间变量名的改变	557
import和from的对等性	557
from语句潜在的陷阱	558
模块命名空间	560
文件生成命名空间	560
属性名的点号运算	562
导入和作用域	562
命名空间的嵌套	563
重载模块	564
reload基础	565
reload实例	566
为什么要在意：模块重载	567
本章小结	568
本章习题	568
习题解答	568
第23章 模块包	570
包导入基础	570
包和搜索路径设置	571
__init__.py包文件	572
包导入实例	573
包对应的from语句和import语句	574
为什么要使用包导入	575
三个系统的传说	576
包相对导入	578
Python 3.0中的变化	578
相对导入基础知识	579
为什么使用相对导入	581
相对导入的作用域	583
模块查找规则总结	583
相对导入的应用	584
为什么要在意：模块包	589
本章小结	590
本章习题	590
习题解答	590
第24章 高级模块话题	592
在模块中隐藏数据	592
最小化from *的破坏：_X和__all__	593
启用以后的语言特性	593
混合用法模式：__name__和__main__	594
以__name__进行单元测试	595
使用带有__name__的命令行参数	596
修改模块搜索路径	599
Import语句和from语句的as扩展	599
模块是对象：元程序	600
用名称字符串导入模块	603
过渡性模块重载	604
模块设计理念	607
模块陷阱	607
顶层代码的语句次序的重要性	608
from复制变量名，而不是连接	609
from *会让变量语义模糊	610
reload不会影响from导入	610
reload、from以及交互模式测试	611
递归形式的from导入无法工作	612
本章小结	613
本章习题	613
习题解答	613
第五部分练习题	614
第六部分 类和OOP
第25章 OOP：宏伟蓝图	619
为何使用类	620
概览OOP	621
属性继承搜索	621
类和实例	623
类方法调用	624
编写类树	624
OOP是为了代码重用	627
本章小结	629
本章习题	629
习题解答	630
第26章 类代码编写基础	631
类产生多个实例对象	631
类对象提供默认行为	632
实例对象是具体的元素	632
第一个例子	632
类通过继承进行定制	635
第二个例子	635
类是模块内的属性	637
类可以截获Python运算符	638
第三个例子	639
为什么要使用运算符重载	641
世界上最简单的Python类	641
类与字典的关系	644
本章小结	646
本章习题	646
习题解答	646
第27章 更多实例	649
步骤1：创建实例	650
编写构造函数	650
在进行中测试	651
以两种方式使用代码	652
版本差异提示	654
步骤2：添加行为方法	654
编写方法	656
步骤3：运算符重载	658
提供打印显示	658
步骤4：通过子类定制行为	659
编写子类	660
扩展方法：不好的方式	660
扩展方法：好的方式	661
多态的作用	663
继承、定制和扩展	664
OOP：大思路	664
步骤5：定制构造函数	665
OOP比我们认为的要简单	666
组合类的其他方式	667
在Python 3.0中捕获内置属性	669
步骤6：使用内省工具	670
特殊类属性	670
一种通用显示工具	671
实例与类属性的关系	672
工具类的命名考虑	673
类的最终形式	674
步骤7（最后一步）：把对象存储到数据库中	676
Pickle和Shelve	676
在shelve数据库中存储对象	677
交互地探索shelve	678
更新shelve中的对象	680
未来方向	681
本章小结	683
本章习题	684
习题解答	684
第28章 类代码编写细节	686
class语句	686
一般形式	686
例子	687
方法	689
例子	690
调用超类构造函数	691
其他方法调用的可能性	691
继承	692
属性树的构造	692
继承方法的专有化	693
类接口技术	694
抽象超类	695
Python 2.6和Python 3.0的抽象超类	696
命名空间：完整的内容	698
简单变量名：如果赋值就不是全局变量	698
属性名称：对象命名空间	698
Python命名空间的“禅”：赋值将变量名分类	699
命名空间字典	701
命名空间链接	704
回顾文档字符串	706
类与模块的关系	707
本章小结	708
本章习题	708
习题解答	708
第29章 运算符重载	710
基础知识	710
构造函数和表达式：__init__和__sub__	711
常见的运算符重载方法	711
索引和分片：__getitem__和__setitem__	713
拦截分片	713
Python 2.6中的分片和索引	715
索引迭代：__getitem__	716
迭代器对象：__iter__和__next__	717
用户定义的迭代器	717
有多个迭代器的对象	719
成员关系：__contains__、__iter__和__getitem__	721
属性引用：__getattr__和__setattr__	723
其他属性管理工具	725
模拟实例属性的私有性：第一部分	725
__repr__和__str__会返回字符串表达形式	726
右侧加法和原处加法：__radd__和__iadd__	729
原处加法	730
Call表达式：__call__	731
函数接口和回调代码	732
比较：__lt__、__gt__和其他方法	734
Python 2.6的__cmp__方法（已经从Python 3.0中移除了）	734
布尔测试：__bool__和__len__	735
Python 2.6中的布尔	736
对象析构函数：__del__	738
本章小结	739
本章习题	739
习题解答	739
第30章 类的设计	741
Python和OOP	741
通过调用标记进行重载（或不要）	742
OOP和继承：“是一个”关系	743
OOP和组合：“有一个”关系	744
重访流处理器	746
为什么要在意：类和持续性	748
OOP和委托：“包装”对象	749
类的伪私有属性	751
变量名压缩概览	751
为什么使用伪私有属性	752
方法是对象：绑定或无绑定	754
在Python 3.0中，无绑定方法是函数	756
绑定方法和其他可调用对象	757
为什么要在意：绑定方法和回调函数	760
多重继承：“混合”类	760
编写混合显示类	761
类是对象：通用对象的工厂	771
为什么有工厂	772
与设计相关的其他话题	773
本章小结	773
本章习题	774
习题解答	774
第31章 类的高级主题	775
扩展内置类型	775
通过嵌入扩展类型	776
通过子类扩展类型	777
新式类	779
新式类变化	780
类型模式变化	781
钻石继承变动	785
新式类的扩展	789
slots实例	789
类特性	793
__getattribute__和描述符	795
元类	795
静态方法和类方法	796
为什么使用特殊方法	796
Python 2.6和Python 3.0中的静态方法	797
静态方法替代方案	799
使用静态和类方法	800
使用静态方法统计实例	801
用类方法统计实例	802
装饰器和元类：第一部分	805
函数装饰器基础	805
装饰器例子	806
类装饰器和元类	807
更多详细信息	808
类陷阱	809
修改类属性的副作用	809
修改可变的类属性也可能产生副作用	810
多重继承：顺序很重要	811
类、方法以及嵌套作用域	812
Python中基于委托的类：__getattr__和内置函数	814
“过度包装”	814
本章小结	815
本章习题	815
习题解答	815
第六部分练习题	816
为什么要在意：大师眼中的OOP	821
第七部分 异常和工具
第32章 异常基础	825
为什么使用异常	826
异常的角色	826
异常处理：简明扼要	827
默认异常处理器	827
捕获异常	828
引发异常	829
用户定义的异常	830
终止行为	830
为什么要在意：错误检查	832
本章小结	833
本章习题	833
习题解答	834
第33章 异常编码细节	835
try/except/else语句	835
try语句分句	836
try/else分句	839
例子：默认行为	840
例子：捕捉内置异常	841
try/finally语句	841
例子：利用try/finally编写终止行为	842
统一try/except/finally语句	843
统一try语句语法	845
通过嵌套合并finally和except	845
合并try的例子	846
raise语句	847
利用raise传递异常	849
Python 3.0异常链：raise from	849
assert语句	850
例子：收集约束条件（但不是错误）	850
with/as环境管理器	851
基本使用	852
环境管理协议	853
本章小结	855
本章习题	855
习题解答	856
第34章 异常对象	857
异常：回到未来	858
字符串异常很简单	858
基于类的异常	858
类异常例子	859
为什么使用类异常	861
内置Exception类	864
内置异常分类	865
默认打印和状态	866
定制打印显示	867
定制数据和行为	868
提供异常细节	868
提供异常方法	869
本章小结	870
本章习题	870
习题解答	870
第35章 异常的设计	872
嵌套异常处理器	872
例子：控制流程嵌套	873
例子：语法嵌套化	874
异常的习惯用法	876
异常不总是错误	876
函数信号条件和raise	876
关闭文件和服务器连接	877
在try外进行调试	878
运行进程中的测试	879
关于sys.exc_info	879
与异常有关的技巧	880
应该包装什么	881
捕捉太多：避免空except语句	881
捕捉过少：使用基于类的分类	883
核心语言总结	884
Python工具集	884
大型项目的开发工具	885
本章小结	888
第七部分练习题	889
第八部分 高级话题注1
第36章 Unicode和字节字符串	893
Python 3.0中的字符串修改	894
字符串基础知识	895
字符编码方法	895
Python的字符串类型	897
文本和二进制文件	899
Python 3.0中的字符串应用	900
常量和基本属性	900
转换	901
编码Unicode字符串	903
编码ASCII文本	903
编码非ASCII文本	904
编码和解码非ASCII文本	904
其他Unicode编码技术	905
转换编码	907
在Python 2.6中编码Unicode字符串	908
源文件字符集编码声明	910
使用Python 3.0 Bytes对象	911
方法调用	912
序列操作	913
创建bytes对象的其他方式	913
混合字符串类型	914
使用Python 3.0（和Python 2.6）bytearray对象	915
使用文本文件和二进制文件	918
文本文件基础	919
Python 3.0中的文本和二进制模式	919
类型和内容错误匹配	921
使用Unicode文件	922
在Python 3.0中读取和写入Unicode	922
在Python 3.0中处理BOM	924
Python 2.6中的Unicode文件	927
Python 3.0中其他字符串工具的变化	927
re模式匹配模块	927
Struct二进制数据模块	928
pickle对象序列化模块	931
XML解析工具	932
本章小结	935
本章习题	935
习题解答	936
第37章 管理属性	938
为什么管理属性	938
插入在属性访问时运行的代码	939
特性	940
基础知识	940
第一个例子	941
计算的属性	942
使用装饰器编写特性	943
描述符	944
基础知识	945
第一个示例	947
计算的属性	949
在描述符中使用状态信息	950
特性和描述符是如何相关的	952
__getattr__和__getattribute__	953
基础知识	954
第一个示例	956
计算属性	958
__getattr__和__getattribute__比较	959
管理技术比较	960
拦截内置操作属性	963
重访基于委托的Manager	967
示例：属性验证	970
使用特性来验证	971
使用描述符验证	973
使用__getattr__来验证	974
使用__getattribute__验证	976
本章小结	977
本章习题	977
习题解答	977
第38章 装饰器	979
什么是装饰器	979
管理调用和实例	980
管理函数和类	980
使用和定义装饰器	981
为什么使用装饰器	981
基础知识	982
函数装饰器	982
类装饰器	986
装饰器嵌套	988
装饰器参数	990
装饰器管理函数和类	991
编写函数装饰器	991
跟踪调用	992
状态信息保持选项	993
类错误之一：装饰类方法	997
计时调用	1002
添加装饰器参数	1004
编写类装饰器	1007
单体类	1007
跟踪对象接口	1009
类错误之二：保持多个实例	1012
装饰器与管理器函数的关系	1013
为什么使用装饰器（重访）	1015
直接管理函数和类	1016
示例：“私有”和“公有”属性	1018
实现私有属性	1019
实现细节之一	1021
公有声明的泛化	1022
实现细节之二	1024
开放问题	1025
Python不是关于控制	1029
示例：验证函数参数	1030
目标	1030
针对位置参数的一个基本范围测试装饰器	1031
针对关键字和默认泛化	1033
实现细节	1036
开放问题	1038
装饰器参数 VS 函数注解	1039
其他应用程序：类型测试	1041
本章小结	1042
本章习题	1042
习题解答	1043
第39章 元类	1046
要么是元类，要么不是元类	1046
提高魔力层次	1047
“辅助”函数的缺点	1049
元类与类装饰器的关系：第一回合	1051
元类模型	1053
类是类型的实例	1053
元类是Type的子类	1055
Class语句协议	1056
声明元类	1057
编写元类	1058
基本元类	1058
定制构建和初始化	1059
其他元类编程技巧	1060
实例与继承的关系	1063
示例：向类添加方法	1064
手动扩展	1064
基于元类的扩展	1065
元类与类装饰器的关系：第二回合	1067
示例：对方法应用装饰器	1070
用装饰器手动跟踪	1070
用元类和装饰器跟踪	1071
把任何装饰器应用于方法	1073
元类与类装饰器的关系：第三回合	1074
“可选的”语言功能	1076
本章小结	1078
本章习题	1078
习题解答	1078
第九部分 附录注2
附录A 安装和配置	1083
附录B 各部分练习题的解答 	1093
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python学习手册（第4版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"笨办法"学Python
习题0　准备工作 1
Mac OSX 1
OSX：应该看到的结果 2
Windows 2
Windows：应该看到的结果 3
Linux 4
Linux：应该看到的结果 5
给新手的告诫 5
习题1　第一个程序 7
应该看到的结果 8
附加练习 10
常见问题回答 11
习题2　注释和#号 12
应该看到的结果 12
附加练习 13
常见问题回答 13
习题3　数字和数学计算 14
应该看到的结果 15
附加练习 15
常见问题回答 16
习题4　变量和命名 17
应该看到的结果 18
附加练习 18
常见问题回答 18
习题5　更多的变量和打印 20
应该看到的结果 21
附加练习 21
常见问题回答 21
习题6　字符串和文本 23
应该看到的结果 24
附加练习 24
常见问题回答 24
习题7　更多打印 26
应该看到的结果 26
附加练习 27
常见问题回答 27
习题8　打印，打印 28
应该看到的结果 28
附加练习 28
常见问题回答 29
习题9　打印，打印，打印 30
应该看到的结果 30
附加练习 31
常见问题回答 31
习题10　那是什么 32
应该看到的结果 33
转义序列 33
附加练习 34
常见问题回答 34
习题11　提问 35
应该看到的结果 36
附加练习 36
常见问题回答 36
习题12　提示别人 37
应该看到的结果 37
附加练习 38
常见问题回答 38
习题13　参数、解包和变量 39
等一下！“特性”还有另外一个名字 39
应该看到的结果 40
附加练习 41
常见问题回答 41
习题14　提示和传递 42
应该看到的结果 42
附加练习 43
常见问题回答 43
习题15　读取文件 45
应该看到的结果 46
附加练习 46
常见问题回答 47
习题16　读写文件 48
应该看到的结果 49
附加练习 50
常见问题回答 50
习题17　更多文件操作 51
应该看到的结果 52
附加练习 52
常见问题回答 53
习题18　命名、变量、代码和函数 54
应该看到的结果 55
附加练习 56
常见问题回答 56
习题19　函数和变量 57
应该看到的结果 58
附加练习 58
常见问题回答 59
习题20　函数和文件 60
应该看到的结果 61
附加练习 61
常见问题回答 61
习题21　函数可以返回某些东西 63
应该看到的结果 64
附加练习 64
常见问题回答 65
习题22　到现在你学到了哪些东西 66
学到的东西 66
习题23　阅读一些代码 67
习题24　更多练习 68
应该看到的结果 69
附加练习 69
常见问题回答 70
习题25　更多更多的实践 71
应该看到的结果 72
附加练习 73
常见问题回答 74
习题26　恭喜你，现在可以考试了！ 75
常见问题回答 75
习题27　记住逻辑关系 76
逻辑术语 76
真值表 77
常见问题回答 78
习题28　布尔表达式练习 79
应该看到的结果 80
附加练习 81
常见问题回答 81
习题29　if语句 82
应该看到的结果 83
附加练习 83
常见问题回答 83
习题30　else和if 84
应该看到的结果 85
附加练习 85
常见问题回答 85
习题31　作出决定 86
应该看到的结果 87
附加练习 87
常见问题回答 87
习题32　循环和列表 89
应该看到的结果 90
附加练习 91
常见问题回答 91
习题33　while循环 93
应该看到的结果 94
附加练习 94
常见问题回答 95
习题34　访问列表的元素 96
附加练习 97
习题35　分支和函数 98
应该看到的结果 100
附加练习 100
常见问题回答 100
习题36　设计和调试 102
if语句的规则 102
循环的规则 102
调试的小技巧 103
家庭作业 103
习题37　复习各种符号 104
关键字 104
数据类型 105
字符串转义序列 105
字符串格式化 106
操作符 106
阅读代码 107
附加练习 108
常见问题回答 108
习题38　列表的操作 109
应该看到的结果 111
附加练习 111
常见问题回答 112
习题39　字典，可爱的字典 113
应该看到的结果 116
附加练习 116
常见问题回答 117
习题40　模块、类和对象 118
模块和字典差不多 118
类和模块差不多 119
对象相当于迷你导入 120
获取某样东西里包含的东西 121
第一个关于类的例子 121
应该看到的结果 122
附加练习 122
常见问题回答 123
习题41　学习面向对象术语 124
单词练习 124
语汇练习 124
混合巩固练习 125
阅读测试 125
练习从语言到代码 127
阅读更多代码 128
常见问题回答 128
习题442　对象、类及从属关系 129
代码写成什么样子 130
关于class Name(object) 132
附加练习 132
常见问题回答 133
习题43　基本的面向对象分析和设计 134
简单游戏引擎的分析 135
把问题写下来或者画出来 135
摘录和研究关键概念 135
为各种概念创建类层次结构图和
对象关系图 136
编写和运行各个类 137
重复和优化 139
自顶向下与自底向上 139
《来自Percal 25号行星的哥顿人》的
代码 139
应该看到的结果 145
附加练习 146
常见问题回答 146
习题44　继承与合成 147
什么是继承 147
隐式继承 148
显式覆盖 149
在运行前或运行后替换 149
三种方式组合使用 151
为什么要用super() 152
super()和__init__搭配使用 152
合成 153
继承和合成的应用场合 154
附加练习 154
常见问题回答 155
习题45　你来制作一个游戏 156
评价你的游戏 156
函数的风格 157
类的风格 157
代码风格 158
好的注释 158
为你的游戏评分 158
习题46　项目骨架 160
Python软件包的安装 160
创建骨架项目目录 161
最终目录结构 162
测试你的配置 164
使用这个骨架 164
小测验 164
常见问题回答 165
习题47　自动化测试 166
编写测试用例 166
测试指南 168
应该看到的结果 169
附加练习 169
常见问题回答 169
习题48　更复杂的用户输入 170
我们的游戏语汇 170
断句 171
语汇元组 171
扫描输入 171
异常和数字 171
应该测试的东西 172
设计提示 174
附加练习 174
常见问题回答 174
习题49　创建句子 175
match和peek 175
句子的文法 176
关于异常 178
应该测试的东西 179
附加练习 179
常见问题回答 179
习题50　你的第一个网站 180
安装lpthw.web 180
写一个简单的“Hello World”项目 181
会发生什么 182
修正错误 183
创建基本的模板文件 183
附加练习 185
常见问题回答 186
习题51　从浏览器中获取输入 187
Web的工作原理 187
表单的工作原理 189
创建HTML表单 191
创建布局模板 193
为表单撰写自动测试代码 194
附加练习 196
常见问题回答 197
习题52　创建Web游戏 198
重构习题43中的游戏 198
会话和用户跟踪 203
创建引擎 204
期末考试 207
常见问题回答 208
接下来的路 209
怎样学习任何一种编程语言 210
老程序员的建议 211
附录 命令行快速入门 213
简介：废话少说，命令行来也 213
如何使用这个附录 213
你需要发挥记忆力 214
习题1 准备工作 214
任务 214
知识点 215
更多任务 216
习题2 路径、文件夹和目录（pwd） 217
任务 217
知识点 218
更多任务 219
习题3 如果你迷失了 219
任务 219
知识点 219
习题4 创建目录（mkdir） 219
任务 220
知识点 221
更多任务 221
习题5 更改目录（cd） 222
任务 222
知识点 225
更多任务 225
习题6 列出目录下的内容（ls） 226
任务 226
知识点 229
更多任务 230
习题7 删除路径（rmdir） 230
任务 230
知识点 232
更多任务 232
习题8 在多个目录中切换
（pushd，popd） 233
任务 233
知识点 235
更多任务 235
习题9 创建空文件（touch，
New-Item） 235
任务 236
知识点 236
更多任务 236
习题10 复制文件（cp） 237
任务 237
知识点 239
更多任务 240
习题11 移动文件（mv） 240
任务 240
知识点 242
更多任务 242
习题12 查看文件内容
（less，MORE） 242
任务 243
知识点 243
更多任务 243
习题13 流文件内容显示（cat） 244
任务 244
知识点 245
更多任务 245
习题14 删除文件（rm） 245
任务 245
知识点 247
更多任务 247
习题15 退出命令行（exit） 247
任务 247
知识点 248
更多任务 248
命令行将来的路 248
Unix Bash参考资料 248
PowerShell参考资料 249
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"笨办法"学Python
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>利用Python进行数据分析 原书第2版
前言1
第1章 准备工作7
1.1 本书内容7
1.1.1 什么类型的数据7
1.2 为何利用Python进行数据分析8
1.2.1 Python作为胶水8
1.2.2 解决“双语言”难题8
1.2.3 为何不使用Python9
1.3 重要的Python库9
1.3.1 NumPy9
1.3.2 pandas10
1.3.3matplotlib11
1.3.4 IPython与Jupyter11
1.3.5 SciPy12
1.3.6scikit-learn12
1.3.7statsmodels13
1.4 安装与设置13
1.4.1 Windows14
1.4.2 Apple（OS X和macOS）14
1.4.3 GNU/Linux14
1.4.4 安装及更新Python包15
1.4.5 Python 2和Python 316
1.4.6 集成开发环境和文本编辑器16
1.5 社区和会议17
1.6 快速浏览本书17
1.6.1 代码示例18
1.6.2 示例数据18
1.6.3导入约定18
1.6.4术语19
第2章 Python语言基础、IPython及Jupyter notebook20
2.1 Python解释器21
2.2 IPython基础22
2.2.1 运行IPython命令行22
2.2.2 运行 Jupyter notebook23
2.2.3 Tab补全25
2.2.4 内省27
2.2.5 %run命令28
2.2.6 执行剪贴板中的程序30
2.2.7 终端快捷键30
2.2.8 关于魔术命令31
2.2.9　matplotlib集成33
2.3 Python语言基础34
2.3.1 语言语义34
2.3.2 标量类型42
2.3.3 控制流49
第3章 内建数据结构、函数及文件54
3.1 数据结构和序列54
3.1.1 元组54
3.1.2 列表57
3.1.3 内建序列函数61
3.1.4 字典64
3.1.5集合67
3.1.6 列表、集合和字典的推导式69
3.2 函数72
3.2.1 命名空间、作用域和本地函数72
3.2.2 返回多个值73
3.2.3 函数是对象74
3.2.4 匿名（Lambda）函数75
3.2.5 柯里化：部分参数应用76
3.2.6 生成器77
3.2.7 错误和异常处理79
3.3 文件与操作系统82
3.3.1 字节与Unicode文件85
3.4 本章小结86
第4章 NumPy基础：数组与向量化计算87
4.1 NumPy ndarray：多维数组对象89
4.1.1 生成ndarray90
4.1.2 ndarray的数据类型92
4.1.3 NumPy数组算术94
4.1.4 基础索引与切片95
4.1.5 布尔索引100
4.1.6 神奇索引103
4.1.7 数组转置和换轴104
4.2 通用函数：快速的逐元素数组函数106
4.3 使用数组进行面向数组编程109
4.3.1 将条件逻辑作为数组操作110
4.3.2 数学和统计方法111
4.3.3 布尔值数组的方法113
4.3.4 排序114
4.3.5 唯一值与其他集合逻辑115
4.4 使用数组进行文件输入和输出115
4.5 线性代数116
4.6 伪随机数生成118
4.7 示例：随机漫步120
4.7.1 一次性模拟多次随机漫步121
4.8 本章小结122
第5章 pandas入门123
5.1 pandas数据结构介绍123
5.1.1 Series123
5.1.2DataFrame128
5.1.3 索引对象134
5.2 基本功能135
5.2.1 重建索引136
5.2.2 轴向上删除条目138
5.2.3 索引、选择与过滤140
5.2.4 整数索引144
5.2.5 算术和数据对齐145
5.2.6 函数应用和映射150
5.2.7 排序和排名152
5.2.8 含有重复标签的轴索引155
5.3 描述性统计的概述与计算157
5.3.1 相关性和协方差159
5.3.2 唯一值、计数和成员属性161
5.4 本章小结164
第6章 数据载入、存储及文件格式165
6.1 文本格式数据的读写165
6.1.1 分块读入文本文件171
6.1.2 将数据写入文本格式172
6.1.3 使用分隔格式174
6.1.4 JSON数据176
6.1.5 XML和HTML：网络抓取177
6.2 二进制格式180
6.2.1 使用HDF5格式181
6.2.2 读取Microsoft Excel文件183
6.3 与Web API交互184
6.4 与数据库交互186
6.5 本章小结187
第7章 数据清洗与准备188
7.1 处理缺失值188
7.1.1 过滤缺失值189
7.1.2 补全缺失值191
7.2 数据转换194
7.2.1 删除重复值194
7.2.2 使用函数或映射进行数据转换195
7.2.3 替代值197
7.2.4 重命名轴索引198
7.2.5 离散化和分箱199
7.2.6 检测和过滤异常值202
7.2.7 置换和随机抽样203
7.2.8 计算指标/虚拟变量204
7.3 字符串操作207
7.3.1 字符串对象方法208
7.3.2 正则表达式210
7.3.3 pandas中的向量化字符串函数213
7.4 本章小结215
第8章 数据规整：连接、联合与重塑216
8.1 分层索引216
8.1.1重排序和层级排序219
8.1.2 按层级进行汇总统计220
8.1.3 使用DataFrame的列进行索引220
8.2 联合与合并数据集221
8.2.1 数据库风格的DataFrame连接222
8.2.2 根据索引合并226
8.2.3 沿轴向连接230
8.2.4 联合重叠数据235
8.3 重塑和透视236
8.3.1 使用多层索引进行重塑236
8.3.2 将“长”透视为“宽”240
8.3.3 将“宽”透视为“长”242
8.4 本章小结244
第9章 绘图与可视化245
9.1 简明matplotlib API入门245
9.1.1 图片与子图246
9.1.2 颜色、标记和线类型250
9.1.3 刻度、标签和图例252
9.1.4 注释与子图加工255
9.1.5 将图片保存到文件258
9.1.6 matplotlib设置258
9.2 使用pandas和seaborn绘图259
9.2.1 折线图259
9.2.2 柱状图262
9.2.3 直方图和密度图266
9.2.4 散点图或点图269
9.2.5 分面网格和分类数据270
9.3 其他Python可视化工具271
9.4 本章小结272
第10章 数据聚合与分组操作274
10.1 GroupBy机制274
10.1.1 遍历各分组278
10.1.2 选择一列或所有列的子集279
10.1.3 使用字典和Series分组280
10.1.4 使用函数分组281
10.1.5 根据索引层级分组282
10.2 数据聚合282
10.2.1 逐列及多函数应用284
10.2.2 返回不含行索引的聚合数据287
10.3 应用：通用拆分-应用-联合288
10.3.1 压缩分组键290
10.3.2 分位数与桶分析291
10.3.3 示例：使用指定分组值填充缺失值292
10.3.4 示例：随机采样与排列294
10.3.5 示例：分组加权平均和相关性296
10.3.6 示例：逐组线性回归298
10.4 数据透视表与交叉表298
10.4.1 交叉表：crosstab301
10.5 本章小结302
第11章 时间序列303
11.1 日期和时间数据的类型及工具303
11.1.1 字符串与datetime互相转换305
11.2 时间序列基础307
11.2.1 索引、选择、子集308
11.2.2 含有重复索引的时间序列311
11.3 日期范围、频率和移位312
11.3.1 生成日期范围313
11.3.2 频率和日期偏置316
11.3.3 移位（前向和后向）日期317
11.4 时区处理320
11.4.1 时区的本地化和转换320
11.4.2 时区感知时间戳对象的操作323
11.4.3 不同时区间的操作324
11.5 时间区间和区间算术324
11.5.1 区间频率转换326
11.5.2 季度区间频率327
11.5.3 将时间戳转换为区间（以及逆转换）329
11.5.4 从数组生成PeriodIndex330
11.6 重新采样与频率转换332
11.6.1 向下采样334
11.6.2 向上采样与插值336
11.6.3 使用区间进行重新采样337
11.7 移动窗口函数339
11.7.1 指数加权函数342
11.7.2 二元移动窗口函数343
11.7.3 用户自定义的移动窗口函数344
11.8 本章小结344
第12章 高阶pandas346
12.1 分类数据346
12.1.1 背景和目标346
12.1.2 pandas中的Categorical类型348
12.1.3 使用Categorical对象进行计算350
12.1.4 分类方法352
12.2 高阶GroupBy应用355
12.2.1 分组转换和“展开”GroupBy355
12.2.2 分组的时间重新采样359
12.3 方法链技术361
12.3.1 pipe方法362
12.4 本章小结363
第13章 Python建模库介绍364
13.1 pandas与建模代码的结合364
13.2 使用Patsy创建模型描述367
13.2.1 Patsy公式中的数据转换369
13.2.2 分类数据与Patsy371
13.3 statsmodels介绍373
13.3.1 评估线性模型374
13.3.2 评估时间序列处理377
13.4 scikit-learn介绍377
13.5 继续你的教育381
第14章 数据分析示例382
14.1 从Bitly获取1.USA.gov数据382
14.1.1 纯Python时区计数383
14.1.2 使用pandas进行时区计数385
14.2 MovieLens 1M数据集392
14.2.1 测量评价分歧396
14.3 美国1880～2010年的婴儿名字397
14.3.1分析名字趋势402
14.4 美国农业部食品数据库410
14.5 2012年联邦选举委员会数据库416
14.5.1 按职业和雇主的捐献统计419
14.5.2 捐赠金额分桶421
14.5.3 按州进行捐赠统计423
14.6 本章小结424
附录A 高阶NumPy425
附录B 更多IPython系统相关内容457
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>利用Python进行数据分析 原书第2版
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python学习手册
前言
第一部分 使用入门第1章 问答环节
人们为何使用Python
软件质量
开发者效率
Python是“脚本语言”吗
好吧,Python的缺点是什么呢
如今谁在使用Python
使用Python可以做些什么
系统编程
用户图形接口
Internet脚本
组件集成
数据库编程
快速原型
数值计算和科学计算编程
游戏.图像.人工智能.XML.机器人等
Python有哪些技术上的优点
面向对象
免费
可移植
功能强大
可混合
使用简单
Python是工程,不是艺术
简单易学
名字来源于MontyPython
Python和其他语言比较起来怎么样
本章小结
头脑风暴
本章习题
习题解答
第2章 Python如何运行程序.
Python解释器简介
程序执行
程序员的视角
Python的视角
执行模块的变种
Python实现的替代者
执行优化工具
冻结二进制文件
未来的可能性
本章小结
头脑风暴
本章习题
习题解答
第3章 如何运行程序
交互模式下编写代码
在交互提示模式下测试代码
使用交互提示模式
系统命令行和文件
使用命令行和文件
UNIX可执行脚本(#!)
UNIXenv查找技巧
点击文件图标
在Windows中点击图标
raw_input的技巧
图标点击的其他限制
模块导入和重载
模块的显要特性：属性
import和reload的使用注意事项
IDLE用户界面
IDLE基础
使用IDLE
高级IDLE工具
其他的IDE
嵌入式调用
动付二进制的可执行性
文本编辑器启动的选择
其他的启动选择
未来的可能
我应该选用哪种
本章小结74..
头脑风暴
本章习题
习题解答
头脑风暴：第一部分 练习题
第二部分 类型和运算第4章 介绍Python对象类型.
为什么使用内置类型
Python的核心数据类型
数字
字符串
序列的操作
不可变性
类型特定的方法
寻求帮助
编写字符串的其他方法
模式匹配
列表
序列操作
类型特定的操作
边界检查
嵌套
列表解析
字典
映射操作
重访嵌套
键的排序：for循环
迭代和优化
不存在的键：if测试
元组
为什么要用元组
文件
其他文件类工具
其他核心类型
如何破坏代码的灵活性
用户定义的类
剩余的内容
本章小结
头脑风暴
本章习题
习题解答
第5章 数字
Python的数字类型
数字常量
内置数学工具和扩展
Python表达式操作符
混合操作所遵循的操作符优先级.
括号分组的子表达式
混合类型自动升级
预习：运算符重载
在实际应用中的数字
变量和基本的表达式
数字显示的格式
str和repr显示格式
除法：传统除法.Floor除法和真除法.
位操作
长整型数
复数
十六进制和八进制记数
其他的内置数学工具
其他数字类型
小数数字
集合
布尔型
第三方扩展
本章小结
头脑风暴
本章习题
习题解答
第6章 动态类型简介.
缺少类型声明语句的情况
变量.对象和引用
类型属于对象,而不是变量
对象的垃圾收集
共享引用
共享引用和在原处修改
共享引用和相等
动态类型随处可见
本章小结
头脑风暴
本章习题
习题解答
第7章 字符串
字符串常量
单双引号字符串是一样的
用转义序列代表特殊字节
字符串抑制转义
三重引号编写多行字符串块
字符串编码更大的字符集
实际应用中的字符串
基本操作
索引和分片
为什么要在意：分片
字符串转换工具
修改字符串
字符串格式化
更高级的字符串格式化
基于字典的字符串格式化
字符串方法
字符串方法实例：修改字符串
字符串方法实例：文本解析
实际应用中的其他常见字符串方法
最初的字符串模块
通常意义下的类型分类
同样分类的类型共享其操作集合
可变类型能够在原处修改
本章小结
头脑风暴
本章习题
习题解答
第8章 列表与字典.
列表
实际应用中的列表
基本列表操作
索引.分片和矩阵
原处修改列表
字典
实际应用中的字典
字典的基本操作
原处修改字典
其他字典方法
语言表
字典用法注意事项
为什么要在意字典接口
本章小结
头脑风暴
本章习题
习题解答
第9章 元组.文件及其他
元组
实际应用中的元组
为什么有了列表还要元组
文件
打开文件
使用文件
实际应用中的文件
其他文件工具
重访类型分类
为什么要在意操作符重载
对象灵活性
引用VS拷贝
比较.相等性和真值
Python中真和假的含义
Python的类型层次
Python中的其他类型
内置类型陷阱
赋值生成引用,而不是拷贝
重复能够增加层次深度.
留意循环数据结构
不可变类型不可以在原处改变
本章小结
头脑风暴
本章习题
习题解答
头脑风暴：第二部分 练习题
第三部分 语句和语法第10章 Python语句简介.
重访Python程序结构
Python的语句
两个if的故事
Python增加了什么
Python删除了什么
终止行就是终止语句
为什么使用缩进语法
几个特殊实例
简短实例：交互循环
一个简单的交互式循环
对用户输入数据做数学运算
用测试输入数据来处理错误
用try语句处理错误
嵌套代码三层
本章小结
头脑风暴
本章习题
习题解答
第11章 赋值.表达式和打印
赋值语句
赋值语句的形式
序列赋值
多目标赋值语句
增强赋值语句
变量命名规则
表达式语句
表达式语句和在原处的修改
打印语句
Python的“HelloWorld”程序
重定向输出流
print〉〉file扩展
本章小结
头脑风暴
本章习题
习题解答
第12章 if测试.
if语句
通用格式
基本例子
多路分支
Python语法规则
代码块分隔符
语句的分隔符
一些特殊情况
真值测试
if/else三元表达式
为什么要在意布尔值
本章小结
头脑风暴
本章习题
习题解答
第13章 while和for循环
while循环
一般格式
例子
break.continue.pass和循环else
一般循环格式
例子
为什么要在意“模拟C语言的while循环”
for循环
一般格式
例子
为什么要在意“文件扫描”
迭代器：初探
文件迭代器
其他内置类型迭代器
其他迭代环境
用户定义的迭代器
编写循环的技巧
循环计数器：while和range
非完备遍历：range
修改列表：range
并行遍历：zip和map
产生偏移和元素：enumerate
列表解析：初探
列表解析基础
对文件使用列表解析
扩展列表解析语法
本章小结
头脑风暴
本章习题
习题解答
第14章 文档
Python文档资源
#注释
dir函数
文档字符串：__doc__
PyDoc：help函数
PyDoc：HTML报表
标准手册集
网络资源
已出版的书籍.
常见编写代码的陷阱
本章小结
头脑风暴
本章习题
习题解答
头脑风暴：第三部分 练习题
第四部分 函数第15章 函数基础
为何使用函数
编写函数
def语句
def语句是实时执行的
第一个例子：定义和调用
定义
调用
Python中的多态
第二个例子：寻找序列的交集
定义
调用
重访多态
本地变量
本章小结
头脑风暴
本章习题
习题解答
第16章 作用域和参数
作用域法则
函数作用域基础
变量名解析：LEGB原则
作用域实例
内置作用域
global语句
最小化全局变量
最小化文件间的修改
其他访问全局变量的方法
作用域和嵌套函数
嵌套作用域的细节
嵌套作用域举例
传递参数
参数和共享引用
避免可变参数的修改
对参数输出进行模拟
特定的参数匹配模型
关键字参数和默认参数的实例
任意参数的实例
关键字参数和默认参数的混合
min调用
一个更有用的例子：通用set函数
参数匹配：细节
为什么要在意：关键字参数
本章小结
头脑风暴
本章习题
习题解答
第17章 函数的高级话题.
匿名函数：lambda
lambda表达式
为什么使用lambda
如何（不要）让Python代码变得晦涩难懂
嵌套lambda和作用域
作为参数来应用函数
内置函数apply
为什么要在意：回调
传入关键字参数
和apply类似的调用语法
在序列中映射函数：map
函数式编程工具：filter和reduce
重访列表解析：映射
列表解析基础
增加测试和嵌套循环
列表解析和矩阵
理解列表解析
为什么要在意：列表解析和map
重访迭代器：生成器
生成器函数实例
扩展生成器函数协议：send和next
迭代器和内置类型
生成器表达式：迭代器遇到列表解析
对迭代的各种方法进行计时
函数设计概念
函数是对象：简洁调用
函数陷阱
本地变量是静态检测的
默认和可变对象
没有return语句的函数
嵌套作用域的循环变量
本章小结
头脑风暴
本章习题
习题解答
头脑风暴：第四部分 练习题
第五部分 模块第18章 模块：宏伟蓝图.
为什么使用模块
Python程序构架
如何组织一个程序
导入和属性
标准库模块
import如何工作
搜索
编译（可选）
运行
第三方工具：distutils
本章小结
头脑风暴
本章习题
习题解答
第19章 模块代码编写基础.
模块的创建
模块的使用
import语句
from语句
from*语句
导入只发生一次
import和from是赋值语句
文件间变量名的改变
import和from的对等性
from语句潜在的陷阱
模块命名空间
文件生成命名空间
属性名的点号运算
导入和作用域
命名空间的嵌套
重载模块
reload基础
reload实例
为什么要在意：模块重载
本章小结
头脑风暴
本章习题
习题解答
第20章 模块包
包导入基础
包和搜索路径设置
__init__.py包文件
包导入实例
包对应的from和import
为什么要使用包导入
三个系统的传说
为什么要在意：模块包
本章小结
头脑风暴
本章习题
习题解答
第21章高级模块话题
在模块中隐藏数据
最小化from*的破坏：_X和__all__.
启用以后的语言特性
混合用法模式：__name__和__main__
以__name__进行单元测试
修改模块搜索路径
importas扩展
相对导入语法
为什么使用相对导入
模块设计理念
模块是对象：元程序
模块陷阱
顶层代码的语句次序的重要性
通过变量名字符串导入模块
from复制变量名,而不是连接
from*会让变量语义模糊
reload不会影响from导入
reload.from以及交互模式测试
reload的使用没有传递性
递归形式的fromimport无法工作
本章小结
头脑风暴
本章习题
习题解答
头脑风暴：第五部分 练习题
第六部分 类和OOP第22章OOP：宏伟蓝图
为何使用类
概览OOP
属性继承搜索
类和实例
类方法调用
编写类树
OOP是为了代码重用
本章小结
头脑风暴
本章习题
习题解答
第23章类代码编写基础.
类产生多个实例对象
类对象提供默认行为
实例对象是具体的元素
第一个例子
类通过继承进行定制
第二个例子
类是模块内的属性
类可以截获Python运算符
第三个例子
为什么要使用运算符重载
世界上最简单的Python类
本章小结
头脑风暴
本章习题
习题解答
第24章类代码编写细节.
class语句
一般形式
例子
方法
例子
调用超类的构造器
其他方法调用的可能性
继承
属性树的构造
继承方法的专有化
类接口技术
抽象超类
运算符重载
常见的运算符重载方法
__getitem__拦截索引运算
__getitem__和__iter__实现迭代
用户定义的迭代器
__getattr__和__setattr__捕捉属性的引用
模拟实例属性的私有性
__repr__和__str__会返回字符串表达形式
__radd__处理右侧加法
__call__拦截调用
函数接口和回调代码
__del__是析构器
命名空间：完整的内容
简单变量名：如果赋值就不是全局变量
属性名称：对象命名空间
Python命名空间的“禅”：赋值将变量名分类
命名空间字典
命名空间链接
一个更实际的例子
本章小结
头脑风暴
本章习题
习题解答
第25章类的设计
Python和OOP
通过调用标记进行重载（或不要）
类作为记录
类和继承：“是一个”关系
类和组合：“有一个”关系
重访流处理器
为什么要在意：类和持续性
OOP和委托
多重继承
类是对象：通用对象的工厂
为什么有工厂
方法是对象：绑定或无绑定
重访文档字符串
为什么要在意：绑定方法和回调函数
类和模块
本章小结
头脑风暴
本章习题
习题解答
第26章类的高级主题
扩展内置类型
通过嵌入扩展类型
通过子类扩展类型
类的伪私有属性
变量名压缩概览
为什么使用伪私有属性
新式类
钻石继承变动
其他新式类的扩展
静态和类方法
使用静态和类方法
函数装饰器
装饰器例子
类陷阱
修改类属性的副作用
多重继承：顺序很重要
类.方法以及嵌套作用域
“过度包装”
本章小结
头脑风暴
本章习题
习题解答
头脑风暴：第六部分 练习题
第七部分 异常和工具第27章异常基础
为什么使用异常
异常的角色
异常处理：简明扼要
try/except/else语句
try语句分句
try/else分句
例子：默认行为
例子：捕捉内置异常
try/finally语句
例子：利用try/finally编写终止行为
统一try/except/finally
通过嵌套合并finally和except
合并try的例子
raise语句
例子：引发并捕捉用户定义的异常
例子：利用raise传入额外的数据
例子：利用raise传递异常
assert语句
例子：收集约束条件（但不是错误）
with/as环境管理器
基本使用
环境管理协议
为什么要在意：错误检查
本章小结
头脑风暴
本章习题
习题解答
第28章异常对象
基于字符串的异常
字符串异常就要出局了
基于类的异常
类异常例子
为什么使用类异常
内置Exception类
定义异常文本
发送额外数据和实例行为
raise语句的一般形式
本章小结
头脑风暴
本章习题
习题解答
第29章异常的设计
嵌套异常处理器
例子：控制流程嵌套
例子：语法嵌套化
异常的习惯用法
异常不总是错误
函数信号条件和raise
在try外进行调试
运行进程中的测试
关于sys.exc_info
与异常有关的技巧
应该包装什么
捕捉太多：避免空except语句
捕捉过少：使用基于类的分类
异常陷阱
字符串异常匹配是通过同一性而不是通过值
捕捉到错误的异常
核心语言总结
Python工具集
大型项目的开发工具
本章小结
头脑风暴
本章习题
习题解答
头脑风暴：第七部分 练习题
第八部分 附录
附录A安装和配置
附录B每部分练习题解答
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python学习手册
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>从Python开始学编程
第1章　用编程改造世界
1.1　从计算机到编程
1.2　所谓的编程，是做什么
1.3　为什么学Python
1.4　最简单的Hello World
第2章　先做键盘侠
2.1　计算机会算术
2.2　计算机记性好
2.3　计算机懂选择
2.4　计算机能循环
第3章　过程大于结果
3.1　懒人炒菜机
3.2　参数传递
3.3　递归
3.4　引入那把宝剑
3.5　异常处理
第4章　朝思暮想是对象
4.1　轻松看对象
4.2　继承者们
4.3　那些年，错过的对象
4.4　意想不到的对象
第5章　对象带你飞
5.1　存储
5.2　一寸光阴
5.3　看起来像那样的东西
5.3　Python有网瘾
5.5　写一个爬虫
第6章　与对象的深入交往
6.1　一切皆对象
6.2　属性管理
6.3　我是风儿，我是沙
6.4　内存管理
第7章　函数式编程
７.1　又见函数
7.2　被解放的函数
7.3　小女子的梳妆匣
7.4　高阶函数
7.5　自上而下
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>从Python开始学编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>贝叶斯思维
第1章 贝叶斯定理	1
1.1 条件概率	1
1.2 联合概率	2
1.3 曲奇饼问题	2
1.4 贝叶斯定理	3
1.5 历时诠释	4
1.6 M&M豆问题	5
1.7 Monty Hall难题	6
1.8 讨论	8
第2章 统计计算	9
2.1 分布	9
2.2 曲奇饼问题	10
2.3 贝叶斯框架	11
2.4 Monty Hall难题	12
2.5 封装框架	13
2.6 M&M豆问题	14
2.7 讨论	15
2.8 练习	16
第3章 估计	17
3.1 骰子问题	17
3.2 火车头问题	18
3.3 怎样看待先验概率？	20
3.4 其他先验概率	21
3.5 置信区间	23
3.6 累积分布函数	23
3.7 德军坦克问题	24
3.8 讨论	24
3.9 练习	25
第4章 估计进阶	27
4.1　欧元问题	27
4.2　后验概率的概述	28
4.3　先验概率的湮没	29
4.4　优化	31
4.5　Beta分布	32
4.6　讨论	34
4.7　练习	34
第5章 胜率和加数	37
5.1 胜率	37
5.2 贝叶斯定理的胜率形式	38
5.3 奥利弗的血迹	39
5.4 加数	40
5.5 最大化	42
5.6 混合分布	45
5.7 讨论	47
第6章 决策分析	49
6.1 “正确的价格”问题	49
6.2 先验概率	50
6.3 概率密度函数	50
6.4 PDF的表示	51
6.5 选手建模	53
6.6 似然度	55
6.7 更新	55
6.8 最优出价	57
6.9 讨论	59
第7章 预测	61
7.1　波士顿棕熊队问题	61
7.2　泊松过程	62
7.3　后验	63
7.4　进球分布	64
7.5　获胜的概率	66
7.6　突然死亡法则	66
7.7　讨论	68
7.8　练习	69
第8章 观察者的偏差	71
8.1　红线问题	71
8.2　模型	71
8.3　等待时间	73
8.4　预测等待时间	75
8.5　估计到达率	78
8.6　消除不确定性	80
8.7　决策分析	81
8.8　讨论	83
8.9　练习	84
第9章 二维问题	85
9.1 彩弹	85
9.2 Suite对象	85
9.3 三角学	87
9.4 似然度	88
9.5 联合分布	89
9.6 条件分布	90
9.7 置信区间	91
9.8 讨论	93
9.9 练习	94
第10章 贝叶斯近似计算	95
10.1 变异性假说	95
10.2 均值和标准差	96
10.3 更新	98
10.4 CV的后验分布	98
10.5 数据下溢	99
10.6 对数似然	100
10.7 一个小的优化	101
10.8 ABC（近似贝叶斯计算）	102
10.9 估计的可靠性	104
10.10 谁的变异性更大？	105
10.11 讨论	107
10.12 练习	108
第11章 假设检验	109
11.1 回到欧元问题	109
11.2 来一个公平的对比	110
11.3 三角前验	111
11.4 讨论	112
11.5 练习	113
第12章 证据	115
12.1 解读SAT成绩	115
12.2 比例得分SAT	115
12.3 先验	116
12.4 后验	117
12.5 一个更好的模型	119
12.6 校准	121
12.7 效率的后验分布	122
12.8 预测分布	123
12.9 讨论	124
第13章 模拟	127
13.1 肾肿瘤的问题	127
13.2 一个简化模型	128
13.3 更普遍的模型	130
13.4 实现	131
13.5 缓存联合分布	132
13.6 条件分布	133
13.7 序列相关性	135
13.8 讨论	138
第14章 层次化模型	139
14.1 盖革计数器问题	139
14.2 从简单的开始	140
14.3 分层模型	141
14.4 一个小优化	142
14.5 抽取后验	142
14.6 讨论	144
14.7 练习	144
第15章 处理多维问题	145
15.1 脐部细菌	145
15.2 狮子，老虎和熊	145
15.3 分层版本	148
15.4 随机抽样	149
15.5 优化	150
15.6 堆叠的层次结构	151
15.7 另一个问题	153
15.8 还有工作要做	154
15.9 肚脐数据	156
15.10 预测分布	158
15.11 联合后验	161
15.12 覆盖	162
15.13 讨论	164
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>贝叶斯思维
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Flask Web开发：基于Python的Web应用开发实战
前言　　XI
第一部分　Flask简介
第1章　安装　　3
1.1　使用虚拟环境　　4
1.2　使用pip安装Python包　　6
第2章　程序的基本结构　　7
2.1　初始化　　7
2.2　路由和视图函数　　7
2.3　启动服务器　　9
2.4　一个完整的程序　　9
2.5　请求-响应循环　　11
2.5.1　程序和请求上下文　　11
2.5.2　请求调度　　13
2.5.3　请求钩子　　13
2.5.4　响应　　14
2.6　Flask扩展　　15
第3章　模板　　19
3.1　Jinja2模板引擎　　19
3.1.1　渲染模板　　20
3.1.2　变量　　21
3.1.3　控制结构　　22
3.2　使用Flask-Bootstrap集成Twitter Bootstrap　　23
3.3　自定义错误页面　　26
3.4　链接　　29
3.5　静态文件　　29
3.6　使用Flask-Moment本地化日期和时间　　30
第4章　Web表单　　33
4.1　跨站请求伪造保护　　33
4.2　表单类　　34
4.3　把表单渲染成HTML　　35
4.4　在视图函数中处理表单　　37
4.5　重定向和用户会话　　39
4.6　Flash消息　　41
第5章　数据库　　43
5.1　SQL数据库　　43
5.2　NoSQL数据库　　44
5.3　使用SQL还是NoSQL　　45
5.4　Python数据库框架　　45
5.5　使用Flask-SQLAlchemy管理数据库　　46
5.6　定义模型　　47
5.7　关系　　49
5.8　数据库操作　　50
5.8.1　创建表　　50
5.8.2　插入行　　51
5.8.3　修改行　　52
5.8.4　删除行　　52
5.8.5　查询行　　52
5.9　在视图函数中操作数据库　　54
5.10　集成Python shell　　56
5.11　使用Flask-Migrate实现数据库迁移　　56
5.11.1　创建迁移仓库　　57
5.11.2　创建迁移脚本　　57
5.11.3　更新数据库　　58
第6章　电子邮件　　59
使用Flask-Mail提供电子邮件支持　　59
在Python shell中发送电子邮件　　60
在程序中集成发送电子邮件功能　　61
异步发送电子邮件　　62
第7章　大型程序的结构　　65
7.1　项目结构　　65
7.2　配置选项　　66
7.3　程序包　　67
7.3.1　使用程序工厂函数　　68
7.3.2　在蓝本中实现程序功能　　69
7.4　启动脚本　　71
7.5　需求文件　　71
7.6　单元测试　　72
7.7　创建数据库　　74
第二部分　实例：社交博客程序
第8章　用户认证　　77
8.1　Flask的认证扩展　　77
8.2　密码安全性　　77
8.3　创建认证蓝本　　80
8.4　使用Flask-Login认证用户　　81
8.4.1　准备用于登录的用户模型　　81
8.4.2　保护路由　　83
8.4.3　添加登录表单　　83
8.4.4　登入用户　　84
8.4.5　登出用户　　86
8.4.6　测试登录　　86
8.5　注册新用户　　87
8.5.1　添加用户注册表单　　87
8.5.2　注册新用户　　89
8.6　确认账户　　90
8.6.1　使用itsdangerous生成确认令牌　　90
8.6.2　发送确认邮件　　92
8.7　管理账户　　95
第9章　用户角色　　97
9.1　角色在数据库中的表示　　97
9.2　赋予角色　　99
9.3　角色验证　　100
第10章　用户资料　　103
10.1　资料信息　　103
10.2　用户资料页面　　104
10.3　资料编辑器　　106
10.3.1　用户级别的资料编辑器 　　106
10.3.2　管理员级别的资料编辑器　　108
10.4　用户头像　　110
第11章　博客文章　　115
11.1　提交和显示博客文章　　115
11.2　在资料页中显示博客文章　　118
11.3　分页显示长博客文章列表　　118
11.3.1　创建虚拟博客文章数据　　119
11.3.2　在页面中渲染数据　　120
11.3.3　添加分页导航　　121
11.4　使用Markdown和Flask-PageDown支持富文本文章　　124
11.4.1　使用Flask-PageDown　　124
11.4.2　在服务器上处理富文本　　125
11.5　博客文章的固定链接　　127
11.6　博客文章编辑器　　128
第12章　关注者　　131
12.1　再论数据库关系　　131
12.1.1　多对多关系　　131
12.1.2　自引用关系　　133
12.1.3　高级多对多关系　　134
12.2　在资料页中显示关注者　　136
12.3　使用数据库联结查询所关注用户的文章　　138
12.4　在首页显示所关注用户的文章　　141
第13章　用户评论　　145
13.1　评论在数据库中的表示　　145
13.2　提交和显示评论　　146
13.3　管理评论　　149
第14章　应用编程接口　　153
14.1　REST简介　　153
14.1.1　资源就是一切　　154
14.1.2　请求方法　　154
14.1.3　请求和响应主体　　155
14.1.4　版本　　156
14.2　使用Flask提供REST Web服务　　156
14.2.1　创建API蓝本　　157
14.2.2　错误处理　　157
14.2.3　使用Flask-HTTPAuth认证用户　　159
14.2.4　基于令牌的认证　　161
14.2.5　资源和JSON的序列化转换　　162
14.2.6　实现资源端点　　165
14.2.7　分页大型资源集合　　167
14.2.8　使用HTTPie测试Web服务　　168
第三部分　成功在望
第15章　测试　　173
15.1　获取代码覆盖报告　　173
15.2　Flask测试客户端　　176
15.2.1　测试Web程序　　176
15.2.2　测试Web服务　　179
15.3　使用Selenium进行端到端测试　　180
15.4　值得测试吗　　184
第16章　性能　　185
16.1　记录影响性能的缓慢数据库查询　　185
16.2　分析源码　　187
第17章　部署　　189
17.1　部署流程　　189
17.2　把生产环境中的错误写入日志　　190
17.3　云部署　　191
17.4　Heroku平台　　191
17.4.1　准备程序　　192
17.4.2　使用Foreman进行测试　　196
17.4.3　使用Flask-SSLify启用安全HTTP　　197
17.4.4　执行git push命令部署　　198
17.4.5　查看日志　　199
17.4.6　部署一次升级　　199
17.5　传统的托管　　200
17.5.1　架设服务器　　200
17.5.2　导入环境变量　　200
17.5.3　配置日志　　201
第18章　其他资源　　203
18.1　使用集成开发环境　　203
18.2　查找Flask扩展　　204
18.3　参与Flask开发　　204
关于封面图　　205
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Flask Web开发：基于Python的Web应用开发实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python网络数据采集
译者序　　ix
前言　　xi
第一部分　创建爬虫
第1章　初见网络爬虫　　2
1.1　网络连接　　2
1.2　BeautifulSoup简介　　4
1.2.1　安装BeautifulSoup　　5
1.2.2　运行BeautifulSoup　　7
1.2.3　可靠的网络连接　　8
第2章　复杂HTML解析　　11
2.1　不是一直都要用锤子　　11
2.2　再端一碗BeautifulSoup　　12
2.2.1　BeautifulSoup的find()和findAll()　　13
2.2.2　其他BeautifulSoup对象　　15
2.2.3　导航树　　16
2.3　正则表达式　　19
2.4　正则表达式和BeautifulSoup　　23
2.5　获取属性　　24
2.6　Lambda表达式　　24
2.7　超越BeautifulSoup　　25
第3章　开始采集　　26
3.1　遍历单个域名　　26
3.2　采集整个网站　　30
3.3　通过互联网采集　　34
3.4　用Scrapy采集　　38
第4章　使用API　　42
4.1　API概述　　43
4.2　API通用规则　　43
4.2.1　方法　　44
4.2.2　验证　　44
4.3　服务器响应　　45
4.4　Echo Nest　　46
4.5　Twitter API　　48
4.5.1　开始　　48
4.5.2　几个示例　　50
4.6　Google API　　52
4.6.1　开始　　52
4.6.2　几个示例　　53
4.7　解析JSON数据　　55
4.8　回到主题　　56
4.9　再说一点API　　60
第5章　存储数据　　61
5.1　媒体文件　　61
5.2　把数据存储到CSV　　64
5.3　MySQL　　65
5.3.1　安装MySQL　　66
5.3.2　基本命令　　68
5.3.3　与Python整合　　71
5.3.4　数据库技术与最佳实践　　74
5.3.5　MySQL里的“六度空间游戏”　　75
5.4　Email　　77
第6章　读取文档　　80
6.1　文档编码　　80
6.2　纯文本　　81
6.3　CSV　　85
6.4　PDF　　87
6.5　微软Word和.docx　　88
第二部分　高级数据采集
第7章　数据清洗　　94
7.1　编写代码清洗数据　　94
7.2　数据存储后再清洗　　98
第8章　自然语言处理　　103
8.1　概括数据　　104
8.2　马尔可夫模型　　106
8.3　自然语言工具包　　112
8.3.1　安装与设置　　112
8.3.2　用NLTK做统计分析　　113
8.3.3　用NLTK做词性分析　　115
8.4　其他资源　　119
第9章　穿越网页表单与登录窗口进行采集　　120
9.1　Python Requests库　　120
9.2　提交一个基本表单　　121
9.3　单选按钮、复选框和其他输入　　123
9.4　提交文件和图像　　124
9.5　处理登录和cookie　　125
9.6　其他表单问题　　127
第10章　采集JavaScript　　128
10.1　JavaScript简介　　128
10.2　Ajax和动态HTML　　131
10.3　处理重定向　　137
第11章　图像识别与文字处理　　139
11.1　OCR库概述　　140
11.1.1　Pillow　　140
11.1.2　Tesseract　　140
11.1.3　NumPy　　141
11.2　处理格式规范的文字　　142
11.3　读取验证码与训练Tesseract　　146
11.4　获取验证码提交答案　　151
第12章　避开采集陷阱　　154
12.1　道德规范　　154
12.2　让网络机器人看起来像人类用户　　155
12.2.1　修改请求头　　155
12.2.2　处理cookie　　157
12.2.3　时间就是一切　　159
12.3　常见表单安全措施　　159
12.3.1　隐含输入字段值　　159
12.3.2　避免蜜罐　　160
12.4　问题检查表　　162
第13章　用爬虫测试网站　　164
13.1　测试简介　　164
13.2　Python单元测试　　165
13.3　Selenium单元测试　　168
13.4　Python单元测试与Selenium单元测试的选择　　172
第14章　远程采集　　174
14.1　为什么要用远程服务器　　174
14.1.1　避免IP地址被封杀　　174
14.1.2　移植性与扩展性　　175
14.2　Tor代理服务器　　176
14.3　远程主机　　177
14.3.1　从网站主机运行　　178
14.3.2　从云主机运行　　178
14.4　其他资源　　179
14.5　勇往直前　　180
附录A　Python简介　　181
附录B　互联网简介　　184
附录C　网络数据采集的法律与道德约束　　188
作者简介　　200
封面介绍　　200
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python网络数据采集
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python金融大数据分析
作者简介
版权声明
内容提要
O’Reilly Media, Inc.介绍
前言
第1部分 Python与金融
第1章 为什么将Python用于金融
第2章 基础架构和工具
第3章 入门示例
第2部分 金融分析和开发
第4章 数据类型和结构
第5章 数据可视化
第6章 金融时间序列
第7章 输入/输出操作
第8章 高性能的Python
第9章 数学工具
第10章 推断统计学
第11章 统计学
第12章 Excel集成
第13章 面向对象和图形用户界面
第14章 Web集成
第3部分 衍生品分析库
第15章 估值框架
第16章 金融模型的模拟
第17章 衍生品估值
第18章 投资组合估值
第19章 波动率期权
附录A 精选的最佳实践
附录B 看涨期权类
附录C 日期和时间
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python金融大数据分析
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>python绝技：运用python成为顶级黑客
序一	III
序二	V
译者序	VII
致谢	IX
参编作者——Robert Frost	X
技术编辑——Mark Baggett	XI
前言——Mark Baggett	XII
第1章  入门	1
引言：使用Python进行渗透测试	1
准备开发环境	2
安装第三方库	2
Python解释与Python交互	5
Python语言	6
变量	6
字符串	7
List（列表）	7
词典	8
网络	9
条件选择语句	9
异常处理	10
函数	11
迭代	13
文件输入/输出	15
sys模块	16
OS模块	17
第一个Python程序	19
第一个程序的背景材料：布谷蛋	19
第一个程序：UNIX口令破解机	20
第二个程序的背景材料：度恶为善	22
第二个程序：一个Zip文件口令破解机	23
本章小结	27
参考文献	28
第2章  用Python进行渗透测试	29
引言：Morris蠕虫现在还有用吗	29
编写一个端口扫描器	30
TCP全连接扫描	30
抓取应用的Banner	32
线程扫描	34
使用NMAP端口扫描代码	36
用Python构建一个SSH僵尸网络	38
用Pexpect与SSH交互	39
用Pxssh暴力破解SSH密码	42
利用SSH中的弱私钥	45
构建SSH僵尸网络	49
利用FTP与Web批量抓“肉机”	52
用Python构建匿名FTP扫描器	53
使用Ftplib暴力破解FTP用户口令	54
在FTP服务器上搜索网页	55
在网页中加入恶意注入代码	56
整合全部的攻击	58
Conficker，为什么努力做就够了	62
使用Metasploit攻击Windows SMB服务	64
编写Python脚本与Metasploit交互	65
暴力破解口令，远程执行一个进程	67
把所有的代码放在一起，构成我们自己的Conficker	67
编写你自己的0day概念验证代码	70
基于栈的缓冲区溢出攻击	70
添加攻击的关键元素	71
发送漏洞利用代码	72
汇总得到完整的漏洞利用脚本	73
本章小结	75
参考文献	75
第3章  用Python进行取证调查	77
引言：如何通过电子取证解决BTK凶杀案	77
你曾经去过哪里？——在注册表中分析无线访问热点	78
使用WinReg读取Windows注册表中的内容	79
使用Mechanize把MAC地址传给Wigle	81
用Python恢复被删入回收站中的内容	85
使用OS模块寻找被删除的文件/文件夹	85
用Python把SID和用户名关联起来	86
元数据	88
使用PyPDF解析PDF文件中的元数据	88
理解Exif元数据	90
用BeautifulSoup下载图片	91
用Python的图像处理库读取图片中的Exif元数据	92
用Python分析应用程序的使用记录	95
理解Skype中的SQLite3数据库	95
使用Python和SQLite3自动查询Skype的数据库	97
用Python解析火狐浏览器的SQLite3数据库	103
用Python调查iTunes的手机备份	111
本章小结	116
参考文献	116
第4章  用Python分析网络流量	119
引言：“极光”行动以及为什么明显的迹象会被忽视	119
IP流量将何去何从？——用Python回答	120
使用PyGeoIP关联IP地址和物理位置	121
使用Dpkt解析包	121
使用Python画谷歌地图	125
“匿名者”真能匿名吗？分析LOIC流量	128
使用Dpkt发现下载LOIC的行为	128
解析Hive服务器上的IRC命令	130
实时检测DDoS攻击	131
H.D.Moore是如何解决五角大楼的麻烦的	136
理解TTL字段	136
用Scapy解析TTL字段的值	138
“风暴”（Storm）的fast-flux和Conficker的domain-flux	141
你的DNS知道一些不为你所知的吗？	142
使用Scapy解析DNS流量	143
用Scapy找出fast-flux流量	144
用Scapy找出Domain Flux流量	145
Kevin Mitnick和TCP序列号预测	146
预测你自己的TCP序列号	147
使用Scapy制造SYN泛洪攻击	148
计算TCP序列号	148
伪造TCP连接	150
使用Scapy愚弄入侵检测系统	153
本章小结	159
参考文献	159
第5章  用Python进行无线网络攻击	161
引言：无线网络的（不）安全性和冰人	161
搭建无线网络攻击环境	162
用Scapy测试无线网卡的嗅探功能	162
安装Python蓝牙包	163
绵羊墙——被动窃听无线网络中传输的秘密	165
使用Python正则表达式嗅探信用卡信息	165
嗅探宾馆住客	168
编写谷歌键盘记录器	171
嗅探FTP登录口令	174
你带着笔记本电脑去过哪里？Python告诉你	176
侦听802.11 Probe请求	176
寻找隐藏网络的802.11信标	177
找出隐藏的802.11网络的网络名	178
用Python截取和监视无人机	179
截取数据包，解析协议	179
用Scapy制作802.11数据帧	181
完成攻击，使无人机紧急迫降	184
探测火绵羊	186
理解Wordpress的会话cookies	187
牧羊人——找出Wordpress Cookie重放攻击	188
用Python搜寻蓝牙	190
截取无线流量，查找（隐藏的）蓝牙设备地址	192
扫描蓝牙RFCOMM信道	195
使用蓝牙服务发现协议	196
用Python ObexFTP控制打印机	197
用Python利用手机中的BlueBug漏洞	197
本章小结	199
参考文献	199
第6章  用Python刺探网络	201
引言：当今的社会工程	201
攻击前的侦察行动	202
使用Mechanize库上网	202
匿名性——使用代理服务器、User-Agent及cookie	203
把代码集成在Python类的AnonBrowser中	206
用anonBrowser抓取更多的Web页面	208
用Beautiful Soup解析Href链接	209
用Beautiful Soup映射图像	211
研究、调查、发现	213
用Python与谷歌API交互	213
用Python解析Tweets个人主页	216
从推文中提取地理位置信息	218
用正则表达式解析Twitter用户的兴趣爱好	220
匿名电子邮件	225
批量社工	226
使用Smtplib给目标对象发邮件	226
用smtplib进行网络钓鱼	227
本章小结	230
参考文献	231
第7章  用Python实现免杀	233
引言：火焰腾起！	233
免杀的过程	234
免杀验证	237
本章小结	243
参考文献	243
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>python绝技：运用python成为顶级黑客
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python灰帽子
第1章  搭建开发环境	1
1.1  操作系统要求	1
1.2  获取和安装Python 2.5	2
1.2.1  在Windows下安装Python	2
1.2.2  在Linux下安装Python	2
1.3  安装Eclipse和PyDev	4
1.3.1  黑客挚友：ctype库	5
1.3.2  使用动态链接库	6
1.3.3  构建C数据类型	8
1.3.4  按引用传参	9
1.3.5  定义结构体和联合体	9
第2章  调试器原理和设计	12
2.1  通用寄存器	13
2.2  栈	15
2.3  调试事件	17
2.4  断点	18
2.4.1  软断点	18
2.4.2  硬件断点	20
2.4.3  内存断点	22
第3章  构建自己的Windows调试器	24
3.1  Debugee，敢问你在何处	24
3.2  获取寄存器状态信息	33
3.2.1  线程枚举	34
3.2.2  功能整合	35
3.3  实现调试事件处理例程	39
3.4  无所不能的断点	44
3.4.1  软断点	44
3.4.2  硬件断点	49
3.4.3  内存断点	55
3.5  总结	59
第4章  PyDbg——Windows下的纯Python调试器	60
4.1  扩展断点处理例程	60
4.2  非法内存操作处理例程	63
4.3  进程快照	66
4.3.1  获取进程快照	67
4.3.2  汇总与整合	70
第5章  Immunity Debugger——两极世界的最佳选择	74
5.1  安装Immunity Debugger	74
5.2  Immunity Debugger 101	75
5.2.1  PyCommand命令	76
5.2.2  PyHooks	76
5.3  Exploit（漏洞利用程序）开发	78
5.3.1  搜寻exploit友好指令	78
5.3.2 “坏”字符过滤	80
5.3.3  绕过Windows 下的DEP机制	82
5.4  破除恶意软件中的反调试例程	87
5.4.1  IsDebuugerPresent	87
5.4.2  破除进程枚举例程	88
第6章  钩子的艺术	90
6.1  使用PyDbg部署软钩子	90
6.2  使用Immunity Debugger部署硬钩子	95
第7章  DLL注入与代码注入技术	101
7.1  创建远程线程	101
7.1.1  DLL注入	102
7.1.2  代码注入	105
7.2  遁入黑暗	108
7.2.1  文件隐藏	109
7.2.2  构建后门	110
7.2.3  使用py2exe编译Python代码	114
第8章  Fuzzing	117
8.1  几种常见的bug类型	118
8.1.1  缓冲区溢出	118
8.1.2  整数溢出	119
8.1.3  格式化串攻击	121
8.2  文件Fuzzer	122
8.3  后续改进策略	129
8.3.1  代码覆盖率	129
8.3.2  自动化静态分析	130
第9章  Sulley	131
9.1  安装Sulley	132
9.2  Sulley中的基本数据类型	132
9.2.1  字符串	133
9.2.2  分隔符	133
9.2.3  静态和随机数据类型	134
9.2.4  二进制数据	134
9.2.5  整数	134
9.2.6  块与组	135
9.3  行刺WarFTPD	136
9.3.1  FTP 101	137
9.3.2  创建FTP协议描述框架	138
9.3.3  Sulley会话	139
9.3.4  网络和进程监控	140
9.3.5  Fuzzing测试以及Sulley的Web界面	141
第10章  面向Windows驱动的Fuzzing测试技术	145
10.1  驱动通信基础	146
10.2  使用Immunity Debugger进行驱动级的Fuzzing测试	147
10.3  Driverlib——面向驱动的静态分析工具	151
10.3.1  寻找设备名称	152
10.3.2  寻找IOCTL分派例程	153
10.3.3  搜寻有效的IOCTL控制码	155
10.4  构建一个驱动Fuzzer	157
第11章  IDAPython——IDA PRO环境下的Python脚本编程	162
11.1  安装IDAPython	163
11.2  IDAPython函数	164
11.2.1  两个工具函数	164
11.2.2  段（Segment）	164
11.2.3  函数	165
11.2.4  交叉引用	166
11.2.5  调试器钩子	166
11.3  脚本实例	167
11.3.1  搜寻危险函数的交叉代码	168
11.3.2  函数覆盖检测	169
11.3.3  检测栈变量大小	171
第12章  PYEmu——脚本驱动式仿真器	174
12.1  安装PyEmu	174
12.2  PyEmu概览	175
12.2.1  PyCPU	175
12.2.2  PyMemory	176
12.2.3  PyEmu	176
12.2.4  指令执行	176
12.2.5  内存修改器与寄存器修改器	177
12.2.6  处理例程（Handler）	177
12.3  IDAPyEmu	182
12.3.1  函数仿真	184
12.3.2  PEPyEmu	187
12.3.3  可执行文件加壳器	188
12.3.4  UPX加壳器	188
12.3.5  利用PEPyEmu脱UPX壳	189
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python灰帽子
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python Cookbook 中文版，第 3 版
目录
第1章 数据结构和算法 1
1.1 将序列分解为单独的变量 1
1.2 从任意长度的可迭代对象中分解元素 3
1.3 保存最后N个元素 5
1.4 找到最大或最小的N个元素 7
1.5 实现优先级队列 9
1.6 在字典中将键映射到多个值上 11
1.7 让字典保持有序 13
1.8 与字典有关的计算问题 14
1.9 在两个字典中寻找相同点 15
1.10 从序列中移除重复项且保持元素间顺序不变 17
1.11 对切片命名 18
1.12 找出序列中出现次数最多的元素 20
1.13 通过公共键对字典列表排序 22
1.14 对不原生支持比较操作的对象排序 23
1.15 根据字段将记录分组 25
1.16 筛选序列中的元素 26
1.17 从字典中提取子集 29
1.18 将名称映射到序列的元素中 30
1.19 同时对数据做转换和换算 33
1.20 将多个映射合并为单个映射 34
第2章 字符串和文本 37
2.1 针对任意多的分隔符拆分字符串 37
2.2 在字符串的开头或结尾处做文本匹配 38
2.3 利用Shell通配符做字符串匹配 40
2.4 文本模式的匹配和查找 42
2.5 查找和替换文本 45
2.6 以不区分大小写的方式对文本做查找和替换 47
2.7 定义实现最短匹配的正则表达式 48
2.8 编写多行模式的正则表达式 49
2.9 将Unicode文本统一表示为规范形式 50
2.10 用正则表达式处理Unicode字符 52
2.11 从字符串中去掉不需要的字符 53
2.12 文本过滤和清理 54
2.13 对齐文本字符串 57
2.14 字符串连接及合并 59
2.15 给字符串中的变量名做插值处理 62
2.16 以固定的列数重新格式化文本 64
2.17 在文本中处理HTML和XML实体 66
2.18 文本分词 67
2.19 编写一个简单的递归下降解析器 70
2.20 在字节串上执行文本操作 80
第3章 数字、日期和时间 83
3.1 对数值进行取整 83
3.2 执行精确的小数计算 85
3.3 对数值做格式化输出 87
3.4 同二进制、八进制和十六进制数打交道 89
3.5 从字节串中打包和解包大整数 90
3.6 复数运算 92
3.7 处理无穷大和NaN 94
3.8 分数的计算 96
3.9 处理大型数组的计算 97
3.10 矩阵和线性代数的计算 101
3.11 随机选择 103
3.12 时间换算 105
3.13 计算上周5的日期 107
3.14 找出当月的日期范围 108
3.15 将字符串转换为日期 110
3.16 处理涉及到时区的日期问题 112
第4章 迭代器和生成器 114
4.1 手动访问迭代器中的元素 114
4.2 委托迭代 115
4.3 用生成器创建新的迭代模式 116
4.4 实现迭代协议 118
4.5 反向迭代 121
4.6 定义带有额外状态的生成器函数 122
4.7 对迭代器做切片操作 123
4.8 跳过可迭代对象中的前一部分元素 124
4.9 迭代所有可能的组合或排列 127
4.10 以索引-值对的形式迭代序列 129
4.11 同时迭代多个序列 131
4.12 在不同的容器中进行迭代 133
4.13 创建处理数据的管道 134
4.14 扁平化处理嵌套型的序列 137
4.15 合并多个有序序列，再对整个有序序列进行迭代 139
4.16 用迭代器取代while循环 140
第5章 文件和I/O 142
5.1 读写文本数据 142
5.2 将输出重定向到文件中 145
5.3 以不同的分隔符或行结尾符完成打印 145
5.4 读写二进制数据 146
5.5 对已不存在的文件执行写入操作 149
5.6 在字符串上执行I/O操作 150
5.7 读写压缩的数据文件 151
5.8 对固定大小的记录进行迭代 152
5.9 将二进制数据读取到可变缓冲区中 153
5.10 对二进制文件做内存映射 155
5.11 处理路径名 157
5.12 检测文件是否存在 158
5.13 获取目录内容的列表 159
5.14 绕过文件名编码 161
5.15 打印无法解码的文件名 162
5.16 为已经打开的文件添加或修改编码方式 164
5.17 将字节数据写入文本文件 166
5.18 将已有的文件描述符包装为文件对象 167
5.19 创建临时文件和目录 169
5.20 同串口进行通信 171
5.21 序列化Python对象 172
第6章 数据编码与处理 177
6.1 读写CSV数据 177
6.2 读写JSON数据 181
6.3 解析简单的XML文档 186
6.4 以增量方式解析大型XML文件 188
6.5 将字典转换为XML 192
6.6 解析、修改和重写XML 194
6.7 用命名空间来解析XML文档 196
6.8 同关系型数据库进行交互 198
6.9 编码和解码十六进制数字 201
6.10 Base64编码和解码 202
6.11 读写二进制结构的数组 203
6.12 读取嵌套型和大小可变的二进制结构 207
6.13 数据汇总和统计 218
第7章 函数 221
7.1 编写可接受任意数量参数的函数 221
7.2 编写只接受关键字参数的函数 223
7.3 将元数据信息附加到函数参数上 224
7.4 从函数中返回多个值 225
7.5 定义带有默认参数的函数 226
7.6 定义匿名或内联函数 229
7.7 在匿名函数中绑定变量的值 230
7.8 让带有N个参数的可调用对象以较少的参数形式调用 232
7.9 用函数替代只有单个方法的类 235
7.10 在回调函数中携带额外的状态 236
7.11 内联回调函数 240
7.12 访问定义在闭包内的变量 242
第8章 类与对象 246
8.1 修改实例的字符串表示 246
8.2 自定义字符串的输出格式 248
8.3 让对象支持上下文管理协议 249
8.4 当创建大量实例时如何节省内存 251
8.5 将名称封装到类中 252
8.6 创建可管理的属性 254
8.7 调用父类中的方法 259
8.8 在子类中扩展属性 263
8.9 创建一种新形式的类属性或实例属性 267
8.10 让属性具有惰性求值的能力 271
8.11 简化数据结构的初始化过程 274
8.12 定义一个接口或抽象基类 278
8.13 实现一种数据模型或类型系统 281
8.14 实现自定义的容器 287
8.15 委托属性的访问 291
8.16 在类中定义多个构造函数 296
8.17 不通过调用init来创建实例 298
8.18 用Mixin技术来扩展类定义 299
8.19 实现带有状态的对象或状态机 305
8.20 调用对象上的方法，方法名以字符串形式给出 311
8.21 实现访问者模式 312
8.22 实现非递归的访问者模式 317
8.23 在环状数据结构中管理内存 324
8.24 让类支持比较操作 327
8.25 创建缓存实例 330
第9章 元编程 335
9.1 给函数添加一个包装 335
9.2 编写装饰器时如何保存函数的元数据 337
9.3 对装饰器进行解包装 339
9.4 定义一个可接受参数的装饰器 341
9.5 定义一个属性可由用户修改的装饰器 342
9.6 定义一个能接收可选参数的装饰器 346
9.7 利用装饰器对函数参数强制执行类型检查 348
9.8 在类中定义装饰器 352
9.9 把装饰器定义成类 354
9.10 把装饰器作用到类和静态方法上 357
9.11 编写装饰器为被包装的函数添加参数 359
9.12 利用装饰器给类定义打补丁 362
9.13 利用元类来控制实例的创建 364
9.14 获取类属性的定义顺序 367
9.15 定义一个能接受可选参数的元类 370
9.16 在*args和**kwargs上强制规定一种参数签名 372
9.17 在类中强制规定编码约定 375
9.18 通过编程的方式来定义类 378
9.19 在定义的时候初始化类成员 382
9.20 通过函数注解来实现方法重载 384
9.21 避免出现重复的属性方法 391
9.22 以简单的方式定义上下文管理器 393
9.23 执行带有局部副作用的代码 395
9.24 解析并分析Python源代码 398
9.25 将Python源码分解为字节码 402
第10章 模块和包 406
10.1 把模块按层次结构组织成包 406
10.2 对所有符号的导入进行精确控制 407
10.3 用相对名称来导入包中的子模块 408
10.4 将模块分解成多个文件 410
10.5 让各个目录下的代码在统一的命名空间下导入 413
10.6 重新加载模块 415
10.7 让目录或zip文件成为可运行的脚本 416
10.8 读取包中的数据文件 417
10.9 添加目录到sys.path中 418
10.10 使用字符串中给定的名称来导入模块 420
10.11 利用import钩子从远端机器上加载模块 421
10.12 在模块加载时为其打补丁 439
10.13 安装只为自己所用的包 441
10.14 创建新的Python环境 442
10.15 发布自定义的包 444
第11章 网络和Web编程 446
11.1 以客户端的形式同HTTP服务交互 446
11.2 创建一个TCP服务器 450
11.3 创建一个UDP服务器 454
11.4 从CIDR地址中生成IP地址的范围 456
11.5 创建基于REST风格的简单接口 458
11.6 利用XML-RPC实现简单的远端过程调用 463
11.7 在不同的解释器间进行通信 466
11.8 实现远端过程调用 468
11.9 以简单的方式验证客户端身份 472
11.10 为网络服务增加SSL支持 474
11.11 在进程间传递socket文件描述符 481
11.12 理解事件驱动型I/O 486
11.13 发送和接收大型数组 493
第12章 并发 496
12.1 启动和停止线程 496
12.2 判断线程是否已经启动 499
12.3 线程间通信 503
12.4 对临界区加锁 508
12.5 避免死锁 511
12.6 保存线程专有状态 515
12.7 创建线程池 517
12.8 实现简单的并行编程 521
12.9 如何规避GIL带来的限制 525
12.10 定义一个Actor任务 528
12.11 实现发布者/订阅者消息模式 532
12.12 使用生成器作为线程的替代方案 536
12.13 轮询多个线程队列 544
12.14 在UNIX上加载守护进程 547
第13章 实用脚本和系统管理 552
13.1 通过重定向、管道或输入文件来作为脚本的输入 552
13.2 终止程序并显示错误信息 553
13.3 解析命令行选项 554
13.4 在运行时提供密码输入提示 557
13.5 获取终端大小 558
13.6 执行外部命令并获取输出 558
13.7 拷贝或移动文件和目录 560
13.8 创建和解包归档文件 562
13.9 通过名称来查找文件 563
13.10 读取配置文件 565
13.11 给脚本添加日志记录 568
13.12 给库添加日志记录 571
13.13 创建一个秒表计时器 573
13.14 给内存和CPU使用量设定限制 575
13.15 加载Web浏览器 576
第14章 测试、调试以及异常 578
14.1 测试发送到stdout上的输出 578
14.2 在单元测试中为对象打补丁 579
14.3 在单元测试中检测异常情况 583
14.4 将测试结果作为日志记录到文件中 585
14.5 跳过测试，或者预计测试结果为失败 586
14.6 处理多个异常 587
14.7 捕获所有的异常 589
14.8 创建自定义的异常 591
14.9 通过引发异常来响应另一个异常 593
14.10 重新抛出上一个异常 595
14.11 发出告警信息 596
14.12 对基本的程序崩溃问题进行调试 598
14.13 对程序做性能分析以及计时统计 600
14.14 让你的程序运行得更快 603
第15章 C语言扩展 610
15.1 利用ctypes来访问C代码 612
15.2 编写简单的C语言扩展模块 618
15.3 编写一个可操作数组的扩展函数 622
15.4 在C扩展模块中管理不透明指针 625
15.5 在扩展模块中定义并导出C API 628
15.6 从C中调用Python 633
15.7 在C扩展模块中释放GIL 639
15.8 混合使用C和Python环境中的线程 639
15.9 用Swig来包装C代码 640
15.10 用Cython来包装C代码 646
15.11 用Cython来高效操作数组 652
15.12 把函数指针转换为可调用对象 657
15.13 把以NULL结尾的字符串传给C库 659
15.14 把Unicode字符串传递给C库 663
15.15 把C字符串转换到Python中 667
15.16 同编码方式不确定的C字符串打交道 669
15.17 把文件名传给C扩展模块 672
15.18 把打开的文件传给C扩展模块 673
15.19 在C中读取文件型对象 674
15.20 从C中访问可迭代对象 677
15.21 排查段错误 678
附录A 补充阅读 680
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python Cookbook 中文版，第 3 版
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>编写高质量代码：改善Python程序的91个建议
前　言
第1章　引论 1
建议1：理解Pythonic概念 1
建议2：编写Pythonic代码 5
建议3：理解Python与C语言的不同之处 8
建议4：在代码中适当添加注释 10
建议5：通过适当添加空行使代码布局更为优雅、合理 12
建议6：编写函数的4个原则 15
建议7：将常量集中到一个文件 18
第2章　编程惯用法 20
建议8：利用assert语句来发现问题 20
建议9：数据交换值的时候不推荐使用中间变量 22
建议10：充分利用Lazy evaluation的特性 24
建议11：理解枚举替代实现的缺陷 25
建议12：不推荐使用type来进行类型检查 27
建议13：尽量转换为浮点类型后再做除法 29
建议14：警惕eval()的安全漏洞 31
建议15：使用enumerate()获取序列迭代的索引和值 33
建议16：分清==与is的适用场景 35
建议17：考虑兼容性，尽可能使用Unicode 37
建议18：构建合理的包层次来管理module 42
第3章　基础语法 45
建议19：有节制地使用from...import语句 45
建议20：优先使用absolute import来导入模块 48
建议21：i+=1不等于++i 50
建议22：使用with自动关闭资源 50
建议23：使用else子句简化循环（异常处理） 53
建议24：遵循异常处理的几点基本原则 55
建议25：避免finally中可能发生的陷阱 59
建议26：深入理解None，正确判断对象是否为空 60
建议27：连接字符串应优先使用join而不是+ 62
建议28：格式化字符串时尽量使用.format方式而不是% 64
建议29：区别对待可变对象和不可变对象 68
建议30：[]、()和{}：一致的容器初始化形式 71
建议31：记住函数传参既不是传值也不是传引用 73
建议32：警惕默认参数潜在的问题 77
建议33：慎用变长参数 78
建议34：深入理解str()和repr()的区别 80
建议35：分清staticmethod和classmethod的适用场景 82
第4章　库 86
建议36：掌握字符串的基本用法 86
建议37：按需选择sort()或者sorted() 89
建议38：使用copy模块深拷贝对象 92
建议39：使用Counter进行计数统计 95
建议40：深入掌握ConfigParser 97
建议41：使用argparse处理命令行参数 99
建议42：使用pandas处理大型CSV文件 103
建议43：一般情况使用ElementTree解析XML 107
建议44：理解模块pickle优劣 111
建议45：序列化的另一个不错的选择——JSON 113
建议46：使用traceback获取栈信息 116
建议47：使用logging记录日志信息 119
建议48：使用threading模块编写多线程程序 122
建议49：使用Queue使多线程编程更安全 125
第5章　设计模式 129
建议50：利用模块实现单例模式 129
建议51：用mixin模式让程序更加灵活 132
建议52：用发布订阅模式实现松耦合 134
建议53：用状态模式美化代码 137
第6章　内部机制 141
建议54：理解built-in objects 141
建议55：__init__()不是构造方法 143
建议56：理解名字查找机制 147
建议57：为什么需要self参数 151
建议58：理解MRO与多继承 154
建议59：理解描述符机制 157
建议60：区别__getattr__()和__getattribute__()方法 160
建议61：使用更为安全的property 164
建议62：掌握metaclass 169
建议63：熟悉Python对象协议 176
建议64：利用操作符重载实现中缀语法 179
建议65：熟悉 Python 的迭代器协议 181
建议66：熟悉 Python 的生成器 185
建议67：基于生成器的协程及greenlet 188
建议68：理解GIL的局限性 192
建议69：对象的管理与垃圾回收 194
第7章　使用工具辅助项目开发 197
建议70：从PyPI安装包 197
建议71：使用pip和yolk安装、管理包 199
建议72：做paster创建包 202
建议73：理解单元测试概念 209
建议74：为包编写单元测试 212
建议75：利用测试驱动开发提高代码的可测性 216
建议76：使用Pylint检查代码风格 218
建议77：进行高效的代码审查 221
建议78：将包发布到PyPI 224
第8章　性能剖析与优化 227
建议79：了解代码优化的基本原则 227
建议80：借助性能优化工具 228
建议81：利用cProfile定位性能瓶颈 229
建议82：使用memory_profiler 和 objgraph 剖析内存使用 235
建议83：努力降低算法复杂度 237
建议84：掌握循环优化的基本技巧 238
建议85：使用生成器提高效率 240
建议86：使用不同的数据结构优化性能 243
建议87：充分利用set的优势 245
建议88：使用multiprocessing克服GIL的缺陷 248
建议89：使用线程池提高效率 254
建议90：使用C/C++模块扩展提高性能 257
建议91：使用 Cython 编写扩展模块 259
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>编写高质量代码：改善Python程序的91个建议
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python标准库
译者序
序
前言
第1章　文本1
1.1　string—文本常量和模板1
1.1.1　函数1
1.1.2　模板2
1.1.3　高级模板4
1.2　textwrap—格式化文本段落6
1.2.1　示例数据6
1.2.2　填充段落6
1.2.3　去除现有缩进7
1.2.4　结合dedent和fill7
1.2.5　悬挂缩进8
1.3　re—正则表达式9
1.3.1　查找文本中的模式9
1.3.2　编译表达式10
1.3.3　多重匹配11
1.3.4　模式语法12
1.3.5　限制搜索22
1.3.6　用组解析匹配23
1.3.7　搜索选项28
1.3.8　前向或后向36
1.3.9　自引用表达式40
1.3.10　用模式修改字符串44
1.3.11　利用模式拆分46
1.4　difflib—比较序列49
1.4.1　比较文本体49
1.4.2　无用数据51
1.4.3　比较任意类型53
第2章　数据结构55
2.1　collections—容器数据类型56
2.1.1　Counter56
2.1.2　defaultdict59
2.1.3　deque59
2.1.4　namedtuple63
2.1.5　OrderedDict65
2.2　array—固定类型数据序列66
2.2.1　初始化67
2.2.2　处理数组67
2.2.3　数组与文件68
2.2.4　候选字节顺序68
2.3　heapq—堆排序算法69
2.3.1　示例数据70
2.3.2　创建堆70
2.3.3　访问堆的内容72
2.3.4　堆的数据极值73
2.4　bisect—维护有序列表74
2.4.1　有序插入74
2.4.2　处理重复75
2.5　Queue—线程安全的FIFO实现76
2.5.1　基本FIFO队列77
2.5.2　LIFO队列77
2.5.3　优先队列78
2.5.4　构建一个多线程播客客户程序79
2.6　struct—二进制数据结构81
2.6.1　函数与Struct类81
2.6.2　打包和解包81
2.6.3　字节序82
2.6.4　缓冲区84
2.7　weakref—对象的非永久引用85
2.7.1　引用85
2.7.2　引用回调86
2.7.3　代理87
2.7.4　循环引用87
2.7.5　缓存对象92
2.8　copy—复制对象94
2.8.1　浅副本94
2.8.2　深副本95
2.8.3　定制复制行为96
2.8.4　深副本中的递归96
2.9　pprint—美观打印数据结构98
2.9.1　打印99
2.9.2　格式化99
2.9.3　任意类100
2.9.4　递归101
2.9.5　限制嵌套输出101
2.9.6　控制输出宽度101
第3章　算法103
3.1　functools—管理函数的工具103
3.1.1　修饰符103
3.1.2　比较111
3.2　itertools—迭代器函数114
3.2.1　合并和分解迭代器114
3.2.2　转换输入116
3.2.3　生成新值117
3.2.4　过滤119
3.2.5　数据分组121
3.3　operator—内置操作符的函数接口123
3.3.1　逻辑操作123
3.3.2　比较操作符124
3.3.3　算术操作符124
3.3.4　序列操作符126
3.3.5　原地操作符127
3.3.6　属性和元素“获取方法”128
3.3.7　结合操作符和定制类129
3.3.8　类型检查130
3.4　contextlib—上下文管理器工具131
3.4.1　上下文管理器API131
3.4.2　从生成器到上下文管理器134
3.4.3　嵌套上下文135
3.4.4　关闭打开的句柄136
第4章　日期和时间138
4.1　time—时钟时间138
4.1.1　壁挂钟时间138
4.1.2　处理器时钟时间139
4.1.3　时间组成140
4.1.4　处理时区141
4.1.5　解析和格式化时间143
4.2　datetime—日期和时间值管理144
4.2.1　时间144
4.2.2　日期145
4.2.3　timedelta147
4.2.4　日期算术运算148
4.2.5　比较值149
4.2.6　结合日期和时间150
4.2.7　格式化和解析151
4.2.8　时区151
4.3　calendar—处理日期152
4.3.1　格式化示例152
4.3.2　计算日期155
第5章　数学计算157
5.1　decimal—定点数和浮点数的数学运算157
5.1.1　Decimal157
5.1.2　算术运算158
5.1.3　特殊值160
5.1.4　上下文160
5.2　fractions—有理数165
5.2.1　创建 Fraction实例165
5.2.2　算术运算167
5.2.3　近似值168
5.3　random—伪随机数生成器168
5.3.1　生成随机数168
5.3.2　指定种子169
5.3.3　保存状态170
5.3.4　随机整数171
5.3.5　选择随机元素172
5.3.6　排列172
5.3.7　采样174
5.3.8　多个并发生成器175
5.3.9　SystemRandom176
5.3.10　非均匀分布177
5.4　math—数学函数178
5.4.1　特殊常量178
5.4.2　测试异常值179
5.4.3　转换为整数180
5.4.4　其他表示181
5.4.5　正号和负号183
5.4.6　常用计算184
5.4.7　指数和对数186
5.4.8　角190
5.4.9　三角函数191
5.4.10　双曲函数194
5.4.11　特殊函数195
第6章　文件系统197
6.1　os.path—平台独立的文件名管理198
6.1.1　解析路径198
6.1.2　建立路径200
6.1.3　规范化路径201
6.1.4　文件时间202
6.1.5　测试文件203
6.1.6　遍历一个目录树204
6.2　glob—文件名模式匹配205
6.2.1　示例数据205
6.2.2　通配符206
6.2.3　单字符通配符207
6.2.4　字符区间207
6.3　linecache—高效读取文本文件208
6.3.1　测试数据208
6.3.2　读取特定行209
6.3.3　处理空行209
6.3.4　错误处理210
6.3.5　读取Python源文件210
6.4　tempfile—临时文件系统对象211
6.4.1　临时文件211
6.4.2　命名文件213
6.4.3　临时目录214
6.4.4　预测名214
6.4.5　临时文件位置215
6.5　shutil—高级文件操作216
6.5.1　复制文件216
6.5.2　复制文件元数据218
6.5.3　处理目录树220
6.6　mmap—内存映射文件222
6.6.1　读文件223
6.6.2　写文件223
6.6.3　正则表达式225
6.7　codecs—字符串编码和解码226
6.7.1　Unicode入门226
6.7.2　处理文件228
6.7.3　字节序230
6.7.4　错误处理232
6.7.5　标准输入和输出流235
6.7.6　编码转换238
6.7.7　非Unicode编码239
6.7.8　增量编码240
6.7.9　Unicode数据和网络通信242
6.7.10　定义定制编码245
6.8　StringIO—提供类文件API的文本缓冲区251
6.9　fnmatch—UNIX式glob模式匹配252
6.9.1　简单匹配252
6.9.2　过滤253
6.9.3　转换模式254
6.10　dircache—缓存目录列表254
6.10.1　列出目录内容255
6.10.2　标注列表256
6.11　filecmp—比较文件257
6.11.1　示例数据258
6.11.2　比较文件260
6.11.3　比较目录261
6.11.4　程序中使用差异262
第7章　数据持久存储与交换267
7.1　pickle—对象串行化268
7.1.1　导入268
7.1.2　编码和解码字符串数据268
7.1.3　处理流269
7.1.4　重构对象的问题271
7.1.5　不可pickle的对象272
7.1.6　循环引用273
7.2　shelve—对象持久存储275
7.2.1 　创建一个新shelf275
7.2.2　写回276
7.2.3　特定shelf类型277
7.3　anydbm—DBM数据库278
7.3.1　数据库类型278
7.3.2　创建一个新数据库279
7.3.3　打开一个现有数据库279
7.3.4　错误情况280
7.4　whichdb—识别DBM数据库格式281
7.5　sqlite3—嵌入式关系数据库281
7.5.1　创建数据库282
7.5.2　获取数据285
7.5.3　查询元数据286
7.5.4　行对象287
7.5.5　查询中使用变量288
7.5.6　批量加载290
7.5.7　定义新列类型291
7.5.8　确定列类型294
7.5.9　事务296
7.5.10　隔离级别298
7.5.11　内存中数据库302
7.5.12　导出数据库内容302
7.5.13　SQL中使用Python函数304
7.5.14　定制聚集306
7.5.15　定制排序307
7.5.16　线程和连接共享308
7.5.17　限制对数据的访问309
7.6　xml.etree.ElementTree—XML操纵API311
7.6.1　解析XML文档312
7.6.2　遍历解析树313
7.6.3　查找文档中的节点314
7.6.4　解析节点属性315
7.6.5　解析时监视事件317
7.6.6　创建一个定制树构造器319
7.6.7　解析串321
7.6.8　用元素节点构造文档322
7.6.9　美观打印XML323
7.6.10　设置元素属性325
7.6.11　由节点列表构造树327
7.6.12　将XML串行化至一个流329
7.7　csv—逗号分隔值文件331
7.7.1　读文件332
7.7.2　写文件332
7.7.3　方言334
7.7.4　使用字段名338
第8章　数据压缩与归档340
8.1　zlib—GNU zlib压缩340
8.1.1　处理内存中数据340
8.1.2　增量压缩与解压缩341
8.1.3　混合内容流342
8.1.4　校验和343
8.1.5　压缩网络数据343
8.2　gzip—读写GNU Zip文件347
8.2.1　写压缩文件348
8.2.2　读压缩数据349
8.2.3　处理流350
8.3　bz2—bzip2压缩352
8.3.1　内存中一次性操作352
8.3.2　增量压缩和解压缩354
8.3.3　混合内容流354
8.3.4　写压缩文件355
8.3.5　读压缩文件357
8.3.6　压缩网络数据358
8.4　tarfile—Tar归档访问362
8.4.1　测试Tar文件362
8.4.2　从归档文件读取元数据362
8.4.3　从归档抽取文件364
8.4.4　创建新归档365
8.4.5　使用候选归档成员名366
8.4.6　从非文件源写数据366
8.4.7　追加到归档367
8.4.8　处理压缩归档368
8.5　zipfile—ZIP归档访问369
8.5.1　测试ZIP文件369
8.5.2　从归档读取元数据369
8.5.3　从归档抽取归档文件371
8.5.4　创建新归档371
8.5.5　使用候选归档成员名373
8.5.6　从非文件源写数据373
8.5.7　利用ZipInfo实例写374
8.5.8　追加到文件375
8.5.9　Python ZIP归档376
8.5.10　限制377
第9章　加密378
9.1　hashlib—密码散列378
9.1.1　示例数据378
9.1.2　MD5示例379
9.1.3　SHA1示例379
9.1.4　按名创建散列379
9.1.5　增量更新380
9.2　hmac—密码消息签名与验证381
9.2.1　消息签名381
9.2.2　SHA与MD5382
9.2.3　二进制摘要383
9.2.4　消息签名的应用383
第10章　进程与线程387
10.1　subprocess—创建附加进程387
10.1.1　运行外部命令388
10.1.2　直接处理管道391
10.1.3　连接管道段393
10.1.4　与其他命令交互394
10.1.5　进程间传递信号396
10.2　signal—异步系统事件400
10.2.1　接收信号400
10.2.2　获取注册的处理程序401
10.2.3　发送信号402
10.2.4　闹铃403
10.2.5　忽略信号403
10.2.6　信号和线程404
10.3　threading—管理并发操作406
10.3.1　Thread对象406
10.3.2　确定当前线程407
10.3.3　守护与非守护线程409
10.3.4　列举所有线程411
10.3.5　派生线程412
10.3.6　定时器线程414
10.3.7　线程间传送信号415
10.3.8　控制资源访问416
10.3.9　同步线程421
10.3.10　限制资源的并发访问422
10.3.11　线程特定数据423
10.4　multiprocessing—像线程一样管理进程425
10.4.1　multiprocessing基础426
10.4.2　可导入的目标函数427
10.4.3　确定当前进程428
10.4.4　守护进程428
10.4.5　等待进程430
10.4.6　终止进程431
10.4.7　进程退出状态432
10.4.8　日志434
10.4.9　派生进程435
10.4.10　向进程传递消息435
10.4.11　进程间信号传输438
10.4.12　控制资源访问439
10.4.13　同步操作440
10.4.14　控制资源的并发访问441
10.4.15　管理共享状态443
10.4.16　共享命名空间444
10.4.17　进程池445
10.4.18　实现MapReduce447
第11章　网络通信452
11.1　socket—网络通信452
11.1.1　寻址、协议簇和套接字类型452
11.1.2　TCP/IP客户和服务器460
11.1.3　用户数据报客户和服务器467
11.1.4　UNIX域套接字469
11.1.5　组播473
11.1.6　发送二进制数据476
11.1.7　非阻塞通信和超时478
11.2　select—高效等待I/O 479
11.2.1　使用select()479
11.2.2　有超时的非阻塞I/O484
11.2.3　使用 poll()486
11.2.4　平台特定选项490
11.3　SocketServer—创建网络服务器491
11.3.1　服务器类型491
11.3.2　服务器对象491
11.3.3　实现服务器491
11.3.4　请求处理器492
11.3.5　回应示例492
11.3.6　线程和进程497
11.4　asyncore—异步I/O499
11.4.1　服务器500
11.4.2　客户501
11.4.3　事件循环503
11.4.4　处理其他事件循环505
11.4.5　处理文件507
11.5　asynchat—异步协议处理器508
11.5.1　消息终止符508
11.5.2　服务器和处理器508
11.5.3　客户511
11.5.4　集成512
第12章　Internet514
12.1　urlparse—分解URL514
12.1.1　解析515
12.1.2　反解析517
12.1.3　连接518
12.2　BaseHTTPServer—实现Web服务器的基类519
12.2.1　HTTP GET519
12.2.2　HTTP POST521
12.2.3　线程与进程522
12.2.4　处理错误523
12.2.5　设置首部524
12.3　urllib—网络资源访问525
12.3.1　利用缓存实现简单获取526
12.3.2　参数编码527
12.3.3　路径与URL529
12.4　urllib2—网络资源访问530
12.4.1　HTTP GET530
12.4.2　参数编码532
12.4.3　HTTP POST533
12.4.4　增加发出首部534
12.4.5　从请求提交表单数据535
12.4.6　上传文件536
12.4.7　创建定制协议处理器539
12.5　Base64—用ASCII编码二进制数据541
12.5.1　Base64编码541
12.5.2　Base64解码542
12.5.3　URL安全的变种543
12.5.4　其他编码543
12.6　robotparser—网络蜘蛛访问控制544
12.6.1　robots.txt545
12.6.2　测试访问权限545
12.6.3　长久蜘蛛546
12.7　Cookie—HTTP Cookie547
12.7.1　创建和设置Cookie547
12.7.2　Morsel548
12.7.3　编码值550
12.7.4　接收和解析Cookie首部550
12.7.5　候选输出格式551
12.7.6　废弃的类552
12.8　uuid—全局惟一标识符552
12.8.1　UUID 1—IEEE 802 MAC地址552
12.8.2　UUID 3和5—基于名字的值554
12.8.3　UUID 4—随机值556
12.8.4　处理UUID对象556
12.9　json—JavaScript对象记法557
12.9.1　编码和解码简单数据类型557
12.9.2　优质输出和紧凑输出558
12.9.3　编码字典560
12.9.4　处理定制类型561
12.9.5　编码器和解码器类563
12.9.6　处理流和文件565
12.9.7　混合数据流566
12.10　xmlrpclib—XML-RPC的客户端库567
12.10.1　连接服务器568
12.10.2　数据类型570
12.10.3　传递对象573
12.10.4　二进制数据573
12.10.5　异常处理575
12.10.6　将调用结合在一个消息中575
12.11　SimpleXMLRPCServer—一个XML-RPC服务器577
12.11.1　一个简单的服务器577
12.11.2　备用API名578
12.11.3　加点的API名 579
12.11.4　任意API名580
12.11.5　公布对象的方法581
12.11.6　分派调用583
12.11.7　自省API584
第13章　Email587
13.1　smtplib—简单邮件传输协议客户587
13.1.1　发送Email消息587
13.1.2　认证和加密589
13.1.3　验证Email地址592
13.2　smtpd—示例邮件服务器593
13.2.1　邮件服务器基类593
13.2.2　调试服务器595
13.2.3　代理服务器596
13.3　imaplib—IMAP4客户库596
13.3.1　变种597
13.3.2　连接到服务器597
13.3.3　示例配置598
13.3.4　列出邮箱599
13.3.5　邮箱状态601
13.3.6　选择邮箱602
13.3.7　搜索消息603
13.3.8　搜索规则604
13.3.9　获取消息605
13.3.10　完整消息608
13.3.11　上传消息609
13.3.12　移动和复制消息611
13.3.13　删除消息612
13.4　mailbox—管理邮件归档614
13.4.1　mbox614
13.4.2　Maildir616
13.4.3　其他格式622
第14章　应用构建模块623
14.1　getopt—命令行选项解析624
14.1.1　函数参数624
14.1.2　短格式选项624
14.1.3　长格式选项625
14.1.4　一个完整的例子625
14.1.5　缩写长格式选项627
14.1.6　GNU选项解析627
14.1.7　结束参数处理629
14.2　optparse—命令行选项解析器629
14.2.1　创建OptionParser629
14.2.2　短格式和长格式选项630
14.2.3　用getopt比较631
14.2.4　选项值632
14.2.5　选项动作635
14.2.6　帮助消息639
14.3　argparse—命令行选项和参数解析644
14.3.1　与optparse比较644
14.3.2　建立解析器644
14.3.3　定义参数644
14.3.4　解析命令行645
14.3.5　简单示例645
14.3.6　自动生成的选项652
14.3.7　解析器组织653
14.3.8　高级参数处理659
14.4　readline—GNU Readline库666
14.4.1　配置667
14.4.2　完成文本668
14.4.3　访问完成缓冲区670
14.4.4　输入历史674
14.4.5　hook676
14.5　getpass—安全密码提示677
14.5.1　示例677
14.5.2　无终端使用getpass678
14.6　cmd—面向行的命令处理器679
14.6.1　处理命令680
14.6.2　命令参数681
14.6.3　现场帮助682
14.6.4　自动完成683
14.6.5　覆盖基类方法684
14.6.6　通过属性配置Cmd 686
14.6.7　运行shell命令687
14.6.8　候选输入688
14.6.9　sys.argv的命令689
14.7　shlex—解析shell语法690
14.7.1　加引号的字符串691
14.7.2　嵌入注释692
14.7.3　分解693
14.7.4　包含其他Token源693
14.7.5　控制解析器694
14.7.6　错误处理696
14.7.7　POSIX与非POSIX解析697
14.8　ConfigParser—处理配置文件698
14.8.1　配置文件格式699
14.8.2　读取配置文件699
14.8.3　访问配置设置701
14.8.4　修改设置705
14.8.5　保存配置文件706
14.8.6　选项搜索路径707
14.8.7　用接合合并值709
14.9　日志—报告状态、错误和信息消息712
14.9.1　应用与库中的日志记录712
14.9.2　记入文件712
14.9.3　旋转日志文件713
14.9.4　详细级别714
14.9.5　命名日志记录器实例715
14.10　fileinput—命令行过滤器框架716
14.10.1　M3U文件转换为RSS716
14.10.2　进度元数据718
14.10.3　原地过滤719
14.11　atexit—程序关闭回调721
14.11.1　示例721
14.11.2　什么情况下不调用atexit函数722
14.11.3　处理异常724
14.12　sched—定时事件调度器725
14.12.1　有延迟地运行事件725
14.12.2　重叠事件726
14.12.3　事件优先级727
14.12.4　取消事件727
第15章　国际化和本地化729
15.1　gettext—消息编目729
15.1.1　转换工作流概述729
15.1.2　由源代码创建消息编目730
15.1.3　运行时查找消息编目732
15.1.4　复数值733
15.1.5　应用与模块本地化735
15.1.6　切换转换736
15.2　locale—文化本地化API736
15.2.1　探查当前本地化环境737
15.2.2　货币742
15.2.3　格式化数字742
15.2.4　解析数字743
15.2.5　日期和时间744
第16章　开发工具745
16.1　pydoc—模块的联机帮助746
16.1.1　纯文本帮助746
16.1.2　HTML帮助746
16.1.3　交互式帮助746
16.2　doctest—通过文档完成测试747
16.2.1　开始747
16.2.2　处理不可预测的输出748
16.2.3　Traceback752
16.2.4　避开空白符753
16.2.5　测试位置758
16.2.6　外部文档761
16.2.7　运行测试763
16.2.8　测试上下文766
16.3　unittest—自动测试框架769
16.3.1　基本测试结构769
16.3.2　运行测试770
16.3.3　测试结果770
16.3.4　断言真值772
16.3.5　测试相等性773
16.3.6　近似相等774
16.3.7　测试异常775
16.3.8　测试固件775
16.3.9　测试套件776
16.4　traceback—异常和栈轨迹777
16.4.1　支持函数777
16.4.2　处理异常777
16.4.3　处理栈780
16.5　cgitb—详细的traceback报告783
16.5.1　标准traceback转储783
16.5.2　启用详细traceback783
16.5.3　traceback中的局部变量785
16.5.4　异常属性787
16.5.5　HTML输出788
16.5.6　记录traceback789
16.6　pdb—交互式调试工具791
16.6.1　启动调试工具791
16.6.2　控制调试工具794
16.6.3　断点803
16.6.4　改变执行流813
16.6.5　用别名定制调试工具819
16.6.6　保存配置设置821
16.7　trace—执行程序流822
16.7.1　示例程序822
16.7.2　跟踪执行822
16.7.3　代码覆盖823
16.7.4　调用关系825
16.7.5　编程接口826
16.7.6　保存结果数据828
16.7.7　选项829
16.8　profile和pstats—性能分析830
16.8.1　运行性能分析工具830
16.8.2　在上下文中运行832
16.8.3　pstats：保存和处理统计信息833
16.8.4　限制报告内容835
16.8.5　调用图836
16.9　timeit—测量小段Python代码的执行时间837
16.9.1　模块内容837
16.9.2　基本示例837
16.9.3　值存储在字典中838
16.9.4　从命令行执行840
16.10　compileall—字节编译源文件841
16.10.1　编译一个目录842
16.10.2　编译sys.path842
16.10.3　从命令行执行843
16.11　pyclbr—类浏览器843
16.11.1　扫描类845
16.11.2　扫描函数846
第17章　运行时特性847
17.1　site—全站点配置847
17.1.1　导入路径847
17.1.2　用户目录849
17.1.3　路径配置文件850
17.1.4　定制站点配置852
17.1.5　定制用户配置853
17.1.6　禁用site模块854
17.2　sys—系统特定的配置854
17.2.1　解释器设置855
17.2.2　运行时环境860
17.2.3　内存管理和限制862
17.2.4　异常处理867
17.2.5　底层线程支持869
17.2.6　模块和导入875
17.2.7　跟踪程序运行情况892
17.3　os—可移植访问操作系统特定特性898
17.3.1　进程所有者898
17.3.2　进程环境900
17.3.3　进程工作目录901
17.3.4　管道901
17.3.5　文件描述符905
17.3.6　文件系统权限905
17.3.7　目录906
17.3.8　符号链接907
17.3.9　遍历目录树907
17.3.10　运行外部命令909
17.3.11　用os.fork()创建进程910
17.3.12　等待子进程911
17.3.13　Spawn913
17.3.14　文件系统权限913
17.4　platform—系统版本信息914
17.4.1　解释器915
17.4.2　平台916
17.4.3　操作系统和硬件信息916
17.4.4　可执行程序体系结构918
17.5　resource—系统资源管理918
17.5.1　当前使用情况919
17.5.2　资源限制919
17.6　gc—垃圾回收器922
17.6.1　跟踪引用922
17.6.2　强制垃圾回收925
17.6.3　查找无法收集的对象引用928
17.6.4　回收阈限和代931
17.6.5　调试933
17.7　sysconfig—解释器编译时配置940
17.7.1　配置变量940
17.7.2　安装路径942
17.7.3　Python版本和平台945
第18章　语言工具947
18.1　warnings—非致命警告947
18.1.1　分类和过滤948
18.1.2　生成警告948
18.1.3　用模式过滤949
18.1.4　重复的警告951
18.1.5　候选消息传送函数951
18.1.6　格式化952
18.1.7　警告中的栈层次952
18.2　abc—抽象基类953
18.2.1　为什么使用抽象基类953
18.2.2　抽象基类如何工作954
18.2.3　注册一个具体类954
18.2.4　通过派生实现955
18.2.5　abc中的具体方法956
18.2.6　抽象属性957
18.3　dis—Python字节码反汇编工具960
18.3.1　基本反汇编961
18.3.2　反汇编函数961
18.3.3　类963
18.3.4　使用反汇编进行调试963
18.3.5　循环的性能分析965
18.3.6　编译器优化970
18.4　inspect—检查现场对象972
18.4.1　示例模块972
18.4.2　模块信息973
18.4.3　检查模块974
18.4.4　检查类975
18.4.5　文档串 976
18.4.6　获取源代码977
18.4.7　方法和函数参数979
18.4.8　类层次结构980
18.4.9　方法解析顺序981
18.4.10　栈与帧982
18.5　exceptions—内置异常类984
18.5.1　基类985
18.5.2　产生的异常985
18.5.3　警告类型998
第19章　模块与包999
19.1　imp—Python的导入机制999
19.1.1　示例包999
19.1.2　模块类型999
19.1.3　查找模块1000
19.1.4　加载模块1001
19.2　zipimport—从ZIP归档加载Python代码1003
19.2.1　示例1003
19.2.2　查找模块1004
19.2.3　访问代码1004
19.2.4　源代码1005
19.2.5　包1006
19.2.6　数据1006
19.3　pkgutil—包工具1008
19.3.1　包导入路径1008
19.3.2　包的开发版本1010
19.3.3　用PKG文件管理路径1011
19.3.4　嵌套包1013
19.3.5　包数据1014
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python标准库
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python高级编程
第1章　准备工作
1.1　安装Python
1.1.1　Python实现版本
1.1.2　在Linux环境下安装
1.1.3　在Windows环境下安装
1.1.4　在Mac OS X环境下安装
1.2　Python命令行
1.2.1　定制交互式命令行
1.2.2　iPython：增强型命令行
1.3　安装setuptools
1.3.1　工作原理
1.3.2　使用EasyInstall安装setuptools
1.3.3　将MinGW整合到distutils中
1.4　工作环境
1.4.1　使用文本编辑器与辅助工具的组合
1.4.2　使用集成开发环境
1.5　小结
第2章　语法最佳实践——低于类级
2.1　列表推导
2.2　迭代器和生成器
2.2.1　生成器
2.2.2　协同程序
2.2.3　生成器表达式
2.2.4　itertools模块
2.3　装饰器
2.3.1　如何编写装饰器
2.3.2　参数检查
2.3.3　缓存
2.3.4　代理
2.3.5　上下文提供者
2.4　with和contextlib
2.4.1　contextlib模块
2.4.2　上下文实例
2.5　小结
第3章　语法最佳实践——类级
3.1　子类化内建类型
3.2　访问超类中的方法
3.2.1　理解Python的方法解析顺序
3.2.2　super的缺陷
3.3　最佳实践
3.4　描述符和属性
3.4.1　描述符
3.4.2　属性
3.5　槽
3.6　元编程
3.6.1　__new__方法
3.6.2　__metaclass__方法
3.7　小结
第4章　选择好的名称
4.1　PEP 8和命名最佳实践
4.2　命名风格
4.2.1　变量
4.2.2　函数和方法
4.2.3　属性
4.2.4　类
4.2.5　模块和包
4.3　命名指南
4.3.1　使用“has”或“is”前缀命名布尔元素
4.3.2　用复数形式命名序列元素
4.3.3　用显式的名称命名字典
4.3.4　避免通用名称
4.3.5　避免现有名称
4.4　参数最佳实践
4.4.1　根据迭代设计构建参数
4.4.2　信任参数和测试
4.4.3　小心使用*args和**kw魔法参数
4.5　类名
4.6　模块和包名称
4.7　使用API
4.7.1　跟踪冗长
4.7.2　构建命名空间树
4.7.3　分解代码
4.7.4　使用Egg
4.7.5　使用deprecation过程
4.8　有用的工具
4.8.1　Pylint
4.8.2　CloneDigger
4.9　小结
第5章　编写一个包
第6章　编写一个应用程序
第7章　使用zc.buildout
第8章　代码管理
第9章　生命周期管理
第10章　编写项目文档
第11章　测试驱动开发
第12章　优化：通用原则和剖析技术
第13章　优化：解决方案
第14章　有用的设计模式
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python高级编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python核心编程（第3版）
第1部分 通用应用主题
第1章 正则表达式 2
1.1 简介／动机 3
1.2 特殊符号和字符 5
1.2.1 使用择一匹配符号匹配多个正则表达式模式 6
1.2.2 匹配任意单个字符 6
1.2.3 从字符串起始或者结尾或者单词边界匹配 7
1.2.4 创建字符集 8
1.2.5 限定范围和否定 8
1.2.6 使用闭包操作符实现存在性和频数匹配 9
1.2.7 表示字符集的特殊字符 10
1.2.8 使用圆括号指定分组 10
1.2.9 扩展表示法 11
1.3 正则表达式和Python语言 11
1.3.1 re模块：核心函数和方法 12
1.3.2 使用compile()函数编译正则表达式 13
1.3.3 匹配对象以及group()和groups()方法 14
1.3.4 使用match()方法匹配字符串 14
1.3.5 使用search()在一个字符串中查找模式（搜索与匹配的对比） 15
1.3.6 匹配多个字符串 16
1.3.7 匹配任何单个字符（.） 16
1.3.8 创建字符集（[ ]） 17
1.3.9 重复、特殊字符以及分组 18
1.3.10 匹配字符串的起始和结尾以及单词边界 20
1.3.11 使用findall()和finditer()查找每一次出现的位置 21
1.3.12 使用sub()和subn()搜索与替换 22
1.3.13 在限定模式上使用split()分隔字符串 23
1.3.14 扩展符号 24
1.3.15 杂项 27
1.4 一些正则表达式示例 28
1.5 更长的正则表达式示例 33
1.5.1 匹配字符串 35
1.5.2 搜索与匹配……还有贪婪 37
1.6 练习 39
第2章 网络编程 42
2.1 简介 43
2.2 客户端/服务器架构 43
2.2.1 硬件客户端/服务器架构 43
2.2.2 软件客户端/服务器架构 44
2.2.3 银行出纳员作为服务器吗 44
2.2.4 客户端/服务器网络编程 45
2.3 套接字：通信端点 46
2.3.1 套接字 46
2.3.2 套接字地址：主机-端口对 47
2.3.3 面向连接的套接字与无连接的套接字 47
2.4 Python中的网络编程 48
2.4.1 socket()模块函数 49
2.4.2 套接字对象（内置）方法 49
2.4.3 创建TCP服务器 51
2.4.4 创建TCP客户端 54
2.4.5 执行TCP服务器和客户端 56
2.4.6 创建UDP服务器 58
2.4.7 创建UDP客户端 59
2.4.8 执行UDP服务器和客户端 60
2.4.9 socket模块属性 61
2.5 *SocketServer模块 62
2.5.1 创建SocketServer TCP服务器 63
2.5.2 创建SocketServer TCP客户端 64
2.5.3 执行TCP服务器和客户端 65
2.6 *Twisted框架介绍 66
2.6.1 创建Twisted Reactor TCP服务器 66
2.6.2 创建Twisted Reactor TCP客户端 67
2.6.3 执行TCP服务器和客户端 69
2.7 相关模块 69
2.8 练习 70
第3章 因特网客户端编程 74
3.1 因特网客户端简介 75
3.2 文件传输 75
3.2.1 文件传输因特网协议 75
3.2.2 文件传输协议 76
3.2.3 Python和FTP 77
3.2.4 ftplib.FTP类的方法 77
3.2.5 交互式FTP示例 78
3.2.6 客户端FTP程序示例 79
3.2.7 FTP的其他内容 80
3.3 网络新闻 81
3.3.1 Usenet与新闻组 81
3.3.2 网络新闻传输协议 82
3.3.3 Python和NNTP 83
3.3.4 nntplib.NNTP类方法 83
3.3.5 交互式NNTP示例 84
3.3.6 客户端程序NNTP示例 85
3.3.7 NNTP的其他内容 89
3.4 电子邮件 90
3.4.1 电子邮件系统组件和协议 90
3.4.2 发送电子邮件 91
3.4.3 Python和SMTP 92
3.4.4 smtplib.SMTP类方法 92
3.4.5 交互式SMTP示例 93
3.4.6 SMTP的其他内容 94
3.4.7 接收电子邮件 94
3.4.8 POP和IMAP 95
3.4.9 Python和POP3 95
3.4.10 交互式POP3示例 96
3.4.11 poplib.POP3类方法 97
3.4.12 客户端程序SMTP和POP3示例 98
3.4.13 Python和IMAP4 100
3.4.14 交互式IMAP4示例 100
3.4.15 imaplib.IMAP4类中的常用方法 101
3.5 实战 102
3.5.1 生成电子邮件 102
3.5.2 解析电子邮件 104
3.5.3 基于Web的云电子邮件服务 105
3.5.4 最佳实践：安全、重构 106
3.5.5 Yahoo! Mail 108
3.5.6 Gmail 112
3.6 相关模块 115
3.6.1 电子邮件 115
3.6.2 其他因特网客户端协议 115
3.7 练习 116
第4章 多线程编程 122
4.1 简介/动机 123
4.2 线程和进程 124
4.2.1 进程 124
4.2.2 线程 124
4.3 线程和Python 125
4.3.1 全局解释器锁 125
4.3.2 退出线程 126
4.3.3 在Python中使用线程 126
4.3.4 不使用线程的情况 126
4.3.5 Python的threading模块 128
4.4 thread模块 128
4.5 threading模块 132
4.5.1 Thread类 133
4.5.2 threading模块的其他函数 139
4.6 单线程和多线程执行对比 140
4.7 多线程实践 142
4.7.1 图书排名示例 142
4.7.2 同步原语 149
4.7.3 锁示例 149
4.7.4 信号量示例 156
4.8 生产者-消费者问题和Queue/queue模块 159
4.9 线程的替代方案 162
4.9.1 subprocess模块 163
4.9.2 multiprocessing模块 163
4.9.3 concurrent.futures模块 163
4.10 相关模块 165
4.11 练习 165
第5章 GUI编程 168
5.1 简介 169
5.1.1 Tcl、Tk和Tkinter 169
5.1.2 安装和使用Tkinter 170
5.1.3 客户端/服务端架构 170
5.2 Tkinter和Python编程 170
5.2.1 Tkinter模块：添加Tk到应用中 171
5.2.2 GUI编程介绍 171
5.2.3 顶层窗口：Tkinter.Tk() 173
5.2.4 Tk控件 173
5.3 Tkinter示例 174
5.3.1 Label控件 174
5.3.2 Button控件 175
5.3.3 Label和Button控件 175
5.3.4 Label、Button和Scale控件 176
5.3.5 偏函数应用示例 178
5.3.6 中级Tkinter示例 180
5.4 其他GUI简介 185
5.4.1 Tk接口扩展（Tix） 187
5.4.2 Python MegaWidgets（PMW） 188
5.4.3 wxWidgets和wxPython 188
5.4.4 GTK+和PyGTK 190
5.4.5 Tile/Ttk 192
5.5 相关模块和其他GUI 194
5.6 练习 196
第6章 数据库编程 198
6.1 简介 199
6.1.1 持久化存储 199
6.1.2 数据库基本操作和SQL 199
6.1.3 数据库和Python 201
6.2 Python的DB-API 203
6.2.1 模块属性 203
6.2.2 Connection对象 205
6.2.3 Cursor对象 206
6.2.4 类型对象和构造函数 207
6.2.5 关系数据库 209
6.2.6 数据库和Python：适配器 210
6.2.7 使用数据库适配器的示例 210
6.2.8 数据库适配器示例应用 215
6.3 ORM 226
6.3.1 考虑对象，而不是SQL 227
6.3.2 Python和ORM 227
6.3.3 员工角色数据库示例 228
6.3.4 SQLAlchemy 229
6.3.5 SQLObject 240
6.4 非关系数据库 245
6.4.1 NoSQL介绍 245
6.4.2 MongoDB 246
6.4.3 PyMongo：MongoDB和Python 246
6.4.4 总结 250
6.5 相关文献 250
6.6 练习 252
第7章 *Microsoft Office编程 256
7.1 简介 257
7.2 使用Python进行COM客户端编程 257
7.2.1 客户端COM编程 258
7.2.2 入门 258
7.3 入门示例 259
7.3.1 Excel 259
7.3.2 Word 261
7.3.3 PowerPoint 262
7.3.4 Outlook 264
7.4 中级示例 266
7.4.1 Excel 266
7.4.2 Outlook 268
7.4.3 PowerPoint 273
7.4.4 总结 280
7.5 相关模块/包 281
7.6 练习 281
第8章 扩展Python 286
8.1 简介和动机 287
8.1.1 Python扩展简介 287
8.1.2 什么情况下需要扩展Python 288
8.1.3 什么情况下不应该扩展Python 288
8.2 编写Python扩展 289
8.2.1 创建应用代码 289
8.2.2 根据样板编写封装代码 291
8.2.3 编译 296
8.2.4 导入并测试 297
8.2.5 引用计数 300
8.2.6 线程和全局解释器锁 301
8.3 相关主题 302
8.3.1 SWIG 302
8.3.2 Pyrex 302
8.3.3 Cython 302
8.3.4 Psyco 303
8.3.5 PyPy 303
8.3.6 嵌入Python 304
8.4 练习 304
第2部分 Web开发
第9章 Web客户端和服务器 306
9.1 简介 307
9.1.1 Web应用：客户端/服务器计算 307
9.1.2 因特网 308
9.2 Python Web客户端工具 310
9.2.1 统一资源定位符 310
9.2.2 urlparse模块 312
9.2.3 urllib模块/包 313
9.2.4 使用urllib2 HTTP验证的示例 317
9.2.5 将HTTP验证示例移植到Python 3中 319
9.3 Web客户端 322
9.3.1 一个简单的Web爬虫/蜘蛛/机器人 322
9.3.2 解析Web页面 328
9.3.3 可编程的Web浏览 333
9.4 Web（HTTP）服务器 336
9.5 相关模块 339
9.6 练习 341
第10章 Web编程：CGI和WSGI 345
10.1 简介 346
10.2 帮助Web服务器处理客户端数据 346
10.2.1 CGI简介 346
10.2.2 CGI应用程序 347
10.2.3 cgi模块 348
10.2.4 cgitb模块 348
10.3 构建CGI应用程序 349
10.3.1 构建Web服务器 349
10.3.2 建立表单页 351
10.3.3 生成结果页面 352
10.3.4 生成表单和结果页面 353
10.3.5 全面交互的Web站点 357
10.4 在CGI中使用Unicode 362
10.5 高级CGI 364
10.5.1 mulitipart表单提交和文件上传 364
10.5.2 多值字段 364
10.5.3 cookie 365
10.5.4 cookie和文件上传 365
10.6 WSGI简介 373
10.6.1 动机（替代CGI） 373
10.6.2 服务器集成 374
10.6.3 外部进程 374
10.6.4 WSGI简介 375
10.6.5 WSGI服务器 376
10.6.6 参考服务器 377
10.6.7 WSGI应用示例 378
10.6.8 中间件及封装WSGI应用 378
10.6.9 在Python 3中使用WSGI 379
10.7 现实世界中的Web开发 380
10.8 相关模块 380
10.9 练习 381
第11章 Web框架：Django 384
11.1 简介 385
11.2 Web框架 385
11.3 Django简介 386
11.4 项目和应用 390
11.4.1 在Django中创建项目 390
11.4.2 运行开发服务器 393
11.5 “Hello World”应用（一个博客） 394
11.6 创建模型来添加数据库服务 396
11.6.1 设置数据库 396
11.6.2 创建表 398
11.7 Python 应用shell 400
11.7.1 在Django中使用Python shell 400
11.7.2 测试数据模型 402
11.8 Django管理应用 403
11.8.1 设置admin 403
11.8.2 使用admin 404
11.9 创建博客的用户界面 410
11.9.1 创建模板 411
11.9.2 创建URL模式 412
11.9.3 创建视图函数 415
11.10 改进输出 418
11.11 处理用户输入 422
11.11.1 模板：添加HTML表单 423
11.11.2 添加URLconf项 423
11.11.3 视图：处理用户输入 423
11.11.4 跨站点请求伪造 424
11.12 表单和模型表单 426
11.12.1 Django表单简介 426
11.12.2 模型表单示例 427
11.12.3 使用ModelForm来生成HTML表单 427
11.12.4 处理ModelForm数据 428
11.13 视图进阶 429
11.14 *改善外观 431
11.15 *单元测试 432
11.15.1 blog应用的代码审查 434
11.15.2 blog应用总结 439
11.16 *中级Django应用：TweetApprover 439
11.16.1 创建项目文件结构 440
11.16.2 安装Twython库 445
11.16.3 URL结构 446
11.16.4 数据模型 449
11.16.5 提交新推文以便审核 453
11.16.6 审核推文 457
11.17 资源 465
11.18 总结 465
11.19 练习 466
第12章 云计算：Google App Engine 470
12.1 简介 471
12.2 云计算 471
12.2.1 云计算服务的层次 472
12.2.2 App Engine 473
12.3 沙盒和App Engine SDK 476
12.4 选择一个App Engine框架 479
12.5 Python 2.7支持 485
12.5.1 一般差异 486
12.5.2 代码中的差异 486
12.6 与Django比较 487
12.6.1 开始“Hello World” 487
12.6.2 手动创建“Hello World”（Zip文件用户） 488
12.7 将“Hello World”改成一个 简单的博客 489
12.7.1 快速发现改动：30秒内将纯文本转成HTML 489
12.7.2 添加表单 490
12.7.3 添加Datastore服务 492
12.7.4 迭代改进 496
12.7.5 开发/SDK控制台 496
12.8 添加Memcache服务 502
12.9 静态文件 505
12.10 添加用户服务 505
12.10.1 Google账号验证 506
12.10.2 联合验证 507
12.11 远程API shell 507
12.12 问与答（Python实现） 509
12.12.1 发送电子邮件 509
12.12.2 接收电子邮件 510
12.13 使用XMPP发送即时消息 512
12.14 处理图片 514
12.15 任务队列（非定期任务） 514
12.15.1 创建任务 515
12.15.2 配置app.yaml 515
12.15.3 其他任务创建选项 516
12.15.4 将发送电子邮件作为任务 517
12.15.5 deferred包 519
12.16 使用Appstats进行分析 520
12.16.1 在app.yaml中添加标准处理程序 521
12.16.2 添加自定义Admin Console页面 521
12.16.3 作为内置界面启用界面 521
12.17 URLfetch服务 522
12.18 问与答（无Python实现） 522
12.18.1 Cron服务（计划任务作业） 523
12.18.2 预热请求 523
12.18.3 DoS保护 524
12.19 厂商锁定 524
12.20 资源 525
12.21 总结 526
12.22 练习 527
第13章 Web服务 530
13.1 简介 531
13.2 Yahoo!金融股票报价服务器 531
13.3 Twitter微博 534
13.3.1 社交网络 534
13.3.2 Twitter和Python 535
13.3.3 稍微长一点的API组合应用示例 537
13.3.4 总结 547
13.3.5 额外在线资源 548
13.4 练习 548
第3部分 补充／实验章节
第14章 文本处理 553
14.1 逗号分隔值（CSV） 554
14.1.1 CSV简介 554
14.1.2 再论股票投资组合示例 556
14.2 JSON 557
14.3 可扩展标记语言 561
14.3.1 XML简介 562
14.3.2 Python和XML 562
14.3.3 XML实战 566
14.3.4 *使用XML-RPC的客户端-服务器服务 569
14.4 参考文献 573
14.5 相关模块 574
14.6 练习 574
第15章 其他内容 577
15.1 Jython 578
15.1.1 Jython简介 578
15.1.2 Swing GUI开发示例 579
15.2 Google+ 581
15.2.1 Google+平台简介 582
15.2.2 Python和Google+API 582
15.2.3 一个简单的社交媒体分析工具 582
15.3 练习 590
附录A 部分练习参考答案 593
附录B 参考表 597
B.1 Python关键字 597
B.2 Python标准操作符和函数 598
B.3 数值类型操作符和函数 599
B.4 序列类型操作符和函数 600
B.5 字符串格式化操作符转换符号 602
B.6 字符串格式化操作符指令 603
B.7 字符串类型内置方法 603
B.8 列表类型内置方法 605
B.9 字典类型内置方法 605
B.10 集合类型操作符和内置函数 606
B.11 文件对象方法和数据属性 607
B.12 Python异常 608
B.13 类的特殊方法 610
B.14 Python操作符汇总 612
附录C Python 3：一种编程语言进化的产物 614
C.1 为何Python在变化 614
C.2 都发生了哪些变化 615
C.2.1 print变成了print() 615
C.2.2 字符串：默认为Unicode编码 616
C.2.3 单类类型 616
C.2.4 更新异常的语法 617
C.2.5 整数的更新 618
C.2.6 迭代器无处不在 619
C.3 迁移工具 619
C.3.1 2to3工具 619
C.3.2 Python 2.6+ 620
C.4 结论 620
C.5 参考资料 620
附录D 利用Python 2.6+向Python 3迁移 622
D.1 Python 3：Python的下一代 622
D.2 整数 623
D.2.1 单整数类型 624
D.2.2 新型二进制和改进的八进制字符 624
D.2.3 经典除法或真除法 625
D.3 内置函数 626
D.3.1 print语句或print()函数 626
D.3.2 reduce()转移到了functools模块中 627
D.3.3 其他更新 627
D.4 面向对象编程：两种不同的类对象 628
D.5 字符串 629
D.6 异常 630
D.6.1 处理异常（使用as） 630
D.6.2 抛出异常 630
D.7 其他转换工具和技巧 631
D.8 编写兼容版本2.x和3.x的代码 632
D.8.1 对比print和print() 632
D.8.2 将你的方法导入解决方案中 633
D.8.3 整合在一起 634
D.9 结论 635
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python核心编程（第3版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Django Web开发指南
译者序
前言
致谢
引言
第一部分入门
第1章　Django Python实战
第2章　Django速成：构建一个Blog
第3章　起始
第二部分　深入Django
第4章　定义和使用模型
第5章　URL、HTTP机制和视图
第6章　模板和表单处理
第三部分　Django应用实例
第7章　Photo Gallery
第8章　内容管理系统
第9章　Liveblog
第10章　Pastebin
第四部分　高级Django技术和特性
第11章　高级Django编程
第12章　高级Django部署
附录
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Django Web开发指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python语言及其应用
前言　　xiv
第1章　Python初探　　1
1.1　真实世界中的Python　　5
1.2　Python与其他语言　　5
1.3　为什么选择Python　　7
1.4　何时不应该使用Python　　8
1.5　Python 2与Python 3　　8
1.6　安装Python　　9
1.7　运行Python　　9
1.7.1　使用交互式解释器　　9
1.7.2　使用Python文件　　10
1.7.3　下一步　　11
1.8　禅定一刻　　11
1.9　练习　　11
第2章　Python基本元素：数字、字符串和变量　　13
2.1　变量、名字和对象　　13
2.2　数字　　16
2.2.1　整数　　17
2.2.2　优先级　　20
2.2.3　基数　　21
2.2.4　类型转换　　22
2.2.5　一个int型有多大　　23
2.2.6　浮点数　　24
2.2.7　数学函数　　24
2.3　字符串　　24
2.3.1　使用引号创建　　25
2.3.2　使用str()进行类型转换　　27
2.3.3　使用\ 转义　　27
2.3.4　使用+ 拼接　　28
2.3.5　使用* 复制　　28
2.3.6　使用[] 提取字符　　28
2.3.7　使用[start:end:step]分片　　29
2.3.8　使用len()获得长度　　31
2.3.9　使用split()分割　　32
2.3.10　使用join()合并　　32
2.3.11　熟悉字符串　　32
2.3.12　大小写与对齐方式　　33
2.3.13　使用replace()替换　　34
2.3.14　更多关于字符串的内容　　35
2.4　练习　　35
第3章　Python容器：列表、元组、字典与集合　　36
3.1　列表和元组　　36
3.2　列表　　37
3.2.1　使用[] 或list()创建列表　　37
3.2.2　使用list()将其他数据类型转换成列表　　37
3.2.3　使用[offset]获取元素　　38
3.2.4　包含列表的列表　　39
3.2.5　使用[offset]修改元素　　39
3.2.6　指定范围并使用切片提取元素　　40
3.2.7　使用append()添加元素至尾部　　40
3.2.8　使用extend()或+=合并列表　　40
3.2.9　使用insert()在指定位置插入元素　　41
3.2.10　使用del删除指定位置的元素　　41
3.2.11　使用remove()删除具有指定值的元素　　42
3.2.12　使用pop()获取并删除指定位置的元素　　42
3.2.13　使用index()查询具有特定值的元素位置　　42
3.2.14　使用in判断值是否存在　　42
3.2.15　使用count()记录特定值出现的次数　　43
3.2.16　使用join()转换为字符串　　43
3.2.17　使用sort()重新排列元素　　44
3.2.18　使用len()获取长度　　44
3.2.19　使用= 赋值，使用copy()复制　　45
3.3　元组　　46
3.3.1　使用()创建元组　　46
3.3.2　元组与列表　　47
3.4　字典　　47
3.4.1　使用{}创建字典　　48
3.4.2　使用dict()转换为字典　　48
3.4.3　使用[key]添加或修改元素　　49
3.4.4　使用update()合并字典　　50
3.4.5　使用del删除具有指定键的元素　　51
3.4.6　使用clear()删除所有元素　　51
3.4.7　使用in 判断是否存在　　51
3.4.8　使用[key]获取元素　　52
3.4.9　使用keys()获取所有键　　52
3.4.10　使用values()获取所有值　　53
3.4.11　使用items()获取所有键值对　　53
3.4.12　使用= 赋值，使用copy()复制　　53
3.5　集合　　53
3.5.1　使用set()创建集合　　54
3.5.2　使用set()将其他类型转换为集合　　54
3.5.3　使用in测试值是否存在　　55
3.5.4　合并及运算符　　56
3.6　比较几种数据结构　　58
3.7　建立大型数据结构　　59
3.8　练习　　60
第4章　Python外壳：代码结构　　61
4.1　使用# 注释　　61
4.2　使用\ 连接　　62
4.3　使用if、elif 和else进行比较　　63
4.4　使用while进行循环　　66
4.4.1　使用break跳出循环　　66
4.4.2　使用continue跳到循环开始　　67
4.4.3　循环外使用else　　67
4.5　使用for迭代　　68
4.5.1　使用break跳出循环　　69
4.5.2　使用continue跳到循环开始　　69
4.5.3　循环外使用else　　69
4.5.4　使用zip()并行迭代　　70
4.5.5　使用range()生成自然数序列　　71
4.5.6　其他迭代方式　　71
4.6　推导式　　72
4.6.1　列表推导式　　72
4.6.2　字典推导式　　74
4.6.3　集合推导式　　74
4.6.4　生成器推导式　　74
4.7　函数　　75
4.7.1　位置参数　　79
4.7.2　关键字参数　　79
4.7.3　指定默认参数值　　79
4.7.4　使用*收集位置参数　　80
4.7.5　使用**收集关键字参数　　81
4.7.6　文档字符串　　82
4.7.7　一等公民：函数　　82
4.7.8　内部函数　　84
4.7.9　闭包　　84
4.7.10　匿名函数：lambda()函数　　85
4.8　生成器　　86
4.9　装饰器　　87
4.10　命名空间和作用域　　89
4.11　使用try和except处理错误　　91
4.12　编写自己的异常　　93
4.13　练习　　94
第5章　Python盒子：模块、包和程序　　95
5.1　独立的程序　　95
5.2　命令行参数　　96
5.3　模块和import语句　　96
5.3.1　导入模块　　96
5.3.2　使用别名导入模块　　98
5.3.3　导入模块的一部分　　98
5.3.4　模块搜索路径　　98
5.4　包　　99
5.5　Python 标准库　　99
5.5.1　使用setdefault()和defaultdict()处理缺失的键　　100
5.5.2　使用Counter()计数　　101
5.5.3　使用有序字典OrderedDict()按键排序　　103
5.5.4　双端队列：栈+队列　　103
5.5.5　使用itertools迭代代码结构　　104
5.5.6　使用pprint()友好输出　　105
5.6　获取更多Python代码　　105
5.7　练习　　106
第6章　对象和类　　107
6.1　什么是对象　　107
6.2　使用class定义类　　108
6.3　继承　　109
6.4　覆盖方法　　111
6.5　添加新方法　　112
6.6　使用super从父类得到帮助　　112
6.7　self的自辩　　113
6.8　使用属性对特性进行访问和设置　　114
6.9　使用名称重整保护私有特性　　117
6.10　方法的类型　　118
6.11　鸭子类型　　119
6.12　特殊方法　　120
6.13　组合　　123
6.14　何时使用类和对象而不是模块　　124
6.15　练习　　126
第7章　像高手一样玩转数据　　127
7.1　文本字符串　　127
7.1.1　Unicode　　127
7.1.2　格式化　　134
7.1.3　使用正则表达式匹配　　137
7.2　二进制数据　　144
7.2.1　字节和字节数组　　144
7.2.2　使用struct转换二进制数据　　145
7.2.3　其他二进制数据工具　　148
7.2.4　使用binascii()转换字节/ 字符串　　149
7.2.5　位运算符　　149
7.3　练习　　149
第8章　数据的归宿　　152
8.1　文件输入/输出　　152
8.1.1　使用write()写文本文件　　153
8.1.2　使用read()、readline()或者readlines()读文本文件　　154
8.1.3　使用write()写二进制文件　　156
8.1.4　使用read()读二进制文件　　157
8.1.5　使用with自动关闭文件　　157
8.1.6　使用seek()改变位置　　157
8.2　结构化的文本文件　　159
8.2.1　CSV　　159
8.2.2　XML　　161
8.2.3　HTML　　163
8.2.4　JSON　　163
8.2.5　YAML　　165
8.2.6　安全提示　　166
8.2.7　配置文件　　167
8.2.8　其他交换格式　　168
8.2.9　使用pickle序列化　　168
8.3　结构化二进制文件　　169
8.3.1　电子数据表　　169
8.3.2　层次数据格式　　169
8.4　关系型数据库　　170
8.4.1　SQL　　170
8.4.2　DB-API　　172
8.4.3　SQLite　　172
8.4.4　MySQL　　174
8.4.5　PostgreSQL　　174
8.4.6　SQLAlchemy　　174
8.5　NoSQL数据存储　　179
8.5.1　dbm family　　180
8.5.2　memcached　　180
8.5.3　Redis　　181
8.5.4　其他的NoSQL　　189
8.6　全文数据库　　189
8.7　练习　　190
第9章　剖析Web　　191
9.1　Web 客户端　　192
9.1.1　使用telnet进行测试　　193
9.1.2　Python的标准Web库　　194
9.1.3　抛开标准库：requests　　195
9.2　Web 服务端　　196
9.2.1　最简单的Python Web服务器　　196
9.2.2　Web服务器网关接口　　198
9.2.3　框架　　198
9.2.4　Bottle　　198
9.2.5　Flask　　201
9.2.6　非Python的Web服务器　　204
9.2.7　其他框架　　206
9.3　Web服务和自动化　　207
9.3.1　webbrowser模块　　207
9.3.2　Web API和表述性状态传递　　208
9.3.3　JSON　　209
9.3.4　抓取数据　　209
9.3.5　用BeautifulSoup来抓取HTML　　209
9.4　练习　　210
第10章　系统　　212
10.1　文件　　212
10.1.1　用open()创建文件　　212
10.1.2　用exists()检查文件是否存在　　213
10.1.3　用isfile()检查是否为文件　　213
10.1.4　用copy()复制文件　　213
10.1.5　用rename()重命名文件　　214
10.1.6　用link()或者symlink()创建链接　　214
10.1.7　用chmod()修改权限　　214
10.1.8　用chown()修改所有者　　214
10.1.9　用abspath()获取路径名　　215
10.1.10　用realpath()获取符号的路径名　　215
10.1.11　用remove()删除文件　　215
10.2　目录　　215
10.2.1　使用mkdir()创建目录　　215
10.2.2　使用rmdir()删除目录　　215
10.2.3　使用listdir()列出目录内容　　216
10.2.4　使用chdir()修改当前目录　　216
10.2.5　使用glob()列出匹配文件　　216
10.3　程序和进程　　217
10.3.1　使用subprocess创建进程　　218
10.3.2　使用multiprocessing创建进程　　219
10.3.3　使用terminate()终止进程　　219
10.4　日期和时间　　220
10.4.1　datetime模块　　221
10.4.2　使用time模块　　223
10.4.3　读写日期和时间　　225
10.4.4　其他模块　　227
10.5　练习　　228
第11章　并发和网络　　229
11.1　并发　　230
11.1.1　队列　　231
11.1.2　进程　　231
11.1.3　线程　　232
11.1.4　绿色线程和gevent　　234
11.1.5　twisted　　236
11.1.6　asyncio　　238
11.1.7　Redis　　238
11.1.8　队列之上　　241
11.2　网络　　241
11.2.1　模式　　242
11.2.2　发布-订阅模型　　242
11.2.3　TCP/IP　　245
11.2.4　套接字　　246
11.2.5　ZeroMQ　　250
11.2.6　scapy　　253
11.2.7　网络服务　　253
11.2.8　Web服务和API　　255
11.2.9　远程处理　　256
11.2.10　大数据和MapReduce　　260
11.2.11　在云上工作　　261
11.3　练习　　264
第12章　成为真正的Python开发者　　265
12.1　关于编程　　265
12.2　寻找Python代码　　265
12.3　安装包　　266
12.3.1　使用pip　　266
12.3.2　使用包管理工具　　267
12.3.3　从源代码安装　　267
12.4　集成开发环境　　268
12.4.1　IDLE　　268
12.4.2　PyCharm　　268
12.4.3　IPython　　269
12.5　命名和文档　　269
12.6　测试代码　　270
12.6.1　使用pylint、pyflakes和pep8检查代码　　270
12.6.2　使用unittest进行测试　　272
12.6.3　使用doctest进行测试　　276
12.6.4　使用nose进行测试　　277
12.6.5　其他测试框架　　278
12.6.6　持续集成　　278
12.7　调试Python代码　　278
12.8　使用pdb进行调试　　279
12.9　记录错误日志　　284
12.10　优化代码　　286
12.10.1　测量时间　　286
12.10.2　算法和数据结构　　288
12.10.3　Cython、NumPy和C扩展　　289
12.10.4　PyPy　　289
12.11　源码控制　　289
12.11.1　Mercurial　　290
12.11.2　Git　　290
12.12　复制本书代码　　292
12.13　更多内容　　293
12.13.1　书　　293
12.13.2　网站　　293
12.13.3　社区　　293
12.13.4　大会　　294
12.14　后续内容　　294
附录A　Python的艺术　　295
附录B　工作中的Python　　307
附录C　Python的科学　　320
附录D　安装Python 3　　339
附录E　习题解答　　349
附录F　速查表　　380
作者介绍　　383
封面介绍　　383
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python语言及其应用
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据分析与挖掘实战
前言
基础篇
第1章　数据挖掘基础2
1.1　某知名连锁餐饮企业的困惑2
1.2　从餐饮服务到数据挖掘3
1.3　数据挖掘的基本任务4
1.4　数据挖掘建模过程4
1.4.1　定义挖掘目标4
1.4.2　数据取样5
1.4.3　数据探索6
1.4.4　数据预处理7
1.4.5　挖掘建模7
1.4.6　模型评价7
1.5　常用的数据挖掘建模工具7
1.6　小结9
第2章　Python数据分析简介10
2.1　搭建Python开发平台12
2.1.1　所要考虑的问题12
2.1.2　基础平台的搭建12
2.2　Python使用入门13
2.2.1　运行方式14
2.2.2　基本命令15
2.2.3　数据结构17
2.2.4　库的导入与添加20
2.3　Python数据分析工具22
2.3.1　Numpy23
2.3.2　Scipy24
2.3.3　Matplotlib24
2.3.4　Pandas26
2.3.5　StatsModels27
2.3.6　Scikit-Learn28
2.3.7　Keras29
2.3.8　Gensim30
2.4　配套资源使用设置31
2.5　小结32
第3章　数据探索33
3.1　数据质量分析33
3.1.1　缺失值分析34
3.1.2　异常值分析34
3.1.3　一致性分析37
3.2　数据特征分析37
3.2.1　分布分析37
3.2.2　对比分析40
3.2.3　统计量分析41
3.2.4　周期性分析44
3.2.5　贡献度分析45
3.2.6　相关性分析47
3.3　Python主要数据探索函数50
3.3.1　基本统计特征函数50
3.3.2　拓展统计特征函数53
3.3.3　统计作图函数54
3.4　小结59
第4章　数据预处理60
4.1　数据清洗60
4.1.1　缺失值处理60
4.1.2　异常值处理64
4.2　数据集成64
4.2.1　实体识别64
4.2.2　冗余属性识别65
4.3　数据变换65
4.3.1　简单函数变换65
4.3.2　规范化66
4.3.3　连续属性离散化68
4.3.4　属性构造70
4.3.5　小波变换71
4.4　数据规约74
4.4.1　属性规约74
4.4.2　数值规约77
4.5　Python主要数据预处理函数80
4.6　小结81
第5章　挖掘建模83
5.1　分类与预测83
5.1.1　实现过程83
5.1.2　常用的分类与预测算法84
5.1.3　回归分析85
5.1.4　决策树89
5.1.5　人工神经网络95
5.1.6　分类与预测算法评价100
5.1.7　Python分类预测模型特点103
5.2　聚类分析104
5.2.1　常用聚类分析算法104
5.2.2　K-Means聚类算法105
5.2.3　聚类分析算法评价111
5.2.4　Python主要聚类分析算法111
5.3　关联规则113
5.3.1　常用关联规则算法114
5.3.2　Apriori算法114
5.4　时序模式119
5.4.1　时间序列算法120
5.4.2　时间序列的预处理120
5.4.3　平稳时间序列分析122
5.4.4　非平稳时间序列分析124
5.4.5　Python主要时序模式算法132
5.5　离群点检测134
5.5.1　离群点检测方法135
5.5.2　基于模型的离群点检测方法136
5.5.3　基于聚类的离群点检测方法138
5.6　小结141
实战篇
第6章　电力窃漏电用户自动识别144
6.1　背景与挖掘目标144
6.2　分析方法与过程147
6.2.1　数据抽取148
6.2.2　数据探索分析148
6.2.3　数据预处理151
6.2.4　构建专家样本156
6.2.5　模型构建157
6.3　上机实验161
6.4　拓展思考162
6.5　小结163
第7章　航空公司客户价值分析164
7.1　背景与挖掘目标164
7.2　分析方法与过程166
7.2.1　数据抽取168
7.2.2　数据探索分析168
7.2.3　数据预处理169
7.2.4　模型构建173
7.3　上机实验177
7.4　拓展思考178
7.5　小结179
第8章　中医证型关联规则挖掘180
8.1　背景与挖掘目标180
8.2　分析方法与过程181
8.2.1　数据获取183
8.2.2　数据预处理186
8.2.3　模型构建190
8.3　上机实验193
8.4　拓展思考194
8.5　小结194
第9章　基于水色图像的水质评价195
9.1　背景与挖掘目标195
9.2　分析方法与过程195
9.2.1　数据预处理197
9.2.2　模型构建199
9.2.3　水质评价201
9.3　上机实验202
9.4　拓展思考202
9.5　小结203
第10章　家用电器用户行为分析与事件识别204
10.1　背景与挖掘目标204
10.2　分析方法与过程205
10.2.1　数据抽取206
10.2.2　数据探索分析207
10.2.3　数据预处理207
10.2.4　模型构建217
10.2.5　模型检验219
10.3　上机实验220
10.4　拓展思考221
10.5　小结222
第11章　应用系统负载分析与磁盘容量预测223
11.1　背景与挖掘目标223
11.2　分析方法与过程225
11.2.1　数据抽取226
11.2.2　数据探索分析226
11.2.3　数据预处理227
11.2.4　模型构建229
11.3　上机实验235
11.4　拓展思考236
11.5　小结237
第12章　电子商务网站用户行为分析及服务推荐238
12.1　背景与挖掘目标238
12.2　分析方法与过程240
12.2.1　数据抽取242
12.2.2　数据探索分析244
12.2.3　数据预处理251
12.2.4　模型构建256
12.3　上机实验266
12.4　拓展思考267
12.5　小结269
第13章　财政收入影响因素分析及预测模型270
13.1　背景与挖掘目标270
13.2　分析方法与过程272
13.2.1　灰色预测与神经网络的组合模型273
13.2.2　数据探索分析274
13.2.3　模型构建277
13.3　上机实验294
13.4　拓展思考295
13.5　小结296
第14章　基于基站定位数据的商圈分析297
14.1　背景与挖掘目标297
14.2　分析方法与过程299
14.2.1　数据抽取299
14.2.2　数据探索分析299
14.2.3　数据预处理301
14.2.4　模型构建304
14.3　上机实验308
14.4　拓展思考309
14.5　小结309
第15章　电商产品评论数据情感分析310
15.1　背景与挖掘目标310
15.2　分析方法与过程310
15.2.1　评论数据采集311
15.2.2　评论预处理314
15.2.3　文本评论分词320
15.2.4　模型构建320
15.3　上机实验333
15.4　拓展思考334
15.5　小结335
参考文献336
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据分析与挖掘实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python科学计算
目 录
第1章 软件包的安装和介绍 ....................1
1.1 Python简介 ......................................1
1.2 安装软件包 ......................................2
1.2.1 Python(x,y)..................................... 2
1.2.2 Enthought Python Distribution (EPD) ............................................. 3
1.3 方便的开发工具 ..............................3
1.3.1 IPython ........................................... 4
1.3.2 Spyder ............................................ 8
1.3.3 Wing IDE 101 .............................. 12
1.4 函数库介绍 ....................................13
1.4.1 数值计算库 ................................. 13
1.4.2 符号计算库 ................................. 14
1.4.3 界面设计 ..................................... 14
1.4.4 绘图与可视化 ............................. 14
1.4.5 图像处理和计算机视觉 .............. 15
第2章 NumPy——快速处理数据 .......... 16
2.1 ndarray对象 ...................................16
2.1.1 创建数组 ..................................... 16
2.1.2 存取元素 ..................................... 21
2.1.3 多维数组 ..................................... 24
2.1.4 结构数组 ..................................... 29
2.1.5 内存结构 ..................................... 32
2.2 ufunc运算 ......................................35
2.2.1 四则运算 ..................................... 37
2.2.2 比较和布尔运算 ......................... 39
2.2.3 自定义ufunc函数 ...................... 40
2.2.4 广播 ............................................. 42
2.2.5 ufunc函数的方法 ....................... 46
2.3 多维数组的下标存取 ....................48
2.3.1 下标对象 ..................................... 48
2.3.2 整数数组作为下标 ..................... 49
2.3.3 一个复杂的例子 ......................... 51
2.3.4 布尔数组作为下标 ..................... 53
2.4 庞大的函数库 ............................... 54
2.4.1 求和、平均值、方差 ................. 54
2.4.2 最值和排序 ................................. 55
2.4.3 多项式函数 ................................. 57
2.4.4 分段函数 ..................................... 60
2.4.5 统计函数 ..................................... 62
2.5 线性代数 ....................................... 65
2.5.1 各种乘积运算 ............................. 65
2.5.2 解线性方程组 ............................. 67
2.6 掩码数组 ....................................... 69
2.7 文件存取 ....................................... 72
2.8 内存映射数组 ............................... 75
第3章 SciPy——数值计算库 ................. 79
3.1 常数和特殊函数 ........................... 79
3.2 优化——optimize .......................... 81
3.2.1 最小二乘拟合 ............................. 81
3.2.2 函数最小值 ................................. 84
3.2.3 非线性方程组求解 ..................... 86
3.3 插值——interpolate ....................... 88
3.3.1 B样条曲线插值 .......................... 88
3.3.2 外推和Spline拟合 ..................... 90
3.3.3 二维插值 ..................................... 91
3.4 数值积分——integrate .................. 93
3.4.1 球的体积 ..................................... 93
3.4.2 解常微分方程组 ......................... 95
3.5 信号处理——signal ....................... 97
VIII
Python 科学计算
目 录
3.5.1 中值滤波 ..................................... 97
3.5.2 滤波器设计 ................................. 98
3.6 图像处理——ndimage .................100
3.6.1 膨胀和腐蚀 ............................... 101
3.6.2 Hit和Miss ................................. 102
3.7 统计——stats ................................105
3.7.1 连续和离散概率分布................ 105
3.7.2 二项、泊松、伽玛分布 ............ 108
3.8 嵌入C语言程序——weave ........112
第4章 SymPy——符号运算好帮手 .... 115
4.1 从例子开始 ..................................115
4.1.1 封面上的经典公式.................... 115
4.1.2 球体体积 ................................... 117
4.2 数学表达式 ..................................119
4.2.1 符号 ........................................... 119
4.2.2 数值 ........................................... 121
4.2.3 运算符和函数 ........................... 122
4.3 符号运算 ......................................125
4.3.1 表达式变换和化简.................... 125
4.3.2 方程 ........................................... 128
4.3.3 微分 ........................................... 129
4.3.4 微分方程 ................................... 130
4.3.5 积分 ........................................... 131
4.4 其他功能 ......................................133
4.4.1 平面几何 ................................... 133
4.4.2 绘图 ........................................... 135
第5章 matplotlib——绘制精美 的图表 ..................................... 139
5.1 快速绘图 ......................................139
5.1.1 使用pyplot模块绘图 ............... 139
5.1.2 以面向对象方式绘图................ 142
5.1.3 配置属性 ................................... 143
5.1.4 绘制多个子图 ........................... 145
5.1.5 配置文件 ................................... 147
5.1.6 在图表中显示中文.................... 149
5.2 Artist对象 ................................... 152
5.2.1 Artist对象的属性 ..................... 154
5.2.2 Figure容器 ................................ 155
5.2.3 Axes容器 .................................. 156
5.2.4 Axis容器 ................................... 159
5.2.5 Artist对象的关系 ..................... 163
5.3 坐标变换和注释 ......................... 164
5.3.1 4种坐标系 ................................ 167
5.3.2 坐标变换的步骤 ....................... 169
5.3.3 制作阴影效果 ........................... 173
5.3.4 添加注释 ................................... 174
5.4 绘图函数简介 ............................. 177
5.4.1 对数坐标图 ............................... 177
5.4.2 极坐标图 ................................... 178
5.4.3 柱状图 ....................................... 179
5.4.4 散列图 ....................................... 180
5.4.5 图像 ........................................... 181
5.4.6 等值线图 ................................... 184
5.4.7 三维绘图 ................................... 187
第6章 Traits——为Python添加类型 定义 ......................................... 190
6.1 开发背景 ..................................... 190
6.2 Trait属性的功能 ......................... 192
6.3 Trait类型对象 ............................. 196
6.4 Trait的元数据 ............................. 198
6.5 预定义的Trait类型 .................... 200
6.6 Property属性 ............................... 204
6.7 Trait属性监听 ............................. 206
6.8 Event和Button属性 .................. 210
6.9 Trait属性的从属关系 ................. 211
6.10 动态添加Trait属性 .................. 213
6.11 创建自己的Trait类型 .............. 215
6.11.1 从TraitType继承 ................. 215
6.11.2 使用Trait() ............................ 217
6.11.3 定义TraitHandler类 ............. 219
IX
目
录
第7章 TraitsUI——轻松制作用户 界面 ......................................... 221
7.1 默认界面 ......................................221
7.2 用View定义界面 ........................222
7.2.1 外部视图和内部视图................ 222
7.2.2 多模型视图 ............................... 226
7.2.3 Group对象 ................................ 228
7.2.4 配置视图 ................................... 231
7.3 用Handler控制界面和模型 .......232
7.3.1 用Handler处理事件 ................. 233
7.3.2 Controller和UIInfo对象.......... 237
7.3.3 响应Trait属性的事件 .............. 238
7.4 属性编辑器 ..................................240
7.4.1 编辑器演示程序 ....................... 241
7.4.2 对象编辑器 ............................... 243
7.4.3 字符串列表编辑器.................... 248
7.4.4 对象列表编辑器 ....................... 250
7.5 菜单、工具条和状态栏 ..............252
7.6 设计自己的编辑器 ......................255
7.6.1 Trait编辑器的工作原理 ........... 255
7.6.2 制作matplotlib的编辑器 ......... 259
7.6.3 CSV数据绘图工具 ................... 262
第8章 Chaco——交互式图表 ............. 264
8.1 面向脚本绘图 ..............................264
8.2 面向应用绘图 ..............................265
8.2.1 多条曲线 ................................... 267
8.2.2 Plot对象的结构 ........................ 271
8.2.3 编辑绘图属性 ........................... 275
8.2.4 容器(Container) ......................... 276
8.3 添加交互工具 ..............................279
8.3.1 平移和缩放 ............................... 279
8.3.2 选取范围 ................................... 282
8.3.3 选取数据点 ............................... 284
8.3.4 套索工具 ................................... 287
8.4 二次开发 ......................................289
8.4.1 用Kiva库在数组上绘图 .......... 290
8.4.2 Enable库的组件 ....................... 292
8.4.3 设计圆形选择工具 ................... 297
8.4.4 制作动画演示 ........................... 301
第9章 TVTK——数据的三维可视化 .... 303
9.1 流水线(Pipeline) .......................... 304
9.1.1 显示圆锥 ................................... 304
9.1.2 用ivtk观察流水线 ................... 307
9.2 数据集(Dataset) ........................... 313
9.2.1 ImageData .................................. 313
9.2.2 RectilinearGrid ........................... 318
9.2.3 StructuredGrid............................ 319
9.2.4 PolyData .................................... 321
9.3 可视化实例 ................................. 324
9.3.1 切面 ........................................... 325
9.3.2 等值面 ....................................... 330
9.3.3 流线 ........................................... 333
9.4 TVTK的改进 .............................. 337
9.4.1 TVTK的基本用法 .................... 338
9.4.2 Trait属性 ................................... 339
9.4.3 序列化(Pickling) ........................ 339
9.4.4 集合迭代 ................................... 340
9.4.5 数组操作 ................................... 341
第10章 Mayavi——更方便的可视化 .... 343
10.1 用mlab快速绘图 ..................... 343
10.1.1 点和线 ................................... 343
10.1.2 Mayavi的流水线 .................. 345
10.1.3 二维图像的可视化 ............... 348
10.1.4 网格面 ................................... 352
10.1.5 修改和控制流水线 ............... 356
10.1.6 标量场 ................................... 358
10.1.7 矢量场 ................................... 361
10.2 Mayavi和TVTK之间 的关系 ....................................... 363
10.2.1 显示TVTK流水线 .............. 363
10.2.2 两条流水线之间的关系 ....... 365
X
Python 科学计算
目 录
10.3 Mayavi应用程序 .......................367
10.3.1 操作流水线 ........................... 368
10.3.2 命令行和对象浏览器 ........... 371
10.4 将Mayavi嵌入到界面中 ..........374
第11章 VPython——制作3D演示 动画 ...................................... 378
11.1 场景、物体和照相机 ................378
11.1.1 控制场景窗口 ....................... 380
11.1.2 控制照相机 ........................... 383
11.1.3 模型的属性 ........................... 384
11.1.4 三维模型 ............................... 387
11.2 制作动画演示 ............................390
11.2.1 简单动画 ............................... 390
11.2.2 盒子中反弹的球 ................... 391
11.3 与场景交互 ................................393
11.3.1 响应键盘事件 ....................... 394
11.3.2 响应鼠标事件 ....................... 394
11.4 用界面控制场景 ........................397
11.5 创建复杂模型 ............................400
11.5.1 faces()的用法 ........................ 400
11.5.2 读入模型数据 ....................... 402
第12章 OpenCV——图像处理和计算机 视觉 ...................................... 408
12.1 存储图像数据的Mat对象 ........409
12.1.1 Mat对象和NumPy数组 ..... 410
12.1.2 像素点类型 ........................... 414
12.1.3 其他数据类型 ....................... 415
12.1.4 Vector类型 ........................... 417
12.1.5 在图像上绘图 ....................... 418
12.2 图像处理 ....................................421
12.2.1 二维卷积 ............................... 421
12.2.2 形态学运算 ........................... 424
12.2.3 填充——floodFill .................. 426
12.2.4 去瑕疵——inpaint ................. 427
12.3 图像变换 ....................................428
12.3.1 几何变换 ............................... 428
12.3.2 重映射——remap .................. 430
12.3.3 直方图统计 ........................... 433
12.3.4 二维离散傅立叶变换 ........... 437
12.4 图像识别 ................................... 440
12.4.1 用霍夫变换检测直线 和圆 ....................................... 440
12.4.2 图像分割 ............................... 444
12.4.3 用SURF进行特征匹配 ....... 450
第13章 数据和文件 ............................ 453
13.1 声音的输入输出 ....................... 453
13.1.1 读写WAV文件 ................... 453
13.1.2 用pyAudio播放和录音 ....... 456
13.2 视频的输入输出 ....................... 459
13.2.1 读写视频文件 ....................... 459
13.2.2 安装视频编码 ....................... 464
13.3 读写HDF5文件 ....................... 465
13.4 读写Excel文件 ........................ 469
13.4.1 写Excel文件 ........................ 469
13.4.2 读Excel文件 ........................ 471
第14章 数字信号系统 ......................... 473
14.1 FIR和IIR滤波器 ..................... 473
14.2 FIR滤波器设计 ........................ 477
14.2.1 用firwin()设计滤波器 .......... 479
14.2.2 用remez()设计滤波器 .......... 481
14.2.3 滤波器的级联 ....................... 483
14.3 IIR滤波器设计 ......................... 485
14.3.1 巴特沃斯低通滤波器 ........... 485
14.3.2 双线性变换 ........................... 487
14.3.3 滤波器的频带转换 ............... 490
14.4 数字滤波器的频率响应 ........... 494
14.5 二次均衡滤波器设计工具 ....... 497
14.6 零相位滤波器 ........................... 500
14.7 重取样 ....................................... 501
XI
目
录
第15章 频域信号处理 ........................ 505
15.1 FFT演示程序 ............................505
15.1.1 FFT知识复习 ....................... 505
15.1.2 合成时域信号 ....................... 509
15.1.3 三角波FFT演示程序 .......... 511
15.2 观察信号的频谱 ........................512
15.2.1 窗函数 ................................... 515
15.2.2 频谱平均 ............................... 517
15.2.3 谱图 ....................................... 519
15.3 卷积运算 ....................................522
15.3.1 快速卷积 ............................... 522
15.3.2 分段运算 ............................... 524
15.4 信号处理 ....................................526
15.4.1 基本框架 ............................... 527
15.4.2 频域滤波器 ........................... 528
15.4.3 频率变调处理 ....................... 530
15.4.4 用谱图差减法降噪 ............... 531
15.5 Hilbert变换 ................................532
第16章 用C语言提高计算效率 ......... 537
16.1 用ctypes调用DLL库 ..............537
16.2 用Weave嵌入C++程序 ...........541
16.2.1 Weave的工作原理 ............... 541
16.2.2 处理NumPy数组 ................. 543
16.2.3 使用blitz()提速..................... 546
16.2.4 扩展模块 ............................... 548
16.3 用Cython将Python编译 成C ............................................549
16.3.1 编译Cython程序 ................. 549
16.3.2 提高计算效率 ....................... 550
16.3.3 快速访问NumPy数组 ......... 553
16.4 用SWIG创建扩展模块 ............555
16.4.1 SWIG的调用方法 和实例 .................................. 555
16.4.2 SWIG基础 ............................ 558
16.4.3 SWIG处理NumPy数组 ...... 566
第17章 自适应滤波器 ......................... 571
17.1 自适应滤波器简介 ................... 571
17.1.1 系统识别 ............................... 571
17.1.2 信号预测 ............................... 572
17.1.3 信号均衡 ............................... 572
17.2 NLMS计算公式 ....................... 573
17.3 用NumPy实现NLMS算法 .... 575
17.3.1 系统辨识模拟 ....................... 577
17.3.2 信号均衡模拟 ....................... 579
17.3.3 卷积逆运算 ........................... 581
17.4 用C语言加速NLMS运算...... 583
17.4.1 用SWIG编写扩展模块 ....... 583
17.4.2 用Weave嵌入C++程序 ...... 586
第18章 单摆和双摆模拟 ..................... 588
18.1 单摆模拟 ................................... 588
18.1.1 小角度时的摆动周期 ........... 589
18.1.2 大角度时的摆动周期 ........... 590
18.2 双摆模拟 ................................... 592
18.2.1 公式推导 ............................... 592
18.2.2 微分方程的数值解 ............... 595
18.2.3 动画演示 ............................... 598
第19章 分形几何 ................................ 599
19.1 Mandelbrot集合 ........................ 599
19.1.1 使用NumPy加速计算 ......... 601
19.1.2 使用Weave加速计算 .......... 603
19.1.3 连续的逃逸时间 ................... 604
19.1.4 Mandelbrot演示程序 ........... 605
19.2 迭代函数系统(IFS) ................... 606
19.2.1 二维仿射变换 ....................... 610
19.2.2 迭代函数系统设计器 ........... 610
19.3 L-System分形 ........................... 613
19.4 分形山脉 ................................... 616
19.4.1 一维中点移位法 ................... 616
19.4.2 二维中点移位法 ................... 618
19.4.3 菱形方形算法 ....................... 619
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python科学计算
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python基础教程（第3版）
第1章　快速上手：基础知识	1
1.1　交互式解释器	1
1.2　算法是什么	2
1.3　数和表达式	3
1.4　变量	5
1.5　语句	5
1.6　获取用户输入	7
1.7　函数	8
1.8　模块	8
1.8.1　cmath和复数	9
1.8.2　回到未来	10
1.9　保存并执行程序	10
1.9.1　从命令提示符运行Python脚本	12
1.9.2　让脚本像普通程序一样	12
1.9.3　注释	13
1.10　字符串	13
1.10.1　单引号字符串以及对引号转义	14
1.10.2　拼接字符串	15
1.10.3　字符串表示str和repr	15
1.10.4　长字符串、原始字符串和字节	16
1.11　小结	21
1.11.1　本章介绍的新函数	21
1.11.2　预告	22
第2章　列表和元组	23
2.1　序列概述	23
2.2　通用的序列操作	24
2.2.1　索引	24
2.2.2　切片	26
2.2.3　序列相加	28
2.2.4　乘法	28
2.2.5　成员资格	29
2.3　列表：Python的主力	31
2.3.1　函数list	31
2.3.2　基本的列表操作	31
2.3.3　列表方法	33
2.4　元组：不可修改的序列	38
2.5　小结	39
2.5.1　本章介绍的新函数	40
2.5.2　预告	40
第3章　使用字符串	41
3.1　字符串基本操作	41
3.2　设置字符串的格式：精简版	41
3.3　设置字符串的格式：完整版	43
3.3.1　替换字段名	43
3.3.2　基本转换	44
3.3.3　宽度、精度和千位分隔符	45
3.3.4　符号、对齐和用0填充	46
3.4　字符串方法	48
3.4.1　center	48
3.4.2　find	48
3.4.3　join	49
3.4.4　lower	50
3.4.5　replace	51
3.4.6　split	51
3.4.7　strip	51
3.4.8　translate	52
3.4.9　判断字符串是否满足特定的条件	52
3.5　小结	53
3.5.1　本章介绍的新函数	53
3.5.2　预告	53
第4章　当索引行不通时	54
4.1　字典的用途	54
4.2　创建和使用字典	55
4.2.1　函数dict	55
4.2.2　基本的字典操作	55
4.2.3　将字符串格式设置功能用于字典	57
4.2.4　字典方法	58
4.3　小结	63
4.3.1　本章介绍的新函数	63
4.3.2　预告	63
第5章　条件、循环及其他语句	64
5.1　再谈print和import	64
5.1.1　打印多个参数	64
5.1.2　导入时重命名	65
5.2　赋值魔法	66
5.2.1　序列解包	66
5.2.2　链式赋值	67
5.2.3　增强赋值	67
5.3　代码块：缩进的乐趣	68
5.4　条件和条件语句	69
5.4.1　这正是布尔值的用武之地	69
5.4.2　有条件地执行和if语句	70
5.4.3　else子句	70
5.4.4　elif子句	71
5.4.5　代码块嵌套	71
5.4.6　更复杂的条件	71
5.4.7　断言	75
5.5　循环	76
5.5.1　while循环	77
5.5.2　for循环	77
5.5.3　迭代字典	78
5.5.4　一些迭代工具	78
5.5.5　跳出循环	80
5.5.6　循环中的else子句	82
5.6　简单推导	83
5.7　三人行	84
5.7.1　什么都不做	84
5.7.2　使用del删除	85
5.7.3　使用exec和eval执行字符串及计算其结果	86
5.8　小结	88
5.8.1　本章介绍的新函数	89
5.8.2　预告	89
第6章　抽象	90
6.1　懒惰是一种美德	90
6.2　抽象和结构	91
6.3　自定义函数	91
6.3.1　给函数编写文档	92
6.3.2　其实并不是函数的函数	93
6.4　参数魔法	93
6.4.1　值从哪里来	94
6.4.2　我能修改参数吗	94
6.4.3　关键字参数和默认值	98
6.4.4　收集参数	100
6.4.5　分配参数	102
6.4.6　练习使用参数	103
6.5　作用域	105
6.6　递归	107
6.6.1　两个经典案例：阶乘和幂	108
6.6.2　另一个经典案例：二分查找	109
6.7　小结	112
6.7.1　本章介绍的新函数	113
6.7.2　预告	113
第7章　再谈抽象	114
7.1　对象魔法	114
7.1.1　多态	115
7.1.2　多态和方法	116
7.1.3　封装	118
7.1.4　继承	119
7.2　类	119
7.2.1　类到底是什么	119
7.2.2　创建自定义类	120
7.2.3　属性、函数和方法	121
7.2.4　再谈隐藏	122
7.2.5　类的命名空间	123
7.2.6　指定超类	124
7.2.7　深入探讨继承	125
7.2.8　多个超类	126
7.2.9　接口和内省	127
7.2.10　抽象基类	128
7.3　关于面向对象设计的一些思考	130
7.4　小结	130
7.4.1　本章介绍的新函数	131
7.4.2　预告	131
第8章　异常	132
8.1　异常是什么	132
8.2　让事情沿你指定的轨道出错	132
8.2.1　raise语句	132
8.2.2　自定义的异常类	133
8.3　捕获异常	134
8.3.1　不用提供参数	134
8.3.2　多个except子句	136
8.3.3　一箭双雕	136
8.3.4　捕获对象	137
8.3.5　一网打尽	137
8.3.6　万事大吉时	138
8.3.7　最后	139
8.4　异常和函数	140
8.5　异常之禅	140
8.6　不那么异常的情况	142
8.7　小结	143
8.7.1　本章介绍的新函数	143
8.7.2　预告	143
第9章　魔法方法、特性和迭代器	144
9.1　如果你使用的不是Python 3	144
9.2　构造函数	145
9.2.1　重写普通方法和特殊的构造函数	146
9.2.2　调用未关联的超类构造函数	147
9.2.3 　使用函数super	148
9.3　元素访问	149
9.3.1　基本的序列和映射协议	150
9.3.2　从list、dict和str派生	152
9.4　其他魔法方法	153
9.5　特性	153
9.5.1　函数property	154
9.5.2　静态方法和类方法	155
9.5.3　__getattr__、__setattr__等方法	156
9.6　迭代器	157
9.6.1　迭代器协议	157
9.6.2　从迭代器创建序列	159
9.7　生成器	159
9.7.1　创建生成器	159
9.7.2　递归式生成器	161
9.7.3　通用生成器	162
9.7.4　生成器的方法	162
9.7.5　模拟生成器	163
9.8　八皇后问题	164
9.8.1　生成器的回溯	164
9.8.2　问题	165
9.8.3　状态表示	166
9.8.4　检测冲突	166
9.8.5　基线条件	166
9.8.6　递归条件	167
9.8.7　扫尾工作	169
9.9　小结	170
9.9.1　本章介绍的新函数	170
9.9.2　预告	171
第10章　开箱即用	172
10.1　模块	172
10.1.1　模块就是程序	172
10.1.2　模块是用来下定义的	174
10.1.3　让模块可用	176
10.1.4　包	177
10.2　探索模块	178
10.2.1　模块包含什么	178
10.2.2　使用help获取帮助	179
10.2.3　文档	180
10.2.4　使用源代码	181
10.3　标准库：一些深受欢迎的模块	181
10.3.1　sys	181
10.3.2　os	183
10.3.3　fileinput	185
10.3.4　集合、堆和双端队列	186
10.3.5　time	190
10.3.6　random	192
10.3.7　shelve和json	195
10.3.8　re	198
10.3.9　其他有趣的标准模块	210
10.4　小结	211
10.4.1　本章介绍的新函数	212
10.4.2　预告	212
第11章　文件	213
11.1　打开文件	213
11.2　文件的基本方法	214
11.2.1　读取和写入	215
11.2.2　使用管道重定向输出	215
11.2.3　读取和写入行	217
11.2.4　关闭文件	217
11.2.5　使用文件的基本方法	218
11.3　迭代文件内容	220
11.3.1　每次一个字符（或字节）	220
11.3.2　每次一行	221
11.3.3　读取所有内容	221
11.3.4　使用fileinput实现延迟行迭代	221
11.3.5　文件迭代器	222
11.4　小结	223
11.4.1　本章介绍的新函数	223
11.4.2　预告	224
第12章　图形用户界面	225
12.1　创建GUI示例应用程序	225
12.1.1　初探	226
12.1.2　布局	227
12.1.3　事件处理	228
12.1.4　最终的程序	229
12.2　使用其他GUI工具包	230
12.3　小结	231
第13章　数据库支持	232
13.1　Python数据库API	232
13.1.1　全局变量	233
13.1.2　异常	234
13.1.3　连接和游标	234
13.1.4　类型	236
13.2　SQLite和PySQLite	236
13.2.1　起步	237
13.2.2　数据库应用程序示例	238
13.3　小结	241
13.3.1　本章介绍的新函数	241
13.3.2　预告	241
第14章　网络编程	242
14.1　几个网络模块	242
14.1.1　模块socket	242
14.1.2　模块urllib和urllib2	244
14.1.3　其他模块	246
14.2　SocketServer及相关的类	247
14.3　多个连接	247
14.3.1　使用SocketServer实现分叉和线程化	249
14.3.2　使用select和poll实现异步I/O	249
14.4　Twisted	252
14.4.1　下载并安装Twisted	252
14.4.2　编写Twisted服务器	253
14.5　小结	254
14.5.1　本章介绍的新函数	255
14.5.2　预告	255
第15章　Python和Web	256
15.1　屏幕抓取	256
15.1.1　Tidy和XHTML解析	257
15.1.2　Beautiful Soup	261
15.2　使用CGI创建动态网页	262
15.2.1　第一步：准备Web服务器	262
15.2.2　第二步：添加!#行	263
15.2.3　第三步：设置文件权限	264
15.2.4　CGI安全风险	264
15.2.5　简单的CGI脚本	264
15.2.6　使用cgitb进行调试	265
15.2.7　使用模块cgi	266
15.2.8　简单的表单	267
15.3　使用Web框架	269
15.4　Web服务：更高级的抓取	270
15.4.1　RSS和相关内容	270
15.4.2　使用XML-RPC进行远程过程调用	271
15.4.3　SOAP	272
15.5　小结	272
15.5.1　本章介绍的新函数	272
15.5.2　预告	272
第16章　测试基础	273
16.1　先测试再编码	273
16.1.1　准确的需求说明	273
16.1.2　做好应对变化的准备	275
16.1.3　测试四步曲	275
16.2　测试工具	276
16.2.1　doctest	276
16.2.2　unittest	278
16.3　超越单元测试	280
16.3.1　使用PyChecker和PyLint检查源代码	280
16.3.2　性能分析	283
16.4　小结	284
16.4.1　本章介绍的新函数	285
16.4.2　预告	285
第17章　扩展Python	286
17.1　鱼和熊掌兼得	286
17.2　简单易行的方式：Jython和IronPython	287
17.3　编写C语言扩展	289
17.3.1　SWIG	291
17.3.2　手工编写扩展	294
17.4　小结	298
17.4.1　本章介绍的新函数	299
17.4.2　预告	299
第18章　程序打包	300
18.1　Setuptools基础	300
18.2　打包	302
18.3　编译扩展	303
18.4　使用py2exe创建可执行程序	304
18.5　小结	304
18.5.1　本章介绍的新函数	305
18.5.2　预告	305
第19章　趣味编程	306
19.1　为何要有趣	306
19.2　编程柔术	306
19.3　原型设计	307
19.4　配置	308
19.4.1　提取常量	308
19.4.2　配置文件	309
19.5　日志	311
19.6　如果你已不胜其烦	312
19.7　如果你想深入学习	312
19.8　小结	313
第20章　项目1：自动添加标签	315
20.1　问题描述	315
20.2　有用的工具	316
20.3　准备工作	316
20.4　初次实现	317
20.4.1　找出文本块	317
20.4.2　添加一些标记	318
20.5　再次实现	319
20.5.1　处理程序	320
20.5.2　处理程序的超类	320
20.5.3　规则	322
20.5.4　规则的超类	323
20.5.5　过滤器	323
20.5.6　解析器	323
20.5.7　创建规则和过滤器	324
20.5.8　整合起来	327
20.6　进一步探索	331
第21章　项目2：绘制图表	332
21.1　问题描述	332
21.2　有用的工具	332
21.3　准备工作	333
21.4　初次实现	333
21.4.1　使用ReportLab绘图	334
21.4.2　绘制折线	335
21.4.3　编写原型	335
21.5　再次实现	337
21.5.1　获取数据	337
21.5.2　使用LinePlot类	337
21.6　进一步探索	339
第22章　项目3：万能的XML	340
22.1　问题描述	340
22.2　有用的工具	341
22.3　准备工作	341
22.4　初次实现	343
22.4.1　创建简单的内容处理程序	343
22.4.2　创建HTML页面	345
22.5　再次实现	347
22.5.1　分派器混合类	347
22.5.2　将首部和尾部写入文件的方法以及默认处理程序	349
22.5.3　支持目录	349
22.5.4　事件处理程序	350
22.6　进一步探索	352
第23章　项目4：新闻汇总	353
23.1　问题描述	353
23.2　有用的工具	354
23.3　准备工作	354
23.4　初次实现	354
23.5　再次实现	356
23.6　进一步探索	362
第24章　项目5：虚拟茶话会	364
24.1　问题描述	364
24.2　有用的工具	364
24.3　准备工作	365
24.4　初次实现	366
24.4.1　ChatServer类	366
24.4.2　ChatSession类	367
24.4.3　整合起来	369
24.5　再次实现	371
24.5.1　基本的命令解释功能	371
24.5.2　聊天室	372
24.5.3　登录和退出聊天室	372
24.5.4　主聊天室	373
24.5.5　新的服务器	373
24.6　进一步探索	378
第25章　项目6：使用CGI进行远程编辑	379
25.1　问题描述	379
25.2　有用的工具	379
25.3　准备工作	380
25.4　初次实现	380
25.5　再次实现	381
25.5.1　创建文件名表单	381
25.5.2　编写编辑器脚本	382
25.5.3　编写保存脚本	383
25.5.4　运行编辑器	384
25.6　进一步探索	386
第26章　项目7：自建公告板	387
26.1　问题描述	387
26.2　有用的工具	387
26.3　准备工作	388
26.4　初次实现	389
26.5　再次实现	393
26.5.1　编写脚本main.cgi	394
26.5.2　编写脚本view.cgi	395
26.5.3　编写脚本edit.cgi	396
26.5.4　编写脚本save.cgi	398
26.5.5　尝试使用	399
26.6　进一步探索	400
第27章　项目8：使用XML-RPC共享文件	401
27.1　问题描述	401
27.2　有用的工具	402
27.3　准备工作	403
27.4　初次实现	403
27.4.1　实现简单的节点	403
27.4.2　尝试使用	408
27.5　再次实现	409
27.5.1　创建客户端界面	410
27.5.2　引发异常	410
27.5.3　验证文件名	411
27.5.4　尝试使用	415
27.6　进一步探索	415
第28章　项目9：使用GUI共享文件	417
28.1　问题描述	417
28.2　有用的工具	417
28.3　准备工作	417
28.4　初次实现	417
28.5　再次实现	419
28.6　进一步探索	422
第29章　项目10：自制街机游戏	423
29.1　问题描述	423
29.2　有用的工具	424
29.2.1　pygame	424
29.2.2　pygame.locals	424
29.2.3　pygame.display	424
29.2.4　pygame.font	425
29.2.5　pygame.sprite	425
29.2.6　pygame.mouse	425
29.2.7　pygame.event	425
29.2.8　pygame.image	426
29.3　准备工作	426
29.4　初次实现	426
29.5　再次实现	429
29.6　进一步探索	438
附录A　简明教程	440
附录B　Python参考手册	447
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python基础教程（第3版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>数据结构与算法：Python语言描述
目　　录
前言
第1章绪论1
1.1计算机问题求解1
1.1.1程序开发过程1
1.1.2　一个简单例子3
1.2　问题求解：交叉路口的红绿灯安排4
1.2.1问题分析和严格化5
1.2.2图的顶点分组和算法6
1.2.3算法的精化和Python描述7
1.2.4讨论8
1.3算法和算法分析10
1.3.1问题、问题实例和算法10
1.3.2算法的代价及其度量14
1.3.3算法分析19
1.3.4Python程序的计算代价（复杂度）21
1.4数据结构23
1.4.1数据结构及其分类24
1.4.2计算机内存对象表示26
1.4.3Python对象和数据结构30
练习32
第2章抽象数据类型和Python类34
2.1抽象数据类型34
2.1.1数据类型和数据构造34
2.1.2抽象数据类型的概念36
2.1.3抽象数据类型的描述37
2.2Python的类39
2.2.1有理数类39
2.2.2类定义进阶40
2.2.3本书采用的ADT描述形式43
2.3类的定义和使用44
2.3.1类的基本定义和使用44
2.3.2实例对象：初始化和使用45
2.3.3几点说明47
2.3.4继承49
2.4Python异常53
2.4.1异常类和自定义异常53
2.4.2异常的传播和捕捉54
2.4.3内置的标准异常类54
2.5类定义实例：学校人事管理系统中的类55
2.5.1问题分析和设计56
2.5.2人事记录类的实现57
2.5.3讨论62
本章总结63
练习64
第3章线性表66
3.1线性表的概念和表抽象数据类型66
3.1.1表的概念和性质66
3.1.2表抽象数据类型67
3.1.3线性表的实现：基本考虑69
3.2顺序表的实现69
3.2.1基本实现方式69
3.2.2顺序表基本操作的实现71
3.2.3顺序表的结构74
3.2.4Python的list76
3.2.5顺序表的简单总结78
3.3链接表79
3.3.1线性表的基本需要和链接表79
3.3.2单链表79
3.3.3单链表类的实现84
3.4链表的变形和操作88
3.4.1单链表的简单变形88
3.4.2循环单链表91
3.4.3双链表92
3.4.4两个链表操作95
3.4.5不同链表的简单总结98
3.5表的应用99
3.5.1Josephus问题和基于“数组”概念的解法99
3.5.2基于顺序表的解100
3.5.3基于循环单链表的解101
本章总结102
练习103
第4章　字符串107
4.1　字符集、字符串和字符串操作107
4.1.1　字符串的相关概念107
4.1.2　字符串抽象数据类型109
4.2　字符串的实现109
4.2.1　基本实现问题和技术109
4.2.2　实际语言里的字符串110
4.2.3　Python的字符串111
4.3　字符串匹配（子串查找）112
4.3.1　字符串匹配112
4.3.2　串匹配和朴素匹配算法113
4.3.3　无回溯串匹配算法（KMP算法）115
4.4　字符串匹配问题119
4.4.1　串匹配/搜索的不同需要120
4.4.2　一种简化的正则表达式122
4.5　Python正则表达式123
4.5.1　概况124
4.5.2　基本情况124
4.5.3　主要操作125
4.5.4　正则表达式的构造126
4.5.5　正则表达式的使用132
本章总结132
练习133
第5章　栈和队列135
5.1　概述135
5.1.1　栈、队列和数据使用顺序135
5.1.2　应用环境136
5.2　栈：概念和实现136
5.2.1　栈抽象数据类型137
5.2.2　栈的顺序表实现137
5.2.3　栈的链接表实现139
5.3　栈的应用140
5.3.1　简单应用：括号匹配问题140
5.3.2　表达式的表示、计算和变换142
5.3.3　栈与递归149
5.4　队列155
5.4.1　队列抽象数据类型155
5.4.2　队列的链接表实现155
5.4.3　队列的顺序表实现156
5.4.4　队列的list实现158
5.4.5　队列的应用160
5.5　迷宫求解和状态空间搜索162
5.5.1　迷宫求解：分析和设计162
5.5.2　求解迷宫的算法164
5.5.3　迷宫问题和搜索167
5.6　几点补充171
5.6.1　几种与栈或队列相关的结构171
5.6.2　几个问题的讨论172
本章总结173
练习173
第6章　二叉树和树176
6.1　二叉树：概念和性质176
6.1.1　概念和性质177
6.1.2　抽象数据类型181
6.1.3　遍历二叉树181
6.2　二叉树的list实现183
6.2.1　设计和实现183
6.2.2　二叉树的简单应用：表达式树185
6.3　优先队列188
6.3.1　概念188
6.3.2　基于线性表的实现189
6.3.3　树形结构和堆191
6.3.4　优先队列的堆实现192
6.3.5　堆的应用：堆排序195
6.4　应用：离散事件模拟196
6.4.1　通用的模拟框架197
6.4.2　海关检查站模拟系统198
6.5　二叉树的类实现202
6.5.1　二叉树结点类203
6.5.2　遍历算法204
6.5.3　二叉树类208
6.6　哈夫曼树209
6.6.1　哈夫曼树和哈夫曼算法209
6.6.2　哈夫曼算法的实现210
6.6.3　哈夫曼编码211
6.7　树和树林212
6.7.1　实例和表示213
6.7.2　定义和相关概念213
6.7.3　抽象数据类型和操作215
6.7.4　树的实现216
6.7.5　树的Python实现218
本章总结220
练习220
第7章图224
7.1概念、性质和实现224
7.1.1　定义和图示224
7.1.2　图的一些概念和性质225
7.1.3　图抽象数据类型227
7.1.4　图的表示和实现228
7.2　图结构的Python实现231
7.2.1　邻接矩阵实现231
7.2.2　压缩的邻接矩阵（邻接表）实现233
7.2.3　小结235
7.3　基本图算法235
7.3.1　图的遍历236
7.3.2　生成树238
7.4　*小生成树240
7.4.1　*小生成树问题240
7.4.2　Kruskal算法240
7.4.3　Prim算法243
*7.4.4　Prim算法的改进246
7.4.5　*小生成树问题247
7.5　*短路径248
7.5.1　*短路径问题248
7.5.2　求解单源点*短路径的Dijkstra算法248
7.5.3　求解任意顶点间*短路径的Floyd算法252
7.6　AOV/AOE网及其算法255
7.6.1　AOV网、拓扑排序和拓扑序列255
7.6.2　拓扑排序算法257
7.6.3　AOE网和关键路径258
7.6.4　关键路径算法259
本章总结261
练习262
第8章　字典和集合265
8.1　数据存储、检索和字典265
8.1.1　数据存储和检索265
8.1.2　字典实现的问题267
8.2　字典线性表实现269
8.2.1　基本实现269
8.2.2　有序线性表和二分法检索270
8.2.3　字典线性表总结272
8.3　散列和散列表273
8.3.1　散列的思想和应用273
8.3.2　散列函数275
8.3.3　冲突的内消解：开地址技术277
8.3.4　外消解技术280
8.3.5　散列表的性质280
8.4　集合282
8.4.1　集合的概念、运算和抽象数据类型282
8.4.2　集合的实现283
8.4.3　特殊实现技术：位向量实现285
8.5　Python的标准字典类dict和set286
8.6　二叉排序树和字典287
8.6.1　二叉排序树288
8.6.2　**二叉排序树295
8.6.3　一般情况的**二叉排序树297
8.7　平衡二叉树302
8.7.1　定义和性质302
8.7.2　AVL树类303
8.7.3　插入操作304
8.7.4　相关问题310
8.8　动态多分支排序树311
8.8.1　多分支排序树311
8.8.2　B树312
8.8.3　B+ 树314
本章总结315
练习316
第9章　排序319
9.1　问题和性质319
9.1.1　问题定义319
9.1.2　排序算法320
9.2　简单排序算法323
9.2.1　插入排序323
9.2.2　选择排序325
9.2.3　交换排序327
9.3　快速排序328
9.3.1　快速排序的表实现329
9.3.2　程序实现330
9.3.3　复杂度331
9.3.4　另一种简单实现332
9.4　归并排序332
9.4.1　顺序表的归并排序333
9.4.2　归并算法的设计问题333
9.4.3　归并排序函数定义333
9.4.4　算法分析335
9.5　其他排序方法335
9.5.1　分配排序和基数排序335
9.5.2　一些与排序有关的问题338
9.5.3　Python系统的list排序339
本章总结340
练习342
参考文献344
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>数据结构与算法：Python语言描述
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>python黑帽子
目录
目 录
第 1 章 设置 Python 环境 1
安装 Kali Linux 虚拟机1
WingIDE3
第 2 章 网络基础 9
Python 网络编程简介 10
TCP 客户端 10
UDP 客户端 11
TCP 服务器12
取代 netcat13
小试牛刀 21
创建一个 TCP 代理 23
小试牛刀 28
通过 Paramiko 使用 SSH 29
小试牛刀 34
SSH 隧道 34
小试牛刀 38
第 3 章 网络：原始套接字和流量嗅探 40
开发 UDP 主机发现工具 41
Windows 和 Linux 上的包嗅探 41
小试牛刀 43
解码 IP 层 43
小试牛刀 47
解码 ICMP48
小试牛刀 52
第 4 章 Scapy：网络的掌控者 54
窃取 Email 认证 55
小试牛刀 57
利用 Scapy 进行 ARP 缓存投毒 58
小试牛刀 63
处理 PCAP 文件 64
小试牛刀 69
第 5 章 Web 攻击 71
Web 的套接字函数库： urllib2 71
开源 Web 应用安装 73
小试牛刀 75
暴力破解目录和文件位置 76
小试牛刀 79
暴力破解 HTML 表格认证 80
小试牛刀 86
第 6 章 扩展 Burp 代理 88
配置89
Burp 模糊测试90
小试牛刀 97
在 Burp 中利用 Bing 服务 101
小试牛刀 105
利用网站内容生成密码字典 107
小试牛刀 111
第 7 章 基于 GitHub 的命令和控制114
GitHub 账号设置115
创建模块116
木马配置 117
编写基于 GitHub 通信的木马 118
Python 模块导入功能的破解121
小试牛刀123
第 8 章 Windows 下木马的常用功能125
有趣的键盘记录125
小试牛刀 129
截取屏幕快照 130
Python 方式的 shellcode 执行 131
小试牛刀 132
沙盒检测 133
第 9 章 玩转浏览器140
基于浏览器的中间人攻击 140
创建接收服务器144
小试牛刀 145
利用 IE 的 COM 组件自动化技术窃取数据 146
小试牛刀 154
第 10 章 Windows 系统提权156
环境准备157
创建进程监视器 158
利用 WMI 监视进程 158
小试牛刀 160
Windows 系统的令牌权限 161
赢得竞争 163
小试牛刀 167
代码插入168
小试牛刀 170
第 11 章 自动化攻击取证172
工具安装 173
工具配置 173
抓取口令的哈希值173
直接代码注入177
小试牛刀 183
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>python黑帽子
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>可爱的Python
实例故事
CDays“光盘故事”
CDay-5 Python初体验和原始需求
CDay-4 可用的首个Python脚本
CDay-3 通过函式进行功能化
CDay-2 完成核心功能
CDay-1 实用化中文
CDay-0 时刻准备着！发布
CDay+1 优化！对白个儿的反省
CDay+2 界面！不应该是难事儿
CDay+3 优化！多线程
CDayN 基于Python的无尽探索
KDays “Web应用故事”
KDay0 Web开发启航
KDay1 品尝Karrigell
KDay2 通过表单直接完成功能
KDay3 使用第3方模块规范化表单
KDay4 使用KS模式重构代码
KDay5 通过session重构应用流程
KDay6 利用mill人性化组织成员信息
KDayN 经验总结，畅想Web应用
Python学习作弊条
环境篇
PCS0 如何安装Python
PCS1 交互环境之命令行
PCS2 交互环境之iPython
PCS3 交互环境之winpy
PCS4 常用自省
PCS5 Python脚本文件
PCS6 Python与中文
PCS7 Python编码规范
语法篇
PCS100 import
PCS101 内建数据类型
PCS102 For循环
PCS103 缩进
PCS104 注释
PCS105 对象
PCS106 文件对象
PCS107 字串格式化
PCS108 函式
PCS109 系统参数
PCS110 逻辑分支
PCS111 类
PCS112 异常
PCS113 交互参数
PCS114 FP初体验
模块篇
PCS200 os（stat；path）
PCS201 cmd
PCS202 chardet
PCS203 epydoc
PCS204 ConfigParser
PCS205 内建函式(enumerate)
PCS206 thread
PCS207 threading
PCS208 dict4ini
PCS209 fnmatch
PCS210 pickle
PCS211 base64
PCS212 shutil
PCS213 time
PCS214 ElementTree
PCS215 random
PCS216 socket
PCS217 Tkinter
框架篇
PCS300 CherryPy
PCS301 Karrigell
PC$302 Leo
PCS303 MoinMoin
PCS304 Python Web应用框架纵论
友邻篇
PCS400 GAE
PCS401 DHTML
PCS402 XML
PCS403 思维导图
PCS404 代码重构浅说
附录引言
术语索引
行者箴言
Z跋
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>可爱的Python
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python网络编程（第3版）
第1章　客户端/服务器网络编程简介　　1
1.1　基础：协议栈与库　　1
1.2　应用层　　4
1.3　协议的使用　　5
1.4　一个原始的网络会话　　6
1.5　层层深入　　8
1.6　编码与解码　　9
1.7　网际协议　　10
1.8　IP地址　　11
1.9　路由　　12
1.10　数据包分组　　13
1.11　进一步学习IP　　14
1.12　小结　　15
第2章　UDP　　16
2.1　端口号　　17
2.2　套接字　　18
2.2.1　混杂客户端与垃圾回复　　22
2.2.2　不可靠性、退避、阻塞和超时　　23
2.2.3　连接UDP套接字　　27
2.2.4　请求ID：好主意　　28
2.3　绑定接口　　29
2.4　UDP分组　　31
2.5　套接字选项　　33
2.6　广播　　33
2.7　小结　　35
第3章　TCP　　37
3.1　TCP工作原理　　37
3.2　何时使用TCP　　38
3.3　TCP套接字的含义　　39
3.4　一个简单的TCP客户端和服务器　　40
3.4.1　每个会话使用一个套接字　　43
3.4.2　地址已被占用　　44
3.5　绑定接口　　46
3.6　死锁　　46
3.7　已关闭连接，半开连接　　51
3.8　像使用文件一样使用TCP流　　52
3.9　小结　　53
第4章　套接字名与DNS　　54
4.1　主机名与套接字　　54
4.1.1　套接字的5个坐标　　55
4.1.2　IPv6　　56
4.2　现代地址解析　　57
4.2.1　使用getaddrinfo()为服务器绑定端口　　58
4.2.2　使用getaddrinfo()连接服务　　59
4.2.3　使用getaddrinfo()请求规范主机名　　60
4.2.4　其他getaddrinfo()标记　　61
4.2.5　原始的名称服务程序　　62
4.2.6　在代码中使用getsockaddr()　　62
4.3　DNS协议　　64
4.3.1　为何不使用原始DNS　　66
4.3.2　使用Python进行DNS查询　　66
4.3.3　解析邮箱域名　　68
4.4　小结　　70
第5章　网络数据与网络错误　　71
5.1　字节与字符串　　71
5.1.1　字符串　　72
5.1.2　二进制数与网络字节顺序　　75
5.2　封帧与引用　　77
5.3　pickle与自定义定界符的格式　　82
5.4　XML与JSON　　83
5.5　压缩　　84
5.6　网络异常　　85
5.6.1　抛出更具体的异常　　87
5.6.2　捕捉与报告网络异常　　87
5.7　小结　　88
第6章　TLS/SSL　　90
6.1　TLS无法保护的信息　　90
6.2　可能出问题的地方　　91
6.3　生成证书　　93
6.4　TLS负载移除　　95
6.5　Python 3.4默认上下文　　96
6.6　手动选择加密算法与完美前向安全　　102
6.7　支持TLS的协议　　104
6.8　了解细节　　105
6.9　小结　　111
第7章　服务器架构　　112
7.1　浅谈部署　　112
7.2　一个简单的协议　　114
7.3　单线程服务器　　117
7.4　多线程与多进程服务器　　120
7.5　异步服务器　　122
7.5.1　回调风格的asyncio　　126
7.5.2　协程风格的asyncio　　127
7.5.3　遗留模块asyncore　　129
7.5.4　两全其美的方法　　130
7.6　在inetd下运行　　131
7.7　小结　　133
第8章　缓存与消息队列　　134
8.1　使用Memcached　　134
8.2　散列与分区　　137
8.3　消息队列　　140
8.4　小结　　145
第9章　HTTP客户端　　147
9.1　Python客户端库　　147
9.2　端口、加密与封帧　　149
9.3　方法　　151
9.4　路径与主机　　152
9.5　状态码　　152
9.6　缓存与验证　　155
9.7　传输编码　　157
9.8　内容协商　　158
9.9　内容类型　　160
9.10　HTTP认证　　160
9.11　cookie　　162
9.12　连接、Keep-Alive和httplib　　163
9.13　小结　　164
第10章　HTTP服务器　　166
10.1　WSGI　　166
10.2　异步服务器与框架　　168
10.3　前向代理与反向代理　　169
10.4　4种架构　　170
10.4.1　在Apache下运行Python　　171
10.4.2　纯粹的Python HTTP服务器的兴起　　172
10.4.3　反向代理的优势　　172
10.5　平台即服务　　173
10.6　GET与POST模式和REST的问题　　174
10.7　不使用Web框架编写WSGI可调用对象　　176
10.8　小结　　180
第11章　万维网　　181
11.1　超媒体与URL　　181
11.1.1　解析与构造URL　　182
11.1.2　相对URL　　184
11.2　超文本标记语言　　186
11.3　读写数据库　　189
11.4　一个糟糕的Web应用程序（使用Flask）　　190
11.5　表单和HTTP方法　　195
11.5.1　表单使用了错误方法的情况　　197
11.5.2　安全的cookie与不安全的cookie　　198
11.5.3　非持久型跨站脚本　　200
11.5.4　持久型跨站脚本　　201
11.5.5　跨站请求伪造　　202
11.5.6　改进的应用程序　　203
11.6　使用Django编写的账单应用程序　　205
11.7　选择Web框架　　209
11.8　WebSocket　　210
11.9　网络抓取　　211
11.9.1　获取页面　　212
11.9.2　抓取页面　　215
11.9.3　递归抓取　　217
11.10　小结　　221
第12章　电子邮件的构造与解析　　222
12.1　电子邮件消息格式　　222
12.2　构造电子邮件消息　　224
12.3　添加HTML与多媒体　　226
12.4　添加内容　　231
12.5　解析电子邮件消息　　232
12.6　遍历MIME部件　　234
12.7　邮件头编码　　236
12.8　解析日期　　237
12.9　小结　　238
第13章　SMTP　　239
13.1　电子邮件客户端与Web邮件服务　　239
13.1.1　最开始使用命令行发送电子邮件　　239
13.1.2　客户端的兴起　　240
13.1.3　转移到Web邮件　　241
13.2　SMTP的使用方法　　243
13.2.1　发送电子邮件　　244
13.2.2　邮件头与信封接收者　　245
13.2.3　多跳　　246
13.3　SMTP库简介　　247
13.4　错误处理与会话调试　　248
13.5　从EHLO获取信息　　251
13.6　使用安全套接层和传输层安全协议　　253
13.7　认证的SMTP　　255
13.8　关于SMTP的小贴士　　257
13.9　小结　　257
第14章　POP　　258
14.1　POP服务器的兼容性　　258
14.2　连接与认证　　259
14.3　获取邮箱信息　　261
14.4　消息的下载与删除　　263
14.5　小结　　265
第15章　IMAP　　266
15.1　在Python中使用IMAP　　267
15.1.1　IMAPClient　　269
15.1.2　查看文件夹　　271
15.1.3　消息号与UID　　272
15.1.4　消息范围　　272
15.1.5　摘要信息　　272
15.1.6　下载整个邮箱　　274
15.1.7　单独下载消息　　276
15.1.8　标记并删除消息　　281
15.1.9　删除消息　　282
15.1.10　搜索　　282
15.1.11　操作文件夹与消息　　284
15.1.12　异步性　　285
15.2　小结　　285
第16章　Telnet和SSH　　286
16.1　命令行自动化　　286
16.1.1　命令行扩展与引用　　287
16.1.2　UNIX命令行参数几乎可以包含任意字符　　288
16.1.3　对字符进行引用　　290
16.1.4　糟糕的Windows命令行　　291
16.1.5　终端的特别之处　　292
16.1.6　终端的缓冲行为　　295
16.2　Telnet　　296
16.3　SSH：安全shell　　300
16.3.1　SSH概述　　300
16.3.2　SSH主机密钥　　301
16.3.3　SSH认证　　303
16.3.4　shell会话与独立命令　　304
16.3.5　SFTP：通过SSH进行文件传输　　308
16.3.6　其他特性　　310
16.4　小结　　311
第17章　FTP　　313
17.1　何时不使用FTP　　313
17.1.1　通信信道　　314
17.1.2　在Python中使用FTP　　315
17.1.3　ASCII和二进制文件　　316
17.1.4　二进制下载进阶功能介绍　　318
17.1.5　上传数据　　319
17.1.6　二进制上传进阶功能介绍　　320
17.1.7　错误处理　　321
17.1.8　目录扫描　　322
17.1.9　目录检测以及递归下载　　324
17.1.10　目录的创建以及文件和目录的删除　　326
17.1.11　安全地操作FTP　　326
17.2　小结　　326
第18章　RPC　　328
18.1　RPC的特性　　329
18.1.1　XML-RPC　　330
18.1.2　JSON-RPC　　336
18.1.3　自文档的数据　　339
18.1.4　关于对象：Pyro和RPyC　　340
18.1.5　RPyC例子　　341
18.1.6　RPC、Web框架和消息队列　　343
18.1.7　从网络错误中恢复　　344
18.2　小结　　344
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python网络编程（第3版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>用Python写网络爬虫
目录
第1章 网络爬虫简介 1
1.1　网络爬虫何时有用　1
1.2　网络爬虫是否合法　2
1.3　背景调研　3
1.3.1　检查robots.txt　3
1.3.2　检查网站地图　4
1.3.3　估算网站大小　5
1.3.4　识别网站所用技术　7
1.3.5　寻找网站所有者　7
1.4　编写第一个网络爬虫　8
1.4.1　下载网页　9
1.4.2　网站地图爬虫　12
1.4.3　ID遍历爬虫　13
1.4.4　链接爬虫　15
1.5　本章小结　22
第2章　数据抓取　23
2.1　分析网页　23
2.2　三种网页抓取方法　26
2.2.1　正则表达式　26
2.2.2　Beautiful Soup　28
2.2.3　Lxml　30
2.2.4　性能对比　32
2.2.5　结论　35
2.2.6　为链接爬虫添加抓取回调　35
2.3　本章小结　38
第3章　下载缓存　39
3.1　为链接爬虫添加缓存支持　39
3.2　磁盘缓存　42
3.2.1　实现　44
3.2.2　缓存测试　46
3.2.3　节省磁盘空间　46
3.2.4　清理过期数据　47
3.2.5　缺点　48
3.3　数据库缓存　49
3.3.1　NoSQL是什么　50
3.3.2　安装MongoDB　50
3.3.3　MongoDB概述　50
3.3.4　MongoDB缓存实现　52
3.3.5　压缩　54
3.3.6　缓存测试　54
3.4　本章小结　55
第4章　并发下载　57
4.1　100万个网页　57
4.2　串行爬虫　60
4.3　多线程爬虫　60
4.3.1　线程和进程如何工作　61
4.3.2　实现　61
4.3.3　多进程爬虫　63
4.4　性能　67
4.5　本章小结　68
第5章　动态内容　69
5.1　动态网页示例　69
5.2　对动态网页进行逆向工程　72
5.3　渲染动态网页　77
5.3.1　PyQt还是PySide　78
5.3.2　执行JavaScript　78
5.3.3　使用WebKit与网站交互　80
5.3.4　Selenium　85
5.4　本章小结　88
第6章　表单交互　89
6.1　登录表单　90
6.2　支持内容更新的登录脚本扩展　97
6.3　使用Mechanize模块实现自动化表单处理　100
6.4　本章小结　102
第7章　验证码处理　103
7.1　注册账号　103
7.2　光学字符识别　106
7.3　处理复杂验证码　111
7.3.1　使用验证码处理服务　112
7.3.2　9kw入门　112
7.3.3　与注册功能集成　119
7.4　本章小结　120
第8章　Scrapy　121
8.1　安装　121
8.2　启动项目　122
8.2.1　定义模型　123
8.2.2　创建爬虫　124
8.2.3　使用shell命令抓取　128
8.2.4　检查结果　129
8.2.5　中断与恢复爬虫　132
8.3　使用Portia编写可视化爬虫　133
8.3.1　安装　133
8.3.2　标注　136
8.3.3　优化爬虫　138
8.3.4　检查结果　140
8.4　使用Scrapely实现自动化抓取　141
8.5　本章小结　142
第9章　总结　143
9.1　Google搜索引擎　143
9.2　Facebook　148
9.2.1　网站　148
9.2.2　API　150
9.3　Gap　151
9.4　宝马　153
9.5　本章小结　157
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>用Python写网络爬虫
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python Web开发实战
第1章 初识Web开发
1.1 Web开发介绍
1.2 Web框架介绍
第2章 环境搭建
2.1 Ubuntu环境搭建
2.2 包管理和虚拟环境
2.3 进阶篇: pip高级用法
第3章 Flask Web开发
3.1 Flask入门
3.2 模板
3.3 使用MySQL
3.4 理解Context
3.5 从零开始实现一个文件托管服务
第4章 Flask 开发进阶
4.1 Flask的信号机制
4.2 Flask的扩展
4.3 Werkzeug使用
第5章 REST和Ajax
5.1 什么是REST
5.2 RESTful API设计指南
5.3 使用Ajax
第6章 网站架构
6.1 Python应用服务器
6.2 Web服务器Nginx
6.3 缓存系统Memcached
6.4 键值对数据库Redis
6.5 NoSQL数据库MongoDB
6.6 大型网站架构经验
第7章 系统管理
7.1 进程管理Supervisor
7.2 应用部署Fabric
7.3 配置管理SaltStack和Ansible
7.4 使用Psutil
7.5 使用Sentry收集错误信息
7.6 使用StatsD、Graphite等搭建Web监控
第8章 测试和持续集成
8.1 使用unittest和doctest测试
8.2 使用py.test和mock
8.3 持续集成
第9章 消息队列和Celery
9.1 使用Beanstalkd
9.2 深入RabbitMQ
9.3 使用Celery
9.4 深入Celery
9.5 进阶篇: Celery最佳实践
第10章 服务化
10.1 为什么需要服务化
10.2 使用Thrift
10.3 PIDL - 豆瓣服务化实践
第11章 数据处理
11.1 使用MapReduce做日志分析
11.2 使用DPark
11.3 数据报表
11.4 使用Pandas
第12章 帮助工具
12.1 IPython
12.2 Jupyter Notebook
12.3 调试和DEBUG工具
12.4 进阶篇: 定制基于IPython的交互解释环境
12.5 进阶篇: 豆瓣东西的Jupyter Notebook实践
第13章 Python并发编程
13.1 使用多线程
12.2 使用Gevent
13.3 使用多进程
13.4 使用Future
13.5 使用asyncio
第14章 Python进阶
14.1 使用标准库模块
14.2 Python语法最佳实践
14.3 从Python 3移植
14.4 使用CFFI/Cython编写Python扩展
14.5 进阶篇: 使用PyObjC发送通知
第15章 Web开发项目实践
15.1 Web项目经验总结
15.2 编写代码质量检测插件
15.3 代码评审的意义
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python Web开发实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python参考手册（第4版）
第一部分 Python语言
第1章 Python简介	2
1.1 运行Python	2
1.2 变量和算术表达式	3
1.3 条件语句	5
1.4 文件输入和输出	6
1.5 字符串	7
1.6 列表	8
1.7 元组	9
1.8 集合	10
1.9 字典	11
1.10 迭代与循环	12
1.11 函数	13
1.12 生成器	14
1.13 协程	15
1.14 对象与类	16
1.15 异常	17
1.16 模块	18
1.17 获得帮助	19
第2章 词汇和语法约定	20
2.1 行结构和缩进	20
2.2 标识符和保留字	21
2.3 数字字面量	21
2.4 字符串字面量	22
2.5 容器	23
2.6 运算符、分隔符及特殊符号	24
2.7 文档字符串	24
2.8 装饰器	24
2.9 源代码编码	25
第3章 类型与对象	26
3.1 术语	26
3.2 对象的身份与类型	26
3.3 引用计数与垃圾收集	27
3.4 引用与复制	28
3.5 第一类对象	29
3.6 表示数据的内置类型	30
3.6.1 None类型	30
3.6.2 数字类型	31
3.6.3 序列类型	31
3.6.4 映射类型	35
3.6.5 集合类型	36
3.7 表示程序结构的内置类型	37
3.7.1 可调用类型	38
3.7.2 类、类型与实例	40
3.7.3 模块	41
3.8 解释器内部使用的内置类型	41
3.8.1 代码对象	41
3.8.2 帧对象	42
3.8.3 跟踪对象	42
3.8.4 生成器对象	43
3.8.5 切片对象	43
3.8.6 Ellipsis对象	43
3.9 对象行为与特殊方法	44
3.9.1 对象的创建与销毁	44
3.9.2 对象字符串表示	44
3.9.3 对象比较与排序	45
3.9.4 类型检查	46
3.9.5 属性访问	46
3.9.6 属性包装与描述符	46
3.9.7 序列与映射方法	47
3.9.8 迭代	48
3.9.9 数学操作	48
3.9.10 可调用接口	50
3.9.11 上下文管理协议	50
3.9.12 对象检查与dir()	51
第4章 运算符与表达式	52
4.1 数字操作	52
4.2 序列操作	53
4.3 字符串格式化	56
4.4 高级字符串格式化	57
4.5 字典操作	59
4.6 集合操作	60
4.7 增量赋值	60
4.8 属性（.）运算符	61
4.9 函数调用()运算符	61
4.10 转换函数	61
4.11 布尔表达式与真值	62
4.12 对象的比较与身份	63
4.13 运算优先级	63
4.14 条件表达式	64
第5章 程序结构与控制流	65
5.1 程序结构与执行	65
5.2 执行条件语句	65
5.3 循环与迭代	66
5.4 异常	68
5.4.1 内置异常	70
5.4.2 定义新异常	71
5.5 上下文管理器与with语句	72
5.6 断言与__debug__	73
第6章 函数与函数编程	75
6.1 函数	75
6.2 参数传递与返回值	77
6.3 作用域规则	77
6.4 函数对象与闭包	79
6.5 装饰器	82
6.6 生成器与yield	83
6.7 协程与yield表达式	85
6.8 使用生成器与协程	87
6.9 列表包含	89
6.10 生成器表达式	90
6.11 声明式编程	91
6.12 lambda运算符	92
6.13 递归	92
6.14 文档字符串	93
6.15 函数属性	94
6.16 eval()、exec()和compile()函数	94
第7章 类与面向对象编程	96
7.1 class语句	96
7.2 类实例	97
7.3 范围规则	97
7.4 继承	98
7.5 多态动态绑定和鸭子类型	100
7.6 静态方法和类方法	101
7.7 特性	102
7.8 描述符	104
7.9 数据封装和私有属性	105
7.10 对象内存管理	106
7.11 对象表示和属性绑定	108
7.12 __slots__	109
7.13 运算符重载	110
7.14 类型和类成员测试	111
7.15 抽象基类	113
7.16 元类	114
7.17 类装饰器	117
第8章 模块、包与分发	118
8.1 模块与import语句	118
8.2 从模块导入选定符号	119
8.3 以主程序的形式执行	120
8.4 模块搜索路径	121
8.5 模块加载和编译	121
8.6 模块重新加载和卸载	122
8.7 包	123
8.8 分发Python程序和库	125
8.9 安装第三方库	127
第9章 输入与输出	129
9.1 读取命令行选项	129
9.2 环境变量	130
9.3 文件和文件对象	130
9.4 标准输入、输出和错误	133
9.5 print语句	133
9.6 print()函数	134
9.7 文本输出中的变量插入	134
9.8 生成输出	135
9.9 Unicode字符串处理	136
9.10 Unicode I/O	137
9.10.1 Unicode数据编码	138
9.10.2 Unicode字符特性	140
9.11 对象持久性与pickle模块	140
第10章 执行环境	142
10.1 解释器选项与环境	142
10.2 交互式会话	144
10.3 启动Python应用程序	145
10.4 站点配置文件	145
10.5 用户站点包	146
10.6 启用新功能	146
10.7 程序终止	147
第11章 测试、调试、探查与调优	149
11.1 文档字符串和doctest模块	149
11.2 单元测试和unittest模块	151
11.3 Python调试器和pdb模块	153
11.3.1 调试器命令	153
11.3.2 从命令行进行调试	156
11.3.3 配置调试器	156
11.4 程序探查	156
11.5 调优与优化	157
11.5.1 进行计时测量	157
11.5.2 进行内存测量	158
11.5.3 反汇编	158
11.5.4 调优策略	159
第二部分 Python库
第12章 内置函数和异常	164
12.1 内置函数和类型	164
12.2 内置异常	172
12.2.1 异常基类	172
12.2.2 异常实例	173
12.2.3 预定义的异常类	173
12.3 内置警告	176
12.4 future_builtins	176
第13章 Python运行时服务	178
13.1 atexit	178
13.2 copy	178
13.3 gc	179
13.4 inspect	180
13.5 marshal	183
13.6 pickle	184
13.7 SYS	186
13.7.1 变量	186
13.7.2 函数	189
13.8 traceback	191
13.9 types	192
13.10 warnings	193
13.11 weakref	194
第14章 数学运算	197
14.1 decimal	197
14.1.1 Decimal对象	197
14.1.2 Context对象	198
14.1.3 函数和常量	200
14.1.4 示例	201
14.2 fractions	202
14.3 math	203
14.4 numbers	205
14.5 random	206
14.5.1 种子和初始化	206
14.5.2 随机整数	206
14.5.3 随机序列	206
14.5.4 实值随机分布	207
第15章 数据结构、算法与代码简化	209
15.1 abc	209
15.2 array	210
15.3 bisect	212
15.4 collections	213
15.4.1 deque和defaultdict	213
15.4.2 命名元组	214
15.4.3 抽象基类	216
15.5 contextlib	217
15.6 functools	218
15.7 heapq	219
15.8 itertools	220
15.9 operator	222
第16章 字符串和文本处理	225
16.1 odecs	225
16.1.1 低级codecs接口	225
16.1.2 I/O相关函数	226
16.1.3 有用的常量	227
16.1.4 标准编码	227
16.1.5 注意	228
16.2 re	228
16.2.1 模式语法	228
16.2.2 函数	229
16.2.3 正则表达式对象	231
16.2.4 匹配对象	231
16.2.5 示例	232
16.2.6 注意	233
16.3 string	233
16.3.1 常量	233
16.3.2 Formatter对象	233
16.3.3 Template字符串	235
16.3.4 实用工具函数	235
16.4 struct	235
16.4.1 打包和解包函数	236
16.4.2 Struct对象	236
16.4.3 格式编码	236
16.4.4 注意	237
16.5 unicodedata	238
第17章 Python数据库访问	241
17.1 关系数据库API规范	241
17.1.1 连接	241
17.1.2 Cursor	242
17.1.3 生成查询	243
17.1.4 类型对象	244
17.1.5 错误处理	245
17.1.6 多线程	245
17.1.7 将结果映射到字典中	246
17.1.8 数据库API扩展	246
17.2 sqlite3模块	246
17.2.1 模块级函数	246
17.2.2 连接对象	248
17.2.3 游标和基本操作	250
17.3 DBM风格的数据库模块	252
17.4 shelve模块	253
第18章 文件和目录处理	254
18.1 bz2	254
18.2 filecmp	255
18.3 fnmatch	256
18.4 glob	257
18.5 gzip	257
18.6 shutil	258
18.7 tarfile	259
18.7.1 异常	261
18.7.2 示例	262
18.8 tempfile	262
18.9 zipfile	263
18.10 zlib	266
第19章 操作系统服务	268
19.1 Commands模块	268
19.2 ConfigParser、configparser模块	269
19.2.1 ConfigParser类	269
19.2.2 示例	270
19.2.3 注意	272
19.3 datetime模块	272
19.3.1 date对象	272
19.3.2 time对象	273
19.3.3 datetime对象	274
19.3.4 timedelta对象	275
19.3.5 涉及日期的数学运算	276
19.3.6 tzinfo对象	277
19.3.7 日期与时间解析	278
19.4 errno模块	278
19.4.1 POSIX错误代码	278
19.4.2 Windows错误代码	279
19.5 fcntl模块	280
19.5.1 示例	281
19.5.2 注意	282
19.6 io模块	282
19.6.1 基本I/O接口	282
19.6.2 原始I/O	282
19.6.3 缓存二进制I/O	283
19.6.4 文本I/O	285
19.6.5 open()函数	285
19.6.6 抽象基类	286
19.7 logging模块	286
19.7.1 日志记录级别	286
19.7.2 基本配置	287
19.7.3 Logger对象	288
19.7.4 处理器对象	292
19.7.5 消息格式化	295
19.7.6 各种实用工具函数	296
19.7.7 日志记录配置	296
19.7.8 性能考虑	299
19.7.9 注意	299
19.8 mmap模块	299
19.9 msvcrt模块	301
19.10 optparse模块	303
19.10.1 例子	305
19.10.2 注意	306
19.11 os模块	307
19.11.1 进程环境	307
19.11.2 文件创建与文件描述符	309
19.11.3 文件与目录	313
19.11.4 进程管理	316
19.11.5 系统配置	320
19.11.6 异常	321
19.12 os.path模块	321
19.13 signal模块	323
19.13.1 例子	325
19.13.2 注意	325
19.14 subprocess模块	326
19.14.1 例子	327
19.14.2 注意	328
19.15 time模块	328
19.16 winreg模块	331
第20章 线程与并发性	334
20.1 基本概念	334
20.2 并发编程与Python	335
20.3 multiprocessing模块	336
20.3.1 进程	336
20.3.2 进程间通信	337
20.3.3 进程池	343
20.3.4 共享数据与同步	345
20.3.5 托管对象	347
20.3.6 连接	352
20.3.7 各种实用工具函数	353
20.3.8 多进程处理的一般建议	353
20.4 threading模块	354
20.4.1 Thread对象	354
20.4.2 Timer对象	356
20.4.3 Lock对象	356
20.4.4 RLock	356
20.4.5 信号量与有边界的信号量	357
20.4.6 事件	358
20.4.7 条件变量	358
20.4.8 使用Lock	359
20.4.9 线程终止与挂起	360
20.4.10 实用工具函数	361
20.4.11 全局解释器锁定	361
20.4.12 使用线程编程	361
20.5 queue、Queue模块	362
20.6 协程与微线程	364
第21章 网络编程和套接字	365
21.1 网络编程基础	365
21.2 asynchat模块	367
21.3 asyncore模块	370
21.4 select	374
21.4.1 高级模块功能	375
21.4.2 高级异步I/O示例	375
21.4.3 异步联网的时机	381
21.5 socket	383
21.5.1 地址族	383
21.5.2 套接字类型	383
21.5.3 寻址	384
21.5.4 函数	385
21.5.5 异常	395
21.5.6 示例	395
21.5.7 注意	396
21.6 ssl	396
21.7 SocketServer	399
21.7.1 处理程序	399
21.7.2 服务器	400
21.7.3 定义自定义服务器	401
21.7.4 自定义应用服务器	403
第22章 Internet应用程序编程	404
22.1 ftplib	404
22.2 http包	407
22.2.1 http.client(httplib)	408
22.2.2 http.server(BaseHTTP-Server,CGIHTTPServer,SimpleHTTP Server)	412
22.2.3 http.cookies(Cookie)	416
22.2.4 http.cookiejar(cookielib)	418
22.3 smtplib	418
22.4 urllib包	419
22.4.1 urllib.request(urllib2)	419
22.4.2 urllib.response	423
22.4.3 urllib.parse	424
22.4.4 urllib.error	426
22.4.5 urllib.robotparser(robotparser)	427
22.4.6 注意	427
22.5 xmlrpc包	427
22.5.1 xmlrpc.client(xmlrpclib)	427
22.5.2 xmlrpc.server(Simple-XMLRPCServer,DocXMLR-PCServer)	430
第23章 Web编程	433
23.1 cgi	435
23.1.1 CGI编程建议	438
23.1.2 注意	439
23.2 cgitb	440
23.3 wsgiref	440
23.3.1 WSGI规范	440
23.3.2 wsgiref包	442
23.4 webbrowser	444
第24章 Internet数据处理和编码	445
24.1 base64	445
24.2 binascii	447
24.3 CSV	447
24.3.1 方言	449
24.3.2 示例	450
24.4 email包	450
24.4.1 解析电子邮件	450
24.4.2 编写电子邮件	453
24.4.3 注意	456
24.5 hashlib	456
24.6 hmac	456
24.7 HTMLParser	457
24.8 json	460
24.9 mimetypes	462
24.10 quopri	463
24.11 xml包	463
24.11.1 XML示例文档	464
24.11.2 xml.dom.minidom	465
24.11.3 xml.etree.ElementTree	467
24.11.4 xml.sax	473
24.11.5 xml.sax.saxutils	476
第25章 其他库模块	477
25.1 Python服务	477
25.2 字符串处理	478
25.3 操作系统模块	478
25.4 网络	478
25.5 Internet数据处理	478
25.6 国际化	479
25.7 多媒体服务	479
25.8 其他	479
第三部分 扩展与嵌入
第26章 扩展与嵌入Python	482
26.1 扩展模块	482
26.1.1 扩展模块原型	484
26.1.2 命名扩展模块	486
26.1.3 编译与打包扩展	486
26.1.4 从Python到C语言的类型转换	488
26.1.5 从C到Python的类型转换	492
26.1.6 给模块添加值	493
26.1.7 错误处理	494
26.1.8 引用计数	495
26.1.9 线程	496
26.2 嵌入Python解释器	496
26.2.1 嵌入模板	497
26.2.2 编译与链接	497
26.2.3 基本的解释器操作与设置	497
26.2.4 在C语言中访问Python	498
26.2.5 将Python对象转换为C对象	499
26.3 ctypes	500
26.3.1 加载共享库	500
26.3.2 外来函数	500
26.3.3 数据类型	501
26.3.4 调用外来函数	502
26.3.5 其他类型构造方法	503
26.3.6 实用工具函数	504
26.3.7 示例	505
26.4 高级扩展与嵌入	506
26.5 Jython和IronPython	507
附录 Python 3	508

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python参考手册（第4版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python算法教程
作者简介
版权声明
内容提要
技术评审人简介
译者简介
译者序
致谢
前言
第1章 引言
1.1 这是一本怎么样的书
1.2 为什么要读这本书
1.3 一些准备工作
1.4 本书主要内容
1.5 本章小结
1.6 如果您感兴趣
1.7 练习题
1.8 参考资料
第2章 基础知识
2.1　计算领域中一些核心理念
2.2　渐近记法
2.3　图与树的实现
2.4　请提防黑盒子
2.5　本章小结
2.6　如果您感兴趣
2.7　练习题
2.8　参考资料
第3章 计数初步
第4章 归纳、递归及归简
第5章 遍历：算法学中的万能钥匙
第6章 分解、合并、解决
第7章 贪心有理吗？请证明
第8章 复杂依赖及其记忆体化
第9章 Dijkstra及其朋友们从A到B的旅程
第10章 匹配、切割及流量
第11章 困难问题及其（有限）稀释
附录A　猛踩油门！令Python加速
附录B 一些著名问题与算法
附录C 图论基础
附录D 习题提示
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python算法教程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python高性能编程
目录

第1章 理解高性能Python 1
1.1 基本的计算机系统 1
1.1.1 计算单元 2
1.1.2 存储单元 5
1.1.3 通信层 6
1.2 将基本的元素组装到一起 8
1.3 为什么使用Python 12
第2章 通过性能分析找到瓶颈 15
2.1 高效地分析性能 16
2.2 Julia集合的介绍 17
2.3 计算完整的Julia集合 20
2.4 计时的简单方法——打印和修饰 24
2.5 用UNIX的time命令进行简单的计时 27
2.6 使用cProfile模块 28
2.7 用runsnakerun对cProfile的输出进行可视化 33
2.8 用line_profiler进行逐行分析 34
2.9 用memory_profiler诊断内存的用量 39
2.10 用heapy调查堆上的对象 45
2.11 用dowser实时画出变量的实例 47
2.12 用dis模块检查CPython字节码 49
2.13 在优化期间进行单元测试保持代码的正确性 53
2.14 确保性能分析成功的策略 56
2.15 小结 57
第3章 列表和元组 58
3.1 一个更有效的搜索 61
3.2 列表和元组 63
3.2.1 动态数组：列表 64
3.2.2 静态数组：元组 67
3.3 小结 68
第4章 字典和集合 69
4.1 字典和集合如何工作 72
4.1.1 插入和获取 73
4.1.2 删除 76
4.1.3 改变大小 76
4.1.4 散列函数和熵 76
4.2 字典和命名空间 80
4.3 小结 83
第5章 迭代器和生成器 84
5.1 无穷数列的迭代器 87
5.2 生成器的延迟估值 89
5.3 小结 93
第6章 矩阵和矢量计算 94
6.1 问题介绍 95
6.2 Python列表还不够吗 99
6.3 内存碎片 103
6.3.1 理解perf 105
6.3.2 根据perf输出做出抉择 106
6.3.3 使用numpy 107
6.4 用numpy解决扩散问题 110
6.4.1 内存分配和就地操作 113
6.4.2 选择优化点：找到需要被修正的地方 116
6.5 numexpr：让就地操作更快更简单 120
6.6 告诫故事：验证你的“优化”（scipy） 121
6.7 小结 123
第7章 编译成C 126
7.1 可能获得哪种类型的速度提升 127
7.2 JIT和AOT编译器的对比 129
7.3 为什么类型检查有助代码更快运行 129
7.4 使用C编译器 130
7.5 复习Julia集的例子 131
7.6 Cython 131
7.6.1 使用Cython编译纯Python版本 132
7.6.2 Cython注解来分析代码块 134
7.6.3 增加一些类型注解 136
7.7 Shed Skin 140
7.7.1 构建扩展模块 141
7.7.2 内存拷贝的开销 144
7.8 Cython和numpy 144
7.9 Numba 148
7.10 Pythran 149
7.11 PyPy 151
7.11.1 垃圾收集的差异 152
7.11.2 运行PyPy并安装模块 152
7.12 什么时候使用每种工具 154
7.12.1 其他即将出现的项目 155
7.12.2 一个图像处理单元（GPU）的注意点 156
7.12.3 一个对未来编译器项目的展望 157
7.13 外部函数接口 157
7.13.1 ctypes 158
7.13.2 cffi 160
7.13.3 f2py 163
7.13.4 CPython模块 166
7.14 小结 170
第8章 并发 171
8.1 异步编程介绍 172
8.2 串行爬虫 175
8.3 gevent 177
8.4 tornado 182
8.5 AsyncIO 185
8.6 数据库的例子 188
8.7 小结 191
第9章 multiprocessing模块 193
9.1 multiprocessing模块综述 196
9.2 使用蒙特卡罗方法来估算Pi 198
9.3 使用多进程和多线程来估算Pi 199
9.3.1 使用Python对象 200
9.3.2 并行系统中的随机数 207
9.3.3 使用numpy 207
9.4 寻找素数 210
9.5 使用进程间通信来验证素数 221
9.5.1 串行解决方案 225
9.5.2 Naïve Pool解决方案 225
9.5.3 Less Naïve Pool解决方案 226
9.5.4 使用Manager.Value作为一个标记 227
9.5.5 使用Redis作为一个标记 229
9.5.6 使用RawValue作为一个标记 232
9.5.7 使用mmap作为一个标记 232
9.5.8 使用mmap作为一个标记的终极效果 234
9.6 用multiprocessing来共享numpy数据 236
9.7 同步文件和变量访问 243
9.7.1 文件锁 243
9.7.2 给Value加锁 247
9.8 小结 249
第10章 集群和工作队列 251
10.1 集群的益处 252
10.2 集群的缺陷 253
10.2.1 糟糕的集群升级策略造成华尔街损失4.62亿美元 254
10.2.2 Skype的24小时全球中断 255
10.3 通用的集群设计 255
10.4 怎样启动一个集群化的解决方案 256
10.5 使用集群时避免痛苦的方法 257
10.6 三个集群化解决方案 258
10.6.1 为简单的本地集群使用Parallel Python模块 259
10.6.2 使用IPython Parallel来支持研究 260
10.7 为鲁棒生产集群的NSQ 265
10.7.1 队列 265
10.7.2 发布者/订阅者 266
10.7.3 分布式素数计算器 268
10.8 看一下其他的集群化工具 271
10.9 小结 272
第11章 使用更少的RAM 273
11.1 基础类型的对象开销高 274
11.2 理解集合中的RAM使用 278
11.3 字节和Unicode的对比 280
11.4 高效地在RAM中存储许多文本 281
11.5 使用更少RAM的窍门 290
11.6 概率数据结构 291
11.6.1 使用1字节的Morris计数器来做近似计数 292
11.6.2 K最小值 295
11.6.3 布隆过滤器 298
11.6.4 LogLog计数器 303
11.6.5 真实世界的例子 307
第12章 现场教训 311
12.1 自适应实验室（Adaptive Lab）的社交媒体分析（SoMA） 311
12.1.1 自适应实验室（Adaptive Lab）使用的Python 312
12.1.2 SoMA的设计 312
12.1.3 我们的开发方法论 313
12.1.4 维护SoMA 313
12.1.5 对工程师同行的建议 313
12.2 使用RadimRehurek.com让深度学习飞翔 314
12.2.1 最佳时机 314
12.2.2 优化方面的教训 316
12.2.3 总结 318
12.3 在Lyst.com的大规模产品化的机器学习 318
12.3.1 Python在Lyst的地位 319
12.3.2 集群设计 319
12.3.3 在快速前进的初创公司中做代码评估 319
12.3.4 构建推荐引擎 319
12.3.5 报告和监控 320
12.3.6 一些建议 320
12.4 在Smesh的大规模社交媒体分析 321
12.4.1 Python在Smesh中的角色 321
12.4.2 平台 321
12.4.3 高性能的实时字符串匹配 322
12.4.4 报告、监控、调试和部署 323
12.5 PyPy促成了成功的Web和数据处理系统 324
12.5.1 先决条件 325
12.5.2 数据库 325
12.5.3 Web应用 326
12.5.4 OCR和翻译 326
12.5.5 任务分发和工作者 327
12.5.6 结论 327
12.6 在Lanyrd.com中的任务队列 327
12.6.1 Python在Lanyrd中的角色 328
12.6.2 使任务队列变高性能 328
12.6.3 报告、监控、调试和部署 328
12.6.4 对开发者同行的建议 329
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python高性能编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>像计算机科学家一样思考Python (第2版)
第1章　程序之道　1
1.1　什么是程序　1
1.2　运行Python　2
1.3　第一个程序　3
1.4　算术操作符　3
1.5　值和类型　4
1.6　形式语言和自然语言　5
1.7　调试　6
1.8　术语表　7
1.9　练习　8
第2章　变量、表达式和语句　9
2.1　赋值语句　9
2.2　变量名称　9
2.3　表达式和语句　10
2.4　脚本模式　11
2.5　操作顺序　12
2.6　字符串操作　13
2.7　注释　13
2.8　调试　14
2.9　术语表　15
2.10　练习　16
第3章　函数　17
3.1　函数调用　17
3.2　数学函数　18
3.3　组合　19
3.4　添加新函数　19
3.5　定义和使用　21
3.6　执行流程　21
3.7　形参和实参　22
3.8　变量和形参是局部的　23
3.9　栈图　23
3.10　有返回值函数和无返回值函数　24
3.11　为什么要有函数　25
3.12　调试　26
3.13　术语表　26
3.14　练习　27
第4章　案例研究：接口设计　30
4.1　turtle模块　30
4.2　简单重复　31
4.3　练习　32
4.4　封装　33
4.5　泛化　34
4.6　接口设计　34
4.7　重构　35
4.8　一个开发计划　36
4.9　文档字符串　37
4.10　调试　38
4.11　术语表　38
4.12　练习　39
第5章　条件和递归　41
5.1　向下取整除法操作符和求模操作符　41
5.2　布尔表达式　42
5.3　逻辑操作符　42
5.4　条件执行　43
5.5　选择执行　43
5.6　条件链　44
5.7　嵌套条件　44
5.8　递归　45
5.9　递归函数的栈图　46
5.10　无限递归　47
5.11　键盘输入　47
5.12　调试　48
5.13　术语表　49
5.14　练习　50
第6章　有返回值的函数　53
6.1　返回值　53
6.2　增量开发　54
6.3　组合　56
6.4　布尔函数　57
6.5　再谈递归　58
6.6　坚持信念　59
6.7　另一个示例　60
6.8　检查类型　60
6.9　调试　61
6.10　术语表　63
6.11　练习　63
第7章　迭代　65
7.1　重新赋值　65
7.2　更新变量　66
7.3　while语句　66
7.4　break语句　68
7.5　平方根　68
7.6　算法　70
7.7　调试　70
7.8　术语表　71
7.9　练习　71
第8章　字符串　73
8.1　字符串是一个序列　73
8.2　len　74
8.3　使用for循环进行遍历　74
8.4　字符串切片　75
8.5　字符串是不可变的　76
8.6　搜索　77
8.7　循环和计数　77
8.8　字符串方法　78
8.9　操作符in　79
8.10　字符串比较　79
8.11　调试　80
8.12　术语表　82
8.13　练习　82
第9章　案例分析：文字游戏　85
9.1　读取单词列表　85
9.2　练习　86
9.3　搜索　87
9.4　使用下标循环　88
9.5　调试　90
9.6　术语表　90
9.7　练习　91
第10章　列表　93
10.1　列表是一个序列　93
10.2　列表是可变的　94
10.3　遍历一个列表　95
10.4　列表操作　95
10.5　列表切片　96
10.6　列表方法　96
10.7　映射、过滤和化简　97
10.8　删除元素　98
10.9　列表和字符串　99
10.10　对象和值　100
10.11　别名　101
10.12　列表参数　102
10.13　调试　103
10.14　术语表　104
10.15　练习　105
第11章　字典　108
11.1　字典是一种映射　108
11.2　使用字典作为计数器集合　110
11.3　循环和字典　111
11.4　反向查找　111
11.5　字典和列表　112
11.6　备忘　114
11.7　全局变量　115
11.8　调试　117
11.9　术语表　118
11.10　练习　119
第12章　元组　121
12.1　元组是不可变的　121
12.2　元组赋值　122
12.3　作为返回值的元组　123
12.4　可变长参数元组　124
12.5　列表和元组　124
12.6　字典和元组　126
12.7　序列的序列　127
12.8　调试　128
12.9　术语表　129
12.10　练习　129
第13章　案例研究：选择数据结构　132
13.1　单词频率分析　132
13.2　随机数　133
13.3　单词直方图　134
13.4　最常用的单词　135
13.5　可选形参　136
13.6　字典减法　137
13.7　随机单词　138
13.8　马尔可夫分析　138
13.9　数据结构　140
13.10　调试　141
13.11　术语表　142
13.12　练习　143
第14章　文件　144
14.1　持久化　144
14.2　读和写　144
14.3　格式操作符　145
14.4　文件名和路径　146
14.5　捕获异常　147
14.6　数据库　148
14.7　封存　149
14.8　管道　150
14.9　编写模块　151
14.10　调试　152
14.11　术语表　152
14.12　练习　153
第15章　类和对象　155
15.1　用户定义类型　155
15.2　属性　156
15.3　矩形　157
15.4　作为返回值的实例　158
15.5　对象是可变的　159
15.6　复制　159
15.7　调试　161
15.8　术语表　161
15.9　练习　162
第16章　类和函数　163
16.1　时间　163
16.2　纯函数　164
16.3　修改器　165
16.4　原型和计划　166
16.5　调试　167
16.6　术语表　168
16.7　练习　168
第17章　类和方法　170
17.1　面向对象特性　170
17.2　打印对象　171
17.3　另一个示例　172
17.4　一个更复杂的示例　173
17.5　init方法　173
17.6　_ _str_ _方法　174
17.7　操作符重载　175
17.8　基于类型的分发　175
17.9　多态　177
17.10　接口和实现　177
17.11　调试　178
17.12　术语表　179
17.13　练习　179
第18章　继承　181
18.1　卡片对象　181
18.2　类属性　182
18.3　对比卡牌　183
18.4　牌组　184
18.5　打印牌组　185
18.6　添加、删除、洗牌和排序　185
18.7　继承　186
18.8　类图　188
18.9　数据封装　189
18.10　调试　190
18.11　术语表　191
18.12　练习　191
第19章　Python拾珍　194
19.1　条件表达式　194
19.2　列表理解　195
19.3　生成器表达式　196
19.4　any和all　197
19.5　集合　197
19.6　计数器　199
19.7　defaultdict　200
19.8　命名元组　201
19.9　收集关键词参数　202
19.10　术语表　203
19.11　练习　203
第20章　调试　205
20.1　语法错误　205
20.2　运行时错误　207
20.2.1　我的程序什么都不做　207
20.2.2　我的程序卡死了　207
20.2.3　无限循环　208
20.2.4　无限递归　208
20.2.5　执行流程　208
20.2.6　当我运行程序，会得到一个异常　209
20.2.7　我添加了太多print语句，被输出淹没了　210
20.3　语义错误　210
20.3.1　我的程序运行不正确　211
20.3.2　我有一个巨大而复杂的表达式，而它和我预料的不同　211
20.3.3　我有一个函数，返回值和预期不同　212
20.3.4　我真的真的卡住了，我需要帮助　212
20.3.5　不行，我真的需要帮助　212
第21章　算法分析　214
21.1　增长量级　215
21.2　Python基本操作的分析　217
21.3　搜索算法的分析　218
21.4　散列表　219
21.5　术语表　223
译后记　224
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>像计算机科学家一样思考Python (第2版)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>python学习手册（原书第5版）
上册
前言 ........................................1
第一部分 使用入门
第1章 问答环节 ........................................ 21
人们为何使用Python ........................................21
软件质量 ........................................22
开发者效率........................................23
Python是一门“脚本语言”吗 ........................................23
好吧，Python的缺点是什么 ........................................25
如今谁在使用Python ........................................25
其他的Python设计权衡：一些难以把握的方面 ........................................26
使用Python可以做些什么 ........................................28
系统编程 ........................................28
图形用户界面（GUI） ........................................29
Internet脚本 ........................................29
组件集成 ........................................30
数据库编程........................................30
快速原型 ........................................31
数值计算和科学计算编程 ........................................31
更多内容：游戏、图像、数据挖掘、机器人、Excel等 ................................31
Python如何开发并获得支持 ........................................32
开源的权衡........................................33
Python有哪些技术上的优点 ........................................33
面向对象和函数式 ........................................33
免费 ........................................34
可移植 ........................................34
功能强大 ........................................35
可混合 ........................................36
相对简单易用 ........................................36
相对简单易学 ........................................37
以Monty Python命名 ........................................37
Python和其他语言比较起来怎么样 ........................................38
本章小结 ........................................39
本章习题 ........................................39
习题解答 ........................................40
Python是工程，不是艺术 ........................................41
第2章 Python如何运行程序 ........................................ 43
Python解释器简介 ........................................43
程序执行 ........................................45
程序员的视角 ........................................45
Python的视角 ........................................46
执行模型的变体 ........................................48
Python的各种实现 ........................................49
执行优化工具 ........................................52
冻结二进制文件 ........................................53
未来的可能性 ........................................54
本章小结 ........................................55
本章习题 ........................................55
习题解答 ........................................56
第3章 你应如何运行程序 ........................................ 57
交互式命令行模式 ........................................57
开始一个交互式会话 ........................................57
Windows平台上的交互式命令行在哪里 ........................................59
系统路径 ........................................59
Python 3.3中的新Windows选项：PATH和启动器 ........................................60
运行的位置：代码目录 ........................................61
不需要输入的内容：提示符和注释 ........................................62
交互式地运行代码 ........................................63
为什么要使用交互式命令行模式 ........................................64
使用注意：交互命令行模式 ........................................65
系统命令行和文件 ........................................67
第一段脚本........................................68
使用命令行运行文件 ........................................69
不同的命令行使用方式 ........................................70
使用注意：命令行和文件 ........................................71
UNIX风格可执行脚本：#! ........................................72
UNIX脚本基础 ........................................72
UNIX env查找技巧 ........................................73
Python 3.3 Windows启动器：Windows也有#!了 ........................................73
点击文件图标 ........................................75
图标点击基础知识 ........................................75
在Windows上点击图标 ........................................76
Windows上输入的技巧 ........................................77
其他图标点击的限制 ........................................79
模块导入和重载 ........................................79
导入和重载基础知识 ........................................80
模块的宏观视角：属性 ........................................82
使用注意：import和reload ........................................85
使用exec运行模块文件 ........................................85
IDLE用户界面 ........................................86
IDLE启动细节 ........................................87
IDLE基础用法 ........................................88
IDLE功能特性 ........................................89
高级IDLE工具 ........................................90
使用注意：IDLE ........................................90
其他IDE ........................................92
其他启动选项 ........................................93
嵌入式调用........................................93
冻结二进制可执行文件 ........................................94
文本编辑器启动方式 ........................................94
其他的启动方式 ........................................95
未来的可能........................................95
应该选用哪种方式 ........................................95
调试Python代码 ........................................96
本章小结 ........................................97
本章习题 ........................................97
习题解答 ........................................98
第一部分练习题 ........................................99
第二部分 类型和运算
第4章 介绍Python对象类型 ........................................ 105
Python知识结构 ........................................105
为什么要使用内置类型 ........................................106
Python核心数据类型 ........................................107
数字 ........................................108
字符串 ........................................ 110
序列操作 ........................................ 110
不可变性 ........................................ 112
特定类型的方法 ........................................ 113
寻求帮助 ........................................ 115
字符串编程的其他方式 ........................................ 116
Unicode字符串 ........................................ 117
模式匹配 ........................................ 119
列表 ........................................120
序列操作 ........................................120
特定的操作........................................121
边界检查 ........................................121
嵌套 ........................................122
推导 ........................................122
字典 ........................................125
映射操作 ........................................125
重访嵌套 ........................................126
不存在的键：if 测试 ........................................128
键的排序：for 循环 ........................................129
迭代和优化........................................131
元组 ........................................132
为什么要使用元组 ........................................133
文件 ........................................133
二进制字节文件 ........................................134
Unicode文本文件 ........................................135
其他类文件工具 ........................................137
其他核心类型 ........................................137
如何破坏代码的灵活性 ........................................139
用户定义的类 ........................................140
剩余的内容........................................141
本章小结 ........................................141
本章习题 ........................................141
习题解答 ........................................142
第5章 数值类型 ........................................ 143
本章小结 ........................................182
本章习题 ........................................182
习题解答 ........................................182
第6章 动态类型 ........................................ 184
本章小结 ........................................194
本章习题 ........................................194
习题解答 ........................................195
第7章 字符串基础 ........................................ 196
本章小结 ........................................242
本章习题 ........................................243
习题解答 ........................................243
第8章 列表与字典 ........................................ 245
本章小结 ........................................277
本章习题 ........................................277
习题解答 ........................................277
第9章 元组、文件与其他核心类型 ............................... 279
本章小结 ........................................314
本章习题 ........................................314
习题解答 ........................................315
第二部分练习题 ........................................315
第三部分 语句和语法
第10章 Python语句简介........................................ 321
本章小结 ........................................338
本章习题 ........................................338
习题解答 ........................................338
第11章 赋值、表达式和打印 ....................................... 340
本章小结 ........................................370
本章习题 ........................................370
习题解答 ........................................370
第12章 if测试和语法规则 ........................................ 372
本章小结 ........................................386
本章习题 ........................................386
习题解答 ........................................386
第13章 while循环和for循环 ........................................ 387
本章小结 ........................................414
本章习题 ........................................414
习题解答 ........................................414
第14章 迭代和推导 ........................................ 416
本章小结 ........................................442
本章习题 ........................................442
习题解答 ........................................442
第15章 文档 ........................................ 444
本章小结 ........................................465
本章习题 ........................................466
习题解答 ........................................466
第三部分练习题 ........................................467
第四部分 函数和生成器
第16章 函数基础 ........................................ 473
本章小结 ........................................483
本章习题 ........................................483
习题解答 ........................................483
第17章 作用域 ........................................ 485
本章小结 ........................................518
本章习题 ........................................518
习题解答 ........................................520
第18章 参数 ........................................ 521
本章小结 ........................................548
本章习题 ........................................548
习题解答 ........................................549
第19章 函数的高级话题 ........................................ 550
本章小结 ........................................575
本章习题 ........................................575
习题解答 ........................................575
第20章 推导和生成 ........................................ 577
本章小结 ........................................621
本章习题 ........................................621
习题解答 ........................................621
第21章 基准测试 ........................................ 623
计时迭代可选方案 ........................................623
本章小结 ........................................656
本章习题 ........................................656
习题解答 ........................................656
第四部分练习题 ........................................657
第五部分 模块和包
第22章 模块：宏伟蓝图 ........................................ 663
本章小结 ........................................678
本章习题 ........................................679
习题解答 ........................................679
第23章 模块代码编写基础 ........................................ 680
本章小结 ........................................696
本章习题 ........................................696
习题解答 ........................................696
第24章 模块包 ........................................ 698
本章小结 ........................................732
本章习题 ........................................732
习题解答 ........................................733
第25章 高级模块话题 ........................................ 734
本章小结 ........................................765
本章习题 ........................................766
习题解答 ........................................766
第五部分练习题 ........................................766
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>python学习手册（原书第5版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python编程初学者指南
第1章 启程：Game Over程序
1.1 剖析Game Over程序
1.2 Python简介
1.2.1 Python易于使用
1.2.2 Python功能强大
1.2.3 Python是面向对象的
1.2.4 Python是一种“胶水”语言
1.2.5 Python所不在
1.2.6 Python有一个强大的社区
1.2.7 Python是免费的、开源的
1.3 在Windows上设置Python
1.4 在其他操作系统上设置Python
1.5 IDLE简介
1.5.1 通过交互模式进行编程
1.5.2 通过脚本模式进行编程
1.6 回到Game Over程序
1.6.1 使用注释
1.6.2 使用空行
1.6.3 打印字符串
1.6.4 等待用户
1.7 小结
第2章 类型、变量以及简单I/O：Useless Trivia程序
2.1 Useless Trivia程序简介
2.2 使用引号和字符串
2.2.1 Game Over 2.0程序简介
2.2.2 在字符串内部使用引号
2.2.3 打印输出多个值
2.2.4 为print指定结束字符串
2.2.5 创建三重引号字符串
2.3 使用转义序列和字符串
2.3.1 Fancy Credits程序简介
2.3.2 前进一个制表符位
2.3.3 打印反斜杠
2.3.4 插入换行符
2.3.5 插入引号
2.3.6 触发系统蜂鸣器
2.4 字符串的连接和重复
2.4.1 Silly Strings程序简介
2.4.2 字符串的连接
2.4.3 使用行继续符
2.4.4 字符串的重复
2.5 使用数字
2.5.1 Word Problems程序简介
2.5.2 理解数值类型
2.5.3 使用数学运算符
2.6 理解变量
2.6.1 Greeter程序简介
2.6.2 创建变量
2.6.3 使用变量
2.6.4 变量命名
2.7 获取输入
2.7.1 Personal Greeter程序简介
2.7.2 使用input()函数
2.8 使用字符串方法
2.8.1 Quotation Manipulation程序简介
……
第3章 条件分支、while循环以及程序策划：Guess My Number游戏
第4章 for循环、字符串以及元组：Word Jumble游戏 80
第5章 列表和字典：Hangman游戏
第6章 函数：Tic-Tac-Toe游戏
第7章 文件和异常：Trivia Challenge游戏
第8章 软件对象：Critter Caretaker程序
第9章 面向对象编程：Blackjack游戏
第10章 GUI开发：Mad Lib程序
第11章 图形图像：Pizza Panic游戏
第12章 声音、动画以及程序开发：Astrocrash游戏
附录A 配套网站
附录B livewires参考
收起全部
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python编程初学者指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python爬虫开发与项目实战
前言
基础篇
第1章　回顾Python编程	2
1.1　安装Python	2
1.1.1　Windows上安装Python	2
1.1.2　Ubuntu上的Python	3
1.2　搭建开发环境	4
1.2.1　Eclipse+PyDev	4
1.2.2　PyCharm	10
1.3　IO编程	11
1.3.1　文件读写	11
1.3.2　操作文件和目录	14
1.3.3　序列化操作	15
1.4　进程和线程	16
1.4.1　多进程	16
1.4.2　多线程	22
1.4.3　协程	25
1.4.4　分布式进程	27
1.5　网络编程	32
1.5.1　TCP编程	33
1.5.2　UDP编程	35
1.6　小结	36
第2章　Web前端基础	37
2.1　W3C标准	37
2.1.1　HTML	37
2.1.2　CSS	47
2.1.3　JavaScript	51
2.1.4　XPath	56
2.1.5　JSON	61
2.2　HTTP标准	61
2.2.1　HTTP请求过程	62
2.2.2　HTTP状态码含义	62
2.2.3　HTTP头部信息	63
2.2.4　Cookie状态管理	66
2.2.5　HTTP请求方式	66
2.3　小结	68
第3章　初识网络爬虫	69
3.1　网络爬虫概述	69
3.1.1　网络爬虫及其应用	69
3.1.2　网络爬虫结构	71
3.2　HTTP请求的Python实现	72
3.2.1　urllib2/urllib实现	72
3.2.2　httplib/urllib实现	76
3.2.3　更人性化的Requests	77
3.3　小结	82
第4章　HTML解析大法	83
4.1　初识Firebug	83
4.1.1　安装Firebug	84
4.1.2　强大的功能	84
4.2　正则表达式	95
4.2.1　基本语法与使用	96
4.2.2　Python与正则	102
4.3　强大的BeautifulSoup	108
4.3.1　安装BeautifulSoup	108
4.3.2　BeautifulSoup的使用	109
4.3.3　lxml的XPath解析	124
4.4　小结	126
第5章　数据存储（无数据库版）	127
5.1　HTML正文抽取	127
5.1.1　存储为JSON	127
5.1.2　存储为CSV	132
5.2　多媒体文件抽取	136
5.3　Email提醒	137
5.4　小结	138
第6章　实战项目：基础爬虫	139
6.1　基础爬虫架构及运行流程	140
6.2　URL管理器	141
6.3　HTML下载器	142
6.4　HTML解析器	143
6.5　数据存储器	145
6.6　爬虫调度器	146
6.7　小结	147
第7章　实战项目：简单分布式爬虫	148
7.1　简单分布式爬虫结构	148
7.2　控制节点	149
7.2.1　URL管理器	149
7.2.2　数据存储器	151
7.2.3　控制调度器	153
7.3　爬虫节点	155
7.3.1　HTML下载器	155
7.3.2　HTML解析器	156
7.3.3　爬虫调度器	157
7.4　小结	159
中级篇
第8章　数据存储（数据库版）	162
8.1　SQLite	162
8.1.1　安装SQLite	162
8.1.2　SQL语法	163
8.1.3　SQLite增删改查	168
8.1.4　SQLite事务	170
8.1.5　Python操作SQLite	171
8.2　MySQL	174
8.2.1　安装MySQL	174
8.2.2　MySQL基础	177
8.2.3　Python操作MySQL	181
8.3　更适合爬虫的MongoDB	183
8.3.1　安装MongoDB	184
8.3.2　MongoDB基础	187
8.3.3　Python操作MongoDB	194
8.4　小结	196
第9章　动态网站抓取	197
9.1　Ajax和动态HTML	197
9.2　动态爬虫1：爬取影评信息	198
9.3　PhantomJS	207
9.3.1　安装PhantomJS	207
9.3.2　快速入门	208
9.3.3　屏幕捕获	211
9.3.4　网络监控	213
9.3.5　页面自动化	214
9.3.6　常用模块和方法	215
9.4　Selenium	218
9.4.1　安装Selenium	219
9.4.2　快速入门	220
9.4.3　元素选取	221
9.4.4　页面操作	222
9.4.5　等待	225
9.5　动态爬虫2：爬取去哪网	227
9.6　小结	230
第10章　Web端协议分析	231
10.1　网页登录POST分析	231
10.1.1　隐藏表单分析	231
10.1.2　加密数据分析	234
10.2　验证码问题	246
10.2.1　IP代理	246
10.2.2　Cookie登录	249
10.2.3　传统验证码识别	250
10.2.4　人工打码	251
10.2.5　滑动验证码	252
10.3　www]m]wap	252
10.4　小结	254
第11章　终端协议分析	255
11.1　PC客户端抓包分析	255
11.1.1　HTTP Analyzer简介	255
11.1.2　虾米音乐PC端API实战分析	257
11.2　App抓包分析	259
11.2.1　Wireshark简介	259
11.2.2　酷我听书App端API实战分析	266
11.3　API爬虫：爬取mp3资源信息	268
11.4　小结	272
第12章　初窥Scrapy爬虫框架	273
12.1　Scrapy爬虫架构	273
12.2　安装Scrapy	275
12.3　创建cnblogs项目	276
12.4　创建爬虫模块	277
12.5　选择器	278
12.5.1　Selector的用法	278
12.5.2　HTML解析实现	280
12.6　命令行工具	282
12.7　定义Item	284
12.8　翻页功能	286
12.9　构建Item Pipeline	287
12.9.1　定制Item Pipeline	287
12.9.2　激活Item Pipeline	288
12.10　内置数据存储	288
12.11　内置图片和文件下载方式	289
12.12　启动爬虫	294
12.13　强化爬虫	297
12.13.1　调试方法	297
12.13.2　异常	299
12.13.3　控制运行状态	300
12.14　小结	301
第13章　深入Scrapy爬虫框架	302
13.1　再看Spider	302
13.2　Item Loader	308
13.2.1　Item与Item Loader	308
13.2.2　输入与输出处理器	309
13.2.3　Item Loader Context	310
13.2.4　重用和扩展Item Loader	311
13.2.5　内置的处理器	312
13.3　再看Item Pipeline	314
13.4　请求与响应	315
13.4.1　Request对象	315
13.4.2　Response对象	318
13.5　下载器中间件	320
13.5.1　激活下载器中间件	320
13.5.2　编写下载器中间件	321
13.6　Spider中间件	324
13.6.1　激活Spider中间件	324
13.6.2　编写Spider中间件	325
13.7　扩展	327
13.7.1　配置扩展	327
13.7.2　定制扩展	328
13.7.3　内置扩展	332
13.8　突破反爬虫	332
13.8.1　UserAgent池	333
13.8.2　禁用Cookies	333
13.8.3　设置下载延时与自动限速	333
13.8.4　代理IP池	334
13.8.5　Tor代理	334
13.8.6　分布式下载器:Crawlera	337
13.8.7　Google cache	338
13.9　小结	339
第14章　实战项目：Scrapy爬虫	340
14.1　创建知乎爬虫	340
14.2　定义Item	342
14.3　创建爬虫模块	343
14.3.1　登录知乎	343
14.3.2　解析功能	345
14.4　Pipeline	351
14.5　优化措施	352
14.6　部署爬虫	353
14.6.1　Scrapyd	354
14.6.2　Scrapyd-client	356
14.7　小结	357
深入篇
第15章　增量式爬虫	360
15.1　去重方案	360
15.2　BloomFilter算法	361
15.2.1　BloomFilter原理	361
15.2.2　Python实现BloomFilter	363
15.3　Scrapy和BloomFilter	364
15.4　小结	366
第16章　分布式爬虫与Scrapy	367
16.1　Redis基础	367
16.1.1　Redis简介	367
16.1.2　Redis的安装和配置	368
16.1.3　Redis数据类型与操作	372
16.2　Python和Redis	375
16.2.1　Python操作Redis	375
16.2.2　Scrapy集成Redis	384
16.3　MongoDB集群	385
16.4　小结	390
第17章　实战项目：Scrapy分布式爬虫	391
17.1　创建云起书院爬虫	391
17.2　定义Item	393
17.3　编写爬虫模块	394
17.4　Pipeline	395
17.5　应对反爬虫机制	397
17.6　去重优化	400
17.7　小结	401
第18章　人性化PySpider爬虫框架	403
18.1　PySpider与Scrapy	403
18.2　安装PySpider	404
18.3　创建豆瓣爬虫	405
18.4　选择器	409
18.4.1　PyQuery的用法	409
18.4.2　解析数据	411
18.5　Ajax和HTTP请求	415
18.5.1　Ajax爬取	415
18.5.2　HTTP请求实现	417
18.6　PySpider和PhantomJS	417
18.6.1　使用PhantomJS	418
18.6.2　运行JavaScript	420
18.7　数据存储	420
18.8　PySpider爬虫架构	422
18.9　小结	423
↑折 叠
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python爬虫开发与项目实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入理解 Flask
第1章 入门 1
使用Git进行版本控制 1
安装Git 1
Git基础 2
使用pip管理Python包 4
在Windows上安装pip 4
在Mac OS X和Linux上安装Python包管理器pip 5
pip基本操作 6
用virtualenv的沙盒管理依赖 7
virtualenv基础 7
开始我们的项目 8
使用Flask Script 9
总结 10
第2章 使用SQLAlchemy创建数据模型 11
设置SQLAlchemy 11
Python安装包 12
Flask SQLAlchemy 12
我们的第1个数据模型 13
创建user表 15
CRUD 16
新增数据 16
读取数据 16
修改数据 19
删除数据 19
数据模型之间的关联 20
一对多 20
多对多 23
SQLAlchemy会话对象的方便之处 25
使用Alembic进行数据库迁移 26
总结 28
第3章 通过模板创建视图 29
Jinja的语法 29
过滤器 30
注释 34
if语句 34
循环 35
宏 36
Flask特有的变量和函数 37
创建视图 38
视图函数 38
编写和继承模板 41
Flask WTForms 45
WTForms基础 46
自定义检验器 48
发布评论 48
总结 51
第4章 使用蓝图创建控制器 52
请求的构建和销毁，以及全局变量 52
错误页面 53
使用类描述视图 53
方法视图 55
蓝图 55
总结 57
第5章 进阶的应用结构 58
模块项目 58
重构代码 59
应用的工厂模式 62
总结 64
第6章 保护应用安全 65
准备工作 65
修改用户模型 65
创建表单 67
创建视图 71
社交网络登录 76
使用会话 84
使用Flask Login 87
用户角色 90
总结 95
第7章 在Flask中使用NoSQL数据库 96
NoSQL数据库的种类 96
键值数据库 97
文档数据库 97
列式数据库 98
基于图的数据库 100
关系型数据库与NoSQL的比较 101
关系型数据库的优势 102
NoSQL数据库的优势 103
在什么情况下用什么数据库 104
在Flask中使用MongoDB 105
安装MongoDB 106
配置MongoEngine 106
定义文档 107
CRUD 112
NoSQL中的关联关系 117
利用NoSQL的强大能力 120
总结 126
第8章 构建RESTful API 127
REST是什么 127
构建RESTful Flask API 130
GET请求 131
格式化输出 132
请求中的参数 135
POST请求 138
身份认证 140
PUT请求 143
DELETE请求 146
总结 147
第9章 使用Celery编写异步任务 148
Celery是什么 148
配置Celery和RabbitMQ 150
在Celery中创建任务 151
运行Celery任务 154
Celery工作流 155
监控Celery 160
在Flower中通过网页进行监控 161
创建一个提醒应用 161
生成每周摘要 163
总结 167
第10章 有用的Flask扩展 168
Flask Script 168
Flask Debug Toolbar 170
Flask Cache 173
缓存函数和视图 174
缓存带参数的函数 175
缓存带有查询参数的路径 177
使用Redis作为缓存后端 177
使用memcached 作为缓存后端 178
Flask Assets 178
Flask Admin 181
编写基础管理页面 182
编写数据库管理页面 184
增强文章管理功能 185
编写文件系统管理页面 187
保护Flask Admin的安全 188
Flask Mail 189
总结 190
第11章 构建你自己的扩展 192
编写一个YouTube Flask扩展 192
创建Python包 196
通过Flask扩展修改响应数据 198
总结 200
第12章 测试Flask应用 201
什么是单元测试 201
怎样进行测试 202
对应用进行单元测试 202
测试路由函数 203
用户界面测试 208
测试覆盖率 213
测试驱动的开发 216
总结 218
第13章 部署Flask应用 219
部署在你自己的服务器上 219
使用fabric把代码推送到服务器 220
使用supervisor运行你的Web服务器 222
Gevent 224
Tornado 225
Nginx和uWSGI 226
Apache和uWSGI 229
部署在Heroku上 230
使用Heroku Postgres 231
在Heroku中使用Celery 232
在AWS上部署应用 233
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入理解 Flask
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python高手之路
第1章　项目开始 1
1．1 Python版本 1
1．2 项目结构 2
1．3 版本编号 3
1．4 编码风格与自动检查 5
第2章　模块和库 9
2．1 导入系统 9
2．2 标准库 12
2．3 外部库 14
2．4 框架 16
2．5 Doug Hellmann访谈 17
2．6 管理API变化 22
2．7 Christophe de Vienne访谈 25
第3章　文档 29
3．1 Sphinx和reST入门 30
3．2 Sphinx模块 31
3．3 扩展Sphinx 34
第4章　分发 37
4．1 简史 37
4．2 使用pbr打包 39
4．3 Wheel格式 41
4．4 包的安装 42
4．5 和世界分享你的成果 43
4．6 Nick Coghlan访谈 47
4．7 扩展点 49
4．7．1 可视化的入口点 50
4．7．2 使用控制台脚本 51
4．7．3 使用插件和驱动程序 53
第5章　虚拟环境 57
第6章　单元测试 63
6．1 基础知识 63
6．2 fixture 70
6．3 模拟（mocking） 71
6．4 场景测试 75
6．5 测试序列与并行 78
6．6 测试覆盖 82
6．7 使用虚拟环境和tox 84
6．8 测试策略 88
6．9 Robert Collins访谈 89
第7章　方法和装饰器 93
7．1 创建装饰器 93
7．2 Python中方法的运行机制 98
7．3 静态方法 100
7．4 类方法 101
7．5 抽象方法 102
7．6 混合使用静态方法、类方法和抽象方法 104
7．7 关于super的真相 106
第8章　函数式编程 111
8．1 生成器 112
8．2 列表解析 116
8．3 函数式，函数的，函数化 117
第9章　抽象语法树 125
9．1 Hy 128
9．2 Paul Tagliamonte访谈 130
第10章　性能与优化 135
10．1 数据结构 135
10．2 性能分析 137
10．3 有序列表和二分查找 142
10．4 namedtuple和slots 143
10．5 memoization 148
10．6 PyPy 150
10．7 通过缓冲区协议实现零复制 151
10．8 Victor Stinner访谈 157
第11章　扩展与架构 161
11．1 多线程笔记 161
11．2 多进程与多线程 163
11．3 异步和事件驱动架构 165
11．4 面向服务架构 168
第12章　RDBMS和ORM 171
12．1 用Flask和PostgreSQL流化数据 174
12．2 Dimitri Fontaine访谈 179
第13章　Python 3支持策略 187
13．1 语言和标准库 188
13．2 外部库 191
13．3 使用six 191
第14章　少即是多 195
14．1 单分发器 195
14．2 上下文管理器 199
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python高手之路
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>数据结构与算法：python语言实现
出版者的话
译者序
前言
致谢
作者简介
第1章　Python入门
1.1　Python概述
1.1.1　Python解释器
1.1.2　Python程序预览
1.2　Python对象
1.2.1　标识符、对象和赋值语句
1.2.2　创建和使用对象
1.2.3　Python的内置类
1.3　表达式、运算符和优先级
1.4　控制流程
1.4.1　条件语句
1.4.2　循环语句
1.5　函数
1.5.1　信息传递
1.5.2　Python的内置函数
1.6　简单的输入和输出
1.6.1　控制台输入和输出
1.6.2　文件
1.7　异常处理
1.7.1　抛出异常
1.7.2　捕捉异常
1.8　迭代器和生成器
1.9　Python的其他便利特点
1.9.1　条件表达式
1.9.2　解析语法
1.9.3　序列类型的打包和解包
1.10　作用域和命名空间
1.11　模块和import语句
1.12　练习
扩展阅读
第2章　面向对象编程
2.1　目标、原则和模式
2.1.1　面向对象的设计目标
2.1.2　面向对象的设计原则
2.1.3　设计模式
2.2　软件开发
2.2.1　设计
2.2.2　伪代码
2.2.3　编码风格和文档
2.2.4　测试和调试
2.3　类定义
2.3.1　例子：CreditCard类
2.3.2　运算符重载和Python的特殊方法
2.3.3　例子：多维向量类
2.3.4　迭代器
2.3.5　例子：Range类
2.4　继承
2.4.1　扩展CreditCard类
2.4.2　数列的层次图
2.4.3　抽象基类
2.5　命名空间和面向对象
2.5.1　实例和类命名空间
2.5.2　名称解析和动态调度
2.6　深拷贝和浅拷贝
2.7　练习
扩展阅读
第3章　算法分析
3.1　实验研究
3.2　本书使用的7种函数
3.2.1　常数函数
3.2.2　对数函数
3.2.3　线性函数
3.2.4　n log n函数
3.2.5　二次函数
3.2.6　三次函数和其他多项式
3.2.7　指数函数
3.2.8　比较增长率
3.3　渐近分析
3.3.1　大O符号
3.3.2　比较分析
3.3.3　算法分析示例
3.4　简单的证明技术
3.4.1　示例
3.4.2　反证法
3.4.3　归纳和循环不变量
3.5　练习
扩展阅读
第4章　递归
4.1　说明性的例子
4.1.1　阶乘函数
4.1.2　绘制英式标尺
4.1.3　二分查找
4.1.4　文件系统
4.2　分析递归算法
4.3　递归算法的不足
4.4　递归的其他例子
4.4.1　线性递归
4.4.2　二路递归
4.4.3　多重递归
4.5　设计递归算法
4.6　消除尾递归
4.7　练习
扩展阅读
第5章　基于数组的序列
5.1　Python序列类型
5.2　低层次数组
5.2.1　引用数组
5.2.2　Python中的紧凑数组
5.3　动态数组和摊销
5.3.1　实现动态数组
5.3.2　动态数组的摊销分析
5.3.3　Python列表类
5.4　Python序列类型的效率
5.4.1　Python的列表和元组类
5.4.2　Python的字符串类
5.5　使用基于数组的序列
5.5.1　为游戏存储高分
5.5.2　为序列排序
5.5.3　简单密码技术
5.6　多维数据集
5.7　练习
扩展阅读
第6章　栈、队列和双端队列
6.1　栈
6.1.1　栈的抽象数据类型
6.1.2　简单的基于数组的栈实现
6.1.3　使用栈实现数据的逆置
6.1.4　括号和HTML标记匹配
6.2　队列
6.2.1　队列的抽象数据类型
6.2.2　基于数组的队列实现
6.3　双端队列
6.3.1　双端队列的抽象数据类型
6.3.2　使用环形数组实现双端队列
6.3.3　Python collections模块中的双端队列
6.4　练习
扩展阅读
第7章　链表
7.1　单向链表
7.1.1　用单向链表实现栈
7.1.2　用单向链表实现队列
7.2　循环链表
7.2.1　轮转调度
7.2.2　用循环链表实现队列
7.3　双向链表
7.3.1　双向链表的基本实现
7.3.2　用双向链表实现双端队列
7.4　位置列表的抽象数据类型
7.4.1　含位置信息的列表抽象数据类型
7.4.2　双向链表实现
7.5　位置列表的排序
7.6　案例研究：维护访问频率
7.6.1　使用有序表
7.6.2　启发式动态调整列表
7.7　基于链接的序列与基于数组的序列
7.8　练习
扩展阅读
第8章　树
8.1　树的基本概念
8.1.1　树的定义和属性
8.1.2　树的抽象数据类型
8.1.3　计算深度和高度
8.2　二叉树
8.2.1　二叉树的抽象数据类型
8.2.2　二叉树的属性
8.3　树的实现
8.3.1　二叉树的链式存储结构
8.3.2　基于数组表示的二叉树
8.3.3　一般树的链式存储结构
8.4　树的遍历算法
8.4.1　树的先序和后序遍历
8.4.2　树的广度优先遍历
8.4.3　二叉树的中序遍历
8.4.4　用Python实现树遍历
8.4.5　树遍历的应用
8.4.6　欧拉图和模板方法模式*
8.5　案例研究：表达式树
8.6　练习
扩展阅读
第9章　优先级队列
9.1　优先级队列的抽象数据类型
9.1.1　优先级
9.1.2　优先级队列的抽象数据类型的实现
9.2　优先级队列的实现
9.2.1　组合设计模式
9.2.2　使用未排序列表实现优先级队列
9.2.3　使用排序列表实现优先级队列
9.3　堆
9.3.1　堆的数据结构
9.3.2　使用堆实现优先级队列
9.3.3　基于数组的完全二叉树表示
9.3.4　Python的堆实现
9.3.5　基于堆的优先级队列的分析
9.3.6　自底向上构建堆*
9.3.7　Python的heapq模块
9.4　使用优先级队列排序
9.4.1　选择排序和插入排序
9.4.2　堆排序
9.5　适应性优先级队列
9.5.1　定位器
9.5.2　适应性优先级队列的实现
9.6　练习
扩展阅读
第10章　映射、哈希表和跳跃表
10.1　映射和字典
10.1.1　映射的抽象数据类型
10.1.2　应用：单词频率统计
10.1.3　Python的MutableMapping抽象基类
10.1.4　我们的MapBase类
10.1.5　简单的非有序映射实现
10.2　哈希表
10.2.1　哈希函数
10.2.2　哈希码
10.2.3　压缩函数
10.2.4　冲突处理方案
10.2.5　负载因子、重新哈希和效率
10.2.6　Python哈希表的实现
10.3　有序映射
10.3.1　排序检索表
10.3.2　有序映射的两种应用
10.4　跳跃表
10.4.1　跳跃表中的查找和更新操作
10.4.2　跳跃表的概率分析*
10.5　集合、多集和多映射
10.5.1　集合的抽象数据类型
10.5.2　Python的MutableSet抽象基类
10.5.3　集合、多集和多映射的实现
10.6　练习
扩展阅读
第11章　搜索树
11.1　二叉搜索树
11.1.1　遍历二叉搜索树
11.1.2　搜索
11.1.3　插入和删除
11.1.4　Python实现
11.1.5　二叉搜索树的性能
11.2　平衡搜索树
11.3　AVL树
11.3.1　更新操作
11.3.2　Python实现
11.4　伸展树
11.4.1　伸展
11.4.2　何时进行伸展
11.4.3　Python实现
11.4.4　伸展树的摊销分析*
11.5　（2，4）树
11.5.1　多路搜索树
11.5.2　（2，4）树的操作
11.6　红黑树
11.6.1　红黑树的操作
11.6.2　Python实现
11.7　练习
扩展阅读
第12章　排序与选择
12.1　为什么要学习排序算法
12.2　归并排序
12.2.1　分治法
12.2.2　基于数组的归并排序的实现
12.2.3　归并排序的运行时间
12.2.4　归并排序与递归方程*
12.2.5　归并排序的可选实现
12.3　快速排序
12.3.1　随机快速排序
12.3.2　快速排序的额外优化
12.4　再论排序：算法视角
12.4.1　排序下界
12.4.2　线性时间排序：桶排序和基数排序
12.5　排序算法的比较
12.6　Python的内置排序函数
12.7　选择
12.7.1　剪枝搜索
12.7.2　随机快速选择
12.7.3　随机快速选择分析
12.8　练习
扩展阅读
第13章　文本处理
13.1　数字化文本的多样性
13.2　模式匹配算法
13.2.1　穷举
13.2.2　Boyer-Moore算法
13.2.3　Knuth-Morris-Pratt算法
13.3　动态规划
13.3.1　矩阵链乘积
13.3.2　DNA和文本序列比对
13.4　文本压缩和贪心算法
13.4.1　霍夫曼编码算法
13.4.2　贪心算法
13.5　字典树
13.5.1　标准字典树
13.5.2　压缩字典树
13.5.3　后缀字典树
13.5.4　搜索引擎索引
13.6　练习
拓展阅读
第14章　图算法
14.1　图
14.2　图的数据结构
14.2.1　边列表结构
14.2.2　邻接列表结构
14.2.3　邻接图结构
14.2.4　邻接矩阵结构
14.2.5　Python实现
14.3　图遍历
14.3.1　深度优先搜索
14.3.2　深度优先搜索的实现和扩展
14.3.3　广度优先搜索
14.4　传递闭包
14.5　有向非循环图
14.6　最短路径
14.6.1　加权图
14.6.2　Dijkstra算法
14.7　最小生成树
14.7.1　Prim-Jarník算法
14.7.2　Kruskal算法
14.7.3　不相交分区和联合查找结构
14.8　练习
扩展阅读
第15章　内存管理和B树
15.1　内存管理
15.1.1　内存分配
15.1.2　垃圾回收
15.1.3　Python解释器使用的额外内存
15.2　存储器层次结构和缓存
15.2.1　存储器系统
15.2.2　高速缓存策略
15.3　外部搜索和B树
15.3.1　（a，b）树
15.3.2　B树
15.4　外部存储器中的排序
15.5　练习
拓展阅读
附录A　Python中的字符串
附录B　有用的数学定理
参考文献
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>数据结构与算法：python语言实现
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>OpenCV 3计算机视觉：Python语言实现（原书第2版）
译者序
前言
作者简介
审校者简介
译者简介
第1章　安装OpenCV	1
1.1　选择和使用合适的安装工具	2
1.1.1　在Windows上安装	2
1.1.2　在OS X系统中安装	6
1.1.3　在Ubuntu及其衍生版本中安装	11
1.1.4　在其他类Unix系统中安装	12
1.2　安装Contrib模块	13
1.3　运行示例	13
1.4　查找文档、帮助及更新	14
1.5　总结	15
第2章　处理文件、摄像头和图形用户界面	16
2.1　基本I/O脚本 16
2.1.1　读/写图像文件	16
2.1.2　图像与原始字节之间的转换	19
2.1.3　使用numpy.array访问图像数据	20
2.1.4　视频文件的读/写	22
2.1.5　捕获摄像头的帧	23
2.1.6　在窗口显示图像	24
2.1.7　在窗口显示摄像头帧	25
2.2　Cameo项目（人脸跟踪和图像处理）	26
2.3　Cameo—面向对象的设计	27
2.3.1　使用managers. CaptureManager提取视频流	27
2.3.2　使用managers.WindowManager抽象窗口和键盘	32
2.3.3　cameo.Cameo的强大实现	33
2.4　总结	34
第3章　使用OpenCV 3处理图像	36
3.1　不同色彩空间的转换	36
3.2　傅里叶变换	37
3.2.1　高通滤波器	37
3.2.2　低通滤波器	39
3.3　创建模块	39
3.4　边缘检测	40
3.5　用定制内核做卷积	41
3.6　修改应用	43
3.7　Canny边缘检测	44
3.8　轮廓检测	45
3.9　边界框、最小矩形区域和最小闭圆的轮廓	46
3.10　凸轮廓与Douglas-Peucker算法	48
3.11　直线和圆检测	50
3.11.1　直线检测	50
3.11.2　圆检测	51
3.12　检测其他形状	52
3.13　总结	52
第4章　深度估计与分割	53
4.1　创建模块	53
4.2　捕获深度摄像头的帧	54
4.3　从视差图得到掩模	56
4.4　对复制操作执行掩模	57
4.5　使用普通摄像头进行深度估计	59
4.6　使用分水岭和GrabCut算法进行物体分割	63
4.6.1　用GrabCut进行前景检测的例子	64
4.6.2　使用分水岭算法进行图像分割	66
4.7　总结	69
第5章　人脸检测和识别	70
5.1　Haar级联的概念	70
5.2　获取Haar级联数据	71
5.3　使用OpenCV进行人脸检测	72
5.3.1　静态图像中的人脸检测	72
5.3.2　视频中的人脸检测	74
5.3.3　人脸识别	76
5.4　总结	82
第6章　图像检索以及基于图像描述符的搜索	83
6.1　特征检测算法	83
6.1.1　特征定义	84
6.1.2　使用DoG和SIFT进行特征提取与描述	86
6.1.3　使用快速Hessian算法和SURF来提取和检测特征	89
6.1.4　基于ORB的特征检测和特征匹配	91
6.1.5　ORB特征匹配	93
6.1.6　K-最近邻匹配	95
6.1.7　FLANN匹配	96
6.1.8　FLANN的单应性匹配	99
6.1.9　基于文身取证的应用程序示例	102
6.2　总结	105
第7章　目标检测与识别	106
7.1　目标检测与识别技术	106
7.1.1　HOG描述符	107
7.1.2　检测人	112
7.1.3　创建和训练目标检测器	113
7.2　汽车检测	116
7.2.1　代码的功能	118
7.2.2　SVM和滑动窗口	122
7.3　总结	134
第8章　目标跟踪	135
8.1　检测移动的目标	135
8.2　背景分割器：KNN、MOG2和GMG	138
8.2.1　均值漂移和CAMShift	142
8.2.2　彩色直方图	144
8.2.3　返回代码	146
8.3　CAMShift	147
8.4　卡尔曼滤波器	149
8.4.1　预测和更新	149
8.4.2　范例	150
8.4.3　一个基于行人跟踪的例子	153
8.4.4　Pedestrian类	154
8.4.5　主程序	157
8.5　总结	159
第9章　基于OpenCV的神经网络简介	160
9.1　人工神经网络	160
9.2　人工神经网络的结构	161
9.2.1　网络层级示例	162
9.2.2　学习算法	163
9.3　OpenCV中的ANN	164
9.3.1　基于ANN的动物分类	166
9.3.2　训练周期	169
9.4　用人工神经网络进行手写数字识别	170
9.4.1　MNIST—手写数字数据库	170
9.4.2　定制训练数据	170
9.4.3　初始参数	171
9.4.4　迭代次数	171
9.4.5　其他参数	171
9.4.6　迷你库	172
9.4.7　主文件	175
9.5　可能的改进和潜在的应用	180
9.5.1　改进	180
9.5.2　应用	181
9.6　总结	181
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>OpenCV 3计算机视觉：Python语言实现（原书第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>趣学Python编程
第1部分　学习编程
第1章　python不是大蟒蛇 3
1.1 关于计算机语言 3
1.2 安装python 4
1.2.1 在windows 7上安装python 4
1.2.2 在苹果os x上安装python 6
1.2.3 在ubuntu上安装python 8
1.3 当你安装好python以后 9
1.4 保存python程序 10
1.5 你学到了什么 12
第2章　计算与变量 13
2.1 用python来做计算 13
2.1.1 python的运算符 14
2.1.2 运算的顺序 15
2.2 变量就像是标签 16
2.3 使用变量 17
2.4 你学到了什么 20
第3章　字符串、列表、元组和字典 21
3.1 字符串 21
.3.1.1 创建字符串 21
3.1.2 处理字符串相关的问题 23
3.1.3 在字符串里嵌入值 25
3.1.4 字符串乘法 26
3.2 列表比字符串还强大 27
3.2.1 添加元素到列表 29
3.2.2 从列表中删除元素 30
3.2.3 列表上的算术 31
3.3 元组 32
3.4 python里的map不是用来指路的 33
3.5 你学到了什么 35
3.6 编程小测验 36
第4章　用海龟画图 37
4.1 使用python的turtle（海龟）模块 37
4.1.1 创建画布 38
4.1.2 移动海龟 39
4.2 你学到了什么 43
4.3 编程小测验 43
第5章　用if和else来提问 45
5.1 if语句 45
5.2 语句块就是一组程序语句 45
5.3 条件语句帮助我们做比较 48
5.4 if-then-else语句 49
5.5 if和elif语句 50
5.6 组合条件 51
5.7 没有值的变量——none 52
5.8 字符串与数字之间的不同 52
5.9 你学到了什么 55
5.10 编程小测验 55
第6章　循环 57
6.1 使用for循环 57
6.2 还有一种叫while的循环 64
6.3 你学到了什么 67
6.4 编程小测验 67
第7章　使用函数和模块来重用你的代码 69
7.1 使用函数 69
7.1.1 函数的组成部分 70
7.1.2 变量和作用域 71
7.2 使用模块 73
7.3 你学到了什么 75
7.4 编程小测验 76
第8章　如何使用类和对象 78
8.1 把事物拆分成类 78
8.1.1 父母与孩子 79
8.1.2 增加属于类的对象 80
8.1.3 定义类中的函数 81
8.1.4 用函数来表示类的特征 81
8.1.5 为什么使要用类和对象 82
8.1.6 画图中的对象与类 84
8.2 对象和类的另一些实用功能 86
8.2.1 函数继承 87
8.2.2 从函数里调用其他函数 88
8.3 初始化对象 89
8.4 你学到了什么 90
8.5 编程小测验 90
第9章　python的内建函数 92
9.1 使用内建函数 92
9.1.1 abs函数 92
9.1.2 bool函数 93
9.1.3 dir函数 94
9.1.4 eval函数 96
9.1.5 exec函数 97
9.1.6 float函数 98
9.1.7 int函数 98
9.1.8 len函数 99
9.1.9 max和min函数 100
9.1.10 range函数 101
9.1.11 sum函数 102
9.2 使用文件 103
9.2.1 创建测试文件 103
9.2.2 在python中打开文件 106
9.2.3 写入到文件 107
9.3 你学到了什么 108
9.4 编程小测验 108
第10章　常用的python模块 109
10.1 使用copy模块来复制 109
10.2 keyword模块记录了所有的关键字 112
10.3 用random模块获得随机数 112
10.3.1 用randint来随机挑选一个数字 112
10.3.2 用choice从列表中随机选取一个元素 114
10.3.3 用shuffle来给列表洗牌 115
10.4 用sys模块来控制shell程序 115
10.4.1 用exit函数来退出shell程序 115
10.4.2 从stdin对象读取 115
10.4.3 用stdout对象来写入 116
10.4.4 我用的python是什么版本的 116
10.5用time模块来得到时间 117
10.5.1 用asctime来转换日期 118
10.5.2 用localtime来得到日期和时间 119
10.5.3 用sleep来休息一会儿吧 120
10.6 用pickle模块来保存信息 120
10.7 你学到了什么 122
10.8 编程小测验 122
第11章 高级海龟作图 124
11.1 从基本的正方形开始 124
11.2 画星星 125
11.3 画汽车 128
11.4 填色 130
11.4.1 用来画填色圆形的函数 131
11.4.2 使用纯白和纯黑 132
11.5 画方形的函数 133
11.6 画填色正方形 134
11.7 画填好色的星星 135
11.8 你学到了什么 137
11.9 编程小测验 137
第12章 用tkinter画高级图形 139
12.1 创造一个可以点的按钮 140
12.2 使用具名参数 142
12.3 创建一个画图用的画布 142
12.4 画线 143
12.5 画盒子 144
12.5.1 画许多矩形 146
12.5.2 设置颜色 148
12.6 画圆弧 151
12.7 画多边形 153
12.8 显示文字 154
12.9 显示图片 155
12.10 创建基本的动画 157
12.11 让对象对操作有反应 159
12.12 更多使用id的方法 161
12.13 你学到了什么 163
12.14 编程小测验 163
第2部分　弹球实例
第13章 你的第一个游戏：弹球 167
13.1 击打反弹球 167
13.2 创建游戏的画布 168
13.3 创建ball类 169
13.4 增加几个动作 171
13.4.1 让小球移动 171
13.4.2 让小球来回反弹 172
13.4.3 改变小球的起始方向 174
13.5 你学到了什么 176
第14章 完成你的第一个游戏：反弹吧，小球！ 177
14.1 加上球拍 177
14.2 让球拍移动 179
判断小球是否击中球拍 180
14.3 增加输赢因素 183
14.4 你学到了什么 187
14.5 编程小测验 187
第3部分　火柴人实例
第15章　火柴小人游戏的图形 191
15.1 火柴小人游戏计划 191
15.2 得到gimp 192
15.3 创建游戏中的元素 193
15.3.1 准备一个有透明背景的图形 194
15.3.2 画火柴人 195
15.3.3 画平台 197
15.3.4 画门 197
15.3.5 画背景 198
15.3.6 透明 199
15.4 你学到了什么 200
第16章　开发火柴人游戏 201
16.1 创建game类 201
16.1.1 设置窗口标题以及创建画布 201
16.1.2 完成__init__函数 202
16.1.3 创建主循环函数 203
16.2 创建坐标类 205
16.3 冲突检测 205
16.3.1 精灵在水平方向上冲突 206
16.3.2 精灵在垂直方向上冲突 208
16.3.3 把它们放在一起：最终的冲突检测代码 208
16.4 创建精灵类 210
16.5 添加平台类 211
16.5.1 加入平台对象 212
16.5.2 添加很多平台 213
16.6 你学到了什么 215
16.7 编程小测验 215
第17章　创建火柴人 217
17.1 初始化火柴人 217
17.1.1 装入火柴人图形 217
17.1.2 设置变量 218
17.1.3 与键盘按键绑定 219
17.2 让火柴人向左转和向右转 220
17.3 让火柴人跳跃 221
17.4 我们都做了什么 221
17.5 你学到了什么 222
第18章　完成火柴人逃生游戏 223
18.1 让火柴人动起来 223
18.1.1 创建动画函数 223
18.1.2 得到火柴人的位置 226
18.1.3 让火柴人移动 227
18.2 测试我们的火柴人精灵 235
18.3 门 235
18.3.1 创建doorsprite类 236
18.3.2 门的检测 237
18.3.3 加入门对象 237
18.4 最终的游戏 238
18.5 你学到了什么 244
18.6 编程小测验 245
结束语 接下来学什么 246
附录 python的关键字 253
术语表 265
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>趣学Python编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>python机器学习
译者序
推荐序
作者简介
审校者简介
前言
第1章 赋予计算机学习数据的能力1
1.1构建智能机器将数据转化为知识1
1.2 机器学习的三种不同方法1
1.2.1 通过监督学习对未来事件进行预测2
1.2.2 通过强化学习解决交互式问题4
1.2.3 通过无监督学习发现数据本身潜在的结构4
1.2.4 基本术语及符号介绍5
1.3 构建机器学习系统的蓝图6
1.3.1 数据预处理6
1.3.2 选择预测模型类型并进行训练7
1.3.3 模型验证与使用未知数据进行预测8
1.4 Python在机器学习中的应用8
本章小结9
第2章 机器学习分类算法10
2.1 人造神经元—早期机器学习概览10
2.2 使用Python实现感知器学习算法13
2.3 自适应线性神经元及其学习的收敛性19
2.3.1 通过梯度下降最小化代价函数20
2.3.2 使用Python实现自适应线性神经元21
2.3.3 大规模机器学习与随机梯度下降25
本章小结29
第3章 使用scikit-learn实现机器学习分类算法30
3.1 分类算法的选择30
3.2 初涉scikit-learn的使用30
使用scikit-learn训练感知器31
3.3 逻辑斯谛回归中的类别概率34
3.3.1 初识逻辑斯谛回归与条件概率34
3.3.2 通过逻辑斯谛回归模型的代价函数获得权重36
3.3.3 使用scikit-learn训练逻辑斯谛回归模型37
3.3.4 通过正则化解决过拟合问题39
3.4 使用支持向量机最大化分类间隔41
3.4.1 对分类间隔最大化的直观认识41
3.4.2 使用松弛变量解决非线性可分问题42
3.4.3 使用scikit-learn实现SVM44
3.5 使用核SVM解决非线性问题44
3.6 决策树48
3.6.1 最大化信息增益—获知尽可能准确的结果49
3.6.2 构建决策树52
3.6.3 通过随机森林将弱分类器集成为强分类器53
3.7 惰性学习算法—k-近邻算法54
本章小结57
第4章 数据预处理—构建好的训练数据集58
4.1 缺失数据的处理58
4.1.1 将存在缺失值的特征或样本删除59
4.1.2 缺失数据填充60
4.1.3 理解scikit-learn预估器的API60
4.2 处理类别数据61
4.2.1 有序特征的映射61
4.2.2 类标的编码62
4.2.3 标称特征上的独热编码63
4.3 将数据集划分为训练数据集和测试数据集64
4.4 将特征的值缩放到相同的区间65
4.5 选择有意义的特征66
4.5.1 使用L1正则化满足数据稀疏化67
4.5.2 序列特征选择算法70
4.6 通过随机森林判定特征的重要性74
本章小结76
第5章 通过降维压缩数据77
5.1 无监督数据降维技术—主成分分析77
5.1.1 总体方差与贡献方差78
5.1.2 特征转换80
5.1.3 使用scikit-learn进行主成分分析82
5.2 通过线性判别分析压缩无监督数据84
5.2.1 计算散布矩阵85
5.2.2 在新特征子空间上选取线性判别算法87
5.2.3 将样本映射到新的特征空间89
5.2.4 使用scikit-learn进行LDA分析90
5.3 使用核主成分分析进行非线性映射91
5.3.1 核函数与核技巧91
5.3.2 使用Python实现核主成分分析94
5.3.3 映射新的数据点99
5.3.4 scikit-learn中的核主成分分析102
本章小结103
第6章 模型评估与参数调优实战104
6.1 基于流水线的工作流104
6.1.1 加载威斯康星乳腺癌数据集104
6.1.2 在流水线中集成数据转换及评估操作105
6.2 使用k折交叉验证评估模型性能106
6.2.1 holdout方法106
6.2.2 k折交叉验证107
6.3 通过学习及验证曲线来调试算法110
6.3.1 使用学习曲线判定偏差和方差问题110
6.3.2 通过验证曲线来判定过拟合与欠拟合112
6.4 使用网格搜索调优机器学习模型113
6.4.1 使用网络搜索调优超参114
6.4.2 通过嵌套交叉验证选择算法115
6.5 了解不同的性能评价指标116
6.5.1 读取混淆矩阵116
6.5.2 优化分类模型的准确率和召回率117
6.5.3 绘制ROC曲线118
6.5.4 多类别分类的评价标准121
本章小结121
第7章 集成学习—组合不同的模型122
7.1 集成学习122
7.2 实现一个简单的多数投票分类器125
7.3 评估与调优集成分类器131
7.4 bagging —通过bootstrap样本构建集成分类器135
7.5 通过自适应boosting提高弱学习机的性能138
本章小结143
第8章 使用机器学习进行情感分析144
8.1 获取IMDb电影评论数据集144
8.2 词袋模型简介146
8.2.1 将单词转换为特征向量146
8.2.2 通过词频-逆文档频率计算单词关联度147
8.2.3 清洗文本数据148
8.2.4 标记文档149
8.3 训练用于文档分类的逻辑斯谛回归模型151
8.4 使用大数据—在线算法与外存学习152
本章小结155
第9章 在Web应用中嵌入机器学习模型156
9.1 序列化通过scikit-learn拟合的模型156
9.2 使用SQLite数据库存储数据158
9.3 使用Flask开发Web应用160
9.3.1 第一个Flask Web应用160
9.3.2 表单验证及渲染161
9.4 将电影分类器嵌入Web应用164
9.5 在公共服务器上部署Web应用169
本章小结172
第10章 使用回归分析预测连续型目标变量173
10.1 简单线性回归模型初探173
10.2 波士顿房屋数据集174
10.3 基于最小二乘法构建线性回归模型178
10.3.1 通过梯度下降计算回归参数178
10.3.2 使用scikit-learn估计回归模型的系数181
10.4 使用RANSAC拟合高鲁棒性回归模型182
10.5 线性回归模型性能的评估184
10.6 回归中的正则化方法185
10.7 线性回归模型的曲线化-多项式回归186
10.7.1 房屋数据集中的非线性关系建模188
10.7.2 使用随机森林处理非线性关系190
本章小结193
第11章 聚类分析——处理无类标数据194
11.1 使用k-means算法对相似对象进行分组194
11.1.1 k-means++196
11.1.2 硬聚类与软聚类198
11.1.3 使用肘方法确定簇的最佳数量199
11.1.4 通过轮廓图定量分析聚类质量200
11.2 层次聚类203
11.2.1 基于距离矩阵进行层次聚类204
11.2.2 树状图与热度图的关联207
11.2.3 通过scikit-learn进行凝聚聚类208
11.3 使用DBSCAN划分高密度区域209
本章小结212
第12章 使用人工神经网络识别图像213
12.1 使用人工神经网络对复杂函数建模213
12.1.1 单层神经网络回顾214
12.1.2 多层神经网络架构简介215
12.1.3 通过正向传播构造神经网络216
12.2 手写数字的识别218
12.2.1 获取MNIST数据集218
12.2.2 实现一个多层感知器222
12.3 人工神经网络的训练228
12.3.1 计算逻辑斯谛代价函数228
12.3.2 通过反向传播训练神经网络230
12.4 建立对反向传播的直观认识231
12.5 通过梯度检验调试神经网络232
12.6 神经网络的收敛性236
12.7 其他神经网络架构237
12.7.1 卷积神经网络237
12.7.2 循环神经网络238
12.8 关于神经网络的实现239
本章小结240
第13章 使用Theano并行训练神经网络241
13.1 使用Theano构建、编译并运行表达式241
13.1.1 什么是Theano242
13.1.2 初探Theano243
13.1.3 配置Theano244
13.1.4 使用数组结构245
13.1.5 整理思路—线性回归示例247
13.2 为前馈神经网络选择激励函数250
13.2.1 逻辑斯谛函数概述250
13.2.2 通过softmax函数评估多类别分类任务中的类别概率252
13.2.3 通过双曲正切函数增大输出范围252
13.3 使用Keras提高训练神经网络的效率254
本章小结258
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>python机器学习
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据挖掘入门与实践
第1章 　开始数据挖掘之旅　　1
1.1 　数据挖掘简介　　1
1.2 　使用Python和IPython Notebook　　2
1.2.1 　安装Python　　2
1.2.2 　安装IPython　　4
1.2.3 　安装scikit-learn库　　5
1.3 　亲和性分析示例　　5
1.3.1 　什么是亲和性分析　　5
1.3.2 　商品推荐　　6
1.3.3 　在NumPy中加载数据集　　6
1.3.4 　实现简单的排序规则　　8
1.3.5 　排序找出最佳规则　　10
1.4 　分类问题的简单示例　　12
1.5 　什么是分类　　12
1.5.1 　准备数据集　　13
1.5.2 　实现OneR算法　　14
1.5.3 　测试算法　　16
1.6 　小结　　18
第2章 　用scikit-learn估计器分类　　19
2.1 　scikit-learn估计器　　19
2.1.1 　近邻算法　　20
2.1.2 　距离度量　　20
2.1.3 　加载数据集　　22
2.1.4 　努力实现流程标准化　　24
2.1.5 　运行算法　　24
2.1.6 　设置参数　　25
2.2 　流水线在预处理中的应用　　27
2.2.1 　预处理示例　　28
2.2.2 　标准预处理　　28
2.2.3 　组装起来　　29
2.3 　流水线　　29
2.4 　小结　　30
第3章 　用决策树预测获胜球队　　31
3.1 　加载数据集　　31
3.1.1 　采集数据　　31
3.1.2 　用pandas加载数据集　　32
3.1.3 　数据集清洗　　33
3.1.4 　提取新特征　　34
3.2 　决策树　　35
3.2.1 　决策树中的参数　　36
3.2.2 　使用决策树　　37
3.3 　NBA比赛结果预测　　37
3.4 　随机森林　　41
3.4.1 　决策树的集成效果如何　　42
3.4.2 　随机森林算法的参数　　42
3.4.3 　使用随机森林算法　　43
3.4.4 　创建新特征　　44
3.5 　小结　　45
第4章 　用亲和性分析方法推荐电影　　46
4.1 　亲和性分析　　46
4.1.1 　亲和性分析算法　　47
4.1.2 　选择参数　　47
4.2 　电影推荐问题　　48
4.2.1 　获取数据集　　48
4.2.2 　用pandas加载数据　　49
4.2.3 　稀疏数据格式　　49
4.3 　Apriori算法的实现　　50
4.3.1 　Apriori算法　　51
4.3.2 　实现　　52
4.4 　抽取关联规则　　54
4.5 　小结　　60
第5章 　用转换器抽取特征　　62
5.1 　特征抽取　　62
5.1.1 　在模型中表示事实　　62
5.1.2 　通用的特征创建模式　　64
5.1.3 　创建好的特征　　66
5.2 　特征选择　　67
5.3 　创建特征　　71
5.4 　创建自己的转换器　　75
5.4.1 　转换器API　　76
5.4.2 　实现细节　　76
5.4.3 　单元测试　　77
5.4.4 　组装起来　　79
5.5 　小结　　79
第6章 　使用朴素贝叶斯进行社会媒体挖掘　　80
6.1 　消歧　　80
6.1.1 　从社交网站下载数据　　81
6.1.2 　加载数据集并对其分类　　83
6.1.3 　Twitter数据集重建　　87
6.2 　文本转换器　　90
6.2.1 　词袋　　91
6.2.2 　N元语法　　92
6.2.3 　其他特征　　93
6.3 　朴素贝叶斯　　93
6.3.1 　贝叶斯定理　　93
6.3.2 　朴素贝叶斯算法　　94
6.3.3 　算法应用示例　　95
6.4 　应用　　96
6.4.1 　抽取特征　　97
6.4.2 　将字典转换为矩阵　　98
6.4.3 　训练朴素贝叶斯分类器　　98
6.4.4 　组装起来　　98
6.4.5 　用F1值评估　　99
6.4.6 　从模型中获取更多有用的特征　　100
6.5 　小结　　102
第7章 　用图挖掘找到感兴趣的人　　104
7.1 　加载数据集　　104
7.1.1 　用现有模型进行分类　　106
7.1.2 　获取Twitter好友信息　　107
7.1.3 　构建网络　　110
7.1.4 　创建图　　112
7.1.5 　创建用户相似度图　　114
7.2 　寻找子图　　117
7.2.1 　连通分支　　117
7.2.2 　优化参数选取准则　　119
7.3 　小结　　123
第8章 　用神经网络破解验证码　　124
8.1 　人工神经网络　　124
8.2 　创建数据集　　127
8.2.1 　绘制验证码　　127
8.2.2 　将图像切分为单个的字母　　129
8.2.3 　创建训练集　　130
8.2.4 　根据抽取方法调整训练数据集　　131
8.3 　训练和分类　　132
8.3.1 　反向传播算法　　134
8.3.2 　预测单词　　135
8.4 　用词典提升正确率　　138
8.4.1 　寻找最相似的单词　　138
8.4.2 　组装起来　　139
8.5 　小结　　140
第9章 　作者归属问题　　142
9.1 　为作品找作者　　142
9.1.1 　相关应用和使用场景　　143
9.1.2 　作者归属　　143
9.1.3 　获取数据　　144
9.2 　功能词　　147
9.2.1 　统计功能词　　148
9.2.2 　用功能词进行分类　　149
9.3 　支持向量机　　150
9.3.1 　用SVM分类　　151
9.3.2 　内核　　151
9.4 　字符N元语法　　152
9.5 　使用安然公司数据集　　153
9.5.1 　获取安然数据集　　153
9.5.2 　创建数据集加载工具　　154
9.5.3 　组装起来　　158
9.5.4 　评估　　158
9.6 　小结　　160
第10章 　新闻语料分类　　161
10.1 　获取新闻文章　　161
10.1.1 　使用Web API获取数据　　162
10.1.2 　数据资源宝库reddit　　164
10.1.3 　获取数据　　165
10.2 　从任意网站抽取文本　　167
10.2.1 　寻找任意网站网页中的主要内容　　167
10.2.2 　组装起来　　168
10.3 　新闻语料聚类　　170
10.3.1 　k-means算法　　171
10.3.2 　评估结果　　173
10.3.3 　从簇中抽取主题信息　　175
10.3.4 　用聚类算法做转换器　　175
10.4 　聚类融合　　176
10.4.1 　证据累积　　176
10.4.2 　工作原理　　179
10.4.3 　实现　　180
10.5 　线上学习　　181
10.5.1 　线上学习简介　　181
10.5.2 　实现　　182
10.6 　小结　　184
第11章 　用深度学习方法为图像中的物体进行分类　　185
11.1 　物体分类　　185
11.2 　应用场景和目标　　185
11.3 　深度神经网络　　189
11.3.1 　直观感受　　189
11.3.2 　实现　　189
11.3.3 　Theano简介　　190
11.3.4 　Lasagne简介　　191
11.3.5 　用nolearn实现神经网络　　194
11.4 　GPU优化　　197
11.4.1 　什么时候使用GPU进行
计算　　198
11.4.2 　用GPU运行代码　　198
11.5 　环境搭建　　199
11.6 　应用　　201
11.6.1 　获取数据　　201
11.6.2 　创建神经网络　　202
11.6.3 　组装起来　　204
11.7 　小结　　205
第12章 　大数据处理　　206
12.1 　大数据　　206
12.2 　大数据应用场景和目标　　207
12.3 　MapReduce　　208
12.3.1 　直观理解　　209
12.3.2 　单词统计示例　　210
12.3.3 　Hadoop MapReduce　　212
12.4 　应用　　212
12.4.1 　获取数据　　213
12.4.2 　朴素贝叶斯预测　　215
12.5 　小结　　226
附录 　接下来的方向　　227
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据挖掘入门与实践
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>编程导论
第1章　起步　　1
第2章　Python介绍　　6
2.1　Python的基本元素　　7
2.1.1　对象、表达式和数值类型　　8
2.1.2　变量和赋值　　9
2.1.3　IDLE　　11
2.2　分支程序　　12
2.3　字符串和输出　　14
2.4　循环　　16
第3章　一些简单的数值类程序　　19
3.1　穷举法　　19
3.2　for循环　　21
3.3　近似解和二分查找　　23
3.4　关于浮点数　　26
3.5　牛顿拉夫逊方法　　28
第4章　函数、作用域和规范抽象　　30
4.1　函数和作用域　　31
4.1.1　函数定义　　31
4.1.2　关键字参数和默认值　　32
4.1.3　作用域　　33
4.2　规范　　36
4.3　递归　　39
4.3.1　斐波那契数　　40
4.3.2　回文和分治　　42
4.4　全局变量　　44
4.5　模块　　45
4.6　文件　　47
第5章　结构化类型、可变性和高阶函数　　49
5.1　元组　　49
5.2　列表和可变性　　51
5.2.1　克隆　　55
5.2.2　列表解析　　56
5.3　函数对象　　57
5.4　字符串、元组和列表　　58
5.5　字典　　59
第6章　测试和调试　　63
6.1　测试　　63
6.1.1　黑盒测试　　64
6.1.2　白盒测试　　66
6.1.3　执行测试　　67
6.2　调试　　68
6.2.1　学习调试　　70
6.2.2　设计实验　　71
6.2.3　如果遇到阻碍　　73
6.2.4　找到“目标”错误之后　　74
第7章　异常和断言　　75
7.1　处理异常　　75
7.2　把异常当作控制流来使用　　78
7.3　断言　　81
第8章　类和面向对象编程　　82
8.1　抽象的数据类型和类　　82
8.1.1　使用抽象的数据类型来设计程序　　86
8.1.2　使用类来记录学生和教师　　86
8.2　继承　　88
8.2.1　多层继承　　90
8.2.2　替代法则　　92
8.3　封装和信息隐藏　　92
8.4　进阶实例：抵押贷款　　97
第9章　算法复杂度简介　　101
9.1　思考计算复杂度　　101
9.2　渐近表示　　104
9.3　一些重要的复杂度　　105
9.3.1　常数复杂度　　105
9.3.2　对数复杂度　　106
9.3.3　线性复杂度　　106
9.3.4　对数线性复杂度　　107
9.3.5　多项式复杂度　　107
9.3.6　指数复杂度　　108
9.3.7　复杂度对比　　110
第10章　一些简单的算法和数据结构　　112
10.1　搜索算法　　113
10.1.1　线性搜索和间接访问元素　　113
10.1.2　二分查找和利用假设　　114
10.2　排序算法　　117
10.2.1　归并排序　　118
10.2.2　把函数当做参数　　120
10.2.3　Python中的排序　　121
10.3　散列表　　122
第11章　绘图以及类的扩展内容　　126
11.1　使用PyLab绘图　　126
11.2　扩展实例：绘制抵押贷款　　131
第12章　随机算法、概率以及统计　　137
12.1　随机程序　　138
12.2　统计推断和模拟　　139
12.3　分布　　149
12.3.1　正态分布和置信水平　　151
12.3.2　均匀分布　　154
12.3.3　指数分布和几何分布　　154
12.3.4　本福德分布　　156
12.4　强队的获胜概率　　157
12.5　散列和碰撞　　160
第13章　随机游动和数据可视化　　163
13.1　醉汉游动　　163
13.2　有偏随机游动　　169
13.3　危机重重的田地　　175
第14章　蒙特卡罗模拟　　177
14.1　帕斯卡的问题　　178
14.2　过还是不过　　179
14.3　使用查表提高性能　　182
14.4　寻找π　　183
14.5　模拟模型的结束语　　187
第15章　理解实验数据　　189
15.1　弹簧的行为　　189
15.2　弹丸的行为　　196
15.2.1　决定系数　　198
15.2.2　使用计算模型　　199
15.3　拟合指数分布　　200
15.4　当理论缺失时　　203
第16章　谎言和统计　　205
16.1　垃圾输入只能产生垃圾输出　　205
16.2　图表会骗人　　206
16.3　与此谬误　　208
16.4　统计方法并不能代替数据　　209
16.5　抽样偏差　　210
16.6　语境问题　　211
16.7　当心外推法　　212
16.8　得克萨斯神枪手谬误　　213
16.9　百分比会说谎　　215
16.10　小心谨慎　　215
第17章　背包和图的最优化问题　　216
17.1　背包问题　　216
17.1.1　贪婪算法　　217
17.1.2　0/1背包问题的最优解法　　219
17.2　图的最优化问题　　222
17.2.1　一些典型的图论问题　　226
17.2.2　疾病传播和最小割　　227
17.2.3　最短路径、深度优先搜索和广度优先搜索　　227
第18章　动态规划　　233
18.1　斐波那契数列　　233
18.2　动态规划和0/1背包问题　　235
18.3　动态规划和分治　　241
第19章　机器学习简介　　242
19.1　特征向量　　244
19.2　距离度量　　245
19.3　聚类　　249
19.4　类型示例和聚类　　250
19.5　K-means聚类　　253
19.6　人造案例　　255
19.7　稍微真实一些的示例　　259
19.8　小结　　265
附录　Python 2.7快速参考　　266
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>编程导论
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python机器学习
第1章关于预测的两类核心算法
1.1为什么这两类算法如此有用
1.2什么是惩罚回归方法
1.3什么是集成方法
1.4算法的选择
1.5构建预测模型的流程
1.5.1构造一个机器学习问题
1.5.2特征提取和特征工程
1.5.3确定训练后的模型的性能
1.6各章内容及其依赖关系
1.7小结
1.8参考文献
第2章通过理解数据来了解问题
2.1“解剖”一个新问题
2.1.1属性和标签的不同类型决定模型的选择
2.1.2新数据集的注意事项
2.2分类问题：用声纳发现未爆炸的水雷
2.2.1“岩石vs水雷”数据集的物理特性
2.2.2“岩石vs水雷”数据集统计特征
2.2.3用分位数图展示异常点
2.2.4类别属性的统计特征
2.2.5利用PythonPandas对“岩石vs水雷”数据集进行统计分析
2.3对“岩石vs水雷数据集”属性的可视化展示
2.3.1利用平行坐标图进行可视化展示
2.3.2属性和标签的关系可视化
2.3.3用热图（heatmap）展示属性和标签的相关性
2.3.4对“岩石vs
2.4基于因素变量的实数值预测鲍鱼的年龄
2.4.1回归问题的平行坐标图—鲍鱼问题的变量关系可视化
2.4.2回归问题如何使用关联热图—鲍鱼问题的属性对关系的可视化
2.5用实数值属性预测实数值目标：评估红酒口感
2.6多类别分类问题：它属于哪种玻璃
小结
参考文献
第3章预测模型的构建：平衡性能、复杂性以及大数据
3.1基本问题：理解函数逼近
3.1.1使用训练数据
3.1.2评估预测模型的性能
3.2影响算法选择及性能的因素——复杂度以及数据
3.2.1简单问题和复杂问题的对比
3.2.2一个简单模型与复杂模型的对比
3.2.3影响预测算法性能的因素
3.2.4选择一个算法：线性或者非线性
3.3度量预测模型性能
3.3.1不同类型问题的性能评价指标
3.3.2部署模型的性能模拟
3.4模型与数据的均衡
3.4.1通过权衡问题复杂度、模型复杂度以及数据集规模来选择模型
3.4.2使用前向逐步回归来控制过拟合
3.4.3评估并理解你的预测模型
3.4.4通过惩罚回归系数来控制过拟合——岭回归
小结
参考文献
第4章惩罚线性回归模型
4.1为什么惩罚线性回归方法如此有效
4.1.1足够快速地估计系数
4.1.2变量的重要性信息
4.1.3部署时的预测足够快速
4.1.4性能可靠
4.1.5稀疏解
4.1.6问题本身可能需要线性模型
4.1.7什么时候使用集成方法
4.2惩罚线性回归：对线性回归进行正则化以获得最优性能
4.2.1训练线性模型：最小化错误以及更多
4.2.2向OLS公式中添加一个系数惩罚项
4.2.3其他有用的系数惩罚项：Manhattan以及ElasticNet
4.2.4为什么套索惩罚会导致稀疏的系数向量
4.2.5ElasticNet惩罚项包含套索惩罚项以及岭惩罚项
4.3求解惩罚线性回归问题
4.3.1理解最小角度回归与前向逐步回归的关系
4.3.2LARS如何生成数百个不同复杂度的模型
4.3.3从数百个LARS生成结果中选择最佳模型
4.3.4使用Glmnet：非常快速并且通用
4.4基于数值输入的线性回归方法的扩展
4.4.1使用惩罚回归求解分类问题
4.4.2求解超过2种输出的分类问题
4.4.3理解基扩展：使用线性方法来解决非线性问题
4.4.4向线性方法中引入非数值属性
小结
参考文献
第5章使用惩罚线性方法来构建预测模型
5.1惩罚线性回归的Python包
5.2多变量回归：预测红酒口感
5.2.1构建并测试模型以预测红酒口感
5.2.2部署前在整个数据集上进行训练
5.2.3基扩展：基于原始属性扩展新属性来改进性能
5.3二分类：使用惩罚线性回归来检测未爆炸的水雷
5.3.1构建部署用的岩石水雷分类器
5.4多类别分类—分类犯罪现场的玻璃样本
小结
参考文献
第6章集成方法
6.1二元决策树
6.1.1如何利用二元决策树进行预测
6.1.2如何训练一个二元决策树
6.1.3决策树的训练等同于分割点的选择
6.1.4二元决策树的过拟合
6.1.5针对分类问题和类别特征所做的修改
6.2自举集成：Bagging算法
6.2.1Bagging算法是如何工作的
6.2.2Bagging算法小结
6.3梯度提升法（GradientBoosting）
6.3.1梯度提升法的基本原理
6.3.2获取梯度提升法的最佳性能
6.3.3针对多变量问题的梯度提升法
6.3.4梯度提升方法的小结
6.4随机森林
6.4.1随机森林：Bagging加上随机属性子集
6.4.2随机森林的性能
6.4.3随机森林小结
6.5小结
6.6参考文献
第7章用Python构建集成模型
7.1用Python集成方法工具包解决回归问题
7.1.1构建随机森林模型来预测红酒口感
7.1.2用梯度提升预测红酒品质
7.2用Bagging来预测红酒口感
7.3Python集成方法引入非数值属性
7.3.1对鲍鱼性别属性编码引入Python随机森林回归方法
7.3.2评估性能以及变量编码的重要性
7.3.3在梯度提升回归方法中引入鲍鱼性别属性
7.3.4梯度提升法的性能评价以及变量编码的重要性
7.4用Python集成方法解决二分类问题
7.4.1用Python随机森林方法探测未爆炸的水雷
7.4.2构建随机森林模型探测未爆炸水雷
7.4.3随机森林分类器的性能
7.4.4用Python梯度提升法探测未爆炸水雷
7.4.5梯度提升法分类器的性能
7.5用Python集成方法解决多类别分类问题
7.5.1用随机森林对玻璃进行分类
7.5.2处理类不均衡问题
7.5.3用梯度提升法对玻璃进行分类
7.5.4评估在梯度提升法中使用随机森林基学习器的好处
7.6算法比较
小结
参考文献
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python机器学习
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python自动化运维
目　录
本书赞誉
前　　言
第一部分　基础篇
第1章　系统基础信息模块详解	2
1.1　系统性能信息模块psutil	2
1.1.1　获取系统性能信息	3
1.1.2　系统进程管理方法	6
1.2　实用的IP地址处理模块IPy	7
1.2.1　IP地址、网段的基本处理	8
1.2.2　多网络计算方法详解	9
1.3　DNS处理模块dnspython	11
1.3.1　模块域名解析方法详解	11
1.3.2　常见解析类型示例说明	12
1.3.3　实践：DNS域名轮循业务监控	14
第2章　业务服务监控详解	17
2.1　文件内容差异对比方法	17
2.1.1　示例1：两个字符串的差异对比	17
2.1.2　生成美观的对比HTML格式文档	19
2.1.3　示例2：对比Nginx配置文件差异	19
2.2　文件与目录差异对比方法	21
2.2.1　模块常用方法说明	21
2.2.2　实践：校验源与备份目录差异	25
2.3　发送电子邮件模块smtplib	27
2.3.1　smtplib模块的常用类与方法	27
2.3.2　定制个性化的邮件格式方法	28
2.3.3　定制常用邮件格式示例详解	29
2.4　探测Web服务质量方法	34
2.4.1　模块常用方法说明	35
2.4.2　实践：实现探测Web服务质量	36
第3章　定制业务质量报表详解	39
3.1　数据报表之Excel操作模块	39
3.1.1　模块常用方法说明	41
3.1.2　实践：定制自动化业务流量报表周报	48
3.2　Python与rrdtool的结合模块	50
3.2.1　rrdtool模块常用方法说明	51
3.2.2　实践：实现网卡流量图表绘制	53
3.3　生成动态路由轨迹图	56
3.3.1　模块常用方法说明	56
3.3.2　实践：实现TCP探测目标服务路由轨迹	57
第4章　Python与系统安全	60
4.1　构建集中式的病毒扫描机制	60
4.1.1　模块常用方法说明	61
4.1.2　实践：实现集中式的病毒扫描	61
4.2　实现高效的端口扫描器	64
4.2.1　模块常用方法说明	64
4.2.2　实践：实现高效的端口扫描	66
第二部分　高级篇
第5章　系统批量运维管理器pexpect详解	70
5.1　pexpect的安装	70
5.2　pexpect的核心组件	71
5.2.1　spawn类	71
5.2.2　run函数	74
5.2.3　pxssh类	75
5.3　pexpect应用示例	76
5.3.1　实现一个自动化FTP操作	76
5.3.2　远程文件自动打包并下载	77
第6章　系统批量运维管理器paramiko详解	79
6.1　paramiko的安装	79
6.2　paramiko的核心组件	81
6.2.1　SSHClient类	81
6.2.2　SFTPClient类	82
6.3　paramiko应用示例	85
6.3.1　实现密钥方式登录远程主机	85
6.3.2　实现堡垒机模式下的远程命令执行	85
6.3.3　实现堡垒机模式下的远程文件上传	88
第7章　系统批量运维管理器Fabric详解	91
7.1　Fabric的安装	91
7.2　fab的常用参数	92
7.3　fabfile的编写	93
7.3.1　全局属性设定	93
7.3.2　常用API	94
7.3.3　示例1：查看本地与远程主机信息	95
7.3.4　示例2：动态获取远程目录列表	96
7.3.5　示例3：网关模式文件上传与执行	97
7.4　Fabric应用示例	98
7.4.1　示例1：文件打包、上传与校验	98
7.4.2　示例2：部署LNMP业务服务环境	99
7.4.3　示例3：生产环境代码包发布管理	101
第8章　从“零”开发一个轻量级WebServer	104
8.1　Yorserver介绍	104
8.1.1　功能特点	104
8.1.2　配置文件	105
8.2　功能实现方法	106
8.2.1　HTTP缓存功能	107
8.2.2　HTTP压缩功能	111
8.2.3　HTTP SSL功能	111
8.2.4　目录列表功能	114
8.2.5　动态CGI功能	114
第9章　集中化管理平台Ansible详解	118
9.1　YAML语言	119
9.1.1　块序列描述	120
9.1.2　块映射描述	120
9.2　Ansible的安装	121
9.2.1　业务环境说明	121
9.2.2　安装EPEL	122
9.2.3　安装Ansible	122
9.2.4　Ansible配置及测试	122
9.2.5　配置Linux主机SSH无密码访问	123
9.3　定义主机与组规则	124
9.3.1　定义主机与组	124
9.3.2　定义主机变量	125
9.3.3　定义组变量	125
9.3.4　分离主机与组特定数据	126
9.4　匹配目标	127
9.5　Ansible常用模块及API	127
9.6　playbook介绍	132
9.6.1　定义主机与用户	132
9.6.2　任务列表	133
9.6.3　执行playbook	134
9.7　playbook角色与包含声明	135
9.7.1　包含文件，鼓励复用	135
9.7.2　角色	136
9.8　获取远程主机系统信息：Facts	141
9.9　变量	142
9.9.1　Jinja2过滤器	143
9.9.2　本地Facts	143
9.9.3　注册变量	144
9.10　条件语句	145
9.11　循环	146
9.12　示例讲解	147
第10章　集中化管理平台Saltstack详解	155
10.1　Saltstack的安装	156
10.1.1　业务环境说明	156
10.1.2　安装EPEL	156
10.1.3　安装Saltstack	156
10.1.4　Saltstack防火墙配置	157
10.1.5　更新Saltstack配置及安装校验	157
10.2　利用Saltstack远程执行命令	158
10.3　Saltstack常用模块及API	161
10.4　grains组件	166
10.4.1　grains常用操作命令	167
10.4.2　定义grains数据	167
10.5　pillar组件	170
10.5.1　pillar的定义	171
10.5.2　pillar的使用	173
10.6　state介绍	174
10.6.1　state的定义	174
10.6.2　state的使用	175
10.7　示例：基于Saltstack实现的配置集中化管理	177
10.7.1　环境说明	177
10.7.2　主控端配置说明	177
10.7.3　配置pillar	179
10.7.4　配置state	180
10.7.5　校验结果	183
第11章　统一网络控制器Func详解	185
11.1　Func的安装	186
11.1.1　业务环境说明	186
11.1.2　安装Func	186
11.2　Func常用模块及API	189
11.2.1　选择目标主机	190
11.2.2　常用模块详解	190
11.3　自定义Func模块	194
11.4　非Python API接口支持	198
11.5　Func的Facts支持	199
第12章　Python大数据应用详解	202
12.1　环境说明	202
12.2　Hadoop部署	203
12.3　使用Python编写MapReduce	207
12.3.1　用原生Python编写MapReduce详解	208
12.3.2　用Mrjob框架编写MapReduce详解	212
12.4　实战分析	216
12.4.1　示例场景	216
12.4.2　网站访问流量统计	217
12.4.3　网站HTTP状态码统计	219
12.4.4　网站分钟级请求数统计	220
12.4.5　网站访问来源IP统计	221
12.4.6　网站文件访问统计	222
第三部分　案例篇
第13章　从零开始打造B/S自动化运维平台	226
13.1　平台功能介绍	226
13.2　系统构架设计	227
13.3　数据库结构设计	228
13.3.1　数据库分析	228
13.3.2　数据字典	228
13.3.3　数据库模型	229
13.4　系统环境部署	230
13.4.1　系统环境说明	230
13.4.2　系统平台搭建	230
13.4.3　开发环境优化	233
13.5　系统功能模块设计	235
13.5.1　前端数据加载模块	235
13.5.2　数据传输模块设计	237
13.5.3　平台功能模块扩展	240
第14章　打造Linux系统安全审计功能	245
14.1　平台功能介绍	245
14.2　系统构架设计	246
14.3　数据库结构设计	247
14.3.1　数据库分析	247
14.3.2　数据字典	247
14.4　系统环境部署	248
14.4.1　系统环境说明	248
14.4.2　上报主机配置	248
14.5　服务器端功能设计	252
14.5.1　Django配置	252
14.5.2　功能实现方法	253
第15章　构建分布式质量监控平台	256
15.1　平台功能介绍	256
15.2　系统构架设计	257
15.3　数据库结构设计	258
15.3.1　数据库分析	258
15.3.2　数据字典	258
15.3.3　数据库模型	259
15.4　系统环境部署	260
15.4.1　系统环境说明	260
15.4.2　数据采集角色	260
15.4.3　rrdtool作业	261
15.5　服务器端功能设计	263
15.5.1　Django配置	263
15.5.2　业务增加功能	264
15.5.3　业务报表功能	266
第16章　构建桌面版C/S自动化运维平台	269
16.1　平台功能介绍	269
16.2　系统构架设计	270
16.3　数据库结构设计	271
16.3.1　数据库分析	271
16.3.2　数据字典	272
16.3.3　数据库模型	272
16.4　系统环境部署	273
16.4.1　系统环境说明	273
16.4.2　系统环境搭建	273
16.5　系统功能模块设计	274
16.5.1　用户登录模块	274
16.5.2　系统配置功能	275
16.5.3　服务器分类模块	277
16.5.4　系统升级功能	280
16.5.5　客户端模块编写	284
16.5.6　执行功能模块	287
16.5.7　平台程序发布	289
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python自动化运维
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>笨办法学Python 3
习题0　准备工作　1
macOS　1
Windows　2
Linux　3
网上搜索　4
给新手的告诫　5
可选文本编辑器　5
习题1　第 一个程序　7
应该看到的结果　8
巩固练习　10
常见问题回答　11
习题2　注释和#号　12
应该看到的结果　12
巩固练习　12
常见问题回答　13
习题3　数字和数学计算　14
应该看到的结果　15
巩固练习　15
常见问题回答　16
习题4　变量和命名　17
应该看到的结果　18
巩固练习　18
常见问题回答　19
习题5　更多的变量和打印　20
应该看到的结果　21
巩固练习　21
常见问题回答　21
习题6　字符串和文本　22
应该看到的结果　23
巩固练习　23
破坏程序　23
常见问题回答　24
习题7　更多打印　25
应该看到的结果　25
巩固练习　26
破坏程序　26
常见问题回答　26
习题8　打印，打印　27
应该看到的结果　27
巩固练习　28
常见问题回答　28
习题9　打印，打印，打印　29
应该看到的结果　29
巩固练习　30
常见问题回答　30
习题10　那是什么　31
应该看到的结果　32
转义序列　32
巩固练习　33
常见问题回答　33
习题11　提问　34
应该看到的结果　34
巩固练习　35
常见问题回答　35
习题12　提示别人　36
应该看到的结果　36
巩固练习　36
常见问题回答　37
习题13　参数、解包和变量　38
等一下！“特性”还有另外一个名字　38
应该看到的结果　39
巩固练习　40
常见问题回答　40
习题14　提示和传递　41
应该看到的结果　41
巩固练习　42
常见问题回答　42
习题15　读取文件　44
应该看到的结果　45
巩固练习　45
常见问题回答　46
习题16　读写文件　47
应该看到的结果　48
巩固练习　49
常见问题回答　49
习题17　更多文件操作　50
应该看到的结果　51
巩固练习　51
常见问题回答　52
习题18　命名、变量、代码和函数　53
应该看到的结果　54
巩固练习　55
常见问题回答　55
习题19　函数和变量　56
应该看到的结果　57
巩固练习　57
常见问题回答　57
习题20　函数和文件　59
应该看到的结果　60
巩固练习　60
常见问题回答　60
习题21　函数可以返回某些东西　62
应该看到的结果　63
巩固练习　63
常见问题回答　64
习题22　到现在为止你学到了什么　65
学到的东西　65
习题23　字符串、字节串和字符编码　66
初始研究　66
开关、约定和编码　68
解剖输出　69
解剖代码　70
深度接触编码　72
破坏程序　72
习题24　更多的练习　74
应该看到的结果　75
巩固练习　75
常见问题回答　76
习题25　更多更多的练习　77
应该看到的结果　78
巩固练习　79
常见问题回答　80
习题26　恭喜你，现在可以考试了！　81
常见问题回答　81
习题27　记住逻辑关系　82
逻辑术语　82
真值表　83
常见问题回答　84
习题28　布尔表达式练习　85
应该看到的结果　86
巩固练习　87
常见问题回答　87
习题29　if语句　88
应该看到的结果　89
巩固练习　89
常见问题回答　89
习题30　else和if　90
应该看到的结果　91
巩固练习　91
常见问题回答　91
习题31　作出决定　92
应该看到的结果　93
巩固练习　93
常见问题回答　94
习题32　循环和列表　95
应该看到的结果　96
巩固练习　97
常见问题回答　97
习题33　while循环　98
应该看到的结果　99
巩固练习　99
常见问题回答　100
习题34　访问列表的元素　101
巩固练习　102
习题35　分支和函数　103
应该看到的结果　105
巩固练习　105
常见问题回答　105
习题36　设计和调试　107
if语句的规则　107
循环的规则　107
调试的小技巧　108
家庭作业　108
习题37　复习各种符号　109
关键字　109
数据类型　110
字符串转义序列　111
老式字符串格式　111
运算符　112
阅读代码　113
巩固练习　114
常见问题回答　114
习题38　列表的操作　115
应该看到的结果　117
列表可以做什么　117
什么时候使用列表　118
巩固练习　118
常见问题回答　119
习题39　字典，可爱的字典　120
字典的例子　121
应该看到的结果　123
字典可以做什么　124
巩固练习　124
常见问题回答　124
习题40　模块、类和对象　125
模块和字典差不多　125
类和模块差不多　126
对象和import差不多　127
获取某样东西里包含的东西　128
第　一个类的例子　128
应该看到的结果　129
巩固练习　129
常见问题回答　130
习题41　学习面向对象术语　131
专有词汇练习　131
措辞练习　131
混合巩固练习　132
阅读测试　132
练习从语言到代码　134
阅读更多代码　135
常见问题回答　135
习题42　对象、类及从属关系　136
代码写成什么样子　137
关于class　Name(object)　139
巩固练习　139
常见问题回答　139
习题43　基本的面向对象分析和设计　141
简单游戏引擎的分析　142
自顶向下与自底向上　146
《来自Percal　25号行星的哥顿人》
的代码　146
应该看到的结果　153
巩固练习　153
常见问题回答　154
习题44　继承与组合　155
什么是继承　155
要用super()的原因　160
组合　160
继承和组合的应用场合　162
巩固练习　162
常见问题回答　162
习题45　你来制作一款游戏　164
评价你的游戏　164
函数的风格　165
类的风格　165
代码风格　166
好的注释　166
为你的游戏评分　166
习题46　项目骨架　168
macOS/Linux配置　168
Windows　10配置　170
创建骨架项目目录　171
测试你的配置　173
使用这个骨架　174
小测验　174
常见问题回答　174
习题47　自动化测试　176
编写测试用例　176
测试指南　178
应该看到的结果　178
巩固练习　179
常见问题回答　179
习题48　用户输入进阶　180
我们的游戏词汇　180
测试优先挑战　182
应该测试的东西　183
巩固练习　185
常见问题回答　185
习题49　创建句子　186
match和peek　186
句子的语法　187
关于异常　187
语法分析器代码　187
尝试语法分析器　190
应该测试的东西　191
巩固练习　191
常见问题回答　191
习题50　你的第 一个网站　192
安装flask　192
写一个简单的“Hello　World”项目　192
发生了什么　194
修正错误　194
创建基本的模板文件　195
巩固练习　197
常见问题回答　197
习题51　从浏览器中获取输入　198
Web的工作原理　198
表单的工作原理　200
创建HTML表单　201
创建布局模板　203
为表单撰写自动测试代码　205
巩固练习　206
破坏程序　206
习题52　创建Web游戏　207
重构习题43中的游戏　207
创建引擎　212
期末考试　215
常见问题回答　215
接下来的路　217
怎样学习任何一种编程语言　218
老程序员的建议　219
附录　命令行快速入门　221
简介：废话少说，命令行来也　221
练习1　准备工作　222
练习2　路径、文件夹和目录（pwd）　225
练习3　如果你迷失了　227
练习4　创建目录（mkdir）　228
练习5　更改目录（cd）　230
练习6　列出目录中的内容（ls）　234
练习7　删除目录（rmdir）　238
练习8　在多个目录中切换（pushd和popd）　241
练习9　创建空文件（touch/New-Item）　243
练习10　复制文件（cp）　244
练习11　移动文件（mv）　248
练习12　查看文件内容（less/more）　250
练习13　流文件内容显示（cat）　251
练习14　删除文件（rm）　252
练习15　退出终端（exit）　254
命令行接下来的路　255
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>笨办法学Python 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python神经网络编程
版权
版权声明
内容提要
译者序
序言
前言
第 1 章　神经网络如何工作 001
1.1　尺有所短，寸有所长 001
1.2　一台简单的预测 003
1.3　分类器与预测器并无太大差别 008
1.4　训练简单的分类 011
1.5　有时候一个分类器不足以求解问题 020
1.6　神经元——大自然的计算机器 024
1.7　在神经网络中追踪信号 033
1.8　凭心而论，矩阵乘法大有用途 037
1.9　使用矩阵乘法的三层神经网络示例 043
1.10　学习来自多个节点的权重 051
1.11　多个输出节点反向传播误差 053
1.12　反向传播误差到更多层中 054
1.13　使用矩阵乘法进行反向传播误差 058
1.14　我们实际上如何更新权重 061
1.15　权重更新成功范例 077
1.16　准备数据 078
第 2 章　使用Python进行DIY 083
2.1　Python 083
2.2　交互式Python = IPython 084
2.3　优雅地开始使用Python 085
2.4　使用Python制作神经网络 105
2.5　手写数字的数据集MNIST 121
第 3 章　趣味盎然 153
3.1　自己的手写数字 153
3.2　神经网络大脑内部 156
3.3　创建新的训练数据：旋转图像 160
3.4　结语 164
附录A　微积分简介 165
A.1　一条平直的线 166
A.2　一条斜线 168
A.3　一条曲线 170
A.4　手绘微积分 172
A.5　非手绘微积分 174
A.6　无需绘制图表的微积分 177
A.7　模式 180
A.8　函数的函数 182
附录B　使用树莓派来工作 186
B.1　安装IPython 187
B.2　确保各项工作正常进行 193
B.3　训练和测试神经网络 194
B.4　树莓派成功了 195
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python神经网络编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python极客项目编程
目录
第一部分热身运动
第1章解析iTunes播放列表3
1.1 iTunes播放列表文件剖析 3
1.2 所需模块 5
1.3 代码 5
1.3.1 查找重复 5
1.3.2 提取重复 6
1.3.3 查找多个播放列表中共同的音轨 7
1.3.4 收集统计信息 8
1.3.5 绘制数据 8
1.3.6 命令行选项 9
1.4 完整代码 10
1.5 运行程序 13
1.6 小结 14
1.7 实验 14
第2章 万花尺 15
2.1 参数方程 16
2.1.1 万花尺方程 17
2.1.2 海龟画图 19
2.2 所需模块 20
2.3 代码 20
2.3.1 Spiro构造函数 20
2.3.2 设置函数 21
2.3.3 restart（）方法 21
2.3.4 draw（）方法 22
2.3.5 创建动画 22
2.3.5 SpiroAnimator类 23
2.3.5 genRandomParams（）方法 24
2.3.6 重新启动程序 24
2.3.7 update（）方法 25
2.3.8 显示或隐藏光标 25
2.3.9 保存曲线 25
2.3.10 解析命令行参数和初始化 26
2.4 完整代码 27
2.5 运行万花尺动画 32
2.6 小结 33
2.7 实验 33
第二部分 模拟生命
第3章 Conway生命游戏 37
3.1 工作原理 38
3.2 所需模块 39
3.3 代码 40
3.3.1 表示网格 40
3.3.2 初始条件 41
3.3.3 边界条件 41
3.3.4 实现规则 42
3.3.5 向程序发送命令行参数 43
3.3.6 初始化模拟 43
3.4 完整代码 44
3.5 运行模拟人生的游戏 46
3.6 小结 47
3.7 实验 47
第4章 用Karplus—Strong算法产生音乐泛音 49
4.1 工作原理 51
4.1.1 模拟 51
4.1.2 创建WAV文件 52
4.1.3 小调五声音阶 53
4.2 所需模块 54
4.3 代码 54
4.3.1 用deque实现环形缓冲区 54
4.3.2 实现Karplus—Strong算法 55
4.3.3 写WAV文件 56
4.3.4 用pygame播放WAV文件 56
4.3.5 main（）方法 57
4.4 完整代码 58
4.5 运行拨弦模拟 61
4.6 小结 62
4.7 实验 62
第5章 类鸟群：仿真鸟群 63
5.1 工作原理 64
5.2 所需模块 64
5.3 代码 64
5.3.1 计算类鸟群的位置和速度 65
5.3.2 设置边界条件 66
5.3.3 绘制类鸟群 67
5.3.4 应用类鸟群规则 68
5.3.5 添加个体 70
5.3.6 驱散类鸟群 71
5.3.7 命令行参数 71
5.3.8 Boids类 71
5.4 完整代码 72
5.5 运行类鸟群模拟 75
5.6 小结 76
5.7 实验 76
第三部分 图片之乐
第6章 ASCII文本图形 79
6.1 工作原理 80
6.2 所需模块 81
6.3 代码 81
6.3.1 定义灰度等级和网格 82
6.3.2 计算平均亮度 82
6.3.3 从图像生成ASCII内容 83
6.3.4 命令行选项 84
6.3.5 将ASCII文本图形字符串写入文本文件 84
6.4 完整代码 85
6.5 运行ASCII文本图形生成程序 87
6.6 小结 87
6.7 实验 88
第7章 照片马赛克 89
7.1 工作原理 90
7.1.1 分割目标图像 90
7.1.2 平均颜色值 91
7.1.3 匹配图像 91
7.2 所需模块 92
7.3 代码 92
7.3.1 读入小块图像 92
7.3.2 计算输入图像的平均颜色值 93
7.3.3 将目标图像分割成网格 93
7.3.4 寻找小块的*佳匹配 94
7.3.5 创建图像网格 95
7.3.6 创建照片马赛克 96
7.3.7 添加命令行选项 97
7.3.8 控制照片马赛克的大小 97
7.4 完整代码 98
7.6 运行照片马赛克生成程序 102
7.7 小结 103
7.7 实验 103
第8章 三维立体画 105
8.1 工作原理 106
8.1.1 感知三维立体画中的深度 106
8.1.2 深度图 108
8.2 所需模块 109
8.3 代码 109
8.3.1 重复给定的平铺图像 109
8.3.2 从创建随机圆平铺 110
8.3.3 创建三维立体画 111
8.3.4 命令行选项 112
8.4 完整代码 113
8.5 运行三维立体画生成程序 115
8.6 小结 117
8.7 实验 117
第四部分 走进三维
第9章 理解OpenGL 121
9.1 老式OpenGL 122
9.2 现代OpenGL：三维图形管线 124
9.2.1 几何图元 124
9.2.2 三维变换 125
9.2.3 着色器 127
9.2.4 顶点缓冲区 128
9.2.5 纹理贴图 129
9.2.6 显示OpenGL 129
9.3 所需模块 130
9.4 代码 130
9.4.1 创建OpenGL窗口 130
9.4.2 设置回调 131
9.4.3 Scene类 133
9.5 完整代码 137
9.6 运行OpenGL应用程序 142
9.7 小结 143
9.8 实验 143
第10章 粒子系统 145
10.1 工作原理 146
10.1.1 为粒子运动建模 147
10.1.2 设置最大范围 147
10.1.3 渲染粒子 149
10.1.4 利用OpenGL混合来创建更逼真火花 149
10.1.5 使用公告板 150
10.1.6 生成火花动画 151
10.2 所需模块 151
10.3 粒子系统的代码 151
10.3.1 定义粒子的几何形状 152
10.3.2 为粒子定义时间延迟数组 153
10.3.3 设置粒子初始速度 153
10.3.4 创建顶点着色器 154
10.3.5 创建片段着色器 156
10.3.6 渲染 156
10.3.7 Camera类 158
10.4 粒子系统完整代码 158
10.5 盒子代码 164
10.6 主程序代码 166
10.6.1 每步更新这些粒子 167
10.6.2 键盘处理程序 168
10.6.3 管理主程序循环 168
10.7 完整主程序代码 169
10.8 运行程序 172
10.9 小结 172
10.10 实验 172
第11章 体渲染 173
11.1 工作原理 174
11.1.1 数据格式 174
11.1.2 生成光线 175
11.1.3 显示OpenGL窗口 177
11.2 所需模块 178
11.3 项目代码概述 178
11.4 生成三维纹理 178
11.5 完整的三维纹理代码 180
11.6 生成光线 181
11.6.1 定义颜色立方体的几何形状 182
11.6.2 创建帧缓冲区对象 184
11.6.3 渲染立方体的背面 185
11.6.4 渲染立方体的正面 185
11.6.5 渲染整个立方体 186
11.6.6 调整大小处理程序 187
11.7 完整的光线生成代码 187
11.8 体光线投射 192
11.8.1 顶点着色器 194
11.8.2 片段着色器 194
11.9 完整的体光线投射代码 196
11.10 二维切片 199
11.10.1 顶点着色器 201
11.10.2 片段着色器 202
11.10.3 针对二维切片的用户界面 202
11.11 完整的二维切片代码 203
11.12 代码整合 206
11.13 完整的主文件代码 207
11.14 运行程序 209
11.15 小结 210
11.16 实验 210
第五部分 玩硬件
第12章 Arduino简介 215
12.1 Arduino 216
12.2 Arduino生态系统 217
12.2.1 语言 218
12.2.2 IDE 218
12.2.3 社区 218
12.2.4 外设 219
12.3 所需模块 219
12.4 搭建感光电路 219
12.4.1 电路工作原理 219
12.4.2 Arduino程序 220
12.4.3 创建实时图表 221
12.5 Python代码 222
12.6 完整的Python代码 224
12.7 运行程序 226
12.8 小结 227
12.9 实验 227
……
第13章 激光音乐秀 229
第14章 基于树莓派的天气监控器 253
附录A 软件安装 275
附录B 基础实用电子学 281
附录C 树莓派的建议和技巧 289
文摘
版权页：
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python极客项目编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python机器学习基础教程
前言　　ix
第1章　引言　　1
1.1　为何选择机器学习　　1
1.1.1　机器学习能够解决的问题　　2
1.1.2　熟悉任务和数据　　4
1.2　为何选择Python　　4
1.3　scikit-learn　　4
1.4　必要的库和工具　　5
1.4.1　Jupyter Notebook　　6
1.4.2　NumPy　　6
1.4.3　SciPy　　6
1.4.4　matplotlib　　7
1.4.5　pandas　　8
1.4.6　mglearn　　9
1.5　Python 2与Python 3的对比　　9
1.6　本书用到的版本　　10
1.7　第一个应用：鸢尾花分类　　11
1.7.1　初识数据　　12
1.7.2　衡量模型是否成功：训练数据与测试数据　　14
1.7.3　要事第一：观察数据　　15
1.7.4　构建第一个模型：k近邻算法　　16
1.7.5　做出预测　　17
1.7.6　评估模型　　18
1.8　小结与展望　　19
第2章　监督学习　　21
2.1　分类与回归　　21
2.2　泛化、过拟合与欠拟合　　22
2.3　监督学习算法　　24
2.3.1　一些样本数据集　　25
2.3.2　k 近邻　　28
2.3.3　线性模型　　35
2.3.4　朴素贝叶斯分类器　　53
2.3.5　决策树　　54
2.3.6　决策树集成　　64
2.3.7　核支持向量机　　71
2.3.8　神经网络（深度学习）　　80
2.4　分类器的不确定度估计　　91
2.4.1　决策函数　　91
2.4.2　预测概率　　94
2.4.3　多分类问题的不确定度　　96
2.5　小结与展望　　98
第3章　无监督学习与预处理　　100
3.1　无监督学习的类型　　100
3.2　无监督学习的挑战　　101
3.3　预处理与缩放　　101
3.3.1　不同类型的预处理　　102
3.3.2　应用数据变换　　102
3.3.3　对训练数据和测试数据进行相同的缩放　　104
3.3.4　预处理对监督学习的作用　　106
3.4　降维、特征提取与流形学习　　107
3.4.1　主成分分析　　107
3.4.2　非负矩阵分解　　120
3.4.3　用t-SNE进行流形学习　　126
3.5　聚类　　130
3.5.1　k 均值聚类　　130
3.5.2　凝聚聚类　　140
3.5.3　DBSCAN　　143
3.5.4　聚类算法的对比与评估　　147
3.5.5　聚类方法小结　　159
3.6　小结与展望　　159
第4章　数据表示与特征工程　　161
4.1　分类变量　　161
4.1.1　One-Hot编码（虚拟变量）　　162
4.1.2　数字可以编码分类变量　　166
4.2　分箱、离散化、线性模型与树　　168
4.3　交互特征与多项式特征　　171
4.4　单变量非线性变换　　178
4.5　自动化特征选择　　181
4.5.1　单变量统计　　181
4.5.2　基于模型的特征选择　　183
4.5.3　迭代特征选择　　184
4.6　利用专家知识　　185
4.7　小结与展望　　192
第5章　模型评估与改进　　193
5.1　交叉验证　　194
5.1.1　scikit-learn中的交叉验证　　194
5.1.2　交叉验证的优点　　195
5.1.3　分层k 折交叉验证和其他策略　　196
5.2　网格搜索　　200
5.2.1　简单网格搜索　　201
5.2.2　参数过拟合的风险与验证集　　202
5.2.3　带交叉验证的网格搜索　　203
5.3　评估指标与评分　　213
5.3.1　牢记最终目标　　213
5.3.2　二分类指标　　214
5.3.3　多分类指标　　230
5.3.4　回归指标　　232
5.3.5　在模型选择中使用评估指标　　232
5.4　小结与展望　　234
第6章　算法链与管道　　236
6.1　用预处理进行参数选择　　237
6.2　构建管道　　238
6.3　在网格搜索中使用管道　　239
6.4　通用的管道接口　　242
6.4.1　用make_pipeline方便地创建管道　　243
6.4.2　访问步骤属性　　244
6.4.3　访问网格搜索管道中的属性　　244
6.5　网格搜索预处理步骤与模型参数　　246
6.6　网格搜索选择使用哪个模型　　248
6.7　小结与展望　　249
第7章　处理文本数据　　250
7.1　用字符串表示的数据类型　　250
7.2　示例应用：电影评论的情感分析　　252
7.3　将文本数据表示为词袋　　254
7.3.1　将词袋应用于玩具数据集　　255
7.3.2　将词袋应用于电影评论　　256
7.4　停用词　　259
7.5　用tf-idf缩放数据　　260
7.6　研究模型系数　　263
7.7　多个单词的词袋（n元分词）　　263
7.8　高级分词、词干提取与词形还原　　267
7.9　主题建模与文档聚类　　270
7.10　小结与展望　　277
第8章　全书总结　　278
8.1　处理机器学习问题　　278
8.2　从原型到生产　　279
8.3　测试生产系统　　280
8.4　构建你自己的估计器　　280
8.5　下一步怎么走　　281
8.5.1　理论　　281
8.5.2　其他机器学习框架和包　　281
8.5.3　排序、推荐系统与其他学习类型　　282
8.5.4　概率建模、推断与概率编程　　282
8.5.5　神经网络　　283
8.5.6　推广到更大的数据集　　283
8.5.7　磨练你的技术　　284
8.6　总结　　284
关于作者　　285
关于封面　　285
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python机器学习基础教程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>教孩子学编程 python语言版
第1章Python基础——认识环境1
1.1认识Python3
1.2用Python编写程序5
1.3运行Python程序5
1.4本章小结6
1.5编程挑战7
第2章海龟作图——用Python绘图9
2.1第一个海龟程序10
2.1.1程序是如何工作的10
2.1.2发生了什么12
2.2旋转的海龟13
2.3海龟画圆14
2.4添加颜色15
2.4.1一个四色螺旋线16
2.4.2修改背景颜色19
2.5一个变量搞定一切20
2.6本章小结22
2.7编程挑战22
第3章数字和变量——用Python做数学运算24
3.1变量——保存内容的地方25
3.2Python中的数字和数学运算26
3.2.1Python数字27
3.2.2Python操作符28
3.2.3在Pythonshell中进行数学运算28
3.2.4语法错误——你说什么？29
3.2.5Pythonshell中的变量30
3.2.6用操作符编程——披萨计算器31
3.3字符串——Python中真正的字符33
3.4用字符串改进彩色螺旋线35
3.5列表——将所有内容放到一起36
3.6Python做作业38
3.7本章小结40
3.8编程挑战41
第4章循环很有趣（你可以再说一遍）42
4.1构建自己的循环43
4.1.1使用for循环生成4个圆组成的玫瑰花瓣44
4.1.2修改循环让玫瑰花瓣带有6个圆46
4.2把玫瑰花瓣程序改进为允许用户输入48
4.3游戏循环和while循环50
4.4家庭成员螺旋线52
4.5整合——病毒式的螺旋线55
4.6本章小结59
4.7编程挑战60
第5章条件（如果是这样该怎么办？）62
5.1if语句63
5.2认识布尔值65
5.2.1比较操作符66
5.2.2你还不够大！68
5.3else语句69
5.3.1多边形或玫瑰花瓣70
5.3.2偶数还是奇数71
5.4elif语句74
5.5复杂条件——if、and、or和not75
5.6秘密消息77
5.6.1打乱字符串78
5.6.2字符的值79
5.6.3加密／解密程序80
5.7本章小结82
5.8编程挑战83
第6章随机的乐趣和游戏（继续前进，抓住机会！）85
6.1猜数字游戏86
6.2彩色的随机螺旋线88
6.2.1选取颜色，任意的颜色89
6.2.2获取坐标90
6.2.3画布有多大92
6.2.4整合93
6.3Rock—Paper—Scissors95
6.4选一张牌，任意一张牌97
6.4.1堆牌97
6.4.2发牌98
6.4.3计算牌面99
6.4.4继续前进101
6.4.5整合102
6.5掷骰子103
6.5.1设置游戏104
6.5.2对骰子排序104
6.5.3测试骰子105
6.5.4整合106
6.6万花筒109
6.7本章小结112
6.8编程挑战114
第7章函数（那些东西有了一个名字）116
7.1用函数整合内容117
7.1.1定义random_spiral（）118
7.1.2调用random_spiral（）119
7.2参数——传给函数120
7.2.1在随机位置微笑121
7.2.2整合125
7.3返回——发回统计结果127
7.3.1从函数返回一个值127
7.3.2在程序中使用返回值128
7.4交互简介130
7.4.1处理事件——TurtleDraw130
7.4.2监听键盘事件：ArrowDraw133
7.4.3用参数处理事件——ClickSpiral135
7.4.4更进一步——ClickandSmile137
7.5ClickKaleidoscope139
7.5.1draw_kaleido（）函数139
7.5.2draw_spiral（）函数140
7.5.3整合140
7.6本章小结142
7.7编程挑战143
第8章定时器和动画144
8.1获取Pygame的所有GUI145
8.1.1用Pygame画一个点146
8.1.2Pygame中的新内容148
8.1.3游戏的部分149
8.2时间刚刚好——移动和弹跳152
8.2.1移动笑脸153
8.2.2用Clock类实现笑脸动画155
8.2.3将笑脸从墙上弹开157
8.2.4在四面墙上弹回笑脸162
8.3本章小结166
8.4编程挑战167
第9章用户交互——进入游戏170
9.1增加交互——点击和拖动171
9.1.1点击点.171
9.1.2拖动绘制173
9.2高级交互——笑脸爆炸177
9.2.1笑脸精灵178
9.2.2设置精灵180
9.2.3更新精灵182
9.2.4较大的和较小的笑脸182
9.2.5整合183
9.3SmileyPop1.0版185
9.3.1检测碰撞和删除精灵185
9.3.2整合186
9.4本章小结188
9.5编程挑战189
第10章游戏编程191
10.1构建游戏框架——Smiley Pong 1.0版192
10.1.1绘制游戏板和游戏部件193
10.1.2记录分数194
10.1.3显示得分199
10.1.4整合201
10.2增加难度并结束游戏——Smiley Pong 2.0版202
10.2.1游戏结束203
10.2.2再玩一次203
10.2.3更快204
10.2.4整合206
10.3添加更多的功能——Smiley Pop 2.0版208
10.3.1使用Pygame添加声音208
10.3.2跟踪和记录玩家进度210
10.3.3整合213
10.4本章小结215
10.5编程挑战216
附录AWindows、Mac和Linux下的Python安装218
A.1Windows下安装Python219
A.1.1下载安装程序219
A.1.2运行安装程序220
A.1.3尝试Python223
A.2Mac下的Python225
A.2.1下载安装程序225
A.2.2运行安装程序226
A.2.3尝试Python229
A.3Linux下的Python安装230
附录BWindows、Mac和Linux下的Pygame安装233
B.1在Windows下安装Pygame234
B.2Mac下的Pygame238
B.2.1Python2.7和Pygame1.9.2238
B.3Linux下的Pygame240
B.3.1PygameforPython2241
附录C构建自己的模块242
C.1构建colorspiral模块243
C.1.1使用colorspiral模块244
C.1.2重用colorspiral模块245
C.2附加资料246
术语表247
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>教孩子学编程 python语言版
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python 3面向对象编程
第1 章 面向对象设计 ...................................................................................................... 1
面向对象 ............................................................................................................................. 1
对象和类 ............................................................................................................................. 3
指定属性和行为 ................................................................................................................. 5
数据描述对象 ............................... ..................................................................................... 5
行为是动作 ............................................................................... .......................................... 7
隐藏细节并且创建公共接口 .............................................................................................. 8
组合和继承 ......................................................................................................................... 10
继承 ..................................................................................................................................... 12
案例学习 ............................................................................................................................. 15
练习 ..................................................................................................................................... 22
总结 ..................................................................................................................................... 23
第2 章 Python 对象 ...................................................................................................... .. 24
创建Python 类 ................................................................................................................... 24
添加属性 ............................................................................................................................. 26
让类实际做一些事情 ..................................................................................................... ... 26
对象的初始化 ..................................................................................................................... 29
解释你自己 ......................................................................................................................... 32
模块和包 ............................................................................................................................. 34
组织模块 ............................................................................................................................. 36
谁可以访问我的数据 ......................................................................................................... 41
案例学习 .......................................................................................................................... 43
练习 .................................................................................................................................. 52
总结 .................................................................................................................................. 53
第3 章 当对象是相似的 ............................................................................................... 54
基本继承 .......................................................................................................................... 54
扩展内置类 ...................................................................................................................... 56
重写和Super ..................................................................................................................... 58
多重继承 .......................................................................................................................... 59
钻石的问题 ...................................................................................................................... 61
不同的参数集合 .............................................................................................................. 66
多态 .................................................................................................................................. 68
案例学习 .......................................................................................................................... 71
练习 .................................................................................................................................. 84
总结 .................................................................................................................................. 85
第4 章 异常处理 ........................................................................................................... 86
抛出异常 .......................................................................................................................... 86
抛出一个异常 .................................................................................................................. 88
当一个异常产生时发生了什么 ...................................................................................... 90
异常处理 .......................................................................................................................... 91
异常层级 .......................................................................................................................... 97
定义自己的异常 .............................................................................................................. 98
异常不是例外 .................................................................................................................. 99
案例学习 ......................................................................................................................... 102
练习 ................................................................................................................................. 112
总结 ................................................................................................................................. 113
第5 章 何时使用面向对象编程 .................................................................................. 114
把对象当作“对象”来对待 .......................................................................................... 114
使用property 为类中的数据添加行为 ......................................................................... 118
property 是怎样工作的 .................................................................................................. 121
装饰器：创建property 的另一种方法 ..........................................................................123
何时该使用property 属性 ..............................................................................................125
管理对象 ........................................................................................................................... 127
移除重复的代码 ................................................................................................................130
实践一下 ........................................................................................................................... 131
或者我们可以使用组合 ....................................................................................................135
案例学习 ........................................................................................................................... 137
练习 ................................................................................................................................... 145
总结 ................................................................................................................................... 146
第6 章 Python 数据结构 ............................................................................................... 147
空对象 ............................................................................................................................... 147
元组和命名元组 ............................................................................................................... 148
命名元组 ........................................................................................................................... 150
字典 ................................................................................................................................... 152
何时应该使用字典 ........................................................................................................... 155
使用defaultdict ................................................................................................................. 156
列表 .................................................................................................................................. 157
对列表排序 ...................................................................................................................... 160
集合 .................................................................................................................................. 162
扩展内置数据类型 .......................................................................................................... 166
案例学习 .......................................................................................................................... 171
练习 .................................................................................................................................. 178
总结 .................................................................................................................................. 178
第7 章 Python 里面向对象的快捷方式 ...................................................................... 180
Python 内置函数 ............................................................................................................. 180
Len ...................................................................................................................................... 180
Reversed ............................................................................................................................. 181
Enumerate .......................................................................................................................... 182
Zip ....................................................................................................................................... 183
其他函数 ........................................................................................................................... 185
解析 ................................................................................................................................... 186
列表解析 ........................................................................................................................... 186
集合和字典解析 ............................................................................................................... 188
生成器表达式 ................................................................................................................... 189
生成器 ............................................................................................................................... 191
方法重载的另一种选择 ................................................................................................... 194
默认参数 ........................................................................................................................... 195
可变参数列表 ................................................................................................................... 197
参数拆分 ........................................................................................................................... 201
函数也是对象 ................................................................................................................... 202
使用函数作为属性 ........................................................................................................... 206
可调用对象 ....................................................................................................................... 207
案例学习 ........................................................................................................................... 208
练习 ................................................................................................................................... 212
总结 ................................................................................................................................... 213
第8 章 设计模式1 .......................................................................................................... 214
设计模式 ........................................................................................................................... 214
装饰器模式 ....................................................................................................................... 215
装饰器实例 ....................................................................................................................... 216
Python 中的装饰器模式 ................................................................................................. 219
观察者模式 ...................................................................................................................... 221
观察者实例 ...................................................................................................................... 222
策略模式 .......................................................................................................................... 224
策略实例 .......................................................................................................................... 225
Python 中的策略模式 .....................................................................................................226
状态模式 .......................................................................................................................... 227
状态实例 .......................................................................................................................... 227
状态和策略模式的对比 ...................................................................................................233
单件模式 .......................................................................................................................... 234
单件的实现方式 ..............................................................................................................234
模块变量能够模仿单件 ..................................................................................................235
模板模式 ......................................................................................................................... 238
模板实例 ......................................................................................................................... 238
练习 ................................................................................................................................. 242
总结 ................................................................................................................................. 243
第9 章 设计模式2 ........................................................................................................ 244
适配器模式 ..................................................................................................................... 244
外观模式 ......................................................................................................................... 247
享元模式 ......................................................................................................................... 250
命令模式 ......................................................................................................................... 254
抽象工厂模式 ................................................................................................................. 259
组合模式 ......................................................................................................................... 263
练习 ................................................................................................................................. 267
总结 ................................................................................................................................. 268
第10 章 文件和字符串 ................................................................................................ 270
字符串 ............................................................................................................................. 270
字符串操作 ..................................................................................................................... 271
字符串格式化 ................................................................................................................. 274
字符串是Unicode 的 .................................................................................................... 281
可变字节字符串 ............................................................................................................ 285
文件I/O ........................................................................................................................... 286
把它放在上下文 ............................................................................................................ 287
伪造文件 ....................................................................................................................... 289
存储对象 ....................................................................................................................... 290
定制pickle ...................................................................................................................... 292
序列化Web 对象 ......................................................................................................... 294
练习 ............................................................................................................................... 297
总结 ............................................................................................................................... 299
第11 章 测试面向对象的程序 .................................................................................. 300
为什么要测试 ............................................................................................................... 300
测试驱动开发 ............................................................................................................... 302
单元测试 ....................................................................................................................... 303
断言方法 ....................................................................................................................... 304
减少样板和清理 ........................................................................................................... 306
组织和运行测试 ........................................................................................................... 308
忽略失败的测试 ........................................................................................................... 309
用py.test 测试 ............................................................................................................. 311
一个处理安装和清理的方法 ....................................................................................... 313
一种完全不同的变量设置方式 ................................................................................... 316
用py.test 跳过测试 ..................................................................................................... 320
py.test 的补充 .............................................................................................................. 321
多少测试才算够 .......................................................................................................... 323
案例学习 ...................................................................................................................... 326
实现它 ....................................................................................................................... 327
练习 .......................................................................................................................... 332
总结 .......................................................................................................................... 333
第12 章 常用Python 3 库 .................................................................................... 334
数据库访问 .............................................................................................................. 335
引入SQLAlchemy ...................................................................................................... 336
漂亮的用户界面 ...................................................................................................... 340
TkInter ........................................................................................................................ 341
PyQt ........................................................................................................................... 345
选择一个GUI 工具包 ............................................................................................. 347
XML ............................................................................................................................ 348
ElementTree ............................................................................................................... 349
Lxml ........................................................................................................................... 353
CherryPy .................................................................................................................... 354
一个完整的Web 堆栈 ........................................................................................... 357
练习 ......................................................................................................................... 363
总结 ......................................................................................................................... 364
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python 3面向对象编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>强化学习：原理与Python实现
前言
第1章　初识强化学习  1
1.1　强化学习及其关键元素  1
1.2　强化学习的应用  3
1.3　智能体/环境接口  4
1.4　强化学习的分类  6
1.4.1　按任务分类  6
1.4.2　按算法分类  7
1.5　如何学习强化学习  8
1.5.1　学习路线  9
1.5.2　学习资源  9
1.6　案例：基于Gym库的智能体/环境交互  9
1.6.1　安装Gym库  10
1.6.2　使用Gym库  10
1.6.3　小车上山  12
1.7　本章小结  14
第2章　Markov决策过程  16
2.1　Markov决策过程模型  16
2.1.1　离散时间Markov决策过程  16
2.1.2　环境与动力  18
2.1.3　智能体与策略  19
2.1.4　奖励、回报与价值函数  19
2.2　Bellman期望方程  21
2.3　最优策略及其性质  25
2.3.1　最优策略与最优价值函数  25
2.3.2　Bellman最优方程  25
2.3.3　用Bellman最优方程求解最优策略  29
2.4　案例：悬崖寻路  31
2.4.1　实验环境使用  31
2.4.2　求解Bellman期望方程  32
2.4.3　求解Bellman最优方程  33
2.5　本章小结  35
第3章　有模型数值迭代  37
3.1　度量空间与压缩映射  37
3.1.1　度量空间及其完备性  37
3.1.2　压缩映射与Bellman算子  38
3.1.3　Banach不动点定理  39
3.2　有模型策略迭代  40
3.2.1　策略评估  40
3.2.2　策略改进  42
3.2.3　策略迭代  44
3.3　有模型价值迭代  45
3.4　动态规划  46
3.4.1　从动态规划看迭代算法  46
3.4.2　异步动态规划  47
3.5　案例：冰面滑行  47
3.5.1　实验环境使用  48
3.5.2　有模型策略迭代求解  49
3.5.3　有模型价值迭代求解  51
3.6　本章小结  52
第4章　回合更新价值迭代  54
4.1　同策回合更新  54
4.1.1　同策回合更新策略评估  54
4.1.2　带起始探索的同策回合更新  58
4.1.3　基于柔性策略的同策回合更新  60
4.2　异策回合更新  62
4.2.1　重要性采样  62
4.2.2　异策回合更新策略评估  64
4.2.3　异策回合更新最优策略求解  65
4.3　案例：21点游戏  66
4.3.1　实验环境使用  66
4.3.2　同策策略评估  67
4.3.3　同策最优策略求解  70
4.3.4　异策策略评估  72
4.3.5　异策最优策略求解  73
4.4　本章小结  74
第5章　时序差分价值迭代  76
5.1　同策时序差分更新  76
5.1.1　时序差分更新策略评估  78
5.1.2　SARSA算法  81
5.1.3　期望SARSA算法  83
5.2　异策时序差分更新  85
5.2.1　基于重要性采样的异策算法  85
5.2.2　Q学习  86
5.2.3　双重Q学习  87
5.3　资格迹  89
5.3.1　λ回报  89
5.3.2　TD(λ)  90
5.4　案例：出租车调度  92
5.4.1　实验环境使用  93
5.4.2　同策时序差分学习调度  94
5.4.3　异策时序差分学习调度  97
5.4.4　资格迹学习调度  99
5.5　本章小结  100
第6章　函数近似方法  101
6.1　函数近似原理  101
6.1.1　随机梯度下降  101
6.1.2　半梯度下降  103
6.1.3　带资格迹的半梯度下降  105
6.2　线性近似  107
6.2.1　精确查找表与线性近似的关系  107
6.2.2　线性最小二乘策略评估  107
6.2.3　线性最小二乘最优策略求解  109
6.3　函数近似的收敛性  109
6.4　深度Q学习  110
6.4.1　经验回放  111
6.4.2　带目标网络的深度Q学习  112
6.4.3　双重深度Q网络  114
6.4.4　对偶深度Q网络  114
6.5　案例：小车上山  115
6.5.1　实验环境使用  116
6.5.2　用线性近似求解最优策略  117
6.5.3　用深度Q学习求解最优策略  120
6.6　本章小结  123
第7章　回合更新策略梯度方法  125
7.1　策略梯度算法的原理  125
7.1.1　函数近似与动作偏好  125
7.1.2　策略梯度定理  126
7.2　同策回合更新策略梯度算法  128
7.2.1　简单的策略梯度算法  128
7.2.2　带基线的简单策略梯度算法  129
7.3　异策回合更新策略梯度算法  131
7.4　策略梯度更新和极大似然估计的关系  132
7.5　案例：车杆平衡  132
7.5.1　同策策略梯度算法求解最优策略  133
7.5.2　异策策略梯度算法求解最优策略  135
7.6　本章小结  137
第8章　执行者/评论者方法  139
8.1　同策执行者/评论者算法  139
8.1.1　动作价值执行者/评论者算法  140
8.1.2　优势执行者/评论者算法  141
8.1.3　带资格迹的执行者/评论者算法  143
8.2　基于代理优势的同策算法  143
8.2.1　代理优势  144
8.2.2　邻近策略优化  145
8.3　信任域算法  146
8.3.1　KL散度  146
8.3.2　信任域  147
8.3.3　自然策略梯度算法  148
8.3.4　信任域策略优化  151
8.3.5　Kronecker因子信任域执行者/评论者算法  152
8.4　重要性采样异策执行者/评论者算法  153
8.4.1　基本的异策算法  154
8.4.2　带经验回放的异策算法  154
8.5　柔性执行者/评论者算法  157
8.5.1　熵  157
8.5.2　奖励工程和带熵的奖励  158
8.5.3　柔性执行者/评论者的网络设计  159
8.6　案例：双节倒立摆  161
8.6.1　同策执行者/评论者算法求解最优策略  162
8.6.2　异策执行者/评论者算法求解最优策略  168
8.7　本章小结  170
第9章　连续动作空间的确定性策略  172
9.1　同策确定性算法  172
9.1.1　策略梯度定理的确定性版本  172
9.1.2　基本的同策确定性执行者/评论者算法  174
9.2　异策确定性算法  176
9.2.1　基本的异策确定性执行者/评论者算法  177
9.2.2　深度确定性策略梯度算法  177
9.2.3　双重延迟深度确定性策略梯度算法  178
9.3　案例：倒立摆的控制  180
9.3.1　用深度确定性策略梯度算法求解  181
9.3.2　用双重延迟深度确定性算法求解  184
9.4　本章小结  187
第10章　综合案例：电动游戏  188
10.1　Atari游戏环境  188
10.1.1　Gym库的完整安装  188
10.1.2　游戏环境使用  190
10.2　基于深度Q学习的游戏AI  191
10.2.1　算法设计  192
10.2.2　智能体的实现  193
10.2.3　智能体的训练和测试  197
10.3　本章小结  198
第11章　综合案例：棋盘游戏  200
11.1　双人确定性棋盘游戏  200
11.1.1　五子棋和井字棋  200
11.1.2　黑白棋  201
11.1.3　围棋  202
11.2　AlphaZero算法  203
11.2.1　回合更新树搜索  203
11.2.2　深度残差网络  206
11.2.3　自我对弈  208
11.2.4　算法流程  210
11.3　棋盘游戏环境boardgame2  210
11.3.1　为Gym库扩展自定义环境  211
11.3.2　boardgame2设计  211
11.3.3　Gym环境接口的实现  214
11.3.4　树搜索接口的实现  216
11.4　AlphaZero算法实现  218
11.4.1　智能体类的实现  218
11.4.2　自我对弈的实现  223
11.4.3　训练智能体  224
11.5　本章小结  225
第12章　综合案例：自动驾驶  226
12.1　AirSim开发环境使用  226
12.1.1　安装和运行AirSim  226
12.1.2　用Python访问AirSim  228
12.2　基于强化学习的自动驾驶  229
12.2.1　为自动驾驶设计强化学习环境  230
12.2.2　智能体设计和实现  235
12.2.3　智能体的训练和测试  237
12.3　本章小结  239
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>强化学习：原理与Python实现
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>零起点Python大数据与量化交易
第1章  从故事开始学量化	1
1.1  亿万富翁的“神奇公式”	2
1.1.1  案例1-1：亿万富翁的“神奇公式”	2
1.1.2  案例分析：Python图表	5
1.1.3  matplotlib绘图模块库	7
1.1.4  案例分析：style绘图风格	10
1.1.5  案例分析：colormap颜色表	12
1.1.6  案例分析：颜色表关键词	14
1.1.7  深入浅出	17
1.2  股市“一月效应”	18
1.2.1  案例1-2：股市“一月效应”	18
1.2.2  案例分析：“一月效应”计算	19
1.2.3  案例分析：“一月效应”图表分析	24
1.2.4  案例分析：颜色表效果图	26
1.2.5  “一月效应”全文注解版Python源码	27
1.2.6  大数据·宏分析	34
1.3  量化交易流程与概念	36
1.3.1  数据分析I2O流程	36
1.3.2  量化交易不是高频交易、自动交易	37
1.3.3  小资、小白、韭菜	38
1.3.4  专业与业余	38
1.4  用户运行环境配置	42
1.4.1  程序目录结构	43
1.4.2  金融股票数据包	44
1.5  Python实战操作技巧	46
1.5.1  模块检测	46
1.5.2  Spyder编辑器界面设置	47
1.5.3  代码配色技巧	48
1.5.4  图像显示配置	50
1.5.5  Python2、Python 3双版本双开模式	51
1.5.6  单版本双开、多开模式	52
1.5.7  实战胜于一切	54
1.6  量化、中医与西医	54
第2章  常用量化技术指标与框架	56
2.1  案例2-1：SMA均线策略	56
2.1.1  案例要点与事件编程	58
2.1.2  量化程序结构	61
2.1.3  main程序主入口	61
2.1.4  KISS法则	63
2.2  Python量化系统框架	64
2.2.1  量化行业关键词	64
2.2.2  国外主流Python量化网站	65
2.2.3  我国主流Python量化网站	67
2.2.4  主流Python量化框架	70
2.3  常用量化软件包	78
2.3.1  常用量化软件包简介	79
2.3.2  案例2-2：模块库列表	80
2.4  常用量化技术指标	82
2.4.1  TA-Lib金融软件包	83
2.4.2  案例2-3：MA均线函数调用	84
2.4.3  TA-Lib函数调用	86
2.4.4  量化分析常用指标	88
2.5  经典量化策略	90
2.5.1  阿尔法（Alpha）策略	90
2.5.2  Beta策略	92
2.5.3  海龟交易法则	93
2.5.4  ETF套利策略	95
2.6  常用量化策略	95
2.6.1  动量交易策略	96
2.6.2  均值回归策略	97
2.6.3  其他常用量化策略	98
2.7  起点与终点	100
第3章  金融数据采集整理	101
3.1  常用数据源API与模块库	102
3.1.1  大数据综合API	102
3.1.2  专业财经数据API	103
3.1.3  专业数据模块库	104
3.2  案例3-1：zwDatX数据类	104
3.3  美股数据源模块库	108
3.4  开源文档库Read the Docs	109
3.5  案例3-2：下载美股数据	110
3.6  财经数据源模块库TuShare	113
3.6.1  沪深股票列表	115
3.6.2  案例3-3：下载股票代码数据	116
3.6.3  CSV文件处理	119
3.7  历史数据	121
3.7.1  历史行情	121
3.7.2  案例3-4：下载近期股票数据	124
3.7.3  历史复权数据	130
3.7.4  案例3-5：下载历史复权数据	131
3.8  其他交易数据	134
3.9  zwDat超大股票数据源与数据更新	143
3.9.1  案例3-6：A股基本概况数据下载	144
3.9.2  案例3-7：A股交易数据下载	146
3.9.3  案例3-8：A股指数行情数据下载	150
3.9.4  案例3-9：美股交易数据下载	151
3.10  数据归一化处理	153
3.10.1  中美股票数据格式差异	153
3.10.2  案例3-10：数据格式转化	154
3.10.3  案例3-11：A股策略PAT实盘分析	156
3.10.4  案例3-12：数据归一化	158
3.11  为有源头活水来	160
第4章  PAT案例汇编	162
4.1  投资组合与回报率	163
4.1.1  案例4-1：下载多组美股数据	163
4.1.2  案例4-2：投资组合收益计算	165
4.2  SMA均线策略	168
4.2.1  SMA简单移动平均线	168
4.2.2  案例4-3：原版SMA均线策略	169
4.2.3  案例4-4：增强版SMA均线策略	173
4.2.4  案例4-5：A股版SMA均线策略	174
4.3  均线交叉策略	175
4.3.1  案例4-6：均线交叉策略	176
4.3.2  案例4-7：A股版均线交叉策略	178
4.4  VWAP动量策略	181
4.4.1  案例4-8：VWAP动量策略	182
4.4.2  案例4-9：A股版VWAP动量策略	183
4.5  布林带策略	183
4.5.1  案例4-10：布林带策略	185
4.5.2  案例4-11：A股版布林带策略	186
4.6  RSI2策略	188
4.6.1  案例4-12：RSI2策略	190
4.6.2  案例4-13：A股版RSI2策略	190
4.7  案例与传承	194
第5章  zwQuant整体架构	196
5.1  发布前言	196
5.2  功能简介	197
5.2.1  目录结构	197
5.2.2  安装与更新	198
5.2.3  模块说明	199
5.2.4  zwSys模块：系统变量与类定义	200
5.2.5  zwTools模块：常用（非量化）工具函数	201
5.2.6  zwQTBox：常用“量化”工具函数集	201
5.2.7  zwQTDraw.py：量化绘图工具函数	203
5.2.8  zwBacktest：回溯测试工具函数	203
5.2.9  zwStrategy：策略工具函数	203
5.2.10  zw_TA-Lib：金融函数模块	204
5.3  示例程序	207
5.4  常用量化分析参数	208
5.5  回溯案例：对标测试	209
5.5.1  对标测试1：投资回报参数	209
5.5.2  对标测试2：VWAP策略	211
5.6  回报参数计算	214
5.7  主体框架	220
5.7.1  stkLib内存数据库	220
5.7.2  Bars数据包	221
5.7.3  案例：内存数据库&数据包	222
5.7.4  qxLib、xtrdLib	227
5.7.5  案例5-1：qxLib数据	228
5.7.6  量化系统的价格体系	230
5.7.7  数据预处理	231
5.7.8  绘图模板	234
5.8  新的起点	236
第6章  模块详解与实盘数据	237
6.1  回溯流程	238
6.1.1  案例6-1：投资回报率	238
6.1.2  代码构成	242
6.1.3  运行总流程	243
6.2  运行流程详解	244
6.2.1  设置股票数据源	244
6.2.2  设置策略参数	247
6.2.3  dataPre数据预处理	249
6.2.4  绑定策略函数	253
6.2.5  回溯测试：zwBackTest	253
6.2.6  输出回溯结果数据、图表	258
6.3  零点策略	260
6.3.1  mul多个时间点的交易&数据	263
6.3.2  案例6-2：多个时间点交易	264
6.4  不同数据源与格式修改	270
6.4.1  案例6-3：数据源修改	272
6.4.2  数据源格式修改	274
6.5  金融数据包与实盘数据更新	275
6.5.1  大盘指数文件升级	276
6.5.2  实盘数据更新	277
6.5.3  案例6-4：A股实盘数据更新	277
6.5.4  案例6-5：大盘指数更新	279
6.6  稳定第一	281
第7章  量化策略库	282
7.1  量化策略库简介	282
7.1.1  量化系统的三代目	283
7.1.2  通用数据预处理函数	283
7.2  SMA均线策略	286
7.2.1  案例7-1：SMA均线策略	286
7.2.2  实盘下单时机与推荐	289
7.2.3  案例7-2：实盘SMA均线策略	290
7.3  CMA均线交叉策略	294
7.3.1  案例7-3：均线交叉策略	294
7.3.2  对标测试误差分析	296
7.3.3  案例7-4：CMA均线交叉策略修改版	299
7.3.4  人工优化参数	300
7.4  VWAP策略	301
7.4.1  案例7-5：VWAP策略	301
7.4.2  案例7-6：实盘VWAP策略	303
7.5  BBands布林带策略	304
7.5.1  案例7-7：BBands布林带策略	305
7.5.2  案例7-8：实盘BBands布林带策略	306
7.6  大道至简1+1	307
第8章  海龟策略与自定义扩展	309
8.1  策略库	309
8.1.1  自定义策略	310
8.1.2  海龟投资策略	310
8.2  tur海龟策略v1：从零开始	311
8.3  案例8-1：海龟策略框架	311
8.4  tur海龟策略v2：策略初始化	312
8.5  案例8-2：策略初始化	312
8.6  tur海龟策略v3：数据预处理	313
8.7  案例8-3：数据预处理	314
8.8  tur海龟策略v4：策略分析	317
8.9  案例8-4：策略分析	317
8.10  tur海龟策略v5：数据图表输出	320
8.10.1  案例8-5：图表输出	320
8.10.2  参数优化	324
8.10.3  案例8-6：参数优化	324
8.11  tur海龟策略v9：加入策略库	325
8.12  案例8-7：入库	326
8.13  庖丁解牛	328
第9章  TA-Lib函数库与策略开发	329
9.1  TA-Lib技术指标	329
9.1.1  TA-Lib官网	329
9.1.2  矩阵版TA-Lib金融函数模块	330
9.2  MACD策略	331
9.2.1  MACD策略1	331
9.2.2  案例9-1：MACD_v1	335
9.2.3  MACD策略2	336
9.2.4  案例9-2：MACD_v2	338
9.3  KDJ策略	340
9.3.1  KDJ策略1	340
9.3.2  案例9-3：KDJ01	343
9.3.3  KDJ策略2	346
9.3.4  案例9-4：KDJ02	347
9.4  RSI策略	350
9.4.1  RSI取值的大小	351
9.4.2  RSI策略	351
9.4.3  预留参数优化接口	356
9.4.4  案例9-5：A股版RSI策略	357
9.5  基石、策略与灵感	358
第10章  扩展与未来	360
10.1  回顾案例2-1：SMA均线策略	360
案例10-1：SMA均线策略扩展	363
10.2  大盘指数资源	365
10.2.1  大盘指数文件升级	366
10.2.2  大盘指数内存数据库	367
10.2.3  扩展zwQuantX类变量	368
10.2.4  大盘指数读取函数	368
10.2.5  案例10-2：读取指数	369
10.2.6  大盘数据切割	370
10.2.7  案例10-3：inxCut数据切割	372
10.3  系统整合	373
10.3.1  案例10-4：整合设置	375
10.3.2  案例10-5：修改指数代码	376
10.3.3  修改sta_dataPre0xtim函数	377
10.3.4  案例10-6：整合数据切割	380
10.3.5  修改绘图函数	381
10.4  扩展完成	384
案例10-7：SMA均线扩展策略	384
10.5  其他扩展课题	386
10.5.1  复权数据冲突	386
10.5.2  波动率指标DVIX	386
10.5.3  修改回溯主函数zwBackTest	387
10.5.4  案例10-8：波动率	390
10.5.5  空头交易	392
10.5.6  虚拟空头交易	392
10.5.7  修改检查函数	393
10.5.8  案例10-9：空头数据	396
10.6  终点与起点	397
附录A  zwPython开发平台用户手册	398
附录B  Python量化学习路线图	423
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>零起点Python大数据与量化交易
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python编程入门经典
第Ⅰ部分  初步了解Python
第1章  编程基础和字符串	3
1.1  编程与使用计算机的区别	3
1.1.1  编程的一致性	3
1.1.2  编程的可控性	4
1.1.3  程序要应对变化	4
1.1.4  小结	4
1.2  准备工作	4
1.2.1  在非Windows系统上安装
Python 3.1	5
1.2.2  使用Python Shell	5
1.3  开始使用Python——字符串	6
1.3.1  字符串概述	6
1.3.2  为什么需要引号	6
1.3.3  为什么有3种类型的引号	7
1.3.4  使用print()函数	7
1.3.5  理解不同的引号	8
1.4  串联两个字符串	10
1.5  用不同的方法串联字符串	11
1.6  本章小结	12
1.7  习题	13
第2章  数值与运算符	15
2.1  不同类型的数值	15
2.2  程序文件	17
2.2.1  使用不同的类型	18
2.2.2  基本算术	20
2.2.3  一些惊喜	22
2.3  使用数值	23
2.3.1  求值顺序	23
2.3.2  数值格式	24
2.3.3  可能会发生的错误	25
2.3.4  几个不寻常的例子	26
2.4  本章小结	26
2.5  习题	27
第3章  变量	29
3.1  引用数据——使用数据的
名称	29
3.1.1  使用名称修改数据	30
3.1.2  复制数据	31
3.1.3  禁用的名称以及一些规则	31
3.2  使用更多的内置类型	31
3.2.1  元组——不可更改的数据
序列	32
3.2.2  列表——可以更改的数据
序列	35
3.2.3  字典——以名称索引的分组
数据	36
3.2.4  像列表一样处理字符串	38
3.2.5  特殊类型	39
3.3  序列的其他共有属性	40
3.3.1  引用最后一个元素	40
3.3.2  序列的范围	41
3.3.3  通过附加序列增长列表	41
3.3.4  使用列表临时存储数据	42
3.3.5  处理集合	43
3.4  本章小结	44
3.5  习题	44
第Ⅱ部分  Python语言和标准库
第4章  做出决策	49
4.1  比较两个值是否相等	49
4.2  比较两个值是否不相等	51
4.3  比较两个值的大小	51
4.4  对真值和假值取反	53
4.5  观察多个比较运算的结果	54
4.6  循环	57
4.6.1  重复执行操作	57
4.6.2  终止循环	59
4.7  处理错误	62
4.8  本章小结	64
4.9  习题	65
第5章  函数	67
5.1  将程序放在单独的文件中	67
5.2  函数：在一个名称下聚集
代码	69
5.2.1  选择名称	70
5.2.2  在函数中描述函数	70
5.2.3  不同的位置相同的名称	72
5.2.4  添加注释	73
5.2.5  要求函数使用提供的值	73
5.2.6  检查参数	75
5.2.7  为参数设置默认值	77
5.2.8  在函数中调用其他函数	78
5.2.9  函数嵌套函数	80
5.2.10  用自己的词语标记错误	81
5.3  函数的层次	81
5.4  本章小结	82
5.5  习题	83
第6章  类与对象	85
6.1  考虑编程	85
6.1.1  对象的含义	85
6.1.2  已经了解的对象	85
6.1.3  展望：如何使用对象	87
6.2  定义类	87
6.2.1  如何创建对象	87
6.2.2  对象和它们的作用域	95
6.3  本章小结	98
6.4  习题	99
第7章  组织程序	101
7.1  模块	102
7.1.1  导入可用模块	102
7.1.2  通过已有模块创建新模块	102
7.1.3  从命令行开始使用模块	104
7.1.4  改变导入方式	106
7.2  包	106
7.3  模块和包	108
7.3.1  将所有内容引入当前
作用域	108
7.3.2  重新导入模块和包	109
7.4  测试模块和包的基础知识	111
7.5  本章小结	112
7.6  习题	112
第8章  文件和目录	115
8.1  文件对象	115
8.1.1  编写文本文件	116
8.1.2  向文件中追加文本	116
8.1.3  读文本文件	117
8.1.4  文件异常	119
8.2  路径和目录	119
8.3  os中的异常	119
8.3.1  路径	120
8.3.2  目录内容	122
8.3.3  获取文件信息	123
8.3.4  重命名、移动、复制和删除
文件	125
8.3.5  示例：轮换文件	126
8.3.6  创建和删除目录	127
8.3.7  通配	128
8.4  本章小结	129
8.5  习题	129
第9章  Python语言的其他特性	131
9.1  lambda和filter：简单匿名
函数	131
9.2  Map：短路循环	132
9.3  在列表中做出决策——
列表解析	133
9.4  为循环生成迭代器	133
9.5  使用字典的特殊字符串
替换	135
9.6  重要模块	137
9.6.1  getopt——从命令行中得到
选项	137
9.6.2  使用一个以上的进程	139
9.6.3  线程——在相同的进程中
完成多个工作	141
9.7  本章小结	143
9.8  习题	144
第10章  创建模块	145
10.1  研究模块	145
10.1.1  导入模块	147
10.1.2  查找模块	147
10.1.3  理解模块	148
10.2  创建模块和包	149
10.3  使用类	150
10.3.1  定义面向对象编程	151
10.3.2  创建类	151
10.3.3  扩展已有的类	152
10.4  完成模块	153
10.4.1  定义模块特定的错误	154
10.4.2  选择导出哪些内容	154
10.4.3  为模块建立文档	155
10.4.4  测试模块	164
10.4.5  将模块作为程序运行	165
10.5  创建一个完整的模块	166
10.6  安装模块	171
10.7  本章小结	174
10.8  习题	175
第11章  文本处理	177
11.1  文本处理的用途	177
11.1.1  搜索文件	178
11.1.2  日志剪辑	179
11.1.3  邮件筛选	179
11.2  使用os模块导航文件
系统	179
11.3  使用正则表达式和re
模块	185
11.4  本章小结	189
11.5  习题	189
第Ⅲ部分  开始使用Python
第12章  测试	193
12.1  断言	193
12.2  测试用例和测试套件	195
12.3  测试装置	198
12.4  用极限编程整合	201
12.4.1  用Python实现搜索实用
程序	202
12.4.2  一个更加强大的Python
搜索	207
12.5  软件生命周期中的正规
测试	210
12.6  本章小结	210
第13章  使用Python编写GUI	213
13.1  Python的GUI编程工具箱	213
13.2  Tkinter简介	215
13.3  用Tkinter创建GUI
小组件	215
13.3.1  改变小组件的尺寸	215
13.3.2  配置小组件选项	216
13.3.3  使用小组件	217
13.3.4  创建布局	217
13.3.5  填充顺序	218
13.3.6  控制小组件的外观	219
13.3.7  单选按钮和复选框	220
13.3.8  对话框	221
13.3.9  其他小组件类型	222
13.4  本章小结	222
13.5  习题	223
第14章  访问数据库	225
14.1  使用dbm持久字典	226
14.1.1  选择dbm模块	226
14.1.2  创建持久字典	227
14.1.3  访问持久字典	228
14.1.4  dbm与关系数据库的适用
场合	230
14.2  使用关系数据库	231
14.2.1  编写SQL语句	232
14.2.2  定义表	234
14.2.3  建立数据库	235
14.3  使用Python的数据库API	237
14.3.1  下载各个模块	237
14.3.2  创建连接	238
14.3.3  使用游标	238
14.3.4  使用事务并提交结果	245
14.3.5  检查模块的功能和元
数据	246
14.3.6  处理错误	246
14.4  本章小结	247
14.5  习题	248
第15章  使用Python处理XML	249
15.1  XML的含义	249
15.1.1  层次标记语言	249
15.1.2  一组标准	251
15.2  模式/DTD	251
15.2.1  文档模型的用途	251
15.2.2  是否需要文档模型	252
15.3  文档类型定义	252
15.3.1  DTD示例	252
15.3.2  DTD不完全是XML	253
15.3.3  DTD的局限性	253
15.4  模式	254
15.4.1  示例模式	254
15.4.2  模式是纯粹的XML	254
15.4.3  模式具有层次	255
15.4.4  模式的其他优点	255
15.5  XPath	255
15.6  HTML是XML的子集	256
15.6.1  HTML DTD	256
15.6.2  HTMLParser	256
15.7  Python中可用的XML库	257
15.8  SAX的含义	257
15.8.1  基于流	258
15.8.2  事件驱动	258
15.8.3  DOM的含义	258
15.8.4  内存中访问	258
15.9  使用SAX或者DOM的
理由	259
15.9.1  能力权衡	259
15.9.2  内存考虑	259
15.9.3  速度考虑	259
15.10  Python中可用的SAX
和DOM解析器	259
15.10.1  xml.sax	259
15.10.2  xml.dom.minidom	260
15.11  XSLT简介	262
15.11.1  XSLT是XML	262
15.11.2  转换和格式语言	263
15.11.3  函数式、模板驱动	263
15.12  lxml简介	263
15.13  元素类	263
15.14  使用lxml解析	266
15.15  本章小结	267
15.16  习题	267
第16章  网络编程	269
16.1  理解协议	271
16.1.1  比较协议和程序语言	271
16.1.2  Internet协议栈	272
16.1.3  Internet协议简介	273
16.2  发送电子邮件	274
16.2.1  E-mail文件格式	275
16.2.2  MIME消息	276
16.2.3  使用SMTP和smtplib发送
邮件	284
16.3  检索Internet邮件	286
16.3.1  使用mailbox解析本地
邮筒	286
16.3.2  使用poplib从POP3
服务器获取邮件	288
16.3.3  使用imaplib从IMAP
服务器获取邮件	290
16.3.4  安全的POP3和IMAP	294
16.3.5  Webmail应用程序不是
E-mail应用程序	294
16.4  套接字编程	294
16.4.1  套接字简介	295
16.4.2  绑定到外部主机名	297
16.4.3  镜像服务器	298
16.4.4  镜像客户端	299
16.4.5  套接字服务器	300
16.4.6  多线程服务器	302
16.4.7  Python聊天服务器	303
16.4.8  设计Python聊天
服务器	303
16.4.9  Python聊天服务器协议	304
16.4.10  Python聊天客户端	309
16.4.11  基于select的单线程
多任务	312
16.5  其他主题	313
16.5.1  协议设计的多种考虑	313
16.5.2  对等架构	314
16.6  本章小结	314
16.7  习题	315
第17章  用C扩展编程	317
17.1  扩展模块概述	318
17.2  构建并安装扩展模块	320
17.3  从Python向C传递参数	322
17.4  从C向Python返回值	325
17.5  LAME项目	326
17.6  LAME扩展模块	330
17.7  在C代码中使用Python
对象	342
17.8  本章小结	345
17.9  习题	346
第18章  数值编程	347
18.1  Python语言中的数值	347
18.1.1  整数	348
18.1.2  长整数	348
18.1.3  浮点数	349
18.1.4  格式化数值	350
18.1.5  作为数值的字符	352
18.2  数学	353
18.2.1  算术运算	354
18.2.2  内置数学函数	355
18.3  复数	357
18.4  数组	359
18.5  本章小结	363
18.6  习题	363
第19章  Django简介	365
19.1  框架的定义以及使用框架的
理由	365
19.2  Web框架的其他功能	366
19.3  Django发展史	367
19.4  理解Django的架构	368
19.4.1  项目初始设置	368
19.4.2  创建视图	371
19.5  使用模板	373
19.6  使用模板和视图	375
19.6.1  模型	378
19.6.2  创建模型的第一步——
配置数据库设置	379
19.7  创建模型：创建一个应用
程序	380
19.8  本章小结	382
19.9  习题	383
第20章  Web应用程序与Web
服务	385
20.1  REST：Web架构	386
20.1.1  REST的特性	386
20.1.2  REST操作	388
20.2  HTTP：REST的实际应用	388
20.2.1  可见的Web服务器	390
20.2.2  HTTP请求	393
20.2.3  HTTP响应	393
20.3  CGI：将脚本变为Web应用
程序	395
20.3.1  Web服务器与CGI脚本的
协议	397
20.3.2  CGI的特殊环境变量	397
20.3.3  通过HTML表单接收用户
输入	399
20.4  HTML表单的有限词汇	400
20.5  访问表单值的安全性	401
20.6  构建wiki	405
20.6.1  BittyWiki核心库	406
20.6.2  BittyWiki的Web接口	409
20.7  Web服务	418
20.8  REST Web 服务	419
20.8.1  REST快速入门：
在Amazon.com上寻找
廉价商品	419
20.8.2  WishListBargainFinder
简介	422
20.8.3  向BittyWiki提供
REST API	425
20.8.4  使用REST Web服务
实现搜索和替换功能	428
20.9  XML-RPC	432
20.9.1  XML-RPC请求	434
20.9.2  XML-RPC中的数据
表示	434
20.9.3  XML-RPC响应	435
20.9.4  错误处理机制	436
20.9.5  通过XML-RPC展示
BittyWiki API	437
20.9.6  基于XML-RPC Web服务
的wiki搜索和替换	440
20.10  SOAP	442
20.10.1  SOAP快速入门	442
20.10.2  SOAP请求	443
20.10.3  SOAP响应	444
20.10.4  错误处理机制	444
20.10.5  展示一个BittyWiki的
SOAP接口	445
20.10.6  基于SOAP Web服务的
wiki搜索和替换	447
20.11  为Web服务API创建
文档	449
20.11.1  人类可读的API
文档	449
20.11.2  XML-RPC自省API	450
20.11.3  WSDL	451
20.12  选择Web服务标准	455
20.13  Web服务礼仪	456
20.13.1  Web服务的使用者
礼仪	456
20.13.2  Web服务的创建者
礼仪	456
20.13.3  将Web应用程序作为
Web服务使用	456
20.14  本章小结	456
20.15  习题	457
第21章  集成Java与Python	459
21.1  在Java应用程序中编写
脚本	460
21.2  比较各种Python实现	461
21.3  安装Jython	461
21.4  运行Jython	461
21.4.1  交互地运行Jython	461
21.4.2  运行Jython脚本	463
21.4.3  控制jython脚本	463
21.4.4  创建可执行命令	464
21.5  独立运行Jython	465
21.6  打包基于Jython的应用
程序	466
21.7  集成Java和Jython	466
21.7.1  在Jython中使用
Java类	466
21.7.2  从Jython访问数据库	471
21.7.3  通过Jython编写
Java EE servlet	477
21.7.4  选择Jython开发工具	483
21.8  使用Jython进行测试	483
21.9  嵌入Jython解释器	484
21.10  处理C-Python和Jython
之间的差异	487
21.11  本章小结	488
21.12  习题	488
第Ⅳ部分  附    录
附录A  习题答案	491
附录B  在线资源	519
附录C  Python 3.1的新特性	521
附录D  术语表	527
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python编程入门经典
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python计算机视觉编程
《python计算机视觉编程》
推荐序 xi
前言 xiii
第1章　基本的图像操作和处理 1
1.1　pil：python图像处理类库 1
1.1.1　转换图像格式 2
1.1.2　创建缩略图 3
1.1.3　复制和粘贴图像区域 3
1.1.4　调整尺寸和旋转 3
1.2　matplotlib 4
1.2.1　绘制图像、点和线 4
1.2.2　图像轮廓和直方图 6
1.2.3　交互式标注 7
1.3　numpy 8
1.3.1　图像数组表示 8
1.3.2　灰度变换 9
1.3.3　图像缩放 11
1.3.4　直方图均衡化 11
1.3.5　图像平均 13
1.3.6　图像的主成分分析（pca） 14
1.3.7　使用pickle模块 16
1.4　scipy 17
1.4.1　图像模糊 18
1.4.2　图像导数 19
1.4.3　形态学：对象计数 22
1.4.4　一些有用的scipy模块 23
1.5　高级示例：图像去噪 24
练习 28
代码示例约定 29
第2章　局部图像描述子 31
2.1　harris角点检测器 31
2.2　sift（尺度不变特征变换） 39
2.2.1　兴趣点 39
2.2.2　描述子 39
2.2.3　检测兴趣点 40
2.2.4　匹配描述子 43
2.3　匹配地理标记图像 47
2.3.1　从panoramio下载地理标记图像 47
2.3.2　使用局部描述子匹配 50
2.3.3　可视化连接的图像 52
练习 54
第3章　图像到图像的映射 57
3.1　单应性变换 57
3.1.1　直接线性变换算法 59
3.1.2　仿射变换 60
3.2　图像扭曲 61
3.2.1　图像中的图像 63
3.2.2　分段仿射扭曲 67
3.2.3　图像配准 70
3.3　创建全景图 76
3.3.1　ransac 77
3.3.2　稳健的单应性矩阵估计 78
3.3.3　拼接图像 81
练习 84
第4章　照相机模型与增强现实 85
4.1　针孔照相机模型 85
4.1.1　照相机矩阵 86
4.1.2　三维点的投影 87
4.1.3　照相机矩阵的分解 89
4.1.4　计算照相机中心 90
4.2　照相机标定 91
4.3　以平面和标记物进行姿态估计 93
4.4　增强现实 97
4.4.1　pygame和pyopengl 97
4.4.2　从照相机矩阵到opengl格式 98
4.4.3　在图像中放置虚拟物体 100
4.4.4　综合集成 102
4.4.5　载入模型 104
练习 106
第5章　多视图几何 107
5.1　外极几何 107
5.1.1　一个简单的数据集 109
5.1.2　用matplotlib绘制三维数据 111
5.1.3　计算f：八点法 112
5.1.4　外极点和外极线 113
5.2　照相机和三维结构的计算 116
5.2.1　三角剖分 116
5.2.2　由三维点计算照相机矩阵 118
5.2.3　由基础矩阵计算照相机矩阵 120
5.3　多视图重建 122
5.3.1　稳健估计基础矩阵 123
5.3.2　三维重建示例 125
5.3.3　多视图的扩展示例 129
5.4　立体图像 130
练习 135
第6章　图像聚类 137
6.1　k-means聚类 137
6.1.1　scipy聚类包 138
6.1.2　图像聚类 139
6.1.3　在主成分上可视化图像 140
6.1.4　像素聚类 142
6.2　层次聚类 144
6.3　谱聚类 152
练习 157
第7章　图像搜索 159
7.1　基于内容的图像检索 159
7.2　视觉单词 160
7.3　图像索引 164
7.3.1　建立数据库 164
7.3.2　添加图像 165
7.4　在数据库中搜索图像 167
7.4.1　利用索引获取候选图像 168
7.4.2　用一幅图像进行查询 169
7.4.3　确定对比基准并绘制结果 171
7.5　使用几何特性对结果排序 172
7.6　建立演示程序及web应用 176
7.6.1　用cherrypy创建web应用 176
7.6.2　图像搜索演示程序 176
练习 179
第8章　图像内容分类 181
8.1　k邻近分类法（knn） 181
8.1.1　一个简单的二维示例 182
8.1.2　用稠密sift作为图像特征 185
8.1.3　图像分类：手势识别 187
8.2　贝叶斯分类器 190
8.3　支持向量机 195
8.3.1　使用libsvm 196
8.3.2　再论手势识别 198
8.4　光学字符识别 199
8.4.1　训练分类器 200
8.4.2　选取特征 200
8.4.3　多类支持向量机 201
8.4.4　提取单元格并识别字符 202
8.4.5　图像校正 205
练习 206
第9章　图像分割 209
9.1　图割（graph cut） 209
9.1.1　从图像创建图 211
9.1.2　用户交互式分割 216
9.2　利用聚类进行分割 218
9.3　变分法 224
练习 226
第10章　opencv 227
10.1　opencv的python接口 227
10.2　opencv基础知识 228
10.2.1　读取和写入图像 228
10.2.2　颜色空间 228
10.2.3　显示图像及结果 229
10.3　处理视频 232
10.3.1　视频输入 232
10.3.2　将视频读取到numpy数组中 234
10.4　跟踪 234
10.4.1　光流 235
10.4.2　lucas-kanade算法 237
10.5　更多示例 243
10.5.1　图像修复 243
10.5.2　利用分水岭变换进行分割 244
10.5.3　利用霍夫变换检测直线 245
练习 246
附录a　安装软件包 247
a.1　numpy和scipy 247
a.1.1　windows 247
a.1.2　mac os x 247
a.1.3　linux 248
a.2　matplotlib 248
a.3　pil 248
a.4　libsvm 249
a.5　opencv 249
a.5.1　windows 和 unix 249
a.5.2　mac os x 249
a.5.3　linux 250
a.6　vlfeat 250
a.7　pygame 250
a.8　pyopengl 250
a.9　pydot 251
a.10　python-graph 251
a.11　simplejson 252
a.12　pysqlite 252
a.13　cherrypy 252
附录b　图像集 253
b.1　flickr 253
b.2　panoramio 254
b.3　牛津大学视觉几何组 255
b.4　肯塔基大学识别基准图像 255
b.5　其他 256
b.5.1　prague texture segmentation datagenerator与基准 256
b.5.2　微软研究院grab cut数据集 256
b.5.3　caltech 101 256
b.5.4　静态手势数据库 256
b.5.5　middlebury stereo数据集 256
附录c　图片来源 257
c.1　来自flickr的图像 257
c.2　其他图像 258
c.3　插图 258
参考文献 259
索引 263
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python计算机视觉编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通Python网络爬虫：核心技术、框架与项目实战
目录
前言
第一篇　理论基础篇
第1章　什么是网络爬虫 3
1.1　初识网络爬虫 3
1.2　为什么要学网络爬虫 4
1.3　网络爬虫的组成 5
1.4　网络爬虫的类型 6
1.5　爬虫扩展——聚焦爬虫 7
1.6　小结 8
第2章　网络爬虫技能总览 9
2.1　网络爬虫技能总览图 9
2.2　搜索引擎核心 10
2.3　用户爬虫的那些事儿 11
2.4　小结 12
第二篇　核心技术篇
第3章　网络爬虫实现原理与实现技术 15
3.1　网络爬虫实现原理详解 15
3.2　爬行策略 17
3.3　网页更新策略 18
3.4　网页分析算法 20
3.5　身份识别 21
3.6　网络爬虫实现技术 21
3.7　实例——metaseeker 22
3.8　小结 27
第4章　Urllib库与URLError异常处理 29
4.1　什么是Urllib库 29
4.2　快速使用Urllib爬取网页 30
4.3　浏览器的模拟——Headers属性 34
4.4　超时设置 37
4.5　HTTP协议请求实战 39
4.6　代理服务器的设置 44
4.7　DebugLog实战 45
4.8　异常处理神器——URLError实战 46
4.9　小结 51
第5章　正则表达式与Cookie的使用 52
5.1　什么是正则表达式 52
5.2　正则表达式基础知识 52
5.3　正则表达式常见函数 61
5.4　常见实例解析 64
5.5　什么是Cookie 66
5.6　Cookiejar实战精析 66
5.7　小结 71
第6章　手写Python爬虫 73
6.1　图片爬虫实战 73
6.2　链接爬虫实战 78
6.3　糗事百科爬虫实战 80
6.4　微信爬虫实战 82
6.5　什么是多线程爬虫 89
6.6　多线程爬虫实战 90
6.7　小结 98
第7章　学会使用Fiddler 99
7.1　什么是Fiddler 99
7.2　爬虫与Fiddler的关系 100
7.3　Fiddler的基本原理与基本界面 100
7.4　Fiddler捕获会话功能 102
7.5　使用QuickExec命令行 104
7.6　Fiddler断点功能 106
7.7　Fiddler会话查找功能 111
7.8　Fiddler的其他功能 111
7.9　小结 113
第8章　爬虫的浏览器伪装技术 114
8.1　什么是浏览器伪装技术 114
8.2　浏览器伪装技术准备工作 115
8.3　爬虫的浏览器伪装技术实战 117
8.4　小结 121
第9章　爬虫的定向爬取技术 122
9.1　什么是爬虫的定向爬取技术 122
9.2　定向爬取的相关步骤与策略 123
9.3　定向爬取实战 124
9.4　小结 130
第三篇　框架实现篇
第10章　了解Python爬虫框架 133
10.1　什么是Python爬虫框架 133
10.2　常见的Python爬虫框架 133
10.3　认识Scrapy框架 134
10.4　认识Crawley框架 135
10.5　认识Portia框架 136
10.6　认识newspaper框架 138
10.7　认识Python-goose框架 139
10.8　小结 140
第11章　爬虫利器——Scrapy安装与配置 141
11.1　在Windows7下安装及配置Scrapy实战详解 141
11.2　在Linux（Centos）下安装及配置Scrapy实战详解 147
11.3　在MAC下安装及配置Scrapy实战详解 158
11.4　小结 161
第12章　开启Scrapy爬虫项目之旅 162
12.1　认识Scrapy项目的目录结构 162
12.2　用Scrapy进行爬虫项目管理 163
12.3　常用工具命令 166
12.4　实战：Items的编写 181
12.5　实战：Spider的编写 183
12.6　XPath基础 187
12.7　Spider类参数传递 188
12.8　用XMLFeedSpider来分析XML源 191
12.9　学会使用CSVFeedSpider 197
12.10　Scrapy爬虫多开技能 200
12.11　避免被禁止 206
12.12　小结 212
第13章　Scrapy核心架构 214
13.1　初识Scrapy架构 214
13.2　常用的Scrapy组件详解 215
13.3　Scrapy工作流 217
13.4　小结 219
第14章　Scrapy中文输出与存储 220
14.1　Scrapy的中文输出 220
14.2　Scrapy的中文存储 223
14.3　输出中文到JSON文件 225
14.4　小结 230
第15章　编写自动爬取网页的爬虫 231
15.1　实战：items的编写 231
15.2　实战：pipelines的编写 233
15.3　实战：settings的编写 234
15.4　自动爬虫编写实战 234
15.5　调试与运行 239
15.6　小结 242
第16章　CrawlSpider 243
16.1　初识CrawlSpider 243
16.2　链接提取器 244
16.3　实战：CrawlSpider实例 245
16.4　小结 249
第17章　Scrapy高级应用 250
17.1　如何在Python3中操作数据库 250
17.2　爬取内容写进MySQL 254
17.3　小结 259
第四篇　项目实战篇
第18章　博客类爬虫项目 263
18.1　博客类爬虫项目功能分析 263
18.2　博客类爬虫项目实现思路 264
18.3　博客类爬虫项目编写实战 264
18.4　调试与运行 274
18.5　小结 275
第19章　图片类爬虫项目 276
19.1　图片类爬虫项目功能分析 276
19.2　图片类爬虫项目实现思路 277
19.3　图片类爬虫项目编写实战 277
19.4　调试与运行 281
19.5　小结 282
第20章　模拟登录爬虫项目 283
20.1　模拟登录爬虫项目功能分析 283
20.2　模拟登录爬虫项目实现思路 283
20.3　模拟登录爬虫项目编写实战 284
20.4　调试与运行 292
20.5　小结 294
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通Python网络爬虫：核心技术、框架与项目实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python高级编程（第二版）
版权
版权声明
内容提要
译者简介
作者简介
审稿人简介
前言
第1章 Python现状
第2章 语法最佳实践——类级别以下
第3章 语法最佳实践—类级别以上
第4章 选择好的名称
第5章 编写一个包
第6章 部署代码
第7章 使用其他语言开发Python扩展
第8章 管理代码
第9章 文档化你的项目
第10章 测试驱动开发
第11章 优化——一般原则与分析技术
第12章 优化——一些强大的技术
第13章 并发
第14章 有用的设计模式
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python高级编程（第二版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python金融衍生品大数据分析：建模、模拟、校准与对冲
第 1 章 快速导览 1
1.1 基于市场的估价 1
1.2 本书的结构 1
1.3 为什么选择 Python 3
1.4 深入阅读 4
第 1 部分 市场 6
第 2 章 什么是基于市场的定价 6
2.1 期权及其价值 6
2.2 普通金融工具与奇异金融工具 10
2.3 影响股权衍生工具的风险 11
2.3.1 市场风险 11
2.3.2 其他风险 12
2.4 对冲  13
2.5 基于市场的定价过程 14
第 3 章 市场典型事实 15
3.1 简介  15
3.2 波动率、相关性 15
3.3 基本案例：正态收益率 17
3.4 指数和股票 21
3.4.1 典型事实 21
3.4.2 DAX 指数收益率 21
3.5 期权市场 25
3.5.1 买卖价差 25
3.5.2 隐含波动率曲面 27
3.6 短期利率 28
3.7 结论  31
3.8 Python 脚本 31
3.8.1 GBM 分析 31
3.8.2 DAX 分析 35
3.8.3 BSM 隐含波动率 36
3.8.4 EURO STOXX 50 隐含波动率 38
3.8.5 EURIBOR 分析 40
第 2 部分 理论定价 42
第 4 章 风险中性定价 42
4.1 简介  42
4.2 离散时间不确定性 43
4.3 离散市场模型 47
4.3.1 基本元素 47
4.3.2 基础定义 47
4.4 离散时间模型的主要结果  49
4.5 连续时间模型 53
4.6 总结  58
4.7 证明  59
4.7.1 引理 1 59
4.7.2 命题 1 59
4.7.3 定理 1 60
第 5 章 完全市场模型 62
5.1 简介  62
5.2 Black-Scholes-Merton 模型  62
5.2.1 市场模型 62
5.2.2 基本 PDE 63
5.2.3 欧式期权 64
5.3 BSM 模型的 Greeks 67
5.4 Cox-Ross-Rubinstein 模型  71
5.5 总结  74
5.6 证明及 Python 脚本 74
5.6.1 伊藤引理 74
5.6.2 BSM 期权定价的脚本  74
5.6.3 BSM 看涨期权 Greeks 脚本 78
5.6.4 CRR 期权定价脚本  81
第 6 章 基于傅里叶的期权定价 84
6.1 概述  84
6.2 定价问题 85
6.3 傅里叶变换 85
6.4 基于傅里叶的期权定价 87
6.4.1 Lewis（2001） 87
6.4.2 Carr-Madan（1999）  89
6.5 数值计算 91
6.5.1 傅里叶级数 91
6.5.2 快速傅里叶变换 94
6.6 应用  94
6.6.1 Black-Scholes-Merton（1973）模型    94
6.6.2 Merton（1976）模型  97
6.6.3 离散市场模型 97
6.7 总结  101
6.8 Python 脚本 101
6.8.1 使用傅里叶方法的 BSM 看涨期权定价    101
6.8.2 傅里叶级数 106
6.8.3 单位根 108
6.8.4 卷积 108
6.8.5 参数模块 109
6.8.6 卷积计算看涨期权价值  110
6.8.7 卷积期权定价 111
6.8.8 DFT 期权定价 111
6.8.9 DFT 速度检验 112
第 7 章 利用模拟的美式期权定价 114
7.1 概述  114
7.2 金融模型 114
7.3 美式期权定价 115
7.3.1 问题形式 115
7.3.2 定价算法 117
7.4 数值结果 118
7.4.1 美式看跌期权 118
7.4.2 美式空头秃鹰式价差  122
7.5 总结  122
7.6 Python 脚本 123
7.6.1 二项定价 123
7.6.2 LSM 蒙特卡罗定价  125
7.6.3 原始算法和对偶算法  126
第 3 部分 基于市场的定价 132
第 8 章 基于市场定价的第一个例子 132
8.1 概述  132
8.2 市场模型 132
8.3 定价  133
8.4 校准  133
8.5 模拟  134
8.6 总结  140
8.7 Python 脚本 140
8.7.1 数值积分定价 140
8.7.2 FFT 定价 142
8.7.3 根据三种到期日的期权报价校准模型 145
8.7.4 根据到期时间较短的期权报价校准模型 147
8.7.5 MCS 定价 150
第 9 章 一般市场模型 154
9.1 概述  154
9.2 框架  154
9.3 框架的特征 156
9.4 零息债券定价 157
9.5 欧式期权定价 158
9.5.1 PDE 方法 158
9.5.2 变换方法 160
9.5.3 蒙特卡罗模拟 161
9.6 总结  162
9.7 证明和 Python 脚本 162
9.7.1 伊藤引理 162
9.7.2 债券定价的 Python 脚本 163
9.7.3 欧式看涨期权定价的 Python 脚本 164
第 10 章 蒙特卡罗模拟 171
10.1 概述  171
10.2 零息债券定价 171
10.3 欧式期权定价 175
10.4 美式期权定价 180
10.4.1 数值结果 182
10.4.2 高准确性与低速度  185
10.5 总结  187
10.6 Python 脚本 188
10.6.1 一般零息债券定价  188
10.6.2 CIR85 模拟和定价  190
10.6.3 通过蒙特卡罗模拟对欧式期权自动定价 193
10.6.4 通过蒙特卡罗模拟对美式看跌期权自动定价 194
第 11 章 模型校准 202
11.1 概述  202
11.2 一般考量 202
11.2.1 为什么校准 202
11.2.2 模型的不同部分分别是什么角色 204
11.2.3 什么是目标函数 205
11.2.4 什么是市场数据 207
11.2.5 什么是最优化算法  208
11.3 短期利率部分的校准 208
11.3.1 理论基础 208
11.3.2 根据 Euribor 校准模型  209
11.4 股权部分的校准 212
11.4.1 傅里叶变换方法定价  212
11.4.2 根据 EURO STOXX 50 期权的报价进行校准 213
11.4.3 H93 模型校准 214
11.4.4 跳跃部分校准 214
11.4.5 BCC97 模型的完全校准 217
11.4.6 根据隐含波动率校准  218
11.5 总结  220
11.6 COX-INGERSOLL-ROSS 模型的 PYTHON 脚本 222
11.6.1 CIR85 模型校准 222
11.6.2 H93 随机波动率模型校准 225
11.6.3 隐含波动率的比较  228
11.6.4 模型跳跃扩散部分的校准 230
11.6.5 BCC97 完全模型的校准 233
11.6.6 根据隐含波动率校准 BCC97 模型236
第 12 章 一般模型框架下的模拟与定价 240
12.1 概述  240
12.2 模拟 BCC97 模型 240
12.3 股权期权定价 242
12.3.1 欧式期权 242
12.3.2 美式期权 244
12.4 总结 245
12.5 Python 脚本 245
12.5.1 模拟 BCC97 模型  245
12.5.2 MCS 法对欧式看涨期权定价 251
12.5.3 MCS 法对美式看涨期权定价 252
第 13 章 动态对冲 256
13.1 概述  256
13.2 BSM 模型对冲研究 257
13.3 BCC97 模型对冲研究 262
13.4 总结  265
13.5 Python 脚本 265
13.5.1 BSM 的 LSM Delta 对冲（单一路径）265
13.5.2 BSM 的 LSM Delta 对冲（多条路径）269
13.5.3 BCC97 中美式看跌期权的 LSM 算法 271
13.5.4 BCC97 的 LSM Delta 对冲（单一路径）277
第 14 章 摘要 280
附录 A 果壳里的 Python 281
A.1 Python 基础 281
A.1.1 安装 Python 包 281
A.1.2 Python 第一步 282
A.1.3 数组操作 286
A.1.4 随机数 289
A.1.5 绘图 289
A.2 欧式期权定价 291
A.2.1 Black-Scholes-Merton 方法 292
A.2.2 Cox-Ross-Rubinstein 方法 294
A.2.3 蒙特卡罗方法 299
A.3 金融选题 301
A.3.1 近似 301
A.3.2 最优化 303
A.3.3 数值积分 304
A.4 Python 进阶 305
A.4.1 类和对象 305
A.4.2 基本的输入输出 308
A.4.3 与电子表格交互  309
A.5 快速金融工程 311
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python金融衍生品大数据分析：建模、模拟、校准与对冲
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Web接口开发与自动化测试
第 1章 Python学习必知  1
1.1  Python 2.x与 Python 3.x选择 1
1.2  Python的安装  2
1.2.1  在 Windows下安装 Python  2
1.2.2  安装 Python 2和 Python 3两个版本  3
1.2.3  “python”不是内部或外部命令 5
1.3扩展库的安装  6
1.3.1  pip安装扩展库  6
1.3.2  tar.gz文件安装  9
1.3.3 whl文件安装  9
1.3.4  GitHub克隆项目安装 9
1.4开发工具选择  11
1.4.1 Sublime Text3 11
1.4.2 Atom  13
1.4.3 PyCharm  14
1.5程序报错不要慌  15
1.5.1  缩进错误  15
1.5.2  引包错误  16
1.5.3  编码错误  16
1.5.4  学会分析错误  17
第 2章 Django入门  19
2.1  Django开发环境  19
2.1.1  在 Windows下安装 Django  20
2.1.2  在 Ubuntu下安装 Django 20
2.2开始第一个 demo  21
2.2.1  创建项目与应用  22
2.2.2  运行项目  25
2.2.3  Hello Django！ 27
2.2.4  使用模板  29
2.3  Django工作流 30
2.3.1  URL组成 31
2.3.2 URLconf  32
2.3.3  views视图  33
2.3.4  templates模板  34
2.4 MTV开发模式 34
第 3章 Django视图  36
3.1来写个登录功能  36
3.1.1  GET与 POST请求 37
3.1.2  处理登录请求  40
3.1.3  登录成功页 42
3.2 Cookie和 Session 44
3.2.1  Cookie的使用  44
3.2.2  Session的使用  46
3.3  Django认证系统  49
3.3.1  登录 Admin后台 49
3.3.2  引用 Django认证登录 50
3.3.3  关上窗户  51
第 4章 Django模型  53
4.1设计系统表 53
4.2 admin后台管理  56
4.3基本数据访问  59
4.3.1  插入数据  60
4.3.2  查询数据  61
4.3.3  删除数据  63
4.3.4  更新数据  63
4.4  SQLite管理工具  64
4.4.1 SQLite Manager  64
4.4.2 SQLiteStudio  65
4.5配置 MySQL  65
4.5.1  安装 MySQL  65
4.5.2  MySQL基本操作  67
4.5.3  安装 PyMySQL 68
4.5.4  在 Django中配置 MySQL 69
4.5.5  MySQL管理工具  72
第 5章 Django模板  73
5.1 Django-bootstrap3  73
5.2发布会管理 74
5.2.1  发布会列表 74
5.2.2  搜索功能  78
5.3嘉宾管理  79
5.3.1  嘉宾列表  80
5.3.2  分页器  83
5.4签到功能  87
5.4.1  添加签到链接  87
5.4.2  签到页面  88
5.4.3  签到动作  91
5.5退出系统  93
第 6章 Django测试  95
6.1 unittest单元测试框架  95
6.1.1  单元测试框架  95
6.1.2  编写单元测试用例 96
6.2  Django测试 100
6.2.1  一个简单的例子  100
6.2.2  运行测试用例 102
6.3客户端测试  104
6.3.1  测试首页  104
6.3.2  测试登录动作 105
6.3.3  测试发布会管理  107
6.3.4  测试嘉宾管理 108
6.3.5  测试用户签到 109
第 7章接口相关概念 111
7.1分层的自动化测试  111
7.2单元测试与模块测试 112
7.3接口测试  114
7.3.1  接口的分类  115
7.3.2  接口测试的意义  116
7.4编程语言中的 Interface 117
7.4.1  Java中的 Interface  117
7.4.2  Python中的 Zope.interface  119
第 8章开发 Web接口  121
8.1为何要开发 Web接口  121
8.2什么是 Web接口  124
8.2.1 HTTP  125
8.2.2  JSON格式 128
8.3开发系统 Web接口 129
8.3.1  配置接口路径 129
8.3.2  添加发布会接口  130
8.3.3  查询发布会接口  132
8.3.4  添加嘉宾接口 133
8.3.5  查询嘉宾接口 135
8.3.6  发布会签到接口  136
8.4编写 Web接口文档 138
第 9章接口测试工具介绍  143
9.1  Postman测试工具 143
9.2 JMeter测试工具  146
9.2.1  安装 JMeter  146
9.2.2  创建测试任务 147
9.2.3  添加接口测试 151
9.2.4  添加断言  153
9.3 Robot Framework测试框架  154
9.3.1  环境搭建  155
9.3.2  基本概念与用法  157
9.3.3  接口测试  160
第 10章接口自动化测试框架  165
10.1  接口测试工具的不足  165
10.2  Requests库 166
10.2.1  安装  167
10.2.2  接口测试 167
10.2.3  集成 unittest  168
10.3  接口测试框架开发  169
10.3.1  框架处理流程  169
10.3.2  框架结构介绍  170
10.3.3  修改数据库配置 171
10.3.4  数据库操作封装 172
10.3.5  编写接口测试用例  176
10.3.6  集成测试报告  178
第 11章接口的安全机制 181
11.1用户认证 181
11.1.1  开发带 Auth接口  182
11.1.2  接口文档 184
11.1.3  接口测试用例  185
11.2数字签名 187
11.2.1  开发接口 188
11.2.2  接口文档 191
11.2.3  接口用例 192
11.3接口加密 194
11.3.1  PyCrypto库  194
11.3.2  AES加密接口开发  196
11.3.3  编写接口文档  201
11.3.4  补充接口测试用例  202
第 12章 Web Services 205
12.1  Web Services相关概念  205
12.2  Web Services的开发与调用 214
12.2.1  suds-jurko调用接口 214
12.2.2  spyne开发接口  219
12.3  JMeter测试 SOAP接口 221
第 13章 REST  224
13.1  RPC与 REST  224
13.2  Django REST Framework 227
13.2.1  创建简单的 API  227
13.2.2  添加接口数据  231
13.2.3  测试接口 232
13.3  集成发布会系统 API  234
13.3.1  添加发布会 API  234
13.3.2  测试接口 237
13.4  soapUI测试工具 238
13.4.1  创建 SOAP测试项目  239
13.4.2  创建 REST测试项目  241
第 14章 Django项目部署  244
14.1  uWSGI  244
14.1.1  uWSGI介绍  244
14.1.2  安装 uWSGI  245
14.1.3  uWSGI运行 Django 246
14.2  Nginx 247
14.2.1  安装 Nginx 247
14.2.2  Nginx+uWSGI+Django  248
14.2.3  处理静态资源  251
14.3  创建 404页面  253
第 15章接口性能测试  256
15.1  Locust性能测试工具 256
15.1.1  安装 Locust  257
15.1.2  性能测试案例  259
15.2  发布会系统性能测试  262
15.2.1  性能测试准备  263
15.2.2  编写性能测试脚本  266
15.2.3  执行性能测试  267
15.3  接口性能测试  270
15.3.1  编写接口性能测试脚本 270
15.3.2  执行接口性能测试  271
15.3.3  多线程测试接口性能  274
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Web接口开发与自动化测试
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python编程导论（第2版）
第1章　启程 1
第2章　Python简介 6
2.1　Python基本元素 7
2.1.1　对象、表达式和数值类型 8
2.1.2　变量与赋值 9
2.1.3　Python IDE 11
2.2　程序分支 12
2.3　字符串和输入 14
2.3.1　输入 15
2.3.2　杂谈字符编码 16
2.4　迭代 17
第3章　一些简单的数值程序 20
3.1　穷举法 20
3.2　for循环 22
3.3　近似解和二分查找 24
3.4　关于浮点数 27
3.5　牛顿 拉弗森法 29
第4章　函数、作用域与抽象 31
4.1　函数与作用域 32
4.1.1　函数定义 32
4.1.2　关键字参数和默认值 33
4.1.3　作用域 34
4.2　规范 37
4.3　递归 39
4.3.1　斐波那契数列 40
4.3.2　回文 42
4.4　全局变量 45
4.5　模块 46
4.6　文件 47
第5章　结构化类型、可变性与
高阶函数 50
5.1　元组 50
5.2　范围 52
5.3　列表与可变性 52
5.3.1　克隆 57
5.3.2　列表推导 57
5.4　函数对象 58
5.5　字符串、元组、范围与列表 60
5.6　字典 61
第6章　测试与调试 65
6.1　测试 65
6.1.1　黑盒测试 66
6.1.2　白盒测试 68
6.1.3　执行测试 69
6.2　调试 70
6.2.1　学习调试 72
6.2.2　设计实验 72
6.2.3　遇到麻烦时 75
6.2.4　找到“目标”错误之后 76
第7章　异常与断言 77
7.1　处理异常 77
7.2　将异常用作控制流 80
7.3　断言 82
第8章　类与面向对象编程 83
8.1　抽象数据类型与类 83
8.1.1　使用抽象数据类型设计程序 87
8.1.2　使用类记录学生与教师 87
8.2　继承 90
8.2.1　多重继承 92
8.2.2　替换原则 93
8.3　封装与信息隐藏 94
8.4　进阶示例：抵押贷款 99
第9章　算法复杂度简介 103
9.1　思考计算复杂度 103
9.2　渐近表示法 106
9.3　一些重要的复杂度 107
9.3.1　常数复杂度 107
9.3.2　对数复杂度 108
9.3.3　线性复杂度 108
9.3.4　对数线性复杂度 109
9.3.5　多项式复杂度 109
9.3.6　指数复杂度 111
9.3.7　复杂度对比 112
第10章　一些简单算法和数据结构 114
10.1　搜索算法 115
10.1.1　线性搜索与间接引用元素 115
10.1.2　二分查找和利用假设 116
10.2　排序算法 119
10.2.1　归并排序 120
10.2.2　将函数用作参数 122
10.2.3　Python中的排序 123
10.3　散列表 124
第11章　绘图以及类的进一步扩展 128
11.1　使用PyLab绘图 128
11.2　进阶示例：绘制抵押贷款 133
第12章　背包与图的* 优化问题 139
12.1　背包问题 139
12.1.1　贪婪算法 140
12.1.2　0/1背包问题的* 优解 143
12.2　图的* 优化问题 145
12.2.1　一些典型的图论问题 149
12.2.2　* 短路径：深度优先搜索和
广度优先搜索 149
第13章　动态规划 155
13.1　又见斐波那契数列 155
13.2　动态规划与0/1背包问题 157
13.3　动态规划与分治算法 162
第14章　随机游走与数据可视化 163
14.1　随机游走 163
14.2　醉汉游走 164
14.3　有偏随机游走 170
14.4　变幻莫测的田地 175
第15章　随机程序、概率与分布 178
15.1　随机程序 178
15.2　计算简单概率 180
15.3　统计推断 180
15.4　分布 192
15.4.1　概率分布 194
15.4.2　正态分布 195
15.4.3　连续型和离散型均匀分布 199
15.4.4　二项式分布与多项式分布 200
15.4.5　指数分布和几何分布 200
15.4.6　本福德分布 203
15.5　散列与碰撞 204
15.6　强队的获胜概率 206
第16章　蒙特卡罗模拟 208
16.1　帕斯卡的问题 209
16.2　过线还是不过线 210
16.3　使用查表法提高性能 213
16.4　求π的值 214
16.5　模拟模型结束语 218
第17章　抽样与置信区间 220
17.1　对波士顿马拉松比赛进行抽样 220
17.2　中心极限定理 225
17.3　均值的标准误差 228
第18章　理解实验数据 231
18.1　弹簧的行为 231
18.2　弹丸的行为 238
18.2.1　可决系数 240
18.2.2　使用计算模型 241
18.3　拟合指数分布数据 242
18.4　当理论缺失时 245
第19章　随机试验与假设检验 247
19.1　检验显著性 248
19.2　当心P-值 252
19.3　单尾单样本检验 254
19.4　是否显著 255
19.5　哪个N 257
19.6　多重假设 258
第20章　条件概率与贝叶斯统计 261
20.1　条件概率 262
20.2　贝叶斯定理 263
20.3　贝叶斯更新 264
第21章　谎言、该死的谎言与统计学 267
21.1　垃圾输入，垃圾输出 267
21.2　检验是有缺陷的 268
21.3　图形会骗人 268
21.4　Cum Hoc Ergo Propter Hoc 270
21.5　统计测量不能说明所有问题 271
21.6　抽样偏差 272
21.7　上下文很重要 273
21.8　慎用外推法 273
21.9　得克萨斯神枪手谬误 274
21.10　莫名其妙的百分比 276
21.11　不显著的显著统计差别 276
21.12　回归假象 277
21.13　小心为上 278
第22章　机器学习简介 279
22.1　特征向量 281
22.2　距离度量 283
第23章　聚类 288
23.1　Cluster类 289
23.2　K-均值聚类 291
23.3　虚构示例 292
23.4　更真实的示例 297
第24章　分类方法 303
24.1　分类器评价 303
24.2　预测跑步者的性别 306
24.3　K-* 邻近方法 308
24.4　基于回归的分类器 312
24.5　从“泰坦尼克”号生还 320
24.6　总结 325
Python 3.5速查表 326
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python编程导论（第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python Linux系统管理与自动化运维
推荐序一
推荐序二
推荐序三
前　言
第1章　Python语言与Linux系统管理 1
1.1　Python语言有多流行 1
1.2　Python语言为什么流行 3
1.3　Python语言有什么缺点 4
1.4　Python语言的应用场景 4
1.5　为什么Python适合Linux系统管理 5
1.6　使用Python 2还是Python 3 6
第2章　Python生态工具 9
2.1　Python内置小工具 9
2.1.1　1秒钟启动一个下载服务器 10
2.1.2　字符串转换为JSON 10
2.1.3　检查第三方库是否正确安装 11
2.2　pip高级用法 12
2.2.1　pip介绍 12
2.2.2　pip常用命令 12
2.2.3　加速pip安装的技巧 14
2.3　Python编辑器 15
2.3.1　编写Python的vim插件 15
2.3.2　Windows下Python编辑器PyCharm介绍 17
2.4　Python编程辅助工具 18
2.4.1　Python交互式编程 18
2.4.2　使用IPython交互式编程 20
2.4.3　jupyter的使用 29
2.5　Python调试器 31
2.5.1　标准库的pdb 32
2.5.2　开源的ipdb 34
2.6　Python代码规范检查 34
2.6.1　PEP 8编码规范介绍 34
2.6.2　使用pycodestyle检查代码规范 36
2.6.3　使用autopep8将代码格式化 37
2.7　Python工作环境管理 39
2.7.1　使用pyenv管理不同的Python版本 39
2.7.2　使用virtualenv管理不同的项目 42
2.8　本章总结 43
第3章　打造命令行工具 44
3.1　与命令行相关的Python语言特性 44
3.1.1　使用sys.argv获取命令行参数 45
3.1.2　使用sys.stdin和fileinput读取标准输入 46
3.1.3　使用SystemExit异常打印错误信息 48
3.1.4　使用getpass库读取密码 49
3.2　使用ConfigParse解析配置文件 49
3.3　使用argparse解析命令行参数 52
3.3.1　ArgumentParse解析器 52
3.3.2　模仿MySQL客户端的命令行参数 54
3.4　使用logging记录日志 55
3.4.1　日志的作用 55
3.4.2　Python的logging模块 56
3.4.3　配置日志格式 56
3.5　与命令行相关的开源项目 59
3.5.1　使用click解析命令行参数 59
3.5.2　使用prompt_toolkit打造交互式命令行工具 61
3.6　本章总结 64
第4章　文本处理 65
4.1　字符串常量 66
4.1.1　定义字符串 66
4.1.2　字符串是不可变的有序集合 68
4.1.3　字符串函数 71
4.1.4　案例：使用Python分析Apache的访问日志 79
4.1.5　字符串格式化 83
4.2　正则表达式 85
4.2.1　正则表达式语法 86
4.2.2　利用re库处理正则表达式 87
4.2.3　常用的re方法 90
4.2.4　案例：获取HTML页面中的所有超链接 94
4.3　字符集编码 94
4.3.1　编码历史 95
4.3.2　UTF-8编码 96
4.3.3　从字符集的问题说起 98
4.3.4　Python 2和Python 3中的Unicode 99
4.4　Jinja2模板 101
4.4.1　模板介绍 102
4.4.2　Jinja2语法入门 102
4.4.3　Jinja2实战 108
4.4.4　案例：使用Jinja2生成HTML表格和XML配置文件 112
4.5　本章总结 116
第5章　Linux系统管理 117
5.1　文件读写 118
5.1.1　Python内置的open函数 118
5.1.2　避免文件句柄泄露 119
5.1.3　常见的文件操作函数 120
5.1.4　Python的文件是一个可迭代对象 121
5.1.5　案例：将文件中所有单词的首字母变成大写 122
5.2　文件与文件路径管理 123
5.2.1　使用os.path进行路径和文件管理 123
5.2.2　使用os模块管理文件和目录 126
5.2.3　案例：打印最常用的10条Linux命令 128
5.3　查找文件 129
5.3.1　使用fnmatch找到特定的文件 129
5.3.2　使用glob找到特定的文件 130
5.3.3　使用os.walk遍历目录树 131
5.3.4　案例：找到目录下最大（或最老）的十个文件 132
5.4　高级文件处理接口shutil 134
5.4.1　复制文件和文件夹 135
5.4.2　文件和文件夹的移动与改名 135
5.4.3　删除目录 136
5.5　文件内容管理 136
5.5.1　目录和文件比较 137
5.5.2　MD5校验和比较 139
5.5.3　案例：找到目录下的重复文件 139
5.6　使用Python管理压缩包 141
5.6.1　使用tarfile库读取与创建tar包 141
5.6.2　使用tarfile库读取与创建压缩包 142
5.6.3　案例：备份指定文件到压缩包中 142
5.6.4　使用zipfile库创建和读取zip压缩包 143
5.6.5　案例：暴力破解zip压缩包的密码 144
5.6.6　使用shutil创建和读取压缩包 146
5.7　Python中执行外部命令 148
5.7.1　subprocess模块简介 149
5.7.2　subprocess模块的便利函数 149
5.7.3　subprocess模块的Popen类 151
5.8　综合案例：使用Python部署MongoDB 152
5.9　本章总结 155
第6章　使用Python监控Linux系统 156
6.1　Python编写的监控工具 157
6.1.1　多功能系统资源统计工具dstat 157
6.1.2　交互式监控工具glances 160
6.2　使用Python打造自己的监控工具 163
6.2.1　Linux系统的/proc目录介绍 163
6.2.2　proc目录下常用文件介绍 164
6.2.3　进程目录下常用文件介绍 165
6.2.4　利用/proc目录找到被删除的文件 166
6.2.5　使用shell脚本监控Linux 168
6.2.6　使用Python监控Linux 170
6.3　使用开源库监控Linux 172
6.3.1　psutil介绍 172
6.3.2　psutil提供的功能函数 172
6.3.3　综合案例：使用psutil实现监控程序 177
6.3.4　psutil进程管理 180
6.4　使用pyinotify监控文件系统变化 181
6.4.1　pyinotify模块介绍 181
6.4.2　pyinotify模块API 182
6.4.3　事件标志与事件处理器 182
6.5　监控应用程序 184
6.5.1　使用Python监控MySQL 184
6.5.2　使用Python监控MongoDB 185
6.6　本章总结 185
第7章　文档与报告 186
7.1　使用Python处理Excel文档 187
7.1.1　openpyxl简介与安装 187
7.1.2　使用openpyxl读取Excel文档 187
7.1.3　使用openpyxl修改Excel文档 192
7.1.4　案例：合并多个Excel文档到一个Excel文档 195
7.2　使用Python操作PDF文档 197
7.2.1　PyPDF2安装与介绍 197
7.2.2　使用PdfFileReader读取PDF文件 198
7.2.3　使用PdfFileWriter创建PDF文件 199
7.2.4　修改PDF页面 201
7.2.5　使用PdfFileMerger合并多个PDF文件 203
7.3　使用Python归档图片 205
7.3.1　Exif信息介绍 205
7.3.2　在Python使用PIL查看图片元信息 207
7.4　发送报告 210
7.4.1　SMTP协议 211
7.4.2　邮箱设置（以QQ邮箱为例） 212
7.4.3　使用标准库的smtplib与mime发送邮件 212
7.4.4　使用开源的yagmail发送邮件 216
7.5　接收邮件 217
7.5.1　接收邮件协议IMAP与POP3 217
7.5.2　使用开源从imapclient接收邮件 217
7.5.3　使用pyzmail解析邮件 219
7.5.4　使用imapclient删除邮件 219
7.6　综合案例：使用Python打造一个geek的邮件客户端 220
7.6.1　emcli的功能设计 220
7.6.2　emcli的功能实现 221
7.6.3　使用setuptools打包源码 223
7.6.4　使用twine上传到PyPi 224
7.7　本章总结 225
第8章　网络 226
8.1　列出网络上所有活跃的主机 226
8.1.1　使用ping命令判断主机是否活跃 227
8.1.2　使用Python判断主机是否活跃 228
8.1.3　使用生产者消费者模型减少线程的数量 229
8.2　端口扫描 231
8.2.1　使用Python编写端口扫描器 232
8.2.2　使用nmap扫描端口 234
8.2.3　使用python-nmap进行端口扫描 237
8.3　使用IPy进行IP地址管理 238
8.3.1　IPy模块介绍 239
8.3.2　IPy模块的基本使用 239
8.3.3　网段管理 241
8.4　使用dnspython解析DNS 242
8.4.1　dnspython简介与安装 242
8.4.2　使用dnspython进行域名解析 242
8.5　网络嗅探器Scapy 244
8.5.1　Scapy简介与安装 245
8.5.2　Scapy的基本使用 245
8.5.3　使用Scapy发送数据报 247
8.5.4　使用Scapy构造DNS查询请求 248
8.5.5　使用Scapy进行网络嗅探 251
8.5.6　案例：使用Scapy嗅探信用卡信息 251
8.6　本章总结 252
第9章　Python自动化管理 253
9.1　使用SSH协议访问远程服务器 254
9.1.1　SSH协议 254
9.1.2　OpenSSH实现 254
9.1.3　使用密钥登录远程服务器 256
9.1.4　使用ssh-agent管理私钥 257
9.2　使用Polysh批量管理服务器 258
9.2.1　批量修改密码 259
9.2.2　Polysh的使用 260
9.3　SSH协议的Python实现paramiko 261
9.3.1　paramiko的安装 261
9.3.2　SSHClient类与SFTPClient类 261
9.3.3　paramiko的基本使用 262
9.3.4　使用paramiko部署监控程序 264
9.4　自动化部署工具Fabric 264
9.4.1　Fabric安装 265
9.4.2　Fabric使用入门 265
9.4.3　fab的命令行参数 267
9.4.4　Fabric的env字典 267
9.4.5　Fabric提供的命令 269
9.4.6　Fabric提供的上下文管理器 271
9.4.7　Fabric提供的装饰器 273
9.4.8　其他功能函数 277
9.4.9　使用Fabric源码安装redis 279
9.4.10　综合案例：使用Fabric部署Flask应用 280
9.5　本章总结 284
第10章　深入浅出Ansible 286
10.1　Ansible介绍 287
10.1.1　Ansible的优点 287
10.1.2　Ansible与Fabric之间比较 288
10.1.3　Ansible与SaltStack之间比较 289
10.2　Ansible使用入门 290
10.2.1　安装Ansible 290
10.2.2　Ansible的架构 290
10.2.3　Ansible的运行环境 291
10.2.4　Ansible的ad-hoc模式 292
10.2.5　使用playbook控制服务器 293
10.3　Inventory管理 294
10.3.1　hosts文件位置 294
10.3.2　灵活定义hosts文件内容 295
10.3.3　灵活匹配hosts文件内容 296
10.3.4　动态Inventory获取 297
10.3.5　Inventory行为参数 302
10.3.6　定义服务器变量 303
10.4　YAML语法 304
10.5　Ansible模块 308
10.5.1　Ansible的模块工作原理 308
10.5.2　模块列表与帮助信息 309
10.5.3　常用的Ansible模块 309
10.5.4　模块的返回值 318
10.6　Playbook 319
10.6.1　Playbook的定义 319
10.6.2　使用ansible-playbook
执行Playbook 322
10.6.3　Playbook的详细语法 324
10.6.4　使用Playbook部署nginx 331
10.6.5　使用Playbook部署MongoDB 334
10.6.6　Playbook中的高级语法 335
10.7　role的定义与使用 341
10.7.1　role的概念 341
10.7.2　使用ansible-galaxy命令管理role 342
10.7.3　如何使用role 343
10.7.4　使用role改造部署MongoDB的例子 344
10.8　Ansible的配置文件 345
10.8.1　配置文件的查找路径 345
10.8.2　Ansible中的常用配置 345
10.9　Ansible的最佳实践 346
10.9.1　Ansible的文件组织 346
10.9.2　Ansible最佳实践 348
10.9.3　使用role部署LAMP应用 349
10.10　本章总结 352
第11章　使用Python打造MySQL专家系统 354
11.1　Python语言高级特性 354
11.1.1　深入浅出Python生成器 355
11.1.2　深入浅出Python装饰器 360
11.1.3　Python上下文管理器 368
11.2　MySQL数据库 372
11.2.1　MySQL数据库介绍 372
11.2.2　Python连接数据库 373
11.2.3　使用MySQLdb访问MySQL数据库 375
11.2.4　使用上下文管理器对数据库连接进行管理 378
11.2.5　案例：从csv文件导入数据到MySQL 379
11.3　Python并发编程 381
11.3.1　Python中的多线程 381
11.3.2　线程同步与互斥锁 384
11.3.3　线程安全队列Queue 386
11.3.4　案例：使用Python打造一个MySQL压测工具 387
11.4　专家系统设计 390
11.4.1　专家系统使用 391
11.4.2　专家系统检查内容 391
11.4.3　如何进行数据库检查 392
11.4.4　专家系统评分体系 394
11.5　MySQL专家系统整体架构 396
11.5.1　专家系统架构设计 396
11.5.2　专家系统文件组织 398
11.6　数据库专家系统的客户端设计 400
11.6.1　实现数据库连接池 400
11.6.2　使用装饰器检查参数 402
11.6.3　利用Python的动态语言特性执行命令 403
11.6.4　利用__call__方法实现可调用对象 405
11.6.5　Python的property 407
11.7　数据库专家系统服务端设计 408
11.7.1　将相同的操作提升到父类中 408
11.7.2　在Python中实现map-reduce模型 409
11.7.3　利用动态语言特性实现工厂模式 411
11.8　本章总结 412
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python Linux系统管理与自动化运维
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python网络爬虫实战
目 录
第1章 Python环境配置 1
1.1Python简介 1
1.1.1Python的历史由来 1
1.1.2Python的现状 2
1.1.3Python的应用 2
1.2Python开发环境配置 4
1.2.1Windows下安装Python 4
1.2.2Windows下安装配置pip 9
1.2.3Linux下安装Python 10
1.2.4Linux下安装配置pip 12
1.2.5永远的开始：hello world 15
1.3 本章小结 20
第2章 Python基础 21
2.1Python变量类型 21
2.1.1数字 21
2.1.2字符串 24
2.1.3列表 28
2.1.4元组 34
2.1.5字典 36
2.2Python语句 40
2.2.1条件语句——if else 40
2.2.2有限循环——for 41
2.2.3无限循环——while 43
2.2.4中断循环——continue、break 45
2.2.5异常处理——try except 47
2.2.6导入模块——import 49
2.3 函数和类 53
2.3.1函数 53
2.3.2类 59
2.4Python代码格式 65
2.4.1Python代码缩进 65
2.4.2Python命名规则 66
2.4.3Python代码注释 68
2.5Python调试 70
2.5.1Windows下IDLE调试 70
2.5.2Linux下pdb调试 73
2.6 本章小结 77
第3章 简单的Python脚本 78
3.1 九九乘法表 78
3.1.1Project分析 78
3.1.2Project实施 78
3.2 斐波那契数列 80
3.2.1Project分析 80
3.2.2Project实施 80
3.3 概率计算 81
3.3.1Project分析 81
3.3.2Project实施 82
3.4 读写文件 83
3.4.1Project分析 83
3.4.2project实施 84
3.5 本章小结 85
第4章 Python爬虫常用模块 86
4.1Python标准库之urllib2模块 86
4.1.1urllib2请求返回网页 86
4.1.2urllib2使用代理访问网页 88
4.1.3urllib2修改header 91
4.2Python标准库——logging模块 95
4.2.1简述logging模块 95
4.2.2自定义模块myLog 99
4.3 其他有用模块 102
4.3.1re模块（正则表达式操作） 102
4.3.2sys模块（系统参数获取） 105
4.3.3time模块（获取时间信息） 106
4.4 本章小结 110
第5章 Scrapy爬虫框架 111
5.1 安装Scrapy 111
5.1.1Windows下安装Scrapy环境 111
5.1.2Linux下安装Scrapy 112
5.1.3vim编辑器 113
5.2Scrapy选择器XPath和CSS 114
5.2.1XPath选择器 114
5.2.2CSS选择器 117
5.2.3其他选择器 118
5.3Scrapy爬虫实战一：今日影视 118
5.3.1创建Scrapy项目 119
5.3.2Scrapy文件介绍 120
5.3.3Scrapy爬虫编写 123
5.4Scrapy爬虫实战二：天气预报 129
5.4.1项目准备 130
5.4.2创建编辑Scrapy爬虫 131
5.4.3数据存储到json 138
5.4.4数据存储到MySQL 140
5.5Scrapy爬虫实战三：获取代理 146
5.5.1项目准备 146
5.5.2创建编辑Scrapy爬虫 147
5.5.3多个Spider 153
5.5.4处理Spider数据 157
5.6Scrapy爬虫实战四：糗事百科 159
5.6.1目标分析 159
5.6.2创建编辑Scrapy爬虫 160
5.6.3Scrapy项目中间件——添加headers 161
5.6.4Scrapy项目中间件——添加proxy 165
5.7scrapy爬虫实战五：爬虫攻防 167
5.7.1创建一般爬虫 167
5.7.2封锁间隔时间破解 171
5.7.3封锁Cookies破解 171
5.7.4封锁user-agent破解 171
5.7.5封锁IP破解 174
5.8 本章小结 177
第6章 Beautiful Soup爬虫 178
6.1 安装BeautifulSoup环境 178
6.1.1Windows下安装Beautiful Soup 178
6.1.2Linux下安装Beautiful Soup 179
6.1.3最强大的IDE——Eclipse 179
6.2BeautifulSoup解析器 188
6.2.1bs4解析器选择 188
6.2.2lxml解析器安装 189
6.2.3使用bs4过滤器 190
6.3bs4爬虫实战一：获取百度贴吧内容 196
6.3.1目标分析 196
6.3.2项目实施 197
6.3.3代码分析 205
6.3.4Eclipse调试 206
6.4bs4爬虫实战二：获取双色球中奖信息 207
6.4.1目标分析 207
6.4.2项目实施 210
6.4.3保存结果到Excel 214
6.4.4代码分析 221
6.5bs4爬虫实战三：获取起点小说信息 221
6.5.1目标分析 222
6.5.2项目实施 223
6.5.3保存结果到MySQL 226
6.5.4代码分析 230
6.6bs4爬虫实战四：获取电影信息 230
6.6.1目标分析 230
6.6.2项目实施 232
6.6.3bs4反爬虫 235
6.6.4代码分析 237
6.7bs4爬虫实战五：获取音悦台榜单 238
6.7.1目标分析 238
6.7.2项目实施 239
6.7.3代码分析 244
6.8 本章小结 245
第7章 Mechanize模拟浏览器 246
7.1 安装Mechanize模块 246
7.1.1Windows下安装Mechanize 246
7.1.2Linux下安装Mechanize 247
7.2Mechanize 测试 248
7.2.1Mechanize百度 248
7.2.2Mechanize光猫F460 251
7.3Mechanize实站一：获取Modem信息 254
7.3.1获取F460数据 254
7.3.2代码分析 257
7.4Mechanize实战二：获取音悦台公告 258
7.4.1登录原理 258
7.4.2获取Cookie的方法 259
7.4.3获取Cookie 262
7.4.4使用Cookie登录获取数据 266
7.5 本章总结 270
第8章 Selenium模拟浏览器 271
8.1 安装Selenium模块 271
8.1.1Windows下安装Selenium模块 271
8.1.2Linux下安装Selenium模块 272
8.2 浏览器选择 272
8.2.1Webdriver支持列表 272
8.2.2Windows下安装PhantomJS 273
8.2.3Linux下安装PhantomJS 276
8.3Selenium&PhantomJS抓取数据 277
8.3.1获取百度搜索结果 277
8.3.2获取搜索结果 280
8.3.3获取有效数据位置 282
8.3.4从位置中获取有效数据 284
8.4Selenium&PhantomJS实战一：获取代理 285
8.4.1准备环境 285
8.4.2爬虫代码 287
8.4.3代码解释 289
8.5Selenium&PhantomJS实战二：漫画爬虫 289
8.5.1准备环境 290
8.5.2爬虫代码 291
8.5.3代码解释 294
8.6 本章总结 294
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python网络爬虫实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python编程之美：最佳实践指南
前言  xix
第1 部分  起步
第1 章  选择一个解释器  3
Python 2 与Python 3 的状况对比  3
建议  3
那就选择Python 3 吗  4
Python 的不同实现  4
CPython  5
Stackless  5
PyPy  5
Jython  5
IronPython  6
PythonNet  6
Skulpt  6
MicroPython  7
第2 章  恰当地安装Python  9
在Mac OS X 上安装Python  9
Setuptools 和pip  11
virtualenv  11
在Linux 上安装Python  12
Setuptools 和pip  12
开发工具  13
virtualenv  14
在Windows 上安装Python  15
Setuptools 和pip  17
virtualenv  17
商业化Python 二次发行版  18
第3 章  搭建开发环境  21
文本编辑器  21
Sublime Text  22
Vim  23
Emacs  25
TextMate  26
Atom  26
Code  26
IDE  27
PyCharm/IntelliJ IDEA  28
Aptana Studio 3/Eclipse+LiClipse+PyDev  29
WingIDE  29
Spyder  30
NINJA-IDE  30
Komodo IDE  30
Eric（Eric Python IDE）  31
Visual Studio  31
增强型交互式工具  32
IDLE  32
IPython  32
bpython  33
环境隔离工具  33
虚拟环境  33
pyenv  35
Autoenv  36
virtualenvwrapper  36
Buildout  37
Conda  38
Docker  39
第2 部分  步入正题
第4 章  编写高质量的代码  43
代码风格  43
PEP 8  43
PEP 20（又名Python 之禅）  44
一般性建议  45
约定  52
习语  55
常见陷阱  58
组织好项目的结构  61
模块  61
包  65
面向对象编程  66
装饰器  67
动态类型  68
可变类型和不可变类型  69
管理依赖  71
测试代码  72
测试的基础知识  73
举例说明  76
其他流行工具  80
文档  82
项目文档  82
项目配套发行文档  83
文档字符串与块注释  84
日志  84
在库中使用logging  85
在应用中使用logging  86
选择许可证  88
上游许可证  88
许可证选项  89
软件许可相关的学习资源  90
第5 章  阅读高质量的代码  91
共同特征  92
HowDoI  92
阅读单文件脚本  93
取自HowDoI 的结构示例  96
取自HowDoI 的风格示例  97
Diamond  99
阅读一个更大的应用程序  99
取自Diamond 的结构示例  105
取自Diamond 的风格示例  109
Tablib  111
阅读一个小型库  112
取自Tablib 的结构示例  115
取自Tablib 的风格示例  123
Requests  126
阅读一个更大的库  126
取自Requests 的结构示例  130
取自Requests 的风格示例  134
Werkzeug  139
阅读一个工具包的代码  140
取自Werkzeug 的风格示例  148
取自Werkzeug 的结构示例  149
Flask  156
阅读一个框架的代码  156
取自Flask 的风格示例  163
取自Flask 的结构示例  164
第6 章  交付高质量的代码  169
有用的词汇和概念  170
打包你的代码  171
Conda  171
PyPI  171
冻结你的代码  174
PyInstaller  176
cx_Freeze  178
py2app  179
py2exe  180
bbFreeze  181
Linux 已构建分发包的打包技术  181
可执行的ZIP 文件  183
第3 部分  场景化指南
第7 章  用户交互  187
Jupyter Notebooks 项目  187
命令行应用  188
图形化用户界面应用  196
窗口部件库  196
游戏开发  202
Web 应用  203
Web 框架/ 微框架  203
Web 模板引擎  206
Web 部署  212
第8 章  代码管理和改进  215
持续集成  215
系统管理  216
服务器自动化  218
系统和任务监控  222
加速  225
与C/C++/FORTRAN 库进行交互  235
第9 章  软件接口  239
Web 客户端库  240
Web API  240
数据序列化  245
分布式系统  248
网络编程  248
密码技术  254
第10 章  数据操作  261
科学应用  262
文本操作和文本挖掘  266
Python 标准库中的字符串工具  266
图像操作  269
第11 章  数据持久化  273
结构化文件  273
数据库接口库  274
附录A  补充说明  289
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python编程之美：最佳实践指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>真实世界的Python仪器监控
第1 章 仪器学概论 ........................................................ 1
数据采集 ..................................................................................................................2
控制输出 ..................................................................................................................4
开环控制 ..........................................................................................................5
闭环控制 ..........................................................................................................6
顺序控制 ..........................................................................................................8
应用概观 ..................................................................................................................9
电子测试仪器 ...................................................................................................9
实验室仪器..................................................................................................... 11
过程控制 ........................................................................................................12
小结 .......................................................................................................................14
第2 章 基本电子学 ...................................................... 15
电荷 .......................................................................................................................15
电流 .......................................................................................................................17
基础电路理论.........................................................................................................18
电路原理图 ............................................................................................................20
直流电路特性.........................................................................................................23
欧姆定律 ........................................................................................................24
电流吸入与电流输出 ......................................................................................26
再谈电阻 ........................................................................................................27
交流电路 ................................................................................................................28
正弦波 ............................................................................................................29
电容器 ............................................................................................................30
电感器 ............................................................................................................34
其他波形：方波、斜波、三角波和脉冲 ........................................................37
接口 .......................................................................................................................38
离散数字I/O ..................................................................................................38
模拟I/O ..........................................................................................................42
计数器与定时器 .............................................................................................46
脉宽调制 ........................................................................................................48
串行I/O ..........................................................................................................49
并行I/O ..........................................................................................................51
小结 .......................................................................................................................53
推荐阅读 ................................................................................................................54
第3 章 Python 编程语言 .............................................. 55
安装Python ............................................................................................................56
Python 编程 ............................................................................................................57
Python 的命令行 ............................................................................................57
命令行参数和环境 .........................................................................................58
Python 中的对象 ............................................................................................59
Python 中的数据类型 .....................................................................................60
表达式 ............................................................................................................73
操作符 ............................................................................................................73
语句 ................................................................................................................79
字串 ................................................................................................................86
程序组织 ........................................................................................................91
模块导入 ...................................................................................................... 101
加载并运行Python 程序 .............................................................................. 104
基础输入输出 ............................................................................................... 106
提示和技巧................................................................................................... 110
Python 开发工具 .................................................................................................. 112
编辑器和IDE ............................................................................................... 112
调试器 .......................................................................................................... 115
小结 ..................................................................................................................... 115
推荐阅读 .............................................................................................................. 115
第4 章 C 语言编程 .................................................... 117
安装C 语言编程环境 ........................................................................................... 117
使用C 语言开发软件 ........................................................................................... 118
一个简单的C 程序 ....................................................................................... 119
预处理指令................................................................................................... 122
标准数据类型 ............................................................................................... 126
用户定义类型 ............................................................................................... 127
操作符 .......................................................................................................... 127
表达式 .......................................................................................................... 136
语句 .............................................................................................................. 136
数组和指针................................................................................................... 143
结构 ............................................................................................................. 146
函式 .............................................................................................................. 150
标准库 .......................................................................................................... 151
编译C 程序 .................................................................................................. 152
C 语言综述 ................................................................................................... 156
C 开发工具 ........................................................................................................... 156
小结 ..................................................................................................................... 157
推荐阅读 .............................................................................................................. 157
第5 章 Python 扩展 ................................................... 159
用C 建立Python 扩展 ........................................................................................ 160
Python 的C 扩展API ........................................................................................... 161
扩展代码的模块组织 .................................................................................... 161
Python API 类型和函数 ................................................................................ 163
方法表 .......................................................................................................... 163
方法标记 ...................................................................................................... 164
传递数据 ...................................................................................................... 165
使用Python 的C 扩展API .................................................................................. 167
通用离散I/O API ......................................................................................... 167
通用包装器示例 ........................................................................................... 169
调用扩展 ...................................................................................................... 173
Python 的ctypes 外部函数库 ............................................................................... 177
用ctypes 载入外部DLL ............................................................................... 177
ctypes 中的基本数据类型 ............................................................................. 178
使用ctypes ................................................................................................... 179
小结 ..................................................................................................................... 179
推荐阅读 .............................................................................................................. 180
第6 章 硬件：工具与耗材 .......................................... 181
必备工具 .............................................................................................................. 181
手工工具 ...................................................................................................... 182
数字万用表................................................................................................... 184
焊接工具 ...................................................................................................... 187
最好能有的工具 ........................................................................................... 189
高级工具 .............................................................................................................. 190
示波器 .......................................................................................................... 190
逻辑分析仪................................................................................................... 192
测试设备注意事项 ....................................................................................... 194
耗材 ..................................................................................................................... 194
全新和二手 .......................................................................................................... 195
小结 ..................................................................................................................... 196
推荐阅读 .............................................................................................................. 196
第7 章 物理接口 ........................................................ 197
连接器 .................................................................................................................. 197
DB 型连接器 ................................................................................................ 198
USB 连接器 .................................................................................................. 201
圆形连接器................................................................................................... 202
接线端子 ...................................................................................................... 203
接线 .............................................................................................................. 205
连接器失效................................................................................................... 207
串行接口 .............................................................................................................. 208
RS-232/EIA-232 ........................................................................................... 209
RS-485/EIA-485 ........................................................................................... 215
USB .............................................................................................................. 220
Windows 虚拟串口 ....................................................................................... 224
GPIB/IEEE-488 .................................................................................................... 226
GPIB/IEEE-488 信号 .................................................................................... 226
GPIB 连接 .................................................................................................... 228
GPIB 转接USB ............................................................................................ 229
PC 总线接口设备 ................................................................................................. 230
基于总线接口的优缺点 ................................................................................ 230
数据采集卡................................................................................................... 232
GPIB 接口卡 ................................................................................................ 232
旧并不代表差....................................................................................................... 233
小结 ..................................................................................................................... 234
推荐阅读 .............................................................................................................. 234
第8 章 开始干吧 ........................................................ 235
项目定义 ........................................................................................................... 236
需求驱动的设计 ........................................................................................... 236
从需求开始................................................................................................... 237
工程目标 ...................................................................................................... 238
需求 ..................................................................................................................... 239
为什么需要需求 ........................................................................................... 240
良好的需求................................................................................................... 241
全景 .............................................................................................................. 242
需求类型 ...................................................................................................... 242
用例 .............................................................................................................. 244
可追溯性 ...................................................................................................... 246
需求捕获 ...................................................................................................... 248
设计软件 .............................................................................................................. 248
软件设计说明 ............................................................................................... 249
SDD 的图景.................................................................................................. 249
伪代码 .......................................................................................................... 253
分而治之 ...................................................................................................... 253
处理错误和故障 ........................................................................................... 255
功能测试 .............................................................................................................. 256
为需求而测................................................................................................... 257
测试用例 ...................................................................................................... 257
测试错误处理 ............................................................................................... 260
回归测试 ...................................................................................................... 261
进展追踪 ...................................................................................................... 261
实施 ..................................................................................................................... 262
代码风格 ...................................................................................................... 262
组织你的代码 ............................................................................................... 264
代码复查 ...................................................................................................... 265
单元测试 ...................................................................................................... 268
连接到硬件................................................................................................... 277
软件文档化................................................................................................... 278
版本控制 ...................................................................................................... 281
缺陷跟踪 ...................................................................................................... 281
用户文档 .............................................................................................................. 282
小结 ..................................................................................................................... 283
推荐阅读 .............................................................................................................. 283
第9 章 控制系统概念 ................................................. 285
基础控制系统理论 ............................................................................................... 286
线性控制系统 ............................................................................................... 286
非线性控制系统 ........................................................................................... 288
顺序控制系统 ............................................................................................... 289
术语和符号................................................................................................... 290
控制系统框图 ............................................................................................... 292
传递函数 ...................................................................................................... 293
时间和频率................................................................................................... 293
控制系统类型....................................................................................................... 298
开环控制 ...................................................................................................... 299
闭环控制 ...................................................................................................... 299
非线性控制：继电器控制器 ........................................................................ 306
顺序控制系统 ............................................................................................... 308
比例、比例积分、比例积分微分控制.......................................................... 312
混合控制系统 ............................................................................................... 317
用Python 实现控制系统 ...................................................................................... 318
线性比例控制器 ........................................................................................... 318
开关式控制器 ............................................................................................... 319
简单PID 控制器 ........................................................................................... 320
小结 ..................................................................................................................... 324
推荐阅读 .............................................................................................................. 324
第10 章 构建并使用仿真器 ........................................ 327
什么是仿真 .......................................................................................................... 328
低保真和高保真 ........................................................................................... 329
模拟错误和故障 ........................................................................................... 330
使用Python 创建一个仿真器 ............................................................................... 333
程序包和模块的组织 .................................................................................... 334
数据输入/ 输出仿真器 ................................................................................. 334
交流电源控制器仿真 .................................................................................... 349
串行终端仿真器 ................................................................................................... 358
使用终端仿真器脚本 .................................................................................... 359
显示仿真数据....................................................................................................... 361
gnuplot ......................................................................................................... 361
使用gnuplot ................................................................................................. 363
使用gnuplot 将仿真器数据图表化 ............................................................... 366
创建你自己的仿真器 ........................................................................................... 369
确认仿真器的必要性 .................................................................................... 369
仿真的范围................................................................................................... 370
时间和精力................................................................................................... 371
小结 ..................................................................................................................... 371
推荐阅读 .............................................................................................................. 371
第11 章 仪器数据I/O ................................................ 373
数据I/O ：接口软件 ............................................................................................. 373
接口格式与协议 ........................................................................................... 374
Python 接口支持的工具包 ............................................................................ 383
Windows 平台上的替代品 ............................................................................ 389
在Linux 下使用基于总线的硬件I/O 设备 ................................................... 389
数据I/O ：数据采集与写入 .................................................................................. 391
基本数据I/O ................................................................................................ 391
阻塞和非阻塞调用 ....................................................................................... 398
数据I/O 方法 ............................................................................................... 399
数据I/O 错误处理 ........................................................................................ 402
处理不一致的数据 ....................................................................................... 407
小结 ..................................................................................................................... 411
推荐阅读 .............................................................................................................. 412
第12 章 读写数据文件 ............................................... 413
ASCII 数据文件 ................................................................................................... 414
原始的ASCII 字符集 ................................................................................... 414
Python 的ASCII 字符操作方法 .................................................................... 416
读写ASCII 平面文件 ................................................................................... 418
配置数据 ...................................................................................................... 425
AutoConvert.py 模块——自动转换字符串 .................................................. 427
FileUtils.py 模块——ASCII 数据文件I/O 工具 ........................................... 430
二进制数据文件 ................................................................................................... 440
平面二进制数据文件 .................................................................................... 440
用Python 处理二进制数据 ........................................................................... 442
图像数据 ...................................................................................................... 453
小结 ..................................................................................................................... 462
推荐阅读 .............................................................................................................. 462
第13 章 用户界面 ...................................................... 465
文本界面 .............................................................................................................. 465
控制台 .......................................................................................................... 465
ANSI 显示控制台技术 ................................................................................. 478
Python 和curses ........................................................................................... 494
用不用curse 是个问题吗 ............................................................................. 502
图形用户界面....................................................................................................... 502
图形用户界面的历史和概念 ........................................................................ 503
在Python 中使用GUI .................................................................................. 504
TkInter .......................................................................................................... 508
wxPython ...................................................................................................... 514
小结 ..................................................................................................................... 522
推荐阅读 .............................................................................................................. 523
第14 章 实例 ............................................................ 525
串行接口 .............................................................................................................. 525
简易DMM 数据获取 .................................................................................... 526
串行接口的离散或模拟数据I/O 设备 .......................................................... 531
串行接口及对速度的考虑 ............................................................................ 535
USB 实例：LabJack U3 ....................................................................................... 536
LabJack 连接 ................................................................................................ 537
安装LabJack 设备 ........................................................................................ 538
LabJack 与Python ........................................................................................ 539
小结 ..................................................................................................................... 546
推荐阅读 .............................................................................................................. 547
附录A 自由和开源软件资源 ....................................... 549
附录B 仪器资源 ........................................................ 553
索引 ........................................................................... 557
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>真实世界的Python仪器监控
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python网络爬虫从入门到实践
推荐序
推荐序二
前言
前言二
第1章网络爬虫入门
1.1为什么要学网络爬虫
1.1.1 网络爬虫能带来什么好处
1.1.2能从网络上爬取什么数据
1.1.3应不应该学爬虫
1.2网络爬虫是否合法
1.2.1 Robots协议
1.2.2 网络爬虫的约束
1.3网络爬虫的基本议题
1.3.1 Python爬虫的流程
1.3.2三个流程的技术实现
2章编写第一个网络爬虫
2.1搭建Python平台
2.1.1 Python的安装
2.1.2使用pip安装第三方库
2.1.3使用编译器Jupyter编程
2.2 Python使用入门
2.2.1基本命令
2.2.2数据类型
2.2.3条件语句和循环语句
2.2.4函数
2.2.5面向对象编程
2.3编写第一个简单的爬虫
第3章静态网页抓取
第4章动态网页抓取
第5章解析网页
第6章数据存储
第7章提升爬虫的速度
第8章反爬虫问题
第9章解决中文乱码
第10章登录与验证码处理
第11章服务器采集
第12章分布式爬虫
第13章爬虫实践一：维基百科
第14章爬虫实践二：知乎Live
第15章爬虫实践三：百度地图API
第16章爬虫实践四：餐厅点评
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python网络爬虫从入门到实践
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据分析基础
前言　　xi
第1章 Python 基础　　1
1.1 创建 Python 脚本　　1
1.2 运行 Python 脚本　　3
1.3 与命令行进行交互的几项技巧　　6
1.4 Python 语言基础要素　　10
1.4.1 数值　　10
1.4.2 字符串　　12
1.4.3 正则表达式与模式匹配　　16
1.4.4 日期　　19
1.4.5 列表　　21
1.4.6 元组　　26
1.4.7 字典　　27
1.4.8 控制流　　30
1.5 读取文本文件　　35
1.5.1 创建文本文件　　36
1.5.2 脚本和输入文件在同一位置　　38
1.5.3 读取文件的新型语法　　38
1.6 使用 glob 读取多个文本文件　　39
1.7 写入文本文件　　42
1.7.1　向 first_script.py 添加代码　　42
1.7.2　写入 CSV 文件　　45
1.8 print 语句　　46
1.9 本章练习　　47
第2章 CSV文件　　48
2.1 基础 Python 与 pandas　　50
2.1.1 读写 CSV 文件（第1 部分）50
2.1.2 基本字符串分析是如何失败的　　56
2.1.3 读写 CSV 文件（第2 部分）57
2.2 筛选特定的行　　58
2.2.1 行中的值满足某个条件　　59
2.2.2 行中的值属于某个集合　　60
2.2.3 行中的值匹配于某个模式/ 正则表达式　　62
2.3 选取特定的列　　64
2.3.1 列索引值　　64
2.3.2 列标题　　65
2.4 选取连续的行　　67
2.5 添加标题行　　69
2.6 读取多个 CSV 文件　　71
2.7 从多个文件中连接数据　　75
2.8 计算每个文件中值的总和与均值　　78
2.9 本章练习　　81
第3章 Excel 文件　　82
3.1 内省 Excel 工作簿　　84
3.2 处理单个工作表　　88
3.2.1 读写 Excel 文件　　88
3.2.2 筛选特定行　　92
3.2.3 选取特定列　　98
3.3 读取工作簿中的所有工作表　　101
3.3.1 在所有工作表中筛选特定行　　102
3.3.2 在所有工作表中选取特定列　　104
3.4 在 Excel 工作簿中读取一组工作表　　106
3.5 处理多个工作簿　　108
3.5.1 工作表计数以及每个工作表中的行列计数　　110
3.5.2 从多个工作簿中连接数据　　111
3.5.3 为每个工作簿和工作表计算总数和均值　　113
3.6 本章练习　　117
第4章 数据库　　118
4.1 Python 内置的 sqlite3 模块　　119
4.1.1 向表中插入新记录　　124
4.1.2 更新表中记录　　128
4.2 MySQL 数据库　　131
4.2.1 向表中插入新记录　　135
4.2.2 查询一个表并将输出写入 CSV 文件　　140
4.2.3 更新表中记录　　142
4.3 本章练习　　146
第5章 应用程序　　147
5.1 在一个大文件集合中查找一组项目　　147
5.2 为 CSV 文件中数据的任意数目分类计算统计量　　158
5.3 为文本文件中数据的任意数目分类计算统计量　　167
5.4 本章练习　　174
第6章 图与图表　　175
6.1 matplotlib　　175
6.1.1 条形图　　175
6.1.2 直方图　　177
6.1.3 折线图　　178
6.1.4 散点图　　180
6.1.5 箱线图　　181
6.2 pandas　　183
6.3 ggplot　　184
6.4 seaborn　　186
第7章 描述性统计与建模　　192
7.1 数据集　　192
7.1.1 葡萄酒质量　　192
7.1.2 客户流失　　193
7.2 葡萄酒质量　　194
7.2.1 描述性统计　　194
7.2.2 分组、直方图与 t 检验　　195
7.2.3 成对变量之间的关系和相关性　　196
7.2.4 使用最小二乘估计进行线性回归　　198
7.2.5 系数解释　　200
7.2.6 自变量标准化　　200
7.2.7 预测　　202
7.3 客户流失　　203
7.3.1 逻辑斯蒂回归　　205
7.3.2 系数解释　　207
7.3.3 预测　　208
第8章 按计划自动运行脚本　　209
8.1 任务计划程序（Windows 系统）209
8.2 cron 工具（macOS 系统和 Unix 系统）215
8.2.1 cron 表文件：一次性设置　　216
8.2.2 向 cron 表文件中添加 cron 任务　　216
第9章 从这里启航　　220
9.1 更多的标准库模块和内置函数　　221
9.1.1 Python 标准库（PSL）：更多的标准模块　　221
9.1.2 内置函数　　222
9.2 Python 包索引（PyPI）：更多的扩展模块　　222
9.2.1 NumPy　　223
9.2.2 SciPy　　227
9.2.3 Scikit-Learn　　230
9.2.4 更多的扩展包　　232
9.3 更多的数据结构　　232
9.3.1 栈　　233
9.3.2 队列　　233
9.3.3 图　　233
9.3.4 树　　234
9.4 从这里启航　　234
附录A 下载指南　　236
附录B 练习答案　　245
作者介绍　　247
封面介绍　　247
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据分析基础
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深度学习入门
译者序　　xiii
前言　　xv
第1章　Python入门　　1
1.1 Python是什么　　1
1.2 Python的安装　　2
1.2.1　Python版本　　2
1.2.2　使用的外部库　　2
1.2.3　Anaconda发行版　　3
1.3 Python解释器　　4
1.3.1　算术计算　　4
1.3.2　数据类型　　5
1.3.3　变量　　5
1.3.4　列表　　6
1.3.5　字典　　7
1.3.6　布尔型　　7
1.3.7　if 语句　　8
1.3.8　for 语句　　8
1.3.9　函数　　9
1.4 Python脚本文件　　9
1.4.1　保存为文件　　9
1.4.2　类　　10
1.5 NumPy　　11
1.5.1　导入NumPy　　11
1.5.2　生成NumPy数组　　12
1.5.3　NumPy 的算术运算　　12
1.5.4　NumPy的N维数组　　13
1.5.5　广播　　14
1.5.6　访问元素　　15
1.6 Matplotlib　　16
1.6.1　绘制简单图形　　16
1.6.2　pyplot 的功能　　17
1.6.3　显示图像　　18
1.7 小结　　19
第2章　感知机　　21
2.1 感知机是什么　　21
2.2 简单逻辑电路　　23
2.2.1　与门　　23
2.2.2　与非门和或门　　23
2.3 感知机的实现　　25
2.3.1　简单的实现　　25
2.3.2　导入权重和偏置　　26
2.3.3　使用权重和偏置的实现　　26
2.4 感知机的局限性　　28
2.4.1　异或门　　28
2.4.2　线性和非线性　　30
2.5 多层感知机　　31
2.5.1　已有门电路的组合　　31
2.5.2　异或门的实现　　33
2.6 从与非门到计算机　　35
2.7 小结　　36
第3章　神经网络　　37
3.1 从感知机到神经网络　　37
3.1.1　神经网络的例子　　37
3.1.2　复习感知机　　38
3.1.3　激活函数登场　　40
3.2 激活函数　　42
3.2.1　sigmoid 函数　　42
3.2.2　阶跃函数的实现　　43
3.2.3　阶跃函数的图形　　44
3.2.4　sigmoid 函数的实现　　45
3.2.5　sigmoid 函数和阶跃函数的比较　　46
3.2.6　非线性函数　　48
3.2.7　ReLU函数　　49
3.3 多维数组的运算　　50
3.3.1　多维数组　　50
3.3.2　矩阵乘法　　51
3.3.3　神经网络的内积　　55
3.4　　3 层神经网络的实现　　56
3.4.1　符号确认　　57
3.4.2　各层间信号传递的实现　　58
3.4.3　代码实现小结　　62
3.5 输出层的设计　　63
3.5.1　恒等函数和softmax 函数　　64
3.5.2　实现softmax 函数时的注意事项　　66
3.5.3　softmax 函数的特征　　67
3.5.4　输出层的神经元数量　　68
3.6 手写数字识别　　69
3.6.1　MNIST数据集　　70
3.6.2　神经网络的推理处理　　73
3.6.3　批处理　　75
3.7 小结　　79
第4章　神经网络的学习　　81
4.1 从数据中学习　　81
4.1.1　数据驱动　　82
4.1.2　训练数据和测试数据　　84
4.2 损失函数　　85
4.2.1　均方误差　　85
4.2.2　交叉熵误差　　87
4.2.3　mini-batch 学习　　88
4.2.4　mini-batch 版交叉熵误差的实现　　91
4.2.5　为何要设定损失函数　　92
4.3 数值微分　　94
4.3.1　导数　　94
4.3.2　数值微分的例子　　96
4.3.3　偏导数　　98
4.4 梯度　　100
4.4.1　梯度法　　102
4.4.2　神经网络的梯度　　106
4.5 学习算法的实现　　109
4.5.1　2 层神经网络的类　　110
4.5.2　mini-batch 的实现　　114
4.5.3　基于测试数据的评价　　116
4.6 小结　　118
第5章　误差反向传播法　　121
5.1 计算图　　121
5.1.1　用计算图求解　　122
5.1.2　局部计算　　124
5.1.3　为何用计算图解题　　125
5.2 链式法则　　126
5.2.1　计算图的反向传播　　127
5.2.2　什么是链式法则　　127
5.2.3　链式法则和计算图　　129
5.3 反向传播　　130
5.3.1　加法节点的反向传播　　130
5.3.2　乘法节点的反向传播　　132
5.3.3　苹果的例子　　133
5.4 简单层的实现　　135
5.4.1　乘法层的实现　　135
5.4.2　加法层的实现　　137
5.5 激活函数层的实现　　139
5.5.1　ReLU层　　139
5.5.2　Sigmoid 层　　141
5.6 AffineSoftmax层的实现　　144
5.6.1　Affine层　　144
5.6.2　批版本的Affine层　　148
5.6.3　Softmax-with-Loss 层　　150
5.7 误差反向传播法的实现　　154
5.7.1　神经网络学习的全貌图　　154
5.7.2　对应误差反向传播法的神经网络的实现　　155
5.7.3　误差反向传播法的梯度确认　　158
5.7.4　使用误差反向传播法的学习　　159
5.8 小结　　161
第6章　与学习相关的技巧　　163
6.1 参数的更新　　163
6.1.1　探险家的故事　　164
6.1.2　SGD　　164
6.1.3　SGD的缺点　　166
6.1.4　Momentum　　168
6.1.5　AdaGrad　　170
6.1.6　Adam　　172
6.1.7　使用哪种更新方法呢　　174
6.1.8　基于MNIST数据集的更新方法的比较　　175
6.2 权重的初始值　　176
6.2.1　可以将权重初始值设为0 吗　　176
6.2.2　隐藏层的激活值的分布　　177
6.2.3　ReLU的权重初始值　　181
6.2.4　基于MNIST数据集的权重初始值的比较　　183
6.3 Batch Normalization　　184
6.3.1　Batch Normalization 的算法　　184
6.3.2　Batch Normalization 的评估　　186
6.4 正则化　　188
6.4.1　过拟合　　189
6.4.2　权值衰减　　191
6.4.3　Dropout　　192
6.5 超参数的验证　　195
6.5.1　验证数据　　195
6.5.2　超参数的最优化　　196
6.5.3　超参数最优化的实现　　198
6.6 小结　　200
第7章　卷积神经网络　　201
7.1 整体结构　　201
7.2 卷积层　　202
7.2.1　全连接层存在的问题　　203
7.2.2　卷积运算　　203
7.2.3　填充　　206
7.2.4　步幅　　207
7.2.5　3 维数据的卷积运算　　209
7.2.6　结合方块思考　　211
7.2.7　批处理　　213
7.3 池化层　　214
7.4 卷积层和池化层的实现　　216
7.4.1　4 维数组　　216
7.4.2　基于im2col 的展开　　217
7.4.3　卷积层的实现　　219
7.4.4　池化层的实现　　222
7.5 CNN的实现　　224
7.6 CNN的可视化　　228
7.6.1　第1 层权重的可视化　　228
7.6.2　基于分层结构的信息提取　　230
7.7 具有代表性的CNN　　231
7.7.1　LeNet　　231
7.7.2　AlexNet　　232
7.8 小结　　233
第8章　深度学习　　235
8.1 加深网络　　235
8.1.1　向更深的网络出发　　235
8.1.2　进一步提高识别精度　　238
8.1.3　加深层的动机　　240
8.2 深度学习的小历史　　242
8.2.1　ImageNet　　243
8.2.2　VGG　　244
8.2.3　GoogLeNet　　245
8.2.4　ResNet　　246
8.3 深度学习的高速化　　248
8.3.1　需要努力解决的问题　　248
8.3.2　基于GPU的高速化　　249
8.3.3　分布式学习　　250
8.3.4　运算精度的位数缩减　　252
8.4 深度学习的应用案例　　253
8.4.1　物体检测　　253
8.4.2　图像分割　　255
8.4.3　图像标题的生成　　256
8.5 深度学习的未来　　258
8.5.1　图像风格变换　　258
8.5.2　图像的生成　　259
8.5.3　自动驾驶　　261
8.5.4　Deep Q-Network（强化学习）　　262
8.6 小结　　264
附录A　Softmax-with-Loss 层的计算图　　267
A.1 正向传播　　268
A.2 反向传播　　270
A.3 小结　　277
参考文献　　279
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深度学习入门
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>零基础学Python
前言
第一篇 Python语言基础
第1章 进入Python的世界 1
1.1 Python的由来 1
1.2 Python的特色 2
1.3 第一个Python程序 3
1.4 搭建开发环境 4
1.4.1 Python的下载和安装 4
1.4.2 交互式命令行的使用 5
1.5 Python的开发工具 5
1.5.1 PyCharm的使用 6
1.5.2 Eclipse IDE的介绍 6
1.5.3 EditPlus编辑器环境的配置 7
1.6 不同平台下的Python 9
1.7 小结 9
1.8 习题 9
第2章 Python必须知道的基础语法 10
2.1 Python的文件类型 10
2.1.1 源代码 10
2.1.2 字节代码 10
2.1.3 优化代码 11
2.2 Python的编码规范 11
2.2.1 命名规则 11
2.2.2 代码缩进与冒号 13
2.2.3 模块导入的规范 15
2.2.4 使用空行分隔代码 16
2.2.5 正确的注释 16
2.2.6 语句的分隔 19
2.3 变量和常量 20
2.3.1 变量的命名 20
2.3.2 变量的赋值 21
2.3.3 局部变量 22
2.3.4 全局变量 23
2.3.5 常量 25
2.4 数据类型 26
2.4.1 数字 26
2.4.2 字符串 27
2.5 运算符与表达式 29
2.5.1 算术运算符和算术表达式 29
2.5.2 关系运算符和关系表达式 30
2.5.3 逻辑运算符和逻辑表达式 31
2.6 小结 32
2.7 习题 32
第3章 Python的控制语句 33
3.1 结构化程序设计 33
3.2 条件判断语句 34
3.2.1 if条件语句 34
3.2.2 if…elif…else判断语句 35
3.2.3 if语句也可以嵌套 36
3.2.4 switch语句的替代方案 37
3.3 循环语句 40
3.3.1 while循环 40
3.3.2 for循环 41
3.3.3 break和continue语句 42
3.4 结构化程序示例 44
3.5 小结 46
3.6 习题 46
第4章 Python数据结构 47
4.1 元组结构 47
4.1.1 元组的创建 47
4.1.2 元组的访问 48
4.1.3 元组的遍历 50
4.2 列表结构 51
4.2.1 列表的创建 51
4.2.2 列表的使用 53
4.2.3 列表的查找、排序、反转 54
4.2.4 列表实现堆栈和队列 55
4.3 字典结构 57
4.3.1 字典的创建 57
4.3.2 字典的访问 58
4.3.3 字典的方法 60
4.3.4 字典的排序、复制 63
4.3.5 全局字典——sys.modules模块 64
4.4 序列 65
4.5 小结 67
4.6 习题 67
第5章 模块与函数 68
5.1 Python程序的结构 68
5.2 模块 69
5.2.1 模块的创建 69
5.2.2 模块的导入 69
5.2.3 模块的属性 71
5.2.4 模块的内置函数 71
5.2.5 自定义包 74
5.3 函数 76
5.3.1 函数的定义 76
5.3.2 函数的参数 77
5.3.3 函数的返回值 80
5.3.4 函数的嵌套 82
5.3.5 递归函数 84
5.3.6 lambda函数 85
5.3.7 Generator函数 86
5.4 小结 88
5.5 习题 88
第6章 字符串与正则表达式 89
6.1 常见的字符串操作 89
6.1.1 字符串的格式化 89
6.1.2 字符串的转义符 91
6.1.3 字符串的合并 93
6.1.4 字符串的截取 94
6.1.5 字符串的比较 95
6.1.6 字符串的反转 96
6.1.7 字符串的查找和替换 98
6.1.8 字符串与日期的转换 99
6.2 正则表达式应用 101
6.2.1 正则表达式简介 101
6.2.2 使用re模块处理正则表达式 103
6.3 小结 108
6.4 习题 108
第7章 使用Python处理文件 109
7.1 文件的常见操作 109
7.1.1 文件的创建 109
7.1.2 文件的读取 111
7.1.3 文件的写入 113
7.1.4 文件的删除 114
7.1.5 文件的复制 115
7.1.6 文件的重命名 116
7.1.7 文件内容的搜索和替换 117
7.1.8 文件的比较 118
7.1.9 配置文件的访问 119
7.2 目录的常见操作 121
7.2.1 创建和删除目录 122
7.2.2 目录的遍历 122
7.3 文件和流 124
7.3.1 Python的流对象 124
7.3.2 模拟Java的输入、输出流 126
7.4 文件处理示例——文件属性浏览程序 127
7.5 小结 128
7.6 习题 128
第8章 面向对象编程 129
8.1 面向对象的概述 129
8.2 类和对象 130
8.2.1 类和对象的区别 130
8.2.2 类的定义 131
8.2.3 对象的创建 131
8.3 属性和方法 132
8.3.1 类的属性 132
8.3.2 类的方法 134
8.3.3 内部类的使用 136
8.3.4 __init__方法 137
8.3.5 __del__方法 138
8.3.6 垃圾回收机制 139
8.3.7 类的内置方法 140
8.3.8 方法的动态特性 144
8.4 继承 145
8.4.1 使用继承 145
8.4.2 抽象基类 147
8.4.3 多态性 148
8.4.4 多重继承 149
8.4.5 Mixin机制 150
8.5 运算符的重载 152
8.6 Python与设计模式 154
8.6.1 设计模式简介 154
8.6.2 设计模式示例——Python实现工厂方法 155
8.7 小结 156
8.8 习题 156
第9章 异常处理与程序调试 157
9.1 异常的处理 157
9.1.1 Python中的异常 157
9.1.2 try…except的使用 158
9.1.3 try…finally的使用 160
9.1.4 使用raise抛出异常 161
9.1.5 自定义异常 161
9.1.6 assert语句的使用 162
9.1.7 异常信息 163
9.2 使用自带IDLE调试程序 164
9.3 使用Easy Eclipse for Python调试程序 165
9.3.1 新建工程 166
9.3.2 配置调试 167
9.3.3 设置断点 168
9.4 小结 170
9.5 习题 170
第10章 Python 数据库编程 171
10.1 Python环境下的数据库编程 171
10.1.1 通过ODBC访问数据库 171
10.1.2 使用DAO对象访问数据库 173
10.1.3 使用ActiveX Data Object访问数据库 174
10.1.4 Python连接数据库的专用模块 176
10.2 使用Python的持久化模块读写数据 179
10.3 嵌入式数据库SQLite 179
10.3.1 SQLite的命令行工具 179
10.3.2 使用sqlite3模块访问SQLite数据库 181
10.4 小结 182
10.5 习题 182
第二篇 Python的GUI程序设计
第11章 Python的GUI开发 183
11.1 Python的GUI开发选择 183
11.1.1 认识Python内置的GUI库Tkinter 183
11.1.2 使用Tkinter进行开发 184
11.1.3 认识PyQT GUI库 186
11.1.4 使用PyQT GUI库进行开发 187
11.2 小结 188
11.3 习题 188
第12章 GUI编程与Tkinter相关组件介绍 189
12.1 GUI程序开发简介 189
12.2 Tkinter与主要组件 190
12.2.1 在程序中使用Tkinter 190
12.2.2 顶层窗口 190
12.2.3 标签 191
12.2.4 框架 191
12.2.5 按钮 192
12.2.6 输入框 192
12.2.7 单选按钮 193
12.2.8 复选按钮 193
12.2.9 消息 194
12.2.10 滚动条 194
12.2.11 列表框 195
12.3 Tkinter所有组件简介 195
12.4 小结 196
12.5 习题 196
第三篇 Python的Web开发
第13章 Python的HTML应用 197
13.1 HTML介绍 197
13.1.1 HTML的历史 197
13.1.2 SGML、HTML、XHTML、HTML5的关系 198
13.1.3 HTML的标签 198
13.1.4 HTML的框架组成 199
13.2 URL的处理 200
13.2.1 统一资源定位符URL 200
13.2.2 URL的解析 201
13.2.3 URL的拼合 203
13.2.4 URL的分解 204
13.2.5 URL的编解码 205
13.2.6 中文的编解码 207
13.2.7 查询参数的编码 208
13.3 CGI的使用 210
13.3.1 CGI介绍 210
13.3.2 获取CGI环境信息 211
13.3.3 解析用户的输入 214
13.4 获取HTML资源 216
13.4.1 使用urlopen和urlretrieve获取HTTP资源 217
13.4.2 分析返回资源的相关信息 221
13.4.3 自定义获取资源方式 223
13.4.4 使用http.client模块获取资源 226
13.5 HTML文档的解析 228
13.6 小结 230
13.7 习题 230
第14章 Python和XML 231
14.1 XML介绍 231
14.1.1 XML的演进历史 231
14.1.2 XML的优点和限制 232
14.1.3 XML技术的Python支持 233
14.2 XML文档概览和验证 234
14.2.1 XML文档的基础概念 234
14.2.2 XML文档的结构良好性验证 234
14.2.3 XML文档的有效性验证 237
14.3 分析XML文档结构 239
14.3.1 XML的元素和标签 239
14.3.2 元素的属性 242
14.3.3 XML的名字 244
14.3.4 字符实体 245
14.3.5 CDATA段 246
14.3.6 注释 248
14.3.7 处理指令 248
14.3.8 XML定义 249
14.4 使用SAX处理XML文档 249
14.4.1 SAX介绍 250
14.4.2 SAX处理的组成部分 250
14.5 使用DOM处理XML文档 255
14.5.1 DOM介绍 255
14.5.2 xml.dom模块中的接口操作 256
14.5.3 对XML文档的操作 264
14.6 小结 269
14.7 习题 270
第15章 Python的Web开发——Django框架的应用 271
15.1 常见的Web开发框架 271
15.1.1 Zope 271
15.1.2 TurboGears 273
15.1.3 Django 273
15.1.4 其他Web开发框架 274
15.1.5 根据自身所需选择合适的开发框架 275
15.2 MVC模式 275
15.2.1 MVC模式介绍 275
15.2.2 MVC模式的优缺点 276
15.2.3 Django框架中的MVC 277
15.3 Django开发环境的搭建 277
15.3.1 Django框架的安装 277
15.3.2 数据库的配置 278
15.4 Django框架的应用 279
15.4.1 Web应用的创建 279
15.4.2 Django中的开发服务器 280
15.4.3 创建数据库 282
15.4.4 生成Django应用 283
15.4.5 创建数据模型 284
15.4.6 URL设计 285
15.4.7 创建视图 286
15.4.8 模板系统 287
15.4.9 发布Django项目 289
15.5 Django框架的高级应用 289
15.5.1 管理界面 290
15.5.2 生成数据库数据 291
15.5.3 Session功能 292
15.5.4 国际化 295
15.6 小结 296
15.7 习题 296
第四篇 Python其他应用
第16章 敏捷方法学在Python中的应用——测试驱动开发 297
16.1 测试驱动开发 297
16.1.1 测试驱动开发模式 297
16.1.2 TDD的优势 298
16.1.3 TDD的使用步骤 299
16.2 unittest测试框架 300
16.2.1 unittest模块介绍 300
16.2.2 构建测试用例 301
16.2.3 构建测试固件 302
16.2.4 组织多个测试用例 304
16.2.5 构建测试套件 305
16.2.6 重构代码 307
16.2.7 执行测试 308
16.3 使用doctest进行测试 311
16.3.1 doctest模块介绍 311
16.3.2 构建可执行文档 312
16.3.3 执行doctest测试 313
16.4 小结 315
16.5 习题 315
第17章 Python中的进程和线程 316
17.1 进程和线程 316
17.1.1 进程和线程的概念 316
17.1.2 Python中对于进程和线程处理的支持 317
17.2 Python下的进程编程 318
17.2.1 进程运行环境 318
17.2.2 创建进程 319
17.2.3 终止进程 320
17.3 使用subprocess模块管理进程 320
17.3.1 使用Popen类管理进程 321
17.3.2 调用外部系统命令 324
17.3.3 替代其他进程创建函数 324
17.4 进程间的信号机制 325
17.4.1 信号的处理 325
17.4.2 信号使用的规则 327
17.5 多线程概述 328
17.5.1 什么是多线程 328
17.5.2 线程的状态 328
17.5.3 Python中的线程支持 329
17.6 生成和终止线程 329
17.6.1 使用_thread模块 329
17.6.2 使用threading.Thread类 332
17.7 管理线程 334
17.7.1 线程状态转移 334
17.7.2 主线程对子线程的控制 334
17.7.3 线程中的局部变量 335
17.8 线程之间的同步 336
17.8.1 临界资源和临界区 336
17.8.2 锁机制 338
17.8.3 条件变量 339
17.8.4 信号量 342
17.8.5 同步队列 342
17.8.6 线程同步小结 344
17.9 小结 344
17.10 习题 344
第18章 基于Python的系统管理 345
18.1 增强的交互式环境IPython 345
18.1.1 IPython介绍 345
18.1.2 IPython的安装 346
18.1.3 IPython的启动 347
18.1.4 IPython的环境配置 348
18.2 和IPython的简单交互 349
18.2.1 IPython中的输入和输出 349
18.2.2 输出提示符的区别 349
18.2.3 输出提示符区别的原因 350
18.3 IPython中的magic函数 352
18.3.1 magic函数的使用和构造 352
18.3.2 目录管理 352
18.3.3 对象信息的收集 356
18.3.4 magic函数小结 359
18.4 IPython适合于系统管理的特点 359
18.4.1 Tab补全 359
18.4.2 历史记录功能 361
18.4.3 执行外部系统命令和运行文件 363
18.4.4 对象查看和自省 367
18.4.5 直接编辑代码 370
18.4.6 设置别名和宏 371
18.5 使用Python进行文件管理 373
18.5.1 文件的比较 373
18.5.2 文件的归档 375
18.5.3 文件的压缩 377
18.6 使用Python定时执行任务 379
18.6.1 使用休眠功能 379
18.6.2 使用sched模块来定时执行任务 380
18.7 小结 380
18.8 习题 380
第19章 Python和网络编程 381
19.1 网络模型介绍 381
19.1.1 OSI简介 381
19.1.2 TCP/IP简介 382
19.2 Socket应用 383
19.2.1 Socket基础 383
19.2.2 Socket的工作方式 383
19.3 服务器端和客户端通信 384
19.3.1 服务器端的构建 384
19.3.2 客户端的构建 389
19.4 异步通信方式 391
19.4.1 使用Fork方式 391
19.4.2 使用线程方式 392
19.4.3 使用异步IO方式 393
19.4.4 使用asyncore模块 397
19.5 Twisted网络框架 399
19.5.1 Twisted框架介绍 400
19.5.2 Twisted框架下服务器端的实现 400
19.5.3 Twisted框架下服务器端的其他处理 401
19.6 小结 404
19.7 习题 404
第20章 常见的Python网络应用 405
20.1 使用FTP传输文件 405
20.1.1 FTP的工作原理和Python库支持 405
20.1.2 FTP的登录和退出 406
20.1.3 FTP的数据传输 407
20.2 使用POP3获取邮件 409
20.2.1 POP3协议介绍 409
20.2.2 poplib模块的使用 410
20.3 使用SMTP发送邮件 411
20.3.1 SMTP协议介绍 411
20.3.2 smtplib模块的使用 411
20.4 使用Telnet远程登录 413
20.4.1 Telnet协议介绍和Python库支持 413
20.4.2 telnetlib模块的使用 413
20.5 使用SNMP管理网络 414
20.5.1 SNMP协议组成 415
20.5.2 PySNMP框架介绍及使用 415
20.6 网络分析 417
20.6.1 网络分析概述 417
20.6.2 使用Scapy在网络中抓包分析 418
20.7 小结 420
20.8 习题 420
第21章 图像处理 421
21.1 图像处理相关概念 421
21.1.1 Python下的图像处理包 421
21.1.2 Pillow支持的图像文件格式 422
21.1.3 图像处理中的其他概念 423
21.2 基本的图像处理 424
21.2.1 图像的读写操作 424
21.2.2 获取图像信息 425
21.2.3 图像文件格式的转换 427
21.2.4 图像的裁剪和合成 428
21.2.5 图像的变换 430
21.3 图像处理的高级应用 432
21.3.1 图像的通道操作 432
21.3.2 对图像的增强 435
21.3.3 Pillow中的内置滤镜 437
21.4 小结 438
21.5 习题 438
第22章 Python语言的扩展与嵌入 439
22.1 Python语言的扩展 439
22.1.1 Python扩展简介 439
22.1.2 一个C扩展的例子 440
22.1.3 模块方法表和初始化函数 441
22.1.4 编译和测试 442
22.2 Python语言的嵌入 445
22.2.1 Python嵌入简介 445
22.2.2 一个Python嵌入的例子 445
22.2.3 更好的嵌入 446
22.3 小结 449
22.4 习题 449
第23章 Windows下的Python开发 450
23.1 组件对象模型 450
23.1.1 组件对象模型介绍 450
23.1.2 COM结构 451
23.1.3 COM对象的交互 451
23.2 Python对COM技术的支持 452
23.2.1 Python中的Windows扩展：PyWin32 452
23.2.2 客户端COM组件 453
23.2.3 实现COM组件 454
23.3 Windows下的常见Python应用 457
23.3.1 对Word的自动访问 457
23.3.2 对Excel的自动访问 458
23.3.3 对PowerPoint的自动访问 460
23.3.4 对Outlook的自动访问 461
23.4 小结 462
23.5 习题 462
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>零基础学Python
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Django企业开发实战
第一部分　初入江湖
第1章　需求　　2
1.1　需求文档　　3
1.2　需求评审/分析　　4
1.2.1　博客需求评审　　5
1.2.2　评审之后　　6
1.3　功能分析　　6
1.3.1　需求列表　　6
1.3.2　功能点梳理　　7
1.3.3　模块划分　　8
1.4　模块划分　　9
1.4.1　实体及关系　　9
1.4.2　模块划分　　10
1.5　本章总结　　12
第2章　框架基础和技术选型　　13
2.1　Python 2.7与Python 3.x　　13
2.1.1　历史演进　　13
2.1.2　现实场景　　14
2.1.3　为未来做准备　　15
2.1.4　参考资料　　15
2.2　WSGI——Web框架基础　　15
2.2.1　简介　　15
2.2.2　简单的Web Server　　16
2.2.3　多线程版的Web Server　　17
2.2.4　简单的WSGI Application　　20
2.2.5　理解WSGI　　22
2.2.6　WSGI中间件和Werkzeug　　23
2.2.7　参考资料　　24
2.2.8　扩展阅读　　24
2.3　Flask框架　　24
2.3.1　入门推荐　　25
2.3.2　Flask内置功能　　25
2.3.3　匹配需求　　26
2.3.4　总结　　26
2.4　Tornado框架　　26
2.4.1　印象　　26
2.4.2　内置功能　　27
2.4.3　总结　　27
2.5　Django框架　　28
2.5.1　新手友好程度　　28
2.5.2　内置功能　　29
2.5.3　总结　　29
2.5.4　参考资料　　29
2.6　本章总结　　30
第3章　Django小试牛刀　　31
3.1　如何阅读Django文档　　31
3.1.1　文档结构　　31
3.1.2　总结　　36
3.2　学员管理系统的后台开发　　37
3.2.1　需求　　37
3.2.2　初始化环境　　37
3.2.3　创建项目　　38
3.2.4　创建App　　38
3.2.5　编写代码　　39
3.2.6　基础配置（中文）　　41
3.2.7　总结　　41
3.3　学员管理系统的前台开发　　41
3.3.1　开发首页　　41
3.3.2　输出数据　　42
3.3.3　提交数据　　44
3.3.4　优化数据，获取逻辑　　47
3.3.5　总结　　47
3.4　学员管理系统的进阶部分　　48
3.4.1　使用class-based view　　48
3.4.2　配置middleware　　49
3.4.3　编写TestCase提升代码稳定性　　53
3.4.4　总结　　57
3.5　本章总结　　57
第二部分　正式开发
第4章　进入开发　　60
4.1　编码规范　　60
4.1.1　import this（Python之禅）　　61
4.1.2　Python编码规范　　62
4.1.3　Django编码风格　　66
4.1.4　总结　　69
4.1.5　参考资料　　69
4.2　虚拟环境　　69
4.2.1　Python 3.3之后自带venv模块　　69
4.2.2　virtualenv的用法　　70
4.2.3　总结　　71
4.2.4　参考资料　　71
4.3　合理的项目结构　　71
4.3.1　原则　　71
4.3.2　通用项目结构　　71
4.3.3　Django项目结构　　72
4.3.4　总结　　74
4.3.5　参考资料　　74
4.4　版本管理与协作：Git　　74
4.4.1　我们的协作方式　　74
4.4.2　Git的基本概念　　75
4.4.3　案例演示　　76
4.4.4　Git进阶　　76
4.4.5　总结　　80
4.4.6　参考资料　　80
4.5　本章总结　　80
第5章　奠定项目基石：Model　　81
5.1　创建项目及配置　　81
5.1.1　拆分settings以适应不同的运行环境　　83
5.1.2　配置settings　　84
5.1.3　配置Git　　85
5.1.4　总结　　86
5.1.5　参考资料　　86
5.2　编写Model层的代码　　86
5.2.1　创建App　　87
5.2.2　配置INSTALLED_APPS　　92
5.2.3　创建数据库[表]　　93
5.2.4　提交代码　　95
5.2.5　总结　　96
5.2.6　参考资料　　96
5.3　Model层：字段介绍　　96
5.3.1　ORM的基本概念　　97
5.3.2　常用字段类型　　98
5.3.3　参数　　99
5.3.4　总结　　100
5.3.5　参考资料　　101
5.4　Model层：QuerySet的使用　　101
5.4.1　QuerySet的概念　　101
5.4.2　常用的QuerySet接口　　102
5.4.3　进阶接口　　104
5.4.4　常用的字段查询　　105
5.4.5　进阶查询　　106
5.4.6　总结　　107
5.4.7　参考资料　　107
5.5　本章总结　　107
第6章　开发管理后台　　108
6.1　配置admin页面　　108
6.1.1　创建blog的管理后台　　109
6.1.2　comment的admin配置　　115
6.1.3　config的admin配置　　115
6.1.4　详细配置　　116
6.1.5　总结　　117
6.2　根据需求定制admin　　117
6.2.1　定义list页面　　117
6.2.2　编辑页面的配置　　120
6.2.3　自定义静态资源引入　　122
6.2.4　自定义Form　　123
6.2.5　在同一页面编辑关联数据　　123
6.2.6　定制site　　124
6.2.7　admin的权限逻辑以及SSO登录　　125
6.2.8　总结　　127
6.2.9　参考资料　　127
6.3　抽取Admin基类　　127
6.3.1　抽象author基类　　127
6.3.2　总结　　131
6.4　记录操作日志　　131
6.4.1　使用LogEntry　　131
6.4.2　查询某个对象的变更　　133
6.4.3　在admin页面上查看操作日志　　133
6.5　本章总结　　134
第7章　开发面向用户的界面　　135
7.1　搭建基础结构与展示文章数据　　135
7.1.1　分析URL和页面数据　　135
7.1.2　编写URL代码　　137
7.1.3　编写View代码　　138
7.1.4　配置模板　　139
7.1.5　模板找不到的错误处理　　140
7.1.6　编写正式的View代码　　141
7.1.7　配置模板数据　　142
7.1.8　总结　　144
7.1.9　参考资料　　144
7.2　配置页面通用数据　　144
7.2.1　完善模板信息　　144
7.2.2　重构post_list视图　　146
7.2.3　分类信息　　147
7.2.4　侧边栏配置　　150
7.2.5　总结　　150
7.3　封装侧边栏逻辑　　150
7.3.1　调整模型　　151
7.3.2　封装好SideBar　　151
7.3.3　总结　　153
7.4　整理模板代码　　153
7.4.1　抽象基础模板　　153
7.4.2　解耦硬编码　　155
7.4.3　总结　　157
7.5　升级至class-based view　　157
7.5.1　函数与类　　157
7.5.2　理解class-based view　　157
7.5.3　改造代码　　162
7.5.4　总结　　166
7.5.5　参考资料　　166
7.6　Django的View是如何处理请求的　　166
7.6.1　class-based view的处理流程　　166
7.6.2　总结　　167
7.7　本章总结　　167
第8章　引入前端样式框架Bootstrap　　168
8.1　Bootstrap的基本用法　　169
8.1.1　介绍　　169
8.1.2　容器和栅格系统　　169
8.1.3　简单的页面布局　　171
8.1.4　总结　　174
8.1.5　参考资料　　174
8.2　基于Bootstrap美化页面　　174
8.2.1　增加themes目录　　175
8.2.2　修改模板　　176
8.2.3　总结　　180
8.3　配置线上静态资源　　180
8.3.1　内联CSS和外联CSS　　180
8.3.2　Django中的静态资源　　181
8.3.3　在模板中使用静态资源　　182
8.3.4　总结　　183
8.3.5　参考资料　　183
8.4　本章总结　　183
第9章　完成整个博客系统　　184
9.1　增加搜索和作者过滤　　184
9.1.1　增加搜索功能　　185
9.1.2　增加作者页面　　186
9.1.3　总结　　186
9.2　增加友链页面　　186
9.3　增加评论模块　　188
9.3.1　评论提交的方式　　188
9.3.2　评论模块通用化改造　　188
9.3.3　实现评论　　190
9.3.4　抽象出评论模块组件和Mixin　　195
9.3.5　修改最新评论模板　　197
9.3.6　总结　　197
9.3.7　参考资料　　197
9.4　配置Markdown编写文章的支持　　197
9.4.1　Markdown第三方库　　197
9.4.2　评论内容支持　　198
9.4.3　文章正文使用Markdown　　198
9.4.4　配置代码高亮　　199
9.4.5　总结　　201
9.4.6　参考资料　　201
9.5　增加访问统计　　201
9.5.1　文章访问统计分析　　202
9.5.2　实现文章访问统计　　203
9.5.3　更加合理的方案　　206
9.5.4　总结　　206
9.5.5　参考资料　　206
9.6　配置RSS和sitemap　　206
9.6.1　实现RSS输出　　206
9.6.2　实现sitemap　　208
9.6.3　配置RSS和sitemap的
urls.py　　209
9.6.4　总结　　210
9.6.5　参考资料　　210
9.7　本章总结　　210
第三部分　第三方插件的使用
第10章　使用第三方插件增强管理后台　　214
10.1　xadmin介绍和使用　　215
10.1.1　特性　　215
10.1.2　安装最新的xadmin代码　　216
10.1.3　admin替换为xadmin　　216
10.1.4　fieldset修改为FieldSet　　218
10.1.5　静态资源Media配置　　219
10.1.6　自定义过滤器　　219
10.1.7　数据处理上的差异　　221
10.1.8　处理inline　　221
10.1.9　site title和site footer的处理　　222
10.1.10　去掉Django admin自带的log配置　　222
10.1.11　总结　　222
10.2　使用django-autocomplete-light优化性能　　222
10.2.1　创造1万个分类　　223
10.2.2　django-autocomplete-light介绍　　224
10.2.3　引入插件　　224
10.2.4　总结　　226
10.2.5　参考资料　　226
10.3　使用django-ckeditor开发富文本编辑器　　226
10.3.1　基础配置　　227
10.3.2　配置图片　　228
10.3.3　上传图片配置　　228
10.3.4　自定义存储以及水印　　229
10.3.5　Markdown和django-ckeditor共存　　231
10.3.6　总结　　234
10.3.7　参考资料　　234
10.4　本章总结　　235
第11章　使用django-rest-framework　　236
11.1　接口需求及django-rest-framework介绍　　237
11.1.1　快速上手　　237
11.1.2　配置API docs　　240
11.1.3　总结　　242
11.1.4　参考资料　　242
11.2　生成我们的RESTful接口　　242
11.2.1　区分list和detail　　242
11.2.2　实现分页　　243
11.2.3　实现Category接口　　244
11.2.4　HyperlinkedModelSeria-lizer的使用　　246
11.2.5　其他数据接口的实现　　248
11.2.6　总结　　248
11.2.7　参考资料　　248
11.3　本章总结　　249
第四部分　上线前的准备及线上问题排查
第12章　调试和优化　　252
12.1　常用的调试和调优手段　　252
12.1.1　调试手段　　252
12.1.2　调优手段　　259
12.1.3　总结　　262
12.1.4　参考资料　　262
12.2　使用django-debug-toolbar优化系统　　262
12.2.1　快速配置　　262
12.2.2　解读数据　　263
12.2.3　配置第三方panel　　267
12.2.4　line_profiler　　269
12.2.5　总结　　271
12.2.6　参考资料　　271
12.3　使用silk　　271
12.3.1　快速配置silk　　271
12.3.2　配置profiling　　273
12.3.3　总结　　273
12.3.4　参考资料　　273
12.4　本章总结　　274
第13章　配置MySQL和缓存　　275
13.1　配置MySQL　　275
13.1.1　使用CONN_MAX_AGE优化数据库连接　　276
13.1.2　配置正式的settings　　277
13.1.3　总结　　277
13.1.4　参考资料　　277
13.2　缓存的演化　　278
13.2.1　什么是缓存　　278
13.2.2　缓存装饰器　　279
13.2.3　增强缓存装饰器　　280
13.2.4　不引入Redis吗　　283
13.2.5　继续演变我们的缓存逻辑　　284
13.2.6　Django中的缓存配置　　284
13.2.7　配置Redis缓存　　286
13.2.8　应用场景和缓存的粒度　　287
13.2.9　总结　　287
13.2.10　参考资料　　288
13.3　本章总结　　288
第14章　上线前的准备　　289
14.1　你的代码如何为用户提供服务　　290
14.1.1　整体结构　　290
14.1.2　项目部署方案　　291
14.1.3　系统架构　　292
14.1.4　总结　　292
14.2　标准化打包和自动化部署　　292
14.2.1　配置项目的setup.py　　293
14.2.2　sdist与bdist_wheel　　295
14.2.3　配置内部PyPI服务器　　296
14.2.4　自动化部署　　298
14.2.5　编写fabfile配置　　299
14.2.6　总结　　303
14.2.7　参考资料　　304
14.3　在生产环境中运行项目　　304
14.3.1　为什么需要使用Gunicorn　　304
14.3.2　Gunicorn简介　　305
14.3.3　使用Gunicorn　　306
14.3.4　Supervisor介绍　　307
14.3.5　自动化部署和supervisord　　310
14.3.6　setup.py和requirements.txt　　311
14.3.7　配置正式settings　　312
14.3.8　静态文件处理　　315
14.3.9　总结　　315
14.3.10　参考资料　　315
14.4　配置Nginx　　315
14.4.1　Nginx介绍　　315
14.4.2　为什么使用Nginx　　316
14.4.3　配置Nginx　　318
14.4.4　总结　　320
14.4.5　参考资料　　320
14.5　常用的监控方式　　320
14.5.1　实时监控　　320
14.5.2　统计分析　　321
14.5.3　业务监控（埋点统计）　　322
14.5.4　总结　　322
14.6　试试你的系统能抗多少请求　　322
14.6.1　计算系统承载量　　322
14.6.2　反推一下　　324
14.6.3　压力测试　　324
14.6.4　压测工具介绍　　324
14.6.5　完全模拟真实流量　　326
14.6.6　缓存加速访问　　327
14.6.7　总结　　328
14.6.8　参考资料　　328
14.7　本章总结　　328
第15章　升级到Django 2.0　　329
15.1　Django 2.x——Python 2时代的逝去　　329
15.2　轻松升级到Django 2.0　　330
15.2.1　几个重要的变化　　330
15.2.2　第三方库的升级　　331
15.2.3　总结　　331
15.3　本章总结　　332
第16章　最后总结　　333
16.1　技术栈总结　　333
16.1.1　技术栈列表　　333
16.1.2　总结　　334
16.2　后续可实践方向　　334
16.2.1　精于一点　　335
16.2.2　持续滚动雪球　　335
16.3　Django Web开发技术栈清单　　336
16.3.1　Python基础　　336
16.3.2　Django基础　　336
16.3.3　Django进阶　　338
16.3.4　部署相关　　338
16.3.5　MySQL数据库　　339
16.3.6　Redis　　339
16.3.7　常用算法　　339
16.3.8　总结　　339
16.4　最后　　340
附录A　使用Fabric 2.0　　341
附录B　使用uWSGI来启动Django程序　　347
附录C　Sentry安装和配置　　350
附录D　评论验证码功能　　354
附录E　通过signal来解耦代码　　358
附录F　实现文章置顶的几种方案　　363
附录G　以腾讯云为例演示部署流程　　365
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Django企业开发实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python从入门到项目实践
第1 篇 基础篇
第1 章 踏上Python 之旅
1.1 Python概述
• 1.1.1 Python简介
• 1.1.2 Python的版本
• 1.1.3 Python的应用领域
1.2 搭建Python开发环境
• 1.2.1 安装Python
• 1.2.2 解决提示“'python'不是内部或外部命令……”
1.3 使用IDLE编写“hello world”
1.4 实战任务
• 任务1：输出“Go Big Or Go Home”
• 任务2：输出程序员节“1024”的含义
• 任务3：模拟输出用户登录输入窗口
• 任务4：输出金庸先生的作品口诀
• 任务5：输出银行交易提醒短信
第2 章 熟悉PyCharm 开发环境
2.1 PyCharm下载与安装
• 2.1.1 PyCharm下载
• 2.1.2 PyCharm安装
2.2 测试PyCharm开发环境
• 2.2.1 运行PyCharm
• 2.2.2 创建工程目录
• 2.2.3 编写“hello world”程序
2.3 PyCharm常用操作
• 2.3.1 在同一个工程下创建多个程序文件
• 2.3.2 运行程序的多种方法
• 2.3.3 保存程序
• 2.3.4 关闭程序或工程
• 2.3.5 删除程序
• 2.3.6 打开最近的工程
• 2.3.7 调试断点
2.4 熟悉PyCharm开发环境
2.5 PyCharm开发环境配置
• 2.5.1 作者信息等设置
• 2.5.2 设置Python解析器
• 2.5.3 设置开发环境字体
2.6 实战任务
• 任务1：输出“eat our own dog food”
• 任务2：输出天气预报
• 任务3：输出地铁来了主界面
• 任务4：输出订购机票以及航班信息的界面
• 任务5：输出字符画——史努比
• 任务6：输出验证码界面
第3 章 Python 输入与输出
3.1 基本输入和输出
• 3.1.1 使用print()函数输出
• 3.1.2 使用input()函数输入
3.2 注 释
• 3.2.1 单行注释
• 3.2.2 多行注释
• 3.2.3 中文编码声明注释
3.3 代码缩进
3.4 编码规范
3.5 命名规范
3.6 实战任务
• 任务1：输出字母、数字或符号的ASCII状态值
• 任务2：模拟微信支付实现付款功能
• 任务3：输出向往的生活场景
• 任务4：模拟特价商品销售倒计时提醒
• 任务5：模拟成语填空游戏
第4 章 变量与基本数据类型
4.1 保留字与标识符
• 4.1.1 保留字
• 4.1.2 标识符
4.2 变 量
• 4.2.1 理解Python中的变量
• 4.2.2 变量的定义与使用
4.3 基本数据类型
• 4.3.1 数字类型
• 4.3.2 字符串类型
• 4.3.3 布尔类型
• 4.3.4 数据类型转换
4.4 实战任务
• 任务1：破译爬虫项目实践活动的日期密码
• 任务2：用不同的数据类型完成告白
• 任务3：将十进制数转换为二进制、八进制、十六进制
• 任务4：输出游戏玩家的功力值
• 任务5：模拟石头、剪子、布游戏
• 任务6：输出球赛结果对比图
• 任务7：模拟输出摇一摇免单的效果
第5 章 运 算 符
5.1 算术运算符
5.2 赋值运算符
5.3 比较（关系）运算符
5.4 逻辑运算符
5.5 位运算符
5.6 运算符的优先级
5.7 实战任务
• 任务1：计算爱国者导弹的总数量
• 任务2：奋斗的青春最美丽
• 任务3：计算汽车平均油耗及费用
• 任务4：华氏温度转换成摄氏温度
第6 章 列表和元组
6.1 序 列
• 6.1.1 索引
• 6.1.2 切片
• 6.1.3 序列相加
• 6.1.4 乘法（Multiplying）
• 6.1.5 检查某个元素是否是序列的成员（元素）
• 6.1.6 计算序列的长度、最大值和最小值
6.2 列 表
• 6.2.1 列表的创建和删除
• 6.2.2 访问列表元素
• 6.2.3 遍历列表
• 6.2.4 添加、修改和删除列表元素
• 6.2.5 对列表进行统计计算
• 6.2.6 对列表进行排序
• 6.2.7 列表推导式
6.3 元 组
• 6.3.1 元组的创建和删除
• 6.3.2 访问元组元素
• 6.3.3 修改元组元素
• 6.3.4 元组推导式
• 6.3.5 元组与列表的区别
6.4 实战任务
• 任务1：解决“千年虫”问题
• 任务2：QQ运动周报
• 任务3：模拟购物车购物过程
第7 章 字符串与正则表达式
7.1 字符串常用操作
• 7.1.1 拼接字符串
• 7.1.2 计算字符串的长度
• 7.1.3 截取字符串
• 7.1.4 分割字符串
• 7.1.5 检索字符串
• 7.1.6 字母的大小写转换
• 7.1.7 去除字符串中的空格和特殊字符
• 7.1.8 格式化字符串
7.2 正则表达式基础
• 7.2.1 行定位符
• 7.2.2 元字符
• 7.2.3 限定符
• 7.2.4 字符类
• 7.2.5 排除字符
• 7.2.6 选择字符
• 7.2.7 转义字符
• 7.2.8 分组
• 7.2.9 在Python中使用正则表达式语法
7.3 使用re模块实现正则表达式操作
• 7.3.1 匹配字符串
• 7.3.2 替换字符串
• 7.3.3 使用正则表达式分割字符串
7.4 实战任务
• 任务1：字符串综合训练
• 任务2：查找字符串中字符出现的次数
• 任务3：格式化输出商品的编号和单价
• 任务4：删除字符串中重复的字符
• 任务5：输出身份证中的生日信息
第8 章 if 选择语句
8.1 程序结构
8.2 常用选择语句
• 8.2.1 最简单的if语句
• 8.2.2 if…else语句
• 8.2.3 if…elif…else语句
• 8.2.4 if语句的嵌套
8.3 使用and连接条件的选择语句
8.4 使用or连接条件的选择语句
8.5 使用not关键字的选择语句
8.6 实战任务
• 任务1：判断输入的支付密码是否合法
• 任务2：竞猜商品价格
第9 章 循环结构语句
9.1 for循环
9.2 while循环
9.3 循环嵌套
9.4 跳转语句
• 9.4.1 break语句
• 9.4.2 continue语句
9.5 实战任务
• 任务1：输出字母或数字的ASCII值
• 任务2：编程输出星号（*）阵列
• 任务3：分类输出福布斯科技榜排行
第2 篇 进阶篇
第10 章 字典与集合
10.1 字 典
• 10.1.1 字典的创建和删除
• 10.1.2 通过“键值对”访问字典
• 10.1.3 遍历字典
• 10.1.4 添加、修改和删除字典元素
• 10.1.5 字典推导式
10.2 集 合
• 10.2.1 集合的创建
• 10.2.2 集合的添加和删除
• 10.2.3 集合的交集、并集和差集运算
10.3 列表、元组、字典和集合的区别
10.4 实战任务
• 任务1：统计需要取快递人员的名单
• 任务2：模拟手机通讯录管理
第11 章 用函数实现模块化程序设计
11.1 函数的创建和调用
• 11.1.1 创建一个函数
• 11.1.2 调用函数
• 11.1.3 pass空语句
11.2 参数传递
• 11.2.1 了解形式参数和实际参数
• 11.2.2 位置参数
• 11.2.3 关键字参数
• 11.2.4 为参数设置默认值
• 11.2.5 可变参数
11.3 返 回 值
11.4 变量的作用域
• 11.4.1 局部变量
• 11.4.2 全局变量
11.5 匿名函数
11.6 常用Python内置函数
11.7 实战任务
• 任务1：暗语输出信息
• 任务2：模拟货币兑换
• 任务3：模拟星座判断
第12 章 类和对象
12.1 面向对象概述
• 12.1.1 对象
• 12.1.2 类
• 12.1.3 面向对象程序设计的特点
12.2 类的定义和使用
• 12.2.1 定义类
• 12.2.2 创建类的实例
• 12.2.3 “魔术”方法—__init__()
• 12.2.4 创建类的成员并访问
• 12.2.5 访问限制
12.3 属 性
• 12.3.1 创建用于计算的属性
• 12.3.2 为属性添加安全保护机制
12.4 继 承
• 12.4.1 继承的基本语法
• 12.4.2 方法重写
• 12.4.3 派生类中调用基类的__init__()方法
12.5 实战任务
• 任务1：模拟银行账户资金交易管理
• 任务2：设计药品medicine类
第13 章 模 块
13.1 模块概述
13.2 自定义模块
• 13.2.1 创建模块
• 13.2.2 使用import语句导入模块
• 13.2.3 使用from…import语句导入模块
• 13.2.4 模块搜索目录
13.3 以主程序的形式执行
13.4 Python中的包
• 13.4.1 Python程序的包结构
• 13.4.2 创建和使用包
13.5 引用其他模块
• 13.5.1 导入和使用标准模块
• 13.5.2 第三方模块的下载与安装
13.6 实战任务
• 任务1：模拟高铁售票系统
• 任务2：推算几天后的日期
• 任务3：输出福彩3D号码
第14 章 文件与IO
14.1 基本文件操作
• 14.1.1 创建和打开文件
• 14.1.2 关闭文件
• 14.1.3 打开文件时使用with语句
• 14.1.4 写入文件内容
• 14.1.5 读取文件
14.2 目录操作
• 14.2.1 os和os.path模块
• 14.2.2 路径
• 14.2.3 判断目录是否存在
• 14.2.4 创建目录
• 14.2.5 删除目录
• 14.2.6 遍历目录
14.3 高级文件操作
• 14.3.1 删除文件
• 14.3.2 重命名文件和目录
• 14.3.3 获取文件基本信息
14.4 实战任务
• 任务1：记录用户登录日志
• 任务2：模拟淘宝客服自动回复
第3 篇 高级篇
第15 章 使用Python 操作数据库
15.1 数据库编程接口
• 15.1.1 连接对象
• 15.1.2 游标对象
15.2 使用SQLite
• 15.2.1 创建数据库文件
• 15.2.2 操作SQLite
15.3 使用MySQL
• 15.3.1 下载安装MySQL
• 15.3.2 安装PyMySQL
• 15.3.3 连接数据库
• 15.3.4 创建数据表
• 15.3.5 操作MySQL数据表
15.4 实战任务
• 任务1：记录用户登录日志（数据库版）
• 任务2：模拟会员管理系统
第16 章 进程和线程
16.1 什么是进程
16.2 创建进程的常用方式
• 16.2.1 使用multiprocessing模块创建进程
• 16.2.2 使用Process子类创建进程
• 16.2.3 使用进程池Pool创建进程
16.3 通过队列实现进程间通信
• 16.3.1 队列简介
• 16.3.2 多进程队列的使用
• 16.3.3 使用队列在进程间通信
16.4 什么是线程
16.5 创建线程
• 16.5.1 使用threading模块创建线程
• 16.5.2 使用Thread子类创建线程
16.6 线程间通信
• 16.6.1 什么是互斥锁
• 16.6.2 使用互斥锁
• 16.6.3 使用队列在线程间通信
16.7 关于线程需要注意的两点
• 16.7.1 进程和线程的区别
• 16.7.2 多线程非全局变量是否要加锁
16.8 实战任务
• 任务1：模拟倒计时程序
• 任务2：生成日志与读取日志
第17 章 网络编程
17.1 网络基础
• 17.1.1 为什么要使用通信协议
• 17.1.2 TCP/IP简介
• 17.1.3 UDP简介
• 17.1.4 Socket简介
17.2 TCP编程
• 17.2.1 创建TCP服务器
• 17.2.2 创建TCP客户端
• 17.2.3 执行TCP服务器和客户端
17.3 UDP编程
• 17.3.1 创建UDP 服务器
• 17.3.2 创建UDP 客户端
• 17.3.3 执行UDP 服务器和客户端
17.4 实战任务
• 任务1：模拟网络嗅探器
• 任务2：扫描并输出局域网占用的IP地址
• 任务3：输出本地计算机名称与本地计算机的IP地址
• 任务4：获取远程主机的IP地址
• 任务5：简单Web聊天程序
第18 章 异常处理及程序调试
18.1 异常概述
18.2 异常处理语句
• 18.2.1 try…except语句
• 18.2.2 try…except…else语句
• 18.2.3 try…except…finally语句
• 18.2.4 使用raise语句抛出异常
18.3 程序调试
• 18.3.1 使用自带的IDLE进行程序调试
• 18.3.2 使用assert语句调试程序
第4 篇 框架篇
第19 章 常用的GUI 框架
19.1 初识GUI
• 19.1.1 什么是GUI
• 19.1.2 常用的GUI框架
19.2 wxPython框架的使用
• 19.2.1 安装 wxPython
• 19.2.2 创建一个wx.App的子类
• 19.2.3 直接使用wx.App
• 19.2.4 使用wx.Frame框架
• 19.2.5 常用控件
• 19.2.6 BoxSizer布局
• 19.2.7 事件处理
19.3 PyQt框架的使用
• 19.3.1 安装PyQt
• 19.3.2 使用第三方开发工具
• 19.3.3 创建主窗体
• 19.3.4 常用控件
• 19.3.5 布局管理
• 19.3.6 信号与槽的关联
• 19.3.7 资源文件的使用
第20 章 pygame 游戏框架
20.1 初识pygame
• 20.1.1 安装pygame
• 20.1.2 pygame常用模块
20.2 pygame的基本使用
第21 章 网络爬虫框架
21.1 初识网络爬虫
• 21.1.1 网络爬虫概述
• 21.1.2 网络爬虫的分类
• 21.1.3 网络爬虫的基本原理
21.2 网络爬虫的常用技术
• 21.2.1 Python的网络请求
• 21.2.2 请求headers处理
• 21.2.3 网络超时
• 21.2.4 代理服务
• 21.2.5 HTML解析之BeautifulSoup
21.3 网络爬虫开发常用框架
• 21.3.1 Scrapy爬虫框架
• 21.3.2 Crawley爬虫框架
• 21.3.3 PySpider爬虫框架
21.4 Scrapy爬虫框架的使用
• 21.4.1 搭建Scrapy爬虫框架
• 21.4.2 创建Scrapy项目
• 21.4.3 创建爬虫
• 21.4.4 获取数据
第22 章 Flask Web 框架的使用
22.1 Web框架简介
• 22.1.1 什么是Web框架
• 22.1.2 常用的Web框架
22.2 Flask框架的使用
• 22.2.1 安装虚拟环境
• 22.2.2 安装Flask
• 22.2.3 第一个Flask程序
• 22.2.4 开启调试模式
• 22.2.5 路由
• 22.2.6 静态文件
• 22.2.7 模板
第23 章 Django Web 框架的使用
23.1 安装Django Web框架
23.2 Django框架的使用
• 23.2.1 创建一个Django项目
• 23.2.2 创建App
• 23.2.3 数据模型(models)
• 23.2.4 管理后台
• 23.2.5 路由(urls)
• 23.2.6 表单(forms)
• 23.2.7 视图(views)
• 23.2.8 Django模板
第5 篇 游戏开发篇
第24 章 谷歌小恐龙游戏
24.1 项目概述
24.2 设计流程
24.3 系统预览
24.4 开发工具准备
24.5 谷歌小恐龙游戏的实现
• 24.5.1 主窗体的实现
• 24.5.2 滚动地图的显示
• 24.5.3 可以跳跃的小恐龙
• 24.5.4 障碍物的出现
• 24.5.5 碰撞与积分
第25 章 飞机大战游戏
25.1 概 述
25.2 系统预览
25.3 开发工具准备
25.4 飞机大战游戏的实现
• 25.4.1 主窗体的实现
• 25.4.2 游戏界面设置
• 25.4.3 用户交互操作的实现
• 25.4.4 对子弹的处理
• 25.4.5 敌机的处理
• 25.4.6 显示游戏得分
• 25.4.7 游戏结束绘制游戏结束画面
• 25.4.8 更新排行榜内容
• 25.4.9 判断鼠标的单击位置
• 25.4.10 游戏排行榜
第26 章 微信跳一跳辅助工具
26.1 项目概述
26.2 设计流程
26.3 系统预览
26.4 开发工具准备
26.5 开发前的准备工作
• 26.5.1 PIL模块的安装
• 26.5.2 PIL模块的使用
• 26.5.3 matplotlib模块的使用
• 26.5.4 ADB工具
26.6 手动辅助
• 26.6.1 窗体的实现
• 26.6.2 同步手机屏幕的画面
• 26.6.3 选择起点与终点实现跳跃
• 26.6.4 实现重选功能
26.7 自动辅助
• 26.7.1 同步手机屏幕的画面
• 26.7.2 扫描棋子与棋盘
• 26.7.3 实现自动跳跃
第6 篇 人工智能开发篇
第27 章 汽车之家图片抓取工具
27.1 概 述
27.2 设计流程
27.3 系统预览
27.4 开发工具准备
27.5 汽车之家图片抓取工具的实现
• 27.5.1 登录功能
• 27.5.2 主窗体设计
• 27.5.3 创建爬虫类
• 27.5.4 开启爬虫类
• 27.5.5 查看大图功能
第28 章 AI 图像识别工具
28.1 概 述
28.2 设计流程
28.3 系统预览
28.4 开发工具准备
28.5 开发前的准备工作
• 28.5.1 申请百图AI接口
• 28.5.2 urllib、urllib.request模块
• 28.5.3 json模块
28.6 AI图像识别工具的开发
• 28.6.1 根据项目设计制作窗体
• 28.6.2 添加分类
• 28.6.3 选择识别的图片
• 28.6.4 银行卡图像识别
• 28.6.5 植物图像识别
• 28.6.6 复制识别结果到剪贴板
第7 篇 商业项目篇
第29 章 e 起去旅行网站
29.1 系统功能设计
• 29.1.1 系统功能结构
• 29.1.2 系统业务流程
29.2 系统开发必备
• 29.2.1 系统开发环境
• 29.2.2 文件夹组织结构
29.3 数据库设计
• 29.3.1 数据库概要说明
• 29.3.2 数据表模型
• 29.3.3 数据表关系
29.4 前台用户模块设计
• 29.4.1 会员注册功能实现
• 29.4.2 会员登录功能实现
• 29.4.3 会员退出功能实现
29.5 前台首页模块设计
• 29.5.1 推荐景区功能实现
• 29.5.2 推荐地区功能实现
• 29.5.3 搜索景区功能实现
29.6 景区模块设计
• 29.6.1 查看景区功能实现
• 29.6.2 查看游记功能实现
• 29.6.3 收藏景区功能实现
• 29.6.4 查看收藏景区功能实现
29.7 关于我们模块设计
29.8 后台模块设计
• 29.8.1 实现管理员登录功能
• 29.8.2 实现景区管理功能
• 29.8.3 实现地区管理功能
• 29.8.4 实现游记管理功能
• 29.8.5 实现会员管理功能
• 29.8.6 实现日志管理功能
第30 章 看店宝（京东版）
30.1 项目概述
30.2 设计流程
30.3 系统预览
30.4 开发工具准备
30.5 主窗体界面设计
• 30.5.1 对主窗体进行可视化设计
• 30.5.2 将可视化窗体转换为.py文件
• 30.5.3 设置窗体及控件背景
• 30.5.4 创建窗体控制文件
• 30.5.5 主窗体预览效果
30.6 设计数据库表结构
30.7 初始数据的爬取
• 30.7.1 爬取排行信息
• 30.7.2 爬取价格信息
• 30.7.3 爬取评价信息
• 30.7.4 数据库操作
30.8 图表分析数据
• 30.8.1 饼形图展示评价信息
• 30.8.2 分析出版社所占比例的条形图
• 30.8.3 折线图分析价格走势
• 30.8.4 Top10数据展示
30.9 商品排行展示
• 30.9.1 热销商品排行榜
• 30.9.2 热门商品展示
30.10 关注商品
• 30.10.1 分析关注商品的预警信息
• 30.10.2 重点商品的关注与取消
30.11 商品营销预警
• 30.11.1 商品中评、差评预警
• 30.11.2 商品价格变化预警
30.12 关注商品图表分析
• 30.12.1 关注商品评价分析饼图
• 30.12.2 关注商品出版社占有比例
30.13 其他功能
附录1 内置函数
附录2 PyCharm常用快捷键
附录3 PyCharm常用设置
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python从入门到项目实践
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python入门经典
译者序
前言
第一部分 关于计算机的思考
第0章 计算机科学研究
0.1为什么要研究计算机科学
0.1.1计算机科学的重要性
0.1.2计算机“科学”
0.1.3通过编程学习计算机科学
0.2编程的困难和使命
0.2.1困难1：同时做两件事
0.2.2困难2：什么是好程序
0.2.3程序的使命
0.3选择一种计算机语言
0.3.1各种计算机语言
0.3.2为什么选Python
0.3.3Python是最好的程序语言吗
0.4什么是计算
0.5什么是计算机
0.5.1自然界中的计算
0.5.2人类制造的计算机
0.6现代电子计算机
0.6.1就是开关
0.6.2晶体管
0.7从更高层面来了解现代计算机
0.8数据表示
0.8.1二进制数据
0.8.2使用二进制
0.8.3局限性
0.8.4字符表示
0.8.5其他数据表示
0.8.6数字代表什么
0.8.7数据量
0.8.8数据量有多大
0.9后续章节概述
0.10总结
第二部分 开始编程
第1章 入门
1.1练习，练习，再练习
1.2快速入门——计算圆周长的程序
1.3交互式会话
1.4程序组成部分
1.4.1模块
1.4.2表达式和语句
1.4.3空白
1.4.4注释
1.4.5Python 的特殊元素：标记
1.4.6对象命名
1.5变量
1.6对象和类型
1.6.1数字
1.6.2其他内置类型
1.6.3对象类型：非变量类型
1.6.4创建新值
1.7运算符
1.7.1整数运算符
1.7.2浮点运算符
1.7.3混合运算符
1.7.4运算符顺序和圆括号
1.7.5增强的赋值运算符：快捷方式
1.8第一个模块：math模块
1.9开发算法
1.10总结
1.11视觉场景：海龟绘图
习题
编程项目
第2章 控制语句
2.1选择语句：if
2.1.1利用布尔值做决定
2.1.2if 语句
2.1.3示例：在篮球运动中，领先多少分才安全
2.1.4循环
2.1.5例子：寻找完全数
2.1.6例子：对数字分类
2.2深入控制语句
2.2.1真与假：布尔值
2.2.2布尔变量
2.2.3关系运算符
2.2.4布尔运算符
2.2.5优先级
2.2.6布尔运算符示例
2.2.7另一种赋值方式
2.2.8用于判定的选择语句
2.2.9Python判定语句进阶
2.2.10循环：while语句
2.2.11信号量循环
2.2.12循环总结
2.2.13for语句进阶
2.2.14嵌套
2.2.15冰雹序列示例
2.3视觉场景：用pylab对数据绘图
2.3.1使用列表和第一次绘制
2.3.2更有趣的绘图：正弦波
2.4计算机科学观点：最小的通用计算
2.5总结
习题
编程项目
第3章 算法和程序开发
3.1什么是算法
3.2算法特征
3.2.1算法和程序
3.2.2细化
3.2.3有效性
3.2.4指定行为
3.2.5通用算法
3.2.6真的可以实现一切吗
3.3程序是什么
3.3.1可读性
3.2.2鲁棒性
3.3.3正确性
3.4程序设计策略
3.4.1参与并提交
3.4.2了解，然后想象
3.4.3编程之前先思考
3.4.4实验
3.4.5简化
3.4.6停下来思考
3.4.7放松：让自己休息一下
3.5简单示例
3.5.1搭建框架
3.5.2输出
3.5.3输入
3.5.4计算
3.6总结
习题
第三部分 组织：数据结构和函数
第4章 字符串
4.1字符串类型
4.1.1三重引号字符串
4.1.2非显示字符
4.1.3字符串表示形式
4.1.4字符序列
4.1.5索引和分片
4.2字符串操作
4.2.1连接（+）和重复（*）
4.2.2“+”什么时候表示加法运算，什么时候表示连接运算
4.2.3比较运算符
4.2.4in运算符
4.2.5字符串集合是不可变的
4.3函数和方法预览
4.3.1第一步：什么是函数
4.3.2选择方法的名字和参数
4.3.3字符串方法
4.3.4字符串函数
4.4字符串的格式化输出
4.4.1描述符码
4.4.2宽度描述符
4.4.3浮点数精度描述符
4.5字符串与控制语句
4.6处理字符串
4.6.1示例：记录人名
4.6.2回文
4.7示例：计算扑克牌
4.8总结
习题
编程项目
第5章 函数快速入门
5.1函数是什么
5.2Python 函数
5.3函数控制语句
5.3.1函数控制语句详解
5.3.2另一个函数示例
5.3.3函数示例：猜词
5.3.4函数调用函数
5.3.5什么时候使用函数
5.3.6如果没有return语句会如何
5.3.7如果有多条return语句会如何
5.4视觉场景：用海龟绘图法绘制美国国旗
5.5总结
习题
编程项目
第6章 列表和元组
6.1什么是列表
6.2操作列表
6.2.1索引和分片
6.2.2运算符
6.2.3函数
6.2.4列表循环
6.3列表新内容
6.3.1列表可变性
6.3.2列表方法
6.4range、split及其他函数和方法
6.4.1range、split和多重赋值
6.4.2使用join在列表和字符串之间转换
6.4.3sorted 函数
6.5示例
6.5.1字谜
6.5.2示例：文件分析
6.6可变对象及其引用
6.6.1深拷贝与浅拷贝
6.6.2可变与不可变
6.7元组
6.7.1从列表到元组
6.7.2为什么需要元组
6.8列表：数据结构
6.8.1数据结构示例
6.8.2数据结构的另一个示例
6.9算法示例：美国环境保护署通车里程数据
6.10列表解析
6.11视觉场景：更多绘制任务
6.11.1numpy阵列
6.11.2绘制三角函数
6.12总结
习题
编程项目
第7章 深入了解函数
7.1函数调用函数
7.2作用域
7.2.1实参、形参和命名空间
7.2.2传递可变对象
7.2.3返回复杂对象
7.2.4重构evens
7.3默认值以及形参为关键字
7.3.1示例：默认值和参数关键字
7.3.2默认值问题
7.4函数和对象
7.5示例：确定最终成绩
7.5.1数据
7.5.2设计
7.5.3函数：weightedGrade
7.5.4函数：grade
7.5.5函数：main
7.5.6使用示例
7.6“传值”或者“传引用”
7.7总结
习题
编程项目
第8章 字典和集合
8.1字典
8.1.1字典示例
8.1.2Python 字典
8.1.3字典索引和赋值
8.1.4运算符
8.2单词计数示例
8.2.1统计字符串中的单词数
8.2.2《葛底斯堡演说》中的单词出现频率
8.2.3输出和注释
8.3示例：周期表
8.3.1使用CSV文件
8.3.2算法概述
8.3.3实现分治的函数
8.4集合
8.4.1集合的历史
8.4.2集合的组成
8.4.3Python 集合
8.4.4Python集合的方法、运算符和函数
8.4.5集合方法
8.5集合应用
8.5.1不同文件中单词之间的关系
8.5.2输出和注释
8.6作用域：完整的故事
8.6.1命名空间和作用域
8.6.2作用域搜寻规则
8.6.3局部命名空间
8.6.4全局命名空间
8.6.5内置模块
8.6.6封闭式变量
8.7Python指针：使用zip创建字典
8.8视觉场景：词频条形图
8.8.1正确获取数据
8.8.2标签和xticks命令
8.8.3绘图
8.9总结
习题
编程项目
第9章 文件
9.1什么是文件
9.2存取文件：读取文本文件
9.2.1其他文件存取方法
9.2.2数据流
9.3存取文件：写文本文件
9.4在程序中存取文本文件
9.5创建文件和重写文件
9.5.1通用新行格式
9.5.2文件内移动
9.6关闭文件
9.7CSV文件
9.7.1CSV模块
9.7.2CSV Reader
9.7.3CSV Writer
9.7.4示例：更新某些成绩
9.8示例：反复提示，要求输入正确的文件名
9.9模块：os
9.9.1目录/文件夹的结构
9.9.2os模块函数
9.9.3os模块示例
9.10总结
习题
编程项目
第10章 程序开发进阶
10.1简介
10.2分治
10.3乳腺癌分类
10.3.1问题
10.3.2方法：分类
10.3.3训练和测试分类器
10.3.4构造分类器
10.4设计分类器算法
10.4.1先分解，再合并
10.4.2数据结构
10.4.3文件格式
10.4.4makeTrainingSet函数
10.4.5makeTestSet函数
10.4.6trainClassifier函数
10.4.7第2轮修改后的trainClassifer
10.4.8用新数据测试分类器
10.4.9reportResults函数
10.5在完整数据上运行分类器
10.6其他有趣的问题
10.6.1标签云
10.6.2标准普尔500预测
10.6.3用国旗预测宗教
10.7总结
习题
编程项目
第四部分 类：自定义数据结构和算法
第11章 类
11.1面向对象编程
11.1.1Python是面向对象的
11.1.2OOP特性
11.2使用OOP
11.3使用类和实例
11.3.1内置类和实例
11.3.2第一个类
11.3.3修改属性
11.3.4实例和类之间的特殊关系：instance　of
11.4对象方法
11.4.1使用对象方法
11.4.2编写方法
11.4.3特殊参数self
11.4.4方法是类实例的接口
11.5融入Python类模型
11.5.1程序员定义的类
11.5.2Student类
11.5.3Python标准方法
11.5.4三种角色：类设计者、程序员和用户
11.6示例：Point类
11.6.1构造函数
11.6.2距离
11.6.3两点求和
11.6.4改进Point类
11.7Python和OOP
11.7.1封装性
11.7.2继承
11.7.3多态性
11.8Python和其他OOP语言
11.8.1公有与私有
11.8.2使用双下划线表示私有
11.8.3Python的宗旨
11.8.4修改实例
11.9总结
习题
编程项目
第12章 类进阶
12.1更多类属性
12.2Python实现机制
12.2.1类、类型与自检
12.2.2运算符重载
12.3自定义运算符重载
12.4创建有理数类
12.4.1生成类
12.4.2分数加法回顾
12.4.3分数加法
12.4.4相等和分数化简
12.4.5应用分治
12.5错误消息
12.5.1自检
12.5.2修复int+Rational错误
12.6继承
12.6.1“寻找属性”游戏
12.6.2使用继承
12.6.3实例：物理学标准模型
12.7总结
习题
第13章 使用类开发程序
13.1捕食问题
13.1.1规则
13.1.2面向对象的模拟
13.2类
13.2.1Island类
13.2.2捕食者和猎物、动物种类
13.2.3捕食者类和猎物类
13.2.4对象图
13.2.5填充Island
13.3添加行为
13.3.1细化：添加移动
13.3.2时间循环仿真
13.4逐步求精
13.4.1改进的时间循环
13.4.2繁殖
13.4.3进食
13.4.4时钟节拍
13.5细化问题
13.5.1移动多少次
13.5.2动物数量的图形化
13.6总结
习题
第五部分 成为更好的程序员
第14章 异常和异常处理
14.1简介
14.2基本的异常处理
14.3有关异常的哲学
14.4异常：else和finally
14.5异常的用法
14.5.1检查输入
14.5.2检查文件打开
14.6深入异常
14.6.1raise
14.6.2自定义异常
14.7示例：密码管理
14.8总结
习题
第15章 测试
15.1为什么要进行测试
15.1.1错误类型
15.1.2“bug”和调试
15.2测试类型
15.2.1测试很难
15.2.2测试的重要性
15.3示例
15.3.1NBA效率
15.3.2基本算法
15.4混合测试
15.4.1捕捉用户错误
15.4.2捕获开发者犯的错误
15.5自动测试
15.5.1doctest
15.5.2其他类型的测试
15.6总结
习题
第16章 递归：另一种控制机制
16.1什么是递归
16.2数学和兔子
16.3自定义递归：反转字符串
16.4递归如何实现
16.4.1栈的数据结构
16.4.2栈和函数调用
16.5用递归表示图形
16.5.1递归树
16.5.2Sierpinski三角形
16.6从递归到非递归
16.7总结
16.8习题
附录
附录A 开始使用Python
附录B 用海龟绘图法进行简单绘图
附录C 绘图和数值工具：快速浏览
附录D Python 3.0
附录E ASCII码表
附录F 优先级
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python入门经典
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>从零开始学Python网络爬虫
前言
第1章 Python零基础语法入门 1
1.1 Python与PyCharm安装 1
1.1.1 Python安装（Windows、Mac和Linux） 1
1.1.2 PyCharm安装 3
1.2 变量和字符串 3
1.2.1 变量 4
1.2.2 字符串的“加法”和“乘法” 4
1.2.3 字符串的切片和索引 5
1.2.4 字符串方法 5
1.3 函数与控制语句 7
1.3.1 函数 7
1.3.2 判断语句 8
1.3.3 循环语句 8
1.4 Python数据结构 9
1.4.1 列表 9
1.4.2 字典 11
1.4.3 元组和集合 11
1.5 Python文件操作 11
1.5.1 打开文件 11
1.5.2 读写文件 12
1.5.3 关闭文件 13
1.6 Python面向对象 13
1.6.1 定义类 14
1.6.2 实例属性 14
1.6.3 实例方法 15
1.6.4 类的继承 16
第2章 爬虫原理和网页构造 17
2.1 爬虫原理 17
2.1.1 网络连接 17
2.1.2 爬虫原理 18
2.2 网页构造 21
2.2.1 Chrome浏览器的安装 21
2.2.2 网页构造 22
2.2.3 查询网页信息 23
第3章 我的第一个爬虫程序 26
3.1 Python第三方库 26
3.1.1 Python第三方库的概念 26
3.1.2 Python第三方库的安装方法 27
3.1.3 Python第三方库的使用方法 29
3.2 爬虫三大库 30
3.2.1 Requests库 30
3.2.2 BeautifulSoup库 32
3.2.3 Lxml库 36
3.3 综合案例1——爬取北京地区短租房信息 37
3.3.1 爬虫思路分析 37
3.3.2 爬虫代码及分析 38
3.4 综合案例2——爬取酷狗TOP500的数据 41
3.4.1 爬虫思路分析 41
3.4.2 爬虫代码及分析 43
第4章 正则表达式 45
4.1 正则表达式常用符号 45
4.1.1 一般字符 45
4.1.2 预定义字符集 46
4.1.3 数量词 46
4.1.4 边界匹配 47
4.2 re模块及其方法 48
4.2.1 search()函数 48
4.2.2 sub()函数 49
4.2.3 findall()函数 49
4.2.4 re模块修饰符 51
4.3 综合案例1——爬取《斗破苍穹》全文小说 53
4.3.1 爬虫思路分析 53
4.3.2 爬虫代码及分析 55
4.4 综合案例2——爬取糗事百科网的段子信息 56
4.4.1 爬虫思路分析 56
4.4.2 爬虫代码及分析 58
第5章 Lxml库与Xpath语法 63
5.1 Lxml库的安装与使用方法 63
5.1.1 Lxml库的安装（Mac、Linux） 63
5.1.2 Lxml库的使用 64
5.2 Xpath语法 68
5.2.1 节点关系 68
5.2.2 节点选择 70
5.2.3 使用技巧 70
5.2.4 性能对比 74
5.3 综合案例1——爬取豆瓣网图书TOP250的数据 77
5.3.1 将数据存储到CSV文件中 77
5.3.2 爬虫思路分析 78
5.3.3 爬虫代码及分析 80
5.4 综合案例2——爬取起点中文网小说信息 83
5.4.1 将数据存储到Excel文件中 83
5.4.2 爬虫思路分析 84
5.4.3 爬虫代码及分析 86
第6章 使用API 88
6.1 API的使用 88
6.1.1 API概述 88
6.1.2 API使用方法 89
6.1.3 API验证 91
6.2 解析JSON数据 93
6.2.1 JSON解析库 93
6.2.2 斯必克API调用 94
6.2.3 百度地图API调用 96
6.3 综合案例1——爬取PEXELS图片 98
6.3.1 图片爬取方法 98
6.3.2 爬虫思路分析 99
6.3.3 爬虫代码及分析 100
6.4 综合案例2——爬取糗事百科网的用户地址信息 102
6.4.1 地图的绘制 102
6.4.2 爬取思路分析 105
6.4.3 爬虫代码及分析 106
第7章 数据库存储 109
7.1 MongoDB数据库 109
7.1.1 NoSQL概述 109
7.1.2 MongoDB的安装 109
7.1.3 MongoDB的使用 115
7.2 MySQL数据库 117
7.2.1 关系型数据库概述 117
7.2.2 MySQL的安装 117
7.2.3 MySQL的使用 123
7.3 综合案例1——爬取豆瓣音乐TOP250的数据 126
7.3.1 爬虫思路分析 126
7.3.2 爬虫代码及分析 127
7.4 综合案例2——爬取豆瓣电影TOP250的数据 132
7.4.1 爬虫思路分析 132
7.4.2 爬虫代码及分析 133
第8章 多进程爬虫 139
8.1 多线程与多进程 139
8.1.1 多线程和多进程概述 139
8.1.2 多进程使用方法 140
8.1.3 性能对比 140
8.2 综合案例1——爬取简书网热评文章 143
8.2.1 爬虫思路分析 143
8.2.2 爬虫代码及分析 147
8.3 综合案例2——爬取转转网二手市场商品信息 150
8.3.1 爬虫思路分析 150
8.3.2 爬虫代码及分析 152
第9章 异步加载 159
9.1 异步加载技术与爬虫方法 159
9.1.1 异步加载技术概述 159
9.1.2 异步加载网页示例 159
9.1.3 逆向工程 162
9.2 综合案例1——爬取简书网用户动态信息 165
9.2.1 爬虫思路分析 165
9.2.2 爬虫代码及分析 171
9.3 综合案例2——爬取简书网7日热门信息 173
9.3.1 爬虫思路分析 173
9.3.2 爬虫代码及分析 179
第10章 表单交互与模拟登录 182
10.1 表单交互 182
10.1.1 POST方法 182
10.1.2 查看网页源代码提交表单 182
10.1.3 逆向工程提交表单 185
10.2 模拟登录 187
10.2.1 Cookie概述 187
10.2.2 提交Cookie模拟登录 187
10.3 综合案例1——爬取拉勾网招聘信息 188
10.3.1 爬虫思路分析 188
10.3.2 爬虫代码及分析 193
10.4 综合案例2——爬取新浪微博好友圈信息 195
10.4.1 词云制作 195
10.4.2 爬虫思路分析 202
10.4.3 爬虫代码及分析 206
第11章 Selenium模拟浏览器 209
11.1 Selenium和PhantomJS 209
11.1.1 Selenium的概念和安装 209
11.1.2 浏览器的选择和安装 209
11.2 Selenium和PhantomJS的配合使用 213
11.2.1 模拟浏览器操作 213
11.2.2 获取异步加载数据 215
11.3 综合案例1——爬取QQ空间好友说说 218
11.3.1 CSV文件读取 218
11.3.2 爬虫思路分析 220
11.3.3 爬虫代码及分析 221
11.4 综合案例2——爬取淘宝商品信息 224
11.4.1 爬虫思路分析 224
11.4.2 爬虫代码及分析 226
第12章 Scrapy爬虫框架 229
12.1 Scrapy的安装和使用 229
12.1.1 Scrapy的安装 229
12.1.2 创建Scrapy项目 233
12.1.3 Scrapy文件介绍 235
12.1.4 Scrapy爬虫编写 237
12.1.5 Scrapy爬虫运行 239
12.2 综合案例1——爬取简书网热门专题信息 240
12.2.1 爬虫思路分析 240
12.2.2 爬虫代码及分析 244
12.3 综合案例2——爬取知乎网Python精华话题 246
12.3.1 爬虫思路分析 246
12.3.2 爬虫代码及分析 248
12.4 综合案例3——爬取简书网专题收录文章 250
12.4.1 爬虫思路分析 251
12.4.2 爬虫代码及分析 254
12.5 综合案例4——爬取简书网推荐信息 257
12.5.1 爬虫思路分析 258
12.5.2 爬虫代码及分析 260
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>从零开始学Python网络爬虫
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python语言入门
前言
第一部分 语言核心
第一章 开始
为什么要选择python?
如何运行python程序?
初览模块文件
python设置细节
总结
练习
第二章 类型与操作符
python程序结构
为什么要使用内置类型?
数字
字符串
列表
字典
元组
文件
共有的对象属性
内置类型的常见问题
总结
练习
第三章 基本语句
赋值
表达式
print
if条件测试
while循环
for循环
代码编写的常见问题
总结
练习
第四章 函数
为什么要使用函数?
函数基础
函数中的作用域规则
参数传递
其他内容
函数的常见问题
总结
练习
第五章 模块
为什么要使用模块7
模块基础
模块文件是名字空间
导入模式
重载模块
其他内容
模块的常见问题
总结
练习
第六章 类
为什么要使用类
类的基础知识
使用class语句
使用类的方法
继承搜索名字空间树
在类中重载操作符
名字空间规则总结
用类来设计
其他内容
类的常见问题
总结
练习
第七章 异常
为什么要使用异常
异常的基础知识
异常的惯用法
异常捕获模式
其他内容
异常的常见问题
总结
练习
第二部分 外围层
第八章 内置工具
内置函数
库模块
练习
第九章 用python1完成常见的任务
数据结构操作
文件操作
操作程序
与internet相关的任务
较大的例子
练习
第十章 框架和应用
自动化客户支持系统
与com的接口：廉价的公共关系
一个基于tkinter的管理表格数据的编辑器
设计上的考虑
jpython：python和java的结合
其他的框架和应用
练习
第三部分 附录
附录一 python资源
附录二 特定平台问题
附录三 练习解答
词汇表
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python语言入门
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python计算与编程实践
出版者的话
译者序
第2版前言
第1版前言
第一部分 导 论
第1章 计算机科学与媒体计算导论 2
1.1 计算机科学是关于什么的 2
1.2 编程语言 4
1.3 计算机理解什么 5
1.4 媒体计算：为什么要把媒体数字化 7
1.5 大众的计算机科学 8
1.5.1 计算机科学与交流有关 8
1.5.2 计算机科学与过程有关 9
习题 9
第2章 编程导论 11
2.1 编程与命名有关 11
2.2 python编程 13
2.3 jes编程 13
2.4 jes媒体计算 15
.2.4.1 显示图片 18
2.4.2 播放声音 19
2.4.3 数值命名 20
2.5 构建程序 22
习题 27
第3章 使用循环修改图片 30
3.1 图片的编码 30
3.2 处理图片 35
3.3 改变颜色值 40
3.3.1 在图片上运用循环 40
3.3.2 增/减红（绿、蓝） 42
3.3.3 测试程序：它真的能运行吗 45
3.3.4 一次修改一种颜色 46
3.4 制作日落效果 47
3.5 亮化和暗化 51
3.6 制作底片 52
3.7 转换到灰度 53
习题 55
第4章 修改区域中的像素 58
4.1 复制像素 58
4.2 图片镜像 60
4.3 复制和转换图片 66
4.3.1 复制 66
4.3.2 制作拼贴图 72
4.3.3 通用复制 74
4.3.4 旋转 75
4.3.5 缩放 77
习题 81
第5章 高级图片技术 84
5.1 颜色替换：消除红眼、深褐色调和
色调分离 84
5.1.1 消除红眼 86
5.1.2 深褐色调和色调分离：使用条件式
选择颜色 88
5.2 合并像素：图片模糊化 92
5.3 比较像素：边缘检测 93
5.4 图片融合 94
5.5 背景消减 96
5.6 色键 98
5.7 在图像上绘图 101
5.7.1 使用绘图命令 102
5.7.2 向量和位图表示 104
5.8 指定绘图过程的程序 105
习题 107
第二部分 声 音
第6章 使用循环修改声音 110
6.1 声音是如何编码的 110
6.1.1 声音的物理学 110
6.1.2 探索声音的样子 113
6.1.3 声音编码 115
6.1.4 二进制数和二进制补码 116
6.1.5 存储数字化的声音 117
6.2 处理声音 118
6.2.1 打开声音并处理样本数据 118
6.2.2 使用jes媒体工具 121
6.2.3 循环 123
6.3 改变音量 123
6.3.1 增大音量 123
6.3.2 真的行吗 124
6.3.3 减小音量 127
6.3.4 理解声音函数 128
6.4 声音规格化 128
习题 131
第7章 修改一段样本区域 133
7.1 用不同方法处理不同声音片段 133
7.2 剪接声音 135
7.3 通用剪辑和复制 140
7.4 声音倒置 142
7.5 镜像 143
习题 144
第8章 通过合并片段制作声音 146
8.1 用加法组合声音 146
8.2 混合声音 147
8.3 制造回声 148
8.3.1 制造多重回声 149
8.3.2 制作和弦 149
8.4 采样键盘工作原理 150
8.5 加法合成 153
8.5.1 制作正弦波 153
8.5.2 把正弦波叠加起来 155
8.5.3 检查结果 156
8.5.4 方波 157
8.5.5 三角波 158
8.6 现代音乐合成 160
8.6.1 mp3 161
8.6.2 midi 161
习题 162
第9章 构建更大的程序 164
9.1 自顶向下设计程序 164
9.1.1 自顶向下设计示例 165
9.1.2 设计顶层函数 166
9.1.3 编写子函数 168
9.2 自底向上设计程序 171
9.3 测试程序 172
9.4 调试技巧 174
9.4.1 找出担心的语句 174
9.4.2 查看变量 175
9.4.3 调试冒险游戏 176
9.5 算法和设计 179
9.6 在jes之外运行程序 180
习题 181
第三部分 文本、文件、网络、
数据库和单媒体
第10章 创建和修改文本 186
10.1 文本作为单媒体 186
10.2 字符串：构造和处理字符串 187
10.3 处理部分字符串 189
10.3.1 字符串方法：对象和点号语法
简介 190
10.3.2 列表：强大的结构化文本 191
10.3.3 字符串没有字体 194
10.4 文件：存放字符串和其他数据的
地方 194
10.4.1 打开文件和操作文件 195
10.4.2 制作套用信函 197
10.4.3 编写程序 197
10.5 python标准库 201
10.5.1 再谈导入和私有模块 202
10.5.2 另一个有趣模块：random 202
10.5.3 python标准库的例子 204
习题 205
第11章 高级文本技术：web和信息 208
11.1 网络：从web获取文本 208
11.2 通过文本转换不同媒体 211
11.3 在图片中隐藏信息 216
习题 219
第12章 产生web文本 221
12.1 html：web的表示方法 221
12.2 编写程序产生html 225
12.3 数据库：存放文本的地方 229
12.3.1 关系型数据库 231
12.3.2 基于散列表的关系型数据库示例 231
12.3.3 使用sql 234
12.3.4 使用数据库构建web页面 236
习题 237
第四部分 电 影
第13章 制作和修改电影 240
13.1 产生动画 241
13.2 使用视频源 247
13.3 自底向上制作视频效果 250
习题 254
第五部分 计算机科学议题
第14章 速度 258
14.1 关注计算机科学 258
14.2 什么使程序速度更快 258
14.2.1 什么是计算机真正理解的 258
14.2.2 编译器和解释器 259
14.2.3 什么限制了计算机的速度 263
14.2.4 让查找更快 265
14.2.5 永不终止和无法编写出的算法 266
14.2.6 为什么photoshop比jes更快 268
14.3 什么使计算机速度更快 268
14.3.1 时钟频率和实际的计算 268
14.3.2 存储：什么使计算机速度慢 269
14.3.3 显示 270
习题 270
第15章 函数式编程 272
15.1 使用函数简化编程 272
15.2 使用map和reduce进行函数式编程 275
15.3 针对媒体的函数式编程 277
15.4 递归：一种强大的思想 279
15.4.1 递归式目录遍历 284
15.4.2 递归式媒体函数 286
习题 287
第16章 面向对象编程 289
16.1 对象的历史 289
16.2 使用“小海龟” 290
16.2.1 类和对象 290
16.2.2 创建对象 290
16.2.3 向对象发送消息 291
16.2.4 对象控制自己的状态 292
16.2.5 小海龟的其他函数 293
16.3 教小海龟新的技艺 295
16.4 面向对象的幻灯片 297
16.4.1 joe the box 300
16.4.2 面向对象的媒体 302
16.4.3 为什么使用对象 306
习题 307
附录a python快速参考 309
参考文献 313
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python计算与编程实践
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Selenium 2自动化测试实战
第1 章 自动化测试基础 .................................................................................... 1
1.1 软件测试分类 ........................................................................................................ 1
1.2 分层的自动化测试 ................................................................................................ 6
1.3 什么样的项目适合自动化测试 ............................................................................ 9
1.4 自动化测试及工具简述 ...................................................................................... 10
1.5 Selenium 工具介绍 .............................................................................................. 11
1.6 前端技术介绍 ...................................................................................................... 14
1.7 前端工具介绍 ...................................................................................................... 16
1.8 开发语言的选择 .................................................................................................. 19
第2 章 测试环境搭建 .......................................................................................... 21
2.1 Windows 下的环境搭建 ...................................................................................... 21
2.1.1 安装Python .............................................................................................. 22
2.1.2 安装setuptools 与pip .............................................................................. 24
2.1.3 安装Selenium .......................................................................................... 26
2.1.4 ActivePython ............................................................................................ 26
2.2 Ubuntu 下的环境搭建 ......................................................................................... 28
2.3 使用IDLE 编写Python ....................................................................................... 29
2.4 编写第一个自动化脚本 ...................................................................................... 32
2.5 安装浏览器驱动 .................................................................................................. 34
2.6 不同编程语言下使用WebDriver ........................................................................ 35
第3 章 Python 基础 ................................................................................................ 37
3.1 Python 哲学 .......................................................................................................... 37
3.2 输出与输入 .......................................................................................................... 39
3.2.1 print 打印 .................................................................................................. 40
3.2.2 input 输入 ................................................................................................. 41
3.2.3 引号与注释 .............................................................................................. 41
3.3 分支与循环 .......................................................................................................... 43
3.3.1 if 语句 ....................................................................................................... 43
3.3.2 for 语句 .................................................................................................... 45
3.4 数组与字典 .......................................................................................................... 47
3.4.1 数组 .......................................................................................................... 47
3.4.2 字典 .......................................................................................................... 47
3.5 函数、类和方法 .................................................................................................. 49
3.5.1 函数 .......................................................................................................... 49
3.5.2 类和方法 .................................................................................................. 50
3.6 模组 ...................................................................................................................... 52
3.6.1 引用模块 .................................................................................................. 52
3.6.2 模块调用 .................................................................................................. 55
3.6.3 跨目录模块调用 ...................................................................................... 56
3.6.4 进一步讨论跨目录模块调用 .................................................................. 56
3.7 异常 ...................................................................................................................... 60
3.7.1 认识异常 .................................................................................................. 60
3.7.2 更多异常用法 .......................................................................................... 64
3.7.3 抛出异常 .................................................................................................. 66
本章小结 ....................................................................................................................... 66
第4 章 WebDriver API ............................................................................................... 68
4.1 从定位元素开始 .................................................................................................. 68
4.1.1 id 定位 ...................................................................................................... 72
4.1.2 name 定位 ................................................................................................ 73
4.1.3 class 定位 ................................................................................................. 73
4.1.4 tag 定位 .................................................................................................... 73
4.1.5 link 定位 ................................................................................................... 73
4.1.6 partial link 定位 ........................................................................................ 74
4.1.7 XPath 定位 ............................................................................................... 75
4.1.8 CSS 定位 .................................................................................................. 78
4.1.9 用By 定位元素 ........................................................................................ 82
4.2 控制浏览器 .......................................................................................................... 83
4.2.1 控制浏览器窗口大小 .............................................................................. 83
4.2.2 控制浏览器后退、前进 .......................................................................... 84
4.2.3 模拟浏览器刷新 ...................................................................................... 85
4.3 简单元素操作 ...................................................................................................... 86
4.3.1 126 邮箱登录 ........................................................................................... 86
4.3.2 WebElement 接口常用方法 ..................................................................... 87
4.4 鼠标事件 .............................................................................................................. 89
4.5 键盘事件 .............................................................................................................. 92
4.6 获得验证信息 ...................................................................................................... 93
4.7 设置元素等待 ...................................................................................................... 95
4.7.1 显式等待 .................................................................................................. 95
4.7.2 隐式等待 .................................................................................................. 98
4.7.3 sleep 休眠方法 ......................................................................................... 99
4.8 定位一组元素 .................................................................................................... 100
4.9 多表单切换 ........................................................................................................ 104
4.10 多窗口切换 ...................................................................................................... 106
4.11 警告框处理 ...................................................................................................... 108
4.12 上传文件 .......................................................................................................... 110
4.12.1 send_keys 实现上传 ............................................................................. 110
4.12.2 AutoIt 实现上传 ................................................................................... 111
4.13 下载文件 .......................................................................................................... 116
4.14 操作Cookie ...................................................................................................... 117
4.15 调用JavaScript ................................................................................................. 120
4.16 处理HTML5 的视频播放 ............................................................................... 123
4.17 窗口截图 .......................................................................................................... 124
4.18 关闭窗口 .......................................................................................................... 125
4.19 验证码的处理 .................................................................................................. 125
4.20 WebDriver 原理 ................................................................................................ 128
本章小结 ..................................................................................................................... 130
第5 章 自动化测试模型 ................................................................................. 132
5.1 自动化测试模型介绍 ........................................................................................ 133
5.1.1 线性测试 ................................................................................................ 133
5.1.2 模块化驱动测试 .................................................................................... 134
5.1.3 数据驱动测试 ........................................................................................ 134
5.1.4 关键字驱动测试 .................................................................................... 136
5.2 模块化驱动测试实例 ........................................................................................ 138
5.3 数据驱动测试实例 ............................................................................................ 140
5.3.1 参数化邮箱登录 .................................................................................... 141
5.3.2 参数化搜索关键字 ................................................................................ 142
5.3.3 读取txt 文件 .......................................................................................... 143
5.3.4 读取csv 文件 ......................................................................................... 144
5.3.5 读取xml 文件 ........................................................................................ 146
本章小结 ..................................................................................................................... 150
第6 章 Selenium IDE .............................................................................. 151
6.1 Selenium IDE 安装 ............................................................................................. 151
6.1.1 在线安装 ................................................................................................ 151
6.1.2 下载插件安装 ........................................................................................ 153
6.2 Selenium IDE 界面介绍 ..................................................................................... 154
6.3 创建测试用例 .................................................................................................... 155
6.3.1 录制脚本 ................................................................................................ 155
6.3.2 编辑脚本 ................................................................................................ 156
6.4 Selenium IDE 命令 ............................................................................................. 159
6.5 断言与验证 ........................................................................................................ 162
6.5.1 断言 ........................................................................................................ 164
6.5.2 验证 ........................................................................................................ 165
6.6 等待与变量 ........................................................................................................ 167
6.6.1 等待 ........................................................................................................ 167
6.6.2 变量 ........................................................................................................ 167
本章小结 ............................................................................................... 169
第7 章 unittest 单元测试框架 ........................................................... 170
7.1 认识unittest........................................................................................................ 171
7.1.1 认识单元测试 ........................................................................................ 171
7.1.2 重要的概念 ............................................................................................ 174
7.1.3 断言方法 ................................................................................................ 176
7.1.4 组织单元测试用例 ................................................................................ 181
7.1.5 discover 更多测试用例 .......................................................................... 184
7.2 关于unittest 还需要知道的 ............................................................................... 187
7.2.1 用例执行的顺序 .................................................................................... 188
7.2.2 执行多级目录的用例 ............................................................................ 190
7.2.3 跳过测试和预期失败 ............................................................................ 191
7.2.4 fixtures .................................................................................................... 193
7.3 带unittest 的脚本分析 ....................................................................................... 195
7.4 编写Web 测试用例 ........................................................................................... 200
本章小结 ..................................................................................................................... 203
第8 章 自动化测试高级应用 ................................................................................... 204
8.1 HTML 测试报告 ................................................................................................ 204
8.1.1 修改HTMLTestRunner .......................................................................... 205
8.1.2 生成HTML 测试报告 ........................................................................... 206
8.1.3 更易读的测试报告 ................................................................................ 208
8.1.4 测试报告文件名 .................................................................................... 209
8.1.5 项目集成测试报告 ................................................................................ 212
8.2 自动发邮件功能 ................................................................................................ 213
8.2.1 发送HTML 格式的邮件 ....................................................................... 216
8.2.2 发送带附件的邮件 ................................................................................ 217
8.2.3 查找最新的测试报告 ............................................................................ 218
8.2.4 整合自动发邮件功能 ............................................................................ 219
8.3 Page Object 设计模式 ....................................................................................... 221
8.3.1 认识Page Object .................................................................................... 221
8.3.2 Paget Object 实例 ................................................................................... 223
本章小结 ..................................................................................................................... 228
第9 章 Selenium Grid2 ................................................................................. 229
9.1 Selenium Server 环境配置 ................................................................................. 229
9.2 Selenium Grid 工作原理 .................................................................................... 233
9.3 Remote 应用 ....................................................................................................... 236
9.3.1 WebDriver 驱动分析 .............................................................................. 237
9.3.2 Remote 实例 ........................................................................................... 243
9.3.3 参数化平台及浏览器 ............................................................................ 243
9.4 WebDriver 驱动 .................................................................................................. 246
9.4.1 Edge 浏览器 ........................................................................................... 249
9.4.2 Opera 浏览器 ......................................................................................... 250
9.4.3 Safari 浏览器 .......................................................................................... 251
9.4.4 HtmlUnit 模式 ........................................................................................ 251
9.4.5 PhantomJS 模式 ..................................................................................... 252
本章小结 ..................................................................................................................... 254
第10 章 Python 多线程 ............................................................................................. 255
10.1 单线程的时代 .................................................................................................. 256
10.2 多线程技术 ...................................................................................................... 258
10.2.1 threading 模块 ...................................................................................... 258
10.2.2 优化线程的创建 .................................................................................. 260
10.2.3 创建线程类 .......................................................................................... 262
10.3 多进程技术 ...................................................................................................... 263
10.3.1 multiprocessing 模块 ............................................................................ 263
10.3.2 Pipe 和Queue ....................................................................................... 266
10.4 应用于自动化测试 .......................................................................................... 268
10.4.1 多线程执行测试用例 .......................................................................... 269
10.4.2 多线程分布式执行测试用例 .............................................................. 270
本章小结 ..................................................................................................................... 272
第11 章 自动化测试项目实战 ..................................................................................... 273
11.1 自动化测试用例设计 ....................................................................................... 273
11.1.1 手工测试用例与自动化测试用例 ....................................................... 273
11.1.2 测试类型 .............................................................................................. 275
11.1.3 自动化测试用例编写原则 .................................................................. 276
11.2 BBS 社区项目实战 .......................................................................................... 277
11.2.1 准备工作 .............................................................................................. 277
11.2.2 项目结构介绍 ...................................................................................... 278
11.2.3 编写公共模块 ...................................................................................... 281
11.2.4 编写Page Object .................................................................................. 283
11.2.5 编写测试用例 ...................................................................................... 286
11.2.6 执行测试用例 ...................................................................................... 289
本章小结 ..................................................................................................................... 291
第12 章 BDD 框架之Lettuce 入门 ........................................................................... 292
12.1 什么是BDD ..................................................................................................... 292
12.2 安装Lettuce ..................................................................................................... 294
12.3 阶乘的例子 ...................................................................................................... 295
12.3.1 什么是阶乘 .......................................................................................... 295
12.3.2 编写BDD 实现 .................................................................................... 296
12.3.3 添加测试场景 ...................................................................................... 300
12.3.4 Lettuce 目录结构与执行过程 ............................................................. 303
12.4 Lettuce_webdriver 自动化测试 ....................................................................... 303
本章小结 ..................................................................................................................... 308
（第13 章和第14 章内容可到博文视点网站免费下载）
第13 章 GitHub 托管项目 ....................................................................................... 309
13.1 注册与安装 ...................................................................................................... 310
13.1.1 注册GitHub ......................................................................................... 310
13.1.2 安装Git ................................................................................................ 310
13.1.3 建立连接 .............................................................................................. 311
13.2 Git/GitHub 基本使用 ....................................................................................... 314
13.2.1 GitHub 创建项目 ................................................................................. 314
13.2.2 本地创建项目 ...................................................................................... 315
13.2.3 克隆项目 .............................................................................................. 318
13.2.4 更新项目 .............................................................................................. 319
本章小结 ..................................................................................................................... 323
第14 章 持续集成Jenkins 入门 ............................................................................ 324
14.1 环境搭建 .......................................................................................................... 325
14.2 创建任务 .......................................................................................................... 328
14.3 运行构建 .......................................................................................................... 333
14.4 定时执行构建 .................................................................................................. 335
本章小结 ..................................................................................................................... 338
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Selenium 2自动化测试实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python 3网络爬虫开发实战
第1章　开发环境配置　　1
1.1　Python 3的安装　　1
1.1.1　Windows下的安装　　1
1.1.2　Linux下的安装　　6
1.1.3　Mac下的安装　　8
1.2　请求库的安装　　10
1.2.1　requests的安装　　10
1.2.2　Selenium的安装　　11
1.2.3　ChromeDriver的安装　　12
1.2.4　GeckoDriver的安装　　15
1.2.5　PhantomJS的安装　　17
1.2.6　aiohttp的安装　　18
1.3　解析库的安装　　19
1.3.1　lxml的安装　　19
1.3.2　Beautiful Soup的安装　　21
1.3.3　pyquery的安装　　22
1.3.4　tesserocr的安装　　22
1.4　数据库的安装　　26
1.4.1　MySQL的安装　　27
1.4.2　MongoDB的安装　　29
1.4.3　Redis的安装　　36
1.5　存储库的安装　　39
1.5.1　PyMySQL的安装　　39
1.5.2　PyMongo的安装　　39
1.5.3　redis-py的安装　　40
1.5.4　RedisDump的安装　　40
1.6　Web库的安装　　41
1.6.1　Flask的安装　　41
1.6.2　Tornado的安装　　42
1.7　App爬取相关库的安装　　43
1.7.1　Charles的安装　　44
1.7.2　mitmproxy的安装　　50
1.7.3　Appium的安装　　55
1.8　爬虫框架的安装　　59
1.8.1　pyspider的安装　　59
1.8.2　Scrapy的安装　　61
1.8.3　Scrapy-Splash的安装　　65
1.8.4　Scrapy-Redis的安装　　66
1.9　部署相关库的安装　　67
1.9.1　Docker的安装　　67
1.9.2　Scrapyd的安装　　71
1.9.3　Scrapyd-Client的安装　　74
1.9.4　Scrapyd API的安装　　75
1.9.5　Scrapyrt的安装　　75
1.9.6　Gerapy的安装　　76
第2章　爬虫基础　　77
2.1　HTTP基本原理　　77
2.1.1　URI和URL　　77
2.1.2　超文本　　78
2.1.3　HTTP和HTTPS　　78
2.1.4　HTTP请求过程　　80
2.1.5　请求　　82
2.1.6　响应　　84
2.2　网页基础　　87
2.2.1　网页的组成　　87
2.2.2　网页的结构　　88
2.2.3　节点树及节点间的关系　　90
2.2.4　选择器　　91
2.3　爬虫的基本原理　　93
2.3.1　爬虫概述　　93
2.3.2　能抓怎样的数据　　94
2.3.3　JavaScript渲染页面　　94
2.4　会话和Cookies　　95
2.4.1　静态网页和动态网页　　95
2.4.2　无状态HTTP　　96
2.4.3　常见误区　　98
2.5　代理的基本原理　　99
2.5.1　基本原理　　99
2.5.2　代理的作用　　99
2.5.3　爬虫代理　　100
2.5.4　代理分类　　100
2.5.5　常见代理设置　　101
第3章　基本库的使用　　102
3.1　使用urllib　　102
3.1.1　发送请求　　102
3.1.2　处理异常　　112
3.1.3　解析链接　　114
3.1.4　分析Robots协议　　119
3.2　使用requests　　122
3.2.1　基本用法　　122
3.2.2　高级用法　　130
3.3　正则表达式　　139
3.4　抓取猫眼电影排行　　150
第4章　解析库的使用　　158
4.1　使用XPath　　158
4.2　使用Beautiful Soup　　168
4.3　使用pyquery　　184
第5章　数据存储　　197
5.1　文件存储　　197
5.1.1　TXT文本存储　　197
5.1.2　JSON文件存储　　199
5.1.3　CSV文件存储　　203
5.2　关系型数据库存储　　207
5.2.1　MySQL的存储　　207
5.3　非关系型数据库存储　　213
5.3.1　MongoDB存储　　214
5.3.2　Redis存储　　221
第6章　Ajax数据爬取　　232
6.1　什么是Ajax　　232
6.2　Ajax分析方法　　234
6.3　Ajax结果提取　　238
6.4　分析Ajax爬取今日头条街拍美图　　242
第7章　动态渲染页面爬取　　249
7.1　Selenium的使用　　249
7.2　Splash的使用　　262
7.3　Splash负载均衡配置　　286
7.4　使用Selenium爬取淘宝商品　　289
第8章　验证码的识别　　298
8.1　图形验证码的识别　　298
8.2　极验滑动验证码的识别　　301
8.3　点触验证码的识别　　311
8.4　微博宫格验证码的识别　　318
第9章　代理的使用　　326
9.1　代理的设置　　326
9.2　代理池的维护　　333
9.3　付费代理的使用　　347
9.4　ADSL拨号代理　　351
9.5　使用代理爬取微信公众号文章　　364
第10章　模拟登录　　379
10.1　模拟登录并爬取GitHub　　379
10.2　Cookies池的搭建　　385
第11章　App的爬取　　398
11.1　Charles的使用　　398
11.2　mitmproxy的使用　　405
11.3　mitmdump爬取“得到”App电子书
信息　　417
11.4　Appium的基本使用　　423
11.5　Appium爬取微信朋友圈　　433
11.6　Appium+mitmdump爬取京东商品　　437
第12章　pyspider框架的使用　　443
12.1　pyspider框架介绍　　443
12.2　pyspider的基本使用　　445
12.3　pyspider用法详解　　459
第13章　Scrapy框架的使用　　468
13.1　Scrapy框架介绍　　468
13.2　Scrapy入门　　470
13.3　Selector的用法　　480
13.4　Spider的用法　　486
13.5　Downloader Middleware的用法　　487
13.6　Spider Middleware的用法　　494
13.7　Item Pipeline的用法　　496
13.8　Scrapy对接Selenium　　506
13.9　Scrapy对接Splash　　511
13.10　Scrapy通用爬虫　　516
13.11　Scrapyrt的使用　　533
13.12　Scrapy对接Docker　　536
13.13　Scrapy爬取新浪微博　　541
第14章　分布式爬虫　　555
14.1　分布式爬虫原理　　555
14.2　Scrapy-Redis源码解析　　558
14.3　Scrapy分布式实现　　564
14.4　Bloom Filter的对接　　569
第15章　分布式爬虫的部署　　577
15.1　Scrapyd分布式部署　　577
15.2　Scrapyd-Client的使用　　582
15.3　Scrapyd对接Docker　　583
15.4　Scrapyd批量部署　　586
15.5　Gerapy分布式管理　　590

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python 3网络爬虫开发实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>NumPy攻略
目　录

第1章　使用IPython　　1
1.1 　引言　　1
1.2 　安装IPython　　2
1.2.1 　具体步骤　　2
1.2.2 　攻略小结　　3
1.3 　使用IPython的shell　　4
1.3.1 　具体步骤　　4
1.3.2 　攻略小结　　6
1.4 　阅读手册页　　6
1.4.1 　具体步骤　　6
1.4.2 　攻略小结　　6
1.5 　安装Matplotlib　　7
1.6 　运行基于Web的notebook　　8
1.6.1 　准备工作　　8
1.6.2 　具体步骤　　8
1.6.3 　攻略小结　　10
1.6.4 　参考阅读　　10
1.7 　导出基于Web的notebook　　10
1.8 　导入基于Web的notebook　　12
1.9 　配置notebook服务器　　14
1.9.1 　具体步骤　　15
1.9.2 　攻略小结　　16
1.10 　初探SymPy配置　　17
1.10.1 　准备工作　　17
1.10.2 　具体步骤　　17
第2章　高级索引和数组概念　　19
2.1 　引言　　19
2.2 　安装SciPy　　20
2.2.1 　准备工作　　20
2.2.2 　具体步骤　　20
2.2.3 　攻略小结　　21
2.3 　安装PIL　　22
2.4 　调整图像大小　　22
2.4.1 　准备工作　　23
2.4.2 　具体步骤　　23
2.4.3 　攻略小结　　25
2.4.4 　参考阅读　　25
2.5 　创建视图和副本　　25
2.5.1 　准备工作　　25
2.5.2 　具体步骤　　26
2.5.3 　攻略小结　　27
2.6 　翻转图像　　27
2.6.1 　具体步骤　　27
2.6.2 　参考阅读　　29
2.7 　高级索引　　29
2.7.1 　具体步骤　　29
2.7.2 　攻略小结　　31
2.8 　位置列表型索引　　31
2.9 　布尔型索引　　32
2.9.1 　具体步骤　　33
2.9.2 　攻略小结　　34
2.9.3 　参考阅读　　34
2.10 　数独游戏中的跨度技巧　　34
2.10.1 　具体步骤　　35
2.10.2 　攻略小结　　37
2.11 　用广播机制扩展数组　　37
第3章　常用函数　　40
3.1 　引言　　40
3.2 　斐波那契数列求和　　41
3.2.1 　具体步骤　　41
3.2.2 　攻略小结　　44
3.2.3 　参考阅读　　44
3.3 　寻找质因数　　44
3.3.1 　具体步骤　　44
3.3.2 　攻略小结　　46
3.4 　寻找回文数　　46
3.4.1 　具体步骤　　46
3.4.2 　攻略小结　　48
3.4.3 　更多工作　　48
3.5 　确定稳态向量　　48
3.5.1 　具体步骤　　48
3.5.2 　攻略小结　　52
3.5.3 　参考阅读　　53
3.6 　发现幂律分布　　53
3.6.1 　具体步骤　　53
3.6.2 　攻略小结　　55
3.6.3 　参考阅读　　55
3.7 　定期在低点做交易　　55
3.7.1 　准备工作　　56
3.7.2 　具体步骤　　56
3.7.3 　攻略小结　　58
3.7.4 　参考阅读　　58
3.8 　模拟在随机时间点做交易　　59
3.8.1 　准备工作　　59
3.8.2 　具体步骤　　59
3.8.3 　攻略小结　　61
3.8.4 　参考阅读　　61
3.9 　用埃氏筛筛选整数　　61
第4章　NumPy与其他软件的交互　　63
4.1 　引言　　63
4.2 　使用缓冲区协议　　64
4.2.1 　准备工作　　64
4.2.2 　具体步骤　　64
4.2.3 　攻略小结　　66
4.2.4 　参考阅读　　66
4.3 　使用数组接口　　66
4.3.1 　准备工作　　66
4.3.2 　具体步骤　　66
4.3.3 　攻略小结　　67
4.3.4 　参考阅读　　68
4.4 　与MATLAB和Octave交换数据　　68
4.4.1 　准备工作　　68
4.4.2 　具体步骤　　68
4.4.3 　参考阅读　　69
4.5 　安装RPy2　　69
4.6 　连接到R　　69
4.6.1 　准备工作　　70
4.6.2 　具体步骤　　70
4.6.3 　参考阅读　　71
4.7 　安装JPype　　71
4.8 　传递NumPy数组到JPype　　71
4.8.1 　具体步骤　　72
4.8.2 　攻略小结　　73
4.8.3 　参考阅读　　73
4.9 　安装谷歌应用程序引擎　　73
4.10 　在谷歌云中部署NumPy代码　　74
4.10.1 　具体步骤　　75
4.10.2 　攻略小结　　76
4.11 　在Python Anywhere的Web控制台中运行NumPy代码　　76
4.11.1 　具体步骤　　77
4.11.2 　攻略小结　　78
4.12 　设置PiCloud　　78
4.12.1 　具体步骤　　79
4.12.2 　攻略小结　　80
第5章　声音和图像处理　　81
5.1 　引言　　81
5.2 　加载图像到内存映射区　　81
5.2.1 　准备工作　　82
5.2.2 　具体步骤　　82
5.2.3 　攻略小结　　85
5.2.4 　参考阅读　　85
5.3 　合并图像　　85
5.3.1 　准备工作　　85
5.3.2 　具体步骤　　86
5.3.3 　攻略小结　　88
5.3.4 　参考阅读　　88
5.4 　图像的模糊化处理　　89
5.4.1 　具体步骤　　89
5.4.2 　攻略小结　　91
5.5 　复制声音片段　　91
5.5.1 　具体步骤　　91
5.5.2 　攻略小结　　93
5.6 　合成声音　　94
5.6.1 　具体步骤　　94
5.6.2 　攻略小结　　96
5.7 　设计音频滤波器　　96
5.7.1 　具体步骤　　97
5.7.2 　攻略小结　　99
5.8 　用索贝尔滤波器进行边缘检测　　99
5.8.1 　具体步骤　　99
5.8.2 　攻略小结　　101
第6章　特殊类型数组与通用函数　　102
6.1 　引言　　102
6.2 　创建一个通用函数　　102
6.2.1 　具体步骤　　102
6.2.2 　攻略小结　　103
6.3 　寻找勾股数　　103
6.3.1 　具体步骤　　103
6.3.2 　攻略小结　　105
6.4 　用chararray做字符串操作　　105
6.4.1 　具体步骤　　105
6.4.2 　攻略小结　　106
6.5 　创建一个masked类型的数组　　106
6.5.1 　具体步骤　　106
6.5.2 　攻略小结　　108
6.6 　忽略负值和极值　　108
6.6.1 　具体步骤　　108
6.6.2 　攻略小结　　111
6.7 　用recarray创建评分表　　111
6.7.1 　具体步骤　　112
6.7.2 　攻略小结　　114
第7章　性能分析与调试　　115
7.1 　引言　　115
7.2 　用timeit进行性能分析　　115
7.2.1 　具体步骤　　115
7.2.2 　攻略小结　　118
7.3 　用IPython进行性能分析　　118
7.3.1 　具体步骤　　118
7.3.2 　攻略小结　　120
7.4 　安装line_profiler　　120
7.4.1 　准备工作　　120
7.4.2 　具体步骤　　120
7.4.3 　参考阅读　　121
7.5 　用line_profiler分析代码　　121
7.5.1 　具体步骤　　121
7.5.2 　攻略小结　　122
7.6 　用cProfile扩展模块分析代码　　122
7.7 　用IPython进行调试　　123
7.7.1 　具体步骤　　124
7.7.2 　攻略小结　　125
7.8 　用pudb进行调试　　126
第8章　质量保证　　127
8.1 　引言　　127
8.2 　安装Pyflakes　　127
8.2.1 　准备工作　　127
8.2.2 　具体步骤　　128
8.3 　用Pyflakes进行静态分析　　128
8.3.1 　具体步骤　　128
8.3.2 　攻略小结　　129
8.4 　用Pylint分析代码　　129
8.4.1 　准备工作　　129
8.4.2 　具体步骤　　130
8.4.3 　攻略小结　　130
8.4.4 　参考阅读　　131
8.5 　用Pychecker进行静态分析　　131
8.6 　用docstrings测试代码　　132
8.6.1 　具体步骤　　132
8.6.2 　攻略小结　　134
8.7 　编写单元测试　　134
8.7.1 　具体步骤　　134
8.7.2 　攻略小结　　136
8.8 　用模拟对象测试代码　　137
8.8.1 　具体步骤　　137
8.8.2 　攻略小结　　139
8.9 　基于BDD方式的测试　　139
8.9.1 　具体步骤　　139
8.9.2 　攻略小结　　141
第9章　用Cython为代码提速　　142
9.1 　引言　　142
9.2 　安装Cython　　142
9.3 　构建Hello World程序　　143
9.3.1 　具体步骤　　143
9.3.2 　攻略小结　　144
9.4 　在Cython中使用NumPy　　144
9.4.1 　具体步骤　　145
9.4.2 　攻略小结　　146
9.5 　调用C语言函数　　146
9.5.1 　具体步骤　　146
9.5.2 　攻略小结　　148
9.6 　分析Cython代码　　148
9.6.1 　具体步骤　　148
9.6.2 　攻略小结　　150
9.7 　用Cython求阶乘的近似值　　150
9.7.1 　具体步骤　　150
9.7.2 　攻略小结　　152
第10章　有趣的Scikits　　153
10.1 　引言　　153
10.2 　安装scikits-learn　　154
10.2.1 　准备工作　　154
10.2.2 　具体步骤　　154
10.3 　加载范例数据集　　155
10.4 　用scikits-learn对道琼斯成分股做聚类分析　　155
10.4.1 　具体步骤　　156
10.4.2 　攻略小结　　158
10.5 　安装scikits-statsmodels　　158
10.6 　用scikits-statsmodels做正态性检验　　159
10.6.1 　具体步骤　　159
10.6.2 　攻略小结　　160
10.7 　安装scikits-image　　160
10.8 　检测角点　　160
10.8.1 　准备工作　　161
10.8.2 　具体步骤　　161
10.8.3 　攻略小结　　162
10.9 　检测边缘　　162
10.10 　安装Pandas　　163
10.11 　用Pandas估计股票收益的相关性　　164
10.11.1 　具体步骤　　164
10.11.2 　攻略小结　　166
10.12 　从statsmodels加载数据到pandas对象　　166
10.12.1 　准备工作　　166
10.12.2 　具体步骤　　167
10.12.3 　攻略小结　　168
10.13 　重采样时间序列数据　　169
10.13.1 　具体步骤　　169
10.13.2 　攻略小结　　171
索引　　172

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>NumPy攻略
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python UNIX和Linux系统管理指南
序
前言
第1章 Python简介
为什么要选Python
学习的动力
一些基础知识
在Python中执行命令
在Python中使用函数
通过Import语句实现代码复用
第2章 IPython
安装IPython
基础知识
从功能强大的函数获得帮助
UNIX Shell
信息搜集
自动和快捷方式
本章小结
第3章 文本
Python的内建功能及模块
ElementTree
本章小结
第4章 文档与报告
自动信息收集
手工信息收集
信息格式化
信息发布
本章小结
第5章 网络
网络客户端
远程过程调用
SSH
Twisted
Scapy
使用Scapy创建脚本
第6章 数据
引言
使用 OS 模块与Data进行交互
拷贝、移动、重命名和删除数据
使用路径、目录和文件
数据比较
合并数据
对文件和目录的模式匹配
包装rsync
元数据: 关于数据的数据
存档、压缩、映像和恢复
使用tarfile模块创建TAR归档
使用tarfile模块检查TAR文件内容
第7章 SNMP
引言
对SNMP的简要介绍
IPython与Net-SNMP
查找数据中心
使用Net-SNMP获取多个值
创建混合的SNMP工具
Net-SNMP扩展
SNMP设备控制
整合Zenoss的企业级SNMP
第8章 操作系统什锦
引言
Python中跨平台的UNIX编辑
PyInotify
OS X
Red Hat Linux系统管理
Ubuntu管理
Solaris系统管理
虚拟化
云计算
使用Zenoss从Linux上管理Windows服务器
第9章 包管理
引言
Setuptools和Python Egg
使用easy_install
easy_install的高级特征
创建egg
进入点及控制台脚本
使用Python包索引注册一个包
Distutils
Buildout
使用Buildout
使用Buildout进行开发
virtualenv
EPM包管理
EPM总结：真的非常简单
第10章 进程与并发
引言
子进程
使用Supervisor来管理进程
使用Screen来管理进程
Python中的线程
进程
Processing模块
调度Python进程
daemonizer
本章小结
第11章 创建GUI
GUI创建理论
生成一个简单的PyGTK应用
使用PyGTK创建Apache日志浏览器
使用Curses创建Apache日志浏览器
Web应用
Django
本章小结
第12章 数据持久性
简单序列化
关系序列化
本章小结
第13章 命令行
引言
基本标准输入的使用
Optparse简介
简单的Optparse使用模式
Unix Mashups：整合Shell命令到Python命令行工具中
整合配置文件
本章小结
第14章 实例
使用Python管理DNS
使用OpenLDAP、Active Directory以及其他Python工具实现LDAP
Apache日志报告
FTP镜像
附录 回调
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python UNIX和Linux系统管理指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python基础教程（第2版•修订版）
第1章　快速改造：基础知识　　1
1.1 　安装Python　　1
1.1.1 　Windows　　1
1.1.2 　Linux和UNIX　　3
1.1.3 　苹果机（Macintosh）　　4
1.1.4 　其他发行版本　　5
1.1.5 　时常关注，保持更新　　6
1.2 　交互式解释器　　6
1.3 　算法是什么　　7
1.4 　数字和表达式　　8
1.4.1 　长整数　　9
1.4.2 　十六进制和八进制　　10
1.5 　变量　　10
1.6 　语句　　11
1.7 　获取用户输入　　12
1.8 　函数　　13
1.9 　模块　　14
1.9.1 　cmath和复数　　14
1.9.2 　回到__future__　　15
1.10 　保存并执行程序　　15
1.10.1 　通过命令提示符运行Python脚本　　16
1.10.2 　让脚本像普通程序一样运行　　17
1.10.3 　注释　　18
1.11 　字符串　　19
1.11.1 　单引号字符串和转义引号　　19
1.11.2 　拼接字符串　　20
1.11.3 　字符串表示，str和repr　　20
1.11.4 　input和raw_input的比较　　21
1.11.5 　长字符串、原始字符串和Unicode　　22
1.12 　小结　　24
1.12.1 　本章的新函数　　25
1.12.2 　接下来学什么　　25
第2章　列表和元组　　26
2.1 　序列概览　　26
2.2 　通用序列操作　　27
2.2.1 　索引　　27
2.2.2 　分片　　29
2.2.3 　序列相加　　31
2.2.4 　乘法　　31
2.2.5 　成员资格　　32
2.2.6 　长度、最小值和最大值　　33
2.3 　列表：Python的“苦力”　　34
2.3.1 　list函数　　34
2.3.2 　基本的列表操作　　34
2.3.3 　列表方法　　36
2.4 　元组：不可变序列　　41
2.4.1 　tuple函数　　42
2.4.2 　基本元组操作　　42
2.4.3 　那么，意义何在　　42
2.5 　小结　　43
2.5.1 　本章的新函数　　43
2.5.2 　接下来学什么　　43
第3章　使用字符串　　44
3.1 　基本字符串操作　　44
3.2 　字符串格式化：精简版　　44
3.3 　字符串格式化：完整版　　46
3.3.1 　简单转换　　47
3.3.2 　字段宽度和精度　　47
3.3.3 　符号、对齐和用0填充　　47
3.4 　字符串方法　　49
3.4.1 　find　　49
3.4.2 　join　　50
3.4.3 　lower　　51
3.4.4 　replace　　51
3.4.5 　split　　52
3.4.6 　strip　　52
3.4.7 　translate　　52
3.5 　小结　　54
3.5.1 　本章的新函数　　54
3.5.2 　接下来学什么　　54
第4章　字典：当索引不好用时　　55
4.1 　字典的使用　　55
4.2 　创建和使用字典　　56
4.2.1 　dict函数　　56
4.2.2 　基本字典操作　　57
4.2.3 　字典的格式化字符串　　58
4.2.4 　字典方法　　59
4.3 　小结　　64
4.3.1 　本章的新函数　　64
4.3.2 　接下来学什么　　64
第5章　条件、循环和其他语句　　65
5.1 　print和import的更多信息　　65
5.1.1 　使用逗号输出　　65
5.1.2 　把某件事作为另一件事导入　　66
5.2 　赋值魔法　　67
5.2.1 　序列解包　　67
5.2.2 　链式赋值　　68
5.2.3 　增量赋值　　68
5.3 　语句块：缩排的乐趣　　69
5.4 　条件和条件语句　　69
5.4.1 　这就是布尔变量的作用　　69
5.4.2 　条件执行和 if 语句　　70
5.4.3 　else子句　　71
5.4.4 　elif子句　　71
5.4.5 　嵌套代码块　　71
5.4.6 　更复杂的条件　　72
5.4.7 　断言　　76
5.5 　循环　　76
5.5.1 　while循环　　77
5.5.2 　for循环　　77
5.5.3 　循环遍历字典元素　　78
5.5.4 　一些迭代工具　　79
5.5.5 　跳出循环　　80
5.5.6 　循环中的else子句　　82
5.6 　列表推导式——轻量级循环　　82
5.7 　三人行　　83
5.7.1 　什么都没发生　　84
5.7.2 　使用del删除　　84
5.7.3 　使用exec和eval执行和求值字符串　　85
5.8 　小结　　87
5.8.1 　本章的新函数　　88
5.8.2 　接下来学什么　　88
第6章　抽象　　89
6.1 　懒惰即美德　　89
6.2 　抽象和结构　　90
6.3 　创建函数　　90
6.3.1 　文档化函数　　91
6.3.2 　并非真正函数的函数　　92
6.4 　参数魔法　　92
6.4.1 　值从哪里来　　93
6.4.2 　我能改变参数吗　　93
6.4.3 　关键字参数和默认值　　97
6.4.4 　收集参数　　99
6.4.5 　参数收集的逆过程　　101
6.4.6 　练习使用参数　　102
6.5 　作用域　　103
6.6 　递归　　105
6.6.1 　两个经典：阶乘和幂　　106
6.6.2 　另外一个经典：二分法查找　　107
6.7 　小结　　110
6.7.1 　本章的新函数　　110
6.7.2 　接下来学什么　　111
第7章　更加抽象　　112
7.1 　对象的魔力　　112
7.1.1 　多态　　113
7.1.2 　封装　　115
7.1.3 　继承　　117
7.2 　类和类型　　117
7.2.1 　类到底是什么　　117
7.2.2 　创建自己的类　　118
7.2.3 　特性、函数和方法　　119
7.2.4 　类的命名空间　　121
7.2.5 　指定超类　　122
7.2.6 　检查继承　　122
7.2.7 　多个超类　　123
7.2.8 　接口和内省　　124
7.3 　一些关于面向对象设计的思考　　125
7.4 　小结　　125
7.4.1 　本章的新函数　　126
7.4.2 　接下来学什么　　126
第8章　异常　　127
8.1 　什么是异常　　127
8.2 　按自己的方式出错　　127
8.2.1 　raise语句　　127
8.2.2 　自定义异常类　　128
8.3 　捕捉异常　　129
8.4 　不止一个except子句　　130
8.5 　用一个块捕捉两个异常　　131
8.6 　捕捉对象　　131
8.7 　真正的全捕捉　　132
8.8 　万事大吉　　132
8.9 　最后…… 　　134
8.10 　异常和函数　　134
8.11 　异常之禅　　135
8.12 　小结　　136
8.12.1 　本章的新函数　　137
8.12.2 　接下来学什么　　137
第9章　魔法方法、属性和迭代器　　138
9.1 　准备工作　　138
9.2 　构造方法　　139
9.2.1 　重写一般方法和特殊的构造方法　　140
9.2.2 　调用未绑定的超类构造方法　　141
9.2.3 　使用super函数　　142
9.3 　成员访问　　143
9.3.1 　基本的序列和映射规则　　144
9.3.2 　子类化列表，字典和字符串　　146
9.4 　更多魔力　　147
9.5 　属性　　147
9.5.1 　property函数　　148
9.5.2 　静态方法和类成员方法　　149
9.5.3 　__getattr__、__setattr__和它的朋友们　　150
9.6 　迭代器　　151
9.6.1 　迭代器规则　　151
9.6.2 　从迭代器得到序列　　153
9.7 　生成器　　153
9.7.1 　创建生成器　　153
9.7.2 　递归生成器　　154
9.7.3 　通用生成器　　156
9.7.4 　生成器方法　　156
9.7.5 　模拟生成器　　157
9.8 　八皇后问题　　158
9.8.1 　生成器和回溯　　158
9.8.2 　问题　　159
9.8.3 　状态表示　　159
9.8.4 　寻找冲突　　159
9.8.5 　基本情况　　160
9.8.6 　需要递归的情况　　161
9.8.7 　打包　　162
9.9 　小结　　163
9.9.1 　本章的新函数　　164
9.9.2 　接下来学什么　　164
第10章　自带电池　　165
10.1 　模块　　165
10.1.1 　模块是程序　　165
10.1.2 　模块用于定义　　167
10.1.3 　让你的模块可用　　169
10.1.4 　包　　171
10.2 　探究模块　　172
10.2.1 　模块中有什么　　172
10.2.2 　用help获取帮助　　173
10.2.3 　文档　　174
10.2.4 　使用源代码　　174
10.3 　标准库：一些最爱　　175
10.3.1 　sys　　175
10.3.2 　os　　176
10.3.3 　fileinput　　178
10.3.4 　集合、堆和双端队列　　180
10.3.5 　time　　184
10.3.6 　random　　185
10.3.7 　shelve　　188
10.3.8 　re　　191
10.3.9 　其他有趣的标准模块　　204
10.4 　小结　　205
10.4.1 　本章的新函数　　205
10.4.2 　接下来学什么　　206
第11章　文件和流　　207
11.1 　打开文件　　207
11.1.1 　文件模式　　207
11.1.2 　缓冲　　208
11.2 　基本的文件方法　　209
11.2.1 　读和写　　209
11.2.2 　管式输出　　210
11.2.3 　读写行　　211
11.2.4 　关闭文件　　212
11.2.5 　使用基本文件方法　　213
11.3 　对文件内容进行迭代　　214
11.3.1 　按字节处理　　214
11.3.2 　按行操作　　215
11.3.3 　读取所有内容　　215
11.3.4 　使用fileinput实现懒惰行迭代　　216
11.3.5 　文件迭代器　　216
11.4 　小结　　217
11.4.1 　本章的新函数　　218
11.4.2 　接下来学什么　　218
第12章　图形用户界面　　219
12.1 　丰富的平台　　219
12.2 　下载和安装wxPython　　220
12.3 　创建示例GUI应用程序　　221
12.3.1 　开始　　221
12.3.2 　窗口和组件　　222
12.3.3 　标签、标题和位置　　223
12.3.4 　更智能的布局　　225
12.3.5 　事件处理　　226
12.3.6 　完成了的程序　　226
12.4 　但是我宁愿用…… 　　228
12.4.1 　使用Tkinter　　229
12.4.2 　使用Jython和Swing　　229
12.4.3 　使用其他开发包　　230
12.5 　小结　　230
第13章　数据库支持　　231
13.1 　Python数据库编程接口（API）　　232
13.1.1 　全局变量　　232
13.1.2 　异常　　233
13.1.3 　连接和游标　　233
13.1.4 　类型　　235
13.2 　SQLite和PySQLite　　235
13.2.1 　入门　　236
13.2.2 　数据库应用程序示例　　237
13.3 　小结　　239
13.3.1 　本章的新函数　　240
13.3.2 　接下来学什么　　240
第14章　网络编程　　241
14.1 　少数几个网络设计模块　　241
14.1.1 　socket模块　　242
14.1.2 　urllib和urllib2模块　　243
14.1.3 　其他模块　　245
14.2 　SocketServer和它的朋友们　　246
14.3 　多个连接　　247
14.3.1 　使用SocketServer进行分叉和线程处理　　248
14.3.2 　带有select和poll的异步I/O　　249
14.4 　Twisted　　251
14.4.1 　下载并安装Twisted　　251
14.4.2 　编写Twisted服务器　　251
14.5 　小结　　253
14.5.1 　本章的新函数　　254
14.5.2 　接下来学什么　　254
第15章　Python和Web　　255
15.1 　屏幕抓取　　255
15.1.1 　Tidy和XHTML解析　　256
15.1.2 　Beautiful Soup　　260
15.2 　使用CGI创建动态网页　　261
15.2.1 　第一步：准备网络服务器　　261
15.2.2 　第二步：加入Pound Bang行　　261
15.2.3 　第三步：设置文件权限　　262
15.2.4 　CGI安全风险　　263
15.2.5 　简单的CGI脚本　　263
15.2.6 　使用cgitb调试　　263
15.2.7 　使用cgi模块　　264
15.2.8 　简单的表单　　266
15.3 　更进一步：mod_python　　267
15.3.1 　安装mod_python　　268
15.3.2 　CGI处理程序　　269
15.3.3 　PSP　　270
15.3.4 　发布　　271
15.4 　网络应用程序框架　　273
15.5 　Web服务：正确分析　　274
15.5.1 　RSS和相关内容　　274
15.5.2 　使用XML-RPC进行远程过程调用　　275
15.5.3 　SOAP　　276
15.6 　小结　　276
15.6.1 　本章的新函数　　276
15.6.2 　接下来学什么　　276
第16章　测试　　277
16.1 　先测试，后编码　　277
16.1.1 　精确的需求说明　　278
16.1.2 　为改变而计划　　279
16.1.3 　测试的4个步骤　　279
16.2 　测试工具　　280
16.2.1 　doctest　　280
16.2.2 　unittest　　282
16.3 　单元测试以外的内容　　285
16.3.1 　使用PyChecker和PyLint检查源代码　　285
16.3.2 　性能分析　　288
16.4 　小结　　289
16.4.1 　本章的新函数　　290
16.4.2 　接下来学什么　　290
第17章　扩展Python　　291
17.1 　考虑哪个更重要　　291
17.2 　非常简单的途径：Jython和IronPython　　292
17.3 　编写C语言扩展　　294
17.3.1 　SWIG　　296
17.3.2 　自己研究　　299
17.4 　小结　　303
17.4.1 　本章的新函数　　304
17.4.2 　接下来学什么　　304
第18章　程序打包　　305
18.1 　Distutils基础　　305
18.2 　打包　　307
18.2.1 　建立存档文件　　307
18.2.2 　创建Windows安装程序或RPM包　　308
18.3 　编译扩展　　309
18.4 　使用py2exe创建可执行程序　　310
18.5 　小结　　311
18.5.1 　本章的新函数　　311
18.5.2 　接下来学什么　　311
第19章　好玩的编程　　312
19.1 　为什么要好玩　　312
19.2 　程序设计的柔术　　312
19.3 　原型设计　　313
19.4 　配置　　314
19.4.1 　提取常量　　314
19.4.2 　配置文件　　315
19.5 　日志记录　　317
19.6 　如果还没烦　　318
19.7 　如果还想学　　318
19.8 　小结　　319
第20章　项目1：即时标记　　320
20.1 　问题是什么　　320
20.2 　有用的工具　　321
20.3 　准备工作　　321
20.4 　初次实现　　322
20.4.1 　找出文本块　　322
20.4.2 　添加一些标记　　323
20.5 　再次实现　　324
20.5.1 　处理程序　　325
20.5.2 　处理程序的超类　　325
20.5.3 　规则　　327
20.5.4 　规则的超类　　328
20.5.5 　过滤器　　328
20.5.6 　分析器　　328
20.5.7 　构造规则和过滤器　　329
20.5.8 　整合　　332
20.6 　进一步探索　　336
第21章　项目2：画幅好画　　337
21.1 　问题　　337
21.2 　有用的工具　　338
21.3 　准备工作　　338
21.4 　初次实现　　339
21.4.1 　用ReportLab画图　　339
21.4.2 　生成折线　　340
21.4.3 　编写原型　　341
21.5 　再次实现　　342
21.5.1 　获取数据　　342
21.5.2 　使用LinePlot类　　343
21.6 　进一步探索　　344
第22章　项目3：万能的XML　　345
22.1 　问题　　345
22.2 　有用的工具　　346
22.3 　准备工作　　347
22.4 　初次实现　　348
22.4.1 　创建简单的内容处理器　　348
22.4.2 　生成HTML页面　　350
22.5 　再次实现　　352
22.5.1 　调度程序的混入类　　352
22.5.2 　实现首部、页脚和默认的处理程序　　354
22.5.3 　对目录的支持　　354
22.5.4 　事件处理程序　　355
22.6 　进一步探索　　358
第23章　项目4：新闻聚合　　359
23.1 　问题　　359
23.2 　有用的工具　　360
23.3 　准备工作　　360
23.4 　初次实现　　360
23.5 　再次实现　　363
23.6 　进一步探索　　369
第24章　项目5：虚拟茶话会　　371
24.1 　问题　　371
24.2 　有用的工具　　371
24.3 　准备工作　　372
24.4 　初次实现　　373
24.4.1 　ChatServer类　　373
24.4.2 　ChatSession类　　374
24.4.3 　整合　　376
24.5 　再次实现　　377
24.5.1 　基础命令解释　　378
24.5.2 　房间　　378
24.5.3 　登录和退出房间　　379
24.5.4 　主聊天室　　379
24.5.5 　新的服务器　　380
24.6 　进一步探索　　384
第25章　项目6：使用CGI进行远程编辑　　385
25.1 　问题　　385
25.2 　有用的工具　　385
25.3 　准备工作　　386
25.4 　初次实现　　386
25.5 　再次实现　　387
25.5.1 　创建文件名表单　　387
25.5.2 　创建编辑器的脚本　　388
25.5.3 　编写保存脚本　　389
25.5.4 　运行编辑器　　390
25.6 　进一步探索　　391
第26章　项目7：自定义电子公告板　　393
26.1 　问题　　393
26.2 　有用的工具　　394
26.3 　准备工作　　394
26.4 　初次实现　　395
26.5 　再次实现　　398
26.5.1 　编写Main脚本　　399
26.5.2 　编写View脚本　　400
26.5.3 　编写Edit脚本　　401
26.5.4 　编写Save脚本　　403
26.5.5 　尝试使用　　404
26.6 　进一步探索　　404
第27章　项目8：使用XML-RPC进行文件共享　　406
27.1 　问题　　406
27.2 　有用的工具　　407
27.3 　准备工作　　407
27.4 　初次实现　　408
27.4.1 　实现一个简单的节点　　408
27.4.2 　尝试使用首次实现　　413
27.5 　再次实现　　414
27.5.1 　创建客户端界面　　414
27.5.2 　引发异常　　415
27.5.3 　验证文件名　　416
27.5.4 　尝试使用再次实现　　419
27.6 　进一步探索　　420
第28章　项目9：文件共享2——GUI版本　　421
28.1 　问题　　421
28.2 　有用的工具　　421
28.3 　准备工作　　421
28.4 　初次实现　　422
28.5 　再次实现　　424
28.6 　进一步探索　　427
第29章　项目10：DIY街机游戏　　428
29.1 　问题　　428
29.2 　有用的工具　　429
29.2.1 　pygame　　429
29.2.2 　pygame.locals　　429
29.2.3 　pygame.display　　430
29.2.4 　pygame.font　　430
29.2.5 　pygame.sprite　　430
29.2.6 　pygame.mouse　　431
29.2.7 　pygame.event　　431
29.2.8 　pygame.image　　431
29.3 　准备工作　　431
29.4 　初次实现　　432
29.5 　再次实现　　434
29.6 　进一步探索　　442
附录A 　简明版本　　443
附录B 　Python参考手册　　450
附录C 　在线资源　　461
附录D 　Python 3.0　　464
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python基础教程（第2版•修订版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python编程实战
译者序
序
前言
第1章　python的创建型设计模式 1
1.1　抽象工厂模式 1
1.1.1　经典的抽象工厂模式 2
1.1.2　python风格的抽象工厂模式 4
1.2　建造者模式 6
1.3　工厂方法模式 12
1.4　原型模式 18
1.5　单例模式 19
第2章　python的结构型设计模式 21
2.1　适配器模式 21
2.2　桥接模式 26
2.3　组合模式 31
2.3.1　常规的“组合体/非组合体”式层级 32
2.3.2　只用一个类来表示组合体与非组合体 35
2.4　修饰器模式 37
2.4.1　函数修饰器与方法修饰器 38
2.4.2　类修饰器 42
2.5　外观模式 47
2.6　享元模式 52
2.7　代理模式 54
第3章　python的行为型设计模式 58
3.1　责任链模式 58
3.1.1　用常规方式实现责任链 59
3.1.2　基于协程的责任链 60
3.2　命令模式 63
3.3　解释器模式 66
3.3.1　用eval()函数求表达式的值 67
3.3.2　用exec()函数执行代码 70
3.3.3　用子进程执行代码 73
3.4　迭代器模式 76
3.4.1　通过序列协议实现迭代器 77
3.4.2　通过双参数iter()函数实现迭代器 77
3.4.3　通过迭代器协议实现迭代器 79
3.5　中介者模式 81
3.5.1　用常规方式实现中介者 82
3.5.2　基于协程的中介者 85
3.6　备忘录模式 87
3.7　观察者模式 87
3.8　状态模式 91
3.8.1　用同一套方法来处理不同的状态 93
3.8.2　用不同的方法来处理不同的状态 94
3.9　策略模式 95
3.10　模板方法模式 98
3.11　访问者模式 101
3.12　案例研究：图像处理程序包 102
3.12.1　通用的图像处理模块 103
3.12.2　xpm模块概述 111
3.12.3　png包装器模块 113
第4章　python的高级并发技术 116
4.1　计算密集型并发 119
4.1.1　用队列及多进程实现并发 121
4.1.2　用future及多进程实现并发 126
4.2　i/o密集型并发 128
4.2.1　用队列及线程实现并发 129
4.2.2　用future及线程实现并发 134
4.3　案例研究：并发式gui应用程序 136
4.3.1　创建gui 138
4.3.2　编写与工作线程配套的imagescale模块 144
4.3.3　在gui中显示图像处理进度 146
4.3.4　处理gui程序终止时的相关事宜 148
第5章　扩充python 150
5.1　用ctypes访问c程序库 151
5.2　cython的用法 159
5.2.1　用cython访问c程序库 159
5.2.2　编写cython模块以进一步提升程序执行速度 164
5.3　案例研究：用cython优化图像处理程序包 169
第6章　python高级网络编程 173
6.1　编写xml-rpc应用程序 174
6.1.1　数据包装器 174
6.1.2　编写xml-rpc服务器 178
6.1.3　编写xml-rpc客户端 180
6.2　编写rpyc应用程序 188
6.2.1　线程安全的数据包装器 188
6.2.2　编写rpyc服务器 193
6.2.3　编写rpyc客户端 195
第7章　用tkinter开发图形用户界面 199
7.1　tkinter简介 201
7.2　用tkinter创建对话框 203
7.2.1　创建对话框式应用程序 205
7.2.2　创建应用程序中的对话框 212
7.3　用tkinter创建主窗口式应用程序 220
7.3.1　创建主窗口 222
7.3.2　创建菜单 224
7.3.3　创建带计分器的状态栏 226
第8章　用opengl绘制3d图形 229
8.1　用透视投影法创建场景 230
8.1.1　用pyopengl编写cylinder程序 231
8.1.2　用pyglet编写cylinder程序 235
8.2　用正交投影法制作游戏 238
8.2.1　绘制游戏场景 240
8.2.2　判断用户是否选中了场景里的物体 242
8.2.3　处理用户操作 244
附录a　结束语 248
附录b　参考书目摘录 250
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python编程实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python Web开发学习实录
第1章  欢迎来到Python世界
第2章  练就扎实的基本功
第3章  控制结构
第4章  可复用的函数和模块
第5章  数据结构
第6章  字符串与正则表达式
第7章  面向对象编程
第8章  基于文件的交互
第9章  构造可溶错得应用程序
第10章  持久化的数据
第11章  让信息自由联通——Python网络功能
第12章  应知应会技能之HTML处理
第13章  应知应会技能之XML处理
第14章  图形用户界面
第15章  Python的Web开发之Django框架应用
附录  各章习题参考答案
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python Web开发学习实录
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python编程实践
对本书的赞誉
译者序
第1章　引言/ 1
1.1　程序和编程/ 3
1.2　一点说明/ 4
1.3　要安装什么/ 4
1.4　给教师们的话/ 4
1.5　小结/ 5
第2章　你好，Python/ 7
2.1　概述/ 8
2.2　表达式/ 10
2.3　什么是类型/ 12
2.4　变量和赋值语句/ 14
2.5　当出现错误的时候/ 17
2.6　函数基础/ 18
2.7　内置函数/ 21
2.8　风格漫谈/ 22
2.9　小结/ 22
2.10　习题/ 23
第3章　字符串/ 25
3.1　字符串/ 26
3.2　字符转义/ 28
3.3　多行字符串/ 30
3.4　打印输出/ 30
3.5　格式化打印输出/ 31
3.6　用户输入/ 32
3.7　小结/ 33
3.8　习题/ 33
第4章　模块/ 37
4.1　模块的引入/ 38
4.2　定义你自己的模块/ 41
4.3　对象和方法/ 47
4.4　像素和颜色/ 52
4.5　测试/ 55
4.6　风格漫谈/ 60
4.7　小结/ 60
4.8　习题/ 61
第5章　列表/ 65
5.1　列表和索引/ 66
5.2　修改列表/ 68
5.3　与列表相关的内置函数/ 70
5.4　处理列表项/ 72
5.5　切片/ 75
5.6　别名机制/ 76
5.7　列表方法/ 77
5.8　 嵌套列表/ 79
5.9　其他类型的序列/ 80
5.10　把文件看做列表/ 82
5.11　注释/ 85
5.12　小结/ 86
5.13　习题/ 86
第6章　做出选择/ 89
6.1　布尔逻辑/ 90
6.2　if语句/ 99
6.3　把条件保存起来/ 103
6.4　小结/ 105
6.5　习题/ 105
第7章　重复/ 109
7.1　计数循环/ 110
7.2　while循环/ 118
7.3　用户输入循环/ 124
7.4　控制循环/ 125
7.5　风格漫谈/ 128
7.6　小结/ 129
7.7　习题/ 130
第8章　文件处理/ 133
8.1　每行一条记录/ 134
8.2　含有多个字段的记录/ 144
8.3　定位数据/ 147
8.4　多行记录/ 149
8.5　向前看/ 151
8.6　写入文件/ 153
8.7　小结/ 154
8.8　习题/ 154
第9章　集合和字典/ 157
9.1　集合/ 158
9.2　字典/ 162
9.3　对字典进行反相操作/ 168
9.4　小结/ 169
9.5　习题/ 170
第10章　算法/ 173
10.1　搜索/ 174
10.2　计时/ 181
10.3　小结/ 182
10.4　习题/ 182
第11章　搜索和排序/ 185
11.1　线性搜索/ 186
11.2　二分搜索/ 189
11.3　排序/ 193
11.4　更高效的排序算法/ 199
11.5　合并排序：一种Nlog2N的
算法/ 199
11.6　小结/ 203
11.7　习题/ 204
第12章　构建应用程序/ 207
12.1　关于函数的更多知识/ 208
12.2　异常/ 212
12.3　测试/ 217
12.4　调试/ 223
12.5　模式/ 224
12.6　小结/ 228
12.7　习题/ 228
第13章　面向对象编程/ 237
13.1　Color类/ 238
13.2　特殊方法/ 243
13.3　更多关于dir和help的
知识/ 245
13.4　OO的一点理论知识/ 247
13.5　一个长点的例子/ 254
13.6　小结/ 258
13.7　习题/ 259
第14章　图形用户界面/ 261
14.1　Tkinter模块/ 262
14.2　构建简单的GUI/ 263
14.3　模型、视图和控制器/ 267
14.4　样式/ 271
14.5　一些别的插件/ 275
14.6　面向对象的GUI/ 278
14.7　小结/ 279
14.8　习题/ 280
第15章　数据库/ 283
15.1　概述/ 284
15.2　第一步/ 286
15.3　获取数据/ 288
15.4　更新和删除/ 291
15.5　事务/ 292
15.6　用NULL来处理缺失数据/ 294
15.7　通过连接将表合并起来/ 295
15.8　键和约束/ 299
15.9　高级功能/ 300
15.10　小结/ 304
15.11　习题/ 305
参考资料/ 308
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python编程实践
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>爱上Python
第1章　什么是Python ？	1
1.1　什么是 Python ?	1
1.2　为什么学习 Python ？	1
第2章　为 Python 做好准备	3
2.1　安装解释器	3
2.2　使用 Python Shell、IDLE 并编写第一个程序	4
第3章　变量和操作符的世界	7
3.1　变量是什么？	7
3.2　命名一个变量	7
3.3　赋值符号	8
3.4　基本操作符	9
3.5　更多的分配操作符	10
第4章　Python中的数据类型	11
4.1　整型	11
4.2　浮点型	11
4.3　字符串	11
4.4　Python中的类型转换	15
4.5　列表	16
4.6　元组	18
4.7　字典	19
第5章　程序可交互	23
5.1　Input()	23
5.2　Print()	24
5.3　三引号	25
5.4　转义符号	25
第6章　选择和判断	27
6.1　条件语句	27
6.2　if语句	28
6.3　内联if	30
6.4　for循环	30
6.5　while循环	32
6.6　break中断	33
6.7　continue	34
6.8　Try， Except	35
第7章　函数和模块	39
7.1　什么是函数？	39
7.2　定义函数	39
7.3　变量作用域	40
7.4　引入模块	42
7.5　创建模块	43
第8章　处理文件	45
8.1　打开并读取文本文件	45
8.2　使用For循环来读取文本文件	47
8.3　写入文本文件	47
8.4　通过缓冲大小来打开并读取文本文件	48
8.5　打开、读取并写入二进制文件	49
8.6　删除和重命名文件	49
第9章　项目：数学和BODMAS计算法则	51
第一部分：myPythonFunction.py	51
第二部分：mathGame.py	58
挑战自我	59
附录A：处理字符串	61
附录B：处理列表	70
附录C：处理元组	75
附录D：处理字典	77
附录E：项目答案	80
挑战自我	83
最后一件事	85
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>爱上Python
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>机器学习系统设计
第1章　Python机器学习入门　　1
1.1 　梦之队：机器学习与Python　　1
1.2 　这本书将教给你什么（以及不会教什么）　　2
1.3 　遇到困难的时候怎么办　　3
1.4 　开始　　4
1.4.1 　NumPy、SciPy和Matplotlib简介　　4
1.4.2 　安装Python　　5
1.4.3 　使用NumPy和SciPy智能高效地处理数据　　5
1.4.4 　学习NumPy　　5
1.4.5 　学习SciPy　　9
1.5 　我们第一个（极小的）机器学习应用　　10
1.5.1 　读取数据　　10
1.5.2 　预处理和清洗数据　　11
1.5.3 　选择正确的模型和学习算法　　12
1.6 　小结　　20
第2章　如何对真实样本分类　　22
2.1 　Iris数据集　　22
2.1.1 　第一步是可视化　　23
2.1.2 　构建第一个分类模型　　24
2.2 　构建更复杂的分类器　　28
2.3 　更复杂的数据集和更复杂的分类器　　29
2.3.1 　从Seeds数据集中学习　　29
2.3.2 　特征和特征工程　　30
2.3.3 　最邻近分类　　30
2.4 　二分类和多分类　　33
2.5 　小结　　34
第3章　聚类：寻找相关的帖子　　35
3.1 　评估帖子的关联性　　35
3.1.1 　不应该怎样　　36
3.1.2 　应该怎样　　36
3.2 　预处理：用相近的公共词语个数来衡量相似性　　37
3.2.1 　将原始文本转化为词袋　　37
3.2.2 　统计词语　　38
3.2.3 　词语频次向量的归一化　　40
3.2.4 　删除不重要的词语　　41
3.2.5 　词干处理　　42
3.2.6 　停用词兴奋剂　　44
3.2.7 　我们的成果和目标　　45
3.3 　聚类　　46
3.3.1 　K均值　　46
3.3.2 　让测试数据评估我们的想法　　49
3.3.3 　对帖子聚类　　50
3.4 　解决我们最初的难题　　51
3.5 　调整参数　　54
3.6 　小结　　54
第4章　主题模型　　55
4.1 　潜在狄利克雷分配（LDA）　　55
4.2 　在主题空间比较相似度　　59
4.3 　选择主题个数　　64
4.4 　小结　　65
第5章　分类：检测劣质答案　　67
5.1 　路线图概述　　67
5.2 　学习如何区分出优秀的答案　　68
5.2.1 　调整样本　　68
5.2.2 　调整分类器　　68
5.3 　获取数据　　68
5.3.1 　将数据消减到可处理的程度　　69
5.3.2 　对属性进行预选择和处理　　70
5.3.3 　定义什么是优质答案　　71
5.4 　创建第一个分类器　　71
5.4.1 　从k邻近（kNN）算法开始　　71
5.4.2 　特征工程　　72
5.4.3 　训练分类器　　73
5.4.4 　评估分类器的性能　　74
5.4.5 　设计更多的特征　　74
5.5 　决定怎样提升效果　　77
5.5.1 　偏差?方差及其折中　　77
5.5.2 　解决高偏差　　78
5.5.3 　解决高方差　　78
5.5.4 　高偏差或低偏差　　78
5.6 　采用逻辑回归　　81
5.6.1 　一点数学和一个小例子　　81
5.6.2 　在帖子分类问题上应用逻辑回归　　83
5.7 　观察正确率的背后：准确率和召回率　　84
5.8 　为分类器瘦身　　87
5.9 　出货　　88
5.10 　小结　　88
第6章　分类II：情感分析　　89
6.1 　路线图概述　　89
6.2 　获取推特（Twitter）数据　　89
6.3 　朴素贝叶斯分类器介绍　　90
6.3.1 　了解贝叶斯定理　　90
6.3.2 　朴素　　91
6.3.3 　使用朴素贝叶斯进行分类　　92
6.3.4 　考虑未出现的词语和其他古怪情况　　94
6.3.5 　考虑算术下溢　　95
6.4 　创建第一个分类器并调优　　97
6.4.1 　先解决一个简单问题　　97
6.4.2 　使用所有的类　　99
6.4.3 　对分类器的参数进行调优　　101
6.5 　清洗推文　　104
6.6 　将词语类型考虑进去　　106
6.6.1 　确定词语的类型　　106
6.6.2 　用SentiWordNet成功地作弊　　108
6.6.3 　我们第一个估算器　　110
6.6.4 　把所有东西融合在一起　　111
6.7 　小结　　112
第7章　回归：推荐　　113
7.1 　用回归预测房价　　113
7.1.1 　多维回归　　116
7.1.2 　回归里的交叉验证　　116
7.2 　惩罚式回归　　117
7.2.1 　L1和L2惩罚　　117
7.2.2 　在Scikit-learn中使用Lasso或弹性网　　118
7.3 　P大于N的情形　　119
7.3.1 　基于文本的例子　　120
7.3.2 　巧妙地设置超参数（hyperparameter）　　121
7.3.3 　评分预测和推荐　　122
7.4 　小结　　126
第8章　回归：改进的推荐　　127
8.1 　改进的推荐　　127
8.1.1 　使用二值推荐矩阵　　127
8.1.2 　审视电影的近邻　　129
8.1.3 　组合多种方法　　130
8.2 　购物篮分析　　132
8.2.1 　获取有用的预测　　133
8.2.2 　分析超市购物篮　　134
8.2.3 　关联规则挖掘　　136
8.2.4 　更多购物篮分析的高级话题　　137
8.3 　小结　　138
第9章　分类III：音乐体裁分类　　139
9.1 　路线图概述　　139
9.2 　获取音乐数据　　139
9.3 　观察音乐　　140
9.4 　用FFT构建第一个分类器　　143
9.4.1 　增加实验敏捷性　　143
9.4.2 　训练分类器　　144
9.4.3 　在多分类问题中用混淆矩阵评估正确率　　144
9.4.4 　另一种方式评估分类器效果：受试者工作特征曲线（ROC）　　146
9.5 　用梅尔倒频谱系数（MFCC）提升分类效果　　148
9.6 　小结　　152
第10章　计算机视觉：模式识别　　154
10.1 　图像处理简介　　154
10.2 　读取和显示图像　　155
10.2.1 　图像处理基础　　156
10.2.2 　加入椒盐噪声　　161
10.2.3 　模式识别　　163
10.2.4 　计算图像特征　　163
10.2.5 　设计你自己的特征　　164
10.3 　在更难的数据集上分类　　166
10.4 　局部特征表示　　167
10.5 　小结　　170
第11章　降维　　171
11.1 　路线图　　171
11.2 　选择特征　　172
11.2.1 　用筛选器检测冗余特征　　172
11.2.2 　用封装器让模型选择特征　　178
11.3 　其他特征选择方法　　180
11.4 　特征抽取　　181
11.4.1 　主成分分析（PCA）　　181
11.4.2 　PCA的局限性以及LDA会有什么帮助　　183
11.5 　多维标度法（MDS）　　184
11.6 　小结　　187
第12章　大数据　　188
12.1 　了解大数据　　188
12.2 　用Jug程序包把你的处理流程分解成几个任务　　189
12.2.1 　关于任务　　189
12.2.2 　复用部分结果　　191
12.2.3 　幕后的工作原理　　192
12.2.4 　用Jug分析数据　　192
12.3 　使用亚马逊Web服务（AWS）　　194
12.3.1 　构建你的第一台机器　　195
12.3.2 　用starcluster自动创建集群　　199
12.4 　小结　　202
附录A 　更多机器学习知识　　203
A.1 　在线资源　　203
A.2 　参考书　　203
A.2.1 　问答网站　　203
A.2.2 　博客　　204
A.2.3 　数据资源　　205
A.2.4 　竞争日益加剧　　205
A.3 　还剩下什么　　205
A.4 　小结　　206
索引　　207

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>机器学习系统设计
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python 编程金典
第1章 绪论
第2章 Python编程概述
第3章 控制结构
第4章 函数
第5章 列表、元组和字典
第6章 公共网关接口（CGI）入门
第7章 基于对象的编程
第8章 自定义类
第9章 面向对象编程：继承
第10章 图形用户界面组件（一）
第11章 图形用户界面组件（二）
第12章 异常处理
……
附录A Python开发环境
附录B Python 2.2的基本特点
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python 编程金典
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python编程入门（第3版）
第1章　编程简介　　1
1.1 　Python语言　　2
1.2 　Python适合用于做什么　　3
1.3 　程序员如何工作　　4
1.4 　安装Python　　6
1.4.1 　在Windows系统上安装Python　　6
1.4.2 　在Mac系统上安装Python.7
1.4.3 　在Linux系统上安装Python　　7
第2章　算术、字符串与变量　　9
2.1 　交互式命令shell　　10
2.1.1 　shell提示符　　10
2.1.2 　记录　　10
2.2 　整数算术　　11
2.2.1 　整除　　11
2.2.2 　求值顺序　　12
2.2.3 　长度不受限制　　12
2.3 　浮点数算术　　13
2.3.1 　浮点数字面量　　13
2.3.2 　溢出　　14
2.3.3 　精度有限　　14
2.3.4 　复数　　15
2.4 　其他数学函数　　16
2.4.1 　使用返回值　　16
2.4.2 　导入模块　　16
2.5 　字符串　　17
2.5.1 　标识字符串　　17
2.5.2 　字符串的长度　　18
2.6 　字符串拼接　　19
2.7 　获取帮助　　20
2.7.1 　列出模块中的函数　　20
2.7.2 　打印文档字符串　　21
2.8 　类型转换　　22
2.8.1 　将整数和字符串转换为浮点数　　22
2.8.2 　将整数和浮点数转换为字符串　　22
2.8.3 　将浮点数转换为整数　　23
2.8.4 　将字符串转换为数字　　23
2.9 　变量和值　　24
2.10 　赋值语句　　26
2.11 　变量如何引用值　　28
2.11.1 　赋值时不复制　　28
2.11.2 　数字和字符串是不可变的　　28
2.12 　多重赋值　　29
第3章　编写程序　　31
3.1 　使用IDLE的编辑器　　32
3.1.1 　在IDLE中编写程序　　32
3.1.2 　从命令行运行程序　　33
3.1.3 　从命令行调用Python　　33
3.2 　编译源代码　　35
3.3 　从键盘读取字符串　　36
3.3.1 　跟踪程序　　36
3.3.2 　从键盘读取数字　　38
3.4 　在屏幕上打印字符串　　39
3.5 　源代码注释　　41
3.6 　程序的组织　　42
第4章　流程控制　　43
4.1 　布尔逻辑　　44
4.1.1 　逻辑相等　　45
4.1.2 　逻辑与　　45
4.1.3 　逻辑或　　45
4.1.4 　逻辑非　　45
4.1.5 　计算较长的布尔表达式　　46
4.1.6 　计算包含圆括号的布尔表达式　　46
4.1.7 　计算不包含圆括号的布尔表达式　　 47
4.1.8 　短路求值　　48
4.2 　if 语句　　49
4.3 　代码块和缩进　　51
4.3.1 　if/elif 语句　　52
4.3.2 　条件表达式　　53
4.4 　循环　　54
4.4.1 　for 循环　　54
4.4.2 　while 循环　　56
4.5 　比较for 循环和while 循环　　 59
4.5.1 　计算阶乘　　59
4.5.2 　计算用户输入的数字的总和　　61
4.5.3 　计算未知个数字的总和　　62
4.6 　跳出循环和语句块　　64
4.7 　循环中的循环　　66
第5 章　函数　　67
5.1 　调用函数　　68
5.1.1 　不返回值的函数　　69
5.1.2 　给函数名赋值　　69
5.2 　定义函数　　70
5.3 　变量的作用域　　73
5.4 　使用main 函数　　75
5.5 　函数的参数　　76
5.5.1 　按引用传递　　76
5.5.2 　一个重要示例　　77
5.5.3 　默认值　　78
5.5.4 　关键字参数　　79
5.6 　模块　　80
5.6.1 　创建Python 模块　　80
5.6.2 　名称空间　　82
第6 章　字符串　　83
6.1 　字符串索引　　84
6.1.1 　负数索引　　85
6.1.2 　使用for 循环访问字符　　86
6.2 　字符　　87
6.3 　字符串切片　　89
6.3.1 　获取切片的捷径　　90
6.3.2 　使用负数索引的切片　　91
6.4 　标准字符串函数　　92
6.4.1 　测试函数　　92
6.4.2 　搜索函数　　93
6.4.3 　改变大小写的函数　　94
6.4.4 　设置格式的函数　　94
6.4.5 　剥除函数　　95
6.4.6 　拆分函数　　95
6.4.7 　替换函数　　96
6.4.8 　其他函数　　97
6.5 　正则表达式　　98
6.5.1 　简单的正则表达式　　98
6.5.2 　使用正则表达式匹配字符串　　99
6.5.3 　其他正则表达式　　100
第7 章　数据结构　　101
7.1 　type 命令　　102
7.2 　序列　　103
7.3 　元组　　104
7.3.1 　元组是不可变的　　105
7.3.2 　元组函数　　106
7.4 　列表　　108
7.5 　列表函数　　110
7.6 　列表排序　　113
7.7 　列表解析　　115
7.7.1 　列表解析示例　　116
7.7.2 　使用列表解析进行筛选　　117
7.8 　字典　　118
7.8.1 　对键的限制　　119
7.8.2 　字典函数　　120
7.9 　集合　　122
第8 章　输入和输出　　123
8.1 　设置字符串格式　　124
8.1.1 　字符串插入　　124
8.1.2 　转换说明符　　125
8.2 　格式字符串　　126
8.3 　读写文件　　128
8.3.1 　文件夹　　130
8.3.2 　当前工作目录　　130
8.4 　检查文件和文件夹　　131
8.5 　处理文本文件　　134
8.5.1 　逐行读取文本文件　　134
8.5.2 　 将整个文本文件作为一个字符串进行读取　　135
8.5.3 　写入文本文件　　136
8.5.4 　附加到文本文件末尾　　136
8.5.5 　将字符串插入到文件开头　　137
8.6 　处理二进制文件　　138
8.7 　读取网页　　141
第9 章　异常处理　　143
9.1 　异常　　144
9.2 　捕获异常　　146
9.2.1 　try/except 块　　148
9.2.2 　捕获多种异常　　149
9.2.3 　捕获所有异常　　149
9.3 　清理操作　　150
第10 章　面向对象编程　　153
10.1 　编写类　　154
10.2 　显示对象　　156
10.3 　灵活的初始化　　160
10.4 　设置函数和获取函数　　162
10.4.1 　特性装饰器　　163
10.4.2 　私有变量　　166
10.5 　继承　　168
10.6 　多态　　171
10.6.1 　实现get_move 函数　　172
10.6.2 　玩游戏Undercut　　173
10.7 　更深入地学习　　175
第11 章　案例研究：文本统计　　177
11.1 　问题描述　　178
11.2 　保留想要的字母　　180
11.3 　使用大型数据文件测试代码　　182
11.4 　找出出现次数较多的单词　　184
11.5 　将字符串转换为次数字典　　187
11.6 　组织在一起　　188
11.7 　练习　　190
11.8 　最终的程序　　192
附录A 　深受欢迎的Python 包　　195
附录B 　比较Python 2 和Python 3　　199
索引　　203
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python编程入门（第3版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python 3程序开发指南
第1章　过程型程序设计快速入门　1
1.1　创建并运行python程序　1
1.2　python的关键要素　5
1.2.1　要素#1：数据类型　6
1.2.2　要素#2：对象引用　7
1.2.3　要素#3：组合数据类型　9
1.2.4　元素#4：逻辑操作符　12
1.2.5　要素#5：控制流语句　16
1.2.6　要素#6：算术操作符　20
1.2.7　要素#7：输入/输出　23
1.2.8　要素#8：函数的创建与调用　25
1.3　实例　27
1.3.1　bigdigits.py　28
1.3.2　generate_grid.py　30
1.4　总结　33
1.5　练习　35
第2章　数据类型　38
2.1　标识符与关键字　38
2.2　integral类型　41
2.2.1　整数　41
.2.2.2　布尔型　44
2.3　浮点类型　44
2.3.1　浮点数　45
2.3.2　复数　48
2.3.3　十进制数字　49
2.4　字符串　50
2.4.1　比较字符串　53
2.4.2　字符串分片与步距　54
2.4.3　字符串操作符与方法　56
2.4.4　使用str.format()方法进行字符串格式化　62
2.4.5　字符编码　73
2.5　实例　75
2.5.1　quadratic.py　75
2.5.2　csv2html.py　78
2.6　总结　82
2.7　练习　84
第3章　组合数据类型　86
3.1　序列类型　86
3.1.1　元组　87
3.1.2　命名的元组　89
3.1.3　列表　91
3.1.4　列表内涵　96
3.2　集合类型　98
3.2.1　集合　98
3.2.2　集合内涵　102
3.2.3　固定集合　102
3.3　映射类型　103
3.3.1　字典　103
3.3.2　字典内涵　110
3.3.3　默认字典　111
3.4　组合数据类型的迭代与复制　113
3.4.1　迭代子、迭代操作与函数　113
3.4.2　组合类型的复制　121
3.5　实例　123
3.5.1　generate_usernames.py　123
3.5.2　statistics.py　126
3.6　总结　130
3.7　练习　131
第4章　控制结构与函数　133
4.1　控制结构　133
4.1.1　条件分支　133
4.1.2　循环　135
4.2　异常处理　136
4.2.1　捕获与产生异常　136
4.2.2　自定义异常　141
4.3　自定义函数　144
4.3.1　名称与docstrings　148
4.3.2　参数与参数拆分　149
4.3.3　存取全局范围的变量　152
4.3.4　lambda函数　153
4.3.5　断言　155
4.4　实例：make_html_skeleton.py　156
4.5　总结　162
4.6　练习　162
第5章　模块　165
5.1　模块与包　165
5.1.1　包　169
5.1.2　自定义模块　171
5.2　python标准库概览　181
5.2.1　字符串处理　181
5.2.2　io.stringio类　182
5.2.3　命令行程序设计　183
5.2.4　数学与数字　184
5.2.5　时间与日期　184
5.2.6　实例：calendar、datetime与time模块　185
5.2.7　算法与组合数据类型　185
5.2.8　文件格式、编码与数据持久性　187
5.2.9　文件、目录与进程处理　190
5.2.10　网络与internet程序设计　192
5.2.11　xml　193
5.2.12　其他模块　195
5.3　总结　196
5.4　练习　198
第6章　面向对象程序设计　200
6.1　面向对象方法　200
6.2　自定义类　204
6.2.1　属性与方法　205
6.2.2　继承与多态　209
6.2.3　使用特性进行属性存取控制　211
6.2.4　创建完全整合的数据类型　213
6.3　自定义组合类　225
6.3.1　创建聚集组合数据的类　225
6.3.2　使用聚集创建组合类　231
6.3.3　使用继承创建组合类　237
6.4　总结　244
6.5　练习　245
第7章　文件处理　247
7.1　二进制数据的读写　251
7.1.1　带可选压缩的pickle　252
7.1.2　带可选压缩的原始二进制数据　256
7.2　文本文件的写入与分析　263
7.2.1　写入文本　263
7.2.2　分析文本　265
7.2.3　使用正则表达式分析文本　268
7.3　写入与分析xml文件　270
7.3.1　元素树　270
7.3.2　dom　274
7.3.3　手动写入xml　277
7.3.4　使用sax分析xml　278
7.4　随机存取二进制文件　281
7.4.1　通用的binaryrecordfile类　281
7.4.2　实例：bikestock模块的类　289
7.5　总结　292
7.6　练习　293
第8章　高级程序设计技术　295
8.1　过程型程序设计进阶　296
8.1.1　使用字典进行分支　296
8.1.2　生成器表达式与函数　297
8.1.3　动态代码执行与动态导入　300
8.1.4　局部函数与递归函数　306
8.1.5　函数与方法修饰器　311
8.1.6　函数注释　314
8.2　面向对象程序设计进阶　317
8.2.1　控制属性存取　317
8.2.2　函子　320
8.2.3　上下文管理器　322
8.2.4　描述符　325
8.2.5　类修饰器　330
8.2.6　抽象基类　333
8.2.7　多继承　340
8.2.8　元类　342
8.3　函数型程序设计　346
8.3.1　偏函数　348
8.3.2　协程　349
8.4　实例：valid.py　356
8.5　总结　359
8.6　练习　360
第9章　调试、测试与profiling　361
9.1　调试　361
9.1.1　处理语法错误　362
9.1.2　处理运行时错误　363
9.1.3　科学的调试　367
9.2　单元测试　371
9.3　profiling　377
9.4　小结　382
第10章　进程与线程　383
10.1　使用多进程模块　384
10.2　将工作分布到多个线程　388
10.2.1　实例：线程化的单词寻找程序　389
10.2.2　实例：一个线程化的重复文件发现程序　392
10.3　总结　396
10.4　练习　397
第11章　网络　399
11.1　创建tcp客户端　400
11.2　创建tcp服务器　406
11.3　总结　412
11.4　练习　412
第12章　数据库程序设计　414
12.1　dbm数据库　414
12.2　sql数据库　418
12.3　总结　425
12.4　练习　425
第13章　正则表达式　427
13.1　python的正则表达式语言　428
13.1.1　字符与字符类　428
13.1.2　量词　429
13.1.3　组与捕获　431
13.1.4　断言与标记　433
13.2　正则表达式模块　436
13.3　总结　444
13.4　练习　445
第14章　分析简介　446
14.1　bnf语法与分析的术语　447
14.2　手动编写分析器　451
14.2.1　简单的键-值数据分析　451
14.2.2　播放列表数据分析　454
14.2.3　blocks域特定语言的分析　456
14.3　使用pyparsing进行更python化的分析　464
14.3.1　pyparsing快速介绍　465
14.3.2　简单的键-值数据分析　468
14.3.3　播放列表数据分析　470
14.3.4　分析块域特定语言　471
14.3.5　分析一阶逻辑　476
14.4　使用ply进行lex/yacc风格的分析　481
14.4.1　简单的键-值数据分析　483
14.4.2　播放列表数据分析　485
14.4.3　分析块域特定语言　487
14.4.4　分析一阶逻辑　489
14.5　小结　493
14.6　练习　494
第15章　gui程序设计介绍　496
15.1　对话框风格的程序　499
15.2　主窗口风格的程序　504
15.2.1　创建一个主窗口　504
15.2.2　创建自定义对话框　514
15.3　总结　517
15.4　练习　518
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python 3程序开发指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python自然语言处理
《python自然语言处理》
第1章 语言处理与python 1
1.1 语言计算：文本和词汇 1
1.2 近观python：将文本当做词链表 10
1.3 计算语言：简单的统计 17
1.4 回到python:决策与控制 24
1.5 自动理解自然语言 29
1.6 小结 35
1.7 深入阅读 36
1.8 练习 37
第2章 获得文本语料和词汇资源 41
2.1 获取文本语料库 41
2.2 条件频率分布 55
2.3 更多关于python：代码重用 60
2.4 词典资源 63
2.5 wordnet 72
2.6 小结 78
2.7 深入阅读 79
2.8 练习 80
第3章 处理原始文本 84
3.1 从网络和硬盘访问文本 84
3.2 字符串：最底层的文本处理 93
3.3 使用unicode进行文字处理 100
3.4 使用正则表达式检测词组搭配 105
3.5 正则表达式的有益应用 109
3.6 规范化文本 115
3.7 用正则表达式为文本分词 118
3.8 分割 121
3.9 格式化：从链表到字符串 126
3.10 小结 132
3.11 深入阅读 133
3.12 练习 134
第4章 编写结构化程序 142
4.1 回到基础 142
4.2 序列 147
4.3 风格的问题 152
4.4 函数：结构化编程的基础 156
4.5 更多关于函数 164
4.6 程序开发 169
4.7 算法设计 175
4.8 python库的样例 183
4.9 小结 188
4.10 深入阅读 189
4.11 练习 189
第5章 分类和标注词汇 195
5.1 使用词性标注器 195
5.2 标注语料库 197
5.3 使用python字典映射词及其属性 206
5.4 自动标注 216
5.5 n-gram标注 221
5.6 基于转换的标注 228
5.7 如何确定一个词的分类 230
5.8 小结 233
5.9 深入阅读 234
5.10 练习 235
第6章 学习分类文本 241
6.1 监督式分类 241
6.2 监督式分类的举例 254
6.3 评估 258
6.4 决策树 263
6.5 朴素贝叶斯分类器 266
6.6 最大熵分类器 271
6.7 为语言模式建模 275
6.8 小结 276
6.9 深入阅读 277
6.10 练习 278
第7章 从文本提取信息 281
7.1 信息提取 281
7.2 分块 284
7.3 开发和评估分块器 291
7.4 语言结构中的递归 299
7.5 命名实体识别 302
7.6 关系抽取 306
7.7 小结 307
7.8 深入阅读 308
7.9 练习 308
第8章 分析句子结构 312
8.1 一些语法困境 312
8.2 文法的用途 316
8.3 上下文无关文法 319
8.4 上下文无关文法分析 323
8.5 依存关系和依存文法 332
8.6 文法开发 336
8.7 小结 343
8.8 深入阅读 344
8.9 练习 344
第9章 建立基于特征的文法 349
9.1 文法特征 349
9.2 处理特征结构 359
9.3 扩展基于特征的文法 367
9.4 小结 379
9.5 深入阅读 380
9.6 练习 381
第10章 分析语句的含义 384
10.1 自然语言理解 384
10.2 命题逻辑 391
10.3 一阶逻辑 395
10.4 英语语句的语义 409
10.5 段落语义层 422
10.6 小结 428
10.7 深入阅读 429
10.8 练习 430
第11章 语言数据管理 434
11.1 语料库结构：案例研究 434
11.2 语料库生命周期 439
11.3 数据采集 443
11.4 使用xml 452
11.5 使用toolbox数据 459
11.6 使用olac元数据描述语言资源 463
11.7 小结 466
11.8 深入阅读 466
11.9 练习 467
后记 470
参考文献 476
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python自然语言处理
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据分析
第1章 Python程序库入门 1
1.1 本书用到的软件 2
1.1.1 软件的安装和设置 2
1.1.2 Windows平台 2
1.1.3 Linux平台 3
1.1.4 Mac OS X平台 4
1.2 从源代码安装NumPy、SciPy、matplotlib和IPython 6
1.3 用setuptools安装 7
1.4 NumPy数组 7
1.5 一个简单的应用 8
1.6 将IPython用作shell 11
1.7 学习手册页 13
1.8 IPython notebook 14
1.9 从何处寻求帮助和参考资料 14
1.10 小结 15
第2章 NumPy数组 16
2.1 NumPy数组对象 16
2.2 创建多维数组 18
2.3 选择NumPy数组元素 18
2.4 NumPy的数值类型 19
2.4.1 数据类型对象 21
2.4.2 字符码 21
2.4.3 Dtype构造函数 22
2.4.4 dtype属性 23
2.5 一维数组的切片与索引 23
2.6 处理数组形状 24
2.6.1 堆叠数组 27
2.6.2 拆分NumPy数组 30
2.6.3 NumPy数组的属性 33
2.6.4 数组的转换 39
2.7 创建数组的视图和拷贝 40
2.8 花式索引 41
2.9 基于位置列表的索引方法 43
2.10 用布尔型变量索引NumPy数组 44
2.11 NumPy数组的广播 46
2.12 小结 49
第3章 统计学与线性代数 50
3.1 Numpy和Scipy模块 50
3.2 用NumPy进行简单的描述性统计计算 55
3.3 用NumPy进行线性代数运算 57
3.3.1 用NumPy求矩阵的逆 57
3.3.2 用NumPy解线性方程组 59
3.4 用NumPy计算特征值和特征向量 61
3.5 NumPy随机数 63
3.5.1 用二项式分布进行博弈 63
3.5.2 正态分布采样 66
3.5.3 用SciPy进行正态检验 67
3.6 创建掩码式NumPy数组 70
3.7 小结 75
第4章 pandas入门 76
4.1 pandas的安装与概览 77
4.2 pandas数据结构之DataFrame 78
4.3 pandas数据结构之Series 81
4.4 利用pandas查询数据 85
4.5 利用pandas的DataFrame进行统计计算 89
4.6 利用pandas的DataFrame实现数据聚合 91
4.7 DataFrame的串联与附加操作 95
4.8 连接DataFrames 96
4.9 处理缺失数据问题 99
4.10 处理日期数据 102
4.11 数据透视表 106
4.12 访问远程数据 107
4.13 小结 109
第5章 数据的检索、加工与存储 110
5.1 利用NumPy和pandas对CSV文件进行写操作 110
5.2 NumPy.npy与pandas DataFrame 112
5.3 使用PyTables存储数据 115
5.4 Pandas DataFrame与HDF5仓库之间的读写操作 118
5.5 使用pandas读写Excel文件 120
5.6 使用REST Web服务和JSON 123
5.7 使用pandas读写JSON 124
5.8 解析RSS和Atom订阅 126
5.9 使用Beautiful Soup解析HTML 127
5.10 小结 134
第6章 数据可视化 136
6.1 matplotlib的子库 137
6.2 matplotlib绘图入门 137
6.3 对数图 139
6.4 散点图 141
6.5 图例和注解 143
6.6 三维图 145
6.7 pandas绘图 148
6.8 时滞图 150
6.9 自相关图 151
6.10 Plot.ly 153
6.11 小结 155
第7章 信号处理与时间序列 156
7.1 statsmodels子库 157
7.2 移动平均值 157
7.3 窗口函数 159
7.4 协整的定义 161
7.5 自相关 164
7.6 自回归模型 166
7.7 ARMA模型 170
7.8 生成周期信号 172
7.9 傅里叶分析 174
7.10 谱分析 177
7.11 滤波 177
7.12 小结 179
第8章 应用数据库 180
8.1 基于sqlite3的轻量级访问 181
8.2 通过pandas访问数据库 183
8.3 SQLAlchemy 185
8.3.1 SQLAlchemy的安装和配置 186
8.3.2 通过SQLAlchemy填充数据库 188
8.3.3 通过SQLAlchemy查询数据库 189
8.4 Pony ORM 191
8.5 Dataset：懒人数据库 192
8.6 PyMongo与MongoDB 195
8.7 利用Redis存储数据 196
8.8 Apache Cassandra 197
8.9 小结 201
第9章 分析文本数据和社交媒体 203
9.1 安装NLTK 203
9.2 滤除停用字、姓名和数字 206
9.3 词袋模型 208
9.4 词频分析 209
9.5 朴素贝叶斯分类 211
9.6 情感分析 214
9.7 创建词云 217
9.8 社交网络分析 222
9.9 小结 224
第10章 预测性分析与机器学习 225
10.1 scikit-learn概貌 226
10.2 预处理 228
10.3 基于逻辑回归的分类 230
10.4 基于支持向量机的分类 232
10.5 基于ElasticNetCV的回归分析 235
10.6 支持向量回归 237
10.7 基于相似性传播算法的聚类分析 240
10.8 均值漂移算法 242
10.9 遗传算法 244
10.10 神经网络 249
10.11 决策树 251
10.12 小结 253
第11章 Python生态系统的外部环境和云计算 255
11.1 与MATLAB/Octave交换信息 256
11.2 Installing rpy2安装rpy2 257
11.3 连接R 257
11.4 为Java传递NumPy数组 260
11.5 集成SWIG和NumPy 261
11.6 集成Boost和Python 264
11.7 通过f2py使用Fortran代码 266
11.8 配置谷歌应用引擎 267
11.9 在PythonAnywhere上运行程序 269
11.10 使用Wakari 270
11.11 小结 271
第12章 性能优化、性能分析与并发性 272
12.1 代码的性能分析 272
12.2 安装Cython 277
12.3 调用C代码 281
12.4 利用multiprocessing创建进程池 283
12.5 通过Joblib提高for循环的并发性 286
12.6 比较Bottleneck函数与NumPy函数 287
12.7 通过Jug实现MapReduce 289
12.8 安装MPI for Python 292
12.9 IPython Parallel 292
12.10 小结 296
附录A 重要概念 298
附录B 常用函数 303
附录C 在线资源 309
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据分析
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>软件架构
译者序
关于作者
关于评审人
前言
第1章　软件架构原理 1
1.1　软件架构定义 2
1.1.1　软件架构与设计 2
1.1.2　软件架构相关的几个方面 3
1.2　软件架构的特征 3
1.2.1　用架构来定义一种结构 3
1.2.2　由架构来挑选一组核心元素 4
1.2.3　由架构来捕获早期的设计决策 4
1.2.4　由架构来管理利益相关者的需求 5
1.2.5　架构影响着组织结构 5
1.2.6　架构受到环境的影响 6
1.2.7　架构是对系统的文档化 6
1.2.8　架构通常会遵循某个模式 7
1.3　软件架构的重要性 7
1.4　系统架构与企业架构 8
1.5　架构的质量属性 10
1.5.1　可修改性 11
1.5.2　可测试性 13
1.5.3　可扩展性 14
1.5.4　性能 15
1.5.5　可用性 16
1.5.6　安全性 17
1.5.7　可部署性 18
1.6　本章小结 19
第2章　编写可修改可读的代码 20
2.1　什么是可修改性 20
2.2　与可修改性相关的几个方面 20
2.3　理解可读性 21
2.3.1　Python和可读性 21
2.3.2　可读性–反模式 22
2.4　增强可读性的各种技术 24
2.4.1　文档化代码 24
2.4.2　遵守编码和风格规范 30
2.4.3　审查和重构代码 31
2.4.4　注释代码 31
2.5　可修改性的基础——内聚和耦合 32
2.5.1　测量内聚性和耦合性 33
2.5.2　字符串和文本处理 35
2.6　探索提高可修改性的策略 37
2.6.1　提供显式接口 37
2.6.2　减少双向依赖 37
2.6.3　抽象出公共服务 38
2.6.4　使用继承技术 38
2.6.5　使用延迟绑定技术 42
2.7　度量——静态分析工具 43
2.7.1　什么是代码坏味道 43
2.7.2　圈复杂度——McCabe度量 44
2.7.3　度量结果测试 45
2.7.4　运行静态检查器 47
2.8　重构代码 53
2.8.1　降低复杂度 53
2.8.2　改善代码坏味道 55
2.8.3　改善风格上和编码上的问题 57
2.9　本章小结 57
第3章　可测试性——编写可测试的代码 58
3.1　理解可测试性 58
3.1.1　软件可测试性及相关属性 58
3.1.2　架构级的方方面面 59
3.1.3　策略 60
3.2　白盒测试原理 65
3.2.1　单元测试 65
3.2.2　操作中的单元测试 66
3.2.3　单元测试模块nose2 69
3.2.4　用py.test进行测试 70
3.2.5　代码覆盖 72
3.2.6　仿制一些东西 74
3.2.7　文档中的内联测试——doctest 78
3.2.8　集成测试 81
3.2.9　测试自动化 83
3.3　测试驱动开发 84
3.4　有回文的TDD 85
3.5　本章小结 90
第4章　好的性能就是回报 92
4.1　什么是性能 93
4.2　软件性能工程 93
4.3　性能测试和度量工具 94
4.4　性能复杂度 95
4.5　度量性能 96
4.5.1　使用上下文管理器度量时间 97
4.5.2　使用timeit模块来计时代码 99
4.5.3　使用timeit度量代码的性能 100
4.5.4　揭示时间复杂度——各种图 102
4.5.5　使用timeit度量CPU时间 106
4.6　剖析 107
4.6.1　确定性剖析 107
4.6.2　使用cProfile和profile进行剖析 108
4.6.3　收集和报告统计数据 111
4.6.4　第三方剖析器 113
4.7　其他工具 119
4.7.1　objgraph 120
4.7.2　pympler 121
4.8　程序设计性能——数据结构 123
4.8.1　可变容器——链表、字典和集合 123
4.8.2　不可变容器——元组 124
4.8.3　高性能容器——集合模块 125
4.8.4　概率数据结构——布隆过滤器 131
4.9　本章小结 134
第5章　开发可扩展的应用 136
5.1　可扩展性和性能 137
5.2　并发性 139
5.2.1　并发性与并行性 140
5.2.2　Python中的并发性——多线程机制 141
5.3　缩略图产生器 141
5.3.1　缩略图产生器——生产者/消费者架构 143
5.3.2　缩略图产生器——使用锁的资源约束 147
5.3.3　缩略图产生器——使用信号量的资源约束 150
5.3.4　资源约束——信号量和锁比较 153
5.3.5　缩略图产生器——使用条件的URL速率控制器 153
5.4　多线程机制——Python和GIL 160
5.4.1　Python中的并发性——多进程机制 160
5.4.2　质数检查器 161
5.4.3　排序磁盘文件 163
5.5　多线程与多进程比较 168
5.6　先入为主的与合作的多任务处理 170
5.7　Python中的asyncio模块 173
5.8　等待future对象——async和await 175
5.9　concurrent.future——高级并发处理 178
5.9.1　磁盘缩略图产生器 179
5.9.2　并发选项——如何选择？ 181
5.10　并行处理库 182
5.10.1　joblib 182
5.10.2　PyMP 183
5.10.3　fractals —— Mandelbrot集 184
5.11　Web扩展 189
5.11.1　扩展工作流——消息队列和任务队列 189
5.11.2　Celery —— 一种分布式任务队列 190
5.11.3　在Web上使用Python服务——WSGI 194
5.12　可扩展架构 197
5.12.1　垂直可扩展架构 197
5.12.2　水平扩展架构 198
5.13　本章小结 201
第6章　安全性——编写安全代码 202
6.1　信息安全架构 202
6.2　安全编码 203
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>软件架构
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python Web开发：测试驱动方法
前言　　xv
准备工作和应具备的知识　　xxi
致谢　　xxvii
第一部分　TDD 和Django 基础
第1章　使用功能测试协助安装Django　　3
1.1　遵从测试山羊的教诲，没有测试什么也别做　　3
1.2　让Django运行起来　　6
1.3　创建Git仓库　　7
第2章　使用unittest模块扩展功能测试　　11
2.1　使用功能测试驱动开发一个最简可用的应用　　11
2.2　Python标准库中的unittest模块　　14
2.3　隐式等待　　16
2.4　提交　　16
第3章　使用单元测试测试简单的首页　　18
3.1　第一个Django应用，第一个单元测试　　19
3.2　单元测试及其与功能测试的区别　　19
3.3　Django中的单元测试　　20
3.4　Django中的MVC、URL 和视图函数　　21
3.5　终于可以编写一些应用代码了　　22
3.6　urls.py　　24
3.7　为视图编写单元测试　　27
第4章　编写这些测试有什么用　　31
4.1　编程就像从井里打水　　31
4.2　使用Selenium测试用户交互　　33
4.3　遵守“不测试常量”规则，使用模板解决这个问题　　35
4.4　关于重构　　39
4.5　接着修改首页　　40
4.6　总结：TDD流程　　42
第5章　保存用户输入　　45
5.1　编写表单，发送POST请求　　45
5.2　在服务器中处理POST请求　　48
5.3　把Python变量传入模板中渲染　　49
5.4　事不过三，三则重构　　53
5.5　Django ORM和第一个模型　　54
5.5.1　第一个数据库迁移　　56
5.5.2　测试向前走得挺远　　57
5.5.3　添加新字段就要创建新迁移　　57
5.6　把POST请求中的数据存入数据库　　58
5.7　处理完POST请求后重定向　　61
5.8　在模板中渲染待办事项　　63
5.9　使用迁移创建生产数据库　　65
第6章　完成最简可用的网站　　70
6.1　确保功能测试之间相互隔离　　70
6.2　必要时做少量的设计　　74
6.2.1　YAGNI　　74
6.2.2　REST　　75
6.3　使用TDD 实现新设计　　76
6.4　逐步迭代，实现新设计　　78
6.5　使用Django测试客户端一起测试视图、模板和URL　　80
6.5.1　一个新测试类　　80
6.5.2　一个新URL　　81
6.5.3　一个新视图函数　　81
6.5.4　一个新模板，用于查看清单　　82
6.6　用于添加待办事项的URL和视图　　85
6.6.1　用来测试新建清单的测试类　　85
6.6.2　用于新建清单的URL和视图　　86
6.6.3　删除当前多余的代码和测试　　88
6.6.4　让表单指向刚添加的新URL　　88
6.7　调整模型　　89
6.7.1　通过外键实现的关联　　91
6.7.2　根据新模型定义调整其他代码　　92
6.8　每个列表都应该有自己的URL　　94
6.8.1　捕获URL中的参数　　95
6.8.2　按照新设计调整new_list视图　　96
6.9　还需要一个视图，把待办事项加入现有清单　　97
6.9.1　小心霸道的正则表达式　　98
6.9.2　最后一个新URL　　98
6.9.3　最后一个新视图　　99
6.9.4　如何在表单中使用那个URL　　100
6.10　使用URL 引入做最后一次重构　　102
第二部分　Web开发要素
第7章　美化网站：布局、样式及其测试方法　　106
7.1　如何在功能测试中测试布局和样式　　106
7.2　使用CSS框架美化网站　　109
7.3　Django模板继承　　111
7.4　集成Bootstrap　　112
7.5　Django中的静态文件　　114
7.6　使用Bootstrap中的组件改进网站外观　　116
7.6.1　超大文本块　　116
7.6.2　大型输入框　　116
7.6.3　样式化表格　　117
7.7　使用自己编写的CSS　　117
7.8　补遗：collectstatic命令和其他静态目录　　118
7.9　没谈到的话题　　121
第8章　使用过渡网站测试部署　　122
8.1　TDD以及部署的危险区域　　123
8.2　一如既往，先写测试　　124
8.3　注册域名　　126
8.4　手动配置托管网站的服务器　　126
8.4.1　选择在哪里托管网站　　127
8.4.2　搭建服务器　　127
8.4.3　用户账户、SSH和权限　　128
8.4.4　安装Nginx　　128
8.4.5　解析过渡环境和线上环境所用的域名　　129
8.4.6　使用功能测试确认域名可用而且Nginx正在运行　　130
8.5　手动部署代码　　130
8.5.1　调整数据库的位置　　131
8.5.2　创建虚拟环境　　133
8.5.3　简单配置Nginx　　135
8.5.4　使用迁移创建数据库　　137
8.6　为部署到生产环境做好准备　　138
8.6.1　换用Gunicorn　　138
8.6.2　让Nginx伺服静态文件　　139
8.6.3　换用Unix套接字　　140
8.6.4　把DEBUG设为False，设置ALLOWED_HOSTS　　141
8.6.5　使用Upstart确保引导时启动Gunicorn　　141
8.6.6　保存改动：把Gunicorn 添加到requirements.txt　　142
8.7　自动化　　143
第9章　使用Fabric自动部署　　147
9.1　分析一个Fabric部署脚本　　148
9.2　试用部署脚本　　151
9.2.1　部署到线上服务器　　153
9.2.2　使用sed配置Nginx 和Gunicorn　　155
9.3　使用Git标签标注发布状态　　155
9.4　延伸阅读　　156
第10章　输入验证和测试的组织方式　　158
10.1　针对验证的功能测试：避免提交空待办事项　　158
10.1.1　跳过测试　　159
10.1.2　把功能测试分拆到多个文件中　　160
10.1.3　运行单个测试文件　　162
10.1.4　填充功能测试　　163
10.2　使用模型层验证　　164
10.2.1　重构单元测试，分拆成多个文件　　164
10.2.2　模型验证的单元测试和self.assertRaises上下文管理器　　165
10.2.3　Django怪异的表现：保存时不验证数据　　166
10.3　在视图中显示模型验证错误　　167
10.4　Django模式：在渲染表单的视图中处理POST 请求　　171
10.4.1　重构：把new_item实现的功能移到view_list 中　　172
10.4.2　在view_list 视图中执行模型验证　　174
10.5　重构：去除硬编码的URL　　176
10.5.1　模板标签{% url %}　　176
10.5.2　重定向时使用get_absolute_url　　177
第11章　简单的表单　　181
11.1　把验证逻辑移到表单中　　181
11.1.1　使用单元测试探索表单API　　182
11.1.2　换用Django中的ModelForm类　　183
11.1.3　测试和定制表单验证　　184
11.2　在视图中使用这个表单　　186
11.2.1　在处理GET请求的视图中使用这个表单　　187
11.2.2　大量查找和替换　　189
11.3　在处理POST请求的视图中使用这个表单　　191
11.3.1　修改new_list视图的单元测试　　191
11.3.2　在视图中使用这个表单　　192
11.3.3　使用这个表单在模板中显示错误消息　　193
11.4　在其他视图中使用这个表单　　194
11.5　使用表单自带的save方法　　196
第12章　高级表单　　199
12.1　针对重复待办事项的功能测试　　199
12.1.1　在模型层禁止重复　　200
12.1.2　题外话：查询集合排序和字符串表示形式　　202
12.1.3　重写旧模型测试　　204
12.1.4　保存时确实会显示完整性错误　　205
12.2　在视图层试验待办事项重复验证　　206
12.3　处理唯一性验证的复杂表单　　207
12.4　在清单视图中使用ExistingListItemForm　　209
第13章　试探JavaScript　　213
13.1　从功能测试开始　　213
13.2　安装一个基本的JavaScript 测试运行程序　　214
13.3　使用jQuery 和<div>固件元素　　217
13.4　为想要实现的功能编写JavaScript单元测试　　219
13.5　JavaScript测试在TDD循环中的位置　　221
13.6　经验做法：onload样板代码和命名空间　　222
13.7　一些缺憾　　223
第14章　部署新代码　　224
14.1　部署到过渡服务器　　224
14.2　部署到线上服务器　　225
14.3　如果看到数据库错误该怎么办　　225
14.4　总结：为这次新发布打上Git 标签　　225
第三部分　高级话题
第15章　用户认证、集成第三方插件以及JavaScript模拟技术的使用　　228
15.1　Mozilla Persona（BrowserID）　　229
15.2　探索性编程（又名“探究”）　　229
15.2.1　为此次探究新建一个分支　　230
15.2.2　前端和JavaScript代码　　230
15.2.3　Browser-ID协议　　231
15.2.4　服务器端：自定义认证机制　　232
15.3　去掉探究代码　　237
15.3.1　常用Selenium技术：显式等待　　240
15.3.2　删除探究代码　　241
15.4　涉及外部组件的JavaScript单元测试：首次使用模拟技术　　242
15.4.1　整理：全站共用的静态文件夹　　242
15.4.2　什么是模拟技术，为什么要模拟，模拟什么　　244
15.4.3　命名空间　　244
15.4.4　在initialize函数的单元测试中使用一个简单的驭件　　245
15.4.5　高级模拟技术　　250
15.4.6　检查参数的调用　　253
15.4.7　QUnit 中的setup和teardown函数，以及Ajax请求测试　　255
15.4.8　深层嵌套回调函数和测试异步代码　　259
第16章　服务器端认证，在Python中使用模拟技术　　262
16.1　探究登录视图　　262
16.2　在Python代码中使用模拟技术　　263
16.2.1　通过模拟authenticate函数测试视图　　263
16.2.2　确认视图确实登录了用户　　266
16.3　模拟网络请求，去除自定义认证后台中的探究代码　　270
16.3.1　一个if 语句需要一个测试　　270
16.3.2　在类上使用patch修饰器　　272
16.3.3　进行布尔值比较时要留意驭件　　275
16.3.4　需要时创建用户　　276
16.3.5　get_user方法　　277
16.4　一个最简单的自定义用户模型　　279
16.4.1　稍微有点儿失望　　280
16.4.2　把测试当作文档　　281
16.4.3　用户已经通过认证　　282
16.5　关键时刻：功能测试能通过吗　　283
16.6　完善功能测试，测试退出功能　　284
第17章　测试固件、日志和服务器端调试　　287
17.1　事先创建好会话，跳过登录过程　　287
17.2　实践是检验真理的唯一标准：在过渡服务器中捕获最后的问题　　290
17.2.1　设置日志　　291
17.2.2　修正Persona引起的这个问题　　293
17.3　在过渡服务器中管理测试数据库　　295
17.3.1　创建会话的Django管理命令　　295
17.3.2　让功能测试在服务器上运行管理命令　　296
17.3.3　使用subprocess模块完成额外的工作　　298
17.4　集成日志相关的代码　　301
17.5　小结　　304
第18章　完成“My Lists”页面：由外而内的TDD　　305
18.1　对立技术：“由内而外”　　305
18.2　为什么选择使用“由外而内”　　306
18.3　“My Lists”页面的功能测试　　306
18.4　外层：表现层和模板　　307
18.5　下移一层到视图函数（控制器）　　308
18.6　使用由外而内技术，再让一个测试通过　　309
18.6.1　快速重组模板的继承层级　　309
18.6.2　使用模板设计API　　310
18.6.3　移到下一层：视图向模板中传入什么　　311
18.7　视图层的下一个需求：新建清单时应该记录属主　　312
18.8　下移到模型层　　313
第19章　测试隔离和“倾听测试的心声”　　318
19.1　重温抉择时刻：视图层依赖于尚未编写的模型代码　　318
19.2　首先尝试使用驭件实现隔离　　319
19.3　倾听测试的心声：丑陋的测试表明需要重构　　322
19.4　以完全隔离的方式重写视图测试　　323
19.4.1　为了新测试的健全性，保留之前的整合测试组件　　323
19.4.2　完全隔离的新测试组件　　324
19.4.3　站在协作者的角度思考问题　　324
19.5　下移到表单层　　328
19.6　下移到模型层　　332
19.7　关键时刻，以及使用模拟技术的风险　　335
19.8　把层与层之间的交互当作“合约”　　336
19.8.1　找出隐形合约　　337
19.8.2　修正由于疏忽导致的问题　　338
19.9　还缺一个测试　　340
19.10　清理：保留哪些整合测试　　340
19.10.1　删除表单层多余的代码　　340
19.10.2　删除以前实现的视图　　341
19.10.3　删除视图层多余的代码　　342
19.11　总结：什么时候编写隔离测试，什么时候编写整合测试　　343
19.11.1　以复杂度为准则　　344
19.11.2　两种测试都要写吗　　344
19.11.3　继续前行　　345
第20章　持续集成　　346
20.1　安装Jenkins　　346
20.1.1　Jenkins的安全配置　　348
20.1.2　添加需要的插件　　348
20.2　设置项目　　350
20.3　第一次构建　　351
20.4　设置虚拟显示器，让功能测试能在无界面的环境中运行　　353
20.5　截图　　355
20.6　一个常见的Selenium问题：条件竞争　　358
20.7　使用PhantomJS运行QUnit JavaScript测试　　361
20.7.1　安装node　　361
20.7.2　在Jenkins中添加构建步骤　　362
20.8　CI 服务器能完成的其他操作　　364
第21章　简单的社会化功能、页面模式，以及练习　　365
21.1　有多个用户以及使用addCleanup 的功能测试　　365
21.2　实现Selenium交互等待模式　　367
21.3　页面模式　　368
21.4　扩展功能测试测试第二个用户和“My Lists”页面　　371
21.5　留给读者的练习　　373
第22章　测试运行速度的快慢和炽热的岩浆　　375
22.1　正题：单元测试除了运行速度超快之外还有其他优势　　376
22.1.1　测试运行得越快，开发速度越快　　376
22.1.2　神赐的心流状态　　377
22.1.3　速度慢的测试经常不想运行，导致代码变坏　　377
22.1.4　现在还行，不过随着时间推移，整合测试会变得越来越慢　　377
22.1.5　别只听我一个人说　　377
22.1.6　单元测试能驱使我们实现好的设计　　377
22.2　纯粹的单元测试有什么问题　　378
22.2.1　隔离的测试难读也难写　　378
22.2.2　隔离测试不会自动测试集成情况　　378
22.2.3　单元测试几乎不能捕获意料之外的问题　　378
22.2.4　使用驭件的测试可能和实现方式联系紧密　　378
22.2.5　这些问题都可以解决　　379
22.3　合题：我们到底想从测试中得到什么　　379
22.3.1　正确性　　379
22.3.2　简洁可维护的代码　　379
22.3.3　高效的工作流程　　379
22.3.4　根据所需的优势评估测试　　379
22.4　架构方案　　380
22.4.1　端口和适配器（或六边形、简洁）架构　　380
22.4.2　函数式核心，命令式外壳　　381
22.5　小结　　381
遵从测试山羊的教诲　　383
附录A　PythonAnywhere　　385
附录B　基于类的Django 视图　　388
附录C　使用Ansible配置服务器　　398
附录D　测试数据库迁移　　402
附录E　接下来做什么　　407
附录F　速查表　　411
附录G　参考书目　　415
作者简介　　416
封面介绍　　416
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python Web开发：测试驱动方法
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python面向对象编程指南
第1部分用特殊方法实现Python风格的类1
第1章__init__（）方法5
1.1隐式的基类——object5
1.2基类中的__init__（）方法6
1.3在基类中实现__init__（）方法7
1.4使用__init__（）方法创建常量清单8
1.5通过工厂函数调用__init__（）9
1.5.1错误的工厂设计和模糊的else语句10
1.5.2使用elif简化设计来获得一致性11
1.5.3使用映射和类来简化设计11
1.6在每个子类中实现__init__（）方法14
1.7简单的组合对象16
1.7.1封装集合类16
1.7.2扩展集合类17
1.7.3可适应更多需求的另一种设计17
1.8复合的组合对象18
1.9不带__init__（）方法的无状态对象19
1.10一些其他的类定义20
1.11多策略的__init__（）方法22
1.11.1更复杂的初始化方式23
1.11.2静态函数的初始化24
1.12更多的__init__（）技术24
1.12.1带有类型验证的初始化26
1.12.2初始化、封装和私有化28
1.13总结29
第2章与Python无缝集成——基本特殊方法30
2.1__repr__（）和__str__（）方法30
2.1.1非集合对象的__str__（）和__repr__（）31
2.1.2集合中的__str__（）和__repr__（）32
2.2__format__（）方法33
2.2.1内嵌格式规范34
2.2.2集合和委托格式规范35
2.3__hash__（）方法35
2.3.1决定哈希的对象36
2.3.2有关不可变对象和继承的默认行为37
2.3.3重载不可变对象39
2.3.4重载可变对象40
2.3.5从可变的Hand类中生成一个不可变的Hand类41
2.4__bool__（）方法43
2.5__bytes__（）方法44
2.6比较运算符方法45
2.6.1设计比较运算47
2.6.2实现同一个类的对象比较48
2.6.3实现不同类的对象比较49
2.6.4硬总和、软总和及多态50
2.6.5不同类比较的例子51
2.7__del__（）方法53
2.7.1引用计数和对象销毁54
2.7.2循环引用和垃圾回收55
2.7.3循环引用和weakref模块56
2.7.4__del__（）和close（）方法58
2.8__new__（）方法和不可变对象58
2.9__new__（）方法和元类型59
2.9.1元类型示例1——有序的属性60
2.9.2元类型示例2——自引用61
2.10总结64
第3章属性访问、特性和修饰符66
3.1属性的基本操作66
3.2创建特性68
3.2.1主动计算特性70
3.2.2setter和deleter特性71
3.3使用特殊方法完成属性访问72
3.3.1使用__slots__创建不可变对象73
3.3.2使用tuple子类创建不可变对象74
3.3.3主动计算的属性75
3.4__getattribute__（）方法77
3.5创建修饰符78
3.5.1使用非数据修饰符80
3.5.2使用数据修饰符81
3.6总结、设计要素和折中方案83
3.6.1特性与属性对比83
3.6.2修饰符的设计84
3.6.3展望84
第4章抽象基类设计的一致性85
4.1抽象基类85
4.2基类和多态87
4.3可调用对象88
4.4容器和集合88
4.5数值类型89
4.6其他的一些抽象基类90
4.6.1迭代器的抽象基类90
4.6.2上下文和上下文管理器91
4.7abc模块92
4.8总结、设计要素和折中方案93
第5章可调用对象和上下文的使用95
5.1使用ABC可调用对象来进行设计95
5.2提高性能97
5.3使用functools完成记忆化99
5.4可调用API和复杂性100
5.5管理上下文和with语句102
5.5.1使用小数上下文103
5.5.2其他上下文104
5.6定义__enter__（）和__exit__（）方法104
5.7上下文管理器工厂105
5.8总结107
5.8.1可调用对象的设计要素和折中方案108
5.8.2上下文管理器的设计要素和折中方案108
5.8.3展望109
第6章创建容器和集合110
6.1集合的抽象基类110
6.2特殊方法示例111
6.3使用标准库的扩展112
6.3.1namedtuple（）函数112
6.3.2deque类114
6.3.3使用ChainMap115
6.3.4OrderedDict集合116
6.3.5defaultdict子类118
6.3.6counter集合119
6.4创建新集合120
6.5定义一种新的序列121
6.5.1一个用于统计的list122
6.5.2主动计算和延迟计算122
6.5.3使用__getitem__（）、__setitem__（）、__delitem__（）和slice操作125
6.5.4实现__getitem__（）、__setitem__（）和__delitem__（）126
6.5.5封装list和委托127
6.5.6用__iter__（）创建迭代器129
6.6创建一种新的映射129
6.7创建一种新的集合131
6.7.1一些设计原则132
6.7.2定义Tree类132
6.7.3定义TreeNode类133
6.7.4演示二叉树集合136
6.8总结136
6.8.1设计要素和折中方案137
6.8.2展望138
第7章创建数值类型139
7.1numbers的抽象基类139
7.1.1决定使用哪种类型141
7.1.2方法解析和运算符映射141
7.2算术运算符的特殊方法142
7.3创建一个数字类144
7.3.1FixedPoint的初始化144
7.3.2定义固定小数点位数的二进制算术运算符146
7.3.3定义FixedPoint一元算术运算符148
7.3.4实现FixedPoint反向运算符148
7.3.5实现FixedPoint比较运算符150
7.4计算一个数字的哈希值152
7.5实现其他的特殊方法153
7.6原地运算符的优化154
7.7总结155
7.7.1设计要素和折中方案155
7.7.2展望155
……
第8章装饰器和mixin——横切方面156
第2部分持久化和序列化175
第9章序列化和保存——JSON、YAML、Pickle、CSV和XML178
第10章用Shelve保存和获取对象214
第11章用SQLite保存和获取对象235
第12章传输和共享对象263
第13章配置文件和持久化
第3部分测试、调试、部署和维护
第14章Logging和Warning模块
第15章可测试性的设计
第16章使用命令行
第17章模块和包的设计
第18章质量和文档
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python面向对象编程指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>树莓派Python编程指南
前言
致谢
第1章　起航（启动和运行） 1
1.1　组装好你的树莓派 1
1.2　可能遇到的问题 2
1.3　树莓派快速指南 3
1.3.1　使用LXDE（轻量级X11桌面环境） 3
1.3.2　使用终端 4
1.3.3　通过Raspi-Config改变配置 6
1.3.4　安装软件 6
1.4　Python3 6
1.4.1　Python解释器 7
1.4.2　运行Python程序 7
1.5　小结 8
第2章　Python简介 9
2.1　使用Turtles绘画 9
2.1.1　使用循环 12
2.1.2　条件处理：if、elif和else 14
2.1.3　使用函数和方法组织代码 15
2.2　一个Python游戏：猫和老鼠 16
2.2.1　理解变量 19
2.2.2　定义函数 19
2.2.3　在游戏中循环 19
2.3　小结 20
第3章　Python基础 22
3.1　变量、值和类型 22
3.1.1　值和类型 23
3.1.2　数字排序 24
3.1.3　使用Strings保存文字 25
3.1.4　布尔值：真或假 25
3.1.5　数据类型转换 26
3.1.6　知识测试 26
3.2　在结构体中存储值 27
3.2.1　字典和集合中的非序列元素 30
3.2.2　知识测试 31
3.3　控制程序流程 32
3.3.1　用循环遍历数据 32
3.3.2　深入理解循环嵌套 33
3.3.3　使用if语句控制程序分支 34
3.3.4　捕获异常 35
3.4　使用函数复用代码 36
3.5　组合装配 38
3.6　使用类来构建对象 40
3.7　使用模块获得附加特性 45
3.8　小结 46
3.9　习题答案 47
第4章　图形编程 48
4.1　图形用户界面（GUI）编程 48
4.2　添加控制 50
4.3　创建Web浏览器 52
4.4　添加窗口菜单 60
4.5　小结 62
4.6　习题答案 62
第5章　搭建游戏 65
5.1　构建游戏 66
5.2　初始化PyGame 69
5.3　为角色创建世界 73
5.3.1　检测冲突 74
5.3.2　左右移动 76
5.3.3　达到目标 78
5.3.4　制造挑战 79
5.4　在游戏中加入自己的风格 83
5.5　添加音乐 83
5.6　添加布景 84
5.7　让游戏更上一层楼 87
5.8　逼真的游戏物理 87
5.9　小结 91
第6章　使用OpenGL创建图形 92
6.1　获取模块 93
6.2　创建旋转立方体 93
6.2.1　向量和矩阵 95
6.2.2　组合包装 98
6.2.3　增加光照 101
6.3　让屏幕起舞 107
6.3.1　建立3D模型 109
6.3.2　计算声音强度 110
6.4　继续完善 115
6.5　添加纹理 115
6.6　小结 116
第7章　Python与网络 117
7.1　理解主机、端口和套接字 117
7.1.1　使用IP地址定位计算机 117
7.1.2　搭建会话服务器 118
7.1.3　“推”向世界 121
7.1.4　使用JSON做天气预报 123
7.2　知识测验 125
7.3　走向网站 125
7.3.1　让网站动起来（动态网站） 127
7.3.2　使用模板 128
7.3.3　使用表格回传数据 129
7.4　安全 131
7.5　小结 134
7.6　习题答案 134
第8章　我的世界 137
8.1　畅游我的世界 138
8.1.1　控制我的世界 138
8.1.2　用Python创建我的世界 139
8.1.3　深入探索 142
8.2　制作贪吃蛇游戏 142
8.2.1　移动贪吃蛇 146
8.2.2　增长贪吃蛇 146
8.2.3　添加苹果 146
8.3　深入探索 147
8.4　小结 148
第9章　多媒体 149
9.1　使用PyAudio让计算机发声 149
9.1.1　录音 151
9.1.2　向树莓派讲话 151
9.1.3　向程序提问 152
9.1.4　组合包装 153
9.1.5　深入探索 155
9.2　制作电影 155
9.2.1　使用USB网络摄像头 155
9.2.2　使用OpenCV添加计算机图像特性 158
9.2.3　深入探索 160
9.2.4　使用树莓派摄像头模块 160
9.2.5　创建直播视频 162
9.2.6　深入探索 165
9.3　小结 165
第10章　脚本 166
10.1　从Linux命令行开始 166
10.1.1　使用subprocess模块 168
10.1.2　命令行标签 169
10.1.3　正则表达式 170
10.2　知识测验 173
10.3　脚本中的网络 174
10.4　组合包装 175
10.5　在Python中操作文件 180
10.6　小结 182
第11章　硬件接口 183
11.1　硬件设置选择 183
11.1.1　母转公接头 183
11.1.2　无焊面包板 184
11.1.3　成品板和万能板 185
11.1.4　PCB加工 185
11.2　辅助工具 185
11.2.1　剪线/剥线器 185
11.2.2　万用表 185
11.2.3　电烙铁 185
11.3　本章所需的硬件 186
11.3.1　第一个电路 186
11.3.2　保护树莓派 189
11.3.3　电源限制 190
11.3.4　获得输入 191
11.4　使用I2C、SPI和串口扩展GPIO 192
11.4.1　SPI通信协议 193
11.4.2　I2C通信协议 196
11.4.3　串口通信协议 196
11.5　深入研究 196
11.5.1　Arduino 197
11.5.2　PiFace 197
11.5.3　Gertboard 197
11.5.4　Wireless Inventor’s Kit 198
11.6　尝试一些流行工程 198
11.6.1　机器人 198
11.6.2　家庭自动化 198
11.6.3　防盗报警器 199
11.6.4　数字艺术 199
11.7　小结 199
第12章　测试与调试 200
12.1　通过打印变量调查故障 200
12.2　通过测试发现故障 203
12.2.1　使用单元测试检查代码片段 204
12.2.2　获得更多断言 207
12.2.3　使用测试集进行回归测试 209
12.2.4　测试整个程序包 210
12.2.5　保证软件可用性 210
12.3　究竟需要多少测试 211
12.4　小结 211
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>树莓派Python编程指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python开发实战
第一部分 　使用Python开发
01 　开始使用Python　　2
01.01 　Python环境搭建　　2
01.01.01 　安装apt软件包　　2
01.01.02 　easy_install 与pip　　3
01.01.03 　安装virtualenv　　4
01.01.04 　使用不同版本的Python　　9
01.02 　Mercurial环境搭建　　12
01.02.01 　Mercurial的简介　　12
01.02.02 　Mercurial的安装　　12
01.02.03 　代码库的建立　　13
01.02.04 　文件的操作　　14
01.03 　编辑器与方便的开发工具　　17
01.03.01 　编辑器　　17
01.03.02 　Python开发小贴士　　19
01.04 　本章小结　　22
02 　开发Web应用程序　　23
02.01 　了解Web应用程序　　23
02.01.01 　什么是Web应用程序　　23
02.01.02 　Web应用程序与桌面应用程序的不同　　24
02.01.03 　Web应用程序的机制　　24
02.02 　Web应用程序开发的事前准备　　27
02.02.01 　关于Flask　　27
02.02.02 　Flask的安装　　27
02.03 　Web应用程序的开发流程　　28
02.04 　明确需要开发的目标系统　　28
02.04.01 　留言簿应用程序的需求　　28
02.04.02 　明确必要的功能　　29
02.04.03 　明确页面的表现形式　　29
02.05 　页面设计　　29
02.05.01 　页面设计草图　　30
02.05.02 　设计HTML和CSS　　30
02.06 　后台功能的开发　　35
02.06.01 　保存评论数据　　35
02.06.02 　取出保存过的评论数据　　36
02.06.03 　使用模板引擎显示页面　　37
02.06.04 　准备评论的目标URL地址　　39
02.06.05 　调整模板输出　　40
02.07 　功能验证　　41
02.08 　本章小结　　42
第二部分 　团队开发的周期和流程
03 　准备团队开发环境　　46
03.01 　在公共服务器上建立用户、设置权限　　46
03.01.01 　用户与用户组的建立　　46
03.01.02 　sudoers　　46
03.01.03 　virtualenv　　47
03.02 　问题跟踪系统　　47
03.02.01 　Trac　　48
03.02.02 　安装Trac　　48
03.03 　版本控制系统　　51
03.04 　有利于团队开发的工具　　52
03.04.01 　Skype　　52
03.04.02 　DropBox　　53
03.04.03 　Google Docs　　54
03.05 　本章小结　　54
04 　编写开发文档的准备　　55
04.01 　编写项目开发文档　　55
04.01.01 　在写文档时，我们不想做什么工作　　55
04.01.02 　愿意在什么样的条件下编写文档　　57
04.02 　Sphinx的基础与安装　　58
04.02.01 　Sphinx的安装　　58
04.02.02 　reStructuredText入门　　60
04.02.03 　使用Sphinx编写结构化文档的流程　　61
04.02.04 　Sphinx的扩展　　66
04.03 　引入Sphinx后解决的问题与新的问题　　67
04.03.01 　采用纯文本，可使用一般的编辑器来写文档　　67
04.03.02 　内容与形式分离，不关注文档形式而专注于内容的编写　　68
04.03.03 　不仅仅是PDF，通过一个源可以输出多种格式　　71
04.03.04 　将文档分割成多个文件编辑，进行结构化处理　　72
04.03.05 　通过Mercurial进行简单的版本控制　　73
04.03.06 　将API参考手册和对应程序协同管理　　73
04.03.07 　一般文档可通过Web浏览器共享　　76
04.03.08 　Sphinx引入后仍需探讨的问题　　76
04.04 　文档集合的创建与利用　　77
04.04.01 　什么是文档集合　　78
04.04.02 　项目中必不可少的文档列表　　78
04.04.03 　面向团队领导、经理　　79
04.04.04 　面向设计人员　　80
04.04.05 　面向开发人员　　80
04.04.06 　面向用户　　81
04.05 　本章小结　　81
05 　问题跟踪与评审　　82
05.01 　任务管理与ticket驱动开发　　82
05.01.01 　开始写代码……在这之前还是先创建一个ticket　　82
05.01.02 　创建和ticket编号一致的分支　　83
05.01.03 　让版本发布与分支对应　　84
05.01.04 　分支的合并　　84
05.01.05 　整理ticket信息　　86
05.01.06 　ticket 的分割　　86
05.02 　评审　　87
05.02.01 　为什么需要评审　　87
05.02.02 　作为被评审人：代码评审篇　　87
05.02.03 　作为被评审人：工作评审篇　　88
05.02.04 　作为评审人：代码评审篇　　89
05.02.05 　作为评审人：工作评审篇　　92
05.03 　本章小结　　92
06 　模块的分割设计与单元测试　　93
06.01 　模块分割设计方法　　93
06.01.01 　功能设计　　93
06.01.02 　Web应用程序的构成组件　　94
06.01.03 　组件设计　　96
06.01.04 　模块与包　　97
06.02 　测试　　99
06.02.01 　测试的种类　　99
06.02.02 　编写单元测试　　101
06.02.03 　从单元测试中去除环境依赖　　109
06.02.04 　使用WebTest进行功能测试　　114
06.03 　从测试来改善设计　　118
06.04 　迈向测试执行的自动化　　120
06.04.01 　测试环境的自动生成　　120
06.04.02 　可以反复执行的测试环境　　121
06.05 　本章小结　　121
07 　打包与自动建立环境　　122
07.01 　源代码打包与发布自动化　　123
07.01.01 　打包　　123
07.01.02 　程序包的自动化发布　　127
07.01.03 　向PyPI注册程序包　　128
07.01.04 　向PyPI上传程序包　　128
07.01.05 　书写程序包的使用说明　　129
07.02 　安装与环境关联库的介绍　　131
07.02.01 　Distribute　　132
07.02.02 　pip　　133
07.02.03 　virtualenv　　134
07.03 　应用环境自动构建所必备的功能与工具　　135
07.03.01 　准备独立的Python环境　　135
07.03.02 　Python库的程序包化以及标准安装　　136
07.03.03 　锁定应用环境的程序包版本　　136
07.03.04 　整个环境可以离线安装　　136
07.03.05 　重建环境时可以复用缓存　　137
07.03.06 　使用编译好的二进制模块　　138
07.03.07 　当PyPI宕机或高峰时，有备用服务器　　138
07.04 　自动应用环境构建　　140
07.04.01 　开始　　140
07.04.02 　构建初始环境　　140
07.04.03 　包含源代码的应用环境　　141
07.04.04 　在部署环境中的离线安装　　143
07.04.05 　安装部署需要二进制编译的程序包　　144
07.05 　公司内部共享专用库　　144
07.05.01 　在多个项目间共享代码的方法　　145
07.05.02 　自动建立非公开程序包的应用环境　　149
07.06 　本章小结　　152
08 　使用Mercurial管理源代码　　153
08.01 　Mercurial的代码库管理与配置　　153
08.01.01 　在服务器上设置UNIX用户与用户组　　153
08.01.02 　设置umask值　　154
08.01.03 　创建代码库　　154
08.01.04 　配置hgrc　　155
08.01.05 　使用配置后的代码库　　155
08.01.06 　使用hgweb作为简易的中央代码库　　155
08.02 　灵活使用钩子功能　　156
08.02.01 　钩子功能的设置方法　　157
08.02.02 　使用钩子脚本　　157
08.02.03 　钩子事件　　157
08.02.04 　钩子执行的时机　　159
08.02.05 　编写钩子脚本　　161
08.03 　分支操作　　164
08.04 　分支间的合并　　165
08.04.01 　没有冲突的合并　　165
08.04.02 　用文本编辑器消除合并冲突　　167
08.04.03 　合并的模式与冲突的种类　　169
08.04.04 　使用图形界面合并的方法　　170
08.05 　GUI客户端　　173
08.05.01 　GUI客户端的介绍　　173
08.05.02 　GUI客户端的优点　　176
08.05.03 　GUI客户端的缺点　　179
08.05.04 　hgwebcommit　　180
08.06 　考虑实际运用而产生的BP Mercurial W/F　　182
08.06.01 　概要　　182
08.06.02 　背景　　183
08.06.03 　代码库的构成　　183
08.06.04 　源代码提交　　184
08.06.05 　设计师的提交操作　　186
08.06.06 　分支的合并　　187
08.06.07 　集成分支　　188
08.07 　本章小结　　189
09 　使用Jenkins持续集成　　192
09.01 　什么是持续集成　　192
09.01.01 　关于持续集成　　192
09.01.02 　关于Jenkins　　194
09.02 　Jenkins的安装　　194
09.02.01 　安装Java　　194
09.02.02 　安装Jenkins主体程序　　194
09.02.03 　本章用到的Jenkins插件　　195
09.03 　执行测试代码　　195
09.03.01 　简单测试代码的示例　　195
09.03.02 　注册作业　　196
09.03.03 　作业执行成功与失败　　198
09.04 　测试结果通过报表输出　　199
09.04.01 　安装nose　　199
09.04.02 　调用nosetests命令　　199
09.04.03 　为使用nose修改Jenkins配置　　200
09.05 　展示代码覆盖率报告　　201
09.05.01 　coverage的安装　　201
09.05.02 　coverage命令的概述：分为“统计”和“输出”两步　　201
09.05.03 　通过nose执行coverage　　201
09.05.04 　读取代码覆盖率的报告　　202
09.06 　执行Django测试　　204
09.06.01 　Django模块的安装　　204
09.06.02 　Django的安装　　204
09.06.03 　样本代码　　205
09.06.04 　Jenkins的创建　　208
09.06.05 “构建后处理”部分的配置　　210
09.07 　通过Jenkins构建文档　　212
09.07.01 　Sphinx的安装　　212
09.07.02 　配置Jenkins作业的注册信息　　212
09.07.03 　Sphinx的构建在出现告警时作业失败　　213
09.07.04 　查阅编译成果　　214
09.07.05　　使用Task Scanner Plugin管理TODO信息　　215
09.07.06 　Task Scanner Plugin的配置示例　　216
09.08 　进一步灵活使用Jenkins　　216
09.08.01 　便捷的功能　　216
09.08.02 　进一步的改善　　218
09.09 　本章小结　　219
第三部分 　服务的公开
10 　自动构建和部署环境　　222
10.01 　安装与配置具有依赖关系的程序包　　222
10.01.01 　创建操作用户　　223
10.01.02 　列举必要的程序包　　224
10.01.03 　封闭环境的安装　　226
10.01.04 　应用程序的配置　　228
10.01.05 　环境验证　　231
10.02 　整理部署的操作步骤　　231
10.02.01 　赋予代码库访问权限　　232
10.02.02 　克隆源代码库　　232
10.02.03 　部署方法总结　　232
10.03 　使用Fabric将操作步骤自动化　　233
10.03.01 　什么是Fabric　　233
10.03.02 　安装与环境配置　　233
10.03.03 　编写简单的脚本　　234
10.03.04 　参考步骤说明书进行自动化　　234
10.03.05 　验证执行行为　　238
10.03.06 　添加注释　　238
10.04 　本章小结　　239
11 　改善应用程序的性能　　240
11.01 　Web应用程序的性能　　240
11.01.01 　Web应用遭遇大量请求时会如何　　240
11.01.02 　高负载时的对策　　241
11.02 　留言簿应用程序的性能测试　　242
11.02.01 　什么是应用程序的性能　　242
11.02.02 　ApacheBench的安装　　242
11.02.03 　使用ApacheBench检测性能　　242
11.03 　关于gunicorn　　245
11.03.01 　gunicorn的安装　　245
11.03.02 　使用gunicorn运行应用程序　　245
11.04 　关于nginx　　247
11.04.01 　nginx的安装　　248
11.04.02 　nginx的性能测试　　248
11.05 　使用nginx和gunicorn共同承载应用程序　　250
11.05.01 　gunicorn的配置　　250
11.05.02 　nginx的配置　　251
11.05.03 　测定nginx+gunicorn组合的性能　　251
11.05.04 　性能的比较　　252
11.06 　本章小结　　253
12 　Google App Engine　　254
12.01 　关于App Engine　　254
12.01.01 　什么是App Engine　　254
12.01.02 　App Engine的优点　　255
12.01.03 　App Engine平台的局限性　　255
12.01.04 　使用案例　　256
12.02 　App Engine的主要功能　　256
12.02.01 　数据存储　　256
12.02.02 　自动扩展与负载分散　　257
12.02.03 　在App Engine中的Python运行环境　　259
12.03 　App Engine的开发准备工作与步骤确认　　260
12.03.01 　获取账号并开发程序　　260
12.03.02 　创建SDK　　263
12.03.03 　开发简单的应用程序　　264
12.03.04 　部署　　266
12.04 　在App Engine中开发Flask的应用程序　　267
12.04.01 　使已有的应用程序运行　　267
12.04.02 　部署并运行　　271
12.04.03 　管理终端　　272
12.05 　调整：改善应用程序性能　　274
12.05.01 　根据Appstats进行性能测试　　274
12.05.02 　使用多线程来处理　　276
12.06 　性能调优：减少计费额　　277
12.06.01 　与计费有关的配置　　277
12.06.02 　计费表　　277
12.06.03 　节约实例的数量　　279
12.06.04 　减少数据存储的操作　　280
12.07 　测试　　282
12.07.01 　在测试代码内使用API　　282
12.07.02 　测试的执行　　284
12.07.03 　在真实服务器上测试　　285
12.08 　本章小结　　285
第四部分 　加速开发的技术
13 　测试是不可分割的一部分　　288
13.01 　认清测试现状　　288
13.02 　在开发的各个阶段引入测试工作　　289
13.02.01 　文档的测试（文档评审）　　289
13.02.02 　编写测试的方法（输入与输出）　　292
13.02.03 　测试的执行与测试阶段的轮换（把什么工作做到什么程度）　　295
13.03 　本章小结：对测试不要抱有恐惧　　298
14 　便捷地使用Django　　300
14.01 　什么是Django　　300
14.01.01 　Django的安装　　300
14.01.02 　Django的架构　　300
14.01.03 　Django的文档　　304
14.02 　让数据库的集成更加方便　　304
14.02.01 　什么是数据库的集成　　304
14.02.02 　默认情况下Django能做什么　　304
14.02.03 　对，就是它，使用South就能够做到　　305
14.03 　使用fixture replacement使测试更加方便　　312
14.03.01 　什么是测试配置器（fixture）　　312
14.03.02 　默认测试配置器的不便之处　　314
14.03.03 　使用factory_boy　　315
14.04 　使调试更加方便　　318
14.05 　本章小结　　324
15 　使用方便的Python模块　　325
15.01 　简化日期计算的模块　　325
15.01.01 　日期计算的复杂之处　　325
15.01.02 　引入dateutil　　327
15.02 　简化模型映射的模块　　329
15.02.01 　必须进行模型映射的理由　　329
15.02.02 　映射规则的构造与复用　　330
15.02.03 　导入bpmappers模块　　333
15.02.04 　与Django的联动　　335
15.02.05 　编写JSON API　　336
15.03 　判断字符的编码　　337
15.04 　RSS阅读订阅的解析模块　　339
15.04.01 　导入feedparser模块　　339
15.04.02 　使用feedparser解析RSS阅读订阅信息　　339
15.05 　图像处理模块　　340
15.05.01 　安装PIL模块　　340
15.05.02 　转换图像格式　　341
15.05.03 　调整图像的尺寸　　342
15.05.04 　截取图像的某个部分　　344
15.05.05 　图像的过滤处理　　345
15.06 　数据的加密处理模块　　346
15.06.01 　PyCrypto的安装　　346
15.06.02 　共同密钥的加密与解密　　347
15.06.03 　公开密钥方式的加密与解密　　347
15.07 　调用Twitter的API模块　　351
15.07.01 　导入tweepy模块　　351
15.07.02 　应用程序的登录域和Consumer Key的获取　　351
15.07.03 　获得Access Token　　354
15.07.04 　调用TwitterAPI　　354
15.07.05 　开发使用Twitter认证的应用程序　　356
15.08 　本章小结　　361
附录A 　建立VirtualBox环境　　362
附录B 　建立操作系统环境　　366
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python开发实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>数据科学实战手册
第1章　准备你的数据科学环境　1
简介　1
理解数据科学管道　3
处理流程　3
工作原理　3
在Windows、Mac OS X、Linux上安装R　5
准备工作　5
处理流程　5
工作原理　7
参考资料　7
在R和RStudio中安装扩展包　7
准备工作　8
处理流程　8
工作原理　9
更多内容　10
参考资料　10
在Linux和Mac OS X上安装Python　10
准备工作　11
处理流程　11
工作原理　11
更多内容　11
参考资料　12
在Windows上安装Python　12
处理流程　13
工作原理　13
参考资料　14
在Mac OS X和Linux上安装Python数据分析库　14
准备工作　14
处理流程　14
工作原理　15
更多内容　16
参考资料　16
安装更多Python包　17
准备工作　17
处理流程　17
工作原理　18
更多内容　18
参考资料　18
安装和使用virtualenv　19
准备工作　19
处理流程　19
工作原理　21
更多内容　21
参考资料　22
第2章　汽车数据的可视化分析（R）　23
简介　23
获取汽车燃料效率数据　24
准备工作　24
处理流程　25
工作原理　25
为了你的第一个项目准备好R　26
准备工作　26
处理流程　26
工作原理　26
参考资料　26
将汽车燃料效率数据导入R　27
准备工作　27
处理流程　27
工作原理　28
更多内容　29
参考资料　30
探索和描述燃料效率数据　30
准备工作　30
处理流程　30
工作原理　32
更多内容　33
进一步分析汽车燃料效率数据　34
准备工作　34
处理流程　34
工作原理　43
参考资料　44
研究汽车的产量以及车型　44
准备工作　44
处理流程　44
工作原理　46
更多内容　47
参考资料　47
第3章　模拟美式橄榄球比赛数据（R）　48
简介　48
准备工作　49
获取和清洗美式橄榄球比赛数据　49
准备工作　50
处理流程　50
工作原理　53
参考资料　53
分析和理解美式橄榄球比赛数据　53
准备工作　53
处理流程　53
工作原理　61
更多内容　61
参考资料　62
构建度量攻防能力的指标　62
准备工作　62
处理流程　62
工作原理　64
参考资料　65
模拟单场由程序决定胜负的比赛　65
准备工作　65
处理流程　65
工作原理　68
模拟多场由计算决定胜负的比赛　68
准备工作　68
处理流程　69
工作原理　73
更多内容　74
第4章　建模分析股票市场数据（R）　75
简介　75
准备工作　76
获取股票市场数据　76
处理流程　77
描述数据　78
准备工作　79
工作原理　80
更多内容　81
清洗和研究数据　82
准备工作　82
处理流程　82
工作原理　87
参考资料　87
形成相对估值法　87
准备工作　87
处理流程　88
工作原理　91
分析历史价格筛选股票　92
准备工作　92
处理流程　92
工作原理　98
第5章　就业数据的可视化探索（R）　99
简介　99
分析前的准备　100
准备工作　101
处理流程　101
工作原理　102
参考资料　102
将就业数据导入R　103
准备工作　103
处理流程　103
工作原理　104
更多内容　104
参考资料　105
就业数据探究　105
准备条件　105
处理流程　105
工作原理　107
参考资料　107
获取和合并添加附加信息　107
准备工作　107
处理流程　108
工作原理　109
添加地理信息　110
准备工作　110
处理流程　110
工作原理　113
参考资料　114
获取州和县级水平的薪资和就业信息　114
准备工作　114
处理流程　114
工作原理　116
参考资料　117
可视化薪资的地理分布特性　117
准备工作　118
处理流程　118
工作原理　120
参考资料　121
探究各行业工作的地理分布情况　121
处理流程　122
工作原理　123
更多内容　124
参考资料　124
绘制地理空间的时间序列地图　124
准备工作　124
处理流程　125
工作原理　128
更多内容　128
函数性能测试和比较　128
准备工作　129
处理流程　129
工作原理　131
更多内容　132
参考资料　132
第6章　运用税务数据进行应用导向的数据分析（Python）　133
简介　133
应用导向方法简介　134
准备高收入数据集的分析　135
准备工作　135
处理流程　135
工作原理　136
导入并熟悉世界各国高收入数据集　136
准备工作　137
处理流程　137
工作原理　143
更多内容　144
参考资料　144
分析并可视化美国的高收入数据集　144
准备工作　144
处理流程　145
工作原理　151
进一步分析美国的高收入阶层　152
准备工作　152
处理流程　152
工作原理　156
用Jinja2汇报结果　157
准备工作　157
处理流程　157
工作原理　162
更多内容　162
参考资料　163
第7章　运用汽车数据进行可视化分析（Python）　164
简介　164
IPython入门　165
准备工作　165
处理流程　165
工作原理　167
参考资料　167
熟悉IPython Notebook　167
准备工作　168
处理流程　168
工作原理　170
更多内容　170
参考资料　171
准备分析汽车油耗　171
准备工作　171
处理流程　171
工作原理　173
更多内容　173
参考资料　174
用Python熟悉并描述汽车油耗数据　174
准备工作　174
处理流程　174
工作原理　177
更多内容　177
参考资料　177
用Python分析汽车油耗随时间变化趋势　177
准备工作　177
处理流程　178
工作原理　183
更多内容　184
参考资料　185
用Python调查汽车的制造商和型号　185
准备工作　185
处理流程　185
工作原理　189
参考资料　189
第8章　社交网络分析（Python）　190
简介　190
理解图和网络　191
准备用Python进行社交网络的分析工作　192
准备工作　192
处理流程　193
工作原理　193
更多内容　193
导入网络　194
准备工作　194
处理流程　194
工作原理　196
探索英雄网络的子图　196
准备工作　197
处理流程　197
工作原理　199
更多内容　199
找出强关联　200
准备工作　201
处理流程　201
工作原理　203
更多内容　204
找出关键人物　204
准备工作　205
处理流程　205
工作原理　208
更多内容　209
调查全网的特征　215
准备工作　216
处理流程　216
工作原理　217
社交网络中的聚类和发现社群　217
准备工作　217
处理流程　218
工作原理　221
更多内容　221
可视化图　222
准备工作　222
处理流程　222
工作原理　224
第9章　大规模电影推荐（Python）　225
简介　226
对偏好建模　227
处理流程　227
工作原理　228
理解数据　229
准备工作　229
处理流程　229
工作原理　231
更多内容　231
加载电影评分数据　231
准备工作　231
处理流程　232
工作原理　234
寻找高评分电影　235
准备工作　236
处理流程　236
工作原理　237
更多内容　238
参考资料　238
提升电影评分系统　238
准备工作　238
处理流程　238
工作原理　239
更多内容　240
参考资料　240
计算用户在偏好空间中的距离　240
准备工作　241
处理流程　241
工作原理　243
更多内容　243
参考资料　243
计算用户相关性　244
准备工作　244
处理流程　244
工作原理　245
更多内容　246
为特定用户寻找最好的影评人　246
准备工作　246
处理流程　246
工作原理　247
预测用户评分　249
准备工作　249
处理流程　249
工作原理　250
基于物品的协同过滤　251
准备工作　251
处理流程　252
工作原理　253
建立非负矩阵分解模型　254
处理流程　255
工作原理　255
参考资料　256
将数据集载入内存　256
准备工作　257
处理流程　257
工作原理　258
更多内容　258
导出SVD模型至硬盘　259
处理流程　259
工作原理　260
训练SVD模型　261
处理流程　261
工作原理　262
更多内容　263
测试SVD模型　264
处理流程　264
工作原理　264
更多内容　264
第10章　获取和定位Twitter数据（Python）　266
简介　266
创建Twitter应用　267
准备工作　268
处理流程　268
工作原理　271
参考资料　271
了解Twitter API v1．1　271
准备工作　272
处理流程　272
工作原理　273
更多内容　274
参考资料　275
获取粉丝和朋友信息　275
准备工作　275
处理流程　275
工作原理　277
更多内容　277
参考资料　278
提取Twitter用户档案　278
准备工作　278
处理流程　278
工作原理　279
更多内容　279
参考资料　280
避免Twitter速度限制　280
准备工作　280
处理流程　280
工作原理　281
存储JSON数据至硬盘　281
准备工作　282
处理流程　282
工作原理　282
安装MongoDB　283
准备工作　283
处理流程　283
工作原理　284
更多内容　284
参考资料　285
利用PyMongo将用户信息存入MongoDB　285
准备工作　285
处理流程　285
工作原理　286
探索用户地理信息　287
准备工作　287
处理流程　287
工作原理　289
更多内容　290
参考资料　290
利用Python绘制地理分布图　290
准备工作　290
处理流程　291
工作原理　292
更多内容　293
参考资料　294
第11章　利用NumPy和SciPy优化数值计算（Python）　295
简介　295
了解优化的步骤　297
处理流程　297
工作原理　297
更多内容　298
识别代码中常见性能瓶颈　298
处理流程　299
工作原理　299
通读代码　301
准备工作　302
处理流程　302
工作原理　302
参考资料　304
利用Unix time函数剖析Python代码　305
准备工作　305
处理流程　305
工作原理　306
参考资料　306
利用Python内建函数剖析Python代码　306
准备工作　306
处理流程　306
工作原理　307
参考资料　308
利用IPython %timeit函数剖析Python代码　308
处理流程　308
工作原理　309
利用line_profiler剖析Python代码　309
准备工作　310
处理流程　310
工作原理　311
更多内容　312
参考资料　312
摘取低处的（经过优化的）果实　312
准备工作　312
处理流程　312
工作原理　314
测试NumPy带来的性能提升　315
准备工作　315
处理流程　315
工作原理　316
更多内容　317
参考资料　317
用NumPy重写函数　317
准备工作　317
处理流程　318
工作原理　320
用NumPy优化最内层循环　322
准备工作　322
处理流程　322
工作原理　324
更多内容　325
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>数据科学实战手册
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Flask Web开发
前言　　xi
第一部分 Flask简介
第1章 安装　　3
1.1 创建应用目录　　4
1.2 虚拟环境　　4
1.3 在Python　　3中创建虚拟环境　　4
1.4 在Python　　2中创建虚拟环境　　5
1.5 使用虚拟环境　　5
1.6 使用pip安装Python包　　6
第2章 应用的基本结构　　7
2.1 初始化　　7
2.2 路由和视图函数　　7
2.3 一个完整的应用　　9
2.4 Web开发服务器　　9
2.5 动态路由　　10
2.6 调试模式　　11
2.7 命令行选项　　13
2.8 请求–响应循环　　14
2.8.1 应用和请求上下文　　14
2.8.2 请求分派　　16
2.8.3 请求对象　　16
2.8.4 请求钩子　　17
2.8.5 响应　　18
2.9 Flask扩展　　19
第3章 模板　　20
3.1 Jinja2模板引擎　　20
3.1.1 渲染模板　　21
3.1.2 变量　　21
3.1.3 控制结构　　22
3.2 使用Flask-Bootstrap集成Bootstrap　　24
3.3 自定义错误页面　　27
3.4 链接　　29
3.5 静态文件　　30
3.6 使用Flask-Moment本地化日期和时间　　31
第4章 Web表单　　34
4.1 配置　　34
4.2 表单类　　35
4.3 把表单渲染成HTML　　37
4.4 在视图函数中处理表单　　38
4.5 重定向和用户会话　　40
4.6 闪现消息　　42
第5章 数据库　　44
5.1 SQL数据库　　44
5.2 NoSQL数据库　　45
5.3 使用SQL还是NoSQL　　46
5.4 Python数据库框架　　46
5.5 使用Flask-SQLAlchemy管理数据库　　47
5.6 定义模型　　48
5.7 关系　　49
5.8 数据库操作　　51
5.8.1 创建表　　51
5.8.2 插入行　　51
5.8.3 修改行　　53
5.8.4 删除行　　53
5.8.5 查询行　　53
5.9 在视图函数中操作数据库　　55
5.10 集成Python shell　　56
5.11 使用Flask-Migrate实现数据库迁移　　56
5.11.1 创建迁移仓库　　57
5.11.2 创建迁移脚本　　57
5.11.3 更新数据库　　58
5.11.4 添加几个迁移　　59
第6章 电子邮件　　60
第7章 大型应用的结构　　65
7.1 项目结构　　65
7.2 配置选项　　66
7.3 应用包　　67
7.3.1 使用应用工厂函数　　68
7.3.2 在蓝本中实现应用功能　　69
7.4 应用脚本　　71
7.5 需求文件　　71
7.6 单元测试　　72
7.7 创建数据库　　74
7.8 运行应用　　74
第二部分 实例：社交博客应用
第8章 用户身份验证　　77
8.1 Flask的身份验证扩展　　77
8.2 密码安全性　　77
8.3 创建身份验证蓝本　　80
8.4 使用Flask-Login验证用户身份　　81
8.4.1 准备用于登录的用户模型　　82
8.4.2 保护路由　　83
8.4.3 添加登录表单　　83
8.4.4 登入用户　　85
8.4.5 登出用户　　86
8.4.6 理解Flask-Login的运作方式　　86
8.4.7 登录测试　　87
8.5 注册新用户　　88
8.5.1 添加用户注册表单　　88
8.5.2 注册新用户　　90
8.6 确认账户　　90
8.6.1 使用itsdangerous生成确认令牌　　90
8.6.2 发送确认邮件　　92
8.7 管理账户　　95
第9章 用户角色　　97
9.1 角色在数据库中的表示　　97
9.2 赋予角色　　100
9.3 检验角色　　101
第10章 用户资料　　104
10.1 资料信息　　104
10.2 用户资料页面　　105
10.3 资料编辑器　　107
10.3.1 用户级资料编辑器　　107
10.3.2 管理员级资料编辑器　　109
10.4 用户头像　　111
第11章 博客文章　　115
11.1 提交和显示博客文章　　115
11.2 在资料页中显示博客文章　　118
11.3 分页显示长博客文章列表　　118
11.3.1 创建虚拟博客文章数据　　119
11.3.2 在页面中渲染数据　　120
11.3.3 添加分页导航　　121
11.4 使用Markdown和Flask-PageDown支持富文本文章　　123
11.4.1 使用Flask-PageDown　　124
11.4.2 在服务器端处理富文本　　125
11.5 博客文章的固定链接　　126
11.6 博客文章编辑器　　128
第12章 关注者　　130
12.1 再论数据库关系　　130
12.1.1 多对多关系　　130
12.1.2 自引用关系　　132
12.1.3 高级多对多关系　　132
12.2 在资料页面中显示关注者　　135
12.3 使用数据库联结查询所关注用户的文章　　137
12.4 在首页显示所关注用户的文章　　139
第13章 用户评论　　143
13.1 评论在数据库中的表示　　143
13.2 提交和显示评论　　144
13.3 管理评论　　146
第14章 应用编程接口　　150
14.1 REST简介　　150
14.1.1 资源就是一切　　151
14.1.2 请求方法　　151
14.1.3 请求和响应主体　　152
14.1.4 版本　　153
14.2 使用Flask实现REST式Web服务　　153
14.2.1 创建API蓝本　　153
14.2.2 错误处理　　154
14.2.3 使用Flask-HTTPAuth验证用户身份　　156
14.2.4 基于令牌的身份验证　　158
14.2.5 资源和JSON的序列化转换　　159
14.2.6 实现资源的各个端点　　161
14.2.7 分页大型资源集合　　163
14.2.8 使用HTTPie测试Web服务　　164
第三部分 成功在望
第15章 测试　　169
15.1 获取代码覆盖度报告　　169
15.2 Flask测试客户端　　172
15.2.1 测试Web应用　　172
15.2.2 测试Web服务　　175
15.3 使用Selenium进行端到端测试　　176
15.4 值得测试吗　　180
第16章 性能　　181
16.1 在日志中记录影响性能的缓慢数据库查询　　181
16.2 分析源码　　183
第17章 部署　　184
17.1 部署流程　　184
17.2 把生产环境中的错误写入日志　　185
17.3 云部署　　186
17.4 Heroku平台　　186
17.4.1 准备工作　　187
17.4.2 使用heroku local测试　　193
17.4.3 执行git push命令部署　　194
17.4.4 升级后重新部署　　195
17.5 Docker容器　　195
17.5.1 安装Docker　　195
17.5.2 构建容器映像　　196
17.5.3 运行容器　　199
17.5.4 审查运行中的容器　　200
17.5.5 把容器映像推送到外部注册处　　200
17.5.6 使用外部数据库　　201
17.5.7 使用Docker Compose编排容器　　202
17.5.8 清理旧容器和映像　　205
17.5.9 在生产环境中使用Docker　　205
17.6 传统部署方式　　206
17.6.1 架设服务器　　206
17.6.2 导入环境变量　　207
17.6.3 配置日志　　207
第18章 其他资源　　209
18.1 使用集成开发环境　　209
18.2 寻找Flask扩展　　209
18.3 寻求帮助　　210
18.4 参与Flask社区　　210
作者简介　　211
关于封面　　211
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Flask Web开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据分析基础教程（第2版）
第1章　NumPy快速入门　　1
1.1 　Python　　1
1.2 　动手实践：在不同的操作系统上安装Python　　1
1.3 　Windows　　2
1.4 　动手实践：在Windows上安装NumPy、Matplotlib、SciPy和IPython　　2
1.5 　Linux　　4
1.6 　动手实践：在Linux上安装NumPy、Matplotlib、SciPy和IPython　　5
1.7 　Mac OS X　　5
1.8 　动手实践：在Mac OS X上安装NumPy、Matplotlib和SciPy　　5
1.9 　动手实践：使用MacPorts或Fink安装NumPy、SciPy、Matplotlib和IPython　　7
1.10 　编译源代码　　8
1.11 　数组对象　　8
1.12 　动手实践：向量加法　　8
1.13 　IPython：一个交互式shell工具　　11
1.14 　在线资源和帮助　　14
1.15 　本章小结　　15
第2章　NumPy基础　　16
2.1 　NumPy数组对象　　16
2.2 　动手实践：创建多维数组　　17
2.2.1 　选取数组元素　　18
2.2.2 　NumPy数据类型　　19
2.2.3 　数据类型对象　　20
2.2.4 　字符编码　　20
2.2.5 　自定义数据类型　　21
2.2.6 　dtype类的属性　　22
2.3 　动手实践：创建自定义数据类型　　22
2.4 　一维数组的索引和切片　　23
2.5 　动手实践：多维数组的切片和索引　　23
2.6 　动手实践：改变数组的维度　　26
2.7 　数组的组合　　27
2.8 　动手实践：组合数组　　27
2.9 　数组的分割　　30
2.10 　动手实践：分割数组　　30
2.11 　数组的属性　　32
2.12 　动手实践：数组的转换　　34
2.13 　本章小结　　35
第3章　常用函数　　36
3.1 　文件读写　　36
3.2 　动手实践：读写文件　　36
3.3 　CSV文件　　37
3.4 　动手实践：读入CSV文件　　37
3.5 　成交量加权平均价格（VWAP）　　38
3.6 　动手实践：计算成交量加权平均价格　　38
3.6.1 　算术平均值函数　　38
3.6.2 　时间加权平均价格　　39
3.7 　取值范围　　39
3.8 　动手实践：找到最大值和最小值　　40
3.9 　统计分析　　41
3.10 　动手实践：简单统计分析　　41
3.11 　股票收益率　　43
3.12 　动手实践：分析股票收益率　　43
3.13 　日期分析　　45
3.14 　动手实践：分析日期数据　　45
3.15 　周汇总　　48
3.16 　动手实践：汇总数据　　48
3.17 　真实波动幅度均值（ATR）　　52
3.18 　动手实践：计算真实波动幅度均值　　52
3.19 　简单移动平均线　　54
3.20 　动手实践：计算简单移动平均线　　54
3.21 　指数移动平均线　　56
3.22 　动手实践：计算指数移动平均线　　56
3.23 　布林带　　58
3.24 　动手实践：绘制布林带　　58
3.25 　线性模型　　61
3.26 　动手实践：用线性模型预测价格　　61
3.27 　趋势线　　63
3.28 　动手实践：绘制趋势线　　63
3.29 　ndarray对象的方法　　66
3.30 　动手实践：数组的修剪和压缩　　67
3.31 　阶乘　　67
3.32 　动手实践：计算阶乘　　67
3.33 　本章小结　　68
第4章　便捷函数　　70
4.1 　相关性　　70
4.2 　动手实践：股票相关性分析　　71
4.3 　多项式　　74
4.4 　动手实践：多项式拟合　　74
4.5 　净额成交量　　77
4.6 　动手实践：计算OBV　　78
4.7 　交易过程模拟　　79
4.8 　动手实践：避免使用循环　　80
4.9 　数据平滑　　82
4.10 　动手实践：使用hanning函数平滑数据　　82
4.11 　本章小结　　85
第5章　矩阵和通用函数　　86
5.1 　矩阵　　86
5.2 　动手实践：创建矩阵　　86
5.3 　从已有矩阵创建新矩阵　　88
5.4 　动手实践：从已有矩阵创建新矩阵　　88
5.5 　通用函数　　89
5.6 　动手实践：创建通用函数　　89
5.7 　通用函数的方法　　90
5.8 　动手实践：在add上调用通用函数的方法　　91
5.9 　算术运算　　93
5.10 　动手实践：数组的除法运算　　93
5.11 　模运算　　95
5.12 　动手实践：模运算　　95
5.13 　斐波那契数列　　96
5.14 　动手实践：计算斐波那契数列　　96
5.15 　利萨茹曲线　　97
5.16 　动手实践：绘制利萨茹曲线　　97
5.17 　方波　　99
5.18 　动手实践：绘制方波　　99
5.19 　锯齿波和三角波　　100
5.20 　动手实践：绘制锯齿波和三角波　　101
5.21 　位操作函数和比较函数　　102
5.22 　动手实践：玩转二进制位　　102
5.23 　本章小结　　104
第6章　深入学习NumPy模块　　105
6.1 　线性代数　　105
6.2 　动手实践：计算逆矩阵　　105
6.3 　求解线性方程组　　107
6.4 　动手实践：求解线性方程组　　107
6.5 　特征值和特征向量　　108
6.6 　动手实践：求解特征值和特征向量　　108
6.7 　奇异值分解　　110
6.8 　动手实践：分解矩阵　　110
6.9 　广义逆矩阵　　112
6.10 　动手实践：计算广义逆矩阵　　112
6.11 　行列式　　113
6.12 　动手实践：计算矩阵的行列式　　113
6.13 　快速傅里叶变换　　114
6.14 　动手实践：计算傅里叶变换　　114
6.15 　移频　　115
6.16 　动手实践：移频　　116
6.17 　随机数　　117
6.18 　动手实践：硬币赌博游戏　　117
6.19 　超几何分布　　119
6.20 　动手实践：模拟游戏秀节目　　119
6.21 　连续分布　　121
6.22 　动手实践：绘制正态分布　　121
6.23 　对数正态分布　　122
6.24 　动手实践：绘制对数正态分布　　122
6.25 　本章小结　　123
第7章　专用函数　　124
7.1 　排序　　124
7.2 　动手实践：按字典序排序　　124
7.3 　复数　　126
7.4 　动手实践：对复数进行排序　　126
7.5 　搜索　　127
7.6 　动手实践：使用searchsorted函数　　127
7.7 　数组元素抽取　　128
7.8 　动手实践：从数组中抽取元素　　128
7.9 　金融函数　　129
7.10 　动手实践：计算终值　　130
7.11 　现值　　131
7.12 　动手实践：计算现值　　131
7.13 　净现值　　131
7.14 　动手实践：计算净现值　　132
7.15 　内部收益率　　132
7.16 　动手实践：计算内部收益率　　132
7.17 　分期付款　　133
7.18 　动手实践：计算分期付款　　133
7.19 　付款期数　　133
7.20 　动手实践：计算付款期数　　134
7.21 　利率　　134
7.22 　动手实践：计算利率　　134
7.23 　窗函数　　134
7.24 　动手实践：绘制巴特利特窗　　135
7.25 　布莱克曼窗　　135
7.26 　动手实践：使用布莱克曼窗平滑股价数据　　136
7.27 　汉明窗　　137
7.28 　动手实践：绘制汉明窗　　137
7.29 　凯泽窗　　138
7.30 　动手实践：绘制凯泽窗　　138
7.31 　专用数学函数　　139
7.32 　动手实践：绘制修正的贝塞尔函数　　139
7.33 　sinc函数　　140
7.34 　动手实践：绘制sinc函数　　140
7.35 　本章小结　　142
第8章　质量控制　　143
8.1 　断言函数　　143
8.2 　动手实践：使用assert_almost_equal断言近似相等　　144
8.3 　近似相等　　145
8.4 　动手实践：使用assert_approx_equal断言近似相等　　145
8.5 　数组近似相等　　146
8.6 　动手实践：断言数组近似相等　　146
8.7 　数组相等　　147
8.8 　动手实践：比较数组　　147
8.9 　数组排序　　148
8.10 　动手实践：核对数组排序　　148
8.11 　对象比较　　149
8.12 　动手实践：比较对象　　149
8.13 　字符串比较　　149
8.14 　动手实践：比较字符串　　150
8.15 　浮点数比较　　150
8.16 　动手实践：使用assert_array_ almost_equal_nulp比较浮点数　　151
8.17 　多ULP的浮点数比较　　151
8.18 　动手实践：设置maxulp并比较浮点数　　151
8.19 　单元测试　　152
8.20 　动手实践：编写单元测试　　152
8.21 　nose和测试装饰器　　154
8.22 　动手实践：使用测试装饰器　　155
8.23 　文档字符串　　157
8.24 　动手实践：执行文档字符串测试　　157
8.25 　本章小结　　158
第9章　使用Matplotlib绘图　　159
9.1 　简单绘图　　159
9.2 　动手实践：绘制多项式函数　　159
9.3 　格式字符串　　161
9.4 　动手实践：绘制多项式函数及其导函数　　161
9.5 　子图　　163
9.6 　动手实践：绘制多项式函数及其导函数　　163
9.7 　财经　　165
9.8 　动手实践：绘制全年股票价格　　165
9.9 　直方图　　167
9.10 　动手实践：绘制股价分布直方图　　167
9.11 　对数坐标图　　169
9.12 　动手实践：绘制股票成交量　　169
9.13 　散点图　　171
9.14 　动手实践：绘制股票收益率和成交量变化的散点图　　171
9.15 　着色　　173
9.16 　动手实践：根据条件进行着色　　173
9.17 　图例和注释　　175
9.18 　动手实践：使用图例和注释　　175
9.19 　三维绘图　　177
9.20 　动手实践：在三维空间中绘图　　178
9.21 　等高线图　　179
9.22 　动手实践：绘制色彩填充的等高线图　　179
9.23 　动画　　180
9.24 　动手实践：制作动画　　180
9.25 　本章小结　　182
第10章　NumPy的扩展：SciPy　　183
10.1 　MATLAB和Octave　　183
10.2 　动手实践：保存和加载.mat文件　　183
10.3 　统计　　184
10.4 　动手实践：分析随机数　　185
10.5 　样本比对和SciKits　　187
10.6 　动手实践：比较股票对数收益率　　187
10.7 　信号处理　　190
10.8 　动手实践：检测QQQ股价的线性趋势　　190
10.9 　傅里叶分析　　192
10.10 　动手实践：对去除趋势后的信号进行滤波处理　　192
10.11 　数学优化　　194
10.12 　动手实践：拟合正弦波　　195
10.13 　数值积分　　197
10.14 　动手实践：计算高斯积分　　198
10.15 　插值　　198
10.16 　动手实践：一维插值　　198
10.17 　图像处理　　200
10.18 　动手实践：处理Lena图像　　200
10.19 　音频处理　　202
10.20 　动手实践：重复音频片段　　202
10.21 　本章小结　　204
第11章　玩转Pygame　　205
11.1 　Pygame　　205
11.2 　动手实践：安装Pygame　　205
11.3 　Hello World　　206
11.4 　动手实践：制作简单游戏　　206
11.5 　动画　　208
11.6 　动手实践：使用NumPy和Pygame制作动画对象　　208
11.7 　Matplotlib　　211
11.8 　动手实践：在Pygame中使用Matplotlib　　211
11.9 　屏幕像素　　214
11.10 　动手实践：访问屏幕像素　　214
11.11 　人工智能　　216
11.12 　动手实践：数据点聚类　　216
11.13 　OpenGL和Pygame　　218
11.14 　动手实践：绘制谢尔宾斯基地毯　　218
11.15 　模拟游戏　　221
11.16 　动手实践：模拟生命　　221
11.17 　本章小结　　224
突击测验答案　　225
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据分析基础教程（第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>机器学习——Python实践
第一部分 初始
1 初识机器学习 2
1.1 学习机器学习的误区 2
1.2 什么是机器学习 3
1.3 Python 中的机器学习 3
1.4 学习机器学习的原则 5
1.5 学习机器学习的技巧 5
1.6 这本书不涵盖以下内容 6
1.7 代码说明 6
1.8 总结 6
2 Python 机器学习的生态圈 7
2.1 Python 7
2.2 SciPy 9
2.3 scikit-learn 9
2.4 环境安装 10
2.5 总结 12
3 第一个机器学习项目 13
3.1 机器学习中的 Hello World 项目 13
3.2 导入数据 14
3.3 概述数据 15
3.4 数据可视化 18
3.5 评估算法 20
3.6 实施预测 23
3.7 总结 24
4 Python 和 SciPy 速成 25
4.1 Python 速成 25
4.2 NumPy 速成 34
4.3 Matplotlib 速成 36
4.4 Pandas 速成 39
4.5 总结 41
第二部分 数据理解
5 数据导入 44
5.1 CSV 文件 44
5.2 Pima Indians 数据集 45
5.3 采用标准 Python 类库导入数据 46
5.4 采用 NumPy 导入数据 46
5.5 采用 Pandas 导入数据 47
5.6 总结 47
6 数据理解 48
6.1 简单地查看数据 48
6.2 数据的维度 49
6.3 数据属性和类型 50
6.4 描述性统计 50
6.5 数据分组分布（适用于分类算法） 51
6.6 数据属性的相关性 52
6.7 数据的分布分析 53
6.8 总结 54
7 数据可视化 55
7.1 单一图表 55
7.2 多重图表 58
7.3 总结 61
第三部分 数据准备
8 数据预处理 64
8.1 为什么需要数据预处理 64
8.2 格式化数据 65
8.3 调整数据尺度 65
8.4 正态化数据 67
8.5 标准化数据 68
8.6 二值数据 69
8.7 总结 70
9 数据特征选定 71
9.1 特征选定 72
9.2 单变量特征选定 72
9.3 递归特征消除 73
9.4 主要成分分析 75
9.5 特征重要性 76
9.6 总结 76
第四部分 选择模型
10 评估算法 78
10.1 评估算法的方法 78
10.2 分离训练数据集和评估数据集 79
10.3 K 折交叉验证分离 80
10.4 弃一交叉验证分离 81
10.5 重复随机分离评估数据集与训练数据集 82
10.6 总结 83
11 算法评估矩阵 85
11.1 算法评估矩阵 85
11.2 分类算法矩阵 86
11.3 回归算法矩阵 93
11.4 总结 96
12 审查分类算法 97
12.1 算法审查 97
12.2 算法概述 98
12.3 线性算法 98
12.4 非线性算法 101
12.5 总结 105
13 审查回归算法 106
13.1 算法概述 106
13.2 线性算法 107
13.3 非线性算法 111
13.4 总结 113
14 算法比较 115
14.1 选择最佳的机器学习算法 115
14.2 机器学习算法的比较 116
14.3 总结 118
15 自动流程 119
15.1 机器学习的自动流程 119
15.2 数据准备和生成模型的 Pipeline 120
15.3 特征选择和生成模型的 Pipeline 121
15.4 总结 122
第五部分 优化模型
16 集成算法 124
16.1 集成的方法 124
16.2 装袋算法 125
16.3 提升算法 129
16.4 投票算法 131
16.5 总结 132
17 算法调参 133
17.1 机器学习算法调参 133
17.2 网格搜索优化参数 134
17.3 随机搜索优化参数 135
17.4 总结 136
第六部分 结果部署
18 持久化加载模型 138
18.1 通过 pickle 序列化和反序列化机器学习的模型 138
18.2 通过 joblib 序列化和反序列化机器学习的模型 140
18.3 生成模型的技巧 141
18.4 总结 141
第七部分 项目实践
19 预测模型项目模板 144
19.1 在项目中实践机器学习 145
19.2 机器学习项目的 Python 模板 145
19.3 各步骤的详细说明 146
19.4 使用模板的小技巧 148
19.5 总结 149
20 回归项目实例 150
20.1 定义问题 150
20.2 导入数据 151
20.3 理解数据 152
20.4 数据可视化 155
20.5 分离评估数据集 159
20.6 评估算法 160
20.7 调参改善算法 164
20.8 集成算法 165
20.9 集成算法调参 167
20.10 确定最终模型 168
20.11 总结 169
21 二分类实例 170
21.1 问题定义 170
21.2 导入数据 171
21.3 分析数据 172
21.4 分离评估数据集 180
21.5 评估算法 180
21.6 算法调参 184
21.7 集成算法 187
21.8 确定最终模型 190
21.9 总结 190
22 文本分类实例 192
22.1 问题定义 192
22.2 导入数据 193
22.3 文本特征提取 195
22.4 评估算法 196
22.5 算法调参 198
22.6 集成算法 200
22.7 集成算法调参 201
22.8 确定最终模型 202
22.9 总结 203
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>机器学习——Python实践
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python网络编程攻略
第1章　套接字、IPv4和简单的客户端/服务器编程　　1
1.1　简介　　1
1.2　打印设备名和IPv4地址　　2
1.2.1　准备工作　　2
1.2.2　实战演练　　2
1.2.3　原理分析　　3
1.3　获取远程设备的IP地址　　4
1.3.1　实战演练　　4
1.3.2　原理分析　　4
1.4　将IPv4地址转换成不同的格式　　5
1.4.1　实战演练　　5
1.4.2　原理分析　　6
1.5　通过指定的端口和协议找到服务名　　6
1.5.1　准备工作　　6
1.5.2　实战演练　　6
1.5.3　原理分析　　7
1.6　主机字节序和网络字节序之间相互转换　　7
1.6.1　实战演练　　7
1.6.2　原理分析　　8
1.7　设定并获取默认的套接字超时时间　　8
1.7.1　实战演练　　8
1.7.2　原理分析　　9
1.8　优雅地处理套接字错误　　9
1.8.1　实战演练　　9
1.8.2　原理分析　　10
1.9　修改套接字发送和接收的缓冲区大小　　12
1.9.1　实战演练　　12
1.9.2　原理分析　　13
1.10　把套接字改成阻塞或非阻塞模式　　13
1.10.1　实战演练　　13
1.10.2　原理分析　　14
1.11　重用套接字地址　　14
1.11.1　实战演练　　14
1.11.2　原理分析　　16
1.12　从网络时间服务器获取并打印当前时间　　16
1.12.1　准备工作　　16
1.12.2　实战演练　　16
1.12.3　原理分析　　17
1.13　编写一个SNTP客户端　　17
1.13.1　实战演练　　17
1.13.2　原理分析　　18
1.14　编写一个简单的回显客户端/服务器应用　　18
1.14.1　实战演练　　18
1.14.2　原理分析　　21
第2章　使用多路复用套接字I/O提升性能　　22
2.1　简介　　22
2.2　在套接字服务器程序中使用ForkingMixIn　　23
2.2.1　实战演练　　23
2.2.2　原理分析　　25
2.3　在套接字服务器程序中使用ThreadingMixIn　　25
2.3.1　准备工作　　26
2.3.2　实战演练　　26
2.3.3　原理分析　　27
2.4　使用select.select编写一个聊天室服务器　　28
2.4.1　实战演练　　28
2.4.2　原理分析　　34
2.5　使用select.epoll多路复用Web服务器　　34
2.5.1　实战演练　　34
2.5.2　原理分析　　37
2.6　使用并发库Diesel多路复用回显服务器　　37
2.6.1　准备工作　　37
2.6.2　实战演练　　37
2.6.3　原理分析　　39
第3章　IPv6、Unix域套接字和网络接口　　40
3.1　简介　　40
3.2　把本地端口转发到远程主机　　41
3.2.1　实战演练　　41
3.2.2　原理分析　　43
3.3　通过ICMP查验网络中的主机　　44
3.3.1　准备工作　　44
3.3.2　实战演练　　44
3.3.3　原理分析　　48
3.4　等待远程网络服务上线　　48
3.4.1　实战演练　　48
3.4.2　原理分析　　50
3.5　枚举设备中的接口　　51
3.5.1　准备工作　　51
3.5.2　实战演练　　51
3.5.3　原理分析　　52
3.6　找出设备中某个接口的IP地址　　52
3.6.1　准备工作　　52
3.6.2　实战演练　　53
3.6.3　原理分析　　53
3.7　探测设备中的接口是否开启　　53
3.7.1　准备工作　　54
3.7.2　实战演练　　54
3.7.3　原理分析　　55
3.8　检测网络中未开启的设备　　55
3.8.1　准备工作　　55
3.8.2　实战演练　　55
3.8.3　原理分析　　56
3.9　使用相连的套接字执行基本的进程间通信　　57
3.9.1　准备工作　　57
3.9.2　实战演练　　57
3.9.3　原理分析　　58
3.10　使用Unix域套接字执行进程间通信　　58
3.10.1　实战演练　　58
3.10.2　原理分析　　60
3.11　确认你使用的Python是否支持IPv6套接字　　61
3.11.1　准备工作　　61
3.11.2　实战演练　　61
3.11.3　原理分析　　63
3.12　从IPv6地址中提取IPv6前缀　　63
3.12.1　实战演练　　63
3.12.2　原理分析　　64
3.13　编写一个IPv6回显客户端/服务器　　64
3.13.1　实战演练　　64
3.13.2　原理分析　　67
第4章　HTTP协议网络编程　　68
4.1　简介　　68
4.2　从HTTP服务器下载数据　　68
4.2.1　实战演练　　69
4.2.2　原理分析　　70
4.3　在你的设备中伺服HTTP请求　　70
4.3.1　实战演练　　70
4.3.2　原理分析　　72
4.4　访问网站后提取cookie信息　　72
4.4.1　实战演练　　73
4.4.2　原理分析　　75
4.5　提交网页表单　　75
4.5.1　准备工作　　75
4.5.2　实战演练　　75
4.5.3　原理分析　　77
4.6　通过代理服务器发送Web请求　　77
4.6.1　准备工作　　77
4.6.2　实战演练　　77
4.6.3　原理分析　　78
4.7　使用HEAD请求检查网页是否存在　　78
4.7.1　实战演练　　78
4.7.2　原理分析　　79
4.8　把客户端伪装成Mozilla Firefox　　79
4.8.1　实战演练　　79
4.8.2　原理分析　　80
4.9　使用HTTP压缩节省Web请求消耗的带宽　　80
4.9.1　实战演练　　81
4.9.2　原理分析　　82
4.10　编写一个支持断点续传功能的HTTP容错客户端　　82
4.10.1　实战演练　　83
4.10.2　原理分析　　84
4.11　使用Python和OpenSSL编写一个简单的HTTPS服务器　　84
4.11.1　准备工作　　84
4.11.2　实战演练　　84
4.11.3　原理分析　　86
第5章　电子邮件协议、FTP和CGI编程　　87
5.1　简介　　87
5.2　列出FTP远程服务器中的文件　　87
5.2.1　准备工作　　87
5.2.2　实战演练　　88
5.2.3　原理分析　　89
5.3　把本地文件上传到远程FTP服务器中　　89
5.3.1　准备工作　　89
5.3.2　实战演练　　89
5.3.3　原理分析　　90
5.4　把当前工作目录中的内容压缩成ZIP文件后通过电子邮件发送　　91
5.4.1　准备工作　　91
5.4.2　实战演练　　91
5.4.3　原理分析　　93
5.4.4　参考资源　　94
5.5　通过POP3协议下载谷歌电子邮件　　94
5.5.1　准备工作　　94
5.5.2　实战演练　　94
5.5.3　原理分析　　95
5.6　通过IMAP协议查收远程服务器中的电子邮件　　95
5.6.1　准备工作　　95
5.6.2　实战演练　　96
5.6.3　原理分析　　97
5.7　通过Gmail的SMTP服务器发送带有附件的电子邮件　　97
5.7.1　准备工作　　97
5.7.2　实战演练　　97
5.7.3　原理分析　　99
5.8　使用CGI为基于Python的Web服务器编写一个留言板　　99
5.8.1　实战演练　　99
5.8.2　原理分析　　101
第6章　屏幕抓取和其他实用程序　　103
6.1　简介　　103
6.2　使用谷歌地图API搜索公司地址　　103
6.2.1　准备工作　　103
6.2.2　实战演练　　104
6.2.3　原理分析　　104
6.2.4　参考资源　　104
6.3　使用谷歌地图URL搜索地理坐标　　105
6.3.1　实战演练　　105
6.3.2　原理分析　　106
6.4　搜索维基百科中的文章　　106
6.4.1　准备工作　　107
6.4.2　实战演练　　107
6.4.3　原理分析　　109
6.5　使用谷歌搜索股价　　110
6.5.1　准备工作　　110
6.5.2　实战演练　　110
6.5.3　原理分析　　111
6.6　搜索GitHub中的源代码仓库　　111
6.6.1　准备工作　　112
6.6.2　实战演练　　112
6.6.3　原理分析　　113
6.7　读取BBC的新闻订阅源　　114
6.7.1　准备工作　　114
6.7.2　实战演练　　114
6.7.3　原理分析　　115
6.8　爬取网页中的链接　　116
6.8.1　实战演练　　116
6.8.2　原理分析　　118
第7章　跨设备编程　　119
7.1　简介　　119
7.2　使用telnet在远程主机中执行shell命令　　119
7.2.1　准备工作　　119
7.2.2　实战演练　　120
7.2.3　原理分析　　121
7.3　通过SFTP把文件复制到远程设备中　　121
7.3.1　准备工作　　122
7.3.2　实战演练　　122
7.3.3　原理分析　　123
7.4　打印远程设备的CPU信息　　123
7.4.1　准备工作　　123
7.4.2　实战演练　　124
7.4.3　原理分析　　125
7.5　在远程主机中安装Python包　　126
7.5.1　准备工作　　126
7.5.2　实战演练　　126
7.5.3　原理分析　　127
7.6　在远程主机中运行MySQL命令　　128
7.6.1　准备工作　　128
7.6.2　实战演练　　128
7.6.3　原理分析　　131
7.7　通过SSH把文件传输到远程设备中　　131
7.7.1　准备工作　　131
7.7.2　实战演练　　131
7.7.3　原理分析　　134
7.8　远程配置Apache运行网站　　134
7.8.1　准备工作　　134
7.8.2　实战演练　　134
7.8.3　原理分析　　136
第8章　使用Web服务：XML-RPC、SOAP和REST　　138
8.1　简介　　138
8.2　查询本地XML-RPC服务器　　139
8.2.1　准备工作　　139
8.2.2　实战演练　　139
8.2.3　原理分析　　141
8.3　编写一个多线程、多调用XML-RPC服务器　　141
8.3.1　实战演练　　141
8.3.2　原理分析　　143
8.4　运行一个支持HTTP基本认证的XML-RPC服务器　　143
8.4.1　实战演练　　143
8.4.2　原理分析　　146
8.5　使用REST从Flickr中收集一些照片信息　　146
8.5.1　实战演练　　146
8.5.2　原理分析　　149
8.6　找出亚马逊S3 Web服务支持的SOAP方法　　150
8.6.1　准备工作　　150
8.6.2　实战演练　　150
8.6.3　原理分析　　151
8.7　使用谷歌搜索定制信息　　151
8.7.1　准备工作　　151
8.7.2　实战演练　　151
8.7.3　原理分析　　152
8.8　通过商品搜索API在亚马逊中搜索图书　　153
8.8.1　准备工作　　153
8.8.2　实战演练　　153
8.8.3　原理分析　　155
第9章　网络监控和安全性　　156
9.1　简介　　156
9.2　嗅探网络数据包　　156
9.2.1　准备工作　　156
9.2.2　实战演练　　157
9.2.3　原理分析　　158
9.3　使用pcap转储器把数据包保存为pcap格式　　159
9.3.1　实战演练　　159
9.3.2　原理分析　　161
9.4　在HTTP数据包中添加额外的首部　　162
9.4.1　实战演练　　162
9.4.2　原理分析　　163
9.5　扫描远程主机的端口　　163
9.5.1　实战演练　　164
9.5.2　原理分析　　165
9.6　自定义数据包的IP地址　　165
9.6.1　实战演练　　165
9.6.2　原理分析　　167
9.7　读取保存的pcap文件以重放流量　　167
9.7.1　实战演练　　167
9.7.2　原理分析　　169
9.8　扫描数据包的广播　　169
9.8.1　实战演练　　169
9.8.2　原理分析　　170
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python网络编程攻略
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>算法图解
第1章　算法简介　　1
1.1　引言　　1
1.1.1　性能方面　　1
1.1.2　问题解决技巧　　2
1.2　二分查找　　2
1.2.1　更佳的查找方式　　4
1.2.2　运行时间　　8
1.3　大O表示法　　8
1.3.1　算法的运行时间以不同的速度增加　　9
1.3.2　理解不同的大O运行时间　　10
1.3.3　大O表示法指出了最糟情况下的运行时间　　12
1.3.4　一些常见的大O运行时间　　12
1.3.5　旅行商　　13
1.4　小结　　15
第2章　选择排序　　16
2.1　内存的工作原理　　16
2.2　数组和链表　　18
2.2.1　链表　　19
2.2.2　数组　　20
2.2.3　术语　　21
2.2.4　在中间插入　　22
2.2.5　删除　　23
2.3　选择排序　　25
2.4　小结　　28
第3章　递归　　29
3.1　递归　　29
3.2　基线条件和递归条件　　32
3.3　栈　　33
3.3.1　调用栈　　34
3.3.2　递归调用栈　　36
3.4　小结　　40
第4章　快速排序　　41
4.1　分而治之　　41
4.2　快速排序　　47
4.3　再谈大O表示法　　52
4.3.1　比较合并排序和快速排序　　53
4.3.2　平均情况和最糟情况　　54
4.4　小结　　57
第5章　散列表　　58
5.1　散列函数　　60
5.2　应用案例　　63
5.2.1　将散列表用于查找　　63
5.2.2　防止重复　　64
5.2.3　将散列表用作缓存　　66
5.2.4　小结　　 68
5.3　冲突　　69
5.4　性能　　71
5.4.1　填装因子　　72
5.4.2　良好的散列函数　　74
5.5　小结　　75
第6章　广度优先搜索　　76
6.1　图简介　　77
6.2　图是什么　　79
6.3　广度优先搜索　　79
6.3.1　查找最短路径　　82
6.3.2　队列　　 83
6.4　实现图　　84
6.5　实现算法　　86
6.6　小结　　93
第7章　狄克斯特拉算法　　94
7.1　使用狄克斯特拉算法　　95
7.2　术语　　98
7.3　换钢琴　　100
7.4　负权边　　105
7.5　实现　　108
7.6　小结　　116
第8章　贪婪算法　　117
8.1　教室调度问题　　117
8.2　背包问题　　119
8.3　集合覆盖问题　　121
8.4　NP 完全问题　　127
8.4.1　旅行商问题详解　　127
8.4.2　如何识别NP完全问题　　131
8.5　小结　　133
第9章　动态规划　　134
9.1　背包问题　　134
9.1.1　简单算法　　135
9.1.2　动态规划　　136
9.2　背包问题FAQ　　143
9.2.1　再增加一件商品将如何呢　　143
9.2.2　行的排列顺序发生变化时结果将如何　　145
9.2.3　可以逐列而不是逐行填充网格吗　　146
9.2.4　增加一件更小的商品将如何呢　　146
9.2.5　可以偷商品的一部分吗　　146
9.2.6　旅游行程最优化　　147
9.2.7　处理相互依赖的情况　　148
9.2.8　计算最终的解时会涉及两
个以上的子背包吗　　148
9.2.9　最优解可能导致背包没装满吗　　149
9.3　最长公共子串　　149
9.3.1　绘制网格　　150
9.3.2　填充网格　　151
9.3.3　揭晓答案　　152
9.3.4　最长公共子序列　　153
9.3.5　最长公共子序列之解决方案　　154
9.4　小结　　155
第10章　K最近邻算法　　156
10.1　橙子还是柚子　　156
10.2　创建推荐系统　　158
10.2.1　特征抽取　　159
10.2.2　回归　　162
10.2.3　挑选合适的特征　　164
10.3　机器学习简介　　165
10.3.1　OCR　　165
10.3.2　创建垃圾邮件过滤器　　166
10.3.3　预测股票市场　　167
10.4　小结　　167
第11章　接下来如何做　　168
11.1　树　　168
11.2　反向索引　　171
11.3　傅里叶变换　　 171
11.4　并行算法　　172
11.5　MapReduce　　173
11.5.1　分布式算法为何很有用　　173
11.5.2　映射函数　　173
11.5.3　归并函数　　174
11.6　布隆过滤器和HyperLogLog　　174
11.6.1　布隆过滤器　　175
11.6.2　HyperLogLog　　176
11.7　SHA算法　　176
11.7.1　比较文件　　177
11.7.2　检查密码　　178
11.8　局部敏感的散列算法　　178
11.9　Diffie-Hellman密钥交换　　179
11.10　线性规划　　180
11.11　结语　　180
练习答案　　 181
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>算法图解
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通Python设计模式
第一部分　创建型模式
第1章　工厂模式　　2
1.1　工厂方法　　2
1.1.1　现实生活的例子　　2
1.1.2　软件的例子　　3
1.1.3　应用案例　　3
1.1.4　实现　　4
1.2　抽象工厂　　11
1.2.1　现实生活的例子　　11
1.2.2　软件的例子　　12
1.2.3　应用案例　　12
1.2.4　实现　　12
1.3　小结　　17
第2章　建造者模式　　18
2.1　现实生活的例子　　18
2.2　软件的例子　　19
2.3　应用案例　　19
2.4　实现　　22
2.5　小结　　29
第3章　原型模式　　30
3.1　现实生活的例子　　31
3.2　软件的例子　　32
3.3　应用案例　　32
3.4　实现　　33
3.5　小结　　37
第二部分　结构型模式
第4章　适配器模式　　40
4.1　现实生活的例子　　40
4.2　软件的例子　　41
4.3　应用案例　　41
4.4　实现　　42
4.5　小结　　45
第5章　修饰器模式　　46
5.1　现实生活的例子　　46
5.2　软件的例子　　47
5.3　应用案例　　48
5.4　实现　　48
5.5　小结　　52
第6章　外观模式　　53
6.1　现实生活的例子　　54
6.2　软件的例子　　54
6.3　应用案例　　54
6.4　实现　　55
6.5　小结　　60
第7章　享元模式　　61
7.1　现实生活的例子　　62
7.2　软件的例子　　62
7.3　应用案例　　62
7.4　实现　　62
7.5　小结　　66
第8章　模型—视图—控制器模式　　67
8.1　现实生活的例子　　68
8.2　软件的例子　　68
8.3　应用案例　　68
8.4　实现　　70
8.5　小结　　73
第9章　代理模式　　74
9.1　现实生活的例子　　76
9.2　软件的例子　　77
9.3　应用案例　　77
9.4　实现　　78
9.5　小结　　81
第三部分　行为型模式
第10章　责任链模式　　84
10.1　现实生活的例子　　85
10.2　软件的例子　　86
10.3　应用案例　　86
10.4　实现　　87
10.5　小结　　91
第11章　命令模式　　92
11.1　现实生活的例子　　92
11.2　软件的例子　　93
11.3　应用案例　　93
11.4　实现　　94
11.5　小结　　99
第12章　解释器模式　　101
12.1　现实生活的例子　　102
12.2　软件的例子　　102
12.3　应用案例　　103
12.4　实现　　103
12.5　小结　　109
第13章　观察者模式　　110
13.1　现实生活的例子　　110
13.2　软件的例子　　111
13.3　应用案例　　111
13.4　实现　　112
13.5　小结　　117
第14章　状态模式　　118
14.1　现实生活的例子　　119
14.2　软件的例子　　120
14.3　应用案例　　120
14.4　实现　　121
14.5　小结　　126
第15章　策略模式　　127
15.1　现实生活的例子　　128
15.2　软件的例子　　128
15.3　应用案例　　130
15.4　实现　　130
15.5　小结　　134
第16章　模板模式　　135
16.1　现实生活的例子　　139
16.2　软件的例子　　140
16.3　应用案例　　141
16.4　实现　　141
16.5　小结　　143
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通Python设计模式
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python核心编程
前言
第一部分 程序设计语言Python
第1章 欢迎使用Python	1
1.1 什么是Python语言	1
1.2 Python语言的历史	1
1.3 Python语言的特色	1
1.4 获得Python语言	5
1.5 安装Python语言	6
1.6 运行Python语言	7
1.6.1 命令行上的交互式解释器	7
1.6.2 命令行上的脚本程序	9
1.6.3 集成开发环境	10
1.7 Python语言的文档	13
1.8 Python与其他语言的比较	13
1.9 JPython的特色	14
1.10 练习	15
第2章 快速入门	16
2.1 程序输出、print语句和“Hello World !”	16
2.2 程序输入和raw_input( ) 内建函数	17
2.3 程序注释	17
2.4 操作符	17
2.5 变量和赋值	19
2.6 数字	19
2.7 字符串	20
2.8 列表和表列	20
2.9 字典	21
2.10 代码段使用缩进	22
2.11 if语句	22
2.12 while循环	23
2.13 for循环和range( )内建函数	23
2.14 文件和open( )内建函数	25
2.15 错误和例外	26
2.16 函数	26
2.17 类	27
2.18 模块	29
2.19 练习	31
第3章 语法和程序设计风格	34
3.1 语句和语法	34
3.2 变量分配	36
3.3 标识符	38
3.4 程序设计风格准则	39
3.4.1 模块的结构和布局	40
3.4.2 在主体部分里加上测试方面的内容	42
3.5 内存管理	43
3.5.1 变量定义	43
3.5.2 动态确定变量的类型	43
3.5.3 内存分配	43
3.5.4 废弃物回收	44
3.5.5 引用计数	44
3.5.6 del语句	44
3.5.7 减少引用计数	45
3.6 第一个Python应用程序	45
3.7 练习	49
第4章 对象	50
4.1 Python语言中的对象	50
4.2 标准数据类型	51
4.3 其他内建的数据类型	51
4.3.1 type类型和type()内建函数	52
4.3.2 None空类型	52
4.4 内部数据类型	52
4.4.1 代码对象	53
4.4.2 框架对象	53
4.4.3 跟踪记录对象	53
4.4.4 序列切片对象	53
4.4.5 Ellipsis对象	54
4.4.6 Xrange对象	54
4.5 与数据类型有关的标准操作符	55
4.5.1 值的比较	55
4.5.2 对象实体的比较	56
4.5.3 布尔表达式	58
4.6 与数据类型有关的标准内建函数	59
4.6.1 cmp( )	59
4.6.2 str()和repr()	59
4.6.3 深入type()	60
4.7 标准数据类型的分类	63
4.7.1 存储模型	64
4.7.2 修改模型	64
4.7.3 访问模型	66
4.8 Python语言不支持的数据类型	67
4.9 练习	68
第5章 数字	69
5.1 数字简介	69
5.2 整数	69
5.2.1 （普通）整数	70
5.2.2 长整数	70
5.3 浮点实数	70
5.4 复数	71
5.5 操作符	72
5.5.1 混状态操作符	72
5.5.2 标准类型的操作符	74
5.5.3 数值类型操作符	74
5.5.4 *位操作符	76
5.6 内建函数	77
5.6.1 标准类型函数	77
5.6.2 数值类型函数	78
5.6.3 只适用于整数的函数	82
5.7 相关模块	83
5.8 练习	85
第6章 序列：字符串、列表和表列	88
6.1 序列	88
6.1.1 操作符	88
6.1.2 内建函数	92
6.2 字符串	93
6.3 字符串和操作符	94
6.3.1 标准类型操作符	94
6.3.2 序列操作符	95
6.4 只作用于字符串的操作符	99
6.4.1 格式操作符（%）	99
6.4.2 生字符串操作符（r/R）	102
6.4.3 Unicode字符串操作符（u/U）	103
6.5 内建函数	103
6.5.1 标准类型函数	103
6.5.2 序列类型函数	104
6.5.3 字符串类型函数	104
6.6 字符串的内建方法	104
6.7 字符串的特性	107
6.7.1 特殊或控制字符	107
6.7.2 三引号	108
6.7.3 字符串的不可变性	109
6.7.4 Unicode支持	111
6.7.5 Python语言没有字符或数组	112
6.8 相关模块	113
6.9 字符串总结	114
6.10 列表	115
6.11 操作符	117
6.11.1 标准类型操作符	117
6.11.2 序列类型操作符	117
6.11.3 列表类型操作符	120
6.12 内建函数	120
6.12.1 标准类型函数	120
6.12.2 序列类型函数	121
6.12.3 列表类型内建函数	123
6.13 列表类型的内建方法	123
6.14 列表的特性	125
6.14.1 利用列表创建其他数据结构	125
6.14.2 列表的子类	130
6.15 表列	131
6.16 表列的操作符和内建函数	132
6.16.1 标准和序列操作符与内建函数	132
6.16.2 表列类型操作符和内建函数及方法	133
6.17 表列的特性	133
6.17.1 不可变性对表列有何影响	133
6.17.2 表列也不是绝对“不可变的”	133
6.17.3 括号的作用	134
6.17.4 单元素表列	135
6.18 相关模块	136
6.19 *浅拷贝与深拷贝	137
6.20 练习	141
第7章 字典数据类型	144
7.1 字典简介	144
7.2 操作符	147
7.2.1 标准类型操作符	147
7.2.2 字典的键字检索操作符[ ]	147
7.3 内建函数	148
7.3.1 标准类型函数type()、str()
和cmp()	148
7.3.2 映射类型函数len()	150
7.4 内建方法	150
7.5 字典键字	152
7.5.1 不允许一个键字对应一个以上的
数据项	153
7.5.2 键字必须是不可变的	153
7.6 练习	156
第8章 条件语句和循环语句	159
8.1 if语句	159
8.1.1 多重条件表达式	159
8.1.2 单语句子句	159
8.2 else语句	159
8.3 elif语句	161
8.4 while语句	161
8.4.1 一般语法	161
8.4.2 计数循环	162
8.4.3 无限循环	162
8.4.4 单语句子句	163
8.5 for语句	163
8.5.1 一般语法	163
8.5.2 与序列类型一起使用	163
8.5.3 switch/case语句的代理	164
8.5.4 range()内建函数	165
8.6 break语句	167
8.7 continue语句	167
8.8 pass语句	168
8.9 else语句之二	169
8.10 练习	170
第9章 文件和输入/输出操作	173
9.1 文件对象	173
9.2 文件的内建函数	173
9.3 文件的内建方法	175
9.3.1 输入	175
9.3.2 输出	175
9.3.3 文件内移动	175
9.3.4 其他	176
9.3.5 其他各种文件方法	176
9.4 文件的内建属性	179
9.5 标准文件	179
9.6 命令行参数	180
9.7 文件系统	181
9.8 文件的执行	186
9.9 永久性存储模块	186
9.9.1 pickle和marshal模块	187
9.9.2 DBM风格的模块	187
9.9.3 shelve模块	187
9.10 相关模块	189
9.11 练习	190
第10章 错误和例外处理	193
10.1 什么是例外	193
10.1.1 错误	193
10.1.2 例外	194
10.2 Python语言中的例外	194
10.3 检测和处理例外	196
10.3.1 try-except语句	196
10.3.2 打包一个内建函数	197
10.3.3 带多个except的try语句	199
10.3.4 处理多个例外的except语句	200
10.3.5 不带例外名参数的try-except语句	201
10.3.6 例外参数	202
10.3.7 把打过包的函数用在一个应用程
序里	204
10.3.8 else从句	206
10.3.9 try-except语句用法总结	206
10.3.10 try-finally语句	207
10.4 *例外的字符串形式	209
10.5 *例外的类形式	210
10.5.1 通过对象的标识符进行挑选	211
10.5.2 例外之间的关系	211
10.6 引发例外	212
10.7 确认	214
10.8 标准例外	215
10.9 *创建例外	216
10.10 为什么会发生例外	222
10.11 为什么要有例外	222
10.12 例外和sys模块	223
10.13 相关模块	224
10.14 练习	224
第11章 函数	226
11.1 什么是函数	226
11.1.1 函数与过程的比较	226
11.1.2 返回值和函数类型	226
11.2 函数的调用	228
11.2.1 函数操作符	228
11.2.2 关键字参数	228
11.2.3 缺省参数	228
11.3 函数的创建	229
11.3.1 def语句	229
11.3.2 函数声明与函数定义的比较	229
11.3.3 向前引用	229
11.4 函数可以用做其他函数的参数	230
11.5 正式参数	231
11.5.1 位置参数	232
11.5.2 缺省参数	232
11.6 可变长参数	235
11.6.1 非关键字可变长参数	235
11.6.2 关键字可变长参数	236
11.6.3 调用带有可变长参数对象的函数	238
11.7 函数化的程序设计	239
11.7.1 匿名函数和lambda	239
11.7.2 内建函数：apply()、filter()、map()、reduce()	241
11.8 变量的作用范围	253
11.8.1 全局变量和局部变量的比较	254
11.8.2 global语句	255
11.8.3 作用范围到底有几个	255
11.8.4 作用范围的其他特性	256
11.9 *递归	257
11.10 练习	258
第12章 模块	261
12.1 什么是模块	261
12.2 模块和文件	261
12.2.1 名字空间基本概念	261
12.2.2 搜索路径和路径搜索	262
12.3 名字空间	263
12.3.1 名字空间与变量作用范围的比较	264
12.3.2 名字的查找、确定作用范围和覆盖	264
12.4 导入模块	265
12.4.1 模块加载时的执行情况	265
12.4.2 导入与加载的比较	266
12.5 导入模块属性	266
12.5.1 把名字导入当前名字空间	266
12.5.2 被导入到导入者作用范围的名字	266
12.6 模块的内建函数	267
12.6.1 __import__()	267
12.6.2 globals()和locals()	268
12.6.3 reload()	268
12.7 软件包	269
12.7.1 目录结构	269
12.7.2 软件包的from-import语句操作	270
12.8 模块的其他特性	270
12.8.1 自动加载模块	270
12.8.2 阻止某个属性的导入	271
12.9 练习	271
第13章 类和OOP	272
13.1 简介	272
13.2 面向对象的程序设计	277
13.2.1 OOD和OOP之间的联系	278
13.2.2 现实世界中的问题	278
13.2.3 抽象世界里的模型	279
13.3 类	281
13.3.1 类的创建	282
13.3.2 声明和定义的比较	282
13.4 类的属性	282
13.4.1 *类的数据属性	283
13.4.2 方法	283
13.4.3 确定类的属性	284
13.4.4 类的特殊属性	285
13.5 实例	286
13.5.1 实例化：调用类对象创建实例	287
13.5.2 __init__() 构造器方法	287
13.5.3 __del__() 拆除器方法	288
13.6 实例的属性	289
13.6.1 “实例化”实例的属性	289
13.6.2 确定实例的属性	291
13.6.3 实例的特殊属性	292
13.6.4 内建类型的属性	293
13.6.5 实例属性和类属性的比较	293
13.7 绑定和方法的调用	295
13.7.1 调用绑定方法	296
13.7.2 调用未绑定方法	297
13.8 构造	298
13.9 子类的分离和推导	299
13.10 继承性	300
13.10.1 类属性__bases__	301
13.10.2 通过继承覆盖掉方法	302
13.10.3 对标准类型进行推导	303
13.10.4 多重继承	304
13.11 类、实例和其他对象的内建函数	304
13.11.1 issubclass()	304
13.11.2 isinstance()	305
13.11.3 hasattr()、getattr()、setattr()、
delattr()	307
13.11.4 dir()	308
13.11.5 vars()	308
13.12 类型和类/实例的比较	309
13.13 用特殊方法对类进行定制	310
13.13.1 对类进行简单定制的例子	312
13.13.2 *对类进行较复杂定制的例子	314
13.14 私密性	319
13.15 对类型进行打包	319
13.15.1 打包	319
13.15.2 实现对类型进行的打包	320
13.16 相关模块和文档	326
13.17 练习	328
第14章 执行环境	333
14.1 可调用对象	333
14.1.1 函数	334
14.1.2 方法	335
14.1.3 类	337
14.1.4 类的实例	338
14.2 代码对象	338
14.3 可执行对象语句和内建函数	339
14.3.1 callable()	339
14.3.2 compile()	340
14.3.3 eval()	341
14.3.4 exec	341
14.3.5 input()	346
14.3.6 内置字符串和intern()	347
14.4 执行其他Python程序	348
14.4.1 导入	348
14.4.2 execfile()	349
14.5 执行其他非Python程序	349
14.5.1 os.system()	351
14.5.2 os.popen()只适用于UNIX和
Windows	351
14.5.3 os.fork()、os.exec*()、os.wait*()
只适用于UNIX	352
14.5.4 os.spawn*()只适用于Windows	354
14.5.5 其他函数	354
14.6 受限执行环境	354
14.7 中断程序的执行	357
14.7.1 sys.exit()和SystemExit	357
14.7.2 sys.exitfunc()	358
14.7.3 os._exit()函数	359
14.8 相关模块	359
14.9 练习	360
第二部分 高 级 论 题
第15章 规则表达式	361
15.1 介绍与动机	361
15.2 规则表达式使用的特殊符号和字符	363
15.3 规则表达式和Python语言	368
15.3.1 re模块的核心函数和方法	368
15.3.2 re模块的其他函数和方法	375
15.4 规则表达式的使用示例	379
15.5 练习	385
第16章 网络程序设计	388
16.1 介绍	388
16.1.1 什么是客户-服务器体系结构	388
16.1.2 客户-服务器网络程序设计	390
16.2 套接字：通信端点	391
16.2.1 什么是套接字	391
16.2.2 套接字地址：主机加端口	391
16.2.3 面向连接方式和无连接方式	392
16.3 使用Python语言进行网络程序设计	393
16.3.1 socket()模块函数	393
16.3.2 套接字对象的内建方法	393
16.3.3 创建一个TCP服务器	394
16.3.4 创建一个TCP客户	396
16.3.5 执行TCP客户-服务器应用程序	397
16.3.6 创建一个UDP服务器	398
16.3.7 创建一个UDP客户	399
16.3.8 执行UDP客户-服务器应用程序	400
16.3.9 其他socket模块函数	401
16.4 相关模块	401
16.5 练习	402
第17章 多线程程序设计	404
17.1 介绍	404
17.2 线程和进程	405
17.2.1 什么是进程	405
17.2.2 什么是线程	405
17.3 线程和Python	406
17.3.1 全局性解释器锁	406
17.3.2 退出线程	407
17.3.3 从Python访问线程	407
17.3.4 不使用线程时的程序设计情况	407
17.3.5 Python语言中的线程化模块	408
17.4 thread模块	409
17.5 threading模块	412
17.5.1 Thread类	413
17.5.2 菲波那契数列、阶乘、连加和	418
17.5.3 制造商-消费者问题和Queue模块	419
17.6 练习	422
第18章 使用Tkinter进行GUI程序设计	423
18.1 介绍	423
18.1.1 什么是Tcl、Tk和Tkinter	423
18.1.2 安装Tkinter并使它工作	423
18.1.3 再论客户-服务器体系结构	424
18.2 Tkinter和Python程序设计	424
18.2.1 Tkinter模块：把Tk添加到应用
程序中去	424
18.2.2 GUI程序设计简介	425
18.2.3 顶层窗口：Tkinter.Tk()	426
18.2.4 Tk素材	426
18.3 Tkinter程序示例	427
18.3.1 Label素材	427
18.3.2 Button素材	428
18.3.3 Label和Button素材	429
18.3.4 Label、Button和Scale素材	430
18.3.5 中规模Tkinter程序示例	431
18.4 相关模块和其他GUI	436
18.5 练习	436
第19章 Web程序设计	438
19.1 介绍	438
19.1.1 网上冲浪：客户-服务器计算	438
19.1.2 因特网	439
19.2 用Python网上冲浪：编写简单的Web
客户	441
19.2.1 统一资源定位器	441
19.2.2 urlparse模块	442
19.2.3 urllib模块	443
19.3 高级Web客户	446
19.4 CGI：帮助Web服务器处理客户数据	451
19.4.1 CGI简介	451
19.4.2 CGI应用程序	452
19.4.3 cgi模块	452
19.5 建立CGI应用程序	453
19.5.1 制作结果网页	453
19.5.2 制作表单和结果主页	456
19.5.3 完全以交互方式运行的Web站点	459
19.6 高级CGI	464
19.6.1 包含多个组成部分的表单的提交
操作和文件的上传	464
19.6.2 多取值输入域	465
19.6.3 cookie	465
19.6.4 高级CGI实战	466
19.7 Web服务器	474
19.8 相关模块	477
19.9 练习	478
第20章 扩展Python语言	483
20.1 介绍	483
20.1.1 什么是扩展	483
20.1.2 为什么要扩展Python语言	483
20.2 用编写扩展的办法扩展Python语言	484
20.2.1 编写应用程序代码	484
20.2.2 给代码加上程序接口	486
20.2.3 编译	490
20.2.4 引用的计数	494
20.2.5 线程化和GIL方面的考虑	495
20.3 相关论题	495
20.4 练习	496
第三部分 附 录
附录A 部分练习答案	497
附录B 参考信息	503
附录C Python操作符汇总	511
附录D Python版本2.0的新增功能	513
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python核心编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python高手之路 第3版
第1章　项目开始 1
1.1　Python版本　1
1.2　项目布局　2
1.3　版本编号　3
1.4　编码风格与自动检查　5
1.5　Joshua Harlow访谈　8
第2章　模块和库　13
2.1　导入系统　13
2.2　标准库　17
2.3　外部库　18
2.4　框架　20
2.5　Doug Hellmann访谈　21
第3章　管理API变化　27
第4章　时区陷阱　35
第5章　文档　39
5.1　Sphinx和reST入门　40
5.2　Sphinx模块　41
5.3　扩展Sphinx　44
第6章　分发　47
6.1　简史　47
6.2　使用pbr打包　49
6.3　Wheel格式　51
6.4　包的安装　52
6.5　和世界分享你的成果　53
6.6　Nick Coghlan访谈　58
6.7　入口点　59
6.7.1　可视化的入口点　60
6.7.2　使用控制台脚本　61
6.7.3　使用插件和驱动程序　63
第7章　虚拟环境　67
第8章　单元测试　71
8.1　基础知识　71
8.2　fixture　78
8.3　模拟（mocking）　79
8.4　场景测试　83
8.5　测试序列与并行　87
8.6　测试覆盖　91
8.7　使用虚拟环境和tox　93
8.8　测试策略　97
8.9　Robert Collins访谈　98
第9章　方法和装饰器　101
9.1　创建装饰器　101
9.2　Python中方法的运行机制　107
9.3　静态方法　109
9.4　类方法　110
9.5　抽象方法　111
9.6　混合使用静态方法、类方法和抽象方法　112
9.7　关于super的真相　115
第10章　函数式编程　119
10.1　生成器　120
10.2　列表推导　124
10.3　函数式函数的函数化　125
第11章　抽象语法树　133
11.1　用抽象语法树检查来扩展flake8　136
11.2　Hy　141
11.3　Paul Tagliamonte访谈　143
第12章　性能与优化　149
12.1　数据结构　149
12.2　性能分析　151
12.3　有序列表和二分查找　156
12.4　namedtuple和slots　158
12.5　memoization　163
12.6　PyPy　165
12.7　通过缓冲区协议实现零复制　166
12.8　Victor Stinner访谈　171
第13章　扩展与架构　175
13.1　多线程的注意事项　175
13.2　多进程与多线程　177
13.3　异步和事件驱动架构　179
13.4　面向服务架构　181
第14章　RDBMS和ORM　185
14.1　用Flask和PostgreSQL流化数据　188
14.2　Dimitri Fontaine访谈　193
第15章　Python 3支持策略　201
15.1　语言和标准库　202
15.2　外部库　205
15.3　使用six　205
第16章　少即是多　209
16.1　单分发器　209
16.2　上下文管理器　214
第17章　延伸阅读　217
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python高手之路 第3版
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据可视化编程实战
第1章 准备工作环境 1
1．1 介绍 1
1．2 安装matplotlib、Numpy和Scipy库 2
1．2．1 准备工作 2
1．2．2 操作步骤 3
1．2．3 工作原理 4
1．2．4 补充说明 4
1．3 安装virtualenv和virtualenvwrapper 4
1．3．1 准备工作 5
1．3．2 操作步骤 5
1．4 在Mac OS X上安装matplotlib 6
1．4．1 准备工作 6
1．4．2 操作步骤 6
1．5 在Windows上安装matplotlib 7
1．5．1 准备工作 7
1．5．2 操作步骤 8
1．5．3 补充说明 8
1．6 安装图像处理工具：Python图像库（PIL） 9
1．6．1 操作步骤 9
1．6．2 安装过程说明 9
1．6．3 补充说明 9
1．7 安装requests模块 10
1．7．1 操作步骤 10
1．7．2 requests使用说明 10
1．8 在代码中配置matplotlib参数 11
1．8．1 准备工作 11
1．8．2 操作步骤 11
1．8．3 代码解析 12
1．9 为项目设置matplotlib参数 12
1．9．1 准备工作 12
1．9．2 配置方法 12
1．9．3 配置过程说明 13
1．9．4 补充说明 14
第2章 了解数据 15
2．1 简介 16
2．2 从CSV文件导入数据 16
2．2．1 准备工作 16
2．2．2 操作步骤 16
2．2．3 工作原理 17
2．2．4 补充说明 18
2．3 从Microsoft Excel文件中导入数据 18
2．3．1 准备工作 19
2．3．2 操作步骤 19
2．3．3 工作原理 19
2．3．4 补充说明 20
2．4 从定宽数据文件导入数据 21
2．4．1 准备工作 21
2．4．2 操作步骤 21
2．4．3 工作原理 22
2．5 从制表符分隔的文件中读取数据 23
2．5．1 准备工作 23
2．5．2 操作步骤 23
2．5．3 工作原理 23
2．5．4 补充说明 24
2．6 从JSON数据源导入数据 24
2．6．1 准备工作 25
2．6．2 操作步骤 25
2．6．3 工作原理 25
2．6．4 补充说明 26
2．7 导出数据到JSON、CSV和Excel 27
2．7．1 准备工作 27
2．7．2 操作步骤 27
2．7．3 工作原理 30
2．7．4 补充说明 31
2．8 从数据库导入数据 31
2．8．1 准备工作 32
2．8．2 操作步骤 32
2．8．3 工作原理 35
2．8．4 补充说明 35
2．9 清理异常值 36
2．9．1 准备工作 36
2．9．2 操作步骤 36
2．9．3 补充说明 42
2．10 读取大块数据文件 42
2．10．1 操作步骤 42
2．10．2 工作原理 43
2．10．3 补充说明 44
2．11 读取流数据源 44
2．11．1 操作步骤 44
2．11．2 工作原理 45
2．11．3 补充说明 45
2．12 导入图像数据到NumPy数组 46
2．12．1 准备工作 46
2．12．2 操作步骤 46
2．12．3 工作原理 49
2．12．4 补充说明 50
2．13 生成可控的随机数据集合 51
2．13．1 准备工作 51
2．13．2 操作步骤 52
2．14 真实数据的噪声平滑处理 58
2．14．1 准备工作 58
2．14．2 操作步骤 58
2．14．3 工作原理 58
2．14．4 补充说明 62
第3章 绘制并定制化图表 65
3．1 简介 65
3．2 定义图表类型——柱状图、线形图和堆积柱状图 66
3．2．1 准备工作 66
3．2．2 操作步骤 66
3．2．3 工作原理 69
3．2．4 补充说明 70
3．3 简单的正弦图和余弦图 71
3．3．1 准备工作 71
3．3．2 操作步骤 71
3．4 设置坐标轴长度和范围 74
3．4．1 准备工作 74
3．4．2 操作步骤 74
3．4．3 工作原理 74
3．4．4 补充说明 76
3．5 设置图表的线型、属性和格式化字符串 76
3．5．1准备工作 77
3．5．2 操作步骤 77
3．5．3 工作原理 77
3．6 设置刻度、刻度标签和网格 80
3．6．1 准备工作 80
3．6．2 操作步骤 81
3．7 添加图例和注解 83
3．7．1 准备工作 84
3．7．2 操作步骤 84
3．7．3 工作原理 85
3．8 移动轴线到图中央 86
3．8．1 操作步骤 86
3．8．2 工作原理 87
3．8．3 补充说明 87
3．9 绘制直方图 87
3．9．1 准备工作 88
3．9．2 操作步骤 88
3．9．3 工作原理 90
3．10 绘制误差条形图 90
3．10．1 准备工作 90
3．10．2 操作步骤 90
3．10．3 工作原理 91
3．10．4 补充说明 92
3．11 绘制饼图 92
3．11．1 准备工作 92
3．11．2 操作步骤 93
3．12 绘制带填充区域的图表 94
3．12．1 准备工作 94
3．12．2 操作步骤 94
3．12．3 工作原理 95
3．12．4 补充说明 96
3．13 绘制带彩色标记的散点图 96
3．13．1 准备工作 96
3．13．2 操作步骤 96
3．13．3 工作原理 98
第4章 学习更多图表和定制化 99
4．1 简介 99
4．2 设置坐标轴标签的透明度和大小 100
4．2．1 准备工作 100
4．2．2 操作步骤 100
4．2．3 工作原理 101
4．2．4 补充说明 102
4．3 为图表线条添加阴影 102
4．3．1 准备工作 103
4．3．2 操作步骤 103
4．3．3 工作原理 105
4．3．4 补充说明 105
4．4 向图表添加数据表 106
4．4．1 准备工作 106
4．4．2 操作步骤 106
4．4．3 工作原理 107
4．4．4 补充说明 107
4．5 使用subplots(子区) 108
4．5．1 准备工作 108
4．5．2 操作步骤 108
4．5．3 工作原理 110
4．5．4 补充说明 110
4．6 定制化网格 110
4．6．1准备工作 110
4．6．2 操作步骤 112
4．6．3 工作原理 114
4．7 创建等高线图 114
4．7．1 准备工作 114
4．7．2 操作步骤 115
4．7．3 工作原理 117
4．8 填充图表底层区域 117
4．8．1 准备工作 118
4．8．2 操作步骤 118
4．8．3 工作原理 120
4．9 绘制极线图 121
4．9．1 准备工作 121
4．9．2 操作步骤 121
4．9．3 工作原理 123
4．10 使用极线条可视化文件系统树 123
4．10．1 准备工作 123
4．10．2 操作步骤 123
4．10．3 工作原理 126
第5章 创建3D可视化图表 129
5．1 简介 129
5．2 创建3D柱状图 129
5．2．1 准备工作 130
5．2．2 操作步骤 130
5．2．3 工作原理 132
5．2．4 补充说明 132
5．3 创建3D直方图 133
5．3．1 准备工作 134
5．3．2 操作步骤 134
5．3．3 工作原理 135
5．4 在matplotlib中创建动画 136
5．4．1 准备工作 136
5．4．2 操作步骤 137
5．4．3 工作原理 138
5．4．4 补充说明 139
5．5 用OpenGL制作动画 139
5．5．1 准备工作 140
5．5．2 操作步骤 141
5．5．3 工作原理 142
5．5．4 补充说明 142
第6章 用图像和地图绘制图表 145
6．1 简介 145
6．2 用PIL做图像处理 146
6．2．1 准备工作 146
6．2．2 操作步骤 149
6．2．3 工作原理 151
6．2．4 补充说明 151
6．3 绘制带图像的图表 151
6．3．1 准备工作 152
6．3．2 操作步骤 152
6．3．3 工作原理 154
6．4 在具有其他图形的图表中显示图像 156
6．4．1 准备工作 156
6．4．2 操作步骤 156
6．4．3 工作原理 158
6．4．4 补充说明 159
6．5 使用Basemap
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据可视化编程实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据结构与算法分析（第2版）
第1章 导论 1
1.1 本章目标 1
1.2 入门 1
1.3 何谓计算机科学 1
1.3.1 何谓编程 3
1.3.2 为何学习数据结构及抽象数据类型 4
1.3.3 为何学习算法 4
1.4 Python基础 5
1.4.1 数据 5
1.4.2 输入与输出 16
1.4.3 控制结构 18
1.4.4 异常处理 21
1.4.5 定义函数 23
1.4.6 Python面向对象编程：定义类 24
1.5 小结 37
1.6 关键术语 38
1.7 讨论题 38
1.8 编程练习 38
第2章 算法分析 40
2.1 本章目标 0
2.2 何谓算法分析 40
2.2.1 大O记法 43
2.2.2 异序词检测示例 46
2.3 Python数据结构的性能 49
2.3.1 列表 49
2.3.2 字典 53
2.4 小结 55
2.5 关键术语 55
2.6 讨论题 56
2.7 编程练习 56
第3章 基本数据结构 57
3.1 本章目标 57
3.2 何谓线性数据结构 57
3.3 栈 58
3.3.1 何谓栈 58
3.3.2 栈抽象数据类型 59
3.3.3 用Python实现栈 60
3.3.4 匹配括号 62
3.3.5 普通情况：匹配符号 64
3.3.6 将十进制数转换成二进制数 65
3.3.7 前序、中序和后序表达式 67
3.4 队列 75
3.4.1 何谓队列 75
3.4.2 队列抽象数据类型 75
3.4.3 用Python实现队列 76
3.4.4 模拟：传土豆 77
3.4.5 模拟：打印任务 79
3.5 双端队列 84
3.5.1 何谓双端队列 84
3.5.2 双端队列抽象数据类型 84
3.5.3 用Python实现双端队列 85
3.5.4 回文检测器 86
3.6 列表 88
3.6.1 无序列表抽象数据类型 88
3.6.2 实现无序列表：链表 89
3.6.3 有序列表抽象数据类型 97
3.6.4 实现有序列表 97
3.7 小结 100
3.8 关键术语 101
3.9 讨论题 101
3.10 编程练习 102
第4章 递归 105
4.1 本章目标 105
4.2 何谓递归 105
4.2.1 计算一列数之和 105
4.2.2 递归三原则 107
4.2.3 将整数转换成任意进制的字符串 108
4.3 栈帧：实现递归 110
4.4 递归可视化 111
4.5 复杂的递归问题 116
4.6 探索迷宫 118
4.7 动态规划 123
4.8 小结 128
4.9 关键术语 129
4.10 讨论题 129
4.11 编程练习 129
第5章 搜索和排序 131
5.1 本章目标 131
5.2 搜索 131
5.2.1 顺序搜索 131
5.2.2 二分搜索 134
5.2.3 散列 136
5.3 排序 145
5.3.1 冒泡排序 145
5.3.2 选择排序 147
5.3.3 插入排序 149
5.3.4 希尔排序 151
5.3.5 归并排序 153
5.3.6 快速排序 156
5.4 小结 159
5.5 关键术语 160
5.6 讨论题 160
5.7 编程练习 161
第6章 树 163
6.1 本章目标 163
6.2 示例 163
6.3 术语及定义 166
6.4 实现 168
6.4.1 列表之列表 168
6.4.2 节点与引用 171
6.5 二叉树的应用 173
6.5.1 解析树 173
6.5.2 树的遍历 179
6.6 利用二叉堆实现优先级队列 182
6.6.1 二叉堆的操作 182
6.6.2 二叉堆的实现 183
6.7 二叉搜索树 189
6.7.1 搜索树的操作 190
6.7.2 搜索树的实现 190
6.7.3 搜索树的分析 201
6.8 平衡二叉搜索树 202
6.8.1 AVL树的性能 203
6.8.2 AVL树的实现 204
6.8.3 映射实现总结 210
6.9 小结 211
6.10 关键术语 211
6.11 讨论题 211
6.12 编程练习 213
第7章 图及其算法 214
7.1 本章目标 214
7.2 术语及定义 215
7.3 图的抽象数据类型 216
7.3.1 邻接矩阵 216
7.3.2 邻接表 217
7.3.3 实现 218
7.4 宽度优先搜索 220
7.4.1 词梯问题 220
7.4.2 构建词梯图 221
7.4.3 实现宽度优先搜索 223
7.4.4 分析宽度优先搜索 226
7.5 深度优先搜索 226
7.5.1 骑士周游问题 226
7.5.2 构建骑士周游图 227
7.5.3 实现骑士周游 229
7.5.4 分析骑士周游 231
7.5.5 通用深度优先搜索 233
7.5.6 分析深度优先搜索 236
7.6 拓扑排序 236
7.7 强连通单元 238
7.8 最短路径问题 241
7.8.1 Dijkstra算法 243
7.8.2 分析Dijkstra算法 245
7.8.3 Prim算法 245
7.9 小结 248
7.10 关键术语 249
7.11 讨论题 249
7.12 编程练习 250
第8章 附加内容 251
8.1 本章目标 251
8.2 复习Python列表 251
8.3 复习递归 256
8.3.1 同余定理 257
8.3.2 幂剩余 257
8.3.3 最大公因数与逆元 258
8.3.4 RSA算法 261
8.4 复习字典：跳表 264
8.4.1 映射抽象数据类型 265
8.4.2 用Python实现字典 265
8.5 复习树：量化图片 274
8.5.1 数字图像概述 274
8.5.2 量化图片 275
8.5.3 使用八叉树改进量化算法 277
8.6 复习图：模式匹配 284
8.6.1 生物学字符串 285
8.6.2 简单比较 285
8.6.3 使用图：DFA 287
8.6.4 使用图：KMP 288
8.7 小结 291
8.8 关键术语 291
8.9 讨论题 291
8.10 编程练习 292
附录A Python图形包 293
附录B Python资源 294
参考资料295
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据结构与算法分析（第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python机器学习实践指南
第1章Python机器学习的生态系统1
1.1数据科学／机器学习的工作流程2
1.1.1获取2
1.1.2检查和探索2
1.1.3清理和准备3
1.1.4建模3
1.1.5评估3
1.1.6部署3
1.2Python库和功能3
1.2.1获取4
1.2.2检查4
1.2.3准备20
1.2.4建模和评估26
1.2.5部署34
1.3设置机器学习的环境34
1.4小结34
第2章构建应用程序，发现低价的公寓35
2.1获取公寓房源数据36
使用import.io抓取房源数据36
2.2检查和准备数据38
2.2.1分析数据46
2.2.2可视化数据50
2.3对数据建模51
2.3.1预测54
2.3.2扩展模型57
2.4小结57
第3章构建应用程序，发现低价的机票58
3.1获取机票价格数据59
3.2使用高级的网络爬虫技术检索票价数据60
3.3解析DOM以提取定价数据62
通过聚类技术识别异常的票价66
3.4使用IFTTT发送实时提醒75
3.5整合在一起78
3.6小结82
第4章使用逻辑回归预测IPO市场83
4.1IPO市场84
4.1.1什么是IPO84
4.1.2近期IPO市场表现84
4.1.3基本的IPO策略93
4.2特征工程94
4.3二元分类103
4.4特征的重要性108
4.5小结111
第5章创建自定义的新闻源112
5.1使用Pocket应用程序，创建一个监督训练的集合112
5.1.1安装Pocket的Chrome扩展程序113
5.1.2使用PocketAPI来检索故事114
5.2使用embed.lyAPI下载故事的内容119
5.3自然语言处理基础120
5.4支持向量机123
5.5IFTTT与文章源、Google表单和电子邮件的集成125
通过IFTTT设置新闻源和Google表单125
5.6设置你的每日个性化新闻简报133
5.7小结137
第6章预测你的内容是否会广为流传138
6.1关于病毒性，研究告诉我们了些什么139
6.2获取分享的数量和内容140
6.3探索传播性的特征149
6.3.1探索图像数据149
6.3.2探索标题152
6.3.3探索故事的内容156
6.4构建内容评分的预测模型157
6.5小结162
第7章使用机器学习预测股票市场163
7.1市场分析的类型164
7.2关于股票市场，研究告诉我们些什么165
7.3如何开发一个交易策略166
7.3.1延长我们的分析周期172
7.3.2使用支持向量回归，构建我们的模型175
7.3.3建模与动态时间扭曲182
7.4小结186
第8章建立图像相似度的引擎187
8.1图像的机器学习188
8.2处理图像189
8.3查找相似的图像191
8.4了解深度学习195
8.5构建图像相似度的引擎198
8.6小结206
第9章打造聊天机器人207
9.1图灵测试207
9.2聊天机器人的历史208
9.3聊天机器人的设计212
9.4打造一个聊天机器人217
9.5小结227
第10章构建推荐引擎228
10.1协同过滤229
10.1.1基于用户的过滤230
10.1.2基于项目的过滤233
10.2基于内容的过滤236
10.3混合系统237
10.4构建推荐引擎238
10.5小结251
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python机器学习实践指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python性能分析与优化
版权声明	阅读
译者序	阅读
前言	阅读
致谢	阅读
第 1 章　性能分析基础	阅读
第 2 章　性能分析器
第 3 章　可视化——利用GUI理解性能分析数据
第 4 章　优化每一个细节
第 5 章　多线程与多进程
第 6 章　常用的优化方法
第 7 章　用Numba、Parakeet和pandas实现极速数据处理
第 8 章　付诸实践
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python性能分析与优化
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>NLTK基础教程(用NLTK和Python库构建机器学习应用)
第1章自然语言处理简介1
1.1为什么要学习NLP2
1.2先从Python开始吧5
1.2.1列表5
1.2.2自助功能6
1.2.3正则表达式8
1.2.4字典9
1.2.5编写函数10
1.3向NLTK迈进11
1.4练习16
1.5小结17
第2章文本的歧义及其清理18
2.1何谓文本歧义18
2.2文本清理20
2.3语句分离器21
2.4标识化处理22
2.5词干提取23
2.6词形还原24
2.7停用词移除25
2.8罕见词移除26
2.9拼写纠错26
2.10练习27
2.11小结28
第3章词性标注29
3.1何谓词性标注29
3.1.1Stanford标注器32
3.1.2深入了解标注器33
3.1.3顺序性标注器35
3.1.4Brill标注器37
3.1.5基于机器学习的标注器37
3.2命名实体识别（NER）38
3.3练习40
3.4小结41
第4章文本结构解析43
4.1浅解析与深解析43
4.2两种解析方法44
4.3为什么需要进行解析44
4.4不同的解析器类型46
4.4.1递归下降解析器46
4.4.2移位—归约解析器46
4.4.3图表解析器46
4.4.4正则表达式解析器47
4.5依存性文本解析48
4.6语块分解50
4.7信息提取53
4.7.1命名实体识别（NER）53
4.7.2关系提取54
4.8小结55
第5章NLP应用56
5.1构建第一个NLP应用57
5.2其他NLP应用60
5.2.1机器翻译60
5.2.2统计型机器翻译61
5.2.3信息检索62
5.2.4语音识别64
5.2.5文本分类65
5.2.6信息提取66
5.2.7问答系统67
5.2.8对话系统67
5.2.9词义消歧67
5.2.10主题建模68
5.2.11语言检测68
5.2.12光符识别68
5.3小结68
第6章文本分类70
6.1机器学习71
6.2文本分类72
6.3取样操作74
6.3.1朴素贝叶斯法76
6.3.2决策树79
6.3.3随机梯度下降法80
6.3.4逻辑回归81
6.3.5支持向量机81
6.4随机森林算法83
6.5文本聚类83
6.6文本中的主题建模84
6.7参考资料87
6.8小结87
第7章Web爬虫88
7.1Web爬虫88
7.2编写第一个爬虫程序89
7.3Scrapy库中的数据流92
7.3.1Scrapy库的shell93
7.3.2目标项98
7.4生成网站地图的蜘蛛程序99
7.5目标项管道100
7.6参考资料102
7.7小结102
第8章NLTK与其他Python库的搭配运用104
8.1NumPy104
8.1.1多维数组105
8.1.2基本运算106
8.1.3从数组中提取数据107
8.1.4复杂矩阵运算108
8.2SciPy112
8.2.1线性代数113
8.2.2特征值与特征向量113
8.2.3稀疏矩阵114
8.2.4优化措施115
8.3pandas117
8.3.1读取数据117
8.3.2数列119
8.3.3列转换121
8.3.4噪声数据121
8.4matplotlib123
8.4.1子图绘制123
8.4.2添加坐标轴124
8.4.3散点图绘制125
8.4.4条形图绘制126
8.4.53D绘图126
8.5参考资料126
8.6小结127
第9章Python中的社交媒体挖掘128
9.1数据收集128
9.2数据提取132
9.3地理可视化134
9.3.1影响力检测135
9.3.2Facebook135
9.3.3有影响力的朋友139
9.4小结141
第10章大规模文本挖掘142
10.1在Hadoop上使用Python的不同方式142
10.1.1Python的流操作143
10.1.2Hive／Pig下的UDF143
10.1.3流封装器143
10.2Hadoop上的NLTK144
10.2.1用户定义函数（UDF）144
10.2.2Python的流操作146
10.3Hadoop上的Scikit—learn147
10.4PySpark150
10.5小结153
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>NLTK基础教程(用NLTK和Python库构建机器学习应用)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>量化投资：以Python为工具
第1 部分Python 入门 1
第1 章Python 简介与安装使用 2
1.1 Python 概述 2
1.2 Python 的安装 3
1.2.1 下载安装Python 执行文件 3
1.2.2 下载安装Anaconda 4
1.2.3 多种Python 版本并存 6
1.3 Python 的简单使用 7
1.4 交互对话环境IPython 8
1.4.1 IPython 的安装 8
1.4.2 IPython 的使用 9
1.4.3 IPython 功能介绍 10
第2 章Python 代码的编写与执行 14
2.1 创建Python 脚本文件 15
2.1.1 记事本 15
2.1.2 Python 默认的IDLE 环境 15
2.1.3 专门的程序编辑器 15
2.2 执行.py 文件 17
2.2.1 IDLE 环境自动执行 17
2.2.2 在控制台cmd 中执行 18
2.2.3 在Annaconda Prompt 中执行 19
2.3 Python 编程小技巧 20
2.3.1 Python 行 20
2.3.2 Python 缩进 21
第3 章Python 对象类型初探 23
3.1 Python 对象 23
3.2 变量命名规则 24
3.3 数值类型 25
3.3.1 整数 25
3.3.2 浮点数 26
3.3.3 布尔类型 26
3.3.4 复数 27
3.4 字符串 28
3.5 列表 29
3.6 可变与不可变 30
3.7 元组 32
3.8 字典 33
3.9 集合 33
第4 章Python 集成开发环境：Spyder 介绍 36
4.1 代码编辑器 37
4.2 代码执行Console 39
4.3 变量查看与编辑 40
4.4 当前工作路径与文件管理 41
4.5 帮助文档与在线帮助 42
4.6 其他功能 43
第5 章Python 运算符与使用 44
5.1 常用运算符 44
5.1.1 算术运算符 45
5.1.2 赋值运算符 46
5.1.3 比较运算符 47
5.1.4 逻辑运算符 48
5.1.5 身份运算符 49
5.1.6 成员运算符 51
5.1.7 运算符的优先级 52
5.2 具有运算功能的内置函数 52
第6 章Python 常用语句 55
6.1 赋值语句 55
6.1.1 赋值含义与简单赋值 55
6.1.2 多重赋值 57
6.1.3 多元赋值 58
6.1.4 增强赋值 58
6.2 条件语句 59
6.3 循环语句 60
6.3.1 for 循环 60
6.3.2 while 循环 61
6.3.3 嵌套循环 62
6.3.4 break、continue 等语句 62
第7 章函数 66
7.1 函数的定义与调用 66
7.2 函数的参数 68
7.3 匿名函数 71
7.4 作用域 72
第8 章面向对象75
8.1 类 75
8.2 封装 77
8.3 继承（Inheritance） 79
第9 章Python 标准库与数据操作 82
9.1 模块、包和库 82
9.1.1 模块 82
9.1.2 包 84
9.1.3 库 85
9.2 Python 标准库介绍 85
9.3 Python 内置数据类型与操作 91
9.3.1 序列类型数据操作 91
9.3.1.1 list 类型与操作 91
9.3.1.2 tuple 类型与操作 95
9.3.1.3 range 类型与操作 97
9.3.1.4 字符串操作 98
9.3.2 字典类型操作 103
9.3.3 集合操作 106
第10 章常用第三方库：Numpy 库与多维数组 111
10.1 NumPy 库 111
10.2 创建数组 111
10.3 数组元素索引与切片 115
10.4 数组运算 118
第11 章常用第三方库：Pandas 与数据处理 120
11.1 Series 类型数据 120
11.1.1 Series 对象的创建 120
11.1.2 Series 对象的元素提取与切片 122
11.1.2.1 调用方法提取元素 122
11.1.2.2 利用位置或标签提取元素与切片 123
11.1.3 时间序列 124
11.2 DataFrame 类型数据 128
11.2.1 创建DataFrame 对象 128
11.2.2 查看DataFrame 对象 130
11.2.3 DataFrame 对象的索引与切片 131
11.2.4 DataFrame 的操作 135
11.2.5 DataFrame 的运算 139
11.3 数据规整化 142
11.3.1 缺失值的处理 142
11.3.1.1 缺失值的判断 142
11.3.1.2 选出不是缺失值的数据 143
11.3.2 缺失值的填充 143
11.3.3 缺失值的选择删除 145
11.3.4 删除重复数据 146
第12 章常用第三方库：Matplotlib 库与数据可视化 149
12.1 Matplotlib 简介 149
12.2 修改图像属性 152
12.2.1 坐标 152
12.2.1.1 更改坐标轴范围 152
12.2.1.2 设定坐标标签与显示角度 153
12.2.2 添加文本 155
12.2.2.1 添加标题 155
12.2.2.2 中文显示问题 157
12.2.2.3 设定坐标轴标签 159
12.2.2.4 增加图形背景grid 160
12.2.2.5 增加图例 161
12.2.3 多种线条属性 162
12.2.3.1 线条的类型 162
12.2.3.2 图形的颜色 163
12.2.3.3 点的形状类型 164
12.2.3.4 线条宽度 166
12.3 常见图形的绘制 167
12.3.1 柱状图（Bar charts） 167
12.3.2 直方图 170
12.3.3 饼图 172
12.3.4 箱线图 172
12.4 Figure、Axes 对象与多图绘制 173
12.4.1 Figure、Axes 对象 174
12.4.2 多图绘制 176
12.4.2.1 多个子图绘制 176
12.4.2.2 一个图中多条曲线绘制 178
第2 部分统计学基础 180
第13 章描述性统计 181
13.1 数据类型 182
13.2 图表 182
13.2.1 频数分布表 182
13.2.2 直方图 183
13.3 数据的位置 184
13.4 数据的离散度 186
第14 章随机变量简介 190
14.1 概率与概率分布 190
14.1.1 离散型随机变量 190
14.1.2 连续型随机变量 192
14.2 期望值与方差 193
14.3 二项分布 194
14.4 正态分布 197
14.5 其他连续分布 199
14.5.1 卡方分布 199
14.5.2 t 分布 199
14.5.3 F 分布 200
14.6 变量的关系 202
14.6.1 联合概率分布 202
14.6.2 变量的独立性 203
14.6.3 变量的相关性 203
14.6.4 上证综指与深证综指的相关性分析 205
第15 章推断统计 208
15.1 参数估计 208
15.1.1 点估计 209
15.1.2 区间估计 209
15.2 案例分析 212
15.3 假设检验 213
15.3.1 两类错误 214
15.3.2 显著性水平与p 值 215
15.3.3 确定小概率事件 215
15.4 t 检验 216
15.4.1 单样本t 检验 216
15.4.2 独立样本t 检验 217
15.4.3 配对样本t 统计量的构造 218
第16 章方差分析 221
16.1 方差分析之思想 221
16.2 方差分析之原理 222
16.2.1 离差平方和 223
16.2.2 自由度 224
16.2.3 显著性检验 225
16.3 方差分析之Python 实现 226
16.3.1 单因素方差分析 227
16.3.2 多因素方差分析 228
16.3.3 析因方差分析 228
第17 章回归分析 231
17.1 一元线性回归模型 231
17.1.1 一元线性回归模型 231
17.1.2 最小平方法 232
17.2 模型拟合度 233
17.3 古典假设条件下^_、^ _ 之统计性质 234
17.4 显著性检验 235
17.5 上证综指与深证成指的回归分析与Python 实践 236
17.5.1 Python 拟合回归函数 236
17.5.2 绘制回归诊断图 238
17.6 多元线性回归模型 240
17.7 多元线性回归案例分析 241
17.7.1 价格水平对GDP 的影响 241
17.7.2 考量自变量共线性因素的新模型 243
第3 部分金融理论、投资组合与量化选股246
第18 章资产收益率和风险 247
18.1 单期与多期简单收益率 248
18.1.1 单期简单收益率 248
18.1.2 多期简单收益率 249
18.1.3 Python 函数计算简单收益率 252
18.1.4 单期与多期简单收益率的关系 252
18.1.5 年化收益率 254
18.1.6 考虑股利分红的简单收益率 256
18.2 连续复利收益率 259
18.2.1 多期连续复利收益率 260
18.2.2 单期与多期连续复利收益率的关系 262
18.3 绘制收益图 263
18.4 资产风险的来源 264
18.4.1 市场风险 264
18.4.2 利率风险 264
18.4.3 汇率风险 265
18.4.4 流动性风险 265
18.4.5 信用风险 265
18.4.6 通货膨胀风险 266
18.4.7 营运风险 266
18.5 资产风险的测度 266
18.5.1 方差 266
18.5.2 下行风险 268
18.5.3 风险价值 269
18.5.4 期望亏空 271
18.5.5 最大回撤 271
第19 章投资组合理论及其拓展 276
19.1 投资组合的收益率与风险 276
19.2 Markowitz 均值-方差模型 280
19.3 Markowitz 模型之Python 实现 285
19.4 Black-Litterman 模型 289
第20 章资本资产定价模型（CAPM） 298
20.1 资本资产定价模型的核心思想 298
20.2 CAPM 模型的应用 299
20.3 Python 计算单资产CAPM 实例 301
20.4 CAPM 模型的评价 305
第21 章Fama-French 三因子模型 308
21.1 Fama-French 三因子模型的基本思想 308
21.2 三因子模型之Python 实现 310
21.3 三因子模型的评价 315
第4 部分时间序列简介与配对交易 317
第22 章时间序列基本概念 318
22.1 认识时间序列 318
22.2 Python 中的时间序列数据 320
22.3 选取特定日期的时间序列数据 321
22.4 时间序列数据描述性统计 323
第23 章时间序列的基本性质 326
23.1 自相关性 326
23.1.1 自协方差 327
23.1.2 自相关系数 327
23.1.3 偏自相关系数 327
23.1.4 acf( ) 函数与pacf( ) 函数 328
23.1.5 上证综指的收益率指数的自相关性判断 328
23.2 平稳性 331
23.2.1 强平稳 331
23.2.2 弱平稳 332
23.2.3 强平稳与弱平稳的区别 332
23.3 上证综指的平稳性检验 333
23.3.1 观察时间序列图 333
23.3.2 观察序列的自相关图和偏自相关图 333
23.3.3 单位根检验 336
23.4 白噪声 340
23.4.1 白噪声 340
23.4.2 白噪声检验——Ljung-Box 检验 341
23.4.3 上证综合指数的白噪声检验 343
第24 章时间序列预测 345
24.1 移动平均预测 345
24.1.1 简单移动平均 345
24.1.2 加权移动平均 346
24.1.3 指数加权移动平均 346
24.2 ARMA 模型预测 347
24.2.1 自回归模型 348
24.2.2 移动平均模型 350
24.3 自回归移动平均模型 350
24.4 ARMA 模型的建模过程 351
24.5 CPI 数据的ARMA 短期预测 351
24.5.1 序列识别 351
24.5.2 模型识别与估计 354
24.5.3 模型诊断 356
24.5.4 运用模型进行预测 359
24.6 股票收益率的平稳时间序列建模 359
第25 章GARCH 模型 364
25.1 资产收益率的波动率与ARCH 效应 364
25.2 ARCH 模型和GARCH 模型 365
25.2.1 ARCH 模型 365
25.2.2 GARCH 模型 366
25.3 ARCH 效应检验 368
25.4 GARCH 模型构建 370
第26 章配对交易策略 372
26.1 什么是配对交易 372
26.2 配对交易的思想 373
26.3 配对交易的步骤 374
26.3.1 股票对的选择 374
26.3.2 配对交易策略的制定 383
26.4 构建PairTrading 类 387
26.5 Python 实测配对交易交易策略 391
第5 部分技术指标与量化投资399
第27 章K 线图 400
27.1 K 线图简介 400
27.2 Python 绘制上证综指K 线图 403
27.3 Python 捕捉K 线图的形态 405
27.3.1 Python 捕捉“早晨之星” 406
27.3.2 Python 语言捕捉“乌云盖顶”形态 410
第28 章动量交易策略 416
28.1 动量概念介绍 416
28.2 动量效应产生的原因 416
28.3 价格动量的计算公式 417
28.3.1 作差法求动量值 417
28.3.2 做除法求动量值 418
28.4 编写动量函数momentum( ) 420
28.5 万科股票2015 年走势及35 日动量线 420
28.6 动量交易策略的一般思路 423
第29 章RSI 相对强弱指标 429
29.1 RSI 基本概念 429
29.2 Python 计算RSI 值 429
29.3 Python 编写rsi( ) 函数 434
29.4 RSI 天数的差异 435
29.5 RSI 指标判断股票超买和超卖状态 436
29.6 RSI 的“黄金交叉”与“死亡交叉” 437
29.7 交通银行股票RSI 指标交易实测 438
29.7.1 RSI 捕捉交通银行股票买卖点 438
29.7.2 RSI 交易策略执行及回测 440
第30 章均线系统策略 446
30.1 简单移动平均 446
30.1.1 简单移动平均数 446
30.1.2 简单移动平均函数 448
30.1.3 期数选择 449
30.2 加权移动平均 449
30.2.1 加权移动平均数 449
30.2.2 加权移动平均函数 451
30.3 指数加权移动平均 452
30.3.1 指数加权移动平均数 452
30.3.2 指数加权移动平均函数 454
30.4 创建movingAverage 模组 454
30.5 常用平均方法的比较 455
30.6 中国银行股价数据与均线分析 456
30.7 均线时间跨度 458
30.8 中国银行股票均线系统交易 459
30.8.1 简单移动平均线制定中国银行股票的买卖点 459
30.8.2 双均线交叉捕捉中国银行股票的买卖点 462
30.9 异同移动平均线（MACD） 464
30.9.1 MACD 的求值过程 464
30.9.2 异同均线（MACD）捕捉中国银行股票的买卖点 466
30.10 多种均线指标综合运用模拟实测 468
第31 章通道突破策略 473
31.1 通道突破简介 473
31.2 唐奇安通道 473
31.2.1 唐奇安通道刻画 473
31.2.2 Python 捕捉唐奇安通道突破 476
31.3 布林带通道 478
31.4 布林带通道与市场风险 481
31.5 通道突破交易策略的制定 484
31.5.1 一般布林带上下通道突破策略 484
31.5.2 特殊布林带通道突破策略 485
第32 章随机指标交易策略 489
32.1 什么是随机指标（KDJ） 489
32.2 随机指标的原理 489
32.3 KDJ 指标的计算公式 490
32.3.1 未成熟随机指标RSV 490
32.3.2 K、D 指__________标计算 495
32.3.3 J 指标计算 497
32.3.4 KDJ 指标简要分析 498
32.4 KDJ 指标的交易策略 499
32.5 KDJ 指标交易实测 499
32.5.1 KD 指标交易策略 499
32.5.2 KDJ 指标交易策略 503
32.5.3 K 线、D 线“金叉”与“死叉” 504
第33 章量价关系分析 509
33.1 量价关系概述 509
33.2 量价关系分析 509
33.2.1 价涨量增 510
33.2.2 价涨量平 512
33.2.3 价涨量缩 512
33.2.4 价平量增 513
33.2.5 价平量缩 514
33.2.6 价跌量增 514
33.2.7 价跌量平 515
33.2.8 价跌量缩 515
33.3 不同价格段位的成交量 516
33.4 成交量与均线思想结合制定交易策略 518
第34 章OBV 指标交易策略 524
34.1 OBV 指标概念 524
34.2 OBV 指标计算方法 524
34.3 OBV 指标的理论依据 527
34.4 OBV 指标的交易策略制定 527
34.5 OBV 指标交易策略的Python 实测 528
34.6 OBV 指标的应用原则 530
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>量化投资：以Python为工具
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>跟老齐学Python
第1季  基础
第0章  预备	2
0.1  关于Python的故事	2
0.1.1  Python的昨天、今天和明天	3
0.1.2  Python的特点	4
0.1.3  Python哲学	5
0.2  从小工到专家	5
0.2.1  零基础	6
0.2.2  阅读代码	6
0.2.3  调试程序	7
0.3  安装Python	7
0.3.1  Ubuntu系统	8
0.3.2  Windows系统	9
0.3.3  Mac OS X系统	9
0.4  集成开发环境（IDE）	9
0.4.1  值得纪念的时刻：Hello world	9
0.4.2  集成开发环境概述	10
0.4.3  Python的IDE	12
第1章  基本的对象类型	13
1.1  数字	13
1.1.1  数字	14
1.1.2  变量	15
1.1.3  简单的四则运算	16
1.1.4  整数溢出问题	17
1.2  除法	17
1.2.1  整数与整数相除	17
1.2.2  浮点数与整数相除	18
1.2.3  引用模块解决除法问题	19
1.2.4  余数	20
1.2.5  四舍五入	20
1.3  常用数学函数和运算优先级	21
1.3.1  使用math模块	21
1.3.2  两个函数	23
1.3.3  运算优先级	23
1.4  第一个简单的程序	24
1.4.1  程序	24
1.4.2  用IDE编程	25
1.4.3  Hello,World	25
1.4.4  解一道题目	26
1.5  字符串	28
1.5.1  字符串	29
1.5.2  变量和字符串	30
1.5.3  连接字符串	31
1.5.4  转义字符	33
1.5.5  原始字符串	34
1.5.6  raw_input和print	34
1.5.7  索引和切片	37
1.5.8  基本操作	39
1.5.9  常用的字符串方法	42
1.5.10  字符串格式化输出	45
1.6  字符编码	47
1.6.1  编码	47
1.6.2  计算机中的字符编码	49
1.6.3  encode和decode	50
1.6.4  避免中文是乱码	51
1.7  列表	52
1.7.1  定义	52
1.7.2  索引和切片	53
1.7.3  反转	54
1.7.4  对list的操作	55
1.7.5  列表的函数	56
1.8  比较列表和字符串	66
1.8.1  相同点	66
1.8.2  区别	67
1.8.3  多维列表	68
1.8.4  列表和字符串的互相转化	69
1.8.5  "[sep]".join(list)	69
1.9  元组	70
1.9.1  定义	70
1.9.2  索引和切片	71
1.9.3  用途	72
1.10  字典	72
1.10.1  创建字典	73
1.10.2  访问字典的值	74
1.10.3  基本操作	75
1.10.4  字符串格式化输出	76
1.10.5  相关概念	77
1.10.6  字典的函数	77
1.11  集合	86
1.11.1  创建集合	86
1.11.2  集合的函数	88
1.11.3  补充知识	91
1.11.4  不变的集合	91
1.11.5  集合运算	92
第2章  语句和文件	95
2.1  运算符	95
2.1.1  算术运算符	95
2.1.2  比较运算符	96
2.1.3  逻辑运算符	97
2.2  简单语句	99
2.2.1  print	100
2.2.2  import	101
2.2.3  赋值	102
2.3  条件语句	104
2.3.1  if语句	104
2.3.2  if … elif … else	105
2.3.3  三元操作符	107
2.4  for循环	107
2.4.1  简单的for循环	107
2.4.2  range(start,stop[, step])	109
2.4.3  for的对象	112
2.4.4  zip()	114
2.4.5  enumerate()	117
2.4.6  列表解析	119
2.5  while循环	120
2.5.1  猜数字游戏	120
2.5.2  break和continue	123
2.5.3  while...else	123
2.5.4  for...else	124
2.6  文件	124
2.6.1  打开文件	125
2.6.2  创建文件	127
2.6.3  使用with	128
2.6.4  文件的状态	129
2.6.5  read/readline/readlines	129
2.6.6  读很大的文件	132
2.6.7  seek( )	133
2.7  迭代	134
2.7.1  迭代工具	135
2.7.2  文件迭代器	137
第3章  函数	139
3.1  理解函数	139
3.1.1  变量不仅仅是数	140
3.1.2  建立简单函数	140
3.1.3  建立实用的函数	141
3.1.4  关于命名	143
3.1.5  调用函数	144
3.1.6  注意事项	145
3.1.7  返回值	146
3.1.8  函数中的文档	148
3.2  名词辨析	149
3.2.1  参数和变量	149
3.2.2  全局变量和局部变量	150
3.2.3  命名空间	151
3.3  参数收集	152
3.3.1  参数收集	153
3.3.2  更优雅的方式	155
3.3.3  综合贯通	156
3.4  特殊函数	158
3.4.1  递归	158
3.4.2  几个特殊函数	160
3.5  练习	166
3.5.1  解一元二次方程	166
3.5.2  统计考试成绩	168
3.5.3  找质数	170
3.5.4  编写函数的注意事项	171
第2季  进阶
第4章  类	174
4.1  基本概念	174
4.1.1  问题空间	175
4.1.2  对象	175
4.1.3  面向对象	176
4.1.4  类	177
4.1.5  编写类	178
4.2  详解类	179
4.2.1  新式类和旧式类	179
4.2.2  创建类	181
4.2.3  类中的函数（方法）	183
4.2.4  类和实例	185
4.2.5  self的作用	185
4.2.6  文档字符串	186
4.3  辨析有关概念	187
4.3.1  类属性和实例属性	187
4.3.2  数据流转	189
4.3.3  命名空间	191
4.3.4  作用域	193
4.4  继承	194
4.4.1  基本概念	195
4.4.2  多重继承	196
4.4.3  多重继承的顺序	197
4.4.4  super函数	198
4.5  方法	200
4.5.1  绑定方法	200
4.5.2  非绑定方法	201
4.5.3  静态方法和类方法	201
4.6  多态和封装	203
4.6.1  多态	203
4.6.2  封装和私有化	206
4.7  特殊属性和方法	208
4.7.1  __dict__	208
4.7.2  __slots__	212
4.7.3  __getattr__、__setattr__和其他类似方法	213
4.7.4  获得属性顺序	217
4.8  迭代器	218
4.8.1  __iter__()	218
4.8.2  range()和xrange()	220
4.9  生成器	221
4.9.1  简单的生成器	221
4.9.2  定义和执行过程	223
4.9.3  yield	224
4.9.4  生成器方法	225
第5章  错误和异常	227
5.1  错误	227
5.2  异常	227
5.3  处理异常	230
5.3.1  try...except...	230
5.3.2  处理多个异常	232
5.3.3  else子句	234
5.3.4  finally子句	235
5.3.5  assert语句	236
第6章  模块	239
6.1  编写模块	239
6.1.1  模块是程序	239
6.1.2  模块的位置	241
6.1.3  __all__在模块中的作用	243
6.1.4  包和库	245
6.2  自带电池	245
6.2.1  引用方式	246
6.2.2  深入探究	247
6.2.3  帮助、文档和源码	248
6.3  标准库	250
6.3.1  sys	250
6.3.2  copy	253
6.3.3  os	254
6.3.4  heapq	261
6.3.5  deque	266
6.3.6  calendar	267
6.3.7  time	269
6.3.8  datetime	273
6.3.9  urllib	275
6.3.10  urllib2	279
6.3.11  XML	280
6.3.12  JSON	287
6.4  第三方库	289
6.4.1  安装第三方库	289
6.4.2  以requests为例	290
第7章  保存数据	295
7.1  pickle	295
7.2  shelve	297
7.3  MySQL数据库	299
7.3.1  MySQL概况	299
7.3.2  安装	300
7.3.3  运行	300
7.3.4  安装python-MySQLdb	301
7.3.5  连接数据库	302
7.3.6  数据库表	303
7.3.7  操作数据库	304
7.3.8  更新数据	309
7.4  MongoDB数据库	310
7.4.1  安装MongoDB	311
7.4.2  启动	311
7.4.3  安装pymongo	312
7.4.4  连接MongoDB	312
7.4.5  编辑	314
7.5  SQLite数据库	317
7.5.1  建立连接对象	318
7.5.2  游标对象	318
7.6  电子表格	320
7.6.1  openpyl	321
7.6.2  其他第三方库	326
第3季  实战
第8章  用Tornado做网站	328
8.1  为做网站而准备	328
8.1.1  开发框架	328
8.1.2  Python框架	329
8.1.3  Tornado	329
8.1.4  安装Tornado	330
8.2  分析Hello	331
8.2.1  Web服务器工作流程	332
8.2.2  解剖标本	332
8.3  做个简单的网站	336
8.3.1  基本结构	336
8.3.2  一个基本架势	337
8.3.3  连接数据库	340
8.3.4  登录界面	340
8.3.5  数据传输	345
8.3.6  数据处理	347
8.3.7  模板	350
8.3.8  转义字符	355
8.3.9  模板继承	357
8.3.10  CSS	358
8.3.11  cookie和安全	359
8.3.12  XSRF	362
8.3.13  用户验证	364
8.3.14  相关概念	367
8.3.15  Tornado的同步	368
8.3.16  异步设置	369
第9章  科学计算	373
9.1  为计算做准备	373
9.1.1  闲谈	373
9.1.2  安装	374
9.1.3  基本操作	374
9.2  Pandas	376
9.2.1  基本的数据结构	376
9.2.2  读取CSV文件	382
9.2.3  处理股票数据	387
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>跟老齐学Python
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>数据科学导论
译者序
前言
第1章　新手上路1
1.1　数据科学与Python简介1
1.2　Python的安装2
1.2.1　Python 2还是Python 33
1.2.2　分步安装3
1.2.3　Python核心工具包一瞥4
1.2.4　工具包的安装7
1.2.5　工具包升级9
1.3　科学计算发行版9
1.3.1　Anaconda10
1.3.2　Enthought Canopy10
1.3.3　PythonXY10
1.3.4　WinPython10
1.4　IPython简介10
1.4.1　IPython Notebook12
1.4.2　本书使用的数据集和代码18
1.5　小结25
第2章　数据改写26
2.1　数据科学过程26
2.2　使用pandas进行数据加载与预处理27
2.2.1　数据快捷加载27
2.2.2　处理问题数据30
2.2.3　处理大数据集32
2.2.4　访问其他数据格式36
2.2.5　数据预处理37
2.2.6　数据选择39
2.3　使用分类数据和文本数据41
2.4　使用NumPy进行数据处理49
2.4.1　NumPy中的N维数组49
2.4.2　NumPy ndarray对象基础50
2.5　创建NumPy数组50
2.5.1　从列表到一维数组50
2.5.2　控制内存大小51
2.5.3　异构列表52
2.5.4　从列表到多维数组53
2.5.5　改变数组大小54
2.5.6　利用NumPy函数生成数组56
2.5.7　直接从文件中获得数组57
2.5.8　从pandas提取数据57
2.6　NumPy快速操作和计算58
2.6.1　矩阵运算60
2.6.2　NumPy数组切片和索引61
2.6.3　NumPy数组堆叠63
2.7　小结65
第3章　数据科学流程66
3.1　EDA简介66
3.2　特征创建70
3.3　维数约简72
3.3.1　协方差矩阵72
3.3.2　主成分分析73
3.3.3　一种用于大数据的PCA变型—Randomized PCA76
3.3.4　潜在因素分析77
3.3.5　线性判别分析77
3.3.6　潜在语义分析78
3.3.7　独立成分分析78
3.3.8　核主成分分析78
3.3.9　受限玻耳兹曼机80
3.4　异常检测和处理81
3.4.1　单变量异常检测82
3.4.2　EllipticEnvelope83
3.4.3　OneClassSVM87
3.5　评分函数90
3.5.1　多标号分类90
3.5.2　二值分类92
3.5.3　回归93
3.6　测试和验证93
3.7　交叉验证97
3.7.1　使用交叉验证迭代器99
3.7.2　采样和自举方法100
3.8　超参数优化102
3.8.1　建立自定义评分函数104
3.8.2　减少网格搜索时间106
3.9　特征选择108
3.9.1　单变量选择108
3.9.2　递归消除110
3.9.3　稳定性选择与基于L1的选择111
3.10　小结112
第4章　机器学习113
4.1　线性和逻辑回归113
4.2　朴素贝叶斯116
4.3　K近邻118
4.4　高级非线性算法119
4.4.1　基于SVM的分类算法120
4.4.2　基于SVM的回归算法122
4.4.3　调整SVM123
4.5　组合策略124
4.5.1　基于随机样本的粘合策略125
4.5.2　基于弱组合的分袋策略125
4.5.3　随机子空间和随机分片126
4.5.4　模型序列—AdaBoost127
4.5.5　梯度树提升128
4.5.6　处理大数据129
4.6　自然语言处理一瞥136
4.6.1　词语分词136
4.6.2　词干提取137
4.6.3　词性标注137
4.6.4　命名实体识别138
4.6.5　停止词139
4.6.6　一个完整的数据科学示例—文本分类140
4.7　无监督学习概述141
4.8　小结146
第5章　社会网络分析147
5.1　图论简介147
5.2　图的算法152
5.3　图的加载、输出和采样157
5.4　小结160
第6章　可视化161
6.1　matplotlib基础介绍161
6.1.1　曲线绘图162
6.1.2　绘制分块图163
6.1.3　散点图164
6.1.4　直方图165
6.1.5　柱状图166
6.1.6　图像可视化167
6.2　pandas的几个图形示例169
6.2.1　箱线图与直方图170
6.2.2　散点图171
6.2.3　平行坐标173
6.3　高级数据学习表示174
6.3.1　学习曲线174
6.3.2　验证曲线176
6.3.3　特征重要性177
6.3.4　GBT部分依赖关系图179
6.4　小结180
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>数据科学导论
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>学习Python——做个有编程能力的设计师
9 Python+PythonScript+GhPython
17 数据结构
18 1 列表(List)
19 1.1 索引
25 1.2 列表的基本操作
32 1.3 列表的方法
43 2 元组(Tuple)
43 3 字典(Dictionary)
44 3.1 Python 的字典与Grasshopper 的树型数据结构
48 3.2 Python 字典的方法
50 3.3 GhPython 与树型数据结构
66 4 字符串(String)
66 4.1 用Python 替代Grasshopper 处理字符串的方法
72 4.2 字符串格式化
84 4.3 re(regular expression) 正则表达式
95 基本语句
96 1 print() 与import
96 1.1 print()
97 1.2 使用import 导入模块或者函数
97 2 赋值的方法
98 3 循环语句
105 4 条件语句
117 函数
118 1 创建函数
136 2 随机模块
141 3 递归
155 4 时间模块
163 类
165 1 创建类
169 2 迭代器
172 3 生成器
177 异常
181 项目
183 Case_1: 折叠的过程- 圆柱体V 形与Mesh 顶点排序
191 Case_2: 盒体的展开
199 Case_3: 解读蚁群算法与TSP 问题以及在GH_Python 中的实现
211 Case_4: 最短路径与Dijkstra 算法
221 Case_5: 探索性研究适宜分析方法GH_Python 下的实现
251 Case_6: 使用递归解决八皇后问题与满足特定间距要求的建筑布局
257 Case_7: 解读生命游戏_ 元胞自动机与建立生长模型
265 Case_8:GoogleEarth.KML 文件的调入程序
276 Case_9: 解读粒子群(PSO) 算法与建立点运动程序
283 Case_10: 城市土地利用结构信息熵
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>学习Python——做个有编程能力的设计师
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>机器学习实战
目　录

第一部分　分类
第1章　机器学习基础　　2
1.1 　何谓机器学习　　3
1.1.1 　传感器和海量数据　　4
1.1.2 　机器学习非常重要　　5
1.2 　关键术语　　5
1.3 　机器学习的主要任务　　7
1.4 　如何选择合适的算法　　8
1.5 　开发机器学习应用程序的步骤　　9
1.6 　Python语言的优势　　10
1.6.1 　可执行伪代码　　10
1.6.2 　Python比较流行　　10
1.6.3 　Python语言的特色　　11
1.6.4 　Python语言的缺点　　11
1.7 　NumPy函数库基础　　12
1.8 　本章小结　　13
第2章　k-近邻算法 　　15
2.1 　k-近邻算法概述　　15
2.1.1 　准备：使用Python导入数据　　17
2.1.2 　从文本文件中解析数据　　19
2.1.3 　如何测试分类器　　20
2.2 　示例：使用k-近邻算法改进约会网站的配对效果　　20
2.2.1 　准备数据：从文本文件中解析数据　　21
2.2.2 　分析数据：使用Matplotlib创建散点图　　23
2.2.3 　准备数据：归一化数值　　25
2.2.4 　测试算法：作为完整程序验证分类器　　26
2.2.5 　使用算法：构建完整可用系统　　27
2.3 　示例：手写识别系统　　28
2.3.1 　准备数据：将图像转换为测试向量　　29
2.3.2 　测试算法：使用k-近邻算法识别手写数字　　30
2.4 　本章小结　　31
第3章　决策树 　　32
3.1 　决策树的构造　　33
3.1.1 　信息增益　　35
3.1.2 　划分数据集　　37
3.1.3 　递归构建决策树　　39
3.2 　在Python中使用Matplotlib注解绘制树形图　　42
3.2.1 　Matplotlib注解　　43
3.2.2 　构造注解树　　44
3.3 　测试和存储分类器　　48
3.3.1 　测试算法：使用决策树执行分类　　49
3.3.2 　使用算法：决策树的存储　　50
3.4 　示例：使用决策树预测隐形眼镜类型　　50
3.5 　本章小结　　52
第4章　基于概率论的分类方法：朴素贝叶斯 　　53
4.1 　基于贝叶斯决策理论的分类方法　　53
4.2 　条件概率　　55
4.3 　使用条件概率来分类　　56
4.4 　使用朴素贝叶斯进行文档分类　　57
4.5 　使用Python进行文本分类　　58
4.5.1 　准备数据：从文本中构建词向量　　58
4.5.2 　训练算法：从词向量计算概率　　60
4.5.3 　测试算法：根据现实情况修改分类器　　62
4.5.4 　准备数据：文档词袋模型　　64
4.6 　示例：使用朴素贝叶斯过滤垃圾邮件　　64
4.6.1 　准备数据：切分文本　　65
4.6.2 　测试算法：使用朴素贝叶斯进行交叉验证　　66
4.7 　示例：使用朴素贝叶斯分类器从个人广告中获取区域倾向　　68
4.7.1 　收集数据：导入RSS源　　68
4.7.2 　分析数据：显示地域相关的用词　　71
4.8 　本章小结　　72
第5章　Logistic回归 　　73
5.1 　基于Logistic回归和Sigmoid函数的分类　　74
5.2 　基于最优化方法的最佳回归系数确定　　75
5.2.1 　梯度上升法　　75
5.2.2 　训练算法：使用梯度上升找到最佳参数　　77
5.2.3 　分析数据：画出决策边界　　79
5.2.4 　训练算法：随机梯度上升　　80
5.3 　示例：从疝气病症预测病马的死亡率　　85
5.3.1 　准备数据：处理数据中的缺失值　　85
5.3.2 　测试算法：用Logistic回归进行分类　　86
5.4 　本章小结　　88
第6章　支持向量机　　89
6.1 　基于最大间隔分隔数据　　89
6.2 　寻找最大间隔　　91
6.2.1 　分类器求解的优化问题　　92
6.2.2 　SVM应用的一般框架　　93
6.3 　SMO高效优化算法　　94
6.3.1 　Platt的SMO算法　　94
6.3.2 　应用简化版SMO算法处理小规模数据集　　94
6.4 　利用完整Platt SMO算法加速优化　　99
6.5 　在复杂数据上应用核函数　　105
6.5.1 　利用核函数将数据映射到高维空间　　106
6.5.2 　径向基核函数　　106
6.5.3 　在测试中使用核函数　　108
6.6 　示例：手写识别问题回顾　　111
6.7 　本章小结　　113
第7章　利用AdaBoost元算法提高分类
性能 　　115
7.1 　基于数据集多重抽样的分类器　　115
7.1.1 　bagging：基于数据随机重抽样的分类器构建方法　　116
7.1.2 　boosting　　116
7.2 　训练算法：基于错误提升分类器的性能　　117
7.3 　基于单层决策树构建弱分类器　　118
7.4 　完整AdaBoost算法的实现　　122
7.5 　测试算法：基于AdaBoost的分类　　124
7.6 　示例：在一个难数据集上应用AdaBoost　　125
7.7 　非均衡分类问题　　127
7.7.1 　其他分类性能度量指标：正确率、召回率及ROC曲线　　128
7.7.2 　基于代价函数的分类器决策控制　　131
7.7.3 　处理非均衡问题的数据抽样方法　　132
7.8 　本章小结　　132
第二部分　利用回归预测数值型数据
第8章　预测数值型数据：回归 　　136
8.1 　用线性回归找到最佳拟合直线　　136
8.2 　局部加权线性回归　　141
8.3 　示例：预测鲍鱼的年龄　　145
8.4 　缩减系数来“理解”数据　　146
8.4.1 　岭回归　　146
8.4.2 　lasso　　148
8.4.3 　前向逐步回归　　149
8.5 　权衡偏差与方差　　152
8.6 　示例：预测乐高玩具套装的价格　　153
8.6.1 　收集数据：使用Google购物的API　　153
8.6.2 　训练算法：建立模型　　155
8.7 　本章小结　　158
第9章　树回归　　159
9.1 　复杂数据的局部性建模　　159
9.2 　连续和离散型特征的树的构建　　160
9.3 　将CART算法用于回归　　163
9.3.1 　构建树　　163
9.3.2 　运行代码　　165
9.4 　树剪枝　　167
9.4.1 　预剪枝　　167
9.4.2 　后剪枝　　168
9.5 　模型树　　170
9.6 　示例：树回归与标准回归的比较　　173
9.7 　使用Python的Tkinter库创建GUI　　176
9.7.1 　用Tkinter创建GUI　　177
9.7.2 　集成Matplotlib和Tkinter　　179
9.8 　本章小结　　182
第三部分　无监督学习
第10章　利用K-均值聚类算法对未标注数据分组　　184
10.1 　K-均值聚类算法　　185
10.2 　使用后处理来提高聚类性能　　189
10.3 　二分K-均值算法　　190
10.4 　示例：对地图上的点进行聚类　　193
10.4.1 　Yahoo! PlaceFinder API　　194
10.4.2 　对地理坐标进行聚类　　196
10.5 　本章小结　　198
第11章　使用Apriori算法进行关联分析　　200
11.1 　关联分析　　201
11.2 　Apriori原理　　202
11.3 　使用Apriori算法来发现频繁集　　204
11.3.1 　生成候选项集　　204
11.3.2 　组织完整的Apriori算法　　207
11.4 　从频繁项集中挖掘关联规则　　209
11.5 　示例：发现国会投票中的模式　　212
11.5.1 　收集数据：构建美国国会投票记录的事务数据集　　213
11.5.2 　测试算法：基于美国国会投票记录挖掘关联规则　　219
11.6 　示例：发现毒蘑菇的相似特征　　220
11.7 　本章小结　　221
第12章　使用FP-growth算法来高效发现频繁项集　　223
12.1 　FP树：用于编码数据集的有效方式　　224
12.2 　构建FP树　　225
12.2.1 　创建FP树的数据结构　　226
12.2.2 　构建FP树　　227
12.3 　从一棵FP树中挖掘频繁项集　　231
12.3.1 　抽取条件模式基　　231
12.3.2 　创建条件FP树　　232
12.4 　示例：在Twitter源中发现一些共现词　　235
12.5 　示例：从新闻网站点击流中挖掘　　238
12.6 　本章小结　　239
第四部分　其他工具
第13章　利用PCA来简化数据　　242
13.1 　降维技术　　242
13.2 　PCA　　243
13.2.1 　移动坐标轴　　243
13.2.2 　在NumPy中实现PCA　　246
13.3 　示例：利用PCA对半导体制造数据降维　　248
13.4 　本章小结　　251
第14章　利用SVD简化数据　　252
14.1 　SVD的应用　　252
14.1.1 　隐性语义索引　　253
14.1.2 　推荐系统　　253
14.2 　矩阵分解　　254
14.3 　利用Python实现SVD　　255
14.4 　基于协同过滤的推荐引擎　　257
14.4.1 　相似度计算　　257
14.4.2 　基于物品的相似度还是基于用户的相似度？　　260
14.4.3 　推荐引擎的评价　　260
14.5 　示例：餐馆菜肴推荐引擎　　260
14.5.1 　推荐未尝过的菜肴　　261
14.5.2 　利用SVD提高推荐的效果　　263
14.5.3 　构建推荐引擎面临的挑战　　265
14.6 　基于SVD的图像压缩　　266
14.7 　本章小结　　268
第15章　大数据与MapReduce　　270
15.1 　MapReduce：分布式计算的框架　　271
15.2 　Hadoop流　　273
15.2.1 　分布式计算均值和方差的mapper　　273
15.2.2 　分布式计算均值和方差的reducer　　274
15.3 　在Amazon网络服务上运行Hadoop程序　　275
15.3.1 　AWS上的可用服务　　276
15.3.2 　开启Amazon网络服务之旅　　276
15.3.3 　在EMR上运行Hadoop作业　　278
15.4 　MapReduce上的机器学习　　282
15.5 　在Python中使用mrjob来自动化MapReduce　　283
15.5.1 　mrjob与EMR的无缝集成　　283
15.5.2 　mrjob的一个MapReduce脚本剖析　　284
15.6 　示例：分布式SVM的Pegasos算法　　286
15.6.1 　Pegasos算法　　287
15.6.2 　训练算法：用mrjob实现MapReduce版本的SVM　　288
15.7 　你真的需要MapReduce吗？　　292
15.8 　本章小结　　292
附录A 　Python入门　　294
附录B 　线性代数　　303
附录C 　概率论复习　　309
附录D 　资源　　312
索引　　313
版权声明　　316

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>机器学习实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>计算机科学导论
第1章　计算机学什么
1.1 探索黑匣子——从一个程序谈起
1.1.1 探索黑匣子之计算机硬件
1.1.2 探索黑匣子之计算机软件
1.1.3 探索黑匣子之操作系统
1.1.4 计算机系统的层次
1.2 计算机编程的基本概念
1.2.1 初窥高级语言
1.2.2 乘Python之舟进入计算机语言的世界
小结
1.3 计算机核心知识——算法
1.3.1 算法的重要性
1.3.2 解平方根算法一
1.3.3 解平方根算法二
1.3.4 解平方根算法三
小结
1.4 什么是计算机
1.4.1 历史上的计算机
1.4.2 嵌入式系统
1.4.3 未来的计算机
小结
1.5 计算机前沿知识——大数据
1.5.1 数据
1.5.2 大数据
1.5.3 大数据的应用
小结
1.5.4 对数据和逻辑的正确态度——沙老师的话
1.6 计算机科学之美
1.6.1 无处不在的计算机
1.6.2 计算机学科本身包含的知识面之广
本章总结
习题1
第2章　神奇的0与1
2.1 进位制的概念
小结
2.2 不同进制间的转换
2.2.1 二进制数转换为十进制数
2.2.2 十进制数转换为二进制数
2.2.3 二、八、十六进制的巧妙转换
小结
2.3 计算中的二进制四则运算
2.3.1 无符号整数与加法
2.3.2 乘法与除法
2.3.3 带符号整数的减法
2.3.4 小数—浮点数
小结
2.4 一切都是逻辑
2.4.1 什么是逻辑运算
2.4.2 电路实现逻辑(课时不足时，可不讲本节)
2.4.3 用逻辑做加法
2.4.4 加法与控制语句
小结
2.5 计算机中的存储
2.5.1 数据的存储形式
2.5.2 存储设备
小结
2.6 谈0与1的美
2.6.1 简单开关的无限大用
2.6.2 二进制逻辑的神奇妙用
2.6.3 “亢龙有悔”和“否极泰来”
2.6.4 “若见诸相非相，即见如来”
习题2
第3章　程序是如何执行的
3.1 引例
……
第4章　学习Python语言
第5章　计算思维的核心——算法
第6章　操作系统简介
第7章　计算机网络与物联网
第8章　信息安全
参考文献
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>计算机科学导论
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Maya Python游戏与影视编程指南
第1部分 Python和Maya的基础知识
第1章 Maya命令引擎和用户界面
1.1与Maya进行交互
1.2在Maya中执行Python
1.3Maya命令和依存关系图
1.4Python命令简介
1.5标志参数和Python核心对象类型
1.6命令模式和命令参数
1.7Python命令参考
1.8Python版本
1.9Python在线文档
1.10小结
第2章 Python数据基础知识
2.1变量和数据
2.2结合使用变量和Maya命令
2.3使用数字
2.4使用布尔值
2.5使用序列类型
2.6其他容器类型
2.7小结
第3章 在Maya中编写Python程序
3.1创建Python函数
3.2Maya命令
3.3迭代和分支
3.4捕获错误
3.5设计实用的工具
3.6小结
第4章 模块
4.1什么是模块
4.2模块与范围
4.3创建模块
4.4导入模块
4.5Python路径
4.6使用Python IDE
4.7小结
第5章 Maya中的面向对象编程
5.1面向对象编程与过程式编程
5.2属性
5.3继承
5.4Maya中的过程式编程与面向对象编程
5.5小结
第2部分 使用Python设计Maya工具
第6章 Maya工具设计原则
6.1为用户设计的技巧
6.2Maya中的工具
6.3小结
第7章 使用Maya命令创建基本工具
7.1Maya命令与Maya GUI
7.2基本GUI命令
7.3创建窗口基类
7.4扩展GUI类
7.5创建更高级的工具
7.6小结
第8章 使用Qt设计高级图形用户界面
8.1Qt与Maya
8.2安装Qt工具
8.3Qt Designer
8.4将Qt GUI加载到Maya中
8.5PyQt
8.6小结
第3部分 Maya Python API基础知识
第9章 理解C++和API文档
9.1面向对象编程的高级主题
9.2Maya API的结构
9.3Python与Maya API通信的方式
9.4如何查阅API文档
9.5Python与C++ API之间的重要区别
9.6小结
第10章 设计命令
10.1加载脚本化插件
10.2脚本化命令剖析
10.3添加自定义语法
10.4Maya的撤销/重做机制
10.5支持多种命令模式和撤销/重做
10.6小结
第11章 Maya中的数流
11.1依存关系图
11.2 有向无环图
11.3 小结
第12章 设计依存关系节点
12.1 脚本化节点剖析
12.2属性和plug
12.3小结
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Maya Python游戏与影视编程指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python科学计算(第2版)
第1章  Python科学计算环境的安装与简介	1
1.1  Python简介	1
1.1.1  Python 2还是Python 3	1
1.1.2  开发环境	2
1.1.3  集成开发环境(IDE)	5
1.2  IPython Notebook入门	9
1.2.1  基本操作	10
1.2.2  魔法(Magic)命令	12
1.2.3  Notebook的显示系统	20
1.2.4  定制IPython Notebook	24
1.3  扩展库介绍	27
1.3.1  数值计算库	27
1.3.2  符号计算库	28
1.3.3  绘图与可视化	28
1.3.4  数据处理和分析	29
1.3.5  界面设计	30
1.3.6  图像处理和计算机视觉	31
1.3.7  提高运算速度	31
第2章  NumPy-快速处理数据	33
2.1  ndarray对象	33
2.1.1  创建	34
2.1.2  元素类型	35
2.1.3  自动生成数组	37
2.1.4  存取元素	40
2.1.5  多维数组	43
2.1.6  结构数组	47
2.1.7  内存结构	50
2.2  ufunc函数	56
2.2.1  四则运算	58
2.2.2  比较运算和布尔运算	59
2.2.3  自定义ufunc函数	61
2.2.4  广播	62
2.2.5  ufunc的方法	66
2.3  多维数组的下标存取	68
2.3.1  下标对象	68
2.3.2  整数数组作为下标	70
2.3.3  一个复杂的例子	72
2.3.4  布尔数组作为下标	73
2.4  庞大的函数库	74
2.4.1  随机数	74
2.4.2  求和、平均值、方差	77
2.4.3  大小与排序	81
2.4.4  统计函数	86
2.4.5  分段函数	89
2.4.6  操作多维数组	92
2.4.7  多项式函数	96
2.4.8  多项式函数类	98
2.4.9  各种乘积运算	103
2.4.10  广义ufunc函数	106
2.5  实用技巧	110
2.5.1  动态数组	110
2.5.2  和其他对象共享内存	112
2.5.3  与结构数组共享内存	115
第3章  SciPy-数值计算库	117
3.1  常数和特殊函数	117
3.2  拟合与优化-optimize	119
3.2.1  非线性方程组求解	120
3.2.2  最小二乘拟合	121
3.2.3  计算函数局域最小值	125
3.2.4  计算全域最小值	127
3.3  线性代数-linalg	128
3.3.1  解线性方程组	129
3.3.2  最小二乘解	130
3.3.3  特征值和特征向量	132
3.3.4  奇异值分解-SVD	134
3.4  统计-stats	136
3.4.1  连续概率分布	136
3.4.2  离散概率分布	139
3.4.3  核密度估计	140
3.4.4  二项分布、泊松分布、伽玛分布	142
3.4.5  学生t-分布与t检验	147
3.4.6  卡方分布和卡方检验	151
3.5  数值积分-integrate	154
3.5.1  球的体积	154
3.5.2  解常微分方程组	156
3.5.3  ode类	157
3.5.4  信号处理-signal	164
3.5.5  中值滤波	164
3.5.6  滤波器设计	165
3.5.7  连续时间线性系统	167
3.6  插值-interpolate	172
3.6.1  一维插值	172
3.6.2  多维插值	177
3.7  稀疏矩阵-sparse	181
3.7.1  稀疏矩阵的存储形式	182
3.7.2  最短路径	183
3.8  图像处理-ndimage	186
3.8.1  形态学图像处理	187
3.8.2  图像分割	192
3.9  空间算法库-spatial	195
3.9.1  计算最近旁点	195
3.9.2  凸包	199
3.9.3  沃罗诺伊图	201
3.9.4  德劳内三角化	204
第4章  matplotlib-绘制精美的图表	207
4.1  快速绘图	207
4.1.1  使用pyplot模块绘图	207
4.1.2  面向对象方式绘图	210
4.1.3  配置属性	211
4.1.4  绘制多子图	212
4.1.5  配置文件	215
4.1.6  在图表中显示中文	217
4.2  Artist对象	220
4.2.1  Artist的属性	221
4.2.2  Figure容器	223
4.2.3  Axes容器	224
4.2.4  Axis容器	226
4.2.5  Artist对象的关系	230
4.3  坐标变换和注释	231
4.3.1  4种坐标系	234
4.3.2  坐标变换的流水线	236
4.3.3  制作阴影效果	240
4.3.4  添加注释	241
4.4  块、路径和集合	243
4.4.1  Path与Patch	243
4.4.2  集合	245
4.5  绘图函数简介	255
4.5.1  对数坐标图	255
4.5.2  极坐标图	256
4.5.3  柱状图	257
4.5.4  散列图	258
4.5.5  图像	259
4.5.6  等值线图	261
4.5.7  四边形网格	264
4.5.8  三角网格	267
4.5.9  箭头图	269
4.5.10  三维绘图	273
4.6  matplotlib技巧集	274
4.6.1  使用agg后台在图像上绘图	274
4.6.2  响应鼠标与键盘事件	277
4.6.3  动画	285
4.6.4  添加GUI面板	288
第5章  Pandas-方便的数据分析库	291
5.1  Pandas中的数据对象	291
5.1.1  Series对象	291
5.1.2  DataFrame对象	293
5.1.3  Index对象	297
5.1.4  MultiIndex对象	298
5.1.5  常用的函数参数	300
5.1.6  DataFrame的内部结构	301
5.2  下标存取	303
5.2.1  []操作符	304
5.2.2  .loc[]和.iloc[]存取器	304
5.2.3  获取单个值	306
5.2.4  多级标签的存取	306
5.2.5  query()方法	307
5.3  文件的输入输出	307
5.3.1  CSV文件	308
5.3.2  HDF5文件	309
5.3.3  读写数据库	313
5.3.4  使用Pickle序列化	314
5.4  数值运算函数	315
5.5  时间序列	323
5.5.1  时间点、时间段、时间间隔	323
5.5.2  时间序列	326
5.5.3  与NaN相关的函数	329
5.5.4  改变DataFrame的形状	333
5.6  分组运算	338
5.6.1  groupby()方法	339
5.6.2  GroupBy对象	340
5.6.3  分组－运算－合并	341
5.7  数据处理和可视化实例	347
5.7.1  分析Pandas项目的提交历史	347
5.7.2  分析空气质量数据	354
第6章  SymPy-符号运算好帮手	359
6.1  从例子开始	359
6.1.1  封面上的经典公式	359
6.1.2  球体体积	361
6.1.3  数值微分	362
6.2  数学表达式	365
6.2.1  符号	365
6.2.2  数值	367
6.2.3  运算符和函数	368
6.2.4  通配符	371
6.3  符号运算	373
6.3.1  表达式变换和化简	373
6.3.2  方程	376
6.3.3  微分	377
6.3.4  微分方程	378
6.3.5  积分	379
6.4  输出符号表达式	380
6.4.1  lambdify	381
6.4.2  用autowrap()编译表达式	381
6.4.3  使用cse()分步输出表达式	384
6.5  机械运动模拟	385
6.5.1  推导系统的微分方程	386
6.5.2  将符号表达式转换为程序	388
6.5.3  动画演示	389
第7章  Traits & TraitsUI-轻松制作图形界面	393
7.1  Traits类型入门	393
7.1.1  什么是Traits属性	393
7.1.2  Trait属性的功能	396
7.1.3  Trait类型对象	399
7.1.4  Trait的元数据	401
7.2  Trait类型	403
7.2.1  预定义的Trait类型	403
7.2.2  Property属性	406
7.2.3  Trait属性监听	408
7.2.4  Event和Button属性	411
7.2.5  动态添加Trait属性	412
7.3  TraitsUI入门	413
7.3.1  默认界面	414
7.3.2  用View定义界面	415
7.4  用Handler控制界面和模型	425
7.4.1  用Handler处理事件	426
7.4.2  Controller和UIInfo对象	429
7.4.3  响应Trait属性的事件	431
7.5  属性编辑器	432
7.5.1  编辑器演示程序	433
7.5.2  对象编辑器	436
7.5.3  自定义编辑器	440
7.6  函数曲线绘制工具	444
第8章  TVTK与Mayavi-数据的三维可视化	451
8.1  VTK的流水线(Pipeline)	452
8.1.1  显示圆锥	452
8.1.2  用ivtk观察流水线	455
8.2  数据集	461
8.2.1  ImageData	461
8.2.2  RectilinearGrid	466
8.2.3  StructuredGrid	467
8.2.4  PolyData	470
8.3  TVTK的改进	473
8.3.1  TVTK的基本用法	474
8.3.2  Trait属性	475
8.3.3  序列化	476
8.3.4  集合迭代	476
8.3.5  数组操作	477
8.4  TVTK可视化实例	478
8.4.1  切面	479
8.4.2  等值面	484
8.4.3  流线	487
8.4.4  计算圆柱的相贯线	491
8.5  用mlab快速绘图	496
8.5.1  点和线	497
8.5.2  Mayavi的流水线	498
8.5.3  二维图像的可视化	501
8.5.4  网格面mesh	505
8.5.5  修改和创建流水线	508
8.5.6  标量场	511
8.5.7  矢量场	513
8.6  将TVTK和Mayavi嵌入界面	515
8.6.1  TVTK场景的嵌入	516
8.6.2  Mayavi场景的嵌入	518
第9章  OpenCV-图像处理和计算机视觉	523
9.1  图像的输入输出	523
9.1.1  读入并显示图像	523
9.1.2  图像类型	524
9.1.3  图像输出	525
9.1.4  字节序列与图像的相互转换	526
9.1.5  视频输出	527
9.1.6  视频输入	529
9.2  图像处理	530
9.2.1  二维卷积	530
9.2.2  形态学运算	532
9.2.3  填充-floodFill	534
9.2.4  去瑕疵-inpaint	536
9.3  图像变换	537
9.3.1  几何变换	537
9.3.2  重映射-remap	540
9.3.3  直方图	543
9.3.4  二维离散傅立叶变换	547
9.3.5  用双目视觉图像计算深度信息	550
9.4  图像识别	553
9.4.1  用霍夫变换检测直线和圆	553
9.4.2  图像分割	558
9.4.3  SURF特征匹配	561
9.5  形状与结构分析	564
9.5.1  轮廓检测	565
9.5.2  轮廓匹配	568
9.6  类型转换	569
9.6.1  分析cv2的源程序	570
9.6.2  Mat对象	572
9.3.3  在cv和cv2之间转换图像对象	574
第10章  Cython-编译Python程序	575
10.1  配置编译器	575
10.2  Cython入门	577
10.2.1  计算矢量集的距离矩阵	577
10.2.2  将Cython程序编译成扩展模块	579
10.2.3  C语言中的Python对象类型	581
10.2.4  使用cdef关键字声明变量类型	582
10.2.5  使用def定义函数	585
10.2.6  使用cdef定义C语言函数	586
10.3  高效处理数组	587
10.3.1  Cython的内存视图	587
10.3.2  用降采样提高绘图速度	592
10.4  使用Python标准对象和API	596
10.4.1  操作list对象	596
10.4.2  创建tuple对象	597
10.4.3  用array.array作为动态数组	598
10.5  扩展类型	600
10.5.1  扩展类型的基本结构	600
10.5.2  一维浮点数向量类型	601
10.5.3  包装ahocorasick库	606
10.6  Cython技巧集	612
10.6.1  创建ufunc函数	613
10.6.2  快速调用DLL中的函数	617
10.6.3  调用BLAS函数	620
第11章  实例	627
11.1  使用泊松混合合成图像	627
11.1.1  泊松混合算法	627
11.1.2  编写代码	629
11.1.3  演示程序	632
11.2  经典力学模拟	632
11.2.1  悬链线	633
11.2.2  最速降线	638
11.2.3  单摆模拟	641
11.3  推荐算法	644
11.3.1  读入数据	645
11.3.2  推荐性能评价标准	646
11.3.3  矩阵分解	647
11.3.4  使用最小二乘法实现矩阵分解	648
11.3.5  使用Cython迭代实现矩阵分解	651
11.4  频域信号处理	654
11.4.1  FFT知识复习	654
11.4.2  合成时域信号	657
11.4.3  观察信号的频谱	660
11.4.4  卷积运算	671
11.5  布尔可满足性问题求解器	675
11.5.1  用Cython包装PicoSAT	678
11.5.2  数独游戏	682
11.5.3  扫雷游戏	686
11.6  分形	693
11.6.1  Mandelbrot集合	693
11.6.2  迭代函数系统	699
11.6.3  L-System分形	706
11.6.4  分形山脉	710
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python科学计算(第2版)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python大战机器学习
第一篇机器学习基础篇 1
第 1章线性模型 .................................................. 2
1.1概述 2
1.2算法笔记精华 2
1.2.1普通线性回归 2
1.2.2广义线性模型 5
1.2.3逻辑回归 5
1.2.4线性判别分析 7
1.3 Python实战 10
1.3.1线性回归模型 11
1.3.2线性回归模型的正则化 12
1.3.3逻辑回归 22
1.3.4线性判别分析 26
第 2章决策树 .................................................... 30
2.1概述 30
2.2算法笔记精华 30
2.1决策树原理 30
2.2构建决策树的 3个步骤 31
CART算法 37
2.4连续值和缺失值的处理 42
2.3 Python实战 43
2.3.1回归决策树（DecisionTreeRegressor） 43
2.3.2分类决策树（DecisionTreeClassiﬁr） 49
2.3.3决策图 54
第 3章贝叶斯分类器.............................................. 55
3.1概述 55
3.2 算法笔记精华55
3.2.1 贝叶斯定理55
3.2.2 朴素贝叶斯法56
3.3 Python 实战59
3.3.1 高斯贝叶斯分类器（GaussianNB） 61
3.3.2 多项式贝叶斯分类器（MultinomialNB） 62
3.3.3 伯努利贝叶斯分类器（BernoulliNB） 65
3.3.4 递增式学习partial_fit 方法69
第4 章k 近邻法. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 70
4.1 概述70
4.2 算法笔记精华70
4.2.1 kNN 三要素70
4.2.2 k 近邻算法72
4.2.3 kd 树73
4.3 Python 实践74
第5 章数据降维. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 83
5.1 概述83
5.2 算法笔记精华83
5.2.1 维度灾难与降维83
5.2.2 主成分分析（PCA） 84
5.2.3 SVD 降维91
5.2.4 核化线性（KPCA）降维91
5.2.5 流形学习降维93
5.2.6 多维缩放（MDS）降维93
5.2.7 等度量映射（Isomap）降维96
5.2.8 局部线性嵌入（LLE） 97
5.3 Python 实战99
5.4 小结118
第6 章聚类和EM 算法. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 119
6.1 概述119
6.2 算法笔记精华120
6.2.1 聚类的有效性指标120
6.2.2 距离度量122
6.2.3 原型聚类123
6.2.4 密度聚类126
6.2.5层次聚类 127
6.2.6 EM算法 128
6.2.7实际中的聚类要求 136
6.3 Python实战 137
K均值聚类（KMeans） 138
3.2密度聚类（DBSCAN） 143
3.3层次聚类（AgglomerativeClustering） 146
3.4混合高斯（GaussianMixture）模型 149
6.4小结 153
第二篇机器学习高级篇 155
第 7章支持向量机 ................................................ 156
7.1概述 156
7.2算法笔记精华 157
2.1线性可分支持向量机 157
2.2线性支持向量机 162
2.3非线性支持向量机 166
2.4支持向量回归 167
SVM的优缺点 170
7.3 Python实战 170
7.3.1线性分类 SVM 171
7.3.2非线性分类 SVM 175
7.3.3线性回归 SVR 182
7.3.4非线性回归 SVR 186
第 8章人工神经网络.............................................. 192
8.1概述 192
8.2算法笔记精华 192
8.2.1感知机模型 192
8.2.2感知机学习算法 194
8.2.3神经网络 197
8.3 Python实战 205
3.1感知机学习算法的原始形式 205
3.2感知机学习算法的对偶形式 209
3.3学习率与收敛速度 212
3.4感知机与线性不可分数据集 213
3.5多层神经网络 215
8.3.6多层神经网络与线性不可分数据集 216
8.3.7多层神经网络的应用 219
第 9章半监督学习 ................................................ 225
9.1概述 225
9.2算法笔记精华 226
2.1生成式半监督学习方法 226
2.2图半监督学习 228
9.3 Python实战 234
9.4小结 243
第 10章集成学习 ................................................. 244
10.1概述 244
10.2算法笔记精华 244
10.2.1集成学习的原理及误差 244
10.2.2 Boosting算法 246
10.2.3 AdaBoost算法 246
10.2.4 AdaBoost与加法模型 252
10.2.5提升树 253
10.2.6 Bagging算法 256
10.2.7误差-分歧分解 257
10.2.8多样性增强 259
10.3 Python实战 260
10.3.1 AdaBoost 261
10.3.2 GradientTreeBoosting 272
10.3.3 RandomForest 288
10.4小结 298
第三篇机器学习工程篇 299
第 11章数据预处理............................................... 300
11.1概述 300
11.2算法笔记精华 300
11.2.1去除唯一属性 300
11.2.2处理缺失值的三种方法 301
11.2.3常见的缺失值补全方法 302
11.2.4特征编码 307
2.5数据标准化、正则化 308
2.6特征选择 310
2.7稀疏表示和字典学习 313
11.3 Python实践 316
11.3.1二元化 316
11.3.2独热码 317
11.3.3标准化 321
11.3.4正则化 325
11.3.5过滤式特征选取 326
11.3.6包裹式特征选取 330
11.3.7嵌入式特征选取 334
11.3.8学习器流水线（Pipeline） 339
11.3.9字典学习 340
第 12章模型评估、选择与验证 .................................... 345
12.1概述 345
12.2算法笔记精华 346
2.1损失函数和风险函数 346
2.2模型评估方法 348
2.3模型评估 349
2.4性能度量 350
2.5偏差方差分解 356
12.3 Python实践 357
3.1损失函数 357
3.2数据集切分 359
3.3性能度量 370
3.4参数优化 387
第四篇 Kaggle实战篇 401
第 13章 Kaggle牛刀小试 .......................................... 402
13.1 Kaggle简介 402
13.2清洗数据 403
2.1加载数据 403
2.2合并数据 406
2.3拆分数据 407
2.4去除唯一值 408
2.5数据类型转换 410
13.2.6 Data_Cleaner类 412
13.3数据预处理 415
13.3.1独热码编码 415
13.3.2归一化处理 419
13.3.3 Data_Preprocesser类 421
13.4学习曲线和验证曲线 424
13.4.1程序说明 424
13.4.2运行结果 430
13.5参数优化 433
13.6小结 435
全书符号 ........................................................... 436
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python大战机器学习
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python for UNIX and Linux System Administration
序
前言
第1章 Python简介
为什么要选Python
学习的动力
一些基础知识
在Python中执行命令
在Python中使用函数
通过Import语句实现代码复用
第2章 IPython
安装IPython
基础知识
从功能强大的函数获得帮助
UNIX Shell
信息搜集
自动和快捷方式
本章小结
第3章 文本
Python的内建功能及模块
ElementTree
本章小结
第4章 文档与报告
自动信息收集
手工信息收集
信息格式化
信息发布
本章小结
第5章 网络
网络客户端
远程过程调用
SSH
Twisted
Scapy
使用Scapy创建脚本
第6章 数据
引言
使用 OS 模块与Data进行交互
拷贝、移动、重命名和删除数据
使用路径、目录和文件
数据比较
合并数据
对文件和目录的模式匹配
包装rsync
元数据: 关于数据的数据
存档、压缩、映像和恢复
使用tarfile模块创建TAR归档
使用tarfile模块检查TAR文件内容
第7章 SNMP
引言
对SNMP的简要介绍
IPython与Net-SNMP
查找数据中心
使用Net-SNMP获取多个值
创建混合的SNMP工具
Net-SNMP扩展
SNMP设备控制
整合Zenoss的企业级SNMP
第8章 操作系统什锦
引言
Python中跨平台的UNIX编辑
PyInotify
OS X
Red Hat Linux系统管理
Ubuntu管理
Solaris系统管理
虚拟化
云计算
使用Zenoss从Linux上管理Windows服务器
第9章 包管理
引言
Setuptools和Python Egg
使用easy_install
easy_install的高级特征
创建egg
进入点及控制台脚本
使用Python包索引注册一个包
Distutils
Buildout
使用Buildout
使用Buildout进行开发
virtualenv
EPM包管理
EPM总结：真的非常简单
第10章 进程与并发
引言
子进程
使用Supervisor来管理进程
使用Screen来管理进程
Python中的线程
进程
Processing模块
调度Python进程
daemonizer
本章小结
第11章 创建GUI
GUI创建理论
生成一个简单的PyGTK应用
使用PyGTK创建Apache日志浏览器
使用Curses创建Apache日志浏览器
Web应用
Django
本章小结
第12章 数据持久性
简单序列化
关系序列化
本章小结
第13章 命令行
引言
基本标准输入的使用
Optparse简介
简单的Optparse使用模式
Unix Mashups：整合Shell命令到Python命令行工具中
整合配置文件
本章小结
第14章 实例
使用Python管理DNS
使用OpenLDAP、Active Directory以及其他Python工具实现LDAP
Apache日志报告
FTP镜像
附录 回调
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python for UNIX and Linux System Administration
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>python 3标准库
译者序
前言
第1章 文本 1
1.1 string：文本常量和模板 1
1.1.1 函数 1
1.1.2 模板 2
1.1.3 高级模板 3
1.1.4 Formatter 5
1.1.5 常量 5
1.2 textwrap：格式化文本段落 6
1.2.1 示例数据 6
1.2.2 填充段落 7
1.2.3 去除现有的缩进 7
1.2.4 结合dedent和fill 8
1.2.5 缩进块 8
1.2.6 悬挂缩进 10
1.2.7 截断长文本 10
1.3 re：正则表达式 11
1.3.1 查找文本中的模式 11
1.3.2 编译表达式 12
1.3.3 多重匹配 13
1.3.4 模式语法 14
1.3.5 限制搜索 22
1.3.6 用组解析匹配 24
1.3.7 搜索选项 29
1.3.8 前向或后向 35
1.3.9 自引用表达式 38
1.3.10 用模式修改字符串 42
1.3.11 利用模式拆分 44
1.4 difflib：比较序列 46
1.4.1 比较文本体 47
1.4.2 无用数据 49
1.4.3 比较任意类型 50
第2章 数据结构 52
2.1 enum：枚举类型 53
2.1.1 创建枚举 53
2.1.2 迭代 53
2.1.3 比较Enum 54
2.1.4 唯一枚举值 55
2.1.5 通过编程创建枚举 56
2.1.6 非整数成员值 58
2.2 collections：容器数据类型 60
2.2.1 ChainMap：搜索多个字典 60
2.2.2 Counter：统计可散列的对象 63
2.2.3 defaultdict：缺少的键返回一个默认值 66
2.2.4 deque：双端队列 67
2.2.5 namedtuple：带命名字段的元组子类 70
2.2.6 OrderedDict：记住向字典中增加键的顺序 74
2.2.7 collections.abc：容器的抽象基类 76
2.3 数组：固定类型数据序列 78
2.3.1 初始化 78
2.3.2 处理数组 79
2.3.3 数组和文件 79
2.3.4 候选字节顺序 80
2.4 heapq：堆排序算法 81
2.4.1 示例数据 81
2.4.2 创建堆 82
2.4.3 访问堆的内容 83
2.4.4 堆的数据极值 85
2.4.5 高效合并有序序列 85
2.5 bisect：维护有序列表 86
2.5.1 有序插入 86
2.5.2 处理重复 87
2.6 queue：线程安全的FIFO实现 88
2.6.1 基本FIFO队列 88
2.6.2 LIFO队列 89
2.6.3 优先队列 89
2.6.4 构建一个多线程播客客户程序 90
2.7 struct：二进制数据结构 93
2.7.1 函数与Struct类 93
2.7.2 打包和解包 93
2.7.3 字节序 94
2.7.4 缓冲区 95
2.8 weakref：对象的非永久引用 96
2.8.1 引用 96
2.8.2 引用回调 97
2.8.3 最终化对象 98
2.8.4 代理 100
2.8.5 缓存对象 101
2.9 copy：复制对象 103
2.9.1 浅副本 103
2.9.2 深副本 104
2.9.3 定制复制行为 105
2.9.4 深副本中的递归 106
2.10 pprint：美观打印数据结构 107
2.10.1 打印 108
2.10.2 格式化 108
2.10.3 任意类 109
2.10.4 递归 110
2.10.5 限制嵌套输出 110
2.10.6 控制输出宽度 111
第3章 算法 113
3.1 functools：管理函数的工具 113
3.1.1 修饰符 113
3.1.2 比较 119
3.1.3 缓存 122
3.1.4 缩减数据集 125
3.1.5 泛型函数 127
3.2 itertools：迭代器函数 129
3.2.1 合并和分解迭代器 129
3.2.2 转换输入 132
3.2.3 生成新值 133
3.2.4 过滤 135
3.2.5 数据分组 138
3.2.6 合并输入 139
3.3 operator：内置操作符的函数接口 144
3.3.1 逻辑操作 144
3.3.2 比较操作符 145
3.3.3 算术操作符 145
3.3.4 序列操作符 146
3.3.5 原地操作符 148
3.3.6 属性和元素“获取方法” 148
3.3.7 结合操作符和定制类 150
3.4 contextlib：上下文管理器工具 151
3.4.1 上下文管理器API 151
3.4.2 上下文管理器作为函数修饰符 153
3.4.3 从生成器到上下文管理器 154
3.4.4 关闭打开的句柄 156
3.4.5 忽略异常 157
3.4.6 重定向输出流 158
3.4.7 动态上下文管理器栈 159
第4章 日期和时间 166
4.1 time：时钟时间 166
4.1.1 比较时钟 166
4.1.2 墙上时钟时间 167
4.1.3 单调时钟 168
4.1.4 处理器时钟时间 169
4.1.5 性能计数器 170
4.1.6 时间组成 170
4.1.7 处理时区 171
4.1.8 解析和格式化时间 172
4.2 datetime：日期和时间值管理 174
4.2.1 时间 174
4.2.2 日期 175
4.2.3 timedelta 177
4.2.4 日期算术运算 178
4.2.5 比较值 179
4.2.6 结合日期和时间 179
4.2.7 格式化和解析 180
4.2.8 时区 182
4.3 calendar：处理日期 183
4.3.1 格式化示例 183
4.3.2 本地化环境 185
4.3.3 计算日期 186
第5章 数学运算 188
5.1 decimal：定点数和浮点数的数学运算 188
5.1.1 Decimal 188
5.1.2 格式化 189
5.1.3 算术运算 190
5.1.4 特殊值 191
5.1.5 上下文 192
5.2 fractions：有理数 196
5.2.1 创建Fraction实例 197
5.2.2 算术运算 198
5.2.3 近似值 199
5.3 random：伪随机数生成器 199
5.3.1 生成随机数 200
5.3.2 指定种子 200
5.3.3 保存状态 201
5.3.4 随机整数 202
5.3.5 选择随机元素 203
5.3.6 排列 203
5.3.7 采样 205
5.3.8 多个并发生成器 205
5.3.9 SystemRandom 206
5.3.10 非均匀分布 207
5.4 math：数学函数 208
5.4.1 特殊常量 208
5.4.2 测试异常值 208
5.4.3 比较 210
5.4.4 将浮点值转换为整数 212
5.4.5 浮点值的其他表示 213
5.4.6 正号和负号 214
5.4.7 常用计算 215
5.4.8 指数和对数 218
5.4.9 角 222
5.4.10 三角函数 224
5.4.11 双曲函数 226
5.4.12 特殊函数 227
5.5 statistics：统计计算 228
5.5.1 平均值 228
5.5.2 方差 230
第6章 文件系统 232
6.1 os.path：平台独立的文件名管理 233
6.1.1 解析路径 233
6.1.2 建立路径 236
6.1.3 规范化路径 237
6.1.4 文件时间 238
6.1.5 测试文件 238
6.2 pathlib：文件系统路径作为对象 240
6.2.1 路径表示 240
6.2.2 建立路径 240
6.2.3 解析路径 242
6.2.4 创建具体路径 243
6.2.5 目录内容 244
6.2.6 读写文件 246
6.2.7 管理目录和符号链接 246
6.2.8 文件类型 247
6.2.9 文件属性 248
6.2.10 权限 250
6.2.11 删除 250
6.3 glob：文件名模式匹配 252
6.3.1 示例数据 252
6.3.2 通配符 252
6.3.3 单字符通配符 253
6.3.4 字符区间 253
6.3.5 转义元字符 254
6.4 fnmatch：UNIX式glob模式匹配 254
6.4.1 简单匹配 254
6.4.2 过滤 255
6.4.3 转换模式 256
6.5 linecache：高效读取文本文件 257
6.5.1 测试数据 257
6.5.2 读取特定行 257
6.5.3 处理空行 258
6.5.4 错误处理 258
6.5.5 读取Python源文件 259
6.6 tempfile：临时文件系统对象 260
6.6.1 临时文件 260
6.6.2 命名文件 262
6.6.3 假脱机文件 262
6.6.4 临时目录 263
6.6.5 预测名 264
6.6.6 临时文件位置 264
6.7 shutil：高层文件操作 265
6.7.1 复制文件 265
6.7.2 复制文件元数据 268
6.7.3 处理目录树 269
6.7.4 查找文件 271
6.7.5 归档 272
6.7.6 文件系统空间 275
6.8 filecmp：比较文件 276
6.8.1 示例数据 276
6.8.2 比较文件 278
6.8.3 比较目录 279
6.8.4 在程序中使用差异 280
6.9 mmap：内存映射文件 283
6.9.1 读文件 284
6.9.2 写文件 285
6.9.3 正则表达式 286
6.10 codecs：字符串编码和解码 287
6.10.1 Unicode入门 287
6.10.2 处理文件 289
6.10.3 字节序 291
6.10.4 错误处理 293
6.10.5 编码转换 295
6.10.6 非Unicode编码 296
6.10.7 增量编码 297
6.10.8 Unicode数据和网络通信 299
6.10.9 定义定制编码 301
6.11 io：文本、十进制和原始流I/O工具 307
6.11.1 内存中的流 307
6.11.2 为文本数据包装字节流 308
第7章 数据持久存储与交换 310
7.1 pickle：对象串行化 311
7.1.1 编码和解码字符串中的数据 311
7.1.2 处理流 312
7.1.3 重构对象的问题 313
7.1.4 不可腌制的对象 314
7.1.5 循环引用 316
7.2 shelve：对象的持久存储 318
7.2.1 创建一个新shelf 318
7.2.2 写回 319
7.2.3 特定shelf类型 320
7.3 dbm：UNIX键-值数据库 320
7.3.1 数据库类型 321
7.3.2 创建一个新数据库 321
7.3.3 打开一个现有数据库 322
7.3.4 错误情况 322
7.4 sqlite3：嵌入式关系数据库 323
7.4.1 创建数据库 323
7.4.2 获取数据 326
7.4.3 查询元数据 327
7.4.4 行对象 328
7.4.5 在查询中使用变量 329
7.4.6 批量加载 331
7.4.7 定义新的列类型 331
7.4.8 确定列类型 334
7.4.9 事务 336
7.4.10 隔离级别 338
7.4.11 内存中的数据库 341
7.4.12 导出数据库内容 341
7.4.13 在SQL中使用Python函数 342
7.4.14 带正则表达式的查询 344
7.4.15 定制聚集 345
7.4.16 线程和连接共享 346
7.4.17 限制对数据的访问 347
7.5 xml.etree.ElementTree：XML操纵API 349
7.5.1 解析XML文档 349
7.5.2 遍历解析树 350
7.5.3 查找文档中的节点 351
7.5.4 解析节点属性 352
7.5.5 解析时监视事件 354
7.5.6 创建一个定制树构造器 356
7.5.7 解析串 357
7.5.8 用元素节点构造文档 359
7.5.9 美观打印XML 359
7.5.10 设置元素属性 360
7.5.11 由节点列表构造树 362
7.5.12 将XML串行化至一个流 364
7.6 csv：逗号分隔值文件 366
7.6.1 读文件 366
7.6.2 写文件 367
7.6.3 方言 368
7.6.4 使用字段名 373
第8章 数据压缩与归档 375
8.1 zlib：GNU zlib压缩 375
8.1.1 处理内存中的数据 375
8.1.2 增量压缩与解压缩 377
8.1.3 混合内容流 378
8.1.4 校验和 378
8.1.5 压缩网络数据 379
8.2 gzip：读写GNU zip文件 382
8.2.1 写压缩文件 382
8.2.2 读压缩数据 384
8.2.3 处理流 385
8.3 bz2：bzip2压缩 386
8.3.1 内存中的一次性操作 386
8.3.2 增量压缩和解压缩 388
8.3.3 混合内容流 388
8.3.4 写压缩文件 389
8.3.5 读压缩文件 390
8.3.6 读写Unicode数据 391
8.3.7 压缩网络数据 392
8.4 tarfile：tar归档访问 395
8.4.1 测试tar文件 396
8.4.2 从归档读取元数据 396
8.4.3 从归档抽取文件 397
8.4.4 创建新归档 399
8.4.5 使用候选归档成员名 399
8.4.6 从非文件源写数据 400
8.4.7 追加到归档 400
8.4.8 处理压缩归档 401
8.5 zipfile：ZIP归档访问 402
8.5.1 测试ZIP文件 402
8.5.2 从归档读取元数据 402
8.5.3 从归档抽取归档文件 404
8.5.4 创建新归档 404
8.5.5 使用候选归档成员名 406
8.5.6 从非文件源写数据 406
8.5.7 利用ZipInfo实例写数据 407
8.5.8 追加到文件 407
8.5.9 Python ZIP归档 408
8.5.10 限制 410
第9章 加密 411
9.1 hashlib：密码散列 411
9.1.1 散列算法 411
9.1.2 示例数据 412
9.1.3 MD5示例 412
9.1.4 SHA1示例 412
9.1.5 按名创建散列 413
9.1.6 增量更新 413
9.2 hmac：密码消息签名与验证 414
9.2.1 消息签名 415
9.2.2 候选摘要类型 415
9.2.3 二进制摘要 416
9.2.4 消息签名的应用 416
第 10 章 使用进程、线程和协程提供并发性 420
10.1 subprocess：创建附加进程 420
10.1.1 运行外部命令 421
10.1.2 直接处理管道 425
10.1.3 连接管道段 427
10.1.4 与其他命令交互 428
10.1.5 进程间传递信号 430
10.2 signal：异步系统事件 434
10.2.1 接收信号 434
10.2.2 获取已注册的处理器 435
10.2.3 发送信号 436
10.2.4 闹铃 436
10.2.5 忽略信号 437
10.2.6 信号和线程 438
10.3 threading：进程中管理并发操作 440
10.3.1 Thread对象 440
10.3.2 确定当前线程 441
10.3.3 守护与非守护线程 442
10.3.4 枚举所有线程 444
10.3.5 派生线程 445
10.3.6 定时器线程 447
10.3.7 线程间传送信号 447
10.3.8 控制资源访问 449
10.3.9 同步线程 453
10.3.10 限制资源的并发访问 456
10.3.11 线程特定的数据 457
10.4 multiprocessing：像线程一样管理进程 459
10.4.1 multiprocessing基础 460
10.4.2 可导入的目标函数 461
10.4.3 确定当前进程 461
10.4.4 守护进程 462
10.4.5 等待进程 463
10.4.6 终止进程 465
10.4.7 进程退出状态 466
10.4.8 日志 467
10.4.9 派生进程 469
10.4.10 向进程传递消息 469
10.4.11 进程间信号传输 472
10.4.12 控制资源访问 473
10.4.13 同步操作 474
10.4.14 控制资源的并发访问 475
10.4.15 管理共享状态 476
10.4.16 共享命名空间 477
10.4.17 进程池 479
10.4.18 实现MapReduce 480
10.5 asyncio：异步I/O、事件循环和并发工具 484
10.5.1 异步并发概念 484
10.5.2 利用协程合作完成多任务 485
10.5.3 调度常规函数调用 488
10.5.4 异步地生成结果 490
10.5.5 并发地执行任务 492
10.5.6 组合协程和控制结构 495
10.5.7 同步原语 499
10.5.8 提供协议类抽象的异步I/O 505
10.5.9 使用协程和流的异步I/O 510
10.5.10 使用SSL 514
10.5.11 与域名服务交互 516
10.5.12 使用子进程 518
10.5.13 接收UNIX信号 523
10.5.14 结合使用协程、线程与进程 525
10.5.15 用asyncio调试 527
10.6 concurrent.futures：管理并发任务池 530
10.6.1 利用基本线程池使用map() 531
10.6.2 调度单个任务 532
10.6.3 按任意顺序等待任务 532
10.6.4 Future回调 533
10.6.5 撤销任务 534
10.6.6 任务中的异常 535
10.6.7 上下文管理器 536
10.6.8 进程池 537
第 11 章 网络通信 539
11.1 ipaddress：Internet地址 539
11.1.1 地址 539
11.1.2 网络 540
11.1.3 接口 543
11.2 socket：网络通信 544
11.2.1 寻址、协议簇和套接字类型 544
11.2.2 TCP/IP客户和服务器 552
11.2.3 用户数据报客户和服务器 558
11.2.4 UNIX域套接字 560
11.2.5 组播 563
11.2.6 发送二进制数据 566
11.2.7 非阻塞通信和超时 568
11.3 selectors：I/O多路复用抽象 568
11.3.1 操作模型 569
11.3.2 回送服务器 569
11.3.3 回送客户 570
11.3.4 服务器和客户 571
11.4 select：高效等待I/O 572
11.4.1 使用select() 572
11.4.2 带超时的非阻塞I/O 577
11.4.3 使用poll() 579
11.4.4 平台特定的选项 582
11.5 socketserver：创建网络服务器 583
11.5.1 服务器类型 583
11.5.2 服务器对象 583
11.5.3 实现服务器 584
11.5.4 请求处理器 584
11.5.5 回送示例 584
11.5.6 线程和进程 588
第 12 章 互联网 592
12.1 urllib.parse：分解URL 592
12.1.1 解析 593
12.1.2 反解析 595
12.1.3 连接 596
12.1.4 解码查询参数 597
12.2 urllib.request：网络资源访问 599
12.2.1 HTTP GET 599
12.2.2 编码参数 600
12.2.3 HTTP POST 601
12.2.4 添加发出首部 602
12.2.5 从请求提交表单数据 602
12.2.6 上传文件 603
12.2.7 创建定制协议处理器 606
12.3 urllib.robotparser: Internet蜘蛛访问控制 608
12.3.1 robots.txt 608
12.3.2 测试访问权限 609
12.3.3 长寿命蜘蛛 610
12.4 base64：用ASCII编码二进制数据 611
12.4.1 Base64编码 611
12.4.2 Base64解码 612
12.4.3 URL安全的变种 612
12.4.4 其他编码 613
12.5 http.server：实现Web服务器的基类 615
12.5.1 HTTP GET 615
12.5.2 HTTP POST 616
12.5.3 线程和进程 618
12.5.4 处理错误 619
12.5.5 设置首部 620
12.5.6 命令行用法 621
12.6 http.cookies：HTTP cookie 622
12.6.1 创建和设置cookie 622
12.6.2 Morsel 622
12.6.3 编码的值 624
12.6.4 接收和解析Cookie首部 624
12.6.5 候选输出格式 625
12.7 webbrowser：显示Web页面 626
12.7.1 简单示例 626
12.7.2 窗口与标签页 626
12.7.3 使用特定浏览器 627
12.7.4 BROWSER变量 627
12.7.5 命令行接口 627
12.8 uuid：全局唯一标识符 628
12.8.1 UUID 1：IEEE 802 MAC地址 628
12.8.2 UUID 3和5：基于名字的值 630
12.8.3 UUID 4：随机值 631
12.8.4 处理UUID对象 631
12.9 json：JavaScript对象记法 632
12.9.1 编码和解码简单数据类型 633
12.9.2 人类可读和紧凑输出 633
12.9.3 编码字典 635
12.9.4 处理定制类型 636
12.9.5 编码器和解码器类 638
12.9.6 处理流和文件 640
12.9.7 混合数据流 641
12.9.8 命令行上处理JSON 641
12.10 xmlrpc.client：XML-RPC的客户库 642
12.10.1 连接服务器 643
12.10.2 数据类型 645
12.10.3 传递对象 648
12.10.4 二进制数据 648
12.10.5 异常处理 650
12.10.6 将调用组合在一个消息中 650
12.11 xmlrpc.server：一个XML-RPC服务器 652
12.11.1 一个简单的服务器 652
12.11.2 候选API名 653
12.11.3 加点的API名 654
12.11.4 任意API名 655
12.11.5 公布对象的方法 656
12.11.6 分派调用 657
12.11.7 自省API 659
第 13 章 email 662
13.1 smtplib：简单邮件传输协议客户 662
13.1.1 发送email消息 662
13.1.2 认证和加密 663
13.1.3 验证email地址 666
13.2 smtpd：示例邮件服务器 667
13.2.1 邮件服务器基类 667
13.2.2 调试服务器 669
13.2.3 代理服务器 670
13.3 mailbox：管理email归档 670
13.3.1 mbox 671
13.3.2 Maildir 673
13.3.3 消息标志 678
13.3.4 其他格式 680
13.4 imaplib：IMAP4客户库 680
13.4.1 变种 680
13.4.2 连接服务器 681
13.4.3 示例配置 682
13.4.4 列出邮箱 682
13.4.5 邮箱状态 684
13.4.6 选择邮箱 686
13.4.7 搜索消息 686
13.4.8 搜索规则 687
13.4.9 获取消息 689
13.4.10 完整消息 693
13.4.11 上传消息 694
13.4.12 移动和复制消息 695
13.4.13 删除消息 696
第 14 章 应用构建模块 699
14.1 argparse：命令行选项和参数解析 700
14.1.1 建立解析器 700
14.1.2 定义参数 700
14.1.3 解析命令行 700
14.1.4 简单示例 701
14.1.5 帮助输出 707
14.1.6 解析器组织 711
14.1.7 高级参数处理 716
14.2 getopt：命令行选项解析 722
14.2.1 函数参数 722
14.2.2 短格式选项 723
14.2.3 长格式选项 723
14.2.4 一个完整的例子 723
14.2.5 缩写长格式选项 725
14.2.6 GNU式选项解析 725
14.2.7 结束参数处理 726
14.3 readline：GNU readline库 727
14.3.1 配置readline 727
14.3.2 完成文本 728
14.3.3 访问完成缓冲区 731
14.3.4 输入历史 733
14.3.5 hook 736
14.4 getpass：安全密码提示 737
14.4.1 示例 737
14.4.2 无终端使用getpass 738
14.5 cmd：面向行的命令处理器 739
14.5.1 处理命令 739
14.5.2 命令参数 740
14.5.3 现场帮助 741
14.5.4 自动完成 742
14.5.5 覆盖基类方法 744
14.5.6 通过属性配置Cmd 745
14.5.7 运行shell命令 746
14.5.8 候选输入 747
14.5.9 sys.argv的命令 748
14.6 shlex：解析shell类语法 749
14.6.1 解析加引号的字符串 749
14.6.2 为shell建立安全的字符串 751
14.6.3 嵌入注释 751
14.6.4 将字符串分解为token 752
14.6.5 包含其他token源 752
14.6.6 控制解析器 753
14.6.7 错误处理 755
14.6.8 POSIX与非POSIX解析 756
14.7 configparser：处理配置文件 757
14.7.1 配置文件格式 757
14.7.2 读取配置文件 758
14.7.3 访问配置设置 759
14.7.4 修改设置 765
14.7.5 保存配置文件 766
14.7.6 选项搜索路径 767
14.7.7 用拼接合并值 768
14.8 logging：报告状态、错误和信息消息 772
14.8.1 日志系统的组成 773
14.8.2 应用与库中的日志记录 773
14.8.3 记入文件 773
14.8.4 旋转日志文件 774
14.8.5 详细级别 774
14.8.6 命名日志记录器实例 776
14.8.7 日志树 776
14.8.8 与warnings模块集成 777
14.9 fileinput：命令行过滤器框架 778
14.9.1 将m3u文件转换为RSS 778
14.9.2 进度元数据 779
14.9.3 原地过滤 781
14.10 atexit：程序关闭回调 782
14.10.1 注册退出回调 782
14.10.2 修饰符语法 783
14.10.3 撤销回调 784
14.10.4 什么情况下不调用atexit函数 785
14.10.5 处理异常 786
14.11 sched：定时事件调度器 787
14.11.1 有延迟地运行事件 788
14.11.2 重叠事件 788
14.11.3 事件优先级 789
14.11.4 取消事件 790
第 15 章 国际化和本地化 791
15.1 gettext：消息编目 791
15.1.1 转换工作流概述 791
15.1.2 由源代码创建消息编目 792
15.1.3 运行时查找消息编目 794
15.1.4 复数值 795
15.1.5 应用与模块本地化 797
15.1.6 切换转换 798
15.2 locale：文化本地化API 798
15.2.1 探查当前本地化环境 799
15.2.2 货币 803
15.2.3 格式化数字 804
15.2.4 解析数字 805
15.2.5 日期和时间 806
第 16 章 开发工具 807
16.1 pydoc：模块的联机帮助 808
16.1.1 纯文本帮助 808
16.1.2 HTML帮助 809
16.1.3 交互式帮助 809
16.2 doctest：通过文档完成测试 810
16.2.1 起步 810
16.2.2 处理不可预测的输出 811
16.2.3 traceback 814
16.2.4 避开空白符 815
16.2.5 测试位置 819
16.2.6 外部文档 822
16.2.7 运行测试 824
16.2.8 测试上下文 827
16.3 unittest：自动测试框架 829
16.3.1 基本测试结构 829
16.3.2 运行测试 829
16.3.3 测试结果 830
16.3.4 断言真值 831
16.3.5 测试相等性 832
16.3.6 几乎相等？ 833
16.3.7 容器 833
16.3.8 测试异常 837
16.3.9 测试固件 838
16.3.10 用不同输入重复测试 840
16.3.11 跳过测试 842
16.3.12 忽略失败测试 842
16.4 trace：执行程序流 843
16.4.1 示例程序 843
16.4.2 跟踪执行 844
16.4.3 代码覆盖 845
16.4.4 调用关系 847
16.4.5 编程接口 848
16.4.6 保存结果数据 849
16.4.7 选项 850
16.5 traceback：异常和栈轨迹 850
16.5.1 支持函数 851
16.5.2 检查栈 851
16.5.3 traceback异常 853
16.5.4 底层异常API 854
16.5.5 底层栈API 857
16.6 cgitb：详细的traceback报告 859
16.6.1 标准traceback转储 859
16.6.2 启用详细的traceback 860
16.6.3 traceback中的局部变量 862
16.6.4 异常属性 864
16.6.5 HTML输出 866
16.6.6 记录traceback 866
16.7 pdb：交互式调试工具 868
16.7.1 启动调试工具 869
16.7.2 控制调试工具 871
16.7.3 断点 881
16.7.4 改变执行流 890
16.7.5 用别名定制调试工具 895
16.7.6 保存配置设置 897
16.8 profile和pstats：性能分析 898
16.8.1 运行性能分析工具 898
16.8.2 在上下文中运行 901
16.8.3 pstats：保存和处理统计信息 901
16.8.4 限制报告内容 903
16.8.5 调用者/被调用者图 903
16.9 timeit：测量小段Python代码执行的时间 905
16.9.1 模块内容 905
16.9.2 基本示例 905
16.9.3 将值存储在字典中 906
16.9.4 从命令行执行 908
16.10 tabnanny：缩进验证工具 909
16.11 compileall：字节编译源文件 910
16.11.1 编译一个目录 910
16.11.2 忽略文件 911
16.11.3 编译sys.path 912
16.11.4 编译单个文件 912
16.11.5 从命令行运行 913
16.12 pyclbr：类浏览器 914
16.12.1 扫描类 915
16.12.2 扫描函数 916
16.13 venv：创建虚拟环境 917
16.13.1 创建环境 917
16.13.2 虚拟环境的内容 917
16.13.3 使用虚拟环境 918
16.14 ensurepip：安装Python包安装工具 920
第 17 章 运行时特性 922
17.1 site：全站点配置 922
17.1.1 导入路径 922
17.1.2 用户目录 923
17.1.3 路径配置文件 924
17.1.4 定制站点配置 926
17.1.5 定制用户配置 927
17.1.6 禁用site模块 929
17.2 sys：系统特定配置 929
17.2.1 解释器设置 929
17.2.2 运行时环境 935
17.2.3 内存管理和限制 937
17.2.4 异常处理 942
17.2.5 底层线程支持 944
17.2.6 模块和导入 947
17.2.7 跟踪程序运行情况 963
17.3 os：可移植访问操作系统特定特性 968
17.3.1 检查文件系统内容 968
17.3.2 管理文件系统权限 971
17.3.3 创建和删除目录 973
17.3.4 处理符号链接 973
17.3.5 安全地替换现有文件 974
17.3.6 检测和改变进程所有者 975
17.3.7 管理进程环境 976
17.3.8 管理进程工作目录 977
17.3.9 运行外部命令 977
17.3.10 用os.fork()创建进程 979
17.3.11 等待子进程 980
17.3.12 Spawn创建新进程 982
17.3.13 操作系统错误码 982
17.4 platform：系统版本信息 983
17.4.1 解释器 983
17.4.2 平台 984
17.4.3 操作系统和硬件信息 985
17.4.4 可执行程序体系结构 986
17.5 resource：系统资源管理 987
17.5.1 当前使用情况 987
17.5.2 资源限制 988
17.6 gc：垃圾回收器 990
17.6.1 跟踪引用 990
17.6.2 强制垃圾回收 992
17.6.3 查找无法回收的对象引用 993
17.6.4 回收阈值和代 995
17.6.5 调试 998
17.7 sysconfig：解释器编译时配置 1002
17.7.1 配置变量 1002
17.7.2 安装路径 1004
17.7.3 Python版本和平台 1007
第 18 章 语言工具 1009
18.1 warnings：非致命警告 1009
18.1.1 分类和过滤 1010
18.1.2 生成警告 1010
18.1.3 用模式过滤 1011
18.1.4 重复的警告 1013
18.1.5 候选消息传送函数 1013
18.1.6 格式化 1014
18.1.7 警告中的栈层次 1014
18.2 abc：抽象基类 1015
18.2.1 ABC如何工作 1015
18.2.2 注册一个具体类 1016
18.2.3 通过派生实现 1017
18.2.4 辅助基类 1017
18.2.5 不完整的实现 1018
18.2.6 ABC中的具体方法 1019
18.2.7 抽象属性 1020
18.2.8 抽象类和静态方法 1022
18.3 dis：Python字节码反汇编工具 1023
18.3.1 基本反汇编 1023
18.3.2 反汇编函数 1024
18.3.3 类 1025
18.3.4 源代码 1026
18.3.5 使用反汇编调试 1027
18.3.6 循环的性能分析 1028
18.3.7 编译器优化 1033
18.4 inspect：检查现场对象 1035
18.4.1 示例模块 1035
18.4.2 检查模块 1035
18.4.3 检查类 1036
18.4.4 检查实例 1038
18.4.5 文档串 1038
18.4.6 获取源代码 1039
18.4.7 方法和函数签名 1041
18.4.8 类层次体系 1043
18.4.9 方法解析顺序 1044
18.4.10 栈与帧 1045
18.4.11 命令行接口 1047
第 19 章 模块和包 1048
19.1 importlib：Python的导入机制 1048
19.1.1 示例包 1048
19.1.2 模块类型 1049
19.1.3 导入模块 1049
19.1.4 加载工具 1051
19.2 pkgutil：包工具 1052
19.2.1 包导入路径 1052
19.2.2 包的开发版本 1054
19.2.3 用PKG文件管理路径 1055
19.2.4 嵌套包 1056
19.2.5 包数据 1058
19.3 zipimport：从ZIP归档加载Python代码 1060
19.3.1 示例 1060
19.3.2 查找模块 1061
19.3.3 访问代码 1061
19.3.4 源代码 1062
19.3.5 包 1063
19.3.6 数据 1063
附录A 移植说明 1066
附录B 标准库之外 1081
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>python 3标准库
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>面向ArcGIS的Python脚本编程
前言 1
鸣谢 3
第一部分 Python和地理处理的相关概念 4
第1章 Python简介 4
1.1 引言 4
1.2 Python的特点 4
1.3 脚本语言和程序语言 4
1.4 ArcGIS的脚本语言 5
1.5 Python的历史和版本 5
1.6 关于本书 6
1.7 Python脚本实例 7
1.8 Python脚本编辑器 10
本章要点 15
第2章 ArcGIS中的地理处理 16
2.1 引言 16
2.2 地理处理 16
2.3 ArcObjets 16
2.4 工具箱和工具 17
2.5 工具的类型 19
2.6 工具对话框 20
2.7 环境设置 24
2.8 批处理 26
2.9 模型和ModelBuilder 29
2.10 运行脚本 32
2.11 运行脚本工具 34
2.12 模型转为脚本 36
2.13 定时运行脚本 37
本章要点 39
第3章 Python窗口 40
3.1 引言 40
3.2 Python窗口简介 40
3.3 编写并运行脚本代码 40
3.4 获取帮助 42
3.5 Python窗口选项 44
3.6 保存脚本 45
3.7 在Python窗口中加载代码 46
本章要点 46
第4章 Python基础 47
4.1 引言 47
4.2 Python文档和资源 47
4.3 数据类型与数据结构 47
4.4 数字 47
4.5 变量及其命名规则 48
4.6 语句和表达式 49
4.7 字符串 50
4.8 列表 50
4.9 Python对象 51
4.10 函数 52
4.11 方法 53
4.12 处理字符串 53
4.13 处理列表 56
4.14 处理路径 58
4.15 模块 59
4.16 条件控制语句 60
4.17 循环语句 62
4.18 用户输入 63
4.19 注释 64
4.20 PythonWin编辑器 65
4.21 编码规范 67
本章要点 67
第5章 使用Python进行地理处理 69
5.1 引言 69
5.2 ArcPy站点包 69
5.3 导入ArcPy 69
5.4 使用旧版ArcGIS 70
5.5 使用地理处理工具 71
5.6 使用地理处理工具箱 74
5.7 ArcPy函数 75
5.8 ArcPy类 76
5.9 环境设置 77
5.10 工具消息 78
5.11 查询许可 81
5.12 获取帮助 83
本章要点 85
第6章 访问空间数据 86
6.1 引言 86
6.2 检查数据的存在性 86
6.3 描述数据 87
6.4 列出数据 88
6.5 对列表使用for循环 90
6.6 操作列表 91
6.7 元组 91
6.8 字典 92
本章要点 94
第7章 处理空间数据 95
7.1 引言 95
7.2 使用游标访问数据 95
7.3 在Python中使用SQL 98
7.4 处理表和字段名 99
7.5 解析属性表和字段名 101
7.6 处理文本文件 101
本章要点 107
第8章 处理几何图形 108
8.1 引言 108
8.2 处理几何对象 108
8.3 读取几何 108
8.4 处理多部分要素 111
8.5 处理有孔洞的多边形 114
8.6 写入几何 116
8.7 使用游标设置空间参考 118
8.8 使用地理处理工具处理几何对象 119
本章要点 120
第9章 使用栅格数据 121
9.1 引言 121
9.2 列出栅格数据 121
9.3 描述栅格属性 121
9.4 处理栅格对象 123
9.5 Spatial Analyst模块 124
9.6 地图代数 125
9.7 ApplyEnvironment函数 127
9.8 arcpy.as模块中的类 128
9.9 NumPy数组 131
本章要点 131
第10章 制图脚本 133
10.1 引言 133
10.2 ArcPy的制图模块 133
10.3 地图文档 133
10.4 地图文档的属性和方法 134
10.5 数据框 135
10.6 图层 137
10.7 修复数据链接 139
10.8 页面布局元素 143
10.9 输出地图 145
10.10 打印地图 146
10.11 处理PDF文档 147
10.12 新建地图册 147
10.13 制图脚本样例 150
本章要点 152
第11章 程序调试与错误处理 153
11.1 引言 153
11.2 识别语法错误 153
11.3 识别异常 155
11.4 程序调试 155
11.5 程序调试技巧 160
11.6 异常的处理 160
11.7 触发异常 161
11.8 处理异常 162
11.9 处理地理处理异常 164
11.10 其它错误处理方法 166
11.11 常见错误 166
本章要点 167
第12章 创建Python类和函数 168
12.1 引言 168
12.2 创建函数 168
12.3 调用函数 170
12.4 添加代码到模块中 172
12.5 使用类 173
12.6 地理处理包 176
本章要点 178
第13章 创建自定义工具 179
13.1 引言 179
13.2 为什么要创建自定义工具 179
13.3 创建自定义工具的步骤 179
13.4 编辑脚本代码 185
13.5 工具参数 186
13.6 设置工具参数 192
13.7 脚本工具示例 198
13.8 自定义工具行为 201
13.9 处理消息 202
13.10 处理独立脚本和工具的消息 204
13.11 自定义进度对话框 204
13.12 在进程中运行脚本 208
本章要点 208
第14章 共享脚本工具 209
14.1 引言 209
14.2 工具共享的方法 209
14.3 软件许可 209
14.4 共享工具的文件夹结构 210
14.5 处理路径 210
14.6 查找数据和工作空间 214
14.7 创建地理处理包 215
14.8 内嵌脚本并设置工具密码 216
14.9 编写工具文档 216
14.10 示例工具:市场分析 220
本章要点 226
附录C 227
1 安装数据和软件 227
2 安装练习数据 227
3 卸载数据及资源 229
4 安装软件 229
5 卸载软件 229
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>面向ArcGIS的Python脚本编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据分析实战
第1章　数据分析简介　　1
1.1　数据分析　　1
1.2　数据分析师的知识范畴　　2
1.2.1　计算机科学　　2
1.2.2　数学和统计学　　3
1.2.3　机器学习和人工智能　　3
1.2.4　数据来源领域　　3
1.3　理解数据的性质　　4
1.3.1　数据到信息的转变　　4
1.3.2　信息到知识的转变　　4
1.3.3　数据的类型　　4
1.4　数据分析过程　　4
1.4.1　问题定义　　5
1.4.2　数据抽取　　6
1.4.3　数据准备　　6
1.4.4　数据探索和可视化　　7
1.4.5　预测模型　　7
1.4.6　模型评估　　8
1.4.7　部署　　8
1.5　定量和定性数据分析　　9
1.6　开放数据　　9
1.7　Python和数据分析　　11
1.8　结论　　11
第2章　Python世界简介　　12
2.1　Python——编程语言　　12
2.2　Python——解释器　　13
2.2.1　Cython　　14
2.2.2　Jython　　14
2.2.3　PyPy　　14
2.3　Python 2和Python 3　　14
2.4　安装Python　　15
2.5　Python发行版　　15
2.5.1　Anaconda　　15
2.5.2　Enthought Canopy　　16
2.5.3　Python(x,y)　　17
2.6　使用Python　　17
2.6.1　Python shell　　17
2.6.2　运行完整的Python程序　　17
2.6.3　使用IDE编写代码　　18
2.6.4　跟Python交互　　18
2.7　编写Python代码　　18
2.7.1　数学运算　　18
2.7.2　导入新的库和函数　　19
2.7.3　函数式编程　　21
2.7.4　缩进　　22
2.8　IPython　　23
2.8.1　IPython shell　　23
2.8.2　IPython Qt-Console　　24
2.9　PyPI仓库——Python包索引　　25
2.10　多种Python IDE　　26
2.10.1　IDLE　　26
2.10.2　Spyder　　27
2.10.3　Eclipse（pyDev）　　27
2.10.4　Sublime　　28
2.10.5　Liclipse　　29
2.10.6　NinjaIDE　　29
2.10.7　Komodo IDE　　29
2.11　SciPy　　30
2.11.1　NumPy　　30
2.11.2　pandas　　30
2.11.3　matplotlib　　31
2.12　小结　　31
第3章　NumPy库　　32
3.1　NumPy简史　　32
3.2　NumPy安装　　32
3.3　ndarray：NumPy库的心脏　　33
3.3.1　创建数组　　34
3.3.2　数据类型　　34
3.3.3　dtype选项　　35
3.3.4　自带的数组创建方法　　36
3.4　基本操作　　37
3.4.1　算术运算符　　37
3.4.2　矩阵积　　38
3.4.3　自增和自减运算符　　39
3.4.4　通用函数　　40
3.4.5　聚合函数　　40
3.5　索引机制、切片和迭代方法　　41
3.5.1　索引机制　　41
3.5.2　切片操作　　42
3.5.3　数组迭代　　43
3.6　条件和布尔数组　　45
3.7　形状变换　　45
3.8　数组操作　　46
3.8.1　连接数组　　46
3.8.2　数组切分　　47
3.9　常用概念　　49
3.9.1　对象的副本或视图　　49
3.9.2　向量化　　50
3.9.3　广播机制　　50
3.10　结构化数组　　52
3.11　数组数据文件的读写　　53
3.11.1　二进制文件的读写　　54
3.11.2　读取文件中的列表形式数据　　54
3.12　小结　　55
第4章　pandas库简介　　56
4.1　pandas：Python数据分析库　　56
4.2　安装　　57
4.2.1　用Anaconda安装　　57
4.2.2　用PyPI安装　　58
4.2.3　在Linux系统的安装方法　　58
4.2.4　用源代码安装　　58
4.2.5　Windows模块仓库　　59
4.3　测试pandas是否安装成功　　59
4.4　开始pandas之旅　　59
4.5　pandas数据结构简介　　60
4.5.1　Series对象　　60
4.5.2　DataFrame对象　　66
4.5.3　Index对象　　72
4.6　索引对象的其他功能　　74
4.6.1　更换索引　　74
4.6.2　删除　　75
4.6.3　算术和数据对齐　　77
4.7　数据结构之间的运算　　78
4.7.1　灵活的算术运算方法　　78
4.7.2　DataFrame和Series对象之间的运算　　78
4.8　函数应用和映射　　79
4.8.1　操作元素的函数　　79
4.8.2　按行或列执行操作的函数　　80
4.8.3　统计函数　　81
4.9　排序和排位次　　81
4.10　相关性和协方差　　84
4.11　NaN数据　　85
4.11.1　为元素赋NaN值　　85
4.11.2　过滤NaN　　86
4.11.3　为NaN元素填充其他值　　86
4.12　等级索引和分级　　87
4.12.1　重新调整顺序和为层级排序　　89
4.12.2　按层级统计数据　　89
4.13　小结　　90
第5章　pandas：数据读写　　91
5.1　I/O API 工具　　91
5.2　CSV和文本文件　　92
5.3　读取CSV或文本文件中的数据　　92
5.3.1　用RegExp解析TXT文件　　94
5.3.2　从TXT文件读取部分数据　　96
5.3.3　往CSV文件写入数据　　97
5.4　读写HTML文件　　98
5.4.1　写入数据到HTML文件　　99
5.4.2　从HTML文件读取数据　　100
5.5　从XML读取数据　　101
5.6　读写Microsoft Excel文件　　103
5.7　JSON数据　　105
5.8　HDF5格式　　107
5.9　pickle——Python对象序列化　　108
5.9.1　用cPickle实现Python对象序列化　　109
5.9.2　用pandas实现对象序列化　　109
5.10　对接数据库　　110
5.10.1　SQLite3数据读写　　111
5.10.2　PostgreSQL数据读写　　112
5.11　NoSQL数据库MongoDB数据读写　　114
5.12　小结　　116
第6章　深入pandas：数据处理　　117
6.1　数据准备　　117
6.2　拼接　　122
6.2.1　组合　　124
6.2.2　轴向旋转　　125
6.2.3　删除　　127
6.3　数据转换　　128
6.3.1　删除重复元素　　128
6.3.2　映射　　129
6.4　离散化和面元划分　　132
6.5　排序　　136
6.6　字符串处理　　137
6.6.1　内置的字符串处理方法　　137
6.6.2　正则表达式　　139
6.7　数据聚合　　140
6.7.1　GroupBy　　141
6.7.2　实例　　141
6.7.3　等级分组　　142
6.8　组迭代　　143
6.8.1　链式转换　　144
6.8.2　分组函数　　145
6.9　高级数据聚合　　145
6.10　小结　　148
第7章　用matplotlib实现数据可视化　　149
7.1　matplotlib库　　149
7.2　安装　　150
7.3　IPython和IPython QtConsole　　150
7.4　matplotlib架构　　151
7.4.1　Backend层　　152
7.4.2　Artist层　　152
7.4.3　Scripting层（pyplot）　　153
7.4.4　pylab和pyplot　　153
7.5　pyplot　　154
7.5.1　生成一幅简单的交互式图表　　154
7.5.2　设置图形的属性　　156
7.5.3　matplotlib和NumPy　　158
7.6　使用kwargs　　160
7.7　为图表添加更多元素　　162
7.7.1　添加文本　　162
7.7.2　添加网格　　165
7.7.3　添加图例　　166
7.8　保存图表　　168
7.8.1　保存代码　　169
7.8.2　将会话转换为HTML文件　　170
7.8.3　将图表直接保存为图片　　171
7.9　处理日期值　　171
7.10　图表类型　　173
7.11　线性图　　173
7.12　直方图　　180
7.13　条状图　　181
7.13.1　水平条状图　　183
7.13.2　多序列条状图　　184
7.13.3　为pandas DataFrame生成多序列条状图　　185
7.13.4　多序列堆积条状图　　186
7.13.5　为pandas DataFrame绘制堆积条状图　　189
7.13.6　其他条状图　　190
7.14　饼图　　190
7.15　高级图表　　193
7.15.1　等值线图　　193
7.15.2　极区图　　195
7.16　mplot3d　　197
7.16.1　3D曲面　　197
7.16.2　3D散点图　　198
7.16.3　3D条状图　　199
7.17　多面板图形　　200
7.17.1　在其他子图中显示子图　　200
7.17.2　子图网格　　202
7.18　小结　　204
第8章　用scikit-learn库实现机器学习　　205
8.1　scikit-learn库　　205
8.2　机器学习　　205
8.2.1　有监督和无监督学习　　205
8.2.2　训练集和测试集　　206
8.3　用scikit-learn实现有监督学习　　206
8.4　Iris数据集　　206
8.5　K-近邻分类器　　211
8.6　Diabetes数据集　　214
8.7　线性回归：最小平方回归　　215
8.8　支持向量机　　219
8.8.1　支持向量分类　　219
8.8.2　非线性SVC　　223
8.8.3　绘制SVM分类器对Iris数据集的分类效果图　　225
8.8.4　支持向量回归　　227
8.9　小结　　229
第9章　数据分析实例——气象数据　　230
9.1　待检验的假设：靠海对气候的影响　　230
9.2　数据源　　233
9.3　用IPython Notebook做数据分析　　234
9.4　风向频率玫瑰图　　246
9.5　小结　　251
第10章　IPython Notebook内嵌JavaScript库D3　　252
10.1　开放的人口数据源　　252
10.2　JavaScript库D3　　255
10.3　绘制簇状条状图　　259
10.4　地区分布图　　262
10.5　2014年美国人口地区分布图　　266
10.6　小结　　270
第11章　识别手写体数字　　271
11.1　手写体识别　　271
11.2　用scikit-learn识别手写体数字　　271
11.3　Digits数据集　　272
11.4　学习和预测　　274
11.5　小结　　276
附录A　用LaTeX编写数学表达式　　277
附录B　开放数据源　　287
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据分析实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python与Tkinter编程
第一部分　基本概念
第1章 python
1.1 python编程及特点概述
1.1.1 为什么是python
1.1.2 python能被用于何处
1.2 关键字数据类型：表、元组和字典
1.2.1 表
1.2.2 元组
1.2.3 字典
1.3 类
1.3.1 类是怎样描述对象的
1.3.2 定义类
1.3.3 python技巧
1.3.4 一个实例的初始化
1.3.5 方法
1.3.6 私有与公有变量和方法
1.3.7 继承性
1.3.8 多重继承性
1.3.9 混合类
第2章　tkinter
2.1 ikinter模块
2.1.1 tkinter是什么
2.1.2 性能如何
2.1.3 如何运用tkinter
2.1.4 tkinter的特点
2.2 tcl/tk对tkinter的映像
2.3 win32和unix下的gul
2.4 tkinter类的层次
2.5 tkinter控件的外观
第3章　建立-个应用
3.1　计算器范例：关键特点
3.2 计算器范例：源代码
3.3 检查应用结构
3.4 应用的扩展
第二部分 显示
第4章 tkinter控件
4.1 tkinter控件漫游
4.1.1 顶层
4.1.2 框架
4，1.3 标签
4.1.4 按钮
4.1.5 输入
4.1.6 单选按钮
4.1.7 复选按钮
4.1.8 主菜单
4.1.9 消息
4.1.10 文本
4.1.11 画布
4.1.12 滚动条
4.1.13 列表框
4.1.14 标尺
4.2 字体和和颜色
4.2.1 字体描述符
4.2.2 x视窗系统字体描述符
4.2.3 颜色
4.2.4 设置宽应用默认字体和颜色
4.3 pmw大控件漫游
4.3.1 关于框
4.3.2 浮动图
4.3.3 按钮框
4.3.4 组合框
4.3.5 组合对话框
4.3.6 计数器
4.3.7 计数对话框控件
4.3.8 对话框
4.3.9 输入域
4.3.10 组
4.3.11 标签控件
4.3.12 菜单条
4.3.13 消息栏
4.3.14 消息对话
4.3.15 记事本r
4.3.16 记事本s
4.3.17 记事本
4.3.18 选项菜单
4.3.19 窗格控件
4.3.20 提示对话框
4.3.21 单选选项
4.3.22 滚动画布
4.3.23 滚动区域
4.3.24 滚动框架
4.3.25 滚动列表框
4.3.26 滚动文本
4.3.27 选项对话
4.3.28 文本对话
4.3.29 时间计数
4.4 创建新的大控件
4.4.1 大控件的描述
4.4.2 选项
4.4.3 制作大控件类
第5章　屏幕版面设计
5.1 版面设计的介绍
5.2 打包器
5.2.1 使用展开选项
5.2.2　使用填充选项
5.2.3 使用padx和pady选项
5.2.4 使用锚选项
5.2.5 使用分层性包装
5.3 网格
5.4 放置器
5.5 小结
第6章　事件，捆绑和回叫
6.1 事件驱动系统：评论
6.1.1 事件是什么
6.1.2 事件的传播
6.1.3 事件类型
6.2　tkinter事件
6.3 回叫
6，4 入表达
6.5 捆绑事件和回叫
6.5.1 捆绑方法
6.5.2 处理多重捆绑
6.6 定时器和背景程序
6.7 动态回叫管理者
6.8 使事件运作
6.8.1 捆绑动态数据与控件
6.8.2 数据确认
6.8.3 格式化(smak)控件
6.9 小结
第7章 使用类、控件和特殊控件
7.1 创建发光二极管类
7.1.1 再试试
7.1.2 什么改变了
7.2 构件类库
7.2.1 将六边形螺帽加入类库
7.2.2 创建开关类
7.2.3 创建大控件
7.3 小结
第8章 对话框和窗体
8.1 对话框
8.1.1 标准对话框
8.1.2 数据输入对话框
8.1.3 简单表格
8.1.4 tkinter变量
8.2 标准窗体框架
8.3 数据字典
8.4 活页夹
8.5 浏览器
8.6 压缩程序
8.7 图像映射
8.8 小结
第9章 面板与机器
9.1 创建前端面板
9.2 模块性
9.3 实现前端面板
9.4 gif、bmp与图层
9.5 一个更完整的例子
9.6 使用pov-ray创建的虚拟设备
9.6.1 现在看点完全不同的东西
9.7 小结
第10章 绘制点和标尺
10.1 在画布上绘图
10.1.1 移动画布对象
10.2 一个更完整的绘图程序
10.3 滚动画布
10.4 标尺工具
10.5 缩放画布对象
10.6 一些已完成的小玩意
10.7 快速绘制
10.8 小结
第11章 图形和图表
11.1 简单图形
11.2 图形控件
11.2.1 添加条形图
11.2.2 饼图
11.3 三维图形
11.4 带形记录图
11.5 小结
第12章 导航
12.1 引言：导航方法
12.2 鼠标导航
12.3 键盘导航："无鼠标导航"
12.4 建立应用程序的导航
12.5 图像映射'
12.6 小结
第13章 窗口管理器
13.1 什么是窗口管理器
13.2 几何方法
13.3 可见性方法
13.4 图标方法
13.5 协议方法
13.6 其他wm方法
第三部分 组合起来
第14章 python扩展
14.1 写python扩展
14.2 建立python扩展
14.2.1 在unix下静态链接一个扩展
14.2.2 在windows下静态链接一个扩展
14.2.3 在unix下构建动态模块
14.2.4 在windows下构建动态模块
14.2.5 安装动态模块
14.2.6 使用动态模块
14.3 在扩展中使用pyhon apl
14.4 在c++中构建扩展
14.5 格式化字符串
14.6 引用计数
14.7 嵌入式的python
14.8 小结
第15章 调试程序
15.1 为什么使用print表达式
15.2 一个简单的例子
15.3 如何调试
15.4 tkinter开发器
15.5 pdb
15.6 idle
15.7 ddd
第16章 设计有效的图形应用程序
16.1 友好界面设计的元素
16.2 人为因素
16.2.1 选择字体
16.2.2 在gui中使用颜色
16.2.3 尺寸的考虑
16.3 可选择的gui
16.4 小结
第17章 性能编程
17.1 每日加速
17.1.1 程序组织
17.1.2 使用python优化器
17.1.3 检查代码
17.2 tkinter性能
17.2.1 让它保持简短
17.2.2 删减本地变量
17.2.3 保持简单
17.2.4 快速初始化
17.2.5 节省事件
17.3 python技术
17.3.1 引用模块
17.3.2 字符串链接
17.3.3 正确使用嵌套的循环
17.3.4 减少模块引用
17.3.5 使用本地变量
17.3.6 使用异常处理
17.3.7 使用map，filter和reduce
17.4 程序剖析
17.5 python扩展
17.6 小结
第18章 线程和异步技术
18.1 线程
18.1.1 非图形用户界面下的线程
18.1.2 图形用户界面下的线程
18.2 "after"处理
18.3 小结
第19章 发布tkinter程序
19.1 发布程序的一般问题
19.2 发布unix程序
19.3 发布win32程序
19.4 python发布工具
第4部分 附录
附录a tk到tkinter映射
附录b tkinter参考资料
附录c pmw参考：python megawidgets
附录d 创建和安装python，tkinter
附录e 事件与键盘系统
附录f 光标
附录g 参考文献
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python与Tkinter编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python高效开发实战
第1篇  打好Python基础
第1章  Python基础知识	2
1.1  Python综述	3
1.1.1  了解Python的特性及版本	3
1.1.2  安装Python	5
1.1.3  使用Python原生编辑器	7
1.1.4  使用Eclipse开发环境	9
1.1.5  Python编程入门——解决“斐波那契数列”问题	14
1.2  数据类型	16
1.2.1  Number类型	17
1.2.2  Sequence类型簇	20
1.2.3  String类型	22
1.2.4  Tuple类型	28
1.2.5  List类型	29
1.2.6  Set类型	30
1.2.7  Dictionary类型	33
1.3  流程控制	35
1.3.1  程序块与作用域	35
1.3.2  判断语句	36
1.3.3  循环语句	38
1.3.4  语句嵌套	41
1.4  函数	42
1.4.1  定义与使用	42
1.4.2  变长参数	44
1.4.3  匿名函数	46
1.5  异常	48
1.5.1  处理异常	48
1.5.2  自定义异常	50
1.6  面向对象编程	51
1.6.1  什么是面向对象	52
1.6.2  类和对象	53
1.6.3  继承	61
1.7  本章总结	64
第2章  Web编程之网络基础	65
2.1  TCP/IP网络	66
2.1.1  计算机网络综述	66
2.1.2  TCP和UDP	70
2.1.3  C/S及B/S架构	73
2.2  HTTP	74
2.2.1  HTTP流程	75
2.2.2  HTTP消息结构	76
2.2.3  HTTP请求方法	80
2.2.4  基于HTTP的网站开发	80
2.3  Socket编程	82
2.3.1  Socket基础	82
2.3.2  实战演练：Socket TCP原语	83
2.3.3  实战演练：Socket UDP原语	87
2.4  本章总结	88
第3章  客户端的编程技术	89
3.1  HTML	90
3.1.1  HTML介绍	90
3.1.2  HTML基本标签	93
3.1.3  HTML表单	99
3.2  CSS	102
3.2.1  样式声明方式	103
3.2.2  CSS语法	104
3.2.3  基于CSS+DIV的页面布局	106
3.3  JavaScript	108
3.3.1  在HTML中嵌入JavaScript	108
3.3.2  JavaScript的基本语法	109
3.3.3  DOM及其读写	115
3.3.4  window对象	118
3.3.5  HTML事件处理	121
3.4  jQuery	124
3.4.1  使用jQuery	124
3.4.2  选择器	125
3.4.3  行为	126
3.5  本章总结	130
第4章  数据库及ORM	131
4.1  数据库概念	131
4.1.1  Web开发中的数据库	132
4.1.2  关系数据库建模	134
4.2  关系数据库编程	137
4.2.1  常用SQL语句	137
4.2.2  实战演练：在Python中应用SQL	143
4.3  ORM编程	145
4.3.1  ORM理论基础	145
4.3.2  Python ORM库介绍	147
4.3.3  实战演练：Peewee库编程	148
4.4  本章总结	151
第2篇  详解主流Python Web框架
第5章  Python网络框架纵览	154
5.1  网络框架综述	155
5.1.1  网络框架及MVC架构	155
5.1.2  4种Python网络框架：Django、Tornado、Flask、Twisted	156
5.2  开发环境准备	157
5.2.1  使用Python虚环境	157
5.2.2  Windows环境下的安装	159
5.2.3  Linux环境下的安装	162
5.2.4  easy_install与pip的使用	163
5.3  Web服务器	165
5.3.1  实战演练1：WSGI接口	165
5.3.2  实战演练2：Linux+Nginx+uWSGI配置	166
5.3.3  实战演练3：建立安全的HTTPS网站	172
5.4  本章总结	174
第6章  企业级开发框架——Django	175
6.1  Django综述	176
6.1.1  Django的特点及结构	176
6.1.2  安装Django	177
6.2  实战演练：开发Django站点	177
6.2.1  建立项目	177
6.2.2  建立应用	178
6.2.3  基本视图	179
6.2.4  内置Web服务器	181
6.2.5  模型类	182
6.2.6  表单视图	185
6.2.7  使用管理界面	188
6.3  Django模型层	190
6.3.1  基本操作	190
6.3.2  关系操作	198
6.3.3  面向对象ORM	202
6.4  Django视图层	205
6.4.1  URL映射	205
6.4.2  视图函数	211
6.4.3  模板语法	213
6.5  使用Django表单	218
6.5.1  表单绑定状态	219
6.5.2  表单数据验证	219
6.5.3  检查变更字段	222
6.6  个性化管理员站点	222
6.6.1  模型	222
6.6.2  模板	225
6.6.3  站点	227
6.7  本章总结	229
第7章  高并发处理框架——Tornado	230
7.1  Tornado概述	231
7.1.1  Tornado介绍	231
7.1.2  安装Tornado	232
7.2  异步及协程基础	232
7.2.1  同步与异步I/O	233
7.2.2  Python关键字yield	234
7.2.3  协程	236
7.3  实战演练：开发Tornado网站	239
7.3.1  网站结构	240
7.3.2  路由解析	241
7.3.3  RequestHandler	242
7.3.4  异步化及协程化	248
7.4  用户身份验证框架	250
7.4.1  安全Cookie机制	250
7.4.2  用户身份认证	252
7.4.3  防止跨站攻击	254
7.5  HTML5 WebSocket概念及应用	256
7.5.1  WebSocket概念	256
7.5.2  服务端编程	259
7.5.3  客户端编程	261
7.6  Tornado网站部署	263
7.6.1  调试模式	264
7.6.2  静态文件	265
7.6.3  运营期配置	267
7.7  本章总结	269
第8章  支持快速建站的框架——Flask	270
8.1  Flask综述	271
8.1.1  Flask的特点	271
8.1.2  在Windows中的安装	272
8.1.3  在Linux及Mac中的安装	274
8.2  实战演练：开发Flask站点	276
8.2.1  Hello World程序	276
8.2.2  模板渲染	278
8.2.3  重定向和错误处理	280
8.3  路由详解	281
8.3.1  带变量的路由	281
8.3.2  HTTP方法绑定	283
8.3.3  路由地址反向生成	284
8.4  使用Context上下文	285
8.4.1  会话上下文	286
8.4.2  应用全局对象	287
8.4.3  请求上下文	289
8.4.4  回调接入点	291
8.5  Jinja2模板编程	292
8.5.1  Jinja2语法	293
8.5.2  使用过滤器	294
8.5.3  流程控制	297
8.5.4  模板继承	300
8.6  SQLAlchemy数据库编程	303
8.6.1  SQLAlchemy入门	303
8.6.2  主流数据库的连接方式	307
8.6.3  查询条件设置	308
8.6.4  关系操作	311
8.6.5  级联	315
8.7  WTForm表单编程	321
8.7.1  定义表单	321
8.7.2  显示表单	322
8.7.3  获取表单数据	324
8.8  本章总结	326
第9章  底层自定义协议网络框架——Twisted	327
9.1  Twisted综述	328
9.1.1  框架概况	328
9.1.2  安装Twisted及周边组件	328
9.2  实战演练：开发TCP广播系统	330
9.2.1  广播服务器	330
9.2.2  广播客户端	332
9.3  UDP编程技术	335
9.3.1  实战演练1：普通UDP	335
9.3.2  实战演练2：Connected UDP	338
9.3.3  实战演练3：组播技术	340
9.4  Twisted高级话题	341
9.4.1  延迟调用	341
9.4.2  使用多线程	347
9.4.3  安全信道	349
9.5  本章总结	352
第3篇  实战项目
第10章  实战1：用Django+PostgreSQL开发移动Twitter	354
10.1  项目概览	355
10.1.1  项目来源（GitHub）	355
10.1.2  安装PostgreSQL数据库并配置Python环境	356
10.1.3  项目结构	358
10.2  页面框架设计	360
10.2.1  基模板文件	360
10.2.2  手机大小自适应（jQuery技术）	363
10.2.3  文本国际化	364
10.2.4  网站页面一览	367
10.3  用户注册及登录	368
10.3.1  页面设计	368
10.3.2  模型层	370
10.3.3  视图设计	371
10.4  手机消息的发布和浏览	376
10.4.1  页面设计	376
10.4.2  模型层	381
10.4.3  视图设计	382
10.5  社交朋友圈	385
10.5.1  页面设计	385
10.5.2  模型层	387
10.5.3  视图设计	388
10.6  个人资料配置	392
10.6.1  页面设计	392
10.6.2  图片上传（第三方库PIL）	394
10.7  Web管理站点	397
10.7.1  定义可管理对象	397
10.7.2  配置管理员	398
10.7.3  使用管理站点	398
10.8  本章总结	400
第11章  实战2：用Tornado+jQuery开发WebSocket聊天室	401
11.1  聊天室概览	402
11.1.1  项目介绍	402
11.1.2  安装和代码结构	403
11.2  消息通信	404
11.2.1  建立网站	404
11.2.2  WebSocket服务器	407
11.2.3  WebSocket客户端	408
11.3  聊天功能	411
11.3.1  昵称	411
11.3.2  消息来源	413
11.3.3  历史消息缓存	415
11.4  用户面板	416
11.4.1  用CSS定义用户列表	416
11.4.2  服务器通知	418
11.4.3  响应服务器动态通知（jQuery动态编程）	419
11.5  本章总结	420
第12章  实战3：用Flask+Bootstrap+Restful开发学校管理系统	421
12.1  系统概览	422
12.1.1  来源及功能	422
12.1.2  项目安装	423
12.1.3  代码结构	425
12.2  数据模型设计	427
12.2.1  E-R图设计	427
12.2.2  SQLAlchemy建模	429
12.3  响应式页面框架设计	435
12.3.1  基模板组件引用	435
12.3.2  响应式导航	439
12.4  新建学校	441
12.4.1  WTForm表单	441
12.4.2  视图及文件上传	443
12.4.3  响应式布局	445
12.5  学校管理	447
12.5.1  查询视图	447
12.5.2  分页模板	450
12.6  Restful接口	453
12.6.1  Restful概念	453
12.6.2  Restless插件	454
12.6.3  开发Restful接口	457
12.7  本章总结	461
第13章  实战4：用Twisted+SQLAlchemy+ZeroMQ开发跨平台物联网消息网关	463
13.1  项目概况	464
13.1.1  功能定义	464
13.1.2  安装和测试	465
13.1.3  项目结构	468
13.2  项目设计	469
13.2.1  SQLAlchmey建模	469
13.2.2  TCP接口设计	474
13.3  通信引擎	476
13.3.1  跨平台安全端口	477
13.3.2  管理连接	478
13.3.3  收发数据	479
13.3.4  TCP流式分包	482
13.3.5  异步执行	484
13.4  协议编程	486
13.4.1  执行命令	486
13.4.2  struct解析字节流	489
13.4.3  序列号生成	490
13.4.4  连接保持	491
13.4.5  发送Response	492
13.4.6  错误机制	494
13.5  ZeroMQ集群	496
13.5.1  内部接口设计	496
13.5.2  PUB/SUB通信模型编程	498
13.6  本章总结	499
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python高效开发实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入理解Python特性
第1章　简介　　1
1.1　什么是Python技巧　　1
1.2　本书作用　　2
1.3　如何阅读本书　　2
第2章　Python整洁之道　　4
2.1　用断言加一层保险　　4
2.1.1　示例：Python中的断言　　4
2.1.2　为什么不用普通的异常来处理　　6
2.1.4　常见陷阱　　6
2.1.5　Python断言总结　　9
2.1.6　关键要点　　9
2.2　巧妙地放置逗号　　9
2.3　上下文管理器和with语句　　11
2.3.1　在自定义对象中支持with　　12
2.3.2　用上下文管理器编写漂亮的API　　13
2.3.3　关键要点　　15
2.4　下划线、双下划线及其他　　15
2.4.1　前置单下划线：_var　　15
2.4.2　后置单下划线：var_　　17
2.4.3　前置双下划线：__var　　17
2.4.4　前后双下划线：__var__　　20
2.4.5　单下划线：_　　21
2.4.6　关键要点　　22
2.5　字符串格式化中令人震惊的真相　　22
2.5.1　第一种方法：“旧式”字符串格式化　　22
2.5.2　第二种方法：“新式”字符串格式化　　23
2.5.3　第三种方法：字符串字面值插值（Python 3.6+）　　24
2.5.4　第四种方法：模板字符串　　25
2.5.5　如何选择字符串格式化方法　　26
2.5.6　关键要点　　27
2.6　“Python之禅”中的彩蛋　　27
第3章　高效的函数　　28
3.1　函数是Python的头等对象　　28
3.1.1　函数是对象　　28
3.1.2　函数可存储在数据结构中　　29
3.1.3　函数可传递给其他函数　　30
3.1.4　函数可以嵌套　　31
3.1.5　函数可捕捉局部状态　　32
3.1.6　对象也可作为函数使用　　33
3.1.7　关键要点　　33
3.2　lambda是单表达式函数　　34
3.2.1　lambda的使用场景　　35
3.2.2　不应过度使用lambda　　36
3.2.3　关键要点　　36
3.3　装饰器的力量　　37
3.3.1　Python装饰器基础　　38
3.3.2　装饰器可以修改行为　　39
3.3.3　将多个装饰器应用于一个函数　　41
3.3.5　如何编写“可调试”的装饰器　　44
3.4　有趣的*args和**kwargs　　44
3.4.1　传递可选参数或关键字参数　　45
3.4.2　关键要点　　46
3.5　函数参数解包　　47
3.6　返回空值　　48
第4章　类与面向对象　　51
4.1　对象比较：is　与==　　51
4.2　字符串转换（每个类都需要__repr__）　　52
4.2.1　__str__与__repr__　　54
4.2.2　为什么每个类都需要__repr__　　55
4.2.3　Python 2.x的差异：__unicode__　　57
4.2.4　关键要点　　58
4.3　定义自己的异常类　　58
4.4　克隆对象　　60
4.4.1　制作浅副本　　61
4.4.2　制作深副本　　62
4.4.3　复制任意对象　　63
4.4.4　关键要点　　65
4.5　用抽象基类避免继承错误　　65
4.6　namedtuple的优点　　67
4.6.1　namedtuple上场　　68
4.6.2　子类化namedtuple　　70
4.6.3　内置的辅助方法　　70
4.6.4　何时使用namedtuple　　71
4.6.5　关键要点　　71
4.7　类变量与实例变量的陷阱　　72
4.7.1　与狗无关的例子　　74
4.7.2　关键要点　　75
4.8　实例方法、类方法和静态方法揭秘　　75
4.8.1　实例方法　　76
4.8.2　类方法　　76
4.8.3　静态方法　　76
4.8.4　在实践中探寻　　77
4.8.5　使用@classmethod的Pizza工厂类　　78
4.8.6　什么时候使用静态方法　　80
4.8.7　关键要点　　81
第5章　Python中常见的数据结构　　82
5.1　字典、映射和散列表　　83
5.1.1　dict——首选字典实现　　83
5.1.2　collections.OrderedDict——能记住键的插入顺序　　84
5.1.3　collections.defaultdict——为缺失的键返回默认值　　85
5.1.4　collections.ChainMap——搜索多个字典　　85
5.1.5　types.MappingProxyType——用于创建只读字典　　86
5.1.6　Python中的字典：总结　　86
5.1.7　关键要点　　87
5.2　数组数据结构　　87
5.2.1　列表——可变动态数组　　88
5.2.2　元组——不可变容器　　88
5.2.3　array.array——基本类型数组　　89
5.2.4　str——含有Unicode　字符的不可变数组　　90
5.2.5　bytes——含有单字节的不可变数组　　91
5.2.6　bytearray——含有单字节的可变数组　　91
5.2.7　关键要点　　92
5.3　记录、结构体和纯数据对象　　93
5.3.1　字典——简单数据对象　　93
5.3.2　元组——不可变对象集合　　94
5.3.3　编写自定义类——手动精细控制　　96
5.3.4　collections.namedtuple——方便的数据对象　　96
5.3.5　typing.NamedTuple——改进版namedtuple　　97
5.3.6　struct.Struct——序列化C结构体　　98
5.3.7　types.SimpleNamespace——花哨的属性访问　　99
5.3.8　关键要点　　99
5.4　集合和多重集合　　100
5.4.1　set——首选集合实现　　101
5.4.2　frozenset——不可变集合　　101
5.4.3　collections.Counter——多重集合　　101
5.4.4　关键要点　　102
5.5　栈（后进先出）　　102
5.5.1　列表——简单的内置栈　　103
5.5.2　collections.deque——快速且稳健的栈　　104
5.5.3　queue.LifoQueue——为并行计算提供锁语义　　104
5.5.4　比较Python　中各个栈的实现　　105
5.6　队列（先进先出）　　106
5.6.1　列表——非常慢的队列　　107
5.6.2　collections.deque——快速和稳健的队列　　107
5.6.3　queue.Queue——为并行计算提供的锁语义　　108
5.6.4　multiprocessing.Queue——共享作业队列　　108
5.6.5　关键要点　　109
5.7　优先队列　　109
5.7.1　列表——手动维护有序队列　　110
5.7.3　queue.PriorityQueue——美丽的优先级队列　　111
5.7.4　关键要点　　111
第6章　循环和迭代　　112
6.1　编写Python式的循环　　112
6.2　理解解析式　　114
6.3　列表切片技巧与寿司操作员　　116
6.4　美丽的迭代器　　118
6.4.1　无限迭代　　119
6.4.2　for-in循环在Python中的工作原理　　121
6.4.3　更简单的迭代器类　　122
6.4.4　不想无限迭代　　123
6.4.5　Python 2.x兼容性　　125
6.4.6　关键要点　　126
6.5　生成器是简化版迭代器　　126
6.5.1　无限生成器　　126
6.5.2　能够停下来的生成器　　128
6.5.3　关键要点　　130
6.6　生成器表达式　　130
6.6.1　生成器表达式与列表解析式　　132
6.6.3　内联生成器表达式　　133
6.6.4　物极必反　　133
6.6.5　关键要点　　134
6.7　迭代器链　　134
第7章　字典技巧　　137
7.1　字典默认值　　137
7.2　字典排序　　139
7.3　用字典模拟switch/case语句　　141
7.4　“最疯狂”的字典表达式　　144
7.5　合并词典的几种方式　　148
7.6　美观地输出字典　　149
第8章　Python式高效技巧　　152
8.1　探索Python的模块和对象　　152
8.2　用virtualenv隔离项目依赖关系　　154
8.2.1　使用虚拟环境　　155
8.2.2　关键要点　　157
8.3　在字节码后一窥究竟　　157
第9章　结语　　161
9.1　针对Python开发者免费每周提示　　161
9.2　PythonistaCafe：Python开发人员的社区　　162
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入理解Python特性
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据科学入门
第1章　什么是数据科学　　1
第1单元　数据分析步骤　　2
第2单元　数据获取途径　　3
第3单元　报告的结构　　4
轮到你了　　5
第2章　数据科学的Python核心　　6
第4单元　理解基本的字符串函数　　6
第5单元　选择合适的数据结构　　8
第6单元　通过列表推导式理解列表　　9
第7单元　使用计数器　　10
第8单元　使用文件　　11
第9单元　上网　　12
第10单元　使用正则表达式实现模式匹配　　13
第11单元　globbing文件名与其他字符串　　17
第12单元　Pickling和Unpickling数据　　18
轮到你了　　18
第3章　使用文本数据　　20
第13单元　处理HTML文件　　20
第14单元　处理CSV文件　　24
第15单元　读取JSON文件　　25
第16单元　处理自然语言中的文本　　27
轮到你了　　31
第4章　使用数据库　　33
第17单元　设置MySQL数据库　　33
第18单元　使用MySQL数据库：命令行　　36
第19单元　使用MySQL数据库：pymysql　　39
第20单元　改善文档存储：MongoDB　　41
轮到你了　　44
第5章　使用表格形式的数值数据　　45
第21单元　创建数组　　46
第22单元　转置和重排　　48
第23单元　索引和切片　　49
第24单元　广播　　51
第25单元　揭秘通用函数　　52
第26单元　理解条件函数　　54
第27单元　数组的聚合与排序　　54
第28单元　将数组用作集合　　56
第29单元　数组的保存和读取　　57
第30单元　生成合成正弦波　　57
轮到你了　　59
第6章　使用series和frame　　61
第31单元　pandas数据结构　　62
第32单元　数据重塑　　67
第33单元　处理缺失数据　　72
第34单元　组合数据　　75
第35单元　数据的排序和描述　　78
第36单元　数据转换　　82
第37单元　掌握pandas的文件读写功能　　87
轮到你了　　90
第7章　使用网络数据　　91
第38单元　概念剖析　　91
第39单元　网络分析序列　　94
第40单元　使用networkx　　95
轮到你了　　101
第8章　绘图　　103
第41单元　使用PyPlot进行基本绘图　　104
第42单元　了解其他绘图类型　　106
第43单元　精通绘图装饰　　107
第44单元　用pandas绘图　　109
轮到你了　　111
第9章　概率与统计　　113
第45单元　回顾概率分布　　113
第46单元　回顾统计度量　　115
第47单元　以Python的方式完成统计　　117
轮到你了　　120
第10章　机器学习　　122
第48单元　设计预测实验　　122
第49单元　线性回归拟合　　124
第50单元　用k均值聚类实现数据分组　　129
第51单元　在随机决策森林中生存　　131
轮到你了　　133
附录1　扩展阅读　　135
附录2　单星项目的解决方案　　137
参考文献　　146
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据科学入门
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python语言在Abaqus中的应用
序言一
序言二
第0章 导言：千里之行，始于足下 ——写给读者的话
第1章 Python语言基础
第2章 Abaqus脚本接口
第3章 编写脚本快速建模
第4章 编写脚本访问输出数据库
第5章 编写脚本进行其他后处理
第6章 脚本的高级处理功能
附录A Pytllon语言中的保留字
附录B Python语言中的运算符
附录C 脚hon语言中的常用函数
附录D 中文索引
附录E 英文索引
附录F 本书中用到的方法(函数)
附录G 本书中用到的模块参考文献
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python语言在Abaqus中的应用
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python参考手册 第4版 修订版
目录
第一部分 Python语言
第1章 Python简介 2
1.1 运行Python 2
1.2 变量和算术表达式 3
1.3 条件语句 5
1.4 文件输入和输出 6
1.5 字符串 7
1.6 列表 8
1.7 元组 9
1.8 集合 10
1.9 字典 11
1.10 迭代与循环 12
1.11 函数 13
1.12 生成器 14
1.13 协程 15
1.14 对象与类 16
1.15 异常 17
1.16 模块 18
1.17 获得帮助 19
第2章 词法约定和语法 20
2.1 行结构和缩进 20
2.2 标识符和保留字 21
2.3 数字字面量 21
2.4 字符串字面量 22
2.5 容器 23
2.6 运算符、分隔符及特殊符号 24
2.7 文档字符串 24
2.8 装饰器 24
2.9 源代码编码 25
第3章 类型与对象 26
3.1 术语 26
3.2 对象的标识与类型 26
3.3 引用计数与垃圾回收 27
3.4 引用与复制 28
3.5 第 一类对象 29
3.6 表示数据的内置类型 30
3.6.1 None类型 30
3.6.2 数值类型 31
3.6.3 序列类型 31
3.6.4 映射类型 35
3.6.5 集合类型 36
3.7 表示程序结构的内置类型 38
3.7.1 可调用类型 38
3.7.2 类、类型与实例 40
3.7.3 模块 41
3.8 解释器内部使用的内置类型 41
3.8.1 代码对象 41
3.8.2 帧对象 42
3.8.3 跟踪对象 42
3.8.4 生成器对象 43
3.8.5 切片对象 43
3.8.6 Ellipsis对象 43
3.9 对象行为与特殊方法 44
3.9.1 对象的创建与销毁 44
3.9.2 对象字符串表示 44
3.9.3 对象比较与排序 45
3.9.4 类型检查 46
3.9.5 属性访问 46
3.9.6 属性包装与描述符 46
3.9.7 序列与映射方法 47
3.9.8 迭代 48
3.9.9 数学操作 48
3.9.10 可调用接口 50
3.9.11 上下文管理协议 50
3.9.12 对象检查与dir() 51
第4章 运算符与表达式 52
4.1 数值操作 52
4.2 序列操作 53
4.3 字符串格式化 56
4.4 高 级字符串格式化 57
4.5 字典操作 59
4.6 集合操作 60
4.7 增量赋值 60
4.8 属性（.）运算符 61
4.9 函数调用()运算符 61
4.10 转换函数 61
4.11 布尔表达式与真值 62
4.12 对象等同性与标识 63
4.13 运算优先级 63
4.14 条件表达式 64
第5章 程序结构与控制流 65
5.1 程序结构与执行 65
5.2 执行条件语句 65
5.3 循环与迭代 66
5.4 异常 68
5.4.1 内置异常 70
5.4.2 定义新异常 71
5.5 上下文管理器与with语句 72
5.6 断言与__debug__ 73
第6章 函数与函数式编程 75
6.1 函数 75
6.2 参数传递与返回值 77
6.3 作用域规则 78
6.4 作为对象与闭包的函数 79
6.5 装饰器 82
6.6 生成器与yield 83
6.7 协程与yield表达式 85
6.8 使用生成器与协程 87
6.9 列表推导 89
6.10 生成器表达式 90
6.11 声明式编程 91
6.12 lambda运算符 92
6.13 递归 92
6.14 文档字符串 93
6.15 函数属性 94
6.16 eval()、exec()和compile()函数 94
第7章 类与面向对象编程 96
7.1 class语句 96
7.2 类实例 97
7.3 作用域规则 97
7.4 继承 98
7.5 多态动态绑定和鸭子类型 100
7.6 静态方法和类方法 101
7.7 特性 102
7.8 描述符 104
7.9 数据封装和私有属性 105
7.10 对象内存管理 106
7.11 对象表示和属性绑定 108
7.12 __slots__ 109
7.13 运算符重载 110
7.14 类型和类成员测试 111
7.15 抽象基类 113
7.16 元类 114
7.17 类装饰器 117
第8章 模块、包与分发 118
8.1 模块与import语句 118
8.2 从模块导入选定符号 119
8.3 以主程序的形式执行 120
8.4 模块搜索路径 121
8.5 模块加载和编译 121
8.6 模块重新加载和卸载 122
8.7 包 123
8.8 分发Python程序和库 125
8.9 安装第三方库 127
第9章 输入与输出 129
9.1 读取命令行选项 129
9.2 环境变量 130
9.3 文件和文件对象 130
9.4 标准输入、输出和错误 133
9.5 print语句 133
9.6 print()函数 134
9.7 文本输出中的变量插入 134
9.8 生成输出 135
9.9 Unicode字符串处理 136
9.10 Unicode I/O 137
9.10.1 Unicode数据编码 138
9.10.2 Unicode字符特性 140
9.11 对象持久化与pickle模块 140
第10章 执行环境 142
10.1 解释器选项与环境 142
10.2 交互式会话 144
10.3 启动Python应用程序 145
10.4 站点配置文件 145
10.5 用户站点包 146
10.6 启用新功能 146
10.7 程序终止 147
第11章 测试、调试、探查与调优 149
11.1 文档字符串和doctest模块 149
11.2 单元测试和unittest模块 151
11.3 Python调试器和pdb模块 153
11.3.1 调试器命令 153
11.3.2 从命令行进行调试 156
11.3.3 配置调试器 156
11.4 程序探查 156
11.5 调优与优化 157
11.5.1 进行计时测量 157
11.5.2 进行内存测量 158
11.5.3 反汇编 158
11.5.4 调优策略 159
第二部分 Python库
第12章 内置函数和异常 164
12.1 内置函数和类型 164
12.2 内置异常 172
12.2.1 异常基类 172
12.2.2 异常实例 173
12.2.3 预定义的异常类 173
12.3 内置警告 176
12.4 future_builtins 176
第13章 Python运行时服务 178
13.1 atexit 178
13.2 copy 178
13.3 gc 179
13.4 inspect 180
13.5 marshal 183
13.6 pickle 184
13.7 SYS 186
13.7.1 变量 186
13.7.2 函数 189
13.8 traceback 191
13.9 types 192
13.10 warnings 193
13.11 weakref 195
13.11.1 示例 196
13.11.2 注意 196
第14章 数学运算 197
14.1 decimal 197
14.1.1 Decimal对象 197
14.1.2 Context对象 198
14.1.3 函数和常量 200
14.1.4 示例 201
14.1.5 注意 202
14.2 fractions 203
14.3 math 204
14.4 numbers 205
14.5 random 206
14.5.1 种子和初始化 206
14.5.2 随机整数 206
14.5.3 随机序列 207
14.5.4 实值随机分布 207
14.5.5 注意 208
第15章 数据结构、算法与代码简化 209
15.1 abc 209
15.2 array 210
15.3 bisect 212
15.4 collections 213
15.4.1 deque和defaultdict 213
15.4.2 命名元组 214
15.4.3 抽象基类 216
15.5 contextlib 217
15.6 functools 218
15.7 heapq 219
15.8 itertools 220
15.9 operator 222
第16章 字符串和文本处理 225
16.1 codecs 225
16.1.1 低级codecs接口 225
16.1.2 I/O相关函数 226
16.1.3 有用的常量 227
16.1.4 标准编码 227
16.1.5 注意 228
16.2 re 228
16.2.1 模式语法 228
16.2.2 函数 229
16.2.3 正则表达式对象 231
16.2.4 匹配对象 231
16.2.5 示例 232
16.2.6 注意 233
16.3 string 233
16.3.1 常量 233
16.3.2 Formatter对象 233
16.3.3 Template字符串 235
16.3.4 实用工具函数 235
16.4 struct 235
16.4.1 打包和解包函数 236
16.4.2 Struct对象 236
16.4.3 格式编码 236
16.4.4 注意 237
16.5 unicodedata 238
第17章 Python数据库访问 241
17.1 关系数据库API规范 241
17.1.1 连接 241
17.1.2 Cursor 242
17.1.3 生成查询 243
17.1.4 类型对象 244
17.1.5 错误处理 245
17.1.6 多线程 245
17.1.7 将结果映射到字典中 246
17.1.8 数据库API扩展 246
17.2 sqlite3模块 246
17.2.1 模块级函数 246
17.2.2 连接对象 248
17.2.3 游标和基本操作 250
17.3 DBM风格的数据库模块 252
17.4 shelve模块 253
第18章 文件和目录处理 254
18.1 bz2 254
18.2 filecmp 255
18.3 fnmatch 256
18.4 glob 257
18.5 gzip 257
18.6 shutil 258
18.7 tarfile 259
18.7.1 异常 261
18.7.2 示例 262
18.8 tempfile 262
18.9 zipfile 263
18.10 zlib 266
第19章 操作系统服务 268
19.1 Commands 268
19.2 ConfigParser、configparser 269
19.2.1 ConfigParser类 269
19.2.2 示例 270
19.2.3 注意 272
19.3 datetime 272
19.3.1 date对象 272
19.3.2 time对象 273
19.3.3 datetime对象 274
19.3.4 timedelta对象 275
19.3.5 涉及日期的数学运算 276
19.3.6 tzinfo对象 277
19.3.7 日期与时间解析 278
19.4 errno 278
19.4.1 POSIX错误代码 278
19.4.2 Windows错误代码 279
19.5 fcntl 280
19.5.1 示例 281
19.5.2 注意 281
19.6 io 282
19.6.1 基本I/O接口 282
19.6.2 原始I/O 282
19.6.3 缓存二进制I/O 283
19.6.4 文本I/O 285
19.6.5 open()函数 285
19.6.6 抽象基类 286
19.7 logging 286
19.7.1 日志记录级别 286
19.7.2 基本配置 286
19.7.3 Logger对象 288
19.7.4 处理器对象 292
19.7.5 消息格式化 294
19.7.6 各种实用工具函数 296
19.7.7 日志记录配置 296
19.7.8 性能考虑 299
19.7.9 注意 299
19.8 mmap 299
19.9 msvcrt 301
19.10 optparse 303
19.10.1 例子 305
19.10.2 注意 306
19.11 os 307
19.11.1 进程环境 307
19.11.2 文件创建与文件描述符 309
19.11.3 文件与目录 313
19.11.4 进程管理 316
19.11.5 系统配置 320
19.11.6 异常 321
19.12 os.path 321
19.13 signal 323
19.13.1 例子 325
19.13.2 注意 325
19.14 subprocess 325
19.14.1 例子 327
19.14.2 注意 328
19.15 time 328
19.16 winreg 330
第20章 线程与并发 334
20.1 基本概念 334
20.2 并发编程与Python 335
20.3 multiprocessing 336
20.3.1 进程 336
20.3.2 进程间通信 337
20.3.3 进程池 343
20.3.4 共享数据与同步 345
20.3.5 托管对象 347
20.3.6 连接 352
20.3.7 各种实用工具函数 353
20.3.8 多进程处理的一般建议 353
20.4 threading 354
20.4.1 Thread对象 354
20.4.2 Timer对象 356
20.4.3 Lock对象 356
20.4.4 RLock对象 356
20.4.5 信号量与有边界的信号量 357
20.4.6 事件 358
20.4.7 条件变量 358
20.4.8 使用Lock 359
20.4.9 线程终止与挂起 360
20.4.10 实用工具函数 361
20.4.11 全局解释器锁 361
20.4.12 使用线程编程 361
20.5 queue、Queue 362
20.6 协程与微线程 364
第21章 网络编程和套接字 365
21.1 网络编程基础 365
21.2 asynchat模块 367
21.3 asyncore模块 370
21.4 select 374
21.4.1 高 级模块功能 375
21.4.2 高 级异步I/O示例 375
21.4.3 异步联网的时机 381
21.5 socket 383
21.5.1 地址族 383
21.5.2 套接字类型 383
21.5.3 寻址 384
21.5.4 函数 385
21.5.5 异常 395
21.5.6 示例 395
21.5.7 注意 396
21.6 ssl 396
21.7 SocketServer 399
21.7.1 处理程序 399
21.7.2 服务器 400
21.7.3 定义自定义服务器 401
21.7.4 自定义应用服务器 403
第22章 网络应用程序编程 404
22.1 ftplib 404
22.2 http包 407
22.2.1 http.client（httplib） 408
22.2.2 http.server（BaseHTTPServer、CGIHTTPServer和SimpleHTTP Server） 412
22.2.3 http.cookies（Cookie） 416
22.2.4 http.cookiejar（cookielib） 418
22.3 smtplib 418
22.4 urllib包 419
22.4.1 urllib.request（urllib2） 419
22.4.2 urllib.response 423
22.4.3 urllib.parse 424
22.4.4 urllib.error 426
22.4.5 urllib.robotparser（robotparser） 427
22.4.6 注意 427
22.5 xmlrpc包 427
22.5.1 xmlrpc.client（xmlrpclib） 427
22.5.2 xmlrpc.server（SimpleXMLRPCServer和DocXMLRPCServer） 430
第23章 Web编程 433
23.1 cgi 435
23.1.1 CGI编程建议 438
23.1.2 注意 439
23.2 cgitb 440
23.3 wsgiref 440
23.3.1 WSGI规范 440
23.3.2 wsgiref包 442
23.4 webbrowser 444
第24章 网络数据处理和编码 445
24.1 base64 445
24.2 binascii 447
24.3 CSV 447
24.3.1 方言 449
24.3.2 示例 450
24.4 email包 450
24.4.1 解析电子邮件 450
24.4.2 编写电子邮件 453
24.4.3 注意 456
24.5 hashlib 456
24.6 hmac 456
24.7 HTMLParser 458
24.8 json 460
24.9 mimetypes 462
24.10 quopri 463
24.11 xml包 463
24.11.1 XML示例文档 464
24.11.2 xml.dom.minidom 465
24.11.3 xml.etree.ElementTree 468
24.11.4 xml.sax 474
24.11.5 xml.sax.saxutils 476
第25章 其他库模块 477
25.1 Python服务 477
25.2 字符串处理 478
25.3 操作系统模块 478
25.4 网络 478
25.5 网络数据处理 478
25.6 国际化 478
25.7 多媒体服务 479
25.8 其他 479
第三部分 扩展与嵌入
第26章 扩展与嵌入Python 482
26.1 扩展模块 482
26.1.1 扩展模块原型 484
26.1.2 命名扩展模块 486
26.1.3 编译与打包扩展 486
26.1.4 从Python到C语言的类型转换 488
26.1.5 从C到Python的类型转换 492
26.1.6 给模块添加值 493
26.1.7 错误处理 494
26.1.8 引用计数 495
26.1.9 线程 496
26.2 嵌入Python解释器 496
26.2.1 嵌入模板 497
26.2.2 编译与链接 497
26.2.3 基本的解释器操作与设置 497
26.2.4 在C语言中访问Python 498
26.2.5 将Python对象转换为C对象 499
26.3 ctypes 500
26.3.1 加载共享库 500
26.3.2 外来函数 500
26.3.3 数据类型 501
26.3.4 调用外来函数 502
26.3.5 其他类型构造方法 503
26.3.6 实用工具函数 504
26.3.7 示例 505
26.4 高级扩展与嵌入 506
26.5 Jython和IronPython 507
附录 Python 3 508
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python参考手册 第4版 修订版
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python密码学编程
第1章　制作纸质加密工具　1
1.1　密码学是什么　1
1.2　代码与加密法　2
1.3　制作纸质加密轮盘　2
1.4　虚拟加密轮盘　4
1.5　如何使用加密轮盘加密　4
1.6　如何使用加密轮盘解密　5
1.7　另一个加密法工具：St. Cyr滑条　6
1.8　A组练习　6
1.9　不用纸质工具做加密　7
1.10　B组练习　9
1.11　双重强度加密　9
1.12　通过计算机编程进行加密　9
第2章　Pygame基础知识　11
2.1　下载和安装Python　11
2.1.1　Windows安装步骤　11
2.1.2　OS X安装步骤　12
2.1.3　Ubuntu和Linux安装步骤　12
2.2　下载pyperclip.py　12
2.3　启动IDLE　12
2.4　特色程序　13
2.5　行号和空格　14
2.6　本书的文本换行　14
2.7　在线跟踪程序　15
2.8　使用在线比较工具检查输入的
代码　15
2.9　复制粘贴文本　15
2.10　更多信息链接　15
2.11　编程和密码学　16
第3章　Interactive Shell　20
3.1　一些简单的数学知识　20
3.2　整数和浮点数　21
3.3　表达式　21
3.4　运算符顺序　22
3.5　计算表达式　22
3.6　错误是可以接受的　22
3.7　A组练习　23
3.8　每个值都有一个数据类型　23
3.9　通过赋值语句把值存到变量里　23
3.10　重写变量　24
3.11　使用多个变量　25
3.12　变量名　26
3.13　驼峰式大小写　26
3.14　B组练习　26
3.15　总结——那我们什么时候开始
破译　26
第4章　字符串和写程序　28
4.1　字符串　28
4.2　使用+运算符的字符串连接　29
4.3　使用*运算符的字符串复制　30
4.4　使用print()函数输出值　30
4.5　转义字符　31
4.6　引号和双引号　32
4.7　A组练习　32
4.8　索引操作　33
4.9　负索引　33
4.10　分片操作　34
4.11　空分片索引　35
4.12　B组练习　35
4.13　在IDLE的文件编辑器里写程序　35
4.14　Hello World!　36
4.15　Hello World的源代码　36
4.16　保存你的程序　37
4.17　运行你的程序　37
4.18　打开你保存的程序　38
4.19　“Hello World”程序如何工作　38
4.20　注释　38
4.21　函数　39
4.22　print()函数　39
4.23　input()函数　39
4.24　结束程序　40
4.25　C组练习　40
4.26　总结　40
第5章　反转加密　41
5.1　反转加密　41
5.2　反转加密程序的源代码　41
5.3　运行反转加密程序　42
5.4　用在线比较工具检查你的源代码　42
5.5　这个程序如何工作　43
5.6　len()函数　43
5.7　while循环简介　44
5.8　布尔数据类型　44
5.9　比较运算符　45
5.10　条件　46
5.11　代码块　47
5.12　while循环语句　47
5.13　“增长”一个字符串　48
5.14　一步一步跟踪程序　50
5.15　在我们的程序里使用input()　52
5.16　A组练习　52
5.17　总结　52
第6章　凯撒加密法　53
6.1　实现程序　53
6.2　凯撒加密程序的源代码　53
6.3　运行凯撒加密程序　54
6.4　使用在线比较工具检查你的
源代码　55
6.5　A组练习　55
6.6　这个程序如何工作　55
6.7　使用import语句导入模块　55
6.8　常量　56
6.9　upper()和lower()字符串方法　57
6.10　for循环语句　58
6.11　相当于for循环的while循环　59
6.12　B组练习　59
6.13　if语句　59
6.14　else语句　60
6.15　elif语句　60
6.16　in和not in运算符　61
6.17　find()字符串方法　62
6.18　C组练习　62
6.19　回到代码　62
6.20　显示和复制加密/解密之后的
字符串　64
6.21　加密非字母字符　65
6.22　总结　66
第7章　暴力破译凯撒加密法　67
7.1　破译加密　67
7.2　暴力破译　67
7.3　凯撒加密法破译程序的源代码　68
7.4　运行凯撒加密法破译程序　68
7.5　这个程序如何工作　69
7.6　range()函数　69
7.7　回到代码　70
7.8　字符串格式化　72
7.9　A组练习　72
7.10　总结　72
第8章　使用换位加密法加密　73
8.1　换位加密法　73
8.2　A组练习　74
8.3　换位加密法加密程序　74
8.4　换位加密法加密程序的源代码　75
8.5　运行换位加密法加密程序　76
8.6　这个程序如何工作　76
8.7　使用def语句创建你自己的函数　76
8.8　程序的main()函数　77
8.9　形参　78
8.10　对形参的修改只存在于函数
之内　79
8.11　全局作用域和本地作用域里的
变量　79
8.12　global语句　79
8.13　B组练习　81
8.14　列表数据类型　81
8.15　使用list()函数把区间对象转换
成列表　82
8.16　重新赋值列表里的项　83
8.17　重新赋值字符串里的字符　83
8.18　列表的列表　83
8.19　C组练习　84
8.20　在列表上使用len()和in运算符　84
8.21　使用+和*运算符的列表连接和
复制　85
8.22　D组练习　85
8.23　换位加密算法　85
8.24　增强赋值运算符　88
8.25　回到代码　88
8.26　join()字符串方法　90
8.27　返回值和return语句　91
8.28　E组练习　91
8.29　回到代码　91
8.30　特殊的__name__变量　92
8.31　密钥的大小和消息的长度　93
8.32　总结　93
第9章　使用换位加密法解密　94
9.1　在纸上使用换位加密法解密　94
9.2　练习A组　96
9.3　换位加密法解密程序　96
9.4　换位加密法解密程序的源代码　96
9.5　这个程序如何工作　97
9.6　math.ceil()、math.floor()和round()函数　98
9.7　and和or布尔运算符　101
9.8　B组练习　102
9.9　真值表　102
9.10　and和or运算符可以简化代码　103
9.11　布尔运算符的运算顺序　103
9.12　回到代码　103
9.13　C组练习　105
9.14　总结　105
第10章　写一个程序测试我们的程序　106
10.1　换位加密法测试程序的源代码　106
10.2　运行换位加密法测试程序　107
10.3　这个程序如何工作　108
10.4　伪随机数和random.seed()
函数　108
10.5　random.randint()函数　109
10.6　引用　110
10.7　copy.deepcopy()函数　112
10.8　A组练习　112
10.9　random.shuffle()函数　112
10.10　随机打乱一个字符串　113
10.11　回到代码　114
10.12　sys.exit()函数　114
10.13　测试我们的测试程序　115
10.14　总结　116
第11章　加密和解密文件　117
11.1　纯文本文件　117
11.2　换位加密法文件加密程序的
源代码　118
11.3　运行换位加密法文件加密程序　120
11.4　读取文件　120
11.4.1　open()函数和文件对象　120
11.4.2　read()文件对象方法　120
11.4.3　close()文件对象方法　121
11.5　写入文件　121
11.5.1　write()文件对象方法　122
11.6　这个程序如何工作　122
11.7　os.path.exists()函数　123
11.8　startswith()和endswith()字符串方法　123
11.9　title()字符串方法　124
11.10　time模块和time.time()函数　125
11.11　回到代码　126
11.12　A组练习　126
11.13　总结　127
第12章　通过编程检测英文　128
12.1　计算机如何理解英文　128
12.2　A组练习　130
12.3　检测英文模块　130
12.4　检测英文模块的源代码　130
12.5　这个程序如何工作　131
12.6　词典和词典数据类型　132
12.7　添加或修改词典里的项　132
12.8　B组练习　133
12.9　在词典上使用len()函数　133
12.10　在词典上使用in运算符　133
12.11　在词典上使用for循环　134
12.12　C组练习　134
12.13　词典与列表之间的区别　134
12.14　在词典上查找项比在列表上
更快　135
12.15　split()方法　135
12.16　None值　136
12.17　回到代码　136
12.18　“除以零”错误　138
12.19　float()、int()和str()函数以及
整数除法　138
12.20　D组练习　139
12.21　回到代码　139
12.22　append()列表方法　139
12.23　默认参数值　140
12.24　计算比例　141
12.25　E组练习　142
12.26　总结　143
第13章　破译换位加密法　144
13.1　换位加密法破译程序的源代码　144
13.2　运行换位加密法破译程序　145
13.3　这个程序如何工作　146
13.4　使用三引号的多行字符串　146
13.5　回到代码　147
13.6　strip()字符串方法　148
13.7　A组练习　150
13.8　总结　150
第14章　取模运算与乘数加密法和
仿射加密法　151
14.1　噢，不，数学！　151
14.2　数学，噢耶！　151
14.3　取模运算（又名时钟运算）　151
14.4　取模运算符%　152
14.5　A组练习　153
14.6　GCD：最大公约数（又名最大
公因数）　153
14.7　使用古氏积木（Cuisenaire rods）可视化因数和GCD　154
14.8　B组练习　155
14.9　多重赋值　155
14.10　通过多重赋值交换值　156
14.11　找出两个数字的GCD的
欧几里得算法　156
14.12　“互质”　157
14.13　C组练习　157
14.14　乘数加密法　157
14.15　D组练习　159
14.16　乘数加密法 + 凯撒加密法 =
仿射加密法　159
14.17　仿射密钥的第一个问题　159
14.18　使用仿射加密法解密　160
14.19　找出模逆　161
14.20　//整数除法运算符　161
14.21　cryptomath模块的源代码　162
14.22　E组练习　163
14.23　总结　163
第15章　仿射加密法　164
15.1　仿射加密法程序的源代码　164
15.2　运行仿射加密法程序　166
15.3　A组练习　166
15.4　这个程序如何工作　166
15.5　把一个密钥分成两个密钥　167
15.6　元祖数据类型　168
15.7　密钥的输入验证　168
15.8　仿射加密法加密函数　169
15.9　仿射加密法解密函数　170
15.10　生成随机密钥　171
15.11　仿射密钥的第二个问题：仿射加密法可以有多少个密钥　172
15.12　总结　173
第16章　破译仿射加密法　174
16.1　仿射加密法破译程序的
源代码　174
16.2　运行仿射加密法破译程序　175
16.3　这个程序如何工作　176
16.4　仿射加密法破译函数　177
16.5　**指数运算符　177
16.6　continue语句　178
16.7　A组练习　180
16.8　总结　180
第17章　简单替代加密法　181
17.1　使用纸笔实现简单替代加密法　181
17.2　A组练习　182
17.3　简单替代加密法的源代码　182
17.4　运行简单替代加密法程序　183
17.5　这个程序如何工作　184
17.6　程序的main()函数　184
17.7　sort()列表方法　185
17.8　包装器函数　186
17.9　程序的translateMessage()
函数　187
17.10　isupper()和islower()字符串
方法　189
17.11　B组练习　190
17.12　生成随机密钥　190
17.13　加密空格和标点符号　191
17.14　C组练习　191
17.15　总结　192
第18章　破译简单替代加密法　193
18.1　计算单词模式　193
18.2　获取密词的候选单词列表　194
18.3　A组练习　195
18.4　单词模式模块的源代码　195
18.5　运行单词模式模块　196
18.6　这个程序如何工作　197
18.7　pprint.pprint()和pprint.
pformat()函数　197
18.8　在Python里使用列表创建
字符串　198
18.9　计算单词模式　199
18.10　单词模式程序的main()函数　200
18.11　破译简单替代加密法　202
18.12　简单替代破译程序的源代码　202
18.13　破译简单替代加密法（理论）　205
18.14　使用Interactive Shell探索
破译函数　205
18.15　这个程序如何工作　209
18.16　导入所有东西　209
18.17　正则表达式和sub()正则方法
简介　210
18.18　破译程序的main()函数　211
18.19　部分破译加密法　211
18.20　空密字映射　212
18.21　把字母添加到密字映射　213
18.22　计算两个字母映射的交集　214
18.23　从密字映射移除已经破译的
字母　215
18.24　破译简单替代加密法　217
18.25　从密字映射创建密钥　219
18.26　我们不能把空格也加密吗　220
18.27　总结　220
第19章　维吉尼亚加密法　221
19.1　不可破译的加密法　221
19.2　维吉尼亚密钥里的多个“密钥”　221
19.3　维吉尼亚加密法程序的源代码　224
19.4　运行维吉尼亚加密法程序　226
19.5　这个程序如何工作　227
19.6　总结　230
第20章　频率分析　231
20.1　字母频率和ETAOIN　231
20.1.1　匹配字母频率　232
20.1.2　计算频率匹配分值的例子　233
20.1.3　另一个计算频率匹配分值的例子　233
20.1.4　破译每个子密钥　234
20.2　匹配字母频率的代码　234
20.3　这个程序如何工作　236
20.4　最常见的字母“ETAOIN”　237
20.5　这个程序的getLettersCount()
函数　237
20.6　这个程序的getItemAtIndex
Zero()函数　238
20.7　这个程序的getFrequencyOrder()函数　238
20.8　sort()方法的key和reverse关键字参数　239
20.9　把函数作为值传递　240
20.10　通过keys()、values()和items()词典方法把词典转换成列表　241
20.11　对词典的项进行排序　242
20.12　这个程序的englishFreqMatch
Score()函数　243
20.13　总结　244
第21章　破译维吉尼亚加密法　245
21.1　词典攻击　245
21.2　维吉尼亚词典攻击程序的源代码　245
21.3　运行维吉尼亚词典破译程序　246
21.4　readlines()文件对象方法　247
21.5　巴贝奇攻击和卡西斯基试验　247
21.6　卡西斯基试验的第1步——
找出重复序列的间距　247
21.7　卡西斯基试验的第2步——
获取间距的因数　248
21.8　从字符串获取每隔N个字母　249
21.9　频率分析　249
21.10　暴力破译可能密钥　251
21.11　维吉尼亚破译程序的源代码　251
21.12　运行维吉尼亚破译程序　256
21.13　这个程序如何工作　258
21.14　找出重复序列　259
21.15　计算因数　260
21.16　通过set()函数来移除重复值　261
21.17　卡西斯基测试算法　263
21.18　extend()列表方法　264
21.19　print()的end关键字参数　268
21.20　itertools.product()函数　269
21.21　break语句　272
21.22　A组练习　273
21.23　修改破译程序的常量　273
21.24　总结　274
第22章　一次密码本加密法　275
22.1　牢不可破的一次密码本加密法　275
22.2　为什么一次密码本加密法是
牢不可破的　275
22.3　小心伪随机　276
22.4　小心二次密码本加密法　277
22.5　二次密码本加密法就是维吉尼亚加密法　277
22.6　A组练习　278
22.7　总结　278
第23章　寻找质数　279
23.1　质数　279
23.2　合数　280
23.3　质数筛选模块的源代码　280
23.4　这个程序如何工作　281
23.5　如何判断一个数字是不是质数　282
23.6　埃拉托色尼筛选法　283
23.7　primeSieve()函数　284
23.8　检测质数　285
23.9　拉宾米勒模块的源代码　285
23.10　运行拉宾米勒模块　287
23.11　这个程序如何工作　287
23.12　拉宾米勒算法　287
23.13　新的经过改进的isPrime()函数　288
23.14　总结　289
第24章　公钥密码学和RSA加密法　291
24.1　公钥密码学　291
24.2　“课本”RSA的危险　292
24.3　身份验证的问题　292
24.4　中间人攻击　293
24.5　生成公钥和私钥　293
24.6　RSA密钥生成程序的源代码　294
24.7　运行RSA密钥生成程序　295
24.8　这个密钥生成程序如何工作　296
24.9　这个程序的generateKey()函数　297
24.10　RSA密钥文件格式　299
24.11　混合加密机制　300
24.12　RSA加密法程序的源代码　300
24.13　运行RSA加密法程序　303
24.14　A组练习　304
24.15　数字签名　304
24.16　RSA加密法程序如何工作　306
24.17　ASCII：使用数字来表示字符　307
24.18　chr()和ord()函数　308
24.19　B组练习　308
24.20　区块　308
24.21　使用getBlocksFromText()把
字符串转成区块　311
24.22　encode()字符串方法和字节数
据类型　311
24.23　bytes()函数和decode()bytes
方法　312
24.24　C组练习　312
24.25　回到代码　313
24.26　min()和max()函数　313
24.27　insert()列表方法　315
24.28　RSA加密和解密的数学运算　316
24.29　pow()函数　317
24.30　从密钥文件读取公钥和私钥　318
24.31　完整的RSA加密流程　318
24.32　完整的RSA解密流程　320
24.33　D组练习　321
24.34　我们为什么不能破译RSA
加密法　321
24.35　总结　323
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python密码学编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python测试驱动开发
前言　　xv
准备工作和应具备的知识　　xxi
配套视频　　xxviii
致谢　　xxix
第一部分　TDD和Django基础
第1章　使用功能测试协助安装Django　　2
1.1　遵从测试山羊的教诲，没有测试什么也别做　　2
1.2　让Django运行起来　　4
1.3　创建Git仓库　　6
第2章　使用unittest模块扩展功能测试　　10
2.1　使用功能测试驱动开发一个最简可用的应用　　10
2.2　Python标准库中的unittest模块　　12
2.3　提交　　14
第3章　使用单元测试测试简单的首页　　16
3.1　第一个Django应用，第一个单元测试　　16
3.2　单元测试及其与功能测试的区别　　17
3.3　Django中的单元测试　　18
3.4　Django中的MVC、URL和视图函数　　19
3.5　终于可以编写一些应用代码了　　20
3.6　urls.py　　22
3.7　为视图编写单元测试　　23
第4章　测试（及重构）的目的　　28
4.1　编程就像从井里打水　　28
4.2　使用Selenium测试用户交互　　30
4.3　遵守“不测试常量”规则，使用模板解决这个问题　　32
4.3.1　使用模板重构　　33
4.3.2　Django测试客户端　　35
4.4　关于重构　　37
4.5　接着修改首页　　38
4.6　总结：TDD流程　　39
第5章　保存用户输入：测试数据库　　42
5.1　编写表单，发送POST请求　　42
5.2　在服务器中处理POST请求　　45
5.3　把Python变量传入模板中渲染　　46
5.4　事不过三，三则重构　　50
5.5　Django ORM和第一个模型　　51
5.5.1　第一个数据库迁移　　53
5.5.2　测试向前走得挺远　　53
5.5.3　添加新字段就要创建新迁移　　54
5.6　把POST请求中的数据存入数据库　　55
5.7　处理完POST请求后重定向　　57
5.8　在模板中渲染待办事项　　59
5.9　使用迁移创建生产数据库　　61
5.10　回顾　　64
第6章　改进功能测试：确保隔离，去掉含糊的休眠　　66
6.1　确保功能测试之间相互隔离　　66
6.2　升级Selenium和Geckodriver　　70
6.3　隐式等待、显式等待和含糊的time.sleep　　70
第7章　步步为营　　75
7.1　必要时做少量的设计　　75
7.1.1　不要预先做大量设计　　75
7.1.2　YAGNI　　76
7.1.3　REST（式）　　76
7.2　使用TDD实现新设计　　77
7.3　确保出现回归测试　　78
7.4　逐步迭代，实现新设计　　80
7.5　自成一体的第一步：新的URL　　81
7.5.1　一个新URL　　82
7.5.2　一个新视图函数　　82
7.6　变绿了吗？该重构了　　84
7.7　再迈一小步：一个新模板，用于查看清单　　84
7.8　第三小步：用于添加待办事项的URL　　86
7.8.1　用来测试新建清单的测试类　　87
7.8.2　用于新建清单的URL和视图　　88
7.8.3　删除当前多余的代码和测试　　89
7.8.4　出现回归！让表单指向刚添加的新URL　　89
7.9　下定决心，调整模型　　90
7.9.1　外键关系　　92
7.9.2　根据新模型定义调整其他代码　　93
7.10　每个列表都应该有自己的URL　　95
7.10.1　捕获URL中的参数　　96
7.10.2　按照新设计调整new_list视图　　97
7.11　功能测试又检测到回归　　98
7.12　还需要一个视图，把待办事项加入现有清单　　99
7.12.1　小心霸道的正则表达式　　99
7.12.2　最后一个新URL　　100
7.12.3　最后一个新视图　　101
7.12.4　直接测试响应上下文对象　　102
7.13　使用URL引入做最后一次重构　　103
第二部分　Web 开发要素
第8章　美化网站：布局、样式及其测试方法　　108
8.1　如何在功能测试中测试布局和样式　　108
8.2　使用CSS框架美化网站　　111
8.3　Django模板继承　　112
8.4　集成Bootstrap　　114
8.5　Django中的静态文件　　115
8.6　使用Bootstrap中的组件改进网站外观　　117
8.6.1　超大文本块　　118
8.6.2　大型输入框　　118
8.6.3　样式化表格　　118
8.7　使用自己编写的CSS　　118
8.8　补遗：collectstatic命令和其他静态目录　　120
8.9　没谈到的话题　　122
第9章　使用过渡网站测试部署　　123
9.1　TDD以及部署的危险区域　　124
9.2　一如既往，先写测试　　125
9.3　注册域名　　127
9.4　手动配置托管网站的服务器　　127
9.4.1　选择在哪里托管网站　　127
9.4.2　搭建服务器　　128
9.4.3　用户账户、SSH和权限　　128
9.4.4　安装Nginx　　128
9.4.5　安装Python　　3.6　　129
9.4.6　解析过渡环境和线上环境所用的域名　　130
9.4.7　使用功能测试确认域名可用而且Nginx正在运行　　130
9.5　手动部署代码　　130
9.5.1　调整数据库的位置　　131
9.5.2　手动创建虚拟环境，使用requirements.txt　　133
9.5.3　简单配置Nginx　　134
9.5.4　使用迁移创建数据库　　136
9.6　手动部署大功告成　　137
第10章　为部署到生产环境做好准备　　139
10.1　换用Gunicorn　　139
10.2　让Nginx伺服静态文件　　140
10.3　换用Unix套接字　　141
10.4　把DEBUG设为False，设置ALLOWED_HOSTS　　142
10.5　使用Systemd确保引导时启动Gunicorn　　143
10.6　考虑自动化　　144
10.7　保存进度　　147
第11章　使用Fabric自动部署　　148
11.1　分析一个Fabric部署脚本　　149
11.1.1　分析一个Fabric部署脚本　　149
11.1.2　使用Git拉取源码　　150
11.1.3　更新settings.py　　151
11.1.4　更新虚拟环境　　151
11.1.5　需要时迁移数据库　　152
11.2　试用部署脚本　　152
11.2.1　部署到线上服务器　　154
11.2.2　使用sed配置Nginx和Gunicorn　　155
11.3　使用Git标签标注发布状态　　157
11.4　延伸阅读　　157
第12章　输入验证和测试的组织方式　　159
12.1　针对验证的功能测试：避免提交空待办事项　　159
12.1.1　跳过测试　　160
12.1.2　把功能测试分拆到多个文件中　　161
12.1.3　运行单个测试文件　　163
12.2　功能测试新工具：通用显式等待辅助方法　　164
12.3　补完功能测试　　167
12.4　重构单元测试，分拆成多个文件　　168
第13章　数据库层验证　　171
13.1　模型层验证　　172
13.1.1　self.assertRaises上下文管理器　　172
13.1.2　Django怪异的表现：保存时不验证数据　　173
13.2　在视图中显示模型验证错误　　173
13.3　Django模式：在渲染表单的视图中处理POST请求　　177
13.3.1　重构：把new_item实现的功能移到view_list中　　178
13.3.2　在view_list视图中执行模型验证　　180
13.4　重构：去除硬编码的URL　　182
13.4.1　模板标签{% url %}　　182
13.4.2　重定向时使用get_absolute_url　　183
第14章　简单的表单　　186
14.1　把验证逻辑移到表单中　　186
14.1.1　使用单元测试探索表单API　　187
14.1.2　换用Django中的ModelForm类　　188
14.1.3　测试和定制表单验证　　189
14.2　在视图中使用这个表单　　191
14.2.1　在处理GET请求的视图中使用这个表单　　191
14.2.2　大量查找和替换　　192
14.3　在处理POST请求的视图中使用这个表单　　194
14.3.1　修改new_list视图的单元测试　　195
14.3.2　在视图中使用这个表单　　196
14.3.3　使用这个表单在模板中显示错误消息　　196
14.4　在其他视图中使用这个表单　　197
14.4.1　定义辅助方法，简化测试　　197
14.4.2　意想不到的好处：HTML5自带的客户端验证　　199
14.5　值得鼓励　　201
14.6　这难道不是浪费时间吗　　201
14.7　使用表单自带的save方法　　202
第15章　高级表单　　205
15.1　针对重复待办事项的功能测试　　205
15.1.1　在模型层禁止重复　　206
15.1.2　题外话：查询集合排序和字符串表示形式　　208
15.1.3　重写旧模型测试　　210
15.1.4　保存时确实会显示完整性错误　　211
15.2　在视图层试验待办事项重复验证　　212
15.3　处理唯一性验证的复杂表单　　213
15.4　在清单视图中使用ExistingListItemForm　　215
15.5　小结：目前所学的Django测试知识　　217
第16章　试探JavaScript　　219
16.1　从功能测试开始　　219
16.2　安装一个基本的JavaScript测试运行程序　　221
16.3　使用jQuery和固件元素　　223
16.4　为想要实现的功能编写JavaScript单元测试　　225
16.5　固件、执行顺序和全局状态：JavaScript测试的重大挑战　　227
16.5.1　使用console.log打印调试信息　　227
16.5.2　使用初始化函数精确控制执行时　　229
16.6　经验做法：onload样板代码和命名空间　　230
16.7　JavaScript测试在TDD循环中的位置　　232
16.8　一些缺憾　　232
第17章　部署新代码　　234
17.1　部署到过渡服务器　　234
17.2　部署到线上服务器　　235
17.3　如果看到数据库错误该怎么办　　235
17.4　总结：为这次新发布打上Git标签　　235
第三部分　高级话题
第18章　用户身份验证、探究及去掉探究代码　　238
18.1　无密码验证　　238
18.2　探索性编程（又名“探究”）　　239
18.2.1　为此次探究新建一个分支　　239
18.2.2　前端登录UI　　240
18.2.3　从Django中发出邮件　　240
18.2.4　使用环境变量，避免源码中出现机密信息　　242
18.2.5　在数据库中存储令牌　　243
18.2.6　自定义身份验证模型　　243
18.2.7　结束自定义Django身份验证功能　　224
18.3　去掉探究代码　　248
18.4　一个极简的自定义用户模型　　251
18.5　令牌模型：把电子邮件地址与唯一的ID关联起来　　254
第19章　使用驭件测试外部依赖或减少重复　　257
19.1　开始之前布好基本管道　　257
19.2　自己动手模拟（打猴子补丁）　　258
19.3　Python的模拟库　　261
19.3.1　使用unittest.patch　　261
19.3.2　让测试向前迈一小步　　263
19.3.3　测试Django消息框架　　263
19.3.4　在HTML中添加消息　　265
19.3.5　构建登录URL　　266
19.3.6　确认给用户发送了带有令牌的链接　　267
19.4　去除自定义的身份验证后端中的探究代码　　269
19.4.1　一个if语句需要一个测试　　269
19.4.2　get_user方法　　272
19.4.3　在登录视图中使用自定义的验证后端　　273
19.5　使用驭件的另一个原因：减少重复　　274
19.5.1　使用驭件的返回值　　277
19.5.2　在类一级上打补丁　　278
19.6　关键时刻：功能测试能通过吗　　279
19.7　理论上正常，那么实际呢　　281
19.8　完善功能测试，测试退出功能　　283
第20章　测试固件和一个显式等待装饰器　　285
20.1　事先创建好会话，跳过登录过程　　285
20.2　显式等待辅助方法最终版：wait装饰器　　290
第21章　服务器端调试技术　　293
21.1　实践是检验真理的唯一标准：在过渡服务器中捕获最后的问题　　293
21.2　在服务器上通过环境变量设定机密信息　　295
21.3　调整功能测试，以便通过POP3测试真实的电子邮件　　296
21.4　在过渡服务器中管理测试数据库　　299
21.4.1　创建会话的Django管理命令　　300
21.4.2　让功能测试在服务器上运行管理命令　　301
21.4.3　直接在Python代码中使用Fabric　　302
21.4.4　回顾：在本地服务器和过渡服务器中创建会话的方式　　303
21.5　集成日志相关的代码　　304
21.6　小结　　305
第22章　完成“My Lists”页面：由外而内的TDD　　306
22.1　对立技术：“由内而外”　　306
22.2　为什么选择使用“由外而内”　　307
22.3　“My Lists”页面的功能测试　　307
22.4　外层：表现层和模板　　309
22.5　下移一层到视图函数（控制器）　　309
22.6　使用由外而内技术，再让一个测试通过　　310
22.6.1　快速重组模板的继承层级　　311
22.6.2　使用模板设计API　　311
22.6.3　移到下一层：视图向模板中传入什么　　313
22.7　视图层的下一个需求：新建清单时应该记录属主　　313
22.8　下移到模型层　　315
第23章　测试隔离和“倾听测试的心声”　　319
23.1　重温抉择时刻：视图层依赖于尚未编写的模型代码　　319
23.2　首先尝试使用驭件实现隔离　　320
23.3　倾听测试的心声：丑陋的测试表明需要重构　　323
23.4　以完全隔离的方式重写视图测试　　323
23.4.1　为了新测试的健全性，保留之前的整合测试组件　　324
23.4.2　完全隔离的新测试组件　　324
23.4.3　站在协作者的角度思考问题　　324
23.5　下移到表单层　　329
23.6　下移到模型层　　332
23.7　关键时刻，以及使用模拟技术的风险　　335
23.8　把层与层之间的交互当作“合约”　　336
23.8.1　找出隐形合约　　337
23.8.2　修正由于疏忽导致的问题　　338
23.9　还缺一个测试　　339
23.10　清理：保留哪些整合测试　　340
23.10.1　删除表单层多余的代码　　340
23.10.2　删除以前实现的视图　　341
23.10.3　删除视图层多余的代码　　342
23.11　总结：什么时候编写隔离测试，什么时候编写整合测试　　343
23.11.1　以复杂度为准则　　344
23.11.2　两种测试都要写吗　　344
23.11.3　继续前行　　344
第24章　持续集成　　346
24.1　安装Jenkins　　346
24.2　配置Jenkins　　347
24.2.1　首次解锁　　348
24.2.2　现在建议安装的插件　　348
24.2.3　配置管理员用户　　348
24.2.4　添加插件　　350
24.2.5　告诉Jenkins到哪里寻找Python　　3和Xvfb　　350
24.2.6　设置HTTPS　　351
24.3　设置项目　　351
24.4　第一次构建　　352
24.5　设置虚拟显示器，让功能测试能在无界面的环境中运行　　354
24.6　截图　　356
24.7　如有疑问，增加超时试试　　359
24.8　使用PhantomJS运行QUnit JavaScript测试　　359
24.8.1　安装node　　359
24.8.2　在Jenkins中添加构建步骤　　361
24.9　CI服务器能完成的其他操作　　362
第25章　简单的社会化功能、页面模式以及练习　　363
25.1　有多个用户以及使用addCleanup的功能测试　　363
25.2　页面模式　　365
25.3　扩展功能测试测试第二个用户和“My Lists”页面　　367
25.4　留给读者的练习　　368
第26章　测试运行速度的快慢和炽热的岩浆　　371
26.1　正题：单元测试除了运行速度超快之外还有其他优势　　372
26.1.1　测试运行得越快，开发速度越快　　372
26.1.2　神赐的心流状态　　372
26.1.3　经常不想运行速度慢的测试，导致代码变坏　　373
26.1.4　现在还行，不过随着时间推移，整合测试会变得越来越慢　　373
26.1.5　别只听我一个人说　　373
26.1.6　单元测试能驱使我们实现好的设计　　373
26.2　纯粹的单元测试有什么问题　　373
26.2.1　隔离的测试难读也难写　　373
26.2.2　隔离测试不会自动测试集成情况　　374
26.2.3　单元测试几乎不能捕获意料之外的问题　　374
26.2.4　使用驭件的测试可能和实现方式联系紧密　　374
26.2.5　这些问题都可以解决　　374
26.3　合题：我们到底想从测试中得到什么　　374
26.3.1　正确性　　374
26.3.2　简洁可维护的代码　　375
26.3.3　高效的工作流程　　375
26.3.4　根据所需的优势评估测试　　375
26.4　架构方案　　375
26.4.1　端口和适配器（或六边形、简洁）架构　　376
26.4.2　函数式核心，命令式外壳　　377
26.5　小结　　377
遵从测试山羊的教诲　　379
附录A PythonAnywhere　　381
附录B 基于类的Django 视图　　385
附录C 使用Ansible 配置服务器　　394
附录D 测试数据库迁移　　398
附录E 行为驱动开发　　403
附录F 构建一个REST API：JSON、Ajax 和JavaScript 模拟技术　　416
附录G Django-Rest-Framework　　433
附录H 速查表　　443
附录I 接下来做什么　　447
附录J 示例源码　　451
参考书目　　453
作者简介　　454
封面介绍　　454
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python测试驱动开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python项目开发实战（第2版）
第1部分　Python开发入门　　1
第1章　Python入门　　2
1.1 安装Python　　2
1.1.1 安装deb包　　3
1.1.2 安装第三方包　　4
1.1.3 virtualenv的使用方法　　5
1.1.4 多版本Python的使用　　7
1.2 安装Mercurial　　9
1.2.1 Mercurial概述　　10
1.2.2 安装Mercurial　　10
1.2.3 创建版本库　　11
1.2.4 文件操作　　12
1.3 编辑器与辅助开发工具　　14
1.3.1 编辑器　　14
1.3.2 开发辅助工具　　20
1.4 小结　　22
第2章　开发Web应用　　24
2.1 了解Web应用　　24
2.1.1 Web应用是什么　　24
2.1.2 Web应用与桌面应用的区别　　25
2.1.3 Web应用的机制　　25
2.2 前置准备　　28
2.2.1 关于Flask　　28
2.2.2 安装Flask　　28
2.3 Web应用的开发流程　　29
2.4 明确要开发什么应用　　30
2.4.1 留言板应用的需求　　30
2.4.2 明确必备的功能　　30
2.4.3 明确必备的页面　　31
2.5 页面设计　　31
2.5.1 确定成品页面的形式　　31
2.5.2 编写HTML和CSS　　32
2.6 实现功能　　37
2.6.1 保存留言数据　　37
2.6.2 获取已保存的留言列表　　38
2.6.3 用模板引擎显示页面　　39
2.6.4 准备评论接收方的URL　　42
2.6.5 调整模板的输出　　43
2.7 查看运行情况　　45
2.8 小结　　47
第3章　Python项目的结构与包的创建　　48
3.1 Python项目　　48
3.2 环境与工具　　49
3.2.1 用virtualenv搭建独立环境　　49
3.2.2 用pip安装程序包　　55
3.2.3 小结　　62
3.3 文件结构与发布程序包　　62
3.3.1 编写setup.py　　62
3.3.2 留言板的项目结构　　64
3.3.3 setup.py与MANIFEST.in——设置程序包信息与捆绑的文件　　65
3.3.4 setup.py——创建执行命令　　69
3.3.5 python setup.py sdist——创建源码发布程序包　　71
3.3.6 提交至版本库　　71
3.3.7 README.rst——开发环境设置流程　　73
3.3.8 变更依赖包　　75
3.3.9 通过requirements.txt固定开发版本　　77
3.3.10 python setup.py bdist_wheel——制作用于wheel发布的程序包　　78
3.3.11 上传到PyPI并公开　　79
3.3.12 小结　　85
3.4 小结　　86
第2部分　团队开发的周期　　87
第4章　面向团队开发的工具　　88
4.1 问题跟踪系统　　88
4.1.1 Redmine　　88
4.1.2 安装Redmine　　89
4.1.3 Redmine的设置　　91
4.1.4 插件　　93
4.2 版本控制系统　　94
4.2.1 Mercurial与Redmine的联动　　94
4.2.2 用于生成版本库的插件　　95
4.3 聊天系统　　97
4.3.1 Slack　　97
4.3.2 Slack的特点　　98
4.3.3 Slack做不到的事　　101
4.3.4 Slack的注册　　102
4.4 对团队开发有帮助的工具　　102
4.4.1 Dropbox　　102
4.4.2 Google Drive　　102
4.5 小结　　103
第5章　项目管理与审查　　104
5.1 项目管理与问题的区分使用　　104
5.1.1 项目管理的前置准备工作　　104
5.1.2 创建问题　　105
5.1.3 整理问题　　107
5.1.4 分割问题　　107
5.2 问题模板　　108
5.2.1 安装插件　　108
5.2.2 问题模板的使用方法　　109
5.2.3 Global Issue Templates　　111
5.2.4 问题模板示例　　112
5.3 问题驱动开发　　114
5.3.1 别急着敲代码，先建问题　　114
5.3.2 创建与问题编号同名的分支　　115
5.3.3 让发布与分支相对应　　115
5.3.4 分支的合并　　116
5.4 审查　　117
5.4.1 为什么需要审查　　117
5.4.2 审查委托：代码审查篇　　118
5.4.3 审查委托：作业审查篇　　119
5.4.4 实施审查：代码审查篇　　120
5.4.5 实施审查：作业审查篇　　123
5.5 小结　　123
第6章　用Mercurial管理源码　　125
6.1 Mercurial版本库的管理与设置　　125
6.1.1 服务器上的Uinx用户群设置　　125
6.1.2 创建版本库　　126
6.1.3 hgrc的设置　　127
6.1.4 使用设置好的版本库　　127
6.1.5 使用hgweb建立简易中央版本库　　127
6.2 灵活使用“钩子”　　128
6.2.1 钩子功能的设置方法　　129
6.2.2 尝试钩子脚本　　129
6.2.3 钩子事件　　130
6.2.4 钩子功能的执行时机　　131
6.2.5 编写钩子脚本　　134
6.3 分支的操作　　136
6.4 关于合并　　137
6.4.1 未发生冲突的合并　　138
6.4.2 合并时发生冲突以及用文本编辑器解决冲突的方法　　140
6.4.3 合并的类型与冲突　　143
6.4.4 用GUI的合并工具进行合并　　144
6.5 GUI客户端　　147
6.5.1 GUI客户端的介绍　　147
6.5.2 GUI客户端的优点　　149
6.5.3 GUI客户端的缺点　　151
6.6 考虑实际运用的BePROUD Mercurial Workflow　　152
6.6.1 概述　　152
6.6.2 背景　　152
6.6.3 版本库的结构　　153
6.6.4 提交源码　　154
6.6.5 提交设计　　156
6.6.6 分支的合并　　157
6.6.7 集成分支　　158
6.7 小结　　160
第7章　完备文档的基础　　162
7.1 要记得给项目写文档　　162
7.1.1 写文档时不想做的事　　162
7.1.2 什么样的状态让人想写文档　　164
7.2 Sphinx的基础与安装　　165
7.2.1 Sphinx的安装　　166
7.2.2 reStructuredText入门　　167
7.2.3 用Sphinx写结构化文档的流程　　169
7.2.4 Sphinx扩展　　174
7.3 导入Sphinx可解决的问题与新出现的问题　　175
7.3.1 由于是纯文本，所以能在平时用的编辑器上写文档　　176
7.3.2 信息与视图相分离，所以能集中精神编辑内容，不用顾虑装饰等外观问题　　176
7.3.3 可根据一个源码输出PDF等多种格式　　179
7.3.4 通过结构化，文档可分成几个文件来写　　180
7.3.5 能用Mercurial等轻松实现版本管理　　181
7.3.6 API参考手册与程序的管理一体化　　182
7.3.7 通过Web浏览器共享　　184
7.3.8 导入Sphinx后仍存在的问题　　185
7.4 文档集的创建与使用　　186
7.4.1 什么是文档集　　186
7.4.2 项目所需文档的一览表　　187
7.4.3 面向项目组长、经理　　187
7.4.4 面向设计者　　189
7.4.5 面向开发者　　189
7.4.6 面向客户　　189
7.5 小结　　190
第8章　模块分割设计与单元测试　　191
8.1 模块分割设计　　191
8.1.1 功能设计　　191
8.1.2 构成Web应用的组件　　192
8.1.3 组件设计　　194
8.1.4 模块与程序包　　195
8.2 测试　　197
8.2.1 测试的种类　　197
8.2.2 编写单元测试　　198
8.2.3 从单元测试中剔除环境依赖　　209
8.2.4 用WebTest做功能测试　　215
8.3 通过测试改良设计　　219
8.4 推进测试自动化　　221
8.4.1 用tox自动生成执行测试的环境　　221
8.4.2 可重复使用的测试环境　　223
8.5 小结　　223
第9章　Python封装及其运用　　224
9.1 使用程序包　　224
9.1.1 程序包的版本指定　　224
9.1.2 从非PyPI服务器安装程序包　　226
9.1.3 程序包的发布格式　　228
9.1.4 生成wheelhouse的方法　　230
9.1.5 从wheelhouse安装　　231
9.2 巧用程序包　　232
9.2.1 私密发布　　232
9.2.2 巧用requirements.txt　　232
9.2.3 requirements.txt层级化　　233
9.2.4 为部署和CI+tox准备的requiremests　　234
9.2.5 通过requirements.txt指定库的版本　　235
9.3 小结　　236
第10章　用Jenkins持续集成　　237
10.1 什么是持续集成　　237
10.1.1 持续集成的简介　　237
10.1.2 Jenkins简介　　239
10.2 Jenkins的安装　　239
10.2.1 安装Jenkins主体程序　　239
10.2.2 本章将用到的Jenkins插件　　240
10.3 执行测试代码　　241
10.3.1 让Jenkins运行简单的测试代码　　241
10.3.2 添加Job　　242
10.3.3 Job的成功与失败　　244
10.4 测试结果输出到报告　　246
10.4.1 安装pytest　　246
10.4.2 调用pytest命令　　246
10.4.3 根据pytest更改Jenkins的设置　　246
10.5 显示覆盖率报告　　247
10.5.1 安装pytest-cov　　248
10.5.2 从pytest获取覆盖率　　248
10.5.3 读取覆盖率报告　　248
10.6 执行Django的测试　　250
10.6.1 安装Python模块　　250
10.6.2 Django的调整　　251
10.6.3 示例代码　　251
10.6.4 Jenkins的调整　　255
10.6.5 “构建后操作”选项卡的设置　　257
10.7 通过Jenkins构建文档　　260
10.7.1 安装Sphinx　　261
10.7.2 在Jenkins添加Job　　261
10.7.3 Sphinx构建发出警告时令Job失败　　261
10.7.4 查看成果　　262
10.7.5 通过Task Scanner Plugin管理TODO　　263
10.7.6 Task Scanner Plugin的设置示例　　264
10.8 Jenkins进阶技巧　　265
10.8.1 好用的功能　　265
10.8.2 进一步改善　　267
10.9 小结　　268
第3部分　服务公开　　269
第11章　环境搭建与部署的自动化　　270
11.1 确定所需环境的内容　　270
11.1.1 网络结构　　270
11.1.2 服务器搭建内容的结构化　　272
11.1.3 用户的设置　　273
11.1.4 选定程序包　　274
11.1.5 中间件的设置　　277
11.1.6 部署　　280
11.2 用Ansible实现自动化作业　　282
11.2.1 Ansible简介　　282
11.2.2 文件结构　　287
11.2.3 执行Ansible　　288
11.2.4 与最初确定的结构相对应　　288
11.2.5 将各步骤Ansible化　　289
11.2.6 整理Ansible的执行环境　　295
11.3 小结　　296
第12章　应用的性能改善　　298
12.1 Web应用的性能　　298
12.1.1 Web应用面对大量集中请求时会产生哪些问题　　298
12.1.2 针对高负荷的对策　　299
12.2 评估留言板应用的性能　　300
12.2.1 什么是应用的性能　　300
12.2.2 安装ApacheBench　　300
12.2.3 用ApachBench评估性能　　301
12.3 gunicorn简介　　303
12.3.1 安装gunicorn　　304
12.3.2 在gunicorn上运行应用　　304
12.4 nginx简介　　306
12.4.1 安装nginx　　306
12.4.2 检测nginx的性能　　307
12.5 在nginx和gunicorn上运行应用　　310
12.5.1 gunicorn的设置　　310
12.5.2 nginx的设置　　310
12.5.3 评估nginx+gunicorn的性能　　311
12.5.4 性能比较　　312
12.6 小结　　313
第4部分　加速开发的技巧　　315
第13章　让测试为我们服务　　316
13.1 认识现状：测试的客观环境　　316
13.2 将测试导入开发各个阶段　　317
13.2.1 文档的测试（审查）　　317
13.2.2 测试设计的编写方法（输入与输出）　　320
13.2.3 测试的实施与测试阶段的轮换（做什么，做多少）　　323
13.3 小结：测试并不可怕　　326
第14章　轻松使用Django　　327
14.1 Django简介　　327
14.1.1 Django的安装　　327
14.1.2 Django的架构　　327
14.1.3 Django的文档　　331
14.2 数据库的迁移　　331
14.2.1 什么是数据库的迁移　　331
14.2.2 Django的迁移功能　　332
14.3 fixture replacement　　339
14.3.1 什么是测试配置器　　339
14.3.2 几种不便使用默认配置器的情况　　342
14.3.3 如何使用factory_boy　　343
14.3.4 消除“不便使用默认配置器的情况”　　345
14.4 Django Debug Toolbar　　346
14.5 小结　　353
第15章　方便好用的Python模块　　355
15.1 轻松计算日期　　355
15.1.1 日期计算的复杂性　　355
15.1.2 导入dateutil　　357
15.2 简化模型的映射　　359
15.2.1 模型映射的必要性　　359
15.2.2 映射规则的结构化与重复利用　　360
15.2.3 导入bpmappers　　363
15.2.4 与Django联动　　366
15.2.5 编写JSON API　　367
15.3 图像处理　　369
15.3.1 安装Pillow　　369
15.3.2 图像格式转换　　371
15.3.3 改变图像尺寸　　372
15.3.4 剪裁图像　　374
15.3.5 对图像进行滤镜处理　　375
15.4 数据加密　　377
15.4.1 安装PyCrypto　　377
15.4.2 通用加密系统的加密及解密　　377
15.4.3 公钥加密系统（RSA）的加密与解密　　378
15.5 使用Twitter的API　　382
15.5.1 导入tweepy　　382
15.5.2 添加应用与获取用户密钥　　382
15.5.3 获取访问令牌　　385
15.5.4 调用Twitter API　　385
15.5.5 编写用Twitter认证的系统　　387
15.6 使用REST API　　393
15.6.1 REST简介　　394
15.6.2 导入Requests　　394
15.6.3 导入测试服务器　　394
15.6.4 发送GET请求　　396
15.6.5 发送POST请求　　397
15.6.6 发送JSON格式的POST请求　　398
15.6.7 使用GET/POST之外的HTTP方法　　399
15.7 小结　　400
附录　　401
附录A　VirtualBox的设置　　402
A.1 安装VirtualBox　　402
A.2 新建虚拟机　　403
A.3 备份虚拟机　　404
附录B　OS（Ubuntu）的设置　　407
B.1 安装Ubuntu　　407
B.2 SSH的设置　　417
B.3 中文的设置　　419
B.4 添加用户　　419
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python项目开发实战（第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python 2.1宝典
>前言

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python 2.1宝典
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python游戏编程快速上手
第1章　安装Python　1
1.1　下载和安装Python　1
1.2　启动IDLE　2
1.3　如何使用本书　3
1.4　寻求在线帮助　4
第2章　交互式shell　6
2.1　一些简单的数学知识　6
2.2　计算表达式　7
2.4　本章小结　12
第3章　编写程序　13
3.1　字符串　13
3.2　字符串连接　14
3.3　在IDLE的文件编辑器中编写程序　14
3.4　Hello World!　15
3.5　保存程序　16
3.6　打开保存过的程序　16
3.7　“Hello World”程序如何工作　18
3.8　变量名称　20
3.9　本章小结　21
第4章　“猜数字”游戏　22
4.1　“猜数字”游戏的运行示例　22
4.2　“猜数字”游戏的源代码　23
4.3　import语句　24
4.4　random.randint()函数　25
4.5　循环　26
4.6　语句块　26
4.7　布尔数据类型　27
4.8　比较操作符　28
4.9　条件　28
4.10　=和==的区别　30
4.11　while循环语句　30
4.12　使用int()函数、float()函数、str()
函数和bool()函数来转换值　31
4.14　if语句　33
4.15　用break语句提早离开循环　34
4.16　流程控制语句　36
4.17　本章小结　36
第5章　Jokes　38
5.1　用好print()函数　38
5.2　Jokes游戏的运行示例　38
5.3　Jokes游戏的源代码　38
5.4　转义字符　39
5.5引号和双引号　40
5.6　print()的end关键字参数　41
5.7　本章小结　42
第6章　Dragon Realm　43
6.1　函数　43
6.2　如何玩“Dragon Realm”　43
6.3　Dragon Realm游戏的运行示例　44
6.4　Dragon Realm的源代码　44
6.5　def语句　46
6.6　布尔操作符　47
6.7　返回值　51
6.8　全局作用域和局部作用域　51
6.9　形参（parameter）　53
6.10　设计游戏　56
6.11　本章小结　57
第7章　使用调试器　58
7.1　Bug！　58
7.2　调试器　59
7.3　单步执行　61
7.4　查找Bug　63
7.5　断点　66
7.6　使用断点的示例　67
7.7　本章小结　68
第8章　流程图　69
8.1　如何玩Hangman　69
8.2　Hangman的运行示例　69
8.3　ASCII字符图　71
8.4　用流程图来设计一个程序　71
8.5　生成流程图　73
8.6　本章小结　79
第9章　Hangman　81
9.1　Hangman的源代码　81
9.2　多行字符串　86
9.3　常量　86
9.4　列表　86
9.5　方法　91
9.6　字符串方法lower()和upper()　91
9.7　列表方法reverse()和append()　92
9.8　列表方法split()　93
9.9　range()函数和list()函数　95
9.10　for循环　96
9.11　切片　98
9.12　elif (“Else If”)语句　101
9.13　本章小结　108
第10章　Hangman扩展　109
10.1　字典　110
10.2　random.choice()函数　113
10.3　多变量赋值　114
10.4　本章小结　116
第11章　Tic Tac Toe　117
11.1　Tic Tac Toe的运行示例　117
11.2　Tic Tac Toe的源代码　118
11.3　设计程序　123
11.4　游戏AI　124
11.5　引用　129
11.6　短路求值　137
11.7　None值　140
11.8　本章小结　146
第12章　Bagels　147
12.1　Bagels的运行示例　147
12.2　Bagels的源代码　148
12.3　random.shuffle()函数　151
12.4　复合赋值操作符　153
12.5　列表方法sort()　154
12.6　字符串方法join()　155
12.7　字符串插值　157
12.8　本章小结　160
第13章　笛卡尔坐标　161
13.1　网格和笛卡尔坐标　161
13.2　负数　163
13.3　数学技巧　164
13.4　绝对值和abs()函数　166
13.5　计算机屏幕的坐标系　167
13.6　本章小结　167
第14章　Sonar Treasure Hunt　168
14.1　Sonar Treasure Hunt的
运行示例　169
14.2　Sonar Treasure Hunt的源代码　173
14.3　设计程序　179
14.4　找到最近的藏宝箱的算法　185
14.5　列表方法remove()　187
14.6　本章小结　195
第15章　Caesar Cipher　196
15.1　密码学　196
15.2　凯撒密码　197
15.3　ASCII码以及用数字表示字母　198
15.4　函数chr()和ord()　199
15.5　凯撒密码的运行示例　200
15.6　Caesar Cipher的源代码　201
15.7　代码如何工作　202
15.8　字符串方法isalpha()　204
15.9　字符串方法isupper()和
islower()　205
15.10　暴力破解　207
15.11　本章小结　209
第16章　Reversi　210
16.1　Reversi的运行示例　211
16.2　Reversi的源代码　215
16.3　代码如何工作　223
16.4　bool()函数　231
16.5　本章小结　244
第17章　Reversi AI模拟　245
17.1　让计算机和自己下棋　245
17.2　百分数　250
17.3　round()函数　251
17.4　AISim2.py的运行示例　252
17.5　比较不同的AI算法　252
17.6　本章小结　259
第18章　图形和动画　260
18.1　安装Pygame　260
18.2　Pygame中的Hello World　261
18.3　Hello World的源代码　261
18.4　运行Hello World程序　263
18.5　元组　264
18.6　RGB颜色　265
18.7　字体和pygame.font.SysFont()
函数　266
18.8　属性　267
18.9　构造函数　269
18.10　Pygame的绘制函数　269
18.11　事件和游戏循环　272
18.12　动画　273
18.13　Animation程序的源代码　274
18.14　Animation程序如何工作　276
18.15　运行程序循环　279
18.16　本章小结　282
第19章　碰撞检测与鼠标/键盘的输入　284
19.1　Collision Detection程序的
源代码　284
19.2　Collision Detection算法　288
19.3　当遍历一个列表的时候，
不要修改该列表　292
19.4　键盘输入程序的源代码　293
19.5　colliderect()方法　300
19.6　本章小结　301
第20章　声音和图像　302
20.1　声音文件和图像文件　303
20.2　精灵和声音程序　303
20.3　Sprites and Sounds程序的
源代码　304
20.4　pygame.transform.scale()函数　308
20.5　本章小结　311
第21章　Dodger　312
21.1　回顾Pygame的基本数据类型　312
21.2　Dodger的源代码　313
21.3　全屏模式　322
21.4　游戏循环　325
21.5　事件处理　325
21.6　move_ip()方法　328
21.7　pygame.mouse.set_pos()函数　331
21.8　修改Dodger游戏　335
21.9　本章小结　335
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python游戏编程快速上手
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python金融实战
第1章　Python简介及安装 1
1．1　Python简介　1
1．2　如何安装Python　3
1．3　Python的不同版本　3
1．4　运行Python的3种方式　4
1．4．1　用GUI启动Python　4
1．4．2　从Python命令行启动Python　5
1．4．3　从DOS窗口启动Python　6
1．5　如何退出Python　7
1．6　错误提示　7
1．7　Python语言是区分大小写的　8
1．8　变量的初始化　8
1．9　寻找在线帮助　9
1．10　查找学习手册和教程　10
1．11　如何找出Python的版本　12
1．12　小结　12
练习题　12
第2章　用Python完成普通计算器的功能　14
2．1　变量的赋值及显示　15
2．2　错误提示　15
2．3　不能调用没有赋值的变量　16
2．4　选择有意义的变量名　16
2．5　使用dir()来查找变量和函数　17
2．6　删除或取消变量　17
2．7　基本数学运算：加、减、乘、除　18
2．8　幂函数、取整和余数函数　19
2．9　一个真正的幂函数　20
2．10　选择合适的数值精度　21
2．11　找出某个内置函数的详细信息　22
2．12　列出所有内置函数　22
2．13　导入数学模块　23
2．14　、e、对数和指数函数　24
2．15　import math与from math import*的区别　24
2．16　一些常用的函数　25
2．16．1　print()函数　25
2．16．2　type()函数　26
2．16．3　下划线_　26
2．16．4　结合两个字符串　26
2．16．5　将小写字符变成大写字符的函数：upper()　27
2．17　元组数据类型　28
2．18　小结　29
练习题　30
第3章　用Python编写一个金融计算器　32
3．1　编写不需要保存的Python函数　33
3．2　函数的输入参数及它们的预设值　33
3．3　缩进格式在Python编程中至关重要　34
3．4　检查自己编写的函数是否存在　35
3．5　在Python编辑器里定义函数　35
3．6　利用import()在Python编辑器里激活自己编写的函数　36
3．7　使用Python编辑器调试程序　37
3．8　调用pv_f()函数的两种方法　37
3．9　生成自制的模块　38
3．10　两种注释方法　39
3．10．1　第1种注释方法　39
3．10．2　第2种注释方法　39
3．11　查找有关pv_f()函数的信息　40
3．12　条件函数：if()　41
3．13　计算年金　41
3．14　利率换算　42
3．15　连续复利利率　44
3．16　数据类型：列表　45
3．17　净现值和净现值法则　45
3．18　投资回收期和投资回收期法则　47
3．19　内部收益率和内部收益率法则　47
3．20　显示在某个目录下的指定文件　49
3．21　用Python编写一个专业金融计算器　49
3．22　将我们的目录加到Python的路径上　50
3．23　小结　52
练习题　52
第4章　编写Python程序计算看涨期权价格　56
4．1　用空壳法编写一个程序　57
4．2　用注释法编写一个程序　59
4．3　使用和调试他人编写的程序　61
4．4　小结　61
练习题　61
第5章　模块简介　64
5．1　什么是模块　64
5．2　导入模块　65
5．2．1　为导入的模块取个简称　66
5．2．2　显示模块里的所有函数　66
5．2．3　比较import math和from math import *　67
5．2．4　删除已经导入的模块　67
5．2．5　导入几个指定的函数　68
5．2．6　找出所有的内置模块　69
5．2．7　找出所有可用的模块　69
5．2．8　找到一个已安装的模块的目录位置　71
5．2．9　有关模块的更多信息　72
5．2．10　查找某个未安装的模块　72
5．3　模块之间的相互依赖性　73
5．4　小结　74
练习题　75
第6章　NumPy和SciPy模块简介　76
6．1　安装NumPy和SciPy模块　77
6．2　从Anaconda启动Python　77
6．2．1　使用NumPy的示例　78
6．2．2　使用SciPy的示例　79
6．3　显示NumPy和SciPy包含的所有函数　82
6．4　关于某个函数的详细信息　83
6．5　理解列表数据类型　83
6．6　使用全一矩阵、全零矩阵和单位矩阵　84
6．7　执行数组操作　84
6．8　数组的加、减、乘、除　85
6．8．1　进行加减运算　85
6．8．2　执行矩阵乘法运算　85
6．8．3　执行逐项相乘的乘法运算　86
6．9　x．sum()函数　87
6．10　遍历数组的循环语句　87
6．11　使用与模块相关的帮助　87
6．12　SciPy的一系列子函数包　88
6．13　累积标准正态分布　89
6．14　与数组相关的逻辑关系　90
6．15　SciPy的统计子模块（stats）　90
6．16　SciPy模块的插值方法　91
6．17　使用SciPy求解线性方程　92
6．18　利用种子（seed）生成可重复的随机数　93
6．19　在导入的模块里查找函数　94
6．20　优化算法简介　95
6．21　线性回归和资本资产定价模型（CAPM）　95
6．22　从文本文件(．txt)输入数据：loadtxt()和getfromtxt()函数　96
6．23　独立安装NumPy模块　97
6．24　数据类型简介　97
6．25　小结　98
练习题　98
第7章　用matplotlib模块绘制与金融相关的图形　101
7．1　通过ActivePython安装matplotlib模块　102
7．2　通过Anaconda安装matplotlib模块　103
7．3　matplotlib模块简介　103
7．4　了解简单利率和复利利率　106
7．5　为图形添加文字　107
7．6　杜邦等式的图示　109
7．7　净现值图示曲线　110
7．7．1　有效地使用颜色　113
7．7．2　使用不同形状　114
7．8　图形演示分散投资的效果　115
7．9　股票的数目和投资组合风险　117
7．10　从雅虎财经网站下载历史价格数据　119
7．10．1　用直方图显示收益率分布　120
7．10．2　比较单只股票的收益和市场收益　122
7．11　了解现金的时间价值　124
7．12　用烛台图展示IBM的每日收盘价　125
7．13　用图形展示价格变化　126
7．14　同时展示收盘价和交易量　129
7．14．1　在图形上添加数学公式　130
7．14．2　在图形上添加简单的图像　131
7．14．3　保存图形文件　132
7．15　比较个股的表现　132
7．16　比较多只股票的收益率与波动率　133
7．17　查找学习手册、示例和有关视频　135
7．18　独立安装matplotlib模块　136
7．19　小结　136
练习题　136
第8章　时间序列的统计分析　139
8．1　安装pandas和statsmodels模块　140
8．1．1　在Anaconda命令提示符下启动Python　140
8．1．2　使用DOS窗口启动Python　141
8．1．3　使用Spyder启动Python　142
8．2　Pandas和statsmodels模块简介　143
8．2．1　如何使用Pandas模块　143
8．2．2　statsmodels模块示例　144
8．3　开源数据　145
8．4　用Python代码输入数据　147
8．4．1　从剪贴板输入数据　147
8．4．2　从雅虎财经网站下载历史价格数据　147
8．4．3　从txt文件输入数据　148
8．4．4　从Excel文件输入数据　149
8．4．5　从csv文件输入数据　150
8．4．6　从网页下载数据　150
8．4．7　从MATLAB数据文件输入数据　152
8．5　几个重要的函数　152
8．5．1　使用pd．Series()生成一维时间序列　152
8．5．2　使用日期变量　153
8．5．3　使用DataFrame数据类型　154
8．6　计算回报率　156
8．6．1　从日回报率计算月回报率　157
8．6．2　从日回报率计算年回报率　159
8．7　按日期合并数据集　160
8．8　构建n只股票的投资组合　161
8．9　T-检验和F-检验　162
8．9．1　检验方差是否相等　163
8．9．2　测试“一月效应”　164
8．10　金融研究和实战的应用举例　165
8．10．1　基于52周最高价和最低价的交易策略　165
8．10．2　用Roll（1984）模型来估算买卖价差　166
8．10．3　用Amihud（2002）模型来估算反流动性指标　167
8．10．4　Pastor和Stambaugh（2003）流动性指标　168
8．10．5　Fama-French三因子模型　171
8．10．6　Fama-MacBeth回归模型　173
8．10．7　滚动式估算市场风险系数　174
8．10．8　在险价值简介　177
8．11　构建有效组合边界　178
8．11．1　估计方差-协方差矩阵　178
8．11．2　优化-最小化　181
8．11．3　构建一个最优投资组合　181
8．11．4　构建n只股票的有效组合边界　183
8．12　插值法简介　186
8．13　输出数据到外部文件　187
8．13．1　输出数据到一个文本文件　187
8．13．2　输出数据到一个二进制文件　188
8．13．3　从二进制文件读取数据　188
8．14　用Python分析高频数据并计算买卖价差　188
8．15　更多关于使用Spyder的信息　194
8．16　一个有用的数据集　195
8．17　小结　196
练习题　197
第9章　Black-Scholes-Merton期权定价模型　201
9．1　看涨期权和看跌期权的收益和利润/损失函数　202
9．2　欧式期权与美式期权　205
9．3　现金流、不同类型的期权、权利和责任　206
9．4　正态分布、标准正态分布和累积标准正态分布　206
9．5　不分红股票的期权定价模型　209
9．6　用于期权定价的p4f模块　210
9．7　已知分红股票的欧式期权价格　212
9．8　多种交易策略　213
9．8．1　股票多头和看涨期权空头的组合　214
9．8．2　跨式期权组合—具有同样执行价格的看涨期权和看跌期权的组合　215
9．8．3　日历套利组合　216
9．8．4　蝶式看涨期权组合　218
9．9　期权价格和输入参数之间的关系　219
9．10　与期权相关的希腊字母　219
9．11　期权平价关系及其图形表示　221
9．12　二叉树法及其图形表示　223
9．12．1　为欧式期权定价的二叉树法　229
9．12．2　为美式期权定价的二叉树法　229
9．13　套期保值策略　230
9．14　小结　231
练习题　232
第10章　Python的循环语句和隐含波动率的计算　235
10．1　隐含波动率的定义　236
10．2　for循环简介　237
10．2．1　使用for循环计算隐含波动率　237
10．2．2　欧式期权的隐含波动率　238
10．2．3　看跌期权的隐含波动率　239
10．2．4　enumerate()函数简介　240
10．3　用for循环计算内部收益率及多个内部收益率　241
10．4　while循环简介　243
10．4．1　使用键盘命令停止无限循环　244
10．4．2　使用while循环计算隐含波动率　244
10．4．3　多重嵌套的for循环　246
10．5　美式看涨期权的隐含波动率　246
10．6　测试一个程序的运行时间　247
10．7　二分搜索的原理　248
10．8　顺序访问与随机访问　249
10．9　通过循环访问数组的元素　250
10．9．1　利用for循环赋值　251
10．9．2　通过循环访问词典的元素　251
10．10　从CBOE网站下载期权数据　252
10．11　从雅虎财经网页下载期权数据　254
10．11．1　从雅虎财经网页检索不同的到期日期　254
10．11．2　从雅虎财经网页下载当前价格　255
10．12　看跌期权和看涨期权的比率及其短期趋势　255
10．13　小结　258
练习题　258
第11章　蒙特卡罗模拟和期权定价　261
11．1　产生服从标准正态分布的随机数　262
11．1．1　产生服从（高斯）正态分布的随机样本　263
11．1．2　利用种子（seed）生成相同的随机数　263
11．1．3　产生n个服从正态分布的随机数　263
11．1．4　正态分布样本的直方图　264
11．1．5　对数正态分布的图形表示　265
11．1．6　产生服从泊松分布的随机数　266
11．1．7　产生服从均匀分布的随机数　266
11．2　利用蒙特卡罗模拟计算的近似值　267
11．3　从 只股票中随机选择m只　268
11．4　可重复和不可重复的随机取样　270
11．5　年收益率的分布　271
11．6　模拟股价变化　273
11．7　图形展示期权到期日的股票价格的分布　275
11．8　寻找有效的投资组合和有效边界　276
11．8．1　寻找基于两只股票的有效组合及相关系数的影响　276
11．8．2　构建n只股票的有效边界　281
11．9　算术平均值与几何平均值　283
11．10　预测长期回报率　284
11．11　用模拟法为看涨期权定价　285
11．12　奇异期权简介　286
11．12．1　利用蒙特卡罗模拟给均价期权定价　286
11．12．2　利用蒙特卡罗模拟给障碍式期权定价　288
11．13　障碍式期权的平价关系及其图形演示　289
11．14　具有浮动执行价格的回望式期权的定价　293
11．15　使用Sobol序列来提高效率　294
11．16　小结　294
练习题　295
第12章　波动率和GARCH模型　296
12．1　传统的风险测度-标准方差　297
12．2　检验正态分布　297
12．3　下偏标准方差　300
12．4　检验两个时间段的波动率是否相等　302
12．5　利用Breusch和Pagan（1979）方法检验异方差　303
12．6　从雅虎财经网页检索期权数据　306
12．7　波动率的微笑曲线和斜度　307
12．8　波动率集聚效应的图形表示　309
12．9　ARCH模型及ARCH（1）随机过程的模拟　310
12．10　GARCH（广义ARCH）模型　312
12．10．1　模拟GARCH随机过程　312
12．10．2　采用改良的garchSim()函数模拟GARCH(p，q)模型　313
12．10．3　由Glosten、Jagannanthan和
Runkle（1993）提出的GJR_
GARCH模型简介　315
12．11　小结　319
练习题　319
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python金融实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>疯狂Python讲义
第1章  Python语言概述和开发环境  1
1.1  Python简介  2
1.1.1  Python简史  2
1.1.2  Python的特点  3
1.2  Python程序运行机制  3
1.3  开发Python的准备  4
1.3.1  在Windows上安装Python  5
1.3.2  在Linux上安装Python  6
1.3.3  在Mac OS X上安装Python  7
1.4  第一个Python程序  8
1.4.1  编辑Python源程序  8
1.4.2  使用IDLE运行Python程序  8
1.4.3  使用命令行工具运行Python程序  9
1.5  交互式解释器  11
1.6  本章小结  12
本章练习  12
第2章  变量和简单类型  13
2.1  单行注释和多行注释  14
2.2  变量  15
2.2.1  Python是弱类型语言  15
2.2.2  使用print函数输出变量  16
2.2.3  变量的命名规则  17
2.2.4  Python的关键字和内置函数  18
2.3  数值类型  19
2.3.1  整型  19
2.3.2  浮点型  21
2.3.3  复数  21
2.4  字符串入门  22
2.4.1  字符串和转义字符  22
2.4.2  拼接字符串  23
2.4.3  repr和字符串  23
2.4.4  使用input和raw_input获取用户输入  24
2.4.5  长字符串  25
2.4.6  原始字符串  26
2.4.7  字节串（bytes）  26
2.5  深入使用字符串  28
2.5.1  转义字符  28
2.5.2  字符串格式化  29
2.5.3  序列相关方法  31
2.5.4  大小写相关方法  32
2.5.5  删除空白  33
2.5.6  查找、替换相关方法  34
2.5.7  分割、连接方法  35
2.6  运算符  36
2.6.1  赋值运算符  36
2.6.2  算术运算符  37
2.6.3  位运算符  39
2.6.4  扩展后的赋值运算符  42
2.6.5  索引运算符  42
2.6.6  比较运算符与bool类型  42
2.6.7  逻辑运算符  44
2.6.8  三目运算符  45
2.6.9  in运算符  46
2.6.10  运算符的结合性和优先级  46
2.7  本章小结  47
本章练习  47
第3章  列表、元组和字典  49
3.1  序列简介  50
3.1.1  Python的序列  50
3.1.2  创建列表和元组  50
3.2  列表和元组的通用用法  51
3.2.1  通过索引使用元素  51
3.2.2  子序列  51
3.2.3  加法  52
3.2.4  乘法  52
3.2.5  in运算符  53
3.2.6  长度、最大值和最小值  53
3.2.7  序列封包和序列解包  54
3.3  使用列表  55
3.3.1  创建列表  55
3.3.2  增加列表元素  56
3.3.3  删除列表元素  57
3.3.4  修改列表元素  58
3.3.5  列表的其他常用方法  59
3.4  使用字典  61
3.4.1  字典入门  61
3.4.2  创建字典  62
3.4.3  字典的基本用法  63
3.4.4  字典的常用方法  64
3.4.5  使用字典格式化字符串  67
3.5  本章小结  67
本章练习  67
第4章  流程控制  68
4.1  顺序结构  69
4.2  if分支结构  69
4.2.1  不要忘记缩进  70
4.2.2  不要随意缩进  72
4.2.3  不要遗忘冒号  73
4.2.4  if条件的类型  73
4.2.5  if分支的逻辑错误  74
4.2.6  if表达式  75
4.2.7  pass语句  75
4.3  断言  76
4.4  循环结构  76
4.4.1  while循环  77
4.4.2  使用while循环遍历列表和元组  78
4.4.3  for-in循环  79
4.4.4  使用for-in循环遍历列表和元组  79
4.4.5  使用for-in循环遍历字典  80
4.4.6  循环使用else  81
4.4.7  嵌套循环  83
4.4.8  for表达式  84
4.4.9  常用工具函数  86
4.5  控制循环结构  87
4.5.1  使用break结束循环  88
4.5.2  使用continue忽略本次循环的剩下语句  89
4.5.3  使用return结束方法  89
4.6  牛刀小试  90
4.6.1  数字转人民币读法  90
4.6.2  绕圈圈  92
4.6.3  控制台五子棋  93
4.6.4  控制台超市系统  95
4.7  本章小结  98
本章练习  98
第5章  函数和lambda表达式  101
5.1  函数入门  102
5.1.1  理解函数  102
5.1.2  定义和调用函数  103
5.1.3  为函数提供文档  104
5.1.4  多个返回值  104
5.1.5  递归函数  105
5.2  函数的参数  106
5.2.1  关键字（keyword）参数  106
5.2.2  参数默认值  107
5.2.3  参数收集（个数可变的参数）  109
5.2.4  逆向参数收集  110
5.2.5  函数的参数传递机制  112
5.2.6  变量作用域  115
5.3  局部函数  118
5.4  函数的高级内容  119
5.4.1  使用函数变量  119
5.4.2  使用函数作为函数形参  120
5.4.3  使用函数作为返回值  121
5.5  局部函数与lambda表达式  122
5.5.1  回顾局部函数  122
5.5.2  使用lambda表达式代替局部函数  123
5.6  本章小结  124
本章练习  124
第6章  类和对象  125
6.1  类和对象  126
6.1.1  定义类  126
6.1.2  对象的产生和使用  127
6.1.3  对象的产生和使用  128
6.1.4  实例方法和自动绑定self  129
6.2  方法  132
6.2.1  类也能调用实例方法  132
6.2.2  类方法与静态方法  133
6.2.3  @函数装饰器  134
6.2.4  再论类命名空间  136
6.3  成员变量  137
6.3.1  类变量和实例变量  137
6.3.2  使用property函数定义属性  140
6.4  隐藏和封装  142
6.5  类的继承  144
6.5.1  继承的语法  144
6.5.2  关于多继承  145
6.5.3  重写父类的方法  146
6.5.4  使用未绑定方法调用被重写的方法  147
6.5.5  使用super函数调用父类的构造方法  147
6.6  Python的动态性  149
6.6.1  动态属性与__slots__  149
6.6.2  使用type()函数定义类  151
6.6.3  使用metaclass  152
6.7  多态  153
6.7.1  多态性  154
6.7.2  检查类型  155
6.8  枚举类  156
6.8.1  枚举入门  157
6.8.2  枚举的构造器  158
6.9  本章小结  159
本章练习  159
第7章  异常处理  160
7.1  异常概述  161
7.2  异常处理机制  162
7.2.1  使用try...except捕获异常  162
7.2.2  异常类的继承体系  163
7.2.3  多异常捕获  166
7.2.4  访问异常信息  166
7.2.5  else块  167
7.2.6  使用finally回收资源  169
7.2.7  异常处理嵌套  171
7.3  使用raise引发异常  171
7.3.1  引发异常  171
7.3.2  自定义异常类  173
7.3.3  except和raise同时使用  173
7.3.4  raise不需要参数  174
7.4  Python的异常传播轨迹  175
7.5  异常处理规则  177
7.5.1  不要过度使用异常  177
7.5.2  不要使用过于庞大的try块  178
7.5.3  不要忽略捕获到的异常  179
7.6  本章小结  179
本章练习  179
第8章  Python类的特殊方法  180
8.1  常见的特殊方法  181
8.1.1  重写__repr__方法  181
8.1.2  析构方法：__del__  182
8.1.3  __dir__方法  183
8.1.4  __dict__属性  184
8.1.5  __getattr__、__setattr__等  184
8.2  与反射有关的属性和方法  186
8.2.1  动态操作属性  187
8.2.2  __call__属性  188
8.3  与序列有关的特殊方法  189
8.3.1  与序列相关的方法  189
8.3.2  实现迭代器  191
8.3.3  扩展列表、元组和字典  192
8.4  生成器  193
8.4.1  创建生成器  193
8.4.2  生成器的方法  195
8.5  运算符重载的特殊方法  197
8.5.1  与数值运算符相关的特殊方法  197
8.5.2  与比较运算符相关的特殊方法  201
8.5.3  与单目运算符相关的特殊方法  202
8.5.4  与类型转换相关的特殊方法  203
8.5.5  与常见的内建函数相关的特殊方法  204
8.6  本章小结  205
本章练习  205
第9章  模块和包  206
9.1  模块化编程  207
9.1.1  导入模块的语法  207
9.1.2  定义模块  210
9.1.3  为模块编写说明文档  211
9.1.4  为模块编写测试代码  211
9.2  加载模块  212
9.2.1  使用环境变量  212
9.2.2  默认的模块加载路径  215
9.2.3  导入模块的本质  217
9.2.4  模块的__all__变量  218
9.3  使用包  219
9.3.1  什么是包  219
9.3.2  定义包  220
9.3.3  导入包内成员  222
9.4  查看模块内容  224
9.4.1  模块包含什么  224
9.4.2  使用__doc__属性查看文档  225
9.4.3  使用__file__属性查看模块的源文件路径  226
9.5  本章小结  226
本章练习  226
第10章  常见模块  227
10.1  sys  228
10.1.1  获取运行参数  230
10.1.2  动态修改模块加载路径  231
10.2  os模块  231
10.3  random  234
10.4  time  235
10.5  JSON支持  238
10.5.1  JSON的基本知识  238
10.5.2  Python的JSON支持  241
10.6  正则表达式  244
10.6.1  Python的正则表达式支持  245
10.6.2  正则表达式旗标  250
10.6.3  创建正则表达式  251
10.6.4  子表达式  253
10.6.5  贪婪模式与勉强模式  255
10.7  容器相关类  256
10.7.1  set和frozenset  257
10.7.2  双端队列（deque）  259
10.7.3  Python的堆操作  262
10.8  collections下的容器支持  265
10.8.1  ChainMap对象  265
10.8.2  Counter对象  267
10.8.3  defaultdict对象  269
10.8.4  namedtuple工厂函数  270
10.8.5  OrderedDict对象  272
10.9  函数相关模块  273
10.9.1  itertools模块的功能函数  273
10.9.2  functools模块的功能函数  276
10.10  本章小结  283
本章练习  283
第11章  图形界面编程  285
11.1  Python的GUI库  286
11.2  Tkinter GUI编程的组件  287
11.3  布局管理器  293
11.3.1  Pack布局管理器  293
11.3.2  Grid布局管理器  296
11.3.3  Place布局管理器  297
11.4  事件处理  299
11.4.1  简单的事件处理  299
11.4.2  事件绑定  300
11.5  Tkinter常用组件  304
11.5.1  使用ttk组件  304
11.5.2  Variable类  305
11.5.3  使用compound选项  306
11.5.4  Entry和Text组件  308
11.5.5  Radiobutton和Checkbutton组件  311
11.5.6  Listbox和Combobox组件  315
11.5.7  Spinbox组件  319
11.5.8  Scale和LabeledScale组件  320
11.5.9  Labelframe组件  324
11.5.10  Panedwindow组件  326
11.5.11  OptionMenu组件  328
11.6  对话框（Dialog）  330
11.6.1  普通对话框  330
11.6.2  自定义模式、非模式对话框  332
11.6.3  输入对话框  334
11.6.4  文件对话框  336
11.6.5  颜色选择对话框  338
11.6.6  消息框  339
11.7  菜单  342
11.7.1  窗口菜单  343
11.7.2  右键菜单  347
11.8  在Canvas中绘图  349
11.8.1  Tkinter Canvas的绘制功能  349
11.8.2  操作图形项的标签  356
11.8.3  操作图形项  358
11.8.4  为图形项绑定事件  363
11.8.5  绘制动画  368
11.9  本章小结  371
本章练习  371
第12章  文件I/O  372
12.1  使用pathlib模块操作目录  373
12.1.1  PurePath的基本功能  374
12.1.2  PurePath的属性和方法  376
12.1.3  Path的功能和用法  378
12.2  使用os.path操作目录  379
12.3  使用fnmatch处理文件名匹配  380
12.4  打开文件  381
12.4.1  文件打开模式  382
12.4.2  缓冲  383
12.5  读取文件  383
12.5.1  按字节或字符读取  383
12.5.2  按行读取  385
12.5.3  使用fileinput读取多个输入流  386
12.5.4  文件迭代器  386
12.5.5  管道输入  387
12.5.6  使用with语句  388
12.5.7  使用linecache随机读取指定行  390
12.6  写文件  391
12.6.1  文件指针的概念  391
12.6.2  写文件  392
12.7  os模块的文件和目录函数  393
12.7.1  与目录相关的函数  393
12.7.2  与权限相关的函数  395
12.7.3  与文件访问相关的函数  396
12.8  使用tempfile模块生成临时文件和
临时目录  398
12.9  本章小结  399
本章练习  400
第13章  数据库编程  401
13.1  Python数据库API简介  402
13.1.1  全局变量  402
13.1.2  数据库API的核心类  403
13.1.3  操作数据库的基本流程  404
13.2  操作SQLite数据库  404
13.2.1  创建数据表  405
13.2.2  使用SQLite Expert工具  406
13.2.3  使用序列重复执行DML语句  408
13.2.4  执行查询  410
13.2.5  事务控制  412
13.2.6  执行SQL脚本  412
13.2.7  创建自定义函数  413
13.2.8  创建聚集函数  414
13.2.9  创建比较函数  415
13.3  操作MySQL数据库  417
13.3.1  下载和安装MySQL数据库  417
13.3.2  使用pip工具管理模块  420
13.3.3  执行DDL语句  421
13.3.4  执行DML语句  423
13.3.5  执行查询语句  425
13.3.6  调用存储过程  426
13.4  本章小结  427
本章练习  427
第14章  并发编程  428
14.1  线程概述  429
14.1.1  线程和进程  429
14.1.2  多线程的优势  430
14.2  线程的创建和启动  431
14.2.1  调用Thread类的构造器创建线程  431
14.2.2  继承Thread类创建线程类  433
14.3  线程的生命周期  434
14.3.1  新建和就绪状态  434
14.3.2  运行和阻塞状态  435
14.3.3  线程死亡  436
14.4  控制线程  438
14.4.1  join线程  438
14.4.2  后台线程  439
14.4.3  线程睡眠：sleep  440
14.5  线程同步  440
14.5.1  线程安全问题  440
14.5.2  同步锁（Lock）  442
14.5.3  死锁  445
14.6  线程通信  447
14.6.1  使用Condition实现线程通信  447
14.6.2  使用队列（Queue）控制线程通信  450
14.6.3  使用Event控制线程通信  452
14.7  线程池  454
14.7.1  线程池  454
14.7.2  获取执行结果  457
14.8  线程相关类  458
14.8.1  线程局部变量  458
14.8.2  定时器  460
14.8.3  任务调度  460
14.9  多进程  462
14.9.1  使用fork创建新进程  462
14.9.2  使用multiprocessing.Process创建新进程  463
14.9.3  Context和启动进程的方式  465
14.9.4  使用进程池管理进程  466
14.9.5  进程通信  468
14.10  本章小结  470
本章练习  470
第15章  网络编程  471
15.1  网络编程的基础知识  472
15.1.1  网络基础知识  472
15.1.2  IP地址和端口号  473
15.2  Python的基本网络支持  474
15.2.1  Python的网络模块概述  474
15.2.2  使用urllib.parse子模块  475
15.2.3  使用urllib.request读取资源  479
15.2.4  管理cookie  483
15.3  基于TCP协议的网络编程  486
15.3.1  TCP协议基础  487
15.3.2  使用socket创建TCP服务器端  487
15.3.3  使用socket通信  489
15.3.4  加入多线程  490
15.3.5  记录用户信息  492
15.3.6  半关闭的socket  497
15.3.7  selectors模块  498
15.4  基于UDP协议的网络编程  500
15.4.1  UDP协议基础  500
15.4.2  使用socket发送和接收数据  501
15.4.3  使用UDP协议实现多点广播  503
15.5  电子邮件支持  505
15.5.1  使用smtplib模块发送邮件  505
15.5.2  使用poplib模块收取邮件  508
15.6  本章小结  511
本章练习  512
第16章  文档和测试  513
16.1  使用pydoc生成文档  514
16.1.1  在控制台中查看文档  515
16.1.2  生成HTML文档  516
16.1.3  启动本地服务器来查看文档信息  517
16.1.4  查找模块  519
16.2  软件测试概述  519
16.2.1  软件测试的概念和目的  519
16.2.2  软件测试的分类  521
16.2.3  开发活动和测试活动  521
16.2.4  常见的Bug管理工具  522
16.3  文档测试  523
16.4  单元测试  525
16.4.1  单元测试概述  525
16.4.2  单元测试的逻辑覆盖  527
16.5  使用PyUnit（unittest）  529
16.5.1  PyUnit（unittest）的用法  530
16.5.2  运行测试  533
16.5.3  使用测试包  534
16.5.4  测试固件之setUp和tearDown  536
16.5.5  跳过测试用例  538
16.6  本章小结  540
本章练习  540
第17章  打包和发布  541
17.1  使用zipapp模块  542
17.1.1  生成可执行的Python档案包  542
17.1.2  创建独立应用  543
17.2  使用PyInstaller生成可执行程序  544
17.2.1  安装PyInstaller  544
17.2.2  使用PyInstaller生成可执行程序  545
17.3  本章小结  547
本章练习  547
第18章  合金弹头  548
18.1  合金弹头游戏简介  549
18.2  pygame简介  550
18.2.1  安装pygame  550
18.2.2  pygame常用的游戏API  551
18.3  开发游戏界面组件  553
18.3.1  游戏界面分析  553
18.3.2  实现“怪物”类  554
18.3.3  实现怪物管理  559
18.3.4  实现“子弹”类  560
18.3.5  加载、管理游戏图片  563
18.3.6  让游戏“运行”起来  565
18.4  增加“角色”  566
18.4.1  开发“角色”类  566
18.4.2  添加角色  572
18.5  合理绘制地图  575
18.6  增加音效  577
18.7  增加游戏场景  579
18.8  本章小结  583
本章练习  583
第19章  数据可视化  584
19.1  使用Matplotlib生成数据图  585
19.1.1  安装Matplotlib包  585
19.1.2  Matplotlib数据图入门  586
19.1.3  管理图例  588
19.1.4  管理坐标轴  591
19.1.5  管理多个子图  593
19.2  功能丰富的数据图  597
19.2.1  饼图  597
19.2.2  柱状图  598
19.2.3  水平柱状图  601
19.2.4  散点图  602
19.2.5  等高线图  604
19.2.6  3D图形  605
19.3  使用Pygal生成数据图  606
19.3.1  安装Pygal包  606
19.3.2  Pygal数据图入门  607
19.3.3  配置Pygal数据图  608
19.4  Pygal支持的常见数据图  609
19.4.1  折线图  610
19.4.2  水平柱状图和水平折线图  611
19.4.3  叠加柱状图和叠加折线图  612
19.4.4  饼图  613
19.4.5  点图  614
19.4.6  仪表（Gauge）图  615
19.4.7  雷达图  616
19.5  处理数据  617
19.5.1  CSV文件格式  617
19.5.2  JSON数据  621
19.5.3  数据清洗  624
19.5.4  读取网络数据  626
19.6  本章小结  629
本章练习  629
第20章  网络爬虫  630
20.1  安装Scrapy  631
20.1.1  了解Scrapy  631
20.1.2  安装Scrapy  632
20.2  使用爬虫爬取、分析招聘信息  634
20.2.1  创建Scrapy项目  634
20.2.2  使用shell调试工具  635
20.2.3  Scrapy开发步骤  638
20.2.4  使用JSON导出信息  643
20.2.5  将数据写入数据库  644
20.2.6  使用Pygal展示招聘信息  645
20.3  处理反爬虫  646
20.3.1  使用shell调试工具分析目标站点  646
20.3.2  使用Scrapy爬取高清图片  649
20.3.3  应对反爬虫的常见方法  651
20.3.4  整合Selenium模拟浏览器行为  653
20.4  本章小结  657
本章练习  657
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>疯狂Python讲义
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python网络爬虫权威指南（第2版）
前言　　xi
第一部分　创建爬虫
第1章　初见网络爬虫　　3
1.1　网络连接　　3
1.2　BeautifulSoup 简介　　5
1.2.1　安装BeautifulSoup　　6
1.2.2　运行BeautifulSoup　　8
1.2.3　可靠的网络连接以及异常的处理　　9
第2章　复杂HTML 解析　　13
2.1　不是一直都要用锤子　　13
2.2　再端一碗BeautifulSoup　　14
2.2.1　BeautifulSoup 的find() 和find_all()　　16
2.2.2　其他BeautifulSoup 对象　　18
2.2.3　导航树　　18
2.3　正则表达式　　22
2.4　正则表达式和BeautifulSoup　　25
2.5　获取属性　　26
2.6　Lambda 表达式　　26
第3章　编写网络爬虫　　28
3.1　遍历单个域名　　28
3.2　抓取整个网站　　32
3.3　在互联网上抓取　　36
第4章　网络爬虫模型　　41
4.1　规划和定义对象　　41
4.2　处理不同的网站布局　　45
4.3　结构化爬虫　　49
4.3.1　通过搜索抓取网站　　49
4.3.2　通过链接抓取网站　　52
4.3.3　抓取多种类型的页面　　54
4.4　关于网络爬虫模型的思考　　55
第5章　Scrapy　　57
5.1　安装Scrapy　　57
5.2　创建一个简易爬虫　　59
5.3　带规则的抓取　　60
5.4　创建item　　64
5.5　输出item　　66
5.6　item 管线组件　　66
5.7　Scrapy 日志管理　　69
5.8　更多资源　　70
第6章　存储数据　　71
6.1　媒体文件　　71
6.2　把数据存储到CSV　　74
6.3　MySQL　　75
6.3.1　安装MySQL　　76
6.3.2　基本命令　　78
6.3.3　与Python 整合　　81
6.3.4　数据库技术与最佳实践　　84
6.3.5　MySQL 里的“六度空间游戏”　　86
6.4　Email　　88
第二部分　高级网页抓取
第7章　读取文档　　93
7.1　文档编码　　93
7.2　纯文本　　94
7.3　CSV　　98
7.4　PDF　　100
7.5　微软Word 和.docx　　102
第8章　数据清洗　　106
8.1　编写代码清洗数据　　106
8.2　数据存储后再清洗　　 111
第9章　自然语言处理　　115
9.1　概括数据　　116
9.2　马尔可夫模型　　119
9.3　自然语言工具包　　124
9.3.1　安装与设置　　125
9.3.2　用NLTK 做统计分析　　126
9.3.3　用NLTK 做词性分析　　128
9.4　其他资源　　131
第10章　穿越网页表单与登录窗口进行抓取　　132
10.1　Python Requests 库　　132
10.2　提交一个基本表单　　133
10.3　单选按钮、复选框和其他输入　　134
10.4　提交文件和图像　　136
10.5　处理登录和cookie　　136
10.6　其他表单问题　　139
第11章　抓取JavaScript　　140
11.1　JavaScript 简介　　140
11.2　Ajax 和动态HTML　　143
11.2.1　在Python 中用Selenium 执行JavaScript　　144
11.2.2　Selenium 的其他webdriver　　149
11.3　处理重定向　　150
11.4　关于JavaScript 的最后提醒　　151
第12章　利用API 抓取数据　　152
12.1　API 概述　　152
12.1.1　HTTP 方法和API　　154
12.1.2　更多关于API 响应的介绍　　155
12.2　解析JSON 数据　　156
12.3　无文档的API　　157
12.3.1　查找无文档的API　　159
12.3.2　记录未被记录的API　　160
12.3.3　自动查找和记录API　　160
12.4　API 与其他数据源结合　　163
12.5　再说一点API　　165
第13章　图像识别与文字处理　　167
13.1　OCR 库概述　　168
13.1.1　Pillow　　168
13.1.2　Tesseract　　168
13.1.3　NumPy　　170
13.2　处理格式规范的文字　　171
13.2.1　自动调整图像　　173
13.2.2　从网站图片中抓取文字　　176
13.3　读取验证码与训练Tesseract　　178
13.4　获取验证码并提交答案　　183
第14章　避开抓取陷阱　　186
14.1　道德规范　　186
14.2　让网络机器人看着像人类用户　　187
14.2.1　修改请求头　　187
14.2.2　用JavaScript 处理cookie　　189
14.2.3　时间就是一切　　191
14.3　常见表单安全措施　　191
14.3.1　隐含输入字段值　　192
14.3.2　避免蜜罐　　192
14.4　问题检查表　　194
第15章　用爬虫测试网站　　196
15.1　测试简介　　196
15.2　Python 单元测试　　197
15.3　Selenium 单元测试　　201
15.4　单元测试与Selenium 单元测试的选择　　205
第16章　并行网页抓取　　206
16.1　进程与线程　　206
16.2　多线程抓取　　207
16.2.1　竞争条件与队列　　209
16.2.2　threading 模块　　212
16.3　多进程抓取　　214
16.3.1　多进程抓取　　216
16.3.2　进程间通信　　217
16.4　多进程抓取的另一种方法　　219
第17章　远程抓取　　221
17.1　为什么要用远程服务器　　221
17.1.1　避免IP 地址被封杀　　221
17.1.2　移植性与扩展性　　222
17.2　Tor 代理服务器　　223
17.3　远程主机　　224
17.3.1　从网站主机运行　　225
17.3.2　从云主机运行　　225
17.4　其他资源　　227
第18章　网页抓取的法律与道德约束　　228
18.1　商标、版权、专利　　228
18.2　侵害动产　　230
18.3　计算机欺诈与滥用法　　232
18.4　robots.txt 和服务协议　　233
18.5　3 个网络爬虫　　236
18.5.1　eBay 起诉Bidder’s Edge 侵害其动产　　236
18.5.2　美国政府起诉Auernheimer 与《计算机欺诈与滥用法》　　237
18.5.3　Field 起诉Google：版权和robots.txt　　239
18.6　勇往直前　　239
关于作者　　241
关于封面　　241
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python网络爬虫权威指南（第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据分析与数据化运营
赞誉
前言
第1章Python和数据化运营1
1.1用Python做数据化运营1
1.1.1Python是什么1
1.1.2数据化运营是什么2
1.1.3Python用于数据化运营5
1.2数据化运营所需的Python相关工具和组件6
1.2.1Python程序6
1.2.2PythonIDE7
1.2.3Python第三方库8
1.2.4数据库和客户端16
1.2.5SSH远程客户端18
1.3内容延伸：Python的OCR和TensorFlow18
1.3.1OCR工具：Tesseract-OCR18
1.3.2机器学习框架—TensorFlow19
1.4第一个用Python实现的数据化运营分析实例—销售预测20
1.4.1案例概述20
1.4.2案例过程20
1.4.3案例小结28
1.5本章小结28
第2章数据化运营的数据来源31
2.1数据化运营的数据来源类型31
2.1.1数据文件31
2.1.2数据库32
2.1.3API33
2.1.4流式数据34
2.1.5外部公开数据34
2.1.6其他35
2.2使用Python获取运营数据35
2.2.1从文本文件读取运营数据35
2.2.2从Excel获取运营数据46
2.2.3从关系型数据库MySQL读取运营数据48
2.2.4从非关系型数据库MongoDB读取运营数据56
2.2.5从API获取运营数据59
2.3内容延伸：读取非结构化网页、文本、图像、视频、语音64
2.3.1从网页中爬取运营数据64
2.3.2读取非结构化文本数据65
2.3.3读取图像数据65
2.3.4读取视频数据68
2.3.5读取语音数据70
2.4本章小结75
第3章11条数据化运营不得不知道的数据预处理经验76
3.1数据清洗：缺失值、异常值和重复值的处理76
3.1.1数据列缺失的4种处理方法76
3.1.2不要轻易抛弃异常数据78
3.1.3数据重复就需要去重吗79
3.1.4代码实操：Python数据清洗81
3.2将分类数据和顺序数据转换为标志变量89
3.2.1分类数据和顺序数据是什么89
3.2.2运用标志方法处理分类和顺序数据90
3.2.3代码实操：Python标志转换90
3.3大数据时代的数据降维94
3.3.1需要数据降维的情况94
3.3.2基于特征选择的降维94
3.3.3基于维度转换的降维96
3.3.4代码实操：Python数据降维97
3.4解决样本类别分布不均衡的问题100
3.4.1哪些运营场景中容易出现样本不均衡100
3.4.2通过过抽样和欠抽样解决样本不均衡101
3.4.3通过正负样本的惩罚权重解决样本不均衡101
3.4.4通过组合/集成方法解决样本不均衡102
3.4.5通过特征选择解决样本不均衡102
3.4.6代码实操：Python处理样本不均衡102
3.5如何解决运营数据源的冲突问题106
3.5.1为什么会出现多数据源的冲突107
3.5.2如何应对多数据源的冲突问题109
3.6数据化运营要抽样还是全量数据109
3.6.1什么时候需要抽样110
3.6.2如何进行抽样110
3.6.3抽样需要注意的几个问题111
3.6.4代码实操：Python数据抽样113
3.7解决运营数据的共线性问题116
3.7.1如何检验共线性117
3.7.2解决共线性的5种常用方法117
3.7.3代码实操：Python处理共线性问题118
3.8有关相关性分析的混沌120
3.8.1相关和因果是一回事吗120
3.8.2相关系数低就是不相关吗121
3.8.3代码实操：Python相关性分析121
3.9标准化，让运营数据落入相同的范围122
3.9.1实现中心化和正态分布的Z-Score122
3.9.2实现归一化的Max-Min123
3.9.3用于稀疏数据的MaxAbs123
3.9.4针对离群点的RobustScaler123
3.9.5代码实操：Python数据标准化处理123
3.10离散化，对运营数据做逻辑分层126
3.10.1针对时间数据的离散化127
3.10.2针对多值离散数据的离散化127
3.10.3针对连续数据的离散化127
3.10.4针对连续数据的二值化128
3.10.5代码实操：Python数据离散化处理128
3.11数据处理应该考虑哪些运营业务因素133
3.11.1考虑固定和突发运营周期133
3.11.2考虑运营需求的有效性134
3.11.3考虑交付时要贴合运营落地场景134
3.11.4不要忽视业务专家经验135
3.11.5考虑业务需求的变动因素136
3.12内容延伸：非结构化数据的预处理137
3.12.1网页数据解析137
3.12.2网络用户日志解析144
3.12.3图像的基本预处理148
3.12.4自然语言文本预处理154
3.13本章小结157
第4章跳过运营数据分析和挖掘的“大坑”159
4.1聚类分析159
4.1.1当心数据异常对聚类结果的影响160
4.1.2超大数据量时应该放弃K均值算法160
4.1.3聚类不仅是建模的终点，更是重要的中间预处理过程162
4.1.4高维数据上无法应用聚类吗163
4.1.5如何选择聚类分析算法164
4.1.6代码实操：Python聚类分析164
4.2回归分析172
4.2.1注意回归自变量之间的共线性问题172
4.2.2相关系数、判定系数和回归系数之间到底什么关系172
4.2.3判定系数是否意味着相应的因果联系173
4.2.4注意应用回归模型时研究自变量是否产生变化173
4.2.5如何选择回归分析算法174
4.2.6代码实操：Python回归分析174
4.3分类分析183
4.3.1防止分类模型的过拟合问题183
4.3.2使用关联算法做分类分析183
4.3.3用分类分析来提炼规则、提取变量、处理缺失值184
4.3.4类别划分-分类算法和聚类算法都是好手185
4.3.5如何选择分类分析算法186
4.3.6代码实操：Python分类分析187
4.4关联分析195
4.4.1频繁规则不一定是有效规则195
4.4.2不要被啤酒尿布的故事紧固你的思维196
4.4.3被忽略的“负相关”模式真的毫无用武之地吗197
4.4.4频繁规则只能打包组合应用吗198
4.4.5关联规则的序列模式199
4.4.6代码实操：Python关联分析200
4.5异常检测分析206
4.5.1异常检测中的“新奇检测”模式207
4.5.2将数据异常与业务异常相分离207
4.5.3面临维度灾难时，异常检测可能会失效208
4.5.4异常检测的结果能说明异常吗208
4.5.5代码实操：Python异常检测分析208
4.6时间序列分析212
4.6.1如果有自变量，为什么还要用时间序列212
4.6.2时间序列不适合商业环境复杂的企业213
4.6.3时间序列预测的整合、横向和纵向模式214
4.6.4代码实操：Python时间序列分析214
4.7路径、漏斗、归因和热力图分析234
4.7.1不要轻易相信用户的页面访问路径237
4.7.2如何将路径应用于更多用户行为模式的挖掘？237
4.7.3为什么很多数据都显示多渠道路径的价值很小？238
4.7.4点击热力图真的反映了用户的点击喜好？239
4.7.5为什么归因分析主要存在于线上的转化行为240
4.7.6漏斗分析和路径分析有什么区别240
4.8其他数据分析和挖掘的忠告241
4.8.1不要忘记数据质量的验证241
4.8.2不要忽视数据的落地性242
4.8.3不要把数据陈列当作数据结论242
4.8.4数据结论不要产生于单一指标244
4.8.5数据分析不要预设价值立场244
4.8.6不要忽视数据与业务的需求冲突问题245
4.9内容延伸：非结构化数据的分析与挖掘246
4.9.1词频统计246
4.9.2词性标注249
4.9.3关键字提取253
4.9.4文本聚类255
4.10本章小结258
第5章会员数据化运营260
5.1会员数据化运营概述260
5.2会员数据化运营关键指标261
5.2.1会员整体指标261
5.2.2会员营销指标261
5.2.3会员活跃度指标263
5.2.4会员价值度指标265
5.2.5会员终生价值指标266
5.2.6会员异动指标266
5.3会员数据化运营应用场景267
5.3.1会员营销267
5.3.2会员关怀267
5.4会员数据化运营分析模型268
5.4.1会员细分模型268
5.4.2会员价值度模型269
5.4.3会员活跃度模型270
5.4.4会员流失预测模型271
5.4.5会员特征分析模型272
5.4.6营销响应预测模型273
5.5会员数据化运营分析小技巧274
5.5.1使用留存分析新用户质量274
5.5.2使用AARRR做APP用户生命周期分析275
5.5.3借助动态数据流关注会员状态的轮转276
5.5.4使用协同过滤算法为新会员分析推送个性化信息277
5.6会员数据化运营分析的“大实话”279
5.6.1企业“不差钱”，还有必要做会员精准营销吗279
5.6.2用户满意度取决于期望和给予的匹配程度280
5.6.3用户不购买就是流失了吗280
5.6.4来自调研问卷的用户信息可信吗281
5.6.5不要盲目相信二八法则283
5.7案例：基于RFM的用户价值度分析283
5.7.1案例背景283
5.7.2案例主要应用技术284
5.7.3案例数据284
5.7.4案例过程284
5.7.5案例数据结论294
5.7.6案例应用和部署295
5.7.7案例注意点295
5.7.8案例引申思考296
5.8案例：基于AdaBoost的营销响应预测297
5.8.1案例背景297
5.8.2案例主要应用技术297
5.8.3案例数据298
5.8.4案例过程298
5.8.5案例数据结论313
5.8.6案例应用和部署313
5.8.7案例注意点314
5.8.8案例引申思考315
5.9本章小结315
第6章商品数据化运营317
6.1商品数据化运营概述317
6.2商品数据化运营关键指标317
6.2.1销售类指标317
6.2.2促销活动指标320
6.2.3供应链指标321
6.3商品数据化运营应用场景323
6.3.1销售预测323
6.3.2库存分析323
6.3.3市场分析324
6.3.4促销分析324
6.4商品数据化运营分析模型325
6.4.1商品价格敏感度模型325
6.4.2新产品市场定位模型326
6.4.3销售预测模型327
6.4.4商品关联销售模型327
6.4.5异常订单检测328
6.4.6商品规划的最优组合328
6.5商品数据化运营分析小技巧330
6.5.1使用层次分析法将定量与定性分析结合331
6.5.2通过假设检验做促销拉动分析333
6.5.3使用BCG矩阵做商品结构分析334
6.5.4巧用4P分析建立完善的商品运营分析结构336
6.6商品数据化运营分析的“大实话”337
6.6.1为什么很多企业会以低于进价的价格大量销售商品337
6.6.2促销活动真的是在促进商品销售吗339
6.6.3用户关注的商品就是要买的商品吗340
6.6.4提供的选择过多其实不利于商品销售341
6.7案例：基于超参数优化的GradientBoosting的销售预测341
6.7.1案例背景341
6.7.2案例主要应用技术341
6.7.3案例数据342
6.7.4案例过程343
6.7.5案例数据结论351
6.7.6案例应用和部署351
6.7.7案例注意点351
6.7.8案例引申思考351
6.8案例：基于LogisticRegression、
RandomForest、Bagging概率投票
组合模型的异常检测352
6.8.1案例背景352
6.8.2案例主要应用技术352
6.8.3案例数据353
6.8.4案例过程353
6.8.5案例数据结论364
6.8.6案例应用和部署364
6.8.7案例注意点365
6.8.8案例引申思考365
6.9本章小结367
第7章流量数据化运营369
7.1流量数据化运营概述369
7.28大流量分析工具369
7.3如何选择第三方流量分析工具372
7.4流量采集分析系统的工作机制375
7.4.1流量数据采集376
7.4.2流量数据处理379
7.4.3流量数据应用380
7.5流量数据与企业数据的整合381
7.5.1流量数据整合的意义381
7.5.2流量数据整合的范畴382
7.5.3流量数据整合的方法382
7.6流量数据化运营指标383
7.6.1站外营销推广指标383
7.6.2网站流量数量指标385
7.6.3网站流量质量指标386
7.7流量数据化运营应用场景389
7.7.1流量采购389
7.7.2流量分发391
7.8流量数据化运营分析模型391
7.8.1流量波动检测392
7.8.2渠道特征聚类393
7.8.3广告整合传播模型393
7.8.4流量预测模型397
7.9流量数据化运营分析小技巧398
7.9.1给老板提供一页纸的流量dashboard398
7.9.2关注趋势、重要事件和潜在因素是日常报告的核心400
7.9.3使用从细分到多层下钻数据分析400
7.9.4通过跨屏追踪解决用户跨设备和浏览器的访问行为401
7.9.5基于时间序列的用户群体过滤403
7.10流量数据化运营分析的“大实话”406
7.10.1流量数据分析的价值其实没那么大406
7.10.2如何将流量的实时分析价值最大化406
7.10.3营销流量的质量评估是难点工作407
7.10.4个性化的媒体投放仍然面临很多问题408
7.10.5传统的网站分析方法到底缺少了什么409
7.11案例：基于自动节点树的数据异常原因下探分析413
7.11.1案例背景413
7.11.2案例主要应用技术414
7.11.3案例数据415
7.11.4案例过程416
7.11.5案例数据结论430
7.11.6案例应用和部署431
7.11.7案例注意点432
7.11.8案例引申思考432
7.12案例：基于自动K值的KMeans广告效果聚类分析433
7.12.1案例背景433
7.12.2案例主要应用技术433
7.12.3案例数据434
7.12.4案例过程434
7.12.5案例数据结论446
7.12.6案例应用和部署447
7.12.7案例注意点448
7.12.8案例引申思考448
7.13本章小结449
第8章内容数据化运营451
8.1内容数据化运营概述451
8.2内容数据化运营指标452
8.3内容数据化运营应用场景455
8.4内容数据化运营分析模型456
8.4.1情感分析模型456
8.4.2搜索优化模型457
8.4.3文章关键字模型457
8.4.4主题模型458
8.4.5垃圾信息检测模型459
8.5内容数据化运营分析小技巧460
8.5.1通过AB测试和多变量测试找到最佳内容版本460
8.5.2通过屏幕浏览占比了解用户到底看了页面多少内容461
8.5.3通过数据分析系统与CMS打通实现个性化内容运营462
8.5.4将个性化推荐从网站应用到APP端466
8.6内容数据化运营分析的“大实话”467
8.6.1个性化内容运营不仅是整合CMS和数据系统467
8.6.2用户在着陆页上不只有跳出和继续两种状态467
8.6.3“人工组合”的内容运营价值最大化并非不能实现468
8.6.4影响内容点击率的因素不仅有位置469
8.7案例：基于潜在狄利克雷分配（LDA）的内容主题挖掘470
8.7.1案例背景470
8.7.2案例主要应用技术470
8.7.3案例数据471
8.7.4案例过程471
8.7.5案例数据结论480
8.7.6案例应用和部署481
8.7.7案例注意点481
8.7.8案例引申思考481
8.8案例：基于多项式贝叶斯的增量学习的文本分类482
8.8.1案例背景482
8.8.2案例主要应用技术482
8.8.3案例数据482
8.8.4案例过程483
8.8.5案例数据结论491
8.8.6案例应用和部署491
8.8.7案例注意点491
8.8.8案例引申思考492
8.9本章小结492
第9章数据化运营分析的终极秘籍495
9.1撰写出彩的数据分析报告的5个建议495
9.1.1完整的报告结构495
9.1.2精致的页面版式496
9.1.3漂亮的可视化图形498
9.1.4突出报告的关键信息500
9.1.5用报告对象习惯的方式撰写报告501
9.2数据化运营支持的4种扩展方式502
9.2.1数据API502
9.2.2数据模型503
9.2.3数据产品503
9.2.4运营产品504
9.3提升数据化运营价值度的5种途径504
9.3.1数据源：不只有结构化的数据，还有文本、图片、视频、语音504
9.3.2自动化：建立自动任务，解除重复劳动505
9.3.3未卜先知：建立智能预警模型，不要让运营先找你505
9.3.4智能化：向BI-AI的方向走507
9.3.5场景化：将数据嵌入运营环节之中507
9.4本章小结508
附录509
附录A公开数据集509
附录BPython数据工具箱516
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据分析与数据化运营
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python编程无师自通
第 一部分　编程简介
第 1章　概述 3
1．1　本书的结构 4
1．2　从终点出发 4
1．3　你不是一个人在战斗 5
1．4　自学的优势 5
1．5　为什么应该编程 5
1．6　坚持不懈 6
1．7　本书的格式 6
1．8　本书使用的技术 6
1．9　术语表 7
1．10　挑战练习 7
第 2章　起步 9
2．1　什么是编程 9
2．2　什么是Python 10
2．3　安装Python 10
2．4　问题解答 11
2．5　交互式shell 11
2．6　保存程序 12
2．7　运行示例程序 12
2．8　术语表 13
2．9　挑战练习 13
第3章　编程概论 15
3．1　示例 15
3．2　注释 16
3．3　打印 17
3．4　代码行 17
3．5　关键字 18
3．6　间距 18
3．7　数据类型 19
3．8　常量和变量 21
3．9　语法 24
3．10　错误与异常 25
3．11　算术操作符 26
3．12　比较操作符 29
3．13　逻辑操作符 31
3．14　条件语句 34
3．15　语句 38
3．16　术语表 40
3．17　挑战练习 42
第4章　函数 43
4．1　表达概念 43
4．2　函数 44
4．3　定义函数 44
4．4　内置函数 47
4．5　复用函数 49
4．6　必选及可选参数 51
4．7　作用域 52
4．8　异常处理 55
4．9　文档字符串 58
4．10　有需要才使用变量 58
4．11　术语表 59
4．12　挑战练习 59
第5章　容器 61
5．1　方法 61
5．2　列表 62
5．3　元组 66
5．4　字典 69
5．5　容器嵌套容器 72
5．6　术语表 76
5．7　挑战练习 76
第6章　字符串操作 77
6．1　三引号字符串 77
6．2　索引 77
6．3　字符串是不可变的 79
6．4　字符串拼接 79
6．5　字符串乘法 80
6．6　改变大小写 80
6．7　格式化 80
6．8　分割 82
6．9　连接 82
6．10　去除空格 83
6．11　替换 84
6．12　查找索引 84
6．13　in关键字 85
6．14　字符串转义 85
6．15　换行符 86
6．16　切片 87
6．17　术语表 88
6．18　挑战练习 89
第7章　循环 91
7．1　for循环 91
7．2　range函数 95
7．3　while循环 95
7．4　break语句 96
7．5　continue语句 98
7．6　嵌套循环 99
7．7　术语表 100
7．8　挑战练习 101
第8章　模块 103
8．1　导入内置模块 103
8．2　导入其他模块 105
8．3　术语表 107
8．4　挑战练习 107
第9章　文件 109
9．1　写文件操作 109
9．2　自动关闭文件 110
9．3　读取文件 111
9．4　CSV文件 112
9．5　术语表 114
9．6　挑战练习 114
第 10章　综合练习 115
10．1　Hangman 116
10．2　挑战练习 119
第 11章　练习 121
11．1　阅读 121
11．2　其他资源 121
11．3　寻求帮助 121
第二部分　面对对象编程简介
第 12章　编程范式 125
12．1　状态 125
12．2　过程式编程 125
12．3　函数式编程 127
12．4　面向对象编程 128
12．5　术语表 133
12．6　挑战练习 134
第 13章　面向对象编程的
四大支柱 135
13．1　封装 135
13．2　抽象 138
13．3　多态 138
13．4　继承 140
13．5　组合 143
13．6　术语表 144
13．7　挑战练习 144
第 14章　深入面向对象编程 145
14．1　类变量与实例变量 145
14．2　魔法方法 147
14．3　is 149
14．4　术语表 150
14．5　挑战练习 150
第 15章　综合练习 151
15．1　卡牌 151
15．2　牌堆 153
15．3　玩家 154
15．4　游戏 155
15．5　战争 157
第三部分　编程工具简介
第 16章　Bash 163
16．1　跟随练习 163
16．2　找到Bash 164
16．3　命令 164
16．4　最近命令 165
16．5　相对路径与绝对路径 165
16．6　导航 166
16．7　旗标 168
16．8　隐藏文件 169
16．9　管道 169
16．10　环境变量 169
16．11　用户 170
16．12　了解更多 171
16．13　术语表 171
16．14　挑战练习 172
第 17章　正则表达式 173
17．1　初始配置 173
17．2　简单匹配 174
17．3　匹配起始位置 176
17．4　匹配多个字符 177
17．5　匹配数字 178
17．6　重复 179
17．7　转义 181
17．8　正则工具 182
17．9　术语表 182
17．10　挑战练习 183
第 18章　包管理器 185
18．1　包 185
18．2　pip 185
18．3　虚拟环境 188
18．4　术语表 188
18．5　挑战练习 188
第 19章　版本控制 189
19．1　代码仓库 189
19．2　入门 190
19．3　推送和拉取 191
19．4　推送示例 192
19．5　拉取示例 195
19．6　回退版本 195
19．7　diff 196
19．8　下一步 197
19．9　术语表 197
19．10　挑战练习 198
第 20章　融会贯通 199
20．1　HTML 199
20．2　爬取Google新闻 200
20．3　术语表 204
20．4　挑战练习 204
第四部分　计算机科学简介
第 21章　数据结构 207
21．1　数据结构 207
21．2　栈 207
21．3　使用栈逆转字符串 210
21．4　队列 211
21．5　购票队列 213
21．6　术语表 215
21．7　挑战练习 216
第 22章　算法 217
22．1　FizzBuzz 217
22．2　顺序搜索 218
22．3　回文词 219
22．4　变位词 220
22．5　计算字母频数 220
22．6　递归 221
22．7　术语表 223
22．8　挑战练习 224
第五部分　找到工作
第 23章　最佳编程实践 227
23．1　写代码是最后的手段 227
23．2　DRY 227
23．3　正交性 227
23．4　每个数据都只应保存在
一处 228
23．5　函数只做一件事 228
23．6　若耗费时间过长，你的做法
很可能就是错的 228
23．7　第 一次就要用最佳的方法
完成 228
23．8　遵循惯例 229
23．9　使用强大的IDE 229
23．10　记录日志 230
23．11　测试 230
23．12　代码审查 230
23．13　安全 231
23．14　术语表 232
第 24章　第 一份编程工作 233
24．1　选择方向 233
24．2　积累初期经验 234
24．3　拿到面试机会 234
24．4　面试 234
24．5　面试技巧 235
第 25章　团队协作 237
25．1　掌握基础 237
25．2　提问前请先搜索 237
25．3　修改代码 238
25．4　冒名顶替综合征 238
第 26章　更多学习资料 239
26．1　经典书籍 239
26．2　在线课堂 239
26．3　骇客新闻 240
第 27章　下一步 241
27．1　找到导师 241
27．2　加深理解 241
27．3　其他建议 242
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python编程无师自通
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python编程基础
第一章 Python入门
1 Python特点
2 Python的安装
3 Python的运行
第二章 Python的数据类型
1 程序输入输出与注释
2 基本操作符
3 赋值与表达式
4 数字类型
……
第三章 Python的程序结构
第四章 面向对象特性
第五章 Tkinter
第六章 正则表达式
……
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python编程基础
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>对比Excel，轻松学习Python数据分析
入门篇
第1章数据分析基础.............................................................................................2
1.1数据分析是什么............................................................................................2
1.2为什么要做数据分析....................................................................................2
1.2.1现状分析.............................................................................................3
1.2.2原因分析.............................................................................................3
1.2.3预测分析.............................................................................................3
1.3数据分析究竟在分析什么............................................................................4
1.3.1总体概览指标.....................................................................................4
1.3.2对比性指标.........................................................................................4
1.3.3集中趋势指标.....................................................................................4
1.3.4离散程度指标.....................................................................................5
1.3.5相关性指标.........................................................................................5
1.3.6相关关系与因果关系.........................................................................6
1.4数据分析的常规流程....................................................................................6
1.4.1熟悉工具.............................................................................................6
1.4.2明确目的.............................................................................................7
1.4.3获取数据.............................................................................................7
1.4.4熟悉数据.............................................................................................7
1.4.5处理数据.............................................................................................7
1.4.6分析数据.............................................................................................8
1.4.7得出结论.............................................................................................8
1.4.8验证结论.............................................................................................8
1.4.9展示结论.............................................................................................8
1.5数据分析工具：Excel与Python..................................................................8
实践篇
第2章熟悉锅——Python基础知识.....................................................................12
2.1Python是什么..............................................................................................12
2.2Python的下载与安装..................................................................................13
2.2.1安装教程...........................................................................................13
2.2.2IDE与IDLE.....................................................................................17
2.3介绍JupyterNotebook................................................................................17
2.3.1新建JupyterNotebook文件............................................................17
2.3.2运行你的第一段代码.......................................................................19
2.3.3重命名JupyterNotebook文件........................................................19
2.3.4保存JupyterNotebook文件............................................................19
2.3.5导入本地JupyterNotebook文件....................................................20
2.3.6JupyterNotebook与Markdown.......................................................21
2.3.7为JupyterNotebook添加目录........................................................21
2.4基本概念......................................................................................................26
2.4.1数.......................................................................................................26
2.4.2变量...................................................................................................26
2.4.3标识符...............................................................................................27
2.4.4数据类型...........................................................................................28
2.4.5输出与输出格式设置.......................................................................28
2.4.6缩进与注释.......................................................................................29
2.5字符串..........................................................................................................30
2.5.1字符串的概念...................................................................................30
2.5.2字符串的连接...................................................................................30
2.5.3字符串的复制...................................................................................30
2.5.4获取字符串的长度...........................................................................30
2.5.5字符串查找.......................................................................................31
2.5.6字符串索引.......................................................................................31
2.5.7字符串分隔.......................................................................................32
2.5.8移除字符...........................................................................................32
2.6数据结构——列表......................................................................................33
2.6.1列表的概念.......................................................................................33
2.6.2新建一个列表...................................................................................33
2.6.3列表的复制.......................................................................................34
2.6.4列表的合并.......................................................................................34
2.6.5向列表中插入新元素.......................................................................34
2.6.6获取列表中值出现的次数...............................................................35
2.6.7获取列表中值出现的位置...............................................................35
2.6.8获取列表中指定位置的值...............................................................36
2.6.9删除列表中的值...............................................................................36
2.6.10对列表中的值进行排序.................................................................37
2.7数据结构——字典......................................................................................37
2.7.1字典的概念.......................................................................................37
2.7.2新建一个字典...................................................................................37
2.7.3字典的keys()、values()和items()方法...........................................37
2.8数据结构——元组......................................................................................38
2.8.1元组的概念.......................................................................................38
2.8.2新建一个元组...................................................................................38
2.8.3获取元组的长度...............................................................................38
2.8.4获取元组内的元素...........................................................................39
2.8.5元组与列表相互转换.......................................................................39
2.8.6zip()函数...........................................................................................39
2.9运算符..........................................................................................................40
2.9.1算术运算符.......................................................................................40
2.9.2比较运算符.......................................................................................40
2.9.3逻辑运算符.......................................................................................41
2.10循环语句....................................................................................................41
2.10.1for循环...........................................................................................41
2.10.2while循环.......................................................................................42
2.11条件语句....................................................................................................43
2.11.1if语句.............................................................................................43
2.11.2else语句..........................................................................................44
2.11.3elif语句..........................................................................................45
2.12函数............................................................................................................46
2.12.1普通函数.........................................................................................47
2.12.2匿名函数.........................................................................................48
2.13高级特性....................................................................................................49
2.13.1列表生成式.....................................................................................49
2.13.2map函数.........................................................................................50
2.14模块............................................................................................................50
第3章Pandas数据结构.....................................................................................51
3.1Series数据结构...........................................................................................51
3.1.1Series是什么....................................................................................51
3.1.2创建一个Series................................................................................52
3.1.3利用index方法获取Series的索引................................................53
3.1.4利用values方法获取Series的值...................................................53
3.2DataFrame表格型数据结构.......................................................................53
3.2.1DataFrame是什么............................................................................53
3.2.2创建一个DataFrame........................................................................54
3.2.3获取DataFrame的行、列索引.......................................................56
3.2.4获取DataFrame的值.......................................................................56
第4章准备食材——获取数据源..........................................................................57
4.1导入外部数据..............................................................................................57
4.1.1导入.xlsx文件..................................................................................57
4.1.2导入.csv文件...................................................................................60
4.1.3导入.txt文件....................................................................................63
4.1.4导入sql文件....................................................................................65
4.2新建数据......................................................................................................67
4.3熟悉数据......................................................................................................67
4.3.1利用head预览前几行.....................................................................67
4.3.2利用shape获取数据表的大小........................................................68
4.3.3利用info获取数据类型..................................................................69
4.3.4利用describe获取数值分布情况....................................................71
第5章淘米洗菜——数据预处理..........................................................................73
5.1缺失值处理..................................................................................................73
5.1.1缺失值查看.......................................................................................73
5.1.2缺失值删除.......................................................................................75
5.1.3缺失值填充.......................................................................................77
5.2重复值处理..................................................................................................78
5.3异常值的检测与处理..................................................................................81
5.3.1异常值检测.......................................................................................81
5.3.2异常值处理.......................................................................................82
5.4数据类型转换..............................................................................................83
5.4.1数据类型...........................................................................................83
5.4.2类型转换...........................................................................................84
5.5索引设置......................................................................................................86
5.5.1为无索引表添加索引.......................................................................86
5.5.2重新设置索引...................................................................................87
5.5.3重命名索引.......................................................................................88
5.5.4重置索引...........................................................................................89
第6章菜品挑选——数据选择.............................................................................91
6.1列选择..........................................................................................................91
6.1.1选择某一列/某几列..........................................................................91
6.1.2选择连续的某几列...........................................................................92
6.2行选择..........................................................................................................93
6.2.1选择某一行/某几行..........................................................................93
6.2.2选择连续的某几行...........................................................................94
6.2.3选择满足条件的行...........................................................................95
6.3行列同时选择..............................................................................................96
6.3.1普通索引+普通索引选择指定的行和列.........................................97
6.3.2位置索引+位置索引选择指定的行和列.........................................97
6.3.3布尔索引+普通索引选择指定的行和列.........................................98
6.3.4切片索引+切片索引选择指定的行和列.........................................98
6.3.5切片索引+普通索引选择指定的行和列.........................................99
第7章切配菜品——数值操作...........................................................................100
7.1数值替换....................................................................................................100
7.1.1一对一替换.....................................................................................100
7.1.2多对一替换.....................................................................................102
7.1.3多对多替换.....................................................................................103
7.2数值排序....................................................................................................104
7.2.1按照一列数值进行排序.................................................................104
7.2.2按照有缺失值的列进行排序.........................................................106
7.2.3按照多列数值进行排序.................................................................106
7.3数值排名....................................................................................................108
7.4数值删除.....................................................................................................110
7.4.1删除列..............................................................................................110
7.4.2删除行..............................................................................................111
7.4.3删除特定行......................................................................................112
7.5数值计数.....................................................................................................113
7.6唯一值获取.................................................................................................114
7.7数值查找.....................................................................................................115
7.8区间切分.....................................................................................................116
7.9插入新的行或列.........................................................................................119
7.10行列互换..................................................................................................120
7.11索引重塑..................................................................................................121
7.12长宽表转换..............................................................................................122
7.12.1宽表转换为长表...........................................................................123
7.12.2长表转换为宽表...........................................................................125
7.13apply()与applymap()函数.......................................................................126
第8章开始烹调——数据运算...........................................................................127
8.1算术运算....................................................................................................127
8.2比较运算....................................................................................................128
8.3汇总运算....................................................................................................129
8.3.1count非空值计数...........................................................................129
8.3.2sum求和.........................................................................................130
8.3.3mean求均值...................................................................................130
8.3.4max求最大值.................................................................................131
8.3.5min求最小值.................................................................................132
8.3.6median求中位数............................................................................132
8.3.7mode求众数...................................................................................133
8.3.8var求方差.......................................................................................134
8.3.9std求标准差...................................................................................134
8.3.10quantile求分位数.........................................................................135
8.4相关性运算................................................................................................136
第9章炒菜计时器——时间序列........................................................................138
9.1获取当前时刻的时间................................................................................138
9.1.1返回当前时刻的日期和时间.........................................................138
9.1.2分别返回当前时刻的年、月、日.................................................138
9.1.3返回当前时刻的周数.....................................................................139
9.2指定日期和时间的格式............................................................................140
9.3字符串和时间格式相互转换....................................................................141
9.3.1将时间格式转换为字符串格式.....................................................141
9.3.2将字符串格式转换为时间格式.....................................................141
9.4时间索引....................................................................................................142
9.5时间运算....................................................................................................145
9.5.1两个时间之差.................................................................................145
9.5.2时间偏移.........................................................................................145
第10章菜品分类——数据分组/数据透视表......................................................148
10.1数据分组..................................................................................................148
10.1.1分组键是列名...............................................................................150
10.1.2分组键是Series............................................................................151
10.1.3神奇的aggregate方法.................................................................152
10.1.4对分组后的结果重置索引...........................................................153
10.2数据透视表..............................................................................................154
第11章水果拼盘——多表拼接.........................................................................158
11.1表的横向拼接..........................................................................................158
11.1.1连接表的类型...............................................................................158
11.1.2连接键的类型...............................................................................160
11.1.3连接方式.......................................................................................163
11.1.4重复列名处理...............................................................................165
11.2表的纵向拼接..........................................................................................165
11.2.1普通合并.......................................................................................166
11.2.2索引设置.......................................................................................167
11.2.3重叠数据合并...............................................................................167
第12章盛菜装盘——结果导出.........................................................................169
12.1导出为.xlsx文件.....................................................................................169
12.1.1设置文件导出路径.......................................................................170
12.1.2设置Sheet名称............................................................................170
12.1.3设置索引.......................................................................................170
12.1.4设置要导出的列...........................................................................171
12.1.5设置编码格式...............................................................................171
12.1.6缺失值处理...................................................................................172
12.1.7无穷值处理...................................................................................172
12.2导出为.csv文件.......................................................................................173
12.2.1设置文件导出路径.......................................................................173
12.2.2设置索引.......................................................................................174
12.2.3设置要导出的列...........................................................................174
12.2.4设置分隔符号...............................................................................174
12.2.5缺失值处理...................................................................................174
12.2.6设置编码格式...............................................................................175
12.3将文件导出到多个Sheet........................................................................175
第13章菜品摆放——数据可视化......................................................................176
13.1数据可视化是什么..................................................................................176
13.2数据可视化的基本流程..........................................................................176
13.2.1整理数据.......................................................................................176
13.2.2明确目的.......................................................................................177
13.2.3寻找合适的表现形式...................................................................177
13.3图表的基本组成元素..............................................................................177
13.4Excel与Python可视化...........................................................................179
13.5建立画布和坐标系..................................................................................179
13.5.1建立画布.......................................................................................179
13.5.2用add_subplot函数建立坐标系.................................................180
13.5.3用plt.subplot2grid函数建立坐标系............................................182
13.5.4用plt.subplot函数建立坐标系....................................................183
13.5.5用plt.subplots函数建立坐标系..................................................184
13.5.6几种创建坐标系方法的区别.......................................................185
13.6设置坐标轴..............................................................................................185
13.6.1设置坐标轴的标题.......................................................................185
13.6.2设置坐标轴的刻度.......................................................................187
13.6.3设置坐标轴的范围.......................................................................190
13.6.4坐标轴的轴显示设置...................................................................191
13.7其他图表格式的设置..............................................................................191
13.7.1网格线设置...................................................................................191
13.7.2设置图例.......................................................................................193
13.7.3图表标题设置...............................................................................195
13.7.4设置数据标签...............................................................................197
13.7.5图表注释.......................................................................................198
13.7.6数据表...........................................................................................199
13.8绘制常用图表..........................................................................................201
13.8.1绘制折线图...................................................................................201
13.8.2绘制柱形图...................................................................................204
13.8.3绘制条形图...................................................................................208
13.8.4绘制散点图...................................................................................209
13.8.5绘制气泡图....................................................................................211
13.8.6绘制面积图...................................................................................212
13.8.7绘制树地图...................................................................................213
13.8.8绘制雷达图...................................................................................215
13.8.9绘制箱形图...................................................................................217
13.8.10绘制饼图.....................................................................................218
13.8.11绘制圆环图.................................................................................220
13.8.12绘制热力图.................................................................................221
13.8.13绘制水平线和垂直线.................................................................223
13.9绘制组合图表..........................................................................................224
13.9.1折线图+折线图............................................................................224
13.9.2折线图+柱形图............................................................................225
13.10绘制双坐标轴图表................................................................................226
13.10.1绘制双y轴图表.........................................................................227
13.10.2绘制双x轴图表.........................................................................228
13.11绘图样式设置........................................................................................228
进阶篇
第14章典型数据分析案例................................................................................234
14.1利用Python实现报表自动化.................................................................234
14.1.1为什么要进行报表自动化...........................................................234
14.1.2什么样的报表适合自动化...........................................................234
14.1.3如何实现报表自动化...................................................................235
14.2自动发送电子邮件..................................................................................239
14.3假如你是某连锁超市的数据分析师......................................................241
14.3.1哪些类别的商品比较畅销...........................................................242
14.3.2哪些商品比较畅销.......................................................................242
14.3.3不同门店的销售额占比...............................................................243
14.3.4哪些时间段是超市的客流高峰期...............................................244
14.4假如你是某银行的数据分析师..............................................................245
14.4.1是不是收入越高的人坏账率越低...............................................246
14.4.2年龄和坏账率有什么关系...........................................................247
14.4.3家庭人口数量和坏账率有什么关系...........................................248
第15章NumPy数组.........................................................................................250
15.1NumPy简介.............................................................................................250
15.2NumPy数组的生成.................................................................................250
15.2.1生成一般数组...............................................................................251
15.2.2生成特殊类型数组.......................................................................251
15.2.3生成随机数组...............................................................................253
15.3NumPy数组的基本属性.........................................................................255
15.4NumPy数组的数据选取.........................................................................256
15.4.1一维数据选取...............................................................................256
15.4.2多维数据选取...............................................................................257
15.5NumPy数组的数据预处理.....................................................................259
15.5.1NumPy数组的类型转换..............................................................259
15.5.2NumPy数组的缺失值处理..........................................................260
15.5.3NumPy数组的重复值处理..........................................................260
15.6NumPy数组重塑.....................................................................................261
15.6.1一维数组重塑...............................................................................261
15.6.2多维数组重塑...............................................................................261
15.6.3数组转置.......................................................................................262
15.7NumPy数组合并.....................................................................................262
15.7.1横向合并.......................................................................................262
15.7.2纵向合并.......................................................................................263
15.8常用数据分析函数..................................................................................264
15.8.1元素级函数...................................................................................264
15.8.2描述统计函数...............................................................................264
15.8.3条件函数.......................................................................................266
15.8.4集合关系.......................................................................................266
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>对比Excel，轻松学习Python数据分析
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python和Pygame游戏开发指南
作者简介
版权声明
内容提要
前言
第1章　安装Python和Pygame
第2章 Pygame基础知识
第3章 Memory Puzzle游戏
第4章 Slide Puzzle
第5章　Simulate
第6章　Wormy
第7章　Tetromino
第8章　Squirrel Eat Squirrel
第9章　Star Pusher
第10章　4款其他游戏
术语表
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python和Pygame游戏开发指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python项目开发实战
目    录
第1章  Python核心知识回顾	1
1.1  探索Python语言和解释器	1
1.2  回顾Python数据类型	3
1.2.1  数值类型：整数和浮点数	4
1.2.2  布尔类型	5
1.2.3  None类型	6
1.2.4  容器类型	6
1.2.5  字符串	7
1.2.6  字节和字节数组	9
1.2.7  元组	10
1.2.8  列表	11
1.2.9  字典	12
1.2.10  集	13
1.3  使用Python控制结构	15
1.3.1  结构化你的程序	15
1.3.2  使用序列、块和注释	16
1.3.3  选择一个执行路径	17
1.3.4  迭代	18
1.3.5  异常处理	20
1.3.6  上下文管理	21
1.4  在Python中读取和输出数据	21
1.4.1  与用户交互	21
1.4.2  使用文本文件	23
1.5  扩展Python	24
1.5.1  定义并使用函数	24
1.5.2  定义并使用类和对象	28
1.6  创建和使用模块和包	32
1.6.1  使用和创建模块	33
1.6.2  使用和创建包	34
1.7  创建示例包	35
1.8  使用第三方包	42
1.9  本章小结	43
第2章  Python脚本	47
2.1  访问操作系统	48
2.1.1  获得关于用户和他们的电脑的信息	49
2.1.2  获得当前进程信息	52
2.1.3  管理其他程序	54
2.1.4  更加高效地管理子进程	57
2.1.5  获取文件(和设备)的信息	60
2.1.6  浏览和操纵文件系统	62
2.1.7  探索目录树深度	68
2.2  使用日期和时间	71
2.2.1  使用time模块	71
2.2.2  datetime模块介绍	74
2.2.3  calendar模块介绍	75
2.3  处理常见的文件格式	76
2.3.1  使用逗号分隔的数值	76
2.3.2  使用Config文件	82
2.3.3  操作XML和HTML文件	85
2.4  使用ctypes和pywin32访问原生API	93
2.4.1  访问操作系统库	94
2.4.2  使用COM访问Windows应用	96
2.5  涉及多应用的自动化任务	97
2.5.1  使用Python	98
2.5.2  使用操作系统工具	98
2.5.3  使用数据文件	98
2.5.4  使用第三方模块	98
2.5.5  通过命令行接口与子进程交互	99
2.5.6  为基于服务器的应用使用Web服务	99
2.5.7  使用一个原生代码API	99
2.5.8  使用GUI机器人学	99
2.6  本章小结	100
第3章  管理数据	103
3.1  使用Python存储数据	104
3.1.1  使用DBM作为持久化字典	104
3.1.2  使用Pickle存取对象	109
3.1.3  使用shelve访问对象	111
3.2  使用Python分析数据	116
3.2.1  使用Python的内置特性分析数据	116
3.2.2  使用itertools分析数据	119
3.2.3  使用itertools分析LendyDB数据	124
3.3  使用SQL管理数据	126
3.3.1  关系型数据库的概念	126
3.3.2  结构化查询语言	127
3.3.3  跨表链接数据	134
3.3.4  多对多关系	140
3.4  从LendyDB迁移到SQL
数据库	143
3.4.1  从Python访问SQL	143
3.4.2  创建LendyDB SQL数据库	145
3.4.3  插入测试数据	146
3.4.4  创建一个LendyDB API	148
3.5  探索其他数据管理选择	154
3.5.1  主从数据库	154
3.5.2  NoSQL	155
3.5.3  云计算	155
3.5.4  使用RPy进行数据分析	156
3.6  本章小结	157
第4章  创建桌面应用	161
4.1  组织应用程序	162
4.2  创建命令行界面	163
4.2.1  创建数据层	163
4.2.2  创建核心逻辑层	165
4.2.3  创建用户界面	169
4.3  使用cmd模块创建命令行界面	173
4.4  读取命令行参数	175
4.5  用一些对话框让命令行界面变得生动	176
4.6  使用Tkinter编程GUI	180
4.7  创建简单的GUI	183
4.8  创建Tic-Tac-Toe GUI	186
4.8.1  勾勒一个UI设计	186
4.8.2  创建菜单	187
4.8.3  创建Tic-Tac-Toe面板	188
4.8.4  将GUI连接到游戏	189
4.9  扩展Tkinter	194
4.9.1  使用tix	194
4.9.2  使用ttk	198
4.10  再次回顾借出库	199
4.11  探索其他Python GUI工具包	207
4.11.1  wxPython	207
4.11.2  PyQt	208
4.11.3  PyGTK	209
4.11.4  原生GUI：Cocoa和PyWin32	209
4.11.5  Dabo	210
4.12  存储本地数据	210
4.12.1  存储特定于应用的数据	211
4.12.2  存储用户选择偏好	211
4.12.3  存储应用状态	212
4.12.4  记录错误信息	212
4.13  理解本地化	214
4.13.1  使用区域设置	214
4.13.2  在Python中使用Unicode	216
4.13.3  使用gettext	218
4.14  本章小结	220
第5章  Python在Web中的应用	223
5.1  Python在Web中的应用	224
5.1.1  Web应用的组成部分	225
5.1.2  客户端-服务器关系	226
5.1.3  中间件和MVC	226
5.1.4  HTTP方法和头信息	227
5.1.5  什么是API	230
5.2  使用Python进行Web编程	234
5.3  有关Python和Web的更多知识	247
5.3.1  静态网站生成器	247
5.3.2  Web框架	247
5.4  使用Python跨网工作	248
5.4.1  XML-RPC	248
5.4.2  套接字服务器	249
5.5  更多Python网络编程的乐趣	252
5.6  本章小结	253
第6章  Python在更大项目中的应用	255
6.1  使用doctest模块测试	256
6.2  使用unittest模块测试	261
6.3  Python中的测试驱动开发	265
6.4  调试Python代码	266
6.5  工作在更大的Python项目中	275
6.6  发布Python包	279
6.7  本章小结	281
第7章  探索Python前沿技术	283
7.1  使用Python绘图	283
7.1.1  使用turtle graphics	284
7.1.2  使用GUI Canvas对象	284
7.1.3  绘制数据	284
7.1.4  使用imghdr	285
7.1.5  Pillow简介	285
7.1.6  试试ImageMagick	285
7.2  使用Python辅助科学	286
7.2.1  SciPy简介	286
7.2.2  使用Python辅助生物科学	287
7.2.3  使用GIS	287
7.2.4  处理语言	287
7.2.5  综述	288
7.3  使用Python开发游戏	288
7.3.1  增强PyGame经验	288
7.3.2  探索其他选项	289
7.4  进入电影领域	289
7.5  与其他语言集成	290
7.5.1  Jython	291
7.5.2  IronPython	291
7.5.3  Cython	292
7.5.4  Tcl/Tk	292
7.6  进入物理领域	293
7.6.1  serial选项介绍	293
7.6.2  RaspberryPi编程	294
7.6.3  与Arduino对话	294
7.6.4  探索其他选项	294
7.7  创建Python	295
7.7.1  修复bug	295
7.7.2  文档化	295
7.7.3  测试	295
7.7.4  添加特性	296
7.7.5  参加会议	296
7.8  本章小结	296
附录A  练习答案	299
附录B  Python标准模块	315
附录C  可用Python资源	323

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python项目开发实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>跟老齐学Python：Django实战
第1章 简单的博客系统	1
1.1 Django起步	1
1.1.1 Django简介	1
1.1.2 安装Django	3
1.1.3 创建项目	4
1.1.4 创建应用	6
1.1.5 网站配置	11
1.1.6 知识点	12
1.2 编写博客的数据模型类	12
1.2.1 数据模型类	13
1.2.2 发布博客文章	17
1.2.3 知识点	21
1.3 显示博客信息	23
1.3.1 显示文章标题	24
1.3.2 查看文章内容	28
1.3.3 知识点	32
第2章 用户管理	35
2.1 自定义模板和静态文件位置	35
2.1.1 自定义模板位置	36
2.1.2 自定义静态文件位置	36
2.1.3 通用静态文件和基础模板	37
2.1.4 重置管理后台模板	40
2.1.5 知识点	42
2.2 用户登录	43
2.2.1 创建应用 44
2.2.2 理解表单类	45
2.2.3 登录的视图函数	47
2.2.4 登录的前端界面	49
2.2.5 知识点	53
2.3 用内置方法实现登录和退出	54
2.3.1 内置的登录方法	55
2.3.2 判断用户是否登录 58
2.3.3 内置的退出方法	59
2.3.4 知识点	60
2.4 用户注册	62
2.4.1 简单注册 62
2.4.2 增加注册内容	65
2.4.3 管理新增的注册内容	70
2.4.4 知识点	71
2.5 关于密码的操作	72
2.5.1 修改密码	73
2.5.2 重置密码	78
2.5.3 利用第三方应用重置密码	84
2.5.4 知识点	87
2.6 维护个人信息	88
2.6.1 个人信息的数据模型类和表单类	88
2.6.2 展示个人信息	90
2.6.3 编辑个人信息	93
2.6.4 上传和裁剪头像图片	97
2.6.5 优化头像上传功能	105
2.6.6 对个人信息进行管理	107
2.6.7 知识点	108
第3章 文章管理和展示	110
3.1 管理文章栏目	110
3.1.1 设置栏目	110
3.1.2 编辑栏目	118
3.1.3 删除栏目	120
3.1.4 知识点	122
3.2 发布和显示文章	125
3.2.1 简单的文章发布	126
3.2.2 使用Markdown	131
3.2.3 文章标题列表	133
3.2.4 知识点	140
3.3 删除和修改文章	141
3.3.1 删除	142
3.3.2 修改	143
3.3.3 设置分页功能	147
3.3.4 知识点	149
3.4 文章展示	151
3.4.1 新写文章标题列表	151
3.4.2 重新编写“查看文章”功能	155
3.4.3 知识点	156
第4章 拓展网站功能	158
4.1 梳理已有功能	158
4.1.1 修改导航栏	158
4.1.2 修改登录和注册后的跳转	159
4.1.3 知识点	161
4.2 查看作者全部文章	161
4.2.1 查看某作者的文章列表	162
4.2.2 知识点	165
4.3 为文章点赞	167
4.3.1 修改数据模型类	167
4.3.2 编写视图函数	168
4.3.3 修改模板文件	169
4.3.4 知识点	172
4.4 文章的阅读次数	173
4.4.1 安装Redis	174
4.4.2 在Python中使用Redis	175
4.4.3 记录阅读次数	176
4.4.4 显示最“热”文章	177
4.4.5 知识点	179
4.5 文章的评论功能	180
4.5.1 数据模型类和表单类	180
4.5.2 实现评论功能	181
4.5.3 知识点	184
4.6 多样化显示	185
4.6.1 统计文章总数	186
4.6.2 最新发布的文章	188
4.6.3 评论最多的文章	189
4.6.4 自定义模板选择器	192
4.6.5 知识点	193
4.7 管理和应用文章标签	195
4.7.1 管理文章标签	195
4.7.2 发布文章时选择标签	200
4.7.3 在文章中显示文章标签	202
4.7.4 推荐相似文章	202
4.7.5 知识点	204
第5章 收集和展示图片	206
5.1 收集网络图片	206
5.1.1 创建图片相关类	207
5.1.2 收集和管理图片	210
5.1.3 完善图片管理功能	214
5.1.4 知识点	218
5.2 展示图片	219
5.2.1 瀑布流方式展示图片	219
5.2.2 查看图片的详细信息	223
5.2.3 知识点	224
第6章 中场休整	226
第7章 创建在线学习应用	227
7.1 基于类的视图	227
7.1.1 最简类视图	228
7.1.2 读取数据	230
7.1.3 初步了解Mixin	232
7.1.4 知识点	233
7.2 管理课程标题	234
7.2.1 判断用户是否登录	235
7.2.2 创建课程	237
7.2.3 删除课程	239
7.2.4 知识点	243
7.3 发布和学习课程内容	245
7.3.1 课程内容的数据模型	246
7.3.2 课程内容的表单类	249
7.3.3 课程内容的视图	250
7.3.4 查看课程内容	252
7.3.5 注册学习课程	257
7.3.6 知识点	260
第8章 结束和开始	262
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>跟老齐学Python：Django实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python程序员指南
第一部分 利用Python编程
第1章 Python概述
第2章 安装并启动Python
第3章 Python语法
第4章 变量、运算符和表达式
第5章 Python数据结构
……
第二部分 wxPython程序设计
第12章 wxPython在Win32下编程
第三部分 Python的高级应用
第13章 Python和XML
第14章 Python中的Curses编程
第15章 Python中的TK编程
第四部分 附录
附录A 交互式输入编辑及代换过去的内容
附录B Python资源
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python程序员指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>XML与Perl、Python和PHP编程指南
第一部分 运用XML
第二部分 XML与Perl
第三部分 XML与Python
第四部分 XML与PHP
第五部分 XML与其他语言
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>XML与Perl、Python和PHP编程指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python袖珍指南
说明
本书约定
Python 命令行用法
Python 命令选项
命令行程序规范
Python 2. X 命令选项
Python 环境变量
操作变量
Python 命令选项变量
Python Windows 发送器用法
发送器文件指令
发送器命令行
发送器环境变量
内置类型和运算符
运算符和优先级
运算符用法说明
分类操作
序列运算说明
特殊内建类型
number （数字）
字符串
Unicode 字符串
列表
字典
元组
文件
集合
其他类型及转换
语句和语法
语法规则
命名规则
专用语句
赋值语句
Expression 语句
Print 语句
if 语句
while 语句
for 语句
pass 语句
break 语句
continue 语句
del 语句
def 语句
return 语句
yield 语句
global 语句
nonlocal 语句
import 语句
from 语句
class （类）语句
try 语句
raise 语句
assert 语句
with 语句
Python 2.X 语句
命名空间与范围规则
限定名：对象命名空间
非限定名: 词法作用域
嵌套范围与闭包
面向对象编程 类和实例
伪私有属性
新型类
形式继承规则
运算符重载方法 所有的类型方法
用于集合的方法（序列，映射）
数值方法（二元运算符）
数值方法（其他运算）
描述符方法
上下文管理器方法
Python 2.X 运算符重载方法
内建函数
Python 2.X 内建函数
内建异常超类：类型
专用异常
专门的OSError 异常
警告类异常
警告框架
Python 3.2内建异常
Python 2.X 内建异常
内建属性标准库模块
sys 模块
字符串模块函数与类
常数
os 系统模块
管理工具
可移植性常数
Shell 命令
环境工具
文件描述符工具
文件路径名工具
进程控制
Os.path 模块
re 模式匹配模块模块函数
正则表达式对象
匹配对象
模式的语法
对象持久化模块
shelve 和dbm 模块
pickle 模块
tkinter GUI 模块和工具
tkinter 示例
tkinter 的核心窗口控件
通用对话框调用
附加的tkinter 类和工具
Tcl/Tk 到Python/tkinter 的映射
Internet 模块和工具
其他标准库模块数学模块
时间模块
Timeit 模块
日期时间模块
random （随机）模块
json 模块
子进程模块
enum （枚举）模块
struct 模块
Threading （线程）模块
Python SQL 数据库API
API 用法实例
模块接口连接对象
指针对象
类型对象和构造函数
更多的提示和习语核心语言提示
环境提示
用法提示
分类提示
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python袖珍指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Effective Python 中文版
第1章　Pythonic 思維
第2章　函式
第3章　類別與繼承
第4章　元類別與屬性
第5章　共時與平行處理
第6章　內建模組
第7章　協作
第8章　推出產品
索引
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Effective Python 中文版
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据分析与数据化运营（第2版）
前言
第1章　Python和数据化运营1
1.1　用Python做数据化运营1
1.1.1　Python是什么1
1.1.2　数据化运营是什么2
1.1.3　Python用于数据化运营5
1.2　数据化运营所需的Python相关工具和组件5
1.2.1　Python程序6
1.2.2　Python交互环境Jupyter7
1.2.3　Python第三方库23
1.2.4　数据库和客户端29
1.2.5　SSH远程客户端30
1.3　内容延伸：Python的OCR和tensorflow31
1.3.1　OCR工具：Tesseract-ocr31
1.3.2　机器学习框架：TensorFlow31
1.4　第1个用Python实现的数据化运营分析实例、销售预测32
1.4.1　案例概述32
1.4.2　案例过程32
1.4.3　案例小结36
1.5　本章小结37
第2章　数据化运营的数据来源40
2.1　数据化运营的数据来源类型40
2.1.1　数据文件40
2.1.2　数据库41
2.1.3　API42
2.1.4　流式数据43
2.1.5　外部公开数据43
2.1.6　其他来源44
2.2　使用Python获取运营数据44
2.2.1　从文本文件读取运营数据44
2.2.2　从Excel获取运营数据55
2.2.3　从关系型数据库MySQL读取运营数据57
2.2.4　从非关系型数据库MongoDB读取运营数据64
2.2.5　从API获取运营数据68
2.3　内容延伸：读取非结构化网页、文本、图像、视频、语音72
2.3.1　从网页中获取运营数据72
2.3.2　读取非结构化文本数据73
2.3.3　读取图像数据74
2.3.4　读取视频数据78
2.3.5　读取语音数据81
2.4　本章小结85
第3章　10条数据化运营不得不知道的数据预处理经验87
3.1　数据清洗：缺失值、异常值和重复值的处理87
3.1.1　数据列缺失的4种处理方法87
3.1.2　不要轻易抛弃异常数据89
3.1.3　数据重复就需要去重吗90
3.1.4　代码实操：Python数据清洗92
3.2　将分类数据和顺序数据转换为标志变量100
3.2.1　分类数据和顺序数据是什么100
3.2.2　运用标志方法处理分类和顺序变量101
3.2.3　代码实操：Python标志转换101
3.3　大数据时代的数据降维104
3.3.1　需要数据降维的情况104
3.3.2　基于特征选择的降维105
3.3.3　基于特征转换的降维106
3.3.4　基于特征组合的降维112
3.3.5　代码实操：Python数据降维114
3.4　解决样本类别分布不均衡的问题123
3.4.1　哪些运营场景中容易出现样本不均衡124
3.4.2　通过过抽样和欠抽样解决样本不均衡124
3.4.3　通过正负样本的惩罚权重解决样本不均衡124
3.4.4　通过组合/集成方法解决样本不均衡125
3.4.5　通过特征选择解决样本不均衡125
3.4.6　代码实操：Python处理样本不均衡125
3.5　数据化运营要抽样还是全量数据128
3.5.1　什么时候需要抽样128
3.5.2　如何进行抽样129
3.5.3　抽样需要注意的几个问题130
3.5.4　代码实操：Python数据抽样131
3.6　解决运营数据的共线性问题135
3.6.1　如何检验共线性135
3.6.2　解决共线性的5种常用方法136
3.6.3　代码实操：Python处理共线性问题137
3.7　有关相关性分析的混沌139
3.7.1　相关和因果是一回事吗139
3.7.2　相关系数低就是不相关吗139
3.7.3　代码实操：Python相关性分析140
3.8　标准化，让运营数据落入相同的范围141
3.8.1　实现中心化和正态分布的Z-Score141
3.8.2　实现归一化的Max-Min142
3.8.3　用于稀疏数据的MaxAbs142
3.8.4　针对离群点的RobustScaler142
3.8.5　代码实操：Python数据标准化处理142
3.9　离散化，对运营数据做逻辑分层145
3.9.1　针对时间数据的离散化145
3.9.2　针对多值离散数据的离散化146
3.9.3　针对连续数据的离散化146
3.9.4　针对连续数据的二值化147
3.9.5　代码实操：Python数据离散化处理147
3.10　内容延伸：非结构化数据的预处理151
3.10.1　网页数据解析151
3.10.2　网络用户日志解析159
3.10.3　图像的基本预处理164
3.10.4　自然语言文本预处理169
3.11　本章小结172
第4章　跳过运营数据分析和挖掘的“大坑”174
4.1　聚类分析174
4.1.1　当心数据异常对聚类结果的影响175
4.1.2　超大数据量时应该放弃K均值算法175
4.1.3　聚类不仅是建模的终点，更是重要的中间预处理过程177
4.1.4　高维数据上无法应用聚类吗178
4.1.5　如何选择聚类分析算法179
4.1.6　案例：客户特征的聚类与探索性分析179
4.2　回归分析196
4.2.1　注意回归自变量之间的共线性问题197
4.2.2　相关系数、判定系数和回归系数之间是什么关系197
4.2.3　判定系数是否意味着相应的因果联系197
4.2.4　注意应用回归模型时研究自变量是否产生变化198
4.2.5　如何选择回归分析算法198
4.2.6　案例：大型促销活动前的销售预测199
4.3　分类分析206
4.3.1　防止分类模型的过拟合问题207
4.3.2　使用关联算法做分类分析207
4.3.3　用分类分析来提炼规则、提取变量、处理缺失值208
4.3.4　类别划分：分类算法和聚类算法都是好手209
4.3.5　如何选择分类分析算法210
4.3.6　案例：用户流失预测分析与应用210
4.4　关联分析221
4.4.1　频繁规则不一定是有效规则221
4.4.2　不要被啤酒尿布的故事禁锢你的思维222
4.4.3　被忽略的“负相关”模式真的毫无用武之地吗223
4.4.4　频繁规则只能打包组合应用吗224
4.4.5　关联规则的序列模式224
4.4.6　使用Python和R分别实现商品交叉销售分析225
4.5　异常检测分析240
4.5.1　异常检测中的“新奇检测”模式241
4.5.2　将数据异常与业务异常相分离241
4.5.3　面临维度灾难时，异常检测可能会失效241
4.5.4　异常检测的结果能说明异常吗241
4.5.5　案例：网站广告流量的异常识别与检测242
4.6　时间序列分析253
4.6.1　如果有自变量，为什么还要用时间序列253
4.6.2　时间序列不适合商业环境复杂的企业254
4.6.3　时间序列预测的整合、横向和纵向模式255
4.6.4　案例：未来10天的整体销售预测255
4.7　路径、漏斗、归因和热力图分析267
4.7.1　不要轻易相信用户的页面访问路径269
4.7.2　如何将路径应用于更多用户行为模式的挖掘270
4.7.3　为什么很多数据都显示了多渠道路径的价值很小271
4.7.4　点击热力图真的反映了用户的点击喜好吗271
4.7.5　为什么归因分析主要存在于线上的转化行为272
4.7.6　漏斗分析和路径分析有什么区别273
4.8　其他数据分析和挖掘的忠告274
4.8.1　不要忘记数据质量的验证274
4.8.2　不要忽视数据的落地性274
4.8.3　不要把数据陈列当作数据结论275
4.8.4　数据结论不要产生于单一指标276
4.8.5　数据分析不要预设价值立场276
4.8.6　不要忽视数据与业务的需求冲突问题277
4.9　内容延伸1：非结构化数据的分析与挖掘278
4.9.1　词频统计278
4.9.2　词性标注281
4.9.3　关键字提取284
4.9.4　文本聚类286
4.10　内容延伸2：AutoML—自动化数据挖掘与机器学习289
4.10.1　自动化数据挖掘与机器学习概述289
4.10.2　TPOT自动化学习简介290
4.10.3　使用TPOT做自动化学习292
4.11　本章小结298
第5章　会员数据化运营300
5.1　会员数据化运营概述300
5.2　会员数据化运营关键指标301
5.2.1　会员整体指标301
5.2.2　会员营销指标301
5.2.3　会员活跃度指标303
5.2.4　会员价值度指标305
5.2.5　会员终生价值指标305
5.2.6　会员异动指标306
5.3　会员数据化运营应用场景307
5.3.1　会员营销307
5.3.2　会员关怀307
5.4　会员数据化运营分析模型307
5.4.1　会员细分模型307
5.4.2　会员活跃度模型309
5.4.3　会员价值度模型309
5.4.4　会员流失预测模型310
5.4.5　会员特征分析模型311
5.4.6　营销响应预测模型312
5.5　会员数据化运营分析小技巧313
5.5.1　使用留存分析做新用户质量分析313
5.5.2　使用AARRR做App用户生命周期分析314
5.5.3　借助动态数据流关注会员状态的轮转315
5.5.4　使用协同过滤算法为新会员分析推送个性化信息316
5.6　会员数据化运营分析的“大实话”318
5.6.1　企业“不差钱”，还有必要做会员精准营销吗318
5.6.2　用户满意度取决于期望和给予的匹配程度319
5.6.3　用户不购买就是流失了吗319
5.6.4　来自调研问卷的用户信息可信吗320
5.6.5　不要盲目相信二八法则321
5.7　案例：基于RFM的精细化用户管理322
5.7.1　案例背景322
5.7.2　案例主要应用技术322
5.7.3　案例数据323
5.7.4　案例过程323
5.7.5　案例数据结论337
5.7.6　案例应用和部署341
5.7.7　案例注意点341
5.7.8　案例引申思考342
5.8　案例：基于嵌套Pipeline和Fea-tureUnion复合数据工作流的营销响应预测342
5.8.1　案例背景342
5.8.2　案例主要应用技术343
5.8.3　案例数据343
5.8.4　案例过程344
5.8.5　案例数据结论353
5.8.6　案例应用和部署353
5.8.7　案例注意点354
5.8.8　案例引申思考355
5.9　本章小结355
第6章　商品数据化运营357
6.1　商品数据化运营概述357
6.2　商品数据化运营关键指标357
6.2.1　销售指标357
6.2.2　促销活动指标360
6.2.3　供应链指标361
6.3　商品数据化运营应用场景363
6.3.1　销售预测363
6.3.2　库存分析363
6.3.3　市场分析363
6.3.4　促销分析364
6.4　商品数据化运营分析模型364
6.4.1　商品价格敏感度模型364
6.4.2　新产品市场定位模型365
6.4.3　销售预测模型366
6.4.4　商品关联销售模型367
6.4.5　异常订单检测368
6.4.6　商品规划的最优组合368
6.5　商品数据化运营分析小技巧370
6.5.1　使用层次分析法将定量与定性分析结合370
6.5.2　通过假设检验做促销拉动分析373
6.5.3　使用BCG矩阵做商品结构分析374
6.5.4　巧用4P分析建立完善的商品运营分析结构376
6.6　商品数据化运营分析的“大实话”376
6.6.1　为什么很多企业会以低于进价的价格大量销售商品376
6.6.2　促销活动真的是在促进商品销售吗378
6.6.3　用户关注的商品就是要买的商品吗379
6.6.4　提供的选择过多其实不利于商品销售380
6.7　案例：基于Gradient Boosting的自动超参数优化的销售预测381
6.7.1　案例背景381
6.7.2　案例主要应用技术381
6.7.3　案例数据381
6.7.4　案例过程382
6.7.5　案例数据结论389
6.7.6　案例应用和部署389
6.7.7　案例注意点389
6.7.8　案例引申思考389
6.8　案例：基于集成算法GBDT和RandomForest的投票组合模型的异常检测390
6.8.1　案例背景390
6.8.2　案例主要应用技术390
6.8.3　案例数据391
6.8.4　案例过程391
6.8.5　案例数据结论397
6.8.6　案例应用和部署398
6.8.7　案例注意点398
6.8.8　案例引申思考399
6.9　本章小结400
第7章　流量数据化运营402
7.1　流量数据化运营概述402
7.2　八大流量分析工具402
7.2.1　Adobe Analytics403
7.2.2　Webtrekk Suite403
7.2.3　Webtrends403
7.2.4　Google Analytics404
7.2.5　IBM Coremetrics404
7.2.6　百度统计404
7.2.7　Flurry404
7.2.8　友盟405
7.2.9　如何选择第三方流量分析工具405
7.3　流量采集分析系统的工作机制408
7.3.1　流量数据采集409
7.3.2　流量数据处理411
7.3.3　流量数据应用412
7.4　流量数据与企业数据的整合413
7.4.1　流量数据整合的意义413
7.4.2　流量数据整合的范畴414
7.4.3　流量数据整合的方法414
7.5　流量数据化运营指标415
7.5.1　站外营销推广指标415
7.5.2　网站流量数量指标417
7.5.3　网站流量质量指标418
7.6　流量数据化运营应用场景421
7.6.1　流量采购421
7.6.2　流量分发423
7.7　流量数据化运营分析模型423
7.7.1　流量波动检测423
7.7.2　渠道特征聚类425
7.7.3　广告整合传播模型425
7.7.4　流量预测模型428
7.8　流量数据化运营分析小技巧429
7.8.1　给老板提供一页纸的流量dashboard429
7.8.2　关注趋势、重要事件和潜在因素是日常报告的核心431
7.8.3　使用从细分到多层下钻数据分析431
7.8.4　通过跨屏追踪解决用户跨设备和浏览器的访问行为432
7.8.5　基于时间序列的用户群体过滤434
7.9　流量数据化运营分析的“大实话”436
7.9.1　流量数据分析的价值其实没那么大436
7.9.2　如何将流量的实时分析价值最大化437
7.9.3　营销流量的质量评估是难点工作438
7.9.4　个性化的媒体投放仍然面临很多问题438
7.9.5　传统的网站分析方法到底缺少了什么439
7.10　案例：基于自动节点树的数据异常原因下探分析444
7.10.1　案例背景444
7.10.2　案例主要应用技术444
7.10.3　案例数据445
7.10.4　案例过程446
7.10.5　案例数据结论459
7.10.6　案例应用和部署460
7.10.7　案例注意点460
7.10.8　案例引申思考461
7.11　案例：基于自动K值的KMeans广告效果聚类分析461
7.11.1　案例背景461
7.11.2　案例主要应用技术462
7.11.3　案例数据462
7.11.4　案例过程463
7.11.5　案例数据结论474
7.11.6　案例应用和部署475
7.11.7　案例注意点476
7.11.8　案例引申思考477
7.12　本章小结477
第8章　内容数据化运营480
8.1　内容数据化运营概述480
8.2　内容数据化运营指标481
8.2.1　内容质量指标481
8.2.2　SEO类指标481
8.2.3　内容流量指标482
8.2.4　内容互动指标482
8.2.5　目标转化指标483
8.3　内容数据化运营应用场景484
8.3.1　内容采集484
8.3.2　内容创作484
8.3.3　内容分发485
8.3.4　内容管理485
8.4　内容数据化运营分析模型485
8.4.1　情感分析模型485
8.4.2　搜索优化模型 486
8.4.3　文章关键字模型486
8.4.4　主题模型487
8.4.5　垃圾信息检测模型488
8.5　内容数据化运营分析小技巧488
8.5.1　通过AB测试和多变量测试找到最佳内容版本488
8.5.2　通过屏幕浏览占比了解用户到底看了页面多少内容490
8.5.3　通过数据分析系统与CMS打通实现个性化内容运营491
8.5.4　将个性化推荐从网站应用到App端494
8.6　内容数据化运营分析的“大实话”495
8.6.1　个性化内容运营不仅是整合CMS和数据系统495
8.6.2　用户在着陆页上不只有跳出和继续两种状态495
8.6.3　“人工组合”的内容运营价值最大化并非不能实现496
8.6.4　影响内容点击率的因素不仅有位置497
8.7　案例：基于潜在狄利克雷分配的内容主题挖掘498
8.7.1　案例背景498
8.7.2　案例主要应用技术498
8.7.3　案例数据498
8.7.4　案例过程498
8.7.5　案例数据结论506
8.7.6　案例应用和部署507
8.7.7　案例注意点507
8.7.8　案例引申思考508
8.8　案例：基于多项式贝叶斯的增量学习的文本分类508
8.8.1　案例背景508
8.8.2　案例主要应用技术508
8.8.3　案例数据509
8.8.4　案例过程509
8.8.5　案例数据结论517
8.8.6　案例应用和部署517
8.8.7　案例注意点517
8.8.8　案例引申思考517
8.9　本章小结518
第9章　数据化运营分析的终极秘籍520
9.1　撰写出彩的数据分析报告的5个建议520
9.1.1　完整的报告结构520
9.1.2　精致的页面版式521
9.1.3　漂亮的可视化图形523
9.1.4　突出报告的关键信息524
9.1.5　用报告对象习惯的方式撰写报告525
9.2　数据化运营支持的4种扩展方式526
9.2.1　数据API526
9.2.2　数据模型526
9.2.3　数据产品527
9.2.4　运营产品527
9.3　提升数据化运营价值度的5种途径528
9.3.1　数据源：不只有结构化的数据528
9.3.2　自动化：建立自动工作机制529
9.3.3　未卜先知：建立智能预警模型529
9.3.4　智能化：向BI-AI的方向走530
9.3.5　场景化：将数据嵌入运营环节之中531
9.4　本章小结531
附录533
附录A　公开数据集533
附录B　Python数据工具箱540
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据分析与数据化运营（第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入浅出深度学习：原理剖析与Python实践
第1 部分 概要  1
1 绪论  2
1.1 人工智能、机器学习与深度学习的关系  3
1.1.1 人工智能——机器推理  4
1.1.2 机器学习——数据驱动的科学  5
1.1.3 深度学习——大脑的仿真  8
1.2 深度学习的发展历程  8
1.3 深度学习技术概述  10
1.3.1 从低层到高层的特征抽象  11
1.3.2 让网络变得更深 13
1.3.3 自动特征提取 14
1.4 深度学习框架  15
2 Theano 基础  19
2.1 符号变量  20
2.2 符号计算的抽象——符号计算图模型  23
2.3 函数  26
2.3.1 函数的定义 26
2.3.2 Logistic回归  27
2.3.3 函数的复制 29
2.4 条件表达式  31
2.5 循环  32
2.6 共享变量  39
2.7 配置  39
2.7.1 通过THEANO_FLAGS配置 40
2.7.2 通过. theanorc文件配置  41
2.8 常用的Debug技巧  42
2.9 小结  43
第2 部分 数学与机器学习基础篇  45
3 线性代数基础  46
3.1 标量、向量、矩阵和张量  46
3.2 矩阵初等变换  47
3.3 线性相关与向量空间  48
3.4 范数  49
3.4.1 向量范数 49
3.4.2 矩阵范数 53
3.5 特殊的矩阵与向量  56
3.6 特征值分解  57
3.7 奇异值分解  58
3.8 迹运算 60
3.9 样例：主成分分析  61
4 概率统计基础  64
4.1 样本空间与随机变量  65
4.2 概率分布与分布函数  65
4.3 一维随机变量  66
4.3.1 离散型随机变量和分布律 66
4.3.2 连续型随机变量和概率密度函数 67
4.4 多维随机变量  68
4.4.1 离散型二维随机变量和联合分布律 69
4.4.2 连续型二维随机变量和联合密度函数 69
4.5 边缘分布  70
4.6 条件分布与链式法则  71
4.6.1 条件概率  71
4.6.2 链式法则  73
4.7 多维随机变量的独立性分析 73
4.7.1 边缘独立 74
4.7.2 条件独立 74
4.8 数学期望、方差、协方差  75
4.8.1 数学期望 75
4.8.2 方差 76
4.8.3 协方差 76
4.8.4 协方差矩阵 78
4.9 信息论基础  81
4.9.1 信息熵 81
4.9.2 条件熵 83
4.9.3 互信息 84
4.9.4 相对熵与交叉熵 84
5 概率图模型 87
5.1 生成模型与判别模型  89
5.2 图论基础  90
5.2.1 图的结构 90
5.2.2 子图 91
5.2.3 路径、迹、环与拓扑排序 92
5.3 贝叶斯网络  95
5.3.1 因子分解 96
5.3.2 局部马尔科夫独立性断言 99
5.3.3 I-Map与因子分解  100
5.3.4 有效迹  103
5.3.5 D-分离与全局马尔科夫独立性  108
5.4 马尔科夫网络  108
5.4.1 势函数因子与参数化表示  109
5.4.2 马尔科夫独立性  111
5.5 变量消除 114
5.6 信念传播 116
5.6.1 聚类图  116
5.6.2 团树  120
5.6.3 由变量消除构建团树  123
5.7 MCMC采样原理  126
5.7.1 随机采样  127
5.7.2 随机过程与马尔科夫链  128
5.7.3 MCMC采样  132
5.7.4 Gibbs采样 134
5.8 参数学习 137
5.8.1 最大似然估计  137
5.8.2 期望最大化算法  138
5.9 小结  140
6 机器学习基础  142
6.1 线性模型 143
6.1.1 线性回归  143
6.1.2 Logistic回归 148
6.1.3 广义的线性模型  150
6.2 支持向量机  151
6.2.1 最优间隔分类器  152
6.2.2 对偶问题  155
6.2.3 核函数  156
6.3 朴素贝叶斯  160
6.4 树模型  162
6.4.1 特征选择  163
6.4.2 剪枝策略  165
6.5 聚类  166
6.5.1 距离度量  167
6.5.2 层次聚类  168
6.5.3 K-means聚类  171
6.5.4 谱聚类  172
7 数值计算与最优化 177
7.1 无约束极小值的最优化条件  177
7.2 梯度下降 179
7.2.1 传统更新策略  181
7.2.2 动量更新策略  183
7.2.3 改进的动量更新策略  184
7.2.4 自适应梯度策略  187
7.3 共轭梯度 188
7.4 牛顿法  192
7.5 拟牛顿法 194
7.5.1 拟牛顿条件  194
7.5.2 DFP算法  195
7.5.3 BFGS算法  196
7.5.4 L-BFGS算法  197
7.6 约束最优化条件  200
第3 部分 理论与应用篇  205
8 前馈神经网络  206
8.1 生物神经元结构  207
8.2 人工神经元结构  208
8.3 单层感知机  209
8.4 多层感知机  212
8.5 激活函数 217
8.5.1 激活函数的作用  217
8.5.2 常用的激活函数  219
9 反向传播与梯度消失 225
9.1 经验风险最小化  227
9.2 梯度计算 228
9.2.1 输出层梯度  228
9.2.2 隐藏层梯度  230
9.2.3 参数梯度  234
9.3 反向传播 235
9.4 深度学习训练的难点 237
9.4.1 欠拟合——梯度消失  237
9.4.2 过拟合  240
10 自编码器及其相关模型  243
10.1 自编码器  243
10.2 降噪自编码器  245
10.3 栈式自编码器  247
10.4 稀疏编码器 250
10.5 应用：cifar10图像分类 254
11 玻尔兹曼机及其相关模型  258
11.1 玻尔兹曼机 258
11.2 能量模型  261
11.2.1 能量函数 261
11.2.2 从能量函数到势函数 262
11.2.3 从势函数到概率分布 263
11.3 推断  264
11.3.1 边缘分布 265
11.3.2 条件分布 267
11.4 学习  270
11.4.1 最大似然估计 271
11.4.2 对比散度 274
11.5 应用：个性化推荐  276
11.5.1 个性化推荐概述 276
11.5.2 个性化推荐架构与算法 279
11.5.3 RBM与协同过滤  285
12 递归神经网络  291
12.1 Elman递归神经网络  292
12.2 时间反向传播  295
12.3 长短时记忆网络  299
12.4 结构递归神经网络  302
12.5 应用：语言模型  308
12.5.1 N元统计模型 308
12.5.2 基于LSTM 构建语言模型  312
13 卷积神经网络  318
13.1 卷积运算  319
13.2 网络结构  320
13.3 卷积层  324
13.4 池化层  329
13.5 应用：文本分类  333
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入浅出深度学习：原理剖析与Python实践
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python经典实例
第 1 章 数字、字符串和元组 1
1.1 引言 1
1.2 创建有意义的名称和使用变量 2
1.3 使用大整数和小整数 5
1.4 在浮点数、小数和分数之间选择 8
1.5 在真除法和floor除法之间选择 13
1.6 重写不可变的字符串 15
1.7 使用正则表达式解析字符串 19
1.8 使用"template".format()构建复杂的字符串 22
1.9 通过字符列表构建复杂的字符串 25
1.10 使用键盘上没有的Unicode字符 27
1.11 编码字符串——创建ASCII和UTF-8字节 29
1.12 解码字节——如何根据字节获得正确的字符 31
1.13 使用元组 33
第 2 章 语句与语法 36
2.1 引言 36
2.2 编写Python脚本和模块文件——语法基础 37
2.3 编写长行代码 40
2.4 添加描述和文档 44
2.5 在文档字符串中编写RST标记 48
2.6 设计复杂的if…elif链 51
2.7 设计正确终止的while语句 54
2.8 避免break语句带来的潜在问题 58
2.9 利用异常匹配规则 61
2.10 避免except:子句带来的潜在问题 64
2.11 使用raise from语句链接异常 65
2.12 使用with语句管理上下文 67
第 3 章 函数定义 70
3.1 引言 70
3.2 使用可选参数设计函数 70
3.3 使用灵活的关键字参数 75
3.4 使用*分隔符强制使用关键字参数 77
3.5 编写显式的函数参数类型 80
3.6 基于偏函数选择参数顺序 84
3.7 使用RST标记编写清晰的文档字符串 87
3.8 围绕Python栈限制设计递归函数 91
3.9 根据脚本/库转换规则编写可重用脚本 94
第 4 章 内置数据结构——列表、集、字典 98
4.1 引言 98
4.2 选择数据结构 99
4.3 构建列表——字面量、append()和解析式 102
4.4 切片和分割列表 106
4.5 从列表中删除元素——del语句、remove()、pop()和filter() 109
4.6 反转列表的副本 114
4.7 使用set方法和运算符 116
4.8 从集中移除元素——remove()、pop()和差集 120
4.9 创建字典——插入和更新 122
4.10 从字典中移除元素——pop()方法和del语句 126
4.11 控制字典键的顺序 128
4.12 处理doctest示例中的字典和集 130
4.13 理解变量、引用和赋值 132
4.14 制作对象的浅副本和深副本 134
4.15 避免可变默认值作为函数参数 137
第 5 章 用户输入和输出 141
5.1 引言 141
5.2 使用print()函数的功能 141
5.3 使用input()和getpass()收集用户输入 145
5.4 使用"format".format_map(vars())进行调试 150
5.5 使用argparse模块获取命令行输入 151
5.6 使用cmd模块创建命令行应用程序 156
5.7 使用操作系统环境设置 161
第 6 章 类和对象的基础知识 165
6.1 引言 165
6.2 使用类封装数据和操作 166
6.3 设计操作类 169
6.4 设计数据类 174
6.5 使用__slots__优化对象 177
6.6 使用更复杂的集合 180
6.7 扩展集合——统计数据的列表 183
6.8 使用特性计算惰性属性 186
6.9 使用可设置的特性更新及早属性 190
第 7 章 高级类设计 195
7.1 引言 195
7.2 在继承和扩展之间选择——is-a问题 195
7.3 通过多重继承分离关注点 201
7.4 利用Python的鸭子类型 205
7.5 管理全局单例对象 208
7.6 使用更复杂的结构——列表映射 212
7.7 创建具有可排序对象的类 214
7.8 定义有序集合 218
7.9 从映射列表中删除元素 223
第 8 章 函数式编程和反应式编程 228
8.1 引言 228
8.2 使用yield语句编写生成器函数 229
8.3 使用生成器表达式栈 234
8.4 将转换应用于集合 241
8.5 选择子集——三种过滤方式 244
8.6 汇总集合——如何归约 248
8.7 组合映射和归约转换 252
8.8 实现there exists处理 257
8.9 创建偏函数 260
8.10 使用不可变数据结构简化复杂算法 265
8.11 使用yield from语句编写递归生成器函数 269
第 9 章 输入/输出、物理格式和逻辑布局 274
9.1 引言 274
9.2 使用pathlib模块处理文件名 275
9.3 使用上下文管理器读取和写入文件 281
9.4 替换文件，同时保留以前的版本 284
9.5 使用CSV模块读取带分隔符的文件 287
9.6 使用正则表达式读取复杂格式 291
9.7 读取JSON文档 295
9.8 读取XML文档 301
9.9 读取HTML文档 305
9.10 将CSV模块的DictReader更新为namedtuple读取器 310
9.11 将CSV模块的DictReader更新为namespace读取器 314
9.12 使用多个上下文读取和写入文件 317
第 10 章 统计编程和线性回归 322
10.1 引言 322
10.2 使用内置统计库 322
10.3 计算Counter对象中值的平均值 329
10.4 计算相关系数 332
10.5 计算回归参数 336
10.6 计算自相关 339
10.7 确认数据是随机的——零假设 344
10.8 查找异常值 348
10.9 通过一次遍历分析多个变量 353
第 11 章 测试 359
11.1 引言 359
11.2 使用文档字符串进行测试 360
11.3 测试抛出异常的函数 365
11.4 处理常见的doctest问题 368
11.5 创建单独的测试模块和包 372
11.6 组合unittest测试和doctest测试 378
11.7 涉及日期或时间的测试 381
11.8 涉及随机性的测试 385
11.9 模拟外部资源 388
第 12 章 Web服务 398
12.1 引言 398
12.2 使用WSGI实现Web服务 400
12.3 使用Flask框架实现RESTful API 408
12.4 解析请求中的查询字符串 414
12.5 使用urllib发送REST请求 418
12.6 解析URL路径 424
12.7 解析JSON请求 433
12.8 实施Web服务认证 441
第 13 章 应用程序集成 455
13.1 引言 455
13.2 查找配置文件 456
13.3 使用YAML编写配置文件 462
13.4 使用Python赋值语句编写配置文件 468
13.5 使用Python类定义编写配置文件 470
13.6 设计可组合的脚本 475
13.7 使用logging模块监控和审计输出 481
13.8 将两个应用程序组合为一个复合应用程序 488
13.9 使用命令设计模式组合多个应用程序 494
13.10 管理复合应用程序中的参数和配置 497
13.11 包装和组合CLI应用程序 501
13.12 包装程序并检查输出 506
13.13 控制复杂的步骤序列 509
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python经典实例
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python爬虫开发 从入门到实战（微课版）
第 1章　绪论　1
1.1　爬虫　2
1.2　爬虫可以做什么　2
1.2.1　收集数据　2
1.2.2　尽职调查　3
1.2.3　刷流量和秒杀　3
1.3　爬虫开发技术　4
第 2章　Python基础　5
2.1　Python的安装和运行　6
2.1.1　在Windows中安装Python　6
2.1.2　在Mac OS中安装Python　7
2.1.3　在Linux中安装Python　8
2.2　Python开发环境　8
2.2.1　PyCharm介绍与安装　8
2.2.2　运行代码　9
2.3　Python的数据结构和控制结构　12
2.3.1　整数、浮点数和变量　12
2.3.2　字符串、列表、元组　13
2.3.3　数据的读取　14
2.3.4　字典与集合　16
2.3.5　条件语句　17
2.3.6　for循环与while循环　19
2.4　函数与类　21
2.4.1　函数　21
2.4.2　类与面向对象编程　28
2.5　阶段案例——猜数游戏　32
2.5.1　需求分析　32
2.5.2　核心代码构建　33
2.5.3　调试与运行　33
2.6　本章小结　34
2.7　动手实践　34
第3章　正则表达式与文件操作　35
3.1　正则表达式　36
3.1.1　正则表达式的基本符号　36
3.1.2　在Python中使用正则表达式　38
3.1.3　正则表达式提取技巧　41
3.2　Python文件操作　44
3.2.1　使用Python读/写文本文件　44
3.2.2　使用Python读/写CSV文件　46
3.3　阶段案例——半自动爬虫开发　49
3.3.1　需求分析　49
3.3.2　核心代码构建　50
3.3.3　调试与运行　51
3.4　本章小结　54
3.5　动手实践　54
第4章　简单的网页爬虫开发　55
4.1　使用Python获取网页源代码　56
4.1.1　Python的第三方库　56
4.1.2　requests介绍与安装　56
4.1.3　使用requests获取网页源代码　57
4.1.4　结合requests与正则表达式　59
4.2　多线程爬虫　60
4.2.1　多进程库（multiprocessing）　60
4.2.2　开发多线程爬虫　61
4.3　爬虫的常见搜索算法　62
4.3.1　深度优先搜索　62
4.3.2　广度优先搜索　63
4.3.3　爬虫搜索算法的选择　64
4.4　阶段案例——小说网站爬虫开发　64
4.4.1　需求分析　64
4.4.2　核心代码构建　65
4.4.3　调试与运行　68
4.5　本章小结　68
4.6　动手实践　68
第5章　高性能HTML内容解析　69
5.1　HTML基础　70
5.2　XPath　71
5.2.1　XPath的介绍　71
5.2.2　lxml的安装　71
5.2.3　XPath语法讲解　73
5.2.4　使用Google Chrome浏览器辅助构造XPath　77
5.3　Beautiful Soup4　81
5.3.1　BS4的安装　81
5.3.2　BS4语法讲解　82
5.4　阶段案例——大麦网演出爬虫　85
5.4.1　需求分析　85
5.4.2　核心代码构建　85
5.4.3　调试与运行　86
5.5　本章小结　87
5.6　动手实践　87
第6章　Python与数据库　88
6.1　MongoDB　89
6.1.1　MongoDB的安装　89
6.1.2　PyMongo的安装与使用　94
6.1.3　使用RoboMongo执行MongoDB命令　101
6.2　Redis　102
6.2.1　环境搭建　102
6.2.2　Redis交互环境的使用　103
6.2.3　Redis-py　104
6.3　MongoDB的优化建议　105
6.3.1　少读少写少更新　105
6.3.2　能用Redis不用MongoDB　106
6.4　阶段案例　107
6.4.1　需求分析　107
6.4.2　核心代码构建　107
6.4.3　调试与运行　108
6.5　本章小结　108
6.6　动手实践　108
第7章　异步加载与请求头　109
7.1　异步加载　110
7.1.1　AJAX技术介绍　110
7.1.2　JSON介绍与应用　110
7.1.3　异步GET与POST请求　111
7.1.4　特殊的异步加载　113
7.1.5　多次请求的异步加载　114
7.1.6　基于异步加载的简单登录　117
7.2　请求头（Headers）　118
7.2.1　请求头的作用　118
7.2.2　伪造请求头　119
7.3　模拟浏览器　122
7.3.1　Selenium介绍　123
7.3.2　Selenium安装　124
7.3.3　Selenium的使用　124
7.4　阶段案例　128
7.4.1　需求分析　128
7.4.2　核心代码构建　128
7.4.3　调试与运行　130
7.5　本章小结　131
7.6　动手实践　131
第8章　模拟登录与验证码　132
8.1　模拟登录　133
8.1.1　使用Selenium模拟登录　133
8.1.2　使用Cookies登录　135
8.1.3　模拟表单登录　137
8.2　验证码　139
8.2.1　肉眼打码　139
8.2.2　自动打码　141
8.3　阶段案例——自动登录果壳网　144
8.3.1　需求分析　144
8.3.2　核心代码构建　145
8.3.3　运行与调试　146
8.4　本章小结　147
8.5　动手实践　147
第9章　抓包与中间人爬虫　148
9.1　数据抓包　149
9.1.1　Charles的介绍和使用　149
9.1.2　App爬虫和小程序爬虫　156
9.2　中间人爬虫　163
9.2.1　mitmproxy的介绍和安装　163
9.2.2　mitmproxy的使用　164
9.2.3　使用Python定制mitmproxy　165
9.3　阶段案例——Keep热门　170
9.3.1　需求分析　170
9.3.2　核心代码构建　170
9.3.3　调试运行　172
9.4　本章小结　172
9.5　动手实践　172
第 10章　Android原生App爬虫　173
10.1　实现原理　174
10.1.1　环境搭建　175
10.1.2　使用Python操纵手机　178
10.1.3　选择器　180
10.1.4　操作　181
10.2　综合应用　188
10.2.1　单设备应用　188
10.2.2　多设备应用（群控）　191
10.3　阶段案例——BOSS直聘爬虫　196
10.3.1　需求分析　196
10.3.2　核心代码构建　196
10.3.3　调试与运行　197
10.4　本章小结　197
10.5　动手实践　198
第 11章　Scrapy　199
11.1　Scrapy的安装　200
11.1.1　在Windows下安装Scrapy　200
11.1.2　在Linux下安装Scrapy　202
11.1.3　在Mac OS下安装Scrapy　202
11.2　Scrapy的使用　203
11.2.1　创建项目　203
11.2.2　在Scrapy中使用XPath　207
11.3　Scrapy与MongoDB　213
11.3.1　items和pipelines的设置　213
11.3.2　在Scrapy中使用MongoDB　215
11.4　Scrapy与Redis　218
11.4.1　Scrapy_redis的安装和使用　218
11.4.2　使用Redis缓存网页并自动去重　218
11.5　阶段案例——博客爬虫　220
11.5.1　需求分析　220
11.5.2　核心代码构建　221
11.5.3　调试与运行　226
11.6　本章小结　228
11.7　动手实践　228
第 12章　Scrapy应用　229
12.1　中间件（Middleware）　230
12.1.1　下载器中间件　230
12.1.2　爬虫中间件　242
12.2　爬虫的部署　246
12.2.1　Scrapyd介绍与使用　246
12.2.2　权限管理　253
12.3　分布式架构　258
12.3.1　分布式架构介绍　258
12.3.2　如何选择Master　259
12.4　阶段案例　259
12.5　本章小结　259
第 13章　爬虫开发中的法律和道德问题　260
13.1　法律问题　261
13.1.1　数据采集的法律问题　261
13.1.2　数据的使用　261
13.1.3　注册及登录可能导致的法律问题　261
13.1.4　数据存储　261
13.1.5　内幕交易　261
13.2　道德协议　262
13.2.1　robots.txt协议　262
13.2.2　爬取频率　262
13.2.3　不要开源爬虫的源代码　262
13.3　本章小结　262
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python爬虫开发 从入门到实战（微课版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python自然语言处理实战
序一
序二
前言
第1章 NLP基础 1
1.1 什么是NLP 1
1.1.1 NLP的概念 1
1.1.2 NLP的研究任务 3
1.2 NLP的发展历程 5
1.3 NLP相关知识的构成 7
1.3.1 基本术语 7
1.3.2 知识结构 9
1.4 语料库 10
1.5 探讨NLP的几个层面 11
1.6 NLP与人工智能 13
1.7 本章小结 15
第2章 NLP前置技术解析 16
2.1 搭建Python开发环境 16
2.1.1 Python的科学计算发行版——Anaconda 17
2.1.2 Anaconda的下载与安装 19
2.2 正则表达式在NLP的基本应用 21
2.2.1 匹配字符串 22
2.2.2 使用转义符 26
2.2.3 抽取文本中的数字 26
2.3 Numpy使用详解 27
2.3.1 创建数组 28
2.3.2 获取Numpy中数组的维度 30
2.3.3 获取本地数据 31
2.3.4 正确读取数据 32
2.3.5 Numpy数组索引 32
2.3.6 切片 33
2.3.7 数组比较 33
2.3.8 替代值 34
2.3.9 数据类型转换 36
2.3.10 Numpy的统计计算方法 36
2.4 本章小结 37
第3章 中文分词技术 38
3.1 中文分词简介 38
3.2 规则分词 39
3.2.1 正向最大匹配法 39
3.2.2 逆向最大匹配法 40
3.2.3 双向最大匹配法 41
3.3 统计分词 42
3.3.1 语言模型 43
3.3.2 HMM模型 44
3.3.3 其他统计分词算法 52
3.4 混合分词 52
3.5 中文分词工具——Jieba 53
3.5.1 Jieba的三种分词模式 54
3.5.2 实战之高频词提取 55
3.6 本章小结 58
第4章 词性标注与命名实体识别 59
4.1 词性标注 59
4.1.1 词性标注简介 59
4.1.2 词性标注规范 60
4.1.3 Jieba分词中的词性标注 61
4.2 命名实体识别 63
4.2.1 命名实体识别简介 63
4.2.2 基于条件随机场的命名实体识别 65
4.2.3 实战一：日期识别 69
4.2.4 实战二：地名识别 75
4.3 总结 84
第5章 关键词提取算法 85
5.1 关键词提取技术概述 85
5.2 关键词提取算法TF/IDF算法 86
5.3 TextRank算法 88
5.4 LSA/LSI/LDA算法 91
5.4.1 LSA/LSI算法 93
5.4.2 LDA算法 94
5.5 实战提取文本关键词 95
5.6 本章小结 105
第6章 句法分析 106
6.1 句法分析概述 106
6.2 句法分析的数据集与评测方法 107
6.2.1 句法分析的数据集 108
6.2.2 句法分析的评测方法 109
6.3 句法分析的常用方法 109
6.3.1 基于PCFG的句法分析 110
6.3.2 基于最大间隔马尔可夫网络的句法分析 112
6.3.3 基于CRF的句法分析 113
6.3.4 基于移进–归约的句法分析模型 113
6.4 使用Stanford Parser的PCFG算法进行句法分析 115
6.4.1 Stanford Parser 115
6.4.2 基于PCFG的中文句法分析实战 116
6.5 本章小结 119
第7章 文本向量化 120
7.1 文本向量化概述 120
7.2 向量化算法word2vec 121
7.2.1 神经网络语言模型 122
7.2.2 C&W模型 124
7.2.3 CBOW模型和Skip-gram模型 125
7.3 向量化算法doc2vec/str2vec 127
7.4 案例：将网页文本向量化 129
7.4.1 词向量的训练 129
7.4.2 段落向量的训练 133
7.4.3 利用word2vec和doc2vec计算网页相似度 134
7.5 本章小结 139
第8章 情感分析技术 140
8.1 情感分析的应用 141
8.2 情感分析的基本方法 142
8.2.1 词法分析 143
8.2.2 机器学习方法 144
8.2.3 混合分析 144
8.3 实战电影评论情感分析 145
8.3.1 卷积神经网络 146
8.3.2 循环神经网络 147
8.3.3 长短时记忆网络 148
8.3.4 载入数据 150
8.3.5 辅助函数 154
8.3.6 模型设置 155
8.3.7 调参配置 158
8.3.8 训练过程 159
8.4 本章小结 159
第9章 NLP中用到的机器学习算法 160
9.1 简介 160
9.1.1 机器学习训练的要素 161
9.1.2 机器学习的组成部分 162
9.2 几种常用的机器学习方法 166
9.2.1 文本分类 166
9.2.2 特征提取 168
9.2.3 标注 169
9.2.4 搜索与排序 170
9.2.5 推荐系统 170
9.2.6 序列学习 172
9.3 分类器方法 173
9.3.1 朴素贝叶斯Naive Bayesian 173
9.3.2 逻辑回归 174
9.3.3 支持向量机 175
9.4 无监督学习的文本聚类 177
9.5 文本分类实战：中文垃圾邮件分类 180
9.5.1 实现代码 180
9.5.2 评价指标 187
9.6 文本聚类实战：用K-means对豆瓣读书数据聚类 190
9.7 本章小结 194
第10章 基于深度学习的NLP算法 195
10.1 深度学习概述 195
10.1.1 神经元模型 196
10.1.2 激活函数 197
10.1.3 感知机与多层网络 198
10.2 神经网络模型 201
10.3 多输出层模型 203
10.4 反向传播算法 204
10.5 最优化算法 208
10.5.1 梯度下降 208
10.5.2 随机梯度下降 209
10.5.3 批量梯度下降 210
10.6 丢弃法 211
10.7 激活函数 211
10.7.1 tanh函数 212
10.7.2 ReLU函数 212
10.8 实现BP算法 213
10.9 词嵌入算法 216
10.9.1 词向量 217
10.9.2 word2vec简介 217
10.9.3 词向量模型 220
10.9.4 CBOW和Skip-gram模型 222
10.10 训练词向量实践 224
10.11 朴素Vanilla-RNN 227
10.12 LSTM网络 230
10.12.1 LSTM基本结构 230
10.12.2 其他LSTM变种形式 234
10.13 Attention机制 236
10.13.1 文本翻译 237
10.13.2 图说模型 237
10.13.3 语音识别 239
10.13.4 文本摘要 239
10.14 Seq2Seq模型 240
10.15 图说模型 242
10.16 深度学习平台 244
10.16.1 Tensorflow 245
10.16.2 Mxnet 246
10.16.3 PyTorch 246
10.16.4 Caffe 247
10.16.5 Theano 247
10.17 实战Seq2Seq问答机器人 248
10.18 本章小结 254
第11章 Solr搜索引擎 256
11.1 全文检索的原理 257
11.2 Solr简介与部署 258
11.3 Solr后台管理描述 263
11.4 配置schema 267
11.5 Solr管理索引库 270
11.5.1 创建索引 270
11.5.2 查询索引 276
11.5.3 删除文档 279
11.6 本章小结 281
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python自然语言处理实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python与机器学习实战
第1章　Python与机器学习入门	1
1.1  机器学习绪论	1
1.1.1  什么是机器学习	2
1.1.2  机器学习常用术语	3
1.1.3  机器学习的重要性	6
1.2  人生苦短，我用Python	7
1.2.1  为何选择Python	7
1.2.2  Python 在机器学习领域的优势	8
1.2.3  Anaconda的安装与使用	8
1.3  第一个机器学习样例	12
1.3.1  获取与处理数据	13
1.3.2  选择与训练模型	14
1.3.3  评估与可视化结果	15
1.4  本章小结	17
第2章　贝叶斯分类器	18
2.1  贝叶斯学派	18
2.1.1  贝叶斯学派与频率学派	19
2.1.2  贝叶斯决策论	19
2.2  参数估计	20
2.2.1  极大似然估计（ML估计）	21
2.2.2  极大后验概率估计（MAP估计）	22
2.3  朴素贝叶斯	23
2.3.1  算法陈述与基本架构的搭建	23
2.3.2  MultinomialNB的实现与评估	31
2.3.3  GaussianNB的实现与评估	40
2.3.4  MergedNB的实现与评估	43
2.3.5  算法的向量化	50
2.4  半朴素贝叶斯与贝叶斯网	53
2.4.1  半朴素贝叶斯	53
2.4.2  贝叶斯网	54
2.5  相关数学理论	55
2.5.1  贝叶斯公式与后验概率	55
2.5.2  离散型朴素贝叶斯算法	56
2.5.3  朴素贝叶斯和贝叶斯决策	58
2.6  本章小结	59
第3章　决策树	60
3.1  数据的信息	60
3.1.1  信息论简介	61
3.1.2  不确定性	61
3.1.3  信息的增益	65
3.1.4  决策树的生成	68
3.1.5  相关的实现	77
3.2  过拟合与剪枝	92
3.2.1  ID3、C4.5的剪枝算法	93
3.2.2  CART剪枝	100
3.3  评估与可视化	103
3.4  相关数学理论	111
3.5  本章小结	113
第4章　集成学习	114
4.1  “集成”的思想	114
4.1.1  众擎易举	115
4.1.2  Bagging与随机森林	115
4.1.3  PAC框架与Boosting	119
4.2  随机森林算法	120
4.3  AdaBoost算法	124
4.3.1  AdaBoost算法陈述	124
4.3.2  弱模型的选择	126
4.3.3  AdaBoost的实现	127
4.4  集成模型的性能分析	129
4.4.1  随机数据集上的表现	130
4.4.2  异或数据集上的表现	131
4.4.3  螺旋数据集上的表现	134
4.4.4  蘑菇数据集上的表现	136
4.5  AdaBoost算法的解释	138
4.6  相关数学理论	139
4.6.1  经验分布函数	139
4.6.2  AdaBoost与前向分步加法模型	140
4.7  本章小结	142
第5章　支持向量机	144
5.1  感知机模型	145
5.1.1  线性可分性与感知机策略	145
5.1.2  感知机算法	148
5.1.3  感知机算法的对偶形式	151
5.2  从感知机到支持向量机	153
5.2.1  间隔最大化与线性SVM	154
5.2.2  SVM算法的对偶形式	158
5.2.3  SVM的训练	161
5.3  从线性到非线性	163
5.3.1  核技巧简述	163
5.3.2  核技巧的应用	166
5.4  多分类与支持向量回归	180
5.4.1  一对多方法（One-vs-Rest）	180
5.4.2  一对一方法（One-vs-One）	181
5.4.3  有向无环图方法（Directed Acyclic Graph Method）	181
5.4.4  支持向量回归（Support Vector Regression）	182
5.5  相关数学理论	183
5.5.1  梯度下降法	183
5.5.2  拉格朗日对偶性	185
5.6  本章小结	187
第6章　神经网络	188
6.1  从感知机到多层感知机	189
6.2  前向传导算法	192
6.2.1  算法概述	193
6.2.2  激活函数（Activation Function）	195
6.2.3  损失函数（Cost Function）	199
6.3  反向传播算法	200
6.3.1  算法概述	200
6.3.2  损失函数的选择	202
6.3.3  相关实现	205
6.4  特殊的层结构	211
6.5  参数的更新	214
6.5.1  Vanilla Update	217
6.5.2  Momentum Update	217
6.5.3  Nesterov Momentum Update	219
6.5.4  RMSProp	220
6.5.5  Adam	221
6.5.6  Factory	222
6.6  朴素的网络结构	223
6.7  “大数据”下的网络结构	227
6.7.1  分批（Batch）的思想	228
6.7.2  交叉验证	230
6.7.3  进度条	231
6.7.4  计时器	233
6.8  相关数学理论	235
6.8.1  BP算法的推导	235
6.8.2  Softmax + log-likelihood组合	238
6.9  本章小结	240
第7章　卷积神经网络	241
7.1  从NN到CNN	242
7.1.1  “视野”的共享	242
7.1.2  前向传导算法	243
7.1.3  全连接层（Fully Connected Layer）	250
7.1.4  池化（Pooling）	251
7.2  利用TensorFlow重写NN	252
7.2.1  反向传播算法	252
7.2.2  重写Layer结构	253
7.2.3  实现SubLayer结构	255
7.2.4  重写CostLayer结构	261
7.2.5  重写网络结构	262
7.3  将NN扩展为CNN	263
7.3.1  实现卷积层	263
7.3.2  实现池化层	266
7.3.3  实现CNN中的特殊层结构	267
7.3.4  实现LayerFactory	268
7.3.5  扩展网络结构	270
7.4  CNN的性能	272
7.4.1  问题描述	272
7.4.2  搭建CNN模型	273
7.4.3  模型分析	280
7.4.4  应用CNN的方法	283
7.4.5  Inception	286
7.5  本章小结	289
附录A　Python入门	290
附录B　Numpy入门	303
附录C　TensorFlow入门	310
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python与机器学习实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Keras快速上手：基于Python的深度学习实战
1 准备深度学习的环境 1
1.1 硬件环境的搭建和配置选择  1
1.1.1 通用图形处理单元  3
1.1.2 你需要什么样的 GPU 加速卡  6
1.1.3 你的 GPU 需要多少内存  6
1.1.4 是否应该用多个 GPU  10
1.2 安装软件环境  12
1.2.1 所需软件列表  12
1.2.2 CUDA 的安装  13
1.2.3 Python 计算环境的安装  13
1.2.4 深度学习建模环境介绍  15
1.2.5 安装 CNTK 及对应的 Keras  17
1.2.6 安装 Theano 计算环境  23
1.2.7 安装 TensorFlow 计算环境  25
1.2.8 安装 cuDNN 和 CNMeM  27
2 数据收集与处理 28
2.1 网络爬虫  28
2.1.1 网络爬虫技术  29
2.1.2 构造自己的 Scrapy 爬虫  30
2.1.3 构造可接受参数的 Scrapy 爬虫  35
2.1.4 运行 Scrapy 爬虫  36
2.1.5 运行 Scrapy 爬虫的一些要点  38
2.2 大规模非结构化数据的存储和分析  40
2.2.1 ElasticSearch 介绍  42
2.2.2 ElasticSearch 应用实例  44
3 深度学习简介 57
3.1 概述  57
3.2 深度学习的统计学入门  58
3.3 一些基本概念的解释  61
3.3.1 深度学习中的函数类型  62
3.3.2 深度学习中的其他常见概念  65
3.4 梯度递减算法  67
3.5 后向传播算法  70
4 Keras 入门 72
4.1 Keras 简介  72
4.2 Keras 中的数据处理  73
4.2.1 文字预处理  74
4.2.2 序列数据预处理  82
4.2.3 图片数据输入  83
4.3 Keras 中的模型  83
4.4 Keras 中的重要对象  86
4.5 Keras 中的网络层构造  90
4.6 使用 Keras 进行奇异值矩阵分解  102
5 推荐系统 105
5.1 推荐系统简介  105
5.2 矩阵分解模型  108
5.3 深度神经网络模型  114
5.4 其他常用算法  117
5.5 评判模型指标  119
6 图像识别 121
6.1 图像识别入门  121
6.2 卷积神经网络的介绍  122
6.3 端到端的 MNIST 训练数字识别  127
6.4 利用 VGG16 网络进行字体识别  131
6.5 总结  135
7 自然语言情感分析 136
7.1 自然语言情感分析简介  136
7.2 文字情感分析建模  139
7.2.1 词嵌入技术  139
7.2.2 多层全连接神经网络训练情感分析  140
7.2.3 卷积神经网络训练情感分析  143
7.2.4 循环神经网络训练情感分析  144
7.3 总结  146
8 文字生成 147
8.1 文字生成和聊天机器人  147
8.2 基于检索的对话系统  148
8.3 基于深度学习的检索式对话系统  159
8.3.1 对话数据的构造  159
8.3.2 构造深度学习索引模型  162
8.4 基于文字生成的对话系统  166
8.5 总结  172
9 时间序列 173
9.1 时间序列简介  173
9.2 基本概念  174
9.3 时间序列模型预测准确度的衡量  178
9.4 时间序列数据示例  179
9.5 简要回顾 ARIMA 时间序列模型  181
9.6 循环神经网络与时间序列模型  186
9.7 应用案例  188
9.7.1 长江汉口月度流量时间序列模型  190
9.7.2 国际航空月度乘客数时间序列模型  203
9.8 总结  209
10 智能物联网 210
10.1 Azure 和 IoT  210
10.2 Azure IoT Hub 服务  213
10.3 使用 IoT Hub 管理设备概述  215
10.4 使用.NET 将模拟设备连接到 IoT 中心  218
10.5 机器学习应用实例  237
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Keras快速上手：基于Python的深度学习实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入学习：Python程序开发
第一部分  编程基础
第1章  导言
Python简介
为什么使用Python
主要技术特征
Python发布包
安装和配置

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入学习：Python程序开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据科学与机器学习
第 1 章 入门 1
1.1　安装Enthought Canopy　1
1.2　使用并理解IPython/Jupyter Notebook　6
1.3　Python基础——第 一部分　9
1.4　理解Python代码　11
1.5　导入模块　13
1.5.1　数据结构　13
1.5.2　使用列表　14
1.5.3　元组　17
1.5.4　字典　18
1.6　Python基础——第二部分　20
1.6.1　Python中的函数　20
1.6.2　循环　23
1.6.3　探索活动　24
1.7　运行Python脚本　24
1.7.1　运行Python代码的其他方式　25
1.7.2　在命令行中运行Python脚本　25
1.7.3　使用Canopy IDE　26
1.8　小结　28
第　2 章 统计与概率复习以及Python实现　29
2.1　数据类型　29
2.1.1　数值型数据　30
2.1.2　分类数据　30
2.1.3　定序数据　31
2.2　均值、中位数和众数　32
2.2.1　均值　32
2.2.2　中位数　33
2.2.3　众数　34
2.3　在Python中使用均值、中位数和众数　35
2.3.1　使用NumPy包计算均值　35
2.3.2　使用NumPy包计算中位数　36
2.3.3　使用SciPy包计算众数　37
2.4　标准差和方差　40
2.4.1　方差　40
2.4.2　标准差　42
2.4.3　总体方差与样本方差　42
2.4.4　在直方图上分析标准差和方差　44
2.4.5　使用Python计算标准差和方差　44
2.4.6　自己动手　45
2.5　概率密度函数和概率质量函数　45
2.5.1　概率密度函数　45
2.5.2　概率质量函数　46
2.6　各种类型的数据分布　47
2.6.1　均匀分布　47
2.6.2　正态分布或高斯分布　48
2.6.3　指数概率分布与指数定律　50
2.6.4　二项式概率质量函数　50
2.6.5　泊松概率质量函数　51
2.7　百分位数和矩　52
2.7.1　百分位数　53
2.7.2　矩　56
2.8　小结　60
第　3 章 Matplotlib与概率高级概念　61
3.1　Matplotlib快速学习　61
3.1.1　在一张图形上进行多次绘图　62
3.1.2　将图形保存为文件　63
3.1.3　调整坐标轴　64
3.1.4　添加网格　65
3.1.5　修改线型和颜色　65
3.1.6　标记坐标轴并添加图例　68
3.1.7　一个有趣的例子　69
3.1.8　生成饼图　70
3.1.9　生成条形图　71
3.1.10　生成散点图　72
3.1.11　生成直方图　72
3.1.12　生成箱线图　73
3.1.13　自己动手　74
3.2　协方差与相关系数　74
3.2.1　概念定义　75
3.2.2　相关系数　76
3.2.3　在Python中计算协方差和相关系数　76
3.2.4　相关系数练习　80
3.3　条件概率　80
3.3.1　Python中的条件概率练习　81
3.3.2　条件概率作业　84
3.3.3　作业答案　85
3.4　贝叶斯定理　86
3.5　小结　88
第　4 章 预测模型　89
4.1　线性回归　89
4.1.1　普通最小二乘法　90
4.1.2　梯度下降法　91
4.1.3　判定系数或r方　91
4.1.4　使用Python进行线性回归并计算r方　92
4.1.5　线性回归练习　94
4.2　多项式回归　95
4.2.1　使用NumPy实现多项式回归　96
4.2.2　计算r方误差　98
4.2.3　多项式回归练习　98
4.3　多元回归和汽车价格预测　99
4.3.1　使用Python进行多元回归　100
4.3.2　多元回归练习　102
4.4　多水平模型　102
4.5　小结　104
第　5 章 使用Python进行机器学习　105
5.1　机器学习及训练/测试法　105
5.1.1　非监督式学习　106
5.1.2　监督式学习　107
5.2　使用训练/测试法防止多项式回归中的过拟合　109
5.3　贝叶斯方法——概念　113
5.4　使用朴素贝叶斯实现垃圾邮件分类器　115
5.5　k均值聚类　118
5.6　基于收入与年龄进行人群聚类　121
5.7　熵的度量　123
5.8　决策树——概念　124
5.8.1　决策树实例　126
5.8.2　生成决策树　127
5.8.3　随机森林　127
5.9　决策树——使用Python预测录用决策　128
5.9.1　集成学习——使用随机森林　132
5.9.2　练习　133
5.10　集成学习　133
5.11　支持向量机简介　135
5.12　使用scikit-learn通过SVM进行人员聚集　137
5.13　小结　140
第　6 章 推荐系统　141
6.1　什么是推荐系统　141
6.2　基于项目的协同过滤　145
6.3　基于项目的协同过滤是如何工作的　146
6.4　找出电影相似度　149
6.5　改善电影相似度结果　155
6.6　向人们推荐电影　159
6.7　改善推荐结果　165
6.8　小结　167
第　7 章 更多数据挖掘和机器学习技术　168
7.1　k最近邻的概念　168
7.2　使用KNN预测电影评分　170
7.3　数据降维与主成分分析　176
7.3.1　数据降维　176
7.3.2　主成分分析　177
7.4　对鸢尾花数据集的PCA示例　178
7.5　数据仓库简介　182
7.6　强化学习　184
7.6.1　Q-learning　185
7.6.2　探索问题　186
7.6.3　时髦名词　186
7.7　小结　188
第　8 章 处理真实数据　189
8.1　偏差-方差权衡　189
8.2　使用k折交叉验证避免过拟合　192
8.3　数据清理和标准化　196
8.4　清理Web日志数据　198
8.4.1　对Web日志应用正则表达式　198
8.4.2　修改1——筛选请求字段　200
8.4.3　修改2——筛选post请求　201
8.4.4　修改3——检查用户代理　203
8.4.5　筛选爬虫与机器人　204
8.4.6　修改4——使用网站专用筛选器　205
8.4.7　Web日志数据练习　206
8.5　数值型数据的标准化　207
8.6　检测异常值　208
8.6.1　处理异常值　209
8.6.2　异常值练习　211
8.7　小结211
第　9 章 Apache Spark——大数据上的机器学习　212
9.1　安装Spark　212
9.1.1　在Windows系统中安装Spark　213
9.1.2　在其他操作系统上安装Spark　214
9.1.3　安装Java Development Kit　214
9.1.4　安装Spark　217
9.2　Spark简介　227
9.2.1　可伸缩　227
9.2.2　速度快　228
9.2.3　充满活力　229
9.2.4　易于使用　229
9.2.5　Spark组件　229
9.2.6　在Spark中使用Python还是Scala　230
9.3　Spark和弹性分布式数据集　231
9.3.1　SparkContext对象　231
9.3.2　创建RDD　232
9.3.3　更多创建RDD的方法　233
9.3.4　RDD操作　233
9.4　MLlib简介　235
9.4.1　MLlib功能　235
9.4.2　MLlib特殊数据类型　236
9.5　在Spark中使用MLlib实现决策树　236
9.6　在Spark中实现k均值聚类　245
9.7　TF-IDF　250
9.7.1　TF-IDF实战　250
9.7.2　使用TF-IDF　251
9.8　使用Spark MLlib搜索维基百科　251
9.8.1　导入语句　252
9.8.2　创建初始RDD　252
9.8.3　创建并转换HashingTF对象　253
9.8.4　计算TF-IDF得分　254
9.8.5　使用维基百科搜索引擎算法　254
9.8.6　运行算法　255
9.9　使用Spark 2.0中的MLlib数据框API　255
9.10　小结　259
第　10 章 测试与实验设计　260
10.1　A/B测试的概念　260
10.1.1　A/B测试　260
10.1.2　A/B测试的转化效果测量　262
10.1.3　小心方差　263
10.2　t检验与p值　263
10.2.1　t统计量或t检验　264
10.2.2　p值　264
10.3　使用Python计算t统计量和p值　265
10.3.1　使用实验数据进行A/B测试　265
10.3.2　样本量有关系吗　267
10.4　确定实验持续时间　268
10.5　A/B测试中的陷阱　269
10.5.1　新奇性效应　270
10.5.2　季节性效应　271
10.5.3　选择性偏差　271
10.5.4　数据污染　272
10.5.5　归因错误　272
10.6　小结　273
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据科学与机器学习
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据处理
前言　　xiii
第1章　Python 简介　　1
1.1　为什么选择Python　　4
1.2　开始使用Python　　4
1.2.1　Python 版本选择　　5
1.2.2　安装Python　　6
1.2.3　测试Python　　9
1.2.4　安装pip　　11
1.2.5　安装代码编辑器　　12
1.2.6　安装IPython（可选）　　13
1.3　小结　　13
第2章　Python 基础　　14
2.1　基本数据类型　　15
2.1.1　字符串　　15
2.1.2　整数和浮点数　　15
2.2　数据容器　　18
2.2.1　变量　　18
2.2.2　列表　　21
2.2.3　字典　　22
2.3　各种数据类型的用途　　23
2.3.1　字符串方法：字符串能做什么　　24
2.3.2　数值方法：数字能做什么　　25
2.3.3　列表方法：列表能做什么　　26
2.3.4　字典方法：字典能做什么　　27
2.4　有用的工具：type、dir 和help　　28
2.4.1　type　　28
2.4.2　dir　　28
2.4.3　help　　30
2.5　综合运用　　31
2.6　代码的含义　　32
2.7　小结　　33
第3章　供机器读取的数据　　34
3.1　CSV 数据　　35
3.1.1　如何导入CSV 数据　　36
3.1.2　将代码保存到文件中并在命令行中运行　　39
3.2　JSON 数据　　41
3.3　XML 数据　　44
3.4　小结　　56
第4章　处理Excel 文件　　58
4.1　安装Python 包　　58
4.2　解析Excel 文件　　59
4.3　开始解析　　60
4.4　小结　　71
第5章　处理PDF 文件，以及用Python 解决问题　　73
5.1　尽量不要用PDF　　73
5.2　解析PDF 的编程方法　　74
5.2.1　利用slate 库打开并读取PDF　　75
5.2.2　将PDF 转换成文本　　77
5.3　利用pdfminer 解析PDF　　78
5.4　学习解决问题的方法　　92
5.4.1　练习：使用表格提取，换用另一个库　　94
5.4.2　练习：手动清洗数据　　98
5.4.3　练习：试用另一种工具　　98
5.5　不常见的文件类型　　101
5.6　小结　　101
第6章　数据获取与存储　　103
6.1　并非所有数据生而平等　　103
6.2　真实性核查　　104
6.3　数据可读性、数据清洁度和数据寿命　　105
6.4　寻找数据　　105
6.4.1　打电话　　105
6.4.2　美国政府数据　　106
6.4.3　全球政府和城市开放数据　　107
6.4.4　组织数据和非政府组织数据　　109
6.4.5　教育数据和大学数据　　109
6.4.6　医学数据和科学数据　　109
6.4.7　众包数据和API　　110
6.5　案例研究：数据调查实例　　111
6.5.1　埃博拉病毒危机　　111
6.5.2　列车安全　　111
6.5.3　足球运动员的薪水　　112
6.5.4　童工　　112
6.6　数据存储　　113
6.7　数据库简介　　113
6.7.1　关系型数据库：MySQL 和PostgreSQL　　114
6.7.2　非关系型数据库：NoSQL　　116
6.7.3　用Python 创建本地数据库　　117
6.8　使用简单文件　　118
6.8.1　云存储和Python　　118
6.8.2　本地存储和Python　　119
6.9　其他数据存储方式　　119
6.10　小结　　119
第7章　数据清洗：研究、匹配与格式化　　121
7.1　为什么要清洗数据　　121
7.2　数据清洗基础知识　　122
7.2.1　找出需要清洗的数据　　123
7.2.2　数据格式化　　131
7.2.3　找出离群值和不良数据　　135
7.2.4　找出重复值　　140
7.2.5　模糊匹配　　143
7.2.6　正则表达式匹配　　146
7.2.7　如何处理重复记录　　150
7.3　小结　　151
第8章　数据清洗：标准化和脚本化　　153
8.1　数据归一化和标准化　　153
8.2　数据存储　　154
8.3　找到适合项目的数据清洗方法　　156
8.4　数据清洗脚本化　　157
8.5　用新数据测试　　170
8.6　小结　　172
第9章　数据探索和分析　　173
9.1　探索数据　　173
9.1.1　导入数据　　174
9.1.2　探索表函数　　179
9.1.3　联结多个数据集　　182
9.1.4　识别相关性　　186
9.1.5　找出离群值　　187
9.1.6　创建分组　　189
9.1.7　深入探索　　192
9.2　分析数据　　193
9.2.1　分离和聚焦数据　　194
9.2.2　你的数据在讲什么　　196
9.2.3　描述结论　　196
9.2.4　将结论写成文档　　197
9.3　小结　　197
第10章　展示数据　　199
10.1　避免讲故事陷阱　　199
10.1.1　怎样讲故事　　200
10.1.2　了解听众　　200
10.2　可视化数据　　201
10.2.1　图表　　201
10.2.2　时间相关数据　　207
10.2.3　地图　　208
10.2.4　交互式元素　　211
10.2.5　文字　　212
10.2.6　图片、视频和插画　　212
10.3　展示工具　　213
10.4　发布数据　　213
10.4.1　使用可用站点　　213
10.4.2　开源平台：创建一个新网站　　215
10.4.3　Jupyter（曾名IPython notebook）　　216
10.5　小结　　219
第11章　网页抓取：获取并存储网络数据　　221
11.1　抓取什么和如何抓取　　221
11.2　分析网页　　223
11.2.1　检视：标记结构　　224
11.2.2　网络/ 时间线：页面是如何加载的　　230
11.2.3　控制台：同JavaScript 交互　　232
11.2.4　页面的深入分析　　236
11.3　得到页面：如何通过互联网发出请求　　237
11.4　使用Beautiful Soup 读取网页　　238
11.5　使用lxml 读取网页　　241
11.6　小结　　249
第12章　高级网页抓取：屏幕抓取器与爬虫　　251
12.1　基于浏览器的解析　　251
12.1.1　使用Selenium 进行屏幕读取　　252
12.1.2　使用Ghost.py 进行屏幕读取　　260
12.2　爬取网页　　266
12.2.1　使用Scrapy 创建一个爬虫　　266
12.2.2　使用Scrapy 爬取整个网站　　273
12.3　网络：互联网的工作原理，以及为什么它会让脚本崩溃　　281
12.4　变化的互联网（或脚本为什么崩溃）　　283
12.5　几句忠告　　284
12.6　小结　　284
第13章　应用编程接口　　286
13.1　API 特性　　287
13.1.1　REST API 与流式API　　287
13.1.2　频率限制　　287
13.1.3　分级数据卷　　288
13.1.4　API key 和token　　289
13.2　一次简单的Twitter REST API 数据拉取　　290
13.3　使用Twitter REST API 进行高级数据收集　　292
13.4　使用Twitter 流式API 进行高级数据收集　　295
13.5　小结　　297
第14章　自动化和规模化　　298
14.1　为什么要自动化　　298
14.2　自动化步骤　　299
14.3　什么会出错　　301
14.4　在哪里自动化　　302
14.5　自动化的特殊工具　　303
14.5.1　使用本地文件、参数及配置文件　　303
14.5.2　在数据处理中使用云　　308
14.5.3　使用并行处理　　310
14.5.4　使用分布式处理　　312
14.6　简单的自动化　　313
14.6.1　CronJobs　　314
14.6.2　Web 接口　　316
14.6.3　Jupyter notebook　　316
14.7　大规模自动化　　317
14.7.1　Celery：基于队列的自动化　　317
14.7.2　Ansible：操作自动化　　318
14.8　监控自动化程序　　319
14.8.1　Python 日志　　320
14.8.2　添加自动化信息　　322
14.8.3　上传和其他报告　　326
14.8.4　日志和监控服务　　327
14.9　没有万无一失的系统　　328
14.10　小结　　328
第15章　结论　　330
15.1　数据处理者的职责　　330
15.2　数据处理之上　　331
15.2.1　成为一名更优秀的数据分析师　　331
15.2.2　成为一名更优秀的开发者　　331
15.2.3　成为一名更优秀的视觉化讲故事者　　332
15.2.4　成为一名更优秀的系统架构师　　332
15.3　下一步做什么　　332
附录A　编程语言对比　　334
附录B　初学者的Python 学习资源　　336
附录C　学习命令行　　338
附录D　高级Python 设置　　349
附录E　Python 陷阱　　361
附录F　IPython 指南　　370
附录G　使用亚马逊网络服务　　374
关于作者　　378
关于封面　　378
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据处理
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>与孩子一起学编程
第1章 出发吧    1
1.1 安装Python     1
1.2 从IDLE启动Python   2
1.3 来点指令吧     3
1.4 与Python交互   5
1.5 该编程了     7
1.6 运行你的第一个程序   8
1.7 如果出问题     9
1.8 你的第二个程序   11
第2章 记住内存和变量  14
2.1 输入、处理和输出   14
2.2 名字     16
2.3 名字里是什么   20
2.4 数字和字符串   21
2.5 它们有多“可变”   22
2.6 全新的我     23
第3章 基本数学运算  　26
3.1 四大基本运算  　 26
3.2 操作符     　28
3.3 运算顺序     29
3.4 另外两个操作符   30
3.5 非常大和非常小   33
第4章 数据的类型  　38
4.1 改变类型     38
4.2 得到更多信息：type() 　41
4.3 类型转换错误   42
4.4 使用类型转换   42
第5章 输入    44
5.1 raw_input()   44
5.2 Print命令和逗号   45
5.3 输入数字     47
5.4 来自互联网的输入   49
第6章 GUI——图形用户界面　　52
6.1 什么是GUI     52
6.2 第一个GUI     53
6.3 GUI输入     54
6.4 选择你的口味   55
6.5 再看猜数游戏   59
6.6 其他GUI组件   60
第7章 判断再判断  62
7.1 测试，测试     62
7.2 缩进     64
7.3 是不是有问题   65
7.4 其他类型的测试   66
7.5 如果测试为假会怎么样 67
7.6 测试多个条件   69
7.7 使用and     69
7.8 使用or     70
7.9 使用not     70
第8章 转圈圈    74
8.1 计数循环     75
8.2 使用计数循环   77
8.3 一条捷径——range() 　　78
8.4 风格问题——循环变量名　 80
8.5 按步长计数     82
8.6 没有数字的计数   84
8.7 关于这个问题   84
8.8  跳出循环——break和continue    85
第9章 全都为了你——注释　　89
9.1 增加注释     89
9.2 单行注释     90
9.3 行末注释     90
9.4 多行注释     90
9.5 注释风格     91
9.6 注释掉     92
第10章 游戏时间到了  94
第11章 嵌套与可变循环  99
11.1 嵌套循环     99
11.2 可变循环     101
11.3 可变嵌套循环   102
11.4 更多可变嵌套循环   103
11.5 使用嵌套循环   105
第12章 收集起来——列表　　112
12.1 什么是列表   112
12.2 创建列表     113
12.3 向列表增加元素   113
12.4 这个点是什么   114
12.5 列表可以包含任何内容　 114
12.6 从列表获取元素  　 115
12.7 列表“分片”   116
12.8 修改元素     118
12.9  向列表增加元素的其他方法     118
12.10 从列表删除元素   120
12.11 搜索列表   121
12.12 循环处理列表   122
12.13 列表排序   123
12.14 可改变和不可改变 　126
12.15 双重列表：数据表　 126
第13章 函数    131
13.1 函数——积木   131
13.2 调用函数     133
13.3 向函数传递参数   134
13.4 有多个参数的函数   137
13.5 返回值的函数   139
13.6 变量作用域   140
13.7 强制为全局   143
13.8 关于变量命名的一点建议 　144
第14章 对象   　146
14.1 真实世界中的对象   146
14.2 Python中的对象  　147
14.3 对象 = 属性+ 方法   148
14.4 这个点是什么   148
14.5 创建对象     149
14.6 一个示例类——HotDog 154
14.7 隐藏数据     159
14.8 多态和继承   159
14.9 未雨绸缪     161
第15章 模块    164
15.1 什么是模块   164
15.2 为什么使用模块   　164
15.3 积木桶    　165
15.4 如何创建模块   165
15.5 如何使用模块   165
15.6 命名空间     167
15.7 标准模块     170
第16章 图形    174
16.1 寻求帮助——Pygame　 174
16.2 Pygame窗口   175
16.3 在窗口中画图   178
16.4 单个像素     186
16.5 图像     190
16.6 动起来   　192
16.7 动画     193
16.8 更流畅的动画   194
16.9 让球反弹     195
16.10 让球翻转   198
第17章 动画精灵和碰撞检测　　201
17.1 动画精灵     201
17.2 嘣! 碰撞检测   207
17.3 统计时间   　211
第18章 一种新的输入——事件　　216
18.1 事件     216
18.2 键盘事件     218
18.3 鼠标事件     222
18.4 定时器事件   224
18.5 另一个游戏PyPong　 226
第19章 声音   　238
19.1  从Pygame寻求更多帮助——mixer   238
19.2 制造声音与播放声音 239
19.3 播放声音     239
19.4 控制音量     242
19.5 重复音乐     244
19.6 为PyPong增加声音 244
19.7 更多声音     245
19.8 为PyPong增加音乐 249
第20章 更 多 GUI  253
20.1 使用PythonCard   .253
20.2 组件     254
20.3 让GUI做点事情   256
20.4 事件处理器的返回   258
20.5 移动按钮     259
20.6 更多有用的GUI   259
20.7 TempGUI     259
20.8 菜单上是什么   264
第21章 打印格式化与字符串　　271
21.1 换行     272
21.2 水平间隔——制表符 　　273
21.3 在字符串中插入变量 　　275
21.4 数字格式化   　276
21.5 更多字符串处理  　280
第22章 文件输入与输出　　287
22.1 什么是文件   287
22.2 文件名   　288
22.3 文件位置     289
22.4 打开文件     292
22.5 读文件   　293
22.6 文本文件和二进制文件　 295
22.7 写文件     　296
22.8 在文件中保存内容：pickle　 300
22.9  又到了游戏时间——Hangman     301
第23章 碰运气——随机性　　310
23.1 什么是随机性   310
23.2 掷骰子     311
23.3 创建一副牌  　 316
23.4 Crazy Eights 　  320
第24章 计算机仿真　  333
24.1 真实世界建模   333
24.2 Lunar Lander   334
24.3 跟踪时间     339
24.4 时间对象     340
24.5 把时间保存到文件   343
24.6 电子宠物     345
第25章 接下来呢  354
25.1 一般编程     354
25.2 Python     355
25.3 游戏编程与Pygame　　355
25.4 其他Python模块   356
25.5 回顾     358
附录 变量命名规则 　 359
自测题答案  　  361
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>与孩子一起学编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>易学Python
第1章　为何学习python　1
1.1　学习编程　2
1.1.1　告诉计算机做什么　2
1.1.2　编程是创意　4
1.1.3　编程是设计　4
1.2　是什么让python如此杰出　5
1.2.1　python简单易学　5
1.2.2　python是真正的语言　5
1.2.3　python“开箱即用”　6
1.2.4　python社区规模庞大　6
1.3　在windows系统上安装python　7
1.3.1　安装python　7
1.3.2　在windows系统上运行python程序　9
1.3.3　从命令行运行python程序　11
1.4　linux　14
1.4.1　在linux系统上安装python　14
1.4.2　linux gui　14
1.4.3　linux命令行　16
1.5　macintosh　16
.1.5.1　更新shell配置文件　17
1.5.2　设置默认应用程序　17
1.6　排除故障　18
1.6.1　语法错误　18
1.6.2　文件扩展名不对(windows)　19
1.6.3　python的安装位置不对(linux)　19
1.7　文本编辑器和ide　19
1.8　总结　20
第2章　hunt the wumpus　21
2.1　程序是什么　22
2.1.1　在屏幕上显示　23
2.1.2　使用变量存储信息　23
2.1.3　询问玩家想做什么　24
2.1.4　做出决策　24
2.1.5　循环　25
2.1.6　函数　26
2.2　您的第一个程序　27
2.2.1　hunt the wumpus的第一个版本　27
2.2.2　调试　29
2.3　捣鼓程序　29
2.3.1　调整洞穴数量　30
2.3.2　更友好的wumpus　30
2.3.3　多个wumpus　30
2.4　创建洞穴　31
2.4.1　列表　31
2.4.2　for循环　33
2.4.3　构造洞穴网络　33
2.5　修复微妙的错误　35
2.5.1　问题　36
2.5.2　解决方案　36
2.5.3　打造连通的洞穴网络　36
2.6　使用函数让代码更整洁　39
2.6.1　函数的基本知识　39
2.6.2　变量作用域　40
2.6.3　共享状态　41
2.7　使用函数组织游戏hunt the wumpus　42
2.7.1　与洞穴交互　42
2.7.2　创建洞穴　43
2.7.3　与玩家交互　44
2.7.4　程序的其他部分　45
2.8　弓和箭　47
2.9　进一步美化　49
2.10　接下来如何做　51
2.10.1　蝙蝠和深渊　52
2.10.2　让wumpus移动　52
2.10.3　不同的洞穴网络　52
2.11　总结　52
第3章　与外部交互　53
3.1　开箱即用：python库　54
3.1.1　python标准库　54
3.1.2　其他库　54
3.1.3　使用库　55
3.1.4　库到底是什么　55
3.2　另一种提问方式　58
3.2.1　使用命令行参数　58
3.2.2　使用模块sys　58
3.3　读写文件　59
3.3.1　路径和目录(我的文件在哪里)　59
3.3.2　路径　61
3.3.3　打开文件　61
3.4　比较文件　63
3.4.1　采集文件的指纹　63
3.4.2　将文件的指纹存储到字典中　64
3.5　综合应用　65
3.6　测试程序　68
3.7　改进脚本　70
3.7.1　按顺序排列结果　70
3.7.2　比较目录　72
3.8　接下来如何做　73
3.9　总结　73
第4章　组织有序　74
4.1　规范程序　74
4.2　如何确定程序是正确的　75
4.2.1　手工测试太烦　75
4.2.2　功能测试　76
4.2.3　单元测试：让计算机去做　76
4.2.4　测试驱动的开发　76
4.3　编写程序　77
4.4　整合程序　80
4.4.1　测试用户界面　80
4.4.2　用输入做什么　81
4.4.3　执行命令　82
4.4.4　运行程序　85
4.5　状况评估　85
4.5.1　接下来做什么　86
4.5.2　我既繁忙又重要　88
4.5.3　列表解析　89
4.5.4　发现bug　92
4.6　存储待办事项清单　95
4.7　编辑和删除　98
4.7.1　修复一个小问题　99
4.7.2　删除待办事项　101
4.7.3　编辑待办事项　103
4.8　接下来如何做　106
4.8.1　帮助命令　106
4.8.2　撤销　106
4.8.3　不同的界面　107
4.8.4　时间管理和估算　107
4.8.5　研究一个单元测试框架　107
4.9　总结　107
第5章　面向业务的编程　109
5.1　让程序相互交流　110
5.1.1　csv来救场　110
5.1.2　其他格式　111
5.2　准备工作　112
5.2.1　安装beautiful soup　112
5.2.2　安装firefox和firebug　113
5.2.3　查看网页　113
5.3　使用python下载网页　115
5.3.1　提取想要的数据　116
5.3.2　进一步提取数据　117
5.3.3　网页抓取的注意事项　119
5.4　写入csv文件　119
5.5　通过电子邮件发送csv文件　121
5.5.1　电子邮件的结构　121
5.5.2　创建电子邮件　122
5.5.3　发送电子邮件　123
5.5.4　其他电子邮件模块　124
5.6　一个简单脚本——哪些地方可能出问题　125
5.6.1　未连接到网络　126
5.6.2　数据无效　126
5.6.3　数据出乎意料　126
5.6.4　无法写入数据　126
5.6.5　无法访问邮件服务器　126
5.6.6　您不必修复这些问题　127
5.7　如何处理有问题的脚本　127
5.7.1　交流　127
5.7.2　对故障的承受力　127
5.7.3　一开始就做好　128
5.7.4　失败要赶早，还要大张旗鼓　128
5.7.5　双保险　128
5.7.6　压力测试和性能测试　129
5.7.7　以后再试　129
5.8　异常　131
5.8.1　为何使用异常　131
5.8.2　程序崩溃是什么意思　131
5.8.3　捕获异常　134
5.8.4　模块traceback　135
5.9　接下来如何做　136
5.10　总结　136
第6章　类与面向对象编程　137
6.1　类是什么　137
6.1.1　类包含数据　138
6.1.2　类是类型　138
6.1.3　类的工作原理　138
6.1.4　您的第一个类　138
6.2　面向对象设计　140
6.3　玩家输入　143
6.4　财宝　146
6.4.1　方法该放在什么地方　146
6.4.2　寻宝　147
6.4.3　捡宝　148
6.5　在洞穴迷宫中漫步　151
6.6　怪物出没　156
6.6.1　创建怪物　156
6.6.2　一些面向对象的技巧　157
6.6.3　组合起来　158
6.7　危险与刺激　161
6.8　接下来如何做　163
6.8.1　增加怪物和财宝　164
6.8.2　扩展格斗方式和物品　164
6.8.3　添加更多冒险元素　164
6.8.4　尝试动词和名词　164
6.8.5　研究类的高级功能　164
6.9　总结　164
第7章　高级技术　166
7.1　面向对象　166
7.1.1　混合类　166
7.1.2　super()及注意事项　169
7.2　定制类　169
7.2.1　__getattr__　170
7.2.2　__setattr__　170
7.2.3　__getattribute__　172
7.2.4　特性(property)　173
7.2.5　模拟其他类型　175
7.3　生成器和迭代器　177
7.3.1　迭代器　177
7.3.2　生成器　179
7.3.3　生成器表达式　180
7.4　使用迭代器　180
7.4.1　读文件　181
7.4.2　处理日志行　183
7.4.3　提取字段　184
7.5　函数式编程　188
7.5.1　副作用　188
7.5.2　map和filter　188
7.5.3　传递和返回函数　189
7.6　接下来如何做　191
7.7　总结　191
第8章　django　192
8.1　使用django编写web应用　193
8.1.1　安装django　193
8.1.2　设置django　193
8.2　编写应用　197
8.2.1　最简单的待办事项清单　197
8.2.2　使用模板　198
8.3　使用模型　201
8.3.1　设置数据库　201
8.3.2　创建模型　201
8.3.3　django模块admin　203
8.3.4　添加管理界面　204
8.4　使用数据　206
8.4.1　使用模型　206
8.4.2　设计url　208
8.4.3　提交表单　210
8.4.4　处理待办事项　213
8.5　最后的优化　216
8.6　接下来如何做　217
8.7　总结　217
第9章　使用pyglet开发游戏　218
9.1　安装pyglet　218
9.2　起步　220
9.3　简单的宇宙飞船　222
9.3.1　让事情发生　224
9.3.2　回到学校：牛顿第一定律及矢量　226
9.4　引力　229
9.4.1　计算引力　229
9.4.2　小心行星　232
9.5　不能缺了枪炮　234
9.6　邪恶的外星人　237
9.7　接下来如何做　242
9.7.1　添加新元素　242
9.7.2　改成别的类型　242
9.7.3　重构　243
9.7.4　获取反馈　243
9.8　总结　243
第10章　twisted网络编程　244
10.1　安装twisted　244
10.2　第一个应用程序　245
10.3　mud初步　249
10.4　让游戏更有趣　254
10.4.1　可恨的怪物　254
10.4.2　回到聊天服务器　256
10.5　要求玩家登录　260
10.5.1　探索不熟悉的代码　260
10.5.2　整合　261
10.5.3　编写自定义状态机　265
10.6　保存玩家状态　269
10.7　接下来如何做　273
10.8　总结　273
第11章　再谈django　274
11.1　身份验证　274
11.1.1　登录　275
11.1.2　添加用户　277
11.2　只列出当前用户的待办事项　278
11.2.1　修复数据库　279
11.2.2　言归正传　282
11.2.3　滴水不漏　283
11.2.4　更新接口　284
11.3　测试　285
11.3.1　单元测试　285
11.3.2　功能测试　287
11.3.3　运行测试　288
11.4　图像和样式　289
11.4.1　使用django提供媒体内容　289
11.4.2　由另一个服务器提供媒体　291
11.4.3　最后一步　292
11.5　接下来如何做　292
11.6　总结　293
第12章　接下来如何做　294
12.1　再阅读一些代码　294
12.1.1　python标准库　295
12.1.2　python秘诀　295
12.1.3　开源项目　295
12.1.4　加入python社区　295
12.1.5　加入邮件列表　295
12.1.6　寻找当地用户组　296
12.1.7　给开源项目帮忙　296
12.2　解决自己遇到的问题　296
12.3　其他python库　297
12.3.1　代码剖析　297
12.3.2　日志　297
12.3.3　子进程和多任务　297
12.3.4　更复杂的分析　297
12.3.5　pil和图像处理　298
12.3.6　xml、elementtree和json　298
12.4　总结　298
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>易学Python
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>用Python学编程
1. 引论
2. 程序设计基础
3. 高级专题
4. 案例研究
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>用Python学编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python游戏编程快速上手 第4版
第1章 交互式Shell1
1.1 一些简单的数学知识1
1.1.1 整数和浮点数2
1.1.2 表达式2
1.2 计算表达式3
1.3 语法错误4
1.4 在变量中存储值4
1.5 小结8
第2章 编写程序9
2.1 字符串值10
2.2 连接字符串10
2.3 在IDLE的文件编辑器中编写程序11
2.3.1 创建Hello World程序11
2.3.2 保存程序12
2.3.3 运行程序13
2.4 Hello World程序如何工作14
2.4.1 注释15
2.4.2 函数：程序中的小程序15
2.4.3 终止程序16
2.5 命名变量16
2.6 小结17
第3章 “猜数字”游戏19
3.1 “猜数字”的运行示例20
3.2 “猜数字”程序的源代码20
3.3 导入random模块21
3.4 用random.randint()函数
生成随机数22
3.5 欢迎玩家23
3.6 流程控制语句23
3.6.1 使用循环来重复代码23
3.6.2 组织语句块24
3.6.3 for循环语句25
3.7 玩家的猜测26
3.8 使用int()函数、float()函数、str()函数和bool()函数来转换值26
3.9 布尔数据类型28
3.9.1 比较操作符28
3.9.2 用条件检查True或False29
3.9.3 体验布尔值、比较操作符和条件29
3.9.4 =和==的区别30
3.10 if语句30
3.11 用break语句提早离开循环31
3.12 判断玩家是否赢了31
3.13 判断玩家是否输了32
3.14 小结32
第4章 一个讲笑话程序35
4.1 Jokes游戏的运行示例35
4.2 Jokes游戏的源代码36
4.3 代码如何工作36
4.4 转义字符37
4.5 单引号和双引号38
4.6 print()的end关键字形参39
4.7 小结39
第5章 Dragon Realm41
5.1 如何玩Dragon Realm41
5.2 Dragon Realm的运行示例42
5.3 Dragon Realm的流程图42
5.4 Dragon Realm的源代码43
5.5 导入random和time模块44
5.6 Dragon Realm中的函数44
5.6.1 def语句45
5.6.2 调用函数45
5.6.3 把函数定义放在哪里45
5.7 多行字符串46
5.8 while语句实现循环46
5.9 布尔操作符47
5.9.1 and操作符47
5.9.2 or操作符48
5.9.3 not操作符49
5.9.4 布尔操作符的运算49
5.10 返回值50
5.11 全局作用域和局部作用域51
5.12 函数形参52
5.13 显示游戏结果53
5.14 决定哪个山洞有友善的龙53
5.15 游戏循环54
5.15.1 在程序中调用函数55
5.15.2 询问玩家要不要再玩一局55
5.16 小结56
第6章 使用调试器57
6.1 Bug的类型57
6.2 调试器58
6.2.1 启动调试器59
6.2.2 用调试器单步执行程序60
6.3 查找Bug63
6.4 设置断点65
6.5 使用断点66
6.6 小结68
第7章 用流程图设计Hangman69
7.1 如何玩Hangman69
7.2 Hangman的运行示例70
7.3 ASCII字符图71
7.4 用流程图来设计一个程序71
7.4.1 生成流程图72
7.4.2 流程图的分支73
7.4.3 结束或者重新开始游戏74
7.4.4 再猜一次75
7.4.5 为玩家提供反馈77
7.5 小结78
第8章 编写Hangman的代码79
8.1 Hangman的源代码79
8.2 导入random模块82
8.3 常量82
8.4 列表数据类型83
8.4.1 用索引访问元素83
8.4.2 列表连接84
8.4.3 in操作符85
8.5 调用方法85
8.5.1 列表方法reverse()和append()86
8.5.2 字符串方法split()86
8.6 从单词列表中获取一个神秘单词87
8.7 向玩家显示游戏板87
8.7.1 list()函数和range()函数88
8.7.2 列表和字符串分片89
8.7.3 用空格表示神秘单词90
8.8 获取玩家的猜测91
8.8.1 字符串方法lower()和upper()92
8.8.2 离开while循环93
8.9 elif语句93
8.10 确保玩家输入一个有效的猜测94
8.11 询问玩家是否想再玩一局94
8.12 回顾Hangman中的函数95
8.13 游戏循环96
8.13.1 调用displayBoard()函数96
8.13.2 让玩家输入他们的猜测96
8.13.3 判断字母是否在这个神秘单词中97
8.13.4 判断玩家是否获胜97
8.13.5 当玩家猜错时97
8.13.6 检查玩家是否输了98
8.13.7 结束并重新设置游戏98
8.14 小结99
第9章 Hangman扩展101
9.1 添加更多的猜测机会101
9.2 字典数据类型102
9.2.1 用len()函数获取字典的大小103
9.2.2 字典和列表的区别103
9.2.3 字典方法keys()和values()104
9.2.4 在Hangman中使用单词的字典104
9.3 从一个列表中随机选取105
9.4 从列表中删除项106
9.5 多变量赋值107
9.6 向玩家显示单词的分类108
9.7 小结109
第10章 Tic Tac Toe111
10.1 Tic Tac Toe的运行示例112
10.2 Tic Tac Toe的源代码113
10.3 设计程序116
10.3.1 用数据表示游戏板117
10.3.2 游戏AI117
10.4 导入random模块119
10.5 在屏幕上打印游戏板119
10.6 让玩家来选择X或O120
10.7 决定谁先走121
10.8 在游戏板上放置一个标记121
10.8.1 列表引用121
10.8.2 在makeMove()中使用列表引用124
10.9 判断玩家是否获胜125
10.10 复制游戏板的数据126
10.11 判断游戏板上的格子是否为空127
10.12 让玩家输入他们的落子127
10.13 短路求值128
10.14 从落子列表中选择一个落子130
10.15 None值130
10.16 创建计算机的AI131
10.16.1 计算机判断自己能否落子即获胜132
10.16.2 计算机判断玩家是否可以落子即获胜132
10.16.3 依次判断角、中心和边133
10.16.4 判断游戏板是否满了133
10.17 游戏循环134
10.17.1 决定玩家的符号和谁先走134
10.17.2 运行玩家的轮次134
10.17.3 运行计算机的轮次135
10.17.4 询问玩家是否再玩一次136
10.18 小结136
第11章 推理游戏Bagels137
11.1 Bagels的运行示例138
11.2 Bagels的源代码138
11.3 Bagels的流程图140
11.4 导入random并定义getSecretNum()140
11.5 打乱一组唯一数的顺序141
11.5.1 用random.shuffle()函数改变列表项的顺序141
11.5.2 从打乱次序的数中获取神秘数字142
11.6 复合赋值操作符142
11.7 计算要给出的线索143
11.8 列表方法sort()144
11.9 字符串方法join()145
11.10 检查字符串中是否只包含数字145
11.11 游戏的开始146
11.12 字符串插值146
11.13 游戏循环147
11.13.1 获取玩家的猜测147
11.13.2 根据玩家的猜测给出线索148
11.13.3 判断玩家的输赢148
11.13.4 询问玩家是否再玩一局148
11.14 小结149
第12章 笛卡尔坐标151
12.1 网格和笛卡尔坐标151
12.2 负数153
12.3 计算机屏幕的坐标系154
12.4 数学技巧155
12.4.1 技巧1：减号吃掉它左边的加号155
12.4.2 技巧2：两个减号合并为一个加号155
12.4.3 技巧3：加法的可交换性156
12.5 绝对值和abs()函数156
12.6 小结157
第13章 Sonar Treasure Hunt游戏159
13.1 Sonar Treasure Hunt的运行示例160
13.2 Sonar Treasure Hunt的源代码162
13.3 设计程序167
13.4 导入random、sys和math模块167
13.5 创建一个新的游戏板167
13.6 绘制游戏板168
13.6.1 在顶部绘制X轴169
13.6.2 绘制海洋170
13.6.3 打印出海洋中的行170
13.6.4 在游戏板底部绘制X轴坐标171
13.7 创建随机的藏宝箱171
13.8 判断一次移动是否有效172
13.9 在游戏板上进行一次移动172
13.9.1 找到最近的藏宝箱的算法172
13.9.2 使用列表方法remove()删除值175
13.9.3 获取玩家的移动176
13.10 为玩家打印出游戏说明177
13.11 游戏循环177
13.11.1 为玩家显示游戏的状态179
13.11.2 处理玩家的移动179
13.11.3 找到一个沉没的藏宝箱179
13.11.4 判断玩家是否赢了180
13.11.5 判断玩家是否输了180
13.11.6 用sys.exit()函数终止程序181
13.12 小结181
第14章 凯撒密码183
14.1 密码学和加密184
14.2 凯撒密码简介184
14.3 凯撒密码的运行示例185
14.4 凯撒密码程序的源代码186
14.5 设置最大键长度187
14.6 决定加密还是解密187
14.7 从玩家处得到消息188
14.8 从玩家处得到密钥188
14.9 加密或解密消息188
14.9.1 使用字符串方法find()找到所传递的字符串189
14.9.2 加密或解密每个字母190
14.10 程序开始191
14.11 暴力破解191
14.12 添加暴力破解模式192
14.13 小结193
第15章 Reversegam游戏195
15.1 如何玩Reversegam195
15.2 Reversegam的运行示例198
15.3 Reversegam的源代码200
15.4 导入模块和设置常量205
15.5 游戏板数据结构205
15.5.1 在屏幕上绘制游戏板数据结构205
15.5.2 创建一个新的游戏板数据结构206
15.6 判断一次落子是否有效207
15.6.1 查看8个方向中的每一个方向208
15.6.2 发现是否有可以反转的棋子209
15.7 判断有效的坐标210
15.7.1 得到所有有效移动的一个列表210
15.7.2 调用bool()函数211
15.8 计算游戏板的得分212
15.9 获取玩家的棋子选择212
15.10 决定谁先走213
15.11 在游戏板上落下一个棋子213
15.12 复制游戏板数据结构214
15.13 判断一个格子是否在角落上214
15.14 获取玩家的移动214
15.15 获取计算机的移动216
15.15.1 角落移动策略216
15.15.2 获取最高得分的移动的列表217
15.16 在屏幕上打印分数218
15.17 游戏开始218
15.17.1 检查僵局218
15.17.2 运行玩家的轮次219
15.17.3 运行计算机的轮次220
15.18 游戏循环221
15.19 询问玩家是否再玩一局222
15.20 小结222
第16章 Reversegam AI模拟223
16.1 让计算机和自己下棋224
16.1.1 模拟程序1的运行示例224
16.1.2 模拟程序1的源代码225
16.1.3 删除玩家提示并添加一个计算机玩家226
16.2 让计算机自己多玩几次227
16.2.1 模拟程序2的运行示例227
16.2.2 模拟程序2的源代码227
16.2.3 记录多次游戏228
16.2.4 注释掉print()函数调用229
16.2.5 使用百分数评级AI229
16.3 比较不同的AI算法231
16.3.1 模拟程序3的源代码231
16.3.2 模拟程序3的AI是如何工作的232
16.3.3 比较AI235
16.4 小结237
第17章 创建图形239
17.1 安装pygame240
17.2 pygame中的Hello World240
17.3 运行pygame Hello World程序的示例240
17.4 pygame Hello World的源代码241
17.5 导入pygame模块242
17.6 初始化pygame243
17.7 设置pygame窗口243
17.7.1 元组243
17.7.2 Surface对象244
17.8 设置颜色变量244
17.9 将文本写到pygame窗口上245
17.9.1 使用字体来样式化文本245
17.9.2 渲染一个Font对象246
17.9.3 使用Rect属性设置文本位置247
17.10 用一种颜色填充一个Surface对象248
17.11 pygame的绘制函数249
17.11.1 绘制一个多边形249
17.11.2 绘制直线250
17.11.3 绘制圆形250
17.11.4 绘制椭圆形251
17.11.5 绘制矩形251
17.11.6 给像素着色252
17.12 Surface对象的blit()方法252
17.13 将Surface对象绘制到屏幕上253
17.14 事件和游戏循环253
17.14.1 获取事件对象253
17.14.2 退出程序254
17.15 小结254
第18章 动画图形255
18.1 Animation程序的运行示例255
18.2 Animation程序的源代码256
18.3 让积木移动和弹回258
18.4 设置常量变量258
18.4.1 用于方向的常量变量259
18.4.2 用于颜色的常量变量260
18.5 设置积木数据结构260
18.6 游戏循环260
18.6.1 处理玩家退出的情况261
18.6.2 移动每一个积木261
18.6.3 弹跳一个积木262
18.6.4 将积木绘制到窗口中新的位置263
18.6.5 在屏幕上绘制窗口264
18.7 小结264
第19章 碰撞检测265
19.1 碰撞检测程序的运行示例266
19.2 Collision Detection程序的源代码266
19.3 导入模块268
19.4 使用一个时钟来同步程序268
19.5 创建窗口和数据结构269
19.6 设置变量以记录移动270
19.7 处理事件270
19.7.1 处理KEYDOWN事件271
19.7.2 处理KEYUP事件273
19.8 转移玩家274
19.9 添加新的食物方块274
19.10 在屏幕上移动玩家275
19.10.1 将玩家绘制到屏幕上275
19.10.2 检查碰撞276
19.11 在窗口上绘制食物方块276
19.12 小结277
第20章 声音和图像279
20.1 使用精灵添加图像279
20.2 声音文件和图像文件280
20.3 Sprites and Sounds程序的运行示例281
20.4 Sprites and Sounds程序的源代码281
20.5 创建窗口和数据结构284
20.5.1 添加一个精灵284
20.5.2 改变一个精灵的大小284
20.6 创建音乐和声音285
20.6.1 添加声音文件285
20.6.2 切换和关闭声音285
20.7 把玩家绘制到窗口上286
20.8 检查碰撞286
20.9 在窗口中绘制樱桃287
20.10 小结287
第21章 带有声音和图像的Dodger289
21.1 回顾pygame的基本数据类型289
21.2 Dodger的运行示例290
21.3 Dodger的源代码291
21.4 导入模块295
21.5 创建常量295
21.6 定义函数296
21.6.1 终止和暂停游戏296
21.6.2 记录和敌人的碰撞297
21.6.3 将文本绘制到窗口297
21.7 初始化pygame并设置窗口298
21.8 设置Font、Sound和Image对象299
21.9 显示开始界面300
21.10 开始游戏300
21.11 游戏循环302
21.11.1 处理键盘事件302
21.11.2 处理鼠标移动303
21.12 增加新的敌人303
21.13 移动玩家角色和敌人305
21.14 实现作弊模式306
21.15 删除敌人306
21.16 绘制窗口307
21.16.1 绘制玩家的得分307
21.16.2 绘制玩家角色和敌人307
21.17 碰撞检测308
21.18 游戏结束屏幕308
21.19 修改Dodger游戏309
21.20 小结310
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python游戏编程快速上手 第4版
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python程序设计开发宝典
目录
第1章管中窥豹: Python概述1
1.1Python是这样一种语言1
1.2Python版本之争1
1.3Python编程规范与代码优化建议2
1.4Python虚拟开发环境的搭建4
1.5Eclipse PyDev环境搭建和使用4
1.6安装扩展库的几种方法6
1.7标准库与扩展库中对象的导入与使用7
1.7.1import 模块名 ［as 别名］8
1.7.2from模块名import对象名［as别名］8
1.7.3from 模块名 import9
1.7.4模块导入时的搜索路径10
1.8编写与发布自己的包10
1.9Python程序伪编译与打包12
1.10从命令行参数和配置文件获取信息14
第2章万丈高楼平地起: 运算符、表达式与内置对象16
2.1Python常用内置对象16
2.1.1常量与变量17
2.1.2数字18
2.1.3字符串21
2.1.4列表、元组、字典、集合22
2.2Python运算符与表达式23
2.2.1算术运算符24
2.2.2关系运算符25
2.2.3成员测试运算符in与同一性测试运算符is26
2.2.4位运算符与集合运算符27
2.2.5逻辑运算符28
2.2.6矩阵乘法运算符@29〖1〗〖2〗Python程序设计开发宝典〖1〗目录〖2〗2.2.7补充说明29
2.3Python关键字简要说明30
2.4Python常用内置函数用法精要31
2.4.1类型转换与类型判断34
2.4.2最值与求和38
2.4.3基本输入输出40
2.4.4排序与逆序42
2.4.5枚举与迭代43
2.4.6map()、reduce()、filter()45
2.4.7range()48
2.4.8zip()48
2.4.9eval()、exec()49
第3章玄之又玄，众妙之门: 详解Python序列结构51
3.1列表: 打了激素的数组51
3.1.1列表创建与删除52
3.1.2列表元素访问53
3.1.3列表常用方法54
3.1.4列表对象支持的运算符59
3.1.5内置函数对列表的操作61
3.1.6使用列表模拟向量运算62
3.1.7列表推导式语法与应用案例63
3.1.8切片操作的强大功能70
3.2元组: 轻量级列表73
3.2.1元组创建与元素访问73
3.2.2元组与列表的异同点74
3.2.3生成器推导式75
3.3字典: 反映对应关系的映射类型76
3.3.1字典创建与删除77
3.3.2字典元素的访问77
3.3.3元素的添加、修改与删除79
3.3.4标准库collections中与字典有关的类80
3.4集合: 元素之间不允许重复81
3.4.1集合对象的创建与删除81
3.4.2集合操作与运算82
3.4.3不可变集合frozenset84
3.4.4集合应用案例84
3.5序列解包的多种形式和用法86
3.6标准库中的其他常用数据类型88
3.6.1枚举类型88
3.6.2数组类型89
3.6.3队列90
3.6.4具名元组92
3.6.5堆92
第4章反者，道之动: 程序控制结构94
4.1条件表达式94
4.2选择结构96
4.2.1单分支选择结构96
4.2.2双分支选择结构97
4.2.3多分支选择结构98
4.2.4选择结构的嵌套99
4.2.5构建跳转表实现多分支选择结构100
4.3循环结构100
4.3.1for循环与while循环100
4.3.2break与continue语句101
4.3.3循环代码优化技巧102
4.4精彩案例赏析103
第5章代码复用技术(一): 函数111
5.1函数定义与使用111
5.1.1基本语法111
5.1.2函数嵌套定义、可调用对象与修饰器113
5.1.3函数对象成员的动态性117
5.1.4函数递归调用117
5.2函数参数118
5.2.1位置参数120
5.2.2默认值参数120
5.2.3关键参数122
5.2.4可变长度参数122
5.2.5强制函数的某些参数必须以关键参数形式进行传值123
5.2.6强制函数的所有参数必须以位置参数形式进行传值124
5.2.7传递参数时的序列解包125
5.2.8标注函数参数与返回值类型126
5.3变量作用域127
5.3.1全局变量与局部变量127
5.3.2nonlocal变量130
5.4lambda表达式130
5.5生成器函数设计要点133
5.6偏函数与函数柯里化135
5.7单分发器与泛型函数136
5.8协程函数138
5.9注册程序退出时必须执行的函数140
5.10回调函数原理与实现140
5.11精彩案例赏析141
第6章代码复用技术(二): 面向对象程序设计167
6.1类的定义与使用167
6.1.1基本语法167
6.1.2type类168
6.1.3定义带修饰器的类169
6.2数据成员与成员方法171
6.2.1私有成员与公有成员171
6.2.2数据成员172
6.2.3成员方法、类方法、静态方法、抽象方法173
6.2.4属性175
6.2.5类与对象的动态性、混入机制177
6.3继承、多态、依赖注入179
6.3.1继承179
6.3.2多态181
6.3.3依赖注入技术的不同实现方法182
6.4特殊方法与运算符重载185
6.5精彩案例赏析187
6.5.1自定义队列187
6.5.2自定义栈191
6.5.3自定义集合193
6.5.4自定义数组199
6.5.5自定义双链表204
6.5.6自定义常量类206
6.5.7自定义不允许修改值的字典207
6.5.8自定义支持with关键字的类208
第7章文本处理(一): 字符串209
7.1字符串编码格式简介210
7.2转义字符与原始字符串211
7.3字符串格式化212
7.3.1使用%符号进行格式化212
7.3.2使用format()方法进行字符串格式化213
7.3.3格式化的字符串常量215
7.3.4使用Template模板进行格式化215
7.4字符串常用操作216
7.4.1find()、rfind()、index()、rindex()、count()216
7.4.2split()、rsplit()、partition()、rpartition()217
7.4.3join()219
7.4.4lower()、upper()、capitalize()、title()、swapcase()220
7.4.5replace()、maketrans()、translate()220
7.4.6strip()、rstrip()、lstrip()221
7.4.7startswith()、endswith()222
7.4.8isalnum()、isalpha()、isdigit()、isdecimal()、isnumeric()、
isspace()、isupper()、islower()222
7.4.9center()、ljust()、rjust()、zfill()223
7.4.10字符串对象支持的运算符224
7.4.11适用于字符串对象的内置函数226
7.4.12字符串对象的切片操作228
7.5其他有关模块228
7.5.1textwrap模块228
7.5.2zlib模块提供的压缩功能231
7.6字符串常量232
7.7可变字符串232
7.8中英文分词234
7.9汉字到拼音的转换235
7.10精彩案例赏析236
第8章文本处理(二): 正则表达式239
8.1正则表达式语法239
8.1.1正则表达式基本语法239
8.1.2正则表达式扩展语法240
8.1.3正则表达式锦集241
8.2直接使用正则表达式模块re处理字符串242
8.3使用正则表达式对象处理字符串246
8.4match对象248
8.5精彩案例赏析250
第9章数据永久化: 文件内容操作257
9.1文件操作基本知识258
9.1.1内置函数open()258
9.1.2文件对象属性与常用方法260
9.1.3上下文管理语句with261
9.2文本文件内容操作案例精选261
9.3二进制文件操作案例精选266
9.3.1使用pickle模块读写二进制文件267
9.3.2使用struct模块读写二进制文件268
9.3.3使用shelve模块操作二进制文件269
9.3.4使用marshal模块操作二进制文件270
9.3.5其他常见类型二进制文件操作案例271
第10章文件与文件夹操作281
10.1os模块281
10.2os.path模块284
10.3shutil模块286
10.4其他常用模块287
10.4.1glob模块287
10.4.2fnmatch模块288
10.5精彩案例赏析289
第11章代码质量保障: 异常处理结构、程序调试与测试293
11.1异常处理结构293
11.1.1异常的概念与表现形式293
11.1.2Python内置异常类层次结构294
11.1.3异常处理结构296
11.1.4断言与上下文管理语句301
11.2文档测试doctest301
11.3单元测试unittest304
11.4覆盖测试307
11.5软件性能测试308
11.6代码调试310
11.6.1使用IDLE调试310
11.6.2使用Eclipse PyDev进行代码调试311
11.6.3使用pdb调试313
第12章多任务与并行处理: 线程、进程、协程、分布式、GPU加速318
12.1多线程编程318
12.1.1线程概念与标准库threading318
12.1.2线程对象320
12.1.3线程调度323
12.1.4Lock/RLock对象324
12.1.5Condition对象326
12.1.6Queue对象328
12.1.7Event对象332
12.1.8Semaphore与BoundedSemaphore333
12.1.9Barrier对象334
12.2多进程编程335
12.2.1进程创建与管理335
12.2.2进程同步技术336
12.2.3Pool对象337
12.2.4Manager对象341
12.2.5Listener与Client对象345
12.2.6进程间数据交换与共享345
12.2.7标准库subprocess348
12.3协程349
12.4concurrent.futures模块提供的并发执行功能351
12.5pySpark并行计算与分布式计算框架353
12.6GPU编程359
12.6.1使用pycuda实现GPU加速359
12.6.2使用pyopencl实现GPU加速360
12.6.3使用tensorflow实现GPU加速362
第13章互通互联: asyncio提供的网络通信功能364
13.1Transport类与Protocol类364
13.2StreamReader与StreamWriter369
附录精彩在继续373
附录AGUI开发373
附录BSQLite数据库操作376
附录C计算机图形学编程377
附录D图像编程380
附录E数据分析、机器学习、科学计算可视化383
附录F密码学编程383
附录G系统运维384
附录HWindows系统编程384
附录I软件分析与逆向工程386
参考文献388
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python程序设计开发宝典
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python硬件编程实战
前言
第1章　Python简介 / 1
1.1　Python是什么 / 1
1.2　对Python的四种定义 / 1
1.2.1　一种脚本语言 / 1
1.2.2　一种解释型语言 / 3
1.2.3　一种高级语言 / 3
1.2.4　一种面向对象的语言 / 4
1.3　Python的特点 / 5
1.3.1　作为脚本语言的优缺点 / 5
1.3.2　Python自身的特点 / 7
1.4　Python的应用 / 9
1.4.1　Python能干什么 / 10
1.4.2　Python更适合做些什么 / 10
1.4.3　你能用Python干什么 / 12
1.5　Python的必备常识 / 13
1.5.1　Python文件的后缀 / 13
1.5.2　Python的缩写和简称 / 13
1.5.3　Python的官网 / 13
1.5.4　Python的Logo / 13
第2章　下载并安装Python / 14
2.1　因Python版本不合适而导致的常见问题 / 14
2.2　Python的两大版本 / 15
2.2.1　Python版本历史 / 15
2.2.2　Python 2和Python 3之间的区别 / 16
2.3　如何选择合适的版本 / 20
2.3.1　选择Python 2还是Python 3 / 21
2.3.2　选择Python是32位还是64位 / 21
2.4　常见软件的发布格式 / 23
2.4.1　源码格式 / 23
2.4.2　二进制格式 / 25
2.5　下载合适的Python安装包 / 26
2.5.1　Python提供了哪些形式 / 26
2.5.2　选择更稳定、更快速的国内下载源 / 29
2.6　如何在Windows系统中安装Python / 29
2.6.1　在Windows 7中安装Python / 29
2.6.2　在Windows中安装Python后的常见问题 / 35
2.7　在Linux系统中安装Python / 36
2.7.1　在Ubuntu中安装Python / 36
2.7.2　为何不推荐初学者在Ubuntu中安装Python / 37
2.8　在Mac中安装Python / 38
第3章　选择合适的Python开发环境 / 39
3.1　不同平台下开发Python时共用的东西 / 39
3.2　不同平台下开发Python时的共同特点 / 40
3.2.1　Python最原始的开发方式 / 41
3.2.2　利用Python的shell进行交互式开发 / 41
3.2.3　利用Python的IDE进行开发 / 43
3.3　Python的IDE / 44
3.3.1　Python的IDE和编辑器、终端等的关系 / 44
3.3.2　Python的常见IDE / 46
3.3.3　Python IDE常见问题及解答 / 62
3.4　在Windows环境下进行Python开发 / 65
3.4.1　最原始的Python开发方式 / 65
3.4.2　用Python的shell进行交互式开发 / 72
3.4.3　用Python的IDE进行开发 / 79
3.5　在Linux环境下进行Python开发 / 79
3.5.1　Python最原始的开发方式 / 80
3.5.2　用Python的shell进行交互式开发 / 82
3.5.3　用Python的IDE进行开发 / 83
3.6　在Mac环境下进行Python开发 / 83
3.6.1　Python最原始的开发方式 / 83
3.6.2　用Python的shell进行交互式开发 / 86
3.6.3　用Python的IDE进行开发 / 86
3.7　究竟应选用哪种环境开发Python / 87
第4章　Python的基础知识 / 89
4.1　SheBang和Python文件编码声明 / 89
4.1.1　#!/usr/bin/python / 89
4.1.2　Python文件编码声明 / 89
4.2　Python中的缩进 / 92
4.2.1　其他语言的缩进只影响代码的美观 / 92
4.2.2　Python的缩进会影响代码的逻辑 / 93
4.3　Python中__name__和__main__的含义 / 98
4.3.1　__name__详解 / 98
4.3.2　__main__详解 / 99
4.3.3　__name__和__main__搭配使用的目的 / 99
4.4　Python中的面向对象编程 / 103
4.4.1　self和__init__的含义 / 103
4.4.2　初学者不要从最开始就太关注面向对象 / 109
4.5　Python中的变量 / 109
4.5.1　基本变量的声明和定义 / 109
4.5.2　变量的作用域 / 112
4.6　Python中的分支结构 / 115
4.7　Python中的函数 / 116
第5章　一些有趣的Python小实验 / 118
5.1　用Python查看系统平台信息 / 118
5.2　Python处理谐波和信号变换 / 119
5.3　更多有用且有趣的Python语法 / 123
5.3.1　Python中交换不同的变量值 / 124
5.3.2　Python中集合类的变量的切片 / 124
5.3.3　Python中的for循环和枚举器 / 125
5.3.4　Python中的条件性赋值 / 126
第6章　常见Python应用实例 / 127
6.1　Python在网络方面的应用 / 127
6.2　Python在图形界面方面的应用 / 132
6.2.1　Python的常见GUI图形库 / 132
6.2.2　Python的GUI图形库：PyQt / 132
6.3　Python在数据库方面的应用 / 136
第7章　Python与开源硬件 / 141
7.1　Python和开源硬件之间的关系 / 141
7.2　pcDuino基础知识 / 141
7.2.1　什么是开源硬件 / 141
7.2.2　常见的开源硬件 / 142
7.2.3　为何选择pcDuino / 146
7.2.4　如何配置开源硬件pcDuino / 147
7.3　在开源硬件pcDuino上使用Python / 155
7.3.1　Web服务器 / 156
7.3.2　漏水监测 / 162
7.3.3　使用Z-Wave实现智能家居 / 166
附录A　如何利用Python的相关资源 / 174
附录B　如何继续深入学习Python / 181
附录C　Python学习资料 / 182
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python硬件编程实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>机器学习系统设计
译者序
前言
第1章机器学习的思维1
1.1人机界面1
1.2设计原理4
1.2.1问题的类型6
1.2.2问题是否正确7
1.2.3任务8
1.2.4统一建模语言27
1.3总结31
第2章工具和技术32
2.1Python与机器学习33
2.2IPython控制台33
2.3安装SciPy栈34
2.4NumPy35
2.4.1构造和变换数组38
2.4.2数学运算39
2.5Matplotlib41
2.6Pandas45
2.7SciPy47
2.8Scikit—learn50
2.9总结57
第3章将数据变为信息58
3.1什么是数据58
3.2大数据59
3.2.1大数据的挑战60
3.2.2数据模型62
3.2.3数据分布63
3.2.4来自数据库的数据67
3.2.5来自互联网的数据68
3.2.6来自自然语言的数据70
3.2.7来自图像的数据72
3.2.8来自应用编程接口的数据72
3.3信号74
3.4数据清洗76
3.5数据可视化78
3.6总结80
第4章模型—从信息中学习81
4.1逻辑模型81
4.1.1一般性排序83
4.1.2解释空间84
4.1.3覆盖空间86
4.1.4PAC学习和计算复杂性87
4.2树状模型88
4.3规则模型92
4.3.1有序列表方法94
4.3.2基于集合的规则模型95
4.4总结98
第5章线性模型100
5.1最小二乘法101
5.1.1梯度下降102
5.1.2正规方程法107
5.2logistic回归109
5.3多分类113
5.4正则化115
5.5总结117
第6章神经网络119
6.1神经网络入门119
6.2logistic单元121
6.3代价函数126
6.4神经网络的实现128
6.5梯度检验133
6.6其他神经网络架构134
6.7总结135
第7章特征—算法眼中的世界136
7.1特征的类型137
7.1.1定量特征137
7.1.2有序特征138
7.1.3分类特征138
7.2运算和统计139
7.3结构化特征141
7.4特征变换141
7.4.1离散化143
7.4.2归一化144
7.4.3校准145
7.5主成分分析149
7.6总结151
第8章集成学习152
8.1集成学习的类型152
8.2Bagging方法153
8.2.1随机森林154
8.2.2极端随机树155
8.3Boosting方法159
8.3.1AdaBoost161
8.3.2梯度Boosting163
8.4集成学习的策略165
8.5总结168
第9章设计策略和案例研究169
9.1评价模型的表现169
9.2模型的选择174
9.3学习曲线176
9.4现实世界中的案例研究178
9.4.1建立一个推荐系统178
9.4.2温室虫害探测185
9.5机器学习一瞥188
9.6总结190
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>机器学习系统设计
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>机器学习系统设计：python语言实现
CONTENTS
目录
译者序
前言
第1章　机器学习的思维1
1.1　人机界面1
1.2　设计原理4
1.2.1　问题的类型6
1.2.2　问题是否正确7
1.2.3　任务8
1.2.4　统一建模语言27
1.3　总结31
第2章　工具和技术32
2.1　Python与机器学习33
2.2　IPython控制台33
2.3　安装SciPy栈34
2.4　NumPy35
2.4.1　构造和变换数组38
2.4.2　数学运算39
2.5　Matplotlib41
2.6　Pandas45
2.7　SciPy47
2.8　Scikit-learn50
2.9　总结57
第3章　将数据变为信息58
3.1　什么是数据58
3.2　大数据59
3.2.1　大数据的挑战60
3.2.2　数据模型62
3.2.3　数据分布63
3.2.4　来自数据库的数据67
3.2.5　来自互联网的数据68
3.2.6　来自自然语言的数据70
3.2.7　来自图像的数据72
3.2.8　来自应用编程接口的数据72
3.3　信号74
3.4　数据清洗76
3.5　数据可视化78
3.6　总结80
第4章　模型—从信息中学习81
4.1　逻辑模型81
4.1.1　一般性排序83
4.1.2　解释空间84
4.1.3　覆盖空间86
4.1.4　PAC学习和计算复杂性87
4.2　树状模型88
4.3　规则模型92
4.3.1　有序列表方法94
4.3.2　基于集合的规则模型95
4.4　总结98
第5章　线性模型100
5.1　最小二乘法101
5.1.1　梯度下降102
5.1.2　正规方程法107
5.2　logistic回归109
5.3　多分类113
5.4　正则化115
5.5　总结117
第6章　神经网络119
6.1　神经网络入门119
6.2　logistic单元121
6.3　代价函数126
6.4　神经网络的实现128
6.5　梯度检验133
6.6　其他神经网络架构134
6.7　总结135
第7章　特征—算法眼中的世界136
7.1　特征的类型137
7.1.1　定量特征137
7.1.2　有序特征138
7.1.3　分类特征138
7.2　运算和统计139
7.3　结构化特征141
7.4　特征变换141
7.4.1　离散化143
7.4.2　归一化144
7.4.3　校准145
7.5　主成分分析149
7.6　总结151
第8章　集成学习152
8.1　集成学习的类型152
8.2　Bagging方法153
8.2.1　随机森林154
8.2.2　极端随机树155
8.3　Boosting方法159
8.3.1　AdaBoost161
8.3.2　梯度Boosting163
8.4　集成学习的策略165
8.5　总结168
第9章　设计策略和案例研究169
9.1　评价模型的表现169
9.2　模型的选择174
9.3　学习曲线176
9.4　现实世界中的案例研究178
9.4.1　建立一个推荐系统178
9.4.2　温室虫害探测185
9.5　机器学习一瞥188
9.6　总结190
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>机器学习系统设计：python语言实现
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数字信号处理应用
第 1章 声音和信号	1
1.1 周期信号	1
1.2 频谱分析	3
1.3 信号	4
1.4 波形的读写	6
1.5 频谱	7
1.6 波形对象	7
1.7 信号对象	8
1.8 练习	10
第 2章 谐波	11
2.1 三角波	11
2.2 方波	13
2.3 混叠	15
2.4 计算频谱	17
2.5 练习	18
第3章 非周期信号	20
3.1 线性啁啾（Chirp）	20
3.2 指数啁啾	22
3.3 啁啾信号的频谱	23
3.4 频谱图	24
3.5 Gabor限制	25
3.6 泄露	26
3.7 加窗	27
3.8 频谱图的实现	28
3.9 练习	30
第4章 噪声	32
4.1 不相关噪声	32
4.2 累积频谱	34
4.3 布朗噪声	35
4.4 粉噪	38
4.5 高斯噪声	40
4.6 练习	41
第5章 自相关	43
5.1 相关	43
5.2 序列相关	45
5.3 自相关	47
5.4 周期信号的自相关	48
5.5 相关的点积形式	51
5.6 使用NumPy	51
5.7 练习	52
第6章 离散余弦变换	54
6.1 合成	54
6.2 使用数组合成	55
6.3 分析	57
6.4 正交矩阵	58
6.5 DCT-IV	59
6.6 Inverse DCT（反离散余弦变换）	61
6.7 Dct类	61
6.8 练习	62
第7章 离散傅里叶变换	64
7.1 复指数	64
7.2 复信号	66
7.3 合成问题	67
7.4 使用矩阵合成	68
7.5 分析问题	70
7.6 快速分析	70
7.7 DFT	71
7.8 DFT是周期性的	73
7.9 实信号的DFT	73
7.10 练习	75
第8章 滤波与卷积	76
8.1 平滑	76
8.2 卷积	79
8.3 频域	79
8.4 卷积定理	81
8.5 高斯滤波器	82
8.6 高效卷积	83
8.7 高效自相关	85
8.8 练习	86
第9章 微分和积分	87
9.1 有限差分	87
9.2 频域	89
9.3 微分	89
9.4 积分	91
9.5 累积和	93
9.6 积分噪声	96
9.7 练习	96
第 10章 LTI系统	98
10.1 信号与系统	98
10.2 窗和滤波器	100
10.3 声学响应	101
10.4 系统和卷积	103
10.5 卷积定理的证明	106
10.6 练习	108
第 11章 调制和采样	109
11.1 脉冲卷积	109
11.2 调幅	110
11.3 采样	113
11.4 混叠	115
11.5 插值	118
11.6 总结	119
11.7 练习	120
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数字信号处理应用
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据挖掘
译者序
关于审稿人
前言
第1章　扩展你的数据挖掘工具箱1
1.1　什么是数据挖掘2
1.2　如何进行数据挖掘4
1.2.1　Fayyad等人的KDD过程4
1.2.2　韩家炜等人的KDD过程4
1.2.3　CRISP-DM过程5
1.2.4　六步过程6
1.2.5　哪一种数据挖掘方法最好6
1.3　在数据挖掘中使用哪些技术7
1.4　如何建立数据挖掘工作环境9
1.5　小结14
第2章　关联规则挖掘16
2.1　什么是频繁项集16
2.1.1　都市传奇“尿布与啤酒”17
2.1.2　频繁项集挖掘基础知识18
2.2　迈向关联规则19
2.2.1　支持度20
2.2.2　置信度20
2.2.3　关联规则21
2.2.4　包含数据的示例21
2.2.5　附加值—修复计划中的漏洞22
2.2.6　寻找频繁项集的方法24
2.3　项目—发现软件项目标签中的关联规则25
2.4　小结38
第3章　实体匹配39
3.1　什么是实体匹配40
3.1.1　数据合并42
3.1.2　匹配技术45
3.1.3　基于属性的相似度匹配45
3.1.4　属性匹配方法46
3.1.5　利用不相交数据集48
3.1.6　基于上下文的相似度匹配48
3.1.7　基于机器学习的实体匹配49
3.1.8　实体匹配技术的评估50
3.2　实体匹配项目53
3.2.1　软件项目匹配的难度53
3.2.2　两个例子53
3.2.3　根据项目名称匹配55
3.2.4　根据人名匹配55
3.2.5　根据URL匹配55
3.2.6　按照主题和描述关键词匹配56
3.2.7　数据集57
3.2.8　代码58
3.2.9　结果63
3.3　小结66
第4章　网络分析68
4.1　什么是网络68
4.2　网络计量71
4.2.1　网络的度数71
4.2.2　网络直径72
4.2.3　网络中的通路、路径和迹72
4.2.4　网络的成分73
4.2.5　图的中心性73
4.3　图数据的表示76
4.3.1　邻接矩阵76
4.3.2　边表和邻接表77
4.3.3　图数据结构之间的差别77
4.3.4　将数据导入图结构中78
4.4　真实项目84
4.4.1　探索数据84
4.4.2　生成网络文件89
4.4.3　以网络的形式理解数据91
4.5　小结107
第5章　文本情绪分析109
5.1　什么是情绪分析110
5.2　情绪分析基础知识111
5.2.1　观点的结构111
5.2.2　文档级和句子级分析112
5.2.3　观点的重要特征113
5.3　情绪分析算法114
5.4　情绪挖掘应用116
5.4.1　项目动机117
5.4.2　数据准备117
5.4.3　聊天消息的数据分析120
5.4.4　电子邮件消息的数据分析124
5.5　小结130
第6章　文本中的命名实体识别131
6.1　为什么寻找命名实体？131
6.2　命名实体识别技术134
6.3　NER系统的构建与评估137
6.3.1　NER和部分匹配137
6.3.2　处理部分匹配138
6.4　命名实体识别项目140
6.5　小结149
第7章　自动化文本摘要150
7.1　什么是自动化文本摘要151
7.2　文本摘要工具151
7.2.1　使用NTLK的简单文本摘要152
7.2.2　使用Gensim的文本摘要155
7.2.3　使用Sumy的文本摘要157
7.3　小结163
第8章　文本中的主题建模164
8.1　什么是主题建模164
8.2　潜在狄利克雷分配166
8.3　Gensim主题建模167
8.3.1　理解Gensim LDA主题169
8.3.2　理解Gensim LDA的遍数170
8.3.3　对新文档应用Gensim LDA模型172
8.3.4　序列化Gensim LDA对象172
8.4　用于更大项目的Gensim LDA174
8.5　小结176
第9章　挖掘数据异常178
9.1　什么是数据异常178
9.1.1　缺失数据179
9.1.2　修复缺失数据181
9.1.3　数据错误184
9.1.4　离群值186
9.2　小结194
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据挖掘
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>趣学Python
第1 部分　学习编程
第1 章　Python 不是大蟒蛇 3
11　关于计算机语言 4
12　安装Python 5
121　在Windows 7 上安装Python 5
122　在苹果OS X 上安装Python 7
123　在Ubuntu 上安装Python 9
13　当你安装好Python 以后 10
14　保存Python 程序 11
15　你学到了什么 12
第2 章　计算与变量 13
21　用Python 来做计算 14
211　Python 的运算符 15
212　运算的顺序 15
22　变量就像是标签 17
23　使用变量 18
24　你学到了什么 20
第3 章　字符串、列表、元组和字典 21
31　字符串 22
311　创建字符串 22
312　处理字符串相关的问题 23
313　在字符串里嵌入值 25
314　字符串乘法 27
32　列表比字符串还强大 28
2　趣学Python—教孩子学编程
321　添加元素到列表 30
322　从列表中删除元素 31
323　列表上的算术 31
33　元组 33
34　Python 里的map 不是用来指路的 34
35　你学到了什么 36
36　编程小测验 36
第4 章　用海龟画图 39
41　使用Python 的turtle（海龟）模块 40
411　创建画布 40
412　移动海龟 42
42　你学到了什么 45
43　编程小测验 45
第5 章　用if 和else 来提问 47
51　if 语句 48
52　语句块就是一组程序语句 48
53　条件语句帮助我们做比较 50
54　if-then-else 语句 52
55　if 和elif 语句 53
56　组合条件 54
57　没有值的变量——None 54
58　字符串与数字之间的不同 55
59　你学到了什么 57
510　编程小测验 58
第6 章　循环 59
61　使用for 循环 60
62　还有一种叫while 的循环 66
63　你学到了什么 69
64　编程小测验 69
第7 章　使用函数和模块来重用你的代码 71
71　使用函数 72
711　函数的组成部分 72
712　变量和作用域 74
72　使用模块 76
73　你学到了什么 78
74　编程小测验 78
第8 章　如何使用类和对象 81
81　把事物拆分成类 82
811　父母与孩子 83
812　增加属于类的对象 84
813　定义类中的函数 84
814　用函数来表示类的特征 85
815　为什么要使用类和对象 86
816　画图中的对象与类 88
82　对象和类的另一些实用功能 90
821　函数继承 91
822　从函数里调用其他函数 92
83　初始化对象 93
84　你学到了什么 94
85　编程小测验 94
第9 章　Python 的内建函数 97
91　使用内建函数 98
911　abs 函数 98
912　bool 函数 99
913　dir 函数 100
914　eval 函数 102
915　exec 函数 103
916　fl oat 函数 103
917　int 函数 104
918　len 函数 104
919　max 和min 函数 105
4　趣学Python—教孩子学编程
9110　range 函数 107
9111　sum 函数 108
92　使用文件 108
921　创建测试文件 108
922　在Python 中打开文件 110
923　写入到文件 112
93　你学到了什么 112
94　编程小测验 113
第10 章　常用的Python 模块 115
101　使用copy 模块来复制 116
102　keyword 模块记录了所有的关键字 118
103　用random 模块获得随机数 119
1031　用randint 来随机挑选一个数字 119
1032　用choice 从列表中随机选取一个元素 121
1033　用shuffl e 来给列表洗牌 121
104　用sys 模块来控制Shell 程序 122
1041　用exit 函数来退出Shell 程序 122
1042　从stdin 对象读取 122
1043　用stdout 对象来写入 123
1044　我用的Python 是什么版本的 123
105　用time 模块来得到时间 124
1051　用asctime 来转换日期 125
1052　用localtime 来得到日期和时间 126
1053　用sleep 来休息一会儿吧 126
106　用pickle 模块来保存信息 127
107　你学到了什么 128
108　编程小测验 129
第11 章　高级海龟作图 131
111　从基本的正方形开始 132
112　画星星 132
113　画汽车 136
114　填色 137
1141　用来画填色圆形的函数 138
1142　使用纯白和纯黑 139
115　画方形的函数 140
116　画填色正方形 141
117　画填好色的星星 143
118　你学到了什么 144
119　编程小测验 144
第12 章　用tkinter 画高级图形 147
121　创造一个可以点的按钮 148
122　使用具名参数 150
123　创建一个画图用的画布 151
124　画线 151
125　画盒子 153
1251　画许多矩形 154
1252　设置颜色 156
126　画圆弧 159
127　画多边形 161
128　显示文字 161
129　显示图片 162
1210　创建基本的动画 164
1211　让对象对操作有反应 167
1212　更多使用ID 的方法 169
1213　你学到了什么 170
1214　编程小测验 170
第2 部分　弹球实例
第13 章　你的第一个游戏：弹球 175
131　击打反弹球 176
6　趣学Python—教孩子学编程
132　创建游戏的画布 176
133　创建Ball 类 177
134　增加几个动作 179
1341　让小球移动 179
1342　让小球来回反弹 181
1343　改变小球的起始方向 182
135　你学到了什么 185
第14 章　完成你的第一个游戏：反弹吧，小球！ 187
141　加上球拍 188
142　让球拍移动 189
143　增加输赢因素 193
144　你学到了什么 197
145　编程小测验 197
第3 部分　火柴人实例
第15 章　火柴小人游戏的图形 201
151　火柴小人游戏计划 202
152　得到GIMP 202
153　创建游戏中的元素 203
1531　准备一个有透明背景的图形 204
1532　画火柴人 204
1533　画平台 206
1534　画门 206
1535　画背景 207
1536　透明 208
154　你学到了什么 208
第16 章　开发火柴人游戏 209
161　创建Game 类 210
1611　设置窗口标题以及创建画布 210
1612　完成__init__ 函数 211
1613　创建主循环函数 212
162　创建坐标类 213
163　冲突检测 214
1631　精灵在水平方向上冲突 214
1632　精灵在垂直方向上冲突 216
1633　把它们放在一起：最终的冲突检测代码 216
164　创建精灵类 218
165　添加平台类 219
1651　加入平台对象 220
1652　添加很多平台 221
166　你学到了什么 222
167　编程小测验 222
第17 章　创建火柴人 225
171　初始化火柴人 226
1711　装入火柴人图形 226
1712　设置变量 227
1713　与键盘按键绑定 228
172　让火柴人向左转和向右转 228
173　让火柴人跳跃 229
174　我们都做了什么 230
175　你学到了什么 231
第18 章　完成火柴人逃生游戏 233
181　让火柴人动起来 234
1811　创建动画函数 234
1812　得到火柴人的位置 237
1813　让火柴人移动 238
182　测试我们的火柴人精灵 244
183　门 245
1831　创建DoorSprite 类 245
1832　门的检测 246
8　趣学Python—教孩子学编程
1833　加入门对象 246
184　最终的游戏 247
185　你学到了什么 253
186　编程小测验 254
结束语　接下来学什么 255
附录　Python 的关键字 263
术语表 277
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>趣学Python
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python语言程序设计
Introduction to Programming Using Python
出版者的话
译者序
前言
第一部分　程序设计基础
第1章　计算机、程序和Python概述 2
1.1　引言 2
1.2　什么是计算机 3
1.2.1　中央处理器 4
1.2.2　比特和字节 4
1.2.3　内存 5
1.2.4　存储设备 5
1.2.5　输入和输出设备 6
1.2.6　通信设备 7
1.3　程序设计语言 8
1.3.1　机器语言 8
1.3.2　汇编语言 8
1.3.3　高级语言 8
1.4　操作系统 10
1.4.1　控制和管理系统行为 10
1.4.2　调度和分配系统资源 10
1.4.3　调度操作 10
1.5　Python的历史 11
1.6　开始学习Python 11
1.6.1　启动Python 12
1.6.2　创建Python源代码文件 13
1.6.3　使用Python完成算术运算 14
1.7　程序设计风格和文档 15
1.7.1　恰当的注释和注释风格 15
1.7.2　恰当的空格 15
1.8　程序设计错误 16
1.8.1　语法错误 16
1.8.2　运行时错误 16
1.8.3　逻辑错误 16
1.9　开始学习图形化程序设计 17
1.9.1　绘制图形并给图形添加颜色 17
1.9.2　将笔移到任何位置 19
1.9.3　绘制奥林匹克环标志 20
关键术语 21
本章总结 21
测试题 22
编程题 22
第2章　基本程序设计 25
2.1　引言 25
2.2　编写一个简单的程序 25
2.3　从控制台读取输入 27
2.4　标识符 29
2.5　变量、赋值语句和赋值表达式 29
2.6　同时赋值 31
2.7　定名常量 32
2.8　数值数据类型和运算符 32
2.8.1　运算符/、和** 33
2.8.2　运算符% 33
2.8.3　科学记数法 34
2.9　计算表达式和运算符优先级 35
2.10　增强型赋值运算符 35
2.11　类型转换和四舍五入 36
2.12　实例研究：显示当前时间 38
2.13　软件开发流程 39
2.14　实例研究：计算距离 42
关键术语 44
本章总结 44
测试题 45
编程题 45
第3章　数学函数、字符串和对象 50
3.1　引言 50
3.2　常见的Python函数 51
3.3　字符串和字符 54
3.3.1　ASCII码 54
3.3.2　统一码 54
3.3.3　函数ord和chr 54
3.3.4　转义序列 55
3.3.5　不换行打印 56
3.3.6　函数str 56
3.3.7　字符串连接操作 56
3.3.8　从控制台读取字符串 57
3.4　实例研究：最小数量的硬币 58
3.5　对象和方法简介 59
3.6　格式化数字和字符串 61
3.6.1　格式化浮点数 62
3.6.2　用科学记数法格式化 63
3.6.3　格式化成百分数 63
3.6.4　调整格式 63
3.6.5　格式化整数 63
3.6.6　格式化字符串 64
3.7　绘制各种图形 65
3.8　绘制带颜色和字体的图形 67
关键术语 69
本章总结 69
测试题 69
编程题 69
第4章　选择 73
4.1　引言 73
4.2　布尔类型、数值和表达式 73
4.3　产生随机数字 75
4.4　if语句 76
4.5　实例研究：猜生日 77
4.6　双向if-else语句 80
4.7　嵌套if和多向if-elif-else语句 82
4.8　选择语句中的常见错误 85
4.9　实例研究：计算身体质量指数 87
4.10　实例研究：计算税款 88
4.11　逻辑运算符 90
4.12　实例研究：判定闰年 92
4.13　实例研究：彩票 93
4.14　条件表达式 94
4.15　运算符的优先级和结合方向 95
4.16　检测一个对象的位置 96
关键术语 97
本章总结 97
测试题 98
编程题 98
第5章　循环 107
5.1　引言 107
5.2　while循环 108
5.2.1　实例研究：猜数字 110
5.2.2　循环设计策略 112
5.2.3　实例研究：多道减法题测验 112
5.2.4　根据用户确认控制循环 113
5.2.5　使用哨兵值控制循环 113
5.2.6　输入输出重定向 115
5.3　for循环 116
5.4　嵌套循环 118
5.5　最小化数值错误 119
5.6　实例研究 120
5.6.1　问题：找出最大公约数 120
5.6.2　问题：预测未来学费 121
5.6.3　问题：蒙特卡罗模拟 122
5.7　关键字break和continue 123
5.8　实例研究：显示素数 125
5.9　实例研究：随意行走 127
关键术语 129
本章总结 129
测试题 129
编程题 129
第6章　函数 138
6.1　引言 138
6.2　定义一个函数 139
6.3　调用一个函数 140
6.4　带返回值或不带返回值的函数 142
6.5　位置参数和关键字参数 145
6.6　通过传引用来传递参数 146
6.7　模块化代码 148
6.8　实例研究：将十进制数转换为十六进制数 150
6.9　变量的作用域 152
6.10　默认参数 154
6.11　返回多个值 155
6.12　实例研究：生成随机ASCII码字符 155
6.13　函数抽象和逐步求精 157
6.13.1　自顶向下设计 158
6.13.2　自顶向下和自底向上的实现 159
6.13.3　实现细节 160
6.13.4　逐步求精的优势 163
6.14　实例研究：可重用图形函数 163
关键术语 165
本章总结 165
测试题 165
编程题 166
第二部分　面向对象程序设计
第7章　对象和类 176
7.1　引言 176
7.2　为对象定义类 176
7.2.1　定义类 177
7.2.2　构造对象 178
7.2.3　访问对象成员 179
7.2.4　self参数 179
7.2.5　举例：使用类 180
7.3　UML类图 181
7.4　不变对象和可变对象 184
7.5　隐藏数据域 186
7.6　类的抽象与封装 188
7.7　面向对象的思考 191
关键术语 193
本章总结 194
测试题 194
编程题 194
第8章　更多字符串和特殊方法 198
8.1　引言 198
8.2　str类 198
8.2.1　创建字符串 199
8.2.2　处理字符串的函数 199
8.2.3　下标运算符[] 200
8.2.4　截取运算符[start：end] 200
8.2.5　连接运算符+和复制运算符* 201
8.2.6　in和not in运算符 201
8.2.7　比较字符串 202
8.2.8　迭代字符串 203
8.2.9　测试字符串 203
8.2.10　搜索子串 204
8.2.11　转换字符串 205
8.2.12　删除字符串中的空格 206
8.2.13　格式化字符串 207
8.3　实例研究：校验回文串 208
8.4　实例研究：将十六进制数转换为十进制数 209
8.5　运算符重载和特殊方法 211
8.6　实例研究：Rational类 212
关键术语 216
本章总结 217
测试题 217
编程题 217
第9章　使用Tkinter进行GUI程序设计 223
9.1　引言 223
9.2　开始使用Tkinter 223
9.3　处理事件 224
9.4　小构件类 226
9.5　画布 231
9.6　几何管理器 233
9.6.1　网格管理器 234
9.6.2　包管理器 234
9.6.3　位置管理器 235
9.7　实例研究：贷款计算器 236
9.8　显示图像 238
9.9　菜单 239
9.10　弹出菜单 241
9.11　鼠标、按键事件和绑定 243
9.12　动画 245
9.13　滚动条 248
9.14　标准对话框 249
关键术语 250
本章总结 251
测试题 251
编程题 251
第10章　列表 258
10.1　引言 258
10.2　列表基础 259
10.2.1　创建列表 259
10.2.2　列表是一种序列类型 260
10.2.3　列表使用的函数 260
10.2.4　下标运算符[] 260
10.2.5　列表截取 [start:end] 261
10.2.6　+、*和in/not in运算符 262
10.2.7　使用for循环遍历元素 262
10.2.8　比较列表 263
10.2.9　列表解析 263
10.2.10　列表方法 264
10.2.11　将字符串分成列表 265
10.2.12　输入列表 265
10.2.13　对列表移位 266
10.2.14　简化代码 266
10.3　实例研究：乐透数 268
10.4　实例研究：一副扑克牌 270
10.5　扑克牌图形用户界面 272
10.6　复制列表 273
10.7　将列表传递给函数 274
10.8　从函数返回一个列表 276
10.9　实例研究：统计每个字母的出现次数 277
10.10　查找列表 279
10.10.1　线性查找法 280
10.10.2　二分查找法 280
10.11　排序列表 282
10.11.1　选择排序 282
10.11.2　插入排序 284
10.12　实例学习：弹球 286
关键术语 288
本章总结 288
测试题 289
编程题 289
第11章　多维列表 298
11.1　引言 298
11.2　处理二维列表 299
11.2.1　使用输入值初始化列表 299
11.2.2　使用随机数初始化列表 299
11.2.3　打印列表 299
11.2.4　对所有元素求和 300
11.2.5　按列求和 300
11.2.6　找出和最大的行 300
11.2.7　随意打乱 301
11.2.8　排序 301
11.3　将二维列表传递给函数 302
11.4　问题：给多选题评分 303
11.5　问题：找出距离最近的点对 304
11.6　图形用户界面：找出距离最近的点对 306
11.7　问题：数独 307
11.8　实例研究：数独图形用户界面 310
11.9　多维列表 312
11.9.1　问题：每日温度和湿度 313
11.9.2　问题：猜生日 314
关键术语 315
本章总结 315
测试题 316
编程题 316
第12章　继承和多态 330
12.1　引言 330
12.2　父类和子类 330
12.3　覆盖方法 335
12.4　object类 336
12.5　多态和动态绑定 339
12.6　isinstance函数 340
12.7　实例研究：可重用时钟 342
12.8　类之间的关系 347
12.8.1　关联 347
12.8.2　聚合和组合 348
12.9　实例研究：设计Course类 349
12.10　为栈设计类 350
12.11　实例研究：FigureCanvas类 352
关键术语 355
本章总结 355
测试题 355
编程题 355
第13章　文件和异常处理 364
13.1　引言 364
13.2　文本输入和输出 364
13.2.1　打开一个文件 365
13.2.2　写入数据 366
13.2.3　测试文件的存在性 367
13.2.4　读数据 367
13.2.5　从文件读取所有数据 370
13.2.6　追加数据 371
13.2.7　读写数值数据 371
13.3　文件对话框 373
13.4　实例研究：统计文件中的字符个数 375
13.5　从网站上获取数据 376
13.6　异常处理 378
13.7　抛出异常 381
13.8　使用对象处理异常 383
13.9　定义自定制异常类 384
13.10　使用Pickling进行二进制IO 388
13.10.1　卸载和加载对象 388
13.10.2　检测文件末尾 389
13.11　实例研究：地址簿 390
关键术语 393
本章总结 393
测试题 394
编程题 394
第三部分　数据结构和算法
第14章　元组、集合和字典 398
14.1　引言 398
14.2　元组 399
14.3　集合 401
14.3.1　创建集合 401
14.3.2　操作和访问集合 402
14.3.3　子集和超集 402
14.3.4　相等性测试 403
14.3.5　集合运算 403
14.4　比较集合和列表的性能 407
14.5　实例研究：统计关键字 408
14.6　字典 409
14.6.1　创建一个字典 410
14.6.2　添加、修改和获取值 410
14.6.3　删除条目 410
14.6.4　循环条目 411
14.6.5　len函数 411
14.6.6　检测一个关键字是否在字典中 411
14.6.7　相等性检测 411
14.6.8　字典方法 412
14.7　实例研究：单词的出现次数 413
关键术语 415
本章总结 415
测试题 416
编程题 416
第15章　递归 419
15.1　引言 419
15.2　实例研究：计算阶乘 420
15.3　实例研究：计算斐波那契数 422
15.4　使用递归解决问题 424
15.5　递归辅助函数 426
15.5.1　选择排序 427
15.5.2　二分查找 427
15.6　实例研究：求出目录的大小 428
15.7　实例研究：汉诺塔 430
15.8　实例研究：分形 432
15.9　实例研究：八皇后 435
15.10　递归和迭代 437
15.11　尾递归 438
关键术语 439
本章总结 439
测试题 439
编程题 439
附录A　Python关键字 446
附录B　ASCII字符集 447
附录C　数制系统 448
*第16章　开发高效算法
*第17章　排序
*第18章　链表、栈、队列及优先队列
*第19章　二分查找树
*第20章　AVL树
*第21章　哈希：实现字典与集合
*第22章　图及其应用
*第23章　加权图及其应用
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python语言程序设计
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据科学实践指南
目录　Contents
前言
第0章　发现、出发	1
0.1　何谓数据科学	1
0.1.1　海量的数据与科学的方法	2
0.1.2　数据科学并不是新概念	3
0.1.3　数据科学是一个系统工程	3
0.2　如何成为数据科学家	4
0.3　为什么是Python	6
0.4　一个简单的例子	8
第1章　Python介绍	9
1.1　Python的版本之争	10
1.2　Python解释器	11
1.2.1　Mac OS X系统	11
1.2.2　Linux系统	11
1.2.3　Windows系统	12
1.3　第一段Python程序	14
1.4　使用Python shell调试程序	15
第2章　Python基础知识	19
2.1　应当掌握的基础知识	19
2.1.1　基础数据类型	19
2.1.2　变量和赋值	21
2.1.3　操作符及表达式	22
2.1.4　文本编辑器	23
2.2　字符串	27
2.3　获取键盘输入	29
2.4　流程控制	30
2.4.1　条件判断	30
2.4.2　循环	31
2.4.3　缩进、空白和注释	33
第3章　函数及异常处理	35
3.1　函数和函数的参数	36
3.1.1　定义函数	37
3.1.2　关键字参数和默认参数	38
3.1.3　可变数量的参数	39
3.1.4　递归	40
3.2　闭包	41
3.3　异常和断言	44
第4章　高级字符串处理	47
4.1　字符集和字符编码	47
4.1.1　ASCII字符集和编码	48
4.1.2　Unicode字符集及UTF-8编码	49
4.2　字符串操作和格式化	51
4.2.1　字符串的基本操作	51
4.2.2　字符串分割	52
4.2.3　字符串格式化	52
4.3　正则表达式	53
4.3.1　正则表达式入门	54
4.3.2　在Python中使用正则表达式	57
第5章　容器和collections	60
5.1　元组	60
5.2　列表	62
5.2.1　引用传递	64
5.2.2　列表解析式	65
5.3　字典	66
5.4　collections	69
5.4.1　namedtuple	69
5.4.2　Counter	70
5.4.3　defaultdict	71
5.4.4　OrderedDict	71
第6章　Python标准库简介	73
6.1　math模块	73
6.1.1　常见常量	73
6.1.2　无穷	74
6.1.3　整数转换	75
6.1.4　绝对值和符号	76
6.1.5　常用计算	77
6.1.6　指数和对数	77
6.2　time	79
6.3　random	82
6.3.1　随机数生成器	82
6.3.2　取样	84
6.4　glob和fileinput	85
6.5　bz2和gzip	87
6.6　pprint	88
6.7　traceback	90
6.8　JSON	91
第7章　用Python读写外部数据	93
7.1　CSV文件的读写	94
7.1.1　读取CSV文件	94
7.1.2　创建CSV文件	95
7.1.3　处理方言	96
7.1.4　将读取的结果转换成字典	97
7.2　Excel文件的读写	98
7.2.1　读取Excel文件	98
7.2.2　写Excel文件	99
7.3　MySQL的读写	101
7.3.1　写入MySQL	103
7.3.2　读取MySQL	105
第8章　统计编程	106
8.1　描述性统计	106
8.1.1　人口普查数据	106
8.1.2　均值和中位数	110
8.1.3　方差和标准差	111
8.1.4　分布	113
8.2　数据可视化入门	116
8.2.1　pyplot基础	116
8.2.2　柱状图和饼图	119
8.3　概率	122
第9章　爬虫入门	124
9.1　网络资源及爬虫的基本原理	124
9.2　使用request模块获取HTML内容	127
9.2.1　关于HTTP协议	127
9.2.2　使用requests的get方法获取HTML内容	129
9.3　使用Xpath解析HTML中的内容	133
9.3.1　HTML的层级和Xpath的基本概念	134
9.3.2　使用谷歌浏览器快速创建Xpath路径	137
9.3.3　使用谷歌浏览器复制需要JS渲染的HTML页面	138
9.4　实战：爬取京东商品品类及品牌列表	144
第10章　数据科学的第三方库介绍	149
10.1　Numpy入门和实战	149
10.1.1　Numpy基础	150
10.1.2　Numpy基本运算	153
10.1.3　Numpy高级特性	159
10.1.4　kNN实战	162
10.2　Pandas的入门和实战	167
10.2.1　Pandas基础	168
10.2.2　泰坦尼克号生存率分析实战	176
10.3　Scikit-learn入门和实战	180
10.3.1　机器学习术语	181
10.3.2　Scikit-learn基础	183
10.3.2　实战	186
第11章　利用Python进行图数据分析	193
11.1　图基础	193
11.2　NetworkX入门	194
11.2.1　基本操作	194
11.2.2　为图中的元素添加属性	196
11.2.3　有向图及节点的度数	197
11.2.4　构建图及图的操作	197
11.3　使用NetworkX进行图分析	199
11.3.1　利用联通子图发现社区	199
11.3.2　通过三角计算强化社区发现	201
11.3.3　利用PageRank发现影响力中心	202
第12章　大数据工具入门	204
12.1　Hadoop	204
12.1.1　Hadoop的计算原理	205
12.1.2　在Hadoop上运行Python程序	208
12.2　Spark	211
12.2.1　为什么需要Spark	211
12.2.2　如何学习Spark	212
12.3　大数据与数据科学的区别	215
附录A　编写Python 2与Python 3兼容的代码	217
附录B　安装完整的Python开发环境	225
附录C　常用的Python技巧	235
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据科学实践指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>21天学通Python
第一篇Python编程基础
第1章编程与Python.........................................................................................1
1.1什么是编程........................................................................................................1
1.1.1硬件与软件...........................................................................................................1
1.1.2编程语言...............................................................................................................2
1.1.3编程与调试...........................................................................................................3
1.2选择Python的理由...........................................................................................4
1.2.1Python是免费的自由软件...................................................................................4
1.2.2Python是跨平台的...............................................................................................4
1.2.3Python功能强大...................................................................................................4
1.2.4Python清晰优雅...................................................................................................5
1.3安装Python........................................................................................................5
1.3.1在Windows下安装Python..................................................................................6
1.3.2在Linux下安装Python........................................................................................7
1.4选择开发工具....................................................................................................9
1.4.1Python自带开发工具：IDLE..............................................................................9
1.4.2文本编辑器：Emacs.............................................................................................9
1.4.3Python开发工具：PythonWin...........................................................................12
1.5编辑和运行Python程序.................................................................................15
1.5.1你好，Python......................................................................................................15
1.5.2运行程序文件........................................................................................................................15
1.5.3交互式运行Python.............................................................................................16
1.6小结..................................................................................................................17
1.7本章习题..........................................................................................................17
第2章Python起步...........................................................................................19
2.1Python语法基础..............................................................................................19
2.1.1缩进分层.............................................................................................................19
2.1.2代码注释.............................................................................................................20
2.1.3断行.....................................................................................................................20
2.2Python输入/输出.............................................................................................21
2.2.1接收键盘/输入....................................................................................................21
2.2.2显示处理结果........................................................................................................................22
2.3用Python计算.................................................................................................22
2.3.1算式与代数式运算..............................................................................................23
2.3.2惊奇.....................................................................................................................24
2.4小结..................................................................................................................25
2.5本章习题..........................................................................................................25
第3章Python数据类型......................................................................................................27
3.1Python简单数据类型......................................................................................27
3.1.1字符串（str）........................................................................................................................27
3.1.2整数（int）.........................................................................................................30
3.1.3浮点数（float）..................................................................................................31
3.1.4类型转换.............................................................................................................31
3.2字符串进阶.....................................................................................................................32
3.2.1原始字符串.........................................................................................................32
3.2.2格式化字符串..............................................................................................................33
3.2.3中文字符串处理..................................................................................................33
3.3标志符与赋值号..............................................................................................34
3.3.1标志符.................................................................................................................34
3.3.2“＝”.................................................................................................................34
3.4Python结构数据类型......................................................................................35
3.4.1列表（list）.........................................................................................................35
3.4.2元组（tuple）........................................................................................................................37
3.4.3字典（dict）.......................................................................................................37
3.5内置常量与逻辑运算符、比较运算符..........................................................39
3.5.1常用内置常量.................................................................................................39
3.5.2Python中逻辑运算符.........................................................................................39
3.5.3Python中比较运算符.........................................................................................40
3.5.4Python中其他逻辑操作符.................................................................................40
3.6序列..................................................................................................................41
3.6.1序列切片.............................................................................................................41
3.6.2序列内置操作..............................................................................................42
3.7小结..................................................................................................................43
3.8本章习题..........................................................................................................43
第４章控制语句执行流程.................................................................................45
4.1用if选择执行语句..........................................................................................45
4.1.1if基础..................................................................................................................45
4.1.2if语句的嵌套......................................................................................................48
4.2用for循环执行语句.......................................................................................50
4.2.1for基础................................................................................................................50
4.2.2for语句与break语句、continue语句...............................................................50
4.2.3for语句与range()函数.......................................................................................52
4.2.4for语句与内置迭代函数....................................................................................53
4.3用while循环执行语句...................................................................................54
4.3.1while基础.............................................................................................................54
4.3.2增量赋值运算符..................................................................................................55
4.4推导或内涵（listcomprehension）................................................................56
4.4.1推导基础.............................................................................................................56
4.4.2推导进阶.............................................................................................................56
4.5小结..................................................................................................................57
4.6本章习题..........................................................................................................57
第5章自定义功能单元（一）..........................................................................59
5.1使用函数..........................................................................................................59
5.1.1声明函数.............................................................................................................59
5.1.2调用函数.............................................................................................................60
5.2深入函数..........................................................................................................61
5.2.1默认值参数.........................................................................................................61
5.2.2参数传递.............................................................................................................63
5.2.3可变数量参数传递..............................................................................................63
5.2.4拆解序列的函数调用..........................................................................................66
5.2.5函数调用时参数的传递方法..............................................................................66
5.3变量的作用域..................................................................................................68
5.4使用匿名函数（lambda）..............................................................................69
5.5Python常用内建函数......................................................................................70
5.6小结..................................................................................................................71
5.7本章习题..........................................................................................................71
第6章自定义功能单元（二）..........................................................................73
6.1面向对象编程概述..........................................................................................73
6.1.1万物皆对象.........................................................................................................73
6.1.2对象优越性.........................................................................................................74
6.1.3类和对象.............................................................................................................74
6.2定义和使用类..................................................................................................74
6.2.1定义类.................................................................................................................74
6.2.2使用类.................................................................................................................75
6.3类的属性和方法..............................................................................................76
6.3.1类的方法.............................................................................................................76
6.3.2类的属性.............................................................................................................78
6.3.3类成员方法与静态方法......................................................................................80
6.4类的继承..........................................................................................................81
6.4.1类的继承.............................................................................................................81
6.4.2多重继承.............................................................................................................82
6.4.3方法重载.............................................................................................................84
6.5小结..................................................................................................................84
6.6本章习题..........................................................................................................84
第7章错误、异常和程序调试..........................................................................86
7.1语法错误..........................................................................................................86
7.2异常的处理......................................................................................................87
7.2.1异常处理的基本语法..........................................................................................87
7.2.2Python主要的内置异常及其处理......................................................................89
7.3手工抛出异常..................................................................................................91
7.3.1用raise手工抛出异常........................................................................................91
7.3.2assert语句...........................................................................................................92
7.3.3自定义异常类.........................................................................................93
7.4用pdb调试程序..............................................................................................94
7.4.1调试语句块函数..................................................................................................94
7.4.2调试函数.............................................................................................................95
7.5测试程序..........................................................................................................96
7.5.1用testmod函数测试...........................................................................................96
7.5.2用testfile函数测试.............................................................................................97
7.6小结..................................................................................................................98
7.7本章习题..........................................................................................................98
第二篇Python编程高阶
第8章复杂程序组织......................................................................................100
8.1模块................................................................................................................100
8.1.1模块概述...........................................................................................................100
8.1.2自己编写模块................................................................................................101
8.1.3模块位置...........................................................................................................102
8.1.4__pycache__目录..............................................................................................103
8.1.5具有独立运行能力的模块................................................................................103
8.2包....................................................................................................................104
8.2.1包概述...............................................................................................................104
8.2.2包详解...............................................................................................................105
8.3Python常用标准库简介................................................................................106
8.3.1数学类模块.......................................................................................................106
8.3.2日期与时间类.....................................................................................107
8.4小结................................................................................................................107
8.5本章习题........................................................................................................107
第9章迭代器、生成器与装饰器....................................................................109
9.1迭代器............................................................................................................109
9.1.1迭代器概述.......................................................................................................109
9.1.2自定义迭代器...............................................................................110
9.1.3内置迭代器工具................................................................................................110
9.2生成器............................................................................................................113
9.2.1生成器创建.......................................................................................................113
9.2.2深入生成器.......................................................................................................114
9.2.3生成器与协程...............................................................................115
9.3装饰器............................................................................................................116
9.3.1装饰器概述.......................................................................................................116
9.3.2装饰函数...........................................................................................................116
9.3.3装饰类...............................................................................................................117
9.4小结................................................................................................................118
9.5本章习题........................................................................................................119
第10章Python进阶话题..................................................................................................120
10.1函数与命名空间..........................................................................................120
10.2闭包及其应用..............................................................................................121
10.2.1闭包概述.........................................................................................................121
10.2.2闭包与延迟求值..............................................................................................122
10.2.3闭包与泛型函数..............................................................................................122
10.3上下文管理器..............................................................................................123
10.4用字符串操作对象属性..............................................................................125
10.5用字典构造分支程序..................................................................................126
10.6重载类的特殊方法......................................................................................127
10.7鸭子类型（ducktyping）与多态...............................................................128
10.8小结..............................................................................................................129
10.9本章习题......................................................................................................129
第11章文件与文件系统.................................................................................131
11.1文件操作基础..............................................................................................131
11.1.1open()函数.......................................................................................................131
11.1.2用fileinput操作文件......................................................................................133
11.2常用文件和目录操作..................................................................................134
11.2.1获得当前路径..................................................................................................134
11.2.2获得目录中的内容..........................................................................................134
11.2.3创建目录..........................................................................................................135
11.2.4删除目录..........................................................................................................135
11.2.5判断是否是目录..............................................................................................135
11.2.6判断是否为文件..............................................................................................135
11.2.7遍历某目录下的所有文件和目录..................................................................136
11.2.8由文件名批量获取姓名和考号......................................................................136
11.2.9批量文件重命名..............................................................................................137
11.3编译为可执行文件......................................................................................138
11.3.1用py2exe生成可执行程序............................................................................138
11.3.2用cx_freeze生成可执行文件........................................................................139
11.4小结..............................................................................................................141
11.5本章习题......................................................................................................141
第12章基于tkinter的GUI编程....................................................................142
12.1GUI概述......................................................................................................142
12.1.1GUI是什么.....................................................................................................142
12.1.2Python编写GUI程序库................................................................................142
12.2tkinter图形化库简介...................................................................................143
12.2.1创建GUI程序第一步.....................................................................................143
12.2.2创建GUI程序第二步.....................................................................................144
12.3tkinter组件.....................................................................................................................145
12.3.1组件分类.........................................................................................................145
12.3.2布局组件.........................................................................................................145
12.4常用tkinter组件..........................................................................................146
12.4.1按钮.................................................................................................................146
12.4.2文本框.............................................................................................................148
12.4.3标签.................................................................................................................149
12.4.4菜单.................................................................................................................150
12.4.5单选框和复选框..............................................................................................152
12.4.6绘制图形.........................................................................................................154
12.5响应操作事件..............................................................................................156
12.5.1事件基础.........................................................................................................156
12.5.2响应事件.........................................................................................................158
12.6对话框..........................................................................................................160
12.6.1标准对话框.....................................................................................................160
12.6.2自定义对话框..................................................................................................166
12.7小结..............................................................................................................167
12.8本章习题......................................................................................................167
第13章正则表达式........................................................................................169
13.1正则表达式基础..........................................................................................169
13.1.1正则表达式概述..............................................................................................169
13.1.2正则表达式基本元字符..................................................................................169
13.1.3常用正则表达式..............................................................................................171
13.2re模块..........................................................................................................172
13.2.1正则匹配搜索函数..........................................................................................172
13.2.2sub()与subn()函数..........................................................................................173
13.2.3split()函数........................................................................................................174
13.2.4正则表达式对象..............................................................................................174
13.3分组匹配与匹配对象使用..........................................................................178
13.3.1分组基础.........................................................................................................178
13.3.2分组扩展.........................................................................................................178
13.3.3匹配对象与组的使用......................................................................................179
13.3.4匹配对象与索引使用......................................................................................180
13.4正则表达式应用示例..................................................................................181
13.5小结..............................................................................................................183
13.6本章习题......................................................................................................183
第14章网络编程............................................................................................184
14.1网络编程基础..............................................................................................184
14.1.1什么是网络.....................................................................................................184
14.1.2网络协议.........................................................................................................184
14.1.3地址与端口.....................................................................................................185
14.2套接字的使用..............................................................................................186
14.2.1用socket建立服务器端程序..........................................................................186
14.2.2用socket建立客户端程序..............................................................................187
14.2.3用socket建立基于UDP协议的服务器与客户端程序................................188
14.2.4用socketserver模块建立服务器....................................................................190
14.3urllib与http包使用....................................................................................191
14.3.1urllib和http包简介........................................................................................191
14.3.2用urllib和http包访问网站...........................................................................194
14.4用poplib与smtplib库收发邮件................................................................195
14.4.1用poplib检查邮件.........................................................................................195
14.4.2用smtplib发送邮件........................................................................................197
14.5用ftplib访问FTP服务...............................................................................199
14.5.1ftplib模块简介................................................................................................199
14.5.2使用Python访问FTP....................................................................................201
14.6小结..............................................................................................................203
14.7本章习题......................................................................................................203
第15章线程和进程........................................................................................204
15.1线程..............................................................................................................204
15.1.1用threading.Thread直接在线程中运行函数.................................................204
15.1.2通过继承threading.Thread类来创建线程.....................................................205
15.1.3线程类Thread使用........................................................................................205
15.2进程..............................................................................................................209
15.2.1进程基础.........................................................................................................209
15.2.2用Popen类创建进程......................................................................................210
15.3小结..............................................................................................................212
15.4本章习题......................................................................................................212
第16章数据库编程........................................................................................213
16.1Python数据库应用程序接口......................................................................213
16.1.1数据库应用程序接口概述..............................................................................213
16.1.2数据库游标的使用..........................................................................................214
16.2Python操作SQLite3数据库......................................................................214
16.2.1SQLite3数据库简介.......................................................................................214
16.2.2SQLite3数据库操作实例...............................................................................215
16.3Python操作MariaDB数据库.....................................................................217
16.3.1MariaDB数据库简介......................................................................................218
16.3.2建立MariaDB数据库操作环境.....................................................................218
16.3.3MariaDB数据库操作实例..............................................................................220
16.4Python操作MongoDB数据库...................................................................222
16.4.1MongoDB数据库简介....................................................................................222
16.4.2建立MongoDB数据库操作环境...................................................................222
16.4.3MongoDB数据库基础....................................................................................223
16.4.4MongoDB数据库操作实例............................................................................226
16.4.5用对象关系映射（ORM）工具操作MongoDB数据库..............................228
16.5小结..............................................................................................................231
16.6本章习题......................................................................................................231
第17章Web网站编程...................................................................................232
17.1Web网站编程概述......................................................................................232
17.2FlaskWeb框架及其应用............................................................................233
17.2.1FlaskWeb框架简介........................................................................................233
17.2.2FlaskWeb框架初识........................................................................................233
17.2.3URL装饰器与URL参数传递.......................................................................235
17.2.4GET与POST请求的参数传递.....................................................................237
17.2.5使用cookie与session跟踪客户....................................................................239
17.2.6使用静态文件资源与页面文件......................................................................241
17.2.7接收上传文件..................................................................................................243
17.2.8Flask框架中使用数据库................................................................................244
17.3TornadoWeb框架及其应用........................................................................247
17.3.1Tornado框架简介...........................................................................................247
17.3.2Tornado框架初识...........................................................................................247
17.3.3请求参数的获取..............................................................................................249
17.3.4用cookie与安全cookie跟踪客户.................................................................251
17.3.5URL转向与静态文件资源.............................................................................252
17.3.6TornadoWeb框架应用举例...........................................................................254
17.4小结..............................................................................................................259
17.5本章习题......................................................................................................259
第18章数据结构基础....................................................................................261
18.1表、栈和队列..............................................................................................261
18.1.1用列表来创建表..............................................................................................261
18.1.2自定义栈数据结构..........................................................................................262
18.1.3实现队列功能..................................................................................................264
18.2树和图..........................................................................................................265
18.2.1用列表构建树..................................................................................................265
18.2.2实现二叉树类与遍历二叉树..........................................................................266
18.2.3用字典构建与搜索图......................................................................................269
18.3查找与排序..................................................................................................271
18.3.1实现二分查找..................................................................................................271
18.3.2用二叉树排序..................................................................................................273
18.4小结..............................................................................................................275
18.5本章习题......................................................................................................275
第19章用Pillow库处理图片.........................................................................276
19.1第三方Pillow库概述..................................................................................276
19.1.1安装第三方Pillow库.....................................................................................276
19.1.2Pillow库简介..................................................................................................276
19.1.3Pillow库处理图像基础..................................................................................277
19.1.4Image模块中函数的使用...............................................................................278
19.1.5Image模块中Image类的使用.......................................................................281
19.1.6使用ImageChops模块进行图片合成............................................................286
19.1.7使用ImageEnhance模块增强图像效果........................................................289
19.1.8使用ImageFilter模块的滤镜.........................................................................290
19.1.9使用ImageDraw模块画图.............................................................................291
19.2使用Pillow库处理图片举例......................................................................292
19.2.1图片格式转换..................................................................................................292
19.2.2批量生成缩略图..............................................................................................294
19.2.3为图片添加Logo............................................................................................297
19.3小结..............................................................................................................301
19.4本章习题......................................................................................................302
第三篇Python编程实战
第20章案例1做一个Windows上的360工具...........................................303
20.1案例背景......................................................................................................303
20.2从创建图形化界面开始..............................................................................304
20.2.1创建基本图形化工作界面..............................................................................304
20.2.2响应菜单事件..................................................................................................306
20.3清理垃圾文件..............................................................................................308
20.3.1迭代目录.........................................................................................................308
20.3.2扫描垃圾文件..................................................................................................309
20.3.3多线程加速.....................................................................................................311
20.3.4扫描所有磁盘..................................................................................................312
20.3.5删除垃圾文件..................................................................................................314
20.4搜索文件......................................................................................................316
20.4.1搜索超大文件..................................................................................................316
20.4.2按名称搜索文件..............................................................................................317
20.5小结..............................................................................................................318
第21章案例2Python搞定大数据..............................................................320
21.1案例背景......................................................................................................320
21.1.1大数据处理方式概述......................................................................................320
21.1.2处理日志文件..................................................................................................321
21.1.3要实现的案例目标..........................................................................................322
21.2分割日志文件..............................................................................................322
21.3用Map函数处理小文件.............................................................................324
21.4用Reduce函数归集数据............................................................................326
21.5小结..............................................................................................................327
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>21天学通Python
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>python入门经典
第1章　安装和运行Python
1.1　认识操作系统
1.2　在Windows上安装Python
1.2.1　安装Python
1.2.2　运行Python
1.2.3　安装文本编辑器
1.2.4　浏览文件系统
1.3　在Mac OS上安装Python
1.3.1　安装Python
1.3.2　运行Python
1.3.3　安装文本编辑器
1.3.4　浏览文件系统
1.4　小结
1.5　Q&A
1.6　作业
1.6.1　问题
1.6.2　回答
1.6.3　练习
第2章　在Python中使用数字
2.1　用变量存储信息
2.1.1　变量的类型
2.1.2　在变量中存储数字
2.1.3　命名变量
2.1.4　提示
2.2　在Python中做数学运算
2.2.1　运算符
2.2.2　运算的优先级
2.2.3　数学运算的组合类型
2.2.4　除以0
2.3　比较数字
2.4　在现实世界中应用Python数学运算
2.5　小结
2.6　Q&A
2.7　作业
2.7.1　问题
2.7.2　回答
2.7.3　练习
第3章　编程中的逻辑
3.1　使用基本的if语句
3.2　创建代码块
3.3　为if添加else
3.4　用elif测试更多内容
3.5　True和False变量
3.6　使用try/except避免错误
3.7　在现实世界的问题中应用逻辑
3.8　小结
3.9　Q&A
3.10　作业
3.10.1　问题
3.10.2　回答
3.10.3　练习
第4章　在字符串中存储文本
4.1　创建字符串
4.2　打印字符串
4.3　获取有关字符串的信息
4.4　数学运算和比较运算
4.4.1　连接字符串
4.4.2　乘法
4.4.3　比较字符串
4.4.4　不适用于字符串的运算符
4.5　格式化字符串
4.5.1　用转义符控制间隔
4.5.2　删除空格
4.5.3　查找和替换文本
4.6　在现实世界中使用字符串
4.7　小结
4.8　Q&A
4.9　作业
4.9.1　问题
4.9.2　回答
4.9.3　练习
第5章　处理输入和输出
5.1　从命令行获取信息
5.1.1　提示
5.1.2　转换输入
5.2　获取密码
5.3　清理用户的输入
5.4　格式化输出
5.5　在现实世界中管理输入和输出
5.6　小结
5.7　Q&A
5.8　作业
5.8.1　问题
5.8.2　回答
5.8.3　练习
第6章　将项分组到列表中
6.1　创建列表
6.2　获取有关列表的信息
6.3　操作列表
6.4　在列表中使用数学运算
6.5　排序列表
6.6　比较列表
6.7　在现实世界中使用列表
6.8　小结
6.9　Q&A
6.10　作业
6.10.1　问题
6.10.2　回答
6.10.3　练习
第7章　使用循环重复代码
7.1　重复一定次数
7.1.1　获取数字的范围
7.1.2　命名循环变量
7.1.3　遍历列表
7.1.4　跳到下一个列表项
7.1.5　跳出循环
7.2　只有为真时重复
7.2.1　While循环
7.2.2　无限循环
7.3　在现实世界中使用循环
7.4　小结
7.5　Q&A
7.6　作业
7.6.1　测验
7.6.2　回答
7.6.3　练习
第8章　创建简单的脚本
8.1　创建一个基本的函数
8.2　传递值给函数
8.2.1　设置默认值
8.2.2　返回值
8.3　函数中的变量的作用域
8.3.1　在函数内创建变量
8.3.2　参数和作用域
8.4　在函数中组织函数
8.5　传递可变数目的参数
8.6　在现实世界中使用函数
8.7　小结
8.8　Q&A
8.9　作业
8.9.1　问题
8.9.2　回答
8.9.3　练习
第9章　使用字典匹配键和值
9.1　创建字典
9.2　获取有关字典的信息
9.3　比较字典
9.4　在现实世界中使用字典
9.5　小结
9.6　Q&A
9.7　作业
9.7.1　问题
9.7.2　回答
9.7.3　练习
第10章　生成对象
10.1　面向对象编程
10.1.1　已经使用的对象
10.1.2　对象
10.1.3　术语
10.2　规划一个对象
10.3　从对象生成对象
10.4　在现实世界中使用对象
10.5　小结
10.6　Q&A
10.7　作业
10.7.1　问题
10.7.2　回答
10.7.3　练习
第11章　生成类
11.1　生成一个基类的声明
11.2　为类增加方法
11.3　创建类的实例
11.3.1　__init__()函数
11.3.2　移动和存储实例
11.4　在现实世界中使用类
11.5　小结
11.6　Q&A
11.7　作业
11.7.1　问题
11.7.2　回答
11.7.3　练习
第12章　扩展类以添加功能
12.1　内建附加功能
12.1.1　相等性
12.1.2　大于和小于
12.1.3　操作打印
12.2　类的继承
12.2.1　把类保存到一个文件中
12.2.2　子类化一个类
12.2.3　使用类
12.3　在现实世界中使用扩展类
12.4　小结
12.5　Q&A
12.6　作业
12.6.1　问题
12.6.2　回答
12.6.3　练习
第13章　使用Python的模块来添加功能
13.1　Python包
13.2　使用random模块
13.2.1　randint
13.2.2　random
13.2.3　uniform
13.2.4　choice
13.3　使用datetime模块
13.3.1　time
13.3.2　datetime
13.4　找到更多的模块
13.5　在现实世界中使用模块
13.6　小结
13.7　Q&A
13.8　作业
13.8.1　问题
13.8.2　回答
13.8.3　练习
第14章　分拆程序
14.1　为什么要分拆程序
14.2　决定如何分拆代码
14.2.1　规划分拆一个程序
14.2.2　分拆一个音乐库程序
14.3　Python查找一个程序的代码
14.3.1　通过文件目录包含模块
14.3.2　导入模块
14.4　在现实世界中分拆代码
14.5　小结
14.6　Q&A
14.7　作业
14.7.1　问题
14.7.2　回答
14.7.3　练习
第15章　为代码提供文档
15.1　好的文档的必要性
15.2　在代码中嵌入注释
15.3　用docstring说明代码
15.4　包含README文件和安装文件
15.4.1　编写安装说明
15.4.2　编写README文件
15.5　在现实世界中使用文档
15.6　小结
15.7　Q&A
15.8　作业
15.8.1　问题
15.8.2　回答
15.8.3　练习
第16章　操作程序文件
16.1　读写文件
16.1.1　从文件读取数据
16.1.2　把数据写入到文件中
16.1.3　添加数据到文件
16.2　创建文件
16.3　获取目录的信息
16.3.1　文件列表
16.3.2　在目录间移动
16.3.3　创建目录
16.4　获取文件的信息
16.4.1　文件大小
16.4.2　访问时间
16.5　在现实世界中使用文件
16.6　小结
16.7　Q&A
16.8　作业
16.8.1　问题
16.8.2　回答
16.8.3　练习
第17章　用JSON来共享信息
17.1　JSON格式
17.2　使用JSON文件
17.2.1　把JSON保存到文件中
17.2.2　把JSON打印到屏幕
17.3　把对象保存为JSON
17.4　创建定制的字典
17.5　在现实世界中使用JSON
17.6　小结
17.7　Q&A
17.8　作业
17.8.1　问题
17.8.2　回答
17.8.3　练习
第18章　把信息保存到数据库
18.1　为什么使用数据库
18.2　使用SQL和数据库交互
18.2.1　Mac OS系统中的SQLite
18.2.2　在Windows系统中安装SQLite
18.2.3　测试SQLite
18.3　创建一个数据库
18.3.1　创建一个表
18.3.2　添加数据
18.4　查询数据库
18.5　在现实世界中使用数据库
18.6　小结
18.7　Q&A
18.8　作业
18.8.1　问题
18.8.2　回答
18.8.3　练习
第19章　使用SQL从数据库获取更多信息
19.1　用WHERE进行过滤
19.1.1　判断相等性
19.1.2　判断不相等性
19.1.3　用LIKE查找相似的项
19.1.4　使用NOT LIKE去查找不相似的项
19.1.5　带大于和小于的查询
19.2　用ORDER BY排序
19.3　用DISTINCT获取唯一的项
19.4　用UPDATE修改记录
19.5　用DELETE删除记录
19.6　在现实世界中使用SQL
19.7　小结
19.8　Q&A
19.9　作业
19.9.1　问题
19.9.2　回答
19.9.3　练习
第20章　用Flask进行Web开发
20.1　什么是Flask
20.2　安装Flask
20.2.1　Windows
20.2.2　MAC
20.3　创建第一个Flask应用
20.3.1　添加另一个视图
20.3.2　添加变量
20.4　添加模板
20.4.1　使用HTML
20.4.2　创建模板
20.4.3　用Jinja添加动态内容
20.4.4　为模板添加逻辑
20.5　在现实世界中使用框架
20.6　小结
20.7　Q&A
20.8　作业
20.8.1　问题
20.8.2　回答
20.8.3　练习
第21章　用PyGame开发游戏
21.1　什么是PyGame
21.2　安装PyGame
21.2.1　Windows
21.2.2　Mac
21.3　创建屏幕
21.3.1　主程序循环
21.3.2　使用用户输入(事件)
21.4　创建形状
21.4.1　添加颜色
21.4.2　定义一个圆
21.5　在屏幕上移动物体
21.6　获取用户输入
21.7　绘制文本
21.8　在现实世界中使用PyGame
21.9　小结
21.10　Q&A
21.11　作业
21.11.1　问题
21.11.2　回答
21.11.3　练习
第22章　通过版本控制来正确地保存代码
22.1　什么是版本控制
22.1.1　为什么版本控制很重要
22.1.2　版本控制是如何工作的
22.2　使用Git和GitHub进行版本控制
22.2.1　加入GitHub
22.2.2　GitHub快速教程
22.2.3　安装Git
22.3　管理仓库中的代码
22.3.1　创建一个仓库
22.3.2　签出仓库
22.3.3　向仓库中添加项
22.3.4　推送到远程的仓库
22.3.5　获取更新
22.4　用分支做实验性更改
22.4.1　创建分支
22.4.2　合并分支
22.5　决定哪些内容不推送
22.6　小结
22.7　Q&A
22.8　作业
22.8.1　问题
22.8.2　回答
22.8.3　练习
第23章　修复问题代码
23.1　当代码中有了Bug
23.2　用traceback来找到错误
23.3　用pdb调试器查找错误
23.4　通过互联网查询解决方案
23.5　尝试一个修复
23.6　寻求外部支持
23.6.1　互联网中继聊天
23.6.2　本地用户组
23.6.3　邮件列表
23.7　小结
23.8　Q&A
23.9　作业
23.9.1　问题
23.9.2　回答
23.9.3　练习
第24章　学习Python的下一步
24.1　感兴趣的项目
24.1.1　创建Web站点和Web应用程序
24.1.2　创建桌面应用
24.1.3　创建Android和iOS应用程序
24.1.4　游戏开发竞赛
24.1.5　科学和数学中的Python
24.1.6　创造更好的工作环境
24.2　参加会议
24.3　使用Linux
24.4　为Python做贡献
24.5　为其他的项目贡献
24.6　学习另一种语言
24.7　展望Python 3
24.8　推荐阅读
24.9　推荐的Web站点
24.10　小结
24.11　Q&A
24.12　作业
24.12.1　问题
24.12.2　回答
24.12.3　练习
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>python入门经典
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python Qt GUI快速编程
第一部分 Python编程
第1章 数据类型和数据结构
1．1 执行Python代码
1．2 变量和对象
1．3 数字和字符串
1．3．1 整数和长整型
1．3．2 浮点数和小数
1．3．3 字节字符串、 Unicode字符串和QString
1．4 集合
1．4．1 元组
1．4．2 列表
1．4．3 字典
1．4．4 集
1．5 内置函数
小结
练习题
第2章 控制结构
2．1 条件分支
2．2 循环
列表解析和生成器
2．3 函数
2．3．1 生成器函数
2．3．2 关键字参数的使用
2．3．3 lambda函数
2．3．4 动态函数的创建
2．3．5 偏函数应用程序
2．4 异常处理
小结
练习题
第3章 类和模块
3．1 实例的创建
3．2 方法和特殊方法
3．2．1 静态数据、 静态方法和装饰器
3．2．2 例： Length类
3．2．3 集合类
3．2．4 例： OrderedDict类
3．3 继承和多态
3．4 模块和多文件应用程序
小结
练习题
第二部分 GUI编程基础
第4章 GUI编程简介
4．1 25行的弹出式闹钟
4．2 30行的表达式求值程序
4．3 70行的货币转换程序
4．4 信号和槽
小结
练习题
第5章 对话框
5．1 简易对话框
5．2 标准对话框
OK/Cancel型模态对话框
5．3 智能对话框
5．3．1 非模态应用/关闭型对话框
5．3．2 非模态的实时对话框
小结
练习题
第6章 主窗口
6．1 主窗口的创建
6．1．1 动作和按键顺序
6．1．2 资源文件
6．1．3 创建和使用动作
6．1．4 恢复和保存主窗口的状态
6．2 用户动作的处理
6．2．1 文件动作的处理
6．2．2 编辑动作的处理
6．2．3 帮助动作的处理
小结
练习题
第7章 使用Qt设计师
7．1 用户界面的设计
7．2 对话框的实现
7．3 对话框的测试
小结
练习题
第8章 数据处理和自定义文件格式
8．1 主窗口的职责
8．2 数据容器的职责
8．3 二进制文件的保存和加载
8．3．1 用QDataStream读写
8．3．2 使用pickle模块读写
8．4 文本文件的保存和加载
8．4．1 使用QTextStream读写
8．4．2 使用codecs模块读写
8．5 XML文件的保存和加载
8．5．1 XML的写
8．5．2 用PyQt的DOM类来读取和解析XML
8．5．3 用PyQt的SAX类读取和解析XML
小结
练习题
第三部分 中级GUI编程
第9章 布局和多文档
9．1 布局策略
9．2 Tab标签页窗口部件和堆叠窗口部件
9．3 窗口切分条
9．4 单文档界面（SDI）
9．5 多文档界面（MDI）
小结
练习题第10章 事件、 剪贴板和拖放
10．1 事件处理机制
10．2 重新实现事件处理程序
10．3 使用剪贴板
10．4 拖放
小结
练习题第11章 自定义窗口部件
11．1 使用窗口部件样式表
11．2 创建复合窗口部件
11．3 子类化内置窗口部件
11．4 子类化QWidget
11．4．1 例： 分数滑块
11．4．2 例： 流体混合窗口部件
小结
练习题第12章 基于项的图形
12．1 图形项的自定义和交互
12．2 动画和复杂形状
小结
练习题第13章 Rich文本和打印
13．1 Rich文本的编辑
13．1．1 使用QSyntaxHighlighter
13．1．2 Rich文本的行编辑
13．2 文档打印
13．2．1 图片的打印
13．2．2 使用HTML和QTextDocument打印文档
13．2．3 使用QTextCursor和QTextDocument打印文档
13．2．4 使用QPainter打印文档
小结
练习题第14章 模型/视图编程
14．1 使用简便项窗口部件
14．2 创建自定义模型
14．2．1 实现视图逻辑
14．2．2 实现自定义模型
14．3 创建自定义委托
小结
练习题第15章 数据库
15．1 连接数据库
15．2 执行SQL查询
15．3 使用数据库窗体视图
15．4 使用数据库表视图
小结
练习题
第四部分 高级GUI编程
第16章 高级模型/视图编程
16．1 自定义视图
16．2 泛型委托
16．3 树中表达表格数据
小结
练习题
第17章 在线帮助和国际化
17．1 在线帮助
17．2 国际化
小结
练习题
第18章 网络应用
18．1 创建TCP客户端
18．2 创建TCP服务器
小结
练习题
第19章 多线程
19．1 创建线程服务器
19．2 创建和管理次线程
19．3 实现次线程
小结
练习题
这并非结束
附录A 安装
附录B PyQt的部分窗口部件
附录C 部分PyQt类的层次
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python Qt GUI快速编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python程序员面试算法宝典
前言
面试笔试经验技巧篇
经验技巧1 如何巧妙地回答面试官的问题2
经验技巧2 如何回答技术性的问题3
经验技巧3 如何回答非技术性问题4
经验技巧4 如何回答快速估算类问题5
经验技巧5 如何回答算法设计问题6
经验技巧6 如何回答系统设计题9
经验技巧7 如何解决求职中的时间冲突问题11
经验技巧8 如果面试问题曾经遇见过，是否要告知面试官12
经验技巧9 被企业拒绝#是否可以再申请12
经验技巧10 如何应对自己不会回答的问题13
经验技巧11 如何应对面试官的“激将法”语言14
经验技巧12 如何处理与面试官持不同观点这个问题15
经验技巧13 关注职场暗语15
面试笔试真题解析篇
第1章 链表21
1.1 如何实现链表的逆序22
1.2 如何从无序链表中移除重复项26
1.3 如何计算两个单链表所代表的数之和29
1.4 如何对链表进行重新排序32
1.5 如何找出单链表中的倒数第k个元素35
1.6 如何检测一个较大的单链表是否有环39
1.7 如何把链表相邻元素翻转41
1.8 如何把链表以K个结点为一组进行翻转43
1.9 如何合并两个有序链表46
1.10 如何在只给定单链表中某个结点的指针的情况下删除该结点49
1.11 如何判断两个单链表(无环)是否交叉51
1.12 如何展开链接列表54
第2章 栈、队列与哈希57
2.1 如何实现栈57
2.2 如何实现队列60
2.3 如何翻转栈的所有元素64
2.4 如何根据入栈序列判断可能的出栈序列68
2.5 如何用O(1)的时间复杂度求栈中#小元素71
2.6 如何用两个栈模拟队列操作73
2.7 如何设计一个排序系统74
2.8 如何实现LRU缓存方案76
2.9 如何从给定的车票中找出旅程77
2.10 如何从数组中找出满足a+b=c+d的两个数对79
第3章 二叉树81
3.1 二叉树基础知识81
3.2 如何把一个有序整数数组放到二叉树中83
3.3 如何从顶部开始逐层打印二叉树结点数据84
3.4 如何求一棵二叉树的#大子树和87
3.5 如何判断两棵二叉树是否相等89
3.6 如何把二叉树转换为双向链表90
3.7 如何判断一个数组是否是二元查找树后序遍历的序列93
3.8 如何找出排序二叉树上任意两个结点的#近共同父结点94
3.9 如何复制二叉树101
3.10 如何在二叉树中找出与输入整数相等的所有路径102
3.11 如何对二叉树进行镜像反转104
3.12 如何在二叉排序树中找出第1个大于中间值的结点106
3.13 如何在二叉树中找出路径#大的和107
3.14 如何实现反向DNS查找缓存109
第4章 数组112
4.1 如何找出数组中唯#的重复元素112
4.2 如何查找数组中元素的#大值和#小值118
4.3 如何找出旋转数组的#小元素121
4.4 如何找出数组中丢失的数124
4.5 如何找出数组中出现奇数次的数126
4.6 如何找出数组中第k小的数128
4.7 如何求数组中两个元素的#小距离131
4.8 如何求解#小三元组距离134
4.9 如何求数组中绝#值#小的数138
4.10 如何求数组连续#大和141
4.11 如何找出数组中出现1次的数145
4.12 如何对数组旋转147
4.13 如何在不排序的情况下求数组中的中位数148
4.14 如何求集合的所有子集150
4.15 如何对数组进行循环移位152
4.16 如何在有规律的二维数组中进行高效的数据查找155
4.17 如何寻找#多的覆盖点157
4.18 如何判断请求能否在给定的存储条件下完成158
4.19 如何按要求构造新的数组160
4.20 如何获取#好的矩阵链相乘方法161
4.21 如何求解迷宫问题163
4.22 如何从三个有序数组中找出它们的公共元素165
4.23 如何求两个有序集合的交集167
4.24 如何对有大量重复的数字的数组排序171
4.25 如何对任务进行调度174
4.26 如何对磁盘分区176
第5章 字符串178
5.1 如何求一个字符串的所有排列178
5.2 如何求两个字符串的#长公共子串183
5.3 如何对字符串进行反转187
5.4 如何判断两个字符串是否为换位字符串189
5.5 如何判断两个字符串的包含关系191
5.6 如何对由大小写字母组成的字符数组排序193
5.7 如何消除字符串的内嵌括号194
5.8 如何判断字符串是否是整数196
5.9 如何实现字符串的匹配199
5.10 如何求字符串里的#长回文子串202
5.11 如何按照给定的字母序列对字符数组排序208
5.12 如何判断一个字符串是否包含重复字符210
5.13 如何找到由其他单词组成的#长单词212
5.14 如何统计字符串中连续的重复字符个数214
5.15 如何求#长递增子序列的长度215
5.16 求一个串中出现的第1个#长重复子串216
5.17 如何求解字符串中字典序#大的子序列218
5.18 如何判断一个字符串是否由另外一个字符串旋转得到220
5.19 如何求字符串的编辑距离222
5.20 如何在二维数组中寻找#短路线224
5.21 如何截取包含中文的字符串227
5.22 如何求相对路径228
5.23 如何查找到达目标词的#短链长度229
第6章 基本数字运算232
6.1 如何判断一个自然数是否是某个数的平方232
6.2 如何判断一个数是否为2的n次方234
6.3 如何不使用除法操作符实现两个正整数的除法236
6.4 如何只使用+= 操作符实现加减乘除运算240
6.5 如何根据已知随机数生成函数计算新的随机数242
6.6 如何判断1024!末尾有多少个0243
6.7 如何按要求比较两个数的大小244
6.8 如何求有序数列的第1500个数的值245
6.9 如何把十进制数(long型)分别以二进制和十六进制形式输出246
6.10 如何求二进制数中1的个数247
6.11 如何找#小的不重复数248
6.12 如何计算一个数的n次方252
6.13 如何在不能使用库函数的条件下计算n的平方根254
6.14 如何不使用^操作实现异或运算254
6.15 如何不使用循环输出1到100256
第7章 排列组合与概率257
7.1 如何求数字的组合257
7.2 如何拿到#多金币259
7.3 如何求正整数n所有可能的整数组合260
7.4 如何用一个随机函数得到另外一个随机函数262
7.5 如何等概率地从大小为n的数组中选取m个整数263
7.6 如何组合1，2，5这三个数使其和为100264
7.7 如何判断还有几盏灯泡亮着266
第8章 排序268
8.1 如何进行选择排序268
8.2 如何进行插入排序269
8.3 如何进行冒泡排序270
8.4 如何进行归并排序271
8.5 如何进行快速排序272
8.6 如何进行希尔排序275
8.7 如何进行堆排序276
8.8 如何进行基数排序278
第9章 大数据280
9.1 如何从大量的url中找出相同的url280
9.2 如何从大量数据中找出高频词281
9.3 如何找出访问百度#多的IP282
9.4 如何在大量的数据中找出不重复的整数282
9.5 如何在大量的数据中判断一个数是否存在283
9.6 如何查询#热门的查询串284
9.7 如何统计不同电话号码的个数285
9.8 如何从5亿个数中找出中位数286
9.9 如何按照query的频度排序287
9.10 如何找出排名前500的数288
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python程序员面试算法宝典
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>从问题到程序-用Python学编程和计算
前言
第1章　程序设计和Python 1
1.1　计算机和程序1
1.1.1　“是什么”和“怎样做”的知识1
1.1.2　计算和程序3
1.1.3　编程语言7
1.2　Python语言简介10
1.2.1　Python语言的发展和应用10
1.2.2　Python系统和IDLE编程环境13
1.3　程序开发15
1.3.1　程序开发过程15
1.3.2　程序错误16
1.3.3　从问题到程序19
练习22
第2章　计算和编程初步 23
2.1　数值表达式和算术23
2.1.1　整数计算23
2.1.2　浮点数和复数27
2.2　数据对象、计算和类型29
2.2.1　对象和类型29
2.2.2　混合类型计算和类型转换30
2.2.3　数值类型和计算的简单总结31
2.3　内置函数和数学函数包32
2.3.1　函数及其使用33
2.3.2　处理数值的内置函数33
2.3.3　数学函数包34
2.4　字符串35
2.4.1　字符串和字符串类型35
2.4.2　字符串操作36
2.5　标识符、变量和赋值38
2.5.1　变量、名字和值38
2.5.2　简单顺序计算40
2.6　简单脚本程序41
2.6.1　脚本的编辑和执行41
2.6.2　程序和输入43
2.7　判断和条件控制45
2.7.1　条件判断和逻辑表达式45
2.7.2　if语句（条件语句）46
2.7.3　编程实例48
2.8　重复计算和循环49
2.8.1　重复计算50
2.8.2　for语句和重复计算51
2.8.3　while语句和迭代53
2.8.4　循环控制56
2.9　计算的抽象和函数56
2.9.1　计算的控制和抽象56
2.9.2　计算的抽象：函数57
2.9.3　函数定义和使用实例60
2.10　若干Python机制及其他62
2.10.1　已讨论的Python机制62
2.10.2　若干Python机制62
2.10.3　Python解释器64
2.11　补充材料64
2.11.1　语言细节65
2.11.2　编程技术70
练习71
第3章　基本编程技术 77
3.1　循环程序设计77
3.1.1　循环的需求和问题78
3.1.2　常见循环形式80
3.1.3　输入循环86
3.2　递归89
3.2.1　递归定义的函数89
3.2.2　乘幂的计算90
3.2.3　循环和递归91
3.2.4　斐波那契数列的计算92
3.2.5　最大公约数97
3.2.6　不容易用循环求解的递归问题100
3.2.7　更复杂的递归情况103
3.3　程序终止性103
3.3.1　调和级数的部分和104
3.3.2　程序终止性不可判定104
3.4　定义函数105
3.4.1　为什么定义函数105
3.4.2　学习定义函数108
3.4.3　函数：两种观点及其联系111
3.4.4　通用和专用的方法117
练习120
第4章　函数和程序结构 124
4.1　作用域、环境和状态124
4.1.1　作用域与函数定义124
4.1.2　环境和状态126
4.1.3　程序执行中的环境变化129
4.1.4　模块和环境133
4.2　函数定义和函数调用135
4.2.1　函数定义的结构135
4.2.2　函数调用中的问题140
4.2.3　带默认值形参和关键字实参143
4.3　编程框架和高阶函数145
4.3.1　编程框架和函数的函数参数145
4.3.2　匿名函数和lambda表达式149
4.3.3　随机数和模拟153
4.3.4　高阶函数155
4.4　程序的测试和调试156
4.4.1　测试157
4.4.2　排除程序里的错误162
4.4.3　使用IDLE的调试功能163
4.4.4　程序测试问题165
4.5　补充材料166
4.5.1　语言细节166
4.5.2　编程技术和规则169
练习169
第5章　数据的组织和操作 172
5.1　组合数据对象172
5.2　表173
5.2.1　简介174
5.2.2　表的构造和操作175
5.2.3　编程实例178
5.3　元组183
5.3.1　基础183
5.3.2　有理数程序包185
5.3.3　打包和拆分187
5.4　序列、不变对象和可变对象189
5.4.1　序列和序列操作189
5.4.2　描述式194
5.4.3　对象、变动和变量关联196
5.4.4　一些程序实例202
5.4.5　表处理204
5.5　字符串及其格式化生成209
5.5.1　字符串操作209
5.5.2　字符串的格式化213
5.5.3　一个简单的交互式计算器216
5.6　字典217
5.6.1　概念和操作218
5.6.2　字典与函数参数221
5.6.3　字典的应用实例222
5.7　集合224
5.7.1　概念和操作224
5.7.2　集合操作226
5.8　程序实例228
5.8.1　多项式计算228
5.8.2　另一个筛法实例231
5.9　若干语言和技术问题232
5.9.1　逻辑类型和逻辑判断232
5.9.2　函数参数的总结235
5.10　补充材料236
5.10.1　语言细节236
5.10.2　编程技术240
练习241
第6章　高级编程技术 248
6.1　文件：使用外存数据248
6.1.1　文件和输入/输出249
6.1.2　Python的文件功能251
6.1.3　文件处理程序实例256
6.2　生成器函数和闭包261
6.2.1　生成器函数261
6.2.2　闭包和装饰器265
6.2.3　编程实例274
6.3　异常和异常处理276
6.3.1　运行中的错误277
6.3.2　异常和异常处理279
6.3.3　异常处理的结构和技术282
6.3.4　try结构和raise语句详述284
6.3.5　预定义异常287
6.3.6　用异常作为控制机制288
6.4　数据处理和持久性291
6.4.1　文本生成291
6.4.2　数据记录和信息管理295
6.4.3　数据持久性300
6.4.4　with语句302
6.5　Python程序的几个问题304
6.5.1　Python程序及其运行304
6.5.2　程序格式307
6.5.3　怎样阅读Python手册308
6.6　补充材料309
6.6.1　语言细节309
6.6.2　编程技术313
练习315
第7章　数据抽象和面向对象编程 320
7.1　数据抽象、类和自定义类型320
7.1.1　类型和数据组合321
7.1.2　对象、类和类型323
7.2　Python的类和对象325
7.2.1　对象和操作325
7.2.2　类定义326
7.2.3　几点说明332
7.2.4　编程实例335
7.3　继承339
7.3.1　继承、基类和派生类340
7.3.2　编程实例344
7.3.3　多继承348
7.3.4　异常和类349
7.4　实例：学校人事管理350
7.4.1　概念分层和基础人员类350
7.4.2　具体人员类的设计和实现355
7.4.3　讨论358
7.5　特殊方法名和特殊功能的类359
7.5.1　容器类和迭代器359
*7.5.2　上下文管理器和with语句363
7.5.3　几个特殊方法名364
7.6　补充材料365
*7.6.1　Python类、对象和方法365
7.6.2　面向对象的技术和方法371
7.6.3　总结373
练习374
第8章　其他编程问题 377
8.1　图形用户界面377
8.1.1　人机界面的问题377
8.1.2　标准库包tkinter和图形用户界面380
*8.1.3　tkinter的ttk包400
8.1.4　GUI的简单应用和问题402
8.1.5　应用程序的GUI设计和实现404
8.1.6　总结和讨论412
8.2　并发程序设计414
8.2.1　并发程序415
8.2.2　Python并发库threading包418
8.2.3　定义自己的线程类422
8.2.4　并发程序的一些问题424
8.2.5　线程间通信和queue包431
8.2.6　一个GUI并发程序实例433
8.2.7　总结和讨论436
练习438
附录A　Python语言速查 440
附录B　标准函数 444
附录C　书中使用的几个标准库包 448
附录D　IDLE开发环境 449
参考文献及进一步阅读资料 452
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>从问题到程序-用Python学编程和计算
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python机器学习经典实例
第1章　监督学习　　1
1.1　简介　　1
1.2　数据预处理技术　　2
1.2.1　准备工作　　2
1.2.2　详细步骤　　2
1.3　标记编码方法　　4
1.4　创建线性回归器　　6
1.4.1　准备工作　　6
1.4.2　详细步骤　　7
1.5　计算回归准确性　　9
1.5.1　准备工作　　9
1.5.2　详细步骤　　10
1.6　保存模型数据　　10
1.7　创建岭回归器　　11
1.7.1　准备工作　　11
1.7.2　详细步骤　　12
1.8　创建多项式回归器　　13
1.8.1　准备工作　　13
1.8.2　详细步骤　　14
1.9　估算房屋价格　　15
1.9.1　准备工作　　15
1.9.2　详细步骤　　16
1.10　计算特征的相对重要性　　17
1.11　评估共享单车的需求分布　　19
1.11.1　准备工作　　19
1.11.2　详细步骤　　19
1.11.3　更多内容　　21
第2章　创建分类器　　24
2.1　简介　　24
2.2　建立简单分类器　　25
2.2.1　详细步骤　　25
2.2.2　更多内容　　27
2.3　建立逻辑回归分类器　　27
2.4　建立朴素贝叶斯分类器　　31
2.5　将数据集分割成训练集和测试集　　32
2.6　用交叉验证检验模型准确性　　33
2.6.1　准备工作　　34
2.6.2　详细步骤　　34
2.7　混淆矩阵可视化　　35
2.8　提取性能报告　　37
2.9　根据汽车特征评估质量　　38
2.9.1　准备工作　　38
2.9.2　详细步骤　　38
2.10　生成验证曲线　　40
2.11　生成学习曲线　　43
2.12　估算收入阶层　　45
第3章　预测建模　　48
3.1　简介　　48
3.2　用SVM建立线性分类器　　49
3.2.1　准备工作　　49
3.2.2　详细步骤　　50
3.3　用SVM建立非线性分类器　　53
3.4　解决类型数量不平衡问题　　55
3.5　提取置信度　　58
3.6　寻找最优超参数　　60
3.7　建立事件预测器　　62
3.7.1　准备工作　　62
3.7.2　详细步骤　　62
3.8　估算交通流量　　64
3.8.1　准备工作　　64
3.8.2　详细步骤　　64
第4章　无监督学习——聚类　　67
4.1　简介　　67
4.2　用k-means算法聚类数据　　67
4.3　用矢量量化压缩图片　　70
4.4　建立均值漂移聚类模型　　74
4.5　用凝聚层次聚类进行数据分组　　76
4.6　评价聚类算法的聚类效果　　79
4.7　用DBSCAN算法自动估算集群数量　　82
4.8　探索股票数据的模式　　86
4.9　建立客户细分模型　　88
第5章　构建推荐引擎　　91
5.1　简介　　91
5.2　为数据处理构建函数组合　　92
5.3　构建机器学习流水线　　93
5.3.1　详细步骤　　93
5.3.2　工作原理　　95
5.4　寻找最近邻　　95
5.5　构建一个KNN分类器　　98
5.5.1　详细步骤　　98
5.5.2　工作原理　　102
5.6　构建一个KNN回归器　　102
5.6.1　详细步骤　　102
5.6.2　工作原理　　104
5.7　计算欧氏距离分数　　105
5.8　计算皮尔逊相关系数　　106
5.9　寻找数据集中的相似用户　　108
5.10　生成电影推荐　　109
第6章　分析文本数据　　112
6.1　简介　　112
6.2　用标记解析的方法预处理数据　　113
6.3　提取文本数据的词干　　114
6.3.1　详细步骤　　114
6.3.2　工作原理　　115
6.4　用词形还原的方法还原文本的基本形式　　116
6.5　用分块的方法划分文本　　117
6.6　创建词袋模型　　118
6.6.1　详细步骤　　118
6.6.2　工作原理　　120
6.7　创建文本分类器　　121
6.7.1　详细步骤　　121
6.7.2　工作原理　　123
6.8　识别性别　　124
6.9　分析句子的情感　　125
6.9.1　详细步骤　　126
6.9.2　工作原理　　128
6.10　用主题建模识别文本的模式　　128
6.10.1　详细步骤　　128
6.10.2　工作原理　　131
第7章　语音识别　　132
7.1　简介　　132
7.2　读取和绘制音频数据　　132
7.3　将音频信号转换为频域　　134
7.4　自定义参数生成音频信号　　136
7.5　合成音乐　　138
7.6　提取频域特征　　140
7.7　创建隐马尔科夫模型　　142
7.8　创建一个语音识别器　　143
第8章　解剖时间序列和时序数据　　147
8.1　简介　　147
8.2　将数据转换为时间序列格式　　148
8.3　切分时间序列数据　　150
8.4　操作时间序列数据　　152
8.5　从时间序列数据中提取统计数字　　154
8.6　针对序列数据创建隐马尔科夫模型　　157
8.6.1　准备工作　　158
8.6.2　详细步骤　　158
8.7　针对序列文本数据创建条件随机场　　161
8.7.1　准备工作　　161
8.7.2　详细步骤　　161
8.8　用隐马尔科夫模型分析股票市场数据　　164
第9章　图像内容分析　　166
9.1　简介　　166
9.2　用OpenCV-Pyhon操作图像　　167
9.3　检测边　　170
9.4　直方图均衡化　　174
9.5　检测棱角　　176
9.6　检测SIFT特征点　　178
9.7　创建Star特征检测器　　180
9.8　利用视觉码本和向量量化创建特征　　182
9.9　用极端随机森林训练图像分类器　　185
9.10　创建一个对象识别器　　187
第10章　人脸识别　　189
10.1　简介　　189
10.2　从网络摄像头采集和处理视频信息　　189
10.3　用Haar级联创建一个人脸识别器　　191
10.4　创建一个眼睛和鼻子检测器　　193
10.5　做主成分分析　　196
10.6　做核主成分分析　　197
10.7　做盲源分离　　201
10.8　用局部二值模式直方图创建一个人脸识别器　　205
第11章　深度神经网络　　210
11.1　简介　　210
11.2　创建一个感知器　　211
11.3　创建一个单层神经网络　　213
11.4　创建一个深度神经网络　　216
11.5　创建一个向量量化器　　219
11.6　为序列数据分析创建一个递归神经网络　　221
11.7　在光学字符识别数据库中将字符可视化　　225
11.8　用神经网络创建一个光学字符识别器　　226
第12章　可视化数据　　230
12.1　简介　　230
12.2　画3D散点图　　230
12.3　画气泡图　　232
12.4　画动态气泡图　　233
12.5　画饼图　　235
12.6　画日期格式的时间序列数据　　237
12.7　画直方图　　239
12.8　可视化热力图　　241
12.9　动态信号的可视化模拟　　242

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python机器学习经典实例
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python地理空间分析指南
第1章 Python与地理空间分析 1
1．1　地理空间分析与我们的生活　1
1．2　地理空间分析的历史　3
1．3　地理信息系统　6
1．4　遥感　7
1．5　高程数据　12
1．6　计算机辅助制图　13
1．7　地理空间分析和计算机编程　14
1．8　地理空间分析的重要性　15
1．9　地理信息系统基本概念　16
1．9．1　专题地图　16
1．9．2　空间数据库　17
1．9．3　空间索引　17
1．9．4　元数据　17
1．9．5　地图投影　18
1．9．6　渲染　19
1．9．7　影像数据　20
1．9．8　遥感和颜色　20
1．10　GIS中矢量数据的基本概念　21
1．10．1　数据结构　21
1．10．2　缓冲区　22
1．10．3　融合　22
1．10．4　简化　23
1．10．5　叠置　24
1．10．6　合并　24
1．10．7　点包容性　25
1．10．8　联合　25
1．10．9　连接　26
1．10．10　地理空间中的多边形
规则　26
1．11　栅格数据的基本概念　27
1．11．1　波段运算　27
1．11．2　变化监测　27
1．11．3　柱状图　28
1．11．4　特征提取　28
1．11．5　监督分类　29
1．11．6　非监督分类　29
1．12　牛刀小试　29
1．12．1　Python简介　30
1．12．2　构建SimpleGIS　31
1．13　小结　38
第2章　地理空间数据　39
2．1　数据格式概览　39
2．2　数据结构　41
2．3　空间索引　42
2．3．1　索引算法　43
2．3．2　网格　44
2．4　概要化　45
2．5　元数据　46
2．6　文件结构　46
2．7　矢量数据　48
2．7．1　Shapefile文件　48
2．7．2　CAD文件　51
2．7．3　标签和标记格式　51
2．7．4　GeoJSON　53
2．8　影像数据　54
2．8．1　TIFF文件　55
2．8．2　JPEG、GIF、BMP和
PNG文件　56
2．8．3　压缩格式　56
2．8．4　ASCII网格　56
2．8．5　全球文件　57
2．9　点云数据　59
2．10　Web服务　61
2．11　小结　62
第3章　地理空间技术概览　63
3．1　数据访问　65
3．1．1　GDAL　65
3．1．2　OGR　67
3．2　计算几何　68
3．2．1　PROJ．4投影库　68
3．2．2　CGAL　69
3．2．3　JTS　71
3．2．4　GEOS　72
3．2．5　PostGIS　73
3．2．6　其他支持空间分析的
数据库　76
3．2．7　SpatiaLite　80
3．2．8　路径分析　80
3．3　桌面工具（包括可视化）　82
3．3．1　Quantum GIS　82
3．3．2　OpenEV　83
3．3．3　GRASS GIS　84
3．3．4　uDig　85
3．3．5　gvSIG　86
3．3．6　OpenJUMP　87
3．3．7　谷歌地球　87
3．3．8　NASA World Wind　89
3．3．9　ArcGIS　91
3．4　元数据管理　92
3．4．1　GeoNetwork　92
3．4．2　CatMDEdit　92
3．5　小结　93
第4章　Python的地理空间分析工具　95
4．1　安装Python的第三方模块　96
4．2　Python的网络库　100
4．2．1　Python的urllib模块　101
4．2．2　FTP　103
4．2．3　ZIP和TAR文件　104
4．3　Python的标记、标签解析器　107
4．3．1　minidom模块　107
4．3．2　元素树　109
4．3．3　WKT文本　115
4．4　Python的JSON库　117
4．4．1　json模块　118
4．4．2　geojson模块　119
4．5　OGR　119
4．6　PyShp　120
4．7　dbfpy3　121
4．8　Shapely　122
4．9　Fiona　123
4．10　GDAL　125
4．11　NumPy　125
4．12　PIL　127
4．13　PNGCanvas　129
4．14　GeoPandas　130
4．15　PyMySQL　132
4．16　PyFPDF　133
4．17　Spectral Python　134
4．18　小结　134
第5章　Python与地理信息系统　135
5．1　距离测量　135
5．1．1　勾股定理　138
5．1．2　半正矢公式　140
5．1．3　Vincenty公式　141
5．2　方位计算　144
5．3　坐标转换　144
5．4　重投影　146
5．5　Shapefile文件编辑　148
5．5．1　Shapefile文件访问　150
5．5．2　Shapefile文件属性读取　151
5．5．3　Shapefile文件几何
图形读取　154
5．5．4　Shapefile文件修改　155
5．5．5　Shapefile文件合并　157
5．5．6　Shapefile文件分割　160
5．6　查询优化　161
5．6．1　点包容性公式　161
5．6．2　边框查询　163
5．7　空间信息可视化　166
5．7．1　点密度计算　166
5．7．2　等值区域图　169
5．8　使用电子表格　171
5．9　使用GPS数据　173
5．10　地理化编码　174
5．11　小结　176
第6章　Python与遥感　177
6．1　图像波段变换　178
6．2　创建直方图　180
6．3　图像剪裁　187
6．4　图像分类　191
6．5　图像特征提取　195
6．6　变化监测　200
6．7　小结　205
第7章　Python与高程数据　206
7．1　ASCII网格文件　206
7．1．1　读取grids　207
7．1．2　写入grids　208
7．2　创建地形阴影　210
7．3　创建等高线　215
7．4　使用LIDAR　219
7．4．1　使用LIDAR创建网格　220
7．4．2　使用PIL让LIDAR支
持可视化　226
7．4．3　创建不规则三角
网络（TIN）　230
7．5　小结　234
第8章　Python与地理空间高级建模　235
8．1　归一化植被指数（NDVI）应用　235
8．1．1　建立框架　237
8．1．2　载入数据　239
8．1．3　栅格化Shapefile文件　239
8．1．4　波段剪裁　241
8．1．5　使用NDVI公式　241
8．1．6　NDVI分类　243
8．2　创建洪水淹没模型　246
8．2．1　洪水填充功能　248
8．2．2　创建洪水　250
8．3　创建彩色晕渲地形　253
8．4　最佳路径分析　255
8．4．1　建立测试网格　256
8．4．2　A*算法简介　257
8．4．3　生成测试路径　258
8．4．4　查看测试结果　259
8．4．5　实际应用　260
8．5　街道路网规划　267
8．6　照片地理定位　271
8．7　小结　273
第9章　实时数据　274
9．1　实时路况监测　275
9．1．1　NextBus代理列表　276
9．1．2　NextBus路径列表　277
9．1．3　NextBus设备地址　277
9．1．4　NextBus地址映射　279
9．2　气象跟踪　283
9．3　区域报告　291
9．4　小结　292
第10章　综合应用　294
10．1　GPS报告示例　294
10．2　使用GPX-Reporter．py　295
10．3　程序概要　296
10．4　初始化　297
10．5　功能函数调用　298
10．6　解析GPX　302
10．7　获取边框　303
10．8　下载地图和高程影像　304
10．9　创建地形　306
10．10　创建地图　307
10．11　高程测量　310
10．12　距离测量　311
10．13　获取气象数据　313
10．14　小结　317
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python地理空间分析指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python 3学习笔记（上卷）
第1章  概述
第2章  类型
2.1  基本环境
2.1.1  印象
2.1.2  名字
2.1.3  内存
2.1.4  编译
2.1.5  执行
2.2  内置类型
2.2.1  整数
2.2.2  浮点数
2.2.3  字符串
2.2.4  字节数组
2.2.5  列表
2.2.6  字典
2.2.7  集合
第3章  表达式
3.1  词法
3.1.1  源文件
3.1.2  代码
3.2  赋值
3.2.1  增量赋值
3.2.2  序列解包
3.2.3  作用域
3.3  运算符
3.3.1  链式比较
3.3.2  切片
3.3.3  逻辑运算
3.4  控制流
3.4.1  选择
3.4.2  循环
3.5  推导式
第4章  函数
4.1  定义
4.2  参数
4.3  返回值
4.4  作用域
4.5  闭包
4.6  调用
第5章  迭代器
5.1  迭代器概述
5.2  生成器
5.3  模式
5.4  函数式编程
第6章  模块
6.1  定义
6.2  导入
6.2.1  搜索
6.2.2  编译
6.2.3  引用
6.3  包
6.3.1  初始化
6.3.2  相对导入
6.3.3  拆分
第7章  类
7.1  定义
7.2  字段
7.3  属性
7.4  方法
7.5  继承
7.5.1  统一类型
7.5.2  初始化
7.5.3  覆盖
7.5.4  多继承
7.5.5  抽象类
7.6  开放类
7.7  运算符重载
第8章  异常
8.1  异常概述
8.2  断言
8.3  上下文
第9章  元编程
9.1  装饰器
9.1.1  实现
9.1.2  应用
9.2  描述符
9.3  元类
9.3.1  自定义
9.3.2  应用
9.4  注解
第10章  进阶
10.1  解释器
10.1.1  字节码
10.1.2  全局锁
10.1.3  执行过程
10.1.4  内存分配
10.1.5  垃圾回收
10.2  扩展
10.2.1  ctypes
10.2.2  Cython
第11章  测试
11.1  单元测试
11.1.1  unittest
11.1.2  unittest.mock
11.1.3  coverage
11.2  性能测试
11.2.1  timeit
11.2.2  profile
11.2.3  line profiler
11.2.4  memory profiler
11.2.5  pympler
第12章  工具
12.1  调试器
12.2  包管理
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python 3学习笔记（上卷）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>python 程序设计
出版者的话
译者序
前言
第1章　计算与问题求解简介
1.1　计算与Python简介
1.2　程序开发周期
1.2.1　在计算机上执行任务
1.2.2　程序规划
1.3　编程工具
1.3.1　流程图
1.3.2　伪代码
1.3.3　层次结构图
1.3.4　判断结构
1.3.5　判断纽约按数字编号街道方向的算法
1.3.6　循环结构
1.3.7　班级平均成绩算法
1.4　Python简介
1.4.1　启动IDLE
1.4.2　Python shell
1.4.3　Python代码编辑器
1.4.4　打开程序
第2章　核心对象、变量、输入和输出
2.1　数值
2.1.1　两种数值类型：整型和浮点型
2.1.2　算术运算符
2.1.3　print函数
2.1.4　变量
2.1.5　abs、int与round函数
2.1.6　增量赋值
2.1.7　其他两种整型运算符
2.1.8　括号与优先级
2.1.9　三种类型的错误
2.1.10　内存中的数值对象
2.2　字符串
2.2.1　字符串字面量
2.2.2　变量
2.2.3　索引和切片
2.2.4　反向索引
2.2.5　切片的默认边界
2.2.6　字符串连接
2.2.7　字符串重复
2.2.8　字符串函数和方法
2.2.9　链式方法
2.2.10　input函数
2.2.11　int、float、eval和str函数
2.2.12　内部文档
2.2.13　行延续
2.2.14　索引和切片越界
2.3　输出
2.3.1　print的可选参数sep
2.3.2　print的可选参数end
2.3.3　转义序列
2.3.4　域内输出对齐
2.3.5　使用format方法对齐输出
2.4　列表、元组和文件
2.4.1　列表对象
2.4.2　切片
2.4.3　split和join方法
2.4.4　文本文件
2.4.5　元组对象
2.4.6　嵌套列表
2.4.7　不可变和可变对象
2.4.8　列表复制
2.4.9　索引、删除和切片越界
关键术语和概念
编程项目
第3章　控制流结构
3.1　关系和逻辑运算符
3.1.1　ASCII值
3.1.2　关系运算符
3.1.3　列表元素的排序
3.1.4　逻辑运算符
3.1.5　短路求值
3.1.6　布尔数据类型
3.1.7　三种返回布尔值的方法
3.1.8　简化条件
3.2　判断结构
3.2.1　if-else语句
3.2.2　if语句
3.2.3　嵌套的if-else 语句
3.2.4　elif子句
3.2.5　使用if-elif-else语句的输入验证
3.2.6　True和False
3.3　while循环
3.3.1　while循环
3.3.2　break 语句
3.3.3　continue语句
3.3.4　创建菜单
3.3.5　无限循环
3.4　for循环
3.4.1　等差数列的循环遍历
3.4.2　range函数的步长值
3.4.3　for循环的嵌套
3.4.4　字符串中字符的循环遍历
3.4.5　遍历列表或元组元素的循环遍历
3.4.6　文本文件的行循环遍历
3.4.7　pass语句
3.4.8　使用文本文件的内容创建列表
关键术语和概念
编程项目
第4章　函数
4.1　函数（第一部分）
4.1.1　内建函数
4.1.2　用户自定义函数
4.1.3　具有一个参数的函数
4.1.4　向函数传值
4.1.5　具有多个参数的函数
4.1.6　返回布尔型或列表型的函数
4.1.7　无返回值的函数
4.1.8　无参数的函数
4.1.9　变量作用域
4.1.10　命名常量
4.1.11　库模块
4.2　函数（第二部分）
4.2.1　调用其他函数的函数
4.2.2　返回多个值的函数
4.2.3　列表解析
4.2.4　默认值
4.2.5　按参数名传递
4.2.6　自定义排序
4.2.7　Lambda表达式
4.2.8　sorted函数
4.3　程序设计
4.3.1　自顶向下的设计
4.3.2　结构化编程
4.3.3　结构化编程的优势
4.3.4　面向对象编程
4.3.5　相关引用
关键术语和概念
编程项目
第5章　数据处理
5.1　数据处理（第一部分）
5.1.1　读取文本文件
5.1.2　创建文本文件
5.1.3　向已有文本文件中添加行
5.1.4　修改文本文件中的元素
5.1.5　集合
5.1.6　集合推导
5.1.7　集合论方法
5.1.8　在文件中使用集合论的方法
5.2　数据处理（第二部分）
5.2.1　CSV文件
5.2.2　访问CSV文件中的数据
5.2.3　使用列表分析CSV文件中的数据
5.2.4　分析数值数据
5.2.5　Excel和CSV文件
5.3　字典
5.3.1　字典
5.3.2　dict函数
5.3.3　从文本文件中创建字典
5.3.4　使用字典作为频率表
5.3.5　在二进制文件中存储字典
5.3.6　值为字典的字典
5.3.7　从字典中获取顺序数据
5.3.8　使用元组作为字典的键
5.3.9　字典推导
关键术语和概念
编程项目
第6章　其他主题
6.1　异常处理
6.1.1　异常
6.1.2　try语句
6.1.3　else与finally子句
6.2　生成随机数
6.2.1　random模块中的函数
6.2.2　机会游戏
6.3　海龟图
6.3.1　坐标
6.3.2　turtle模块中的方法
6.3.3　矩形
6.3.4　旗帜
6.3.5　write方法
6.3.6　柱状图
6.3.7　折线图
6.4　递归
6.4.1　递归的指数计算函数
6.4.2　递归的回文生成函数
6.4.3　递归的分形计算函数
关键术语和概念
编程项目
第7章　面向对象编程
7.1　类与对象
7.1.1　内建类
7.1.2　用户自定义类
7.1.3　初始化方法的其他形式
7.1.4　类定义中方法的数量
7.1.5　对象列表
7.2　继承
7.2.1　学期成绩类
7.2.2　is-a关系
7.2.3　isinstance函数
7.2.4　向子类中添加新的实例变量
7.2.5　覆盖方法
7.2.6　多态
关键术语和概念
编程项目
第8章　图形用户界面
8.1　控件
8.1.1　什么是图形用户界面
8.1.2　按钮控件
8.1.3　标签控件
8.1.4　输入控件
8.1.5　只读输入控件
8.1.6　列表框控件
8.1.7　滚动条控件
8.2　网格布局管理器
8.2.1　网格
8.2.2　sticky属性
8.2.3　向列表框添加垂直滚动条
8.2.4　设计窗体布局
8.3　编写GUI程序
8.3.1　将TUI程序改写成GUI程序
8.3.2　将文件加载到列表框中
8.3.3　用面向对象方式编写GUI程序
关键术语和概念
编程项目
附录A　ASCII值
附录B　保留字
附录C　安装Python和IDLE
奇数编号习题答案
索引
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>python 程序设计
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python宝典
第1部分入门篇
第1章初识Python	2
1.1  Python是什么	2
1.2  Python有什么优点	3
1.3  其他程序设计语言中的Python	4
1.4  快速搭建Python开发环境	5
1.4.1  哪些系统中可使用Python	5
1.4.2  Python的下载和安装	6
1.4.3  用VS2008编译Python源码	8
1.4.4  Python开发工具：Vim	9
1.4.5  Python开发工具：Emacs	13
1.4.6  Python开发工具：PythonWin	16
1.4.7  其他的Python开发工具	17
1.5  第一个Python程序	19
1.5.1  从“Hello，Python!”开始	19
1.5.2  Python的交互解释器	20
1.6  本章小结	21
第2章  Python起步必备	22
2.1  Python代码的组织形式	22
2.1.1  用缩进来分层	22
2.1.2  两种代码注释的方式	23
2.1.3  Python语句的断行	23
2.2  Python的基本输入输出函数	25
2.2.1  接收输入的input函数	25
2.2.2  输出内容的print函数	26
2.3  Python对中文的支持	27
2.3.1  Python 3之前版本如何使用中文	27
2.3.2  更全面的中文支持	29
2.4  简单实用的Python计算器	29
2.4.1  直接进行算术运算	30
2.4.2  math模块提供丰富的数学函数	30
2.4.3  Python对大整数的支持	31
2.5  本章小结	32
第3章  Python数据类型与基本语句	33
3.1  Python数据类型：数字	33
3.1.1  整型和浮点型	33
3.1.2  运算符	34
3.2  Python数据类型：字符串	36
3.2.1  Python中的字符串	36
3.2.2  字符串中的转义字符	36
3.2.3  操作字符串	37
3.2.4  字符串的索引和分片	39
3.2.5  格式化字符串	40
3.2.6  字符串、数字类型的转换	40
3.2.7  原始字符串（Raw String）	41
3.3  Python数据类型：列表和元组	42
3.3.1  创建和操作列表	42
3.3.2  创建和操作元组	43
3.4  Python数据类型：字典	43
3.5  Python数据类型：文件	44
3.6  Python的流程控制语句	46
3.6.1  分支结构：if语句	46
3.6.2  循环结构：for语句	48
3.6.3  循环结构：while语句	50
3.7  本章小结	51
第4章可复用的函数与模块	52
4.1  Python自定义函数	52
4.1.1  函数声明	52
4.1.2  函数调用	53
4.2  参数让函数更有价值	54
4.2.1  有默认值的参数	54
4.2.2  参数的传递方式	55
4.2.3  如何传递任意数量的参数	56
4.2.4  用参数返回计算结果	57
4.3  变量的作用域	57
4.4  最简单的函数：用lambda声明函数	58
4.5  可重用结构：Python模块	59
4.5.1  Python模块的基本用法	59
4.5.2  Python在哪里查找模块	61
4.5.3  是否需要编译模块	62
4.5.4  模块也可独立运行	63
4.5.5  如何查看模块提供的函数名	64
4.6  用包来管理多个模块	65
4.7  本章小结	66
第5章数据结构与算法	67
5.1  表、栈和队列	67
5.1.1  表	67
5.1.2  栈	68
5.1.3  队列	70
5.2  树和图	72
5.2.1  树	72
5.2.2  二叉树	73
5.2.3  图	76
5.3  查找与排序	78
5.3.1  查找	78
5.3.2  排序	79
5.4  本章小结	82
第6章面向对象的Python	83
6.1  面向对象编程概述	83
6.1.1  Python中的面向对象思想	83
6.1.2  类和对象	84
6.2  在Python中定义和使用类	84
6.2.1  类的定义	85
6.2.2  类的使用	86
6.3  类的属性和方法	87
6.3.1  类的属性	87
6.3.2  类的方法	88
6.4  类的继承	91
6.4.1  使用继承	91
6.4.2  Python的多重继承	92
6.5  在类中重载方法和运算符	94
6.5.1  方法重载	94
6.5.2  运算符重载	95
6.6  在模块中定义类	97
6.7  本章小结	98
第7章异常处理与程序调试	99
7.1  异常的处理	99
7.1.1  用try语句捕获异常	99
7.1.2  常见异常的处理	101
7.1.3  多重异常的捕获	102
7.2  用代码抛出异常	103
7.2.1  用raise抛出异常	103
7.2.2  assert——简化的raise语句	104
7.2.3  自定义异常类	105
7.3  使用pdb调试Python脚本	106
7.3.1  运行语句	106
7.3.2  运行表达式	107
7.3.3  运行函数	107
7.3.4  设置硬断点	108
7.3.5  pdb调试命令	109
7.4  在PythonWin中调试程序	111
7.5  本章小结	113
第8章  Python多媒体编程	114
8.1  使用PyOpenGL绘制三维图形	114
8.1.1  安装PyOpenGL	114
8.1.2  使用PyOpenGL创建窗口	115
8.1.3  绘制文字	116
8.1.4  绘制二维图形	118
8.1.5  绘制三维图形	120
8.1.6  纹理映射	122
8.2  播放音频文件	125
8.2.1  使用DirectSound	125
8.2.2  使用WMPlayer.OCX	126
8.3  PyGame	128
8.3.1  安装PyGame	128
8.3.2  使用PyGame编写简单的游戏	129
8.4  本章小结	132
第9章使用PIL处理图片	133
9.1  PIL概述	133
9.1.1  安装PIL	133
9.1.2  PIL简介	135
9.2  使用PIL处理图片	137
9.2.1  转换图片格式	137
9.2.2  生成缩略图	139
9.2.3  为图片添加Logo	142
9.3  本章小结	147
第10章系统编程	148
10.1  访问Windows注册表	148
10.1.1  注册表概述	148
10.1.2  使用Python操作注册表	149
10.1.3  查看系统启动项	152
10.1.4  修改IE	153
10.2  文件和目录	156
10.2.1  文件目录常用函数	156
10.2.2  批量重命名	158
10.2.3  代码框架生成器	159
10.3  生成可执行文件	160
10.3.1  安装py2exe	161
10.3.2  使用py2exe生成可执行文件	161
10.3.3  使用cx_freeze生成可执行
文件	163
10.4  运行其他程序	164
10.4.1  使用os.system()函数运行其
他程序	164
10.4.2  使用ShellExecute函数运行
其他程序	165
10.4.3  使用CreateProcess函数运行
其他程序	166
10.4.4  使用ctypes调用kernel32.dll
中的函数	167
10.5  本章小结	168
第11章使用PythonWin编写GUI	169
11.1  Windows GUI编程概述	169
11.1.1  使用Windows API创建窗口	169
11.1.2  使用MFC创建窗口	172
11.2  创建对话框	172
11.2.1  创建对话框	173
11.2.2  向对话框添加控件	174
11.2.3  使用DLL文件中的资源	176
11.2.4  处理按钮消息	177
11.3  创建菜单	179
11.3.1  创建菜单	179
11.3.2  使用DLL中的菜单	182
11.3.3  处理菜单消息	184
11.4  本章小结	185
第12章使用tkinter编写GUI	186
12.1  tkinter概述	186
12.1.1  创建简单的窗口	186
12.1.2  向窗口中添加组件	187
12.2  使用组件	188
12.2.1  组件分类	188
12.2.2  组件布局	188
12.2.3  使用按钮	189
12.2.4  使用文本框	190
12.2.5  使用标签	192
12.2.6  使用菜单	193
12.2.7  使用单选框和复选框	195
12.2.8  绘制图形	197
12.3  事件处理	199
12.3.1  事件表示	199
12.3.2  响应事件	201
12.4  创建对话框	204
12.4.1  使用标准对话框	204
12.4.2  创建自定义对话框	208
12.5  本章小结	210
第13章使用wxPython编写GUI	211
13.1  wxPython概述	211
13.1.1  安装wxPython	211
13.1.2  创建窗口	212
13.2  组件	214
13.2.1  面板	214
13.2.2  按钮	215
13.2.3  标签	217
13.2.4  文本框	218
13.2.5  单选框和复选框	221
13.2.6  使用sizer布置组件	222
13.3  对话框	224
13.3.1  消息框和标准对话框	224
13.3.2  创建自定义对话框	226
13.4  菜单	227
13.4.1  创建菜单	228
13.4.2  绑定菜单事件	230
13.5  一个简单的文本编辑器	231
13.5  本章小结	234
第14章使用PyGTK编写GUI	235
14.1  PyGTK概述	235
14.1.1  PyGTK安装	235
14.1.2  创建窗口	236
14.2  组件	238
14.2.1  标签	238
14.2.2  按钮	241
14.2.3  容器组件	243
14.2.4  文本框	246
14.2.5  单选框和复选框	249
14.3  消息框和对话框	250
14.3.1  消息框	250
14.3.2  标准对话框	252
14.3.3  自定义对话框	254
14.4  使用菜单	256
14.4.1  创建菜单	256
14.4.2  菜单事件	259
14.5  资源文件	260
14.5.1  使用Glade创建资源文件	261
14.5.2  使用资源文件	263
14.6  本章小结	264
第15章使用PyQT编写GUI	265
15.1  PyQt概述	265
15.1.1  PyQt的安装	265
15.1.2  使用PyQt创建窗口	266
15.2  组件	267
15.2.1  标签	267
15.2.2  布局组件和空白项	268
15.2.3  按钮	270
15.2.4  文本框	272
15.2.5  单选框和复选框	275
15.2.6  菜单	276
15.3  创建对话框	278
15.3.1  消息框和标准对话框	279
15.3.2  自定义对话框	283
15.4  使用资源	285
15.4.1  使用Qt Designer创建资源
文件	285
15.4.2  使用资源文件	287
15.5  本章小结	288
第2部分高级篇
第16章  Python与数据库	290
16.1  连接Access数据库	290
16.1.1  使用ODBC连接Access数
据库	290
16.1.2  使用 DAO连接Access数
据库	294
16.1.3  使用ADO连接Access数
据库	295
16.2  使用MySQL数据库	296
16.2.1  安装MySQL	297
16.2.2  连接到MySQL	299
16.3  嵌入式数据库SQLite	301
16.4  本章小结	302
第17章  Python Web应用	303
17.1  开源Web应用服务器Zope	303
17.1.1  安装Zope	303
17.1.2  使用Zope管理界面	305
17.1.3  创建模板	308
17.1.4  添加Python脚本	310
17.2  使用Plone内容管理系统	312
17.2.1  安装Plone	312
17.2.2  安装Plone插件	314
17.3  在Microsoft IIS中使用Python	316
17.3.1  安装Microsoft IIS	317
17.3.2  在ASP中使用Python脚本	319
17.3.3  一个简单的例子	321
17.4  在Apache中使用Python	325
17.4.1  安装配置Apache	325
17.4.2  安装mod_python	327
17.4.3  使用Python Sever Pages创建
留言板	328
17.5  本章小结	331
第18章  Python网络编程	332
18.1  使用socket模块	332
18.1.1  网络编程概述	332
18.1.2  使用socket模块建立网络
通信	333
18.1.3  在局域网中传输文件	338
18.2  使用urllib、httplib和ftplib	341
18.2.1  使用Python访问网站	341
18.2.2  访问FTP	345
18.3  使用poplib和smtplib模块收发邮件	350
18.3.1  检查E-mail	350
18.3.2  发送E-mail	353
18.4  本章小结	357
第19章处理HTML与XML	358
19.1  处理HTML	358
19.1.1  HTMLParser类简介	358
19.1.2  获取页面图片地址	359
19.1.3  查看天气预报	361
19.2  处理XML	366
19.2.1  XML基础	367
19.2.2  文档类型定义	368
19.2.3  命名空间	370
19.3  使用Python处理XML	370
19.3.1  使用xml.parsers.expat处理
XML	371
19.3.2  使用xml.sax处理XML	373
19.3.3  使用xml.dom处理XML	374
19.4  简单的RSS阅读器	375
19.5  本章小结	378
第20章功能强大的正则表达式	379
20.1  正则表达式概述	379
20.1.1  正则表达式的基本元字符	379
20.1.2  常用正则表达式分析	380
20.2  支持正则表达式的re模块	381
20.2.1  用match函数进行搜索	381
20.2.2  用sub函数进行内容替换	382
20.2.3  用split函数分割字符串	383
20.3  编译生成正则表达式对象	383
20.3.1  以“”开头的元字符	383\
20.3.2  用compile函数编译正则表
达式	385
20.3.3  在正则表达式中使用原始字
符串	385
20.4  用正则表达式对象提速	386
20.4.1  使用match方法匹配和搜索	386
20.4.2  使用sub方法替换内容	387
20.4.3  使用split方法分割字符串	388
20.5  正则表达式中的分组	389
20.5.1  分组的概述	389
20.5.2  分组的扩展语法	390
20.6  匹配和搜索的结果对象：Match对象	391
20.6.1  使用Match对象处理组	391
20.6.2  使用Match对象处理索引	392
20.7  使用正则表达式处理文件	393
20.8  本章小结	395
第21章科学计算	396
21.1  NumPy和SciPy简介	396
21.1.1  安装NumPy和SciPy	396
21.1.2  NumPy简介	398
21.1.3  SciPy简介	399
21.2  矩阵运算和解线性方程组	400
21.2.1  矩阵运算	400
21.2.2  解线性方程组	402
21.3  使用Matplotlib绘制函数图形	403
21.3.1  安装Matplotlib	403
21.3.2  使用Matplotlib绘制图形	405
21.4  本章小结	407
第22章  Python扩展和嵌入	408
22.1  用C/C++扩展Python	408
22.1.1  VS2008编译环境的设置	408
22.1.2  Python扩展程序的结构	414
22.1.3  在Python扩展中使用MFC	416
22.2  在C/C++中嵌入Python	420
22.2.1  高层次的嵌入Python	420
22.2.2  较低层次嵌入Python	421
22.2.3  在C中嵌入Python实例	426
22.3  通过SWIG编写Python扩展	428
22.3.1  在VS中使用SWIG	428
22.3.3  SWIG接口文件的语法简介	431
22.4  Boost.Python使程序更简单	433
22.4.1  下载编译Boost.Python	433
22.4.2  使用Boost.Python简化扩展
和嵌入	435
22.4.3  使用Pyste生成代码	439
22.5  本章小结	440
第23章多线程编程	441
23.1  线程基础	441
23.1.1  创建线程	441
23.1.2  Thread对象中的方法	442
23.2  线程同步	445
23.2.1  简单的线程同步	445
23.2.2  使用条件变量保持线程同步	447
23.2.3  使用队列让线程同步	448
23.3  线程间通信	449
23.3.1  Event对象的方法	449
23.3.2  使用Event对象实现线程间
通信	450
23.4  微线程——Stackless Python	450
23.4.1  Stackless Python概述	451
23.4.2  使用微线程	453
23.5  本章小结	454
第3部分案例篇
第24章案例1：用Python优化Windows	456
24.1  案例概述	456
24.2  创建图形化界面	457
24.2.1  编写脚本创建GUI	457
24.2.2  响应菜单事件	459
24.3  清理垃圾文件	461
24.3.1  遍历目录	462
24.3.2  扫描垃圾文件	463
24.3.3  使用多线程	464
24.3.4  扫描所有磁盘	465
24.3.5  删除垃圾文件	467
24.4  搜索文件	469
24.4.1  搜索大文件	469
24.4.2  按名称搜索文件	471
24.5  本章小结	472
第25章案例2：用Python玩转大数据	473
25.1  案例概述	473
25.1.1  了解大数据处理方式	473
25.1.2  处理日志文件	474
25.1.3  案例目标	475
25.2  日志文件的分割	476
25.3  编写Map函数处理小文件	477
25.4  编写Reduce函数	479
25.5  本章小结	480
第26章案例3：植物大战僵尸	481
26.1  案例概述	481
26.1.1  游戏效果	481
26.1.2  游戏规划设计	482
26.2  收集资源	483
26.2.1  收集图片素材	483
26.2.3  收集声效素材	484
26.3  编写初始脚本	485
26.3.1  定义游戏初始环境	485
26.3.2  导入游戏素材	486
26.4  编写游戏核心脚本	489
26.4.1  编写游戏循环脚本	489
26.4.2  处理事件——响应玩家的
操作	490
26.4.3  添加角色到游戏	492
26.4.4  更新角色状态	493
26.4.5  重绘画面	494
26.4.6  判断角色交战状态	494
26.4.7  判断胜负状态	495
26.5  本章小结	496
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python宝典
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通Python自然语言处理
第1章字符串操作1
1.1切分1
1.1.1将文本切分为语句2
1.1.2其他语言文本的切分2
1.1.3将句子切分为单词3
1.1.4使用TreebankWordTokenizer执行切分4
1.1.5使用正则表达式实现切分5
1.2标准化8
1.2.1消除标点符号8
1.2.2文本的大小写转换9
1.2.3处理停止词9
1.2.4计算英语中的停止词10
1.3替换和校正标识符11
1.3.1使用正则表达式替换单词11
1.3.2用另一个文本替换文本的示例12
1.3.3在执行切分前先执行替换操作12
1.3.4处理重复字符13
1.3.5去除重复字符的示例13
1.3.6用单词的同义词替换14
1.3.7用单词的同义词替换的示例15
1.4在文本上应用Zipf定律15
1.5相似性度量16
1.5.1使用编辑距离算法执行相似性度量16
1.5.2使用Jaccard系数执行相似性度量18
1.5.3使用Smith Waterman距离算法执行相似性度量19
1.5.4其他字符串相似性度量19
1.6小结20
第2章统计语言建模21
2.1理解单词频率21
2.1.1为给定的文本开发MLE25
2.1.2隐马尔科夫模型估计32
2.2在MLE模型上应用平滑34
2.2.1加法平滑34
2.2.2Good Turing平滑35
2.2.3Kneser Ney平滑40
2.2.4Witten Bell平滑41
2.3为MLE开发一个回退机制41
2.4应用数据的插值以便获取混合搭配42
2.5通过复杂度来评估语言模型42
2.6在语言建模中应用Metropolis—Hastings算法43
2.7在语言处理中应用Gibbs采样法43
2.8小结46
第3章形态学：在实践中学习47
3.1形态学简介47
3.2理解词干提取器48
3.3理解词形还原51
3.4为非英文语言开发词干提取器52
3.5形态分析器54
3.6形态生成器56
3.7搜索引擎56
3.8小结61
第4章词性标注：单词识别62
4.1词性标注简介62
默认标注67
4.2创建词性标注语料库68
4.3选择一种机器学习算法70
4.4涉及n—gram的统计建模72
4.5使用词性标注语料库开发分块器78
4.6小结80
第5章语法解析：分析训练资料81
5.1语法解析简介81
5.2Treebank建设82
5.3从Treebank提取上下文无关文法规则87
5.4从CFG创建概率上下文无关文法93
5.5CYK线图解析算法94
5.6Earley线图解析算法96
5.7小结102
第6章语义分析：意义很重要103
6.1语义分析简介103
6.1.1NER简介107
6.1.2使用隐马尔科夫模型的NER系统111
6.1.3使用机器学习工具包训练NER117
6.1.4使用词性标注执行NER117
6.2使用Wordnet生成同义词集id119
6.3使用Wordnet进行词义消歧122
6.4小结127
第7章情感分析：我很快乐128
7.1情感分析简介128
7.1.1使用NER执行情感分析134
7.1.2使用机器学习执行情感分析134
7.1.3NER系统的评估141
7.2小结159
第8章信息检索：访问信息160
8.1信息检索简介160
8.1.1停止词删除161
8.1.2使用向量空间模型进行信息检索163
8.2向量空间评分及查询操作符关联170
8.3使用隐性语义索引开发IR系统173
8.4文本摘要174
8.5问答系统176
8.6小结177
第9章语篇分析：理解才是可信的178
9.1语篇分析简介178
9.1.1使用中心理论执行语篇分析183
9.1.2指代消解184
9.2小结188
第10章NLP系统评估：性能分析189
10.1NLP系统评估要点189
10.1.1NLP工具的评估（词性标注器、词干提取器及形态分析器）190
10.1.2使用黄金数据执行解析器评估200
10.2IR系统的评估201
10.3错误识别指标202
10.4基于词汇搭配的指标202
10.5基于句法匹配的指标207
10.6使用浅层语义匹配的指标207
10.7小结208
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通Python自然语言处理
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>PySpark实战指南
Contents?目 录
译者序
序
前言
关于作者
第1章 了解Spark 1
1.1 什么是Apache Spark 1
1.2 Spark作业和API 2
1.2.1 执行过程 2
1.2.2 弹性分布式数据集 3
1.2.3 DataFrame 4
1.2.4 Dataset 5
1.2.5 Catalyst优化器 5
1.2.6 钨丝计划 5
1.3 Spark 2.0的架构 6
1.3.1 统一Dataset和DataFrame 7
1.3.2 SparkSession介绍 8
1.3.3 Tungsten Phase 2 8
1.3.4 结构化流 10
1.3.5 连续应用 10
1.4 小结 11
第2章 弹性分布式数据集 12
2.1 RDD的内部运行方式 12
2.2 创建RDD 13
2.2.1 Schema 14
2.2.2 从文件读取 14
2.2.3 Lambda表达式 15
2.3 全局作用域和局部作用域 16
2.4 转换 17
2.4.1 .map(...)转换 17
2.4.2 .filter(...)转换 18
2.4.3 .flatMap(...)转换 18
2.4.4 .distinct(...)转换 18
2.4.5 .sample(...)转换 19
2.4.6 .leftOuterJoin(...)转换 19
2.4.7 .repartition(...)转换 20
2.5 操作 20
2.5.1 .take(...)方法 21
2.5.2 .collect(...)方法 21
2.5.3 .reduce(...)方法 21
2.5.4 .count(...)方法 22
2.5.5 .saveAsTextFile(...)方法 22
2.5.6 .foreach(...)方法 23
2.6 小结 23
第3章 DataFrame 24
3.1 Python到RDD之间的通信 24
3.2 Catalyst优化器刷新 25
3.3 利用DataFrame加速PySpark 27
3.4 创建DataFrame 28
3.4.1 生成自己的JSON数据 29
3.4.2 创建一个DataFrame 29
3.4.3 创建一个临时表 30
3.5 简单的DataFrame查询 31
3.5.1 DataFrame API查询 32
3.5.2 SQL查询 32
3.6 RDD的交互操作 33
3.6.1 使用反射来推断模式 33
3.6.2 编程指定模式 34
3.7 利用DataFrame API查询 35
3.7.1 行数 35
3.7.2 运行筛选语句 35
3.8 利用SQL查询 36
3.8.1 行数 36
3.8.2 利用where子句运行筛选语句 36
3.9 DataFrame场景——实时飞行性能 38
3.9.1 准备源数据集 38
3.9.2 连接飞行性能和机场 39
3.9.3 可视化飞行性能数据 40
3.10 Spark数据集（Dataset）API 41
3.11 小结 42
第4章 准备数据建模 43
4.1 检查重复数据、未观测数据和异常数据（离群值） 43
4.1.1 重复数据 43
4.1.2 未观测数据 46
4.1.3 离群值 50
4.2 熟悉你的数据 51
4.2.1 描述性统计 52
4.2.2 相关性 54
4.3 可视化 55
4.3.1 直方图 55
4.3.2 特征之间的交互 58
4.4 小结 60
第5章 MLlib介绍 61
5.1 包概述 61
5.2 加载和转换数据 62
5.3 了解你的数据 65
5.3.1 描述性统计 66
5.3.2 相关性 67
5.3.3 统计测试 69
5.4 创建最终数据集 70
5.4.1 创建LabeledPoint形式的RDD 70
5.4.2 分隔培训和测试数据 71
5.5 预测婴儿生存机会 71
5.5.1 MLlib中的逻辑回归 71
5.5.2 只选择最可预测的特征 72
5.5.3 MLlib中的随机森林 73
5.6 小结 74
第6章 ML包介绍 75
6.1 包的概述 75
6.1.1 转换器 75
6.1.2 评估器 78
6.1.3 管道 80
6.2 使用ML预测婴儿生存几率 80
6.2.1 加载数据 80
6.2.2 创建转换器 81
6.2.3 创建一个评估器 82
6.2.4 创建一个管道 82
6.2.5 拟合模型 83
6.2.6 评估模型的性能 84
6.2.7 保存模型 84
6.3 超参调优 85
6.3.1 网格搜索法 85
6.3.2 Train-validation 划分 88
6.4 使用PySpark ML的其他功能 89
6.4.1 特征提取 89
6.4.2 分类 93
6.4.3 聚类 95
6.4.4 回归 98
6.5 小结 99
第7章 GraphFrames 100
7.1 GraphFrames介绍 102
7.2 安装GraphFrames 102
7.2.1 创建库 103
7.3 准备你的航班数据集 105
7.4 构建图形 107
7.5 执行简单查询 108
7.5.1 确定机场和航班的数量 108
7.5.2 确定这个数据集中的最长延误时间 108
7.5.3 确定延误和准点/早到航班的数量对比 109
7.5.4 哪一班从西雅图出发的航班最有可能出现重大延误 109
7.5.5 西雅图出发到哪个州的航班最有可能出现重大延误 110
7.6 理解节点的度 110
7.7 确定最大的中转机场 112
7.8 理解Motif 113
7.9 使用PageRank确定机场排名 114
……
第8章 TensorFrames 120
8.1 深度学习是什么 120
8.1.1 神经网络和深度学习的必要性 123
8.1.2 特征工程是什么 125
8.1.3 桥接数据和算法 125
8.2 TensorFlow是什么 127
8.2.1 安装PIP 129
8.2.2 安装TensorFlow 129
8.2.3 使用常量进行矩阵乘法 130
8.2.4 使用placeholder进行矩阵乘法 131
8.2.5 讨论 132
8.3 TensorFrames介绍 133
8.4 TensorFrames快速入门 134
8.4.1 配置和设置 134
8.4.2 使用TensorFlow向已有列添加常量 136
8.4.3 Blockwise reducing操作示例 137
8.5 小结 139
第9章 使用Blaze实现混合持久化
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>PySpark实战指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>零基础学python图文版
冒险 1
深入Python01
什么是编程 2
打开IDLE 2
回到你的第一个Python 程序 4
没有效果——哎呀 5
使用一个文件编辑器 7
带有变量的提问 9
关于变量的一点知识 11
在填空故事中使用变量 12
让程序做决定：条件语句 13
使用if 声明 14
嵌套if 声明语句 15
创建一个虚构的自动售货机 17
使用循环来重复代码 18
使用while 循环 19
限while 循环 20
赞美生成器 20
一个更大的冒险：终端控制的太空飞船 22
设置和密码 23
使用终端来做事情 24
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>零基础学python图文版
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python 编程指南
译者序
作者简介
致谢
简介
第一部分  啊, 你得到了什么
第1章  Python的介绍
1. 1  脚本化：现在有些事情完全不同了

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python 编程指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据科学指南
第1章Python在数据科学中的应用 1
1.1 简介 2
1.2 使用字典对象 2
1.2.1 准备工作 2
1.2.2 操作方法 2
1.2.3 工作原理 3
1.2.4 更多内容 4
1.2.5 参考资料 6
1.3 使用字典的字典 6
1.3.1 准备工作 6
1.3.2 操作方法 6
1.3.3 工作原理 7
1.3.4 参考资料 7
1.4 使用元组 7
1.4.1 准备工作 7
1.4.2 操作方法 8
1.4.3 工作原理 9
1.4.4 更多内容 12
1.4.5 参考资料 12
1.5 使用集合 13
1.5.1 准备工作 13
1.5.2 操作方法 13
1.5.3 工作原理 14
1.5.4 更多内容 15
1.6 写一个列表 16
1.6.1 准备工作 16
1.6.2 操作方法 16
1.6.3 工作原理 18
1.6.4 更多内容 19
1.7 从另一个列表创建列表——列表推导 20
1.7.1 准备工作 20
1.7.2 操作方法 20
1.7.3 工作原理 20
1.7.4 更多内容 21
1.8 使用迭代器 22
1.8.1 准备工作 22
1.8.2 操作方法 23
1.8.3 工作原理 23
1.8.4 更多内容 24
1.9 生成一个迭代器和生成器 24
1.9.1 准备工作 25
1.9.2 操作方法 25
1.9.3 工作原理 25
1.9.4 更多内容 25
1.10 使用可迭代对象 26
1.10.1 准备工作 26
1.10.2 操作方法 26
1.10.3 工作原理 27
1.10.4 参考资料 27
1.11 将函数作为变量传递 28
1.11.1 准备工作 28
1.11.2 操作方法 28
1.11.3 工作原理 28
1.12 在函数中嵌入函数 28
1.12.1 准备工作 29
1.12.2 操作方法 29
1.12.3 工作原理 29
1.13 将函数作为参数传递 29
1.13.1 准备工作 29
1.13.2 操作方法 29
1.13.3 工作原理 30
1.14 返回一个函数 30
1.14.1 准备工作 31
1.14.2 操作方法 31
1.14.3 工作原理 31
1.14.4 更多内容 32
1.15 使用装饰器改变函数行为 32
1.15.1 准备工作 32
1.15.2 操作方法 32
1.15.3 工作原理 33
1.16 使用lambda创造匿名函数 34
1.16.1 准备工作 34
1.16.2 操作方法 35
1.16.3 工作原理 35
1.17 使用映射函数 35
1.17.1 准备工作 36
1.17.2 操作方法 36
1.17.3 工作原理 36
1.17.4 更多内容 36
1.18 使用过滤器 37
1.18.1 准备工作 37
1.18.2 操作方法 37
1.18.3 工作原理 38
1.19 使用zip和izip函数 38
1.19.1 准备工作 38
1.19.2 操作方法 38
1.19.3 工作原理 38
1.19.4 更多内容 39
1.19.5 参考资料 40
1.20 从表格数据使用数组 40
1.20.1 准备工作 40
1.20.2 操作方法 41
1.20.3 工作原理 41
1.20.4 更多内容 42
1.21 对列进行预处理 43
1.21.1 准备工作 44
1.21.2 操作方法 44
1.21.3 工作原理 45
1.21.4 更多内容 45
1.22 列表排序 46
1.22.1 准备工作 46
1.22.2 操作方法 46
1.22.3 工作原理 46
1.22.4 更多内容 47
1.23 采用键排序 47
1.23.1 准备工作 48
1.23.2 操作方法 48
1.23.3 工作原理 49
1.23.4 更多内容 49
1.24 使用itertools 52
1.24.1 准备工作 52
1.24.2 操作方法 52
1.24.3 工作原理 53
第2章 Python环境 55
2.1 简介 55
2.2 使用NumPy库 55
2.2.1 准备工作 55
2.2.2 操作方法 56
2.2.3 工作原理 58
2.2.4 更多内容 64
2.2.5 参考资料 64
2.3 使用matplotlib进行绘画 64
2.3.1 准备工作 64
2.3.2 操作方法 64
2.3.3 工作原理 66
2.3.4 更多内容 72
2.4 使用scikit—learn进行机器学习 73
2.4.1 准备工作 73
2.4.2 操作方法 73
2.4.3 工作原理 75
2.4.4 更多内容 81
2.4.5 参考资料 82
第3章 数据分析——探索与争鸣 83
3.1 简介 84
3.2 用图表分析单变量数据 85
3.2.1 准备工作 85
3.2.2 操作方法 86
3.2.3 工作原理 87
3.2.4 参考资料 92
3.3 数据分组和使用点阵图 92
3.3.1 准备工作 93
3.3.2 操作方法 93
3.3.3 工作原理 95
3.3.4 参考资料 97
3.4 为多变量数据绘制散点阵图 97
3.4.1 准备工作 98
3.4.2 操作方法 98
3.4.3 工作原理 99
3.4.4 参考资料 100
3.5 使用热图 101
3.5.1 准备工作 101
3.5.2 操作方法 101
3.5.3 工作原理 102
3.5.4 更多内容 104
3.5.5 参考资料 105
3.6 实施概要统计及绘图 105
3.6.1 准备工作 105
3.6.2 操作方法 106
3.6.3 工作原理 107
3.6.4 参考资料 110
3.7 使用箱须图 110
3.7.1 准备工作 110
3.7.2 操作方法 110
3.7.3 工作原理 111
3.7.4 更多内容 112
3.8 修补数据 113
3.8.1 准备工作 113
3.8.2 操作方法 113
3.8.3 工作原理 114
3.8.4 更多内容 115
3.8.5 参考资料 116
3.9 实施随机采样 116
3.9.1 准备工作 116
3.9.2 操作方法 117
3.9.3 工作原理 117
3.9.4 更多内容 118
3.10 缩放数据 118
3.10.1 准备工作 118
3.10.2 操作方法 118
3.10.3 工作原理 119
3.10.4 更多内容 119
3.11 数据标准化 121
3.11.1 准备工作 121
3.11.2 操作方法 121
3.11.3 工作原理 122
3.11.4 更多内容 122
3.12 实施分词化 123
3.12.1 准备工作 123
3.12.2 操作方法 123
3.12.3 工作原理 124
3.12.4 更多内容 125
3.12.5 参考资料 127
3.13 删除停用词 127
3.13.1 操作方法 128
3.13.2 工作原理 129
3.13.3 更多内容 130
3.13.4 参考资料 130
3.14 词提取 130
3.14.1 准备工作 131
3.14.2 操作方法 132
3.14.3 工作原理 132
3.14.4 更多内容 133
3.14.5 参考资料 133
3.15 执行词形还原 134
3.15.1 准备工作 134
3.15.2 操作方法 134
3.15.3 工作原理 135
3.15.4 更多内容 135
3.15.5 参考资料 135
3.16 词袋模型表示文本 136
3.16.1 准备工作 136
3.16.2 操作方法 136
3.16.3 工作原理 138
3.16.4 更多内容 140
3.16.5 参考资料 141
3.17 计算词频和反文档频率 142
3.17.1 准备工作 142
3.17.2 操作方法 142
3.17.3 工作原理 144
3.17.4 更多内容 145
第4章 数据分析——深入理解 146
4.1 简介 146
4.2 抽取主成分 147
4.2.1 准备工作 148
4.2.2 操作方法 149
4.2.3 工作原理 151
4.2.4 更多内容 152
4.2.5 参考资料 154
4.3 使用核PCA 154
4.3.1 准备工作 154
4.3.2 操作方法 154
4.3.3 工作原理 156
4.3.4 更多内容 159
4.4 使用奇异值分解抽取特征 160
4.4.1 准备工作 161
4.4.2 操作方法 161
4.4.3 工作原理 162
4.4.4 更多内容 163
4.5 用随机映射给数据降维 164
4.5.1 准备工作 164
4.5.2 操作方法 165
4.5.3 工作原理 166
4.5.4 更多内容 167
4.5.5 参考资料 168
4.6 用NMF分解特征矩阵 168
4.6.1 准备工作 169
4.6.2 操作方法 170
4.6.3 工作原理 172
4.6.4 更多内容 175
4.6.5 参考资料 176
第5章 数据挖掘——海底捞针 177
5.1 简介 177
5.2 使用距离度量 178
5.2.1 准备工作 178
5.2.2 操作方法 179
5.2.3 工作原理 180
5.2.4 更多内容 183
5.2.5 参考资料 184
5.3 学习和使用核方法 184
5.3.1 准备工作 184
5.3.2 操作方法 185
5.3.3 工作原理 186
5.3.4 更多内容 187
5.3.5 参考资料 187
5.4 用k—means进行数据聚类 188
5.4.1 准备工作 188
5.4.2 操作方法 190
5.4.3 工作原理 191
5.4.4 更多内容 192
5.4.5 参考资料 193
5.5 学习向量量化 193
5.5.1 准备工作 193
5.5.2 操作方法 194
5.5.3 工作原理 197
5.5.4 更多内容 199
5.5.5 参考资料 199
5.6 在单变量数据中找出异常点 200
5.6.1 准备工作 200
5.6.2 操作方法 202
5.6.3 工作原理 203
5.6.4 更多内容 205
5.6.5 参考资料 207
5.7 使用局部异常因子方法发现异常点 207
5.7.1 准备工作 207
5.7.2 操作方法 208
5.7.3 工作原理 210
5.7.4 更多内容 216
第6章 机器学习1217
6.1 简介 217
6.2 为建模准备数据 218
6.2.1 准备工作 218
6.2.2 操作方法 218
6.2.3 工作原理 221
6.2.4 更多内容 222
6.3 查找最近邻 223
6.3.1 准备工作 224
6.3.2 操作方法 226
6.3.3 工作原理 227
6.3.4 更多内容 229
6.3.5 参考资料 230
6.4 用朴素贝叶斯分类文档 230
6.4.1 准备工作 232
6.4.2 操作方法 232
6.4.3 工作原理 238
6.4.4 更多内容 242
6.4.5 参考资料 242
6.5 构建决策树解决多类问题 243
6.5.1 准备工作 244
6.5.2 操作方法 247
6.5.3 工作原理 249
6.5.4 更多内容 251
6.5.5 参考资料 252
第7章 机器学习2253
7.1 简介 253
7.2 回归方法预测实数值 254
7.2.1 准备工作 255
7.2.2 操作方法 256
7.2.3 工作原理 259
7.2.4 更多内容 263
7.2.5 参考资料 267
7.3 学习L2缩减回归——岭回归 267
7.3.1 准备工作 268
7.3.2 操作方法 268
7.3.3 工作原理 271
7.3.4 更多内容 273
7.3.5 参考资料 276
7.4 学习L1缩减回归——LASSO 276
7.4.1 准备工作 277
7.4.2 操作方法 277
7.4.3 工作原理 280
7.4.4 更多内容 283
7.4.5 参考资料 283
7.5 L1和L2缩减交叉验证迭代 283
7.5.1 准备工作 284
7.5.2 操作方法 284
7.5.3 工作原理 288
7.5.4 更多内容 294
7.5.5 参考资料 295
第8章 集成方法 296
8.1 简介 296
8.2 理解集成——挂袋法 297
8.2.1 准备工作 298
8.2.2 操作方法 298
8.2.3 工作原理 300
8.2.4 更多内容 304
8.2.5 参考资料 305
8.3 理解集成——提升法 305
8.3.1 准备工作 307
8.3.2 操作方法 307
8.3.3 工作原理 312
8.3.4 更多内容 319
8.3.5 参考资料 319
8.4 理解集成——梯度提升 320
8.4.1 准备工作 321
8.4.2 操作方法 321
8.4.3 工作原理 325
8.4.4 更多内容 330
8.4.5 参考资料 330
第9章 生长树 331
9.1 简介 331
9.2 从生长树到生长森林——随机森林 332
9.2.1 准备工作 333
9.2.2 操作方法 333
9.2.3 工作原理 336
9.2.4 更多内容 340
9.2.5 参考资料 342
9.3 生成超随机树 342
9.3.1 准备工作 343
9.3.2 操作方法 343
9.3.3 工作原理 345
9.3.4 更多内容 349
9.3.5 参考资料 349
9.4 生成旋转森林 349
9.4.1 准备工作 350
9.4.2 操作方法 350
9.4.3 工作原理 353
9.4.4 更多内容 358
9.4.5 参考资料 358
第10章 大规模机器学习——在线学习 359
10.1 简介 359
10.2 用感知器作为在线学习算法 360
10.2.1 准备工作 361
10.2.2 操作方法 362
10.2.3 工作原理 363
10.2.4 更多内容 366
10.2.5 参考资料 367
10.3 用随机梯度下降解决回归问题 367
10.3.1 准备工作 369
10.3.2 操作方法 369
10.3.3 工作原理 370
10.3.4 更多内容 373
10.3.5 参考资料 375
10.4 用随机梯度下降解决分类问题 375
10.4.1 准备工作 376
10.4.2 操作方法 376
10.4.3 工作原理 377
10.4.4 更多内容 379
10.4.5 参考资料 380
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据科学指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python: 统计人的视角
第1章引言
1.1下载及安装Python
1.2Anaconda的几种界面
第2章Python基础知识
2.1一些基本常识
2.2文件及输入输出
2.3numpy模块
2.4pandas模块
2.5matplotlib模块
2.6scipy模块
第3章传统初等统计中的Python
3.1简单的描述统计
3.2把分类变量转换成哑元
3.3简单的假设检验
3.4相关与简单的回归
3.5方差分析
3.6logistic回归
第4章机器学习方法的回归和分类案例
4.1回归
4.2分类
第5章时间序列
5.1时间序列的图形描述
5.2时间序列平稳性
5.3ARMA模型的拟合和预测
5.4新西兰奥克兰降水数据的ARMA拟合
5.5向量自回归模型
第6章类和子类简介
6.1class
6.2subclass
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python: 统计人的视角
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>自学是门手艺
PART ONE
第1章 为什么一定要掌握自学能力 / 002
第2章 为什么将编程作为自学的入口 / 009
第3章 只靠阅读习得新技能 / 015
第4章 开始阅读前的一些准备 / 019
第5章 第1节 入口 / 022
第2节 值及其相应的运算 / 036
第3节 流程控制 / 048
第4节 函数 / 058
第5节 字符串 / 068
第6节 数据容器 / 093
第7节 文件 / 121
第6章 如何从容应对含有过多“过早引用”的知识 / 131
第7章 官方教程：The Python Tutorial / 141
PART TWO
第8章 笨拙与耐心 / 150
第9章 刻意练习 / 155
第10章 为什么从函数开始 / 158
第11章 第1节 关于参数（上） / 161
第2节 关于参数（下） / 167
第3节 化名与匿名 / 174
第4节 递归函数 / 180
第5节 函数的文档 / 190
第6节 保存到文件的函数 / 196
第7节 测试驱动开发 / 204
第8节 可执行的Python文件 / 213
第12章 刻意思考 / 219
PART THREE
第13章 战胜难点 / 224
第14章 第1节 类——面向对象编程 / 227
第2节 类——Python的实现 / 231
第3节 函数工具 / 246
第4节 正则表达式 / 259
第5节 BNF和EBNF / 276
第15章 拆解 / 284
第16章 刚需幻觉 / 290
第17章 全面——自学的境界 / 295
第18章 自学者的社交 / 301
第19章 这是自学者的黄金时代 / 306
第20章 避免注意力漂移 / 310
第21章 如何成为优秀的沟通者 / 313
后记：自学者的终点 / 321
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>自学是门手艺
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python新手使用Django架站的16堂课
目  录
第1堂  网站开发环境的建立 1
1.1  网站的基础知识 1
1.1.1  网站的运行流程 1
1.1.2  Python/Django扮演的角色 2
1.1.3  使用Python/Django建立网站的优势 3
1.2  建立网站开发流程 3
1.2.1  开发流程简介 4
1.2.2  在Windows中建立Linux虚拟机 5
1.2.3  在Mac OS中安装Linux虚拟机 11
1.2.4  在Linux虚拟机中创建Python Django开发环境 17
1.2.5  设置SSH、PuTTY以及FTP服务器 18
1.2.6  安装Notepad++程序编辑器 22
1.3  活用版本控制系统 26
1.3.1  版本控制系统Git简介 26
1.3.2  申请Bitbucket账号 26
1.3.3  在虚拟机中连接Bitbucket 29
1.3.4  在不同的计算机之间开发同一个网站 31
1.4  其他网站项目开发环境的安装建议 32
1.4.1  在Windows 10中创建开发环境 32
1.4.2  在Mac OS中创建开发环境 35
1.4.3  在Cloud9中创建开发环境 37
1.4.4  在DigitalOcean VPS中创建开发环境 39
1.5  习题 40
第2堂  Django网站快速入门 41
2.1  个人博客网站规划 41
2.1.1  博客网站的需求与规划 41
2.1.2  产生第一个网站框架 41
2.1.3  Django文件夹与文件解析 44
2.2  创建博客数据表 46
2.2.1  数据库与Django的关系 46
2.2.2  定义数据模型 47
2.2.3  启动admin管理界面 48
2.2.4  读取数据库中的内容 52
2.3  网址对应与页面输出 55
2.3.1  创建网页输出模板template 55
2.3.2  网址对应urls.py 60
2.3.3  共享模板的使用 62
2.4  高级网站功能的运用 65
2.4.1  JavaScript以及CSS文件的引用 65
2.4.2  图像文件的应用 69
2.4.3  在主网页显示文章摘要 71
2.4.4  博客文章的HTML内容处理 73
2.4.5  Markdown语句解析与应用 75
2.5  习题 77
第3堂  让网站上线 78
3.1 在DigitalOcean上部署 78
3.1.1  申请账号与创建虚拟主机 78
3.1.2  安装Apache网页服务器及Django执行环境 82
3.1.3  修改settings.py、000-default.conf等相关设置 83
3.1.4  创建域名以及多平台设置 86
3.2  在Heroku上部署 89
3.2.1  Heroku账号申请与环境设置 89
3.2.2  修改网站的相关设置 91
3.2.3  上传网站到Heroku主机 92
3.2.4  Heroku主机的操作 96
3.3  在Google Cloud Platform上部署 97
3.3.1  Google Cloud Platform的介绍 98
3.3.2  Google Computing的启用与设置 101
3.3.3  Google App Engine的说明与设置 104
3.4  习题 111
第4堂  深入了解Django的MVC架构 112
4.1  Django的MVC架构简介 112
4.1.1  MVC架构简介 112
4.1.2  Django的MTV架构 113
4.1.3  Django网站的构成以及配合 114
4.1.4  在Django MTV架构下的网站开发步骤 115
4.2  Model简介 116
4.2.1  在models.py中创建数据表 116
4.2.2  在admin.py中创建数据表管理界面 119
4.2.3  在Python Shell中操作数据表 123
4.2.4  数据的查询与编辑 125
4.3  View简介 127
4.3.1  建立简易的HttpResponse网页 127
4.3.2  在views.py中显示查询数据列表 129
4.3.3  网址栏参数处理的方式 131
4.4  Template简介 133
4.4.1  创建template文件夹与文件 133
4.4.2  传送变量到template文件中 134
4.4.3  在template中处理列表变量 137
4.5  最终版本摘要 138
4.6  习题 142
第5堂  网址的对应与委派 143
5.1  Django网址架构 143
5.1.1  URLconf简介 143
5.1.2  urlpatterns的Regular Expression语法说明 145
5.1.3  验证RE设计URL的正确性 148
5.2  高级设置技巧 149
5.2.1  参数的传送 149
5.2.2  include其他整组的urlpatterns设置 150
5.2.3  URLconf的反解功能 151
5.3  习题 152
第6堂  Template深入探讨 153
6.1  Template的设置与运行 153
6.1.1  settings.py设置 153
6.1.2  创建templates文件 155
6.1.3  在templates文件中使用现有的网页框架 156
6.1.4  直播电视网站应用范例 157
6.1.5  在template中使用static文件 161
6.2  高级Template技巧 163
6.2.1  Template模板的继承 163
6.2.2  共享模板的使用范例 165
6.3  Template语言 166
6.3.1  判断指令 167
6.3.2  循环指令 168
6.3.3  过滤器与其他语法标记 173
6.4  习题 176
第7堂  Models与数据库 177
7.1  网站与数据库 177
7.1.1  数据库简介 177
7.1.2  规划网站需要的数据库 178
7.1.3  数据表内容设计 181
7.1.4  models.py设计 182
7.2  活用Model制作网站 183
7.2.1  建立网站 183
7.2.2  制作网站模板 186
7.2.3  制作多数据表整合查询网页 188
7.2.4  调整admin管理网页的外观 192
7.3  在Django中使用MySQL数据库系统 194
7.3.1  安装开发环境中的MySQL连接环境（Ubuntu） 194
7.3.2  安装开发环境中的MySQL连接环境（Windows） 195
7.3.3  使用Google云端主机的商用SQL服务器 199
7.4  习题 203
第8堂  网站窗体的应用 204
8.1  网站与窗体 204
8.1.1  HTML <form>窗体简介 204
8.1.2  活用窗体的标签 208
8.1.3  建立本堂课范例网站的数据模型 210
8.1.4  网站窗体的建立与数据显示 212
8.1.5  接收窗体数据存储于数据库中 214
8.1.6  加上删除帖文的功能 215
8.2  基础窗体类的应用 217
8.2.1  使用POST传送窗体数据 218
8.2.2  结合窗体和数据库 222
8.2.3  数据接收与字段的验证方法 226
8.2.4  使用第三方服务发送电子邮件 229
8.3  模型窗体类ModelForm的应用 233
8.3.1  ModelForm的使用 233
8.3.2  通过ModelForm产生的窗体存储数据 235
8.3.3  为窗体加上防机器人的验证机制 237
8.4  习题 240
第9堂  网站的Session功能 241
9.1  Session简介 241
9.1.1  复制Django网站 241
9.1.2  Cookie简介 242
9.1.3  使用Cookie建立网站登录功能 243
9.1.4  开始使用Session 249
9.2  活用Session 250
9.2.1  建立用户数据表 250
9.2.2  整合Django的信息显示框架messages framework 257
9.3  Django auth用户验证 260
9.3.1  使用Django的用户验证系统 260
9.3.2  增加User的字段 264
9.3.3  显示新增加的User字段 266
9.3.4  应用auth用户验证存取数据库 268
9.4  习题 274
第10堂  网站用户的注册与管理 275
10.1  建立网站用户的自动化注册功能 275
10.1.1  django-registration安装与设置 275
10.1.2  建立django-registration所需的模板 276
10.1.3  整合用户注册功能到分享日记网站 280
10.2  Pythonanywhere.com免费Python网站开发环境 285
10.2.1  注册Pythonanywhere.com账号 286
10.2.2  在Pythonanywhere免费网站中建立虚拟机环境以及Django网站 292
10.2.3  建立投票网站的基本架构 298
10.3  使用Facebook验证账号操作实践 307
10.3.1  在Pythonanywhere中安装django-allauth与设置 307
10.3.2  到Facebook开发者网页申请验证机制 309
10.3.3  在网站中识别用户的登录状态 314
10.3.4  客户化django-allauth页面 318
10.4  习题 321
第11堂  社交网站应用实践 322
11.1  投票网站的规划与调整 322
11.1.1  网站功能与需求 322
11.1.2  数据表与页面设计 324
11.1.3  网站的转移 327
11.1.4  移动设备的考虑 329
11.2  深入探讨django-allauth 331
11.2.1  django-allauth的Template标签 331
11.2.2  django-allauth的Template页面 333
11.2.3  获取Facebook用户的信息 335
11.3  投票网站功能解析 336
11.3.1  首页的分页显示功能 337
11.3.2  自定义标签并在首页显示目前的投票数 339
11.3.3  使用AJAX和jQuery改进投票的效果 341
11.3.4  避免重复投票的方法 348
11.3.5  新建Twitter账号链接 350
11.4  习题 355
第12堂  电子商店网站实践 356
12.1  打造迷你电商网站 356
12.1.1  复制网站，不要从零开始 356
12.1.2  创建网站所需要的数据表 358
12.1.3  上传照片的方法django-filer 362
12.1.4  把django-filer的图像文件添加到数据表中 367
12.2  增加网站功能 370
12.2.1  分类查看产品 370
12.2.2  显示详细的产品内容 374
12.2.3  购物车功能 376
12.2.4  建立订单功能 381
12.3  电子支付功能 390
12.3.1  建立付款流程 390
12.3.2  建立PayPal付款链接 393
12.3.3  接收PayPal付款完成通知 400
12.3.4  测试PayPal付款功能 401
12.4  习题 407
第13堂  全功能电子商店网站 django-oscar实践 408
13.1  Django购物网站Oscar的安装与使用 408
13.1.1  电子购物网站模板 408
13.1.2  Django Oscar购物车系统测试网站安装 409
13.2  建立Oscar的应用网站 411
13.2.1  安装前的准备 412
13.2.2  建立网站的域名 412
13.2.3  调整Apache2配置文件 414
13.2.4  建立Django Oscar购物网站项目 415
13.2.5  加上电子邮件的发送功能 422
13.2.6  简单地修改Oscar网站的设置 424
13.2.7  增加PayPal在线付款功能 427
13.3  自定义Oscar网站 432
13.3.1  建立自己的templates，打造客户化的外观 433
13.3.2  网站的中文翻译 444
13.4  习题 445
第14堂  二级网络域名管理网站实践 446
14.1  建立网站前的准备工作 446
14.1.1  什么是二级网络域名以及网络域名代管服务 446
14.1.2  申请网络域名以及网络域名代管服务DNSimple 447
14.1.3  设置网站主机的空间 450
14.1.4  建立网站框架 450
14.2  建立会员网站 452
14.2.1  加入电子邮件功能 452
14.2.2  安装与使用django-registration 453
14.2.3  安装dnsimple模块 459
14.3  网站功能设计 461
14.3.1  建立网站首页的说明页面 462
14.3.2  创建数据表 463
14.3.3  建立网址管理页面 464
14.3.4  Subdomain数据表的存取 466
14.3.5  整合到dnsimple.com中 469
14.4  习题 475
第15堂  名言佳句产生器网站实践 477
15.1 建立网站前的准备 477
15.1.1  准备网站所需的素材 477
15.1.2  图文整合练习 478
15.1.3  建立可随机显示图像的网站 479
15.2  产生器功能的实现 483
15.2.1  建立产生器界面 483
15.2.2  产生唯一的文件名 486
15.2.3  开始合并并产生图像文件 486
15.2.4  准备多个背景图像文件以供选择 490
15.3  自定义图像文件功能 496
15.3.1  加入会员注册功能 496
15.3.2  建立上传文件的界面 497
15.3.3  上传文件的方法 502
15.3.4  实时产生结果 504
15.4  习题 506
第16堂  课程回顾与您的下一步 507
16.1  善加运用网站资源 507
16.2  部署上线的注意事项 510
16.3  SSL设置实践 513
16.4  程序代码和网站测试的重要性 525
16.5  其他Python框架 528
16.6  您的下一步 528
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python新手使用Django架站的16堂课
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python科学计算基础教程
第1章　科学计算概况与选择Python的理由　　1
1.1　科学计算的定义　　2
1.2　科学计算的简单处理流程　　3
1.3　科学与工程领域的案例　　5
1.4　解决复杂问题的策略　　5
1.5　近似、误差及相关统计概念和术语　　6
1.5.1　误差分析　　7
1.5.2　敏感度、稳定性和准确性　　7
1.5.3　后向与前向误差估计　　8
1.5.4　误差可以忽略不计吗　　8
1.6　计算机算术运算和浮点数　　8
1.7　Python编程语言简介　　9
1.7.1　Python语言的指导原则　　9
1.7.2　为什么用Python做科学计算　　11
1.7.3　Python的缺点　　13
1.8　小结　　13
第2章　科学工作流和科学计算的结构　　14
2.1　科学计算的数学部分　　14
2.1.1　线性方程组　　14
2.1.2　非线性方程组　　15
2.1.3　最优化方法　　16
2.1.4　内插法　　17
2.1.5　外插法　　17
2.1.6　数值积分　　18
2.1.7　数值微分　　18
2.1.8　微分方程　　19
2.1.9　随机数生成器　　20
2.2　Python科学计算　　21
2.2.1　NumPy简介　　22
2.2.2　SciPy程序库　　22
2.2.3　用pandas做数据分析　　23
2.3　IPython交互式编程简介　　23
2.3.1　IPython并行计算　　24
2.3.2　IPython Notebook　　24
2.4　用SymPy进行符号计算　　26
2.4.1　SymPy的主要特点　　27
2.4.2　为什么用SymPy　　28
2.5　画图程序库　　28
2.6　小结　　30
第3章　有效地制造与管理科学数据　　31
3.1　数据的基本概念　　31
3.2　数据存储软件与工具箱　　32
3.2.1　文件　　33
3.2.2　数据库　　33
3.3　常见的数据操作　　34
3.4　科学数据的格式　　35
3.5　现成的标准数据集　　37
3.6　数据生成　　41
3.7　模拟数据的生成（构造）　　41
3.7.1　用Python的内置函数生成随机数　　42
3.7.2　基于统计分布的随机数生成器的设计和实现　　45
3.7.3　一个用简单逻辑生成5位随机数的程序　　46
3.8　大规模数据集的简要介绍　　47
3.9　小结　　48
第4章　Python科学计算API　　49
4.1　Python数值科学计算　　49
4.1.1　NumPy程序包　　49
4.1.2　SciPy程序包　　52
4.1.3　简单的SciPy程序　　54
4.2　SymPy符号计算　　57
4.2.1　计算机代数系统　　57
4.2.2　通用CAS的特点　　57
4.2.3　SymPy设计理念简介　　58
4.2.4　SymPy模块　　60
4.2.5　简单的范例程序　　61
4.3　数据分析和可视化的API和工具　　63
4.3.1　用pandas进行数据分析和操作　　63
4.3.2　用matplotlib进行数据可视化　　64
4.3.3　用IPython实现Python的交互式计算　　64
4.3.4　数据分析和可视化的示例程序　　65
4.4　小结　　67
第5章　数值计算　　68
5.1　NumPy的基本对象　　68
5.1.1　N维数组对象　　68
5.1.2　通用函数对象　　72
5.1.3　NumPy的数学模块　　74
5.2　SciPy的介绍　　75
5.2.1　SciPy的数学函数　　75
5.2.2　高级模块/程序包　　76
5.3　小结　　97
第6章　用Python做符号计算　　98
6.1　符号、表达式和基本运算　　98
6.2　求解方程　　99
6.3　有理数、指数和对数函数　　100
6.4　多项式　　100
6.5　三角函数和复数　　101
6.6　线性代数　　101
6.7　微积分　　103
6.8　向量　　105
6.9　物理模块　　106
6.9.1　氢波函数　　106
6.9.2　矩阵和Pauli代数　　107
6.9.3　一维和三维量子谐振子　　107
6.9.4　二次量子化　　108
6.9.5　高能物理　　108
6.9.6　力学　　109
6.10　漂亮的打印功能　　111
6.11　密码学模块　　113
6.12　输入的句法分析　　113
6.13　逻辑模块　　114
6.14　几何模块　　116
6.15　符号积分　　117
6.16　多项式操作　　119
6.17　集合　　120
6.18　运算的简化和合并　　121
6.19　小结　　122
第7章　数据分析与可视化　　123
7.1　matplotlib　　123
7.1.1　matplotlib的架构　　124
7.1.2　matplotlib的画图方法　　125
7.2　pandas程序库　　128
7.2.1　Series　　128
7.2.2　DataFrame　　129
7.2.3　Panel　　130
7.2.4　pandas数据结构的常用函数　　131
7.2.5　时间序列与日期函数　　137
7.2.6　处理缺失数据　　140
7.3　I/O操作　　141
7.3.1　处理CSV文件　　141
7.3.2　即开即用数据集　　144
7.4　IPython　　145
7.4.1　IPython终端与系统命令行工具　　146
7.4.2　IPython Notebook　　149
7.5　小结　　150
第8章　并行与大规模科学计算　　151
8.1　用IPython做并行计算　　152
8.2　IPython并行计算架构　　152
8.3　并行计算示例　　154
8.3.1　并行装饰器　　155
8.3.2　IPython的魔法函数　　155
8.4　IPython的高级特性　　157
8.4.1　容错执行　　157
8.4.2　动态负载均衡　　158
8.4.3　在客户端与引擎之间推拉对象　　158
8.4.4　支持数据库存储请求与结果　　160
8.4.5　在IPython里使用MPI　　161
8.4.6　管理任务之间的依赖关系　　162
8.4.7　用Amazon EC2的StarCluster启动IPython　　167
8.5　IPython数据安全措施　　168
8.5.1　常用并行编程方法　　168
8.5.2　在Python中演示基于Hadoop的MapReduce　　174
8.5.3　在Python中运行Spark　　176
8.6　小结　　176
第9章　真实案例介绍　　177
9.1　用Python开发的科学计算应用　　177
9.1.1　“每个孩子一台笔记本”项目用Python开发界面　　177
9.1.2　ExpEYES——科学之眼　　180
9.1.3　Python开发的天气预测应用程序　　181
9.1.4　Python开发的航空器概念设计工具与API　　182
9.1.5　OpenQuake引擎　　183
9.1.6　德国西马克公司的能源效率应用程序　　184
9.1.7　高能物理数据分析的自动代码生成器　　184
9.1.8　Python的计算化学应用　　186
9.2　Python开发的盲音触觉识别系统　　187
9.2.1　TAPTools空中交通管制工具　　187
9.2.2　光能效率检测的嵌入式系统　　188
9.3　Python开发的科学计算程序库　　189
9.3.1　Tribon公司的船舶设计API　　189
9.3.2　分子建模工具箱　　189
9.3.3　标准Python程序包　　190
9.4　小结　　191
第10章　科学计算的最佳实践　　192
10.1　方案设计阶段的最佳实践　　192
10.2　功能实现阶段的最佳实践　　194
10.3　数据管理与应用部署的最佳实践　　196
10.4　实现高性能的最佳实践　　197
10.5　数据隐私与安全的最佳实践　　198
10.6　测试与维护的最佳实践　　198
10.7　Python常用的最佳实践　　199
10.8　小结　　200
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python科学计算基础教程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>圖說演算法
第1章 進入演算法的世界
1-1 生活中到處都是演算法
1-2 常見演算法簡介
第2章 常用的資料結構
2-1 認識資料結構
2-2 資料結構的種類
2-3 樹狀結構
2-4 圖形簡介
2-5 雜湊表
第3章 排序演算法
3-1 認識排序
3-2 氣泡排序法
3-3 選擇排序法
3-4 插入排序法
3-5 謝耳排序法
3-6 合併排序法
3-7 快速排序法
3-8 基數排序法
第4章 搜尋與雜湊演算法
4-1 常見搜尋法介紹
4-2 常見的雜湊法簡介
4-3 碰撞與溢位處理
第5章 陣列與鏈結串列演算法
5-1 矩陣
5-2 建立單向鏈結串列
第6章 堆疊與佇列演算法
6-1 陣列實作堆疊
6-2 鏈結串列實作堆疊
6-3 河內塔演算法
6-4 八皇后演算法
6-5 陣列實作佇列
6-6 鏈結串列實作佇列
6-7 雙向佇列
6-8 優先佇列
第7章 樹狀演算法
7-1 陣列實作二元樹
7-2 鏈結串列實作二元樹
7-3 二元樹走訪
7-4 二元樹節點搜尋
7-5 二元樹節點插入
7-6 二元樹節點的刪除
7-7 堆積樹排序法 4
第8章 圖形演算法
8-1 圖形的走訪
8-2 最小花費擴張樹（MST）
8-3 圖形最短路徑法
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>圖說演算法
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python地理数据处理
第1章　引言　1
1.1　为什么使用Python和开源工具　2
1.2　空间数据的类型　3
1.3　地理数据处理　6
1.4　探究数据　8
1.5　小结　12
第2章　Python基础　13
2.1　编写和执行代码　14
2.2　一个脚本的基本结构　15
2.3　变量　16
2.4　数据类型　17
2.4.1　布尔型　18
2.4.2　数值型　18
2.4.3　字符串　19
2.4.4　列表和元组　21
2.4.5　集合　23
2.4.6　字典　24
2.5　控制流　24
2.5.1　if语句　25
2.5.2　while语句　26
2.5.3　for语句　26
2.5.4　break、continue和else　27
2.6　函数　29
2.7　类　30
2.8　小结　31
第3章　读写矢量数据　32
3.1　矢量数据介绍　32
3.2　OGR介绍　38
3.3　读取矢量数据　41
3.3.1　访问特定要素　44
3.3.2　查看数据　46
3.4　获取数据的元数据　48
3.5　矢量数据写入　51
3.5.1　创建新的数据源　55
3.5.2　新建属性字段　57
3.6　更新现有数据　58
3.6.1　改变图层定义　59
3.6.2　要素添加、更新和删除　60
3.7　小结　61
第4章　处理不同的矢量文件　63
4.1　矢量文件格式　63
4.1.1　基于文件的格式如shapefiles和GeoJSON　64
4.1.2　多用户数据库格式如PostGIS　66
4.2　处理更多的数据格式　67
4.2.1　SpatiaLite　67
4.2.2　PostGIS　69
4.2.3　文件夹作为数据源（shapefiles和CSV）　69
4.2.4　Esri文件地理数据库　70
4.2.5　网络要素服务　71
4.3　测试格式能力　79
4.4　小结　81
第5章　使用OGR过滤数据　83
5.1　属性过滤条件　84
5.2　空间过滤条件　87
5.3　使用SQL创建临时图层　91
5.4　充分利用过滤条件　95
5.5　小结　96
第6章　利用OGR处理几何要素　97
6.1　几何对象介绍　98
6.2　处理点集　99
6.2.1　创建和编辑单点　99
6.2.2　创建和编辑多点：多点作为一个几何类型　101
6.3　处理线要素　103
6.3.1　创建和编辑单条线　105
6.3.2　创建和编辑多线：多线作为一个几何类型　109
6.4　处理多边形　112
6.4.1　创建和编辑单多边形　113
6.4.2　创建和编辑multipolygons：复合多边形成为一个几何类型　115
6.4.3　编辑和创建带洞的多边形：甜甜圈　117
6.5　小结　120
第7章　使用GR进行矢量分析　121
7.1　叠加分析工具：什么在什么上面　122
7.2　邻近分析工具：要素之间有多远　128
7.3　实例：风力发电场选址　132
7.4　实例：动物跟踪数据　136
7.5　小结　144
第8章　使用空间参照系统参考系统　145
8.1　空间参考介绍　145
8.2　使用OSR空间参考　150
8.2.1　空间参考对象　150
8.2.2　创建控件参考对象　153
8.2.3　为数据分配SRS　155
8.2.4　几何对象重投影　155
8.2.5　重投影整个图层　159
8.3　使用pyproj空间参考　159
8.3.1　在不同空间参考系统中转换坐标　160
8.3.2　计算大圆距离　162
8.4　小结　163
第9章　读写栅格数据　164
9.1　栅格数据介绍　165
9.2　GDAL介绍　170
9.3　读取部分数据集　176
9.3.1　使用现实世界的坐标　181
9.3.2　数据重采样　185
9.4　字节序列　188
9.5　子数据集　191
9.6　网络地图服务　192
9.7　小结　195
第10章　处理栅格数据　196
10.1　地面控制点　197
10.2　将像素坐标转换为另一图像　200
10.3　颜色表　203
10.4　直方图　205
10.5　属性表　208
10.6　虚拟栅格格式　210
10.6.1　影像裁剪　212
10.6.2　创建问题格式　214
10.6.3　影像重投影　215
10.7　回调函数　216
10.8　异常和错误处理程序　219
10.9　小结　222
第11章　使用NumPy和SciPy做地图运算　223
11.1　NumPy介绍　224
11.2　地图代数　227
11.2.1　局部分析　228
11.2.2　焦点分析　232
11.2.3　区域分析　243
11.2.4　全局分析　247
11.3　数据重采样　252
11.4　小结　259
第12章　地图分类　260
12.1　非监督分类　261
12.2　监督分类　263
12.3　小结　269
第13章　数据可视化　270
13.1　Matplotlib　270
13.1.1　绘制矢量数据　271
13.1.2　绘制栅格数据　282
13.1.3　绘制三维数据　287
13.2　Mapnik　289
13.2.1　绘制矢量数据　290
13.2.2　使用XML存储信息　295
13.2.3　绘制栅格数据　297
13.3　小结　300
附录A　安装　301
附录B　参考文献　308
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python地理数据处理
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>机器人Python极客编程入门与实战
第一部分  Python基础
第1章  Python简介	2
1.1  入门简单、功能强大	2
1.2  用户运行平台	6
1.3  程序目录结构	6
1.4  Spyder编辑器界面设置	7
1.5  Python命令行模式	13
1.6  Notebook模式	14
1.7  模块库控制面板	15
1.8  使用pip更新模块库	19
第2章  Python入门案例	24
2.1  案例2-1：第一次编程“hello,ziwang”	24
2.2  案例2-2：增强版“hello,ziwang”	26
2.3  案例2-3：列举系统模块库清单	28
2.4  案例2-4：常用绘图风格	29
2.5  案例2-5：Pandas常用绘图风格	31
2.6  案例2-6：常用颜色表cors	32
第3章  Python基本语法	35
3.1  数据类型	35
3.2  字符串	37
3.3  List列表	40
3.4  Tuple元组	42
3.5  Dictionary字典	43
3.6  数据类型转换	45
第二部分  PyBox实战案例
第4章  请让我为你点盏灯	51
第5章  制作流水灯	56
第6章  点亮心形8×8点阵	61
第7章  模拟红绿灯教程	67
第8章  DIY数字温度计	76
第9章  PM 2.5检测仪	81
第10章  智能扫雷仪	90
第11章  控制LCD5110显示6×8字符	95
第12章  DIY数字温度计	100
第13章  智能温控小风扇	106
第14章  声光电控小夜灯	110
第15章  DIY超声波测距仪	115
第16章  机器人编程基础——舵机控制实验	121
第17章  USB-HID测试（含无线控制）	127
第三部分  智能小车
第18章  无线蓝牙智能小车	138
第19章  红外寻迹无线小车	143
第20章  红外防坠落小车	149
第21章  加速度传感器无线小车	153
第四部分  Python-mini编程案例
第22章  呼吸灯	162
第23章  使用EEPROM	164
第24章  使用气压传感器BMP180	166
第25章  使用SD卡	169
第26章  用定位器控制LED亮度	172
第27章  计算任意精度的圆周率	173
第28章  升级固件	176
附录A  硬件介绍	177
附录B  安全模式和恢复出厂设置	180
附录C  使用Putty控制PyBox	182
附录D  Python极客团队介绍	189
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>机器人Python极客编程入门与实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python程序设计（第3版）
内容提要
序
前言
第1章　计算机和程序
第2章　编写简单程序
第3章　数字计算
第4章　对象和图形
第5章　序列：字符串、列表和文件
第6章　定义函数
第7章　判断结构
第8章　循环结构和布尔值
第9章　模拟与设计
第10章　定义类
第11章　数据集合
第12章　面向对象设计
第13章　算法设计与递归
附录A Python快速参考
附录B 术语表
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python程序设计（第3版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>ArcGIS下的Python编程
9 Python 与ArcGIS
10 1 Python
12 2 将地理信息系统作为过程的空间分析
12 2.1 区位与网络结构
14 2.2 调研者路线
16 2.3 场地现状信息录入与基本分析
18 2.4 基础的数据地理信息化辅助规划设计分析
21 2.5 专题地图叠合的方法
21 2.6 作为过程的空间分析
23 3 Python 与ArcGIS
25 3.1 .kml 文件格式
41 3.2 通过Python 使用工具箱里的工具
44 3.3 通过Python 使用环境设置
46 3.4 通过Python 使用函数
47 3.5 通过Python 使用类
51 3.5 获取和设置参数
57 ArcGIS 下的地理数据与Python 数据结构
58 1 ArcGIS 下的地理数据
62 1.1 文件地理数据库和个人地理数据库
62 1.2 ArcSDE 地理数据库
67 1.3 创建地理数据列表
74 2 Python 数据结构-List 列表、Tuple 元组与Dictionary 字典
75 2.1 列表(List)
85 2.2 元组(Tuple)
85 2.3 字典(Dictionary)
94 3 Python 数据结构-String 字符串
94 3.1 字符串格式化
96 3.2 re(regular expression) 正则表达式
109 Python 的基本语句与使用Python 访问地理数据
110 1 描述数据
112 2 Python 的基本语句
112 2.1 print() 与import
113 2.2 赋值的方法
114 2.3 循环语句
117 2.4 条件语句
119 3 Table 属性表与Cursor 游标
123 3.1 读取几何、写入几何与几何标记（geometry tokens）
126 3.2 游标和锁定
127 3.3 在Python 脚本中使用SQL 结构化查询语
129 3.4 数据存在判断与在Python 脚本中验证表和字段名称
135 创建函数与使用Python 处理栅格数据
136 1 创建函数
145 2 形式参数的传递
147 3 Raster 栅格数据
148 3.1 栅格数据（Mesh 面Quad 类型）
148 3.2 专题数据
148 3.3 影像数据
152 3.4 栅格函数
153 3.5 TIN 表面模型（Mesh 面Triangle 类型）
155 4 使用Python 处理栅格数据
155 4.1 栅格计算（地图代数运算）
159 4.2 重分类
171 4.3 条件分析工具集
175 创建类与网络分析
177 1 创建类
179 2 网络分析
180 2.1 从GoogleEarth 中调入路径以及服务设施和源点
185 2.2 建立文件地理数据库、要素数据集并导入用于网络分析的基础数据
187 2.3 最近设施点分析
193 异常与错误
194 1 异常
196 1.1 Python 内置异常
197 2 错误
201 程序的魅力
201 1 课题探讨_A_ 自然村落选址因子权重评定的遗传算法
204 1.1 准备数据
204 1.2 确定研究区域
205 1.3 确定影响因子
209 1.4 假设权重，叠合相加各个影响因子的成本栅格
211 1.5 遗传算法
218 1.6 将计算结果应用于类似场地
219 2 课题探讨_B_ 基于景观感知敏感度的生态旅游地观光线路自动选址
220 2.1 技术线路与基础数据
223 2.2 视域感知因子_ 可视区域计算
231 2.3 视域感知因子_ 最佳观赏距离计算
242 2.4 视域感知因子_ 最佳观赏方位
249 2.5 视域感知因子_ 栅格叠加求和
249 2.6 生态感知因子_ 景观类型
251 2.7 生态感知因子_ 资源价值
252 2.8 生态感知因子_ 栅格叠加求和
252 2.9 景观感知敏感度
254 2.10 地形因子
256 2.11 观光线路适宜性成本栅格计算
257 2.12 观光线路自动获取
260 3 课题探讨_C_ 解读蚁群算法与TSP 问题
260 3.1 蚁群算法与TSP 问题概述
263 3.2 蚁群算法程序解读
271 3.3 蚁群算法在ArcGIS 下的应用
274 4 分享程序
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>ArcGIS下的Python编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据抓取技术与实战
第１章　Python基础１
１１　Python安装１
１２　安装pip ６
１３　如何查看帮助７
１４　第一个程序１０
１５　文件操作２５
１６　循环２８
１７　异常３０
１８　元组３０
１９　列表３２
１１０　字典３６
１１１　集合３８
１１２　随机数３９
１１３　enumerate的使用４０
１１４　第二个例子４１
第２章　字符串解析４６
２１　常用函数４６
２２　正则表达式５０
２３　BeautifulSoup ５５
２４　json结构６２
第３章　单机数据抓取７７
３１　单机顺序抓取７７
３２　requests １０７
３３　并发和并行抓取１１７
第４章　分布式数据抓取１３７
４１　RPC的使用１３８
４２　Celery系统１４５
第５章　全能的Selenium １５９
Ⅴ
５１　Selenium单机１５９
５２　Selenium分布式抓取１７８
５３　Linux无图形界面使用Selenium １８８
第６章　神秘的Tor １９１
６１　抓取时IP封锁的问题１９１
６２　Tor的安装与使用１９２
６３　Tor多线程１９７
６４　Tor与Selenium结合２０５
第７章　抓取常见问题２１０
７１　Flash ２１０
７２　桌面程序２１１
７３　U盘２１３
７４　二级三级页面２１４
７５　图片的处理２１４
７６　App数据抓取２１４
第８章　监控框架２２１
８１　框架说明２２３
８２　监控系统实例２２５
第９章　拥抱大数据２２９
９１　Hadoop生态圈２２９
９２　Cloudera环境搭建２３１
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据抓取技术与实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>你也能看得懂的Python算法书
第1章 编程基础 1
1.1 变量 1
1.1.1 输出和输入 2
1.1.2 简单变量类型 3
1.1.3 数学计算 6
1.1.4 位运算 7
1.1.5 使用字符串 11
1.2 三大结构 15
1.2.1 循序结构 15
1.2.2 分支结构 16
1.2.3 条件判断 18
1.2.4 应用分支结构 20
1.2.5 循环结构 21
1.2.6 continue和break 23
1.2.7 应用循环结构 24
1.2.8 结构的嵌套 26
1.3 列表 27
1.3.1 定义列表 27
1.3.2 对元素进行操作 28
1.3.3 列表的顺序 31
1.3.4 列表内置函数 33
1.3.5 截取和拼接列表 36
1.3.6 字符串、元组和列表 38
1.3.7 用循环遍历列表 40
1.3.8 字典简介 41
1.4 函数 43
1.4.1 定义子函数 43
1.4.2 主函数 44
1.4.3 调用函数 45
1.4.4 全局变量 47
1.4.5 函数的运用 48
第2章 双指针问题 53
2.1 数组合并 53
2.1.1 合并有序数组 53
2.1.2 最终代码 56
2.2 二分查找 56
2.2.1 什么是二分查找 57
2.2.2 问题求解 58
2.2.3 最终代码 60
2.3 链表 60
2.3.1 什么是单链表 60
2.3.2 建立单链表 61
2.3.3 建立双链表 63
2.3.4 双向输出双链表 65
2.3.5 向单链表中添加元素 66
2.3.6 向双链表中添加元素 69
2.3.7 删除列表中的元素 71
第3章 哈希算法 75
3.1 什么是哈希 75
3.2 两个数的和 78
3.2.1 问题求解1 78
3.2.2 解法1的最终代码 80
3.2.3 问题求解2 81
3.2.4 解法2的最终代码 82
3.3 单词模式匹配 82
3.3.1 问题求解 83
3.3.2 最终代码 85
3.4 猜词游戏 85
3.4.1 问题求解 87
3.4.2 最终代码 88
3.5 神奇的词根 89
3.5.1 问题求解 90
3.5.2 最终代码 92
第4章 深度优先遍历算法 93
4.1 什么是深度优先遍历 93
4.2 二叉树 95
4.2.1 二叉树的类型 95
4.2.2 二叉树的相关术语 96
4.2.3 二叉树的节点代码 97
4.2.4 二叉树的遍历顺序 97
4.2.5 深度优先遍历与广度优先遍历 97
4.3 怎么抓住小偷 98
4.3.1 解题思路 98
4.3.2 从思路到代码 102
4.4 二叉树中的最大路径和 102
4.4.1 解题思路 103
4.4.2 完整代码 112
4.5 最大的岛屿 113
4.5.1 解题思路 113
4.5.2 完整代码 116
第5章 广度优先遍历算法 118
5.1 什么是广度优先遍历 118
5.2 选课的智慧 120
5.2.1 广度优先遍历 121
5.2.2 问题求解 122
5.2.3 最终代码 124
5.3 寻找制高点 125
5.3.1 问题求解 126
5.3.2 集合 129
5.3.3 最终代码 130
5.4 合法的括号 131
5.4.1 问题求解 131
5.4.2 最终代码 135
5.5 树的右侧 136
5.5.1 问题求解 136
5.5.2 最终代码 139
第6章 回溯算法 141
6.1 什么是回溯 141
6.2 遍历所有排序方式 142
6.2.1 问题求解 142
6.2.2 最终代码 144
6.3 经典问题的组合 147
6.3.1 问题求解 147
6.3.2 最终代码 149
6.4 查找单词问题 151
6.4.1 问题求解 152
6.4.2 最终代码 155
6.5 八皇后问题 157
6.5.1 问题求解 158
6.5.2 最终代码 160
6.6 教你解数独 164
6.6.1 问题求解 165
6.6.2 最终代码 168
第7章 贪心算法 172
7.1 硬币找零问题 173
7.1.1 问题描述 173
7.1.2 最终代码 175
7.2 活动安排问题 175
7.2.1 问题描述 176
7.2.2 最终代码 177
7.3 哈夫曼编码 178
7.3.1 问题描述 178
7.3.2 哈夫曼树 179
7.3.3 贪心选择性质 181
7.3.4 最优子结构性质 182
7.3.5 最终代码 183
第8章 动态规划算法 185
8.1 爬楼梯问题 185
8.1.1 问题描述 186
8.1.2 最终代码 188
8.2 矿工挖矿问题 189
8.2.1 问题描述 189
8.2.2 最终代码 195
8.3 背包问题 195
8.3.1 问题描述 195
8.3.2 问题实例 196
8.3.3 最终代码 201
8.4 最长递归子序列问题 202
8.4.1 问题描述 202
8.4.2 改进算法 204
8.4.3 最终代码 205
第9章 最短路径问题 207
9.1 迪可斯特朗算法 207
9.1.1 术语释义 208
9.1.2 问题示例：最短公交线路 208
9.1.3 图与节点的定义 209
9.1.4 把图用代码“画”出来 210
9.1.5 算法核心：两个节点集合 210
9.1.6 算法核心：循环 210
9.1.7 输出路线 211
9.1.8 通过示例理解算法 211
9.1.9 完整代码展示 214
9.2 Floyd算法 216
9.2.1 算法核心：两个矩阵 216
9.2.2 算法核心：通过中介点缩短距离 217
9.2.3 通过示例理解算法 218
9.2.4 完整代码 222
9.3 A*算法 223
9.3.1 算法核心：迪可斯特朗算法 223
9.3.2 算法核心：预估函数 224
9.3.3 算法核心：选择预估函数 226
9.3.4 A*算法的兄弟们 226
第10章 分治算法 227
10.1 什么是分治 227
10.2 归并排序 228
10.2.1 递归法与迭代法 228
10.2.2 递归法描述 229
10.2.3 迭代法描述 232
10.2.4 最终代码 233
10.3 连续子列表的最大和 235
10.3.1 解题思路 235
10.3.2 最终代码 237
10.4 几何问题之凸包 238
10.4.1 问题求解 238
10.4.2 最终代码 240
10.5 数学问题之多项式乘法 242
10.5.1 问题求解 242
10.5.2 最终代码 245
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>你也能看得懂的Python算法书
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python设计模式
第1章 前述 1
1.1 大师 1
1.2 成为更优秀的程序员 3
1.2.1 刻意训练 4
1.2.2 单一关注点 4
1.2.3 快速反馈 5
1.2.4 自我拓展 5
1.2.5 站在巨人的肩膀上 6
1.2.6 如何入手 6
1.2.7 保持路线正确的能力 7
1.3 系统化思考 8
1.4 思维模型 8
1.5 这项任务的适用工具 9
1.6 设计模式的概念 9
1.6.1 是什么造就了设计模式 10
1.6.2 分类 10
1.7 将用到的工具 11
1.8 本书的阅读方式 12
1.9 配置Python环境 12
1.9.1 Linux环境 12
1.9.2 Mac环境 13
1.9.3 Windows环境 14
1.9.4 VirtualEnv 15
1.10 编辑器 16
1.10.1 Atom 16
1.10.2 LightTable 16
1.10.3 PyCharm 16
1.10.4 Vim 17
1.10.5 Emacs 17
1.10.6 Sublime Text 17
1.11 本章小结 18
第2章 单例模式 19
2.1 问题 19
2.2 进入对象 23
2.3 整理 26
2.4 练习 29
第3章 原型模式 31
3.1 问题 31
3.2 迈出第一步之后 31
3.3 一个真实游戏的基础 32
3.4 实现原型模式 41
3.5 浅拷贝与深拷贝的对比 42
3.6 浅拷贝 43
3.7 处理嵌套结构 43
3.8 深拷贝 44
3.9 将所学知识用在项目中 45
3.10 练习 48
第4章 工厂模式 49
4.1 准备开始 49
4.2 游戏循环 50
4.3 工厂方法 54
4.4 抽象工厂 56
4.5 本章小结 57
4.6 练习 58
第5章 建造者模式 59
5.1 反模式 65
5.2 练习 70
第6章 适配器模式 71
6.1 不要重复自己(DRY) 72
6.2 关注点分离 73
6.3 样本问题 75
6.3.1 类适配器 76
6.3.2 对象适配器模式 77
6.3.3 鸭子类型 77
6.4 在现实环境中实现适配器模式 78
6.5 结束语 80
6.6 练习 81
第7章 装饰器模式 83
7.1 装饰器模式 85
7.1.1 闭包 89
7.1.2 保留函数的__name__和__doc__属性 89
7.2 装饰类 92
7.3 结束语 94
7.4 练习 95
第8章 外观模式 97
8.1 POS示例 97
8.2 系统演进 100
8.3 使外观模式凸显出来的原因 101
8.4 结束语 103
8.5 练习 104
第9章 代理模式 105
9.1 记忆法 105
9.2 代理模式 107
9.2.1 远程代理 109
9.2.2 虚拟代理 110
9.2.3 保护代理 110
9.3 结束语 110
9.4 练习 110
第10章 责任链模式 113
10.1 安装一台WSGI服务器 114
10.2 身份验证头信息 115
10.3 责任链模式 119
10.4 在项目中实现责任链 121
10.5 一种更趋Python化的实现 124
10.6 结束语 128
10.7 练习 129
第11章 命令模式 131
11.1 控制turtle 131
11.2 命令模式 133
11.3 结束语 138
11.4 练习 139
第12章 解释器模式 141
12.1 特定领域语言 141
12.1.1 DSL的优势 144
12.1.2 DSL的劣势 144
12.1.3 组合模式 148
12.1.4 使用组合模式的内部DSL实现 149
12.2 实现解释器模式 152
12.3 结束语 157
12.4 练习 158
第13章 迭代器模式 159
13.1 迭代器模式的Python内部实现 161
13.1.1 Itertools 166
13.1.2 生成器函数 167
13.1.3 生成器表达式 169
13.2 结束语 169
13.3 练习 170
第14章 观察者模式 171
14.1 结束语 183
14.2 练习 183
第15章 状态模式 185
15.1 状态模式 187
15.2 结束语 191
15.3 练习 191
第16章 策略模式 193
16.1 结束语 197
16.2 练习 197
第17章 模板方法模式 199
17.1 结束语 207
17.2 练习 208
第18章 访问者模式 209
18.1 访问者模式 218
18.2 结束语 226
18.3 练习 227
第19章 模型-视图-控制器模式 229
19.1 模型-视图-控制器概述 232
19.1.1 控制器 234
19.1.2 模型 234
19.1.3 视图 235
19.1.4 总述 235
19.2 结束语 239
19.3 练习 240
第20章 发布-订阅模式 241
20.1 分布式消息发送器 246
20.2 结束语 248
20.3 练习 249
附录 设计模式快速参考 251
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python设计模式
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>玩转Python网络爬虫
目    录
第1章理解网络爬虫	1
1.1  爬虫的定义	1
1.2  爬虫的类型	2
1.3  爬虫的原理	3
1.4  爬虫的搜索策略	5
1.5  反爬虫技术及解决方案	6
1.6  本章小结	8
第2章爬虫开发基础	9
2.1  HTTP与HTTPS	9
2.2  请求头	11
2.3  Cookies	13
2.4  HTML	14
2.5  JavaScript	16
2.6  JSON	18
2.7  Ajax	19
2.8  本章小结	20
第3章Chrome分析网站	21
3.1  Chrome开发工具	21
3.2  Elements标签	22
3.3  Network标签	23
3.4  分析QQ音乐	27
3.5  本章小结	29
第4章Fiddler抓包工具	30
4.1  Fiddler介绍	30
4.2  Fiddler安装配置	31
4.3  Fiddler抓取手机应用	33
4.4  Toolbar工具栏	36
4.5  Web Session列表	37
4.6  View选项视图	40
4.7  Quickexec命令行	41
4.8  本章小结	42
第5章Urllib数据抓取	43
5.1  Urllib简介	43
5.2  发送请求	44
5.3  复杂的请求	46
5.4  代理IP	47
5.5  使用Cookies	48
5.6  证书验证	50
5.7  数据处理	51
5.8  本章小结	52
第6章Requests数据抓取	54
6.1  Requests简介及安装	54
6.2  请求方式	55
6.3  复杂的请求方式	57
6.4  下载与上传	60
6.5  本章小结	63
第7章验证码识别	64
7.1  验证码类型	64
7.2  OCR技术	66
7.3  第三方平台	69
7.4  本章小结	72
第8章数据清洗	74
8.1  字符串操作	74
8.2  正则表达式	78
8.3  Beautiful Soup介绍及安装	84
8.4  Beautiful Soup的使用	86
8.5  本章小结	90
第9章文档数据存储	92
9.1  CSV数据写入和读取	92
9.2  Excel数据写入和读取	94
9.3  Word数据写入和读取	99
9.4  本章小结	101
第10章ORM框架	104
10.1  SQLAlchemy介绍	104
10.2  安装SQLAlchemy	105
10.3  连接数据库	106
10.4  创建数据表	108
10.5  添加数据	111
10.6  更新数据	112
10.7  查询数据	114
10.8  本章小结	116
第11章MongoDB数据库操作	118
11.1  MongoDB介绍	118
11.2  安装及使用	120
11.2.1  MongoDB	120
11.2.2  MongoDB可视化工具	121
11.2.3  PyMongo	123
11.3  连接数据库	123
11.4  添加文档	125
11.5  更新文档	126
11.6  查询文档	127
11.7  本章小结	130
第12章项目实战：爬取淘宝商品信息	131
12.1  分析说明	131
12.2  功能实现	134
12.3  数据存储	136
12.4  本章小结	138
第13章项目实战：分布式爬虫——QQ音乐	139
13.1  分析说明	139
13.2  歌曲下载	140
13.3  歌手和歌曲信息	145
13.4  分类歌手列表	148
13.5  全站歌手列表	150
13.6  数据存储	152
13.7  分布式概念	154
13.7.1  GIL是什么	154
13.7.2  为什么会有GIL	154
13.8  并发库concurrent.futures	155
13.9  分布式爬虫	157
13.10  本章小结	159
第14章项目实战：爬虫软件—— 淘宝商品信息	161
14.1  分析说明	161
14.2  GUI库介绍	162
14.3  PyQt5安装及环境搭建	162
14.4  软件界面开发	165
14.5  MVC——视图	169
14.6  MVC——控制器	171
14.7  MVC——模型	172
14.8  扩展思路	173
14.9  本章小结	174
第15章项目实战：12306抢票	176
15.1  分析说明	176
15.2  验证码验证	177
15.3  用户登录与验证	181
15.4  查询车次	187
15.5  预订车票	193
15.6  提交订单	196
15.7  生成订单	204
15.8  本章小结	209
第16章项目实战：玩转微博	219
16.1  分析说明	219
16.2  用户登录	220
16.3  用户登录（带验证码）	232
16.4  关键字搜索热门微博	240
16.5  发布微博	247
16.6  关注用户	253
16.7  点赞和转发评论	257
16.8  本章小结	263
第17章Scrapy爬虫框架	265
17.1  爬虫框架	265
17.2  Scrapy的运行机制	267
17.3  安装Scrapy	268
17.4  爬虫开发快速入门	270
17.5  Spiders介绍	277
17.6  Spider的编写	278
17.7  Items的编写	282
17.8  Item Pipeline的编写	284
17.9  Selectors的编写	288
17.10  文件下载	291
17.11  本章小结	296
第18章项目实战：Scrapy爬取QQ音乐	298
18.1  分析说明	298
18.2  创建项目	299
18.3  编写setting	300
18.4  编写Items	301
18.5  编写Item Pipelines	302
18.6  编写Spider	305
18.7  本章小结	310
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>玩转Python网络爬虫
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python全栈数据工程师养成攻略(视频讲解版)
第 1 章 写在前面 1
1.1 数据工程和编程语言 1
1.1.1 如何玩转数据 1
1.1.2 关于编程语言 3
1.2 带好装备——Python 和 Sublime 4
1.2.1 Python 4
1.2.2 Sublime 5
1.2.3 运行 Python 代码的方法 6
1.2.4 Hello World 7
1.3 数据结构和常见类型 7
1.3.1 数据的结构 8
1.3.2 数据的类型 8
第 2 章 学会 Python 10
2.1 Python 基础语法 10
2.1.1 Python 的特点 10
2.1.2 中文编码 10
2.1.3 变量 11
2.1.4 注释 14
2.1.5 保留名 14
2.1.6 行和缩进 15
2.1.7 运算符 15
2.1.8 条件 15
2.1.9 循环 16
2.1.10 时间 18
2.1.11 文件 19
2.1.12 异常 19
2.1.13 函数 20
2.1.14 补充内容 20
2.2 实战：西游记用字统计 21
2.2.1 数据 21
2.2.2 目标 21
2.2.3 步骤 21
2.2.4 总结 23
第 3 章 获取数据 24
3.1 HTTP 请求和 Chrome 24
3.1.1 访问一个链接 24
3.1.2 Chrome 浏览器 25
3.1.3 HTTP 27
3.1.4 URL 类型 28
3.2 使用 Python 获取数据 29
3.2.1 urllib2 29
3.2.2 GET 请求 29
3.2.3 POST 请求 30
3.2.4 处理返回结果 30
3.3 实战：爬取豆瓣电影 31
3.3.1 确定目标 31
3.3.2 通用思路 32
3.3.3 寻找链接 32
3.3.4 代码实现 34
3.3.5 补充内容 38
第 4 章 存储数据 40
4.1 使用 XAMP 搭建 Web 环境 40
4.1.1 Web 环境 40
4.1.2 偏好设置 41
4.1.3 Hello World 43
4.2 MySQL 使用方法 44
4.2.1 基本概念 44
4.2.2 命令行 44
4.2.3 Web 工具 44
4.2.4 本地软件 47
4.3 使用 Python 操作数据库 49
4.3.1 MySQLdb 49
4.3.2 建立连接 49
4.3.3 执行操作 50
4.3.4 关闭连接 52
4.3.5 扩展内容 52
第 5 章 静态可视化 53
5.1 在 R 中进行可视化 53
5.1.1 下载和安装 53
5.1.2 R 语言基础 54
5.1.3 ggplot2 59
5.1.4 R 语言学习笔记 59
5.2 掌握 ggplot2 数据可视化 59
5.2.1 图形种类 59
5.2.2 基本语法 60
5.2.3 条形图 61
5.2.4 折线图 61
5.2.5 描述数据分布 62
5.2.6 分面 62
5.2.7 R 语言数据可视化 62
5.3 实战： Diamonds 数据集探索 63
5.3.1 查看数据 63
5.3.2 价格和克拉 64
5.3.3 价格分布 64
5.3.4 纯净度分布 65
5.3.5 价格概率分布 65
5.3.6 不同切工下的价格分布 65
5.3.7 坐标变换 66
5.3.8 标题和坐标轴标签 66
第 6 章 自然语言理解 67
6.1 走近自然语言理解 67
6.1.1 概念 67
6.1.2 内容 67
6.1.3 应用 68
6.2 使用 jieba 分词处理中文 70
6.2.1 jieba 中文分词 70
6.2.2 中文分词 70
6.2.3 关键词提取 72
6.2.4 词性标注 73
6.3 词嵌入的概念和实现 73
6.3.1 语言的表示 73
6.3.2 训练词向量 75
6.3.3 代码实现 75
第 7 章 Web 基础 78
7.1 网页的骨骼： HTML 78
7.1.1 HTML 是什么 78
7.1.2 基本结构 78
7.1.3 常用标签 79
7.1.4 标签的属性 82
7.1.5 注释 83
7.1.6 表单 83
7.1.7 颜色 84
7.1.8 DOM 85
7.1.9 HTML5 86
7.1.10 补充内容 86
7.2 网页的血肉： CSS 86
7.2.1 CSS 是什么 87
7.2.2 基本结构 87
7.2.3 使用 CSS 87
7.2.4 常用选择器 89
7.2.5 常用样式 91
7.2.6 CSS3 94
7.2.7 CSS 实例 97
7.2.8 补充学习 98
7.3 网页的关节： JS 99
7.3.1 JS 是什么 99
7.3.2 使用 JS 99
7.3.3 JS 基础 100
7.3.4 补充学习 103
第 8 章 Web 进阶 104
8.1 比 JS 更方便的 JQuery 104
8.1.1 引入 JQuery 104
8.1.2 语法 105
8.1.3 选择器 106
8.1.4 事件 107
8.1.5 直接操作 108
8.1.6 AJAX 请求 112
8.1.7 补充学习 113
8.2 实战：你竟是这样的月饼 113
8.2.1 项目简介 113
8.2.2 首页实现 115
8.2.3 月饼页实现 128
8.2.4 项目总结 133
8.3 基于 ThinkPHP 的简易个人博客 134
8.3.1 ThinkPHP 是什么 134
8.3.2 个人博客 134
8.3.3 下载和初始化 134
8.3.4 MVC 135
8.3.5 数据库配置 136
8.3.6 控制器、函数和渲染模板 137
8.3.7 U 函数和页面跳转 139
8.3.8 表单实现和数据处理 141
8.3.9 读取数据并渲染 142
8.3.10 项目总结 145
8.4 基于 Flask 的简易个人博客 146
8.4.1 Flask 是什么 146
8.4.2 项目准备 147
8.4.3 渲染模板 149
8.4.4 操作数据库 150
8.4.5 完善其他页面 152
8.4.6 项目总结 155
第 9 章 动态可视化 157
9.1 使用 ECharts 制作交互图形 157
9.1.1 ECharts 是什么 157
9.1.2 引入 Echarts 158
9.1.3 准备一个画板 158
9.1.4 绘制 ECharts 图形 158
9.1.5 使用其他主题 160
9.1.6 配置项手册 160
9.1.7 开始探索 164
9.2 实战：再谈豆瓣电影数据分析 164
9.2.1 项目成果 164
9.2.2 数据获取 164
9.2.3 数据清洗和存储 167
9.2.4 数据分析 168
9.2.5 数据可视化 168
9.2.6 项目总结 171
9.3 数据可视化之魅 D3 172
9.3.1 D3 是什么 172
9.3.2 D3 核心思想 172
9.3.3 一个简单的例子 173
9.3.4 深入理解 D3 177
9.3.5 开始探索 180
9.4 实战：星战电影知识图谱 181
9.4.1 项目成果 181
9.4.2 数据获取 182
9.4.3 数据分析 182
9.4.4 数据可视化 183
9.4.5 项目总结 184
9.5 艺术家爱用的 Processing 185
9.5.1 Processing 是什么 185
9.5.2 一个简单的例子 186
9.5.3 Processing 基础 186
9.5.4 更多内容 189
9.6 实战：上海地铁的一天 189
9.6.1 项目成果 189
9.6.2 项目数据 189
9.6.3 项目思路 190
9.6.4 项目实现 190
9.6.5 项目总结 197
第 10 章 机器学习 198
10.1 明白一些基本概念 198
10.1.1 机器学习是什么 198
10.1.2 学习的种类 199
10.1.3 两大痛点 202
10.1.4 学习的流程 203
10.1.5 代码实现 205
10.2 常用经典模型及实现 206
10.2.1 线性回归 206
10.2.2 Logistic 回归 206
10.2.3 贝叶斯 207
10.2.4 K 近邻 207
10.2.5 决策树 207
10.2.6 支持向量机 209
10.2.7 K-Means 209
10.2.8 神经网络 210
10.2.9 代码实现 210
10.3 调参比赛大杀器 XGBoost 213
10.3.1 为什么要调参 214
10.3.2 XGBoost 是什么 214
10.3.3 XGBoost 安装 214
10.3.4 XGBoost 模型参数 215
10.3.5 XGBoost 调参实战 216
10.3.6 总结 227
10.4 实战：微额借款用户人品预测 227
10.4.1 项目背景 227
10.4.2 数据概况 228
10.4.3 缺失值处理 228
10.4.4 特征工程 229
10.4.5 特征选择 230
10.4.6 模型设计 231
10.4.7 项目总结 232
第 11 章 深度学习 233
11.1 初探 Deep Learning 233
11.1.1 深度学习是什么 233
11.1.2 神经元模型 234
11.1.3 全连接层 235
11.1.4 代码实现 236
11.2 用于处理图像的 CNN 237
11.2.1 CNN 是什么 238
11.2.2 CNN 核心内容 239
11.2.3 CNN 使用方法 241
11.2.4 CNN 模型训练 242
11.2.5 代码实现 242
11.3 用于处理序列的 RNN 242
11.3.1 RNN 是什么 242
11.3.2 RNN 模型结构 243
11.3.3 LSTM 244
11.3.4 RNN 使用方法 246
11.3.5 代码实现 246
11.4 实战：多种手写数字识别模型 246
11.4.1 手写数字数据集 247
11.4.2 全连接层 248
11.4.3 CNN 实现 252
11.4.4 RNN 实现 253
11.4.5 实战总结 254
第 12 章 数据的故事 256
12.1 如何讲一个好的故事 256
12.1.1 为什么要做 PPT 256
12.1.2 讲一个好的故事 256
12.1.3 用颜值加分 257
12.1.4 总结 258
12.2 实战：有内容有颜值的分享 258
12.2.1 SODA 258
12.2.2 公益云图 260
12.2.3 上海 BOT 262
12.2.4 总结 263
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python全栈数据工程师养成攻略(视频讲解版)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python机器学习算法
0  绪论	1
0.1  机器学习基础	1
0.1.1  机器学习的概念	1
0.1.2  机器学习算法的分类	2
0.2  监督学习	3
0.2.1  监督学习	3
0.2.2  监督学习的流程	3
0.2.3  监督学习算法	4
0.3  无监督学习	4
0.3.1  无监督学习	4
0.3.2  无监督学习的流程	4
0.3.3  无监督学习算法	5
0.4  推荐系统和深度学习	6
0.4.1  推荐系统	6
0.4.2  深度学习	6
0.5  Python和机器学习算法实践	6
参考文献	7
第一部分  分类算法
1  Logistic Regression	10
1.1  Logistic Regression模型	10
1.1.1  线性可分VS线性不可分	10
1.1.2  Logistic Regression模型	11
1.1.3  损失函数	13
1.2  梯度下降法	14
1.2.1  梯度下降法的流程	14
1.2.2  凸优化与非凸优化	15
1.2.3  利用梯度下降法训练Logistic Regression模型	17
1.3  梯度下降法的若干问题	18
1.3.1  选择下降的方向	18
1.3.2  步长的选择	19
1.4  Logistic Regression算法实践	20
1.4.1  利用训练样本训练Logistic Regression模型	20
1.4.2  最终的训练效果	22
1.4.3  对新数据进行预测	23
参考文献	26
2  Softmax Regression	27
2.1  多分类问题	27
2.2  Softmax Regression算法模型	28
2.2.1  Softmax Regression模型	28
2.2.2  Softmax Regression算法的代价函数	28
2.3  Softmax Regression算法的求解	29
2.4  Softmax Regression与Logistic Regression的关系	31
2.4.1  Softmax Regression中的参数特点	31
2.4.2  由Softmax Regression到Logistic Regression	31
2.5  Softmax Regression算法实践	32
2.5.1  对Softmax Regression算法的模型进行训练	33
2.5.2  最终的模型	34
2.5.3  对新的数据的预测	35
参考文献	39
3  Factorization Machine	40
3.1  Logistic Regression算法的不足	40
3.2  因子分解机FM的模型	42
3.2.1  因子分解机FM模型	42
3.2.2  因子分解机FM可以处理的问题	43
3.2.3  二分类因子分解机FM算法的损失函数	43
3.3  FM算法中交叉项的处理	43
3.3.1  交叉项系数	43
3.3.2  模型的求解	44
3.4  FM算法的求解	45
3.4.1  随机梯度下降（Stochastic Gradient Descent）	45
3.4.2  基于随机梯度的方式求解	45
3.4.3  FM算法流程	46
3.5  因子分解机FM算法实践	49
3.5.1  训练FM模型	50
3.5.2  最终的训练效果	53
3.5.3  对新的数据进行预测	55
参考文献	57
4  支持向量机	58
4.1  二分类问题	58
4.1.1  二分类的分隔超平面	58
4.1.2  感知机算法	59
4.1.3  感知机算法存在的问题	61
4.2  函数间隔和几何间隔	61
4.2.1  函数间隔	62
4.2.2  几何间隔	62
4.3  支持向量机	63
4.3.1  间隔最大化	63
4.3.2  支持向量和间隔边界	64
4.3.3  线性支持向量机	65
4.4  支持向量机的训练	66
4.4.1  学习的对偶算法	66
4.4.2  由线性支持向量机到非线性支持向量机	68
4.4.3  序列最小最优化算法SMO	69
4.5  支持向量机SVM算法实践	74
4.5.1  训练SVM模型	74
4.5.2  利用训练样本训练SVM模型	81
4.5.3  利用训练好的SVM模型对新数据进行预测	85
参考文献	88
5  随机森林	89
5.1  决策树分类器	89
5.1.1  决策树的基本概念	89
5.1.2  选择最佳划分的标准	91
5.1.3  停止划分的标准	94
5.2  CART分类树算法	95
5.2.1  CART分类树算法的基本原理	95
5.2.2  CART分类树的构建	95
5.2.3  利用构建好的分类树进行预测	98
5.3  集成学习（Ensemble Learning）	99
5.3.1  集成学习的思想	99
5.3.2  集成学习中的典型方法	99
5.4  随机森林（Random Forests）	101
5.4.1  随机森林算法模型	101
5.4.2  随机森林算法流程	102
5.5  随机森林RF算法实践	104
5.5.1  训练随机森林模型	105
5.5.2  最终的训练结果	109
5.5.3  对新数据的预测	110
参考文献	113
6  BP神经网络	114
6.1  神经元概述	114
6.1.1  神经元的基本结构	114
6.1.2  激活函数	115
6.2  神经网络模型	116
6.2.1  神经网络的结构	116
6.2.2  神经网络中的参数说明	117
6.2.3  神经网络的计算	117
6.3  神经网络中参数的求解	118
6.3.1  神经网络损失函数	118
6.3.2  损失函数的求解	119
6.3.3  BP神经网络的学习过程	120
6.4  BP神经网络中参数的设置	126
6.4.1  非线性变换	126
6.4.2  权重向量的初始化	126
6.4.3  学习率	127
6.4.4  隐含层节点的个数	127
6.5  BP神经网络算法实践	127
6.5.1  训练BP神经网络模型	128
6.5.2  最终的训练效果	132
6.5.3  对新数据的预测	133
参考文献	136
第二部分  回归算法
7  线性回归	138
7.1  基本线性回归	138
7.1.1  线性回归的模型	138
7.1.2  线性回归模型的损失函数	139
7.2  线性回归的最小二乘解法	140
7.2.1  线性回归的最小二乘解法	140
7.2.2  广义逆的概念	141
7.3  牛顿法	141
7.3.1  基本牛顿法的原理	141
7.3.2  基本牛顿法的流程	142
7.3.3  全局牛顿法	142
7.3.4  Armijo搜索	144
7.3.5  利用全局牛顿法求解线性回归模型	145
7.4  利用线性回归进行预测	146
7.4.1  训练线性回归模型	147
7.4.2  最终的训练结果	149
7.4.3  对新数据的预测	150
7.5  局部加权线性回归	152
7.5.1 局部加权线性回归模型	152
7.5.2  局部加权线性回归的最终结果	153
参考文献	154
8  岭回归和Lasso回归	155
8.1  线性回归存在的问题	155
8.2  岭回归模型	156
8.2.1  岭回归模型	156
8.2.2  岭回归模型的求解	156
8.3  Lasso回归模型	157
8.4  拟牛顿法	158
8.4.1  拟牛顿法	158
8.4.2  BFGS校正公式的推导	158
8.4.3  BFGS校正的算法流程	159
8.5  L-BFGS求解岭回归模型	162
8.5.1  BGFS算法存在的问题	162
8.5.2  L-BFGS算法思路	162
8.6  岭回归对数据的预测	165
8.6.1  训练岭回归模型	166
8.6.2  最终的训练结果	168
8.6.3  利用岭回归模型预测新的数据	168
参考文献	171
9  CART树回归	172
9.1  复杂的回归问题	172
9.1.1  线性回归模型	172
9.1.2  局部加权线性回归	173
9.1.3  CART算法	174
9.2  CART回归树生成	175
9.2.1  CART回归树的划分	175
9.2.2  CART回归树的构建	177
9.3  CART回归树剪枝	179
9.3.1  前剪枝	179
9.3.2  后剪枝	180
9.4  CART回归树对数据预测	180
9.4.1  利用训练数据训练CART回归树模型	180
9.4.2  最终的训练结果	182
9.4.3  利用训练好的CART回归树模型对新的数据预测	185
参考文献	187
第三部分  聚类算法
10  K-Means	190
10.1  相似性的度量	190
10.1.1  闵可夫斯基距离	191
10.1.2  曼哈顿距离	191
10.1.3  欧氏距离	191
10.2  K-Means算法原理	192
10.2.1  K-Means算法的基本原理	192
10.2.2  K-Means算法步骤	193
10.2.3  K-Means算法与矩阵分解	193
10.3  K-Means算法实践	195
10.3.1  导入数据	196
10.3.2  初始化聚类中心	197
10.3.3  聚类过程	198
10.3.4  最终的聚类结果	199
10.4  K-Means++算法	200
10.4.1  K-Means算法存在的问题	200
10.4.2  K-Means++算法的基本思路	202
10.4.3  K-Means++算法的过程和最终效果	204
参考文献	205
11  Mean Shift	206
11.1  Mean Shift向量	206
11.2  核函数	207
11.3  Mean Shift算法原理	209
11.3.1  引入核函数的Mean Shift向量	209
11.3.2  Mean Shift算法的基本原理	210
11.4  Mean Shift算法的解释	212
11.4.1  概率密度梯度	212
11.4.2  Mean Shift向量的修正	213
11.4.3  Mean Shift算法流程	213
11.5  Mean Shift算法实践	217
11.5.1  Mean Shift的主过程	218
11.5.2  Mean Shift的最终聚类结果	219
参考文献	221
12  DBSCAN	222
12.1  基于密度的聚类	222
12.1.1  基于距离的聚类算法存在的问题	222
12.1.2  基于密度的聚类算法	225
12.2  DBSCAN算法原理	225
12.2.1  DBSCAN算法的基本概念	225
12.2.2  DBSCAN算法原理	227
12.2.3  DBSCAN算法流程	228
12.3  DBSCAN算法实践	231
12.3.1  DBSCAN算法的主要过程	232
12.3.2  Mean Shift的最终聚类结果	234
参考文献	236
13  Label Propagation	237
13.1  社区划分	237
13.1.1  社区以及社区划分	237
13.1.2  社区划分的算法	238
13.1.3  社区划分的评价标准	239
13.2  Label Propagation算法原理	239
13.2.1  Label Propagation算法的基本原理	239
13.2.2  标签传播	240
13.2.3  迭代的终止条件	242
13.3  Label Propagation算法过程	244
13.4  Label Propagation算法实践	244
13.4.1  导入数据	245
13.4.2  社区的划分	246
13.4.3  最终的结果	247
参考文献	248
第四部分  推荐算法
14  协同过滤算法	250
14.1  推荐系统的概述	250
14.1.1  推荐系统	250
14.1.2  推荐问题的描述	251
14.1.3  推荐的常用方法	251
14.2  基于协同过滤的推荐	252
14.2.1  协同过滤算法概述	252
14.2.2  协同过滤算法的分类	252
14.3  相似度的度量方法	253
14.3.1  欧氏距离	254
14.3.2  皮尔逊相关系数（Pearson Correlation）	254
14.3.3  余弦相似度	254
14.4  基于协同过滤的推荐算法	256
14.4.1  基于用户的协同过滤算法	256
14.4.2  基于项的协同过滤算法	258
14.5  利用协同过滤算法进行推荐	260
14.5.1  导入用户-商品数据	260
14.5.2  利用基于用户的协同过滤算法进行推荐	261
14.5.3  利用基于项的协同过滤算法进行推荐	262
参考文献	264
15  基于矩阵分解的推荐算法	265
15.1  矩阵分解	265
15.2  基于矩阵分解的推荐算法	266
15.2.1  损失函数	266
15.2.2  损失函数的求解	266
15.2.3  加入正则项的损失函数即求解方法	267
15.2.4  预测	269
15.3  利用矩阵分解进行推荐	270
15.3.1  利用梯度下降对用户商品矩阵分解和预测	270
15.3.2  最终的结果	272
15.4  非负矩阵分解	273
15.4.1  非负矩阵分解的形式化定义	274
15.4.2  损失函数	274
15.4.3  优化问题的求解	274
15.5  利用非负矩阵分解进行推荐	277
15.5.1  利用乘法规则进行分解和预测	277
15.5.2  最终的结果	278
参考文献	279
16  基于图的推荐算法	280
16.1  二部图与推荐算法	280
16.1.1  二部图	280
16.1.2  由用户商品矩阵到二部图	281
16.2  PageRank算法	282
16.2.1  PageRank算法的概念	282
16.2.2  PageRank的两个假设	283
16.2.3  PageRank的计算方法	283
16.3  PersonalRank算法	285
16.3.1  PersonalRank算法原理	285
16.3.2  PersonalRank算法的流程	286
16.4  利用PersonalRank算法进行推荐	288
16.4.1  利用PersonalRank算法进行推荐	288
16.4.2  最终的结果	291
参考文献	291
第五部分  深度学习
17  AutoEncoder	294
17.1  多层神经网络	294
17.1.1  三层神经网络模型	294
17.1.2  由三层神经网络到多层神经网络	295
17.2  AutoEncoder模型	296
17.2.1  AutoEncoder模型结构	296
17.2.2  AutoEncoder的损失函数	297
17.3  降噪自编码器Denoising AutoEncoder	298
17.3.1  Denoising AutoEncoder原理	298
17.3.2  Denoising AutoEncoder实现	299
17.4  利用Denoising AutoEncoders构建深度网络	302
17.4.1  无监督的逐层训练	302
17.4.2  有监督的微调	303
17.5  利用TensorFlow实现Stacked Denoising AutoEncoders	306
17.5.1  训练Stacked Denoising AutoEncoders模型	306
17.5.2  训练的过程	307
参考文献	308
18  卷积神经网络	309
18.1  传统神经网络模型存在的问题	309
18.2  卷积神经网络	311
18.2.1  卷积神经网络中的核心概念	311
18.2.2  卷积神经网络模型	312
18.3  卷积神经网络的求解	313
18.3.1  卷积层（Convolution Layer）	313
18.3.2  下采样层（Sub-Sampling Layer）	316
18.3.3  全连接层（Fully-Connected Layer）	316
18.4  利用TensorFlow实现CNN	316
18.4.1  CNN的实现	316
18.4.2  训练CNN模型	320
18.4.3  训练的过程	321
参考文献	321
第六部分  项目实践
19  微博精准推荐	324
19.1  精准推荐	324
19.1.1  精准推荐的项目背景	324
19.1.2  精准推荐的技术架构	325
19.1.3  离线数据挖掘	326
19.2  基于用户行为的挖掘	327
19.2.1  基于互动内容的兴趣挖掘	327
19.2.2  基于与博主互动的兴趣挖掘	328
19.3  基于相似用户的挖掘	329
19.3.1  基于“@”人的相似用户挖掘	329
19.3.2  基于社区的相似用户挖掘	329
19.3.3  基于协同过滤的相似用户挖掘	331
19.4  点击率预估	332
19.4.1  点击率预估的概念	332
19.4.2  点击率预估的方法	332
19.5  各种数据技术的效果	334
参考文献	335
附录A	336
附录B	341
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python机器学习算法
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>语料库与python应用
目录
第1章 绪论
1.1 语料库与Python
1.1.1 语料库的若干维度
1.1.2 语料库的技术实现
1.2 本书概要
上篇 语料文本的基础性代码
第2章 语料文本的读取及其运行结果的输出
2.1 概述
2.2 语料文本的读取
2.2.1 读取NLTK固有语料库
2.2.2 读取自制语料库
2.2.3 读取非独立存储的语料文本
2.2.4 读取docx格式的语料文本
2.2.5 读取xlsx格式的语料文本
2.3 语料文本运行结果的输出
2.3.1 操作界面直接输出结果
2.3.2 输出txt文件格式
2.3.3 输出xlsx文件格式
2.4 中文语料文本的读取和结果输出
2.4.1 自制语料库
2.4.2 非独立存储的语料文本
第3章 语料库应用的基础性代码
3.1 概述
3.2 停用词的使用
3.2.1 不同语种的停用词
3.2.2 自有停用词的设置
3.3 文本降噪代码
3.3.1 具体代码的功用
3.3.2 组合使用代码的功用
3.3.3 降噪与文本计数
3.4 语料文本的语言学处理代码
3.4.1 字母大小写转换
3.4.2 词形还原
3.4.3 文本分句或分词
3.4.4 词性标注
3.5 语料库词频排序
3.5.1 简单词频排序
3.5.2 降噪处理后词频排序
3.5.3 清除停用词后排序
3.6 语料库检索与统计
3.6.1 上下文关键词检索
3.6.2 类符形符比
3.6.3 N连词提取
3.6.4 指定词检索与统计
3.7 中文语料文本的处理方法
3.7.1 上下文关键词检索
3.7.2 中文停用词
第4章 数据可视化
4.1 概述
4.2 表格绘制
4.3 图形绘制
4.3.1 词频图形绘制
4.3.2 柱状图和点状图绘制
4.4 词云图绘制
4.4.1 英文文本词云图
4.4.2 中文文本词云图
第5章 代码运行错误分析
5.1 概述
5.2 错误分析案例
5.2.1 输入输出错误（IOError）
5.2.2 对象属性错误（AttributeError）
5.2.3 数据类型错误（TypeError）
5.2.4 变量名称错误（NameError）
5.2.5 索引错误（IndexError）
5.2.6 缩进错误（Indentati）
5.2.7 参数类型错误（ValueError）
5.2.8 语法错误（SyntaxError）
5.2.9 Unicode解码错误（UnicodeDecodeError）
5.2.10 关键字错误（KeyError）
中篇 基础性代码的组合使用
第6章 算法、代码与编程
6.1 篇章结构
6.2 算法和代码
6.2.1 算法
6.2.2 代码
6.3 选择不同代码的影响
6.3.1 分词处理方式对后续文本分析的影响
6.3.2 不同的降噪效果
6.3.3 链表、字符串、元组和字典对比
6.3.4 停用词的功用
6.4 Python与既有语料库工具的关系
第7章 基础性代码的语料库组合应用
7.1 以Excel文件格式输出术语（类符）
7.1.1 简单输出术语
7.1.2 按词频输出术语
7.2 以Excel文件格式输出表格
7.3 语篇词汇密度的计算
7.4 语篇词汇复杂性的计算
7.5 语篇词长分布的计算
7.6 NLTK固有语料库
7.6.1 总统就职演说语料库
7.6.2 华尔街杂志语料库
7.6.3 其他相关语料库介绍
下篇 Python探索路径
第8章 Python的语料库拓展应用
8.1 概述
8.2 单语语料导入Excel工作簿
8.3 KWIC检索功能的拓展
8.4 语篇词形还原
8.5 术语提取效果的改进
8.6 语篇段落对齐
8.7 应用语言学文献计量研究的数据提取
8.8 专业通用词的提取路径探索
附录1 与本书相关的加载模块与函数命令对应表
附录2 Python2 和Python3部分代码对比
附录3 部分NLTK固有语料库
附录4 汉英对照术语表
索引
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>语料库与python应用
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python设计模式（第2版）
前言
第1章　设计模式简介
第2章　单例设计模式
第3章　工厂模式：建立创建对象的工厂
第4章　门面模式——与门面相适
第5章　代理模式——控制对象的访问
第6章　观察者模式——了解对象的情况
第7章　命令模式——封装调用
第8章　模板方法模式——封装算法
第9章　模型—视图—控制器——复合模式
第10章　状态设计模式
第11章　反模式
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python设计模式（第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python 3程序开发指南
目 录
第 1章 过程型程序设计快速入门 1
1.1 创建并运行Python程序 1
1.2 Python的关键要素 5
1.2.1 要素#1：数据类型 6
1.2.2 要素#2：对象引用 7
1.2.3 要素#3：组合数据类型 9
1.2.4 元素#4：逻辑操作符 12
1.2.5 要素#5：控制流语句 16
1.2.6 要素#6：算术操作符 20
1.2.7 要素#7：输入/输出 23
1.2.8 要素#8：函数的创建与调用 25
1.3 实例 27
1.3.1 bigdigits.py 28
1.3.2 generate_grid.py 30
1.4 总结 33
1.5 练习 35
第 2章 数据类型 38
2.1 标识符与关键字 38
2.2 Integral类型 41
2.2.1 整数 41
2.2.2 布尔型 44
2.3 浮点类型 44
2.3.1 浮点数 45
2.3.2 复数 48
2.3.3 十进制数字 49
2.4 字符串 50
2.4.1 比较字符串 53
2.4.2 字符串分片与步距 54
2.4.3 字符串操作符与方法 56
2.4.4 使用str.format()方法进行字符串格式化 62
2.4.5 字符编码 73
2.5 实例 75
2.5.1 quadratic.py 75
2.5.2 csv2html.py 78
2.6 总结 82
2.7 练习 84
第3章 组合数据类型 86
3.1 序列类型 86
3.1.1 元组 87
3.1.2 命名的元组 89
3.1.3 列表 91
3.1.4 列表内涵 96
3.2 集合类型 98
3.2.1 集合 98
3.2.2 集合内涵 102
3.2.3 固定集合 102
3.3 映射类型 103
3.3.1 字典 103
3.3.2 字典内涵 110
3.3.3 默认字典 111
3.4 组合数据类型的迭代与复制 113
3.4.1 迭代子、迭代操作与函数 113
3.4.2 组合类型的复制 121
3.5 实例 123
3.5.1 generate_usernames.py 123
3.5.2 statistics.py 126
3.6 总结 130
3.7 练习 131
第4章 控制结构与函数 133
4.1 控制结构 133
4.1.1 条件分支 133
4.1.2 循环 135
4.2 异常处理 136
4.2.1 捕获与产生异常 136
4.2.2 自定义异常 141
4.3 自定义函数 144
4.3.1 名称与Docstrings 148
4.3.2 参数与参数拆分 149
4.3.3 存取全局范围的变量 152
4.3.4 Lambda函数 153
4.3.5 断言 155
4.4 实例：make_html_skeleton.py 156
4.5 总结 162
4.6 练习 162
第5章 模块 165
5.1 模块与包 165
5.1.1 包 169
5.1.2 自定义模块 171
5.2 Python标准库概览 181
5.2.1 字符串处理 181
5.2.2 io.StringIO类 182
5.2.3 命令行程序设计 183
5.2.4 数学与数字 184
5.2.5 时间与日期 184
5.2.6 实例：calendar、datetime与time模块 185
5.2.7 算法与组合数据类型 185
5.2.8 文件格式、编码与数据持久性 187
5.2.9 文件、目录与进程处理 190
5.2.10 网络与Internet程序设计 192
5.2.11 XML 193
5.2.12 其他模块 195
5.3 总结 196
5.4 练习 198
第6章 面向对象程序设计 200
6.1 面向对象方法 200
6.2 自定义类 204
6.2.1 属性与方法 205
6.2.2 继承与多态 209
6.2.3 使用特性进行属性存取控制 211
6.2.4 创建完全整合的数据类型 213
6.3 自定义组合类 225
6.3.1 创建聚集组合数据的类 225
6.3.2 使用聚集创建组合类 231
6.3.3 使用继承创建组合类 237
6.4 总结 244
6.5 练习 245
第7章 文件处理 247
7.1 二进制数据的读写 251
7.1.1 带可选压缩的Pickle 252
7.1.2 带可选压缩的原始二进制数据 256
7.2 文本文件的写入与分析 263
7.2.1 写入文本 263
7.2.2 分析文本 265
7.2.3 使用正则表达式分析文本 268
7.3 写入与分析XML文件 270
7.3.1 元素树 270
7.3.2 DOM 274
7.3.3 手动写入XML 277
7.3.4 使用SAX分析XML 278
7.4 随机存取二进制文件 281
7.4.1 通用的BinaryRecordFile类 281
7.4.2 实例：BikeStock模块的类 289
7.5 总结 292
7.6 练习 293
第8章 高级程序设计技术 295
8.1 过程型程序设计进阶 296
8.1.1 使用字典进行分支 296
8.1.2 生成器表达式与函数 297
8.1.3 动态代码执行与动态导入 300
8.1.4 局部函数与递归函数 306
8.1.5 函数与方法修饰器 311
8.1.6 函数注释 314
8.2 面向对象程序设计进阶 317
8.2.1 控制属性存取 317
8.2.2 函子 320
8.2.3 上下文管理器 322
8.2.4 描述符 325
8.2.5 类修饰器 330
8.2.6 抽象基类 333
8.2.7 多继承 340
8.2.8 元类 342
8.3 函数型程序设计 346
8.3.1 偏函数 348
8.3.2 协程 349
8.4 实例：Valid.py 356
8.5 总结 359
8.6 练习 360
第9章 调试、测试与Profiling 361
9.1 调试 361
9.1.1 处理语法错误 362
9.1.2 处理运行时错误 363
9.1.3 科学的调试 367
9.2 单元测试 371
9.3 Profiling 377
9.4 小结 382
第 10章 进程与线程 383
10.1 使用多进程模块 384
10.2 将工作分布到多个线程 388
10.2.1 实例：线程化的单词寻找程序 389
10.2.2 实例：一个线程化的重复文件发现程序 392
10.3 总结 396
10.4 练习 397
第 11章 网络 399
11.1 创建TCP客户端 400
11.2 创建TCP服务器 406
11.3 总结 412
11.4 练习 412
第 12章 数据库程序设计 414
12.1 DBM数据库 414
12.2 SQL数据库 418
12.3 总结 425
12.4 练习 425
第 13章 正则表达式 427
13.1 Python的正则表达式语言 428
13.1.1 字符与字符类 428
13.1.2 量词 429
13.1.3 组与捕获 431
13.1.4 断言与标记 433
13.2 正则表达式模块 436
13.3 总结 444
13.4 练习 445
第 14章 分析简介 446
14.1 BNF语法与分析的术语 447
14.2 手动编写分析器 451
14.2.1 简单的键-值数据分析 451
14.2.2 播放列表数据分析 454
14.2.3 Blocks域特定语言的分析 456
14.3 使用PyParsing进行更Python化的分析 464
14.3.1 PyParsing快速介绍 465
14.3.2 简单的键-值数据分析 468
14.3.3 播放列表数据分析 470
14.3.4 分析块域特定语言 471
14.3.5 分析一阶逻辑 476
14.4 使用PLY进行Lex/Yacc风格的分析 481
14.4.1 简单的键-值数据分析 483
14.4.2 播放列表数据分析 485
14.4.3 分析块域特定语言 487
14.4.4 分析一阶逻辑 489
14.5 小结 493
14.6 练习 494
第 15章 GUI程序设计介绍 496
15.1 对话框风格的程序 499
15.2 主窗口风格的程序 504
15.2.1 创建一个主窗口 504
15.2.2 创建自定义对话框 514
15.3 总结 517
15.4 练习 518
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python 3程序开发指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python机器学习实践
前言 1
第1章 5
可能近似正确的软件 5
正确地编写软件 6
编写正确的软件 10
本书计划 16
第2章 快速介绍机器学习 18
什么是机器学习 18
有监督学习 18
无监督学习 19
强化学习 20
机器学习能完成什么 20
本书中使用的数学符号 21
结论 22
第3章 K最近邻算法 23
如何确定是否想购买一栋房子 23
房子的价格究竟几何 24
愉悦回归 24
什么是邻域 25
K最近邻算法简介 26
K先生最近的邻居 26
距离 27
维度灾难 33
如何选择K 34
给西雅图的房子估价 37
结论 43
第4章 朴素贝叶斯分类 44
通过贝叶斯定理来发现欺诈订单 44
条件概率 45
概率符号 45
反向条件概率（又名贝叶斯定理） 47
朴素贝叶斯分类器 47
贝叶斯推理之朴素 48
伪计数 49
垃圾邮件过滤器 50
标记化和上下文 55
结论 67
第5章 决策树和随机森林 68
蘑菇的细微差别 69
使用民间定理实现蘑菇分类 70
找到最佳切换点 71
修剪树 74
结论 83
第6章 隐马尔可夫模型 84
使用状态机来跟踪用户行为 84
输出/观测隐含状态 86
使用马尔可夫假设化简 87
隐马尔可夫模型 88
评估: 前向-后向算法 89
通过维特比算法解码 93
学习问题 94
词性标注与布朗语库 94
结论 105
第7章 支持向量机 106
客户满意度作为语言的函数 107
SVM背后的理论 108
情绪分析器 113
聚合情绪 124
将情绪映射到底线 126
结论 127
第8章 神经网络 128
什么是神经网络 129
神经网络史 129
布尔逻辑 129
感知器 130
如何构建前馈神经网络 130
构建神经网络 144
使用神经网络来对语言分类 145
结论 154
第9章 聚类 155
无任何偏差的研究数据 155
用户群组 156
测试群集映射 157
K均值聚类 159
最大期望（EM）聚类 161
不可能性定理 163
案例：音乐归类 164
结论 174
第10章 模型改进与数据提取 175
辩论俱乐部 175
选择更好的数据 176
最小冗余最大相关性的特征选择 181
特征变换与矩阵分解 183
结论 189
第11章 将这些方法融合在一起：结论 191
机器学习算法回顾 191
如何使用这些信息来解决问题 193
下一步做什么 193
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python机器学习实践
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python可以这样学
第1章Python基础1
1.1Python是一种什么样的语言1
1.2Python开发环境2
1.2.1百家争鸣的繁荣景象2
1.2.2IDLE简单使用6
1.3变量、运算符与表达式9
1.3.1Python变量与内置数据类型9
1.3.2常用内置函数15
1.3.3运算符与表达式21
1.3.4人机对话基本接口25
1.4模块安装与使用28
1.4.1安装Python扩展库28
1.4.2模块导入与使用30
1.4.3编写自己的模块和包32
第2章Python序列35
2.1列表与列表推导式36
2.1.1列表创建与删除36
2.1.2列表常用方法38
2.1.3列表推导式46
2.1.4切片50
2.2元组与生成器推导式54
2.2.1元组54
2.2.2生成器推导式55
2.3字典57
2.3.1字典创建和元素添加、修改与删除57
2.3.2访问字典对象的数据59
2.3.3案例精选61
2.4集合63[1]〖2〗Python可以这样学[1]目录〖2〗2.4.1集合基础知识63
2.4.2集合操作与运算64
2.4.3案例精选67
2.5序列解包69
第3章程序控制结构与函数设计71
3.1选择结构71
3.1.1条件表达式71
3.1.2选择结构的几种形式73
3.1.3案例精选79
3.2循环结构82
3.2.1for循环与while循环的基本语法82
3.2.2break与continue语句83
3.2.3循环代码优化技巧84
3.2.4案例精选86
3.3函数设计与使用90
3.3.1基本语法91
3.3.2函数参数不得不说的几件事94
3.3.3变量作用域99
3.3.4lambda表达式102
3.3.5案例精选104
第4章面向对象程序设计122
4.1基础知识122
4.1.1类的定义与使用122
4.1.2私有成员与公有成员123
4.1.3数据成员125
4.1.4方法126
4.1.5属性129
4.1.6继承131
4.1.7特殊方法与运算符重载134
4.2案例精选135
4.2.1自定义数组135
4.2.2自定义矩阵141
4.2.3自定义队列147
4.2.4自定义栈151
4.2.5自定义二叉树154
4.2.6自定义有向图157
4.2.7自定义集合158
第5章字符串与正则表达式165
5.1字符串165
5.1.1字符串格式化的两种形式168
5.1.2字符串常用方法171
5.1.3案例精选186
5.2正则表达式190
5.2.1正则表达式语法与子模式扩展语法190
5.2.2re模块方法与正则表达式对象193
5.2.3案例精选199
第6章文件与文件夹操作206
6.1文件对象常用方法与属性207
6.2文本文件操作案例精选209
6.3二进制文件操作案例精选217
6.3.1使用pickle模块读写二进制文件217
6.3.2使用struct模块读写二进制文件219
6.3.3使用shelve模块操作二进制文件220
6.3.4使用marshal模块操作二进制文件220
6.4文件与文件夹操作221
6.4.1标准库os、os.path与shutil简介221
6.4.2案例精选227
第7章异常处理结构、代码测试与调试252
7.1异常处理结构252
7.1.1异常是什么252
7.1.2Python内置异常类层次结构254
7.1.3常见异常处理结构形式255
7.2代码测试262
7.2.1doctest263
7.2.2单元测试264
7.3代码调试270
7.3.1使用IDLE调试270
7.3.2使用pdb调试273
阶段性寄语278
第8章数据库应用开发279
8.1使用Python操作SQLite数据库279
8.1.1Connection对象280
8.1.2Cursor对象281
8.1.3Row对象284
8.2使用Python操作其他关系型数据库285
8.2.1操作Access数据库285
8.2.2操作MS SQL Server数据库286
8.2.3操作MySQL数据库288
8.3操作MongoDB数据库290
第9章网络应用开发293
9.1计算机网络基础知识293
9.2Socket编程295
9.2.1UDP编程296
9.2.2TCP编程298
9.2.3网络嗅探器300
9.2.4多进程端口扫描器302
9.2.5代理服务器端口映射功能的实现305
9.2.6自己编写FTP通信软件308
9.3域名解析与网页爬虫313
9.3.1网页内容读取与域名分析313
9.3.2网页爬虫315
9.3.3scrapy框架316
9.3.4BeautifulSoup4318
9.4网站开发323
9.4.1使用IIS运行Python CGI程序323
9.4.2Python在ASP.NET中的应用325
9.4.3Flask框架简单应用327
9.4.4django框架简单应用328
第10章多线程与多进程333
10.1多线程编程334
10.1.1线程创建与管理336
10.1.2线程同步技术339
10.2多进程编程346
10.2.1进程创建与管理347
10.2.2进程间数据交换347
10.2.3进程同步技术350
第11章大数据处理351
11.1大数据简介351
11.2MapReduce框架352
11.3Spark应用开发356
第12章图形编程与图像处理361
12.1图形编程361
12.1.1绘制三维图形361
12.1.2绘制三次贝塞尔曲线364
12.1.3纹理映射365
12.1.4响应键盘事件368
12.1.5光照模型369
12.2图像处理372
12.2.1pillow模块基本用法372
12.2.2计算椭圆中心375
12.2.3动态生成比例分配图376
12.2.4生成验证码图片377
12.2.5gif动态图像分离与生成379
12.2.6材质贴图380
12.2.7图像融合381
12.2.8棋盘纹理生成383
第13章数据分析与科学计算可视化384
13.1扩展库numpy简介384
13.2科学计算扩展库scipy393
13.2.1数学、物理常用常数与单位模块constants394
13.2.2特殊函数模块special395
13.2.3信号处理模块signal395
13.2.4图像处理模块ndimage397
13.3扩展库pandas简介401
13.4统计分析标准库statistics用法简介405
13.5matplotlib407
13.5.1绘制正弦曲线408
13.5.2绘制散点图408
13.5.3绘制饼状图410
13.5.4绘制带有中文标签和图例的图410
13.5.5绘制图例标签中带有公式的图411
13.5.6使用pyplot绘制，多个图形单独显示412
13.5.7绘制三维参数曲线413
13.5.8绘制三维图形414
13.5.9使用指令绘制自定义图形416
13.5.10在tkinter中使用matplotlib417
13.5.11使用matplotlib提供的组件实现交互式图形显示419
13.5.12根据实时数据动态更新图形421
13.5.13使用Slider组件调整曲线参数422
第14章密码学编程425
14.1经典密码算法425
14.1.1恺撒密码算法425
14.1.2维吉尼亚密码427
14.1.3换位密码算法428
14.2安全哈希算法429
14.3对称密钥密码算法DES和AES432
14.4非对称密钥密码算法RSA与数字签名算法DSA433
14.4.1RSA433
14.4.2DSA435
第15章tkinter编程精彩案例436
15.1用户登录界面436
15.2选择类组件应用438
15.3简单文本编辑器441
15.4简单画图程序445
15.5电子时钟449
15.6简单动画451
15.7多窗口编程454
15.8屏幕任意区域截图456
15.9音乐播放器458
15.10远程桌面监控系统462
第16章课堂教学管理系统设计与实现466
16.1功能简介466
16.1.1教师端功能466
16.1.2学生端功能467
16.2数据库设计468
16.3系统总框架与通用功能设计469
16.4数据导入功能473
16.4.1学生名单导入473
16.4.2题库导入473
16.5点名与加分功能475
16.5.1在线点名475
16.5.2离线点名与加分477
16.6随机提问功能480
16.7在线收作业功能482
16.7.1学生端482
16.7.2教师端483
16.8在线自测与在线考试功能485
16.8.1学生端486
16.8.2教师端488
16.9信息查看功能490
16.10数据导出功能492
16.11其他辅助功能493
16.11.1防作弊功能493
16.11.2服务器自动发现功能493
16.11.3Word版试卷生成功能494
结束语496
附录A本书中例题清单497
附录B本书中插图清单503
附录C本书中表格清单507
附录D本书中拓展知识摘要清单508
参考文献513
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python可以这样学
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>卷积神经网络的Python实现
第一部分　模型篇
第1章　机器学习简介　　2
1.1　引言　　2
1.2　基本术语　　3
1.3　重要概念　　5
1.4　图像分类　　12
1.5　MNIST数据集简介　　15
第2章　线性分类器　　17
2.1　线性模型　　17
2.1.1　线性分类器　　18
2.1.2　理解线性分类器　　19
2.1.3　代码实现　　21
2.2　softmax损失函数　　22
2.2.1　损失函数的定义　　23
2.2.2　概率解释　　24
2.2.3　代码实现　　25
2.3　优化　　26
2.4　梯度下降法　　26
2.4.1　梯度的解析意义　　27
2.4.2　梯度的几何意义　　29
2.4.3　梯度的物理意义　　29
2.4.4　梯度下降法代码实现　　29
2.5　牛顿法　　30
2.6　机器学习模型统一结构　　31
2.7　正则化　　33
2.7.1　范数正则化　　34
2.7.2　提前终止训练　　37
2.7.3　概率的进一步解释　　38
第3章　神经网络　　39
3.1　数学模型　　39
3.2　激活函数　　41
3.3　代码实现　　44
3.4　学习容量和正则化　　45
3.5　生物神经科学基础　　48
第4章　卷积神经网络的结构　　50
4.1　概述　　50
4.1.1　局部连接　　51
4.1.2　参数共享　　52
4.1.3　3D特征图　　52
4.2　卷积层　　53
4.2.1　卷积运算及代码实现　　54
4.2.2　卷积层及代码初级实现　　57
4.2.3　卷积层参数总结　　63
4.2.4　用连接的观点看卷积层　　64
4.2.5　使用矩阵乘法实现卷积层运算　　67
4.2.6　批量数据的卷积层矩阵乘法的代码实现　　69
4.3　池化层　　74
4.3.1　概述　　74
4.3.2　池化层代码实现　　76
4.4　全连接层　　79
4.4.1　全连接层转化成卷积层　　80
4.4.2　全连接层代码实现　　82
4.5　卷积网络的结构　　83
4.5.1　层的组合模式　　83
4.5.2　表示学习　　86
4.6　卷积网络的神经科学基础　　87
第二部分　优化篇
第5章　基于梯度下降法的最优化方法　　90
5.1　随机梯度下降法SGD　　91
5.2　基本动量法　　93
5.3　Nesterov动量法　　95
5.4　AdaGrad　　95
5.5　RMSProp　　97
5.6　Adam　　98
5.7　AmsGrad　　99
5.8　学习率退火　　99
5.9　参数初始化　　100
5.10　超参数调优　　101
第6章　梯度反向传播算法　　104
6.1　基本函数的梯度　　104
6.2　链式法则　　105
6.3　深度网络的误差反向传播算法　　107
6.4　矩阵化　　109
6.5　softmax损失函数梯度计算　　111
6.6　全连接层梯度反向传播　　112
6.7　激活层梯度反向传播　　113
6.8　卷积层梯度反向传播　　115
6.9　最大值池化层梯度反向传播　　118
第三部分　实战篇
第7章　训练前的准备　　124
7.1　中心化和规范化　　124
7.1.1　利用线性模型推导中心化　　125
7.1.2　利用属性同等重要性推导规范化　　126
7.1.3　中心化和规范化的几何意义　　128
7.2　PCA和白化　　128
7.2.1　从去除线性相关性推导PCA　　129
7.2.2　PCA代码　　130
7.2.3　PCA降维　　131
7.2.4　PCA的几何意义　　133
7.2.5　白化　　134
7.3　卷积网络在进行图像分类时如何预处理　　135
7.4　BN　　136
7.4.1　BN前向计算　　136
7.4.2　BN层的位置　　137
7.4.3　BN层的理论解释　　138
7.4.4　BN层在实践中的注意事项　　139
7.4.5　BN层的梯度反向传播　　140
7.4.6　BN层的地位探讨　　141
7.4.7　将BN层应用于卷积网络　　141
7.5　数据扩增　　142
7.6　梯度检查　　144
7.7　初始损失值检查　　146
7.8　过拟合微小数据子集　　146
7.9　监测学习过程　　147
7.9.1　损失值　　147
7.9.2　训练集和验证集的准确率　　148
7.9.3　参数更新比例　　149
第8章　神经网络实例　　150
8.1　生成数据　　150
8.2　数据预处理　　152
8.3　网络模型　　153
8.4　梯度检查　　156
8.5　参数优化　　158
8.6　训练网络　　159
8.7　过拟合小数据集　　162
8.8　超参数随机搜索　　162
8.9　评估模型　　165
8.10　程序组织结构　　165
8.11　增加BN层　　167
8.12　程序使用建议　　171
第9章　卷积神经网络实例　　172
9.1　程序结构设计　　173
9.2　激活函数　　173
9.3　正则化　　174
9.4　优化方法　　175
9.5　卷积网络的基本模块　　176
9.6　训练方法　　181
9.7　VGG网络结构　　186
9.8　MNIST数据集　　197
9.9　梯度检测　　199
9.10　MNIST数据集的训练结果　　202
9.11　程序使用建议　　205
第10章　卷积网络结构的发展　　206
10.1　全局平均池化层　　206
10.2　去掉池化层　　208
10.3　网络向更深更宽发展面临的困难　　209
10.4　ResNet向更深发展的代表网络　　210
10.5　GoogLeNet向更宽发展的代表网络　　213
10.6　轻量网络　　215
10.6.1　1×1深度维度卷积代码实现　　217
10.6.2　3×3逐特征图的卷积代码实现　　219
10.6.3　逆残差模块的代码实现　　222
10.7　注意机制网络SENet　　223
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>卷积神经网络的Python实现
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python与数据科学
基础编
1 数据科学简介
1.1 什么是数据科学
1.2 如何学习数据科学
1.3 什么是数据科学家
1.4 数据科学家需要掌握的技能
1.5 Python与数据科学
1.6 数据科学领域常用的Python包
本章小结
参考文献
2 Python基础知识
2.1 Python基本概念
2.2 序列和基本语句
2.3 函数和模块
本章小结
习题
参考文献
分析编
3 Python数据获取与数据预处理
3.1 Python数据获取
3.2 Python数据预处理
本章小结
习题
参考文献
4 利用Python进行数据分析
4.1 数据分析与Python
4.2 基本统计分析
4.3 主成分分析（PCA）
4.4 线性回归
本章小结
习题
参考文献
挖掘编
5 利用Python进行数据挖抛
5.1 数据挖掘与Py
5.2 k最近邻（k-Nearest Neighbor）
5.3 决策树（Decision Tree）
5.4 朴素贝叶斯（Naive Bayesian）
5.5 逻辑回归（Logistic Regression）
5.6 Apriori算法
5.7 聚类分析（Clustering Analysis）
5.8 随机森林（Random Forest）
本章小结
习题
参考文献
6 利用Python进行文本挖掘
6.1 文本挖掘简介
6.2 Python与文本分类
6.3 Python与文本聚类
6.4 Python与文本情感分析
6.5 Python与全文检索
本章小结
习题
参考文献
提高编
7 Python与海量数据处理简介
7.1 Spark简介
7.2 Pag
7.3 Python与推荐系统
本章小结
习题
参考文献
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python与数据科学
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>零起点Python足彩大数据与机器学习实盘分析
第1章 足彩与数据分析 1
1.1 “阿尔法狗”与足彩 1
1.2 案例1-1：可怕的英国足球 3
1.3 关于足彩的几个误区 7
1.4 足彩·大事件 8
1.5 大数据图灵（足彩）原则 10
1.6 主要在线彩票资源 11
1.7 主要在线足彩数据源 15
1.8 足彩基础知识 17
1.9 学习路线图 18
第2章 开发环境 19
2.1 数据分析首选Python 19
2.1.1 大数据，why Python 19
2.1.2 入门简单，功能强大 21
2.1.3 难度降低90%，性能提高10倍 23
2.1.4 “零对象”编程模式 24
2.2 用户运行平台 25
2.3 程序目录结构 26
2.4 tfbDat足彩数据包 27
2.5 Spyder编辑器界面设置 28
2.5.1 开发环境界面设置 28
2.5.2 代码配色技巧 29
2.5.3 图像显示配置 31
2.5.4 重剑无锋 32
2.6 Notebook模式 34
2.7 模块库控制面板 36
2.7.1 模块库资源 37
2.7.2 模块库维护更新 37
2.7.3 系统关联 38
2.8 使用pip命令更新模块库 39
2.8.1 pip常用命令 39
2.8.2 进入Python命令行模式 41
2.8.3 pip安装模板 41
2.8.4 pip参数解释 42
2.8.5 pip-install参数选项 43
第3章 入门案例套餐 45
3.1 案例3-1：第一次编程，“hello,ziwang” 45
3.1.1 简单调试 46
3.1.2 控制台复位 47
3.2 案例3-2：增强版“hello,ziwang” 47
3.3 案例3-3：列举系统模块库清单 49
3.4 案例3-4：常用绘图风格 50
3.5 案例3-5：Pandas常用绘图风格 52
3.6 案例3-6：常用颜色表cors 53
第4章 足彩量化分析系统 55
4.1 功能简介 55
4.1.1 目录结构 56
4.1.2 TFB安装与更新 56
4.2 TFB主体框架 57
4.2.1 模块构成 57
4.2.2 Top-Base极宽基础模块库 57
4.2.3 Top-Football极宽足彩专业模块库 58
4.2.4 tfbDat极宽足彩数据包 59
4.2.5 量化系统模块构成 60
4.2.6 案例4-1：赔率文件切割 61
4.2.7 案例4-2：批量切割数据文件 64
4.3 tfbDat数据结构 66
4.3.1 案例4-3：tfb数据格式 67
4.3.2 gid基本比赛数据格式 67
4.3.3 xdat赔率数据格式 69
4.4 足彩基本数据分析 73
4.4.1 案例4-4：比赛数据基本图表分析 73
4.4.2 案例4-5：比赛数据进阶图表分析 77
4.4.3 案例4-6：比赛数据年度图表分析 80
4.4.4 案例4-7：比赛数据时间细分图表分析 81
4.5 胜、平、负数据分析 88
4.5.1 案例4-8：胜、平、负数据分析 88
4.5.2 @修饰符 88
4.5.3 胜、平、负分析 90
4.6 赔率数据分析 91
4.6.1 案例4-9：赔率分析 91
4.6.2 扩充dr_gid_top10绘图函数 92
4.6.3 赔率对比 93
第5章 常用数据分析工具 96
5.1 Pandas数据分析软件 96
5.1.1 Pandas简介 96
5.1.2 案例5-1：Pandas常用统计功能 99
5.2 科学计算 104
5.3 人工智能 105
5.4 NLTK语义分析 107
5.5 数据清洗统计分析 109
5.6 数据可视化 109
第6章 辅助工具 114
6.1 性能优化 114
6.1.1 Numexpr矢量加速库 115
6.1.2 Numba支持GPU的加速模块库 115
6.1.3 Blaze大数据优化模块库 115
6.1.4 Pyston加速模块 116
6.1.5 PyPy加速模块 116
6.1.6 Cython 116
6.1.7 其他优化技巧 117
6.2 网页信息抓取 117
6.2.1 Requests人性化的网络模块 118
6.2.2 Scrapy网页爬虫框架 118
6.2.3 Beautiful Soup 4 119
6.3 其他工具模块 120
6.3.1 Logging日志模块 120
6.3.2 Debug调试工具 121
6.3.3 re正则表达式 121
6.3.4 并行编程 122
6.4 网络辅助资源 123
6.5 arrow优雅简捷的时间模块库 125
6.5.1 案例6-1：arrow入门案例 126
6.5.2 创建arrow时间对象 128
6.5.3 创建时间戳 128
6.5.4 arrow属性 129
6.5.5 replace替换和shift位移 130
6.5.6 format格式化参数 130
6.5.7 时间转换 131
6.5.8 短命令 131
6.5.9 人性化 131
6.5.10 范围和跨度 132
6.5.11 工厂模式 133
6.5.12 Token特殊字符 133
第7章 网络足彩数据抓取 135
7.1 500彩票网站数据接口的优势 135
7.1.1 案例7-1：抓取赔率数据网页 136
7.1.2 网页数据实战操作技巧 139
7.2 网页解析的心灵鸡汤 141
7.2.1 BS4四大要素三缺一 142
7.2.2 Tag标签对象 142
7.2.3 案例7-2：Tag标签对象 142
7.2.4 案例7-3：Tag标签对象数据类型 145
7.2.5 NavigableString导航字符串 149
7.2.6 BeautifulSoup复合对象 149
7.2.7 Comment注释对象 150
7.2.8 案例7-4：BS4查找匹配功能 150
7.2.9 BS4节点遍历功能 154
7.3 足彩基本数据抓取 155
7.3.1 案例7-5：分析网页比赛数据 155
7.3.2 案例7-6：提取网页比赛数据 157
7.3.3 gid比赛基本数据结构 159
7.3.4 案例7-7：提取比赛得分 161
7.3.5 案例7-8：提取球队id编码 164
7.3.6 案例7-9：抓取历年比赛数据 167
7.3.7 案例7-10：流程图工具与Python 171
7.3.8 实盘技巧 172
7.3.9 案例7-11：进程池并发运行 174
7.4 批量抓取足彩网页数据实盘教程 177
7.4.1 案例7-12：批量抓取赔率数据 177
7.4.2 fb_gid_getExt扩展网页下载函数 178
7.4.3 bars节点数据包与pools彩票池 178
7.4.4 抓取扩展网页 180
7.5 足彩赔率数据抓取 181
7.5.1 gid与赔率数据网页 181
7.5.2 案例7-13：提取赔率数据 184
7.5.3 赔率数据与结构化数据 186
7.5.4 瀑布流数据网页与小数据理论 189
第8章 足彩数据回溯测试 191
8.1 TFB系统构成 192
8.1.1 TFB系统模块结构 192
8.1.2 Top-Base极宽基础模块库 192
8.1.3 Top-Football极宽足彩专业模块库 193
8.2 实盘数据更新 194
8.2.1 案例8-1：实盘数据更新 194
8.2.2 实盘要点：冗余 195
8.2.3 实盘要点：耐心 196
8.2.4 实盘要点：数据文件 197
8.2.5 main_get函数 197
8.3 变量初始化 199
8.3.1 全局变量与类定义 201
8.3.2 彩票池内存数据库 202
8.3.3 案例8-2：内存数据库&数据包 204
8.4 回溯测试 205
8.4.1 案例8-3：回溯 206
8.4.2 main_bt回溯主入口 207
8.4.3 案例8-4：实盘回溯 209
8.4.4 彩票池与统计池 211
8.4.5 poolTrd下单交易数据 212
8.4.6 poolRet回报记录数据 213
8.4.7 实盘足彩推荐分析 214
8.4.8 实盘回报分析 214
8.4.9 全数据分析与足彩数据集 215
8.5 bt_main回溯主函数 216
8.5.1 bt_1dayMain单日回溯函数 218
8.5.2 赔率数据合并函数 219
8.5.3 单日回报分析函数 220
8.5.4 单日回报分析 221
8.5.5 单场比赛回报分析 223
8.6 sta01策略的大数据分析 224
8.6.1 一号策略函数 226
8.6.2 超过100%的盈利策略与秘诀 227
8.6.3 统计分析 228
8.6.4 回溯时间测试 229
8.6.5 bt_main_ret总回报分析 230
第9章 参数智能寻优 232
9.1 一元参数寻优 233
9.1.1 案例9-1：一号策略参数寻优 233
9.1.2 一元测试函数 234
9.1.3 测试结果数据格式 236
9.1.4 案例9-2：一元参数图表分析 237
9.2 策略函数扩展 241
9.2.1 扩展一号策略函数 241
9.2.2 案例9-3：一号扩展策略 242
9.2.3 案例9-4：sta10策略 244
9.3 二元参数寻优 246
9.3.1 案例9-5：sta10参数寻优 246
9.3.2 案例9-6：二元参数图表分析 248
9.4 策略310准多因子策略 252
9.4.1 案例9-7：数据预处理 254
9.4.2 案例9-8：策略310参数寻优 257
9.4.3 案例9-9：策略310图表分析 259
9.4.4 案例9-10：策略310 264
第10章 Python人工智能入门与实践 266
10.1 从忘却开始 266
10.2 Iris经典爱丽丝 269
10.2.1 案例10-1：经典爱丽丝 270
10.2.2 案例10-2：爱丽丝进化与矢量化文本 272
10.3 AI操作流程 273
10.3.1 机器学习与测试数据集合 274
10.3.2 机器学习运行流程 274
10.3.3 经典机器学习算法 275
10.3.4 黑箱大法 275
10.3.5 数据切割函数 276
10.3.6 案例10-3：爱丽丝分解 277
10.3.7 案例10-4：线性回归算法 281
第11章 机器学习经典算法案例（上） 286
11.1 线性回归 286
11.2 逻辑回归算法 293
11.2.1 案例11-1：逻辑回归算法 294
11.3 朴素贝叶斯算法 296
11.3.1 案例11-2：贝叶斯算法 297
11.4 KNN近邻算法 299
11.4.1 案例11-3：KNN近邻算法 301
11.5 随机森林算法 302
11.5.1 案例11-4：随机森林算法 306
第12章 机器学习经典算法案例（下） 308
12.1 决策树算法 308
12.1.1 案例12-1：决策树算法 310
12.2 GBDT迭代决策树算法 311
12.2.1 案例12-2：GBDT迭代决策树算法 312
12.3 SVM向量机 313
12.3.1 案例12-3：SVM向量机算法 315
12.4 SVM-cross向量机交叉算法 316
12.4.1 案例12-4：SVM-cross向量机交叉算法 317
12.5 神经网络算法 318
12.5.1 经典神经网络算法 319
12.5.2 Sklearn神经网络算法 320
12.5.3 人工智能学习路线图 320
12.5.4 案例12-5：MLP神经网络算法 321
12.5.5 案例12-6：MLP_reg神经网络回归算法 323
第13章 机器学习组合算法 326
13.1 CCPP数据集 326
13.1.1 案例13-1：CCPP数据集 327
13.1.2 案例13-2：CCPP数据切割 328
13.1.3 数据切割函数 330
13.1.4 案例13-3：读取CCPP数据集 331
13.1.5 数据读取函数 333
13.2 机器学习统一接口函数 334
13.2.1 案例13-4：机器学习统一接口 334
13.2.2 统一接口函数 336
13.2.3 机器学习算法代码 338
13.2.4 效果评估函数 339
13.2.5 常用评测指标 340
13.3 批量调用机器学习算法 341
13.3.1 案例13-5：批量调用 341
13.3.2 批量调用算法模型 344
13.4 一体化调用 345
13.4.1 案例13-6：一体化调用 345
13.4.2 一体化调用函数 346
13.5 模型预制与保存 348
13.5.1 案例13-7：储存算法模型 348
13.5.2 模型保存函数 350
13.5.3 模型预测函数 350
13.5.4 案例13-8：批量储存算法模型 351
13.5.5 批量模型储存函数 353
13.5.6 案例13-9：批量加载算法模型 353
13.6 机器学习组合算法 357
13.6.1 案例13-10：机器学习组合算法 357
13.6.2 机器学习组合算法函数 359
第14章 足彩机器学习模型构建 361
14.1 数据整理 361
14.1.1 案例14-1：赔率数据合成 362
14.1.2 案例14-2：按年切割赔率数据 365
14.1.3 案例14-3：累计切割赔率数据 365
14.2 年度足彩赔率模型 366
14.2.1 案例14-4：2016年度足彩赔率模型组 367
14.2.2 案例14-5：年度多字段足彩赔率模型组 370
14.3 累计足彩赔率模型 373
14.3.1 案例14-6：累计2016足彩赔率模型组 373
14.3.2 案例14-7：累计多字段足彩赔率模型组 376
14.3.3 足彩算法模型文件 379
第15章 足彩机器学习模型验证 381
15.1 年度赔率模型验证 381
15.1.1 案例15-1：年度赔率模型验证 381
15.1.2 案例15-2：多字段年度赔率模型验证 383
15.2 累计赔率模型验证 385
15.2.1 案例15-3：累计赔率模型验证 385
15.2.2 案例15-4：多字段累计赔率模型验证 386
15.3 年度组合模型验证 388
15.3.1 案例15-5：年度组合模型验证 388
15.3.2 案例15-6：多字段年度组合模型验证 391
15.3.3 案例15-7：全字段年度组合模型验证 391
15.3.4 年度组合模型测试数据对比分析 392
15.4 累计组合模型验证 393
15.4.1 案例15-8：年度组合模型验证 393
15.4.2 案例15-9：多字段年度组合模型验证 394
15.4.3 累计组合模型测试数据对比分析 394
第16章 结果数据分析 397
16.1 神秘的df9 397
16.1.1 案例16-1：调试模式 397
16.1.2 神秘的df9结果数据变量 400
16.2 盈利率分析 402
16.2.1 案例16-2：盈利率计算 402
第17章 机器学习足彩实盘分析 407
17.1 回溯主入口 408
17.1.1 案例17-1：策略sta01 409
17.1.2 结果文件解读 409
17.1.3 数据字段分析 411
17.2 机器学习与回溯分析 412
17.2.1 案例17-2：Log回归策略足彩分析 414
17.2.2 Log回归策略函数 415
17.2.3 案例17-3：30天Log回归策略足彩分析 418
17.2.4 数据文件分析 420
17.2.5 足彩推荐 421
17.3 进一步深入 421
附录A Sklearn常用模块和函数 423
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>零起点Python足彩大数据与机器学习实盘分析
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通Python 3程式設計 (第二版)
序
第1章 程序編程快速入門
Python程式的建立與執行
Python的「內在美」
第2章 資料型態
識別字與關鍵字
整數型態
浮點數型態
字串
第3章 群集資料型態
序列型態
集合型態
映射型態
群集的迭代與複製
第4章 控制結構與函式
控制結構
例外處理
自定義函式
第5章 模組
模組與套件
概述Python的標準程式庫
第6章 物件導向編程
物件導向方法
自定義類別
自定義群集類別
第7章 檔案的處理
二元資料的讀與寫
文字檔案的讀與寫
XML檔案的讀與寫
二元檔案的隨機存取
第8章 進階的編程技術
程序編程進階
物件導向編程進階
函數風格編程
第9章 除錯、測試與概要分析
除錯
單元測試
概要分析
第10章 行程與執行緒
使用多元處理模組
使用threading模組
第11章 連網
建立一個TCP用戶端
建立一個TCP伺服器
第12章 資料庫編程
DBM資料庫
SQL資料庫
第13章 正規運算式
Python的正規運算式語言
正規運算式模組
第14章 剖析簡介
BNF語法和剖析術語
親手打造剖析器
以PyParsing進行Python化剖析
以PLY進行Lex/Yacc風格剖析
第15章 GUI編程簡介
對話框風格程式
主視窗風格程式
後記
參考書目
索引
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通Python 3程式設計 (第二版)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>树莓派Python编程入门与实战
目录
第一部分 树莓派编程环境
第1章 配置树莓派 3
1.1 获取树莓派 3
1.1.1 了解树莓派的历史 3
1.1.2 为什么要学习用Python在树莓派上进行编程 4
1.2 获取树莓派 5
1.3 哪些树莓派外围设备是必须的 6
1.3.1 microSD卡 6
1.3.2 电源 7
1.3.3 显示输出 8
1.3.4 键盘和鼠标 9
1.3.5 使用网线或者Wi—Fi适配器 9
1.4 其他不错的外围设备 9
1.4.1 挑选一个外壳 10
1.4.2 移动电源 10
1.4.3 自供电USB集线器 11
1.5 决定如何购买外围设备 11
1.6 让你的树莓派正常工作 11
1.6.1 自己研究一下 11
1.6.2 安装软件 12
1.6.3 下载操作系统 12
1.6.4 移动NOOBS 13
1.6.5 连接外围设备 13
1.7 排除树莓派的故障 15
1.7.1 检查外设连接线 15
1.7.2 检查microSD卡 16
1.7.3 检查NOOBS的副本 16
1.7.4 检查显示器 16
1.7.5 检查你的外设 17
1.8 小结 17
1.9 Q&A 17
1.10 练习 17
1.10.1 问题 17
1.10.2 答案 18
第2章 认识RaspbianLinux发行版 19
2.1 了解Linux 19
2.2 使用Raspbian命令行 20
2.3 使用Raspbian图形用户界面 23
2.4 LXDE图形界面 24
LXPanel 25
2.5 小结 29
2.6 Q&A 29
2.7 练习 29
2.7.1 问题 29
2.7.2 答案 30
第3章 搭建编程环境 31
3.1 探索Python 31
3.1.1 Python简史 31
3.1.2 Pythonv3和Pythonv232
3.2 检查你的Python环境 32
3.2.1 检查Python解释器和交互式shell 32
3.2.2 检查Python开发环境 33
3.2.3 检查文本编辑器 33
3.3 安装Python和工具 34
检查键盘 34
3.4 关于Python解释器 35
3.5 关于Python交互式shell 36
3.6 关于Python开发环境shell 38
IDLE开发环境shell 39
3.7 创建Python脚本 42
3.7.1 在交互式shell中运行Python脚本 43
3.7.2 在IDLE中运行Python脚本 43
3.7.3 使用IDLE创建一个脚本 44
3.7.4 使用文本编辑器创建一个Python脚本 45
3.8 使用适当的工具 46
3.9 小结 47
3.10 Q&A 47
3.11 练习 47
3.11.1 问题 47
3.11.2 答案 48
第二部分 Python编程基础
第4章 Python基础 51
4.1 Python脚本的输出 51
4.1.1 探索print函数 51
4.1.2 使用字符作为print的参数 52
4.1.3 格式化print函数的输出 53
4.1.4 使用转义序列控制输出 54
4.1.5 好玩的东西 55
4.2 格式化脚本 56
4.2.1 长文本行 56
4.2.2 创建注释 57
4.3 理解Python变量 58
4.3.1 Python关键字 58
4.3.2 创建Python变量名 59
4.4 给Python变量赋值 59
4.4.1 格式化变量和字符串输出 60
4.4.2 避免使用未赋值的变量 61
4.4.3 将长字符串赋值给变量 61
4.4.4 给变量赋予更多类型的值 62
4.4.5 给变量重新赋值 62
4.5 关于Python数据类型 63
4.6 获取用户输入 64
4.7 小结 69
4.8 Q&A 69
4.9 练习 69
4.9.1 问题 69
4.9.2 答案 70
第5章 在程序中使用算术 71
5.1 使用数学运算符 71
5.1.1 Python数学操作符 71
5.1.2 运算符的优先级 73
5.1.3 在数学运算中使用变量 74
5.1.4 浮点数的精度 75
5.1.5 显示数字 75
5.1.6 运算符缩写 76
5.2 使用分数进行计算 76
5.2.1 分数对象 76
5.2.2 分数操作 77
5.3 使用复数 77
5.3.1 创建复数 77
5.3.2 复数运算 78
5.4 math模块的高级功能 78
5.4.1 数值函数 79
5.4.2 幂和对数函数 79
5.4.3 三角函数 80
5.4.4 双曲函数 80
5.4.5 统计数学函数 81
5.5 使用NumPy数学库 81
5.5.1 NumPy数据类型 81
5.5.2 创建NumPy数组 82
5.5.3 使用NumPy数组 83
5.6 小结 83
5.7 Q&A 84
5.8 练习 84
5.8.1 问题 84
5.8.2 答案 85
第6章 控制你的程序 86
6.1 使用if语句 86
6.2 组合多条语句 87
6.3 通过else语句添加其他条件 89
6.4 使用elif添加更多的条件 91
6.5 在Python中比较值 93
6.5.1 数字比较 93
6.5.2 字符串比较 94
6.5.3 布尔值比较 95
6.5.4 评估函数返回值 95
6.6 检查复杂的条件 97
6.6.1 使用逻辑运算符 97
6.6.2 组合条件检查 97
6.7 对条件检查取反 98
6.8 小结 98
6.9 Q&A 99
6.10 练习 99
6.10.1 问题 99
6.10.2 答案 100
第7章 循环 102
7.1 执行重复的任务 102
7.2 使用for循环进行迭代 102
7.2.1 遍历列表中的数字 103
7.2.2 注意一些“陷阱” 104
7.2.3 由值指定的数据类型 105
7.2.4 遍历字符串列表 106
7.2.5 使用变量进行遍历 107
7.2.6 使用range函数进行迭代 107
7.3 使用while循环 111
7.3.1 使用数字条件来进行迭代 111
7.3.2 使用字符串作为判断条件进行遍历 112
7.3.3 使用whileTrue 113
7.4 创建嵌套循环 116
7.5 小结 117
7.6 Q&A 117
7.7 练习 118
7.7.1 问题 118
7.7.2 答案 118
第三部分 高级Python知识
第8章 使用列表和元组 123
8.1 关于元组 123
8.1.1 创建元组 123
8.1.2 访问元组中的数据 124
8.1.3 访问一个范围内的值 125
8.1.4 使用元组 125
8.2 关于列表 127
8.2.1 创建一个列表 127
8.2.2 从列表中获取数据 128
8.2.3 使用列表 128
8.3 使用多维列表存储数据 133
8.4 在脚本中使用列表和元组 133
8.4.1 遍历一个列表或元组 133
8.4.2 排序和倒序 134
8.5 使用列表解析创建列表 134
8.6 关于range类型 135
8.7 小结 136
8.8 Q&A 136
8.9 练习 136
8.9.1 问题 136
8.9.2 答案 137
第9章 字典和集合 138
9.1 理解Python字典 138
9.2 字典基础 139
9.2.1 创建一个字典 139
9.2.2 填充字典 139
9.2.3 获取字典中的数据 140
9.2.4 更新一个字典 142
9.2.5 管理一个字典 143
9.3 用字典编程 143
9.4 理解Python集合 148
9.5 集合基础 149
填充集合 149
9.6 从集合获取信息 150
9.6.1 集合成员 150
9.6.2 并集 150
9.6.3 交集 151
9.6.4 差集 151
9.6.5 对称差集 152
9.6.6 遍历集合 152
9.7 修改一个集合 153
9.8 用集合编程 154
9.9 小结 157
9.10 Q&A 157
9.11 练习 157
9.11.1 问题 157
9.11.2 答案 158
第10章 使用字符串 159
10.1 字符串的基础知识 159
10.1.1 字符串格式 159
10.1.2 创建字符串 160
10.1.3 处理字符串 161
10.2 使用函数操作字符串 162
10.2.1 改变字符串值 162
10.2.2 分割字符串 163
10.2.3 连接字符串 163
10.2.4 测试字符串 164
10.2.5 查找字符串 165
10.3 格式化字符串输出 166
10.3.1 format（）函数 167
10.3.2 格式化数字 168
10.4 小结 170
10.5 Q&A 171
10.6 练习 171
10.6.1 问题 171
10.6.2 答案 171
第11章 使用文件 173
11.1 理解Linux文件结构 173
看一下Linux目录 174
11.2 通过Python管理文件和目录 175
11.3 打开文件 176
11.3.1 指定打开模式 177
11.3.2 使用文件对象方法 178
11.4 读取文件 179
11.4.1 读取整个文件 179
11.4.2 逐行读取文件 180
11.4.3 不按顺序读取文件 181
11.5 关闭一个文件 185
11.6 写文件 185
11.6.1 创建并且写入一个新文件 185
11.6.2 写入到已有的文件 188
11.7 小结 190
11.8 Q&A 190
11.9 练习 190
11.9.1 问题 190
11.9.2 答案 191
第12章 创建函数 192
12.1 在程序中使用Python函数 192
12.1.1 创建函数 193
12.1.2 使用函数 193
12.2 返回值 195
12.3 给函数传值 196
12.3.1 传递参数 196
12.3.2 设置参数的默认值 198
12.3.3 处理可变数量的参数 199
12.3.4 使用字典检索值 200
12.4 在函数中处理变量 201
12.4.1 局部变量 201
12.4.2 全局变量 202
12.5 在函数中使用列表 203
12.6 递归函数 204
12.7 小结 205
12.8 Q&A 205
12.9 练习 206
12.9.1 问题 206
12.9.2 答案 206
……
第13章 使用模块 207
第14章 探索面向对象编程的世界 224
第15章 使用继承 237
第16章 正则表达式 257
第17章 异常处理 274
第四部分 图形化编程
第18章 GUI编程 295
第19章 游戏编程 315
第五部分 业务编程
第20章 使用网络 341
第21章 在程序中使用数据库 361
第22章 Web编程 379
第六部分 树莓派Python项目
第23章 创建基础的树莓派Python项目 399
第24章 树莓派／Python高级项目 428
第七部分 附录
附录A 将Raspbian操作系统加载到SD卡上 449
附录B 树莓派型号一览 457
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>树莓派Python编程入门与实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>零基础学Python（全彩版）
入门篇
第1章初识Python1
视频讲解：30分钟
精彩实例：2个
e学码：12个
1.1Python概述
1.1.1了解Python
1.1.2Python的版本
1.1.3Python的应用领域
1.2搭建Python开发环境
1.2.1Python开发环境概述
1.2.2安装Python
1.2.3*个Python程序
实例01在命令行窗口中输出“人生苦短，我用Python”
实例02在IDLE中输出“人生苦短，我用Python”
1.3Python开发工具
1.3.1使用自带的IDLE
1.3.2常用的第三方开发工具
1.4难点解答
1.4.1为什么提示“'python'不是内部或外部命令……”
1.4.2如何在Python交互模式中运行.py文件
1.5实战
实战一：输出“人因梦想而伟大”
实战二：输出台阶
实战三：输出个性签名
实例四：打印田字格
1.6小结
第2章Python语言基础
视频讲解：1小时28分钟
精彩实例：7个
e学码：14个
2.1Python语法特点
2.1.1注释
2.1.2代码缩进
2.1.3编码规范
2.2保留字与标识符
2.2.1保留字
2.2.2标识符
2.3变量
2.3.1理解Python中的变量
2.3.2变量的定义与使用
2.4基本数据类型
2.4.1数字类型
实例01根据身高、体重计算BMI指数
2.4.2字符串类型
实例02输出007号坦克
2.4.3布尔类型
2.4.4数据类型转换
实例03模拟超市抹零结账行为
2.5运算符
2.5.1算术运算符
实例04计算学生成绩的分差及平均分
2.5.2赋值运算符
2.5.3比较（关系）运算符
实例05使用比较运算符比较大小关系
2.5.4逻辑运算符
实例06参加手机店的打折活动
2.5.5位运算符
2.5.6运算符的优先级
2.6基本输入和输出
2.6.1使用input()函数输入
实例07根据身高、体重计算BMI指数（改进版）
2.6.2使用print()函数输出
2.7实战
实战一：模拟手机充值场景
实战二：绘制《植物大战僵尸》中的石头怪
实战三：根据父母的身高预测儿子的身高
实战四：根据总步数计算消耗的热量值
2.8小结
第3章流程控制语句
视频讲解：54分钟
精彩实例：9个
e学码：4个
3.1程序结构
3.2选择语句
3.2.1最简单的if语句
实例01判断输入的是不是黄蓉所说的数
3.2.2if…else语句
实例02验证瑛姑给出的答案是否正确
3.2.3if…elif…else语句
实例03输出玫瑰花语
3.2.4if语句的嵌套
实例04判断是否为*后驾车
3.3条件表达式
3.4循环语句
3.4.1while循环
实例05助力瑛姑①：while循环版解题法
3.4.2for循环68
实例06助力瑛姑②：while循环版解题法
3.4.3循环嵌套
实例07打印九九乘法表
3.5跳转语句
3.5.1break语句
实例08助力瑛姑③：for循环改进版解题法
3.5.2continue语句
实例09逢七拍腿游戏
3.6pass空语句
3.7实战
实战一：模拟支付宝蚂蚁森林的能量产生过程
实战二：猜数字游戏
实战三：模拟“跳一跳”小游戏的加分块
实战四：模拟查询功能
3.8小结
第4章序列的应用
视频讲解：1小时57分钟
精彩实例：14个
e学码：16个
4.1序列
4.1.1索引（Indexing）
4.1.2切片（Sliceing）
4.1.3序列相加（Adding）
4.1.4乘法（Multiplying）
4.1.5检查某个元素是否是序列的成员
4.1.6计算序列的长度、最大值和最小值
4.2列表（list）
4.2.1列表的创建和删除
4.2.2访问列表元素
实例01输出每日一帖
4.2.3遍历列表
实例02分两列显示2017~2018赛季NBA西部联盟前八名的球队
4.2.4添加、修改和删除列表元素
实例03向NBA名人堂列表中追2018年新进入的球星
4.2.5对列表进行统计和计算
4.2.6对列表进行排序
4.2.7列表推导式
4.2.8二维列表的使用
实例04使用二维列表输出不同版的古诗
4.3元组（tuple）
4.3.1元组的创建和删除
实例05使用元组保存咖啡馆里提的咖啡名称
4.3.2访问元组元素
实例06使用for循环列出咖啡馆里的咖啡名称
实例07分两列显示2017~2018赛季NBA西部联盟前八名球队
4.3.3修改元组元素
实例08将麝香猫咖啡替换为拿铁咖啡
4.3.4元组推导式
4.3.5元组与列表的区别
4.4字典（dictionary）
4.4.1字典的创建和删除
实例09创建一个保存女神星座的字典
4.4.2通过键值对访问字典
实例10根据星座测试性格特点
4.4.3遍历字典
4.4.4添加、修改和删除字典元素
4.4.5字典推导式
实例11应用字典推导式实现根据名字和星座创建一个字典
4.5集合（set）
4.5.1集合的创建
实例12创建保存学生选课信息的集合
4.5.2集合的添加和删除
实例13学生更改选学课程
4.5.3集合的交集、并集和差集运算
实例14对选课集合进行交集、并集和差集运算
4.6列表、元组、字典和集合的区别
4.7实战
实战一：输出“王者荣耀”的游戏角色
实战二：模拟火车订票系统
实战三：电视剧的收视率排行榜
实战四：定制自己的手机套餐
4.8小结
第5章字符串及正则表达式
视频讲解：50分钟
精彩实例：10个
e学码：5个
5.1字符串常用操作
5.1.1拼接字符串
实例01使用字符串拼接输出一个关于程序员的笑话
5.1.2计算字符串的长度
5.1.3截取字符串
实例02截取身份证号码中的出生日期
5.1.4分割、合并字符串
实例03输出被@的好友名称
实例04通过好友列表生成全部被@的好友
5.1.5检索字符串
5.1.6字母的大小写转换
实例05不区分大小写验证会员名是否唯一
5.1.7去除字符串中的空格和特殊字符
5.1.8格式化字符串
实例06格式化不同的数值类型数据
5.2字符串编码转换
5.2.1使用encode()方法编码
5.2.2使用decode()方法解码
5.3正则表达式
5.3.1行定位符
5.3.2元字符
5.3.3限定符
5.3.4字符类
5.3.5排除字符
5.3.6选择字符
5.3.7转义字符
5.3.8分组
5.3.9在Python中使用正则表达式语法
5.4使用re模块实现正则表达式操作
5.4.1匹配字符串
实例07验证输入的手机号码是否为中国移动的号码
实例08验证是否出现危险字符
5.4.2替换字符串
实例09替换出现的危险字符
5.4.3使用正则表达式分割字符串
实例10输出被@的好友名称（应用正则表达式）
5.5实战
实战一：打印象棋口诀
实战二：判断车牌归属地
实战三：模拟抢红包
实战四：显示实时天气预报
5.6小结
进阶篇
第6章函数
视频讲解：57分钟
精彩实例：6个
e学码：2个
6.1函数的创建和调用
6.1.1创建一个函数
6.1.2调用函数
实例01输出每日一帖（共享版）
6.2参数传递
6.2.1了解形式参数和实际参数
实例02根据身高、体重计算BMI指数（共享版）
6.2.2位置参数
6.2.3关键字参数
6.2.4为参数设置默认值
6.2.5可变参数
实例03根据身高、体重计算BMI指数（共享升级版）
6.3返回值
实例04模拟结账功能—计算实付金额
6.4变量的作用域
6.4.1局部变量
6.4.2全局变量
实例05一棵松树的梦
6.5匿名函数（lambda）
实例06应用lambda实现对爬取到的秒杀商品信息进行排序
6.6实战
实战一：导演为剧本选主角
实战二：模拟美团外卖商家的套餐
实战三：根据生日判断星座
实战四：将美元转换为人民币
6.7小结
第7章面向对象程序设计
视频讲解：1小时
精彩实例：5个
e学码：3个
7.1面向对象概述
7.1.1对象
7.1.2类
7.1.3面向对象程序设计的特点
7.2类的定义和使用
7.2.1定义类
7.2.2创建类的实例
7.2.3创建__init__()方法
7.2.4创建类的成员并访问
实例01创建大雁类并定义飞行方法
实例02通过类属性统计类的实例个数
7.2.5访问限制
7.3属性（property）
7.3.1创建用于计算的属性
7.3.2为属性添加安全保护机制
实例03在模拟电影点播功能时应用属性
7.4继承
7.4.1继承的基本语法
实例04创建水果基类及其派生类
7.4.2方法重写
7.4.3派生类中调用基类的__init__()方法
实例05在派生类中调用基类的__init__()方法定义类属性
7.5实战
实战一：修改手机默认语言
实战二：给信用卡设置默认密码
实战三：打印每月销售明细
实战四：模拟电影院的自动售票机选票页面
7.6小结
第8章模块
视频讲解：46分钟
精彩实例：4个
e学码：5个
8.1模块概述
8.2自定义模块
8.2.1创建模块
实例01创建计算BMI指数的模块
8.2.2使用import语句导入模块
8.2.3使用from…import语句导入模块
实例02导入两个包括同名函数的模块
8.2.4模块搜索目录
8.3以主程序的形式执行
8.4Python中的包
8.4.1Python程序的包结构
8.4.2创建和使用包
实例03在指定包中创建通用的设置和获取尺寸的模块
8.5引用其他模块
8.5.1导入和使用标准模块
实例04生成由数字、字母组成的4位验证码
8.5.2第三方模块的下载与安装
8.6实战
实战一：大乐透号码生成器
实战二：春节集五福
实战三：封装用户的上网行为
实战四：计算个人所得税
8.7小结
第9章异常处理及程序调试
视频讲解：33分钟
精彩实例：4个
e学码：3个
9.1异常概述
实例01模拟幼儿园分苹果
9.2异常处理语句
9.2.1try…except语句
实例02模拟幼儿园分苹果（除数不能为0）
9.2.2try…except…else语句
9.2.3try…except…f?inally语句
9.2.4使用raise语句抛出异常
实例03模拟幼儿园分苹果（每个人至少分到一个苹果）
9.3程序调试2
9.3.1使用自带的IDLE进行程序调试
9.3.2使用assert语句调试程序
实例04模拟幼儿园分苹果（应用断言调试）
9.4小结
第10章文件及目录操作
视频讲解：1小时05分钟
精彩实例：6个
e学码：3个
10.1基本文件操作
10.1.1创建和打开文件
实例01创建并打开记录蚂蚁庄园动态的文件
10.1.2关闭文件
10.1.3打开文件时使用with语句
10.1.4写入文件内容
实例02向蚂蚁庄园的动态文件写入一条信息
10.1.5读取文件
实例03显示蚂蚁庄园的动态
实例04逐行显示蚂蚁庄园的动态
10.2目录操作
10.2.1os和os.path模块
10.2.2路径
10.2.3判断目录是否存在
10.2.4创建目录
10.2.5删除目录
10.2.6遍历目录
实例05遍历指定目录
10.3高级文件操作
10.3.1删除文件
10.3.2重命名文件和目录
10.3.3获取文件基本信息
实例06获取文件基本信息
10.4实战
实战一：根据当前时间创建文件
实战二：批量添加文件夹
10.5小结
第11章使用Python操作数据库
视频讲解：50分钟
精彩实例：8个
e学码：5个
11.1数据库编程接口
11.1.1连接对象
11.1.2游标对象
11.2使用SQLite
11.2.1创建数据库文件
实例01创建SQLite数据库文件
11.2.2操作SQLite
实例02新增用户数据信息
实例03使用3种方式查询用户数据信息
实例04修改用户数据信息
实例05删除用户数据信息
11.3使用MySQL
11.3.1下载安装MySQL
11.3.2安装PyMySQL
11.3.3连接数据库
实例06使用PyMySQL连接数据库
11.3.4创建数据表
实例07创建books图书表
11.3.5操作MySQL数据表
实例08向books图书表添加图书数据
11.4实战
实战一：获取指定数据表中的信息
实战二：查找指定年份之后的图书信息
实战三：批量删除指定的图书信息
11.5小结
高级篇
第12章GUI界面编程
视频讲解：50分钟
精彩实例：5个
e学码：6个
12.1初识GUI
12.1.1什么是GUI
12.1.2常用的GUI框架
12.1.3安装wxPython
12.2创建应用程序
12.2.1创建一个wx.App的子类
12.2.2直接使用wx.App
12.2.3使用wx.Frame框架
12.3常用控件
12.3.1StaticText文本类
实例01使用wx.StaticText输出Python之禅
12.3.2TextCtrl输入文本类
实例02使用wx.TextCtrl实现登录界面
12.3.3Button按钮类
实例03为登录界面添加“确认”和“取消”按钮
12.4BoxSizer布局
12.4.1什么是BoxSizer
12.4.2使用BoxSizer布局
实例04使用BoxSizer设置登录界面布局
12.5事件处理
12.5.1什么是事件
12.5.2绑定事件
实例05使用事件判断用户登录
12.6小结
第13章Pygame游戏编程
视频讲解：1小时
精彩实例：1个
e学码：4个
13.1初识Pygame
13.1.1安装Pygame
13.1.2Pygame常用模块
13.2Pygame的基本应用
实例01制作一个跳跃的小球游戏
13.3开发FlappyBird游戏
13.3.1游戏简介
13.3.2游戏分析
13.3.3搭建主框架
13.3.4创建小鸟类
13.3.5创建管道类
13.3.6计算得分
13.3.7碰撞检测
13.4小结
第14章网络爬虫开发
视频讲解：1小时30分钟
e学码：20个
14.1网络爬虫概述
14.2网络爬虫的常用技术
14.2.1Python的网络请求
14.2.2请求headers处理
14.2.3网络超时
14.2.4代理服务
14.2.5HTML解析之BeautifulSoup
14.3网络爬虫开发常用框架
14.3.1Scrapy爬虫框架
14.3.2Crawley爬虫框架
14.3.3PySpider爬虫框架
14.4实战项目：快手爬票
14.4.1快手爬票概述
14.4.2搭建QT环境
14.4.3主窗体设计
14.4.4分析网页请求参数
14.4.5下载站名文件
14.4.6车票信息的请求与显示
14.5小结
第15章Web编程
视频讲解：30分钟
精彩实例：2个
e学码：15个
15.1Web基础
15.1.1HTTP协议
15.1.2Web服务器
15.1.3前端基础
15.1.4静态服务器
实例01创建“明日学院”网站静态服务器
15.2WSGI接口
15.2.1CGI简介
15.2.2WSGI简介
15.2.3定义WSGI接口
15.2.4运行WSGI服务
实例02创建“明日学院”网站课程页面
15.3小结
第16章常用Web框架
视频讲解：1小时
精彩实例：4个
e学码：8个
16.1Web框架简介
16.1.1什么是Web框架
16.1.2Python常用的Web框架
16.2Flask框架的使用
16.2.1安装虚拟环境
16.2.2安装Flask
16.2.3*个Flask程序
实例01输出“HelloWorld!”
16.2.4开启调试模式
16.2.5路由
实例02根据参数输出相应信息
实例03使用url_for()函数获取URL信息
16.2.6静态文件
16.2.7模板
实例04渲染模板
16.3Django框架的使用
16.3.1安装DjangoWeb框架
16.3.2创建一个Django项目
16.3.3创建APP
16.3.4数据模型(models)
16.3.5管理后台
16.3.6路由(urls)
16.3.7表单(forms)
16.3.8视图(views)
16.3.9Django模板
16.4小结
实战篇
第17章智慧星答题测试系统
（Django框架+Bootstrap+MySQL+Redis实现）
视频讲解：1小时20分钟
e学码：6个
17.1系统功能设计
17.1.1了解项目整体开发流程
17.1.2系统功能结构
17.1.3系统业务流程
17.1.4系统预览
17.2系统开发必备
17.2.1系统开发环境
17.2.2文件夹组织结构
17.3数据库设计
17.3.1数据库概要说
17.3.2数据表模型
17.4用户登录模块设计
17.4.1用户登录模块概述
17.4.2使用Django默认授权机制实现普通登录
17.4.3基于Oauth2.0的登录的实现
17.4.4机构注册功能的实现
17.5核心答题功能的设计
17.5.1答题首页设计
17.5.2比赛详情页面
17.5.3答题功能的实现
17.5.4提交答案
17.5.5批量录入题库
17.6小结
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>零基础学Python（全彩版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Flask Web开发实战
第1章 初识Flask
1.1 搭建开发环境
1.1.1 Pipenv工作流
1.1.2 安装Flask
1.1.3 集成开发环境
1.2 Hello, Flask!
1.2.1 创建程序实例
1.2.2 注册路由
1.3 启动开发服务器
1.3.1 Run，Flask，Run！
1.3.2 更多的启动选项
1.3.3 设置运行环境
1.4 Python Shell
1.5 Flask扩展
1.6 项目配置
1.7 URL与端点
1.8 Flask命令
1.9 模板与静态文件
1.10 Flask与MVC架构
1.11 本章小结

第2章 Flask与HTTP
2.1 请求响应循环
2.2 HTTP请求
2.2.1 请求报文
2.2.2 Request对象
2.2.3 在Flask中处理请求
2.2.4 请求钩子
2.3 HTTP响应
2.3.1 响应报文
2.3.2 在Flask中生成响应
2.3.3 响应格式
2.3.4 来一块Cookie
2.3.5 session：安全的Cookie
2.4 Flask上下文
2.4.1 上下文全局变量
2.4.2 激活上下文
2.4.3 上下文钩子
2.5 HTTP进阶实践
2.5.1 重定向回上一个页面
2.5.2 使用AJAX技术发送异步请求
2.5.3 HTTP服务器端推送
2.5.4 Web安全防范
2.6 本章小结

第3章 模板
3.1 模板基本用法
3.1.1 创建模板
3.1.2 模板语法
3.1.3 渲染模板
3.2 模板辅助工具
3.2.1 上下文
3.2.2 全局对象
3.2.3 过滤器
3.2.4 测试器
3.2.5 模板环境对象
3.3 模板结构组织
3.3.1 局部模板
3.3.2 宏
3.3.3 模板继承
3.4 模板进阶实践
3.4.1 空白控制
3.4.2 加载静态文件
3.4.3 消息闪现
3.4.4 自定义错误页面
3.4.5 JavaScript和CSS中的Jinja2
3.5 本章小结

第4章 表单
4.1 HTML表单
4.2 使用Flask-WTF处理表单
4.2.1 定义WTForms表单类
4.2.2 输出HTML代码
4.2.3 在模板中渲染表单
4.3 处理表单数据
4.3.1 提交表单
4.3.2 验证表单数据
4.3.3 在模板中渲染错误消息
4.4 表单进阶实践
4.4.1 设置错误消息语言
4.4.2 使用宏渲染表单
4.4.3 自定义验证器
4.4.4 文件上传
4.4.5 使用Flask-CKEditor集成富文本编辑器
4.4.6 单个表单多个提交按钮
4.4.7 单个页面多个表单
4.5 本章小结

第5章 数据库
5.1 数据库的分类
5.1.1 SQL
5.1.2 NoSQL
5.1.3 如何选择？
5.2 ORM魔法
5.3 使用Flask-SQLAlchemy管理数据库
5.3.1 连接数据库服务器
5.3.2 定义数据库模型
5.3.3 创建数据库和表
5.4 数据库操作
5.4.1 CRUD
5.4.2 在视图函数里操作数据库
5.5 定义关系
5.5.1 配置Python Shell上下文
5.5.2 一对多
5.5.3 多对一
5.5.4 一对一
5.5.5 多对多
5.6 更新数据库表
5.6.1 重新生成表
5.6.2 使用Flask-Migrate迁移数据库
5.6.3 开发时是否需要迁移？
5.7 数据库进阶实践
5.7.1 级联操作
5.7.2 事件监听
5.8 本章小结

第6章 电子邮件
6.1 使用Flask-Mail发送电子邮件
6.1.1 配置Flask-Mail
6.1.2 构建邮件数据
6.1.3 发送邮件
6.2 使用事务邮件服务SendGird
6.2.1 注册SendGird
6.2.2 SendGrid SMTP转发
6.2.3 SendGrid Web API转发
6.3 电子邮件进阶实践
6.3.1 提供HTML正文
6.3.2 使用Jinja2模板组织邮件正文
6.3.3 异步发送邮件
6.4 本章小结
第二部分 实战篇

第7章 留言板
7.1 使用包组织代码
7.1.1 配置文件
7.1.2 创建程序实例
7.2 Web程序开发流程
7.2.1 程序功能设计
7.2.2 前端页面开发
7.2.3 后端程序开发
7.3 使用Bootstrap-Flask简化页面编写
7.3.1 加载资源文件
7.3.2 快捷渲染表单
7.4 使用Flask-Moment本地化日期和时间
7.4.1 本地化前的准备
7.4.2 使用Flask-Moment集成Moment.js
7.4.3 渲染时间日期
7.5 使用Faker生成虚拟数据
7.6 使用Flask-DebugToolbar调试程序
7.7 Flask配置的两种组织形式
7.7.1 环境变量优先
7.7.2 实例文件夹覆盖
7.8 本章小结

第8章 个人博客
8.1 大型项目结构
8.1.1 使用蓝本模块化程序
8.1.2 使用类组织配置
8.1.3 使用工厂函数创建程序实例
8.2 编写程序骨架
8.2.1 数据库
8.2.2 模板
8.2.3 表单
8.2.4 视图函数
8.2.5 电子邮件支持
8.3 编写博客前台
8.3.1 分页显示文章列表
8.3.2 显示文章正文
8.3.3 文章固定链接
8.3.4 显示分类文章列表
8.3.5 显示评论列表
8.3.6 发表评论与回复
8.3.7 支持回复评论
8.3.8 网站主题切换
8.4 初始化博客
8.4.1 安全存储密码
8.4.2 创建管理员用户
8.5 使用Flask-Login管理用户认证
8.5.1 获取当前用户
8.5.2 登入用户
8.5.3 登出用户
8.5.4 视图保护
8.6 使用CSRFProtect实现CSRF保护
8.7 编写博客后台
8.7.1 文章管理
8.7.2 评论管理
8.7.3 分类管理
8.8 本章小结

第9章 图片社交网站
9.1 项目组织架构
9.1.1 功能式架构
9.1.2 分区式架构
9.1.3 混合式架构
9.1.4 如何选择
9.2 编写程序骨架
9.2.1 数据库模型与虚拟数据
9.2.2 模板与静态文件
9.3 高级用户认证
9.3.1 用户注册
9.3.2 验证邮箱地址
9.3.3 使用装饰器过滤未确认用户
9.3.4 密码重置
9.4 基于用户角色的权限管理
9.4.1 角色与权限模型
9.4.2 设置角色与权限
9.4.3 写入角色与权限
9.4.4 验证用户权限
9.5 使用Flask-Dropzone优化文件上传
9.5.1 配置Flask-Dropzone
9.5.2 渲染上传区域
9.5.3 处理并保存上传图片
9.6 使用Flask-Avatars处理用户头像
9.6.1 默认头像
9.6.2 生成随机头像
9.7 图片展示与管理
9.7.1 在用户主页显示图片列表
9.7.2 图片详情页
9.7.3 上一张下一张跳转
9.7.4 删除确认模态框
9.7.5 举报图片
9.7.6 图片描述
9.7.7 图片标签
9.7.8 用户资料弹窗
9.8 收藏图片
9.8.1 使用关联模型表示多对多关系
9.8.2 添加和取消收藏
9.8.3 收藏者和收藏页面
9.9 用户关注
9.9.1 自引用多对多关系
9.9.2 关注与取消关注
9.9.3 显示关注用户列表
9.9.4 使用AJAX在弹窗中执行关注操作
9.10 消息提醒
9.10.1 提醒消息在数据库中的表示
9.10.2 创建提醒
9.10.3 显示和管理提醒
9.10.4 通过轮询实时更新未读计数
9.11 用户资料与账户设置
9.11.1 编辑个人资料
9.11.2 自定义头像
9.11.3 更改密码
9.11.4 提醒消息开关
9.11.5 将收藏设为仅自己可见
9.11.6 注销账号
9.12 首页与探索
9.12.1 获取正在关注用户的图片
9.12.2 使用联结和分组查询获取热门标签
9.12.3 使用数据库通用函数获取随机图片
9.13 使用Flask-Whooshee实现全文搜索
9.13.1 创建索引
9.13.2 搜索表单
9.13.3 显示搜索结果
9.14 编写网站后台
9.14.1 用户管理
9.14.2 资源管理
9.14.3 面向管理员的用户资料编辑
9.15 本章小结

第10章 待办事项程序
10.1 使用JavaScript和AJAX编写单页程序
10.1.1 单页程序的模板组织
10.1.2 在根页面内切换子页面
10.1.3 生成测试账户
10.1.4 添加新待办条目
10.2 国际化与本地化
10.2.1 使用Flask-Babel集成Babel
10.2.2 区域和语言
10.2.3 文本的国际化
10.2.4 文本的本地化
10.2.5 时间与日期的本地化
10.3 设计并编写Web API
10.3.1 认识Web API
10.3.2 设计优美实用的Web API
10.3.3 使用Flask编写Web API
10.3.4 使用OAuth认证
10.3.5 资源的序列化
10.3.6 资源的反序列化
10.3.7 Web API的测试与发布
10.4 本章小结

第11章 在线聊天室
11.1 编写程序骨架
11.2 Gravatar头像
11.3 使用Flask-SocketIO建立实时双向通讯
11.3.1 建立Socket.IO连接
11.3.2 一条消息的旅程
11.3.3 在线人数统计
11.3.4 通讯频道分离
11.4 使用Flask-OAuthlib实现第三方登录
11.4.1 编写OAuth客户端
11.4.2 注册OAuth程序
11.4.3 处理OAuth2授权
11.4.4 处理OAuth1授权
11.5 聊天室功能增强
11.5.1 无限滚动加载历史消息
11.5.2 Markdown支持
11.5.3 代码语法高亮
11.5.4 标签页消息提醒
11.5.5 浏览器桌面通知
11.5.6 消息管理
11.6 本章小结
第三部分 高级篇

第12章 自动化测试
12.1 认识自动化测试
12.2 Flask测试客户端
12.3 使用unittest编写单元测试
12.3.1 Flask程序的测试固件
12.3.2 编写测试用例
12.3.3 组织测试
12.3.4 运行测试
12.4 使用Selenium进行用户界面测试
12.4.1 安装浏览器与驱动
12.4.2 准备测试环境
12.4.3 编写测试代码
12.5 使用Coverage.py计算测试覆盖率
12.5.1 基本用法
12.5.2 获取测试覆盖率
12.6 使用Flake8检查代码质量
12.7 本章小结

第13章 性能优化
13.1 程序性能分析
13.1.1 函数性能分析
13.1.2 数据库查询分析
13.2 使用Flask-Caching设置缓存
13.2.1 缓存视图函数
13.2.2 缓存其他函数
13.2.3 更新缓存
13.2.4 使用Redis作为缓存后端
13.3 使用Flask-Assets优化静态资源
13.3.1 注册资源集
13.3.2 生成资源集文件
13.3.3 在模板中加载资源集
13.4 本章小结

第14章 部署上线
14.1 传统部署 VS 云部署
14.2 基本部署流程
14.3 部署前的准备
14.3.1 更新程序配置
14.3.2 创建生产环境专用的程序实例
14.3.3 设置迁移工具
14.3.4 程序日志
14.3.5 手动导入环境变量
14.3.6 HTTPS转发
14.4 部署到Linux服务器
14.4.1 使用OpenSSH登录远程主机
14.4.2 安装基本库和工具
14.4.3 安全防护措施
14.4.4 推送代码并初始化程序环境
14.4.5 使用Gunicorn运行程序
14.4.6 使用Nginx提供反向代理
14.4.7 使用Supervisor管理进程
14.4.8 更新部署后的程序
14.5 部署到PythonAnywhere
14.5.1 反向代理设置
14.5.2 创建PythonAnywhere程序
14.5.3 推送代码并初始化程序环境
14.5.4 创建数据库
14.5.5 设置虚拟环境
14.5.6 静态文件
14.5.7 运行和更新程序
14.6 部署到Heroku
14.6.1 通过Heroku Git部署
14.6.2 使用GitHub部署
14.7 下一步做什么？
14.8 本章小结

第15章 Flask扩展开发
15.1 扩展的命名
15.2 扩展项目骨架
15.3 编写扩展类
15.4 添加扩展配置
15.5 实现扩展功能
15.5.1 加载静态资源
15.5.2 创建分享组件
15.5.3 在移动设备上隐藏
15.6 开源发布前的准备
15.6.1 添加文档字符串与注释
15.6.2 编写README与文档
15.6.3 为打包做准备
15.6.4 编写示例程序
15.6.5 编写单元测试
15.7 发布到PyPI
15.7.1 创建PyPI账号
15.7.2 使用setuptools打包
15.7.3 使用twine上传
15.8 编写良好的扩展
15.9 本章小结

第16章 Flask工作原理与机制解析
16.1 阅读Flask源码
16.1.1 获取Flask源码
16.1.2 如何阅读源码
16.1.3 Flask发行版本分析
16.2 Flask的设计理念
16.2.1 “微”框架
16.2.2 两个核心依赖
16.2.3 显式程序对象
16.2.4 本地上下文
16.2.5 三种程序状态
16.2.6 丰富的自定义支持
16.3 Flask与WSGI
16.3.1 WSGI程序
16.3.2 WSGI服务器
16.3.3 中间件
16.4 Flask的工作流程与机制
16.4.1 Flask中的请求响应循环
16.4.2 路由系统
16.4.3 本地上下文
16.4.4 请求与响应对象
16.4.5 session
16.4.6 蓝本
16.4.7 模板渲染
16.5 本章小结
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Flask Web开发实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python 并行编程手册
1　并行计算与Python起步  1
介绍  1
并行计算内存架构  2
内存组织  5
并行编程模型  10
如何设计并行程序  12
如何评估并行程序的性能  14
Python简介  16
并行世界中的Python  20
进程与线程介绍  21
开始在Python中使用进程  21
开始在Python中使用线程  23
2　基于线程的并行. .27
介绍  27
使用Python的线程模块 28
如何定义线程  28
如何确定当前的线程  30
如何在子类中使用线程 32
使用Lock与RLock实现线程同步  34
使用RLock实现线程同步  38
使用信号量实现线程同步  40
使用条件实现线程同步 44
使用事件实现线程同步 47
使用with语句  51
使用队列实现线程通信 53
评估多线程应用的性能 57
３　基于进程的并行63
介绍  64
如何生成进程  64
如何对进程命名  66
如何在后台运行进程  68
如何杀死进程  69
如何在子类中使用进程 70
如何在进程间交换对象 72
如何同步进程  78
如何管理进程间状态  81
如何使用进程池  82
使用mpi4py模块  84
点对点通信  87
避免死锁问题  91
使用广播实现聚合通信 94
使用scatter实现聚合通信  96
使用gather实现聚合通信  99
使用Alltoall实现聚合通信  101
汇聚操作  103
如何优化通信  105
４　异步编程.  111
介绍  111
使用 Python的 concurrent.futures 模块  112
使用Asyncio实现事件循环管理  116
使用Asyncio处理协程 120
使用Asyncio管理任务 125
使用Asyncio和Futures 128
５　分布式Python133
介绍  133
使用 Celery 分发任务 .134
如何使用 Celery 创建任务  136
使用 SCOOP进行科学计算  139
使用 SCOOP处理映射函数  143
使用 Pyro4 远程调用方法  147
使用 Pyro4 链接对象 ..150
使用 Pyro4 开发一个客户端-服务器应用  156
使用 PyCSP实现顺序进程通信  162
在Disco中使用 MapReduce  167
使用 RPyC 调用远程过程  172
６　使用Python进行GPU编程.  175
介绍  175
使用 PyCUDA模块  177
如何构建一个 PyCUDA应用  181
通过矩阵操作理解 PyCUDA内存模型  186
使用 GPUArray 调用内核  192
使用 PyCUDA对逐元素表达式求值  194
使用 PyCUDA进行 MapReduce 操作  198
使用 NumbaPro 进行GPU编程  201
通过 NumbaPro 使用 GPU 加速的库  206
使用 PyOpenCL模块 .. 211
如何构建一个 PyOpenCL应用  214
使用PyOpenCL对逐元素表达式求值  218
使用 PyOpenCL测试 GPU 应用  221
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python 并行编程手册
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python带我起飞
--------------第1篇  入门
第1章  了解Python/2
----1.1  了解Python的历史/2
----1.2  Python可以做什么/3
----1.3  Python在数据科学中的地位及前景/3
----1.4  如何使用本书/3
第2章  配置机器及搭建开发环境/5
----本章教学视频说明/5
----2.1  Python版本及开发环境介绍/6
--------2.1.1  Python的运行方式/6
--------2.1.2  常见的集成开发环境（IDE）/7
----2.2  下载及安装Anaconda/7
----2.3  熟悉Anaconda 3开发工具/10
--------2.3.1  快速了解Spyder/11
--------2.3.2  快速了解Jupyter Notebook/14
----2.4  实例1：运行Python程序，并传入参数/14
----2.4.1  在Spyder中新建Python文件，编写代码，运行代码/15
----2.4.2  用命令行启动Python程序，并传入参数/16
----2.4.3  用Spyder启动Python程序，并传入参数/17
第3章  语言规则——Python的条条框框/19
----本章教学视频说明/19
----3.1  了解编程语言的分类/20
----3.2  基础规则/21
----3.2.1  了解Python源代码相关的几个概念/22
----3.2.2  语句的基本规则：变量、语句、代码块/22
----3.2.3  添加注释/23
----3.2.4  使用Python的“帮助”/24
----3.3  代码文件的结构/24
----3.3.1  模块/24
----3.3.2  包/25
----3.4  模块的详细介绍/26
----3.4.1  模块的作用及分类/26
----3.4.2  模块的基本使用方法/27
----3.4.3  模块的搜索路径/27
----3.4.4  模块的属性/28
----3.4.5  模块名字的可变性/28
----3.4.6  模块的常规写法/29
----3.5  模块的四种导入方式/29
----3.5.1  import  as方式/29
----3.5.2  from  import方式/29
----3.5.3  from  import * 方式/30
----3.5.4  导入文件名中带空格的模块/31
----3.6  实例2：封装获取系统信息的模块，并将其导入/31
----3.6.1  在当前代码中的函数与模块中的函数同名情况下，导入模块/32
----3.6.2  在模块与当前代码不在同一路径的情况下，导入模块/34
----3.6.3  导入上级路径的模块/35
------------------第2篇  进阶
第4章  变量——编写代码的基石/38
----本章教学视频说明/38
----4.1  什么是变量/39
----4.2  了解变量的规则/40
----4.2.1  明白变量的本质——对象/40
----4.2.2  同时定义多个变量/40
----4.2.3  变量类型介绍/41
----4.2.4  变量类型的帮助函数/41
----4.3  numbers（数字）类型/42
----4.3.1  获取对象的类型/42
----4.3.2  算术运算符/42
----4.3.3  实例3：演示“算术运算符”的使用/43
----4.3.4  赋值运算符/44
----4.3.5  实例4：演示“赋值运算符”的使用/44
----4.3.6  比较运算符/45
----4.3.7  实例5：演示“比较运算符”的使用/46
----4.3.8  慎用is函数/48
----4.3.9  实例6：演示Python的缓存机制/50
----4.3.10  布尔型关系的运算符/52
----4.3.11  位运算符/53
----4.3.12  实例7：演示“位运算符”的使用/54
----4.4  strings（字符串）类型/54
----4.4.1  字符串的描述/55
----4.4.2  转义符/56
----4.4.3  屏幕I/O及格式化/59
----4.4.4  实例8：以字符串为例，演示“序列”类型的运算及操作/65
----4.4.5  关于切片的特殊说明/67
----4.4.6  字符串的相关函数/68
----4.5  list（列表）类型/69
----4.5.1  list的运算及操作/70
----4.5.2  list的内置方法/70
----4.5.3  实例9：演示list使用中的技巧及注意事项/71
----4.5.4  列表嵌套/74
----4.5.5  实例10：使用list类型实现队列和栈/74
----4.5.6  实例11：使用函数filter筛选列表——筛选学生列表中的偏科学生名单/77
----4.6  tuple（元组）类型/79
----4.6.1  tuple的描述/79
----4.6.2  运算及操作/80
----4.6.3  实例12：演示tuple的用法/80
----4.7  set（集合）类型/83
----4.7.1  set的描述/83
----4.7.2  set的运算/84
----4.7.3  set的内置方法/84
----4.7.4  不可变集合/85
----4.8  dictionary（字典）类型/85
----4.8.1  字典的描述/86
----4.8.2  字典的运算/86
----4.8.3  字典的内置方法/88
----4.9  对组合对象进行“深拷贝”和“浅拷贝”/88
----4.9.1  浅拷贝/88
----4.9.2  深拷贝/89
第5章  控制流——控制执行顺序的开关/91
----本章教学视频说明/91
----5.1  if语句/92
----5.1.1  语句形式/92
----5.1.2  演示if语句的使用/92
----5.1.3  实例13：根据来访人的性别选择合适的称呼/93
----5.2  while语句/94
----5.2.1  语句形式/94
----5.2.2  演示while语句的使用/94
----5.2.3  实例14：将十进制数转化为二进制数/95
----5.3  for语句/96
----5.3.1  语句形式/96
----5.3.2  在for循环中，使用切片/96
----5.3.3  在for循环中，使用内置函数range/97
----5.3.4  实例15：利用循环实现冒泡排序/98
----5.3.5  在for循环中，使用内置函数zip/99
----5.3.6  在for循环中，使用内置函数enumerate/101
----5.4  对循环进行控制——break、continue、pass语句/102
----5.5  实例16：演示人机对话中的控制流程（综合应用前面语句）/102
----5.6  利用for循环实现列表推导式/104
----5.7  实例17：利用循环来打印“九九乘法表”/105
----5.8  理解for循环的原理——迭代器/106
第6章  函数——功能化程序片段的封装/108
----本章教学视频说明/108
----6.1  函数的基本概念/109
----6.1.1  函数的定义/109
----6.1.2  函数的组成部分/109
----6.1.3  函数的参数：形参与实参/110
----6.1.4  函数的返回值/111
----6.1.5  函数的属性/111
----6.1.6  函数的本质/112
----6.1.7  函数的分类/112
----6.1.8  实例18：打印两个心形图案/113
----6.2  定义参数及调用函数/115
----6.2.1  函数参数的定义方法与调用形式/115
----6.2.2  在函数调用中检查参数/121
----6.2.3  函数调用中的参数传递及影响/122
----6.3  匿名函数与可迭代函数/124
----6.3.1  匿名函数与可迭代函数的介绍/124
----6.3.2  匿名函数与reduce函数的组合应用/125
----6.3.3  匿名函数与map函数的组合应用/125
----6.3.4  匿名函数与filter函数的组合应用/126
----6.3.5  可迭代函数的返回值/127
----6.4  偏函数/128
----6.5  递归函数/129
----6.6  eval与exec函数/130
----6.6.1  eval与exec的区别/130
----6.6.2  eval与exec的定义/130
----6.6.3  exec和eval的使用经验/132
----6.6.4  eval与exec的扩展知识/134
6.7  实例19：批量测试转化函数（实现“组合对象”与“字符串”的相互转化）/134
----6.7.1  编写两个功能函数/135
----6.7.2  编写单元测试用例/135
----6.7.3  批量运行单元测试用例/136
6.8  生成器函数/137
----6.8.1  生成器与迭代器的区别/137
----6.8.2  生成器函数/137
----6.8.3  生成器表达式/137
6.9  变量的作用域/138
----6.9.1  作用域介绍/138
----6.9.2  global语句/140
----6.9.3  nonlocal语句/140
6.10  工厂函数/141
----6.10.1  普通工厂函数的实现/141
----6.10.2  闭合函数（closure）/142
----6.10.3  装饰器（decorator）/143
----6.10.4  @修饰符/144
----6.10.5  更高级的装饰器/145
----6.10.6  解决“同作用域下默认参数被覆盖”问题/151
第7章  错误与异常——调教出听话的程序/153
本章教学视频说明/153
7.1  错误的分类/154
----7.1.1  语法错误/154
----7.1.2  运行时错误/154
7.2  异常的基本语法/155
----7.2.1  同时处理多个异常/156
----7.2.2  异常处理中的else语句/157
----7.2.3  输出未知异常/157
----7.2.4  输出异常的详细信息/158
7.3  捕获与处理异常/160
----7.3.1  异常的处理流程/161
----7.3.2  try语句的工作原理/161
----7.3.3  一些常见的异常/161
7.4  创建异常/163
----7.4.1  创建异常的方法/163
----7.4.2  创建异常举例/163
7.5  异常的最终处理（清理动作）/164
----7.5.1  finally的使用场景/164
----7.5.2  finally与else的区别/165
7.6  判定条件的正确性（断言）/165
----7.6.1  断言的表达形式/165
----7.6.2  带错误信息的断言语句/166
7.7  实例20：如HTTP请求失败，实现“重试”功能/166
----7.7.1  使用装饰器实现失败重试/167
----7.7.2  编写简单爬虫/168
----7.7.3  传入正确的目的地址，开始爬取/168
----7.7.4  传入错误的目的地址，验证“重试”功能/169
第8章  文件操作——数据持久化的一种方法/170
本章教学视频说明/170
8.1  文件的基本操作/171
----8.1.1  读写文件的一般步骤/171
----8.1.2  打开文件/172
----8.1.3  具体读写/173
----8.1.4  关闭文件/174
8.2  文件对象的方法/175
----8.2.1  文件对象的常用方法介绍/175
----8.2.2  把文件对象当作迭代器来读取/176
8.3  实例21：带有异常处理的文件操作/177
8.4  使用with语句简化代码/178
----8.4.1  实例22：使用with语句操作文件/178
----8.4.2  with语法的原理/179
8.5  实现字符串与二进制数的相互转化/179
----8.5.1  将字符串转二进制数/180
----8.5.2  将二进制数转字符串/180
8.6  将任意对象序列化/181
----8.6.1  pickle函数/181
----8.6.2  实例23：用pickle函数实现元组与“二进制对象”“二进制对象文件”之间的转换
----8.6.3  序列化的扩展方法（ZODB模块）/185
8.7  实例24：批量读取及显示CT医疗影像数据/185
----8.7.1  DICOM介绍/185
----8.7.2  Python中的DICOM接口模块/186
----8.7.3  编写代码以载入DICOM文件/186
----8.7.4  读取DICOM中的数值/187
----8.7.5  显示单张DICOM数据图像/189
----8.7.6  批量生成DICOM数据图像/189
------------------第3篇  高阶
第9章  类——面向对象的编程方案/192
本章教学视频说明/192
9.1  类的相关术语及实现/193
----9.1.1  创建类/194
----9.1.2  创建类属性/194
----9.1.3  定义类的动态属性/195
----9.1.4  限制类属性（__slots__）/196
9.2  实例化类对象/197
----9.2.1  带有初始值的实例化/197
----9.2.2  class中的self/198
----9.2.3  类方法（@classmethod）与静态方法（@staticmethod）/200
----9.2.4  类变量与实例变量的区别/202
----9.2.5  销毁类实例化对象/203
9.3  类变量的私有化类属性/204
----9.3.1  公有化（public）与私有化（private）/204
----9.3.2  私有化的实现/205
----9.3.3  使用装饰器技术实现类的私有化（@property）/207
9.4  实现子类/209
----9.4.1  继承/209
----9.4.2  实例25：演示类的继承/211
----9.4.3  super函数/212
----9.4.4  实例26：演示super函数的功能/212
9.5  类相关的常用内置函数/216
----9.5.1  判断实例（isinstance）/216
----9.5.2  判断子类（issubclass）/216
----9.5.3  判断类实例中是否含有某个属性（hasattr）/217
----9.5.4  获得类实例中的某个属性（getattr）/217
----9.5.5  设置类实例中的某个属性值（setattr）/217
9.6  重载运算符/218
----9.6.1  重载运算符的方法与演示/218
----9.6.2  可重载的运算符/219
9.7  包装与代理/220
----9.7.1  包装/220
----9.7.2  代理/221
----9.7.3  实例27：使用代理的方式实现RESTful API接口/222
9.8  自定义异常类/225
----9.8.1  自定义异常类的方法/225
----9.8.2  实例28：自定义异常类的多重继承与使用/226
9.9  支持with语法的自定义类/228
----9.9.1  实现支持with语法的类/229
----9.9.2  实例29：代码实现自定义类，并使其支持with语法/229
9.10  “自定义迭代器类”的实现与调试技巧/231
----9.10.1  实例30：自定义迭代器，实现字符串逆序/231
----9.10.2  调试技巧/233
9.11  元类（MetaClass）/238
----9.11.1  Class的实现原理/238
----9.11.2  元类的介绍/239
第10章  系统调度——实现高并发的处理任务/242
本章教学视频说明/242
10.1  进程与线程/243
10.2  线程/243
----10.2.1  线程的创建及原理/244
----10.2.2  互斥锁/248
----10.2.3  实例31：使用信号量来同步多线程间的顺序关系/251
----10.2.4  实例32：实现基于事件机制的消息队列/254
----10.2.5  实例33：使用条件锁同步多线程中的生产者与消费者关系/257
----10.2.6  实例34：创建定时器触发程序，在屏幕上输出消息/259
----10.2.7  实例35：使用线程池提升运行效率/261
----10.2.8  需要创建多少个线程才算合理/265
10.3  进程/265
----10.3.1  实例36：创建多进程的程序/265
----10.3.2  多进程与多线程的区别/268
10.4  协程/268
----10.4.1  协程的相关概念及实现步骤/269
----10.4.2  实例37：使用协程实现“任务提交”与“结果接收”/270
10.5  应该选择线程，还是协程/271
10.6  实例38：使用协程批量修改文件扩展名/271
------------------第4篇  商业实战
第11章  爬虫实战（实例39）：批量采集股票数据，并保存到Excel中/276
11.1  爬取股票代码/276
----11.1.1  找到目标网站/277
----11.1.2  打开调试窗口，查看网页代码/277
----11.1.3  在网页源码中找到目标元素/278
----11.1.4  分析目标源代码，找出规律/278
----11.1.5  编写代码抓取股票代码/279
----11.1.6  运行代码，显示结果/280
11.2  爬取股票内容/280
----11.2.1  编写代码抓取批量内容/280
----11.2.2  运行代码显示结果/281
11.3  爬虫项目的其他技术/282
第12章  自动化实战（实例40）：读取Excel数据文件，并用可视化分析/283
12.1  使用Pandas读取Excel文件，并用Matplotlib生成大盘走势图/283
12.2  使用Pandas处理数据并绘制成图/285
----12.2.1  使用Pandas处理数据/285
----12.2.2  绘制直方图和折线图/286
12.3  自动化数据处理的其他技术/287
第13章  机器学习实战（实例41）：从一组看似混乱的数据中找出y≈2x的规律/288
13.1  准备数据/288
13.2  训练模型并实现可视化/290
----13.2.1  训练模型/290
----13.2.2  利用模型进行预测/290
----13.2.3  了解线性回归模型的内部原理/291
----13.2.4  将模型可视化/291
13.3  评估模型/292
----13.3.1  评估模型的基本思路/292
----13.3.2  用代码实现模型评估/293
13.4  保存模型，应用模型/293
13.5  机器学习的方向/294
第14章  人工智能实战（实例42）：基于人脸识别的“来访登记系统”/295
14.1  安装案例所依赖的模块/295
14.2  安装及使用dlib模块/296
----14.2.1  下载dlib模块/296
----14.2.2  安装dlib模块/298
----14.2.3  使用dlib模块进行人脸检测/299
14.3  安装及使用face_recognition模块/300
----14.3.1  下载face_recognition模块/300
----14.3.2  下载及安装face_recognition_models模型/301
----14.3.3  使用face_recognition模块检测人脸中的特征点/303
14.4  安装及使用opencv模块/304
----14.4.1  下载并安装opencv模块/304
----14.4.2  下载中文字体/304
----14.4.3  使用opencv调用摄像头进行拍照/305
14.5  安装及使用yagmail模块/306
----14.5.1  安装yagmail模块/306
----14.5.2  使用yagmail模块向自己的QQ邮箱发送邮件/306
14.6  详细设计/309
----14.6.1  需求描述/310
----14.6.2  定义系统的输入和输出/310
----14.6.3  系统规则及约束/310
----14.6.4  结构体设计/310
----14.6.5  软件的主体架构图/311
----14.6.6  软件的主体流程介绍/312
14.7  编码实现/312
----14.7.1  导入模块/312
----14.7.2  定义结构体/313
----14.7.3  实现发送邮件函数/313
----14.7.4  实现邮件内容生成函数/313
----14.7.5  实现过滤并保存来访记录的函数/314
----14.7.6  实现定时器处理函数/314
----14.7.7  在主线程中启动定时器线程/315
----14.7.8  实现并调用函数载入人脸库/315
----14.7.9  在主循环里调用摄像头，并进行人脸识别/316
14.8  运行程序/318
14.9  下一步对系统的改进/319
----附录A  内置函数/321
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python带我起飞
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通Python爬虫框架Scrapy
目录
第 1章 Scrapy简介 1
1.1 初识Scrapy 1
1.2 喜欢Scrapy的更多理由 2
1.3 关于本书：目标和用途 3
1.4 掌握自动化数据爬取的重要性 4
1.4.1 开发健壮且高质量的应用，并提供合理规划 4
1.4.2 快速开发高质量可行产品 5
1.4.3 Google不会使用表单，爬取才能扩大规模 6
1.4.4 发现并融入你的生态系统 7
1.5 在充满爬虫的世界里做一个好公民 7
1.6 Scrapy不是什么 8
1.7 本章小结 9
第 2章 理解HTML和XPath 10
2.1 HTML、DOM树表示以及XPath 10
2.1.1 URL 11
2.1.2 HTML文档 11
2.1.3 树表示法 13
2.1.4 你会在屏幕上看到什么 14
2.2 使用XPath选择HTML元素 15
2.2.1 有用的XPath表达式 16
2.2.2 使用Chrome获取XPath表达式 19
2.2.3 常见任务示例 20
2.2.4 预见变化 21
2.3 本章小结 22
第3章 爬虫基础 23
3.1 安装Scrapy 24
3.1.1 MacOS 24
3.1.2 Windows 25
3.1.3 Linux 25
3.1.4 新源码安装 26
3.1.5 升级Scrapy 26
3.1.6 Vagrant：本书中运行示例的官方方式 27
3.2 UR2IM——基本抓取流程 28
3.2.1 URL 29
3.2.2 请求和响应 31
3.2.3 Item 31
3.3 一个Scrapy项目 37
3.3.1 声明item 38
3.3.2 编写爬虫 40
3.3.3 填充item 43
3.3.4 保存文件 45
3.3.5 清理——item装载器与管理字段 47
3.3.6 创建contract 50
3.4 抽取更多的URL 53
3.4.1 使用爬虫实现双向爬取 56
3.4.2 使用CrawlSpider实现双向爬取 59
3.5 本章小结 61
第4章 从Scrapy到移动应用 62
4.1 选择手机应用框架 62
4.2 创建数据库和集合 63
4.3 使用Scrapy填充数据库 65
4.4 创建手机应用 68
4.4.1 创建数据库访问服务 69
4.4.2 创建用户界面 69
4.4.3 将数据映射到用户界面 70
4.4.4 数据库字段与用户界面控件间映射 71
4.4.5 测试、分享及导出你的手机应用 72
4.5 本章小结 73
第5章 迅速的爬虫技巧 75
5.1 需要登录的爬虫 75
5.2 使用JSON API和AJAX页面的爬虫 81
5.3 30倍速的房产爬虫 85
5.4 基于Excel文件爬取的爬虫 90
5.5 本章小结 93
第6章 部署到Scrapinghub 94
6.1 注册、登录及创建项目 94
6.2 部署爬虫与计划运行 96
6.3 访问item 99
6.4 计划定时爬取 100
6.5 本章小结 101
第7章 配置与管理 102
7.1 使用Scrapy设置 102
7.2 基本设置 103
7.2.1 分析 104
7.2.2 性能 107
7.2.3 提前终止爬取 108
7.2.4 HTTP缓存和离线运行 108
7.2.5 爬取风格 109
7.2.6 feed 110
7.2.7 媒体下载 111
7.2.8 Amazon Web服务 113
7.2.9 使用代理和爬虫 113
7.3 进阶设置 114
7.3.1 项目相关设置 115
7.3.2 Scrapy扩展设置 116
7.3.3 下载调优 116
7.3.4 自动限速扩展设置 117
7.3.5 内存使用扩展设置 117
7.3.6 日志和调试 117
7.4 本章小结 118
第8章 Scrapy编程 119
8.1 Scrapy是一个Twisted应用 119
8.1.1 延迟和延迟链 122
8.1.2 理解Twisted和非阻塞I/O——一个Python故事 125
8.2 Scrapy架构概述 132
8.3 示例1：非常简单的管道 135
8.4 信号 136
8.5 示例2：测量吞吐量和延时的扩展 138
8.6 中间件延伸 141
8.7 本章小结 144
第9章 管道秘诀 145
9.1 使用REST API 146
9.1.1 使用treq 146
9.1.2 用于写入Elasticsearch的管道 146
9.1.3 使用Google Geocoding API实现地理编码的管道 149
9.1.4 在Elasticsearch中启用地理编码索引 156
9.2 与标准Python客户端建立数据库接口 157
9.3 使用Twisted专用客户端建立服务接口 161
9.4 为CPU密集型、阻塞或遗留功能建立接口 166
9.4.1 处理CPU密集型或阻塞操作的管道 166
9.4.2 使用二进制或脚本的管道 168
9.5 本章小结 172
第 10章 理解Scrapy性能 173
10.1 Scrapy引擎——一种直观方式 173
10.1.1 级联队列系统 175
10.1.2 定义瓶颈 176
10.1.3 Scrapy性能模型 176
10.2 使用telnet获得组件利用率 178
10.3 基准系统 180
10.4 标准性能模型 182
10.5 解决性能问题 185
10.5.1 案例 #1：CPU饱和 185
10.5.2 案例 #2：代码阻塞 187
10.5.3 案例 #3：下载器中的“垃圾” 188
10.5.4 案例 #4：大量响应或超长响应造成的溢出 191
10.5.5 案例 #5：有限/过度item并发造成的溢出 193
10.5.6 案例 #6：下载器未充分利用 194
10.6 故障排除流程 197
10.7 本章小结 198
第 11章 使用Scrapyd与实时分析进行分布式爬取 199
11.1 房产的标题是如何影响价格的 200
11.2 Scrapyd 200
11.3 分布式系统概述 203
11.4 爬虫和中间件的变化 205
11.4.1 索引页分片爬取 205
11.4.2 分批爬取URL 207
11.4.3 从设置中获取初始URL 211
11.4.4 在Scrapyd服务器中部署项目 213
11.5 创建自定义监控命令 215
11.6 使用Apache Spark流计算偏移量 216
11.7 运行分布式爬取 218
11.8 系统性能 220
11.9 关键要点 221
11.10 本章小结 221
附录A 软件的安装与故障排除 222
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通Python爬虫框架Scrapy
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python应用开发实践
第 1 章开发简单应用　1
1.1　重要提示　2
1.2　安装的先决条件　2
1.2.1　安装 Python　3
1.3　本书的主题　8
1.3.1　了解本书人物　8
1.4　简单的脚本—兽人之袭
v0.0.1　9
1.4.1　游戏简介—兽人之袭
v0.0.1　10
1.4.2　问题说明　10
1.4.3　伪代码—0.0.1 版本　10
1.4.4　代码查看　11
1.4.5　运行兽人之袭 v0.0.1　14
1.5　使用函数—兽人之袭
v0.0.5　14
1.5.1　重新回顾以前的版本　15
1.5.2　有攻击功能的伪代码—版本 0.0.5　17
1.5.3　代码查看　19
1.5.4　运行兽人之袭 v0.0.5　21
1.6　使用面向对象编程—兽人之袭 v1.0.0　22
1.6.1　功能需求的优先度　23
1.6.2　问题说明　24
1.6.3　重新设计代码　24
1.6.4　描绘整个场景　25
1.6.5　代码查看　27
1.6.6　运行兽人之袭 v1.0.0　31
1.7　Python 中的抽象基类　32
1.7.1　练习　33
1.8　小结　34
1.8.1　对电子书读者非常重要的提示　34
第 2 章异常处理　36
2.1　修改兽人之袭 v1.0.0　36
2.1.1　问题调试　37
2.1.2　bug 修复中……　38
2.2　异常　39
2.2.1　什么是异常　39
2.2.2　最常见的异常　39
2.2.3　异常处理　40
2.2.4　异常的抛出和再抛出　42
2.2.5　try...except 的 else 代码块　43
2.2.6　finally... 清理吧　44
2.3　回归游戏—兽人之袭
v1.1.0　45
2.3.1　准备工作　45
2.3.2　增加异常处理代码　46
2.3.3　运行兽人之袭 v1.1.0　47
2.4　自定义异常　48
2.4.1　准备工作　48
2.4.2　自定义异常— 问题所在　49
2.4.3　编写一个新的异常类　50
2.4.4　扩展异常类　51
2.4.5　继承 exception 类　53
2.5　练习　55
2.6　小结　56
第 3 章　模块化、包和部署　57
3.1　选择一种版本控制规约　58
3.1.1　连续递增　58
3.1.2　使用日期格式　59
3.1.3　语义版本控制方案　59
3.2　代码模块化　60
3.2.1　兽人之袭 v2.0.0　60
3.3　创建 Python 包　62
3.3.1　从包中录入　63
3.4　在 PyPI 上发布包　64
3.4.1　发行版本准备　65
3.4.2　上传发行版　69
3.4.3　一条命令完成所有的 事情　73
3.4.4　安装你自己的发行版　73
3.5　使用私有的 PyPI 仓库　75
3.5.1　步骤 1—安装 pypiserver　75
3.5.2　步骤 2—创建一个新的 源代码发行版　75
3.5.3　步骤 3—启动本地 服务器　76
3.5.4　步骤 4—安装私有 发行版　76
3.6　创建增量发布　77
3.6.1　打包并上传新版本　77
3.6.2　升级已经安装的版本　77
3.7　代码的版本控制　78
3.7.1　Git 资源　78
3.7.2　安装 Git　78
3.7.3　配置你的验证信息　79
3.7.4　Git 基础术语　79
3.7.5　创建并使用本地仓库　80
3.8　使用 Git 的 GUI 客户端　83
3.9　练习　84
3.10　小结　85
第 4 章　代码文档和最佳实践　86
4.1　编写代码文档　87
4.1.1　文档字符串　88
4.1.2　reStructuredText 简介　89
4.1.3　使用 RST 的文档 字符串　92
4.1.4　文档字符串格式化风格　94
4.1.5　自动生成文档字符串 stubs　95
4.1.6　使用 Sphinx 生成文档　97
4.2　Python 编码标准　103
4.3　代码分析—我们做得 怎么样呢　105
4.3.1　使用 IDE 进行代码 分析　105
4.3.2　Pylint　106
4.4　练习　110
4.5　小结　110
第 5 章　单元测试和重构　111
5.1　本章的组织方式　111
5.1.1　重要说明　112
5.2　为何要进行测试　112
5.2.1　提出了一个新的需求　112
5.2.2　你实现了这个功能　113
5.2.3　但是有些事情似乎 不对了……　114
5.2.4　它需要完全测试　115
5.3　单元测试　115
5.3.1　Python 的 unittest 框架　116
5.4　为应用程序编写单元测试　121
5.4.1　创建测试包　121
5.4.2　为单元测试创建新 的类　122
5.4.3　第 1 个单元测试— 受伤方的选择　123
5.4.4　运行第 1 个单元测试　124
5.4.5　第 2 个单元测试— 占领木屋　124
5.4.6　创建自己的测试模块　127
5.4.7　批量执行单元测试　127
5.5　使用模拟库的单元测试　128
5.5.1　Mock 的简介　128
5.5.2　让我们开始 Mock 吧　129
5.5.3　在单元测试中使用 Mock 对象　131
5.5.4　使用补丁　133
5.5.5　第 3 个单元测试— play 方法　135
5.6　你的代码被覆盖到了吗　139
5.6.1　解决导入错误　140
5.7　其他单元测试工具　141
5.7.1　Doctest　141
5.7.2　Nose　141
5.7.3　Pytest　142
5.8　重构的前言　142
5.8.1　绕个弯路—可测试性重构　144
5.9　重构　144
5.9.1　什么是重构　145
5.9.2　为什么要进行重构　145
5.9.3　何时进行重构　145
5.9.4　如何进行重构　146
5.9.5　移动　148
5.10　重新审视单元测试　150
5.10.1　可测试化重构　150
5.10.2　第 4 个单元测试— setup_game_scenario　152
5.11　练习　152
5.11.1　重构和重新设计练习　153
5.12　小结　153
第 6 章　设计模式　154
6.1　设计模式的介绍　154
6.1.1　设计模式的分类　155
6.2　Python 语言和设计模式　156
6.2.1　一级函数　157
6.2.2　类作为一级对象　157
6.2.3　闭包　158
6.2.4　各种特性　159
6.2.5　鸭子类型　160
6.3　本章余下内容的结构　161
6.4　快进—兽人之袭
v6.0.0　162
6.5　策略模式　164
6.5.1　策略场景—跳跃 特性　164
6.5.2　策略—主要的问题　165
6.5.3　策略—尝试解决 方案　166
6.5.4　策略—重新考虑 设计　168
6.5.5　策略方案 1— 传统方法　169
6.5.6　策略方案 2— Python 方法　172
6.6　简单工厂　174
6.6.1　简单工厂场景— 招募特性　174
6.6.2　简单工厂— 主要的问题　175
6.6.3　简单工厂—重新 考虑设计　176
6.6.4　简单工厂方案 1— 传统方法　177
6.6.5　简单工厂方案 2— Python 方法　178
6.7　抽象工厂模式　180
6.7.1　抽象工厂场景— 饰品店　181
6.7.2　抽象工厂—主要的 问题　184
6.7.3　抽象工厂—重新考虑 设计　184
6.7.4　抽象工厂方案— Python 方法　186
6.8　适配器模式　188
6.8.1　适配器模型—精灵的 远房亲戚　189
6.8.2　适配器—主要的 问题　189
6.8.3　适配器—尝试解决 方案　190
6.8.4　适配器解决方案— Python 方法　191
6.9　小结　194
第 7 章　性能—识别瓶颈　195
7.1　三个性能章节的总览　195
7.1.1　更注重运行时的性能　195
7.1.2　关于性能的第 1 个 章节　196
7.1.3　关于性能的第 2 个 章节　196
7.1.4　关于性能的第 3 个 章节　196
7.1.5　看一下应用性能提升　196
7.2　游戏场景—寻找黄金　197
7.2.1　顶层算法　199
7.2.2　查看最初的代码　200
7.2.3　运行代码　202
7.3　主要的问题　203
7.4　识别瓶颈　204
7.4.1　衡量执行时间　204
7.4.2　监测代码片段的运行 时间　205
7.4.3　代码分析　206
7.5　内存分析　212
7.5.1　memory_profiler 包　212
7.6　算法效率和复杂度　214
7.6.1　算法效率　214
7.6.2　算法复杂度　214
7.7　大 O 符号　214
7.7.1　大 O 复杂类　215
7.8　小结　221
第 8 章　性能优化 1　222
8.1　本章的前提　223
8.2　本章的组织方式　223
8.3　回顾 “寻找黄金” 的场景　224
8.3.1　选择问题的数据大小　224
8.3.2　分析最初的代码　224
8.4　优化 “寻找黄金”—
第 1 部分　225
8.4.1　调整算法—平方根　225
8.4.2　跳过点操作符　228
8.4.3　使用本地范围　230
8.5　性能优化的一些事项　232
8.5.1　列表推导式　233
8.5.2　记录执行时间　234
8.5.3　字典推导式　235
8.5.4　交换条件块和 for 循环　235
8.5.5　在循环中使用 try 语句　236
8.5.6　选择正确的数据结构　237
8.5.7　collections 模块　238
8.5.8　生成器和生成器 表达式　241
8.5.9　itertools 模块　245
8.6　练习　247
8.7　小结　247
第 9 章　性能优化 2—NumPy 和 并行化　248
9.1　本章的先决条件　248
9.2　本章的组织方式　248
9.3　NumPy 的简介　249
9.3.1　安装 NumPy　250
9.3.2　创建数组对象　250
9.3.3　简单的数组操作　251
9.3.4　数组切割和索引　252
9.3.5　广播　254
9.3.6　其他功能　255
9.3.7　从哪里能获得更多关于 NumPy 的信息　262
9.4　优化 “寻找黄金”—
第 2 部分　262
9.4.1　“寻找黄金” 优化— 优化四　262
9.4.2　“寻找黄金” 优化— 优化五　264
9.5　使用 multiprocessing 模块的 并行化　267
9.5.1　并行化简介　267
9.5.2　全局解释器锁　268
9.5.3　multiprocessing 模块　268
9.6　“寻找黄金” 程序并行化　271
9.6.1　重访黄金领地　271
9.6.2　“寻找黄金” 优化— 优化六，并行化　273
9.7　进一步阅读　277
9.7.1　JIT 编译器　277
9.8　小结　278
第 10 章简单的图形应用程序　280
10.1　GUI 框架概述　281
10.1.1　Tkinter　281
10.1.2　PyQt　281
10.1.3　PySide　282
10.1.4　Kivy　282
10.1.5　wxPython　282
10.2　GUI 编程设计注意事项　283
10.2.1　了解用户的需求　283
10.2.2　开发用户故事　283
10.2.3　简单性和可访问性　283
10.2.4　一致性　284
10.2.5　可预测性和熟悉性　284
10.2.6　其他设计考虑　284
10.3　事件驱动编程　284
10.3.1　事件　285
10.3.2　事件处理　285
10.3.3　事件循环　285
10.4　使用 Tkinter 进行 GUI 编程　286
10.4.1　Tkinter 的文件链接　286
10.4.2　Tkinter 中的 mainloop()　286
10.4.3　简单 GUI 应用程序—
第 1 步　287
10.4.4　简单 GUI 应用程序—
第 2 步　289
10.4.5　Tkinter 中的 GUI
控件　290
10.4.6　布局管理　292
10.4.7　Tkinter 中的事件　294
10.4.8　Tkinter 中的事件 处理　296
10.5　项目 1—兽人之袭
v10.0.0　298
10.5.1　游戏场景　298
10.5.2　问题声明　298
10.5.3　编写代码　299
10.5.4　运行应用程序　305
10.6　MVC 架构　306
10.6.1　模型　307
10.6.2　视图　307
10.6.3　控制器　307
10.6.4　MVC 的好处　308
10.7　项目 2—兽人之袭
v10.1.0　308
10.7.1　重新修改 HutGame 类　308
10.7.2　创建 MVC 类　309
10.7.3　MVC 对象间的通信　310
10.7.4　查看代码　314
10.7.5　Model 类　315
10.7.6　View 类　316
10.7.7　运行应用程序　317
10.8　测试 GUI 应用程序　317
10.8.1　测试注意事项　318
10.9　练习　319
10.10　扩展阅读　320
10.11　小结　322
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python应用开发实践
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python快乐编程基础入门
第一章 Python开发入门
1.1 Python语言的简介
1.2 Python安装
1.3 集成开发环境PyCharm
1.4 本章小结
1.5 课后习题
第二章 编程基础
2.1 基本语法
2.2 变量与数据类型
2.3 运算符
2.4 小案例
2.5 本章小结
2.6 课后习题
第三章 流程控制语句
3.1 条件语句
3.2 循环语句
3.3 小案例
3.4 本章小结
3.5 课后习题
第四章 字符串
4.1 字符串简介
4.2 字符串的输出和输入
4.3 字符串的索引与切片
4.4 字符串的运算
4.5 字符串常用函数
4.6 案例
第五章 列表与元祖
5.1 列表的概念
5.2 列表的运算
5.3 列表的常用操作
5.4 列表推导
5.5 元祖
5.6 案例
第六章 字典与集合
6.1 字典的概念
6.2 字典的创建
6.3 字典的常用操作
6.4 集合的概念
6.5 集合的常用操作
6.6 字典推导与集合推导
6.7 案例
第七章 函数（上）
7.1 函数的概念
7.2 函数的定义
7.3 函数的参数
7.4 函数的返回值
7.5 变量的作用域
7.6 函数的嵌套调用
7.7 函数的递归调用
7.8 案例
第八章 函数（下）
8.1 间接调用函数
8.2 匿名函数
8.3 闭包
8.4 装饰器
8.5 偏函数
8.6 常用的内建函数
8.7 案例
第九章 模块与包
9.1 模块的概念
9.2 模块的导入
9.3 内置标准模块
9.4 自定义模块
9.5 包的概念
9.6 包的发布
9.7 包的安装
9.8 案例
第十章 面向对象（上）
10.1 对象与类
10.2 类的j定义
10.3 对象的创建
10.4 构造方法
10.5 析构方法
10.6 类方法
10.7 静态方法
10.8 运算符重载
10.9 案例
第十一章 面向对象（下）
11.1 面向对象的三大特征
11.2 封装
11.3 继承
11.4 多态
11.5 设计模式
11.6 案例
第十二章 文件
12.1 文件概述
12.2 文件操作
12.3 目录操作
12.4 案例
第十三章 异常
13.1 异常概述
13.2 捕获与处理异常
13.3 触发异常
13.4 自定义异常
13.5 回溯最后的异常
13.6 案例
第十四章 综合案例
14.1 需求分析
14.2 程序设计
14.3 代码实现
14.4 效果演示
14.5 本章小结
14.6 课外实践
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python快乐编程基础入门
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python 3破冰人工智能 从入门到实战
第 1章　从数学建模到人工智能 1
1.1　数学建模　1
1.1.1　数学建模与人工智能　1
1.1.2　数学建模中的常见问题　4
1.2　人工智能下的数学　12
1.2.1　统计量　12
1.2.2　矩阵概念及运算　13
1.2.3　概率论与数理统计　16
1.2.4　高等数学——导数、微分、不定积分、定积分　19
第　2章 Python快速入门　24
2.1　安装Python　24
2.1.1　Python安装步骤　24
2.1.2　IDE的选择　27
2.2　Python基本操作　28
2.2.1　第 一个小程序　28
2.2.2　注释与格式化输出　28
2.2.3　列表、元组、字典　34
2.2.4　条件语句与循环语句　37
2.2.5　break、continue、pass　40
2.3　Python高级操作　41
2.3.1　lambda　41
2.3.2　map　42
2.3.3　filter　43
第3章　Python科学计算库NumPy　45
3.1　NumPy简介与安装　45
3.1.1　NumPy简介　45
3.1.2　NumPy安装　45
3.2　基本操作　46
3.2.1　初识NumPy　46
3.2.2　NumPy数组类型　47
3.2.3　NumPy创建数组　49
3.2.4　索引与切片　56
3.2.5　矩阵合并与分割　60
3.2.6　矩阵运算与线性代数　62
3.2.7　NumPy的广播机制　69
3.2.8　NumPy统计函数　71
3.2.9　NumPy排序、搜索　75
3.2.10　NumPy数据的保存　79
第4章　常用科学计算模块快速入门　80
4.1　Pandas科学计算库　80
4.1.1　初识Pandas　80
4.1.2　Pandas基本操作　82
4.2　Matplotlib可视化图库　94
4.2.1　初识Matplotlib　94
4.2.2　Matplotlib基本操作　96
4.2.3　Matplotlib绘图案例　98
4.3　SciPy科学计算库　100
4.3.1　初识SciPy　100
4.3.2　SciPy基本操作　101
4.3.3　SciPy图像处理案例　103
第5章　Python网络爬虫　106
5.1　爬虫基础　106
5.1.1　初识爬虫　106
5.1.2　网络爬虫的算法　107
5.2　爬虫入门实战　107
5.2.1　调用API　107
5.2.2　爬虫实战　112
5.3　爬虫进阶—高效率爬虫　113
5.3.1　多进程　113
5.3.2　多线程　114
5.3.3　协程　115
5.3.4　小结　116
第6章　Python数据存储　117
6.1　关系型数据库MySQL　117
6.1.1　初识MySQL　117
6.1.2　Python操作MySQL　118
6.2　NoSQL之MongoDB　120
6.2.1　初识NoSQL　120
6.2.2　Python操作MongoDB　121
6.3　本章小结　123
6.3.1　数据库基本理论　123
6.3.2　数据库结合　124
6.3.3　结束语　125
第7章　Python数据分析　126
7.1　数据获取　126
7.1.1　从键盘获取数据　126
7.1.2　文件的读取与写入　127
7.1.3　Pandas读写操作　129
7.2　数据分析案例　130
7.2.1　普查数据统计分析案例　130
7.2.2　小结　139
第8章　自然语言处理　140
8.1　Jieba分词基础　140
8.1.1　Jieba中文分词　140
8.1.2　Jieba分词的3种模式　141
8.1.3　标注词性与添加定义词　142
8.2　关键词提取　144
8.2.1　TF-IDF关键词提取　145
8.2.2　TextRank关键词提取　147
8.3　word2vec介绍　150
8.3.1　word2vec基础原理简介　150
8.3.2　word2vec训练模型　153
8.3.3　基于gensim的word2vec实战　154
第9章　从回归分析到算法基础　160
9.1　回归分析简介　160
9.1.1　“回归”一词的来源　160
9.1.2　回归与相关　161
9.1.3　回归模型的划分与应用　161
9.2　线性回归分析实战　162
9.2.1　线性回归的建立与求解　162
9.2.2　Python求解回归模型案例　164
9.2.3　检验、预测与控制　166
第　10章 从K-Means聚类看算法调参　171
10.1　K-Means基本概述　171
10.1.1　K-Means简介　171
10.1.2　目标函数　171
10.1.3　算法流程　172
10.1.4　算法优缺点分析　174
10.2　K-Means实战　174
第　11章 从决策树看算法升级　180
11.1　决策树基本简介　180
11.2　经典算法介绍　181
11.2.1　信息熵　181
11.2.2　信息增益　182
11.2.3　信息增益率184
11.2.4　基尼系数　185
11.2.5　小结　185
11.3　决策树实战　186
11.3.1　决策树回归　186
11.3.2　决策树的分类　188
第　12章 从朴素贝叶斯看算法多变　193
12.1　朴素贝叶斯简介　193
12.1.1　认识朴素贝叶斯　193
12.1.2　朴素贝叶斯分类的工作过程　194
12.1.3　朴素贝叶斯算法的优缺点　195
12.2　3种朴素贝叶斯实战　195
第　13章 从推荐系统看算法场景　200
13.1　推荐系统简介　200
13.1.1　推荐系统的发展　200
13.1.2　协同过滤　201
13.2　基于文本的推荐　208
13.2.1　标签与知识图谱推荐案例　209
13.2.2　小结　217
第　14章 从TensorFlow开启深度学习之旅　218
14.1　初识TensorFlow　218
14.1.1　什么是TensorFlow　218
14.1.2　安装TensorFlow　219
14.1.3　TensorFlow基本概念与原理　219
14.2　TensorFlow数据结构　221
14.2.1　阶　221
14.2.2　形状　221
14.2.3　数据类型　221
14.3　生成数据十二法　222
14.3.1　生成Tensor　222
14.3.2　生成序列　224
14.3.3　生成随机数　225
14.4　TensorFlow实战　225
参考文献　230
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python 3破冰人工智能 从入门到实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python人脸识别：从入门到工程实践
前言
第1章　人脸识别入门1
1.1　人脸识别概况1
1.1.1　何为人脸识别1
1.1.2　人脸识别的应用2
1.1.3　人脸识别的目标4
1.1.4　人脸识别的一般方法5
1.2　人脸识别发展状况8
1.2.1　人脸识别历史沿革8
1.2.2　DT时代的呼唤10
1.2.3　计算机视觉的新起点10
1.3　本章小结12
第2章　数学与机器学习基础13
2.1　矩阵13
2.1.1　矩阵的形式13
2.1.2　行列式14
2.1.3　转置15
2.1.4　矩阵的一般运算15
2.2　向量17
2.2.1　向量的形式18
2.2.2　向量的点乘18
2.2.3　向量的范数19
2.3　距离度量19
2.3.1　欧式距离19
2.3.2　曼哈顿距离20
2.3.3　余弦距离20
2.3.4　汉明距离21
2.4　卷积22
2.4.1　一维卷积22
2.4.2　二维卷积23
2.5　机器学习基础25
2.5.1　机器学习类别25
2.5.2　分类算法26
2.6　本章小结38
第3章　计算机视觉原理与应用39
3.1　计算机视觉介绍39
3.2　颜色模型40
3.2.1　彩色图像40
3.2.2　灰度图像与二值图像42
3.3　信号与噪声44
3.3.1　信号44
3.3.2　噪声45
3.4　图像滤波45
3.4.1　均值滤波45
3.4.2　中值滤波47
3.5　图像的几何变换47
3.5.1　平移48
3.5.2　旋转49
3.5.3　缩放50
3.6　图像特征50
3.6.1　灰度直方图50
3.6.2　LBP特征51
3.6.3　Haar特征52
3.6.4　HOG特征54
3.7　本章小结56
第4章　OpenCV基础与应用58
4.1　OpenCV介绍58
4.2　科学计算库Numpy59
4.2.1　array类型60
4.2.2　线性代数相关62
4.2.3　矩阵的高级函数64
4.3　OpenCV基本操作70
4.4　图像的基本变换72
4.4.1　颜色变换72
4.4.2　几何变换80
4.4.3　图像噪声处理83
4.5　本章小结86
第5章　深度学习与Keras工程实践87
5.1　深度学习介绍87
5.2　Keras框架简介89
5.3　Keras的使用方法91
5.3.1　深度学习的原理91
5.3.2　Keras神经网络堆叠的两种方法92
5.4　常用的神经网络层96
5.4.1　全连接层96
5.4.2　二维卷积层98
5.4.3　池化层100
5.4.4　BN层103
5.4.5　dropout层105
5.4.6　flatten层106
5.5　激活函数108
5.5.1　Sigmoid激活函数108
5.5.2　Softmax激活函数109
5.5.3　ReLU激活函数110
5.5.4　Keras中激活函数的使用111
5.6　优化器112
5.6.1　SGD优化器113
5.6.2　Adadelta优化器116
5.7　损失函数117
5.7.1　均方误差117
5.7.2　交叉熵损失函数118
5.7.3　Keras提供的损失函数120
5.8　模型评估方法122
5.8.1　交叉验证122
5.8.2　分类器性能评估124
5.9　数据增强127
5.9.1　数据增强概述128
5.9.2　Keras实现数据增强129
5.9.3　自己实现数据增强133
5.10　Keras的工程实践134
5.10.1　训练时的回调函数135
5.10.2　打印网络信息137
5.10.3　输出网络结构图139
5.10.4　获取某层的输出140
5.11　本章小结142
第6章　常用人脸识别算法143
6.1　特征脸法143
6.2　OpenCV的方法146
6.2.1　人脸检测方法147
6.2.2　人脸识别方法149
6.3　Dlib的人脸检测方法151
6.4　基于深度学习的图片特征提取152
6.4.1　AlexNet152
6.4.2　VGGNet155
6.4.3　GoogLeNet157
6.4.4　ResNet160
6.5　基于深度学习的人脸检测161
6.5.1　基于深度学习的目标检测162
6.5.2　MTCNN164
6.6　基于深度学习的人脸识别167
6.6.1　基于度量学习的方法168
6.6.2　基于边界分类的方法171
6.7　本章小结177
第7章　人脸识别项目实战178
7.1　人脸图片数据集178
7.1.1　Olivetti Faces人脸数据集178
7.1.2　LFW人脸数据集180
7.1.3　YouTube Faces人脸数据集181
7.1.4　IMDB WIKI人脸数据集181
7.1.5　FDDB人脸数据集182
7.2　使用OpenCV的人脸检测182
7.2.1　Haar级联分类器182
7.2.2　OpenCV的SSD人脸检测器184
7.3　使用Dlib的人脸检测186
7.3.1　基于Hog-SVM的人脸检测186
7.3.2　基于最大边界的对象检测器187
7.4　深度学习实践188
7.4.1　卷积神经网络实现189
7.4.2　数据增强207
7.4.3　自定义损失函数211
7.4.4　数据预处理213
7.4.5　模型训练214
7.4.6　实现Web接口216
7.4.7　模型调优与总结218
7.5　人脸识别的拓展应用219
7.6　本章小结220
第8章　人脸识别工程化221
8.1　云平台实践221
8.1.1　云计算介绍221
8.1.2　云服务的形式223
8.1.3　云平台架构设计224
8.2　服务API设计229
8.2.1　人脸检测229
8.2.2　人脸对比239
8.3　人脸图片存储241
8.4　人脸图片检索243
8.5　本章小结244
附录　参考文献245
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python人脸识别：从入门到工程实践
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python项目开发案例集锦（全彩版）
第 1 篇 控制台程序
第1 章 学生信息管理系统
——IDLE 控制台程序
1.1 需求分析
1.2 系统设计
• 1.2.1 系统功能结构
• 1.2.2 系统业务流程
• 1.2.3 系统预览
1.3 系统开发必备
• 1.3.1 系统开发环境
• 1.3.2 文件夹组织结构
1.4 主函数设计
• 1.4.1 功能概述
• 1.4.2 主函数的业务流程
• 1.4.3 实现主函数
• 1.4.4 显示主菜单
1.5 学生信息维护模块设计
• 1.5.1 学生信息维护模块概述
• 1.5.2 实现录入学生信息功能
• 1.5.3 实现删除学生信息功能
• 1.5.4 实现修改学生信息功能
1.6 查询/统计模块设计
• 1.6.1 查询/统计模块概述
• 1.6.2 实现查找学生信息功能
• 1.6.3 实现统计学生总人数功能
• 1.6.4 实现显示所有学生信息功能
1.7 排序模块设计
• 1.7.1 排序模块概述
• 1.7.2 实现按学生成绩排序
1.8 打包为.exe可执行文件
1.9 小 结
第2 章 企业编码生成系统
—— Python + pycode + pyStrich + tkinter 实现
2.1 需求分析
2.2 系统设计
• 2.2.1 系统功能结构
• 2.2.2 系统业务流程
• 2.2.3 系统预览与输出
2.3 系统开发必备
• 2.3.1 系统开发环境
• 2.3.2 文件夹组织结构
2.4 主要函数设计
• 2.4.1 mkdir()函数
• 2.4.2 openfi le()函数
• 2.4.3 inputbox()函数
• 2.4.4 wfi le()函数
2.5 主程序模块设计
2.6 生成6位数字防伪码
• 2.6.1 模块概述
• 2.6.2 实现代码
2.7 生成9位系列产品数字防伪编码
• 2.7.1 模块概述
• 2.7.2 代码实现
2.8 生成25位混合产品序列号式防伪码
• 2.8.1 模块概述
• 2.8.2 代码实现
2.9 生成含数据分析功能的防伪编码
• 2.9.1 模块概述
• 2.9.2 代码实现
2.10 智能批量生成带数据分析功能的防伪码
• 2.10.1 模块概述
• 2.10.2 代码实现
2.11 实现防伪码补充生成功能
• 2.11.1 模块概述
• 2.11.2 功能实现
2.12 实现条形码输出
• 2.12.1 模块概述
• 2.12.2 关键技术
• 2.12.3 业务流程
• 2.12.4 实现代码
2.13 实现二维码批量打印输出
• 2.13.1 模块概述
• 2.13.2 主要技术——使用qrcode模块打印二维码
• 2.13.3 业务流程
• 2.13.4 实现代码
2.14 实现企业粉丝抽奖
• 2.14.1 模块概述
• 2.14.2 代码实现
2.15 小 结
第 2 篇 小 游 戏
第3 章 简易五子棋（控制台版）
—— 二维列表+ 嵌套for 循环+ 多条件if 判断实现
3.1 需求分析
3.2 游戏设计
• 3.2.1 游戏功能结构
• 3.2.2 游戏业务流程
• 3.2.3 游戏预览
3.3 游戏开发必备
• 3.3.1 游戏开发环境
• 3.3.2 文件夹组织结构
3.4 棋盘设置
• 3.4.1 棋盘设置实现流程
• 3.4.2 初始化棋盘
• 3.4.3 打印棋盘
• 3.4.4 打印胜利棋盘及赢家
• 3.4.5 为控制台设置不同字体和背景色
3.5 五子棋算法
• 3.5.1 五子棋算法分析
• 3.5.2 判断棋子上、下、左、右方向
• 3.5.3 判断棋子对角线方向
3.6 下棋设置
• 3.6.1 下棋设置实现流程
• 3.6.2 判断当前下棋者
• 3.6.3 记录棋子坐标
• 3.6.4 判断棋子坐标
• 3.6.5 判断指定坐标位置是否有棋子
3.7 小 结
第4 章 玛丽冒险
—— pygame、itertools、random 实现
4.1 需求分析
4.2 系统设计
• 4.2.1 系统功能结构
• 4.2.2 系统业务流程
• 4.2.3 系统预览
4.3 系统开发必备
• 4.3.1 开发工具准备
• 4.3.2 文件夹组织结构
4.4 玛丽冒险游戏的实现
• 4.4.1 游戏窗体的实现
• 4.4.2 地图的加载
• 4.4.3 玛丽的跳跃功能
• 4.4.4 随机出现的障碍
• 4.4.5 背景音乐的播放与停止
• 4.4.6 碰撞和积分的实现
4.5 小 结
第5 章 彩图版飞机大战
—— pygame、sys、random、codecs 实现
5.1 需求分析
5.2 系统设计
• 5.2.1 系统功能结构
• 5.2.2 系统业务流程
• 5.2.3 系统预览
5.3 系统开发必备
• 5.3.1 开发工具准备
• 5.3.2 文件夹组织结构
5.4 彩图版飞机大战的实现
• 5.4.1 主窗体的实现
• 5.4.2 创建游戏精灵
• 5.4.3 游戏核心逻辑
• 5.4.4 游戏排行榜
5.5 小 结
第 3 篇 实用小工具
第6 章 DIY 字符画
—— PyQt5+_thread+time+Pillow(PIL)+numpy 实现 96
6.1 需求分析
6.2 系统设计
• 6.2.1 系统功能结构
• 6.2.2 系统业务流程
• 6.2.3 系统预览
6.3 系统开发必备
• 6.3.1 开发工具准备
• 6.3.2 文件夹组织结构
• 6.3.3 配置Qt Designer
• 6.3.4 配置qrcTopy（资源文件转换）
6.4 主窗体的UI设计
• 6.4.1 主窗体的布局
• 6.4.2 将.ui与.qrc文件转换为.py文件
• 6.4.3 主窗体的显示
6.5 字符画的转换
• 6.5.1 创建字符画转换文件
• 6.5.2 关联主窗体
6.6 小 结
第7 章 超级画板
—— pygame 模块+ draw 绘图对象实现
7.1 需求分析
7.2 系统设计
• 7.2.1 系统功能结构
• 7.2.2 系统业务流程
• 7.2.3 系统预览
7.3 系统开发必备
• 7.3.1 系统开发环境
• 7.3.2 文件夹组织结构
7.4 菜单类设计
• 7.4.1 菜单类实现流程
• 7.4.2 初始化菜单
• 7.4.3 设置画笔对象
• 7.4.4 绘制菜单栏
• 7.4.5 为菜单关联事件
7.5 画笔类设计
• 7.5.1 画笔类实现流程
• 7.5.2 初始化画笔
• 7.5.3 标识是否开始绘制
• 7.5.4 设置并获取画笔大小
• 7.5.5 设置并获取画笔颜色
• 7.5.6 实现绘制功能
7.6 窗口绘制类设计
• 7.6.1 窗口绘制类实现流程
• 7.6.2 初始化窗口
• 7.6.3 清空画板
• 7.6.4 启动超级画板主窗口
7.7 超级画板主类设计
• 7.7.1 超级画板主类实现流程
• 7.7.2 导入pygame模块
• 7.7.3 检测Python版本号
• 7.7.4 显示超级画板主窗口
7.8 小 结
第8 章 Word 助手
—— PyQt5 + PyPDF2+pywin32 实现
8.1 需求分析
8.2 系统设计
• 8.2.1 系统功能结构
• 8.2.2 系统业务流程
• 8.2.3 系统预览
8.3 系统开发必备
• 8.3.1 开发工具准备
• 8.3.2 文件夹组织结构
8.4 编写工具模块
• 8.4.1 编写遍历目录的common模块
• 8.4.2 编写将Word文档转换为PDF的wordtopdf模块 129
• 8.4.3 编写合并PDF文件的mergepdf模块
8.5 主窗体的UI设计
• 8.5.1 主窗体概述
• 8.5.2 主窗体实现流程
• 8.5.3 设计主窗体
• 8.5.4 将.ui文件转换为.py文件
• 8.5.5 主窗体的显示
8.6 Word转PDF模块设计
• 8.6.1 Word转PDF模块概述
• 8.6.2 Word转PDF模块实现流程
• 8.6.3 设计Word转PDF窗体
• 8.6.4 在主文件中加载Word转PDF窗体
• 8.6.5 为工具栏绑定槽函数实现打开子窗体
• 8.6.6 实现选择源文件夹功能
• 8.6.7 实现选择目标文件夹功能
• 8.6.8 实现将Word文档批量转换为PDF
• 8.6.9 实现将多个Word文档合并为一个PDF
8.7 统计Word文档页码模块设计
• 8.7.1 统计Word文档页码模块概述
• 8.7.2 统计Word文档页码模块实现流程
• 8.7.3 设计统计Word文档页码窗体
• 8.7.4 在主文件中加载统计Word文档页码窗体 .... 148
• 8.7.5 为工具栏绑定槽函数实现打开子窗体
• 8.7.6 实现统计Word文档页码功能
8.8 提取总目录模块设计
• 8.8.1 提取总目录模块概述
• 8.8.2 提取总目录模块实现流程
• 8.8.3 设计提取总目录窗体
• 8.8.4 在主文件中加载提取总目录窗体
• 8.8.5 为工具栏绑定槽函数实现打开子窗体
• 8.8.6 实现提取总目录功能
8.9 小 结
第9 章 图片批量处理器
—— PyQt5 + PIL 模块实现
9.1 需求分析
9.2 系统设计
• 9.2.1 系统功能结构
• 9.2.2 系统业务流程
• 9.2.3 系统预览
9.3 系统开发必备
• 9.3.1 系统开发环境
• 9.3.2 文件夹组织结构
9.4 主窗体设计
• 9.4.1 主窗体概述
• 9.4.2 主窗体实现流程
• 9.4.3 设计主窗体
• 9.4.4 打开添加水印窗体
• 9.4.5 打开重命名窗体
• 9.4.6 实现关于本软件功能
• 9.4.7 运行时显示窗体
9.5 批量添加水印设计
• 9.5.1 窗体概述
• 9.5.2 批量添加水印窗体实现流程
• 9.5.3 设计批量添加水印窗体
• 9.5.4 初始化窗体设置
• 9.5.5 加载图片列表
• 9.5.6 设置水印字体
• 9.5.7 选择水印图片
• 9.5.8 选择水印图片保存路径
• 9.5.9 为图片添加水印
9.6 批量重命名设计
• 9.6.1 窗体概述
• 9.6.2 批量重命名窗体实现流程
• 9.6.3 设计批量重命名窗体
• 9.6.4 初始化窗体设置
• 9.6.5 加载图片名称及路径
• 9.6.6 对图片批量重命名
9.7 小 结
第 4 篇 网络爬虫
第10 章 RCQ 读者书库
—— PyQt5 + bs4 模块+ time + request 实现
10.1 需求分析
10.2 系统设计
• 10.2.1 系统功能结构
• 10.2.2 系统业务流程
• 10.2.3 系统预览
10.3 系统开发必备
• 10.3.1 系统开发环境
• 10.3.2 文件夹组织结构
10.4 窗体UI设计
• 10.4.1 窗体UI概述
• 10.4.2 窗体UI设计流程
• 10.4.3 在Qt设计器中设计窗体
• 10.4.4 将窗体UI转换为.py文件
• 10.4.5 设置默认抓取期数
• 10.4.6 设置默认保存路径
• 10.4.7 运行时显示窗体
10.5 功能代码设计
• 10.5.1 功能代码实现流程
• 10.5.2 导入模块
• 10.5.3 选择保存路径
• 10.5.4 抓取数据并保存为文件
• 10.5.5 获取指定路径下的所有文件
• 10.5.6 按期数显示《读者》文章列表
• 10.5.7 按名称和图标显示《读者》文章
• 10.5.8 抓取指定月份所有数据并显示
• 10.5.9 预览选中文章
10.6 小 结
第11 章 火车票分析助手
—— PyQt5 + matplotlib + requests 实现
11.1 需求分析
11.2 系统设计
• 11.2.1 系统功能结构
• 11.2.2 系统业务流程
• 11.2.3 系统预览
11.3 系统开发必备
• 11.3.1 开发工具准备
• 11.3.2 文件夹组织结构
11.4主窗体的UI设计
• 11.4.1 主窗体的布局
• 11.4.2 主窗体显示效果
11.5 爬取数据
• 11.5.1 获取请求地址与参数
• 11.5.2 下载数据文件
• 11.5.3 查询所有车票信息
• 11.5.4 卧铺票的查询与分析
• 11.5.5 查询车票起售时间
11.6 窗体的数据显示
• 11.6.1 车票查询区域的数据显示
• 11.6.2 卧铺售票分析区域的数据显示
• 11.6.3 卧铺车票数量走势图的显示
• 11.6.4 查询车票起售时间的数据显示
11.7 小 结
第12 章 高德地图+ 58 租房
—— requests + beautifulsoup4 + csv 实现
12.1 需求分析
12.2 系统设计
• 12.2.1 系统功能结构
• 12.2.2 系统业务流程
• 12.2.3 系统预览
12.3 系统开发必备
• 12.3.1 开发工具准备
• 12.3.2 文件夹组织结构
12.4 关键技术
• 12.4.1 requests模块
• 12.4.2 BeautifulSoup模块
• 12.4.3 csv模块
12.5 高德地图+58租房的开发
• 12.5.1 分析请求地址
• 12.5.2 爬取数据并生成文件
• 12.5.3 申请JSAPI的开发者Key
• 12.5.4 显示高德地图
• 12.5.5 输入工作地点显示到达范围
• 12.5.6 显示房源位置与路线规划
12.6 小 结
第 5 篇 数据分析
第13 章 开心麻花影视作品分析
——PyQt5 + pyecharts + wordcloud + json 模块实现
13.1 需求分析
13.2 系统设计
• 13.2.1 系统功能结构
• 13.2.2 系统业务流程
• 13.2.3 系统预览
13.3 系统开发必备
• 13.3.1 系统开发环境
• 13.3.2 文件夹组织结构
13.4 主窗体设计
• 13.4.1 实现主窗体
• 13.4.2 查看部分的隐藏与显示
• 13.4.3 下拉列表处理
13.5 数据分析与处理
• 13.5.1 获取数据
• 13.5.2 生成全国热力图文件
• 13.5.3 生成主要城市评论数及平均分文件
• 13.5.4 生成词云图片
13.6 点击查看显示内容
• 13.6.1 创建显示HTML页面窗体
• 13.6.2 创建显示图片窗体
• 13.6.3 绑定查询按钮单击事件
13.7 小 结
第14 章 Excel 数据分析师
—— pandas + matplotlib
14.1 需求分析
14.2 系统设计
• 14.2.1 系统功能结构
• 14.2.2 系统业务流程
• 14.2.3 系统预览
14.3 系统开发环境
• 14.3.1 开发环境介绍
• 14.3.2 开发环境安装与配置
14.4 关键技术
• 14.4.1 pandas模块
• 14.4.2 QFileDialog对话框
14.5 窗体UI设计
• 14.5.1 创建窗体
• 14.5.2 工具栏设计
• 14.5.3 其他布局与设置
• 14.5.4 将.ui文件转换为.py文件
14.6 功能代码设计
• 14.6.1 导入Excel文件
• 14.6.2 读取Excel数据
• 14.6.3 设置文件存储路径
• 14.6.4 保存数据到Excel
• 14.6.5 提取列数据
• 14.6.6 定向筛选
• 14.6.7 多表合并
• 14.6.8 多表统计排行
• 14.6.9 生成图表（贡献度分析）
14.7 小 结
第 6 篇 人工智能
第15 章 智能停车场车牌识别计费系统 298
—— pygame、pandas、matplotlib、baidu-aip 实现
15.1 需求分析
15.2 系统设计
• 15.2.1 系统功能结构
• 15.2.2  系统业务流程
• 15.2.3 系统预览
15.3 系统开发必备
• 15.3.1 开发工具准备
• 15.3.2 文件夹组织结构
15.4 智能停车场车牌识别计费系统的实现
• 15.4.1 实现系统窗体
• 15.4.2 显示摄像头画面
• 15.4.3 创建保存数据文件
• 15.4.4 识别车牌
• 15.4.5 车辆信息的保存与读取
• 15.4.6 实现收入统计
15.5 小 结
第16 章 AI 智能联系人管理
—— PyQt5、pandas、PIL、phone、pyecharts 实现
16.1 需求分析
16.2 系统设计
• 16.2.1 系统功能结构
• 16.2.2 系统业务流程
• 16.2.3 系统预览
16.3 系统开发必备
• 16.3.1 开发工具准备
• 16.3.2 文件夹组织结构
16.4 AI智能联系人管理的实现
• 16.4.1 系统窗体的实现
• 16.4.2 添加联系人信息页面实现
• 16.4.3 创建保存数据文件
• 16.4.4 识别名片
• 16.4.5 主窗体显示联系人信息
• 16.4.6 显示联系人分布饼图
16.5 小 结
第 7 篇 Web开发
第17 章 51 商城
—— Flask + SQLALchemy + MySQL 实现
17.1 需求分析
17.2 系统功能设计
• 17.2.1 系统功能结构
• 17.2.2 系统业务流程
17.3 系统开发必备
• 17.3.1 系统开发环境
• 17.3.2 文件夹组织结构
17.4 数据库设计
• 17.4.1 数据库概要说明
• 17.4.2 数据表模型
• 17.4.3 数据表关系
17.5 会员注册模块设计
• 17.5.1 会员注册模块概述
• 17.5.2 会员注册页面
• 17.5.3 验证并保存注册信息
17.6 会员登录模块设计
• 17.6.1 会员登录模块概述
• 17.6.2 创建会员登录页面
• 17.6.3 保存会员登录状态
• 17.6.4 会员退出功能
17.7 首页模块设计
• 17.7.1 首页模块概述
• 17.7.2 实现显示最新上架商品功能
• 17.7.3 实现显示打折商品功能
• 17.7.4 实现显示热门商品功能
17.8 购物车模块
• 17.8.1 购物车模块概述
• 17.8.2 实现显示商品详细信息功能
• 17.8.3 实现添加购物车功能
• 17.8.4 实现查看购物车功能
• 17.8.5 实现保存订单功能
• 17.8.6 实现查看订单功能
17.9 后台功能模块设计
• 17.9.1 后台登录模块设计
• 17.9.2 商品管理模块设计
• 17.9.3 销量排行榜模块设计
• 17.9.4 会员管理模块设计
• 17.9.5 订单管理模块设计
17.10 小 结
第18 章 BBS 社区
—— Tornado + Redis+ Bootstrap 实现
18.1 需求分析
18.2 系统功能设计
• 18.2.1 系统功能结构
• 18.2.2 系统业务流程
18.3 系统开发必备
• 18.3.1 系统开发环境
• 18.3.2 文件夹组织结构
18.4 数据库设计
• 18.4.1 数据库概要说明
• 18.4.2 数据表关系
18.5 用户系统设计
• 18.5.1 用户注册功能
• 18.5.2 登录功能实现
• 18.5.3 用户注销功能实现
18.6 问题模块设计
• 18.6.1 问题列表功能实现
• 18.6.2 问题详情功能实现
• 18.6.3 创建问题功能的实现
18.7 答案长轮询设计
18.8 小 结
第19 章 甜橙音乐网
—— Flask + MySQL + jPlayer 实现
19.1 需求分析
19.2 系统功能设计
• 19.2.1 系统功能结构
• 19.2.2 系统业务流程
• 19.2.3 系统预览
19.3 系统开发必备
• 19.3.1 系统开发环境
• 19.3.2 文件夹组织结构
19.4 数据库设计
• 19.4.1 数据库概要说明
• 19.4.2 数据表模型
19.5 网站首页模块的设计
• 19.5.1 首页模块概述
• 19.5.2 实现热门歌手列表功能
• 19.5.3 实现热门歌曲功能
• 19.5.4 实现音乐播放功能
19.6 排行榜模块的设计
• 19.6.1 排行榜模块概述
• 19.6.2 实现歌曲排行榜的功能
• 19.6.3 实现播放歌曲的功能
19.7 曲风模块的设计
• 19.7.1 曲风模块概述
• 19.7.2 实现曲风模块数据的获取
• 19.7.3 实现曲风模块页面的渲染
• 19.7.4 实现曲风列表的分页功能
19.8 发现音乐模块的设计
• 19.8.1 发现音乐模块概述
• 19.8.2 实现发现音乐的搜索功能
• 19.8.3 实现发现音乐模块页面的渲染
19.9 歌手模块的设计
• 19.9.1 歌手模块概述
• 19.9.2 实现歌手列表的功能
• 19.9.3 实现歌手详情的功能
19.10 我的音乐模块的设计
• 19.10.1 我的音乐模块概述
• 19.10.2 实现收藏歌曲的功能
• 19.10.3 实现我的音乐功能
19.11 小 结
第20 章 智慧校园考试系统
—— Django + Bootstrap + MySQL + Redis 实现
20.1 需求分析
20.2 系统功能设计
• 20.2.1 系统功能结构
• 20.2.2 系统业务流程
• 20.2.3 系统预览
20.3 系统开发必备
• 20.3.1 系统开发环境
• 20.3.2 文件夹组织结构
20.4 数据库设计
• 20.4.1 数据库概要说明
• 20.4.2 数据表模型
20.5 用户登录模块设计
• 20.5.1 用户登录模块概述
• 20.5.2 使用Django默认授权机制实现普通登录 ... 422
• 20.5.3 机构注册功能的实现
20.6 核心答题功能的设计
• 20.6.1 答题首页设计
• 20.6.2 考试详情页面
• 20.6.3 答题功能的实现
• 20.6.4 提交答案
• 20.6.5 批量录入题库
20.7 小 结
第 8 篇 微信/小程序
第21 章 看图猜成语小程序
—— Flask + MySQL + 微信小程序实现
21.1 需求分析
21.2 系统功能设计
• 21.2.1 系统功能结构
• 21.2.2 系统业务流程
21.3 系统开发必备
• 21.3.1 系统开发环境
• 21.3.2 文件夹组织结构
21.4 数据库设计
• 21.4.1 数据库概要说明
• 21.4.2 数据表模型
21.5 小程序开发必备
• 21.5.1 注册小程序
• 21.5.2 小程序信息完善及开发前准备
• 21.5.3 下载微信开发工具
21.6 首页登录授权模块设计
• 21.6.1 首页登录授权模块概述
• 21.6.2 首页页面设计
• 21.6.3 登录授权接口实现
21.7 答题模块设计
• 21.7.1 答题模块概述
• 21.7.2 答题页面设计
• 21.7.3 答题接口实现
21.8 通关模块设计
• 21.8.1 通关模块概述
• 21.8.2 通关页面设计
21.9 排行榜模块设计
• 21.9.1 排行榜模块概述
• 21.9.2 排行榜页面设计
• 21.9.3 排行榜接口实现
21.10 小 结
第22 章 今天吃什么小程序
—— Flask + MySQL + 微信小程序实现
22.1 需求分析
22.2 系统功能设计
• 22.2.1 系统功能结构
• 22.2.2 系统业务流程
22.3 系统预览
22.4 系统开发必备
• 22.4.1 系统开发环境
• 22.4.2 文件夹组织结构
22.5 数据库设计
• 22.5.1 数据库概要说明
• 22.5.2 数据表模型
22.6 登录页授权模块设计
• 22.6.1 首页登录授权模块概述
• 22.6.2 首页页面设计
• 22.6.3 登录授权接口实现
22.7 首页模块设计
• 22.7.1 首页概述
• 22.7.2 首页页面设计
• 22.7.3 首页接口实现
22.8 菜谱模块设计
• 22.8.1 菜谱模块概述
• 22.8.2 菜谱列表页面设计
• 22.8.3 菜谱列表接口设计
• 22.8.4 菜谱详情页面设计
• 22.8.5 菜谱详情接口设计
22.9 其他模块设计
• 22.9.1 百度地图商家地址模块设计
• 22.9.2 上传美食模块设计
• 22.9.3 数据统计模块设计
22.10 后台功能模块设计
• 22.10.1 后台登录模块设计
• 22.10.2 菜系管理功能实现
• 22.10.3 美食管理功能实现
• 22.10.4 会员管理功能实现
22.11 小 结
第23 章 微信机器人
—— Flask + 爬虫+ 微信公众平台接口实现
23.1 需求分析
23.2 系统功能设计
• 23.2.1 系统功能结构
• 23.2.2 系统业务流程
23.3 系统开发必备
• 23.3.1 系统开发环境
• 23.3.2 文件夹组织结构
23.4 微信公众平台开发必备
• 23.4.1 注册订阅号
• 23.4.2 公众号基本配置
23.5 内网穿透工具使用
• 23.5.1 内网穿透工具简介
• 23.5.2 下载安装
• 23.5.3 测试外网域名
23.6 爬取“糗事百科”笑话
• 23.6.1 页面分析
• 23.6.2 随机抓取一条笑话
23.7 爬取天气信息
• 23.7.1 页面分析
• 23.7.2 爬取天气信息
23.8 微信机器人的实现
• 23.8.1 校验签名
• 23.8.2 填写配置信息
• 23.8.3 接收文本消息
• 23.8.4 整合笑话和天气功能
23.9 小 结
附录1 导入PyCharm配色方案
附录2 PyCharm常用快捷键
附录3 Python 中常见的内置异常及描述
附录4 本书模块应用概览
附录5 内置函数
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python项目开发案例集锦（全彩版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据科学入门
第 1 部分 开启Python 数据科学之门 1
第　1 章 探索数据科学与Python之间的匹配度　3
1．1　定义21 世纪最诱人的工作　5
1．1．1　思考数据科学的出现　5
1．1．2　概述数据科学家的核心竞争力　6
1．1．3　连接数据科学和大数据　7
1．1．4　理解编程的角色　7
1．2　创建数据科学管道　8
1．2．1　准备数据　8
1．2．2　执行探索性的数据分析　8
1．2．3　从数据中学习　8
1．2．4　可视化　9
1．2．5　获得洞察力和数据产品　9
1．3　理解Python 在数据科学中的角色　9
1．3．1　思考数据科学家的多面性　9
1．3．2　使用一门多用途、简单而高效的语言来工作　10
1．4　快速学会使用Python　11
1．4．1　加载数据　11
1．4．2　训练模型　12
1．4．3　显示结果　13
第　2 章 介绍Python 的能力和奇迹　14
2．1　为什么是Python　15
2．1．1　抓住Python 的核心哲学　16
2．1．2　探索现在和未来的开发目标　16
2．2　使用Python 工作　17
2．2．1　品味语言　17
2．2．2　理解缩进的需求　17
2．2．3　用命令行或者IDE 工作　18
2．3　运行快速原型和实验　22
2．4　考虑执行速度　23
2．5　可视化能力　24
2．6　为数据科学使用Python生态系统　26
2．6．1　使用SciPy 来访问用于科学的工具　26
2．6．2　使用NumPy 执行基础的科学计算　26
2．6．3　使用pandas 来执行数据分析　26
2．6．4　使用Scikit-learn 实现机器学习　27
2．6．5　使用matplotlib 来标绘数据　27
2．6．6　使用Beautiful Soup来解析HTML 文档　27
第3　章 为数据科学设置Python　29
3．1　考虑现成的跨平台的用于科学的分发包　30
3．1．1　获取Continuum AnalyticsAnaconda　31
3．1．2　获取Enthought CanopyExpress　32
3．1．3　获取pythonxy　32
3．1．4　获取WinPython　33
3．2　在Windows 上安装Anaconda　33
3．3　在Linux 上安装Anaconda　36
3．4　在Mac OS X 上安装Anaconda　37
3．5　下载数据集和示例代码　38
3．5．1　使用IPython Notebook　39
3．5．2　定义代码仓库　40
3．5．3　理解本书中所使用的数据集　45
第4　章 复习Python 基础　47
4．1　使用数字和逻辑来工作　49
4．1．1　执行变量赋值　50
4．1．2　做算术运算　50
4．1．3　使用布尔表达式来比较数据　52
4．2　创建和使用字符串　54
4．3　与日期交互　55
4．4　创建并使用函数　56
4．4．1　创建可复用函数　56
4．4．2　以各种不同的方式调用函数　58
4．5　使用条件和循环语句　61
4．5．1　使用if 语句做决策　61
4．5．2　使用嵌套决策在多个选项间做出选择　62
4．5．3　使用for 执行重复任务　63
4．5．4　使用while 语句　64
4．6　使用Sets、Lists 和Tuples来存储数据　64
4．6．1　在set 上执行操作　65
4．6．2　使用list 来工作　66
4．6．3　创建和使用Tuple　67
4．7　定义有用的迭代器　69
4．8　使用Dictionaries 来索引数据　70
第　2 部分 开始着手于数据　71
第5　章 使用真实数据工作　73
5．1　上传、流化并采样数据　74
5．1．1　把少量数据上传至内存　75
5．1．2　把大量数据流化放入内存　76
5．1．3　采样数据　77
5．2　以结构化的平面文件形式来访问数据　78
5．2．1　从文本文件中读取　79
5．2．2　读取CSV 定界的格式　80
5．2．3　读取Excel 和其他的微软办公文件　82
5．3　以非结构化文件的形式来发送数据　83
5．4　管理来自关系型数据库中的数据　86
5．5　与来自NoSQL 数据库中的数据进行交互　87
5．6　访问来自Web 的数据　88
第6　章 整理你的数据　92
6．1　兼顾NumPy 和pandas　93
6．1．1　知道什么时候使用NumPy　93
6．1．2　知道什么时候使用pandas　93
6．2　验证你的数据　95
6．2．1　了解你的数据中有什么　95
6．2．2　去重　96
6．2．3　创建数据地图和数据规划　97
6．3　处理分类变量　99
6．3．1　创建分类变量　100
6．3．2　重命名层级　102
6．3．3　组合层级　102
6．4　处理你数据中的日期　104
6．4．1　格式化日期和时间值　104
6．4．2　使用正确的时间转换　105
6．5　处理丢失值　106
6．5．1　寻找丢失的数据　106
6．5．2　为丢失项编码　107
6．5．3　为丢失数据估值　108
6．6　交叉分析：过滤并选取数据　109
6．6．1　切分行　109
6．6．2　切分列　110
6．6．3　切块　110
6．7　连接和变换　111
6．7．1　增加新的实例和变量　112
6．7．2　移除数据　113
6．7．3　排序和搅乱　114
6．8　在任何层次聚合数据　115
第7　章 数据整形　117
7．1　使用HTML 页面来工作　118
7．1．1　解析XML 和HTML　118
7．1．2　使用XPath 来抽取数据　119
7．2　使用原始文本来工作　120
7．2．1　处理Unicode 码　120
7．2．2　词干提取和停止词移除　122
7．2．3　介绍正则表达式　124
7．3　使用并超越词袋模型　126
7．3．1　理解词袋模型　127
7．3．2　用n 元文法模型（n-grams）工作　128
7．3．3　实现TF-IDF 变换　130
7．4　使用图数据来工作　131
7．4．1　理解邻接矩阵　131
7．4．2　使用NetworkX 基础　132
第8　章 将你所知的付诸于实践　134
8．1　将问题和数据置于上下文中去理解　135
8．1．1　评估数据科学问题　136
8．1．2　研究方案　136
8．1．3　构想出假设　137
8．1．4　准备数据　138
8．2　思考创建特征的艺术　138
8．2．1　定义特征创建　138
8．2．2　组合变量　139
8．2．3　理解分级和离散化　140
8．2．4　使用指示变量　140
8．2．5　变换分布　140
8．3　在数组上执行运算　141
8．3．1　使用向量化　141
8．3．2　在向量和矩阵上执行简单的算法　142
8．3．3　执行矩阵向量乘法　142
8．3．4　执行矩阵乘法　143
第3　部分 把不可见的东西可视化　145
第9　章 获得MatPlotLib 的速成课程　147
9．1　开始使用图表　148
9．1．1　定义标图　148
9．1．2　画多线条和多标图　149
9．1．3　保存你的工作　149
9．2　设置轴、刻度和网格　150
9．2．1　得到轴　151
9．2．2　格式化轴　151
9．2．3　添加网格　152
9．3　定义线条外观　153
9．3．1　使用线条样式工作　153
9．3．2　使用颜色　155
9．3．3　添加标记　155
9．4　使用标签、注释和图例　157
9．4．1　添加标签　158
9．4．2　注释图表　158
9．4．3　创建图例　159
第　10 章 将数据可视化　161
10．1　选择合适的图表　162
10．1．1　用饼图展示整体的局部组成　162
10．1．2　用柱状图来创建比较　163
10．1．3　用直方图来展示分布　164
10．1．4　使用箱线图来描绘组　166
10．1．5　使用散点图看数据模式　167
10．2　创建高级的散点图　168
10．2．1　描绘组群　168
10．2．2　展示关联　169
10．3　标绘时间序列　171
10．3．1　在轴上表示时间　171
10．3．2　标绘随时间的趋势　172
10．4　标绘地理数据　174
10．5　把图做可视化　176
10．5．1　开发无向图　176
10．5．2　开发有向图　177
第　11 章 理解工具　180
11．1　使用IPython 控制台　181
11．1．1　与屏幕文本交互　181
11．1．2　改变窗口外观　182
11．1．3　获取Python 帮助　184
11．1．4　获取IPython 帮助　185
11．1．5　使用魔法函数　186
11．1．6　探索对象　187
11．2　使用IPython Notebook　188
11．2．1　使用样式来工作　189
11．2．2　重启内核　190
11．2．3　恢复检查点　191
11．3　执行多媒体和图像整合　192
11．3．1　嵌入标图和其他图片　192
11．3．2　从在线网站上加载例子　193
11．3．3　获取在线图像和多媒体　193
第4　部分 处理数据　195
第　12 章 拓展Python 的能力　197
12．1　玩转Scikit-learn　198
12．1．1　理解Scikit-learn 中的类　198
12．1．2　为数据科学定义应用　199
12．2　执行散列法　202
12．2．1　使用散列函数　202
12．2．2　演示散列法　203
12．2．3　使用确定性选择来工作　205
12．3　考虑计时和性能　206
12．3．1　用timeit 来做基线检测　207
12．3．2　使用内存剖析器来工作　209
12．4　并行运行　210
12．4．1　执行多核并行化　211
12．4．2　演示多核处理　212
第　13 章 探索数据分析　214
13．1　EDA 方法　215
13．2　为Numeric 数据定义描述性的统计量　216
13．2．1　度量集中化趋势　217
13．2．2　测量方差和区间　217
13．2．3　使用分位数来工作　218
13．2．4　定义正态化度量　219
13．3　为分类型数据计数　220
13．3．1　理解频率　220
13．3．2　创建列联表　221
13．4　为EDA 创建应用可视化　222
13．4．1　检查箱线图　222
13．4．2　在箱线图之后执行t检验　223
13．4．3　观察平行坐标　224
13．4．4　为分布作图　225
13．4．5　标绘散点图　226
13．5　理解相关性　228
13．5．1　使用协方差和关联性　228
13．5．2　使用非参数相关性　230
13．5．3　考虑表格的卡方检验　230
13．6　修改数据分布　231
13．6．1　使用正态分布　232
13．6．2　创建Z 评分标准化　232
13．6．3　转换其他的著名分布　232
第　14 章 降维　234
14．1　理解SVD　235
14．1．1　寻求降维　236
14．1．2　使用SVD 来测量不可见的信息　237
14．2　执行因子和主成分分析　238
14．2．1　考虑心理测量模型　239
14．2．2　寻找隐因子　239
14．2．3　使用成分，而不是因子　240
14．2．4　达成降维　240
14．3　理解一些应用　241
14．3．1　用PCA 来识别人脸　241
14．3．2　用NMF 来提取主题　244
14．3．3　推荐电影　246
第　15 章 聚类　249
15．1　用K-means 聚类　251
15．1．1　理解基于质心的算法　251
15．1．2　创建使用图像数据的例子　253
15．1．3　寻找优化解决方案　254
15．1．4　大数据聚类　257
15．2　执行层次聚类　258
15．3　超越圆形簇：DBScan　261
第　16 章 检测数据中的异常点　265
16．1　考虑异常检测　266
16．1．1　找出更多可能出错的地方　267
16．1．2　理解异常数据和新奇的数据　268
16．2　检验简单的单变量法　268
16．2．1　利用高斯分布　270
16．2．2　做出假设并检验　270
16．3　开发多变量方法　271
16．3．1　使用主成分分析　272
16．3．2　使用聚类分析　273
16．3．3　使用SVM 将异常检测自动化　274
第5　部分 从数据中学习　275
第　17 章 探索4 个简单又有效的算法　277
17．1　猜测数字：线性回归　277
17．1．1　定义线性模型家族　278
17．1．2　使用更多变量　279
17．1．3　理解限制和问题　280
17．2　转移到逻辑回归　281
17．2．1　应用逻辑回归　281
17．2．2　考虑有更多类的时候　282
17．3　让事情像朴素贝叶斯（Na veBayes）一样简单　283
17．3．1　发现朴素贝叶斯并不是那么朴素　285
17．3．2　预测文本分类　286
17．4　使用最近邻来延迟学习　287
17．4．1　观察邻居之后做预测　288
17．4．2　明智地选择k 参数　290
第　18 章 执行交叉验证、选择和优化　291
18．1　关于拟合模型问题的思考　292
18．1．1　理解偏差和方差　293
18．1．2　定义挑选模型的策略　294
18．1．3　划分训练集和测试集　296
18．2　交叉验证　299
18．2．1　使用k 折交叉验证　299
18．2．2　复杂数据的分层采样　300
18．3　像专业人士那样选择变量　302
18．3．1　通过单变量度量来选择　302
18．3．2　使用贪婪搜索　303
18．4　提升你的超参数　304
18．4．1　实现网格搜索　305
18．4．2　尝试随机化搜索　309
第　19 章 用线性和非线性技巧增加复杂性　311
19．1　使用非线性变换　312
19．1．1　执行变量变换　312
19．1．2　创建变量间的相互作用　314
19．2　正则化线性模型　317
19．2．1　依靠Ridge 回归（L2）　318
19．2．2　使用Lasso（L1）　319
19．2．3　利用规范化　319
19．2．4　组合L1 和L2：Elasticnet　320
19．3　逐块与大数据战斗　320
19．3．1　当数据过多时来做决定　321
19．3．2　实现随机梯度下降　321
19．4　理解支持向量机　323
19．4．1　依靠一种计算方法　324
19．4．2　修正很多新参数　327
19．4．3　用SVC 分类　328
19．4．4　走向非线性是简单的　333
19．4．5　用SVR 来执行回归　334
19．4．6　用SVM 创建随机（stochastic）解决方案　336
第　20 章 理解多数的力量　340
20．1　以朴素的决策树开始　341
20．1．1　理解决策树　341
20．1．2　创建分类和回归树　343
20．2　让机器学习得以应用　346
20．2．1　使用随机森林分类器来工作　348
20．2．2　使用随机森林回归器来工作　349
20．2．3　优化随机森林　349
20．3　Boosting 预测　351
20．3．1　了解多个弱预测器将胜出　351
20．3．2　创建梯度推进分类器　352
20．3．3　创建梯度推进回归器　353
20．3．4　使用GBM 超参数　353
第6　部分 十大系列专题　355
第　21 章 10 个必不可少的数据科学资源集　357
21．1　用数据科学周刊获得深入了解　358
21．2　在U Climb Higher 上获取资源列表　358
21．3　用KDnuggets 来获得一个良好的起点　359
21．4　访问数据科学中心上的巨型资源列表　359
21．5　从专家处获得开源数据科学情报　360
21．6　用Quora 来定位到免费的学习资源　360
21．7　在Conductrics 上接收高级主题的帮助　361
21．8　从立志数据科学家中学习新技巧　361
21．9　在AnalyticBridge 上寻找数据智能和分析资源　362
21．10　专注于Jonathan Bower的开发者资源　362
第　22 章 10 个你应该接受的挑战　364
22．1　迎接数据科学伦敦+Scikit-learn 的挑战　365
22．2　预测泰坦尼克号上的幸存者　366
22．3　寻找满足你需求的Kaggle竞赛　366
22．4　磨练你的过拟合策略　367
22．5　涉猎MovieLens 数据集　367
22．6　清除垃圾邮件　368
22．7　使用手写信息工作　369
22．8　使用图片工作　370
22．9　分析Amazon．com 审查　371
22．10　与巨图交互　371
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据科学入门
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>从芯片到云端：Python物联网全栈开发实践
第1章  物联网简介	1
1.1  物联网定义	1
1.2  物联网发展趋势	1
1.3  物联网应用与技术	2
1.3.1  物联网核心价值	2
1.3.2  物联网发展阶段	3
1.3.3  物联网分层	5
1.3.4  物联网数据传输与网络拓扑	5
1.3.5  物联网实施所需技术栈	8
1.3.6  标准、现状与未来	10
1.4  本章小结	16
第2章  Python语言基础	17
2.1  Python的由来与特征	19
2.1.1  概述	19
2.1.2  设计定位与哲学	19
2.1.3  优点与缺点	20
2.2  Python与物联网开发	22
2.3  获取Python资源	24
2.3.1  Python主程序	24
2.3.2  Python文档	24
2.3.3  Python PyPI	24
2.4  Python解释器运行环境	26
2.4.1  REPL交互模式	26
2.4.2  直接运行与模块运行	26
2.4.3  脚本文件直接运行	27
2.4.4  源程序文字编码与结束符	28
2.5  Python类型与语法	29
2.5.1  动态类型	29
2.5.2  传值与传引用	30
2.5.3  数据类型	31
2.5.4  内置类型	32
2.5.5  内置类型的普适操作	34
2.5.6  数值类型	35
2.5.7  布尔类型	37
2.5.8  迭代器类型	37
2.5.9  生成器类型	38
2.5.10  yield表达式	39
2.5.11  序列类型	39
2.5.12  set集合类型	54
2.5.13  映射类型	55
2.5.14  其他类型	56
2.5.15  控制流	59
2.5.16  内置函数	61
2.5.17  用户自定义函数	62
2.5.18  模块	65
2.5.19  输入/输出	68
2.5.20  面向对象编程	74
2.5.21  进程和线程	82
2.5.22  错误和异常	90
2.6  Python标准库概览	93
2.7  本章小结	94
第3章  Python语言进阶	95
3.1  HOWTO：常见任务和解决方案	95
3.1.1  数据类型转换	96
3.1.2  数据的调试打印	100
3.1.3  数据类型资源优化	102
3.1.4  数据结构与算法	102
3.1.5  数据缓存	103
3.1.6  数据多路复用和解复用	104
3.1.7  数据序列化和反序列化	107
3.1.8  数据压缩和解压缩	119
3.1.9  数据加密	120
3.1.10  数据传输	121
3.1.11  数据后处理	121
3.1.12  数据持久化	121
3.1.13  数据交换	122
3.2  HOWTO：函数式编程	123
3.2.1  高阶函数	123
3.2.2  map函数	124
3.2.3  reduce函数	124
3.2.4  filter函数	124
3.2.5  sorted函数	125
3.2.6  返回函数	125
3.2.7  闭包	126
3.2.8  匿名函数	126
3.2.9  装饰器	127
3.3  HOWTO：并发运行模型	131
3.3.1  协程	131
3.3.2  I/O模型	134
3.4  HOWTO：日期与时间	136
3.4.1  类型转换	136
3.4.2  时区的处理	138
3.5  Python版本迁移	139
3.5.1  Python 2与Python 3的区别	140
3.5.2  Python 2到Python 3的流程	140
3.5.3  多个Python版本共存	140
3.5.4  virtualenv	141
3.5.5  Windows多个版本共存	141
3.5.6  Linux多个版本共存	142
3.6  其他常见技巧	143
3.6.1  常数类型的模拟	143
3.6.2  枚举类型的模拟	143
3.6.3  开发自定义模块	144
3.7  Python与其他语言	145
3.8  Python语言扩展	151
3.8.1  C语言扩展Python	151
3.8.2  ctypes访问Windows DLL	153
3.8.3  Jython访问Java类	154
3.8.4  IronPython访问.NET	155
3.9  Python加速	157
3.9.1  PyPy	158
3.9.2  Cython	159
3.9.3  PyCUDA	159
3.9.4  PyOpenCL	159
3.9.5  Theano	159
3.9.6  Nuitka	159
3.10  本章小结	160
第4章  嵌入式系统开发	161
4.1  嵌入式系统硬件分类	162
4.1.1  MCU	162
4.1.2  MPU	163
4.1.3  DSP	163
4.1.4  SMP	164
4.1.5  异构大小核	164
4.1.6  FPGA原型	165
4.1.7  SoPC	165
4.1.8  GPU	167
4.1.9  哈佛结构和冯•诺依曼结构	168
4.2  电路原型设计	168
4.2.1  集成电路设计流程	170
4.2.2  模拟电路原型设计	170
4.2.3  数字电路原型设计	175
4.3  常见嵌入式微控制器（MCU）	179
4.3.1  MCU市场状况	179
4.3.2  Arduino/Wiring	180
4.3.3  ARM mbed	181
4.3.4  设计专属架构和专属MCU	182
4.3.5  ARM MCU差异化竞争	182
4.4  常见嵌入式处理器和主板	184
4.4.1  ARM架构	185
4.4.2  其余的ARM Linux主板	188
4.4.3  MIPS开发板	190
4.4.4  x86 mini-ITX	191
4.5  常见传感器和执行器	192
4.5.1  虚拟传感器	193
4.5.2  智能传感器	193
4.5.3  专用传感器	194
4.5.4  执行器	195
4.6  物联网通信集成电路	196
4.7  嵌入式系统开发语言演进	197
4.7.1  从汇编到嵌入式C	197
4.7.2  从C到C++	199
4.7.3  压缩C++的系统消耗	199
4.7.4  C++适合物联网开发	200
4.8  C/C++的编程模式和技巧	204
4.8.1  C/C++设计模式	205
4.8.2  回调函数	206
4.8.3  有限状态机模型	209
4.8.4  善用结构体	211
4.8.5  C/C++协程	214
4.9  开发生态选择	215
4.9.1  工业标准与厂家私有指令集架构	215
4.9.2  硬件与软件平台选择	215
4.9.3  编译器选择	216
4.10  常见操作系统	217
4.10.1  无操作系统	217
4.10.2  RTOS的优势	218
4.10.3  uC/OS	219
4.10.4  Keil RTX	219
4.10.5  mbed RTOS与mbed OS	220
4.10.6  FreeRTOS	221
4.10.7  Linux是开发复杂联网设备的现实选择	222
4.11  物联网中间件	227
4.11.1  WSN堆栈	227
4.11.2  TCP/IP	227
4.11.3  USB	227
4.11.4  FAT/FS	228
4.11.5  GUI	228
4.11.6  Terminal	228
4.11.7  MQTT	228
4.11.8  CoAP	229
4.12  物联网安全性	230
4.12.1  安全相关芯片	230
4.12.2  安全中间件	231
4.12.3  Python安全算法	232
4.13  设备固件更新	232
4.13.1  固件更新技术发展史	232
4.13.2  本地固件更新	234
4.13.3  远程固件更新	234
4.13.4  固件升级定制	234
4.14  各类串口实现联网	235
4.14.1  串口协议的选择	235
4.14.2  模拟串口设备	236
4.14.3  其他类型虚拟设备	238
4.14.4  ISP编程器	238
4.14.5  串口设备监控器	239
4.15  本章小结	239
第5章  设备连接和编程接口	240
5.1  设备连接概述	240
5.1.1  嵌入式系统连接层次	240
5.1.2　选择正确的连接方案	241
5.1.3  具体落实连接设计	241
5.1.4  本章内容安排	242
5.2  连接能力汇总	242
5.2.1  连接由芯片开始	243
5.2.2  芯片内部系统总线	245
5.2.3  芯片间连接技术	246
5.2.4  设备间连接	249
5.2.5  设备组网	250
5.2.6  设备组网与联网的无线技术	253
5.2.7  连接性回顾	266
5.3  Linux文件系统	266
5.3.1  设备即文件	266
5.3.2  设备文件系统	267
5.3.3  Linux设备文件的演变	268
5.3.4  文件I/O操作	271
5.3.5  Linux硬件编程	272
5.4  并行接口	273
5.4.1  老旧的PC并行接口	274
5.4.2  高速总线	274
5.4.3  GPIO	274
5.4.4  Linux访问GPIO	275
5.4.5  GPIO的Python包	276
5.5  串行接口	277
5.5.1  异步通信串行口	277
5.5.2  I2C总线	284
5.5.3  SPI总线	290
5.5.4  与其他硬件平台相关的Python包	294
5.6  USB总线	296
5.6.1  USB Endpoints	297
5.6.2  USB Device/Host/OTG	297
5.6.3  USB 3.0	297
5.6.4  libUSB	297
5.6.5  PyUSB	298
5.6.6  标准化USB桥接	299
5.6.7  与USB相关的其他设计	301
5.7  Linux网络设备驱动	301
5.7.1  TCP/IP套接字编程	301
5.7.2  IEEE 802.3到IEEE 802.11	302
5.7.3  网络通信实现方案	302
5.7.4  私有通信协议栈	305
5.7.5  短距离无线连接	307
5.8  工业总线	310
5.8.1  CAN总线	310
5.8.2  LIN总线	312
5.8.3  其他ASIC	313
5.8.4  定制Python扩展	313
5.8.5  Windows DLL	314
5.9  本章小结	314
第6章  嵌入式Python虚拟机	315
6.1  嵌入式高级语言平台大荟萃	315
6.1.1  高级语言与二次开发	315
6.1.2  BASIC	319
6.1.3  Java	319
6.1.4  Lua	322
6.1.5  JavaScript	322
6.1.6  .NET	323
6.2  前一代Python虚拟机	323
6.2.1  Telit GPRS模块	323
6.2.2  Symbian	325
6.2.3  Windows CE	325
6.2.4  OpenMoko	325
6.3  深嵌入式Python平台	326
6.3.1  LEGO EV3	326
6.3.2  TinyPy	326
6.3.3  嵌入式Python的局限	327
6.4  PyMite	328
6.4.1  硬件平台	328
6.4.2  维护者	329
6.4.3  pymbed分支	329
6.4.4  开发现状	331
6.4.5  文档	332
6.4.6  源码树	333
6.4.7  使用流程	335
6.4.8  实践	336
6.4.9  工程小结	337
6.4.10  网络资源	338
6.5  VIPER/Zerynth	338
6.5.1  硬件平台	339
6.5.2  Zerynth Studio	340
6.5.3  与标准Python的区别	341
6.5.4  快速启动	342
6.5.5  坎坷的使用过程	342
6.5.6  Zerynth目录结构	343
6.5.7  硬件相关库	344
6.5.8  其他特性	355
6.6  MicroPython	356
6.6.1  工程背景知识	356
6.6.2  在线评估网页	358
6.6.3  官方硬件平台分支	358
6.6.4  衍生项目	359
6.6.5  UNIX版本	360
6.6.6  MicroPython库	363
6.6.7  STM32HAL分支	365
6.6.8  NUCLEO-F401RE适配	367
6.6.9  pyboard评估	372
6.6.10  异步处理和中断处理	389
6.6.11  中断处理的普遍问题	392
6.6.12  使用心得	395
6.6.13  商品化与知识产权	396
6.6.14  BBC microbit	396
6.7  Linux与Python	398
6.7.1  Linux中Python的运行环境	398
6.7.2  交叉编译CPython	401
6.7.3  交叉编译MicroPython	402
6.7.4  Jython运行环境	404
6.7.5  Android SL4A	406
6.8  本章小结	407
第7章  Python应用APP	408
7.1  基于字符的人机界面	409
7.1.1  命令行参数	409
7.1.2  字符终端开发	410
7.1.3  ncurses	411
7.2  桌面GUI开发	412
7.2.1  Tkinter	413
7.2.2  wxPython	414
7.2.3  Boa Constructor	415
7.2.4  wxGlade	416
7.2.5  PyGTK	417
7.2.6  PyQt	419
7.2.7  PySide	420
7.2.8  Enthought	421
7.2.9  Cocoa+PyObjC	423
7.2.10  Java AWT	424
7.2.11  IronPython与WPF	425
7.2.12  其他UI	425
7.3  本地Web GUI	426
7.3.1  与WebKit相关的Python包	427
7.3.2  OneRing	427
7.3.3  Pyjs	427
7.3.4  Python Flexx	428
7.4  本地可执行文件	429
7.4.1  Linux可执行文件	429
7.4.2  Mac OS X应用程序包	430
7.4.3  Windows可执行文件	430
7.4.4  pyinstaller	430
7.4.5  py2exe	430
7.4.6  py2app	430
7.4.7  cx_Freeze	431
7.4.8  Windows系统服务	431
7.4.9  Windows定时任务	432
7.4.10  Linux系统服务	433
7.4.11  Linux定时任务	435
7.5  移动APP开发	436
7.5.1  响应式网页	437
7.5.2  PhoneGAP应用开发	437
7.5.3  SL4A	437
7.5.4  QPython开发	441
7.5.5  Kivy	443
7.5.6  其他开发方式	449
7.6  本章小结	449
第8章  Python开发辅助支持	451
8.1  物联网开发需要不断优化	452
8.2  专属小工具	452
8.2.1  单位转化器	453
8.2.2  内码转换器	454
8.2.3  其他编码转换	455
8.3  原型验证	458
8.4  代码生成器	459
8.5  软件测试	461
8.5.1  unittest单元测试	462
8.5.2  socket压力测试	462
8.5.3  urllib2远程记录	463
8.5.4  PCBA测试	466
8.6  文档生成器	468
8.6.1  文档格式	469
8.6.2  文档生成工具	473
8.7  文档操纵	477
8.7.1  Doc文档操纵	477
8.7.2  Excel表格操纵	478
8.8  国际化与本地化	479
8.8.1  gettext	479
8.8.2  Web多语种切换	482
8.8.3  字库文件生成器	482
8.8.4  GB2312点阵字库提取	482
8.8.5  TTF字库提取	483
8.9  配置管理	484
8.9.1  软件配置管理	484
8.9.2  软件配置管理自动化	485
8.9.3  Git Bash	485
8.9.4  Dulwich/Gittle包	485
8.9.5  Python Subversion包	486
8.9.6  watchdog系统监控	486
8.10  数据与素材处理	486
8.10.1  二维码显示	486
8.10.2  多媒体相关软件包	490
8.10.3  地理位置	494
8.11  通信报文分析	495
8.11.1  PyShark	495
8.11.2  pypcapfile	497
8.11.3  scapy和scapy3k	497
8.11.4  pcap Web分析	497
8.12  与Arduino/mbed相关的Python包	497
8.12.1  Arduino Prototyping	498
8.12.2  pyFirmata	501
8.12.3  Py2B	501
8.12.4  CmdMessager	501
8.12.5  mbed	504
8.12.6  mbed RPC	504
8.12.7  mbed-ls	505
8.12.8  Python-mbedtls	507
8.12.9  Python-xbee	508
8.13  虚拟仪器	509
8.13.1  实时显示波形	510
8.13.2  Instrumentino	510
8.13.3  Vipy	511
8.13.4  PyVISA	511
8.13.5  Pythics	512
8.14  3D/VR/AR	512
8.14.1  PyOpenGL	513
8.14.2  PySoy	514
8.14.3  VPython	514
8.14.4  Printrun 3D打印	514
8.15  本章小结	515
第9章  物联网服务器端设计	516
9.1  物联网计算模型	517
9.1.1  云计算	517
9.1.2  Web PaaS与IoT PaaS	518
9.1.3  IoT PaaS供应商	518
9.1.4  PaaS/IaaS混合架构	524
9.1.5  雾计算	525
9.2  物联网与互联网设计异同	526
9.2.1  基础架构	526
9.2.2  标准化程度	527
9.2.3  业务模式	527
9.2.4  系统构成	527
9.2.5  设备接入协议	528
9.2.6  数据特性	529
9.2.7  系统架构	530
9.2.8  数据持久层	532
9.2.9  大数据分析架构	534
9.2.10  业务耦合与分离	534
9.2.11  业务与数据融合	535
9.2.12  认证授权与计费	535
9.3  物联网网关与边缘服务器	535
9.3.1  Python socket服务器	536
9.3.2  pyserial RFC2217	536
9.3.3  SubGHz网关panStamp	537
9.3.4  Rascal micro	538
9.3.5  Java IoT网关	539
9.4  物联网设备接入协议	540
9.4.1  异步通信框架Twisted	541
9.4.2  Twisted 套接字服务器设计	544
9.4.3  物联网专用协议	558
9.4.4  CoAP	560
9.4.5  MQTT	564
9.4.6  mosquitto/paho	567
9.4.7  REST API	572
9.4.8  服务器数据推送技术	572
9.5  高可用性与高并发性	575
9.5.1  并行与并发计算	575
9.5.2  网络I/O模型分类	575
9.5.3  架构优化的路径	576
9.5.4  关系数据库系统	576
9.5.5  SQL/NoSQL/NewSQL	578
9.5.6  Redis	579
9.5.7  MongoDB	580
9.5.8  时序数据库	581
9.5.9  消息队列	583
9.6  业务与数据融合	585
9.6.1  网站权限管理	585
9.6.2  认证授权与计费	586
9.6.3  OpenID	587
9.6.4  OAUTH	587
9.6.5  OpenID与OAUTH的异同	588
9.6.6  社交化硬件	588
9.7  Web开发框架	589
9.7.1  MVC模型	589
9.7.2  Web开发流程	589
9.7.3  Python Web百花齐放	590
9.7.4  Zope	591
9.7.5  Django	591
9.7.6  Flask	592
9.7.7  gevent提升性能	593
9.7.8  异步Web框架Tornado	593
9.7.9  异步网络框架Twisted	593
9.7.10  异步Web框架Cyclone	594
9.7.11  静态网页	594
9.7.12  TLS安全网页	594
9.8  物联网安全	597
9.8.1  物联网安全现状堪忧	598
9.8.2  操作系统安全	598
9.8.3  数据缓存与数据持久层安全	599
9.8.4  Web框架与容器安全	599
9.8.5  远程加载风险	600
9.8.6  Web前端安全	600
9.8.7  传输层安全	601
9.9  服务器交付	603
9.9.1  虚拟机交付	603
9.9.2  Docker容器交付	603
9.9.3  VirtualEnv交付	605
9.10  服务器运维	605
9.10.1  Linux定时任务	606
9.10.2  常见的定时任务	610
9.10.3  系统监控	611
9.10.4  集成化运维软件	613
9.11  物联网系统设计实践	614
9.11.1  服务器端需求分析	614
9.11.2  确定设备接入方式	616
9.11.3  物联网的实时要求	617
9.11.4  EPIC IoT设备服务器	617
9.11.5  EPIC架构优化	619
9.12  本章小结	625
第10章  融合应用与数据分析	626
10.1  物联网是可编程的	626
10.1.1  Web API的“满汉全席”	627
10.1.2  Web API技术演进	628
10.1.3  IoT Web API的必要性	628
10.1.4  Device as a Service	629
10.2  数据统计、分析和挖掘	630
10.2.1  名词解释	630
10.2.2  术语小结	631
10.2.3  大数据分析	632
10.3  采集整理自有数据	633
10.3.1  原始设备数据	633
10.3.2  数据埋点	633
10.3.3  服务器端数据	634
10.3.4  需求确定分析方法	637
10.4  采集第三方数据	637
10.4.1  结构化数据	638
10.4.2  半结构化数据	638
10.4.3  非结构化数据	639
10.4.4  数据录入	644
10.4.5  数据融合	644
10.4.6  数据规整	646
10.4.7  数据交易	646
10.5  数据分析	647
10.5.1  常见编程语言	647
10.5.2  数据分析分类	647
10.5.3  科学计算数据分析工具	651
10.5.4  统计学数据分析工具	658
10.5.5  金融数据分析工具	659
10.5.6  大数据平台与生态	661
10.6  数据可视化	663
10.6.1  数据可视化的发展趋势	664
10.6.2  matplotlib	665
10.6.3  seaborn	665
10.6.4  mpld3	666
10.6.5  Chaco	667
10.6.6  Pygal	668
10.6.7  Plotly	670
10.6.8  TVTK	671
10.6.9  VPython	672
10.6.10  Folium	673
10.6.11  NetworkX	674
10.6.12  Bokeh	676
10.6.13  Mayavi	678
10.6.14  Vispy	680
10.6.15  MoviePy	681
10.6.16  其他新技术	682
10.7  本章小结	682
推荐书目与结束语	683
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>从芯片到云端：Python物联网全栈开发实践
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python 3.5从零开始学
目 录
第1章 进入Python 3.5的精彩世界 1
1.1 Python的起源 2
1.2 Python的应用场合 3
1.3 从2.7到3.5，Python的新特性 5
1.4 如何学习Python 6
1.5 Python环境构建 7
1.5.1 在Windows系统中安装Python 7
1.5.2 在Linux和UNIX系统中安装Python 14
1.5.3 在Mac OS系统中安装Python 17
1.5.4 其他版本 18
1.6 从hello word开始 18
1.7 调试 19
1.8 问题解答 20
1.9 温故知新，学以致用 21
第2章 开启Python之旅 22
2.1 认识程序 23
2.1.1 程序 23
2.1.2 调试 24
2.1.3 语法错误 24
2.1.4 运行错误 24
2.1.5 语义错误 25
2.2 数据类型 25
2.2.1 整型 25
2.2.2 浮点型 27
2.2.3 复数 28
2.2.4 数据类型转换 28
2.2.5 常量 29
2.3 变量和关键字 29
2.3.1 变量 29
2.3.2 变量名称 33
2.4 语句 34
2.5 表达式 35
2.6 运算符和操作对象 36
2.6.1 什么是运算符和操作对象 36
2.6.2 算术运算符 36
2.6.3 比较运算符 38
2.6.4 赋值运算符 39
2.6.5 位运算符 40
2.6.6 逻辑运算符 41
2.6.7 成员运算符 42
2.6.8 身份运算符 43
2.6.9 运算符优先级 43
2.7 字符串操作 45
2.8 注释 49
2.9 调试 50
2.10 问题解答 50
2.11 温故知新，学以致用 51
第3章 列表和元组 52
3.1 通用序列操作 53
3.1.1 索引 53
3.1.2 分片 54
3.1.3 序列相加 57
3.1.4 乘法 58
3.1.5 成员资格 59
3.1.6 长度、最小值和最大值 60
3.2 列表 60
3.2.1 更新列表 61
3.2.2 嵌套列表 65
3.2.3 列表方法 65
3.3 元组 74
3.3.1 tuple函数 75
3.3.2 元组的基本操作 75
3.3.3 元组内置函数 76
3.4 列表与元组的区别 77
3.5 调试 78
3.6 问题解答 79
3.7 温故知新，学以致用 79
第4章 字符串 81
4.1 字符串的基本操作 82
4.2 字符串格式化 83
4.2.1 字符串格式化符号 83
4.2.2 字符串格式化元组 85
4.3 字符串方法 87
4.3.1 find()方法 87
4.3.2 join()方法 88
4.3.3 lower()方法 89
4.3.4 upper()方法 90
4.3.5 swapcase()方法 91
4.3.6 replace()方法 91
4.3.7 split()方法 92
4.3.8 strip()方法 92
4.3.9 translate()方法 93
4.4 调试 94
4.5 问题解答 95
4.6 温故知新，学以致用 95
第5章 字典 96
5.1 字典的使用 97
5.2 创建和使用字典 97
5.2.1 dict函数 98
5.2.2 字典的基本操作 98
5.2.3 字典的格式化字符串 100
5.2.4 字典和列表的区别 100
5.3 字典方法 101
5.3.1 clear()方法 101
5.3.2 copy()方法 102
5.3.3 fromkeys()方法 103
5.3.4 get()方法 104
5.3.5 key in dict方法 105
5.3.6 items()方法 105
5.3.7 keys()方法 105
5.3.8 setdefault()方法 106
5.3.9 update()方法 107
5.3.10 values()方法 107
5.4 调试 108
5.5 问题解答 108
5.6 温故知新，学以致用 109
第6章 条件、循环和其他语句 110
6.1 使用文本编辑器 111
6.2 import的使用 113
6.2.1 import语句 113
6.2.2 使用逗号输出 116
6.3 别样的赋值 116
6.3.1 序列解包 116
6.3.2 链式赋值 118
6.3.3 增量赋值 118
6.4 语句块 119
6.5 条件语句 119
6.5.1 布尔变量的作用 120
6.5.2 if语句 121
6.5.3 else子句 122
6.5.4 elif子句 123
6.5.5 嵌套代码块 124
6.5.6 更多操作 124
6.5.7 断言 127
6.6 循环 128
6.6.1 while循环 128
6.6.2 for循环 129
6.6.3 循环遍历字典元素 131
6.6.4 迭代工具 132
6.6.5 跳出循环 134
6.6.6 循环中的else子句 136
6.7 pass语句 137
6.8 牛刀小试——猜字游戏编写 138
6.9 Python程序调试 140
6.10 问题解答 141
6.11 温故知新，学以致用 141
第7章 函数 142
7.1 调用函数 143
7.2 定义函数 145
7.3 函数的参数 147
7.3.1 必须参数 148
7.3.2 关键字参数 149
7.3.3 默认参数 149
7.3.4 可变参数 153
7.3.5 组合参数 155
7.4 执行流程 155
7.5 形参和实参 156
7.6 变量作用域 157
7.6.1 局部变量 157
7.6.2 全局变量 159
7.7 有返回值和无返回值函数 161
7.8 为什么要有函数 163
7.9 返回函数 163
7.10 递归函数 166
7.11 匿名函数 169
7.12 偏函数 171
7.13 牛刀小试——经典排序之快速排序实现 172
7.14 调试 173
7.15 问题解答 174
7.16 温故知新，学以致用 174
第8章 面向对象编程 176
8.1 理解面向对象 177
8.1.1 什么是面向对象编程 177
8.1.2 面向对象术语简介 177
8.2 类的定义与使用 178
8.2.1 类的定义 178
8.2.2 类的使用 178
8.3 深入类 179
8.3.1 类的构造方法 179
8.3.2 类的访问权限 184
8.4 继承 189
8.5 多态 192
8.6 封装 196
8.7 多重继承 197
8.8 获取对象信息 199
8.9 类的专有方法 202
8.10 牛刀小试——出行建议 207
8.11 调试 209
8.12 问题解答 209
8.13 温故知新，学以致用 210
第9章 异常 211
9.1 什么是异常 212
9.2 异常处理 212
9.3 抛出异常 213
9.4 捕捉多个异常 215
9.5 使用一个块捕捉多个异常 216
9.6 捕捉对象 217
9.7 全捕捉 217
9.8 异常中的else 218
9.9 自定义异常 219
9.10 finally子句 220
9.11 异常和函数 222
9.12 bug的由来 223
9.13 温故知新，学以致用 223
第10章 日期和时间 224
10.1 日期和时间 225
10.1.1 时间戳 225
10.1.2 时间格式化符号 225
10.1.3 struct_time元组 226
10.2 time模块 227
10.2.1 time()函数 227
10.2.2 localtime([secs])函数 227
10.2.3 gmtime([secs])函数 228
10.2.4 mktime(t)函数 228
10.2.5 asctime([t])函数 229
10.2.6 ctime([secs])函数 229
10.2.7 sleep(secs)函数 230
10.2.8 clock()函数 230
10.2.9 strftime(format[, t])函数 231
10.2.10 strptime(string[, format])函数 232
10.2.11 三种时间格式转化 232
10.3 datetime模块 232
10.4 日历模块 236
10.5 牛刀小试——时间大杂烩 237
10.6 调试 242
10.7 温故知新，学以致用 242
第11章 正则表达式 244
11.1 认识正则表达式 245
11.2 re模块 247
11.2.1 re.match函数 247
11.2.2 re.search方法 247
11.2.3 re.match与re.search的区别 248
11.3 贪婪模式和非贪婪模式 249
11.4 替换 250
11.5 编译 250
11.6 温故知新，学以致用 251
第12章 文件操作 252
12.1 打开文件 253
12.1.1 文件模式 254
12.1.2 缓冲 255
12.2 基本文件方法 255
12.2.1 读和写 256
12.2.2 读写行 258
12.2.3 关闭文件 260
12.2.4 文件重命名 261
12.2.5 删除文件 262
12.3 对文件内容进行迭代 262
12.3.1 按字节处理 262
12.3.2 按行操作 263
12.3.3 使用fileinput实现懒加载式迭代 264
12.3.4 文件迭代器 264
12.4 StringIO函数 264
12.5 序列化与反序列化 265
12.5.1 一般序列化与反序列化 266
12.5.2 JSON序列化与反序列化 267
12.6 调试 269
12.7 问题解答 269
12.8 温故知新，学以致用 270
第13章 多线程 271
13.1 线程和进程 272
13.1.1 进程 272
13.1.2 线程 272
13.1.3 多线程与多进程 272
13.2 使用线程 273
13.2.1 全局解释器锁 273
13.2.2 退出线程 274
13.2.3 Python的线程模块 274
13.3 _thread模块 274
13.4 threading模块 277
13.5 线程同步 282
13.6 线程优先级队列 284
13.7 线程与进程比较 287
13.7.1 线程切换 287
13.7.2 计算密集型与IO密集型 288
13.7.3 异步IO 288
13.8 调试 289
13.9 问题解答 289
13.10 温故知新，学以致用 290
第14章 发送和接收电子邮件 291
14.1 电子邮件介绍 292
14.2 发送邮件 293
14.2.1 SMTP发送邮件 293
14.2.2 发送HTML格式的邮件 296
14.2.3 发送带附件的邮件 297
14.2.4 发送图片 298
14.2.5 同时支持HTML和Plain格式 300
14.2.6 加密SMTP 301
14.3 POP3接收邮件 302
14.3.1 POP3下载邮件 302
14.3.2 解析邮件 303
14.4 调试 305
14.5 问题解答 305
14.6 温故知新，学以致用 306
第15章 网络编程 307
15.1 网络编程初识 308
15.2 TCP/IP简介 308
15.3 网络设计模块 309
15.3.1 Socket简介 309
15.3.2 socket模块 309
15.3.3 socket对象（内建）方法 311
15.4 TCP编程 312
15.4.1 客户端 312
15.4.2 服务器 315
15.5 UDP编程 319
15.6 urllib模块 322
15.6.1 GET请求 322
15.6.2 POST请求 323
15.7 调试 324
15.8 问题解答 325
15.9 温故知新，学以致用 325
第16章 操作数据库 326
16.1 数据库介绍 327
16.2 Python数据库API 327
16.2.1 全局变量 328
16.2.2 异常 328
16.2.3 连接和游标 329
16.2.4 类型 330
16.3 数据库操作 331
16.3.1 数据库连接 331
16.3.2 创建数据库表 332
16.3.3 数据库插入 333
16.3.4 数据库查询 334
16.3.5 数据库更新 335
16.3.6 数据库删除 337
16.4 事务 338
16.5 调试 339
16.6 问题解答 339
16.7 温故知新，学以致用 340
第17章 项目实战——爬虫 341
17.1 了解爬虫 342
17.2 爬虫的原理 342
17.3 爬虫常用的几种技巧 343
17.3.1 基本方法 343
17.3.2 使用代理服务器 343
17.3.3 cookie处理 344
17.3.4 伪装成浏览器 344
17.3.5 登录 345
17.4 爬虫示例——抓取豆瓣电影Top250影评数据 345
17.4.1 确定URL格式 346
17.4.2 页面抓取 346
17.4.3 提取相关信息 347
17.4.4 写入文件 348
17.4.5 完善代码 348
17.5 本章小结 351
第18章 项目实战——数据分析 352
18.1 数据持久化 353
18.2 模块化 357
18.2.1 数据库操作模块化 357
18.2.2 文件生成模块化 360
18.2.3 邮件发送模块化 361
18.3 数据分析的实现 365
18.4 项目小结 369
附录 370
A.1 数学函数 371
A.2 随机函数 371
A.3 三角函数 371
A.4 Python字符串内建函数 372
A.5 列表方法 373
A.6 字典内置方法 374
A.7 正则表达式模式 374
结束语 376
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python 3.5从零开始学
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python微服务开发
第 1 章 理解微服务 1
1.1 SOA的起源 2
1.2 单体架构 2
1.3 微服务架构 5
1.4 微服务的益处 7
1.4.1 分离团队的关注点 7
1.4.2 更小的项目 8
1.4.3 扩展和部署 8
1.5 微服务的缺陷 9
1.5.1 不合理的拆分 9
1.5.2 更多的网络交互 9
1.5.3 数据的存储和分享 10
1.5.4 兼容性问题 10
1.5.5 测试 10
1.6 使用Python实现微服务 11
1.6.1 WSGI标准 12
1.6.2 greenlet和gevent模块 13
1.6.3 Twisted和Tornado模块 15
1.6.4 asyncio模块 16
1.6.5 语言性能 18
1.7 本章小结 20
第 2 章 Flask框架 21
2.1 选择Python版本 22
2.2 Flask如何处理请求 23
2.2.1 路由匹配 26
2.2.2 请求 30
2.2.3 响应 32
2.3 Flask的内置特性 33
2.3.1 Session对象 34
2.3.2 全局值 34
2.3.3 信号 35
2.3.4 扩展和中间件 37
2.3.5 模板 38
2.3.6 配置 40
2.3.7 Blueprint 42
2.3.8 错误处理和调试 43
2.4 微服务应用的骨架 47
2.5 本章小结 49
第 3 章 良性循环：编码、测试和写文档 51
3.1 各种测试类型的差异 52
3.1.1 单元测试 53
3.1.2 功能测试 56
3.1.3 集成测试 58
3.1.4 负载测试 59
3.1.5 端到端测试 61
3.2 使用WebTest 62
3.3 使用pytest和Tox 64
3.4 开发者文档 67
3.5 持续集成 71
3.5.1 Travis-CI 72
3.5.2 ReadTheDocs 73
3.5.3 Coveralls 73
3.6 本章小结 75
第 4 章 设计Runnerly 77
4.1 Runnerly应用 77
4.2 单体设计 79
4.2.1 模型 80
4.2.2 视图与模板 80
4.2.3 后台任务 84
4.2.4 身份验证和授权 88
4.2.5 单体设计汇总 92
4.3 拆分单体 93
4.4 数据服务 94
4.5 使用Open API 2.0 95
4.6 进一步拆分 97
4.7 本章小结 98
第 5 章 与其他服务交互 101
5.1 同步调用 102
5.1.1 在Flask应用中使用Session 103
5.1.2 连接池 107
5.1.3 HTTP缓存头 108
5.1.4 改进数据传输 111
5.1.5 同步总结 115
5.2 异步调用 116
5.2.1 任务队列 116
5.2.2 主题队列 117
5.2.3 发布/订阅模式 122
5.2.4 AMQP上的RPC 122
5.2.5 异步总结 122
5.3 测试服务间交互 123
5.3.1 模拟同步调用 123
5.3.2 模拟异步调用 124
5.4 本章小结 127
第 6 章 监控服务 129
6.1 集中化日志 129
6.1.1 设置Graylog 131
6.1.2 向Graylog发送日志 134
6.1.3 添加扩展字段 136
6.2 性能指标 137
6.2.1 系统指标 138
6.2.2 代码指标 140
6.2.3 Web服务器指标 142
6.3 本章小结 143
第 7 章 保护服务 145
7.1 OAuth2协议 146
7.2 基于令牌的身份验证 147
7.2.1 JWT标准 148
7.2.2 PyJWT 150
7.2.3 基于证书的X.509身份验证 151
7.2.4 TokenDealer微服务 154
7.2.5 使用TokenDealer 157
7.3 Web应用防火墙 160
7.4 保护代码 166
7.4.1 断言传入的数据 166
7.4.2 限制应用的范围 170
7.4.3 使用Bandit linter 171
7.5 本章小结 174
第 8 章 综合运用 175
8.1 构建ReactJS仪表盘 176
8.1.1 JSX语法 176
8.1.2 React组件 177
8.2 ReactJS与Flask 181
8.2.1 使用 bower、npm和babel 182
8.2.2 跨域资源共享 185
8.3 身份验证与授权 188
8.3.1 与数据服务交互 188
8.3.2 获取Strava令牌 189
8.3.3 JavaScript身份验证 191
8.4 本章小结 192
第 9 章 打包和运行Runnerly 195
9.1 打包工具链 196
9.1.1 一些定义 196
9.1.2 打包 197
9.1.3 版本控制 204
9.1.4 发布 206
9.1.5 分发 208
9.2 运行所有微服务 210
9.3 进程管理 213
9.4 本章小结 216
第 10 章 容器化服务 217
10.1 何为Docker？ 218
10.2 Docker简介 219
10.3 在Docker中运行Flask 221
10.4 完整的栈——OpenResty、Circus和Flask 223
10.4.1 OpenResty 224
10.4.2 Circus 226
10.5 基于Docker的部署 228
10.5.1 Docker Compose 230
10.5.2 集群和初始化简介 231
10.6 本章小结 233
第 11 章 在AWS上部署 235
11.1 AWS总览 236
11.2 路由：Route53、ELB和AutoScaling 237
11.3 执行：EC2和Lambda 237
11.4 存储：EBS、S3、RDS、ElasticCache和CloudFront 238
11.4.1 消息：SES、SQS和SNS 240
11.4.2 初始化资源和部署：CloudFormation和ECS 241
11.5 在AWS上部署简介 242
11.5.1 创建AWS账号 242
11.5.2 使用CoreOS在EC2上部署 244
11.6 使用ECS 部署 247
11.7 Route53 251
11.8 本章小结 253
第 12 章 接下来做什么？ 255
12.1 迭代器和生成器 256
12.2 协同程序 259
12.3 asyncio库 260
12.4 aiohttp框架 262
12.5 Sanic 262
12.6 异步和同步 264
12.7 本章小结 265
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python微服务开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>实战Python网络爬虫
第1章  理解网络爬虫    1
1.1  爬虫的定义    1
1.2  爬虫的类型    2
1.3  爬虫的原理    2
1.4  爬虫的搜索策略    4
1.5  爬虫的合法性与开发流程    5
1.6  本章小结    6
第2章  爬虫开发基础    7
2.1  HTTP与HTTPS    7
2.2  请求头    9
2.3  Cookies    10
2.4  HTML    11
2.5  JavaScript    12
2.6  JSON    14
2.7  Ajax    14
2.8  本章小结    15
第3章  Chrome分析网站    16
3.1  Chrome开发工具    16
3.2  Elements标签    17
3.3  Network标签    18
3.4  分析QQ音乐    20
3.5  本章小结    23
第4章  Fiddler抓包    24
4.1  Fiddler介绍    24
4.2  Fiddler安装配置    24
4.3  Fiddler抓取手机应用    26
4.4  Toolbar工具栏    29
4.5  Web Session列表    30
4.6  View选项视图    32
4.7  Quickexec命令行    33
4.8  本章小结    34
第5章  爬虫库Urllib    35
5.1  Urllib简介    35
5.2  发送请求    36
5.3  复杂的请求    37
5.4  代理IP    38
5.5  使用Cookies    39
5.6  证书验证    40
5.7  数据处理    41
5.8  本章小结    42
第6章  爬虫库Requests    43
6.1  Requests简介及安装    43
6.2  请求方式    44
6.3  复杂的请求方式    45
6.4  下载与上传    47
6.5  本章小结    49
第7章  Requests-Cache爬虫缓存    50
7.1  简介及安装    50
7.2  在Requests中使用缓存    50
7.3  缓存的存储机制    53
7.4  本章小结    54
第8章  爬虫库Requests-HTML    55
8.1  简介及安装    55
8.2  请求方式    56
8.3  数据清洗    56
8.4  Ajax动态数据抓取    59
8.5  本章小结    61
第9章  网页操控与数据爬取    62
9.1  了解Selenium    62
9.2  安装Selenium    63
9.3  网页元素定位    66
9.4  网页元素操控    70
9.5  常用功能    73
9.6  实战：百度自动答题    80
9.7  本章小结    85
第10章  手机App数据爬取    86
10.1  Appium简介及原理    86
10.2  搭建开发环境    87
10.3  连接Android系统    92
10.4  App的元素定位    97
10.5  App的元素操控    99
10.6  实战：淘宝商品采集    102
10.7  本章小结    107
第11章  Splash、Mitmproxy与Aiohttp    109
11.1  Splash动态数据抓取    109
11.1.1  简介及安装    109
11.1.2  使用Splash的API接口    112
11.2  Mitmproxy抓包    116
11.2.1  简介及安装    116
11.2.2  用Mitmdump抓取爱奇艺视频    116
11.3  Aiohttp高并发抓取    119
11.3.1  简介及使用    119
11.3.2  Aiohttp异步爬取小说排行榜    123
11.4  本章小结    126
第12章  验证码识别    128
12.1  验证码的类型    128
12.2  OCR技术    129
12.3  第三方平台    131
12.4  本章小结    134
第13章  数据清洗    136
13.1  字符串操作    136
13.1.1  截取    136
13.1.2  替换    137
13.1.3  查找    137
13.1.4  分割    138
13.2  正则表达式    139
13.2.1  正则语法    140
13.2.2  正则处理函数    141
13.3  BeautifulSoup数据清洗    144
13.3.1  BeautifulSoup介绍与安装    144
13.3.2  BeautifulSoup的使用示例    146
13.4  本章小结    149
第14章  文档数据存储    150
14.1  CSV数据的写入和读取    150
14.2  Excel数据的写入和读取    151
14.3  Word数据的写入和读取    154
14.4  本章小结    156
第15章  ORM框架    158
15.1  SQLAlchemy介绍与安装    158
15.1.1  操作数据库的方法    158
15.1.2  SQLAlchemy框架介绍    158
15.1.3  SQLAlchemy的安装    159
15.2  连接数据库    160
15.3  创建数据表    162
15.4  添加数据    164
15.5  更新数据    165
15.6  查询数据    166
15.7  本章小结    168
第16章  MongoDB数据库操作    169
16.1  MongoDB介绍    169
16.2  MogoDB的安装及使用    170
16.2.1  MongoDB的安装与配置    170
16.2.2  MongoDB可视化工具    172
16.2.3  PyMongo的安装    173
16.3  连接MongoDB数据库    173
16.4  添加文档    174
16.5  更新文档    175
16.6  查询文档    176
16.7  本章小结    178
第17章  实战：爬取51Job招聘信息    180
17.1  项目分析    180
17.2  获取城市编号    180
17.3  获取招聘职位总页数    182
17.4  爬取每个职位信息    184
17.5  数据存储    188
17.6  爬虫配置文件    190
17.7  本章小结    191
第18章  实战：分布式爬虫——QQ音乐    193
18.1  项目分析    193
18.2  歌曲下载    194
18.3  歌手的歌曲信息    198
18.4  分类歌手列表    201
18.5  全站歌手列表    203
18.6  数据存储    204
18.7  分布式爬虫    205
18.7.1  分布式概念    205
18.7.2  并发库concurrent.futures    206
18.7.3  分布式策略    207
18.8  本章小结    209
第19章  实战：12306抢票爬虫    211
19.1  项目分析    211
19.2  验证码验证    211
19.3  用户登录与验证    214
19.4  查询车次    219
19.5  预订车票    225
19.6  提交订单    227
19.7  生成订单    233
19.8  本章小结    236
第20章  实战：玩转微博    244
20.1  项目分析    244
20.2  用户登录    244
20.3  用户登录（带验证码）    253
20.4  关键词搜索热门微博    259
20.5  发布微博    264
20.6  关注用户    268
20.7  点赞和转发评论    271
20.8  本章小结    277
第21章  实战：微博爬虫软件开发    278
21.1  GUI库及PyQt5的安装与配置    278
21.1.1  GUI库    278
21.1.2  PyQt5安装及环境搭建    279
21.2  项目分析    281
21.3  软件主界面    284
21.4  相关服务界面    288
21.5  微博采集界面    292
21.6  微博发布界面    297
21.7  微博爬虫功能    308
21.8  本章小结    315
第22章  Scrapy爬虫开发    317
22.1  认识与安装Scrapy    317
22.1.1  常见爬虫框架介绍    317
22.1.2  Scrapy的运行机制    318
22.1.3  安装Scrapy    319
22.2  Scrapy爬虫开发示例    320
22.3  Spider的编写    326
22.4  Items的编写    329
22.5  Item Pipeline的编写    330
22.5.1  用MongoDB实现数据入库    330
22.5.2  用SQLAlchemy实现数据入库    332
22.6  Selectors的编写    333
22.7  文件下载    336
22.8  本章小结    339
第23章  Scrapy扩展开发    341
23.1  剖析Scrapy中间件    341
23.1.1  SpiderMiddleware中间件    342
23.1.2  DownloaderMiddleware中间件    344
23.2  自定义中间件    347
23.2.1  设置代理IP服务    347
23.2.2  动态设置请求头    350
23.2.3  设置随机Cookies    353
23.3  实战：Scrapy Selenium爬取豆瓣电影评论    355
23.3.1  网站分析    355
23.3.2  项目设计与实现    357
23.3.3  定义Selenium中间件    359
23.3.4  开发Spider程序    360
23.4  实战：Scrapy Splash爬取B站动漫信息    362
23.4.1  Scrapy_Splash实现原理    363
23.4.2  网站分析    363
23.4.3  项目设计与实现    365
23.4.4  开发Spider程序    367
23.5  实战：Scrapy Redis分布式爬取猫眼排行榜    369
23.5.1  Scrapy_Redis实现原理    369
23.5.2  安装Redis数据库    371
23.5.3  网站分析    372
23.5.4  项目设计与实现    373
23.5.5  开发Spider程序    375
23.6  分布式爬虫与增量式爬虫    377
23.6.1  基于管道实现增量式    378
23.6.2  基于中间件实现增量式    381
23.7  本章小结    384
第24章  实战：爬取链家楼盘信息    386
24.1  项目分析    386
24.2  创建项目    389
24.3  项目配置    389
24.4  定义存储字段    391
24.5  定义管道类    392
24.6  编写爬虫规则    396
24.7  本章小结    400
第25章  实战：QQ音乐全站爬取    402
25.1  项目分析    402
25.2  项目创建与配置    403
25.2.1  项目创建    403
25.2.2  项目配置    403
25.3  定义存储字段和管道类    405
25.3.1  定义存储字段    405
25.3.2  定义管道类    405
25.4  编写爬虫规则    408
25.5  本章小结    413
第26章  爬虫的上线部署    415
26.1  非框架式爬虫部署    415
26.1.1  创建可执行程序    415
26.1.2  制定任务计划程序    417
26.1.3  创建服务程序    421
26.2  框架式爬虫部署    424
26.2.1  Scrapyd部署爬虫服务    424
26.2.2  Gerapy爬虫管理框架    429
26.3  本章小结    434
第27章  反爬虫的解决方案    435
27.1  常见的反爬虫技术    435
27.2  基于验证码的反爬虫    436
27.2.1  验证码出现的情况    437
27.2.2  解决方案    438
27.3  基于请求参数的反爬虫    439
27.3.1  请求参数的数据来源    439
27.3.2  请求参数的查找    440
27.4  基于请求头的反爬虫    441
27.5  基于Cookies的反爬虫    443
27.6  本章小结    447
第28章  自己动手开发爬虫框架    449
28.1  框架设计说明    449
28.2  异步爬取方式    450
28.3  数据清洗机制    455
28.4  数据存储机制    457
28.5  实战：用自制框架爬取豆瓣电影    463
28.6  本章小结    468
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>实战Python网络爬虫
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python3.0 科学计算指南
第 1章 入门 1
1．1 安装和配置说明 1
1．1．1 安装 1
1．1．2 Anaconda 2
1．1．3 配置 3
1．1．4 Python Shell 3
1．1．5 执行脚本 3
1．1．6 获取帮助 4
1．1．7 Jupyter – Python笔记本 4
1．2 程序与控制流 4
1．2．1 注释 5
1．2．2 行连接 5
1．3 基本类型 6
1．3．1 数值类型 6
1．3．2 字符串 6
1．3．3 变量 7
1．3．4 列表 7
1．3．5 列表运算符 8
1．3．6 布尔表达式 8
1．4 使用循环来重复语句 9
1．4．1 重复任务 9
1．4．2 break和else 9
1．5 条件语句 10
1．6 使用函数封装代码 10
1．7 脚本和模块 11
1．7．1 简单的模块—函数的
集合 12
1．7．2 使用模块和命名空间 13
1．8 解释器 13
1．9 小结 14
第 2章 变量和基本数据类型 15
2．1 变量 15
2．2 数值类型 16
2．2．1 整数类型 17
2．2．2 浮点数 17
2．2．3 复数 20
2．3 布尔类型 23
2．3．1 布尔运算符 23
2．3．2 布尔类型转换 24
2．3．3 布尔类型自动转换 24
2．3．4 and和or的返回值 25
2．3．5 布尔值和整数 26
2．4 字符串类型 26
2．5 小结 29
2．6 练习 30
第3章 容器类型 33
3．1 列表 33
3．1．1 切片 34
3．1．2 步长 36
3．1．3 列表修改 36
3．1．4 是否属于列表 37
3．1．5 列表方法 37
3．1．6 原位操作 38
3．1．7 列表合并—zip 39
3．1．8 列表推导 39
3．2 数组 40
3．3 元组 41
3．4 字典 42
3．4．1 创建和修改字典 42
3．4．2 循环遍历字典 43
3．5 集合 44
3．6 容器类型转换 45
3．7 类型检查 46
3．8 小结 47
3．9 练习 47
第4章 线性代数—数组 50
4．1 数组类型概要 50
4．1．1 向量和矩阵 50
4．1．2 索引和切片 52
4．1．3 线性代数运算 52
4．2 数学基础 53
4．2．1 作为函数的数组 54
4．2．2 基于元素的运算 54
4．2．3 形状和维数 54
4．2．4 点运算 55
4．3 数组类型 57
4．3．1 数组属性 57
4．3．2 用列表创建数组 57
4．4 访问数组项 59
4．4．1 基本数组切片 59
4．4．2 使用切片修改数组 61
4．5 数组构造函数 61
4．6 访问和修改形状 62
4．6．1 shape函数 62
4．6．2 维数 63
4．6．3 重塑 63
4．7 叠加 65
4．8 作用于数组的函数 66
4．8．1 通用函数 66
4．8．2 数组函数 68
4．9 SciPy中的线性代数方法 69
4．9．1 使用LU来求解多个线性
方程组 70
4．9．2 使用SVD来解决最小二乘
问题 71
4．9．3 其他方法 72
4．10 小结 72
4．11 练习 73
第5章 高级数组 75
5．1 数组视图和副本 75
5．1．1 数组视图 75
5．1．2 切片视图 76
5．1．3 转置和重塑视图 76
5．1．4 复制数组 76
5．2 数组比较 77
5．2．1 布尔数组 77
5．2．2 数组布尔运算 78
5．3 数组索引 79
5．3．1 使用布尔数组进行索引 79
5．3．2 使用where命令 80
5．4 代码性能和向量化 81
5．5 广播 83
5．5．1 数学视角 83
5．5．2 广播数组 86
5．5．3 典型示例 88
5．6 稀疏矩阵 90
5．6．1 稀疏矩阵格式 91
5．6．2 生成稀疏矩阵 94
5．6．3 稀疏矩阵方法 94
5．7 小结 95
第6章 绘图 96
6．1 基本绘图 96
6．2 格式化 100
6．3 meshgrid和contours函数 103
6．4 图像和等值线 106
6．5 matplotlib对象 108
6．5．1 坐标轴对象 108
6．5．2 修改线条属性 109
6．5．3 注释 110
6．5．4 曲线间的填充面积 111
6．5．5 刻度和刻度标签 112
6．6 绘制三维图 113
6．7 用绘图制作电影 116
6．8 小结 117
6．9 练习 117
第7章 函数 120
7．1 基本原理 120
7．2 形参和实参 121
7．2．1 参数传递—通过位置和
关键字 121
7．2．2 更改实参 122
7．2．3 访问本地命名空间之外
定义的变量 122
7．2．4 默认参数 123
7．2．5 可变参数 124
7．3 返回值 125
7．4 递归函数 126
7．5 函数文档 128
7．6 函数是对象 128
7．7 匿名函数—lambda
关键字 130
7．8 装饰器 131
7．9 小结 132
7．10 练习 133
第8章 类 135
8．1 类的简介 136
8．1．1 类语法 136
8．1．2 _ _init_ _方法 137
8．2 属性和方法 138
8．2．1 特殊方法 139
8．2．2 彼此依赖的属性 143
8．2．3 绑定和未绑定方法 145
8．2．4 类属性 146
8．2．5 类方法 146
8．3 子类和继承 148
8．4 封装 151
8．5 装饰器类 152
8．6 小结 154
8．7 练习 154
第9章 迭代 156
9．1 for语句 156
9．2 控制循环内流程 157
9．3 迭代器 158
9．3．1 生成器 159
9．3．2 迭代器是一次性的 159
9．3．3 迭代器工具 160
9．3．4 递归序列的生成器 161
9．4 加速收敛 163
9．5 列表填充模式 165
9．5．1 使用append方法来填充
列表 165
9．5．2 迭代器中的列表 166
9．5．3 存储生成的值 166
9．6 将迭代器作为列表使用 167
9．6．1 生成器表达式 167
9．6．2 压缩迭代器 168
9．7 迭代器对象 169
9．8 无限迭代 170
9．8．1 while循环 170
9．8．2 递归 171
9．9 小结 171
9．10 练习 172
第 10章 异常处理 175
10．1 什么是异常 175
10．1．1 基本原理 177
10．1．2 用户定义异常 179
10．1．3 上下文管理器—
with语句 180
10．2 查找错误：调试 181
10．2．1 漏洞 182
10．2．2 堆栈 182
10．2．3 Python调试器 183
10．2．4 调试命令 185
10．2．5 IPython调试 186
10．3 小结 187
第 11章 命名空间、范围和模块 188
11．1 命名空间 188
11．2 变量范围 189
11．3 模块 191
11．3．1 简介 191
11．3．2 IPython模块 192
11．3．3 变量_ _name_ _ 193
11．3．4 一些有用的模块 193
11．4 小结 194
第 12章 输入和输出 195
12．1 文件处理 195
12．1．1 文件交互 195
12．1．2 文件是可迭代的 196
12．1．3 文件模式 197
12．2 NumPy方法 198
12．2．1 savetxt 198
12．2．2 loadtxt 198
12．3 Pickling 199
12．4 Shelves 200
12．5 读写Matlab数据文件 200
12．6 读写图像 201
12．7 小结 202
第 13章 测试 203
13．1 手动测试 203
13．2 自动测试 204
13．3 使用unittest包 206
13．4 参数化测试 209
13．5 断言工具 210
13．6 浮点值比较 210
13．7 单元和功能测试 212
13．8 调试 213
13．9 测试发现 213
13．10 测量执行时间 213
13．10．1 用魔法函数计时 214
13．10．2 使用Python的timeit
计时模块 215
13．10．3 用上下文管理器
计时 216
13．11 小结 217
13．12 练习 217
第 14章 综合示例 219
14．1 多项式 219
14．1．1 理论背景 219
14．1．2 任务 220
14．2 多项式类 221
14．3 牛顿多项式 225
14．4 谱聚类算法 226
14．5 解决初始值问题 230
14．6 小结 233
14．7 练习 233
第 15章 符号计算—SymPy 235
15．1 什么是符号计算 235
15．2 SymPy的基本元素 238
15．2．1 符号—所有公式的
基础 238
15．2．2 数字 239
15．2．3 函数 239
15．3 基本函数 241
15．4 符号线性代数 243
15．5 SymPy线性代数方法示例 245
15．6 替换 246
15．7 评估符号表达式 249
15．8 符号表达式转化为数值
函数 250
15．9 小结 252
参考文献 253
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python3.0 科学计算指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python 新手学Django 2.0架站的16堂课（第2版）
目   录
第1堂  网站开发环境的建立    1
1.1  网站的基础知识    1
1.1.1  网站的运行流程    1
1.1.2  Python/Django扮演的角色    3
1.1.3  使用Python/Django建立网站的优势    4
1.2  建立网站开发流程    4
1.2.1  开发流程简介    4
1.2.2  在Windows建立Linux虚拟机    5
1.2.3  在Mac OS安装Linux虚拟机    12
1.2.4  在Linux虚拟机中创建Python Django开发环境    18
1.2.5  设置SSH、PuTTY以及FTP服务器    19
1.2.6  安装Notepad 程序编辑器    23
1.3  活用版本控制系统    27
1.3.1  版本控制系统Git简介    27
1.3.2  申请Bitbucket账号    28
1.3.3  在虚拟机中连接Bitbucket    30
1.3.4  在不同的计算机之间开发同一个网站    32
1.4  其他网站项目开发环境的安装建议    33
1.4.1  在Windows 10创建开发环境    33
1.4.2  在MacOS中创建开发环境    35
1.4.3  在Cloud9中创建开发环境    37
1.4.4  在DigitalOcean VPS中创建开发环境    39
1.5  习题    40
第2堂  Django网站快速入门    41
2.1  个人博客网站规划    41
2.1.1  博客网站的需求与规划    41
2.1.2  产生第一个网站框架    42
2.1.3  Django文件夹与文件解析    44
2.2  创建博客数据表    46
2.2.1  数据库与Django的关系    46
2.2.2  定义数据模型    46
2.2.3  启动admin管理界面    47
2.2.4  读取数据库中的内容    52
2.3  网址对应与页面输出    54
2.3.1  创建网页输出模板Template    54
2.3.2  网址对应urls.py    58
2.3.3  共享模板的使用    60
2.4  高级网站功能的运用    63
2.4.1  JavaScript以及CSS文件的引用    63
2.4.2  图像文件的应用    67
2.4.3  在主网页显示文章摘要    68
2.4.4  博客文章的HTML内容处理    70
2.4.5  Markdown语句解析与应用    73
2.5  习题    75
第3堂  让网站上线    76
3.1  DigitalOcean部署    76
3.1.1  申请账号与创建虚拟主机    76
3.1.2  安装Apache网页服务器及Django执行环境    80
3.1.3  修改settings.py、000-default.conf等相关设置    82
3.1.4  创建域名以及多平台设置    84
3.2  在Heroku上部署    87
3.2.1  Heroku账号申请与环境设置    87
3.2.2  修改网站的相关设置    89
3.2.3  上传网站到Heroku主机    90
3.2.4  Heroku主机的操作    93
3.3  在Google Cloud Platform上部署    94
3.3.1  Google Cloud Platform的介绍    94
3.3.2  Google Computing启用与设置    98
3.3.3  Google App Engine的说明与设置    101
3.4  习题    110
第4堂  深入了解Django的MVC架构    111
4.1  Django的MVC架构简介    111
4.1.1  MVC架构简介    111
4.1.2  Django的MTV架构    112
4.1.3  Django网站的构成以及配合    113
4.1.4  在Django MTV架构下的网站开发步骤    114
4.2  Model简介    115
4.2.1  在models.py中创建数据表    116
4.2.2  在admin.py中创建数据表管理界面    118
4.2.3  在Python Shell中操作数据表    121
4.2.4  数据的查询与编辑    123
4.3  View简介    125
4.3.1  建立简易的HttpResponse网页    126
4.3.2  在views.py中显示查询数据列表    127
4.3.3  网址栏参数处理的方式    128
4.4  Template简介    131
4.4.1  创建Template文件夹与文件    131
4.4.2  传送变量到Template文件中    132
4.4.3  在Template中处理列表变量    135
4.5  最终版本摘要    135
4.6  习题    138
第5堂  网址的对应与委派    139
5.1  Django网址架构    139
5.1.1  URLconf简介    139
5.1.2  委派各个的网址到处理函数    141
5.1.3  urlpatterns的正则表达式语法说明（适用于Django 2.0以前的版本）    144
5.1.4  验证正则表达式设计URL的正确性    147
5.2  高级设置技巧    148
5.2.1  参数的传送    148
5.2.2  include其他整组的urlpatterns设置    149
5.2.3  URLconf的反解功能    149
5.3  习题    150
第6堂  Template深入探讨    151
6.1  Template的设置与运行    151
6.1.1  settings.py设置    151
6.1.2  创建Template文件    153
6.1.3  在Template文件中使用现有的网页框架    154
6.1.4  直播电视网站应用范例    155
6.1.5  在Template中使用static文件    158
6.2  高级Template技巧    160
6.2.1  Template模板的继承    160
6.2.2  共享模板的使用范例    162
6.3  Template语言    163
6.3.1  判断指令    163
6.3.2  循环指令    164
6.3.3  过滤器与其他的语法标记    168
6.4  习题    171
第7堂  Models与数据库    172
7.1  网站与数据库    172
7.1.1  数据库简介    172
7.1.2  规划网站需要的数据库    173
7.1.3  数据表内容设计    176
7.1.4  models.py设计    177
7.2  活用Model制作网站    178
7.2.1  建立网站    178
7.2.2  制作网站模板    180
7.2.3  制作多数据表整合查询网页    182
7.2.4  调整admin管理网页的外观    186
7.3  在Django使用MySQL数据库系统    188
7.3.1  安装开发环境中的MySQL连接环境（Ubuntu）    188
7.3.2  安装开发环境中的MySQL连接环境 (Windows)    189
7.3.3  使用Google云端主机的商用SQL服务器    192
7.4  习题    196
第8堂  网站窗体的应用    197
8.1  网站与窗体    197
8.1.1  HTML
窗体简介    197
8.1.2  活用窗体的标签    200
8.1.3  建立本堂课范例网站的数据模型    202
8.1.4  网站窗体的建立与数据显示    204
8.1.5  接收窗体数据存储于数据库中    206
8.1.6  加上删除帖文的功能    207
8.2  基础窗体类的应用    209
8.2.1  使用POST传送窗体数据    209
8.2.2  结合窗体和数据库    213
8.2.3  数据接收与字段的验证方法    216
8.2.4  使用第三方服务发送电子邮件    219
8.3  模型窗体类ModelForm的应用    223
8.3.1  ModelForm的使用    223
8.3.2  通过ModelForm产生的窗体存储数据    225
8.3.3  为窗体加上防机器人验证机制    226
8.4  习题    231
第9堂  网站的Session功能    232
9.1  Session简介    232
9.2.1  复制Django网站    232
9.1.2  Cookie简介    233
9.1.3  建立网站登录功能    234
9.1.4  Session的相关函数介绍    239
9.2  活用Session    240
9.2.1  建立用户数据表    240
9.2.3  整合Django的信息显示框架Messages Framework    246
9.3  Django auth用户验证    249
9.3.1  使用Django的用户验证系统    249
9.3.2  增加User的字段    252
9.3.3  显示新增加的User字段    254
9.3.4  应用auth用户验证存取数据库    256
9.4  习题    261
第10堂  网站用户的注册与管理    262
10.1  建立网站用户的自动化注册功能    262
10.1.1  django-registration-redux安装与设置    262
10.1.2  创建django-registration-redux所需的模板    263
10.1.3  整合用户注册功能到分享日记网站    267
10.2  Pythonanywhere.com免费Python网站开发环境    271
10.2.1  注册Pythonanywhere.com账号    271
10.2.2  在Pythonanywhere免费网站中建立虚拟环境以及Django网站    278
10.2.3  建立投票网站的基本架构    283
10.3  使用Facebook验证账号操作实践    290
10.3.1  在Pythonanywhere中安装django-allauth与设置    290
10.3.2  到Facebook开发者网页申请验证机制    293
10.3.3  在网站中识别用户的登录状态    298
10.3.4  客户化django-allauth页面    301
10.4  习题    303
第11堂  社交网站应用实践    304
11.1  投票网站的规划与调整    304
11.1.1  网站功能与需求    304
11.1.2  数据表与页面设计    306
11.1.3  网站的转移    309
11.2.4  移动设备的考虑    311
11.2  深入探讨django-allauth    312
11.2.1  django-allauth的Template标签    313
11.2.2  django-allauth的Template页面    314
11.2.3  获取Facebook用户的信息    316
11.3  投票网站功能解析    317
11.3.1  首页的分页显示功能    318
11.3.2  自定义标签并在首页显示目前的投票数    319
11.3.3  使用AJAX和jQuery改进投票的效果    322
11.3.4  避免重复投票的方法    327
11.3.6  新建Twitter账号链接    329
11.4  习题    334
第12堂  电子商店网站实践    335
12.1  打造迷你电商网站    335
12.1.1  复制网站，不要从零开始    335
12.1.2  建立网站所需要的数据表    337
12.1.3  上传照片的方法django-filer    341
12.1.4  把django-filer的图像文件加到数据表中    345
12.2  增加网站功能    348
12.2.1  分类查看产品    348
12.2.2  显示详细的产品内容    352
12.2.3  购物车功能    353
12.2.4  建立订单功能    357
12.3  电子支付功能    365
12.3.1  建立付款流程    366
12.3.2  建立PayPal付款链接    368
12.3.3  接收PayPal付款完成通知    374
12.3.4  测试PayPal付款功能    375
12.4  习题    381
第13堂  全功能电子商店网站django-oscar实践    382
13.1  Django购物网站Oscar的安装与使用    382
13.1.1  电子购物网站模板    382
13.1.2  Django Oscar购物车系统测试网站安装    383
13.2  建立Oscar的应用网站    386
13.2.1  安装前的准备    386
13.2.2  建立网站的域名    387
13.2.3  调整Apache2配置文件    388
13.2.4  建立Django Oscar购物网站项目    389
13.2.5  加上电子邮件的发送功能    397
13.2.6  简单地修改Oscar网站的设置    398
13.2.7  增加PayPal在线付款功能    401
13.3  自定义Oscar网站    406
13.3.1  建立自己的templates，打造客户化的外观    407
13.3.2  网站的中文翻译    416
13.4  习题    417
第14堂  使用Mezzanine快速打造CMS网站    418
14.1  快速安装Mezzanine CMS网站    418
14.1.1  什么是Mezzanine    418
14.1.2  安装Mezzanine    419
14.1.3  安装Mezzanine主题    425
14.1.4  Mezzanine网站的设置与调整    427
14.2  使用Mezzanine建立电子商店网站    429
14.2.1  安装电子购物车套件与建立网站    429
14.2.2  自定义Mezzanine网站的外观    431
14.3  在Heroku部署Mezzanine网站    435
14.4  习题    440
第15堂  名言佳句产生器网站实践    441
15.1  建立网站前的准备    441
15.1.1  准备网站所需的素材    441
15.1.2  图文整合练习    442
15.1.3  建立可随机显示图像的网站    444
15.2  产生器功能的实现    446
15.2.1  建立产生器界面    447
15.2.2  产生唯一的文件名    449
15.2.3  开始合并随后产生图像文件    449
15.2.4  准备多个背景图像文件以供选择    453
15.3  自定义图像文件功能    458
15.3.1  加入会员注册功能    458
15.3.2  建立上传文件的界面    458
15.3.3  上传文件的方法    462
15.3.4  实时产生结果    464
15.4  习题    466
第16堂  课程回顾与你的下一步    467
16.1  善加运用网站资源    467
16.2  部署上线的注意事项    470
16.3  SSL设置实践    472
16.4  程序代码和网站测试的重要性    483
16.5  其他Python框架    486
16.6  你的下一步    486
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python 新手学Django 2.0架站的16堂课（第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python金融编程：快速入门与项目实操
第1部分 基础知识
第1章 初识编程和Python
1.1 程序与编程语言
1.1.1 什么是程序
1.1.2 编程语言的分类
1.2 Python简介
1.2.1 什么是 Python
1.2.2 Python的特点
1.2.3 为什么金融行业喜欢使用Python
1.3 安装Python及相关软件
1.3.1 版本选择：Python 2 与 Python 3
1.3.2 Anaconda
1.3.3 安装 Anaconda
1.3.4 检査是否安装成功
思考与练习
编程练习
第2章 Python程序实例分析
2.1 第一个Python小程序
2.1.1 编写 Hello World 程序
2.1.2 运行 Hello World 程序
2.1.3 使用集成开发环境运行Python程序
2.1.4 使用第三方工具包
2.1.5 学会使用Python的帮助文档
2.2 案例：汇率换算
2.2.1 程序开发过程
2.2.2 Python程序的基本元素分析
思考与练习
编程练习
第3章 变量与数据类型
3.1 变量的定义与运用
3.1.1 为什么需要使用变量
3.1.2 变量的赋值
3.1.3 变量的命名规则
3.1.4 多变量的赋值
3.2 数据类型：数字
3.2.1 数字的基本类型
3.2.2 数字类型的基本操作
3.2.3 布尔类型
3.3 数据类型：字符串
3.3.1 字符串的基本定义
3.3.2 字符串的基本操作
3.3.3 字符串的内置函数
3.3.4 字符串的内置方法
3.4 数据类型的相互转换
3.4.1 査看数据类型
3.4.2 整数与浮点数之间的转换
3.4.3 整数、浮点数与布尔类型之间的转换
3.4.4 数字与字符串之间的转换
3.5 案例：计算资金的时间价值
思考与练习
编程练习
第4章 赋值输入与格式化输出
4.1 赋值输入
4.1.1 input语句的使用
4.1.2 如何获取数字类型的输入
4.2 格式化输出
4.2.1 format方法的概述
4.2.2 输出内容的序号设置
4.2.3 文本内容的格式化输出
4.2.4 数字内容的格式化输出
4.2.5 格式化修饰符和标记的混合使用
4.3 print函数
4.3.1 print函数与format方法的结合使用
4.3.2 print函数的换行属性
4.3.3 利用print函数同时打印多个表达式
4.4 案例：现值计算器升级版
思考与练习
编程练习
第5章 使用注释及其他编程规范
5.1 注释的介绍与运用
5.1.1 为什么需要使用注释
5.1.2 单行注释
5.1.3 多行注释
5.1.4 代码块
5.2 编程规范
5.2.1 标识符
5.2.2 基本代码格式
思考与练习
第6章 条件语句
6.1 程序的结构
6.1.1 流程图的介绍
6.1.2 程序的基本结构
6.1.3 程序的控制语句
6.1.4 关系运算
6.2 条件语句
6.2.1 if语句：单分支结构
6.2.2 if-else语句：双分支结构
6.2.3 if-elif-else语句：多分支结构
6.3 条件语句实例操作：最优投资组合的判断
6.3.1 遍历判断
6.3.2 树形判断
6.3.3 贪婪算法
6.3.4 内置函数 max()
思考与练习
编程练习
第7章 循环结构
7.1 循环结构
7.2 遍历循环结构：for 语句
7.2.1 基本for语句
7.2.2 for-else 语句
7.3 条件循环结构：while 语句
7.3.1 基本 while 语句
7.3.2 while-else 语句
7.4 循环嵌套
7.4.1 for 循环嵌套
7.4.2 while 循环嵌套
7.5 转向语句
7.5.1 break 语句
7.5.2 continue 语句
7.6 空语句：pass 语句
思考与练习
编程练习
第8章函数
8.1 函数的概述
8.1.1 函数的基本概念
8.1.2 函数的功能
8.1.3 函数的来源
8.2 函数的定义及调用
8.2.1 函数的定义
8.2.2 函数的调用
8.2.3 函数的简单应用
8.3 函数的扩展
8.3.1 函数的参数
8.3.2 函数变量的作用域
8.4 匿名函数 lambda
8.4.1 匿名函数
8.4.2 匿名函数的优缺点
8.5 内置函数
8.6 实例操作
思考与练习
编程练习
第9章 列表
9.1 列表的概述
9.1.1 列表的形式
9.1.2 列表的特征
9.2 列表的基本操作
9.2.1 列表的创建
9.2.2 列表的拼接
9.2.3 列表的重复
9.2.4 列表的访问
9.2.5 列表的修改
9.2.6 列表的遍历
9.2.7 列表的成员检査
9.3 列表的函数与方法
9.3.1 列表的基本运算
9.3.2 列表的处理
9.4 元组
9.4.1 元组与列表
9.4.2 元组的创建
9.4.3 元组的基本操作
9.4.4 元组的函数
9.5 实例操作
思考与练习
编程练习
第10章 字典
10.1 字典的概述
10.1.1 字典的形式
10.1.2 字典的特征
10.2 字典的基本操作
10.2.1 字典的创建
10.2.2 字典的访问
10.2.3 字典的添加与修改
10.2.4 字典的遍历
10.2.5 字典的成员检査
10.3 字典的函数与方法
10.3.1 对字典的处理
10.3.2 元素处理
10.4 实例操作
思考与练习
编程练习
第11章 包与模块的导入
11.1 Python程序的组织结构
11.2 创建自己的模块
11.3 导入模块
11.3.1 导入同级目录下的模块
11.3.2 导入不同级目录下的模块
第12 章 面向对象
12.1 面向对象的程序设计
12.1.1 对象与类的基本概念
12.1.2 类的举例
12.2 类的运用
12.2.1 创建类
12.2.2 类的实例化
12.2.3 设置类的默认参数
12.2.4 类的类型
12.3 类的继承
12.3.1 继承类的简介
12.3.2 继承类的语法
12.3.3 继承类的运用
思考与练习
第2部分 Python金融编程的常用库
第13章 NumPy数据结构及运用
13.1 NumPy库简介及导入
13.1.1 NumPy库简介
13.1.2 NumPy库的导入
13.2 数组的创建及其基本属性
13.2.1 一个简单的运用场景
13.2.2 直接创建数组并査看其基本属性
13.2.3 创建等差数组
13.2.4 创建随机数组
13.2.5 创建特殊的数组
13.2.6 根据已有数组来创建新数组
13.2.7 数组的类型的设定与转换
13.3 数组的索引与切片
13.3.1 简单索引
13.3.2 切片的索引与赋值
13.3.3 间隔索引
13.3.4 二维数组的索引与切片
13.3.5 布尔索引
13.3.6 智能索引
13.4 数组的形态操作
13.4.1 数组的重排
13.4.2 数组的转置
13.5 数组的运算
13.5.1 数组和标量之间的运算
13.5.2 数组和数组之间的运算
13.5.3 通用函数
13.6 数组的遍历
13.6.1 索引遍历
13.6.2 元素遍历
思考与练习
编程练习
第14章 Pandas基础：如何分析金融时间序列数据
14.1 Pandas的简介与导入
14.2 金融时间序列数据的导入
14.2.1 数据的基本描述
14.2.2 时间序列数据的导入
14.3 Series与DataFrame
14.3.1 为什么需要 Series 与 DataFrame
14.3.2 DataFrame的基本介绍与索引
14.3.3 利用DataFrame全方位了解数据
14.3.4 DataFrame 的运算
14.4 利用DataFrame 处理金融时间序列数据
14.4.1 时间序列的差分与滞后处理
14.4.2 时间序列缺失值的处理
14.4.3 时间序列的排序
14.4.4 累计成交量、最新市值与移动平均线
思考与练习
编程练习
第15章 数据可视化输出
15.1 Matplotlib 模块简介
15.2各类图形的绘制
15.2.1折线图
15.2.2散点图
15.2.3柱状图
15.2.4同时绘制多种图像
15.3实例运用
15.3.1 实例一：欧式期权价值与标的资产价格
15.3.2 实例二：欧式看涨期权与执行价格
思考与练习
编程练习
第16章 异常处理
16.1 例外与异常信息
16.1.1 程序的例外情况
16.1.2 异常信息
16.2 常见的异常处理
16.2.1 单异常处理
16.2.2 多异常处理
16.3 实例操作
思考与练习
第3部分实战项目
第17章 期权定价模型
17.1 理论背景知识
17.1.1 股票期权的定义
17.1.2 期权的分类
17.1.3 影响期权合约定价的因素
17.1.4 BSM期权定价模型
17.1.5 期权的风险指标
17.2 上证50ETF与上证50ETF期权
17.3 项目的实现
17.3.1 工具包的导入
17.3.2 看涨期权的定义
17.3.3 期权的初始化
17.3.4 实例化运用
17.3.5 风险分析
17.4 总结
编程练习
第18章 寻找最优投资组合
18.1 理论模型
18.1.1 背景知识
18.1.2 马科维茨均值方差模型
18.2 模型的实现
18.2.1 导入模块
18.2.2 导入数据
18.2.3 投资组合产品的权重模拟
18.2.4 确定投资组合的有效前沿
18.2.5 加入无风险资产后的最优市场组合
18.2.6 最优组合配置
18.3 总结
编程练习
第19章 银行板块低估值选股策略
19.1 选股策略的基本思路
19.2 初步整理数据文件
19.2.1 stock_basic:银行股的基本信息
19.2.2 stock_daily:银行股的每日交易状况
19.2.3 daily-basic:银行股每月最后一个交易日的交易状况
19.2.4 index-daily:银行股指数每个交易日的交易状况
19.3 编写自定义库：utils
19.3.1 grouping_ld 函数
19.3.2 grouping 函数
19.3.3 get_w 函数
19.4 策略的实现
19.5 模型的回测
19.6 结果展示
19.7 策略超额收益的稳健性分析
19.8 策略评价
19.9 总结
思考与练习
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python金融编程：快速入门与项目实操
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>贝叶斯方法
目录
第1章　贝叶斯推断的哲学　1
1.1　引言　1
1.1.1　贝叶斯思维　1
1.1.2　贝叶斯推断在实践中的运用　3
1.1.3　频率派的模型是错误的吗？　4
1.1.4　关于大数据　4
1.2　我们的贝叶斯框架　5
1.2.1　不得不讲的实例：抛硬币　5
1.2.2　实例：图书管理员还是农民　6
1.3　概率分布　8
1.3.1　离散情况　9
1.3.2　连续情况　10
1.3.3　什么是　12
1.4　使用计算机执行贝叶斯推断　12
1.4.1　实例：从短信数据推断行为　12
1.4.2　介绍我们的第一板斧：PyMC　14
1.4.3　说明　18
1.4.4　后验样本到底有什么用？　18
1.5　结论　20
1.6　补充说明　20
1.6.1　从统计学上确定两个l值是否真的不一样　20
1.6.2　扩充至两个转折点　22
1.7　习题　24
1.8　答案　24
第2章　进一步了解PyMC　27
2.1　引言　27
2.1.1　父变量与子变量的关系　27
2.1.2　PyMC变量　28
2.1.3　在模型中加入观测值　31
2.1.4　最后……　33
2.2　建模方法　33
2.2.1　同样的故事，不同的结局　35
2.2.2　实例：贝叶斯A B测试　38
2.2.3　一个简单的场景　38
2.2.4　A和B一起　41
2.2.5　实例：一种人类谎言的算法　45
2.2.6　二项分布　45
2.2.7　实例：学生作弊　46
2.2.8　另一种PyMC模型　50
2.2.9　更多的PyMC技巧　51
2.2.10　实例：挑战者号事故　52
2.2.11　正态分布　55
2.2.12　挑战者号事故当天发生了什么？　61
2.3　我们的模型适用吗？　61
2.4　结论　68
2.5　补充说明　68
2.6　习题　69
2.7　答案　69
第3章　打开MCMC的黑盒子　71
3.1　贝叶斯景象图　71
3.1.1　使用MCMC来探索景象图　77
3.1.2　MCMC算法的实现　78
3.1.3　后验的其他近似解法　79
3.1.4　实例：使用混合模型进行无监督聚类　79
3.1.5　不要混淆不同的后验样本　88
3.1.6　使用MAP来改进收敛性　91
3.2　收敛的判断　92
3.2.1　自相关　92
3.2.2　稀释　95
3.2.3　pymc.Matplot.plot()　97
3.3　MCMC的一些秘诀　98
3.3.1　聪明的初始值　98
3.3.2　先验　99
3.3.3　统计计算的无名定理　99
3.4　结论　99
第4章　从未言明的最伟大定理　101
4.1　引言　101
4.2　大数定律　101
4.2.1　直觉　101
4.2.2　实例：泊松随机变量的收敛　102
4.2.3　如何计算Var(Z)　106
4.2.4　期望和概率　106
4.2.5　所有这些与贝叶斯统计有什么关系呢　107
4.3　小数据的无序性　107
4.3.1　实例：地理数据聚合　107
4.3.2　实例：Kaggle的美国人口普查反馈比例预测比赛　109
4.3.3　实例：如何对Reddit网站上的评论进行排序　111
4.3.4　排序！　115
4.3.5　但是这样做的实时性太差了　117
4.3.6　推广到评星系统　122
4.4　结论　122
4.5　补充说明　122
4.6　习题　123
4.7　答案　124
第5章　失去一只手臂还是一条腿　127
5.1　引言　127
5.2　损失函数　127
5.2.1　现实世界中的损失函数　129
5.2.2　实例：优化“价格竞猜”游戏的展品出价　130
5.3　机器学习中的贝叶斯方法　138
5.3.1　实例：金融预测　139
5.3.2　实例：Kaggle观测暗世界 大赛　144
5.3.3　数据　145
5.3.4　先验　146
5.3.5　训练和PyMC实现　147
5.4　结论　156
第6章　弄清楚先验　157
6.1　引言　157
6.2　主观与客观先验　157
6.2.1　客观先验　157
6.2.2　主观先验　158
6.2.3　决策，决策……　159
6.2.4　经验贝叶斯　160
6.3　需要知道的有用的先验　161
6.3.1　Gamma分布　161
6.3.2　威沙特分布　162
6.3.3　Beta分布　163
6.4　实例：贝叶斯多臂老虎机　164
6.4.1　应用　165
6.4.2　一个解决方案　165
6.4.3　好坏衡量标准　169
6.4.4　扩展算法　173
6.5　从领域专家处获得先验分布　176
6.5.1　试验轮盘赌法　176
6.5.2　实例：股票收益　177
6.5.3　对于威沙特分布的专业提示　184
6.6　共轭先验　185
6.7　杰弗里斯先验　185
6.8　当N增加时对先验的影响　187
6.9　结论　189
6.10　补充说明　190
6.10.1　带惩罚的线性回归的贝叶斯视角　190
6.10.2　选择退化的先验　192
第7章　贝叶斯A B测试　195
7.1　引言　195
7.2　转化率测试的简单重述　195
7.3　增加一个线性损失函数　198
7.3.1　收入期望的分析　198
7.3.2　延伸到A B测试　202
7.4　超越转化率：t检验　204
7.4.1　t检验的设定　204
7.5　增幅的估计　207
7.5.1　创建点估计　210
7.6　结论　211
术语表　213
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>贝叶斯方法
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python UNIX 和Linux 系统管理指南
序
前言
第1章　Python简介
为什么要选Python
学习的动力
一些基础知识
在Python执行命令
在Python使用函数
通过Import语句实现代码复用
第22 IPython
安装IPython
基础知识
从功能强大的函数获得帮助
UNIX Shell
信息搜集
自动和快捷方式
本章　小结
第3章　文本
Python的内建功能及模块
ElementTree
本章　小结
第4章　文档与报告
自动信息收集
手工信息收集
信息格式化
信息发布
本章　小结
第5章　网络
网络客户端
远程过程调用
SSH
Twis
Scapy
使用Scapy创建脚本
第6章　数据
使用0S模块与Data进行交互
拷贝、移动、重命名和删除数据
使用路径、目录和文件
数据比较
合并数据
对文件和目录的模式匹配
包装rsync
元数据：关于数据的数据
存档、压缩、映像和恢复
使用tarfile模块创建TARl)3档
使用tarfile模块检查TAR文件内容
第7章　SNMP
第8章　操作系统什锦
第9章　包管理
第10章　进程与并发
第11章　创建GUI
第12章　数据持久性
第13章　命令行
第14章　实例
附录　回调
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python UNIX 和Linux 系统管理指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>工业和信息化"十三五"人才培养规划教材:Python 3基础教程
目录
第1章Python起步1
1.1认识Python1
1.1.1Python的发展1
1.1.2Python的应用案例2
1.1.3Python的应用领域2
1.1.4Python的特点4
1.1.5Python的版本6
1.1.6Python3.x与2.x的区别7
1.2Python程序的运行方式9
1.2.1计算机程序设计语言分类10
1.2.2计算机程序的运行方式10
1.2.3Python程序的运行方式10
1.2.4Python的实现11
1.2.5Python程序的可执行文件11
1.3Python开发环境及工具12
1.3.1Python的下载和安装12
1.3.2Python编程工具：IDLE15
1.3.3Python编程工具：记事本16
1.3.4Python编程工具：Eclipse+PyDev17
1.3.5Python编程工具：NetBeans26
1.4编程实践31
1.4.1使用IDLE交互模式31
1.4.2直接使用Python交互模式32
1.4.3用IDLE编写Python程序输出32
1.4.4在命令行运行Python程序33
1.4.5双击文件图标运行Python程序34
1.5本章小结34
1.6习题35
第2章Python编程基础36
2.1Python程序基本结构36
2.1.1用缩进表示代码块36
2.1.2代码注释37
2.1.3语句续行37
2.1.4语句分隔37
2.1.5关键字与大小写38
2.2基本输入和输出38
2.2.1基本输入38
2.2.2基本输出39
2.3数据类型：数字40
2.3.1数字常量40
2.3.2数字运算42
2.3.3小数45
2.3.4分数46
2.3.5数学函数47
2.4变量与动态数据类型49
2.4.1变量与对象49
2.4.2对象的垃圾回收49
2.4.3变量命名规则50
2.4.4赋值语句50
2.4.5变量的共享引用52
2.5数据类型：集合53
2.5.1集合常量53
2.5.2集合运算54
2.5.3集合基本操作54
2.5.4冻结集合55
2.6数据类型：字符串56
2.6.1字符串常量56
2.6.2字符串基本操作58
2.6.3字符串方法61
2.6.4字符串格式化表达式66
2.6.5bytes字符串68
2.7数据类型：列表69
2.7.1列表基本特点69
2.7.2列表基本操作69
2.7.3常用列表方法72
2.8数据类型：元组74
2.8.1元组特点74
2.8.2元组的基本操作74
2.8.3元组方法76
2.9数据类型：字典77
2.9.1字典的特点77
2.9.2字典基本操作77
2.9.3字典常用方法79
2.9.4字典视图81
2.10数据类型：文件83
2.10.1打开和关闭文件83
2.10.2读写文本文件83
2.10.3读写二进制文件88
2.10.4用文件存储Python对象88
2.11编程实践：用户数据的序列化89
2.12本章小结90
2.13习题90
第3章程序流程控制91
3.1if分支结构91
3.1.1if语句基本结构91
3.1.2真值测试92
3.1.3if…else三元表达式94
3.2for循环94
3.2.1for循环基本格式94
3.2.2多个变量迭代95
3.2.3break和continue96
3.2.4嵌套使用for循环96
3.3while循环96
3.3.1while循环基本结构97
3.3.2嵌套使用while循环97
3.4迭代和列表解析98
3.4.1迭代98
3.4.2列表解析100
3.4.3zip、map和filter102
3.5编程实践103
3.5.1输出数字金字塔103
3.5.2生成10个两位的随机素数104
3.6本章小结104
3.7习题105
第4章函数与模块106
4.1函数106
4.1.1定义函数106
4.1.2函数调用107
4.1.3函数参数107
4.1.4函数嵌套定义110
4.1.5lambda函数110
4.1.6递归函数110
4.1.7函数列表111
4.2变量作用域111
4.2.1有哪些作用域111
4.2.2global语句113
4.2.3nonlocal语句114
4.3模块114
4.3.1导入模块115
4.3.2导入与执行模块116
4.3.3用import还是from118
4.3.4重新载入模块119
4.3.5模块搜索路径120
4.3.6嵌套导入模块122
4.3.7查看模块对象属性122
4.3.8__name__属性和命令行参数123
4.3.9隐藏模块数据124
4.4模块包125
4.4.1包的基本结构125
4.4.2导入包125
4.4.3相对导入125
4.5编程实践：函数库127
4.5.1实现杨辉三角函数127
4.5.2实现“汉诺塔”模拟函数128
4.5.3交互模式导入函数测试130
4.6本章小结130
4.7习题131
第5章面向对象编程132
5.1理解Python的面向对象132
5.1.1Python的类132
5.1.2Python中的对象133
5.2定义和使用类133
5.2.1定义类133
5.2.2使用类134
5.3对象的属性和方法135
5.3.1对象的属性135
5.3.2对象的方法137
5.3.3类的“伪私有”属性和方法138
5.3.4构造函数和析构函数139
5.4类的继承139
5.4.1简单继承139
5.4.2定义子类的属性和方法140
5.4.3调用超类的构造函数141
5.4.4多重继承141
5.5运算符重载142
5.5.1加法运算重载143
5.5.2索引和分片重载143
5.5.3自定义迭代器对象144
5.5.4定制对象的字符串形式146
5.6模块中的类148
5.7编程实践：用户注册信息管理系统148
5.7.1系统功能预览149
5.7.2系统功能实现151
5.8本章小结155
5.9习题155
第6章异常处理157
6.1Python异常处理机制157
6.1.1为什么使用异常处理157
6.1.2异常处理基本结构159
6.1.3常见异常类型160
6.1.4捕捉多个异常160
6.1.5except…as与统一处理160
6.1.6捕捉所有异常161
6.1.7异常处理结构的嵌套162
6.1.8try…finally终止行为162
6.2主动引发异常163
6.2.1raise语句163
6.2.2异常链：异常引发异常164
6.2.3assert语句164
6.3自定义异常类165
6.3.1异常类的超类165
6.3.2创建自定义异常类166
6.3.3用自定义异常类保存异常日志166
6.4编程实践：为用户注册信息管理系统添加异常处理167
6.5本章小结170
6.6习题170
第7章Python数据库编程171
7.1了解关系数据库171
7.1.1数据模型171
7.1.2关系数据库的概念和特点172
7.1.3关系数据库语言SQL173
7.2访问SQLite数据库179
7.2.1了解Python的SQL接口179
7.2.2连接和创建SQLite数据库179
7.2.3创建表180
7.2.4添加记录180
7.2.5执行查询181
7.2.6使用Row对象182
7.2.7修改记录183
7.2.8删除记录183
7.2.9导入文件中的数据184
7.3访问MySQL数据库186
7.3.1下载安装MySQL187
7.3.2访问MySQL数据库实例194
7.3.3连接MySQL服务器195
7.3.4MySQL数据库操作197
7.3.5MySQL表操作199
7.3.6MySQL查询参数201
7.3.7使用存储过程201
7.3.8使用事务202
7.4访问MicrosoftSQLServer数据库204
7.4.1下载和安装Python的Windows扩展组件204
7.4.2生成ADO的Python支持文件207
7.4.3安装SQLServer207
7.4.4快速生成SQLServer连接字符串211
7.4.5建立SQLServer服务器连接214
7.4.6使用ADO的记录集对象217
7.4.7使用ADO访问Excel文件222
7.5编程实践：基于数据库的用户注册信息管理系统224
7.6本章小结228
7.7习题229
第8章tkinterGUI编程230
8.1tkinter编程基础230
8.1.1第一个tkinterGUI程序230
8.1.2组件打包232
8.1.3添加按钮和事件处理函数234
8.1.4Packer布局236
8.1.5Grid布局237
8.1.6Place布局238
8.1.7使用框架239
8.2tkinter组件239
8.2.1组件通用属性设置239
8.2.2标签组件Label242
8.2.3按钮组件Button244
8.2.4输入组件Entry245
8.2.5列表框组件Listbox249
8.2.6复选框组件Checkbutton250
8.2.7单选按钮组件Radiobutton252
8.2.8旋转框组件Spinbox253
8.2.9滚动条组件Scrollbar254
8.2.10标签框架LabelFrame256
8.2.11文本框组件Text257
8.2.12画布组件Canvas259
8.2.13顶层窗口组件Toplevel261
8.2.14菜单组件Menu263
8.3对话框264
8.3.1消息对话框264
8.3.2文件对话框266
8.3.3颜色对话框269
8.4编程实践：GUI版的用户注册信息管理系统269
8.4.1系统功能预览270
8.4.2显示全部已注册用户270
8.4.3查找／修改／删除用户信息271
8.4.4添加新用户271
8.4.5系统功能实现271
8.5本章小结277
8.6习题278
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>工业和信息化"十三五"人才培养规划教材:Python 3基础教程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>利用Python开源工具分析恶意代码
作者序
前言
第1章 开源软件与Python环境
第2章 通过peframe学习PE文件结构
第3章 恶意代码分析服务
第4章 使用Cuckoo Sandbox
第5章 恶意代码详细分析
第6章 其他分析工具
第7章 利用内存分析应对入侵事故
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>利用Python开源工具分析恶意代码
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python编程从入门到精通
第　1章 Python如日中天　1
（视频总计47min，实例1个，范例两个）
1.1　Python语言基础　2
1.1.1　编程世界的“琅琊榜”　2
1.1.2　Python为什么这么火　2
1.1.3　Python语言的特点　3
1.2　安装Python　3
1.2.1　选择版本　4
1.2.2　在Windows系统中下载
并安装Python　4
1.2.3　在Mac系统中下载并安装
Python　5
1.2.4　在Linux系统中下载并安装
Python　6
1.3　Python开发工具介绍　6
1.3.1　使用IDLE　6
1.3.2　使用Emacs　7
1.4　认识第 一段Python程序　10
1.4.1　编码并运行　10
1.4.2　其他运行方式　11
1.5　技术解惑　12
1.5.1　提高开发效率—安装
文本编辑器　12
1.5.2　快速运行Hello World
程序　12
1.5.3　在终端会话中运行Python
代码　13
1.6　课后练习　13
第　2章 Python基础语法　14
（视频总计85min，实例6个，范例12个）
2.1　缩进规则　15
2.2　注释　16
2.3　编码　17
2.3.1　字符编码　17
2.3.2　Unicode编码和UTF-8
编码　17
2.3.3　Python中的编码　18
2.4　标识符和关键字　19
2.5　变量　20
2.6　输入和输出　21
2.6.1　实现输入功能　22
2.6.2　实现输出功能　22
2.7　技术解惑　23
2.7.1　使用注释时的注意事项　23
2.7.2　注意变量的命名规则和
建议　23
2.7.3　注意Python语言的缩进
规则　24
2.7.4　变量赋值的真正意义　24
2.7.5　解码字节流　24
2.8　课后练习　24
第3章　简单数据类型　25
（视频总计56min，实例6个，范例12个）
3.1　Python中的数据类型　26
3.2　字符串　26
3.2.1　访问字符串中的值　26
3.2.2　更新字符串　27
3.2.3　转义字符　27
3.2.4　格式化字符串　28
3.2.5　字符串处理函数　29
3.3　数字类型　30
3.3.1　整型　30
3.3.2　浮点型　31
3.3.3　布尔型　31
3.3.4　复数型　32
3.4　技术解惑　33
3.4.1　总结整数支持的运算符　33
3.4.2　总结Python中的数学
函数　33
3.4.3　字符串的格式化技巧　34
3.5　课后练习　34
第4章　运算符和表达式　35
（视频总计69min，实例9个，范例16个）
4.1　什么是运算符和表达式　36
4.2　算术运算符和算术表达式　36
4.3　比较运算符和比较表达式　37
4.4　赋值运算符和赋值表达式　38
4.4.1　基本赋值运算符和
表达式　39
4.4.2　复合赋值运算符和
表达式　39
4.5　位运算符和位表达式　40
4.6　逻辑运算符和逻辑表达式　41
4.7　成员运算符和成员表达式　42
4.8　身份运算符和身份表达式　43
4.9　运算符的优先级　44
4.10　技术解惑　45
4.10.1　“==”运算符的秘密　45
4.10.2　身份运算符的特质　46
4.10.3　总结and和or的用法　46
4.10.4　is运算符和“==”运算符
的区别　47
4.11　课后练习　47
第5章　条件语句　48
（视频总计68min，实例7个，范例14个）
5.1　什么是条件语句　49
5.2　最简单的if语句　49
5.3　使用if...else语句　50
5.4　使用if...elif...else语句　51
5.5　if语句的嵌套　52
5.6　实现switch语句的功能　53
5.6.1　使用elif实现　54
5.6.2　使用字典实现　54
5.6.3　自定义编写一个类实现　55
5.7　技术解惑　56
5.7.1　剖析True和False条件
判断的用法　56
5.7.2　再次提醒不支持switch
语句的问题　56
5.7.3　最简洁的条件判断语句
写法　56
5.8　课后练习　57
第6章　循环语句　58
（视频总计67min，实例11个，范例22个）
6.1　使用for循环语句　59
6.1.1　基本的for循环语句　59
6.1.2　通过序列索引迭代　60
6.1.3　使用for… else循环语句　60
6.1.4　嵌套for循环语句　61
6.2　使用while循环语句　62
6.2.1　基本的while循环语句　62
6.2.2　使用while…else循环
语句　63
6.2.3　死循环问题　63
6.2.4　使用while循环嵌套
语句　64
6.3　使用循环控制语句　65
6.3.1　使用break语句　65
6.3.2　使用continue语句　66
6.3.3　使用pass语句　67
6.4　技术解惑　67
6.4.1　总结for循环语句　67
6.4.2　总结break和continue
语句　68
6.4.3　使用while循环的注意
事项　68
6.5　课后练习　68
第7章　使用列表　69
（视频总计105min，实例22个，范例42个）
7.1　列表类型基础　70
7.1.1　创建数字列表　70
7.1.2　访问列表中的值　71
7.1.3　使用列表中的值　72
7.2　列表的基本操作　73
7.2.1　更新列表元素　73
7.2.2　插入新的元素　73
7.2.3　在列表中删除元素　75
7.3　列表排列处理　77
7.3.1　使用方法sort()对列表进行
永久性排序　77
7.3.2　使用方法sorted()对列表
进行临时排序　78
7.3.3　倒序输出列表中的信息　78
7.3.4　获取列表的长度　79
7.4　列表的高级操作　79
7.4.1　列表中的运算符　79
7.4.2　列表截取与拼接　80
7.4.3　列表嵌套　80
7.4.4　获取列表元素中的最大值
和最小值　81
7.4.5　追加其他列表中的值　81
7.4.6　在列表中统计某元素出现
的次数　82
7.4.7　清空列表中的元素　82
7.4.8　复制列表中的元素　83
7.4.9　获取列表中某个元素的
索引　83
7.5　技术解惑　84
7.5.1　注意排列顺序的多样性　84
7.5.2　尝试有意引发错误　84
7.6　课后练习　84
第8章　使用元组、字典和集合　85
（视频总计137min，实例30个，范例56个）
8.1　使用元组类型　86
8.1.1　创建并访问元组　86
8.1.2　修改元组　87
8.1.3　删除元组　88
8.1.4　元组索引和截取　88
8.1.5　使用内置方法操作元组　89
8.2　使用字典　89
8.2.1　创建并访问字典　89
8.2.2　向字典中添加数据　90
8.2.3　修改字典　91
8.2.4　删除字典中的元素　91
8.2.5　创建空字典　92
8.2.6　和字典有关的内置函数　92
8.3　遍历字典　92
8.3.1　一次性遍历所有的
“键值”对　93
8.3.2　遍历字典中的所有键　93
8.3.3　按序遍历字典中的
所有键　94
8.3.4　遍历字典中的所有值　94
8.4　字典嵌套　95
8.4.1　字典列表　95
8.4.2　在字典中存储字典　96
8.4.3　在字典中存储列表　97
8.5　使用其他内置方法　97
8.5.1　使用方法clear()清空
字典　97
8.5.2　使用方法copy()复制
字典　98
8.5.3　使用方法fromkeys()创建
新字典　98
8.5.4　使用方法get()获取指定的
键值　99
8.5.5　使用方法setdefault()获取
指定的键值　99
8.5.6　使用方法update()修改
字典　100
8.6　使用集合　100
8.7　类型转换　101
8.7.1　内置类型转换函数　101
8.7.2　类型转换综合演练　102
8.8　技术解惑　103
8.8.1　for遍历方式并不是
万能的　103
8.8.2　两种字典遍历方式的性能
对比　104
8.9　课后练习　104
第9章　使用函数　105
（视频总计118min，实例21个，范例42个）
9.1　函数基础　106
9.1.1　定义函数　106
9.1.2　调用函数　107
9.2　函数的参数　107
9.2.1　形参和实参　108
9.2.2　必需参数　108
9.2.3　关键字参数　108
9.2.4　默认参数　109
9.2.5　不定长参数　109
9.2.6　按值传递参数和按引用
传递参数　110
9.3　函数的返回值　111
9.3.1　返回一个简单值　111
9.3.2　可选实参　111
9.3.3　返回一个字典　112
9.4　变量的作用域　113
9.5　使用函数传递列表　114
9.5.1　访问列表中的元素　114
9.5.2　在函数中修改列表　115
9.6　使用匿名函数　115
9.7　函数和模块开发　116
9.7.1　导入整个模块文件　116
9.7.2　只导入指定的函数　117
9.7.3　使用as指定函数别名　118
9.7.4　使用as指定模块别名　118
9.7.5　导入所有函数　119
9.8　技术解惑　119
9.8.1　Python内置函数大全　119
9.8.2　一个项目引发的问题　120
9.8.3　使用递归方法展开多层
列表　120
9.9　课后练习　121
第　10章 面向对象（上）　122
（视频总计138min，实例22个，范例44个）
10.1　定义并使用类　123
10.1.1　定义类　123
10.1.2　类的基本用法　123
10.2　类对象　124
10.3　类方法　124
10.3.1　定义并使用类方法　124
10.3.2　构造方法　125
10.3.3　方法调用　126
10.3.4　创建多个实例　127
10.3.5　使用私有方法　128
10.3.6　析构方法　129
10.3.7　静态方法和类方法　129
10.3.8　类的专有方法　130
10.4　类属性　131
10.4.1　认识属性　131
10.4.2　类属性和实例属性　131
10.4.3　设置属性的默认值　132
10.4.4　修改属性的值　133
10.4.5　使用私有属性　135
10.5　继承　135
10.5.1　定义子类　135
10.5.2　在子类中定义方法和
属性　137
10.5.3　子类可以继续派生
新类　137
10.5.4　私有属性和私有方法　138
10.5.5　多重继承　139
10.6　方法重写　140
10.7　技术解惑　141
10.7.1　究竟什么是面向对象　141
10.7.2　Python语言的面向
对象编程　142
10.7.3　必须掌握的统一建模
语言　143
10.7.4　构造函数和析构函数的特殊说明　143
10.8　课后练习　143
第　11章 面向对象（下）　144
（视频总计129min，实例32个，范例60个）
11.1　模块架构　145
11.1.1　最基本的模块调用　145
11.1.2　目录“__pycache__”　146
11.1.3　使用“__name__”
属性　147
11.2　使用包　148
11.2.1　表示包　148
11.2.2　创建并使用包　149
11.2.3　实战演练　150
11.3　导入类　151
11.3.1　只导入一个类　151
11.3.2　导入指定的类　152
11.3.3　从一个模块中导入
多个类　152
11.3.4　导入整个模块　153
11.3.5　在一个模块中导入另
一个模块　153
11.4　迭代器　154
11.4.1　什么是迭代器　154
11.4.2　创建并使用迭代器　155
11.4.3　使用内置迭代器方法
iter()　156
11.5　生成器　157
11.5.1　生成器的运行机制　157
11.5.2　创建生成器　158
11.5.3　注意生成器的第 一次
调用　159
11.5.4　使用协程重置生成器
序列　160
11.6　装饰器　160
11.6.1　创建装饰器　160
11.6.2　使用装饰器装饰函数　161
11.6.3　使用装饰器装饰类　162
11.7　命名空间　163
11.7.1　命名空间的本质　163
11.7.2　查找命名空间　164
11.7.3　命名空间的生命周期　165
11.7.4　命名空间访问函数locals()
与globals()　165
11.8　闭包　167
11.8.1　什么是闭包　167
11.8.2　闭包和嵌套函数　168
11.8.3　使用闭包记录函数的
调用次数　168
11.8.4　使用闭包实现延迟
请求　169
11.8.5　闭包和装饰器　169
11.8.6　使用闭包定义泛型
函数　170
11.9　技术解惑　171
11.9.1　导入包的秘诀　171
11.9.2　无限迭代器的秘密　172
11.10　课后练习　172
第　12章 文件操作处理　173
（视频总计125min，实例29个，范例58个）
12.1　使用open()函数打开文件　174
12.2　使用File操作文件　175
12.2.1　File对象介绍　175
12.2.2　使用close()方法关闭
操作　176
12.2.3　使用方法flush()　176
12.2.4　使用方法fileno()　177
12.2.5　使用方法isatty()　177
12.2.6　使用方法next()　178
12.2.7　使用方法read()　178
12.2.8　使用方法readline()　179
12.2.9　使用方法readlines()　180
12.2.10　使用方法seek()　180
12.2.11　使用方法tell()　181
12.2.12　使用方法truncate()　182
12.2.13　使用方法writelines()　182
12.3　使用OS对象　183
12.3.1　OS对象介绍　183
12.3.2　使用方法access()　185
12.3.3　使用方法chdir()　186
12.3.4　使用方法chmod()　186
12.3.5　打开、写入和关闭　187
12.3.6　打开、读取和关闭　189
12.3.7　创建目录　189
12.3.8　获取目录下的信息　190
12.3.9　修改目录　192
12.3.10　删除目录　193
12.4　其他常见的文件操作　194
12.4.1　使用fileinput模块　194
12.4.2　批量获取文件名　195
12.5　技术解惑　196
12.5.1　注意包含文件的具体
范围　196
12.5.2　4点注意事项　196
12.6　课后练习　196
第　13章 异常处理　197
（视频总计53min，实例13个，范例26个）
13.1　语法错误　198
13.2　异常处理　199
13.2.1　异常的特殊之处　199
13.2.2　使用“try…except”处理
异常　199
13.2.3　使用“try…except…else”
处理异常　201
13.2.4　使用“try…except…finally”
语句　202
13.3　抛出异常　202
13.3.1　使用raise抛出异常　203
13.3.2　使用assert语句　203
13.3.3　自定义异常　204
13.4　内置异常类　205
13.4.1　处理ZeroDivisionError
异常　205
13.4.2　FileNotFoundError
异常　206
13.4.3　except捕获方式　207
13.4.4　使用函数testmod()　207
13.4.5　使用单元测试函数
testfile()　208
13.5　技术解惑　209
13.5.1　注意assert语句的
妙用　209
13.5.2　定义清理行为　209
13.5.3　妙用预定义的清理
行为　210
13.6　课后练习　210
第　14章 正则表达式　211
（视频总计53min，实例6个，范例12个）
14.1　基本语法　212
14.1.1　普通字符　212
14.1.2　非打印字符　212
14.1.3　特殊字符　213
14.1.4　限定符　216
14.1.5　定位符　217
14.1.6　限定范围和否定　218
14.1.7　运算符优先级　218
14.2　使用re模块　218
14.2.1　re模块库函数介绍　219
14.2.2　使用函数compile()　219
14.2.3　使用函数match()　220
14.2.4　使用函数search()　221
14.2.5　使用函数findall()　222
14.2.6　sub()和subn()函数　223
14.3　使用Pattern对象　224
14.4　正则表达式模式　224
14.5　技术解惑　228
14.5.1　生活中的正则表达式　228
14.5.2　为什么使用正则表达　228
14.5.3　分析函数re.match()和函数re.search()的区别　228
14.5.4　不能将限定符与定位点
一起使用　228
14.6　课后练习　229
第　15章 多线程开发　230
（视频总计68min，实例10个，范例20个）
15.1　线程和进程基础　231
15.2　Python线程处理　231
15.2.1　使用_thread 模块　231
15.2.2　使用threading模块：
threading模块介绍　232
15.2.3　使用threading模块：直接在线程中运行函数　233
15.2.4　使用threading模块：通过
继承类threading.Thread
创建　233
15.2.5　使用threading模块：线程
等待　234
15.2.6　使用threading模块：线程
同步　234
15.3　线程优先级队列模块queue　236
15.3.1　模块queue中的常用
方法　236
15.3.2　基本FIFO队列　236
15.3.3　LIFO队列　237
15.3.4　优先级队列　237
15.4　使用模块subprocess创建
进程　238
15.4.1　模块subprocess介绍　238
15.4.2　使用类Popen创建
进程　240
15.5　技术解惑　242
15.5.1　线程带来的意义
你知道吗　242
15.5.2　线程和进程的区别　244
15.6　课后练习　244
第　16章 Tkinter图形化界面开发　245
（视频总计88min，实例14个，范例28个）
16.1　Python图形化界面开发基础　246
16.1.1　GUI介绍　246
16.1.2　使用Python语言编写
GUI程序　246
16.2　Tkinter开发基础　247
16.2.1　第 一个Tkinter程序　247
16.2.2　向窗体中添加组件　248
16.3　Tkinter组件开发详解　248
16.3.1　Tkinter组件概览　249
16.3.2　使用按钮控件　250
16.3.3　使用文本框控件　251
16.3.4　使用菜单控件　252
16.3.5　使用标签控件　253
16.3.6　使用单选按钮和复选
按钮控件　254
16.3.7　使用绘图控件　256
16.4　Tkinter库的事件　257
16.4.1　Tkinter事件基础　258
16.4.2　动态绘图程序　259
16.5　实现对话框效果　261
16.5.1　创建消息框　261
16.5.2　创建输入对话框　263
16.5.3　创建打开/保存文件
对话框　264
16.5.4　创建颜色选择对话框　265
16.5.5　创建自定义对话框　265
16.6　技术解惑　267
16.6.1　格外注意方法pack()的
参数　267
16.6.2　请务必注意方法grid()的
参数　267
16.6.3　请务必注意方法place()
的属性　267
16.7　课后练习　267
第　17章 网络编程　268
（视频总计96min，实例12个，范例24个）
17.1　网络开发基础　269
17.1.1　OSI七层网络模型　269
17.1.2　TCP/IP协议　270
17.2　套接字编程　270
17.2.1　socket()函数介绍　270
17.2.2　socket对象的内置函数和
属性　271
17.2.3　使用套接字建立TCP“客
户端/服务器”连接　272
17.2.4　使用套接字建立UDP“客
户端/服务器”连接　274
17.3　socketserver编程　275
17.3.1　socketserver模块
基础　275
17.3.2　使用socketserver创建
TCP“客户端/服务器”
连接　276
17.4　HTTP协议开发　277
17.4.1　使用urllib包　277
17.4.2　使用HTTP包　280
17.5　收发电子邮件　281
17.5.1　开发POP3邮件协议
程序　281
17.5.2　开发SMTP邮件协议
程序　283
17.6　开发FTP文件传输程序　285
17.6.1　Python和FTP　285
17.6.2　创建一个FTP文件传输
客户端　287
17.7　解析XML　289
17.7.1　SAX解析方法　289
17.7.2　DOM解析方法　291
17.8　解析JSON数据　292
17.8.1　类型转换　292
17.8.2　编码和解码　293
17.9　技术解惑　294
17.9.1　详细剖析客户端/服务器
编程模型　294
17.9.2　详细剖析类
HTTPConnection中的
方法　295
17.10　课后练习　296
第　18章 数据库开发　297
（视频总计88min，实例13个，范例26个）
18.1　操作SQLite3数据库　298
18.2　操作MySQL数据库　299
18.2.1　搭建PyMySQL环境　300
18.2.2　实现数据库连接　300
18.2.3　创建数据库表　301
18.2.4　数据库插入操作　302
18.2.5　数据库查询操作　302
18.2.6　数据库更新操作　303
18.2.7　数据库删除操作　304
18.2.8　执行事务　304
18.3　使用MariaDB数据库　305
18.3.1　搭建MariaDB数据库
环境　305
18.3.2　在Python程序中使用
MariaDB数据库　308
18.4　使用MongoDB数据库　309
18.4.1　搭建MongoDB环境　309
18.4.2　在Python程序中使用
MongoDB数据库　310
18.5　使用适配器　312
18.6　使用ORM操作数据库　316
18.6.1　Python和ORM　316
18.6.2　使用SQLAlchemy　317
18.6.3　使用mongoengine　319
18.7　技术解惑　321
18.7.1　灵活使用查询运算符　321
18.7.2　掌握between关键字的
用法　322
18.7.3　了解关联表操作的
秘密　322
18.7.4　请课外学习并掌握SQL
语言的知识　322
18.8　课后练习　322
第　19章 Python动态Web开发基础　323
（视频总计91min，实例18个，范例36个）
19.1　Python CGI编程　324
19.1.1　CGI介绍　324
19.1.2　搭建CGI服务器　324
19.1.3　第 一个CGI程序　325
19.2　使用Tornado框架　325
19.2.1　Tornado框架介绍　326
19.2.2　Python和Tornado
框架　326
19.2.3　获取请求参数　327
19.2.4　使用cookie　329
19.2.5　URL转向　330
19.2.6　使用静态资源文件　331
19.3　使用Django框架　332
19.3.1　搭建Django环境　332
19.3.2　常用的Django命令　333
19.3.3　第 一个Django工程　334
19.3.4　在URL中传递参数　335
19.3.5　使用模板　337
19.3.6　使用表单　341
19.3.7　实现基本的数据库
操作　342
19.3.8　使用Django后台系统
开发博客系统　343
19.4　使用Flask框架　346
19.4.1　开始使用Flask框架　346
19.4.2　传递URL参数　347
19.4.3　使用session和cookie　349
19.4.4　文件上传　350
19.5　技术解惑　351
19.5.1　“客户端/服务器”开发
模式　351
19.5.2　Python Web客户端开发
是大势所趋　351
19.5.3　注意Python 3的
变化　352
19.6　课后练习　352
第　20章 使用Pygame开发游戏　353
（视频总计59min，实例8个，范例16个）
20.1　安装Pygame　354
20.2　Pygame开发基础　355
20.2.1　Pygame框架中的
模块　355
20.2.2　事件操作　356
20.2.3　显示模式设置　359
20.2.4　字体处理　359
20.2.5　像素和颜色处理　360
20.2.6　使用Surface绘制
图像　362
20.2.7　使用pygame.draw绘图
函数　362
20.3　开发一个俄罗斯方块游戏　364
20.3.1　规划图形　364
20.3.2　具体实现　365
20.4　技术解惑　371
20.4.1　电脑游戏开发的必备
知识　371
20.4.2　如何创建Surface
对象　372
20.5　课后练习　372
第　21章 使用Pillow库处理图形　373
（视频总计74min，实例16个，范例32个）
21.1　安装Pillow库　374
21.2　使用Image模块　374
21.2.1　打开和新建　374
21.2.2　混合　376
21.2.3　复制和缩放　377
21.2.4　粘贴和裁剪　378
21.2.5　格式转换　379
21.2.6　重设和旋转　380
21.2.7　分离和合并　381
21.2.8　滤镜　382
21.2.9　其他内置函数　382
21.3　使用ImageChops模块　384
21.3.1　常用的内置函数　384
21.3.2　实现图片合成　385
21.4　使用ImageEnhance模块　386
21.4.1　常用的内置函数　386
21.4.2　实现图像增强处理　386
21.5　使用ImageFilter模块　387
21.5.1　常用的内置函数　387
21.5.2　实现滤镜处理　388
21.6　使用ImageDraw模块　388
21.6.1　常用的内置函数　388
21.6.2　绘制二维图像　390
21.7　使用ImageFont模块　390
21.8　技术解惑　391
21.8.1　详细剖析ImageFont
模块的内置函数　391
21.8.2　必须掌握并深入理解的
几个概念　392
21.9　课后练习　392
第　22章 使用Matplotlib实现数据
挖掘　393
（视频总计70min，实例18个，范例36个）
22.1　数据可视化　394
22.2　搭建Matplotlib环境　394
22.3　初级绘图　396
22.3.1　绘制点　396
22.3.2　绘制折线　396
22.3.3　设置标签文字和线条
粗细　398
22.4　高级绘图　399
22.4.1　自定义散点图样式　399
22.4.2　绘制柱状图　400
22.4.3　绘制多幅子图　404
22.4.4　绘制曲线　406
22.5　绘制随机漫步图　411
22.5.1　在Python程序中生成
随机漫步数据　411
22.5.2　在Python程序中绘制
随机漫步图　413
22.6　绘制其他样式的图　414
22.6.1　绘制三维图　414
22.6.2　绘制波浪图　415
22.6.3　绘制散点图　416
22.6.4　绘制等高线图　416
22.6.5　绘制饼状图　417
22.7　技术解惑　418
22.7.1　充分利用官方资源　418
22.7.2　如何实现子图　418
22.8　课后练习　419
第　23章 大数据实战——抓取数据并
分析　420
（视频总计36min）
23.1　爬虫抓取　421
23.1.1　检测“Redis”的
状态　421
23.1.2　账号模拟登录　421
23.1.3　实现具体抓取功能　423
23.2　大数据分析　428
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python编程从入门到精通
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python编程：从数据分析到数据科学
第一篇  准备工作

1 为什么要学习Python？学习Python 的什么 3

2 学习Python 之前需要准备的工作有哪些 6

3 如何看懂和运行本书代码 8
31 输入部分8
32 输出部分 10
33 错误与异常信息 11
34 外部数据文件12
35 注意事项 14

第二篇  Python基础

4 数据类型19
41 查看数据类型的方法 20
42 判断数据类型的方法21
43 数据类型的转换方法22
44 特殊数据类型23
45 序列类型26

5 变量28
51 变量的定义方法29
52 Python 是动态类型语言29
53 Python 是强类型语言 30
54 Python 中的变量名是引用31
55 Python 中区分大小写32
56 变量命名规范32
57 iPython 的特殊变量33
58 查看Python 关键字的方法 34
59 查看已定义的所有变量35
510 删除变量37

6 语句书写规范39
61 一行一句 40
62 一行多句 40
63 一句多行 41
64 复合语句 42
65 空语句 43

7 赋值语句44
71 赋值语句在Python 中的重要地位 45
72 链式赋值语句 45
73 复合赋值语句 46
74 序列的拆包式赋值 46
75 两个变量值的调换 47

8 注释语句48
81 注释方法 48
82 注意事项 49

9 运算符50
91 特殊运算符53
92 内置函数57
93 math 模块58
94 优先级与结合方向59

10 if语句61
101 基本语法61
102 elif 语句62
103 if 与三元运算63
104 注意事项 64

11 for语句67
111 基本语法67
112 range()函数67
113 注意事项68

12 while语句71
121 基本语法71
122 注意事项72

13 pass语句74
131 含义 74
132 作用75

14 列表76
141 定义方法78
142 切片操作79
143 反向遍历81
144 类型转换83
145 extend 与append 的区别83
146 列表推导式 84
147 插入与删除87
148 常用操作函数89

15 元组94
151 定义方法95
152 主要特征97
153 基本用法99
154 应用场景 100

16 字符串 103
161 定义方法 104
162 主要特征 105
163 字符串的操作 106

17 序列111
171 支持索引 112
172 支持切片 113
173 支持迭代 114
174 支持拆包 114
175 支持*运算 115
176 通用函数 117

18 集合 120
181 定义方法 121
182 主要特征 122
183 基本运算 123
184 应用场景 125

19 字典126
191 定义方法 127
192 字典的主要特征 128
193 字典的应用场景 129

20 迭代器与生成器 130
201 可迭代对象与迭代器 131
202 生成器与迭代器 132

21 函数 134
211 内置函数135
212 模块函数135
213 用户自定义函数136

22 内置函数137
221 内置函数的主要特点 138
222 数学函数 138
223 类型函数 139
224 其他功能函数 140

23 模块函数 145
231 import 模块名 146
232 import 模块名as 别名 147
233 from 模块名import 函数名 147

24 自定义函数 149
241 定义方法 151
242 函数中的docString 152
243 自定义函数的调用方法 152
244 返回值 153
245 自定义函数的形参与实参 154
246 变量的可见性 156
247 值传递与地址传递 158
248 自定义函数时的注意事项 160

25 lambda 函数162
251 lambda 函数的定义方法 163
252 lambda 函数的调用方法 164

26 模块166
261 导入与用法 167
262 查看内置模块清单的方法 168

27 包171
271 包的基本术语 172
272 安装包 172
273 查看已安装包 173
274 更新（或删除）已安装包 173
275 导入包 174
276 查看包的帮助 175
277 常用包 176

28 帮助文档177
281 help 函数 178
282 DocString  178
283 查看源代码 179
284 doc 属性 180
285 dir()函数 181
286 其他方法 183


第三篇  Python进阶
29 异常与错误187
291 try/except/finally 188
292 异常信息的显示模式 189
293 断言 190

30 程序调试方法192
301 调试程序的基本方法  193
302 设置错误信息的显示方式 194
303 设置断言的方法 195

31 面向对象编程197
311 类的定义方法 198
312 类中的特殊方法 199
313 类之间的继承关系 201
314 私有属性及@property 装饰器 203
315 self 和cls  204
316 new 与init 的区别和联系 205

32 魔术命令 208
321 运行py 文件：%run 209
322 统计运行时间：%timeit 与%%timeit 210
323 查看历史In 和Out 变量：%history  211
324 更改异常信息的显示模式：%xmode 212
325 调试程序：%debug 214
326 程序运行的逐行统计：%prun 与%lprun  215
327 内存使用情况的统计：%memit  216

33 搜索路径218
331 变量搜索路径 219
332 模块搜索路径 221

34 当前工作目录224
341 显示当前工作目录的方法 225
342 更改当前工作目录的方法 225
343 读、写当前工作目录的方法 226


第四篇  数据加工

35 随机数229
351 一次生成一个数 230
352 一次生成一个随机数组 231

36 数组234
361 创建方法 238
362 主要特征 241
363 切片/读取 243
364 浅拷贝和深拷贝 249
365 形状和重构 250
366 属性计算 254
367 ndarray 的计算 256
368 ndarray 的元素类型 258
369 插入与删除 259
3610 缺失值处理 260
3611 ndarray 的广播规则 261
3612 ndarray 的排序 262

37 Series 265
371 Series 的主要特点 266
372 Series 的定义方法 266
373 Series 的操作方法 269

38 DataFrame274
381 DataFrame 的创建方法 277
382 查看行或列 278
383 引用行或列 279
384 index 操作 283
385 删除或过滤行/列 285
386 算术运算 290
387 大小比较运算 296
388 统计信息 297
389 排序 299
3810 导入/导出 301
3811 缺失数据处理 302
3812 分组统计 308

39 日期与时间311
391 常用包与模块 312
392 时间和日期类型的定义 312
393 转换方法 314
394 显示系统当前时间 316
395 计算时差 317
396 时间索引 317
397 period_range()函数 320

40 可视化321
401 Matplotlib 可视化 323
402 改变图的属性 326
403 改变图的类型 329
404 改变图的坐标轴的取值范围 330
405 去掉边界的空白 332
406 在同一个坐标上画两个图 333
407 多图显示 334
408 图的保存 335
409 散点图的画法 335
4010 Pandas 可视化 336
4011 Seaborn 可视化 339
4012 数据可视化实战 343

41 自然语言处理346
411 自然语言处理的常用包  347
412 自然语言处理的包导入及设置 347
413 数据读入 348
414 分词处理 349
415 自定义词汇 350
416 停用词处理 354
417 词性分布分析 356
418 高频词分析 358
419 词频统计 360
4110 关键词分析 362
4111 生成词云 363

42 Web爬取365
421 Scrapy 的下载与安装 367
422 Scrapy Shell 的基本原理 368
423 Scrapy Shell 的应用 370
424 自定义Spider 类 374
425 综合应用 379


第五篇  数据分析

43 统计分析389
431 业务理解 390
432 数据读入 391
433 数据理解 392
434 数据准备 393
435 模型类型的选择与超级参数的设置 394
436 训练具体模型及查看其统计量 396
437 拟合优度评价 397
438 建模前提假定的讨论 398
439 模型的优化与重新选择 400
4310 模型的应用 404

44 机器学习 405
441 机器学习的业务理解 406
442 数据读入 407
443 数据理解 408
444 数据准备 411
445 算法选择及其超级参数的设置 414
446 具体模型的训练 415
447 用模型进行预测 415
448 模型评价 416
449 模型的应用与优化 417
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python编程：从数据分析到数据科学
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>pytest测试实战
前言
第1章 pytest入门 1
1.1 资源获取 4
1.2 运行Pytest 5
1.3 运行单个测试用例 10
1.4 使用命令行选项 10
--collect-only选项 11
-k选项 11
-m选项 12
-x选项 13
--maxfail=num 15
-s与--capture=method 16
--lf（--last-failed）选项 16
--ff（--failed-first）选项 17
-v（--verbose）选项 17
-q（--quiet）选项 18
-l（--showlocals）选项 19
--tb=style选项 20
--duration=N选项 21
--version选项 22
-h（--help）选项 23
1.5 练习 24
1.6 预告 25
第2章 编写测试函数 27
2.1 测试示例程序 27
本地安装Tasks项目程序包 30
2.2 使用assert声明 32
2.3 预期异常 35
2.4 测试函数的标记 36
完善冒烟测试 38
2.5 跳过测试 40
2.6 标记预期会失败的测试 43
2.7 运行测试子集 45
单个目录 45
单个测试文件/模块 46
单个测试函数 47
单个测试类 47
单个测试类中的测试方法 48
用测试名划分测试集合 48
2.8 参数化测试 49
2.9 练习 56
2.10 预告 57
第3章 pytest Fixture 59
3.1 通过conftest.py共享fixture 60
3.2 使用fixture执行配置及销毁逻辑 61
3.3 使用--setup-show回溯fixture的执行过程 63
3.4 使用fixture传递测试数据 64
3.5 使用多个fixture 66
3.6 指定fixture作用范围 68
修改Tasks项目的fixture作用范围 70
3.7 使用usefixtures指定fixture 73
3.8 为常用fixture添加autouse选项 74
3.9 为fixture重命名 75
3.10 Fixture的参数化 77
3.11 参数化Tasks项目中的fixture 80
3.12 练习 83
3.13 预告 83
第4章 内置Fixture 85
4.1 使用tmpdir和tmpdir_factory 86
在其他作用范围内使用临时目录 88
4.2 使用pytestconfig 90
4.3 使用cache 92
4.4 使用capsys 100
4.5 使用monkeypatch 102
4.6 使用doctest_namespace 106
4.7 使用recwarn 109
4.8 练习 110
4.9 预告 111
第5章 插件 113
5.1 寻找插件 114
5.2 安装插件 114
从PyPI安装 114
从PyPI安装指定版本 115
从.tar.gz或.whl文件安装 115
从本地目录安装 115
从Git存储仓库安装 116
5.3 编写自己的插件 116
5.4 创建可安装插件 121
5.5 测试插件 125
5.6 创建发布包 129
通过共享目录分发插件 130
通过PyPI发布插件 130
5.7 练习 131
5.8 预告 131
第6章 配置 133
6.1 理解pytest的配置文件 133
用pytest --help查看ini文件选项 135
插件可以添加ini文件选项 135
6.2 更改默认命令行选项 136
6.3 注册标记来防范拼写错误 136
6.4 指定pytest的最低版本号 138
6.5 指定pytest忽略某些目录 138
6.6 指定测试目录 139
6.7 更改测试搜索的规则 141
6.8 禁用XPASS 142
6.9 避免文件名冲突 143
6.10 练习 145
6.11 预告 145
第7章 pytest与其他工具的搭配使用 147
7.1 pdb：调试失败的测试用例 147
7.2 coverage.py：判断测试覆盖了多少代码 151
7.3 mock：替换部分系统 155
7.4 tox：测试多种配置 162
7.5 Jenkins CI：让测试自动化 166
7.6 unittest：用pytest运行历史遗留测试用例 173
7.7 练习 179
7.8 预告 180
附录A 虚拟环境 181
附录B Pip 183
附录C 常用插件 187
C.1 改变测试流程的插件 187
pytest-repeat：重复运行测试 187
pytest-xdist：并行运行测试 189
pytest-timeout：为测试设置时间限制 190
C.2 改善输出效果的插件 191
pytest-instafail：查看错误的详细信息 191
pytest-sugar：显示色彩和进度条 192
pytest-emoji：为测试增添一些乐趣 193
pytest-html：为测试生成HTML报告 195
C.3 静态分析用的插件 197
pytest-pycodestyle和pytest-pep8：Python代码风格检查 197
pytest-flake8：更多的风格检查 197
C.4 Web开发用的插件 198
pytest-selenium：借助浏览器完成自动化测试 198
pytest-django：测试Django应用 198
pytest-flask：测试Flask应用 199
附录D 打包和发布Python项目 201
D.1 创建可安装的模块 201
D.2 创建可安装的包 203
D.3 创建源码发布包和Wheel文件 205
D.4 创建可以从PyPI安装的包 209
附录E xUnit Fixture 211
E.1 xUnit Fixture的语法 211
E.2 混合使用pytest Fixture和xUnit Fixture 214
E.3 xUnit Fixture的限制 215
索引 216
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>pytest测试实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python自动化开发实战
第1章 认识Python 1
1.1 了解Python 1
1.2 安装Python 3 2
1.3 安装PyCharm 4
1.4 安装第三方模块 7
1.5 我的“Hello World” 9
1.6 本章小结 11
第2章 变量与运算符 12
2.1 变量的命名与使用 12
2.2 变量的深浅拷贝 15
2.3 运算符的使用 16
2.3.1 算术运算符 17
2.3.2 比较运算符 18
2.3.3 赋值运算符 19
2.3.4 逻辑运算符 20
2.3.5 位运算符 21
2.3.6 成员运算符 22
2.3.7 身份运算符 23
2.3.8 运算符的优先级 24
2.4 本章小结 25
第3章 数据类型 26
3.1 数字的类型及转换 26
3.2 字符串的定义及使用 28
3.2.1 字符串的定义 28
3.2.2 字符串截取 29
3.2.3 字符串替换 30
3.2.4 字符串查找元素 30
3.2.5 字符串分割 32
3.2.6 字符串拼接 32
3.3 元组与列表 32
3.4 集合与字典 37
3.5 数据类型的转化 40
3.5.1 字符串和列表的转换 40
3.5.2 字符串与字典的转换 41
3.5.3 列表与字典的转换 42
3.6 本章小结 43
第4章 流程控制语句 45
4.1 if语句 45
4.2 for循环 47
4.3 while循环 50
4.4 推导式 52
4.5 三目运算符 54
4.6 实战：编写“猜数字”游戏 55
4.7 本章小结 56
第5章 函数 58
5.1 函数的定义 58
5.2 函数参数 59
5.3 函数的返回值 62
5.4 函数的调用 63
5.5 变量的作用域 64
5.6 实战：编写“猜词语”游戏 66
5.7 本章小结 68
第6章 类与对象 69
6.1 类的使用 69
6.2 类的封装 73
6.3 类的继承 74
6.4 实战：编写“过家家”游戏 76
6.5 本章小结 79
第7章 异常机制 80
7.1 了解异常 80
7.2 捕捉异常 82
7.3 自定义异常 84
7.4 实战：编写“角色扮演”游戏 85
7.5 本章小结 86
第8章 网页自动化开发 88
8.1 了解Selenium 88
8.2 安装Selenium 89
8.3 浏览器查找元素 93
8.4 Selenium定位元素 97
8.5 Selenium操控元素 101
8.6 Selenium常用功能 105
8.7 实战：编写“百度自动答题”程序 113
8.8 本章小结 120
第9章 接口自动化开发 121
9.1 分析网站接口 121
9.2 Requests概述及安装 124
9.3 简单的请求方式 125
9.4 复杂的请求方式 127
9.5 文件下载与上传 130
9.6 实战：编写“12306车次查询”程序 132
9.7 本章小结 137
第10章 系统自动化开发 138
10.1 PyAutoGUI概述及安装 138
10.2 截图与识别 139
10.3 鼠标控制功能 143
10.4 键盘控制功能 145
10.5 消息框功能 146
10.6 实战：编写“百度用户登录”程序 147
10.7 本章小结 151
第11章 软件自动化开发 153
11.1 PyWinAuto概述及安装 153
11.2 查找软件信息 154
11.3 连接CS软件 157
11.4 基于Uia软件操控 161
11.5 基于Win32软件操控 166
11.6 从源码剖析PyWinAuto 170
11.7 实战：自动撰写新闻稿 171
11.8 本章小结 179
第12章 图像识别与定位 181
12.1 OpenCV概述及安装 181
12.2 图像特征点检测算法 183
12.3 图像匹配与定位 187
12.4 实战：自动打印PDF文件 193
12.5 本章小结 199
第13章 App自动化开发 201
13.1 Appium简介及原理 201
13.2 搭建开发环境 202
13.3 连接Android系统 209
13.4 定位元素 214
13.5 操控元素 216
13.6 实战：淘宝商品采集 220
13.7 本章小结 226
第14章 Flask入门基础 228
14.1 概述与安装 228
14.2 快速实现一个简单的网站系统 229
14.3 路由编写规则 231
14.4 请求参数 233
14.5 响应过程 234
14.6 本章小结 236
第15章 自动化系统的开发与部署 238
15.1 系统设计概述 238
15.2 搭建开发环境 241
15.3 任务调度系统 244
15.3.1 配置文件 245
15.3.2 数据模型 246
15.3.3 Admin后台 250
15.3.4 系统接口与运行 253
15.4 任务执行系统 255
15.4.1 配置文件 256
15.4.2 异步任务 257
15.4.3 系统接口与运行 259
15.5 系统上线部署 261
15.6 本章小结 267
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python自动化开发实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python编程锦囊（全彩版）
目录
Content

01、核心基础应用

01 调用字符映射表输入特殊符号
02 利用字符编码输入特殊符号
03 实现日间、星期客流高峰提示
04 模拟界面菜单功能中的方向键
05 动态循环输出文字
06 如何实现多国语言文字输出
07 检索敏感词并描红输出
08 采用自定义规则对列表进行排序
09 利用lambda表达式简化编程
10 清洗字符串和列表
11 拼接字符串、列表和字典
12 如何实现字符串与列表等数据的去重
13 利用条形图显示分析数据

02、字符串处理

01 中英文混排时对齐
02 实现数据编号的几种方法
03 验证用户输入的数据
04 使用Python逆序输出字符串
05 如何生成虚拟姓名
06 如何按照拼音顺序对中文汉字进行排序
07 如何生成高考填报志愿时的姓名区位码
08 如何使用MD5或SHA1等算法对用户密码进行加密
09 比较两种字符串的拼接方法哪个更省时

03、文件操作

01 如何以当前日期时间批量创建文件
02 如何根据文件中存储的产品型号批量生成相应文件夹
03 如何使用自定义前缀+编号的方式批量重命名文件
04 如何调用系统默认程序打开相应文件
05 批量提取文件名保存到一个文件中
06 如何对读取的文件内容进行分词
07 对数据分析时判断只能选择Excel或者CSV文件
08 如何像资源管理器一样显示指定文件夹下的所有子文件夹及文件
09 如何对运营数据文件进行分类整理

04、GUI 界面开发

01 如何在PyCharm开发工具中配置启动Qt Designer的快捷工具
02 在PyCharm开发工具中配置.ui文件转换.py文件的快捷工具
03 在PyCharm开发工具中配置将.qrc文件转换.py文件的快捷工具
04 如何让PyQt5窗体代码与逻辑代码分离
05 如何设置能够自动适应窗体大小的背景图片
06 禁止窗体显示最大化按钮及调整窗体大小
07 如何更换PyQt5窗体中按钮的单击效果
08 如何在PyQt5中弹出不同种类的消息提示框
09 如何使用tkinter模块弹出不同种类的消息提示框
10 如何实现在PyQt5窗口中弹出等待提示框
11  如何对QListWidget列表进行数据绑定
12 如何对QTableWidget表格进行数据绑定
13 解决表格显示数据时最后一列不自动适应容器大小的问题

05、图形图像与多媒体

01 如何批量为图片添加文字水印
02 如何批量为图片添加图片水印
03 解决对图片格式进行批量转换的问题
04 按照京东运营要求将图片批量处理为指定大小
05 根据图片显示其轮廓
06 图片的浮雕效果显示
07 图片的边界增强效果显示
08 图片的模糊效果显示
09 生成仿微信公众号推广的个性二维码（支持动态）
10 如何使用qrcode批量生成不同颜色的二维码
11 如何生成仿微商的带二维码商品图片
12 如何在使用zxing识别二维码时避免路径问题
13 如何使用百度云SDK将输入的字符串转换为语音文件
14 识别mp3音频时如何转换为采用16K采样率的wav文件
15 使用Python控制摄像头拍照

06、Python 与 Office 自动化

01 如何把Word文档批量转换为PDF文档
02 如何把多个Word文档合并为一个PDF文档
03 解决调用Word 2007时出现“尚未调用CoInitialize”错误
04 解决将多个PDF文档合并为一个PDF文档时出现的编码问题
05 如何批量提取Word文档的页码（并计算总页码）
06 如何自动对多个Word文档提取目录
07 如何批量替换Word文档中的指定内容（包括页眉）
08 批量带格式复制Sheet页到一个Excel文件中
09 如何使用列表内容批量生成PowerPoint演示文稿中的幻灯片

07、网络爬虫

01 解决直接访问请求地址返回403错误的问题
02 通过正则表达式快速获取电影的下载地址
03 如何获取免费的代理IP
04 如何检测免费代理IP是否有效
05 如何实现定时爬取网页内容
06 在Windows系统中如何实现定时执行Python的爬虫脚本
07 如何爬取网页中动态加载的数据
08 如何实现实时显示下载的进度（百分比形式）
09 通过Selenium浏览器自动化测试框架获取HTML代码中的可用数据
10 如何通过selenium框架实现自动切换浏览器页面
11 如何去除文本信息中的干扰数据
12 如何将爬取的Unicode码转换为中文信息
13 使用urlretrieve模块实现直接远程下载图片
14 如何获取网页中动态加载的验证码图片
15 如何通过requests模块实现Cookie登录
16 如何通过爬虫实现GitHub网页的模拟登录
17 如何使用移动端抓包工具Charles

08、数据处理 Pandas

01 读取Excel、文本、CSV等不同类型数据
02 获取网页表格数据（read_html()方法）
03 如何选取Excel指定行和（或）列数据
04 获取股票、财经等商业数据
05 使用Pandas实现数据库的读、写操作
06 常见索引问题处理
07 空值、0值等缺失值检测
08 空值处理方案
09 重复数据处理（df.drop_duplicates方法）
10 如何实现行列数据的转换
11 如何处理数据表的长宽转换
12 将DataFrame数据转成字典
13 将DataFrame数据转换成列表
14 将DataFrame数据转换成元组
15 实现DataFrame数据的排序或排名
16 如何提取中文地址描述中的省市区信息（str.split()内置方法）
17 如何实现Excel多表合并（concat()函数）
18 解决pandas.to_excel()函数覆盖原有Sheet页的问题
19 提取Excel日期数据中的年、月、日
20 获取日期区间的数据
21 按日期统计并显示数据（resample()方法）
22 处理时间频率问题

09、数据分析与图表

01 实现区域占比分析（饼形图）
02 如何为柱形图添加标签（月销量分析）
03 如何生成动态图表（pyecharts模块）
04 产品贡献度分析（柱形图加百分比）
05 时间序列分析（销售收入增长及季节性波动）
06 股票收盘价走势分析（折线图）
07 实现电商评论数据的情感分析
08 电商关键词分析并生成词云图
09 用networkx模块解读人物关系
10 根据房屋信息预测未知房价

10、Web 开发

01 如何生成包含字母和数字的图片验证码
02 如何检测输入的图片验证码是否正确
03 如何使用自定义404错误页面提升用户体验
04 如何使用WTForms验证Form表单中的字段
05 如何解决WTForms导致的 ID冲突问题
06 如何在CKEditor富文本编辑器中上传图片
07 如何使用装饰器判定用户操作权限
08 如何实现Tab栏页面的无跳转切换
09 如何实现自定义添加选项
10 使用Flask-SQLAlchemy实现数据的多对多关系
11 使用Flask-SQLAlchemy实现多条件查询
12 如何使用SMTP协议为注册用户发送邮件
13 如何解析JSON字符串
14 如何实现Bearer模式的Token验证
15 使用celery异步发送验证邮件
16 如何进行项目日志的配置
17 利用Channels实现Web Socket聊天室
18 自定义django-admin命令
19 如何实现message消息提示
20 使用Paginator实现数据分页
21 利用Ajax实现下拉框联动
22 使用Haystack框架实现站内全局搜索

11、程序打包

01 如何将Python程序打包为可执行的EXE文件
02 解决打包程序运行窗口一闪而过看不到异常信息的问题
03 解决打包程序时自定义模块不能被打包的问题
04 如何在Windows 64位系统下打包可在Windows32位系统下运行的可执行程序
05 解决图片不能被一同打包到可执行文件中的问题
06 解决打包后不能获取当前项目路径的问题
07 解决使用pyStrich模块的程序在打包时出现找不到字体文件的错误
08 解决打包使用pyecharts模块的程序时出现不显示图表的问题

12、程序自动化

01 检测到Python版本不一致时自动退出程序
02 解决由于未安装模块而导致的“No module named  '***' ”问题
03 连接MySQL数据库时自动开启服务器
04 如何在Windows系统下定时执行Python程序
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python编程锦囊（全彩版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>从零开始学Python 第2版
第 1部分　Python预备知识 1
第　1章 与计算机交流　3
1．1　理解我们为何要与计算机进行交谈　3
1．2　应用程序就是我们与计算机交流的形式　4
1．2．1　想想你的日常生活步骤　5
1．2．2　写下步骤　5
1．2．3　应用程序是一系列步骤的集合　6
1．2．4　计算机只是机械地执行程序步骤　6
1．3　应用程序是什么　6
1．3．1　计算机使用某种特殊语言　7
1．3．2　帮助人类和计算机交流　7
1．4　为何 Python这么酷　8
1．4．1　选用 Python的理由　9
1．4．2　确定如何从 Python获益　10
1．4．3　有哪些组织使用 Python　11
1．4．4　有用的 Python应用程序　11
1．4．5　Python与其他语言比较　12
第　2章 下载并安装 Python　14
2．1　下载合适的 Python版本　14
2．2　安装 Python17
2．2．1　在 Windows平台上安装 Python　17
2．2．2　在 Mac平台下安装 Python　19
2．2．3　在 Linux下安装 Python　20
2．3　访问安装好的 Python22
2．3．1　在 Windows平台下访问 Python　23
2．3．2　在 Mac平台下访问 Python　25
2．3．3　在 Linux系统下访问 Python　26
2．4　测试安装是否成功　26
第　3章 与 Python交互　28
3．1　打开命令行　28
3．1．1　启动 Python命令行　29
3．1．2　使用命令行　30
3．1．3　使用 Python环境变量　32
3．2　输入命令　33
3．2．1　告诉计算机做什么　34
3．2．2　告诉计算机你做完了　34
3．2．3　查看结果　34
3．3　使用帮助　36
3．3．1　进入帮助模式　36
3．3．2　获取帮助　37
3．3．3　退出帮助模式　39
3．3．4　直接获取帮助　39
3．4　关闭命令行　41
第　4章 编写你的第 一个应用程序　43
4．1　为何 IDE如此重要　44
4．1．1　编写出质量更高的代码　44
4．1．2　调试功能　44
4．1．3　为什么 Notebook有用　45
4．2　下载 Anaconda　45
4．2．1　下载 Anaconda　45
4．2．2　在 Linux下安装 Anaconda　46
4．2．3　在 Mac OS下安装 Anaconda　47
4．2．4　在 Windows下安装 Anaconda　48
4．3　下载数据集和示例代码　51
4．3．1　使用 Jupyter Notebook　51
4．3．2　定义代码仓库　52
4．4　创建应用程序　57
4．4．1　理解单元格　57
4．4．2　添加文档单元格　58
4．4．3　其他单元格内容　60
4．5　了解缩进的用法　60
4．6　添加注释　61
4．6．1　理解注释　62
4．6．2　使用注释提醒自己　63
4．6．3　使用注释阻止代码运行　63
4．7　关闭 Jupyter Notebook　64
第　5章 使用 Anaconda　65
5．1　下载代码　66
5．2　使用记录点　67
5．2．1　了解记录点的用法　67
5．2．2　保存记录点　68
5．2．3　恢复记录点　68
5．3　使用单元格　68
5．3．1　添加不同类型的单元格　68
5．3．2　拆分与合并单元格　69
5．3．3　移动单元格　69
5．3．4　运行单元格　70
5．3．5　隐藏 /显示输出　71
5．4　更改 Jupyter Notebook外观　71
5．4．1　使用命令面板查找命令　72
5．4．2　使用行号　73
5．4．3　使用单元格工具条功能　73
5．5　与内核交互　75
5．6　获取帮助　76
5．7　使用魔术函数　77
5．8　查看正在运行的进程　79
第　2部分 步入正题　81
第　6章 存储和更改信息　83
6．1　存储信息　83
6．1．1　变量是存储信息的箱子　84
6．1．2　使用正确的箱子存储数据　84
6．2　Python基本数据类型84
6．2．1　把信息放入变量中　85
6．2．2　认识数值类型　85
6．2．3　布尔值　89
6．2．4　字符串　89
6．3　日期和时间　90
第　7章 管理信息　92
7．1　控制 Python看待数据的方式　93
7．1．1　做比较　93
7．1．2　了解计算机如何做比较　93
7．2　运算符　94
7．2．1　运算符分类　94
7．2．2　运算符优先级　100
7．3　编写和使用函数　100
7．3．1　函数就是代码包　101
7．3．2　代码的可重用性　101
7．3．3　定义函数　102
7．3．4　调用函数　103
7．3．5　向函数发送信息　103
7．3．6　从函数返回信息　107
7．3．7　比较函数输出　108
7．4　获取用户输入　108
第　8章 做决策　110
8．1　使用 if语句做简单决策　110
8．1．1　if语句　111
8．1．2　在应用程序中使用 if语句　111
8．2　使用 if．．．else语句选择替代方案
8．2．1　理解 if．．．esle语句　115
8．2．2　在程序中使用 if．．．else语句　115
8．2．3　在程序中使用 if．．．elif语句　116
8．3　使用 if嵌套语句　119
8．3．1　使用多个 if或 if．．．else语句　119
8．3．2　综合使用各种 if语句　120
第　9章 做重复性工作　123
9．1　使用 for语句处理数据　124
9．1．1　理解 for语句　124
9．1．2　编写一个基本循环　124
9．1．3　使用 break语句跳出循环
9．1．4　使用 continue语句进入下一轮循环　127
9．1．5　使用 pass子句　128
9．1．6　在循环中使用 else语句　129
9．2　使用 while语句处理数据
9．2．1　理解 while语句　130
9．2．2　在程序中使用 while语句　131
9．3　循环语句嵌套　132
第　10章 处理错误　134
10．1　为何 Python不懂你
10．2　程序错误来源　136
10．2．1　错误发生的时间　136
10．2．2　区分错误类型　137
10．3　捕获异常　139
10．3．1　处理基本异常　139
10．3．2　处理特定异常　148
10．3．3　嵌套异常处理　150
10．4　引发异常　153
10．4．1　在异常情况下引发异常　154
10．4．2　把错误信息传递给调用者　154
10．5　创建和使用自定义异常　155
10．6　使用 finally子句　156
第　3部分 执行常见任务　159
第　11章 使用包　161
11．1　创建代码包　162
11．1．1　了解包的类型　163
11．1．2　包缓存　164
11．2　导入包　165
11．2．1　使用 import语句　167
11．2．2　使用 from．．．import语句　168
11．3　查找磁盘上的包　170
11．4　从其他地方下载包　171
11．4．1　打开 Anaconda Prompt　172
11．4．2　使用 conda包　172
11．4．3　使用 pip安装包　176
11．5　查看包内容　177
11．6　查看包文档　179
11．6．1　打开 Pydoc程序　179
11．6．2　使用快速访问链接　181
11．6．3　输入搜索词　182
11．6．4　查看结果　182
第　12章 使用字符串　184
12．1　了解字符串的不同之处　184
12．1．1　使用数字定义字符　185
12．1．2　使用字符创建字符串　185
12．2　创建包含特殊字符的字符串　187
12．3　获取子字符串　189
12．4　字符串切片和切块　190
12．5　查找字符串　193
12．6　格式化字符串　195
第　13章 管理列表　199
13．1　在应用程序中组织信息　200
13．1．1　理解列表　200
13．1．2　计算机看待列表的方式　200
13．2　创建列表　202
13．3　访问列表　203
13．4　遍历列表　205
13．5　修改列表　205
13．6　列表搜索　208
13．7　列表排序　209
13．8　打印列表　211
13．9　使用 Counter对象　212
第　14章 收集各种数据　214
14．1　理解集合　214
14．2　使用元组　215
14．3　使用字典　218
14．3．1　创建和使用字典　219
14．3．2　使用字典代替 switch语句　221
14．4　使用列表创建栈　224
14．5　使用队列　226
14．6　使用双端队列　228
第　15章 创建和使用类　230
15．1　把类理解成一种代码封装方法　231
15．2　类的结构　232
15．2．1　定义类　232
15．2．2　类的内置属性　233
15．2．3　使用方法　234
15．2．4　使用构造函数　236
15．2．5　使用变量　237
15．2．6　使用带有可变参数列表的方法　239
15．2．7　运算符重载　241
15．3　创建类　242
15．3．1　定义 MyClass类　242
15．3．2　保存类到磁盘　243
15．4　在应用程序中使用 MyClass类　244
15．5　通过类扩展创建新类　245
15．5．1　创建子类　245
15．5．2　在应用程序中测试类　247
第　4部分 执行高级任务　249
第　16章 存储数据到文件　251
16．1　了解永久化存储的工作原理　252
16．2　创建永久存储内容　253
16．3　创建文件　256
16．4　读取文件内容　259
16．5　更新文件内容　261
16．6　删除文件　265
第　17章 发送电子邮件　266
17．1　发送电子邮件时发生了什么　266
17．1．1　像看信一样看电子邮件　267
17．1．2　定义信封的各个部分　268
17．1．3　定义信件的各个部分　272
17．2　创建电子邮件消息　276
17．2．1　使用文本消息　276
17．2．2　使用 HTML页面　277
17．3　查看电子邮件　278
第　5部分 几个“十大”　279
第　18章 十大优秀编程资源　281
18．1　使用 Python在线文档　281
18．2　使用 LearnPython．org教程　282
18．3　使用 Python做 Web编程　283
18．4　获取更多库　284
18．5　使用 IDE快速创建应用程序　285
18．6　更容易地检查语法　285
18．7　使用 XML　286
18．8　克服常见的 Python新手错误　287
18．9　了解 Unicode　288
18．10　加快 Python程序的运行速度　288
第　19章 Python十大赚钱之道　289
19．1　使用 Python做 QA　289
19．2　在一家小公司谋得一份 IT工作　290
19．3　为软件产品编写脚本　291
19．4　管理网络　292
19．5　教授编程技术　292
19．6　帮助人们确定地理位置　292
19．7　数据挖掘　293
19．8　嵌入式系统　293
19．9　做科学计算任务　294
19．10　实时数据分析　294
第　20章 十大提升你 Python技能的工具　296
20．1　使用 Roundup Issue Tracker跟踪 Bug　297
20．2　使用 VirtualEnv创建虚拟环境　298
20．3　使用 PyInstaller安装你的应用程序　299
20．4　使用 pdoc创建开发人员文档　300
20．5　使用 Komodo Edit编写程序代码　301
20．6　使用 pydbgr调试程序　301
20．7　使用 IPython进入交互环境　302
20．8　使用 PyUnit测试 Python应用程序　302
20．9　使用 Isort整理代码　303
20．10　使用 Mercurial进行版本控制　303
第　21章 你必须知道的十大 Python库　305
21．1　使用 PyCrypto保护数据安全　306
21．2　使用 SQLAlchemy与数据库交互　306
21．3　使用谷歌地图看世界　307
21．4　使用 TKInter创建图形用户界面　307
21．5　使用 PrettyTable以表格形式呈现数据　307
21．6　使用 PyAudio为程序添加声音　307
21．7　使用 PyQtGraph操作图像　308
21．8　使用 IRLib查找信息　309
21．9　使用 JPype创建可互操作的 Java环境　309
21．10　使用 Twisted Matrix访问本地网络资源　310
21．11　使用 httplib2访问网络资源　310
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>从零开始学Python 第2版
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python程序设计基础教程（慕课版）
第 1章　编程前的准备工作　1
1．1　关于编程　1
1．2　关于Python　2
1．2．1　Python语言的特点　2
1．2．2　Python 2与Python 3　3
1．3　安装Python运行环境　4
1．3．1　在Windows下安装　4
1．3．2　在macOS下安装　5
1．4　第 一个Python程序　5
1．4．1　在交互模式下运行Python程序　5
1．4．2　选择一款编辑器　6
1．4．3　PyCharm　6
1．4．4　以文件模式运行Python程序　10
1．4．5　Python之禅　11
1．5　本章小结　12
1．6　课后习题　12
第　2章 Python语言基础　14
2．1　常量和简单数据类型　14
2．1．1　数字　14
2．1．2　True和False　15
2．1．3　字符串　15
2．1．4　数据类型的转换　16
2．2　变量与赋值语句　17
2．2．1　标识符命名　17
2．2．2　对象　17
2．2．3　赋值语句　17
2．2．4　案例：使用变量与常量　18
2．3　运算符与表达式　18
2．3．1　运算符　18
2．3．2　运算符的优先级　21
2．3．3　改变运算顺序　22
2．3．4　表达式　22
2．3．5　eval()函数　22
2．4　输入与输出　23
2．4．1　input()函数　23
2．4．2　print()函数　23
2．4．3　格式化字符串　24
2．4．4　续行符　25
2．5　注释　25
2．6　本章小结　26
2．7　课后习题　26
第3章　神奇的小海龟（Turtle）/29
3．1　第 一个海龟程序　29
3．2　绘制正多边形　30
3．2．1　重复、重复、再重复　30
3．2．2　使用循环化简程序　30
3．2．3　最重要的格式控制——缩进　31
3．3　绘制美丽的五角星　31
3．3．1　向左转，向右转　31
3．3．2　为五角星上色　32
3．4　大星星和小星星　33
3．4．1　函数的定义与调用　33
3．4．2　去吧，小海龟　34
3．4．3　函数的参数　35
3．5　更多关于海龟的函数　36
3．6　本章小结　37
3．7　课后习题　37
第4章　程序的流程控制　40
4．1　顺序结构　40
4．2　分支结构　41
4．2．1　if…else语句　41
4．2．2　elif语句　42
4．3　循环结构　43
4．3．1　while语句　43
4．3．2　for语句　43
4．3．3　嵌套循环　44
4．3．4　循环中的else语句　45
4．4　流程中转break语句和continue语句　45
4．5　综合案例　47
4．6　本章小结　49
4．7　课后习题　49
第5章　函数与模块　54
5．1　函数的定义与调用　54
5．1．1　文档字符串　55
5．1．2　函数调用　55
5．1．3　函数的返回值　56
5．1．4　匿名函数　57
5．2　函数的参数传递　57
5．2．1　默认参数与关键字参数　58
5．2．2　不定长参数　59
5．3　变量的作用域　59
5．4　函数的递归　61
5．5　模块化程序设计　62
5．5．1　模块及其引用　63
5．5．2　包　65
5．6　内置函数　66
5．7　本章小结　67
5．8　课后习题　68
第6章　数据结构　70
6．1　元组　70
6．1．1　创建元组　70
6．1．2　访问元组中的数据　71
6．1．3　元组的连接　71
6．1．4　删除元组　71
6．1．5　常用元组函数　72
6．2　列表　72
6．2．1　创建列表　72
6．2．2　访问列表中的数据　72
6．2．3　列表赋值　72
6．2．4　删除列表中的元素　73
6．2．5　列表数据的操作方法　73
6．2．6　常用列表函数　75
6．3　字符串　75
6．3．1　字符串的表示　75
6．3．2　字符串的截取　75
6．3．3　连接字符串　75
6．3．4　格式化字符串　76
6．3．5　字符串的操作方法　77
6．3．6　其他操作　77
6．4　字典　78
6．4．1　字典的创建　78
6．4．2　访问字典中的数据　78
6．4．3　修改字典中的数据　78
6．4．4　字典的操作方法　79
6．4．5　常用的字典函数　80
6．4．6　嵌套字典　81
6．5　集合　81
6．5．1　创建集合　81
6．5．2　集合数据的添加与删除　81
6．5．3　集合的数学运算　81
6．6　本章小结　82
6．7　课后习题　83
第7章　异常处理和文件操作　85
7．1　异常处理　85
7．1．1　try…except语句　86
7．1．2　finally语句　87
7．2　断言　87
7．3　文件操作　88
7．3．1　写文件操作　89
7．3．2　读文件操作　90
7．3．3　with语句　91
7．4　本章小结　92
7．5　课后习题　92
第8章　面向对象编程　94
8．1　类和对象　94
8．1．1　Person类的定义与实例化　95
8．1．2　Person类的完整定义　96
8．1．3　对象属性的默认值设置　97
8．1．4　对象属性的添加、修改和删除　98
8．1．5　私有属性和私有方法　98
8．1．6　类属性　99
8．2　类的继承　100
8．2．1　一个简单的继承例子　100
8．2．2　子类方法对父类方法的覆盖　101
8．2．3　在子类方法中调用父类的同名方法　102
8．3　本章小结　103
8．4　课后习题　103
第9章　图形用户界面　105
9．1　Tkinter简介　105
9．1．1　第 一个Tkinter窗口　105
9．1．2　在窗口中加入组件　106
9．1．3　为按钮设置动作事件　107
9．1．4　坐标管理器　108
9．2　Tkinter组件及其属性　109
9．2．1　Label组件和Entry组件　110
9．2．2　Listbox组件　111
9．2．3　Canvas组件　112
9．3　案例分析：简单计算器　113
9．3．1　实现计算器界面　114
9．3．2　实现数字按钮的点击功能　115
9．3．3　实现小数点按钮的功能　115
9．3．4　实现运算按钮的功能　116
9．4　本章小结　117
9．5　课后习题　117
第　10章 数据分析与可视化　119
10．1　数值计算库numpy　119
10．1．1　创建numpy数组　119
10．1．2　数组与数值的算术运算　120
10．1．3　数组与数组的算术运算　121
10．1．4　数组的关系运算　121
10．1．5　分段函数　122
10．1．6　数组元素访问　122
10．1．7　数组切片操作　123
10．1．8　改变数组形状　123
10．1．9　二维数组转置　124
10．1．10　向量内积　124
10．1．11　数组的函数运算　125
10．1．12　对数组的不同维度元素进行计算　125
10．1．13　广播　126
10．1．14　计算数组中元素的出现次数　127
10．1．15　矩阵运算　127
10．2　科学计算扩展库scipy　128
10．2．1　常数模块constants　128
10．2．2　特殊函数模块special　129
10．2．3　多项式计算与符号计算　129
10．3　数值计算可视化库matplotlib　131
10．3．1　绘制正弦曲线　131
10．3．2　绘制散点图　132
10．3．3　绘制饼图　134
10．3．4　绘制带有中文标签和图例的图　135
10．3．5　绘制带有公式的图　135
10．3．6　绘制三维参数曲线　136
10．3．7　绘制三维图形　137
10．4　本章小结　139
10．5　课后习题　139
第　11章 学生成绩管理系统的设计与实现　141
11．1　系统概述　141
11．2　数据类型的定义　142
11．3　为学生类型定制的基本操作　143
11．4　用文本文件实现数据的永久保存　146
11．5　用两级菜单四层函数实现系统　148
11．6　课后习题　152
附录A　配套实验　153
实验一　使用Turtle库绘制七巧板　153
实验二　程序的流程控制　155
实验三　函数的定义和调用　156
实验四　数据结构及文件读写应用　159
实验五　GUI程序设计　162
附录B　在线教学辅助平台教师使用手册　164
附录C　配套电子资源使用手册　169
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python程序设计基础教程（慕课版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python基础实例教程（微课版）
第 1章　初识Python　1
1．1　快速了解Python　2
1．1．1　Python的起源与背景　2
1．1．2　Python的功能　3
1．1．3　Python的优势与特色　4
1．2　在Windows下搭建Python开发环境　6
1．2．1　操作系统的选择　6
1．2．2　在Windows下安装Python　7
1．3　在Linux下搭建Python开发环境　13
1．4　编写Python程序　17
1．5　运行一个Python程序　18
1．5．1　运行单行Python程序　18
1．5．2　运行源码（多行）Python程序　18
1．6　小结与练习　19
第 2章　Python语法基础　20
2．1　常量与变量　21
2．1．1　常量与变量的概念　21
2．1．2　常量与变量应用实例　21
2．2　数与字符串　23
2．2．1　数的概念及应用实例　24
2．2．2　字符串的概念及应用实例　24
2．3　数据类型　28
2．3．1　各种数据类型　28
2．3．2　Python数据类型应用实例　28
2．4　认识标识符　32
2．5　对象　33
2．5．1　Python中的对象　33
2．5．2　Python对象使用应用实例　33
2．6　行与缩进　34
2．6．1　行　34
2．6．2　缩进　35
2．7　小结与练习　36
第3章　Python运算符与表达式　37
3．1　认识运算符　38
3．1．1　Python运算符的概念　38
3．1．2　Python常见运算符　38
3．1．3　Python运算符应用实例　39
3．2　优先级　45
3．2．1　优先级的概念　45
3．2．2　优先级规则及应用实例　45
3．3　表达式　47
3．3．1　表达式的概念　47
3．3．2　Python表达式应用实例　47
3．4　小结与练习　48
第4章　Python控制流　49
4．1　3种控制流　50
4．1．1　Python控制流分类　50
4．1．2　控制流应用场景　50
4．2　控制流之if　51
4．2．1　分支结构　51
4．2．2　if语句　52
4．2．3　if语句应用实例　52
4．3　控制流之while　54
4．3．1　循环结构　54
4．3．2　while语句　54
4．3．3　while语句应用实例　54
4．4　控制流之for　55
4．4．1　for语句　55
4．4．2　for语句应用实例　56
4．5　break语句　57
4．5．1　中断机制　57
4．5．2　break语句　57
4．5．3　break语句应用实例　57
4．6　continue语句　60
4．6．1　continue语句　60
4．6．2　continue语句应用实例　60
4．7　小结与练习　62
第5章　Python函数　64
5．1　函数的概念　65
5．1．1　Python函数　65
5．1．2　Python函数的基本应用实例　65
5．2　形参与实参　67
5．2．1　形参　67
5．2．2　实参　67
5．2．3　形参与实参的区别　70
5．3　全局变量　70
5．3．1　全局变量的概念　70
5．3．2　全局变量应用实例　70
5．4　局部变量　71
5．4．1　局部变量的概念　71
5．4．2　局部变量应用实例　71
5．4．3　全局变量与局部变量的区别　73
5．5　函数的使用与返回值　73
5．5．1　函数的使用　73
5．5．2　返回值详解　74
5．6　文档字符串　75
5．6．1　文档字符串的概念　75
5．6．2　文档字符串实例　75
5．7　Python常见内置函数应用实例　76
5．8　小结与练习　77
第6章　Python模块　79
6．1　模块　80
6．1．1　模块的概念　80
6．1．2　导入模块的方法　81
6．1．3　sys模块的使用　82
6．2　模块的名字　82
6．2．1　模块名字的定义　82
6．2．2　模块名字应用实例　83
6．3　创建自己的模块　83
6．3．1　自定义模块的概念　83
6．3．2　自定义模块应用实例　83
6．4　dir()函数　84
6．4．1　dir()函数的定义　84
6．4．2　dir()函数使用实例　84
6．5　小结与练习　85
第7章　Python数据结构实战　86
7．1　数据结构通俗速解　87
7．2　栈　88
7．2．1　栈的概念　88
7．2．2　图解栈　88
7．2．3　Python中栈的应用实例　90
7．3　队列　95
7．3．1　队列的概念　95
7．3．2　图解队列　95
7．3．3　Python中队列的应用实例　98
7．4　树　101
7．4．1　树的概念　102
7．4．2　图解树　102
7．4．3　Python中树的应用实例　103
7．5　玩转链表　108
7．5．1　链表的概念　108
7．5．2　图解链表　108
7．5．3　Python中链表的应用实例　108
7．6　bitmap　111
7．6．1　bitmap的概念　111
7．6．2　图解bitmap　111
7．6．3　Python中bitmap的应用实例　113
7．7　图　117
7．7．1　图的概念　117
7．7．2　图解图结构　118
7．7．3　Python中图的应用实例　118
7．8　小结与练习　119
第8章　Python常见算法实例　122
8．1　算法概述　123
8．2　快速排序　123
8．2．1　快速排序算法原理　123
8．2．2　Python中快速排序的应用实例　128
8．3　选择排序　131
8．3．1　选择排序原理　131
8．3．2　Python中选择排序的应用实例　134
8．4　二路归并排序　134
8．4．1　二路归并排序原理　134
8．4．2　Python中二路归并排序的应用实例　137
8．5　搜索算法　144
8．5．1　搜索算法原理　144
8．5．2　Python中二分查找算法的应用实例　145
8．6　小结与练习　146
第9章　Python面向对象程序设计　148
9．1　面向对象程序设计　149
9．1．1　面向对象的生活案例　149
9．1．2　面向对象程序设计的概念　149
9．2　类与对象　150
9．2．1　类的概念　150
9．2．2　类的使用　150
9．2．3　对象的应用实例　150
9．3　方法和属性　151
9．3．1　方法和属性的概念　151
9．3．2　方法和属性应用实例　152
9．3．3　专有方法　156
9．4　继承　159
9．4．1　继承的概念　159
9．4．2　继承的应用实例　159
9．5　小结与练习　163
第 10章　Python异常处理　165
10．1　异常处理的概念　166
10．2　处理Python的异常　167
10．3　异常的引发　170
10．3．1　异常引发的概念　170
10．3．2　异常引发实例　170
10．4　finally的使用　172
10．4．1　finally的概念　172
10．4．2　finally的应用实例　172
10．5　小结与练习　175
第 11章　Python文件操作　177
11．1　文件操作的概念　178
11．1．1　文件操作的方式　178
11．1．2　Python文件操作方法概述　178
11．2　文件的创建　179
11．2．1　Python文件创建的思路　179
11．2．2　文件创建应用实例　179
11．3　文件的移动　180
11．3．1　Python文件移动的思路　180
11．3．2　文件移动应用实例　180
11．4　文件的判断　182
11．4．1　Python文件判断思路　182
11．4．2　Python文件判断应用实例　182
11．5　文件的读取与写入　184
11．5．1　Python文件的读取思路　184
11．5．2　Python文件读取应用实例　184
11．5．3　Python文件写入思路　186
11．5．4　Python文件写入应用实例　186
11．6　文件的其他操作　188
11．7　小结与练习　189
第 12章　Python标准库及其他应用　192
12．1　标准库　193
12．1．1　标准库的概念　193
12．1．2　标准库应用实例　193
12．2　Python的特殊方法　197
12．3　元组、列表与字典的接收　199
12．4　exec()函数　201
12．5　eval()函数　202
12．6　lambda表达式　202
12．7　assert断言语句与repr()函数　204
12．8　小结与练习　205
第 13章　Python实战项目——远程操控计算机　207
13．1　项目目标　208
13．2　项目开发的步骤　208
13．3　需求分析　208
13．3．1　需求分析的概念　208
13．3．2　本项目的需求分析应用实例　208
13．4　简单代码的实现与改善　209
13．4．1　简单代码的实现　209
13．4．2　维护与改善　210
13．5　远程控制渠道的选择　210
13．5．1　远程控制渠道　210
13．5．2　本项目中远程控制渠道的选择应用实例　210
13．6　通过邮件控制Python操作计算机　210
13．7　开发过程中的调试　218
13．8　打包Python程序　219
13．8．1　程序打包的概念　219
13．8．2　打包Python程序的方法　219
13．8．3　本项目中程序打包的应用实例　219
13．9　项目的实现与总结　222
第 14章　Python实战项目——腾讯动漫爬虫　223
14．1　urllib基础　224
14．2　PhantomJS基础　229
14．3　需求分析　234
14．4　腾讯动漫爬虫的实现思路　237
14．5　腾讯动漫爬虫的实现　237
14．5．1　使用PhantomJS实现动态触发动漫图片地址的获取　237
14．5．2　编写urllib爬虫对漫画图片进行爬取　239
14．5．3　项目完整代码　243
14．6　项目的实现与总结　244
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python基础实例教程（微课版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>机器学习即服务：将Python机器学习创意快速转变为云端Web应用程序
译者序1
译者序2
译者序3
关于作者
关于技术审校者
前言
第1章　无服务器计算介绍1
1.1　一个简单的本地Flask应用程序1
1.2　在微软Azure上使用无服务器计算4
1.2.1　操作步骤5
1.2.2　结论和附加信息12
1.3　在谷歌云上使用无服务器计算12
1.3.1　操作步骤13
1.3.2　结论和附加信息18
1.4　在Amazon AWS上使用无服务器计算19
1.4.1　操作步骤19
1.4.2　结论和附加信息24
1.5　在PythonAnywhere上托管应用程序24
1.5.1　操作步骤25
1.5.2　结论和附加信息26
1.6　本章小结26
第2章　在Azure上进行共享单车回归模型智能预测27
2.1　共享单车租赁需求回归系数分析28
2.2　探索共享单车原始数据集28
2.2.1　下载UCI机器学习库数据集29
2.2.2　Jupyter Notebook配置使用29
2.2.3　数据集探索31
2.2.4　预测结果变量分析33
2.2.5　量化特征与租赁统计34
2.2.6　分类特征研究35
2.3　数据建模准备工作36
2.3.1　回归建模37
2.3.2　简单线性回归37
2.3.3　简单线性回归模型37
2.4　特征工程试验39
2.4.1　多项式建模39
2.4.2　创建分类数据虚拟特征40
2.4.3　非线性模型试验41
2.4.4　使用时间序列复杂特征42
2.5　简约模型44
2.5.1　简单模型中的回归系数提取44
2.5.2　R-Squared44
2.5.3　基于回归系数的新数据预测46
2.6　共享单车租赁需求交互式Web应用设计48
2.6.1　代码可读性与扩展性摘要48
2.6.2　构建本地Flask应用49
2.6.3　下载运行GitHub共享单车代码50
2.6.4　Web应用程序调试最佳实践51
2.7　在微软Azure上运行Web应用程序54
2.7.1　使用Git托管项目代码54
2.7.2　微软Azure命令行接口工具使用56
2.7.3　资源清理59
2.7.4　故障排查60
2.7.5　步骤回顾62
2.8　Web应用程序脚本及技术分析62
2.8.1　main.py文件分析63
2.8.2　/static/文件夹分析64
2.8.3　/templates/index.html文件及脚本分析64
2.9　本章小结66
2.10　附加资源66
第3章　在GCP上基于逻辑回归实现实时智能67
3.1　规划Web应用68
3.2　数据处理68
3.2.1　处理分类型数据71
3.2.2　从分类型数据创建虚拟特征75
3.3　建模75
3.3.1　训练和测试数据集拆分76
3.3.2　逻辑回归77
3.3.3　预测幸存率78
3.4　准备上云78
3.4.1　函数startup()79
3.4.2　函数submit_new_profile()79
3.4.3　使用HTML表单实现交互79
3.4.4　创建动态图像80
3.4.5　下载Titanic代码81
3.5　部署到谷歌云上82
3.5.1　Google App Engine82
3.5.2　在Google App Engine上进行部署83
3.5.3　问题排查86
3.5.4　收尾工作87
3.6　代码回顾87
3.6.1　main.py87
3.6.2　app.yaml88
3.6.3　appengine_config.py文件与lib文件夹89
3.6.4　requirements.txt89
3.7　步骤回顾90
3.8　本章小结90
第4章　在AWS上使用Gradient Boosting Machine进行预训练91
4.1　Web应用程序规划92
4.2　探索葡萄酒品质数据集92
4.3　处理不平衡的类别95
4.4　使用Gradient Boosting Classifier97
4.4.1　评估模型98
4.4.2　持久化模型101
4.4.3　新数据预测101
4.5　设计Web应用程序以交互评估葡萄酒品质103
4.6　Ajax—服务器端动态Web渲染104
4.7　在虚拟环境中工作：一个方便实验、更加安全和纯净的沙箱104
4.8　AWS Elastic Beanstalk105
4.8.1　为Elastic Beanstalk创建一个访问账户106
4.8.2　Elastic Beanstalk108
4.8.3　EB Command Line Interface108
4.8.4　修复WSGIApplication-Group110
4.8.5　创建EB应用程序111
4.8.6　查看应用程序111
4.9　资源清理112
4.10　步骤回顾114
4.11　故障排查115
4.11.1　查看日志115
4.11.2　SSH登录到实例115
4.12　本章小结116
第5章　案例研究1：在Web和移动浏览器上预测股票市场117
5.1　配对交易策略118
5.2　下载和准备数据119
5.2.1　准备数据120
5.2.2　股票代码透视121
5.3　价格市场数据扩展121
5.4　绘制价差122
5.5　交易理念123
5.5.1　寻找极端案例123
5.5.2　提供交易建议124
5.6　计算交易股数125
5.7　设计一个移动友好的Web应用程序提供交易建议127
5.8　运行本地Flask应用程序128
5.9　表单验证130
5.10　在PythonAnywhere上运行应用程序130
5.11　修复WSGI文件133
5.11.1　源代码133
5.11.2　WSGI配置133
5.11.3　重新加载网站134
5.12　PythonAnywhere故障排查135
5.13　本章小结136
第6章　基于Azure和Google地图的犯罪行为预测137
6.1　Web应用程序规划138
6.2　探索旧金山犯罪热图数据集138
6.2.1　数据清洗139
6.2.2　数据重分布140
6.2.3　周数据探索142
6.3　数据特征工程142
6.3.1　创建年度月份汇总数据特征143
6.3.2　创建时段数据特征144
6.3.3　时段特征数据集探索145
6.4　地理数据可视化146
6.4.1　地理坐标位置绘制146
6.4.2　地理坐标近似值区块创建147
6.5　基于历史数据的犯罪预测149
6.6　Google地图152
6.7　热力图层153
6.8　犯罪数据在Google地图上的应用154
6.9　犯罪预测数据自定义提取155
6.10　设计Web应用程序156
6.10.1　添加Google API密钥157
6.10.2　本地运行Web应用程序157
6.10.3　Azure公有云Git准备157
6.10.4　Azure命令行接口工具160
6.10.5　故障排查164
6.10.6　资源清理166
6.11　本章小结166
第7章　在AWS上使用朴素贝叶斯和OpenWeather进行预测167
7.1　探索数据集167
7.2　朴素贝叶斯169
7.3　Sklearn中的GaussianNB170
7.4　实时天气预报OpenWeatherMap171
7.4.1　使用天气预测服务173
7.4.2　数据转换174
7.5　设计Web应用程序177
7.6　在AWS Elastic Beanstalk上运行应用程序179
7.6.1　修复WSGIApplication-Group180
7.6.2　查看应用程序181
7.6.3　记得终止实例182
7.7　本章小结184
7.7.1　访问OpenWeatherMap数据184
7.7.2　捕获异常184
7.7.3　处理用户输入的数据185
第8章　在GCP上基于TensorFlow实现交互式绘画和数字预测186
8.1　MNIST数据集186
8.2　TensorFlow189
8.3　使用TensorFlow和卷积网络建模189
8.3.1　构建建模层190
8.3.2　损益函数191
8.3.3　实例化会话191
8.3.4　训练191
8.3.5　准确度191
8.3.6　运行脚本192
8.4　准备上云193
8.4.1　运行一个保存的TensorFlow模型193
8.4.2　保存模型194
8.4.3　画布194
8.4.4　从画布到TensorFlow195
8.4.5　测试新的手写数字195
8.4.6　设计Web应用程序196
8.4.7　下载Web应用程序197
8.5　部署到谷歌云上198
8.5.1　谷歌云Flexible App Engine198
8.5.2　在Google App Engine上部署199
8.5.3　问题排查201
8.5.4　收尾工作202
8.6　本章小结203
8.6.1　HTML5
8.6.2　TensorFlow203
8.6.3　设计203
第9章 　案例研究2：动态股票图表显示205
9.1　使用Matplotlib创建股票图表205
9.2　探索配对交易图表207
9.3　设计Web应用程序210
9.4　具有移动友好性的表格211
9.5　上传Web应用程序到PythonAnywhere213
9.6　本章小结215
第10章　在GCP上使用奇异值分解实现推荐系统216
10.1　规划Web应用216
10.2　推荐系统简介217
10.3　探索MovieLens数据集217
10.3.1　MovieLens数据集概况218
10.3.2　探索ratings.csv和movies.csv219
10.3.3　理解评级和评级文化221
10.3.4　给出推荐224
10.4　协同过滤226
10.4.1　相似性和距离测量工具227
10.4.2　欧几里得距离227
10.4.3　余弦相似距离228
10.5　奇异值分解228
10.5.1　将电影评级集中到零周围229
10.5.2　观察SVD的行为229
10.6　准备上云232
10.6.1　下载并在本地运行“下一部电影看什么？”232
10.6.2　代码解释234
10.7　部署到谷歌云上236
10.7.1　在Google App Engine上部署236
10.7.2　问题排查240
10.7.3　收尾工作240
10.8　本章小结241
第11章　在Azure上使用NLP和可视化技术简化复杂概念242
11.1　Web应用规划242
11.2　数据探索243
11.3　文本清理244
11.4　基于文本的特征工程245
11.5　TFIDF文本数据清理247
11.6　NLP与正则表达式247
11.7　使用外部垃圾邮件关键字列表248
11.8　使用Sklearn库TfidfVectorizer提取特征250
11.9　输出变量准备250
11.10　使用Sklearn库随机森林分类器建模251
11.10.1　模型性能测量252
11.10.2　模型阈值交互255
11.11　Web图形化交互256
11.12　构建本地Flask Web应用257
11.13　将应用程序部署到Azure公有云259
11.13.1　在Azure上部署Git259
11.13.2　Azure命令行接口工具262
11.13.3　资源清理265
11.13.4　故障排查266
11.14　本章小结与附加资源268
第12章　案例研究3：使用基础财务信息使内容更丰富269
12.1　访问股票上市公司名单269
12.2　使用维基百科API获取公司信息271
12.3　构建动态FinViz链接272
12.4　基础消息探索273
12.5　设计Web应用程序274
12.6　上传Web应用程序到PythonAnywhere276
12.7　本章小结281
第13章　使用Google Analytics282
13.1　创建Google Analytics账户282
13.2　JavaScript跟踪器283
13.3　阅读分析报告284
13.4　流量来源286
13.5　页面286
13.6　本章小结与附加资源287
第14章　在PythonAnywhere上使用A/B测试和MySQL数据库288
14.1　A/B测试289
14.1.1　用户跟踪290
14.1.2　通用唯一标识符290
14.2　MySQL290
14.2.1　使用命令行启动和停止服务292
14.2.2　MySQL命令行监视器293
14.2.3　创建数据库293
14.2.4　创建数据表294
14.2.5　创建数据库用户295
14.3　Python库：mysql.connector295
14.3.1　SELECT SQL语句296
14.3.2　INSERT SQL语句296
14.3.3　UPDATE SQL语句297
14.4　将代码抽象为函数298
14.5　设计Web应用程序300
14.6　在PythonAnywhere上设置MySQL300
14.7　在PythonAnywhere上进行A/B测试302
14.8　A/B测试结果304
14.9　本章小结304
第15章　从访问者到订阅者306
15.1　基于文本的身份验证306
15.1.1　Flask-HTTPAuth硬编码账户307
15.1.2　摘要式身份验证示例308
15.1.3　使用外部文本文件的摘要式身份验证示例309
15.2　简单订阅插件系统311
15.2.1　用Memberful进行销售311
15.2.2　用PayPal进行捐赠315
15.2.3　用Stripe进行购买317
15.3　本章小结321
第16章　案例研究4：使用Memberful构建订阅付费墙322
16.1　升级Memberful和Python-Anywhere支付账户323
16.1.1　升级Memberful323
16.1.2　升级PythonAnywhere326
16.1.3　使用pip安装Flask-SSLify326
16.2　Memberful用户验证327
16.2.1　两步流程和Flask会话机制327
16.2.2　身份验证第1步328
16.2.3　身份验证第2步328
16.2.4　调用Memberful函数330
16.3　设计Web应用程序331
16.3.1　在Memberful.com上设计一个订阅计划331
16.3.2　将Web应用程序上传到PythonAnywhere333
16.3.3　在Memberful和MySQL中替换你自己的凭据335
16.4　代码解释336
16.4.1　main.py336
16.4.2　welcome.html336
16.4.3　index.html337
16.5　本章小结338
第17章　关闭所有资源339
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>机器学习即服务：将Python机器学习创意快速转变为云端Web应用程序
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深度学习与图像识别：原理与实践
前言
第1章　机器视觉在行业中的应用1
1.1　机器视觉的发展背景1
1.1.1　人工智能1
1.1.2　机器视觉2
1.2　机器视觉的主要应用场景3
1.2.1　人脸识别3
1.2.2　视频监控分析4
1.2.3　工业瑕疵检测5
1.2.4　图片识别分析6
1.2.5　自动驾驶/驾驶辅助7
1.2.6　三维图像视觉8
1.2.7　医疗影像诊断8
1.2.8　文字识别9
1.2.9　图像/视频的生成及设计9
1.3　本章小结10
第2章　图像识别前置技术11
2.1　深度学习框架11
2.1.1　Theano11
2.1.2　Tensorflow12
2.1.3　MXNet13
2.1.4　Keras13
2.1.5　PyTorch14
2.1.6　Caffe14
2.2　搭建图像识别开发环境15
2.2.1　Anaconda15
2.2.2　conda18
2.2.3　Pytorch的下载与安装19
2.3　Numpy使用详解20
2.3.1　创建数组20
2.3.2　创建Numpy数组22
2.3.3　获取Numpy属性24
2.3.4　Numpy数组索引25
2.3.5　切片25
2.3.6　Numpy中的矩阵运算26
2.3.7　数据类型转换27
2.3.8　Numpy的统计计算方法28
2.3.9　Numpy中的arg运算29
2.3.10　FancyIndexing29
2.3.11　Numpy数组比较30
2.4　本章小结31
第3章　图像分类之KNN算法32
3.1　KNN的理论基础与实现32
3.1.1　理论知识32
3.1.2　KNN的算法实现33
3.2　图像分类识别预备知识35
3.2.1　图像分类35
3.2.2　图像预处理36
3.3　KNN实战36
3.3.1　KNN实现MNIST数据分类36
3.3.2　KNN实现Cifar10数据分类41
3.4　模型参数调优44
3.5　本章小结48
第4章　机器学习基础49
4.1　线性回归模型49
4.1.1　一元线性回归50
4.1.2　多元线性回归56
4.2　逻辑回归模型57
4.2.1　Sigmoid函数58
4.2.2　梯度下降法59
4.2.3　学习率的分析61
4.2.4　逻辑回归的损失函数63
4.2.5　Python实现逻辑回归66
4.3　本章小结68
第5章　神经网络基础69
5.1　神经网络69
5.1.1　神经元70
5.1.2　激活函数72
5.1.3　前向传播76
5.2　输出层80
5.2.1　Softmax80
5.2.2　one-hotencoding82
5.2.3　输出层的神经元个数83
5.2.4　MNIST数据集的前向传播83
5.3　批处理85
5.4　广播原则87
5.5　损失函数88
5.5.1　均方误差88
5.5.2　交叉熵误差89
5.5.3　Mini-batch90
5.6　最优化91
5.6.1　随机初始化91
5.6.2　跟随梯度（数值微分）92
5.7　基于数值微分的反向传播98
5.8　基于测试集的评价101
5.9　本章小结104
第6章　误差反向传播105
6.1　激活函数层的实现105
6.1.1　ReLU反向传播实现106
6.1.2　Sigmoid反向传播实现106
6.2　Affine层的实现107
6.3　Softmaxwithloss层的实现108
6.4　基于数值微分和误差反向传播的比较109
6.5　通过反向传播实现MNIST识别111
6.6　正则化惩罚114
6.7　本章小结115
第7章　PyTorch实现神经网络图像分类116
7.1　PyTorch的使用116
7.1.1　Tensor116
7.1.2　Variable117
7.1.3　激活函数118
7.1.4　损失函数120
7.2　PyTorch实战122
7.2.1　PyTorch实战之MNIST分类122
7.2.2　PyTorch实战之Cifar10分类125
7.3　本章小结128
第8章　卷积神经网络129
8.1　卷积神经网络基础129
8.1.1　全连接层129
8.1.2　卷积层130
8.1.3　池化层134
8.1.4　批规范化层135
8.2　常见卷积神经网络结构135
8.2.1　AlexNet136
8.2.2　VGGNet138
8.2.3　GoogLeNet140
8.2.4　ResNet142
8.2.5　其他网络结构144
8.3　VGG16实现Cifar10分类145
8.3.1　训练146
8.3.2　预测及评估149
8.4　本章小结152
8.5　参考文献152
第9章　目标检测153
9.1　定位+分类153
9.2　目标检测155
9.2.1　R-CNN156
9.2.2　Fast R-CNN160
9.2.3　Faster R-CNN162
9.2.4　YOLO165
9.2.5　SSD166
9.3　SSD实现VOC目标检测167
9.3.1　PASCAL VOC数据集167
9.3.2　数据准备170
9.3.3　构建模型175
9.3.4　定义Loss178
9.3.5　SSD训练细节181
9.3.6　训练186
9.3.7　测试189
9.4　本章小结190
9.5　参考文献191
第10章　分割192
10.1　语义分割193
10.1.1　FCN193
10.1.2　UNet实现裂纹分割196
10.1.3　SegNet209
10.1.4　PSPNet210
10.2　实例分割211
10.2.1　层叠式212
10.2.2　扁平式212
10.3　本章小结213
10.4　参考文献214
第11章　产生式模型215
11.1　自编码器215
11.2　对抗生成网络215
11.3　DCGAN及实战217
11.3.1　数据集218
11.3.2　网络设置220
11.3.3　构建产生网络221
11.3.4　构建判别网络223
11.3.5　定义损失函数224
11.3.6　训练过程224
11.3.7　测试227
11.4　其他GAN230
11.5　本章小结235
11.6　参考文献235
第12章　神经网络可视化236
12.1　卷积核236
12.2　特征层237
12.2.1　直接观测237
12.2.2　通过重构观测239
12.2.3　末端特征激活情况243
12.2.4　特征层的作用244
12.3　图片风格化245
12.3.1　理论介绍245
12.3.2　代码实现247
12.4　本章小结255
12.5　参考文献255
第13章　图像识别算法的部署模式257
13.1　图像算法部署模式介绍257
13.2　实际应用场景和部署模式的匹配262
13.3　案例介绍264
13.4　本章小结265
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深度学习与图像识别：原理与实践
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>机器学习线性代数基础
第1章 坐标与变换：高楼平地起
1.1 描述空间的工具：向量 2
1.2 基底构建一切，基底决定坐标 13
1.3 矩阵，让向量动起来 18
1.4 矩阵乘向量的新视角：变换基底 27
第2章 空间与映射：矩阵的灵魂
2.1 矩阵：描述空间中的映射 34
2.2 追因溯源：逆矩阵和逆映射 42
2.3 向量空间和子空间 50
2.4 老树开新花，道破方程组的解 55
第3章 近似与拟合：真相最近处
3.1 投影，寻找距离最近的向量 62
3.2 深入剖析最小二乘法的本质 69
3.3 施密特正交化：寻找最佳投影基 74
第4章 相似与特征：最佳观察角
4.1 相似变换：不同的视角，同一个变换 80
4.2 对角化：寻找最简明的相似矩阵 85
4.3 关键要素：特征向量与特征值 89
第5章 降维与压缩：抓住主成分
5.1 最重要的矩阵：对称矩阵 96
5.2 数据分布的度量 100
5.3 利用特征值分解（EVD）进行主成分分析（PCA） 103
5.4 更通用的利器：奇异值分解（SVD） 111
5.5 利用奇异值分解进行数据降维 116
第6章 实践与应用：线代用起来
6.1 SVD在推荐系统中的应用 124
6.2 利用SVD进行彩色图片压缩 133
第7章 函数与复数域：概念的延伸
7.1 傅里叶级数：从向量的角度看函数 145
7.2 复数域中的向量和矩阵 151
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>机器学习线性代数基础
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python访谈录
1 Brett Cannon（布雷特·坎农）
2 Steve Holden（史蒂夫·霍尔登）
3 Carol Willing（卡萝尔·威林）
4 Glyph Lefkowitz（格里夫·菜夫科维茨）
5 Doug Hellmann（道格·赫尔曼）·
6 Massimo Di Pierro（马西莫·迪·皮耶罗）
7 Alex Martelli（正历克斯·马特利）
8 Mar-Andre Lemburg（马克一安德烈·伦伯格）
9 Barry Warsaw（巴里·华沙）
10 Jessica McKellar（杰苦卡·麦凯勒）
11 Tarek Ziade（塔里克·齐正德）
12 Sebastian Raschka（塞巴斯蒂安·拉斯切克）
13 Wesley Chun（韦斯利·丘）
14 Steven Lott（史蒂文·洛特）
15 Oliver Schoenborn（具利弗·施波恩）
16 Al Sweigart（阿尔·斯维加特）
17 Luciano Ramalho（卢西亚诺·拉马略）
18 Nick Coghlan（尼克·科格伦）
19 Mike Bayer（迈克·拜余）
20 Jake Vanderplas（杰克·万托布拉斯）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python访谈录
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>ゼロから作るDeep Learning
目次
まえがき
1章　Python入門
1.1　Pythonとは
1.2　Pythonのインストール
1.2.1　Pythonのバージョン
1.2.2　使用する外部ライブラリ
1.2.3　Anacondaディストリビューション
1.3　Pythonインタプリタ
1.3.1　算術計算
1.3.2　データ型
1.3.3　変数
1.3.4　リスト
1.3.5　ディクショナリ
1.3.6　ブーリアン
1.3.7　if文
1.3.8　for文
1.3.9　関数
1.4　Pythonスクリプトファイル
1.4.1　ファイルに保存
1.4.2　クラス
1.5　NumPy
1.5.1　NumPyのインポート
1.5.2　NumPy配列の生成
1.5.3　NumPyの算術計算
1.5.4　NumPyのN次元配列
1.5.5　ブロードキャスト
1.5.6　要素へのアクセス
1.6　Matplotlib
1.6.1　単純なグラフの描画
1.6.2　pyplotの機能
1.6.3　画像の表示
1.7　まとめ
2章　パーセプトロン
2.1　パーセプトロンとは
2.2　単純な論理回路
2.2.1　ANDゲート
2.2.2　NANDゲートとORゲート
2.3　パーセプトロンの実装
2.3.1　簡単な実装
2.3.2　重みとバイアスの導入
2.3.3　重みとバイアスによる実装
2.4　パーセプトロンの限界
2.4.1　XORゲート
2.4.2　線形と非線形
2.5　多層パーセプトロン
2.5.1　既存ゲートの組み合わせ
2.5.2　XORゲートの実装
2.6　NANDからコンピュータへ
2.7　まとめ
3章　ニューラルネットワーク
3.1　パーセプトロンからニューラルネットワークへ
3.1.1　ニューラルネットワークの例
3.1.2　パーセプトロンの復習
3.1.3　活性化関数の登場
3.2　活性化関数
3.2.1　シグモイド関数
3.2.2　ステップ関数の実装
3.2.3　ステップ関数のグラフ
3.2.4　シグモイド関数の実装
3.2.5　シグモイド関数とステップ関数の比較
3.2.6　非線形関数
3.2.7　ReLU関数
3.3　多次元配列の計算
3.3.1　多次元配列
3.3.2　行列の内積
3.3.3　ニューラルネットワークの内積
3.4　3層ニューラルネットワークの実装
3.4.1　記号の確認
3.4.2　各層における信号伝達の実装
3.4.3　実装のまとめ
3.5　出力層の設計
3.5.1　恒等関数とソフトマックス関数
3.5.2　ソフトマックス関数の実装上の注意
3.5.3　ソフトマックス関数の特徴
3.5.4　出力層のニューロンの数
3.6　手書き数字認識
3.6.1　MNISTデータセット
3.6.2　ニューラルネットワークの推論処理
3.6.3　バッチ処理
3.7　まとめ
4章　ニューラルネットワークの学習
4.1　データから学習する
4.1.1　データ駆動
4.1.2　訓練データとテストデータ
4.2　損失関数
4.2.1　2乗和誤差
4.2.2　交差エントロピー誤差
4.2.3　ミニバッチ学習
4.2.4　［バッチ対応版］交差エントロピー誤差の実装
4.2.5　なぜ損失関数を設定するのか？
4.3　数値微分
4.3.1　微分
4.3.2　数値微分の例
4.3.3　偏微分
4.4　勾配
4.4.1　勾配法
4.4.2　ニューラルネットワークに対する勾配
4.5　学習アルゴリズムの実装
4.5.1　2層ニューラルネットワークのクラス
4.5.2　ミニバッチ学習の実装
4.5.3　テストデータで評価
4.6　まとめ
5章　誤差逆伝播法
5.1　計算グラフ
5.1.1　計算グラフで解く
5.1.2　局所的な計算
5.1.3　なぜ計算グラフで解くのか？
5.2　連鎖率
5.2.1　計算グラフの逆伝播
5.2.2　連鎖率とは
5.2.3　連鎖率と計算グラフ
5.3　逆伝播
5.3.1　加算ノードの逆伝播
5.3.2　乗算ノードの逆伝播
5.3.3　リンゴの例
5.4　単純なレイヤの実装
5.4.1　乗算レイヤの実装
5.4.2　加算レイヤの実装
5.5　活性化関数レイヤの実装
5.5.1　ReLUレイヤ
5.5.2　Sigmoidレイヤ
5.6　A.ne／Softmaxレイヤの実装
5.6.1　A.neレイヤ
5.6.2　バッチ版A.neレイヤ
5.6.3　Softmax-with-Lossレイヤ
5.7　誤差逆伝播法の実装
5.7.1　ニューラルネットワークの学習の全体図
5.7.2　誤差逆伝播法に対応したニューラルネットワークの実装
5.7.3　誤差逆伝播法の勾配確認
5.7.4　誤差逆伝播法を使った学習
5.8　まとめ
6章　学習に関するテクニック
6.1　パラメータの更新
6.1.1　冒険家の話
6.1.2　SGD
6.1.3　SGDの欠点
6.1.4　Momentum
6.1.5　AdaGrad
6.1.6　Adam
6.1.7　どの更新手法を用いるか？
6.1.8　MNISTデータセットによる更新手法の比較
6.2　重みの初期値
6.2.1　重みの初期値を0にする？
6.2.2　隠れ層のアクティベーション分布
6.2.3　ReLUの場合の重みの初期値
6.2.4　MNISTデータセットによる重み初期値の比較
6.3　Batch Normalization
6.3.1　Batch Normalizationのアルゴリズム
6.3.2　Batch Normalizationの評価
6.4　正則化
6.4.1　過学習
6.4.2　Weight decay
6.4.3　Dropout
6.5　ハイパーパラメータの検証
6.5.1　検証データ
6.5.2　ハイパーパラメータの最適化
6.5.3　ハイパーパラメータ最適化の実装
6.6　まとめ
7章　畳み込みニューラルネットワーク
7.1　全体の構造
7.2　畳み込み層
7.2.1　全結合層の問題点
7.2.2　畳み込み演算
7.2.3　パディング
7.2.4　ストライド
7.2.5　3次元データの畳み込み演算
7.2.6　ブロックで考える
7.2.7　バッチ処理
7.3　プーリング層
7.3.1　プーリング層の特徴
7.4　Convolution／Poolingレイヤの実装
7.4.1　4次元配列
7.4.2　im2colによる展開
7.4.3　Convolutionレイヤの実装
7.4.4　Poolingレイヤの実装
7.5　CNNの実装
7.6　CNNの可視化
7.6.1　1層目の重みの可視化
7.6.2　階層構造による情報抽出
7.7　代表的なCNN
7.7.1　LeNet
7.7.2　AlexNet
7.8　まとめ
8章　ディープラーニング
8.1　ネットワークをより深く
8.1.1　よりディープなネットワークへ
8.1.2　さらに認識精度を高めるには
8.1.3　層を深くすることのモチベーション
8.2　ディープラーニングの小歴史
8.2.1　ImageNet
8.2.2　VGG
8.2.3　GoogLeNet
8.2.4　ResNet
8.3　ディープラーニングの高速化
8.3.1　取り組むべき問題
8.3.2　GPUによる高速化
8.3.3　分散学習
8.3.4　演算精度のビット削減
8.4　ディープラーニングの実用例
8.4.1　物体検出
8.4.2　セグメンテーション
8.4.3　画像キャプション生成
8.5　ディープラーニングの未来
8.5.1　画像スタイル変換
8.5.2　画像生成
8.5.3　自動運転
8.5.4　Deep Q-Network（強化学習）
8.6　まとめ
付録A　Softmax-with-Lossレイヤの計算グラフ
A.1　順伝播
A.2　逆伝播
A.3　まとめ
参考文献
Python / NumPy
計算グラフ（誤差逆伝播法）
Deep Learningのオンライン授業（資料）
パラメータの更新方法
重みパラメータの初期値
Batch Normalization / Dropout
ハイパーパラメータの最適化
CNNの可視化
代表的なネットワーク
データセット
計算の高速化
MNISTデータセットの精度ランキングおよび最高精度の手法
ディープラーニングのアプリケーション
索引
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>ゼロから作るDeep Learning
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python深度学习
第 1 章 如何阅读本书……………………………………………………………………… 1
1.1 获取Python ……………………………………………………………………… 2
1.1.1 学习Python …………………………………………………………… 3
1.1.2 软件包 …………………………………………………………………… 3
1.2 不需要等待 ……………………………………………………………………… 3
1.3 小结 ……………………………………………………………………………… 4
附注 ……………………………………………………………………………………… 5
第 2 章 深度学习入门……………………………………………………………………… 6
2.1 为什么要学习深度学习 ………………………………………………………… 7
2.1.1 最后一子 ………………………………………………………………… 8
2.1.2 一件怪事 ………………………………………………………………… 8
2.1.3 两类人 …………………………………………………………………… 9
2.2 什么是深度学习 …………………………………………………………………10
2.2.1 成功的蓝图 ………………………………………………………………10
2.2.2 有监督学习和无监督学习 ……………………………………………… 11
2.2.3 深度学习的流程 ………………………………………………………… 11
2.3 深度学习能解决什么问题 ……………………………………………………… 12
2.4 哪些领域使用深度学习 …………………………………………………………14
2.4.1 深度学习能揭开永葆青春的秘密吗 …………………………………… 15
2.4.2 衰老的挑战 ……………………………………………………………… 15
2.4.3 众多的理论 ……………………………………………………………… 16
2.4.4 数据科学家的答案 ……………………………………………………… 16
2.5 想使用深度学习——却不知如何开始 ………………………………………… 17
2.6 小结 ………………………………………………………………………………18
附注 ………………………………………………………………………………………18
第3 章 神经网络基础………………………………………………………………………27
3.1 历史备忘录 ………………………………………………………………………28
3.2 神经网络的拓扑结构 ……………………………………………………………29
3.3 神经元的作用 ……………………………………………………………………30
人工神经元 ………………………………………………………………………31
3.4 理解激活函数 ……………………………………………………………………31
3.4.1 数学计算 …………………………………………………………………32
3.4.2 sigmoid 函数 ……………………………………………………………34
3.4.3 运算成本 …………………………………………………………………34
3.5 神经网络如何进行学习 …………………………………………………………35
基本算法 …………………………………………………………………………36
3.6 解释梯度下降算法 ………………………………………………………………37
3.6.1 误差曲面 …………………………………………………………………38
3.6.2 随机梯度下降 ………………………………………………………… 39
3.7 小结 …………………………………………………………………………… 39
附注 …………………………………………………………………………………… 40
第4 章 深度神经网络简介…………………………………………………………………42
4.1 深度神经网络简析 ………………………………………………………………43
4.2 怎样在一分钟内解释深度神经网络 ………………………………………… 44
4.2.1 如何看待DNN ……………………………………………………… 44
4.2.2 统计学家的视角 …………………………………………………………45
4.2.3 一个关键的观点 …………………………………………………………45
4.3 深度神经网络的3 种使用方式 …………………………………………………45
4.3.1 增强雾天的可视性 ………………………………………………………46
4.3.2 打击黑客犯罪 ……………………………………………………………50
4.3.3 不可思议的缩略图 ……………………………………………………… 51
4.4 如何快速地近似任何函数 ………………………………………………………54
4.4.1 一个用Python 构建深度神经网络的极简方法 ………………………55
4.4.2 生成示例 …………………………………………………………………56
4.4.3 检查样本 …………………………………………………………………57
4.4.4 格式化数据 ………………………………………………………………58
4.4.5 拟合模型 …………………………………………………………………60
4.4.6 性能表现评估 …………………………………………………………… 61
4.5 有监督学习概述 …………………………………………………………………62
4.5.1 有监督学习的目标 ………………………………………………………63
4.5.2 无监督学习 ………………………………………………………………63
4.5.3 半监督学习 ………………………………………………………………64
4.6 小结 ………………………………………………………………………………65
附注 ………………………………………………………………………………………65
第5 章 如何构建可定制的深度预测模型…………………………………………………70
5.1 一个深度神经网络预测的实际应用 …………………………………………… 71
5.1.1 样本数据和神经网络 …………………………………………………… 71
5.1.2 可靠的性能表现 …………………………………………………………72
5.2 明确预测目标 ……………………………………………………………………72
5.3 获取数据的拷贝 …………………………………………………………………74
5.4 标准化的重要性 …………………………………………………………………75
5.5 使用训练样本和测试样本 ………………………………………………………76
5.6 创建深度神经网络回归模型的极简方式 ………………………………………78
5.7 学习速率详解 ……………………………………………………………………79
5.7.1 选择最佳值 …………………………………………………………… 80
5.7.2 如果将模型拟合到数据 …………………………………………………81
5.8 评估模型在训练集性能表现的几种方式 ………………………………………81
5.8.1 均方差 ……………………………………………………………………82
5.8.2 获取预测和度量性能 ……………………………………………………83
5.9 小结 ………………………………………………………………………………83
附注 …………………………………………………………………………………… 84
第6 章 提高性能的一些技巧 ………………………………………… 85
6.1 sigmoid 激活函数的局限 ………………………………………………………86
6.2 选择最佳层数的原则 ………………………………………………………… 89
6.3 如何快速改进模型 ………………………………………………………………92
6.4 避免过度拟合 ………………………………………………………………… 93
6.5 应该包含多少个神经元 …………………………………………………………95
6.6 评估测试数据集上的性能 ………………………………………………………96
6.7 冻结网络权重 ……………………………………………………………………97
6.8 保存网络以供将来使用 ……………………………………………………… 98
6.9 小结 …………………………………………………………………………… 99
附注 …………………………………………………………………………………… 99
第7 章 二元分类神经网络的奥秘 ……………………………………101
7.1 感人至深——创造奇迹 ……………………………………………………… 102
7.1.1 一项二元分类任务 …………………………………………………… 103
7.1.2 有用的结果 …………………………………………………………… 103
7.2 了解分类目标 ………………………………………………………………… 104
7.3 使用Python 从网络下载数据 ……………………………………………… 105
7.4 处理缺失的观测值 …………………………………………………………… 107
7.5 保存数据 ……………………………………………………………………… 111
7.6 冲量简单入门 ………………………………………………………………… 112
7.7 留出法的秘密 ………………………………………………………………… 113
7.8 如何用Python 快速构建一个深度神经网络二元分类器 ………………… 115
7.8.1 生成训练集和测试集 ………………………………………………… 117
7.8.2 指定模型 ……………………………………………………………… 117
7.8.3 拟合模型 ……………………………………………………………… 118
7.8.4 混淆矩阵 ……………………………………………………………… 119
7.9 小结 …………………………………………………………………………… 120
附注 …………………………………………………………………………………… 120
第8 章 构建优秀模型之道 ……………………………………………123
8.1 尝试最简单的想法提高成功率 ……………………………………………… 124
8.2 辍学的威力 …………………………………………………………………… 124
8.3 相似性 ………………………………………………………………………… 126
8.4 共适应 ………………………………………………………………………… 126
8.5 一个教训 ……………………………………………………………………… 127
8.6 双曲正切激活函数的威力以及如何有效地使用 …………………………… 127
8.7 如何从小批量方法中获益 …………………………………………………… 128
8.8 重建模型 ……………………………………………………………………… 129
8.9 关于不平衡样本你应该知道的事 …………………………………………… 131
8.9.1 核心问题 ……………………………………………………………… 131
8.9.2 查看测试集上的表现 ………………………………………………… 133
8.10 小结 …………………………………………………………………………… 134
附注 …………………………………………………………………………………… 134
第9 章 深度神经网络在多元分类问题的简单应用 …………………136
9.1 分类问题描述 ………………………………………………………………… 138
9.1.1 查看样本 ……………………………………………………………… 139
9.1.2 检查目标对象 ………………………………………………………… 140
9.2 关于softmax 激活函数的说明 ……………………………………………… 140
9.3 使用rmsprop 算法构建多项式模型 ……………………………………… 141
9.3.1 关于rmsprop 算法的说明 ………………………………………… 143
9.3.2 模型性能表现 ………………………………………………………… 144
9.4 Adagrad 学习算法概述 ……………………………………………………… 144
9.5 如何尝试其他学习算法 ……………………………………………………… 146
9.5.1 Nesterov 的加速梯度下降算法 …………………………………… 146
9.5.2 尝试冲量法 …………………………………………………………… 147
9.5.3 常规随机梯度下降法 ………………………………………………… 148
9.5.4 在模型中使用Adadelta 算法 ……………………………………… 149
9.5.5 测试集性能表现 ……………………………………………………… 150
9.6 小结 …………………………………………………………………………… 152
9.7 结束语 ………………………………………………………………………… 152
附注 …………………………………………………………………………………… 152
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python深度学习
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据科学
前言
第1章数据科学家的武器库
1.1数据科学的基本概念
1.2数理统计技术
1.2.1描述性统计分析
1.2.2统计推断与统计建模
1.3数据挖掘的技术与方法
1.4描述性数据挖掘算法示例
1.4.1聚类分析——客户细分
1.4.2关联规则分析
1.5预测性数据挖掘算法示例
1.5.1决策树
1.5.2KNN算法
1.5.3Logistic回归
1.5.4神经网络
1.5.5支持向量机
1.5.6集成学习
1.5.7预测类模型讲解
1.5.8预测类模型评估概述
第2章Python概述
2.1Python概述
2.1.1Python简介
2.1.2Python与数据科学
2.1.3Python2与Python3
2.2Anaconda Python的安装、使用
2.2.1下载与安装
2.2.2使用Jupyter Notebook
2.2.3使用Spyder
2.2.4使用conda或pip管理
第三方库
第3章数据科学的Python编程基础
3.1Python的基本数据类型
3.1.1字符串(str)
3.1.2浮点数和整数（float、int）
3.1.3布尔值（Bool：True/False）
3.1.4其他
3.2Python的基本数据结构
3.2.1列表（list）
3.2.2元组（tuple）
3.2.3集合（set）
3.2.4字典（dict）
3.3Python的程序控制
3.3.1三种基本的编程结构简介
3.3.2顺承结构
3.3.3分支结构
3.3.4循环结构
3.4Python的函数与模块
3.4.1Python的函数
3.4.2Python的模块
3.5Pandas读取结构化数据
3.5.1读取数据
3.5.2写出数据
第4章描述性统计分析与绘图
4.1描述性统计进行数据探索
4.1.1变量度量类型与分布类型
4.1.2分类变量的统计量
4.1.3连续变量的分布与集中趋势
4.1.4连续变量的离散程度
4.1.5数据分布的对称与高矮
4.2制作报表与统计制图
4.3制图的步骤
第5章数据整合和数据清洗
5.1数据整合
5.1.1行列操作
5.1.2条件查询
5.1.3横向连接
5.1.4纵向合并
5.1.5排序
5.1.6分组汇总
5.1.7拆分、堆叠列
5.1.8赋值与条件赋值
5.2数据清洗
5.2.1重复值处理
5.2.2缺失值处理
5.2.3噪声值处理
5.3RFM方法在客户行为分析上的运用
5.3.1行为特征提取的RFM方法论
5.3.2使用RFM方法计算变量
5.3.3数据整理与汇报
第6章数据科学的统计推断基础
6.1基本的统计学概念
6.1.1总体与样本
6.1.2统计量
6.1.3点估计、区间估计和中心极限定理
6.2假设检验与单样本t检验
6.2.1假设检验
6.2.2单样本t检验
6.3双样本t检验
6.4方差分析（分类变量和连续变量关系检验）
6.4.1单因素方差分析
6.4.2多因素方差分析
6.5相关分析（两连续变量关系检验）
6.5.1相关系数
6.5.2散点矩阵图
6.6卡方检验（二分类变量关系检验）
6.6.1列联表
6.6.2卡方检验
第7章客户价值预测：线性回归模型与诊断
7.1线性回归
7.1.1简单线性回归
7.1.2多元线性回归
7.1.3多元线性回归的变量筛选
7.2线性回归诊断
7.2.1残差分析
7.2.2强影响点分析
7.2.3多重共线性分析
7.2.4小结线性回归诊断
7.3正则化方法
7.3.1岭回归
7.3.2LASSO回归
第8章Logistic回归构建初始信用评级
8.1Logistic回归的相关关系分析
8.2Logistic回归模型及实现
8.2.1Logistic回归与发生比
8.2.2Logistic回归的基本原理
8.2.3在Python中实现Logistic回归
8.3Logistic回归的极大似然估计
8.3.1极大似然估计的概念
8.3.2Logistics回归的极大似然估计
8.4模型评估
8.4.1模型评估方法
8.4.2ROC曲线的概念
8.4.3在Python中实现ROC曲线
第9章使用决策树进行初始信用评级
9.1决策树概述
9.2决策树算法
9.2.1ID3建树算法原理
9.2.2C4.5建树算法原理
9.2.3CART建树算法原理
9.2.4决策树的剪枝
9.3在Python中实现决策树
9.3.1建模
9.3.2模型评估
9.3.3决策树的可视化
9.3.4参数搜索调优
第10章神经网络
10.1神经元模型
10.2单层感知器
10.3BP神经网络
10.4多层感知器的scikitlearn代码实现
第11章分类器入门：最近邻域与朴素贝叶斯
11.1KNN算法
11.1.1KNN算法原理
11.1.2在Python中实现KNN算法
11.2朴素贝叶斯分类
11.2.1贝叶斯公式
11.2.2朴素贝叶斯分类原理
11.2.3朴素贝叶斯的参数估计
11.2.4在Python中实现朴素贝叶斯
第12章高级分类器：支持向量机
12.1线性可分与线性不可分
12.2线性可分支持向量机
12.2.1函数间隔和几何间隔
12.2.2学习策略
12.2.3对偶方法求解
12.2.4线性可分支持向量机例题
12.3线性支持向量机与软间隔最大化
12.4非线性支持向量机与核函数
12.4.1核函数
12.4.2非线性支持向量机的学习
12.4.3示例与Python实现
12.5使用支持向量机的案例
第13章连续变量的特征选择与转换
13.1方法概述
13.2主成分分析
13.2.1主成分分析简介
13.2.2主成分分析原理
13.2.3主成分分析的运用
13.2.4在Python中实现主成分分析
13.3基于主成分的冗余变量筛选
13.4因子分析
13.4.1因子分析模型
13.4.2因子分析算法
13.4.3在Python中实现因子分析
第14章客户分群与聚类
14.1聚类算法概述
14.2聚类算法基本概念
14.2.1变量标准化与分布形态转换
14.2.2变量的维度分析
14.3聚类模型的评估
14.4层次聚类
14.4.1层次聚类原理
14.4.2层次聚类在Python中的实现
14.5基于划分的聚类
14.5.1kmeans聚类原理
14.5.2kmeans聚类的应用场景
14.5.3在Python中实现kmeans聚类
14.6基于密度的聚类
14.6.1详谈基于密度聚类
14.6.2在Python中实现密度聚类
14.7案例:通信客户业务使用偏好聚类
14.7.1保持原始变量分布形态进行聚类
14.7.2对变量进行分布形态转换后聚类
第15章关联规则
15.1关联规则
15.1.1关联规则的一些概念
15.1.2Apriori算法原理
15.1.3在Python中实现关联规则
15.2序列模式
15.2.1序列模式简介与概念
15.2.2序列模式算法
15.2.3在Python中实现序列模式
第16章排序模型的不平衡分类处理
16.1不平衡分类概述
16.2欠采样法
16.2.1随机欠采样法
16.2.2Tomek Link法
16.3过采样法
16.3.1随机过采样法
16.3.2SMOTE法
16.4综合采样法
16.5在Python中实现不平衡分类处理
第17章集成学习
17.1集成学习概述
17.2Bagging
17.2.1Bagging算法实现
17.2.2随机森林
17.3Boosting
17.4偏差（Bias）、方差（Variance）与集成方法
17.4.1偏差与方差
17.4.2Bagging与Boosting的直观理解
第18章时间序列建模
18.1认识时间序列
18.2效应分解法时间序列分析
18.3平稳时间序列分析ARMA模型
18.3.1平稳时间序列
18.3.2ARMA模型
18.3.3在Python中进行AR建模
18.4非平稳时间序列分析ARIMA模型
18.4.1差分与ARIMA模型
18.4.2在Python中进行ARIMA建模
18.5ARIMA方法建模总结
第19章商业数据挖掘案例
19.1个人贷款违约预测模型
19.1.1数据介绍
19.1.2业务分析
19.1.3数据理解
19.1.4数据整理
19.1.5建立分析模型
19.1.6模型运用
19.1.7流程回顾
19.2慈善机构精准营销案例
19.2.1构造营销响应模型
19.2.2构造客户价值预测模型
19.2.3制订营销策略
19.2.4案例过程回顾与不足
19.3旅游企业客户洞察案例
19.3.1案例说明
19.3.2数据预处理
19.3.3使用kmeans聚类建模
19.3.4对各个簇的特征进行描述
19.4个人3C产品精准营销案例
19.4.1案例说明
19.4.2数据预处理
19.4.3建模
19.4.4模型评估
19.4.5下一步建议
附录A  数据说明
参考文献
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据科学
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深度实践OpenStack:基于Python的OpenStack组件开发
编辑推荐
《深度实践OpenStack:基于Python的OpenStack组件开发》由机械工业出版社出版。
目录
序
前言
第1章OpenStack企业工程师的成长
及工作介绍1
1.1Horizon界面工程师的工作内容1
1.2Neutron网络工程师的工作内容2
1.3Nova资深工程师的工作内容3
1.4本章小结5
第2章开发环境的搭建6
2.1Windows开发环境的搭建6
2.1.1Git的安装6
2.1.2JDK的安装与配置12
2.1.3Python的安装与配置15
2.1.4PyCharm的安装与配置19
2.2Linux开发环境的搭建24
2.2.1Vim编辑器24
2.2.2PyCharm编辑器25
2.3Eclipse开发环境的搭建26
2.3.1安装Eclipse的PyDev插件26
2.3.2安装Eclipse的EGit插件26
2.4Launchpad账号26
2.4.1Launchpad账号注册26
2.4.2上传SSHkeys27
2.4.3补充相关账号与信息30
2.5Git的使用32
2.5.1设置Git全局配置32
2.5.2安装git—review工具并验证33
2.5.3提交代码步骤33
2.5.4Git管理流程图35
2.6本章小结35
第3章Python语言基础36
3.1Python概述36
3.2Python基础37
3.2.1编码37
3.2.2缩进与分隔37
3.2.3命名规范38
3.2.4注释39
3.2.5执行39
3.2.6代码的调试40
3.2.7帮助的使用41
3.3Python数据类型42
3.3.1变量42
3.3.2数字与表达式44
3.3.3字符串和列表45
3.3.4元组49
3.3.5字典50
3.3.6其他类型50
3.4流程控制51
3.4.1if语句51
3.4.2while循环52
3.4.3for循环53
3.4.4continue和break53
3.4.5异常处理53
3.4.6else的特殊用法54
3.5函数55
3.5.1函数基础55
3.5.2函数参数55
3.5.3函数体和返回值57
3.5.4再论类型和循环58
3.5.5生成器60
3.5.6可调用的变量62
3.5.7变量作用域63
3.6本章小结64
第4章Python模块65
4.1SQLAlchemy65
4.1.1安装SQLAlchemy65
4.1.2使用SQLAlchemy对数据库操作65
4.1.3使用ORM67
4.1.4完整示例69
4.2logging模块70
4.2.1logging的使用70
4.2.2若干重要的概念71
4.2.3logging工作流程73
4.2.4日志配置74
4.3Eventlet77
4.3.1greenlet77
4.3.2GreenThread78
4.4WSGI81
4.4.1RESTfulAPI介绍81
4.4.2WSGI简介82
4.4.3简单的WSGI83
4.4.4运行WSGI服务84
4.4.5Middleware86
4.5PasteDeploy87
4.5.1PasteDeploy安装87
4.5.2Paste配置文件87
4.5.3改进WSGI89
4.6WebOb90
4.6.1Python装饰器说明90
4.6.2简单示例91
4.6.3添加自己的中间件91
4.6.4其他特性92
4.7routes模块92
4.7.1routes模块概述92
4.7.2使用示例93
4.8综合实例94
4.9本章小结98
第5章RabbitMQ99
5.1RabbitMQ简介99
5.2RabbitMQ流程101
5.2.1单向发送消息101
5.2.2队列103
5.2.3交换106
5.2.4路由109
5.2.5主题111
5.2.6RPC调用114
5.3RabbitMQ持久化119
5.4本章小结120
第6章DevStack121
6.1DevStack介绍121
6.2操作系统的安装与配置121
6.2.1VMware虚拟机的配置121
6.2.2系统配置123
6.3环境准备与配置126
6.3.1DevStack准备126
6.3.2配置local.conf文件127
6.4安装DevStack128
6.5环境验证128
6.5.1登录验证128
6.5.2创建网络130
6.5.3创建实例132
6.5.4验证实例网络134
6.5.5OpenStack版本136
6.6错误分析136
6.6.1日志目录136
6.6.2使用Git下载代码出错137
6.6.3网络配置错误137
6.6.4重新部署137
6.7本章小结138
第7章开发小试139
7.1screen简介139
7.1.1screen的进入139
7.1.2screen的使用140
7.1.3screen的退出142
7.2API调试142
7.2.1API142
7.2.2RESTClient工具145
7.2.3Curl实验151
7.2.4错误分析155
7.3OpenStack界面主题的修改157
7.3.1替换logo157
7.3.2修改样式159
7.4本章小结164
第8章Django框架165
8.1安装Django165
8.2Django的架构169
8.3创建项目170
8.3.1Django管理工具171
8.3.2测试站点172
8.3.3增加一个APP174
8.4使用数据库176
8.4.1连接数据库176
8.4.2创立模型177
8.4.3显示记录179
8.5模板180
8.5.1使用模板180
8.5.2流程分析182
8.5.3使用循环182
8.5.4模板继承184
8.6表单185
8.6.1提交表单（GET方法）185
8.6.2提交表单（POST方法）186
8.7存储数据187
8.8表单对象188
8.9admin管理190
8.9.1默认管理190
8.9.2复杂的模型191
8.9.3自定义页面192
8.9.4Inline显示193
8.9.5列表页的显示194
8.10错误分析196
8.11本章小结198
第9章Dashboard的开发199
9.1Dashboard概述199
9.2源码解析200
9.2.1UI整体结构200
9.2.2初识Dashboard201
9.2.3项目结构203
9.3自定义Dashboard和Panel207
9.3.1手工启动Dashboard工程207
9.3.2创建Dashboard207
9.3.3创建mypanel208
9.3.4编写代码209
9.3.5验证代码215
9.4复杂的actiontable217
9.4.1定义view217
9.4.2增加URL219
9.4.3定义action220
9.4.4测试220
9.5Horizon开发相关内容222
9.5.1汉化222
9.5.2workflows222
9.5.3JavaScript224
9.6错误分析225
9.7本章小结227
第10章Nova组件228
10.1组件介绍228
10.1.1OpenStack的版本228
10.1.2组件的组成228
10.1.3组件之间的关系229
10.1.4API的使用230
10.2虚拟创建过程详解230
10.3Nova源码分析233
10.3.1目录结构233
10.3.2重要目录详解236
10.4Nova调用关系分析240
10.4.1创建虚拟机过程源码追溯240
10.4.2创建虚拟机过程调用流程函数分析241
10.4.3Nova和AMQP的关系243
10.5开始实践246
10.6APIV2.1说明248
10.6.1compatibility249
10.6.2Validation249
10.6.3Microversion249
10.7编码251
10.7.1示例编码251
10.7.2官方代码参考252
10.7.3Nova代码实现示例258
10.8调试并修复nova—compute的所有协程卡住的问题262
10.9本章小结269
第11章Neutron组件270
11.1Neutron基础270
11.1.1服务及组件介绍270
11.1.2Neutron架构271
11.1.3Neutron抽象出的概念272
11.1.4Linux网络基础272
11.2实例网络详解273
11.2.1硬件配置及网络拓扑273
11.2.2各个节点服务关系及说明274
11.2.3场景举例277
11.3Neutron的源码分析282
11.3.1目录结构283
11.3.2重要目录详解285
11.3.3Neutron启动分析288
11.4Neutron组件扩展293
11.4.1编写代码293
11.4.2重启服务295
11.4.3测试296
11.5本章小结297
第12章测试技术298
12.1OpenStack测试基础298
12.2单元测试299
12.3集成测试301
12.4本章小结303
附录AMitaka国内代码贡献304
附录BNewton新特性307
附录COcata版本新特性309
附录DGit代码管理命令314
序言
Foreword 序2014年年底，我在从事OpenStack工作两年多之后第一次在北京环球贸易中心接触到了李华和他们的海云团队，之后我们团队与海云也有过多次技术交流，我个人也聆听过李华对OpenStack现实困境和未来发展的各种看法。我被李华和他们创业团队的远见，以及在云计算事业里的决断气魄而折服，也为他们在OpenStack领域的低调实干精神感到钦佩。
后来，由于英特尔公司对海云捷迅公司的投资关系，我们英特尔研发团队与海云创业团队形成了稳定的合作模式，建立了稳固的合作关系，在工作中发展了深厚的友谊。我们主要在上游社区负责英特尔平台相关的功能开发，而海云除了开发OpenStack功能之外，更多是要在客户那边负责OpenStack部署和实施。也正是因为这样，我们也从海云那边得到了第一手客户需求信息和部署实施经验。
2015年年中，李华毫不吝啬地送给我一本内部交流资料用于学习。该内部交流资料是培训企业运维人员，如何一步一步在企业内部用OpenStack部署工具，从零开始搭建云计算系统的，内容基本覆盖了所有OpenStack关键项目的基础用法，非常接地气。对于我这样一名以OpenStack代码开发出身的开发人员来说，受益良多。而且我们研发团队围绕着固定几个关键项目进行开发，很难接触到OpenStack全局，也很少有机会接触到为支撑一个企业内部私有云所需的所有OpenStack组件的工作原理，这本内部交流资料使我拓宽了视野，增长了见识。
这次欣闻海云即将出版这本书，并将用于企业培训，我特别期待它能早日面世。从李华那里拿到电子版后，我快速浏览了一遍，它除了会讲述OpenStack那些子项目的用法之外，还有众多的背景介绍，比如KVM、Open vSwitch和Ceph等，甚至还有海云部署案例分析。这本书的内容比我当年拿到的内部交流资料的内容还要丰富和完整，在感谢海云对OpenStack社区慷慨分享的同时，我相信读者一定能从书中学到更全面、更深入的OpenStack知识，并运用到自己的生产部署和实践开发中。
王庆 博士 OpenStack基金会个人独立董事 英特尔开源技术中心网络和存储部门开发经理
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深度实践OpenStack:基于Python的OpenStack组件开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>多元统计分析
第1章引言
第2章矩阵代数回顾
第3章回归
第4章分类
第5章主成分分析
第6章因子分析
第7章聚类分析
第8章典型相关分析
第9章对应分析
第10章多维尺度变换
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>多元统计分析
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python与有限元
第1章  编程基础——Python、Numpy、Matplotlib简介
1.1  Python简介
1.1.1  什么是Python
1.1.2  Python及其库安装
1.1.3  Python入门知识
1.1.4  Python导入模块
1.2  Numpy简介
1.3  Matplotlib简介
第2章  有限元分析的一般过程——搭建Feon框架
2.1  什么是Feon
2.2  Feon框架介绍
2.3  节点
2.3.1  Feon.base.NodeBase类
2.3.2  Feon.sa.node.Node类
2.4  单元
2.4.1  Feon.base.ElementBase类
2.4.2  Feon.sa.element.StructElement类
2.4.3  Feon.sa.element.SoildElement类
2.5  系统
2.5.1  Feon.base.SystemBase类
2.5.2  Feon.sa.system.System类
2.5.3  节点与单元编号
2.5.4  单元刚度矩阵组装
2.5.5  施加边界条件
2.5.6  联立线性方程组
2.5.7  求解系统
第3章  Feon.sa中自带单元类型定义过程及其应用
3.1  弹簧单元
3.1.1  一维弹簧单元
3.1.2  二维弹簧系统
3.1.3  三维弹簧单元
3.2  杆单元
3.2.1  一维杆单元
3.2.2  二维杆单元
3.2.3  三维杆单元
3.3  梁单元
3.3.1  一维梁单元
3.3.2  二维梁单元
3.3.3  三维梁单元
3.4  三角形实体单元
3.5  四面体实体单元
第4章  快速自定义
4.1  自定义单元
4.1.1  二次杆单元
4.1.2  自由度释放的梁单元
4.1.3  高斯勒让德数值积分函数
4.1.4  四边形实体单元
4.1.5  四边形Mindlin板单元
4.1.6  六面体实体单元
4.2  自定义求解函数
4.3  自定义包——渗流分析
4.3.1  节点
4.3.2  单元
4.3.3  系统
第5章  编程建议
5.1  推导单元矩阵
5.1.1  杆单元
5.1.2  三角形单元
5.2  前处理
5.2.1  自定义生成器
5.2.2  自定义类
5.2.3  应用第三方库
5.3  后处理
5.3.1  绘制模型示意图
5.3.2  获取节点和单元信息
5.4  提速
5.4.1  Python/C 混合编程
5.4.2  Scipy.sparse的应用
参考文献
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python与有限元
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python深度学习：基于PyTorch
Contents  目　　录
前言
第一部分　PyTorch基础
第1章　Numpy基础2
1.1　生成Numpy数组3
1.1.1　从已有数据中创建数组3
1.1.2　利用random模块生成数组4
1.1.3　创建特定形状的多维数组5
1.1.4　利用arange、linspace函数生成数组6
1.2　获取元素7
1.3　Numpy的算术运算9
1.3.1　对应元素相乘9
1.3.2　点积运算10
1.4　数组变形11
1.4.1　更改数组的形状11
1.4.2　合并数组14
1.5　批量处理16
1.6　通用函数17
1.7　广播机制19
1.8　小结20
第2章　PyTorch基础21
2.1　为何选择PyTorch？21
2.2　安装配置22
2.2.1　安装CPU版PyTorch22
2.2.2　安装GPU版PyTorch24
2.3　Jupyter Notebook环境配置26
2.4　Numpy与Tensor28
2.4.1　Tensor概述28
2.4.2　创建Tensor28
2.4.3　修改Tensor形状30
2.4.4　索引操作31
2.4.5　广播机制32
2.4.6　逐元素操作32
2.4.7　归并操作33
2.4.8　比较操作34
2.4.9　矩阵操作35
2.4.10　PyTorch与Numpy比较35
2.5　Tensor与Autograd36
2.5.1　自动求导要点36
2.5.2　计算图37
2.5.3　标量反向传播38
2.5.4　非标量反向传播39
2.6　使用Numpy实现机器学习41
2.7　使用Tensor及Antograd实现机器学习44
2.8　使用TensorFlow架构46
2.9　小结48
第3章　PyTorch神经网络工具箱49
3.1　神经网络核心组件49
3.2　实现神经网络实例50
3.2.1　背景说明51
3.2.2　准备数据52
3.2.3　可视化源数据53
3.2.4　构建模型53
3.2.5　训练模型54
3.3　如何构建神经网络？56
3.3.1　构建网络层56
3.3.2　前向传播57
3.3.3　反向传播57
3.3.4　训练模型58
3.4　神经网络工具箱nn58
3.4.1　nn.Module58
3.4.2　nn.functional58
3.5　优化器59
3.6　动态修改学习率参数60
3.7　优化器比较60
3.8　小结62
第4章　PyTorch数据处理工具箱63
4.1　数据处理工具箱概述63
4.2　utils.data简介64
4.3　torchvision简介66
4.3.1　transforms67
4.3.2　ImageFolder67
4.4　可视化工具69
4.4.1　tensorboardX简介69
4.4.2　用tensorboardX可视化神经网络71
4.4.3　用tensorboardX可视化损失值72
4.4.4　用tensorboardX可视化特征图73
4.5　本章小结74
第二部分　深度学习基础
第5章　机器学习基础76
5.1　机器学习的基本任务76
5.1.1　监督学习77
5.1.2　无监督学习77
5.1.3　半监督学习78
5.1.4　强化学习78
5.2　机器学习一般流程78
5.2.1　明确目标79
5.2.2　收集数据79
5.2.3　数据探索与预处理79
5.2.4　选择模型及损失函数80
5.2.5　评估及优化模型81
5.3　过拟合与欠拟合81
5.3.1　权重正则化82
5.3.2　Dropout正则化83
5.3.3　批量正则化86
5.3.4　权重初始化88
5.4　选择合适激活函数89
5.5　选择合适的损失函数90
5.6　选择合适优化器92
5.6.1　传统梯度优化的不足93
5.6.2　动量算法94
5.6.3　AdaGrad算法96
5.6.4　RMSProp算法97
5.6.5　Adam算法98
5.7　GPU加速99
5.7.1　单GPU加速100
5.7.2　多GPU加速101
5.7.3　使用GPU注意事项104
5.8　本章小结104
第6章　视觉处理基础105
6.1　卷积神经网络简介105
6.2　卷积层107
6.2.1　卷积核108
6.2.2　步幅109
6.2.3　填充111
6.2.4　多通道上的卷积111
6.2.5　激活函数113
6.2.6　卷积函数113
6.2.7　转置卷积114
6.3　池化层115
6.3.1　局部池化116
6.3.2　全局池化117
6.4　现代经典网络119
6.4.1　LeNet-5模型119
6.4.2　AlexNet模型120
6.4.3　VGG模型121
6.4.4　GoogleNet模型122
6.4.5　ResNet模型123
6.4.6　胶囊网络简介124
6.5　PyTorch实现CIFAR-10多分类125
6.5.1　数据集说明125
6.5.2　加载数据125
6.5.3　构建网络127
6.5.4　训练模型128
6.5.5　测试模型129
6.5.6　采用全局平均池化130
6.5.7　像Keras一样显示各层参数131
6.6　模型集成提升性能133
6.6.1　使用模型134
6.6.2　集成方法134
6.6.3　集成效果135
6.7　使用现代经典模型提升性能136
6.8　本章小结137
第7章　自然语言处理基础138
7.1　循环神经网络基本结构138
7.2　前向传播与随时间反向传播140
7.3　循环神经网络变种143
7.3.1　LSTM144
7.3.2　GRU145
7.3.3　Bi-RNN146
7.4　循环神经网络的PyTorch实现146
7.4.1　RNN实现147
7.4.2　LSTM实现149
7.4.3　GRU实现151
7.5　文本数据处理152
7.6　词嵌入153
7.6.1　Word2Vec原理154
7.6.2　CBOW模型155
7.6.3　Skip-Gram模型155
7.7　PyTorch实现词性判别156
7.7.1　词性判别主要步骤156
7.7.2　数据预处理157
7.7.3　构建网络157
7.7.4　训练网络158
7.7.5　测试模型160
7.8　用LSTM预测股票行情160
7.8.1　 导入数据160
7.8.2　数据概览161
7.8.3　预处理数据162
7.8.4　定义模型163
7.8.5　训练模型163
7.8.6　测试模型164
7.9　循环神经网络应用场景165
7.10　小结166
第8章　生成式深度学习167
8.1　用变分自编码器生成图像167
8.1.1　自编码器168
8.1.2　变分自编码器168
8.1.3　用变分自编码器生成图像169
8.2　GAN简介173
8.2.1　GAN架构173
8.2.2　GAN的损失函数174
8.3　用GAN生成图像175
8.3.1　判别器175
8.3.2　生成器175
8.3.3　训练模型175
8.3.4　可视化结果177
8.4　VAE与GAN的优缺点178
8.5　ConditionGAN179
8.5.1　CGAN的架构179
8.5.2　CGAN生成器180
8.5.3　CGAN判别器180
8.5.4　CGAN损失函数181
8.5.5　CGAN可视化181
8.5.6　查看指定标签的数据182
8.5.7　可视化损失值182
8.6　DCGAN183
8.7　提升GAN训练效果的一些技巧184
8.8　小结185
第三部分　深度学习实践
第9章　人脸检测与识别188
9.1　人脸识别一般流程188
9.2　人脸检测189
9.2.1　目标检测189
9.2.2　人脸定位191
9.2.3　人脸对齐191
9.2.4　MTCNN算法192
9.3　特征提取193
9.4　人脸识别198
9.4.1　人脸识别主要原理198
9.4.2　人脸识别发展198
9.5　PyTorch实现人脸检测与识别199
9.5.1　验证检测代码199
9.5.2　检测图像200
9.5.3　检测后进行预处理200
9.5.4　查看经检测后的图像201
9.5.5　人脸识别202
9.6　小结202
第10章　迁移学习实例203
10.1　迁移学习简介203
10.2　特征提取204
10.2.1　PyTorch提供的预处理模块205
10.2.2　特征提取实例206
10.3　数据增强209
10.3.1　按比例缩放209
10.3.2　裁剪210
10.3.3　翻转210
10.3.4　改变颜色211
10.3.5　组合多种增强方法211
10.4　微调实例212
10.4.1　数据预处理212
10.4.2　加载预训练模型213
10.4.3　修改分类器213
10.4.4　选择损失函数及优化器213
10.4.5　训练及验证模型214
10.5　清除图像中的雾霾214
10.6　小结217
第11章　神经网络机器翻译实例218
11.1　Encoder-Decoder模型原理218
11.2　注意力框架220
11.3　PyTorch实现注意力Decoder224
11.3.1　构建Encoder224
11.3.2　构建简单Decoder225
11.3.3　构建注意力Decoder226
11.4　用注意力机制实现中英文互译227
11.4.1　导入需要的模块228
11.4.2　数据预处理228
11.4.3　构建模型231
11.4.4　训练模型234
11.4.5　随机采样，对模型进行测试235
11.4.6　可视化注意力236
11.5　小结237
第12章　实战生成式模型238
12.1　DeepDream模型238
12.1.1　Deep Dream原理238
12.1.2　DeepDream算法流程239
12.1.3　用PyTorch实现Deep Dream240
12.2　风格迁移243
12.2.1　内容损失244
12.2.2　风格损失245
12.2.3　用PyTorch实现神经网络风格迁移247
12.3　PyTorch实现图像修复252
12.3.1　网络结构252
12.3.2　损失函数252
12.3.3　图像修复实例253
12.4　PyTorch实现DiscoGAN255
12.4.1　DiscoGAN架构256
12.4.2　损失函数258
12.4.3　DiscoGAN实现258
12.4.4　用PyTorch实现从边框生成鞋子260
12.5　小结262
第13章　Caffe2模型迁移实例263
13.1　Caffe2简介263
13.2　Caffe如何升级到Caffe2264
13.3　PyTorch如何迁移到Caffe2265
13.4　小结268
第14章　AI新方向：对抗攻击269
14.1　对抗攻击简介269
14.1.1　白盒攻击与黑盒攻击270
14.1.2　无目标攻击与有目标攻击270
14.2　常见对抗样本生成方式271
14.2.1　快速梯度符号法271
14.2.2　快速梯度算法271
14.3　PyTorch实现对抗攻击272
14.3.1　实现无目标攻击272
14.3.2　实现有目标攻击274
14.4　对抗攻击和防御措施276
14.4.1　对抗攻击276
14.4.2　常见防御方法分类276
14.5　总结277
第15章　强化学习278
15.1　强化学习简介278
15.2　Q-Learning原理281
15.2.1　Q-Learning主要流程281
15.2.2　Q函数282
15.2.3　贪婪策略283
15.3　用PyTorch实现Q-Learning283
15.3.1　定义Q-Learing主函数283
15.3.2　执行Q-Learing284
15.4　SARSA算法285
15.4.1　SARSA算法主要步骤285
15.4.2　用PyTorch实现SARSA算法286
15.5　小结287
第16章　深度强化学习288
16.1　DQN算法原理288
16.1.1　Q-Learning方法的局限性289
16.1.2　用DL处理RL需要解决的问题289
16.1.3　用DQN解决方法289
16.1.4　定义损失函数290
16.1.5　DQN的经验回放机制290
16.1.6　目标网络290
16.1.7　网络模型291
16.1.8　DQN算法291
16.2　用PyTorch实现DQN算法292
16.3　小结295
附录A　PyTorch0.4版本变更296
附录B　AI在各行业的最新应用301
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python深度学习：基于PyTorch
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python 3 物件導向程式設計(第二版)
Chapter 01 物件導向設計
物件導向簡介
物件與類別
指派屬性與行為
隱藏細節與建構公開介面
組合
繼承
案例研究
練習
總結
Chapter 02 Python 的物件
建構Python 類別
模組與套件
組織模組內容
誰可以存取我的資料
第三方函式庫
案例研究
練習
總結
Chapter 03 相像的物件
基本繼承
多重繼承
多形
抽象基底類別
案例研究
練習
總結
Chapter 04 預期中的未預期
發出例外
案例研究
練習
總結
Chapter 05 物件導向程式設計使用時機
視物件為物件
對類別資料加上行為屬性
管理員物件
案例研究
練習
總結
Chapter 06 Python 資料結構
空物件
資料組與具名資料組
字典
清單
集合
擴充內建
佇列
案例研究
練習
總結
Chapter 07 Python 物件導向捷徑
Python 內建函式
方法過載替代方案
函式也是物件
案例研究
練習
總結
Chapter 08 字串與序列化
字串
正規表示式
物件序列化
案例研究
練習
總結
Chapter 09 Iterator 模式
設計模式簡介
Iterator
操作式
產生器
協程
案例研究
練習
總結
Chapter 10 Python 設計模式一
decorator 模式
observer 模式
strategy 模式
state 模式
singleton 模式
template 模式
練習
總結
Chapter 11 Python 設計模式二
adapter 模式
facade 模式
flyweight 模式
command 模式
abstract factory 模式
composite 模式
練習
總結
Chapter 12 測試物件導向程式
為何要測試？
單元測試
以py.test 測試
模擬高成本物件
多少測試才夠？
案例研究
練習
總結
Chapter 13 同時性
執行緒
多行程
未來
AsyncIO
案例研究
練習
總結
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python 3 物件導向程式設計(第二版)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>机器学习
译者序
序
前言
审校者简介
第1章 品味机器学习 1
1.1 初步了解机器学习 1
1.2 机器学习可以解决的事情 3
1.3 初步了解 Python 4
1.4 初步了解 OpenCV 4
1.5 安装 5
1.5.1 获取本书最新的代码 5
1.5.2 掌握 Python Anaconda 6
1.5.3 在 conda 环境中安装OpenCV 8
1.5.4 验证安装结果 9
1.5.5 一睹 OpenCV ML 模块 11
1.6 总结 11
第2章 使用 OpenCV 和 Python处理数据 12
2.1 理解机器学习流程 12
2.2 使用 OpenCV 和 Python 处理数据 14
2.2.1 创建一个新的 IPython 或 Jupyter 会话 15
2.2.2 使用 Python 的 NumPy包处理数据 16
2.2.3 在 Python 中载入外部数据集 20
2.2.4 使用 Matplotlib 进行数据可视化 21
2.2.5 使用C++ 中 OpenCV 的 TrainData 容器处理数据 26
2.3 总结 27
第3章 监督学习的第一步 28
3.1 理解监督学习 28
3.1.1 了解 OpenCV 中的监督学习 29
3.1.2 使用评分函数评估模型性能 30
3.2 使用分类模型预测类别 35
3.2.1 理解 k-NN 算法 37
3.2.2 使用 OpenCV实现 k-NN 37
3.3 使用回归模型预测连续结果 43
3.3.1 理解线性回归 43
3.3.2 使用线性回归预测波士顿房价 44
3.3.3 应用 Lasso 回归和ridge 回归 48
3.4 使用逻辑回归对鸢尾花种类进行分类 48
3.5 总结 53
第4 数据表示与特征工程 54
4.1 理解特征工程 54
4.2 数据预处理 55
4.2.1 特征标准化 56
4.2.2 特征归一化 57
4.2.3 特征缩放到一定的范围 57
4.2.4 特征二值化 58
4.2.5 缺失数据处理 58
4.3 理解降维 59
4.3.1 在OpenCV 中实现主成分分析 61
4.3.2 实现独立成分分析 64
4.3.3 实现非负矩阵分解 65
4.4 类别变量表示 66
4.5 文本特征表示 68
4.6 图像表示 69
4.6.1 使用色彩空间 69
4.6.2 图像角点检测 71
4.6.3 使用尺度不变特征变换 72
4.6.4 使用加速健壮特征 74
4.7 总结 75
第5章 使用决策树进行医疗诊断 76
5.1 理解决策树 76
5.1.1 构建第一个决策树 79
5.1.2 可视化训练得到的决策树 85
5.1.3 深入了解决策树的内部工作机制 87
5.1.4 特征重要性评分 88
5.1.5 理解决策规则 89
5.1.6 控制决策树的复杂度 90
5.2 使用决策树进行乳腺癌的诊断 90
5.2.1 载入数据集 91
5.2.2 构建决策树 92
5.3 使用决策树进行回归 96
5.4 总结 99
第6章 使用支持向量机检测行人 100
6.1 理解线性支持向量机 100
6.1.1 学习最优决策边界 101
6.1.2 实现我们的第一个支持向量机 102
6.2 处理非线性决策边界 107
6.2.1 理解核机制 108
6.2.2 认识我们的核 109
6.2.3 实现非线性支持向量机 109
6.3 自然环境下的行人检测 110
6.3.1 获取数据集 111
6.3.2 初窥方向梯度直方图 113
6.3.3 生成负样本 114
6.3.4 实现支持向量机 116
6.3.5 模型自举 116
6.3.6 在更大的图像中检测行人 118
6.3.7 进一步优化模型 120
6.4 总结 121
第7章 使用贝叶斯学习实现垃圾邮件过滤 122
7.1 理解贝叶斯推断 122
7.1.1 概率论的短暂之旅 123
7.1.2 理解贝叶斯定理 124
7.1.3 理解朴素贝叶斯分类器 126
7.2 实现第一个贝叶斯分类器 127
7.2.1 创建一个练习数据集 127
7.2.2 使用一个正态贝叶斯分类器对数据分类 128
7.2.3 使用一个朴素贝叶斯分类器对数据分类 131
7.2.4 条件概率的可视化 132
7.3 使用朴素贝叶斯分类器对邮件分类 134
7.3.1 载入数据集 134
7.3.2 使用Pandas构建数据矩阵 136
7.3.3 数据预处理 137
7.3.4 训练正态贝叶斯分类器 138
7.3.5 使用完整的数据集进行训练 139
7.3.6 使用n-gram提升结果 139
7.3.7 使用TD-IDF提升结果 140
7.4 总结 141
第8章 使用非监督学习发现隐藏结构 142
8.1 理解非监督学习 142
8.2 理解k均值聚类 143
8.3 理解期望最大化 145
8.3.1 实现期望最大化解决方案 146
8.3.2 了解期望最大化的局限 148
8.4 使用k均值压缩色彩空间 154
8.4.1 真彩色调色板的可视化 154
8.4.2 使用k均值减少调色板 157
8.5 使用k均值对手写数字分类 159
8.5.1 载入数据集 159
8.5.2 运行k均值 159
8.6 把聚类组织成层次树 161
8.6.1 理解层次聚类 161
8.6.2 实现凝聚层次聚类 162
8.7 总结 163
第9章 使用深度学习对手写数字分类 164
9.1 理解McCulloch-Pitts神经元 164
9.2 理解感知器 167
9.3 实现第一个感知器 169
9.3.1 生成练习数据集 170
9.3.2 使用数据拟合感知器 171
9.3.3 评估感知器分类器 171
9.3.4 把感知器应用到线性不可分的数据上 173
9.4 理解多层感知器 174
9.4.1 理解梯度下降 175
9.4.2 使用反向传播训练多层感知器 178
9.4.3 在OpenCV中实现多层感知器 179
9.5 了解深度学习 183
9.6 手写数字分类 186
9.6.1 载入MNIST数据集 187
9.6.2 MNIST数据集预处理 188
9.6.3 使用OpenCV训练一个MLP 189
9.6.4 使用Keras训练一个深度神经网络 190
9.7 总结 192
第10章 组合不同算法为一个整体 193
10.1 理解集成方法 193
10.1.1 理解平均集成 195
10.1.2 理解提升集成 197
10.1.3 理解堆叠集成 200
10.2 组合决策树为随机森林 200
10.2.1 理解决策树的不足 200
10.2.2 实现第一个随机森林 204
10.2.3 使用scikit-learn实现一个随机森林 205
10.2.4 实现极端随机树 206
10.3 使用随机森林进行人脸识别 208
10.3.1 载入数据集 208
10.3.2 预处理数据集 209
10.3.3 训练和测试随机森林 210
10.4 实现AdaBoost 212
10.4.1 使用OpenCV实现AdaBoost 212
10.4.2 使用scikit-learn实现AdaBoost 213
10.5 组合不同模型为一个投票分类器 214
10.5.1 理解不同的投票机制 214
10.5.2 实现一个投票分类器 215
10.6 总结 217
第11章 通过超参数调优选择合适的模型 218
11.1 评估一个模型 218
11.1.1 评估模型错误的方法 219
11.1.2 评估模型正确的方法 220
11.1.3 选择最好的模型 221
11.2 理解交叉验证 223
11.2.1 使用OpenCV手动实现交叉验证 225
11.2.2 使用scikit-learn进行k折交叉验证 226
11.2.3 实现留一法交叉验证 227
11.3 使用自举评估鲁棒性 228
11.4 评估结果的重要性 230
11.4.1 实现T检验 230
11.4.2 实现配对卡方检验 232
11.5 使用网格搜索进行超参数调优 233
11.5.1 实现一个简单的网格搜索 234
11.5.2 理解验证集的价值 235
11.5.3 网格搜索结合交叉验证 236
11.5.4 网格搜索结合嵌套交叉验证 238
11.6 使用不同评估指标来对模型评分 239
11.6.1 选择正确的分类指标 239
11.6.2 选择正确的回归指标 240
11.7 链接算法形成一个管道 240
11.7.1 用 scikit-learn 实现管道 241
11.7.2 在网格搜索中使用管道 242
11.8 总结 243
第12章 综合 244
12.1 着手处理一个机器学习问题 244
12.2 构建自己的估计器 245
12.2.1 使用C++编写自己的基于OpenCV的分类器 245
12.2.2 使用Python 编写自己的基于scikit-learn的分类器 247
12.3 今后的方向 249
12.4 总结 251
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>机器学习
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>TensorFlow機械学習クックブック
第1章 TensorFlowの仕組みと基本事項を押さえる
第2章 TensorFlowスタイル
―演算/層の追加、損失関数やモデル評価などの実装
第3章 線形回帰
―逆行列/分解法からロジスティック回帰まで
第4章 サポートベクトルマシン
―線形SVMの操作/次元縮約、非線形SVM/多クラスSVMの実装など
第5章 最近傍法
―編集距離、距離関数の組み合わせ、最近傍法の画像認識など
第6章 ニューラルネットワーク
―論理ゲート、単層/多層ニューラルネットワークの実装など
第7章 自然言語処理
―BoW/TF-IDF/スキップグラム/CBOWなど
第8章 畳み込みニューラルネットワーク
―単純なCNN/高度なCNN/モデルの再トレーニングなど
第9章 リカレントニューラルネットワーク
―LSTM/Sequence-to-Sequence/Siamese Similarity法
第10章 TensorFlowを運用環境で使用する
第11章 TensorFlowをさらに活用する
―遺伝的アルゴリズム/連立常微分方程式など
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>TensorFlow機械学習クックブック
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Deep Learning
第一章 Python入門
第二章 感知器
第三章 神經網路
第四章 神經網路的學習
第五章 誤差反向傳播法
第六章 與學習有關的技巧
第七章 卷積神經網路
第八章 深度學習
附錄A Softmax-with-Loss層的計算圖
參考文獻
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Deep Learning
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Pythonで学び直す高校数学
■主な内容
第1章 コンピュータと「数」
位取り記数法、基数変換、負の数、2の補数、実数と浮動小数点数、実数誤差など
第2章 コンピュータの「演算」
算術演算、複合演算子、シフト演算、ビット演算、マスクとフラグ、論理演算、真理値表、論理積、論理和など
第3章 方程式で図形を描く
matplotlibでグラフ、方程式、関数、直線の方程式、比例式と三角比、三平方の定理、円の方程式など
第4章 ベクトル
ベクトルの演算、ベクトル方程式、内積、コサイン類似度、外積、ベクトルで面積を計算など
第5章 行列
行列の演算、逆行列と連立方程式、図形の一次変換(移動、回転、拡大縮小)、一次変換の組み合わせ、同次座標など
第6章 集合と確率
集合とデータベース、試行と事象、順列と組み合わせ、重複順列、数学的確率と統計的確率、モンテカルト法と円周率など
第7章 統計と乱数
母集団と標本、代表値、分散と標準偏差、共分散と相関係数、移動平均、回帰直線、乱数の注意点など
第8章 微分・積分
差分と微分、変化率、導関数、極値、定積分と不定積分、原始関数、積分定数、曲線の接線、輪郭の抽出、円周と円の面積、球の体積と表面積など
Appendix ソフトウェア導入ガイド
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Pythonで学び直す高校数学
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python真好玩：教孩子学编程
前言
第1章 结交一个新朋友，它的名字叫Python
1.1 请叫我Python大人 1
1.2 邀请Python来我的电脑做客 2
1.3 用Python指挥你的电脑 16
1.4 Python的第一个程序 18
1.5 回忆我们的朋友Python 20
1.6 首次小挑战 20
第2章 召唤画图的小海龟
2.1 认识会作图的小海龟 21
2.2 小海龟的作图绝学 28
2.2.1 小海龟画线段 28
2.2.2 小海龟画正方形 30
2.2.3 小海龟画长方形 34
2.2.4 小海龟画小星星 35
2.2.5 添加背景色 36
2.2.6 给小星星上色 38
2.3 别忘了小海龟 40
2.4 小海龟作图的考验 40
第3章 这是什么？变量
3.1 神奇的变量 41
3.2 数字的奥秘 47
3.2.1 数字运算符 47
3.2.2 运算顺序 48
3.2.3 给数字取一个洋气的英文名 49
3.3 字符串是什么东西 50
3.4 变量的可变性 55
3.5 变量取名字很讲究 56
3.6 变量学习小结 58
3.7 趣味小挑战 58
第4章 是或不是的道道
4.1 什么叫条件判断 59
4.1.1 猜数字 60
4.1.2 坐火车 60
4.2 看if来断案 62
4.3 真假总该做点事 69
4.4 if不做的，else来做 72
4.5 它们还有一个兄弟elif 73
4.6 满足两个条件找and 75
4.7 满足一个条件用or 77
4.8 逻辑运算符not 78
4.9 小结条件逻辑 80
4.10 条件逻辑大考验 80
第5章 循环是一种神奇的力量
5.1 循环内功修炼，掌握for循环 81
5.2 循环招式升级while 94
5.3 可怕的无限循环 100
5.4 break和continue 100
5.5 温故而知新 102
5.6 循环大测试 102
第6章 3兄弟：“列表”“元组”“字典”
6.1 重新认识列表 103
6.2 往列表里添加新元素 106
6.3 确定列表中元素的位置 111
6.4 获取列表中连续的元素 112
6.5 换掉列表中的元素 114
6.6 查询列表中是否存在该元素 119
6.7 找到列表元素的索引 120
6.8 遍历列表中的所有元素 121
6.9 给列表元素排序 121
6.10 元组是只读的 124
6.11 字典讲究对应 126
6.11.1 往字典中添加新元素 129
6.11.2 从字典中获取元素 130
6.11.3 修改字典中元素的值 131
6.11.4 删除字典中的元素 131
6.11.5 遍历字典中的元素 132
6.12 课后小结 133
6.13 迎接小挑战 134
第7章 拥有强大能量的函数
7.1 创造自己的函数 136
7.2 让函数动起来 138
7.3 有参数的函数 141
7.4 有多个参数的函数 146
7.5 参数数量不确定 152
7.6 有返回值的函数 156
7.7 变量的作用域 158
7.7.1 局部变量 159
7.7.2 全局变量 160
7.7.3 强制为全局变量 162
7.8 函数能量回收 163
7.9 函数能量小挑战 163
第8章 深奥的类与对象
8.1 我们熟悉的类和对象 165
8.2 Python中的类和对象 166
8.3 创建实例对象 167
8.4 对象都有自己独特的属性 168
8.5 对象还可以有自己的动作 175
8.6 类的三大特性 177
8.7 类与对象总结 191
8.8 类与对象小挑战 192
第9章 注释帮助我们理解
9.1 如何创建注释 193
9.1.1 单行注释 193
9.1.2 多行注释 194
9.2 添加注释的“要”与“不要” 196
9.3 注释回顾 198
9.4 添加注释 198
第10章 警报，警报，发现异常
10.1 Python的守卫者 199
10.2 调试 211
10.3 异常与调试小结 220
10.4 异常与调试挑战 221
第11章 强大的模块功能库
11.1 什么是模块 222
11.2 创建属于自己的模块 223
11.3 使用模块带来的便利 225
11.4 命名空间 229
11.5 局部命名空间 232
11.6 全局命名空间 233
11.7 内置命名空间 236
11.8 Python内置标准模块 236
11.9 模块学习总结 242
11.10 模块学习大挑战 242
第12章 玩转图形界面编程
12.1 什么是GUI编程 243
12.2 Python中的GUI编程 243
12.3 第一个GUI程序—根窗口 244
12.4 Label组件 245
12.5 Button 组件 258
12.6 Entry组件 260
12.7 Canvas组件 262
12.8 布局管理方式 266
12.9 tkinter小总结 273
12.10 tkinter小挑战 274
第13章 操控文件的读与写
13.1 什么是文件 275
13.2 打开文件 278
13.3 写文件 279
13.4 读文件 282
13.5 游戏时间 285
13.6 文件小总结 287
13.7 文件小挑战 287
第14章 网络爬虫不是小虫子
14.1 网络连接 289
14.2 了解网络爬虫 296
14.3 用Python发起网络请求 297
14.4 HTML 302
14.4.1 HTML的常用标签 303
14.4.2 标签的样式 315
14.5 解析网站内容 319
14.6 第一个爬虫程序 329
14.7 爬虫小总结 338
14.8 爬虫小挑战 339
第15章 攻克星球大战
15.1 pygame的安装 341
15.2 分析一下我们的飞机大战 343
15.3 定义运行窗口 343
15.4 用键盘控制飞机移动 351
15.5 飞机发射子弹 361
15.6 敌机的创建 369
15.7 子弹击中敌机—精灵的碰撞检测 375
15.8 记录得分 378
15.9 游戏结束 381
15.10 pygame小结 385
15.11 pygame课后小挑战 385
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python真好玩：教孩子学编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>機械学習のための特徴量エンジニアリング
目次
日本語版に寄せて
訳者まえがき
はじめに
1章 機械学習パイプライン
1.1 データ
1.2 タスク
1.3 モデル
1.4 特徴量
1.5 モデル評価
2章 数値データの取り扱い
2.1 スカラ/ベクトル/ベクトル空間
2.2 カウントデータの取り扱い
2.3 対数変換
2.4 スケーリングと正規化
2.5 交互作用特徴量
2.6 特徴選択
2.7 まとめ
2.8 参考文献
<br 3章 テキストデータの取り扱い
3.1 Bag-of-X:テキストを数値ベクトルで表現する
3.2 特徴選択のための単語除去
3.3 言葉の最小単位:単語からnグラム、そしてフレーズへ
3.4 まとめ
3.5 参考文献
4章 特徴量スケーリングによる効果:Bag-of-WordsのTF-IDFによる重み付け
4.1 TF-IDF:Bag-of-Wordsに対するシンプルな変換方法
4.2 TF-IDFを試す
4.3 深堀り:何が起こっているのか?
4.4 まとめ
4.5 参考文献
5章 カテゴリ変数の取り扱い
5.1 カテゴリ変数のエンコーディング
5.2 膨大なカテゴリ数を持つカテゴリ変数の取り扱い
5.3 まとめ
5.4 参考文献
6章 次元削減:膨大なデータをPCAで圧縮
6.1 直感的な解釈
6.2 導出
6.3 PCAの実行
6.4 白色化とZCA
6.5 PCAの考察と限界
6.6 ユースケース
6.7 まとめ
6.8 参考文献
7章 非線形特徴量の生成:k-meansを使ったスタッキング
7.1 k-means
7.2 パッチで覆うためのクラスタリング
7.3 k-meansによるクラス分類用の特徴量生成
7.4 メリット/デメリット/注意事項
7.5 まとめ
7.6 参考文献
8章 特徴量作成の自動化:画像特徴量の抽出と深層学習
8.1 最も単純な画像特徴量――そしてこの特徴量が機能しない理由
8.2 手動の特徴抽出法:SIFTおよびHOG
8.3 深層学習を用いた画像特徴量の学習
8.4 まとめ
8.5 参考文献
9章 バック・トゥ・ザ・「フィーチャー」:学術論文レコメンドアルゴリズムの構築
9.1 アイテムベースの協調フィルタリング
9.2 解析第1回:データインポート/クリーニング/特徴量の解析
9.3 解析第2回:より技術的に洗練されたスマートなモデル
9.4 解析第3回:より多くの特徴量がさらなる情報をもたらす
9.5 まとめ
9.6 参考文献
付録A 線形モデリングと線形代数の基礎
A.1 線形分類の概要
A.2 行列の解剖学
A.3 参考文献
索引
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>機械学習のための特徴量エンジニアリング
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>大数据数学基础
第1章 绪论 1
1.1 大数据与数学 1
1.1.1 大数据的定义 1
1.1.2 数学在大数据领域的作用 2
1.2 数学与Python 4
1.2.1 NumPy 4
1.2.2 SciPy 5
1.2.3 SymPy 5
1.2.4 StatsModels 5
小结 6
课后习题 6
第2章 微积分基础 7
2.1 函数与极限 7
2.1.1 映射与函数 7
2.1.2 数列与函数的极限 13
2.1.3 极限运算法则与存在法则 16
2.1.4 连续函数与初等函数的
连续性 17
2.2 导数与微分 18
2.2.1 导数的概念 18
2.2.2 函数的求导法则 22
2.2.3 微分的概念 26
2.3 微分中值定理与导数的应用 30
2.3.1 微分中值定理 30
2.3.2 函数的单调性与曲线的
凹凸性 31
2.3.3 函数的极值与最值 32
2.4 不定积分与定积分 36
2.4.1 不定积分的概念与性质 36
2.4.2 不定积分的换元积分法与
分部积分法 41
2.4.3 定积分的概念与性质 43
2.4.4 定积分的换元积分法与
分部积分法 46
小结 47
课后习题 47
第3章 概率论与数理统计基础 49
3.1 数据分布特征的统计描述 49
3.1.1 集中趋势度量 49
3.1.2 离散趋势度量 57
3.1.3 偏度与峰度的度量 62
3.2 概率与概率分布 65
3.2.1 随机事件及其概率 65
3.2.2 随机变量与概率分布 69
3.2.3 随机变量的数字特征 75
3.3 参数估计与假设检验 83
3.3.1 参数估计 83
3.3.2 假设检验 85
小结 88
课后习题 88
第4章 线性代数基础 90
4.1 行列式 90
4.1.1 行列式与全排列 90
4.1.2 行列式的性质 97
4.1.3 行列式按行（列）展开 102
4.2 矩阵及其运算 104
4.2.1 矩阵的定义 105
4.2.2 特殊矩阵 106
4.2.3 矩阵的运算 110
4.2.4 矩阵的逆 114
4.2.5 向量组与矩阵的秩 115
4.2.6 协方差矩阵 119
4.2.7 相关矩阵 120
4.3 矩阵的特征分解与
奇异值分解 121
4.3.1 特征分解 121
4.3.2 奇异值分解 134
小结 137
课后习题 137
第5章 数值计算基础 140
5.1 数值计算的基本概念 140
5.1.1 误差的来源 140
5.1.2 误差分类 142
5.1.3 数值计算的衡量标准 143
5.2 插值法 143
5.2.1 Lagrange插值 143
5.2.2 Newton插值 146
5.2.3 样条插值 152
5.3 函数逼近与拟合 153
5.3.1 数据的最小二乘线性拟合 153
5.3.2 函数的最佳平方逼近 157
5.3.3 数据的多变量拟合 160
5.3.4 数据的非线性曲线拟合 162
5.4 非线性方程（组）求根 164
5.4.1 二分法求解非线性方程 164
5.4.2 迭代法求解非线性方程 167
5.4.3 Newton法求解非线性方程 169
5.4.4 Newton法求解非线性
方程组 171
小结 173
课后习题 174
第6章 多元统计分析 176
6.1 回归分析 176
6.1.1 一元线性回归 176
6.1.2 多元线性回归 184
6.1.3 Logistic回归 189
6.2 判别分析 193
6.2.1 距离判别 194
6.2.2 贝叶斯判别 197
6.2.3 费希尔判别 200
6.3 聚类分析 202
6.3.1 距离和相似系数 202
6.3.2 系统聚类法 205
6.3.3 动态聚类法 212
6.4 主成分分析 215
6.4.1 总体主成分 215
6.4.2 样本主成分 221
6.5 因子分析 224
6.5.1 正交因子模型 225
6.5.2 参数估计 228
6.5.3 因子旋转 235
6.5.4 因子得分 237
6.6 典型相关分析 238
6.6.1 总体典型相关 238
6.6.2 样本典型相关 240
6.6.3 典型相关系数的显著性检验 241
小结 243
课后习题 243
附录I t分布表 248
附录II F分布表 250
参考文献 262
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>大数据数学基础
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python Qt GUI与数据可视化编程
目　录
第　一部分 PyQt5开发基础
第　1章 开发环境安装　2
1．1　Python　2
1．1．1　Python 简介　2
1．1．2　Python的下载与安装　2
1．1．3　IDLE的基本使用　3
1．1．4　安装Python包　4
1．2　Qt　5
1．2．1　Qt 简介　5
1．2．2　Qt 的下载与安装　5
1．2．3　Qt的几个工具软件　7
1．2．4　Qt Creator的设置　7
1．3　PyQt5　8
1．3．1　PyQt5简介　8
1．3．2　PyQt5安装　9
1．3．3　在IDLE中开启对PyQt5的代码提示功能　10
第　2章 PyQt5 GUI程序框架　11
2．1　PyQt5 GUI程序的基本框架　11
2．2　使用可视化设计窗体的GUI程序　12
2．2．1　用UI Designer可视化设计窗体　13
2．2．2　将ui文件编译为py文件　16
2．2．3　使用Ui_FormHello类的GUI程序框架　18
2．2．4　界面与逻辑分离的GUI程序框架　19
2．3　信号与槽的使用　23
2．3．1　信号与槽功能概述　23
2．3．2　Qt Creator的使用　23
2．3．3　窗体可视化设计　25
2．3．4　界面组件布局管理　26
2．3．5　组件的信号与内建槽函数的关联　29
2．3．6　PyQt5 GUI项目程序框架　30
2．3．7　为组件的内建信号编写槽函数　35
2．4　自定义信号的使用　39
2．4．1　信号与槽的一些特点和功能　39
2．4．2　自定义信号使用示例　40
2．4．3　使用信号与槽的一些注意事项　43
2．5　资源文件的使用　43
2．5．1　功能概述　43
2．5．2　窗体可视化设计　44
2．5．3　创建和使用资源文件　44
2．5．4　窗体文件和资源文件的编译　45
2．5．5　窗体业务逻辑类的设计　46
2．5．6　为应用程序设置图标　47
2．6　从Qt C++类库到PyQt5　47
2．6．1　帮助信息的查找　47
2．6．2　正确导入模块中的类　49
2．6．3　部分类和接口函数的差异　50
2．6．4　数据类型对应关系　51
2．7　3个单窗体GUI项目模板　52
2．7．1　概述　52
2．7．2　dialogApp项目模板　53
2．7．3　widgetApp项目模板　54
2．7．4　mainWindowApp项目模板　55
2．7．5　使用项目模板和实例源程序　56
2．7．6　在Eric中编辑和运行示例程序　57
第二部分　GUI应用程序设计
第3章　常用界面组件的使用　60
3．1　数据输入输出　60
3．2　QPushButton　62
3．3　QSlider和QProgressBar　64
3．4　日期时间数据　66
3．4．1　日期时间类和界面组件　66
3．4．2　日期时间数据的获取并转换为字符串　67
3．4．3　字符串转换为日期时间　68
3．4．4　QLineEdit的inputMask　68
3．5　定时器QTimer　69
3．6　下拉列表框QComboBox　70
3．6．1　QComboBox功能概述　70
3．6．2　简单的ComboBox操作　71
3．6．3　带用户数据的ComboBox　72
3．6．4　QComboBox常用函数总结　73
3．7　QMainWindow与QAction　73
3．7．1　功能简介　73
3．7．2　窗体可视化设计　75
3．7．3　界面操作功能的代码实现　77
3．8　QListWidget和QToolButton　80
3．8．1　功能概述　80
3．8．2　窗体可视化设计　81
3．8．3　QToolButton与下拉式菜单　84
3．8．4　QListWidget的操作　85
3．8．5　创建右键快捷菜单　88
3．9　QTreeWidget和QDockWidget　88
3．9．1　功能概述　88
3．9．2　窗体可视化设计　90
3．9．3　QTreeWidget操作　91
3．9．4　QLabel和QPixmap显示图片　96
3．9．5　QDockWidget的操作　97
3．10　QTableWidget　98
3．10．1　QTableWidget概述　98
3．10．2　窗体设计与初始化　99
3．10．3　QTableWidget操作　100
3．11　容器类组件与布局设计　105
3．11．1　QGroupBox组件与水平布局　106
3．11．2　布局的layoutStretch属性　106
3．11．3　网格状布局　107
3．11．4　分割条　108
第4章　Model/View结构　109
4．1　Model/View结构　109
4．1．1　Model/View结构基本原理　109
4．1．2　Model（数据模型）　110
4．1．3　View（视图）　111
4．1．4　Delegate（代理）　111
4．1．5　Model/View结构的一些概念　112
4．2　QFileSystemModel　114
4．2．1　QFileSystemModel类的基本功能　114
4．2．2　QFileSystemModel的使用　114
4．3　QStringListModel　116
4．3．1　QStringListModel功能概述　116
4．3．2　QStringListModel的使用　116
4．4　QStandardItemModel　119
4．4．1　功能概述　119
4．4．2　界面设计　120
4．4．3　QStandardItemModel的使用　120
4．5　自定义代理　128
4．5．1　自定义代理的功能　128
4．5．2　自定义代理类的基本设计要求　128
4．5．3　基于QDoubleSpinBox的自定义代理类　129
4．5．4　基于QComboBox的自定义代理类　130
4．5．5　自定义代理类的使用　131
第5章　事件处理　133
5．1　默认事件处理　133
5．1．1　应用程序的事件循环　133
5．1．2　事件类型与默认的事件处理函数　133
5．1．3　事件与信号的关系　137
5．2　事件拦截与事件过滤　139
5．2．1　event()函数的作用　139
5．2．2　事件过滤器　140
5．2．3　事件队列的及时处理　141
5．3　拖放事件与拖放操作　142
5．3．1　拖放操作相关事件　142
5．3．2　外部文件拖放操作示例　143
5．4　具有拖放操作功能的组件　146
5．4．1　功能概述　146
5．4．2　界面设计与初始化　147
5．4．3　拖放操作属性的显示　148
5．4．4　拖放属性的设置　149
5．4．5　通过事件过滤器实现项的删除　150
第6章　对话框与多窗口设计　151
6．1　标准对话框　151
6．1．1　概述　151
6．1．2　QFileDialog对话框　152
6．1．3　QColorDialog对话框　154
6．1．4　QFontDialog对话框　154
6．1．5　QProgressDialog对话框　155
6．1．6　QInputDialog输入对话框　156
6．1．7　QMessageBox消息对话框　157
6．2　自定义对话框及其使用　159
6．2．1　对话框的不同调用方式　159
6．2．2　示例项目的文件组成　160
6．2．3　主窗口的设计与初始化　161
6．2．4　对话框QmyDialogSize的创建和使用　163
6．2．5　对话框QmyDialogHeaders的创建和使用　165
6．2．6　对话框QmyDialogLocate的创建和使用　166
6．3　多窗口应用程序　170
6．3．1　主要的窗体类及其用途　170
6．3．2　窗体类重要特性的设置　170
6．3．3　多窗口应用程序设计示例　172
6．4　MDI应用程序设计　179
6．4．1　MDI简介　179
6．4．2　文档窗体类QmyFormDoc的设计　180
6．4．3　主窗口设计与子窗口的使用　181
第7章　数据库　185
7．1　Qt SQL模块概述　185
7．1．1　Qt SQL支持的数据库　185
7．1．2　SQLite数据库　185
7．1．3　Qt SQL模块的主要类　187
7．2　QSqlTableModel的使用　188
7．2．1　功能概述　188
7．2．2　窗体可视化设计　190
7．2．3　窗体业务逻辑类的设计和初始化　190
7．2．4　打开数据库和数据表　191
7．2．5　添加、插入与删除记录　197
7．2．6　保存与取消修改　198
7．2．7　设置和清除照片　199
7．2．8　数据记录的遍历　199
7．2．9　记录的排序　200
7．2．10　记录的过滤　200
7．3　QSqlQueryModel的使用　201
7．3．1　QSqlQueryModel功能概述　201
7．3．2　窗体业务逻辑类的设计和初始化　202
7．3．3　打开数据库和查询数据　202
7．3．4　记录移动　205
7．4　QSqlQuery的使用　206
7．4．1　QSqlQuery基本用法　206
7．4．2　QSqlQueryModel和QSqlQuery联合使用　207
7．5　QSqlRelationalTableModel的使用　215
7．5．1　关系数据表和示例功能　215
7．5．2　关系数据模型功能实现　216
第8章　绘图　219
8．1　QPainter绘图　219
8．1．1　QPainter绘图系统　219
8．1．2　QPen的主要功能　221
8．1．3　QBrush的主要功能　223
8．1．4　渐变填充　224
8．1．5　QPainter绘制基本图形　227
8．2　坐标系统和坐标变换　230
8．2．1　坐标变换函数　230
8．2．2　坐标变换绘图实例　231
8．2．3　视口和窗口　234
8．2．4　绘图叠加的效果　236
8．3　自定义界面组件　237
8．3．1　功能概述　237
8．3．2　自定义QWidget子类QmyBattery　237
8．3．3　QmyBattery类的使用　239
8．4　Graphics View绘图架构　241
8．4．1　场景、视图与图形项　241
8．4．2　Graphics View的坐标系统　242
8．4．3　Graphics View相关的类　243
8．4．4　Graphics View程序基本结构　246
8．4．5　Graphics View绘图程序示例　250
第9章　文件　261
9．1　文件操作相关类概述　261
9．1．1　文件操作接口类QFile　261
9．1．2　文件流操作类QTextStream和QDataStream　262
9．1．3　目录和文件操作相关的类　262
9．2　文本文件读写　263
9．2．1　功能概述　263
9．2．2　QFile读写文本文件　263
9．2．3　QFile和QTextStream结合读写文本文件　266
9．2．4　Python内建函数读写文本文件　268
9．3　二进制文件读写　269
9．3．1　基础知识和工具软件　269
9．3．2　QDataStream功能概述　271
9．3．3　QDataStream流化数据读写　272
9．3．4　QDataStream原始数据读写　281
9．4　目录和文件操作　288
9．4．1　目录和文件操作相关的类　288
9．4．2　示例功能概述　288
9．4．3　QFile类　290
9．4．4　QFileInfo类　291
9．4．5　QDir类　292
9．4．6　QFileSystemWatcher类　294
第　10章 多媒体　297
10．1　PyQt5多媒体模块功能概述　297
10．2　音频播放　298
10．2．1　使用QMediaPlayer播放音乐文件　298
10．2．2　使用QSoundEffect和QSound播放音效文件　303
10．3　音频输入　304
10．3．1　使用QAudioRecorder录制音频　304
10．3．2　使用QAudioInput获取音频输入　310
10．4　视频播放　317
10．4．1　在QVideoWidget上显示视频　317
10．4．2　在QGraphicsVideoItem上播放视频　321
10．5　摄像头的使用　322
10．5．1　摄像头操作概述　322
10．5．2　示例功能和界面可视化设计　324
10．5．3　使用摄像头拍照　324
10．5．4　使用QMediaRecorder通过摄像头录像　328
第　11章 GUI设计增强技术　329
11．1　多语言界面　329
11．1．1　多语言界面设计概述　329
11．1．2　多语言界面设计示例　331
11．2　QSS定制界面　336
11．2．1　Qt样式表的作用　336
11．2．2　Qt样式表句法　337
11．2．3　Qt样式表的使用　342
第三部分　数据可视化
第　12章 PyQtChart二维绘图　346
12．1　PyQtChart概述　346
12．1．1　模块安装与基本功能　346
12．1．2　一个简单的PyQtChart绘图程序　347
12．1．3　图表的主要组成部分　348
12．2　QChart绘制折线图　350
12．2．1　示例功能概述与界面设计　350
12．2．2　QPen属性设置对话框设计　351
12．2．3　主窗口业务逻辑类初始化　353
12．2．4　图表各组成部件的属性设置　356
12．3　QChart绘图高级功能　365
12．3．1　功能概述　365
12．3．2　自定义类QmyChartView　366
12．3．3　主窗口可视化设计　368
12．3．4　绘图功能的实现　368
12．4　对数坐标轴和多坐标轴　373
12．4．1　功能概述　373
12．4．2　主窗口可视化设计　374
12．4．3　界面和图表初始化　374
12．4．4　载入数据文件并绘制曲线　375
12．5　饼图和各种柱状图　377
12．5．1　功能概述　377
12．5．2　窗口初始化与数据准备　378
12．5．3　其他界面操作功能的实现　381
12．5．4　柱状图　382
12．5．5　堆叠柱状图　387
12．5．6　百分比柱状图　388
12．5．7　饼图　390
12．6　蜡烛图和日期时间坐标轴　392
12．6．1　功能概述　392
12．6．2　界面和图表初始化　394
12．6．3　绘图功能的实现　395
12．7　区域填充图　399
12．7．1　功能概述　399
12．7．2　界面和图表初始化　400
12．7．3　绘图功能的实现　402
12．8　极坐标图　405
12．8．1　功能概述　405
12．8．2　绘制极坐标图　406
12．8．3　其他功能的实现　408
第　13章 PyQtDataVisualization三维绘图　411
13．1　PyQtDataVisualization模块概述　411
13．1．1　模块安装与导入　411
13．1．2　模块中主要的类　411
13．2　三维柱状图　413
13．2．1　功能概述　413
13．2．2　窗体可视化设计　413
13．2．3　初始化创建三维柱状图　414
13．2．4　其他功能的实现　417
13．3　三维散点图　424
13．3．1　功能概述　424
13．3．2　创建三维散点图　425
13．3．3　散点数据管理　427
13．4　三维曲面图　429
13．4．1　功能概述　429
13．4．2　三维曲面图　429
13．4．3　三维地形图　434
第　14章 Matplotlib数据可视化　437
14．1　Matplotlib的基本用法　437
14．1．1　Matplotlib的安装　437
14．1．2　一个脚本化的绘图程序　438
14．1．3　GUI程序中的Matplotlib绘图　439
14．2　图的主要元素的面向对象操作　443
14．2．1　图的主要组成元素　443
14．2．2　示例程序功能和窗体可视化设计　445
14．2．3　界面创建与初始化绘图　446
14．2．4　Figure对象的操作　450
14．2．5　Axes子图的操作　453
14．2．6　曲线设置　456
14．2．7　x轴和y轴设置　458
14．3　交互操作　464
14．3．1　交互功能概述　464
14．3．2　界面构造与初始化绘图　466
14．3．3　界面其他功能的实现　469
14．3．4　交互事件的处理　469
14．4　典型二维图的绘制　471
14．4．1　自定义绘图组件类QmyFigureCanvas　471
14．4．2　QmyFigureCanvas类的使用　473
14．4．3　直方图　475
14．4．4　填充图　476
14．4．5　饼图　477
14．4．6　火柴杆图　478
14．4．7　极坐标图　480
14．5　三维数据绘图　482
14．5．1　三维数据绘图概述　482
14．5．2　窗体初始化　483
14．5．3　绘制三维图　486
14．5．4　三维数据绘制二维图　487
14．5．5　colormap　488
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python Qt GUI与数据可视化编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通数据科学：从线性回归到深度学习
第1章  数据科学概述 1
1.1　挑战　2
1.1.1　工程实现的挑战　2
1.1.2　模型搭建的挑战　3
1.2　机器学习　5
1.2.1　机器学习与传统编程　5
1.2.2　监督式学习和非监督式学习　8
1.3　统计模型　8
1.4　关于本书　10
第2章 Python安装指南与简介：告别空谈　12
2.1　Python简介　13
2.1.1　什么是Python　15
2.1.2　Python在数据科学中的地位　16
2.1.3　不可能绕过的第三方库　17
2.2　Python安装　17
2.2.1　Windows下的安装　18
2.2.2　Mac下的安装　21
2.2.3　Linux下的安装　24
2.3　Python上手实践　26
2.3.1　Python shell　26
2.3.2　第 一个Python程序：Word Count　28
2.3.3　Python编程基础　30
2.3.4　Python的工程结构　34
2.4　本章小结　35
第3章　数学基础：恼人但又不可或缺的知识　36
3.1　矩阵和向量空间　37
3.1.1　标量、向量与矩阵　37
3.1.2　特殊矩阵　39
3.1.3　矩阵运算　39
3.1.4　代码实现　42
3.1.5　向量空间　44
3.2　概率：量化随机　46
3.2.1　定义概率：事件和概率空间　47
3.2.2　条件概率：信息的价值　48
3.2.3　随机变量：两种不同的随机　50
3.2.4　正态分布：殊途同归　52
3.2.5　P-value：自信的猜测　53
3.3　微积分　55
3.3.1　导数和积分：位置、速度　55
3.3.2　极限：变化的终点　57
3.3.3　复合函数：链式法则　58
3.3.4　多元函数：偏导数　59
3.3.5　极值与最值：最优选择　59
3.4　本章小结　61
第4章　线性回归：模型之母　62
4.1　一个简单的例子　64
4.1.1　从机器学习的角度看这个问题　66
4.1.2　从统计学的角度看这个问题　69
4.2　上手实践：模型实现　73
4.2.1　机器学习代码实现　74
4.2.2　统计方法代码实现　77
4.3　模型陷阱　82
4.3.1　过度拟合：模型越复杂越好吗　84
4.3.2　模型幻觉之统计学方案：假设检验　87
4.3.3　模型幻觉之机器学习方案：惩罚项　89
4.3.4　比较两种方案　92
4.4　模型持久化　92
4.4.1　模型的生命周期　93
4.4.2　保存模型　93
4.5　本章小结　96
第5章　逻辑回归：隐藏因子　97
5.1　二元分类问题：是与否　98
5.1.1　线性回归：为何失效　98
5.1.2　窗口效应：看不见的才是关键　100
5.1.3　逻辑分布：胜者生存　102
5.1.4　参数估计之似然函数：统计学角度　104
5.1.5　参数估计之损失函数：机器学习角度　104
5.1.6　参数估计之最终预测：从概率到选择　106
5.1.7　空间变换：非线性到线性　106
5.2　上手实践：模型实现　108
5.2.1　初步分析数据：直观印象　108
5.2.2　搭建模型　113
5.2.3　理解模型结果　116
5.3　评估模型效果：孰优孰劣　118
5.3.1　查准率与查全率　119
5.3.2　ROC曲线与AUC　123
5.4　多元分类问题：超越是与否　127
5.4.1　多元逻辑回归：逻辑分布的威力　128
5.4.2　One-vs.-all：从二元到多元　129
5.4.3　模型实现　130
5.5　非均衡数据集　132
5.5.1　准确度悖论　132
5.5.2　一个例子　133
5.5.3　解决方法　135
5.6　本章小结　136
第6章　工程实现：计算机是怎么算的　138
6.1　算法思路：模拟滚动　139
6.2　数值求解：梯度下降法　141
6.3　上手实践：代码实现　142
6.3.1　TensorFlow基础　143
6.3.2　定义模型　148
6.3.3　梯度下降　149
6.3.4　分析运行细节　150
6.4　更优化的算法：随机梯度下降法　153
6.4.1　算法细节　153
6.4.2　代码实现　154
6.4.3　两种算法比较　156
6.5　本章小结　158
第7章　计量经济学的启示：他山之石　159
7.1　定量与定性：变量的数学运算合理吗　161
7.2　定性变量的处理　162
7.2.1　虚拟变量　162
7.2.2　上手实践：代码实现　164
7.2.3　从定性变量到定量变量　168
7.3　定量变量的处理　170
7.3.1　定量变量转换为定性变量　171
7.3.2　上手实践：代码实现　171
7.3.3　基于卡方检验的方法　173
7.4　显著性　175
7.5　多重共线性：多变量的烦恼　176
7.5.1　多重共线性效应　176
7.5.2　检测多重共线性　180
7.5.3　解决方法　185
7.5.4　虚拟变量陷阱　188
7.6　内生性：变化来自何处　191
7.6.1　来源　192
7.6.2　内生性效应　193
7.6.3　工具变量　195
7.6.4　逻辑回归的内生性　198
7.6.5　模型的联结　200
7.7　本章小结　201
第8章　监督式学习： 目标明确　202
8.1　支持向量学习机　203
8.1.1　直观例子　204
8.1.2　用数学理解直观　205
8.1.3　从几何直观到最优化问题　207
8.1.4　损失项　209
8.1.5　损失函数与惩罚项　210
8.1.6　Hard margin 与soft margin比较　211
8.1.7　支持向量学习机与逻辑回归：隐藏的假设　213
8.2　核函数　216
8.2.1　空间变换：从非线性到线性　216
8.2.2　拉格朗日对偶　218
8.2.3　支持向量　220
8.2.4　核函数的定义：优化运算　221
8.2.5　常用的核函数　222
8.2.6　Scale variant　225
8.3　决策树　227
8.3.1　决策规则　227
8.3.2　评判标准　229
8.3.3　代码实现　231
8.3.4　决策树预测算法以及模型的联结　231
8.3.5　剪枝　235
8.4　树的集成　238
8.4.1　随机森林　238
8.4.2　Random forest embedding　239
8.4.3　GBTs之梯度提升　241
8.4.4　GBTs之算法细节　242
8.5　本章小结　244
第9章　生成式模型：量化信息的价值　246
9.1　贝叶斯框架　248
9.1.1　蒙提霍尔问题　248
9.1.2　条件概率　249
9.1.3　先验概率与后验概率　251
9.1.4　参数估计与预测公式　251
9.1.5　贝叶斯学派与频率学派　252
9.2　朴素贝叶斯　254
9.2.1　特征提取：文字到数字　254
9.2.2　伯努利模型　256
9.2.3　多项式模型　258
9.2.4　TF-IDF　259
9.2.5　文本分类的代码实现　260
9.2.6　模型的联结　265
9.3　判别分析　266
9.3.1　线性判别分析　267
9.3.2　线性判别分析与逻辑回归比较　269
9.3.3　数据降维　270
9.3.4　代码实现　273
9.3.5　二次判别分析　275
9.4　隐马尔可夫模型　276
9.4.1　一个简单的例子　276
9.4.2　马尔可夫链　278
9.4.3　模型架构　279
9.4.4　中文分词：监督式学习　280
9.4.5　中文分词之代码实现　282
9.4.6　股票市场：非监督式学习　284
9.4.7　股票市场之代码实现　286
9.5　本章小结　289
第10章 非监督式学习：聚类与降维　290
10.1　K-means　292
10.1.1　模型原理　292
10.1.2　收敛过程　293
10.1.3　如何选择聚类个数　295
10.1.4　应用示例　297
10.2　其他聚类模型　298
10.2.1　混合高斯之模型原理　299
10.2.2　混合高斯之模型实现　300
10.2.3　谱聚类之聚类结果　303
10.2.4　谱聚类之模型原理　304
10.2.5　谱聚类之图片分割　307
10.3　Pipeline　308
10.4　主成分分析　309
10.4.1　模型原理　310
10.4.2　模型实现　312
10.4.3　核函数　313
10.4.4　Kernel PCA的数学原理　315
10.4.5　应用示例　316
10.5　奇异值分解　317
10.5.1　定义　317
10.5.2　截断奇异值分解　317
10.5.3　潜在语义分析　318
10.5.4　大型推荐系统　320
10.6　本章小结　323
第11章 分布式机器学习：集体力量　325
11.1　Spark简介　327
11.1.1　Spark安装　328
11.1.2　从MapReduce到Spark　333
11.1.3　运行Spark　335
11.1.4　Spark DataFrame　336
11.1.5　Spark的运行架构　339
11.2　最优化问题的分布式解法　341
11.2.1　分布式机器学习的原理　341
11.2.2　一个简单的例子　342
11.3　大数据模型的两个维度　344
11.3.1　数据量维度　344
11.3.2　模型数量维度　346
11.4　开源工具的另一面　348
11.4.1　一个简单的例子　349
11.4.2　开源工具的阿喀琉斯之踵　351
11.5　本章小结　351
第12章 神经网络：模拟人的大脑　353
12.1　神经元　355
12.1.1　神经元模型　355
12.1.2　Sigmoid神经元与二元逻辑回归　356
12.1.3　Softmax函数与多元逻辑回归　358
12.2　神经网络　360
12.2.1　图形表示　360
12.2.2　数学基础　361
12.2.3　分类例子　363
12.2.4　代码实现　365
12.2.5　模型的联结　369
12.3　反向传播算法　370
12.3.1　随机梯度下降法回顾　370
12.3.2　数学推导　371
12.3.3　算法步骤　373
12.4　提高神经网络的学习效率　373
12.4.1　学习的原理　373
12.4.2　激活函数的改进　375
12.4.3　参数初始化　378
12.4.4　不稳定的梯度　380
12.5　本章小结　381
第13章 深度学习：继续探索　383
13.1　利用神经网络识别数字　384
13.1.1　搭建模型　384
13.1.2　防止过拟合之惩罚项　386
13.1.3　防止过拟合之dropout　387
13.1.4　代码实现　389
13.2　卷积神经网络　394
13.2.1　模型结构之卷积层　395
13.2.2　模型结构之池化层　397
13.2.3　模型结构之完整结构　399
13.2.4　代码实现　400
13.2.5　结构真的那么重要吗　405
13.3　其他深度学习模型　406
13.3.1　递归神经网络　406
13.3.2　长短期记忆　407
13.3.3　非监督式学习　409
13.4　本章小结　411
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通数据科学：从线性回归到深度学习
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python 测试之道
第 1章 大话软件测试基础 1
1．1 测试的分阶 1
1．1．1 入门阶 1
1．1．2 工程师阶 14
1．1．3 专家阶 29
1．1．4 总监阶 36
1．2 并发测试 40
1．2．1 并发测试的定义 40
1．2．2 并发测试的分类 41
1．3 自动化测试 41
1．3．1 什么是自动化测试 41
1．3．2 与手工测试的区别 42
1．3．3 自动化测试的困境 43
1．4 学习小贴士 43
第2章 Python的环境准备 45
2．1 Python介绍 45
2．2 Python的安装配置 45
2．2．1 Python版本的选择 45
2．2．2 Python的安装与配置 46
2．3 Python模块的安装 46
2．4 Python的工具 47
2．4．1 Python工具介绍 47
2．4．2 Pycharm的安装 47
2．4．3 Pycharm的使用 48
2．5 学习小贴士 50
第3章 Python的基础 51
3．1 语法规范 51
3．1．1 换行与缩进 51
3．1．2 模块导入 52
3．1．3 注释 53
3．2 变量与运算 54
3．2．1 变量 54
3．2．2 运算 57
3．3 数据结构 60
3．3．1 元组 60
3．3．2 列表 62
3．3．3 字典 63
3．4 函数 65
3．4．1 函数的定义 65
3．4．2 函数的参数 66
3．4．3 函数的返回值 67
3．4．4 函数的嵌套 68
3．5 字符串处理 70
3．5．1 字符串的转换 70
3．5．2 字符串的合并 71
3．5．3 字符串的截取 72
3．5．4 字符串的替换 73
3．6 学习小贴士 75
第4章 接口测试的基础 76
4．1 网络传输知识 76
4．1．1 协议 76
4．1．2 Cache 78
4．1．3 Cookie 82
4．1．4 Session 87
4．1．5 Token 91
4．1．6 JSON Web Token 92
4．2 HTTP协议 96
4．2．1 HTTP协议的介绍 96
4．2．2 HTTP协议的原理 99
4．2．3 Uniform Resource Locator 102
4．2．4 请求报文（request） 103
4．2．5 响应报文（response） 111
4．2．6 HTTP扩展 117
4．3 HTTPS协议详解 120
4．3．1 加密算法 121
4．3．2 数字签名 121
4．3．3 传输过程 122
4．4 WebSocket协议详解 123
4．4．1 WebSocket的由来 123
4．4．2 WebSocket的属性 124
4．4．3 WebSocket的原理 125
4．5 学习小贴士 126
第5章 模拟网络请求 127
5．1 发送HTTP请求 127
5．1．1 requests模块 127
5．1．2 请求与响应 127
5．1．3 请求参数 128
5．2 发送HTTPS请求 134
5．3 发送WebSocket请求 136
5．3．1 WebSocket模块 136
5．3．2 请求与响应 136
5．3．3 请求实例 136
5．4 学习小贴士 137
第6章 接口测试 138
6．1 接口测试的定义 138
6．2 接口测试工具 138
6．3 接口文档 141
6．4 实例 142
6．4．1 接口文档解析 142
6．4．2 测试用例 144
6．4．3 测试代码编写 144
6．5 学习小贴士 145
第7章 UnitTest测试框架 146
7．1 UnitTest模块 146
7．2 测试用例 146
7．3 测试固件 148
7．4 测试套件 149
7．5 运行测试 150
7．6 测试报告 151
7．7 学习小贴士 153
第8章 接口自动化测试 154
8．1 项目的选择 154
8．2 结构化设计 154
8．2．1 顺序结构 155
8．2．2 判断结构 155
8．2．3 循环结构 158
8．3 内置功能应用 161
8．3．1 随机产生数据 161
8．3．2 日期的获取和计算 163
8．3．3 数据加密 165
8．3．4 txt文件的读写 166
8．4 实例 169
8．4．1 测试需求分析 169
8．4．2 测试流程设计 171
8．4．3 测试环境准备 171
8．4．4 测试代码编写 171
8．4．5 实例完整代码 175
8．5 学习小贴士 177
第9章 接口并发测试 178
9．1 常见的并发问题 178
9．1．1 事务并发的问题 179
9．1．2 极限值并发的问题 180
9．1．3 压力并发的问题 180
9．1．4 异常数据干扰并发的问题 183
9．2 设计并发测试场景 183
9．2．1 设计思路整理 183
9．2．2 场景分析实例1 184
9．2．3 场景分析实例2 188
9．3 并发结果测试与结论 189
9．3．1 账户资金并发bug实例及测试
建议 189
9．3．2 抽奖营销活动并发bug实例及
测试建议 190
9．4 多线程并发 191
9．4．1 单线程执行 191
9．4．2 多线程执行 191
9．4．3 守护线程 194
9．4．4 阻塞线程 195
9．4．5 并发测试框架 196
9．5 实例 197
9．5．1 测试需求分析 197
9．5．2 测试方案设定 198
9．5．3 测试代码编写 199
9．5．4 实例完整代码 200
9．5．5 测试结果分析 201
9．6 学习小贴士 201
第10章 接口自动化测试实战 203
10．1 实战1 203
10．1．1 测试接口选择 203
10．1．2 测试框架构建 204
10．1．3 测试代码编写 205
10．1．4 输出测试报告 206
10．1．5 实例完整代码 208
10．2 实战2 210
10．2．1 测试用例选择 210
10．2．2 测试流程设计 211
10．2．3 测试环境准备 212
10．2．4 测试代码编写 212
10．2．5 实例完整代码 217
10．3 学习小贴士 219
第11章 接口并发测试实战 221
11．1 订单并发性能 221
11．1．1 整理并发需求 221
11．1．2 提取性能指标 221
11．1．3 测试代码编写 222
11．1．4 实例完整代码 223
11．2 WebSocket并发 225
11．2．1 整理并发需求 225
11．2．2 提取性能指标 225
11．2．3 测试代码编写 226
11．2．4 实例完整代码 226
11．3 学习小贴士 227
第12章 Jenkins持续集成 229
12．1 什么是持续集成 229
12．2 持续集成工具Jenkins 229
12．3 Jenkins的安装运行 230
12．4 Jenkins的配置 234
12．4．1 系统设置 234
12．4．2 插件管理 237
12．5 Jenkins的构建任务 238
12．5．1 新建任务 238
12．5．2 源码管理 240
12．5．3 构建触发器 241
12．5．4 构建环境 242
12．5．5 设置构建 242
12．5．6 构建后操作 244
12．6 运行构建任务 244
12．7 学习小贴士 246
第13章 Python的其他用途 247
13．1 批量处理数据 247
13．2 本地命令集成 248
13．3 查看服务器日志 249
13．4 学习小贴士 250
第14章 测试人员的发展 251
14．1 测试人员的现状 251
14．2 测试人员的地位 254
14．3 测试人员的评审标准 254
14．4 测试人员的学习 255
14．5 测试人员的分享 257
14．6 Python对于测试人员的意义 265
14．7 测试人员的转型 265
14．7．1 Quality Assurance 265
14．7．2 开发工程师 266
14．7．3 产品经理 266
14．7．4 项目经理 266
14．8 学习小贴士 267
后记 268
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python 测试之道
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>图解算法
目 录
第1章 进入算法的世界 1
1.1 生活中到处都是算法 2
1.1.1 算法的定义 3
1.1.2 算法的条件 4
1.1.3 时间复杂度O(f(n)) 6
1.2 常见算法简介 7
1.2.1 分治法 8
1.2.2 递归法 9
1.2.3 贪心法 11
1.2.4 动态规划法 12
1.2.5 迭代法 13
1.2.6 枚举法 14
1.2.7 回溯法 15
【课后习题】 18
第2章 常用的数据结构 19
2.1 认识数据结构 19
2.2 数据结构的种类 22
2.2.1 数组 23
2.2.2 链表 25
2.2.3 堆栈 26
2.2.4 队列 27
2.3 树形结构 28
2.3.1 树的基本观念 29
2.3.2 二叉树 30
2.4 图形结构简介 32
2.5 哈希表 34
【课后习题】 35
第3章 排序算法 36
3.1 认识排序 37
3.2 冒泡排序法 38
3.3 选择排序法 40
3.4 插入排序法 42
3.5 希尔排序法 44
3.6 合并排序法 46
3.7 快速排序法 49
3.8 基数排序法 51
【课后习题】 53
第4章 查找与哈希算法 54
4.1 常见查找算法的介绍 55
4.1.1 顺序查找法 55
4.1.2 二分查找法 56
4.1.3 插值查找法 58
4.2 常见的哈希法简介 60
4.2.1 除留余数法 60
4.2.2 平方取中法 62
4.2.3 折叠法 62
4.2.4 数字分析法 63
4.3 碰撞与溢出问题的处理 64
4.3.1 线性探测法 64
4.3.2 平方探测法 65
4.3.3 再哈希法 66
【课后习题】 67
第5章 数组与链表算法 68
5.1 矩阵 68
5.1.1 矩阵相加算法 69
5.1.2 矩阵相乘 70
5.1.3 转置矩阵 72
5.2 建立单向链表 73
5.2.1 单向链表的连接功能 74
5.2.2 单向链表的节点删除 76
5.2.3 单向链表的反转 79
【课后习题】 82
第6章 堆栈与队列算法 83
6.1 用数组实现堆栈 83
6.2 用链表实现堆栈 85
6.3 汉诺塔问题的求解算法 87
6.4 八皇后问题的求解算法 93
6.5 用数组实现队列 95
6.6 用链表实现队列 98
6.7 双向队列 100
6.8 优先队列 103
【课后习题】 104
第7章 树形结构及其算法 105
7.1 用数组实现二叉树 107
7.2 用链表实现二叉树 109
7.3 二叉树遍历 111
7.4 二叉树节点的查找 115
7.5 二叉树节点的插入 116
7.6 二叉树节点的删除 118
7.7 堆积树排序法 121
【课后习题】 127
第8章 图的数据结构及其算法 129
8.1 图的遍历 129
8.1.1 深度优先遍历法 130
8.1.2 广度优先遍历法 132
8.2 最小生成树（MST） 136
8.2.1 Prim算法 136
8.2.2 Kruskal算法 138
8.3 图的最短路径法 142
8.3.1 Dijkstra算法与 A* 算法 143
8.3.2 Floyd算法 148
【课后习题】 152
附录 习题和解答 155
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>图解算法
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>面向自然语言处理的深度学习
译者序
前言
致谢
关于作者
关于技术审校人员
第1章 自然语言处理和深度学习概述 1
1.1 Python包 2
1.1.1 NumPy 2
1.1.2 Pandas 6
1.1.3 SciPy 9
1.2 自然语言处理简介 11
1.2.1 什么是自然语言处理 11
1.2.2 如何理解人类的语言 11
1.2.3 自然语言处理的难度是什么 11
1.2.4 我们想通过自然语言处理获得什么 13
1.2.5 语言处理中的常用术语 13
1.3 自然语言处理库 14
1.3.1 NLTK 14
1.3.2 TextBlob 15
1.3.3 SpaCy 17
1.3.4 Gensim 19
1.3.5 Pattern 20
1.3.6 Stanford CoreNLP 21
1.4 NLP入门 21
1.4.1 使用正则表达式进行文本搜索 21
1.4.2 将文本转换为列表 21
1.4.3 文本预处理 22
1.4.4 从网页中获取文本 22
1.4.5 移除停止词 23
1.4.6 计数向量化 23
1.4.7 TF-IDF分数 24
1.4.8 文本分类器 25
1.5 深度学习简介 25
1.6 什么是神经网络 27
1.7 神经网络的基本结构 29
1.8 神经网络的类型 32
1.8.1 前馈神经网络 33
1.8.2 卷积神经网络 33
1.8.3 循环神经网络 33
1.8.4 编码器-解码器网络 34
1.8.5 递归神经网络 35
1.9 多层感知器 35
1.10 随机梯度下降 37
1.11 反向传播 40
1.12 深度学习库 42
1.12.1 Theano 42
1.12.2 Theano安装 43
1.12.3 Theano示例 44
1.12.4 TensorFlow 45
1.12.5 数据流图 46
1.12.6 TensorFlow安装 47
1.12.7 TensorFlow示例 47
1.12.8 Keras 49
1.13 下一步 52
第2章 词向量表示 53
2.1 词嵌入简介 53
2.2 word2vec 56
2.2.1 skip-gram模型 58
2.2.2 模型成分：架构 58
2.2.3 模型成分：隐藏层 58
2.2.4 模型成分：输出层 60
2.2.5 CBOW模型 61
2.3 频繁词二次采样 61
2.4 word2vec代码 64
2.5 skip-gram代码 67
2.6 CBOW代码 75
2.7 下一步 83
第3章 展开循环神经网络 85
3.1 循环神经网络 86
3.1.1 什么是循环 86
3.1.2 前馈神经网络和循环神经网络之间的差异 87
3.1.3 RNN基础 88
3.1.4 自然语言处理和RNN 91
3.1.5 RNN的机制 93
3.1.6 训练RNN 96
3.1.7 RNN中隐藏状态的元意义 98
3.1.8 调整RNN 99
3.1.9 LSTM网络 99
3.1.10 序列到序列模型 105
3.1.11 高级seq2seq模型 109
3.1.12 序列到序列用例 113
3.2 下一步 122
第4章 开发聊天机器人 123
4.1 聊天机器人简介 123
4.1.1 聊天机器人的起源 124
4.1.2 聊天机器人如何工作 125
4.1.3 为什么聊天机器人拥有如此大的商机 125
4.1.4 开发聊天机器人听起来令人生畏 126
4.2 对话型机器人 127
4.3 聊天机器人：自动文本生成 141
4.4 下一步 170
第5章 实现研究论文：情感分类 171
5.1 基于自注意力机制的句子嵌入 172
5.1.1 提出的方法 173
5.1.2 可视化 178
5.1.3 研究发现 181
5.2 实现情感分类 181
5.3 情感分类代码 182
5.4 模型结果 191
5.5 可提升空间 196
5.6 下一步 196
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>面向自然语言处理的深度学习
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>数据科学实战之网络爬取
译者序
作者简介
技术审校者简介
前言
第一部分 网络爬取基础
第1章 简介2
1.1 什么是网络爬取2
1.1.1 网络爬取为什么用于数据科学2
1.1.2 谁在使用网络爬取4
1.2 准备工作6
1.2.1 设置6
1.2.2 Python 快速入门7
第2章 网络传输协议HTTP18
2.1 网络的魔力18
2.2 超文本传输协议20
2.3 Python中的HTTP—Requests库25
2.4 带参数的URL查询字符串28
第3章 HTML和CSS36
3.1 超文本标记语言HTML36
3.2 将浏览器用作开发工具38
3.3 层叠样式表CSS42
3.4 Beautiful Soup库45
3.5 有关Beautiful Soup的更多内容53
第二部分 高级网络爬取
第4章 深入挖掘HTTP60
4.1 使用表单和POST请求60
4.2 其他HTTP请求方法71
4.3 关于头的更多信息73
4.4 使用Cookie79
4.5 requests库的session对象87
4.6 二进制、JSON和其他形式的内容89
第5章 处理JavaScript93
5.1 什么是JavaScript93
5.2 爬取JavaScript94
5.3 使用Selenium爬取网页98
5.4 Selenium的更多信息109
第6章 从网络爬取到网络爬虫115
6.1 什么是网络爬虫115
6.2 使用Python实现网络爬虫117
6.3 数据库存储120
第三部分 相关管理问题及最佳实践
第7章 网络爬取涉及的管理和法律问题130
7.1 数据科学过程130
7.2 网络爬取适合用于哪里133
7.3 法律问题134
第8章 结语139
8.1 其他工具139
8.1.1 其他Python库139
8.1.2 Scrapy库140
8.1.3 缓存140
8.1.4 代理服务器141
8.1.5 基于其他编程语言的爬取141
8.1.6 命令行工具142
8.1.7 图形化的爬取工具142
8.2 最佳实践和技巧143
第9章 示例147
9.1 爬取Hacker News网页148
9.2 使用Hacker News API150
9.3 爬取引用信息 150
9.4 爬取书籍信息154
9.5 爬取GitHub上项目被收藏的次数156
9.6 爬取抵押贷款利率160
9.7 爬取和可视化IMDB评级165
9.8 爬取IATA航空公司信息166
9.9 爬取和分析网络论坛的互动171
9.10 收集和聚类时尚数据集177
9.11 Amazon评论的情感分析180
9.12 爬取和分析维基百科关联图188
9.13 爬取和可视化董事会成员图194
9.14 使用深度学习破解验证码图片197
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>数据科学实战之网络爬取
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>はじめてのディープラーニング
第01章 ディープラーニングとは
第02章 Pythonの概要
第03章 ディープラーニングに必要な数学
第04章 ニューラルネットワーク
第05章 バックプロパゲーション
第06章 ディープラーニングの実装
第07章 畳み込みニューラルネットワーク(CNN)
第08章 ディープラーニングの関連技術
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>はじめてのディープラーニング
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>网络数据采集技术：Java网络爬虫实战
目录
第1 章 网络爬虫概述与原理 ............................................................................ 1
1.1 网络爬虫简介 ............................................................................................. 1
1.2 网络爬虫分类 ............................................................................................. 2
1.3 网络爬虫流程 ............................................................................................. 4
1.4 网络爬虫的采集策略 ................................................................................. 5
1.5 学习网络爬虫的建议 ................................................................................. 5
1.6 本章小结 ..................................................................................................... 6
第2 章 网络爬虫涉及的Java 基础知识 ........................................................... 7
2.1 开发环境的搭建 ......................................................................................... 7
2.1.1 JDK 的安装及环境变量配置 .......................................................... 7
2.1.2 Eclipse 的下载 .................................................................................. 9
2.2 基本数据类型 ........................................................................................... 10
2.3 数组 ........................................................................................................... 11
2.4 条件判断与循环 ....................................................................................... 12
2.5 集合 ........................................................................................................... 15
2.5.1 List 和Set 集合 .............................................................................. 15
2.5.2 Map 集合 ........................................................................................ 16
2.5.3 Queue 集合 ..................................................................................... 17
2.6 对象与类 ................................................................................................... 19
2.7 String 类 ..................................................................................................... 21
2.8 日期和时间处理 ....................................................................................... 23
2.9 正则表达式 ............................................................................................... 26
2.10 Maven 工程的创建 ................................................................................. 29
2.11 log4j 的使用 ............................................................................................ 33
2.12 本章小结 ................................................................................................. 40
第3 章 HTTP 协议基础与网络抓包 ............................................................... 41
3.1 HTTP 协议简介 ........................................................................................ 41
3.2 URL ........................................................................................................... 42
3.3 报文 ........................................................................................................... 44
3.4 HTTP 请求方法 ........................................................................................ 46
3.5 HTTP 状态码 ............................................................................................ 46
3.5.1 状态码2XX .................................................................................... 47
3.5.2 状态码3XX .................................................................................... 47
3.5.3 状态码4XX .................................................................................... 48
3.5.4 状态码5XX .................................................................................... 48
3.6 HTTP 信息头 ............................................................................................ 48
3.6.1 通用头 ............................................................................................ 49
3.6.2 请求头 ............................................................................................ 52
3.6.3 响应头 ............................................................................................ 55
3.6.4 实体头 ............................................................................................ 56
3.7 HTTP 响应正文 ........................................................................................ 57
3.7.1 HTML ............................................................................................. 58
3.7.2 XML ............................................................................................... 60
3.7.3 JSON ............................................................................................... 61
3.8 网络抓包 ................................................................................................... 64
3.8.1 简介 ................................................................................................ 64
3.8.2 使用情境 ........................................................................................ 65
3.8.3 浏览器实现网络抓包 ..................................................................... 65
3.8.4 其他网络抓包工具推荐 ................................................................. 70
3.9 本章小结 ................................................................................................... 70
第4 章 网页内容获取 .................................................................................... 71
4.1 Jsoup 的使用 ............................................................................................. 71
4.1.1 jar 包的下载 ................................................................................... 71
4.1.2 请求URL ....................................................................................... 72
4.1.3 设置头信息 .................................................................................... 75
4.1.4 提交请求参数 ................................................................................ 78
4.1.5 超时设置 ........................................................................................ 80
4.1.6 代理服务器的使用 ......................................................................... 81
4.1.7 响应转输出流（图片、PDF 等的下载）..................................... 83
4.1.8 HTTPS 请求认证 ........................................................................... 85
4.1.9 大文件内容获取问题 ..................................................................... 89
4.2 HttpClient 的使用 ...................................................................................... 91
4.2.1 jar 包的下载 ................................................................................... 91
4.2.2 请求URL ....................................................................................... 92
4.2.3 EntityUtils 类 .................................................................................. 97
4.2.4 设置头信息 .................................................................................... 98
4.2.5 POST 提交表单 ............................................................................ 100
4.2.6 超时设置 ...................................................................................... 103
4.2.7 代理服务器的使用 ....................................................................... 105
4.2.8 文件下载 ...................................................................................... 106
4.2.9 HTTPS 请求认证 ......................................................................... 108
4.2.10 请求重试 .................................................................................... 111
4.2.11 多线程执行请求 ......................................................................... 114
4.3 URLConnection 与HttpURLConnection ................................................ 117
4.3.1 实例化 .......................................................................................... 117
4.3.2 获取网页内容 .............................................................................. 118
4.3.3 GET 请求 ...................................................................................... 118
4.3.4 模拟提交表单（POST 请求） .................................................... 119
4.3.5 设置头信息 .................................................................................. 120
4.3.6 连接超时设置 .............................................................................. 121
4.3.7 代理服务器的使用 ....................................................................... 122
4.3.8 HTTPS 请求认证 ......................................................................... 122
4.4 本章小结 ................................................................................................. 124
第5 章 网页内容解析 .................................................................................. 125
5.1 HTML 解析 ............................................................................................. 125
5.1.1 CSS 选择器 .................................................................................. 125
5.1.2 Xpath 语法 .................................................................................... 127
5.1.3 Jsoup 解析HTML ........................................................................ 128
5.1.4 HtmlCleaner 解析HTML ............................................................. 135
5.1.5 HTMLParser 解析HTML ............................................................ 139
5.2 XML 解析 ............................................................................................... 144
5.3 JSON 解析 ............................................................................................... 145
5.3.1 JSON 校正 .................................................................................... 145
5.3.2 org.json 解析JSON ...................................................................... 147
5.3.3 Gson 解析JSON........................................................................... 152
5.3.4 Fastjson 解析JSON ...................................................................... 157
5.3.5 网络爬虫实战演练 ....................................................................... 159
5.4 本章小结 ................................................................................................. 165
第6 章 网络爬虫数据存储 ........................................................................... 166
6.1 输入流与输出流 ..................................................................................... 166
6.1.1 简介 .............................................................................................. 166
6.1.2 File 类 ........................................................................................... 166
6.1.3 文件字节流 .................................................................................. 169
6.1.4 文件字符流 .................................................................................. 172
6.1.5 缓冲流 .......................................................................................... 176
6.1.6 网络爬虫下载图片实战 ............................................................... 180
6.1.7 网络爬虫文本存储实战 ............................................................... 184
6.2 Excel 存储 ............................................................................................... 188
6.2.1 Jxl 的使用 ..................................................................................... 188
6.2.2 POI 的使用 ................................................................................... 191
6.2.3 爬虫案例 ...................................................................................... 198
6.3 MySQL 数据存储 ................................................................................... 202
6.3.1 数据库的基本概念 ....................................................................... 203
6.3.2 SQL 语句基础 .............................................................................. 203
6.3.3 Java 操作数据库 .......................................................................... 207
6.3.4 爬虫案例 ...................................................................................... 217
6.4 本章小结 ................................................................................................. 219
第7 章 网络爬虫实战项目 ........................................................................... 220
7.1 新闻数据采集 ......................................................................................... 220
7.1.1 采集的网页 .................................................................................. 220
7.1.2 框架介绍 ...................................................................................... 222
7.1.3 程序编写 ...................................................................................... 223
7.2 企业信息采集 ......................................................................................... 235
7.2.1 采集的网页 .................................................................................. 235
7.2.2 框架介绍 ...................................................................................... 238
7.2.3 第一层信息采集........................................................................... 239
7.2.4 第二层信息采集........................................................................... 248
7.3 股票信息采集 ......................................................................................... 256
7.3.1 采集的网页 .................................................................................. 256
7.3.2 框架介绍 ...................................................................................... 257
7.3.3 程序设计 ...................................................................................... 258
7.3.4 Quartz 实现定时调度任务 ........................................................... 267
7.4 本章小结 ................................................................................................. 271
第8 章 Selenium 的使用 ............................................................................. 272
8.1 Selenium 简介 ......................................................................................... 272
8.2 Java Selenium 环境搭建 ......................................................................... 272
8.3 浏览器的操控 ......................................................................................... 274
8.4 元素定位 ................................................................................................. 276
8.4.1 id 定位 .......................................................................................... 276
8.4.2 name 定位 ..................................................................................... 277
8.4.3 class 定位 ...................................................................................... 278
8.4.4 tag name 定位 ............................................................................... 278
8.4.5 link text 定位 ................................................................................ 278
8.4.6 Xpath 定位 .................................................................................... 279
8.4.7 CSS 选择器定位 .......................................................................... 279
8.5 模拟登录 ................................................................................................. 280
8.6 动态加载JavaScript 数据（操作滚动条） ........................................... 283
8.7 隐藏浏览器 ............................................................................................. 285
8.8 截取验证码 ............................................................................................. 287
8.9 本章小结 ................................................................................................. 291
第9 章 网络爬虫开源框架 ........................................................................... 292
9.1 Crawler4j 的使用 .................................................................................... 292
9.1.1 Crawler4j 简介.............................................................................. 292
9.1.2 jar 包的下载 ................................................................................. 292
9.1.3 入门案例 ...................................................................................... 293
9.1.4 相关配置 ...................................................................................... 297
9.1.5 图片的采集 .................................................................................. 300
9.1.6 数据采集入库 .............................................................................. 304
9.2 WebCollector 的使用 .............................................................................. 312
9.2.1 WebCollector 简介 ....................................................................... 312
9.2.2 jar 包的下载 ................................................................................. 313
9.2.3 入门案例 ...................................................................................... 313
9.2.4 相关配置 ...................................................................................... 318
9.2.5 HTTP 请求扩展............................................................................ 319
9.2.6 翻页数据采集 .............................................................................. 327
9.2.7 图片的采集 .................................................................................. 331
9.2.8 数据采集入库 .............................................................................. 334
9.3 WebMagic 的使用 ................................................................................... 347
9.3.1 WebMagic 简介 ............................................................................ 347
9.3.2 jar 包的下载 ................................................................................. 347
9.3.3 入门案例（翻页数据采集） ....................................................... 347
9.3.4 相关配置 ...................................................................................... 351
9.3.5 数据存储方式 .............................................................................. 352
9.3.6 数据采集入库 .............................................................................. 355
9.3.7 图片的采集 .................................................................................. 365
9.4 本章小结 ................................................................................................. 368
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>网络数据采集技术：Java网络爬虫实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据可视化：基于Bokeh的可视化绘图
前　言
第1章　准备工作 1
1.1　安装Anaconda
1.2　运行Jupyter Notebook
1.3　基本概念
第2章　绘制基本图形 7
2.1　绘图方法
2.2　散点图
2.3　气泡图
2.4　折线图
2.5　时间序列
2.6　柱状图
2.7　直方图
2.8　饼（环）图
2.9　旭日图
2.10　雷达图
2.11　箱形图
2.12　面积图
2.13　蜡烛（K线）图
2.14　色块图
2.15　仪表盘
2.16　火柴图
2.17　关系图
2.18　脊线图
2.19　向量图
2.20　其他
第3章　数据类型与转换 136
3.1　Python List
3.2　Python Dict
3.3　NumPy Arrays
3.4　Pandas DataFrame
3.5　Bokeh ColumnDataSource
3.6　数据更新、筛选
3.7　自动转换数据格式
第4章　视图属性 147
4.1　主题
4.2　配色
4.3　视图属性
4.4　绘图工具
4.5　图形显示布局
4.6　图形输出
4.7　使用工具条进行数据交互
4.8　使用控件进行数据交互
第5章　Web动态可视化 224
5.1　输出为HTML文件
5.2　输出为HTML源码
5.3　输出为HTML组件
5.4　通过Web模板显示
5.5　Bokeh Flask
5.6　Bokeh Sever
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据可视化：基于Bokeh的可视化绘图
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Spark机器学习
第1章　Spark的环境搭建与运行　　1
1.1　Spark的本地安装与配置　　2
1.2　Spark集群　　3
1.3　Spark编程模型　　4
1.3.1　SparkContext类与SparkConf 类　　4
1.3.2　Spark shell　　5
1.3.3　弹性分布式数据集　　6
1.3.4　广播变量和累加器　　10
1.4　Spark Scala编程入门　　11
1.5　Spark Java编程入门　　14
1.6　Spark Python编程入门　　17
1.7　在Amazon EC2上运行Spark　　18
1.8　小结　　23
第2章　设计机器学习系统　　24
2.1　MovieStream介绍　　24
2.2　机器学习系统商业用例　　25
2.2.1　个性化　　26
2.2.2　目标营销和客户细分　　26
2.2.3　预测建模与分析　　26
2.3　机器学习模型的种类　　27
2.4　数据驱动的机器学习系统的组成　　27
2.4.1　数据获取与存储　　28
2.4.2　数据清理与转换　　28
2.4.3　模型训练与测试回路　　29
2.4.4　模型部署与整合　　30
2.4.5　模型监控与反馈　　30
2.4.6　批处理或实时方案的选择　　31
2.5　机器学习系统架构　　31
2.6　小结　　33
第3章　Spark上数据的获取、处理与准备　　34
3.1　获取公开数据集　　35
3.2　探索与可视化数据　　37
3.2.1　探索用户数据　　38
3.2.2　探索电影数据　　41
3.2.3　探索评级数据　　43
3.3　处理与转换数据　　46
3.4　从数据中提取有用特征　　48
3.4.1　数值特征　　48
3.4.2　类别特征　　49
3.4.3　派生特征　　50
3.4.4　文本特征　　51
3.4.5　正则化特征　　55
3.4.6　用软件包提取特征　　56
3.5　小结　　57
第4章　构建基于Spark的推荐引擎　　58
4.1　推荐模型的分类　　59
4.1.1　基于内容的过滤　　59
4.1.2　协同过滤　　59
4.1.3　矩阵分解　　60
4.2　提取有效特征　　64
4.3　训练推荐模型　　67
4.3.1　使用MovieLens 100k数据集训练模型　　67
4.3.2　使用隐式反馈数据训练模型　　68
4.4　使用推荐模型　　69
4.4.1　用户推荐　　69
4.4.2　物品推荐　　72
4.5　推荐模型效果的评估　　75
4.5.1　均方差　　75
4.5.2　K值平均准确率　　77
4.5.3　使用MLlib内置的评估函数　　81
4.6　小结　　82
第5章　Spark构建分类模型　　83
5.1　分类模型的种类　　85
5.1.1　线性模型　　85
5.1.2　朴素贝叶斯模型　　89
5.1.3　决策树　　90
5.2　从数据中抽取合适的特征　　91
5.3　训练分类模型　　93
5.4　使用分类模型　　95
5.5　评估分类模型的性能　　96
5.5.1　预测的正确率和错误率　　96
5.5.2　准确率和召回率　　97
5.5.3　ROC曲线和AUC　　99
5.6　改进模型性能以及参数调优　　101
5.6.1　特征标准化　　101
5.6.2　其他特征　　104
5.6.3　使用正确的数据格式　　106
5.6.4　模型参数调优　　107
5.7　小结　　115
第6章　Spark构建回归模型　　116
6.1　回归模型的种类　　116
6.1.1　最小二乘回归　　117
6.1.2　决策树回归　　117
6.2　从数据中抽取合适的特征　　118
6.3　回归模型的训练和应用　　123
6.4　评估回归模型的性能　　125
6.4.1　均方误差和均方根误差　　125
6.4.2　平均绝对误差　　126
6.4.3　均方根对数误差　　126
6.4.4　R-平方系数　　126
6.4.5　计算不同度量下的性能　　126
6.5　改进模型性能和参数调优　　127
6.5.1　变换目标变量　　128
6.5.2　模型参数调优　　132
6.6　小结　　140
第7章　Spark构建聚类模型　　141
7.1　聚类模型的类型　　142
7.1.1　K-均值聚类　　142
7.1.2　混合模型　　146
7.1.3　层次聚类　　146
7.2　从数据中提取正确的特征　　146
7.3　训练聚类模型　　150
7.4　使用聚类模型进行预测　　151
7.5　评估聚类模型的性能　　155
7.5.1　内部评价指标　　155
7.5.2　外部评价指标　　156
7.5.3　在MovieLens数据集计算性能　　156
7.6　聚类模型参数调优　　156
7.7　小结　　158
第8章　Spark应用于数据降维　　159
8.1　降维方法的种类　　160
8.1.1　主成分分析　　160
8.1.2　奇异值分解　　160
8.1.3　和矩阵分解的关系　　161
8.1.4　聚类作为降维的方法　　161
8.2　从数据中抽取合适的特征　　162
8.3　训练降维模型　　169
8.4　使用降维模型　　172
8.4.1　在LFW数据集上使用PCA投影数据　　172
8.4.2　PCA和SVD模型的关系　　173
8.5　评价降维模型　　174
8.6　小结　　176
第9章　Spark高级文本处理技术　　177
9.1　处理文本数据有什么特别之处　　177
9.2　从数据中抽取合适的特征　　177
9.2.1　短语加权表示　　178
9.2.2　特征哈希　　179
9.2.3　从20新闻组数据集中提取TF-IDF特征　　180
9.3　使用TF-IDF模型　　192
9.3.1　20 Newsgroups数据集的文本相似度和TF-IDF特征　　192
9.3.2　基于20 Newsgroups数据集使用TF-IDF训练文本分类器　　194
9.4　评估文本处理技术的作用　　196
9.5　Word2Vec 模型　　197
9.6　小结　　200
第10章　Spark Streaming在实时机器学习上的应用　　201
10.1　在线学习　　201
10.2　流处理　　202
10.2.1　Spark Streaming介绍　　202
10.2.2　使用Spark Streaming缓存和容错　　205
10.3　创建Spark Streaming应用　　206
10.3.1　消息生成端　　207
10.3.2　创建简单的流处理程序　　209
10.3.3　流式分析　　211
10.3.4　有状态的流计算　　213
10.4　使用Spark Streaming进行在线学习　　215
10.4.1　流回归　　215
10.4.2　一个简单的流回归程序　　216
10.4.3　流K-均值　　220
10.5　在线模型评估　　221
10.6　小结　　224
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Spark机器学习
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>集体智慧编程
前言.................................................................................................................... viii
第1章 集体智慧导言......................................................................................... 1
什么是集体智慧......................................................................................................................2
什么是机器学习......................................................................................................................3
机器学习的局限......................................................................................................................4
真实生活中的例子..................................................................................................................5
学习型算法的其他用途..........................................................................................................5
第2章 提供推荐................................................................................................ 7
协作型过滤..............................................................................................................................7
搜集偏好.................................................................................................................................8
寻找相近的用户......................................................................................................................9
推荐物品...............................................................................................................................15
匹配商品...............................................................................................................................17
构建一个基于del.icio.us的链接推荐系统..........................................................................19
基于物品的过滤....................................................................................................................22
使用MovieLens数据集........................................................................................................25
基于用户进行过滤还是基于物品进行过滤........................................................................27
练习.......................................................................................................................................28
第3章 发现群组.............................................................................................. 29
监督学习和无监督学习........................................................................................................29
单词向量...............................................................................................................................30
分级聚类...............................................................................................................................33
绘制树状图............................................................................................................................38
列聚类...................................................................................................................................40
K-均值聚类............................................................................................................................42
针对偏好的聚类....................................................................................................................44
以二维形式展现数据............................................................................................................49
有关聚类的其他事宜............................................................................................................53
练习.......................................................................................................................................53
第4章 搜索与排名.......................................................................................... 54
搜索引擎的组成....................................................................................................................54
一个简单的爬虫程序............................................................................................................56
建立索引...............................................................................................................................58
查询.......................................................................................................................................63
基于内容的排名....................................................................................................................64
利用外部回指链接................................................................................................................69
从点击行为中学习................................................................................................................74
练习.......................................................................................................................................84
第5章 优化..................................................................................................... 86
组团旅游...............................................................................................................................87
描述题解...............................................................................................................................88
成本函数...............................................................................................................................89
随机搜索...............................................................................................................................91
爬山法...................................................................................................................................92
模拟退火算法........................................................................................................................95
遗传算法...............................................................................................................................97
真实的航班搜索..................................................................................................................101
涉及偏好的优化..................................................................................................................106
网络可视化..........................................................................................................................110
其他可能的应用场合..........................................................................................................115
练习.....................................................................................................................................116
第6章 文档过滤.............................................................................................117
过滤垃圾信息......................................................................................................................117
文档和单词..........................................................................................................................118
对分类器进行训练..............................................................................................................119
计算概率..............................................................................................................................121
朴素分类器..........................................................................................................................123
费舍尔方法..........................................................................................................................127
将经过训练的分类器持久化..............................................................................................132
过滤博客订阅源..................................................................................................................134
对特征检测的改进..............................................................................................................136
使用Akismet........................................................................................................................138
替代方法..............................................................................................................................139
练习.....................................................................................................................................140
第7章 决策树建模........................................................................................ 142
预测注册用户......................................................................................................................142
引入决策树..........................................................................................................................144
对树进行训练......................................................................................................................145
选择最合适的拆分方案......................................................................................................147
以递归方式构造树..............................................................................................................149
决策树的显示......................................................................................................................151
对新的观测数据进行分类..................................................................................................153
决策树的剪枝......................................................................................................................154
处理缺失数据......................................................................................................................156
处理数值型结果..................................................................................................................158
对住房价格进行建模..........................................................................................................158
对“热度”评价进行建模..................................................................................................161
什么时候使用决策树..........................................................................................................164
练习.....................................................................................................................................165
第8章 构建价格模型..................................................................................... 167
构造一个样本数据集..........................................................................................................167
k-最近邻算法.......................................................................................................................169
为近邻分配权重..................................................................................................................172
交叉验证..............................................................................................................................176
不同类型的变量..................................................................................................................178
对缩放结果进行优化..........................................................................................................181
不对称分布..........................................................................................................................183
使用真实数据——eBay API...............................................................................................189
何时使用k-最近邻算法......................................................................................................195
练习.....................................................................................................................................196
第9章 高阶分类：核方法与SVM ................................................................. 197
婚介数据集..........................................................................................................................197
数据中的难点......................................................................................................................199
基本的线性分类..................................................................................................................202
分类特征..............................................................................................................................205
对数据进行缩放处理..........................................................................................................209
理解核方法..........................................................................................................................211
支持向量机..........................................................................................................................215
使用LIBSVM......................................................................................................................217
基于Facebook的匹配........................................................................................................219
练习.....................................................................................................................................225
第10章 寻找独立特征................................................................................... 226
搜集一组新闻......................................................................................................................227
先前的方法..........................................................................................................................231
非负矩阵因式分解..............................................................................................................232
结果呈现..............................................................................................................................240
利用股票市场的数据..........................................................................................................243
练习.....................................................................................................................................248
第11章 智能进化.......................................................................................... 250
什么是遗传编程..................................................................................................................250
将程序以树形方式表示......................................................................................................253
构造初始种群......................................................................................................................257
测试题解..............................................................................................................................259
对程序进行变异..................................................................................................................260
交叉.....................................................................................................................................263
构筑环境..............................................................................................................................265
一个简单的游戏..................................................................................................................268
更多可能性..........................................................................................................................273
练习.....................................................................................................................................276
第12章 算法总结.......................................................................................... 277
贝叶斯分类器......................................................................................................................277
决策树分类器......................................................................................................................281
神经网络..............................................................................................................................285
支持向量机..........................................................................................................................289
k-最近邻...............................................................................................................................293
聚类.....................................................................................................................................296
多维缩放..............................................................................................................................300
非负矩阵因式分解..............................................................................................................302
优化.....................................................................................................................................304
附录A：第三方函数库..................................................................................... 309
附录B：数学公式............................................................................................. 316
索引.................................................................................................................. 323
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>集体智慧编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>零起点Python机器学习快速入门
第 1 章从阿尔法狗开始说起  1
1.1 阿尔法狗的前世今生 1
1.2 机器学习是什么  2
1.3 机器学习大史记  3
1.4 机器学习经典案例  11
第2 章开发环境  13
2.1 数据分析首选Python  13
2.2 用户运行平台  18
2.3 程序目录结构  19
2.4 Spyder 编辑器界面设置  20
2.5 Python 命令行模式  26
2.6 Notebook 模式 27
2.7 模块库控制面板  29
2.8 使用pip 更新模块库 33
第3 章 Python 入门案例  39
3.1 案例3-1：第一次编程“hello,ziwang” 39
3.2 案例3-2：增强版“hello,zwiang” 42
3.3 案例3-3：列举系统模块库清单 44
3.4	案例 3-4：常用绘图风格 45
3.5	案例 3-5：Pandas常用绘图风格 47
3.6	案例 3-6：常用颜色表 cors  49
3.7	案例源码  50
第4 章 Python 基本语法 58
4.1 数据类型 58
案例4-1：基本运算 59
4.2 字符串 61
案例4-2：字符串入门. 61
案例4-3：字符串常用方法 63
4.3 List 列表 64
案例4-4：列表操作 65
4.4 Tuple 元组 66
案例4-5：元组操作 67
4.5 Dictionary 字典. 68
案例4-6：字典操作 68
4.6 数据类型转换 70
案例4-7：控制语句 71
案例4-8：函数定义 73
4.7 案例源码 75
第5 章 Python 人工智能入门与实践 85
5.1 从忘却开始. 85
5.2 Iris 经典爱丽丝. 89
案例5-1：Iris 爱丽丝 90
案例5-2：爱丽丝进化与文本矢量化. 92
5.3 AI 操作流程 95
5.4 数据切割函数 98
案例5-3：Iris 爱丽丝分解 99
案例5-4：线性回归算法. 103
5.5 案例源码 109
第6 章机器学习经典算法案例（上）  116
6.1 线性回归 116
6.2 逻辑回归算法. 124
案例6-1：逻辑回归算法. 125
6.3 朴素贝叶斯算法 127
案例6-2：贝叶斯算法 129
6.4 KNN 近邻算法 130
案例6-3：KNN 近邻算法 133
6.5 随机森林算法. 135
案例6-4：随机森林算法. 139
6.6 案例源码 140
第7 章机器学习经典算法案例（下）  149
7.1 决策树算法 149
案例7-1：决策树算法 151
7.2 GBDT 迭代决策树算法 153
案例7-2：GBDT 迭代决策树算法 154
7.3 SVM 向量机 156
案例7-3：SVM 向量机算法. 157
7.4 SVM-cross 向量机交叉算法 159
案例7-4：SVM-cross 向量机交叉算法 160
7.5 神经网络算法. 161
案例7-5：MLP 神经网络算法. 165
案例7-6：MLP_reg 神经网络回归算法. 168
7.6 案例源码 170
第8 章机器学习组合算法  183
8.1 CCPP 数据集 183
案例8-1：CCPP 数据集 184
案例8-2：CCPP 数据切割. 186
案例8-3：读取CCPP 数据集 189
8.2 机器学习统一接口函数 192
案例8-4：机器学习统一接口 193
案例8-5：批量调用机器学习算法 201
案例8-6：一体化调用 205
8.3 模型预制与保存 208
案例8-7：储存算法模型. 210
案例8-8：批量储存算法模型 213
案例8-9：批量加载算法模型 215
案例8-10：机器学习组合算法 219
8.4 案例源码 224
附录A Sklearn 常用模块和函数. 242
附录B 极宽量化系统模块图 266
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>零起点Python机器学习快速入门
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>python生物信息数据管理
第一部分入门
第1章Python shell
1.1本章知识点
1.2案例： 计算ATP水解的ΔG
1.2.1问题描述
1.2.2Python会话示例
1.3命令的含义
1.3.1如何在电脑上运行这个例子
1.3.2变量
1.3.3导入模块
1.3.4计算
1.4示例
1.5自测题
第2章第一个Python程序
2.1本章知识点
2.2案例： 如何计算胰岛素序列中的氨基酸频率
2.2.1问题描述
2.2.2Python会话示例
2.3命令的含义
2.3.1如何执行程序
2.3.2程序如何工作
2.3.3注释
2.3.4字符串变量
2.3.5用for进行循环
2.3.6缩进
2.3.7打印至屏幕
2.4示例
2.5自测题
第一部分小结
第二部分数 据 管 理
第3章分析数据列
3.1本章知识点
3.2案例： 树突长度
3.2.1问题描述
3.2.2Python会话示例
3.3命令的含义
3.3.1读取文本文件
3.3.2写入文本文件
3.3.3将数据收入列表
3.3.4将文本转换为数字
3.3.5将数字转换为文本
3.3.6将数据列写入文本文件
3.3.7计算数值列表
3.4示例
3.5自测题
第4章解析数据记录
4.1本章知识点
4.2案例： 整合质谱数据， 转化到代谢通路中
4.2.1问题描述
4.2.2Python会话示例
4.3命令的含义
4.3.1if/elif/else语句
4.3.2列表数据结构
4.3.3简洁列表创建方式
4.4示例
4.5自测题
第5章搜索数据
5.1本章知识点
5.2案例： 将RNA序列翻译为相应的蛋白质序列
5.2.1问题描述
5.2.2Python会话示例
5.3命令的含义
5.3.1字典
5.3.2while语句
5.3.3用while循环搜索
5.3.4字典搜索
5.3.5列表搜索
5.4示例
5.5自测题
第6章过滤数据
6.1本章知识点
6.2案例： 使用RNAseq输出数据
6.2.1问题描述
6.2.2Python会话示例
6.3命令的含义
6.3.1用简单的for...if组合过滤
6.3.2合并两个数据集
6.3.3两组数据之间的差异
6.3.4从列表、 字典和文件中删除元素
6.3.5保持或不保持顺序地删除重复
6.3.6集合
6.4示例
6.5自测题
第7章管理表数据
7.1本章知识点
7.2案例： 确定蛋白浓度
7.2.1问题描述
7.2.2Python会话示例
7.3命令的含义
7.3.1二维表的表示方法
7.3.2访问行和单元格
7.3.3插入和删除行
7.3.4访问列
7.3.5插入和删除列
7.4示例
7.5自测题
第8章数据排序
8.1本章知识点
8.2案例： 数据表排序
8.2.1问题描述
8.2.2Python会话示例
8.3命令的含义
8.3.1Python列表有利于排序
8.3.2内置函数sorted()
8.3.3用itemgetter排序
8.3.4按升序/降序排序
8.3.5数据结构（元组、 字典）排序
8.3.6按长度对字符串排序
8.4示例
8.5自测题
第9章模式匹配和文本挖掘
9.1本章知识点
9.2案例： 在蛋白质序列中搜索磷酸化模体
9.2.1问题描述
9.2.2Python会话示例
9.3命令的含义
9.3.1编译正则表达式
9.3.2模式匹配
9.3.3分组
9.3.4修改字符串
9.4示例
9.5自测题
第二部分小结
第三部分模块化编程
第10章将程序划分为函数
10.1本章知识点
10.2案例： 处理三维坐标文件
10.2.1问题描述
10.2.2Python会话示例
10.3命令的含义
10.3.1如何定义和调用函数
10.3.2函数参数
10.3.3struct模块
10.4示例
10.5自测题
第11章用类化繁为简
11.1本章知识点
11.2案例： 孟德尔遗传
11.2.1问题描述
11.2.2Python会话示例
11.3命令的含义
11.3.1用类创建实例
11.3.2类以属性的形式包含数据
11.3.3类包含的方法
11.3.4__repr__方法可打印类和实例
11.3.5使用类有助于把握复杂程序
11.4示例
11.5自测题
第12章调试
12.1本章知识点
12.2案例： 程序无法运行时应该怎样处理
12.2.1问题描述
12.2.2Python会话示例
12.3命令的含义
12.3.1语法错误
12.3.2运行时错误
12.3.3处理异常情况
12.3.4未报告出错信息
12.4示例
12.5自测题
第13章使用外部模块： R语言的Python调用接口
13.1本章知识点
13.2案例： 从文件中读取数据， 并通过Python使用R计算其平均值
13.2.1问题描述
13.2.2Python会话示例
13.3命令的含义
13.3.1rpy2和r实例的robjects对象
13.3.2从Python中读取R对象
13.3.3创建向量
13.3.4创建矩阵
13.3.5将Python对象转换成R对象
13.3.6如何处理包含点的函数参数
13.4示例
13.5自测题
第14章构建程序流程
14.1本章知识点
14.2案例： 构建NGS流程
14.2.1问题描述
14.2.2Python会话示例
14.3命令的含义
14.3.1如何使用TopHat和Cufflinks
14.3.2什么是程序流程
14.3.3在程序中交换文件名和数据
14.3.4编写程序包装器
14.3.5关闭文件时的延迟
14.3.6使用命令行参数
14.3.7测试模块： if__name__==＇__main__＇
14.3.8处理文件和路径
14.4示例
14.5自测题
第15章编写良好的程序
15.1本章知识点
15.2问题描述： 不确定性
15.2.1程序编写存在不确定性
15.2.2程序项目实例
15.3软件工程
15.3.1将编程项目分成小任务
15.3.2将程序分为函数和类
15.3.3编写格式良好的代码
15.3.4使用存储库控制程序版本
15.3.5如何将自己的程序分发给其他人
15.3.6软件开发的周期
15.4示例
15.5自测题
第三部分小结
第四部分数据可视化
第16章创建科学图表
16.1本章知识点
16.2案例： 核糖体的核苷酸频率
16.2.1问题描述
16.2.2Python会话示例
16.3命令的含义
16.3.1matplotlib库
16.3.2绘制竖的柱状图
16.3.3为x轴和y轴添加标注
16.3.4添加刻度
16.3.5添加一个图例框
16.3.6添加图的标题
16.3.7设置图表的边界
16.3.8以低分辨率和高分辨率导出一个图像文件
16.4示例
16.5自测题
第17章使用PyMOL创建分子图像
17.1本章知识点
17.2示例： 锌指
17.2.1什么是PyMOL
17.2.2PyMOL会话示例
17.3用七个步骤来创建高分辨率的图像
17.3.1创建一个PyMOL脚本文件
17.3.2加载和保存分子
17.3.3选取分子的局部
17.3.4为每个选取选择展现形式
17.3.5设置颜色
17.3.6设置摄影位置
17.3.7导出高分辨率图像
17.4示例
17.5自测题
第18章处理图像
18.1本章知识点
18.2案例： 画一个质粒
18.2.1问题描述
18.2.2Python会话示例
18.3命令的含义
18.3.1创建一个图像
18.3.2读和写图像
18.3.3坐标
18.3.4绘制几何形状
18.3.5旋转图像
18.3.6添加文本标记
18.3.7颜色
18.3.8辅助变量
18.4示例
18.5自测题
第四部分小结
第五部分Biopython
第19章使用序列数据
19.1本章知识点
19.2案例： 如何将一条DNA编码序列翻译成对应的蛋白质序列， 并把它写入
FASTA文件
19.2.1问题描述
19.2.2Python会话示例
19.3命令的含义
19.3.1Seq对象
19.3.2把序列当成字符串工作
19.3.3MutableSeq对象
19.3.4SeqRecord对象
19.3.5SeqIO模块
19.4示例
19.5自测题
第20章从网络资源中检索数据
20.1本章知识点
20.2案例： 在PubMed中用关键词搜索文献， 下载并解析对应的记录
20.2.1问题描述
20.2.2Python会话示例
20.3命令的含义
20.3.1Entrez模块
20.3.2Medline模块
20.4示例
20.5自测题
第21章使用三维结构数据
21.1本章知识点
21.2案例： 从PDB文件中提取原子名及其三维坐标
21.2.1问题描述
21.2.2Python会话示例
21.3命令的含义
21.3.1Bio.PDB模块
21.3.2SMCRA结构层次
21.4示例
21.5自测题
第五部分小结
第六部分编 程 秘 笈
编程秘笈1: PyCogent库
编程秘笈2： 反向互补和随机化序列
编程秘笈3： 用概率创建随机序列
编程秘笈4： 用Biopython解析多序列联配
编程秘笈5： 从多序列联配中计算共有序列
编程秘笈6： 计算系统发生树的节点间的距离
编程秘笈7： 核苷酸序列的密码子频率
编程秘笈8： 解析Vienna格式的RNA二级结构
编程秘笈9： 解析BLAST的XML输出
编程秘笈10： 解析SBML文件
编程秘笈11： 运行BLAST
编程秘笈12： 访问、 下载和读取网页
编程秘笈13： 解析HTML文件
编程秘笈14： 将PDB文件分割成PDB链文件
编程秘笈15： 在PDB结构上找到两个最靠近的Cα原子
编程秘笈16： 提取两个PDB链间的界面
编程秘笈17： 用Modeller建立同源模型
编程秘笈18： 用ModeRNA分析RNA三维同源模型
编程秘笈19: 从三级结构计算RNA碱基配对
编程秘笈20： 结构重叠的真实实例： 丝氨酸蛋白酶催化三分子
附录
附录A命令概览
附录BPython资源
附录C记录样板
附录D处理目录和用UNIX编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>python生物信息数据管理
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>机器学习与优化
第1章 引言 1
1.1 学习与智能优化：燎原之火 1
1.2 寻找黄金和寻找伴侣 3
1.3 需要的只是数据 5
1.4 超越传统的商业智能 5
1.5 LION方法的实施 6
1.6 “动手”的方法 6
第2章 懒惰学习：最近邻方法 9
第3章 学习需要方法 14
3.1 从已标记的案例中学习：最小化和泛化 16
3.2 学习、验证、测试 18
3.3 不同类型的误差 21
第一部分 监督学习
第4章 线性模型 26
4.1 线性回归 27
4.2 处理非线性函数关系的技巧 28
4.3 用于分类的线性模型 29
4.4 大脑是如何工作的 30
4.5 线性模型为何普遍，为何成功 31
4.6 最小化平方误差和 32
4.7 数值不稳定性和岭回归 34
第5章 广义线性最小二乘法 37
5.1 拟合的优劣和卡方分布 38
5.2 最小二乘法与最大似然估计 42
5.2.1 假设检验 42
5.2.2 交叉验证 44
5.3 置信度的自助法 44
第6章 规则、决策树和森林 50
6.1 构造决策树 52
6.2 民主与决策森林 56
第7章 特征排序及选择 59
7.1 特征选择：情境 60
7.2 相关系数 62
7.3 相关比 63
7.4 卡方检验拒绝统计独立性 64
7.5 熵和互信息 64
第8章 特定非线性模型 67
8.1 logistic 回归 67
8.2 局部加权回归 69
8.3 用LASSO来缩小系数和选择输入值 72
第9章 神经网络：多层感知器 76
9.1 多层感知器 78
9.2 通过反向传播法学习 80
9.2.1 批量和bold driver反向传播法 81
9.2.2 在线或随机反向传播 82
9.2.3 训练多层感知器的高级优化 83
第10章 深度和卷积网络 84
10.1 深度神经网络 85
10.1.1 自动编码器 86
10.1.2 随机噪声、屏蔽和课程 88
10.2 局部感受野和卷积网络 89
第11章 统计学习理论和支持向量机 94
11.1 经验风险最小化 96
11.1.1 线性可分问题 98
11.1.2 不可分问题 100
11.1.3 非线性假设 100
11.1.4 用于回归的支持向量 101
第12章 最小二乘法和健壮内核机器 103
12.1 最小二乘支持向量机分类器 104
12.2 健壮加权最小二乘支持向量机 106
12.3 通过修剪恢复稀疏 107
12.4 算法改进：调谐QP、原始版本、无补偿 108
第13章 机器学习中的民主 110
13.1 堆叠和融合 111
13.2 实例操作带来的多样性：装袋法和提升法 113
13.3 特征操作带来的多样性 114
13.4 输出值操作带来的多样性：纠错码 115
13.5 训练阶段随机性带来的多样性 115
13.6 加性logistic回归 115
13.7 民主有助于准确率－拒绝的折中 118
第14章 递归神经网络和储备池计算 121
14.1 递归神经网络 122
14.2 能量极小化霍普菲尔德网络 124
14.3 递归神经网络和时序反向传播 126
14.4 递归神经网络储备池学习 127
14.5 超限学习机 128
第二部分 无监督学习和聚类
第15章 自顶向下的聚类：K均值 132
15.1 无监督学习的方法 134
15.2 聚类：表示与度量 135
15.3 硬聚类或软聚类的K均值方法 137
第16章 自底向上（凝聚）聚类 142
16.1 合并标准以及树状图 142
16.2 适应点的分布距离：马氏距离 144
16.3 附录：聚类的可视化 146
第17章 自组织映射 149
17.1 将实体映射到原型的人工皮层 150
17.2 使用成熟的自组织映射进行分类 153
第18章 通过线性变换降维（投影） 155
18.1 线性投影 156
18.2 主成分分析 158
18.3 加权主成分分析：结合坐标和关系 160
18.4 通过比值优化进行线性判别 161
18.5 费希尔线性判别分析 163
第19章 通过非线性映射可视化图与网络 165
19.1 最小应力可视化 166
19.2 一维情况：谱图绘制 168
19.3 复杂图形分布标准 170
第20章 半监督学习 174
20.1 用部分无监督数据进行学习 175
20.1.1 低密度区域中的分离 177
20.1.2 基于图的算法 177
20.1.3 学习度量 179
20.1.4 集成约束和度量学习 179
第三部分 优化：力量之源
第21章 自动改进的局部方法 184
21.1 优化和学习 185
21.2 基于导数技术的一维情况 186
21.2.1 导数可以由割线近似 190
21.2.2 一维最小化 191
21.3 求解高维模型（二次正定型） 191
21.3.1 梯度与最速下降法 194
21.3.2 共轭梯度法 196
21.4 高维中的非线性优化 196
21.4.1 通过线性查找的全局收敛 197
21.4.2 解决不定黑塞矩阵 198
21.4.3 与模型信赖域方法的关系 199
21.4.4 割线法 200
21.4.5 缩小差距：二阶方法与线性复杂度 201
21.5 不涉及导数的技术：反馈仿射振荡器 202
21.5.1 RAS：抽样区域的适应性 203
21.5.2 为健壮性和多样化所做的重复 205
第22章 局部搜索和反馈搜索优化 211
22.1 基于扰动的局部搜索 212
22.2 反馈搜索优化：搜索时学习 215
22.3 基于禁忌的反馈搜索优化 217
第23章 合作反馈搜索优化 222
23.1 局部搜索过程的智能协作 223
23.2 CoRSO：一个政治上的类比 224
23.3 CoRSO的例子：RSO与RAS合作 226
第24章 多目标反馈搜索优化 232
24.1 多目标优化和帕累托最优 233
24.2 脑－计算机优化：循环中的用户 235
第四部分 应用精选
第25章 文本和网页挖掘 240
25.1 网页信息检索与组织 241
25.1.1 爬虫 241
25.1.2 索引 242
25.2 信息检索与排名 244
25.2.1 从文档到向量：向量－空间模型 245
25.2.2 相关反馈 247
25.2.3 更复杂的相似性度量 248
25.3 使用超链接来进行网页排名 250
25.4 确定中心和权威：HITS 254
25.5 聚类 256
第26章 协同过滤和推荐 257
26.1 通过相似用户结合评分 258
26.2 基于矩阵分解的模型 260
参考文献 263
索引 269
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>机器学习与优化
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>统计思维
前言　　xi
第1章　探索性数据分析　　1
1.1　统计学方法　　2
1.2　全国家庭增长调查　　2
1.3　数据导入　　3
1.4　DataFrame　　4
1.5　变量　　6
1.6　数据变换　　6
1.7　数据验证　　8
1.8　解释数据　　9
1.9　练习　　10
1.10　术语　　11
第2章　分布　　13
2.1　表示直方图　　14
2.2　绘制直方图　　14
2.3　全国家庭增长调查中的变量　　15
2.4　离群值　　18
2.5　第一胎　　18
2.6　分布概述　　20
2.7　方差　　21
2.8　效应量　　21
2.9　报告结果　　22
2.10　练习　　23
2.11　术语　　23
第3章　概率质量函数　　25
3.1　概率质量函数　　25
3.2　绘制PMF　　26
3.3　绘制PMF 的其他方法　　28
3.4　课堂规模悖论　　29
3.5　使用DataFrame进行索引　　31
3.6　练习　　33
3.7　术语　　34
第4章　累积分布函数　　35
4.1　PMF的局限　　35
4.2　百分位数　　36
4.3　CDF　　37
4.4　表示CDF　　38
4.5　比较CDF　　39
4.6　基于百分位数的统计量　　40
4.7　随机数　　41
4.8　比较百分位秩　　42
4.9　练习　　43
4.10　术语　　44
第5章　分布建模　　45
5.1　指数分布　　45
5.2　正态分布　　48
5.3　正态概率图　　49
5.4　对数正态分布　　51
5.5　Pareto 分布　　53
5.6　随机数生成　　56
5.7　为什么使用模型　　56
5.8　练习　　57
5.9　术语　　59
第6章　概率密度函数　　61
6.1　PDF　　61
6.2　核密度估计　　63
6.3　分布框架　　65
6.4　Hist实现　　65
6.5　Pmf实现　　66
6.6　Cdf实现　　67
6.7　矩　　68
6.8　偏度　　69
6.9　练习　　72
6.10　术语　　73
第7章　变量之间的关系　　75
7.1　散点图　　75
7.2　描述关系特征　　78
7.3　相关性　　79
7.4　协方差　　80
7.5　Pearson相关性　　81
7.6　非线性关系　　82
7.7　Spearman秩相关　　82
7.8　相关性和因果关系　　83
7.9　练习　　84
7.10　术语　　85
第8章　估计　　87
8.1　估计游戏　　87
8.2　猜测方差　　89
8.3　抽样分布　　90
8.4　抽样偏倚　　93
8.5　指数分布　　93
8.6　练习　　95
8.7　术语　　95
第9章　假设检验　　97
9.1　经典假设检验　　97
9.2　假设检验　　98
9.3　检验均值差　　100
9.4　其他检验统计量　　101
9.5　检验相关性　　102
9.6　检验比例　　103
9.7　卡方检验　　104
9.8　再谈第一胎　　105
9.9　误差　　106
9.10　功效　　107
9.11　复现　　108
9.12　练习　　109
9.13　术语　　109
第10章　线性最小二乘法　　111
10.1　最小二乘法拟合　　111
10.2　实现　　112
10.3　残差　　113
10.4　估计　　114
10.5　拟合优度　　116
10.6　检验线性模型　　118
10.7　加权重抽样　　119
10.8　练习　　121
10.9　术语　　121
第11章　回归　　123
11.1　StatsModels　　124
11.2　多重回归　　125
11.3　非线性关系　　127
11.4　数据挖掘　　128
11.5　预测　　129
11.6　Logistic回归　　131
11.7　估计参数　　132
11.8　实现　　133
11.9　准确度　　134
11.10　练习　　135
11.11　术语　　136
第12章　时间序列分析　　139
12.1　导入和清洗数据　　139
12.2　绘制图形　　141
12.3　线性回归　　143
12.4　移动平均值　　144
12.5　缺失值　　146
12.6　序列相关　　148
12.7　自相关　　149
12.8　预测　　150
12.9　参考书目　　154
12.10　练习　　154
12.11　术语　　155
第13章　生存分析　　157
13.1　生存曲线　　157
13.2　危险函数　　159
13.3　估计生存曲线　　160
13.4　Kaplan-Meier估计　　161
13.5　婚姻曲线　　162
13.6　估计生存函数　　163
13.7　置信区间　　164
13.8　群组效应　　166
13.9　外推　　168
13.10　预期剩余生存期　　169
13.11　练习　　171
13.12　术语　　172
第14章　分析方法　　173
14.1　正态分布　　173
14.2　抽样分布　　174
14.3　表示正态分布　　175
14.4　中心极限定理　　176
14.5　检验CLT　　177
14.6　应用CLT　　180
14.7　相关检验　　181
14.8　卡方检验　　183
14.9　讨论　　184
14.10　练习　　184
作者介绍　　186
封面介绍　　186
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>统计思维
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python自然语言处理
译者序
推荐序
作者介绍
关于审校人员
前言
第1章 引言 1
1.1 自然语言处理 1
1.2 基础应用 5
1.3 高级应用 6
1.4 NLP和Python相结合的优势 7
1.5 nltk环境搭建 7
1.6 读者提示 8
1.7 总结 9
第2章 实践理解语料库和数据集 10
2.1 语料库 10
2.2 语料库的作用 11
2.3 语料分析 13
2.4 数据属性的类型 16
2.4.1 分类或定性数据属性 16
2.4.2 数值或定量数据属性 17
2.5 不同文件格式的语料 18
2.6 免费语料库资源 19
2.7 为NLP应用准备数据集 20
2.7.1 挑选数据 20
2.7.2 预处理数据集 20
2.8 网页爬取 21
2.9 总结 23
第3章 理解句子的结构 24
3.1 理解NLP的组成 24
3.1.1 自然语言理解 24
3.1.2 自然语言生成 25
3.1.3 NLU和NLG的区别 25
3.1.4 NLP的分支 26
3.2 上下文无关文法 26
3.3 形态分析 28
3.3.1 形态学 28
3.3.2 词素 28
3.3.3 词干 28
3.3.4 形态分析 28
3.3.5 词 29
3.3.6 词素的分类 29
3.3.7 词干和词根的区别 32
3.4 词法分析 32
3.4.1 词条 33
3.4.2 词性标注 33
3.4.3 导出词条的过程 33
3.4.4 词干提取和词形还原的区别 34
3.4.5 应用 34
3.5 句法分析 34
3.6 语义分析 36
3.6.1 语义分析概念 36
3.6.2 词级别的语义 37
3.6.3 上下位关系和多义词 37
3.6.4 语义分析的应用 38
3.7 消歧 38
3.7.1 词法歧义 38
3.7.2 句法歧义 39
3.7.3 语义歧义 39
3.7.4 语用歧义 39
3.8 篇章整合 40
3.9 语用分析 40
3.10 总结 40
第4章 预处理 42
4.1 处理原始语料库文本 42
4.1.1 获取原始文本 42
4.1.2 小写化转换 44
4.1.3 分句 44
4.1.4 原始文本词干提取 46
4.1.5 原始文本词形还原 46
4.1.6 停用词去除 48
4.2 处理原始语料库句子 50
4.2.1 词条化 50
4.2.2 单词词形还原 51
4.3 基础预处理 52
4.4 实践和个性化预处理 57
4.4.1 由你自己决定 57
4.4.2 预处理流程 57
4.4.3 预处理的类型 57
4.4.4 理解预处理的案例 57
4.5 总结 62
第5章 特征工程和NLP算法 63
5.1 理解特征工程 64
5.1.1 特征工程的定义 64
5.1.2 特征工程的目的 64
5.1.3 一些挑战 65
5.2 NLP中的基础特征 65
5.2.1 句法分析和句法分析器 65
5.2.2 词性标注和词性标注器 81
5.2.3 命名实体识别 85
5.2.4 n元语法 88
5.2.5 词袋 89
5.2.6 语义工具及资源 91
5.3 NLP中的基础统计特征 91
5.3.1 数学基础 92
5.3.2 TF-IDF 96
5.3.3 向量化 99
5.3.4 规范化 100
5.3.5 概率模型 101
5.3.6 索引 103
5.3.7 排序 103
5.4 特征工程的优点 104
5.5 特征工程面临的挑战 104
5.6 总结 104
第6章 高级特征工程和NLP算法 106
6.1 词嵌入 106
6.2 word2vec基础 106
6.2.1 分布语义 107
6.2.2 定义word2vec 108
6.2.3 无监督分布语义模型中的必需品 108
6.3 word2vec模型从黑盒到白盒 109
6.4 基于表示的分布相似度 110
6.5 word2vec模型的组成部分 111
6.5.1 word2vec的输入 111
6.5.2 word2vec的输出 111
6.5.3 word2vec模型的构建模块 111
6.6 word2vec模型的逻辑 113
6.6.1 词汇表构建器 114
6.6.2 上下文环境构建器 114
6.6.3 两层的神经网络 116
6.6.4 算法的主要流程 119
6.7 word2vec模型背后的算法和数学理论 120
6.7.1 word2vec算法中的基本数学理论 120
6.7.2 词汇表构建阶段用到的技术 121
6.7.3 上下文环境构建过程中使用的技术 122
6.8 神经网络算法 123
6.8.1 基本神经元结构 123
6.8.2 训练一个简单的神经元 124
6.8.3 单个神经元的应用 126
6.8.4 多层神经网络 127
6.8.5 反向传播算法 127
6.8.6 word2vec背后的数学理论 128
6.9 生成最终词向量和概率预测结果的技术 130
6.10 word2vec相关的一些事情 131
6.11 word2vec的应用 131
6.11.1 实现一些简单例子 132
6.11.2 word2vec的优势 133
6.11.3 word2vec的挑战 133
6.11.4 在实际应用中使用word2vec 134
6.11.5 何时使用word2vec 135
6.11.6 开发一些有意思的东西 135
6.11.7 练习 138
6.12 word2vec概念的扩展 138
6.12.1 para2vec 139
6.12.2 doc2vec 139
6.12.3 doc2vec的应用 140
6.12.4 GloVe 140
6.12.5 练习 141
6.13 深度学习中向量化的重要性 141
6.14 总结 142
第7章 规则式自然语言处理系统 143
7.1 规则式系统 144
7.2 规则式系统的目的 146
7.2.1 为何需要规则式系统 146
7.2.2 使用规则式系统的应用 147
7.2.3 练习 147
7.2.4 开发规则式系统需要的资源 147
7.3 规则式系统的架构 148
7.3.1 从专家系统的角度来看规则式系统的通用架构 149
7.3.2 NLP应用中的规则式系统的实用架构 150
7.3.3 NLP应用中的规则式系统的定制架构 152
7.3.4 练习 155
7.3.5 Apache UIMA架构 155
7.4 规则式系统的开发周期 156
7.5 规则式系统的应用 156
7.5.1 使用规则式系统的NLP应用 156
7.5.2 使用规则式系统的通用AI应用 157
7.6 使用规则式系统来开发NLP应用 157
7.6.1 编写规则的思维过程 158
7.6.2 基于模板的聊天机器人应用 165
7.7 规则式系统与其他方法的对比 168
7.8 规则式系统的优点 169
7.9 规则式系统的缺点 169
7.10 规则式系统面临的挑战 170
7.11 词义消歧的基础 170
7.12 规则式系统近期发展的趋势 171
7.13 总结 171
第8章 自然语言处理中的机器学习方法 172
8.1 机器学习的基本概念 172
8.2 自然语言处理应用的开发步骤 176
8.2.1 第一次迭代时的开发步骤 177
8.2.2 从第二次到第N次迭代的开发步骤 177
8.3 机器学习算法和其他概念 179
8.3.1 有监督机器学习方法 179
8.3.2 无监督机器学习方法 206
8.3.3 半监督机器学习算法 210
8.3.4 一些重要概念 211
8.3.5 特征选择 215
8.3.6 维度约减 219
8.4 自然语言处理中的混合方法 221
8.5 总结 221
第9章 NLU和NLG问题中的深度学习 223
9.1 人工智能概览 223
9.1.1 人工智能的基础 223
9.1.2 人工智能的阶段 225
9.1.3 人工智能的种类 227
9.1.4 人工智能的目标和应用 227
9.2 NLU和NLG之间的区别 232
9.2.1 自然语言理解 232
9.2.2 自然语言生成 232
9.3 深度学习概览 233
9.4 神经网络基础 234
9.4.1 神经元的第一个计算模型 235
9.4.2 感知机 236
9.4.3 理解人工神经网络中的数学概念 236
9.5 实现神经网络 249
9.5.1 单层反向传播神经网络 249
9.5.2 练习 251
9.6 深度学习和深度神经网络 251
9.6.1 回顾深度学习 251
9.6.2 深度神经网络的基本架构 251
9.6.3 NLP中的深度学习 252
9.6.4 传统NLP和深度学习NLP技术的区别 253
9.7 深度学习技术和NLU 255
9.8 深度学习技术和NLG 262
9.8.1 练习 262
9.8.2 菜谱摘要和标题生成 262
9.9 基于梯度下降的优化 265
9.10 人工智能与人类智能 269
9.11 总结 269
第10章 高级工具 270
10.1 使用Apache Hadoop作为存储框架 270
10.2 使用Apache Spark作为数据处理框架 272
10.3 使用Apache Flink作为数据实时处理框架 274
10.4 Python中的可视化类库 274
10.5 总结 275
第11章 如何提高你的NLP技能 276
11.1 开始新的NLP职业生涯 276
11.2 备忘列表 277
11.3 确定你的领域 277
11.4 通过敏捷的工作来实现成功 278
11.5 NLP和数据科学方面一些有用的博客 278
11.6 使用公开的数据集 278
11.7 数据科学领域需要的数学知识 278
11.8 总结 279
第12章 安装指导 280
12.1 安装Python、pip和NLTK 280
12.2 安装PyCharm开发环境 280
12.3 安装依赖库 280
12.4 框架安装指导 281
12.5 解决你的疑问 281
12.6 总结 281
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python自然语言处理
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>数据科学入门
前言　　xiii
第1章　导论　　1
1.1　数据的威力　　1
1.2　什么是数据科学　　1
1.3　激励假设：DataSciencester　　2
1.3.1　寻找关键联系人　　3
1.3.2　你可能知道的数据科学家　　5
1.3.3　工资与工作年限　　8
1.3.4　付费账户　　10
1.3.5　兴趣主题　　11
1.4　展望　　12
第2章　Python速成　　13
2.1　基础内容　　13
2.1.1　Python获取　　13
2.1.2　Python之禅　　14
2.1.3　空白形式　　14
2.1.4　模块　　15
2.1.5　算法　　16
2.1.6　函数　　16
2.1.7　字符串　　17
2.1.8　异常　　18
2.1.9　列表　　18
2.1.10　元组　　19
2.1.11　字典　　20
2.1.12　集合　　22
2.1.13　控制流　　23
2.1.14　真和假　　24
2.2　进阶内容　　25
2.2.1　排序　　25
2.2.2　列表解析　　25
2.2.3　生成器和迭代器　　26
2.2.4　随机性　　27
2.2.5　正则表达式　　28
2.2.6　面向对象的编程　　28
2.2.7　函数式工具　　29
2.2.8　枚举　　31
2.2.9　压缩和参数拆分　　31
2.2.10　args 和kwargs　　32
2.2.11　欢迎来到DataSciencester　　33
2.3　延伸学习　　33
第3章　可视化数据　　34
3.1　matplotlib　　34
3.2　条形图　　36
3.3　线图　　40
3.4　散点图　　41
3.5　延伸学习　　44
第4章　线性代数　　45
4.1　向量　　45
4.2　矩阵　　49
4.3　延伸学习　　51
第5章　统计学　　53
5.1　描述单个数据集　　53
5.1.1　中心倾向　　55
5.1.2　离散度　　56
5.2　相关　　58
5.3　辛普森悖论　　60
5.4　相关系数其他注意事项　　61
5.5　相关和因果　　62
5.6　延伸学习　　63
第6章　概率　　64
6.1　不独立和独立　　64
6.2　条件概率　　65
6.3　贝叶斯定理　　66
6.4　随机变量　　68
6.5　连续分布　　68
6.6　正态分布　　69
6.7　中心极限定理　　72
6.8　延伸学习　　74
第7章　假设与推断　　75
7.1　统计假设检验　　75
7.2　案例：掷硬币　　75
7.3　置信区间　　79
7.4　P-hacking　　80
7.5　案例：运行A/B测试　　81
7.6　贝叶斯推断　　82
7.7　延伸学习　　85
第8章　梯度下降　　86
8.1　梯度下降的思想　　86
8.2　估算梯度　　87
8.3　使用梯度　　90
8.4　选择正确步长　　90
8.5　综合　　91
8.6　随机梯度下降法　　92
8.7　延伸学习　　93
第9章　获取数据　　94
9.1　stdin和stdout　　94
9.2　读取文件　　96
9.2.1　文本文件基础　　96
9.2.2　限制的文件　　97
9.3　网络抓取　　99
9.3.1　HTML 和解析方法　　99
9.3.2　案例：关于数据的O'Reilly图书　　101
9.4　使用API　　105
9.4.1　JSON（和XML）　　105
9.4.2　使用无验证的API　　106
9.4.3　寻找API　　107
9.5　案例：使用Twitter API　　108
9.6　延伸学习　　111
第10章　数据工作　　112
10.1　探索你的数据　　112
10.1.1　探索一维数据　　112
10.1.2　二维数据　　114
10.1.3　多维数据　　116
10.2　清理与修改　　117
10.3　数据处理　　119
10.4　数据调整　　122
10.5　降维　　123
10.6　延伸学习　　129
第11章　机器学习　　130
11.1　建模　　130
11.2　什么是机器学习　　131
11.3　过拟合和欠拟合　　131
11.4　正确性　　134
11.5　偏倚- 方差权衡　　136
11.6　特征提取和选择　　137
11.7　延伸学习　　138
第12章　k近邻法　　139
12.1　模型　　139
12.2　案例：最喜欢的编程语言　　141
12.3　维数灾难　　146
12.4　延伸学习　　151
第13章　朴素贝叶斯算法　　152
13.1　一个简易的垃圾邮件过滤器　　152
13.2　一个复杂的垃圾邮件过滤器　　153
13.3　算法的实现　　154
13.4　测试模型　　156
13.5　延伸学习　　158
第14章　简单线性回归　　159
14.1　模型　　159
14.2　利用梯度下降法　　162
14.3　最大似然估计　　162
14.4　延伸学习　　163
第15章　多重回归分析　　164
15.1　模型　　164
15.2　最小二乘模型的进一步假设　　165
15.3　拟合模型　　166
15.4　解释模型　　167
15.5　拟合优度　　167
15.6　题外话：Bootstrap　　168
15.7　回归系数的标准误差　　169
15.8　正则化　　170
15.9　延伸学习　　172
第16章　逻辑回归　　173
16.1　问题　　173
16.2　Logistic函数　　176
16.3　应用模型　　178
16.4　拟合优度　　179
16.5　支持向量机　　180
16.6　延伸学习　　184
第17章　决策树　　185
17.1　什么是决策树　　185
17.2　熵　　187
17.3　分割之熵　　189
17.4　创建决策树　　190
17.5　综合运用　　192
17.6　随机森林　　194
17.7　延伸学习　　195
第18章　神经网络　　196
18.1　感知器　　196
18.2　前馈神经网络　　198
18.3　反向传播　　201
18.4　实例：战胜CAPTCHA　　202
18.5　延伸学习　　206
第19章　聚类分析　　208
19.1　原理　　208
19.2　模型　　209
19.3　示例：聚会　　210
19.4　选择聚类数目k　　213
19.5　示例：对色彩进行聚类　　214
19.6　自下而上的分层聚类　　216
19.7　延伸学习　　221
第20章　自然语言处理　　222
20.1　词云　　222
20.2　n-grams模型　　　224
20.3　语法　　227
20.4　题外话：吉布斯采样　　229
20.5　主题建模　　231
20.6　延伸学习　　236
第21章　网络分析　　237
21.1　中介中心度　　237
21.2　特征向量中心度　　242
21.2.1　矩阵乘法　　242
21.2.2　中心度　　244
21.3　有向图与PageRank　　246
21.4　延伸学习　　248
第22章　推荐系统　　249
22.1　手工甄筛　　250
22.2　推荐流行事物　　250
22.3　基于用户的协同过滤方法　　251
22.4　基于物品的协同过滤算法　　254
22.5　延伸学习　　256
第23章　数据库与SQL　　257
23.1　CREATE TABLE与INSERT　　257
23.2　UPDATE　　259
23.3　DELETE　　260
23.4　SELECT　　260
23.5　GROUP BY　　262
23.6　ORDER BY　　264
23.7　JOIN　　264
23.8　子查询　　267
23.9　索引　　267
23.10　查询优化　　268
23.11　NoSQL　　268
23.12　延伸学习　　269
第24章　MapReduce　　270
24.1　案例：单词计数　　270
24.2　为什么是MapReduce　　272
24.3　更加一般化的MapReduce　　272
24.4　案例：分析状态更新　　273
24.5　案例：矩阵计算　　275
24.6　题外话：组合器　　276
24.7　延伸学习　　277
第25章　数据科学前瞻　　278
25.1　IPython　　278
25.2　数学　　279
25.3　不从零开始　　279
25.3.1　NumPy　　279
25.3.2　pandas　　280
25.3.3　scikit-learn　　280
25.3.4　可视化　　280
25.3.5　R　　281
25.4　寻找数据　　281
25.5　从事数据科学　　281
25.5.1　Hacker News　　282
25.5.2　消防车　　282
25.5.3　T 恤　　282
25.5.4　你呢？　　283
作者简介　　284
关于封面　　284
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>数据科学入门
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python人工智能项目实战
译者序
前言
作者简介
审校者简介
第1章　人工智能系统基础知识	1
1.1　神经网络	2
1.2　神经激活单元	5
1.2.1　线性激活单元	5
1.2.2　sigmoid激活单元	6
1.2.3　双曲正切激活函数	6
1.2.4　修正线性单元	7
1.2.5　softmax激活单元	9
1.3　用反向传播算法训练神经网络	9
1.4　卷积神经网络	12
1.5　循环神经网络	13
1.6　生成对抗网络	16
1.7　强化学习	18
1.7.1　Q学习	19
1.7.2　深度Q学习	20
1.8　迁移学习	21
1.9　受限玻尔兹曼机	22
1.10　自编码器	23
1.11　总结	24
第2章　迁移学习	26
2.1　技术要求	26
2.2　迁移学习简介	27
2.3　迁移学习和糖尿病视网膜病变检测	28
2.4　糖尿病视网膜病变数据集	29
2.5　定义损失函数	30
2.6　考虑类别不平衡问题	31
2.7　预处理图像	32
2.8　使用仿射变换生成额外数据	33
2.8.1　旋转	34
2.8.2　平移	34
2.8.3　缩放	35
2.8.4　反射	35
2.8.5　通过仿射变换生成额外的图像	36
2.9　网络架构	36
2.9.1　VGG16迁移学习网络	38
2.9.2　InceptionV3迁移学习网络	39
2.9.3　ResNet50迁移学习网络	39
2.10　优化器和初始学习率	40
2.11　交叉验证	40
2.12　基于验证对数损失的模型检查点	40
2.13　训练过程的Python实现	41
2.14　类别分类结果	50
2.15　在测试期间进行推断	50
2.16　使用回归而非类别分类	52
2.17　使用keras sequential工具类生成器	53
2.18　总结	57
第3章　神经机器翻译	58
3.1　技术要求	59
3.2　基于规则的机器翻译	59
3.2.1　分析阶段	59
3.2.2　词汇转换阶段	60
3.2.3　生成阶段	60
3.3　统计机器学习系统	60
3.3.1　语言模型	61
3.3.2　翻译模型	63
3.4　神经机器翻译	65
3.4.1　编码器–解码器模型	65
3.4.2　使用编码器–解码器模型进行推断	66
3.5　实现序列到序列的神经机器翻译	67
3.5.1　处理输入数据	67
3.5.2　定义神经翻译机器的模型	71
3.5.3　神经翻译机器的损失函数	73
3.5.4　训练模型	73
3.5.5　构建推断模型	74
3.5.6　单词向量嵌入	78
3.5.7　嵌入层	79
3.5.8　实现基于嵌入的NMT	79
3.6　总结	84
第4章　基于GAN的时尚风格迁移	85
4.1　技术要求	85
4.2　DiscoGAN	86
4.3　CycleGAN	88
4.4　学习从手绘轮廓生成自然手提包	89
4.5　预处理图像	89
4.6　DiscoGAN的生成器	91
4.7　DiscoGAN的判别器	93
4.8　构建网络和定义损失函数	94
4.9　构建训练过程	97
4.10　GAN训练中的重要参数值	99
4.11　启动训练	100
4.12　监督生成器和判别器的损失	101
4.13　DiscoGAN生成的样例图像	103
4.14　总结	104
第5章　视频字幕应用	105
5.1　技术要求	105
5.2　视频字幕中的CNN和LSTM	106
5.3　基于序列到序列的视频字幕系统	107
5.4　视频字幕系统数据集	109
5.5　处理视频图像以创建CNN特征	110
5.6　处理视频的带标签字幕	113
5.7　构建训练集和测试集	114
5.8　构建模型	115
5.8.1　定义模型的变量	116
5.8.2　编码阶段	117
5.8.3　解码阶段	117
5.8.4　计算小批量损失	118
5.9　为字幕创建单词词汇表	118
5.10　训练模型	119
5.11　训练结果	123
5.12　对未见过的视频进行推断	124
5.12.1　推断函数	126
5.12.2　评估结果	127
5.13　总结	128
第6章　智能推荐系统	129
6.1　技术要求	129
6.2　什么是推荐系统	129
6.3　基于潜在因子分解的推荐系统	131
6.4　深度学习与潜在因子协同过滤	132
6.5　SVD++	136
6.6　基于受限玻尔兹曼机的推荐系统	138
6.7　对比分歧	139
6.8　使用RBM进行协同过滤	140
6.9　使用RBM实现协同过滤	142
6.9.1　预处理输入	143
6.9.2　构建RBM网络进行协作过滤	144
6.9.3　训练RBM 	147
6.10　使用训练好的RBM进行推断	149
6.11　总结	150
第7章　用于电影评论情感分析的移动应用程序	151
7.1　技术要求	152
7.2　使用TensorFlow mobile构建Android移动应用程序	152
7.3　Android应用中的电影评论评分	153
7.4　预处理电影评论文本	154
7.5　构建模型	156
7.6　训练模型	157
7.7　将模型冻结为protobuf格式	159
7.8　为推断创建单词到表征的字典	161
7.9　应用程序交互界面设计	162
7.10　Android应用程序的核心逻辑	164
7.11　测试移动应用	168
7.12　总结	170
第8章　提供客户服务的AI聊天机器人	171
8.1　技术要求	172
8.2　聊天机器人的架构	172
8.3　基于LSTM的序列到序列模型	173
8.4　建立序列到序列模型	174
8.5　Twitter平台上的聊天机器人	174
8.5.1　构造聊天机器人的训练数据	175
8.5.2　将文本数据转换为单词索引	175
8.5.3　替换匿名用户名	176
8.5.4　定义模型	176
8.5.5　用于训练模型的损失函数	178
8.5.6　训练模型	179
8.5.7　从模型生成输出响应	180
8.5.8　所有代码连起来	180
8.5.9　开始训练	181
8.5.10　对一些输入推特的推断结果	181
8.6　总结	182
第9章　基于增强学习的无人驾驶	183
9.1　技术要求	183
9.2　马尔科夫决策过程	184
9.3　学习Q值函数	185
9.4　深度Q学习	186
9.5　形式化损失函数	186
9.6　深度双Q学习	187
9.7　实现一个无人驾驶车的代码	189
9.8　深度Q学习中的动作离散化	189
9.9　实现深度双Q值网络	190
9.10　设计智能体	191
9.11　自动驾驶车的环境	194
9.12　将所有代码连起来	197
9.13　训练结果	202
9.14　总结	203
第10章　从深度学习的角度看CAPTCHA	204
10.1　技术要求	205
10.2　通过深度学习破解CAPTCHA	205
10.2.1　生成基本的CAPTCHA	205
10.2.2　生成用于训练CAPTCHA破解器的数据	206
10.2.3　CAPTCHA破解器的CNN架构	208
10.2.4　预处理CAPTCHA图像	208
10.2.5　将CAPTCHA字符转换为类别	209
10.2.6　数据生成器	210
10.2.7　训练CAPTCHA破解器	211
10.2.8　测试数据集的准确性	212
10.3　通过对抗学习生成CAPTCHA	214
10.3.1　优化GAN损失	215
10.3.2　生成器网络	215
10.3.3　判别器网络	216
10.3.4　训练GAN	219
10.3.5　噪声分布	220
10.3.6　数据预处理	220
10.3.7　调用训练	221
10.3.8　训练期间CAPTCHA的质量	222
10.3.9　使用训练后的生成器创建CAPTCHA	224
10.4　总结	225
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python人工智能项目实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>21个项目玩转深度学习
第1章  MNIST机器学习入门  1
1.1  MNIST数据集  2
1.1.1  简介  2
1.1.2  实验：将MNIST数据集保存为图片  5
1.1.3  图像标签的独热(one-hot)表示  6
1.2  利用TensorFlow识别MNIST  8
1.2.1  Softmax回归  8
1.2.2  两层卷积网络分类  14
1.3  总结  18
第2章  CIFAR-10与ImageNet图像识别  19
2.1  CIFAR-10数据集  20
2.1.1  CIFAR-10简介  20
2.1.2  下载CIFAR-10数据  21
2.1.3  TensorFlow的数据读取机制  23
2.1.4  实验：将CIFAR-10数据集保存为图片形式  30
2.2  利用TensorFlow训练CIFAR-10识别模型  34
2.2.1  数据增强（Data Augmentation）  34
2.2.2  CIFAR-10识别模型  36
2.2.3  训练模型  39
2.2.4  在TensorFlow中查看训练进度  39
2.2.5  测试模型效果  42
2.3  ImageNet图像识别模型  44
2.3.1  ImageNet数据集简介  44
2.3.2  历代ImageNet图像识别模型  45
2.4  总结  49
第3章  打造自己的图像识别模型  50
3.1  微调（Fine-tune）的原理  51
3.2  数据准备  52
3.3  使用TensorFlow Slim微调模型  56
3.3.1  下载TensorFlow Slim的源代码  56
3.3.2  定义新的datasets文件  57
3.3.3  准备训练文件夹  59
3.3.4  开始训练  60
3.3.5  训练程序行为  62
3.3.6  验证模型正确率  63
3.3.7  TensorBoard可视化与超参数选择  64
3.3.8  导出模型并对单张图片进行识别  65
3.4  总结  69
第4章  Deep Dream模型  70
4.1  Deep Dream的技术原理  71
4.2  TensorFlow中的Deep Dream模型实践  73
4.2.1  导入Inception模型  73
4.2.2  生成原始的Deep Dream图像  76
4.2.3  生成更大尺寸的Deep Dream图像  78
4.2.4  生成更高质量的Deep Dream图像  82
4.2.5  最终的Deep Dream模型  87
4.3  总结  90
第5章  深度学习中的目标检测  91
5.1  深度学习中目标检测的原理  92
5.1.1  R-CNN的原理  92
5.1.2  SPPNet的原理  94
5.1.3  Fast R-CNN的原理  97
5.1.4  Faster R-CNN的原理  98
5.2  TensorFlow Object Detection API  101
5.2.1  安装TensorFlow Object Detection API  101
5.2.2  执行已经训练好的模型  103
5.2.3  训练新的模型  109
5.2.4  导出模型并预测单张图片  113
5.3  总结  114
第6章  人脸检测和人脸识别  115
6.1  MTCNN的原理  116
6.2  使用深度卷积网络提取特征  121
6.2.1  三元组损失（Triplet Loss）的定义  123
6.2.2  中心损失（Center Loss）的定义  123
6.3  使用特征设计应用  125
6.4  在TensorFlow中实现人脸识别  126
6.4.1  项目环境设置  126
6.4.2  LFW人脸数据库  127
6.4.3  LFW数据库上的人脸检测和对齐  128
6.4.4  使用已有模型验证LFW数据库准确率  129
6.4.5  在自己的数据上使用已有模型  130
6.4.6  重新训练新模型  133
6.4.7  三元组损失和中心损失的定义  138
6.5  总结  140
第7章  图像风格迁移  141
7.1  图像风格迁移的原理  142
7.1.1  原始图像风格迁移的原理  142
7.1.2  快速图像风格迁移的原理  148
7.2  在TensorFlow中实现快速风格迁移  149
7.2.1  使用预训练模型  150
7.2.2  训练自己的模型  153
7.2.3  在TensorBoard中监控训练情况  154
7.2.4  项目实现细节  157
7.3  总结  162
第8章  GAN和DCGAN入门  163
8.1  GAN的原理  164
8.2  DCGAN的原理  166
8.3  在TensorFlow中用DCGAN生成图像  169
8.3.1  生成MNIST图像  170
8.3.2  使用自己的数据集训练  171
8.3.3  程序结构分析：如何将图像读入模型  173
8.3.4  程序结构分析：可视化方法  177
8.4  总结  180
第9章  pix2pix模型与自动上色技术  181
9.1  cGAN的原理  182
9.2  pix2pix模型的原理  184
9.3  TensorFlow中的pix2pix模型  187
9.3.1  执行已有的数据集  187
9.3.2  创建自己的数据集  191
9.4  使用TensorFlow为灰度图像自动上色  194
9.4.1  为食物图片上色  194
9.4.2  为动漫图片进行上色  196
9.5  总结  198
第10章  超分辨率：如何让图像变得更清晰  199
10.1  数据预处理与训练  200
10.1.1  去除错误图片  200
10.1.2  将图像裁剪到统一大小  202
10.1.3  为代码添加新的操作  202
10.2  总结  209
第11章  CycleGAN与非配对图像转换  210
11.1  CycleGAN的原理  211
11.2  在TensorFlow中用训练CycleGAN模型  213
11.2.1  下载数据集并训练  213
11.2.2  使用自己的数据进行训练  217
11.3  程序结构分析  220
11.4  总结  224
第12章  RNN基本结构与Char RNN文本生成  225
12.1  RNN的原理  226
12.1.1  经典RNN的结构  226
12.1.2  N VS 1 RNN的结构  229
12.1.3  1 VS N RNN的结构  230
12.2  LSTM的原理  231
12.3  Char RNN的原理  235
12.4  TensorFlow中的RNN实现方式  237
12.4.1  实现RNN的基本单元：RNNCell  238
12.4.2  对RNN进行堆叠：MultiRNNCell  239
12.4.3  注意点：BasicRNNCell和BasicLSTMCell的output  240
12.4.4  使用tf.nn.dynamic_rnn展开时间维度  241
12.5  使用TensorFlow实现Char RNN  242
12.5.1  定义输入数据  243
12.5.2  定义多层LSTM模型  244
12.5.3  定义损失  245
12.5.4  训练模型与生成文字  246
12.5.5  更多参数说明  250
12.5.6  运行自己的数据  250
12.6  总结  251
第13章  序列分类问题详解  252
13.1  N VS 1的RNN结构  253
13.2  数列分类问题与数据生成  254
13.3  在TensorFlow中定义RNN分类模型  258
13.3.1  定义模型前的准备工作  258
13.3.2  定义RNN分类模型  259
13.3.3  定义损失并进行训练  261
13.4  模型的推广  262
13.5  总结  263
第14章  词的向量表示：word2vec与词嵌入  264
14.1  为什么需要做词嵌入  265
14.2  词嵌入的原理  266
14.2.1  CBOW实现词嵌入的原理  266
14.2.2  Skip-Gram实现词嵌入的原理  269
14.3  在TensorFlow中实现词嵌入  270
14.3.1  下载数据集  270
14.3.2  制作词表  272
14.3.3  生成每步的训练样本  274
14.3.4  定义模型  276
14.3.5  执行训练  279
14.3.6  可视化  281
14.4  与第12章的对比  284
14.5  总结  285
第15章  在TensorFlow中进行时间序列预测  286
15.1  时间序列问题的一般形式  287
15.2  用TFTS读入时间序列数据  287
15.2.1  从Numpy数组中读入时间序列数据  288
15.2.2  从CSV文件中读入时间序列数据  291
15.3  使用AR模型预测时间序列  293
15.3.1  AR模型的训练  293
15.3.2  AR模型的验证和预测  295
15.4  使用LSTM模型预测时间序列  297
15.4.1  LSTM模型中的单变量时间序列预测  297
15.4.2  LSTM模型中的多变量时间序列预测  299
15.5  总结  301
第16章  神经网络机器翻译技术  302
16.1  Encoder-Decoder模型的原理  303
16.2  注意力机制（Attention）  305
16.3  使用TensorFlow NMT搭建神经网络翻译引擎  309
16.3.1  示例：将越南语翻译为英语  309
16.3.2  构建中英翻译引擎  313
16.4  TensorFlow NMT源码简介  317
16.5  总结  319
第17章  看图说话：将图像转换为文字  320
17.1  Image Caption技术综述  321
17.1.1  从Encoder-Decoder结构谈起  321
17.1.2  将Encoder-Decoder应用到Image Caption任务上  322
17.1.3  对Encoder-Decoder的改进1：加入Attention机制  323
17.1.4  对Encoder-Decoder的改进2：加入高层语义  325
17.2  在TensorFlow中实现Image Caption  327
17.2.1  下载代码  327
17.2.2  环境准备  328
17.2.2  编译和数据准备  328
17.2.3  训练和验证  330
17.2.4  测试单张图片  331
17.3  总结  332
第18章  强化学习入门之Q  333
18.1  强化学习中的几个重要概念  334
18.2  Q Learning的原理与实验  336
18.2.1  环境定义  336
18.2.2  Q函数  338
18.2.3  Q函数的学习策略  339
18.2.4  ?-greedy策略  341
18.2.5  简单的Q Learning示例  341
18.2.6  更复杂的情况  342
18.3  总结  343
第19章  强化学习入门之SARSA算法  344
19.1  SARSA 算法的原理  345
19.1.1  通过与Q Learning对比学习SARSA算法  345
19.1.2  off-policy与on-policy  346
19.2  SARSA 算法的实现  347
19.3  总结  348
第20章  深度强化学习：Deep Q Learning  349
20.1  DQN算法的原理  350
20.1.1  问题简介  350
20.1.2  Deep Q Network  351
20.1.3  训练方法  352
20.2  在TensorFlow中运行DQN算法  353
20.2.1  安装依赖库  353
20.2.2  训练  355
20.2.3  测试  356
20.3  在TensorFlow中DQN算法的实现分析  357
20.4  总结  360
第21章  策略梯度（Policy Gradient）算法  361
21.1  策略梯度（Policy Gradient）算法的原理  362
21.1.1  Cartpole游戏  362
21.1.2  策略网络（Policy Network）  363
21.1.3  训练策略网络  364
21.2  在TensorFlow中实现策略梯度 算法  365
21.2.1  初始化  365
21.2.2  定义策略网络  366
21.2.3  训练  367
21.3  总结  371
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>21个项目玩转深度学习
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>基于ArcGIS的Python编程秘笈
第1章面向ArcGIS的Python语言基础 1
1.1使用IDLE进行Python脚本开发2
1.1.1PythonShell窗口2
1.1.2Python脚本窗口3
1.1.3编辑已有的Python脚本3
1.1.4在IDLE中运行脚本5
1.2ArcGISPython窗口的使用5
1.2.1ArcGISPython窗口5
1.2.2ArcGISPython窗口的显示6
1.3Python语言基础8
1.3.1代码注释8
1.3.2模块导入9
1.3.3变量10
1.3.4内置数据类型13
1.3.5类和对象19
1.3.6语句20
1.3.7文件I/O（输入/输出）25
1.4总结26
第2章管理地图文档和图层27
2.1引言27
2.2引用当前的地图文档28
2.2.1准备工作28
2.2.2操作方法28
2.2.3工作原理29
2.3引用磁盘上的地图文档30
2.3.1准备工作30
2.3.2操作方法30
2.3.3工作原理31
2.4获取地图文档中的图层列表31
2.4.1准备工作31
2.4.2操作方法31
2.4.3工作原理32
2.4.4拓展32
2.5限制图层列表33
2.5.1准备工作33
2.5.2操作方法33
2.5.3工作原理34
2.6缩放至所选要素35
2.6.1准备工作35
2.6.2操作方法35
2.6.3工作原理37
2.7改变地图范围37
2.7.1准备工作37
2.7.2操作方法38
2.7.3工作原理39
2.8添加图层到地图文档39
2.8.1准备工作40
2.8.2操作方法40
2.8.3工作原理42
2.8.4拓展42
2.9插入图层到地图文档42
2.9.1准备工作42
2.9.2操作方法43
2.9.3工作原理44
2.9.4拓展45
2.10更新图层的符号系统45
2.10.1准备工作45
2.10.2操作方法46
2.10.3工作原理47
2.10.4拓展48
2.11更新图层属性48
2.11.1准备工作48
2.11.2操作方法48
2.12操作数据框中启用时间的图层53
2.12.1准备工作53
2.12.2操作方法54
2.12.3工作原理58
第3章查找和修复丢失的数据链接59
3.1引言59
3.2查找地图文档和图层文件中丢失的数据源59
3.2.1准备工作60
3.2.2操作步骤60
3.2.3工作原理62
3.2.4拓展62
3.3使用MapDocument.findAndReplaceWorkspacePaths()方法修复丢失的数据源62
3.3.1准备工作62
3.3.2操作步骤63
3.3.3工作原理64
3.3.4拓展64
3.4使用MapDocument.replaceWorkspaces()方法修复丢失的数据源65
3.4.1准备工作65
3.4.2操作步骤65
3.4.3工作原理67
3.5使用replaceDataSource()方法修复单个图层和表对象68
3.5.1准备工作69
3.5.2操作步骤69
3.5.3工作原理72
3.5.4拓展72
3.6查找文件夹中所有地图文档内丢失的数据源72
3.6.1准备工作72
3.6.2操作步骤73
3.6.3工作原理74
第4章自动化地图制图和打印76
4.1引言76
4.2创建布局元素的Python列表77
4.2.1准备工作77
4.2.2操作方法78
4.2.3工作原理79
4.3为布局元素指定唯一的名称79
4.3.1准备工作79
4.3.2操作方法79
4.3.3工作原理82
4.3.4拓展82
4.4使用ListLayoutElements()函数限制返回的布局元素83
4.4.1准备工作83
4.4.2操作方法83
4.4.3工作原理84
4.5更新布局元素的属性84
4.5.1准备工作84
4.5.2操作方法85
4.5.3工作原理87
4.6获取可用的打印机的列表87
4.6.1准备工作87
4.6.2操作方法87
4.6.3工作原理88
4.7使用PrintMap()函数打印地图88
4.7.1准备工作89
4.7.2操作方法89
4.7.3工作原理90
4.8导出地图为PDF文件90
4.8.1准备工作90
4.8.2操作方法90
4.8.3工作原理92
4.9导出地图为图像文件92
4.9.1准备工作92
4.9.2操作方法92
4.9.3工作原理93
4.10导出报表93
4.10.1准备工作94
4.10.2操作方法94
4.10.3工作原理97
4.11使用数据驱动页面和ArcPy制图模块构建地图册98
4.11.1准备工作98
4.11.2操作方法98
4.11.3工作原理102
4.12将地图文档发布为ArcGISServer服务102
4.12.1准备工作103
4.12.2操作方法104
4.12.3工作原理109
第5章使用脚本执行地理处理工具110
5.1引言110
5.2查找地理处理工具110
5.2.1准备工作111
5.2.2操作方法111
5.2.3工作原理113
5.3查看工具箱别名114
5.3.1准备工作114
5.3.2操作方法115
5.3.3工作原理116
5.4使用脚本执行地理处理工具116
5.4.1准备工作117
5.4.2操作方法117
5.4.3工作原理118
5.4.4拓展119
5.5将一个工具的输出作为另一个工具的输入119
5.5.1准备工作119
5.5.2操作方法120
5.5.3工作原理122
第6章创建自定义地理处理工具123
6.1引言123
6.2创建自定义地理处理工具123
6.2.1准备工作123
6.2.2操作方法124
6.2.3工作原理138
6.2.4拓展139
6.3创建Python工具箱139
6.3.1准备工作139
6.3.2操作方法139
6.3.3工作原理148
第7章查询和选择数据149
7.1引言149
7.2构造正确的属性查询语句149
7.2.1准备工作150
7.2.2操作方法150
7.2.3工作原理153
7.3创建要素图层和表视图154
7.3.1准备工作154
7.3.2操作方法155
7.3.3工作原理157
7.3.4拓展157
7.4使用SelectLayerbyAttribute工具选择要素和行158
7.4.1准备工作158
7.4.2操作方法159
7.4.3工作原理161
7.5使用SelectLayerbyLocation工具选择要素161
7.5.1准备工作161
7.5.2操作方法162
7.5.3工作原理165
7.6结合空间查询和属性查询选择要素165
7.6.1准备工作165
7.6.2操作方法166
7.6.3工作原理167
第8章在要素类和表中使用ArcPy数据访问模块168
8.1引言168
8.2使用SearchCursor检索要素类中的要素171
8.2.1准备工作171
8.2.2操作方法171
8.2.3工作原理173
8.3使用where子句筛选记录173
8.3.1准备工作173
8.3.2操作方法173
8.3.3工作原理174
8.4使用几何令牌改进游标性能174
8.4.1准备工作174
8.4.2操作方法175
8.4.3工作原理178
8.5使用InsertCursor插入行178
8.5.1准备工作178
8.5.2操作方法179
8.5.3工作原理183
8.6使用UpdateCursor更新行183
8.6.1准备工作183
8.6.2操作方法184
8.6.3工作原理187
8.7使用UpdateCursor删除行187
8.7.1准备工作187
8.7.2操作方法187
8.7.3工作原理189
8.8在编辑会话中插入和更新行189
8.8.1准备工作189
8.8.2操作方法190
8.8.3工作原理192
8.9读取要素类中的几何信息193
8.9.1准备工作193
8.9.2操作方法193
8.9.3工作原理195
8.10使用Walk()遍历目录195
8.10.1准备工作195
8.10.2操作方法195
8.10.3工作原理197
第9章获取GIS数据的列表和描述198
9.1引言198
9.2使用ArcPy列表函数199
9.2.1准备工作199
9.2.2操作方法199
9.2.3工作原理201
9.2.4拓展201
9.3获取要素类或表中的字段
列表202
9.3.1准备工作202
9.3.2操作方法202
9.3.3工作原理204
9.4使用Describe()函数返回要素类的描述性信息204
9.4.1准备工作204
9.4.2操作方法205
9.4.3工作原理207
9.5使用Describe()函数返回栅格图像的描述性信息208
9.5.1准备工作208
9.5.2操作方法208
9.5.3工作原理210
第10章使用Add-in定制ArcGIS界面211
10.1引言211
10.2下载并安装PythonAdd-in
Wizard212
10.2.1准备工作212
10.2.2操作方法212
10.2.3工作原理214
10.3创建按钮加载项和使用Python加载项模块214
10.3.1准备工作214
10.3.2操作方法215
10.3.3工作原理222
10.4安装和测试加载项222
10.4.1准备工作223
10.4.2操作方法223
10.4.3工作原理227
10.5创建工具加载项228
10.5.1准备工作228
10.5.2操作方法229
10.5.3工作原理232
10.5.4拓展233
第11章异常识别和错误处理234
11.1引言234
11.2默认的Python错误消息235
11.2.1准备工作235
11.2.2操作方法235
11.2.3工作原理236
11.3添加Python异常处理结构（try/except/else）236
11.3.1准备工作236
11.3.2操作方法237
11.3.3工作原理238
11.3.4拓展238
11.4使用GetMessages()函数获取工具消息238
11.4.1准备工作238
11.4.2操作方法239
11.4.3工作原理239
11.5根据严重性级别筛选工具消息239
11.5.1准备工作240
11.5.2操作方法240
11.5.3工作原理241
11.6测试和响应特定的错误消息241
11.6.1准备工作241
11.6.2操作方法242
11.6.3工作原理243
第12章使用Python实现ArcGIS的高级功能244
12.1引言244
12.2ArcGISRESTAPI入门245
12.2.1准备工作245
12.2.2操作方法245
12.2.3工作原理250
12.3使用Python构建HTTP请求并解析响应250
12.3.1准备工作251
12.3.2操作方法251
12.3.3工作原理254
12.4使用ArcGISRESTAPI和Python获取图层信息254
12.4.1准备工作254
12.4.2操作方法254
12.4.3工作原理256
12.5使用ArcGISRESTAPI和Python导出地图257
12.5.1准备工作257
12.5.2操作方法257
12.5.3工作原理259
12.6使用ArcGISRESTAPI和Python查询地图服务260
12.6.1准备工作260
12.6.2操作方法260
12.6.3工作原理264
12.7使用EsriWorldGeocodingService进行地理编码264
12.7.1准备工作264
12.7.2操作方法264
12.7.3工作原理266
12.8使用FieldMap和FieldMappings266
12.8.1准备工作266
12.8.2操作方法267
12.8.3工作原理273
12.9使用ValueTable将多值输入到工具中273
12.9.1准备工作274
12.9.2操作方法274
12.9.3工作原理275
第13章在ArcGISPro中使用Python276
13.1引言276
13.2在ArcGISPro中使用新的Python窗口277
13.3桌面ArcGIS与ArcGISPro中Python的编码差异280
13.4为独立的ArcGISPro脚本安装Python280
13.5将桌面ArcGIS中的Python代码转换到ArcGISPro中281
附录A自动化Python脚本282
A.1引言282
A.2在命令行中运行Python脚本283
A.2.1准备工作283
A.2.2操作方法283
A.2.3工作原理288
A.3使用sys.argv[]捕获命令行的输入288
A.3.1准备工作288
A.3.2操作方法289
A.3.3工作原理290
A.4添加Python脚本到批处理文件290
A.4.1准备工作290
A.4.2操作方法291
A.4.3工作原理291
A.4.4拓展291
A.5在规定的时间运行批处理文件291
A.5.1准备工作292
A.5.2操作方法292
A.5.3工作原理296
附录BGIS程序员不可不知的5个Python功能297
B.1引言297
B.2读取带分隔符的文本文件297
B.2.1准备工作298
B.2.2操作方法298
B.2.3工作原理300
B.2.4拓展301
B.3发送电子邮件301
B.3.1准备工作301
B.3.2操作方法302
B.3.3工作原理305
B.4检索FTP服务中的文件305
B.4.1准备工作306
B.4.2操作方法306
B.4.3工作原理309
B.4.4拓展309
B.5创建ZIP文件309
B.5.1准备工作310
B.5.2操作方法310
B.5.3工作原理312
B.5.4拓展313
B.6读取XML文件313
B.6.1准备工作313
B.6.2操作方法314
B.6.3工作原理315
B.6.4拓展316
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>基于ArcGIS的Python编程秘笈
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python从入门到精通
篇 基础知识
章 初识Python
视频讲解：68分钟
1.1 Python简介
1.1.1 什么是Python
1.1.2 Python的版本
1.1.3 Python都能做什么
1.2 搭建Python开发环境
1.2.1 开发环境概述
1.2.2 安装Python
1.2.3 个Python程序
1.2.4 运行已经编写好的.py文件
1.3 Python开发工具
1.3.1 使用自带的IDLE
1.3.2 常用的第三方开发工具
1.4 小结
第2章 Python语言基础
视频讲解：135分钟
2.1 Python语法特点
2.1.1 注释规则
2.1.2 代码缩进
2.1.3 编码规范
2.2 Python中的变量
2.2.1 保留字与标识符
2.2.2 理解Python中的变量
2.2.3 定义变量
2.3 基本数据类型
2.3.1 数字
2.3.2 字符串
2.3.3 布尔类型
2.3.4 数据类型转换
2.4 基本输入和输出
2.4.1 使用input()函数输入
2.4.2 使用print()函数输出
2.5 小结
第3章 运算符与表达式
视频讲解：64分钟
3.1 运算符
3.1.1 算术运算符
3.1.2 赋值运算符
3.1.3 比较（关系）运算符
3.1.4 逻辑运算符
3.1.5 位运算符
3.2 运算符的优先级
3.3 条件表达式
3.4 小结
第4章 流程控制语句
视频讲解：106分钟
4.1 程序结构
4.2 选择语句
4.2.1 最简单的if语句
4.2.2 if…else语句 61
4.2.3 if…elif…else语句
4.2.4 if语句的嵌套
4.3 循环语句
4.3.1 while循环
4.3.2 for循环
4.3.3 循环嵌套
4.4 break、continue和pass语句
4.4.1 break语句
4.4.2 continue语句
4.4.3 pass语句
4.5 小结
第5章 列表与元组
视频讲解：202分钟
5.1 序列概述
5.1.1 索引
5.1.2 切片
5.1.3 序列相加
5.1.4 乘法
5.1.5 检查某个元素是否是序列的
成员（元素）
5.1.6 计算序列的长度、优选值和最小值
5.2 列表
5.2.1 列表的创建和删除
5.2.2 访问列表元素
5.2.3 遍历列表
5.2.4 添加、修改和删除列表元素
5.2.5 对列表进行统计计算
5.2.6 对列表进行排序
5.2.7 列表推导式
5.2.8 二维列表
5.3 元组
5.3.1 元组的创建和删除
5.3.2 访问元组元素
5.3.3 修改元组
5.3.4 元组推导式
5.3.5 元组与列表的区别
5.4 小结
第6章 字典与集合
视频讲解：86分钟
6.1 字典
6.1.1 字典的创建和删除
6.1.2 访问字典
6.1.3 遍历字典
6.1.4 添加、修改和删除字典元素
6.1.5 字典推导式
6.2 集合
6.2.1 创建集合
6.2.2 向集合中添加和删除元素
6.2.3 集合的交集、并集和差集运算
6.3 小结
第7章 字符串
视频讲解：118分钟
7.1 字符串编码转换
7.1.1 使用encode()方法编码
7.1.2 使用decode()方法解码
7.2 字符串常用操作
7.2.1 拼接字符串
7.2.2 计算字符串的长度
7.2.3 截取字符串
7.2.4 分割、合并字符串
7.2.5 检索字符串
7.2.6 字母的大小写转换
7.2.7 去除字符串中的空格和
特殊字符
7.2.8 格式化字符串
7.3 小结
第2篇 进阶提高
第8章 Python中使用正则表达式
视频讲解：45分钟
8.1 正则表达式语法
8.1.1 行定位符
8.1.2 元字符
8.1.3 重复
8.1.4 字符类
8.1.5 排除字符
8.1.6 选择字符
8.1.7 转义字符
8.1.8 分组
8.1.9 在Python中使用正则
表达式语法
8.2 使用re模块实现正则表达式操作
8.2.1 匹配字符串
8.2.2 替换字符串
8.2.3 使用正则表达式分割字符串
8.3 小结
第9章 函数
视频讲解：118分钟
9.1 函数的创建和调用
9.1.1 创建一个函数
9.1.2 调用函数
9.2 参数传递
9.2.1 了解形式参数和实际参数
9.2.2 位置参数
9.2.3 关键字参数
9.2.4 为参数设置默认值
9.2.5 可变参数
9.3 返回值
9.4 变量的作用域
9.4.1 局部变量
9.4.2 全局变量
9.5 匿名函数
9.6 小结
0章 面向对象程序设计
视频讲解：110分钟
10.1 面向对象概述
10.1.1 对象
10.1.2 类
10.1.3 面向对象程序设计的特点
10.2 类的定义和使用
10.2.1 定义类
10.2.2 创建类的实例
10.2.3 创建__init__()方法
10.2.4 创建类的成员并访问
10.2.5 访问
10.3 属性
10.3.1 创建用于计算的属性
10.3.2 为属性添加安全保护机制
10.4 继承
10.4.1 继承的基本语法
10.4.2 方法重写
10.4.3 派生类中调用基类的__init__()方法
10.5 小结
1章 模块
视频讲解：105分钟
11.1 模块概述
11.2 自定义模块
11.2.1 创建模块
11.2.2 使用import语句导入模块
11.2.3 使用from…import语句
导入模块
11.2.4 模块搜索目录
11.3 Python中的包
11.3.1 Python程序的包结构
11.3.2 创建和使用包
11.3.3 以主程序的形式执行
11.4 引用其他模块
11.4.1 导入和使用标准模块
11.4.2 第三方模块的下载与安装
11.5 小结
2章 异常处理及程序调试
视频讲解：52分钟
12.1 异常概述
12.2 异常处理语句
12.2.1 try…except语句
12.2.2 try…except…else语句
12.2.3 try…except…finally语句
12.2.4 使用raise语句抛出异常
12.3 程序调试
12.3.1 使用自带的IDLE进行程序调试
12.3.2 使用assert语句调试程序
12.4 小结
3章 文件及目录操作
视频讲解：140分钟
13.1 基本文件操作
13.1.1 创建和打开文件
13.1.2 关闭文件
13.1.3 打开文件时使用with语句
13.1.4 写入文件内容
13.1.5 读取文件
13.2 目录操作
13.2.1 os和os.path模块
13.2.2 路径
13.2.3 判断目录是否存在
13.2.4 创建目录
13.2.5 删除目录
13.2.6 遍历目录
13.3 不错文件操作
13.3.1 删除文件
13.3.2 重命名文件和目录
13.3.3 获取文件基本信息
13.4 小结
4章 操作数据库
视频讲解：74分钟
14.1 数据库编程接口
14.1.1 连接对象
14.1.2 游标对象
14.2 使用SQLite
14.2.1 创建数据库文件
14.2.2 操作SQLite
14.3 使用MySQL
14.3.1 下载安装MySQL
14.3.2 安装PyMySQL
14.3.3 连接数据库
14.3.4 创建数据表
14.3.5 操作MySQL数据表
14.4 小结
第3篇 不错应用
5章 GUI界面编程
视频讲解：82分钟
15.1 初识GUI
15.1.1 什么是GUI
15.1.2 常用的GUI框架
15.1.3 安装wxPython
15.2 创建应用程序
15.2.1 创建一个wx.App的子类
15.2.2 直接使用wx.App
15.2.3 使用wx.Frame框架
15.3 常用控件
15.3.1 StaticText文本类
15.3.2 TextCtrl输入文本类
15.3.3 Button按钮类
15.4 BoxSizer布局
15.4.1 什么是BoxSizer
15.4.2 使用BoxSizer布局
15.5 事件处理
15.5.1 什么是事件
15.5.2 绑定事件
15.6 小结
6章 Pygame游戏编程
视频讲解：84分钟
16.1 初识Pygame
16.1.1 安装Pygame
16.1.2 Pygame常用模块
16.2 Pygame基本使用
16.3 开发Flappy Bird游戏
16.3.1 游戏简介
16.3.2 游戏分析
16.3.3 搭建主框架
16.3.4 创建小鸟类
16.3.5 创建管道类
16.3.6 计算得分
16.3.7 碰撞检测
16.4 小结
7章 网络爬虫开发
视频讲解：163分钟
17.1 初识网络爬虫
17.1.1 网络爬虫概述
17.1.2 网络爬虫的分类
17.1.3 网络爬虫的基本原理
17.2 网络爬虫的常用技术
17.2.1 Python的网络请求
17.2.2 请求headers处理
17.2.3 网络超时
17.2.4 代理服务
17.2.5 HTML解析之BeautifulSoup
17.3 网络爬虫开发常用框架
17.3.1 Scrapy爬虫框架
17.3.2 Crawley爬虫框架
17.3.3 PySpider爬虫框架
17.4 实战项目：快手爬票
17.4.1 快手爬票概述
17.4.2 搭建QT环境
17.4.3 主窗体设计
17.4.4 分析网页请求参数
17.4.5 下载站名文件
17.4.6 车票信息的请求与显示
17.5 小结
8章 使用进程和线程
视频讲解：95分钟
18.1 什么是进程
18.2 创建进程的常用方式
18.2.1 使用multiprocessing模块创建进程
18.2.2 使用Process子类创建进程
18.2.3 使用进程池Pool创建进程
18.3 进程间通信
18.3.1 队列简介
18.3.2 多进程队列的使用
18.3.3 使用队列在进程间通信
18.4 什么是线程
18.5 创建线程
18.5.1 使用threading模块创建线程
18.5.2 使用Thread子类创建线程
18.6 线程间通信
18.6.1 什么是互斥锁
18.6.2 使用互斥锁
18.6.3 使用队列在线程间通信
18.7 小结
9章 网络编程
视频讲解：60分钟
19.1 网络基础
19.1.1 为什么要使用通信协议
19.1.2 TCP/IP简介
19.1.3 UDP简介
19.1.4 Socket简介
19.2 TCP编程
19.2.1 创建TCP服务器
19.2.2 创建TCP客户端
19.2.3 执行TCP服务器和客户端
19.3 UDP编程
19.3.1 创建UDP 服务器
19.3.2 创建UDP 客户端
19.3.3 执行UDP服务器和客户端
19.4 小结
第20章 Web编程
视频讲解：93分钟
20.1 Web基础
20.1.1 HTTP协议
20.1.2 Web服务器
20.1.3 前端基础
20.1.4 静态服务器
20.2 WSGI接口
20.2.1 CGI简介
20.2.2 WSGI简介
20.2.3 定义WSGI接口
20.2.4 运行WSGI服务
20.3 Web框架
20.3.1 什么是Web框架
20.3.2 Python中常用的Web框架
20.4 小结
第21章 Flask框架
视频讲解：75分钟
21.1 Flask简介
21.1.1 安装虚拟环境
21.1.2 安装Flask
21.1.3 个Flask程序
21.2 Flask基础
21.2.1 开启调试模式
21.2.2 路由
21.2.3 静态文件
21.2.4 蓝图
21.3 模板
21.3.1 渲染模板
21.3.2 变量
21.3.3 控制结构
21.4 Web表单
21.4.1 CSRF保护和验证
21.4.2 表单类
21.4.3 把表单渲染成HTML
21.5 小结
第4篇 项目实战
第22章 e起去旅行网站
视频讲解：143分钟
22.1 系统功能设计
22.1.1 系统功能结构
22.1.2 系统业务流程
22.2 系统开发必备
22.2.1 系统开发环境
22.2.2 文件夹组织结构
22.3 数据库设计
22.3.1 数据库概要说明
22.3.2 数据表模型
22.3.3 数据表关系
22.4 前台用户模块设计
22.4.1 会员注册功能实现
22.4.2 会员登录功能实现
22.4.3 会员退出功能实现
22.5 前台首页模块设计
22.5.1 推荐景区功能实现
22.5.2 推荐地区功能实现
22.5.3 搜索景区功能实现
22.6 景区模块设计
22.6.1 查看景区功能实现
22.6.2 查看游记功能实现
22.6.3 收藏景区功能实现
22.6.4 查看收藏景区功能实现
22.7 关于我们模块设计
22.8 后台模块设计
22.8.1 管理员登录功能实现
22.8.2 景区管理功能实现
22.8.3 地区管理功能实现
22.8.4 游记管理功能实现
22.8.5 会员管理功能实现
22.8.6 日志管理功能实现
22.9 小结
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python从入门到精通
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Pythonによるデータ分析入門
訳者まえがき
まえがき
1章 はじめに
1.1 この本で説明する内容
1.2 なぜPythonはデータ分析者におすすめなのか
1.3 本書で扱う重要なPythonライブラリ
1.4 インストールとセットアップ
1.5 コミュニティとカンファレンス(会議)
1.6 この本の読み方の案内
1.7 謝辞
2章 Pythonによるデータ分析事例
2.1 データ分析の例:短縮URL 1.usa.govへの変換データ
2.2 データ分析の例:MovieLens 1M(映画評価データ)
2.3 データ分析の例:アメリカの赤ちゃんに名付けられた名前リスト(1880-2010)
2.4 この章のまとめと次のステップ
3章 IPython:対話的な開発環境
3.1 IPythonの基本
3.2 コマンド履歴の利用
3.3 オペレーティングシステムとの連携
3.4 ソフトウェア開発ツール
3.5 IPython HTMLノートブック
3.6 IPythonでの生産的コード開発に向けたヒント
3.7 高度なIPython機能
3.8 謝辞
4章 NumPyの基本: 配列とベクトル演算
4.1 NumPy ndarray:多次元配列オブジェクト
4.2 ユニバーサル関数:すべての配列要素への関数適用
4.3 ndarrayを用いたデータ処理
4.4 ndarrayのファイル入出力
4.5 行列計算
4.6 乱数生成
4.7 例:ランダムウォーク
5章 pandas入門
5.1 pandasのデータ構造
5.2 pandasの重要な機能
5.3 要約統計量の集計と計算
5.4 欠損値の取り扱い
5.5 階層型インデックス
5.6 pandasのその他のトピック
6章 データの読み込み、書き出しとファイル形式
6.1 テキスト形式のデータの読み書き
6.2 バイナリデータ形式
6.3 HTMLやWeb APIを用いた読み書き
6.4 データベースの読み書き
7章 データの管理:データのクリーニング、変換、マージ、再形成
7.1 データセットのマージ
7.2 再形成とピボット
7.3 データの変換
7.4 文字列操作
7.5 例:USDAの食品データベース
8章 プロットと可視化
8.1 matplotlib APIの概要
8.2 pandasのプロット関数
8.3 地図のプロット:ハイチ地震災害のデータ
8.4 Python可視化ツールのエコシステム
9章 データの集約とグループ演算
9.1 GroupByの仕組み
9.2 データの集約
9.3 グループ指向の演算と変形
9.4 ピボットテーブルとクロス集計
9.5 例:2012年の連邦選挙委員会のデータベース
10章 時系列データ
10.1 日付、時間のデータ型とツール
10.2 時系列の基本
10.3 日付範囲、頻度、シフト
10.4 タイムゾーンを扱う
10.5 期間を使った算術演算
10.6 再サンプリングと頻度変換
10.7 時系列のプロット
10.8 移動する窓関数
10.9 パフォーマンスとメモリ利用の注意点
11章 金融と経済データへの応用
11.1 データ変更に関するトピック
11.2 グループの変換と分析
11.3 その他の応用例
12章 NumPy:応用編
12.1 ndarrayオブジェクトの内部構造
12.2 配列操作:応用編
12.3 ブロードキャスト
12.4 ufuncの使い方:応用編
12.5 構造化配列とレコード配列
ほか
索引
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Pythonによるデータ分析入門
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>PythonによるWebスクレイピング
まえがき
第I部 スクレイパーを作る
1章 最初のWebスクレイパー
1.1 つなげる
1.2 はじめてのBeautifulSoup
2章 高度なHTMLパーシング
2.1 いつもハンマーが必要なわけではない
2.2 BeautifulSoupの別の使い方
2.3 正規表現
2.4 正規表現とBeautifulSoup
2.5 属性へのアクセス
2.6 ラムダ式
2.7 BeautifulSoupを超えて
3章 クローリングを開始する
3.1 単一ドメインを走査する
3.2 サイト全体をクローリング
3.3 インターネットをクローリング
3.4 Scrapyでクローリング
4章 APIを使う
4.1 APIはどう働くか
4.2 共通表記
4.3 レスポンス
4.4 Echo Nest
4.5 Twitter
4.6 Google API
4.7 JSONをパースする
4.8 すべてをホームに集める
4.9 APIについてさらに学ぶ
5章 データを格納する
5.1 メディアファイル
5.2 データをCSVに格納する
5.3 MySQL
5.4 メール
6章 文書を読む
6.1 文書エンコーディング
6.2 テキスト
6.3 CSV
6.4 PDF
6.5 Microsoft Wordと.docx
第II部 高度なスクレイピング
7章 汚れたデータをクリーニング
7.1 コードでのクリーニング
7.2 事実の後でクリーニング
8章 自然言語の読み書き
9章 フォームとログインでクロール
10章 JavaScriptのスクレイピング
11章 画像処理とテキスト認識
12章 スクレイピングの落とし穴を避ける
13章 Webサイトをスクレイパーでテストする
14章 リモートでスクレイピング
付録A Python入門
付録B インターネット入門
付録C Webスクレイピングの適法性と倫理
訳者あとがき
索引
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>PythonによるWebスクレイピング
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python物理建模初学者指南
版权
版权声明
内容提要
前言
第1章Python入门
第2章数据结构与程序控制
第3章数据输入、结果输出
第4章首次上机实验
第5章Python进阶
第6章第二次上机实验
第7章更多的技术
第8章第三次上机实验
继续努力
附录A　安装Python
附录B　错误和错误消息
附录C　比较Python 2与Python 3
附录D　深入学习
附录E　练习的解答
致谢
参考文献
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python物理建模初学者指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python机器学习（原书第2版)
译者序
关于作者
关于审校人员
前言
第1章　赋予计算机从数据中学习的能力 1
1.1　构建把数据转换为知识的智能机器 1
1.2　三种不同类型的机器学习 1
1.2.1　用有监督学习预测未来 2
1.2.2　用强化学习解决交互问题 3
1.2.3　用无监督学习发现隐藏结构 4
1.3　基本术语与符号 4
1.4　构建机器学习系统的路线图 6
1.4.1　预处理—整理数据 6
1.4.2　训练和选择预测模型 7
1.4.3　评估模型和预测新样本数据 7
1.5　用Python进行机器学习 7
1.5.1　从Python包索引安装Python和其他包 8
1.5.2　采用Anaconda Python和软件包管理器 8
1.5.3　科学计算、数据科学和机器学习软件包 8
1.6　小结 9
第2章　训练简单的机器学习分类算法 10
2.1　人工神经元—机器学习早期历史一瞥 10
2.1.1　人工神经元的正式定义 11
2.1.2　感知器学习规则 12
2.2　在Python中实现感知器学习算法 14
2.2.1　面向对象的感知器API 14
2.2.2　在鸢尾花数据集上训练感知器模型 16
2.3　自适应神经元和学习收敛 20
2.3.1　梯度下降为最小代价函数 21
2.3.2　用Python实现Adaline 22
2.3.3　通过调整特征大小改善梯度下降 25
2.3.4　大规模机器学习与随机梯度下降 27
2.4　小结 30
第3章　scikit-learn机器学习分类器一览 32
3.1　选择分类算法 32
3.2　了解scikit-learn软件库的第一步—训练感知器 32
3.3　基于逻辑回归的分类概率建模 37
3.3.1　逻辑回归的直觉与条件概率 37
3.3.2　学习逻辑代价函数的权重 39
3.3.3　把转换的Adaline用于逻辑回归算法 41
3.3.4　用scikit-learn训练逻辑回归模型 44
3.3.5　通过正则化解决过拟合问题 45
3.4　支持向量机的最大余量分类 47
3.4.1　最大边际的直觉 48
3.4.2　用松弛变量处理非线性可分 48
3.4.3　其他的scikit-learn 实现 50
3.5　用核支持向量机求解非线性问题 50
3.5.1　处理线性不可分数据的核方法 50
3.5.2　利用核技巧，发现高维空间的分离超平面 52
3.6　决策树学习 55
3.6.1　最大限度地获取信息—获得最大收益 55
3.6.2　构建决策树 58
3.6.3　通过随机森林组合多个决策树 61
3.7　K-近邻—一种懒惰的学习算法 63
3.8　小结 65
第4章　构建良好的训练集——预处理 66
4.1　处理缺失数据 66
4.1.1　识别数据中的缺失数值 66
4.1.2　删除缺失的数据 67
4.1.3　填补缺失的数据 68
4.1.4　了解scikit-learn评估器API 68
4.2　处理分类数据 69
4.2.1　名词特征和序数特征 69
4.2.2　映射序数特征 70
4.2.3　分类标签编码 70
4.2.4　为名词特征做热编码 71
4.3　分裂数据集为独立的训练集和测试集 73
4.4　把特征保持在同一尺度上 75
4.5　选择有意义的特征 76
4.5.1　L1和L2正则化对模型复杂度的惩罚 76
4.5.2　L2正则化的几何解释 77
4.5.3　L1正则化的稀疏解决方案 78
4.5.4　为序数特征选择算法 80
4.6　用随机森林评估特征的重要性 84
4.7　小结 87
第5章　通过降维压缩数据 88
5.1　用主成分分析实现无监督降维 88
5.1.1　主成分分析的主要步骤 88
5.1.2　逐步提取主成分 89
5.1.3　总方差和解释方差 91
5.1.4　特征变换 92
5.1.5　scikit-learn的主成分分析 93
5.2　基于线性判别分析的有监督数据压缩 96
5.2.1　主成分分析与线性判别分析 96
5.2.2　线性判别分析的内部逻辑 97
5.2.3　计算散布矩阵 97
5.2.4　在新的特征子空间选择线性判别式 99
5.2.5　将样本投影到新的特征空间 101
5.2.6　用scikit-learn实现的LDA 101
5.3　非线性映射的核主成分分析 102
5.3.1　核函数与核技巧 103
5.3.2　用Python实现核主成分分析 106
5.3.3　投影新的数据点 111
5.3.4　scikit-learn的核主成分分析 113
5.4　小结 114
第6章　模型评估和超参数调优的最佳实践 115
6.1　用管道方法简化工作流 115
6.1.1　加载威斯康星乳腺癌数据集 115
6.1.2　集成管道中的转换器和评估器 116
6.2　使用k折交叉验证评估模型的性能 118
6.2.1　抵抗方法 118
6.2.2　k折交叉验证 119
6.3　用学习和验证曲线调试算法 122
6.3.1　用学习曲线诊断偏差和方差问题 122
6.3.2　用验证曲线解决过拟合和欠拟合问题 124
6.4　通过网格搜索为机器学习模型调优 126
６.4.1　通过网格搜索为超参数调优 126
6.4.2　以嵌套式交叉验证来选择算法 127
6.5　比较不同的性能评估指标 128
6.5.1　含混矩阵分析 128
6.5.2　优化分类模型的准确度和召回率 129
6.5.3　绘制受试者操作特性图 130
6.5.4　多元分类评分指标 133
6.6　处理类的不平衡问题 133
6.7　小结 135
第7章　综合不同模型的组合学习 136
7.1　集成学习 136
7.2　采用多数票机制的集成分类器 139
7.2.1　实现基于多数票的简单分类器 139
7.2.2　用多数票原则进行预测 143
7.2.3　评估和优化集成分类器 145
7.3　套袋—基于导引样本构建分类器集成 149
7.3.1　套袋简介 150
7.3.2　应用套袋技术对葡萄酒数据集中的样本分类 151
7.4　通过自适应增强来利用弱学习者 153
7.4.1　增强是如何实现的 154
7.4.2　用scikit-learn实现AdaBoost 156
7.5　小结 158
第8章　应用机器学习于情感分析 159
8.1　为文本处理预备好IMDb电影评论数据 159
8.1.1　获取电影评论数据集 159
8.1.2　把电影评论数据预处理成更方便格式的数据 160
8.2　词袋模型介绍 161
8.2.1　把词转换成特征向量 161
8.2.2　通过词频逆反文档频率评估单词相关性 162
8.2.3　清洗文本数据 164
8.2.4　把文档处理为令牌 165
8.3　训练文档分类的逻辑回归模型 166
8.4　处理更大的数据集—在线算法和核心学习 168
8.5　具有潜在狄氏分配的主题建模 171
8.5.1　使用LDA分解文本文档 171
8.5.2　LDA与scikit-learn 172
8.6　小结 174
第9章　将机器学习模型嵌入网络应用 175
9.1　序列化拟合scikit-learn评估器 175
9.2　搭建SQLite数据库存储数据 177
9.3　用Flask开发网络应用 179
9.3.1　第一个Flask网络应用 179
9.3.2　表单验证与渲染 181
9.4　将电影评论分类器转换为网络应用 184
9.4.1　文件与文件夹—研究目录树 185
9.4.2　实现主应用app.py 186
9.4.3　建立评论表单 188
9.4.4　创建一个结果页面的模板 189
9.5　在面向公众的服务器上部署网络应用 190
9.5.1　创建PythonAnywhere账户 190
9.5.2　上传电影分类应用 191
9.5.3　更新电影分类器 191
9.6　小结 193
第10章　用回归分析预测连续目标变量 194
10.1　线性回归简介 194
10.1.1　简单线性回归 194
10.1.2　多元线性回归 195
10.2　探索住房数据集 196
10.2.1　加载住房数据 196
10.2.2　可视化数据集的重要特点 197
10.2.3　用关联矩阵查看关系 198
10.3　普通最小二乘线性回归模型的实现 200
10.3.1　用梯度下降方法求解回归参数 200
10.3.2　通过scikit-learn估计回归模型的系数 203
10.4　利用RANSAC拟合稳健的回归模型 205
10.5　评估线性回归模型的性能 206
10.6　用正则化方法进行回归 209
10.7　将线性回归模型转换为曲线—多项式回归 210
10.7.1　用scikit-learn增加多项式的项 210
10.7.2　为住房数据集中的非线性关系建模 211
10.8　用随机森林处理非线性关系 214
10.8.1　决策树回归 214
10.8.2　随机森林回归 215
10.9　小结 217
第11章　用聚类分析处理无标签数据 218
11.1　用k-均值进行相似性分组 218
11.1.1　scikit-learn的k-均值聚类 218
11.1.2　k-均值++—更聪明地设置初始聚类中心的方法 221
11.1.3　硬聚类与软聚类 222
11.1.4　用肘法求解最佳聚类数 223
11.1.5　通过轮廓图量化聚类质量 224
11.2　把集群组织成有层次的树 228
11.2.1　以自下而上的方式聚类 228
11.2.2　在距离矩阵上进行层次聚类 229
11.2.3　热度图附加树状图 232
11.2.4　scikit-learn凝聚聚类方法 233
11.3　通过DBSCAN定位高密度区域 233
11.4　小结 237
第12章　从零开始实现多层人工神经网络 238
12.1　用人工神经网络为复杂函数建模 238
12.1.1　单层神经网络扼要重述 239
12.1.2　介绍多层神经网络体系 240
12.1.3　利用正向传播激活神经网络 242
12.2　识别手写数字 243
12.2.1　获取MNIST数据集 243
12.2.2　实现一个多层感知器 247
12.3　训练人工神经网络 256
12.3.1　逻辑成本函数的计算 256
12.3.2　开发反向传播的直觉 257
12.3.3　通过反向传播训练神经网络 258
12.4　关于神经网络的收敛性 260
12.5　关于神经网络实现的最后几句话 261
12.6　小结 261
第13章　用TensorFlow并行训练神经网络 262
13.1　TensorFlow与模型训练的性能 262
13.1.1　什么是TensorFlow 263
13.1.2　如何学习TensorFlow 264
13.1.3　学习TensorFlow的第一步 264
13.1.4　使用阵列结构 266
13.1.5　用TensorFlow的底层API开发简单的模型 267
13.2　用TensorFlow的高级 API高效率地训练神经网络 270
13.2.1　用TensorFlow的Layers API构建多层神经网络 270
13.2.2　用Keras研发多层神经网络 274
13.3　多层网络激活函数的选择 277
13.3.1　逻辑函数回顾 278
13.3.2　在多元分类中调用softmax函数评估类别概率 279
13.3.3　利用双曲正切拓宽输出范围 280
13.3.4　修正线性单元激活函数 281
13.4　小结 282
第14章　深入探讨TensorFlow的工作原理 283
14.1　TensorFlow的主要功能 283
14.2　TensorFlow 的排序与张量 284
14.3　了解TensorFlow的计算图 285
14.4　TensorFlow中的占位符 287
14.4.1　定义占位符 287
14.4.2　为占位符提供数据 287
14.4.3　用batchsizes 为数据阵列定义占位符 288
14.5　TensorFlow中的变量 289
14.5.1　定义变量 289
14.5.2　初始化变量 290
14.5.3　变量范围 291
14.5.4　变量复用 292
14.6　建立回归模型 295
14.7　在TensorFlow计算图中用张量名执行对象 297
14.8　在TensorFlow中存储和恢复模型 298
14.9　把张量转换成多维数据阵列 300
14.10　利用控制流构图 303
14.11　用TensorBoard可视化图 305
14.12　小结 308
第15章　深度卷积神经网络图像识别 309
15.1　构建卷积神经网络的模块 309
15.1.1　理解CNN与学习特征的层次 309
15.1.2　执行离散卷积 310
15.1.3　子采样 316
15.2　拼装构建CNN 317
15.2.1　处理多个输入或者彩色频道 317
15.2.2　通过淘汰正则化神经网络 319
15.3　用TensorFlow实现深度卷积神经网络 321
15.3.1　多层CNN体系结构 321
15.3.2　加载和预处理数据 322
15.3.3　用TensorFlow的低级API实现CNN模型 323
15.3.4　用TensorFlow 的Layers API实现CNN 332
15.4　小结 336
第16章　用递归神经网络为序列数据建模 338
16.1　序列数据 338
16.1.1　序列数据建模—顺序很重要 338
16.1.2　表示序列 339
16.1.3　不同类别的序列建模 339
16.2　用于序列建模的RNN 340
16.2.1　理解RNN的结构和数据流 340
16.2.2　在RNN中计算激活值 341
16.2.3　长期交互学习的挑战 343
16.2.4　LSTM单元 343
16.3　用TensorFlow实现多层RNN序列建模 345
16.4　项目一：利用多层RNN对IMDb电影评论进行情感分析 345
16.4.1　准备数据 345
16.4.2　嵌入式 348
16.4.3　构建一个RNN模型 350
16.4.4　情感RNN类构造器 350
16.4.5　build方法 351
16.4.6　train方法 353
16.4.7　predict方法 354
16.4.8　创建SentimentRNN类的实例 355
16.4.9　训练与优化情感分析RNN模型 355
16.5　项目二：用TensorFlow实现字符级 RNN语言建模 356
16.5.1　准备数据 356
16.5.2　构建字符级RNN语言模型 359
16.5.3　构造器 359
16.5.4　build方法 360
16.5.5　train方法 362
16.5.6　sample方法 362
16.5.7　创建和训练CharRNN模型 364
16.5.8　处于取样状态的CharRNN模型 364
16.6　总结 365
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python机器学习（原书第2版)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python程序设计入门到实战
第1章程序设计所需要的基础知识1
1—1什么是程序设计语言2
1—2程序设计的重要性4
1—3最 受欢迎的程序设计语言5
1—4学习程序设计需要知道的逻辑概念6
1—5本书的结构及内容说明9
第2章快速了解Python程序设计语言11
2—1Python简介12
2—1—1Python的历史沿革12
2—1—2深受欢迎的Python程序设计语言12
2—1—3Python程序设计基本元素13
2—1—4Python程序易用性示范17
2—2学习Python的重要性19
2—3Python 2和Python 3的差异20
2—4Python的应用领域21
2—5习题22
第3章Python程序设计环境的安装与设置23
3—1马上使用Python编写程序24
3—1—1Windows用户24
3—1—2MacOS及Linux用户24
3—1—3在交互式界面中测试你的Python25
3—2安装Python 3.x窗口环境27
3—2—1Windows的IDLE窗口环境27
3—2—2Microsoft Python Tools for Visual Studio32
3—2—3Mac OS的IDLE窗口环境34
3—3简单且易上手的iPython Notebook以及jupyter38
3—3—1安装jupyter38
3—3—2在命令提示符中执行iPython40
3—3—3执行浏览器版本的iPython Notebook42
3—4程序代码编辑器的介绍46
3—4—1Notepad++的安装与应用46
3—4—2TextWrangler的安装与应用50
3—5在Linux虚拟机中运行Python52
3—5—1安装VMWare Workstation Player52
3—5—2创建Ubuntu 14 Workstation虚拟机54
3—5—3在Ubuntu 16 Workstation中运行Python60
3—6习题62
第4章Python软件包管理与在线资源63
4—1Python软件包管理工具64
4—1—1easy_install的安装与使用64
4—1—2pip安装与使用65
4—2Python虚拟环境的设置66
4—2—1在Mac OS中安装Virtualenv66
4—2—2在Windows中安装Virtualenv67
4—3高级软件包安装实践68
4—3—1Anaconda软件包介绍68
4—3—2在Windows中安装Anaconda、NumPy以及Matplotlib69
4—3—3在MacOS中安装Anaconda、NumPy以及Matplotlib72
4—3—4使用Matplotlib绘制精美数学图形75
4—4Python的在线资源与支持77
4—4—1PyPI网站介绍77
4—4—2在PyPI中寻找可以用来产生数独题目的软件包79
4—4—3运用找到的软件包设计程序81
4—5习题81
第5章开始设计Python程序82
5—1jupyter的介绍与使用83
5—1—1iPython运行环境的介绍83
5—1—2Python2中文编码的设置84
5—1—3iPython Notebook的介绍与使用86
5—2程序的构想与实现89
5—2—1理清问题的需求89
5—2—2定义要存储的数据及其相关类型90
5—2—3设计算法与绘制流程图91
5—2—4动手编写程序92
5—2—5简易调试方法95
5—3猜数字游戏95
5—3—1问题需求95
5—3—2定义要存储的数据及其相关的类型95
5—3—3设计算法与绘制流程图96
5—3—4完成程序97
5—4习题98
第6章Python程序设计语言速览99
6—1常数、变量和数据类型100
6—1—1常数和变量的差异100
6—1—2变量的命名原则102
6—1—3程序设计语言的保留字103
6—1—4基本数据类型103
6—2Python表达式106
6—2—1算术表达式106
6—2—2关系表达式107
6—2—3逻辑表达式108
6—3列表list、元组tuple、字典dict与集合set类型109
6—3—1list列表与tuple元组109
6—3—2list的操作应用111
6—3—3dict字典113
6—3—4set集合115
6—3—5查看两个变量是否为同一个内存地址115
6—4内建函数和自定义函数117
6—4—1内建函数117
6—4—2自定义函数119
6—4—3import与自定义模块122
6—5单词出现频率的统计程序123
6—6习题124
第7章程序控制流程125
7—1判断语句的应用126
7—1—1if／elif／else126
7—1—2嵌套if／elif／else127
7—1—3单行的if／else语句128
7—2循环语句128
7—2—1基本循环语句128
7—2—2嵌套循环130
7—2—3break和continue的运用131
7—2—4迭代器132
7—3例外处理134
7—3—1例外处理的基本概念134
7—3—2try／except135
7—3—3处理不同的例外种类136
7—4程序流程控制的应用137
7—5习题142
第8章文件、数据文件与数据库的操作143
8—1文件与目录的操作144
8—1—1os.path144
8—1—2glob145
8—1—3os.walk146
8—1—4os.system和shutil148
8—2数据文件的操作149
8—2—1文本文件的读取与写入149
8—2—2文本文件的应用154
8—2—3读取JSON格式的数据158
8—3Python与数据库161
8—3—1安装Firefox的SQLite Manager附加组件162
8—3—2创建简易数据库164
8—3—3Python存取数据库的方法167
8—4数据库应用程序168
8—5习题173
第9章Python提取网站数据——基础篇174
9—1因特网程序设计基础175
9—1—1因特网与URL175
9—1—2解析网址178
9—1—3提取网页数据182
9—1—4使用正则表达式提取网页内的电子邮件账号183
9—2网页分析与应用186
9—2—1HTML网页格式简介186
9—2—2安装BeautifulSoup190
9—2—3使用BeautifulSoup提取信息192
9—2—4进一步分析网页的内容195
9—3网络应用程序198
9—3—1将数据存储为文件198
9—3—2以网页的形式整理数据200
9—3—3在本地建立网页应用203
9—4习题205
第10章Python网页数据提取的实践206
10—1把网页数据存储到数据库中207
10—1—1网页数据的运用模式207
10—1—2把数据存储到SQLite208
10—1—3把数据导入到网络MySQL数据库中213
10—1—4编写本地程序读取网络MySQL数据库中的数据217
10—1—5使用PHP建立信息提供网站219
10—2自动提取数据221
10—2—1检测网页内容是否曾经更新222
10—2—2Windows自动化设置226
10—2—3MacOS自动化设置230
10—3通过Python操作浏览器230
10—3—1安装Selenium231
10—3—2使用Selenium操作Firefox233
10—3—3通过Selenium读取网页信息235
10—3—4登录会员网站的方法237
10—4习题240
第11章Firebase在线实时数据库操作实践241
11—1Firebase数据库简介242
11—1—1NoSQL数据库概念242
11—1—2注册Firebase账号242
11—1—3连接Firebase和Python245
11—2Python存取Firebase数据库的实例247
11—2—1Firebase网络数据库的操作247
11—2—2使用Python写入Firebase数据库249
11—2—3使用Python读取Firebase数据库252
11—2—4整合范例254
11—3网页连接Firebase数据库258
11—3—1Firebase Hosting免费主机空间的设置258
11—3—2使用JavaScript读取Firebase数据库261
11—3—3Firebase网页设计262
11—4Firebase数据库的安全验证265
11—4—1Firebase安全性的设置265
11—4—2Email／Password机制266
11—4—3Python端的设置268
11—4—4将具有用户验证功能的数据写入程序269
11—5习题271
第12章Python应用实例272
12—1Facebook Graph API的介绍与使用273
12—1—1安装facebook—sdk273
12—1—2Facebook Graph简介273
12—1—3Python程序存取Facebook设置279
12—1—4通过Python“发表”文章281
12—1—5使用程序帮忙“点赞”283
12—1—6下载在Facebook中的照片283
12—2照片文件的管理285
12—2—1照片文件的分析285
12—2—2找出重复的照片文件287
12—2—3将照片文件重新编号290
12—3找出网络中最常被使用的中文词291
12—3—1搜集新闻文章291
12—3—2安装中文分词模块jieba292
12—3—3找出文章中最常被使用的词汇292
12—4习题294
第13章Python绘图与图像处理295
13—1Matplotlib的安装与使用296
13—1—1Matplotlib介绍296
13—1—2使用Matplotlib画图297
13—1—3统计图的绘制300
13—1—4数学函数图形的绘制306
13—2pillow的安装与使用309
13—2—1pillow简介310
13—2—2读取图像文件的信息310
13—2—3简易图像文件处理311
13—3批量处理图像文件314
13—3—1为自己的照片加上专属标志以及批量调整照片尺寸314
13—3—2中文字体的处理与应用316
13—3—3为图像文件加入水印功能319
13—4习题321
第14章用Python打造特色网站322
14—1使用Python编写一个网站程序323
14—1—1网站原理323
14—1—2网站程序的输入与输出324
14—1—3使用Python编写的网站框架325
14—2Django简介328
14—2—1下载与安装Django328
14—2—2Django目录及重要配置文件解说330
14—2—3前端与后端的搭配332
14—2—4建立你的第一个Django网站333
14—3认识Django Framework的架构334
14—3—1Django的MTV架构334
14—3—2URL的对应方法详解335
14—3—3模板的使用336
14—3—4使用静态文件夹存取文件339
14—4Django与数据库340
14—4—1在Django中使用数据库341
14—4—2建立模型342
14—4—3admin后台管理343
14—4—4读取数据库中的数据345
14—4—5短网址转址网站模板的内容347
14—5习题350
第15章程序设计所需要的基础知识351
15—1网站的测试与调整352
15—1—1上线前的前置工作352
15—1—2网站的部署策略353
15—1—3网址的购买和选用353
15—2网站开发环境的部署354
15—2—1利用ngrok随时连线你的网站354
15—2—2申请Cloud9 IDE账号356
15—2—3建立Cloud9开发环境357
15—2—4测试与执行Django网站361
15—3云虚拟机部署方法365
15—3—1DigitalOcean简介365
15—3—2创建Ubuntu虚拟机369
15—3—3安装、设置Apache服务器和Django Framework373
15—3—4上传文件和网站上线374
15—4习题378
第16章提升Python能力的下一步379
16—1程序代码的版本控制380
16—1—1Git简介380
16—1—2Git实践操作382
16—1—3BitBucket的申请使用387
16—1—4整合BitBucket和Cloud9390
16—2云APP主机的部署392
16—2—1Heroku简介392
16—2—2创建Heroku账号393
16—2—3整合Cloud9和Heroku395
16—2—4在Heroku上部署Django网站396
16—3提升学习的下一步402
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python程序设计入门到实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>蟒蛇
序前言
第一章概论1
第二章蟒蛇及其产业10
第一节古老的爬行动物——蟒蛇11
第二节处于濒危状态的蟒蛇16
第三节蟒蛇保护的国际组织及其国际贸易规则21
第四节蟒蛇的人工养殖业24
第五节宠物蟒的国际市场28
第六节蟒蛇作为外来物种的入侵与扩散31
第三章海南蟒蛇的今昔37
第一节西方文献中的海南岛39
第二节西方文献中的海南蟒蛇43
第三节海南岛的蟒蛇栖息地48
第四节海南岛蟒蛇的处境57
第四章蟒蛇的基础知识60
第一节蟒蛇的分类地位61
第二节蟒蛇的生物学67
第三节蟒蛇的外部特征74
第四节蟒蛇器官的组织解剖特征91
第五章蟒蛇的胚胎发育106
第一节蟒蛇生殖系统的特性107
第二节蟒蛇胚胎早期的发育112
第三节蟒蛇胚胎晚期的发育120
第六章蟒蛇的骨骼与肌肉127
第一节蟒蛇的骨架和骨骼数量128
第二节蟒蛇的头骨和牙齿133
第三节蟒蛇的椎骨和肋骨138
第四节蟒蛇的肌肉系统143
第七章蟒蛇的遗传多样性147
第一节蟒蛇的进化与生存优势148
第二节岩蟒种群间的遗传多样性154
第三节蟒蛇种群内部的遗传多态157
第四节养殖蟒蛇和野生蟒蛇的差异168
第八章蟒蛇研究进展175
第一节蟒科与蚺科的物种177
第二节蟒与蚺的主要区别182
第三节蟒与岩蟒183
第四节蟒蛇的生理生化191
第五节蟒蛇的野外跟踪技术196
第六节蟒蛇的线粒体基因组197
第九章海南的蟒蛇分布207
第一节蟒蛇野外调查的困难210
第二节海南岛野生蟒蛇的数量215
第三节野生蟒蛇的困境228
第四节野生蟒蛇救助与放归的限制因素234
第十章蟒蛇的繁殖习性239
第一节野生蟒蛇的繁殖242
第二节蟒蛇的人工繁育249
第三节突变个体的繁殖260
第四节种蟒的选种选配265
第十一章野生蟒蛇的保护268
第一节中国的野生动物保护法规269
第二节野生蟒蛇种群动态的理论271
第三节野生蟒蛇种群动态研究技术281
第四节野生蟒蛇保护方法286
第五节蟒蛇的身份识别与野外跟踪288
第六节野生蟒蛇的放归和监管291
第十二章蟒蛇的养殖技术295
第一节蟒蛇养殖概论297
第二节抓放蟒蛇301
第三节散养蟒蛇307
第四节笼养蟒蛇309
第五节蟒蛇的饲料与消化代谢314
第六节野生蟒蛇的养殖320
第十三章蟒蛇的生长发育324
第一节蟒蛇的体温与环境温度329
第二节蟒蛇生长发育的研究技术331
第三节野生蟒蛇的生长发育335
第四节人工养殖蟒蛇的生长发育338
第五节野生与人工养殖蟒蛇的比较349
第十四章蟒蛇的常见病351
第一节蟒蛇的常见病及其病因352
第二节蟒蛇常见病防治362
第三节蟒蛇细菌性肠炎的微生物种属369
第四节蟒蛇肺炎的治疗372
参考文献375
索引381
Index385
图片说明389
致谢391
作者简介393
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>蟒蛇
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>OpenCV算法精解：基于Python与C++
1  OpenCV入门
1.1 初识OpenCV
1.1.1 OpenCV的模块简介
1.1.2 OpenCV 2.4.13与3.2版本的区别
1.2 部署OpenCV
1.2.1 在Visual Studio 2015中 配置OpenCV
1.2.2 OpenCV 2.X C++ API的第一个示例
1.2.3 OpenCV 3.X C++ API的第一个示例
1.2.4 在Anaconda 2中配置OpenCV
1.2.5 OpenCV 2.X Python API的第一个示例
1.2.6 OpenCV 3.X Python API的第一个示例
2  图像数字化
2.1 认识Numpy中的ndarray
2.1.1 构造ndarray对象
2.1.2 访问ndarray中的值
2.2 认识OpenCV中的Mat类
2.2.1 初识Mat
2.2.2 构造单通道Mat对象
2.2.3 获得单通道Mat的基本信息
2.2.4 访问单通道Mat对象中的值
2.2.5 向量类Vec
2.2.6 构造多通道Mat对象
2.2.7 访问多通道Mat对象中的值
2.2.8 获得Mat中某一区域的值
2.3 矩阵的运算
2.3.1 加法运算
2.3.2 减法运算
2.3.3 点乘运算
2.3.4 点除运算
2.3.5 乘法运算
2.3.6 其他运算
2.4 灰度图像数字化
2.4.1 概述
2.4.2 将灰度图像转换为Mat
2.4.3 将灰度图转换为ndarray
2.5 彩色图像数字化
2.5.1 将RGB彩色图像转换为多通道Mat
2.5.2 将RGB彩色图转换为三维的ndarray
2.6 参考文献
3  几何变换
3.1 仿射变换
3.1.1 平移
3.1.2 放大和缩小
3.1.3 旋转
3.1.4 计算仿射矩阵
3.1.5 插值算法
3.1.6 Python实现
3.1.7 C++实现
3.1.8 旋转函数rotate（OpenCV3.X新特性）
3.2 投影变换
3.2.1 原理详解
3.2.2 Python实现
3.2.3 C++实现
3.3 极坐标变换
3.3.1 原理详解
3.3.2 Python实现
3.3.3 C++实现
3.3.4 线性极坐标函数linearPolar（OpenCV 3.X新特性）
3.3.5 对数极坐标函数logPolar（OpenCV 3.X新特性）
3.4 参考文献
4  对比度增强
4.1 灰度直方图
4.1.1 什么是灰度直方图
4.1.2 Python及C++实现
4.2 线性变换
4.2.1 原理详解
4.2.2 Python实现
4.2.3 C++实现
4.3 直方图正规化
4.3.1 原理详解
4.3.2 Python实现
4.3.3 C++实现
4.3.4 正规化函数normalize
4.4 伽马变换
4.4.1 原理详解
4.4.2 Python实现
4.4.3 C++实现
4.5 全局直方图均衡化
4.5.1 原理详解
4.5.2 Python实现
4.5.3 C++实现
4.6 限制对比度的自适应直方图均衡化
4.6.1 原理详解
4.6.2 代码实现
4.7 参考文献
5  图像平滑
5.1 二维离散卷积
5.1.1 卷积定义及矩阵形式
5.1.2 可分离卷积核
5.1.3 离散卷积的性质
5.2 高斯平滑
5.2.1 高斯卷积核的构建及分离性
5.2.2 高斯卷积核的二项式近似
5.2.3 Python实现
5.2.4 C++实现
5.3 均值平滑
5.3.1 均值卷积核的构建及分离性
5.3.2 快速均值平滑
5.3.3 Python实现
5.3.4 C++实现
5.4 中值平滑
5.4.1 原理详解
5.4.2 Python实现
5.4.3 C++实现
5.5 双边滤波
5.5.1 原理详解
5.5.2 Python实现
5.5.3 C++实现
5.6 联合双边滤波
5.6.1 原理详解
5.6.2 Python实现
5.6.3 C++实现
5.7 导向滤波
5.7.1 原理详解
5.7.2 Python实现
5.7.3 快速导向滤波
5.7.4 C++实现
5.8 参考文献
6  阈值分割
6.1 方法概述
6.1.1 全局阈值分割
6.1.2 阈值函数threshold（OpenCV3.X新特性）
6.1.3 局部阈值分割
6.2 直方图技术法
6.2.1 原理详解
6.2.2 Python实现
6.2.3 C++实现
6.3 熵算法
6.3.1 原理详解
6.3.2 代码实现
6.4 Otsu阈值处理
6.4.1 原理详解
6.4.2 Python实现
6.4.3 C++实现
6.5 自适应阈值
6.5.1 原理详解
6.5.2 Python实现
6.5.3 C++实现
6.6 二值图的逻辑运算
6.6.1 “与”和“或”运算
6.6.2 Python实现
6.6.3 C++实现
6.7 参考文献
7  形态学处理
7.1 腐蚀
7.1.1 原理详解
7.1.2 实现代码及效果
7.2 膨胀
7.2.1 原理详解
7.2.2 Python实现
7.2.3 C++实现
7.3 开运算和闭运算
7.3.1 原理详解
7.3.2 Python实现
7.4 其他形态学处理操作
7.4.1 顶帽变换和底帽变换
7.4.2 形态学梯度
7.4.3 C++实现
8  边缘检测
8.1 Roberts算子
8.1.1 原理详解
8.1.2 Python实现
8.1.3 C++实现
8.2 Prewitt边缘检测
8.2.1 Prewitt算子及分离性
8.2.2 Python实现
8.2.3 C++实现
8.3 Sobel边缘检测
8.3.1 Sobel算子及分离性
8.3.2 构建高阶的Sobel算子
8.3.3 Python实现
8.3.4 C++实现
8.4 Scharr算子
8.4.1 原理详解
8.4.2 Python实现
8.4.3 C++实现
8.5 Kirsch算子和Robinson算子
8.5.1 原理详解
8.5.2 代码实现及效果
8.6 Canny边缘检测
8.6.1 原理详解
8.6.2 Python实现
8.6.3 C++实现
8.7 Laplacian算子
8.7.1 原理详解
8.7.2 Python实现
8.7.3 C++实现
8.8 高斯拉普拉斯（LoG）边缘检测
8.8.1 原理详解
8.8.2 Python实现
8.8.3 C++实现
8.9 高斯差分（DoG）边缘检测
8.9.1 高斯拉普拉斯与高斯差分的关系
8.9.2 Python实现
8.9.3 C++实现
8.10 Marr-Hildreth边缘检测
8.10.1 算法步骤详解
8.10.2 Pyton实现
8.10.3 C++实现
8.11 参考文献
9  几何形状的检测和拟合
9.1 点集的最小外包
9.1.1 最小外包旋转矩形
9.1.2 旋转矩形的4个顶点（OpenCV 3.X新特性）
9.1.3 最小外包圆
9.1.4 最小外包直立矩形（OpenCV 3.X新特性）
9.1.5 最小凸包
9.1.6 最小外包三角形（ OpenCV 3.X新特性）
9.2 霍夫直线检测
9.2.1 原理详解
9.2.2 Python实现
9.2.3 C++实现
9.3 霍夫圆检测
9.3.1 标准霍夫圆检测
9.3.2 Python实现
9.3.3 基于梯度的霍夫圆检测
9.3.4 基于梯度的霍夫圆检测函数HoughCircles
9.4 轮廓
9.4.1 查找、绘制轮廓
9.4.2 外包、拟合轮廓
9.4.3 轮廓的周长和面积
9.4.4 点和轮廓的位置关系
9.4.5 轮廓的凸包缺陷
9.5 参考文献
10  傅里叶变换
10.1 二维离散的傅里叶（逆）变换
10.1.1 数学理解篇
10.1.2 快速傅里叶变换
10.1.3 C++实现
10.1.4 Python实现
10.2 傅里叶幅度谱与相位谱
10.2.1 基础知识
10.2.2 Python实现
10.2.3 C++实现
10.3 谱残差显著性检测
10.3.1 原理详解
10.3.2 Python实现
10.3.3 C++实现
10.4 卷积与傅里叶变换的关系
10.4.1 卷积定理
10.4.2 Python实现
10.5 通过快速傅里叶变换计算卷积
10.5.1 步骤详解
10.5.2 Python实现
10.5.3 C++实现
10.6 参考文献
11  频率域滤波
11.1 概述及原理详解
11.2 低通滤波和高通滤波
11.2.1 三种常用的低通滤波器
11.2.2 低通滤波的C++实现
11.2.3 低通滤波的Python实现
11.2.4 三种常用的高通滤波器
11.3 带通和带阻滤波
11.3.1 三种常用的带通滤波器
11.3.2 三种常用的带阻滤波器
11.4 自定义滤波器
11.4.1 原理详解
11.4.2 C++实现
11.5 同态滤波
11.5.1 原理详解
11.5.2 Python实现
11.6 参考文献
12  色彩空间
12.1 常见的色彩空间
12.1.1 RGB色彩空间
12.1.2 HSV色彩空间
12.1.3 HLS色彩空间
12.2 调整彩色图像的饱和度和亮度
12.2.1 Python实现
12.2.2 C++实现
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>OpenCV算法精解：基于Python与C++
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>零基础入门学习Python
第1章  就这么愉快地开始吧 1
视频讲解：13分钟（1个）钟
1.1  获得Python 1
1.2  从IDLE启动Python 2
1.3  失败的尝试 3
1.4  尝试点儿新的东西 3
1.5  为什么会这样 4
第2章  用Python设计第一个游戏 5
视频讲解：24分钟（1个）钟
2.1  第一个小游戏 5
2.2  缩进 6
2.3  BIF 7
第3章  成为高手前必须知道的一些基础知识 9
视频讲解：82分钟（4个）钟
3.1  变量 9
3.2  字符串 10
3.3  原始字符串 11
3.4  长字符串 12
3.5  改进我们的小游戏 13
3.6  条件分支 14
3.7  初识循环 15
3.8  引入外援 16
3.9  闲聊数据类型 17
3.9.1  整型 18
3.9.2  浮点型 18
3.9.3  布尔类型 19
3.9.4  类型转换 19
3.9.5  获得关于类型的信息 20
3.10  常用操作符 21
3.10.1  算术操作符 21
3.10.2  优先级问题 22
3.10.3  比较操作符 23
3.10.4  逻辑操作符 23
第4章  了不起的分支和循环 25
视频讲解：42分钟（3个）钟
4.1  分支和循环 25
4.2  快速上手 27
4.3  避免“悬挂else”问题 28
4.4  条件表达式（三元操作符） 29
4.5  断言 31
4.6  while循环语句 31
4.7  for循环语句 32
4.8  break语句 34
4.9  continue语句 35
4.10  else语句 35
第5章  列表、元组和字符串 37
视频讲解：137分钟（7个）钟
5.1  列表：一个“打了激素”的数组 37
5.1.1  创建列表 37
5.1.2  向列表添加元素 38
5.1.3  从列表中获取元素 39
5.1.4  从列表删除元素 40
5.1.5  列表切片 42
5.1.6  进阶玩法 43
5.1.7  一些常用操作符 44
5.1.8  列表的小伙伴们 46
5.2  元组：戴上了“枷锁”的列表 47
5.2.1  创建和访问一个元组 47
5.2.2  更新和删除元组 49
5.3  字符串 50
5.3.1  各种内置方法 51
5.3.2  格式化 54
5.4  序列 57
第6章  函数 62
视频讲解：140分钟（8个）钟
6.1  Python的乐高积木 62
6.1.1  创建和调用函数 62
6.1.2  函数的参数 63
6.1.3  函数的返回值 64
6.2  灵活即强大 65
6.2.1  形参和实参 65
6.2.2  函数文档 66
6.2.3  关键字参数 67
6.2.4  默认参数 67
6.2.5  收集参数 68
6.3  我的地盘听我的 70
6.3.1  局部变量 70
6.3.2  全局变量 71
6.3.3  global关键字 73
6.3.4  内嵌函数 73
6.3.5  LEGB原则 74
6.3.6  闭包 75
6.3.7  装饰器 78
6.4  函数式编程 80
6.4.1  lambda 80
6.4.2  filter() 81
6.4.3  map() 82
6.5  递归 83
6.5.1  递归是什么 83
6.5.2  写一个求阶乘的函数 85
6.5.3  一帮小兔子——斐波那契数列 87
6.5.4  汉诺塔 89
第7章  字典和集合 92
视频讲解：46分钟（3个）钟
7.1  字典：当索引不好用时 92
7.1.1  创建和访问字典 93
7.1.2  各种内置方法 95
7.2  集合：在我的世界里，你就是唯一 99
7.2.1  创建集合 100
7.2.2  访问集合 101
7.2.3  不可变集合 101
第8章  永久存储 103
视频讲解：68分钟（4个）钟
8.1  文件：因为懂你，所以永恒 103
8.1.1  打开文件 103
8.1.2  文件对象的方法 104
8.1.3  文件的关闭 105
8.1.4  文件的读取和定位 105
8.1.5  文件的写入 106
8.1.6  一个任务 107
8.2  文件系统：介绍一个高大上的东西 109
8.3  pickle：腌制一缸美味的泡菜 115
第9章  异常处理 117
视频讲解：38分钟（3个）钟
9.1  你不可能总是对的 117
9.2  try-except语句 120
9.3  try-finally语句 122
9.4  raise语句 122
9.5  丰富的else语句 123
9.6  简洁的with语句 124
第10章  图形用户界面入门 126
视频讲解：14分钟（1个）钟
10.1  安装EasyGui 126
10.1.1  导入EasyGui 127
10.1.2  快速入门 127
10.1.3  各种功能演示 129
10.2  默认参数和关键字参数 130
10.3  使用按钮组件 131
10.4  如何在buttonbox里边显示图片 132
10.5  为用户提供一系列选项 133
10.6  让用户输入消息 134
10.7  让用户输入密码 137
10.8  显示文本 138
10.9  目录与文件 139
10.10  捕获异常 140
10.11  记住用户的设置 141
第11章  类和对象 143
视频讲解：78分钟（5个）钟
11.1  给大家介绍对象 143
11.2  对象=属性 方法 143
11.3  面向对象编程 145
11.3.1  self是什么 145
11.3.2  听说过Python的魔法方法吗 146
11.3.3  公有和私有 146
11.4  继承 148
11.4.1  调用未绑定的父类方法 150
11.4.2  使用super函数 151
11.5  多重继承 151
11.6  组合 152
11.7  类、类对象和实例对象 153
11.8  到底什么是绑定 154
11.9  一些相关的BIF 156
第12章  魔法方法 160
视频讲解：140分钟（9个）钟
12.1  构造和析构 160
12.1.1  _?_init_?_(self[, ...]) 160
12.1.2  _?_new_?_(cls[, ...]) 161
12.1.3  _?_del_?_(self) 162
12.2  算术运算 163
12.2.1  常见的算术运算 163
12.2.2  反运算 166
12.2.3  一元操作符 167
12.3  简单定制 167
12.4  属性访问 173
12.5  描述符（property的原理） 177
12.6  定制序列 180
12.7  迭代器 182
12.8  生成器 185
12.9  生成器表达式 187
第13章  模块 190
视频讲解：36分钟（3个）钟
13.1  模块就是程序 190
13.2  命名空间 191
13.3  导入模块 191
13.4  _?_name_?_='_?_main_?_' 192
13.5  搜索路径 194
13.6  包 195
13.7  像个极客一样去思考 196
第14章  论一只爬虫的自我修养 202
视频讲解：76分钟（4个）钟
14.1  入门 202
14.2  什么是编码 205
14.3  下载一只猫 205
14.4  更好的选择 207
14.4.1  没有对比就没有伤害 207
14.4.2  安装Requests 208
14.4.3  安装BeautifulSoup4 208
14.5  爬取豆瓣Top250电影排行榜 209
14.6  爬取网易云音乐的热门评论 213
第15章  正则表达式 221
视频讲解：55分钟（3个）钟
15.1  re模块 221
15.2  通配符 221
15.3  反斜杠 222
15.4  字符类 223
15.5  重复匹配 223
15.6  特殊符号及用法 225
15.7  元字符 227
15.8  贪婪和非贪婪 229
15.9  反斜杠 普通字母=特殊含义 230
15.10  编译正则表达式 231
15.11  实用的方法 233
第16章  Scrapy爬虫框架 238
视频讲解：56分钟（2个）钟
16.1  环境搭建 238
16.1.1  安装Miniconda 238
16.1.2  安装Scrapy 241
16.2  Scrapy框架架构 241
16.3  创建一个Scrapy项目 243
16.4  编写爬虫 244
16.5  爬 245
16.6  取 246
16.6.1  在Shell中尝试Selector选择器 246
16.6.2  使用XPath选择器 247
16.6.3  使用CSS选择器 248
16.6.4  提取数据 249
16.6.5  在爬虫中提取数据 250
16.7  存储内容 251
16.8  跟进链接 252
第17章  GUI的最终选择：Tkinter 254
视频讲解：295分钟（14个）钟
17.1  Tkinter之初体验 254
17.2  进阶版本 255
17.3  Label组件 258
17.4  Button组件 260
17.5  Checkbutton组件 261
17.6  Radiobutton组件 262
17.7  LabelFrame组件 264
17.8  Entry组件 265
17.9  Listbox组件 272
17.10  Scrollbar组件 275
17.11  Scale组件 276
17.12  Text组件 278
17.12.1  Indexes用法 280
17.12.2  Mark用法 283
17.12.3  Tag用法 285
17.13  Canvas组件 292
17.14  Menu组件 298
17.15  Menubutton组件 302
17.16  OptionMenu组件 303
17.17  Message组件 305
17.18  Spinbox组件 306
17.19  PanedWindow组件 306
17.20  Toplevel组件 309
17.21  事件绑定 311
17.22  事件序列 312
17.22.1  type 313
17.22.2  modifier 314
17.23  Event对象 314
17.24  布局管理器 316
17.24.1  pack 316
17.24.2  grid 318
17.24.3  place 319
17.25  标准对话框 321
17.25.1  messagebox 321
17.25.2  fieldialog 323
17.25.3  colorchooser 324
第18章  Pygame：游戏开发 326
视频讲解：460分钟（19个）钟
18.1  安装Pygame 326
18.2  初步尝试 327
18.3  解惑 330
18.3.1  什么是Surface对象 330
18.3.2  将一个图像绘制到另一个图像上是怎么回事 330
18.3.3  移动图像是怎么回事 330
18.3.4  如何控制游戏的速度 331
18.3.5  Pygame的效率高不高 332
18.3.6  应该从哪里获得帮助 332
18.4  事件 332
18.5  提高游戏的颜值 336
18.5.1  显示模式 336
18.5.2  全屏才是王道 337
18.5.3  使窗口尺寸可变 338
18.5.4  图像的变换 338
18.5.5  裁剪图像 341
18.5.6  转换图片 346
18.5.7  透明度分析 346
18.6  绘制基本图形 351
18.6.1  绘制矩形 351
18.6.2  绘制多边形 352
18.6.3  绘制圆形 353
18.6.4  绘制椭圆形 354
18.6.5  绘制弧线 355
18.6.6  绘制线段 356
18.7  动画精灵 356
18.7.1  创建精灵 358
18.7.2  移动精灵 360
18.8  碰撞检测 361
18.8.1  尝试自己写碰撞检测函数 362
18.8.2  sprite模块提供的碰撞检测函数 365
18.8.3  实现完美碰撞检测 367
18.9  播放声音和音效 367
18.10  响应鼠标 371
18.10.1  设置鼠标的位置 371
18.10.2  自定义鼠标光标 372
18.10.3  让小球响应光标的移动频率 374
18.11  响应键盘 376
18.12  结束游戏 377
18.12.1  发生碰撞后获得随机速度 377
18.12.2  减少“抖动”现象的发生 378
18.12.3  游戏胜利 381
18.12.4  更好地结束游戏 382
18.13  经典飞机大战 389
18.13.1  游戏设定 389
18.13.2  主模块 390
18.13.3  我方飞机 392
18.13.4  响应键盘 393
18.13.5  飞行效果 394
18.13.6  敌方飞机 395
18.13.7  提升敌机速度 396
18.13.8  碰撞检测 398
18.13.9  完美碰撞检测 401
18.13.10  一个BUG 402
18.13.11  发射子弹 403
18.13.12  设置敌机“血槽” 405
18.13.13  中弹效果 406
18.13.14  绘制得分 407
18.13.15  暂停游戏 408
18.13.16  控制难度 409
18.13.17  全屏炸弹 411
18.13.18  发放补给包 412
18.13.19  超级子弹 415
18.13.20  三次机会 417
18.13.21  结束画面 420
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>零基础入门学习Python
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python 3.5 技術手冊
ch01 Python起步走
ch02 從REPL到IDE
ch03 型態與運算子
ch04 流程語法與函式
ch05 從模組到類別
ch06 類別的繼承
ch07 例外處理
ch08 open() 與io模組
ch09 資料結構
ch10 資料永續與交換
ch11 常用內建模組
ch12 除錯、測試與效能
ch13 並行與平行
ch14 進階主題
附錄A venv
附錄B Django簡介
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python 3.5 技術手冊
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python绝技：运用Python成为顶级数据工程师
1 概述 / 1
1.1 何为数据工程师 /  1
1.2 数据分析的流程 /  3
1.3 数据分析的工具  /  11
1.4 大数据的思与辨  /  14
2 关于Python /  17
2.1 为什么是Python  / 17
2.2 常用基础库  / 19
2.2.1 Numpy  /  19
2.2.2 Pandas  / 26
2.2.3 Scipy /  37
2.2.4 Matplotlib  / 38
3 基础分析  /  43
3.1 场景分析与建模策略  /  43
3.1.1 统计量 / 43
3.1.2 概率分布 / 48
3.2 实例讲解 /  55
3.2.1 谁的成绩更优秀  /  55
3.2.2 应该库存多少水果  / 57
4 数据挖掘  / 60
4.1 场景分析与建模策略  / 60
4.1.1 分类 / 61
4.1.2 聚类 /  76
4.1.3 回归  /  86
4.1.4 关联规则  / 90
4.2 数据挖掘的重要概念 / 93
4.2.1 数据预处理   / 93
4.2.2 评估与验证 /97
4.2.3 Bagging 与Adaboost / 99
4.2.4 梯度下降与牛顿法 / 102
4.3 实例讲解  /105
4.3.1 信用卡欺诈监测 / 105
4.3.2 员工离职预判 /110
5 深度学习/ 114
5.1 场景分析与建模策略 / 115
5.1.1 感知机 / 115
5.1.2 自编码器 / 119
5.1.3 限制玻尔兹曼机 /123
5.1.4 深度信念神经网络 / 127
5.1.5 卷积神经网络 / 129
5.2 人工智能应用概况 / 137
5.2.1 深度学习的历史 /137
5.2.2 人工智能的杰作 / 140
5.3 实例讲解 / 146
5.3.1 学习识别手写数字 /  146
5.3.2 让机器认识一只猫  /  151
6 大数据分析 /  160
6.1 常用组件介绍 / 160
6.1.1 数据传输 / 165
6.1.3 数据计算 /  174
6.1.4 数据展示 /  180
6.2 大数据处理架构  / 188
6.2.1 Lambda 架构 / 189
6.2.2 Kappa 架构  / 192
6.2.3 ELK 架构 / 193
6.3 项目设计  / 194
参考文献 / 202
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python绝技：运用Python成为顶级数据工程师
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python文本分析
目录
译者序
前言
第1章自然语言基础
1.1自然语言
1.1.1什么是自然语言
1.1.2语言哲学
1.1.3语言习得和用法
1.2语言学
1.3语言句法和结构
1.3.1词
1.3.2短语
1.3.3从句
1.3.4语法
1.3.5语序类型学
1.4语言语义
1.4.1词汇语义关系
1.4.2语义网络和模型
1.4.3语义表示
1.5文本语料库
1.5.1文本语料库标注及使用
1.5.2热门的语料库
1.5.3访问文本语料库
1.6自然语言处理
1.6.1机器翻译
1.6.2语音识别系统
1.6.3问答系统
1.6.4语境识别与消解
1.6.5文本摘要
1.6.6文本分类
1.7文本分析
1.8小结
第2章Python语言回顾
2.1了解Python
2.1.1Python之禅
2.1.2应用：何时使用Python
2.1.3缺点：何时不用Python
2.1.4Python实现和版本
2.2安装和设置
2.2.1用哪个Python版本
2.2.2用哪个操作系统
2.2.3集成开发环境
2.2.4环境设置
2.2.5虚拟环境
2.3Python句法和结构
2.4数据结构和类型
2.4.1数值类型
2.4.2字符串
2.4.3列表
2.4.4集合
2.4.5字典
2.4.6元组
2.4.7文件
2.4.8杂项
2.5控制代码流
2.5.1条件结构
2.5.2循环结构
2.5.3处理异常
2.6函数编程
2.6.1函数
2.6.2递归函数
2.6.3匿名函数
2.6.4迭代器
2.6.5分析器
2.6.6生成器
2.6.7itertools和functools模块
2.7类
2.8使用文本
2.8.1字符串文字
2.8.2字符串操作和方法
2.9文本分析框架
2.10小结
第3章处理和理解文本
3.1文本切分
3.1.1句子切分
3.1.2词语切分
3.2文本规范化
3.2.1文本清洗
3.2.2文本切分
3.2.3删除特殊字符
3.2.4扩展缩写词
3.2.5大小写转换
3.2.6删除停用词
3.2.7词语校正
3.2.8词干提取
3.2.9词形还原
3.3理解文本句法和结构
3.3.1安装必要的依赖项
3.3.2机器学习重要概念
3.3.3词性标注
3.3.4浅层分析
3.3.5基于依存关系的分析
3.3.6基于成分结构的分析
3.4小结
第4章文本分类
4.1什么是文本分类
4.2自动文本分类
4.3文本分类的蓝图
4.4文本规范化处理
4.5特征提取
4.5.1词袋模型
4.5.2TFIDF模型
4.5.3高级词向量模型
4.6分类算法
4.6.1多项式朴素贝叶斯
4.6.2支持向量机
4.7评估分类模型
4.8建立一个多类分类系统
4.9应用
4.10小结
第5章文本摘要
5.1文本摘要和信息提取
5.2重要概念
5.2.1文档
5.2.2文本规范化
5.2.3特征提取
5.2.4特征矩阵
5.2.5奇异值分解
5.3文本规范化
5.4特征提取
5.5关键短语提取
5.5.1搭配
5.5.2基于权重标签的短语提取
5.6主题建模
5.6.1隐含语义索引
5.6.2隐含Dirichlet分布
5.6.3非负矩阵分解
5.6.4从产品评论中提取主题
5.7自动文档摘要
5.7.1隐含语义分析
5.7.2TextRank算法
5.7.3生成产品说明摘要
5.8小结
第6章文本相似度和聚类
6.1重要概念
6.1.1信息检索
6.1.2特征工程
6.1.3相似度测量
6.1.4无监督的机器学习算法
6.2文本规范化
6.3特征提取
6.4文本相似度
6.5词项相似度分析
6.5.1汉明距离
6.5.2曼哈顿距离
6.5.3欧几里得距离
6.5.4莱文斯坦编辑距离
6.5.5余弦距离和相似度
6.6文档相似度分析
6.6.1余弦相似度
6.6.2海灵格-巴塔恰亚距离
6.6.3Okapi BM25排名
6.7文档聚类
6.8最佳影片聚类分析
6.8.1kmeans聚类
6.8.2近邻传播聚类
6.8.3沃德凝聚层次聚类
6.9小结
第7章语义与情感分析
7.1语义分析
7.2探索WordNet
7.2.1理解同义词集
7.2.2分析词汇的语义关系
7.3词义消歧
7.4命名实体识别
7.5分析语义表征
7.5.1命题逻辑
7.5.2一阶逻辑
7.6情感分析
7.7IMDb电影评论的情感分析
7.7.1安装依赖程序包
7.7.2准备数据集
7.7.3有监督的机器学习技术
7.7.4无监督的词典技术
7.7.5模型性能比较
7.8小结
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python文本分析
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据科学导论
译者序
原书前言
作者和贡献者简介
第1章 数据科学概述 // 1
1.1　什么是数据科学 //1
1.2　关于本书 //2
第2章　数据专家的工具箱 //4
2.1　引言 // 4
2.2　为什么选择Python // 4
2.3　数据专家的基本Python库 // 5
2.3.1　数值和科学计算：NumPy和SciPy // 5
2.3.2　Scikit-learn：Python中的机器学习库 // 5
2.3.3　Pandas：Python数据分析库 // 5
2.4　数据科学生态系统的安装 // 6
2.5　集成开发环境 // 6
2.5.1　网络集成开发环境：Jupyter // 7
2.6　数据专家从Python开始 // 7
2.6.1　读取 // 11
2.6.2　选择数据 // 13
2.6.3　筛选数据 // 14
2.6.4　筛选缺失的数据 // 15
2.6.5　处理数据 // 15
2.6.6　排序 // 19
2.6.7　分组数据 // 20
2.6.8　重排数据 // 21
2.6.9　对数据进行排名 // 22
2.6.10　绘图 // 23
2.7　小结 // 24
第3章　描述统计学 // 25
3.1　引言 // 25
3.2　数据准备 // 25
3.2.1　Adult数据集示例 // 26
3.3　探索性数据分析 // 28
3.3.1　汇总数据 // 28
3.3.2　数据分布 // 31
3.3.3　离群点的处理 // 33
3.3.4　测量不对称性：偏度和皮尔逊中值偏度系数 // 36
3.3.5　连续分布 // 38
3.3.6　核密度 // 39
3.4　估计 // 41
3.4.1　样本和估计均值、方差和标准记分 // 41
3.4.2　协方差、皮尔逊相关和斯皮尔曼秩相关 // 42
3.5　小结 // 44
参考文献 // 45
第4章　统计推断 // 46
4.1　引言 // 46
4.2　统计推断：频率论方法 // 46
4.3　测量估计的差异性 // 47
4.3.1　点估计 // 47
4.3.2　置信区间 // 50
4.4　假设检验 // 53
4.4.1　用置信区间检验假设 // 53
4.4.2　使用p值检验假设 // 55
4.5　效应E是真实的吗 // 57
4.6　小结 // 57
参考文献 // 58
第5章　监督学习 // 59
5.1　引言 // 59
5.2　问题 // 60
5.3　第一步 // 60
5.4　什么是学习？ // 69
5.5　学习曲线 // 70
5.6　训练、验证和测试 // 73
5.7　两种学习模型 // 76
5.7.1　学习三要素 // 76
5.7.2　支持向量机 // 77
5.7.3　随机森林 // 79
5.8　结束学习过程 // 80
5.9　商业案例 // 81
5.10　小结 // 83
参考文献 // 83
第6章　回归分析 // 84
6.1　引言 // 84
6.2　线性回归 // 84
6.2.1　简单线性回归 // 85
6.2.2　多元线性回归和多项式回归 // 90
6.2.3　稀疏模型 // 90
6.3　逻辑斯蒂回归 // 97
6.4　小结 // 99
参考文献 // 99
第7章　无监督学习 // 100
7.1　引言 // 100
7.2　聚类 // 100
7.2.1　相似度和距离 // 101
7.2.2　什么是一个好的聚类？定义衡量聚类质量的度量 // 101
7.2.3　聚类技术的分类标准 // 104
7.3　案例学习 // 113
7.4　小结 // 118
参考文献 // 119
第8章　网络分析 // 120
8.1　引言 // 120
8.2　图的基本定义 // 121
8.3　社交网络分析 // 122
8.3.1　NetworkX基础 // 122
8.3.2　实际案例：Facebook数据集 // 123
8.4　中心性 // 125
8.4.1　在图中绘制中心性 // 130
8.4.2　PageRank // 132
8.5　自我网络 // 134
8.6　社区发现 // 138
8.7　小结 // 139
参考文献 // 139
第9章　推荐系统 // 140
9.1　引言 // 140
9.2　推荐系统如何工作？ // 140
9.2.1　基于内容的过滤 // 141
9.2.2　协作过滤 // 141
9.2.3　混合推荐系统 // 141
9.3　建模用户偏好 // 142
9.4　评估推荐系统 // 142
9.5　实际案例 // 143
9.5.1　MovieLens数据集 // 143
9.5.2　基于用户的协作过滤 // 145
9.6　小结 // 153
参考文献 // 153
第10章　用于情感分析的统计自然语言处理 // 154
10.1　引言 // 154
10.2　数据清洗 // 155
10.3　文本表示 // 158
10.3.1　二元组和n元组 // 163
10.4　实际案例 // 163
10.5　小结 // 168
参考文献 // 168
第11章　并行计算 // 169
11.1　引言 // 169
11.2　架构 // 170
11.2.1　入门指南 // 171
11.2.2　连接到集群（引擎）// 171
11.3　多核编程 // 172
11.3.1　引擎的直接视图 // 172
11.3.2　引擎的负载均衡视图 // 175
11.4　分布式计算 // 176
11.5　实际应用：纽约出租车旅行 // 177
11.5.1　直接视图非阻塞方案 // 178
11.5.2　实验结果 // 180
11.6　小结 // 182
参考文献 // 182
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据科学导论
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python程式設計的樂趣
簡介
【PART I 基礎必修】
第1章 新手入門
第2章 變數和簡單資料型別
第3章 串列簡介
第4章 串列的操作與運用
第5章 if 陳述句
第6章 字典
第7章 使用者輸入與while 迴圈
第8章 函式
第9章 類別
第10章 檔案與例外
第11章 測試程式碼
【PART II 專題應用實作】
專題 1：外星人入侵
第12章 發射飛彈的太空船
第13章 外星人！
第14章 遊戲的記分系統
專題 2：資料視覺化
第15章 生成資料
第16章 下載資料
第17章 使用 API
專題 3：Web 應用程式
第18章 Django 初學入門
第19章 使用者帳號
第20章 對應用程式設定樣式和進行部署
後記
附錄 A 安裝 Python
附錄 B 文字編輯器
附錄 C 尋求協助
附錄 D 使用 Git 來做版本控制
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python程式設計的樂趣
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python 自動化的樂趣
簡介
PART 1 Python 程式設計基礎
chapter 01 Python 基礎
chapter 02 流程控制
chapter 03 函式
chapter 04 串列
chapter 05 字典與結構化資料
chapter 06 字串的操作
PART 2 自動化專題實作
chapter 07 使用正規表示式進行模式比對
chapter 08 讀寫檔案
chapter 09 檔案的組織管理
chapter 10 除錯（Debugging）
chapter 11 從 Web 擷取資訊
chapter 12 處理 Excel 試算表
chapter 13 處理 PDF 與 Word 文件
chapter 14 處理 CSV 檔和 JSON 資料
chapter 15 保持時間、工作排程和程式啟動
chapter 16 發送 Email 和文字簡訊
chapter 17 處理影像圖片
chapter 18 以 GUI 自動化來控制鍵盤和滑鼠
appendix A 安裝第三方模組
appendix B 執行程式
appendix C 習題解答
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python 自動化的樂趣
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python社会媒体挖掘
第1章　社会媒体、社交数据和Python　　1
1.1　入门　　1
1.2　社会媒体——机遇和挑战　　2
1.2.1　机遇　　3
1.2.2　挑战　　4
1.2.3　社会媒体挖掘技术　　7
1.3　Python的数据科学工具　　10
1.3.1　Python开发环境的安装　　11
1.3.2　高效的数据分析　　14
1.3.3　机器学习　　17
1.3.4　自然语言处理　　21
1.3.5　社会网络分析　　25
1.3.6　数据可视化　　26
1.4　Python中的数据处理　　28
1.5　创建复杂的数据管道　　29
1.6　小结　　30
第2章　Twitter数据挖掘——标签、话题和时间序列　　31
2.1　入门　　31
2.2　Twitter API　　32
2.2.1　接口访问频率限制　　32
2.2.2　搜索与流　　33
2.3　从Twitter收集数据　　34
2.3.1　从时间线获取推文　　35
2.3.2　推文的结构　　38
2.3.3　使用流API　　42
2.4　分析推文——实体分析　　44
2.5　分析推文——文本分析　　48
2.6　分析推文——时间序列分析　　54
2.7　小结　　57
第3章　Twitter用户、粉丝和社区　　58
3.1　用户、好友和粉丝　　58
3.1.1　回到Twitter API　　58
3.1.2　用户资料的结构　　59
3.1.3　下载好友和粉丝的资料　　62
3.1.4　分析你的社会网络　　64
3.1.5　度量影响力和参与度　　68
3.2　挖掘粉丝　　72
3.3　挖掘对话　　77
3.4　在地图上绘制推文　　80
3.4.1　将推文转换为GeoJSON　　80
3.4.2　用Folium轻松绘制地图　　83
3.5　小结　　89
第4章　Facebook帖子、页面和用户互动　　90
4.1　Facebook Graph API　　90
4.1.1　注册你的应用　　90
4.1.2　鉴权和安全　　92
4.1.3　用Python连接Facebook Graph API　　93
4.2　挖掘你的帖子　　96
4.2.1　帖子的结构　　99
4.2.2　时间频率分析　　99
4.3　挖掘Facebook页面　　101
4.3.1　从页面获取帖子　　103
4.3.2　度量参与度　　107
4.3.3　用词云可视化帖子　　112
4.4　小结　　114
第5章　Google+话题分析　　115
5.1　Google+ API入门　　115
5.2　在Web GUI中嵌入搜索结果　　120
5.2.1　Python的装饰器　　121
5.2.2　Flask路由和模板　　122
5.3　Google+页面的笔记和活动　　125
5.4　笔记的文本分析和TF-IDF计算　　127
5.5　小结　　134
第6章　Stack Exchange提问和回答　　135
6.1　提问和回答　　135
6.2　Stack Exchange API入门　　137
6.2.1　搜索带标签的问题　　139
6.2.2　搜索用户　　142
6.3　处理Stack Exchange的存档数据　　144
6.4　问题标签的文本分类　　149
6.4.1　监督学习和文本分类　　149
6.4.2　分类算法　　153
6.4.3　评估　　155
6.4.4　Stack Exchange数据的文本分类　　157
6.4.5　在实时应用中嵌入分类器　　161
6.5　小结　　165
第7章　博客、RSS、维基百科和自然语言处理　　166
7.1　博客和自然语言处理　　166
7.2　从博客和网站获取数据　　166
7.2.1　使用WordPress.com API　　167
7.2.2　使用Blogger API　　170
7.2.3　解析RSS和Atom订阅　　173
7.2.4　从维基百科获取数据　　174
7.2.5　关于网络爬取的一点建议　　176
7.3　自然语言处理基础　　177
7.3.1　文本处理　　177
7.3.2　信息抽取　　185
7.4　小结　　190
第8章　挖掘所有数据　　191
8.1　很多社交API　　191
8.2　挖掘YouTube上的视频　　191
8.3　挖掘GitHub上的开源软件　　196
8.4　挖掘Yelp上的本地商家　　203
8.5　创建自定义的Python客户端　　208
8.6　小结　　210
第9章　关联数据和语义网　　211
9.1　数据网　　211
9.1.1　语义网词汇　　212
9.1.2　微格式　　215
9.1.3　关联数据和开放数据　　216
9.1.4　RDF　　217
9.1.5　JSON-LD格式　　218
9.1.6　Schema.org　　219
9.2　从DBpedia挖掘关系　　220
9.3　挖掘地理坐标　　222
9.3.1　从维基百科抽取地理数据　　222
9.3.2　在Google Maps上绘制地理数据　　225
9.4　小结　　229
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python社会媒体挖掘
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>基于Python的Google App Engine编程
前言
第1章 Google App Engine简介
运行时环境
静态文件服务器
前端缓存
云数据存储
实体与属性
查询和索引
事务
服务
Google帐户，OpenID和OAuth
Google云端点
任务队列和定时任务
命名空间
开发者工具
云控制台
开始开发应用程序
第2章 创建应用程序
设置Cloud SDK
安装Python
安装Cloud SDK
使用cloud sDK进行身份认证
安装App Engine SDK
开发应用程序
用户偏好模式
简单的应用程序
Webapp框架概述
模板、用户和Google Accounts
使用Python的虚拟环境
数据存储模型和Web表单
开发服务器控制台
用内存缓存进行缓存
Python交互式控制台
注册应用程序
上传应用程序
测试应用程序
启用计费功能
第3章 配置应用程序
App Engine架构
配置Python应用程序
运行时版本
应用程序ID和版本
多线程
请求处理程序
静态文件和源文件
MIME类型
缓存过期
域名
Google Apps
配置安全连接
与自定义域的安全连接
对Google Accounts认证
环境变量
入站服务
自定义错误响应
……
第4章 请求处理程序和实例
第5章 使用模块
第6章 数据存储实体
第7章 数据存储区查询
第8章 数据存储事物
第9章 ndb数据建模
第10章 数据存储管理
第11章 App Engine上使用
第12章 内存缓存
第13章 Fetch URL和网络资源
第14章 发送和接收Email
第15章 使用XMPP发送和接收即时消息
第16章 任务队列以及调度任务
第17章 服务调用优化
第18章 Django Web应用框架
第19章 管理请求日志
第20章 部署和管理应用
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>基于Python的Google App Engine编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>用 Python 写网络爬虫（第2版）
前言
资源与支持
第1章　网络爬虫简介
第2章　数据抓取
第3章　下载缓存
第4章　并发下载
第5章　动态内容
第6章　表单交互
第7章　验证码处理
第8章　Scrapy
第9章　综合应用
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>用 Python 写网络爬虫（第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python和NLTK自然语言处理
模块1　NLTK基础知识
第　1章 自然语言处理简介　3
1.1　为什么要学习NLP　4
1.2　从Python的基本知识开始　7
1.2.1　列表　7
1.2.2　自助　8
1.2.3　正则表达式　9
1.2.4　词典　11
1.2.5　编写函数　11
1.3　NLTK　13
1.4　试一试　18
1.5　本章小结　18
第　2章 文本的整理和清洗　19
2.1　文本整理　19
2.2　文本清洗　21
2.3　句子拆分器　22
2.4　标记解析　22
2.5　词干提取　24
2.6　词形还原　25
2.7　停用词删除　26
2.8　生僻字删除　27
2.9　拼写校正　27
2.10　试一试　28
2.11　本章小结　28
第3章　词性标注　30
3.1　什么是词性标注　30
3.1.1　斯坦福标注器　33
3.1.2　深入了解标注器　34
3.1.3　序列标注器　35
3.1.4　布里尔标注器　37
3.1.5　基于标注器的机器学习　37
3.2　命名实体识别　38
3.3　试一试　40
3.4　本章小结　41
第4章　对文本的结构进行语法分析　42
4.1　浅层语法分析与深层语法
分析　42
4.2　语法分析的两种方法　43
4.3　为什么需要语法分析　43
4.4　不同类型的语法分析器　45
4.4.1　递归下降的语法分析器　45
4.4.2　移位归约语法分析器　45
4.4.3　图表语法分析器　45
4.4.4　正则表达式语法
分析器　46
4.5　依存分析　47
4.6　组块化　49
4.7　信息抽取　51
4.7.1　命名实体识别　52
4.7.2　关系抽取　52
4.8　本章小结　53
第5章　NLP应用　54
5.1　构建第 一个NLP应用　54
5.2　其他的NLP应用　58
5.2.1　机器翻译　58
5.2.2　统计机器翻译　59
5.2.3　信息检索　59
5.2.4　语音识别　61
5.2.5　文本分类　62
5.2.6　信息提取　63
5.2.7　问答系统　64
5.2.8　对话系统　64
5.2.9　词义消歧　64
5.2.10　主题建模　64
5.2.11　语言检测　65
5.2.12　光学字符识别　65
5.3　本章小结　65
第6章　文本分类　66
6.1　机器学习　67
6.2　文本分类　68
6.3　采样　70
6.3.1　朴素贝叶斯　73
6.3.2　决策树　75
6.3.3　随机梯度下降　76
6.3.4　逻辑回归　77
6.3.5　支持向量机　78
6.4　随机森林算法　79
6.5　文本聚类　79
6.6　文本的主题建模　81
6.7　参考资料　83
6.8　本章小结　83
第7章　网络爬取　85
7.1　网络爬虫　85
7.2　编写第 一个爬虫程序　86
7.3　Scrapy中的数据流　89
7.3.1　Scrapy命令行界面　89
7.3.2　项　94
7.4　站点地图蜘蛛　96
7.5　项管道　97
7.6　外部参考　98
7.7　本章小结　99
第8章　与其他Python库一同
使用NLTK　100
8.1　NumPy　100
8.1.1　ndarray　101
8.1.2　基本操作　102
8.1.3　从数组中提取数据　103
8.1.4　复杂的矩阵运算　103
8.2　SciPy　107
8.2.1　线性代数　108
8.2.2　特征值和特征向量　108
8.2.3　稀疏矩阵　109
8.2.4　优化　110
8.3　Pandas　111
8.3.1　读取数据　112
8.3.2　时序数据　114
8.3.3　列转换　115
8.3.4　噪声数据　116
8.4　Matplotlib　117
8.4.1　subplot　118
8.4.2　添加轴　119
8.4.3　散点图　120
8.4.4　柱状图　120
8.4.5　3D图　121
8.5　外部参考　121
8.6　本章小结　121
第9章　使用Python进行社交媒体
挖掘　122
9.1　数据收集　122
9.2　数据提取　126
9.3　地理可视化　128
9.3.1　影响者检测　129
9.3.2　Facebook　130
9.3.3　影响者的朋友　134
9.4　本章小结　135
第　10章 大规模的文本挖掘　136
10.1　在Hadoop上使用Python的
不同方法　136
10.1.1　Python的流　137
10.1.2　Hive/Pig UDF　137
10.1.3　流包装器　137
10.2　在Hadoop上运行NLTK　138
10.2.1　UDF　138
10.2.2　Python流　140
10.3　在Hadoop上运行
Scikit-learn　141
10.4　PySpark　144
10.5　本章小结　146
模块2　使用Python 3的NLTK 3进行文本处理
第　1章 标记文本和WordNet的基础　149
1.1　引言　149
1.2　将文本标记成句子　150
1.2.1　准备工作　150
1.2.2　工作方式　151
1.2.3　工作原理　151
1.2.4　更多信息　151
1.2.5　请参阅　152
1.3　将句子标记成单词　152
1.3.1　工作方式　152
1.3.2　工作原理　153
1.3.3　更多信息　153
1.3.4　请参阅　154
1.4　使用正则表达式标记语句　154
1.4.1　准备工作　155
1.4.2　工作方式　155
1.4.3　工作原理　155
1.4.4　更多信息　155
1.4.5　请参阅　156
1.5　训练语句标记生成器　156
1.5.1　准备工作　156
1.5.2　工作方式　156
1.5.3　工作原理　157
1.5.4　更多信息　158
1.5.5　请参阅　158
1.6　在已标记的语句中过滤
停用词　158
1.6.1　准备工作　158
1.6.2　工作方式　159
1.6.3　工作原理　159
1.6.4　更多信息　159
1.6.5　请参阅　160
1.7　查找WordNet中单词的
Synset　160
1.7.1　准备工作　160
1.7.2　工作方式　160
1.7.3　工作原理　161
1.7.4　更多信息　161
1.7.5　请参阅　163
1.8　在WordNet中查找词元和
同义词　163
1.8.1　工作方式　163
1.8.2　工作原理　163
1.8.3　更多信息　163
1.8.4　请参阅　165
1.9　计算WordNet和Synset的
相似度　165
1.9.1　工作方式　165
1.9.2　工作原理　165
1.9.3　更多信息　166
1.9.4　请参阅　167
1.10　发现单词搭配　167
1.10.1　准备工作　167
1.10.2　工作方式　167
1.10.3　工作原理　168
1.10.4　更多信息　168
1.10.5　请参阅　169
第　2章 替换和校正单词　170
2.1　引言　170
2.2　词干提取　170
2.2.1　工作方式　171
2.2.2　工作原理　171
2.2.3　更多信息　171
2.2.4　请参阅　173
2.3　使用WordNet进行词形还原　173
2.3.1　准备工作　173
2.3.2　工作方式　173
2.3.3　工作原理　174
2.3.4　更多信息　174
2.3.5　请参阅　175
2.4　基于匹配的正则表达式替换
单词　175
2.4.1　准备工作　175
2.4.2　工作方式　175
2.4.3　工作原理　176
2.4.4　更多信息　177
2.4.5　请参阅　177
2.5　移除重复字符　177
2.5.1　准备工作　177
2.5.2　工作方式　178
2.5.3　工作原理　178
2.5.4　更多信息　179
2.5.5　请参阅　179
2.6　使用Enchant进行拼写校正　180
2.6.1　准备工作　180
2.6.2　工作方式　180
2.6.3　工作原理　181
2.6.4　更多信息　181
2.6.5　请参阅　183
2.7　替换同义词　183
2.7.1　准备工作　183
2.7.2　工作方式　183
2.7.3　工作原理　184
2.7.4　更多信息　184
2.7.5　请参阅　185
2.8　使用反义词替换否定形式　186
2.8.1　工作方式　186
2.8.2　工作原理　187
2.8.3　更多信息　187
2.8.4　请参阅　188
第3章　创建自定义语料库　189
3.1　引言　189
3.2　建立自定义语料库　190
3.2.1　准备工作　190
3.2.2　工作方式　190
3.2.3　工作原理　191
3.2.4　更多信息　192
3.2.5　请参阅　192
3.3　创建词汇表语料库　192
3.3.1　准备工作　192
3.3.2　工作方式　193
3.3.3　工作原理　193
3.3.4　更多信息　194
3.3.5　请参阅　194
3.4　创建已标记词性单词的
语料库　195
3.4.1　准备工作　195
3.4.2　工作方式　195
3.4.3　工作原理　196
3.4.4　更多信息　196
3.4.5　请参阅　199
3.5　创建已组块短语的语料库　199
3.5.1　准备工作　199
3.5.2　工作方式　199
3.5.3　工作原理　201
3.5.4　更多信息　201
3.5.5　请参阅　203
3.6　创建已分类文本的语料库　203
3.6.1　准备工作　204
3.6.2　工作方式　204
3.6.3　工作原理　204
3.6.4　更多信息　205
3.6.5　请参阅　206
3.7　创建已分类组块语料库
读取器　206
3.7.1　准备工作　206
3.7.2　工作方式　207
3.7.3　工作原理　208
3.7.4　更多信息　209
3.7.5　请参阅　213
3.8　懒惰语料库加载　213
3.8.1　工作方式　213
3.8.2　工作原理　214
3.8.3　更多信息　214
3.9　创建自定义语料库视图　215
3.9.1　工作方式　215
3.9.2　工作原理　216
3.9.3　更多信息　217
3.9.4　请参阅　218
3.10　创建基于MongoDB的
语料库读取器　218
3.10.1　准备工作　219
3.10.2　工作方式　219
3.10.3　工作原理　220
3.10.4　更多信息　221
3.10.5　请参阅　221
3.11　在加锁文件的情况下编辑
语料库　221
3.11.1　准备工作　221
3.11.2　工作方式　221
3.11.3　工作原理　222
第4章　词性标注　224
4.1　引言　224
4.2　默认标注　225
4.2.1　准备工作　225
4.2.2　工作方式　225
4.2.3　工作原理　226
4.2.4　更多信息　227
4.2.5　请参阅　228
4.3　训练一元组词性标注器　228
4.3.1　工作方式　228
4.3.2　工作原理　229
4.3.3　更多信息　230
4.3.4　请参阅　231
4.4　回退标注的组合标注器　231
4.4.1　工作方式　231
4.4.2　工作原理　232
4.4.3　更多信息　232
4.4.4　请参阅　233
4.5　训练和组合N元标注器　233
4.5.1　准备工作　233
4.5.2　工作方式　233
4.5.3　工作原理　234
4.5.4　更多信息　235
4.5.5　请参阅　236
4.6　创建似然单词标签的
模型　236
4.6.1　工作方式　236
4.6.2　工作原理　237
4.6.3　更多信息　237
4.6.4　请参阅　238
4.7　使用正则表达式标注　238
4.7.1　准备工作　238
4.7.2　工作方式　238
4.7.3　工作原理　239
4.7.4　更多信息　239
4.7.5　请参阅　239
4.8　词缀标签　239
4.8.1　工作方式　239
4.8.2　工作原理　240
4.8.3　更多信息　240
4.8.4　请参阅　241
4.9　训练布里尔标注器　241
4.9.1　工作方式　241
4.9.2　工作原理　242
4.9.3　更多信息　243
4.9.4　请参阅　244
4.10　训练TnT标注器　244
4.10.1　工作方式　244
4.10.2　工作原理　244
4.10.3　更多信息　245
4.10.4　请参阅　246
4.11　使用WordNet进行
标注　246
4.11.1　准备工作　246
4.11.2　工作方式　247
4.11.3　工作原理　248
4.11.4　请参阅　248
4.12　标注专有名词　248
4.12.1　工作方式　248
4.12.2　工作原理　249
4.12.3　请参阅　249
4.13　基于分类器的标注　249
4.13.1　工作方式　250
4.13.2　工作原理　250
4.13.3　更多信息　251
4.13.4　请参阅　252
4.14　使用NLTK训练器训练
标注器　253
4.14.1　工作方式　253
4.14.2　工作原理　254
4.14.3　更多信息　258
4.14.4　请参阅　260
第5章　提取组块　261
5.1　引言　261
5.2　使用正则表达式组块和
隔断　262
5.2.1　准备工作　262
5.2.2　工作方式　262
5.2.3　工作原理　263
5.2.4　更多信息　265
5.2.5　请参阅　267
5.3　使用正则表达式合并和拆分
组块　267
5.3.1　工作方式　267
5.3.2　工作原理　269
5.3.3　更多信息　270
5.3.4　请参阅　271
5.4　使用正则表达式扩展和删除
组块　271
5.4.1　工作方式　271
5.4.2　工作原理　272
5.4.3　更多信息　273
5.4.4　请参阅　273
5.5　使用正则表达式进行部分
解析　273
5.5.1　工作方式　273
5.5.2　工作原理　274
5.5.3　更多信息　275
5.5.4　请参阅　276
5.6　训练基于标注器的组块器　276
5.6.1　工作方式　276
5.6.2　工作原理　277
5.6.3　更多信息　278
5.6.4　请参阅　279
5.7　基于分类的分块　279
5.7.1　工作方式　279
5.7.2　工作原理　282
5.7.3　更多信息　282
5.7.4　请参阅　283
5.8　提取命名实体　283
5.8.1　工作方式　283
5.8.2　工作原理　284
5.8.3　更多信息　284
5.8.4　请参阅　285
5.9　提取专有名词组块　285
5.9.1　工作方式　286
5.9.2　工作原理　286
5.9.3　更多信息　286
5.10　提取部位组块　287
5.10.1　工作方式　288
5.10.2　工作原理　290
5.10.3　更多信息　290
5.10.4　请参阅　290
5.11　训练命名实体组块器　290
5.11.1　工作方式　290
5.11.2　工作原理　292
5.11.3　更多信息　292
5.11.4　请参阅　293
5.12　使用NLTK训练器训练
组块器　293
5.12.1　工作方式　293
5.12.2　工作原理　294
5.12.3　更多信息　295
5.12.4　请参阅　299
第6章　转换组块与树　300
6.1　引言　300
6.2　过滤句子中无意义的
单词　301
6.2.1　准备工作　301
6.2.2　工作方式　301
6.2.3　工作原理　302
6.2.4　更多信息　302
6.2.5　请参阅　303
6.3　纠正动词形式　303
6.3.1　准备工作　303
6.3.2　工作方式　303
6.3.3　工作原理　305
6.3.4　请参阅　306
6.4　交换动词短语　306
6.4.1　工作方式　306
6.4.2　工作原理　307
6.4.3　更多信息　307
6.4.4　请参阅　307
6.5　交换名词基数　308
6.5.1　工作方式　308
6.5.2　工作原理　309
6.5.3　请参阅　309
6.6　交换不定式短语　309
6.6.1　工作方式　309
6.6.2　工作原理　310
6.6.3　更多信息　310
6.6.4　请参阅　310
6.7　单数化复数名词　310
6.7.1　工作方式　310
6.7.2　工作原理　311
6.7.3　请参阅　311
6.8　链接组块变换　311
6.8.1　工作方式　311
6.8.2　工作原理　312
6.8.3　更多信息　312
6.8.4　请参阅　313
6.9　将组块树转换为文本　313
6.9.1　工作方式　313
6.9.2　工作原理　314
6.9.3　更多信息　314
6.9.4　请参阅　314
6.10　平展深度树　314
6.10.1　准备工作　315
6.10.2　工作方式　315
6.10.3　工作原理　316
6.10.4　更多信息　317
6.10.5　请参阅　318
6.11　创建浅树　318
6.11.1　工作方式　318
6.11.2　工作原理　320
6.11.3　请参阅　320
6.12　转换树标签　320
6.12.1　准备工作　320
6.12.2　工作方式　321
6.12.3　工作原理　322
6.12.4　请参阅　322
第7章　文本分类　323
7.1　引言　323
7.2　词袋特征提取　324
7.2.1　工作方式　324
7.2.2　工作原理　325
7.2.3　更多信息　325
7.2.4　请参阅　327
7.3　训练朴素贝叶斯
分类器　327
7.3.1　准备工作　327
7.3.2　工作方式　328
7.3.3　工作原理　329
7.3.4　更多信息　330
7.3.5　请参阅　333
7.4　训练决策树分类器　334
7.4.1　工作方式　334
7.4.2　工作原理　335
7.4.3　更多信息　335
7.4.4　请参阅　337
7.5　训练最大熵分类器　337
7.5.1　准备工作　337
7.5.2　工作方式　337
7.5.3　工作原理　338
7.5.4　更多信息　339
7.5.5　请参阅　340
7.6　训练scikit-learn
分类器　340
7.6.1　准备工作　341
7.6.2　工作方式　341
7.6.3　工作原理　342
7.6.4　更多信息　343
7.6.5　请参阅　345
7.7　衡量分类器的精准率和
召回率　346
7.7.1　工作方式　346
7.7.2　工作原理　347
7.7.3　更多信息　348
7.7.4　请参阅　349
7.8　计算高信息量单词　349
7.8.1　工作方式　350
7.8.2　工作原理　351
7.8.3　更多信息　352
7.8.4　请参阅　354
7.9　使用投票组合分类器　354
7.9.1　准备工作　355
7.9.2　工作方式　355
7.9.3　工作原理　356
7.9.4　请参阅　356
7.10　使用多个二元分类器
分类　357
7.10.1　准备工作　357
7.10.2　工作方式　357
7.10.3　工作原理　361
7.10.4　更多信息　362
7.10.5　请参阅　363
7.11　使用NLTK训练器训练
分类器　363
7.11.1　工作方式　363
7.11.2　工作原理　364
7.11.3　更多信息　365
7.11.4　请参阅　371
第8章　分布式进程和大型数据集的
处理　372
8.1　引言　372
8.2　使用execnet进行分布式
标注　372
8.2.1　准备工作　373
8.2.2　工作方式　373
8.2.3　工作原理　374
8.2.4　更多内容　375
8.2.5　请参阅　377
8.3　使用execnet进行分布式
组块　377
8.3.1　准备工作　377
8.3.2　工作方式　377
8.3.3　工作原理　378
8.3.4　更多内容　379
8.3.5　请参阅　379
8.4　使用execnet并行处理
列表　379
8.4.1　工作方式　379
8.4.2　工作原理　380
8.4.3　更多内容　381
8.4.4　请参阅　381
8.5　在Redis中存储频率分布　382
8.5.1　准备工作　382
8.5.2　工作方式　382
8.5.3　工作原理　384
8.5.4　更多内容　385
8.5.5　请参阅　386
8.6　在Redis中存储条件频率
分布　386
8.6.1　准备工作　386
8.6.2　工作方式　386
8.6.3　工作原理　387
8.6.4　更多内容　388
8.6.5　请参阅　388
8.7　在Redis中存储有序
字典　388
8.7.1　准备工作　388
8.7.2　工作方式　388
8.7.3　工作原理　390
8.7.4　更多内容　391
8.7.5　请参阅　392
8.8　使用Redis和execnet进行
分布式单词评分　392
8.8.1　准备工作　392
8.8.2　工作方式　392
8.8.3　工作原理　393
8.8.4　更多内容　396
8.8.5　请参阅　396
第9章　解析特定的数据类型　397
9.1　引言　397
9.2　使用dateutil解析日期和
时间　398
9.2.1　准备工作　398
9.2.2　工作方式　398
9.2.3　工作原理　399
9.2.4　更多信息　399
9.2.5　请参阅　399
9.3　时区的查找和转换　400
9.3.1　准备工作　400
9.3.2　工作方式　400
9.3.3　工作原理　402
9.3.4　更多信息　402
9.3.5　请参阅　403
9.4　使用lxml从HTML中提取
URL　403
9.4.1　准备工作　403
9.4.2　工作方式　403
9.4.3　工作原理　404
9.4.4　更多信息　404
9.4.5　请参阅　405
9.5　清理和剥离HTML　405
9.5.1　准备工作　405
9.5.2　工作方式　405
9.5.3　工作原理　405
9.5.4　更多信息　406
9.5.5　请参阅　406
9.6　使用BeautifulSoup转换
HTML实体　406
9.6.1　准备工作　406
9.6.2　工作方式　406
9.6.3　工作原理　407
9.6.4　更多信息　407
9.6.5　请参阅　407
9.7　检测和转换字符编码　407
9.7.1　准备工作　408
9.7.2　工作方式　408
9.7.3　工作原理　409
9.7.4　更多信息　409
9.7.5　请参阅　410
附录A　宾州treebank词性标签　411
模块3　使用Python掌握自然语言处理
第　1章 使用字符串　417
1.1　标记化　417
1.1.1　将文本标记为句子　418
1.1.2　其他语言文字的标记化　418
1.1.3　将句子标记为单词　419
1.1.4　使用TreebankWordTokenizer
进行标记化　420
1.1.5　使用正则表达式进行
标记化　421
1.2　规范化　424
1.2.1　消除标点符号　424
1.2.2　转化为小写和大写　425
1.2.3　处理停用词　425
1.2.4　计算英语中的停用词　426
1.3　替代和纠正标记　427
1.3.1　使用正则表达式替换
单词　427
1.3.2　使用一个文本替换另一个
文本的示例　428
1.3.3　在标记化之前进行
替代　428
1.3.4　处理重复的字符　428
1.3.5　删除重复字符的示例　429
1.3.6　使用单词的同义词替换
单词　430
1.4　在文本上应用齐夫定律　431
1.5　相似性量度　431
1.5.1　使用编辑距离算法应用
相似性量度　432
1.5.2　使用杰卡德系数应用
相似性量度　434
1.5.3　使用史密斯-沃特曼算法
应用相似性量度　434
1.5.4　其他字符串相似性指标　435
1.6　本章小结　436
第　2章 统计语言模型　437
2.1　单词频率　437
2.1.1　对给定文本进行最大
似然估计　441
2.1.2　隐马尔可夫模型估计　448
2.2　在MLE模型上应用平滑　450
2.2.1　加一平滑法　450
2.2.2　古德-图灵算法　451
2.2.3　聂氏估计　456
2.2.4　威滕 贝尔估计　457
2.3　为MLE指定回退机制　457
2.4　应用数据插值获得混合和
匹配　458
2.5　应用困惑度评估语言模型　458
2.6　在建模语言中应用
梅特罗波利斯-黑斯廷斯算法　459
2.7　在语言处理中应用
吉布斯采样　459
2.8　本章小结　461
第3章　词语形态学—试一试　462
3.1　词语形态学　462
3.2　词根还原器　463
3.3　词形还原　466
3.4　开发用于非英语语言的词根
还原器　467
3.5　词语形态分析器　469
3.6　词语形态生成器　471
3.7　搜索引擎　471
3.8　本章小结　475
第4章　词性标注—识别单词　476
4.1　词性标注　476
4.2　创建POS标注的语料库　482
4.3　选择某个机器学习算法　484
4.4　涉及n元组方法的统计建模　486
4.5　使用POS标注的语料库开发
组块器　491
4.6　本章小结　494
第5章　解析—分析训练数据　495
5.1　解析　495
5.2　构建树库　496
5.3　从树库中提取上下文无关文法的
规则　501
5.4　从CFG中创建概率上下文无关的
文法　507
5.5　CYK图解析算法　509
5.6　厄雷图解析算法　510
5.7　本章小结　516
第6章　语义分析—意义重大　517
6.1　语义分析　517
6.1.1　NER简介　521
6.1.2　使用隐马尔可夫模型的
NER系统　525
6.1.3　使用机器学习工具包训练
NER　530
6.1.4　使用POS标注的
NER　531
6.2　从Wordnet中生成同义词集
ID　534
6.3　使用Wordnet消除歧义　537
6.4　本章小结　541
第7章　情感分析—我很高兴　542
7.1　情感分析　542
7.2　使用机器学习的情感分析　548
7.3　本章小结　572
第8章　信息检索—访问信息　573
8.1　信息检索　573
8.1.1　停用词删除　574
8.1.2　利用向量空间模型进行
信息检索　576
8.2　向量空间评分以及与查询
操作器交互　583
8.3　利用隐含语义索引开发IR
系统　586
8.4　文本摘要　587
8.5　问答系统　588
8.6　本章小结　589
第9章　话语分析—知识就是信仰　590
9.1　话语分析　590
9.1.1　使用定中心理论进行
话语分析　595
9.1.2　回指解析　596
9.2　本章小结　601
第　10章 NLP系统的评估—
性能分析　602
10.1　对NLP系统进行评估的
需求　602
10.1.1　NLP工具（POS标注器、
词干还原器和形态分析器）
的评估　603
10.1.2　使用黄金数据评估
解析器　613
10.2　IR系统的评估　614
10.3　错误识别的指标　614
10.4　基于词汇匹配的指标　615
10.5　基于语法匹配的指标　619
10.6　使用浅层语义匹配的
指标　620
10.7　本章小结　621
参考书目　622
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python和NLTK自然语言处理
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>跟老齐学Python
第0章  预备	1
0.1  关于Python的故事	1
0.1.1  Python的昨天、今天和明天	1
0.1.2  优雅的Python	2
0.1.3  与其他语言比较	3
0.1.4  《Python之禅》	3
0.1.5  感谢Guido van Rossum	4
0.2  从小工到专家	4
0.2.1  Python的版本	5
0.2.2  学习Python是否需要基础	5
0.2.3  从小工到专家	5
0.3  安装Python	7
0.3.1  在Ubuntu系统中安装Python	7
0.3.2  在Windows系统中安装Python	9
0.3.3  在OS X系统中安装Python	10
0.4  开发工具	10
0.4.1  Hello，world	10
0.4.2  集成开发环境	11
0.4.3  Python的IDE	11
第1章  基本对象类型	13
1.1  数和四则运算	13
1.1.1  数	14
1.1.2  变量	16
1.1.3  四则运算	17
1.1.4  大整数	18
1.1.5  浮点数	18
1.2  除法	19
1.2.1  整数除以整数	19
1.2.2  异常的计算	19
1.2.3  引用模块解决除法问题	20
1.2.4  余数	21
1.2.5  四舍五入	22
1.3  常用数学函数和运算优先级	23
1.3.1  使用math	23
1.3.2  运算优先级	25
1.4  一个简单的程序	26
1.4.1  程序	26
1.4.2  Hello,World	27
1.4.3  解一道题目	28
1.4.4  编译	30
1.5  字符串	31
1.5.1  初步认识字符串	31
1.5.2  变量和字符串	33
1.5.3  连接字符串	34
1.5.4  Python转义符	36
1.5.5  键盘输入	36
1.5.6  原始字符串	38
1.5.7  索引和切片	39
1.5.8  字符串基本操作	41
1.5.9  字符串格式化输出	44
1.5.10  常用的字符串方法	47
1.6  字符编码	51
1.6.1  编码	52
1.6.2  计算机中的字符编码	53
1.6.3  Python字符编码	54
1.7  列表	55
1.7.1  定义	55
1.7.2  索引和切片	56
1.7.3  反转	58
1.7.4  操作列表	59
1.7.5  常用的列表函数	61
1.7.6  比较列表和字符串	71
1.7.7  列表和字符串转化	73
1.8  元组	75
1.8.1  定义	75
1.8.2  索引和切片	76
1.8.3  元组的用途	77
1.9  字典	77
1.9.1  创建字典	78
1.9.2  访问字典的值	80
1.9.3  基本操作	80
1.9.4  字符串格式化输出	82
1.9.5  字典的方法	82
1.10  集合	90
1.10.1  创建集合	90
1.10.2  set的方法	92
1.10.3  不变的集合	95
1.10.4  集合运算	96
第2章  语句和文件	100
2.1  运算符	100
2.1.1  算术运算符	100
2.1.2  比较运算符	100
2.1.3  逻辑运算符	102
2.1.4  复杂的布尔表达式	104
2.2  简单语句	105
2.2.1  什么是语句	105
2.2.2  import	105
2.2.3  赋值语句	106
2.3  条件语句	109
2.3.1  if	109
2.3.2  if ... elif ... else	110
2.3.3  三元操作符	112
2.4  for循环语句	112
2.4.1  for循环	112
2.4.2  从例子中理解for循环	113
2.4.3  range(start,stop[, step])	116
2.4.4  并行迭代	120
2.4.5  enumerate()	123
2.4.6  列表解析	125
2.5  while循环语句	126
2.5.1  做猜数字游戏	127
2.5.2  break和continue	129
2.5.3  while...else	130
2.5.4  for...else	131
2.6  文件	131
2.6.1  读文件	131
2.6.2  创建文件	133
2.6.3  使用with	135
2.6.4  文件的状态	136
2.6.5  read/readline/readlines	137
2.6.6  读很大的文件	138
2.6.7  seek	139
2.7  初识迭代	140
2.7.1  逐个访问	141
2.7.2  文件迭代器	142
第3章  函数	145
3.1  函数的基本概念	145
3.1.1  理解函数	146
3.1.2  定义函数	147
3.1.3  关于命名	150
3.2  深入探究函数	153
3.2.1  返回值	153
3.2.2  函数中的文档	155
3.2.3  函数的属性	156
3.2.4  参数和变量	157
3.2.5  参数收集	159
3.3  函数对象	161
3.3.1  递归	162
3.3.2  传递函数	163
3.3.3  嵌套函数	164
3.3.4  初识装饰器	166
3.3.5  闭包	168
3.4  特殊函数	169
3.4.1  lambda	170
3.4.2  map	171
3.4.3  reduce	173
3.4.4  filter	174
3.4.5  zip()补充	175
3.5  命名空间	176
3.5.1  全局变量和局部变量	176
3.5.2  作用域	177
3.5.3  命名空间	178
第4章  类	181
4.1  类的基本概念	181
4.1.1  术语	181
4.1.2  编写类	184
4.2  编写简单的类	185
4.2.1  创建类	185
4.2.2  实例	187
4.3  属性和数据	188
4.3.1  类属性	188
4.3.2  创建实例	190
4.3.3  实例属性	192
4.3.4  self的作用	194
4.3.5  数据流转	195
4.4  方法	196
4.4.1  绑定方法和非绑定方法	196
4.4.2  类方法和静态方法	198
4.5  继承	201
4.5.1  概念	201
4.5.2  单继承	202
4.5.3  调用覆盖的方法	205
4.5.4  多重继承	206
4.6  多态和封装	208
4.6.1  多态	208
4.6.2  封装和私有化	212
4.7  定制类	214
4.7.1  类和对象类型	214
4.7.2  自定义对象类型	215
4.8  黑魔法	219
4.8.1  优化内存	219
4.8.2  属性拦截	223
4.9  迭代器	226
4.10  生成器	229
4.10.1  定义生成器	230
4.10.2  yield	231
第5章  错误和异常	233
5.1  错误	233
5.2  异常	233
5.3  处理异常	236
5.4  assert	242
第6章  模块	244
6.1  编写模块	244
6.1.1  模块是程序	245
6.1.2  模块的位置	246
6.1.3  __all__在模块中的作用	248
6.1.4  包和库	249
6.2  标准库概述	250
6.2.1  引用的方式	250
6.2.2  深入探究	251
6.2.3  帮助、文档和源码	252
6.3  标准库举例：sys、copy	254
6.3.1  sys	254
6.3.2  copy	257
6.4  标准库举例：OS	257
6.4.1  操作文件：重命名、删除文件	258
6.4.2  操作目录	260
6.4.3  文件和目录属性	262
6.4.4  操作命令	263
6.5  标准库举例：堆	264
6.5.1  基本知识	265
6.5.2  heapq	267
6.5.3  deque	269
6.6  标准库举例：日期和时间	271
6.6.1  calendar	271
6.6.2  time	273
6.6.3  datetime	277
6.7  标准库举例：XML	279
6.7.1  XML	279
6.7.2  遍历查询	280
6.7.3  编辑	283
6.7.4  常用属性和方法总结	285
6.8  标准库举例：JSON	286
6.8.1  基本操作	286
6.8.2  大JSON字符串	287
6.9  第三方库	287
6.9.1  安装第三方库	288
6.9.2  举例：requests库	289
第7章  操作数据	293
7.1  将数据存入文件	293
7.1.1  pickle	293
7.1.2  shelve	294
7.2  操作MySQL数据库	295
7.2.1  概况	295
7.2.2  安装	296
7.2.3  运行	297
7.2.4  安装PyMySQL	297
7.2.5  连接数据库	298
7.2.6  数据库表	300
7.2.7  操作数据库	301
7.3  操作MongoDB	306
7.3.1  安装MongoDB	307
7.3.2  启动	308
7.3.3  安装pymongo	309
7.3.4  连接	309
7.3.5  编辑	310
7.4  操作SQLite	314
7.4.1  建立连接对象	314
7.4.2  建立游标对象	315
跋	318
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>跟老齐学Python
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>预测分析：Python语言实现
译者序
关于审稿人
前言
第1章数据转换成决策——从分析应用着手
1.1设计高级分析方案
1.1.1数据层：数据仓库、数据湖和数据流
1.1.2模型层
1.1.3部署层
1.1.4报告层
1.2案例学习：社交媒体数据的情感分析
1.2.1数据输入和转换
1.2.2合理性检查
1.2.3模型开发
1.2.4评分
1.2.5可视化和报告
1.3案例学习：针对性电子邮件活动
1.3.1数据输入和转换
1.3.2合理性检查
1.3.3模型开发
1.3.4评分
1.3.5可视化和报告
1.4总结
第2章Python数据分析和可视化初探
2.1在IPython中探索分类和数值型数据
2.1.1安装IPython notebook
2.1.2notebook的界面
2.1.3加载和检视数据
2.1.4基本操作——分组、过滤、映射以及透视
2.1.5用Matplotlib绘制图表
2.2时间序列分析
2.2.1清洗和转换
2.2.2时间序列诊断
2.2.3连接信号和相关性
2.3操作地理数据
2.3.1加载地理数据
2.3.2工作在云上
2.4PySpark简介
2.4.1创建SparkContext
2.4.2创建RDD
2.4.3创建Spark DataFrame
2.4总结
第3章在噪声中探求模式——聚类和无监督学习
3.1相似性和距离度量
3.1.1数值距离度量
3.1.2相关相似性度量和时间序列
3.1.3分类数据的相似性度量
3.1.4k均值聚类
3.2近邻传播算法——自动选择聚类数量
3.3k中心点算法
3.4凝聚聚类算法
3.5Spark中的数据流聚类
3.6总结
第4章从点到模型——回归方法
4.1线性回归
4.1.1数据准备
4.1.2模型拟合和评价
4.1.3回归输出的显著性差异
4.1.4广义估计方程
4.1.5混合效应模型
4.1.6时间序列数据
4.1.7广义线性模型
4.1.8线性模型的正则化
4.2树方法
4.2.1决策树
4.2.2随机森林
4.3利用PySpark进一步扩展——预测歌曲的发行年份
4.4总结
第5章数据分类——分类方法和分析
5.1逻辑回归
5.1.1多分类逻辑分类器：多元回归
5.1.2分类问题中的数据格式化
5.1.3基于随机梯度下降法的学习逐点更新
5.1.4使用二阶方法联合优化所有参数
5.2拟合模型
5.3评估分类模型
5.4通过支持向量机分离非线性边界
5.4.1人口普查数据的拟合和SVM
5.4.2Boosting:组合小模型以改善准确度
5.4.3梯度提升决策树
5.5分类方法比较
5.6案例学习：在PySpark中拟合分类器模型
5.7总结
第6章词语和像素——非结构化数据分析
6.1文本数据分析
6.1.1文本数据清洗
6.1.2从文本数据中提取特征
6.1.3利用降维来简化数据集
6.2主分量分析
6.2.1隐含狄利克雷分布
6.2.2在预测模型中使用降维
6.3图像
6.3.1图像数据清洗
6.3.2利用图像阈值来突出显示对象
6.3.3图像分析中的降维
6.4案例学习：在PySpark中训练一个推荐系统
6.5总结
第7章自底向上学习——深度网络和无监督特征
7.1使用神经网络学习模式
7.1.1单一感知器构成的网络
7.1.2感知器组合——一个单层神经网络
7.1.3反向传播的参数拟合
7.1.4判别式模型与生成式模型
7.1.5梯度消失及“解去”
7.1.6预训练信念网络（贝叶斯网络）
7.1.7使用dropout来正则化网络
7.1.8卷积网络和纠正单元
7.1.9利用自编码网络压缩数据
7.1.10优化学习速率
7.2TensorFlow库与数字识别
7.2.1MNIST数据
7.2.2构建网络
7.3总结
第8章利用预测服务共享模型
8.1预测服务的架构
8.2客户端和发出请求
8.2.1GET请求
8.2.2POST请求
8.2.3HEAD请求
8.2.4PUT请求
8.2.5DELETE请求
8.3服务器——Web流量控制器
8.4利用数据库系统持久化存储信息
8.5案例学习——逻辑回归服务
8.5.1建立数据库
8.5.2Web服务器
8.5.3Web应用
8.6总结
第9章报告和测试——分析型系统迭代
9.1利用诊断检查模型的健康度
9.1.1评估模型性能的变化
9.1.2特征重要性的变化
9.1.3无监督模型性能的变化
9.2通过A/B测试对模型进行迭代
9.2.1实验分配——将客户分配给实验
9.2.2决定样本大小
9.2.3多重假设检验
9.3沟通指南
9.3.1将术语转换为业务价值
9.3.2可视化结果
9.3.3报告服务器
9.3.4报告应用
9.3.5可视化层
9.4总结
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>预测分析：Python语言实现
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深度学习-基于Python语言和TensorFlow平台
第1章　人工智能极简历史　1
1.1　重要的奠基时期　2
1.1.1　神经元的研究和人工神经元模型的提出　2
1.1.2　计算机和程序的出现　3
1.1.3　图灵测试的提出　4
1.2　人工智能的诞生　4
1.3　第一个快速发展期　5
1.4　人工智能的第一个寒冬　5
1.5　人工智能研究的沉默探索与复苏　6
1.6　人工智能的第二个冬天　9
1.7　再一次腾飞　9
1.7.1　计算机综合计算能力的大幅提升　9
1.7.2　大数据的出现　11
1.7.3　神经网络研究的成熟化　11
1.8　未来展望　13
1.9　本章小结：历史指引未来　18
第2章　开发环境准备　19
2.1　安装Python　20
2.1.1　Windows操作系统下安装Python　20
2.1.2　Mac OS X操作系统下安装Python　29
2.1.3　Linux操作系统下安装Python　30
2.2　安装TensorFlow　30
2.3　打造更舒适的开发环境　32
2.3.1　修改Windows资源管理器的一些显示设置　32
2.3.2　命令提示符CMD的替代方案　34
2.3.3　文本文件编辑器　36
2.3.4　Python语言专用的开发工具　40
2.4　知识背景准备　45
2.4.1　怎样输入Python程序　45
2.4.2　怎样执行Python程序　45
2.4.3　变量　46
2.4.4　函数（方法）　50
2.4.5　对象　51
2.4.6　条件判断与分支　53
2.4.7　循环　54
2.4.8　注释　55
2.4.9　程序运行时出现错误怎么办　55
2.4.10　本章小结：一段示例代码　56
第3章　初识TensorFlow　57
3.1　三好学生成绩问题的引入　58
3.2　搭建解决三好学生成绩问题的神经网络　58
3.3　训练神经网络　62
3.4　本章小结：解决的第一个问题　68
3.5　练习　68
第4章　简化神经网络模型　69
4.1　在程序运行中查看变量取值　70
4.2　张量概念的引入　70
4.3　用向量重新组织输入数据　72
4.4　简化的神经网络模型　75
4.5　概念补充——标量、多维数组等　76
4.5.1　标量　76
4.5.2　多维数组　76
4.5.3　张量的阶和形态　77
4.6　在TensorFlow中查看和设定张量的形态　78
4.7　用softmax函数来规范可变参数　81
4.8　本章小结：线性问题　83
4.9　练习　84
第5章　用神经网络解决非线性问题　85
5.1　非线性问题的引入　86
5.1.1　三好学生评选结果问题　86
5.1.2　二分类问题：是否为三好学生　86
5.1.3　非线性问题　87
5.2　设计神经网络模型　88
5.2.1　激活函数sigmoid　88
5.2.2　使用sigmoid函数后的神经网络模型　89
5.2.3　实现本模型的代码　89
5.3　准备训练数据　90
5.3.1　随机数　90
5.3.2　产生随机训练数据　90
5.4　完整的训练代码　92
5.4.1　使用随机数据进行训练　92
5.4.2　加入偏移量b加快训练过程　94
5.5　进阶：批量生成随机训练数据　97
5.6　本章小结：非线性问题　100
5.7　练习　100
第6章　从文件中载入训练数据　101
6.1　用纯文本文件准备训练数据　102
6.1.1　数据的数字化　102
6.1.2　训练数据的格式　102
6.1.3　数据整理　103
6.1.4　使用CSV格式文件辅助处理数据　104
6.2　加载文件中的训练数据　106
6.2.1　加载函数　106
6.2.2　非数字列的舍弃　106
6.2.3　非数字列与数字列的转换　107
6.2.4　行数据的分拆及如何“喂”给训练过程　108
6.3　本章小结：读取训练数据最常用的方式　110
6.4　练习　110
第7章　多层全连接神经网络　111
7.1　身份证问题的引入　112
7.2　问题分析　112
7.3　单层网络的模型　112
7.4　多层全连接神经网络　115
7.4.1　矩阵乘法　115
7.4.2　如何用矩阵乘法实现全连接层　116
7.4.3　使用均方误差作为计算误差的方法　119
7.4.4　激活函数tanh　120
7.4.5　新的模型　121
7.5　身份证问题新模型的代码实现　121
7.6　进一步优化模型和代码　124
7.7　本章小结：多层、全连接、线性与非线性　125
7.8　练习　126
第8章　保存和载入训练过程　127
8.1　保存训练过程　128
8.2　载入保存的训练过程并继续训练　130
8.3　通过命令行参数控制是否强制重新开始训练　132
8.4　训练过程中手动保存　135
8.5　保存训练过程前征得同意　137
8.6　本章小结：善于利用保存和载入训练过程　139
8.7　练习　139
第9章　查看图形化的模型　140
9.1　数据流图的概念　141
9.2　用TensorBoard查看数据流图　141
9.3　控制TensorBoard图中对象的名称　143
9.4　本章小结：图形化的模型　145
9.5　练习　145
第10章　用训练好的模型进行预测　146
10.1　从命令行参数读取需要预测的数据　147
10.2　从文件中读取数据进行预测　149
10.3　从任意字符串中读取数据进行预测　152
10.4　本章小结：预测与训练的区别　154
10.5　练习　154
第11章　用高级工具简化建模和训练过程　155
11.1　Keras框架介绍　156
11.2　用Keras实现神经网络模型　156
11.3　用Keras进行预测　158
11.4　保存和载入Keras模型　160
11.5　本章小结：方便与灵活度的取舍　161
11.6　练习　161
第12章　在其他语言中调用TensorFlow模型　162
12.1　如何保存模型　163
12.2　在Java语言中载入TensorFlow模型并进行预测计算　165
12.3　在Go语言中载入TensorFlow模型并进行预测计算　167
12.4　本章小结：仅能预测　167
第13章　用卷积神经网络进行图像识别　169
13.1　情凭谁来定错对——一首歌引出的对错问题　170
13.2　卷积神经网络介绍　170
13.2.1　卷积神经网络的基本概念　170
13.2.2　数字图片在计算机中的表达形式　170
13.2.3　卷积层的具体计算过程　172
13.2.4　卷积层的原理和优点　174
13.2.5　卷积神经网络的典型结构　177
13.3　用卷积网络实现图像识别　177
13.3.1　钩叉问题的图像数据格式　177
13.3.2　准备钩叉问题的训练数据　178
13.3.3　设计钩叉问题的神经网络模型并实现　179
13.4　本章小结：进一步优化的方向　183
13.5　练习　183
第14章　循环神经网络初探　184
14.1　循环神经网络简介　185
14.2　长短期记忆模型LSTM的作用　186
14.3　汇率预测问题的引入　186
14.4　用于汇率预测的LSTM神经网络模型　187
14.5　实现汇率预测LSTM网络的代码　188
14.6　用循环神经网络来进行自然语言处理　193
14.7　本章小结：时序有关问题　195
14.8　练习　195
第15章　优化器的选择与设置　196
15.1　优化器的作用　197
15.2　梯度下降算法　197
15.3　学习率的影响　198
15.4　主流优化方法介绍　199
15.5　优化器效率对比　200
15.6　本章小结：渡河之筏　203
第16章　下一步学习方向指南　204
16.1　更多的激活函数　205
16.2　更多的隐藏层类型　205
16.3　确定最适合的神经网络类型　206
16.4　GPU版本　206
16.5　有监督学习与无监督学习　207
16.6　深度学习进阶　207
16.7　升级到最新的TensorFlow版本　207
16.8　本章小结：最后的实例　208
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深度学习-基于Python语言和TensorFlow平台
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python+Spark 2.0+Hadoop机器学习与大数据实战
目   录


第1章  Python Spark机器学习与Hadoop大数据     1
1.1  机器学习的介绍   2
1.2 Spark的介绍 5
1.3 Spark数据处理 RDD、DataFrame、Spark SQL  7
1.4  使用Python开发 Spark机器学习与大数据应用       8
1.5 Python Spark 机器学习         9
1.6 Spark ML Pipeline机器学习流程介绍  10
1.7 Spark 2.0的介绍    12
1.8  大数据定义   13
1.9 Hadoop 简介          14
1.10 Hadoop HDFS分布式文件系统  14
1.11 Hadoop MapReduce的介绍        17
1.12 结论      18
第2章  VirtualBox虚拟机软件的安装        19
2.1 VirtualBox的下载和安装      20
2.2  设置VirtualBox存储文件夹          23
2.3  在VirtualBox创建虚拟机     25
2.4  结论        29
第3章  Ubuntu Linux 操作系统的安装      30
3.1 Ubuntu Linux 操作系统的安装    31
3.2  在Virtual设置Ubuntu虚拟光盘文件 33
3.3  开始安装Ubuntu  35
3.4  启动Ubuntu  40
3.5  安装增强功能        41
3.6  设置默认输入法   45
3.7  设置“终端”程序        48
3.8  设置“终端”程序为白底黑字   49
3.9  设置共享剪贴板   50
3.10 设置最佳下载服务器 52
3.11 结论      56
第4章  Hadoop Single Node Cluster的安装        57
4.1  安装JDK         58
4.2  设置SSH无密码登录    61
4.3  下载安装Hadoop  64
4.4  设置Hadoop环境变量 67
4.5  修改Hadoop配置设置文件 69
4.6  创建并格式化HDFS目录     73
4.7  启动Hadoop  74
4.8  打开HadoopResource-Manager Web界面 76
4.9 NameNode HDFS Web界面   78
4.10 结论      79
第5章  Hadoop Multi Node Cluster的安装         80
5.1  把Single NodeCluster复制到data1    83
5.2  设置VirtualBox网卡     84
5.3  设置data1服务器         87
5.4  复制data1服务器到data2、data3、master     94
5.5  设置data2服务器         97
5.6  设置data3服务器         100
5.7  设置master服务器      102
5.8 master连接到data1、data2、data3 创建HDFS目录      107
5.9  创建并格式化NameNodeHDFS目录  110
5.10 启动Hadoop Multi Node Cluster         112
5.11 打开Hadoop ResourceManager Web界面         114
5.12 打开NameNode Web界面 115
5.13 停止Hadoop Multi Node Cluster         116
5.14 结论      116
第 6 章  Hadoop HDFS命令        117
6.1  启动HadoopMulti-Node Cluster  118
6.2  创建与查看HDFS目录 120
6.3  从本地计算机复制文件到HDFS  122
6.4  将HDFS上的文件复制到本地计算机 127
6.5  复制与删除HDFS文件 129
6.6  在Hadoop HDFSWeb用户界面浏览HDFS  131
6.7  结论        134
第7章  Hadoop MapReduce         135
7.1  简单介绍WordCount.java     136
7.2  编辑WordCount.java     137
7.3  编译WordCount.java     141
7.4  创建测试文本文件        143
7.5  运行WordCount.java     145
7.6  查看运行结果        146
7.7  结论        147
第8章  Python Spark的介绍与安装   148
8.1 Scala的介绍与安装       150
8.2  安装Spark      153
8.3  启动pyspark交互式界面     156
8.4  设置pyspark显示信息 157
8.5  创建测试用的文本文件        159
8.6  本地运行pyspark程序 161
8.7  在Hadoop YARN运行pyspark      163
8.8  构建SparkStandalone Cluster运行环境      165
8.9  在SparkStandalone运行pyspark         171
8.10 Spark Web UI界面        173
8.11 结论      175
第9章  在 IPythonNotebook 运行 Python Spark 程序   176
9.1  安装Anaconda       177
9.2  在IPythonNotebook使用Spark   180
9.3  打开IPythonNotebook笔记本     184
9.4  插入程序单元格   185
9.5  加入注释与设置程序代码说明标题   186
9.6  关闭IPythonNotebook 188
9.7  使用IPythonNotebook在Hadoop YARN-client模式运行   189
9.8  使用IPythonNotebook在Spark Stand Alone模式运行       192
9.9  整理在不同的模式运行IPythonNotebook的命令     194
9.9.1 在 Local 启动 IPython Notebook     195
9.9.2 在Hadoop YARN-client 模式启动 IPython Notebook       195
9.9.3 在Spark Stand Alone 模式启动 IPython Notebook 195
9.10 结论      196
第10章  Python Spark RDD 197
10.1 RDD的特性 198
10.2 开启IPython Notebook        199
10.3 基本RDD“转换”运算     201
10.4 多个RDD“转换”运算     206
10.5 基本“动作”运算      208
10.6 RDD Key-Value 基本“转换”运算   209
10.7 多个RDD Key-Value“转换”运算     212
10.8 Key-Value“动作”运算      215
10.9 Broadcast 广播变量   217
10.10 accumulator累加器  220
10.11 RDD Persistence持久化   221
10.12 使用Spark创建WordCount      223
10.13 Spark WordCount详细解说       226
10.14 结论   228
第11章  Python Spark的集成开发环境     229
11.1 下载与安装eclipse Scala IDE      232
11.2 安装PyDev  235
11.3 设置字符串替代变量 240
11.4 PyDev 设置 Python 链接库       243
11.5 PyDev设置anaconda2链接库路径   245
11.6 PyDev设置Spark Python链接库         247
11.7 PyDev设置环境变量  248
11.8 新建PyDev项目 251
11.9 加入WordCount.py程序     253
11.10 输入WordCount.py程序  254
11.11 创建测试文件并上传至HDFS目录 257
11.12 使用spark-submit执行WordCount程序         259
11.13 在Hadoop YARN-client上运行WordCount程序      261
11.14 在Spark Standalone Cluster上运行WordCount程序      264
11.15 在eclipse外部工具运行Python Spark程序    267
11.16 在eclipse运行spark-submit YARN-client          273
11.17 在eclipse运行spark-submit Standalone 277
11.18 结论   280
第12章  Python Spark创建推荐引擎 281
12.1 推荐算法介绍      282
12.2 “推荐引擎”大数据分析使用场景 282
12.3 ALS推荐算法的介绍   283
12.4 如何搜索数据      285
12.5 启动IPython Notebook        289
12.6 如何准备数据      290
12.7 如何训练模型      294
12.8 如何使用模型进行推荐      295
12.9 显示推荐的电影名称 297
12.10 创建Recommend项目      299
12.11 运行RecommendTrain.py 推荐程序代码        302
12.12 创建Recommend.py推荐程序代码         304
12.13 在eclipse运行Recommend.py         307
12.14 结论   310
第13章  Python Spark MLlib决策树二元分类   311
13.1 决策树介绍 312
13.2 “StumbleUpon Evergreen”大数据问题  313
13.2.1 Kaggle网站介绍       313
13.2.2 “StumbleUpon Evergreen”大数据问题场景分析        313
13.3 决策树二元分类机器学习 314
13.4 如何搜集数据      315
13.4.1 StumbleUpon数据内容    315
13.4.2 下载 StumbleUpon 数据         316
13.4.3 用LibreOffice Calc 电子表格查看train.tsv    319
13.4.4 复制到项目目录       322
13.5  使用IPython Notebook示范       323
13.6 如何进行数据准备      324
13.6.1 导入并转换数据       324
13.6.2 提取 feature 特征字段  327
13.6.3 提取分类特征字段  328
13.6.4 提取数值特征字段  331
13.6.5 返回特征字段  331
13.6.6 提取 label 标签字段       331
13.6.7 建立训练评估所需的数据       332
13.6.8 以随机方式将数据分为 3 部分并返回         333
13.6.9 编写 PrepareData(sc) 函数    333
13.7 如何训练模型      334
13.8 如何使用模型进行预测      335
13.9 如何评估模型的准确率      338
13.9.1 使用 AUC 评估二元分类模型        338
13.9.2 计算 AUC 339
13.10 模型的训练参数如何影响准确率   341
13.10.1 建立 trainEvaluateModel       341
13.10.2 评估impurity参数 343
13.10.3 训练评估的结果以图表显示         344
13.10.4 编写 evalParameter       347
13.10.5 使用 evalParameter 评估 maxDepth 参数        347
13.10.6 使用 evalParameter 评估 maxBins 参数  348
13.11 如何找出准确率最高的参数组合   349
13.12 如何确认是否过度训练   352
13.13 编写RunDecisionTreeBinary.py程序        352
13.14 开始输入RunDecisionTreeBinary.py程序        353
13.15 运行RunDecisionTreeBinary.py         355
13.15.1 执行参数评估         355
13.15.2 所有参数训练评估找出最好的参数组合    355
13.15.3 运行 RunDecisionTreeBinary.py 不要输入参数  357
13.16 查看DecisionTree的分类规则          358
13.17 结论   360
第14章  Python Spark MLlib 逻辑回归二元分类       361
14.1 逻辑回归分析介绍      362
14.2 RunLogisticRegression WithSGDBinary.py程序说明 363
14.3 运行RunLogisticRegression WithSGDBinary.py进行参数评估          367
14.4 找出最佳参数组合      370
14.5 修改程序使用参数进行预测      370
14.6 结论      372
第15章  Python Spark MLlib支持向量机SVM二元分类  373
15.1 支持向量机SVM算法的基本概念    374
15.2 运行SVMWithSGD.py进行参数评估          376
15.3 运行SVMWithSGD.py 训练评估参数并找出最佳参数组合    378
15.4 运行SVMWithSGD.py 使用最佳参数进行预测        379
15.5 结论      381
第16章  Python Spark MLlib朴素贝叶斯二元分类   382
16.1 朴素贝叶斯分析原理的介绍      383
16.2 RunNaiveBayesBinary.py程序说明     384
16.3 运行NaiveBayes.py进行参数评估    386
16.4 运行训练评估并找出最好的参数组合      387
16.5 修改RunNaiveBayesBinary.py 直接使用最佳参数进行预测  388
16.6 结论      390
第17章  Python Spark MLlib决策树多元分类   391
17.1 “森林覆盖植被”大数据问题分析场景 392
17.2 UCI Covertype数据集介绍 393
17.3 下载与查看数据 394
17.4 修改PrepareData() 数据准备   396
17.5 修改trainModel 训练模型程序         398
17.6 使用训练完成的模型预测数据 399
17.7 运行RunDecisionTreeMulti.py 进行参数评估  401
17.8 运行RunDecisionTreeMulti.py 训练评估参数并找出最好的参数组合  403
17.9 运行RunDecisionTreeMulti.py 不进行训练评估      404
17.10 结论   406
第18章  Python Spark MLlib决策树回归分析   407
18.1 Bike Sharing大数据问题分析     408
18.2 Bike Sharing数据集     409
18.3 下载与查看数据 409
18.4 修改 PrepareData() 数据准备  412
18.5 修改DecisionTree.trainRegressor训练模型      415
18.6 以 RMSE 评估模型准确率         416
18.7 训练评估找出最好的参数组合 417
18.8 使用训练完成的模型预测数据 417
18.9 运行RunDecisionTreeMulti.py进行参数评估   419
18.10 运行RunDecisionTreeMulti.py训练评估参数并找出最好的参数组合 421
18.11 运行RunDecisionTreeMulti.py 不进行训练评估    422
18.12 结论   424
第19章  Python Spark SQL、DataFrame、RDD数据统计与可视化         425
19.1 RDD、DataFrame、Spark SQL 比较  426
19.2 创建RDD、DataFrame与Spark SQL 427
19.2.1 在 local 模式运行 IPython Notebook    427
19.2.2 创建RDD  427
19.2.3 创建DataFrame        428
19.2.4 设置 IPython Notebook 字体 430
19.2.5 为DataFrame 创建别名 431
19.2.6 开始使用 Spark SQL         431
19.3 SELECT显示部分字段          434
19.3.1 使用 RDD 选取显示部分字段       434
19.3.2 使用 DataFrames 选取显示字段  434
19.3.3 使用 Spark SQL 选取显示字段       435
19.4 增加计算字段      436
19.4.1 使用 RDD 增加计算字段       436
19.4.2 使用 DataFrames 增加计算字段  436
19.4.3 使用 Spark SQL 增加计算字段       437
19.5 筛选数据      438
19.5.1 使用 RDD 筛选数据       438
19.5.2 使用 DataFrames 筛选数据  438
19.5.3 使用 Spark SQL 筛选数据       439
19.6 按单个字段给数据排序      439
19.6.1 RDD 按单个字段给数据排序          439
19.6.2 使用 Spark SQL排序        440
19.6.3 使用 DataFrames按升序给数据排序   441
19.6.4 使用 DataFrames按降序给数据排序   442
19.7 按多个字段给数据排序      442
19.7.1 RDD 按多个字段给数据排序          442
19.7.2 Spark SQL 按多个字段给数据排序         443
19.7.3 DataFrames 按多个字段给数据排序    443
19.8 显示不重复的数据      444
19.8.1 RDD 显示不重复的数据          444
19.8.2 Spark SQL 显示不重复的数据         445
19.8.3 Dataframes显示不重复的数据      445
19.9 分组统计数据      446
19.9.1 RDD 分组统计数据          446
19.9.2 Spark SQL分组统计数据 447
19.9.3 Dataframes分组统计数据      448
19.10 Join 联接数据   450
19.10.1 创建 ZipCode 450
19.10.2 创建 zipcode_tab  452
19.10.3 Spark SQL 联接 zipcode_table 数据表         454
19.10.4 DataFrame user_df 联接 zipcode_df   455
19.11 使用 Pandas DataFrames 绘图       457
19.11.1 按照不同的州统计并以直方图显示    457
19.11.2 按照不同的职业统计人数并以圆饼图显示         459
19.12 结论   461
第20章  Spark ML Pipeline 机器学习流程二元分类         462
20.1 数据准备      464
20.1.1 在 local 模式执行 IPython Notebook    464
20.1.2 编写 DataFrames UDF 用户自定义函数       466
20.1.3 将数据分成 train_df 与 test_df    468
20.2 机器学习pipeline流程的组件   468
20.2.1 StringIndexer     468
20.2.2 OneHotEncoder         470
20.2.3 VectorAssembler       472
20.2.4 使用 DecisionTreeClassi?er 二元分类  474
20.3 建立机器学习pipeline流程        475
20.4 使用pipeline进行数据处理与训练   476
20.5 使用pipelineModel 进行预测    477
20.6 评估模型的准确率      478
20.7 使用TrainValidation进行训练验证找出最佳模型    479
20.8 使用crossValidation交叉验证找出最佳模型   481
20.9 使用随机森林 RandomForestClassi?er分类器         483
20.10 结论   485
第21章  Spark ML Pipeline 机器学习流程多元分类         486
21.1 数据准备      487
21.1.1 读取文本文件  488
21.1.2  创建 DataFrame      489
21.1.3 转换为 double 490
21.2 建立机器学习pipeline流程        492
21.3 使用dt_pipeline进行数据处理与训练      493
21.4 使用pipelineModel 进行预测    493
21.5 评估模型的准确率      495
21.4 使用TrainValidation进行训练验证找出最佳模型    496
21.7 结论      498
第22章  Spark ML Pipeline 机器学习流程回归分析         499
22.1 数据准备      501
22.1.1 在local 模式执行 IPython Notebook     501
22.1.2 将数据分成 train_df 与 test_df    504
22.2 建立机器学习pipeline流程        504
22.3 使用dt_pipeline进行数据处理与训练      506
22.4 使用pipelineModel 进行预测    506
22.5 评估模型的准确率      507
22.6 使用TrainValidation进行训练验证找出最佳模型    508
22.7 使用crossValidation进行交叉验证找出最佳模型   510
22.8 使用GBT Regression   511
22.9 结论      513
附录A  本书范例程序下载与安装说明      514
A.1  下载范例程序        515
A.2  打开本书IPythonNotebook范例程序         516
A.3  打开 eclipsePythonProject 范例程序         518
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python+Spark 2.0+Hadoop机器学习与大数据实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>小天才学Python（教学指导）
第1 课 认识Python
一、教学目标和教学要求
二、教材内容分析
三、教学重点和难点
四、教学建议
五、本课相关资料介绍
六、练习题
第2 课 海龟画图
一、教学目标和教学要求
二、教材内容分析
三、教学重点和难点
四、教学建议
五、本课相关资料介绍
第3 课 做数学
一、教学目标和教学要求
二、教材内容分析
三、教学重点和难点
四、教学建议
五、关于练习
六、本课相关资料介绍
第4 课 画彩色图
一、教学目标和教学要求
二、教材内容分析
三、教学重点和难点
四、教学建议
五、关于练习
六、本课相关资料介绍
第5 课 做判断
一、教学目标和教学要求
二、教材内容分析
三、教学重点和难点
四、教学建议
五、关于练习
六、本课相关资料介绍
第6 课 循环往复
一、教学目标和教学要求
二、教学重点和难点
三、教材内容分析与教学建议
四、本课相关资料介绍
第7 课 电报
一、教学目标和教学要求
二、教学重点和难点
三、教材内容分析与教学建议
四、本课相关资料介绍
第8 课 画笔
一、教学目标和教学要求
二、教学重点和难点
三、教材内容分析与教学建议
四、本课相关资料介绍
第9 课 调色板
一、教学目标和教学要求
二、教材内容分析
三、教学重点和难点
四、教学建议
五、关于练习
六、本课相关资料介绍
第10 课 弹球
一、教学目标和教学要求
二、教材内容分析
三、教学重点和难点
四、教学建议
五、关于练习
六、本课相关资料介绍
第11 课 缤纷色彩
一、教学目标和教学要求
二、教材内容分析
三、教学重点和难点
四、教学建议
五、关于练习
第12 课 大数据
一、教学目标和教学要求
二、教材内容分析
三、教学重点和难点
四、教学建议
第13 课 人工智能
一、教学目标和教学要求
二、教材内容分析
三、教学重点和难点
四、教学建议
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>小天才学Python（教学指导）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python Docker实战
第1章 容器化简介 1
1.1 什么是Docker 1
1.1.1 Docker公司 1
1.1.2 软件技术层面的Docker 2
1.1.3 理解Docker所解决的问题 2
1.2 容器化历程 3
1.2.1 1979年：chroot 3
1.2.2 2000年：FreeBSD jail 4
1.2.3 2005年：OpenVZ 4
1.2.4 2006年：cgroups 4
1.2.5 2008年：LXC 5
1.3 理解容器和虚拟机之间的区别 5
1.4 本章小结 6
第2章 Docker入门 7
2.1 安装Docker 7
2.1.1 在Windows上安装Docker 8
2.1.2 在macOS上安装Docker 10
2.1.3 在Linux上安装Docker 11
2.1.4 理解Docker相关术语 13
2.1.5 Docker实践 19
2.2 本章小结 31
第3章 构建Python应用程序 33
3.1 项目介绍 33
3.1.1 设置Telegram Messenger 34
3.1.2 BotFather：Telegram的机器人创建接口 35
3.1.3 newsbot：Python应用程序 38
3.2 本章小结 42
第4章 理解Dockerfile 43
4.1 Dockerfile 43
4.1.1 构建上下文 44
4.1.2 dockerignore 45
4.1.3 使用docker build进行构建 46
4.1.4 Dockerfile指令 48
4.1.5 编写Dockerfile的原则和建议 65
4.1.6 多阶段构建 66
4.1.7 Dockerfile练习 66
4.2 本章小结 74
第5章 理解Docker卷 75
5.1 数据持久化 75
5.1.1 Docker容器内部数据丢失的例子 76
5.1.2 Docker卷练习 88
5.2 本章小结 98
第6章 理解Docker网络 99
6.1 为何需要容器网络 99
6.1.1 默认的Docker网络驱动 100
6.1.2 使用Docker网络 102
6.2 Docker网络练习 117
6.3 本章小结 123
第7章 理解Docker Compose 125
7.1 Docker Compose概述 125
7.1.1 安装Docker Compose 126
7.1.2 Docker Compose基础 127
7.1.3 Docker Compose文件参考 132
7.1.4 Docker Compose CLI参考 137
7.1.5 Docker Compose练习 138
7.2 本章小结 150
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python Docker实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Pythonクローリング&スクレイピング
目次
1. クローリング・スクレイピングとは何か
2. Pythonではじめるクローリング・スクレイピング
3. 強力なライブラリの活用
4. 実用のためのメソッド
5. クローリング・スクレイピングの実践とデータの活用
6. フレームワーク Scrapy
7. クローラーの継続的な運用・管理
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Pythonクローリング&スクレイピング
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Pythonからはじめる数学入門
目次
日本語版まえがき
謝辞
はじめに
1章 数を扱う
1.1 基本数学演算
1.2 ラベル:名前に数を割り当てる
1.3 さまざまな種類の数
1.4 ユーザ入力を受け取る
1.5 数学を行うプログラムを書く
1.6 学んだこと
1.7 プログラミングチャレンジ
2章 データをグラフで可視化する
2.1 デカルト座標平面を理解する
2.2 リストとタプルの操作
2.3 matplotlibでグラフを作る
2.4 式をプロットする
2.5 学んだこと
2.6 プログラミングチャレンジ
3章 データを統計量で記述する
3.1 平均を求める
3.2 中央値を求める
3.3 最頻値を求め度数分布表を作る
3.4 散らばりを測る
3.5 2つのデータセットの相関を計算する
3.6 散布図
3.7 ファイルからデータを読み込む
3.8 学んだこと
3.9 プログラミングチャレンジ
4章 SymPyで代数と式を計算する
4.1 式の記号と記号演算を定義する
4.2 式を扱う
4.3 方程式を解く
4.4 SymPyを使ってプロットする
4.5 学んだこと
4.6 プログラミングチャレンジ
5章 集合と確率を操作する
5.1 集合とは何か
5.2 確率
5.3 学んだこと
5.4 プログラミングチャレンジ
6章 幾何図形とフラクタルを描画する
6.1 matplotlibのパッチで幾何図形を描く
6.2 フラクタルを描く
6.3 学んだこと
6.4 プログラミングチャレンジ
7章 初等解析問題を解く
7.1 関数とは何か
7.2 SymPyでの仮定
7.3 関数の極限を求める
7.4 関数の微分を求める
7.5 高階微分と極大極小の計算
7.6 勾配上昇法を用いて最大値を求める
7.7 関数の積分を求める
7.8 確率密度関数
7.9 学んだこと
7.10 プログラミングチャレンジ
付録A ソフトウェアのインストール
付録B Pythonについて
あとがき
用語集
訳者あとがき
索引
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Pythonからはじめる数学入門
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>科学技術計算のためのPython入門
目次
科学技術計算とPython
ゼロからのシミュレータ開発
IPythonとSpyder
Pythonの基礎
クラスとオブジェクトの基礎
入力と出力
NumPy
SciPy
Matplotlib
pandas
プログラムの高速化
プログラム高速化の応用例
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>科学技術計算のためのPython入門
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据分析实战
Contents?目录
译者序
前言
第1章为可重复的数据分析奠定基础1
1.1简介1
1.2安装Anaconda2
1.3安装数据科学工具包3
1.4用virtualenv和virtualenvwrapper创建Python虚拟环境5
1.5使用Docker镜像沙盒化Python应用6
1.6在IPythonNotebook中记录软件包的版本和历史8
1.7配置IPython11
1.8学习为鲁棒性错误校验记录日志13
1.9为你的代码写单元测试16
1.10配置pandas18
1.11配置matplotlib20
1.12为随机数生成器和NumPy打印选项设置种子23
1.13使报告、代码风格和数据访问标准化24
第2章创建美观的数据可视化28
2.1简介28
2.2图形化安斯库姆四重奏28
2.3选择Seaborn的调色板31
2.4选择matplotlib的颜色表33
2.5与IPythonNotebook部件交互35
2.6查看散点图矩阵38
2.7通过mpld3使用d3.js进行可视化40
2.8创建热图41
2.9把箱线图、核密度图和小提琴图组合44
2.10使用蜂巢图可视化网络图45
2.11显示地图47
2.12使用类ggplot2图49
2.13使用影响图高亮数据51
第3章统计数据分析和概率53
3.1简介53
3.2将数据拟合到指数分布53
3.3将聚合数据拟合到伽马分布55
3.4将聚合计数拟合到泊松分布57
3.5确定偏差59
3.6估计核密度61
3.7确定均值、方差和标准偏差的置信区间64
3.8使用概率权重采样66
3.9探索极值68
3.10使用皮尔逊相关系数测量变量之间的相关性71
3.11使用斯皮尔曼等级相关系数测量变量之间的相关性74
3.12使用点二列相关系数测量二值变量和连续变量的相关性77
3.13评估变量与方差分析之间的关系78
第4章处理数据和数值问题81
4.1简介81
4.2剪辑和过滤异常值81
4.3对数据进行缩尾处理84
4.4测量噪声数据的集中趋势85
4.5使用Box-Cox变换进行归一化88
4.6使用幂阶梯转换数据90
4.7使用对数转换数据91
4.8重组数据93
4.9应用logit()来变换比例95
4.10拟合鲁棒线性模型97
4.11使用加权最小二乘法考虑方差99
4.12使用任意精度进行优化101
4.13使用任意精度的线性代数103
第5章网络挖掘、数据库和大数据107
5.1简介107
5.2模拟网页浏览108
5.3网络数据挖掘110
5.4处理非ASCII文本和HTML实体112
5.5实现关联表114
5.6创建数据库迁移脚本117
5.7在已经存在的表中增加一列117
5.8在表创建之后添加索引118
5.9搭建一个测试Web服务器120
5.10实现具有事实表和维度表的星形模式121
5.11使用Hadoop分布式文件系统126
5.12安装配置Spark127
5.13使用Spark聚类数据128
第6章信号处理和时间序列132
6.1简介132
6.2使用周期图做频谱分析132
6.3使用Welch算法估计功率谱密度134
6.4分析峰值136
6.5测量相位同步138
6.6指数平滑法140
6.7评估平滑法142
6.8使用Lomb-Scargle周期图145
6.9分析音频的频谱146
6.10使用离散余弦变换分析信号149
6.11对时序数据进行块自举151
6.12对时序数据进行动态块自举153
6.13应用离散小波变换155
第7章利用金融数据分析选择股票159
7.1简介159
7.2计算简单收益率和对数收益率159
7.3使用夏普比率和流动性对股票进行排名161
7.4使用卡玛和索提诺比率对股票进行排名162
7.5分析收益统计164
7.6将个股与更广泛的市场相关联166
7.7探索风险与收益169
7.8使用非参数运行测试检验市场170
7.9测试随机游走173
7.10使用自回归模型确定市场效率175
7.11为股票价格数据库建表177
7.12填充股票价格数据库178
7.13优化等权重双资产组合183
第8章文本挖掘和社交网络分析186
8.1简介186
8.2创建分类的语料库186
8.3以句子和单词标记化新闻文章189
8.4词干提取、词形还原、过滤和TF-IDF得分189
8.5识别命名实体193
8.6提取带有非负矩阵分解的主题194
8.7实现一个基本的术语数据库196
8.8计算社交网络密度200
8.9计算社交网络接近中心性201
8.10确定中介中心性202
8.11评估平均聚类系数203
8.12计算图的分类系数204
8.13获得一个图的团数205
8.14使用余弦相似性创建文档图206
第9章集成学习和降维209
9.1简介209
9.2递归特征消除210
9.3应用主成分分析来降维211
9.4应用线性判别分析来降维213
9.5多模型堆叠和多数投票214
9.6学习随机森林217
9.7使用RANSAC算法拟合噪声数据220
9.8使用Bagging来改善结果222
9.9用于更好学习的Boosting算法224
9.10嵌套交叉验证227
9.11使用joblib重用模型229
9.12层次聚类数据231
9.13Theano之旅232
第10章评估分类器、回归器和聚类235
10.1简介235
10.2直接使用混淆矩阵分类235
10.3计算精度、召回率和F1分数23
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据分析实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python黑客攻防入门
前言
作者序
第1章 概要
第2章 黑客攻击技术
第3章 基础知识
第4章 黑客攻击准备
第5章 应用程序黑客攻击
第6章 Web黑客攻击
第7章 网络黑客攻击
第8章 系统黑客攻击
第9章 黑客高手修炼之道
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python黑客攻防入门
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python编程基础与HTTP接口测试
目  录
第一部分  初识与初心
第一章  Python正流行	2
1.1  语言排行榜与技术雷达	2
1.2  Python之禅	5
1.3  无所不能的Python	8
第二章  接口测试的崛起	9
2.1  接口测试简介	9
2.2  Ajax接口与Web动静分离	10
2.3  Restful接口	11
第三章  测试工程师的自动化测试转型	13
3.1  “点点点”测试工程师的困惑	13
3.2  自动化测试到底要学什么	14
3.3  摆脱“点点点”从哪里开始	16
第二部分  认识Python
第四章  我来了	20
4.1  第一声问候	20
4.2  小青，你几岁了？	23
4.3  我会做加法	28
4.4  这是奇数还是偶数？	30
4.5  我们三个谁最大	32
4.6  FizzBuzz	36
4.7  建造星星塔	39
第五章  我长大了	43
5.1  函数是枝叶	43
5.2  模块是枝干	51
5.3  面向对象是另一种看待世界的视角	53
第六章  我想和你谈谈	55
6.1  终端带来即时交互	55
6.2  文件适用于批量交互	57
6.3  处理异常不要崩溃	60
第三部分  初识HTTP
第七章  相识前的准备	70
7.1  JSON格式的通信录	70
7.2  状态码的五个分类	74
7.3  HTTP协议基础	77
第八章  交谈开始	85
8.1  我知道你是哪里人	85
8.2  请查收我的POST	87
8.3  厉害了，我的302	91
8.4  把我藏在Cookies里	96
8.5  让我们“保持通话”	101
第四部分  实践HTTP接口测试
第九章  先要测起来	112
9.1  认识自动化测试	112
9.2  unittest（一）	120
9.3  unittest（二）	128
第十章  HTTP接口测试（无状态）	133
10.1  接口约定	133
10.2  案例编写	138
10.3  数据外化到文件	147
10.4  数据外化到Excel	156
第十一章  普通Web接口测试（有状态）	165
11.1  接口探索	165
11.2  在返回页面中定位检查点	173
11.3  第一个测试案例	181
11.4  更多测试案例	185
11.5  重复执行注册失败了	193
11.6  命令行集成与HTML报告	199
写在后面的话		207
这仅仅是一个开始	207
附录：参考资料	209
附录：学习心得	210
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python编程基础与HTTP接口测试
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Pythonによるクローラー&スクレイピング入門
Part1 基本編
Chapter 1 クローラーとスクレイピングを体験する
Chapter 2 クローラーを設計する
Chapter 3 クローラーおよびスクレイピングの開発環境の準備とPythonの基本
Chapter 4 スクレイピングの基本
Part2 応用編
Chapter 5 クローラーの設計・開発(応用編)
Chapter 6 スクレイピングの開発(応用編)
Chapter 7 クローラーで集めたデータを利用する
Chapter 8 クローラーの保守・運用
Chapter 9 目的別クローラー&スクレイピング開発手法
Appendix クローラー&スクレイピングに役立つライブラリ
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Pythonによるクローラー&スクレイピング入門
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Pythonプロフェッショナルプログラミング 第3版
Part 1 Python で開発しよう
Chapter 01 Python をはじめよう
Chapter 02 Web アプリケーションを作る
Chapter 03 Python プロジェクトの構成とパッケージ作成
Part 2 チーム開発のサイクル
Chapter 04 チーム開発のためのツール
Chapter 05 課題管理とレビュー
Chapter 06 Git/GitHubによるソースコード管理
Chapter 07 ドキュメントの基盤を整える
Chapter 08 モジュール分割設計と単体テスト
Chapter 09 Python パッケージの利用と開発への適用
Chapter 10 CircleCI で継続的インテグレーション
Part 3 サービス公開
Chapter 11 環境構築とデプロイの自動化
Chapter 12 Web アプリケーションのパフォーマンス改善
Part 4 実践プロフェッショナル開発
Chapter 13 テストを味方にする
Chapter 14 Django で実務のWeb アプリ開発
Chapter 15 プログラマーのための機械学習
Appendix A 開発環境のセットアップ
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Pythonプロフェッショナルプログラミング 第3版
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python言語によるビジネスアナリティクス
1.なぜ今Pythonか?
2.環境の整備DockerとAnaconda
3.対話型シェルIPythonとJupyter (IPython Notebook)
4.数値計算モジュールNumPy
5.可視化モジュールmatplotlib,seaborn, bokeh
6.科学技術計算モジュールSciPy
7.データ解析モジュールpandas, blaze, dask
8.統計モジュールstatsmodels
9.機械学習モジュールscikit-learn
10.最適化
11.数理最適化モジュールPuLPとOpenOpt
12.ネットワークモジュールNetworkX
13.制約最適化モジュールSCOP
14.スケジューリング最適化モジュールOptSeq
15.動的最適化
16.Excel 連携モジュールxlwings
付録A.Python の基礎と標準モジュール
付録B.機械学習
付録C.計算量とデータ構造
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python言語によるビジネスアナリティクス
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python量化交易实战入门与技巧
第1章　初识量化交易 / 1
1.1 量化交易的基本概念 / 2
1.1.1 什么是量化交易 / 2
1.1.2 量化交易的特点 / 2
1.1.3 为什么要学习量化交易 / 4
1.1.4 量化交易与其他交易 / 6
1.2 量化交易的主要内容 / 7
1.2.1 量化选股 / 7
1.2.2 量化择时 / 8
1.2.3 算法交易 / 8
1.2.4 各种套利交易 / 8
1.3 量化交易的历史 / 10
1.3.1 国外量化交易的历史 / 10
1.3.2 国内量化交易的历史 / 10
1.4 量化交易的故事 / 11
1.4.1 朱尔斯·雷格纳特的故事 / 11
1.4.2 爱德华·索普的故事 / 13
1.4.3 詹姆斯·西蒙斯的故事 / 14
1.5 量化交易的潜在风险及应对策略 / 16
1.6 量化交易与人工交易的比较 / 16
1.7 量化交易的注意事项 / 17
第2章　JoinQuant（聚宽）量化交易平台 / 19
2.1 JoinQuant（聚宽）量化交易平台的功能 / 20
2.2 JoinQuant（聚宽）量化交易平台的账户注册与登录 / 20
2.2.1 账户注册 / 21
2.2.2 账户登录 / 22
2.3 创建量化交易策略 / 23
2.3.1 向导式策略生成器 / 25
2.3.2 新建策略 / 35
2.4 量化交易策略的回测详情 / 36
2.5 模拟交易 / 38
2.5.1 新建模拟交易并运行 / 38
2.5.2 查看模拟交易 / 39
2.5.3 绑定微信 / 42
第3章　Python语言及其开发环境 / 45
3.1 Python语言概述 / 46
3.1.1 Python的发展历程 / 46
3.1.2 Python的特点 / 47
3.2 搭建Python开发环境 / 48
3.2.1 Python的下载和安装 / 48
3.2.2 Python的环境变量配置 / 50
3.3 编写Python程序 / 53
3.4 利用IPython Notebook编写Python程序 / 57
第4章　Python的基本语法 / 63
4.1 Python的基本数据类型 / 64
4.1.1 数值类型 / 64
4.1.2 字符串 / 66
4.2 变量与赋值 / 69
4.2.1 变量命名规则 / 69
4.2.2 变量的赋值 / 70
4.3 运算符 / 71
4.3.1 算术运算符 / 71
4.3.2 赋值运算符 / 73
4.3.3 位运算符 / 74
4.4 常见的数值函数和字符串函数 / 75
4.4.1 数学函数 / 76
4.4.2 随机数函数 / 77
4.4.3 三角函数 / 79
4.4.4 字符串函数 / 80
4.5 Python的代码格式 / 85
4.5.1 代码缩进 / 85
4.5.2 代码注释 / 86
4.5.3 空行 / 86
4.5.4 同一行显示多条语句 / 86
第5章　Python的基本流程控制 / 87
5.1 选择结构 / 88
5.1.1 关系运算 / 88
5.1.2 逻辑运算 / 90
5.1.3 if语句 / 91
5.1.4 嵌套if语句 / 93
5.2 循环结构 / 94
5.2.1 while循环 / 95
5.2.2 while循环使用else语句 / 95
5.2.3 无限循环 / 96
5.2.4 for循环 / 97
5.2.5 在for循环中使用range() 函数 / 98
5.3 其他语句 / 99
5.3.1 break语句 / 100
5.3.2 continue语句 / 100
5.3.3 pass语句 / 101
第6章　Python的特征数据类型 / 103
6.1 列表 / 104
6.1.1 创建列表 / 104
6.1.2 访问列表中的值 / 104
6.1.3 更新列表中的值 / 105
6.1.4 删除列表中的值 / 106
6.1.5 列表的函数 / 106
6.1.6 列表的方法 / 107
6.2 元组 / 109
6.2.1 创建元组 / 109
6.2.2 访问元组中的值 / 110
6.2.3 连接元组 / 111
6.2.4 删除整个元组 / 112
6.2.5 元组的函数 / 112
6.3 字典 / 113
6.3.1 创建字典 / 114
6.3.2 访问字典中的值和键 / 114
6.3.3 修改字典 / 115
6.3.4 字典中的函数 / 116
6.4 集合 / 117
6.4.1 创建集合 / 117
6.4.2 集合的两个基本功能 / 118
6.4.3 集合的运算符 / 119
6.4.4 集合的方法 / 120
第7章　Python的函数及应用 / 123
7.1 函数的定义与调用 / 124
7.1.1 函数的定义 / 124
7.1.2 函数的调用 / 125
7.2 参数传递 / 126
7.2.1 不可更改对象 / 126
7.2.2 可更改对象 / 127
7.3 函数的参数类型 / 128
7.3.1 必需参数 / 128
7.3.2 关键字参数 / 129
7.3.3 默认参数 / 130
7.3.4 不定长参数 / 131
7.4 匿名函数 / 132
7.5 变量作用域及类型 / 133
7.5.1 变量作用域 / 133
7.5.2 全局变量和局部变量 / 135
7.5.3 global和nonlocal关键字 / 136
第8章　Python面向对象的程序设计 / 139
8.1 面向对象 / 140
8.1.1 面向对象概念 / 140
8.1.2 类定义与类对象 / 141
8.1.3 类的继承 / 143
8.2 模块 / 147
8.2.1 自定义模块并调用 / 147
8.2.2 import 语句 / 148
8.2.3 标准模块 / 150
8.3 包 / 151
第9章　利用Python语言编写量化策略 / 153
9.1 股票量化策略的组成 / 154
9.1.1 初始化函数（initialize） / 155
9.1.2 开盘前运行函数（before_market_open） / 156
9.1.3 开盘时运行函数（market_open） / 157
9.1.4 收盘后运行函数（after_market_close） / 158
9.2 股票量化策略的设置函数 / 158
9.2.1 设置基准函数 / 159
9.2.2 设置佣金/ 印花税函数 / 159
9.2.3 设置滑点函数 / 161
9.2.4 设置动态复权( 真实价格) 模式函数 / 161
9.2.5 设置成交量比例函数 / 162
9.2.6 设置是否开启盘口撮合模式函数 / 162
9.2.7 设置要操作的股票池函数 / 163
9.3 股票量化策略的定时函数 / 163
9.3.1 定时函数的定义及分类 / 163
9.3.2 定时函数各项参数的意义 / 164
9.3.3 定时函数的注意事项 / 164
9.3.4 定时函数的实例 / 165
9.4 股票量化策略的下单函数 / 166
9.4.1 按股数下单函数 / 166
9.4.2 目标股数下单函数 / 167
9.4.3 按价值下单函数 / 168
9.4.4 目标价值下单函数 / 168
9.4.5 撤单函数 / 169
9.4.6 获取未完成订单函数 / 169
9.4.7 获取订单信息函数 / 169
9.4.8 获取成交信息函数 / 170
9.5 股票量化策略的日志log / 171
9.5.1 设定log级别 / 171
9.5.2 log.info / 171
9.6 股票量化策略的常用对象 / 172
9.6.1 Order对象 / 172
9.6.2 全局对象g / 173
9.6.3 Trade对象 / 173
9.6.4 tick对象 / 174
9.6.5 Context对象 / 174
9.6.6 Position对象 / 176
9.6.7 SubPortfolio对象 / 176
9.6.8 Portfolio对象 / 177
9.6.9 SecurityUnitData对象 / 178
第10章　Python量化策略的常用库和模块 / 179
10.1 Numpy库 / 180
10.1.1 ndarray数组基础 / 180
10.1.2 矩阵 / 187
10.2 Pandas 库 / 188
10.2.1 一维数组Series / 188
10.2.2 二维数组DataFrame / 189
10.2.3 三维数组Panel / 199
10.3 Datetime 模块和Time 模块 / 201
10.3.1 利用Datetime模块获得当前的日期和时间 / 202
10.3.2 利用Time模块获得当前的日期和时间 / 203
10.3.3 获得当前时间并转换为指定日期格式 / 204
10.3.4 获得三天前的时间的方法 / 204
10.3.5 获得三天前的日期的方法 / 205
10.3.6 获得历史交易日 / 206
第11章　Python量化策略的获取数据函数 / 207
11.1 history() 函数 / 208
11.1.1 各项参数的意义 / 208
11.1.2 history() 函数的应用实例 / 210
11.2 attribute_history () 函数 / 213
11.3 get_current_data () 函数 / 215
11.4 get_fundamentals () 函数 / 216
11.4.1 各项参数的意义 / 216
11.4.2 get_fundamentals () 函数的应用实例 / 217
11.5 get_fundamentals_continuously () 函数 / 222
11.6 get_index_stocks () 函数 / 223
11.6.1 各项参数的意义 / 224
11.6.2 get_index_stocks () 函数的应用实例 / 225
11.7 get_industry_stocks() 函数 / 225
11.8 get_concept_stocks () 函数 / 227
11.9 get_all_securities() 函数 / 229
11.9.1 各项参数的意义 / 229
11.9.2 get_all_securities() 函数的应用实例 / 230
11.10 get_security_info () 函数 / 232
11.11 get_billboard_list () 函数 / 233
11.11.1 各项参数的意义 / 233
11.11.2 get_billboard_list() 函数的应用实例 / 234
11.12 get_locked_shares () 函数 / 234
第12章　Python 量化策略的回测 / 237
12.1 回测的过程 / 238
12.2 编写双均线量化策略 / 239
12.2.1 量化策略的编辑页面 / 239
12.2.2 双均线量化策略的初始化函数 / 241
12.2.3 双均线量化策略的交易程序函数 / 242
12.3 设置量化策略的回测参数 / 243
12.4 双均线量化策略的回测详情 / 245
12.5 量化策略的风险指标 / 248
12.5.1 Alpha（阿尔法） / 249
12.5.2 Beta（贝塔） / 250
12.5.3 Sharpe（夏普比率） / 251
12.5.4 Sortino（索提诺比率） / 251
12.5.5 Information Ratio（信息比率） / 252
12.5.6 Volatility（策略波动率） / 253
12.5.7 Benchmark Volatility（基准波动率） / 254
12.5.8 Max Drawdown（最大回撤） / 255
第13章　Python 量化策略的因子分析 / 257
13.1 初识因子分析 / 258
13.1.1 因子的分类 / 258
13.1.2 因子分析的作用 / 258
13.2 因子分析的实现代码 / 258
13.2.1 因子分析中变量的含义 / 259
13.2.2 因子分析中可以使用的基础因子 / 259
13.2.3 calc 的参数及返回值 / 261
13.3 因子分析的结果 / 261
13.3.1 新建因子 / 261
13.3.2 收益分析 / 264
13.3.3 IC 分析 / 268
13.3.4 换手分析 / 269
13.4 因子在研究和回测中的使用 / 270
13.5 基本面因子应用实例 / 273
第14章　Python 量化策略的技术指标实例 / 277
14.1 均线型技术指标实例 / 278
14.1.1 传统平均线 / 278
14.1.2 高价平均线 / 280
14.1.3 低价平均线 / 281
14.1.4 变异平均线 / 282
14.1.5 成本价均线 / 283
14.2 超买超卖型技术指标实例 / 285
14.2.1 随机指标KD / 285
14.2.2 资金流量指标MFI / 286
14.2.3 相对强弱指标RSI / 288
14.2.4 变动速率线OSC / 289
14.2.5 威廉指标WR / 290
14.2.6 顺势指标CCI / 291
14.3 趋势型技术指标实例 / 292
14.3.1 平滑异同平均线MACD / 293
14.3.2 趋向指标DMI / 294
14.3.3 简易波动指标EMV / 295
14.3.4 终极指标UOS / 296
14.4 能量型技术指标实例 / 298
14.4.1 情绪指标BRAR / 298
14.4.2 带状能量线CR / 299
14.4.3 成交量变异率VR / 300
14.4.4 梅斯线MASS / 301
14.4.5 累积能量线OBV / 302
14.4.6 相对强弱量VRSI / 303
14.5 压力支撑型技术指标实例 / 305
14.5.1 布林通道线BOLL / 305
14.5.2 麦克支撑压力线MIKE / 306
14.5.3 薛斯通道线XS / 307
第15章　Python量化交易策略实例 / 311
15.1 MACD指标量化交易策略 / 312
15.1.1 编写初始化函数 / 312
15.1.2 编写单位时间调用的函数 / 313
15.1.3 MACD 指标量化交易策略的回测 / 315
15.2 能量型指标量化交易策略 / 316
15.2.1 编写初始化函数 / 316
15.2.2 编写单位时间调用的函数 / 317
15.2.3 能量型指标量化交易策略的回测 / 318
15.3 KD指标量化交易策略 / 320
15.3.1 编写初始化函数 / 320
15.3.2 编写开盘前运行函数 / 321
15.3.3 编写开盘时运行函数 / 321
15.3.4 编写收盘后运行函数 / 322
15.3.5 KD指标量化交易策略的回测 / 322
15.4 多股票持仓量化交易策略 / 324
15.4.1 编写初始化函数 / 324
15.4.2 编写单位时间调用的函数 / 324
15.4.3 多股票持仓量化交易策略的回测 / 325
15.5 多股票追涨量化交易策略 / 327
15.5.1 编写初始化函数 / 327
15.5.2 编写每天早上开盘时执行函数 / 327
15.5.3 编写开始交易前被调用函数 / 328
15.5.4 编写单位时间调用的函数 / 328
15.5.5 多股票追涨量化交易策略的回测 / 329
15.6 银行股轮动量化交易策略 / 331
15.6.1 编写初始化函数 / 331
15.6.2 编写选股函数 / 332
15.6.3 编写交易函数 / 332
15.6.4 银行股轮动量化交易策略的回测 / 333
15.7 小市值股票量化交易策略 / 334
15.7.1 编写初始化函数 / 334
15.7.2 编写选股函数 / 335
15.7.3 编写过滤停牌股票函数 / 336
15.7.4 编写交易函数 / 336
15.7.5 小市值股票量化交易策略的回测 / 337
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python量化交易实战入门与技巧
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>みんなのPython
Chapter01 プログラミング言語Python
Chapter02 Pythonでプログラミングをはじめよう
Chapter03 Pythonの基礎をマスターする
Chapter04 組み込み型を使いこなす
Chapter05 Pythonと関数型プログラミング
Chapter06 クラスとオブジェクト指向開発
Chapter07 クラスの継承と高度なオブジェクト指向機能
Chapter08 モジュール
Chapter09 スコープとオブジェクト
Chapter10 例外処理
Chapter11 標準ライブラリを使う
Chapter12 Pythonとデータサイエンス
Chapter13 Pythan2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>みんなのPython
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>量化投资与Python语言
第1章金融科技1
1.1谈谈方法论1
1.2金融、科技和互联网2
1.3金融科技概念4
1.4金融科技与互联网金融的关系7
第2章大数据9
2.1大数据的定义9
2.2大数据和统计的关系9
2.3大数据的特征10
2.4大数据技术的架构11
2.5大数据产业12
2.6大数据人才13
第3章人工智能与机器学习14
3.1人工智能14
3.2机器学习15
3.3机器学习的常用算法16
第4章金融科技在金融中的应用19
4.1在量化投资中的应用19
4.2Python在智能投顾中的应用20
4.3Python在征信中的应用21
第5章Python在金融行业的应用22
5.1Python在金融行业的现状和应用22
5.2青春不老，奋斗不止25
第6章Python的环境搭建26
6.1Anaconda介绍26
6.2常见开源包介绍33
第7章Python读取本地数据35
7.1准备知识35
3.2本地文件的读取35
第8章数据类型和数据结构40
8.1基本数据类型40
8.2基本数据结构44
第9章NumPy基础51
9.1NumPy数组 51
9.2矩阵计算55
9.3蒙特卡洛模拟56
第10章Pandas介绍57
10.1Pandas的特点57
10.2Pandas的数据结构57
第11章Pandas读取数据和规整化72
11.1读取数据72
11.2数据规整化75
11.3保存数据81
第12章绘图和可视化82
12.1使用matplotlib82
12.2Pandas中的绘图函数87
第13章金融数据分析88
13.1金融时间序列88
13.2TuShare介绍91
第14章量化投资介绍96
第15章量化投资平台的介绍99
15.1量化投资的实务99
15.2量化投资平台101
第16章量化策略103
16.1量化策略概述103
16.2常见的量化交易策略103
第17章开启你的量化投资之旅106
后记110
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>量化投资与Python语言
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>python编程从零基础到项目实战（微课视频版）
第Ⅰ部分基础篇


第1章从零开始
视频讲解：35分钟
1.1概述
1.2什么是Python语言
1.3安装Python
1.3.1安装准备工作
1.3.2安装Python的过程
1.4Python代码编辑工具
1.4.1交互式解释器
1.4.2自带GUI工具IDLE
1.4.3其他商业级开发工具
1.5第一个程序
1.5.1案例［嗨，三酷猫！］
1.5.2Help
1.5.3出错与调试
1.6良好的编程约定
1.7习题及实验
第2章变量和简单数据类型
视频讲解：27分钟
2.1变量
2.2字符串
2.2.1字符串基本操作
2.2.2其他常用操作
2.2.3案例［三酷猫钓鱼记录］
2.3数字和运算符
2.3.1算术运算符
2.3.2整数
2.3.3浮点数
2.3.4复数
2.3.5布尔
2.3.6二进制
2.3.7比较运算符
2.3.8赋值运算符
2.4数据类型转换
2.5案例［三酷猫记账单］
2.6习题及实验
第3章条件分支与循环
视频讲解：37分钟
3.1if条件分支
3.1.1if语句基本用法
3.1.2案例［三酷猫判断找鱼］
3.2while循环
3.2.1while语句基本用法
3.2.2案例［三酷猫线性法找鱼］
3.3for循环语句
3.3.1for语句基本用法
3.3.2案例［三酷猫统计鱼数量］
3.4循环控制语句
3.4.1break语句
3.4.2continue语句
3.5复杂条件及处理
3.5.1成员运算符
3.5.2身份运算符
3.5.3运算符优先级
3.6案例［三酷猫核算收入］
3.7习题及实验
第4章列表与元组
视频讲解：29分钟
4.1接触列表
4.1.1列表基本知识
4.1.2列表元素增加
4.1.3列表元素查找
4.1.4列表元素修改
4.1.5列表元素删除
4.1.6列表元素合并
4.1.7列表元素排序
4.1.8列表其他操作方法
4.2基于列表算法
4.2.1案例［三酷猫列表记账］
4.2.2案例［三酷猫冒泡法排序］
4.2.3案例［三酷猫二分法查找］
4.2.4案例［三酷猫列表统计］
4.3元组
4.3.1元组基本知识
4.3.2元组操作实例
4.4案例［三酷猫钓鱼花样大统计］
4.5习题及实验
第5章　字典
视频讲解：23分钟
5.1接触字典
5.1.1字典基本知识
5.1.2字典元素增加
5.1.3字典值查找
5.1.4字典值修改
5.1.5字典元素删除
5.1.6字典遍历操作
5.1.7字典其他操作方法
5.2字典嵌套
5.2.1字典嵌入字典
5.2.2列表嵌入字典
5.2.3字典嵌入列表
5.3基于字典算法
5.3.1案例［三酷猫字典记账］
5.3.2案例［三酷猫字典修改］
5.3.3案例［三酷猫分类统计］
5.4案例［三酷猫管理复杂的钓鱼账本］
5.5习题及实验
第6章　函数
视频讲解：19分钟
6.1函数基本知识
6.1.1为什么要使用函数
6.1.2函数基本定义
6.2自定义函数第一步
6.2.1不带参数函数
6.2.2带参数函数
6.2.3带返回值函数
6.2.4自定义函数的完善
6.2.5把函数放到模块中
6.3自定义函数第二步
6.3.1参数的变化
6.3.2传递元组、列表、字典值
6.3.3函数与变量作用域
6.3.4匿名函数
6.3.5递归函数
6.4案例［三酷猫利用函数方法实现记账统计］
6.4.1函数统计需求
6.4.2主程序实现
6.4.3自定义函数实现
6.4.4本案例代码执行结果
6.5习题及实验
第7章　类
视频讲解：27分钟
7.1初识类
7.1.1为什么要引入类
7.1.2案例［编写第一个类］
7.1.3实例
7.2属性使用
7.2.1属性值初始化
7.2.2属性值修改
7.2.3把类赋给属性
7.3类改造问题
7.3.1继承
7.3.2重写方法
7.4私有
7.5把类放到模块中
7.5.1建立独立类模块过程
7.5.2案例［把盒子类放到类模块中］
7.6类回顾
7.6.1静态类
7.6.2类与实例概念总结
7.6.3类与面向对象编程
7.6.4类编写其他事项
7.7案例［三酷猫把鱼装到盒子里］
7.8习题及实验
第8章　标准库
视频讲解：25分钟
8.1Python标准库知识
8.2datetime模块
8.3math模块
8.4random模块
8.5os模块
8.6sys模块
8.7time模块
8.8再论模块
8.8.1模块文件
8.8.2包
8.9窥探标准库源码
8.10案例［三酷猫解放了］
8.11习题及实验
第9章　异常
视频讲解：16分钟
9.1程序中的问题
9.2捕捉异常
9.2.1基本异常捕捉语句
9.2.2带finally子句的异常处理
9.2.3捕捉特定异常信息
9.3抛出异常
9.4习题及实验


第Ⅱ部分Python提高篇


第10章　文件处理
视频讲解：20分钟
10.1文本文件
10.1.1建立文件
10.1.2基本的读写文件
10.1.3复杂的读写文件
10.1.4文件异常处理
10.1.5文件与路径
10.1.6案例［三酷猫把钓鱼结果数据存入文件］
10.2JSON格式文件
10.2.1JSON格式
10.2.2读写JSON文件
10.3XML格式文件
10.3.1初识XML
10.3.2生成XML文件
10.3.3xml模块
10.3.4用SAX读XML文件
10.3.5用DOM读写XML文件
10.4案例［三酷猫自建文件数据库］
10.5习题及实验
第11章　图形用户界面
视频讲解：26分钟
11.1初识图形用户界面
11.1.1接触图形用户界面
11.1.2相关开发工具
11.2tkinter开发包
11.2.1窗体
11.2.2组件
11.2.3常见事件类型
11.2.4常见属性对象
11.3tkinter模块下基本组件
11.3.1tkinter下组件清单
11.3.2简易组件使用案例
11.3.3Menu及messagebox组件使用案例
11.3.4Canvas组件使用案例
11.3.5PhotoImage组件使用案例
11.4ttk子模块下组件
11.4.1Combobox组件
11.4.2Notebook组件
11.4.3Progressbar组件
11.4.4Sizegrip组件
11.4.5Treeview组件
11.5tix子模块下组件
11.5.1文件选择类组件
11.5.2ButtonBox组件
11.6scrolledtext子模块下组件
11.7拖拽组件
11.8编译成可执行文件的实现过程
11.9案例［三酷猫做到了数据可视化］
11.10美轮美奂的turtle
11.11习题及实验
第12章　数据库操作
视频讲解：17分钟
12.1数据库使用概述
12.1.1数据库基本知识
12.1.2访问数据库基本原理
12.1.3ODBC与ADO
12.2关系型数据库
12.2.1关系型数据库支持清单
12.2.2连接SQLite
12.2.3连接MySQL
12.2.4连接Oracle
12.2.5案例［三酷猫建立记账管理系统］
12.3NoSQL数据库
12.3.1NoSQL数据库支持清单
12.3.2连接MongoDB
12.3.3连接Redis
12.4习题及实验
第13章　线程与进程
视频讲解：17分钟
13.1接触多任务技术
13.1.1进程与线程简介
13.1.2多线程模块
13.2第一个多线程［抢火车票］
13.2.1不使用线程
13.2.2threading函数方式实现
13.2.3threading类方式实现
13.3线程同步
13.3.1多线程竞争出错
13.3.2尝试让多线程共享数据出错
13.3.3CPython的痛
13.3.4加锁
13.3.5防止死锁
13.4线程队列模块
13.5并发进程模块
13.5.1Process创建多进程
13.5.2基于Pool的多进程
13.5.3基于Pipe的多进程
13.5.4基于Queue的多进程
13.6其他同步方法
13.7案例［三酷猫玩爬虫］
13.7.1需求与准备工作
13.7.2简易多线程爬虫实现
13.8习题及实验
第14章　测试及打包
14.1代码测试
14.1.1doctest
14.1.2unittest
14.2代码打包
14.2.1distutils模块
14.2.2基本打包与安装
14.2.3扩展打包与安装
14.2.4编写安装配置文件
14.2.5源码发布格式
14.3习题及实验

第Ⅲ部分Python拓展篇

第15章Web应用入门
视频讲解：11分钟
15.1Web基础知识
15.1.1接触Web
15.1.2Browser/Server使用原理
15.1.3网页
15.1.4感觉第一个Web应用
15.2Web服务器
15.2.1Web服务器会做什么工作
15.2.2Apache服务器
15.2.3IIS服务器
15.3WSGI服务器接口
15.4Web应用程序开发
15.5案例［三酷猫简易网站］
15.5.1网站需求
15.5.2实现代码
15.6习题及实验
第16章商业级别的技术框架
16.1初识Web应用程序框架
16.2web.py框架
16.2.1使用准备
16.2.2开发Web应用程序
16.2.3使用模板
16.2.4数据库访问
16.2.5表单处理
16.2.6使用Session
16.2.7使用Cookie
16.2.8Web实际使用环境部署
16.3Django框架
16.3.1　Django简介
16.3.2Django安装
16.3.3网站（创建项目）
16.3.4网站（连接数据库）
16.3.5网站（创建应用）
16.3.6网站（后台管理）
16.3.7网站（投票应用）
16.3.8网站（学习拓展）
16.4案例［三酷猫鱼产品动态网站］
16.4.1网站准备工作
16.4.2建立数据库
16.4.3Web应用实现
16.5习题及实验
第17章大数据应用入门
17.1什么是大数据
17.1.1大数据基本知识
17.1.2大数据技术三步曲
17.2案例［一个完整的网络爬虫］
17.2.1编写网络爬虫准备工作
17.2.2基于MongoDB的数据存储
17.2.3爬虫获取网页数据
17.2.4爬虫获取网页内指定数据
17.2.5爬虫知识拓展
17.3Python+Spark
17.3.1Spark基础知识
17.3.2使用环境安装
17.3.3pyspark基础
17.3.4案例［蒙特卡洛法求π］
17.4案例［三酷猫了解鱼的价格］
17.5习题及实验
第18章AI应用入门
18.1什么是人工智能
18.1.1从深蓝到阿尔法狗
18.1.2人工智能基础知识
18.2Python AI编程库
18.2.1科学计算和数据分析库
18.2.2数据可视化库
18.2.3计算机视觉库
18.2.4机器学习库
18.2.5其他知名的第三方库
18.3NumPy应用示例
18.3.1安装NumPy
18.3.2数组相关计算
18.3.3傅里叶变换
18.3.4案例［一维离散傅里叶变换］
18.3.5案例［二维离散傅里叶变换］
18.4三酷猫的梦
18.5习题及实验
附录一IDLE代码编写工具菜单使用说明
附录二字符串转义字符
附录三ASCII表
附录四math模块函数
附录五第三方库列表
附录六正则表达式
附录七附赠案例代码清单
参考文献4
后记
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>python编程从零基础到项目实战（微课视频版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python 接口自动化测试
1 本书整体设计思想 ............................................................................. 1
1.1 为什么要做懂技术的测试人员 ........................................................................... 2
1.2 为什么选择这本书............................................................................................... 4
1.3 为什么选择Python .............................................................................................. 5
1.4 本书能给你带来什么 ........................................................................................... 6
1.5 自动化代码的设计思路 ....................................................................................... 6
1.5.1 由手工测试分析出哪些步骤可自动化处理 ......................................... 8
1.5.2 以可重复步骤为契机，梳理自动化测试的步骤 ................................. 9
1.5.3 抽象自动化步骤到功能点 ................................................................... 10
1.6 补充知识点 ........................................................................................................ 10
1.6.1 什么是面向对象编程中的对象 ........................................................... 10
1.6.2 什么是面向对象编程中的类 ............................................................... 11
1.6.3 什么是编程语言中的实例 ................................................................... 11
1.6.4 自动化测试是不是比手工测试覆盖率高 ........................................... 12
1.6.5 什么是自动化测试 ............................................................................... 13
1.6.6 什么是分层自动化测试 ....................................................................... 14
2 接口基础 .......................................................................................... 18
2.1 什么是接口 ........................................................................................................ 19
2.2 接口的分类 ........................................................................................................ 23
2.3 HTTP 接口 ......................................................................................................... 24
2.3.1 HTTP 发送请求的方式 ........................................................................ 28
2.3.2 GET 方式和POST 方式的区别 .......................................................... 29
2.4 接口测试 ............................................................................................................ 30
2.4.1 什么是接口测试 ................................................................................... 30
2.4.2 为什么要做接口测试 ........................................................................... 30
2.4.3 如何开展接口测试 ............................................................................... 31
2.4.4 前/后端交互的“契约—接口”文档 .................................................. 32
2.5 接口实例 ............................................................................................................ 34
2.5.1 前端页面 ............................................................................................... 34
2.5.2 数据流图 ............................................................................................... 35
2.5.3 逻辑代码 ............................................................................................... 39
2.6 补充知识点 ........................................................................................................ 40
2.6.1 名词解释 ............................................................................................... 40
2.6.2 答疑 ....................................................................................................... 41
3 接口手工测试 ................................................................................... 43
3.1 HTTP 接口工具 ................................................................................................. 44
3.2 Fiddler 工具的使用 ............................................................................................ 47
3.2.1 Fiddler 工具介绍 .................................................................................. 47
3.2.2 手工调用HTTP 接口 ........................................................................... 48
3.2.3 获取PC 端的网络数据包 .................................................................... 51
3.2.4 获取手机端的网络数据包 ................................................................... 52
3.2.5 截包与改包 ........................................................................................... 54
3.2.6 Fiddler 工具的其他功能 ....................................................................... 58
3.3 接口手工测试的用例设计 ................................................................................. 59
3.3.1 接口测试用例设计——总纲 ................................................................ 59
3.3.2 接口测试用例设计——参数校验 ........................................................ 59
3.3.3 参数校验——SQL 注入 ....................................................................... 62
3.3.4 接口测试用例设计——逻辑校验 ........................................................ 63
3.3.5 接口测试用例设计——用例模板 ........................................................ 64
3.4 补充知识点 ........................................................................................................ 65
4 编程前的准备 .................................................................................. 67
4.1 Python 环境准备 ................................................................................................ 68
4.1.1 选择Python 2 还是Python 3 ................................................................ 68
4.1.2 在Windows 下安装Python 3 ............................................................... 69
4.1.3 Python 2 和Python 3 共存之道 ............................................................ 70
4.2 准备本地MySQL 服务 ..................................................................................... 71
4.3 补充知识点 ........................................................................................................ 74
4.3.1 Python 2 与Python 3 的语法区别 ........................................................ 74
4.3.2 Python 解释器 ....................................................................................... 75
4.3.3 Python 的函数 ....................................................................................... 75
5 用Python 操作MySQL 数据库 ........................................................ 77
5.1 提前工作 ............................................................................................................ 78
5.2 操作MySQL 数据库 ......................................................................................... 80
5.2.1 用Python 操作MySQL 数据库的流程 ............................................... 80
5.2.2 用Python 操作MySQL 代码 ............................................................... 81
5.3 本章所涉及的Python 语法 ............................................................................... 95
5.3.1 模块与包 ............................................................................................... 95
5.3.2 类 ........................................................................................................... 99
5.3.3 条件判断 ............................................................................................. 104
5.3.4 异常处理 ............................................................................................. 106
5.3.5 Python 3 代码注释 .............................................................................. 107
5.4 PyCharm 使用基础 .......................................................................................... 109
5.4.1 为什么选择PyCharm ......................................................................... 109
5.4.2 PyCharm 使用基础 ............................................................................. 110
5.5 补充知识点 ...................................................................................................... 113
5.5.1 MySQLdb 与PyMySQL..................................................................... 113
5.5.2 Python 命名规则 ................................................................................. 113
5.5.3 self.cur.scroll 源码分析 ...................................................................... 113
5.5.4 主流数据库的分类 ............................................................................. 115
5.5.5 MySQL 的基本语法 ........................................................................... 117
6 用Python 发送HTTP 请求 ............................................................ 120
6.1 准备工作 .......................................................................................................... 121
6.2 发送HTTP 请求实例 ...................................................................................... 123
6.2.1 用Python 发送HTTP 请求的流程 .................................................... 123
6.2.2 用Python 操作HTTP 请求的代码 .................................................... 125
6.3 本章所涉及的Python 语法 ............................................................................. 135
6.3.1 数据类型 ............................................................................................. 135
6.3.2 方法与函数 ......................................................................................... 137
6.3.3 切片 ..................................................................................................... 140
6.3.4 日志模块logging ................................................................................ 141
6.4 补充知识点 ...................................................................................................... 142
6.4.1 Python 的循环机制 ............................................................................. 142
6.4.2 logging ................................................................................................. 143
7 用Python 处理HTTP 返回包 ........................................................ 144
7.1 提前工作 .......................................................................................................... 145
7.2 处理HTTP 返回包实例 ................................................................................... 145
7.2.1 用Python 处理HTTP 返回包的基础 ................................................ 145
7.2.2 用Python 处理HTTP 返回包的流程 ................................................ 148
7.2.3 用Python 处理HTTP 返回包的代码 ................................................ 150
7.3 本章所涉及的Python 语法 ............................................................................. 161
7.3.1 json 方法 ............................................................................................. 161
7.3.2 字典的两个方法 ................................................................................. 162
7.3.3 eval()与instance()方法 ....................................................................... 163
7.3.4 set()与issubset()方法 .......................................................................... 163
7.4 补充知识点 ...................................................................................................... 164
7.4.1 Python 的垃圾回收机制 ..................................................................... 164
7.4.2 字符串的startswith()和endswith()方法 ............................................ 166
8 用Python 导出测试数据 ................................................................ 168
8.1 提前工作 .......................................................................................................... 169
8.2 用Python 导出测试数据 ................................................................................. 170
8.2.1 导出测试数据的基础知识 ................................................................. 170
8.2.2 导出测试数据实例 ............................................................................. 171
8.3 整体业务流程图 .............................................................................................. 176
8.4 补充知识点 ...................................................................................................... 178
8.4.1 Python 时间戳 ..................................................................................... 178
8.4.2 Excel 表格的操作 ............................................................................... 178
9 接口自动化起航 ............................................................................. 179
9.1 提前工作 .......................................................................................................... 180
9.2 代码之外 .......................................................................................................... 180
9.2.1 初始化数据 ......................................................................................... 180
9.2.2 代码结构图 ......................................................................................... 181
9.3 接口自动化起航代码 ...................................................................................... 182
9.3.1 业务逻辑梳理 ..................................................................................... 182
9.3.2 代码实例 ............................................................................................. 183
9.4 代码操作步骤 .................................................................................................. 188
9.5 补充知识点 ...................................................................................................... 190
9.5.1 用print 格式化输出 ........................................................................... 190
9.5.2 数据驱动和关键字驱动 ..................................................................... 191
10 实际接口场景演示 ...................................................................... 192
10.1 提前工作 ........................................................................................................ 193
10.2 接口举例 ........................................................................................................ 193
10.3 准备与执行 .................................................................................................... 193
10.3.1 设计接口测试用例 ........................................................................... 193
10.3.2 按照接口用例设计准备测试数据 ................................................... 193
10.3.3 在config_total 表中增加执行与导出配置项 .................................. 193
10.3.4 执行main.py ..................................................................................... 195
附录A 本书用到的Python 代码清单 ..................................................... 196
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python 接口自动化测试
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python量化交易
目  录
第1章  量化交易速览 1
1.1  为何选择量化交易 1
1.1.1  量化交易的概念 1
1.1.2  主观交易与量化交易 2
1.2  量化交易的先驱们 5
1.2.1  朱尔斯·雷格纳特 5
1.2.2  爱德华·索普 6
1.2.3  托马斯·彼得菲 9
1.2.4  詹姆斯·西蒙斯 14
1.3  美国量化投资的发展历史 17
1.3.1  兴起阶段（1970—1990年） 17
1.3.2  快速发展阶段（1990—2000年） 18
1.3.3  稳步增长阶段（2000年至今） 19
1.4  中国量化投资的发展历史 20
1.4.1  ETF套利时代（2010年以前） 20
1.4.2  多因子Alpha和高频交易称雄时代（2010—2015年） 21
1.4.3  多元化投资时代（2016年至今） 23
1.5  国内常用的量化交易策略 24
1.5.1  期货CTA策略 24
1.5.2  股票Alpha策略 32
1.5.3  期权波动率套利策略 41
1.5.4  高频交易策略 45
1.6  宽客 48
1.7  宽客的两大阵形：P宗与Q宗 51
1.8  宽客的3种职能分类 52
1.8.1  量化IT工程师 52
1.8.2  量化研究员 53
1.8.3  量化交易员 54
1.9  宽客的四大派系 55
1.9.1  券商资管 56
1.9.2  公募基金 56
1.9.3  私募基金 57
1.9.4  期货市场 57
第2章  Python量化编程基础 59
2.1  Python运行环境搭建 60
2.1.1  安装Anaconda2-5.0.0（32位） 61
2.1.2  设置Anancoda环境 62
2.1.3  创建共享环境 64
2.1.4  列出共享环境 64
2.1.5  安装Jupyter Notebook 65
2.2  数据 66
2.2.1  字符串 66
2.2.2  数字 67
2.2.3  容器 68
2.2.4  布尔值 73
2.2.5  空值 73
2.3  函数 74
2.3.1  自定义函数 74
2.3.2  第三方库的函数 75
2.4  条件判断 75
2.5  循环 76
2.6  类和实例 79
2.6.1  定义学生父类 79
2.6.2  定义父类实例 81
2.6.3  定义团体子类 82
2.6.4  定义子类实例 83
2.7  NumPy与Pandas 84
2.7.1  一维数组 84
2.7.2  二维数组 88
2.8  scikit-learn机器学习库 92
2.8.1  机器学习的步骤 93
2.8.2  线性回归 94
2.8.3  逻辑回归 100
2.9  Matplotlib绘图库 103
2.9.1  用列表绘制线条 103
2.9.2  用数组绘图 105
2.9.3  多个图的绘制 108
第3章  vn.py入门 109
3.1  vn.py介绍 109
3.2  搭建vn.py运行环境 113
3.2.1  安装Visual Studio 2013社区版（特定版本） 113
3.2.2  安装代码编辑器工具：Sublime Text 114
3.2.3  安装Wing IDE 115
3.2.4  安装MongoDB数据库 115
3.2.5  安装Robo 3T 118
3.2.6  安装vn.py 119
3.2.7  更新vn.py 121
3.3  VnTrader界面功能介绍 122
3.3.1  连接CTP 122
3.3.2  界面说明 123
3.4  vn.py架构 124
3.4.1  底层接口 125
3.4.2  中层引擎 126
3.4.3  上层应用 127
3.5  底层接口 128
3.5.1  CTP API的工作原理 128
3.5.2  CTP API的Python封装设计 133
3.5.3  CTP API对接中层引擎原理 135
3.6  事件引擎 138
3.6.1  时间驱动 138
3.6.2  事件驱动 139
3.6.3  事件引擎工作流程 140
3.6.4  事件引擎结构 141
3.7  上层应用 143
3.7.1  PyQt介绍 143
3.7.2  GUI组件构成 144
第4章  在vn.py中实现CTA策略 147
4.1  数据解决方案 147
4.1.1  CSV加载模块 147
4.1.2  开发新的CSV导入模块 152
4.1.3  数据下载模块 155
4.2  K线生成模块 157
4.2.1  1分钟K线 158
4.2.2  X分钟K线 161
4.3  K线管理模块 162
4.3.1  初始化参数 162
4.3.2  生成时间序列 163
4.3.3  定义属性函数 164
4.3.4  生成计算指标 165
4.4  CTA策略模块 167
4.4.1  定义成员变量 168
4.4.2  构建函数 169
4.4.3  回调函数 170
4.4.4  主动函数 171
4.5  策略回测模块 174
4.5.1  CTA回测引擎 174
4.5.2  参数优化设置 178
4.5.3  调用回测和优化模块 178
第5章  经典CTA策略 185
5.1  双均线策略 185
5.1.1  策略原理 185
5.1.2  向量回测 186
5.1.3  vn.py回测 191
5.2  Dual Thrust策略 200
5.2.1  策略原理 200
5.2.2  策略代码解析 201
5.2.3  策略回测 206
5.2.4  策略优化 208
5.2.5  滚动回测 211
5.3  AtrRsi策略 212
5.3.1  ATR指标 213
5.3.2  RSI指标 215
5.3.3  策略原理 216
5.3.4  策略代码解析 217
5.3.5  策略回测 220
5.3.6  滚动回测 221
5.4  金肯特纳通道策略 223
5.4.1  策略原理 223
5.4.2  策略代码解析 224
5.4.3  策略回测 229
5.4.4  滚动回测 229
5.5  布林带通道策略 231
5.5.1  策略原理 231
5.5.2  CCI指标 232
5.5.3  ATR指标 234
5.5.4  策略回测 235
5.5.5  滚动回测 236
5.6  跨时间周期策略 238
5.6.1  策略原理 239
5.6.2  策略代码解析 239
5.6.3  策略回测 243
5.6.4  滚动回测 244
5.7  多信号组合策略 245
5.7.1  策略原理 246
5.7.2  信号生成部分 246
5.7.3  交易管理部分 251
5.7.4  多信号策略的重构 256
第6章  海龟策略本地化实证 259
6.1  海龟策略速览 259
6.1.1  海龟策略的故事 259
6.1.2  海龟策略的局限性 260
6.1.3  原版海龟策略 261
6.1.4  策略回测效果 266
6.2  本地化实现困境与解决方案 268
6.2.1  本地化实现困境 268
6.2.2  理想解决方案 270
6.3  vn.py实现的海龟策略 271
6.3.1  工具准备 271
6.3.2  数据准备 272
6.3.3  海龟策略代码结构 275
6.3.4  海龟策略6大要素代码解析 278
6.3.5  海龟策略的回测 284
6.4  品种选择验证 285
6.4.1  原版投资组合测试 285
6.4.2  筛选品种的传统方法 287
6.4.3  构建海龟组合的难点 295
6.4.4  海龟组合筛选的解决方案 296
6.4.5  重新构建投资组合 300
6.5  长短周期信号检验 320
6.6  上一笔赢利过滤检验 322
6.7  手续费、滑点测试 324
6.8  单位头寸限制检验 325
6.9  关于海龟策略的其他研究方向 329
第7章  新策略实战 330
7.1  开发新的策略 330
7.1.1  策略思路 330
7.1.2  增加AROON函数 332
7.1.3  策略代码解析 333
7.1.4  策略回测 335
7.2  多策略的组合回测 337
7.2.1  历史表现 338
7.2.2  预测表现 341
7.2.3  回测的注意事项 341
7.3  模拟测试 348
7.3.1  策略文件目录 348
7.3.2  实盘/模拟盘配置文件 349
7.4  真实交易环境 352
7.4.1  交易环境的3套 352
7.4.2  交易环境的数据流 353
7.5  实际操作注意事项 354
7.5.1  计算 354
7.5.2  数据使用误差 355
7.5.3  过拟合 356
7.5.4  幸存者偏差 357
7.5.5  策略周期 358
7.5.6  动态变化的现实环境 359
7.5.7  人为干预 360
附录A  主流交易品种 361
A.1  股票 361
A.1.1  股票的定义 361
A.1.2  股票交易所 362
A.1.3  股票竞价规则 363
A.1.4  T+1制度 367
A.1.5  股票交易策略 369
A.2  期货 371
A.2.1  期货的定义 371
A.2.2  期货交易所 371
A.2.3  期货交易策略 374
A.3  期权 376
A.3.1  期权的定义 376
A.3.2  期权的分类 379
A.3.3  期权的影响因素 381
A.3.4  期权投资组合 383
A.3.5  期权波动率套利策略 386
A.4  外汇 387
A.4.1  外汇的定义 387
A.4.2  外汇市场的结构 389
A.4.3  外汇市场的组织形式 392
A.4.4  主要外汇交易中心 393
A.4.5  外汇交易策略 395
参考文献 398
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python量化交易
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python机器学习实战
第一部分Python开发实战
第一章开发环境选择与比较：张目清
第二章Anaconda使用介绍：裔隽
第三章开发规范与方法：张目清
第四章单元测试与代码覆盖率：张怿檬
第二部分Python编程技巧
第五章列表生成式：裔隽
第六章Collections库：裔隽
第七章迭代器：裔隽
第八章Python多线程与多进程浅析：裔隽
第九章Python程序性能分析初步：裔隽
第十章机器学习基础：张怿檬
第十一章主要算法概览：张怿檬
第十二章K近邻算法：张怿檬
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python机器学习实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python大规模机器学习
译者序
前言
作者简介
审校者简介
第1章迈向可扩展性的第一步1
1.1详细解释可扩展性1
1.1.1大规模实例3
1.1.2介绍Python4
1.1.3使用Python进行向上扩展4
1.1.4使用Python进行向外扩展5
1.2Python用于大规模机器学习6
1.2.1选择Python 2还是Python 36
1.2.2安装Python7
1.2.3逐步安装7
1.2.4安装软件包8
1.2.5软件包升级9
1.2.6科学计算发行版10
1.2.7Jupyter/IPython介绍11
1.3Python包13
1.3.1NumPy14
1.3.2SciPy14
1.3.3pandas14
1.3.4Scikitlearn15
1.3.5小结21
第2章Scikitlearn中的可扩展学习22
2.1非核心学习22
2.1.1选择子采样23
2.1.2一次优化一个实例24
2.1.3构建非核心学习系统25
2.2流化源数据25
2.2.1处理真实数据集26
2.2.2第一个示例——流化共享单车数据集28
2.2.3使用pandas I/O工具30
2.2.4使用数据库31
2.2.5关注实例排序35
2.3随机学习37
2.3.1批处理梯度下降37
2.3.2随机梯度下降40
2.3.3Scikitlearn的SGD实现40
2.3.4定义SGD学习参数42
2.4数据流的特征管理43
2.4.1描述目标46
2.4.2哈希技巧49
2.4.3其他基本变换51
2.4.4流测试和验证52
2.4.5使用SGD52
2.5小结56
第3章实现快速SVM57
3.1测试数据集58
3.1.1共享单车数据集58
3.1.2森林覆盖类型数据集58
3.2支持向量机59
3.2.1hinge loss及其变形64
3.2.2Scikitlearn的SVM实现65
3.2.3探究通过子采样改善非线性SVM68
3.2.4使用SGD实现大规模SVM70
3.3正则化特征选择77
3.4SGD中的非线性78
3.5超参数调整82
3.6小结96
第4章神经网络与深度学习97
4.1神经网络架构98
4.1.1神经网络如何学习106
4.1.2选择正确的架构110
4.1.3使用神经网络111
4.1.4sknn并行化111
4.2神经网络和正则化113
4.3神经网络和超参数优化115
4.4神经网络和决策边界117
4.5用H2O进行规模化深度学习120
4.5.1用H2O进行大规模深度学习121
4.5.2H2O上的网格搜索124
4.6深度学习和无监督预训练126
4.7使用theanets进行深度学习126
4.8自动编码器和无监督学习128
4.9小结131
第5章用TensorFlow进行深度学习132
5.1TensorFlow安装134
5.2在TensorFlow上使用SkFlow进行机器学习140
5.3安装Keras和TensorFlow148
5.4在TensorFlow中通过Keras实现卷积神经网络152
5.4.1卷积层153
5.4.2池化层153
5.4.3全连接层154
5.5增量CNN方法156
5.6GPU计算156
5.7小结159
第6章大规模分类和回归树160
6.1bootstrap聚合162
6.2随机森林和极端随机森林163
6.3随机搜索实现快速参数优化167
6.4CART和boosting172
6.5XGBoost179
6.5.1XGBoost回归181
6.5.2XGBoost流化大型数据集184
6.5.3XGBoost模型存储185
6.6用H2O实现非核心CART185
6.6.1H2O上的随机森林和网格搜索186
6.6.2H2O上的随机梯度增强和网格搜索188
6.7小结191
第7章大规模无监督学习192
7.1无监督方法192
7.2特征分解：PCA193
7.2.1随机化PCA199
7.2.2增量PCA200
7.2.3稀疏PCA201
7.3使用H2O的PCA202
7.4K-均值聚类算法203
7.4.1初始化方法206
7.4.2K-均值假设206
7.4.3选择最佳K209
7.4.4扩展K-均值算法：小批量212
7.5用H2O实现K-均值216
7.6LDA218
7.7小结226
第8章分布式环境——Hadoop和Spark227
8.1从单机到集群227
8.2设置VM230
8.2.1VirtualBox230
8.2.2Vagrant232
8.2.3使用VM232
8.3Hadoop生态系统234
8.3.1架构234
8.3.2HDFS235
8.3.3MapReduce242
8.3.4YARN250
8.4Spark250
8.5小结260
第9章Spark机器学习实践261
9.1为本章设置虚拟机261
9.2跨集群节点共享变量262
9.2.1广播只读变量262
9.2.2累加器只写变量264
9.2.3广播和累加器的示例265
9.3Spark的数据预处理267
9.3.1JSON文件和Spark DataFrame268
9.3.2处理缺失数据270
9.3.3在内存中分组和创建表271
9.3.4将预处理的DataFrame或RDD写入磁盘273
9.3.5使用Spark DataFrame274
9.4Spark机器学习276
9.4.1Spark处理KDD99数据集277
9.4.2读取数据集277
9.4.3特征工程280
9.4.4训练学习器284
9.4.5评估学习器的表现286
9.4.6机器学习管道的威力286
9.4.7手动优化288
9.4.8交叉验证291
9.5小结293
附录介绍GPU和Theano294
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python大规模机器学习
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>いちばんやさしいPython機械学習の教本
Chapter 1 機械学習について知ろう
Chapter 2 環境を準備しよう
Chapter 3 スクレイピングでデータ収集をしよう
Chapter 4 日本語の文章生成をしよう
Chapter 5 手書き文字認識をしよう
Chapter 6 データの前処理を学ぼう
Chapter 7 回帰分析をしよう
Chapter 8 機械学習の次のステップ
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>いちばんやさしいPython機械学習の教本
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Pythonスタートブック
■第1章 プログラムを作ろう!
1-1 この章で学ぶこと
1-2 プログラミング言語Python
1-3 Pythonのインストール
1-4 コンピュータに指示を出す
1-5 インタラクティブシェルではじめるPython
1-6 はじめてのプログラムを書く
練習問題
■第2章 プログラムの材料と道具
2-1 この章で学ぶこと
2-2 材料の種類とデータ型
2-3 道具としての関数
2-4 メソッド
練習問題
■第3章 データと型のすべて
3-1 この章で学ぶこと
3-2 材料と道具をまとめて考える
3-3 モノの上下関係を考える
3-4 データの型とその中身
3-5 datetimeモジュール
3-6 データ型とオブジェクト
3-7 人生を計算してみる
練習問題
■第4章 データの入れ物
4-1 この章で学ぶこと
4-2 リスト型
4-3 辞書型
4-4 その他の入れ物
4-5 単語並べ替えプログラム
練習問題
■第5章 条件分岐と繰り返し
5-1 この章で学ぶこと
5-2 for文
5-3 if文
5-4 while文
5-5 エラー
5-6 体型判定プログラム
練習問題
■第6章 ファイルの読み書き
6-1 この章で学ぶこと
6-2 簡単なファイルの読み書き
6-3 複数行を書き込み・読み込みする
6-4 for文を使ったファイルの処理
練習問題
■第7章 Pythonで画を描く
7-1 この章で学ぶこと
7-2 turtleモジュールの基本
7-3 turtleモジュールを使いこなしてみよう
練習問題
■第8章 関数を作る
8-1 この章で学ぶこと
8-2 関数の書き方を知ろう
8-3 関数の便利さを実感してみる
8-4 さらに関数を知る
練習問題
■第9章 新しいデータ型を作る
9-1 この章で学ぶこと
9-2 データ型の復習
9-3 新しいデータ型を作る
9-4 もっとクラスを知る
9-5 継承
練習問題
■第10章 Webアプリケーションを作る
10-1 この章で学ぶこと
10-2 Webの仕組み
10-3 CGIで作る動的なWeb
10-4 サーバにデータを送る
練習問題
■第11章 データを解析する
11-1 この章で学ぶこと
11-2 データベースを利用する
11-3 ヒストグラムを描く
練習問題
■付録
付録A WindowsにPythonをインストールする
付録B macOSにPythonをインストールする
付録C 文字コードと日本語
付録D 関数と変数の高度な話
付録E リスト、辞書、セットの実践テクニック
付録F コンピュータの歴史とPython
付録G さらに学んでいくために
付録H 外部ライブラリの追加方法
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Pythonスタートブック
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>语料库语言学及Python实现
章 概述
1．1 阅读本书的理由
1．2 选择Python的理由
1．3 本书内容安排
第2章 语料库的设计与开发原理
2．1 语料库及其属性
2．2 语料库的建设步骤
2．3 语料库的发展
第3章 基于语料库的语言研究与应用范式
3．1 语料库语言学
3．2 字词频统计调查
3．3 概率分布研究
3．4 搭配和语义韵
3．5 基于语料库的句型语法研究
3．6 语料库在第二语言教学与研究中的应用
3．7 语料库在词典学中的应用
第4章 Python基础编程
4．1 Python安装
4．2 初识Python编程
4．3 数据类型
4．4 流程控制
4．5 文件处理
4．6 函数与模块
4．7 面向对象的编程
第5章 Python的正则表达式与字符串处理
5．1 正则表达式及其功能
5．2 Python的正则表达式模块
5．3 正则表达式模式和实例
第6章 基于Python的网络爬虫
6．1 网络爬虫基础
6．2 urllib、requests加BeautifulSoup爬虫方案
6．3 Scrapy爬虫方案
第7章 语料标注原理与常用的NLP工具包
7．1 中文分词和词性标注基本原理
7．2 句法标注理论基础
7．3 Stanford CoreNLP
7．4 NLTK工具包
7．5 Jieba分词工具包
7．6 THULAC中文词法分析工具包
第8章 数据预处理
8．1 numpy基础
8．2 pandas基础
8．3 Matplotlib绘图基础
第9章 描述性统计
9．1 Python统计工具包
9．2 描述性统计理论
9．3 描述性统计的Python实现
0章 推断性统计的原理与实现
10．1 理论基础
10．2 参数估计原理
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>语料库语言学及Python实现
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>増補改訂Pythonによるスクレイピング&機械学習 開発テクニック
第0章 クローリング、スクレイピングそして機械学習
第1章 クローリングとスクレイピング
第2章 高度なスクレイピング
第3章 データソースと書式・整形
第4章 機械学習
第5章 深層学習に挑戦しよう
第6章 テキスト解析とチャットボットの作成
第7章 深層学習を実践してみよう
Appendix 作業の準備と環境構築
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>増補改訂Pythonによるスクレイピング&機械学習 開発テクニック
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>3ステップでしっかり学ぶPython入門
第1章 Pythonの基礎知識
1-1 プログラムの概念を理解する
1-2 Pythonの概要を理解する
1-3 オブジェクト指向言語の考え方を理解する
第2章 プログラミングの準備
2-1 Pythonをインストールする
2-2 Visual Studio Codeをインストールする
2-3 学習のための準備を進める
第3章 はじめてのPython
3-1 Pythonと対話する
3-2 スクリプトファイルを実行する
3-3 文字列を扱う
3-4 コードを読みやすく整形する
第4章 変数と演算
4-1 プログラムのデータを扱う
4-2 データに名前を付けて取り扱う
4-3 ユーザーからの入力を受け取る
第5章 データ構造
5-1 複数の値をまとめて管理する
5-2 リストに紐づいた関数を呼び出す
5-3 キー/値の組みでデータを管理する
5-4 重複のない値セットを管理する
第6章 条件分岐
6-1 2つの値を比較する
6-2 条件に応じて処理を分岐する
6-3 より複雑な分岐を試す(1)
6-4 より複雑な分岐を試す(2)
6-5 複合的な条件を表す
第7章 繰り返し処理
7-1 条件を満たしている間だけ処理を繰り返す
7-2 リストや辞書から順に値を取り出す
7-3 指定された回数だけ処理を繰り返す
7-4 強制的にループを中断する
7-5 ループの現在の周回をスキップする
第8章 基本ライブラリ
8-1 文字列を操作する
8-2 基本的な数学演算を実行する
8-3 日付/時刻を操作する
8-4 テキストファイルに文字列を書き込む
8-5 テキストファイルから文字列を読み込む
第9章 ユーザー定義関数
9-1 基本的な関数を理解する
9-2 変数の有効範囲を理解する
9-3 引数にデフォルト値を設定する
9-4 関数を別ファイル化する
第10章 クラス
10-1 基本的なクラスを理解する
10-2 クラスにメソッドを追加する
10-3 クラスの機能を引き継ぐ
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>3ステップでしっかり学ぶPython入門
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Pythonクローリング&スクレイピング[増補改訂版]
目次
1. クローリング・スクレイピングとは何か
1-1. 本書が取り扱う領域
1-2. Wgetによるクローリング
1-3. スクレイピングに役立つUnixコマンド
1-4. gihyo.jpのスクレイピング
1-5. まとめ
2. Pythonではじめるクローリング・スクレイピング
2-1. Pythonを使うメリット
2-2. Pythonのインストールと実行
2-3. Pythonの基礎知識
2-4. Webページを取得する
2-5. Webページからデータを抜き出す
2-6. データをファイルに保存する
2-7. Pythonによるスクレイピングの流れ
2-8. URLの基礎知識
2-9. まとめ
3. ライブラリによる高度なクローリング・スクレイピング
3-1. HTMLのスクレイピング
3-2. XMLのスクレイピング
3-3. データベースに保存する
3-4. クローラーとURL
3-5. Pythonによるクローラーの作成
3-6. まとめ
4. 実用のためのメソッド
4-1. クローラーの特性
4-2. 収集したデータの利用に関する注意
4-3. クロール先の負荷に関する注意
4-4. 繰り返しの実行を前提とした設計
4-5. まとめ
5. クローリング・スクレイピングの実践とデータの活用
5-1. データセットの取得と活用
5-2. APIによるデータの収集と活用
5-3. 時系列データの収集と活用
5-4. オープンデータの収集と活用
5-5. Webページの自動操作
5-6. JavaScriptを使ったページのスクレイピング
5-7. 取得したデータの活用
5-8. まとめ
6. フレームワーク Scrapy
6-1. Scrapyの概要
6-2. Spiderの作成と実行
6-3. 実践的なクローリング
6-4. 抜き出したデータの処理
6-5. Scrapyの設定
6-6. Scrapyの拡張
6-7. クローリングによるデータの収集と活用
6-8. 画像の収集と活用
6-9. まとめ
7. クローラーの継続的な運用・管理
7-1. クローラーをサーバーで実行する
7-2. クローラーの定期的な実行
7-3. クローリングとスクレイピングの分離
7-4. クローリングの高速化・非同期化
7-5. クラウドを活用する
7-6. まとめ
Appendix. Vagrantによる開発環境の構築
A-1. VirtualBoxとVagrant
A-2. CPUの仮想化支援機能を有効にする
A-3. VirtualBoxのインストール
A-4. Vagrantのインストール
A-5. 仮想マシンを起動する
A-6. ゲストOSにSSH接続する
A-7. Pythonのスクリプトファイルを実行する
A-8. Linuxの基本操作
A-9. Vagrantで仮想マシンを操作するコマンド
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Pythonクローリング&スクレイピング[増補改訂版]
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>基于Python的智能文本分析
前言 1
第1章 语言与计算 13
数据科学范式 14
语言感知数据产品 .16
语言即数据 21
小结 .29
第 2 章 构建自定义语料库 31
语料库是什么？ .32
语料库数据管理 .35
语料库读取器 39
小结 .49
第3章 语料库预处理与处置 50
分解文档.50
语料库的转换 60
小结 .67
第4章 文本向量化和转换流水线 68
空间中的词 69
Scikit-Learn API .81
流水线 .88
小结 .93
第5章 面向文本分析的文本分类 95
文本分类.96
构建文本分类应用 .99
小结 .110
第6章 文本相似性聚类 . 112
文本上的无监督学习 112
文档相似性聚类 .114
文档主题建模 127
小结 .139
第7章 上下文感知文本分析 140
基于语法的特征提取 141
n-Gram特征提取 147
n-Gram语言模型 155
小结 .165
第8章 文本可视化 166
可视化特征空间 .167
模型诊断.185
可视化操纵 193
小结 .196
第9章 文本的图分析 .198
图计算与分析 200
从文本中抽取图 .204
实体解析.216
小结 .221
第10章 聊天机器人 223
对话基础.224
礼貌对话规则 231
有趣的问题 239
学习帮助.250
小结 .257
第11章 利用多处理和Spark扩展文本分析259
Python多处理 .260
Spark集群计算 271
小结 .289
第12章 深度学习与未来 .291
应用神经网络 292
神经网络语言模型 .292
情感分析.303
未来（几乎）已来 .309
词汇表 311
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>基于Python的智能文本分析
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据分析与挖掘实战（第2版）
前言
基础篇
第1章　数据挖掘基础 2
1.1　某知名连锁餐饮企业的困惑 2
1.2　从餐饮服务到数据挖掘 4
1.3　数据挖掘的基本任务 5
1.4　数据挖掘建模过程 5
1.4.1　定义挖掘目标 6
1.4.2　数据取样 6
1.4.3　数据探索 7
1.4.4　数据预处理 8
1.4.5　挖掘建模 8
1.4.6　模型评价 8
1.5　常用数据挖掘建模工具 9
1.6　小结 11
第2章　Python数据分析简介 12
2.1　搭建Python开发平台 14
2.1.1　所要考虑的问题 14
2.1.2　基础平台的搭建 14
2.2　Python使用入门 16
2.2.1　运行方式 16
2.2.2　基本命令 17
2.2.3　数据结构 19
2.2.4　库的导入与添加 24
2.3　Python数据分析工具 26
2.3.1　NumPy 27
2.3.2　SciPy 28
2.3.3　Matplotlib 29
2.3.4　pandas 31
2.3.5　StatsModels 33
2.3.6　scikit-learn 33
2.3.7　Keras 34
2.3.8　Gensim 36
2.4　配套附件使用设置 37
2.5　小结 38
第3章　数据探索 39
3.1　数据质量分析 39
3.1.1　缺失值分析 40
3.1.2　异常值分析 40
3.1.3　一致性分析 44
3.2　数据特征分析 44
3.2.1　分布分析 44
3.2.2　对比分析 48
3.2.3　统计量分析 51
3.2.4　周期性分析 54
3.2.5　贡献度分析 55
3.2.6　相关性分析 58
3.3　Python主要数据探索函数 62
3.3.1　基本统计特征函数 62
3.3.2　拓展统计特征函数 66
3.3.3　统计绘图函数 67
3.4　小结 74
第4章　数据预处理 75
4.1　数据清洗 75
4.1.1　缺失值处理 75
4.1.2　异常值处理 80
4.2　数据集成 80
4.2.1　实体识别 81
4.2.2　冗余属性识别 81
4.2.3　数据变换 81
4.2.4　简单函数变换 81
4.2.5　规范化 82
4.2.6　连续属性离散化 84
4.2.7　属性构造 87
4.2.8　小波变换 88
4.3　数据归约 91
4.3.1　属性归约 91
4.3.2　数值归约 95
4.4　Python主要数据预处理函数 98
4.5　小结 101
第5章　挖掘建模 102
5.1　分类与预测 102
5.1.1　实现过程 103
5.1.2　常用的分类与预测算法 103
5.1.3　回归分析 104
5.1.4　决策树 108
5.1.5　人工神经网络 115
5.1.6　分类与预测算法评价 120
5.1.7　Python分类预测模型特点 125
5.2　聚类分析 125
5.2.1　常用聚类分析算法 126
5.2.2　K-Means聚类算法 127
5.2.3　聚类分析算法评价 132
5.2.4　Python主要聚类分析算法 133
5.3　关联规则 135
5.3.1　常用关联规则算法 136
5.3.2　Apriori算法 136
5.4　时序模式 142
5.4.1　时间序列算法 142
5.4.2　时间序列的预处理 143
5.4.3　平稳时间序列分析 145
5.4.4　非平稳时间序列分析 148
5.4.5　Python主要时序模式算法 156
5.5　离群点检测 159
5.5.1　离群点的成因及类型 160
5.5.2　离群点检测方法 160
5.5.3　基于模型的离群点检测方法 161
5.5.4　基于聚类的离群点检测方法 164
5.6　小结 167
实战篇
第6章　财政收入影响因素分析及预测 170
6.1　背景与挖掘目标 170
6.2　分析方法与过程 171
6.2.1　分析步骤与流程 172
6.2.2　数据探索分析 172
6.2.3　数据预处理 176
6.2.4　模型构建 178
6.3　上机实验 184
6.4　拓展思考 185
6.5　小结 186
第7章　航空公司客户价值分析 187
7.1　背景与挖掘目标 187
7.2　分析方法与过程 188
7.2.1　分析步骤与流程 189
7.2.2　数据探索分析 189
7.2.3　数据预处理 200
7.2.4　模型构建 207
7.2.5　模型应用 212
7.3　上机实验 214
7.4　拓展思考 215
7.5　小结 216
第8章　商品零售购物篮分析 217
8.1　背景与挖掘目标 217
8.2　分析方法与过程 218
8.2.1　数据探索分析 219
8.2.2　数据预处理 224
8.2.3　模型构建 226
8.3　上机实验 232
8.4　拓展思考 233
8.5　小结 233
第9章　基于水色图像的水质评价 234
9.1　背景与挖掘目标 234
9.2　分析方法与过程 235
9.2.1　分析步骤与流程 236
9.2.2　数据预处理 236
9.2.3　模型构建 240
9.2.4　水质评价 241
9.3　上机实验 242
9.4　拓展思考 242
9.5　小结 243
第10章　家用热水器用户行为分析与事件识别 244
10.1　背景与挖掘目标 244
10.2　分析方法与过程 245
10.2.1　数据探索分析 246
10.2.2　数据预处理 249
10.2.3　模型构建 260
10.2.4　模型检验 261
10.3　上机实验 262
10.4　拓展思考 264
10.5　小结 265
第11章　电子商务网站用户行为分析及服务推荐 266
11.1　背景与挖掘目标 266
11.2　分析方法与过程 267
11.2.1　分析步骤与流程 267
11.2.2　数据抽取 269
11.2.3　数据探索分析 270
11.2.4　数据预处理 279
11.2.5　构建智能推荐模型 283
11.3　上机实验 291
11.4　拓展思考 293
11.5　小结 293
第12章　电商产品评论数据情感分析 294
12.1　背景与挖掘目标 294
12.2　分析方法与过程 295
12.2.1　评论预处理 296
12.2.2　评论分词 297
12.2.3　构建模型 303
12.3　上机实验 315
12.4　拓展思考 316
12.5　小结 318
提高篇
第13章　基于Python引擎的开源数据挖掘建模平台（TipDM） 320
13.1　平台简介 321
13.1.1　模板 321
13.1.2　数据源 322
13.1.3　工程 323
13.1.4　系统组件 324
13.1.5　TipDM数据挖掘建模平台的本地化部署 326
13.2　快速构建数据挖掘工程 327
13.2.1　导入数据 329
13.2.2　配置输入源组件 331
13.2.3　配置缺失值处理组件 332
13.2.4　配置记录选择组件 334
13.2.5　配置数据标准化组件 334
13.2.6　配置K-Means组件 336
13.3　小结 339
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据分析与挖掘实战（第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python全栈开发实践入门
第1章  安装Ubuntu系统 1
1.1  普通镜像安装 1
1.2  PXE搭建（带DHCP模式） 17
1.3  PXE搭建（DHCP不可控） 27
1.4  KickStart无人职守配置 32
1.5  使用PXE安装系统 41
第2章  Python开发工具——sublime3使用 43
第3章  Python开发工具——PyCharm使用 60
第4章  Python开发工具——Vim使用 90
4.1  安装Vim 90
4.2  Vim基本使用 94
第5章  Docker的安装搭建 103
第6章  Git使用 146
6.1  版本控制简介 146
6.2  Git历史 146
6.3  安装Git 147
6.4  Git项目结构 154
6.5  Git基本用法 155
6.6  CentOS系统搭建Git服务器 171
6.7  使用Docker搭建GitLab服务器 177
第7章  数据库介绍 189
7.1  数据库简介 189
7.2  关系型数据库 190
7.3  非关系型数据库 205
第8章  基于Flask开发Web项目 211
8.1  为项目创建虚拟环境 211
8.2  快速搭建HTTPS网站应用 213
8.3  使用PyCharm在本机容器中开发 214
第9章  Web自动化测试 221
第10章  持续集成 236
第11章  实战开发简易博客后台 244
后  记 274
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python全栈开发实践入门
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python即学即用
出版说明前言第 1 章 绪论 11.1 Python 的特点 11.1.1 为何适应各种用户需求 21.1.2 胶水特点 21.1.3 语言特点 21.1.4 语法风格 31.1.5 多平台 51.1.6 丰富的支持 51.2 Python 版本与集成包 51.3 Python 的下载与安装 61.3.1 下载 Python 61.3.2 Python 在 Windows 下的安装 61.3.3 Anaconda 81.4 python 的 IDE 91.4.1 IDLE 91.4.2 PyCharm 91.4.3 Spyder 101.4.4 其他 IDE 111.5 软件包的安装方法 111.5.1 easy_install 121.5.2 pip 121.6 高级话题：Matplotlib 131.6.1 Matplotlib 特点 131.6.2 Matplotlib 绘图 131.6.3 用 Matplotlib 绘制股票历史 K 线图 151.7 小结 17第 2 章 数据类型 182.1 数字数据类型 182.1.1 布尔型 bool 192.1.2 基本整型 int 202.1.3 长整型 202.1.4 双精度浮点型 float 212.1.5 十进制浮点型 Decimal 212.1.6 复数 Complex 222.1.7 数字运算符 232.1.8 数字类型函数 242.2 序列 262.2.1 字符串 282.2.2 列表 392.2.3 元组 452.3 字典 482.3.1 字典创建 482.3.2 字典访问 492.3.3 字典相关函数 512.4 高级话题：NumPy 542.4.1 NumPy 数组与 Python 列表的区别 542.4.2 NumPy 数据类型 552.5 小结 57第 3 章 控制流程与运算 583.1 选择结构 583.1.1 单分支结构 583.1.2 双分支结构 593.1.3 多分支结构 603.1.4 条件表达式 623.2 循环结构 623.2.1 while 语句 623.2.2 for 语句 653.3 高级话题：NumPy 的数组操作 703.3.1 创建数组 703.3.2 索引和切片 713.3.3 数组对象的属性 723.3.4 数组和标量之间的运算 733.3.5 数组的转置 743.3.6 通用函数 743.3.7 统计方法 753.3.8 集合运算 763.3.9 随机数 763.3.10 排序 773.3.11 线性代数 783.3.12 访问文件 783.4 小结 79第 4 章 函数与函数式编程 804.1 函数 804.1.1 定义函数 804.1.2 函数调用 824.1.3 内部/内嵌函数 824.2 函数参数 834.2.1 标准化参数 834.2.2 可变数量的参数 864.2.3 函数传递 894.3 装饰器 904.3.1 无参数装饰器 904.3.2 带参数装饰器 934.4 函数式编程 944.4.1 lambda 表达式 944.4.2 内建函数 map、filter 、reduce 964.4.3 偏函数应用 984.5 变量作用域 994.5.1 全局变量和局部变量 994.5.2 global 语句 1004.5.3 闭包与外部作用域 1014.6 递归 1024.7 生成器 1024.8 高级话题：SciPy 1044.8.1 傅里叶变换 1054.8.2 滤波 1074.9 小结 109第 5 章 文件 1105.1 磁盘文件 1105.1.1 打开、关闭磁盘文件 1105.1.2 写文件 1125.1.3 读文件 1145.1.4 文件指针操作 1165.2 StringIO 类文件 1165.3 文件系统操作 1205.3.1 os 模块 1205.3.2 os.path 模块 1245.3.3 shutil 模块 1275.4 高级话题：Python 读写 Excel 文件 1305.4.1 xlwt 库 1305.4.2 xlrd 库 1335.4.3 xlutils 库 1345.4 小结 135第 6 章 模块包 1366.1 模块 1366.1.1 搜索路径 1366.1.2 导入模块 1376.1.3 导入指定的模块属性 1376.1.4 加载模块 1386.1.5 名称空间 1386.1.6 “编译的”Python 文件 1396.1.7 自动导入模块 1396.1.8 循环导入 1396.2 包 1416.3 高级话题：程序打包 1426.3.1 Distutils 1426.3.2 py2exe 1446.4 小结 144第 7 章 类 1457.1 基本概念 1457.2 类定义 1467.3 实例 1487.3.1 创建实例 1487.3.2 初始化 1497.3.3 _dict_属性 1517.3.4 特殊方法 1527.4 继承 1557.5 多态 1587.6 可见性 1597.7 python 类中的属性 1607.8 高级话题：抽象基类 1637.9 小结 166第 8 章 数据库 1678.1 DB-API2.0 1678.2 Psycopg 2 1708.3 MySQL 1738.4 高级话题：ORM 1758.5 小结 178第 9 章 网络编程 1799.1 网络基础 1799.2 CGI 1829.2.1 CGI 模块 1829.2.2 WSGI 1839.3 高级话题：Flask 1849.3.1 Flask 简介 1849.3.2 Flask-SQLAlchemy 1859.3.3 Flask-WTF 1869.3.4 Jinja2 1879.3.5 用 Matplotlib 与 Flask 显示动态图片 1899.3.6 Flask-Script 1909.3.7 Flask 程序运行 1919.4 小结 192第 10 章 正则表达式 19310.1 Python 的正则表达式语法 19310.2 re 模块 19510.2.1 Python 正则表达式用法 19510.2.2 编译一个模式 19710.2.3 模式替换 19810.3 高级话题：Beautiful Soup 19810.4 小结 202第 11 章 图形用户界面编程 20311.1 Tkinter 20311.1.1 Tkinter 组件 20311.1.2 Tkinter 回调、绑定 20611.1.3 Matplotlib 应用于 Tkinter 20811.2 高级话题：PyQt 21011.2.1 PyQt 介绍 21011.2.2 PyQt 的事件 21411.2.3 PyQt 的 ToDo 实例 21511.3 小结 219第 12 章 大数据的利器 22012.1 JSON 22012.1.1 JSON 格式定义 22012.1.2 simplejson 库 22112.1.3 通过 JSON 读取汇率 22612.2 XML 22712.2.1 XML 基本定义 22712.2.2 LXML 库使用 22812.2.3 通过 XML 读取新浪和人民网的 RSS 22912.3 HDF5 22912.3.1 HDF5 格式定义 22912.3.2 PyTables 使用 23012.4 pandas 23212.4.1 pandas 介绍 23212.4.2 pandas 的 Series 23212.4.3 DataFrame 的创建 23414.4.4 DataFrame 的索引访问 23512.4.5 DataFrame 的数据赋值 23912.4.6 DataFrame 的基本运算 23912.4.7 pandas 的 IO 操作 24012.4.8 pandas 读取 EIA 的原油价格 24112.5 小结 243附录 244附录 A Python 编译安装 244附录 B Virtualenv Python 虚拟环境 246附录 C Python 2 还是 Python 3 248附录 D 科学家的 Python 252附录 E 无处不在的 Python 253
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python即学即用
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>It’s Django：用Python迅速打造Web應用
Module 0 導讀
Module 1 Python 一章就Go
Module 2 Python 的模組與套件
Module 3 Django 介紹與安裝
Module 4 建置與環境設定
Module 5 視圖與URL
Module 6 模版初探
Module 7 模版的變量與標籤
Module 8 模型與資料庫
Module 9 後台管理系統Admin
Module 10 使用者互動與表單
Module 11 表單的驗證與模型化
Module 12 Cookies 與Sessions
Module 13 用戶的登入與登出
Module 14 權限與註冊
Module 15 模版進階技巧
Module 16 URL 配置與視圖進階技巧
Module 17 視圖類別
Module 18 資料庫與模型進階技巧
Module 19 測試
Module 20 佈署
Module 21 附錄
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>It’s Django：用Python迅速打造Web應用
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据科学导论
译者序
前言
关于本书
关于作者
关于封面插图
第1章　大数据世界中的数据科学1
1.1　数据科学和大数据的好处和用途2
1.2　数据种类3
1.2.1　结构化数据3
1.2.2　非结构化数据3
1.2.3　自然语言数据4
1.2.4　计算机数据4
1.2.5　图类数据5
1.2.6　音频、视频和图像数据5
1.2.7　流数据6
1.3　数据科学过程6
1.3.1　设置研究目标6
1.3.2　检索数据6
1.3.3　数据准备7
1.3.4　数据探索7
1.3.5　数据建模7
1.3.6　展示与自动化7
1.4　大数据生态系统与数据科学7
1.4.1　分布式文件系统7
1.4.2　分布式编程框架9
1.4.3　数据集成框架9
1.4.4　机器学习框架9
1.4.5　NoSQL数据库10
1.4.6　调度工具10
1.4.7　基准测试工具10
1.4.8　系统部署11
1.4.9　服务开发11
1.4.10　安全11
1.5　Hadoop工作示例介绍11
1.6　本章小结16
第2章　数据科学过程17
2.1　数据科学过程概述17
2.2　步骤1：定义研究目标并创立项目章程19
2.2.1　了解研究的目标和背景20
2.2.2　创立项目章程20
2.3　步骤2：检索数据20
2.3.1　从存储在公司内部的数据开始21
2.3.2　不要害怕去购买数据21
2.3.3　检查数据质量以预防问题发生22
2.4　步骤3：数据的清洗、整合以及转换22
2.4.1　数据清洗22
2.4.2　尽可能早地修正错误27
2.4.3　从不同的数据源整合数据28
2.4.4　数据转换30
2.5　步骤4：探索性数据分析32
2.6　步骤5：构建模型35
2.6.1　模型与变量的选择35
2.6.2　模型执行36
2.6.3　模型诊断与模型比较39
2.7　步骤6：展示结果并在其上搭建应用程序40
2.8　本章小结40
第3章　机器学习42
3.1　什么是机器学习，为什么需要关注它42
3.1.1　机器学习在数据科学中的应用43
3.1.2　机器学习在数据科学过程中的使用43
3.1.3　Python工具在机器学习中的应用44
3.2　建模过程45
3.2.1　特征工程以及模型选取46
3.2.2　模型的训练47
3.2.3　模型的验证47
3.2.4　预测新的观测值48
3.3　机器学习的类型48
3.3.1　有监督学习48
3.3.2　无监督学习53
3.4　半监督学习60
3.5　本章小结61
第4章　单机上处理大数据63
4.1　大数据处理过程中遇到的难题63
4.2　处理巨量数据的通用技术64
4.2.1　选择合适的算法65
4.2.2　选择合适的数据结构71
4.2.3　选择合适的工具73
4.3　处理大数据集的通用编程技巧75
4.3.1　不必重复发明轮子75
4.3.2　充分利用硬件76
4.3.3　减少计算需求76
4.4　案例研究1：预测恶意URL77
4.4.1　步骤1：确立研究目标77
4.4.2　步骤2：获取URL数据77
4.4.3　步骤4：数据探索78
4.4.4　步骤5：建模79
4.5　案例研究2：在数据库中建立一个推荐系统80
4.5.1　所需的工具及技术80
4.5.2　步骤1：研究问题82
4.5.3　步骤3：数据准备82
4.5.4　步骤5：建模86
4.5.5　步骤6：展示与自动化86
4.6　本章小结88
第5章　大数据世界的第一步89
5.1　数据分布存储和框架处理89
5.1.1　Hadoop：存储和处理大数据集的框架90
5.1.2　Spark：取代MapReduce以获得更好的性能92
5.2　案例研究：借贷的风险评估93
5.2.1　步骤1：研究目标94
5.2.2　步骤2：数据检索95
5.2.3　步骤3：数据准备98
5.2.4　步骤4（数据探索）和步骤6（报告形成）101
5.3　本章小结111
第6章　了解NoSQL112
6.1　NoSQL简介114
6.1.1　ACID：关系型数据库核心原则114
6.1.2　CAP理论：多节点数据库的问题115
6.1.3　NoSQL数据库的BASE原则116
6.1.4　NoSQL数据库的种类117
6.2　案例研究：这是什么疾病123
6.2.1　步骤1：设置研究目标124
6.2.2　步骤2和步骤3：数据检索与数据准备124
6.2.3　步骤4：数据探索131
6.2.4　再回到步骤3：为描述疾病概况做数据准备137
6.2.5　再回到步骤4：为描述疾病概况做数据探索140
6.2.6　步骤6：展示与自动化140
6.3　本章小结141
第7章　图数据库的兴起143
7.1　互联数据及图数据库概述143
7.2　图数据库Neo4j概述146
7.3　数据互联案例：食谱推荐引擎152
7.3.1　步骤1：设置研究目标153
7.3.2　步骤2：数据检索154
7.3.3　步骤3：数据准备155
7.3.4　步骤4：数据探索157
7.3.5　步骤5：数据建模159
7.3.6　步骤6：数据展示162
7.4　本章小结162
第8章　文本挖掘和文本分析164
8.1　现实世界中的文本挖掘165
8.2　文本挖掘技术169
8.2.1　词袋169
8.2.2　词干提取和词形还原170
8.2.3　决策树分类器171
8.3　案例研究：Reddit帖子分类173
8.3.1　自然语言工具包173
8.3.2　数据科学过程综述及第1步：研究目标175
8.3.3　第2步：数据检索175
8.3.4　第3步：数据准备178
8.3.5　步骤4：数据探索180
8.3.6　再回到步骤3：数据准备的调整182
8.3.7　步骤5：数据分析185
8.3.8　步骤6：展示与自动化188
8.4　本章小结189
第9章　面向终端用户的数据可视化191
9.1　数据可视化选项192
9.2　Crossfilter—JavaScript MapReduce库194
9.2.1　安装195
9.2.2　利用Crossfilter筛选药品数据集198
9.3　用dc.js创建一个交互式控制面板201
9.4　控制面板开发工具205
......
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据科学导论
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>从零开始学Python程序设计
目 录
前言
第1章 Python的世界1
1.1 轻松搞定Python1
1.1.1 Python的起源2
1.1.2 Python的版本3
1.1.3 安装Python3
1.1.4 测试Python 3.5软件8
1.1.5 Python 3.5有什么名堂10
1.2 Python的IDE-IDLE12
1.2.1 有哪些IDE软件12
1.2.2 Python Shell13
1.2.3 IDLE的环境设置18
1.3 Python的编写风格26
1.3.1 第一个Python程序27
1.3.2 程序的缩排和注释28
1.3.3 语句的分行和合并28
1.3.4 程序的输入和输出29
章节回顾29
课后习题30
第2章 Python基本语法32
2.1 变量32
2.1.1 标识符的命名规则32
2.1.2 保留字和关键字33
2.1.3 给变量赋值33
2.2 认识Python的内置类型37
2.3 Python的数据类型38
2.3.1 整数类型38
2.3.2 使用浮点数41
2.3.3 复数类型44
2.3.4 更精确的Decimal类型44
2.3.5 例外——分数47
2.4 使用表达式48
2.4.1 算术运算符48
2.4.2 赋值运算符51
2.4.3 比较运算符52
2.4.4 逻辑运算符52
2.4.5 位运算符53
章节回顾55
课后习题55
第3章 流程结构57
3.1 程序设计语言结构57
3.2 根据条件进行选择58
3.2.1 if语句采用单向判断58
3.2.2 if/else语句做双向判断60
3.2.3 多重选择62
3.3 循环语句64
3.3.1 for循环64
3.3.2 while循环67
3.3.3 嵌套循环69
3.3.4 产生随机数的random模块71
3.4 特殊流程控制72
3.4.1 break语句73
3.4.2 continue语句74
章节回顾75
课后习题75
第4章 序列类型与字符串78
4.1 序列类型78
4.1.1 序列与迭代器79
4.1.2 创建序列数据80
4.1.3 序列元素及其操作80
4.1.4 与序列有关的函数83
4.2 字符串84
4.2.1 创建字符串84
4.2.2 切片的概念87
4.2.3 转义字符91
4.2.4 字符串常用函数92
4.3 格式化字符串100
4.3.1 %运算符——格式字符串100
4.3.2　内置函数format()102
4.3.3 str.format()方法104
章节回顾107
课后习题108
第5章 元组与列表111
5.1 元组111
5.1.1 创建元组111
5.1.2 读取元组元素115
5.1.3 元组的相关操作116
5.2 列表的基本操作119
5.2.1 创建列表120
5.2.2 与列表有关的方法122
5.2.3 数据排序124
5.2.4 列表推导式128
5.3 二维列表133
5.3.1 产生矩阵133
5.3.2 读取矩阵134
5.3.3 矩阵与列表推导式136
5.3.4 不规则列表139
5.4 列表与复制141
5.4.1 列表与浅复制141
5.4.2 copy模块的copy()方法143
5.4.3 deepcopy()方法复制对象本身144
章节回顾145
课后习题145
第6章 字典和集合148
6.1 字典148
6.1.1 映射类型与字典148
6.1.2 创建字典149
6.1.3 键、值的操作153
6.1.4 与字典有关的方法158
6.1.5 字典推导式161
6.2 默认字典和有序字典163
6.2.1 默认字典163
6.2.2 有序字典165
6.3 集合168
6.3.1 什么是哈希169
6.3.2 创建集合对象170
6.3.3 集合的相关操作171
6.3.4 集合的数学计算173
6.3.5 集合推导式179
章节回顾179
课后习题180
第7章 函数182
7.1 认识函数182
7.1.1 Python的内置函数183
7.1.2 函数基础186
7.1.3 定义函数186
7.1.4 调用函数187
7.1.5 返回值188
7.2 参数的基本机制190
7.2.1 参数如何传递191
7.2.2 位置参数有顺序性193
7.2.3 默认参数值193
7.2.4 关键字参数197
7.3 可长可短的参数行199
7.3.1 形式参数的*表达式199
7.3.2 **表达式与字典配合202
7.3.3 *运算符拆分可迭代对象205
7.3.4 **运算符拆分字典对象207
7.4 更多函数的讨论211
7.4.1 作用域211
7.4.2 函数是第一等“公民”214
7.4.3 局部函数与闭包216
7.4.4 lambda函数218
7.4.5 递归223
章节回顾225
课后习题226
第8章 模块与函数库230
8.1 导入模块230
8.1.1 命令行的参数列表230
8.1.2 import/as语句232
8.1.3 from/import语句232
8.1.4 命名空间与dir()函数233
8.2 使用模块234
8.2.1 模块搜索路径234
8.2.2 自定义模块235
8.2.3 reload()函数238
8.3 认识函数库240
8.3.1 随机数240
8.3.2 pprint模块让打印更有看头243
8.4 处理时间与日期245
8.4.1 获取时间戳的time模块245
8.4.2 提供日期和时间的datetime模块249
8.4.3 calendar模块257
章节回顾260
课后习题260
第9章 面向对象基础263
9.1 认识面向对象263
9.1.1 对象具有属性和方法264
9.1.2 类是对象的蓝图264
9.1.3 抽象化概念265
9.2 类与对象265
9.2.1 定义类266
9.2.2 先构造再初始化对象270
9.2.3 设置、检查对象的属性274
9.2.4 处理对象的特殊方法275
9.3 类与修饰器278
9.3.1 类也有属性278
9.3.2 认识修饰器279
9.3.3 类修饰器284
9.3.4 类方法和静态方法288
9.4 重载运算符290
9.4.1 重载算术运算符290
9.4.2 对重载加号运算符做更多了解291
9.4.3 重载比较大小的运算符295
章节回顾296
课后习题297
第10章 浅谈继承机制299
10.1 认识继承299
10.1.1 与继承有关的名词299
10.1.2 继承概念299
10.1.3 特化和泛化300
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>从零开始学Python程序设计
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>用Python學資料科學
第1章 簡介
第2章 Python速成班
第3章 數據視覺化
第4章 線性代數
第5章 統計學
第6章 機率
第7章 假設與推論
第8章 梯度遞減
第9章 取得數據資料
第10章 處理數據資料
第11章 機器學習
第12章 k最近鄰
第13章 單純貝氏
第14章 簡單線性迴歸
第15章 多元迴歸
第16章 邏輯迴歸
第17章 決策樹
第18章 神經網路
第19章 集群
第20章 自然語言處理
第21章 網路分析
第22章 推薦系統
第23章 資料庫與SQL
第24章 MapReduce
第25章 勇往直前，資料科學做就對了
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>用Python學資料科學
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>物联网Python开发实战
第1章 物联网邂逅Python
1.1 物联网组成架构
1.2 物联网发展现状
1.2.1 终端设备
1.2.2 物联网操作系统
1.2.3 通信手段
1.2.4 网络建设
1.2.5 应用协议
1.2.6 物联网云平台
1.3 物联网典型应用
1.3.1 共享单车
1.3.2 智能家居
1.3.3 智慧农业
1.4 使用Python的理由
1.4.1 Python特性
1.4.2 Python无处不在
1.4.3 开发速度有时更重要
1.5 美丽的相遇
1.5.1 Python与终端
1.5.2 Python与网关
1.5.3 Python与云平台
1.5.4 物联网Python全栈开发
第2章 开启Python之旅
2.1 Python版本的选择
2.2 搭建开发环境
2.2.1 安装VMware
2.2.2 在VMware上安装Ubuntu
2.2.3 安装VMware Tools工具
2.2.4 虚拟机的网络配置
2.2.5 Samba共享设置
2.2.6 修改Python版本
2.3 开始编写Python程序
2.3.1 交互式解释器
2.3.2 源代码执行
2.3.3 注释
2.3.4 代码块和缩进
2.3.5 继续和分隔
2.3.6 输入和输出
2.4 变量和数据类型
2.4.1 变量赋值
2.4.2 常量
2.4.3 数据类型
2.5 条件和循环
2.5.1 if语句
2.5.2 while循环
2.5.3 for in循环
2.5.4 跳出循环
2.5.5 pass语句
2.6 函数
2.6.1 定义函数
2.6.2 函数调用
2.6.3 函数的参数
2.6.4 内置函数
2.7 变量进阶
2.7.1 全局变量与局部变量
2.7.2 global关键字
2.7.3 nonlocal关键字
2.7.4 变量作用域
2.8 模块与包
2.8.1 使用模块
2.8.2 包
2.9 异常处理
第3章 Python数据结构
3.1 字符串
3.1.1 索引和切片
3.1.2 字符串运算符
3.1.3 字符串格式化
3.1.4 字符编码
3.2 列表
3.2.1 访问列表
3.2.2 更改列表
3.2.3 列表操作符
3.2.4 列表常用函数
3.3 元组
3.3.1 访问元组
3.3.2 元组操作符
3.3.3 元组内置函数
3.4 字典
3.4.1 访问字典
3.4.2 修改字典
3.4.3 字典键的特性
3.4.4 字典函数
3.5 集合
3.5.1 忽略重复元素
3.5.2 无序
3.5.3 常用操作
第4章 Python高级特性
4.1 生成器
4.1.1 列表推导式
4.1.2 生成器表达式
4.1.3 生成器函数
4.2 迭代器
4.3 函数式编程
4.3.1 高阶函数
4.3.2 内置高阶函数
4.3.3 闭包
4.3.4 装饰器
4.3.5 匿名函数
4.3.6 偏函数
4.4 面向对象编程
4.4.1 类与对象
4.4.2 访问限制
4.4.3 继承
4.4.4 多重继承
4.4.5 多态
4.4.6 运算符重载
第5章 物联网核心组件
5.1 网络通信方案
5.1.1 WIFI网络
5.1.2 移动网络
5.1.3 Zigbee
5.1.4 BLE
5.1.5 LoRa
5.1.6 NB-IoT
5.2 网络通信协议
5.2.1 HTTP
5.2.2 WebSocket
5.2.3 XMPP
5.2.4 CoAP
5.2.5 MQTT
5.3 硬件
5.4 物联网云平台
5.4.1 OneNet
5.4.2 AWS IoT
5.4.3 Waston IoT
第6章 MicroPython开发物联网终端
6.1 MicroPython简介
6.1.1 MicroPython项目
6.1.2 MicroPython特点
6.1.3 MicroPython源码
6.2 MicroPython开发板
6.2.1 官方开发板PYBoard
6.2.2 国内开发板TPYBoard
6.2.3 OpenMV
6.2.4 LoPy
6.3 第一个MicroPython程序
6.4 交互式解释器
6.5 按键中断与回调
6.6 定时器的使用
6.7 串口测试
6.8 SPI接口驱动液晶屏
6.8.1 硬件连接
6.8.2 LCD屏驱动
6.8.3 字库说明
6.8.4 主程序
6.9 源码编译与固件升级
6.9.1 准备编译环境
6.9.2 源码下载与编译
6.9.3 固件烧写
6.10 MicroPython多线程
6.10.1 MicroPython线程简介
6.10.2 MicroPython线程使用
6.10.3 多线程中的锁
6.11 安全模式及恢复出厂设置
6.11.1 安全模式
6.11.2 恢复出厂设置
第7章 构建物联网网关
7.1 网关概述
7.1.1 网关的构成
7.1.2 常用物联网网关
7.2 自主构建网关
7.2.1 交叉编译
7.2.2 编译引导程序
7.2.3 内核配置与编译
7.2.4 制作文件系统
7.2.5 分区与下载
7.2.6 系统启动流程简介
7.2.7 移植Python3
7.3 树莓派作网关
7.3.1 初次启动树莓派
7.3.2 串口登录树莓派
7.3.3 SSH访问树莓派
7.3.4 升级Python版本
7.3.5 必备工具安装
7.3.6 板载WIFI配置
7.3.7 串口通信
第8章 网关数据编码与处理
8.1 读写CSV文件
8.1.1 读取CSV文件
8.1.2 写入CSV文件
8.2 JSON解析
8.2.1 JSON数据格式
8.2.2 编码
8.2.3 解码
8.3 XML操作
8.3.1 XML简介
8.3.2 解析XML
8.3.3 创建与修改
8.4 二进制数据的读写
8.5 Base64编解码
8.6 正则表达式
8.6.1 正则表达式简介
8.6.2 re模块
8.6.3 贪婪匹配
第9章 网关多进程与多线程
9.1 多进程
9.1.1 multiprocessing模块
9.1.2 进程同步
9.1.3 进程间通信
9.2 多线程
9.2.1 threading模块
9.2.2 线程同步
9.2.3 线程间通信
9.3 多线程和多进程的思考
9.3.1 多核CPU利用率实验
9.3.2 GIL全局锁
9.3.3 切换的开销
9.3.4 多线程与多进程的选择
9.4 异步IO
9.4.1 协程
9.4.2 协程与多线程对比
9.4.3 asyncio
第10章 网关数据持久化
10.1 文件操作
10.1.1 读写文本数据
10.1.2 操作文件和目录
10.1.3 读写压缩文件
10.1.4 内存映射
10.1.5 临时文件与目录
10.1.6 序列化Python对象
10.2 SQLite数据库
10.2.1 SQLite简介
10.2.2 命令行操作SQLite
10.2.3 创建数据库
10.2.4 创建表
10.2.5 SQL语句
10.2.6 SQLite的Python编程
第11章 Python扩展
11.1 Python扩展的原因
11.2 连接硬件的纽带
11.3 C语言扩展Python
11.3.1 简单的C语言Python扩展
11.3.2 传递整型参数
11.3.3 传递字符串参数
第12章 网关网络编程
12.1 网关网络通信方案
12.2 Socket编程
12.3 requests
12.3.1 上传文件
12.3.2 下载文件
12.4 hbmqtt
12.4.1 安装
12.4.2 hbmqtt命令操作
12.4.3 hbmqtt API编程
12.5 LoRa网络通信
12.5.1 LoRa模块初始化
12.5.2 数据监听与接收
12.5.3 数据缓存
第13章 物联网后台Web开发
13.1 Django简介
13.2 创建一个网站
13.2.1 Django安装
13.2.2 创建项目
13.2.3 运行与访问
13.3 网站首页
13.3.1 源码文件结构
13.3.2 视图与URL配置
13.4 Django模板
13.4.1 Django模板系统
13.4.2 模板继承
13.5 Django模型
13.5.1 安装MySQL数据库
13.5.2 创建模型
13.5.3 必要的配置
13.6 用户注册
13.7 账号登录
第14章 物联网Python项目实战
14.1 项目简介
14.2 终端设备程序开发
14.2.1 采集空气温湿度
14.2.2 获取环境光强度
14.2.3 雨量检测
14.2.4 水位检测
14.2.5 土壤湿度检测
14.2.6 水泵的控制
14.2.7 入侵检测
14.2.8 灯光控制
14.2.9 电量检测
14.2.10 LoRa通信
14.2.11 JSON消息
14.3 网关程序开发
14.3.1 终端通信
14.3.2 数据库管理
14.3.3 文件备份
14.3.4 服务器通信
14.3.5 2G模块的使用
14.4 服务器端程序开发
14.4.1 与网关通信
14.4.2 环境数据可视化
14.4.3 滴灌控制
14.4.4 灯光控制
14.4.5 报警显示与设置
14.4.6 设备管理
14.4.7 备份文件管理
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>物联网Python开发实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python与量化投资
第1章 准备工作 1
1.1 Python的安装与设置 1
1.2 常见的Python库 2
第2章 Python基础介绍 7
2.1 Python学习准备 7
2.2 Python语法基础 11
2.2.1 常量与变量 11
2.2.2 数与字符串 11
2.2.3 数据类 15
2.2.4 标识符 18
2.2.5 对象 19
2.2.6 行与缩进 20
2.2.7 注释 22
2.3 Python运算符与表达式 22
2.3.1 算数运算符 22
2.3.2 比较运算符 24
2.3.3 逻辑运算符 25
2.3.4 Python中的优先级 27
2.4 Python中的控制流 27
2.4.1 控制流的功能 28
2.4.2 Python的三种控制流 29
2.4.3 认识分支结构if 30
2.4.4 认识循环结构for…in 32
2.4.5 认识循环结构while 33
2.4.6 break语句与continue语句 35
2.5 Python函数 39
2.5.1 认识函数 39
2.5.2 形参与实参 40
2.5.3 全局变量与局部变量 44
2.5.4 对函数的调用与返回值 45
2.5.5 文档字符串 46
2.6 Python模块 47
2.6.1 认识Python模块 47
2.6.2 from…import详解 49
2.6.3 认识__name__属性 50
2.6.4 自定义模块 50
2.6.5 dir()函数 51
2.7 Python异常处理与文件操作 52
2.7.1 Python异常处理 52
2.7.2 异常的发生 55
2.7.3 try…finally的使用 56
2.7.4 文件操作 57
第3章 Python进阶 59
3.1 NumPy的使用 59
3.1.1 多维数组ndarray 59
3.1.2 ndarray的数据类型 60
3.1.3 数组索引、切片和赋值 61
3.1.4 基本的数组运算 62
3.1.5 随机数 63
3.2 Pandas的使用 67
3.2.1 Pandas的数据结构 68
3.2.2 Pandas输出设置 70
3.2.3 Pandas数据读取与写入 70
3.2.4 数据集快速描述性统计分析 71
3.2.5 根据已有的列建立新列 72
3.2.6 DataFrame按多列排序 73
3.2.7 DataFrame去重 73
3.2.8 删除已有的列 74
3.2.9 Pandas替换数据 75
3.2.10 DataFrame重命名 75
3.2.11 DataFrame切片与筛选 76
3.2.12 连续型变量分组 78
3.2.13 Pandas分组技术 79
3.3 SciPy的初步使用 83
3.3.1 回归分析 84
3.3.2 插值 87
3.3.3 正态性检验 89
3.3.4 凸优化 93
3.4 Matplotlib的使用 97
3.5 Seaborn的使用 97
3.5.1 主题管理 98
3.5.2 调色板 101
3.5.3 分布图 102
3.5.4 回归图 104
3.5.5 矩阵图 106
3.5.6 结构网格图 108
3.6 Scikit-Learn的初步使用 109
3.6.1 Scikit-Learn学习准备 110
3.6.2 常见的机器学习模型 111
3.6.3 模型评价方法——metric模块 120
3.6.4 深度学习 124
3.7 SQLAlchemy与常用数据库的连接 124
3.7.1 连接数据库 125
3.7.2 读取数据 126
3.7.3 存储数据 126
第4章 常用数据的获取与整理 129
4.1 金融数据类型 129
4.2 金融数据的获取 131
4.3 数据整理 135
4.3.1 数据整合 135
4.3.2 数据过滤 137
4.3.3 数据探索与数据清洗 138
4.3.4 数据转化 140
第5章 通联数据回测平台介绍 143
5.1 回测平台函数与参数介绍 144
5.1.1 设置回测参数 144
5.1.2 accounts账户配置 154
5.1.3 initialize（策略初始化环境） 160
5.1.4 handle_data（策略运行逻辑） 160
5.1.5 context（策略运行环境） 160
5.2 股票模板实例 168
5.3 期货模板实例 173
5.4 策略回测详情 179
5.5 策略的风险评价指标 181
5.6 策略交易细节 184
第6章 常用的量化策略及其实现 187
6.1 量化投资概述 187
6.1.1 量化投资简介 187
6.1.2 量化投资策略的类型 188
6.1.3 量化研究的流程 189
6.2 行业轮动理论及其投资策略 192
6.2.1 行业轮动理论简介 192
6.2.2 行业轮动的原因 192
6.2.3 行业轮动投资策略 194
6.3 市场中性Alpha策略 199
6.3.1 市场中性Alpha策略介绍 199
6.3.2 市场中性Alpha策略的思想和方法 200
6.3.3 实例展示 201
6.4 大师策略 206
6.4.1 麦克·欧希金斯绩优成分股投资法 207
6.4.2 杰拉尔丁·维斯蓝筹股投资法 211
6.5 CTA策略 219
6.5.1 趋势跟随策略 219
6.5.2 均值回复策略 241
6.5.3 CTA策略表现分析 253
6.6 Smart Beta 258
6.6.1 基于权重优化的Smart Beta 258
6.6.2 基于风险因子的Smart Beta 268
6.7 技术指标类策略 281
6.7.1 AROON指标 281
6.7.2 BOLL指标 285
6.7.3 CCI指标 288
6.7.4 CMO指标 293
6.7.5 Chaikin Oscillator指标 295
6.7.6 DMI指标 299
6.7.7 优矿平台因子汇总 302
6.8 资产配置 317
6.8.1 有效边界 318
6.8.2 Black-Litterman模型 335
6.8.3 风险平价模型 349
6.9 时间序列分析 358
6.9.1 与时间序列分析相关的基础知识 358
6.9.2 自回归（AR）模型 365
6.9.3 滑动平均（MA）模型 372
6.9.4 自回归滑动平均（ARMA）模型 376
6.9.5 自回归差分滑动平均（ARIMA）模型 379
6.10 组合优化器的使用 384
6.10.1 优化器的概念 384
6.10.2 优化器的API接口 386
6.10.3 优化器实例 388
6.11 期权策略：Greeks和隐含波动率微笑计算 392
6.11.1 数据准备 392
6.11.2 Greeks和隐含波动率计算 394
6.11.3 隐含波动率微笑 401
第7章 量化投资十问十答 405
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python与量化投资
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python 3爬虫、数据清洗与可视化实战
第1 章 Python 基础  1
1.1 安装Python 环境   1
1.1.1 Python 3.6.2 安装与配置  1
1.1.2 使用IDE 工具——PyCharm  4
1.1.3 使用IDE 工具——Anaconda  4
1.2 Python 操作入门   6
1.2.1 编写第一个Python 代码  6
1.2.2 Python 基本操作   9
1.2.3 变量   10
1.3 Python 数据类型   10
1.3.1 数字   10
1.3.2 字符串   11
1.3.3 列表   13
1.3.4 元组   14
1.3.5 集合   15
1.3.6 字典   15
1.4 Python 语句与函数   16
1.4.1 条件语句   16
1.4.2 循环语句   16
1.4.3 函数   17
第2 章 写一个简单的爬虫  18
2.1 关于爬虫的合法性   18
2.2 了解网页   20
2.2.1 认识网页结构   21
2.2.2 写一个简单的HTML   21
2.3 使用requests 库请求网站  23
2.3.1 安装requests 库   23
2.3.2 爬虫的基本原理   25
2.3.3 使用GET 方式抓取数据  26
2.3.4 使用POST 方式抓取数据  27
2.4 使用Beautiful Soup 解析网页  30
2.5 清洗和组织数据   34
2.6 爬虫攻防战   35
第3 章 用API 爬取天气预报数据  38
3.1 注册免费API 和阅读技术文档  38
3.2 获取API 数据   40
3.3 存储数据到MongoDB   45
3.3.1 下载并安装MongoDB  45
3.3.2 在PyCharm 中安装Mongo Plugin  46
3.3.3 将数据存入MongoDB  49
3.4 MongoDB 数据库查询   52
第4 章 大型爬虫案例：抓取某电商网站的商品数据  55
4.1 观察页面特征和解析数据   55
4.2 工作流程分析   64
4.3 构建类目树   65
4.4 获取产品列表   68
4.5 代码优化   70
4.6 爬虫效率优化   74
4.7 容错处理   77
第5 章 Scrapy 爬虫  78
5.1 Scrapy 简介   78
5.2 Scrapy 安装   79
5.3 案例：用Scrapy 抓取股票行情  80
第6 章 Selenium爬虫  88
6.1 Selenium 简介   88
6.2 案例：用Selenium 抓取电商网站数据  90
第7 章 数据库连接和查询  100
7.1 使用PyMySQL   100
7.1.1 连接数据库   100
7.1.2 案例：某电商网站女装行业TOP100 销量数据  102
7.2 使用SQLAlchemy   104
7.2.1 SQLAlchemy 基本介绍  104
7.2.2 SQLAlchemy 基本语法  105
7.3 MongoDB   107
7.3.1 MongoDB 基本语法  107
7.3.2 案例：在某电商网站搜索“连衣裙”的商品数据  107
第8 章 NumPy  109
8.1 NumPy 简介   109
8.2 一维数组   110
8.2.1 数组与列表的异同  110
8.2.2 数组的创建   111
8.3 多维数组   111
8.3.1 多维数组的高效性能  112
8.3.2 多维数组的索引与切片  113
8.3.3 多维数组的属性  113
8.4 数组的运算   115
第9 章 pandas 数据清洗  117
9.1 数据读写、选择、整理和描述  117
9.1.1 从CSV 中读取数据  119
9.1.2 向CSV 写入数据  120
9.1.3 数据选择   120
9.1.4 数据整理   122
9.1.5 数据描述   123
9.2 数据分组、分割、合并和变形  124
9.2.1 数据分组   124
9.2.2 数据分割   127
9.2.3 数据合并   128
9.2.4 数据变形   134
9.2.5 案例：旅游数据的分析与变形  136
9.3 缺失值、异常值和重复值处理  140
9.3.1 缺失值处理   140
9.3.2 检测和过滤异常值   144
9.3.3 移除重复数据   147
9.3.4 案例：旅游数据的值检查与处理  149
9.4 时序数据处理   152
9.4.1 日期/时间数据转换  152
9.4.2 时序数据基础操作   153
9.4.3 案例：天气数据分析与处理  155
9.5 数据类型转换   158
9.6 正则表达式   160
9.6.1 元字符与限定符   161
9.6.2 案例：用正则表达式提取网页文本信息  162
第10 章 综合应用实例  164
10.1 按性价比给用户推荐旅游产品  164
10.1.1 数据采集   165
10.1.2 数据清洗、建模  169
10.2 通过热力图分析为用户提供出行建议  172
10.2.1 某旅游网站热门景点爬虫代码（qunaer_sights.py）  175
10.2.2 提取CSV 文件中经纬度和销量信息  178
10.2.3 创建景点门票销量热力地图HTML 文件  179
第11 章 数据可视化  182
11.1 matplotlib   183
11.1.1 画出各省份平均价格、各省份平均成交量柱状图  183
11.1.2 画出各省份平均成交量折线图、柱状图、箱形图和饼图  184
11.1.3 画出价格与成交量的散点图  185
11.2 pyecharts   186
11.2.1 Echarts 简介   186
11.2.2 pyecharts 简介   187
11.2.3 初识pyecharts，玫瑰相送  187
11.2.4 pyecharts 基本语法  188
11.2.5 基于商业分析的pyecharts 图表绘制  190
11.2.6 使用pyecharts 绘制其他图表  199
11.2.7 pyecharts 和Jupyter   203
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python 3爬虫、数据清洗与可视化实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python程序设计教程
第1章 Python起步走 1
1.1　认识Python 2
1.1.1　Python 3的诞生 2
1.1.2　从Python 3.0到3.5 3
1.1.3　初识Python的社区资源 5
1.2　建立Python环境 6
1.2.1　Python的实现 6
1.2.2　下载与安装Python 3.5 8
1.2.3　认识安装的内容 10
1.3　重点复习 12
第2章 从REPL到IDE 14
2.1　从 'Hello World' 开始 15
2.1.1　使用REPL 15
2.1.2　编写Python源码 18
2.1.3　哈啰！世界！ 20
2.2　初识模块与软件包 23
2.2.1　模块简介 23
2.2.2　设置PYTHONPATH 25
2.2.3　使用软件包管理模块 27
2.2.4　使用import as与from import 28
2.3　使用IDE 29
2.3.1　下载、安装PyCharm 29
2.3.2　IDE项目管理基础 31
2.4　重点复习 35
第3章 类型与运算符 36
3.1　内建类型 37
3.1.1　数值类型 37
3.1.2　字符串类型 39
3.1.3　群集类型 45
3.2　变量与运算符 50
3.2.1　变量 50
3.2.2　加减乘除运算 52
3.2.3　比较与赋值运算 56
3.2.4　逻辑运算 57
3.2.5　位运算 58
3.2.6　索引切片运算 60
3.3　重点复习 62
课后练习 64
第4章 流程语句与函数 65
4.1　流程语句 66
4.1.1　if分支判断 66
4.1.2　while循环 68
4.1.3　for in迭代 70
4.1.4　pass、break、continue 72
4.1.5　for Comprehension 72
4.2　定义函数 74
4.2.1　使用def定义函数 75
4.2.2　参数与自变量 76
4.2.3　一级函数的运用 79
4.2.4　lambda表达式 83
4.2.5　初探变量作用域 84
4.2.6　yield与yield from 87
4.3　重点复习 90
课后练习 91
第5章 从模块到类 93
5.1　模块管理 94
5.1.1　用模块建立抽象层 94
5.1.2　管理模块名称 96
5.1.3　设置PTH文件 99
5.2　初识面向对象 101
5.2.1　定义类 101
5.2.2　定义方法 102
5.2.3　定义内部属性 105
5.2.4　定义外部属性 106
5.3　类语法的细节 108
5.3.1　绑定与未绑定方法 108
5.3.2　静态方法与类方法 110
5.3.3　属性命名空间 111
5.3.4　定义运算符 114
5.3.5　__new__()、__init__()与__del__() 116
5.4　重点复习 118
课后练习 120
第6章 类的继承 121
6.1　何谓继承 122
6.1.1　继承共同行为 122
6.1.2　鸭子类型 124
6.1.3　重新定义方法 125
6.1.4　定义抽象方法 126
6.2　继承语法的细节 128
6.2.1　初识object与super() 128
6.2.2　Rich comparison方法 130
6.2.3　使用enum枚举 132
6.2.4　多重继承 134
6.2.5　创建ABC（抽象基类） 136
6.2.6　探讨super() 138
6.3　文档与软件包资源 141
6.3.1　DocStrings 142
6.3.2　查询官方文档 145
6.3.3　PyPI与pip 146
6.4　重点复习 147
课后练习 148
第7章 例外处理 149
7.1　语法与继承结构 150
7.1.1　使用try、except 150
7.1.2　例外继承结构 153
7.1.3　引发（raise）例外 155
7.1.4　Python例外风格 159
7.1.5　认识堆栈追踪 160
7.1.6　提出警告信息 163
7.2　例外与资源管理 165
7.2.1　使用else、finally 165
7.2.2　使用with as 167
7.2.3　实现上下文管理器 169
7.3　重点复习 172
课后练习 173
第8章 open()与io模块 175
8.1　使用open()函数 176
8.1.1　file与mode参数 176
8.1.2　buffering、encoding、errors、newlines参数 180
8.1.3　stdin、stdout、stderr 181
8.2　高级文件处理 183
8.2.1　认识文件描述符 183
8.2.2　认识io模块 185
8.3　重点复习 188
课后练习 189
第9章 数据结构 190
9.1　hashable、iterable与orderable 191
9.1.1　hashable协议 191
9.1.2　iterable协议 193
9.1.3　orderable协议 196
9.2　高级群集处理 199
9.2.1　认识群集结构 199
9.2.2　使用collection模块 201
9.2.3　__getitem__()、__setitem__()、__delitem__() 208
9.2.4　使用collection.abc模块 209
9.2.5　UserList、UserDict、UserString类 211
9.3　重点复习 211
课后练习 213
第10章 数据持续性与交换 214
10.1 对象序列化 215
10.1.1 使用 pickle 模块 215
10.1.2 使用 shelve 模块 217
10.2 数据库的处理 219
10.2.1 认识 DB-API 2.0 219
10.2.2 使用sqlite3模块 220
10.2.3 参数化 SQL 语句 222
10.2.4 简介交易 223
10.3 数据交换格式 227
10.3.1 CSV 227
10.3.2 JSON 231
10.3.3 XML 235
10.4 重点复习 239
课后练习 240
第11章 常用内建模块 241
11.1　日期与时间 242
11.1.1　时间的度量 242
11.1.2　年历与时区简介 243
11.1.3　使用time模块 245
11.1.4　使用datetime模块 247
11.2　日志 251
11.2.1　简介Logger 251
11.2.2　使用Handler、Formatter与Filter 253
11.2.3　使用logging.config 255
11.3　正则表达式 258
11.3.1　正则表达式简介 258
11.3.2　Pattern与Match对象 263
11.4　文件与目录 266
11.4.1　使用os模块 266
11.4.2　使用os.path模块 268
11.4.3　使用glob模块 270
11.5　重点复习 272
课后练习 273
第12章 调试、测试与性能 274
12.1　调试 275
12.1.1　认识Debugger 275
12.1.2　使用pdb模块 277
12.2　测试 281
12.2.1　使用assert断言 281
12.2.2　编写doctest 283
12.2.3　使用unittest单元测试 286
12.3　性能 288
12.3.1　timeit模块 288
12.3.2　使用cProfile（profile） 290
12.4　重点复习 292
课后练习 293
第13章 并发与并行 294
13.1　并发 295
13.1.1　线程简介 295
13.1.2　线程的启动与停止 297
13.1.3　竞争、锁定、死锁 300
13.1.4　等待与通知 303
13.2　并行 307
13.2.1　使用subprocess模块 307
13.2.2　使用multiprocessing模块 309
13.3　重点复习 312
课后练习 313
第14章 高级主题 314
14.1　属性控制 315
14.1.1　描述器 315
14.1.2　定义__slots__ 318
14.1.3 __getattribute__()、__getattr__()、__setattr__()、__delattr__() 320
14.2　装饰器 321
14.2.1　函数装饰器 321
14.2.2　类装饰器 324
14.2.3　方法装饰器 327
14.3　Meta类 328
14.3.1　认识type类 328
14.3.2　指定metaclass 330
14.3.3　__abstractmethods__ 332
14.4　相对导入 333
14.5　重点复习 335
课后练习 336
附录A venv 337
附录B Django简介 339
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python程序设计教程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>python与数据挖掘
前言
第一部分　基础篇
第1章　数据挖掘概述 2
1.1　数据挖掘简介 2
1.2　工具简介 3
1.2.1　WEKA 3
1.2.2　RapidMiner 4
1.2.3　Python 5
1.2.4　R 5
1.3　Python开发环境的搭建 6
1.3.1　Python安装 6
1.3.2　Python初识 11
1.3.3　与读者的约定 14
1.4　小结 15
第2章　Python基础入门 16
2.1　常用操作符 16
2.1.1　算术操作符 17
2.1.2　赋值操作符 17
2.1.3　比较操作符 18
2.1.4　逻辑操作符 18
2.1.5　操作符优先级 18
2.2　数字数据 19
2.2.1　变量与赋值 19
2.2.2　数字数据类型 20
2.3　流程控制 20
2.3.1　if语句 21
2.3.2　while循环 23
2.3.3　for循环 25
2.4　数据结构 27
2.4.1　列表 28
2.4.2　字符串 31
2.4.3　元组 35
2.4.4　字典 36
2.4.5　集合 39
2.5　文件的读写 40
2.5.1　改变工作目录 40
2.5.2　txt文件读取 41
2.5.3　csv文件读取 42
2.5.4　文件输出 43
2.5.5　使用JSON处理数据 43
2.6　上机实验 44
第3章　函数 47
3.1　创建函数 48
3.2　函数参数 50
3.3　可变对象与不可变对象 52
3.4　作用域 53
3.5　上机实验 55
第4章　面向对象编程 56
4.1　简介 56
4.2　类与对象 58
4.3　__init__方法 59
4.4　对象的方法 61
4.5　继承 65
4.6　上机实验 68
第5章　Python实用模块 69
5.1　什么是模块 69
5.2　NumPy 70
5.3　Pandas 75
5.4　SciPy 81
5.5　scikit-learn 84
5.6　其他Python常用模块 87
5.7　小结 88
5.8　上机实验 88
第6章　图表绘制入门 89
6.1　Matplotlib 89
6.2　Bokeh 94
6.3　其他优秀的绘图模块 97
6.4　小结 97
6.5　上机实验 97
第二部分　建模应用篇
第7章　分类与预测 100
7.1　回归分析 100
7.1.1　线性回归 101
7.1.2　逻辑回归 104
7.2　决策树 107
7.2.1　ID3算法 107
7.2.2　其他树模型 111
7.3　人工神经网络 113
7.4　kNN算法 122
7.5　朴素贝叶斯分类算法 124
7.6　小结 127
7.7　上机实验 127
第8章　聚类分析建模 129
8.1　K-Means聚类分析函数 129
8.2　系统聚类算法 133
8.3　DBSCAN聚类算法 138
8.4　上机实验 142
第9章　关联规则分析 144
9.1　Apriori关联规则算法 145
9.2　Apriori在Python中的实现 146
9.3　小结 149
9.4　上机实验 149
第10章　智能推荐 151
10.1　基于用户的协同过滤算法 152
10.2　基于用户的协同过滤算法在Python中的实现 154
10.3　小结 157
10.4　上机实验 157
第11章　时间序列分析 159
11.1　ARIMA模型 159
11.2　小结 171
11.3　上机实验 172
参考文献 174
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>python与数据挖掘
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>机器人Python青少年编程开发实例
第1章  打开极客之门    1
1.1  TurnipBit是什么    1
1.2  从拼插编程开始    1
1.3  做个真正的程序员    4
1.3.1  什么是Python    4
1.3.2  面向硬件的MicroPython    5
1.3.3  支持MicroPython的开发板    6
1.3.4  利用TurnipBit进行编程学习    9
第2章  滚动的广告牌    12
2.1  滚动的“Hello World!”    12
2.2  动手进行拼插编程    12
2.2.1  实现滚动显示“Hello World!”    12
2.2.2  实现循环滚动显示“Hello World!”    16
2.3  动手画流程图    18
2.3.1  流程图是什么    18
2.3.2  画出“Hello World!”的流程图    19
2.4  知识要点    20
2.4.1  拼插编程    20
2.4.2  代码编程    21
第3章  倒计时    22
3.1  神奇的计时器    22
3.2  让TurnipBit显示数字    23
3.2.1  实现滚动显示数字    23
3.2.2  显示静态数字    24
3.2.3  有趣的数字    28
3.3  动手制作倒计时器    33
3.3.1 “倒计时器”程序流程图    33
3.3.2  睡眠1000毫秒    33
3.3.3  完成“倒计时器”    34
3.4  知识要点    35
3.4.1  拼插编程    35
3.4.2  代码编程    35
第4章  方便的加法计算器    36
4.1  DIY加法计算器    36
4.2  变量及其类型    36
4.2.1  变量    36
4.2.2  变量的命名    38
4.2.3  变量的类型    39
4.2.4  数据类型操作    40
4.3  动手制作加法计算器    41
4.3.1  加法计算器流程图    41
4.3.2  加法计算器的实现    42
4.4  知识要点    45
4.4.1  拼插编程    45
4.4.2  代码编程    45
第5章  会走的机器人    46
5.1  机器人是怎么走的    46
5.2  循环转圈圈    46
5.2.1  for循环    47
5.2.2  while循环    48
5.2.3  continue和break    48
5.3  画一个会走的机器人    49
5.3.1  使用“创建图像”拼画一个静止的机器人    49
5.3.2  使用“创建图像”让机器人动起来    52
5.3.3  让机器人一直走下去    54
5.3.4  画出会走的机器人的流程图    56
5.4  知识要点    58
5.4.1  拼插编程    58
5.4.2  代码编程    58
第6章  好玩的掷骰子游戏    59
6.1  掷骰子游戏    59
6.2  学会做选择题    59
6.2.1  逻辑运算    60
6.2.2  if判断语句    61
6.3  实现掷骰子游戏    63
6.3.1 绘制流程图    63
6.3.2  拼插编程实现掷骰子游戏    65
6.4  代码分析    70
6.4.1  基本原理    70
6.4.2  逻辑分析    70
6.5  知识要点    71
6.5.1  拼插编程    71
6.5.2  代码编程    71
第7章  无线投票器    72
7.1  制作无线投票器    72
7.2  准备知识    73
7.2.1  函数    73
7.2.2  TurnipBit无线模块的使用    75
7.3  动手制作无线投票器    78
7.3.1  无线投票器流程图设计    78
7.3.2  无线投票器程序实现    80
7.3.3  分享代码    87
7.4  知识要点    88
7.4.1  拼插编程    88
7.4.2  代码编程    89
第8章  指南针    90
8.1  制作指南针    90
8.2  确定南方在哪里    91
8.2.1  学会使用指南针    91
8.2.2  显示每个方向的指南针    94
8.3  指南针流程图    96
8.3.1  指南针的模糊概念    96
8.3.2  绘制流程图    96
8.4  知识要点    98
8.4.1  拼插编程    98
8.4.2  代码编程    98
第9章  简易的MP3播放器    99
9.1  如何播放美妙的音乐    99
9.2  播放音乐    100
9.2.1  一首音乐循环播放    100
9.2.2  TurnipBit音乐播放器拼插编程    103
9.2.3  音乐播放器代码分析    111
9.3  TurnipBit播放自定义音乐    113
9.3.1  TurnipBit播放音乐的方法    113
9.3.2  播放自定义音乐实例    115
9.3.3  播放自定义音乐代码分析    116
9.4  知识要点    117
9.4.1  拼插编程    117
9.4.2  代码编程    117
第10章  储钱罐    118
10.1  DIY储钱罐    118
10.2  绘制储钱罐流程图    118
10.3  动手进行拼插编程    120
10.3.1  实现储钱罐    120
10.3.2  进阶实现    126
10.4  代码分析    127
10.4.1  基本原理    127
10.4.2  逻辑分析    127
10.5  知识要点    127
10.5.1  拼插编程    127
10.5.2  代码编程    128
第11章  带小夜灯的电子时钟    129
11.1  制作带小夜灯的电子时钟    129
11.2  基础知识    130
11.2.1  电阻    130
11.2.2  光敏电阻    133
11.2.3  LED    134
11.2.4  TurnipBit扩展板    135
11.3  线路设计    136
11.3.1  光敏电阻的使用    136
11.3.2  DS3231的连接    136
11.3.3  器件的连接    137
11.4  程序设计    138
11.4.1  引脚的使用    138
11.4.2  光敏电阻光线临界值的测量    139
11.4.3  DS3231模块的代码    140
11.4.4  时钟对时代码    143
11.4.5  带小夜灯的电子时钟的代码实现    147
11.5  外壳组装    151
11.6  知识要点    152
11.6.1  拼插编程    152
11.6.2  代码编程    153
第12章  会思考的避障车    154
12.1  什么是会思考的避障车    154
12.2  基础知识    155
12.2.1  电机    155
12.2.2  超声波传感器    159
12.3  避障车的组装    160
12.3.1  硬件器件    160
12.3.2  硬件安装步骤    163
12.3.3  电机驱动模块和超声波模块的安装    166
12.4  程序设计    168
12.4.1  伪代码分析    168
12.4.2  拼插编程    169
12.4.3  代码分析    173
12.5  知识要点    176
12.5.1  拼插编程    176
12.5.2  代码编程    176
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>机器人Python青少年编程开发实例
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据分析入门：从数据获取到可视化
1  准备  1
1.1  开发环境搭建  2
1.1.1  在Ubuntu系统下搭建Python集成开发环境  2
1.1.2  在Windows系统下搭建Python集成开发环境  13
1.1.3  三种安装第三方库的方法  16
1.2  Python基础语法介绍  19
1.2.1  if__name__=='__main__'  20
1.2.2  列表解析式  22
1.2.3  装饰器  23
1.2.4  递归函数  26
1.2.5  面向对象  27
1.3  The Zen of Python  28
参考文献  30
2  数据的获取  31
2.1  爬虫简介  31
2.2  数据抓取实践  33
2.2.1  请求网页数据  33
2.2.2  网页解析  38
2.2.3  数据的存储  46
2.3  爬虫进阶  50
2.3.1  异常处理  50
2.3.2  robots.txt  58
2.3.3  动态UA  60
2.3.4  代理IP  61
2.3.5  编码检测  61
2.3.6  正则表达式入门  63
2.3.7  模拟登录  69
2.3.8  验证码问题  74
2.3.9  动态加载内容的获取  84
2.3.10 多线程与多进程  93
2.4  爬虫总结  101
参考文献  102
3  数据的存取与清洗  103
3.1  数据存取  103
3.1.1  基本文件操作  103
3.1.2  CSV文件的存取  111
3.1.3  JSON文件的存取  116
3.1.4  XLSX文件的存取  121
3.1.5  MySQL数据库文件的存取  137
3.2  NumPy  145
3.2.1  NumPy简介  145
3.2.2  NumPy基本操作  146
3.3  pandas  158
3.3.1  pandas简介  158
3.3.2  Series与DataFrame的使用  159
3.3.3  布尔值数组与函数应用  169
3.4  数据的清洗  174
3.4.1  编码问题  174
3.4.2  缺失值的检测与处理  175
3.4.3  去除异常值  181
3.4.4  去除重复值与冗余信息  183
3.4.5  注意事项  185
参考文献  187
4  数据的分析及可视化  188
4.1  探索性数据分析  189
4.1.1  基本流程  189
4.1.2  数据降维  197
4.2  机器学习入门  199
4.2.1  机器学习简介  200
4.2.2  决策树——机器学习算法的应用  202
4.3  手动实现KNN算法  205
4.3.1  特例——最邻近分类器  205
4.3.2  KNN算法的完整实现  213
4.4  数据可视化  215
4.4.1  高质量作图工具——matplotlib  215
4.4.2  快速作图工具——pandas与matplotlib  223
4.4.3  简捷作图工具——seaborn与matplotlib  226
4.4.4  词云图  230
参考文献  232
5  Python与生活  234
5.1  定制一个新闻提醒服务  234
5.1.1  新闻数据的抓取  235
5.1.2  实现邮件发送功能  237
5.1.3  定时执行及本地日志记录  239
5.2  Python与数学  241
5.2.1  估计π值  242
5.2.2  三门问题  245
5.2.3  解决LP与QP问题（选读）  247
5.3  QQ群聊天记录数据分析  251
参考文献  256
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据分析入门：从数据获取到可视化
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>21天学通Python（第2版）
第1章  编程与Python
1.1  什么是编程
1.1.1  硬件与软件
1.1.2  编程语言
1.1.3  编程与调试
1.2  选择Python的理由
1.2.1  Python是免费的自由软件
1.2.2  Python是跨平台的
1.2.3  Python功能强大
1.2.4  Python清晰优雅
1.3  安装Python
1.3.1  在Windows 下安装Python
1.3.2  在Linux下安装Python
1.4  选择开发工具
1.4.1  Python自带开发工具：IDLE
1.4.2  文本编辑器：Emacs
1.4.3  Python开发工具：PythonWin
1.5  编辑和运行Python程序
1.5.1  你好，Python
1.5.2  运行程序文件
1.5.3  交互式运行Python
1.6  小结
1.7  本章习题
第2章  Python起步
2.1  Python语法基础
2.1.1  缩进分层
2.1.2  代码注释
2.1.3  断行
2.2  Python输入/输出
2.2.1  接收键盘/输入
2.2.2  显示处理结果
2.3  用Python计算
2.3.1  算式与代数式运算
2.3.2  惊奇
2.4  小结
2.5  本章习题
第3章  Python数据类型
3.1  Python简单数据类型
3.1.1  字符串（str）
3.1.2  整数（int）
3.1.3  浮点数（float）
3.1.4  类型转换
3.2  字符串进阶
3.2.1  原始字符串
3.2.2  格式化字符串
3.2.3  中文字符串处理
3.3  标志符与赋值号
3.3.1  标志符
3.3.2  赋值号“＝”
3.4  Python结构数据类型
3.4.1  列表（list）
3.4.2  元组（tuple）
3.4.3  字典（dict）
3.5  内置常量与逻辑运算符、比较运算符
3.5.1  常用内置常量
3.5.2  Python中逻辑运算符
3.5.3  Python中比较运算符
3.5.4  Python中其他逻辑操作符
3.6  序列
3.6.1  序列切片
3.6.2  序列内置操作
3.7  小结
3.8  本章习题
第４章  控制语句执行流程
4.1  用if选择执行语句
4.1.1  if基础
4.1.2  if语句的嵌套
4.2  用for循环执行语句
4.2.1  for基础
4.2.2  for语句与break语句、continue语句
4.2.3  for语句与range()函数
4.2.4  for语句与内置迭代函数
4.3  用while循环执行语句
4.3.1  while基础
4.3.2  增量赋值运算符
4.4  推导或内涵（list comprehension）
4.4.1  推导基础
4.4.2  推导进阶
4.5  小结
4.6  本章习题
第5章  自定义功能单元（一）
5.1  使用函数
5.1.1  声明函数
5.1.2  调用函数
5.2  深入函数
5.2.1  默认值参数
5.2.2  参数传递
5.2.3  可变数量参数传递
5.2.4  拆解序列的函数调用
5.2.5  函数调用时参数的传递方法
5.3  变量的作用域
5.4  使用匿名函数（lambda）
5.5  Python常用内建函数
5.6  小结
5.7  本章习题
第6章  自定义功能单元（二）
6.1  面向对象编程概述
6.1.1  万物皆对象
6.1.2  对象优越性
6.1.3  类和对象
6.2  定义和使用类
6.2.1  定义类
6.2.2  使用类
6.3  类的属性和方法
6.3.1  类的方法
6.3.2  类的属性
6.3.3  类成员方法与静态方法
6.4  类的继承
6.4.1  类的继承
6.4.2  多重继承
6.4.3  方法重载
6.5  小结
6.6  本章习题
第7章  错误、异常和程序调试
7.1  语法错误
7.2  异常的处理
7.2.1  异常处理的基本语法
7.2.2  Python主要的内置异常及其处理
7.3  手工抛出异常
7.3.1  用raise手工抛出异常
7.3.2  assert语句
7.3.3  自定义异常类
7.4  用pdb调试程序
7.4.1  调试语句块函数
7.4.2  调试函数
7.5  测试程序
7.5.1  用testmod函数测试
7.5.2  用testfile函数测试
7.6  小结
7.7  本章习题
第2篇  Python编程高阶
第8章  复杂程序组织
8.1  模块
8.1.1  模块概述
8.1.2  自己编写模块
8.1.3  模块位置
8.1.4  __pycache__目录
8.1.5  具有独立运行能力的模块
8.2  包
8.2.1  包概述
8.2.2  包详解
8.3  Python常用标准库简介
8.3.1  数学类模块
8.3.2  日期与时间类
8.4  小结
8.5  本章习题
第9章  迭代器、生成器与装饰器
9.1  迭代器
9.1.1  迭代器概述
9.1.2  自定义迭代器
9.1.3  内置迭代器工具
9.2  生成器
9.2.1  生成器创建
9.2.2  深入生成器
9.2.3  生成器与协程
9.3  装饰器
9.3.1  装饰器概述
9.3.2  装饰函数
9.3.3  装饰类
9.4  小结
9.5  本章习题
第10章  Python进阶话题
10.1  函数与命名空间
10.2  闭包及其应用
10.2.1  闭包概述
10.2.2  闭包与延迟求值
10.2.3  闭包与泛型函数
10.3  上下文管理器
10.4  用字符串操作对象属性
10.5  用字典构造分支程序
10.6  重载类的特殊方法
10.7  鸭子类型（duck typing）与多态
10.8  小结
10.9  本章习题
第11章  文件与文件系统
11.1  文件操作基础
11.1.1  open()函数
11.1.2  用fileinput操作文件
11.2  常用文件和目录操作
11.2.1  获得当前路径
11.2.2  获得目录中的内容
11.2.3  创建目录
11.2.4  删除目录
11.2.5  判断是否是目录
11.2.6  判断是否为文件
11.2.7  遍历某目录下的所有文件和目录
11.2.8  由文件名批量获取姓名和考号
11.2.9  批量文件重命名
11.3  编译为可执行文件
11.3.1  用py2exe生成可执行程序
11.3.2  用cx_freeze生成可执行文件
11.4  小结
11.5  本章习题
第12章  基于tkinter的GUI编程
12.1  GUI概述
12.1.1  GUI是什么
12.1.2  Python编写GUI程序库
12.2  tkinter图形化库简介
12.2.1  创建GUI程序第一步
12.2.2  创建GUI程序第二步
12.3  tkinter组件
12.3.1  组件分类
12.3.2  布局组件
12.4  常用tkinter组件
12.4.1  按钮
12.4.2  文本框
12.4.3  标签
12.4.4  菜单
12.4.5  单选框和复选框
12.4.6  绘制图形
12.5  响应操作事件
12.5.1  事件基础
12.5.2  响应事件
12.6  对话框
12.6.1  标准对话框
12.6.2  自定义对话框
12.7  小结
12.8  本章习题
第13章  正则表达式
13.1  正则表达式基础
13.1.1  正则表达式概述
13.1.2  正则表达式基本元字符
13.1.3  常用正则表达式
13.2  re模块
13.2.1  正则匹配搜索函数
13.2.2  sub()与subn()函数
13.2.3  split()函数
13.2.4  正则表达式对象
13.3  分组匹配与匹配对象使用
13.3.1  分组基础
13.3.2  分组扩展
13.3.3  匹配对象与组的使用
13.3.4  匹配对象与索引使用
13.4  正则表达式应用示例
13.5  小结
13.6  本章习题
第14章  网络编程
14.1  网络编程基础
14.1.1  什么是网络
14.1.2  网络协议
14.1.3  地址与端口
14.2  套接字的使用
14.2.1  用socket建立服务器端程序
14.2.2  用socket建立客户端程序
14.2.3  用socket建立基于UDP协议的服务器与客户端程序
14.2.4  用socketserver模块建立服务器
14.3  urllib与http包使用
14.3.1  urllib和http包简介
14.3.2  用urllib和http包访问网站
14.4  用poplib与smtplib库收发邮件
14.4.1  用poplib检查邮件
14.4.2  用smtplib发送邮件
14.5  用ftplib访问FTP服务
14.5.1  ftplib模块简介
14.5.2  使用Python访问FTP
14.6  小结
14.7  本章习题
第15章  线程和进程
15.1  线程
15.1.1  用threading.Thread直接在线程中运行函数
15.1.2  通过继承threading.Thread类来创建线程
15.1.3  线程类Thread使用
15.2  进程
15.2.1  进程基础
15.2.2  用Popen类创建进程
15.3  小结
15.4  本章习题
第16章  数据库编程
16.1  Python数据库应用程序接口
16.1.1  数据库应用程序接口概述
16.1.2  数据库游标的使用
16.2  Python操作SQLite3数据库
16.2.1  SQLite3数据库简介
16.2.2  SQLite3数据库操作实例
16.3  Python操作MariaDB数据库
16.3.1  MariaDB数据库简介
16.3.2  建立MariaDB数据库操作环境
16.3.3  MariaDB数据库操作实例
16.4  Python操作MongoDB数据库
16.4.1  MongoDB数据库简介
16.4.2  建立MongoDB数据库操作环境
16.4.3  MongoDB数据库基础
16.4.4  MongoDB数据库操作实例
16.4.5  用对象关系映射（ORM）工具操作MongoDB数据库
16.5  小结
16.6  本章习题
第17章  Web网站编程
17.1  Web网站编程概述
17.2  Flask Web框架及其应用
17.2.1  Flask Web框架简介
17.2.2  Flask Web框架初识
17.2.3  URL装饰器与URL参数传递
17.2.4  GET与POST请求的参数传递
17.2.5  使用cookie与session跟踪客户
17.2.6  使用静态文件资源与页面文件
17.2.7  接收上传文件
17.2.8  在Flask框架中使用数据库
17.3  Tornado Web框架及其应用
17.3.1  Tornado框架简介
17.3.2  Tornado框架初识
17.3.3  请求参数的获取
17.3.4  用cookie与安全cookie跟踪客户
17.3.5  URL转向与静态文件资源
17.3.6  Tornado Web框架应用举例
17.4  小结
17.5  本章习题
第18章  数据结构基础
18.1  表、栈和队列
18.1.1  用列表来创建表
18.1.2  自定义栈数据结构
18.1.3  实现队列功能
18.2  树和图
18.2.1  用列表构建树
18.2.2  实现二叉树类与遍历二叉树
18.2.3  用字典构建与搜索图
18.3  查找与排序
18.3.1  实现二分查找
18.3.2  用二叉树排序
18.4  小结
18.5  本章习题
第19章  用Pillow库处理图片
19.1  第三方Pillow库概述
19.1.1  安装第三方Pillow库
19.1.2  Pillow库简介
19.1.3  Pillow库处理图像基础
19.1.4  Image模块中函数的使用
19.1.5  Image模块中Image类的使用
19.1.6  使用ImageChops模块进行图片合成
19.1.7  使用ImageEnhance模块增强图像效果
19.1.8  使用ImageFilter模块的滤镜
19.1.9  使用ImageDraw模块画图
19.2  使用Pillow库处理图片举例
19.2.1  图片格式转换
19.2.2  批量生成缩略图
19.2.3  为图片添加Logo
19.3  小结
19.4  本章习题
第3篇  Python编程实战
第20章  案例1  做一个Windows上的360工具
20.1  案例背景
20.2  从创建图形化界面开始
20.2.1  创建基本图形化工作界面
20.2.2  响应菜单事件
20.3  清理垃圾文件
20.3.1  迭代目录
20.3.2  扫描垃圾文件
20.3.3  多线程加速
20.3.4  扫描所有磁盘
20.3.5  删除垃圾文件
20.4  搜索文件
20.4.1  搜索超大文件
20.4.2  按名称搜索文件
20.5  小结
第21章  案例2  Python搞定大数据
21.1  案例背景
21.1.1  大数据处理方式概述
21.1.2  处理日志文件
21.1.3  要实现的案例目标
21.2  分割日志文件
21.3  用Map函数处理小文件
21.4  用Reduce函数归集数据
21.5  小结
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>21天学通Python（第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据分析从入门到精通
第1篇  Python数据分析语法入门
第1章  初识Python	1
1.1  Python是什么	2
1.2  Python有什么优点	3
1.2.1  Python是自由开源的软件	3
1.2.2  Python是跨平台的	3
1.2.3  Python功能强大	4
1.2.4  Python是可扩展的	4
1.2.5  Python易学易用	5
1.3  其他程序设计语言中的Python	5
1.3.1  Jython	5
1.3.2  Python for .NET	6
1.3.3  IronPython	6
1.4  快速搭建Python开发环境	7
1.4.1  Python的下载和安装	7
1.4.2  用Visual Studio编译Python源代码	9
1.4.3  Python开发工具：Vim	10
1.4.4  Python开发工具：Emacs	15
1.4.5  Python开发工具：PythonWin	18
1.4.6  其他的Python开发工具	20
1.5  第一个Python程序	22
1.5.1  从“Hello, Python!”开始	22
1.5.2  Python的交互式命令行	24
1.6  本章小结	25
第2章  Python起步必备	27
2.1  Python代码的组织形式和注释方式	27
2.1.1  用缩进来分层	28
2.1.2  代码的两种注释方式	29
2.1.3  Python语句的断行	30
2.2  Python的基本输入/输出函数	31
2.2.1  接收输入的input()函数	31
2.2.2  输出内容的print()函数	32
2.3  Python对中文的支持	33
2.3.1  Python 3之前的版本如何使用中文	33
2.3.2  更全面的中文支持	36
2.4  简单实用的Python计算器	37
2.4.1  直接进行算术运算	37
2.4.2  math模块提供丰富的数学函数	38
2.4.3  Python对大整数的支持	39
2.5  本章小结	40
第3章  Python的数据类型与流程控制语句	41
3.1  Python数据类型：数字	42
3.1.1  整型和浮点型	42
3.1.2  运算符	43
3.2  Python数据类型：字符串	45
3.2.1  Python中的字符串	45
3.2.2  字符串中的转义字符	46
3.2.3  操作字符串	46
3.2.4  字符串的索引和分片	49
3.2.5  格式化字符串	50
3.2.6  字符串、数字类型的转换	50
3.2.7  原始字符串	51
3.3  Python数据类型：列表和元组	52
3.3.1  创建和操作列表	52
3.3.2  创建和操作元组	53
3.4  Python数据类型：字典	54
3.5  Python数据类型：文件	55
3.6  Python数据类型：布尔值	56
3.7  Python的流程控制语句	56
3.7.1  分支结构：if语句	57
3.7.2  循环结构：for语句	59
3.7.3  循环结构：while语句	62
3.8  本章小结	63
第4章  可复用的函数与模块	64
4.1  Python自定义函数	65
4.1.1  函数的定义	65
4.1.2  函数调用	66
4.2  参数让函数更有价值	67
4.2.1  有默认值的参数	67
4.2.2  参数的传递方式	69
4.2.3  如何传递任意数量的参数	70
4.2.4  用参数返回计算结果	70
4.3  变量的作用域	71
4.4  最简单的函数：使用lambda表达式定义函数	72
4.5  可重用结构：Python模块	73
4.5.1  Python模块的基本用法	73
4.5.2  Python在哪里查找模块	75
4.5.3  是否需要编译模块	77
4.5.4  模块也可独立运行	78
4.5.5  如何查看模块提供的函数名	79
4.6  用包来管理多个模块	80
4.6.1  包的组成	80
4.6.2  包的内部引用	81
4.7  本章小结	81
第5章  数据结构与算法	82
5.1  表、栈和队列	82
5.1.1  表	83
5.1.2  栈	84
5.1.3  队列	86
5.2  树和图	88
5.2.1  树	88
5.2.2  二叉树	89
5.2.3  图	93
5.3  查找与排序	95
5.3.1  查找	96
5.3.2  排序	97
5.4  本章小结	100
第6章  面向对象的Python	101
6.1  面向对象编程概述	101
6.1.1  Python中的面向对象思想	102
6.1.2  类和对象	102
6.2  在Python中定义和使用类	103
6.2.1  类的定义	104
6.2.2  类的使用	105
6.3  类的属性和方法	106
6.3.1  类的属性	107
6.3.2  类的方法	108
6.4  类的继承	111
6.4.1  使用继承	111
6.4.2  Python的多重继承	112
6.5  在类中重载方法和运算符	114
6.5.1  方法重载	114
6.5.2  运算符重载	115
6.6  在模块中定义类	117
6.7  本章小结	119
第7章  异常处理与程序调试	120
7.1  异常的处理	120
7.1.1  使用try语句捕获异常	121
7.1.2  常见异常的处理	123
7.1.3  多重异常的捕获	124
7.2  用代码引发异常	125
7.2.1  使用raise语句引发异常	126
7.2.2  assert——简化的raise语句	127
7.2.3  自定义异常类	128
7.3  使用pdb模块调试Python脚本	128
7.3.1  调试语句块	129
7.3.2  调试表达式	129
7.3.3  调试函数	130
7.3.4  设置断点	131
7.3.5  pdb调试命令	131
7.4  在PythonWin中调试脚本	134
7.5  本章小结	136
第8章  pip软件包管理	137
8.1  安装pip	137
8.2  更新pip	138
8.3  pip常用操作	138
8.3.1  安装软件包	138
8.3.2  卸载软件包	139
8.3.3  更新软件包	139
8.3.4  显示本地所有已经安装的软件包	139
8.3.5  显示软件包的细节	139
8.3.6  搜索软件包	140
8.3.7  通过wheel文件安装软件包	141
8.4  本章小结	141
第2篇  Python数据分析工具入门
第9章  IPython科学计算库	142
9.1  IPython简介	143
9.2  安装IPython及其他相关库	144
9.2.1  使用Anaconda安装	144
9.2.2  使用pip安装	145
9.3  IPython壳基础	146
9.3.1  自动补全	147
9.3.2  检查	149
9.3.3  %run命令	150
9.3.4  快捷键	150
9.3.5  异常和错误定位	151
9.3.6  魔法方法	151
9.3.7  和操作系统交互	152
9.3.8  代码分析：%prun和%run	153
9.3.9  目录标签系统	155
9.3.10  嵌入IPython	155
9.4  融合Matplotlib库和Pylab模型	156
9.5  输入和输出变量	157
9.6  交互式调试器	158
9.7  计时功能	159
9.8  重新载入模块	160
9.9  配置IPython	161
9.10  Jupyter	162
9.10.1  基于Qt的控制台	162
9.10.2  Jupyter Notebook	165
9.11  IPython和Jupyter Notebook的关系	170
9.12  本章小结	173
第10章  Numpy科学计算库	174
10.1  Numpy基础	174
10.1.1  数组对象介绍	175
10.1.2  生成数组	176
10.1.3  数组对象数据类型	180
10.1.4  打印数组	182
10.2  数组的基本操作	184
10.3  基本的分片和索引操作	186
10.4  高级索引	189
10.4.1  整数索引	189
10.4.2  布尔索引	190
10.4.3  布尔索引的简单应用	192
10.5  改变数组的形状	193
10.6  组装、分割数组	195
10.7  数组的基本函数	196
10.8  复制和指代	198
10.9  线性代数	199
10.10  使用数组来处理数据	201
10.11  Numpy的where()函数和统计函数	203
10.11.1  where()函数	203
10.11.2  统计函数	205
10.12  输入与输出	206
10.12.1  二进制文件	206
10.12.2  文本文件	207
10.13  生成随机数	208
10.14  数组的排序和查找	210
10.14.1  排序	210
10.14.2  查找	212
10.15  扩充转换	213
10.16  本章小结	215
第11章  pandas数据分析处理库	216
11.1  pandas数据结构介绍	217
11.1.1  序列	217
11.1.2  数据框	221
11.2  索引对象	226
11.3  核心的基本函数	227
11.4  索引和旋转	229
11.5  算术运算与对齐	232
11.6  处理默认值	233
11.7  多级索引	237
11.8  读/写数据	239
11.9  组合数据	243
11.10  数据分组操作	247
11.11  时间序列	249
11.11.1  时间序列介绍	250
11.11.2  使用时间序列作图	253
11.12  本章小结	259
第12章  Matplotlib数据可视化	260
12.1  Pyplot模块介绍	261
12.1.1  plot()函数	261
12.1.2  绘制子图	264
12.1.3  添加注释	266
12.1.4  其他的坐标轴类型	268
12.2  应用Pyplot模块	269
12.3  Artist模块	275
12.3.1  Artist模块概述	275
12.3.2  Artist的属性	277
12.4  使用pandas绘图	283
12.5  本章小结	287
第3篇  Python数据分析案例实战
第13章  案例1：数据挖掘	288
13.1  贝叶斯理论介绍	288
13.2  贝叶斯分类器的实现	290
13.3  协同过滤推荐系统	295
13.3.1  相似度计算	296
13.3.2  协同过滤推荐系统的实现	300
13.4  本章小结	304
第14章  案例2：玩转大数据	305
14.1  案例概述	306
14.1.1  了解大数据的处理方式	306
14.1.2  处理日志文件	307
14.1.3  案例目标	308
14.2  日志文件的分割	309
14.3  编写Map()函数处理小文件	311
14.4  编写Reduce()函数	313
14.5  本章小结	315
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据分析从入门到精通
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python快速编程入门
第1章 Python概述1
1.1 认识Python 2
1.1.1 Python的发展历程 2
1.1.2 Python的特点 2
1.1.3 Python的应用领域 3
1.1.4 Python的版本 4
1.1.5 Python2.x和Python3.x版本区别 5
1.2 Python安装 8
1.2.1 Windows安装Python开发环境 9
1.2.2 Linux安装Python开发环境 12
1.2.3 MacOS安装Python开发环境 13
1.3 IPython——交互式解释器 14
1.4 集成开发环境——PyCharm 15
1.4.1 PyCharm的下载安装 15
1.4.2 PyCharm的使用 18
1.5 Python程序执行原理 22
1.6 本章小结 22
1.7 本章习题 23
第2章 Python基础语法 25
2.1 基本语法 26
2.1.1 注释 26
2.1.2 行与缩进 26
2.1.3 语句换行 27
2.2 变量和数据类型 27
2.2.1 变量和赋值 27
2.2.2 变量的类型 28
2.3 标识符和关键字 30
2.3.1 标识符 30
2.3.2 关键字 31
2.4 简单数值类型 31
2.4.1 整型 31
2.4.2 浮点型 32
2.4.3 布尔类型 32
2.4.4 复数类型 33
2.4.5 数字类型转换 33
2.5 运算符 34
2.5.1 算术运算符 34
2.5.2 赋值运算符 35
2.5.3 复合赋值运算符 36
2.5.4 比较运算符 37
2.5.5 逻辑运算符 39
2.5.6 成员运算符 40
2.6 位运算 41
2.6.1 按位左移 42
2.6.2 按位右移 42
2.6.3 按位与 42
2.6.4 按位或 43
2.6.5 按位异或 43
2.6.6 按位取反 43
2.7 运算符优先级 44
2.8 本章小结 45
2.9 本章习题 45
第3章 Python常用语句 48
3.1 判断语句 49
3.1.1 if语句 49
3.1.2 if—else语句 50
3.1.3 if—elif语句 52
3.1.4 if嵌套 53
3.1.5 if案例——猜拳游戏 54
3.2 循环语句 55
3.2.1 while循环 56
3.2.2 for循环 56
3.2.3 while循环案例——计算1～100偶数和 57
3.2.4 while嵌套 57
3.2.5 while嵌套案例——打印图形 58
3.2.6 while嵌套案例——九九乘法表 59
3.3 Python的其他语句 60
3.3.1 break语句 60
3.3.2 continue语句 60
3.3.3 pass语句 61
3.3.4 else语句 61
3.4 本章小结 62
3.5 本章习题 62
第4章 字符串 65
4.1 字符串介绍 66
4.1.1 什么是字符串 66
4.1.2 转义字符 66
4.2 字符串的输出和输入 68
4.2.1 字符串输出 68
4.2.2 字符串输入 69
4.3 访问字符串中的值 70
4.3.1 字符串的存储方式 70
4.3.2 使用切片截取字符串 70
4.4 字符串内建函数 70
4.4.1 find 71
4.4.2 index 72
4.4.3 count 73
4.4.4 replace 73
4.4.5 splite 74
4.4.6 capitalize 74
4.4.7 title 75
4.4.8 startswith 75
4.4.9 endswith 76
4.4.10 upper 76
4.4.11 ljust 77
4.4.12 rjust 77
4.4.13 center 78
4.4.14 lstrip 78
4.4.15 rstrip 79
4.4.16 strip 79
4.5 字符串运算符 80
4.6 本章小结 81
4.7 本章习题 81
第5章 列表、元组和字典 84
5.1 列表概述 85
5.2 列表的循环遍历 85
5.3 列表的常见操作 86
5.3.1 在列表中增加元素 86
5.3.2 在列表中查找元素 88
5.3.3 在列表中修改元素 89
5.3.4 在列表中删除元素 89
5.3.5 列表的排序操作 91
5.4 列表的嵌套 92
5.4.1 什么是列表的嵌套 92
5.4.2 列表嵌套案例——分配老师到不同的办公室 92
5.5 元组 93
5.6 字典 96
5.6.1 字典介绍 96
5.6.2 字典的常见操作 96
5.6.3 字典的遍历 100
5.7 本章小结 101
5.8 本章习题 102
第6章 Python函数 105
6.1 什么是函数 106
6.2 函数的定义和调用 106
6.2.1 定义函数 106
6.2.2 调用函数 107
6.3 函数的参数 107
6.3.1 函数参数的传递 107
6.3.2 默认参数 108
6.3.3 不定长参数 109
6.4 函数的返回值 111
6.5 函数的四种类型 111
6.5.1 无参数、无返回值的函数 111
6.5.2 无参数、有返回值的函数 112
6.5.3 有参数、无返回值的函数 112
6.5.4 有参数、有返回值的函数 113
6.6 函数案例——名片管理器 113
6.7 函数的嵌套调用 116
6.8 变量作用域 117
6.8.1 LEGB原则 117
6.8.2 全局变量和局部变量 118
6.8.3 global和nonlocal关键字 119
6.9 递归函数和匿名函数 120
6.9.1 递归函数 120
6.9.2 匿名函数 121
6.10 日期时间函数 123
6.10.1 时间函数 123
6.10.2 日历函数 127
6.11 随机数函数 128
6.12 阶段案例——学生管理系统 130
6.13 本章小结 134
6.14 本章习题 134
第7章 高级函数 137
7.1 闭包 138
7.2 装饰器 139
7.2.1 什么是装饰器 139
7.2.2 多个装饰器 141
7.2.3 装饰器对有参数函数进行装饰 143
7.2.4 装饰器对带有返回值的函数进行装饰 145
7.2.5 带有参数的装饰器 146
7.3 常见Python内置函数 147
7.3.1 map函数 147
7.3.2 filter函数 148
7.3.3 reduce函数 149
7.4 本章小结 150
7.5 本章习题 150
第8章 Python文件操作 153
8.1 文件的打开和关闭 154
8.1.1 文件的打开 154
8.1.2 文件模式 154
8.1.3 文件的关闭 155
8.2 文件的读写 155
8.2.1 写文件 155
8.2.2 读文件 156
8.2.3 文件读写应用——制作文件的备份 158
8.2.4 文件的定位读写 159
8.3 文件的重命名和删除 162
8.3.1 文件的重命名 162
8.3.2 文件的删除 162
8.4 文件夹的相关操作 162
8.5 文件操作应用——批量修改文件名 163
8.6 文件案例——学生管理系统（文件版）164
8.7 本章小结 166
8.8 本章习题 166
第9章 异常 169
9.1 异常简介 170
9.2 异常类 170
9.3 异常处理 172
9.3.1 捕获简单异常 173
9.3.2 捕获多个异常 174
9.3.3 捕获异常的描述信息 175
9.3.4 捕获所有的异常 176
9.3.5 没有捕获到异常 178
9.3.6 终止行为 179
9.4 抛出异常 181
9.4.1 raise语句 181
9.4.2 assert语句 183
9.5 自定义异常 184
9.6 预定义清理 185
9.6.1 with语句 185
9.6.2 上下文管理器 186
9.7 本章小结 187
9.8 本章习题 187
第10章 Python模块 189
10.1 模块的基本使用 190
10.2 模块的制作 192
10.3 Python中的包 193
10.4 模块的发布 194
10.5 模块的安装 196
10.6 本章小结 196
10.7 本章习题 197
第11章 Python面向对象编程（上）198
11.1 面向对象编程概述 199
11.2 类和对象 200
11.2.1 类和对象的关系 200
11.2.2 类的定义 201
11.2.3 根据类创建对象 201
11.3 构造方法和析构方法 202
11.3.1 构造方法 203
11.3.2 析构方法 204
11.4 self的使用 205
11.5 运算符重载 206
11.5.1 加法运算符重载 206
11.5.2 索引和分片重载 207
11.5.3 定制对象的字符串形式 210
11.6 阶段案例——反恐精英CS 212
11.7 本章小结 219
11.8 本章习题 219
第12章 Python面向对象编程（下）221
12.1 封装（隐藏数据和保护属性）222
12.2 继承 223
12.2.1 单继承 223
12.2.2 多继承 225
12.2.3 重写父类方法与调用父类方法 227
12.3 多态 229
12.4 类属性和实例属性 231
12.5 类方法和静态方法 232
12.6 本章小结 234
12.7 本章习题 234
第13章 飞机大战 236
13.1 游戏介绍 237
13.1.1 飞机大战游戏简介 237
13.1.2 分析游戏显示的过程 238
13.2 游戏准备工作 238
13.2.1 添加pygame模块 238
13.2.2 搭建游戏界面 241
13.2.3 检查键盘的输入 242
13.3 显示玩家飞机，控制移动方向 244
13.4 玩家飞机发射子弹 246
13.4.1 显示子弹 246
13.4.2 子弹移动 247
13.5 敌人飞机 249
13.5.1 显示敌人飞机 249
13.5.2 控制敌人飞机移动 251
13.5.3 敌人飞机发射子弹 252
13.6 优化程序代码 254
13.6.1 抽取子弹基类 254
13.6.2 抽取飞机基类 255
13.7 本章小结 258
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python快速编程入门
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>head first python 第二版
目录（概览）
基础知识：快速入门
列表数据：处理有序数据
结构化数据：处理结构化数据
代码重用：函数与模块
构建一个Web应用：来真格的
存储和管理数据：数据放在哪里
使用数据库：具体使用Python的DB-API
一点点类：抽象行为和状态
上下文管理协议：挂接Python的with语句
函数修饰符：包装函数
异常处理：出问题了怎么办
关于线程：处理等待
高级迭代：疯狂地循环
附录A 安装：安装Python
附录B Pythonanywhere：部署你的Web应用
附录C 我们没有介绍的十大内容：还有更多需要学习 附录D 我们没有介绍的十大项目：更多工具、库和模块 附录E 多参与：Python社区
索  引
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>head first python 第二版
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>零压力学Python
第1章　初识Python　　1
1.1　Python简史　　1
1.2　Python有何不同　　2
1.3　本书的特色　　2
1.4　安装Python　　3
1.5　开始通过IDLE使用Python　　4
1.6　在IDLE中修正错误　　5
1.7　续行　　5
1.8　其他帮助信息：在线资源　　6
第2章　Python探索之旅：数字　　7
2.1　Python和数字　　7
2.2　Python和浮点数　　11
2.3　将数字赋给变量　　13
2.4　本书采用的变量命名约定　　17
2.5　一些Python快捷方式　　18
2.6　小结　　20
第3章　第一个程序　　22
3.1　升温了吗　　22
3.2　打印消息　　26
3.3　语法小结　　27
示例3.1　使用函数来定义二次方程求解公式　　28
3.4　获取字符串输入　　31
3.5　获取数值输入　　33
示例3.2　包含I/O功能的二次方程求解　　33
3.6　设置输出格式　　35
示例3.3　计算距离的脚本　　36
3.7　小结　　38
第4章　决策和循环　　40
4.1　计算机程序中的决策　　40
4.2　条件和布尔运算符　　41
4.3　关键字if、elif和else　　42
示例4.1　输入你的年龄　　44
4.4　while循环　　46
示例4.2　阶乘　　48
示例4.3　打印斐波那契数　　51
4.5　break语句　　54
示例4.4　猜数游戏　　54
4.6　小结　　57
第5章　Python列表　　59
5.1　Python之道：世界是由集合组成的　　59
5.2　使用for处理列表　　61
5.3　不能使用for语句来修改元素　　63
示例5.1　　一个排序应用程序　　64
5.4　索引和切片　　66
5.5　将数据复制到切片中　　68
5.6　区间　　69
示例5.2　重写计算阶乘的程序　　70
示例5.3　埃拉托色尼筛选法　　72
5.7　列表函数和关键字in　　75
5.8　小结　　77
第6章　列表推导和枚举　　78
6.1　索引和函数enumerate　　78
6.2　再谈字符串方法format　　79
示例6.1　打印表格　　80
6.3　简单列表推导　　82
示例6.2　平方差　　84
6.4　“二维”列表推导　　86
6.5　包含条件的列表推导　　88
示例6.3　埃拉托色尼筛选法简洁版　　88
示例6.4　毕氏三元数　　91
6.6　小结　　94
第7章　Python字符串　　96
7.1　使用引号创建字符串　　96
7.2　索引和切片　　98
7.3　在字符串和数字之间进行转换　　100
示例7.1　计算末尾有多少个零　　101
7.4　剔除多余的字符　　104
示例7.2　计算末尾有多少个零
（第二版）　　105
7.5　使用方法split拆分字符串　　106
7.6　通过拼接（+）创建字符串　　107
示例7.3　对单行输入中的单词进行排序　　108
7.7　方法join　　109
7.8　小结　　111
第8章　操作字符　　113
8.1　本章遵循的命名约定　　113
8.2　回顾如何访问字符串中的字符　　113
8.3　获取有关字符串方法的帮助信息　　114
8.4　大小写检查　　114
8.5　大小写转换　　115
8.6　回文检测　　116
示例8.1　将字符串转换为大写　　116
示例8.2　完成回文检测　　118
8.7　转换为ASCII码　　122
8.8　将ASCII码转换为字符　　123
示例8.3　字符串加密　　123
示例8.4　字符串解密　　126
8.9　小结　　127
第9章　高级函数技术　　128
9.1　多个参数　　128
9.2　返回多个值　　129
示例9.1　两个点的距离与和　　132
9.3　具名参数　　133
9.4　默认参数　　134
示例9.2　加法机　　135
9.5　从模块导入函数　　137
示例9.3　掷骰子游戏　　137
9.6　小结　　141
第10章　局部变量和全局变量　　143
10.1　局部变量有何长处　　143
10.2　局部变量和全局变量　　144
10.3　关键字global简介　　145
10.4　Python中的局部变量陷阱　　146
示例10.1　甲壳虫乐队成员人格剖析（BPP）　　147
示例10.2　罗马数字　　150
示例10.3　罗马数字解码　　154
10.5　小结　　156
第11章　操作文件　　157
11.1　文本文件和二进制文件　　157
11.2　模块os　　158
11.3　打开文件　　160
11.4　写入文本文件　　161
示例11.1　将用户输入写入文件　　162
11.5　读取文本文件　　164
11.6　文件和异常处理　　165
示例11.2　读取文本并加上行号　　168
11.7　其他文件打开模式　　170
11.8　小结　　170
第12章　字典和集合　　172
12.1　为何需要字典　　172
12.2　添加和修改键值对　　173
12.3　访问值　　174
12.4　查找键　　175
示例12.1　个人电话簿　　176
12.5　将字典转换为列表　　179
示例12.2　根据前缀选择元素　　179
示例12.3　从文件加载及保存到
文件　　181
12.6　集合面面观　　183
12.7　集合操作　　184
示例12.4　改进埃拉托色尼筛选法
示例　　186
12.8　小结　　187
第13章　矩阵：二维列表　　189
13.1　简单矩阵　　189
13.2　访问元素　　189
13.3　不规则矩阵和行长　　191
13.4　乘法（*）和列表　　191
13.5　使用乘法运算符创建的矩阵存在的问题　　192
13.6　如何创建N * M矩阵　　193
示例13.1　乘法表　　194
示例13.2　让用户初始化矩阵　　196
13.7　如何旋转矩阵　　198
示例13.3　完成旋转示例　　201
13.8　小结　　204
第14章　决胜井字棋　　205
14.1　设计井字棋棋盘　　205
14.2　井字棋游戏开发计划　　206
14.2.1　第一阶段　　206
14.2.2　第二阶段　　207
14.2.3　第三阶段　　207
14.3　单行的Python if/else语句　　207
示例14.1　简单的两玩家游戏　　207
14.4　列表方法count　　211
示例14.2　具有输赢判断功能的两玩家游戏　　211
14.5　引入计算机玩家　　216
示例14.3　让用户与计算机玩——计算机先走　　217
14.6　小结　　222
第15章　类和对象（一）　　224
15.1　对象是什么　　224
15.2　Python中的类　　225
15.2.1　如何定义简单的类　　225
15.2.2　如何使用类来创建对象　　226
15.2.3　如何给对象添加数据　　227
15.2.4　如何编写方法　　228
15.3　至关重要的方法__init__　　229
15.4　设计一个数据库类　　230
示例15.1　记录员工信息　　232
15.5　定义其他方法　　235
15.6　设计Point3D类　　236
15.7　Point3D类和默认参数　　237
15.8　三维井字棋　　238
示例15.2　　检查是否满足三维井字棋获胜条件　　238
示例15.3　找出所有获胜组合　　240
15.9　小结　　242
第16章　类和对象（二）　　244
16.1　获取文档字符串中的帮助信息　　244
16.2　在函数中检查类型以模拟重载　　245
16.3　变长参数列表　　247
示例16.1　PointN类　　249
16.4　继承　　252
16.5　Fraction类　　254
示例16.2　扩展Fraction类　　254
16.6　类变量和类方法　　257
16.7　作为默认值的实例变量　　258
示例16.3  “自动化的”Polygon类　　259
16.8　小结　　262
第17章　生命游戏　　264
17.1　生命游戏之游戏规则　　265
17.2　计算邻居数量　　266
17.3　设计程序　　267
示例17.1　自定义的矩阵类　　268
17.4　将矩阵类放到模块中　　269
示例17.2　打印生命矩阵　　270
17.5　著名的滑翔机图案　　272
示例17.3　完整的生命游戏程序　　272
17.6　小结　　276
第18章　Python高级技术　　278
18.1　生成器　　278
18.2　发挥生成器的威力　　279
示例18.1　一个自定义的随机数生成器　　281
18.3　特性　　284
18.3.1　获取方法　　285
18.3.2　设置方法　　286
18.3.3　同时定义获取方法和设置方法　　287
示例18.2　支持多种表示方式的温度对象　　287
18.4　装饰器：包装其他函数的函数　　289
18.5　Python装饰　　292
示例18.3　将装饰器用作调试工具　　294
18.6　小结　　296
附录A　Python运算符优先级表　　297
附录B　最重要的Python 3.0格式设置
规则　　299
附录C　术语表　　302
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>零压力学Python
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>11招玩转网络安全——用Python，更安全
第 1 招  搭建Python防范环境	1
1.1  认识黑客	1
1.1.1  黑客的定义	1
1.1.2  黑客守则	2
1.2  基本工具	3
1.2.1  操作系统	3
1.2.2  安装ConEmu	4
1.2.3  安装Python	8
1.2.4  安装Git	16
1.3  安装虚拟机	21
1.3.1  下载VMware	21
1.3.2  Windows下安装VMware Workstation	23
1.3.3  Linux下安装VMware Workstation	24
1.4  安装Docker	28
1.4.1  下载Docker For Docker	29
1.4.2  Windows下安装设置Docker	31
1.4.3  Linux下安装设置Docker	35
1.4.4  Docker使用	37
1.4.5  取消Docker服务	43
1.5  防范总结	45
第2 招  扫描漏洞	46
2.1  系统扫描工具	46
2.1.1  系统漏洞	46
2.1.2  系统扫描	47
2.1.3  工具选择	47
2.2  Nexpose安装	48
2.2.1  下载Nexpose	48
2.2.2  Windows下安装Nexpose	51
2.2.3  Linux下安装Nexpose	55
2.3  Nexpose扫描	56
2.3.1  激活Nexpose	56
2.3.2  准备靶机	60
2.3.3  系统扫描	66
2.3.4  漏洞利用	70
2.3.5  系统扫描防范秘籍	77
2.4  防范总结	81
第 3 招  暴力破解的秘密	82
3.1  Web暴力破解	82
3.1.1  准备靶机DVWA	82
3.1.2  软件准备——Burp Suite	92
3.1.3  Low级别的暴力破解	96
3.1.4  Medium级别的暴力破解	105
3.1.5  High级别的暴力破解	107
3.1.6  Web暴力破解防范秘籍	114
3.2  端口暴力破解	115
3.2.1  Nmap扫描器	115
3.2.2  暴力破解工具Hydra	128
3.2.3  软件准备——Nmap	130
3.2.4  软件准备——Hydra	133
3.2.5  准备靶机	135
3.2.6  数据库的暴力破解	136
3.2.7  HTTP的暴力破解	138
3.2.8  端口爆破防范秘籍	140
3.3  E-mail暴力破解	141
3.3.1  Hydra破解邮箱	142
3.3.2  Python破解邮箱	142
3.3.3  邮箱爆破防范秘籍	147
3.4  防范总结	147
第 4 招  防SQL注入	148
4.1  SQL准备	148
4.1.1  准备MySQL的Windows客户端	149
4.1.2  准备MySQL的Linux客户端	152
4.1.3  通过客户端连接服务器	153
4.2  SQL语句	155
4.2.1  创建数据库和表	155
4.2.2  添加、修改、查询数据	158
4.2.3  删除表和数据库	160
4.3  DVWA SQL注入	162
4.3.1  Low级别注入	162
4.3.2  Medium级别注入	169
4.3.3  High级别注入	174
4.4  使用工具注入	176
4.4.1  SQL注入工具选择	176
4.4.2  Sqlmap下载安装	177
4.4.3  Sqlmap参数	179
4.4.4  Sqlmap注入——Low级别	182
4.4.5  Sqlmap注入——Medium级别	187
4.4.6  Sqlmap注入——High级别	188
4.4.7  Sqlmap之tamper	188
4.4.8  Sqlmap防范秘籍	189
4.5  防范总结	190
第 5 招  防命令注入	191
5.1  DVWA命令注入	191
5.1.1  Low级别注入	191
5.1.2  Medium级别注入	193
5.1.3  High级别注入	195
5.1.4  命令注入防范秘籍	196
5.2  防范总结	197
第 6 招  看清文件上传木马	198
6.1  木马	198
6.1.1  最简单的木马	198
6.1.2  小马变形	199
6.1.3  大马	200
6.1.4  木马连接工具	200
6.2  DVWA上传	201
6.2.1  Low级别上传	202
6.2.2  Medium级别上传	203
6.2.3  High级别上传	209
6.2.4  上传木马防范秘籍	212
6.3  防范总结	213
第 7 招  看清Web攻击	214
7.1  非特定目标	214
7.1.1  寻找注入点	214
7.1.2  Sqlmap注入	217
7.1.3  寻找后台	220
7.1.4  钟馗之眼——ZoomEye	221
7.2  特定目标	223
7.2.1  Nmap扫描	224
7.2.2  搜索公开漏洞	225
7.2.3  社工库	225
7.2.4  防范秘籍	226
7.3  防范总结	227
第 8 招  利用Python监测漏洞	228
8.1  Heart Bleed漏洞	228
8.1.1  Heart Bleed漏洞简介	228
8.1.2  创建靶机	229
8.1.3  测试靶机	231
8.1.4  Heart Bleed漏洞防范秘籍	233
8.2  Struts 2远程代码执行漏洞	235
8.2.1  漏洞简介	235
8.2.2  创建靶机	236
8.2.3  测试靶机	237
8.2.4  Struts2防范秘籍	238
8.3  防范总结	239
第 9 招  潜伏与Python反向连接	240
9.1  清理网络脚印	240
9.1.1  IP追踪原理	240
9.1.2  Tor下载——Windows版	241
9.1.3  Tor下载——Linux版	242
9.1.4  Tor安装配置——Linux版	243
9.1.5  Tor安装配置——Windows版	248
9.1.6  Tor防范秘籍	252
9.2  反向连接——Netcat	253
9.2.1  Windows服务器的反向连接	253
9.2.2  Linux服务器的反向连接	258
9.2.3  反向连接使用技巧	264
9.2.4  反向连接防范秘籍	265
9.3  防范总结	265
第 10 招  无线破解	266
10.1  准备工具	266
10.1.1  硬件准备	266
10.1.2  软件准备	267
10.2  aircrack-ng破解	267
10.2.1  aircrack-ng说明	268
10.2.2  WEP破解	270
10.2.3  WPA破解	278
10.2.4  aircrack-ng防范秘籍	284
10.3  pin码破解	286
10.3.1  Reaver破解原理	286
10.3.2  Reaver破解	287
10.3.3  pin码防范秘籍	290
10.4  防范总结	291
第 11 招  内网攻击	292
11.1  嗅探原理	292
11.1.1  数据分发	292
11.1.2  嗅探位置	294
11.1.3  嗅探软件	296
11.1.4  开始嗅探	300
11.2  ARP欺骗	304
11.2.1  ARP欺骗原理	304
11.2.2  ARP欺骗软件	305
11.2.3  安装Cain	305
11.2.4  Cain欺骗、嗅探	305
11.3  中间人攻击	312
11.3.1  会话劫持原理	312
11.3.2  获取会话Cookies	313
11.3.3  注意事项	319
11.3.4  中间人攻击防范秘籍	319
11.4  防范总结	324
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>11招玩转网络安全——用Python，更安全
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据分析：基于Plotly的动态可视化绘图
第1章  快速开始  1
1.1  Plotly简介  1
1.2  安装与安装环境  6
1.3  在线初始化  6
1.4  在线绘图隐私说明  8
1.5  开始在线绘图  8
1.6  使用离线绘图库  11
1.7  参数解读  13
1.8  查看帮助  14
第2章  Plotly基础图形  16
2.1  基础案例解读  17
2.2  基本绘图流程  19
2.3  散点图  20
2.3.1  基本案例  20
2.3.2  样式设置  22
2.3.3  应用案例  24
2.3.4  参数解读  26
2.4  气泡图  28
2.4.1  基本案例  28
2.4.2  样式设置  29
2.4.3  缩放设置  30
2.4.4  参数解读  33
2.5  线形图  33
2.5.1  基本案例  33
2.5.2  数据缺口与连接  35
2.5.3  数据插值  38
2.5.4  填充线形图  41
2.5.5  应用案例  45
2.5.6  参数解读  49
2.6  柱状图  49
2.6.1  基本柱状图  49
2.6.2  柱状簇  50
2.6.3  层叠柱状图  52
2.6.4  瀑布式柱状图  54
2.6.5  图形样式设置  56
2.6.6  应用案例  58
2.6.7  参数解读  60
2.7  水平条形图  61
2.7.1  基本案例  61
2.7.2  应用案例  64
2.7.3  参数解读  70
2.8  甘特图  70
2.8.1  基本甘特图  70
2.8.2  甘特图（按数字索引）  71
2.8.3  甘特图（按类别索引）  72
2.8.4  应用案例  74
2.9  面积图  76
2.9.1  基本面积图  76
2.9.2  内部填充面积图  78
2.9.3  堆积面积图  80
2.10  直方图  83
2.10.1  基本直方图  83
2.10.2  重叠直方图  84
2.10.3  层叠直方图  85
2.10.4  累积直方图  87
2.10.5  应用案例  88
2.10.6  参数解读  89
2.11  饼图  90
2.11.1  基本饼图  90
2.11.2  环形饼图  91
2.11.3  样式设置  92
2.11.4  应用案例  93
2.11.5  参数解读  98
2.12  更多案例  99
2.13  Plotly对象概览  100
第3章  Plotly高级图形  110
3.1  时间序列  110
3.1.1  使用方法  110
3.1.2  时间范围约束  111
3.2  滑动选择控件  113
3.3  表格  117
3.3.1  入门案例  117
3.3.2  添加链接  118
3.3.3  使用Pandas  120
3.3.4  改变大小与颜色  121
3.3.5  表格与图  124
3.4  多图表  129
3.5  多个坐标轴  130
3.5.1  双坐标轴  130
3.5.2  多坐标轴  132
3.5.3  共享坐标轴  136
3.6  多子图  138
3.6.1  双子图（方法一）  138
3.6.2  双子图（方法二）  139
3.6.3  多子图（方法一）  141
3.6.4  多子图（方法二）  142
3.6.5  分割视图区间  144
3.6.6  子图共享坐标轴（方法一）  147
3.6.7  子图共享坐标轴（方法二）  149
3.6.8  子图坐标轴自定义  152
3.6.9  嵌入式子图  154
3.6.10  混合图  155
3.7  绘制SVG  159
3.7.1  线形图的绘制  160
3.7.2  线形图应用：创建图形的切线  163
3.7.3  矩形图的绘制  166
3.7.4  矩形图应用：设置时间序列区域高亮显示  169
3.7.5  圆形图的绘制  171
3.7.6  圆形图应用：高亮显示散点图的聚集簇  174
第4章  Plotly与Pandas  178
4.1  简单快速入门  178
4.1.1  基本线形图  179
4.1.2  基本散点图  180
4.1.3  基本柱状图  181
4.2  使用cufflinks绘图  183
4.2.1  安装cufflinks  183
4.2.2  快速入门  183
4.2.3  快速获取数据  185
4.2.4  自定义绘图  186
4.2.5  常见经典图形  188
4.2.6  更多案例  193
第5章  金融绘图  194
5.1  快速绘制K线图  194
5.1.1  检查Plotly版本  194
5.1.2  快速绘制OHLC（美国线）图  194
5.1.3  快速绘制蜡烛图  197
5.2  K线图的优化  199
5.2.1  过滤非交易时间  199
5.2.2  设置形状、颜色和注释  203
5.2.3  添加技术指标  207
5.3  使用自定义的数据  211
5.4  高级金融绘图  214
5.4.1  入门案例  214
5.4.2  综合案例  215
第6章  Matplotlib  217
6.1  Matplotlib简介  217
6.2  安装Matplotlib  218
6.3  调整Matplotlib参数  220
6.4  常用的API功能  222
6.5  线性函数  223
6.6  增加子图  225
6.7  确定坐标范围  228
6.8  概率图  229
6.9  散点图  232
6.10  柱状图  235
6.11  更多扩展  239
第7章  Plotly与网页开发  240
7.1  Plotly在Django中的应用  240
7.1.1  安装环境搭建  240
7.1.2  安装环境测试  241
7.1.3  入门案例一  243
7.1.4  入门案例二  247
7.1.5  更多案例扩展  254
7.1.6  应用案例一  256
7.1.7  应用案例二  258
7.2  Plotly在Flask中的应用  267
7.2.1  安装Flask  269
7.2.2  最小的Web应用  269
7.2.3  模板渲染  270
7.2.4  入门案例一  272
7.2.5  入门案例二  275
7.2.6  应用案例  283
第8章  Plotly与GUI开发  293
8.1  PyQt的安装  295
8.2  案例解读  295
8.3  设置提升的窗口部件  298
8.4  Plotly_PyQt 5的使用  300
8.5  更多扩展  304
8.6  Plotly与PyQt 5.6的结合  305
8.7  更多扩展  309
8.8  应用案例：展示产品组合信息  309
第9章  Plotly与机器学习  316
9.1  Plotly在Sklearn中的应用  316
9.1.1  分类问题  316
9.1.2  回归问题  319
9.1.3  聚类问题  321
9.2  PyTorch可视化工具  326
9.2.1  Visdom简介  326
9.2.2  安装Visdom  327
9.2.3  Visdom与Plotly  328
9.2.4  Visdom基本概念  328
9.2.5  使用方法  329
9.2.6  Visdom与PyTorch  345
第10章  Plotly在量化投资中的应用  346
第11章  Plotly在其他语言中的应用  355
11.1  Plotly在R语言中的应用  355
11.1.1  安装R语言  355
11.1.2  安装Plotly模块  356
11.1.3  Plotly应用分析  356
11.1.4  更多扩展  362
11.2  Plotly在MATLAB中的应用  363
11.2.1  下载与安装  363
11.2.2  基础入门  365
11.2.3  经典案例  367
11.2.4  更多扩展  376
11.3  Plotly在JavaScript语言中的应用  377
11.3.1  基础入门  377
11.3.2  散点图  380
11.3.3  条形图  383
11.3.4  扇形图  384
11.3.5  更多扩展  386
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据分析：基于Plotly的动态可视化绘图
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深度学习：基于Keras的Python实践
第一部分  初识
1  初识深度学习/2
1.1  Python的深度学习/2
1.2  软件环境和基本要求/3
1.2.1  Python和SciPy/3
1.2.2  机器学习/3
1.2.3  深度学习/4
1.3  阅读本书的收获/4
1.4  本书说明/4
1.5  本书中的代码/5
2  深度学习生态圈/6
2.1  CNTK/6
2.1.1  安装CNTK/7
2.1.2  CNTK的简单例子/8
2.2  TensorFlow/8
2.2.1  TensorFlow介绍/8
2.2.2  安装TensorFlow/9
2.2.3  TensorFlow的简单例子/9
2.3  Keras/10
2.3.1  Keras简介/11
2.3.2  Keras安装/11
2.3.3  配置Keras的后端/11
2.3.4  使用Keras构建深度学习模型/12
2.4  云端GPUs计算/13
第二部分  多层感知器
3  第一个多层感知器实例：印第安人糖尿病诊断/16
3.1  概述/16
3.2  Pima Indians数据集/17
3.3  导入数据/18
3.4  定义模型/19
3.5  编译模型/20
3.6  训练模型/21
3.7  评估模型/21
3.8  汇总代码/22
4  多层感知器速成/24
4.1  多层感知器/24
4.2  神经元/25
4.2.1  神经元权重/25
4.2.2  激活函数/26
4.3  神经网络/27
4.3.1  输入层（可视层）/28
4.3.2  隐藏层/28
4.3.3  输出层/28
4.4  训练神经网络/29
4.4.1  准备数据/29
4.4.2  随机梯度下降算法/30
4.4.3  权重更新/30
4.4.4  预测新数据/31
5  评估深度学习模型/33
5.1  深度学习模型和评估/33
5.2  自动评估/34
5.3  手动评估/36
5.3.1  手动分离数据集并评估/36
5.3.2  k折交叉验证/37
6  在Keras中使用Scikit-Learn/40
6.1  使用交叉验证评估模型/41
6.2  深度学习模型调参/42
7  多分类实例：鸢尾花分类/49
7.1  问题分析/49
7.2  导入数据/50
7.3  定义神经网络模型/50
7.4  评估模型/52
7.5  汇总代码/52
8  回归问题实例：波士顿房价预测/54
8.1  问题描述/54
8.2  构建基准模型/55
8.3  数据预处理/57
8.4  调参隐藏层和神经元/58
9  二分类实例：银行营销分类/61
9.1  问题描述/61
9.2  数据导入与预处理/62
9.3  构建基准模型/64
9.4  数据格式化/66
9.5  调参网络拓扑图/66
10  多层感知器进阶/68
10.1  JSON序列化模型/68
10.2  YAML序列化模型/74
10.3  模型增量更新/78
10.4  神经网络的检查点/81
10.4.1  检查点跟踪神经网络模型/82
10.4.2  自动保存最优模型/84
10.4.3  从检查点导入模型/86
10.5  模型训练过程可视化/87
11  Dropout与学习率衰减92
11.1  神经网络中的Dropout/92
11.2  在Keras中使用Dropout/93
11.2.1  输入层使用Dropout/94
11.2.2  在隐藏层使用Dropout/95
11.2.3  Dropout的使用技巧/97
11.3  学习率衰减/97
11.3.1  学习率线性衰减/98
11.3.2  学习率指数衰减/100
11.3.3  学习率衰减的使用技巧/103
第三部分  卷积神经网络
12  卷积神经网络速成/106
12.1  卷积层/108
12.1.1  滤波器/108
12.1.2  特征图/109
12.2  池化层/109
12.3  全连接层/109
12.4  卷积神经网络案例/110
13  手写数字识别/112
13.1  问题描述/112
13.2  导入数据/113
13.3  多层感知器模型/114
13.4  简单卷积神经网络/117
13.5  复杂卷积神经网络/120
14  Keras中的图像增强/124
14.1  Keras中的图像增强API/124
14.2  增强前的图像/125
14.3  特征标准化/126
14.4  ZCA白化/128
14.5  随机旋转、移动、剪切和反转图像/129
14.6  保存增强后的图像/132
15  图像识别实例：CIFAR-10分类/134
15.1  问题描述/134
15.2  导入数据/135
15.3  简单卷积神经网络/136
15.4  大型卷积神经网络/140
15.5  改进模型/145
16  情感分析实例：IMDB影评情感分析/152
16.1  问题描述/152
16.2  导入数据/153
16.3  词嵌入/154
16.4  多层感知器模型/155
16.5  卷积神经网络/157
第四部分  循环神经网络
17  循环神经网络速成/162
17.1  处理序列问题的神经网络/163
17.2  循环神经网络/164
17.3  长短期记忆网络/165
18  多层感知器的时间序列预测：国际旅行人数预测/167
18.1  问题描述/167
18.2  导入数据/168
18.3  多层感知器/169
18.4  使用窗口方法的多层感知器/172
19  LSTM时间序列问题预测：国际旅行人数预测177
19.1  LSTM处理回归问题/177
19.2  使用窗口方法的LSTM回归/181
19.3  使用时间步长的LSTM回归/185
19.4  LSTM的批次间记忆/188
19.5  堆叠LSTM的批次间记忆/192
20  序列分类：IMDB影评分类/197
20.1  问题描述/197
20.2  简单LSTM/197
20.3  使用Dropout改进过拟合/199
20.4  混合使用LSTM和CNN/201
21  多变量时间序列预测：PM2.5预报/203
21.1  问题描述/203
21.2  数据导入与准备/204
21.3  构建数据集/206
21.4  简单LSTM/207
22  文本生成实例：爱丽丝梦游仙境/211
22.1  问题描述/211
22.2  导入数据/212
22.3  分词与向量化/212
22.4  词云/213
22.5  简单LSTM/215
22.6  生成文本/219
附录A  深度学习的基本概念/223
A.1  神经网络基础/223
A.2  卷积神经网络/227
A.3  循环神经网络/229
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深度学习：基于Keras的Python实践
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python云原生：构建应对海量用户数据的高可扩展Web应用
前言  XIII
1  云原生应用和微服务简介  1
云计算简介  2
软件即服务  3
平台即服务  4
基础设施即服务  4
云原生概念  5
云原生为何物？为何重要  5
云原生运行时环境  6
云原生架构  6
理解十二要素应用  9
设置Python环境  11
安装Git  11
安装和配置Python  19
熟悉GitHub和Git命令  26
本章小结  27
2  使用Python构建微服务  29
Python概念解析  29
模块  29
函数  30
微服务模型  31
构建微服务  32
构建user资源的方法  38
构建tweet资源的方法  47
测试RESTful API  52
单元测试  53
本章小结  56
3  使用Python构建Web应用  57
应用入门  58
创建应用程序用户  59
使用Observable和AJAX  61
绑定数据到adduser模板  63
用户发送推文  65
在推文模板上使用Observable和AJAX  67
绑定数据到addtweet模版  69
CORS——跨源资源共享  71
Session管理  72
Cookies  75
本章小结  76
4  与数据服务交互  77
MongoDB有什么优势，为什么要使用它  77
MongoDB中的术语  78
安装MongoDB  79
初始化MongoDB数据库  80
在微服务中集成MongoDB  82
处理user资源  83
处理推文资源  90
本章小结  93
5  使用React构建Web视图  95
理解React  95
配置React环境  96
安装node  96
创建package.json  97
使用React构建webViews  98
在微服务中集成Web视图  106
用户验证  109
用户登录  109
用户注册  111
用户资料  114
用户注销  117
测试React webViews  117
Jest  118
Selenium  118
本章小结  118
6  使用Flux来构建UI以应对大规模流量  119
Flux介绍  119
Flux概念  120
在UI中添加日期  121
使用Flux创建UI  121
动作和分派器  122
数据源  125
本章小结  134
7  事件溯源与CQRS  135
简介  136
理解事件溯源  138
事件溯源定律  140
CQRS介绍  142
CQRS架构的优点  144
事件溯源与CQRS面临的挑战  145
应对挑战  146
解决问题  146
使用Kafka作为事件存储  151
使用Kafka做事件溯源  152
工作原理  154
本章小结  154
8  Web应用的安全性  155
网络安全性和应用安全性  155
网络应用栈  155
开发安全的Web应用程序建议  176
本章小结  176
9  持续交付  177
持续集成与持续交付的变迁  177
理解SDLC  177
敏捷开发流程  178
持续集成  180
Jenkins持续集成工具  182
安装Jenkins  182
配置Jenkins  185
Jenkins自动化配置  188
Jenkins安全配置  189
插件管理  190
版本控制系统  191
设置Jenkins job  191
理解持续交付  198
持续交付的诉求  198
持续交付与持续部署  199
本章小结  199
10  应用容器化  201
Docker介绍  201
关于Docker和虚拟化的一些事实  202
Docker Engine——Docker的骨干  202
配置Docker环境  203
Docker Swarm  206
在Docker中部署应用  210
构建和运行MongoDB Docker服务  211
Docker Hub是用来干什么的  214
Docker Compose  221
本章小结  223
11 部署到AWS云平台  225
AWS入门  225
在AWS上构建应用程序基础架构  227
生成认证密钥  229
Terraform——基础设施即代码构建工具  233
CloudFormation——构建基础设施即代码的AWS工具  244
云原生应用的持续部署  251
工作原理  252
本章小结  259
12  部署到Azure云平台  261
Microsoft Azure入门  261
Microsoft Azure基本知识  263
在Azure中创建虚拟机  265
在Azure中使用Jenkins CI/CD流水线  280
本章小结  285
13  监控云应用  287
云平台上的监控  287
基于AWS的服务  288
CloudWatch  288
CloudTrail  293
AWS Config service  294
Microsoft Azure服务  296
Application Insights  296
ELK技术栈介绍  299
开源监控工具  305
Prometheus  305
本章小结  308
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python云原生：构建应对海量用户数据的高可扩展Web应用
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>跟老齐学Python：数据分析
第0章  数据分析概述  1
0.1  与数据相关的概念  1
0.2  数据分析技术的发展  3
0.3  开发环境配置  5
第1章  NumPy基础和应用  9
1.1  数组对象基础  9
1.2  数组的索引和切片  25
1.3  针对数组的操作  36
1.4  运算和通用函数  46
1.5  简单统计应用  53
1.6  矩阵  57
1.7  矢量运算  60
1.8  综合应用示例  68
第2章  Pandas基础和应用  75
2.1  常用数据对象  75
2.2  索引对象  88
2.3  数据索引和切片  95
2.4  文件读写操作  107
2.5  处理缺失数据  116
2.6  规整数据  121
2.7  分组运算  141
2.8  矢量化字符串  158
2.9  与时间相关的操作  161
2.10  简单的应用示例  174
第3章  数据可视化  179
3.1  Matplotlib概览  179
3.2  设置坐标系  186
3.3  绘制图像  197
3.4  常用统计图  211
3.5  绘制三维图像  225
3.6  Seaborn掠影  231
第4章  综合应用  235
4.1  分析股票数据  235
4.2  分析文胸评论数据  245
4.3  分析电影票房数据  249
4.4  可视化城市人口数据  253
4.5  分析希腊葡萄酒数据  259
4.6  应用本福特定律  273
4.7  制作词云  278
第5章  机器学习  283
5.1  线性回归  283
5.2  线性回归示例  299
5.3  Logistic回归  304
5.4  贝叶斯方法  314
跋  324
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>跟老齐学Python：数据分析
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>自动化平台测试开发：Python测试开发实战
第1 章 Python 零基础入门  1
1.1 Python 介绍  1
1.2 环境搭建  1
1.2.1 安装JDK 1.7  2
1.2.2 安装Eclipse  2
1.2.3 安装配置Python 3  2
1.2.4 安装PyDev  3
1.2.5 配置PyDev  3
1.2.6 新建一个项目工程  5
1.3 基础知识  6
1.3.1 语句与语法  6
1.3.2 数据类型  7
1.3.3 运算符和表达式  8
1.3.4 变量和赋值  8
1.3.5 基本控制流程  8
1.3.6 类和对象  9
1.3.7 函数  9
1.3.8 模块导入和包导入  10
1.3.9 异常处理  10
1.4 实例讲解  10
1.4.1 文件操作实例  10
1.4.2 数据库操作实例  11
第2 章 Web 应用框架  13
2.1 介绍  13
2.2 环境搭建  13
2.3 Django 开发入门  14
2.3.1 创建项目  15
2.3.2 启动服务  15
2.3.3 创建应用  18
2.3.4 创建视图  19
2.3.5 创建映射  19
2.3.6 创建模板  20
2.4 MySQL 数据库使用  21
第3 章 自动化平台开发  26
3.1 自动化平台开发方案  26
3.1.1 功能需求  26
3.1.2 技术知识点  27
3.1.3 开发时间计划  28
3.1.4 投资回报率可视化（见表3.2）  28
3.1.5 后期优化计划  29
3.2 登录功能实现  29
3.3 退出功能实现  33
3.4 权限功能操作  34
3.5 产品管理模块开发  36
3.5.1 产品管理数据库设计  36
3.5.2 产品管理功能后台开发  36
3.5.3 产品管理功能前端开发  37
3.6 接口自动化模块开发  40
3.6.1 接口管理数据库设计  40
3.6.2 流程接口管理功能后台开发  41
3.6.3 流程接口展示功能前端开发  47
3.6.4 单一接口管理功能后台开发  52
3.6.5 单一接口展示功能前端开发  54
3.7 Bug 管理模块开发  57
3.7.1 Bug 管理数据库设计  57
3.7.2 Bug 管理后端开发  57
3.7.3 Bug 管理前端开发  58
3.8 系统设置模块开发  60
3.8.1 系统设置数据库设计  60
3.8.2 系统设置后台开发  61
3.8.3 系统设置前端开发  62
3.9 App 自动化模块开发  66
3.9.1 App 用例管理数据库设计  66
3.9.2 App 用例管理功能后台开发  67
3.9.3 App 用例管理功能前端开发  70
3.10 Web 自动化模块开发  74
3.10.1 Web 用例管理数据库设计  74
3.10.2 Web 用例管理功能后台开发  75
3.10.3 Web 用例管理功能前端开发  78
3.11 测试报告模块前端开发  81
3.11.1 单一接口测试报告  81
3.11.2 流程接口测试报告  83
3.11.3 AppUI 测试报告  98
3.11.4 WebUI 测试报告  105
3.12 自动化平台前端优化  109
3.12.1 HTML 简要知识  109
3.12.2 主页面优化1  110
3.12.3 前端搜索功能实现  129
3.12.4 前端翻页功能实现  135
3.12.5 数据统计功能实现  150
3.12.6 添加数据功能实现  153
3.12.7 编辑数据功能实现  159
3.12.8 删除数据功能实现  161
3.12.9 主页面优化2  164
3.12.10 主页面优化3  167
3.12.11 主页面优化4  171
第4 章 正则表达式  178
4.1 为什么要用正则表达式  178
4.2 正则表达式元字符及其作用  178
4.3 正则表达式字符串匹配示例  179
4.4 Python 正则表达式使用介绍  180
4.5 正则表达式源码详解  180
4.5.1 正则表达式实例1  180
4.5.2 正则表达式实例2  181
4.5.3 正则表达式实例3  182
第5 章 单元测试  183
5.1 Unittest 单元测试  183
5.2 Django 单元测试  185
第6 章 接口自动化测试  188
6.1 接口概述  188
6.1.1 接口示例  188
6.1.2 接口工具  189
6.1.3 JSON 数据  189
6.1.4 接口文档  189
6.2 接口测试用例设计  190
6.3 环境准备  191
6.4 接口自动化测试源码详解  192
6.4.1 接口自动化测试实例1  192
6.4.2 接口自动化测试实例2  195
第7 章 App 自动化测试  204
7.1 概述  204
7.2 风险分析  204
7.3 软硬件需求  205
7.4 测试计划  205
7.5 Appium 移动自动化框架  206
7.6 环境搭建  210
7.7 App 自动化测试源码详解  213
7.7.1 App 自动化测试实例1  213
7.7.2 App 自动化测试实例2  214
第8 章 Web 自动化测试  218
8.1 Selenium 介绍  218
8.2 环境搭建  219
8.3 Web 自动化测试源码详解  219
8.3.1 Web 自动化测试实例1  219
8.3.2 Web 自动化测试实例2  221
第9 章 性能测试  226
9.1 环境搭建  226
9.2 使用入门  227
第10 章 持续集成  230
10.1 介绍  230
10.2 系统配置  233
10.3 项目配置  235
10.4 多机器节点配置  240
10.5 结果展示视图  242
第11 章 定时任务开发  244
11.1 环境搭建  244
11.2 前端功能实现  247
11.3 定时任务测试源码  253
11.3.1 接口扫描自动化测试源码  253
11.3.2 流程接口自动化测试源码  258
11.3.3 App 自动化测试源码  265
11.3.4 Web 自动化测试源码  266
11.4 定时任务调用  267
附录A 常用软件安装包链接  270
附录B Autotestplat 使用指南  272
后记  274
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>自动化平台测试开发：Python测试开发实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python程序设计案例教程
第 1章 入门　1
1.1　Python 的发展历程　1
1.2　为什么使用Python　2
1.3　Python 可以做些什么　4
1.4　Python 的优点　7
1.5　Python 和其他语言的比较　11
1.6　项目开始　14
1.6.1　Python 版本差异　14
1.6.2　项目结构　18
1.6.3　编码风格与自动检查　19
1.7　本章小结　21
1.8　本章习题　21
第 2章　数据类型　22
2.1　标识符与关键字　22
2.2　Integral 类型　23
2.2.1　整数类型　24
2.2.2　布尔型　25
2.3　浮点类型　26
2.3.1　浮点数　26
2.3.2　复数　27
2.3.3　十进制数字　27
2.4　字符串　28
2.4.1　字符串的类型　28
2.4.2　字符串的比较　29
2.4.3　字符串的方法　29
2.4.4　字符串格式化　32
2.4.5　字符串操作　38
2.4.6　字符串与控制语句　40
2.4.7　字符串的应用　41
2.5　本章小结　42
2.6　本章习题　43
第3章　组合数据类型　44
3.1　列表　45
3.1.1　列表的常用操作　45
3.1.2　列表的常用函数　49
3.2　元组　50
3.2.1　元组与列表的区别　50
3.2.2　元组的常用操作　51
3.2.3　元组的常用函数　53
3.3　字典　53
3.3.1　字典的常用操作　53
3.3.2　字典的常用函数　56
3.4　集合　59
3.4.1　集合的常用操作　59
3.4.2　集合的常用函数　62
3.5　组合数据类型的特性　62
3.5.1　切片　62
3.5.2　迭代　64
3.5.3　列表生成式　66
3.5.4　生成器　67
3.5.5　迭代器　73
3.6　本章小结　74
3.7　本章习题　75
第4章　控制语句与函数　76
4.1　控制语句　76
4.1.1　条件分支　76
4.1.2　循环　80
4.2　函数　85
4.2.1　调用函数　86
4.2.2　定义函数　88
4.2.3　函数的参数　90
4.2.4　递归函数　97
4.3　本章小结　102
4.4　本章习题　102
第5章　模块和包　104
5.1　为什么使用模块　104
5.2　模块的创建与使用　105
5.2.1　Python 程序架构　105
5.2.2　模块搜索路径　108
5.2.3　模块导入语句　109
5.2.4　模块命名空间　115
5.2.5　reload　118
5.3　包导入实例　119
5.4　本章小结　121
5.5　本章习题　122
第6章　类和继承　123
6.1　类和对象　123
6.2　实例属性和类属性　126
6.3　类的方法　128
6.4　构造函数　130
6.5　析构函数　131
6.6　运算符的重载　132
6.7　继承　140
6.8　本章小结　147
6.9　本章习题　147
第7章　文件和I/O　149
7.1　文件基础知识　149
7.1.1　什么是文件　149
7.1.2　文件的打开或创建　149
7.1.3　字符编码　151
7.1.4　文件的写入　152
7.1.5　文件的读取　155
7.1.6　文件基础知识的应用　159
7.2　文件操作　164
7.2.1　常用的文件操作函数　164
7.2.2　文件的复制　165
7.2.3　文件的删除　166
7.2.4　文件的重命名　166
7.2.5　文件的比较　168
7.3　目录操作　169
7.3.1　目录的创建　169
7.3.2　目录的删除　170
7.3.3　目录的遍历　170
7.4　本章小结　173
7.5　本章习题　174
第8章　程序开发进阶　175
8.1　面向对象程序设计进阶　175
8.1.1　控制属性存取　176
8.1.2　函子　177
8.1.3　上下文管理器　178
8.1.4　描述符　180
8.1.5　抽象基类　184
8.1.6　多继承　187
8.1.7　元类　188
8.2　函数式编程　190
8.2.1　高阶函数　191
8.2.2　闭包　192
8.2.3　匿名函数　193
8.2.4　修饰器　194
8.2.5　偏函数　196
8.3　多线程编程　197
8.3.1　多线程的编程动机　197
8.3.2　进程和线程　197
8.3.3　线程与Python　198
8.3.4　thread 模块　199
8.3.5　threading 模块　199
8.3.6　图书销量排名示例　204
8.4　本章小结　205
8.5　本章习题　206
第9章　调试及异常　207
9.1　调试　207
9.1.1　处理错误　207
9.1.2　科学的调试　209
9.2　Python 中的异常类　216
9.2.1　什么是异常　216
9.2.2　异常的角色　216
9.2.3　Python 的一些内建异常类　217
9.3　捕获和处理异常　217
9.3.1　try…except…语句　217
9.3.2　try…except…else…语句　218
9.3.3　带有多个except 的try 语句　218
9.3.4　捕获所有异常　219
9.3.5　finally 子句　219
9.4　两种处理异常的特殊方法　223
9.4.1　assert 语句　223
9.4.2　with…as 语句　225
9.5　raise 语句　226
9.5.1　raise 语句　226
9.5.2　raise…from 语句　226
9.6　采用sys 模块回溯**后的异常　227
9.6.1　关于sys.exc_info　227
9.6.2　使用sys 模块的例子　227
9.7　本章小结　228
9.8　本章习题　228
第 10章　正则表达式　229
10.1　简介　229
10.2　简单模式　230
10.2.1　字符匹配　230
10.2.2　重复　231
10.3　使用正则表达式　232
10.3.1　编译正则表达式　232
10.3.2　反斜杠带来的麻烦　232
10.3.3　执行匹配　233
10.3.4　模块级函数　234
10.3.5　编译标志　234
10.4　更多模式功能　236
10.4.1　更多的元字符　236
10.4.2　分组　237
10.4.3　无捕获组和命名组　238
10.4.4　前向界定符　240
10.5　修改字符串　241
10.5.1　将字符串分片　241
10.5.2　搜索与替换　242
10.6　常见问题　242
10.6.1　使用字符串的方法　243
10.6.2　match()方法与search()方法的比较　243
10.6.3　贪婪vs 不贪婪　243
10.6.4　使用re.VERBOSE　244
10.7　本章小结　245
10.8　本章习题　245
第 11章　网络编程　248
11.1　网络编程　248
11.1.1　客户端/服务器架构　248
11.1.2　套接字　250
11.1.3　Python 中的网络编程　252
11.1.4　socketserver 模块　260
11.2　因特网应用层客户端　262
11.2.1　文件传输　262
11.2.2　网络新闻　266
11.2.3　电子邮件　269
11.3　Python 网络编程实例　278
11.4　本章小结　280
11.5　本章习题　280
第 12章　应用实例　281
12.1　网络爬虫　281
12.1.1　基础知识　281
12.1.2　Urllib 库　282
12.1.3　Cookie　287
12.1.4　正则表达式　289
12.1.5　实例分析——百度贴吧抓取　295
12.2　数据处理　297
12.2.1　数据处理的基本概念　297
12.2.2　相关类库的介绍　297
12.2.3　数据处理常用技术　298
12.2.4　Pandas 学习与实战　309
12.3　基于Django 的Web 开发　313
12.3.1　Django 简介及安装　313
12.3.2　Django 安装　314
12.3.3　第 一个Django 项目　316
12.3.4　搭建一个简易的博客网站　318
12.4　本章小结　348
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python程序设计案例教程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据可视化之matplotlib实践
第1篇  入门
第1章  使用函数绘制matplotlib的图表组成元素  2
1.1  绘制matplotlib图表组成元素的主要函数  2
1.2  准备数据  3
1.3  绘制matplotlib图表组成元素的函数用法  4
1.3.1  函数plot()——展现变量的趋势变化  4
1.3.2  函数scatter()——寻找变量之间的关系  5
1.3.3  函数xlim()——设置x轴的数值显示范围  6
1.3.4  函数xlabel()——设置x轴的标签文本  7
1.3.5  函数grid()——绘制刻度线的网格线  8
1.3.6  函数axhline()——绘制平行于x轴的水平参考线  9
1.3.7  函数axvspan()——绘制垂直于x轴的参考区域  11
1.3.8  函数annotate()——添加图形内容细节的指向型注释文本  12
1.3.9  函数text()——添加图形内容细节的无指向型注释文本  13
1.3.10  函数title()——添加图形内容的标题  15
1.3.11  函数legend()——标示不同图形的文本标签图例  16
1.4  函数组合应用  17
第2章  使用统计函数绘制简单图形  20
2.1  函数bar()——用于绘制柱状图  20
2.2  函数barh()——用于绘制条形图  22
2.3  函数hist()——用于绘制直方图  23
2.4  函数pie()——用于绘制饼图  25
2.5  函数polar()——用于绘制极线图  26
2.6  函数scatter()——用于绘制气泡图  27
2.7  函数stem()——用于绘制棉棒图  29
2.8  函数boxplot()——用于绘制箱线图  30
2.9  函数errorbar()——用于绘制误差棒图  31
第3章  绘制统计图形  33
3.1  柱状图  33
3.1.1  应用场景——定性数据的分布展示  33
3.1.2  绘制原理  33
3.2  条形图  35
3.3  堆积图  37
3.3.1  堆积柱状图  37
3.3.2  堆积条形图  38
3.4  分块图  39
3.4.1  多数据并列柱状图  40
3.4.2  多数据平行条形图  41
3.5  参数探索  42
3.6  堆积折线图、间断条形图和阶梯图  44
3.6.1  用函数stackplot()绘制堆积折线图  44
3.6.2  用函数broken_barh ()绘制间断条形图  45
3.6.3  用函数step()绘制阶梯图  47
3.7  直方图  48
3.7.1  应用场景——定量数据的分布展示  48
3.7.2  绘制原理  49
3.7.3  直方图和柱状图的关系  50
3.7.4  堆积直方图  51
3.7.5  直方图的不同形状  53
3.8  饼图  55
3.8.1  应用场景——定性数据的比例展示  55
3.8.2  绘制原理  55
3.8.3  延伸阅读——非分裂式饼图  57
3.8.4  案例——绘制内嵌环形饼图  58
3.9  箱线图  60
3.9.1  应用场景——多组定量数据的分布比较  60
3.9.2  绘制原理  61
3.9.3  延伸阅读——箱体、箱须、离群值的含义和计算方法  63
3.9.4  案例1——水平方向的箱线图  65
3.9.5  案例2——不绘制离群值的水平放置的箱线图  66
3.10  误差棒图  67
3.10.1  应用场景——定量数据的误差范围  67
3.10.2  绘制原理  68
3.10.3  案例1——带误差棒的柱状图  69
3.10.4  案例2——带误差棒的条形图  71
3.10.5  案例3——带误差棒的多数据并列柱状图  72
3.10.6  案例4——带误差棒的堆积柱状图  74
第4章  完善统计图形  77
4.1  添加图例和标题  77
4.1.1  图例和标题的设置方法  77
4.1.2  案例1——图例的展示样式的调整  79
4.1.3  案例2——标题的展示样式的调整  80
4.1.4  案例3——带图例的饼图  82
4.2  调整刻度范围和刻度标签  83
4.2.1  调整刻度范围和刻度标签的方法  84
4.2.2  延伸阅读——函数subplot()  85
4.2.3  案例——逆序设置坐标轴刻度标签  86
4.3  向统计图形添加表格  87
第2篇  精进
第5章  统计图形绘制进阶：图形样式  92
5.1  设置坐标轴的刻度样式  92
5.1.1  刻度定位器和刻度格式器的使用方法  92
5.1.2  调用模块pyplot中的函数实现刻度样式的设置  95
5.1.3  案例1——刻度标签和刻度线样式的定制化  95
5.1.4  案例2——货币和时间序列样式的刻度标签  96
5.2  添加有指示注解和无指示注解  98
5.2.1  有指示注解和无指示注解的添加方法  98
5.2.2  案例1——圆角文本框的设置  100
5.2.3  案例2——文本的水印效果  101
5.2.4  案例3——圆角线框的有弧度指示的注解  102
5.2.5  案例4——有箭头指示的趋势线  104
5.2.6  案例5——桑基图  105
5.3  实现标题和坐标轴标签的投影效果  107
5.3.1  实现标题和坐标轴标签的投影效果的操作方法  107
5.3.2  案例——给坐标轴标签添加文本框  109
第6章  划分画布的主要函数  111
6.1  函数subplot()：绘制网格区域中的几何形状相同的子区布局  111
6.1.1  函数subplot()的使用方法  112
6.1.2  案例1——在极坐标轴上绘制折线图  113
6.1.3  案例2——在极坐标轴上绘制散点图  114
6.1.4  案例3——在非等分画布的绘图区域上实现图形展示  115
6.2  函数subplot2grid()：让子区跨越固定的网格布局  116
6.2.1  函数subplot2grid()的使用方法  116
6.2.2  延伸阅读——模块gridspec中的类GridSpec的使用方法  118
6.3  函数subplots()：创建一张画布带有多个子区的绘图模式  120
6.3.1  案例1——创建一张画布和一个子区的绘图模式  120
6.3.2  案例2——创建一张画布和两个子区的绘图模式  122
6.3.3  案例3——多种统计图形的组合展示  124
第7章  共享绘图区域的坐标轴  128
7.1  共享单一绘图区域的坐标轴  128
7.2  共享不同子区绘图区域的坐标轴  130
7.2.1  设置方法  130
7.2.2  案例——将共享坐标轴的子区之间的空隙去掉  135
7.3  共享个别子区绘图区域的坐标轴  136
7.3.1  设置方法  136
7.3.2  延伸阅读——用函数autoscale()调整坐标轴范围  138
第3篇  演练
第8章  坐标轴高阶应用  142
8.1  设置坐标轴的位置和展示形式  142
8.1.1  案例1——向画布中任意位置添加任意数量的坐标轴  142
8.1.2  案例2——调整已经确定的坐标轴的显示、隐藏与刻度范围等问题  144
8.1.3  延伸阅读——使用函数axis()绘制坐标轴  145
8.2  使用两种方法控制坐标轴刻度的显示  146
8.2.1  方法1——调用Axes.set_xticks()和Axes.set_yticks()实例方法  146
8.2.2  方法2——调用函数setp()  147
8.2.3  案例1——棉棒图的定制化展示  149
8.2.4  案例2——坐标轴的样式和位置的定制化展示  150
8.3  控制坐标轴的显示  152
8.4  移动坐标轴的位置  154
第9章  设置线条类型和标记类型的显示样式  158
9.1  不同调用签名形式的字典使用方法  158
9.1.1  方法1——调用签名中的关键字参数的设置形式“fontdict=font”  158
9.1.2  方法2——关键字参数的设置形式“**font”  160
9.2  线条类型的显示样式设置方法  161
9.3  标记类型的显示样式设置方法  162
9.3.1  方法1——单一字符模式  162
9.3.2  方法2——mathtext模式  164
9.4  延伸阅读  166
9.4.1  案例1——“破折号”线条样式的不同展现形式的设置方法  166
9.4.2  案例2——标记填充样式的设置方法  168
9.4.3  案例3——函数plot()的调用签名的设置方法  170
第4篇  拓展
第10章  matplotlib的配置  174
10.1  修改代码层面的matplotlib的配置  174
10.1.1  方法1——调用函数matplotlib.rc()  175
10.1.2  方法2——调用属性字典matplotlib.rcParams  175
10.2  修改项目层面的matplotlib配置  176
10.2.1  配置文件所在路径  176
10.2.2  设置方法  177
第11章  文本属性设置  179
11.1  设置字体属性和文本属性  179
11.1.1  方法1——改变配置文件matplotlibrc的字体属性值和文本属性值  181
11.1.2  方法2——通过属性字典rcParams调整字体属性值和文本属性值  182
11.1.3  方法3——通过设置函数的关键字参数  183
11.2  延伸阅读——手动添加字体  184
11.3  案例——字体主要属性的可视化展示  185
第12章  颜色使用  188
12.1  使用颜色参数和颜色映射表  188
12.1.1  颜色参数的使用  188
12.1.2  颜色映射表的使用  190
12.2  综合案例  193
12.2.1  案例1——模拟图的颜色使用模式  193
12.2.2  案例2——散点图的颜色使用模式  194
12.2.3  案例3——极区图的颜色使用模式  195
12.2.4  案例4——等高线图的颜色使用模式  197
12.2.5  案例5——颜色标尺的颜色使用模式  198
第13章  输出图形的展示和保存  200
13.1  运行命令行展示输出图形  200
13.1.1  方法1——Python shell模式  200
13.1.2  方法2——IPython shell模式  203
13.2  保存输出图形  205
13.2.1  方法1——使用“保存”按钮进行存储  205
13.2.2  方法2——通过执行代码语句进行保存  207
附录A  Python基础知识  208
附录B  NumPy基础知识  213
附录C  matplotlib、NumPy和IPython的安装方法  217
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据可视化之matplotlib实践
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python大數據特訓班
CH01 建置Python開發環境
Python可在多種平台開發執行，本書以Windows系統做為開發平台。
CH02 大數據資料爬取與分析
大數據的時代來臨，存在於網路中的巨量資料就成為收集時的重要來源。Python程式能透過低成本、自動化的方式由網路中爬取大量而有效的資料，對於資料科學家來說是相當重要的技巧。
CH03 數據資料視覺化
視覺化的圖表可以將複雜的數據簡化成為易於吸收的內容，也加快了人們對於數據理解、消化與決策
的時間。
CH04 數據資料儲存與讀取
跨入大數據領域時除了要加強擷取資料的技巧，面對大量資料的儲存與讀取，更是應用時重要的關鍵。在本章中將介紹Python在資料儲存與讀取時不能錯過的選擇：檔案、CSV、Excel、SQLite、MySQL，以及Google試算表。
CH05 實戰：批次下載YouTube影片
許多人會將相同主題或是有關聯的影片整理在一個播放清單中，因為影片的數量眾多，如果一個一個下載，將耗費相當多時間。本專題的重點即是在分析網頁清單中的影片網址後，完成批次下載所有清單中影片的工作。
CH06 實戰：運動相簿下載
我們希望在運動賽事的網站上下載某項活動相簿裡的大量照片儲存在本機中。在過程中除了要精準分析網頁中的所需要的資料，也要突破網站為了主機的效能，以分批載入圖片的方式，對自動化下載資料所造成的阻礙。
CH07 實戰：台灣股票市場個股分析統計圖
股票市場強調公開、透明，幾乎所有股票資訊皆可在台灣證券交易所取得。但是，有許多資料提供的方式或格式，並不一定符合每個人的需求。如何在擷取資料後進行收集分析，最後再執行資料視覺化的動作，是許多人關心的話題。本專題將擷取台灣證券交易所日成交資料，先以單月的資料繪製統計圖，最後再集合全年12個月的資料後，繪製全年統計圖。
CH08 實戰：用LINE傳送即時股價
本專題設計的重點是利用程式在規定的間隔時間重複讀取指定股票的價格，當股價到達設定價錢時會自動以LINE的訊息通知使用者。如此一來，投資人只要設定好交易的價格，程式即會自動幫忙檢查，即使不看盤也不會錯過交易的最佳時機。
CH09 實戰：網路書店新書排行榜
本專題的對象是網路書店的每日新書排行榜，因為書籍有不同的目錄分類，所以排行榜在呈現上是分散在不同的頁面上，本專題的重點是利用程式在多分類、多頁面的架構下，逐一讀取每一個分頁中的相關書籍資訊進行整理，並將結果儲存到Excel檔案中。
CH10 實戰：米其林餐廳指南下載
本專題的重點就是希望能應用Python程式先由主頁面進行基本資料的爬取，再逐一進入每間餐廳的詳細頁面中取得詳細資料，最後再將取得的資料儲存到雲端的Google試算表中。
CH11 實戰：鄉鎮市區天氣預報及建立API
本專題的第一個重點是如何擷取氣象局鄉鎮地區的氣象資訊，並在整理後儲存於自行架設的MySQL資料庫中，如此一來使用者就能利用到自己的系統上。另外，為了使儲存資料能再讓其他平台使用，第二個重點即是利用免費伺服器資源將資料以API的方式以JSON的格式發佈在網路上，讓其他人可以串接進行利用。
CH12 實戰：高鐵訂票快手
網路訂票已漸漸成為生活的一部份，無論是演唱會門票或是交通的車票，許多人都喜歡利用網路即時
又方便的特性，來完成購買動作。不過一旦遇到特別的時刻或購買的人數眾多，常會造成網路塞車，就無法順利購票。本專題中的重點，就是要利用Python程式自動操作電腦，完成網路訂票的動作。因為網路訂票的流程中會有相當多人工操作的部份，如表單資料的填寫，按鈕的點選，以及驗證圖片的識別，對於Python自動化的操作，是難度相當高的挑戰。

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python大數據特訓班
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python量化交易实战
目 录
第1章 走进量化投资 1
1.1 量化投资的诞生背景 1
1.2 量化投资的特点 3
1.3 量化投资的应用 5
1.4 量化投资在我国股市的发展前景 6
1.5 小结 6
第2章 Python的安装与使用 7
2.1 Python的基本安装和用法 7
2.1.1 Anaconda的下载与安装 8
2.1.2 Python编译器PyCharm的安装 11
2.1.3 使用Python计算softmax函数 14
2.2 Python常用类库中的threading 15
2.2.1 threading库的使用 16
2.2.2 threading模块中最重要的Thread类 16
2.2.3 threading中的Lock类 18
2.2.4 threading中的join类 19
2.3 小结 19
第3章 Python类库的使用——数据处理及可视化展示 20
3.1 从小例子起步——NumPy的初步使用 20
3.1.1 数据的矩阵化 20
3.1.2 数据分析 22
3.1.3 基于统计分析的数据处理 24
3.2 图形化数据处理——Matplotlib包的使用 24
3.2.1 差异的可视化 24
3.2.2 坐标图的展示 25
3.2.3 大规模数据的可视化 27
3.3 常用的统计分析方法——相似度计算 30
3.3.1 基于欧几里得距离的相似度计算 30
3.3.2 基于余弦角度的相似度计算 31
3.3.3 欧几里得相似度与余弦相似度的比较 32
3.4 数据的统计学可视化展示 33
3.4.1 数据的四分位 33
3.4.2 数据的四分位示例 34
3.4.3 数据的标准化 37
3.4.4 数据的平行化处理 39
3.4.5 热点图-属性相关性检测 41
3.5 Python实战：某地降雨的关系处理 42
3.5.1 不同年份的相同月份统计 42
3.5.2 不同月份之间的增减程度比较 44
3.5.3 每月的降水量是否相关 45
3.6 小结 46
第4章 欢迎来到掘金量化 47
4.1 基础工作 47
4.1.1 安装掘金终端 47
4.1.2 获取帮助 49
4.2 实战：使用掘金终端进行回测工作 51
4.2.1 创建第一个策略 51
4.2.2 运行回测 52
4.2.3 查看回测结果 54
4.2.4 使用PyCharm进行回测 55
4.3 小结 59
第5章 Talib金融库使用详解 60
5.1 Talib金融工具库的介绍 60
5.1.1 使用Talib获取3日、7日、15日均线 60
5.1.2 EMA的计算 62
5.1.3 MACD的计算 64
5.1.4 MACD斜率的计算方法 66
5.1.5 使用Talib实现国内金融数据指标 67
5.2 Talib金融工具库函数 69
5.2.1 Talib常用函数介绍 73
5.2.2 Talib图像形态识别 75
5.3 实战：Talib金融工具回测实战 83
5.3.1 根据MACD变化回测2017年盈利情况 84
5.3.2 股价的波动范围及未来走势判定 90
5.4 两种经典的轨道突破策略 92
5.4.1 Dual Thrust策略 92
5.4.2 Dynamic Breakout II策略 96
5.5 小结 99
第6章 多因子策略 100
6.1 一个奇怪的问题 100
6.1.1 因子是什么 101
6.1.2 选取因子 102
6.1.3 单因子选股轮动测试 105
6.2 因子的量化选择 108
6.2.1 基于IC值的多因子计算方法 109
6.2.2 基于IC值的多因子计算方法（续） 110
6.2.3 因子IC值计算的目标，等权法因子值的合成 114
6.3 实战：基于成长因子的模型测试 116
6.3.1 模型说明 116
6.3.2 使用模型进行回测 125
6.4 霍华?罗斯曼的投资模型 127
6.4.1 霍华?罗斯曼简介 127
6.4.2 霍华?罗斯曼的投资模型 127
6.4.3 对霍华?罗斯曼模型的分析 128
6.5 小结 131
第7章 带技术指标的多因子策略 132
7.1 技术面多因子介绍 132
7.1.1 101个技术因子 132
7.1.2 基于Talib的技术因子重写 136
7.1.3 一个基于放量技术因子策略的回测 140
7.2 较为复杂的技术因子 143
7.2.1 阻力支撑相对强度因子介绍 143
7.2.2 改进的RSRS因子与回测数据 146
7.2.3 价差偏离度因子介绍 148
7.3 简单的技术性因子—波动率因子 151
7.3.1 波动率因子介绍 151
7.3.2 更多的波动率因子 155
7.4 实战：一个回测成功率100%的中长线买卖例子 158
7.4.1 技术指标的设计 159
7.4.2 回测的设计 164
7.5 小结 166
第8章 人人都是基金经理——中证红利指数增强策略 167
8.1 中证红利指数基金介绍 167
8.1.1 红利指数基金的由来 168
8.1.2 中证红利简介 168
8.2 基于中证红利的指数增强基金策略的构建 169
8.2.1 中证红利策略的构建方法 170
8.2.2 策略回测与优化 173
8.3 小结 173
第9章 掘金量化——回归分析基础 175
9.1 回归分析基础 175
9.1.1 回归法简介 176
9.1.2 一元线性回归 176
9.1.3 多元线性回归 179
9.1.4 回归法的解法——最小二乘法详解 180
9.2 回归分析的一些其他计算方法 183
9.2.1 梯度下降算法与使用TensorFlow计算线性回归 183
9.2.2 线性回归的姐妹——逻辑回归 189
9.3 实战：回归分析——短时间开盘价与收盘价之间的关系 190
9.3.1 量化策略基本思路与简单实现 190
9.3.2 使用掘金量化实现回测 192
9.4 买还是卖——逻辑回归帮你做决定 196
9.4.1 逻辑回归是一种分类算法 196
9.4.2 逻辑回归的TensorFlow实现 197
9.4.3 使用TensorFlow的逻辑回归进行回测 201
9.5 机器学习策略——支持向量机 203
9.5.1 支持向量机的基本概念 203
9.5.2 使用支持向量机进行回测 204
9.6 小结 208
第10章 回归模型的经典应用 209
10.1 CAPM模型简介 210
10.1.1 CAPM定价模型的提出 210
10.1.2 CAPM定价模型的公式与假设 211
10.1.3 CAPM中Beta的定义 212
10.2 Fama-French三因子模型 213
10.2.1 Fama-French模型的基础公式 214
10.2.2 Fama-French模型的实现与回测 215
10.3 PB-ROE回归模型的使用 220
10.3.1 PB-ROE模型介绍 220
10.3.2 PB-ROE模型的实现 221
10.3.3 基于上证180的股票回测 226
10.3.4 使用自定义股票池的PB-ROE回测 232
10.4 小结 242
第11章 配对交易的魔力 243
11.1 配对交易的基本理论 243
11.1.1 相关性分析 244
11.1.2 均值、方差与协方差 246
11.2 协整性的判定与检验 248
11.2.1 协整性 248
11.2.2 平稳性的检验方法 249
11.3 配对交易 253
11.3.1 配对交易的算法 253
11.3.2 提取股票的相关性 254
11.3.3 协整系数的计算方法 257
11.4 配对交易的魔力 263
11.4.1 前期计算 263
11.4.2 协整性判断 265
11.4.3 使用量化掘金回测系统对结果进行判定 266
11.5 小结 270
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python量化交易实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>编程导论——以Python为舟
第1章初探编程之境
1.1计算机编程的基本概念
1.1.1编程如何解决问题
1.1.2解决鸡兔同笼问题的编程思维
1.1.3解决排序与合并问题的编程思维
1.1.4解决过河问题的编程思维
1.1.5程序的基本要素
1.2乘Python之舟进入计算机语言的世界
1.2.1什么是Python
1.2.2如何在Windows中使用Python
1.3解释a=a+3
1.3.1介绍变量
1.3.2关于a=a+3
1.3.3常用算术运算符
1.4介绍数据类型
1.4.1布尔类型
1.4.2列表
1.4.3字符串
1.5学习Python的控制语句
1.5.1条件控制语句——if语句
1.5.2循环控制语句——for循环
1.5.3循环控制语句——while循环
习题
第2章巩固编程基础
2.1再谈Python的循环控制语句
2.1.1遍历加积累的循环结构
2.1.2以不同编程方式解决相同问题
2.1.3for与while循环的比较
2.1.4中国余数定理的循环实现
2.2函数的简介
2.2.1什么是函数
2.2.2函数的创建与调用
2.2.3几种常用的内置函数
2.3探讨编程思路
2.3.1以多项式运算为例
2.3.2编程思路的总结
2.4讨论循环中的一些技巧
2.4.1讨论“for i in range()：”结构
2.4.2讨论“for e in L：”结构，L为一个列表
2.5活学活用——运行Python解决问题
2.5.1几种简单的排序算法及衍生问题
2.5.2二进制、十进制等进制之间的转换问题
2.5.3扑克牌游戏——21点
2.5.4老虎机游戏
习题
第3章深谈Python函数、变量与输入输出
3.1深入了解函数的各种性质
3.1.1编写完美函数
3.1.2参数与返回值
3.1.3局部变量与全局变量
3.1.4嵌套函数
3.1.5参数类型
3.2再谈序列与字典数据类型
3.2.1列表与元组
3.2.2字符串
3.2.3字典
3.3关于Python数据类型的注意事项
3.3.1可变与不可变类型的讨论
3.3.2参数的传递问题
3.3.3默认参数的传递问题(可选)
3.4深入探讨列表的常用操作与开销
3.4.1添加列表元素的讨论
3.4.2删除列表元素的讨论
3.4.3生成列表的一些技巧
3.5输入输出、文件操作与异常处理
3.5.1输入
3.5.2输出
3.5.3文件操作
3.5.4异常处理
习题
第4章探究递归求解的思维方式
4.1理解递归求解的思维方式
4.1.1递归的基本思路
4.1.2递归求解的例子
4.2用递归方式重温例题
4.2.1递归实现数列求和
4.2.2递归实现归并
4.2.3递归求解因数分解
4.3list、string内置函数的非递归与递归实现
4.3.1列表内置函数的实现
4.3.2字符串内置函数的实现
4.4四种不同的递归方式来解决排序问题
4.4.1选择排序
4.4.2插入排序
4.4.3快速排序
4.4.4归并排序
4.4.5四种排序方式的比较
习题
第5章熟练递归编程
5.1二分法求解问题
5.1.1什么是二分法
5.1.2在有序序列中使用二分法查找元素位置
5.1.3求解算术平方根
5.2求两个数的最大公因数
5.2.1因数分解法求最大公因数
5.2.2欧几里得算法求最大公因数
5.2.3讨论因数分解法与欧几里得算法的优劣
5.3中国余数定理问题
5.3.1介绍相关的基础知识
5.3.2中国余数定理问题的求解
5.4关于递归函数开销的讨论
5.4.1函数调用的开销
5.4.2参数传递过程中的开销
5.4.3重复计算的开销
5.5用递归思维解决线性方程组问题
5.6用各种编程方式解决排列问题
5.6.1全排列问题
5.6.2通用排列问题
5.7用各种编程方式解决组合问题
5.7.1在排列问题的解法上解决组合问题(解法一)
5.7.2非递归方式解决组合问题(解法二)
5.7.3特殊二分方式解决组合问题(解法三)
5.7.4循环递归方式解决组合问题(解法四)
习题
第6章智能是计算出来的
6.1老鼠走迷宫问题
6.2菜鸡狼过河问题
6.3AB猜数字游戏
6.424点游戏
6.5最后拿牌就输
习题
第7章面向对象编程与小乌龟画图
7.1初识面向对象编程
7.1.1什么是对象
7.1.2体会面向对象编程的优势
7.2面向对象中的概念
7.2.1类与对象
7.2.2Python中的__init__()方法
7.2.3self变量和pass关键字
7.2.4Python中“公有”和“私有”类型的定义方式
7.3了解面向对象的三大特性
7.3.1封装
7.3.2继承
7.3.3多态
7.4初识小乌龟
7.4.1小乌龟的属性
7.4.2基本图形的绘制
7.4.3递归图形的绘制
7.5多个小乌龟的动图绘制
7.5.1过河游戏
7.5.2小老鼠走迷宫
习题
第8章掌握编程的精华——算法
8.1深入浅出之算法
8.1.1算法时间复杂度分析
8.1.2图的基本介绍
8.2深度优先搜索
8.2.1何为深搜
8.2.2图的深搜
8.2.3拓扑排序问题
8.2.4一个有趣的迷宫例子
8.3最短路径问题
8.3.1有向无环图的最短路径问题
8.3.2权值非负的有环图的最短路径问题
8.4动态规划算法
8.4.1拦截导弹问题
8.4.2背包问题
8.4.3最短路径问题
习题
参考文献
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>编程导论——以Python为舟
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>跟老齐学Python：Django实战（第2版）
第1章  简单的博客系统  1
1.1  Django起步  1
1.1.1  Django简介  1
1.1.2  安装Django  3
1.1.3  创建项目  4
1.1.4  创建应用  6
1.1.5  网站配置  12
1.1.6  知识点  13
1.2  编写博客的数据模型类  13
1.2.1  数据模型类  14
1.2.2  发布博客文章  18
1.2.3  知识点  22
1.3  显示博客信息  24
1.3.1  显示文章标题  25
1.3.2  查看文章内容  30
1.3.3  知识点  33
第2章  用户管理  37
2.1  自定义模板和静态文件位置  37
2.1.1  自定义模板位置  38
2.1.2  自定义静态文件位置  38
2.1.3  通用静态文件和基础模板  39
2.1.4  重置管理后台模板  43
2.1.5  知识点  45
2.2  用户登录  46
2.2.1  创建应用  47
2.2.2  理解表单类  48
2.2.3  登录的视图函数  49
2.2.4  登录的前端界面  52
2.2.5  知识点  56
2.3  用内置方法实现登录和退出  58
2.3.1  内置的登录方法  58
2.3.2  判断用户是否登录  60
2.3.3  内置的退出方法  61
2.3.4  知识点  62
2.4  用户注册  64
2.4.1  简单注册  64
2.4.2  增加注册内容  67
2.4.3  管理新增的注册内容  71
2.4.4  知识点  72
2.5  关于密码的操作  74
2.5.1  修改密码  74
2.5.2  重置密码  79
2.5.3  知识点  85
2.6  维护个人信息  87
2.6.1  个人信息的数据模型类和表单类  87
2.6.2  展示个人信息  88
2.6.3  编辑个人信息  91
2.6.4  上传和裁剪头像图片  95
2.6.5  优化头像上传功能  103
2.6.6  对个人信息进行管理  106
2.6.7  知识点  107
第3章  文章管理和展示  109
3.1  管理文章栏目  109
3.1.1  设置栏目  109
3.1.2  编辑栏目  117
3.1.3  删除栏目  119
3.1.4  知识点  121
3.2  发布和显示文章  124
3.2.1  简单的文章发布  125
3.2.2  使用Markdown  130
3.2.3  文章标题列表  132
3.2.4  知识点  140
3.3  删除和修改文章  141
3.3.1  删除  141
3.3.2  修改  143
3.3.3  设置分页功能  147
3.3.4  知识点  149
3.4  文章展示  151
3.4.1  新写文章标题列表  151
3.4.2  重新编写“查看文章”功能  155
3.4.3  知识点  156
第4章  拓展网站功能  158
4.1  梳理已有功能  158
4.1.1  修改导航栏  158
4.1.2  修改登录和注册后的跳转  159
4.1.3  知识点  161
4.2  查看作者全部文章  162
4.2.1  查看某作者的文章列表  162
4.2.2  知识点  166
4.3  为文章点赞  167
4.3.1  修改数据模型类  167
4.3.2  编写视图函数  168
4.3.3  修改模板文件  169
4.3.4  知识点  173
4.4  文章的阅读次数  174
4.4.1  安装Redis  175
4.4.2  在Python中使用Redis  176
4.4.3  记录阅读次数  177
4.4.4  显示最“热”文章  178
4.4.5  知识点  180
4.5  文章的评论功能  181
4.5.1  数据模型类和表单类  181
4.5.2  实现评论功能  183
4.5.3  知识点  185
4.6  多样化显示  186
4.6.1  统计文章总数  187
4.6.2  最新发布的文章  190
4.6.3  评论最多的文章  191
4.6.4  自定义模板选择器  194
4.6.5  知识点  195
4.7  管理和应用文章标签  196
4.7.1  管理文章标签  197
4.7.2  发布文章时选择标签  202
4.7.3  在文章中显示文章标签  204
4.7.4  推荐相似文章  205
4.7.5  知识点  207
第5章  收集和展示图片  208
5.1  收集网络图片  208
5.1.1  创建图片相关类  209
5.1.2  收集和管理图片  212
5.1.3  完善图片管理功能  217
5.1.4  知识点  220
5.2  展示图片  221
5.2.1  瀑布流方式展示图片  222
5.2.2  查看图片的详细信息  225
5.2.3  知识点  226
第6章  中场休整  228
第7章  创建在线学习应用  229
7.1  基于类的视图  229
7.1.1  最简类视图  230
7.1.2  读取数据  232
7.1.3  初步了解Mixin  235
7.1.4  知识点  236
7.2  管理课程标题  237
7.2.1  判断用户是否登录  237
7.2.2  创建课程  240
7.2.3  删除课程  242
7.2.4  知识点  247
7.3  发布和学习课程内容  249
7.3.1  课程内容的数据模型  250
7.3.2  课程内容的表单类  253
7.3.3  课程内容的视图  253
7.3.4  查看课程内容  256
7.3.5  注册学习课程  260
7.3.6  知识点  264
第8章  结束和开始  266
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>跟老齐学Python：Django实战（第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>python语言程序设计
前言
第1章 初识Python 1
1.1 Python的基本概念 1
1.1.1 编译型语言与解释型语言 1
1.1.2 Python的发展史 3
1.1.3 Python的特点及应用领域 4
1.2 Python语言环境的安装 7
1.2.1 在Windows平台上安装Python语言环境 8
1.2.2 在Linux平台上安装Python语言环境 10
1.3 第一个Python程序：HelloWorld 13
1.3.1 中文编码 14
1.3.2 单行注释 14
1.3.3 多行注释 15
1.3.4 书写规范 15
1.3.5 输入和输出 16
1.4 IDLE环境 18
1.4.1 启动IDLE 18
1.4.2 创建Python脚本 18
1.4.3 常用的编辑功能 20
1.5 本章小结 21
1.6 课后习题 21
第2章 Python的基础语法 23
2.1 变量 23
2.1.1 定义一个变量 23
2.1.2 同时定义多个变量 24
2.2 数据类型 25
2.2.1 Number 25
2.2.2 String 26
2.2.3 List 28
2.2.4 Tuple 30
2.2.5 Set 31
2.2.6 Dictionary 32
2.3 运算符 33
2.3.1 占位运算符 33
2.3.2 算术运算符 34
2.3.3 赋值运算符 35
2.3.4 比较运算符 36
2.3.5 逻辑运算符 37
2.3.6 位运算符 37
2.3.7 身份运算符 39
2.3.8 成员运算符 40
2.3.9 序列运算符 41
2.3.10 运算符优先级 41
2.4 条件语句 42
2.4.1 if、elif、else 44
2.4.2 pass 45
2.5 循环语句 46
2.5.1 for循环 47
2.5.2 while循环 48
2.5.3 索引 49
2.5.4 break 50
2.5.5 continue 51
2.5.6 else 51
2.6 本章小结 52
2.7 课后习题 52
第3章 函数 57
3.1 函数的定义与调用 57
3.2 参数列表与返回值 58
3.2.1 形参 59
3.2.2 实参 59
3.2.3 默认参数 60
3.2.4 关键字参数 61
3.2.5 不定长参数 62
3.2.6 拆分参数列表 64
3.2.7 返回值 65
3.3 模块 66
3.3.1 import 67
3.3.2 from import 70
3.3.3 包 71
3.3.4 猴子补丁 72
3.3.5 第三方模块的获取与安装 73
3.4 变量的作用域 73
3.4.1 局部变量 74
3.4.2 全局变量 74
3.4.3 global关键字 75
3.4.4 nonlocal关键字 76
3.5 高级应用 77
3.5.1 递归函数 77
3.5.2 高阶函数 78
3.5.3 lambda函数 78
3.5.4 闭包 79
3.5.5 装饰器 80
3.6 本章小结 83
3.7 课后习题 83
第4章 面向对象 87
4.1 类与对象 87
4.1.1 类的定义 87
4.1.2 创建实例 88
4.1.3 类属性定义及其访问 89
4.1.4 类中普通方法定义及调用 91
4.1.5 私有属性 92
4.1.6 构造方法 93
4.1.7 析构方法 95
4.1.8 常用内置方法 96
4.2 继承与多态 98
4.2.1 什么是继承 98
4.2.2 如何继承父类 99
4.2.3 方法重写 100
4.2.4 super方法 101
4.3 高级应用 103
4.3.1 内置函数isinstance、issubclass和type 103
4.3.2 类方法 104
4.3.3 静态方法 104
4.3.4 动态扩展类与实例 105
4.3.5 __slots__ 106
4.3.6 @property 107
4.3.7 元类 108
4.3.8 单例模式 109
4.3.9 鸭子类型 111
4.4 本章小结 112
4.5 课后习题 112
第5章 序列、集合和字典 116
5.1 可变类型与不可变类型 116
5.2 列表 117
5.2.1 创建列表 117
5.2.2 拼接列表 118
5.2.3 复制列表元素 119
5.2.4 查找列表元素 120
5.2.5 插入列表元素 121
5.2.6 删除列表元素 121
5.2.7 获取列表中的最大元素 122
5.2.8 获取列表中的最小元素 122
5.2.9 统计元素出现的次数 122
5.2.10 计算列表长度 123
5.2.11 列表中元素排序 123
5.3 元组 124
5.3.1 创建元组 125
5.3.2 创建具有单个元素的元组 125
5.3.3 拼接元组 126
5.3.4 获取元组中的最大元素 126
5.3.5 获取元组中的最小元素 126
5.3.6 元组的不变性 126
5.4 集合 127
5.4.1 创建集合 127
5.4.2 元素唯一性 127
5.4.3 插入集合元素 127
5.4.4 交集 128
5.4.5 并集 128
5.4.6 差集 129
5.4.7 对称差集 129
5.4.8 子集 129
5.4.9 父集 130
5.5 字典 130
5.5.1 创建字典 130
5.5.2 初始化字典中的元素 130
5.5.3 修改/插入字典元素 131
5.5.4 删除字典中的元素 132
5.5.5 计算字典中元素的个数 133
5.5.6 清除字典中的所有元素 133
5.5.7 判断字典中是否存在键 133
5.5.8 拼接两个字典 134
5.5.9 获取字典中键的集合 135
5.5.10 获取字典中值的集合 135
5.5.11 获取字典中的元素数组 135
5.5.12 浅拷贝 136
5.5.13 深拷贝 137
5.6 高级应用 138
5.6.1 切片 138
5.6.2 列表生成表达式 138
5.6.3 生成器 139
5.6.4 迭代器 140
5.7 本章小结 142
5.8 课后习题 142
第6章 字符串 146
6.1 字符串常用操作 146
6.1.1 创建字符串 146
6.1.2 单引号、双引号、三引号之间的区别 146
6.1.3 字符串比较 148
6.1.4 字符串切割 149
6.1.5 字符串检索 150
6.1.6 替换字符串中的字符 150
6.1.7 去除字符串空格 151
6.1.8 复制字符串 152
6.1.9 连接字符串 152
6.1.10 获取字符串长度 152
6.1.11 大小写转换 153
6.1.12 测试字符串的组成部分 153
6.2 格式化方法 154
6.2.1 占位符 154
6.2.2 format方法 154
6.3 正则表达式 155
6.3.1 基础语法 155
6.3.2 re模块的使用 157
6.4 本章小结 165
6.5 课后习题 165
第7章 I/O编程与异常 169
7.1 os模块的使用 169
7.1.1 查看系统平台 169
7.1.2 获取当前系统平台路径分隔符 169
7.1.3 获取当前工作目录 170
7.1.4 获取环境变量值 170
7.1.5 获取文件和目录列表 170
7.1.6 创建目录 171
7.1.7 删除目录 171
7.1.8 获取指定相对路径的绝对路径 172
7.1.9 获取指定路径的目录名或文件名 172
7.1.10 判断指定路径目标是否为文件 173
7.1.11 判断指定路径目标是否为目录 173
7.1.12 判断指定路径是否存在 174
7.1.13 判断指定路径是否为绝对路径 174
7.1.14 分离文件扩展名 174
7.1.15 路径连接 175
7.1.16 获取文件名 175
7.1.17 获取文件路径 175
7.2 文件读写 176
7.2.1 open函数 176
7.2.2 with语句 177
7.2.3 文件对象方法 177
7.3 数据的处理 180
7.3.1 一维数据 180
7.3.2 二维数据 181
7.3.3 使用CSV格式操作一维、二维数据 181
7.4 异常的定义和分类 183
7.4.1 异常的定义 183
7.4.2 异常的分类 183
7.5 异常处理 184
7.5.1 try except 185
7.5.2 else 185
7.5.3 finally 186
7.5.4 raise 187
7.5.5 断言 187
7.5.6 自定义异常 188
7.6 本章小结 188
7.7 课后习题 188
第8章 多线程与多进程 191
8.1 线程与进程的定义 191
8.1.1 线程 191
8.1.2 进程 191
8.2 多线程 192
8.2.1 多线程的创建和启动 192
8.2.2 多线程的合并 195
8.2.3 守护线程 196
8.2.4 多线程的同步 197
8.3 多进程 206
8.3.1 创建多进程 206
8.3.2 多进程间的通信 207
8.3.3 多进程间的同步 207
8.3.4 Pool对象 208
8.3.5 Manager对象 210
8.3.6 Listener与Client对象 210
8.4 本章小结 211
8.5 课后习题 212
第9章 综合实例 213
9.1 图书管理系统 213
9.1.1 实例问题描述 213
9.1.2 服务器的搭建 213
9.1.3 定义图书类 214
9.1.4 注册图书信息 214
9.1.5 查询图书信息 215
9.1.6 删除图书信息 216
9.1.7 系统的远程交互过程 217
9.1.8 系统的完整代码 218
9.2 图形化界面计算器 221
9.2.1 实例问题描述 221
9.2.2 Python标准GUI库Tkinter 221
9.2.3 图形界面计算器的完整代码 222
9.3 电影推荐模型 225
9.3.1 基于用户相似度的推荐算法UserCF 225
9.3.2 基于物品相似度的推荐算法ItemCF 226
9.3.3 算法实现 226
9.3.4 实验过程及结果 234
9.4 本章小结 234
第10章 Python常用库 235
10.1 Python标准库 235
10.1.1 turtle模块 235
10.1.2 random模块 237
10.2 常用的Python内置函数 238
10.2.1 数学内置函数 238
10.2.2 数据类型转换 239
10.2.3 序列操作 242
10.2.4 对象操作 243
10.2.5 反射操作 245
10.2.6 变量操作 247
10.2.7 编译执行 247
10.3 第三方库 248
10.3.1 安装第三方库 248
10.3.2 PyInstaller 248
10.3.3 jieba 250
10.3.4 Scrapy 251
10.3.5 Django 252
10.3.6 NumPy 255
10.3.7 Pandas 261
10.3.8 Matplotlib 261
10.3.9 Pygame 264
10.4 本章小结 264
参考文献 265
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>python语言程序设计
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>少博士趣学Python
第1 章 编程与我们的生活  1
1.1  为什么学编程  1
1.1.1  通过编程了解以科技为核心的世界  1
1.1.2  编程很有趣  1
1.1.3  编程能锻炼你的思维能力  2
1.2  为什么学Python  2
1.3  如何学好编程  2
1.4  计算机的长处和不足  2
1.5  下载并安装Python  3
1.5.1  Windows 系统  4
1.5.2  Mac 系统  5
1.6  在Shell 里编写代码  6
1.7  在编辑器里编写代码  8
1.8  五颜六色的代码  9
1.9  帮助我们的提示信息  9
第2 章 Python 编程初体验——发号施令  11
2.1  什么是编程  11
2.2  给小海龟精确地发号施令  12
2.2.1  指挥海龟画正方形  12
2.2.2  指挥海龟画八边形  14
2.3  省力气的循环  16
2.4  旋转的正方形  17
2.5  创造酷炫的图案  19
2.6  给点颜色看看  21
2.7  总结及课后练习  22
第3 章 跟机器交流  23
3.1  和计算机对话  23
3.2  输入和输出  28
3.3  跟人对话——注释  28
3.4  案例：笑话制造机  29
3.5  总结及课后练习  30
第4 章 数据的世界  32
4.1  变量  32
4.1.1  为什么要用变量  33
4.1.2  变量名  33
4.1.3  变量有多可“变”  34
4.2  算法通过处理数据解决问题  36
4.3  Python 数据类型及转换函数  36
4.3.1  常见数据类型  36
4.3.2  数据类型转换函数  37
4.3.3  数据分类的好处  38
4.4  数字  38
4.4.1  探索运算符  38
4.4.2  案例1：输出三位数中的每位数字  41
4.5  字符串  42
4.5.1  字符串常见处理  43
4.5.2  案例2：国家名简写  45
4.5.3  案例3：城市名加密  47
4.6  布尔值  48
4.6.1  布尔值及底层的意义  48
4.6.2  比较数据  49
4.6.3  布尔值与逻辑运算符的故事——小熊选照片  50
4.6.4  逻辑运算符  51
4.6.5  案例4：卡片通关挑战  52
4.7  总结及课后练习  57
第5 章 好好安排数据  58
5.1  安排数据的方式  58
5.2  列表  59
5.2.1  获取列表值  60
5.2.2  修改列表  62
5.2.3  二维列表  64
5.2.4  列表挑战练习  66
5.3  元组  67
5.4  字典  68
5.4.1  什么是字典  68
5.4.2  使用字典  69
5.4.3  案例：查询课程表  70
5.4.4  字典挑战练习  72
5.5  总结及课后练习  72
第6 章 条件判断——学会做决定  74
6.1  条件判断  74
6.1.1  生活中的判断  74
6.1.2  程序中的判断  74
6.2  if…else…语句  75
6.2.1  案例1：你的成绩合格吗  76
6.2.2  代码的位置  77
6.2.3  案例2：奇偶数判断  78
6.3  if…语句  79
案例3：今天你戴口罩了吗  79
6.4  if…elif…else…语句  80
案例4：判断正数、负数和零  81
6.5  条件判断总结  83
6.5.1  红绿灯导航系统  84
6.5.2  案例5：闰年计算器  84
6.6  条件判断应用  86
6.6.1  案例6：趣味掷骰子  86
6.6.2  案例7：心理测验  87
6.6.3  案例8：聊天机器人  91
6.7  总结及课后练习  97
第7 章 循环——让计算机重复工作  100
7.1  流程控制  100
7.2  什么是循环  101
7.3  for 循环  101
7.3.1  重复打印任务  101
7.3.2  案例1：敌军还有5 秒到达战场  102
7.3.3  for 循环语法  105
7.3.4  案例2：乘法口诀表  105
7.3.5  range()函数  107
7.3.6  for 循环练习  109
7.4  案例3：奶昔机器人  112
7.5  while 循环  113
7.5.1  while 循环的意义  113
7.5.2  比较while 和if  114
7.5.3  while 循环语法  115
7.5.4  案例4：加血道具的回血  115
7.5.5  无限循环和break 语句  117
7.6  案例5：扫地机器人的故事  119
7.7  案例6：自动驾驶程序的故事  121
7.8  案例7：猜数字游戏  123
7.9  总结及课后练习  127
第8 章 抽象函数——分而治之的学问  128
8.1  分而治之和抽象  128
8.2  函数  131
8.2.1  定义并调用函数  132
8.2.2  函数中代码的注意事项  132
8.2.3  带参数的函数  133
8.2.4  案例1：简单的函数练习  136
8.2.5  做事情的函数VS 返回值的函数  137
8.3  案例2：数学试卷机器人  140
8.3.1  策划数学试卷机器人  140
8.3.2  随机模块的用法  141
8.3.3  题目的函数  141
8.3.4  策划程序逻辑  144
8.3.5  完整的程序代码  145
8.4  递归函数的故事  146
8.4.1  阶乘与递归  146
8.4.2  无限递归  147
8.4.3  案例3：科赫曲线  148
8.4.4  案例4：科赫雪花  149
8.5  变量的作用域  150
8.6  总结及课后练习  151
第9 章 Python 库——让强大的Python 库帮忙  153
9.1  Python 模块概述  153
9.2  安装、卸载和使用Python 模块  154
9.2.1  安装与卸载Python 模块  154
9.2.2  Python 文档  157
9.3  random 模块  159
9.3.1  随机模块常见函数  159
9.3.2  随机模块函数练习  160
9.3.3  案例1：幸运大抽奖  161
9.4  时间模块和日期时间模块  163
9.4.1  时间模块  163
9.4.2  日期时间模块  166
9.5  webbrowser 模块  167
9.5.1  webbrowser 简介  167
9.5.2  案例2：天气机器人  167
9.6  操作文件  169
9.6.1  操作系统的os 模块  169
9.6.2  案例3：音乐倒计时  171
9.6.3  案例4：编写文档的docx 模块  172
9.7  总结及课后练习  174
第10 章 Tkinter 界面——有按钮的软件  175
10.1  GUI 与CUI  175
10.2  介绍Tkinter 框架  176
10.3  给窗体添加控件  177
10.4  让控件变漂亮  179
10.4.1  为控件设置属性的方法  179
10.4.2  控件的常用属性  180
10.4.3  使用config 配置属性  182
10.5  让窗体里的东西动起来  183
10.5.1  Tkinter 里的事件  184
10.5.2  响应事件中的属性  185
10.6  案例1：绘图软件  187
10.6.1  制作绘图软件1  188
10.6.2  制作绘图软件2  192
10.6.3  制作绘图软件3  194
10.7  案例2：编写桌面备忘录  197
10.8  总结及课后练习  198
第11 章 密码的奥妙——众目睽睽之下的悄悄话  199
11.1  打胜仗要靠算法  199
11.2  案例1：倒着说话——调转密码  200
11.2.1  调转密码介绍  200
11.2.2  编写调转密码  200
11.2.3  编写调转密码窗口  201
11.3  案例2：绕小弯说话——凯撒密码  202
11.3.1  凯撒密码介绍  202
11.3.2  编写凯撒密码  203
11.3.3  编写凯撒密码窗口  206
11.3.4  破解凯撒密码  207
11.4  案例3：混乱着说话——打乱替换密码  207
11.4.1  打乱替换密码介绍  207
11.4.2  编写打乱替换密码  208
11.5  案例4：绕大弯说话——维吉尼亚密码  210
11.5.1  维吉尼亚密码介绍  210
11.5.2  编写维吉尼亚密码  211
11.6  案例5：靠计数破译密码  212
11.7  总结及课后练习  215
第12 章 二进制数的世界  217
12.1  二进制数是什么  217
12.2  二进制数转十进制数  218
12.3  十进制数转二进制数  220
12.4  图片都是数字  221
12.5  字母都是数字  222
12.6  总结及课后练习  224
第13 章 潜水钟与蝴蝶——用计算性思维解决问题  225
13.1  潜水钟与蝴蝶的故事  225
13.1.1  第一次尝试——眨眼次数代表的字母  226
13.1.2  第二次尝试——二分搜索  226
13.1.3  持续地尝试  228
13.2  编写程序为身边的人解决问题  229
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>少博士趣学Python
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>从零开始学Python数据分析与挖掘
第1章  数据分析与挖掘概览	1
1.1  什么是数据分析和挖掘	1
1.2  数据分析与挖掘的应用领域	1
1.2.1  破坏规则的“害群之马”	1
1.2.2  完美的动态定价营销法	2
1.2.3  抗癌八年的乔布斯	2
1.3  数据分析与挖掘的区别	3
1.4  数据挖掘的流程	4
1.4.1  明确目标	4
1.4.2  数据搜集	5
1.4.3  数据清洗	5
1.4.4  构建模型	6
1.4.5  模型评估	6
1.5  常用的数据分析与挖掘工具	7
1.6  篇章总结	8
第2章  从收入的预测分析开始	9
2.1  下载与安装	9
2.1.1  Windows系统	9
2.1.2  Mac系统	11
2.1.3.  Linux系统	12
2.2  基于Python的案例实战	13
2.2.1  数据的预处理	13
2.2.2  数据的探索性分析	14
2.2.3  数据建模	17
2.3  篇章总结	25
第3章  Python入门基础	27
3.1  数据结构及方法	27
3.1.1  列表	27
3.1.2  元组	32
3.1.3  字典	32
3.2  控制流	35
3.2.1  if分支	35
3.2.2  for循环	36
3.2.3  while循环	38
3.3  字符串处理方法	39
3.3.1  字符串的常用方法	39
3.3.2  正则表达式	41
3.4  自定义函数	43
3.4.1  自定义函数语法	43
3.4.2  自定义函数的几种参数	45
3.5  一个爬虫案例	48
3.6  篇章总结	50
第4章  Python数值计算工具—Numpy	52
4.1  数组的创建与操作	52
4.1.1  数组的创建	52
4.1.2  数组元素的获取	53
4.1.3  数组的几个属性	54
4.1.4  数组的形状处理	55
4.2  数组的基本运算符	57
4.2.1  四则运算	57
4.2.2  比较运算	59
4.2.3  广播运算	60
4.3  常用的数学和统计函数	61
4.4  线性代数的相关计算	63
4.5  伪随机数的生成	66
4.6  篇章总结	69
第5章  Python数据处理工具--Pandas	70
5.1  序列与数据框的构造	70
5.1.1  构造序列	70
5.1.2  构造数据框	72
5.2  外部数据的读取	73
5.2.1  文本文件的读取	73
5.2.2  电子表格的读取	75
5.2.3  数据库数据的读取	76
5.3  数据类型转换及描述统计	78
5.4  字符与日期数据的处理	81
5.5  常用的数据清洗方法	84
5.5.1  重复观测处理	84
5.5.2  缺失值处理	85
5.5.3  异常值处理	88
5.6  数据子集的获取	90
5.7  透视表功能	92
5.8  表之间的合并与连接	94
5.9  分组聚合操作	96
5.10  篇章总结	98
第6章  Python数据可视化	100
6.1  离散型变量的可视化	100
6.1.1  饼图	100
6.1.2  条形图	105
6.2  数值型变量的可视化	113
6.2.1  直方图与核密度曲线	113
6.2.2  箱线图	117
6.2.3  小提琴图	120
6.2.4  折线图	122
6.3  关系型数据的可视化	126
6.3.1  散点图	126
6.3.2  气泡图	129
6.4  多个图形的合并	132
6.5  篇章总结	134
第7章  线性回归预测模型	136
7.1  一元线性回归模型	136
7.1.1  拟合线的求解	137
7.2  多元线性回归模型	139
7.2.1  回归模型的参数求解	139
7.2.2  回归模型的预测	140
7.3  回归模型的假设检验	142
7.3.1  模型的显著性检验--F检验	143
7.3.2  回归系数的显著性检验--t检验	145
7.4  回归模型的诊断	146
7.4.1  正态性检验	147
7.4.2  多重共线性检验	149
7.4.3  线性相关性检验	150
7.4.4  异常值检验	151
7.4.5  独立性检验	154
7.4.6  方差齐性检验	154
7.5  篇章总结	156
第8章  岭回归与LASSO回归模型	158
8.1  岭回归模型	158
8.1.1  参数求解	159
8.1.2  系数求解的几何意义	160
8.2  岭回归模型的应用	161
8.2.1  可视化方法确定λ值	161
8.2.2  交叉验证法确定λ值	162
8.2.3  模型的预测	164
8.3  LASSO回归模型	165
8.3.1  参数求解	165
8.3.2  系数求解的几何意义	166
8.4  LASSO回归模型的应用	167
8.4.1  可视化方法确定λ值	167
8.4.2  交叉验证法确定λ值	169
8.4.3  模型的预测	170
8.5  篇章总结	171
第9章 Logistic回归分类模型	173
9.1  Logistic模型的构建	173
9.1.1  Logistic模型的参数求解	175
9.1.2  Logistic模型的参数解释	177
9.2  分类模型的评估方法	178
9.2.1  混淆矩阵	178
9.2.2  ROC曲线	179
9.2.3  K-S曲线	180
9.3  Logistic回归模型的应用	182
9.3.1  模型的构建	182
9.3.2  模型的预测	184
9.3.3  模型的评估	184
第10章 决策树与随机森林	190
10.1  节点字段的选择	191
10.1.1  信息增益	191
10.1.2  信息增益率	193
10.1.3  基尼指数	195
10.2  决策树的剪枝	197
10.2.1  误差降低剪枝法	198
10.2.2  悲观剪枝法	198
10.2.3  代价复杂度剪枝法	199
10.3  随机森林	200
10.3.1  随机森林的思想	200
10.4  决策树与随机森林的应用	202
10.4.1  分类问题的解决	202
10.4.2  预测问题的解决	208
第11章  KNN模型的应用	212
11.1  KNN算法的思想	212
11.2  最佳k值的选择	213
11.3  相似度的度量方法	213
11.3.1  欧式距离	214
11.3.2  曼哈顿距离	214
11.3.3  余弦相似度	215
11.3.4  杰卡德相似系数	215
11.4  近邻样本的搜寻方法	216
11.4.1  KD树搜寻法	217
11.4.2  球树搜寻法	220
11.5  KNN模型的应用	221
11.5.1  分类问题的解决	222
11.5.2  预测问题的解决	226
第12章  朴素贝叶斯模型	230
12.1  朴素贝叶斯理论基础	230
12.2  几种贝叶斯模型	231
12.2.1  高斯贝叶斯分类器	231
12.2.2  高斯贝叶斯分类器的应用	233
12.2.3  多项式贝叶斯分类器	236
12.2.4  多项式贝叶斯分类器的应用	237
12.2.4  伯努利贝叶斯分类器	240
12.3  篇章总结	245
第13章 SVM模型的应用	247
13.1  SVM的简介	247
13.1.1  距离公式的介绍	248
13.1.2  SVM的实现思想	249
13.2  几种常见的SVM模型	250
13.2.1  线性可分的SVM	250
13.2.2  一个手工计算的案例	253
13.2.3  近似线性可分SVM	255
13.2.4  非线性可分SVM	258
13.2.5  几种常用的SVM核函数	260
13.2.6  SVM的回归预测	261
13.3  分类问题的解决	263
13.4  预测问题的解决	265
13.5  篇章总结	268
第14章  GBDT模型的应用	270
14.1  提升树算法	270
14.1.1  AdaBoost算法的损失函数	271
14.1.2  AdaBoost算法的操作步骤	272
14.1.3  AdaBoost算法的简单例子	273
14.1.4  AdaBoost算法的应用	275
14.2  梯度提升树算法	280
14.2.1  GBDT算法的操作步骤	281
14.2.2  GBDT分类算法	281
14.2.3  GBDT回归算法	282
14.2.4  GBDT算法的应用	283
14.3  非平衡数据的处理	285
14.4  XGBoost算法	287
14.4.1  XGBoost算法的损失函数	287
14.4.2  损失函数的演变	288
14.4.3  XGBoost算法的应用	291
14.5  篇章总结	296
第15章  KMeans聚类分析	298
15.1  KMeans聚类	298
15.1.1  KMeans的思想	298
15.1.2  KMeans的原理	300
15.2  最佳k值的确定	300
15.2.1  拐点法	301
15.2.2  轮廓系数法	303
15.2.3  Gap Statistic	305
15.3  Kmeans聚类的应用	307
15.3.1  iris数据集的聚类	307
15.3.2  NBA球员数据集的聚类	310
15.4  Kmeans聚类的注意事项	314
15.5  篇章总结	314
第16章  DBSCAN与层次聚类分析	315
16.1  密度聚类简介	315
16.1.1  密度聚类相关的几个概念	315
16.1.2  密度聚类的步骤	317
16.2  密度聚类与KMeans的比较	318
16.3  层次聚类	322
16.3.1  簇间的距离度量	322
16.3.2  层次聚类的步骤	324
16.3.3  三种层次聚类的比较	325
16.4  密度聚类与层次聚类的应用	327
16.5  篇章总结	333
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>从零开始学Python数据分析与挖掘
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python高效开发实战——Django、Tornado、Flask、Twisted（第2版）
上篇 Python基础
第1章 Python基础知识  2
1.1 Python综述  3
1.1.1 了解Python的特性及版本  3
1.1.2 安装Python  5
1.1.3 使用Python原生编辑器  8
1.1.4 使用Eclipse开发环境  9
1.1.5 Python编程入门——解决“斐波那契数列”问题  14
1.2 数据类型  17
1.2.1 Number类型  17
1.2.2 Sequence类型簇  21
1.2.3 string与bytes  23
1.2.4 tuple类型  30
1.2.5 list类型  31
1.2.6 set类型  32
1.2.7 dict类型  35
1.3 流程控制  37
1.3.1 程序块与作用域  37
1.3.2 判断语句  38
1.3.3 循环语句  40
1.3.4 语句嵌套  42
1.4 函数  43
1.4.1 定义与使用  43
1.4.2 变长参数  45
1.4.3 匿名函数  47
1.5 异常  49
1.5.1 处理异常  49
1.5.2 自定义异常  51
1.6 面向对象编程  52
1.6.1 什么是面向对象  52
1.6.2 类和对象  54
1.6.3 继承  61
1.7 本章总结  64
第2章 Web编程之网络基础  65
2.1 TCP/IP网络  66
2.1.1 计算机网络综述  66
2.1.2 TCP和UDP  70
2.1.3 C/S及B/S架构  73
2.2 HTTP  74
2.2.1 HTTP流程  75
2.2.2 HTTP消息结构  76
2.2.3 HTTP请求方法  80
2.2.4 基于HTTP的网站开发  80
2.3 Socket编程  82
2.3.1 Socket基础  82
2.3.2 实战演练：Socket TCP原语  83
2.3.3 实战演练：Socket UDP原语  87
2.4 本章总结  88
第3章 客户端的编程技术  89
3.1 HTML  90
3.1.1 HTML介绍  90
3.1.2 HTML基本标签  93
3.1.3 HTML表单  99
3.2 CSS  102
3.2.1 样式声明方式  103
3.2.2 CSS语法  104
3.2.3 基于CSS+DIV的页面布局  106
3.3 JavaScript  108
3.3.1 在HTML中嵌入JavaScript  108
3.3.2 JavaScript的基本语法  109
3.3.3 DOM及其读写  115
3.3.4 window对象  118
3.3.5 HTML事件处理  121
3.4 jQuery  124
3.4.1 使用jQuery  124
3.4.2 选择器  125
3.4.3 行为  126
3.5 本章总结  130
第4章 数据库及ORM  131
4.1 数据库概念  131
4.1.1 Web开发中的数据库  132
4.1.2 关系数据库建模  134
4.2 关系数据库编程  137
4.2.1 常用SQL语句  137
4.2.2 实战演练：在Python中应用SQL  143
4.3 ORM编程  145
4.3.1 ORM理论基础  145
4.3.2 Python ORM库介绍  147
4.3.3 实战演练：Peewee库编程  148
4.4 本章总结  151
中篇 Python框架
第5章 Python网络框架纵览  154
5.1 网络框架综述  155
5.1.1 网络框架及MVC架构  155
5.1.2 4种Python网络框架：Django、Tornado、Flask、Twisted  156
5.2 开发环境准备  157
5.2.1 easy_install与pip的使用  157
5.2.2 使用Python虚环境virtualenv  159
5.3 Web服务器  161
5.3.1 实战演练1：WSGI接口  161
5.3.2 实战演练2：Linux+Nginx+uWSGI配置  162
5.3.3 实战演练3：建立安全的HTTPS网站  168
5.4 本章总结  170
第6章 企业级开发框架——Django  171
6.1 Django综述  172
6.1.1 Django的特点及结构  172
6.1.2 安装Django 2  173
6.2 实战演练：开发Django站点  173
6.2.1 建立项目  173
6.2.2 建立应用  174
6.2.3 基本视图  175
6.2.4 内置Web服务器  177
6.2.5 模型类  178
6.2.6 表单视图  181
6.2.7 使用管理界面  184
6.3 Django模型层  186
6.3.1 基本操作  186
6.3.2 关系操作  194
6.3.3 面向对象ORM  198
6.4 Django视图层  201
6.4.1 URL映射  201
6.4.2 视图函数  207
6.4.3 模板语法  209
6.5 使用Django表单  215
6.5.1 表单绑定状态  215
6.5.2 表单数据验证  215
6.5.3 检查变更字段  218
6.6 个性化管理员站点  219
6.6.1 模型  219
6.6.2 模板  221
6.6.3 站点  223
6.7 本章总结  225
第7章 高并发处理框架——Tornado  226
7.1 Tornado概述  227
7.1.1 Tornado介绍  227
7.1.2 安装Tornado  228
7.2 异步及协程基础  228
7.2.1 同步与异步I/O  228
7.2.2 可迭代（Iterable）与迭代器（Iterator）  229
7.2.3 用yield定义生成器（Generator）  231
7.2.4 协程  233
7.3 实战演练：开发Tornado网站  237
7.3.1 网站结构  237
7.3.2 路由解析  238
7.3.3 RequestHandler  240
7.3.4 异步化及协程化  245
7.4 用户身份验证框架  247
7.4.1 安全Cookie机制  247
7.4.2 用户身份认证  249
7.4.3 防止跨站攻击  251
7.5 HTML 5 WebSocket概念及应用  253
7.5.1 WebSocket概念  253
7.5.2 服务端编程  256
7.5.3 客户端编程  259
7.6 Tornado网站部署  261
7.6.1 调试模式  261
7.6.2 静态文件  263
7.6.3 运营期配置  265
7.7 本章总结  267
第8章 支持快速建站的框架——Flask  268
8.1 Flask综述  269
8.1.1 Flask的特点  269
8.1.2 安装Flask、SQLAlchemy和WTForm  270
8.2 实战演练：开发Flask站点  271
8.2.1 Hello World程序  272
8.2.2 模板渲染  273
8.2.3 重定向和错误处理  275
8.3 路由详解  276
8.3.1 带变量的路由  276
8.3.2 HTTP方法绑定  278
8.3.3 路由地址反向生成  279
8.4 使用Context上下文  281
8.4.1 会话上下文  281
8.4.2 应用全局对象  282
8.4.3 请求上下文  284
8.4.4 回调接入点  286
8.5 Jinja2模板编程  288
8.5.1 Jinja2语法  288
8.5.2 使用过滤器  290
8.5.3 流程控制  293
8.5.4 模板继承  296
8.6 SQLAlchemy数据库编程  298
8.6.1 SQLAlchemy入门  299
8.6.2 主流数据库的连接方式  303
8.6.3 查询条件设置  303
8.6.4 关系操作  306
8.6.5 级联  310
8.7 WTForm表单编程  316
8.7.1 定义表单  317
8.7.2 显示表单  318
8.7.3 获取表单数据  319
8.8 本章总结  321
第9章 底层自定义协议网络框架——Twisted  322
9.1 Twisted综述  323
9.1.1 框架概况  323
9.1.2 安装Twisted及周边组件  323
9.2 实战演练：开发TCP广播系统  325
9.2.1 广播服务器  325
9.2.2 广播客户端  327
9.3 UDP编程技术  330
9.3.1 实战演练1：普通UDP  330
9.3.2 实战演练2：Connected UDP  333
9.3.3 实战演练3：组播技术  335
9.4 Twisted高级话题  337
9.4.1 延迟调用  337
9.4.2 使用多线程  343
9.4.3 安全信道  345
9.5 本章总结  348
下篇 Python框架实战
第10章 实战1：用Django+PostgreSQL开发移动Twitter  352
10.1 项目概览  353
10.1.1 项目来源（GitHub）  353
10.1.2 安装PostgreSQL数据库并配置Python环境  354
10.1.3 项目结构  356
10.2 页面框架设计  358
10.2.1 基模板文件  359
10.2.2 手机大小自适应（jQuery技术）  361
10.2.3 文本国际化  362
10.2.4 网站页面一览  365
10.3 用户注册及登录  366
10.3.1 页面设计  366
10.3.2 模型层  368
10.3.3 视图设计  369
10.4 手机消息的发布和浏览  374
10.4.1 页面设计  374
10.4.2 模型层  379
10.4.3 视图设计  380
10.5 社交朋友圈  383
10.5.1 页面设计  383
10.5.2 模型层  385
10.5.3 视图设计  386
10.6 个人资料配置  389
10.6.1 页面设计  390
10.6.2 图片上传（第三方库PIL）  391
10.7 Web管理站点  395
10.7.1 定义可管理对象  395
10.7.2 配置管理员  396
10.7.3 使用管理站点  396
10.8 本章总结  398
第11章 实战2：用Tornado+jQuery开发WebSocket聊天室  399
11.1 聊天室概览  400
11.1.1 项目介绍  400
11.1.2 安装和代码结构  401
11.2 消息通信  402
11.2.1 建立网站  402
11.2.2 WebSocket服务器  405
11.2.3 WebSocket客户端  406
11.3 聊天功能  409
11.3.1 昵称  409
11.3.2 消息来源  411
11.3.3 历史消息缓存  413
11.4 用户面板  414
11.4.1 用CSS定义用户列表  414
11.4.2 服务器通知  416
11.4.3 响应服务器动态通知（jQuery动态编程）  417
11.5 本章总结  418
第12章 实战3：用Flask+Bootstrap+Restful开发学校管理系统  419
12.1 系统概览  420
12.1.1 项目来源及功能  420
12.1.2 项目安装  421
12.1.3 代码结构  424
12.2 数据模型设计  425
12.2.1 E-R图设计  426
12.2.2 SQLAlchemy建模  428
12.3 响应式页面框架设计  434
12.3.1 基模板组件引用  434
12.3.2 响应式导航  437
12.4 新建学校  440
12.4.1 WTForm表单  440
12.4.2 视图及文件上传  442
12.4.3 响应式布局  443
12.5 学校管理  446
12.5.1 查询视图  446
12.5.2 分页模板  449
12.6 Restful接口  451
12.6.1 Restful概念  451
12.6.2 Restless插件  452
12.6.3 开发Restful接口  456
12.7 本章总结  461
第13章 实战4：用Twisted+SQLAlchemy+ ZeroMQ开发跨平台物联网消息网关  462
13.1 项目概况  463
13.1.1 功能定义  463
13.1.2 安装和测试  464
13.1.3 项目结构  467
13.2 项目设计  469
13.2.1 SQLAlchmey建模  469
13.2.2 TCP接口设计  473
13.3 通信引擎  476
13.3.1 跨平台安全端口  476
13.3.2 管理连接  478
13.3.3 收发数据  479
13.3.4 TCP流式分包  482
13.3.5 异步执行  484
13.4 协议编程  486
13.4.1 执行命令  486
13.4.2 struct解析字节流  489
13.4.3 序列号生成  490
13.4.4 连接保持  491
13.4.5 发送Response  492
13.4.6 错误机制  494
13.5 ZeroMQ集群  496
13.5.1 内部接口设计  496
13.5.2 PUB/SUB通信模型编程  498
13.6 本章总结  499
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python高效开发实战——Django、Tornado、Flask、Twisted（第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python机器学习与量化投资
第1章  Python与机器学习  1
1.1  scikit-learn模块库  2
1.1.1  scikit-learn的缺点  3
1.1.2  scikit-learn算法模块  4
1.1.3  scikit-learn六大功能  5
1.2  开发环境搭建  8
1.2.1  AI领域的标准编程语言：Python  8
1.2.2  zwPython：难度降低90%，性能提高10倍  9
1.2.3 “零对象”编程模式  11
1.2.4  开发平台搭建  12
1.2.5  程序目录结构  12
案例1-1：重点模块版本测试  13
1.3  机器学习：从忘却开始  17
1.4  学习路线图  20
第2章  机器学习编程入门  21
2.1  经典机器学习算法  21
2.2  经典爱丽丝  22
案例2-1：经典爱丽丝  24
案例2-2：爱丽丝进化与文本矢量化  26
2.3  机器学习算法流程  28
2.4  机器学习数据集  28
案例2-3：爱丽丝分解  29
2.5  数据切割函数  33
2.6  线性回归算法  34
案例2-4：爱丽丝回归  35
第3章  金融数据的预处理  40
3.1  至简归一法  40
案例3-1：麻烦的外汇数据  41
案例3-2：尴尬的日元  45
案例3-3：凶残的比特币  49
3.2  股票池与Rebase  51
3.2.1  股票池  51
3.2.2  Rebase与归一化  52
案例3-4：股票池Rebase归一化  53
3.3  金融数据切割  57
案例3-5：当上证遇到机器学习  58
3.4  preprocessing模块  63
案例3-6：比特币与标准化  65
案例3-7：比特币与归一化  69
第4章  机器学习快速入门  72
4.1  回归算法  72
4.2  LR线性回归模型  73
案例4-1：上证指数之LR回归事件  76
4.3  常用评测指标  81
4.4  多项式回归  83
案例4-2：上证指数的多项式故事  83
案例4-3：预测比特币价格  86
4.5  逻辑回归算法模型  87
案例4-4：上证指数预测逻辑回归版  88
第5章  模型验证优化  96
5.1  交叉验证评估器  96
案例5-1：交叉验证  98
5.2  交叉验证评分  101
案例5-2：交叉验证评分  101
第6章  决策树  103
6.1  决策树算法  103
6.1.1  ID3算法与C4.5算法  105
6.1.2  常用决策树算法  106
6.1.3  sklearn内置决策树算法  107
6.2  决策树回归函数  109
案例6-1：决策树回归算法  110
6.3  决策树分类函数  115
案例6-2：决策树分类算法  116
6.4  GBDT算法  121
6.5  迭代决策树函数  122
案例6-3：GBDT回归算法  123
案例6-4：GBDT分类算法  128
第7章  随机森林算法和极端随机树算法  133
7.1  随机森林函数  135
7.2  决策树测试框架  137
案例7-1：RF回归算法大测试  138
7.3  决策树测试函数  140
案例7-2：上证的RF回归频道  142
案例7-3：当比特币碰到RF回归算法  146
案例7-4：上证和RF分类算法  147
7.4  极端随机树算法  150
7.5  极端随机树函数  151
案例7-5：极端随机树回归算法  152
案例7-6：上证指数案例应用  154
案例7-7：ET、比特币，谁更极端  155
第8章  机器学习算法模式  159
8.1  学习模式  161
8.2  机器学习五大流派  164
8.3  经典机器学习算法  165
8.4  小结  166
第9章  概率编程  167
9.1  朴素贝叶斯的上证之旅  168
案例9-1：上证朴素贝叶斯算法  170
9.2  隐马尔可夫模型  175
案例9-2：HMM模型与模型保存  176
案例9-3：HMM算法与模型读取  180
第10章  实例算法  185
K最近邻算法  186
案例10-1：第一次惊喜——KNN算法  187
案例10-2：KNN分类  190
第11章  正则化算法  192
11.1  岭回归算法  193
案例11-1：新高度——岭回归算法  195
11.2  套索回归算法  197
案例11-2：套索回归算法应用  199
11.3  弹性网络算法  201
案例11-3：弹性网络算法应用  202
11.4  最小角回归算法  204
案例11-4：LARS算法应用  204
第12章  聚类分析  206
12.1  K均值算法  207
案例12-1：K均值算法应用  208
12.2  BIRCH算法  210
案例12-2：BIRCH算法应用  211
12.3  小结  213
第13章  降维算法  215
13.1  主成分分析  216
案例13-1：主成分分析的应用  218
案例13-2：PCA算法的上证戏法  223
13.2  奇异值分解算法  227
案例13-3：奇异果传说：SVD  228
第14章  集成算法  229
14.1  sklearn内置集成算法  231
14.2  装袋算法  232
案例14-1：装袋回归算法  232
案例14-2：装袋分类算法  234
14.3  AdaBoost迭代算法  236
案例14-3：AdaBoost迭代回归算法  237
案例14-4：AdaBoost迭代分类算法  239
第15章  支持向量机  242
15.1  支持向量机算法  242
15.2  SVM函数接口  244
案例15-1：SVM回归算法  245
案例15-2：SVM分类算法  247
第16章  人工神经网络算法  250
多层感知器  252
案例16-1：多层感知器回归算法  253
案例16-2：多层感知器分类算法  256
附录A  sklearn常用模块和函数  259
附录B  量化分析常用指标  284
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python机器学习与量化投资
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>小小的Python编程故事
第1章  启程：Python之旅  1
1.1  懒散的壳：Python IDLE Shell  1
1.2  小小的成绩单：Python程序演示  2
第2章  捉虫子：调试程序  5
2.1  小小的沉思：bug和debug  5
2.2  错在哪？打印调试信息  6
2.3  使用IDLE的Debugger工具  9
第3章  一个“假程序”：代码注释  11
3.1  诗词填空：单行注释  11
3.2  牛牛的程序  12
第4章  漂亮的展示牌：输入、输出和处理  14
4.1  漂亮的展示牌：输出  14
4.2  接受你的请求：输入  15
4.3  程序存在的意义：处理  16
第5章  动物园里动物多：数据类型  17
5.1  狮子、老虎和大象：标准数据类型  17
5.2  牛牛的牛爷爷：数值类型  19
第6章  神秘的X生物：变量的命名和赋值  21
6.1  变量的命名规则  21
6.2  X馆和神秘生物：变量赋值  23
第7章  弟弟的作业题：算术运算和算术赋值  24
7.1  算术运算符  24
7.2  二进制的魔术：位运算  26
7.3  赋值运算符  27
第8章  真真假假：比较运算和逻辑运算  29
8.1  真和假：逻辑  29
8.2  能够组成三角形吗  30
8.3  逻辑运算  31
第9章  有身份的MVP：成员、身份和优先级  34
9.1  篮球梦的开始：成员运算符  34
9.2  谁是MVP：身份运算符  35
9.3  运算符的优先级  37
第10章  我的世界：字符编码和字符串  39
10.1  从数值到符号：编码  39
10.2  小小的1000只羊：字符串  41
10.3  没烦恼的诗人：转义字符  43
10.4  字符串函数  44
第11章  王者的药：条件控制  47
11.1  健康系统：if语句  47
11.2  健康系统加强版：if语句的嵌套  48
第12章  阿波菲斯的剑鞘：列表  51
12.1  物品列表  51
12.2  了解自己的物品：列表的函数  53
12.3  新的物品：列表的操作  54
第13章  小小蛋糕店：元组和区间  57
13.1  第一个菜单：建立元组  57
13.2  请问第4种是什么蛋糕  58
13.3  各式各样的菜单  60
13.4  等差数列的创造者：range()  61
第14章  老狼老狼几点了：循环结构  63
14.1  没完没了：while语句  63
14.2  老狼该休息了：for语句  65
14.3  小花的脾气：break、continue和pass  66
第15章  同学通讯录：字典  68
15.1  制作通讯录：字典和键值对  68
15.2  通讯录的作用：访问字典元素  70
15.3  记录了多少同学  72
15.4  一个变两个：字典的复制  72
第16章  飞越地平线：基本队列  75
16.1  乐园永恒的主题：创建队列  75
16.2  FIFO：队列的基本性质  76
第17章  小小建筑师：函数与参数传递  79
17.1  墙壁和地板：函数的定义和调用  79
17.2  参数传递  81
第18章  幸运大转盘：随机数发生器  85
18.1  谁是幸运顾客：choice()  85
18.2  免费的蛋糕：sample()  86
18.3  洗牌：shuffle()  87
第19章  爷爷的怪蛋糕：类和对象  89
19.1  蛋糕模板：类的定义  89
19.2  制造蛋糕：创建对象  91
19.3  如何制造蛋糕？构造方法  91
第20章  蛋糕家族：类的继承  94
20.1  古怪蛋糕也是蛋糕  94
20.2  这是遗传：继承的特性  96
第21章  特工联盟：模块  99
21.1  联盟条约：什么是模块  99
21.2  联盟宣言：模块内的变量和程序  101
21.3  模块的其他特征  103
第22章  妈妈生日快乐：日期和时间  105
22.1  5月的日历  105
22.2  母亲节是哪一天  108
22.3  顾客驾到：记录当前时间  109
22.4  时间元组和时间戳  110
第23章  警报，警报：异常处理  112
23.1  小小的错误：语法错误  112
23.2  非正常行为：异常  113
23.3  异常捕手：异常处理  115
23.4  个性化的异常处理  116
23.5  小小的恶作剧：抛出异常  120
第24章  鸡兔同笼：循环的应用  122
24.1  雉兔各几何  122
24.2  更多的笼子  123
24.3  “鸡兔同笼”游戏  124
第25章  步数排行榜：冒泡排序  125
25.1  前后交换：冒泡排序的基本操作  125
25.2  改良的冒泡排序  128
第26章  销量排行榜：选择排序  130
26.1  销量冠军：求最大项  130
26.2  选择排序  132
26.3  选择排序和冒泡排序哪个更快  133
第27章  程序员的暴力：穷举法  135
27.1  百钱买百鸡  135
27.2  破解通关密码  137
第28章  开心森林：最短路径问题  139
28.1  乘车路线图  139
28.2  图的代码实现  140
28.3  广度优先搜索  141
第29章  小小日记本：文件基本操作  144
29.1  创建日记本  144
29.2  写日记：写入文件  146
29.3  翻看旧日记：读取文件  147
29.4  读取指定日记  148
第30章  识得庐山真面目：与系统打交道  150
30.1  系统信息：OS常用方法  150
30.2  文件系统信息  151
30.3  调用系统命令  152
第31章  高级身份牌：GUI编程初步  154
31.1  提拉米苏的身份牌  154
31.2  舒芙蕾的身份牌：Text  156
31.3  更多的小部件  158
第32章  一触即发：事件编程  159
32.1  蛋糕列表：Listbox  159
32.2  程序的感知：事件响应  160
第33章  印象派：Canvas绘图  163
33.1  一条直线：Canvas初探  163
33.2  标注坐标点：绘制文字  165
33.3  方块和椭圆  166
第34章  三国名人录：绘制图像  168
34.1  神机妙算诸葛亮  168
34.2  三国名人录  169
第35章  生命在于运动：Canvas动画  172
35.1  Just move  172
35.2  上下左右：控制动画  174
第36章  超强背景音：播放声音  176
36.1  播放wav文件  176
36.2  pip和pygame：安装外部模块  178
36.3  蛋糕店的主题曲：播放mp3  179
第37章  猜数游戏：GUI应用  181
37.1  音乐和音效  181
37.2  游戏的交互：事件处理  183
37.3  游戏界面  185
第38章  散文中的动词：正则表达式  187
38.1  找到杨柳、燕子和桃花  187
38.2  找到“动词”：正则表达式的模式  189
第39章  小小的爬虫：正则表达式的应用  192
39.1  切割网页：为匹配做准备  192
39.2  找出文字中的链接：正则匹配  193
第40章  大蛇卡丁车：多线程  195
40.1  赛况直播：了解多线程  195
40.2  小小的秘密武器：线程锁  198
第41章  您有一个包裹：JSON处理  201
41.1  小小的礼物：JSON编码  201
41.2  吉森的回信：解析JSON  203
第42章  来自蛋糕店的问候：Web服务器与CGI程序  205
42.1  网站的基础：Web服务器  205
42.2  蛋糕店的问候：第一个CGI程序  207
第43章  为顾客服务：GET和POST  210
43.1  填写蛋糕的名字：客户表单  210
43.2  客户表单处理程序  211
43.3  隐藏信息的传递方式：POST  214
第44章  小i是个机器人：socket编程  215
44.1  给小i发送消息：客户端  215
44.2  小i的回答：服务器  217
第45章  小小伊妹儿：邮件发送程序  220
45.1  “吉森，你好！”：文字邮件  220
45.2  小小的近照：发送附件  223
第46章  信息大爆炸：初识数据库  226
46.1  什么是数据库  226
46.2  挠痒痒：连接MySQL数据库  229
第47章  聪明的BOSS：数据库应用  233
47.1  First of All：创建数据库  233
47.2  Drop：删除数据库  235
47.3  员工与蛋糕：创建数据表  236
47.4  添加第一个员工  240
第48章  大厨的“派”：随机数的应用  246
48.1  神秘的厨师：蒙特卡罗  246
48.2  派和π：蒙特卡罗法应用  247
第49章  欧几里得算法：辗转相除  249
49.1  操场划分：最大公约数  249
49.2  最小公倍数  251
第50章  汉诺塔问题：递归的应用  253
50.1  简化的汉诺塔：三阶刚刚好  253
50.2  汉诺塔问题的步骤数  256
第51章  别针换摩托：迪杰特斯拉算法  259
51.1  交换大会：有向加权图  259
51.2  小D的办法：最优路径  262
51.3  “换”梦成真：最优路径算法  264
第52章  验证哥德巴赫猜想：并行计算  267
52.1  什么是哥德巴赫猜想  267
52.2  充分利用CPU：并行计算  269
第53章  小小旅行家：贪心算法  273
53.1  旅行商问题  273
53.2  环球旅行：贪心算法  275
第54章  电影分类和猜蛋糕：KNN算法  279
54.1  你会看电影吗？特征抽取  279
54.2  和哪部电影最像？分类  280
54.3  做多少蛋糕才合适？回归  282
附录A  如何安装Python  285
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>小小的Python编程故事
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python科学计算最佳实践：SciPy指南
前言　　ix
第1章　优雅的NumPy：Python科学应用的基础　　1
1.1 数据简介：什么是基因表达　　2
1.2 NumPy的N维数组　　6
1.2.1 为什么用N维数组代替Python列表　　7
1.2.2 向量化　　9
1.2.3 广播　　9
1.3 探索基因表达数据集　　10
1.4 标准化　　13
1.4.1 样本间的标准化　　13
1.4.2 基因间的标准化　　19
1.4.3 样本与基因标准化：RPKM　　21
1.5 小结　　27
第2章　用NumPy和SciPy进行分位数标准化　　28
2.1 获取数据　　30
2.2 独立样本间的基因表达分布差异　　30
2.3 计数数据的双向聚类　　33
2.4 簇的可视化　　35
2.5 预测幸存者　　37
2.5.1 进一步工作：使用TCGA患者簇　　41
2.5.2 进一步工作：重新生成TCGA簇　　41
第3章　用ndimage实现图像区域网络　　42
3.1 图像就是NumPy数组　　43
3.2 信号处理中的滤波器　　48
3.3 图像滤波（二维滤波器）　　53
3.4 通用滤波器：邻近值的任意函数　　55
3.4.1 练习：康威的生命游戏　　56
3.4.2 练习：Sobel梯度幅值　　56
3.5 图与NetworkX库　　57
3.6 区域邻接图　　60
3.7 优雅的ndimage：如何根据图像区域建立图对象　　63
3.8 归纳总结：平均颜色分割　　65
第4章　频率与快速傅里叶变换　　67
4.1 频率的引入　　67
4.2 示例：鸟鸣声谱图　　69
4.3 历史　　74
4.4 实现　　75
4.5 选择离散傅里叶变换的长度　　75
4.6 更多离散傅里叶变换概念　　77
4.6.1 频率及其排序　　77
4.6.2 加窗　　83
4.7 实际应用：分析雷达数据　　86
4.7.1 频域中的信号性质　　91
4.7.2 加窗之后　　93
4.7.3 雷达图像　　95
4.7.4 快速傅里叶变换的进一步应用　　99
4.7.5 更多阅读　　99
4.7.6 练习：图像卷积　　100
第5章　用稀疏坐标矩阵实现列联表　　101
5.1 列联表　　102
5.1.1 练习：混淆矩阵的计算复杂度　　103
5.1.2 练习：计算混淆矩阵的另一种方法　　103
5.1.3 练习：多类混淆矩阵　　104
5.2 scipy.sparse数据格式　　104
5.2.1 COO格式　　104
5.2.2 练习：COO表示　　105
5.2.3 稀疏行压缩格式　　106
5.3 稀疏矩阵应用：图像转换　　108
5.4 回到列联表　　112
5.5 图像分割中的列联表　　113
5.6 信息论简介　　114
5.7 图像分割中的信息论：信息变异　　117
5.8 转换NumPy数组代码以使用稀疏矩阵　　119
5.9 使用信息变异　　120
第6章　SciPy中的线性代数　　128
6.1 线性代数基础　　128
6.2 图的拉普拉斯矩阵　　129
6.3 大脑数据的拉普拉斯矩阵　　134
6.3.1 练习：显示近邻视图　　138
6.3.2 练习挑战：稀疏矩阵线性代数　　138
6.4 PageRank：用于声望和重要性的线性代数　　139
6.4.1 练习：处理悬挂节点　　144
6.4.2 练习：不同特征向量方法的等价性　　144
6.5 结束语　　144
第7章　SciPy中的函数优化　　145
7.1 SciPy优化模块：sicpy.optimize　　146
7.2 用optimize进行图像配准　　152
7.3 用basin hopping算法避开局部最小值　　155
7.4 选择正确的目标函数　　156
第8章　用Toolz在笔记本电脑上玩转大数据　　163
8.1 用yield进行流处理　　164
8.2 引入Toolz流库　　167
8.3 k-mer计数与错误修正　　169
8.4 柯里化：流的调料　　173
8.5 回到k-mer计数　　175
8.6 全基因组的马尔可夫模型　　177
后记　　182
附录 练习答案　　186
作者简介　　206
封面简介　　206
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python科学计算最佳实践：SciPy指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>知识网络与合作网络的关系——基于Python编程
第1章 绪论
第2章 网络分析方法
第3章 知识占有网络、知识元素网络与合作关系网络
第4章 直接关系对技术相似关系与技术创新绩效的中介作用
第5章 知识基础与合作关系的交互作用
第6章 关系强度变动对多类别知识转移效率的影响
第7章 合作网络结构变动对知识元素网络的影响
第8章 研究成果与展望
参考文献
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>知识网络与合作网络的关系——基于Python编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据爬取技术与实战手册
第1章  最佳拍档：网络爬虫与Python语言
1.1  什么是网络爬虫 1
1.1.1 网络爬虫的定义 2
1.1.2 网络爬虫的工作流程 2
1.1.3 网络爬虫的分类 3
1.1.4 为什么选择用Python编写网络爬虫 4
1.1.5 编写爬虫的注意事项 4
1.2 Python环境配置 5
1.2.1 Python的安装 5
1.2.2 Python第三方库的安装 6
【示例1-1】使用包管理器安装科学计算库numpy 6
【示例1-2】源代码方式安装xlrd库（使用setup.py文件） 7
【示例1-3】源代码方式安装xlrd库（使用whl文件） 8
1.2.3 Python开发工具的选择 8
【示例1-4】将文本编辑器配置成Python开发工具（以Notepad 为例） 12
1.3 Python基本语法 13
1.3.1 Python书写规则 13
1.3.2 Python基本数据类型 18
【示例1-5】以列表a = ['a','a','b','c','d','d','e']为例讲解List的基本操作 21
【示例1-6】以列表a = [1,2,3,4,5,6,7,8]为例讲解数据型列表的属性分析 23
【示例1-7】以字典a为例，讲解字典的基本操作 25
1.3.3 Python独有数据生成方式：推导式 29
1.3.4 函数 30
【示例1-8】局部变量与全局变量重名的运行结果与解决方案 31
1.3.5 条件与循环 34
1.3.6 类与对象 35
【示例1-9】请输出学生信息中某学生的班级、姓名和总分数 35
1.3.7 Python 2代码转为Python 3代码 36
【示例1-10】以文件test.py为例，介绍Python 2代码到Python 3代码的转化 37
第2章  应知应会：网络爬虫基本知识
2.1  网页的构成 38
2.1.1 HTML基本知识 39
2.1.2 网页中各元素的排布 46
【示例2-1】以新浪博客文本为例，学习各类元素的排布规则 46
2.2  正则表达式 48
2.2.1 正则表达式简介 48
2.2.2 Python语言中的正则表达式 49
【示例2-2】正则表达式应用中，当匹配次数达到10万时，预先编译对正则表达式性能的提升 51
2.2.3 综合实例：正则表达式的实际应用——在二手房网站中提取有用信息 52
2.3  汉字编码问题 54
2.3.1 常见编码简介 54
2.3.2 常用编程环境的默认编码 55
2.3.3 网页编码 56
2.3.4 编码转换 56
2.4  网络爬虫的行为准则 57
2.4.1 遵循Robots协议 57
2.4.2 网络爬虫的合法性 59
第3章  静态网页爬取
3.1 Python常用网络库 61
3.1.1 urllib库 62
【示例3-1】从众多代理IP中选取可用的IP 63
【示例3-2】百度搜索“Python”url演示Parse模块应用 66
3.1.2 综合实例：批量获取高清壁纸 68
3.1.3 requests库 71
【示例3-3】用requests实现豆瓣网站模拟登录 72
3.1.4 综合实例：爬取历史天气数据预测天气变化 74
3.2  网页解析工具 77
3.2.1 更易上手：BeautifulSoup 77
【示例3-4】解析HTML文档（以豆瓣读书《解忧杂货店》为例） 78
3.2.2 更快速度：lxml 81
3.2.3 BeautifulSoup与lxml对比 82
【示例3-5】爬取豆瓣读书中近5年出版的评分7分以上的漫画 82
【示例3-6】BeautifulSoup和lxml解析同样网页速度测试（基于网易新闻首页） 85
3.2.4 综合实例：在前程无忧中搜索并抓取不同编程语言岗位的平均收入 85
第4章  动态网页爬取
4.1 AJAX技术 89
4.1.1 获取AJAX请求 90
4.1.2 综合实例：抓取简书百万用户个人主页 91
4.2 Selenium操作浏览器 97
4.2.1 驱动常规浏览器 97
4.2.2 驱动无界面浏览器 100
4.2.3 综合实例：模拟登录新浪微博并下载短视频 101
4.3  爬取移动端数据 103
4.3.1 Fiddler工具配置 103
4.3.2 综合实例：Fiddle实际应用——爬取大角虫漫画信息 105
第5章  统一架构与规范：网络爬虫框架
5.1  最流行的网络爬虫框架：Scrapy111
5.1.1 安装须知与错误解决方案 111
5.1.2 Scrapy的组成与功能 112
5.2  综合实例：使用Scrapy构建观影指南 118
5.2.1 网络爬虫准备工作 119
5.2.2 编写Spider 121
5.2.3 处理Item 123
5.2.4 运行网络爬虫 124
5.2.5 数据分析 124
5.3  更易上手的网络爬虫框架：Pyspider126
5.3.1 创建Pyspider项目 127
【示例5-1】利用Pyspider创建抓取煎蛋网项目并测试代码 127
5.3.2 运行Pyspider项目 129
第6章  反爬虫应对策略
6.1  设置Headers信息 132
6.1.1 User-Agent 133
6.1.2 Cookie 136
6.2  建立IP代理池 138
6.2.1 建立IP代理池的思路 138
6.2.2 建立IP代理池的步骤 138
6.3  验证码识别 140
6.3.1 识别简单的验证码 141
【示例6-1】通过pytesseract库识别8个简单的验证码，并逐步提升准确率 141
6.3.2 识别汉字验证码 146
6.3.3 人工识别复杂验证码 146
6.3.4 利用Cookie绕过验证码 149
第7章  提升网络爬虫效率
7.1  网络爬虫策略 152
7.1.1 广度优先策略 153
7.1.2 深度优先策略 153
7.1.3 按网页权重决定爬取优先级 154
7.1.4 综合实例：深度优先和广度优先策略效率对比
（抓取慕课网实战课程地址） 154
7.2  提升网络爬虫的速度 158
7.2.1 多线程 159
【示例7-1】使用4个线程同步抓取慕课网实战课程地址（基于深度优先策略） 159
7.2.2 多进程 161
7.2.3 分布式爬取 162
7.2.4 综合实例：利用现有知识搭建分布式爬虫（爬取百度贴吧中的帖子） 162
第8章  更专业的爬取数据存储与处理：数据库
8.1  受欢迎的关系型数据库：MySQL170
8.1.1 MySQL简介 170
8.1.2 MySQL环境配置 171
8.1.3 MySQL的查询语法 174
【示例8-1】使用MySQL查询语句从数据表Countries中选取面积大于10000km2的欧洲国家 177
8.1.4 使用pymysql连接MySQL数据库 178
8.1.5 导入与导出数据 179
8.2  应对海量非结构化数据：MongoDB数据库 180
8.2.1 MongoDB 简介 180
8.2.2 MongoDB环境配置 182
8.2.3 MongoDB基本语法 186
8.2.4 使用PyMongo连接MongoDB 188
8.2.5 导入/导出JSON文件 189
第9章  Python文件读取
9.1 Python文本文件读写 190
9.2  数据文件CSV 192
9.3  数据交换格式JSON193
9.3.1 JSON模块的使用 194
【示例9-1】请用JSON模块将data变量（包含列表、数字和字典的数组）转换成字符串并还原 194
9.3.2 JSON模块的数据转换 195
9.4 Excel读写模块：xlrd 195
9.4.1 读取Excel文件 196
9.4.2 写入Excel单元格 197
9.5 PowerPoint文件读写模块：pptx 197
9.5.1 读取pptx 197
9.5.2 写入pptx 198
9.6  重要的数据处理库：Pandas库 199
9.6.1 使用pandas库处理CSV文件 200
9.6.2 使用pandas库处理JSON文件 200
9.6.3 使用pandas库处理HTML文件 202
【示例9-2】用read_html()将某二手房网站表格中的数据提取出来 203
9.6.4 使用pandas库处理SQL文件 203
9.7  调用Office软件扩展包：win32com204
9.7.1 读取Excel文件 204
9.7.2 读取Word文件 205
9.7.3 读取PowerPoint文件 205
9.8  读取PDF文件 206
9.8.1 读取英文PDF文档 206
9.8.2 读取中文PDF文档 208
9.8.3 读取扫描型PDF文档 210
9.9 综合实例：自动将网络文章转化为PPT文档 211
第10章  通过API获取数据
10.1 免费财经API——TuShare 214
10.1.1 获取股票交易数据 215
【示例10-1】获取某股票2017年8月份的周K线数据 215
10.1.2 获取宏观经济数据 217
10.1.3 获取电影票房数据 219
10.2 新浪微博API的调用 220
10.2.1 创建应用 220
10.2.2 使用API 222
10.3 调用百度地图API 225
10.3.1 获取城市经纬度 226
【示例10-2】使用百度地图API获取南京市的经纬度信息 226
10.3.2 定位网络IP 226
【示例10-3】使用百度API定位IP地址（223.112.112.144） 226
10.3.3 获取全景静态图 227
10.4 调用淘宝API 228
第11章  网络爬虫工具
11.1 使用Excel采集网页数据 231
11.1.1 抓取网页中的表格 232
11.1.2 抓取非表格的结构化数据 233
11.2 使用Web Scraper插件 237
11.2.1 安装Web Scraper 237
11.2.2 Web Scraper的使用 238
【示例11-1】使用Web Scraper爬取当当网小说书目 238
11.3 商业化爬取工具 240
11.3.1 自定义采集 241
【示例11-2】利用网络爬虫软件八爪鱼自定义采集当当网图书信息 241
11.3.2 网站简易采集 245
【示例11-3】利用网络爬虫软件八爪鱼的网络简易采集方式抓取房天下网中的合肥新房房价数据 245
第12章  数据分析工具：科学计算库
12.1 单一类型数据高效处理：Numpy库 248
12.1.1 ndarray数组 248
【示例12-1】对一维ndarray数组a进行读取、修改和切片操作 249
【示例12-2】对多维ndarray数组b进行读取、修改和切片操作 250
【示例12-3】对多维ndarray数组n进行矩阵运算（拼接、分解、转置、行列式、
求逆和点乘） 252
12.1.2 Numpy常用函数 253
【示例12-4】对多维ndarray数组a进行统计操作 253
【示例12-5】对一维ndarray数组a进行数据处理操作（去重、直方图统计、相关
系数、分段、多项式拟合） 256
12.1.3 Numpy性能优化 257
12.2 复杂数据全面处理：Pandas库 258
12.2.1 Pandas库中的4种基础数据结构 258
12.2.2 Pandas使用技巧 264
【示例12-6】对比普通for循环遍历与iterrows()遍历方法的速度差异 264
12.3 Python机器学习库：Scikit-learn 268
【示例12-7】以鸢尾花数据为例，使用Sklearn进行监督学习的基本建模过程（决策树模型） 269
第13章  掌握绘图软件：将数据可视化
13.1 应用广泛的数据可视化：Excel绘图 271
13.1.1 绘制（对比）柱形图 272
13.1.2 绘制饼图并添加标注 273
13.1.3 其他图形 275
13.1.4 Excel频率分布直方图 276
【示例13-1】利用Excel绘制全国各省市城镇人员平均工资频率分布直方图 276
13.2 适合处理海量数据：Tableau绘图 278
13.2.1 基本操作：导入数据 278
13.2.2 绘制（多重）柱状对比图 279
13.2.3 智能显示：图形转换 281
13.2.4 绘制频率分布直方图 281
【示例13-2】利用Tableau绘制2015年我国城镇就业人员平均工资频率分布直方图 281
13.3 完善的二维绘图库：Matplotlib/Seaborn 283
13.3.1 使用Matplotlib绘制函数图表 283
13.3.2 使用Matplotlib绘制统计图表 285
13.4 优化：Seaborn的使用 289
13.5 综合实例：利用Matplotlib构建合肥美食地图 293
13.5.1 绘制区域地图 293
13.5.2 利用百度地图Web服务API获取美食地址 294
13.5.3 数据分析 298
13.5.4 绘制热力图完善美食地图展示 300
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据爬取技术与实战手册
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>算法设计与分析(Python)
第1 章引言1
1.1 算法的定义. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 1
1.1.1 算法的属性. . . . . . . . . . . . . . . . . . . . . . . . . . 3
1.1.2 效率的定义. . . . . . . . . . . . . . . . . . . . . . . . . . 4
1.2 算法设计与分析举例. . . . . . . . . . . . . . . . . . . . . . . . . 7
1.2.1 寻找局部⾼点-1D . . . . . . . . . . . . . . . . . . . . . . . 7
1.2.2 图书管理. . . . . . . . . . . . . . . . . . . . . . . . . . . . 11
1.3 ⼩结. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 14
第2 章渐进分析与Python 计算模型16
2.1 引⾔. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 16
2.2 计算模型. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 17
2.3 算法的渐进分析. . . . . . . . . . . . . . . . . . . . . . . . . . . . 18
2.4 Python 计算模型. . . . . . . . . . . . . . . . . . . . . . . . . . . . 22
2.4.1 控制流语句. . . . . . . . . . . . . . . . . . . . . . . . . . 22
2.4.2 数据结构. . . . . . . . . . . . . . . . . . . . . . . . . . . . 25
2.5 算法分析实例. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 28
2.5.1 求最⼤值. . . . . . . . . . . . . . . . . . . . . . . . . . . . 29
2.5.2 ⼆分搜索. . . . . . . . . . . . . . . . . . . . . . . . . . . . 30
2.5.3 ⼦集和问题. . . . . . . . . . . . . . . . . . . . . . . . . . 31
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 35
3.2 ⽂档⽐较. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 36
3.2.1 问题提出. . . . . . . . . . . . . . . . . . . . . . . . . . . . 36
3.2.2 算法设计. . . . . . . . . . . . . . . . . . . . . . . . . . . . 36
3.2.3 算法优化. . . . . . . . . . . . . . . . . . . . . . . . . . . . 40
3.3 拼写矫正. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 43
3.3.1 问题提出. . . . . . . . . . . . . . . . . . . . . . . . . . . . 43
3.3.2 算法设计. . . . . . . . . . . . . . . . . . . . . . . . . . . . 43
3.4 稳定匹配问题. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 48
3.4.1 问题提出. . . . . . . . . . . . . . . . . . . . . . . . . . . . 48
3.4.2 算法设计. . . . . . . . . . . . . . . . . . . . . . . . . . . . 50
3.5 ⼩结. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 54
第4 章递归算法与递归函数56
4.1 引⾔. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 56
4.2 递归的组成结构. . . . . . . . . . . . . . . . . . . . . . . . . . . . 57
4.2.1 如何筹集巨款. . . . . . . . . . . . . . . . . . . . . . . . . 57
4.2.2 上线与下线. . . . . . . . . . . . . . . . . . . . . . . . . . 59
4.3 递归算法的执⾏. . . . . . . . . . . . . . . . . . . . . . . . . . . . 61
4.3.1 跟踪函数的执⾏. . . . . . . . . . . . . . . . . . . . . . . . 62
4.4 利⽤递归算法求解问题. . . . . . . . . . . . . . . . . . . . . . . . 67
4.4.1 回⽂判断. . . . . . . . . . . . . . . . . . . . . . . . . . . . 68
4.4.2 全排列. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 70
4.4.3 汉诺塔问题. . . . . . . . . . . . . . . . . . . . . . . . . . 72
4.4.4 雪花曲线. . . . . . . . . . . . . . . . . . . . . . . . . . . . 76
4.5 递归函数的求解. . . . . . . . . . . . . . . . . . . . . . . . . . . . 78
4.5.1 替换法. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 79
4.5.2 主分析法. . . . . . . . . . . . . . . . . . . . . . . . . . . . 80
4.6 ⼩结. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 83
第5 章排序与树结构86
5.1 引⾔. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 86
5.2 递归与排序. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 87
5.2.1 选择排序. . . . . . . . . . . . . . . . . . . . . . . . . . . . 87
5.2.2 插⼊排序. . . . . . . . . . . . . . . . . . . . . . . . . . . . 90
5.2.3 合并排序. . . . . . . . . . . . . . . . . . . . . . . . . . . . 93
5.3 ⼆叉搜索树. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 96
5.3.1 BST 的实现. . . . . . . . . . . . . . . . . . . . . . . . . . 100
5.3.2 插⼊新节点. . . . . . . . . . . . . . . . . . . . . . . . . . 101
5.3.3 BST 上查找. . . . . . . . . . . . . . . . . . . . . . . . . . 103
5.3.4 ⼆叉树修剪. . . . . . . . . . . . . . . . . . . . . . . . . . 105
5.4 堆. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 108
5.4.1 堆化操作. . . . . . . . . . . . . . . . . . . . . . . . . . . . 108
5.4.2 构造堆. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 111
5.4.3 堆排序. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 113
5.4.4 合并k 个有序序列. . . . . . . . . . . . . . . . . . . . . . 115
5.5 ⼩结. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 117
第6 章分治算法120
6.1 引⾔. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 120
6.2 股票的买卖. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 121
6.2.1 问题描述. . . . . . . . . . . . . . . . . . . . . . . . . . . . 121
6.2.2 算法设计. . . . . . . . . . . . . . . . . . . . . . . . . . . . 122
6.3 统计逆序. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 125
6.3.1 问题描述. . . . . . . . . . . . . . . . . . . . . . . . . . . . 125
6.3.2 算法设计. . . . . . . . . . . . . . . . . . . . . . . . . . . . 126
6.4 空间最⼩距离点对. . . . . . . . . . . . . . . . . . . . . . . . . . . 130
6.4.1 问题描述. . . . . . . . . . . . . . . . . . . . . . . . . . . . 130
6.4.2 算法设计. . . . . . . . . . . . . . . . . . . . . . . . . . . . 131
6.5 寻找第k ⼩的数. . . . . . . . . . . . . . . . . . . . . . . . . . . . 137
6.5.1 问题描述. . . . . . . . . . . . . . . . . . . . . . . . . . . . 137
6.5.2 算法设计. . . . . . . . . . . . . . . . . . . . . . . . . . . . 137
6.6 ⼤整数乘法. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 142
6.6.1 问题描述. . . . . . . . . . . . . . . . . . . . . . . . . . . . 142
6.6.2 算法设计. . . . . . . . . . . . . . . . . . . . . . . . . . . . 143
6.7 ⼩结. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 145
第7 章图搜索算法147
7.1 引⾔. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 147
7.2 图搜索的应⽤. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 148
7.3 图的表⽰. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 150
7.4 宽度优先搜索. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 152
7.4.1 宽度优先搜索算法. . . . . . . . . . . . . . . . . . . . . . 152
7.4.2 BFS 算法分析. . . . . . . . . . . . . . . . . . . . . . . . . 156
7.4.3 BFS 算法应⽤举例. . . . . . . . . . . . . . . . . . . . . . 156
7.5 深度优先搜索. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 161
7.5.1 深度优先搜索算法. . . . . . . . . . . . . . . . . . . . . . 162
7.5.2 DFS 算法分析. . . . . . . . . . . . . . . . . . . . . . . . . 166
7.5.3 DFS 应⽤举例. . . . . . . . . . . . . . . . . . . . . . . . . 166
7.6 ⼩结. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 168
第8 章贪心算法171
8.1 引⾔. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 171
8.2 硬币找零. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 172
8.2.1 问题描述. . . . . . . . . . . . . . . . . . . . . . . . . . . . 172
8.2.2 问题求解. . . . . . . . . . . . . . . . . . . . . . . . . . . . 172
8.2.3 最优解证明. . . . . . . . . . . . . . . . . . . . . . . . . . 173
8.3 间隔任务规划. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 174
8.3.1 问题描述. . . . . . . . . . . . . . . . . . . . . . . . . . . . 174
8.3.2 问题求解. . . . . . . . . . . . . . . . . . . . . . . . . . . . 175
8.3.3 最优解证明. . . . . . . . . . . . . . . . . . . . . . . . . . 178
8.4 单源最短路径问题. . . . . . . . . . . . . . . . . . . . . . . . . . . 179
8.4.1 Dijkstra 算法. . . . . . . . . . . . . . . . . . . . . . . . . . 181
8.4.2 算法的正确性. . . . . . . . . . . . . . . . . . . . . . . . . 183
8.4.3 算法的性能优化. . . . . . . . . . . . . . . . . . . . . . . . 184
8.5 最⼩⽣成树. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 187
8.5.1 Prim 算法. . . . . . . . . . . . . . . . . . . . . . . . . . . . 188
8.5.2 算法实现. . . . . . . . . . . . . . . . . . . . . . . . . . . . 190
8.6 ⼩结. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 194
第9 章动态规划算法197
9.1 引⾔. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 197
9.2 再遇斐波那契数. . . . . . . . . . . . . . . . . . . . . . . . . . . . 198
9.3 ⼀维动态规划. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 203
9.3.1 拾捡硬币. . . . . . . . . . . . . . . . . . . . . . . . . . . . 203
9.3.2 连续⼦序列和的最⼤值. . . . . . . . . . . . . . . . . . . . 208
9.3.3 疯狂的8 . . . . . . . . . . . . . . . . . . . . . . . . . . . . 211
9.3.4 ⽂本排版. . . . . . . . . . . . . . . . . . . . . . . . . . . . 217
9.3.5 完全信息的21 点. . . . . . . . . . . . . . . . . . . . . . . 222
9.4 ⼆维动态规划. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 227
9.4.1 矩阵的括号. . . . . . . . . . . . . . . . . . . . . . . . . . 227
9.4.2 字符串编辑距离. . . . . . . . . . . . . . . . . . . . . . . . 232
9.4.3 0-1 背包问题. . . . . . . . . . . . . . . . . . . . . . . . . . 237
9.5 ⼩结. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 241
第10 章最大流算法243
10.1 引⾔. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 243
10.2 最⼤流算法. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 244
10.2.1 Ford-Fulkerson 算法. . . . . . . . . . . . . . . . . . . . . . 249
10.2.2 Edmond-Karp 算法. . . . . . . . . . . . . . . . . . . . . . . 251
10.3 最⼤流算法的应⽤. . . . . . . . . . . . . . . . . . . . . . . . . . . 253
10.3.1 ⼆向图最⼤匹配问题. . . . . . . . . . . . . . . . . . . . . 253
10.3.2 ⽂件传输中的不重合边问题. . . . . . . . . . . . . . . . . 256
10.4 ⼩结. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 258
第11 章随机算法260
11.1 引⾔. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 260
11.2 矩阵乘积结果验证. . . . . . . . . . . . . . . . . . . . . . . . . . . 261
11.3 快速排序. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 265
11.3.1 根据⽀点数划分输⼊序列. . . . . . . . . . . . . . . . . . 265
11.3.2 选择⽀点数. . . . . . . . . . . . . . . . . . . . . . . . . . 267
11.3.3 随机快速排序. . . . . . . . . . . . . . . . . . . . . . . . . 270
11.4 选择第k ⼩的数. . . . . . . . . . . . . . . . . . . . . . . . . . . . 272
11.5 寻找最⼩割边. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 275
11.6 ⼩结. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 278
第12 章算法复杂度280
12.1 引⾔. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 280
12.2 问题的分类. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 281
12.2.1 易解与难解. . . . . . . . . . . . . . . . . . . . . . . . . . 281
12.2.2 ⽆解的问题. . . . . . . . . . . . . . . . . . . . . . . . . . 282
12.2.3 难解问题的证明. . . . . . . . . . . . . . . . . . . . . . . . 283
12.3 NPC 问题. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 286
12.3.1 决策问题. . . . . . . . . . . . . . . . . . . . . . . . . . . . 286
12.3.2 问题的化约. . . . . . . . . . . . . . . . . . . . . . . . . . 287
12.3.3 NP 问题. . . . . . . . . . . . . . . . . . . . . . . . . . . . 287
12.3.4 NPC 问题. . . . . . . . . . . . . . . . . . . . . . . . . . . . 290
12.4 P 等于NP 吗. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 292
12.5 ⼩结. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 293
参考文献302
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>算法设计与分析(Python)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>零基础学编程：树莓派和Python
第1 章 编程基础知识和环境准备  1
1.1 零基础的小白能学会编程吗 . 2
1.1.1 为什么要学编程 . 2
1.1.2 兴趣是最好的老师 . 3
1.1.3 为什么零基础的自学编程者，大多半途而废 . 3
1.1.4 有趣好玩很重要 . 4
1.1.5 家长带着孩子一起学是最好不过的 . 5
1.1.6 当你决定出发的时候，最困难的一部分已经完成了 . 5
1.1.7 计划的重要性 . 6
1.2 700 元的电脑真的可以学会编程  6
1.2.1 计算机（电脑）的历史 . 6
1.2.2 硬件和软件 . 7
1.2.3 操作系统 . 7
1.2.4 硬件选择 . 8
1.2.5 准备材料 . 11
1.2.6 如果已经有一台电脑了，怎么办 . 12
1.3 十分钟组装一台可编程电脑 . 12
1.3.1 给树莓派3 主板安装散热片 . 12
1.3.2 将树莓派3 主板安装到亚克力外壳中 . 15
1.3.3 接好移动电源 . 18
1.3.4 接好显示器 . 19
1.3.5 接好键盘和鼠标 . 20
1.3.6 进入系统 . 21
1.3.7 关机，分解装箱 . 22
1.4 如何编写人生的第一行代码：Hello World  23
1.4.1 如何开机 . 23
1.4.2 认识LX 终端  23
1.4.3 编写第一个Python 程序  28
1.4.4 设置网络 . 30
1.4.5 访问互联网 . 31
1.4.6 使用Text Editor 文本编辑器输入英文 . 32
1.4.7 学会输入中文 . 34
1.4.8 关机 . 36
1.4.9 如果已经有一台电脑了，怎么办 . 37
第2 章 Python 编程语言基础 . 40
2.1 加法计算器 . 41
2.1.1 直接在Python 环境输入代码并运行  41
2.1.2 变量、赋值操作符、输入函数、参数、字符串、输出函数 42
2.1.3 了解加法计算器代码 . 44
2.1.4 字符串和整数是不同的数据类型 . 45
2.1.5 将Python 代码放到文件中  46
2.1.6 执行Python 程序文件  47
2.1.7 参考加法计算器的代码创建类似程序——减法计算器  48
2.2 四则运算器 . 50
2.2.1 0 和1 的世界  51
2.2.2 布尔类型——Ture 和False  52
2.2.3 逻辑运算符——and、or 和not . 52
2.2.4 if 判断语句 . 53
2.2.5 用if 语句判断输入的符号 . 55
2.2.6 测试程序 . 57
2.3 功能更丰富的四则运算器程序 . 59
2.3.1 增加注释行 . 59
2.3.2 让程序来判断输入的结果是否正确 . 61
2.3.3 让程序来出计算题目吧 . 62
2.4 计算日期所属星座 . 64
2.4.1 输入月份和日期 . 64
2.4.2 检查月份和日期是否正确 . 65
2.4.3 如何判断所输入的日期对应哪个星座 . 66
2.4.4 如何测试到每一种情况 . 69
2.5 Python 循环语句 . 69
2.5.1 什么是循环 . 69
2.5.2 while 循环的语法 . 70
2.5.3 从1 加到100 求和 . 71
2.5.4 从1 开始，连续100 个奇数相加的结果是多少 . 72
2.5.5 从2 开始，连续50 个偶数相加的结果是多少 . 73
2.5.6 从1 月1 日到12 月31 日的每一天分别是什么星座 . 73
2.6 循环的更多用法——斐波拉契数列  77
2.7 练习使用循环和判断语句 . 79
2.7.1 已知2017/1/1 是星期天，输出2017 年每一天是星期几 . 79
2.7.2 输出2016 年的每一天是星期几 . 82
2.7.3 输入一个年份，判断是闰年还是平年 . 83
第3 章 Python 编程语言进阶 . 87
3.1 列表类型 . 88
3.1.1 认识列表类型 . 88
3.1.2 访问列表中的值 . 88
3.1.3 更新列表 . 89
3.1.4 追加列表元素 . 89
3.1.5 删除列表元素 . 89
3.1.6 如何遍历列表 . 89
3.1.7 使用更简单的方法实现“输入数字1～7，判断是星期几” . 91
3.1.8 改造星座判断程序 . 91
3.2 数据类型转换 . 95
3.2.1 统计包含“2”的数字总个数 . 95
3.2.2 标准数据类型 . 96
3.2.3 数据类型转换 . 96
3.2.4 函数range . 97
3.2.5 统计代码 . 98
3.2.6 二维列表 . 98
3.3 字典数据类型 . 101
3.3.1 认识字典数据类型 . 101
3.3.2 访问字典里的值 . 102
3.3.3 修改字典里的值 . 102
3.3.4 删除字典元素 . 102
3.3.5 判断是否存在键 . 103
3.3.6 如何遍历字典 . 103
3.3.7 改造“最多邮编省份名称统计”程序 . 103
3.3.8 输入一行字符串，打印出其中每个字符出现的次数 . 104
3.4 Python 函数 . 115
3.4.1 输入参数求三角形、圆形或长方形的面积 . 115
3.4.2 认识函数 . 116
3.4.3 函数的定义 . 117
3.4.4 函数的使用 . 118
3.4.5 按值传递参数和按引用传递参数 . 119
3.4.6 参数的几种形式 . 120
3.4.7 常用的系统内建函数 . 121
3.4.8 递归函数 . 121
3.4.9 改造“四则计算器程序” . 124
3.4.10 改造面积计算程序 . 125
3.4.11 关于函数和模块设计定义的一些经验 . 126
3.5 模块和进程 . 130
3.5.1 认识模块 . 130
3.5.2 在另一个文件里导入模块 . 131
3.5.3 日期和时间模块 . 132
3.6 字符串操作和读写文件 . 133
3.6.1 认识字符串 . 133
3.6.2 访问字符串中的值 . 133
3.6.3 转义字符 . 133
3.6.4 字符串运算符 . 134
3.6.5 字符串格式化 . 135
3.6.6 常用的字符串内建函数 . 135
3.6.7 文件读写 . 136
3.6.8 统计文章中出现次数最多的10 个字 . 136
第4 章 使用树莓派电脑控制各种硬件  140
4.1 让LED 灯亮起来 . 141
4.1.1 购买硬件 . 141
4.1.2 GPIO 介绍 . 141
4.1.3 LED 灯电路原理  144
4.1.4 硬件连接 . 144
4.1.5 编写程序 . 146
4.1.6 执行程序 . 146
4.1.7 程序中每行代码的说明 . 147
4.2 使用笔记本电脑远程控制树莓派电脑 . 151
4.2.1 需要网络支持 . 151
4.2.2 如何查看网络IP 地址 . 151
4.2.3 如何远程登录 . 156
4.2.4 如何上传文件 . 159
4.2.5 如何执行树莓派电脑上的程序 . 162
4.2.6 如何通过图形界面访问树莓派电脑 . 162
4.2.7 摆脱线的束缚 . 166
4.3 发出蜂鸣声音 . 167
4.3.1 蜂鸣器 . 167
4.2.2 持续鸣叫 . 168
4.2.3 有节奏地鸣叫 . 169
4.4 控制温湿度传感器 . 170
4.4.1 温湿度传感器 . 170
4.3.2 硬件连接 . 172
4.3.3 编写程序 . 174
4.5 制作温度报警器 . 176
4.5.1 硬件连接 . 176
4.4.2 编写程序 . 177
4.6 控制单位数码管显示数字 . 180
4.6.1 电路原理 . 181
4.6.2 一个灯A 管接线  182
4.6.3 程序解释说明 . 184
4.6.4 将全部灯管接线 . 184
4.6.5 显示数字1  184
4.6.6 显示所有数字 . 186
4.7 控制双位数码管显示时间秒数 . 189
4.7.1 电路原理 . 189
4.7.2 刷新机制 . 190
4.7.3 全部灯管接线 . 191
4.7.4 显示数字01  191
4.7.5 显示当前时间秒数 . 194
4.8 将测量温度显示到数码管并同时示警 . 199
4.8.1 电路原理 . 199
4.8.2 硬件连接 . 200
4.8.3 编写程序 . 201
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>零基础学编程：树莓派和Python
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python 3 面向对象编程（第2版）
第1章  面向对象设计  1
面向对象  1
对象和类  3
指定属性和行为  5
数据描述对象  5
行为就是动作  7
隐藏细节并创建公共接口  8
组合  11
继承  13
继承提供抽象  15
多重继承  16
案例学习  16
练习  24
总结  24
第2章  Python对象  26
创建Python类  26
添加属性  28
让它做点什么  29
初始化对象  32
自我解释  34
模块和包  36
组织模块  38
组织模块内容  41
谁可以访问我的数据  44
第三方库  46
案例学习  48
练习  56
总结  57
第3章  对象相似时  58
基本的继承  58
扩展内置对象  60
重写和super  62
多重继承  63
钻石型继承问题  66
不同集合的参数  71
多态  74
抽象基类  77
使用抽象基类  77
创建抽象基类  78
魔术揭秘  80
案例学习  82
练习  95
总结  95
第4章  异常捕获  96
抛出异常  96
抛出一个异常  98
异常的作用  99
处理异常  101
异常的层级  106
定义我们自己的异常  108
案例学习  112
练习  122
总结  123
第5章  何时使用面向对象编程  124
将对象看作对象  124
通过属性向类数据添加行为  128
属性的细节  131
装饰器——另一种创建属性的方法  133
决定何时使用属性  134
管理员对象  136
移除重复代码  139
实践  141
案例学习  144
练习  152
总结  153
第6章  Python数据结构  154
空对象  154
元组和命名元组  155
命名元组  157
字典  159
字典用例  162
使用defaultdict  163
列表  166
列表排序  168
集合  171
扩展内置类型  175
队列  180
FIFO队列  181
LIFO队列  183
优先级队列  184
案例学习  186
练习  193
总结  194
第7章  Python面向对象的捷径  195
Python内置函数  195
len()函数  195
反转函数  196
枚举  198
文件I/O  199
放在上下文管理器中  201
方法重载的另一种方式  203
默认参数  204
变量参数列表  206
参数解包  209
函数也是对象  210
将函数作为属性  215
可调用对象  216
案例学习  217
练习  224
总结  225
第8章  字符串与序列化  226
字符串  226
字符串操作  227
字符串格式化  229
字符串是Unicode  236
可变字节字符串  240
正则表达式  241
匹配模式  242
从正则表达式中获取信息  246
序列化对象  249
自定义序列化  251
序列化Web对象  253
案例学习  256
练习  262
总结  263
第9章  迭代器模式  265
设计模式简介  265
迭代器  266
迭代器协议  266
推导  269
列表推导  269
集合与字典推导  271
生成器表达式  272
生成器  274
从另一个可迭代对象中产生  277
协程  279
回到日志解析  282
关闭协程并抛出异常  285
协程、生成器与函数的关系  285
案例学习  286
练习  293
总结  294
第10章  Python设计模式I  295
装饰器模式  295
装饰器的例子  296
Python中的装饰器  299
观察者模式  301
观察者模式的例子  302
策略模式  304
策略模式的例子  305
Python中的策略  307
状态模式  307
状态模式的例子  308
状态与策略  314
状态转换作为协程  314
单例模式  315
单例模式的实现  315
模板模式  319
模板模式的例子  319
练习  323
总结  324
第11章  Python设计模式II  325
适配器模式  325
门面模式  328
享元模式  331
命令模式  335
抽象工厂模式  340
复合模式  344
练习  349
总结  350
第12章  测试面向对象程序  351
为什么要测试  351
测试驱动开发  353
单元测试  354
断言方法  355
减少模板代码并进行清理  357
组织和运行测试  359
忽略失败的测试  359
用py.test进行测试  361
一种完成设置和清理的方式  363
一种完全不同的设置变量的方式  366
在py.test中跳过测试  370
模拟昂贵的对象  371
多少测试才足够  375
案例学习  378
实现它  379
练习  384
总结  385
第13章  并发  386
线程  386
线程的诸多问题  390
线程的超常开支  391
多进程  392
多进程池  394
队列  396
多进程的问题  398
Future对象  398
AsyncIO  401
AsyncIO实践  402
读取AsyncIO中的Future对象  403
在网络编程中使用AsyncIO  404
用executor封装阻塞代码  407
流  409
案例学习  410
练习  416
总结  417
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python 3 面向对象编程（第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>虫术——Python绝技
第1章  爬虫初步
1.1  爬虫与大数据
1.1.1  大数据架构
1.1.2  爬虫的作用与地位
1.1.3  Python与爬虫
1.1.4  Python的网络爬虫框架
1.1.5  虫术技术路线图
1.2  实例：简单的爬虫
1.3  内容分析进阶
1.3.1  选择器
1.3.2  深入BeautifulSoup
1.3.3  元素的搜寻
1.3.4  乱码与中文编码
1.4  新闻供稿的爬取实例
1.5  小结
第2章  Scrapy基础知识
2.1  Scrapy架构
2.2  Scrapy快速入手
2.3  数据模型Item
2.4  蜘蛛—Spiders
2.5  管道—Item Pipeline
2.6  Scrapy的运行与配置
2.7  新闻供稿爬虫的Scrapy实现
2.8  小结
第3章  Scrapy的工程管理
3.1  Scrapyd
3.2  scrapyd-client及部署
3.3  搭建爬虫服务器
第4章  中阶虫术
4.1  蜘蛛的演化
4.1.1  蜘蛛的本质—深入Spider
4.1.2  通用蜘蛛
4.1.3  蜘蛛中间件
4.2  爬虫系统的测试与调试
4.2.1  开发期调试
4.2.2  蜘蛛的测试
4.2.3  蜘蛛的运行期调试
4.2.4  调试内存溢出
4.3  处理HTTP请求
4.3.1  HTTP请求
4.3.2  Scrapy的Request对象
4.3.3  表单处理
4.3.4  下载器中间件
4.4  处理HTTP响应
4.4.1  HTTP响应
4.4.2  Scrapy的响应对象
4.4.3  深入选择器
4.4.4  非结构化数据的提取
4.4.5  黑夜中的眼睛
4.5  处理JavaScript
4.5.1  示例：电商产品爬虫
4.5.2  Selenium和PhantomJS
4.5.3  Scrapy与Splash
4.6  数据存储与后处理
4.6.1  图片的下载与存储
4.6.2  示例：产品图片采集
4.6.3  导出到数据文件
4.6.4  导出到数据库
4.6.5  示例：基于阿里云的存储后端
第5章  高阶虫术
5.1  增量式爬网
5.1.1  推演路由
5.1.2  时机的重要性
5.1.3  去重处理
5.1.4  布隆过滤器
5.1.5  基于Redis的布隆过滤器
5.2  突破封印
5.2.1  封禁浅析
5.2.2  客户端仿真
5.2.3  化身万千—蜘蛛世界的易容术
5.2.4  反跟踪
5.2.5  绕开蜜罐
5.3  虫海
5.3.1  分布式爬虫架构
5.3.2  认识scrapy-redis
5.3.3  示例：分布式电商爬虫
5.4  可视化爬虫
5.4.1  示例：某点评网爬虫
5.4.2  解读Portia爬虫代码
5.4.3  数据项加载器—Item Loaders
5.4.4  最后的工作
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>虫术——Python绝技
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python编程与问题求解
第 1章 电子计算机简介
1.1 简介
1.2 冯·诺依曼理念
1.2.1 计算机的简单模型
1.2.2 电子计算机的组成
1.3 存储器
1.3.1 主存储器
1.3.2 辅助存储器
1.3.3 寄存器
1.4 编程语言
1.4.1 高级语言
1.4.2 汇编语言
1.4.3 机器语言
1.5 翻译器
1.5.1 编译器
1.5.2 汇编器
1.5.3 解释器
1.6 硬件和软件
1.6.1 硬件
1.6.2 软件
1.7 操作系统
1.8 本章要点
1.9 关键术语
1.10 复习题
第2章 解决问题的策略
2.1 分析问题
2.1.1 问题的正式定义
2.1.2 解决问题的方法论
2.2 算法
2.3 流程图
2.4 算法以及流程图示例
2.5 本章要点
2.6 关键术语
2.7 复习题
第3章 Python入门
3.1 引言
3.2 Python概述
3.3 启动Python的三种不同方式
3.4 注释
3.5 Python标识符
3.6 保留关键字
3.7 变量
3.7.1 声明变量
3.7.2 初始化变量
3.8 标准的数据类型
3.8.1 数字型
3.8.2 字符串
3.8.3 列表
3.8.4 元组
3.8.5 字典
3.8.6 布尔型
3.8.7 集合
3.9 运算符
3.9.1 算术运算符
3.9.2 比较运算符
3.9.3 赋值运算符
3.9.4 位运算符
3.9.5 逻辑运算符
3.9.6 隶属运算符
3.9.7 恒等运算符
3.9.8 运算符优先级
3.9.9 结合性
3.10 语句与表达式
3.10.1 语句
3.10.2 表达式
3.11 字符串运算
3.11.1 连接运算
3.11.2 重复运算
3.11.3 获取具体字符
3.11.4 分片
3.12 布尔表达式
3.13 控制语句
3.13.1 for循环
3.13.2 while 语句
3.13.3 if elif else 语句
3.13.4 选择执行
3.13.5 条件执行
3.14 迭代—— while 语句
3.15 从键盘获取输入
3.15.1 input()函数
3.15.2 raw_input()函数
3.16 本章要点
3.17 关键术语
3.18 复习题
第4章函数
4.2 内置函数
4.2.1 类型转换
4.2.2 强制类型转换
4.2.3 数学函数
4.2.4 日期和时间
4.2.5 dir()函数
4.2.6 help()函数
4.3 复合函数
4.4 用户自定义函数
4.5 参数
4.6 函数的调用
4.7 return语句
4.8 Python的递归函数
4.9 匿名函数
4.10 编写Python脚本
4.11 本章要点
4.12 关键术语
4.13 复习题
第5章字符串和列表
5.1 字符串
5.1.1 混合数据类型
5.1.2 len函数
5.1.3 字符串切片
5.1.4 字符串是不可变的
5.1.5 字符串遍历
5.1.6 转义字符
5.1.7 字符串格式化操作符
5.1.8 字符串格式化函数
5.2 列表
5.2.1 值和访问元素
5.2.2 列表是可变的
5.2.3 列表的遍历
5.2.4 删除列表中的元素
5.2.5 内置的list操作符
5.2.6 list内置方法
5.3 本章要点
5.4 关键术语
5.5 复习题
第6章元组和字典
6.1 元组
6.1.1 创建元组
6.1.2 访问元组中的元素
6.1.3 元组是不可变的
6.1.4 元组赋值
6.1.5 元组作为返回值
6.1.6 变长元组参数
6.1.7 基本的元组操作
6.1.8 内置的元组函数
6.2 字典
6.2.1 创建字典
6.2.2 访问字典中的值
6.2.3 更新字典
6.2.4 删除字典中的元素
6.2.5 字典键的属性
6.2.6 字典操作
6.2.7 内置的字典方法
6.3 本章要点
6.4 关键术语
6.5 复习题
第7章文件和异常
7.1 文本文件
7.1.1 打开文件
7.1.2 关闭文件
7.1.3 file对象属性
7.1.4 写文件
7.1.5 读取文件
7.1.6 文件的重命名
7.1.7 删除文件
7.1.8 操作文件的方法
7.2 目录
7.2.1 mkdir()方法
7.2.2 chdir()方法
7.2.3 getcwd()方法
7.2.4 rmdir()方法
7.3 异常
7.3.1 内置异常
7.3.2 异常处理
7.4 带有参数的异常
7.5 用户自定义异常
7.6 关键术语
7.7 复习题
第8章类和对象
8.1 面向对象概述　(面向对象编程)
8.1.1 数据封装
8.1.2 多态
8.2 类定义
8.3 创建对象
8.4 对象作为参数
8.5 对象作为返回值
8.6 内置的类属性
8.7 继承
8.8 方法重写
8.9 数据封装
8.10 数据隐藏
8.11 本章要点
8.12 关键术语
8.13 复习题
附录A 使用算法和流程图进行练习
附录B 使用算法和伪代码
解决问题的练习题
附录C 基本标准库模块
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python编程与问题求解
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python高性能（第2版）
第1章　基准测试与剖析　　1
1.1　设计应用程序　　2
1.2　编写测试和基准测试程序　　7
1.3　使用pytest-benchmark编写更佳的测试和基准测试程序　　10
1.4　使用cProfile找出瓶颈　　12
1.5　使用line_profiler逐行进行剖析　　16
1.6　优化代码　　17
1.7　模块dis　　19
1.8　使用memory_profiler剖析内存使用情况　　19
1.9　小结　　21
第2章　纯粹的Python优化　　22
2.1　有用的算法和数据结构　　22
2.1.1　列表和双端队列　　23
2.1.2　字典　　25
2.1.3　集　　28
2.1.4　堆　　29
2.1.5　字典树　　30
2.2　缓存和memoization　　32
2.3　推导和生成器　　34
2.4　小结　　36
第3章　使用NumPy和Pandas快速执行数组操作　　37
3.1　NumPy基础　　37
3.1.1　创建数组　　38
3.1.2　访问数组　　39
3.1.3　广播　　43
3.1.4　数学运算　　45
3.1.5　计算范数　　46
3.2　使用NumPy重写粒子模拟器　　47
3.3　使用numexpr最大限度地提高性能　　49
3.4　Pandas　　51
3.4.1　Pandas基础　　51
3.4.2　使用Pandas执行数据库式操作　　55
3.5　小结　　59
第4章　使用Cython获得C语言性能　　60
4.1　编译Cython扩展　　60
4.2　添加静态类型　　62
4.2.1　变量　　63
4.2.2　函数　　64
4.2.3　类　　65
4.3　共享声明　　66
4.4　使用数组　　67
4.4.1　C语言数组和指针　　67
4.4.2　NumPy数组　　69
4.4.3　类型化内存视图　　70
4.5　使用Cython编写粒子模拟器　　72
4.6　剖析Cython代码　　75
4.7　在Jupyter中使用Cython　　78
4.8　小结　　80
第5章　探索编译器　　82
5.1　Numba　　82
5.1.1　Numba入门　　83
5.1.2　类型特殊化　　84
5.1.3　对象模式和原生模式　　85
5.1.4　Numba和NumPy　　88
5.1.5　JIT类　　91
5.1.6　Numba的局限性　　94
5.2　PyPy项目　　95
5.2.1　安装PyPy　　95
5.2.2　在PyPy中运行粒子模拟器　　96
5.3　其他有趣的项目　　97
5.4　小结　　97
第6章　实现并发性　　98
6.1　异步编程　　98
6.1.1　等待I/O　　99
6.1.2　并发　　99
6.1.3　回调函数　　101
6.1.4　future　　104
6.1.5　事件循环　　105
6.2　asyncio框架　　108
6.2.1　协程　　108
6.2.2　将阻塞代码转换为非阻塞代码　　111
6.3　响应式编程　　113
6.3.1　被观察者　　113
6.3.2　很有用的运算符　　115
6.3.3　hot被观察者和cold被观察者　　118
6.3.4　打造CPU监视器　　121
6.4　小结　　123
第7章　并行处理　　124
7.1　并行编程简介　　124
7.2　使用多个进程　　127
7.2.1　Process和Pool类　　127
7.2.2　接口Executor　　129
7.2.3　使用蒙特卡洛方法计算pi的近似值　　130
7.2.4　同步和锁　　132
7.3　使用OpenMP编写并行的Cython代码　　134
7.4　并行自动化　　136
7.4.1　Theano初步　　137
7.4.2　Tensorflow　　142
7.4.3　在GPU中运行代码　　144
7.5　小结　　146
第8章　分布式处理　　148
8.1　分布式计算简介　　148
8.2　Dask　　151
8.2.1　有向无环图　　151
8.2.2　Dask数组　　152
8.2.3　Dask Bag和DataFrame　　154
8.2.4　Dask distributed　　158
8.3　使用PySpark　　161
8.3.1　搭建Spark和PySpark环境　　161
8.3.2　Spark架构　　162
8.3.3　弹性分布式数据集　　164
8.3.4　Spark DataFrame　　168
8.4　使用mpi4py执行科学计算　　169
8.5　小结　　171
第9章　高性能设计　　173
9.1　选择合适的策略　　173
9.1.1　普通应用程序　　174
9.1.2　数值计算代码　　174
9.1.3　大数据　　176
9.2　组织代码　　176
9.3　隔离、虚拟环境和容器　　178
9.3.1　使用conda环境　　178
9.3.2　虚拟化和容器　　179
9.4　持续集成　　183
9.5　小结　　184
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python高性能（第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入浅出Python机器学习
目 录
第1章 概 述
1.1 什么是机器学习——从一个小故事开始 / 002
1.2 机器学习的一些应用场景——蝙蝠公司的业务单元 / 003
1.3 机器学习应该如何入门——世上无难事 / 005
1.4 有监督学习与无监督学习 / 007
1.5 机器学习中的分类与回归 / 008
1.6 模型的泛化、过拟合与欠拟合 / 008
1.7 小结 / 009
第2章 基于Python语言的环境配置
2.1 Python的下载和安装 / 012
2.2 Jupyter Notebook的安装与使用方法 / 013
2.2.1 使用pip进行Jupyter Notebook的下载和安装 / 013
2.2.2 运行Jupyter Notebook / 014
2.2.3 Jupyter Notebook的使用方法 / 015
2.3 一些必需库的安装及功能简介 / 017
2.3.1 Numpy——基础科学计算库 / 017
2.3.2 Scipy——强大的科学计算工具集 / 018
2.3.3 pandas——数据分析的利器 / 019
2.3.4 matplotlib——画出优美的图形 / 020
深入浅出Python 机器学习
VIII
2.4 scikit-learn——非常流行的Python机器学习库 / 021
2.5 小结 / 022
第3章 K最近邻算法——近朱者赤，近墨者黑
3.1 K最近邻算法的原理 / 024
3.2 K最近邻算法的用法 / 025
3.2.1 K最近邻算法在分类任务中的应用 / 025
3.2.2 K最近邻算法处理多元分类任务 / 029
3.2.3 K最近邻算法用于回归分析 / 031
3.3 K最近邻算法项目实战——酒的分类 / 034
3.3.1 对数据集进行分析 / 034
3.3.2 生成训练数据集和测试数据集 / 036
3.3.3 使用K最近邻算法进行建模 / 038
3.3.4 使用模型对新样本的分类进行预测 / 039
3.4 小结 / 041
第4章 广义线性模型——“耿直”的算法模型
4.1 线性模型的基本概念 / 044
4.1.1 线性模型的一般公式 / 044
4.1.2 线性模型的图形表示 / 045
4.1.3 线性模型的特点 / 049
4.2 最基本的线性模型——线性回归 / 050
4.2.1 线性回归的基本原理 / 050
4.2.2 线性回归的性能表现 / 051
4.3 使用L2正则化的线性模型——岭回归 / 053
4.3.1 岭回归的原理 / 053
4.3.2 岭回归的参数调节 / 054
4.4 使用L1正则化的线性模型——套索回归 / 058
4.4.1 套索回归的原理 / 058
4.4.2 套索回归的参数调节 / 059
4.4.3 套索回归与岭回归的对比 / 060
目
录
IX
4.5 小结 / 062
第5章 朴素贝叶斯——打雷啦，收衣服啊
5.1 朴素贝叶斯基本概念 / 064
5.1.1 贝叶斯定理 / 064
5.1.2 朴素贝叶斯的简单应用 / 064
5.2 朴素贝叶斯算法的不同方法 / 068
5.2.1 贝努利朴素贝叶斯 / 068
5.2.2 高斯朴素贝叶斯 / 071
5.2.3 多项式朴素贝叶斯 / 072
5.3 朴素贝叶斯实战——判断肿瘤是良性还是恶性 / 075
5.3.1 对数据集进行分析 / 076
5.3.2 使用高斯朴素贝叶斯进行建模 / 077
5.3.3 高斯朴素贝叶斯的学习曲线 / 078
5.4 小结 / 080
第6章 决策树与随机森林——会玩读心术的算法
6.1 决策树 / 082
6.1.1 决策树基本原理 / 082
6.1.2 决策树的构建 / 082
6.1.3 决策树的优势和不足 / 088
6.2 随机森林 / 088
6.2.1 随机森林的基本概念 / 089
6.2.2 随机森林的构建 / 089
6.2.3 随机森林的优势和不足 / 092
6.3 随机森林实例——要不要和相亲对象进一步发展 / 093
6.3.1 数据集的准备 / 093
6.3.2 用get_dummies处理数据 / 094
6.3.3 用决策树建模并做出预测 / 096
6.4 小结 / 098
第7章 支持向量机SVM——专治线性不可分
7.1 支持向量机SVM基本概念 / 100
7.1.1 支持向量机SVM的原理 / 100
7.1.2 支持向量机SVM的核函数 / 102
7.2 SVM的核函数与参数选择 / 104
7.2.1 不同核函数的SVM对比 / 104
7.2.2 支持向量机的gamma参数调节 / 106
7.2.3 SVM算法的优势与不足 / 108
7.3 SVM实例——波士顿房价回归分析 / 108
7.3.1 初步了解数据集 / 109
7.3.2 使用SVR进行建模 / 110
7.4 小结 / 114
第8章 神经网络——曾入“冷宫”，如今得宠
8.1 神经网络的前世今生 / 116
8.1.1 神经网络的起源 / 116
8.1.2 第一个感知器学习法则 / 116
8.1.3 神经网络之父——杰弗瑞·欣顿 / 117
8.2 神经网络的原理及使用 / 118
8.2.1 神经网络的原理 / 118
8.2.2 神经网络中的非线性矫正 / 119
8.2.3 神经网络的参数设置 / 121
8.3 神经网络实例——手写识别 / 127
8.3.1 使用MNIST数据集 / 128
8.3.2 训练MLP神经网络 / 129
8.3.3 使用模型进行数字识别 / 130
8.4 小结 / 131
第9章 数据预处理、降维、特征提取及聚类——快
刀斩乱麻
9.1 数据预处理 / 134
9.1.1 使用StandardScaler进行数据预处理 / 134
9.1.2 使用MinMaxScaler进行数据预处理 / 135
9.1.3 使用RobustScaler进行数据预处理 / 136
9.1.4 使用Normalizer进行数据预处理 / 137
9.1.5 通过数据预处理提高模型准确率 / 138
9.2 数据降维 / 140
9.2.1 PCA主成分分析原理 / 140
9.2.2 对数据降维以便于进行可视化 / 142
9.2.3 原始特征与PCA主成分之间的关系 / 143
9.3 特征提取 / 144
9.3.1 PCA主成分分析法用于特征提取 / 145
9.3.2 非负矩阵分解用于特征提取 / 148
9.4 聚类算法 / 149
9.4.1 K均值聚类算法 / 150
9.4.2 凝聚聚类算法 / 153
9.4.3 DBSCAN算法 / 154
9.5 小结 / 157
第10章 数据表达与特征工程——锦上再添花
10.1 数据表达 / 160
10.1.1 使用哑变量转化类型特征 / 160
10.1.2 对数据进行装箱处理 / 162
10.2 数据“升维” / 166
10.2.1 向数据集添加交互式特征 / 166
10.2.2 向数据集添加多项式特征 / 170
10.3 自动特征选择 / 173
10.3.1 使用单一变量法进行特征选择 / 173
10.3.2 基于模型的特征选择 / 178
10.3.3 迭代式特征选择 / 180
10.4 小结 / 182
第11章 模型评估与优化——只有更好，没有最好
11.1 使用交叉验证进行模型评估 / 184
11.1.1 scikit-learn中的交叉验证法 / 184
11.1.2 随机拆分和“挨个儿试试” / 186
11.1.3 为什么要使用交叉验证法 / 188
11.2 使用网格搜索优化模型参数 / 188
11.2.1 简单网格搜索 / 189
11.2.2 与交叉验证结合的网格搜索 / 191
11.3 分类模型的可信度评估 / 193
11.3.1 分类模型中的预测准确率 / 194
11.3.2 分类模型中的决定系数 / 197
11.4 小结 / 198
第12章 建立算法的管道模型——团结就是力量
12.1 管道模型的概念及用法 / 202
12.1.1 管道模型的基本概念 / 202
12.1.2 使用管道模型进行网格搜索 / 206
12.2 使用管道模型对股票涨幅进行回归分析 / 209
12.2.1 数据集准备 / 209
12.2.2 建立包含预处理和MLP模型的管道模型 / 213
12.2.3 向管道模型添加特征选择步骤 / 214
12.3 使用管道模型进行模型选择和参数调优 / 216
12.3.1 使用管道模型进行模型选择 / 216
12.3.2 使用管道模型寻找更优参数 / 217
12.4 小结 / 220
第13章 文本数据处理——亲，见字如“数”
13.1 文本数据的特征提取、中文分词及词袋模型 / 222
13.1.1 使用CountVectorizer对文本进行特征提取 / 222
13.1.2 使用分词工具对中文文本进行分词 / 223
13.1.3 使用词袋模型将文本数据转为数组 / 224
13.2 对文本数据进一步进行优化处理 / 226
13.2.1 使用n-Gram改善词袋模型 / 226
13.2.2 使用tf-idf模型对文本数据进行处理 / 228
13.2.3 删除文本中的停用词 / 234
13.3 小结 / 236
第14章 从数据获取到话题提取——从“研究员”
到“段子手”
14.1 简单页面的爬取 / 238
14.1.1 准备Requests库和User Agent / 238
14.1.2 确定一个目标网站并分析其结构 / 240
14.1.3 进行爬取并保存为本地文件 / 241
14.2 稍微复杂一点的爬取 / 244
14.2.1 确定目标页面并进行分析 / 245
14.2.2 Python中的正则表达式 / 247
14.2.3 使用BeautifulSoup进行HTML解析 / 251
14.2.4 对目标页面进行爬取并保存到本地 / 256
14.3 对文本数据进行话题提取 / 258
14.3.1 寻找目标网站并分析结构 / 259
14.3.2 编写爬虫进行内容爬取 / 261
14.3.3 使用潜在狄利克雷分布进行话题提取 / 263
14.4 小结 / 265
第15章 人才需求现状与未来学习方向——你是不
是下一个“大牛”
15.1 人才需求现状 / 268
15.1.1 全球AI从业者达190万，人才需求3年翻8倍 / 268
15.1.2 AI人才需求集中于一线城市，七成从业者月薪过万 / 269
15.1.3 人才困境仍难缓解，政策支援亟不可待 / 269
15.2 未来学习方向 / 270
15.2.1 用于大数据分析的计算引擎 / 270
15.2.2 深度学习开源框架 / 271
15.2.3 使用概率模型进行推理 / 272
15.3 技能磨炼与实际应用 / 272
15.3.1 Kaggle算法大赛平台和OpenML平台 / 272
15.3.2 在工业级场景中的应用 / 273
15.3.3 对算法模型进行A/B测试 / 273
15.4 小结 / 274
参考文献 / 275
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入浅出Python机器学习
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python与神经网络实战
第1章 绪论  1
1.1  机器学习简介  2
1.1.1  什么是机器学习  2
1.1.2  机器学习常用术语  3
1.2  Python简介  9
1.2.1  Python的优势  10
1.2.2  scikit-learn和TensorFlow  11
1.3  前期准备  13
1.3.1  训练、交叉验证与测试  13
1.3.2  简易数据预处理  14
1.4  本章小结  15
第2章 经典传统机器学习算法简介  17
2.1  朴素贝叶斯  17
2.1.1  条件独立性假设  18
2.1.2  贝叶斯思维  19
2.1.3  模型算法  20
2.1.4  实例演示  23
2.1.5* 参数估计  25
2.1.6* 朴素贝叶斯的改进  28
2.2  决策树  33
2.2.1  决策的方法  33
2.2.2  决策树的生成  34
2.2.3  决策树的剪枝  39
2.2.4  实例演示  40
2.2.5* 决策树的三大算法  40
2.2.6* 数据集的划分  45
2.2.7* 决策树与回归  48
2.3  支持向量机  50
2.3.1  分离超平面与几何间隔  50
2.3.2* 感知机与SVM的原始形式  58
2.3.3  梯度下降法  62
2.3.4* 核技巧  70
2.3.5  实例演示  75
2.4  Logistic回归  75
2.5  本章小结  76
第3章 神经网络入门  77
3.1  神经网络的结构  78
3.2  前向传导算法  80
3.2.1  算法概述  81
3.2.2  算法内涵  83
3.2.3  激活函数  85
3.2.4  损失函数  90
3.3* 反向传播算法  92
3.3.1  算法概述  92
3.3.2  损失函数的选择  94
3.4  参数的更新  98
3.4.1  Vanilla Update  99
3.4.2  Momentum Update  99
3.4.3  Nesterov Momentum Update  100
3.4.4  AdaGrad  100
3.4.5  RMSProp  101
3.4.6  Adam  101
3.5  TensorFlow模型的基本框架  101
3.5.1  TensorFlow的组成单元与基本思想  102
3.5.2  TensorFlow模型的基本元素  104
3.5.3  TensorFlow元素的整合方法  114
3.5.4  TensorFlow模型的save & load  125
3.6  朴素神经网络的实现与评估  130
3.7  本章小结  138
第4章 从传统算法走向神经网络  139
4.1  朴素贝叶斯的线性形式  139
4.2  决策树生成算法的本质  145
4.2.1  第1隐藏层→决策超平面  147
4.2.2  第2隐藏层→决策路径  148
4.2.3  输出层→叶节点  150
4.2.4  具体实现  151
4.3  模型转换的实际意义  158
4.3.1  利用Softmax来赋予概率意义  159
4.3.2  利用Tanh+Softmax来“软化”模型  160
4.3.3  通过微调来缓解“条件独立性假设”  165
4.3.4  通过微调来丰富超平面的选择  165
4.3.5  模型逆转换的可能性  171
4.4  模型转换的局限性  172
4.5  本章小结  172
第5章 神经网络进阶  174
5.1  层结构内部的额外工作  175
5.1.1  Dropout  175
5.1.2  Batch Normalization  176
5.1.3  具体实现  180
5.2  “浅”与“深”的结合  181
5.2.1  离散型特征的处理方式  181
5.2.2  Wide and Deep模型概述  183
5.2.3  Wide and Deep的具体实现  185
5.2.4  WnD的重要思想与优缺点  194
5.3  神经网络中的“决策树”  195
5.3.1  DNDF结构概述  195
5.3.2*  DNDF的具体实现  199
5.3.3  DNDF的应用场景  210
5.3.4*  DNDF的结构内涵  213
5.4  神经网络中的剪枝  216
5.4.1  Surgery算法概述  216
5.4.2  Surgery算法改进  218
5.4.3  软剪枝的具体实现  221
5.4.4* 软剪枝的算法内涵  223
5.5  AdvancedNN的结构设计  237
5.5.1  AdvancedNN的实现补足  237
5.5.2  WnD与DNDF  239
5.5.3  DNDF与剪枝  241
5.5.4  剪枝与Dropout  242
5.5.5  没有免费的午餐  242
5.6  AdvancedNN的实际性能  243
5.7  本章小结  251
第6章 半自动化机器学习框架  253
6.1  数据的准备  254
6.1.1  数据预处理的流程  254
6.1.2  数据准备的流程  256
6.2  数据的转换  264
6.2.1  数据的数值化  264
6.2.2  冗余特征的去除  266
6.2.3  缺失值处理  269
6.2.4  连续型特征的数据预处理  272
6.2.5  特殊类型数据的处理  274
6.3  AutoBase的实现补足  277
6.4  AutoMeta的实现  281
6.5  训练过程的监控  288
6.5.1  监控训练过程的原理  288
6.5.2  监控训练的实现思路  292
6.5.3  监控训练的具体代码  293
6.6  本章小结  299
第7章 工程化机器学习框架  301
7.1  输出信息的管理  301
7.2  多次实验的管理  309
7.2.1  多次实验的框架  312
7.2.2  多次实验的初始化  314
7.2.3  多次实验中的数据划分  316
7.2.4  多次实验中的模型评估  318
7.2.5  多次实验的收尾工作  321
7.3  参数搜索的管理  321
7.3.1  参数搜索的框架  322
7.3.2* 随机搜索与网格搜索  329
7.3.3  参数的选取  334
7.3.4  参数搜索的收尾工作  335
7.3.5  具体的搜索方案  335
7.4  DistAdvanced的性能  337
7.5  本章小结  344
附录A SVM的TensorFlow实现  345
附录B numba的基本应用  352
附录C 装饰器的基本应用  359
附录D 可视化  363
附录E 模型的评估指标  370
附录F 实现补足  377
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python与神经网络实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>小天才学Python
1.Python是什么
2.安装Python
3.我的第一个Python程序
练习1
第2课 海龟画图
1.我们来画一条线
2.画一个正方形
3.自动画出正方形
练习2
第3课 做数学
1.数学运算
2.字符串
3.布尔运算
4.帮你做作业
练习3
第4课 画彩图
1.用不同颜色的笔
2.改变背景颜色
3.神奇的变量
练习4
第5课 做判断
1.如果
2.不然
3.组合判断
4.猜数字
练习5
第6课 循环往复
1.打印九九乘法表
2.寻找素数
3.学生成绩单
练习6
第7课 电报
1.发电报
2.收电报
3.收发电报
练习7
第8课 画笔
1.用点绘画
2.连笔画
练习8
第9课 调色板
1.做调色板
2.保护调色板
练习9
第10课 弹球
1.移动球
2.加音效
3.弹回球
练习10
第11课 缤纷色彩
1.现代艺术
2.色彩斑斓
练习11
第12课 大数据
1.获取大数据
2.分析大数据
3.看见大数据
练习12
第13课 人工智能
1.我能看见你
2.我能认识你
3.咱们聊聊天
练习13
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>小天才学Python
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>人人都懂设计模式：从生活中领悟设计模式：Python实现
基 础 篇
第0章　启程之前，请不要错过我	2
0.1　Python精简入门	2
0.1.1　Python的特点	2
0.1.2　基本语法	3
0.1.3　一个例子让你顿悟	7
0.1.4　重要说明	11
0.2　UML精简概述	11
0.2.1　UML的定义	11
0.2.2　常见的关系	12
第1章　监听模式	16
1.1　从生活中领悟监听模式	16
1.1.1　故事剧情—幻想中的智能热水器	16
1.1.2　用程序来模拟生活	17
1.2　从剧情中思考监听模式	19
1.2.1　什么是监听模式	19
1.2.2　监听模式设计思想	19
1.3　监听模式的模型抽象	19
1.3.1　代码框架	19
1.3.2　类图	20
1.3.3　基于框架的实现	21
1.3.4　模型说明	22
1.4　实战应用	23
1.5　应用场景	26
第2章　状态模式	28
2.1　从生活中领悟状态模式	28
2.1.1　故事剧情—人有少、壮、老，水之固、液、气	28
2.1.2　用程序来模拟生活	29
2.2　从剧情中思考状态模式	32
2.2.1　什么是状态模式	32
2.2.2　状态模式设计思想	33
2.3　状态模式的模型抽象	33
2.3.1　代码框架	33
2.3.2　类图	35
2.3.3　基于框架的实现	36
2.3.4　模型说明	38
2.4　应用场景	39
第3章　中介模式	40
3.1　从生活中领悟中介模式	40
3.1.1　故事剧情—找房子问中介	40
3.1.2　用程序来模拟生活	41
3.2　从剧情中思考中介模式	46
3.2.1　什么是中介模式	46
3.2.2　中介模式设计思想	46
3.3　中介模式的模型抽象	48
3.3.1　代码框架	48
3.3.2　类图	49
3.3.3　模型说明	50
3.4　实战应用	51
3.5　应用场景	56
第4章　装饰模式	57
4.1　从生活中领悟装饰模式	57
4.1.1　故事剧情—你想怎么搭就怎么搭	57
4.1.2　用程序来模拟生活	58
4.2　从剧情中思考装饰模式	62
4.2.1　什么是装饰模式	62
4.2.2　装饰模式设计思想	63
4.3　装饰模式的模型抽象	64
4.3.1　类图	64
4.3.2　Python中的装饰器	64
4.3.3　模型说明	69
4.4　应用场景	70
第5章　单例模式	71
5.1　从生活中领悟单例模式	71
5.1.1　故事剧情—你是我的唯一	71
5.1.2　用程序来模拟生活	72
5.2　从剧情中思考单例模式	73
5.2.1　什么是单例模式	73
5.2.2　单例模式设计思想	73
5.3　单例模式的模型抽象	73
5.3.1　代码框架	73
5.3.2　类图	78
5.3.3　基于框架的实现	78
5.4　应用场景	79
第6章　克隆模式	80
6.1　从生活中领悟克隆模式	80
6.1.1　故事剧情—给你一个分身术	80
6.1.2　用程序来模拟生活	80
6.2　从剧情中思考克隆模式	82
6.2.1　什么是克隆模式	82
6.2.2　浅拷贝与深拷贝	82
6.3　克隆模式的模型抽象	86
6.3.1　代码框架	86
6.3.2　类图	86
6.3.3　基于框架的实现	87
6.3.4　模型说明	87
6.4　实战应用	88
6.5　应用场景	90
第7章　职责模式	91
7.1　从生活中领悟职责模式	91
7.1.1　故事剧情—我的假条去哪儿了	91
7.1.2　用程序来模拟生活	92
7.2　从剧情中思考职责模式	96
7.2.1　什么是职责模式	96
7.2.2　职责模式设计思想	96
7.3　职责模式的模型抽象	97
7.3.1　代码框架	97
7.3.2　类图	98
7.3.3　基于框架的实现	99
7.3.4　模型说明	102
7.4　应用场景	103
第8章　代理模式	104
8.1　从生活中领悟代理模式	104
8.1.1　故事剧情—帮我拿一下快递	104
8.1.2　用程序来模拟生活	105
8.2　从剧情中思考代理模式	107
8.2.1　什么是代理模式	107
8.2.2　代理模式设计思想	107
8.3　代理模式的模型抽象	107
8.3.1　代码框架	107
8.3.2　类图	109
8.3.3　基于框架的实现	110
8.3.4　模型说明	111
8.4　应用场景	111
第9章　外观模式	113
9.1　从生活中领悟外观模式	113
9.1.1　故事剧情—学妹别慌，学长帮你	113
9.1.2　用程序来模拟生活	114
9.2　从剧情中思考外观模式	116
9.2.1　什么是外观模式	116
9.2.2　外观模式设计思想	116
9.3　外观模式的模型抽象	117
9.3.1　类图	117
9.3.2　软件的分层结构	117
9.3.3　模型说明	119
9.4　实战应用	119
9.5　应用场景	123
第10章　迭代模式	124
10.1　从生活中领悟迭代模式	124
10.1.1　故事剧情—下一个就是你了	124
10.1.2　用程序来模拟生活	125
10.2　从剧情中思考迭代模式	128
10.2.1　什么是迭代模式	128
10.2.2　迭代模式设计思想	129
10.3　迭代模式的模型抽象	130
10.3.1　代码框架	130
10.3.2　Python中的迭代器	132
10.3.3　类图	136
10.3.4　模型说明	137
10.4　应用场景	138
第11章　组合模式	139
11.1　从生活中领悟组合模式	139
11.1.1　故事剧情—自己组装电脑，价格再降三成	139
11.1.2　用程序来模拟生活	140
11.2　从剧情中思考组合模式	146
11.2.1　什么是组合模式	146
11.2.2　组合模式设计思想	147
11.3　组合模式的模型抽象	148
11.3.1　代码框架	148
11.3.2　类图	149
11.3.3　模型说明	150
11.4　实战应用	150
11.5　应用场景	153
第12章　构建模式	154
12.1　从生活中领悟构建模式	154
12.1.1　故事剧情—你想要一辆车还是一个庄园	154
12.1.2　用程序来模拟生活	155
12.2　从剧情中思考构建模式	157
12.2.1　什么是构建模式	157
12.2.2　构建模式设计思想	157
12.2.3　与工厂模式的区别	158
12.2.4　与组合模式的区别	158
12.3　构建模式的模型抽象	159
12.3.1　类图	159
12.3.2　基于框架的实现	160
12.3.3　模型说明	163
12.4　应用场景	164
第13章　适配模式	166
13.1　从生活中领悟适配模式	166
13.1.1　故事剧情——有个转换器就好了	166
13.1.2　用程序来模拟生活	167
13.2　从剧情中思考适配模式	170
13.2.1　什么是适配模式	170
13.2.2　适配模式设计思想	170
13.3　适配模式的模型抽象	172
13.3.1　代码框架	172
13.3.2　类图	172
13.3.3　模型说明	173
13.4　实战应用	174
13.5　应用场景	184
第14章　策略模式	185
14.1　从生活中领悟策略模式	185
14.1.1　故事剧情—怎么来不重要，人到就行	185
14.1.2　用程序来模拟生活	186
14.2　从剧情中思考策略模式	188
14.2.1　什么是策略模式	188
14.2.2　策略模式设计思想	188
14.3　策略模式的模型抽象	189
14.3.1　类图	189
14.3.2　模型说明	190
14.4　实战应用	190
14.5　应用场景	195
第15章　工厂模式	196
15.1　从生活中领悟工厂模式	196
15.1.1　故事剧情—你要拿铁还是摩卡呢	196
15.1.2　用程序来模拟生活	197
15.2　从剧情中思考工厂模式	199
15.2.1　什么是简单工厂模式	199
15.2.2　工厂模式设计思想	199
15.3　工厂三姐妹	199
15.3.1　简单工厂模式	200
15.3.2　工厂方法模式	201
15.3.3　抽象工厂模式	203
15.4　进一步思考	205
15.5　实战应用	205
第16章　命令模式	209
16.1　从生活中领悟命令模式	209
16.1.1　故事剧情—大闸蟹，走起	209
16.1.2　用程序来模拟生活	210
16.2　从剧情中思考命令模式	213
16.2.1　什么是命令模式	213
16.2.2　命令模式设计思想	213
16.3　命令模式的模型抽象	214
16.3.1　代码框架	214
16.3.2　类图	215
16.3.3　模型说明	216
16.4　实战应用	216
16.5　应用场景	224
第17章　备忘模式	225
17.1　从生活中领悟备忘模式	225
17.1.1　故事剧情—好记性不如烂笔头	225
17.1.2　用程序来模拟生活	226
17.2　从剧情中思考备忘模式	228
17.2.1　什么是备忘模式	228
17.2.2　备忘模式设计思想	229
17.3　备忘模式的模型抽象	229
17.3.1　类图	229
17.3.2　代码框架	230
17.3.3　模型说明	232
17.4　实战应用	232
17.5　应用场景	235
第18章　享元模式	236
18.1　从生活中领悟享元模式	236
18.1.1　故事剧情—颜料很贵，必须充分利用	236
18.1.2　用程序来模拟生活	237
18.2　从剧情中思考享元模式	239
18.2.1　什么是享元模式	239
18.2.2　享元模式设计思想	239
18.3　享元模式的模型抽象	239
18.3.1　类图	239
18.3.2　基于框架的实现	240
18.3.3　模型说明	242
18.4　应用场景	243
第19章　访问模式	244
19.1　从生活中领悟访问模式	244
19.1.1　故事剧情—一千个读者一千个哈姆雷特	244
19.1.2　用程序来模拟生活	245
19.2　从剧情中思考访问模式	246
19.2.1　什么是访问模式	246
19.2.2　访问模式设计思想	247
19.3　访问模式的模型抽象	247
19.3.1　代码框架	247
19.3.2　类图	248
19.3.3　基于框架的实现	249
19.3.4　模型说明	250
19.4　实战应用	251
19.5　应用场景	255
第20章　其他经典设计模式	256
20.1　模板模式	256
20.1.1　模式定义	256
20.1.2　类图结构	257
20.1.3　代码框架	257
20.1.4　应用案例	259
20.1.5　应用场景	261
20.2　桥接模式	261
20.2.1　模式定义	261
20.2.2　类图结构	261
20.2.3　应用案例	262
20.2.4　应用场景	266
20.3　解释模式	266
20.3.1　模式定义	266
20.3.2　类图结构	266
20.3.3　应用案例	267
20.3.4　应用场景	271
进 阶 篇
第21章　深入解读过滤器模式	274
21.1　从生活中领悟过滤器模式	274
21.1.1　故事剧情—制作一杯鲜纯细腻的豆浆	274
21.1.2　用程序来模拟生活	275
21.2　从剧情中思考过滤器模式	275
21.2.1　过滤器模式	276
21.2.2　与职责模式的联系	276
21.3　过滤器模式的模型抽象	276
21.3.1　代码框架	277
21.3.2　类图	278
21.3.3　基于框架的实现	278
21.3.4　模型说明	279
21.4　实战应用	280
21.5　应用场景	282
第22章　深入解读对象池技术	283
22.1　从生活中领悟对象池技术	283
22.1.1　故事剧情—共享让出行更便捷	283
22.1.2　用程序来模拟生活	284
22.2　从剧情中思考对象池机制	287
22.2.1　什么是对象池	287
22.2.2　与享元模式的联系	287
22.3　对象池机制的模型抽象	288
22.3.1　代码框架	288
22.3.2　类图	291
22.3.3　基于框架的实现	292
22.3.4　模型说明	294
22.4　应用场景	295
第23章　深入解读回调机制	296
23.1　从生活中领悟回调机制	296
23.1.1　故事剧情—把你的技能亮出来	296
23.1.2　用程序来模拟生活	296
23.2　从剧情中思考回调机制	298
23.2.1　回调机制	298
23.2.2　设计思想	299
23.3　回调机制的模型抽象	299
23.3.1　面向过程的实现方式	299
23.3.2　面向对象的实现方式	300
23.3.3　模型说明	301
23.4　实战应用	302
23.4.1　基于回调函数的实现	302
23.4.2　基于策略模式的实现	303
23.4.3  回调在异步中的应用	307
23.5　应用场景	310
第24章　深入解读MVC模式	311
24.1　从生活中领悟MVC模式	311
24.1.1　故事剧情—定格最美的一瞬间	311
24.1.2　用程序来模拟生活	312
24.2　从剧情中思考MVC模式	316
24.2.1　MVC模式	317
24.2.2　与中介模式的联系	317
24.2.3　与外观模式的联系	317
24.3　MVC模式的模型抽象	318
24.3.1　MVC	318
24.3.2　MVP	318
24.3.3　MVVM	319
24.3.4　模型说明	320
24.4　应用场景	320
经 验 篇
第25章　关于设计模式的理解	324
25.1　众多书籍之下为何还要写此书	324
25.2　设计模式玄吗	324
25.3　如何区分不同的模式	325
25.4　编程思想的三重境界	325
第26章　关于设计原则的思考	327
26.1　SOLID原则	327
26.1.1　单一职责原则	327
26.1.2　开放封闭原则	331
26.1.3　里氏替换原则	334
26.1.4　依赖倒置原则	337
26.1.5　接口隔离原则	341
26.2　是否一定要遵循这些设计原则	348
26.2.1　软件设计是一个逐步优化的过程	348
26.2.2　不是一定要遵循这些设计原则	349
26.3　更为实用的设计原则	349
26.3.1　LoD原则（Law of Demeter）	349
26.3.2　KISS原则（Keep It Simple and Stupid）	350
26.3.3　DRY原则（Don’t Repeat Yourself）	351
26.3.4　YAGNI原则（You Aren't Gonna Need It）	353
26.3.5　Rule Of Three原则	353
26.3.6　CQS原则（Command-Query Separation）	354
第27章　关于项目重构的思考	355
27.1　什么叫重构	355
27.2　为何要重构	355
27.3　什么时机进行重构	356
27.4　如何重构代码	357
27.4.1　重命名	357
27.4.2　函数重构	358
27.4.3　重新组织数据	359
27.4.4　用设计模式改善代码设计	360
27.5　代码整洁之道	360
27.5.1　命名的学问	360
27.5.2　整洁代码的案例	362
附录A　23种经典设计模式的索引对照表	368
附录B　Python中__new__、__init__和__call__的用法	370
附录C　Python中metaclass的原理	377
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>人人都懂设计模式：从生活中领悟设计模式：Python实现
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>OpenCV轻松入门：面向Python
第1章  OPENCV入门	1
1.1  如何使用	1
1.2  图像处理基本操作	3
1.2.1  读取图像	3
1.2.2  显示图像	5
1.2.3  保存图像	9
1.3  OpenCV贡献库	10
第2章  图像处理基础	11
2.1  图像的基本表示方法	11
2.2  像素处理	15
2.3  使用numpy.array访问像素	23
2.4  感兴趣区域（ROI）	29
2.5  通道操作	32
2.5.1  通道拆分	32
2.5.2  通道合并	34
2.6  获取图像属性	36
第3章  图像运算	37
3.1  图像加法运算	37
3.1.1  加号运算符	37
3.1.2  cv2.add()函数	38
3.2  图像加权和	40
3.3  按位逻辑运算	43
3.3.1  按位与运算	43
3.3.2  按位或运算	46
3.3.3  按位非运算	47
3.3.4  按位异或运算	48
3.4  掩模	49
3.5  图像与数值的运算	52
3.6  位平面分解	53
3.7  图像加密和解密	59
3.8  数字水印	63
3.8.1  原理	64
3.8.2  实现方法	66
3.8.3  例题	73
3.9  脸部打码及解码	74
第4章  色彩空间类型转换	77
4.1  色彩空间基础	77
4.1.1  GRAY色彩空间	77
4.1.2  XYZ色彩空间	78
4.1.3  YCrCb色彩空间	78
4.1.4  HSV色彩空间	79
4.1.5  HLS色彩空间	80
4.1.6  CIEL*a*b*色彩空间	80
4.1.7  CIEL*u*v*色彩空间	81
4.1.8  Bayer色彩空间	82
4.2  类型转换函数	82
4.3  类型转换实例	88
4.3.1  通过数组观察转换效果	88
4.3.2  图像处理实例	92
4.4  HSV色彩空间讨论	93
4.4.1  基础知识	93
4.4.2  获取指定颜色	95
4.4.3  标记指定颜色	96
4.4.4  标记肤色	100
4.4.5  实现艺术效果	101
4.5  alpha通道	102
第5章  几何变换	106
5.1  缩放	106
5.2  翻转	110
5.3  仿射	111
5.3.1  平移	112
5.3.2  旋转	113
5.3.3  更复杂的仿射变换	114
5.4  透视	115
5.5  重映射	117
5.5.1  映射参数的理解	117
5.5.2  复制	119
5.5.3  绕x轴翻转	121
5.5.4  绕y轴翻转	122
5.5.5  绕x轴、y轴翻转	124
5.5.6  x轴、y轴互换	126
5.5.7  图像缩放	128
第6章  阈值处理	130
6.1  threshold函数	130
6.1.1  二值化阈值处理（cv2.THRESH_BINARY）	131
6.1.2  反二值化阈值处理（cv2.THRESH_BINARY_INV）	133
6.1.3  截断阈值化处理（cv2.THRESH_TRUNC）	135
6.1.4  超阈值零处理（cv2.THRESH_TOZERO_INV）	136
6.1.5  低阈值零处理（cv2.THRESH_TOZERO）	138
6.2  自适应阈值处理	139
6.3  Otsu处理	141
第7章  图像平滑处理	144
7.1  均值滤波	146
7.1.1  基本原理	146
7.1.2  函数语法	150
7.1.3  程序示例	150
7.2  方框滤波	152
7.2.1  基本原理	152
7.2.2  函数语法	153
7.2.3  程序示例	154
7.3  高斯滤波	156
7.3.1  基本原理	156
7.3.2  函数语法	158
7.3.3  程序示例	159
7.4  中值滤波	159
7.4.1  基本原理	160
7.4.2  函数语法	161
7.4.3  程序示例	161
7.5  双边滤波	162
7.5.1  基本原理	162
7.5.2  函数语法	164
7.5.3  程序示例	164
7.6  2D卷积	166
第8章  形态学操作	168
8.1  腐蚀	168
8.2  膨胀	173
8.3  通用形态学函数	178
8.4  开运算	179
8.5  闭运算	180
8.6  形态学梯度运算	182
8.7  礼帽运算	183
8.8  黑帽运算	185
8.9  核函数	186
第9章  图像梯度	189
9.1  Sobel理论基础	189
9.2  Sobel算子及函数使用	191
9.2.1  参数ddepth	192
9.2.2  方向	195
9.2.3  实例	196
9.3  Scharr算子及函数使用	200
9.4  Sobel算子和Scharr算子的比较	204
9.5  Laplacian算子及函数使用	206
9.6  算子总结	208
第10章  CANNY边缘检测	209
10.1  Canny边缘检测基础	209
10.2  Canny函数及使用	213
第11章  图像金字塔	215
11.1  理论基础	215
11.2  pyrDown函数及使用	217
11.3  pyrUp函数及使用	219
11.4  采样可逆性的研究	220
11.5  拉普拉斯金字塔	223
11.5.1  定义	223
11.5.2  应用	225
第12章  图像轮廓	229
12.1  查找并绘制轮廓	229
12.1.1  查找图像轮廓：findContours函数	229
12.1.2  绘制图像轮廓：drawContours函数	237
12.1.3  轮廓实例	238
12.2  矩特征	240
12.2.1  矩的计算：moments函数	241
12.2.2  计算轮廓的面积：contourArea函数	243
12.2.3  计算轮廓的长度：arcLength函数	246
12.3  Hu矩	248
12.3.1  Hu矩函数	248
12.3.2  形状匹配	252
12.4  轮廓拟合	254
12.4.1  矩形包围框	254
12.4.2  最小包围矩形框	257
12.4.3  最小包围圆形	259
12.4.4  最优拟合椭圆	260
12.4.5  最优拟合直线	261
12.4.6  最小外包三角形	262
12.4.7  逼近多边形	263
12.5  凸包	266
12.5.1  获取凸包	267
12.5.2  凸缺陷	268
12.5.3  几何学测试	270
12.6  利用形状场景算法比较轮廓	275
12.6.1  计算形状场景距离	275
12.6.2  计算Hausdorff距离	278
12.7  轮廓的特征值	280
12.7.1  宽高比	280
12.7.2  Extent	281
12.7.3  Solidity	282
12.7.4  等效直径（Equivalent Diameter）	283
12.7.5  方向	284
12.7.6  掩模和像素点	286
12.7.7  最大值和最小值及它们的位置	291
12.7.8  平均颜色及平均灰度	293
12.7.9  极点	294
第13章  直方图处理	297
13.1  直方图的含义	297
13.2  绘制直方图	301
13.2.1  使用Numpy绘制直方图	301
13.2.2  使用OpenCV绘制直方图	302
13.2.3  使用掩模绘制直方图	307
13.3  直方图均衡化	312
13.3.1  直方图均衡化原理	313
13.3.2  直方图均衡化处理	317
13.4  pyplot模块介绍	319
13.4.1  subplot函数	319
13.4.2  imshow函数	320
第14章  傅里叶变换	324
14.1  理论基础	324
14.2  Numpy实现傅里叶变换	328
14.2.1  实现傅里叶变换	329
14.2.2  实现逆傅里叶变换	330
14.2.3  高通滤波示例	331
14.3  OpenCV实现傅里叶变换	333
14.3.1  实现傅里叶变换	333
14.3.2  实现逆傅里叶变换	335
14.3.3  低通滤波示例	336
第15章  模板匹配	339
15.1  模板匹配基础	339
15.2  多模板匹配	345
第16章  霍夫变换	351
16.1  霍夫直线变换	351
16.1.1  霍夫变换原理	351
16.1.2  HoughLines函数	357
16.1.3  HoughLinesP函数	359
16.2  霍夫圆环变换	361
第17章  图像分割与提取	364
17.1  用分水岭算法实现图像分割与提取	364
17.1.1  算法原理	364
17.1.2  相关函数介绍	366
17.1.3  分水岭算法图像分割实例	375
17.2  交互式前景提取	376
第18章  视频处理	383
18.1  VideoCapture类	383
18.1.1  类函数介绍	383
18.1.2  捕获摄像头视频	387
18.1.3  播放视频文件	388
18.2  VideoWriter类	389
18.2.1  类函数介绍	389
18.2.2  保存视频	391
18.3  视频操作基础	392
第19章  绘图及交互	393
19.1  绘画基础	393
19.1.1  绘制直线	394
19.1.2  绘制矩形	394
19.1.3  绘制圆形	395
19.1.4  绘制椭圆	397
19.1.5  绘制多边形	398
19.1.6  在图形上绘制文字	400
19.2  鼠标交互	402
19.2.1  简单示例	404
19.2.2  进阶示例	405
19.3  滚动条	407
19.3.1  用滚动条实现调色板	408
19.3.2  用滚动条控制阈值处理参数	409
19.3.3  用滚动条作为开关	410
第20章  K近邻算法	412
20.1  理论基础	412
20.2  计算	415
20.2.1  归一化	415
20.2.2  距离计算	416
20.2  手写数字识别的原理	417
20.3  自定义函数手写数字识别	421
20.4  K近邻模块的基本使用	427
20.5  K近邻手写数字识别	429
第21章  支持向量机	431
21.1  理论基础	431
21.2  SVM案例介绍	434
第22章  K均值聚类	439
22.1  理论基础	439
22.1.1  分豆子	439
22.1.2  K均值聚类的基本步骤	441
22.2  K均值聚类模块	441
22.3  简单示例	442
第23章  人脸识别	448
23.1  人脸检测	448
23.1.1  基本原理	448
23.1.2  级联分类器的使用	451
23.1.3  函数介绍	452
23.1.4  案例介绍	453
23.2  LBPH人脸识别	454
23.2.1  基本原理	454
23.2.2  函数介绍	456
23.2.3  案例介绍	457
23.3  EigenFaces人脸识别	458
23.3.1  基本原理	458
23.3.2  函数介绍	459
23.3.3  案例介绍	460
23.4  Fisherfaces人脸识别	461
23.4.1  基本原理	461
23.4.2  函数介绍	463
23.4.3  案例介绍	464
23.5  人脸数据库	465
参与文献	467
附录A  范例	470
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>OpenCV轻松入门：面向Python
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Deep Learning 2｜用Python進行自然語言處理的基礎理論實作
第一章 複習類神經網路
第二章 自然語言與字詞的分散式表示
第三章 word2vec
第四章 word2vec的高速化
第五章 遞歸神經網路（RNN）
第六章 含閘門的RNN
第七章 使用RNN產生文章
第八章 Attention
附錄A sigmoid函數與tanh函數的微分
附錄B 啟用WordNet
附錄C GRU
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Deep Learning 2｜用Python進行自然語言處理的基礎理論實作
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>零基础轻松学Python
第1 章 如何入门Python 编程· 1
1.1 编程语言的选择· 1
1.2 如何开始学习· 1
1.3 学习Python 的捷径· 2
1.4 Python 版本的选择· 2
1.5 Python 相关就业方面的选择· 2
1.5.1 Web 网页工程师方向· 3
1.5.2 网络爬虫工程师方向· 3
1.5.3 自动化运维方向· 3
1.5.4 数据分析师方向· 3
1.5.5 游戏开发方向· 3
1.5.6 自动化测试方向· 4
1.5.7 AI 方向· 4
1.6 注意事项· 4
1.6.1 牢记搜索· 4
1.6.2 学一点简单的英语· 4
第2 章 Python“三剑客”，你会用哪个· 5
2.1 什么是Python“三剑客”· 5
2.2 为Windows 系统安装Python 软件· 6
2.2.1 下载地址· 6
2.2.2 安装· 6
2.2.3 开始使用· 9
2.3 为macOS 系统安装Python 软件· 10
2.4 PyCharm 简介· 11
2.4.1 下载地址· 11
2.4.2 安装· 12
2.4.3 开始使用· 13
2.5 Anaconda 简介· 17
2.5.1 下载地址· 18
2.5.2 安装· 19
2.5.3 如何使用Anaconda· 20
2.6 Jupyter Notebook 简介· 23
2.6.1 Jupyter Notebook 是什么· 23
2.6.2 安装· 24
2.6.3 启动· 24
2.6.4 创建文件· 25
2.6.5 如何写代码· 26
第3 章 夯实Python 基础，为进阶做准备· 27
3.1 第一次写代码· 27
3.2 数据——程序的原材料· 28
3.3 学会写注释，方便你我他· 28
3.4 常量与变量· 29
3.4.1 变量命名规则· 30
3.4.2 变量命名方法· 30
3.5 数字类型· 31
3.5.1 整数· 31
3.5.2 浮点数· 32
3.6 布尔类型· 34
3.7 字符串类型· 35
3.7.1 什么是字符串· 35
3.7.2 字符串的基本用法· 36
3.7.3 字符串的常见运算· 36
3.7.4 字符串的切片· 38
3.7.5 各种类型之间的转换· 39
第4 章 Python 数据结构原来并不难· 41
4.1 什么是数据结构· 41
4.2 列表· 41
4.2.1 什么是列表· 41
4.2.2 列表的基本操作· 42
4.2.3 列表的高级用法· 49
4.3 元组· 52
4.3.1 创建元组· 52
4.3.2 修改元组· 54
4.3.3 元组拆包· 55
4.3.4 元组方法· 58
4.3.5 元组与列表的区别· 58
4.4 项目练习：用列表创建《延禧攻略》之魏璎珞宴请名单· 59
4.4.1 描述项目· 59
4.4.2 解析项目· 60
4.4.3 实现功能· 60
4.5 字典· 65
4.5.1 什么是字典· 65
4.5.2 字典特性· 65
4.5.3 字典的基本操作· 66
4.5.4 内置字典函数与方法· 70
4.6 结合字典与列表· 72
4.6.1 字典列表· 72
4.6.2 在字典中存储列表· 72
4.6.3 在字典中存储字典· 73
4.7 项目练习：用字典管理电视剧《扶摇》的演员信息· 73
4.7.1 描述项目· 73
4.7.2 解析项目· 74
4.7.3 实现功能· 75
第5 章 Python 控制结构，厉害了· 80
5.1 Python 运算符与表达式· 80
5.1.1 算术运算符· 80
5.1.2 比较（关系）运算符· 81
5.1.3 赋值运算符· 82
5.1.4 位运算符· 83
5.1.5 逻辑运算符· 84
5.1.6 成员运算符· 85
5.1.7 身份运算符· 86
5.1.8 浅拷贝与深拷贝· 89
5.1.9 运算符优先级· 91
5.2 Python 的三大控制结构· 93
5.3 顺序结构· 93
5.4 分支结构· 94
5.5 循环结构· 97
5.6 for 循环· 98
5.6.1 for 循环与列表· 99
5.6.2 for 循环与字典· 102
5.6.3 嵌套for 循环· 103
5.6.4 项目练习：运用for 循环生成九九乘法表· 104
5.7 列表解析式· 105
5.7.1 概念· 105
5.7.2 指定if 条件的列表解析式· 106
5.7.3 无条件的列表解析式· 109
5.7.4 嵌套循环的列表解析式· 109
5.7.5 字典解析式· 111
5.8 while 循环· 114
5.8.1 用户输入· 115
5.8.2 break 与continue 语句· 115
5.8.3 使用while 循环操作列表和字典· 116
5.9 项目练习：运用Python 控制结构创建通讯录· 118
5.9.1 描述项目· 118
5.9.2 解析项目· 118
5.9.3 实现4 个功能· 119
第6 章 Python 函数，给你不一样的介绍· 122
6.1 什么是函数· 122
6.1.1 为什么要用函数· 123
6.1.2 如何定义函数· 124
6.1.3 如何调用函数· 125
6.2 如何传递参数 · 126
6.2.1 传递实参 · 127
6.2.2 传递数据结构 · 130
6.3 返回值 · 131
6.3.1 return 语句 · 131
6.3.2 返回多个值 · 133
6.4 函数是对象 · 136
6.4.1 第一类对象 · 136
6.4.2 函数赋值给变量 · 136
6.4.3 嵌套函数 · 138
6.4.4 函数作为参数· 140
6.4.5 将函数放在容器中· 143
6.4.6 函数作为返回值· 145
6.5 盒子的秘密· 148
6.5.1 LEGB 作用域 · 148
6.5.2 关键字global · 150
6.5.3 关键字nonlocal · 153
6.6 闭包 · 156
6.6.1 概念 · 156
6.6.2 __closure__属性 · 159
6.6.3 为什么使用闭包 · 160
6.7 三大“神器”之装饰器 · 162
6.7.1 概念 · 162
6.7.2 装饰带有参数的函数 · 166
6.7.3 多个装饰器 · 169
6.7.4 项目练习：使用装饰器为函数添加计时功能 · 171
6.8 三大“神器”之迭代器 · 174
6.9 三大“神器”之生成器 · 177
6.9.1 生成器表达式 · 177
6.9.2 关键字yield · 179
6.10 匿名函数 · 182
6.10.1 概念 · 182
6.10.2 匿名函数的使用场景 · 183
6.10.3 柯里化· 185
6.11 将函数存储在模块中 · 186
6.12 如何设计函数 · 188
6.13 项目练习：运用函数创建自动化管理文件 · 188
6.13.1 项目描述 · 188
6.13.2 项目拆解 · 188
6.13.3 主程序 · 189
6.13.4 实现管理功能 · 190
第7 章 Python 面向对象，简单易懂 · 194
7.1 程序设计方法 · 194
7.2 面向对象程序设计中的概念 · 195
7.3 如何定义类 · 195
7.3.1 创建类 · 195
7.3.2 创建对象 · 197
7.4 继承 · 199
7.5 导入类 · 201
7.6 Python 库 · 203
7.7 类编码风格 · 203
7.8 项目练习：运用面向对象程序设计方法设计餐馆系统 · 203
7.8.1 项目概述 · 203
7.8.2 项目解析 · 204
7.8.3 源代码实现 · 204
第8 章 Python 项目实战 · 208
8.1 项目实战1：运用第三方库设计微信聊天机器人 · 208
8.1.1 项目目的 · 208
8.1.2 Wxpy 库介绍 · 208
8.1.3 指定聊天对象 · 211
8.1.4 聊天机器人 · 212
8.2 项目实战2：开发简化版《阴阳师》游戏 · 213
8.2.1 项目描述 · 213
8.2.2 项目解析 · 213
8.2.3 欢迎界面 · 213
8.2.4 设计游戏人物 · 215
8.2.5 介绍游戏场景 · 219
8.2.6 开始游戏 · 221
8.2.7 判断是否进入下一轮 · 224
8.2.8 项目总结 · 224
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>零基础轻松学Python
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>谁说菜鸟不会数据分析（Python篇）
第1 章　数据分析概况 /1
1.1　数据分析定义（What） /2
1.2　数据分析作用（Why） /4
1.3　数据分析步骤（How） /5
1.3.1　明确分析目的和思路 /6
1.3.2　数据收集 /7
1.3.3　数据处理 /9
1.3.4　数据分析 /9
1.3.5　数据展现 /10
1.3.6　报告撰写 /10
1.4　数据分析的三大误区 /12
1.5　常用的数据分析工具 /13
1.5.1　Excel /13
1.5.2　SPSS /14
1.5.3　R语言 /15
1.5.4　Python语言 /16
第2 章　Python 概况 /17
2.1　Python简介 /18
2.2　Python特点 /19
2.3　Python模块 /20
2.3.1　函数 /20
2.3.2　模块 /24
2.4　Python使用场景 /27
2.5　Python 2与Python 3 /28
2.6　Python与数据科学 /29
2.7　Anaconda简介 /30
2.8　安装Anaconda /31
2.8.1　下载Anaconda /31
2.8.2　安装Anaconda /33
2.9　使用Anaconda /37
2.9.1　PyCharm 与Spyder /37
2.9.2　Anaconda 开始菜单 /38
2.9.3　Spyder 工作界面简介 /39
2.9.4　项目管理 /40
2.9.5　代码提示 /43
2.9.6　变量浏览 /44
2.9.7　图形查看 /44
2.9.8　帮助文档 /45
第3 章　编程基础 /47
3.1　数据类型 /48
3.1.1　数值型 /48
3.1.2　字符型 /50
3.1.3　逻辑型 /56
3.2　赋值和变量 /57
3.2.1　赋值和变量 /57
3.2.2　变量命名规则 /58
3.3　数据结构 /59
3.3.1　列表 /59
3.3.2　字典 /63
3.3.3　序列 /66
3.3.4　数据框 /72
3.3.5　四种数据结构的区别 /80
3.4　向量化运算 /81
3.5　for 循环 /83
3.6　Python 编程注意事项 /87
第4 章　数据处理 /90
4.1　数据导入与导出 /91
4.1.1　数据导入 /91
4.1.2　数据导出 /99
4.2　数据清洗 /100
4.2.1　数据排序 /101
4.2.2　重复数据处理 /102
4.2.3　缺失数据处理 /106
4.2.4　空格数据处理 /109
4.3　数据转换 /110
4.3.1　数值转字符 /110
4.3.2　字符转数值 /112
4.3.3　字符转时间 /113
4.4　数据抽取 /115
4.4.1　字段拆分 /116
4.4.2　记录抽取 /121
4.4.3　随机抽样 /127
4.5　数据合并 /130
4.5.1　记录合并 /130
4.5.2　字段合并 /133
4.5.3　字段匹配 /135
4.6　数据计算 /140
4.6.1　简单计算 /140
4.6.2　时间计算 /141
4.6.3　数据标准化 /142
4.6.4　数据分组 /144
第5 章　数据分析 /148
5.1　对比分析 /149
5.2　基本统计分析 /152
5.3　分组分析 /155
5.4　结构分析 /158
5.5　分布分析 /159
5.6　交叉分析 /162
5.7　RFM 分析 /164
5.8　矩阵分析 /173
5.9　相关分析 /176
5.10　回归分析 /178
5.10.1　回归分析简介 /178
5.10.2　简单线性回归分析 /180
5.10.3　多重线性回归分析 /185
第6 章　数据可视化 /189
6.1　数据可视化简介 /190
6.1.1　什么是数据可视化 /190
6.1.2　数据可视化常用图表 /190
6.1.3　通过关系选择图表 /191
6.2　散点图 /192
6.3　矩阵图 /203
6.4　折线图 /210
6.5　饼图 /215
6.6　柱形图 /217
6.7　条形图 /222
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>谁说菜鸟不会数据分析（Python篇）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python机器学习手册：从数据预处理到深度学习
第1 章　向量、矩阵和数组 ..................................................................... 1
1.0　简介 .....................................................................................................1
1.1　创建一个向量 ......................................................................................1
1.2　创建一个矩阵 ......................................................................................2
1.3　创建一个稀疏矩阵 ...............................................................................3
1.4　选择元素 ..............................................................................................5
1.5　展示一个矩阵的属性 ...........................................................................6
1.6　对多个元素同时应用某个操作 ............................................................7
1.7　找到最大值和最小值 ...........................................................................8
1.8　计算平均值、方差和标准差 ................................................................9
1.9　矩阵变形 ............................................................................................10
1.10 转置向量或矩阵 ............................................................... 11
1.11 展开一个矩阵 ....................................................................................12
1.12 计算矩阵的秩 ....................................................................................13
1.13 计算行列式 ........................................................................................14
1.14 获取矩阵的对角线元素 .....................................................................14
1.15 计算矩阵的迹 ....................................................................................15
1.16 计算特征值和特征向量 .....................................................................16
1.17 计算点积 ...........................................................................................17
1.18 矩阵的相加或相减 ............................................................................18
1.19 矩阵的乘法 ........................................................................................19
1.20 计算矩阵的逆 ....................................................................................20
1.21 生成随机数 ........................................................................................21
第2 章　加载数据 ................................................................................ 23
2.0　简介 ...................................................................................................23
2.1　加载样本数据集 ................................................................................23
2.2　创建仿真数据集 ................................................................................25
2.3　加载CSV 文件 ..................................................................................28
2.4　加载Excel 文件 .................................................................................29
2.5　加载JSON 文件 .................................................................................29
2.6　查询SQL 数据库 ...............................................................................31
第3 章　数据整理 ................................................................................ 33
3.0　简介 ...................................................................................................33
3.1　创建一个数据帧 ................................................................................34
3.2　描述数据 ............................................................................................35
3.3　浏览数据帧 ........................................................................................37
3.4　根据条件语句来选择行 .....................................................................39
3.5　替换值 ...............................................................................................40
3.6　重命名列 ............................................................................................41
3.7　计算最小值、最大值、总和、平均值与计数值 ................................43
3.8　查找唯一值 ........................................................................................44
3.9　处理缺失值 ........................................................................................45
3.10 删除一列 ...........................................................................................47
3.11 删除一行 ............................................................................................48
3.12 删除重复行 ........................................................................................49
3.13 根据值对行分组 ................................................................................51
3.14 按时间段对行分组 ............................................................................52
3.15 遍历一个列的数据 ............................................................................54
3.16 对一列的所有元素应用某个函数 ......................................................55
3.17 对所有分组应用一个函数 .................................................................56
3.18 连接多个数据帧 ................................................................................57
3.19 合并两个数据帧 ................................................................................59
第4 章　处理数值型数据 ...................................................................... 63
4.0　简介 ...................................................................................................63
4.1　特征的缩放 ........................................................................................63
4.2　特征的标准化 ....................................................................................65
4.3　归一化观察值 ....................................................................................66
4.4　生成多项式和交互特征 .....................................................................69
4.5　转换特征 ............................................................................................70
4.6　识别异常值 ........................................................................................71
4.7　处理异常值 ........................................................................................73
4.8　将特征离散化 ....................................................................................75
4.9　使用聚类的方式将观察值分组 ..........................................................77
4.10 删除带有缺失值的观察值 .................................................................79
4.11 填充缺失值 ........................................................................................81
第5 章　处理分类数据 ......................................................................... 83
5.0　简介 ...................................................................................................83
5.1　对nominal 型分类特征编码 ..............................................................84
5.2　对ordinal 分类特征编码 ....................................................................86
5.3　对特征字典编码 ................................................................................88
5.4　填充缺失的分类值 .............................................................................91
5.5　处理不均衡分类 ................................................................................93
第6 章　处理文本 ................................................................................ 97
6.0　简介 ...................................................................................................97
6.1　清洗文本 ............................................................................................97
6.2　解析并清洗HTML ............................................................................99
6.3　移除标点 .......................................................................................... 100
6.4　文本分词 .......................................................................................... 101
6.5　删除停止词（stop word）......................................... 102
6.6　提取词干 .......................................................................................... 103
6.7　标注词性 .......................................................................................... 104
6.8　将文本编码成词袋（Bag of Words）................................................ 107
6.9　按单词的重要性加权 ....................................... 109
第7 章　处理日期和时间 .................................................................... 113
7.0　简介 ................................................................................................. 113
7.1　把字符串转换成日期 ......................................................... 113
7.2　处理时区 .......................................................................................... 115
7.3　选择日期和时间 .............................................................................. 116
7.4　将日期数据切分成多个特征 ............................................................ 117
7.5　计算两个日期之间的时间差 ............................................................ 118
7.6　对一周内的各天进行编码 ............................................................... 119
7.7　创建一个滞后的特征 ....................................................... 120
7.8　使用滚动时间窗口 ........................................................................... 121
7.9　处理时间序列中的缺失值 ............................................................... 123
第8 章　图像处理 .............................................................................. 127
8.0　简介 ................................................................................................. 127
8.1　加载图像 .......................................................................................... 128
8.2　保存图像 .......................................................................................... 130
8.3　调整图像大小 .................................................................................. 131
8.4　裁剪图像 .......................................................................................... 132
8.5　平滑处理图像 .................................................................................. 133
8.6　图像锐化 .......................................................................................... 136
8.7　提升对比度 .................................................................. 138
8.8　颜色分离 .......................................................................................... 140
8.9　图像二值化 .......................................... 142
8.10 移除背景............................................. 144
8.11 边缘检测 .......................................................................................... 148
8.12 角点检测 ................................. 150
8.13 为机器学习创建特征 ................................................. 153
8.14 将颜色平均值编码成特征 ............................................................... 156
8.15 将色彩直方图编码成特征 ............................................................... 157
第9 章　利用特征提取进行特征降维 ................................................... 161
9.0　简介 ................................................................................................. 161
9.1　使用主成分进行特征降维 ............................................................... 161
9.2　对线性不可分数据进行特征降维 .................................................... 164
9.3　通过最大化类间可分性进行特征降维 ............................................. 166
9.4　使用矩阵分解法进行特征降维...................................... 169
9.5　对稀疏数据进行特征降维 ............................................................... 170
第10 章　使用特征选择进行降维 ........................................................ 173
10.0　简介........................................................... 173
10.1　数值型特征方差的阈值化...................................... 173
10.2　二值特征的方差阈值化............................................ 175
10.3　处理高度相关性的特征 .......................................... 176
10.4　删除与分类任务不相关的特征 ...................................................... 178
10.5　递归式特征消除 ............................................................................ 180
第11 章　模型评估 ............................................................................ 183
11.0　简介 ...................................................................... 183
11.1　交叉验证模型 .......................................... 183
11.2　创建一个基准回归模型........................................ 187
11.3　创建一个基准分类模型 .................................. 188
11.4　评估二元分类器 ................................................ 190
11.5　评估二元分类器的阈值 ..................................... 193
11.6　评估多元分类器 .......................................................... 197
11.7　分类器性能的可视化 ..................................................................... 198
11.8　评估回归模型 ............................................. 201
11.9　评估聚类模型 ............................................................ 203
11.10 创建自定义评估指标 ..................................................................... 204
11.11 可视化训练集规模的影响 ............................................................. 206
11.12 生成对评估指标的报告 .................................................... 208
11.13 可视化超参数值的效果 ................................................. 209
第12 章　模型选择 ............................................................................ 213
12.0　简介 .................................................... 213
12.1　使用穷举搜索选择最佳模型 .......................................................... 213
12.2　使用随机搜索选择最佳模型 .......................................................... 216
12.3　从多种学习算法中选择最佳模型.................. 218
12.4　将数据预处理加入模型选择过程 .............................. 220
12.5　用并行化加速模型选择 ................................. 221
12.6　使用针对特定算法的方法加速模型选择 ....................................... 223
12.7　模型选择后的性能评估 ............................ 224
第13 章　线性回归 ............................................................................ 227
13.0　简介 ........................................ 227
13.1　拟合一条直线 .......................................... 227
13.2　处理特征之间的影响 ..................................................................... 229
13.3　拟合非线性关系 ............................................................................ 231
13.4　通过正则化减少方差 ..................................................................... 233
13.5　使用套索回归减少特征 .............................................. 235
第14 章　树和森林 ............................................................................ 237
14.0　简介 ............................... 237
14.1　训练决策树分类器 ......................................................................... 237
14.2　训练决策树回归模型 ..................................................................... 239
14.3　可视化决策树模型 ......................................................................... 240
14.4　训练随机森林分类器 ..................................................................... 243
14.5　训练随机森林回归模型 ............................ 244
14.6　识别随机森林中的重要特征 .......................................................... 245
14.7　选择随机森林中的重要特征 .......................................................... 248
14.8　处理不均衡的分类 ......................................................................... 249
14.9　控制决策树的规模 ......................................................................... 250
14.10 通过boosting 提高性能 ................................................................ 252
14.11 使用袋外误差（Out-of-Bag Error）评估随机森林模型 ................ 253
第15 章　KNN ................................................................................... 255
15.0　简介 ................................................................... 255
15.1　找到一个观察值的最近邻 ................................................. 255
15.2　创建一个KNN 分类器................................................................... 258
15.3　确定最佳的邻域点集的大小 .......................................................... 260
15.4　创建一个基于半径的最近邻分类器 ......................... 261
第16 章　逻辑回归 ............................................................................ 263
16.0　简介 ............................................................... 263
16.1　训练二元分类器 ............................................................................ 263
16.2　训练多元分类器 ............................................................................ 265
16.3　通过正则化来减小方差 ............................................. 266
16.4　在超大数据集上训练分类器 .......................................................... 267
16.5　处理不均衡的分类 ......................................................................... 269
第17 章　支持向量机 ......................................................................... 271
17.0　简介 ..................................................................... 271
17.1　训练一个线性分类器 ..................................................................... 271
17.2　使用核函数处理线性不可分的数据 ..................................... 274
17.3　计算预测分类的概率 ..................................................................... 278
17.4　识别支持向量 ....................................................... 279
17.5　处理不均衡的分类 ......................................................................... 281
第18 章　朴素贝叶斯 ......................................................................... 283
18.0　简介 ............................................................. 283
18.1　为连续的数据训练分类器 ............................................. 284
18.2　为离散数据和计数数据训练分类器 ............................... 286
18.3　为具有二元特征的数据训练朴素贝叶斯分类器 ............................ 287
18.4　校准预测概率 ........................................ 288
第19 章　聚类 ................................................................................... 291
19.0　简介 ................................................................ 291
19.1　使用K-Means 聚类算法 ................................................................ 291
19.2　加速K-Means 聚类 ........................................................................ 294
19.3　使用Meanshift 聚类算法 ............................................................... 295
19.4　使用DBSCAN 聚类算法 ............................................................... 296
19.5　使用层次合并聚类算法 .......................................... 298
第20 章　神经网络 ............................................................................ 301
20.0　简介 ...................................................................... 301
20.1　为神经网络预处理数据 .................................................... 302
20.2　设计一个神经网络 ......................................................................... 304
20.3　训练一个二元分类器 ..................................................................... 307
20.4　训练一个多元分类器 ..................................................................... 309
20.5　训练一个回归模型 ......................................................................... 311
20.6　做预测 ........................................................................................... 313
20.7　可视化训练历史 ............................................................................ 315
20.8　通过权重调节减少过拟合 ..................................... 318
20.9　通过提前结束减少过拟合 ........................................ 320
20.10 通过Dropout 减少过拟合 ............................................................. 322
20.11 保存模型训练过程 ......................................................................... 324
20.12 使用k 折交叉验证评估神经网络 ................................................ 326
20.13 调校神经网络 ........................................................................ 328
20.14 可视化神经网络 ............................................................................ 331
20.15 图像分类 ....................................................................................... 333
20.16 通过图像增强来改善卷积神经网络的性能 .............................. 337
20.17 文本分类 ....................................................................................... 339
第21 章　保存和加载训练后的模型 ..................................................... 343
21.0　简介 ....................................................................................... 343
21.1　保存和加载scikit-learn 模型 ......................................................... 343
21.2　保存和加载Keras 模型 .................................................................. 345
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python机器学习手册：从数据预处理到深度学习
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据可视化之matplotlib精进
第1 篇图 形
第 1 章向几何图形里填充颜色 ............................................................................................... 2
1.1 多边形的颜色填充 ............................................................................................................... 2
1.1.1 规则多边形的颜色填充 ....................................................................................... 2
1.1.2 不规则多边形的颜色填充 ........................................................................................ 4
1.2 交叉曲线的颜色填充 ........................................................................................................... 5
1.3 延伸阅读 ............................................................................................................ 6
1.3.1 水平方向的交叉曲线的颜色填充方法 ....................................................................... 6
1.3.2 垂直方向的交叉曲线的颜色填充方法 .................................................................. 8
1.4 综合案例：交叉间断型曲线的颜色填充 ........................................................................... 9
第2 章使用模块patches 绘制几何图形 .............................................................................. 12
2.1 圆的实现方法 ..................................................................................................................... 12
2.2 椭圆的实现方法 ................................................................................................................. 15
2.3 矩形的实现方法 ................................................................................................................. 17
2.4 圆弧和楔形的绘制方法 ..................................................................................................... 19
2.5 延伸阅读 ............................................................................................................................. 22
2.5.1 使用折线绘制圆 .................................................................................................. 22
2.5.2 使用椭圆绘制圆 ........................................................................................................... 25
2.5.3 使用楔形绘制饼图 ................................................................................................ 26
2.5.4 使用楔形绘制圆环式饼图 .................................................................................. 28
第3 章组合展示统计图形 .................................................................................................... 31
3.1 机器学习中的判别分析示意图 ......................................................................................... 31
3.2 日期型时间序列图 ............................................................................................................. 33
3.3 向直方图中添加概率密度曲线 ......................................................................................... 35
3.4 绘图区域嵌套子绘图区域 ................................................................................................. 39
3.5 延伸阅读：设置一般化的日期刻度线 ............................................................................. 42
第2 篇元 素
第 4 章设置文本内容的样式和布局 ...................................................................................... 45
4.1 文本注解的展示样式 ......................................................................................................... 45
4.1.1 文本框的样式 ..................................................................................................... 46
4.1.2 文本注释箭头的样式 ...................................................................................................... 47
4.2 文本内容的布局 ................................................................................................................. 49
4.3 延伸阅读 ............................................................................................................................. 54
4.3.1 文本自动换行 ...................................................................................................... 54
4.3.2 文本内容的旋转角度 ............................................................................................. 57
4.3.3 文本内容的旋转模式 .................................................................................................. 59
4.3.4 多行文本的对齐方式 .............................................................................................. 63
4.3.5 文本注释箭头的连接风格 ........................................................................................... 66
第5 章调整计量单位和计量方法 ......................................................................................... 76
5.1 不同计量单位的实现方法 ................................................................................................. 76
5.1.1 弧度和角度的实现方法 ................................................................................................. 76
5.1.2 厘米和英寸的实现方法 .............................................................................................. 78
5.1.3 秒、赫兹和分钟的实现方法 ....................................................................................... 80
5.1.4 文本注释位置的坐标系统的设置方法 ................................................................. 81
5.2 不同计量方法的操作原理 ................................................................................................. 83
第6 章调整刻度线和刻度标签及轴脊的展示效果 ................................................................ 87
6.1 刻度线和刻度标签及轴标签的位置调整 ......................................................................... 87
6.2 刻度线的位置和数值的动态调整 ..................................................................................... 90
6.3 主要刻度线和次要刻度线的调整 ..................................................................................... 92
6.4 轴脊的显示与隐藏 ............................................................................................................. 95
6.5 轴脊的位置调整 ................................................................................................................. 98
第 3 篇交 互
第 7 章实现图形的动画效果............................................................................................... 104
7.1 使用模块animation 绘制动画 ......................................................................................... 104
7.2 调用模块pyplot 的API 绘制动画 ................................................................................... 106
第8 章实现 GUI 效果 ........................................................................................................ 110
8.1 类RadioButtons 的使用方法 ............................................................................................110
8.2 类Cursor 的使用方法 .......................................................................................................113
8.3 类CheckButtons 的使用方法 ...........................................................................................114
第9 章实现事件处理效果 .................................................................................................. 118
9.1 单击关闭画布后出现事件结果提示 ................................................................................118
9.2 画布局部放大效果的实现方法 ....................................................................................... 120
第 4 篇探 索
第 10 章从外部导入图像加载到绘图区域 .......................................................................... 124
10.1 外部图像的多样化展示 ................................................................................................. 124
10.2 地势图 ............................................................................................................................. 126
10.3 热力图 ............................................................................................................................. 127
10.4 设置图片具有超链接功能 ............................................................................................. 131
10.5 添加画布层面的外部图像 ............................................................................................. 136
10.6 借助滤镜使得图像产生多样化的展示效果 ................................................................. 140
10.6.1 颜色的翻转 ...................................................................................................... 145
10.6.2 RGB 通道NumPy 数组转换成单通道NumPy 数组 ......................................... 146
第11 章绘制 3D 图形......................................................................................................... 150
11.1 绘制带颜色标尺的彩色曲面 ......................................................................................... 150
11.2 在3D 空间里分层展示投射到指定平面后的2D 柱状图 ...................................... 152
11.3 在3D 空间里绘制散点图 .............................................................................................. 154
第12 章绘制地图 ............................................................................................................... 156
12.1 澳大利亚的首都和首府城市的人口数量 ..................................................................... 156
12.2 当前时点的昼夜地理区域分布图 ................................................................................. 160
12.3 城市之间相隔距离的可视化呈现 ................................................................................. 162
第13 章综合交叉的应用场景............................................................................................. 167
13.1 输入数据可以使用字符串代替变量 ............................................................................. 167
13.2 以PDF 文件格式存储画布图形 .................................................................................... 169
13.3 调用pyplot 的API 和面向对象的API 设置图形属性 .......................................... 171
13.4 用树形图展示文件夹中的文件大小 ............................................................................. 172
13.5 matplotlib 风格集的设置方法 ........................................................................................ 176
13.6 matplotlib 后端类型的配置方法 .................................................................................... 181
第5 篇拓 展
第 14 章使用 LaTeX 和matplotlib 自带的TeX 功能渲染文本内容 .......................... 187
14.1 准备步骤 ......................................................................................................................... 187
14.2 案例展示 ......................................................................................................................... 188
14.3 延伸阅读 ......................................................................................................................... 190
第15 章使用 matplotlib 书写数学表达式的方法和技巧...................................................... 193
15.1 编辑字符串的规则 ......................................................................................................... 193
15.2 设置输出字符串的字体效果 ......................................................................................... 194
15.3 通过数学公式和数学表达式学习TeX 符号的编写规则 ........................................ 195
15.4 通过数学符号和希腊字母学习TeX 符号的编写规则 ................................................... 204
附录A SciPy 的安装方法 ................................................................................................... 209
附录B IPython 的使用方法 ................................................................................................ 211
附录C mpl_toolkits 包的安装方法和使用方法.................................................................... 221
附录D Python 2 和Python 3 的软件版本的使用建议 ........................................................ 226
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python数据可视化之matplotlib精进
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Spark数据分析：基于Python语言
译者序
前言
引言
第一部分　Spark基础
第1章　大数据、Hadoop、Spark介绍 2
1.1　大数据、分布式计算、Hadoop简介 2
1.1.1　大数据与Hadoop简史 2
1.1.2　Hadoop简介 3
1.2　Spark简介 8
1.2.1　Spark背景 9
1.2.2　Spark的用途 9
1.2.3　Spark编程接口 9
1.2.4　Spark程序的提交类型 10
1.2.5　Spark应用程序的输入/输出类型 11
1.2.6　Spark中的RDD 11
1.2.7　Spark与Hadoop 11
1.3　Python函数式编程 12
1.3.1　Python函数式编程中的数据结构 12
1.3.2　Python对象序列化 15
1.3.3　Python函数式编程基础 17
1.4　本章小结 19
第2章　部署Spark 20
2.1　Spark部署模式 20
2.1.1　本地模式 21
2.1.2　Spark独立集群 21
2.1.3　基于YARN运行Spark 22
2.1.4　基于Mesos运行Spark 22
2.2　准备安装Spark 23
2.3　获取Spark 23
2.4　在Linux或Mac OS X上安装Spark 25
2.5　在Windows上安装Spark 26
2.6　探索Spark安装目录 28
2.7　部署多节点的Spark独立集群 29
2.8　在云上部署Spark 30
2.8.1　AWS 30
2.8.2　GCP 32
2.8.3　Databricks 32
2.9　本章小结 34
第3章　理解Spark集群架构 35
3.1　Spark应用中的术语 35
3.1.1　Spark驱动器 36
3.1.2　Spark工作节点与执行器 38
3.1.3　Spark主进程与集群管理器 40
3.2　使用独立集群的Spark应用 41
3.3　在YARN上运行Spark应用 42
3.3.1　ResourceManager作为集群管理器 42
3.3.2　ApplicationMaster作为Spark主进程 42
3.4　在YARN上运行Spark应用的部署模式 42
3.4.1　客户端模式 42
3.4.2　集群模式 43
3.4.3　回顾本地模式 45
3.5　本章小结 45
第4章　Spark编程基础 46
4.1　RDD简介 46
4.2　加载数据到RDD 48
4.2.1　从文件创建RDD 48
4.2.2　从文本文件创建RDD 49
4.2.3　从对象文件创建RDD 52
4.2.4　从数据源创建RDD 52
4.2.5　从JSON文件创建RDD 54
4.2.6　通过编程创建RDD 56
4.3　RDD操作 57
4.3.1　RDD核心概念 57
4.3.2　基本的RDD转化操作 61
4.3.3　基本的RDD行动操作 65
4.3.4　键值对RDD的转化操作 69
4.3.5　MapReduce与单词计数练习 75
4.3.6　连接操作 78
4.3.7　在Spark中连接数据集 82
4.3.8　集合操作 85
4.3.9　数值型RDD的操作 87
4.4　本章小结 89
第二部分　基础拓展
第5章　Spark核心API高级编程 92
5.1　Spark中的共享变量 92
5.1.1　广播变量 92
5.1.2　累加器 96
5.1.3　练习：使用广播变量和累加器 99
5.2　Spark中的数据分区 100
5.2.1　分区概述 100
5.2.2　掌控分区 101
5.2.3　重分区函数 102
5.2.4　针对分区的API方法 104
5.3　RDD的存储选项 106
5.3.1　回顾RDD谱系 106
5.3.2　RDD存储选项 107
5.3.3　RDD缓存 109
5.3.4　持久化RDD 109
5.3.5　选择何时持久化或缓存RDD 112
5.3.6　保存RDD检查点 112
5.3.7　练习：保存RDD检查点 114
5.4　使用外部程序处理RDD 115
5.5　使用Spark进行数据采样 117
5.6　理解Spark应用与集群配置 118
5.6.1　Spark环境变量 118
5.6.2　Spark配置属性 121
5.7　Spark优化 124
5.7.1　早过滤，勤过滤 124
5.7.2　优化满足结合律的操作 124
5.7.3　理解函数和闭包的影响 126
5.7.4　收集数据的注意事项 127
5.7.5　使用配置参数调节和优化应用 127
5.7.6　避免低效的分区 128
5.7.7　应用性能问题诊断 130
5.8　本章小结 133
第6章　使用Spark进行SQL与NoSQL编程 134
6.1　Spark SQL简介 134
6.1.1　Hive简介 134
6.1.2　Spark SQL架构 138
6.1.3　DataFrame入门 141
6.1.4　使用DataFrame 150
6.1.5　DataFrame缓存、持久化与重新分区 157
6.1.6　保存DataFrame输出 158
6.1.7　访问Spark SQL 161
6.1.8　练习：使用Spark SQL 163
6.2　在Spark中使用NoSQL系统 165
6.2.1　NoSQL简介 165
6.2.2　在Spark中使用HBase 166
6.2.3　练习：在Spark中使用HBase 169
6.2.4　在Spark中使用Cassandra 170
6.2.5　在Spark中使用DynamoDB 172
6.2.6　其他NoSQL平台 174
6.3　本章小结 174
第7章　使用Spark处理流数据与消息 175
7.1　Spark Streaming简介 175
7.1.1　Spark Streaming架构 176
7.1.2　DStream简介 177
7.1.3　练习：Spark Streaming入门 183
7.1.4　状态操作 184
7.1.5　滑动窗口操作 185
7.2　结构化流处理 188
7.2.1　结构化流处理数据源 188
7.2.2　结构化流处理的数据输出池 189
7.2.3　输出模式 190
7.2.4　结构化流处理操作 190
7.3　在Spark中使用消息系统 192
7.3.1　Apache Kafka 192
7.3.2　KafkaUtils 195
7.3.3　练习：在Spark中使用Kafka 196
7.3.4　亚马逊Kinesis 199
7.4　本章小结 203
第8章　Spark数据科学与机器学习简介 204
8.1　Spark与R语言 204
8.1.1　R语言简介 204
8.1.2　通过R语言使用Spark 210
8.1.3　练习：在RStudio中使用SparkR 215
8.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Spark数据分析：基于Python语言
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>轻松掌握BBC micro:bit上Python编程
第1 章　简介 ..................................................................1
1.1　BBC micro:bit 项目介绍 ......................................................................... 2
1.2　BBC micro:bit 的各组成部分 ................................................................. 4
1.3　给micro:bit 供电 .................................................................................... 6
1.4　为BBC micro:bit 编程 ............................................................................ 7
1.5　算法与程序 ............................................................................................. 8
1.6　高级语言 ................................................................................................. 9
1.7　在micro:bit 上运行程序的步骤 ........................................................... 10
1.8　micro:bit 的内存 .................................................................................... 10
1.9　总结 ........................................................................................................11
第2 章　浏览器编辑器 .................................................13
2.1　简介 ...................................................................................................... 14
2.2　使用浏览器编辑器 ............................................................................... 14
2.3　把程序从浏览器编辑器中复制到micro:bit 上 ................................... 17
2.4　浏览器编辑器按钮 .............................................................................. 20
2.5　代码片段 .............................................................................................. 21
2.6　总结 ...................................................................................................... 23
第3 章　Mu 编辑器 ......................................................25
3.1　简介 ...................................................................................................... 26
3.2　安装Mu 编辑器 .................................................................................... 27
3.3　使用Mu 编辑器 .................................................................................... 31
3.4　Mu 编辑器的按钮 ................................................................................. 33
3.5　编程准备 ............................................................................................... 35
3.6　练习1: 输入代码 ................................................................................. 36
3.7　将代码复制到micro:bit 中 ................................................................... 37
3.8　总结 ....................................................................................................... 38
第4 章　开始编程 .........................................................39
4.1　简介 ....................................................................................................... 40
4.2　程序详解 .............................................................................................. 40
4.3　详解while 循环 ..................................................................................... 42
4.4　变量名称 ............................................................................................... 43
4.5　练习2 ：用Mu 编辑器编程 ................................................................ 44
4.6　总结 ...................................................................................................... 47
第5 章　REPL ：交互式编程 ........................................49
5.1　简介 ...................................................................................................... 50
5.2　使用REPL ............................................................................................. 51
5.3　获取帮助 ............................................................................................... 53
5.4　进阶帮助 .............................................................................................. 54
5.5　练习3 ：使用REPL 模式检查代码 ..................................................... 56
5.6　总结 ....................................................................................................... 58
第6 章　使用MicroPython 语言查看、创建图案 ..........61
6.1　简介 ....................................................................................................... 62
6.2　在网络上使用micro:bit 模拟器 .......................................................... 62
6.3　创建新的图案 ....................................................................................... 65
6.4　练习4 ：创建图案 ................................................................................ 67
6.5　练习5: 在REPL 模式下测试 ............................................................... 67
6.6　使用5 行代码绘制图案 ....................................................................... 68
6.7　练习6: 为图案编程 ............................................................................. 69
6.8　保存并加载程序 ................................................................................... 71
6.9　总结 ....................................................................................................... 71
第7 章　MicroPython 的动画功能 ................................73
7.1　简介 ...................................................................................................... 74
7.2　飞机的移动图案 ................................................................................... 74
7.3　编程实现飞机移动 ............................................................................... 78
7.4　练习7 ：运行飞机移动程序 ................................................................ 79
7.5　练习8 ：让图案“动”起来 ............................................................... 81
7.6　进一步学习的建议 ............................................................................... 82
7.7　总结 ...................................................................................................... 83
第8 章　列表和循环 .....................................................85
8.1　简介 ....................................................................................................... 86
8.2　Python 语言和MicroPython 语言中的列表 ........................................ 86
8.3　嵌套循环 ............................................................................................... 88
8.4　在循环中加入“飞机” ......................................................................... 89
8.5　练习9: 列表编程 .................................................................................. 91
8.6　range() 函数 ........................................................................................... 91
8.7　str() 函数 ................................................................................................ 92
8.8　练习10: 学习使用range() 和str() 函数 .............................................. 93
8.9　random 模块 .......................................................................................... 93
8.10　练习11: random 模块 ......................................................................... 96
8.11　总结 ...................................................................................................... 97
第9 章　音乐和声音 .....................................................99
9.1　简介 .................................................................................................... 100
9.2　music 模块 ........................................................................................... 101
9.3　MicroPython 混成曲 ........................................................................... 104
9.4　练习12: 播放曲调 .............................................................................. 107
9.5　创作新的音乐 ..................................................................................... 108
9.6　练习13: 创作曲调 ............................................................................. 109
9.7　语音 .................................................................................................... 109
9.8　练习14: 制作一段语音 .......................................................................111
9.9　总结 .....................................................................................................112
第10 章　分支和运动 ................................................. 113
10.1　简介 ...................................................................................................114
10.2　练习15: 使用按钮 .............................................................................116
10.3　加速度计 ............................................................................................118
10.4　使用加速度计 ....................................................................................119
10.5　练习16: 测量加速度 ........................................................................119
10.6　micro:bit 的姿态 ................................................................................ 121
10.7　语法 ................................................................................................... 121
10.8　练习17 ：检测姿势 .......................................................................... 122
10.9　总结 ................................................................................................... 123
附录A　位（Bits）、字节（Bytes）以及十六进制（ Hexadecimal） .............................................125
附录B　术语表 ...........................................................133
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>轻松掌握BBC micro:bit上Python编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python量化交易：策略、技巧与实战
第1章  量化交易概述	1
1.1  初识量化交易	2
1.1.1  什么是量化交易	2
1.1.2  量化交易与算法交易	2
1.1.3  量化交易与程序化交易	2
1.1.4  量化交易与技术分析	3
1.1.5  量化交易与人工交易	3
1.1.6  为什么要学习量化交易	4
1.2  量化交易的特点	5
1.3  量化交易的应用	6
1.3.1  投资品种选择	7
1.3.2  投资时机选择	7
1.3.3  算法交易	7
1.3.4  各种套利交易	9
1.3.5  资产配置	10
1.4  量化交易的故事	11
1.4.1  朱尔斯•雷格纳特的量化交易故事	11
1.4.2  爱德华•索普的量化交易故事	12
1.4.3  詹姆斯•西蒙斯的量化交易故事	13
1.5  量化交易的历史	14
1.5.1  国外量化交易的历史	14
1.5.2  国内量化交易的历史	15
1.6  量化交易的注意事项	15
第2章  量化交易平台	17
2.1  初识JoinQuant聚宽量化交易平台	18
2.2  量化交易平台的功能	18
2.2.1  高质量数据和强大的研究平台	18
2.2.2  顶级回测体验和顶尖模拟交易	19
2.3  账户的注册、登录及量化交易策略的创建	19
2.3.1  量化交易平台账户的注册	19
2.3.2  量化交易平台账户的登录	20
2.3.3  量化交易策略的创建	22
2.4  量化交易策略的选股技巧	24
2.4.1  量化选股的基本设置	24
2.4.2  选股指标	27
2.5  量化交易策略的买卖条件模型	31
2.5.1  轮动模型	32
2.5.2  择时模型	33
2.6  量化交易策略的风险控制技巧	35
2.6.1  止盈、止损指标	35
2.6.2  其他指标	36
2.7  量化交易策略的其他参数设置技巧	36
2.8  编写Python代码来创建量化交易策略	38
2.9  量化交易策略的回测	39
2.10  量化交易策略的模拟交易	41
2.10.1  新建模拟交易并运行	41
2.10.2  查看模拟交易	42
2.10.3  绑定微信	45
2.11  量化交易策略的实盘交易	46
第3章  Python开发环境及编程基础	49
3.1  初识Python	50
3.1.1  Python的发展历程	50
3.1.2  Python的特点	50
3.2  Python开发环境及配置	51
3.2.1  Python的下载和安装	51
3.2.2  Python的环境变量配置	53
3.3  Python程序的编写	57
3.4  利用量化交易平台编写Python程序	61
3.4.1  初识IPython Notebook研究平台	62
3.4.2  利用IPython Notebook编写Python程序	66
3.5  Python的基本数据类型	67
3.5.1  数值类型	67
3.5.2  字符串	69
3.6  Python的变量与赋值	73
3.6.1  变量命名规则	73
3.6.2  变量的赋值	74
3.7  Python的基本运算	74
3.7.1  算术运算	75
3.7.2  赋值运算	76
3.7.3  位运算	77
3.8  Python的代码格式	78
3.8.1  代码缩进	78
3.8.2  代码注释	79
3.8.3  空行	80
3.8.4  同一行显示多条语句	80
第4章  Python流程控制与特征数据类型	81
4.1  Python的选择结构	82
4.1.1  关系运算	82
4.1.2  逻辑运算	83
4.1.3  if语句	84
4.1.4  嵌套if语句	86
4.2  Python的循环结构	87
4.2.1  while循环	87
4.2.2  while循环使用else语句	88
4.2.3  无限循环	89
4.2.4  for循环	90
4.2.5  在for循环中使用range()函数	90
4.2.6  break语句	92
4.2.7  continue语句	92
4.2.8  pass语句	93
4.3  Python的特征数据类型	94
4.3.1  列表	94
4.3.2  元组	97
4.3.3  字典	99
4.3.4  集合	100
第5章  Python函数与面向对象	104
5.1  Python内置函数	105
5.1.1  数学函数	105
5.1.2  随机数函数	106
5.1.3  三角函数	108
5.1.4  字符串函数	110
5.2  用户自定义函数	113
5.2.1  自定义函数的定义	113
5.2.2  调用自定义函数	114
5.2.3  函数的参数传递	116
5.2.4  函数的参数类型	118
5.2.5  匿名函数	123
5.3  Python的面向对象	123
5.3.1  面向对象概念	124
5.3.2  类与实例	124
5.3.3  模块的引用	127
5.3.4  包	127
5.4  变量作用域及类型	130
5.4.1  变量作用域	130
5.4.2  全局变量和局部变量	131
5.4.3  global和nonlocal关键字	132
第6章  Python量化交易策略的常用库	135
6.1  Numpy库	136
6.1.1  ndarray数组基础	136
6.1.2  Numpy的矩阵对象	148
6.2  Pandas库	149
6.2.1  一维数组Series	149
6.2.2  二维数组DataFrame	150
6.2.3  三维数组Panel	160
第7章  Python量化交易策略的常用函数与对象	163
7.1  Python量化交易策略的一般结构	164
7.1.1  初始化函数	165
7.1.2  开盘前运行函数	166
7.1.3  开盘时运行函数	166
7.1.4  收盘后运行函数	167
7.2  Python量化交易策略的设置函数	167
7.2.1  设置基准函数	168
7.2.2  设置佣金/印花税函数	168
7.2.3  设置滑点函数	169
7.2.4  设置动态复权（真实价格）模式函数	170
7.2.5  设置成交量比例函数	170
7.2.6  设置是否开启盘口撮合模式函数	171
7.2.7  设置要操作的股票池函数	171
7.3  Python量化交易策略的定时函数	171
7.3.1  定时函数的定义及分类	172
7.3.2  定时函数各项参数的意义	172
7.3.3  定时函数的注意事项	173
7.3.4  定时函数的实例	174
7.4  Python量化交易策略的下单函数	174
7.4.1  按股数下单函数	174
7.4.2  目标股数下单函数	175
7.4.3  按价值下单函数	175
7.4.4  目标价值下单函数	176
7.4.5  撤单函数	176
7.4.6  获取未完成订单函数	177
7.4.7  获取订单信息函数	177
7.4.8  获取成交信息函数	178
7.5  Python量化交易策略的日志log	178
7.5.1  设定log级别	178
7.5.2  log.info	179
7.6  Python量化交易策略的常用对象	179
7.6.1  Order对象	179
7.6.2  全局对象g	180
7.6.3  Trade对象	180
7.6.4  tick对象	180
7.6.5  Context对象	181
7.6.6  Position对象	182
7.6.7  SubPortfolio对象	183
7.6.8  Portfolio对象	184
7.6.9  SecurityUnitData对象	184
第8章  Python量化交易策略的获取数据函数运用技巧	186
8.1  history()函数的运用技巧	187
8.1.1  各项参数的意义	187
8.1.2  history()函数的应用实例	188
8.2  attribute_history ()函数的运用技巧	191
8.3  get_fundamentals ()函数的运用技巧	192
8.3.1  各项参数的意义	192
8.3.2  get_fundamentals ()函数的应用实例	193
8.4  get_fundamentals_continuously ()函数的运用技巧	198
8.5  get_current_data ()函数的运用技巧	199
8.6  get_index_stocks ()函数的运用技巧	200
8.6.1  各项参数的意义	200
8.6.2  get_index_stocks ()函数的应用实例	201
8.7  get_industry_stocks()函数的运用技巧	202
8.8  get_concept_stocks ()函数的运用技巧	203
8.9  get_all_securities()函数的运用技巧	205
8.9.1  各项参数的意义	205
8.9.2  get_all_securities()函数的应用实例	206
8.10  get_security_info ()函数的运用技巧	207
8.11  get_billboard_list ()函数的运用技巧	208
8.11.1  各项参数的意义	208
8.11.2  get_billboard_list()函数的应用实例	209
8.12  get_locked_shares ()函数的运用技巧	210
第9章  Python量化交易策略的基本面选股技巧	211
9.1  量化选股概述	212
9.2  成长类因子选股技巧	212
9.2.1  营业收入同比增长率选股技巧	212
9.2.2  营业收入环比增长率选股技巧	214
9.2.3  净利润同比增长率选股技巧	215
9.2.4  净利润环比增长率选股技巧	216
9.2.5  营业利润率选股技巧	217
9.2.6  销售净利率选股技巧	217
9.2.7  销售毛利率选股技巧	218
9.3  规模类因子选股技巧	220
9.3.1  总市值选股技巧	220
9.3.2  流通市值选股技巧	221
9.3.3  总股本选股技巧	222
9.3.4  流通股本选股技巧	222
9.4  价值类因子选股技巧	223
9.4.1  市净率选股技巧	223
9.4.2  市销率选股技巧	224
9.4.3  市现率选股技巧	225
9.4.4  动态市盈率选股技巧	226
9.4.5  静态市盈率选股技巧	227
9.5  质量类因子选股技巧	228
9.5.1  净资产收益率选股技巧	228
9.5.2  总资产净利率选股技巧	229
9.6  基本面多因子量化选股	230
第10章  Python量化交易策略的技术指标函数运用技巧	232
10.1  量化择时概述	233
10.2  趋向指标函数运用技巧	234
10.2.1  MACD指标函数	234
10.2.2  EMV指标函数	235
10.2.3  UOS指标函数	237
10.2.4  GDX指标函数	238
10.2.5  DMA指标函数	239
10.2.6  JS指标函数	240
10.2.7  MA指标函数	241
10.2.8  EXPMA指标函数	242
10.2.9  VMA指标函数	243
10.3  反趋向指标函数运用技巧	245
10.3.1  KD指标函数	245
10.3.2  MFI指标函数	246
10.3.3  RSI指标函数	247
10.3.4  OSC指标函数	248
10.3.5  WR指标函数	249
10.3.6  CCI指标函数	250
10.4  压力支撑指标函数运用技巧	251
10.4.1  BOLL指标函数	251
10.4.2  MIKE指标函数	253
10.4.3  XS指标函数	254
10.5  量价指标函数运用技巧	256
10.5.1  OBV指标函数	256
10.5.2  VOL指标函数	257
10.5.3  VR指标函数	258
10.5.4  MASS指标函数	259
第11章  Python量化交易策略的回测方法与技巧	261
11.1  量化交易策略回测的流程	262
11.2  利用Python编写MACD指标量化交易策略	262
11.2.1  量化交易策略的编辑页面	262
11.2.2  编写初始化函数	265
11.2.3  编写单位时间调用的函数	265
11.3  设置MACD指标量化交易策略的回测参数	266
11.4  MACD指标量化交易策略的回测详情	269
11.5  MACD指标量化交易策略的风险指标	272
11.5.1  Alpha（阿尔法）	272
11.5.2  Beta（贝塔）	273
11.5.3  Sharpe（夏普比率）	274
11.5.4  Sortino（索提诺比率）	275
11.5.5  Information Ratio（信息比率）	276
11.5.6  Volatility（策略波动率）	277
11.5.7  Benchmark Volatility（基准波动率）	278
11.5.8  Max Drawdown（最大回撤）	279
第12章  Python量化交易策略的机器算法运用技巧	280
12.1  随机森林在量化交易中的运用技巧	281
12.1.1  随机森林的构建	281
12.1.2  随机森林的优缺点	281
12.1.3  随机森林在量化交易中的运用实例	282
12.2  支持向量机（SVM）在量化交易中的运用技巧	284
12.2.1  什么是支持向量机（SVM）	285
12.2.2  支持向量机（SVM）的工作原理	285
12.2.3  核函数	287
12.2.4  支持向量机（SVM）的优点	288
12.2.5  支持向量机（SVM）的缺点	288
12.2.6  支持向量机（SVM）在量化交易中的运用实例	289
12.3  朴素贝叶斯在量化交易中的运用技巧	292
12.3.1  什么是朴素贝叶斯	292
12.3.2  朴素贝叶斯的算法思想	292
12.3.3  朴素贝叶斯的算法步骤	292
12.3.4  朴素贝叶斯的优缺点	293
12.3.5  朴素贝叶斯在量化交易中的运用实例	293
12.4  神经网络在量化交易中的运用技巧	296
12.4.1  什么是人工神经网络	296
12.4.2  大脑中的神经元细胞和神经元细胞网络	297
12.4.3  人工神经网络的基本特征	298
12.4.4  人工神经网络的特点	299
12.4.5  人工神经网络的算法	299
12.4.6  人工神经网络在量化交易中的运用实例	301
第13章  Python量化交易策略的因子分析运用技巧	305
13.1  因子的类型及因子分析的作用	306
13.2  因子分析的Python代码	306
13.2.1  因子分析中的三个变量	306
13.2.2  因子分析中可以使用的基础因子	307
13.2.3  calc的参数及返回值	308
13.3  因子的新建及常见分析	308
13.3.1  因子的新建	308
13.3.2  因子的收益分析	311
13.3.3  因子的IC分析	314
13.3.4  因子的换手分析	315
13.4  因子在研究和回测中的使用	317
13.5  基本面因子运用实例	319
第14章  Python量化交易策略实战案例	323
14.1  MA均线量化交易策略实战案例	324
14.1.1  编写初始化函数	324
14.1.2  编写单位时间调用的函数	326
14.1.3  MA均线量化交易策略的回测	327
14.2  多均线量化交易策略实战案例	327
14.2.1  编写初始化函数	328
14.2.2  编写交易程序函数	328
14.2.3  多均线量化交易策略的回测	330
14.3  MACD指标量化交易策略实战案例	330
14.3.1  编写初始化函数	331
14.3.2  编写单位时间调用的函数	331
14.3.3  MACD指标量化交易策略的回测	332
14.4  KD指标量化交易策略实战案例	333
14.4.1  编写初始化函数	333
14.4.2  编写开盘前运行函数	334
14.4.3  编写开盘时运行函数	334
14.4.4  编写收盘后运行函数	335
14.4.5  KD指标量化交易策略的回测	335
14.5  BOLL指标量化交易策略实战案例	336
14.5.1  编写初始化函数	336
14.5.2  编写开盘前运行函数	337
14.5.3  编写开盘时运行函数	337
14.5.4  编写收盘后运行函数	338
14.5.5  BOLL指标量化交易策略的回测	339
14.6  多股票持仓量化交易策略实战案例	339
14.6.1  编写初始化函数	340
14.6.2  编写单位时间调用的函数	340
14.6.3  多股票持仓量化交易策略的回测	341
14.7  医药股轮动量化交易策略实战案例	342
14.7.1  编写初始化函数	342
14.7.2  编写选股函数	342
14.7.3  编写交易函数	343
14.7.4  医药股轮动量化交易策略的回测	343
14.8  小市值股票量化交易策略实战案例	344
14.8.1  编写初始化函数	344
14.8.2  编写选股函数	345
14.8.3  编写过滤停牌股票函数	345
14.8.4  编写交易函数	346
14.8.5  小市值股票量化交易策略的回测	346
14.9  机器算法多因子量化交易策略实战案例	347
14.9.1  编写初始化函数	347
14.9.2  编写自定义的交易函数	348
14.9.3  机器算法多因子量化交易策略的回测	353
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python量化交易：策略、技巧与实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>新・明解Python入門
第1章 Python をはじめよう!
第2章 具象クラスの作成
第3章 プログラムの流れの分岐
第4章 プログラムの流れの繰返し
第5章 オブジェクトと型
第6章 文字列
第7章 リスト
第8章 タプルと辞書と集合
第9章 関数
第10章 モジュール
第11章 クラス
第12章 外処理例
第13章 ファイル処理
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>新・明解Python入門
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>图解Python--轻松快速掌握实力派脚本语言精华
目录
在开始学习Python之前
Python的定义
Python的编译环境
Python的运行方法
编写程序时的一些规范
第1章 编程基础
第1章，这部分是关键
Hello World!
变量（1）
变量（2）
字符串（1）
字符串（2）
指定格式的输出（1）
指定格式的输出（2）
从键盘输入
COLUMN ～指定分隔符和行末符号～
第2章 运算符
第2章，这部分是关键
用于计算的运算符
比较运算符
逻辑运算符
运算的优先顺序
COLUMN ～复杂的逻辑运算～
第3章 列表
第3章，这部分是关键
列表（1）
列表（2）
列表的操作（1）
列表的操作（2）
列表的操作（3）
双精度浮点型
字典（1）
字典（2）
字典的操作（1）
字典的操作（2）
集合（组）
集合的运算（1）
集合的运算（2）
COLUMN ～列表的复制～
第4章 流程控制语句
第4章，这部分是关键
if的用法（1）
if的用法（2）
for的用法（1）
for的用法（2）
while的用法
循环中断
推导式（1）
推导式（2）
样本程序
COLUMN ～None～
第5章　函数
第5章，这部分是关键
函数的定义
函数的调用
参数的全局调用
函数的使用技巧
无名函数
变量范围
生成器（generator）
样本程序
COLUMN ～docstring～
第6章　字符串
第6章，这部分是关键
基本的字符串操作（1）
基本的字符串操作（2）
基本的字符串操作（3）
正则表达式
特殊字符（1）
特殊字符（2）
正则匹配（1）
正则匹配（2）
利用正则表达式替换和分割
模块
样本程序
COLUMN ～打包～
第7章　文件和例外处理
第7章，这部分是关键
文件对象
文件的读取
写入到文件
例外处理
样本程序
COLUMN ～命令行参数～
第8章　类和对象
第8章，这部分是关键
初识“类”
对象的创建
类的继承
方法重写
属性（1）
属性（2）
类方法
样本程序
COLUMN ～特殊的方法～
附录
与数学相关的函数
日期
数据分析
服务器端程序设计
网络爬虫
Python的安装
扩展包的安装
XAMPP的安装
索引
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>图解Python--轻松快速掌握实力派脚本语言精华
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Serverless架构应用开发：Python实现
第1章　Serverless范式　　1
1.1　了解Serverless架构　　1
1.2　了解微服务　　3
1.3　Serverless架构不仅仅是实时的　　3
1.4　Serverless的优缺点　　5
1.5　小结　　7
第2章　在AWS中构建Serverless应用程序　　8
2.1　AWS Lambda的触发器　　8
2.2　Lambda函数　　12
2.3　函数即容器　　13
2.4　配置函数　　14
2.5　测试Lambda函数　　21
2.6　Lambda函数的版本控制　　24
2.7　创建部署包　　27
2.8　小结　　31
第3章　设置Serverless架构　　32
3.1　S3触发器　　32
3.2　SNS触发器　　40
3.3　SQS触发器　　49
3.4　CloudWatch触发器　　56
3.5　小结　　61
第4章　部署Serverless API　　63
4.1　API方法与资源　　63
4.2　设置集成　　70
4.3　为API部署Lambda函数　　77
4.4　处理身份验证与用户控制　　82
4.5　小结　　87
第5章　日志与监控　　88
5.1　了解CloudWatch　　88
5.2　了解CloudTrail　　97
5.3　CloudWatch的Lambda指标　　103
5.4　CloudWatch的Lambda日志　　111
5.5　Lambda的日志语句　　114
5.6　小结　　117
第6章　扩展Serverless架构　　118
6.1　第三方编排工具　　118
6.2　服务器的创建和终止　　124
6.3　最佳安全实践　　130
6.4　扩展的难点及解决方案　　135
6.5　小结　　137
第7章　AWS Lambda的安全性　　138
7.1　了解AWS VPC　　138
7.2　了解VPC中的子网　　143
7.3　在私有子网内保护Lambda　　147
7.4　Lambda函数的访问控制　　150
7.5　在Lambda中使用STS执行安全会话　　150
7.6　小结　　150
第8章　使用SAM部署Lambda函数　　151
8.1　SAM简介　　151
8.2　将CloudFormation用于Serverless服务　　154
8.3　使用SAM进行部署　　155
8.4　了解SAM中的安全性　　162
8.5　小结　　166
第9章　微软Azure Functions简介　　167
9.1　微软Azure Functions简介　　167
9.2　创建你的第一个Azure Function　　169
9.3　了解触发器　　172
9.4　Azure Functions的日志记录和监控　　176
9.5　编写微软Azure Functions的最佳实践　　178
9.6　小结　　180
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Serverless架构应用开发：Python实现
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Selenium3自动化测试实战——基于Python语言
第 1章自动化测试基础 ................................................................................................. 1
1.1分层的自动化测试 ................................................................................................ 1
1.2适合自动化测试的项目 ........................................................................................ 3
1.3如何学习 UI自动化测试 ...................................................................................... 4
1.4  Selenium简介 ........................................................................................................ 4
1.5 appium简介 ........................................................................................................... 8
第 2章测试环境搭建 .................................................................................................. 10
2.1安装 Python .......................................................................................................... 10
2.2安装 Selenium ...................................................................................................... 12
2.3第一个 Selenium自动化测试脚本 ..................................................................... 12
2.4浏览器驱动 .......................................................................................................... 13
第 3章 Python基础..................................................................................................... 16
3.1  Python哲学 .......................................................................................................... 16
3.2输出 ...................................................................................................................... 18
3.2.1  打印 .......................................................................................................... 18
3.2.2  引号与注释 .............................................................................................. 19
3.3分支与循环 .......................................................................................................... 20
3.3.1  if语句 ....................................................................................................... 20
3.3.2  for语句 .................................................................................................... 21
3.4列表、元组与字典 .............................................................................................. 22
3.4.1  列表 .......................................................................................................... 22
3.4.2  元组 .......................................................................................................... 23
3.4.3  字典 .......................................................................................................... 24
3.5函数、类和方法 .................................................................................................. 25
3.5.1  函数 .......................................................................................................... 25
3.5.2  类和方法 .................................................................................................. 26
3.6模组 ...................................................................................................................... 27
3.6.1  调用模块 .................................................................................................. 27
3.6.2  自定义模块 .............................................................................................. 30
3.6.3  跨目录调用文件 ...................................................................................... 31
3.6.4  编写自测代码 .......................................................................................... 33
3.7异常 ...................................................................................................................... 34
3.7.1  认识异常 .................................................................................................. 34
3.7.2  更多异常用法 .......................................................................................... 37
3.7.3  抛出异常 .................................................................................................. 37
3.8新手常犯的错误 .................................................................................................. 38
第 4章  WebDriver API ................................................................................................ 40
4.1从定位元素开始 .................................................................................................. 40
4.1.1  id定位 ...................................................................................................... 44
4.1.2  name定位 ................................................................................................ 44
4.1.3  class定位 ................................................................................................. 44
4.1.4  tag定位 .................................................................................................... 44
4.1.5  link定位 ................................................................................................... 45
4.1.6 partial link定位 ........................................................................................ 45
4.1.7  XPath定位 ............................................................................................... 46
4.1.8  CSS定位 .................................................................................................. 48
4.1.9  用 By定位元素 ....................................................................................... 51
4.2控制浏览器 .......................................................................................................... 52
4.2.1  控制浏览器窗口大小 .............................................................................. 52
4.2.2  控制浏览器后退、前进 .......................................................................... 52
4.2.3  模拟浏览器刷新 ...................................................................................... 53
4.3  WebDriver中的常用方法 .................................................................................... 53
4.4鼠标操作 .............................................................................................................. 55
4.5键盘操作 .............................................................................................................. 57
4.6获得验证信息 ...................................................................................................... 58
4.7设置元素等待 ...................................................................................................... 59
4.7.1  显式等待 .................................................................................................. 60
4.7.2  隐式等待 .................................................................................................. 62
4.8定位一组元素 ...................................................................................................... 63
4.9多表单切换 .......................................................................................................... 64
4.10多窗口切换 ........................................................................................................ 65
4.11警告框处理 ........................................................................................................ 67
4.12下拉框处理 ........................................................................................................ 69
4.13上传文件 ............................................................................................................ 70
4.14下载文件 ............................................................................................................ 72
4.15操作 Cookie ........................................................................................................ 74
4.16调用 JavaScript ................................................................................................... 75
4.17处理 HTML5视频播放 ..................................................................................... 77
4.18滑动解锁 ............................................................................................................ 79
4.19窗口截图 ............................................................................................................ 82
4.20关闭窗口 ............................................................................................................ 83
第 5章自动化测试模型 ............................................................................................... 84
5.1基本概念 .............................................................................................................. 84
5.2自动化测试模型 .................................................................................................. 85
5.3模块化与参数化 .................................................................................................. 86
5.4读取数据文件 ...................................................................................................... 89
5.4.1  读取 txt文件 ............................................................................................ 89
5.4.2  读取 CSV文件 ........................................................................................ 91
5.4.3  读取 XML文件 ....................................................................................... 92
5.4.4  读取 JSON文件 ....................................................................................... 94
第 6章 unittest单元测试框架 ...................................................................................... 96
6.1认识 unittest.......................................................................................................... 97
6.1.1  认识单元测试 .......................................................................................... 97
6.1.2  重要的概念 ............................................................................................ 100
6.1.3  断言方法 ................................................................................................ 103
6.1.4  测试用例的组织与 discover方法 ......................................................... 104
6.2关于 unittest还需要知道的 ............................................................................... 108
6.2.1  测试用例的执行顺序 ............................................................................ 108
6.2.2  执行多级目录的测试用例 .................................................................... 110
6.2.3  跳过测试和预期失败 ............................................................................ 111
6.2.4 Fixtures ................................................................................................... 113
6.3编写 Web自动化测试 ....................................................................................... 114
第 7章 unittest扩展 ................................................................................................... 118
7.1  HTML测试报告 ................................................................................................ 118
7.1.1  下载与安装 ............................................................................................ 118
7.1.2  生成 HTML测试报告 ........................................................................... 119
7.1.3  更易读的测试报告 ................................................................................ 121
7.1.4  测试报告文件名 .................................................................................... 123
7.2数据驱动应用 .................................................................................................... 124
7.2.1  数据驱动 ................................................................................................ 125
7.2.2 Parameterized ......................................................................................... 128
7.2.3 DDT ........................................................................................................ 130
7.3自动发送邮件功能 ............................................................................................ 134
7.3.1  Python自带的发送邮件功能 ................................................................ 134
7.3.2  用 yagmail发送邮件 ............................................................................. 136
7.3.3  整合自动发送邮件功能 ........................................................................ 137
第 8章  Page Object .................................................................................................. 140
8.1认识 Page Object................................................................................................ 140
8.2实现 Paget Object ............................................................................................... 141
8.2.1  Paget Object简单实例 ........................................................................... 142
8.2.2  改进 Paget Object封装 .......................................................................... 143
8.3 poium测试库 ..................................................................................................... 146
8.3.1  基本使用 ................................................................................................ 147
8.3.2  更多用法 ................................................................................................ 148
第 9章  pytest单元测试框架 ...................................................................................... 150
9.1 pytest简单例子 .................................................................................................. 150
9.2 pytest的基本使用方法 ...................................................................................... 152
9.2.1  断言 ........................................................................................................ 152
9.2.2 Fixture .................................................................................................... 153
9.2.3  参数化 .................................................................................................... 157
9.2.4  运行测试 ................................................................................................ 158
9.2.5  生成测试报告 ........................................................................................ 160
9.2.6 conftest.py .............................................................................................. 162
9.3 pytest扩展 .......................................................................................................... 163
9.3.1 pytest-html.............................................................................................. 163
9.3.2 pytest-rerunfailures................................................................................. 164
9.3.3  pytest-parallel扩展 ................................................................................ 165
9.4构建 Web自动化测试项目 ............................................................................... 166
9.4.1  项目结构介绍 ........................................................................................ 166
9.4.2  主要代码实现 ........................................................................................ 168
9.4.3  测试用例的运行与测试报告 ................................................................ 173
第 10章 Selenium Grid ............................................................................................. 176
10.1  Selenium Grid 介绍 ......................................................................................... 176
10.1.1  Selenium Server环境配置 ................................................................... 176
10.1.2  Selenium Grid工作原理 ...................................................................... 178
10.2  Selenium Grid应用 .......................................................................................... 180
10.2.1  Remote实例 ......................................................................................... 181
10.2.2  Grid执行过程 ...................................................................................... 183
10.2.3  创建远程节点 ...................................................................................... 185
第 11章 Jenkins持续集成 ......................................................................................... 187
11.1下载 Tomcat...................................................................................................... 188
11.2下载 Jenkins ..................................................................................................... 189
11.3安装配置 Jenkins ............................................................................................. 190
11.4  Jenkins的基本使用.......................................................................................... 192
11.4.1  创建一个构建任务 .............................................................................. 192
11.4.2  运行 Python测试 ................................................................................. 195
11.4.3  安装插件 .............................................................................................. 196
11.5  Selenium自动化项目配置 .............................................................................. 197
11.5.1  配置 Git/GitHub ................................................................................... 197
11.5.2  配置项目运行 ...................................................................................... 200
11.5.3  配置 HTML报告 ................................................................................. 201
11.5.4  配置构建统计 ...................................................................................... 204
11.5.5  配置自动发送邮件 .............................................................................. 205
第 12章 appium的介绍与安装 .................................................................................. 210
12.1  appium介绍 ..................................................................................................... 210
12.1.1  移动应用类型 ...................................................................................... 210
12.1.2  appium的架构 ..................................................................................... 211
12.1.3  appium的工作过程 ............................................................................. 214
12.2  appium环境搭建 ............................................................................................. 215
12.2.1  Android Studio ..................................................................................... 216
12.2.2  Android模拟器 .................................................................................... 219
12.2.3  appium Desktop .................................................................................... 222
12.2.4  Python Client ........................................................................................ 223
12.2.5  第一个 appium测试 ............................................................................ 223
第 13章 appium基础 ................................................................................................ 226
13.1  Desired Capabilities.......................................................................................... 226
13.2  控件定位 .......................................................................................................... 228
13.2.1  id定位 .................................................................................................. 229
13.2.2  Class Name定位 .................................................................................. 230
13.2.3  XPath定位 ........................................................................................... 231
13.2.4  Accessibility id定位 ............................................................................ 232
13.2.5  Android uiautomator定位.................................................................... 233
13.2.6  其他定位 .............................................................................................. 234
13.3 appium的常用 API .......................................................................................... 235
13.3.1  应用操作 .............................................................................................. 235
13.3.2  上下文操作 .......................................................................................... 236
13.3.3  键盘操作 .............................................................................................. 238
13.3.4  触摸操作 .............................................................................................. 238
13.3.5  特有操作 .............................................................................................. 241
13.4  appium Desktop ................................................................................................ 243
13.4.1  准备工作 .............................................................................................. 243
13.4.2  控件定位 .............................................................................................. 245
13.4.3  脚本录制 .............................................................................................. 246
第 14章 appium测试实例 ......................................................................................... 249
14.1  appium应用测试 ............................................................................................. 249
14.1.1  原生应用测试 ...................................................................................... 249
14.1.2  移动 Web应用测试 ............................................................................. 250
14.1.3  混合应用测试 ...................................................................................... 252
14.2  App测试实战 .................................................................................................. 254
14.2.1  安装 App .............................................................................................. 254
14.2.2  简单的测试用例 .................................................................................. 255
14.2.3  自动化项目设计 .................................................................................. 256
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Selenium3自动化测试实战——基于Python语言
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>从AI模型到智能机器人：基于Python与TensorFlow
第 1 章 AI 与面向对象 Python  1
1.1 AI 思维简史  2
1.2 Python 语言与 AI  2
1.3 布置 Python 开发环境  3
1.4 开始编写 Python 程序  6
1.5  面向对象（Object-Oriented）入门  10
1.5.1  对象（Object）  10
1.5.2  消息（Message）  10
1.5.3  事件（Event）  10
1.6  软件中的对象（Object）  11
1.6.1  抽象的目的  11
1.6.2  抽象表示  12
1.6.3  数据和函数  12
1.6.4  历史的足迹  12
1.7  对象与变量（Variable）  13
1.7.1  数据类型  13
1.7.2  变量即对象  14
1.8  对象与函数（Function）  17
1.8.1  函数的角色  17
1.8.2  事件驱动观念  18
1.9  自然界的分类  19
1.9.1  分类与抽象  19
1.9.2  对象与类  19
1.9.3  类的体系  20
1.10  软件的分类  21
1.10.1  类是数据类型  21
1.10.2  类的用途：描述对象的属性与行为  22
第 2 章 Python 的对象与类  24
2.1 OOP 入门  25
2.2  对象的概念  25
2.3  对象分类与组合  27
2.3.1  类的永恒性  27
2.3.2  将对象分门别类  27
2.3.3  对象的组合关系  28
2.4 AKO 抽象关系  30
2.5  对象行为与接口  36
2.5.1  接口入门  36
2.5.2  消息传递与对象行为 37
2.5.3  对象的运算行为  38
第 3 章 善用类  46
3.1  如何描述对象：善用类  47
3.2  如何创建软件对象  48
3.3  对象参考  49
3.4  构造函数  52
3.5  子类如何创建对象  54
第 4 章 对象的组合  58
4.1  认识 self 参考  59
4.2  建立对象的包含关系  60
4.3  self 参考值的妙用  64
4.4  包容多样化物件  71
4.5  集合对象  73
第 5 章 类的封装性  76
5.1  对象的封装性  77
5.2  类：创造对象的封装性  77
5.3  类的私有属性与函数  81
5.4  类级别的属性  89
5.5  类级别的函数  93
第 6 章 类的继承体系  96
6.1  继承的意义  97
6.2  建立类继承体系  98
6.3  函数覆写的意义  108
第 7 章 活用抽象类  111
7.1  抽象类与继承体系  112
7.2 Python 抽象类的表示法  112
7.2.1  一般具象类  112
7.2.2  抽象类  114
7.3  从“抽象类”衍生“具象类”  115
7.4  抽象类的妙用：默认行为  118
7.4.1 Python 默认行为的表示法  118
7.4.2  默认行为的意义  120
7.5  默认函数的妙用：反向调用  120
第 8 章 发挥“多态性”  127
8.1 “多态性”的意义  128
8.1.1  自然界的多态性  128
8.1.2  多态性物体  129
8.2  多态函数  130
8.3  可覆写函数  132
第 9 章 如何设计抽象类  138
9.1  抽象：抽出共同的现象  139
9.2  抽象的步骤  141
9.2.1  Step 1: 抽出名称、引数及内容都一致的函数  147
9.2.2  Step 2: 抽出名称相同、参数及内容有差异的函数  149
9.3  洞悉“变”与“不变”  152
9.4  着手设计抽象类  154
第 10 章 接口与抽象类  160
10.1  接口的意义  161
10.2  以 Python 抽象类来实现接口  162
10.3  接口设计实例一：并联电池对象  167
10.3.1  不理解原理但也能用  167
10.3.2  实现步骤  169
10.4  接口设计实例二：串联电池对象  172
10.4.1  基本设计  172
10.4.2  实现步骤  173
10.4.3  总结  176
10.5 接口设计实例三：Chain Of Responsibility 设计模式  177
第 11 章 不插电学 AI  183
11.1 “不插电学 AI”的意义  184
11.2 AlphaGo 的惊人学习能力  184
11.3  范例：一只老鼠的探索及学习  184
11.4  记录老鼠的探索选择及结果  186
11.5 老鼠当教练：训练 AI 机器人  188
11.5.1  以简单算数，让机器人表达智能  188
11.5.2  机器人智能的提升过程  189
11.5.3  一回生、两回熟  191
11.5.4  三回变高手  192
11.5.5  第四回合训练：迈向完美  194
11.5.6  重新检测一次  195
第 12 章 撰写单层 Perceptron 程序  198
12.1 开始“插电学 AI”：使用 Python  199
12.2 展开第#0 组数据的训练 200
12.3  进行更多组数据的训练  202
12.4  加入学习率  206
12.5 增添一个 Training 类  209
12.6 一个更详细的 Perceptron 代码  213
第 13 章 使用 TensorFlow 编程  225
13.1 TensorFlow 入门  226
13.2 安装 TensorFlow 环境  226
13.3 开始使用 TensorFlow  230
13.4 展开第 1 回合的训练：以老鼠教练为例  237
13.5 展开100 回合更周全的训练  240
13.6 设计 Perceptron 类  243
13.7 采用 TensorFlow 的损失函数  245
13.8 撰写多层 Perceptron 程序  248
第 14 章 TensorFlow 应用范例 251
14.1 mnist 手写数字识别范例  252
14.2  开始训练 NN 模型  256
14.3 改进 NN 模型：建立两层 Perceptron  260
14.4 改进 NN 模型：建立三层 Perceptron  263
14.5 撰写一个 MLP 类  265
第 15 章 如何导出 AI 模型  268
15.1 导出模型入门  269
15.2  机器人：像老鼠一样学习  270
15.3 基于 TensorFlow 建立 AI 模型  270
15.4 存入 Checkpoint 文件  272
15.5 读取 Checkpoint 文件  275
15.6  读取流图定义文件  277
15.7 导出模型：写入.pb 文件  280
15.8 导入模型，读取.pb 文件  284
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>从AI模型到智能机器人：基于Python与TensorFlow
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>实战深度学习算法：零起点通关神经网络模型（基于Python和NumPy实现）
第 1章基础分类模型 1
1.1深度学习简介 ............................ 2
1.2目标问题：空间中的二分类 .................... 2
1.3感知机模型 ............................. 3
1.3.1感知机函数 ......................... 3
1.3.2损失函数 .......................... 4
1.3.3感知机学习算法 ....................... 6
1.4算法实现 .............................. 8
1.4.1环境搭建 .......................... 8
1.4.2数据准备 .......................... 9
1.4.3实现感知机算法 ....................... 11
1.5小结 ................................. 13参考文献 ................................. 13
第 2章第一个神经网络 14
2.1目标问题：MNIST手写数字识别 ................. 15
2.1.1数据集 ............................ 15
2.1.2图像数据和图向量 ..................... 16
2.2挑战：从二分类到多分类 ..................... 16
2.3 Softmax方法 ............................ 19
2.4正确分类的独热编码 ........................ 20
2.5损失函数——交叉熵 ........................ 21
2.6信息熵和交叉熵 ........................... 21
2.6.1信息熵 ............................ 21
2.6.2交叉熵 ............................ 22
2.7第一个神经网络的学习算法 .................... 23
2.8反向传播 .............................. 26
2.9抽象泄漏 .............................. 27
2.10算法实现 .............................. 28
2.10.1数据准备 .......................... 28
2.10.2实现第一个神经网络 .................... 33
2.10.3实现 MINIST手写数字识别 ................ 36
2.11小结 ................................. 37参考文献 ................................. 38
第 3章多层全连接神经网络 39
3.1第一个挑战：异或问题 ....................... 40
3.2更深的神经网络——隐藏层 .................... 40
3.3第二个挑战：参数拟合的两面性 .................. 42
3.4过拟合与正则化 ........................... 44
3.4.1欠拟合与过拟合 ....................... 44
3.4.2正则化 ............................ 44
3.4.3正则化的效果 ........................ 44
3.5第三个挑战：非线性可分问题 ................... 45
3.6激活函数 .............................. 45
3.7算法和结构 ............................. 47
3.8算法实现 .............................. 50
3.8.1数据准备 .......................... 50
3.8.2实现多层全连接神经网络 ................. 50
3.8.3在数据集上验证模型 .................... 53
3.9小结 ................................. 54参考文献 ................................. 54
第 4章卷积神经网络（CNN） 55
4.1挑战：参数量和训练成本 ..................... 56
4.2卷积神经网络的结构 ........................ 56
4.2.1卷积层 ............................ 57
4.2.2池化层 ............................ 62
4.2.3全连接层和 Softmax处理 ................. 63
4.3卷积神经网络学习算法 ....................... 63
4.3.1全连接层 .......................... 63
4.3.2池化层反向传播 ....................... 64
4.3.3卷积层反向传播 ....................... 65
4.4算法实现 .............................. 68
4.4.1数据准备 .......................... 68
4.4.2卷积神经网络模型的原始实现 ............... 69
4.5小结 ................................. 76参考文献 ................................. 78
第 5章卷积神经网络——算法提速和优化 79
5.1第一个挑战：卷积神经网络的运算效率 .............. 80
5.2提速改进 .............................. 80
5.2.1边缘填充提速 ........................ 82
5.2.2池化层提速 ......................... 83
5.2.3卷积层处理 ......................... 85
5.3反向传播算法实现 ......................... 88
5.3.1池化层反向传播 ....................... 88
5.3.2卷积层反向传播 ....................... 89
5.4第二个挑战：梯度下降的幅度和方向 ............... 91
5.5递减学习率参数 ........................... 92
5.6学习策略的优化方法 ........................ 92
5.6.1动量方法 .......................... 93
5.6.2 NAG方法 .......................... 93
5.6.3 Adagrad方法 ........................ 94
5.6.4 RMSprop方法 ....................... 95
5.6.5 AdaDelta方法 ....................... 96
5.6.6 Adam方法 ......................... 97
5.6.7各种优化方法的比较 .................... 98
目录
5.7总体模型结构 ............................ 100
5.8使用 CNN实现 MNIST手写数字识别验证 ........... 101
5.9小结 ................................. 102参考文献 ................................. 103
第 6章批量规范化（Batch Normalization） 104
6.1挑战：深度神经网络不易训练 ................... 105
6.2批量规范化方法的初衷 ....................... 105
6.2.1数据集偏移 ......................... 106
6.2.2输入分布偏移 ........................ 106
6.2.3内部偏移 .......................... 107
6.3批量规范化的算法 ......................... 107
6.3.1训练时的前向计算 ..................... 107
6.3.2规范化与标准化变量 .................... 108
6.3.3推理预测时的前向计算 ................... 109
6.3.4全连接层和卷积层的批量规范化处理 ........... 110
6.4批量规范化的效果 ......................... 111
6.4.1梯度传递问题 ........................ 111
6.4.2饱和非线性激活问题 .................... 112
6.4.3正则化效果 ......................... 113
6.5批量规范化为何有效 ........................ 113
6.6批量规范化的反向传播算法 .................... 114
6.7算法实现 .............................. 115
6.7.1训练时的前向传播 ..................... 116
6.7.2反向传播 .......................... 117
6.7.3推理预测 .......................... 118
6.8调整学习率和总体结构 ....................... 119
6.8.1模型结构 .......................... 119
6.8.2卷积层批量规范化的实现 ................. 120
6.8.3引入批量规范化后的递减学习率 .............. 121
6.9在 MNIST数据集上验证结果 ................... 122
6.10小结 ................................. 123
参考文献 ................................. 123
第 7章循环神经网络（Vanilla RNN） 125
7.1第一个挑战：序列特征的捕捉 ................... 126
7.2循环神经网络的结构 ........................ 126
7.2.1单层 RNN.......................... 126
7.2.2双向 RNN.......................... 128
7.2.3多层 RNN.......................... 129
7.3 RNN前向传播算法 ......................... 130
7.4 RNN反向传播算法 ......................... 131
7.4.1误差的反向传播 ....................... 131
7.4.2激活函数的导函数和参数梯度 ............... 132
7.5第二个挑战：循环神经网络的梯度传递问题 ........... 133
7.6梯度裁剪 .............................. 134
7.7算法实现 .............................. 135
7.8目标问题：序列数据分析 ..................... 139
7.8.1数据准备 .......................... 139
7.8.2模型搭建 .......................... 144
7.8.3验证结果 .......................... 145
7.9小结 ................................. 147参考文献 ................................. 147
第 8章长短时记忆网络（LSTM）——指数分析 149
8.1目标问题：投资市场的指数分析 .................. 150
8.2挑战：梯度弥散问题 ........................ 150
8.3长短时记忆网络的结构 ....................... 150
8.4 LSTM前向传播算法 ........................ 152
8.5 LSTM反向传播算法 ........................ 153
8.5.1误差反向传播 ........................ 154
8.5.2激活函数的导函数和参数梯度 ............... 155
8.6算法实现 .............................. 156
8.6.1实现 LSTM单时间步的前向计算 ............. 156
8.6.2实现 LSTM多层多时间步的前向计算 .......... 157
8.6.3实现 LSTM单时间步的反向传播 ............. 159
8.6.4实现 LSTM多层多时间步的反向传播 .......... 160
8.7实现沪深 300指数分析 ....................... 161
8.7.1数据准备 .......................... 162
8.7.2模型构建 .......................... 166
8.7.3分析结果 .......................... 167
8.8小结 ................................. 168参考文献 ................................. 169
第 9章双向门控循环单元（BiGRU）——情感分析 170
9.1目标问题：情感分析 ........................ 171
9.2第一个挑战：模型的运算效率 ................... 172
9.3 GRU模型的结构 .......................... 172
9.4 GRU前向传播算法 ......................... 173
9.5 GRU前向传播表达式的其他写法 ................. 174
9.6 GRU反向传播算法 ......................... 175
9.7 GRU算法实现 ........................... 177
9.7.1单时间步的前向计算 .................... 177
9.7.2实现单时间步的反向传播 ................. 178
9.8用 GRU模型进行情感分析 .................... 179
9.8.1数据预处理 ......................... 180
9.8.2构建情感分析模型 ..................... 181
9.9首次验证 .............................. 182
9.10第二个挑战：序列模型的过拟合 .................. 183
9.11 Dropout正则化 ........................... 183
9.11.1 Dropout前向传播算法 ................... 183
9.11.2 Dropout反向传播算法 ................... 184
9.11.3 Dropout Rate的选择 ................... 185
9.12再次验证：GRU+Dropout..................... 186
9.13第三个挑战：捕捉逆序信息 .................... 187
9.14双向门控循环单元（BiGRU） ................... 187
9.15第三次验证：BiGRU+Dropout .................. 188
9.16小结 ................................. 189
参考文献 ................................. 189
附录 A向量和矩阵运算 191
附录 B导数和微分 194
附录 C向量和矩阵导数 195
附录 D概率论和数理统计 201
索引 205
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>实战深度学习算法：零起点通关神经网络模型（基于Python和NumPy实现）
