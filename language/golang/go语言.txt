1	{"count":31,"start":0,"total":31,"books":[{"rating":{"max":10,"numRaters":540,"average":"7.1","min":0},"subtitle":"","author":["许式伟"],"pubdate":"2012-8","tags":[{"count":320,"name":"go语言","title":"go语言"},{"count":289,"name":"Go","title":"Go"},{"count":180,"name":"编程","title":"编程"},{"count":117,"name":"编程语言","title":"编程语言"},{"count":113,"name":"程序设计","title":"程序设计"},{"count":108,"name":"golang","title":"golang"},{"count":101,"name":"计算机","title":"计算机"},{"count":76,"name":"programming","title":"programming"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s11162016.jpg","binding":"平装","translator":[],"catalog":"序 为什么我们需要一门新的语言？\n第1章 初识Go语言\n1.1 Go语言简史\n1.2 语言特性\n1.3 “Hello, world!”\n1.4 编译环境\n1.5 开发工具\n1.6 工程管理\n1.7 问题追踪和调试\n1.8 如何寻求帮助\n本章小结\n第2章 顺序编程\n2.1 变量、常量和类型\n2.1.1 变量\n2.1.2 常量\n2.1.3 类型\n2.2 流程控制\n2.2.1 条件语句\n2.2.2 选择语句\n2.2.3 循环\n2.2.4 跳转语句\n2.3 函数\n2.3.1 函数调用\n2.3.2 不定参数\n2.3.3 多返回值\n2.3.4 匿名函数与闭包\n2.4 错误处理\n2.4.1 error接口\n2.4.2 defer\n2.4.3 panic和recover\n本章小结\n第3章 面向对象编程\n3.1 类型系统\n3.1.1 给类型添加方法\n3.1.2 值语义和引用语义\n3.2 结构体\n3.2.1 初始化\n3.2.2 匿名组合\n3.2.3 成员可访问性\n3.3 接口\n3.3.1 其他语言中的接口\n3.3.2 非侵入式接口\n3.3.3 接口赋值\n3.3.4 接口查询\n3.3.5 类型查询\n3.3.6 Any类型\n本章小结\n第4章 工程管理\n4.1 Go命令行工具\n4.2 代码风格\n4.3 工程组织\n4.4 单元测试\n4.5 文档管理\n4.6 工程构建\n4.7 包的管理与分发\n4.8 跨平台开发\n4.8.1 Go语言的跨平台能力\n4.8.2 交叉编译\n4.8.3 Android支持\n本章小结\n第5章 并发编程\n5.1 初识Goroutine\n5.1.1 基本用法\n5.1.2 Goroutine通信\n5.2 Channel\n5.2.1 基本用法\n5.2.2 关闭\n5.2.3 变量的传递\n5.2.4 单向Channel\n5.2.5 超时处理\n5.3 多核并行化\n5.4 同步机制\n5.4.1 sync包简介\n5.4.2 同步锁\n5.4.3 Once类型\n本章小结\n第6章 网络编程\n6.1 HTTP编程\n6.1.1 客户端编程\n6.1.2 开发HTTP服务器\n6.2 JSON\n6.2.1 JSON简介\n6.2.2 编码\n6.2.3 解码\n6.2.4 未知类型的解码\n6.2.5 流式读写\n6.3 网站开发\n6.3.1 一个最简单的网站\n6.3.2 开发一个相册网站\n6.3.2.1 新建工程\n6.3.2.2 实现网络服务\n6.3.2.3 网页模板渲染\n6.3.2.4 缓存\n6.3.2.5 错误处理\n6.3.2.6 防止程序崩溃\n6.3.2.7 资源分离\n6.3.2.8 重构\n6.4 更多资源\n本章小结\n第7章 进阶话题\n7.1 Go语言中的内存管理\n7.2 反射\n7.3 语言交互性CGO\n7.4 链接符号\n7.5 Goroutine实现机制\n7.6 接口的奥秘\n本章小结\n第8章 开发工具\n8.1 Go语言开发工具\n8.2 gEdit\n8.3 Goclipse - 使用Eclipse开发和调试Go程序\n8.4 VIM\n8.5 Nodepad++，Windows上的Go开发环境搭建\n8.6 GolangIDE\n本章小结\n附录 Go语言包参考","pages":"300","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s11162016.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s11162016.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s11162016.jpg"},"alt":"https:\/\/book.douban.com\/subject\/11577300\/","id":"11577300","publisher":"人民邮电出版社","isbn10":"7115290369","isbn13":"9787115290366","title":"Go语言编程","url":"https:\/\/api.douban.com\/v2\/book\/11577300","alt_title":"","author_intro":"许式伟\n七牛云存储CEO，曾任盛大创新院资深研究员、金山软件技术总监、WPS Office 2005首席架构师。开源爱好者，发布过包括WINX、TPL等十余个C++开源项目，拥有超过15年的C\/C++开发经验。在接触Go语言后即可被其大道至简、少即是多的设计哲学所倾倒。七牛云存储是国内第一个吃螃蟹的团队，核心服务完全采用Go语言实现。\n吕桂华\n七牛云存储联合创始人，曾在金山软件、盛大游戏等公司担任架构师和部门经理等职务，在企业级系统和大型网游平台领域有较多涉猎。拥有十余年的C\/C++大型项目开发经验，也曾在Java和.NET平台上探索多年。同样被Go语言的魅力所吸引而不可自拔，希望能为推广这门优秀的语言尽自己的绵薄之力。","summary":"这本书从整体的写作风格来说，会以介绍 Go 语言特性为主，示例则尽量采用作者平常的实践，而不是一个没有太大实际意义的语法示范样例。\n本书作者背景极强，许式伟为原金山WPS首席架构师、曾是盛大创新院研究员，目前是国内Go语言实践圈子公认的Go语言专家。参与本书写作的几位作者都是实际用Go语言开发的项目的开发人员，有较强的实战经验。\n本书以介绍Go语言特性为主，示例则尽量采用作者开发团队平常的实践，内容涉及内存管理（堆和栈）、错误处理、OOP、并发编程等关键话题。 这本书面向的读者是所有打算用Go语言的开发者，主要包括目前使用C、C++、Java、C#的开发人员，甚至一些Python、PHP开发人员也可能转为 Go 程序员。","series":{"id":"13000","title":"图灵原创"},"price":"49.00元"},{"rating":{"max":10,"numRaters":269,"average":"7.7","min":0},"subtitle":"","author":["威廉·肯尼迪 (William Kennedy)","布赖恩·克特森 (Brian Ketelsen)","埃里克·圣马丁 (Erik St.Martin)"],"pubdate":"2017-3-1","tags":[{"count":156,"name":"Go","title":"Go"},{"count":125,"name":"Golang","title":"Golang"},{"count":85,"name":"编程","title":"编程"},{"count":67,"name":"编程语言","title":"编程语言"},{"count":52,"name":"计算机","title":"计算机"},{"count":41,"name":"计算机科学","title":"计算机科学"},{"count":31,"name":"Programming","title":"Programming"},{"count":28,"name":"开发","title":"开发"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29421285.jpg","binding":"平装","translator":["李兆海"],"catalog":"第1章　关于Go语言的介绍　1\n1．1　用Go解决现代编程难题　2\n1．1．1　开发速度　2\n1．1．2　并发　3\n1．1．3　Go语言的类型系统　5\n1．1．4　内存管理　7\n1．2　你好，Go　7\n1．3　小结　8\n第2章　快速开始一个Go程序　9\n2．1　程序架构　9\n2．2　main包　11\n2．3　search包　13\n2．3．1　search．go　13\n2．3．2　feed．go　21\n2．3．3　match．go default．go　24\n2．4　RSS匹配器　30\n2．5　小结　36\n第3章　打包和工具链　37\n3．1　包　37\n3．1．1　包名惯例　38\n3．1．2　main包　38\n3．2　导入　39\n3．2．1　远程导入　40\n3．2．2　命名导入　40\n3．3　函数init　41\n3．4　使用Go的工具　42\n3．5　进一步介绍Go开发工具　44\n3．5．1　go vet　44\n3．5．2　Go代码格式化　45\n3．5．3　Go语言的文档　45\n3．6　与其他Go开发者合作　48\n3．7　依赖管理　48\n3．7．1　第三方依赖　49\n3．7．2　对gb的介绍　50\n3．8　小结　52\n第4章　数组、切片和映射　53\n4．1　数组的内部实现和基础功能　53\n4．1．1　内部实现　53\n4．1．2　声明和初始化　54\n4．1．3　使用数组　55\n4．1．4　多维数组　58\n4．1．5　在函数间传递数组　59\n4．2　切片的内部实现和基础功能　60\n4．2．1　内部实现　60\n4．2．2　创建和初始化　61\n4．2．3　使用切片　63\n4．2．4　多维切片　74\n4．2．5　在函数间传递切片　75\n4．3　映射的内部实现和基础功能　76\n4．3．1　内部实现　76\n4．3．2　创建和初始化　78\n4．3．3　使用映射　79\n4．3．4　在函数间传递映射　81\n4．4　小结　82\n第5章　Go语言的类型系统　83\n5．1　用户定义的类型　83\n5．2　方法　87\n5．3　类型的本质　90\n5．3．1　内置类型　91\n5．3．2　引用类型　91\n5．3．3　结构类型　93\n5．4　接口　95\n5．4．1　标准库　96\n5．4．2　实现　98\n5．4．3　方法集　99\n5．4．4　多态　103\n5．5　嵌入类型　105\n5．6　公开或未公开的标识符　113\n5．7　小结　121\n第6章　并发　122\n6．1　并发与并行　122\n6．2　goroutine　125\n6．3　竞争状态　132\n6．4　锁住共享资源　135\n6．4．1　原子函数　135\n6．4．2　互斥锁　138\n6．5　通道　140\n6．5．1　无缓冲的通道　141\n6．5．2　有缓冲的通道　146\n6．6　小结　149\n第7章　并发模式　150\n7．1　runner　150\n7．2　pool　158\n7．3　work　168\n7．4　小结　174\n第8章　标准库　176\n8．1　文档与源代码　177\n8．2　记录日志　178\n8．2．1　log包　179\n8．2．2　定制的日志记录器　182\n8．2．3　结论　186\n8．3　编码 解码　187\n8．3．1　解码JSON　187\n8．3．2　编码JSON　192\n8．3．3　结论　193\n8．4　输入和输出　193\n8．4．1　Writer和Reader接口　194\n8．4．2　整合并完成工作　195\n8．4．3　简单的curl　199\n8．4．4　结论　200\n8．5　小结　200\n第9章　测试和性能　201\n9．1　单元测试　201\n9．1．1　基础单元测试　202\n9．1．2　表组测试　205\n9．1．3　模仿调用　208\n9．1．4　测试服务端点　212\n9．2　示例　217\n9．3　基准测试　220\n9．4　小结　224","pages":"224","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s29421285.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s29421285.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29421285.jpg"},"alt":"https:\/\/book.douban.com\/subject\/27015617\/","id":"27015617","publisher":"人民邮电出版社","isbn10":"7115445354","isbn13":"9787115445353","title":"Go语言实战","url":"https:\/\/api.douban.com\/v2\/book\/27015617","alt_title":"","author_intro":"William Kennedy，是一位熟练的软件开发者，也是博客GoingGo.Net的作者。\nBrian Ketelsen和Erik St. Martin是全球Go语言大会GopherCon的组织者，也是Go语言框架Skynet的联合作者。\n李兆海，多年专注于后端分布式网络服务开发，曾使用过多个流行后端技术和相关架构实践，是Go语言和Docker的早期使用者和推广者，《第1本Docker书》的译者。作为项目技术负责人，成功开发了百万用户级直播系统。","summary":"Go语言结合了底层系统语言的能力以及现代语言的高级特性，旨在降低构建简单、可靠、高效软件的门槛。本书向读者提供一个专注、全面且符合语言习惯的视角。Go语言实战同时关注语言的规范和实现，涉及的内容包括语法、类型系统、并发、管道、测试，以及其他一些主题。","price":"CNY 59.00"},{"rating":{"max":10,"numRaters":187,"average":"8.1","min":0},"subtitle":"","author":["雨痕"],"pubdate":"2016-6","tags":[{"count":222,"name":"Go","title":"Go"},{"count":146,"name":"Golang","title":"Golang"},{"count":95,"name":"编程","title":"编程"},{"count":76,"name":"计算机","title":"计算机"},{"count":64,"name":"编程语言","title":"编程语言"},{"count":56,"name":"程序设计","title":"程序设计"},{"count":42,"name":"程序设计语言","title":"程序设计语言"},{"count":28,"name":"programming","title":"programming"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s28878681.jpg","binding":"平装","translator":[],"catalog":"上卷 语言详解\n第1 章 概述 ................................................................................................................. 3\n1.1 特征 ......................................................................................................................... 3\n1.2 简介 ......................................................................................................................... 6\n第2 章 类型 ............................................................................................................... 18\n2.1 变量 ....................................................................................................................... 18\n2.2 命名 ....................................................................................................................... 22\n2.3 常量 ....................................................................................................................... 24\n2.4 基本类型 ............................................................................................................... 28\n2.5 引用类型 ............................................................................................................... 31\n2.6 类型转换 ............................................................................................................... 33\n2.7 自定义类型 ........................................................................................................... 34\n第3 章 表达式 ........................................................................................................... 38\n3.1 保留字 ................................................................................................................... 38\n3.2 运算符 ................................................................................................................... 38\n3.3 初始化 ................................................................................................................... 44\n3.4 流控制 ................................................................................................................... 45\n第4 章 函数 ............................................................................................................... 59\n4.1 定义 ....................................................................................................................... 59\n4.2 参数 ....................................................................................................................... 63\n4.3 返回值 ................................................................................................................... 67\n4.4 匿名函数 ............................................................................................................... 69\n4.5 延迟调用 ............................................................................................................... 76\n4.6 错误处理 ............................................................................................................... 80\n第5 章 数据 ............................................................................................................... 86\n5.1 字符串 ................................................................................................................... 86\n5.2 数组 ....................................................................................................................... 95\n5.3 切片 ..................................................................................................................... 100\n5.4 字典 ..................................................................................................................... 110\n5.5 结构 ..................................................................................................................... 118\n第6 章 方法 ............................................................................................................. 130\n6.1 定义 ..................................................................................................................... 130\n6.2 匿名字段 ............................................................................................................. 133\n6.3 方法集 ................................................................................................................. 134\n6.4 表达式 ................................................................................................................. 136\n第7 章 接口 ............................................................................................................. 141\n7.1 定义 ..................................................................................................................... 141\n7.2 执行机制 ............................................................................................................. 145\n7.3 类型转换 ............................................................................................................. 150\n7.4 技巧 ..................................................................................................................... 151\n第8 章 并发 ............................................................................................................. 153\n8.1 并发的含义 ......................................................................................................... 153\n8.2 通道 ..................................................................................................................... 163\n8.3 同步 ..................................................................................................................... 183\n第9 章 包结构 ......................................................................................................... 187\n9.1 工作空间 ............................................................................................................. 187\n9.2 导入包 ................................................................................................................. 188\n9.3 组织结构 ............................................................................................................. 192\n9.4 依赖管理 ............................................................................................................. 197\n第10 章 反射 ........................................................................................................... 200\n10.1 类型 ................................................................................................................... 200\n10.2 值 ....................................................................................................................... 207\n10.3 方法 ................................................................................................................... 210\n10.4 构建 ................................................................................................................... 212\n10.5 性能 ................................................................................................................... 213\n第11 章 测试 ........................................................................................................... 216\n11.1 单元测试 ........................................................................................................... 216\n11.2 性能测试 ........................................................................................................... 221\n11.3 代码覆盖率 ....................................................................................................... 224\n11.4 性能监控 ........................................................................................................... 226\n第12 章 工具链 ........................................................................................................ 229\n12.1 安装 ................................................................................................................... 229\n12.2 工具 ................................................................................................................... 231\n12.3 编译 ................................................................................................................... 234\n下卷 源码剖析\n第13 章 准备 ............................................................................................................ 243\n第14 章 引导 ............................................................................................................ 244\n第15 章 初始化 ........................................................................................................ 247\n第16 章 内存分配 ..................................................................................................... 255\n16.1 概述 ................................................................................................................... 255\n16.2 初始化 ............................................................................................................... 259\n16.3 分配 ................................................................................................................... 265\n16.4 回收 ................................................................................................................... 279\n16.5 释放 ................................................................................................................... 283\n16.6 其他 ................................................................................................................... 285\n第17 章 垃圾回收 ...................................................................................................... 291\n17.1 概述 ................................................................................................................... 291\n17.2 初始化 ............................................................................................................... 293\n17.3 启动 ................................................................................................................... 294\n17.4 标记 ................................................................................................................... 300\n17.5 清理 ................................................................................................................... 311\n17.6 监控 ................................................................................................................... 314\n17.7 其他 ................................................................................................................... 317\n第18 章 并发调度 ...................................................................................................... 326\n18.1 概述 ................................................................................................................... 326\n18.2 初始化 ............................................................................................................... 327\n18.3 任务 ................................................................................................................... 332\n18.4 线程 ................................................................................................................... 344\n18.5 执行 ................................................................................................................... 353\n18.6 连续栈 ............................................................................................................... 370\n18.7 系统调用 ........................................................................................................... 385\n18.8 监控 ................................................................................................................... 390\n18.9 其他 ................................................................................................................... 396\n第19 章 通道 ............................................................................................................. 407\n19.1 创建 ................................................................................................................... 407\n19.2 收发 ................................................................................................................... 408\n19.3 选择 ................................................................................................................... 418\n第20 章 延迟 ............................................................................................................. 427\n20.1 定义 ................................................................................................................... 427\n20.2 性能 ................................................................................................................... 433\n20.3 错误 ................................................................................................................... 434\n第21 章 析构 ............................................................................................................. 438\n21.1 设置 ................................................................................................................... 438\n21.2 清理 ................................................................................................................... 443\n21.3 执行 ................................................................................................................... 445\n第22 章 缓存池 ......................................................................................................... 450\n22.1 初始化 ............................................................................................................... 450\n22.2 操作 ................................................................................................................... 453\n22.3 清理 ................................................................................................................... 455","ebook_url":"https:\/\/read.douban.com\/ebook\/35728636\/","pages":"468","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s28878681.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s28878681.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s28878681.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26832468\/","id":"26832468","publisher":"电子工业出版社","isbn10":"7121291606","isbn13":"9787121291609","title":"Go语言学习笔记","url":"https:\/\/api.douban.com\/v2\/book\/26832468","alt_title":"","author_intro":"自 1996 年从事计算机软件开发工作以来，已 20 春秋。期间供职于北大方正、西单电子商务、九城数码、知乎等公司。主要从事核心开发、架构设计，以及部分管理工作。","summary":"作为时下流行的一种系统编程语言，Go 简单易学，性能很好，且支持各类主流平台。已有大量项目采用 Go 编写，这其中就包括 Docker 等明星作品，其开发和执行效率早已被证明。本书经四年多逐步完善，内容覆盖了语言、运行时、性能优化、工具链等各层面知识。且内容经大量读者反馈和校对，没有明显的缺陷和错误。上卷细致解析了语言规范相关细节，便于读者深入理解语言相关功能的使用方法和注意事项。下卷则对运行时源码做出深度剖析，引导读者透彻了解语言功能背后的支持环境和运行体系，诸如内存分配、垃圾回收和并发调度等。本书不适合编程初学入门，可供有实际编程经验或正在使用Go 工作的人群参考。","ebook_price":"44.50","price":"89"},{"rating":{"max":10,"numRaters":53,"average":"8.8","min":0},"subtitle":"","author":["柴树杉","曹春晖"],"pubdate":"2019-7-9","tags":[{"count":80,"name":"Go","title":"Go"},{"count":43,"name":"Go语言","title":"Go语言"},{"count":27,"name":"计算机","title":"计算机"},{"count":24,"name":"编程","title":"编程"},{"count":21,"name":"编程语言","title":"编程语言"},{"count":14,"name":"软件开发","title":"软件开发"},{"count":11,"name":"programming","title":"programming"},{"count":11,"name":"go语言进阶","title":"go语言进阶"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s33305844.jpg","binding":"平装","translator":[],"catalog":"第1章 语言基础\n1.1 Go语言创世纪\n1.2 Hello, World 的革命\n1.3 数组、字符串和切片\n1.4 函数、方法和接口\n1.5 面向并发的内存模型\n1.6 常见的并发模式\n1.7 错误和异常\n1.8 补充说明\n第2章 CGO编程\n2.1 快速入门\n2.2 CGO基础\n2.3 类型转换\n2.4 函数调用\n2.5 内部机制\n2.6 实战: 封装qsort\n2.7 CGO内存模型\n2.8 C++类包装\n2.9 静态库和动态库\n2.10 编译和链接参数\n2.11 补充说明\n第3章 汇编语言\n3.1 快速入门\n3.2 计算机结构\n3.3 常量和全局变量\n3.4 函数\n3.5 控制流\n3.6 再论函数\n3.7 汇编语言的威力\n3.8 例子：Goroutine ID\n3.9 Delve调试器\n3.10 补充说明\n第4章 RPC和Protobuf\n4.1 RPC入门\n4.2 Protobuf\n4.3 玩转RPC\n4.4 gRPC入门\n4.5 gRPC进阶\n4.6 gRPC和Protobuf扩展\n4.7 pbgo: 基于Protobuf的框架\n4.8 grpcurl工具\n4.9 补充说明\n第5章 Go和Web\n5.1 Web开发简介\n5.2 请求路由\n5.3 中间件\n5.4 请求校验\n5.5 和数据库打交道\n5.6 服务流量限制\n5.7 大型Web项目分层\n5.8 接口和表驱动开发\n5.9 灰度发布和A\/B测试\n5.10 补充说明\n第6章 分布式系统\n6.1 分布式 id 生成器\n6.2 分布式锁\n6.3 延时任务系统\n6.4 分布式搜索引擎\n6.5 负载均衡\n6.6 分布式配置管理\n6.7 分布式爬虫\n6.8 补充说明\n附录\n附录A: Go语言常见坑\n附录B: 有趣的代码片段","pages":"366","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s33305844.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s33305844.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s33305844.jpg"},"alt":"https:\/\/book.douban.com\/subject\/34442131\/","id":"34442131","publisher":"人民邮电出版社","isbn10":"7115510369","isbn13":"9787115510365","title":"Go语言高级编程","url":"https:\/\/api.douban.com\/v2\/book\/34442131","alt_title":"","author_intro":"柴树杉\n国内第一批的Go语言爱好者，Go语言代码贡献者，CGO资深用户。同时对WebAssembly技术有一定研究，著有《WebAssembly标准入门》。Github账号为chai2010。\n曹春晖\n在Web领域工作多年，开源爱好者。对大型网站系统的架构和相关工具的实现很感兴趣，并且有一些研究成果。目前在滴滴平台技术部工作。","summary":"本书从实践出发讲解Go语言编程的进阶知识。本书共6章，第1章简单回顾Go语言的发展历史；第2章和第3章系统介绍CGO编程和Go汇编语言的用法；第4章对RPC和Protobuf技术进行深入介绍，并讲述如何打造一个自己的RPC系统；第5章介绍工业级环境的Web系统的设计和相关技术；第6章介绍Go语言在分布式领域的一些编程技术。","price":"89"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["内森·扬曼","罗杰·佩珀"],"pubdate":"2020-2","tags":[{"count":3,"name":"Go","title":"Go"},{"count":1,"name":"计算机","title":"计算机"},{"count":1,"name":"编程语言","title":"编程语言"},{"count":1,"name":"程序设计","title":"程序设计"},{"count":1,"name":"入门","title":"入门"}],"origin_title":"Get Programming with Go","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s33562113.jpg","binding":"平装","translator":["黄健宏"],"catalog":"版权\n版权声明\n内容提要\n译者序\n前言\n致谢\n关于本书\n关于作者\n资源与支持\n第0单元　入门\n第1章　各就各位，预备，Go！\n1.1　什么是Go\n1.2　Go Playground\n1.3　包和函数\n1.4　唯一允许的大括号放置风格\n1.5　小结\n第1单元　命令式编程\n第2章　被美化的计算器\n2.1　执行计算\n2.2　格式化输出\n2.3　常量和变量\n2.4　走捷径\n2.4.1　一次声明多个变量\n2.4.2　增量并赋值操作符\n2.5　数字游戏\n2.6　小结\n第3章　循环和分支\n3.1　真或假\n3.2　比较\n3.3　使用if实现分支判断\n3.4　逻辑运算符\n3.5　使用switch实现分支判断\n3.6　使用循环实现重复执行\n3.7　小结\n第4章　变量作用域\n4.1　审视作用域\n4.2　简短声明\n4.3　作用域的范围\n4.4 小结\n第5章　单元实验：前往火星的航行票\n第2单元　类型\n第6章　实数\n6.1　声明浮点类型变量\n6.1.1　单精度浮点数\n6.1.2　零值\n6.2　打印浮点类型\n6.3　浮点精确性\n6.4　比较浮点数\n6.5　小结\n第7章　整数\n7.1　声明整数类型变量\n7.1.1　为不同场合而设的整数类型\n7.1.2　了解类型\n7.2　为8位颜色使用uint8类型\n7.3　整数回绕\n7.3.1　聚焦二进制位\n7.3.2　避免时间回绕\n7.4　小结\n第8章　大数\n8.1　击中天花板\n8.2　big包\n8.3　大小非同寻常的常量\n8.4　小结\n第9章　多语言文本\n9.1　声明字符串变量\n9.2　字符、代码点、符文和字节\n9.3　拉弦\n9.4　使用凯撒加密法处理字符\n9.5　将字符串解码为符文\n9.6　小结\n第10章　类型转换\n10.1　类型不能混合使用\n10.2　数字类型转换\n10.3　类型转换的危险之处\n10.4　字符串转换\n10.5　转换布尔值\n10.6　小结\n第11章　单元实验：维吉尼亚加密法\n第3单元　构建块\n第12章　函数\n12.1　函数声明\n12.2　编写函数\n12.3　小结\n第13章　方法\n13.1　声明新类型\n13.2　引入自定义类型\n13.3　通过方法为类型添加行为\n13.4　小结\n第14章　一等函数\n14.1　将函数赋值给变量\n14.2　将函数传递给其他函数\n14.3　声明函数类型\n14.4　闭包和匿名函数\n14.5　小结\n第15章　单元实验：温度表\n第4单元　收集器\n第16章　劳苦功高的数组\n16.1　声明数组并访问其元素\n16.2　小心越界\n16.3　使用复合字面量初始化数组\n16.4　迭代数组\n16.5　数组被复制\n16.6　由数组组成的数组\n16.7　小结\n第17章　切片：指向数组的窗口\n17.1　切分数组\n17.2　切片的复合字面量\n17.3　切片的威力\n17.4　带有方法的切片\n17.5　小结\n第18章　更大的切片\n18.1　append函数\n18.2　长度和容量\n18.3　详解append函数\n18.4　三索引切分操作\n18.5　使用make函数对切片实行预分配\n18.6　声明可变参数函数\n18.7　小结\n第19章　无所不能的映射\n19.1　声明映射\n19.2　映射不会被复制\n19.3　使用make函数对映射实行预分配\n19.4　使用映射进行计数\n19.5　使用映射和切片实现数据分组\n19.6　将映射用作集合\n19.7　小结\n第20章　单元实验：切片人生\n20.1　开天辟地\n20.1.1　观察世界\n20.1.2　激活细胞\n20.2　适者生存\n20.2.1　存活还是死亡\n20.2.2　统计邻近细胞\n20.2.3　游戏逻辑\n20.3　平行世界\n第5单元　状态与行为\n第21章　结构\n21.1　声明结构\n21.2　通过类型复用结构\n21.3　通过复合字面量初始化结构\n21.4　结构被复制\n21.5　由结构组成的切片\n21.6　将结构编码为JSON\n21.7　使用结构标签定制JSON\n21.8　小结\n第22章　Go没有类\n22.1　将方法绑定到结构\n22.2　构造函数\n22.3　类的替代品\n22.4　小结\n第23章　组合与转发\n23.1　合并结构\n23.2　实现自动的转发方法\n23.3　命名冲突\n23.4　小结\n第24章　接口\n24.1　接口类型\n24.2　探索接口\n24.3　满足接口\n24.4　小结\n第25章　单元实验：火星上的动物避难所\n第6单元　深入Go语言\n第26章　关于指针的二三事\n26.1　&和*\n26.2　指针的作用就是指向\n26.2.1　指向结构的指针\n26.2.2　指向数组的指针\n26.3　实现修改\n26.3.1　将指针用作形参\n26.3.2　指针接收者\n26.3.3　内部指针\n26.3.4　修改数组\n26.4　隐式指针\n26.4.1　映射也是指针\n26.4.2　切片指向数组\n26.5　指针和接口\n26.6　明智地使用指针\n26.7　小结\n第27章　关于nil的纷纷扰扰\n27.1　通向惊恐的nil指针\n27.2　保护你的方法\n27.3　nil函数值\n27.4　nil切片\n27.5　nil映射\n27.6　nil接口\n27.7　nil之外的另一个选择\n27.8　小结\n第28章　孰能无过\n28.1　处理错误\n28.2　优雅的错误处理\n28.2.1　文件写入\n28.2.2　关键字defer\n28.2.3　创造性的错误处理\n28.3　新的错误\n28.3.1　按需返回错误\n28.3.2　自定义错误类型\n28.4　不要惊恐\n28.4.1　其他语言中的异常\n28.4.2　如何引发惊恐\n28.4.3　处理惊恐\n28.5　小结\n第29章　单元实验：数独规则\n第7单元　并发编程\n第30章　goroutine和并发\n30.1　启动goroutine\n30.2　不止一个goroutine\n30.3　通道\n30.4　使用select处理多个通道\n30.5　阻塞和死锁\n30.6　地鼠装配线\n30.7　小结\n第31章　并发状态\n31.1　互斥锁\n互斥锁的隐患\n31.2　长时间运行的工作进程\n31.3　小结\n第32章　单元实验：寻找火星生命\n32.1　可供活动的网格\n32.2　报告发现\n结语：何去何从\n未覆盖内容\n告别Go Playground\n还有更多\n习题答案","pages":"","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s33562113.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s33562113.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s33562113.jpg"},"alt":"https:\/\/book.douban.com\/subject\/34951096\/","id":"34951096","publisher":"人民邮电出版社","isbn10":"7115531420","isbn13":"9787115531421","title":"Go语言趣学指南","url":"https:\/\/api.douban.com\/v2\/book\/34951096","alt_title":"Get Programming with Go","author_intro":"内森·扬曼（Nathan Youngman）既是一位自学成才的网络开发者，也是一位终生学习概念的践行者。他是加拿大埃德蒙顿市Go聚会（meetup）的组织者，Canada Learning Code的辅导教师以及狂热的地鼠玩偶摄影爱好者。\n罗杰·佩珀（Roger Peppé）是一位Go贡献者，他维护着一系列开源Go项目，运营着英国纽卡斯尔市的Go聚会，并且当前正在负责Go云端基础设施软件的相关工作。\n黄健宏（huangz）是一位 IT 技术图书作译者。 他著有《Redis使用手册》和《Redis设计与实现》，译有《Go Web 编程》和《Redis实战》。 关于他的更多信息请访问 huangz.me 。","summary":"《Go语言趣学指南》是一本面向Go语言初学者的书，书中循序渐进地介绍了使用Go语言必需知道的知识，展示了非常多生动有趣的例子，并通过提供大量练习来加深读者对书中所述内容的理解。本书共分7个单元，分别介绍了变量、常量、分支和循环等基础语句，整数、浮点数和字符串等常用类型， 类型、函数和方法，数组、切片和映射，结构和接口，指针、nil和错误处理方法，并发和状态保护，并且每个单元都包含相应的大章和单元测试。\n本书在异步社区的主页：https:\/\/www.epubit.com\/bookDetails?id=UBb60129159591\n译者制作的书本主页：http:\/\/gpwgcn.com\/","price":"69"},{"rating":{"max":10,"numRaters":245,"average":"8.8","min":0},"subtitle":"","author":["艾伦 A. A. 多诺万"],"pubdate":"2017-5","tags":[{"count":174,"name":"Go语言","title":"Go语言"},{"count":123,"name":"Go","title":"Go"},{"count":83,"name":"编程","title":"编程"},{"count":81,"name":"计算机","title":"计算机"},{"count":66,"name":"golang","title":"golang"},{"count":65,"name":"计算机科学","title":"计算机科学"},{"count":63,"name":"Golang","title":"Golang"},{"count":54,"name":"go语言","title":"go语言"}],"origin_title":"The Go Programming Language","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29458403.jpg","binding":"","translator":["李道兵","高博","庞向才","金鑫鑫","林齐斌"],"catalog":"出版者的话\n译者序\n前言\n第1章 入门 1\n1.1 hello，world 1\n1.2 命令行参数 3\n1.3 找出重复行 6\n1.4 GIF动画 10\n1.5 获取一个URL 12\n1.6 并发获取多个URL 13\n1.7 一个Web服务器 14\n1.8 其他内容 17\n第2章 程序结构 20\n2.1 名称 20\n2.2 声明 21\n2.3 变量 22\n2.3.1 短变量声明 22\n2.3.2 指针 23\n2.3.3 new函数 25\n2.3.4 变量的生命周期 26\n2.4 赋值 27\n2.4.1 多重赋值 27\n2.4.2 可赋值性 28\n2.5 类型声明 29\n2.6 包和文件 30\n2.6.1 导入 31\n2.6.2 包初始化 33\n2.7 作用域 34\n第3章 基本数据 38\n3.1 整数 38\n3.2 浮点数 42\n3.3 复数 45\n3.4 布尔值 47\n3.5 字符串 47\n3.5.1 字符串字面量 49\n3.5.2 Unicode 49\n3.5.3 UTF-8 50\n3.5.4 字符串和字节slice 53\n3.5.5 字符串和数字的相互转换 56\n3.6 常量 56\n3.6.1 常量生成器iota 57\n3.6.2 无类型常量 59\n第4章 复合数据类型 61\n4.1 数组 61\n4.2 slice 63\n4.2.1 append函数 66\n4.2.2 slice就地修改 69\n4.3 map 71\n4.4 结构体 76\n4.4.1 结构体字面量 78\n4.4.2 结构体比较 80\n4.4.3 结构体嵌套和匿名成员 80\n4.5 JSON 82\n4.6 文本和HTML模板 87\n第5章 函数 92\n5.1 函数声明 92\n5.2 递归 93\n5.3 多返回值 96\n5.4 错误 98\n5.4.1 错误处理策略 99\n5.4.2 文件结束标识 101\n5.5 函数变量 102\n5.6 匿名函数 104\n5.7 变长函数 110\n5.8 延迟函数调用 111\n5.9 宕机 115\n5.10 恢复 118\n第6章 方法 120\n6.1 方法声明 120\n6.2 指针接收者的方法 122\n6.3 通过结构体内嵌组成类型 124\n6.4 方法变量与表达式 127\n6.5 示例：位向量 128\n6.6 封装 130\n第7章 接口 133\n7.1 接口即约定 133\n7.2 接口类型 135\n7.3 实现接口 136\n7.4 使用flag.Value来解析参数 139\n7.5 接口值 141\n7.6 使用sort.Interface来排序 144\n7.7 http.Handler接口 148\n7.8 error接口 152\n7.9 示例：表达式求值器 154\n7.10 类型断言 160\n7.11 使用类型断言来识别错误 161\n7.12 通过接口类型断言来查询特性 162\n7.13 类型分支 164\n7.14 示例：基于标记的XML解析 166\n7.15 一些建议 168\n第8章 goroutine和通道 170\n8.1 goroutine 170\n8.2 示例：并发时钟服务器 171\n8.3 示例：并发回声服务器 174\n8.4 通道 176\n8.4.1 无缓冲通道 177\n8.4.2 管道 178\n8.4.3 单向通道类型 180\n8.4.4 缓冲通道 181\n8.5 并行循环 183\n8.6 示例：并发的Web爬虫 187\n8.7 使用select多路复用 190\n8.8 示例：并发目录遍历 192\n8.9 取消 195\n8.10 示例：聊天服务器 198\n第9章 使用共享变量实现并发 201\n9.1 竞态 201\n9.2 互斥锁：sync.Mutex 205\n9.3 读写互斥锁：sync.RWMutex 208\n9.4 内存同步 208\n9.5 延迟初始化：sync.Once 210\n9.6 竞态检测器 212\n9.7 示例：并发非阻塞缓存 212\n9.8 goroutine与线程 218\n9.8.1 可增长的栈 219\n9.8.2 goroutine调度 219\n9.8.3 GOMAXPROCS 219\n9.8.4 goroutine没有标识 220\n第10章 包和go工具 221\n10.1 引言 221\n10.2 导入路径 221\n10.3 包的声明 222\n10.4 导入声明 223\n10.5 空导入 223\n10.6 包及其命名 225\n10.7 go工具 226\n10.7.1 工作空间的组织 227\n10.7.2 包的下载 228\n10.7.3 包的构建 229\n10.7.4 包的文档化 231\n10.7.5 内部包 232\n10.7.6 包的查询 233\n第11章 测试 235\n11.1 go test工具 235\n11.2 Test函数 236\n11.2.1 随机测试 239\n11.2.2 测试命令 240\n11.2.3 白盒测试 242\n11.2.4 外部测试包 245\n11.2.5 编写有效测试 246\n11.2.6 避免脆弱的测试 247\n11.3 覆盖率 248\n11.4 Benchmark函数 250\n11.5 性能剖析 252\n11.6 Example函数 254\n第12章 反射 256\n12.1 为什么使用反射 256\n12.2 reflect.Type和reflect.Value 257\n12.3 Display：一个递归的值显示器 259\n12.4 示例：编码S表达式 263\n12.5 使用reflect.Value来设置值 266\n12.6 示例：解码S表达式 268\n12.7 访问结构体字段标签 271\n12.8 显示类型的方法 273\n12.9 注意事项 274\n第13章 低级编程 276\n13.1 unsafe.Sizeof、Alignof 和Offsetof 276\n13.2 unsafe.Pointer 278\n13.3 示例：深度相等 280\n13.4 使用cgo调用C代码 282\n13.5 关于安全的注意事项 286","pages":"286","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29458403.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29458403.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29458403.jpg"},"alt":"https:\/\/book.douban.com\/subject\/27044219\/","id":"27044219","publisher":"机械工业出版社","isbn10":"7111558421","isbn13":"9787111558422","title":"Go程序设计语言","url":"https:\/\/api.douban.com\/v2\/book\/27044219","alt_title":"The Go Programming Language","author_intro":"","summary":"本书由《C程序设计语言》的作者Kernighan和谷歌公司Go团队主管Alan Donovan联袂撰写，是学习Go语言程序设计的指南。本书共13章，主要内容包括：Go的基础知识、基本结构、基本数据类型、复合数据类型、函数、方法、接口、goroutine、通道、共享变量的并发性、包、go工具、测试、反射等。\n本书适合作为计算机相关专业的教材，也可供Go语言爱好者阅读。","series":{"id":"1163","title":"计算机科学丛书"},"price":"79"},{"rating":{"max":10,"numRaters":61,"average":"5.5","min":0},"subtitle":"","author":["[新加坡]　樊虹剑"],"pubdate":"2012-6","tags":[{"count":50,"name":"go语言","title":"go语言"},{"count":37,"name":"Go","title":"Go"},{"count":19,"name":"编程","title":"编程"},{"count":14,"name":"GOOGLE","title":"GOOGLE"},{"count":10,"name":"计算机","title":"计算机"},{"count":10,"name":"程序设计","title":"程序设计"},{"count":8,"name":"golang","title":"golang"},{"count":6,"name":"programming","title":"programming"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s10214867.jpg","binding":"平装","translator":[],"catalog":"目  录\n第1章　 快速入门　 　 1\n1.1　 编辑和编译　 　 2\n1.2　 世界，你好！　 　 9\n1.3　 自我复制　 　 11\n1.4　 猜数游戏　 　 14\n1.5　 图灵机　 　 19\n1.6　 排版工具　 　 23\n1.7　 游乐场　 　 30\n1.8　 位钱　 　 36\n1.9　 小结　 　 43\n第2章　 静态类型　 　 44\n2.1　 数制　 　 45\n2.1.1　 整数　 　 45\n2.1.2　 二进制补码　 　 46\n2.1.3　 整数比较　 　 47\n2.1.4　 按位运算　 　 48\n2.1.5　 浮点数　 　 50\n2.1.6　 复数　 　 51\n2.1.7　 优先级　 　 52\n2.1.8　 表达式　 　 53\n2.2　 字符和字符串　 　 54\n2.2.1　 UTF-8编码　 　 54\n2.2.2　 Unicode字符　 　 55\n2.2.3　 转义字符　 　 56\n2.2.4　 字符串　 　 56\n2.2.5　 字符串转换　 　 57\n2.3　 数组　 　 60\n2.3.1　 声明　 　 60\n2.3.2　 下标　 　 61\n2.3.3　 赋值　 　 61\n2.4　 切片　 　 63\n2.5　 结构体　 　 67\n2.5.1　 项　 　 68\n2.5.2　 内置　 　 69\n2.6　 指针　 　 71\n2.7　 小结　 　 73\n第3章　 流程控制　 　 74\n3.1　 简单语句　 　 75\n3.2　 判断语句if　 　 77\n3.3　 多分支语句switch　 　 79\n3.4　 循环语句for 　 　 82\n3.5　 遍历　 　 84\n3.6　 标号和跳转　 　 85\n3.7　 作用域　 　 86\n3.8　 小结　 　 88\n第4章　 函数　 　 89\n4.1　 签名　 　 90\n4.2　 参数　 　 91\n4.3　 返回语句　 　 93\n4.4　 函数调用　 　 95\n4.5　 闭包　 　 97\n4.6　 压后　 　 99\n4.7　 派错和恢复　 　 100\n4.8　 方法　 　 102\n4.9　 包　 　 105\n4.10　 导入　 　 107\n4.11　 程序初始化　 　 108\n4.12　 小结　 　 110\n第5章　 动态类型　 　 111\n5.1　 映射　 　 112\n5.2　 界面类型　 　 116\n5.3　 界面值　 　 119\n5.4　 error界面　 　 122\n5.5　 有界无类　 　 124\n5.6　 排序　 　 126\n5.7　 类型断言　 　 130\n5.8　 类型分支　 　 133\n5.9　 反射　 　 135\n5.10　 小结　 　 141\n第6章　 面向对象　 　 142\n6.1　 背景　 　 143\n6.2　 术语　 　 146\n6.3　 与C++对比　 　 149\n6.3.1　 继承　 　 149\n6.3.2　 抽象类　 　 151\n6.3.3　 泛型　 　 153\n6.4　 小结　 　 154\n第7章　 并发编程　 　 155\n7.1　 背景　 　 156\n7.2　 同步通信　 　 158\n7.3　 去程　 　 162\n7.4　 程道　 　 164\n7.5　 遍历与关闭　 　 166\n7.6　 MapReduce　 　 168\n7.7　 select语句　 　 170\n7.8　 程道值　 　 173\n7.9　 互斥　 　 175\n7.10　 小结　 　 177\n第8章　 云计算　 　 178\n8.1　 背景　 　 179\n8.2　 GAE　 　 181\n8.3　 Hello 世界！　 　 183\n8.4　 画胡子　 　 185\n8.5　 留言录　 　 191\n8.6　 用户API　 　 195\n8.7　 数据库API　 　 196\n8.7.1　 术语　 　 197\n8.7.2　 Go数据库API　 　 197\n8.7.3　 实体键　 　 199\n8.7.4　 查询和索引　 　 200\n8.7.5　 实体组　 　 201\n8.7.6　 限制　 　 201\n8.8　 交易　 　 203\n8.9　 散段　 　 205\n8.10　 内存缓冲　 　 208\n8.11　 大件库　 　 210\n8.12　 URL抓取　 　 213\n8.13　 任务队列　 　 214\n8.13.1　 任务　 　 216\n8.13.2　 任务执行　 　 217\n8.13.3　 队列　 　 218\n8.14　 后端　 　 220\n8.15　 能力API 　 　 221\n8.16　 电子邮件API 　 　 222\n8.16.1　 发送　 　 222\n8.16.2　 接收　 　 223\n8.17　 信道API　 　 224\n8.18　 小结　 　 226\n第9章　 标准包　 　 227\n9.1　 格式包　 　 228\n9.1.1　 格式输出Printf　 　 229\n9.1.2　 动词表　 　 230\n9.1.3　 宽度和精度　 　 231\n9.1.4　 报错　 　 232\n9.1.5　 额外标记　 　 232\n9.1.6　 格式输入　 　 233\n9.1.7　 字符串格式　 　 234\n9.2　 字节包　 　 236\n9.3　 模板包　 　 239\n9.4　 正则表达式包　 　 245\n9.5　 时间包　 　 253\n9.6　 超链接包　 　 258\n9.6.1　 http服务器和客户机　 　 258\n9.6.2　 https加密通信　 　 260\n9.6.3　 Get　 　 263\n9.6.4　 Post　 　 265\n9.6.5　 Cookie　 　 268\n9.7　 编码包　 　 271\n9.7.1　 gob　 　 271\n9.7.2　 json　 　 275\n附录A　 Go的安装和使用　 　 277\n附录B　 EBNF　 　 284\n附录C　 中英术语对照表　 　 291","ebook_url":"https:\/\/read.douban.com\/ebook\/1198516\/","pages":"300","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s10214867.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s10214867.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s10214867.jpg"},"alt":"https:\/\/book.douban.com\/subject\/10770080\/","id":"10770080","publisher":"人民邮电出版社","isbn10":"7115283079","isbn13":"9787115283078","title":"Go语言·云动力","url":"https:\/\/api.douban.com\/v2\/book\/10770080","alt_title":"","author_intro":"作者简介：\n樊虹剑\n15岁迷上Apple II，立志成为程序员。从Applesoft BASIC，到Microsoft C、C++、C#，再到Apple Objective-C，其间使用过大小十几种编程语言，始终不得要领。不明白起源于数学和电子学的计算机科学，为何不去追求诗歌般至简至纯的美学，而是纠结于繁复的形式和空洞的哲学。几欲放弃。直到偶然发现Plan 9，才获得返璞归真的乐趣，并一路欢喜走过Inferno，快乐走入Go语言的世界。","summary":"内容简介：\n云计算时代，对编程语言的要求也越来越高，而现有编程语言都无法满足大规模网络应用的需求，更无法同时满足程序员高效编译、高效执行和轻松编程的要求。2007年，Go语言应运而生。它面向Web和多核计算，强调速度，并引入了高效、低延迟的垃圾回收算法，同时精简了类型，摒弃了危险的指针运算。所有这些特点，都使得Go既容易学习，也便于使用，无论是要解决手边的小问题，还是要集体完成大项目，Go都是合适的通用语言。\n本书作者是将Go语言在国内传播的第一人，对Go的编译器、运行器和各种包有深入研究，目前已正式成为Go语言的Contributor。本书是他这几年研究心血之结晶，旨在为读者了解Go语言、掌握Go语言提供专业的入门指导。\n书中内容共分为9章，全面介绍了Go语言的基础知识，以及Go语言在云计算中的应用。作者还提供了70多个完整的示例程序，方便读者边学边练，加深记忆。通过轻松简洁的介绍，读者定能顺利进入Go语言的世界。","ebook_price":"18.00","series":{"id":"13000","title":"图灵原创"},"price":"39.00元"},{"rating":{"max":10,"numRaters":29,"average":"3.3","min":0},"subtitle":"","author":["Katherine Cox-Buday"],"pubdate":"2018-12-1","tags":[{"count":14,"name":"Go","title":"Go"},{"count":8,"name":"翻译太烂","title":"翻译太烂"},{"count":4,"name":"内容还不错，就是翻译真的太烂","title":"内容还不错，就是翻译真的太烂"},{"count":1,"name":"软件开发","title":"软件开发"},{"count":1,"name":"计算机科学","title":"计算机科学"},{"count":1,"name":"程序设计","title":"程序设计"},{"count":1,"name":"浪费生命的书","title":"浪费生命的书"},{"count":1,"name":"并发","title":"并发"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29976376.jpg","binding":"Paperback","translator":["于畅","马鑫","赵晨光"],"catalog":"前言 1\n第1章 并发概述 9\n摩尔定律，Web Scale和我们所陷入的混乱 10\n为什么并发很难？ 12\n竞争条件 13\n原子性 15\n内存访问同步 17\n死锁、活锁和饥饿 20\n确定并发安全 28\n面对复杂性的简单性 31\n第2章 对你的代码建模：通信顺序进程 33\n并发与并行的区别 33\n什么是CSP 37\n如何帮助你 40\nGo语言的并发哲学 43\n第3章 Go语言并发组件 47\ngoroutine 47\nsync包 58\nWaitGroup 58\n互斥锁和读写锁 60\ncond 64\nonce 69\n池 71\nchannel 76\nselect 语句 92\nGOMAXPROCS控制 97\n小结 98\n第4章 Go语言的并发模式 99\n约束 99\nfor-select循环103\n防止goroutine泄漏 104\nor-channel 109\n错误处理112\npipeline 116\n构建pipeline的最佳实践 120\n一些便利的生成器 126\n扇入，扇出 132\nor-done-channel 137\ntee-channel 139\n桥接channel模式 140\n队列排队143\ncontext包 151\n小结 168\n第5章 大规模并发 169\n异常传递169\n超时和取消 178\n心跳 184\n复制请求197\n速率限制199\n治愈异常的goroutine 215\n小结 222\n第6章 goroutine和Go语言运行时 223\n工作窃取223\n窃取任务还是续体 231\n向开发人员展示所有这些信息 240\n尾声 240\n附录A 241","pages":"260","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s29976376.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s29976376.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29976376.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30424330\/","id":"30424330","publisher":"中国电力出版社","isbn10":"7519824942","isbn13":"9787519824945","title":"Go语言并发之道","url":"https:\/\/api.douban.com\/v2\/book\/30424330","alt_title":"","author_intro":"Katherine Cox-Buday是一名计算机科学家，目前工作于 Simple online banking。她的业余爱好包括软件工程、创作、Go 语言(igo、baduk、weiquei) 以及音乐，这些都是她长期的追求，并且有着不同层面的贡献。","summary":"本书作者带你一步一步深入这些方法。你将理解 Go语言为何选定这些并发模型，这些模型又会带来什么问题，以及你如何组合利用这些模型中的原语去解决问题。学习那些让你在独立且自信的编写与实现任何规模并发系统时所需要用到的技巧和工具。\n理解Go语言如何解决并发难以编写正确这一根本问题。\n学习并发与并行的关键性区别。\n深入到Go语言的内存同步原语。\n利用这些模式中的原语编写可维护的并发代码。\n将模式组合成为一系列的实践，使你能够编写大规模的分布式系统。\n学习 goroutine 背后的复杂性，以及Go语言的运行时如何将所有东西连接在一起。","series":{"id":"697","title":"O'reilly系列"},"price":"58.00"},{"rating":{"max":10,"numRaters":104,"average":"7.0","min":0},"subtitle":"","author":["Mark Summerfield"],"pubdate":"2013-8-1","tags":[{"count":81,"name":"go语言","title":"go语言"},{"count":62,"name":"golang","title":"golang"},{"count":44,"name":"Go","title":"Go"},{"count":40,"name":"编程","title":"编程"},{"count":32,"name":"计算机","title":"计算机"},{"count":18,"name":"Programming","title":"Programming"},{"count":17,"name":"软件开发","title":"软件开发"},{"count":17,"name":"programming","title":"programming"}],"origin_title":"Programming in Go","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s27979270.jpg","binding":"平装","translator":["许式伟","吕桂华","徐立","何李石"],"catalog":"Go语言程序设计》\n第1章　5个例子　1\n1.1　开始　1\n1.2　编辑、编译和运行　3\n1.3　Hello Who?　6\n1.4　大数字——二维切片　8\n1.5　栈——自定义类型及其方法　12\n1.6　americanise示例——文件、映射和闭包　18\n1.7　从极坐标到笛卡儿坐标——并发　28\n1.8　练习　33\n第2章　布尔与数值类型　35\n2.1　基础　35\n2.2　布尔值和布尔表达式　39\n2.3　数值类型　40\n2.3.1　整型　42\n2.3.2　浮点类型　46\n2.4　例子：statistics　53\n2.4.1　实现一个简单的统计函数　54\n2.4.2　实现一个基本的HTTP服务器　55\n2.5　练习　58\n第3章　字符串　60\n3.1　字面量、操作符和转义　61\n3.2　比较字符串　63\n3.3　字符和字符串　65\n3.4　字符串索引与切片　67\n3.5　使用fmt包来格式化字符串　69\n3.5.1　格式化布尔值　73\n3.5.2　格式化整数　74\n3.5.3　格式化字符　75\n3.5.4　格式化浮点数　75\n3.5.5　格式化字符串和切片　76\n3.5.6　为调试格式化　78\n3.6　其他字符处理相关的包　80\n3.6.1　strings包　81\n3.6.2　strconv包　86\n3.6.3　utf8包　90\n3.6.4　unicode包　91\n3.6.5　regexp包　92\n3.7　例子：m3u2pls　101\n3.8　练习　106\n第4章　集合类型　108\n4.1　值、指针和引用类型　108\n4.2　数组和切片　115\n4.2.1　索引与分割切片　119\n4.2.2　遍历切片　119\n4.2.3　修改切片　121\n4.2.4　排序和搜索切片　125\n4.3　映射　128\n4.3.1　创建和填充映射　129\n4.3.2　映射查询　131\n4.3.3　修改映射　132\n4.3.4　键序遍历映射　132\n4.3.5　映射反转　133\n4.4　例子　134\n4.4.1　猜测分隔符　134\n4.4.2　词频统计　136\n4.5　练习　141\n第5章　过程式编程　144\n5.1　语句基础　144\n5.1.1　类型转换　147\n5.1.2　类型断言　148\n5.2　分支　149\n5.2.1　if语句　150\n5.2.2　switch语句　151\n5.3　for循环语句　158\n5.4　通信和并发语句　160\n5.5　defer、panic和recover　166\n5.6　自定义函数　171\n5.6.1　函数参数　172\n5.6.2　init()函数和main()函数　175\n5.6.3　闭包　176\n5.6.4　递归函数　178\n5.6.5　运行时选择函数　181\n5.6.6　泛型函数　183\n5.6.7　高阶函数　187\n5.7　例子：缩进排序　192\n5.8　练习　197\n第6章　面向对象编程　199\n6.1　几个关键概念　199\n6.2　自定义类型　201\n6.2.1　添加方法　203\n6.2.2　验证类型　207\n6.3　接口　209\n6.4　结构体　217\n6.5　例子　224\n6.5.1　FuzzyBool——一个单值自定义类型　224\n6.5.2　Shapes——一系列自定义类型　229\n6.5.3　有序映射——一个通用的集合类型　240\n6.6　练习　248\n第7章　并发编程　251\n7.1　关键概念　252\n7.2　例子　256\n7.2.1　过滤器　256\n7.2.2　并发的Grep　260\n7.2.3　线程安全的映射　266\n7.2.4　Apache报告　271\n7.2.5　查找副本　278\n7.3　练习　285\n第8章　文件处理　287\n8.1　自定义数据文件　287\n8.1.1　处理JSON文件　290\n8.1.2　处理XML文件　295\n8.1.3　处理纯文本文件　301\n8.1.4　处理Go语言二进制文件　307\n8.1.5　处理自定义的二进制文件　309\n8.2　归档文件　317\n8.2.1　创建zip归档文件　317\n8.2.2　创建可压缩的tar包　319\n8.2.3　解开zip归档文件　321\n8.2.4　解开tar归档文件　322\n8.3　练习　324\n第9章　包　326\n9.1　自定义包　326\n9.1.1　创建自定义的包　327\n9.1.2　导入包　333\n9.2　第三方包　334\n9.3　Go命令行工具简介　335\n9.4　Go标准库简介　336\n9.4.1　归档和压缩包　336\n9.4.2　字节流和字符串相关的包　336\n9.4.3　容器包　337\n9.4.4　文件和操作系统相关的包　339\n9.4.5　图像处理相关的包　341\n9.4.6　数学处理包　341\n9.4.7　其他一些包　341\n9.4.8　网络包　342\n9.4.9　反射包　343\n9.5　练习　346\n附录A　后记　348\n附录B　软件专利的危害　350\n附录C　精选书目　353","pages":"354","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s27979270.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s27979270.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s27979270.jpg"},"alt":"https:\/\/book.douban.com\/subject\/24869910\/","id":"24869910","publisher":"人民邮电出版社","isbn10":"7115317909","isbn13":"9787115317902","title":"Go 语言程序设计","url":"https:\/\/api.douban.com\/v2\/book\/24869910","alt_title":"Programming in Go","author_intro":"Mark Summerfield Qtrac公司创始人，独立的培训讲师、顾问、技术编辑，Go、Python、C++、Qt和PyQt方面的技术作家。他的著作包括Rapid GUI Programming with Python and Qt、C++ GUI Programming with Qt 4（与Jasmin Blanchette合著）、Programming in Python 3和Advanced Qt Programming等。\n许式伟——七牛云存储CEO，开源爱好者，发布过十余个C++开源项目，拥有超过15年的C\/C++开发经验。\n吕桂华——七牛云存储联合创始人，拥有十余年的C\/C++大型项目开发经验，也曾在Java和.NET平台上探索多年。\n徐 立——七牛云存储首席布道师，前盛大创新院高级研究员。\n何李石——七牛云存储布道师。\n七牛云存储技术团队是国内第一个核心服务完全采用Go语言实现的团队。","summary":"国外最经典的Go语言著作，Go语言编程的先驱者Mark Summerfield的实践经验总结。\n这是一本Go语言实战指南，帮你了解Go语言，按Go语言的方式思考，以及使用Go语言来编写高性能软件。\n作者展示了如何编写充分利用Go语言突破性的特性和惯用法的代码，以及Go语言在其他语言之上所做的改进，并着重强调了Go语言的关键创新。\n注重实践教学，每章都提供了多个经过精心设计的代码示例。\n由国内第一个核心服务完全采用Go语言实现的团队——七牛团队核心成员翻译。","series":{"id":"18948","title":"新锐编程语言集萃"},"price":"CNY 69.00"},{"rating":{"max":10,"numRaters":3,"average":"0.0","min":0},"subtitle":"","author":["郑东旭","杨明珠","潘盈瑜","翟萌"],"pubdate":"2019-7-5","tags":[{"count":3,"name":"区块链开发","title":"区块链开发"},{"count":3,"name":"go","title":"go"},{"count":2,"name":"区块链","title":"区块链"},{"count":1,"name":"编程","title":"编程"},{"count":1,"name":"程序员","title":"程序员"},{"count":1,"name":"比原链","title":"比原链"},{"count":1,"name":"Go语言","title":"Go语言"},{"count":1,"name":"Golang","title":"Golang"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s33439523.jpg","binding":"平装","translator":[],"catalog":"推荐序一\n推荐序二\n前言\n第1章　公链设计架构\n第2章　交互工具\n第3章　守护进程的初始化与运行\n第4章　接口层\n第5章　内核层：区块与区块链\n第6章　内核层：交易\n第7章　内核层：智能合约\n第8章　内核层：虚拟机\n第9章　钱包层\n第10章　P2P分布式网络\n第11章　数据存储\n第12章　共识算法\n第13章　矿池及挖矿流程\n第14章　展望","pages":"296","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s33439523.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s33439523.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s33439523.jpg"},"alt":"https:\/\/book.douban.com\/subject\/34659372\/","id":"34659372","publisher":"机械工业出版社","isbn10":"7111629876","isbn13":"9787111629870","title":"GO语言公链开发实战","url":"https:\/\/api.douban.com\/v2\/book\/34659372","alt_title":"","author_intro":"","summary":"本书的目标是引导读者全面了解区块链技术实现原理，笔者也一直坚信，了解某一系统最直接的方式就是研读它的源码，所以本书并不是只介绍区块链技术，而是深入分析其背后的实现原理。通过阅读本书，读者可以全面地了解一条公链的技术实现。本书基于比原链的源代码进行分析，比原链是一个开源的有智能合约功能的公共区块链平台，是国内优秀的公链，目前比原链的代码量不多，而且源码结构清晰，特别适合初学者学习。","series":{"id":"43703","title":"区块链技术丛书"},"price":"CNY 89.00"},{"rating":{"max":10,"numRaters":7,"average":"0.0","min":0},"subtitle":"","author":["[英] 乔治，奥尔波（George Ornbo）"],"pubdate":"2018-8-1","tags":[{"count":5,"name":"golang","title":"golang"},{"count":2,"name":"编程","title":"编程"},{"count":2,"name":"concurrency","title":"concurrency"},{"count":1,"name":"计算机","title":"计算机"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29882539.jpg","binding":"平装","translator":["张海燕"],"catalog":"","pages":"261","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s29882539.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s29882539.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29882539.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30339297\/","id":"30339297","publisher":"人民邮电出版社","isbn10":"7115485038","isbn13":"9787115485038","title":"Go语言入门经典","url":"https:\/\/api.douban.com\/v2\/book\/30339297","alt_title":"","author_intro":"","summary":"","price":"59.00元"},{"rating":{"max":10,"numRaters":4,"average":"0.0","min":0},"subtitle":"Next Generation Systems Programming with Golang","author":["[英] 乔治.奥尔波(George.Ornbo)"],"pubdate":"2017-12-18","tags":[{"count":2,"name":"编程","title":"编程"},{"count":2,"name":"golang","title":"golang"},{"count":2,"name":"Go","title":"Go"},{"count":1,"name":"计算机","title":"计算机"},{"count":1,"name":"入门","title":"入门"}],"origin_title":"Sams Teach Yourself Go in 24 Hours","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29934614.jpg","binding":"Paperback","translator":["张海燕"],"catalog":"第1章 起步 1\n1.1 Go简介 1\n1.1.1 Go语言简史 1\n1.1.2 Go是编译型语言 2\n1.2 安装Go 2\n1.2.1 在Windows系统中安装 3\n1.2.2 在macOS或Linux系统中安装 4\n1.3 设置环境 4\n1.4 编写第一个Go程序——Hello World 5\n1.4.1 使用 go run 编译并运行程序 6\n1.4.2 Go吉祥物 6\n1.5 小结 6\n1.6 问与答 7\n1.7 作业 7\n1.7.1 小测验 7\n1.7.2 答案 7\n1.8 练习 7\n第2章 理解类型 8\n2.1 数据类型是什么 8\n2.2 区分静态类型和动态类型 8\n2.3 使用布尔类型 11\n2.4 理解数值类型 12\n2.4.1 带符号整数和无符号整数 13\n2.4.2 浮点数 14\n2.4.3 字符串 14\n2.4.4 数组 14\n2.5 检查变量的类型 15\n2.6 类型转换 16\n2.7 小结 17\n2.8 问与答 17\n2.9 作业 17\n2.9.1 小测验 17\n2.9.2 答案 17\n2.10 练习 18\n第3章 理解变量 19\n3.1 变量是什么 19\n3.2 快捷变量声明 21\n3.3 理解变量和零值 21\n3.4 编写简短变量声明 22\n3.5 变量声明方式 23\n3.6 理解变量作用域 24\n3.7 使用指针 25\n3.8 声明常量 27\n3.9 小结 28\n3.10 问与答 28\n3.11 作业 29\n3.11.1 小测验 29\n3.11.2 答案 29\n3.12 练习 29\n第4章 使用函数 30\n4.1 函数是什么 30\n4.1.1 函数的结构 30\n4.1.2 返回单个值 31\n4.1.3 返回多个值 32\n4.2 定义不定参数函数 33\n4.3 使用具名返回值 34\n4.4 使用递归函数 35\n4.5 将函数作为值传递 36\n4.6 小结 38\n4.7 问与答 38\n4.8 作业 38\n4.8.1 小测验 38\n4.8.2 答案 38\n4.9 练习 39\n第5章 控制流程 40\n5.1 使用if语句 40\n5.2 使用else语句 42\n5.3 使用else if语句 43\n5.4 使用比较运算符 44\n5.5 使用算数运算符 45\n5.6 使用逻辑运算符 45\n5.7 使用switch语句 46\n5.8 使用for语句进行循环 47\n5.8.1 包含初始化语句和后续语句的for语句 49\n5.8.2 包含range子句的for语句 49\n5.9 使用defer语句 50\n5.10 小结 52\n5.11 问与答 52\n5.12 作业 53\n5.12.1 小测验 53\n5.12.2 答案 53\n5.13 练习 53\n第6章 数组、切片和映射 54\n6.1 使用数组 54\n6.2 使用切片 56\n6.2.1 在切片中添加元素 56\n6.2.2 在切片中删除元素 58\n6.2.3 赋值切片中的元素 58\n6.3 使用映射 59\n6.3.1 从映射中删除元素 60\n6.4 小结 61\n6.5 问与答 61\n6.6 作业 62\n6.6.1 小测验 62\n6.6.2 答案 62\n6.7 练习 62\n第7章 使用结构体和指针 63\n7.1 结构体是什么 63\n7.2 创建结构体 65\n7.3 嵌套结构体 68\n7.4 自定义结构体数据字段的默认值 69\n7.5 比较结构体 71\n7.6 理解共有和私有值 72\n7.7 区分指针引用和值引用 73\n7.8 小结 75\n7.9 问与答 75\n7.10 作业 76\n7.10.1 小测验 76\n7.10.2 答案 76\n7.11 练习 76\n第8章 创建方法和接口 77\n8.1 使用方法 77\n8.2 创建方法集 79\n8.3 使用方法和指针 80\n8.4 使用接口 83\n8.5 小结 86\n8.6 问与答 86\n8.7 作业 87\n8.7.1 小测验 87\n8.7.2 答案 87\n8.8 练习 87\n第9章 使用字符串 88\n9.1 创建字符串 88\n9.2 理解rune字面量 89\n9.3 拼接字符串 90\n9.3.1 使用缓冲区拼接字符串 92\n9.3.2 理解字符串是什么 93\n9.3.3 处理字符串 94\n9.4 小结 97\n9.5 问与答 97\n9.6 作业 97\n9.6.1 小测验 97\n9.6.2 答案 97\n9.7 练习 98\n第10章 错误处理 99\n10.1 错误处理及Go语言的独特之处 99\n10.2 理解错误类型 101\n10.3 创建错误 101\n10.4 设置错误格式 102\n10.5 从函数返回错误 103\n10.6 错误和可用性 104\n10.7 慎用panic 104\n10.8 小结 106\n10.9 问与答 106\n10.10 作业 106\n10.10.1 小测验 106\n10.10.2 答案 106\n10.11 练习 107\n第11章 使用Goroutine 108\n11.1 理解并发 108\n11.2 并发和并行 110\n11.3 通过Web浏览器来理解并发 110\n11.4 阻塞和非阻塞代码 111\n11.5 使用Goroutine处理并发操作 112\n11.6 定义Goroutine 114\n11.7 小结 114\n11.8 问与答 114\n11.9 作业 115\n11.9.1 小测验 115\n11.9.2 答案 115\n11.10 练习 115\n第12章 通道简介 116\n12.1 使用通道 116\n12.2 使用缓冲通道 119\n12.3 阻塞和流程控制 120\n12.4 将通道用作函数参数 123\n12.5 使用select语句 123\n12.6 退出通道 126\n12.7 小结 128\n12.8 问与答 128\n12.9 作业 128\n12.9.1 小测验 129\n12.9.2 答案 129\n12.10 练习\n第13章 使用包实现代码重用 130\n13.1 导入包 130\n13.2 理解包的用途 131\n13.3 使用第三方包 132\n13.4 安装第三方包 132\n13.5 管理第三方依赖 133\n13.6 创建包 135\n13.7 小结 137\n13.8 问与答 137\n13.9 作业 137\n13.9.1 小测验 137\n13.9.2 答案 138\n13.10 练习 138\n第14章 Go语言命名约定 139\n14.1 Go代码格式设置 139\n14.2 使用gofmt 140\n14.3 配置文本编辑器 141\n14.4 命名约定 142\n14.5 使用golint 143\n14.6 使用godoc 144\n14.7 工作流程自动化 147\n14.8 小结 148\n14.9 问与答 149\n14.10 作业 149\n14.10.1 小测验 149\n14.10.2 答案 149\n14.11 练习 149\n第15章 测试和性能 150\n15.1 测试：软件开发最重要的方面 150\n15.1.1 单元测试 151\n15.1.2 集成测试 151\n15.1.3 功能测试 151\n15.1.4 测试驱动开发 151\n15.2 testing包 151\n15.3 运行表格测试驱动 154\n15.4 基准测试 156\n15.5 提供测试覆盖率 158\n15.6 小结 159\n15.7 问与答 159\n15.8 作业 159\n15.8.1 小测验 159\n15.8.2 答案 159\n15.9 练习 160\n第16章 调试 161\n16.1 日志 161\n16.2 打印数据 164\n16.3 使用fmt包 165\n16.4 使用Delve 168\n16.5 使用gdb 170\n16.6 小结 171\n16.7 问与答 171\n16.8 作业 171\n16.8.1 小测验 171\n16.8.2 答案 172\n16.9 练习 172\n第17章 使用命令行程序 173\n17.1 操作输入和输出 174\n17.2 访问命令行参数 174\n17.3 分析命令行标志 176\n17.4 指定标志的类型 177\n17.5 自定义帮助文本 178\n17.6 创建子命令 179\n17.7 POSIX兼容性 182\n17.8 安装分享命令行程序 182\n17.9 小结 184\n17.10 问与答 184\n17.11 作业 184\n17.11.1小测验 185\n17.11.2 答案 185\n17.12 练习 185\n第18章 创建HTTP服务器 186\n18.1 通过Hello World Web服务器宣告您的存在 186\n18.2 查看请求和响应 187\n18.2.1 使用curl发出请求 188\n18.2.2 详谈路由 189\n18.3 使用处理程序函数 189\n18.4 处理404错误 190\n18.5 设置报头 191\n18.6响应以不同类型的内容 192\n18.7 响应不同类型的请求 194\n18.8 获取GET和POST请求中的数据 195\n18.9 小结 197\n18.10 问与答 198\n18.11 作业 198\n18.11.1 小测验 198\n18.11.2 答案 198\n18.12 练习 199\n第19章 创建HTTP客户端 200\n19.1 理解HTTP 200\n19.2 发出GET请求 201\n19.3 发出POST请求 202\n19.4 进一步控制HTTP请求 204\n19.5 调试HTTP请求 205\n19.6 处理超时 207\n19.7 小结 208\n19.8 问与答 209\n19.9 作业 209\n19.9.1 小测验 209\n19.9.2 答案 209\n19.10 练习 210\n第20章 处理JSON 211\n20.1 JSON简介 211\n20.2 使用JSON API 213\n20.3 在Go语言中使用JSON 213\n20.4 解码JSON 217\n20.5 映射数据类型 219\n20.6 处理通过HTTP收到的JSON 220\n20.7 小结 221\n20.8 问与答 221\n20.9 作业 222\n20.9.1 小测验 222\n20.9.2 答案 222\n20.10 练习 222\n第21章 处理文件 223\n21.1 文件的重要性 223\n21.2 使用ioutil包读写文件 224\n21.2.1 读取文件 224\n21.2.2 创建文件 225\n21.3 写入文件 227\n21.4 列出目录的内容 228\n21.5 复制文件 229\n21.6 删除文件 230\n21.7 使用文件来管理配置 231\n21.7.1 使用JSON文件 231\n21.7.2 使用TOML文件 232\n21.8 小结 234\n21.9 问与答 234\n21.10 作业 234\n21.10.1 小测验 235\n21.10.2 答案 235\n21.11 练习 235\n第22章 正则表达式简介 236\n22.1定义正则表达式 236\n22.2 熟悉正则表达式 238\n22.3 使用正则表达式验证数据 239\n22.4 使用正则表达式来变换数据 240\n22.5 小结 241\n22.6 问与答 241\n22.7 作业 241\n22.7.1 小测验 242\n22.7.2 答案 242\n22.8 练习 242\n第23章 Go语言时间编程 243\n23.1 时间元素编程 243\n23.2 让程序休眠 245\n23.3 设置超时时间 245\n23.4 使用ticker 246\n23.5 以字符串格式表示时间 247\n23.6 使用结构体Time 248\n23.7时间加减 249\n23.8 比较两个不同的Time结构体 249\n23.9 小结 250\n23.10 问与答 250\n23.11 作业 251\n23.11.1 小测验 251\n23.11.2 答案 251\n23.12 练习 251\n第24章 部署Go语言代码 252\n24.1 理解目标 252\n24.2 压缩二进制文件大小 255\n24.3 使用Docker 256\n24.4 下载二进制文件 258\n24.5 使用go get 259\n24.6 通过包管理器发布代码 260\n24.7 小结 260\n24.8 问与答 260\n24.9 作业 261\n24.9.1 小测验 261\n24.9.2 答案 261\n24.10 练习","pages":"261","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s29934614.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s29934614.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29934614.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30318264\/","id":"30318264","publisher":"Sams Publishing","isbn10":"0672338033","isbn13":"9780672338038","title":"Go语言入门经典","url":"https:\/\/api.douban.com\/v2\/book\/30318264","alt_title":"Sams Teach Yourself Go in 24 Hours","author_intro":"George Ornbo 是一位软件工程师、博主和作家，拥有14年的软件开发经验，其客户既有初创公司，也有大型企业客户；熟悉众多编程语言、UNIX和Web底层协议。当前供职于伦敦的一家区块链初创公司。","summary":"Go 语言是谷歌推出的一种全新的编程语言，旨在不损失应用程序性能的情况下降低代码的复杂性，具有“部署简单、并发性好、语言设计良好、执行性能良好”等优势，目前国内诸多IT公司均已采用Go语言开发项目。\n本书分为24章，讲解了使用Go语言编写高质量程序的方法，其内容涵盖了Go语言特性和标准库安装包，Go与JavaScript的对比，Go命令行工具，Go中的基本概念（比如类型、变量、函数、控制结构、指针、接口等）、错误处理、Goroutine和通道、Go代码测试、使用Go编写HTTP客户端与服务器、处理JSON和文件、部署Go代码等。\n本书适合想要掌握Go语言的零基础读者以及对Go语言感兴趣的程序员学习，还可作为高等院校教授Go语言课程的教材。","price":"59.00元"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Mihalis Tsoukalos"],"pubdate":"2019-5","tags":[],"origin_title":"Mastering Go","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s33531958.jpg","binding":"平装","translator":[],"catalog":"","pages":"588","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s33531958.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s33531958.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s33531958.jpg"},"alt":"https:\/\/book.douban.com\/subject\/33474342\/","id":"33474342","publisher":"东南大学出版社","isbn10":"7564183225","isbn13":"9787564183226","title":"精通Go语言(影印版 英文版)","url":"https:\/\/api.douban.com\/v2\/book\/33474342","alt_title":"Mastering Go","author_intro":"","summary":"","price":"118.00"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":[],"pubdate":"","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","large":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","medium":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif"},"alt":"https:\/\/book.douban.com\/subject\/30695989\/","id":"30695989","publisher":"","isbn10":"9863792799","isbn13":"9789863792796","title":"Let's Go with Go：Go语言带你进入程序最高殿堂","url":"https:\/\/api.douban.com\/v2\/book\/30695989","alt_title":"","author_intro":"","summary":"","price":"147.60元"},{"rating":{"max":10,"numRaters":2,"average":"0.0","min":0},"subtitle":"","author":["[美] 丹尼尔·怀特纳克（Daniel Whitenack）"],"pubdate":"2018-11-1","tags":[{"count":2,"name":"机器学习","title":"机器学习"},{"count":2,"name":"go","title":"go"},{"count":1,"name":"计算机","title":"计算机"}],"origin_title":"Machine Learning With go","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s30002304.jpg","binding":"平装","translator":["谢文江","姜明魁"],"catalog":"译者序\n前言\n第1章　数据的收集和组织 1\n1.1　数据处理-Gopher方式 2\n1.2　Go语言收集和组织数据的最佳实践 4\n1.3　CSV文件 5\n1.3.1　从文件中读取CSV数据 5\n1.3.2　处理非预期的域 6\n1.3.3　处理非预期的类型 7\n1.3.4　用数据帧操作CSV数据 9\n1.4　JSON 11\n1.4.1　JSON的解析 11\n1.4.2　JSON的输出 14\n1.5　SQL-like数据库 14\n1.5.1　连接到一个SQL数据库 15\n1.5.2　查询数据库 15\n1.5.3　修改数据库 17\n1.6　缓存 17\n1.6.1　在内存中缓存数据 17\n1.6.2　在本地磁盘中缓存数据 18\n1.7　数据版本控制 19\n1.7.1　Pachyderm术语 20\n1.7.2　部署\/安装Pachyderm 20\n1.7.3　创建用于数据版本控制的数据仓库 21\n1.7.4　把数据存储到数据仓库中 21\n1.7.5　从版本化的数据仓库中获取数据 22\n1.8　参考书目 22\n1.9　小结 23\n第2章　矩阵、概率论和统计学 24\n2.1　矩阵和向量 24\n2.1.1　向量 24\n2.1.2　向量操作 25\n2.1.3　矩阵 26\n2.1.4　矩阵操作 27\n2.2　统计学 29\n2.2.1　分布 29\n2.2.2　统计方法 30\n2.2.3　分布可视化 34\n2.3　概率论 39\n2.3.1　随机变量 40\n2.3.2　概率测量 40\n2.3.3　独立和条件概率 40\n2.3.4　假设检验 41\n2.4　参考书目 43\n2.5　小结 44\n第3章　评估和验证 45\n3.1　评估 45\n3.1.1　连续指标 46\n3.1.2　分类指标 49\n3.2　验证 55\n3.2.1　训练和测试集 56\n3.2.2　保留集 59\n3.2.3　交叉验证 60\n3.3　参考书目 61\n3.4　小结 62\n第4章　回归 63\n4.1　理解回归模型的术语 63\n4.2　线性回归 64\n4.2.1　线性回归概述 64\n4.2.2　线性回归假设和陷阱 66\n4.2.3　线性回归示例 66\n4.3　多元线性回归 78\n4.4　非线性和其他类型的回归 81\n4.5　参考书目 85\n4.6　小结 86\n第5章　分类 87\n5.1　理解分类模型的术语 87\n5.2　逻辑回归 88\n5.2.1　逻辑回归概述 88\n5.2.2　逻辑回归的假设和陷阱 91\n5.2.3　逻辑回归示例 92\n5.3　k-最近邻 103\n5.3.1　kNN概述 103\n5.3.2　kNN假设和陷阱 104\n5.3.3　kNN示例 105\n5.4　决策树和随机森林 106\n5.4.1　决策树和随机森林概述 107\n5.4.2　决策树和随机森林的假设及陷阱 107\n5.4.3　决策树示例 108\n5.4.4　随机森林的例子 109\n5.5　朴素贝叶斯 109\n5.5.1　朴素贝叶斯概念及其重要假设 110\n5.5.2　朴素贝叶斯例子 110\n5.6　参考书目 111\n5.7　小结 112\n第6章　集群 113\n6.1　理解集群模型术语 113\n6.2　距离或相似度的度量 114\n6.3　集群技术的评估 115\n6.3.1　内部集群评估 115\n6.3.2　外部集群评估 120\n6.4　k-均值集群 120\n6.4.1　k-均值集群综述 120\n6.4.2　k-均值的假设和陷阱 122\n6.4.3　k-均值集群的例子 123\n6.5　其他集群技术 129\n6.6　参考书目 130\n6.7　小结 130\n第7章　时间序列和异常检测 131\n7.1　在Go中表示时序数据 131\n7.2　理解时间序列的术语 134\n7.3　与时间序列有关的统计 135\n7.3.1　自相关 135\n7.3.2　偏自相关 139\n7.4　预测的自回归模型 141\n7.4.1　自回归模型概述 141\n7.4.2　自回归模型假设和陷阱 142\n7.4.3　自回归模型示例 142\n7.5　自回归移动平均和其他时间序列模型 151\n7.6　异常检测 151\n7.7　参考书目 153\n7.8　小结 154\n第8章　神经网络和深度学习 155\n8.1　理解神经网络术语 155\n8.2　构建一个简单的神经网络 157\n8.2.1　网络中的节点 157\n8.2.2　网络架构 158\n8.2.3　为什么期望这种架构有作用 159\n8.2.4　训练神经网络 160\n8.3　使用简单的神经网络 165\n8.3.1　在实际数据上训练神经网络 166\n8.3.2　评估神经网络 168\n8.4　引入深度学习 169\n8.4.1　什么是深度学习模型 170\n8.4.2　基于Go语言的深度学习 171\n8.5　参考书目 177\n8.6　小结 178\n第9章　部署、分布分析和模型 179\n9.1　在远程机器上可靠地运行模型 179\n9.1.1　Docker和Docker术语简介 180\n9.1.2　Docker化机器学习的应用 181\n9.2　构建可拓展和可重现的机器学习流水线 191\n9.2.1　搭建Pachyderm和Kubernetes集群 192\n9.2.2　构建一个Pachyderm机器学习流水线 193\n9.2.3　更新流水线并检查出处 202\n9.2.4　缩放流水线阶段 204\n9.3　参考书目 206\n9.4　小结 206\n附录　与机器学习相关的算法\/技术 207","pages":"213","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s30002304.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s30002304.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s30002304.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30457083\/","id":"30457083","publisher":"机械工业出版社","isbn10":"7111609794","isbn13":"9787111609797","title":"机器学习：Go语言实现","url":"https:\/\/api.douban.com\/v2\/book\/30457083","alt_title":"Machine Learning With go","author_intro":"","summary":"本书不仅清楚地介绍了在Go世界中机器学习的技术和编程方面的内容，还有助于读者理解现实分析工作中合理的工作流程和理念。本书的第1章~第3章讲述了在机器学习流程中如何准备和分析数据；第4章~第7章详细介绍了机器学习的技术；第8章和第9章对机器学习进行了深入探究；附录介绍了与机器学习相关的算法\/技术。本书适合作为对Go感兴趣的数据科学家、分析师、工程师和相关专业学生的参考书。","series":{"id":"36676","title":"数据科学与工程技术丛书"},"price":"59.00元"},{"rating":{"max":10,"numRaters":10,"average":"7.2","min":0},"subtitle":"","author":["徐波"],"pubdate":"2018-6","tags":[{"count":18,"name":"Go","title":"Go"},{"count":6,"name":"编程","title":"编程"},{"count":2,"name":"程序猿","title":"程序猿"},{"count":1,"name":"计算机","title":"计算机"},{"count":1,"name":"科幻小说","title":"科幻小说"},{"count":1,"name":"Cellnet","title":"Cellnet"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29785411.jpg","binding":"平装","translator":[],"catalog":"配套学习资源\n前言\n第1章  初识Go语言\n1.1  Go语言特性\n1.2  使用Go的开源项目\n1.3  学会安装Go\n1.3.1  Windows版安装\n1.3.2  Linux版安装\n1.4  搭建开发环境\n1.4.1  集成开发环境Jetbrains Goland\n1.4.2  方便定义功能的编辑器Visual Studio Code\n第2章 基本语法与使用\n2.1  变量\n2.1.1  声明变量\n2.1.2  初始化变量\n2.1.3  多个变量同时赋值\n2.1.4  匿名变量 ——没有名字的变量\n2.2  类型\n2.2.1  整形\n2.2.2  浮点——小数点\n2.2.3  示例：输出正弦（sin）图像\n2.2.4  布尔——是或否\n2.2.5  字符串\n2.2.6  字符\n2.2.7  切片——能动态分配的空间\n2.3  转换不同的数据类型\n2.4  指针\n2.4.1  认识指针地址和指针类型\n2.4.2  从指针获取指针指向的值\n2.4.3  使用指针修改值\n2.4.4  示例：使用指针变量获取命令行的输入信息\n2.4.5  创建指针的另一种方法——new函数\n2.5  变量生命期\n2.5.1  什么是栈？\n2.5.2  什么是堆？\n2.5.3  变量逃逸分析（Escape Analysis）——自动决定变量分配位置，提高运行效率\n2.6  字符串应用\n2.6.1  计算字符串长度\n2.6.2  遍历字符串——获取每一个字符串元素\n2.6.3  获取字符串的某一段字符\n2.6.4  修改字符串\n2.6.5  连接字符串\n2.6.6  格式化字符串——按照指定格式生成字符串\n2.6.7  示例：Base64编码——电子邮件的基础编码格式\n2.6.8  示例：从INI配置文件中查询需要的值\n2.7  常量——恒定不会改变的值\n2.7.2  枚举——一组常量值\n2.7.3  将枚举值转换为字符串\n2.8  类型别名（Type Alias）\n2.8.1  区分类型别名与类型定义\n2.8.2  非本地类型不能定义方法\n2.8.3  在结构体成员嵌入时使用别名\n第3章  容器：存储和组织数据的方式\n3.1  数组——固定大小的连续空间\n3.1.1  声明数组\n3.1.2  初始化数组\n3.1.3  遍历数组——访问每一个数组元素\n3.2  切片（slice）——动态分配大小的连续空间\n3.2.1  从数组或切片生成新的切片\n3.2.2  声明切片\n3.2.3  使用make构造切片\n3.2.4  使用append为切片添加元素\n3.2.5  复制切片元素到另一个切片\n3.2.6  从切片中删除元素\n3.3  映射（map）——建立事物关联的容器\n3.3.1  添加关联到map并访问关联和数据\n3.3.3  遍历map的“键值对”——访问每一个map中的关联关系\n3.3.4  从map中删除键值对（delete）\n3.3.5  清空map中的所有元素\n3.3.6  能够在并发环境中使用的map——sync.Map\n3.4  列表（list）——可以快速增删的非连续空间的容器\n3.4.1  初始化列表\n3.4.2  在列表中插入元素\n3.4.3  从列表中删除元素\n3.4.4  遍历列表——访问列表的每一个元素\n第4章  流程控制\n4.2  构建循环（for）\n4.2.1  for中的初始语句——开始循环时执行的语句\n4.2.2  for中的条件表达式——控制是否循环的开关\n4.2.3  for中的结束语句——每次循环结束时执行的语句\n4.3  示例: 九九乘法表\n4.4  键值循环（for range）——直接获得对象的索引和数据\n4.4.1  遍历数组、切片——获得索引和元素\n4.4.2  遍历字符串——获得字符\n4.4.3  遍历map——获得map的键和值\n4.4.4  遍历通道（channel）——接收通道数据\n4.4.5  在遍历中选择希望获得的变量\n4.5  分支选择（switch）——拥有多个条件分支的判断\n4.5.1  基本写法\n4.5.2  跨越case的fallthrough——兼容C语言的case设计\n4.6  跳转到指定代码标签（goto）\n4.6.1  使用goto退出多层循环\n4.6.2  使用goto集中处理错误\n4.7  跳出指定循环（break）——可以跳出多层循环\n4.8  继续下一次循环（continue）\n第5章  函数（function）\n5.1  声明函数\n5.1.1  普通函数的声明形式\n5.1.2  参数类型的简写\n5.1.3  函数的返回值\n5.1.4  调用函数\n5.1.5  示例：将“秒”解析为时间单位\n5.1.6  示例：函数中的参数传递效果测试\n5.2  函数变量——把函数作为值保存到变量\n5.3  示例：字符串的链式处理——操作与数据分离的设计技巧\n5.4  匿名函数——没有函数名字的函数\n5.4.1  定义一个匿名函数\n5.4.1  匿名函数用作回调函数\n5.4.2  使用匿名函数实现操作封装\n5.5  函数类型实现接口——把函数当做接口调用\n5.5.1  结构体实现接口\n5.5.2  函数体实现接口\n5.5.3  http包中的例子\n5.6  闭包（Closure）——引用了外部变量的匿名函数\n5.6.1  在闭包内部修改引用的变量\n5.6.2  示例：闭包的记忆效应\n5.6.3  示例：闭包实现生成器\n5.7  可变参数——参数数量不固定的函数形式\n5.7.1  fmt包中的例子\n5.7.1  遍历可变参数列表——获取每一个参数的值\n5.7.2  获得可变参数类型——获得每一个参数的类型\n5.7.3  在多个可变参数函数中传递参数\n5.8  延迟执行语句（defer）\n5.8.1  多个延迟执行语句的处理顺序\n5.8.1  使用延迟执行语句在函数退出时释放资源\n5.9  处理运行时发生的错误\n5.9.1  net包中例子\n5.9.1  错误接口的定义格式\n5.9.2  自定义一个错误\n5.9.3  示例：在解析中使用自定义错误\n5.10  宕机（panic）——程序终止运行\n5.10.1  手动触发宕机\n5.10.2  在运行依赖的必备资源缺失时主动触发宕机\n5.10.3  在宕机时触发延迟执行语句\n5.11   宕机恢复（recover）——防止程序崩溃\n5.11.1  让程序在崩溃时继续执行\n5.11.2  panic和recover的关系\n第6章  结构体（struct）\n6.1  定义结构体\n6.2  实例化结构体——为结构体分配内存并初始化\n6.2.1  基本的实例化形式\n6.2.2  创建指针类型的结构体\n6.2.3  取结构体的地址实例化\n6.3  初始化结构体的成员变量\n6.3.1  使用“键值对”初始化结构体\n6.3.2  使用多个值的列表初始化结构体\n6.3.3  初始化匿名结构体\n6.4  构造函数——结构体和类型的一系列初始化操作的函数封装\n6.4.1  多种方式创建和初始化结构体——模拟构造函数重载\n6.4.2  带有父子关系的结构体的构造和初始化——模拟父级构造调用\n6.5  方法\n6.5.1  为结构体添加方法\n6.5.2  接收器——方法作用的目标\n6.5.3  示例：使用二维矢量模拟玩家移动\n6.5.4  为类型添加方法\n6.5.5  示例：使用事件系统实现事件的响应和处理\n6.6  结构体内嵌\n6.6.1  声明结构体内嵌和内嵌的特性\n6.6.2  使用组合思想描述对象特性\n6.6.3  初始化结构体内嵌\n6.6.4  初始化内嵌匿名结构体\n6.6.6  成员名字冲突\n6.7  示例：使用匿名结构体分离JSON数据\n第7章  接口（interface）\n7.1  声明接口\n7.1.1  接口声明的格式\n7.1.2  开发中常见的接口及写法\n7.1  实现接口的条件\n7.1.1  接口被实现的条件一：接口的方法与实现接口的类型方法格式一致\n7.1.2  条件二：接口中所有方法均被实现\n7.2  理解类型与接口的关系\n7.2.1  一个类型可以实现多个接口\n7.2.2  多个类型可以实现相同的接口\n7.3  示例：便于扩展输出方式的日志系统\n7.4  示例：使用接口进行数据的排序\n7.4.1  使用sort.Interface接口进行排序\n7.4.2  常见类型的便捷排序\n7.4.3  对结构体数据进行排序\n7.5  接口的嵌套组合\t——将多个接口放在一个接口内\n7.6  在接口和类型间转换\n7.6.1  类型断言的格式\n7.6.2  将接口转换为其他接口\n7.6.3  将接口转换为其他类型\n7.7  空接口类型（interface{}）——能保存所有值的类型\n7.7.1  将值保存到空接口\n7.7.2  从空接口获取值\n7.7.3  空接口间的值比较\n7.8  示例：使用空接口实现可以保存任意值的字典\n7.9  类型分支——批量判断空接口中变量的类型\n7.9.1  类型断言的书写格式\n7.9.2  使用类型分支判断基本类型\n7.9.3  使用类型分支判断接口类型\n7.10  示例：实现有限状态机（FSM）\n第8章  包（package）\n8.1  工作目录（GOPATH）\n8.1.1  使用命令行查看GOPATH信息\n8.1.2  使用GOPATH的工程结构\n8.1.2  设置和使用GOPATH\n8.1.3  在多项目工程中使用GOPATH\n8.2  创建包（package）——编写自己的代码扩展\n8.3  包在程序启动前的初始化入口：init\n8.4  导出标示符——让外部访问包的类型和值\n8.4.1  导出包内标示符\n8.4.2  导出结构体及接口成员\n8.5  导入包（import）——在代码中使用其他的代码\n8.5.1  默认导入的写法\n8.5.2  导入包后自定义引用的包名\n8.5.2  匿名导入包——只导入包但不使用包内类型和数值\n8.5.3  理解包导入初始化顺序\n8.6 示例：工厂模式自动注册\t——管理多个包的结构体\n第9章  并发\n9.1  轻量级线程（goroutine）——根据需要随时创建的“线程”\n9.1.1  使用普通函数创建goroutine\n9.1.2  使用匿名函数创建goroutine\n9.1.3  调整并发的运行性能（GOMAXPROCS）\n9.1.4  理解并发和并行\n9.1.5  理解Go的协作程序（goroutine）和普通的协作程序（coroutine）\n9.2  通道（channel）\t——在多个goroutine间通信的管道\n9.2.1  通道的特性\n9.2.2  声明通道类型\n9.2.3  创建通道\n9.2.4  使用通道发送数据\n9.2.5  使用通道接收数据\n9.2.6  关闭通道后继续使用通道\n9.2.7  示例：并发打印\n9.2.8  单向通道——通道中的单行道\n9.2.9  带缓冲的通道——允许在通道中保存一定数量的数据\n9.2.10  通道的多路复用——同时处理接收和发送多个通道的数据\n9.2.11  示例：模拟远程过程调用（RPC）\n9.2.12  示例：使用通道响应计时器的事件\n9.3  示例：Telnet回音服务器——TCP服务器的基本结构\n9.4  同步——保证并发环境下数据访问的正确性\n9.4.1  竞态检测——检测代码在并发环境下可能出现的问题\n9.4.2  互斥锁（sync.Mutex）——保证同时只有一个goroutine可以访问共享资源\n9.4.3  读写互斥锁（sync.RWMutex）——在读比写多的环境下比互斥锁更高效\n9.4.4  等待组（sync.WaitGroup）——保证在并发环境中完成指定数量的任务\n第10章  反射\n10.1  反射的类型对象（reflect.Type）\n10.1.1  理解反射的类型（Type）与种类（Kind）\n10.1.2  指针与指针指向的元素\n10.1.3  使用反射获取结构体的成员类型\n10.1.4  结构体标记（Struct Tag）——对结构体字段的额外信息标记\n10.2  反射的值对象(reflect.Value)\n10.2.1  使用反射值对象包装任意值\n10.2.2  从反射值对象获取被包装的值\n10.2.3  使用反射访问结构体的成员字段的值\n10.2.4  判定反射的零值和空\n10.2.5  使用反射值对象修改变量的值\n10.2.6  通过类型创建类型的实例\n10.2.7  使用反射调用函数\n10.3  示例：将结构体的数据保存为JSON格式的文本数据\n第11章  编译与工具\n11.1  编译（go build）\n11.1.1  go build无参数编译\n11.1.2  go build + 文件列表\n11.1.3  go build + 包\n11.1.4  go build编译时的附加参数\n11.2  编译后运行（go run）\n11.3  编译并安装（go install）\n11.2  一键获取代码、编译并安装（go get）\n11.2.1  远程包的路径格式\n11.2.2  go get + 远程包\n11.2.3  go get使用时的附加参数\n11.3  测试（go test）\n11.3.1  单元测试——测试和验证代码的框架\n11.3.2  基准测试——获得代码内存占用和运行效率的性能数据\n11.4  性能分析（go pprof）——发现代码性能问题的调用位置\n11.4.1  安装第三方图形化显式分析数据工具（Graphviz）\n11.4.2  安装第三方性能分析分析代码包\n11.4.3  性能分析代码\n第12章  避坑与技巧\n12.1  合理的使用并发特性\n12.1.1  了解goroutine的生命期时再创建goroutine\n12.1.2  避免在不必要的地方使用通道\n12.2  反射：性能和灵活性的双刃剑\n12.3  接口的nil判断\n12.4  map的多键索引——多个数值条件可以同时查询\n12.4.1  基于哈希值的多键索引及查询\n12.4.2  利用map特性的多键索引及查询\n12.4.3  总结\n12.5  优雅的处理TCP粘包——一套完备的TCP协议的客户端和服务器框架","ebook_url":"https:\/\/read.douban.com\/ebook\/52836811\/","pages":"398","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29785411.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29785411.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29785411.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30240200\/","id":"30240200","publisher":"机械工业出版社","isbn10":"7111598245","isbn13":"9787111598244","title":"Go语言从入门到进阶实战（视频教学版）","url":"https:\/\/api.douban.com\/v2\/book\/30240200","alt_title":"","author_intro":"徐波 游戏行业从业十余年，资深全栈游戏开发者，慕课网讲师，开源爱好者(github.com\/davyxu)，众多Gopher之一。2009年创立“战魂小筑博客”，自2012年开始接触Go语言，开源项目cellnet以及tabtoy导表工具，深受业内好评，并广为流传。","summary":"本书采用“理论+实例”的形式编写，通过大量的实例，结合作者多年的一线开发实战经验，全面介绍了Go语言的语法及使用方法。全书秉承方便学习，易于理解，便于查询的理念，无论是想系统学习Go语言基础知识的初学者，还是想进阶提高的有经验的开发人员，都能通过本书迅速掌握Go语言的各种基础语法和开发技巧。本书作者曾经与慕课网合作录制相关的视频课程，拥有丰富的视频制作经验，所以特意为本书精心录制了详细的配套教学视频，这将极大地提升读者的学习效率，比同类图书取得更好的学习效果。另外，本书还免费提供了书中所有实例源程序，为读者的学习提供便利。","ebook_price":"49.00","price":"99"},{"rating":{"max":10,"numRaters":5,"average":"0.0","min":0},"subtitle":"","author":["黄靖钧"],"pubdate":"2018-9","tags":[{"count":1,"name":"计算机","title":"计算机"},{"count":1,"name":"入门","title":"入门"},{"count":1,"name":"Go","title":"Go"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29869153.jpg","binding":"平装","translator":[],"catalog":"第1章  认识Go语言  1\n1.1  Go语言简介  1\n1.1.1  Go语言简史  1\n1.1.2  Go语言特性  2\n1.1.3  谁适合使用Go语言  2\n1.2  Go语言的开发环境部署  3\n1.2.1  Go语言环境变量  3\n1.2.2  在Linux上安装Go语言环境  3\n1.2.3  在Mac OS上安装Go语言环境  5\n1.2.4  在Windows上安装Go语言环境  5\n1.3  Go语言的基本命令及使用  5\n1.3.1  GOROOT结构  6\n1.3.2  GOPATH结构  7\n1.3.3  Go语言命令行参数  8\n1.3.4  第一个Go语言程序  12\n1.4  Go语言的开发工具  14\n1.4.1  Code\/Atom  14\n1.4.2  VIM-Go  17\n1.4.3  Gogland  18\n1.4.4  LiteIDE  18\n1.4.5  Cloud IDE  19\n1.5  本章小结  23\n第2章  程序结构  24\n2.1  Go语言程序元素  24\n2.1.1  标识符  24\n2.1.2  关键字  25\n2.1.3  字面量  25\n2.1.4  分隔符  25\n2.1.5  运算符  26\n2.1.6  注释  27\n2.2  Go语言基本概念  28\n2.2.1  常量  28\n2.2.2  变量  32\n2.3  本章小结  37\n第3章  基础数据类型  38\n3.1  整型  39\n3.1.1  整型的表示  39\n3.1.2  整型的运算  39\n3.2  浮点型  41\n3.2.1  浮点型的表示  41\n3.2.2  浮点型的运算  42\n3.2.3  复数  42\n3.3  字符与字符串  44\n3.3.1  字符串的表示  44\n3.3.2  操作字符串  46\n3.3.3  字符串格式化  60\n3.4  布尔型  61\n3.4.1  布尔型的表示  61\n3.4.2  布尔型的运算  62\n3.5  基本数据类型的扩展  63\n3.5.1  强制类型转换  63\n3.5.2  自定义类型  64\n3.5.3  类型别名  64\n3.5.4  指针  65\n3.6  本章小结  69\n第4章  流程控制  70\n4.1  条件语句  70\n4.1.1  if判断  71\n4.1.2  if-else判断  71\n4.1.3  else-if判断  73\n4.1.4  初始化子语句  74\n4.2  选择语句  75\n4.2.1  switch语句  75\n4.2.2  switch初始化语句  78\n4.2.3  select语句  79\n4.3  循环语句  80\n4.3.1  for的子语句  81\n4.3.2  range子语句  82\n4.4  延迟语句  84\n4.5  标签  87\n4.5.1  break  87\n4.5.2  continue  89\n4.5.3  goto  90\n4.6  本章小结  91\n第5章  函数  92\n5.1  认识函数  92\n5.1.1  函数的声明  92\n5.1.2  函数的参数  93\n5.1.3  函数的返回值  94\n5.2  函数的基础  95\n5.2.1  多返回值  96\n5.2.2  函数作为参数  97\n5.2.3  函数作为类型  98\n5.2.4  可变参数  99\n5.2.5  匿名函数与闭包  102\n5.2.6  递归函数  106\n5.2.7  内置函数  108\n5.3  函数进阶  108\n5.3.1  参数传递机制  108\n5.3.2  defer与跟踪  111\n5.3.3  错误与恢复  116\n5.4  本章小结  122\n第6章  复合数据类型  123\n6.1  数组  123\n6.1.1  声明数组  123\n6.1.2  访问与修改  124\n6.1.3  多维数组  126\n6.1.4  将数组传递给函数  127\n6.2  切片  128\n6.2.1  创建数组切片  129\n6.2.2  切片的使用  131\n6.2.3  多维切片  137\n6.2.4  将切片传递给函数  137\n6.3  映射  138\n6.3.1  映射的实现  138\n6.3.2  映射的创建  139\n6.3.3  映射的使用  139\n6.3.4  将映射传递给函数  141\n6.4  本章小结  142\n第7章  包  144\n7.1  包的基础  144\n7.1.1  包的结构  146\n7.1.2  包的导入  147\n7.1.3  包的使用  153\n7.1.4  Go语言工具箱  154\n7.2  自定义包  156\n7.2.1  包的制作  157\n7.2.2  特定平台的代码  157\n7.2.3  godoc生成文档  158\n7.2.4  包的打包与发布  159\n7.2.5  自定义包的导入  164\n7.3  本章小结  165\n第8章  结构体与方法  166\n8.1  结构体  166\n8.1.1  结构体定义  166\n8.1.2  结构体使用  172\n8.1.3  带标签的结构体  175\n8.1.4  匿名字段和内嵌结构体  176\n8.2  类型系统  179\n8.2.1  用户自定义类型  179\n8.2.2  值语义和引用语义  182\n8.3  方法  184\n8.3.1  方法声明  184\n8.3.2  为类型添加方法  187\n8.3.3  工厂方法创建结构体  188\n8.3.4  基于指针对象的方法  190\n8.3.5  方法值和方法表达式  191\n8.3.6  方法和未导出字段  193\n8.3.7  嵌入类型的方法和继承  194\n8.4  本章小结  197\n第9章  接口与反射  198\n9.1  接口  198\n9.1.1  接口是什么  199\n9.1.2  接口类型与约定  204\n9.1.3  接口实现  208\n9.1.4  嵌套接口  210\n9.1.5  接口赋值  211\n9.1.6  接口查询  213\n9.1.7  接口组合  214\n9.2  反射  215\n9.2.1  方法和类型的反射  215\n9.2.2  通过反射修改设置值  216\n9.2.3  反射结构  218\n9.2.4  Printf和反射  220\n9.3  本章小结  222\n第10章  并发编程  223\n10.1  并发编程基础  223\n10.1.1  并发与并行  223\n10.1.2  指定使用核心数  225\n10.2  协程（goroutine）  227\n10.2.1  协程基础  228\n10.2.2  协程间通信  229\n10.3  通道（channel）  231\n10.3.1  基本语法  232\n10.3.2  select  232\n10.3.3  缓冲机制  233\n10.3.4  超时和计时器  234\n10.3.5  channel的传递  235\n10.3.6  单向channel  236\n10.3.7  关闭channel  237\n10.4  并发进阶  237\n10.4.1  多核并行化  237\n10.4.2  协程同步  239\n10.4.3  协程和恢复  242\n10.5  本章小结  243\n第11章  网络编程  244\n11.1  Socket编程  244\n11.1.1  什么是Socket  244\n11.1.2  Dial()函数  246\n11.1.3  ICMP示例  247\n11.1.4  TCP Socket  249\n11.1.5  UDP Socket  253\n11.2  HTTP编程  255\n11.2.1  HTTP客户端  255\n11.2.2  HTTP服务器端  260\n11.3  RPC编程  262\n11.3.1  Go RPC  263\n11.3.2  HTTP RPC  263\n11.3.3  TCP RPC  266\n11.3.4  JSON RPC  268\n11.3.5  RPC接口  271\n11.4  数据库  272\n11.4.1  database\/sql接口  272\n11.4.2  使用MySQL数据库  277\n11.4.3  使用SQLite数据库  280\n11.4.4  使用PostgreSQL数据库  282\n11.4.5  NoSQL数据库操作  286\n11.5  Go语言使用Cookie  287\n11.5.1  设置Cookie  287\n11.5.2  读取Cookie  288\n11.6  本章小结  288\n第12章  I\/O编程  289\n12.1  输入\/输出  289\n12.1.1  io：基本I\/O接口  289\n12.1.2  fmt：格式化I\/O  292\n12.1.3  文本处理  298\n12.2  文件系统  298\n12.2.1  os：系统功能实现  298\n12.2.2  path：兼容路径操作  299\n12.3  数据结构与算法  303\n12.3.1  排序  304\n12.3.2  container  310\n12.4  本章小结  314\n第13章  文件处理  315\n13.1  文件操作  315\n13.1.1  创建文件与查看状态  316\n13.1.2  重命名与移动  319\n13.1.3  打开与关闭  319\n13.1.4  删除与截断  321\n13.1.5  读写文件  321\n13.1.6  权限控制  325\n13.1.7  文件链接  328\n13.2  XML处理  330\n13.2.1  解析XML  330\n13.2.2  生成XML  333\n13.3  JSON处理  336\n13.3.1  解析JSON  336\n13.3.2  生成JSON  338\n13.4  日志记录  340\n13.4.1  Logrus  341\n13.4.2  Seelog  342\n13.5  压缩  343\n13.5.1  打包与解包  343\n13.5.2  压缩与解压  345\n13.6  本章小结  347\n第14章  安全与测试  348\n14.1  安全  348\n14.1.1  安全相关的基础概念  348\n14.1.2  通信安全  350\n14.2  测试  354\n14.2.1  单元测试  354\n14.2.2  基准测试  362\n14.3   本章小结  368\n第15章  内存管理  369\n15.1  内存分配  369\n15.1.1  内存管理基本概念  369\n15.1.2  逃逸分析  373\n15.2  TCMalloc  376\n15.2.1  整体结构  377\n15.2.2  小内存分配  378\n15.2.3  CentralCache  379\n15.2.4  大内存分配  381\n15.3  Mspan（内存管理器）  384\n15.4  垃圾回收  398\n15.4.1  标记清理算法  399\n15.4.2  标记实现  403\n15.4.3  清理  406\n15.4.4  监控  408\n15.5  本章小结  408","pages":"420","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29869153.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29869153.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29869153.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30325764\/","id":"30325764","publisher":"电子工业出版社","isbn10":"7121349663","isbn13":"9787121349669","title":"Go语言编程入门与实战技巧","url":"https:\/\/api.douban.com\/v2\/book\/30325764","alt_title":"","author_intro":"黄靖钧：全栈开发者，长期以来一直使用Go语言开发网络应用，在Go语言编程方面经验丰富。热衷开源，深度参与Docker及其生态建设，积极为Potainer等众多著名项目贡献代码。曾任PaaS与CaaS等类型项目的后端Go开发，现从事基础设施架构与数据中心开发工作，专注高并发、微服务领域的研究。","summary":"《Go语言编程入门与实战技巧》从内容上分为三大部分，第一部分主要介绍Go语言的基础知识，包括Go语言的安装和开发工具，介绍了Go语言的特性与适合的场景，然后讲解了Go语言的程序结构和数据类型，并针对函数和一些关键字的用法与数据类型的调用原理做了阐述。第二部分介绍了Go语言数据结构和标准库，结合实际应用场景探讨了日常生产环境会遇到的问题与解决办法。第三部分主要介绍Go语言的测试工具和用法，并重点讲解了Go语言的内存管理机制，深入理解Go语言的设计哲学，了解Go语言底层的内存管理和并发机制，为更进一步的学习打下坚实的基础。\n《Go语言编程入门与实战技巧》适合对计算机编程尤其是对Go语言编程感兴趣的新手作为入门教程阅读，还适合想在Web开发领域有所发展的程序员学习","price":"79.00元"},{"rating":{"max":10,"numRaters":18,"average":"7.5","min":0},"subtitle":"","author":["李文塔"],"pubdate":"2018-9","tags":[{"count":13,"name":"Go","title":"Go"},{"count":4,"name":"软件开发","title":"软件开发"},{"count":3,"name":"计算机","title":"计算机"},{"count":2,"name":"入门","title":"入门"},{"count":2,"name":"programming","title":"programming"},{"count":2,"name":"GO","title":"GO"},{"count":1,"name":"专业","title":"专业"},{"count":1,"name":"computer","title":"computer"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29895210.jpg","binding":"","translator":[],"catalog":"第1章  基础知识\n1.1  语言简介\n1.1.1  Go语言的诞生背景\n1.1.2  语言特性\n1.1.3  Go语言的特性\n1.1.4  总结\n1.2  初识Go程序\n1.3  Go词法单元\n1.3.1  token\n1.3.2  标识符\n1.3.3  操作符（operators）和分隔符（delimiters）\n1.3.4  字面常量\n1.3.5  总结\n1.4  变量和常量\n1.4.1  变量\n1.4.2  常量\n1.5  基本数据类型\n1.5.1  布尔类型\n1.5.2  整型\n1.5.3  浮点型\n1.5.4  复数类型\n1.5.5  字符串\n1.5.6  rune类型\n1.6  复合数据类型\n1.6.1  指针\n1.6.2  数组\n1.6.3  切片\n1.6.4  map\n1.6.5  struct\n1.7  控制结构\n1.7.1  if语句\n1.7.2  switch语句\n1.7.3  for语句\n1.7.4  标签和跳转\n第2章  函数\n2.1  基本概念\n2.1.1  函数定义\n2.1.2  多值返回\n2.1.3  实参到形参的传递\n2.1.4  不定参数\n2.2  函数签名和匿名函数\n2.2.1  函数签名\n2.2.2  匿名函数\n2.3  defer\n2.4  闭包\n2.4.1  概念\n2.4.2  闭包的价值\n2.5  panic和recover\n2.5.1  基本概念\n2.5.2  使用场景\n2.6  错误处理\n2.6.1  error\n2.6.2  错误和异常\n2.7  底层实现\n2.7.1  函数调用规约\n2.7.2  汇编基础\n2.7.3  多值返回分析\n2.7.4  闭包底层实现\n第3章  类型系统\n3.1  类型简介\n3.1.1  命名类型和未命名类型\n3.1.2  底层类型\n3.1.3  类型相同和类型赋值\n3.1.4  类型强制转换\n3.2  类型方法\n3.2.1  自定义类型\n3.2.2  方法\n3.3  方法调用\n3.3.1  一般调用\n3.3.2  方法值（method value）\n3.3.3  方法表达式（method expression）\n3.3.4  方法集（method set）\n3.3.5  值调用和表达式调用的方法集\n3.4  组合和方法集\n3.4.1  组合\n3.4.2  组合的方法集\n3.5  函数类型\n第4章  接口\n4.1  基本概念\n4.1.1  接口声明\n4.1.2  接口初始化\n4.1.3  接口方法调用\n4.1.4  接口的动态类型和静态类型\n4.2  接口运算\n4.2.1  类型断言（Type Assertion）\n4.2.2  类型查询（Type Switches）\n4.2.3  接口优点和使用形式\n4.3  空接口\n4.3.1  基本概念\n4.3.2  空接口的用途\n4.3.3  空接口和nil\n4.4  接口内部实现\n4.4.1  数据结构\n4.4.2  接口调用过程分析\n4.4.3  接口调用代价\n4.4.4  空接口数据结构\n第5章  并发\n5.1  并发基础\n5.1.1  并发和并行\n5.1.2  goroutine\n5.1.3  chan\n5.1.4  WaitGroup\n5.1.5  select\n5.1.6  扇入（Fan in）和扇出（Fan out）\n5.1.7  通知退出机制\n5.2  并发范式\n5.2.1  生成器\n5.2.2  管道\n5.2.3  每个请求一个goroutine\n5.2.4  固定worker工作池\n5.2.5  future模式\n5.3  context标准库\n5.3.1  context的设计目的\n5.3.2  基本数据结构\n5.3.3  API函数\n5.3.4  辅助函数\n5.3.5  context的用法\n5.3.6  使用context传递数据的争议\n5.4  并发模型\n5.4.1  CSP简介\n5.4.2  调度模型\n5.4.3  并发和调度\n第6章  反射\n6.1  基本概念\n6.1.1  基本数据结构和入口函数\n6.1.2  基础类型\n6.1.3  类型汇总\n6.2  反射规则\n6.2.1  反射API\n6.2.2  反射三定律\n6.3  inject库\n6.3.1  inject是什么\n6.3.2  依赖注入和控制反转\n6.3.3  inject实践\n6.3.4  inject原理分析\n6.4  反射的优缺点\n6.4.1  反射的优点\n6.4.2  反射的缺点\n6.4.3  反射的最佳实践\n第7章  语言陷阱\n7.1  多值赋值和短变量声明\n7.1.1  多值赋值\n7.1.2  短变量的声明和赋值\n7.2  range复用临时变量\n7.3  defer陷阱\n7.4  切片困惑\n7.4.1  数组\n7.4.2  切片\n7.5  值、指针和引用\n7.5.1  传值还是传引用\n7.5.2  函数名的意义\n7.5.3  引用语义\n7.6  习惯用法\n7.6.1  干净与强迫症\n7.6.2  comma,ok表达式\n7.6.3  简写模式\n7.6.4  包中的函数或方法设计\n7.6.5  多值返回函数\n第8章  工程管理\n8.1  编程环境\n8.1.1  环境搭建\n8.1.2  工程结构\n8.1.3  交叉编译\n8.2  命名空间和作用域\n8.2.1  命名空间\n8.2.2  作用域\n8.2.3  变量覆盖\n8.3  包的基本概念\n8.3.1  基本概念\n8.3.2  包引用\n8.3.3  包加载\n8.4  第三方包管理\n8.4.1  vendor\n8.4.2  dep\n第9章  编程哲学\n9.1  Go语言设计哲学\n9.1.1  少即是多\n9.1.2  世界是并行的\n9.1.3  组合优于继承\n9.1.4  非侵入式的接口\n9.1.5  总结\n9.2  Go语言发展史\n9.2.1  站在巨人的肩膀上\n9.2.2  里程碑\n9.3  未来\n9.3.1  争议\n9.3.2  Go 2","pages":"280","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29895210.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29895210.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29895210.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30351288\/","id":"30351288","publisher":"电子工业出版社","isbn10":"7121349116","isbn13":"9787121349119","title":"Go语言核心编程","url":"https:\/\/api.douban.com\/v2\/book\/30351288","alt_title":"","author_intro":"李文塔，现就职于腾讯，FiT（前身为财付通）支付账户核心DBA，高级工程师。近十年金融系统开发、运维经验，先后参与2016年到2018年微信春节红包项目和支付账户核心多地多活容灾项目。\n2012年开始接触Go语言，是国内较早的Go语言实践者之一。","summary":"《Go语言核心编程》是一本系统介绍Go 语言编程的书籍。首先介绍Go 语言的基础知识，使读者对Go 语言有一个整体的认知。接着围绕Go 语言的三大语言特性：类型系统、接口和并发展开论述，《Go语言核心编程》不单单介绍每个语言特性怎么使用，在章节的最后还对重要语言特性的底层实现原理做了介绍。接着介绍反射这个高级语言特征。此外，《Go语言核心编程》专门用一章的篇幅来介绍Go 语言的陷阱。最后介绍Go 语言的工程实践和编程思想。相信《Go语言核心编程》能够帮助读者快速、深入地了解和学习这门语言。\n《Go语言核心编程》适合各个层次的Go 语言开发者阅读，初学者可以系统地从头学习，有一定的编程经验者可以选择性地阅读本书。","price":"79"},{"rating":{"max":10,"numRaters":4,"average":"0.0","min":0},"subtitle":"","author":[],"pubdate":"","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","large":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","medium":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif"},"alt":"https:\/\/book.douban.com\/subject\/30724184\/","id":"30724184","publisher":"","isbn10":"7111617509","isbn13":"9787111617501","title":"Go语言实战","url":"https:\/\/api.douban.com\/v2\/book\/30724184","alt_title":"","author_intro":"","summary":"","price":"69.30元"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":[],"pubdate":"","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","large":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","medium":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif"},"alt":"https:\/\/book.douban.com\/subject\/34792565\/","id":"34792565","publisher":"","isbn10":"7302523010","isbn13":"9787302523017","title":"Go语言编程实战","url":"https:\/\/api.douban.com\/v2\/book\/34792565","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":1,"average":"0.0","min":0},"subtitle":"","author":[],"pubdate":"","tags":[],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s33459745.jpg","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s33459745.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s33459745.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s33459745.jpg"},"alt":"https:\/\/book.douban.com\/subject\/34798021\/","id":"34798021","publisher":"","isbn10":"7111630726","isbn13":"9787111630722","title":"深入学习Go语言","url":"https:\/\/api.douban.com\/v2\/book\/34798021","alt_title":"","author_intro":"","summary":"","series":{"id":"48803","title":"信息科学与技术丛书"},"price":""},{"rating":{"max":10,"numRaters":84,"average":"9.4","min":0},"subtitle":"","author":["艾伦A.A.多诺万 (Alan A.A.Donovan)","布莱恩W.柯尼汉 (Brian W.Kemighan)"],"pubdate":"2016-1-1","tags":[{"count":79,"name":"Go","title":"Go"},{"count":55,"name":"golang","title":"golang"},{"count":34,"name":"编程","title":"编程"},{"count":33,"name":"计算机","title":"计算机"},{"count":28,"name":"编程语言","title":"编程语言"},{"count":19,"name":"软件开发","title":"软件开发"},{"count":18,"name":"Programming","title":"Programming"},{"count":17,"name":"程序设计","title":"程序设计"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29140891.jpg","binding":"平装","translator":[],"catalog":"","pages":"366","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29140891.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29140891.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29140891.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26859123\/","id":"26859123","publisher":"机械工业出版社","isbn10":"7111526287","isbn13":"9787111526285","title":"Go程序设计语言(英文版)","url":"https:\/\/api.douban.com\/v2\/book\/26859123","alt_title":"","author_intro":"","summary":"","series":{"id":"1895","title":"经典原版书库"},"price":"CNY 79.00"},{"rating":{"max":10,"numRaters":8,"average":"0.0","min":0},"subtitle":"","author":["王鹏"],"pubdate":"2014-1","tags":[{"count":9,"name":"go","title":"go"},{"count":5,"name":"go语言","title":"go语言"},{"count":3,"name":"编程","title":"编程"},{"count":3,"name":"程序设计","title":"程序设计"},{"count":1,"name":"yuyan","title":"yuyan"},{"count":1,"name":"Programming","title":"Programming"},{"count":1,"name":"Go","title":"Go"}],"origin_title":"王鹏","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s27316465.jpg","binding":"平装","translator":[],"catalog":"","pages":"350","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s27316465.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s27316465.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s27316465.jpg"},"alt":"https:\/\/book.douban.com\/subject\/25919900\/","id":"25919900","publisher":"清华大学出版社","isbn10":"7302347239","isbn13":"9787302347231","title":"Go语言程序设计","url":"https:\/\/api.douban.com\/v2\/book\/25919900","alt_title":"王鹏","author_intro":"","summary":"本书是Go语言程序基础教程。","price":"39"},{"rating":{"max":10,"numRaters":82,"average":"7.1","min":0},"subtitle":"谁发明了那些经典的编程语言","author":["[美] 史蒂夫·洛尔"],"pubdate":"2014-7","tags":[{"count":35,"name":"计算机","title":"计算机"},{"count":35,"name":"编程","title":"编程"},{"count":33,"name":"历史","title":"历史"},{"count":31,"name":"软件开发","title":"软件开发"},{"count":23,"name":"计算机科学","title":"计算机科学"},{"count":22,"name":"编程语言","title":"编程语言"},{"count":22,"name":"科普","title":"科普"},{"count":8,"name":"软件","title":"软件"}],"origin_title":"Go to: the story of the math majors, bridge players, engineers, chess wizards, maverick scientists and iconoclasts : the programmers who created the software revolution","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s27308495.jpg","binding":"平装","translator":["张沛玄"],"catalog":"版权声明\n献辞\n译者序\n致谢\n第1章　引言：软件和编程艺术的兴起\n第2章　FORTRAN：早期的“转折点”\n第3章　20世纪60年代的惨痛教训：从繁盛到COBOL和IBM 360计划成为现实\n第4章　打破巨型计算机的控制：Unix和C\n第5章　为大众编程：从达特茅斯的BASIC到Visual Basic\n第6章　欧洲的影响力：从Algol到Pascal再到C++\n第7章　属于自己的计算机：PC产业的起步及Word的故事\n第8章　服务于大众的计算机：从Gooey到Macintosh的漫漫长路\n第9章　为每一个人编程：让用户自己动手\n第10章　Java：杂乱中诞生的新语言\n第11章　一定有更好的方式：Apache和开源运动\n后记\n参考文献","ebook_url":"https:\/\/read.douban.com\/ebook\/5343172\/","pages":"259","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s27308495.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s27308495.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s27308495.jpg"},"alt":"https:\/\/book.douban.com\/subject\/25911182\/","id":"25911182","publisher":"人民邮电出版社","isbn10":"7115355088","isbn13":"9787115355089","title":"软件故事","url":"https:\/\/api.douban.com\/v2\/book\/25911182","alt_title":"Go to: the story of the math majors, bridge players, engineers, chess wizards, maverick scientists and iconoclasts : the programmers who created the software revolution","author_intro":"Steve Lohr，《纽约时报》高级作家和技术通讯记者，U .S. v. Microsoft一书合著者，现居住于纽约。","summary":"“本书语言流畅细腻，读起来如沐春风。它犹如一部波澜壮阔的计算机史诗，讲述了软件革命的恢弘历史，以及中流砥柱们的光辉事迹。故事并不是断断续续的，因为作者采用了微型传记的形式……他把历史写成了优美的散文，生动迷人又严谨有度。”\n——David Gelernter，《纽约时报》\n“这是一本给人启迪的著作，完美地展现了想象力的巨大力量。如果你想象得到，并把它编成代码，那么一定能够改变世界！”\n——Boston Sunday Globe\n“本书把难懂的技术概念讲解得通俗易懂。对于那些对计算机内在结构好奇的人，这是一本能让其豁然开朗的好书。计算机科学界的前辈John McCarthy曾向作者抱怨过新闻记者的无知，本书就是作者对此作出的回应……与计算机行业相关的所有新闻记者都应该读一读这本书。”\n——《纽约时报书评》\n“这不是一本通常意义上的书，而是一部史诗。它讲述的不是技术，而是那些设计编程语言和计算机软件的名人的故事……本书内容清晰易懂，简明扼要。软件工程让程序员不需要材料和工具也能有所创造，他们为此兴奋不已。他们能够凭空创造新的事物，唯一的限制就是自己的想象力。”\n——《国际先驱论坛报》\n“如果本书作者是一名程序员，那么他写的代码一定清晰有序，不需要复杂的结构或者奇怪的快捷方式就能跳转到正确的子程序上；他的写作风格也是如此。本书化繁为简，让读者与数学专家、桥牌高手、象棋大师、特立独行的科学家、批判传统观念的人，以及掀起软件革命的程序员们进行了一次愉悦的会面。”\n——《新闻周刊》\n“本书展现了技术缔造者们面对的挑战，是本旷世杰作。”\n——《自然》周刊\n聆听软件行业发展的精彩故事\n领悟软件巨擘的深邃思想\n放飞想象力，通过编码改变世界\nSteve Lohr（作者）《纽约时报》高级作家和技术通讯记者，U .S. v. Microsoft一书合著者，现居住于纽约。\n张沛玄（译者）1992年毕业于北京理工大学飞行器工程系固体火箭发动机专业，获得工学学士学位。2001年重回母校管理与经济学院就读，2004年毕业并获工商管理硕士学位。早年他曾从事软件开发，担任IT公司高级管理工作多年。","ebook_price":"18.00","price":"49.00 元"},{"rating":{"max":10,"numRaters":13,"average":"5.6","min":0},"subtitle":"原理、架构及Go语言实现","author":["胡世杰"],"pubdate":"2019-1-1","tags":[{"count":8,"name":"缓存","title":"缓存"},{"count":8,"name":"Go","title":"Go"},{"count":4,"name":"计算机","title":"计算机"},{"count":4,"name":"编程","title":"编程"},{"count":4,"name":"Golang","title":"Golang"},{"count":2,"name":"编程语言","title":"编程语言"},{"count":1,"name":"计算机科学","title":"计算机科学"},{"count":1,"name":"架构设计","title":"架构设计"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s30002049.jpg","binding":"平装","translator":[],"catalog":"第 1部分 基本功能\n第　1章 基于HTTP的内存缓存服务　3\n1．1　缓存服务的接口　3\n1．1．1　REST接口　3\n1．1．2　缓存Set流程　5\n1．1．3　缓存Get流程　6\n1．1．4　缓存Del流程　7\n1．2　Go语言实现　8\n1．2．1　main包的实现　8\n1．2．2　cache包的实现　9\n1．2．3　HTTP包的实现　14\n1．3　功能演示　19\n1．4　与Redis比较　21\n1．4．1　Redis介绍　21\n1．4．2　redis-benchmark介绍　23\n1．4．3　cache-benchmark介绍　24\n1．4．4　性能对比　26\n1．5　小结　30\n第　2章 基于TCP的内存缓存服务　32\n2．1　基于TCP的缓存协议规范　33\n2．1．1　协议范式　33\n2．1．2　缓存Set流程　35\n2．1．3　缓存Get流程　36\n2．1．4　缓存Del流程　36\n2．2　Go语言实现　37\n2．2．1　main函数的变化　37\n2．2．2　TCP包的实现　38\n2．2．3　客户端的实现　44\n2．3　功能演示　45\n2．4　性能测试　47\n2．5　小结　48\n第3章　数据持久化　50\n3．1　RocksDB简介　50\n3．2　RocksDB性能测试　51\n3．2．1　基本读写性能　52\n3．2．2　大容量测试　52\n3．3　用cgo调用C++库函数　55\n3．4　Go语言实现　58\n3．4．1　main函数的实现　58\n3．4．2　cache包的实现　59\n3．5　功能演示　65\n3．6　性能测试　67\n3．7　小结　69\n第　2部分 性能相关\n第4章　用pipelining加速性能　73\n4．1　pipelining原理　73\n4．2　redis pipelining性能对比　75\n4．3　Go语言实现　77\n4．3．1　main包的实现　77\n4．3．2　cacheClient包的实现　86\n4．4　性能测试　97\n4．5　小结　99\n第5章　批量写入　101\n5．1　批量写入能够提升写入性能的原理　101\n5．2　RocksDB批量写入性能测试　102\n5．3　Go语言实现　103\n5．4　性能测试　108\n5．5　小结　112\n第6章　异步操作　113\n6．1　异步操作能够提升读取性能的原理　114\n6．2　Go语言实现　117\n6．3　性能测试　122\n6．4　小结　127\n第3部分　服务集群\n第7章　分布式缓存　131\n7．1　为什么我们需要集群服务　131\n7．2　负载均衡和一致性散列　133\n7．3　获取节点列表的接口　140\n7．4　Go语言实现　140\n7．4．1　main函数的实现　140\n7．4．2　cluster包的实现　141\n7．4．3　HTTP包的实现　145\n7．4．4　TCP包的实现　147\n7．5　功能演示　149\n7．6　小结　152\n第8章　节点再平衡　154\n8．1　节点再平衡的技术细节　154\n8．2　节点再平衡的接口　155\n8．3　Go语言实现　155\n8．3．1　HTTP包的实现　155\n8．3．2　cache包的实现　157\n8．4　功能演示　162\n8．5　小结　164\n第9章　缓存生存时间　166\n9．1　缓存生存时间的作用　166\n9．2　Go语言实现　167\n9．2．1　main函数的实现　167\n9．2．2　cache包的实现　168\n9．3　功能演示　172\n9．4　小结　174","pages":"174","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s30002049.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s30002049.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s30002049.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30456816\/","id":"30456816","publisher":"人民邮电出版社","isbn10":"7115491380","isbn13":"9787115491381","title":"分布式缓存","url":"https:\/\/api.douban.com\/v2\/book\/30456816","alt_title":"","author_intro":"胡世杰，上海交通大学硕士，目前在七牛云任职技术专家，是私有云存储服务的负责人。\n他是分布式对象存储系统专家，在该领域拥有多年的架构、开发和部署经验，精通C、C++、Perl、Python、Ruby、Go等多种编程语言，熟悉ElasticSearch、RabbitMQ等各种开源软件。之前他还写过一本关于分布式对象存储的图书—《分布式对象存储—原理、架构及Go语言实现》。本书是他的第二部作品。\n除了自己写作，他还致力于技术图书的翻译，是《JavaScript面向对象精要》《Python和HDF5大数据应用》《Python高性能编程》等多部著作的译者。","summary":"随着互联网的飞速发展，各行各业对互联网服务的要求也越来越高，互联网系统很多常见的存储类场景都面临着容量和稳定性风险。此时，本地缓存已无法满足需要，分布式缓存由于其高性能、高可用性等优点迅速被广大互联网公司接受并使用。\n。\n本书共分3个部分，每个部分都有3章。第1部分为基本功能的实现，主要介绍基于HTTP的in memory缓存服务、HTTP\/REST协议、TCP等。第2部分介绍性能相关的内容，我们将集中全力讲解从各方面提升缓存服务性能的方法，主要包括pipeline的原理、RocksDB批量写入等。最后一个部分则和分布式缓存服务集群有关，主要介绍分布式缓存集群、节点的再平衡功能等。本书选择用来实现分布式缓存的编程语言是当前流行的Go语言。\n本书适合从事缓存方面工作的工程师或架构师，也适合想要学习和实现分布式缓存的读者。","price":"49.00"},{"rating":{"max":10,"numRaters":258,"average":"7.6","min":0},"subtitle":"","author":["谢孟军"],"pubdate":"2013-6-1","tags":[{"count":167,"name":"Go","title":"Go"},{"count":147,"name":"golang","title":"golang"},{"count":81,"name":"编程","title":"编程"},{"count":78,"name":"go语言","title":"go语言"},{"count":68,"name":"web","title":"web"},{"count":45,"name":"计算机","title":"计算机"},{"count":35,"name":"软件开发","title":"软件开发"},{"count":24,"name":"programming","title":"programming"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s26376659.jpg","binding":"平装","translator":[],"catalog":"第1章 GO语言环境配置\n1.1 Go语言安装\nGo语言的三种安装方式\nGo语言源码安装\nGo语言标准包安装\n第三方工具安装\n1.2 GOPATH与工作空间\nGOPATH设置\n应用目录结构\n编译应用\n获取远程包\n程序的整体结构\n1.3 Go语言命令\nGo语言命令\ngo build\ngo clean\ngo fmt\ngo get\ngo install\ngo test\ngo doc\n其他命令\n1.4 Go语言开发工具\nLiteIDE\nSublime Text\nVim\nEmacs\nEclipse\nIntelliJ IDEA\n1.5 总结\n第2章 Go语言基础\n2.1 你好，Go\n程序\n详解\n小结\n2.2 Go语言基础\n定义变量\n常量\n内置基础类型\n一些技巧\narray、slice、map\n2.3 流程和函数\n流程控制\n函数\n2.4 struct类型\nstruct\n2.5 面向对象\nmethod\n2.6 interface\ninterface\n2.7 并发\ngoroutine\nchannels\nBuffered Channels\nRange和Close\nSelect\n超时\nruntime goroutine\n2.8 总结\n第3章 Web基础\n3.1 Web工作方式\nURL和DNS解析\nHTTP协议详解\n请求实例\n3.2 GO语言搭建一个Web服务器\nhttp包建立Web服务器\n3.3 Go语言如何使Web工作\nWeb工作方式的几个概念\n分析http包运行机制\n3.4 Go语言的http包详解\nConn的goroutine\nServeMux的自定义\nGo语言代码的执行流程\n3.5 总结\n第4章 表单\n4.1 处理表单的输入\n4.2 验证表单的输入\n必填字段\n数字\n中文\n英文\n电子邮件地址\n手机号码\n下拉菜单\n单选按钮\n复选框\n日期和时间\n身份证号码\n4.3 预防跨站脚本\n4.4 防止多次递交表单\n4.5 处理文件上传\n客户端上传文件\n4.6 总结\n第5章 访问数据库\n5.1 database\/sql接口\nsql.Register\ndriver.Driver\ndriver.Conn\ndriver.Stmt\ndriver.Tx\ndriver.Execer\ndriver.Result\ndriver.Rows\ndriver.RowsAffected\ndriver.Value\ndriver.ValueConverter\ndriver.Valuer\ndatabase\/sql\n5.2 使用MySQL数据库\nMySQL驱动\n示例代码\n5.3 使用SQLite数据库\n驱动\n实例代码\n5.4 使用PostgreSQL数据库\n驱动\n实例代码\n5.5 使用beedb库进行ORM开发\n安装\n如何初始化\n插入数据\n更新数据\n查询数据\n删除数据\n关联查询\nGroup By和Having\n进一步的发展\n5.6 NOSQL数据库操作\nredis\nMongoDB\n5.7 总结\n第6章 Session和数据存储\n6.1 Session和Cookie\nCookie\nSession\n小结\n6.2 Go语言如何使用Session\nSession创建过程\nGo语言实现Session管理\n6.3 Session存储\n6.4 预防Session劫持\nSession劫持过程\nSession劫持防范\n6.5 总结\n第7章 文本处理\n7.1 XML处理\n解析XML\n输出XML\n7.2 JSON处理\n解析JSON\n生成JSON\n7.3 正则处理\n通过正则判断是否匹配\n通过正则获取内容\n7.4 模板处理\n什么是模板\nGo语言模板使用\n模板中如何插入数据\nMust操作\n嵌套模板\n小结\n7.5 文件操作\n目录操作\n文件操作\n7.6 字符串处理\n字符串操作\n字符串转换\n7.7 总结\n第8章 Web服务\n8.1 Socket编程\n什么是Socket\nSocket如何通信\nSocket基础知识\nTCP Socket\nUDP Socket\n小结\n8.2 WebSocket\nWebSocket原理\nGo语言实现WebSocket\n8.3 REST\n什么是REST\nRESTful的实现\n小结\n8.4 RPC\nRPC工作原理\nGo RPC\n小结\n8.5 总结\n第9章 安全与加密\n9.1 预防CSRF攻击\n什么是CSRF\nCSRF的原理\n如何预防CSRF\n总结\n9.2 确保输入过滤\n识别数据\n过滤数据\n区分过滤数据\n小结\n9.3 避免XSS攻击\n什么是XSS\nXSS的原理\n如何预防XSS\n小结\n9.4 避免SQL注入\n什么是SQL注入\nSQL注入实例\n如何预防SQL注入\n小结\n9.5 存储密码\n普通方案\n进阶方案\n专家方案\n总结\n9.6 加密和解密数据\nbase64加解密\n高级加解密\n小结\n9.7 总结\n第10章 国际化和本地化\n10.1 设置默认地区\n什么是Locale\n设置Locale\n小结\n10.2 本地化资源\n本地化文本信息\n本地化日期和时间\n本地化货币值\n本地化视图和资源\n小结\n10.3 国际化站点\n管理多个本地包\n自动加载本地包\ntemplate mapfunc\n小结\n10.4 总结\n第11章 错误处理，调试和测试\n11.1 错误处理\nError类型\n自定义error\n错误处理\n小结\n11.2 使用GDB调试\nGDB调试简介\n常用命令\n调试过程\n小结\n11.3 Go语言怎么写测试用例\n如何编写测试用例\n如何编写压力测试\n小结\n11.4 总结\n第12章 部署与维护\n12.1 应用日志\nseelog介绍\n基于seelog的自定义日志处理\n发生错误发送邮件\n使用应用日志\n小结\n12.2 网站错误处理\n错误处理的目标\n如何处理错误\n如何处理异常\n小结\n12.3 应用部署\ndaemon\nSupervisord\n小结\n12.4 备份和恢复\n应用备份\nMySQL备份\nMySQL恢复\nredis备份\nredis恢复\n小结\n12.5 总结\n第13章 如何设计一个Web框架\n13.1 项目规划\ngopath以及项目设置\n应用程序流程图\n目录结构\n框架设计\n总结\n13.2 自定义路由器设计\nHTTP路由\n默认的路由实现\nbeego框架路由实现\n13.4 日志和配置设计\n日志和配置的重要性\nbeego的日志设计\nbeego的配置设计\n应用指南\n13.5 实现博客的增删改\n博客目录\n博客路由\n数据库结构\n控制器\nmodel层\nview层\n13.6 总结\n第14章 扩展Web框架\n14.1 静态文件支持\nbeego静态文件实现和设置\nBootstrap集成\n14.2 Session支持\nSession集成\nSession使用\n14.3 表单及验证支持\n表单和验证\n表单类型\n表单验证\n14.4 用户认证\nHTTP Basic和HTTP Digest认证\noauth和oauth2的认证\n自定义认证\n14.5 多语言支持\ni18n集成\n多语言开发使用\n14.6 pprof支持\nbeego支持pprof 使用入门\n14.7 小结\n附录A 参考资料","ebook_url":"https:\/\/read.douban.com\/ebook\/5956758\/","pages":"329","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s26376659.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s26376659.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s26376659.jpg"},"alt":"https:\/\/book.douban.com\/subject\/24316255\/","id":"24316255","publisher":"电子工业出版社","isbn10":"7121200910","isbn13":"9787121200915","title":"Go Web编程","url":"https:\/\/api.douban.com\/v2\/book\/24316255","alt_title":"","author_intro":"谢孟军，网名ASTA谢，现就职于盛大云，高级研究员，技术经理，主要从事盛大云分发的系统研发工作，努力为盛大游戏、盛大文学、酷六等提供更好的CDN服务。热爱技术，尤其关注实现服务器端高性能、高可用等相关技术。开发了beego、beedb等各类基于Go语言的开源框架和库，致力于Go语言的推广和研究。","summary":"《Go Web编程》介绍如何用Go语言进行Web应用的开发，将Go语言的特性与Web开发实战组合到一起，帮读者成功地构建跨平台的应用程序，节省Go语言开发Web的宝贵时间。有了这些针对真实问题的解决方案放在手边，大多数编程难题都会迎刃而解。\n在《Go Web编程》中，读者可以更加方便地找到各种编程问题的解决方案，内容涵盖文本处理、表单处理、Session管理、数据库交互、加\/解密、国际化和标准化，以及程序的部署维护等运维方面的知识，最后还介绍了一个快速开发的框架帮助您迅速进入Go语言的Web开发。","ebook_price":"30.00","price":"65.00元"},{"rating":{"max":10,"numRaters":47,"average":"7.2","min":0},"subtitle":"","author":["郝　林"],"pubdate":"2017-4","tags":[{"count":44,"name":"Go","title":"Go"},{"count":26,"name":"并发编程","title":"并发编程"},{"count":18,"name":"Golang","title":"Golang"},{"count":15,"name":"计算机","title":"计算机"},{"count":11,"name":"编程","title":"编程"},{"count":10,"name":"并行","title":"并行"},{"count":9,"name":"程序设计","title":"程序设计"},{"count":8,"name":"golang","title":"golang"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29421945.jpg","binding":"平装","translator":[],"catalog":"第1章　初识Go语言　　1\n1.1　语言特性　　1\n1.2　安装和设置　　2\n1.3　工程结构　　3\n1.3.1　工作区　　3\n1.3.2　GOPATH　　4\n1.3.3　源码文件　　5\n1.3.4　代码包　　8\n1.4　标准命令简述　　11\n1.5　问候程序　　13\n1.6　小结　　14\n第2章　语法概览　　15\n2.1　基本构成要素　　15\n2.1.1　标识符　　15\n2.1.2　关键字　　16\n2.1.3　字面量　　17\n2.1.4　操作符　　17\n2.1.5　表达式　　19\n2.2　基本类型　　20\n2.3　高级类型　　22\n2.3.1　数组　　23\n2.3.2　切片　　23\n2.3.3　字典　　24\n2.3.4　函数和方法　　25\n2.3.5　接口　　28\n2.3.6　结构体　　29\n2.4　流程控制　　30\n2.4.1　代码块和作用域　　30\n2.4.2　if语句　　32\n2.4.3　switch语句　　32\n2.4.4　for语句　　34\n2.4.5　defer语句　　36\n2.4.6　panic和recover　　38\n2.5　聊天机器人　　40\n2.6　小结　　44\n第3章　并发编程综述　　45\n3.1　并发编程基础　　45\n3.1.1　串行程序与并发程序　　46\n3.1.2　并发程序与并行程序　　46\n3.1.3　并发程序与并发系统　　47\n3.1.4　并发程序的不确定性　　47\n3.1.5　并发程序内部的交互　　47\n3.2　多进程编程　　48\n3.2.1　进程　　48\n3.2.2　关于同步　　55\n3.2.3　管道　　60\n3.2.4　信号　　65\n3.2.5　socket　　74\n3.3　多线程编程　　97\n3.3.1　线程　　98\n3.3.2　线程的同步　　107\n3.4　多线程与多进程　　125\n3.5　多核时代的并发编程　　126\n3.6　小结　　130\n第4章　Go的并发机制　　131\n4.1　原理探究　　131\n4.1.1　线程实现模型　　132\n4.1.2　调度器　　142\n4.1.3　更多细节　　158\n4.2　goroutine　　160\n4.2.1　go语句与goroutine　　160\n4.2.2　主goroutine的运作　　166\n4.2.3　runtime包与goroutine　　166\n4.3　channel　　169\n4.3.1　channel的基本概念　　169\n4.3.2　单向channel　　180\n4.3.3　for语句与channel　　184\n4.3.4　select语句　　185\n4.3.5　非缓冲的channel　　190\n4.3.6　time包与channel　　192\n4.4　实战演练：载荷发生器　　198\n4.4.1　参数和结果　　199\n4.4.2　基本结构　　201\n4.4.3　初始化　　206\n4.4.4　启动和停止　　212\n4.4.5　调用器和功能测试　　221\n4.5　小结　　231\n第5章　同　　步　　232\n5.1　锁的使用　　232\n5.1.1　互斥锁　　232\n5.1.2　读写锁　　236\n5.1.3　锁的完整示例　　238\n5.2　条件变量　　244\n5.3　原子操作　　247\n5.3.1　增或减　　247\n5.3.2　比较并交换　　249\n5.3.3　载入　　250\n5.3.4　存储　　251\n5.3.5　交换　　251\n5.3.6　原子值　　252\n5.3.7　应用于实际　　256\n5.4　只会执行一次　　257\n5.5　WaitGroup　　258\n5.6　临时对象池　　262\n5.7　实战演练——Concurrent Map　　265\n5.8　小结　　280\n第6章　网络爬虫框架设计和实现　　281\n6.1　网络爬虫与框架　　281\n6.2　功能需求和分析　　283\n6.3　总体设计　　284\n6.4　详细设计　　286\n6.4.1　基本数据结构　　286\n6.4.2　接口的设计　　293\n6.5　工具的实现　　309\n6.5.1　缓冲器　　309\n6.5.2　缓冲池　　311\n6.5.3　多重读取器　　317\n6.6　组件的实现　　318\n6.6.1　内部基础接口　　319\n6.6.2　组件注册器　　321\n6.6.3　下载器　　323\n6.6.4　分析器　　325\n6.6.5　条目处理管道　　328\n6.7　调度器的实现　　329\n6.7.1　基本结构　　329\n6.7.2　初始化　　331\n6.7.3　启动　　333\n6.7.4　停止　　343\n6.7.5　其他方法　　344\n6.7.6　总结　　345\n6.8　一个简单的图片爬虫　　346\n6.8.1　概述　　346\n6.8.2　命令参数　　346\n6.8.3　初始化调度器　　348\n6.8.4　监控调度器　　354\n6.8.5　启动调度器　　364\n6.9　扩展与思路　　365\n6.10　本章小结　　368\n附录A　Go语言的学习资源　　369","pages":"380","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s29421945.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s29421945.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29421945.jpg"},"alt":"https:\/\/book.douban.com\/subject\/27016236\/","id":"27016236","publisher":"人民邮电出版社","isbn10":"7115452512","isbn13":"9787115452511","title":"Go并发编程实战（第2版）","url":"https:\/\/api.douban.com\/v2\/book\/27016236","alt_title":"","author_intro":"郝林\n从业12年有余的软件工匠，国内知名的Go语言技术布道者，Go语言北京用户组和GoHackers社群的发起人和组织者，多套免费在线Go语言教程的作者，深信Go语言在人工智能时代和机器人时代也能大放异彩的科技信徒。","summary":"本书首先介绍了Go语言的优秀特性、安装设置方法、工程结构、标准命令和工具、语法基础、数据类型以及流程控制方法，接着阐述了与多进程编程和多线程编程有关的知识，然后重点介绍了goroutine、channel以及Go提供的传统同步方法，最后通过一个完整实例——网络爬虫框架进一步阐述Go语言的哲学和理念，同时分享作者在多年编程生涯中的一些见解和感悟。\n与上一版相比，本书不仅基于Go 1.8对上一版进行了全面更新，而且更深入地描绘了Go运行时系统的内部机理，并且大幅改进了示例代码。\n本书适用于有一定计算机编程基础的从业者以及对Go语言编程感兴趣的爱好者，非常适合作为Go语言编程进阶教程。","series":{"id":"13000","title":"图灵原创"},"price":"79.00元"},{"rating":{"max":10,"numRaters":91,"average":"8.1","min":0},"subtitle":"A Thorough Introduction To The Go Programming Language","author":["Ivo Balbaert"],"pubdate":"2012-3-8","tags":[{"count":89,"name":"Go","title":"Go"},{"count":44,"name":"编程语言","title":"编程语言"},{"count":26,"name":"计算机","title":"计算机"},{"count":23,"name":"Programming","title":"Programming"},{"count":22,"name":"编程","title":"编程"},{"count":16,"name":"go语言","title":"go语言"},{"count":13,"name":"Google","title":"Google"},{"count":9,"name":"golang","title":"golang"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s8978509.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"628","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s8978509.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s8978509.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s8978509.jpg"},"alt":"https:\/\/book.douban.com\/subject\/10558892\/","id":"10558892","publisher":"iUniverse","isbn10":"1469769166","isbn13":"9781469769165","title":"The Way To Go","url":"https:\/\/api.douban.com\/v2\/book\/10558892","alt_title":"","author_intro":"","summary":"","price":"USD 34.95"},{"rating":{"max":10,"numRaters":24,"average":"7.2","min":0},"subtitle":"","author":["David Chisnall"],"pubdate":"2012-5-10","tags":[{"count":13,"name":"GO","title":"GO"},{"count":8,"name":"golang","title":"golang"},{"count":6,"name":"程序设计","title":"程序设计"},{"count":5,"name":"计算机","title":"计算机"},{"count":4,"name":"Go","title":"Go"},{"count":3,"name":"go语言","title":"go语言"},{"count":3,"name":"Phrasebook","title":"Phrasebook"},{"count":2,"name":"计算机科学","title":"计算机科学"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s11123591.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"288","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s11123591.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s11123591.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s11123591.jpg"},"alt":"https:\/\/book.douban.com\/subject\/7952516\/","id":"7952516","publisher":"Addison-Wesley Professional","isbn10":"0321817141","isbn13":"9780321817143","title":"The Go Programming Language Phrasebook","url":"https:\/\/api.douban.com\/v2\/book\/7952516","alt_title":"","author_intro":"","summary":"The Go Programming Language Phrasebook Essential Go code and idioms for all facets of the development process This guide gives you the code \"phrases\" you need to quickly and effectively complete a wide variety of projects with Go, today,s most exciting new programming language. Tested, easy-to-adapt code examples illuminate every step of Go development, helping you write highly scalable, concurrent software. You,ll master Go-specific idioms for working with strings, collections, arrays, error handling, goroutines, slices, maps, channels, numbers, dates, times, files, networking, web apps, the runtime, and more. Concise and Accessible  Easy to carry and easy to use: Ditch all those bulky books for one portable pocket guide Flexible and Functional  Packed with more than 100 customizable code snippets: Quickly create solid Go code to solve just about any problem Register your book at informit.com\/register for convenient access to downloads, updates, and corrections as they become available.","price":"USD 29.99"},{"rating":{"max":10,"numRaters":17,"average":"7.5","min":0},"subtitle":"","author":["Matt Butcher","Matt Farina"],"pubdate":"2015-12-20","tags":[{"count":12,"name":"Go","title":"Go"},{"count":9,"name":"golang","title":"golang"},{"count":4,"name":"编程","title":"编程"},{"count":3,"name":"计算机","title":"计算机"},{"count":3,"name":"Go语言","title":"Go语言"},{"count":2,"name":"Programming","title":"Programming"},{"count":1,"name":"练习","title":"练习"},{"count":1,"name":"程序员","title":"程序员"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29095292.jpg","binding":"平装","translator":[],"catalog":"Table of Contents\nPART 1: BACKGROUND AND FUNDAMENTALS\n1 Getting in to Go - FREE\nPART 2: WELL ROUNDED APPLICATIONS\n2 A Solid Foundation - AVAILABLE\n3 Working with packages - AVAILABLE\n4 Error handling, Testing, and Debugging\nPART 3: WEB INTERFACES FOR YOUR APPLICATIONS\n5 Building websites, from html to assets\n6 Working with Web Services (REST APIs)\nPART 4: TAKING YOUR APPLICATIONS TO THE CLOUD\n7 Using cloud infrastructure\n8 Communicating between your cloud services\n9 Bringing it Together: A REST Service Client and Server","pages":"275","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29095292.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29095292.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29095292.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26345890\/","id":"26345890","publisher":"Manning","isbn10":"1633430073","isbn13":"9781633430075","title":"Go in Practice","url":"https:\/\/api.douban.com\/v2\/book\/26345890","alt_title":"","author_intro":"Matt Farina is a Master Technologist developing HP Helion, a cloud distribution and public cloud based on OpenStack and Cloud Foundry. Matt Butcher is a Senior Software Engineer at Google's Nest Labs. Both Matt and Matt are familiar authors and speakers on various technical subjects.","summary":"Go may be the perfect systems language. Built with simplicity, concurrency, and modern applications in mind, Go provides the core tool set for rapidly building web, cloud, and systems applications. With superstar projects like Docker giving the language a high-visibility boost; it's no wonder that companies are clamoring for experienced Go engineers. If you know a language like Java or C#, it's easy to get started with Go; the trick is finding the practical dirt-under-the-fingernails techniques that you need to build production-ready code\nGo in Practice guides you through dozens of real-world techniques in key areas like package management, microservice communication, and more. Following a cookbook-style Problem\/Solution\/Discussion format, this practical handbook builds on the foundational concepts of the Go language and introduces specific strategies you can use in your day-to-day applications. You'll learn techniques for building web services, using Go in the cloud, testing and debugging, routing, network applications, and much more.","price":"USD 44.99"},{"rating":{"max":10,"numRaters":6,"average":"0.0","min":0},"subtitle":"","author":["Matt Aimonetti"],"pubdate":"2014-3-25","tags":[{"count":3,"name":"golang","title":"golang"},{"count":3,"name":"go","title":"go"},{"count":2,"name":"programming","title":"programming"},{"count":1,"name":"go语言","title":"go语言"},{"count":1,"name":"ProgrammingLanguage","title":"ProgrammingLanguage"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s27256870.jpg","binding":"平装","translator":[],"catalog":"Chapter 1 Intro\n1.1 Schedule of the day\n1.2 Objectives\n1.2.1 Knowledge\n1.2.2 Skills\n1.2.3 Attitudes\nChapter 2 Basic concepts\n2.1 Packages and imports\n2.2 Exported names\n2.3 Functions, signature, return values, named results\n2.3.1 Resources\n2.4 Variables \/ inferred typing, short assignment\n2.5 Basic types\n2.6 Type conversion\n2.7 Constants\n2.8 For Loop\n2.9 If statement\n2.10 Exercise: Loops and Functions\n2.11 Structs\n2.12 Pointers\n2.13 Initializing\n2.13.1 Resources\n2.14 Arrays\n2.14.1 Printing arrays\n2.14.2 Multi-dimensional arrays\n2.15 Slices\n2.15.1 Slicing a slice\n2.15.2 Making slices\n2.15.3 Appending to a slice\n2.15.4 Length\n2.15.5 Nil slices\n2.15.6 Resources\n2.16 Range\n2.16.1 Break & continue\n2.16.2 Range and maps\n2.17 Exercise: Slice\n2.17.1 Solution\n2.18 Maps\n2.18.1 Mutating maps\n2.18.2 Resources\n2.19 Exercise: Map\n2.19.1 Solution\nChapter 3 Methods and interfaces\n3.1 Methods\n3.1.1 Code organization\n3.1.2 Type aliasing\n3.1.3 Method receivers\n3.2 Interfaces\n3.2.1 Interfaces are satisfied implicitly\n3.3 Composition vs inheritance\n3.4 Errors\n3.5 Exercise: Errors\n3.5.1 Solution\nChapter 4 Concurrency\n4.1 Goroutines\n4.2 Channels\n4.2.1 Buffered channels\n4.3 Range and close\n4.4 Select\n4.4.1 Default case\n4.4.2 Timeout\n4.5 Exercise: Equivalent Binary Trees\n4.5.1 Solution\nChapter 5 Get Setup\n5.1 OS X\n5.1.1 Setup your paths\n5.1.2 Install mercurial and bazaar\n5.2 Windows\n5.3 Linux\n5.4 Extras\nChapter 6 Get Your Feet Wet\nChapter 7 Tips and Tricks\n7.1 140 char tips\n7.2 goimports\n7.3 Organization\n7.3.1 Custom Constructors\n7.3.2 Breaking down code in packages\n7.4 Dependency package management\n7.5 Using errors\n7.6 Return statements and conditions\n7.7 Expvar\n7.8 Set the build id using git’s SHA\n7.9 How to see what packages my app imports\n7.10 Web resources\nChapter 8 Exercises","pages":"86","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s27256870.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s27256870.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s27256870.jpg"},"alt":"https:\/\/book.douban.com\/subject\/25863577\/","id":"25863577","publisher":"softcover.io","isbn10":"1617291773","isbn13":"9781617291777","title":"Go Bootcamp","url":"https:\/\/api.douban.com\/v2\/book\/25863577","alt_title":"","author_intro":"","summary":"Everything you need to know to get started with Go","price":"USD 0.00"}]}
