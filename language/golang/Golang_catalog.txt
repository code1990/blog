>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Go语言入门经典
第1章 起步 1
1.1 Go简介 1
1.1.1 Go语言简史 1
1.1.2 Go是编译型语言 2
1.2 安装Go 2
1.2.1 在Windows系统中安装 3
1.2.2 在macOS或Linux系统中安装 4
1.3 设置环境 4
1.4 编写第一个Go程序——Hello World 5
1.4.1 使用 go run 编译并运行程序 6
1.4.2 Go吉祥物 6
1.5 小结 6
1.6 问与答 7
1.7 作业 7
1.7.1 小测验 7
1.7.2 答案 7
1.8 练习 7
第2章 理解类型 8
2.1 数据类型是什么 8
2.2 区分静态类型和动态类型 8
2.3 使用布尔类型 11
2.4 理解数值类型 12
2.4.1 带符号整数和无符号整数 13
2.4.2 浮点数 14
2.4.3 字符串 14
2.4.4 数组 14
2.5 检查变量的类型 15
2.6 类型转换 16
2.7 小结 17
2.8 问与答 17
2.9 作业 17
2.9.1 小测验 17
2.9.2 答案 17
2.10 练习 18
第3章 理解变量 19
3.1 变量是什么 19
3.2 快捷变量声明 21
3.3 理解变量和零值 21
3.4 编写简短变量声明 22
3.5 变量声明方式 23
3.6 理解变量作用域 24
3.7 使用指针 25
3.8 声明常量 27
3.9 小结 28
3.10 问与答 28
3.11 作业 29
3.11.1 小测验 29
3.11.2 答案 29
3.12 练习 29
第4章 使用函数 30
4.1 函数是什么 30
4.1.1 函数的结构 30
4.1.2 返回单个值 31
4.1.3 返回多个值 32
4.2 定义不定参数函数 33
4.3 使用具名返回值 34
4.4 使用递归函数 35
4.5 将函数作为值传递 36
4.6 小结 38
4.7 问与答 38
4.8 作业 38
4.8.1 小测验 38
4.8.2 答案 38
4.9 练习 39
第5章 控制流程 40
5.1 使用if语句 40
5.2 使用else语句 42
5.3 使用else if语句 43
5.4 使用比较运算符 44
5.5 使用算数运算符 45
5.6 使用逻辑运算符 45
5.7 使用switch语句 46
5.8 使用for语句进行循环 47
5.8.1 包含初始化语句和后续语句的for语句 49
5.8.2 包含range子句的for语句 49
5.9 使用defer语句 50
5.10 小结 52
5.11 问与答 52
5.12 作业 53
5.12.1 小测验 53
5.12.2 答案 53
5.13 练习 53
第6章 数组、切片和映射 54
6.1 使用数组 54
6.2 使用切片 56
6.2.1 在切片中添加元素 56
6.2.2 在切片中删除元素 58
6.2.3 赋值切片中的元素 58
6.3 使用映射 59
6.3.1 从映射中删除元素 60
6.4 小结 61
6.5 问与答 61
6.6 作业 62
6.6.1 小测验 62
6.6.2 答案 62
6.7 练习 62
第7章 使用结构体和指针 63
7.1 结构体是什么 63
7.2 创建结构体 65
7.3 嵌套结构体 68
7.4 自定义结构体数据字段的默认值 69
7.5 比较结构体 71
7.6 理解共有和私有值 72
7.7 区分指针引用和值引用 73
7.8 小结 75
7.9 问与答 75
7.10 作业 76
7.10.1 小测验 76
7.10.2 答案 76
7.11 练习 76
第8章 创建方法和接口 77
8.1 使用方法 77
8.2 创建方法集 79
8.3 使用方法和指针 80
8.4 使用接口 83
8.5 小结 86
8.6 问与答 86
8.7 作业 87
8.7.1 小测验 87
8.7.2 答案 87
8.8 练习 87
第9章 使用字符串 88
9.1 创建字符串 88
9.2 理解rune字面量 89
9.3 拼接字符串 90
9.3.1 使用缓冲区拼接字符串 92
9.3.2 理解字符串是什么 93
9.3.3 处理字符串 94
9.4 小结 97
9.5 问与答 97
9.6 作业 97
9.6.1 小测验 97
9.6.2 答案 97
9.7 练习 98
第10章 错误处理 99
10.1 错误处理及Go语言的独特之处 99
10.2 理解错误类型 101
10.3 创建错误 101
10.4 设置错误格式 102
10.5 从函数返回错误 103
10.6 错误和可用性 104
10.7 慎用panic 104
10.8 小结 106
10.9 问与答 106
10.10 作业 106
10.10.1 小测验 106
10.10.2 答案 106
10.11 练习 107
第11章 使用Goroutine 108
11.1 理解并发 108
11.2 并发和并行 110
11.3 通过Web浏览器来理解并发 110
11.4 阻塞和非阻塞代码 111
11.5 使用Goroutine处理并发操作 112
11.6 定义Goroutine 114
11.7 小结 114
11.8 问与答 114
11.9 作业 115
11.9.1 小测验 115
11.9.2 答案 115
11.10 练习 115
第12章 通道简介 116
12.1 使用通道 116
12.2 使用缓冲通道 119
12.3 阻塞和流程控制 120
12.4 将通道用作函数参数 123
12.5 使用select语句 123
12.6 退出通道 126
12.7 小结 128
12.8 问与答 128
12.9 作业 128
12.9.1 小测验 129
12.9.2 答案 129
12.10 练习
第13章 使用包实现代码重用 130
13.1 导入包 130
13.2 理解包的用途 131
13.3 使用第三方包 132
13.4 安装第三方包 132
13.5 管理第三方依赖 133
13.6 创建包 135
13.7 小结 137
13.8 问与答 137
13.9 作业 137
13.9.1 小测验 137
13.9.2 答案 138
13.10 练习 138
第14章 Go语言命名约定 139
14.1 Go代码格式设置 139
14.2 使用gofmt 140
14.3 配置文本编辑器 141
14.4 命名约定 142
14.5 使用golint 143
14.6 使用godoc 144
14.7 工作流程自动化 147
14.8 小结 148
14.9 问与答 149
14.10 作业 149
14.10.1 小测验 149
14.10.2 答案 149
14.11 练习 149
第15章 测试和性能 150
15.1 测试：软件开发最重要的方面 150
15.1.1 单元测试 151
15.1.2 集成测试 151
15.1.3 功能测试 151
15.1.4 测试驱动开发 151
15.2 testing包 151
15.3 运行表格测试驱动 154
15.4 基准测试 156
15.5 提供测试覆盖率 158
15.6 小结 159
15.7 问与答 159
15.8 作业 159
15.8.1 小测验 159
15.8.2 答案 159
15.9 练习 160
第16章 调试 161
16.1 日志 161
16.2 打印数据 164
16.3 使用fmt包 165
16.4 使用Delve 168
16.5 使用gdb 170
16.6 小结 171
16.7 问与答 171
16.8 作业 171
16.8.1 小测验 171
16.8.2 答案 172
16.9 练习 172
第17章 使用命令行程序 173
17.1 操作输入和输出 174
17.2 访问命令行参数 174
17.3 分析命令行标志 176
17.4 指定标志的类型 177
17.5 自定义帮助文本 178
17.6 创建子命令 179
17.7 POSIX兼容性 182
17.8 安装分享命令行程序 182
17.9 小结 184
17.10 问与答 184
17.11 作业 184
17.11.1小测验 185
17.11.2 答案 185
17.12 练习 185
第18章 创建HTTP服务器 186
18.1 通过Hello World Web服务器宣告您的存在 186
18.2 查看请求和响应 187
18.2.1 使用curl发出请求 188
18.2.2 详谈路由 189
18.3 使用处理程序函数 189
18.4 处理404错误 190
18.5 设置报头 191
18.6响应以不同类型的内容 192
18.7 响应不同类型的请求 194
18.8 获取GET和POST请求中的数据 195
18.9 小结 197
18.10 问与答 198
18.11 作业 198
18.11.1 小测验 198
18.11.2 答案 198
18.12 练习 199
第19章 创建HTTP客户端 200
19.1 理解HTTP 200
19.2 发出GET请求 201
19.3 发出POST请求 202
19.4 进一步控制HTTP请求 204
19.5 调试HTTP请求 205
19.6 处理超时 207
19.7 小结 208
19.8 问与答 209
19.9 作业 209
19.9.1 小测验 209
19.9.2 答案 209
19.10 练习 210
第20章 处理JSON 211
20.1 JSON简介 211
20.2 使用JSON API 213
20.3 在Go语言中使用JSON 213
20.4 解码JSON 217
20.5 映射数据类型 219
20.6 处理通过HTTP收到的JSON 220
20.7 小结 221
20.8 问与答 221
20.9 作业 222
20.9.1 小测验 222
20.9.2 答案 222
20.10 练习 222
第21章 处理文件 223
21.1 文件的重要性 223
21.2 使用ioutil包读写文件 224
21.2.1 读取文件 224
21.2.2 创建文件 225
21.3 写入文件 227
21.4 列出目录的内容 228
21.5 复制文件 229
21.6 删除文件 230
21.7 使用文件来管理配置 231
21.7.1 使用JSON文件 231
21.7.2 使用TOML文件 232
21.8 小结 234
21.9 问与答 234
21.10 作业 234
21.10.1 小测验 235
21.10.2 答案 235
21.11 练习 235
第22章 正则表达式简介 236
22.1定义正则表达式 236
22.2 熟悉正则表达式 238
22.3 使用正则表达式验证数据 239
22.4 使用正则表达式来变换数据 240
22.5 小结 241
22.6 问与答 241
22.7 作业 241
22.7.1 小测验 242
22.7.2 答案 242
22.8 练习 242
第23章 Go语言时间编程 243
23.1 时间元素编程 243
23.2 让程序休眠 245
23.3 设置超时时间 245
23.4 使用ticker 246
23.5 以字符串格式表示时间 247
23.6 使用结构体Time 248
23.7时间加减 249
23.8 比较两个不同的Time结构体 249
23.9 小结 250
23.10 问与答 250
23.11 作业 251
23.11.1 小测验 251
23.11.2 答案 251
23.12 练习 251
第24章 部署Go语言代码 252
24.1 理解目标 252
24.2 压缩二进制文件大小 255
24.3 使用Docker 256
24.4 下载二进制文件 258
24.5 使用go get 259
24.6 通过包管理器发布代码 260
24.7 小结 260
24.8 问与答 260
24.9 作业 261
24.9.1 小测验 261
24.9.2 答案 261
24.10 练习
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Go语言入门经典
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Go程序设计语言
出版者的话
译者序
前言
第1章 入门 1
1.1 hello，world 1
1.2 命令行参数 3
1.3 找出重复行 6
1.4 GIF动画 10
1.5 获取一个URL 12
1.6 并发获取多个URL 13
1.7 一个Web服务器 14
1.8 其他内容 17
第2章 程序结构 20
2.1 名称 20
2.2 声明 21
2.3 变量 22
2.3.1 短变量声明 22
2.3.2 指针 23
2.3.3 new函数 25
2.3.4 变量的生命周期 26
2.4 赋值 27
2.4.1 多重赋值 27
2.4.2 可赋值性 28
2.5 类型声明 29
2.6 包和文件 30
2.6.1 导入 31
2.6.2 包初始化 33
2.7 作用域 34
第3章 基本数据 38
3.1 整数 38
3.2 浮点数 42
3.3 复数 45
3.4 布尔值 47
3.5 字符串 47
3.5.1 字符串字面量 49
3.5.2 Unicode 49
3.5.3 UTF-8 50
3.5.4 字符串和字节slice 53
3.5.5 字符串和数字的相互转换 56
3.6 常量 56
3.6.1 常量生成器iota 57
3.6.2 无类型常量 59
第4章 复合数据类型 61
4.1 数组 61
4.2 slice 63
4.2.1 append函数 66
4.2.2 slice就地修改 69
4.3 map 71
4.4 结构体 76
4.4.1 结构体字面量 78
4.4.2 结构体比较 80
4.4.3 结构体嵌套和匿名成员 80
4.5 JSON 82
4.6 文本和HTML模板 87
第5章 函数 92
5.1 函数声明 92
5.2 递归 93
5.3 多返回值 96
5.4 错误 98
5.4.1 错误处理策略 99
5.4.2 文件结束标识 101
5.5 函数变量 102
5.6 匿名函数 104
5.7 变长函数 110
5.8 延迟函数调用 111
5.9 宕机 115
5.10 恢复 118
第6章 方法 120
6.1 方法声明 120
6.2 指针接收者的方法 122
6.3 通过结构体内嵌组成类型 124
6.4 方法变量与表达式 127
6.5 示例：位向量 128
6.6 封装 130
第7章 接口 133
7.1 接口即约定 133
7.2 接口类型 135
7.3 实现接口 136
7.4 使用flag.Value来解析参数 139
7.5 接口值 141
7.6 使用sort.Interface来排序 144
7.7 http.Handler接口 148
7.8 error接口 152
7.9 示例：表达式求值器 154
7.10 类型断言 160
7.11 使用类型断言来识别错误 161
7.12 通过接口类型断言来查询特性 162
7.13 类型分支 164
7.14 示例：基于标记的XML解析 166
7.15 一些建议 168
第8章 goroutine和通道 170
8.1 goroutine 170
8.2 示例：并发时钟服务器 171
8.3 示例：并发回声服务器 174
8.4 通道 176
8.4.1 无缓冲通道 177
8.4.2 管道 178
8.4.3 单向通道类型 180
8.4.4 缓冲通道 181
8.5 并行循环 183
8.6 示例：并发的Web爬虫 187
8.7 使用select多路复用 190
8.8 示例：并发目录遍历 192
8.9 取消 195
8.10 示例：聊天服务器 198
第9章 使用共享变量实现并发 201
9.1 竞态 201
9.2 互斥锁：sync.Mutex 205
9.3 读写互斥锁：sync.RWMutex 208
9.4 内存同步 208
9.5 延迟初始化：sync.Once 210
9.6 竞态检测器 212
9.7 示例：并发非阻塞缓存 212
9.8 goroutine与线程 218
9.8.1 可增长的栈 219
9.8.2 goroutine调度 219
9.8.3 GOMAXPROCS 219
9.8.4 goroutine没有标识 220
第10章 包和go工具 221
10.1 引言 221
10.2 导入路径 221
10.3 包的声明 222
10.4 导入声明 223
10.5 空导入 223
10.6 包及其命名 225
10.7 go工具 226
10.7.1 工作空间的组织 227
10.7.2 包的下载 228
10.7.3 包的构建 229
10.7.4 包的文档化 231
10.7.5 内部包 232
10.7.6 包的查询 233
第11章 测试 235
11.1 go test工具 235
11.2 Test函数 236
11.2.1 随机测试 239
11.2.2 测试命令 240
11.2.3 白盒测试 242
11.2.4 外部测试包 245
11.2.5 编写有效测试 246
11.2.6 避免脆弱的测试 247
11.3 覆盖率 248
11.4 Benchmark函数 250
11.5 性能剖析 252
11.6 Example函数 254
第12章 反射 256
12.1 为什么使用反射 256
12.2 reflect.Type和reflect.Value 257
12.3 Display：一个递归的值显示器 259
12.4 示例：编码S表达式 263
12.5 使用reflect.Value来设置值 266
12.6 示例：解码S表达式 268
12.7 访问结构体字段标签 271
12.8 显示类型的方法 273
12.9 注意事项 274
第13章 低级编程 276
13.1 unsafe.Sizeof、Alignof 和Offsetof 276
13.2 unsafe.Pointer 278
13.3 示例：深度相等 280
13.4 使用cgo调用C代码 282
13.5 关于安全的注意事项 286
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Go程序设计语言
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Go语言实战
第1章　关于Go语言的介绍　1
1．1　用Go解决现代编程难题　2
1．1．1　开发速度　2
1．1．2　并发　3
1．1．3　Go语言的类型系统　5
1．1．4　内存管理　7
1．2　你好，Go　7
1．3　小结　8
第2章　快速开始一个Go程序　9
2．1　程序架构　9
2．2　main包　11
2．3　search包　13
2．3．1　search．go　13
2．3．2　feed．go　21
2．3．3　match．go default．go　24
2．4　RSS匹配器　30
2．5　小结　36
第3章　打包和工具链　37
3．1　包　37
3．1．1　包名惯例　38
3．1．2　main包　38
3．2　导入　39
3．2．1　远程导入　40
3．2．2　命名导入　40
3．3　函数init　41
3．4　使用Go的工具　42
3．5　进一步介绍Go开发工具　44
3．5．1　go vet　44
3．5．2　Go代码格式化　45
3．5．3　Go语言的文档　45
3．6　与其他Go开发者合作　48
3．7　依赖管理　48
3．7．1　第三方依赖　49
3．7．2　对gb的介绍　50
3．8　小结　52
第4章　数组、切片和映射　53
4．1　数组的内部实现和基础功能　53
4．1．1　内部实现　53
4．1．2　声明和初始化　54
4．1．3　使用数组　55
4．1．4　多维数组　58
4．1．5　在函数间传递数组　59
4．2　切片的内部实现和基础功能　60
4．2．1　内部实现　60
4．2．2　创建和初始化　61
4．2．3　使用切片　63
4．2．4　多维切片　74
4．2．5　在函数间传递切片　75
4．3　映射的内部实现和基础功能　76
4．3．1　内部实现　76
4．3．2　创建和初始化　78
4．3．3　使用映射　79
4．3．4　在函数间传递映射　81
4．4　小结　82
第5章　Go语言的类型系统　83
5．1　用户定义的类型　83
5．2　方法　87
5．3　类型的本质　90
5．3．1　内置类型　91
5．3．2　引用类型　91
5．3．3　结构类型　93
5．4　接口　95
5．4．1　标准库　96
5．4．2　实现　98
5．4．3　方法集　99
5．4．4　多态　103
5．5　嵌入类型　105
5．6　公开或未公开的标识符　113
5．7　小结　121
第6章　并发　122
6．1　并发与并行　122
6．2　goroutine　125
6．3　竞争状态　132
6．4　锁住共享资源　135
6．4．1　原子函数　135
6．4．2　互斥锁　138
6．5　通道　140
6．5．1　无缓冲的通道　141
6．5．2　有缓冲的通道　146
6．6　小结　149
第7章　并发模式　150
7．1　runner　150
7．2　pool　158
7．3　work　168
7．4　小结　174
第8章　标准库　176
8．1　文档与源代码　177
8．2　记录日志　178
8．2．1　log包　179
8．2．2　定制的日志记录器　182
8．2．3　结论　186
8．3　编码 解码　187
8．3．1　解码JSON　187
8．3．2　编码JSON　192
8．3．3　结论　193
8．4　输入和输出　193
8．4．1　Writer和Reader接口　194
8．4．2　整合并完成工作　195
8．4．3　简单的curl　199
8．4．4　结论　200
8．5　小结　200
第9章　测试和性能　201
9．1　单元测试　201
9．1．1　基础单元测试　202
9．1．2　表组测试　205
9．1．3　模仿调用　208
9．1．4　测试服务端点　212
9．2　示例　217
9．3　基准测试　220
9．4　小结　224
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Go语言实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Go语言编程
序 为什么我们需要一门新的语言？
第1章 初识Go语言
1.1 Go语言简史
1.2 语言特性
1.3 “Hello, world!”
1.4 编译环境
1.5 开发工具
1.6 工程管理
1.7 问题追踪和调试
1.8 如何寻求帮助
本章小结
第2章 顺序编程
2.1 变量、常量和类型
2.1.1 变量
2.1.2 常量
2.1.3 类型
2.2 流程控制
2.2.1 条件语句
2.2.2 选择语句
2.2.3 循环
2.2.4 跳转语句
2.3 函数
2.3.1 函数调用
2.3.2 不定参数
2.3.3 多返回值
2.3.4 匿名函数与闭包
2.4 错误处理
2.4.1 error接口
2.4.2 defer
2.4.3 panic和recover
本章小结
第3章 面向对象编程
3.1 类型系统
3.1.1 给类型添加方法
3.1.2 值语义和引用语义
3.2 结构体
3.2.1 初始化
3.2.2 匿名组合
3.2.3 成员可访问性
3.3 接口
3.3.1 其他语言中的接口
3.3.2 非侵入式接口
3.3.3 接口赋值
3.3.4 接口查询
3.3.5 类型查询
3.3.6 Any类型
本章小结
第4章 工程管理
4.1 Go命令行工具
4.2 代码风格
4.3 工程组织
4.4 单元测试
4.5 文档管理
4.6 工程构建
4.7 包的管理与分发
4.8 跨平台开发
4.8.1 Go语言的跨平台能力
4.8.2 交叉编译
4.8.3 Android支持
本章小结
第5章 并发编程
5.1 初识Goroutine
5.1.1 基本用法
5.1.2 Goroutine通信
5.2 Channel
5.2.1 基本用法
5.2.2 关闭
5.2.3 变量的传递
5.2.4 单向Channel
5.2.5 超时处理
5.3 多核并行化
5.4 同步机制
5.4.1 sync包简介
5.4.2 同步锁
5.4.3 Once类型
本章小结
第6章 网络编程
6.1 HTTP编程
6.1.1 客户端编程
6.1.2 开发HTTP服务器
6.2 JSON
6.2.1 JSON简介
6.2.2 编码
6.2.3 解码
6.2.4 未知类型的解码
6.2.5 流式读写
6.3 网站开发
6.3.1 一个最简单的网站
6.3.2 开发一个相册网站
6.3.2.1 新建工程
6.3.2.2 实现网络服务
6.3.2.3 网页模板渲染
6.3.2.4 缓存
6.3.2.5 错误处理
6.3.2.6 防止程序崩溃
6.3.2.7 资源分离
6.3.2.8 重构
6.4 更多资源
本章小结
第7章 进阶话题
7.1 Go语言中的内存管理
7.2 反射
7.3 语言交互性CGO
7.4 链接符号
7.5 Goroutine实现机制
7.6 接口的奥秘
本章小结
第8章 开发工具
8.1 Go语言开发工具
8.2 gEdit
8.3 Goclipse - 使用Eclipse开发和调试Go程序
8.4 VIM
8.5 Nodepad++，Windows上的Go开发环境搭建
8.6 GolangIDE
本章小结
附录 Go语言包参考
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Go语言编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Go语言学习笔记
上卷 语言详解
第1 章 概述 ................................................................................................................. 3
1.1 特征 ......................................................................................................................... 3
1.2 简介 ......................................................................................................................... 6
第2 章 类型 ............................................................................................................... 18
2.1 变量 ....................................................................................................................... 18
2.2 命名 ....................................................................................................................... 22
2.3 常量 ....................................................................................................................... 24
2.4 基本类型 ............................................................................................................... 28
2.5 引用类型 ............................................................................................................... 31
2.6 类型转换 ............................................................................................................... 33
2.7 自定义类型 ........................................................................................................... 34
第3 章 表达式 ........................................................................................................... 38
3.1 保留字 ................................................................................................................... 38
3.2 运算符 ................................................................................................................... 38
3.3 初始化 ................................................................................................................... 44
3.4 流控制 ................................................................................................................... 45
第4 章 函数 ............................................................................................................... 59
4.1 定义 ....................................................................................................................... 59
4.2 参数 ....................................................................................................................... 63
4.3 返回值 ................................................................................................................... 67
4.4 匿名函数 ............................................................................................................... 69
4.5 延迟调用 ............................................................................................................... 76
4.6 错误处理 ............................................................................................................... 80
第5 章 数据 ............................................................................................................... 86
5.1 字符串 ................................................................................................................... 86
5.2 数组 ....................................................................................................................... 95
5.3 切片 ..................................................................................................................... 100
5.4 字典 ..................................................................................................................... 110
5.5 结构 ..................................................................................................................... 118
第6 章 方法 ............................................................................................................. 130
6.1 定义 ..................................................................................................................... 130
6.2 匿名字段 ............................................................................................................. 133
6.3 方法集 ................................................................................................................. 134
6.4 表达式 ................................................................................................................. 136
第7 章 接口 ............................................................................................................. 141
7.1 定义 ..................................................................................................................... 141
7.2 执行机制 ............................................................................................................. 145
7.3 类型转换 ............................................................................................................. 150
7.4 技巧 ..................................................................................................................... 151
第8 章 并发 ............................................................................................................. 153
8.1 并发的含义 ......................................................................................................... 153
8.2 通道 ..................................................................................................................... 163
8.3 同步 ..................................................................................................................... 183
第9 章 包结构 ......................................................................................................... 187
9.1 工作空间 ............................................................................................................. 187
9.2 导入包 ................................................................................................................. 188
9.3 组织结构 ............................................................................................................. 192
9.4 依赖管理 ............................................................................................................. 197
第10 章 反射 ........................................................................................................... 200
10.1 类型 ................................................................................................................... 200
10.2 值 ....................................................................................................................... 207
10.3 方法 ................................................................................................................... 210
10.4 构建 ................................................................................................................... 212
10.5 性能 ................................................................................................................... 213
第11 章 测试 ........................................................................................................... 216
11.1 单元测试 ........................................................................................................... 216
11.2 性能测试 ........................................................................................................... 221
11.3 代码覆盖率 ....................................................................................................... 224
11.4 性能监控 ........................................................................................................... 226
第12 章 工具链 ........................................................................................................ 229
12.1 安装 ................................................................................................................... 229
12.2 工具 ................................................................................................................... 231
12.3 编译 ................................................................................................................... 234
下卷 源码剖析
第13 章 准备 ............................................................................................................ 243
第14 章 引导 ............................................................................................................ 244
第15 章 初始化 ........................................................................................................ 247
第16 章 内存分配 ..................................................................................................... 255
16.1 概述 ................................................................................................................... 255
16.2 初始化 ............................................................................................................... 259
16.3 分配 ................................................................................................................... 265
16.4 回收 ................................................................................................................... 279
16.5 释放 ................................................................................................................... 283
16.6 其他 ................................................................................................................... 285
第17 章 垃圾回收 ...................................................................................................... 291
17.1 概述 ................................................................................................................... 291
17.2 初始化 ............................................................................................................... 293
17.3 启动 ................................................................................................................... 294
17.4 标记 ................................................................................................................... 300
17.5 清理 ................................................................................................................... 311
17.6 监控 ................................................................................................................... 314
17.7 其他 ................................................................................................................... 317
第18 章 并发调度 ...................................................................................................... 326
18.1 概述 ................................................................................................................... 326
18.2 初始化 ............................................................................................................... 327
18.3 任务 ................................................................................................................... 332
18.4 线程 ................................................................................................................... 344
18.5 执行 ................................................................................................................... 353
18.6 连续栈 ............................................................................................................... 370
18.7 系统调用 ........................................................................................................... 385
18.8 监控 ................................................................................................................... 390
18.9 其他 ................................................................................................................... 396
第19 章 通道 ............................................................................................................. 407
19.1 创建 ................................................................................................................... 407
19.2 收发 ................................................................................................................... 408
19.3 选择 ................................................................................................................... 418
第20 章 延迟 ............................................................................................................. 427
20.1 定义 ................................................................................................................... 427
20.2 性能 ................................................................................................................... 433
20.3 错误 ................................................................................................................... 434
第21 章 析构 ............................................................................................................. 438
21.1 设置 ................................................................................................................... 438
21.2 清理 ................................................................................................................... 443
21.3 执行 ................................................................................................................... 445
第22 章 缓存池 ......................................................................................................... 450
22.1 初始化 ............................................................................................................... 450
22.2 操作 ................................................................................................................... 453
22.3 清理 ................................................................................................................... 455
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Go语言学习笔记
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Go Web编程
第1章 GO语言环境配置
1.1 Go语言安装
Go语言的三种安装方式
Go语言源码安装
Go语言标准包安装
第三方工具安装
1.2 GOPATH与工作空间
GOPATH设置
应用目录结构
编译应用
获取远程包
程序的整体结构
1.3 Go语言命令
Go语言命令
go build
go clean
go fmt
go get
go install
go test
go doc
其他命令
1.4 Go语言开发工具
LiteIDE
Sublime Text
Vim
Emacs
Eclipse
IntelliJ IDEA
1.5 总结
第2章 Go语言基础
2.1 你好，Go
程序
详解
小结
2.2 Go语言基础
定义变量
常量
内置基础类型
一些技巧
array、slice、map
2.3 流程和函数
流程控制
函数
2.4 struct类型
struct
2.5 面向对象
method
2.6 interface
interface
2.7 并发
goroutine
channels
Buffered Channels
Range和Close
Select
超时
runtime goroutine
2.8 总结
第3章 Web基础
3.1 Web工作方式
URL和DNS解析
HTTP协议详解
请求实例
3.2 GO语言搭建一个Web服务器
http包建立Web服务器
3.3 Go语言如何使Web工作
Web工作方式的几个概念
分析http包运行机制
3.4 Go语言的http包详解
Conn的goroutine
ServeMux的自定义
Go语言代码的执行流程
3.5 总结
第4章 表单
4.1 处理表单的输入
4.2 验证表单的输入
必填字段
数字
中文
英文
电子邮件地址
手机号码
下拉菜单
单选按钮
复选框
日期和时间
身份证号码
4.3 预防跨站脚本
4.4 防止多次递交表单
4.5 处理文件上传
客户端上传文件
4.6 总结
第5章 访问数据库
5.1 database/sql接口
sql.Register
driver.Driver
driver.Conn
driver.Stmt
driver.Tx
driver.Execer
driver.Result
driver.Rows
driver.RowsAffected
driver.Value
driver.ValueConverter
driver.Valuer
database/sql
5.2 使用MySQL数据库
MySQL驱动
示例代码
5.3 使用SQLite数据库
驱动
实例代码
5.4 使用PostgreSQL数据库
驱动
实例代码
5.5 使用beedb库进行ORM开发
安装
如何初始化
插入数据
更新数据
查询数据
删除数据
关联查询
Group By和Having
进一步的发展
5.6 NOSQL数据库操作
redis
MongoDB
5.7 总结
第6章 Session和数据存储
6.1 Session和Cookie
Cookie
Session
小结
6.2 Go语言如何使用Session
Session创建过程
Go语言实现Session管理
6.3 Session存储
6.4 预防Session劫持
Session劫持过程
Session劫持防范
6.5 总结
第7章 文本处理
7.1 XML处理
解析XML
输出XML
7.2 JSON处理
解析JSON
生成JSON
7.3 正则处理
通过正则判断是否匹配
通过正则获取内容
7.4 模板处理
什么是模板
Go语言模板使用
模板中如何插入数据
Must操作
嵌套模板
小结
7.5 文件操作
目录操作
文件操作
7.6 字符串处理
字符串操作
字符串转换
7.7 总结
第8章 Web服务
8.1 Socket编程
什么是Socket
Socket如何通信
Socket基础知识
TCP Socket
UDP Socket
小结
8.2 WebSocket
WebSocket原理
Go语言实现WebSocket
8.3 REST
什么是REST
RESTful的实现
小结
8.4 RPC
RPC工作原理
Go RPC
小结
8.5 总结
第9章 安全与加密
9.1 预防CSRF攻击
什么是CSRF
CSRF的原理
如何预防CSRF
总结
9.2 确保输入过滤
识别数据
过滤数据
区分过滤数据
小结
9.3 避免XSS攻击
什么是XSS
XSS的原理
如何预防XSS
小结
9.4 避免SQL注入
什么是SQL注入
SQL注入实例
如何预防SQL注入
小结
9.5 存储密码
普通方案
进阶方案
专家方案
总结
9.6 加密和解密数据
base64加解密
高级加解密
小结
9.7 总结
第10章 国际化和本地化
10.1 设置默认地区
什么是Locale
设置Locale
小结
10.2 本地化资源
本地化文本信息
本地化日期和时间
本地化货币值
本地化视图和资源
小结
10.3 国际化站点
管理多个本地包
自动加载本地包
template mapfunc
小结
10.4 总结
第11章 错误处理，调试和测试
11.1 错误处理
Error类型
自定义error
错误处理
小结
11.2 使用GDB调试
GDB调试简介
常用命令
调试过程
小结
11.3 Go语言怎么写测试用例
如何编写测试用例
如何编写压力测试
小结
11.4 总结
第12章 部署与维护
12.1 应用日志
seelog介绍
基于seelog的自定义日志处理
发生错误发送邮件
使用应用日志
小结
12.2 网站错误处理
错误处理的目标
如何处理错误
如何处理异常
小结
12.3 应用部署
daemon
Supervisord
小结
12.4 备份和恢复
应用备份
MySQL备份
MySQL恢复
redis备份
redis恢复
小结
12.5 总结
第13章 如何设计一个Web框架
13.1 项目规划
gopath以及项目设置
应用程序流程图
目录结构
框架设计
总结
13.2 自定义路由器设计
HTTP路由
默认的路由实现
beego框架路由实现
13.4 日志和配置设计
日志和配置的重要性
beego的日志设计
beego的配置设计
应用指南
13.5 实现博客的增删改
博客目录
博客路由
数据库结构
控制器
model层
view层
13.6 总结
第14章 扩展Web框架
14.1 静态文件支持
beego静态文件实现和设置
Bootstrap集成
14.2 Session支持
Session集成
Session使用
14.3 表单及验证支持
表单和验证
表单类型
表单验证
14.4 用户认证
HTTP Basic和HTTP Digest认证
oauth和oauth2的认证
自定义认证
14.5 多语言支持
i18n集成
多语言开发使用
14.6 pprof支持
beego支持pprof 使用入门
14.7 小结
附录A 参考资料
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Go Web编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Go 语言程序设计
Go语言程序设计》
第1章　5个例子　1
1.1　开始　1
1.2　编辑、编译和运行　3
1.3　Hello Who?　6
1.4　大数字——二维切片　8
1.5　栈——自定义类型及其方法　12
1.6　americanise示例——文件、映射和闭包　18
1.7　从极坐标到笛卡儿坐标——并发　28
1.8　练习　33
第2章　布尔与数值类型　35
2.1　基础　35
2.2　布尔值和布尔表达式　39
2.3　数值类型　40
2.3.1　整型　42
2.3.2　浮点类型　46
2.4　例子：statistics　53
2.4.1　实现一个简单的统计函数　54
2.4.2　实现一个基本的HTTP服务器　55
2.5　练习　58
第3章　字符串　60
3.1　字面量、操作符和转义　61
3.2　比较字符串　63
3.3　字符和字符串　65
3.4　字符串索引与切片　67
3.5　使用fmt包来格式化字符串　69
3.5.1　格式化布尔值　73
3.5.2　格式化整数　74
3.5.3　格式化字符　75
3.5.4　格式化浮点数　75
3.5.5　格式化字符串和切片　76
3.5.6　为调试格式化　78
3.6　其他字符处理相关的包　80
3.6.1　strings包　81
3.6.2　strconv包　86
3.6.3　utf8包　90
3.6.4　unicode包　91
3.6.5　regexp包　92
3.7　例子：m3u2pls　101
3.8　练习　106
第4章　集合类型　108
4.1　值、指针和引用类型　108
4.2　数组和切片　115
4.2.1　索引与分割切片　119
4.2.2　遍历切片　119
4.2.3　修改切片　121
4.2.4　排序和搜索切片　125
4.3　映射　128
4.3.1　创建和填充映射　129
4.3.2　映射查询　131
4.3.3　修改映射　132
4.3.4　键序遍历映射　132
4.3.5　映射反转　133
4.4　例子　134
4.4.1　猜测分隔符　134
4.4.2　词频统计　136
4.5　练习　141
第5章　过程式编程　144
5.1　语句基础　144
5.1.1　类型转换　147
5.1.2　类型断言　148
5.2　分支　149
5.2.1　if语句　150
5.2.2　switch语句　151
5.3　for循环语句　158
5.4　通信和并发语句　160
5.5　defer、panic和recover　166
5.6　自定义函数　171
5.6.1　函数参数　172
5.6.2　init()函数和main()函数　175
5.6.3　闭包　176
5.6.4　递归函数　178
5.6.5　运行时选择函数　181
5.6.6　泛型函数　183
5.6.7　高阶函数　187
5.7　例子：缩进排序　192
5.8　练习　197
第6章　面向对象编程　199
6.1　几个关键概念　199
6.2　自定义类型　201
6.2.1　添加方法　203
6.2.2　验证类型　207
6.3　接口　209
6.4　结构体　217
6.5　例子　224
6.5.1　FuzzyBool——一个单值自定义类型　224
6.5.2　Shapes——一系列自定义类型　229
6.5.3　有序映射——一个通用的集合类型　240
6.6　练习　248
第7章　并发编程　251
7.1　关键概念　252
7.2　例子　256
7.2.1　过滤器　256
7.2.2　并发的Grep　260
7.2.3　线程安全的映射　266
7.2.4　Apache报告　271
7.2.5　查找副本　278
7.3　练习　285
第8章　文件处理　287
8.1　自定义数据文件　287
8.1.1　处理JSON文件　290
8.1.2　处理XML文件　295
8.1.3　处理纯文本文件　301
8.1.4　处理Go语言二进制文件　307
8.1.5　处理自定义的二进制文件　309
8.2　归档文件　317
8.2.1　创建zip归档文件　317
8.2.2　创建可压缩的tar包　319
8.2.3　解开zip归档文件　321
8.2.4　解开tar归档文件　322
8.3　练习　324
第9章　包　326
9.1　自定义包　326
9.1.1　创建自定义的包　327
9.1.2　导入包　333
9.2　第三方包　334
9.3　Go命令行工具简介　335
9.4　Go标准库简介　336
9.4.1　归档和压缩包　336
9.4.2　字节流和字符串相关的包　336
9.4.3　容器包　337
9.4.4　文件和操作系统相关的包　339
9.4.5　图像处理相关的包　341
9.4.6　数学处理包　341
9.4.7　其他一些包　341
9.4.8　网络包　342
9.4.9　反射包　343
9.5　练习　346
附录A　后记　348
附录B　软件专利的危害　350
附录C　精选书目　353
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Go 语言程序设计
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Docker源码分析
目录
赞誉
序
前言
第1章　Docker架构	1
1.1　引言	1
1.2　Docker总架构图	2
1.3　Docker各模块功能与实现分析	3
1.3.1　Docker Client	4
1.3.2　Docker Daemon	4
1.3.3　Docker Registry	6
1.3.4　Graph	7
1.3.5　Driver	7
1.3.6　libcontainer	10
1.3.7　Docker Container	10
1.4　Docker运行案例分析	11
1.4.1　docker pull	11
1.4.2　docker run	12
1.5　总结	14
第2章　Docker Client创建与命令执行	15
2.1　引言	15
2.2　创建Docker Client	16
2.2.1　Docker命令的flag参数解析	17
2.2.2　处理flag信息并收集Docker Client的配置信息	20
2.2.3　如何创建Docker Client	22
2.3　Docker命令执行	24
2.3.1　Docker Client解析请求命令	24
2.3.2　Docker Client执行请求命令	25
2.4　总结	27
第3章　启动Docker Daemon	28
3.1　引言	28
3.2　Docker Daemon的启动流程	29
3.3　mainDaemon()的具体实现	30
3.3.1　配置初始化	30
3.3.2　flag参数检查	32
3.3.3　创建engine对象	33
3.3.4　设置engine的信号捕获	34
3.3.5　加载builtins	35
3.3.6　使用goroutine加载daemon
对象并运行	38
3.3.7　打印Docker版本及驱动信息	41
3.3.8　serveapi的创建与运行	42
3.4　总结	42
第4章　Docker Daemon之NewDaemon实现	43
4.1　引言	43
4.2　NewDaemon具体实现	44
4.3　应用配置信息	45
4.3.1　配置Docker容器的MTU	45
4.3.2　检测网桥配置信息	46
4.3.3　查验容器间的通信配置	46
4.3.4　处理网络功能配置	47
4.3.5　处理PID文件配置	47
4.4　检测系统支持及用户权限	48
4.5　配置工作路径	49
4.6　加载并配置graphdriver	49
4.6.1　创建graphdriver	49
4.6.2　验证btrfs与SELinux的兼容性	51
4.6.3　创建容器仓库目录	51
4.6.4　迁移容器至aufs类型	51
4.6.5　创建镜像graph	52
4.6.6　创建volumesdriver以及volumes graph	53
4.6.7　创建TagStore	53
4.7　配置Docker Daemon网络环境	54
4.7.1　创建Docker网络设备	55
4.7.2　启用iptables功能	55
4.7.3　启用系统数据包转发功能	56
4.7.4　创建DOCKER链	56
4.7.5　注册处理方法至Engine	57
4.8　创建graphdb并初始化	57
4.9　创建execdriver	58
4.10　创建daemon实例	59
4.11　检测DNS配置	60
4.12　启动时加载已有Docker容器	61
4.13　设置shutdown的处理方法	61
4.14　返回daemon对象实例	62
4.15　总结	62
第5章　Docker Server的创建	63
5.1　引言	63
5.2　Docker Server创建流程	63
5.2.1　创建名为“serveapi”的Job	64
5.2.2　配置Job环境变量	64
5.2.3　运行Job	65
5.3　ServeApi运行流程	65
5.4　ListenAndServe实现	68
5.4.1　创建router路由实例	69
5.4.2　创建listener监听实例	74
5.4.3　创建http.Server	74
5.4.4　启动API服务	75
5.5　总结	75
第6章　Docker Daemon网络	76
6.1　引言	76
6.2　Docker Daemon网络介绍	77
6.3　Docker Daemon网络配置接口	78
6.4　Docker Daemon网络初始化	79
6.4.1　启动Docker Daemon传递flag参数	80
6.4.2　解析网络flag参数	80
6.4.3　预处理flag参数	80
6.4.4　确定Docker网络模式	81
6.5　创建Docker网桥	82
6.5.1　提取环境变量	83
6.5.2　确定Docker网桥设备名	83
6.5.3　查找bridgeIface网桥设备	83
6.5.4　bridgeIface已创建	84
6.5.5　bridgeIface未创建	85
6.5.6　获取网桥设备的网络地址	88
6.5.7　配置Docker Daemon的iptables	88
6.5.8　配置网络设备间数据报转发功能	88
6.5.9　注册网络Handler	89
6.6　总结	89
第7章　Docker容器网络	90
7.1　引言	90
7.2　Docker容器网络模式	93
7.2.1　bridge桥接模式	93
7.2.2　host模式	95
7.2.3　other container模式	96
7.2.4　none模式	97
7.3　Docker Client配置容器网络模式	97
7.3.1　使用Docker Client	98
7.3.2　runconfig包解析	98
7.3.3　CmdRun执行	102
7.4　Docker Daemon创建容器网络流程	103
7.4.1　创建容器之网络配置	103
7.4.2　启动容器之网络配置	105
7.5　execdriver网络执行流程	111
7.5.1　创建libcontainer的Config对象	112
7.5.2　调用libcontainer的namespaces启动容器	116
7.6　libcontainer实现内核态网络配置	117
7.6.1　创建exec.Cmd	118
7.6.2　启动exec.Cmd创建进程	119
7.6.3　为容器进程初始化网络环境	120
7.7　总结	122
第8章　Docker镜像	123
8.1　引言	123
8.2　Docker镜像介绍	124
8.3　rootfs	124
8.4　Union Mount	125
8.5　image	127
8.6　layer	128
8.7　总结	129
第9章　Docker镜像下载	130
9.1　引言	130
9.2　Docker镜像下载流程	131
9.3　Docker Client	131
9.3.1　解析镜像参数	132
9.3.2　配置认证信息	136
9.3.3　发送API请求	137
9.4　Docker Server	138
9.4.1　解析请求参数	138
9.4.2　创建并配置Job	139
9.4.3　触发执行Job	139
9.5　Docker Daemon	140
9.5.1　解析Job参数	140
9.5.2　创建session对象	141
9.5.3　执行镜像下载	142
9.6　总结	147
第10章　Docker镜像存储	149
10.1　引言	149
10.2　镜像注册	150
10.3　验证镜像ID	151
10.4　创建镜像路径	152
10.4.1　创建mnt、diff和layers子目录	153
10.4.2　挂载祖先镜像并返回根目录	155
10.5　存储镜像内容	157
10.5.1　解压镜像内容	158
10.5.2　收集镜像大小并记录	160
10.5.3　存储jsonData信息	161
10.6　注册镜像ID	162
10.7　总结	163
第11章　docker build实现	164
11.1　引言	164
11.2　docker build执行流程	165
11.2.1　Docker Client与docker build	166
11.2.2　Docker Server与docker build	170
11.2.3　Docker Daemon与docker build	171
11.3　Dockerfile命令解析流程	174
11.4　Dockerfile命令分析	177
11.4.1　FROM命令	177
11.4.2　RUN命令	178
11.4.3　ENV命令	182
11.5　总结	182
第12章　Docker容器创建	183
12.1　引言	183
12.2　Docker容器运行流程	184
12.3　Docker Daemon创建容器对象	185
12.3.1　LookupImage	186
12.3.2　CheckDepth	188
12.3.3　mergeAndVerifyConfig	188
12.3.4　newContainer	189
12.3.5　createRootfs	190
12.3.6　ToDisk	190
12.3.7　Register	191
12.4　Docker Daemon启动容器	191
12.4.1　setupContainerDns	192
12.4.2　Mount	193
12.4.3　initializeNetworking	194
12.4.4　verifyDaemonSetting	194
12.4.5　prepareVolumesForContainer	195
12.4.6　setupLinkedContainers	196
12.4.7　setupWorkingDirectory	199
12.4.8　createDaemonEnvironment	199
12.4.9　populateCommand	200
12.4.10　setupMountsForContainer	200
12.4.11　waitForStart	201
12.5　总结	202
第13章　dockerinit启动	203
13.1　引言	203
13.2　dockerinit介绍	204
13.2.1　dockerinit初始化内容	204
13.2.2　dockerinit与Docker Daemon	204
13.3　dockerinit执行入口	205
13.3.1　createCommand分析	205
13.3.2　namespace.exec	207
13.4　dockerinit运行	208
13.4.1　reexec.Init()的分析	208
13.4.2　dockerinit的执行流程	210
13.5　libcontainer的运行	211
13.5.1　Docker Daemon设置cgroups参数	213
13.5.2　Docker Daemon创建网络栈资源	213
13.5.3　dockerinit配置网络栈	213
13.5.4　dockerinit初始化mount namespace	215
13.5.5　dockerinit完成namespace配置	215
13.5.6　dockerinit执行用户命令Entrypoint	217
13.6　总结	218
第14章　libcontainer介绍	219
14.1　引言	219
14.2　Docker、libcontainer以及LXC的关系	220
14.3　libcontainer模块分析	221
14.3.1　namespace	221
14.3.2　cgroup	224
14.3.3　网络	225
14.3.4　挂载	226
14.3.5　设备	227
14.3.6　nsinit	227
14.3.7　其他模块	227
14.4　总结	228
第15章　Swarm架构设计与实现	229
15.1　引言	229
15.2　Swarm架构	230
15.2.1　Swarm Node	231
15.2.2　Docker Node	231
15.2.3　node discovery	231
15.2.4　scheduler	232
15.3　Swarm命令	232
15.3.1　swarm create	232
15.3.2　swarm manage	232
15.3.3　swarm join	233
15.3.4　swarm list	234
15.4　总结	234
第16章　Machine架构设计与实现	235
16.1　引言	235
16.2　Machine架构	236
16.2.1　Machine	237
16.2.2　Store	237
16.2.3　Host	237
16.2.4　Driver	238
16.2.5　Provisioner	238
16.2.6　Machine运行流程	239
16.3　Machine与Swarm的结合	240
16.4　总结	241
第17章　Compose架构设计与实现	242
17.1　引言	242
17.2　Compose介绍	242
17.3　Compose架构	243
17.4　Compose评价	246
17.4.1　Compose单机能力	246
17.4.2　Compose跨节点能力	247
17.4.3　Compose与Swarm	247
17.5　总结	247
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Docker源码分析
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Go并发编程实战（第2版）
第1章　初识Go语言　　1
1.1　语言特性　　1
1.2　安装和设置　　2
1.3　工程结构　　3
1.3.1　工作区　　3
1.3.2　GOPATH　　4
1.3.3　源码文件　　5
1.3.4　代码包　　8
1.4　标准命令简述　　11
1.5　问候程序　　13
1.6　小结　　14
第2章　语法概览　　15
2.1　基本构成要素　　15
2.1.1　标识符　　15
2.1.2　关键字　　16
2.1.3　字面量　　17
2.1.4　操作符　　17
2.1.5　表达式　　19
2.2　基本类型　　20
2.3　高级类型　　22
2.3.1　数组　　23
2.3.2　切片　　23
2.3.3　字典　　24
2.3.4　函数和方法　　25
2.3.5　接口　　28
2.3.6　结构体　　29
2.4　流程控制　　30
2.4.1　代码块和作用域　　30
2.4.2　if语句　　32
2.4.3　switch语句　　32
2.4.4　for语句　　34
2.4.5　defer语句　　36
2.4.6　panic和recover　　38
2.5　聊天机器人　　40
2.6　小结　　44
第3章　并发编程综述　　45
3.1　并发编程基础　　45
3.1.1　串行程序与并发程序　　46
3.1.2　并发程序与并行程序　　46
3.1.3　并发程序与并发系统　　47
3.1.4　并发程序的不确定性　　47
3.1.5　并发程序内部的交互　　47
3.2　多进程编程　　48
3.2.1　进程　　48
3.2.2　关于同步　　55
3.2.3　管道　　60
3.2.4　信号　　65
3.2.5　socket　　74
3.3　多线程编程　　97
3.3.1　线程　　98
3.3.2　线程的同步　　107
3.4　多线程与多进程　　125
3.5　多核时代的并发编程　　126
3.6　小结　　130
第4章　Go的并发机制　　131
4.1　原理探究　　131
4.1.1　线程实现模型　　132
4.1.2　调度器　　142
4.1.3　更多细节　　158
4.2　goroutine　　160
4.2.1　go语句与goroutine　　160
4.2.2　主goroutine的运作　　166
4.2.3　runtime包与goroutine　　166
4.3　channel　　169
4.3.1　channel的基本概念　　169
4.3.2　单向channel　　180
4.3.3　for语句与channel　　184
4.3.4　select语句　　185
4.3.5　非缓冲的channel　　190
4.3.6　time包与channel　　192
4.4　实战演练：载荷发生器　　198
4.4.1　参数和结果　　199
4.4.2　基本结构　　201
4.4.3　初始化　　206
4.4.4　启动和停止　　212
4.4.5　调用器和功能测试　　221
4.5　小结　　231
第5章　同　　步　　232
5.1　锁的使用　　232
5.1.1　互斥锁　　232
5.1.2　读写锁　　236
5.1.3　锁的完整示例　　238
5.2　条件变量　　244
5.3　原子操作　　247
5.3.1　增或减　　247
5.3.2　比较并交换　　249
5.3.3　载入　　250
5.3.4　存储　　251
5.3.5　交换　　251
5.3.6　原子值　　252
5.3.7　应用于实际　　256
5.4　只会执行一次　　257
5.5　WaitGroup　　258
5.6　临时对象池　　262
5.7　实战演练——Concurrent Map　　265
5.8　小结　　280
第6章　网络爬虫框架设计和实现　　281
6.1　网络爬虫与框架　　281
6.2　功能需求和分析　　283
6.3　总体设计　　284
6.4　详细设计　　286
6.4.1　基本数据结构　　286
6.4.2　接口的设计　　293
6.5　工具的实现　　309
6.5.1　缓冲器　　309
6.5.2　缓冲池　　311
6.5.3　多重读取器　　317
6.6　组件的实现　　318
6.6.1　内部基础接口　　319
6.6.2　组件注册器　　321
6.6.3　下载器　　323
6.6.4　分析器　　325
6.6.5　条目处理管道　　328
6.7　调度器的实现　　329
6.7.1　基本结构　　329
6.7.2　初始化　　331
6.7.3　启动　　333
6.7.4　停止　　343
6.7.5　其他方法　　344
6.7.6　总结　　345
6.8　一个简单的图片爬虫　　346
6.8.1　概述　　346
6.8.2　命令参数　　346
6.8.3　初始化调度器　　348
6.8.4　监控调度器　　354
6.8.5　启动调度器　　364
6.9　扩展与思路　　365
6.10　本章小结　　368
附录A　Go语言的学习资源　　369
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Go并发编程实战（第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Go语言·云动力
目  录
第1章　 快速入门　 　 1
1.1　 编辑和编译　 　 2
1.2　 世界，你好！　 　 9
1.3　 自我复制　 　 11
1.4　 猜数游戏　 　 14
1.5　 图灵机　 　 19
1.6　 排版工具　 　 23
1.7　 游乐场　 　 30
1.8　 位钱　 　 36
1.9　 小结　 　 43
第2章　 静态类型　 　 44
2.1　 数制　 　 45
2.1.1　 整数　 　 45
2.1.2　 二进制补码　 　 46
2.1.3　 整数比较　 　 47
2.1.4　 按位运算　 　 48
2.1.5　 浮点数　 　 50
2.1.6　 复数　 　 51
2.1.7　 优先级　 　 52
2.1.8　 表达式　 　 53
2.2　 字符和字符串　 　 54
2.2.1　 UTF-8编码　 　 54
2.2.2　 Unicode字符　 　 55
2.2.3　 转义字符　 　 56
2.2.4　 字符串　 　 56
2.2.5　 字符串转换　 　 57
2.3　 数组　 　 60
2.3.1　 声明　 　 60
2.3.2　 下标　 　 61
2.3.3　 赋值　 　 61
2.4　 切片　 　 63
2.5　 结构体　 　 67
2.5.1　 项　 　 68
2.5.2　 内置　 　 69
2.6　 指针　 　 71
2.7　 小结　 　 73
第3章　 流程控制　 　 74
3.1　 简单语句　 　 75
3.2　 判断语句if　 　 77
3.3　 多分支语句switch　 　 79
3.4　 循环语句for 　 　 82
3.5　 遍历　 　 84
3.6　 标号和跳转　 　 85
3.7　 作用域　 　 86
3.8　 小结　 　 88
第4章　 函数　 　 89
4.1　 签名　 　 90
4.2　 参数　 　 91
4.3　 返回语句　 　 93
4.4　 函数调用　 　 95
4.5　 闭包　 　 97
4.6　 压后　 　 99
4.7　 派错和恢复　 　 100
4.8　 方法　 　 102
4.9　 包　 　 105
4.10　 导入　 　 107
4.11　 程序初始化　 　 108
4.12　 小结　 　 110
第5章　 动态类型　 　 111
5.1　 映射　 　 112
5.2　 界面类型　 　 116
5.3　 界面值　 　 119
5.4　 error界面　 　 122
5.5　 有界无类　 　 124
5.6　 排序　 　 126
5.7　 类型断言　 　 130
5.8　 类型分支　 　 133
5.9　 反射　 　 135
5.10　 小结　 　 141
第6章　 面向对象　 　 142
6.1　 背景　 　 143
6.2　 术语　 　 146
6.3　 与C++对比　 　 149
6.3.1　 继承　 　 149
6.3.2　 抽象类　 　 151
6.3.3　 泛型　 　 153
6.4　 小结　 　 154
第7章　 并发编程　 　 155
7.1　 背景　 　 156
7.2　 同步通信　 　 158
7.3　 去程　 　 162
7.4　 程道　 　 164
7.5　 遍历与关闭　 　 166
7.6　 MapReduce　 　 168
7.7　 select语句　 　 170
7.8　 程道值　 　 173
7.9　 互斥　 　 175
7.10　 小结　 　 177
第8章　 云计算　 　 178
8.1　 背景　 　 179
8.2　 GAE　 　 181
8.3　 Hello 世界！　 　 183
8.4　 画胡子　 　 185
8.5　 留言录　 　 191
8.6　 用户API　 　 195
8.7　 数据库API　 　 196
8.7.1　 术语　 　 197
8.7.2　 Go数据库API　 　 197
8.7.3　 实体键　 　 199
8.7.4　 查询和索引　 　 200
8.7.5　 实体组　 　 201
8.7.6　 限制　 　 201
8.8　 交易　 　 203
8.9　 散段　 　 205
8.10　 内存缓冲　 　 208
8.11　 大件库　 　 210
8.12　 URL抓取　 　 213
8.13　 任务队列　 　 214
8.13.1　 任务　 　 216
8.13.2　 任务执行　 　 217
8.13.3　 队列　 　 218
8.14　 后端　 　 220
8.15　 能力API 　 　 221
8.16　 电子邮件API 　 　 222
8.16.1　 发送　 　 222
8.16.2　 接收　 　 223
8.17　 信道API　 　 224
8.18　 小结　 　 226
第9章　 标准包　 　 227
9.1　 格式包　 　 228
9.1.1　 格式输出Printf　 　 229
9.1.2　 动词表　 　 230
9.1.3　 宽度和精度　 　 231
9.1.4　 报错　 　 232
9.1.5　 额外标记　 　 232
9.1.6　 格式输入　 　 233
9.1.7　 字符串格式　 　 234
9.2　 字节包　 　 236
9.3　 模板包　 　 239
9.4　 正则表达式包　 　 245
9.5　 时间包　 　 253
9.6　 超链接包　 　 258
9.6.1　 http服务器和客户机　 　 258
9.6.2　 https加密通信　 　 260
9.6.3　 Get　 　 263
9.6.4　 Post　 　 265
9.6.5　 Cookie　 　 268
9.7　 编码包　 　 271
9.7.1　 gob　 　 271
9.7.2　 json　 　 275
附录A　 Go的安装和使用　 　 277
附录B　 EBNF　 　 284
附录C　 中英术语对照表　 　 291
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Go语言·云动力
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Cloud Native Go
1  云之道	1
云之道的优点	2
-- 遵循简单	2
-- 测试优先，测试一切	3
-- 尽早发布，频繁发布	5
-- 自动化一切	6
-- 建立服务生态系统	7
为什么使用Go	8
-- 简单	8
-- 开源	8
-- 易于自动化和IDE自由化	8
本章小结	9
2  开始	11
正确的工具	11
配置Git	12
-- 安装Homebrew	12
-- 安装Git客户端	13
-- 安装Mercurial和Bazaar	13
-- 创建GitHub账户	14
创建Go环境	14
-- 配置Go工作区	14
检查环境	15
本章小结	16
3  Go入门	17
建立Hello cloud	18
使用基本函数	19
使用结构体	22
介绍Go接口	25
向结构体添加方法	25
-- Go中的接口动态类型检查	26
使用第三方包	28
创建自有包	30
-- 导出函数和数据	31
-- 创建包	31
本章小结	34
4  持续交付	35
Docker介绍	36
-- 为什么要使用Docker	36
-- 安装Docker	36
-- 运行Docker镜像	38
与Wercker的持续集成	39
-- 持续集成的最佳实践	39
-- 为什么使用Wercker	40
-- 创建Wercker应用程序	41
-- 安装Wercker CLI	42
-- 创建Wercker配置文件	43
-- 使用Wercker进行构建	48
-- 部署到Docker Hub	50
读者练习：创建完整的开发管道	51
-- 高级挑战：集成第三方库	53
本章小结	53
5  在Go中构建微服务	55
设计API First的服务	55
-- 设计match API	56
-- 创建API Blueprint	56
-- 通过Apiary测试和发布文档	58
架设微服务	59
构建Test First的服务	62
-- 创建第一个失败测试	63
-- 测试Location Header	66
-- 壮丽的蒙太奇：迭代测试	67
在云端部署和运行	70
-- 创建PWS账户	70
-- 配置PCF开发环境	70
-- 提交到Cloud Foundry	71
本章小结	72
6  运用后端服务	75
设计服务系统	75
测试优先构建依赖服务	77
-- 构建fulfillment服务	78
-- 构建catalog服务	81
在服务之间共享结构化数据	87
-- 客户端引用服务端包	88
-- 客户端复制服务端结构	88
-- 客户端与服务端引用共享包	89
使用服务捆绑来外部化地址与元数据	90
服务发现	93
-- 动态服务发现	94
--  Netflix的服务发现系统Eureka	94
读者练习	97
-- 进阶操作	97
本章小结	98
7  构建数据服务	99
构建MongoDB存储库	100
-- 为什么选择MongoDB	100
-- 更新存储库模型	100
-- 通过Go来操作MongoDB	101
-- 以Test-First方式编写MongoDB存储库	102
集成测试一个Mongo-Backed服务	107
-- 集成临时MongoDB数据库	108
-- 编写一个集成测试	110
在云中运行	115
-- 后端服务的配置	115
本章小结	117
8  事件溯源和CQRS	119
现实源自事件	120
-- 幂等	121
-- 隔离	121
-- 可测试	122
-- 可再现，可恢复	123
-- 大数据	123
拥抱最终一致性	123
CQRS简介	124
事件溯源案例	126
-- 天气监测	126
-- 互联网汽车	127
-- 社交媒体消息处理	127
代码示例：管理无人机舰队	128
构建命令处理程序服务	129
-- RabbitMQ介绍	129
-- 构建命令处理器服务	133
构建事件处理器	135
-- 对事件处理器进行集成测试	140
构建查询处理程序服务	140
本章小结	141
9  使用Go构建Web应用程序	143
处理静态文件和asset	143
支持JavaScript客户端	145
使用服务端模板	148
处理表单	150
使用cookie和会话状态	151
-- 写入cookie	152
-- 读取cookie	153
使用Wercker构建和部署	153
本章小结	155
10  云安全	157
保护Web应用程序	157
-- 应用程序安全性选项	158
-- 设置Auth0账户	159
-- 构建一个OAuth安全的Web应用程序	160
-- 运行安全的Web应用程序	164
保护微服务	166
-- 客户端凭据模式概述	166
-- 使用客户端凭据保护微服务	168
-- 关于SSL的注意事项	169
隐私和数据安全	170
-- 黑客不能得到你没有的	170
读者练习	172
本章小结	173
11  使用WebSockets	175
WebSockets解析	175
--  WebSockets如何工作	176
--  WebSockets与服务器发送事件对比	177
-- 设计WebSockets服务器 	177
WebSockets的云原生适应性	178
使用消息服务创建WebSockets应用	180
-- 关于JavaScript框架	183
-- 运行WebSockets示例	183
本章小结	184
12  使用React构建Web视图	185
JavaScript的形势 	186
为什么选择React	186
-- 虚拟DOM	187
-- 组件组合	187
-- 响应式数据流	188
-- 集中焦点	188
-- 使用的便利性	189
React应用程序剖析	189
--  package.json文件	189
--  Webpack.config.js文件	191
-- .babelrc文件	191
-- 理解JSX和Webpack	191
-- React组件	192
构建简单的React应用程序	192
-- 不赞成的做法	199
测试React应用程序	200
进一步阅读	200
-- React网站	200
-- React书籍	201
-- 其他资料 	201
本章小结 	201
13  使用Flux构建可扩展的UI	203
Flux介绍	203
-- dispatcher	204
-- store	204
-- view	205
-- action	205
-- source	205
-- Flux的复杂性	205
创建Flux应用程序	206
本章小结	215
14  创建完整应用World of FluxCraft	217
World of FluxCraft介绍	218
架构概览	219
-- 独立扩展、版本控制和部署	221
-- 数据库不是集成层	221
-- 单向不可变数据流	221
Flux GUI	222
-- Go UI宿主服务	223
-- 玩家移动时序图	224
命令处理	225
事件处理	226
维持现实服务的状态	227
地图管理	227
自动验收测试	228
本章小结	230
15  结论	231
我们学到了什么	231
-- Go不是小众语言	231
-- 微服务应该有多“微”	232
-- 持续交付和部署	232
-- 测试一切	232
-- 尽早发布，频繁发布	232
-- 事件溯源、CQRS和更多首字母缩略词	233
下一步	233
附录A  云应用的故障排查	235
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Cloud Native Go
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>GO语言公链开发实战
推荐序一
推荐序二
前言
第1章　公链设计架构
第2章　交互工具
第3章　守护进程的初始化与运行
第4章　接口层
第5章　内核层：区块与区块链
第6章　内核层：交易
第7章　内核层：智能合约
第8章　内核层：虚拟机
第9章　钱包层
第10章　P2P分布式网络
第11章　数据存储
第12章　共识算法
第13章　矿池及挖矿流程
第14章　展望
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>GO语言公链开发实战
