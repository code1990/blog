1	{"count":94,"start":0,"total":94,"books":[{"rating":{"max":10,"numRaters":395,"average":"9.3","min":0},"subtitle":"","author":["厄马(Raoul-Gabriel Urma)","弗斯科(Mario Fusco)","米克罗夫特(Alan Mycroft)"],"pubdate":"2016-4-1","tags":[{"count":338,"name":"Java","title":"Java"},{"count":231,"name":"java8","title":"java8"},{"count":112,"name":"函数式编程","title":"函数式编程"},{"count":109,"name":"编程","title":"编程"},{"count":92,"name":"计算机","title":"计算机"},{"count":91,"name":"java","title":"java"},{"count":59,"name":"软件开发","title":"软件开发"},{"count":34,"name":"开发","title":"开发"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29343267.jpg","binding":"平装","translator":["陆明刚","劳佳"],"catalog":"第一部分 基础知识\n第1章　为什么要关心Java 8　　2\n1.1　Java怎么还在变　　4\n1.1.1　Java在编程语言生态系统中的位置　　4\n1.1.2　流处理　　6\n1.1.3　用行为参数化把代码传递给方法　　7\n1.1.4　并行与共享的可变数据　　7\n1.1.5　Java需要演变　　8\n1.2　Java中的函数　　8\n1.2.1　方法和Lambda作为一等公民　　9\n1.2.2　传递代码：一个例子　　11\n1.2.3　从传递方法到Lambda　　12\n1.3　流　　13\n1.4　默认方法　　17\n1.5　来自函数式编程的其他好思想　　18\n1.6　小结　　19\n第2章　通过行为参数化传递代码　　20\n2.1　应对不断变化的需求　　21\n2.1.1　初试牛刀：筛选绿苹果　　21\n2.1.2　再展身手：把颜色作为参数　　21\n2.1.3　第三次尝试：对你能想到的每个属性做筛选　　22\n2.2　行为参数化　　23\n2.3　对付啰嗦　　27\n2.3.1　匿名类　　28\n2.3.2　第五次尝试：使用匿名类　　28\n2.3.3　第六次尝试：使用Lambda表达式　　30\n2.3.4　第七次尝试：将List类型抽象化　　31\n2.4　真实的例子　　31\n2.4.1　用Comparator来排序　　31\n2.4.2　用Runnable执行代码块　　32\n2.4.3　GUI事件处理　　32\n2.5　小结　　33\n第3章　Lambda表达式　　34\n3.1　Lambda管中窥豹　　35\n3.2　在哪里以及如何使用Lambda　　37\n3.2.1　函数式接口　　37\n3.2.2　函数描述符　　39\n3.3　把Lambda付诸实践：环绕执行模式　　41\n3.3.1　第1步记得行为参数化　　41\n3.3.2　第2步：使用函数式接口来传递行为　　42\n3.3.3　第3步：执行一个行为　　42\n3.3.4　第4步：传递Lambda　　42\n3.4　使用函数式接口　　43\n3.4.1　Predicate　　44\n3.4.2　Consumer　　44\n3.4.3　Function　　45\n3.5　类型检查、类型推断以及限制　　49\n3.5.1　类型检查　　49\n3.5.2　同样的Lambda，不同的函数式接口　　50\n3.5.3　类型推断　　51\n3.5.4　使用局部变量　　52\n3.6　方法引用　　53\n3.6.1　管中窥豹　　53\n3.6.2　构造函数引用　　55\n3.7　Lambda和方法引用实战　　57\n3.7.1　第1步：传递代码　　58\n3.7.2　第2步：使用匿名类　　58\n3.7.3　第3步：使用Lambda表达式　　58\n3.7.4　第4步：使用方法引用　　59\n3.8　复合Lambda表达式的有用方法　　59\n3.8.1　比较器复合　　60\n3.8.2　谓词复合　　60\n3.8.3　函数复合　　61\n3.9　数学中的类似思想　　62\n3.9.1　积分　　62\n3.9.2　与Java 8的Lambda联系起来　　63\n3.10　小结　　64\n第二部分 函数式数据处理\n第4章　引入流　　68\n4.1　流是什么　　68\n4.2　流简介　　72\n4.3　流与集合　　74\n4.3.1　只能遍历一次　　75\n4.3.2　外部迭代与内部迭代　　76\n4.4　流操作　　78\n4.4.1　中间操作　　78\n4.4.2　终端操作　　79\n4.4.3　使用流　　80\n4.5　小结　　81\n第5章　使用流　　82\n5.1　筛选和切片　　83\n5.1.1　用谓词筛选　　83\n5.1.2　筛选各异的元素　　83\n5.1.3　截短流　　84\n5.1.4　跳过元素　　85\n5.2　映射　　86\n5.2.1　对流中每一个元素应用函数　　86\n5.2.2　流的扁平化　　87\n5.3　查找和匹配　　90\n5.3.1　检查谓词是否至少匹配一个元素　　90\n5.3.2　检查谓词是否匹配所有元素　　90\n5.3.3　查找元素　　91\n5.3.4　查找第一个元素　　92\n5.4　归约　　92\n5.4.1　元素求和　　93\n5.4.2　最大值和最小值　　94\n5.5　付诸实践　　97\n5.5.1　领域：交易员和交易　　98\n5.5.2　解答　　99\n5.6　数值流　　101\n5.6.1　原始类型流特化　　101\n5.6.2　数值范围　　102\n5.6.3　数值流应用：勾股数　　103\n5.7　构建流　　105\n5.7.1　由值创建流　　106\n5.7.2　由数组创建流　　106\n5.7.3　由文件生成流　　106\n5.7.4　由函数生成流：创建无限流　　107\n5.8　小结　　110\n第6章　用流收集数据　　111\n6.1　收集器简介　　112\n6.1.1　收集器用作高级归约　　112\n6.1.2　预定义收集器　　113\n6.2　归约和汇总　　114\n6.2.1　查找流中的最大值和最小值　　114\n6.2.2　汇总　　115\n6.2.3　连接字符串　　116\n6.2.4　广义的归约汇总　　117\n6.3　分组　　120\n6.3.1　多级分组　　121\n6.3.2　按子组收集数据　　122\n6.4　分区　　126\n6.4.1　分区的优势　　126\n6.4.2　将数字按质数和非质数分区　　128\n6.5　收集器接口　　129\n6.5.1　理解Collector接口声明的方法　　130\n6.5.2　全部融合到一起　　134\n6.6　开发你自己的收集器以获得更好的性能　　135\n6.6.1　仅用质数做除数　　136\n6.6.2　比较收集器的性能　　139\n6.7　小结　　140\n第7章　并行数据处理与性能　　141\n7.1　并行流　　141\n7.1.1　将顺序流转换为并行流　　142\n7.1.2　测量流性能　　144\n7.1.3　正确使用并行流　　147\n7.1.4　高效使用并行流　　148\n7.2　分支\/合并框架　　149\n7.2.1　使用RecursiveTask　　149\n7.2.2　使用分支\/合并框架的最佳做法　　153\n7.2.3　工作窃取　　154\n7.3　Spliterator　　155\n7.3.1　拆分过程　　155\n7.3.2　实现你自己的Spliterator　　157\n7.4　小结　　162\n第三部分 高效Java 8编程\n第8章　重构、测试和调试　　164\n8.1　为改善可读性和灵活性重构代码　　164\n8.1.1　改善代码的可读性　　165\n8.1.2　从匿名类到Lambda表达式的转换　　165\n8.1.3　从Lambda表达式到方法引用的转换　　166\n8.1.4　从命令式的数据处理切换到Stream　　167\n8.1.5　增加代码的灵活性　　168\n8.2　使用Lambda重构面向对象的设计模式　　170\n8.2.1　策略模式　　171\n8.2.2　模板方法　　172\n8.2.3　观察者模式　　173\n8.2.4　责任链模式　　175\n8.2.5　工厂模式　　177\n8.3　测试Lambda表达式　　178\n8.3.1　测试可见Lambda函数的行为　　179\n8.3.2　测试使用Lambda的方法的行为　　179\n8.3.3　将复杂的Lambda表达式分到不同的方法　　180\n8.3.4　高阶函数的测试　　180\n8.4　调试　　181\n8.4.1　查看栈跟踪　　181\n8.4.2　使用日志调试　　183\n8.5　小结　　184\n第9章　默认方法　　 185\n9.1　不断演进的API　　 187\n9.1.1　初始版本的API　　188\n9.1.2　第二版API　　188\n9.2　概述默认方法　　190\n9.3　默认方法的使用模式　　192\n9.3.1　可选方法　　192\n9.3.2　行为的多继承　　192\n9.4　解决冲突的规则　　196\n9.4.1　解决问题的三条规则　　196\n9.4.2　选择提供了最具体实现的默认方法的接口　　197\n9.4.3　冲突及如何显式地消除歧义　　198\n9.4.4　菱形继承问题　　200\n9.5　小结　　201\n第10章　用Optional取代null　　202\n10.1　如何为缺失的值建模　　 203\n10.1.1　采用防御式检查减少Null-PointerException　　203\n10.1.2　null带来的种种问题　　204\n10.1.3　其他语言中null的替代品　　205\n10.2　Optional类入门　　206\n10.3　应用Optional的几种模式　　 207\n10.3.1　创建Optional对象　　208\n10.3.2　使用map从Optional对象中提取和转换值　　208\n10.3.3　使用flatMap链接Optional对象　　209\n10.3.4　默认行为及解引用Optional对象　　213\n10.3.5　两个Optional对象的组合　　213\n10.3.6　使用filter剔除特定的值　　214\n10.4　使用Optional的实战示例　　 216\n10.4.1　用Optional封装可能为null的值　　216\n10.4.2　异常与Optional的对比　　217\n10.4.3　把所有内容整合起来　　218\n10.5　小结　　219\n第11章　CompletableFuture：组合式异步编程　　220\n11.1　Future接口　　222\n11.1.1　Future接口的局限性　　223\n11.1.2　使用CompletableFuture构建异步应用　　223\n11.2　实现异步API　　 224\n11.2.1　将同步方法转换为异步方法　　225\n11.2.2　错误处理　　227\n11.3　让你的代码免受阻塞之苦　　228\n11.3.1　使用并行流对请求进行并行操作　　229\n11.3.2　使用CompletableFuture发起异步请求　　230\n11.3.3　寻找更好的方案　　232\n11.3.4　使用定制的执行器　　233\n11.4　对多个异步任务进行流水线操作　　234\n11.4.1　实现折扣服务　　235\n11.4.2　使用Discount服务　　236\n11.4.3　构造同步和异步操作　　237\n11.4.4　将两个Completable-Future对象整合起来，无论它们是否存在依赖　　239\n11.4.5　对Future和Completable-Future的回顾　　241\n11.5　响应CompletableFuture的completion事件　　242\n11.5.1　对最佳价格查询器应用的优化　　243\n11.5.2　付诸实践　　244\n11.6　小结　　245\n第12章　新的日期和时间API　　246\n12.1　LocalDate、LocalTime、Instant、Duration以及Period　　247\n12.1.1　使用LocalDate和LocalTime　　247\n12.1.2　合并日期和时间　　248\n12.1.3　机器的日期和时间格式　　249\n12.1.4　定义Duration或Period　　249\n12.2　操纵、解析和格式化日期　　251\n12.2.1　使用TemporalAdjuster　　253\n12.2.2　打印输出及解析日期－时间对象　　255\n12.3　处理不同的时区和历法　　256\n12.3.1　利用和UTC\/格林尼治时间的固定偏差计算时区　　257\n12.3.2　使用别的日历系统　　258\n12.4　小结　　259\n第四部分 超越Java 8\n第13章　函数式的思考　　262\n13.1　实现和维护系统　　262\n13.1.1　共享的可变数据　　263\n13.1.2　声明式编程　　264\n13.1.3　为什么要采用函数式编程　　265\n13.2　什么是函数式编程　　265\n13.2.1　函数式Java编程　　266\n13.2.2　引用透明性　　268\n13.2.3　面向对象的编程和函数式编程的对比　　 268\n13.2.4　函数式编程实战　　269\n13.3　递归和迭代　　271\n13.4　小结　　274\n第14章　函数式编程的技巧　　275\n14.1　无处不在的函数　　275\n14.1.1　高阶函数　　275\n14.1.2　科里化　　277\n14.2　持久化数据结构　　278\n14.2.1　破坏式更新和函数式更新的比较　　279\n14.2.2　另一个使用Tree的例子　　281\n14.2.3　采用函数式的方法　　282\n14.3　Stream的延迟计算　　283\n14.3.1　自定义的Stream　　 283\n14.3.2　创建你自己的延迟列表　　286\n14.4　模式匹配　　290\n14.4.1　访问者设计模式　　291\n14.4.2　用模式匹配力挽狂澜　　292\n14.5　杂项　　295\n14.5.1　缓存或记忆表　　295\n14.5.2　“返回同样的对象”意味着什么　　296\n14.5.3　结合器　　296\n14.6　小结　　297\n第15章　面向对象和函数式编程的混合：Java 8和Scala的比较　　 299\n15.1　Scala简介　　300\n15.1.1　你好，啤酒　　300\n15.1.2　基础数据结构：List、Set、Map、Tuple、Stream以及Option　　302\n15.2　函数　　306\n15.2.1　Scala中的一等函数　　307\n15.2.2　匿名函数和闭包　　307\n15.2.3　科里化　　309\n15.3　类和trait　　310\n15.3.1　更加简洁的Scala类　　310\n15.3.2　Scala的trait与Java 8的接口对比　　311\n15.4　小结　　312\n第16章　结论以及Java的未来　　313\n16.1　回顾Java 8的语言特性　　 313\n16.1.1　行为参数化（Lambda 以及方法引用）　　314\n16.1.2　流　　314\n16.1.3　CompletableFuture　　315\n16.1.4　Optional　　315\n16.1.5　默认方法　　316\n16.2　Java 的未来　　316\n16.2.1　集合　　316\n16.2.2　类型系统的改进　　317\n16.2.3　模式匹配　　318\n16.2.4　更加丰富的泛型形式　　319\n16.2.5　对不变性的更深层支持　　321\n16.2.6　值类型　　322\n16.3　写在最后的话　　325\n附录A　其他语言特性的更新　　326\n附录B　类库的更新　　330\n附录C　如何以并发方式在同一个流上执行多种操作　　338\n附录D　Lambda表达式和JVM 字节码　　346","pages":"349","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s29343267.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s29343267.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29343267.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26772632\/","id":"26772632","publisher":"人民邮电出版社","isbn10":"7115419345","isbn13":"9787115419347","title":"Java 8实战","url":"https:\/\/api.douban.com\/v2\/book\/26772632","alt_title":"","author_intro":"作者简介：\nRaoul-Gabriel Urma\n剑桥大学计算机科学博士，软件工程师，演讲者，培训师，Cambridge Coding Academy联合创始人、CEO。曾与谷歌、eBay、甲骨文和高盛集团等大公司合作，并参与过多个创业项目。撰写过十余篇经同行审阅的技术文章，并在国际会议上发表过40多篇演讲。\nMario Fusco\nRed Hat高级软件工程师，负责JBoss规则引擎Drools的核心开发。拥有丰富的Java开发经验，曾领导媒体公司、金融部门等多个行业的企业级项目开发。对函数式编程和领域特定语言等有浓厚兴趣，并创建了开放源码库lambdaj。\nAlan Mycroft\n剑桥大学计算机实验室计算学教授，剑桥大学罗宾逊学院研究员，欧洲编程语言和系统协会联合创始人，树莓派基金会联合创始人和理事。发表过大约100篇研究论文，指导过20多篇博士论文。他的研究主要关注编程语言及其语义、优化和实施。他与业界联系紧密，曾于学术休假期间在AT&T实验室和英特尔工作，还创立了Codemist公司，该公司设计了最初的ARM C编译器Norcroft。\n译者简介：\n陆明刚\n毕业于四川大学，目前在EMC中国卓越研发集团任首席工程师，曾任趋势科技中国软件研发中心技术经理，在信息科学和工程领域有十余年的实践和研究经验，拥有多项中国及美国专利。关注JVM性能调优和大数据及其实践，喜欢挖掘技术背后的内幕并乐此不疲。\n劳佳\n硕士毕业于上海交通大学，现在SAP美国任高级软件支持顾问。业余爱好语言、数学、设计，近年翻译出版了《咨询的奥秘》《卓越程序员密码》等书。","summary":"本书全面介绍了Java 8 这个里程碑版本的新特性，包括Lambdas、流和函数式编程。有了函数式的编程特性，可以让代码更简洁，同时也能自动化地利用多核硬件。全书分四个部分：基础知识、函数式数据处理、高效Java 8 编程和超越Java 8，清晰明了地向读者展现了一幅Java 与时俱进的现代化画卷。","series":{"id":"46192","title":"图灵程序设计丛书·Java系列"},"price":"CNY 79.00"},{"rating":{"max":10,"numRaters":216,"average":"7.8","min":0},"subtitle":"","author":["[英] Richard Warburton"],"pubdate":"2015-3","tags":[{"count":131,"name":"Java","title":"Java"},{"count":106,"name":"函数式编程","title":"函数式编程"},{"count":52,"name":"Java8","title":"Java8"},{"count":40,"name":"编程","title":"编程"},{"count":33,"name":"计算机","title":"计算机"},{"count":27,"name":"java","title":"java"},{"count":25,"name":"函数","title":"函数"},{"count":24,"name":"软件开发","title":"软件开发"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s28028344.jpg","binding":"平装","translator":["王群锋"],"catalog":"前言　　IX\n第1章　简介　　1\n1.1　为什么需要再次修改Java　　1\n1.2　什么是函数式编程　　2\n1.3　示例　　2\n第2章　Lambda 表达式　　5\n2.1　第一个Lambda 表达式　　5\n2.2　如何辨别Lambda 表达式　　6\n2.3　引用值，而不是变量　　8\n2.4　函数接口　　9\n2.5　类型推断　　10\n2.6　要点回顾　　12\n2.7　练习　　12\n第3章　流　　15\n3.1　从外部迭代到内部迭代　　15\n3.2　实现机制　　17\n3.3　常用的流操作　　19\n3.3.1　collect(toList())　　19\n3.3.2　map　　19\n3.3.3　filter　　21\n3.3.4　flatMap　　22\n3.3.5　max 和min　　23\n3.3.6　通用模式　　24\n3.3.7　reduce　　24\n3.3.8　整合操作　　26\n3.4　重构遗留代码　　27\n3.5　多次调用流操作　　30\n3.6　高阶函数　　31\n3.7　正确使用Lambda 表达式　　31\n3.8　要点回顾　　32\n3.9　练习　　32\n3.10　进阶练习　　33\n第4章　类库　　35\n4.1　在代码中使用Lambda 表达式　　35\n4.2　基本类型　　36\n4.3　重载解析　　38\n4.4　@FunctionalInterface　　40\n4.5　二进制接口的兼容性　　40\n4.6　默认方法　　41\n4.7　多重继承　　45\n4.8　权衡　　46\n4.9　接口的静态方法　　46\n4.10　Optional　　47\n4.11　要点回顾　　48\n4.12　练习　　48\n4.13　开放练习　　49\n第5章　高级集合类和收集器　　51\n5.1　方法引用　　51\n5.2　元素顺序　　52\n5.3　使用收集器　　54\n5.3.1　转换成其他集合　　54\n5.3.2　转换成值　　55\n5.3.3　数据分块　　55\n5.3.4　数据分组　　56\n5.3.5　字符串　　57\n5.3.6　组合收集器　　58\n5.3.7　重构和定制收集器　　60\n5.3.8　对收集器的归一化处理　　65\n5.4　一些细节　　66\n5.5　要点回顾　　67\n5.6　练习　　67\n第6章　数据并行化　　69\n6.1　并行和并发　　69\n6.2　为什么并行化如此重要　　70\n6.3　并行化流操作　　71\n6.4　模拟系统　　72\n6.5　限制　　75\n6.6　性能　　75\n6.7　并行化数组操作　　78\n6.8　要点回顾　　80\n6.9　练习　　80\n第7章　测试、调试和重构　　81\n7.1　重构候选项　　81\n7.1.1　进进出出、摇摇晃晃　　82\n7.1.2　孤独的覆盖　　82\n7.1.3　同样的东西写两遍　　83\n7.2　Lambda 表达式的单元测试　　85\n7.3　在测试替身时使用Lambda 表达式　　87\n7.4　惰性求值和调试　　89\n7.5　日志和打印消息　　89\n7.6　解决方案：peak　　90\n7.7　在流中间设置断点　　90\n7.8　要点回顾　　90\n第8章　设计和架构的原则　　91\n8.1　Lambda 表达式改变了设计模式　　92\n8.1.1　命令者模式　　92\n8.1.2　策略模式　　95\n8.1.3　观察者模式　　97\n8.1.4　模板方法模式　　100\n8.2　使用Lambda 表达式的领域专用语言　　102\n8.2.1　使用Java 编写DSL　　103\n8.2.2　实现　　104\n8.2.3　评估　　106\n8.3　使用Lambda 表达式的SOLID 原则　　106\n8.3.1　单一功能原则　　107\n8.3.2　开闭原则　　109\n8.3.3　依赖反转原则　　 111\n8.4　进阶阅读　　114\n8.5　要点回顾　　114\n第9章　使用Lambda 表达式编写并发程序　　115\n9.1　为什么要使用非阻塞式I\/O　　115\n9.2　回调　　116\n9.3　消息传递架构　　119\n9.4　末日金字塔　　120\n9.5　Future　　122\n9.6　CompletableFuture　　123\n9.7　响应式编程　　126\n9.8　何时何地使用新技术　　128\n9.9　要点回顾　　129\n9.10　练习　　129\n第10章　下一步该怎么办　　131\n封面介绍　　133","ebook_url":"https:\/\/read.douban.com\/ebook\/12187857\/","pages":"148","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s28028344.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s28028344.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s28028344.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26346017\/","id":"26346017","publisher":"人民邮电出版社","isbn10":"7115384886","isbn13":"9787115384881","title":"Java 8函数式编程","url":"https:\/\/api.douban.com\/v2\/book\/26346017","alt_title":"","author_intro":"作者简介：\nRichard Warburton\n一位经验丰富的技术专家，善于解决复杂深奥的技术问题，拥有华威大学计算机科学专业博士学位。近期他一直从事高性能计算方面的数据分析工作。他是英国伦敦Java社区的领导者，组织过面向Java 8中Lambda表达式、日期和时间的Adopt-a-JSR项目，以及Openjdk Hackdays活动。Richard还是知名的会议演讲嘉宾，曾在JavaOne、DevoxxUK和JAX London等会议上演讲。\n译者简介：\n王群锋\n毕业于西安电子科技大学，现任职于IBM西安研发中心，从事下一代统计预测软件的开发运维工作。","summary":"通过每一章的练习快速掌握Java 8中的Lambda表达式\n分析流、高级集合和其他Java 8类库的改进\n利用多核CPU提高数据并发的性能\n将现有代码库和库代码Lambda化\n学习Lambda表达式单元测试和调试的实践解决方案\n用Lambda表达式实现面向对象编程的SOLID原则\n编写能有效执行消息传送和非阻塞I\/O的并发应用","ebook_price":"19.99","series":{"id":"46192","title":"图灵程序设计丛书·Java系列"},"price":"39.00元"},{"rating":{"max":10,"numRaters":5,"average":"0.0","min":0},"subtitle":"Master the principles and techniques of multithreaded programming with the Java 8 Concurrency API","author":["Javier Fernandez Gonzalez"],"pubdate":"2016-2-29","tags":[{"count":5,"name":"Java","title":"Java"},{"count":2,"name":"并发编程","title":"并发编程"},{"count":1,"name":"程序设计","title":"程序设计"},{"count":1,"name":"java8","title":"java8"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s28576358.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"430","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s28576358.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s28576358.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s28576358.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26760497\/","id":"26760497","publisher":"Packt Publishing","isbn10":"1785886126","isbn13":"9781785886126","title":"Mastering Concurrency Programming with Java 8","url":"https:\/\/api.douban.com\/v2\/book\/26760497","alt_title":"","author_intro":"","summary":"Master the principles and techniques of multithreaded programming with the Java 8 Concurrency API\nAbout This Book\nImplement concurrent applications using the Java 8 Concurrency API and its new componentsImprove the performance of your applications or process more data at the same time, taking advantage of all of your resources.Construct real-world examples related to machine learning, data mining, image processing, and client\/server environments\nWho This Book Is For\nIf you are a competent Java developer with a good understanding of concurrency but have no knowledge of how to effectively implement concurrent programs or use streams to make processes more efficient, then this book is for you.\nWhat You Will Learn\nDesign concurrent applications by converting a sequential algorithm into a concurrent oneDiscover how to avoid all the possible problems you can get in concurrent algorithmsUse the Executor framework to manage concurrent tasks without creating threadsExtend and modify Executors to adapt their behavior to your needsSolve problems using the divide and conquer technique and the Fork\/Join frameworkProcess massive data sets with parallel streams and Map\/Reduce implementationControl data-race conditions using concurrent data structures and synchronization mechanismsTest and monitor concurrent applications\nIn Detail\nConcurrency programming allows several large tasks to be divided into smaller sub-tasks, which are further processed as individual tasks that run in parallel. All the sub-tasks are combined together once the required results are achieved; they are then merged to get the final output. The whole process is very complex. This process goes from the design of concurrent algorithms to the testing phase where concurrent applications need extra attention. Java includes a comprehensive API with a lot of ready-to-use components to implement powerful concurrency applications in an easy way, but with a high flexibility to adapt these components to your needs.\nThe book starts with a full description of design principles of concurrent applications and how to parallelize a sequential algorithm. We'll show you how to use all the components of the Java Concurrency API from basics to the most advanced techniques to implement them in powerful concurrency applications in Java.\nYou will be using real-world examples of complex algorithms related to machine learning, data mining, natural language processing, image processing in client \/ server environments. Next, you will learn how to use the most important components of the Java 8 Concurrency API: the Executor framework to execute multiple tasks in your applications, the phaser class to implement concurrent tasks divided into phases, and the Fork\/Join framework to implement concurrent tasks that can be split into smaller problems (using the divide and conquer technique). Toward the end, we will cover the new inclusions in Java 8 API, the Map and Reduce model, and the Map and Collect model. The book will also teach you about the data structures and synchronization utilities to avoid data-race conditions and other critical problems. Finally, the book ends with a detailed description of the tools and techniques that you can use to test a Java concurrent application.\nStyle and approach\nA complete guide implementing real-world examples with algorithms related to machine learning, data mining, and natural language processing in client\/server environments. All the examples are explained in a step-by-step approach.","price":"USD 54.99"},{"rating":{"max":10,"numRaters":1,"average":"0.0","min":0},"subtitle":"Introducing Java 8 Lambdas","author":["Madhusudhan Konda"],"pubdate":"","tags":[{"count":1,"name":"java8","title":"java8"},{"count":1,"name":"Java","title":"Java"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29444067.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"166","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s29444067.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s29444067.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29444067.jpg"},"alt":"https:\/\/book.douban.com\/subject\/27038160\/","id":"27038160","publisher":"","isbn10":"1517534585","isbn13":"9781517534585","title":"All About Java 8 Lambdas","url":"https:\/\/api.douban.com\/v2\/book\/27038160","alt_title":"","author_intro":"About the Author\nMadhusudhan Konda is a Java Developer working in London, primarily for investment banks and financial organisations. He is the Author of well-received Just series (Just Spring, Just Hibernate and others) from O’Reilly publishing house. He enjoys explaining complex topics in a simple and concise manner. His goal is to write technical books that can be read over a weekend at an affordable price!","summary":"Lambda is thus far the biggest change introduced in the Java language since it’s inception. All About Java 8 Lambdas is a weekend read book, written concisely in a plain and simple text with easy to understand code examples and finely organised chapters. The aim of the book is to learn lambda expressions and related Java 8 features in a weekend. Along with lambdas, this book will demystify the other features such as interface unlocking, functional libraries, streams and parallelism just to name a few. This is a must read book if you want to learn the new features of lambda programming in Java 8. In this book, we will: * Learn and develop lambda expressions from ground up * Explore functional interfaces and function libraries in details * Unravel the Streams API * Understand the parallelism concepts","price":""},{"rating":{"max":10,"numRaters":37,"average":"7.4","min":0},"subtitle":"Pragmatic Functional Programming","author":["Richard Warburton"],"pubdate":"2014-4-7","tags":[{"count":34,"name":"Java","title":"Java"},{"count":22,"name":"lambda","title":"lambda"},{"count":20,"name":"Java8","title":"Java8"},{"count":6,"name":"计算机","title":"计算机"},{"count":5,"name":"英文版","title":"英文版"},{"count":5,"name":"编程语言","title":"编程语言"},{"count":4,"name":"FP","title":"FP"},{"count":3,"name":"编程","title":"编程"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s27245543.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"182","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s27245543.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s27245543.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s27245543.jpg"},"alt":"https:\/\/book.douban.com\/subject\/25801524\/","id":"25801524","publisher":"O'Reilly Media","isbn10":"1449370772","isbn13":"9781449370770","title":"Java 8 Lambdas","url":"https:\/\/api.douban.com\/v2\/book\/25801524","alt_title":"","author_intro":"Richard is an empirical technologist and solver of deep-dive technical problems. He has professionally worked on static analysis problems, verifying part of a compiler and developing advanced automated bug detection technology. More recently his career has been focussed on data analytics for high performance computing. He is a leader in the London Java Community, sits on their JCP Committee and organises the Adopt-a-JSR programs for Lambdas and Date and Time in Java 8. Richard is also a known conference speaker, having talked at JavaOne, DevoxxUK and JAX London. He obtained a PhD in Computer Science from The University of Warwick where his research focussed on compiler theory.","summary":"If you're an experienced Java programmer, Java 8 Lambdas shows you how to make use of your existing skills to adapt their thinking and your codebase to use lambda expressions properly. Starting with basic examples, this book is focused solely on Java 8 language changes and related API changes, so you don’t need to buy and read a 900 page book in order to brush up. Lambdas make a programmer's job easier, and this book will teach you how. Coverage includes introductory syntax for lambda expressions, method references that allow you to reuse existing named methods from your codebase, and the collection library in Java 8.","price":"USD 29.99"},{"rating":{"max":10,"numRaters":61,"average":"8.3","min":0},"subtitle":"Lambdas, Streams, and functional-style programming","author":["Raoul-Gabriel  Urma","Mario Fusco","Alan Mycroft"],"pubdate":"2014-8-28","tags":[{"count":58,"name":"Java","title":"Java"},{"count":21,"name":"lambda","title":"lambda"},{"count":16,"name":"编程","title":"编程"},{"count":15,"name":"计算机","title":"计算机"},{"count":9,"name":"软件开发","title":"软件开发"},{"count":9,"name":"Java8","title":"Java8"},{"count":4,"name":"8","title":"8"},{"count":3,"name":"英文原版","title":"英文原版"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s27570849.jpg","binding":"Paperback","translator":[],"catalog":"Table of Contents\nPART I: FUNDAMENTALS\n1 Java 8: why should you care? - FREE\n2 Passing code with behavior parameterization - AVAILABLE\n3 Lambda expressions - AVAILABLE\nPART II: FUNCTIONAL-STYLE DATA PROCESSING\n4 Processing data with streams - AVAILABLE\n5 Collecting data with streams - AVAILABLE\n6 Parallel data processing and performance - AVAILABLE\nPART III: EFFECTIVE JAVA 8 PROGRAMMING\n7 Refactoring, testing, debugging - AVAILABLE\n8 Default methods - AVAILABLE\n9 Optional: a better alternative to null - AVAILABLE\n10 CompletableFuture: composable asynchronous programming - AVAILABLE\n11 New Date and Time API - AVAILABLE\nPART IV: BEYOND JAVA 8\n12 Thinking functionally - AVAILABLE\n13 Functional programming techniques - AVAILABLE\n14 Blending OOP and FP: comparing Java 8 and Scala - AVAILABLE\n15 Conclusions and \"where next\" for Java - FREE\nAPPENDICES:\nA Miscellaneous language updates - AVAILABLE\nB Miscellaneous library updates - AVAILABLE\nC Performing multiple operations in parallel on a Stream - AVAILABLE\nD Lambdas and bytecode - AVAILABLE","pages":"424","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s27570849.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s27570849.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s27570849.jpg"},"alt":"https:\/\/book.douban.com\/subject\/25912747\/","id":"25912747","publisher":"Manning Publications","isbn10":"1617291994","isbn13":"9781617291999","title":"Java 8 in Action","url":"https:\/\/api.douban.com\/v2\/book\/25912747","alt_title":"","author_intro":"Raoul-Gabriel Urma has worked as a software engineer for Oracle's Java Platform Group, Google's Python team, Ebay, and Goldman Sachs as well as for several startup projects. He's currently completing a PhD in Computer Science at the University of Cambridge and is a regular speaker and instructor. Mario Fusco is a senior software engineer at Red Hat working on Drools, the JBoss rule engine. He created the open source library lambdaj, an internal Java DSL for manipulating collections in a functional way. Alan Mycroft is Professor of Computer Science at the University of Cambridge, where he researches programming languages, their semantics, optimization and implementation. He is a co-founder and Trustee of the Raspberry Pi Foundation.\nYou can follow Raoul and Mario on Twitter at @raoulUK and @mariofusco.","summary":"While the term \"lambda expression\" may sound abstract and academic, Java 8 Lambdas can have a big impact on how you program every day. In simplest terms, a lambda expression is a function—a bit of code—that you can pass to another method as an argument. Thus, you can cope with changing requirements by using a behavior, represented by a lambda, as a parameter. Java 8's functional programming features, like lambdas and the new Stream API that enables a cleaner way to iterate through collections, can help you write concise, maintainable code that scales easily and performs well on multicore architectures.\nJava 8 in Action is a clearly-written guide to Java 8 lambdas and functional programming in Java. It begins with a practical introduction to the structure and benefits of lambda expressions in real-world Java code. The book then introduces the Stream API and shows how it can make collections-related code radically easier to understand and maintain. Along the way, you'll discover new FP-oriented design patterns with Java 8 for code reuse, code readability, exception handling, data manipulation, and concurrency. For developers also exploring other functional languages on the JVM, the book concludes with a quick survey of useful functional features in Scala.","price":"USD 49.99"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":[],"pubdate":"","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","large":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","medium":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif"},"alt":"https:\/\/book.douban.com\/subject\/30500308\/","id":"30500308","publisher":"","isbn10":"7302505748","isbn13":"9787302505747","title":"Java8程序设计及实验\/高等学校计算机类国家级特色专业系列规划教材","url":"https:\/\/api.douban.com\/v2\/book\/30500308","alt_title":"","author_intro":"","summary":"","price":"68.80"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":[],"pubdate":"","tags":[],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s31474066.jpg","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s31474066.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s31474066.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s31474066.jpg"},"alt":"https:\/\/book.douban.com\/subject\/32583569\/","id":"32583569","publisher":"","isbn10":"4877833765","isbn13":"9784877833763","title":"JavaFX&Java8プログラミング","url":"https:\/\/api.douban.com\/v2\/book\/32583569","alt_title":"","author_intro":"","summary":"单行本-精装, カットシステム,カツトシステム カツトシステム 1201","price":""},{"rating":{"max":10,"numRaters":14,"average":"9.0","min":0},"subtitle":"第6版","author":["Herbert Schildt"],"pubdate":"2015-1","tags":[{"count":30,"name":"Java","title":"Java"},{"count":15,"name":"JDK8","title":"JDK8"},{"count":11,"name":"编程","title":"编程"},{"count":7,"name":"java入门","title":"java入门"},{"count":2,"name":"软件工程","title":"软件工程"},{"count":2,"name":"计算机","title":"计算机"},{"count":2,"name":"编程语言","title":"编程语言"},{"count":2,"name":"技术","title":"技术"}],"origin_title":"Java: A Beginner's Guide, 6th Ed.","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s28002830.jpg","binding":"","translator":["王楚燕","鱼静"],"catalog":"目录\n第1章 Java基础 1\n1.1 Java的起源 2\n1.1.1 Java与C和C++的关系 3\n1.1.2 Java与C#的关系 3\n1.2 Java对Internet的贡献 4\n1.2.1 Java applet 4\n1.2.2 安全性 4\n1.2.3 可移植性 5\n1.3 Java的魔法：字节码 5\n1.4 Java的主要术语 6\n1.5 面向对象程序设计 7\n1.5.1 封装 8\n1.5.2 多态性 8\n1.5.3 继承 9\n1.6 获得Java开发工具包 9\n1.7 第一个简单的程序 10\n1.7.1 输入程序 10\n1.7.2 编译程序 11\n1.7.3 逐行分析第一个程序 11\n1.8 处理语法错误 13\n1.9 第二个简单程序 14\n1.10 另一种数据类型 16\n1.11 两条控制语句 18\n1.11.1 if语句 18\n1.11.2 for循环语句 20\n1.12 创建代码块 21\n1.13 分号和定位 22\n1.14 缩进原则 23\n1.15 Java关键字 25\n1.16 Java标识符 25\n1.17 Java类库 26\n第2章 数据类型与运算符 29\n2.1 数据类型为什么重要 30\n2.2 Java的基本类型 30\n2.2.1 整数类型 31\n2.2.2 浮点型 32\n2.2.3 字符型 33\n2.2.4 布尔类型 34\n2.3 字面值 36\n2.3.1 十六进制、八进制和二进制字面值 36\n2.3.2 字符转义序列 37\n2.3.3 字符串字面值 37\n2.4 变量详解 38\n2.4.1 初始化变量 39\n2.4.2 动态初始化 39\n2.5 变量的作用域和生命期 39\n2.6 运算符 42\n2.7 算术运算符 42\n2.8 关系运算符和逻辑运算符 44\n2.9 短路逻辑运算符 46\n2.10 赋值运算符 47\n2.11 速记赋值 47\n2.12 赋值中的类型转换 48\n2.13 不兼容类型的强制转换 50\n2.14 运算符优先级 51\n2.15 表达式 53\n2.15.1 表达式中的类型转换 53\n2.15.2 间距和圆括号 55\n第3章 程序控制语句 57\n3.1 从键盘输入字符 58\n3.2 if语句 59\n3.2.1 嵌套if语句 60\n3.2.2 if-else-if阶梯状结构 61\n3.3 switch语句 62\n3.4 for循环 68\n3.4.1 for循环的一些变体 69\n3.4.2 缺失部分要素的for循环 70\n3.4.3 无限循环 71\n3.4.4 没有循环体的循环 72\n3.4.5 在for循环内部声明循环控制变量 72\n3.4.6 增强型for循环 73\n3.5 while循环 73\n3.6 do-while循环 75\n3.7 使用break语句退出循环 79\n3.8 将break语句作为一种goto语句使用 81\n3.9 使用continue语句 85\n3.10 嵌套循环 89\n第4章 类、对象和方法 93\n4.1 类的基础知识 94\n4.1.1 类的基本形式 94\n4.1.2 定义类 95\n4.2 如何创建对象 98\n4.3 引用变量和赋值 98\n4.4 方法 99\n4.5 从方法返回值 101\n4.6 返回值 102\n4.7 使用形参 104\n4.8 构造函数 112\n4.9 带形参的构造函数 113\n4.10 深入介绍new运算符 115\n4.11 垃圾回收 115\n4.12 this关键字 119\n第5章 其他数据类型与运算符 123\n5.1 数组 124\n5.2 多维数组 129\n5.3 不规则数组 130\n5.3.1 三维或更多维的数组 131\n5.3.2 初始化多维数组 131\n5.4 另一种声明数组的语法 132\n5.5 数组引用赋值 133\n5.6 使用length成员 134\n5.7 for-each形式的循环 139\n5.7.1 迭代多维数组 142\n5.7.2 应用增强型for循环 143\n5.8 字符串 144\n5.8.1 构造字符串 144\n5.8.2 操作字符串 145\n5.8.3 字符串数组 147\n5.8.4 字符串是不可变的 148\n5.8.5 使用String控制switch语句 149\n5.9 使用命令行实参 150\n5.10 位运算符 151\n5.10.1 位运算符的与、或、异\n或和非 151\n5.10.2 移位运算符 155\n5.10.3 位运算符的赋值速记符 157\n5.11 ?运算符 160\n第6章 方法和类详解 163\n6.1 控制对类成员的访问 164\n6.2 向方法传递对象 169\n6.3 返回对象 173\n6.4 方法重载 174\n6.5 重载构造函数 179\n6.6 递归 184\n6.7 理解static关键字 186\n6.8 嵌套类和内部类 192\n6.9 varargs(可变长度实参) 195\n6.9.1 varargs基础 195\n6.9.2 重载varargs方法 198\n6.9.3 varargs和歧义 199\n第7章 继承 203\n7.1 继承的基础知识 204\n7.2 成员访问与继承 207\n7.3 构造函数和继承 209\n7.4 使用super调用超类构造函数 211\n7.5 使用super访问超类成员 215\n7.6 创建多级层次结构 218\n7.7 何时调用构造函数 221\n7.8 超类引用和子类对象 222\n7.9 方法重写 227\n7.10 重写的方法支持多态性 229\n7.11 为何使用重写方法 231\n7.12 使用抽象类 235\n7.13 使用final 239\n7.13.1 使用final防止重写 239\n7.13.2 使用final防止继承 239\n7.13.3 对数据成员使用final 240\n7.14 Object类 241\n第8章 包和接口 243\n8.1 包 244\n8.1.1 定义包 244\n8.1.2 寻找包和CLASSPATH 245\n8.1.3 一个简短的包示例 245\n8.2 包和成员访问 247\n8.3 理解被保护的成员 249\n8.4 导入包 251\n8.5 Java的类库位于包中 252\n8.6 接口 253\n8.7 实现接口 254\n8.8 使用接口引用 257\n8.9 接口中的变量 264\n8.10 接口能够被扩展 265\n8.11 默认接口方法 266\n8.11.1 默认方法的基础知识 266\n8.11.2 默认方法的实际应用 268\n8.11.3 多继承问题 269\n8.12 在接口中使用静态方法 270\n8.13 有关包和接口的最后思考 271\n第9章 异常处理 273\n9.1 异常的层次结构 274\n9.2 异常处理基础 274\n9.2.1 使用关键字try和catch 275\n9.2.2 一个简单的异常示例 276\n9.3 未捕获异常的结果 277\n9.4 使用多个catch语句 280\n9.5 捕获子类异常 281\n9.6 try代码块可以嵌套 282\n9.7 抛出异常 283\n9.8 Throwable详解 285\n9.9 使用finally 286\n9.10 使用throws语句 288\n9.11 新增的3种异常功能 289\n9.12 Java的内置异常 291\n9.13 创建异常子类 293\n第10章 使用I\/O 299\n10.1 Java的I\/O基于流 300\n10.2 字节流和字符流 300\n10.3 字节流类 301\n10.4 字符流类 301\n10.5 预定义流 302\n10.6 使用字节流 302\n10.6.1 读取控制台输入 303\n10.6.2 写入控制台输出 304\n10.7 使用字节流读写文件 305\n10.7.1 从文件输入 305\n10.7.2 写入文件 309\n10.8 自动关闭文件 311\n10.9 读写二进制数据 313\n10.10 随机访问文件 317\n10.11 使用Java字符流 319\n10.11.1 使用字符流的控制台输入 320\n10.11.2 使用字符流的控制台输出 323\n10.12 使用字符流的文件I\/O 324\n10.12.1 使用FileWriter 324\n10.12.2 使用FileReader 325\n10.13 使用Java的类型封装器转换数值字符串 326\n第11章 多线程程序设计 337\n11.1 多线程的基础知识 338\n11.2 Thread类和Runnable接口 339\n11.3 创建一个线程 339\n11.4 创建多个线程 346\n11.5 确定线程何时结束 348\n11.6 线程的优先级 351\n11.7 同步 354\n11.8 使用同步方法 354\n11.9 同步语句 357\n11.10 使用notify( )、wait( )和notifyAll( )的线程通信 360\n11.11 线程的挂起、继续执行和停止 365\n第12章 枚举、自动装箱、静态导入和注释 371\n12.1 枚举 372\n12.2 Java语言中的枚举是类类型 374\n12.3 values( )和valueOf( )方法 374\n12.4 构造函数、方法、实例变量和枚举 376\n12.5 枚举继承enum 378\n12.6 自动装箱 384\n12.7 类型封装器 385\n12.8 自动装箱的基础知识 386\n12.9 自动装箱和方法 387\n12.10 发生在表达式中的自动装箱\/自动拆箱 388\n12.11 静态导入 390\n12.12 注解(元数据) 393\n第13章 泛型 397\n13.1 泛型的基础知识 398\n13.2 一个简单的泛型示例 399\n13.2.1 泛型只能用于引用类型 402\n13.2.2 泛型类型是否相同基于其类型实参 402\n13.2.3 带有两个类型形参的泛型类 402\n13.2.4 泛型类的一般形式 404\n13.3 约束类型 404\n13.4 使用通配符实参 407\n13.5 约束通配符 410\n13.6 泛型方法 413\n13.7 泛型构造函数 415\n13.8 泛型接口 416\n13.9 原类型和遗留代码 422\n13.10 使用菱形运算符进行类型推断 425\n13.11 擦除特性 426\n13.12 歧义错误 426\n13.13 一些泛型限制 427\n13.13.1 类型形参不能实例化 427\n13.13.2 对静态成员的限制 428\n13.13.3 泛型数组限制 428\n13.13.4 泛型异常限制 429\n13.14 继续学习泛型 429\n第14章 lambda表达式和方法引用 431\n14.1 lambda表达式简介 432\n14.1.1 lambda表达式的基础知识 432\n14.1.2 函数式接口 433\n14.1.3 几个lambda表达式示例 435\n14.2 块lambda表达式 440\n14.3 泛型函数式接口 441\n14.4 lambda表达式和变量捕获 447\n14.5 从 lambda表达式中抛出异常 448\n14.6 方法引用 449\n14.6.1 静态方法的方法引用 449\n14.6.2 实例方法的方法引用 451\n14.7 构造函数引用 455\n14.8 预定义的函数式接口 457\n第15章 applet、事件和其他主题 461\n15.1 applet的基础知识 462\n15.2 applet的组织和基本构件 465\n15.3 applet架构 465\n15.4 完整的applet框架 465\n15.5 applet的初始化与终止 467\n15.6 请求重绘 467\n15.7 使用状态窗口 472\n15.8 向applet传递形参 473\n15.9 Applet类 474\n15.10 事件处理 476\n15.11 委派事件模型 476\n15.12 事件 476\n15.12.1 事件源 476\n15.12.2 事件侦听器 477\n15.12.3 事件类 477\n15.12.4 事件侦听器接口 478\n15.13 使用委派事件模型 479\n15.13.1 处理鼠标事件和鼠标移动事件 479\n15.13.2 一个简单的鼠标事件applet 480\n15.14 其他Java关键字 482\n15.14.1 transient和volatile修饰符 483\n15.14.2 instanceof 483\n15.14.3 strictfp 483\n15.14.4 assert 483\n15.14.5 native方法 484\n第16章 Swing介绍 487\n16.1 Swing的起源和设计原则 488\n16.2 组件和容器 490\n16.2.1 组件 490\n16.2.2 容器 491\n16.2.3 顶级容器窗格 491\n16.3 布局管理器 491\n16.4 第一个简单的Swing程序 492\n16.5 使用JButton 497\n16.6 使用JTextField 500\n16.7 使用JCheckBox 504\n16.8 使用JList 507\n15.9 使用匿名内部类或lambda表达式来处理事件 515\n16.10 创建Swing applet 517\n第17章 JavaFX简介 521\n17.1 JavaFX的基本概念 522\n17.1.1 JavaFX包 522\n17.1.2 Stage和Scene类 523\n17.1.3 节点和场景图 523\n17.1.4 布局 523\n17.1.5 Application类和生命周期方法 523\n17.1.6 启动JavaFX应用程序 524\n17.2 JavaFX应用程序的骨架 524\n17.3 编译和运行JavaFX程序 527\n17.4 应用程序线程 527\n17.5 使用简单的JavaFX控件Label 528\n17.6 使用按钮和事件 530\n17.6.1 事件基础 530\n17.6.2 按钮控件简介 531\n17.6.3 演示事件处理和按钮 531\n17.7 其他3个JavaFX控件 534\n17.7.1 CheckBox 534\n17.7.2 ListView 538\n17.7.3 TextField 543\n17.8 效果和变换简介 546\n17.8.1 效果 546\n17.8.2 变换 548\n17.8.3 演示效果和变换 549\n17.9 进一步学习 552\n附录A 自测题答案 555\n附录B 使用Java的文档注释 599","pages":"624","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s28002830.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s28002830.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s28002830.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26320992\/","id":"26320992","publisher":"清华大学出版社","isbn10":"7302387389","isbn13":"9787302387381","title":"Java 8编程入门官方教程","url":"https:\/\/api.douban.com\/v2\/book\/26320992","alt_title":"Java: A Beginner's Guide, 6th Ed.","author_intro":"Herbert Schildt是Java语言的权威，他撰写的程序设计图书大约有30多本，在全世界销售了数百万册，并被翻译成了多种语言。虽然他对计算机的方方面面都很感兴趣，但是主要关注点是计算机语言，包括编译器、解释器和机器人控制语言。他的畅销书有Java: The Complete Reference、Herb Schildt’s Java Programming Cookbook和Swing: A Beginner’s Guide 。","summary":"","price":"69.00"},{"rating":{"max":10,"numRaters":27,"average":"9.3","min":0},"subtitle":"","author":["施密特 (Herbert Schildt)"],"pubdate":"2015-1-1","tags":[{"count":35,"name":"Java","title":"Java"},{"count":8,"name":"计算机","title":"计算机"},{"count":2,"name":"图书馆","title":"图书馆"},{"count":2,"name":"java","title":"java"},{"count":1,"name":"编程","title":"编程"},{"count":1,"name":"技术","title":"技术"},{"count":1,"name":"8","title":"8"}],"origin_title":"Java: The Complete Reference, 9th Edition","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s28240334.jpg","binding":"平装","translator":["战晓苏","江凌"],"catalog":"第Ⅰ部分 Java 语言\n第1章 Java的历史和演变\n1.1 Java的家世\n1.1.1 现代编程语言的诞生：C语言\n1.1.2 C++：下一个阶段\n1.1.3 Java出现的时机已经成熟\n1.2 Java的诞生\n1.3 Java改变Internet的方式\n1.3.1 Java\n1.3.2 安全性\n1.3.3 可移植性\n1.4 Java的魔力：字节码\n1.5 servlet：服务器端的\n1.6 Java的关键特性\n1.6.1 简单性\n1.6.2 面向对象\n1.6.3 健壮性\n1.6.4 多线程\n1.6.5 体系结构中立\n1.6.6 解释执行和高性能\n1.6.7 分布式\n1.6.8 动态性\n1.7 Java的演变历程\n1.8 Java\n1.9 文化革新\n第2章 Java综述\n2.1 面向对象编程\n2.1.1 两种范式\n2.1.2 抽象\n2.1.3 OOP三原则\n2.2第一个简单程序\n2.2.1 输入程序\n2.2.2 编译程序\n2.2.3 深入分析第一个示例程序\n2.3第二个简短程序\n2.4 两种控制语句\n2.4.1 if语句\n2.4.2 for循环\n2.5 使用代码块\n2.6 词汇问题\n2.6.1 空白符\n2.6.2 标识符\n2.6.3 字面值\n2.6.4 注释\n2.6.5 分隔符\n2.6.6 Java关键字\n2.7 Java类库\n第3章 数据类型、变量和数组\n3.1 Java是强类型化的语言\n3.2 基本类型\n3.3 整型\n3.3.1\n3.3.2\n3.3.\n3.3.4\n3.4 浮点型\n3.4.1\n3.4.2\n3.5 字符型\n3.6 布尔型\n3.7 深入分析字面值\n3.7.1 整型字面值\n3.7.2 浮点型字面值\n3.7.3 布尔型字面值\n3.7.4 字符型字面值\n3.7.5 字符串字面值\n3.8 变量\n3.8.1 变量的声明\n3.8.2 动态初始化\n3.8.3 变量的作用域和生存期\n3.9 类型转换和强制类型转换\n3.9.1 Java的自动类型转换\n3.9.2 强制转换不兼容的类型\n3.10 表达式中的自动类型提升\n3.11 数组\n3.11.1 一维数组\n3.11.2 多维数组\n3.11.3 另一种数组声明语法\n3.12 关于字符串的一些说明\n3.13 向C\/C++程序员提供指针方面的说明\n第4章 运算符\n4.1 算术运算符\n4.1.1 基本算术运算符\n4.1.2 求模运算符\n4.1.3 算术与赋值复合运算符\n4.1.4 自增与自减运算符\n4.2 位运算符\n4.2.1 位逻辑运算符\n4.2.2 左移\n4.2.3 右移\n4.2.4 无符号右移\n4.2.5 位运算符与赋值的组合\n4.3 关系运算符\n4.4 布尔逻辑运算符\n4.5 赋值运算符\n4.6 “？”运算符\n4.7 运算符的优先级\n4.8 使用圆括号\n第5章 控制语句\n5.1 Java的选择语句\n19.18.2 java.util.fun\n19.18.3 java.uti\n19.18.4 java.util.lo\n19.18.5 java.util.\n19.18.6 java.util.\n19.18.7 java.uti\n19.18.8 java.util.s\n19.18.9 java.uti\n第20章 输入\/输出：探究ja\n20.1 I\/O类和接口\n20.2 File类\n20.2.1 目录\n20.2.2 使用FilenameFilter接口\n20.2.3 listFiles（）方法\n20.2.4 创建目录\n20.3 AutoCloseable、Closeable和Flushable接口\n20.4 I\/O异常\n20.5 关闭流的两种方式\n20.6 流类\n20.7 字节流\n20.7.1 InputStream类\n20.7.2 OutputStream类\n20.7.3 FileInputStream类\n20.7.4 FileOutputStream类\n20.7.5 ByteArrayInputStream类\n20.7.6 ByteArrayOutputStream类\n20.7.7 过滤的字节流\n20.7.8 缓冲的字节流\n20.7.9 SequenceInputStream类\n20.7.10 PrintStream类\n20.7.11 DataOutputStream和DataInputStream类\n20.7.12 RandomAccessFile类\n20.8 字符流\n20.8.1 Reader类\n20.8.2 Writer类\n20.8.3 FileReader类\n20.8.4 FileWriter类\n20.8.5 CharArrayReader类\n20.8.6 CharArrayWriter类\n20.8.7 BufferedReader类\n20.8.8 BufferedWriter类\n20.8.9 PushbackReader类\n20.8.10 PrintWriter类\n20.9 Console类\n20.10 串行化\n20.10.1 Serializable接口\n20.10.2 Externalizable接口\n20.10.3 ObjectOutput接口\n20.10.4 ObjectOutputStream类\n20.10.5 ObjectInput接口\n20.10.6 ObjectInputStream类\n20.10.7 串行化示例\n20.11 流的优点\n第21章 探究\n21.1 NIO类\n21.2 NIO的基础知识\n21.2.1 缓冲区\n21.2.2 通道\n21.2.3 字符集和选择器\n21.3 JDK 7对NIO的增强\n21.3.1 Path接口\n21.3.2 Files类\n21.3.3 Path接口\n21.3.4 文件属性接口\n21.3.5 FileSystem、FileSystems和FileStore类\n21.4 使用NIO系统\n21.4.1 为基于通道的I\/O使用\n21.4.2 为基于流的I\/O使用\n21.4.3 为路径和文件系统操作使用\n21.5 JDK 7之前基于通道的例子\n21.5.1 读文件（JDK 7之前\n21.5.2 写文件（JDK 7之前\n第22章 联网\n22.1 联网的基础知识\n22.2 联网类和接口\n22.3 InetAddress类\n22.3.1 工厂方法\n22.3.2 实例方法\n22.4 Inet4Address类和Inet6Address类\n22.5 TCP\/IP客户端套接字\n22.6 URL类\n22.7 URLConnection类\n22.8 HttpURLConnection类\n22.9 URI类\n22.10 c\n22.11 TCP\/IP服务器套接字\n22.12 数据报\n22.12.1 DatagramSocket类\n22.12.2 DatagramPacket类\n22.12.3 数据报示例\n第23章 Applet类\n23.1 applet的两种类型\n23.2 applet的基础知识\n23.3 applet的架构\n23.4 applet的骨架\n23.4.1 applet的初始化和终止\n23.4.2 重写update（）方法\n23.5 简单的applet显示方法\n23.6 请求重画\n23.7 使用状态栏窗口\n23.8 HTML APPLET标记\n23.9 向applet传递参数\n23.10 getDocumentBase（）和getCodeB\n23.11 AppletContext接口和showDocument（）方法\n23.12 AudioClip接口\n23.13 AppletStub接口\n23.14 向控制台输出\n第24章 事件处理\n24.1 两种事件处理机制\n24.2 委托事件模型\n24.2.1 事件\n24.2.2 事件源\n24.2.3 事件监听器\n24.3 事件类\n24.3.1 ActionEvent类\n24.3.2 AdjustmentEvent类\n24.3.3 ComponentEvent类\n24.3.4 ContainerEvent类\n24.3.5 FocusEvent类\n24.3.6 InputEvent类\n24.3.7 ItemEvent类\n24.3.8 KeyEvent类\n24.3.9 MouseEvent类\n24.3.10 MouseWheelEvent类\n24.3.11 TextEvent类\n24.3.12 WindowEvent类\n24.4 事件源\n24.5 事件监听器接口\n24.5.1 ActionListener接口\n24.5.2 AdjustmentListener接口\n24.5.3 ComponentListener接口\n24.5.4 ContainerListener接口\n24.5.5 FocusListener接口\n24.5.6 ItemListener接口\n24.5.7 KeyListener接口\n24.5.8 MouseListener接口\n24.5.9 MouseMotionListener接口\n24.5.10 MouseWheelListener接口\n24.5.11 TextListener接口\n24.5.12 WindowFocusListener接口\n24.5.13 WindowListener接口\n24.6 使用委托事件模型\n24.6.1 处理鼠标事件\n24.6.2 处理键盘事件\n24.7 适配器类\n24.8 内部类\n第25章 AWT介绍：使用窗口、图形和文本\n25.1 AWT类\n25.2 窗口基本元素\n25.2.1 Component类\n25.2.2 Container类\n25.2.3 Panel类\n25.2.4 Window类\n25.2.5 Frame类\n25.2.6 Canvas类\n25.3 使用框架窗口\n25.3.1 设置窗口的尺寸\n25.3.2 隐藏和显示窗口\n25.3.3 设置窗口的标题\n25.3.4 关闭框架窗口\n25.4 在基于AWT的applet中创建框架窗口\n25.5 创建基于窗口的程序\n25.6 在窗口中显示信息\n25.7 使用图形\n25.7.1 绘制直线\n25.7.2 绘制矩形\n25.7.3 绘制椭圆和圆\n25.7.4 绘制弧形\n25.7.5 绘制多边形\n25.7.6 演示绘制方法\n25.7.7 改变图形的大小\n25.8 使用颜色\n25.8.1 Color类的方法\n25.8.2 设置当前图形的颜色\n25.8.3 一个演示颜色的a\n25.9 设置绘图模式\n25.10 使用字体\n25.10.1 确定可用字体\n25.10.2 创建和选择字体\n25.10.3 获取字体信息\n25.11 使用FontMetrics管理文本输出\n25.11.1 显示多行文本\n25.11.2 居中显示文本\n25.11.3 对齐多行文本\n第26章 使用AWT控件、布局管理器和菜单\n26.1 AWT控件的基础知识\n26.1.1 添加和移除控件\n26.1.2 响应控件\n26.1.3 HeadlessException异常\n26.2 使用标签\n26.3 使用命令按钮\n26.4 使用复选框\n26.5 使用复选框组\n26.6 使用下拉列表\n26.7 使用列表框\n26.8 管理滚动条\n26.9 使用Text\n26.10 使用Tex\n26.11 理解布局管理器\n26.11.1 FlowLayout布局管理器\n26.11.2 BorderLayout布局管理器\n26.11.3 使用I\n26.11.4 GridLayout布局管理器\n26.11.5 CardLayout布局管理器\n26.11.6 GridBagLayout布局管理器\n26.12 菜单栏和菜单\n26.13 对话框\n26.14 FileDialog类\n26.15 关于重写paint（）方法\n第27章 图像\n27.1 文件格式\n27.2 图像基础：创建、加载与显示\n27.2.1 创建Image对象\n27.2.2 加载图像\n27.2.3 显示图像\n27.3 ImageObserver接口\n27.4 双缓冲\n27.5 MediaTracker类\n27.6 ImageProducer接口\n27.7 ImageConsumer接口\n27.8 ImageFilter类\n27.8.1 CropImageFilter类\n27.8.2 RGBImageFilter类\n27.9 其他图像类\n第28章 并发实用工具\n28.1 并发API包\n28.1.1 java.util.concurrent包\n28.1.2 java.util.concurrent.atomic包\n28.1.3 java.util.concurrent.locks包\n28.2 使用同步对象\n28.2.1 Semaphore类\n28.2.2 CountDownLatch类\n28.2.3 CyclicBarrier类\n28.2.4 Exchanger类\n28.2.5 Phaser类\n28.3 使用执行器\n28.3.1 一个简单的执行器示例\n28.3.2 使用Callable和Future接口\n28.4 TimeUnit枚举\n28.5 并发集合\n28.6 锁\n28.7 原子操作\n28.8 通过Fork\/Join框架进行并行编程\n28.8.1 主要的Fork\/Join类\n28.8.2 分而治之的策略\n28.8.3 一个简单的Fork\/Join示例\n28.8.4 理解并行级别带来的影响\n28.8.5 一个使用RecursiveTask[V]的例子\n28.8.6 异步执行任务\n28.8.7 取消任务\n28.8.8 确定任务的完成状态\n28.8.9 重新启动任务\n28.8.10 深入研究\n28.8.11 关于Fork\/Join框架的一些提示\n28.9 并发实用工具与Java传统方式的比较\n第29章 流\n29.1 流的基础知识\n29.1.1 流接口\n29.1.2 如何获得流\n29.1.3 一个简单的流示例\n29.2 缩减操作\n29.3 使用并行流\n29.4 映射\n29.5 收集\n29.6 迭代器和流\n29.6.1 对流使用迭代器\n29.6.2 使用Splite\n29.7 流API中更多值得探究的地方\n第30章 正则表达式和其他包\n30.1 核心Java API包\n30.2 正则表达式处理\n30.2.1 Pattern类\n30.2.2 Matcher类\n30.2.3 正则表达式的语法\n30.2.4 演示模式匹配\n30.2.5 模式匹配的两个选项\n30.2.6 探究正则表达式\n30.3 反射\n30.4 远程方法调用\n30.5 使用java.text格式化日期和时间\n30.5.1 DateFormat类\n30.5.2 SimpleDateFormat类\n30.6 JDK 8新增的时间和日？\n30.6.1 时间和日期的基础知识\n30.6.2 格式化日期和时间\n30.6.3 解析日期和时间字符串\n30.7 探究java.time包的其他方面\n第Ⅲ部分 使用Swing进行 GUI编程\n第31章 Swing简介\n31.1 Swing的起源\n31.2 Swing以AWT为基础\n31.3 两个关键的Swing特性\n31.3.1 Swing组件是轻量级的\n31.3.2 Swing支持可插入外观\n31.4 MVC连接\n31.5 组件与容器\n31.5.1 组件\n31.5.2 容器\n31.5.3 顶级容器窗格\n31.6 Swing包\n31.7 一个简单的Swing应用程序\n31.8 事件处理\n31.9 创建Swing ap\n31.10 在Swing中绘图\n31.10.1 绘图的基础知识\n31.10.2 计算可绘制区域\n31.10.3 一个绘图示例\n第32章 探究S\n32.1 JLabel与Image\n32.2 JTextF\n32.3 Swing按钮\n32.3.1 JBu\n32.3.2 JToggleBu\n32.3.3 复选框\n32.3.4 单选按钮\n32.4 JTabbed\n32.5 JScroll\n32.6 J\n32.7 JComb\n32.8 树\n32.9 JT\n第33章 Swing菜单简介\n33.1 菜单的基础知识\n33.2 JMenuBar、JMenu和JMenuItem概述\n33.2.1 JMen\n33.2.2 J\n33.2.3 JMenu\n33.3 创建主菜单\n33.4 向菜单项添加助记符和加速键\n33.5 向菜单项添加图片和工具提示\n33.6 使用JRadioButtonMenuItem和JCheckBoxMenu\n33.7 创建弹出菜单\n33.8 创建工具栏\n33.9 使用动作\n33.10 完整演示MenuDemo程序\n33.11 继续探究S\n第Ⅳ部分 使用JavaFX进行GUI编程\n第34章 JavaFX GUI编程简介\n34.1 JavaFX的基础概念\n34.1.1 JavaFX包\n34.1.2 Stage和Scene类\n34.1.3 节点和场景图\n34.1.4 布局\n34.1.5 Application类和生命周期方法\n34.1.6 启动JavaFX应用程序\n34.2 JavaFX应用程序的骨架\n34.3 编译和运行JavaFX程序\n34.4 应用程序线程\n34.5 一个简单的JavaFX控件：L\n34.6 使用按钮和事件\n34.6.1 事件的基础知识\n34.6.2 按钮控件简介\n34.6.3 演示事件处理和按钮\n34.7 直接在画布上绘制\n第35章 探究JavaFX控件\n35.1 使用Image和Image\n35.1.1 向标签添加图片\n35.1.2 在按钮中使用图片\n35.2 ToggleBu\n35.3 RadioBu\n35.3.1 处理开关组中的变化事件\n35.3.2 处理单选按钮的另一种方式\n35.4 Chec\n35.5 List\n35.5.1 ListView的滚动条\n35.5.2 启用多项选择\n35.6 Comb\n35.7 TextF\n35.8 Scroll\n35.9 Tree\n35.10 效果和变换简介\n35.10.1 效果\n35.10.2 变换\n35.10.3 演示效果和变换\n35.11 添加工具提示\n35.12 禁用控件\n第36章 JavaFX菜单简介\n36.1 菜单的基础知识\n36.2 MenuBar、Menu和MenuItem概述\n36.2.1 Men\n36.2.2\n36.2.3 Menu\n36.3 创建主菜单\n36.4 向菜单项添加助记符和加速键\n36.5 向菜单项添加图片\n36.6 使用RadioMenuItem和CheckMenu\n36.7 创建上下文菜单\n36.8 创建工具栏\n36.9 完整的MenuDemo程序\n36.10 继续探究Ja\n第Ⅴ部分 应用\n第37章 Java\n37.1 Java Bean是什么\n37.2 Java Bean的优势\n37.3 内省\n37.3.1 属性的设计模式\n37.3.2 事件的设计模式\n37.3.3 方法与设计模式\n37.3.4 使用BeanInfo接口\n37.4 绑定属性与约束属性\n37.5 持久性\n37.6 定制器\n37.7 Java Bean\n37.7.1 Introspector类\n37.7.2 PropertyDescriptor类\n37.7.3 EventSetDescriptor类\n37.7.4 MethodDescriptor类\n37.8 一个Bean示例\n第38章 ser\n38.1 背景\n38.2 servelet的生命周期\n38.3 servlet开发选项\n38.4 使用To\n38.5 一个简单的ser\n38.5.1 创建和编译servlet源代码\n38.5.2 启动To\n38.5.3 启动Web浏览器并请求ser\n38.6 Servlet\n38.7 javax.servlet包\n38.7.1 Servlet接口\n38.7.2 ServletConfig接口\n38.7.3 ServletContext接口\n38.7.4 ServletRequest接口\n38.7.5 ServletResponse接口\n38.7.6 GenericServlet类\n38.7.7 ServletInputStream类\n38.7.8 ServletOutputStream类\n38.7.9 servlet异常类\n38.8 读取servlet参数\n38.9 javax.servlet.http包\n38.9.1 HttpServletRequest接口\n38.9.2 HttpServletResponse接口\n38.9.3 HttpSession接口\n38.9.4 Cookie类\n38.9.5 HttpServlet类\n38.10 处理HTTP请求和响应\n38.10.1 处理HTTP GET请求\n38.10.2 处理HTTP POST请求\n38.11 使用co\n38.12 会话跟踪\n附录 使用Java的文档注释\n5.1.1 if语句\n5.1.2 switch语句\n5.2 迭代语句\n5.2.1 while语句\n5.2.2 do-while语句\n5.2.3 for语句\n5.2.4 for循环的for-each版本\n5.2.5 嵌套的循环\n5.3 跳转语句\n5.3.1 使用break语句\n5.3.2 使用continue语句\n5.3.3 return语句\n第6章 类\n6.1 类的基础知识\n6.1.1 类的一般形式\n6.1.2 一个简单的类\n6.2 声明对象\n6.3 为对象引用变量赋值\n6.4 方法\n6.4.1 为Box类添加方法\n6.4.2 返回值\n6.4.3 添加带参数的方法\n6.5 构造函数\n6.6 this关键字\n6.7 垃圾回收\n6.8 finalize（）方法\n6.9 堆栈类\n第7章 方法和类的深入分析\n7.1 重载方法\n7.2 将对象用作参数\n7.3 参数传递的深入分析\n7.4 返回对象\n7.5 递归\n7.6 访问控制\n7.7 理解st\n7.8 final介绍\n7.9 重新审视数组\n7.10 嵌套类和内部类\n7.11 String类介绍\n7.12 使用命令行参数\n7.13 varargs：可变长度参数\n7.13.1 重载varargs方法\n7.13.2 varargs方法与模糊性\n第8章 继承\n8.1 继承的基础知识\n8.1.1 成员访问与继承\n8.1.2 一个更实际的例子\n8.1.3 超类变量可以引用子类对象\n8.2 使用super关键字\n8.2.1 使用super调用超类的构造函数\n8.2.2 super的另一种用法\n8.3 创建多级继承层次\n8.4 构造函数的调用时机\n8.5 方法重写\n8.6 动态方法调度\n8.6.1 重写方法的目的\n8.6.2 应用方法重写\n8.7 使用抽象类\n8.8 在继承中使用final关键字\n8.8.1 使用final关键字阻止重写\n8.8.2 使用final关键字阻止继承\n8.9 Object类\n第9章 包和接口\n9.1 包\n9.1.1 定义包\n9.1.2 包查找与CLAS\n9.1.3 一个简短的包示例\n9.2 访问保护\n9.3 导入包\n9.4 接口\n9.4.1 定义接口\n9.4.2 实现接口\n9.4.3 嵌套接口\n9.4.4 应用接口\n9.4.5 接口中的变量\n9.4.6 接口可以扩展\n9.5 默认接口方法\n9.5.1 默认方法的基础知识\n9.5.2 一个更加实用的例子\n9.5.3 多级继承的问题\n9.6 在接口中使用静态方法\n9.7 关于包和接口的最后说明\n第10章 异常处理\n10.1 异常处理的基础知识\n10.2 异常类型\n10.3 未捕获的异常\n10.4 使用try和\n10.5 多条catch子句\n10.6 嵌套的try语句\n10.7\n10.8 t\n10.9 fi\n10.10 Java的内置异常\n10.11 创建自己的异常子类\n10.12 链式异常\n10.13 3个近期添加的异常特性\n10.14 使用异常\n第11章 多线程编程\n11.1 Java线程模型\n11.1.1 线程优先级\n11.1.2 同步\n11.1.3 消息传递\n11.1.4 Thread类和Runnable接口\n11.2 主线程\n11.3 创建线程\n11.3.1 实现Runnable接口\n11.3.2 扩展Thread类\n11.3.3 选择一种创建方式\n11.4 创建多个线程\n11.5 使用isAlive（）和join（）方法\n11.6 线程优先级\n11.7 同步\n11.7.1 使用同步方法\n11.7.2 synchronized语句\n11.8 线程间通信\n11.9 挂起、恢复与停止线程\n11.10 获取线程的状态\n11.11 使用多线程\n第12章 枚举、自动装箱与注解（元数据\n12.1 枚举\n12.1.1 枚举的基础知识\n12.1.2 values（）和valueOf（）方法\n12.1.3 Java枚举是类类型\n12.1.4 枚举继承自Enum类\n12.1.5 另一个枚举示例\n12.2 类型封装器\n12.2.1 Character封装器\n12.2.2 Boolean封装器\n12.2.3 数值类型封装器\n12.3 自动装箱\n12.3.1 自动装箱与方法\n12.3.2 表达式中发生的自动装箱\/拆箱\n12.3.3 布尔型和字符型数值的自动装箱\/拆箱\n12.3.4 自动装箱\/拆箱有助于防止错误\n12.3.5 一些警告\n12.4 注解（元数据\n12.4.1 注解的基础知识\n12.4.2 指定保留策略\n12.4.3 在运行时使用反射获取注解\n12.4.4 AnnotatedElement接口\n12.4.5 使用默认值\n12.4.6 标记注解\n12.4.7 单成员注解\n12.4.8 内置注解\n12.5 类型注解\n12.6 重复注解\n第13章 I\/O、applet以及其他主题\n13.1 I\/O的基础知识\n13.1.1 流\n13.1.2 字节流和字符流\n13.1.3 预定义流\n13.2 读取控制台输入\n13.2.1 读取字符\n13.2.2 读取字符串\n13.3 向控制台写输出\n13.4 PrintWriter类\n13.5 读\/写文件\n13.6 自动关闭文件\n13.7 applet的基础知识\n13.8 transient和volatile修饰符\n13.9 使用instanceof运算符\n13.10 str\n13.11 本地方法\n13.12 使用a\n13.13 静态导入\n13.14 通过this（）调用重载的构造函数\n13.15 紧凑API配置文件\n第14章 泛型\n14.1 什么是泛型\n14.2 一个简单的泛型示例\n14.2.1 泛型只使用引用类型\n14.2.2 基于不同类型参数的泛型类型是不同的\n14.2.3 泛型提升类型安全性的原理\n14.3 带两个类型参数的泛型类\n14.4 泛型类的一般形式\n14.5 有界类型\n14.6 使用通配符参数\n14.7 创建泛型方法\n14.8 泛型接口\n14.9 原始类型与遗留代码\n14.10 泛型类层次\n14.10.1 使用泛型超类\n14.10.2 泛型子类\n14.10.3 泛型层次中的运行时类型比较\n14.10.4 强制转换\n14.10.5 重写泛型类的方法\n14.11 泛型的类型推断\n14.12 擦除\n14.13 模糊性错误\n14.14 使用泛型的一些限制\n14.14.1 不能实例化类型参数\n14.14.2 对静态成员的一些限制\n14.14.3 对泛型数组的一些限制\n14.14.4 对泛型异常的限制\n第15章 lambda表达式\n15.1 lambda表达式简介\n15.1.1 lambda表达式的基础知识\n15.1.2 函数式接口\n15.1.3 几个lambda表达式示例\n15.2 块lambda表达式\n15.3 泛型函数式接口\n15.4 作为参数传递lambda表达式\n15.5 lambda表达式与异常\n15.6 lambda表达式和变量捕获\n15.7 方法引用\n15.7.1 静态方法的方法引用\n15.7.2 实例方法的方法引用\n15.7.3 泛型中的方法引用\n15.8 构造函数引用\n15.9 预定义的函数式接口\n第Ⅱ部分 Java库\n第16章 字符串处理\n16.1 String类的构造函数\n16.2 字符串的长度\n16.3 特殊的字符串操作\n16.3.1 字符串字面值\n16.3.2 字符串连接\n16.3.3 字符串和其他数据类型的连接\n16.3.4 字符串转换和toString（）方法\n16.4 提取字符\n16.4.1 cha\n16.4.2 getCh\n16.4.3 getBy\n16.4.4 toCharAr\n16.5 比较字符串\n16.5.1 equals（）和equalsIgnoreC\n16.5.2 regionMatc\n16.5.3 startsWith（）和endsW\n16.5.4 equals（）与\n16.5.5 compar\n16.6 查找字符串\n16.7 修改字符串\n16.7.1 substr\n16.7.2 con\n16.7.3 repl\n16.7.4 t\n16.8 使用valueOf（）转换数据\n16.9 改变字符串中字符的大小写\n16.10 连接字符串\n16.11 其他String方法\n16.12 StringBuffer类\n16.12.1 StringBuffer类的构造函数\n16.12.2 length（）与capac\n16.12.3 ensureCapac\n16.12.4 setLen\n16.12.5 charAt（）与setCha\n16.12.6 getCh\n16.12.7 app\n16.12.8 ins\n16.12.9 reve\n16.12.10 delete（）与deleteCha\n16.12.11 repl\n16.12.12 substr\n16.12.13 其他StringBuffer方法\n16.13 StringBuilder类\n第17章 探究java\n17.1 基本类型封装器\n17.1.1 N\n17.1.2 Double与\n17.1.3 理解isInfinite（）与is\n17.1.4 Byte、Short、Integer？\n17.1.5 Char\n17.1.6 对Unicode代码点的附加支持\n17.1.7 Bo\n17.2 Void类\n17.3 Process类\n17.4 Runtime类\n17.4.1 内存管理\n17.4.2 执行其他程序\n17.5 ProcessBuilder类\n17.6 System类\n17.6.1 使用currentTimeMillis（）计时程序的执行\n17.6.2 使用arrayc\n17.6.3 环境属性\n17.7 Object类\n17.8 使用clone（）方法和Cloneable接口\n17.9 Class类\n17.10 ClassLoader类\n17.11 Math类\n17.11.1 三角函数\n17.11.2 指数函数\n17.11.3 舍入函数\n17.11.4 其他数学方法\n17.12 StrictMath类\n17.13 Compiler类\n17.14 Thread类、ThreadGroup类和Runnable接口\n17.14.1 Runnable接口\n17.14.2 Thread类\n17.14.3 ThreadGroup类\n17.15 ThreadLocal和\nInheritableThreadLocal类\n17.16 Package类\n17.17 RuntimePermission类\n17.18 Throwable类\n17.19 SecurityManager类\n17.20 StackTraceElement类\n17.21 Enum类\n17.22 ClassValue类\n17.23 CharSequence接口\n17.24 Comparable接口\n17.25 Appendable接口\n17.26 Iterable接口\n17.27 Readable接口\n17.28 AutoCloseable接口\n17.29 Thread.UncaughtExceptionHandler接口\n17.30 java.lang子包\n17.30.1 java.lang.annot\n17.30.2 java.lang.instr\n17.30.3 java.lang.i\n17.30.4 java.lang.manag\n17.30.5 java.lan\n17.30.6 java.lang.re\n第18章 java.util第1部分：集合框架\n18.1 集合概述\n18.2 JDK 5对集合框架的修改\n18.2.1 泛型从根本上改变了集合框架\n18.2.2 自动装箱使得使用基本类型更加容易\n18.2.3 for-each风格的for循环\n18.3 集合接口\n18.3.1 Collection接口\n18.3.2 List接口\n18.3.3 Set接口\n18.3.4 SortedSet接口\n18.3.5 NavigableSet接口\n18.3.6 Queue接口\n18.3.7 Deque接口\n18.4 集合类\n18.4.1 ArrayList类\n18.4.2 LinkedList类\n18.4.3 HashSet类\n18.4.4 LinkedHashSet类\n18.4.5 TreeSet类\n18.4.6 PriorityQueue类\n18.4.7 ArrayDeque类\n18.4.8 EnumSet类\n18.5 通过迭代器访问集合\n18.5.1 使用迭代器\n18.5.2 使用for-each循环替代迭代器\n18.6 Splite\n18.7 在集合中存储用户定义的类\n18.8 RandomAccess接口\n18.9 使用映射\n18.9.1 映射接口\n18.9.2 映射类\n18.10 比较器\n18.11 集合算法\n18.12 Arrays类\n18.13 遗留的类和接口\n18.13.1 Enumeration接口\n18.13.2 Vector类\n18.13.3 Stack类\n18.13.4 Dictionary类\n18.13.5 Hashtable类\n18.13.6 Properties类\n18.13.7 使用store（）和l\n18.14 集合小结\n第19章 java.util第2部分：更多实用工具类\n19.1 StringTokenizer类\n19.2 BitSet类\n19.3 Optional、OptionalDouble、OptionalInt和Optiona\n19.4 Date类\n19.5 Calendar类\n19.6 GregorianCalendar类\n19.7 TimeZone类\n19.8 SimpleTimeZone类\n19.9 Locale类\n19.10 Random类\n19.11 Observable类\n19.11.1 Observer接口\n19.11.2 Observer示例\n19.12 Timer和TimerTask类\n19.13 Currency类\n19.14 Formatter类\n19.14.1 Formatter类的构造函数\n19.14.2 Formatter类的方法\n19.14.3 格式化的基础知识\n19.14.4 格式化字符串和字符\n19.14.5 格式化数字\n19.14.6 格式化时间和日期\n19.14.7 %n和%%说明符\n19.14.8 指定最小字段宽度\n19.14.9 指定精度\n19.14.10 使用格式标志\n19.14.11 对齐输出\n19.14.12 空格、“+”、“0”以及“（”标志\n19.14.13 逗号标志\n19.14.14 “#”标志\n19.14.15 大写选项\n19.14.16 使用参数索引\n19.14.17 关闭Formatter对象\n19.14.18 printf（）方法\n19.15 Scanner类\n19.15.1 Scanner类的构造函数\n19.15.2 扫描的基础知识\n19.15.3 一些Scanner示例\n19.15.4 设置定界符\n19.15.5 其他Scanner特性\n19.16 ResourceBundle、ListResourceBundle和\n19.17 其他实用工具类和接口\n19.18 java.util子包\n19.18.1 java.util.concurrent、java.util.concurrent.atomic和 java.util.concurrent.","pages":"1255","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s28240334.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s28240334.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s28240334.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26556574\/","id":"26556574","publisher":"清华大学出版社","isbn10":"7302387400","isbn13":"9787302387404","title":"Java 8编程参考官方教程","url":"https:\/\/api.douban.com\/v2\/book\/26556574","alt_title":"Java: The Complete Reference, 9th Edition","author_intro":"Herbert Schildt，世界顶级程序设计大师，全球顶尖编程图书作者之一。他是C、C++、Java和C#编程语言方面的权威，也是Windows编程方面的专家。他的编程书籍在全球销量已经超过300万册，并被翻译成多种语言流传于世，包括Java:The Complete Reference 、C++:The Complete Reference 、C: The Complete Reference 等。","summary":"《Java 8编程参考官方教程（第9版）》针对Java SE 8做了全面更新，介绍了如何开发、编译、调试和运行Java程序。畅销书作者Herbert Schildt撰写过众多经典的计算机编程图书。在本书中，他详尽地讲解了Java语言，包括Java的语法、关键字和基本编程原则，以及Java API库的主要内容。另外，本书还介绍了Java Bean、servlet、applet和Swing，并通过真实案例展示了Java语言的应用。《Java 8编程参考官方教程（第9版）》对Java SE 8的新特性也进行了深入讲解，包括lambda表达式、流库和默认接口方法，书末介绍的JavaFX知识为深入学习打下了坚实基础。\n主要内容\n●　数据类型、变量、数组和运算符\n●　控制语句\n●　类、对象和方法\n●　方法重载和重写\n●　继承\n●　接口和包\n●　异常处理\n●　多线程编程\n●　枚举、自动装箱和注解\n●　I\/O类\n●　泛型\n●　lambda表达式\n●　字符串处理\n●　集合框架\n●　联网\n●　事件处理\n●　AWT和Swing\n●　并发API\n●　流API\n●　正则表达式\n●　JavaFX\n●　Java Bean\n●　applet和servlet","price":"139.00"},{"rating":{"max":10,"numRaters":6,"average":"0.0","min":0},"subtitle":"Language Syntax, Arrays, Data Types, Objects, and Regular Expressions","author":["Kishori Sharan"],"pubdate":"2014-7-1","tags":[{"count":3,"name":"Java","title":"Java"},{"count":1,"name":"计算机","title":"计算机"},{"count":1,"name":"java8","title":"java8"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s28566937.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"828","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s28566937.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s28566937.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s28566937.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26758969\/","id":"26758969","publisher":"Apress","isbn10":"143026652X","isbn13":"9781430266525","title":"Beginning Java 8 Fundamentals","url":"https:\/\/api.douban.com\/v2\/book\/26758969","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":10,"average":"8.1","min":0},"subtitle":"","author":[],"pubdate":"2015-6-24","tags":[{"count":9,"name":"RxJava","title":"RxJava"},{"count":9,"name":"Java","title":"Java"},{"count":5,"name":"Rx","title":"Rx"},{"count":4,"name":"计算机","title":"计算机"},{"count":3,"name":"编程","title":"编程"},{"count":3,"name":"Reactive","title":"Reactive"},{"count":2,"name":"Android","title":"Android"}],"origin_title":"Nickolay Tsvetinov","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s28212532.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"177","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s28212532.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s28212532.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s28212532.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26528528\/","id":"26528528","publisher":"Packt Publishing","isbn10":"1785288725","isbn13":"9781785288722","title":"Learning Reactive Programming With Java 8","url":"https:\/\/api.douban.com\/v2\/book\/26528528","alt_title":"Nickolay Tsvetinov","author_intro":"Nickolay Tsvetinov is a professional all-round web developer at TransportAPI―Britain's first comprehensive open platform for transport solutions. During his career as a software developer, he experienced both good and bad and played with most of the popular programming languages―from C and Java to Ruby and JavaScript. For the last 3-4 years, he's been creating and maintaining single-page applications (SPA) and the backend API architectures that serve them. He is a fan of open source software, Rails, Vim, Sinatra, Ember.js, Node.js, and Nintendo. He was an unsuccessful musician and poet, but he is a successful husband and father. His area of interest and expertise includes the declarative\/functional and reactive programming that resulted in the creation of ProAct.js (http:\/\/proactjs.com), which is a library that augments the JavaScript language and turns it into a reactive language.","summary":"Learn how to use RxJava and its reactive Observables to build fast, concurrent, and powerful applications through detailed examples\nAbout This Book\nLearn about Java 8's lambdas and what reactive programming is all about, and how these aspects are utilized by RxJava\nBuild fast and concurrent applications with ease, without the complexity of Java's concurrent API and shared states\nExplore a wide variety of code examples to easily get used to all the features and tools provided by RxJava\nWho This Book Is For\nIf you are a Java developer that knows how to write software and would like to learn how to apply your existing skills to reactive programming, this book is for you.\nWhat You Will Learn\nDiscover what reactive programming is and how you can benefit from it\nGet to grips with the new functional features of Java 8 and some functional theory\nCreate RxJava Observable instances from virtually any data source\nTransform, filter, and accumulate your data using various RxJava operators\nCombine multiple data sources in one dataset, using custom logic\nWrite concurrent programs with ease, scheduling actions on various workers\nLearn about unit testing asynchronous RxJava logic\nExtend RxJava by writing your own operators and factory methods\nIn Detail\nWhether you are a Java expert or at a beginner level, you'll benefit from this book, because it will teach you a brand new way of coding and thinking.\nThe book starts with an explanation of what reactive programming is, why it is so appealing, and how we can integrate it in to Java. It continues by introducing the new Java 8 syntax features, such as lambdas and function references, and some functional programming basics. From this point on, the book focuses on RxJava in depth. It goes through creating Observables, transforming, filtering, and combining them, and concurrency and testing to finish with extending the library itself.\nThis book is a definite tutorial in RxJava filled with a lot of well-described examples. It explains reactive programming concepts in plain and readable language, without scientific formulas and terms.","price":"USD 44.99"},{"rating":{"max":10,"numRaters":3,"average":"0.0","min":0},"subtitle":"","author":["Brett Spell"],"pubdate":"2015-5-27","tags":[{"count":1,"name":"java8","title":"java8"},{"count":1,"name":"Java","title":"Java"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s28306594.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"708","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s28306594.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s28306594.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s28306594.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26631962\/","id":"26631962","publisher":"Apress","isbn10":"1484206428","isbn13":"9781484206423","title":"Pro Java 8 Programming","url":"https:\/\/api.douban.com\/v2\/book\/26631962","alt_title":"","author_intro":"About the Author\nBrett Spell has been programming professionally in Java since 1996 and is a Sun-certified Java programmer, developer, and architect. Brett is a regular contributor to Java Pro magazine and former columnist on design patterns for the Intel Developer Services web site. He currently lives in Plano, Texas, with his wife, Shari, and daughters, Ashleigh and Kaitlin.","summary":"Pro Java 8 Programming covers the core Java development kit and the finer points of the core standard edition (SE) and development kit version 8. You'll discover the particulars of working with the Java language and APIs to develop applications in many different contexts.\nYou will also delve into more advanced topics like lambda expressions, closures, new i\/o (NIO.2), enums, generics, XML, metadata and the Swing APIs for GUI design and development. By the end of the book, you’ll be fully prepared to take advantage of Java's ease of development, and able to create powerful, sophisticated Java applications.\nWhat you’ll learn\nHow to use and design your own libraries, classes and methodsHow to use the new lambda expressions, closures, stream API and moreHow to use the new thread and I\/O APIs for today's Java applications that must perform at enterprise and parallel scalesHow to use the improved collections APIsHow to build a better Java UI\/UX using layout managers, Swing's JTable and JTree APIs, cut-and-paste, and drag-and-dropHow to use Java Database Connectivity (JDBC) to connect and integrate with various MySQL, Oracle, and NoSQL databasesHow to work with internationalization, localization and moreHow to effectively use XML and add annotations to your Java applications and more\nWho this book is for\nThis book is for experienced Java programmers or developers looking to further refine or add to their skills and knowledge base.\nTable of Contents\n1. Going Inside Java 8\n2. Designing Libraries, Classes, and Methods\n3. Lambda Expressions and Closures\n4. Using Threads in Your Applications\n5. Using Stream APIs and Collections\n6. Using Layout Managers\n7. Using Swing’s JTable\n8. Using Swing’s JTree\n9. Adding Cut-and-Paste Functionality\n10. Adding Drag-and-Drop Functionality\n11. Printing\n12. Introducing Java Database Connectivity (JDBC)\n13. Internationalizing Your Applications\n14. Using XML\n15. Adding Annotations","price":"USD 46.90"},{"rating":{"max":10,"numRaters":17,"average":"9.6","min":0},"subtitle":"","author":["Bruce Eckel"],"pubdate":"","tags":[{"count":20,"name":"Java","title":"Java"},{"count":17,"name":"java","title":"java"},{"count":9,"name":"编程","title":"编程"},{"count":4,"name":"计算机","title":"计算机"},{"count":1,"name":"計算機","title":"計算機"},{"count":1,"name":"外文","title":"外文"},{"count":1,"name":"ooo999","title":"ooo999"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29763471.jpg","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29763471.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29763471.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29763471.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30217317\/","id":"30217317","publisher":"","isbn10":"0981872522","isbn13":"9780981872520","title":"On Java 8","url":"https:\/\/api.douban.com\/v2\/book\/30217317","alt_title":"","author_intro":"Bruce Eckel is the author of the multi-award-winning books Thinking in Java and Thinking in C++.","summary":"","price":""},{"rating":{"max":10,"numRaters":6,"average":"0.0","min":0},"subtitle":"","author":["Jeff Langr","Andy Hunt","Dave Thomas"],"pubdate":"2015-3-19","tags":[{"count":6,"name":"JUnit","title":"JUnit"},{"count":2,"name":"软件测试","title":"软件测试"},{"count":2,"name":"单元测试","title":"单元测试"},{"count":2,"name":"Java","title":"Java"},{"count":1,"name":"好书","title":"好书"},{"count":1,"name":"test","title":"test"},{"count":1,"name":"junit","title":"junit"},{"count":1,"name":"java","title":"java"}],"origin_title":"Pragmatic Unit Testing in Java 8 with JUnit","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s28265657.jpg","binding":"Paperback","translator":[],"catalog":"Part I — Unit-Testing Foundations\n1. Building Your First JUnit Test\n2. Getting Real with JUnit\n3. Digging Deeper into JUnit Assertions\n4. Organizing Your Tests\nPart II — Mastering Manic Mnemonics!\n5. FIRST Properties of Good Tests\n6. What to Test: The Right-BICEP\n7. Boundary Conditions: The CORRECT Way\nPart III — The Bigger Design Picture\n8. Refactoring to Cleaner Code\n9. Bigger Design Issues\n10. Using Mock Objects\n11. Refactoring Tests\nPart IV — The Bigger Unit-Testing Picture\n12. Test-Driven Development\n13. Testing Some Tough Stuff\n14. Testing on a Project\n\nA1. Setting Up JUnit in IntelliJ IDEA and NetBeans\nIndex","pages":"200","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s28265657.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s28265657.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s28265657.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26581722\/","id":"26581722","publisher":"Pragmatic Bookshelf","isbn10":"1941222595","isbn13":"9781941222591","title":"Pragmatic Unit Testing in Java 8 with JUnit","url":"https:\/\/api.douban.com\/v2\/book\/26581722","alt_title":"Pragmatic Unit Testing in Java 8 with JUnit","author_intro":"Jeff Langr is a veteran software developer with well over three decades experience building software and helping others learn how to do so. Jeff develops software for Outpace Systems, Inc., and still provides help to customers through Langr Software Solutions, Inc. Jeff's prior Pragmatic Bookshelf titles include Agile in a Flash (with Tim Ottinger) and Modern C++ Programming with Test-Driven Development.\nAndy Hunt has written and co-written over a half-dozen previous titles, including the classic The Pragmatic Programmer, Practices of an Agile Developer, Pragmatic Thinking & Learning, and Learn to Program with Minecraft Plugins, and regularly speaks at conferences on software development around the world.\nDave Thomas is a programmer who likes to evangelize cool stuff. He cowrote \"The Pragmatic Programmer\" and was one of the creators of the Agile Manifesto. His book \"Programming Ruby\" introduced the Ruby language to the world, and \"Agile Web Development with Rails\" helped kickstart the Rails revolution.","summary":"The Pragmatic Programmers classic is back! Freshly updated for modern software development, Pragmatic Unit Testing in Java 8 With JUnit teaches you how to write and run easily maintained unit tests in JUnit with confidence. You'll learn mnemonics to help you know what tests to write, how to remember all the boundary conditions, and what the qualities of a good test are. You'll see how unit tests can pay off by allowing you to keep your system code clean, and you'll learn how to handle the stuff that seems too tough to test.\nPragmatic Unit Testing in Java 8 With JUnit steps you through all the important unit testing topics. If you've never written a unit test, you'll see screen shots from Eclipse, IntelliJ IDEA, and NetBeans that will help you get past the hard part--getting set up and started.\nOnce past the basics, you'll learn why you want to write unit tests and how to effectively use JUnit. But the meaty part of the book is its collected unit testing wisdom from people who've been there, done that on production systems for at least 15 years: veteran author and developer Jeff Langr, building on the wisdom of Pragmatic Programmers Andy Hunt and Dave Thomas. You'll learn:\nHow to craft your unit tests to minimize your effort in maintaining them.\nHow to use unit tests to help keep your system clean.\nHow to test the tough stuff.\nMemorable mnemonics to help you remember what's important when writing unit tests.\nHow to help your team reap and sustain the benefits of unit testing.\nYou won't just learn about unit testing in theory--you'll work through numerous code examples. When it comes to programming, hands-on is the only way to learn!","series":{"id":"39893","title":"The Pragmatic Starter Kit"},"price":"USD 24.86"},{"rating":{"max":10,"numRaters":9,"average":"0.0","min":0},"subtitle":"","author":["Robert Liguori","Patricia Liguori"],"pubdate":"2014-4-28","tags":[{"count":6,"name":"Java","title":"Java"},{"count":4,"name":"计算机","title":"计算机"},{"count":2,"name":"O'Reilly","title":"O'Reilly"},{"count":1,"name":"java","title":"java"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s27288285.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"242","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s27288285.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s27288285.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s27288285.jpg"},"alt":"https:\/\/book.douban.com\/subject\/25891963\/","id":"25891963","publisher":"O'Reilly Media","isbn10":"1491900865","isbn13":"9781491900864","title":"Java 8 Pocket Guide","url":"https:\/\/api.douban.com\/v2\/book\/25891963","alt_title":"","author_intro":"","summary":"","price":"USD 14.99"},{"rating":{"max":10,"numRaters":3,"average":"0.0","min":0},"subtitle":"Lambda Expressions, Inner Classes, Threads, I\/O, Collections, and Streams","author":["Kishori Sharan"],"pubdate":"2014-8-10","tags":[{"count":3,"name":"Java","title":"Java"},{"count":2,"name":"计算机","title":"计算机"},{"count":2,"name":"Programming","title":"Programming"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s27708236.jpg","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s27708236.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s27708236.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s27708236.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26201969\/","id":"26201969","publisher":"Apress","isbn10":"1430266589","isbn13":"9781430266587","title":"Beginning Java 8 Language Features","url":"https:\/\/api.douban.com\/v2\/book\/26201969","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":8,"average":"0.0","min":0},"subtitle":"","author":["Ken Kousen"],"pubdate":"2017-8-25","tags":[{"count":11,"name":"Java","title":"Java"},{"count":3,"name":"计算机","title":"计算机"},{"count":3,"name":"编程","title":"编程"},{"count":1,"name":"软件开发","title":"软件开发"},{"count":1,"name":"软件工程","title":"软件工程"},{"count":1,"name":"英文版","title":"英文版"},{"count":1,"name":"编程语言","title":"编程语言"},{"count":1,"name":"java","title":"java"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29494238.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"304","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s29494238.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s29494238.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29494238.jpg"},"alt":"https:\/\/book.douban.com\/subject\/27088096\/","id":"27088096","publisher":"O'Reilly Media","isbn10":"149197317X","isbn13":"9781491973172","title":"Modern Java Recipes: Simple Solutions to Difficult Problems in Java 8 and 9","url":"https:\/\/api.douban.com\/v2\/book\/27088096","alt_title":"","author_intro":"I'm a software developer, speaker, and technical trainer based in Marlborough, CT. I'm president of my own company, Kousen IT, Inc., through which I mostly teach technical training courses in all areas related to Java, focusing especially on subjects like Android, Spring, Hibernate, Groovy, and Grails.\nI'm a regular speaker on the No Fluff, Just Stuff tour, where I give technical talks on topics as diverse as the Gradle build tool, building and testing Android applications, and managing your manager.\nI have a range of technical certifications, but don't do that much any more. I also have a lot of academic degrees, which include a BS in Mathematics and a BS in Mechanical Engineering from M.I.T., an MA and a Ph.D. in Aerospace Engineering from Princeton, and an MS in Computer Science from Rensselaer Polytechnic Institute. I'm also an adjunct professor at RPI in Hartford, CT, where I teach an occasional graduate class.","summary":"Need simple solutions to specific challenges with Java 8 and Java 9? This book of practical recipes provides a quick, easy reference for developers who prefer useful examples over detailed explanations. Modern Java Recipes shows you how to solve a wide range of problems using the newest features of Java.Learn functional programming with lambdas, method references, and streamsAdopt the new static and default methods in interfacesWork with the new set of functional interfaces added to the languageUse collectors and comparators to search, filter, and sort dataEmploy the new Optional type and use it correctlyUnderstand the new java.time package to handle Date and Time functionality, including time zone adjustmentsUse the Java Read-Eval-Print-Loop in Java 9Employ the new Jigsaw mechanism to modularize deployables","price":"USD 36.29"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"2nd Edition","author":["Scott Oaks"],"pubdate":"2020-2-18","tags":[{"count":1,"name":"软件工程","title":"软件工程"},{"count":1,"name":"计算机科学","title":"计算机科学"},{"count":1,"name":"性能","title":"性能"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s33444763.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"445","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s33444763.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s33444763.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s33444763.jpg"},"alt":"https:\/\/book.douban.com\/subject\/34776993\/","id":"34776993","publisher":"O'Reilly Media","isbn10":"1492056111","isbn13":"9781492056119","title":"Java Performance: In-Depth Advice for Tuning and Programming Java 8, 11, and Beyond","url":"https:\/\/api.douban.com\/v2\/book\/34776993","alt_title":"","author_intro":"Scott Oaks is an architect at Oracle Corporation, where he works on the performance of Oracle’s middleware software. Prior to joining Oracle, he worked for years at Sun Microsystems, specializing in many disparate technologies from the SunOS kernel to network programming and RPCs to windows systems and the OPEN LOOK Virtual Window Manager. In 1996, Scott became a Java evangelist for Sun and in 2001 joined their Java Performance group--which has been his primary focus ever since. Scott also authored O’Reilly’s Java Security, Java Threads, JXTA in a Nutshell, and Jini in a Nutshell titles.","summary":"Coding and testing are often considered separate areas of expertise. In this comprehensive guide, author and Java expert Scott Oaks takes the approach that anyone who works with Java should be equally adept at understanding how code behaves in the JVM, as well as the tunings likely to help its performance.\nYou’ll gain in-depth knowledge of Java application performance, using the Java Virtual Machine (JVM) and the Java platform, including the language and API. Developers and performance engineers alike will learn a variety of features, tools, and processes for improving the way Java 7 and 8 applications perform.\nApply four principles for obtaining the best results from performance testing\nUse JDK tools to collect data on how a Java application is performing\nUnderstand the advantages and disadvantages of using a JIT compiler\nTune JVM garbage collectors to affect programs as little as possible\nUse techniques to manage heap memory and JVM native memory\nMaximize Java threading and synchronization performance features\nTackle performance issues in Java EE and Java SE APIs\nImprove Java-driven database application performance","price":"USD 59.99"},{"rating":{"max":10,"numRaters":15,"average":"9.2","min":0},"subtitle":"Harnessing the Power Of Java 8 Lambda Expressions","author":["Venkat Subramaniam"],"pubdate":"2014-3-1","tags":[{"count":22,"name":"Java","title":"Java"},{"count":11,"name":"lambda","title":"lambda"},{"count":10,"name":"函数式编程","title":"函数式编程"},{"count":8,"name":"Java8","title":"Java8"},{"count":8,"name":"Functional","title":"Functional"},{"count":3,"name":"编程","title":"编程"},{"count":2,"name":"英文原版","title":"英文原版"},{"count":1,"name":"计算机","title":"计算机"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s27241342.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"160","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s27241342.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s27241342.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s27241342.jpg"},"alt":"https:\/\/book.douban.com\/subject\/25830739\/","id":"25830739","publisher":"Pragmatic Bookshelf","isbn10":"1937785467","isbn13":"9781937785468","title":"Functional Programming in Java","url":"https:\/\/api.douban.com\/v2\/book\/25830739","alt_title":"","author_intro":"","summary":"","price":"USD 33.00"},{"rating":{"max":10,"numRaters":1,"average":"0.0","min":0},"subtitle":"","author":["QST青软实训"],"pubdate":"2015-5-1","tags":[],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s28603200.jpg","binding":"平装","translator":[],"catalog":"","pages":"336","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s28603200.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s28603200.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s28603200.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26766092\/","id":"26766092","publisher":"清华大学出版社","isbn10":"7302399646","isbn13":"9787302399643","title":"Java 8 基础应用与开发","url":"https:\/\/api.douban.com\/v2\/book\/26766092","alt_title":"","author_intro":"","summary":"本书深入介绍了Java基础编程的相关方面，内容涵盖Java概述、Java语言基础、面向对象基础、Java常用的核心类、类之间的关系、接口、抽象类、异常、泛型与集合。书中所有代码都是基于Java 8环境下调试运行的，并对Java 8的一些新特性进行了全面介绍。\n本书由浅入深对Java SE技术进行了系统讲解，并且重点突出、强调动手操作能力，以一个项目贯穿所有章节的任务实现，使得读者能够快速理解并掌握各项重点知识，全面提高分析问题、解决问题以及编码的能力。\n本书适用面广，可作为高校、培训机构的Java教材，适用于计算机科学与技术、软件外包、计算机软件、计算机网络、电子商务等专业的程序设计课程的教材。 本书适合各种层次的Java学习者和工作者阅读。","price":"59.50"},{"rating":{"max":10,"numRaters":1,"average":"0.0","min":0},"subtitle":"Develop Reilable Java Applications","author":["Shri Mahavir DS Rathore"],"pubdate":"2016-3-17","tags":[{"count":1,"name":"异常处理","title":"异常处理"},{"count":1,"name":"Java","title":"Java"},{"count":1,"name":"ExceptionHandling","title":"ExceptionHandling"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29401876.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"58","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s29401876.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s29401876.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29401876.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26997320\/","id":"26997320","publisher":"Paperback","isbn10":"1530612683","isbn13":"9781530612680","title":"Java 8 Exception Handling","url":"https:\/\/api.douban.com\/v2\/book\/26997320","alt_title":"","author_intro":"About the Author\nMahavir has been programming & teaching Java for last 18 years. This book is an effort to document his knowledge to share with everyone across the world. Mahavir is from Bengaluru, India.","summary":"In a single sentence it can said “software is very pervasive and impacts human life in many ways”. Today software directly or indirectly impacts many domains such as banking, healthcare, business, military, education, government etc. Hence software reliability is of highest importance and exception handling help to enhance software reliability. In this book learn how to develop reliable Java application using Java Exception Handling Infrastructure.This book has 17 chapters which have numerous examples for each of the topics and covers them comprehensively. Some of the chapters in this book are a. Exception chaining b. User defined exception c. Try with resource d. Nested exception e. Checked and Unchecked exception f. finally block with return keyword g. Overriding Exception This book is targeted for Java programmers. Level : Beginner to Intermediate.","price":"$9.9"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["QST青软实训"],"pubdate":"2016-9-1","tags":[],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29900416.jpg","binding":"平装","translator":[],"catalog":"第1章文件及IO流\n任务驱动\n学习路线\n本章目标\n1.1文件\n1.1.1文件系统和路径\n1.1.2File类\n1.1.3FilenameFilter接口\n1.2IO流\n1.2.1流的分类\n1.2.2流的体系结构\n1.3字节流\n1.3.1InputStream\n1.3.2OutputStream\n1.4字符流\n1.4.1Reader\n1.4.2Writer\n1.5过滤流和转换流\n1.5.1过滤流\n1.5.2转换流\n1.6对象流\n1.6.1对象序列化与反序列化\n1.6.2ObjectlnputStream和ObjectOutputStream\n1.7NIO\n1.7.1NIO概述\n1.7.2Buffer\n1.7.3Channel\n1.7.4NIO.2\n1.8贯穿任务实现\n1.8.1实现（任务1—1）\n1.8.2实现（任务1—2）\n1.8.3实现（任务1—3）\n1.8.4实现（任务1—4）\n本章总结\n小结\nQ&A\n章节练习\n习题\n上机\n第2章JDBC编程\n任务驱动\n学习路线\n本章目标\n2.1JDBC基础\n2.1.1JDBC简介\n2.1.2JDBC驱动\n2.1.3JDBC API\n2.2数据库环境搭建\n2.2.1创建数据库表\n2.2.2设置Oracle驱动类路径\n2.3数据库访问\n2.3.1加载数据库驱动\n2.3.2建立数据连接\n2.3.3创建Statement对象\n2.3.4执行SQL语句\n2.3.5访问结果集\n2.4操作数据库\n2.4.1exectlte（）方法\n2.4.2executeUpdate（）和executeLargeUpdate（）方法\n2.4.3PreparedStatement接口\n2.4.4CallableStatement接口\n2.4.5数据库访问优化\n2.5集元数据\n2.5.1DatabaseMetaData接口\n2.5.2ResultSetMetaData接口\n2.6事务处理\n2.6.1事务\n2.6.2保存点\n2.6.3批量更新\n2.7贯穿任务实现\n2.7.1实现（任务2—1）\n2.7.2实现（任务2—2）\n2.7.3实现（任务2—3）\n2.7.4实现（任务2—4）\n本章总结\n小结\nQ&A\n章节练习\n习题\n上机\n第3章Swing UI设计\n任务驱动\n学习路线\n本章目标\n3.1GUI概述\n3.1.1AWT和Swing\n3.1.2Swing组件层次\n3.2容器\n3.2.1……\n3.2.2JPanel中间容器\n3.3布局\n3.3.1FlowLayout流布局\n3.3.2BorderLayout边界布局\n3.3.3GridLayout网格布局\n3.3.4CardLayout卡片布局\n3.3.5BoxLayout盒布局\n3.3.6NULL空布局\n3.4事件处理\n3.4.1Java事件处理机制\n3.4.2事件类\n3.4.3监听接口\n3.4.4事件处理步骤\n3.4.5键盘事件\n3.4.6鼠标事件\n3.4.7适配器\n3.5基本组件\n3.5.1Icon图标\n3.5.2JButton按钮\n3.5.3JLabel标签\n3.5.4文本组件\n3.5.5JCornboBox组合框\n3.5.6JList列表框\n3.5.7JRadioButton单选按钮\n3.5.8JCheckBox复选框\n3.5.9计算器\n3.6贯穿任务实现\n3.6.1实现（任务3—1）\n3.6.2实现（任务3—2）\n3.6.3实现（任务3—3）\n本章总结\n小结\nQ&A\n章节练习\n习题\n上机\n第4章高级UI组件\n任务驱动\n学习路线\n本章目标\n4.1对话框\n4.1.1JDialog对话框\n4.1.2JOptionPane标准对话框\n4.1.3JFileChooser文件对话框\n4.1.4JColorChooser颜色对话框\n4.2菜单\n4.2.1下拉式菜单\n4.2.2弹出式菜单\n4.3工具栏\n4.4表格\n4.4.1JTable类及相关接口\n4.4.2使用表格\n4.5树\n4.5.1JTree类及相关接口\n4.5.2使用树\n4.6贯穿任务实现\n4.6.1实现（任务4—1）\n4.6.2实现（任务4—2）\n4.6.3实现（任务4—3）\n4.6.4实现（任务4—4）\n本章总结\n小结\nQ&A\n章节练习\n习题\n上机\n第5章线程\n任务驱动\n学习路线\n本章目标\n5.1线程概述\n5.1.1线程和进程\n5.1.2Java线程模型\n5.1.3主线程\n5.2创建线程\n5.2.1继承Thread类\n5.2.2实现Runnable接口\n5.2.3使用Callabte和Future接口\n5.3线程生命周期\n5.3.1新建和就绪状态\n5.3.2运行和阻塞状态\n5.3.3死亡状态\n5.4线程优先级\n5.5线程同步\n5.5.1同步代码块\n5.5.2同步方法\n5.5.3同步锁\n5.6线程通信\n5.7Timer和Swing Timer\n5.7.1Timer\n5.7.2Swing Timer\n5.8贯穿任务实现\n5.8.1实现（任务5—1）\n本章总结\n小结\nQ&A\n章节练习\n习题\n上机\n第6章网络编程\n任务驱动\n学习路线\n本章目标\n6.1网络基础\n6.1.1网络类型\n6.1.2TCP／IP协议\n6.1.3IP地址和端口\n6.1.4域名DNS\n6.2Java网络API\n6.2.1InetAddress类\n6.2.2URL类\n6.2.3URLConnection类\n6.2.4URLDecoder雨URLEncoder类\n6.3基于TCP的网络编程\n6.3.1Socket类\n6.3.2ServerSocket类\n6.3.3聊天室\n6.4贯穿任务实现\n6.4.1实现（任务6—1）\n6.4.2实现（任务6—2）\n6.4.3实现（任务6—3）\n本章总结\n小结\nQ&A\n章节练习\n习题\n上机\n第7章Java高级应用\n任务驱动\n学习路线\n本章目标\n7.1类加载\n7.1.1Class类\n7.1.2类加载步骤\n7.1.3类加载器\n7.1.4ClassLoader类\n7.2反射\n7.2.1Executable抽象类\n7.2.2Constructor类\n7.2.3Method类\n7.2.4Field类\n7.2.5Parameter类\n7.3枚举\n7.3.1定义枚举类\n7.3.2包含属性和方法的枚举类\n7.3.3Enum类\n7.4注解\n7.4.1基本注解\n7.4.2定义注解\n7.4.3使用注解\n7.4.4元注解\n7.5国际化\n7.5.1Locale类\n7.5.2ResourceBundle类\n7.6格式化处理\n7.6.1数字格式化\n7.6.2货币格式化\n7.6.3日期格式化\n7.6.4Java 8新增的DateTimeFormatter\n7.6.5消息格式化\n7.7贯穿任务实现\n7.7.1实现（任务7—1）\n7.7.2实现（任务7—2）\n本章总结\n小结 Q&A\n章节练习\n习题\n上机\n……\n第8章Java 8新特性\n附录AWindowBuilder插件\n附录B数据库连接池\n附录CRowSet","pages":"430","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s29900416.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s29900416.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29900416.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30356450\/","id":"30356450","publisher":"清华大学出版社","isbn10":"7302443521","isbn13":"9787302443520","title":"Java 8高级应用与开发","url":"https:\/\/api.douban.com\/v2\/book\/30356450","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":1,"average":"0.0","min":0},"subtitle":"An Unofficial Guide","author":["Adam L. Davis"],"pubdate":"2018-10-28","tags":[],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s31720934.jpg","binding":"","translator":[],"catalog":"Preface\n1. Overview\n2. Lambda Expressions\n2.1 Syntax\n2.2 Scope\n2.3 Method references\n2.4 Functional Interfaces\n2.5 Comparisons to Java 7\n3. Default Methods\n3.1 Default and Functional\n3.2 Multiple Defaults\n3.3 Static Methods on Interface\n4. Streams\n4.1 What is a Stream?\n4.2 Generating Streams\n4.3 For Each\n4.4 Map\/Filter\/Reduce\n4.5 Parallel Array\n4.6 Peek\n4.7 Limit\n4.8 Sort\n4.9 Collectors and Statistics\n4.10 Grouping and Partitioning\n4.11 Comparisons to Java 7\n5. Optional\n6. Nashorn\n6.1 jjs\n6.2 Scripting\n6.3 ScriptEngine\n6.4 Importing\n6.5 Extending\n6.6 Invocable\nNotes","pages":"","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s31720934.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s31720934.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s31720934.jpg"},"alt":"https:\/\/book.douban.com\/subject\/32830614\/","id":"32830614","publisher":"Leanpub","isbn10":"1497533503","isbn13":"9781497533509","title":"What's New in Java 8","url":"https:\/\/api.douban.com\/v2\/book\/32830614","alt_title":"","author_intro":"Adam Davis makes software. He's spent many years developing in Java (since Java 1.2) and has enjoyed using Spring and Hibernate. Since 2006 he's been using Groovy and Grails in addition to Java to create SaaS web applications that help track finances for large institutions (among other things). Adam has a Masters and a Bachelors degree in Computer Science from Georgia Tech.","summary":"Java 8 is a giant step forward for the Java language. In Project Lambda, Java gets a new closure syntax (lambda expressions), method-references, and default and static methods on interfaces. It manages to add many of the features of functional languages without losing the clarity and simplicity Java developers have come to expect. In addition, many of the existing Java core library classes have been enhanced with the new Streams API.This book will help you understand Java 8, including: Project Lambda, the new Date-Time API, Streams, default methods, the Nashorn Javascript engine, and more.","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":[],"pubdate":"","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","large":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","medium":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif"},"alt":"https:\/\/book.douban.com\/subject\/30573507\/","id":"30573507","publisher":"","isbn10":"7302503567","isbn13":"9787302503569","title":"Java 8基础应用与开发（第2版）-微课版（“在实践中成长”丛书）","url":"https:\/\/api.douban.com\/v2\/book\/30573507","alt_title":"","author_intro":"","summary":"","price":"68.30"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":[],"pubdate":"","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s32041489.jpg","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s32041489.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s32041489.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s32041489.jpg"},"alt":"https:\/\/book.douban.com\/subject\/33151595\/","id":"33151595","publisher":"","isbn10":"153092443X","isbn13":"9781530924431","title":"Java 8: A Step by Step Guide for Beginners - Fast and Simple Learning of Java Programming","url":"https:\/\/api.douban.com\/v2\/book\/33151595","alt_title":"","author_intro":"","summary":"Java 8 Programming A Step by Step Guide For Beginners. FAST and SIMPLE Learning of JAVA Programming! Java 8 is a very powerful programming language, and with it you can create impressive applications including the interface and also the functionality. Before the release of Java 8, Java. experts had been waiting for a long period of time for Lambda expressions, Functional interfaces, Stream API, and default methods, which were not provided in the previous releases of Java. Here is a preview of what you'll learn: Requirements for Java 8 programming  Creating a Project and a Class Lambda Expression in Java 8 programming  Uses of Lambda Expression in Java 8 Functional Programming in Java 8 Streams in Java 8 Predicates in Java 8Download your copy of \"Java 8\" by scrolling up and clicking \"Buy Now With 1-Click\" button.","price":""},{"rating":{"max":10,"numRaters":6,"average":"0.0","min":0},"subtitle":"Java常见问题的简单解法","author":["[美]肯·寇森（Ken Kousen）"],"pubdate":"2018-8","tags":[{"count":18,"name":"Java","title":"Java"},{"count":5,"name":"计算机","title":"计算机"},{"count":3,"name":"计算科学","title":"计算科学"},{"count":3,"name":"技术","title":"技术"},{"count":2,"name":"java","title":"java"},{"count":1,"name":"未资源","title":"未资源"},{"count":1,"name":"图灵","title":"图灵"},{"count":1,"name":"图书馆k","title":"图书馆k"}],"origin_title":"Modern Java Recipes: Simple Solutions to Difficult Problems in Java 8 and 9","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29827740.jpg","binding":"平装","translator":["蒋楠"],"catalog":"译者序　　ix\n序　　xi\n前言　　xiii\n第1章　基础知识　　1\n1.1　lambda 表达式　　2\n1.2　方法引用　　5\n1.3　构造函数引用　　8\n1.4　函数式接口　　12\n1.5　接口中的默认方法　　14\n1.6　接口中的静态方法　　17\n第2章　java.util.function 包　　20\n2.1　Consumer 接口　　20\n2.2　Supplier 接口　　22\n2.3　Predicate 接口　　25\n2.4　Function 接口　　28\n第3章　流式操作　　31\n3.1　流的创建　　31\n3.2　装箱流　　35\n3.3　利用reduce 方法实现归约操作　　36\n3.4　利用reduce 方法校验排序　　44\n3.5　利用peek 方法对流进行调试　　45\n3.6　字符串与流之间的转换　　47\n3.7　获取元素数量　　50\n3.8　汇总统计　　52\n3.9　查找流的第一个元素　　54\n3.10　使用anyMatch、allMatch 与noneMatch 方法　　58\n3.11　使用flatMap 与map 方法　　60\n3.12　流的拼接　　63\n3.13　惰性流　　66\n第4章　比较器与收集器　　69\n4.1　利用比较器实现排序　　69\n4.2　将流转换为集合　　72\n4.3　将线性集合添加到映射　　75\n4.4　对映射排序　　77\n4.5　分区与分组　　79\n4.6　下游收集器　　81\n4.7　查找最大值和最小值　　83\n4.8　创建不可变集合　　85\n4.9　实现Collector 接口　　87\n第5章　流式操作、lambda 表达式与方法引用的相关问题　　91\n5.1　java.util.Objects 类　　91\n5.2　lambda 表达式与效果等同于final 的变量　　93\n5.3　随机数流　　96\n5.4　Map 接口的默认方法　　97\n5.5　默认方法冲突　　101\n5.6　集合与映射的迭代　　103\n5.7　利用Supplier 创建日志消息　　105\n5.8　闭包复合　　107\n5.9　利用提取的方法实现异常处理　　110\n5.10　受检异常与lambda 表达式　　112\n5.11　泛型异常包装器的应用　　114\n第6章　Optional 类　　117\n6.1　Optional 的创建　　118\n6.2　从Optional 中检索值　　120\n6.3　getter 和setter 方法中的Optional　　122\n6.4　Optional.flatMap 与Optional.map 方法　　124\n6.5　Optional 的映射　　127\n第7章　文件I\/O　　131\n7.1　文件处理　　132\n7.2　以流的形式检索文件　　134\n7.3　文件系统的遍历　　135\n7.4　文件系统的搜索　　137\n第8章　java.time 包　　139\n8.1　Date-Time API 中的基本类　　140\n8.2　根据现有实例创建日期和时间　　143\n8.3　调节器与查询　　147\n8.4　将java.util.Date 转换为java.time.LocalDate　　152\n8.5　解析与格式化　　155\n8.6　查找具有非整数小时偏移量的时区　　158\n8.7　根据UTC 偏移量查找地区名　　160\n8.8　获取事件之间的时间　　162\n第9章　并行与并发　　165\n9.1　将顺序流转换为并行流　　166\n9.2　并行流的优点　　169\n9.3　调整线程池大小　　173\n9.4　Future 接口　　175\n9.5　完成CompletableFuture　　178\n9.6　多个CompletableFuture 之间的协调（第1 部分）　　181\n9.7　多个CompletableFuture 之间的协调（第2 部分）　　186\n第10章　Java 9 新特性　　193\n10.1　Jigsaw 中的模块　　194\n10.2　接口中的私有方法　　198\n10.3　创建不可变集合　　200\n10.4　新增的Stream 方法　　204\n10.5　下游收集器：filtering 与flatMapping　　207\n10.6　新增的Optional 方法　　210\n10.7　日期范围　　212\n附录A　泛型与Java 8　　215\n作者简介　　230\n封面介绍　　230","pages":"248","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29827740.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29827740.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29827740.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30282531\/","id":"30282531","publisher":"人民邮电出版社","isbn10":"7115488800","isbn13":"9787115488800","title":"Java攻略","url":"https:\/\/api.douban.com\/v2\/book\/30282531","alt_title":"Modern Java Recipes: Simple Solutions to Difficult Problems in Java 8 and 9","author_intro":"[美]肯·寇森\n知名的技术培训师、软件开发者与会议演讲者，对Java以及Android、Spring、Hibernate\/JPA、Groovy、Grails、Gradle等开源软件颇有研究。2013和2016年荣膺JavaOne Rock Star大奖。\n具有深厚的学术背景，拥有麻省理工学院机械工程与数学学士学位、普林斯顿大学航空工程硕士与博士学位，并于伦斯勒理工学院取得计算机科学硕士学位。\n目前担任Kousen IT公司总裁。","summary":"本书旨在成为让读者可以迅速查找到Java 8和Java 9相关特性介绍的指南，并给出可以用于实际开发的示例。书中范例提炼自开发人员日常工作时遇到的问题，介绍了如何利用Java 8和Java 9的新特性解决这些问题，从而以更自然的方式让开发人员对这门语言的变化了然于心。","series":{"id":"46192","title":"图灵程序设计丛书·Java系列"},"price":"69.00元"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":[],"pubdate":"","tags":[],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s31977422.jpg","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s31977422.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s31977422.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s31977422.jpg"},"alt":"https:\/\/book.douban.com\/subject\/33087411\/","id":"33087411","publisher":"","isbn10":"1530669170","isbn13":"9781530669172","title":"Learn Java 8 in a Week: A Beginner's Guide to Java Programming","url":"https:\/\/api.douban.com\/v2\/book\/33087411","alt_title":"","author_intro":"","summary":"Level : Absolute beginner in Java. This book is for programmers who would love to learn Java quickly and firmly with hands on approach. After completing this book you will have core understanding of the Java programming language and Java platform. The book offers comprehensive coverage of Java fundamentals explained in a simplified language supported by examples.The book is divided into 29 chapters where each major topic has it's own chapter and each chapter has multiple examples to support and provide clarity on the concept.The topics covered in this book are1. What is Java?2. JDK and JRE3. Setting Path Variable4. Complier and Interpreter5. The First Program6. The HelloWorld Program7. Anatomy of HelloWorld Program8. Multiple Main Methods9. Public Class and File Name10. Runtime Execution11. Alternate HelloWorld Program12. Numeric Data Types13. Non Numeric Data Types14. Literal and Constant15. Escape Sequence16. Immutable String17. StringBuilder Class18. Wrapper Classes19. IF... Else20. Switch... Case21. For... Loop22. While... Loop23. Break and Continue24. Conversion and Casting25. Arithmetic and Relational Operators26. Logical and Ternary Operators27. Arrays28. Jagged Array29. For Each LoopBasically the book has lot of code(examples) for clear and deeper understanding of Java programming language.","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"Extensions and Libraries","author":["Kishori Sharan"],"pubdate":"","tags":[],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s27800154.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"808","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s27800154.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s27800154.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s27800154.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26256574\/","id":"26256574","publisher":"Apress","isbn10":"1430266619","isbn13":"9781430266617","title":"Beginning Java 8 APIs","url":"https:\/\/api.douban.com\/v2\/book\/26256574","alt_title":"","author_intro":"","summary":"Beginning Java 8 APIs, Extensions and Libraries completes the Apress learning Java journey and is a comprehensive approach to learning the Java programming language extensions and available APIs and libraries, including the new JavaFX APIs.\nThis book covers the key extensions of the Java programming language such as Swing, JavaFX, network programming, and JDBC. Each topic starts with a discussion of the topic's background. A step-by-step process, with small snippets of Java code, provides easy-to-follow instructions. At the end of a topic, a complete and ready-to-run Java program is provided. This book contains over 130 images and diagrams to help you visualize and better understand the topics. More than 130 complete programs allow you to practice and quickly learn the topics.","price":"USD49.99"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"8","author":["刘海霞　编"],"pubdate":"","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","binding":"平装-胶订","translator":[],"catalog":"","pages":"","images":{"small":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","large":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","medium":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif"},"alt":"https:\/\/book.douban.com\/subject\/30818591\/","id":"30818591","publisher":"北京邮电大学出版社有限公司","isbn10":"7563549846","isbn13":"9787563549849","title":"网络程序设计：基于Java 8","url":"https:\/\/api.douban.com\/v2\/book\/30818591","alt_title":"","author_intro":"","summary":"","price":"36元"},{"rating":{"max":10,"numRaters":6,"average":"0.0","min":0},"subtitle":"基于Java SE 8","author":["詹姆斯·高斯林 (James Gosling)","比尔·乔伊 (Bill Joy)","盖·斯蒂尔 (Guy Steele)","吉拉德·布拉查 (Gilad Bracha)","等"],"pubdate":"2016-1-1","tags":[{"count":19,"name":"Java","title":"Java"},{"count":4,"name":"计算机","title":"计算机"},{"count":3,"name":"软件开发","title":"软件开发"},{"count":2,"name":"经典","title":"经典"},{"count":2,"name":"java","title":"java"},{"count":2,"name":"AA-Java","title":"AA-Java"},{"count":1,"name":"最近想读","title":"最近想读"},{"count":1,"name":"A-计算机科学","title":"A-计算机科学"}],"origin_title":"The Java Language Specification, Java SE 8 Edition","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29404593.jpg","binding":"平装","translator":["陈昊鹏"],"catalog":"出版者的话\n译者序\n前言\n第1章　概述 1\n1.1　本书结构 1\n1.2　样例程序 4\n1.3　表示法 4\n1.4　与预定义的类和接口的关系 4\n1.5　反馈 5\n1.6　参考文献 5\n第2章　文法 6\n2.1　上下文无关文法 6\n2.2　词法 6\n2.3　句法 6\n2.4　文法表示法 6\n第3章　词法结构 9\n3.1　Unicode 9\n3.2　词法翻译 10\n3.3　Unicode转义字符 10\n3.4　行终止符 11\n3.5　输入元素和符号 12\n3.6　空白字符 12\n3.7　注释 13\n3.8　标识符 14\n3.9　关键字 15\n3.10　字面常量 15\n3.10.1　整数字面常量 15\n3.10.2　浮点数字面常量 19\n3.10.3　布尔字面常量 21\n3.10.4　字符字面常量 21\n3.10.5　字符串字面常量 22\n3.10.6　字符和字符串字面常量的\n转义序列 23\n3.10.7　空字面常量 24\n3.11　分隔符 24\n3.12　操作符 24\n第4章　类型、值和变量 25\n4.1　类型和值的种类 25\n4.2　简单类型和值 25\n4.2.1　整数类型和值 26\n4.2.2　整数操作 26\n4.2.3　浮点数类型、格式和值 27\n4.2.4　浮点数操作 29\n4.2.5　boolean类型和布尔值 31\n4.3　引用类型和值 32\n4.3.1　对象 33\n4.3.2　Object类 35\n4.3.3　String类 35\n4.3.4　当引用类型相同时 35\n4.4　类型变量 36\n4.5　参数化类型 37\n4.5.1　参数化类型的类型引元 38\n4.5.2　参数化类型的成员和构造器 40\n4.6　类型擦除 40\n4.7　可具化类型 41\n4.8　原生类型 42\n4.9　交集类型 45\n4.10　子类型化 45\n4.10.1　简单类型之间的子类型化 46\n4.10.2　类与接口类型之间的子类型化 46\n4.10.3　数组类型之间的子类型化 47\n4.10.4　最低上边界 47\n4.11　使用类型之处 49\n4.12　变量 52\n4.12.1　简单类型的变量 52\n4.12.2　引用类型的变量 52\n4.12.3　变量的种类 54\n4.12.4　final变量 55\n4.12.5　变量的初始值 56\n4.12.6　类型、类和接口 57\n第5章　类型转换与上下文 59\n5.1　转换的种类 61\n5.1.1　标识转换 61\n5.1.2　拓宽简单类型转换 61\n5.1.3　窄化简单类型转换 62\n5.1.4　拓宽和窄化简单类型转换 64\n5.1.5　拓宽引用类型转换 64\n5.1.6　窄化引用类型转换 64\n5.1.7　装箱转换 65\n5.1.8　拆箱转换 66\n5.1.9　非受检转换 67\n5.1.10　捕获转换 67\n5.1.11　字符串转换 69\n5.1.12　被禁止的转换 69\n5.1.13　值集转换 70\n5.2　赋值上下文 70\n5.3　方法调用上下文 74\n5.4　字符串上下文 75\n5.5　强制类型转换上下文 75\n5.5.1　引用类型强制类型转换 77\n5.5.2　受检强制类型转换和非受检强制类型转换 79\n5.5.3　运行时的受检强制类型转换 80\n5.6　数字上下文 81\n5.6.1　一元数字提升 82\n5.6.2　二元数字提升 83\n第6章　名字 84\n6.1　声明 84\n6.2　名字与标识符 89\n6.3　声明的作用域 91\n6.4　遮蔽和遮掩 93\n6.4.1　遮蔽 94\n6.4.2　遮掩 96\n6.5　确定名字的含义 97\n6.5.1　根据上下文的名字的句法分类 98\n6.5.2　对上下文歧义名字的重分类 100\n6.5.3　包名的含义 101\n6.5.4　PackageOrTypeNames的含义 102\n6.5.5　类型名的含义 102\n6.5.6　表达式名的含义 103\n6.5.7　方法名的含义 105\n6.6　访问控制 106\n6.6.1　确定可访问性 107\n6.6.2　受保护访问权限的细节 110\n6.7　完全限定名和规范名 111\n第7章　包 113\n7.1　包成员 113\n7.2　主机对包的支持 114\n7.3　编译单元 115\n7.4　包声明 116\n7.4.1　具名包 116\n7.4.2　不具名包 116\n7.4.3　包的可观察性 117\n7.5　导入声明 117\n7.5.1　单类型导入声明 118\n7.5.2　按需类型导入声明 119\n7.5.3　单静态导入声明 120\n7.5.4　按需静态导入声明 120\n7.6　顶层类型声明 121\n第8章　类 123\n8.1　类声明 124\n8.1.1　类修饰符 124\n8.1.2　泛化类和类型参数 126\n8.1.3　内部类和包围实例 128\n8.1.4　超类和子类 130\n8.1.5　超接口 132\n8.1.6　类体和成员声明 134\n8.2　类成员 135\n8.3　域声明 138\n8.3.1　域修饰符 141\n8.3.2　域的初始化 145\n8.3.3　在域初始化过程中的向前引用 146\n8.4　方法声明 148\n8.4.1　形参 149\n8.4.2　方法签名 152\n8.4.3　方法修饰符 152\n8.4.4　泛化方法 156\n8.4.5　方法的结果 157\n8.4.6　方法抛出异常 157\n8.4.7　方法体 158\n8.4.8　继承、覆盖和隐藏 159\n8.4.9　重载 166\n8.5　成员类型声明 168\n8.5.1　静态成员类型声明 169\n8.6　实例初始化器 169\n8.7　静态初始化器 169\n8.8　构造器声明 170\n8.8.1　形参 170\n8.8.2　构造器签名 171\n8.8.3　构造器修饰符 171\n8.8.4　泛化构造器 172\n8.8.5　构造器抛出异常 172\n8.8.6　构造器的类型 172\n8.8.7　构造器体 172\n8.8.8　构造器重载 176\n8.8.9　缺省构造器 176\n8.8.10　阻止类的实例化 177\n8.9　枚举类型 177\n8.9.1　枚举常量 178\n8.9.2　枚举体声明 178\n8.9.3　枚举成员 180\n第9章　接口 184\n9.1　接口声明 184\n9.1.1?接口修饰符 185\n9.1.2　泛化接口和类型参数 185\n9.1.3　超接口和子接口 186\n9.1.4　接口体和成员声明 187\n9.2　接口成员 187\n9.3　域（常量）声明 187\n9.3.1　接口中域的初始化 189\n9.4　方法声明 189\n9.4.1　继承和覆盖 190\n9.4.2　重载 193\n9.4.3　接口方法体 193\n9.5　成员类型声明 193\n9.6　注解类型 194\n9.6.1　注解类型元素 195\n9.6.2　注解类型元素的缺省值 197\n9.6.3　可重复的注解类型 198\n9.6.4　预定义的注解类型 200\n9.7　注解 204\n9.7.1　普通注解 205\n9.7.2　标记注解 207\n9.7.3　单元素注解 207\n9.7.4　注解可以出现在何处 208\n9.7.5　同种类型的多重注解 211\n9.8　函数型接口 212\n9.9 　函数类型 214\n第10章　数组 218\n10.1　数组类型 218\n10.2　数组变量 219\n10.3　数组创建 220\n10.4　数组访问 220\n10.5　数组存储异常 220\n10.6　数组初始化器 221\n10.7　数组成员 222\n10.8　数组的Class对象 223\n10.9　字符数组不是String 224\n第11章　异常 225\n11.1　异常的种类和成因 225\n11.1.1　异常的种类 225\n11.1.2　异常的成因 226\n11.1.3　异步异常 226\n11.2　异常的编译时检查 227\n11.2.1　表达式异常分析 228\n11.2.2　语句异常分析 228\n11.2.3　异常检查 229\n11.3　异常的运行时处理 230\n第12章　执行 233\n12.1　Java虚拟机启动 233\n12.1.1　加载Test类 233\n12.1.2　链接Test：校验、准备、（可选的）解析 233\n12.1.3　初始化Test：执行初始化器 234\n12.1.4　调用Test.main 234\n12.2　加载类和接口 235\n12.2.1　加载过程 235\n12.3　链接类和接口 236\n12.3.1　二进制表示的校验 236\n12.3.2　类或接口类型的准备 236\n12.3.3　符号引用的解析 237\n12.4　初始化类和接口 237\n12.4.1　当初始化发生时 238\n12.4.2　详细的初始化过程 239\n12.5　创建新的类实例 241\n12.6　类实例的终结 243\n12.6.1　实现终结 244\n12.6.2　与内存模型的交互 245\n12.7　卸载类和接口 246\n12.8　程序退出 247\n第13章　二进制兼容性 248\n13.1　二进制形式 249\n13.2　二进制兼容性到底是什么 252\n13.3　包的演化 252\n13.4　类的演化 253\n13.4.1　abstract类 253\n13.4.2　final类 253\n13.4.3　public类 253\n13.4.4　超类和超接口 253\n13.4.5　类的类型参数 254\n13.4.6　类体和成员声明 255\n13.4.7　对成员和构造器的访问权限 256\n13.4.8　域声明 257\n13.4.9　final域和static\n常量变量 258\n13.4.10　static域 260\n13.4.11　transient域 260\n13.4.12　方法和构造器声明 260\n13.4.13　方法和构造器的类型参数 261\n13.4.14　方法和构造器的形式参数 261\n13.4.15　方法返回类型 262\n13.4.16　abstract方法 262\n13.4.17　final方法 262\n13.4.18　native方法 263\n13.4.19　static方法 263\n13.4.20　synchronized方法 263\n13.4.21　方法和构造器的抛出物 263\n13.4.22　方法和构造器体 263\n13.4.23　方法和构造器的重载 264\n13.4.24　方法覆盖 264\n13.4.25　静态初始化器 264\n13.4.26　枚举的演化 265\n13.5　接口的演化 265\n13.5.1　public接口 265\n13.5.2　超接口 265\n13.5.3　接口成员 265\n13.5.4　接口的类型参数 266\n13.5.5　域声明 266\n13.5.6　接口方法声明 266\n13.5.7　注解类型的演化 267\n第14章　块和语句 268\n14.1　语句的正常结束和猝然结束 268\n14.2　块 269\n14.3　局部类声明 269\n14.4　局部变量声明语句 270\n14.4.1　局部变量声明符和类型 271\n14.4.2　局部变量声明的执行 271\n14.5　语句 271\n14.6　空语句 272\n14.7　标号语句 273\n14.8　表达式语句 274\n14.9　if语句 274\n14.9.1　if-then语句 274\n14.9.2　if-then-else语句 275\n14.10　assert语句 275\n14.11　switch语句 277\n14.12　while语句 280\n14.12.1　while语句的猝然结束 280\n14.13　do语句 281\n14.13.1　do语句的猝然结束 281\n14.14　for语句 282\n14.14.1　基本for语句 282\n14.14.2　增强for语句 284\n14.15　break语句 285\n14.16　continue语句 287\n14.17　return语句 288\n14.18　throw语句 289\n14.19　synchronized语句 290\n14.20　try语句 291\n14.20.1　try-catch的执行 293\n14.20.2　try-finally和try-catch-finally的执行 294\n14.20.3　带资源的try 296\n14.21　不可达语句 299\n第15章　表达式 303\n15.1　计算、表示和结果 303\n15.2　表达式的形式 303\n15.3　表达式的类型 304\n15.4　FP-严格的表达式 304\n15.5　表达式和运行时检查 305\n15.6　计算的正常和猝然结束 306\n15.7　计算顺序 307\n15.7.1　首先计算左操作数 307\n15.7.2　在操作之前计算操作数 308\n15.7.3　计算遵循括号和优先级 309\n15.7.4　引元列表是自左向右计算的 310\n15.7.5　其他表达式的计算顺序 310\n15.8　基本表达式 311\n15.8.1　词法上的字面常量 312\n15.8.2　类字面常量 312\n15.8.3　this 313\n15.8.4　限定的this 313\n15.8.5　带括号的表达式 314\n15.9　类实例创建表达式 314\n15.9.1　确定要实例化的类 315\n15.9.2　确定包围实例 316\n15.9.3　选择构造器及其引元 317\n15.9.4　类实例创建表达式的运行时计算 319\n15.9.5　匿名类声明 320\n15.10　数组创建和访问表达式 321\n15.10.1　数组创建表达式 321\n15.10.2　数组创建表达式的运行时执行 322\n15.10.3　数组访问表达式 324\n15.10.4　数组访问表达式的运行时计算 324\n15.11　域访问表达式 326\n15.11.1　使用基本表达式访问域 326\n15.11.2　使用super访问超类成员 328\n15.12　方法调用表达式 329\n15.12.1　编译时的步骤1：确定要搜索的类或接口 330\n15.12.2　编译时的步骤2：确定方法签名 332\n15.12.3　编译时的步骤3：选中的方法是否合适 342\n15.12.4　方法调用的运行时计算 343\n15.13　方法引用表达式 350\n15.13.1　方法引用的编译时声明 352\n15.13.2　方法引用的类型 355\n15.13.3　方法引用的运行时计算 356\n15.14　后缀表达式 359\n15.14.1　表达式名字 359\n15.14.2　后缀递增操作符++ 359\n15.14.3　后缀递减操作符-- 359\n15.15　一元操作符 360\n15.15.1　前缀递增操作符++ 361\n15.15.2　前缀递减操作符-- 361\n15.15.3　一元加号操作符+ 362\n15.15.4　一元减号操作符- 362\n15.15.5　按位取反操作符~ 362\n15.15.6　逻辑取反操作符! 362\n15.16　强制类型转换表达式 363\n15.17　乘除操作符 364\n15.17.1　乘法操作符* 364\n15.17.2　除法操作符\/ 365\n15.17.3　取余操作符% 366\n15.18　加减操作符 367\n15.18.1　字符串连接操作符+ 368\n15.18.2　用于数字类型的加减操作符　（+和-） 369\n15.19　移位操作符 371\n15.20　关系操作符 371\n15.20.1　数字比较操作符<、<=、>和>= 372\n15.20.2　类型比较操作符instanceof 372\n15.21　判等操作符 373\n15.21.1　数字判等操作符==和!= 373\n15.21.2　布尔判等操作符==和!= 374\n15.21.3　引用判等操作符==和!= 374\n15.22　位操作符与逻辑操作符 375\n15.22.1　整数位操作符&、^和| 375\n15.22.2　布尔逻辑操作符&、^和| 376\n15.23　条件与操作符&& 376\n15.24　条件或操作符|| 376\n15.25　条件操作符? : 377\n15.25.1　布尔条件表达式 381\n15.25.2　数字型条件表达式 381\n15.25.3　引用条件表达式 382\n15.26　赋值操作符 383\n15.26.1　简单赋值操作符= 383\n15.26.2　复合赋值操作符 387\n15.27　lambda表达式 391\n15.27.1　lambda参数 393\n15.27.2　lambda体 394\n15.27.3　lambda表达式的类型 397\n15.27.4　lambda表达式的运行时计算 398\n15.28　常量表达式 399\n第16章　明确赋值 400\n16.1　明确赋值和表达式 404\n16.1.1　布尔常量表达式 404\n16.1.2　条件与操作符&& 404\n16.1.3　条件或操作符|| 404\n16.1.4　逻辑取反操作符! 405\n16.1.5　条件操作符? : 405\n16.1.6　其他boolean类型的表达式 405\n16.1.7　赋值表达式 406\n16.1.8　操作符++和-- 406\n16.1.9　其他表达式 406\n16.2　明确赋值与语句 407\n16.2.1　空语句 407\n16.2.2　块 407\n16.2.3　局部类声明语句 408\n16.2.4　局部变量声明语句 408\n16.2.5　标号语句 409\n16.2.6　表达式语句 409\n16.2.7　if语句 409\n16.2.8　assert语句 409\n16.2.9　switch语句 410\n16.2.10　while语句 410\n16.2.11　do语句 410\n16.2.12　for语句 411\n16.2.13　break、continue、return和throw语句 412\n16.2.14　synchronized语句 412\n16.2.15　try语句 412\n16.3　明确赋值与参数 413\n16.4　明确赋值与数组初始化器 413\n16.5　明确赋值与枚举常量 413\n16.6　明确赋值与匿名类 414\n16.7　明确赋值与成员类型 414\n16.8　明确赋值与静态初始化器 414\n16.9　明确赋值、构造器和实例初始化器 415\n第17章　线程与锁 416\n17.1　同步 416\n17.2　等待集和通知 417\n17.2.1　等待 417\n17.2.2　通知 418\n17.2.3　中断 418\n17.2.4　等待、通知和中断的交互 418\n17.3　睡眠和让步 419\n17.4　内存模型 419\n17.4.1　共享变量 421\n17.4.2　动作 421\n17.4.3　程序和程序顺序 422\n17.4.4　同步顺序 422\n17.4.5　“之前发生”顺序 423\n17.4.6　执行 425\n17.4.7　良构执行 425\n17.4.8　执行和因果关系要求 426\n17.4.9　可观察的行为和不终止的执行 428\n17.5　final域的语义 429\n17.5.1　final域的语义 430\n17.5.2　在构造阶段读final域 430\n17.5.3　对final域的后续修改 431\n17.5.4　写受保护的域 432\n17.6　字撕裂 432\n17.7　double和long的非原子化处理 433\n第18章　类型推断 434\n18.1　概念与表示法 435\n18.1.1　推断变量 435\n18.1.2　约束公式 435\n18.1.3　边界 435\n18.2　归纳 436\n18.2.1　表达式可兼容性约束 437\n18.2.2　类型可兼容性约束 440\n18.2.3　子类型化约束 440\n18.2.4　类型相等性约束 442\n18.2.5　受检异常约束 442\n18.3　合并 443\n18.3.1　互补的边界对 444\n18.3.2　涉及捕获转换的边界 444\n18.4　解析 445\n18.5　推断的使用 446\n18.5.1　调用可应用性的推断 447\n18.5.2　调用类型的推断 448\n18.5.3　函数型接口的参数化版本推断 451\n18.5.4　更具体方法的推断 452\n第19章　语法 454\n索引 470","pages":"513","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29404593.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29404593.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29404593.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26740358\/","id":"26740358","publisher":"机械工业出版社","isbn10":"7111523997","isbn13":"9787111523994","title":"Java语言规范","url":"https:\/\/api.douban.com\/v2\/book\/26740358","alt_title":"The Java Language Specification, Java SE 8 Edition","author_intro":"詹姆斯·高斯林\n（James Gosling）\n软件专家，Java编程语言的共同创始人之一，曾先后为Sun公司、Oracle公司和Google公司工作，是计算机行业最著名的程序员之一。他于1977年获得了加拿大卡尔加里大学计算机科学学士学位，1983年获得了美国卡内基梅隆大学计算机科学博士学位。2013年，Gosling博士被选为ACM Fellow；2015年，获得IEEE 冯诺伊曼奖。","summary":"Oracle官方发布，Java编程语言及规范创建人撰写，国内资深Java技术专家翻译，Amazon畅销书！\n基于最新Java SE 8，完整且准确地阐述Java编程语言及其规范，是深度了解Java语言及其技术细节的权威参考书。\n本书由Java技术的发明者编写，是Java编程语言的权威性技术指南。如果你想知道Java语言构造的精确含义以及各种技术细节，本书是最好的资源。\n本书全面、准确而详细地讨论了Java编程语言，是Java语言最新版本的规范。全书从Java最基础的文法、类型、变量到高级特性lambda表达式、线程与锁等进行了详尽阐述。该规范针对每一项语言特性都给出了代表性的示例程序，以帮助读者更容易地理解和掌握这些特性。通过阅读本规范，可以全面系统地了解Java语言的各项特性，为充分利用这些特性来编写出更加高效简洁的Java程序提供帮助。读者还可以从Oracle的Java官方网站上看到本书的最新进展和修订，以了解Java语言的最新发展动向。\n本书可作为高等院校Java语言程序设计等相关专业的学习手册，也可作为Java语言爱好者的参考资料。\n本书主要内容\n全面反映Java语言的整个发展历程。\n详细讲述Java SE 8的语法、语义和结构。\n彻底覆盖Java SE 8的主要改进，包括lambda表达式、方法引用、缺省方法等。\n充分解决如何提升JAVA语言中最流行的特性之一——注解的效用。\n包含宝贵的见解，区分JAVA的正式规则和真实的编译器行为。\n对每一个使用Java语言进行企业级开发的程序员都是不可或缺的资源。","series":{"id":"1163","title":"计算机科学丛书"},"price":"CNY 129.00"},{"rating":{"max":10,"numRaters":3,"average":"0.0","min":0},"subtitle":"Updated for Java SE 8","author":["Budi Kurniawan"],"pubdate":"2015-1","tags":[{"count":2,"name":"Java\/C#","title":"Java\/C#"},{"count":1,"name":"计算机科学","title":"计算机科学"},{"count":1,"name":"编程","title":"编程"},{"count":1,"name":"入门","title":"入门"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s28364638.jpg","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s28364638.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s28364638.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s28364638.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26689270\/","id":"26689270","publisher":"Brainy Software","isbn10":"0992133041","isbn13":"9780992133047","title":"Java: A Beginner’s Tutorial, 4th Edition","url":"https:\/\/api.douban.com\/v2\/book\/26689270","alt_title":"","author_intro":"","summary":"This book covers the most important Java programming topics that you need to master to be able to learn other technologies yourself. By fully understanding all the chapters and doing the exercises you’ll be able to perform an intermediate Java programmer’s daily tasks quite well.","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"Aktuell zu Java 8 und mit dem WindowBuilder - Ausgabe 2016","author":["Hans-Peter Habelitz"],"pubdate":"2016-2-29","tags":[],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s28652740.jpg","binding":"Taschenbuch","translator":[],"catalog":"","pages":"537","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s28652740.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s28652740.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s28652740.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26777963\/","id":"26777963","publisher":"Rheinwerk Computing","isbn10":"3836241307","isbn13":"9783836241304","title":"Programmieren lernen mit Java","url":"https:\/\/api.douban.com\/v2\/book\/26777963","alt_title":"","author_intro":"","summary":"","price":"EUR 19.90"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"Using Java& Borland Jbld8 Pk","author":[],"pubdate":"","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","binding":"","translator":[],"catalog":"","pages":"0","images":{"small":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","large":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","medium":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif"},"alt":"https:\/\/book.douban.com\/subject\/11923491\/","id":"11923491","publisher":"Addison Wesley Publishing Company","isbn10":"0321213041","isbn13":"9780321213044","title":"Intro Progrmmg","url":"https:\/\/api.douban.com\/v2\/book\/11923491","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"Find out how to craft effective, business-oriented Java EE 8 applications that target customer’s demands in the age of Cloud platforms and container technology.","author":["Sebastian Daschner"],"pubdate":"2017-10-9","tags":[],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29695885.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"422","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s29695885.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s29695885.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29695885.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30148678\/","id":"30148678","publisher":"Packt Publishing","isbn10":"1788393856","isbn13":"9781788393850","title":"Architecting Modern Java EE Applications: Designing lightweight, business-oriented enterprise applications in the age of cloud, containers, and Java EE 8","url":"https:\/\/api.douban.com\/v2\/book\/30148678","alt_title":"","author_intro":"About the Author\nSebastian DaschnerSebastian Daschner is a Java freelancer working as a consultant and trainer and is enthusiastic about programming and Java (EE). He participates in the JCP, helping to form future Java EE standards, serving in the JSR 370 and 374 Expert Groups, and collaborating on various open source projects. For his contributions to the Java community and ecosystem, he was recognized with the titles Java Champion and Oracle Developer Champion. Sebastian is a regular speaker at international IT conferences, such as JavaLand, JavaOne, and Jfokus. He won the JavaOne Rockstar award at JavaOne 2016. Together with Java community manager, Steve Chin, he has traveled to dozens of conferences and Java User Groups on motorbike. Steve and Sebastian have launched JOnsen, a Java unconference held at a hot spring in the countryside of Japan.\nRead more","summary":"About This Book\nUnderstand the principles of modern Java EE and how to realize effective architecturesGain knowledge of how to design enterprise software in the age of automation, Continuous Delivery and Cloud platformsLearn about the reasoning and motivations behind state-of-the-art enterprise Java technology, that focuses on business\nWho This Book Is For\nThis book is for experienced Java EE developers who are aspiring to become the architects of enterprise-grade applications, or software architects who would like to leverage Java EE to create effective blueprints of applications.\nWhat You Will Learn\nWhat enterprise software engineers should focus onImplement applications, packages, and components in a modern wayDesign and structure application architecturesDiscover how to realize technical and cross-cutting aspectsGet to grips with containers and container orchestration technologyRealize zero-dependency, 12-factor, and Cloud-native applicationsImplement automated, fast, reliable, and maintainable software testsDiscover distributed system architectures and their requirements\nIn Detail\nJava EE 8 brings with it a load of features, mainly targeting newer architectures such as microservices, modernized security APIs, and cloud deployments. This book will teach you to design and develop modern, business-oriented applications using Java EE 8. It shows how to structure systems and applications, and how design patterns and Domain Driven Design aspects are realized in the age of Java EE 8. You will learn about the concepts and principles behind Java EE applications, and how to effect communication, persistence, technical and cross-cutting concerns, and asynchronous behavior.\nThis book covers Continuous Delivery, DevOps, infrastructure-as-code, containers, container orchestration technologies, such as Docker and Kubernetes, and why and especially how Java EE fits into this world. It also covers the requirements behind containerized, zero-dependency applications and how modern Java EE application servers support these approaches. You will also learn about automated, fast, and reliable software tests, in different test levels, scopes, and test technologies. This book covers the prerequisites and challenges of distributed systems that lead to microservice, shared-nothing architectures. The challenges and solutions of consistency versus scalability will further lead us to event sourcing, event-driven architectures, and the CQRS principle. This book also includes the nuts and bolts of application performance as well as how to realize resilience, logging, monitoring and tracing in a modern enterprise world. Last but not least the demands of securing enterprise systems are covered.\nBy the end, you will understand the ins and outs of Java EE so that you can make critical design decisions that not only live up to, but also surpass your clients' expectations.\nStyle and approach\nThis book focuses on solving business problems and meeting customer demands in the enterprise world. It covers how to create enterprise applications with reasonable technology choices, free of cargo-cult and over-engineering. The aspects shown in this book not only demonstrate how to realize a certain solution, but also explain its motivations and reasoning.","price":"USD 49.99"},{"rating":{"max":10,"numRaters":1,"average":"0.0","min":0},"subtitle":"Java SE 8版","author":["Raymond Gallardo","Scott Hommel","Sowmya Kannan","Joni Gordon"],"pubdate":"2016-4-1","tags":[{"count":1,"name":"编程语言","title":"编程语言"}],"origin_title":"The Java Tutorial: A Short Course on the Basics, Sixth Edition","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29802401.jpg","binding":"平装","translator":[],"catalog":"第1章快速入门\n关于Java技术\nJava程序语言\nJava平台\nJava技术的功能\nJava技术的优势\n“Hello World！”示例程序\n用NetBeans IDE开发“Hello World！”\n在Microsoft Windows中开发“Hello World！”\n在Solaris和Linux中开发“Hello World！”\n“Hello World！”示例程序剖析\n源码注释\nHelloWorldApp类定义\nmain方法\n常见问题（及其解决方案）\n编译器问题\n运行时问题\n问题和练习：快速入门\n问题\n练习\n答案\n第2章面向对象的编程概念\n对象\n类\n继承\n接口\n包\n问题和练习：面向对象的编程概念\n问题\n练习\n答案\n第3章语言基础\n变量\n命名\n基本数据类型\n数组\n小结\n问题和练习：变量\n运算符\n赋值运算符、算术运算符和一元运算符\n等式运算符、关系运算符和条件运算符\n位运算符和移位运算符\n小结\n问题和练习：运算符\n表达式、语句和块\n表达式\n语句\n块\n问题和练习：表达式、语句和块\n控制流语句\nif—then语句和if—then—else语句\nswitch语句\nwhile语句和do—while语句\nfor语句\n分支语句\n小结\n问题和练习：控制流语句\n第4章类和对象\n类\n声明类\n声明成员变量\n定义方法\n构建构造器\n将消息传给方法或构造器\n对象\n创建对象\n使用对象\n类的更多细节\n方法的返回值\n使用this关键字\n控制对类成员的访问\n类成员\n初始化字段\n小结\n问题和练习：类\n问题和练习：对象\n嵌套类\n为什么使用嵌套类\n静态嵌套类\n内部类\n隐藏\n序列化\n内部类示例\n局部类和匿名类\n修饰符\n局部类\n匿名类\nLambda表达式\n何时使用嵌套类、局部类、匿名类和\nLambda表达式\n问题和练习：嵌套类\n枚举类型\n问题和练习：枚举类型\n第5章注解\n注解的基本概念\n注解格式\n哪些地方使用注解\n声明注解类型\n预定义注解类型\nJava语言使用的注解类型\n应用于其他注解的注解类型\n类型注解和可插拔类型系统\n重复注解\n步骤1：声明可重复的注解类型\n步骤2：声明包含的注解类型\n检索注解\n设计注意事项\n问题和练习：注解\n问题\n练习\n答案\n第6章接口与继承\n接口\nJava语言的接口\n将接口用作API\n定义接口\n实现接口\n将接口用作类型\n演化接口\n默认方法\n小结\n问题和练习：接口\n继承\nJava平台中类的层次结构\n继承示例\n子类能做什么\n超类的私有成员\n转换对象\n状态、实现和类型的多继承\n覆盖和屏蔽方法\n多态性\n屏蔽字段\n使用super关键字\n将对象用作超类\n编写final类和方法\n抽象方法和类\n小结\n问题和练习：继承\n第7章泛型\n为什么用泛型\n泛型类型\n一个简单的Box类\nBox类的泛型版本\n类型参数命名约定\n泛型类型的调用和实例化\n钻石运算符\n多个类型参数\n参数化类型\n原生类型\n泛型方法\n受限类型参数\n多重限制\n泛型方法和受限类型参数\n泛型、继承和子类型\n泛型类和子类型\n类型推导\n类型推导与泛型方法\n类型推导与泛型类的实例化\n类型推导与泛型类和非泛型类的泛型\n构造器\n目标类型\n通配符\n上界通配符\n界通配符\n下界通配符\n通配符和予类型\n通配符匹配和辅助方法\n通配符使用指南\n类型擦除\n泛型类型的擦除\n泛型方法的擦除\n类型擦除效果和桥方法\n不可具体化类型和可变长参数方法\n泛型的局限性\n不能用基本数据类型实例化泛型类型\n不能创建类型参数实例\n不能声明类型为“类型参数”的静态字段\n对参数化类型不能用类型转换或运算符\n不能创建参数化类型数组\n不能创建、捕获或抛出参数化类型的对象\n不能重载方法，若方法每次重载的形式\n参数类型都被擦为相同的原生类型\n问题和练习：泛型\n答案\n第8章程序包\n创建和使用程序包\n创建程序包\n命名程序包\n使用程序包成员\n管理源文件和类文件\n小结\n问题和练习：创建和使用程序包\n问题\n练习\n答案\n第9章，数和字符串\n数\nNumber类\n格式化数字打印输出\n其他数学运算方法\n自动装箱和拆箱\n小结\n问题和练习：数\n字符\n转义字符\n字符串\n创建字符串\n字符串长度\n字符串连接\n创建格式字符串\n数字和字符串之间的转换\n操作字符串中的字符\n比较字符串和字符串的子串\nStringBuilder类\n小结\n问题和练习：字符和字符串\n第10章异常\n什么是异常\n捕获或指明规定\n三类异常\n绕过捕获或指明\n捕获和处理异常\ntry块\ncatch块\nfinally块\ntry—with—resources语句\n汇总\n指明一个方法抛出的异常\n如何抛出异常\nthrow语句\nThrowable类及其子类\nError类\nException类\n链式异常\n创建异常类\n未检查异常：争议\n异常的优点\n优点1：从正规代码中分离出错误处理代码\n优点2：根据调用栈上传错误\n优点3：分组和区分错误类型\n小结\n问题和练习\n问题\n练习\n答案\n第11章基本I／O和NIO.2\nI／O流\n字节流\n字符流\n缓冲流\n扫描和格式化\n命令行I／o\n数据流\n对象流\n文件I／O（以NIO.2为特征）\n什么是路径（以及其他文件系统情况）\nPath类\n文件操作\n检查文件或目录\n删除文件或目录\n复制文件或目录\n移动文件或目录\n管理元数据（文件和文件存储属性）\n读取、写入和创建文件\n随机存取文件\n创建和读取目录\n符号链接或其他方式的链接\n遍历文件树\n查找文件\n监视目录的变化\n其他有用的方法\n遗留文件的I／O代码\n小结\n问题和练习：基本I／O\n问题\n练习\n答案\n……\n第12章集合\n第13章并发\n第14章正则表达式\n第15章平台环境\n第16章在JAR文件中打包程序\n第17章Java WebStan\n第18章印plet\n第19章Java富互联网应用系统\n第20章深入理解部署\n第21章日期／时间API\n第22章JavaFX简介\n附录Java程序语言认证复习大纲","pages":"805","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29802401.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29802401.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29802401.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30257541\/","id":"30257541","publisher":"机械工业出版社","isbn10":"7111534336","isbn13":"9787111534334","title":"Java语言导学（英文版第6版）","url":"https:\/\/api.douban.com\/v2\/book\/30257541","alt_title":"The Java Tutorial: A Short Course on the Basics, Sixth Edition","author_intro":"雷蒙德·盖拉多（Raymond Gallardo）Oracle公司高级技术文档工程师，曾担任过高校教师和IBM技术作家。他拥有多伦多大学计算机和英语双学士学位，纽约城市大学创意写作硕士学位。\n斯科特·霍梅尔（Scott Hommel） Oracle公司高级技术文档工程师，负责Java SE文档工作。过去15年，他编写了大量Java SE和相关技术的教程、技术文章和核心文档。\n索娅，坎南（Sowmya Kannan）在Oracle公司Java SE技术文档编写团队承担多项工作，包括规划、编写、与开发团队沟通等。她有超过15年从事设计、开发和文档化Java平台。基于Java的中间件、Web应用程序的工作经历。\n琼尼·戈登（Joni Gordon）Oracle公司首席技术文档工程师。她为Java SE和JavaF×的技术文档编写做出了杰出贡献。她有超过15年技术文档工程师的经历，技术背景是企业应用软件开发。","summary":"本书是Oracle公司指定的Java语言入门教程，由Java语言和平台开发团队的多位成员亲自撰写，并由众多世界级Java专家精心评审，确保了准确性和及时性，多年来引领了一批又一批程序员步入Java殿堂。","price":"129.00元"},{"rating":{"max":10,"numRaters":32,"average":"7.1","min":0},"subtitle":"","author":["【美】Cay S. Horstmann（凯.S.霍斯特曼） 著"],"pubdate":"2016-1","tags":[{"count":37,"name":"Java","title":"Java"},{"count":13,"name":"编程","title":"编程"},{"count":13,"name":"java","title":"java"},{"count":7,"name":"计算机","title":"计算机"},{"count":6,"name":"编程语言","title":"编程语言"},{"count":6,"name":"Java8","title":"Java8"},{"count":3,"name":"2016简单，又不简单","title":"2016简单，又不简单"},{"count":2,"name":"DEV","title":"DEV"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s28385172.jpg","binding":"平装","translator":["杨谦 等 译"],"catalog":"第1章　基本的编程结构............................................................................................. 1\n1.1　第一个程序 ............................................................................................... 2\n1.1.1　“Hello，World”程序解析 ............................................................................. 2\n1.1.2　编译与运行Java程序 ......................................................................................... 3\n1.1.3　方法调用 ............................................................................................................ 5\n1.2　基本类型 ................................................................................................. 7\n1.2.1　整型 .................................................................................................................... 7\n1.2.2　浮点类型 ............................................................................................................ 8\n1.2.3　char型 ................................................................................................................. 9\n1.2.4　布尔型 .............................................................................................................. 10\n1.3　变量 .......................................................................................... 10\n1.3.1　变量的声明 ...................................................................................................... 10\n1.3.2　名称 .................................................................................................................. 10\n1.3.3　初始化 ...............................................................................................................11\n1.3.4　常量 ...................................................................................................................11\n1.4　算术操作 .................................................................................................... 13\n1.4.1　赋值 .................................................................................................................. 13\n1.4.2　基本运算 .......................................................................................................... 14\n1.4.3　数学方法 .......................................................................................................... 15\n1.4.4　数字类型转换 .................................................................................................. 16\n1.4.5　关系和逻辑操作符 .......................................................................................... 17\n1.4.6　大数 .................................................................................................................. 19\n1.5　字符串 ................................................................................................. 19\n1.5.1　字符串连接 ...................................................................................................... 20\n1.5.2　子字符串 .......................................................................................................... 21\n1.5.3　字符串比较 ...................................................................................................... 21\n1.5.4　数字与字符串转换 .......................................................................................... 23\n1.5.5　String类API ...................................................................................................... 24\n1.5.6　编码点（code point）和编码单元（code unit） ........................................... 25\n1.6　输入与输出 .......................................................................................... 26\n1.6.1　读取输入 .......................................................................................................... 27\n1.6.2　格式化输出 ...................................................................................................... 28\n1.7　控制流 ........................................................................................................... 30\n1.7.1　分支 .................................................................................................................. 30\n1.7.2　循环 .................................................................................................................. 32\n1.7.3　跳出循环与继续循环 ...................................................................................... 34\n1.7.4　局部变量作用域 .............................................................................................. 36\n1.8　数组和数组列表 ................................................................................. 38\n1.8.1　使用数组 .......................................................................................................... 38\n1.8.2　构造数组 .......................................................................................................... 39\n1.8.3　数组列表 .......................................................................................................... 39\n1.8.4　基本类型包装类 .............................................................................................. 41\n1.8.5　增强的for循环 ................................................................................................. 41\n1.8.6　数组与数组列表的复制 .................................................................................. 42\n1.8.7　数组算法 .......................................................................................................... 43\n1.8.8　命令行参数 ...................................................................................................... 44\n1.8.9　多维数组 .......................................................................................................... 45\n1.9　功能分解 ............................................................................................. 48\n1.9.1　静态方法的声明与调用 .................................................................................. 48\n1.9.2　数组参数与返回值 .......................................................................................... 48\n1.9.3　可变参数 .......................................................................................................... 49\n练习 ..................................................................................................................... 50\n第2章　面向对象编程............................................................................................... 53\n2.1　使用对象 .............................................................................................. 54\n2.1.1　Accessor（访问器）和Mutator（更改器）方法 ........................................... 56\n2.1.2　对象引用 .......................................................................................................... 56\n2.2　实现类 ............................................................................................... 58\n2.2.1　实例变量 .......................................................................................................... 58\n2.2.2　方法头 .............................................................................................................. 59\n2.2.3　方法体 .............................................................................................................. 59\n2.2.4　实例方法调用 .................................................................................................. 60\n2.2.5　this引用 ............................................................................................................ 61\n2.2.6　值调用 .............................................................................................................. 62\n2.3　构造对象 .......................................................................................... 63\n2.3.1　实现构造函数 .................................................................................................. 64\n2.3.2　重载 .................................................................................................................. 64\n2.3.3　调用另一个构造函数 ...................................................................................... 65\n2.3.4　默认初始化 ...................................................................................................... 66\n2.3.5　实例变量初始化 .............................................................................................. 66\n2.3.6　final实例变量 ................................................................................................... 67\n2.3.7　无参构造函数 .................................................................................................. 68\n2.4　静态变量和方法 ...................................................................... 69\n2.4.1　静态变量 .......................................................................................................... 69\n2.4.2　静态常量 .......................................................................................................... 70\n2.4.3　静态初始块 ...................................................................................................... 71\n2.4.4　静态方法 .......................................................................................................... 71\n2.4.5　工厂方法 .......................................................................................................... 73\n2.5　包 ........................................................................................................ 73\n2.5.1　包的声明 .......................................................................................................... 74\n2.5.2　类路径 .............................................................................................................. 75\n2.5.3　包作用域 .......................................................................................................... 77\n2.5.4　导入包 .............................................................................................................. 78\n2.5.5　静态导入 .......................................................................................................... 79\n2.6　嵌套类 .............................................................................................. 80\n2.6.1　静态嵌套类 ...................................................................................................... 80\n2.6.2　内部类 .............................................................................................................. 82\n2.6.3　内部类的特殊语法 .......................................................................................... 85\n2.7　文档注释 ......................................................................................... 86\n2.7.1　插入注释 .......................................................................................................... 86\n2.7.2　类注释 .............................................................................................................. 87\n2.7.3　方法注释 .......................................................................................................... 88\n2.7.4　变量注释 .......................................................................................................... 88\n2.7.5　通用注释 .......................................................................................................... 89\n2.7.6　链接 .................................................................................................................. 89\n2.7.7　包和概述注释 .................................................................................................. 90\n2.7.8　注释的提取 ...................................................................................................... 90\n练习 ................................................................................................................. 91\n第3章　接口和lambda表达式................................................................................... 95\n3.1　接口 ....................................................................................................... 96\n3.1.1　声明接口 .......................................................................................................... 96\n3.1.2　实现接口 .......................................................................................................... 97\n3.1.3　转换为接口类型 .............................................................................................. 99\n3.1.4　强制类型转换（cast）和instanceof操作符 ................................................... 99\n3.1.5　继承接口 ........................................................................................................ 100\n3.1.6　实现多个接口 ................................................................................................ 101\n3.1.7　常量 ................................................................................................................ 101\n3.2　静态方法和默认方法 ....................................................................... 101\n3.2.1　静态方法 ........................................................................................................ 102\n3.2.2　默认方法 ........................................................................................................ 102\n3.2.3　解决默认方法冲突 ........................................................................................ 103\n3.3　接口示例 ........................................................................................ 105\n3.3.1　Comparable接口 ............................................................................................. 105\n3.3.2　Comparator接口 ............................................................................................. 107\n3.3.3　Runable接口 ................................................................................................... 108\n3.3.4　UI（User Interface）回调 ............................................................................. 109\n3.4　lambda表达式 .........................................................................................110\n3.4.1　lambda表达式语法 .........................................................................................110\n3.4.2　函数式接口 .....................................................................................................111\n3.5　方法引用和构造函数引用 .........................................................112\n3.5.1　方法引用 .........................................................................................................113\n3.5.2　构造函数引用 ......................................................................114\n3.6　使用lambda表达式 ...............................................................................115\n3.6.1　实现延迟执行 .................................................................................................115\n3.6.2　选择函数式接口 .............................................................................................116\n3.6.3　实现自己的函数式接口 .................................................................................118\n3.7　lambda表达式和变量作用域 .....................................................119\n3.7.1　lambda表达式的作用域 .................................................................................119\n3.7.2　访问来自闭合作用域的变量 ........................................................................ 120\n3.8　高阶函数 .......................................................................................... 123\n3.8.1　返回函数的方法 ............................................................................................ 123\n3.8.2　修改函数的方法 ............................................................................................ 123\n3.8.3　Comparator方法 ............................................................................................. 124\n3.9　局部内部类 ....................................................................... 125\n3.9.1　局部类 ............................................................................................................ 125\n3.9.2　匿名类 ............................................................................................................ 126\n练习 .................................................................................................................................... 127\n第4章　继承与反射................................................................................................ 131\n4.1　继承一个类 ......................................................................................... 132\n4.1.1　父类与子类 .................................................................................................... 132\n4.1.2　定义和继承子类方法 .................................................................................... 132\n4.1.3　方法覆盖 ........................................................................................................ 133\n4.1.4　子类的构造 .................................................................................................... 134\n4.1.5　父类赋值 ........................................................................................................ 135\n4.1.6　转换 ................................................................................................................ 136\n4.1.7　final方法和类 ................................................................................................. 136\n4.1.8　抽象方法和类 ................................................................................................ 137\n4.1.9　受保护访问 .................................................................................................... 138\n4.1.10　匿名子类 ...................................................................................................... 139\n4.1.11　继承和默认方法 .......................................................................................... 140\n4.1.12　带super的方法表达式 ................................................................................. 141\n4.2　Object：终极父类...................................................................................................... 141\n4.2.1　toString方法 ................................................................................................... 142\n4.2.2　equals方法 ...................................................................................................... 144\n4.2.3　hashCode方法 ................................................................................................ 147\n4.2.4　克隆对象 ........................................................................................................ 148\n4.3　枚举 ...................................................................................................... 151\n4.3.1　枚举方法 ........................................................................................................ 152\n4.3.2　构造函数、方法和域 .................................................................................... 153\n4.3.3　实例的实现体 ................................................................................................ 153\n4.3.4　静态成员 ........................................................................................................ 154\n4.3.5　switch枚举对象 .............................................................................................. 155\n4.4　运行时类型信息和资源 ........................................................................... 156\n4.4.1　Class类 ........................................................................................................... 156\n4.4.2　资源加载 ........................................................................................................ 160\n4.4.3　类加载器 ........................................................................................................ 160\n4.4.4　上下文类加载器 ............................................................................................ 162\n4.4.5　服务加载器 .................................................................................................... 164\n4.5　反射 .............................................................................................. 165\n4.5.1　枚举类成员 .................................................................................................... 165\n4.5.2　对象检查 ........................................................................................................ 167\n4.5.3　方法调用 ........................................................................................................ 167\n4.5.4　对象构造 ........................................................................................................ 168\n4.5.5　JavaBeans ....................................................................................................... 169\n4.5.6　使用数组 ........................................................................................................ 170\n4.5.7　代理 ................................................................................................................ 172\n练习 .................................................................................................................................... 174\n第5章　异常、断言和日志处理.............................................................................. 177\n5.1　异常处理 ............................................................................................. 178\n5.1.1　异常抛出 ........................................................................................................ 178\n5.1.2　异常继承层次 ................................................................................................ 179\n5.1.3　已检查异常的声明 ........................................................................................ 181\n5.1.4　异常捕获 ........................................................................................................ 182\n5.1.5　try-with-resources语句 ................................................................................... 183\n5.1.6　finally子句 ...................................................................................................... 185\n5.1.7　异常重抛和链接 ............................................................................................ 186\n5.1.8　堆栈踪迹 ........................................................................................................ 188\n5.1.9　Objects.requireNonNull方法 .......................................................................... 189\n5.2　断言 ........................................................................................................ 189\n5.2.1　使用断言 ........................................................................................................ 190\n5.2.2　启用和禁用断言 ............................................................................................ 191\n5.3　记录日志 .................................................................................... 191\n5.3.1　采用Logger ..................................................................................................... 192\n5.3.2　日志记录器 .................................................................................................... 192\n5.3.3　日志级别 ........................................................................................................ 192\n5.3.4　其他日志记录方法 ........................................................................................ 193\n5.3.5　日志记录的配置项 ........................................................................................ 195\n5.3.6　日志处理器 .................................................................................................... 196\n5.3.7　过滤器和格式化器 ........................................................................................ 199\n练习 ......................................................................................................... 199\n第6章　泛型编程.................................................................................................... 203\n6.1　泛型类 ...................................................................................................... 204\n6.2　泛型方法 ................................................................................................. 205\n6.3　类型限定 .................................................................................................................. 206\n6.4　类型变异和通配符 ................................................................................................. 207\n6.4.1　子类型通配符 ................................................................................................ 208\n6.4.2　父类型通配符 ................................................................................................ 209\n6.4.3　带类型变量的通配符 .................................................................................... 210\n6.4.4　无限定通配符 ................................................................................................ 212\n6.4.5　通配符捕获 .................................................................................................... 212\n6.5　Java虚拟机中的泛型 ............................................................................................ 213\n6.5.1　类型擦除 ........................................................................................................ 213\n6.5.2　转换插入 ........................................................................................................ 214\n6.5.3　桥方法 ............................................................................................................ 215\n6.6　泛型约束 .............................................................................................................. 216\n6.6.1　无基本类型参数 ............................................................................................ 217\n6.6.2　所有类型在运行时都是原始的 .................................................................... 217\n6.6.3　不能实例化类型变量 .................................................................................... 218\n6.6.4　不能构造参数化类型的数组 ........................................................................ 220\n6.6.5　静态上下文中的类类型变量不是有效的 .................................................... 221\n6.6.6　类型擦除后的方法可能不冲突 .................................................................... 222\n6.6.7　异常与泛型 .................................................................................................... 223\n6.7　反射与泛型 .................................................................................................. 224\n6.7.1　Class<T>类 .................................................................................................... 224\n6.7.2　虚拟机中的泛型类型信息 ............................................................................ 225\n练习 .................................................................................................................................... 227\n第7章　集合........................................................................................................... 233\n7.1　集合类框架概要 ........................................................................................ 234\n7.2　迭代器 ............................................................................................... 238\n7.3　set ............................................................................................................................... 240\n7.4　map .......................................................................................................................... 241\n7.5　其他集合 ......................................................................................................... 245\n7.5.1　Properties ........................................................................................................ 245\n7.5.2　位组 ................................................................................................................ 247\n7.5.3　枚举set和枚举map ......................................................................................... 248\n7.5.4　栈、队列、双端队列、优先级队列 ............................................................ 249\n7.5.5　弱哈希映射表 ................................................................................................ 250\n7.6　视图 ......................................................................................................................... 251\n7.6.1　范围（range） ............................................................................................... 251\n7.6.2　空视图和单例视图 ........................................................................................ 252\n7.6.3　不可修改的视图 ............................................................................................ 252\n练习 ................................................................................................................................. 253\n第8章　Stream....................................................................................................... 257\n8.1　从迭代到Stream操作 .............................................................................................. 258\n8.2　创建Stream .............................................................................................................. 259\n8.3　filter、map和flatMap方法 ...................................................................................... 261\n8.4　提取子流和组合流 ......................................................................................... 262\n8.5　其他流转换 ................................................................................................... 263\n8.6　简单归约 .................................................................................................... 264\n8.7　Optional类型 ................................................................................................. 265\n8.7.1　如何使用Optional类型值 .............................................................................. 265\n8.7.2　如何不使用Optional类型值 .......................................................................... 266\n8.7.3　创建Optional类型值 ...................................................................................... 267\n8.7.4　使用flatMap来组合可选值函数 .................................................................... 267\n8.8　收集结果 ................................................................................................... 268\n8.9　将结果收集到map中 ................................................................................... 270\n8.10　分组和分片 ........................................................................................... 271\n8.11　下游收集器 .............................................................................................. 272\n8.12　归约操作 ............................................................................................................... 274\n8.13　基本类型流 ........................................................................................................... 276\n8.14　并行流 ................................................................................................................... 278\n练习 .................................................................................................................................. 280\n第9章　输入与输出处理......................................................................................... 285\n9.1　输入\/输出流：Reader和Writer ................................................................................. 286\n9.1.1　获取流对象 .................................................................................................... 286\n9.1.2　读取字节 ........................................................................................................ 287\n9.1.3　写字节 ............................................................................................................ 288\n9.1.4　字符集编码 .................................................................................................... 288\n9.1.5　文本输入 ........................................................................................................ 291\n9.1.6　文本输出 ........................................................................................................ 292\n9.1.7　读写二进制数据 ............................................................................................ 294\n9.1.8　随机存取文件 ................................................................................................ 295\n9.1.9　内存映射文件 ................................................................................................ 295\n9.1.10　文件锁 .......................................................................................................... 296\n9.2　路径、文件和目录 ............................................................................................... 297\n9.2.1　路径 ................................................................................................................ 297\n9.2.2　创建文件和目录 ............................................................................................ 299\n9.2.3　复制、移动和删除文件 ................................................................................ 300\n9.2.4　访问目录内容 ................................................................................................ 301\n9.2.5　ZIP文件系统 .................................................................................................. 304\n9.3　URL连接 ................................................................................................................ 305\n9.4　正则表达式 ............................................................................................................ 307\n9.4.1　正则表达式语法 ............................................................................................ 307\n9.4.2　匹配一个或多个 .............................................................................................311\n9.4.3　分组 ................................................................................................................ 312\n9.4.4　消除或替换匹配结果 .................................................................................... 313\n9.4.5　标记 ................................................................................................................ 314\n9.5　序列化 ..................................................................................................... 315\n9.5.1　Serializable接口 ............................................................................................. 315\n9.5.2　瞬态实例变量 ................................................................................................ 317\n9.5.3　readObject和writeObject方法 ........................................................................ 317\n9.5.4　readResolve和writeReplace方法 ................................................................... 319\n9.5.5　版本化 ............................................................................................................ 320\n练习 ..................................................................................................................... 321\n第10章　并发编程.................................................................................................. 325\n10.1　并发任务 ................................................................................................. 326\n10.1.1　运行任务 .................................................................................................... 326\n10.1.2　Future和Executor服务 ............................................................................... 328\n10.2　线程安全 ................................................................................................. 331\n10.2.1　可见性 ........................................................................................................ 331\n10.2.2　竞争条件 .................................................................................................... 333\n10.2.3　安全并发的策略 ........................................................................................ 336\n10.2.4　不可变类 .................................................................................................... 336\n10.3　并行算法 ............................................................................................ 337\n10.3.1　并行流 ........................................................................................................ 338\n10.3.2　并行数组操作 ............................................................................................ 338\n10.4　线程安全的数据结构 .............................................................................. 339\n10.4.1　ConcurrentHashMap .................................................................................. 340\n10.4.2　阻塞队列 .................................................................................................... 341\n10.4.3　其他线程安全的数据结构 ........................................................................ 343\n10.5　原子值 ................................................................................................... 344\n10.6　锁 ........................................................................................................ 346\n10.6.1　可重入锁（ReentrantLock） .................................................................... 347\n10.6.2　synchronized关键字................................................................................... 348\n10.6.3　条件等待 .................................................................................................... 350\n10.7　线程 ...................................................................................................... 352\n10.7.1　启动线程 .................................................................................................... 352\n10.7.2　线程中断 .................................................................................................... 353\n10.7.3　线程变量 .................................................................................................... 355\n10.7.4　线程的其他属性 ........................................................................................ 356\n10.8　异步计算 ....................................................................................................... 356\n10.8.1　UI回调中的长期运行任务 ........................................................................ 356\n10.8.2　可完成的future .......................................................................................... 358\n10.9　进程 .............................................................................................. 361\n10.9.1　构建进程 .................................................................................................... 361\n10.9.2　运行进程 .................................................................................................... 363\n练习 .................................................................................................. 364\n第11章　注解......................................................................................................... 371\n11.1　使用注解 ......................................................................................... 372\n11.1.1　注解元素 .................................................................................................... 372\n11.1.2　多注解和重复注解 .................................................................................... 373\n11.1.3　注解声明 .................................................................................................... 374\n11.1.4　注解类型用途 ............................................................................................ 375\n11.1.5　明确接收者 ................................................................................................ 376\n11.2　定义注解 ......................................................................................... 378\n11.3　标准注解 ................................................................................................ 380\n11.3.1　编译相关的注解 ........................................................................................ 381\n11.3.2　资源管理相关的注解 ................................................................................ 382\n11.3.3　元注解 ........................................................................................................ 382\n11.4　运行时注解处理 ................................................................................. 384\n11.5　源码级注解处理 .................................................................................. 387\n11.5.1　注解处理器 ................................................................................................ 388\n11.5.2　语言模型API.............................................................................................. 388\n11.5.3　使用注解生成源码 .................................................................................... 389\n练习 ............................................................................................. 392\n第12章　日期和时间API......................................................................................... 395\n12.1　时间线 ....................................................................................................... 396\n12.2　本地日期 ........................................................................................... 398\n12.3　日期调整器 ............................................................................................. 401\n12.4　本地时间 ................................................................................................. 402\n12.5　时区时间 ................................................................................ 403\n12.6　格式化和解析 .............................................................................. 406\n12.7　应对遗留代码 ................................................................................. 409\n练习 ............................................................................................................411\n第13章　国际化...................................................................................................... 413\n13.1　本地化 ............................................................................................ 414\n13.1.1　指定本地化 ................................................................................................ 414\n13.1.2　默认locale .................................................................................................. 417\n13.1.3　显示名称 .................................................................................................... 418\n13.2　数字格式化 ........................................................................................... 418\n13.3　货币符号 ................................................................................................. 419\n13.4　日期和时间格式化 ......................................................................... 420\n13.5　排序和规格化 ........................................................................................... 422\n13.6　消息格式化 ........................................................................................ 424\n13.7　资源束 ................................................................................................... 426\n13.7.1　组织资源束 ................................................................................................ 426\n13.7.2　资源束类 .................................................................................................... 428\n13.8　字符集编码 ................................................................................. 429\n13.9　首选项 ............................................................................................... 430\n练习 ................................................................................................................ 432\n第14章　编译与脚本.............................................................................................. 435\n14.1　编译器API ................................................................................................................ 435\n14.1.1　调用编译器 ................................................................................................ 436\n14.1.2　启动编译任务 ............................................................................................ 436\n14.1.3　从内存读取源文件 .................................................................................... 437\n14.1.4　向内存写入字节码 .................................................................................... 438\n14.1.5　捕获诊断信息 ............................................................................................ 440\n14.2　脚本API .................................................................................................................... 440\n14.2.1　获取脚本引擎 ............................................................................................ 440\n14.2.2　绑定 ............................................................................................................ 441\n14.2.3　重定向输入与输出 .................................................................................... 442\n14.2.4　调用脚本函数和方法 ................................................................................ 443\n14.2.5　编译脚本 .................................................................................................... 444\n14.3　Nashorn脚本引擎 .............................................................................. 445\n14.3.1　从命令行运行Nashorn .............................................................................. 445\n14.3.2　调用get、set和重载方法 .......................................................................... 446\n14.3.3　构造Java对象 ............................................................................................. 447\n14.3.4　JavaScript和Java中的字符串 .................................................................... 449\n14.3.5　数字 ............................................................................................................ 449\n14.3.6　使用数组 .................................................................................................... 450\n14.3.7　列表与映射 ................................................................................................ 451\n14.3.8　lambda表达式 ............................................................................................ 452\n14.3.9　继承Java类与实现Java接口 ...................................................................... 453\n14.3.10　异常 .......................................................................................................... 455\n14.4　shell脚本与Nashorn .............................................................................. 455\n14.4.1　执行shell命令 ............................................................................................ 456\n14.4.2　字符串插值 ................................................................................................ 456\n14.4.3　脚本输入 .................................................................................................... 457\n练习 .................................................................................................... 458","pages":"484","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s28385172.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s28385172.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s28385172.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26710388\/","id":"26710388","publisher":"电子工业出版社","isbn10":"7121278375","isbn13":"9787121278372","title":"写给大忙人看的Java核心技术","url":"https:\/\/api.douban.com\/v2\/book\/26710388","alt_title":"","author_intro":"Cay S. Horstmann是名著Core Java?, Volumes I and II的主要作者，同时也是《写给大忙人的Java SE 8》（Java SE 8 for the Really Impatient）与《快学Scala》（Scala for the impatient）两本书的作者，。他还编写了一系列针对专业编程人员和计算机专业学生的书籍。他是圣荷西州立大学计算机科学专业的一名教授，也是一位Java拥护者。","summary":"《写给大忙人看的Java核心技术》为经典著作Core Java作者Cay S. Horstmann的全新力作，以关键的核心技术为着眼点，以全局高度提炼语言精髓，以高浓度、高含金量的方式对Java 8新特性进行细致讲解，将其沉浸于Java多年的真知灼见蕴藏于书中，既扎实覆盖Java编程的基础知识，更独具匠心地从Java 8极其重要的新特性之一lambda表达式发端，带领读者一路探索和实践Java 8的诸多新特性，诸如针对数据处理的Stream、并发编程中的增强部分、全新的时间\/日期API，以及脚本语言在Java中的使用。\n“For the Impatient”系列风格鲜明，除悉数出自大师之手外，更以文笔轻松、易读易懂、富含生动且可用于实践的示例程序（下载源代码后可直接运行）见长。这种亲身实践的讲授模式，非常便于各阶层读者加深对技术的理解和掌握，初学者可用来参考入门，有开发经验者也可用来巩固编程核心知识，或与时俱进地把握技术发展现状与未来趋势。\n《写给大忙人看的Java核心技术》适合有一定Java开发经验的工程师或者架构师阅读，也可以作为Java新特性的参考手册。","price":"108.00元"},{"rating":{"max":10,"numRaters":34,"average":"7.7","min":0},"subtitle":"Java虚拟机规范","author":["蒂姆·林霍尔姆（Tim Lindholm）","弗兰克·耶林（Frank Yellin）","吉拉德·布拉查（Gilad Bracha）","亚历克斯·巴克利（Alex Buckley）"],"pubdate":"2015-6","tags":[{"count":49,"name":"JVM","title":"JVM"},{"count":47,"name":"Java","title":"Java"},{"count":12,"name":"计算机","title":"计算机"},{"count":10,"name":"虚拟机","title":"虚拟机"},{"count":10,"name":"java","title":"java"},{"count":7,"name":"核心技术","title":"核心技术"},{"count":4,"name":"编程","title":"编程"},{"count":3,"name":"计算科学","title":"计算科学"}],"origin_title":"The Java Virtual Machine Specification, Java SE 8 Edition","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s28102962.jpg","binding":"平装","translator":["爱飞翔","周志明","等"],"catalog":"译者序\n前　言\n第1章　引言1\n1.1　简史1\n1.2　Java虚拟机2\n1.3　各章节摘要2\n1.4　说明3\n1.5　反馈3\n第2章　Java虚拟机结构4\n2.1　class文件格式4\n2.2　数据类型5\n2.3　原始类型与值5\n2.3.1　整数类型与整型值6\n2.3.2　浮点类型、取值集合及浮点值6\n2.3.3　returnAddress类型和值8\n2.3.4　boolean类型8\n2.4　引用类型与值9\n2.5　运行时数据区9\n2.5.1　pc寄存器9\n2.5.2　Java虚拟机栈10\n2.5.3　Java堆10\n2.5.4　方法区11\n2.5.5　运行时常量池11\n2.5.6　本地方法栈12\n2.6　栈帧12\n2.6.1　局部变量表13\n2.6.2　操作数栈14\n2.6.3　动态链接14\n2.6.4　方法调用正常完成15\n2.6.5　方法调用异常完成15\n2.7　对象的表示15\n2.8　浮点算法15\n2.8.1　Java虚拟机和IEEE 754中的浮点算法15\n2.8.2　浮点模式16\n2.8.3　数值集合转换17\n2.9　特殊方法18\n2.10　异常19\n2.11　字节码指令集简介20\n2.11.1　数据类型与Java虚拟机21\n2.11.2　加载和存储指令23\n2.11.3　算术指令24\n2.11.4　类型转换指令25\n2.11.5　对象的创建与操作27\n2.11.6　操作数栈管理指令27\n2.11.7　控制转移指令27\n2.11.8　方法调用和返回指令28\n2.11.9　抛出异常28\n2.11.10　同步28\n2.12　类库29\n2.13　公有设计、私有实现30\n第3章　Java虚拟机编译器31\n3.1　示例的格式说明31\n3.2　常量、局部变量和控制结构的使用32\n3.3　算术运算36\n3.4　访问运行时常量池36\n3.5　与控制结构有关的更多示例37\n3.6　接收参数40\n3.7　方法调用41\n3.8　使用类实例43\n3.9　数组44\n3.10　编译switch语句46\n3.11　使用操作数栈48\n3.12　抛出异常和处理异常48\n3.13　编译finally语句块51\n3.14　同步54\n3.15　注解55\n第4章　class文件格式56\n4.1　ClassFile结构57\n4.2　各种名称的内部表示形式61\n4.2.1　类和接口的二进制名称61\n4.2.2　非限定名61\n4.3　描述符62\n4.3.1　语法符号62\n4.3.2　字段描述符62\n4.3.3　方法描述符63\n4.4　常量池64\n4.4.1　CONSTANT_Class_info结构65\n4.4.2　CONSTANT_Fieldref_info、CONSTANT_Methodref_info和CONSTANT_InterfaceMethodref_info结构66\n4.4.3　CONSTANT_String_info结构67\n4.4.4　CONSTANT_Integer_info和CONSTANT_Float_info结构67\n4.4.5　CONSTANT_Long_info和CONSTANT_Double_info结构68\n4.4.6　CONSTANT_NameAnd-Type_info结构69\n4.4.7　CONSTANT_Utf8_info结构70\n4.4.8　CONSTANT_MethodHandle_info结构72\n4.4.9　CONSTANT_MethodType_info结构73\n4.4.10　CONSTANT_Invoke-Dynamic_info结构74\n4.5　字段74\n4.6　方法76\n4.7　属性78\n4.7.1　自定义和命名新的属性82\n4.7.2　ConstantValue属性82\n4.7.3　Code属性83\n4.7.4　StackMapTable属性86\n4.7.5　Exceptions属性92\n4.7.6　InnerClasses属性93\n4.7.7　EnclosingMethod属性95\n4.7.8　Synthetic属性96\n4.7.9　Signature属性96\n4.7.10　SourceFile属性100\n4.7.11　SourceDebugExtension属性101\n4.7.12　LineNumberTable属性102\n4.7.13　LocalVariableTable属性103\n4.7.14　LocalVariableTypeTable属性104\n4.7.15　Deprecated属性106\n4.7.16　RuntimeVisibleAnnota-tions属性106\n4.7.17　RuntimeInvisible-Annotations属性110\n4.7.18　RuntimeVisibleParameterAnnotations属性111\n4.7.19　RuntimeInvisiblePara-meterAnnotations属性112\n4.7.20　RuntimeVisibleTypeAnnotations属性114\n4.7.21　RuntimeInvisibleType-Annotations属性124\n4.7.22　AnnotationDefault属性125\n4.7.23　BootstrapMethods属性126\n4.7.24　MethodParameters属性127\n4.8　格式检查129\n4.9　Java虚拟机代码约束129\n4.9.1　静态约束130\n4.9.2　结构化约束132\n4.10　class文件校验135\n4.10.1　类型检查验证136\n4.10.2　类型推导验证200\n4.11　Java虚拟机限制206\n第5章　加载、链接与初始化208\n5.1　运行时常量池208\n5.2　虚拟机启动210\n5.3　创建和加载211\n5.3.1　使用引导类加载器来加载类型212\n5.3.2　使用用户自定义类加载器来加载类型212\n5.3.3　创建数组类213\n5.3.4　加载限制214\n5.3.5　从class文件表示得到类214\n5.4　链接215\n5.4.1　验证216\n5.4.2　准备216\n5.4.3　解析217\n5.4.4　访问控制225\n5.4.5　方法覆盖225\n5.5　初始化226\n5.6　绑定本地方法实现228\n5.7　Java虚拟机退出228\n第6章　Java虚拟机指令集229\n6.1　设定：“必须”的含义229\n6.2　保留操作码229\n6.3　虚拟机错误230\n6.4　指令描述格式230\n6.5　指令集描述232\n第7章　操作码助记符320\n附录A　Limited License Grant327","pages":"330","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s28102962.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s28102962.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s28102962.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26418340\/","id":"26418340","publisher":"机械工业出版社","isbn10":"7111501594","isbn13":"9787111501596","title":"Java虚拟机规范（Java SE 8版）","url":"https:\/\/api.douban.com\/v2\/book\/26418340","alt_title":"The Java Virtual Machine Specification, Java SE 8 Edition","author_intro":"","summary":"本书完整而准确地阐释了Java虚拟机各方面的细节，围绕Java虚拟机整体架构、编译器、class文件格式、加载、链接与初始化、指令集等核心主题对Java虚拟机进行全面而深入的分析，深刻揭示Java虚拟机的工作原理。同时，书中不仅完整地讲述了由Java SE 8所引入的新特性，例如对包含默认实现代码的接口方法所做的调用，还讲述了为支持类型注解及方法参数注解而对class文件格式所做的扩展，并阐明了class文件中各属性的含义，以及字节码验证的规则。","series":{"id":"34391","title":"Java核心技术系列"},"price":"79"},{"rating":{"max":10,"numRaters":14,"average":"7.6","min":0},"subtitle":"","author":["Cay S. Horstmann"],"pubdate":"2014-1-24","tags":[{"count":17,"name":"Java","title":"Java"},{"count":4,"name":"编程","title":"编程"},{"count":3,"name":"计算机","title":"计算机"},{"count":1,"name":"软件开发","title":"软件开发"},{"count":1,"name":"編程語言","title":"編程語言"},{"count":1,"name":"待看技術書","title":"待看技術書"},{"count":1,"name":"java8","title":"java8"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s27241348.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"240","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s27241348.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s27241348.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s27241348.jpg"},"alt":"https:\/\/book.douban.com\/subject\/24325211\/","id":"24325211","publisher":"Addison-Wesley Professional","isbn10":"0321927761","isbn13":"9780321927767","title":"Java SE 8 for the Really Impatient","url":"https:\/\/api.douban.com\/v2\/book\/24325211","alt_title":"","author_intro":"","summary":"Eagerly anticipated by millions of programmers, Java SE 8 is the most important Java update in many years. Now, internationally renowned Java expert Cay S. Horstmann (\"Core Java\") concisely introduces Java 8's most valuable new features (plus a few Java 7 innovations that haven't gotten the attention they deserve). If you're an experienced Java programmer, Horstmann's practical insights and sample code will help you quickly take advantage of these and other Java language and platform improvements: * Using Lambda expressions (closures) to write computation \"snippets\" that can be passed to common utility functions, making Java collections far more flexible  * Major updates to concurrent programming that make use of lambda expressions (filter\/map\/reduce) and improve Java's fork-join framework  * The long-awaited introduction of a well-designed date\/time\/calendar library (JSR 310)  * Annotations on Java types to support useful pluggable type checkers and refine Java's built-in type system  * Java\/JavaScript integration via Project Nashorn  * Transition to the JavaFX API as the official way to build media-rich, highly interactive client-side Java applications  * Simpler tuning of HotSpot JVM garbage collection  The first book to cover all these highly-anticipated improvements, Cay Horstmann's Java SE 8 for the Really Impatient will be indispensable to everyone who wants to write tomorrow's most robust, efficient, and secure Java code.","price":"USD 39.99"},{"rating":{"max":10,"numRaters":110,"average":"8.1","min":0},"subtitle":"","author":["【美】Cay S. Horstmann（凯.S.霍斯曼） 编"],"pubdate":"2014-11","tags":[{"count":76,"name":"JAVA","title":"JAVA"},{"count":69,"name":"Java","title":"Java"},{"count":68,"name":"JDK8","title":"JDK8"},{"count":34,"name":"编程","title":"编程"},{"count":27,"name":"计算机","title":"计算机"},{"count":21,"name":"程序设计","title":"程序设计"},{"count":17,"name":"Programming","title":"Programming"},{"count":11,"name":"软件开发","title":"软件开发"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s27906698.jpg","binding":"平装","translator":["张若飞"],"catalog":"第1章  lambda表达式\t0\n1.1  为什么要使用lambda表达式\t2\n1.2  lambda表达式的语法\t4\n1.3  函数式接口\t6\n1.4  方法引用\t8\n1.5  构造器引用\t10\n1.6  变量作用域\t10\n1.7  默认方法\t14\n1.8  接口中的静态方法\t17\n练习\t18\n第2章  Stream API\t20\n2.1  从迭代器到Stream操作\t22\n2.2  创建Stream\t23\n2.3  filter、map和flatMap方法\t25\n2.4  提取子流和组合流\t26\n2.5  有状态的转换\t27\n2.6  简单的聚合方法\t28\n2.7  Optional类型\t29\n2.7.1  使用Optional值\t29\n2.7.2  创建可选值\t30\n2.7.3  使用flatMap来组合可选值函数\t31\n2.8  聚合操作\t32\n2.9  收集结果\t33\n2.10  将结果收集到Map中\t35\n2.11  分组和分片\t37\n2.12  原始类型流\t40\n2.13  并行流\t42\n2.14  函数式接口\t44\n练习\t45\n第3章使用lambda编程\t48\n3.1  延迟执行\t50\n3.2  lambda表达式的参数\t51\n3.3  选择一个函数式接口\t52\n3.4  返回函数\t55\n3.5  组合\t56\n3.6  延迟\t58\n3.7  并行操作\t59\n3.8  处理异常\t60\n3.9  lambda表达式和泛型\t63\n3.10  一元操作\t65\n练习\t67\n第4章  JavaFX\t72\n4.1  Java GUI编程简史\t74\n4.2  你好，JavaFX！\t75\n4.3  事件处理\t76\n4.4  JavaFX属性\t77\n4.5  绑定\t80\n4.6  布局\t85\n4.7  FXML\t91\n4.8  CSS\t95\n4.9  动画和特殊效果\t97\n4.10  不寻常的控件\t100\n练习\t103\n第5章新的日期和时间API\t106\n5.1  时间线\t108\n5.2  本地日期\t110\n5.3  日期校正器\t113\n5.4  本地时间\t114\n5.5  带时区的时间\t115\n5.6  格式化和解析\t119\n5.7  与遗留代码互操作\t122\n练习\t123\n第6章并发增强\t126\n6.1  原子值\t128\n6.2  ConcurrentHashMap改进\t131\n6.2.1  更新值\t132\n6.2.2  批量数据操作\t134\n6.2.3  Set视图\t136\n6.3  并行数组操作\t137\n6.4  可完成的Future\t138\n6.4.1  Future\t138\n6.4.2  编写Future\t139\n6.4.3  Future流水线\t139\n6.4.4  编写异步操作\t141\n练习\t143\n第7章  JavaScript引擎——Nashorn\t146\n7.1  从命令行运行Nashorn\t148\n7.2  从Java运行Nashorn\t149\n7.3  调用方法\t150\n7.4  构造对象\t151\n7.5  字符串\t153\n7.6  数字\t153\n7.7  使用数组\t154\n7.8  列表和映射\t155\n7.9  lambda表达式\t156\n7.10  继承Java类及实现Java接口\t157\n7.11  异常\t158\n7.12  Shell脚本\t159\n7.12.1  执行Shell命令\t159\n7.12.2  字符串插值\t160\n7.12.3  脚本输入\t161\n7.13  Nashorn和JavaFX\t162\n练习\t164\n第8章杂项改进\t166\n8.1  字符串\t168\n8.2  数字类\t168\n8.3  新的数学函数\t169\n8.4  集合\t170\n8.4.1  集合类中添加的方法\t170\n8.4.2  比较器\t171\n8.4.3  Collections类\t173\n8.5  使用文件\t173\n8.5.1  读取文件行的流\t173\n8.5.2  遍历目录项的流\t175\n8.5.3  Base64编码\t176\n8.6  注解\t177\n8.6.1  可重复的注解\t177\n8.6.2  可用于类型的注解\t179\n8.6.3  方法参数反射\t181\n8.7  其他一些细微的改进\t182\n8.7.1  Null检查\t182\n8.7.2  延迟消息\t182\n8.7.3  正则表达式\t183\n8.7.4  语言环境\t183\n8.7.5  JDBC\t185\n练习\t185\n第9章你可能错过的Java 7特性\t188\n9.1  异常处理改进\t190\n9.1.1  try-with-resources语句\t190\n9.1.2  忽略异常\t191\n9.1.3  捕获多个异常\t192\n9.1.4  更简单地处理反射方法的异常\t193\n9.2  使用文件\t193\n9.2.1  Path\t194\n9.2.2  读取和写入文件\t196\n9.2.3  创建文件和目录\t197\n9.2.4  复制、移动和删除文件\t198\n9.3  实现equals、hashCode和compareTo方法\t198\n9.3.1  安全的Null值相等测试\t198\n9.3.2  计算哈希码\t199\n9.3.3  比较数值类型对象\t200\n9.4  安全需要\t201\n9.5  其他改动\t204\n9.5.1  将字符串转换为数字\t204\n9.5.2  全局Logger\t204\n9.5.3  Null检查\t205\n9.5.4  ProcessBuilder\t205\n9.5.5  URLClassLoader\t206\n9.5.6  BitSet\t206\n练习\t207\n索引\t209","pages":"240","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s27906698.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s27906698.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s27906698.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26274206\/","id":"26274206","publisher":"电子工业出版社","isbn10":"7121227282","isbn13":"9787121227288","title":"写给大忙人看的Java SE 8","url":"https:\/\/api.douban.com\/v2\/book\/26274206","alt_title":"","author_intro":"Cay S. Horstmann不仅是Scala for the Impatient（Addison-Wesley于2012年出版）一书的作者，而且是Core Java™, Volumes I and II, Ninth Edition（Prentice Hall于2013年出版）一书的主要作者，他还编写了一系列针对专业编程人员和计算机专业学生的书籍。他是圣荷西州立大学计算机科学专业的一名教授，也是一位Java拥护者。","summary":"《写给大忙人看的Java SE 8》向Java开发人员言简意赅地介绍了Java 8 的许多新特性（以及Java 7 中许多未被关注的特性），《写给大忙人看的Java SE 8》延续了《快学Scala》“不废话”的风格。\n《写给大忙人看的Java SE 8》共分为9章。第1章讲述了lambda表达式的全部语法；第2章给出了流的完整概述；第3章给出了使用lambda表达式设计库的有效技巧；第4章介绍了JavaFX；第5章详细介绍了Java新增的日期\/时间API；第6章介绍了原子计数器、并发哈希映射、并行数组操作等特性中的改进；第7章介绍了如何在Java虚拟机上执行JavaScript，以及如何与Java代码进行交互操作；第8章描述了Java 8中其他一些不起眼但很实用的特性；第9章则关注于Java 7中改进的异常处理，以及其他一些你可能会忽略掉的API。\n《写给大忙人看的Java SE 8》适合所有Java程序员、软件设计师、架构师及软件开发爱好者阅读。对于想要快速了解Java SE 8新特性的Java工程师来说，《写给大忙人看的Java SE 8》是一本不可多得的枕边读物。","price":"59.00元"},{"rating":{"max":10,"numRaters":2,"average":"0.0","min":0},"subtitle":"Java Programming in a Multicore World","author":["Maurice Naftalin"],"pubdate":"2014-4-8","tags":[{"count":2,"name":"java","title":"java"},{"count":1,"name":"java8","title":"java8"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s27208219.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"144","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s27208219.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s27208219.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s27208219.jpg"},"alt":"https:\/\/book.douban.com\/subject\/25817359\/","id":"25817359","publisher":"McGraw-Hill Osborne Media","isbn10":"0071829628","isbn13":"9780071829625","title":"Mastering Lambdas","url":"https:\/\/api.douban.com\/v2\/book\/25817359","alt_title":"","author_intro":"","summary":"","price":"USD 40.00"},{"rating":{"max":10,"numRaters":2,"average":"0.0","min":0},"subtitle":"","author":["Ian F. Darwin"],"pubdate":"2014-7-18","tags":[{"count":3,"name":"Java","title":"Java"},{"count":1,"name":"java8","title":"java8"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s28306134.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"898","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s28306134.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s28306134.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s28306134.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26631547\/","id":"26631547","publisher":"O'Reilly Media","isbn10":"144933704X","isbn13":"9781449337049","title":"Java Cookbook","url":"https:\/\/api.douban.com\/v2\/book\/26631547","alt_title":"","author_intro":"About the Author\nIan F. Darwin  has worked in the computer industry for three decades. He wrote the freeware file(1) command used on Linux and BSD and is the author of Checking C Programs with Lint, Java Cookbook, and over seventy articles and courses on C and Unix. In addition to programming and consulting, Ian teaches Unix, C, and Java for Learning Tree International, one of the world's largest technical training companies.","summary":"From lambda expressions and JavaFX 8 to new support for network programming and mobile development, Java 8 brings a wealth of changes. This cookbook helps you get up to speed right away with hundreds of hands-on recipes across a broad range of Java topics. You’ll learn useful techniques for everything from debugging and data structures to GUI development and functional programming.Each recipe includes self-contained code solutions that you can freely use, along with a discussion of how and why they work. If you are familiar with Java basics, this cookbook will bolster your knowledge of the language in general and Java 8’s main APIs in particular.Recipes include:Methods for compiling, running, and debuggingManipulating, comparing, and rearranging textRegular expressions for string- and pattern-matchingHandling numbers, dates, and timesStructuring data with collections, arrays, and other typesObject-oriented and functional programming techniquesDirectory and filesystem operationsWorking with graphics, audio, and videoGUI development, including JavaFX and handlersNetwork programming on both client and serverDatabase access, using JPA, Hibernate, and JDBCProcessing JSON and XML for data storageMultithreading and concurrency","price":"USD 39.53"},{"rating":{"max":10,"numRaters":1,"average":"0.0","min":0},"subtitle":"","author":["Michael Mülle","Brühl, Nordrhein-Westfalen,","Germany"],"pubdate":"2016","tags":[{"count":2,"name":"java流","title":"java流"},{"count":2,"name":"java函数式","title":"java函数式"},{"count":2,"name":"java8","title":"java8"},{"count":1,"name":"Java","title":"Java"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29404531.jpg","binding":"Apress","translator":[],"catalog":"Contents\nAbout the Author                                vii\nAbout the Technical Reviewer                      ix\nForeword                                        xi\nChapter 1: Introduction                          1\nChapter 2: The Data                            5\nChapter 3: First Analysis—From Naive to Flexible    7\nChapter 4: Lambda Expressions                  13\nChapter 5: Default Method                      19\nChapter 6: Optional                            25\nChapter 7: Make the Acquaintance of Streams      29\nChapter 8: stream(), Stream and Spliterator       35\nChapter 9: Parallel Stream                      41\nChapter 10: Collector and Concurrency            47\nChapter 11: GroupingCollector                   61\nAppendix A: Program to Create the Demo Data     69\nIndex                                          85","pages":"XI, 87","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29404531.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29404531.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29404531.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26999464\/","id":"26999464","publisher":"Apress","isbn10":"1484224876","isbn13":"9781484224878","title":"Java Lambdas and Parallel Streams","url":"https:\/\/api.douban.com\/v2\/book\/26999464","alt_title":"","author_intro":"Michael Müller is an IT professional with more than 30 years of experience including about 25 years in the healthcare sector. During this time, he has worked in different areas, especially project and product management, consulting, and software development. During a couple of Software development project, he also could gain intensive international experience.\nCurrently, he is the head of software development at the German DRG institute inek.org. In this role, he is responsible for Web applications as well as other Java and .NET projects. Web projects are preferably built with Java technologies such as JSF with the help of supporting languages like JavaScript.\nMichael has a strong experience using lambda statements the .Net environment (LINQ with C#). Beginning with Java 8, he finally can use similar powerful features with Java.\nMichael is a JSF professional user and a member of the JSR 344 and JSR 372 (JSF) expert groups. His first book Web Development with Java and JSF consequential deals with this Java web technology.\nHe frequently reads books and writes reviews as well as technical papers, which are mostly published in German-printed magazines and on his website.","summary":"This compact book introduces the concepts of Java lambdas and parallel streams in a concise form. It begins by introducing new supporting features such as functional interfaces, default methods and more. After this, the author demonstrates how streams can be parallelized in a very simple way—within certain limits, no knowledge about the thread management is needed. Nevertheless, some basic elements in the context of parallelism need to be considered. Here, the book provides a variety of information and best practices.\nWhat You Will Learn\nMaster lambdas and streams\nWork with the default method\nHarness streams and the stream() function\nUse Stream and Spliterator\nTake advantage of parallel streams\nWork with collectors and concurrency\nWho This Book Is For\nExperienced Java programmers and developers.\n","price":"14,99 €"},{"rating":{"max":10,"numRaters":1,"average":"0.0","min":0},"subtitle":"Understand and utilize Java Lambdas","author":["Toby Weston"],"pubdate":"2017-3","tags":[{"count":1,"name":"java8","title":"java8"},{"count":1,"name":"Java","title":"Java"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29442463.jpg","binding":"Packt Publishing","translator":[],"catalog":"","pages":"114","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29442463.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29442463.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29442463.jpg"},"alt":"https:\/\/book.douban.com\/subject\/27036719\/","id":"27036719","publisher":"Packt Publishing","isbn10":"1787281027","isbn13":"9781787281028","title":"Learning Java Lambdas","url":"https:\/\/api.douban.com\/v2\/book\/27036719","alt_title":"","author_intro":"","summary":"About This Book\nTake a deep dive into one of the single most important additions to modern Java\nMaster Java lambdas, and fully understand functions, classes, and scope.\nImprove your programming skills, which will enable you to write cleaner and more dynamic code\nWho This Book Is For\nLearning Java Lambdas is for developers looking to upgrade their Java skills and familiarize themselves with one of the most important new features of Java. This book is not for absolute beginners and will be more suited to professionals who are already comfortable with Java coding. You should have a basic knowledge of Java before reading this book.\nWhat You Will Learn\nWhat a lambda is and how it differs from other Java features\nHow to use lambdas effectively in your own projects\nThe use of method references and advanced scoping\nThe difference between lambdas and closures\nThe differences in bytecode produced when using lambdas\nIn Detail\nIn this short book, we take an in-depth look at lambdas in Java, and their supporting features. The book covers essential topics, such as functional interfaces and type inference, and the key differences between lambdas and closures. You will learn about the background to functional programming and lambdas, before moving on to understanding the basic syntax of lambdas and what differentiates these anonymous functions from standard anonymous classes. Lastly, you'll learn how to invoke lambdas and look at the bytecode generated.\nAfter reading this book, you'll understand lambdas in depth, their background, syntax, implementation details, and how and when to use them. You'll also have a clear knowledge of the difference between functions and classes, and why that's relevant to lambdas. This knowledge will enable you to appreciate the improvements to type inference that drive a lot of the new features in modern Java, and will increase your understanding of method references and scoping.\nStyle and approach\nThis book is a deep dive into one of the core new features of the Java language – Lambdas. It covers them in great details, making sure that you fully understand how lambdas work, and how they can be put to use in your own programs.","price":""},{"rating":{"max":10,"numRaters":2,"average":"0.0","min":0},"subtitle":"","author":["Robert Fischer"],"pubdate":"2015","tags":[{"count":1,"name":"java8","title":"java8"},{"count":1,"name":"Java","title":"Java"},{"count":1,"name":"2018","title":"2018"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29439620.jpg","binding":"apress","translator":[],"catalog":"Table of contents (9 chapters)\nJava 8: It’s a Whole New Java\nFischer, Robert\nPages 1-10\nUnderstanding Lambdas in Java 8\nFischer, Robert\nPages 11-32\nLambda’s Domain: Collections, Maps, and Streams\nFischer, Robert\nPages 33-49\nI\/O with Lambdas\nFischer, Robert\nPages 51-69\nData Access with Lambdas\nFischer, Robert\nPages 71-93\nLambda Concurrency\nFischer, Robert\nPages 95-110\nLambdas and Legacy Code\nFischer, Robert\nPages 111-137\nLambdas in Java Bytecode\nFischer, Robert\nPages 139-152\nA Tour of Paradigms\nFischer, Robert\nPages 153-193","pages":"220","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29439620.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29439620.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29439620.jpg"},"alt":"https:\/\/book.douban.com\/subject\/27033881\/","id":"27033881","publisher":"apress","isbn10":"143025999X","isbn13":"9781430259992","title":"Java Closures and Lambda","url":"https:\/\/api.douban.com\/v2\/book\/27033881","alt_title":"","author_intro":"Robert Fischer is a software developer, open source software contributor, technical commentator, and engineering manager. He has consulted, written, and spoken broadly on technical topics including concurrency, JVM bytecode, Groovy, Grails, and Gradle, and functional programming. Robert has a Masters of Divinity degree from Duke University, works as the VP of Engineering at Webonise Lab, and lives in Durham, North Carolina with his wife, dog, and baby girl.","summary":"Java Closures and Lambda introduces you to significant new changes to the Java language coming out of what is termed Project Lambda. These new changes make their debut in Java 8, and their highlight is the long-awaited support for lambda expressions in the Java language. You’ll learn to write lambda expressions and use them to create functional interfaces and default methods for evolving APIs, among many other uses.\nThe changes in Java 8 are significant. Syntax and usage of the language are changed considerably with the introduction of closures and lambda expressions. This book takes you through these important changes from introduction to mastery. Through a set of clear examples, you’ll learn to refactor existing code to take advantage of the new language features. You’ll learn what those features can do for you, and when they are best applied. You’ll learn to design and write new code having these important new features in mind from the very beginning.\nClearly explains the fantastic benefits resulting from Project Lambda\nExplains the syntax and IDE support for the new features\nShows how to streamline your code by bringing some of the benefits of functional programming to the Java language\nIllustrates parallelism in closures through Stream and Spliterator objects\nExplains API evolution by adding methods to existing interfaces without breaking existing interface implementations, a technique addressing potential multiple inheritance issues","price":"$49.99"},{"rating":{"max":10,"numRaters":3,"average":"0.0","min":0},"subtitle":"Create, Compile, and Run Java Programs Today","author":["Herbert Schildt"],"pubdate":"2014-5-6","tags":[{"count":4,"name":"Java","title":"Java"},{"count":1,"name":"计算机","title":"计算机"},{"count":1,"name":"programming","title":"programming"},{"count":1,"name":"en","title":"en"},{"count":1,"name":"Oracle","title":"Oracle"},{"count":1,"name":"Java8","title":"Java8"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29624328.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"729","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s29624328.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s29624328.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29624328.jpg"},"alt":"https:\/\/book.douban.com\/subject\/27594101\/","id":"27594101","publisher":"McGraw-Hill Education","isbn10":"0071809260","isbn13":"9780071809269","title":"Java: A Beginner's Guide, Sixth Edition","url":"https:\/\/api.douban.com\/v2\/book\/27594101","alt_title":"","author_intro":"","summary":"Essential Java Programming Skills--Made Easy!\nFully updated for Java Platform, Standard Edition 8 (Java SE 8), Java: A Beginner's Guide, Sixth Edition gets you started programming in Java right away. Bestselling programming author Herb Schildt begins with the basics, such as how to create, compile, and run a Java program. He then moves on to the keywords, syntax, and constructs that form the core of the Java language. This Oracle Press resource also covers some of Java's more advanced features, including multithreaded programming, generics, and Swing. Of course, new Java SE 8 features such as lambda expressions and default interface methods are described. An introduction to JavaFX, Java's newest GUI, concludes this step-by-step tutorial.","price":"USD 24.59"},{"rating":{"max":10,"numRaters":3,"average":"0.0","min":0},"subtitle":"","author":["[美]  Herbert Schildt"],"pubdate":"2012-9","tags":[{"count":9,"name":"Java","title":"Java"},{"count":6,"name":"编程","title":"编程"},{"count":3,"name":"计算机","title":"计算机"},{"count":1,"name":"甲骨文","title":"甲骨文"},{"count":1,"name":"清华大学出版社","title":"清华大学出版社"},{"count":1,"name":"少壮不努力系列","title":"少壮不努力系列"}],"origin_title":"Java: The Complete Reference, 8th Edition","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s21850732.jpg","binding":"","translator":[],"catalog":"目 录\n第Ⅰ部分 Java语言\n第1章 Java的历史和演变 .................... 3\n1.1 Java的家世 ................................. 4\n1.1.1 现代编程语言的诞生：\nC语言 ...................................... 4\n1.1.2 C++：下一个阶段 ................... 5\n1.1.3 Java出现的时机已经成熟 ..... 6\n1.2 Java的诞生 ................................. 6\n1.3 Java改变Internet的方式 ........... 8\n1.3.1 Java applet ................................ 8\n1.3.2 安全性 ...................................... 8\n1.3.3 可移植性 .................................. 9\n1.4 Java的魔力：字节码 ................. 9\n1.5 servlet：服务器端的Java ......... 10\n1.6 Java的关键特性 ....................... 10\n1.6.1 简单性 ................................... 10\n1.6.2 面向对象 ............................... 11\n1.6.3 健壮性 ................................... 11\n1.6.4 多线程 ................................... 11\n1.6.5 体系结构中立 ....................... 11\n1.6.6 解释执行和高性能................ 12\n1.6.7 分布式 ................................... 12\n1.6.8 动态性 ................................... 12\n1.7 Java的演变历程 ....................... 12\n1.8 文化革新 ................................... 15\nJava 完全参考手册(第 8 版)\nVIII\n第2章 Java综述 ................................ 17\n2.1 面向对象编程 ........................... 17\n2.1.1 两种范式 ................................ 18\n2.1.2 抽象........................................ 18\n2.1.3 OOP三原则 ........................... 19\n2.2 第一个简单程序 ....................... 23\n2.2.1 输入程序 ................................ 23\n2.2.2 编译程序 ................................ 23\n2.2.3 深入分析第一个示例程序 .... 24\n2.3 第二个简短程序 ....................... 26\n2.4 两种控制语句 ........................... 28\n2.4.1 if语句 .................................... 28\n2.4.2 for循环 .................................. 29\n2.5 使用代码块 ............................... 30\n2.6 词汇问题 ................................... 32\n2.6.1 空白符 .................................... 32\n2.6.2 标识符 .................................... 32\n2.6.3 字面值 .................................... 32\n2.6.4 注释........................................ 32\n2.6.5 分隔符 .................................... 33\n2.6.6 Java关键字 ............................ 33\n2.7 Java类库 ................................... 34\n第3章 数据类型、变量和数组 ............ 35\n3.1 Java是强类型化的语言 ........... 35\n3.2 基本类型 ................................... 36\n3.3 整型 ........................................... 36\n3.3.1 byte ......................................... 37\n3.3.2 short........................................ 37\n3.3.3 int ........................................... 37\n3.3.4 long ........................................ 37\n3.4 浮点型 ....................................... 38\n3.4.1 float ........................................ 38\n3.4.2 double ..................................... 39\n3.5 字符型 ....................................... 39\n3.6 布尔型 ....................................... 41\n3.7 深入分析字面值 ....................... 42\n3.7.1 整型字面值 ............................ 42\n3.7.2 浮点型字面值 ....................... 43\n3.7.3 布尔型字面值 ....................... 44\n3.7.4 字符型字面值 ....................... 44\n3.7.5 字符串字面值 ....................... 44\n3.8 变量 ........................................... 45\n3.8.1 变量的声明 ........................... 45\n3.8.2 动态初始化 ........................... 45\n3.8.3 变量的作用域和生命周期.... 46\n3.9 类型转换和强制类型转换 ........ 48\n3.9.1 Java的自动类型转换 ........... 49\n3.9.2 强制转换不兼容的类型 ........ 49\n3.10 表达式中的自动类型提升 ...... 50\n3.11 数组 .......................................... 52\n3.11.1 一维数组 ............................ 52\n3.11.2 多维数组 ............................ 54\n3.11.3 另一种数组声明语法 ........ 58\n3.12 关于字符串的一些说明 .......... 59 3.13 向C\/C++程序员提供指针\n方面的注解 ............................. 60\n第4章 运算符 ...................................... 61\n4.1 算术运算符................................ 61\n4.1.1 基本算术运算符 ................... 62\n4.1.2 求模运算符 ........................... 63\n4.1.3 算术与赋值复合运算符 ........ 64\n4.1.4 自增与自减运算符................ 65\n4.2 位运算符 ................................... 66\n4.2.1 位逻辑运算符 ....................... 68\n4.2.2 左移 ....................................... 70\n4.2.3 右移 ....................................... 71\n4.2.4 无符号右移 ........................... 73\n4.2.5 位运算符与赋值的组合 ........ 74\n4.3 关系运算符................................ 75\n4.4 布尔逻辑运算符 ........................ 76\n4.5 赋值运算符................................ 78\n4.6 “?”运算符 .............................. 78\n4.7 运算符的优先级 ........................ 79\n4.8 使用圆括号................................ 80\n目 录\nIX\n第5章 控制语句 .................................. 83\n5.1 Java的选择语句 ....................... 83\n5.1.1 if语句 .................................... 84\n5.1.2 switch语句 ............................ 87\n5.2 迭代语句 ................................... 91\n5.2.1 while语句 .............................. 92\n5.2.2 do-while语句......................... 93\n5.2.3 for语句 .................................. 96\n5.2.4 for循环的for-each版本 .... 100\n5.2.5 嵌套的循环 ......................... 105\n5.3 跳转语句 ................................. 106\n5.3.1 使用break语句 .................. 106\n5.3.2 使用continue语句 .............. 110\n5.3.3 return语句 ........................... 111\n第6章 类........................................... 113\n6.1 类的基础知识 ......................... 114\n6.1.1 类的一般形式 ...................... 114\n6.1.2 一个简单的类 ...................... 115\n6.2 声明对象 ................................. 117\n6.3 为对象引用变量赋值 ............. 119\n6.4 方法 ......................................... 120\n6.4.1 为Box类添加方法 ............ 120\n6.4.2 返回值 ................................. 122\n6.4.3 添加带参数的方法 ............. 124\n6.5 构造函数 ................................. 126\n6.6 this关键字 .............................. 129\n6.7 垃圾回收 ................................. 130\n6.8 finalize()方法 ........................... 130\n6.9 堆栈类 ..................................... 131\n第7章 方法和类的深入分析.............. 135\n7.1 重载方法 ................................. 135\n7.2 将对象用作参数 ..................... 140\n7.3 参数传递的深入分析 ............. 143\n7.4 返回对象 ................................. 145\n7.5 递归 ......................................... 146\n7.6 访问控制 ................................. 148\n7.7 理解static ................................ 151\n7.8 final介绍 ................................. 153\n7.9 重新审视数组.......................... 154\n7.10 嵌套类和内部类 .................... 156\n7.11 String类介绍 ......................... 158\n7.12 使用命令行参数 .................... 161\n7.13 varargs：可变长度参数 ........ 162\n7.13.1 重载varargs方法 ............ 165\n7.13.2 varargs方法与模糊性 ..... 166\n第8章 继承 ....................................... 169\n8.1 继承的基础知识 ...................... 169\n8.1.1 成员访问与继承 ................. 171\n8.1.2 一个更实际的例子.............. 172 8.1.3 超类变量可以引用子类\n对象 ..................................... 174\n8.2 使用super关键字 ................... 175 8.2.1 使用super调用超类的\n构造函数 ............................. 176\n8.2.2 super的另一种用法 ............ 179\n8.3 创建多级继承层次 .................. 180\n8.4 构造函数的调用时机 .............. 183\n8.5 方法重写 ................................. 184\n8.6 动态方法调度.......................... 187\n8.6.1 重写方法的目的 ................. 189\n8.6.2 应用方法重写 ..................... 189\n8.7 使用抽象类.............................. 191\n8.8 在继承中使用final关键字 .... 193 8.8.1 使用final关键字阻止\n重写 ..................................... 194 8.8.2 使用final关键字阻止\n继承 ..................................... 194\n8.9 Object类 .................................. 195\n第9章 包和接口 ............................... 197\n9.1 包 ............................................. 198\n9.1.1 定义包 ................................. 198\n9.1.2 包查找与CLASSPATH....... 199\n9.1.3 一个简短的包示例.............. 199\n9.2 访问保护 ................................. 200\nJava 完全参考手册(第 8 版)\nX\n9.3 导入包 ..................................... 204\n9.4 接口 ......................................... 206\n9.4.1 定义接口 ............................. 207\n9.4.2 实现接口 ............................. 207\n9.4.3 嵌套接口 ............................. 210\n9.4.4 应用接口 .............................. 211\n9.4.5 接口中的变量 ..................... 214\n9.4.6 接口可以扩展 ..................... 216\n第10章 异常处理 .............................. 219\n10.1 异常处理的基础知识 ........... 219\n10.2 异常类型 ............................... 220\n10.3 未捕获的异常 ....................... 221\n10.4 使用try和catch ................... 222\n10.5 多条catch子句 ..................... 224\n10.6 嵌套的try语句 ..................... 226\n10.7 throw ...................................... 228\n10.8 throws .................................... 229\n10.9 finally ..................................... 230\n10.10 Java的内置异常 ................. 232\n10.11 创建自己的异常子类 ......... 233\n10.12 链式异常 ............................. 235 10.13 JDK 7中3个新的\n异常特性 ............................. 237\n10.14 使用异常 ............................. 238\n第11章 多线程编程 .......................... 239\n11.1 Java线程模型 ....................... 240\n11.1.1 线程优先级 ..................... 241\n11.1.2 同步 ................................. 242\n11.1.3 消息传递 ......................... 242 11.1.4 Thread类和Runnable\n接口 ................................. 242\n11.2 主线程 ................................... 243\n11.3 创建线程 ............................... 244\n11.3.1 实现Runnable接口 ........ 245\n11.3.2 扩展Thread类 ............... 247\n11.3.3 选择一种创建方式 ......... 248\n11.4 创建多个线程 ....................... 248\n11.5 使用isAlive()和join()方法 .... 250\n11.6 线程优先级 ............................ 252\n11.7 同步 ........................................ 253\n11.7.1 使用同步方法 ................. 253\n11.7.2 synchronized语句 ........... 255\n11.8 线程间通信 ............................ 257\n11.9 挂起、恢复与停止线程 ........ 263 11.9.1 Java 1.1以前使用的挂起、\n恢复和停止线程的方式 .... 264 11.9.2 挂起、恢复与停止线程的\n现代方式.......................... 266\n11.10 获取线程的状态 .................. 268\n11.11 使用多线程 .......................... 270 第12章 枚举、自动装箱与注解\n(元数据) ............................... 271\n12.1 枚举 ....................................... 271\n12.1.1 枚举的基础知识 ............. 272 12.1.2 values()和valueOf()\n方法 ................................. 274\n12.1.3 Java枚举是类类型 ......... 275\n12.1.4 枚举继承自Enum类 ...... 278\n12.1.5 另一个枚举示例 ............. 279\n12.2 类型封装器............................ 281\n12.2.1 Character封装器 ............. 281\n12.2.2 Boolean封装器 ............... 282\n12.2.3 数值类型封装器 ............. 282\n12.3 自动装箱 ............................... 283\n12.3.1 自动装箱与方法 ............. 284 12.3.2 表达式中发生的\n自动装箱\/拆箱................. 285 12.3.3 布尔型和字符型数值的\n自动装箱\/拆箱................. 287 12.3.4 自动装箱\/拆箱有助于\n防止错误.......................... 287\n12.3.5 一些警告 ......................... 288\n12.4 注解(元数据) ......................... 289\n12.4.1 注解的基础知识 ............. 289\n目 录\nXI\n12.4.2 指定保留策略 ................. 289 12.4.3 在运行时使用反射获取\n注解 ................................. 290\n12.4.4 AnnotatedElement接口 .... 296\n12.4.5 使用默认值 ..................... 296\n12.4.6 标记注解......................... 297\n12.4.7 单成员注解 ..................... 298\n12.4.8 内置注解......................... 300\n12.4.9 一些限制......................... 301\n第13章 I\/O、applet以及其他主题 ...... 303\n13.1 I\/O的基础知识 ..................... 304\n13.1.1 流 .................................... 304\n13.1.2 字节流和字符流 ............. 304\n13.1.3 预定义流......................... 306\n13.2 读取控制台输入 ................... 307\n13.2.1 读取字符......................... 307\n13.2.2 读取字符串 ..................... 308\n13.3 向控制台写输出 ................... 310\n13.4 PrintWriter类 ........................ 311\n13.5 读\/写文件 .............................. 312\n13.6 自动关闭文件 ....................... 318\n13.7 applet的基础知识................. 321\n13.8 transient和volatile修饰符 .... 324\n13.9 使用instanceof运算符 ......... 324\n13.10 strictfp .................................. 327\n13.11 本地方法 ............................. 327\n13.12 使用断言 ............................. 331\n13.13 静态导入 ............................. 334 13.14 通过this()调用重载的\n构造函数 ............................. 336\n第14章 泛型 ..................................... 339\n14.1 什么是泛型 ........................... 340\n14.2 一个简单的泛型示例 ........... 340\n14.2.1 泛型只使用对象 ............. 344 14.2.2 基于不同类型参数的\n泛型类型是不同的 ......... 344 14.2.3 泛型提升类型安全性的\n原理 ................................. 344\n14.3 带两个类型参数的泛型类 .... 347\n14.4 泛型类的一般形式 ................ 348\n14.5 有界类型 ............................... 349\n14.6 使用通配符参数 .................... 351\n14.7 创建泛型方法........................ 359\n14.8 泛型接口 ............................... 362\n14.9 原始类型与遗留代码 ............ 364\n14.10 泛型类层次.......................... 367\n14.10.1 使用泛型超类 ............. 367\n14.10.2 泛型子类 ..................... 369 14.10.3 泛型层次中的运行时\n类型比较 ..................... 370\n14.10.4 强制转换 ..................... 373\n14.10.5 重写泛型类的方法 ..... 373\n14.11 泛型的类型推断 .................. 374\n14.12 擦拭 ..................................... 376\n14.13 模糊性错误.......................... 379\n14.14 使用泛型的一些限制 .......... 381\n14.14.1 不能实例化类型参数 ... 381 14.14.2 对静态成员的一些\n限制 ............................. 381 14.14.3 对泛型数组的一些\n限制 ............................. 382\n14.14.4 对泛型异常的限制 ..... 383 第Ⅱ部分 Java库\n第15章 字符串处理 .......................... 387\n15.1 String类的构造函数 ............. 388\n15.2 字符串的长度........................ 390\n15.3 特殊的字符串操作 ................ 391\n15.3.1 字符串字面值 ................. 391\n15.3.2 字符串连接 ..................... 391 15.3.3 字符串和其他数据\n类型的连接 ..................... 392 15.3.4 字符串转换和toString()\n方法 ................................. 393\nJava 完全参考手册(第 8 版)\nXII\n15.4 提取字符 ............................... 394\n15.4.1 charAt() ........................... 394\n15.4.2 getChars() ........................ 394\n15.4.3 getBytes() ........................ 395\n15.4.4 toCharArray() .................. 395\n15.5 比较字符串 ........................... 395 15.5.1 equals()和\nequalsIgnoreCase() .......... 395\n15.5.2 regionMatches() .............. 396 15.5.3 startsWith()和\nendsWith() ....................... 397\n15.5.4 equals()与== ................... 397\n15.5.5 compareTo() .................... 398\n15.6 查找字符串 ........................... 399\n15.7 修改字符串 ........................... 401\n15.7.1 substring() ....................... 401\n15.7.2 concat() ........................... 402\n15.7.3 replace() .......................... 402\n15.7.4 trim() ............................... 403\n15.8 使用valueOf()转换数据 ....... 404 15.9 改变字符串中字符的\n大小写 ................................... 404\n15.10 其他String方法 .................. 405\n15.11 StringBuffer类 .................... 406 15.11.1 StringBuffer类的\n构造函数 .................... 406\n15.11.2 length()与capacity() ... 407\n15.11.3 ensureCapacity() ......... 407\n15.11.4 setLength() .................. 408 15.11.5 charAt()与\nsetCharAt() ................. 408\n15.11.6 getChars() ................... 409\n15.11.7 append() ...................... 409\n15.11.8 insert() ......................... 409\n15.11.9 reverse() ...................... 410 15.11.10 delete()与\ndeleteCharAt()............ 411\n15.11.11 replace() ..................... 411\n15.11.12 substring() .................. 412 15.11.13 其他StringBuffer\n方法 ........................... 412\n15.12 StringBuilder类 ................... 413\n第16章 探究java.lang ..................... 415\n16.1 基本类型封装器 .................... 416\n16.1.1 Number ............................ 416\n16.1.2 Double与Float ............... 417 16.1.3 理解isInfinite()与\nisNaN() ............................ 420 16.1.4 Byte、Short、Integer和\nLong ................................. 420\n16.1.5 Character .......................... 427 16.1.6 对Unicode代码点的\n附加支持 ......................... 430\n16.1.7 Boolean ............................ 431\n16.2 Void类 ................................... 432\n16.3 Process类 .............................. 432\n16.4 Runtime类 ............................. 433\n16.4.1 内存管理 ......................... 434\n16.4.2 执行其他程序 ................. 435\n16.5 ProcessBuilder类 .................. 436\n16.6 System类 ............................... 439 16.6.1 使用currentTimeMillis()\n计时程序的执行 ............. 440\n16.6.2 使用arraycopy() .............. 441\n16.6.3 环境属性 ......................... 442\n16.7 Object类 ................................ 442 16.8 使用clone()方法和Cloneable\n接口 ....................................... 443\n16.9 Class类 .................................. 445\n16.10 ClassLoader类 ..................... 448\n16.11 Math类 ................................ 448\n16.11.1 三角函数 ..................... 448\n16.11.2 指数函数 ..................... 449\n16.11.3 舍入函数 ..................... 449\n16.11.4 其他数学方法 ............. 450\n目 录\nXIII\n16.12 StrictMath类 ....................... 452\n16.13 Compiler类 ......................... 452 16.14 Thread类、ThreadGroup类\n和Runnable接口 ................ 452\n16.14.1 Runnable接口 ............ 452\n16.14.2 Thread类 .................... 452\n16.14.3 ThreadGroup类 .......... 454 16.15 ThreadLocal和\nInheritableThreadLocal类 .... 459\n16.16 Package类 ........................... 459\n16.17 RuntimePermission类 ......... 460\n16.18 Throwable类 ....................... 460\n16.19 SecurityManager类 ............. 460\n16.20 StackTraceElement类 ......... 460\n16.21 Enum类 ............................... 461\n16.22 ClassValue类 ...................... 462\n16.23 CharSequence接口 ............. 462\n16.24 Comparable接口 ................. 462\n16.25 Appendable接口 ................. 463\n16.26 Iterable接口 ........................ 463\n16.27 Readable接口 ..................... 464\n16.28 AutoCloseable接口 ............. 464 16.29 Thread.UncaughtException-\nHandler接口 ....................... 464\n16.30 java.lang子包 ...................... 464\n16.30.1 java.lang.annotation .... 465\n16.30.2 java.lang.instrument .... 465\n16.30.3 java.lang.invoke .......... 465\n16.30.4 java.lang.management ... 465\n16.30.5 java.lang.ref ................ 465\n16.30.6 java.lang.reflect........... 465 第17章 java.util第1部分：\n集合框架 .............................. 467\n17.1 集合概述 ............................... 468\n17.2 JDK 5对集合框架的修改 .... 469 17.2.1 泛型从根本上改变了\n集合框架 ......................... 470 17.2.2 自动装箱使得使用基本\n类型更加容易 ................. 470\n17.2.3 for-each风格的循环 ....... 470\n17.3 集合接口 ............................... 470\n17.3.1 Collection接口 ................ 471\n17.3.2 List接口 .......................... 473\n17.3.3 Set接口 ........................... 474\n17.3.4 SortedSet接口 ................. 474\n17.3.5 NavigableSet接口 ........... 475\n17.3.6 Queue接口 ...................... 476\n17.3.7 Deque接口 ...................... 477\n17.4 集合类 ................................... 479\n17.4.1 ArrayList类 ..................... 480\n17.4.2 LinkedList类 ................... 483\n17.4.3 HashSet类 ....................... 484\n17.4.4 LinkedHashSet类 ............ 486\n17.4.5 TreeSet类 ........................ 486\n17.4.6 PriorityQueue类 .............. 487\n17.4.7 ArrayDeque类 ................. 488\n17.4.8 EnumSet类 ...................... 489\n17.5 通过迭代器访问集合 ............ 490\n17.5.1 使用迭代器 ..................... 491 17.5.2 使用for-each循环替代\n迭代器 ............................. 493 17.6 在集合中存储用户\n定义的类................................ 494\n17.7 RandomAccess接口 .............. 495\n17.8 使用映射 ............................... 496\n17.8.1 映射接口 ......................... 496\n17.8.2 映射类 ............................. 500\n17.9 比较器 ................................... 505\n17.10 集合算法.............................. 508\n17.11 Arrays类 .............................. 513\n17.12 需要泛型集合的原因 .......... 518\n17.13 遗留的类和接口 .................. 521\n17.13.1 Enumeration接口 ....... 521\n17.13.2 Vector类 ..................... 521\n17.13.3 Stack类 ....................... 525\nJava 完全参考手册(第 8 版)\nXIV\n17.13.4 Dictionary类 .............. 527\n17.13.5 Hashtable类 ............... 528\n17.13.6 Properties类 ............... 532\n17.13.7 使用store()和load() .... 535\n17.14 集合小结 ............................. 537 第18章 java.util第2部分：更多实用\n工具类 ................................. 539\n18.1 StringTokenizer类 ................. 539\n18.2 BitSet类 ................................ 541\n18.3 Date类 ................................... 544\n18.4 Calendar类 ............................ 546\n18.5 GregorianCalendar类 ............ 549\n18.6 TimeZone类 .......................... 550\n18.7 SimpleTimeZone类 .............. 551\n18.8 Locale类 ............................... 552\n18.9 Random类 ............................. 554\n18.10 Observable类 ...................... 555\n18.10.1 Observer接口 ............. 556\n18.10.2 Observer示例 ............. 556\n18.11 Timer和TimerTask类 ........ 559\n18.12 Currency类 ......................... 561\n18.13 Formatter类 ........................ 562 18.13.1 Formatter类的\n构造函数 .................... 563\n18.13.2 Formatter类的方法 .... 563\n18.13.3 格式化的基础知识 .... 564\n18.13.4 格式化字符串和字符 ... 566\n18.13.5 格式化数字 ................ 566\n18.13.6 格式化时间和日期 .... 567\n18.13.7 %n和%%说明符 ....... 569\n18.13.8 指定最小字段宽度 .... 569\n18.13.9 指定精度 .................... 571\n18.13.10 使用格式标志 .......... 572\n18.13.11 对齐输出 .................. 572 18.13.12 空格、“+”、“0”以及\n“(”标志 ................... 573\n18.13.13 逗号标志 .................. 574\n18.13.14 “#：”标志 ............... 574\n18.13.15 大写选项 ................... 574\n18.13.16 使用参数索引 ........... 575\n18.13.17 关闭Formatter对象 ... 577\n18.13.18 printf()方法 ............... 577\n18.14 Scanner类 ............................ 577 18.14.1 Scanner类的\n构造函数 ..................... 577\n18.14.2 扫描的基础知识 ......... 578\n18.14.3 一些Scanner示例 ...... 581\n18.14.4 设置定界符 ................. 585\n18.14.5 其他Scanner特性 ...... 587 18.15 ResourceBundle、 ListResourceBundle和\nPropertyResourceBundle类.... 588\n18.16 其他实用工具类和接口 ...... 592\n18.17 java.util子包........................ 593 18.17.1 java.util.concurrent、 java.util.concurrent.atomic 和java.util.concurrent.\nlocks ............................ 593\n18.17.2 java.util.jar ................... 593\n18.17.3 java.util.logging ........... 593\n18.17.4 java.util.prefs ............... 593\n18.17.5 java.util.regex .............. 594\n18.17.6 java.util.spi .................. 594\n18.17.7 java.util.zip .................. 594\n第19章 输入\/输出：探究Java.io ...... 595\n19.1 I\/O类和接口 ......................... 596\n19.2 File类 .................................... 597\n19.2.1 目录 ................................. 600 19.2.2 使用FilenameFilter\n接口 ................................. 601\n19.2.3 listFiles()方法 .................. 602\n19.2.4 创建目录 ......................... 602 19.3 AutoCloseable、Closeable和\nFlushable接口 ....................... 602\n目 录\nXV\n19.4 I\/O异常 ................................. 603\n19.5 关闭流的两种方式 ............... 604\n19.6 流类 ....................................... 605\n19.7 字节流 ................................... 605\n19.7.1 InputStream类 ................ 605\n19.7.2 OutputStream类 ............. 606\n19.7.3 FileInputStream类 .......... 606\n19.7.4 FileOutputStream类 ....... 609 19.7.5 ByteArrayInputStream\n类 ..................................... 611 19.7.6 ByteArrayOutputStream\n类 .................................... 613\n19.7.7 过滤的字节流 ................. 614\n19.7.8 缓存的字节流 ................. 614\n19.7.9 SequenceInputStream类 .... 618\n19.7.10 PrintStream类 ............... 620 19.7.11 DataOutputStream和\nDataInputStream类 ...... 622\n19.7.12 RandomAccessFile类 ... 624\n19.8 字符流 ................................... 625\n19.8.1 Reader类 ........................ 625\n19.8.2 Writer类 ......................... 626\n19.8.3 FileReader类 .................. 627\n19.8.4 FileWriter类 ................... 627\n19.8.5 CharArrayReader类 ....... 628\n19.8.6 CharArrayWriter类 ........ 630\n19.8.7 BufferedReader类 .......... 631\n19.8.8 BufferedWriter类 ........... 633\n19.8.9 PushbackReader类 ......... 633\n19.8.10 PrintWriter类 ................ 634\n19.9 Console类 ............................. 635\n19.10 串行化 ................................. 637\n19.10.1 Serializable接口 ........ 637\n19.10.2 Externalizable接口 .... 637\n19.10.3 ObjectOutput接口 ...... 638 19.10.4 ObjectOutputStream\n类 ................................ 638\n19.10.5 ObjectInput接口 ........ 639\n19.10.6 ObjectInputStream类 .... 640\n19.10.7 串行化示例 ................. 641\n19.11 流的优点 .............................. 642\n第20章 探究NIO ............................. 643\n20.1 NIO类 ................................... 643\n20.2 NIO的基础知识 ................... 644\n20.2.1 缓存 ................................. 644\n20.2.2 通道 ................................. 646\n20.2.3 字符集和选择器 ............. 647\n20.3 JDK 7对NIO的增强 ........... 648\n20.3.1 Path接口 ......................... 648\n20.3.2 Files类 ............................ 649\n20.3.3 Path接口 ......................... 651\n20.3.4 文件属性接口 ................. 652 20.3.5 FileSystem、FileSystems\n和FileStore类 ................ 654\n20.4 使用NIO系统 ...................... 654 20.4.1 为基于通道的I\/O使用\nNIO .................................. 654 20.4.2 为基于流的I\/O\n使用NIO ......................... 663 20.4.3 为路径和文件系统操作\n使用NIO ......................... 666 20.5 JDK 7之前基于通道的\n例子 ....................................... 674\n20.5.1 读文件(JDK 7之前) ....... 674\n20.5.2 写文件(JDK 7之前) ....... 677\n第21章 联网 ..................................... 681\n21.1 联网的基础知识 .................... 682\n21.2 联网类和接口........................ 683\n21.3 InetAddress类 ....................... 683\n21.3.1 工厂方法 ......................... 684\n21.3.2 实例方法 ......................... 685 21.4 Inet4Address类和\nInet6Address类...................... 685\n21.5 TCP\/IP客户端套接字 ........... 686\n21.6 URL类 .................................. 689\nJava 完全参考手册(第 8 版)\nXVI\n21.7 URLConnection类 ................ 691\n21.8 HttpURLConnection类 ......... 694\n21.9 URI类 ................................... 696\n21.10 cookie................................... 696\n21.11 TCP\/IP服务器套接字 ........ 696\n21.12 数据报 ................................. 697\n21.12.1 DatagramSocket类 ..... 697\n21.12.2 DatagramPacket类 ..... 698\n21.12.3 数据报示例 ................ 699\n第22章 Applet类 ............................. 701\n22.1 applet的两种类型................. 701\n22.2 applet的基础知识................. 702\n22.3 applet的架构 ........................ 704\n22.4 applet的骨架 ........................ 705\n22.4.1 applet的初始化和终止 ... 706\n22.4.2 重写update()方法 .......... 707\n22.5 简单的applet显示方法 ........ 707\n22.6 请求重画 ............................... 709\n22.7 使用状态栏窗口 ................... 712\n22.8 HTML APPLET标签 ............ 713\n22.9 向applet传递参数................ 714 22.10 getDocumentBase()和\ngetCodeBase() ...................... 718 22.11 AppletContext接口和\nshowDocument()方法 .......... 718\n22.12 AudioClip接口 ................... 720\n22.13 AppletStub接口 .................. 720\n22.14 向控制台输出 ..................... 720\n第23章 事件处理 .............................. 721\n23.1 两种事件处理机制 ............... 722\n23.2 委托事件模型 ....................... 722\n23.2.1 事件 ................................ 722\n23.2.2 事件源 ............................ 723\n23.2.3 事件监听器 ..................... 723\n23.3 事件类 ................................... 724\n23.3.1 ActionEvent类 ............... 725\n23.3.2 AdjustmentEvent类 ........ 726\n23.3.3 ComponentEvent类 ........ 726\n23.3.4 ContainerEvent类 ........... 727\n23.3.5 FocusEvent类 ................. 727\n23.3.6 InputEvent类................... 728\n23.3.7 ItemEvent类 .................... 729\n23.3.8 KeyEvent类 .................... 730\n23.3.9 MouseEvent类 ................ 730\n23.3.10 MouseWheelEvent类 .... 732\n23.3.11 TextEvent类 .................. 733\n23.3.12 WindowEvent类 ........... 733\n23.4 事件源 ................................... 734\n23.5 事件监听器接口 .................... 735\n23.5.1 ActionListener接口 ........ 736 23.5.2 AdjustmentListener\n接口 ................................. 736 23.5.3 ComponentListener\n接口 ................................. 736\n23.5.4 ContainerListener接口 .... 736\n23.5.5 FocusListener接口 .......... 736\n23.5.6 ItemListener接口 ............ 736\n23.5.7 KeyListener接口 ............. 737\n23.5.8 MouseListener接口 ........ 737 23.5.9 MouseMotionListener\n接口 ................................. 737 23.5.10 MouseWheelListener\n接口 ............................... 737\n23.5.11 TextListener接口 .......... 738 23.5.12 WindowFocusListener\n接口 ............................... 738\n23.5.13 WindowListener接口 .... 738\n23.6 使用委托事件模型 ................ 738\n23.6.1 处理鼠标事件 ................. 739\n23.6.2 处理键盘事件 ................. 741\n23.7 适配器类 ............................... 744\n23.8 内部类 ................................... 746 第24章 AWT介绍：使用窗口、\n图形和文本 .......................... 749\n24.1 AWT类 .................................. 750\n24.2 窗口基本元素........................ 752\n24.2.1 Component类 .................. 752\n目 录\nXVII\n24.2.2 Container类 .................... 753\n24.2.3 Panel类 ........................... 753\n24.2.4 Window类 ...................... 753\n24.2.5 Frame类 ......................... 753\n24.2.6 Canvas类 ........................ 753\n24.3 使用框架窗口 ....................... 753\n24.3.1 设置窗口的尺寸 ............. 754\n24.3.2 隐藏和显示窗口 ............. 754\n24.3.3 设置窗口的标题 ............. 754\n24.3.4 关闭框架窗口 ................. 754\n24.4 在applet中创建框架窗口 .... 755\n24.5 创建基于窗口的程序 ........... 761\n24.6 在窗口中显示信息 ............... 763\n24.7 使用图形 ............................... 763\n24.7.1 绘制直线......................... 764\n24.7.2 绘制矩形......................... 765\n24.7.3 绘制椭圆和圆 ................. 765\n24.7.4 绘制弧形......................... 766\n24.7.5 绘制多边形 ..................... 767\n24.7.6 改变图形的大小 ............. 767\n24.8 使用颜色 ............................... 768\n24.8.1 Color类的方法 ............... 769\n24.8.2 设置当前图形的颜色 ..... 770\n24.8.3 一个演示颜色的applet ... 770\n24.9 设置绘图模式 ....................... 771\n24.10 使用字体 ............................. 773\n24.10.1 确定可用字体 ............ 774\n24.10.2 创建和选择字体 ........ 775\n24.10.3 获取字体信息 ............ 777 24.11 使用FontMetrics管理文本\n输出 ...................................... 778\n24.11.1 显示多行文本 ............ 779\n24.11.2 居中显示文本 ............ 781\n24.11.3 对齐多行文本 ............ 782 第25章 使用AWT控件、布局\n管理器和菜单 ...................... 787\n25.1 控件的基础知识 ................... 788\n25.1.1 添加和移除控件 ............. 788\n25.1.2 响应控件 ......................... 788\n25.1.3 HeadlessException异常 ... 788\n25.2 使用标签 ............................... 789\n25.3 使用命令按钮........................ 790\n25.4 使用复选框............................ 793\n25.5 使用复选框组........................ 795\n25.6 使用下拉列表........................ 796\n25.7 使用列表框............................ 798\n25.8 管理滚动条............................ 801\n25.9 使用TextField ....................... 804\n25.10 使用TextArea ...................... 807\n25.11 理解布局管理器 .................. 808 25.11.1 FlowLayout布局\n管理器 ......................... 809 25.11.2 BorderLayout布局\n管理器 ......................... 811\n25.11.3 使用Insets ................... 812 25.11.4 GridLayout布局\n管理器 ......................... 814 25.11.5 CardLayout布局\n管理器 ......................... 815 25.11.6 GridBagLayout布局\n管理器 ......................... 818\n25.12 菜单栏和菜单 ...................... 823\n25.13 对话框 ................................. 829\n25.14 FileDialog类 ....................... 834 25.15 扩展AWT控件以处理\n事件 ..................................... 835\n25.15.1 扩展按钮 ..................... 836\n25.15.2 扩展复选框 ................. 837\n25.15.3 扩展复选框组 ............. 838\n25.15.4 扩展下拉列表 ............. 839\n25.15.5 扩展列表框 ................. 840\n25.15.6 扩展滚动条 ................. 841\n25.16 关于重载paint()方法 .......... 842\nJava 完全参考手册(第 8 版)\nXVIII\n第26章 图像 ..................................... 843\n26.1 文件格式 ............................... 844 26.2 图像基础：创建、加载与\n显示 ....................................... 844\n26.2.1 创建Image对象 ............. 844\n26.2.2 加载图像......................... 845\n26.2.3 显示图像......................... 845\n26.3 ImageObserver接口 .............. 846\n26.4 双缓存 ................................... 848\n26.5 MediaTracker类 .................... 850\n26.6 ImageProducer接口 .............. 853\n26.7 ImageConsumer接口 ............ 855\n26.8 ImageFilter类 ........................ 857\n26.8.1 CropImageFilter类 ......... 858\n26.8.2 RGBImageFilter类 ......... 860\n26.9 单元格动画 ........................... 870\n26.10 其他图像类 ......................... 873\n第27章 并发实用工具 ...................... 875\n27.1 并发API包 ........................... 876\n27.1.1 java.util.concurrent包 ..... 876 27.1.2 java.util.concurrent.atomic\n包 .................................... 877 27.1.3 java.util.concurrent.locks\n包 .................................... 877\n27.2 使用同步对象 ....................... 877\n27.2.1 Semaphore类 .................. 878\n27.2.2 CountDownLatch类 ....... 884\n27.2.3 CyclicBarrier类 .............. 885\n27.2.4 Exchanger类................... 888\n27.2.5 Phaser类 ......................... 890\n27.3 使用执行器 ........................... 898 27.3.1 一个简单的执行器\n示例 ............................ 898 27.3.2 使用Callable和Future\n接口 ................................ 900\n27.4 TimeUnit枚举 ....................... 903\n27.5 并发集合 ............................... 904\n27.6 锁 ........................................... 905\n27.7 原子操作 ............................... 908 27.8 通过Fork\/Join Framework\n进行并行编程 ........................ 909\n27.8.1 主要的Fork\/Join类 ........ 909\n27.8.2 分而治之的策略 ............. 912 27.8.3 一个简单的Fork\/Join\n示例 ................................. 913 27.8.4 理解并行级别带来的\n影响 ................................. 915 27.8.5 一个使用RecursiveTask<V>\n的例子 ............................. 918\n27.8.6 异步执行任务 ................. 921\n27.8.7 取消任务 ......................... 921\n27.8.8 确定任务的完成状态 ..... 921\n27.8.9 重新启动任务 ................. 922\n27.8.10 深入研究 ....................... 922 27.8.11 关于Fork\/Join Framework\n的一些提示 ................... 923 27.9 并发实用工具与Java传统\n方式的比较............................ 924\n第28章 正则表达式和其他包 ........... 925\n28.1 核心Java API包 ................... 926\n28.2 正则表达式处理 .................... 927\n28.2.1 Pattern类 ......................... 928\n28.2.2 Matcher类 ....................... 928\n28.2.3 正则表达式的语法 ......... 929\n28.2.4 演示模式匹配 ................. 929\n28.2.5 模式匹配的两个选项 ..... 935\n28.2.6 探究正则表达式 ............. 935\n28.3 反射 ....................................... 936\n28.4 远程方法调用........................ 939\n28.5 文本格式化............................ 943\n28.5.1 DateFormat类 ................. 943\n28.5.2 SimpleDateFormat类 ...... 945\n目 录\nXIX\n第Ⅲ部分 使用Java开发软件\n第29章 Java Bean ............................. 951\n29.1 Java Bean是什么 .................. 952\n29.2 Java Bean的优势 .................. 952\n29.3 反省 ....................................... 952\n29.3.1 属性的设计模式 ............. 952\n29.3.2 事件的设计模式 ............. 954\n29.3.3 方法与设计模式 ............. 954\n29.3.4 使用BeanInfo接口 ........ 955\n29.4 绑定属性与约束属性 ........... 955\n29.5 持久性 ................................... 955\n29.6 定制器 ................................... 956\n29.7 Java Bean API ........................ 956\n29.7.1 Introspector类 ................ 958\n29.7.2 PropertyDescriptor类 ..... 958\n29.7.3 EventSetDescriptor类 .... 958\n29.7.4 MethodDescriptor类 ...... 958\n29.8 一个Bean示例 ..................... 958\n第30章 Swing简介 .......................... 963\n30.1 Swing的起源 ........................ 964\n30.2 Swing以AWT为基础 ......... 964\n30.3 两个关键的Swing特性 ....... 964\n30.3.1 Swing组件是轻量级的 ... 964\n30.3.2 Swing支持可插入外观 ... 965\n30.4 MVC连接 ............................. 965\n30.5 组件与容器 ........................... 966\n30.5.1 组件 ................................ 966\n30.5.2 容器 ................................ 967\n30.5.3 顶级容器窗格 ................. 967\n30.6 Swing包 ................................ 967 30.7 一个简单的Swing\n应用程序 ............................... 968\n30.8 事件处理 ............................... 972\n30.9 创建Swing applet ................. 975\n30.10 在Swing中绘图 ................. 977\n30.10.1 绘图的基础知识 ........ 977\n30.10.2 计算可绘制区域 ........ 978\n30.10.3 一个绘图示例 ............. 979\n第31章 探究Swing .......................... 983\n31.1 JLabel与ImageIcon .............. 984\n31.2 JTextField ............................... 985\n31.3 Swing按钮 ............................ 987\n31.3.1 JButton ............................. 988\n31.3.2 JToggleButton .................. 990\n31.3.3 复选框 ............................. 992\n31.3.4 单选按钮 ......................... 994\n31.4 JTabbedPane .......................... 996\n31.5 JScrollPane ............................. 998\n31.6 JList ...................................... 1000\n31.7 JComboBox.......................... 1003\n31.8 树 ......................................... 1006\n31.9 JTable ................................... 1009\n31.10 继续研究Swing ................ 1011\n第32章 servlet ............................... 1013\n32.1 背景 ..................................... 1013\n32.2 sevelet的生命周期 ............. 1014\n32.3 Servlet开发选项 ................. 1015\n32.4 使用Tomcat ......................... 1015\n32.5 一个简单的servlet .............. 1017 32.5.1 创建和编译servlet\n源代码 .......................... 1017\n32.5.2 启动Tomcat ................. 1018 32.5.3 启动Web浏览器并\n请求servlet ................... 1018\n32.6 servlet API ............................ 1018\n32.7 javax.servlet包 .................... 1018\n32.7.1 Servlet接口 .................. 1019\n32.7.2 ServletConfig接口 ....... 1020\n32.7.3 ServletContext接口 ..... 1020\n32.7.4 ServletRequest接口 ..... 1020\n32.7.5 ServletResponse接口 ... 1021\n32.7.6 GenericServlet类 ......... 1022\n32.7.7 ServletInputStream类 ... 1022\n32.7.8 ServletOutputStream类 ... 1022\nJava 完全参考手册(第 8 版)\nXX\n32.7.9 servlet异常类 ............... 1022\n32.8 读取servlet参数 ................. 1022\n32.9 javax.servlet.http包 ............. 1024 32.9.1 HttpServletRequest\n接口 .............................. 1025 32.9.2 HttpServletResponse\n接口 .............................. 1025\n32.9.3 HttpSession接口 .......... 1026 32.9.4 HttpSessionBindingListener\n接口 .............................. 1027\n32.9.5 Cookie类 ...................... 1027\n32.9.6 HttpServlet类 ............... 1028\n32.9.7 HttpSessionEvent类 ..... 1029 32.9.8 HttpSessionBindingEvent\n类 .................................. 1030\n32.10 处理HTTP请求和响应 ... 1030 32.10.1 处理HTTP GET\n请求 .......................... 1030 32.10.2 处理HTTP POST\n请求 .......................... 1032\n32.11 使用cookie ........................ 1033\n32.12 会话跟踪 ........................... 1035 第Ⅳ部分 Java应用\n第33章 applet和servlet在金融领域的 应用 ................................... 1039\n33.1 计算贷款的还款额 ............. 1040\n33.1.1 RegPay中声明的变量 ... 1044\n33.1.2 init()方法....................... 1044\n33.1.3 makeGUI()方法 ............ 1044\n33.1.4 actionPerformed()方法 .... 1047\n33.1.5 compute()方法 .............. 1048\n33.2 计算投资的未来收益 ......... 1048 33.3 计算为达到未来收益所需\n要的初始投资额 ................. 1052 33.4 计算为拿到期望的养老金\n所需要的初始投资额 ......... 1056\n33.5 计算给定投资的最大收益 ... 1060\n33.6 计算贷款余额 ..................... 1064 33.7 创建应用于金融领域的\nservlet ................................... 1068 33.7.1 将RegPay applet转换为\nservlet............................ 1069\n33.7.2 RegPayS servlet ............ 1069\n33.8 一些尝试 ............................. 1072\n第34章 使用Java创建下载管理器 ... 1073\n34.1 理解Internet下载 ............... 1074\n34.2 下载管理器概述 .................. 1074\n34.3 DownLoad类....................... 1075\n34.3.1 DownLoad类的变量 ... 1079 34.3.2 DownLoad类的\n构造函数 ...................... 1079\n34.3.3 download()方法 ............ 1079\n34.3.4 run()方法 ...................... 1079\n34.3.5 stateChanged()方法 ...... 1083\n34.3.6 动作和访问器方法 ...... 1083\n34.4 ProgressRenderer类 ............ 1083\n34.5 DownloadsTableModel类 ... 1084\n34.5.1 addDownload()方法 ..... 1086\n34.5.2 clearDownload()方法 ... 1087\n34.5.3 getColumnClass()方法 ... 1087\n34.5.4 getValueAt()方法 .......... 1087\n34.5.5 update()方法 ................. 1088\n34.6 DownloadManager类 .......... 1088 34.6.1 DownloadManager类的\n变量 .............................. 1094 34.6.2 DownloadManager类的\n构造函数 ...................... 1095\n34.6.3 verifyUrl()方法 ............. 1095 34.6.4 tableSelectionChanged()\n方法 .............................. 1096\n34.6.5 updateButtons()方法 ..... 1096\n34.6.6 处理动作事件 .............. 1097\n34.7 编译和运行下载管理器 ...... 1098\n34.8 进一步完善下载管理器 ...... 1098\n附录 使用Java的文档注释 ............. 1099","pages":"1105","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s21850732.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s21850732.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s21850732.jpg"},"alt":"https:\/\/book.douban.com\/subject\/19955764\/","id":"19955764","publisher":"清华大学出版社","isbn10":"7302300836","isbn13":"9787302300830","title":"Java完全参考手册","url":"https:\/\/api.douban.com\/v2\/book\/19955764","alt_title":"Java: The Complete Reference, 8th Edition","author_intro":"Herbert Schildt是Java、C++、C以及C#语言方面的权威。他撰写的编程书籍在世界范围内销售了数百万册，并且已经被翻译成所有主要的外国语言。他撰写了大量Java方面的书籍，包括Java：A Beginner’s Guide、Herb Schildt’s Java Programming Cookbook、Swing：A Beginner’s Guide以及The Art of Java。","summary":"在《Java完全参考手册(第8版)》中，编程畅销书作者Herb Schildt向您展示了开发、编译、调试以及运行Java程序所需要掌握的全部知识。本书内容丰富，针对Java SE 7进行了全面更新，涵盖了Java语言的方方面面，包括语法、关键字以及基本的编程原则。此外，本书还介绍了Java API库的关键元素，分析了Java Bean、servlet、applet以及Swing，并通过真实的案例演示了Java在编程中的实际应用。在讲解的过程中，书中贯穿了Java SE 7的最新特性，例如带资源的try语句、在switch语句中使用字符串、使用菱形运算符“<>”的类型推断功能、NIO.2输入输出系统以及Fork\/Join Framework。","price":"128.00元"},{"rating":{"max":10,"numRaters":5,"average":"0.0","min":0},"subtitle":"","author":["Tim Lindholm","Frank Yellin","Gilad Bracha","Alex Buckley"],"pubdate":"2014-5-17","tags":[{"count":10,"name":"Java","title":"Java"},{"count":7,"name":"JVM","title":"JVM"},{"count":1,"name":"计算机","title":"计算机"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29404592.jpg","binding":"Paperback","translator":[],"catalog":"1 Introduction 1\n1.1 Organization of the Specification 2\n1.2 Example Programs 6\n1.3 Notation 6\n1.4 Relationship to Predefined Classes and Interfaces 7\n1.5 Feedback 7\n1.6 References 7\n2 Grammars 9\n2.1 Context-Free Grammars 9\n2.2 The Lexical Grammar 9\n2.3 The Syntactic Grammar 10\n2.4 Grammar Notation 10\n3 Lexical Structure 15\n3.1 Unicode 15\n3.2 Lexical Translations 16\n3.3 Unicode Escapes 17\n3.4 Line Terminators 19\n3.5 Input Elements and Tokens 19\n3.6 White Space 20\n3.7 Comments 21\n3.8 Identifiers 22\n3.9 Keywords 24\n3.10 Literals 24\n3.10.1 Integer Literals 25\n3.10.2 Floating-Point Literals 31\n3.10.3 Boolean Literals 34\n3.10.4 Character Literals 34\n3.10.5 String Literals 35\n3.10.6 Escape Sequences for Character and String Literals 37\n3.10.7 The Null Literal 38\n3.11 Separators 38\n3.12 Operators 39The Java® Language Specification\nvi\n4 Types, Values, and Variables 41\n4.1 The Kinds of Types and Values 41\n4.2 Primitive Types and Values 42\n4.2.1 Integral Types and Values 43\n4.2.2 Integer Operations 43\n4.2.3 Floating-Point Types, Formats, and Values 45\n4.2.4 Floating-Point Operations 48\n4.2.5 The boolean Type and boolean Values 51\n4.3 Reference Types and Values 52\n4.3.1 Objects 53\n4.3.2 The Class Object 56\n4.3.3 The Class String 56\n4.3.4 When Reference Types Are the Same 57\n4.4 Type Variables 57\n4.5 Parameterized Types 59\n4.5.1 Type Arguments of Parameterized Types 60\n4.5.2 Members and Constructors of Parameterized Types 63\n4.6 Type Erasure 64\n4.7 Reifiable Types 65\n4.8 Raw Types 66\n4.9 Intersection Types 70\n4.10 Subtyping 71\n4.10.1 Subtyping among Primitive Types 71\n4.10.2 Subtyping among Class and Interface Types 72\n4.10.3 Subtyping among Array Types 73\n4.10.4 Least Upper Bound 73\n4.11 Where Types Are Used 76\n4.12 Variables 80\n4.12.1 Variables of Primitive Type 81\n4.12.2 Variables of Reference Type 81\n4.12.3 Kinds of Variables 83\n4.12.4 final Variables 85\n4.12.5 Initial Values of Variables 87\n4.12.6 Types, Classes, and Interfaces 88\n5 Conversions and Contexts 91\n5.1 Kinds of Conversion 94\n5.1.1 Identity Conversion 94\n5.1.2 Widening Primitive Conversion 94\n5.1.3 Narrowing Primitive Conversion 96\n5.1.4 Widening and Narrowing Primitive Conversion 99\n5.1.5 Widening Reference Conversion 99\n5.1.6 Narrowing Reference Conversion 99\n5.1.7 Boxing Conversion 100\n5.1.8 Unboxing Conversion 102\n5.1.9 Unchecked Conversion 103\n5.1.10 Capture Conversion 103The Java® Language Specification\nvii\n5.1.11 String Conversion 105\n5.1.12 Forbidden Conversions 106\n5.1.13 Value Set Conversion 106\n5.2 Assignment Contexts 107\n5.3 Invocation Contexts 112\n5.4 String Contexts 114\n5.5 Casting Contexts 114\n5.5.1 Reference Type Casting 118\n5.5.2 Checked Casts and Unchecked Casts 122\n5.5.3 Checked Casts at Run Time 123\n5.6 Numeric Contexts 125\n5.6.1 Unary Numeric Promotion 125\n5.6.2 Binary Numeric Promotion 126\n6 Names 129\n6.1 Declarations 130\n6.2 Names and Identifiers 137\n6.3 Scope of a Declaration 139\n6.4 Shadowing and Obscuring 142\n6.4.1 Shadowing 144\n6.4.2 Obscuring 147\n6.5 Determining the Meaning of a Name 148\n6.5.1 Syntactic Classification of a Name According to Context 149\n6.5.2 Reclassification of Contextually Ambiguous Names 152\n6.5.3 Meaning of Package Names 154\n6.5.3.1 Simple Package Names 155\n6.5.3.2 Qualified Package Names 155\n6.5.4 Meaning of PackageOrTypeNames 155\n6.5.4.1 Simple PackageOrTypeNames 155\n6.5.4.2 Qualified PackageOrTypeNames 155\n6.5.5 Meaning of Type Names 155\n6.5.5.1 Simple Type Names 156\n6.5.5.2 Qualified Type Names 156\n6.5.6 Meaning of Expression Names 156\n6.5.6.1 Simple Expression Names 156\n6.5.6.2 Qualified Expression Names 157\n6.5.7 Meaning of Method Names 160\n6.5.7.1 Simple Method Names 160\n6.6 Access Control 161\n6.6.1 Determining Accessibility 162\n6.6.2 Details on protected Access 166\n6.6.2.1 Access to a protected Member 167\n6.6.2.2 Qualified Access to a protected Constructor 167\n6.7 Fully Qualified Names and Canonical Names 169\n7 Packages 173\n7.1 Package Members 173The Java® Language Specification\nviii\n7.2 Host Support for Packages 175\n7.3 Compilation Units 177\n7.4 Package Declarations 178\n7.4.1 Named Packages 178\n7.4.2 Unnamed Packages 179\n7.4.3 Observability of a Package 179\n7.5 Import Declarations 180\n7.5.1 Single-Type-Import Declarations 180\n7.5.2 Type-Import-on-Demand Declarations 183\n7.5.3 Single-Static-Import Declarations 184\n7.5.4 Static-Import-on-Demand Declarations 184\n7.6 Top Level Type Declarations 185\n8 Classes 189\n8.1 Class Declarations 191\n8.1.1 Class Modifiers 191\n8.1.1.1 abstract Classes 192\n8.1.1.2 final Classes 194\n8.1.1.3 strictfp Classes 194\n8.1.2 Generic Classes and Type Parameters 194\n8.1.3 Inner Classes and Enclosing Instances 197\n8.1.4 Superclasses and Subclasses 200\n8.1.5 Superinterfaces 202\n8.1.6 Class Body and Member Declarations 205\n8.2 Class Members 206\n8.3 Field Declarations 211\n8.3.1 Field Modifiers 215\n8.3.1.1 static Fields 216\n8.3.1.2 final Fields 219\n8.3.1.3 transient Fields 219\n8.3.1.4 volatile Fields 220\n8.3.2 Field Initialization 221\n8.3.3 Forward References During Field Initialization 222\n8.4 Method Declarations 225\n8.4.1 Formal Parameters 226\n8.4.2 Method Signature 230\n8.4.3 Method Modifiers 231\n8.4.3.1 abstract Methods 232\n8.4.3.2 static Methods 233\n8.4.3.3 final Methods 234\n8.4.3.4 native Methods 235\n8.4.3.5 strictfp Methods 235\n8.4.3.6 synchronized Methods 235\n8.4.4 Generic Methods 237\n8.4.5 Method Result 237\n8.4.6 Method Throws 238\n8.4.7 Method Body 240The Java® Language Specification\nix\n8.4.8 Inheritance, Overriding, and Hiding 240\n8.4.8.1 Overriding (by Instance Methods) 241\n8.4.8.2 Hiding (by Class Methods) 245\n8.4.8.3 Requirements in Overriding and Hiding 246\n8.4.8.4 Inheriting Methods with Override-Equivalent\nSignatures 250\n8.4.9 Overloading 250\n8.5 Member Type Declarations 254\n8.5.1 Static Member Type Declarations 254\n8.6 Instance Initializers 255\n8.7 Static Initializers 255\n8.8 Constructor Declarations 256\n8.8.1 Formal Parameters 257\n8.8.2 Constructor Signature 258\n8.8.3 Constructor Modifiers 258\n8.8.4 Generic Constructors 259\n8.8.5 Constructor Throws 259\n8.8.6 The Type of a Constructor 259\n8.8.7 Constructor Body 259\n8.8.7.1 Explicit Constructor Invocations 260\n8.8.8 Constructor Overloading 264\n8.8.9 Default Constructor 265\n8.8.10 Preventing Instantiation of a Class 266\n8.9 Enum Types 266\n8.9.1 Enum Constants 267\n8.9.2 Enum Body Declarations 268\n8.9.3 Enum Members 271\n9 Interfaces 277\n9.1 Interface Declarations 278\n9.1.1 Interface Modifiers 278\n9.1.1.1 abstract Interfaces 279\n9.1.1.2 strictfp Interfaces 279\n9.1.2 Generic Interfaces and Type Parameters 279\n9.1.3 Superinterfaces and Subinterfaces 280\n9.1.4 Interface Body and Member Declarations 282\n9.2 Interface Members 282\n9.3 Field (Constant) Declarations 283\n9.3.1 Initialization of Fields in Interfaces 285\n9.4 Method Declarations 286\n9.4.1 Inheritance and Overriding 287\n9.4.1.1 Overriding (by Instance Methods) 288\n9.4.1.2 Requirements in Overriding 289\n9.4.1.3 Inheriting Methods with Override-Equivalent\nSignatures 289\n9.4.2 Overloading 290\n9.4.3 Interface Method Body 291The Java® Language Specification\nx\n9.5 Member Type Declarations 291\n9.6 Annotation Types 292\n9.6.1 Annotation Type Elements 293\n9.6.2 Defaults for Annotation Type Elements 297\n9.6.3 Repeatable Annotation Types 298\n9.6.4 Predefined Annotation Types 302\n9.6.4.1 @Target 302\n9.6.4.2 @Retention 303\n9.6.4.3 @Inherited 304\n9.6.4.4 @Override 304\n9.6.4.5 @SuppressWarnings 305\n9.6.4.6 @Deprecated 306\n9.6.4.7 @SafeVarargs 307\n9.6.4.8 @Repeatable 308\n9.6.4.9 @FunctionalInterface 308\n9.7 Annotations 308\n9.7.1 Normal Annotations 309\n9.7.2 Marker Annotations 311\n9.7.3 Single-Element Annotations 312\n9.7.4 Where Annotations May Appear 313\n9.7.5 Multiple Annotations Of The Same Type 318\n9.8 Functional Interfaces 319\n9.9 Function Types 323\n10 Arrays 329\n10.1 Array Types 330\n10.2 Array Variables 330\n10.3 Array Creation 332\n10.4 Array Access 332\n10.5 Array Store Exception 333\n10.6 Array Initializers 335\n10.7 Array Members 336\n10.8 Class Objects for Arrays 338\n10.9 An Array of Characters is Not a String 339\n11 Exceptions 341\n11.1 The Kinds and Causes of Exceptions 342\n11.1.1 The Kinds of Exceptions 342\n11.1.2 The Causes of Exceptions 343\n11.1.3 Asynchronous Exceptions 344\n11.2 Compile-Time Checking of Exceptions 345\n11.2.1 Exception Analysis of Expressions 346\n11.2.2 Exception Analysis of Statements 347\n11.2.3 Exception Checking 348\n11.3 Run-Time Handling of an Exception 350The Java® Language Specification\nxi\n12 Execution 355\n12.1 Java Virtual Machine Startup 355\n12.1.1 Load the Class Test 356\n12.1.2 Link Test: Verify, Prepare, (Optionally) Resolve 356\n12.1.3 Initialize Test: Execute Initializers 357\n12.1.4 Invoke Test.main 358\n12.2 Loading of Classes and Interfaces 358\n12.2.1 The Loading Process 359\n12.3 Linking of Classes and Interfaces 360\n12.3.1 Verification of the Binary Representation 360\n12.3.2 Preparation of a Class or Interface Type 361\n12.3.3 Resolution of Symbolic References 361\n12.4 Initialization of Classes and Interfaces 362\n12.4.1 When Initialization Occurs 363\n12.4.2 Detailed Initialization Procedure 365\n12.5 Creation of New Class Instances 367\n12.6 Finalization of Class Instances 371\n12.6.1 Implementing Finalization 372\n12.6.2 Interaction with the Memory Model 374\n12.7 Unloading of Classes and Interfaces 375\n12.8 Program Exit 376\n13 Binary Compatibility 377\n13.1 The Form of a Binary 378\n13.2 What Binary Compatibility Is and Is Not 384\n13.3 Evolution of Packages 385\n13.4 Evolution of Classes 385\n13.4.1 abstract Classes 385\n13.4.2 final Classes 385\n13.4.3 public Classes 386\n13.4.4 Superclasses and Superinterfaces 386\n13.4.5 Class Type Parameters 387\n13.4.6 Class Body and Member Declarations 388\n13.4.7 Access to Members and Constructors 389\n13.4.8 Field Declarations 390\n13.4.9 final Fields and static Constant Variables 393\n13.4.10 static Fields 395\n13.4.11 transient Fields 395\n13.4.12 Method and Constructor Declarations 396\n13.4.13 Method and Constructor Type Parameters 396\n13.4.14 Method and Constructor Formal Parameters 397\n13.4.15 Method Result Type 398\n13.4.16 abstract Methods 398\n13.4.17 final Methods 399\n13.4.18 native Methods 399\n13.4.19 static Methods 400\n13.4.20 synchronized Methods 400he Java® Language Specification\nxii\n13.4.21 Method and Constructor Throws 400\n13.4.22 Method and Constructor Body 400\n13.4.23 Method and Constructor Overloading 401\n13.4.24 Method Overriding 402\n13.4.25 Static Initializers 402\n13.4.26 Evolution of Enums 402\n13.5 Evolution of Interfaces 402\n13.5.1 public Interfaces 402\n13.5.2 Superinterfaces 403\n13.5.3 Interface Members 403\n13.5.4 Interface Type Parameters 403\n13.5.5 Field Declarations 404\n13.5.6 Interface Method Declarations 404\n13.5.7 Evolution of Annotation Types 405\n14 Blocks and Statements 407\n14.1 Normal and Abrupt Completion of Statements 407\n14.2 Blocks 409\n14.3 Local Class Declarations 409\n14.4 Local Variable Declaration Statements 410\n14.4.1 Local Variable Declarators and Types 411\n14.4.2 Execution of Local Variable Declarations 412\n14.5 Statements 412\n14.6 The Empty Statement 414\n14.7 Labeled Statements 415\n14.8 Expression Statements 416\n14.9 The if Statement 417\n14.9.1 The if-then Statement 417\n14.9.2 The if-then-else Statement 418\n14.10 The assert Statement 418\n14.11 The switch Statement 421\n14.12 The while Statement 425\n14.12.1 Abrupt Completion of while Statement 426\n14.13 The do Statement 426\n14.13.1 Abrupt Completion of do Statement 427\n14.14 The for Statement 428\n14.14.1 The basic for Statement 428\n14.14.1.1 Initialization of for Statement 429\n14.14.1.2 Iteration of for Statement 429\n14.14.1.3 Abrupt Completion of for Statement 430\n14.14.2 The enhanced for statement 431\n14.15 The break Statement 434\n14.16 The continue Statement 436\n14.17 The return Statement 438\n14.18 The throw Statement 439\n14.19 The synchronized Statement 441\n14.20 The try statement 442The Java® Language Specification\nxiii\n14.20.1 Execution of try-catch 446\n14.20.2 Execution of try-finally and try-catch-finally 447\n14.20.3 try-with-resources 449\n14.20.3.1 Basic try-with-resources 450\n14.20.3.2 Extended try-with-resources 453\n14.21 Unreachable Statements 454\n15 Expressions 461\n15.1 Evaluation, Denotation, and Result 461\n15.2 Forms of Expressions 462\n15.3 Type of an Expression 463\n15.4 FP-strict Expressions 464\n15.5 Expressions and Run-Time Checks 464\n15.6 Normal and Abrupt Completion of Evaluation 466\n15.7 Evaluation Order 468\n15.7.1 Evaluate Left-Hand Operand First 468\n15.7.2 Evaluate Operands before Operation 470\n15.7.3 Evaluation Respects Parentheses and Precedence 471\n15.7.4 Argument Lists are Evaluated Left-to-Right 472\n15.7.5 Evaluation Order for Other Expressions 473\n15.8 Primary Expressions 473\n15.8.1 Lexical Literals 474\n15.8.2 Class Literals 475\n15.8.3 this 476\n15.8.4 Qualified this 477\n15.8.5 Parenthesized Expressions 477\n15.9 Class Instance Creation Expressions 478\n15.9.1 Determining the Class being Instantiated 479\n15.9.2 Determining Enclosing Instances 481\n15.9.3 Choosing the Constructor and its Arguments 483\n15.9.4 Run-Time Evaluation of Class Instance Creation\nExpressions 485\n15.9.5 Anonymous Class Declarations 487\n15.9.5.1 Anonymous Constructors 487\n15.10 Array Creation and Access Expressions 488\n15.10.1 Array Creation Expressions 488\n15.10.2 Run-Time Evaluation of Array Creation Expressions 489\n15.10.3 Array Access Expressions 493\n15.10.4 Run-Time Evaluation of Array Access Expressions 493\n15.11 Field Access Expressions 496\n15.11.1 Field Access Using a Primary 496\n15.11.2 Accessing Superclass Members using super 499\n15.12 Method Invocation Expressions 500\n15.12.1 Compile-Time Step 1: Determine Class or Interface to\nSearch 502\n15.12.2 Compile-Time Step 2: Determine Method Signature 504\n15.12.2.1 Identify Potentially Applicable Methods 510he Java® Language Specification\nxiv\n15.12.2.2 Phase 1: Identify Matching Arity Methods Applicable\nby Strict Invocation 513\n15.12.2.3 Phase 2: Identify Matching Arity Methods Applicable\nby Loose Invocation 514\n15.12.2.4 Phase 3: Identify Methods Applicable by Variable Arity\nInvocation 514\n15.12.2.5 Choosing the Most Specific Method 515\n15.12.2.6 Method Invocation Type 518\n15.12.3 Compile-Time Step 3: Is the Chosen Method Appropriate? 518\n15.12.4 Run-Time Evaluation of Method Invocation 521\n15.12.4.1 Compute Target Reference (If Necessary) 522\n15.12.4.2 Evaluate Arguments 523\n15.12.4.3 Check Accessibility of Type and Method 524\n15.12.4.4 Locate Method to Invoke 525\n15.12.4.5 Create Frame, Synchronize, Transfer Control 529\n15.13 Method Reference Expressions 531\n15.13.1 Compile-Time Declaration of a Method Reference 534\n15.13.2 Type of a Method Reference 539\n15.13.3 Run-time Evaluation of Method References 541\n15.14 Postfix Expressions 544\n15.14.1 Expression Names 545\n15.14.2 Postfix Increment Operator ++ 545\n15.14.3 Postfix Decrement Operator -- 545\n15.15 Unary Operators 546\n15.15.1 Prefix Increment Operator ++ 548\n15.15.2 Prefix Decrement Operator -- 548\n15.15.3 Unary Plus Operator + 549\n15.15.4 Unary Minus Operator - 549\n15.15.5 Bitwise Complement Operator ~ 550\n15.15.6 Logical Complement Operator ! 550\n15.16 Cast Expressions 550\n15.17 Multiplicative Operators 552\n15.17.1 Multiplication Operator * 553\n15.17.2 Division Operator \/ 554\n15.17.3 Remainder Operator % 555\n15.18 Additive Operators 558\n15.18.1 String Concatenation Operator + 558\n15.18.2 Additive Operators (+ and -) for Numeric Types 561\n15.19 Shift Operators 563\n15.20 Relational Operators 564\n15.20.1 Numerical Comparison Operators <, <=, >, and >= 564\n15.20.2 Type Comparison Operator instanceof 566\n15.21 Equality Operators 567\n15.21.1 Numerical Equality Operators == and != 567\n15.21.2 Boolean Equality Operators == and != 568\n15.21.3 Reference Equality Operators == and != 569\n15.22 Bitwise and Logical Operators 569\n15.22.1 Integer Bitwise Operators &, ^, and | 570The Java® Language Specification\nxv\n15.22.2 Boolean Logical Operators &, ^, and | 571\n15.23 Conditional-And Operator && 571\n15.24 Conditional-Or Operator || 572\n15.25 Conditional Operator ? : 573\n15.25.1 Boolean Conditional Expressions 580\n15.25.2 Numeric Conditional Expressions 580\n15.25.3 Reference Conditional Expressions 581\n15.26 Assignment Operators 582\n15.26.1 Simple Assignment Operator = 583\n15.26.2 Compound Assignment Operators 589\n15.27 Lambda Expressions 595\n15.27.1 Lambda Parameters 597\n15.27.2 Lambda Body 600\n15.27.3 Type of a Lambda Expression 603\n15.27.4 Run-time Evaluation of Lambda Expressions 605\n15.28 Constant Expressions 606\n16 Definite Assignment 609\n16.1 Definite Assignment and Expressions 615\n16.1.1 Boolean Constant Expressions 615\n16.1.2 Conditional-And Operator && 615\n16.1.3 Conditional-Or Operator || 616\n16.1.4 Logical Complement Operator ! 616\n16.1.5 Conditional Operator ? : 616\n16.1.6 Conditional Operator ? : 617\n16.1.7 Other Expressions of Type boolean 617\n16.1.8 Assignment Expressions 617\n16.1.9 Operators ++ and -- 618\n16.1.10 Other Expressions 618\n16.2 Definite Assignment and Statements 619\n16.2.1 Empty Statements 619\n16.2.2 Blocks 619\n16.2.3 Local Class Declaration Statements 621\n16.2.4 Local Variable Declaration Statements 621\n16.2.5 Labeled Statements 621\n16.2.6 Expression Statements 622\n16.2.7 if Statements 622\n16.2.8 assert Statements 622\n16.2.9 switch Statements 623\n16.2.10 while Statements 623\n16.2.11 do Statements 624\n16.2.12 for Statements 624\n16.2.12.1 Initialization Part of for Statement 625\n16.2.12.2 Incrementation Part of for Statement 625\n16.2.13 break, continue, return, and throw Statements 626\n16.2.14 synchronized Statements 626\n16.2.15 try Statements 626he Java® Language Specification\nxvi\n16.3 Definite Assignment and Parameters 628\n16.4 Definite Assignment and Array Initializers 628\n16.5 Definite Assignment and Enum Constants 628\n16.6 Definite Assignment and Anonymous Classes 629\n16.7 Definite Assignment and Member Types 629\n16.8 Definite Assignment and Static Initializers 630\n16.9 Definite Assignment, Constructors, and Instance Initializers 630\n17 Threads and Locks 633\n17.1 Synchronization 634\n17.2 Wait Sets and Notification 634\n17.2.1 Wait 635\n17.2.2 Notification 636\n17.2.3 Interruptions 637\n17.2.4 Interactions of Waits, Notification, and Interruption 637\n17.3 Sleep and Yield 638\n17.4 Memory Model 639\n17.4.1 Shared Variables 642\n17.4.2 Actions 642\n17.4.3 Programs and Program Order 643\n17.4.4 Synchronization Order 644\n17.4.5 Happens-before Order 645\n17.4.6 Executions 648\n17.4.7 Well-Formed Executions 649\n17.4.8 Executions and Causality Requirements 649\n17.4.9 Observable Behavior and Nonterminating Executions 652\n17.5 final Field Semantics 654\n17.5.1 Semantics of final Fields 656\n17.5.2 Reading final Fields During Construction 656\n17.5.3 Subsequent Modification of final Fields 657\n17.5.4 Write-protected Fields 658\n17.6 Word Tearing 659\n17.7 Non-atomic Treatment of double and long 660\n18 Type Inference 661\n18.1 Concepts and Notation 662\n18.1.1 Inference Variables 662\n18.1.2 Constraint Formulas 663\n18.1.3 Bounds 663\n18.2 Reduction 665\n18.2.1 Expression Compatibility Constraints 665\n18.2.2 Type Compatibility Constraints 670\n18.2.3 Subtyping Constraints 670\n18.2.4 Type Equality Constraints 672\n18.2.5 Checked Exception Constraints 673\n18.3 Incorporation 675\n18.3.1 Complementary Pairs of Bounds 676he Java® Language Specification\nxvii\n18.3.2 Bounds Involving Capture Conversion 676\n18.4 Resolution 677\n18.5 Uses of Inference 679\n18.5.1 Invocation Applicability Inference 680\n18.5.2 Invocation Type Inference 681\n18.5.3 Functional Interface Parameterization Inference 687\n18.5.4 More Specific Method Inference 688\n19 Syntax 691\nIndex 717\nA Limited License Grant 757","pages":"600","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29404592.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29404592.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29404592.jpg"},"alt":"https:\/\/book.douban.com\/subject\/25931467\/","id":"25931467","publisher":"Addison-Wesley Professional","isbn10":"013390590X","isbn13":"9780133905908","title":"The Java Virtual Machine Specification, Java SE 8 Edition","url":"https:\/\/api.douban.com\/v2\/book\/25931467","alt_title":"","author_intro":"Tim Lindholm is a former Distinguished Engineer at Sun Microsystems. He was a contributor to the Java programming language and the senior architect of the Java Virtual Machine, later working on Java for mobile devices. Prior to Sun, he worked on virtual machines and runtime systems for Prolog at Argonne National Laboratory and Quintus. He holds a B.A. in Mathematics from Carleton College.\n\nFrank Yellin is a former Staff Engineer at Sun Microsystems. He was an original member of the Java project and spent a decade working on runtime systems for interpreted and compiled languages. Prior to Sun, he worked on the compilation of Common Lisp at Lucid. He holds an A.B. in Applied Mathematics from Harvard and an M.S. in Computer Science from Stanford.\n\nGilad Bracha is the creator of the Newspeak programming language and a former Distinguished Engineer at Sun Microsystems. Prior to Sun, he worked on Strongtalk, the Animorphic Smalltalk System. He holds a Ph.D. in Computer Science from the University of Utah.\n\nAlex Buckley is the Specification Lead for the Java programming language and the Java Virtual Machine at Oracle. He holds a Ph.D. in Computing from Imperial College London.\n","summary":"Written by the inventors of the technology, The Java® Virtual Machine Specification, Java SE 8 Edition is the definitive technical reference for the Java Virtual Machine.\n\nThe book provides complete, accurate, and detailed coverage of the Java Virtual Machine. It fully describes the new features added in Java SE 8, including the invocation of default methods and the class file extensions for type annotations and method parameters. The book also clarifies the interpretation of class file attributes and the rules of bytecode verification.","price":"USD 59.99"},{"rating":{"max":10,"numRaters":2,"average":"0.0","min":0},"subtitle":"","author":["蒂姆·林霍尔姆 (Tim Lindholm)","费兰克·耶林 (Frank Yellin)","吉拉德·布拉查 (Gilad Bracha)","亚力克斯·巴克利 (Alex Buckley)"],"pubdate":"2016-4-1","tags":[{"count":6,"name":"JVM","title":"JVM"},{"count":4,"name":"java","title":"java"},{"count":3,"name":"虚拟机","title":"虚拟机"},{"count":3,"name":"Java","title":"Java"},{"count":2,"name":"计算机","title":"计算机"},{"count":1,"name":"编程","title":"编程"}],"origin_title":"The Java Virtual Machine Specification (Java SE 8 Edition)","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29404594.jpg","binding":"平装","translator":[],"catalog":"目录\n前言\n1 Introduction\n1.1 A Bit of History\n1.2 The Java Virtual Machine\n1.3 Organization of the Specification\n1.4 Notation\n1.5 Feedback\n2 The Structure of the Java Virtual Machine\n2.1 The  class File Format\n2.2 Data Types\n2.3 Primitive Types and Values\n2.3.1 Integral Types and Values\n2.3.2 Floating-Point Types, Value Sets, and Values\n2.3.3 The  returnAddress Type and Values\n2.3.4 The  boolean Type\n2.4 Reference Types and Values\n2.5 Run-Time Data Areas\n2.5.1 The  pc Register\n2.5.2 Java Virtual Machine Stacks\n2.5.3 Heap\n2.5.4 Method Area\n2.5.5 Run-Time Constant Pool\n2.5.6 Native Method Stacks\n2.6 Frames\n2.6.1 Local Variables\n2.6.2 Operand Stacks\n2.6.3 Dynamic Linking\n2.6.4 Normal Method Invocation Completion\n2.6.5 Abrupt Method Invocation Completion\n2.7 Representation of Objects\n2.8 Floating-Point Arithmetic\n2.8.1 Java Virtual Machine Floating-Point Arithmetic and IEEE 754\n2.8.2 Floating-Point Modes\n2.8.3 Value Set Conversion\n2.9 Special Methods\n2.10 Exceptions\n2.11 Instruction Set Summary\n2.11.1 Types and the Java Virtual Machine\n2.11.2 Load and Store Instructions\n2.11.3 Arithmetic Instructions\n2.11.4 Type Conversion Instructions\n2.11.5 Object Creation and Manipulation\n2.11.6 Operand Stack Management Instructions\n2.11.7 Control Transfer Instructions\n2.11.8 Method Invocation and Return Instructions\n2.11.9 Throwing Exceptions\n2.11.10 Synchronization\n2.12 Class Libraries\n2.13 Public Design, Private Implementation\n3 Compiling for the Java Virtual Machine\n3.1 Format of Examples\n3.2 Use of Constants, Local Variables, and Control Constructs\n3.3 Arithmetic\n3.4 Accessing the Run-Time Constant Pool\n3.5 More Control Examples\n3.6 Receiving Arguments\n3.7 Invoking Methods\n3.8 Working with Class Instances\n3.9 Arrays\n3.10 Compiling Switches\n3.11 Operations on the Operand Stack\n3.12 Throwing and Handling Exceptions\n3.13 Compiling finally\n3.14 Synchronization\n3.15 Annotations\n4 The class File Format\n4.1 The ClassFile Structure\n4.2 The Internal Form of Names\n4.2.1 Binary Class and Interface Names\n4.2.2 Unqualified Names\n4.3 Descriptors\n4.3.1 Grammar Notation\n4.3.2 Field Descriptors\n4.3.3 Method Descriptors\n4.4 The Constant Pool\n4.4.1 The CONSTANT_Class_info Structure\n4.4.2 The CONSTANT_Fieldref_info, CONSTANT_Methodref_info, and CONSTANT_InterfaceMethodref_info Structures\n4.4.3 The CONSTANT_String_info Structure\n4.4.4 The CONSTANT_Integer_info and CONSTANT_Float_info Structures\n4.4.5 The CONSTANT_Long_info and CONSTANT_Double_info Structures\n4.4.6 The CONSTANT_NameAndType_info Structure\n4.4.7 The CONSTANT_Utf8_info Structure\n4.4.8 The CONSTANT_MethodHandle_info Structure\n4.4.9 The CONSTANT_MethodType_info Structure\n4.4.10 The CONSTANT_InvokeDynamic_info Structure\n4.5 Fields\n4.6 Methods\n4.7 Attributes\n4.7.1 Defining and Naming New Attributes\n4.7.2 The ConstantValue Attribute\n4.7.3 The Code Attribute\n4.7.4 The StackMapTable Attribute\n4.7.5 The Exceptions Attribute\n4.7.6 The InnerClasses Attribute\n4.7.7 The EnclosingMethod Attribute\n4.7.8 The Synthetic Attribute\n4.7.9 The Signature Attribute\n4.7.9.1 Signatures\n4.7.10 The SourceFile Attribute\n4.7.11 The SourceDebugExtension Attribute\n4.7.12 The LineNumberTable Attribute\n4.7.13 The LocalVariableTable Attribute\n4.7.14 The LocalVariableTypeTable Attribute\n4.7.15 The Deprecated Attribute\n4.7.16 The RuntimeVisibleAnnotations Attribute\n4.7.16.1 The element_value structure\n4.7.17 The RuntimeInvisibleAnnotations Attribute\n4.7.18 The RuntimeVisibleParameterAnnotations Attribute\n4.7.19 The RuntimeInvisibleParameterAnnotations Attribute\n4.7.20 The RuntimeVisibleTypeAnnotations Attribute\n4.7.20.1 The target_info union\n4.7.20.2 The type_path structure\n4.7.21 The RuntimeInvisibleTypeAnnotations Attribute\n4.7.22 The AnnotationDefault Attribute\n4.7.23 The BootstrapMethods Attribute\n4.7.24 The MethodParameters Attribute\n4.8 Format Checking\n4.9 Constraints on Java Virtual Machine Code\n4.9.1 Static Constraints\n4.9.2 Structural Constraints\n4.10 Verification of class Files\n4.10.1 Verification by Type Checking\n4.10.1.1 Accessors for Java Virtual Machine Artifacts\n4.10.1.2 Verification Type System\n4.10.1.3 Instruction Representation\n4.10.1.4 Stack Map Frame Representation\n4.10.1.5 Type Checking Abstract and Native Methods\n4.10.1.6 Type Checking Methods with Code\n4.10.1.7 Type Checking Load and Store Instructions\n4.10.1.8 Type Checking for protected Members\n4.10.1.9 Type Checking Instructions\n4.10.2 Verification by Type Inference\n4.10.2.1 The Process of Verification by Type Inference\n4.10.2.2 The Bytecode Verifier\n4.10.2.3 Values of Types long and double\n4.10.2.4 Instance Initialization Methods and Newly Created Objects\n4.10.2.5 Exceptions and finally\n4.11 Limitations of the Java Virtual Machine\n5 Loading, Linking, and Initializing\n5.1 The Run-Time Constant Pool\n5.2 Java Virtual Machine Startup\n5.3 Creation and Loading\n5.3.1 Loading Using the Bootstrap Class Loader\n5.3.2 Loading Using a User-defined Class Loader\n5.3.3 Creating Array Classes\n5.3.4 Loading Constraints\n5.3.5 Deriving a Class from a class File Representation\n5.4 Linking\n5.4.1 Verification\n5.4.2 Preparation\n5.4.3 Resolution\n5.4.3.1 Class and Interface Resolution\n5.4.3.2 Field Resolution\n5.4.3.3 Method Resolution\n5.4.3.4 Interface Method Resolution\n5.4.3.5 Method Type and Method Handle Resolution\n5.4.3.6 Call Site Specifier Resolution\n5.4.4 Access Control\n5.4.5 Overriding\n5.5 Initialization\n5.6 Binding Native Method Implementations\n5.7 Java Virtual Machine Exit\n6 The Java Virtual Machine Instruction Set\n6.1 Assumptions: The Meaning of \"Must\"\n6.2 Reserved Opcodes\n6.3 Virtual Machine Errors\n6.4 Format of Instruction Descriptions\nmnemonic\n6.5 Instructions\naaload\naastore\naconst_null\naload\naload_<n>\nanewarray\nareturn\narraylength\nastore\nastore_<n>\nathrow\nbaload\nbastore\nbipush\ncaload\ncastore\ncheckcast\nd2f\nd2i\nd2l\ndadd\ndaload\ndastore\ndcmp<op>\ndconst_<d>\nddiv\ndload\ndload_<n>\ndmul\ndneg\ndrem\ndreturn\ndstore\ndstore_<n>\ndsub\ndup\ndup_x1\ndup_x2\ndup2\ndup2_x1\ndup2_x2\nf2d\nf2i\nf2l\nfadd\nfaload\nfastore\nfcmp<op>\nfconst_<f>\nfdiv\nfload\nfload_<n>\nfmul\nfneg\nfrem\nfreturn\nfstore\nfstore_<n>\nfsub\ngetfield\ngetstatic\ngoto\ngoto_w\ni2b\ni2c\ni2d\ni2f\ni2l\ni2s\niadd\niaload\niand\niastore\niconst_<i>\nidiv\nif_acmp<cond>\nif_icmp<cond>\nif<cond>\nifnonnull\nifnull\niinc\niload\niload_<n>\nimul\nineg\ninstanceof\ninvokedynamic\ninvokeinterface\ninvokespecial\ninvokestatic\ninvokevirtual\nior\nirem\nireturn\nishl\nishr\nistore\nistore_<n>\nisub\niushr\nixor\njsr\njsr_w\nl2d\nl2f\nl2i\nladd\nlaload\nland\nlastore\nlcmp\nlconst_<l>\nldc\nldc_w\nldc2_w\nldiv\nlload\nlload_<n>\nlmul\nlneg\nlookupswitch\nlor\nlrem\nlreturn\nlshl\nlshr\nlstore\nlstore_<n>\nlsub\nlushr\nlxor\nmonitorenter\nmonitorexit\nmultianewarray\nnew\nnewarray\nnop\npop\npop2\nputfield\nputstatic\nret\nreturn\nsaload\nsastore\nsipush\nswap\ntableswitch\nwide\n7 Opcode Mnemonics by Opcode\nIndex\nA Limited License Grant","pages":"584","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s29404594.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s29404594.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29404594.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26771156\/","id":"26771156","publisher":"电子工业出版社","isbn10":"7121273055","isbn13":"9787121273056","title":"Java虚拟机规范","url":"https:\/\/api.douban.com\/v2\/book\/26771156","alt_title":"The Java Virtual Machine Specification (Java SE 8 Edition)","author_intro":"Tim Lindholm曾是Sun公司杰出工程师。他Java虚拟机高级架构师，Java编程语言的主要贡献者之一，目前主要负责移动设备上的Java应用。在到Sun公司工作之前，他曾经在美国阿贡国家实验室和Quintus公司从事与虚拟机和运行时系统相关的工作。他拥有卡尔顿学院数学学士学位。\nFrank Yellin曾是Sun公司高级工程师。他是Java项目元老级成员。近十余年中，他都从事着解释型及编译型语言的运行时系统方面的工作。在到Sun公司工作之前，他在Lucid公司从事Common Lisp编译器相关的工作。他拥有哈佛大学应用数学学士学位及斯坦福大学计算机科学硕士学位。\nGilad Bracha是Newspeak编程语言的创建者，曾是Sun公司杰出工程师。在到Sun公司工作之前，他在Animorphic Smalltalk System公司从事Strongtalk语言相关的工作。他拥有犹他大学计算机科学博士学位。\nAlex Buckley是Oracle公司Java编程语言和Java虚拟机规范负责人。他拥有伦敦帝国学院计算机技术博士学位。","summary":"《Java虚拟机规范（Java SE 8版）英文版》由Java虚拟机技术创建人撰写。《Java虚拟机规范（Java SE 8版）英文版》全面而准确地阐释了Java虚拟机各方面的细节，围绕Java虚拟机整体架构、编译器、class文件格式、加载、链接与初始化、指令集等核心主题对Java虚拟机进行全面而深入的分析，深刻揭示Java虚拟机的工作原理。《Java虚拟机规范（Java SE 8版）英文版》中完整地讲述了由Java SE 8所引入的新特性，例如对包含默认实现代码的接口方法所做的调用，以及为支持类型注解及方法参数注解而对class文件格式所做的扩展等，还阐明了class文件中各属性的含义及字节码验证的规则。\n《Java虚拟机规范（Java SE 8版）英文版》基于Java SE 8，完整且准确地阐述Java虚拟机规范，是深度了解Java虚拟机和Java语言实现细节的极佳选择。","series":{"id":"39031","title":"原味精品书系"},"price":"CNY 108.00"},{"rating":{"max":10,"numRaters":4,"average":"0.0","min":0},"subtitle":"","author":["James Gosling","Bill Joy","Guy L. Steele Jr.","Gilad Bracha","Alex Buckley"],"pubdate":"2014-5-16","tags":[{"count":6,"name":"Java","title":"Java"},{"count":2,"name":"计算机","title":"计算机"},{"count":2,"name":"技术书","title":"技术书"},{"count":1,"name":"java","title":"java"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s28142411.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"792","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s28142411.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s28142411.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s28142411.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26457801\/","id":"26457801","publisher":"Addison-Wesley Professional","isbn10":"013390069X","isbn13":"9780133900699","title":"The Java Language Specification, Java SE 8 Edition","url":"https:\/\/api.douban.com\/v2\/book\/26457801","alt_title":"","author_intro":"","summary":"","price":"USD 59.99"},{"rating":{"max":10,"numRaters":10,"average":"9.4","min":0},"subtitle":"","author":["Cay S. Horstmann"],"pubdate":"2010-2-2","tags":[{"count":2,"name":"计算机科学","title":"计算机科学"},{"count":2,"name":"java","title":"java"},{"count":1,"name":"非小说","title":"非小说"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s4335098.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"1152","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s4335098.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s4335098.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s4335098.jpg"},"alt":"https:\/\/book.douban.com\/subject\/4810300\/","id":"4810300","publisher":"JOHN WILEY & SONS LTD","isbn10":"047055309X","isbn13":"9780470553091","title":"Big Java For Java 7 and 8","url":"https:\/\/api.douban.com\/v2\/book\/4810300","alt_title":"","author_intro":"","summary":"This book introduces programmers to objects at a gradual pace. The syntax boxes are revised to show typical code examples rather than abstract notation. This includes optional example modules using Alice and Greenfoot. The examples feature annotations with dos and don′ts along with cross references to more detailed explanations in the text. New tables show a large number of typical and cautionary examples. New programming and review problems are also presented that ensure a broad coverage of topics. In addition, Java 7 features are included to provide programmers with the most up–to–date information.","price":"405.00元"},{"rating":{"max":10,"numRaters":4,"average":"0.0","min":0},"subtitle":"","author":["Y. Daniel Liang"],"pubdate":"2010-01-13","tags":[{"count":2,"name":"Java","title":"Java"},{"count":1,"name":"ISOM","title":"ISOM"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s4256765.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"744","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s4256765.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s4256765.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s4256765.jpg"},"alt":"https:\/\/book.douban.com\/subject\/4743002\/","id":"4743002","publisher":"Prentice Hall","isbn10":"0132130793","isbn13":"9780132130790","title":"Introduction to Java Programming, Brief (8th Edition)","url":"https:\/\/api.douban.com\/v2\/book\/4743002","alt_title":"","author_intro":"","summary":"Introduction to Java Programming, Brief, 8e  consists of the first 20 chapters from the Comprehensive version of  Introduction to Java Programming . It introduces fundamentals of programming, problem-solving, object-oriented programming, and GUI programming. The Brief version is suitable for a CS1 course. \n   Regardless of major, students will be able to grasp concepts of problem-solving and programming — thanks to Liang’s fundamentals-first approach, students learn critical problem solving skills and core constructs before object-oriented programming. Liang’s approach includes application-rich programming examples, which go beyond the traditional math-based problems found in most texts. Students are introduced to topics like control statements, methods, and arrays before learning to create classes. Later chapters introduce advanced topics including graphical user interface, exception handling, I\/O, and data structures. Small, simple examples demonstrate concepts and techniques while longer examples are presented in case studies with overall discussions and thorough line-by-line explanations. In the Eighth Edition, only standard classes are used.","price":"USD 105.00"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Herbert Schildt"],"pubdate":"2011-6-22","tags":[{"count":1,"name":"Java","title":"Java"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s7987406.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"1152","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s7987406.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s7987406.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s7987406.jpg"},"alt":"https:\/\/book.douban.com\/subject\/4174060\/","id":"4174060","publisher":"McGraw-Hill Osborne Media","isbn10":"0071606300","isbn13":"9780071606301","title":"Java The Complete Reference, 8th Edition","url":"https:\/\/api.douban.com\/v2\/book\/4174060","alt_title":"","author_intro":"","summary":"The Definitive Java Programming Guide In Java: The Complete Reference, Eighth Edition, bestselling programming author Herb Schildt shows you everything you need to develop, compile, debug, and run Java programs. Updated for Java Platform, Standard Edition 7 (Java SE 7), this comprehensive volume covers the entire Java language, including its syntax, keywords, and fundamental programming principles. You'll also find information on key elements of the Java API library. JavaBeans, servlets, applets, and Swing are examined and real-world examples demonstrate Java in action. In addition, new Java SE 7 features such as try-with-resources, strings in switch, type inference with the diamond operator, NIO.2, and the Fork\/Join Framework are discussed in detail. Coverage includes: Data types and operators Control statements Classes and objects Constructors and methods Method overloading and overriding Interfaces and packages Inheritance Exception handling Generics Autoboxing Enumerations Annotations The try-with-resources statement Varargs Multithreading The I\/O classes Networking The Collections Framework Applets and servlets JavaBeans AWT and Swing The Concurrent API Much, much more","price":"USD 60.00"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Horstmann, Cay S."],"pubdate":"","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","large":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","medium":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif"},"alt":"https:\/\/book.douban.com\/subject\/12012595\/","id":"12012595","publisher":"","isbn10":"0470894202","isbn13":"9780470894200","title":"Big Java for Java 7 and 8 with WileyPLUS Set","url":"https:\/\/api.douban.com\/v2\/book\/12012595","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Horstmann, Cay S."],"pubdate":"2010-1","tags":[{"count":1,"name":"计算机","title":"计算机"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s4311308.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"688","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s4311308.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s4311308.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s4311308.jpg"},"alt":"https:\/\/book.douban.com\/subject\/4787256\/","id":"4787256","publisher":"John Wiley & Sons Ltd","isbn10":"0470561599","isbn13":"9780470561591","title":"Java Concepts 6\/E for Java 7 and 8 International Student Version","url":"https:\/\/api.douban.com\/v2\/book\/4787256","alt_title":"","author_intro":"","summary":"This book introduces programmers to objects at a gradual pace. The syntax boxes are revised to show typical code examples rather than abstract notation. This includes optional example modules using Alice and Greenfoot. The examples feature annotations with dos and don′ts along with cross references to more detailed explanations in the text. New tables show a large number of typical and cautionary examples. New programming and review problems are also presented that ensure a broad coverage of topics. In addition, Java 7 features are included to provide programmers with the most up–to–date information.","price":"390.00元"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Horstmann, Cay S."],"pubdate":"","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","large":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","medium":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif"},"alt":"https:\/\/book.douban.com\/subject\/12012611\/","id":"12012611","publisher":"","isbn10":"0470903902","isbn13":"9780470903902","title":"Java Concepts for Java 7 and 8","url":"https:\/\/api.douban.com\/v2\/book\/12012611","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Morelli"],"pubdate":"2003-11","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","binding":"","translator":[],"catalog":"","pages":"0","images":{"small":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","large":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","medium":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif"},"alt":"https:\/\/book.douban.com\/subject\/11696747\/","id":"11696747","publisher":"Addison Wesley Longman","isbn10":"0131602152","isbn13":"9780131602151","title":"Java Java& Codewarr 8 Pk","url":"https:\/\/api.douban.com\/v2\/book\/11696747","alt_title":"","author_intro":"","summary":"","price":"$ 138.23"},{"rating":{"max":10,"numRaters":1,"average":"0.0","min":0},"subtitle":"","author":["凯·霍斯特曼 (Cay Horstmann)"],"pubdate":"2018-5-1","tags":[{"count":1,"name":"面向对象","title":"面向对象"},{"count":1,"name":"Java","title":"Java"}],"origin_title":"Java Concepts:Early Objects Eighth Edition","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29851731.jpg","binding":"平装","translator":["林琪","肖斌"],"catalog":"出版者的话\n译者序\n前言\n学习辅助手段介绍\n致谢\n特色内容\n第一部分基础知识\n第1章引言2\n1.1计算机程序2\n1.2计算机剖析3\n计算与社会1.1计算机无处不在4\n1.3Java编程语言5\n1.4熟悉你的编程环境7\n编程技巧1.1备份副本10\n1.5分析你的第一个程序10\n常见错误1.1缺少分号13\n1.6错误14\n常见错误1.2单词拼写错误15\n1.7解决问题：算法设计15\n1.7.1算法概念16\n1.7.2解决一个投资问题的算法16\n1.7.3伪代码17\n1.7.4从算法到程序18\n操作指南1.1用伪代码描述算法19\n实用示例1.1编写一个铺地板瓷砖的算法21\n第2章使用对象31\n2.1对象和类31\n2.1.1使用对象32\n2.1.2类32\n2.2变量33\n2.2.1变量声明33\n2.2.2类型35\n2.2.3名35\n2.2.4注释36\n2.2.5赋值37\n常见错误2.1使用未声明或未初始化的变量39\n常见错误2.2混淆变量声明和赋值语句39\n编程技巧2.1选择描述性的变量名39\n2.3调用方法40\n2.3.1类的公共接口40\n2.3.2方法参数40\n2.3.3返回值42\n2.3.4方法声明43\n编程技巧2.2通过尝试来学习44\n2.4构造对象45\n常见错误2.3试图如调用方法一样调用构造函数47\n2.5访问器和修改器方法47\n2.6API文档48\n2.6.1浏览API文档49\n2.6.2包50\n编程技巧2.3不要强记，使用在线帮助51\n2.7实现一个测试程序51\n专题2.1在交互环境中测试类53\n实用示例2.1你活了多少天？54\n实用示例2.2处理图片54\n2.8对象引用54\n计算与社会2.1计算机垄断57\n2.9图形应用57\n2.9.1帧窗口58\n2.9.2在组件上绘制59\n2.9.3在帧窗口中显示组件61\n2.10椭圆、线、文本和颜色62\n2.10.1椭圆和圆63\n2.10.2线63\n2.10.3绘制文本64\n2.10.4颜色64\n第3章实现类78\n3.1实例变量和封装78\n3.1.1实例变量78\n3.1.2Counter类的方法80\n3.1.3封装80\n3.2指定类的公共接口82\n3.2.1指定方法82\n3.2.2指定构造函数83\n3.2.3使用公共接口85\n3.2.4为公共接口加注释85\n常见错误3.1将构造函数声明为void88\n编程技巧3.1javadoc工具88\n3.3提供类实现89\n3.3.1提供实例变量89\n3.3.2提供构造函数89\n3.3.3提供方法91\n常见错误3.2忽略参数变量93\n操作指南3.1实现一个类94\n实用示例3.1建立一个简单的菜单97\n3.4单元测试98\n计算与社会3.1电子投票机99\n3.5解决问题：跟踪对象100\n3.6局部变量102\n常见错误3.3在局部变量中重复实例变量103\n常见错误3.4提供不必要的实例变量104\n常见错误3.5忘记在构造函数中初始化对象引用105\n3.7this引用105\n专题3.1从一个构造函数调用另一个构造函数108\n3.8图形类108\n操作指南3.2绘制图形112\n第4章基本数据类型127\n4.1数字127\n4.1.1数字类型127\n4.1.2常量129\n专题4.1大数134\n编程技巧4.1不要使用魔法数134\n4.2算术运算135\n4.2.1算术操作符135\n4.2.2自增和自减135\n4.2.3整除和求余135\n4.2.4幂和平方根136\n4.2.5浮点数转换为整数138\n常见错误4.1意外的整除139\n常见错误4.2小括号不匹配140\n编程技巧4.2表达式中的空格140\nJava8说明4.1避免负余数140\n专题4.2结合赋值和算术运算141\n专题4.3实例方法和静态方法141\n计算与社会4.1奔腾处理器的浮点数bug141\n4.3输入和输出143\n4.3.1读取输入143\n4.3.2格式化输出144\n操作指南4.1完成计算147\n实用示例4.1计算金字塔的体积和表面积150\n4.4解决问题：先手动完成150\n实用示例4.2计算旅行时间152\n4.5字符串152\n4.5.1String类型152\n4.5.2字符串连接153\n4.5.3字符串输入154\n4.5.4转义序列154\n4.5.5字符串和字符154\n4.5.6子串155\n编程技巧4.3阅读异常报告157\n专题4.4使用对话框提供输入和输出158\n计算与社会4.2国际字母表和Unicode158\n第5章判断174\n5.1if语句174\n编程技巧5.1大括号布局177\n编程技巧5.2总是使用大括号178\n常见错误5.1if条件后有分号178\n编程技巧5.3制表符178\n专题5.1条件操作符179\n编程技巧5.4避免不同分支中重复179\n5.2比较值180\n5.2.1关系操作符180\n5.2.2比较浮点数181\n5.2.3比较字符串182\n5.2.4比较对象183\n5.2.5测试null184\n常见错误5.2使用==比较字符串185\n操作指南5.1实现一个if语句186\n实用示例5.1抽取中间字符188\n计算与社会5.1丹佛机场的行李处理系统188\n5.3多个候选条件189\n专题5.2switch语句192\n5.4嵌套分支193\n编程技巧5.5手动跟踪196\n常见错误5.3空悬else问题197\n专题5.3块作用域198\n专题5.4枚举类型199\n5.5解决问题：流程图200\n5.6解决问题：选择测试用例202\n编程技巧5.6制订计划并为意料外的问题留出时间204\n专题5.5记录日志205\n5.7布尔变量和操作符205\n常见错误5.4结合多个关系操作符208\n常见错误5.5混淆&&和||条件209\n专题56布尔操作符的短路计算209\n专题5.7德·摩根定律210\n5.8应用：输入验证211\n计算与社会5.2人工智能213\n第6章循环233\n6.1while循环233\n常见错误6.1不要想“我们到了吗？”239\n常见错误6.2无限循环239\n常见错误6.3差一错误240\n6.2解决问题：手动跟踪241\n计算与社会6.1数字盗版244\n6.3for循环245\n编程技巧6.1按其预期用途使用for循环250\n编程技巧6.2选择满足任务要求的循环边界251\n编程技巧6.3统计迭代251\n专题6.1for循环首部中声明的变量252\n6.4do循环253\n编程技巧6.4画出循环的流程图254\n6.5应用：处理卫哨值254\n专题6.2输入和输出重定向257\n专题6.3“半循环”问题258\n专题6.4break和continue语句259\n6.6解决问题：故事板260\n6.7常用循环算法263\n6.7.1求和与平均值263\n6.7.2匹配计数263\n6.7.3找到第一个匹配264\n6.7.4提示用户输入，直到找到匹配265\n6.7.5最大值和最小值265\n6.7.6比较相邻值265\n操作指南61写一个循环267\n实用示例6.1信用卡处理270\n6.8嵌套循环270\n实用示例6.2处理图像中的像素273\n6.9应用：随机数和仿真273\n6.9.1生成随机数273\n6.9.2蒙特卡罗方法275\n6.10使用调试器277\n操作指南6.2调试279\n实用示例6.3示例调试会话281\n计算与社会6.2第一个bug281\n第7章数组和数组列表303\n7.1数组303\n7.1.1声明和使用数组303\n7.1.2数组引用306\n7.1.3利用方法使用数组307\n7.1.4部分填充的数组307\n常见错误7.1边界错误309\n常见错误7.2未初始化和未填充的数组309\n编程技巧7.1对相关数据项的序列使用数组309\n编程技巧7.2将并行数组重组为对象数组310\n专题7.1参数数目可变的方法311\n计算与社会7.1计算机病毒311\n7.2增强的for循环312\n7.3常用数组算法\n7.3.1填充314\n7.3.2求和与平均值314\n7.3.3最大值和最小值314\n7.3.4元素分隔符315\n7.3.5线性查找315\n7.3.6删除一个元素316\n7.3.7插入一个元素316\n7.3.8交换元素317\n7.3.9复制数组318\n7.3.10读取输入319\n常见错误7.3低估数据集的大小322\n专题7.2利用Java库排序322\n7.4解决问题：调整算法323\n操作指南77处理数组325\n实用示例7.1掷骰子327\n7.5解决问题：通过管理实体对象发现算法327\n7.6二维数组330\n7.6.1声明二维数组331\n7.6.2访问元素332\n7.6.3定位相邻元素333\n7.6.4访问行和列333\n实用示例72世界人口表336\n专题7.3行长度可变的二维数组336\n专题7.4多维数组337\n7.7数组列表338\n7.7.1声明和使用数组列表338\n7.7.2对数组列表使用增强的for循环340\n7.7.3复制数组列表341\n7.7.4包装器和自动装箱341\n7.7.5对数组列表使用数组算法342\n7.7.6在数组列表中存储输入值343\n7.7.7删除匹配元素343\n7.7.8在数组列表和数组间选择344\n常见错误7.4长度和大小346\n专题7.5钻石语法346\n7.8回归测试346\n编程技巧7.3批文件和Shel脚本349\n计算与社会7.2Therac—25事件349\n……\n第二部分面向对象设计","pages":"621","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29851731.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29851731.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29851731.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30306843\/","id":"30306843","publisher":"机械工业出版社","isbn10":"7111593669","isbn13":"9787111593669","title":"Java程序设计概念:对象先行(原书第8版)","url":"https:\/\/api.douban.com\/v2\/book\/30306843","alt_title":"Java Concepts:Early Objects Eighth Edition","author_intro":"作者：（美国）凯·霍斯特曼（Cay Horstmann） 译者：林琪 肖斌\n凯·霍斯特曼（Cay Horstmann），圣何塞州立大学计算机科学系教授、Java的倡导者，经常在开发人员会议上发表演讲。他为专业程序员和计算机科学专业学生编写过数十本图书，包括Java领域最有影响力和价值的著作之一《Java核心技术》《CoreJava for the Impatient》《Java SE 8 for the Really Impatient》和《Scala for the Impatient》等。","summary":"这是一本关于Java和计算机编程的入门教材，书中重点关注基础知识，并强调如何有效地学习。本书共分三部分。部分（第1～7章）是基础知识，首先简要介绍了计算机科学和Java编程，展示了如何管理预定义的类以及如何根据给定的规范定义类，之后讲解了基本数据类型、分支、循环和数组；第二部分（第8～12章）讲解面向对象设计，包括类的设计、继承和多态、接口、异常处理和基本文件输入\/输出，以及两个重要的案例研究；第三部分是在线内容，讲解了数据结构与算法，具体包括递归、排序和查找、链表、集合、映射、栈和队列。本书非常适合作为计算机科学家、工程师和其他学科学生的本编程教材。","series":{"id":"1163","title":"计算机科学丛书"},"price":"119.00"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":[],"pubdate":"","tags":[],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s32191275.jpg","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s32191275.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s32191275.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s32191275.jpg"},"alt":"https:\/\/book.douban.com\/subject\/33302339\/","id":"33302339","publisher":"","isbn10":"1484230299","isbn13":"9781484230299","title":"Practical JSF in Java EE 8: Web Applications ​in Java for the Enterprise","url":"https:\/\/api.douban.com\/v2\/book\/33302339","alt_title":"","author_intro":"","summary":"Master the Java EE 8 and JSF (JavaServer Faces) APIs and web framework with this practical, projects-driven guide to web development. This book combines theoretical background with a practical approach by building four real-world applications. By developing these JSF web applications, you'll take a tour through the other Java EE technologies such as JPA, CDI, Security, WebSockets, and more.In Practical JSF in Java EE 8, you will learn to use the JavaServer Faces web framework in Java EE 8 to easily construct a web-based user interface from a set of reusable components. Next, you add JSF event handling and then link to a database, persist data, and add security and the other bells and whistles that the Java EE 8 platform has to offer.After reading this book you will have a good foundation in Java-based web development and will have increased your proficiency in sophisticated Java EE 8 web development using the JSF framework.What You Will Learn Use the Java EE 8 and the JavaServer Faces APIs to build Java-based web applications through four practical real-world case studies Process user input with JSF and the expression language by building a calculator application Persist data using JSF templating and Java Persistence to manage an inventory of books Create and manage an alumni database using JSF, Ajax, web services and Java EE 8's security features.  Who This Book Is For Those new to Java EE 8 and JSF. Some prior experience with Java is recommended.","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Nirva Morisseau-Leroy","Martin K.Solomon","Julie Basu"],"pubdate":"2002-1-1","tags":[],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s25023135.jpg","binding":"平装（带盘）","translator":[],"catalog":"译者序\n序言\n前言\n第一篇 概述\n第二篇 创建企业JavaBean组件\n第三篇 创建CORBA组件\n第四篇 使用Java Server Page创建Web应用程序\n第五篇 附录","pages":"516","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s25023135.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s25023135.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s25023135.jpg"},"alt":"https:\/\/book.douban.com\/subject\/1231649\/","id":"1231649","publisher":"机械工业出版社","isbn10":"7111093356","isbn13":"9787111093350","title":"Oracle8i Java组件编程","url":"https:\/\/api.douban.com\/v2\/book\/1231649","alt_title":"","author_intro":"","summary":"本书主要介绍如何使用Java组件","price":"68.00元"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Robert Sedgewick"],"pubdate":"2020-2-2","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","binding":"Hardcover","translator":[],"catalog":"","pages":"1312","images":{"small":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","large":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","medium":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif"},"alt":"https:\/\/book.douban.com\/subject\/11762144\/","id":"11762144","publisher":"Addison Wesley","isbn10":"0201361191","isbn13":"9780201361193","title":"Algorithms In Java, 3rd Edition","url":"https:\/\/api.douban.com\/v2\/book\/11762144","alt_title":"","author_intro":"Robert Sedgewick (born December 20, 1946) is a computer science professor at Princeton University and a member of the board of directors of Adobe Systems.\nSedgewick completed his Ph.D. in 1975 under the supervision of Donald Knuth at Stanford. His thesis was about the quicksort algorithm. In 1975–85 he served on the faculty of Brown University.\nSedgewick was the founding Chairman (1985) of the Department of Computer Science at Princeton University and is currently still a Professor of Computer Science at Princeton. He was a visiting researcher at Xerox PARC, Institute for Defense Analyses and INRIA.\nIn 1997 Robert Sedgewick was inducted as a Fellow of the Association for Computing Machinery for his seminal work in the mathematical analysis of algorithms and pioneering research in algorithm animation.\nRobert Sedgewick is the author of a well-known book series Algorithms, published by Addison-Wesley. The first edition of the book was published in 1983 and contained code in Pascal. Subsequent editions used C, C++, Modula-3, and Java.\nWith Philippe Flajolet he wrote several books and preprints which promoted analytic combinatorics, a discipline which relies on the use of generating functions and complex analysis in order to enumerate combinatorial structures, and to study their asymptotic properties. As explained by Knuth in The Art of Computer Programming, this is the key to perform average case analysis of algorithms.\nHe teaches four open online courses on the online learning platform Coursera, namely Algorithms Part I and Part II, Analysis of Algorithms and Analytic Combinatorics.\nBio from Wikipedia, the free encyclopedia.","summary":"","price":"USD 79.99"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["【美】Paul Deitel（保罗·戴特尔）,","Harvey Deitel（哈维·戴特尔）"],"pubdate":"2016-4","tags":[{"count":1,"name":"计算机","title":"计算机"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s28622360.jpg","binding":"平装","translator":[],"catalog":"推荐序\n前言\n阅读本书之前的准备\n1 Introduction to Java and Test-Driving a Java Application\n1.1 Introduction\n1.2 Object Technology Concepts\n1.2.1 The Automobile as an Object\n1.2.2 Methods and Classes\n1.2.3 Instantiation\n1.2.4 Reuse\n1.2.5 Messages and Method Calls\n1.2.6 Attributes and Instance Variables\n1.2.7 Encapsulation and Information Hiding\n1.2.8 Inheritance\n1.2.9 Interfaces\n1.2.10 Object-Oriented Analysis and Design (OOAD)\n1.2.11 The UML (Unified Modeling Language)\n1.3 Open Source Software\n1.4 Java\n1.5 A Typical Java Development Environment\n1.6 Test-Driving a Java Application\n1.7 Software Technologies\n1.8 Keeping Up-to-Date with Information Technologies\n2 Introduction to Java Applications; Input\/Output and Operators\n2.1 Introduction\n2.2 Your First Program in Java: Printing a Line of Text\n2.3 Modifying Your First Java Program\n2.4 Displaying Text with printf\n2.5 Another Application: Adding Integers\n2.6 Arithmetic\n2.7 Decision Making: Equality and Relational Operators\n2.8 Wrap-Up\n3 Introduction to Classes, Objects, Methods and Strings\n3.1 Introduction\n3.2 Instance Variables, set Methods and get Methods\n3.2.1 Account Class with an Instance Variable, a set Method and a get Method\n3.2.2 AccountTest Class That Creates and Uses an Object of Class Account\n3.2.3 Compiling and Executing an App with Multiple Classes\n3.2.4 Account UML Class Diagram with an Instance Variable and set and get Methods\n3.2.5 Additional Notes on Class AccountTest\n3.2.6 Software Engineering with private Instance Variables and public set and get Methods\n3.3 Primitive Types vs. Reference Types\n3.4 Account Class: Initializing Objects with Constructors\n3.4.1 Declaring an Account Constructor for Custom Object Initialization\n3.4.2 Class AccountTest : Initializing Account Objects When They’re Created\n3.5 Account Class with a Balance; Floating-Point Numbers\n3.5.1 Account Class with a balance Instance Variable of Type double\n3.5.2 AccountTest Class to Use Class Account\n3.6 Wrap-Up\n4 Control Statements: Part 1; Assignment, ++ and -- Operators\n4.1 Introduction\n4.2 Control Structures\n4.3 if Single-Selection Statement\n4.4 if … else Double-Selection Statement\n4.5 Student Class: Nested if … else Statements\n4.6 while Repetition Statement\n4.7 Counter-Controlled Repetition\n4.8 Sentinel-Controlled Repetition\n4.9 Nested Control Statements\n4.10 Compound Assignment Operators\n4.11 Increment and Decrement Operators\n4.12 Primitive Types\n4.13 Wrap-Up\n5 Control Statements: Part 2; Logical Operators\n5.1 Introduction\n5.2 Essentials of Counter-Controlled Repetition\n5.3 for Repetition Statement\n5.4 Examples Using the for Statement\n5.5 do … while Repetition Statement\n5.6 switch Multiple-Selection Statement\n5.7 Class AutoPolicy Case Study: String s in switch Statements\n5.8 break and continue Statements\n5.9 Logical Operators\n5.10 Wrap-Up\n6 Methods: A Deeper Look\n6.1 Introduction\n6.2 Program Modules in Java\n6.3 static Methods, static Fields and Class Math\n6.4 Declaring Methods with Multiple Parameters\n6.5 Notes on Declaring and Using Methods\n6.6 Argument Promotion and Casting\n6.7 Java API Packages\n6.8 Case Study: Secure Random-Number Generation\n6.9 Case Study: A Game of Chance; Introducing enum Types\n6.10 Scope of Declarations\n6.11 Method Overloading\n6.12 Wrap-Up\n7 Arrays and ArrayLists\n7.1 Introduction\n7.2 Arrays\n7.3 Declaring and Creating Arrays\n7.4 Examples Using Arrays\n7.4.1 Creating and Initializing an Array\n7.4.2 Using an Array Initializer\n7.4.3 Calculating the Values to Store in an Array\n7.4.4 Summing the Elements of an Array\n7.4.5 Using Bar Charts to Display Array Data Graphically\n7.4.6 Using the Elements of an Array as Counters\n7.4.7 Using Arrays to Analyze Survey Results\n7.5 Exception Handling: Processing the Incorrect Response\n7.5.1 The try Statement\n7.5.2 Executing the catch Block\n7.5.3 toString Method of the Exception Parameter\n7.6 Case Study: Card Shuffling and Dealing Simulation\n7.7 Enhanced for Statement\n7.8 Passing Arrays to Methods\n7.9 Pass-By-Value vs. Pass-By-Reference\n7.10 Case Study: Class GradeBook Using an Array to Store Grades\n7.11 Multidimensional Arrays\n7.12 Case Study: Class GradeBook Using a Two-Dimensional Array\n7.13 Variable-Length Argument Lists\n7.14 Using Command-Line Arguments\n7.15 Class Arrays\n7.16 Introduction to Collections and Class ArrayList\n7.17 Wrap-Up\n8 Classes and Objects: A Deeper Look\n8.1 Introduction\n8.2 Time Class Case Study\n8.3 Controlling Access to Members\n8.4 Referring to the Current Object’s Members with the this Reference\n8.5 Time Class Case Study: Overloaded Constructors\n8.6 Default and No-Argument Constructors\n8.7 Notes on Set and Get Methods\n8.8 Composition\n8.9 enum Types\n8.10 Garbage Collection\n8.11 static Class Members\n8.12 static Import\n8.13 final Instance Variables\n8.14 Time Class Case Study: Creating Packages\n8.15 Package Access\n8.16 Using BigDecimal for Precise Monetary Calculations\n8.17 Wrap-Up\n9 Object-Oriented Programming: Inheritance\n9.1 Introduction\n9.2 Superclasses and Subclasses\n9.3 protected Members\n9.4 Relationship Between Superclasses and Subclasses\n9.4.1 Creating and Using a CommissionEmployee Class\n9.4.2 Creating and Using a BasePlusCommissionEmployee Class\n9.4.3 Creating a CommissionEmployee – BasePlusCommissionEmployee Inheritance Hierarchy\n9.4.4 CommissionEmployee – BasePlusCommissionEmployee Inheritance Hierarchy Using protected Instance Variables\n9.4.5 CommissionEmployee – BasePlusCommissionEmployee Inheritance Hierarchy Using private Instance Variables\n9.5 Constructors in Subclasses\n9.6 Class Object\n9.7 Wrap-Up\n10 Object-Oriented Programming: Polymorphism and Interfaces\n10.1 Introduction\n10.2 Polymorphism Examples\n10.3 Demonstrating Polymorphic Behavior\n10.4 Abstract Classes and Methods\n10.5 Case Study: Payroll System Using Polymorphism\n10.5.1 Abstract Superclass Employee\n10.5.2 Concrete Subclass SalariedEmployee\n10.5.3 Concrete Subclass HourlyEmployee\n10.5.4 Concrete Subclass CommissionEmployee\n10.5.5 Indirect Concrete Subclass BasePlusCommissionEmployee\n10.5.6 Polymorphic Processing, Operator instanceof and Downcasting\n10.6 Allowed Assignments Between Superclass and Subclass Variables\n10.7 final Methods and Classes\n10.8 A Deeper Explanation of Issues with Calling Methods from Constructors\n10.9 Creating and Using Interfaces\n10.9.1 Developing a Payable Hierarchy\n10.9.2 Interface Payable\n10.9.3 Class Invoice\n10.9.4 Modifying Class Employee to Implement Interface Payable\n10.9.5 Modifying Class SalariedEmployee for Use in the Payable Hierarchy\n10.9.6 Using Interface Payable to Process Invoice s and Employees Polymorphically\n10.9.7 Some Common Interfaces of the Java API\n10.10 Java SE 8 Interface Enhancements\n10.10.1 default Interface Methods\n10.10.2 static Interface Methods\n10.10.3 Functional Interfaces\n10.11 Wrap-Up\n11 Exception Handling: A Deeper Look\n11.1 Introduction\n11.2 Example: Divide by Zero without Exception Handling\n11.3 Exception Handling: ArithmeticExceptions and InputMismatchExceptions\n11.4 When to Use Exception Handling\n11.5 Java Exception Hierarchy\n11.6 finally Block\n11.7 Stack Unwinding and Obtaining Information from an Exception Object 322\n11.8 Chained Exceptions\n11.9 Declaring New Exception Types\n11.10 Preconditions and Postconditions\n11.11 Assertions\n11.12 try -with-Resources: Automatic Resource Deallocation\n11.13 Wrap-Up\n12 Swing GUI Components: Part\n12.1 Introduction\n12.2 Java’s Nimbus Look-and-Feel\n12.3 Simple GUI-Based Input\/Output with JOptionPane\n12.4 Overview of Swing Components\n12.5 Displaying Text and Images in a Window\n12.6 Text Fields and an Introduction to Event Handling with Nested Classes\n12.7 Common GUI Event Types and Listener Interfaces\n12.8 How Event Handling Works\n12.9 JButton\n12.10 Buttons That Maintain State\n12.10.1 JCheckBox\n12.10.2 JRadioButton\n12.11 JComboBox ; Using an Anonymous Inner Class for Event Handling\n12.12 JList\n12.13 Multiple-Selection Lists\n12.14 Mouse Event Handling\n12.15 Adapter Classes\n12.16 JPanel Subclass for Drawing with the Mouse\n12.17 Key Event Handling\n12.18 Introduction to Layout Managers\n12.18.1 FlowLayout\n12.18.2 BorderLayout\n12.18.3 GridLayout\n12.19 Using Panels to Manage More Complex Layouts\n12.20 JTextArea\n12.21 Wrap-Up\n13 Graphics and Java 2D\n13.1 Introduction\n13.2 Graphics Contexts and Graphics Objects\n13.3 Color Control\n13.4 Manipulating Fonts\n13.5 Drawing Lines, Rectangles and Ovals\n13.6 Drawing Arcs\n13.7 Drawing Polygons and Polylines\n13.8 Java 2D API\n13.9 Wrap-Up\n14 Strings, Characters and Regular Expressions\n14.1 Introduction\n14.2 Fundamentals of Characters and Strings\n14.3 Class String\n14.3.1 String Constructors\n14.3.2 String Methods length , charAt and getChars\n14.3.3 Comparing Strings\n14.3.4 Locating Characters and Substrings in Strings\n14.3.5 Extracting Substrings from Strings\n14.3.6 Concatenating Strings\n14.3.7 Miscellaneous String Methods\n14.3.8 String Method valueOf\n14.4 Class StringBuilder\n14.4.1 StringBuilder Constructors\n14.4.2 StringBuilder Methods length , capacity , setLength and ensureCapacity\n14.4.3 StringBuilder Methods charAt , setCharAt , getChars and reverse\n14.4.4 StringBuilder append Methods\n14.4.5 StringBuilder Insertion and Deletion Methods\n14.5 Class Character\n14.6 Tokenizing String s\n14.7 Regular Expressions, Class Pattern and Class Matcher\n14.8 Wrap-Up\n15 Files, Streams and Object Serialization\n15.1 Introduction\n15.2 Files and Streams\n15.3 Using NIO Classes and Interfaces to Get File and Directory Information\n15.4 Sequential-Access Text Files\n15.4.1 Creating a Sequential-Access Text File\n15.4.2 Reading Data from a Sequential-Access Text File\n15.4.3 Case Study: A Credit-Inquiry Program\n15.4.4 Updating Sequential-Access Files\n15.5 Object Serialization\n15.5.1 Creating a Sequential-Access File Using Object Serialization\n15.5.2 Reading and Deserializing Data from a Sequential-Access File\n15.6 Opening Files with JFileChooser\n15.7 (Optional) Additional java.io Classes\n15.7.1 Interfaces and Classes for Byte-Based Input and Output\n15.7.2 Interfaces and Classes for Character-Based Input and Output\n15.8 Wrap-Up\n16 Generic Collections\n16.1 Introduction\n16.2 Collections Overview\n16.3 Type-Wrapper Classes\n16.4 Autoboxing and Auto-Unboxing\n16.5 Interface Collection and Class Collections\n16.6 Lists\n16.6.1 ArrayList and Iterator\n16.6.2 LinkedList\n16.7 Collections Methods\n16.7.1 Method sort\n16.7.2 Method shuffle\n16.7.3 Methods reverse , fill , copy , max and min\n16.7.4 Method binarySearch\n16.7.5 Methods addAll , frequency and disjoint\n16.8 Stack Class of Package java.util\n16.9 Class PriorityQueue and Interface Queue\n16.10 Sets\n16.11 Maps\n16.12 Properties Class\n16.13 Synchronized Collections\n16.14 Unmodifiable Collections\n16.15 Abstract Implementations\n16.16 Wrap-Up\n17 Java SE 8 Lambdas and Streams\n17.1 Introduction\n17.2 Functional Programming Technologies Overview\n17.2.1 Functional Interfaces\n17.2.2 Lambda Expressions\n17.2.3 Streams\n17.3 IntStream Operations\n17.3.1 Creating an IntStream and Displaying Its Values with the forEach Terminal Operation\n17.3.2 Terminal Operations count , min , max , sum and average\n17.3.3 Terminal Operation reduce\n17.3.4 Intermediate Operations: Filtering and Sorting IntStream Values\n17.3.5 Intermediate Operation: Mapping\n17.3.6 Creating Streams of int s with IntStream Methods range and rangeClosed\n17.4 Stream<Integer> Manipulations\n17.4.1 Creating a Stream<Integer>\n17.4.2 Sorting a Stream and Collecting the Results\n17.4.3 Filtering a Stream and Storing the Results for Later Use\n17.4.4 Filtering and Sorting a Stream and Collecting the Results\n17.4.5 Sorting Previously Collected Results\n17.5 Stream<String> Manipulations\n17.5.1 Mapping String s to Uppercase Using a Method Reference\n17.5.2 Filtering String s Then Sorting Them in Case-Insensitive Ascending Order\n17.5.3 Filtering String s Then Sorting Them in Case-Insensitive Descending Order\n17.6 Stream<Employee> Manipulations\n17.6.1 Creating and Displaying a List<Employee>\n17.6.2 Filtering Employee s with Salaries in a Specified Range\n17.6.3 Sorting Employee s By Multiple Fields\n17.6.4 Mapping Employee s to Unique Last Name String s\n17.6.5 Grouping Employee s By Department\n17.6.6 Counting the Number of Employee s in Each Department\n17.6.7 Summing and Averaging Employee Salaries\n17.7 Creating a Stream<String> from a File\n17.8 Generating Streams of Random Values\n17.9 Lambda Event Handlers\n17.10 Additional Notes on Java SE 8 Interfaces\n17.11 Java SE 8 and Functional Programming Resources\n17.12 Wrap-Up\n18 Generic Classes and Methods\n18.1 Introduction\n18.2 Motivation for Generic Methods\n18.3 Generic Methods: Implementation and Compile-Time Translation\n18.4 Additional Compile-Time Translation Issues: Methods That Use a Type Parameter as the Return Type\n18.5 Overloading Generic Methods\n18.6 Generic Classes\n18.7 Raw Types\n18.8 Wildcards in Methods That Accept Type Parameters\n18.9 Wrap-Up\n19 Swing GUI Components: Part\n19.1 Introduction\n19.2 JSlider\n19.3 Understanding Windows in Java\n19.4 Using Menus with Frames\n19.5 JPopupMenu\n19.6 Pluggable Look-and-Feel\n19.7 JDesktopPane and JInternalFrame\n19.8 JTabbedPane\n19.9 BoxLayout Layout Manager\n19.10 GridBagLayout Layout Manager\n19.11 Wrap-Up\n20 Concurrency\n20.1 Introduction\n20.2 Thread States and Life Cycle\n20.2.1 New and Runnable States\n20.2.2 Waiting State\n20.2.3 Timed Waiting State\n20.2.4 Blocked State\n20.2.5 Terminated State\n20.2.6 Operating-System View of the Runnable State\n20.2.7 Thread Priorities and Thread Scheduling\n20.2.8 Indefinite Postponement and Deadlock\n20.3 Creating and Executing Threads with the Executor Framework\n20.4 Thread Synchronization\n20.4.1 Immutable Data\n20.4.2 Monitors\n20.4.3 Unsynchronized Mutable Data Sharing\n20.4.4 Synchronized Mutable Data Sharing—Making Operations Atomic\n20.5 Producer\/Consumer Relationship without Synchronization\n20.6 Producer\/Consumer Relationship: ArrayBlockingQueue\n20.7 (Advanced) Producer\/Consumer Relationship with synchronized , wait , notify and notifyAll\n20.8 (Advanced) Producer\/Consumer Relationship: Bounded Buffers\n20.9 (Advanced) Producer\/Consumer Relationship: The Lock and Condition Interfaces\n20.10 Concurrent Collections\n20.11 Multithreading with GUI: SwingWorker\n20.11.1 Performing Computations in a Worker Thread: Fibonacci Numbers\n20.11.2 Processing Intermediate Results: Sieve of Eratosthenes\n20.12 sort \/ parallelSort Timings with the Java SE 8 Date\/Time API\n20.13 Java SE 8: Sequential vs. Parallel Streams\n20.14 (Advanced) Interfaces Callable and Future\n20.15 (Advanced) Fork\/Join Framework\n20.16 Wrap-Up\n21 Accessing Databases with JDBC\n21.1 Introduction\n21.2 Relational Databases\n21.3 A books Database\n21.4 SQL\n21.4.1 Basic SELECT Query\n21.4.2 WHERE Clause\n21.4.3 ORDER BY Clause\n21.4.4 Merging Data from Multiple Tables: INNER JOIN\n21.4.5 INSERT Statement\n21.4.6 UPDATE Statement\n21.4.7 DELETE Statement\n21.5 Setting up a Java DB Database\n21.5.1 Creating the Chapter’s Databases on Windows\n21.5.2 Creating the Chapter’s Databases on Mac OS X\n21.5.3 Creating the Chapter’s Databases on Linux\n21.6 Manipulating Databases with JDBC\n21.6.1 Connecting to and Querying a Database\n21.6.2 Querying the books Database\n21.7 RowSet Interface\n21.8 PreparedStatement s\n21.9 Stored Procedures\n21.10 Transaction Processing\n21.11 Wrap-Up\n22 JavaFX GUI\n22.1 Introduction\n22.2 JavaFX Scene Builder and the NetBeans IDE\n22.3 JavaFX App Window Structure\n22.4 Welcome App—Displaying Text and an Image\n22.4.1 Creating the App’s Project\n22.4.2 NetBeans Projects Window—Viewing the Project Contents\n22.4.3 Adding an Image to the Project\n22.4.4 Opening JavaFX Scene Builder from NetBeans\n22.4.5 Changing to a VBox Layout Container\n22.4.6 Configuring the VBox Layout Container\n22.4.7 Adding and Configuring a Label\n22.4.8 Adding and Configuring an ImageView\n22.4.9 Running the Welcome App\n22.5 Tip Calculator App—Introduction to Event Handling\n22.5.1 Test-Driving the Tip Calculator App\n22.5.2 Technologies Overview\n22.5.3 Building the App’s GUI\n22.5.4 TipCalculator Class\n22.5.5 TipCalculatorController Class\n22.6 Wrap-Up\n23 ATM Case Study, Part 1: Object-Oriented Design with the UML\n23.1 Case Study Introduction\n23.2 Examining the Requirements Document\n23.3 Identifying the Classes in a Requirements Document\n23.4 Identifying Class Attributes\n23.5 Identifying Objects’ States and Activities\n23.6 Identifying Class Operations\n23.7 Indicating Collaboration Among Objects\n23.8 Wrap-Up\n24 ATM Case Study Part 2: Implementing an Object-Oriented Design\n24.1 Introduction\n24.2 Starting to Program the Classes of the ATM System\n24.3 Incorporating Inheritance and Polymorphism into the ATM System\n24.4 ATM Case Study Implementation\n24.4.1 Class ATM\n24.4.2 Class Screen\n24.4.3 Class Keypad\n24.4.4 Class CashDispenser\n24.4.5 Class DepositSlot\n24.4.6 Class Account\n24.4.7 Class BankDatabase\n24.4.8 Class Transaction\n24.4.9 Class BalanceInquiry\n24.4.10 Class Withdrawal\n24.4.11 Class Deposit\n24.4.12 Class ATMCaseStudy\n24.5 Wrap-Up\nA Operator Precedence Chart\nB ASCII Character Set\nC Keywords and Reserved Words\nD Primitive Types\nE Using the Debugger\nE.1 Introduction\nE.2 Breakpoints and the run , stop , cont and print Commands\nE.3 The print and set Commands\nE.4 Controlling Execution Using the step , step up and next Commands\nE.5 The watch Command\nE.6 The clear Command\nE.7 Wrap-Up\nF Using the Java API Documentation\nF.1 Introduction\nF.2 Navigating the Java API\nG Creating Documentation with javadoc\nG.1 Introduction\nG.2 Documentation Comments\nG.3 Documenting Java Source Code\nG.4 javadoc\nG.5 Files Produced by javadoc\nH Unicode®\nH.1 Introduction\nH.2 Unicode Transformation Formats\nH.3 Characters and Glyphs\nH.4 Advantages\/Disadvantages of Unicode\nH.5 Using Unicode\nH.6 Character Ranges\nI Formatted Output\nI.1 Introduction\nI.2 Streams\nI.3 Formatting Output with printf\nI.4 Printing Integers\nI.5 Printing Floating-Point Numbers\nI.6 Printing Strings and Characters\nI.7 Printing Dates and Times\nI.8 Other Conversion Characters\nI.9 Printing with Field Widths and Precisions\nI.10 Using Flags in the printf Format String\nI.11 Printing with Argument Indices\nI.12 Printing Literals and Escape Sequences\nI.13 Formatting Output with Class Formatter\nI.14 Wrap-Up\nJ Number Systems\nJ.1 Introduction\nJ.2 Abbreviating Binary Numbers as Octal and Hexadecimal Numbers\nJ.3 Converting Octal and Hexadecimal Numbers to Binary Numbers\nJ.4 Converting from Binary, Octal or Hexadecimal to Decimal\nJ.5 Converting from Decimal to Binary, Octal or Hexadecimal\nJ.6 Negative Binary Numbers: Two’s Complement Notation\nK Bit Manipulation\nK.1 Introduction\nK.2 Bit Manipulation and the Bitwise Operators\nK.3 BitSet Class\nL Labeled break and continue Statements\nL.1 Introduction\nL.2 Labeled break Statement\nL.3 Labeled continue Statement\nM UML 2: Additional Diagram Types\nM.1 Introduction\nM.2 Additional Diagram Types\nN Design Patterns\nN.1 Introduction\nN.2 Creational, Structural and Behavioral Design Patterns\nN.2.1 Creational Design Patterns\nN.2.2 Structural Design Patterns\nN.2.3 Behavioral Design Patterns\nN.2.4 Conclusion\nN.3 Design Patterns in Packages java.awt and javax.swing\nN.3.1 Creational Design Patterns\nN.3.2 Structural Design Patterns\nN.3.3 Behavioral Design Patterns\nN.3.4 Conclusion\nN.4 Concurrency Design Patterns\nN.5 Design Patterns Used in Packages java.io and java.net\nN.5.1 Creational Design Patterns\nN.5.2 Structural Design Patterns\nN.5.3 Architectural Patterns\nN.5.4 Conclusion\nN.6 Design Patterns Used in Package java.util\nN.6.1 Creational Design Patterns\nN.6.2 Behavioral Design Patterns\nN.7 Wrap-Up\nIndex","pages":"1084","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s28622360.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s28622360.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s28622360.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26771158\/","id":"26771158","publisher":"电子工业出版社","isbn10":"7121273276","isbn13":"9787121273278","title":"Java SE8 程序设计（第3版）英文版","url":"https:\/\/api.douban.com\/v2\/book\/26771158","alt_title":"","author_intro":"Paul Deitel，Deitel & Associates有限公司的CEO兼CTO，毕业于麻省理工学院，主修信息技术。他获得了Java认证程序员和Java认证开发员称号，并且是一名Oracle Java冠军程序员。在Deitel & Associate有限公司工作的过程中，他已经为世界各地的客户提供了数百节编程课程，这些客户包括思科、IBM、西门子、Sun Microsystems、戴尔、Fidelity、肯尼迪航天中心、美国国家强风暴实验室、白沙导弹试验场、Rogue Wave Software、波音公司、SunGard Higher Education、北电网络公司、彪马、iRobot、Invensys等。他和本书的合著者Harvey M. Deitel博士是全球畅销编程语言教材、专业书籍和视频的作者。\nHarvey Deitel博士，Deitel & Associates有限公司的董事长和首席战略官，在计算机领域拥有50多年的经验。Deitel博士获得了麻省理工学院电子工程专业的学士和硕士学位，并获得了波士顿大学的数学博士学位。他拥有丰富的大学教学经验，在1991年与儿子Paul Deitel创办Deitel & Associates有限公司之前，他是波士顿大学计算机科学系的主任并获得了终身任职权。Deitel的出版物获得了国际上的认可，并被翻译为日语、德语、俄语、西班牙语、法语、波兰语、意大利语、简体中文、繁体中文、韩语、葡萄牙语、希腊语、乌尔都语和土耳其语出版。Deitel博士为很多大公司、学术研究机构、政府机关和军方提供了数百场专业编程讲座。","summary":"《Java SE8 程序设计（第3版）英文版》沿用了Deitel特色的“程序实况解说”，深入探讨了Java编程语言和JavaAPI。通过完整的语法着色、代码高亮、逐行代码的演练和程序输出，全面地介绍了测试程序的概念。《Java SE8 程序设计（第3版）英文版》中首先介绍了使用早期Java类和对象的方法，然后迅速转移到更高级的主题，包括GUI、图形、异常处理、Lambda表达式、数据流、功能接口、对象序列化、并发性、泛型、泛型集合、JDBC等。《Java SE8 程序设计（第3版）英文版》包含数百个完整的Java可运行示例、数千行成熟的Java代码，总结出许多程序开发技巧，帮助你建立强大的应用程序。\n《Java SE8 程序设计（第3版）英文版》适合具有一定高级语言编程背景的程序员阅读。","series":{"id":"39031","title":"原味精品书系"},"price":"168"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Nirva Morisseau-Leroy","Martin K. Solomon","Julie Basu"],"pubdate":"2000-09-27","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","binding":"Paperback","translator":[],"catalog":"","pages":"","images":{"small":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","large":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","medium":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif"},"alt":"https:\/\/book.douban.com\/subject\/4090867\/","id":"4090867","publisher":"McGraw-Hill Companies","isbn10":"0072127376","isbn13":"9780072127379","title":"Oracle8i Java Component Programming With EJB, CORBA AND JSP","url":"https:\/\/api.douban.com\/v2\/book\/4090867","alt_title":"","author_intro":"","summary":"","price":"USD 59.99"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Michael Awai","Matthew Bortniker","John Carnell","Kelly Cox","Daniel O'Connor","Mario Zucca","Sean Dillon","Thomas Kyte","Ann Horton","Frank Hubeny","Glenn E. Mitchell II","Kevin Mukhar","Gary Nicol","Guy Ruth Hammond"],"pubdate":"2000-12","tags":[],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s3996106.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"1275","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s3996106.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s3996106.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s3996106.jpg"},"alt":"https:\/\/book.douban.com\/subject\/3948439\/","id":"3948439","publisher":"Wrox Press","isbn10":"1861004842","isbn13":"9781861004840","title":"Professional Oracle 8i Application Programming with Java, PL\/SQL and XML","url":"https:\/\/api.douban.com\/v2\/book\/3948439","alt_title":"","author_intro":"","summary":"","price":"USD 59.99"},{"rating":{"max":10,"numRaters":3,"average":"0.0","min":0},"subtitle":"","author":["Jeanne Boyarsky","Scott Selikoff"],"pubdate":"2014-12-31","tags":[{"count":2,"name":"Java","title":"Java"},{"count":1,"name":"计算机","title":"计算机"},{"count":1,"name":"参考","title":"参考"},{"count":1,"name":"Oracle","title":"Oracle"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29643711.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"432","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29643711.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29643711.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29643711.jpg"},"alt":"https:\/\/book.douban.com\/subject\/27608116\/","id":"27608116","publisher":"Sybex","isbn10":"1118957407","isbn13":"9781118957400","title":"OCA: Oracle Certified Associate Java SE 8 Programmer I Study","url":"https:\/\/api.douban.com\/v2\/book\/27608116","alt_title":"","author_intro":"Jeanne Boyarsky, OCA\/OCP, has worked as a Java developer for a bank in NYC for 12 years where she develops, mentors and conducts training. In her free time, she is a senior moderator at CodeRanch and works on the forum code base.\nScott Selikoff, SCJP, has been a professional Java Enterprise developer for over 15 years. He currently operates Selikoff Solutions, LLC, which provides software consulting services to businesses in the tri-state New York City area.","summary":"Full coverage of functional programming and all OCA Java Programmer exam objectives","price":"USD 59.99"},{"rating":{"max":10,"numRaters":1,"average":"0.0","min":0},"subtitle":"An In-Depth Guide to Java Persistence APIs","author":["Mike Keith","Merrick Schincariol","Massimo Nardone"],"pubdate":"2018-6-14","tags":[{"count":4,"name":"J2EE","title":"J2EE"},{"count":2,"name":"Java","title":"Java"},{"count":1,"name":"软件工程","title":"软件工程"},{"count":1,"name":"JPA","title":"JPA"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29629479.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"480","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s29629479.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s29629479.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29629479.jpg"},"alt":"https:\/\/book.douban.com\/subject\/27598020\/","id":"27598020","publisher":"Apress","isbn10":"1484234197","isbn13":"9781484234198","title":"Pro JPA 2 in Java EE 8","url":"https:\/\/api.douban.com\/v2\/book\/27598020","alt_title":"","author_intro":"","summary":"","price":"USD 54.99"},{"rating":{"max":10,"numRaters":1,"average":"0.0","min":0},"subtitle":"","author":["Scott Selikoff","Jeanne Boyarsky"],"pubdate":"2017-4-3","tags":[],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29621541.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"600","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29621541.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29621541.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29621541.jpg"},"alt":"https:\/\/book.douban.com\/subject\/27592179\/","id":"27592179","publisher":"Sybex","isbn10":"111936339X","isbn13":"9781119363392","title":"OCA \/ OCP Java SE 8 Programmer Practice Tests","url":"https:\/\/api.douban.com\/v2\/book\/27592179","alt_title":"","author_intro":"","summary":"","price":"USD 40.00"},{"rating":{"max":10,"numRaters":1,"average":"0.0","min":0},"subtitle":"","author":["Rhuan Rocha","João Purificação"],"pubdate":"2018-8","tags":[],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29880995.jpg","binding":"Paperback","translator":[],"catalog":"Table of Contents\n1: INTRODUCTION TO DESIGN PATTERNS\n2: PRESENTATION PATTERNS\n3: BUSINESS PATTERNS\n4: INTEGRATION PATTERNS\n5: ASPECT-ORIENTED PROGRAMMING AND DESIGN PATTERNS\n6: REACTIVE PATTERNS\n7: MICROSERVICE PATTERNS\n8: CLOUD-NATIVE APPLICATION PATTERNS\n9: SECURITY PATTERNS\n10: DEPLOYMENT PATTERNS\n11: OPERATIONAL PATTERNS\n12: MICROPROFILE","pages":"","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s29880995.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s29880995.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29880995.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30337906\/","id":"30337906","publisher":"","isbn10":"1788830628","isbn13":"9781788830621","title":"Java EE 8 Design Patterns and Best Practices","url":"https:\/\/api.douban.com\/v2\/book\/30337906","alt_title":"","author_intro":"Rhuan Rocha\nRhuan Rocha is from Brazil and has experience with development using the Java language and Java EE. Currently, he works as senior Middleware consultant in a partnership between Red Hat and FábricaDS, and he applies Red Hat solutions using Red Hat Middlewares. Furthermore, he has 8 years, experience with Java development and Java EE development, developing enterprise applications and government applications.\nJoão Purificação\nJoão Purificação is an electronic engineer from Brazil with a master's in systems engineering. He started working with software development as a C and C ++ programmer. He has worked on the analysis, development, and architecture of Java-based enterprise applications. As a Java\/JavaEE consultant, he has participated in the development and architecture of applications for private and government companies. He currently works as a senior architect at Resource IT, a company based in São Paulo.","summary":"Patterns are essential design tools for Java developers. Java EE Design Patterns and Best Practices helps developers attain better code quality and progress to higher levels of architectural creativity by examining the purpose of each available pattern and demonstrating its implementation with various code examples. This book will take you through a number of patterns and their Java EE-specific implementations.\nIn the beginning, you will learn the foundation for, and importance of, design patterns in Java EE, and then will move on to implement various patterns on the presentation tier, business tier, and integration tier. Further, you will explore the patterns involved in Aspect-Oriented Programming (AOP) and take a closer look at reactive patterns. Moving on, you will be introduced to modern architectural patterns involved in composing microservices and cloud-native applications. You will get acquainted with security patterns and operational patterns involved in scaling and monitoring, along with some patterns involved in deployment.\nBy the end of the book, you will be able to efficiently address common problems faced when developing applications and will be comfortable working on scalable and maintainable projects of any size.","price":""},{"rating":{"max":10,"numRaters":2,"average":"0.0","min":0},"subtitle":"","author":["Herbert Schildt"],"pubdate":"2018-11-2","tags":[{"count":2,"name":"Programming","title":"Programming"},{"count":2,"name":"Java","title":"Java"},{"count":2,"name":"Beginner","title":"Beginner"},{"count":1,"name":"计算机","title":"计算机"},{"count":1,"name":"编程","title":"编程"},{"count":1,"name":"程序设计","title":"程序设计"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29933464.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"720","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s29933464.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s29933464.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29933464.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30388790\/","id":"30388790","publisher":"McGraw-Hill Education","isbn10":"1260440214","isbn13":"9781260440218","title":"Java: A Beginner's Guide, Eighth Edition, 8th Edition","url":"https:\/\/api.douban.com\/v2\/book\/30388790","alt_title":"","author_intro":"Called \"one of the world's foremost authors of books about programming\" by International Developer magazine, best-selling author Herbert Schildt has written about programming for over three decades. His books have sold millions of copies worldwide and have been widely translated. Featured as one of the rock star programmers in Ed Burns' book \"Secrets of the Rock Star Programmers\", Schildt is interested in all facets of computing, but his primary focus is computer languages. He is the author of numerous books on Java, C, C++, and C#. Schildt holds BA and MCS degrees from the University of Illinois, Urbana\/Champaign.","summary":"Fully updated for Java Platform, Standard Edition 11 (Java SE 11), Java: A Beginner’s Guide, Eighth Edition gets you started programming in Java right away. Best-selling programming author Herb Schildt begins with the basics, such as how to create, compile, and run a Java program. He then moves on to the keywords, syntax, and constructs that form the core of the Java language. The book also covers some of Java’s more advanced features, including multithreaded programming, generics, lambda expressions, modules, and Swing. As an added bonus, an introduction to JShell, Java’s interactive programming tool, is included. Best of all, it’s written in the clear, crisp, uncompromising style that has made Schildt the choice of millions worldwide.\nDesigned for Easy Learning:\n•Key Skills and Concepts―Chapter-opening lists of specific skills covered in the chapter\n•Ask the Expert―Q&A sections filled with bonus information and helpful tips\n•Try This―Hands-on exercises that show you how to apply your skills\n•Self Tests―End-of-chapter quizzes to reinforce your skills\n•Annotated Syntax―Example code with commentary that describes the programming techniques being illustrated","price":"USD 40"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Nirva Morisseau-Leroy","Martin K. Solomon","Julie Basu"],"pubdate":"2001-08-01","tags":[],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s3221053.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s3221053.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s3221053.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s3221053.jpg"},"alt":"https:\/\/book.douban.com\/subject\/3177404\/","id":"3177404","publisher":"Hanser Fachbuch","isbn10":"3446217681","isbn13":"9783446217683","title":"Oracle 8i. Java- Komponenten programmieren mit EJB, CORBA und JSP. Ab Version 8.1.5.","url":"https:\/\/api.douban.com\/v2\/book\/3177404","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["NIRVa Morisseau-Leroy"],"pubdate":"2001-08","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","binding":"Paperback","translator":[],"catalog":"","pages":"","images":{"small":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","large":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","medium":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif"},"alt":"https:\/\/book.douban.com\/subject\/3177403\/","id":"3177403","publisher":"MC Graw Hill","isbn10":"8448131630","isbn13":"9788448131630","title":"Oracle8i - Programacion de Componentes Java","url":"https:\/\/api.douban.com\/v2\/book\/3177403","alt_title":"","author_intro":"","summary":"","price":"USD 57.50"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Liang"],"pubdate":"2003-12","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","binding":"Pap","translator":[],"catalog":"","pages":"0","images":{"small":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","large":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","medium":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif"},"alt":"https:\/\/book.douban.com\/subject\/2659878\/","id":"2659878","publisher":"Prentice Hall","isbn10":"0131608924","isbn13":"9780131608924","title":"Intro Java W\/Bldr8&Lab\/M","url":"https:\/\/api.douban.com\/v2\/book\/2659878","alt_title":"","author_intro":"","summary":"","price":"$ 127.69"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Van Nederlandsch-Indi, Algemeen Syndic; Van Java, Algemeen Syndicaat Suikerfabri;"],"pubdate":"2010-2","tags":[],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s5165521.jpg","binding":"","translator":[],"catalog":"","pages":"484","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s5165521.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s5165521.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s5165521.jpg"},"alt":"https:\/\/book.douban.com\/subject\/6188496\/","id":"6188496","publisher":"","isbn10":"1144078563","isbn13":"9781144078568","title":"Handelingen Van Het ... Congress ..., Volume 8","url":"https:\/\/api.douban.com\/v2\/book\/6188496","alt_title":"","author_intro":"","summary":"This is an EXACT reproduction of a book published before 1923. This IS NOT an OCR'd book with strange characters, introduced typographical errors, and jumbled words. This book may have occasional imperfections such as missing or blurred pages, poor pictures, errant marks, etc. that were either part of the original artifact, or were introduced by the scanning process. We believe this work is culturally important, and despite the imperfections, have elected to bring it back into print as part of our continuing commitment to the preservation of printed works worldwide. We appreciate your understanding of the imperfections in the preservation process, and hope you enjoy this valuable book.","price":"$ 42.66"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":[],"pubdate":"","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","binding":"","translator":[],"catalog":"","pages":"0","images":{"small":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","large":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","medium":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif"},"alt":"https:\/\/book.douban.com\/subject\/11927255\/","id":"11927255","publisher":"Addison Wesley Publishing Company","isbn10":"0321332857","isbn13":"9780321332851","title":"Java Softwr Soltns& Borland Jbuildr8 Pers Pk","url":"https:\/\/api.douban.com\/v2\/book\/11927255","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":[],"pubdate":"","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","binding":"","translator":[],"catalog":"","pages":"0","images":{"small":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","large":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","medium":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif"},"alt":"https:\/\/book.douban.com\/subject\/11928199\/","id":"11928199","publisher":"Addison Wesley Publishing Company","isbn10":"0321359976","isbn13":"9780321359971","title":"Absolute Java & Borland Jbuilder8 Persnl Pk","url":"https:\/\/api.douban.com\/v2\/book\/11928199","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":[],"pubdate":"","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","binding":"","translator":[],"catalog":"","pages":"0","images":{"small":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","large":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","medium":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif"},"alt":"https:\/\/book.douban.com\/subject\/11923868\/","id":"11923868","publisher":"Addison Wesley Publishing Company","isbn10":"0321229746","isbn13":"9780321229748","title":"Prob Solvg with Java Upd& Borland Jbuilder8","url":"https:\/\/api.douban.com\/v2\/book\/11923868","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":[],"pubdate":"","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","binding":"","translator":[],"catalog":"","pages":"0","images":{"small":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","large":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","medium":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif"},"alt":"https:\/\/book.douban.com\/subject\/11695291\/","id":"11695291","publisher":"Addison Wesley Longman","isbn10":"0131559192","isbn13":"9780131559196","title":"Java Intro Problm Solvg & CodeWarrior 8 Pkg","url":"https:\/\/api.douban.com\/v2\/book\/11695291","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Koorders, Sijfert Hendrik; Valeton, Theodoric;"],"pubdate":"","tags":[],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s19744980.jpg","binding":"","translator":[],"catalog":"","pages":"300","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s19744980.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s19744980.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s19744980.jpg"},"alt":"https:\/\/book.douban.com\/subject\/16934256\/","id":"16934256","publisher":"","isbn10":"1279520752","isbn13":"9781279520758","title":"Bijdrage No. 1-13 Tot de Kennis Der Boomsoorten Op Java, Issue 8...","url":"https:\/\/api.douban.com\/v2\/book\/16934256","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Mala Gupta"],"pubdate":"2016-9-30","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29085729.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"704","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s29085729.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s29085729.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29085729.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26888880\/","id":"26888880","publisher":"Manning Publications","isbn10":"1617293253","isbn13":"9781617293252","title":"OCA Java SE 8 Programmer I Certification Guide","url":"https:\/\/api.douban.com\/v2\/book\/26888880","alt_title":"","author_intro":"","summary":"","price":"USD 59.99"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["志賀 澄人"],"pubdate":"2016-1-18","tags":[],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29447746.jpg","binding":"単行本（ソフトカバー）","translator":[],"catalog":"","pages":"544","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s29447746.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s29447746.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29447746.jpg"},"alt":"https:\/\/book.douban.com\/subject\/27041811\/","id":"27041811","publisher":"インプレス","isbn10":"4844339931","isbn13":"9784844339939","title":"徹底攻略 Java SE 8 Silver 問題集対応","url":"https:\/\/api.douban.com\/v2\/book\/27041811","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["志賀 澄人","山岡 敏夫"],"pubdate":"2015-6-12","tags":[],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29448396.jpg","binding":"単行本（ソフトカバー）","translator":[],"catalog":"","pages":"328","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s29448396.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s29448396.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29448396.jpg"},"alt":"https:\/\/book.douban.com\/subject\/27042366\/","id":"27042366","publisher":"インプレス","isbn10":"4844338293","isbn13":"9784844338291","title":"徹底攻略 Java SE 7\/8 Bronze 問題集対応","url":"https:\/\/api.douban.com\/v2\/book\/27042366","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":2,"average":"0.0","min":0},"subtitle":"","author":["Kathy Sierra","Bert Bates"],"pubdate":"2017-5-27","tags":[{"count":2,"name":"计算机","title":"计算机"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29448976.jpg","binding":"CD-ROM","translator":[],"catalog":"","pages":"437","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s29448976.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s29448976.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29448976.jpg"},"alt":"https:\/\/book.douban.com\/subject\/27043034\/","id":"27043034","publisher":"McGraw-Hill Education","isbn10":"1260011399","isbn13":"9781260011395","title":"OCA Java SE 8 Programmer I Exam Guide","url":"https:\/\/api.douban.com\/v2\/book\/27043034","alt_title":"","author_intro":"","summary":"","price":"GBP 38.94"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"Note:","author":["John Lewis","William Loftus"],"pubdate":"2014-3-3","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29532437.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"832","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s29532437.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s29532437.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29532437.jpg"},"alt":"https:\/\/book.douban.com\/subject\/27128315\/","id":"27128315","publisher":"Pearson","isbn10":"0133594955","isbn13":"9780133594959","title":"Java Software Solutions (8th Edition)","url":"https:\/\/api.douban.com\/v2\/book\/27128315","alt_title":"","author_intro":"About the Author\nJohn Lewis is the co-author of the previous editions of the Java Software Solutions textbook, Java Software Structures, Java Foundations, and the Java Software Solutions textbook used for AP computer science classes.\nRead more","summary":"MyProgrammingLab is not a self-paced technology and should only be purchased when required by an instructor.\nJava Software Solutions   is intended for use in the Java programming course. It is also suitable for readers interested in introductory Java programming.\nJava Software Solutions  teaches a foundation of programming techniques to foster well-designed object-oriented software. Heralded for its integration of small and large realistic examples, this worldwide best-selling text emphasizes building solid problem-solving and design skills to write high-quality programs.\nMyProgrammingLab for Java Software Solutions is a total learning package. MyProgrammingLab is an online homework, tutorial, and assessment program that truly engages students in learning. It helps students better prepare for class, quizzes, and exams—resulting in better performance in the course—and provides educators a dynamic set of tools for gauging individual and class progress.\nTeaching and Learning Experience\nTo provide a better teaching and learning experience, for both instructors and students, this program will:\nPersonalize Learning: Through the power of practice and immediate personalized feedback, MyProgrammingLab helps students fully grasp the logic, semantics, and syntax of programming.  Help Students Build Sound Program-Development Skills: A software methodology is introduced early and revisited throughout the text to ensure that students build sound program-development skills.    Enhance Learning with In-text Features: A variety of features in each chapter help motivate learning.  Provide Opportunities to Practice Design Skills and Implement Java Programs: A wealth of end-of-chapter programming projects and chapter review features help reinforce key concepts.   Support Instructors and Students: Resources to support learning are available on the Companion website and Instructor Resource Center.","price":"USD 10.99"},{"rating":{"max":10,"numRaters":1,"average":"0.0","min":0},"subtitle":"","author":["Jeanne Boyarsky","Scott Selikoff"],"pubdate":"2016","tags":[{"count":1,"name":"计算机","title":"计算机"},{"count":1,"name":"Java","title":"Java"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29656399.jpg","binding":"","translator":[],"catalog":"","pages":"723","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s29656399.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s29656399.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29656399.jpg"},"alt":"https:\/\/book.douban.com\/subject\/27620453\/","id":"27620453","publisher":"","isbn10":"1119067901","isbn13":"9781119067900","title":"OCP: Oracle Certified Professional Java SE 8 Programmer II Study Guide","url":"https:\/\/api.douban.com\/v2\/book\/27620453","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"Develop Enterprise Java applications compliant with the latest version of the Java EE specification","author":["David R. Heffelfinger"],"pubdate":"2017-12-12","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29702127.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"372","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s29702127.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s29702127.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29702127.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30154891\/","id":"30154891","publisher":"Packt Publishing","isbn10":"1788293673","isbn13":"9781788293679","title":"Java EE 8 Application Development: Develop Enterprise applications using the latest versions of CDI, JAX-RS, JSON-B, JPA, Security, and more","url":"https:\/\/api.douban.com\/v2\/book\/30154891","alt_title":"","author_intro":"David Heffelfinger is the Chief Technology Officer of Ensode Technology, LLC, a software consulting firm based in the greater Washington DC area. He has been architecting, designing and developing software professionally since 1995 and has been using Java as his primary programming language since 1996. He has worked on many large scale projects for several clients including the US Department of Homeland Security, Freddie Mac, Fannie Mae, and the US Department of Defense. He has a Masters degree in Software Engineering from Southern Methodist University.","summary":"Key Features\nThis book covers all of the major Java EE 8 APIs and includes new additions such as enhanced Security, JSON-B Processing, and moreLearn additional Java EE APIs, such as the Java API for Websocket and the Java Message Service (JMS)Develop applications by taking advantage of the latest versions of CDI, Security, Servlets, and JSF and other Java EE specifications\nBook Description\nJava EE is an Enterprise Java standard. Applications written to comply with the Java EE specification do not tie developers to a specific vendor; instead they can be deployed to any Java EE compliant application server. With this book, you’ll get all the tools and techniques you need to build robust and scalable applications in Java EE 8. This book covers all the major Java EE 8 APIs including JSF 2.3, Enterprise JavaBeans (EJB) 3.2, Contexts and Dependency Injection (CDI) 2.0, the Java API for WebSockets, JAX-RS 2.1, Servlet 4.0, and more.\nThe book begins by introducing you to Java EE 8 application development and goes on to cover all the major Java EE 8 APIs. It goes beyond the basics to develop Java EE applications that can be deployed to any Java EE 8 compliant application server.\nIt also introduces advanced topics such as JSON-P and JSON-B, the Java APIs for JSON processing, and the Java API for JSON binding. These topics dive deep, explaining how the two APIs (the Model API and the Streaming API) are used to process JSON data.\nMoving on, we cover additional Java EE APIs, such as the Java API for Websocket and the Java Message Service (JMS), which allows loosely coupled, asynchronous communication. Further on, you’ll discover ways to secure Java EE applications by taking advantage of the new Java EE Security API.\nFinally, you’ll learn more about the RESTful web service development using the latest JAX-RS 2.1 specification. You’ll also get to know techniques to develop cloud-ready microservices in Java EE.\nWhat you will learn\nDevelop and deploy Java EE applicationsEmbrace the latest additions to the Contexts and Dependency Injection (CDI) specification to develop Java EE applicationsDevelop web-based applications by utilizing the latest version of JavaServer Faces, JSF 2.3.Understand the steps needed to process JSON data with JSON-P and the new JSON-B Java EE APIImplement RESTful web services using the new JAX-RS 2.1 API, which also includes support for Server-Sent Events (SSE) and the new reactive client API\nWho This Book Is For\nIf you are a Java developer who wants to become proficient with Java EE 8, this book is ideal for you. You are expected to have some experience with Java and to have developed and deployed applications in the past, but you don't need any previous knowledge of Java EE.\nTable of Contents\nIntroduction to Java EEJavaServer FacesObject Relational Mapping with JPAEnterprise JavaBeansContexts and Dependency InjectionJSON Processing with JSON-B and JSON-PWebsocketsThe Java Message ServiceSecuring Java EE ApplicationsRESTful Web Services with JAX-RSMicroServices Development with Java EESOAP web services with JAX-WSServlet development and deploymentAppendix","price":"USD 45.59"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"Get more control of your applications performances in development and production and know how to meet your Service Level Agreement on critical microservices.","author":["Romain Manni-Bucau"],"pubdate":"2018-1-30","tags":[],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29710910.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"350","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29710910.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29710910.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29710910.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30165162\/","id":"30165162","publisher":"Packt Publishing","isbn10":"178847306X","isbn13":"9781788473064","title":"Java EE 8 High Performance: Master techniques such as memory optimization, caching, concurrency, and multithreading to achieve maximum performance from your enterprise applications.","url":"https:\/\/api.douban.com\/v2\/book\/30165162","alt_title":"","author_intro":"About the Author\nRomain Manni-Bucau is a senior software engineer who has been working in the Java EE space for 7 years and, more recently, with big data. He joined the Apache EE family in 2011 (TomEE, Johnzon, OpenWebBeans, BatchEE, OpenJPA, and Meecrowave). He mainly contributes to open source projects (CukeSpace, Arquillian, Apache Beam, and others) and aims to make development easy and efficient, letting people create what they have in mind without caring for the technical challenges. You can follow Romain on twitter at @rmannibucau.\nRead more","summary":"Key Features\nLearn how to write a JavaEE application with performance constraints (Service Level Agreement-SLA) leveraging the platformLearn how to identify bottlenecks and hotspots in your application to fix themEnsure that you are able to continuously control your performance in production and during development\nBook Description\nThe ease with which we write applications has been increasing, but with this comes the need to address their performance. A balancing act between easily implementing complex applications and keeping their performance optimal is a present-day need. In this book, we explore how to achieve this crucial balance while developing and deploying applications with Java EE 8.\nThe book starts by analyzing various Java EE specifications to identify those potentially affecting performance adversely. Then, we move on to monitoring techniques that enable us to identify performance bottlenecks and optimize performance metrics. Next, we look at techniques that help us achieve high performance: memory optimization, concurrency, multi-threading, scaling, and caching. We also look at fault tolerance solutions and the importance of logging. Lastly, you will learn to benchmark your application and also implement solutions for continuous performance evaluation.\nBy the end of the book, you will have gained insights into various techniques and solutions that will help create high-performance applications in the Java EE 8 environment.\nWhat you will learn\nIdentify performance bottlenecks in an applicationLocate application hotspots using performance toolsUnderstand the work done under the hood by EE containers and its impact on performanceIdentify common patterns to integrate with Java EE applicationsImplement transparent caching on your applicationsExtract more information from your applications using Java EE without modifying existing codeEnsure constant performance and eliminate regression\nWho This Book Is For\nIf you're a Java developer looking to improve the performance of your code or simply wanting to take your skills up to the next level, then this book is perfect for you.\nTable of Contents\nMoney! The quote manager applicationLook under the cover : what is this \"EE\" thing?Monitor your applicationsApplication optimization: memory management and server configurationScale up: threading and implicationsBe lazy, cache your dataBe fault tolerantLoggers and performances: a trade-offBenching your applicationContinuous performance evaluation","price":"USD 49.99"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"Building Web Applications with JavaServer Faces","author":["Bauke Scholtz","Arjan Tijms"],"pubdate":"2018-7-11","tags":[],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29780632.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"510","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29780632.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29780632.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29780632.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30235563\/","id":"30235563","publisher":"Apress","isbn10":"1484233867","isbn13":"9781484233863","title":"The Definitive Guide to JSF in Java EE 8","url":"https:\/\/api.douban.com\/v2\/book\/30235563","alt_title":"","author_intro":"","summary":"","price":"GBP 29.99"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"A Problem-Solution Approach","author":["Josh Juneau"],"pubdate":"2018-7-31","tags":[],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29791196.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"812","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s29791196.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s29791196.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29791196.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30245983\/","id":"30245983","publisher":"Apress","isbn10":"1484235932","isbn13":"9781484235935","title":"Java EE 8 Recipes","url":"https:\/\/api.douban.com\/v2\/book\/30245983","alt_title":"","author_intro":"","summary":"","price":"GBP 44.99"},{"rating":{"max":10,"numRaters":1,"average":"0.0","min":0},"subtitle":"","author":[],"pubdate":"","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","large":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","medium":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif"},"alt":"https:\/\/book.douban.com\/subject\/30746702\/","id":"30746702","publisher":"","isbn10":"7302503818","isbn13":"9787302503811","title":"OCA Java SE 8 程序员认证考试指南(Exam 1Z0-808)","url":"https:\/\/api.douban.com\/v2\/book\/30746702","alt_title":"","author_intro":"","summary":"","price":"59.30元"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":[],"pubdate":"","tags":[],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s31926816.jpg","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s31926816.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s31926816.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s31926816.jpg"},"alt":"https:\/\/book.douban.com\/subject\/33036739\/","id":"33036739","publisher":"","isbn10":"0595731112","isbn13":"9780595731114","title":"Java 2 Sdk for Solaris Developer's Guide: Solaris 8","url":"https:\/\/api.douban.com\/v2\/book\/33036739","alt_title":"","author_intro":"","summary":"页面: 56, 平装, Iuniverse Inc","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["[美]沃特·萨维奇 (Walter Savitch) 肯里克·莫克（Kenrick Mock）"],"pubdate":"","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s32275427.jpg","binding":"平装-胶订","translator":[],"catalog":"","pages":"715","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s32275427.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s32275427.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s32275427.jpg"},"alt":"https:\/\/book.douban.com\/subject\/33390003\/","id":"33390003","publisher":"机械工业出版社","isbn10":"7111620976","isbn13":"9787111620976","title":"Java程序设计与问题求解（原书第8版）","url":"https:\/\/api.douban.com\/v2\/book\/33390003","alt_title":"","author_intro":"","summary":"","price":"139元"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":[],"pubdate":"","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s32216109.jpg","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s32216109.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s32216109.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s32216109.jpg"},"alt":"https:\/\/book.douban.com\/subject\/33327183\/","id":"33327183","publisher":"","isbn10":"9863751499","isbn13":"9789863751496","title":"網站與資料庫程式開發解析-Java SE8+JSP+SQL Server 2014","url":"https:\/\/api.douban.com\/v2\/book\/33327183","alt_title":"","author_intro":"","summary":"關鍵的Java 8程式語言基礎  完整的Java程式語言語法，包括物件導向基礎、程式語言觀念、程式撰寫的技巧。特別強調物件導向程式運作的原理，提供爾後學習其他程式語言時能夠輕鬆地接軌。   最佳的JSP學習入門指南結合網站建置的步驟、網頁內容相關的規則，透過範例的實際練習，一步一步掌握網站互動程式開發與運作的技巧，入門進階一氣呵成。  多元的資料庫網站開發實務  包含SQL Server 2014版本的安裝、操作、建置與移轉的詳細操作。循序配套的JSP資料處理程式解說，包括目錄檔案存取、資料庫內容管理、AJAX即時內容回應，以及符合多數網站所需的檢索功能範例。  教學的經驗回饋與累積  依據多年程式設計教學的經驗，針對學生學習主要癥結加強解說，並加強物件導向特性與觀念之建立，無論是自學或課堂授課，均能有效降低學習的門檻。","price":""},{"rating":{"max":10,"numRaters":1,"average":"0.0","min":0},"subtitle":"","author":["[美]赫伯特·希尔特(Herbert Schildt)"],"pubdate":"2019-9","tags":[{"count":1,"name":"java","title":"java"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s33490416.jpg","binding":"平装","translator":["杜静","敖富江"],"catalog":"\n第1章  Java基础   1\n1.1  Java的历史和基本原则   2\n1.1.1  Java的起源   2\n1.1.2  Java与C和C++的关系   3\n1.1.3  Java对Internet的贡献   3\n1.1.4  Java的魔法：字节码   4\n1.1.5  超越applet   5\n1.1.6  更快速的发布时间表   6\n1.1.7  Java的主要术语   6\n1.2  面向对象程序设计   6\n1.2.1  封装   7\n1.2.2  多态性   8\n1.2.3  继承   8\n1.3  Java开发工具包   8\n1.4  第一个简单的程序   9\n1.4.1  输入程序   9\n1.4.2  编译程序   10\n1.4.3  逐行分析第一个程序   10\n1.5  处理语法错误   12\n1.6  第二个简单程序   12\n1.7  另一种数据类型   14\n1.8  两个控制语句   16\n1.8.1  if语句   16\n1.8.2  for循环语句   18\n1.9  创建代码块   19\n1.10  分号和定位   20\n1.11  缩进原则   20\n1.12  Java关键字   22\n1.13  Java标识符   23\n1.14  Java类库   23\n1.15  自测题   23\n第2章  数据类型与运算符   25\n2.1  数据类型为什么重要   26\n2.2  Java的基本类型   26\n2.2.1  整数类型   26\n2.2.2  浮点型   27\n2.2.3  字符型   28\n2.2.4  布尔类型   29\n2.3  字面值   31\n2.3.1  十六进制、八进制和二进制字面值   31\n2.3.2  字符转义序列   32\n2.3.3  字符串字面值   32\n2.4  变量详解   33\n2.4.1  初始化变量   33\n2.4.2  动态初始化   33\n2.5  变量的作用域和生命期   34\n2.6  运算符   36\n2.7  算术运算符   36\n2.8  关系运算符和逻辑运算符   37\n2.9  短路逻辑运算符   39\n2.10  赋值运算符   40\n2.11  速记赋值   40\n2.12  赋值中的类型转换   41\n2.13  不兼容类型的强制转换   42\n2.14  运算符的优先级   43\n2.15  表达式   45\n2.15.1  表达式中的类型转换   45\n2.15.2  间距和圆括号   46\n2.16  自测题   47\n第3章  程序控制语句   49\n3.1  从键盘输入字符   50\n3.2  if语句   51\n3.2.1  嵌套if语句   52\n3.2.2  if-else-if阶梯状结构   53\n3.3  switch语句   54\n3.4  for循环   58\n3.4.1  for循环的一些变体   60\n3.4.2  缺失部分要素的for循环   61\n3.4.3  无限循环   61\n3.4.4  没有循环体的循环   62\n3.4.5  在for循环内部声明循环控制变量   62\n3.4.6  增强型for循环   63\n3.5  while循环   63\n3.6  do-while循环   64\n3.7  使用break语句退出循环   69\n3.8  将break语句作为一种goto语句使用   70\n3.9  使用continue语句   73\n3.10  嵌套循环   77\n3.11  自测题   78\n第4章  类、对象和方法   81\n4.1  类的基础知识   82\n4.1.1  类的基本形式   82\n4.1.2  定义类   83\n4.2  如何创建对象   85\n4.3  引用变量和赋值   85\n4.4  方法   86\n4.5  从方法返回值   88\n4.6  返回值   89\n4.7  使用形参   90\n4.8  构造函数   98\n4.9  带形参的构造函数   99\n4.10  深入介绍new运算符   100\n4.11  垃圾回收   101\n4.12  this关键字   101\n4.13  自测题   103\n第5章  其他数据类型与运算符   105\n5.1  数组   106\n5.2  多维数组   110\n5.2.1  二维数组   110\n5.2.2  不规则数组   111\n5.2.3  三维或更多维的数组   112\n5.2.4  初始化多维数组   112\n5.3  另一种声明数组的语法   113\n5.4  数组引用赋值   114\n5.5  使用length成员   115\n5.6  for-each形式的循环   119\n5.6.1  迭代多维数组   122\n5.6.2  应用增强型for循环   123\n5.7  字符串   123\n5.7.1  构造字符串   124\n5.7.2  操作字符串   124\n5.7.3  字符串数组   126\n5.7.4  字符串是不可变的   127\n5.7.5  使用String控制switch语句   128\n5.8  使用命令行实参   128\n5.9  使用局部变量的类型推断功能   130\n5.9.1  引用类型的局部变量类型推断   131\n5.9.2  在for循环中使用局部变量类型推断   132\n5.9.3  var的一些限制   133\n5.10  位运算符   133\n5.10.1  位运算符的与、或、异或和非   134\n5.10.2  移位运算符   137\n5.10.3  位运算符的赋值速记符   139\n5.11  ?运算符   141\n5.12  自测题   143\n第6章  方法和类详解   145\n6.1  控制对类成员的访问   146\n6.2  向方法传递对象   150\n6.3  返回对象   153\n6.4  方法重载   155\n6.5  重载构造函数   159\n6.6  递归   163\n6.7  理解static关键字   165\n6.8  嵌套类和内部类   170\n6.9  varargs   173\n6.9.1  varargs基础   173\n6.9.2  重载varargs方法   175\n6.9.3  varargs和歧义   177\n6.10  自测题   178\n第7章  继承   179\n7.1  继承的基础知识   180\n7.2  成员访问与继承   182\n7.3  构造函数和继承   184\n7.4  使用super调用超类构造函数   186\n7.5  使用super访问超类成员   189\n7.6  创建多级层次结构   192\n7.7  何时调用构造函数   195\n7.8  超类引用和子类对象   196\n7.9  方法重写   200\n7.10  重写的方法支持多态性   202\n7.11  为何使用重写方法   203\n7.12  使用抽象类   207\n7.13  使用final   210\n7.13.1  使用final防止重写   210\n7.13.2  使用final防止继承   210\n7.13.3  对数据成员使用final   211\n7.14  Object类   212\n7.15  自测题   213\n第8章  包和接口   215\n8.1  包   216\n8.1.1  定义包   216\n8.1.2  寻找包和CLASSPATH   217\n8.1.3  一个简短的包示例   217\n8.2  包和成员访问   218\n8.3  理解被保护的成员   220\n8.4  导入包   222\n8.5  Java的类库位于包中   223\n8.6  接口   223\n8.7  实现接口   224\n8.8  使用接口引用   227\n8.9  接口中的变量   233\n8.10  接口能够扩展   234\n8.11  默认接口方法   235\n8.11.1  默认方法的基础知识   235\n8.11.2  默认方法的实际应用   236\n8.11.3  多继承问题   237\n8.12  在接口中使用静态方法   238\n8.13  私有接口方法   239\n8.14  有关包和接口的最后思考   240\n8.15  自测题   240\n第9章  异常处理   241\n9.1  异常的层次结构   242\n9.2  异常处理基础   242\n9.2.1  使用关键字try和catch   242\n9.2.2  一个简单的异常示例   243\n9.3  未捕获异常的结果   245\n9.4  使用多个catch语句   247\n9.5  捕获子类异常   247\n9.6  try代码块可以嵌套   248\n9.7  抛出异常   249\n9.8  Throwable详解   251\n9.9  使用finally   252\n9.10  使用throws语句   254\n9.11  另外3种异常功能   255\n9.12  Java的内置异常   256\n9.13  创建异常子类   258\n9.14  自测题   262\n第10章  使用I\/O   265\n10.1  基于流的Java I\/O   266\n10.2  字节流和字符流   266\n10.3  字节流类   266\n10.4  字符流类   267\n10.5  预定义流   267\n10.6  使用字节流   268\n10.6.1  读取控制台输入   269\n10.6.2  写入控制台输出   269\n10.7  使用字节流读写文件   270\n10.7.1  从文件输入   270\n10.7.2  写入文件   273\n10.8  自动关闭文件   275\n10.9  读写二进制数据   277\n10.10  随机访问文件   281\n10.11  使用Java字符流   283\n10.11.1  使用字符流的控制台输入   284\n10.11.2  使用字符流的控制台输出   286\n10.12  使用字符流的文件I\/O   287\n10.12.1  使用FileWriter   287\n10.12.2  使用FileReader   288\n10.13  使用Java的类型封装器转换数值字符串   289\n10.14  自测题   296\n第11章  多线程程序设计   299\n11.1  多线程的基础知识   300\n11.2  Thread类和Runnable接口   300\n11.3  创建一个线程   301\n11.4  创建多个线程   309\n11.5  确定线程何时结束   311\n11.6  线程的优先级   314\n11.7  同步   316\n11.8  使用同步方法   317\n11.9  同步语句   319\n11.10  使用notify( )、wait( )和notifyAll( )的线程通信   321\n11.11  线程的挂起、继续执行和停止   326\n11.12  自测题   330\n第12章  枚举、自动装箱、静态导入和注解   333\n12.1  枚举   334\n12.2  Java语言中的枚举是类类型   336\n12.3  values( )和valueOf( )方法   336\n12.4  构造函数、方法、实例变量和枚举   337\n12.5  枚举继承enum   339\n12.6  自动装箱   344\n12.7  类型封装器   344\n12.8  自动装箱的基础知识   346\n12.9  自动装箱和方法   347\n12.10  发生在表达式中的自动装箱\/自动拆箱   348\n12.11  静态导入   349\n12.12  注解(元数据)   352\n12.13  自测题   354\n第13章  泛型   355\n13.1  泛型的基础知识   356\n13.2  简单的泛型示例   356\n13.2.1  泛型只能用于引用类型   359\n13.2.2  泛型类型是否相同基于其类型实参   359\n13.2.3  带有两个类型形参的泛型类   360\n13.2.4  泛型类的一般形式   361\n13.3  受限类型   361\n13.4  使用通配符实参   364\n13.5  受限通配符   366\n13.6  泛型方法   369\n13.7  泛型构造函数   370\n13.8  泛型接口   371\n13.9  原类型和遗留代码   377\n13.10  使用菱形运算符进行类型推断   379\n13.11  局部变量类型推断和泛型   380\n13.12  擦除特性   380\n13.13  歧义错误   380\n13.14  一些泛型限制   381\n13.14.1  类型形参不能实例化   381\n13.14.2  对静态成员的限制   381\n13.14.3  泛型数组限制   382\n13.14.4  泛型异常限制   383\n13.15  继续学习泛型   383\n13.16  自测题   383\n第14章  lambda表达式和方法引用   385\n14.1  lambda表达式简介   386\n14.1.1  lambda表达式的基础知识   386\n14.1.2  函数式接口   387\n14.1.3  几个lambda表达式示例   389\n14.2  块lambda表达式   392\n14.3  泛型函数式接口   393\n14.4  lambda表达式和变量捕获   398\n14.5  从 lambda表达式中抛出异常   399\n14.6  方法引用   401\n14.6.1  静态方法的方法引用   401\n14.6.2  实例方法的方法引用   402\n14.7  构造函数引用   406\n14.8  预定义的函数式接口   408\n14.9  自测题   409\n第15章  模块   411\n15.1  模块基础   412\n15.1.1  简单的模块示例   413\n15.1.2  编译、运行第一个模块示例   416\n15.1.3  requires和exports   417\n15.2  java.base和平台模块   417\n15.3  旧代码和未命名的模块   418\n15.4  导出到特定的模块   419\n15.5  使用requires transitive   420\n15.6  使用服务   423\n15.6.1  服务和服务提供程序的基础知识   423\n15.6.2  基于服务的关键字   424\n15.6.3  基于模块的服务示例   424\n15.7  其他模块功能   430\n15.7.1  open模块   430\n15.7.2  opens语句   430\n15.7.3  requires static   430\n15.8  继续模块的学习   431\n15.9  自测题   431\n第16章  Swing介绍   433\n16.1  Swing的起源和设计原则   434\n16.2  组件和容器   435\n16.2.1  组件   435\n16.2.2  容器   436\n16.2.3  顶级容器窗格   436\n16.3  布局管理器   436\n16.4  第一个简单的Swing程序   437\n16.5  Swing事件处理   440\n16.5.1  事件   441\n16.5.2  事件源   441\n16.5.3  事件监听器   441\n16.5.4  事件类和监听器接口   441\n16.6  使用JButton   442\n16.7  使用JTextField   445\n16.8  使用JCheckBox   448\n16.9  使用JList   450\n16.10  使用匿名内部类或lambda表达式来处理事件   458\n16.11  自测题   459\n附录A  自测题答案   461\n附录B  使用Java的文档注释   495\n附录C  编译运行简单的单文件程序   503\n附录D  JShell简介   505\n附录E  更多Java关键字   513\n\n","pages":"532","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s33490416.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s33490416.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s33490416.jpg"},"alt":"https:\/\/book.douban.com\/subject\/34838105\/","id":"34838105","publisher":"清华大学出版社","isbn10":"7302536058","isbn13":"9787302536055","title":"Java 11官方入门教程(第8版)","url":"https:\/\/api.douban.com\/v2\/book\/34838105","alt_title":"","author_intro":"Herbert Schildt是权威的Java语言专家、畅销书作家。三十多年来，Herbert撰写的程序设计图书在全球的销量达数百万册，并被翻译成多种语言。Herbert已撰写大量关于Java、C++、C和C#编程语言的书籍和文章，包括《Java 9编程参考官方大全(第10版)》、Herb Schildt’s Java Programming Cookbook、Introducing JavaFX 8 Programming和Swing: A Beginner’s Guide。\nHerbert对计算机的各个方面充满兴趣，其中投入精力最多的是计算机语言，尤其是计算机语言的标准化。Herbert是ANSI\/ISO委员会的成员，参与了1989年C语言的标准化、1998年C++语言的标准化，以及2011年C++标准的更新。Herbert拥有伊利诺伊大学的学士和硕士学位。他的个人网站为www.HerbSchildt.com。","summary":"《Java 11官方入门教程(第8版)》针对Java SE 11做了全面细致的更新。\n《Java 11官方入门教程(第8版)》由全球著名的畅销书编程作家Herbert Schildt执笔，指导你立即着手编写Java程序。本书开篇讲解基础知识，分析如何创建、编译和运行Java程序；接着浓墨重彩地描述构成Java语言核心的关键字、语法和结构；最后讲述Java的一些高级特性，包括多线程编程、泛型、lambda表达式、模块、Swing以及Java交互编程工具JShell。本书通俗易懂、简明扼要、详略得当，成为全球数百万读者的理想选择。\n便于学习的设计\n● 关键技能与概念：每章开头列出要介绍的技能和概念\n● 专家解答：以问答形式提供附加信息和实用提示\n● 编程练习：示范如何运用编程技能的紧贴实用的练习\n● 自测题：每章末尾都有一些测试题，以帮助读者扎实掌握Java技能\n● 语法注释：示例代码中的注释阐述正在演示的编程技巧","price":"99.8"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":[],"pubdate":"","tags":[],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s33509050.jpg","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s33509050.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s33509050.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s33509050.jpg"},"alt":"https:\/\/book.douban.com\/subject\/34871616\/","id":"34871616","publisher":"","isbn10":"1788475143","isbn13":"9781788475143","title":"Java EE 8 Microservices","url":"https:\/\/api.douban.com\/v2\/book\/34871616","alt_title":"","author_intro":"","summary":"","price":""}]}
