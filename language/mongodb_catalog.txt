>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>MongoDB权威指南
第1 章　简介　　1
1.1　丰富的数据模型　　1
1.2　容易扩展　　　1
1.3　丰富的功能　　　　2
1.4　不牺牲速度　　　　3
1.5　简便的管理　　　　3
1.6　其他内容　　　3
第2 章　入门　　5
2.1　文档　　5
2.2　集合　　6
2.2.1　无模式　　　　6
2.2.2　命名　　　　7
2.3　数据库　　　8
2.4　启动mongodb　　9
2.5　mongodb shell　　　　　　10
2.5.1　运行shell　　　　10
2.5.2　mongodb 客户端　　11
2.5.3　shell 中的基本操作　　11
2.5.4　使用shell 的窍门　　　　13
.2.6　数据类型　　　　15
2.6.1　基本数据类型　　15
2.6.2　数字　　17
2.6.3　日期　　18
2.6.4　数组　　19
2.6.5　内嵌文档　　　　19
2.6.6　_id 和objectid　　　20
第3 章　创建、更新及删除文档　　　23
3.1　插入并保存文档　　　23
3.1.1　批量插入　　　　23
3.1.2　插入：原理和作用　　24
3.2　删除文档　　　　24
3.3　更新文档　　　　25
3.3.1　文档替换　　　　26
3.3.2　使用修改器　　27
3.3.3　upsert　　　　36
3.3.4　更新多个文档　　38
3.3.5　返回已更新的文档　　38
3.4　瞬间完成　　　　41
3.4.1　安全操作　　　　41
3.4.2　捕获“常规”错误　　42
3.5　请求和连接　　　　43
第4 章　查询　　　　 45
4.1　find 简介　　　　45
4.1.1　指定返回的键　　46
4.1.2　限制　　46
4.2　查询条件　　　　47
4.2.1　查询条件　　　　47
4.2.2　or 查询　　47
4.2.3　$not　　　　48
4.2.4　条件句的规则　　49
4.3　特定于类型的查询　　　　49
4.3.1　null　　　49
4.3.2　正则表达式　　50
4.3.3　查询数组　　　　51
4.3.4　查询内嵌文档　　53
4.4　$where 查询　　　　55
4.5　游标　　　　56
4.5.2　避免使用skip 略过大量结果　　　58
4.5.3　高级查询选项　　60
4.5.4　获取一致结果　　61
4.6　游标内幕　　　　63
第5 章　索引　　　　 65
5.1　索引简介　　　　65
5.1.1　扩展索引　　　　67
5.1.2　索引内嵌文档中的键　　　　68
5.1.3　为排序创建索引　　　68
5.1.4　索引名称　　　　69
5.2　唯一索引　　　　69
5.2.1　消除重复　　　　69
5.2.2　复合唯一索引　　70
5.3　使用explain 和hint　　70
5.4　索引管理　　　　75
5.5　地理空间索引　　76
5.5.1　复合地理空间索引　　78
5.5.2　地球不是二维平面　　78
第6 章　聚合　　　　 79
6.1　count　　　79
6.2　distinct　　　　79
6.3　group　　　80
6.3.1　使用完成器　　82
6.3.2　将函数做为键使用　　84
6.4　mapreduce　　　　84
6.4.1　例1：找出集合中的所有键　　85
6.4.2　例2： 网页分类　　　　87
6.4.3　mongodb 和mapreduce　　　87
第7 章　进阶指南　　　　 91
7.1　数据库命令　　　　91
7.1.1　命令的工作原理　　　92
7.1.2　命令参考　　　　92
7.2　固定集合　　　　95
7.2.1　属性及用法　　96
7.2.2　创建固定集合　　96
7.2.3　自然排序　　　　97
7.2.4　尾部游标　　　　98
7.3　gridfs：储存文件　　　　99
7.3.1　开始使用gridfs：mongofiles　　99
7.3.2　通过mongodb 驱动程序操作gridfs　　　　100
7.3.3　内部原理　　100
7.4　服务器端脚本　　101
7.4.1　db.eval　　101
7.4.2　存储javascript 脚本　　　　102
7.4.3　安全性　　103
7.5　数据库引用　　　104
7.5.1　什么是dbref　　104
7.5.2　示例模式　　104
7.5.3　驱动对dbref 的支持　　　105
7.5.4　什么时候该使用dbref 呢　　106
第8 章　管理　　　 107
8.1　启动和停止mongodb　　107
8.1.1　从命令行启动　　　　107
8.1.2　配置文件　　109
8.1.3　停止mongodb　　　110
8.2　监控　　　110
8.2.1　使用管理接口　　　　110
8.2.2　serverstatus　　112
8.2.3　mongostat　　113
8.2.4　第三方插件　　　　113
8.3　安全和认证　　　114
8.3.1　认证的基础知识　　114
8.3.2　认证的工作原理　　115
8.3.3　其他安全考虑　　　　116
8.4　备份和修复　　　116
8.4.1　数据文件备份　　　　117
8.4.2　mongodump 和mongorestore　　117
8.4.3　fsync 和锁　　　　118
8.4.4　从属备份　　119
8.4.5　修复　　　　119
第9 章　复制　　　 121
9.1　主从复制　　　　121
9.1.1　选项　　　　122
9.1.2　添加删除源　　　　123
9.2　副本集　　　124
9.2.1　初始化副本集　　　　125
9.2.2　副本集中的节点　　127
9.2.3　故障切换和主节点选举　　　128
9.3　在从服务器上执行操作　　　　129
9.3.1　读扩展　　130
9.3.2　用从节点做数据处理　　130
9.4　工作原理　　　　130
9.4.1　oplog　　131
9.4.2　同步　　　　131
9.4.3　复制状态和本地数据库　　　132
9.4.4　阻塞复制　　132
9.5　管理　　　133
9.5.1　诊断　　　　133
9.5.2　变更oplog 的大小　　　　134
9.5.3　认证复制　　134
第10 章　分片　　 135
10.1　分片简介　　　　135
10.2　mongodb 中的分片　　　135
10.3　片键　　　137
10.3.1　将已有的集合分片　　137
10.3.2　递增片键还是随机片键 　137
10.3.3　片键对操作的影响　　138
10.4　建立分片　　　　139
10.4.1　启动服务器　　　139
10.4.2　切分数据　　140
10.5　生产配置　　140
10.5.1　健壮的配置　　　141
10.5.2　多个mongos　　　141
10.5.3　健壮的片　　141
10.5.4　物理服务器　　　142
10.6　管理分片　　　　142
10.6.1　配置集合　　142
10.6.2　分片命令　　143
第11 章　应用举例　　　　145
11.1　化学品搜索引擎：java　　145
11.2　新闻聚合器：php　　　　149
11.3　自定义提交表单：ruby　　154
11.4　实时分析: python　　157
附录a　安装mongodb　　　163
附录b　mongo：mongodb shell　　 167
附录c　深入mongodb 内部 　　169
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>MongoDB权威指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>MongoDB权威指南（第2版）
序　　XV
前言　　XVII
第一部分　MongoDB 介绍
第1章　MongoDB 简介　　3
1.1 　易于使用　　3
1.2 　易于扩展　　4
1.3 　丰富的功能　　4
1.4 　卓越的性能　　5
1.5 　小结　　5
第2章　MongoDB 基础知识　　7
2.1 　文档　　7
2.2 　集合　　8
2.2.1 　动态模式　　8
2.2.2 　命名　　9
2.3 　数据库　　10
2.4 　启动MongoDB　　11
2.5 　MongoDB shell 简介　　12
2.5.1 　运行shell　　12
2.5.2 　MongoDB 客户端　　13
2.5.3 　shell 中的基本操作　　14
2.6 　数据类型　　16
2.6.1 　基本数据类型　　16
2.6.2 　日期　　18
2.6.3 　数组　　18
2.6.4 　内嵌文档　　19
2.6.5 　_id 和ObjectId　　20
2.7 　使用MongoDB shell　　21
2.7.1 　shell 小贴士　　22
2.7.2 　使用shell 执行脚本　　23
2.7.3 　创建.mongorc.js 文件　　25
2.7.4 　定制shell 提示　　26
2.7.5 　编辑复合变量　　26
2.7.6 　集合命名注意事项　　27
第3章　创建、更新和删除文档　　29
3.1 　插入并保存文档　　29
3.1.1 　批量插入　　29
3.1.2 　插入校验　　30
3.2 　删除文档　　31
3.3 　更新文档　　32
3.3.1 　文档替换　　32
3.3.2 　使用修改器　　34
3.3.3 　upsert　　45
3.3.4 　更新多个文档　　47
3.3.5 　返回被更新的文档　　48
3.4 　写入安全机制　　50
第4章　查询　　53
4.1 　find 简介　　53
4.1.1 　指定需要返回的键　　54
4.1.2 　限制　　55
4.2 　查询条件　　55
4.2.1 　查询条件　　55
4.2.2 　OR 查询　　56
4.2.3 　$not　　57
4.2.4 　条件语义　　57
4.3 　特定类型的查询　　58
4.3.1 　null　　58
4.3.2 　正则表达式　　59
4.3.3 　查询数组　　59
4.3.4 　查询内嵌文档　　64
4.4 　$where 查询　　65
4.5 　游标　　67
4.5.1 　limit、skip 和sort　　69
4.5.2 　避免使用skip 略过大量结果　　70
4.5.3 　高级查询选项　　72
4.5.4 　获取一致结果　　73
4.5.5 　游标生命周期　　75
4.6 　数据库命令　　75
第二部分　设计应用
第5章　索引　　81
5.1 　索引简介　　81
5.1.1 　复合索引简介　　84
5.1.2 　使用复合索引　　90
5.1.3 　$ 操作符如何使用索引　　91
5.1.4 　索引对象和数组　　96
5.1.5 　索引基数　　98
5.2 　使用explain() 和hint() 　　98
5.3 　何时不应该使用索引　　103
5.4 　索引类型　　104
5.4.1 　唯一索引　　104
5.4.2 　稀疏索引　　106
5.5 　索引管理　　107
5.5.1 　标识索引　　108
5.5.2 　修改索引　　108
第6章　特殊的索引和集合 　　111
6.1 　固定集合　　 　111
6.1.1 　创建固定集合　　113
6.1.2 　自然排序　　113
6.1.3 　循环游标　　115
6.1.4 　没有_id 索引的集合　　115
6.2 　TTL 索引　　116
6.3 　全文本索引　　116
6.3.1 　搜索语法　　119
6.3.2 　优化全文本搜索　　120
6.3.3 　在其他语言中搜索　　121
6.4 　地理空间索引　　121
6.4.1 　地理空间查询的类型　　122
6.4.2 　复合地理空间索引　　123
6.4.3　　2d 索引　　123
6.5 　使用GridFS 存储文件　　125
6.5.1 　GridFS 入门　　126
6.5.2 　在MongoDB 驱动程序中使用GridFS　　126
6.5.3 　揭开GridFS 的面纱　　127
第7章　聚合　　129
7.1 　聚合框架　　129
7.2 　管道操作符　　131
7.2.1 　$match　　132
7.2.2 　$project　　132
7.2.3 　$group　　137
7.2.4 　$unwind　　140
7.2.5 　$sort　　141
7.2.6 　$limit　　142
7.2.7 　$skip　　142
7.2.8 　使用管道　　142
7.3 　MapReduce　　143
7.3.1 　示例1：找出集合中的所有键　　143
7.3.2 　示例2：网页分类　　145
7.3.3 　MongoDB 和MapReduce　　146
7.4 　聚合命令　　148
7.4.1 　count　　149
7.4.2 　distinct　　149
7.4.3 　group　　150
第8章　应用程序设计　　155
8.1 　范式化与反范式化　　155
8.1.1 　数据表示的例子　　156
8.1.2 　基数　　159
8.1.3 　好友、粉丝，以及其他的麻烦事项　　160
8.2 　优化数据操作　　162
8.2.1 　优化文档增长　　162
8.2.2 　删除旧数据　　164
8.3 　数据库和集合的设计　　164
8.4 　一致性管理　　165
8.5 　模式迁移　　166
8.6 　不适合使用MongoDB 的场景　　167
第三部分　复制
第9章　创建副本集　　171
9.1 　复制简介　　171
9.2 　建立副本集　　172
9.3 　配置副本集　　176
9.3.1 　rs 辅助函数　　178
9.3.2 　网络注意事项　　178
9.4 　修改副本集配置　　178
9.5 　设计副本集　　180
9.6 　成员配置选项　　184
9.6.1 　选举仲裁者　　184
9.6.2 　优先级　　185
9.6.3 　隐藏成员　　186
9.6.4 　延迟备份节点　　187
9.6.5 　创建索引　　187
第10章　副本集的组成　　189
10.1 　同步　　189
10.1.1 　初始化同步　　190
10.1.2 　处理陈旧数据　　193
10.2 　心跳　　193
10.3 　选举　　195
10.4 　回滚　　195
第11章　从应用程序连接副本集　　201
11.1 　客户端到副本集的连接　　201
11.2 　等待写入复制　　202
11.2.1 　可能导致错误的原因　　203
11.2.2 　"w" 的其他值　　204
11.3 　自定义复制保证规则　　204
11.3.1 　保证复制到每个数据中心的一台服务器上　　204
11.3.2 　保证写操作被复制到可见节点中的“大多数”　　206
11.3.3 　创建其他规则　　206
11.4 　将读请求发送到备份节点　　207
11.4.1 　出于一致性考虑　　207
11.4.2 　出于负载的考虑　　208
11.4.3 　何时可以从备份节点读取数据　　208
第12章　管理　　211
12.1 　以单机模式启动成员　　211
12.2 　副本集配置　　212
12.2.1 　创建副本集　　212
12.2.2 　修改副本集成员　　213
12.2.3 　创建比较大的副本集　　213
12.2.4 　强制重新配置　　214
12.3 　修改成员状态　　215
12.3.1 　把主节点变为备份节点　　215
12.3.2 　阻止选举　　215
12.3.3 　使用维护模式　　215
12.4 　监控复制　　216
12.4.1 　获取状态　　216
12.4.2 　复制图谱　　218
12.4.3 　复制循环　　220
12.4.4 　禁用复制链　　220
12.4.5 　计算延迟　　221
12.4.6 　调整oplog 大小　　222
12.4.7 　从延迟备份节点中恢复　　223
12.4.8 　创建索引　　224
12.4.9 　在预算有限的情况下进行复制　　225
12.4.10 　主节点如何跟踪延迟　　226
12.5 　主从模式　　227
12.5.1 　从主从模式切换到副本集模式　　228
12.5.2 　让副本集模仿主从模式的行为　　228
第四部分　分片
第13章　分片　　233
13.1 　分片简介　　233
13.2 　理解集群的组件　　234
13.3 　快速建立一个简单的集群　　235
第14章　配置分片　　243
14.1 　何时分片　　243
14.2 　启动服务器　　244
14.2.1 　配置服务器　　244
14.2.2 　mongos 进程　　245
14.2.3 　将副本集转换为分片　　245
14.2.4 　增加集群容量　　247
14.2.5 　数据分片　　247
14.3 　MongoDB 如何追踪集群数据　　248
14.3.1 　块范围　　249
14.3.2 　拆分块　　250
14.4 　均衡器　　254
第15章　选择片键　　257
15.1 　检查使用情况　　257
15.2 　数据分发　　258
15.2.1 　升序片键　　258
15.2.2 　随机分发的片键　　261
15.2.3 　 基于位置的片键　　262
15.3 　片键策略　　263
15.3.1 　散列片键　　264
15.3.2 　GridFS 的散列片键　　265
15.3.3 　流水策略　　266
15.3.4 　多热点　　267
15.4 　片键规则和指导方针　　270
15.4.1 　片键限制　　270
15.4.2 　片键的势　　270
15.5 　控制数据分发　　270
15.5.1 　对多个数据库和集合使用一个集群　　270
15.5.2 　手动分片　　272
第16章　分片管理　　275
16.1 　检查集群状态　　275
16.1.1 　使用sh.status 查看集群摘要信息　　275
16.1.2 　检查配置信息　　277
16.2 　查看网络连接　　282
16.2.1 　查看连接统计　　283
16.2.2 　限制连接数量　　283
16.3 　服务器管理　　285
16.3.1 　添加服务器　　285
16.3.2 　修改分片的服务器　　285
16.3.3 　删除分片　　286
16.3.4 　修改配置服务器　　288
16.4 　数据均衡　　289
16.4.1 　均衡器　　289
16.4.2 　修改块大小　　290
16.4.3 　移动块　　290
16.4.4 　特大块　　292
16.4.5 　刷新配置　　295
第五部分　应用管理
第17章　了解应用的动态　　299
17.1 　了解正在进行的操作　　299
17.1.1 　寻找有问题的操作　　301
17.1.2 　终止操作的执行　　301
17.1.3 　假象　　302
17.1.4 　避免幽灵操作　　302
17.2 　使用系统分析器　　303
17.3 　计算空间消耗　　305
17.3.1 　文档　　305
17.3.2 　集合　　305
17.3.3 　数据库　　306
17.4 　使用mongotop 和monogostat 　　307
第18章　数据管理　　311
18.1 　配置身份验证　　311
18.1.1 　身份验证基本原理　　312
18.1.2 　配置身份验证　　313
18.1.3 　身份验证的工作原理　　314
18.2 　建立和删除索引　　315
18.2.1 　在独立的服务器上建立索引　　315
18.2.2 　在副本集上建立索引　　315
18.2.3 　在分片集群上建立索引　　316
18.2.4 　删除索引　　316
18.2.5 　注意内存溢出杀手　　316
18.3 　预热数据　　317
18.3.1 　将数据库移至内存　　317
18.3.2 　将集合移至内存　　318
18.3.3 　自定义预热　　318
18.4 　压缩数据　　320
18.5 　移动集合　　321
18.6 　预分配数据文件　　322
第19章　持久性　　323
19.1 　日记系统的用途　　323
19.1.1 　批量提交写入操作　　324
19.1.2 　设定提交时间间隔　　325
19.2 　关闭日记系统　　325
19.2.1 　替换数据文件　　325
19.2.2 　修复数据文件　　326
19.2.3 　关于mongod.lock 文件　　326
19.2.4 　隐蔽的异常退出　　327
19.3 　MongoDB 无法保证的事项　　327
19.4 　检验数据损坏　　327
19.5 　副本集中的持久性　　329
第六部分　服务器管理
第20章　启动和停止MongoDB　　333
20.1 　从命令行启动　　333
20.2 　停止MongoDB　　336
20.3 　安全性　　337
20.3.1 　数据加密　　338
20.3.2 　SSL 安全连接　　338
20.4 　日志　　338
第21章　监控MongoDB　　341
21.1 　监控内存使用状况　　341
21.1.1 　有关电脑内存的介绍　　341
21.1.2 　跟踪监测内存使用状况　　342
21.1.3 　跟踪监测缺页中断　　343
21.1.4 　减少索引树的脱靶次数　　345
21.1.5 　IO 延迟　　345
21.1.6 　跟踪监测后台刷新平均时间　　346
21.2 　计算工作集的大小　　347
21.3 　跟踪监测性能状况　　349
21.4 　监控副本集　　352
第22章　备份　　355
22.1 　对服务器进行备份　　355
22.1.1 　文件系统快照　　355
22.1.2 　复制数据文件　　356
22.1.3 　使用mongodump　　357
22.2 　对副本集进行备份　　359
22.3 　对分片集群进行备份　　360
22.3.1 　备份和恢复整个集群　　360
22.3.2 　备份和恢复单独的分片　　360
22.4 　使用mongooplog 进行增量备份　　361
第23章　部署MongoDB　　363
23.1 　设计系统结构　　363
23.1.1 　选择存储介质　　363
23.1.2 　推荐的RAID 配置　　367
23.1.3 　CPU　　368
23.1.4 　选择操作系统　　368
23.1.5 　交换空间　　369
23.1.6 　文件系统　　369
23.2 　虚拟化　　370
23.2.1 　禁止内存过度分配　　370
23.2.2 　神秘的内存　　370
23.2.3 　处理网络磁盘的IO 问题　　371
23.2.4 　使用非网络磁盘　　372
23.3 　系统配置　　372
23.3.1 　禁用NUMA　　372
23.3.2 　更智能地预读取数据　　375
23.3.3 　禁用大内存页面　　376
23.3.4 　选择一种磁盘调度算法　　377
23.3.5 　不要记录访问时间　　377
23.3.6 　修改限制　　378
23.4 　网络配置　　379
23.5 　系统管理　　381
23.5.1 　时钟同步　　381
23.5.2 　OOM Killer　　381
23.5.3 　关闭定期任务　　382
附录A 　安装MongoDB　　383
附录B 　深入MongoDB　　387
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>MongoDB权威指南（第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>MongoDB实战
目　 　 录
第一部分　 入门指南
第1章　 为现代Web而生的数据库　　2
1.1　 生于云端　　3
1.2　 MongoDB的主要特性　　4
1.2.1　 文档数据模型　　4
1.2.2　 即时查询　　6
1.2.3　 二级索引　　7
1.2.4　 复制　　8
1.2.5　 速度和持久性　　9
1.2.6　 数据库扩展　　10
1.3　 MongoDB的核心服务器和工具　　11
1.3.1　 核心服务器　　11
1.3.2　 JavaScript Shell　　12
1.3.3　 数据库驱动　　12
1.3.4　 命令行工具　　13
1.4　 为什么选择MongoDB　　13
1.4.1　 MongoDB与其他数据库的对比　　14
1.4.2　 使用场景和生产部署　　16
1.5　 提示与局限　　18
1.6　 小结　　18
第2章　 MongoDB JavaScript Shell　　19
2.1　 深入MongoDB Shell　　19
2.1.1　 启动Shell　　20
2.1.2　 插入与查询　　20
2.1.3　 更新文档　　22
2.1.4　 删除数据　　23
2.2　 创建索引并查询　　24
2.2.1　 创建一个大集合　　24
2.2.2　 索引与explain()　　25
2.3　 基本管理　　27
2.3.1　 获取数据库信息　　27
2.3.2　 命令工作原理　　29
2.4　 获得帮助　　30
2.5　 小结　　31
第3章　 使用MongoDB编写程序　　32
3.1　 通过Ruby使用MongoDB　　32
3.1.1　 安装与连接　　33
3.1.2　 用Ruby插入文档　　34
3.1.3　 查询与游标　　34
3.1.4　 更新与删除　　35
3.1.5　 数据库命令　　36
3.2　 驱动是如何工作的　　37
3.2.1　 对象ID生成　　37
3.2.2　 BSON　　38
3.2.3　 网络传输　　40
3.3　 构建简单的应用程序　　41
3.3.1　 配置　　41
3.3.2　 收集数据　　42
3.3.3　 查看归档　　43
3.4　 小结　　46
第二部分　 MongoDB与应用程序开发
第4章　 面向文档的数据　　48
4.1　 Schema设计原则　　48
4.2　 设计电子商务数据模型　　49
4.2.1　 产品与分类　　50
4.2.2　 用户与订单　　53
4.2.3　 评论　　55
4.3　 具体细节：数据库、集合与文档　　56
4.3.1　 数据库　　56
4.3.2　 集合　　58
4.3.3　 文档与插入　　61
4.4　 小结　　65
第5章　 查询与聚合　　66
5.1　 电子商务查询　　66
5.1.1　 产品、分类与评论　　66
5.1.2　 用户与订单　　68
5.2　 MongoDB查询语言　　70
5.2.1　 查询选择器　　70
5.2.2　 查询选项　　78
5.3　 聚合指令　　79
5.3.1　 根据用户对评论进行分组　　79
5.3.2　 根据地域对订单应用MapReduce　　81
5.4　 详解聚合　　82
5.4.1　 max()与min()　　82
5.4.2　 distinct　　83
5.4.3　 group　　83
5.4.4　 map-reduce　　84
5.5　 小结　　86
第6章　 更新、原子操作与删除　　87
6.1　 文档更新入门　　87
6.2　 电子商务数据模型中的更新　　89
6.2.1　 产品与分类　　90
6.2.2　 评论　　93
6.2.3　 订单　　94
6.3　 原子文档处理　　96
6.3.1　 订单状态变迁　　97
6.3.2　 库存管理　　98
6.4　 具体细节：MongoDB的更新与删除　　101
6.4.1　 更新类型与选项　　101
6.4.2　 更新操作符　　103
6.4.3　 findAndModify命令　　106
6.4.4　 删除　　106
6.4.5　 并发性、原子性与隔离性　　107
6.4.6　 更新性能说明　　107
6.5　 小结　　109
第三部分　 精通MongoDB
第7章　 索引与查询优化　　112
7.1　 索引理论　　112
7.1.1　 思想实验　　112
7.1.2　 核心索引概念　　115
7.1.3　 B树　　118
7.2　 索引实践　　119
7.2.1　 索引类型　　119
7.2.2　 索引管理　　121
7.3　 查询优化　　125
7.3.1　 识别慢查询　　125
7.3.2　 分析慢查询　　127
7.3.3　 查询模式　　133
7.4　 小结　　134
第8章　 复制　　135
8.1　 复制概述　　135
8.1.1　 为什么复制很重要　　135
8.1.2　 复制的使用场景　　136
8.2　 副本集　　137
8.2.1　 配置　　137
8.2.2　 复制的工作原理　　141
8.2.3　 管理　　146
8.3　 主从复制　　152
8.4　 驱动与复制　　152
8.4.1　 连接与故障转移　　153
8.4.2　 写关注　　154
8.4.3　 读扩展　　155
8.4.4　 标签　　156
8.5　 小结　　158
第9章　 分片　　159
9.1　 分片概述　　159
9.1.1　 何谓分片　　160
9.1.2　 分片的工作原理　　161
9.2　 示例分片集群　　164
9.2.1　 配置　　164
9.2.2　 写入分片集群　　168
9.3　 分片集群的查询与索引　　173
9.3.1　 分片查询类型　　173
9.3.2　 索引　　177
9.4　 选择分片键　　178
9.4.1　 低效的分片键　　178
9.4.2　 理想的分片键　　179
9.5　 生产环境中的分片　　180
9.5.1　 部署与配置　　180
9.5.2　 管理　　184
9.6　 小结　　188
第10章　 部署与管理　　189
10.1　 部署　　189
10.1.1　 部署环境　　189
10.1.2　 服务器配置　　193
10.1.3　 数据的导入与导出　　194
10.1.4　 安全　　195
10.2　 监控与诊断　　197
10.2.1　 日志　　197
10.2.2　 监控工具　　198
10.2.3　 外部监控应用程序　　201
10.2.4　 诊断工具（mongosniff、bsondump）　　201
10.3　 维护　　202
10.3.1　 备份与恢复　　202
10.3.2　 压紧与修复　　204
10.3.3　 升级　　205
10.4　 性能调优　　205
10.4.1　 为提升性能检查索引和查询　　206
10.4.2　 添加内存　　206
10.4.3　 提升磁盘性能　　207
10.4.4　 水平扩展　　207
10.4.5　 寻求专业帮助　　207
10.5　 小结　　208
附录A　 安装　　209
附录B　 设计模式　　216
附录C　 二进制数据与GridFS　　226
附录D　 在PHP、Java与C++中使用MongoDB　　232
附录E　 空间索引　　240

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>MongoDB实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入学习MongoDB
MongoDB 扩展技术
第1 章　欢迎来到分布式计算的世界 　　1
第2 章　理解分片 　　5
2.1　分割数据 　7
2.1.1　分配数据 　　8
2.1.2　如何创建块 　　11
2.2　平衡 　　14
2.3　mongos 　　17
2.4　配置服务器 　　18
2.5　集群的构造 　　18
第3 章　建立集群 　　21
3.1　选择片键 　　23
3.1.1　小基数片键 　　23
3.1.2　升序片键 　　25
3.1.3　随机片键 　　26
3.1.4　好片键 　　27
3.2　新老集合分片 　　29
3.2.1　快速起步 　　29
3.2.2　配置服务器 　　29
3.2.3　mongos 　　30
3.2.4　分片 　　31
3.2.5　数据库和集合 　　32
3.3　增减容量 　　33
3.3.1　移除分片 　　34
3.3.2　修改分片中的服务器 　　35
第4 章　使用集群 　　37
4.1　查询 　　39
4.2　为什么会这样 　　39
4.2.1　计数 　　39
4.2.2　唯一索引 　　40
4.2.3　更新 　　41
4.3　MapReduce 　　42
第5 章　管理 　　43
5.1　使用命令行 　　45
5.1.1　了解概况 　　45
5.1.2　配置集合 　　46
5.1.3　应该连接什么 　　47
5.2　监控 　　47
5.2.1　mongostat 　　48
5.2.2　Web 管理界面 　　48
5.3　备份 　　49
5.4　关于架构的建议 　　50
5.4.1　创建应急站点 　　50
5.4.2　挖护城河 　　50
5.5　错误处理 　　51
5.5.1　分片停机 　　51
5.5.2　多数分片停机 　　51
5.5.3　配置服务器停机 　　52
5.5.4　mongos 进程死掉 　　52
5.5.5　其他注意事项 　　53
第6 章　学习资源 　　55
MongoDB 开发技巧50 例
第1 章　应用设计技巧 　　65
1.1　技巧1：速度和完整性的折中 　　67
1.1.1　示例：网上购物车 　　68
1.1.2　考虑因素 　　69
1.2　技巧2：适应未来的数据要范式化 　　70
1.3　技巧3：尽量单个查询获取数据 　　71
1.3.1　示例：博客 　　71
1.3.2　示例：相册 　　72
1.4　技巧4：嵌入关联数据 　　72
1.5　技巧5：嵌入时间点数据 　　73
1.6　技巧6：不要嵌入不断增加的数据 　　73
1.7　技巧7：预填充数据 　　73
1.8　技巧8：尽可能预先分配空间 　　74
1.9　技巧9：用数组存放要匿名访问的内嵌数据　　　75
1.10　技巧10：文档要自给自足 　　77
1.11　技巧11：优先使用$ 操作符 　　79
1.11.1　深入了解 　　79
1.11.2　提高性能 　　79
1.12　技巧12：随时聚合 　　80
1.13　技巧13：编写代码处理数据完整性问题 　　80
第2 章　实现技巧 　　83
2.1　技巧14：使用正确的类型 　　85
2.2　技巧15：用简单唯一的id 替换_id 　　　85
2.3　技巧16：不要用文档做_id 　　86
2.4　技巧17：不要用数据库引用 　　86
2.5　技巧18：不要用GridFS 处理小的二进制数据　　　87
2.6　技巧19：处理“无缝”故障切换 　　88
2.7　技巧20：处理复制组失效及故障恢复 　　88
第3 章　优化技巧 　　89
3.1　技巧21：尽可能减少磁盘访问 　　91
3.2　技巧22：使用索引减少内存占用 　　92
3.3　技巧23：不要到处使用索引 　　94
3.4　技巧24：索引覆盖查询 　　95
3.5　技巧25：使用复合索引加快多个查询 　　95
3.6　技巧26：通过建立分级文档加速扫描 　　96
3.7　技巧27：AND 型查询要点 　　98
3.8　技巧28：OR 型查询要点 　　98
第4 章　数据安全性和一致性　　101
4.1　技巧29：单机做日志，多机则复制 　　103
4.2　技巧30：坚持使用复制或日志, 或两者兼用 　　104
4.3　技巧31：不要信任repair 恢复的数据 　　105
4.4　技巧32：getlasterror 　　105
4.5　技巧33：开发过程中一定要使用安全写入 　　106
4.6　技巧34：使用w 参数　　106
4.7　技巧35：一定要给w 设置超时　　107
4.8　技巧36：不要每次写入都调用fsync 　　108
4.9　技巧37：崩溃之后正常启动 　　108
4.10　技巧38：持久性服务器的瞬时备份 　　108
第5 章　管理技巧 　　109
5.1　技巧39：手工清理块集合 　　111
5.2　技巧40：用repair 压缩数据库 　　111
5.3　技巧41：不要改变复制组成员投票的权值 　　112
5.4　技巧42：无活跃节点时可重置复制组　　113
5.5　技巧43：不必指定--shardsvr 和--configsvr 参数　　115
5.6　技巧44：开发时才用--notablescan 　　　115
5.7　技巧45：学习JavaScript 　　116
5.8　技巧46：在shell 中管理所有服务器和数据库 　　116
5.9　技巧47：获得帮助 　　117
5.10　技巧48：创建启动文件 　　118
5.11　技巧49：自定义函数 　　119
5.12　技巧50：使用单个连接读取自身写入 　　120
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入学习MongoDB
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>MongoDB管理与开发精要
前言
第一部分　 基　 础　 篇
第1章　 认识MongoDB / 2
1.1　 NoSQL简介 / 2
1.1.1　 产生背景 / 2
1.1.2　 NoSQL的种类及其特性 / 4
1.1.3　 NoSQL特点 / 8
1.1.4　 发展现状 / 8
1.2　 初识MongoDB / 9
1.2.1　 特点及功能 / 10
1.2.2　 适用场合 / 11
1.3　 MongoDB实际应用案例 / 12
1.3.1　 国内案例 / 12
1.3.2　 国外案例 / 12
1.4　 本章小结 / 13
第2章　 快速入门 / 14
2.1　 体系结构 / 14
2.1.1　 数据逻辑结构 / 14
2.1.2　 数据存储结构 / 15
2.1.3　 日志系统 / 17
2.1.4　 元数据的存储 / 18
2.1.5　 数据类型 / 19
2.2　 MongoDB的安装和配置 / 22
2.2.1　 在Windows平台下的安装和配置 / 22
2.2.2　 在Linux平台下的安装和配置 / 23
2.3　 启动数据库 / 25
2.3.1　 命令行方式 / 25
2.3.2　 配置文件方式 / 25
2.3.3　 Daemon方式 / 26
2.3.4　 mongod参数方式 / 26
2.4　 停止数据库 / 27
2.4.1　 Ctrl+C组合键 / 27
2.4.2　 shutdownServer()指令 / 28
2.4.3　 UNIX系统指令 / 28
2.5　 操作数据库 / 29
2.5.1　 连接数据库 / 29
2.5.2　 插入记录 / 29
2.5.3　 查询记录 / 31
2.5.4　 修改记录 / 34
2.5.5　 删除记录 / 34
2.6　 常用GUI管理工具 / 34
2.6.1　 MongoVUE / 34
2.6.2　 RockMongo / 35
2.6.3　 MongoHub / 36
2.7　 本章小结 / 37
第二部分　 高　 级　 篇
第3章　 高级查询 / 40
3.1　 查询操作符 / 40
3.2　 查询语法 / 46
3.2.1　 数组内容的查询 / 47
3.2.2　 内嵌文档的查询 / 47
3.2.3　 正则表达式匹配 / 48
3.2.4　 $where查询 / 48
3.3　 联合查询 / 49
3.3.1　 简单手工关联 / 49
3.3.2　 DBRef方式关联 / 50
3.4　 游标和存储过程 / 51
3.4.1　 游标 / 51
3.4.2　 存储过程 / 52
3.5　 本章小结 / 53
第4章　 高级更新 / 55
4.1　 数据更新命令详解 / 55
4.1.1　 update命令 / 55
4.1.2　 save命令 / 56
4.2　 数据更新操作符 / 57
4.3　 本章小结 / 62
第5章　 高级特性 / 63
5.1　 Capped Collection集合 / 63
5.1.1　 创建Capped Collection / 63
5.1.2　 Capped Collection的用途 / 64
5.1.3　 注意事项 / 64
5.2　 GridFS规范 / 65
5.2.1　 如何实现海量存储 / 65
5.2.2　 命令行工具 / 66
5.3　 MapReduce编程模型 / 68
5.3.1　 Map进行分组 / 69
5.3.2　 Reduce聚合计算 / 69
5.3.3　 Result获取结果 / 70
5.3.4　 Finalize格式化输出 / 70
5.3.5　 Options定制输出 / 71
5.4　 本章小结 / 72
第三部分　 管　 理　 篇
第6章　 管理工具集 / 74
6.1　 数据迁移 / 74
6.1.1　 导出工具mongoexport / 75
6.1.2　 导出工具mongodump / 78
6.1.3　 导入工具mongoimport / 79
6.2　 数据的备份和恢复 / 81
6.2.1　 备份工具mongodump / 81
6.2.2　 恢复工具mongorestore / 84
6.3　 命令行操作 / 86
6.3.1　 通过eval参数执行指定语句 / 86
6.3.2　 执行指定文件中的内容 / 87
6.4　 本章小结 / 88
第7章　 管理命令 / 89
7.1　 克隆collection / 90
7.1.1　 远程克隆collection / 90
7.1.2　 本地克隆collection / 94
7.2　 复制数据库 / 94
7.2.1　 远程复制数据库 / 94
7.2.2　 本地复制数据库 / 96
7.3　 刷新磁盘 / 97
7.4　 捕获异常 / 98
7.4.1　 返回异常信息 / 98
7.4.2　 阻塞客户端 / 99
7.5　 进程控制 / 99
7.5.1　 查看活动进程 / 99
7.5.2　 结束进程 / 100
7.6　 验证collection的有效性 / 100
7.7　 数据压缩 / 101
7.8　 本章小结 / 102
第8章　 访问控制 / 103
8.1　 限制特定IP地址访问 / 104
8.2　 设置监听端口 / 104
8.3　 使用用户名和口令登录 / 105
8.3.1　 建立系统root用户 / 107
8.3.2　 建立指定权限用户 / 108
8.3.3　 删除指定用户 / 109
8.4　 本章小结 / 110
第四部分　 性　 能　 篇
第9章　 索引及优化 / 112
9.1　 MongoDB索引概述 / 112
9.2　 索引操作 / 113
9.2.1　 基础索引 / 113
9.2.2　 静默方式创建索引 / 115
9.2.3　 文档索引 / 115
9.2.4　 组合索引 / 116
9.2.5　 唯一索引 / 116
9.2.6　 强制使用索引 / 117
9.2.7　 删除索引 / 119
9.2.8 　 重建索引 / 119
9.2.9　 explain查看执行计划 / 119
9.3　 优化器Profiler / 121
9.3.1　 开启Profiler功能 / 121
9.3.2　 查询Profiler记录 / 122
9.4　 性能优化概述 / 123
9.4.1　 性能优化的原则 / 123
9.4.2　 影响性能的因素 / 124
9.5　 常用的优化方案 / 124
9.5.1　 创建索引 / 124
9.5.2　 限定返回结果条数 / 125
9.5.3　 只查询用到的字段 / 125
9.5.4　 采用Capped Collection / 126
9.5.5　 采用Server Side Code Execution命令集 / 126
9.5.6　 使用hint / 127
9.5.7　 采用Profiler / 127
9.6　 本章小结 / 128
第10章　 性能监控 / 129
10.1　 mongosniff工具 / 129
10.2　 mongostat工具 / 131
10.3　 db.serverStatus命令 / 132
10.4　 db.stats命令 / 134
10.5　 HTTP监控接口 / 135
10.6　 本章小结 / 136
第五部分　 架　 构　 篇
第11章　 复制集 / 138
11.1　 Replica Sets架构 / 138
11.2　 部署Replica Sets / 139
11.3　 主从操作日志 / 144
11.4　 主从配置信息 / 146
11.5　 管理Replica Sets / 147
11.5.1　 主从切换 / 147
11.5.2　 读写分离 / 149
11.5.3　 故障转移 / 151
11.5.4　 增减节点 / 153
11.6　 本章小结 / 160
第12章　 分片 / 161
12.1　 Sharding简介 / 161
12.1.1　 Sharding的特点 / 161
12.1.2　 Sharding架构 / 162
12.2　 构建一个简单的Sharding Cluster / 163
12.2.1　 启动Shard Server / 163
12.2.2　 启动Config Server / 164
12.2.3　 启动Route Process / 164
12.2.4　 配置Sharding / 164
12.2.5　 验证Sharding / 165
12.3　 维护Sharding / 167
12.3.1　 列出所有的Shard Server / 168
12.3.2　 查看Sharding信息 / 168
12.3.3　 判断是否是Sharding / 169
12.3.4　 对现有的表执行Sharding / 169
12.3.5　 新增Shard Server / 171
12.3.6　 移除Shard Server / 172
12.4　 本章小结 / 175
第13章　 Replica Sets + Sharding方案 / 176
13.1　 Replica Sets+Sharding架构 / 176
13.2　 搭建一个高可用架构 / 177
13.2.1　 创建数据目录 / 177
13.2.2　 配置Replica Sets / 178
13.2.3　 配置3台Config Server / 181
13.2.4　 配置3台Route Process / 181
13.2.5　 配置Shard Cluster / 181
13.2.6　 验证Sharding / 182
13.3　 本章小结 / 183
第六部分　 开　 发　 篇
第14章　 C#开发接口 / 186
14.1　 C#快速入门 / 186
14.1.1　 下载驱动和开发环境 / 186
14.1.2　 访问控制 / 188
14.1.3　 C#对数据库的基础操作 / 189
14.2　 C#驱动一致性 / 194
14.3　 C#常用操作 / 195
14.3.1　 对MongoDB实例的操作 / 195
14.3.2　 对用户的操作 / 198
14.3.3　 对collection的操作 / 202
14.3.4　 对索引的操作 / 208
14.4　 C#高级查询 / 211
14.4.1　 判断列名是否存在 / 211
14.4.2　 比较运算符 / 213
14.4.3　 逻辑运算符 / 221
14.4.4　 正则表达式查询 / 223
14.4.5　 跳过查询 / 224
14.5　 用C#操作GridFS / 225
14.5.1　 插入数据 / 225
14.5.2　 查询数据 / 226
14.5.3　 读取并保存数据 / 227
14.5.4　 删除数据 / 228
14.6　 本章小结 / 229
第15章　 Java开发接口 / 230
15.1　 Java快速入门 / 230
15.1.1　 下载驱动和开发环境 / 230
15.1.2　 访问控制 / 232
15.1.3　 Java对数据库的基础操作 / 233
15.2　 Java驱动一致性 / 237
15.3　 Java常用操作 / 238
15.3.1　 对MongoDB实例的操作 / 238
15.3.2　 对用户的操作 / 241
15.3.3　 对collection的操作 / 243
15.3.4　 对索引的操作 / 250
15.4　 Java高级查询 / 253
15.4.1　 通过游标获取所有document / 253
15.4.2　 比较运算符 / 254
15.4.3　 逻辑运算符 / 263
15.4.4　 正则表达式查询 / 264
15.4.5　 跳过查询 / 265
15.5　 用Java操作GridFS / 266
15.5.1　 插入数据 / 266
15.5.2　 查询数据 / 267
15.5.3　 读取并保存数据 / 268
15.5.4　 删除数据 / 269
15.6　 本章小结 / 270
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>MongoDB管理与开发精要
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>MongoDB实战(第二版)
第一部分  入门 1
第1章  全新Web数据库 3
1.1  为互联网而生 5
1.2  MongoDB键特性 5
1.2.1  文档数据模型 5
1.2.2  ad hoc查询 9
1.2.3  索引 9
1.2.4  复制 10
1.2.5  加速与持久化 11
1.2.6  伸缩 13
1.3  核心服务和工具 14
1.3.1  核心服务器 14
1.3.2  JavaScript shell 15
1.3.3  数据库驱动 15
1.3.4  命令行工具 16
1.4  为什么是MongoDB? 17
1.4.1  MongoDB与其他数据库对比 17
1.4.2  使用场景和部署 20
1.5  提示和限制 22
1.6  MongoDB历史 23
1.7  其他资源 25
1.8  总结 25
第2章  通过JavaScript shell操作MongoDB 27
2.1  Diving into the深入MongoDB shell 28
2.1.1  启动shell 28
2.1.2  数据库、集合和文档 28
2.1.3  插入和查询 29
2.1.4  更新文档 31
2.1.5  删除数据 35
2.1.6  shell的其他特性 35
2.2  使用索引创建和查询 36
2.2.1  创建大集合 36
2.2.2  索引和explain( ) 38
2.3  基本管理 42
2.3.1  获取数据库信息 43
2.3.2  命令如何执行 44
2.4  获取帮助 45
2.5  总结 47
第3章  编写代码操作MongoDB 48
3.1  通过Ruby lens连接MongoDB 49
3.1.1  安装与连接 49
3.1.2  Ruby里插入文档数据 50
3.1.3  查询与光标 51
3.1.4  更新和删除 52
3.1.5  数据库命令 53
3.2  驱动工作原理 54
3.3  构建简单的应用 56
3.3.1  设置 56
3.3.2  搜集数据 57
3.3.3  查看存档 60
3.4  总结 63
第二部分  MongoDB应用系统开发 65
第4章  面向文档的数据 67
4.1  schema设计原则 67
4.2  设计电商网站数据模型 69
4.2.1  schema基础知识 69
4.2.2  用户和订单 73
4.2.3  评价 75
4.3  核心概念：数据库、集合、文档 76
4.3.1  数据库 76
4.3.2  集合 79
4.3.3  文档和插入 83
4.4  总结 87
第5章  构建查询 88
5.1  电子商务查询 88
5.1.1  产品、类别和评论 88
5.1.2  用户和订单 91
5.2  MongoDB的查询语言 92
5.2.1  查询条件和选择器 92
5.2.2  查询选择 104
5.3  总结 106
第6章  聚合 107
6.1  聚合框架概览 108
6.2  电商聚合例子 109
6.2.1  商品、类别和评价 111
6.2.2  用户和订单 117
6.3  聚合管道操作符 120
6.3.1  $project 120
6.3.2  $group 121
6.3.3  $match、$sort、$skip、$limit 123
6.3.4  $unwind 123
6.3.5  $out 124
6.4  重塑文档 124
6.4.1  字符串函数 125
6.4.2  算术运算函数 126
6.4.3  日期函数 126
6.4.4  逻辑函数 127
6.4.5  集合操作符 128
6.4.6  其他函数 129
6.5  理解聚合管道性能 129
6.5.1  聚合管道选项 130
6.5.2  聚合框架的explain( )函数 130
6.5.3  allowDiskUse 选项 134
6.5.4  聚合光标选项 134
6.6  其他聚合功能 135
6.6.1  .count( )和.distinct( ) 135
6.6.2  map-reduce 136
6.7  总结 138
第7章  更新、原子操作和删除 140
7.1  文档更新概要 141
7.1.1  通过替换修改 141
7.1.2  通过操作符修改 142
7.1.3  比较两个方法 142
7.1.4  决定：替换与操作符 143
7.2  电商数据模型更新 144
7.2.1  商品和目录 144
7.2.2  评价 148
7.2.3  订单 150
7.3  原子文档处理 152
7.3.1  订单状态转换 153
7.3.2  库存管理 155
7.4  核心要点：MongoDB更新与删除 160
7.4.1  更新类型与参数选项 160
7.4.2  更新操作符 161
7.4.3  findAndModify命令 169
7.4.4  删除 169
7.4.5  并发、原子性和隔离 170
7.4.6  更新性能注意事项 171
7.5  复习更新操作符 172
7.6  总结 173
第三部分  精通MongoDB 175
第8章  索引与查询优化 177
8.1  索引理论 177
8.1.1  精心策划的实验 178
8.1.2  核心索引概念 181
8.1.3  B-树 185
8.2  索引实战 186
8.2.1  索引类型 186
8.2.2  索引管理 189
8.3  查询优化 194
8.3.1  找出慢速查询 195
8.3.2  检查慢速查询 199
8.3.3  查询模式 217
8.4  总结 219
第9章  文本搜索 220
9.1  文本搜索—不仅仅是模式匹配 221
9.1.1  文本搜索与模式匹配 222
9.1.2  文本搜索与网页搜索 223
9.1.3  MongoDB文本搜索与专业搜索引擎 225
9.2  下载曼宁图书类别数据 228
9.3  定义文本搜索索引 229
9.3.1  文本索引的大小 230
9.3.2  分配索引名字并为集合里的所有字段建立索引 231
9.4  基本的文本搜索 232
9.4.1  更复杂的搜索 233
9.4.2  文本搜索分数 235
9.4.3  根据文本搜索分数排序结果 236
9.5  聚合框架文本搜索 237
9.6  文本搜索语言 240
9.6.1  在索引里指定语言 241
9.6.2  在文档里指定语言 242
9.6.3  在搜索中指定语言 243
9.6.4  可用的语言 245
9.7  总结 245
第10章  WiredTiger与可拔插存储 246
10.1  可拔插存储引擎API 246
10.2  WiredTiger 248
10.2.1  切换到WiredTiger 248
10.2.2  迁移数据到WiredTiger 249
10.3  与MMAPv1对比 250
10.3.1  配置文件 251
10.3.2  插入脚本与基准测试脚本 252
10.3.3  插入测试结果 255
10.3.4  读性能测试脚本 256
10.3.5  读性能结果 257
10.3.6  测试结论 259
10.4  其他可拔插存储引擎的例子 260
10.5  高级主题 261
10.5.1  可拔插引擎如何工作？ 261
10.5.2  数据结构 263
10.5.3  锁 265
10.6  总结 265
第11章  复制 267
11.1  复制概览 267
11.1.1  为什么复制很重要 268
11.1.2  复制的使用场景和限制 269
11.2  可复制集 270
11.2.1  安装 270
11.2.2  可复制集群工作原理 277
11.2.3  管理 283
11.3  驱动与复制 291
11.3.1  连接与故障转移 291
11.3.2  写关注点 293
11.3.3  读伸缩 294
11.3.4  标签 296
11.4  总结 298
第12章  使用分片集群扩展系统 299
12.1  分片集群概述 300
12.1.1  什么是分片集群 300
12.1.2  什么时候分片？ 301
12.2  理解分片集群的组件 302
12.2.1  分片：存储应用程序数据 303
12.2.2  mongos路由：路由操作 303
12.2.3  配置服务器：存储元数据 303
12.3  在分片集群中分散数据 304
12.3.1  分片集群中的数据分散方式 305
12.3.2  分布式数据库分片 306
12.3.3  集合分片 306
12.4  构建一个例子分片集群 307
12.4.1  启动mongod和mongos服务器 308
12.4.2  配置集群 310
12.4.3  分片集合 311
12.4.4  写入数据到分片集群 312
12.5  分片集群查询和建立索引 318
12.5.1  查询路由 318
12.5.2  分片集群中建立索引 319
12.5.3  分片集群中的explain()工具 320
12.5.4  分片集群中聚合 322
12.6  选择分片键 322
12.6.1  非平衡写入(热点) 323
12.6.2  不可分割的数据块(粗粒度) 324
12.6.3  糟糕的定位(分片键不在查询中) 325
12.6.4  理想的分片键 325
12.6.5  设计折中(email应用) 326
12.7  生产环境下分片集群 328
12.7.1  配置 328
12.7.2  部署 330
12.7.3  维护 332
12.8  总结 336
第13章  部署与管理 337
13.1  硬件与配置 337
13.1.1  集群拓扑 337
13.1.2  部署环境 339
13.1.3  配置 344
13.2  监控与诊断 346
13.2.1  日志 346
13.2.2  诊断命令 347
13.2.3  诊断工具 347
13.2.4  监控服务 349
13.2.5  外部监控应用 349
13.3  备份 350
13.3.1  mongodump和mongorestore 350
13.3.2  基于数据文件的备份 351
13.3.3  MMS备份 352
13.4  安全 352
13.4.1  安全环境 353
13.4.2  网络安全 353
13.4.3  验证 356
13.4.4  可复制集验证 359
13.4.5  分片集群验证 360
13.4.6  企业安全特性 360
13.5  管理任务 360
13.5.1  数据导入和导出 360
13.5.2  压缩和修复 361
13.5.3  升级 363
13.6  性能故障排除 363
13.6.1  工作集 363
13.6.2  性能悬崖 364
13.6.3  查询交互 365
13.6.4  寻求专业帮助 366
13.7  部署检查列表 366
13.8  总结 367
附录A  安装 368
A.1  安装 368
A.1.1  生产部署 368
A.1.2  32位和64位 369
A.2  Linux下安装MongoDB 369
A.2.1  使用预编译二进制文件安装 369
A.2.2  使用包管理器 370
A.3  Mac OS X下安装MongoDB 370
A.3.1  预编译二进制版本 370
A.3.2  使用包管理器 371
A.4  Windows下安装MongoDB 372
A.5  从源码编译MongoDB 373
A.6  故障排除 373
A.6.1  错误的架构 373
A.6.2  不存在的数据目录 374
A.6.3  缺少权限 374
A.6.4  未绑定端口 374
A.7  基本配置选项 374
A.8  安装Ruby 376
A.8.1  Linux和Mac OS X 376
A.8.2  Windows 376
附录B  设计模式 377
B.1  嵌入与引用 377
B.2  一对多 377
B.3  多对多 378
B.4  树 379
B.5  工作队列 382
B.6  动态特性 383
B.7  事务 384
B.8  定位与预计算 385
B.9  反模式 386
B.9.1  粗心索引 386
B.9.2  交错类型 386
B.9.3  单一集合 386
B.9.4  大型、深嵌文档 386
B.9.5  一个用户一个集合 387
B.9.6  不可分片集合 387
附录C  二进制数据和网格文件系统 388
C.1  简单二进制存储 388
C.1.1  存储缩略图 389
C.1.2  存储MD5 389
C.2  网格文件 390
C.2.1  Ruby中的GridFS 391
C.2.2  使用mongofiles操作GridFS 393
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>MongoDB实战(第二版)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node.js+MongoDB+AngularJS Web开发
第1部分  引    言
第1章  介绍Node.js-to-AngularJS套件	3
1.1  了解基本的Web开发框架	3
1.1.1  用户	4
1.1.2  浏览器	4
1.1.3  Web服务器	6
1.1.4  后端服务	6
1.2  了解Node.js-to-AngularJS套件组件	7
1.2.1  Node.js	7
1.2.2  MongoDB	8
1.2.3  Express	9
1.2.4  AngularJS	9
1.3  小结	10
1.4  下一章	10
第2章  JavaScript基础	11
2.1  定义变量	11
2.2  了解JavaScript数据类型	12
2.3  使用运算符	13
2.3.1  算术运算符	13
2.3.2  赋值运算符	14
2.3.3  运用比较和条件运算符	14
2.4  实现循环	16
2.4.1  while循环	17
2.4.2  do/while循环	17
2.4.3  for循环	17
2.4.4  for/in循环	18
2.4.5  中断循环	19
2.5  创建函数	19
2.5.1  定义函数	20
2.5.2  传递变量给函数	20
2.5.3  从函数返回值	20
2.5.4  使用匿名函数	21
2.6  理解变量作用域	22
2.7  使用JavaScript对象	22
2.7.1  使用对象语法	23
2.7.2  创建自定义对象	23
2.7.3  使用原型对象模式	24
2.8  处理字符串	25
2.8.1  合并字符串	26
2.8.2  在字符串中搜索子串	26
2.8.3  在一个字符串中替换单词	27
2.8.4  将字符串分割成数组	27
2.9  使用数组	27
2.9.1  合并数组	28
2.9.2  遍历数组	29
2.9.3  将数组转换为字符串	29
2.9.4  检查数组是否包含某个条目	29
2.9.5  在数组中添加条目和删除条目	30
2.10  添加错误处理	30
2.10.1  try/catch块	30
2.10.2  抛出你自己的错误	31
2.10.3  使用finally	31
2.11  小结	32
2.12  下一章	32
第2部分  学习Node.js
第3章  开始使用Node.js	35
3.1  了解Node.js	35
3.1.1  谁在使用Node.js	35
3.1.2  Node.js的用途	36
3.2  Node.js安装	36
3.2.1  纵观Node.js安装位置	36
3.2.2  验证Node.js可执行文件	37
3.2.3  选择Node.js IDE	37
3.3  使用Node.js包	38
3.3.1  什么是Node封装模块	38
3.3.2  了解Node包注册表	38
3.3.3  使用Node包管理器	38
3.3.4  搜索Node封装模块	39
3.3.5  安装Node封装模块	40
3.3.6  使用package.json	41
3.4  创建Node.js应用程序	43
3.4.1  创建Node.js模块封装	43
3.4.2  将一个Node.js封装模块发布到NPM注册表	45
3.4.3  在Node.js应用程序中使用Node.js封装模块	46
3.5  将数据写入控制台	47
3.6  小结	49
3.7  下一章	49
第4章  在Node.js中使用事件、监听器、定时器和回调	51
4.1  了解Node.js事件模型	51
4.1.1  比较事件回调和线程模型	51
4.1.2  在Node.js中阻塞I/O	52
4.1.3  会话示例	54
4.2  将工作添加到事件队列	54
4.2.1  实现定时器	55
4.2.2  使用nextTick来调度工作	58
4.2.3  实现事件发射器和监听器	59
4.3  实现回调	62
4.3.1  向回调函数传递额外的参数	63
4.3.2  在回调中实现闭包	64
4.3.3  链式回调	65
4.4  小结	66
4.5  下一章	66
第5章  在Node.js中处理数据I/O	67
5.1  处理JSON	67
5.1.1  把JSON转换成JavaScript对象	67
5.1.2  把JavaScript对象转换为JSON	68
5.2  使用Buffer模块缓冲数据	68
5.2.1  了解缓冲数据	69
5.2.2  创建缓冲区	69
5.2.3  写入缓冲区	70
5.2.4  从缓冲区读取	71
5.2.5  确定缓冲区长度	72
5.2.6  复制缓冲区	73
5.2.7  对缓冲区切片	74
5.2.8  拼接缓冲区	75
5.3  使用Stream模块来传送数据	76
5.3.1  Readable流	76
5.3.2  Writable流	78
5.3.3  Duplex流	81
5.3.4  Transform流	82
5.3.5  把Readable流用管道输送到Writable流	84
5.4  用Zlib压缩与解压缩数据	85
5.4.1  压缩和解压缩缓冲区	85
5.4.2  压缩/解压缩流	87
5.5  小结	88
5.6  下一章	88
第6章  从Node.js访问文件系统	89
6.1  同步和异步文件系统调用	89
6.2  打开和关闭文件	90
6.3  写入文件	91
6.3.1  简单文件写入	91
6.3.2  同步文件写入	92
6.3.3  异步写入文件	93
6.3.4  流式文件写入	95
6.4  读取文件	96
6.4.1  简单文件读取	96
6.4.2  同步文件读取	97
6.4.3  异步文件读取	98
6.4.4  流式文件读取	100
6.5  其他文件系统任务	101
6.5.1  验证路径的存在性	101
6.5.2  获取文件信息	102
6.5.3  列出文件	103
6.5.4  删除文件	104
6.5.5  截断文件	105
6.5.6  建立和删除目录	105
6.5.7  重命名文件和目录	106
6.5.8  监视文件更改入	107
6.6  小结	107
6.7  下一章	107
第7章  在Node.js中实现HTTP服务	109
7.1  处理URL	109
7.1.1  了解URL对象	110
7.1.2  解析URL组件	111
7.2  处理查询字符串和表单参数	111
7.3  了解请求、响应和服务器对象	112
7.3.1  http.ClientRequest对象	112
7.3.2  http.ServerResponse对象	114
7.3.3  http.IncomingMessage对象	115
7.3.4  HTTP Server对象	116
7.4  在Node.js中实现HTTP客户端和服务器	118
7.4.1  提供静态文件服务	118
7.4.2  实现动态的GET服务器	120
7.4.3  实现POST服务器	122
7.4.4  与外部源交互	124
7.5  实现HTTPS服务器和客户端	127
7.5.1  创建HTTPS客户端	127
7.5.2  创建HTTPS服务器	129
7.6  小结	129
7.7  下一章	129
第8章  在Node.js中实现套接字服务	131
8.1  了解网络套接字	131
8.2  了解TCP服务器和Socket对象	132
8.2.1  net.Socket对象	132
8.2.2  net.Server对象	135
8.3  实现TCP套接字服务器和客户端	137
8.3.1  实现TCP套接字客户端	138
8.3.2  实现TCP套接字服务器	140
8.4  实现TLS服务器和客户端	143
8.4.1  创建TLS套接字客户端	144
8.4.2  创建TLS套接字服务器	145
8.5  小结	147
8.6  下一章	147
第9章  在Node.js中使用多处理器扩展应用程序	149
9.1  了解process模块	149
9.1.1  了解进程I/O管道	149
9.1.2  了解进程的信号	150
9.1.3  使用process模块控制进程执行	150
9.1.4  从process模块获取信息	151
9.2  实现子进程	153
9.2.1  了解ChildProcess对象	153
9.2.2  使用exec()在另一个进程上执行一个系统命令	154
9.2.3  使用execFile()在另一个进程上执行一个可执行文件	156
9.2.4  使用spawn()在另一个Node.js实例中产生一个进程	157
9.2.5  实现子派生	159
9.3  实现进程集群	161
9.3.1  使用cluster模块	162
9.3.2  了解Worker对象	163
9.3.3  实现一个HTTP集群	164
9.4  小结	166
9.5  下一章	166
第10章  使用其他Node.js模块	167
10.1  使用os模块	167
10.2  使用util模块	169
10.2.1  格式化字符串	169
10.2.2  检查对象类型	170
10.2.3  同步写入输出流	170
10.2.4  将JavaScript对象转换为字符串	170
10.2.5  从其他对象继承功能	171
10.2.6  使用dns模块	172
10.3  小结	174
10.4  下一章	174
第3部分  学习MongoDB
第11章  了解NoSQL和MongoDB	177
11.1  为什么要采用NoSQL	177
11.2  了解MongoDB	178
11.2.1  理解集合	178
11.2.2  了解文档	178
11.3  MongoDB的数据类型	179
11.4  规划你的数据模型	180
11.4.1  使用文档引用来规范化数据	181
11.4.2  使用嵌入式文档反规范化数据	182
11.4.3  使用封顶集合	183
11.4.4  了解原子写操作	184
11.4.5  考虑文件增长	184
11.4.6  识别索引、分片和复制的机会	184
11.4.7  大集合与大量集合的对比	185
11.4.8  决定数据生命周期	185
11.4.9  考虑数据的可用性和性能	185
11.5  小结	186
11.6  下一章	186
第12章  MongoDB入门	187
12.1  构建MongoDB的环境	187
12.1.1  MongoDB的安装	187
12.1.2  启动MongoDB	188
12.1.3  停止MongoDB	189
12.1.4  从shell客户端访问MongoDB	189
12.2  管理用户账户	192
12.2.1  列出用户	192
12.2.2  创建用户账户	193
12.2.3  删除用户	194
12.3  配置访问控制	194
12.3.1  创建用户管理员账户	195
12.3.2  打开身份验证	196
12.3.3  创建数据库管理员账户	196
12.4  管理数据库	197
12.4.1  显示数据库清单	197
12.4.2  切换当前数据库	197
12.4.3  创建数据库	197
12.4.4  删除数据库	198
12.4.5  复制数据库	198
12.5  管理集合	199
12.5.1  显示数据库中的集合列表	199
12.5.2  创建集合	199
12.5.3  删除集合	200
12.5.4  在集合中查找文档	201
12.5.5  将文档添加到集合中	201
12.5.6  从集合中删除文档	202
12.5.7  更新集合中的文档	202
12.6  小结	204
12.7  下一章	204
第13章  MongoDB和Node.js入门	205
13.1  把MongoDB的驱动程序添加到Node.js	205
13.2  从Node.js连接到MongoDB	206
13.2.1  了解写入关注	206
13.2.2  了解Server对象	206
13.2.3  通过Client对象连接到MongoDB	207
13.2.4  通过一个连接字符串连接到MongoDB	210
13.3  了解用在MongoDB Node.js驱动程序中的对象	211
13.3.1  了解Db对象	212
13.3.2  了解Admin对象	213
13.3.3  了解Collection对象	214
13.3.4  了解Cursor对象	215
13.4  访问和操作数据库	216
13.4.1  列出数据库	217
13.4.2  创建数据库	217
13.4.3  删除数据库	217
13.4.4  创建、列出和删除数据库实例	218
13.4.5  获取MongoDB服务器的状态	219
13.5  访问和操作集合	220
13.5.1  列出集合	220
13.5.2  创建集合	221
13.5.3  删除集合	221
13.5.4  创建、列出和删除集合的示例	221
13.5.5  获取集合信息	222
13.6  小结	223
13.7  下一章	223
第14章  从Node.js操作MongoDB文档	225
14.1  了解数据库更改选项	225
14.2  了解数据库更新运算符	226
14.3  将文档添加到集合	227
14.4  从集合获取文档	229
14.5  更新集合中的文档	230
14.6  原子地修改文档的集合	232
14.7  保存集合中的文档	234
14.8  使用upsert往集合中插入文档	235
14.9  从集合中删除文档	236
14.10  从集合中删除单个文档	238
14.11  小结	240
14.12  下一章	240
第15章  从Node.js访问MongoDB的文档	241
15.1  介绍数据集	241
15.2  了解query对象	242
15.3  了解查询options对象	243
15.4  查找特定文档集合	244
15.5  清点文档数量	247
15.6  对结果集进行限制	249
15.6.1  按大小限制结果	249
15.6.2  限制对象返回的字段	250
15.6.3  对结果进行分页	252
15.7  对结果集进行排序	253
15.8  查找不同的字段值	255
15.9  对结果进行分组	256
15.10  通过聚合结果来应用MapReduce	259
15.10.1  了解aggregate()方法	259
15.10.2  使用聚合框架运算符	260
15.10.3  实现聚合表达式运算符	261
15.10.4  聚合的例子	262
15.11  小结	263
15.12  下一章	264
第16章  利用Mongoose来使用结构化模式与验证	265
16.1  了解Mongoose	265
16.2  利用Mongoose连接到MongoDB数据库	266
16.3  定义模式	267
16.3.1  了解路径	268
16.3.2  创建一个模式定义	268
16.3.3  把索引添加到一个模式	269
16.3.4  实现字段的唯一性	269
16.3.5  强制字段的必需性	270
16.3.6  添加Schema对象的方法	270
16.3.7  在words数据库上实现一个模式	270
16.4  编译模型	271
16.5  了解Query对象	272
16.5.1  设置查询数据库操作	273
16.5.2  设置查询数据库操作选项	274
16.5.3  设置查询运算符	275
16.6  了解Document对象	276
16.7  利用Mongoose查找文档	278
16.8  利用Mongoose添加文档	280
16.9  利用Mongoose更新文档	281
16.9.1  保存文档更改	282
16.9.2  更新单个文档	283
16.9.3  更新多个文档	284
16.10  利用Mongoose删除文档	286
16.10.1  删除单个文档	286
16.10.2  删除多个文档	287
16.11  利用Mongoose聚合文档	288
16.12  使用验证框架	291
16.13  实现中间件函数	293
16.14  小结	295
16.15  下一章	295
第17章  高级MongoDB概念	297
17.1  添加索引	297
17.2  使用封顶集合	299
17.3  应用复制	300
17.3.1  复制策略	302
17.3.2  部署一个副本集	302
17.4  实施分片	303
17.4.1  分片服务器类型	304
17.4.2  选择一个分片键	305
17.4.3  选择一种分区方法	306
17.4.4  部署一个分片的MongoDB集群	307
17.5  实现一个GridFS Store	310
17.5.1  在Node.js实现Grid对象	311
17.5.2  在Node.js实现GridStore对象	313
17.6  修复MongoDB数据库	315
17.7  备份MongoDB	316
17.8  小结	317
17.9  下一章	317
第4部分  使用Express使生活更轻松
第18章  在Node.js中实现Express	321
18.1  Express入门	321
18.1.1  配置Express设置	321
18.1.2  启动Express服务器	322
18.2  配置路由	323
18.2.1  实现路由	323
18.2.2  在路由中应用参数	324
18.3  使用Request对象	328
18.4  使用Response对象	330
18.4.1  设置标头	330
18.4.2  设置状态	331
18.4.3  发送响应	331
18.4.4  发送JSON响应	333
18.4.5  发送文件	335
18.4.6  发送下载响应	336
18.4.7  重定向响应	336
18.5  实现一个模板引擎	337
18.5.1  定义一个模板引擎	338
18.5.2  加入本地对象	338
18.5.3  创建模板	339
18.5.4  在响应中呈现模板	340
18.6  小结	342
18.7  下一章	342
第19章  实现Express中间件	343
19.1  了解中间件	343
19.1.1  在全局范围内把中间件分配给某个路径	344
19.1.2  把中间件分配到单个路由	345
19.1.3  添加多个中间件函数	345
19.2  使用query中间件	345
19.3  提供静态文件服务	346
19.4  处理POST正文数据	348
19.5  发送和接收cookie	349
19.6  实现会话	350
19.7  应用基本的HTTP身份验证	352
19.8  实现会话身份验证	354
19.9  创建自定义中间件	356
19.10  小结	357
19.11  下一章	357
第5部分  学习AngularJS
第20章  AngularJS入门	361
20.1  为什么选择AngularJS	361
20.2  了解AngularJS	362
20.2.1  模块	362
20.2.2  作用域和数据模型	363
20.2.3  具有模板和指令的视图	363
20.2.4  表达式	363
20.2.5  控制器	363
20.2.6  数据绑定	364
20.2.7  服务	364
20.2.8  依赖注入	364
20.2.9  职责分离	364
20.3  AngularJS生命周期概述	365
20.3.1  引导阶段	365
20.3.2  编译阶段	365
20.3.3  运行时数据绑定阶段	366
20.4  将AngularJS与现有的JavaScript和jQuery整合	366
20.5  将AngularJS添加到Node.js的环境	367
20.6  在HTML文档中引导AngularJS	367
20.7  使用全局API	368
20.8  创建基本的AngularJS应用程序	369
20.8.1  加载AngularJS库和你的主模块	370
20.8.2  定义AngularJS应用程序根元素	370
20.8.3  将控制器添加到模板	370
20.8.4  实现作用域模型	371
20.9  小结	372
20.10  下一章	372
第21章  了解AngularJS模块和依赖注入	373
21.1  模块和依赖注入概述	373
21.1.1  了解模块	373
21.1.2  依赖注入	374
21.2  定义AngularJS模块	374
21.2.1  创建AngularJS Module对象	374
21.2.2  使用配置块	375
21.2.3  使用运行块	375
21.2.4  把提供器添加到AngularJS模块	376
21.3  实现依赖注入	377
21.4  小结	379
21.5  下一章	380
第22章  把作用域实现为数据模型	381
22.1  了解作用域	381
22.1.1  根作用域和应用程序之间的关系	381
22.1.2  作用域和控制器之间的关系	382
22.1.3  作用域和模板之间的关系	383
22.1.4  作用域和后端服务器数据之间的关系	385
22.1.5  作用域的生命周期	385
22.2  实现作用域层次结构	387
22.3  发出和广播活动	389
22.4  小结	392
22.5  下一章	393
第23章  使用AngularJS模板来创建视图	395
23.1  了解模板	395
23.2  使用表达式	396
23.3  使用过滤器	399
23.3.1  使用内置过滤器	400
23.3.2  使用过滤器来实现排序和过滤	402
23.4  创建自定义过滤器	405
23.5  小结	406
23.6  下一章	407
第24章  在AngularJS视图中实现指令	409
24.1  了解指令	409
24.2  使用内置指令	409
24.2.1  支持AngularJS功能的指令	410
24.2.2  扩展表单元素的指令	411
24.2.3  把模型绑定到页面元素的指令	414
24.2.4  把页面事件绑定到控制器的指令	418
24.3  创建你自己的指令来扩展HTML	420
24.3.1  定义指令视图模板	421
24.3.2  限制指令行为	422
24.3.3  更换模板元素	423
24.3.4  转置外部作用域	423
24.3.5  配置指令的作用域	423
24.3.6  操纵DOM的链接功能	425
24.3.7  添加一个控制器到指令	426
24.3.8  创建自定义指令	426
24.4  小结	428
24.5  下一章	429
第25章  在Web应用程序中实现AngularJS服务	431
25.1  了解AngularJS服务	431
25.2  使用内置的服务	431
25.2.1  使用$http服务发送HTTP的GET和PUT请求	432
25.2.2  使用$cacheFactory服务	436
25.2.3  使用$window服务实现浏览器警报	437
25.2.4  使用$cookieStore服务与浏览器cookie交互	437
25.2.5  使用$interval和$timeout服务实现定时器	439
25.2.6  使用$animate服务	440
25.3  创建自定义服务	445
25.3.1  创建value服务	445
25.3.2  创建constant服务	445
25.3.3  创建factory服务	445
25.3.4  创建service服务	446
25.3.5  把服务集成在一个模块中	446
25.4  小结	447
25.5  下一章	447
第6部分  建立实用的Web应用程序组件
第26章  将用户账户添加到你的网站	451
26.1  用到的库	451
26.2  项目的目录结构	451
26.3  定义用户模型	452
26.4  创建服务器	453
26.5  实现路由	454
26.6  实现用户控制器路由	456
26.6.1  实现用户注册路由	456
26.6.2  实现用户登录路由	457
26.6.3  实现获得用户配置文件的路由	457
26.6.4  实现更新用户路由	458
26.6.5  实现删除用户路由	458
26.6.6  完整的用户控制器代码	459
26.7  实现用户和身份验证视图	461
26.7.1  实现signup视图	461
26.7.2  实现index视图	462
26.7.3  实现login视图	463
26.7.4  实现user视图	464
26.7.5  添加CSS代码到样式视图	466
26.8  实现AngularJS模块和控制器	466
26.9  使用社交媒体账户作为身份验证来源	467
26.9.1  添加Passport	467
26.9.2  添加身份验证策略	467
26.9.3  实现应用程序中间件	468
26.9.4  添加已验证身份的用户序列化和反序列化	469
26.9.5  实现路由以使用身份验证	469
26.9.6  使用谷歌验证身份	470
26.10  小结	473
26.11  下一章	473
第27章  添加评论主题页	475
27.1  用到的库	475
27.2  项目的目录结构	475
27.3  定义评论、回复、照片和页面模型	477
27.3.1  定义Page模型	477
27.3.2  定义Photo模型	478
27.3.3  定义CommentThread模型	478
27.4  创建评论服务器	479
27.5  实现路由，以支持查看和添加评论	480
27.6  实现基于模型的控制器路由	481
27.6.1  实现Page模型控制器	481
27.6.2  实现Photo模型控制器	482
27.6.3  实现CommentThread模型控制器	482
27.7  实现照片和评论视图	486
27.7.1  实现照片视图	486
27.7.2  实现评论主题视图	489
27.7.3  实现评论视图	491
27.7.4  添加CSS来设置视图的样式	492
27.8  实现AngularJS模块和控制器来支持评论视图	493
27.8.1  创建一个评论服务	493
27.8.2  实现照片控制器	494
27.8.3  实现页面AngularJS控制器	495
27.8.4  完整的AngularJS应用程序	496
27.9  初始化应用程序	499
27.10  小结	500
27.11  下一章	500
第28章  创建你自己的购物车	501
28.1  项目简介	501
28.2  用到的库	502
28.3  项目的目录结构	502
28.4  定义顾客、产品和订单模式	504
28.4.1  定义地址模式	504
28.4.2  定义账单模式	505
28.4.3  定义产品模式	505
28.4.4  定义数量模式	506
28.4.5  定义订单模式	506
28.4.6  定义顾客模式	506
28.5  创建购物车服务器	508
28.6  实现路由，以支持产品、购物车和订单请求	508
28.7  实现基于模型的控制器路由	509
28.7.1  实现产品模型控制器	509
28.7.2  实现订单模型控制器	510
28.7.3  实现顾客模型控制器	511
28.8  实现购物车和结账视图	513
28.8.1  实现购物视图	513
28.8.2  实现产品视图	515
28.8.3  实现产品页面视图	516
28.8.4  实现购物车视图	516
28.8.5  实现发货视图	518
28.8.6  实现账单视图	519
28.8.7  实现复核视图	521
28.8.8  实现订单视图	523
28.8.9  添加CSS来设置视图的样式	524
28.9  实现AngularJS模块和控制器，以支持购物车视图	526
28.9.1  初始化购物作用域	526
28.9.2  实现辅助函数	527
28.9.3  将物品添加到购物车	527
28.9.4  从购物车删除物品	528
28.9.5  结账	529
28.9.6  设置发货信息	529
28.9.7  验证账单	530
28.9.8  执行购买	530
28.9.9  完整的控制器	531
28.10  初始化应用程序	534
28.11  小结	536
28.12  下一章	536
第29章  构建交互式的Web 2.0应用程序组件	537
29.1  项目简介	537
29.2  用到的库	538
29.3  项目的目录结构	538
29.4  定义项目模型	540
29.5  创建应用程序服务器	540
29.6  实现支持视图的路由	541
29.7  实现选项卡视图	542
29.7.1  创建AngularJS选项卡视图模板	542
29.7.2  定义窗格模板	542
29.7.3  定义卡片模板	542
29.7.4  实现选项卡视图	543
29.7.5  实现AngularJS自定义指令	544
29.7.6  设置卡片视图的样式	545
29.8  实现天气服务视图	546
29.8.1  创建后端天气服务	546
29.8.2  定义天气AngularJS控制器	548
29.8.3  定义天气AngularJS视图	549
29.8.4  设置天气视图的样式	549
29.9  实现可拖动的元素	551
29.9.1  定义可拖动的自定义AngularJS指令	551
29.9.2  在AngularJS视图中实现可拖动的指令	552
29.9.3  设置可拖动视图的样式	552
29.10  实现动态数据访问	553
29.10.1  创建/words路由的Express路由控制器	553
29.10.2  定义表格AngularJS控制器	554
29.10.3  实现表格AngularJS视图	556
29.10.4  设置表格视图的样式	557
29.11  初始化应用程序	558
29.12  小结	560
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node.js+MongoDB+AngularJS Web开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>大数据存储MongoDB实战指南
第一部分基础知识
第1章大数据与云计算
1．1什么是大数据
1．2什么是云计算
1．3大数据与云计算
1．4什么是MongoDB
1．5大数据与MongoDB
1．6MongoDB特点
1．7安装MongoDB
1．8几个重要的进程介绍
1．8．1mongod进程
1．8．2mongo进程
1．8．3其他进程
1．9适合哪些业务
1．10小结
第2章查询语言系统
2．1查询选择器
2．2查询投射
2．3数组操作
2．4小结
第3章索引与查询优化
3．1索引
3．1．1单字段索引
3．1．2复合索引
3．1．3数组的多键索引
3．1．4索引管理
3．2查询优化
3．3小结
第4章增改删操作
4．1插入语句
4．2修改语句
4．3删除语句
4．4小结
第二部分深入理解MongoDB
第5章Journaling日志功能
5．1两个重要的存储视图
5．2Journaling工作原理
5．3小结
第6章聚集分析
6．1管道模式进行聚集
6．2MapReduce模式聚集
6．3简单聚集函数
6．4小结
第7章复制集
7．1复制集概述
7．2复制集工作机制
7．2．1数据同步
7．2．2故障转移
7．2．3写关注
7．2．4读参考
7．3小结
第8章分片集群
8．1分片部署架构
8．2分片工作机制
8．2．1使集合分片
8．2．2集群平衡器
8．2．3集群的写与读
8．2．4片键选择策略
8．3小结
第9章分布式文件存储系统
9．1小文件存储
9．2GridFS文件存储
9．3小结
第三部分监控与管理MongoDB
第10章管理与监控
10．1数据的导入导出
10．2备份与恢复
10．2．1单节点dump备份与恢复
10．2．2集群dump备份恢复策略
10．3监控
10．3．1数据库角度监控命令
10．3．2操作系统角度监控命令
10．3．3Web控制台监控
10．4小结
第11章权限控制
11．1权限控制API
11．1．1针对所有数据库的角色
11．1．2针对单个数据库的角色
11．2复制集与集群的权限控制
11．3小结
第四部分应用实践
第12章PHP驱动接口
12．1开发环境安装
12．2驱动介绍
12．3单实例上的增删改查
12．4几个重要的类、方法与参数
12．5复制集上的操作
12．6分片集群上的操作
12．7分布式小文件存取操作
12．8分布式大文件存取操作
12．9小结
第13章案例：高度可定制化的电商平台
13．1功能需求
13．2数据库表设计
13．3编写MongoDB_driver类
13．4CodeIgniter框架
13．4．1基本介绍
13．4．2下载与安装
13．4．3执行原理
13．4．4代码示范
13．5Bootstrap框架
13．6前台界面原型图
附录常见问题
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>大数据存储MongoDB实战指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>MongoDB管理与开发精要
前言
第一部分　 基　 础　 篇
第1章　 认识MongoDB / 2
1.1　 NoSQL简介 / 2
1.1.1　 产生背景 / 2
1.1.2　 NoSQL的种类及其特性 / 4
1.1.3　 NoSQL特点 / 8
1.1.4　 发展现状 / 8
1.2　 初识MongoDB / 9
1.2.1　 特点及功能 / 10
1.2.2　 适用场合 / 11
1.3　 MongoDB实际应用案例 / 12
1.3.1　 国内案例 / 12
1.3.2　 国外案例 / 12
1.4　 本章小结 / 13
第2章　 快速入门 / 14
2.1　 体系结构 / 14
2.1.1　 数据逻辑结构 / 14
2.1.2　 数据存储结构 / 15
2.1.3　 日志系统 / 17
2.1.4　 元数据的存储 / 18
2.1.5　 数据类型 / 19
2.2　 MongoDB的安装和配置 / 22
2.2.1　 在Windows平台下的安装和配置 / 22
2.2.2　 在Linux平台下的安装和配置 / 23
2.3　 启动数据库 / 25
2.3.1　 命令行方式 / 25
2.3.2　 配置文件方式 / 25
2.3.3　 Daemon方式 / 26
2.3.4　 mongod参数方式 / 26
2.4　 停止数据库 / 27
2.4.1　 Ctrl+C组合键 / 27
2.4.2　 shutdownServer()指令 / 28
2.4.3　 UNIX系统指令 / 28
2.5　 操作数据库 / 29
2.5.1　 连接数据库 / 29
2.5.2　 插入记录 / 29
2.5.3　 查询记录 / 31
2.5.4　 修改记录 / 34
2.5.5　 删除记录 / 34
2.6　 常用GUI管理工具 / 34
2.6.1　 MongoVUE / 34
2.6.2　 RockMongo / 35
2.6.3　 MongoHub / 36
2.7　 本章小结 / 37
第二部分　 高　 级　 篇
第3章　 高级查询 / 40
3.1　 查询操作符 / 40
3.2　 查询语法 / 46
3.2.1　 数组内容的查询 / 47
3.2.2　 内嵌文档的查询 / 47
3.2.3　 正则表达式匹配 / 48
3.2.4　 $where查询 / 48
3.3　 联合查询 / 49
3.3.1　 简单手工关联 / 49
3.3.2　 DBRef方式关联 / 50
3.4　 游标和存储过程 / 51
3.4.1　 游标 / 51
3.4.2　 存储过程 / 52
3.5　 本章小结 / 53
第4章　 高级更新 / 55
4.1　 数据更新命令详解 / 55
4.1.1　 update命令 / 55
4.1.2　 save命令 / 56
4.2　 数据更新操作符 / 57
4.3　 本章小结 / 62
第5章　 高级特性 / 63
5.1　 Capped Collection集合 / 63
5.1.1　 创建Capped Collection / 63
5.1.2　 Capped Collection的用途 / 64
5.1.3　 注意事项 / 64
5.2　 GridFS规范 / 65
5.2.1　 如何实现海量存储 / 65
5.2.2　 命令行工具 / 66
5.3　 MapReduce编程模型 / 68
5.3.1　 Map进行分组 / 69
5.3.2　 Reduce聚合计算 / 69
5.3.3　 Result获取结果 / 70
5.3.4　 Finalize格式化输出 / 70
5.3.5　 Options定制输出 / 71
5.4　 本章小结 / 72
第三部分　 管　 理　 篇
第6章　 管理工具集 / 74
6.1　 数据迁移 / 74
6.1.1　 导出工具mongoexport / 75
6.1.2　 导出工具mongodump / 78
6.1.3　 导入工具mongoimport / 79
6.2　 数据的备份和恢复 / 81
6.2.1　 备份工具mongodump / 81
6.2.2　 恢复工具mongorestore / 84
6.3　 命令行操作 / 86
6.3.1　 通过eval参数执行指定语句 / 86
6.3.2　 执行指定文件中的内容 / 87
6.4　 本章小结 / 88
第7章　 管理命令 / 89
7.1　 克隆collection / 90
7.1.1　 远程克隆collection / 90
7.1.2　 本地克隆collection / 94
7.2　 复制数据库 / 94
7.2.1　 远程复制数据库 / 94
7.2.2　 本地复制数据库 / 96
7.3　 刷新磁盘 / 97
7.4　 捕获异常 / 98
7.4.1　 返回异常信息 / 98
7.4.2　 阻塞客户端 / 99
7.5　 进程控制 / 99
7.5.1　 查看活动进程 / 99
7.5.2　 结束进程 / 100
7.6　 验证collection的有效性 / 100
7.7　 数据压缩 / 101
7.8　 本章小结 / 102
第8章　 访问控制 / 103
8.1　 限制特定IP地址访问 / 104
8.2　 设置监听端口 / 104
8.3　 使用用户名和口令登录 / 105
8.3.1　 建立系统root用户 / 107
8.3.2　 建立指定权限用户 / 108
8.3.3　 删除指定用户 / 109
8.4　 本章小结 / 110
第四部分　 性　 能　 篇
第9章　 索引及优化 / 112
9.1　 MongoDB索引概述 / 112
9.2　 索引操作 / 113
9.2.1　 基础索引 / 113
9.2.2　 静默方式创建索引 / 115
9.2.3　 文档索引 / 115
9.2.4　 组合索引 / 116
9.2.5　 唯一索引 / 116
9.2.6　 强制使用索引 / 117
9.2.7　 删除索引 / 119
9.2.8 　 重建索引 / 119
9.2.9　 explain查看执行计划 / 119
9.3　 优化器Profiler / 121
9.3.1　 开启Profiler功能 / 121
9.3.2　 查询Profiler记录 / 122
9.4　 性能优化概述 / 123
9.4.1　 性能优化的原则 / 123
9.4.2　 影响性能的因素 / 124
9.5　 常用的优化方案 / 124
9.5.1　 创建索引 / 124
9.5.2　 限定返回结果条数 / 125
9.5.3　 只查询用到的字段 / 125
9.5.4　 采用Capped Collection / 126
9.5.5　 采用Server Side Code Execution命令集 / 126
9.5.6　 使用hint / 127
9.5.7　 采用Profiler / 127
9.6　 本章小结 / 128
第10章　 性能监控 / 129
10.1　 mongosniff工具 / 129
10.2　 mongostat工具 / 131
10.3　 db.serverStatus命令 / 132
10.4　 db.stats命令 / 134
10.5　 HTTP监控接口 / 135
10.6　 本章小结 / 136
第五部分　 架　 构　 篇
第11章　 复制集 / 138
11.1　 Replica Sets架构 / 138
11.2　 部署Replica Sets / 139
11.3　 主从操作日志 / 144
11.4　 主从配置信息 / 146
11.5　 管理Replica Sets / 147
11.5.1　 主从切换 / 147
11.5.2　 读写分离 / 149
11.5.3　 故障转移 / 151
11.5.4　 增减节点 / 153
11.6　 本章小结 / 160
第12章　 分片 / 161
12.1　 Sharding简介 / 161
12.1.1　 Sharding的特点 / 161
12.1.2　 Sharding架构 / 162
12.2　 构建一个简单的Sharding Cluster / 163
12.2.1　 启动Shard Server / 163
12.2.2　 启动Config Server / 164
12.2.3　 启动Route Process / 164
12.2.4　 配置Sharding / 164
12.2.5　 验证Sharding / 165
12.3　 维护Sharding / 167
12.3.1　 列出所有的Shard Server / 168
12.3.2　 查看Sharding信息 / 168
12.3.3　 判断是否是Sharding / 169
12.3.4　 对现有的表执行Sharding / 169
12.3.5　 新增Shard Server / 171
12.3.6　 移除Shard Server / 172
12.4　 本章小结 / 175
第13章　 Replica Sets + Sharding方案 / 176
13.1　 Replica Sets+Sharding架构 / 176
13.2　 搭建一个高可用架构 / 177
13.2.1　 创建数据目录 / 177
13.2.2　 配置Replica Sets / 178
13.2.3　 配置3台Config Server / 181
13.2.4　 配置3台Route Process / 181
13.2.5　 配置Shard Cluster / 181
13.2.6　 验证Sharding / 182
13.3　 本章小结 / 183
第六部分　 开　 发　 篇
第14章　 C#开发接口 / 186
14.1　 C#快速入门 / 186
14.1.1　 下载驱动和开发环境 / 186
14.1.2　 访问控制 / 188
14.1.3　 C#对数据库的基础操作 / 189
14.2　 C#驱动一致性 / 194
14.3　 C#常用操作 / 195
14.3.1　 对MongoDB实例的操作 / 195
14.3.2　 对用户的操作 / 198
14.3.3　 对collection的操作 / 202
14.3.4　 对索引的操作 / 208
14.4　 C#高级查询 / 211
14.4.1　 判断列名是否存在 / 211
14.4.2　 比较运算符 / 213
14.4.3　 逻辑运算符 / 221
14.4.4　 正则表达式查询 / 223
14.4.5　 跳过查询 / 224
14.5　 用C#操作GridFS / 225
14.5.1　 插入数据 / 225
14.5.2　 查询数据 / 226
14.5.3　 读取并保存数据 / 227
14.5.4　 删除数据 / 228
14.6　 本章小结 / 229
第15章　 Java开发接口 / 230
15.1　 Java快速入门 / 230
15.1.1　 下载驱动和开发环境 / 230
15.1.2　 访问控制 / 232
15.1.3　 Java对数据库的基础操作 / 233
15.2　 Java驱动一致性 / 237
15.3　 Java常用操作 / 238
15.3.1　 对MongoDB实例的操作 / 238
15.3.2　 对用户的操作 / 241
15.3.3　 对collection的操作 / 243
15.3.4　 对索引的操作 / 250
15.4　 Java高级查询 / 253
15.4.1　 通过游标获取所有document / 253
15.4.2　 比较运算符 / 254
15.4.3　 逻辑运算符 / 263
15.4.4　 正则表达式查询 / 264
15.4.5　 跳过查询 / 265
15.5　 用Java操作GridFS / 266
15.5.1　 插入数据 / 266
15.5.2　 查询数据 / 267
15.5.3　 读取并保存数据 / 268
15.5.4　 删除数据 / 269
15.6　 本章小结 / 270
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>MongoDB管理与开发精要
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>MongoDB大数据处理权威指南（第2版）
第Ⅰ部分  MongoDB基础
第1章  MongoDB简介	3
1.1  了解MongoDB哲学	3
1.1.1  使用正确的工具处理正确的工作	3
1.1.2  天生缺少对事务的支持	5
1.1.3  JSON和MongoDB	5
1.1.4  采用非关系的方式	7
1.1.5  选择性能还是特性	8
1.1.6  在任何地方均可运行数据库	8
1.2  将所有组合在一起	9
1.2.1  生成或创建键	9
1.2.2  使用键和值	9
1.2.3  实现集合	10
1.2.4  了解数据库	10
1.3  了解特性列表	10
1.3.1  使用面向文档存储(BSON)	11
1.3.2  支持动态查询	11
1.3.3  为文档创建索引	12
1.3.4  使用地理空间索引	13
1.3.5  分析查询	13
1.3.6  就地更新信息	13
1.3.7  存储二进制数据	14
1.3.8  复制数据	14
1.3.9  实施分片	14
1.3.10  使用映射和归约函数	15
1.3.11  全新的聚合框架	15
1.4  获取帮助	15
1.4.1  访问网站	15
1.4.2  与MongoDB开发者沟通	16
1.4.3  剪切和粘贴MongoDB代码	16
1.4.4  在Google小组中寻找解决方案	16
1.4.5  利用JIRA跟踪系统	16
1.5  小结	16
第2章  安装MongoDB	17
2.1  选择版本	17
2.2  在系统中安装MongoDB	18
2.2.1  在Linux中安装MongoDB	18
2.2.2  在Windows中安装MongoDB	19
2.3  运行MongoDB	20
2.3.1  先决条件	20
2.3.2  研究安装目录布局	20
2.3.3  使用MongoDB shell	21
2.4  添加额外的驱动	22
2.4.1  安装PHP驱动	22
2.4.2  确认PHP安装正确	25
2.4.3  安装Python驱动	26
2.4.4  确认PyMongo安装正确	28
2.5  小结	29
第3章  数据模型	31
3.1  设计数据库	31
3.1.1  集合的更多细节	32
3.1.2  使用文档	33
3.1.3  在文档中内嵌或引用信息	34
3.1.4  创建_id字段	35
3.2  构建索引	36
3.3  使用地理空间索引	37
3.4  在真实世界中使用MongoDB	42
3.5  小结	42
第4章  使用数据	43
4.1  浏览数据库	43
4.2  在集合中插入数据	44
4.3  查询数据	45
4.3.1  使用点号	47
4.3.2  使用函数sort、limit和skip	47
4.3.3  使用固定集合、自然顺序和
$natural	48
4.3.4  获取单个文档	50
4.3.5  使用聚集命令	50
4.3.6  使用条件操作符	52
4.3.7  使用正则表达式	59
4.4  更新数据	59
4.4.1  使用update()更新	60
4.4.2  使用save()命令实现upsert	60
4.4.3  自动更新信息	60
4.4.4  指定匹配数组的位置	64
4.4.5  原子操作	65
4.4.6  以原子的方式修改和返回文档	66
4.5  重命名集合	67
4.6  删除数据	67
4.7  引用数据库	68
4.7.1  手动引用数据	68
4.7.2  使用DBRef引用数据	70
4.8  使用索引相关的函数	71
4.8.1  学习索引相关的命令	72
4.8.2  强制使用某个索引查询数据	72
4.8.3  限制查询匹配	73
4.9  小结	74
第5章  GridFS	75
5.1  背景	75
5.2  使用GridFS	76
5.3  开始使用命令行工具	76
5.3.1  使用_id键	77
5.3.2  使用文件名	77
5.3.3  决定文件长度	78
5.3.4  使用块大小	78
5.3.5  处理上传日期	79
5.3.6  生成文件的哈希值	79
5.4  查看MongoDB中的数据	79
5.4.1  使用搜索命令	81
5.4.2  删除	81
5.4.3  从MongoDB中获取文件	82
5.4.4  mongofiles命令小结	82
5.5  使用Python	82
5.5.1  连接数据库	83
5.5.2  访问单词	83
5.6  在MongoDB中添加文件	84
5.7  从GridFS中读取文件	84
5.8  删除文件	85
5.9  小结	85
第Ⅱ部分  在开发中使用MongoDB
第6章  PHP和MongoDB	89
6.1  比较MongoDB和PHP中的
文档	89
6.2  MongoDB类	90
6.3  连接和断开连接	91
6.4  插入数据	92
6.5  查询数据	94
6.5.1  返回单个文档	94
6.5.2  列出所有文档	95
6.5.3  使用查询操作符	96
6.5.4  查询特定信息	96
6.5.5  排序、限制和忽略数据项	97
6.5.6  统计匹配结果的数目	98
6.5.7  使用聚集框架对数组分组	98
6.5.8  使用hint()函数指定索引	99
6.5.9  使用条件操作符重新定义查询	100
6.5.10  正则表达式	106
6.6  使用PHP修改数据	106
6.6.1  使用update()函数更新数据	106
6.6.2  节省更新操作的时间	108
6.6.3  使用$ince增加特定键的值	108
6.6.4  使用$set修改键值	109
6.6.5  使用$unset删除字段	109
6.6.6  使用$rename重命名字段	110
6.6.7  在更新/插入期间使用$setOnInsert
修改键值	110
6.6.8  使用$push向指定字段中添加值	111
6.6.9  使用$push和$each向某个键中
添加多个值	111
6.6.10  使用$addToSet将数据添加到
数组中	112
6.6.11  使用$pop从数组中删除元素	113
6.6.12  使用$pull删除所有指定值	113
6.6.13  同时删除多个元素	113
6.6.14  使用save()函数更新/插入数据	114
6.6.15  以原子的方式修改文档	115
6.7  删除数据	116
6.8  DBRef	118
6.9  GridFS和PHP驱动	120
6.9.1  存储文件	120
6.9.2  在已存储的文件中添加元数据	121
6.9.3  获取文件	121
6.9.4  删除数据	122
6.10  小结	122
第7章  Python和MongoDB	123
7.1  在Python中使用文档	123
7.2  使用PyMongo模块	124
7.3  连接和断开	124
7.4  插入数据	125
7.5  搜索数据	126
7.5.1  搜索单个文档	126
7.5.2  搜索多个文档	127
7.5.3  使用点操作符	128
7.5.4  返回字段	128
7.5.5  使用sort()、limit()和skip()简化
查询	129
7.5.6  聚集查询	130
7.5.7  使用hint()指定索引	132
7.5.8  使用条件操作符重定义查询	133
7.5.9  使用正则表达式执行搜索	137
7.6  修改数据	138
7.6.1  更新数据	139
7.6.2  修改操作符	140
7.6.3  使用save()函数快速保存文档	144
7.6.4  以原子的方式修改文档	145
7.6.5  使用参数	145
7.7  删除数据	146
7.8  在两个文档之间创建链接	146
7.9  小结	149
第8章  高级查询	151
8.1  文本搜索	151
8.1.1  文本搜索的代价和限制	152
8.1.2  启用文本索引	152
8.1.3  使用文本索引	153
8.1.4  其他语言中的文本索引	158
8.1.5  文本索引的复合索引	159
8.2  聚集框架	161
8.2.1  $group	162
8.2.2  $sum	162
8.2.3  $limit	163
8.2.4  $match	164
8.2.5  $sort	165
8.2.6  $unwind	166
8.2.7  $project	167
8.2.8  $skip	168
8.3  MapReduce	170
8.3.1  MapReduce的工作方式	170
8.3.2  创建测试文档	170
8.3.3  使用map函数	170
8.3.4  高级MapReduce	173
8.3.5  调试MapReduce	174
8.4  小结	175
第Ⅲ部分  使用MongoDB处理大数据
第9章  数据库管理	179
9.1  使用管理工具	179
9.1.1  mongo——MongoDB控制台	180
9.1.2  使用第三方管理工具	180
9.2  备份MongoDB服务器	180
9.2.1  创建第一个备份	180
9.2.2  备份单个数据库	182
9.2.3  备份单个集合	182
9.3  深入学习备份	183
9.4  恢复单个数据库或集合	184
9.4.1  恢复单个数据库	185
9.4.2  恢复单个集合	185
9.5  自动化备份	185
9.5.1  使用本地数据存储	185
9.5.2  使用远端数据存储(基于云)	187
9.6  备份大数据库	188
9.6.1  使用隐藏的辅助服务器备份
数据	189
9.6.2  使用日志文件系统创建快照	189
9.6.3  使用卷管理器时的磁盘布局	191
9.7  将数据导入MongoDB	191
9.8  从MongoDB导出数据	192
9.9  通过限制对MongoDB服务器的
访问保护数据安全	194
9.10  使用认证保护服务器	194
9.10.1  添加admin用户	195
9.10.2  启用认证	195
9.10.3  在mongo控制台中执行认证	195
9.10.4  MongoDB用户角色	196
9.10.5  代理凭证	197
9.10.6  修改用户凭证	197
9.10.7  添加只读用户	198
9.10.8  删除用户	198
9.10.9  在PHP应用中认证连接	198
9.11  管理服务器	199
9.11.1  启动服务器	199
9.11.2  重新配置服务器	200
9.11.3  获得服务器版本	201
9.11.4  获得服务器状态	201
9.11.5  关闭服务器	203
9.12  使用MongoDB日志文件	203
9.13  验证和修复数据	204
9.13.1  修复服务器	204
9.13.2  验证单个集合	206
9.13.3  修复集合验证错误	207
9.14  升级MongoDB	209
9.15  MongoDB的滚动升级	209
9.16  监控MongoDB	209
9.17  使用MongoDB管理服务	211
9.18  小结	211
第10章  优化	213
10.1  优化服务器硬件	213
10.1.1  了解MongoDB使用内存的
方式	213
10.1.2  了解工作集大小	214
10.1.3  选择正确的数据库服务器
硬件	214
10.2  评估查询性能	214
10.2.1  MongoDB分析器	215
10.2.2  使用explain()分析特定的
查询	217
10.2.3  使用分析器和explain()优化
查询	218
10.3  管理索引	222
10.3.1  显示索引	222
10.3.2  创建简单的索引	223
10.3.3  创建复合索引	223
10.4  指定索引选项	224
10.4.1  使用{background: true}在后台
创建索引	224
10.4.2  使用{unique: true}创建唯一键
索引	225
10.4.3  使用{dropdups: true}自动去重	225
10.4.4  使用{sparse: true}创建稀疏
索引	226
10.4.5  TTL索引	226
10.4.6  文本索引	227
10.4.7  删除索引	227
10.4.8  重建集合索引	227
10.5  MongoDB选择索引的方式	228
10.6  使用hint()强制使用特定的
索引	229
10.7  优化小对象的存储	229
10.8  小结	230
第11章  复制	231
11.1  MongoDB复制的目标	231
11.1.1  改善可扩展性	231
11.1.2  改善持久性/可靠性	232
11.1.3  提供隔离性	232
11.2  复制基础	232
11.2.1  主服务器的定义	233
11.2.2  辅助服务器的定义	233
11.2.3  仲裁服务器的定义	234
11.3  深入学习oplog	234
11.4  实现复制集	235
11.4.1  创建复制集	236
11.4.2  启动服务器成员	237
11.4.3  向复制集中添加服务器	238
11.4.4  添加仲裁服务器	241
11.4.5  复制集链	242
11.4.6  管理复制集	242
11.4.7  为复制集成员设置选项	246
11.4.8  从应用连接到复制集	248
11.5  小结	251
第12章  分片	253
12.1  了解分片的需求	253
12.2  对数据进行水平和垂直分区	254
12.2.1  对数据进行垂直分区	254
12.2.2  对数据进行水平分区	254
12.3  分析一个简单的分片场景	255
12.4  使用MongoDB实现分片	256
12.4.1  创建分片设置	258
12.4.2  在集群中添加新的分片	260
12.4.3  从集群中移除分片服务器	262
12.4.4  确定连接的方式	263
12.4.5  列出分片服务器的状态	263
12.4.6  使用复制集实现分片	264
12.5  均衡器	264
12.6  哈希片键	266
12.7  标签分片	267
12.8  小结	269
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>MongoDB大数据处理权威指南（第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>全栈开发之道
入 门 篇
第1章 Bootstrap基础 2
1.1 概述 2
1.2 Bootstrap开发环境 3
1.2.1 Bootstrap的安装 3
1.2.2 Bootstrap的加载 5
1.3 Bootstrap 常用工具 6
1.3.1 Bootstrap代码编辑工具 6
1.3.2 Bootstrap设计工具——Layout IT 7
1.4 Bootstrap 布局 8
1.4.1 HTML标准模板 8
1.4.2 自定义CSS 10
1.4.3 响应式布局的实现 12
1.4.4 禁用响应式布局 16
1.5 小结 16
第2章 JavaScript基础 17
2.1 概述 17
2.2 JavaScript 语法 17
2.2.1 变量中的声明与赋值 18
2.2.2 如何判断两个字符串是否相等 19
2.2.3 创建JavaScript对象的三种方法 21
2.2.4 函数声明与函数表达式 23
2.2.5 可立即调用的函数表达式 25
2.2.6 循环的实现 27
2.2.7 防止JavaScript自动插入分号 28
2.2.8 严格模式 29
2.3 如何运行与调试JavaScript代码 30
2.3.1 把JavaScript代码内嵌到HTML页面中 30
2.3.2 通过Node.js运行JavaScript代码 31
2.4 JavaScript的面向对象设计思想 32
2.5 JavaScript的异步编程模式 33
2.5.1 Promise对象 34
2.5.2 生成Promise实例对象 34
2.5.3 Promise原型方法 35
2.5.4 Promise的catch方法 36
2.5.5 Promise在Node.js中的应用 37
2.6 如何在HTML中嵌入JavaScript 37
2.6.1 ＜script＞标签 37
2.6.2 ＜script＞标签的位置 38
2.6.3 嵌入JavaScript代码与外部文件引用 39
2.7 JavaScript与JSON 39
2.7.1 JSON概述 39
2.7.2 什么是JSON 40
2.7.3 JSON语法规则 40
2.8 小结 42
基 础 篇
第3章 Node.js入门指南 44
3.1 概述 44
3.2 Node.js生态 44
3.3 Node开发环境的搭建 45
3.4 Node.js验证 45
3.5 第一个Node.js工程 46
3.5.1 创建Node.js工程 46
3.5.2 运行Node.js工程 47
3.6 Node.js的module应用 50
3.7 Node.js 编码规范 52
3.8 小结 53
第4章 Express——后端框架 54
4.1 概述 54
4.2 第一个Express工程 54
4.2.1 Express工程的创建 54
4.2.2 Express的路由 55
4.2.3 Express的中间件 56
4.2.4 设置静态目录 57
4.3 Express中的Cookie与Session 58
4.3.1 Cookie是如何工作的 58
4.3.2 Session是什么 58
4.3.3 为什么需要Session 59
4.3.4 Session应用场景 59
4.4 Express中的网络请求方法 59
4.4.1 req.params 60
4.4.2 req.query 61
4.4.3 req.body 61
4.4.4 网络请求方法 61
4.5 Express中的GET与POST请求 62
4.5.1 GET请求 62
4.5.2 post请求 62
4.6 通过Express 实现登录页面 63
4.6.1 get请求验证 66
4.6.2 post请求验证 68
4.7 小结 69
第5章 Express的模板引擎 70
5.1 模板引擎概述 70
5.1.1 什么是模板引擎 70
5.1.2 模板引擎的选择 71
5.1.3 服务器端模板引擎 71
5.2 模板引擎的种类 72
5.2.1 模板引擎Jade 72
5.2.2 模板引擎Handlebars 73
5.2.3 模板引擎EJS 73
5.3 Express中的EJS 73
5.3.1 创建工程Express工程 74
5.3.2 引入工程的依赖包（dependency） 74
5.3.3 启动应用 76
5.3.4 EJS模板引擎的触发 77
5.4 小结 78
第6章 AngularJS——Google前端框架 79
6.1 AngularJS概述 79
6.2 AngularJS 常用指令 81
6.2.1 AngularJS 指令概述 81
6.2.2 AngualrJS指令：ng-app 81
6.2.3 AngularJS指令：ng-init 82
6.2.4 AngularJS表达式 82
6.2.5 AngularJS指令：ng-model 83
6.2.6 ng-app与ng-model示例 83
6.2.7 ng-app与ng-model常见错误分析 84
6.2.8 {{ }}的应用 85
6.2.9 指令：ng-bind 86
6.2.10 指令：ng-click 86
6.3 AngularJS构建单页面应用 86
6.3.1 单页面应用的优势 86
6.3.2 轻松构建单页面应用 88
6.3.3 单页面应用的实现 89
6.4 AngularJS的加载 93
6.4.1 AngularJS的引用 93
6.4.2 加载AngularJS静态资源库 94
6.5 AngularJS 的注入 94
6.5.1 依赖注入 94
6.5.2 依赖注入的行内声明 97
6.6 AngularJS 的Module 99
6.6.1 AngularJS Module 概述 99
6.6.2 AngularJS的Module 应用 100
6.7 AngularJS 控制器 102
6.7.1 控制器命名方法 102
6.7.2 AngularJS 控制器的创建 102
6.7.3 AngularJS控制器的应用 103
6.8 AngularJS的数据绑定 105
6.9 $scope用法 106
6.10 小结 109
第7章 MongoDB——文档数据库 110
7.1 MongoDB概述 110
7.1.1 MongoDB简介 110
7.1.2 MongoDB的历史 110
7.1.3 MongoDB的优势 111
7.1.4 MongoDB的安装 111
7.1.5 启动MongoDB 112
7.2 数据库存储机制 112
7.2.1 关系型数据库 112
7.2.2 NoSQL数据库 112
7.3 MongoDB数据结构 113
7.3.1 文档 113
7.3.2 集合 114
7.3.3 MongoDB存储格式——BSON 115
7.4 Mongo Shell 116
7.4.1 Mongo Shell简介 116
7.4.2 运行Mongo Shell 116
7.4.3 Mongo Shell基本操作 117
7.5 MongoDB文档操作 118
7.5.1 创建一个文档 118
7.5.2 查询所有文档 118
7.5.3 查询某一个文档 119
7.5.4 文档的更新 120
7.5.5 文档的删除 120
7.5.6 删除集合 121
7.6 _id和ObjectId 121
7.7 MongoDB管理工具 121
7.7.1 MongoDB可视化工具——Robomongo 121
7.7.2 Robomongo的安装 122
7.8 用mongoose操作MongoDB 125
7.8.1 mongoose概述 125
7.8.2 初识mongoose 125
7.8.3 mongoose的安装 126
7.8.4 mongoose连接数据库 126
7.8.5 Schema 127
7.8.6 Model及其操作 127
7.9 小结 132
实 战 篇
第8章 应用实例1——用户管理 134
8.1 概述 134
8.2 实现的思路 135
8.3 Node.js工程结构 135
8.3.1 创建一个Node服务 136
8.3.2 构建index.html页面 136
8.3.3 构建AngularJS页面 137
8.3.4 构建controller数据 138
8.3.5 构建路由 138
8.3.6 连接MongoDB 140
8.4 简单的用户管理操作 142
8.4.1 增加一条记录 142
8.4.2 删除一条记录 144
8.4.3 编辑与更新一条记录 146
8.4.4 $set与$unset的应用 149
8.5 小结 150
第9章 应用实例2——登录管理 151
9.1 概述 151
9.2 安装Express 151
9.3 创建Express工程 151
9.4 构建登录页面 157
9.4.1 构建登录的静态页面 157
9.4.2 构建路由 159
9.4.3 添加路由中间件 161
9.5 构建注册页面 161
9.5.1 静态页面的创建 161
9.5.2 构建注册页面的路由 163
9.5.3 添加路由中间件 166
9.6 小结 166
第10章 应用实例3——记事本 167
10.1 概述 167
10.2 实现思路 168
10.3 构建AngularJS应用 168
10.3.1 控制器 169
10.3.2 模块 171
10.3.3 模板 172
10.3.4 布局模板 172
10.3.5 路由 173
10.3.6 工厂方法 175
10.3.7 页面跳转 177
10.3.8 $routeProvider 180
10.3.9 过滤器 182
10.3.10 $index的应用 184
10.3.11 控制器之间的传值 185
10.3.12 $rootScope 185
10.3.13 使用$watch监控数据模型的变化 186
10.4 创建Express工程 189
10.5 创建MongoDB 190
10.5.1 连接MongoDB 190
10.5.2 创建mongoose的model 191
10.6 创建RESTful API 191
10.6.1 GET请求 191
10.6.2 POST请求 192
10.6.3 查找指定的对象 193
10.6.4 更新 194
10.6.5 删除 194
10.7 构建MEAN工程 194
10.7.1 路由 194
10.7.2 构建动态页面 196
10.7.3 $http的应用 196
10.7.4 基于$http的工厂方法 197
10.7.5 RESTful API的调用 198
10.7.6 基于$resource的工厂方法 199
10.7.7 创建一条记录 199
10.7.8 查看记录详情 201
10.7.9 更新记录 203
10.7.10 删除记录 206
10.7.11 运行结果 207
10.8 小结 208
第11章 应用实例4——商品管理 210
11.1 概述 210
11.2 实现思路 211
11.2.1 开发环境的搭建 211
11.2.2 创建Express工程 211
11.2.3 安装Monk 212
11.3 数据库管理 212
11.3.1 构建数据库模拟数据 213
11.3.2 通过Express创建访问数据库的API 213
11.4 重构页面 219
11.4.1 引入AngularJS 219
11.4.2 通过AngularJS重构首页 220
11.4.3 控制器的实现 222
11.4.4 when方法 225
11.4.5 $resource的调用 225
11.4.6 文档对象的创建 226
11.4.7 $location的应用 233
11.4.8 文档对象的编辑 234
11.4.9 $routeParams的应用 242
11.4.10 文档对象的删除 243
11.5 小结 245
参考文献 247
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>全栈开发之道
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>左手MongoDB，右手Redis——从入门到商业实战
第1篇  基础知识
第1章  进入MongoDB与Redis的世界  2
1.1  非关系型数据库的产生背景与分类  2
1.1.1  关系型数据库遇到的问题  2
1.1.2  非关系型数据库的分类及特点  2
1.2  MongoDB与Redis可以做什么  3
1.2.1  MongoDB适合做什么  3
1.2.2  Redis适合做什么  3
1.3  如何学习MongoDB和Redis  4
1.3.1  项目驱动，先用再学  4
1.3.2  系统梳理，由点到面  4
1.3.3  分清主次，不要在无谓的操作中浪费时间  5
1.3.4  在不同领域中尝试  5
1.4  如何使用本书  5
1.4.1  本书的产品定位  5
1.4.2  本书适用的读者群体  6
1.4.3  如何利用本书实例进行练习  6
第2章  数据存储方式的演进  8
2.1  从文件到MongoDB数据库  8
2.1.1  使用文件保存数据  8
2.1.2  使用MongoDB保存数据  9
2.2  从队列Queue到Redis  9
2.2.1  了解“生产者/消费者”模型  9
2.2.2  实例1：使用Python实现队列  10
2.2.3  Python的Queue及其缺陷  12
2.2.4  实例2：使用Redis替代Queue  12
本章小结  14
第2篇  快速入门
第3章  MongoDB 快速入门  16
3.1  MongoDB和SQL术语对比  16
3.2  安装MongoDB  16
3.2.1  在Windows中安装  16
3.2.2  在Linux中安装  19
3.2.3  在macOS中安装  21
3.3  MongoDB的图形化管理软件——Robo 3T  25
3.3.1  安装  25
3.3.2  认识Robo 3T的界面  28
3.4  MongoDB的基本操作  29
3.4.1  实例3：创建数据库与集合，写入数据  29
3.4.2  实例4：查询数据  36
3.4.3  实例5：修改数据  46
3.4.4  实例6：删除数据  47
3.4.5  实例7：数据去重  49
3.5  使用Python操作MongoDB  51
3.5.1  连接数据库  51
3.5.2  MongoDB命令在Python中的对应方法  53
3.5.3  实例8：插入数据到MongoDB  55
3.5.4  实例9：从MongoDB中查询数据  55
3.5.5  实例10：更新/删除MongoDB中的数据  56
3.6  MongoDB与Python不通用的操作  58
本章小结  64
第4章  实例11：用MongoDB开发员工信息管理系统  65
4.1  了解实例最终目标  65
4.2  准备工作  69
4.2.1  了解文件结构  69
4.2.2  搭建项目运行环境  69
4.2.3  启动项目  72
4.3  项目开发过程  74
4.3.1  生成初始数据  74
4.3.2  实现“查询数据”功能  75
4.3.3  实现“添加数据”功能  79
4.3.4  实现“更新数据”功能  83
4.3.5  实现“删除数据”功能  85
本章小结  88
第5章  Redis快速入门  89
5.1  安装Redis  89
5.1.1  在Windows中安装Redis  89
5.1.2  在Linux中安装Redis  91
5.1.3  在macOS中安装Redis  92
5.1.4  在线测试环境  93
5.2  字符串的创建、查询和修改  94
5.2.1  使用redis-cli实现  94
5.2.2  使用Python实现  99
5.2.3  字符串的应用  103
5.3  列表的创建、查询和修改  105
5.3.1  使用redis-cli实现  105
5.3.2  使用Python实现  110
5.3.3  列表的应用  116
5.4  集合的创建和修改  118
5.4.1  使用redis-cli实现  118
5.4.2  使用Python实现  127
5.4.3  集合的应用  132
本章小结  133
第6章  实例12：用Redis开发一个聊天室  134
6.1  了解实例的最终目标  134
6.2  准备工作  135
6.2.1  了解文件结构  135
6.2.2  搭建项目运行环境  136
6.3  项目开发过程  139
6.3.1  实现登录功能1：创建Redis的连接实例  139
6.3.2  实现登录功能2：实现“检查昵称是否重复”功能  141
6.3.3  实现登录功能3：实现“设置和获取Token”功能  142
6.3.4  实现聊天室页面1：实现“获取聊天消息”功能  145
6.3.5  实现聊天室页面2：实现“发送新信息”功能  148
6.3.6  实现聊天室页面3：设定“刷屏检查字符串”  151
6.3.7  实现聊天室页面4：读取刷屏限制的剩余时间  153
本章小结  154
第3篇  高级应用
第7章  MongoDB的高级语法  156
7.1  AND和OR操作  156
7.1.1  实例13：查询同时符合两个条件的人（AND操作）  156
7.1.2  实例14：查询只符合其中任一条件的人（OR操作）  159
7.1.3  实例15：用Python实现MongoDB的AND与OR操作  162
7.2  查询子文档或数组中的数据  163
7.2.1  认识嵌入式文档  163
7.2.2  实例16：嵌入式文档的应用  164
7.2.3  认识数组字段  167
7.2.4  实例17：数组应用——查询数组包含与不包含“”的数据  168
7.2.5  实例18：数组应用——根据数组长度查询数据  170
7.2.6  实例19：数组应用——根据索引查询数据  170
7.2.7  Python操作嵌入式文档与数组字段  172
7.3  MongoDB的聚合查询  173
7.3.1  聚合的基本语法  173
7.3.2  实例20：筛选数据  174
7.3.3  实例21：筛选与修改字段  177
7.3.4  实例22：分组操作  184
7.3.5  实例23：拆分数组  191
7.3.6  实例24：联集合查询  193
7.3.7  实例25：使用Python执行聚合操作  204
本章小结  205
第8章  MongoDB的优化和安全建议  206
8.1  提高MongoDB读写性能  206
8.1.1  实例26：“批量插入”与“逐条插入”数据，比较性能差异  206
8.1.2  实例27：“插入”与“更新”数据，比较性能差异  214
8.1.3  实例28：使用“索引”提高查询速度  217
8.1.4  实例29：引入Redis，以降低MongoDB的读取频率  218
8.1.5  实例30：增添适当冗余信息，以提高查询速度  219
8.2  提高MongoDB的安全性  221
8.2.1  配置权限管理机制  221
8.2.2  开放外网访问  230
本章小结  233
第9章  Redis的高级数据结构  234
9.1  哈希表的功能和应用  234
9.1.1  实例31：使用Redis记录用户在线状态  234
9.1.2  实例32：使用Python向哈希表中添加数据  239
9.1.3  实例33：使用Python从哈希表中读取数据  241
9.1.4  实例34：使用Python判断哈希表中是否存在某字段，并获取字段数量  244
9.1.5  实例35：在Redis交互环境redis-cli中读/写哈希表  245
9.2  发布消息/订阅频道  247
9.2.1  实例36：实现一对多的消息发布  247
9.2.2  实例37：在Python中发布消息/订阅频道  252
9.2.3  实例38：在redis-cli中发布消息/订阅频道  254
9.3  有序集合  255
9.3.1  实例39：实现排行榜功能  256
9.3.2  实例40：使用Python读写有序集合  258
9.3.3  实例41：在Redis交互环境redis-cli中使用有序集合  264
9.4  Redis的安全管理  266
9.4.1  实例42：设置密码并开放外网访问  266
9.4.2  禁用危险命令  269
本章小结  269
第4篇  商业实战
第10章  实例43：搭建一个类似“知乎”的问答网站  272
10.1  了解实例的最终目标  272
10.2  准备工作  274
10.2.1  了解文件结构  274
10.2.2  搭建实例运行环境  275
10.2.3  运行项目  276
10.3  项目开发过程  278
10.3.1  生成初始数据  278
10.3.2  实现“查询问题列表”功能  279
10.3.3  实现“查询回答”功能  281
10.3.4  实现“提问与回答”功能  282
10.3.5  实现“点赞”与“点踩”功能  283
本章小结  284
第11章  实例44：使用Redis存储网站会话（接第10章实例）  285
11.1  了解实例的最终目标  285
11.1.1  注册账号  285
11.1.2  登录后回答问题  287
11.1.3  修改回答  287
11.1.4  用户回答同一个问题的次数  287
11.1.5  修改提问  288
11.2  准备工作  288
11.2.1  了解文件结构  288
11.2.2  搭建项目运行环境  290
11.2.3  运行实例  290
11.3  开发过程  292
11.3.1  会话管理的基本原理  292
11.3.2  保存与读取用户信息  294
11.3.3  更新问题和回答  295
11.3.4  检查用户名是否已经注册  295
11.3.5  在Redis中储存与删除Session  295
11.3.6  从Redis中获取Session  296
11.3.7  记录和检查“用户回答是否回答了某个问题”  297
本章小结  297
第12章  实例45：大规模验重和问答排序（接第11章实例）  298
12.1  了解实例的最终目标  298
12.1.1  账号验重  298
12.1.2  动态排序  299
12.1.3  注销登录功能  299
12.2.4  翻页功能  300
12.2  准备工作  300
12.2.1  了解文件结构  300
12.2.2  搭建项目运行环境  302
12.2.3  运行项目  302
12.3  开发过程  304
12.3.1  了解“布隆过滤器”的基本原理  304
12.3.2  使用“布隆过滤器”对注册用户进行验重  308
12.3.3  让“问题”与“回答”根据点赞数动态排序  311
本章小结  317
第13章  重构和优化  319
13.1  划分代码层次  319
13.1.1  寻找问题  319
13.1.2  如何重构  321
13.2  MongoDB的常见陷阱  322
13.2.1  默认超时时间  322
13.2.2  硬盘空间的使用  325
13.3  使用Redis的注意事项  326
13.3.1  “多Redis实例”与“单Redis实例多数据库”的差异  326
13.3.2  尽可能为每个Key设置过期时间  328
本章小结  329
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>左手MongoDB，右手Redis——从入门到商业实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>MongoDB实战 架构、开发与管理
第1章  大数据 1
1.1  入门指南 1
1.2  大数据 3
1.3  大数据源 4
1.4  大数据的三个V 5
1.4.1  数量 6
1.4.2  多样性 6
1.4.3  速率 7
1.5  大数据的使用 7
1.5.1  可见性 8
1.5.2  发现和分析信息 8
1.5.3  市场细分和产品定制 8
1.5.4  协助决策 8
1.5.5  创新 8
1.6  大数据的挑战 9
1.6.1  政策与程序 9
1.6.2  访问数据 9
1.6.3  技术与技能 9
1.7  传统系统与大数据 10
1.7.1  大数据的结构 10
1.7.2  数据存储 10
1.7.3  数据处理 10
1.8  大数据技术 10
1.9  本章小结 11
第2章  NoSQL 13
2.1  SQL 13
2.2  NoSQL 13
2.2.1  定义 14
2.2.2  NoSQL简史 14
2.3  ACID对比BASE 15
2.3.1  CAP定理 15
2.3.2  BASE 16
2.4  NoSQL的优缺点 17
2.4.1  NoSQL的优点 17
2.4.2  NoSQL的缺点 18
2.5  SQL与NoSQL数据库的
对比 18
2.6  NoSQL数据库的种类 21
2.7  本章小结 22
第3章  MongoDB介绍 23
3.1  历史 23
3.2  MongoDB设计原则 24
3.2.1  高速、可扩展性与敏捷性 24
3.2.2  非关系型方法 24
3.2.3  基于JSON的文档存储 25
3.2.4  性能与功能对比 25
3.2.5  随处都能运行数据库 25
3.3  与SQL的对比 26
3.4  本章小结 26
第4章  MongoDB数据模型 27
4.1  数据模型 27
4.1.1  JSON和BSON 28
4.1.2  标识符(_id) 29
4.1.3  固定集合 30
4.2  多态模式 30
4.2.1  面向对象编程 30
4.2.2  模式演化 31
4.3  本章小结 32
第5章  MongoDB-安装与配置 33
5.1  选择你的版本 33
5.2  在Linux上安装MongoDB 33
5.2.1  使用仓储进行安装 34
5.2.2  手动安装 34
5.3  在Windows上安装
MongoDB 35
5.4  运行MongoDB 35
5.4.1  先决条件 35
5.4.2  开启服务 36
5.5  验证安装结果 36
5.6  MongoDB Shell 36
5.7  保障部署安全 37
5.7.1  使用身份验证和授权 37
5.7.2  控制网络访问 42
5.8  使用MongoDB云管理器进行
配置 46
5.9  本章小结 50
第6章  使用MongoDB Shell 51
6.1  基本查询 51
6.1.1  创建和插入 56
6.1.2  显式创建集合 58
6.1.3  使用循环插入文档 58
6.1.4  通过显式指定_id进行插入 59
6.1.5  更新 59
6.1.6  删除 61
6.1.7  读取 62
6.1.8  使用索引 68
6.2  进阶介绍 78
6.2.1  使用条件操作符 78
6.2.2  正则表达式 80
6.2.3  MapReduce 81
6.2.4  aggregate() 83
6.3  设计应用程序的数据模型 84
6.3.1  关系型数据模型与标准化 84
6.3.2  MongoDB文档数据模型
方法 86
6.4  本章小结 93
第7章  MongoDB架构 95
7.1  核心程序 95
7.1.1  mongod 95
7.1.2  mongo 95
7.1.3  mongos 96
7.2  MongoDB工具 96
7.3  独立部署 96
7.4  复制 97
7.4.1  主/从复制 97
7.4.2  副本集 98
7.4.3  实现带有副本集的高级
群集 115
7.5  分片 124
7.5.1  分片组件 126
7.5.2  数据分发过程 127
7.5.3  数据平衡过程 130
7.5.4  操作 133
7.5.5  实现分片 134
7.5.6  控制集合分布
(基于标签分片) 142
7.5.7  在将数据导入到分片环境时
要记住的要点 152
7.5.8  监控分片 153
7.5.9  监控配置服务器 153
7.6  生产环境群集架构 153
7.6.1  场景1 154
7.6.2  场景2 155
7.6.3  场景3 156
7.6.4  场景4 157
7.7  本章小结 158
第8章  MongoDB阐释 159
8.1  数据存储引擎 159
8.2  (与MMAPv1相关的)数据
文件 161
8.3  (与WiredTiger相关的)数据
文件 168
8.4  读取和写入 170
8.5  使用日志时如何写入数据 172
8.6  GridFS——MongoDB文件
系统 176
8.6.1  GridFS的基本原理 177
8.6.2  GridFS的底层机制 177
8.6.3  使用GridFS 179
8.7  索引 182
8.7.1  索引类型 183
8.7.2  行为和限制 188
8.8  本章小结 189
第9章  管理MongoDB 191
9.1  管理工具 191
9.1.1  mongo 191
9.1.2  第三方管理工具 191
9.2  备份和恢复 191
9.2.1  数据文件备份 192
9.2.2  mongodump和
mongorestore 192
9.2.3  fsync和锁 196
9.2.4  从备份 198
9.3  导入和导出 198
9.3.1  mongoimport 198
9.3.2  mongoexport 199
9.4  管理服务器 199
9.4.1  启动一台服务器 199
9.4.2  停止服务器运行 200
9.4.3  浏览日志文件 200
9.4.4  服务器状态 201
9.4.5  识别和修复MongoDB 203
9.4.6  识别和修复集合级别的数据 204
9.5  监控MongoDB 205
9.5.1  mongostat 205
9.5.2  mongod网络接口 206
9.5.3  第三方插件 206
9.5.4  MongoDB云管理器 206
9.6  本章小结 212
第10章  MongoDB用例 213
10.1  用例1——性能监控 213
10.1.1  模式设计 213
10.1.2  操作 214
10.1.3  分片 218
10.1.4  管理数据 219
10.2  用例2——社交网络 220
10.2.1  模式设计 220
10.2.2  操作 222
10.2.3  分片 225
10.3  本章小结 225
第11章  MongoDB使用限制 227
11.1  MongoDB的空间过大(对于MMAPv1而言) 227
11.2  内存问题(对于MMAPv1而言) 228
11.3  32位与64位对比 228
11.4  BSON文档 228
11.5  命名空间使用限制 229
11.6  索引使用限制 229
11.7  固定集合使用限制——固定集合中文档的最大数量 229
11.8  分片使用限制 229
11.8.1  及早分片以避免出现问题 230
11.8.2  不能更新分片键 230
11.8.3  分片集合使用限制 230
11.8.4  选择合适的分片键 230
11.9  安全性限制 230
11.9.1  默认情况下没有身份验证 230
11.9.2  与MongoDB的交互通信没有被加密 231
11.10  写入和读取限制 231
11.10.1  大小写敏感的查询 231
11.10.2  类型敏感的字段 231
11.10.3  没有联结 231
11.10.4  事务 231
11.11  MongoDB不适用的范围 232
11.12  本章小结 232
第12章  MongoDB的最佳实践 233
12.1  部署 233
12.1.1  MongoDB网站的硬件
配置建议 234
12.1.2  要注意的一些要点 235
12.2  编码 235
12.3  应用程序响应时间优化 238
12.4  数据安全性 238
12.5  管理 239
12.6  复制延迟 239
12.7  分片 240
12.8  监控 240
12.9  本章小结 241
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>MongoDB实战 架构、开发与管理
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>MongoDB大数据处理权威指南（第3版）
第1章  MongoDB简介 1
1.1  了解MongoDB哲学 1
1.1.1  使用正确的工具处理正确的工作 1
1.1.2  天然缺少对事务的支持 3
1.1.3  JSON和MongoDB 3
1.1.4  采用非关系方式 5
1.1.5  选择性能还是特性 6
1.1.6  在任何地方均可运行数据库 6
1.2  将所有组合在一起 7
1.2.1  生成或创建键 7
1.2.2  使用键和值 8
1.2.3  实现集合 8
1.2.4  了解数据库 9
1.3  了解特性列表 9
1.3.1  WiredTiger 9
1.3.2  使用面向文档存储(BSON) 9
1.3.3  支持动态查询 10
1.3.4  为文档创建索引 11
1.3.5  使用地理空间索引 11
1.3.6  分析查询 11
1.3.7  就地更新信息(仅用于内存映射
的数据库) 12
1.3.8  存储二进制数据 12
1.3.9  复制数据 12
1.3.10  实施分片 13
1.3.11  使用map和reduce函数 13
1.3.12  聚集框架 14
1.4  获取帮助 14
1.4.1  访问网站 14
1.4.2  剪切和粘贴MongoDB代码 14
1.4.3  在Google小组中寻找解决方案 14
1.4.4  在Stack Overflow中寻找解
决方案 14
1.4.5  利用JIRA跟踪系统 15
1.4.6  与MongoDB开发者沟通 15
1.5  小结 15
第2章  安装MongoDB 17
2.1  选择版本 17
2.2  在系统中安装MongoDB 18
2.2.1  在Linux中安装MongoDB 18
2.2.2  在Windows中安装MongoDB 19
2.3  运行MongoDB 20
2.3.1  先决条件 20
2.3.2  研究安装目录布局 20
2.3.3  使用MongoDB shell 21
2.4  添加额外的驱动 22
2.4.1  安装PHP驱动 22
2.4.2  确认PHP安装正确 25
2.4.3  安装Python驱动 27
2.4.4  确认PyMongo安装正确 28
2.5  小结 29
第3章  数据模型 31
3.1  设计数据库 31
3.1.1  集合的更多细节 32
3.1.2  使用文档 33
3.1.3  在文档中内嵌或引用信息 34
3.1.4  创建_id字段 35
3.2  构建索引 36
3.3  使用地理空间索引 36
3.4  可插拔的存储引擎 41
3.5  在真实世界中使用MongoDB 42
3.6  小结 42
第4章  使用数据 43
4.1  浏览数据库 43
4.2  在集合中插入数据 44
4.3  查询数据 45
4.3.1  使用点号 47
4.3.2  使用函数sort、limit和skip 48
4.3.3  使用固定集合、自然顺
序和$natural 48
4.3.4  获取单个文档 50
4.3.5  使用聚集命令 50
4.3.6  使用条件操作符 52
4.3.7  使用正则表达式 59
4.4  更新数据 60
4.4.1  使用update()更新 60
4.4.2  使用save()命令实现upsert 60
4.4.3  自动更新信息 61
4.4.4  从数组中删除元素 64
4.4.5  指定匹配数组的位置 65
4.4.6  原子操作 65
4.4.7  以原子方式修改和返回文档 67
4.5  批处理数据 67
4.5.1  执行批处理 68
4.5.2  评估输出 69
4.6  重命名集合 70
4.7  删除数据 70
4.8  引用数据库 71
4.8.1  手动引用数据 71
4.8.2  使用DBRef引用数据 72
4.9  使用与索引相关的函数 74
4.10  小结 77
第5章  GridFS 79
5.1  背景 79
5.2  使用GridFS 80
5.3  开始使用命令行工具 80
5.3.1  使用_id键 81
5.3.2  使用文件名 81
5.3.3  文件的长度 82
5.3.4  使用块大小 82
5.3.5  跟踪上传日期 82
5.3.6  生成文件的哈希值 83
5.4  查看MongoDB中的数据 83
5.4.1  使用搜索命令 84
5.4.2  删除 84
5.4.3  从MongoDB中获取文件 85
5.4.4  mongofiles命令小结 85
5.5  使用Python 85
5.5.1  连接数据库 86
5.5.2  访问单词 87
5.6  在MongoDB中添加文件 87
5.7  从GridFS中读取文件 87
5.8  删除文件 88
5.9  小结 88
第6章  PHP和MongoDB 89
6.1  比较MongoDB和PHP中
的文档 89
6.2  MongoDB类 90
6.2.1  连接和断开连接 91
6.2.2  插入数据 92
6.3  查询数据 94
6.3.1  返回单个文档 94
6.3.2  列出所有文档 95
6.4  使用查询操作符 96
6.4.1  查询特定信息 96
6.4.2  排序、限制和忽略数据项 97
6.4.3  统计匹配结果的数目 98
6.4.4  使用聚集框架对数组分组 98
6.4.5  使用hint()函数指定索引 99
6.4.6  使用条件操作符重新定义查询 100
6.4.7  判断某个字段是否有值 105
6.4.8  正则表达式 106
6.5  使用PHP修改数据 106
6.5.1  使用update()函数更新数据 107
6.5.2  节省更新操作的时间 108
6.5.3  使用save()函数更新数据 114
6.5.4  以原子方式修改文档 115
6.6  批处理数据 116
6.6.1  执行批处理 117
6.6.2  评估输出 118
6.7  删除数据 118
6.8  DBRef 120
6.9  GridFS和PHP驱动 122
6.9.1  存储文件 122
6.9.2  在已存储的文件中添加
元数据 123
6.9.3  获取文件 123
6.9.4  删除数据 124
6.10  小结 124
第7章  Python和MongoDB 125
7.1  在Python中使用文档 125
7.2  使用PyMongo模块 126
7.3  连接和断开 126
7.4  插入数据 126
7.5  搜索数据 128
7.5.1  搜索单个文档 128
7.5.2  搜索多个文档 129
7.5.3  使用点操作符 129
7.5.4  返回字段 130
7.5.5  使用sort()、limit()和skip()简化
查询 130
7.5.6  聚集查询 132
7.5.7  使用hint()指定索引 134
7.5.8  使用条件操作符重定义查询 135
7.5.9  使用正则表达式执行搜索 140
7.6  修改数据 140
7.6.1  更新数据 141
7.6.2  修改操作符 141
7.6.3  用replace_one()替代文档 145
7.6.4  以原子方式修改文档 146
7.6.5  使用参数 146
7.7  批处理数据 147
7.8  删除数据 148
7.9  在两个文档之间创建链接 149
7.10  小结 152
第8章  高级查询 153
8.1  文本搜索 153
8.1.1  文本搜索的代价和限制 154
8.1.2  使用文本搜索 154
8.1.3  其他语言中的文本索引 158
8.1.4  文本索引的复合索引 159
8.2  聚集框架 160
8.2.1  $group 161
8.2.2  $limit 163
8.2.3  $match 164
8.2.4  $sort 165
8.2.5  $unwind 166
8.2.6  $skip 168
8.2.7  $out 169
8.2.8  $lookup 170
8.3  MapReduce 171
8.3.1  MapReduce的工作方式 171
8.3.2  设置测试文档 172
8.3.3  使用map函数 172
8.3.4  高级MapReduce 174
8.3.5  调试MapReduce 176
8.4  小结 177
第9章  数据库管理 179
9.1  使用管理工具 179
9.1.1  mongo——MongoDB控制台 179
9.1.2  使用第三方管理工具 180
9.2  备份MongoDB服务器 180
9.2.1  创建第一个备份 180
9.2.2  备份单个数据库 182
9.2.3  备份单个集合 182
9.3  深入学习备份 183
9.4  恢复单个数据库或集合 183
9.4.1  恢复单个数据库 184
9.4.2  恢复单个集合 184
9.5  自动备份 185
9.5.1  使用本地数据存储 185
9.5.2  使用远端数据存储(基于云) 187
9.6  备份大数据库 188
9.6.1  使用隐藏的辅助服务器
备份数据 188
9.6.2  使用日志文件系统创建快照 188
9.6.3  使用卷管理器时的磁盘布局 190
9.7  将数据导入MongoDB 191
9.8  从MongoDB导出数据 192
9.9  通过限制对MongoDB服务器
的访问保护数据安全 193
9.10  使用身份验证保护服务器 193
9.10.1  添加admin用户 193
9.10.2  启用身份验证 194
9.10.3  在mongo控制台中执行
身份验证 194
9.10.4  MongoDB用户角色 196
9.10.5  修改用户凭据 197
9.10.6  添加只读用户 198
9.10.7  删除用户 198
9.10.8  在PHP应用中进行连接
身份验证 198
9.11  管理服务器 199
9.11.1  启动服务器 199
9.11.2  获得服务器版本 201
9.11.3  获得服务器状态 201
9.11.4  关闭服务器 203
9.12  使用MongoDB日志文件 204
9.13  验证和修复数据 204
9.13.1  修复服务器 205
9.13.2  验证单个集合 205
9.13.3  修复集合验证错误 206
9.13.4  修复集合的数据文件 207
9.13.5  压缩集合的数据文件 207
9.14  升级MongoDB 208
9.15  监控MongoDB 208
9.16  使用MongoDB云管理器 209
9.17  小结 210
第10章  优化 211
10.1  优化服务器硬件以提高性能 211
10.2  理解MongoDB的存储引擎 211
10.3  了解MMAPv1中MongoDB
使用内存的方式 212
10.4  理解WiredTiger下MongoDB
的内存使用方式 212
10.4.1  WiredTiger中的压缩 213
10.4.2  选择正确的数据库服务
器硬件 213
10.5  评估查询性能 214
10.5.1  MongoDB分析器 214
10.5.2  使用explain()分析特定的
查询 217
10.5.3  使用分析器和explain()优化
查询 219
10.6  管理索引 224
10.6.1  显示索引 224
10.6.2  创建简单的索引 225
10.6.3  创建复合索引 226
10.7  Jesse Jiryu Davis的三步
混合索引 226
10.7.1  设置 227
10.7.2  范围查询 227
10.7.3  相等和范围查询 228
10.7.4  题外话：MongoDB选择
索引的方式 230
10.7.5  相等、范围查询和排序 231
10.7.6  最后的方法 233
10.8  指定索引选项 234
10.8.1  使用{background: true}在
后台创建索引 234
10.8.2  使用{unique: true}创建唯一
键索引 234
10.8.3  使用{sparse: true}创建
稀疏索引 235
10.8.4  创建部分索引 235
10.8.5  TTL索引 235
10.8.6  文本索引 236
10.8.7  删除索引 236
10.8.8  重建集合索引 237
10.9  通过hint()强制使用特定
的索引 237
10.10  使用索引过滤器 238
10.11  优化小对象的存储 240
10.12  小结 241
第11章  复制 243
11.1  MongoDB复制的目标 243
11.1.1  改善可扩展性 243
11.1.2  改善持久性/可靠性 244
11.1.3  提供隔离性 244
11.2  复制基础 244
11.2.1  主服务器的定义 245
11.2.2  辅助服务器的定义 245
11.2.3  仲裁服务器的定义 246
11.3  深入学习oplog 246
11.4  实现复制集 247
11.4.1  创建复制集 248
11.4.2  启动复制集成员 249
11.4.3  向复制集中添加服务器 250
11.4.4  添加仲裁服务器 255
11.4.5  复制集链 256

11.4.6  管理复制集 256
11.4.7  为复制集成员配置选项 261
11.4.8  从应用连接到复制集 262
11.5  读顾虑 266
11.6  小结 266
第12章  分片 267
12.1  了解分片的需求 267
12.2  对数据进行水平和垂直分区 268
12.2.1  对数据进行垂直分区 268
12.2.2  对数据进行水平分区 268
12.3  分析一个简单的分片场景 269
12.4  使用MongoDB实现分片 270
12.4.1  创建分片设置 271
12.4.2  确定连接的方式 277
12.4.3  列出分片服务器的状态 278
12.4.4  使用复制集实现分片 279
12.5  均衡器 279
12.6  哈希片键 281
12.7  标签分片 282
12.8  添加更多配置服务器 284
12.9  小结 285
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>MongoDB大数据处理权威指南（第3版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node应用程序构建
目　录
第一部分　Node．js、Backbone．js和MongoDB简介
第1章　介绍与总览　2
1．1　打造一个社交网络　3
1．2　模型-视图-控制器(MVC)　3
1．3　纯JavaScript　4
第2章　Node．js　5
2．1　安装Node．js　5
2．2　Express　6
模板　8
2．3　事件　10
2．4　Socket．io　12
2．5　模块与CommonJS　14
第3章　Backbone．js　16
3．1　模型　16
3．2　视图　17
3．3　集合　20
3．4　路由和历史　21
第4章　MongoDB　23
4．1　数据访问　23
4．1．1　写入　24
4．1．2　查询　27
4．1．3　索引　28
4．1．4　映射规约　29
4．2　携手Node．js　31
4．3　并发访问　31
第二部分　建立社交网络
第5章　创建项目　36
5．1　目录结构　36
文件列表　37
5．2　包定义　38
5．3　网站服务器　39
5．3．1　索引模板　41
5．3．2　应用程序JavaScript　42
5．3．3　应用程序类　43
5．3．4　索引视图对象　43
第6章　认证　45
6．1　账户　45
6．2　路由　48
6．2．1　身份验证　49
6．2．2　身份验证处理程序　50
6．3　注册　51
6．3．1　注册模版　51
6．3．2　注册处理程序　53
6．4　登录　54
6．4．1　登录模板　54
6．4．2　登录处理程序　56
6．5　忘记口令　57
6．5．1　忘记口令模板　57
6．5．2　忘记口令处理程序　58
6．6　重置口令　60
6．6．1　重置口令模板　60
6．6．2　重置口令处理函数　61
6．7　整合　62
Node．js　62
第7章　用户界面　65
7．1　账户明细　65
7．1．1　账户明细模板　66
7．1．2　账户明细处理程序　67
7．2　联系人列表　68
7．3　活动流　69
7．3．1　活动流模板　69
7．3．2　活动流处理程序　72
7．4　数据模型　73
7．5　整合　76
7．5．1　Backbone　76
7．5．2　Node．js　78
第8章　交朋友　82
8．1　联系人列表　82
8．1．1　联系人列表模板　82
8．1．2　联系人列表处理程序　86
8．2　添加联系人　87
8．2．1　添加联系人模板　87
8．2．2　添加联系人处理程序　89
8．3　删除联系人　91
8．3．1　删除联系人模板　91
8．3．2　删除联系人处理程序　92
8．4　评论　93
8．4．1　评论模板　94
8．4．2　评论处理程序　96
8．5　整合　97
8．5．1　Backbone　97
8．5．2　Node．js　99
第9章　聊天　109
9．1　重构　109
9．2　连接到聊天服务器　110
9．2．1　Backbone　111
9．2．2　Node．js　113
9．3　发送和接收聊天消息　114
9．3．1　Backbone　116
9．3．2　Node．js　121
9．4　整合　121
9．4．1　Backbone　121
9．4．2　Node．js　125
第10章　实时互动　134
10．1　增加自定义事件　134
10．1．1　触发事件　135
10．1．2　添加监听器　135
10．2　联系人登录通知　137
10．2．1　Backbone．js　137
10．2．2　Node．js　139
10．3　状态更新　141
10．3．1　Backbone．js　141
10．3．2　Node．js　143
10．4　整合　144
10．4．1　Backbone．js　144
10．4．2　Node．js　155
10．4．3　静态文件　166
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node应用程序构建
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>MongoDB管理与开发精要
前言
第一部分   基   础   篇
第1章   认识MongoDB / 2
1.1   NoSQL简介 / 2
1.1.1   产生背景 / 2
1.1.2   NoSQL的种类及其特性 / 4
1.1.3   NoSQL特点 / 8
1.1.4   发展现状 / 8
1.2   初识MongoDB / 9
1.2.1   特点及功能 / 10
1.2.2   适用场合 / 11
1.3   MongoDB实际应用案例 / 12
1.3.1   国内案例 / 12
1.3.2   国外案例 / 12
1.4   本章小结 / 13
第2章   快速入门 / 14
2.1   体系结构 / 14
2.1.1   数据逻辑结构 / 14
2.1.2   数据存储结构 / 15
2.1.3   日志系统 / 17
2.1.4   元数据的存储 / 18
2.1.5   数据类型 / 19
2.2   MongoDB的安装和配置 / 22
2.2.1   在Windows平台下的安装和配置 / 22
2.2.2   在Linux平台下的安装和配置 / 23
2.3   启动数据库 / 25
2.3.1   命令行方式 / 25
2.3.2   配置文件方式 / 25
2.3.3   Daemon方式 / 26
2.3.4   mongod参数方式 / 26
2.4   停止数据库 / 27
2.4.1   Ctrl+C组合键 / 27
2.4.2   shutdownServer()指令 / 28
2.4.3   UNIX系统指令 / 28
2.5   操作数据库 / 29
2.5.1   连接数据库 / 29
2.5.2   插入记录 / 29
2.5.3   查询记录 / 31
2.5.4   修改记录 / 34
2.5.5   删除记录 / 34
2.6   常用GUI管理工具 / 34
2.6.1   MongoVUE / 34
2.6.2   RockMongo / 35
2.6.3   MongoHub / 36
2.7   本章小结 / 37
第二部分   高   级   篇
第3章   高级查询 / 40
3.1   查询操作符 / 40
3.2   查询语法 / 46
3.2.1   数组内容的查询 / 47
3.2.2   内嵌文档的查询 / 47
3.2.3   正则表达式匹配 / 48
3.2.4   $where查询 / 48
3.3   联合查询 / 49
3.3.1   简单手工关联 / 49
3.3.2   DBRef方式关联 / 50
3.4   游标和存储过程 / 51
3.4.1   游标 / 51
3.4.2   存储过程 / 52
3.5   本章小结 / 53
第4章   高级更新 / 55
4.1   数据更新命令详解 / 55
4.1.1   update命令 / 55
4.1.2   save命令 / 56
4.2   数据更新操作符 / 57
4.3   本章小结 / 62
第5章   高级特性 / 63
5.1   Capped Collection集合 / 63
5.1.1   创建Capped Collection / 63
5.1.2   Capped Collection的用途 / 64
5.1.3   注意事项 / 64
5.2   GridFS规范 / 65
5.2.1   如何实现海量存储 / 65
5.2.2   命令行工具 / 66
5.3   MapReduce编程模型 / 68
5.3.1   Map进行分组 / 69
5.3.2   Reduce聚合计算 / 69
5.3.3   Result获取结果 / 70
5.3.4   Finalize格式化输出 / 70
5.3.5   Options定制输出 / 71
5.4   本章小结 / 72
第三部分   管   理   篇
第6章   管理工具集 / 74
6.1   数据迁移 / 74
6.1.1   导出工具mongoexport / 75
6.1.2   导出工具mongodump / 78
6.1.3   导入工具mongoimport / 79
6.2   数据的备份和恢复 / 81
6.2.1   备份工具mongodump / 81
6.2.2   恢复工具mongorestore / 84
6.3   命令行操作 / 86
6.3.1   通过eval参数执行指定语句 / 86
6.3.2   执行指定文件中的内容 / 87
6.4   本章小结 / 88
第7章   管理命令 / 89
7.1   克隆collection / 90
7.1.1   远程克隆collection / 90
7.1.2   本地克隆collection / 94
7.2   复制数据库 / 94
7.2.1   远程复制数据库 / 94
7.2.2   本地复制数据库 / 96
7.3   刷新磁盘 / 97
7.4   捕获异常 / 98
7.4.1   返回异常信息 / 98
7.4.2   阻塞客户端 / 99
7.5   进程控制 / 99
7.5.1   查看活动进程 / 99
7.5.2   结束进程 / 100
7.6   验证collection的有效性 / 100
7.7   数据压缩 / 101
7.8   本章小结 / 102
第8章   访问控制 / 103
8.1   限制特定IP地址访问 / 104
8.2   设置监听端口 / 104
8.3   使用用户名和口令登录 / 105
8.3.1   建立系统root用户 / 107
8.3.2   建立指定权限用户 / 108
8.3.3   删除指定用户 / 109
8.4   本章小结 / 110
第四部分   性   能   篇
第9章   索引及优化 / 112
9.1   MongoDB索引概述 / 112
9.2   索引操作 / 113
9.2.1   基础索引 / 113
9.2.2   静默方式创建索引 / 115
9.2.3   文档索引 / 115
9.2.4   组合索引 / 116
9.2.5   唯一索引 / 116
9.2.6   强制使用索引 / 117
9.2.7   删除索引 / 119
9.2.8   重建索引 / 119
9.2.9   explain查看执行计划 / 119
9.3   优化器Profiler / 121
9.3.1   开启Profiler功能 / 121
9.3.2   查询Profiler记录 / 122
9.4   性能优化概述 / 123
9.4.1   性能优化的原则 / 123
9.4.2   影响性能的因素 / 124
9.5   常用的优化方案 / 124
9.5.1   创建索引 / 124
9.5.2   限定返回结果条数 / 125
9.5.3   只查询用到的字段 / 125
9.5.4   采用Capped Collection / 126
9.5.5   采用Server Side Code Execution命令集 / 126
9.5.6   使用hint / 127
9.5.7   采用Profiler / 127
9.6   本章小结 / 128
第10章   性能监控 / 129
10.1   mongosniff工具 / 129
10.2   mongostat工具 / 131
10.3   db.serverStatus命令 / 132
10.4   db.stats命令 / 134
10.5   HTTP监控接口 / 135
10.6   本章小结 / 136
第五部分   架   构   篇
第11章   复制集 / 138
11.1   Replica Sets架构 / 138
11.2   部署Replica Sets / 139
11.3   主从操作日志 / 144
11.4   主从配置信息 / 146
11.5   管理Replica Sets / 147
11.5.1   主从切换 / 147
11.5.2   读写分离 / 149
11.5.3   故障转移 / 151
11.5.4   增减节点 / 153
11.6   本章小结 / 160
第12章   分片 / 161
12.1   Sharding简介 / 161
12.1.1   Sharding的特点 / 161
12.1.2   Sharding架构 / 162
12.2   构建一个简单的Sharding Cluster / 163
12.2.1   启动Shard Server / 163
12.2.2   启动Config Server / 164
12.2.3   启动Route Process / 164
12.2.4   配置Sharding / 164
12.2.5   验证Sharding / 165
12.3   维护Sharding / 167
12.3.1   列出所有的Shard Server / 168
12.3.2   查看Sharding信息 / 168
12.3.3   判断是否是Sharding / 169
12.3.4   对现有的表执行Sharding / 169
12.3.5   新增Shard Server / 171
12.3.6   移除Shard Server / 172
12.4   本章小结 / 175
第13章   Replica Sets + Sharding方案 / 176
13.1   Replica Sets+Sharding架构 / 176
13.2   搭建一个高可用架构 / 177
13.2.1   创建数据目录 / 177
13.2.2   配置Replica Sets / 178
13.2.3   配置3台Config Server / 181
13.2.4   配置3台Route Process / 181
13.2.5   配置Shard Cluster / 181
13.2.6   验证Sharding / 182
13.3   本章小结 / 183
第六部分   开   发   篇
第14章   C#开发接口 / 186
14.1   C#快速入门 / 186
14.1.1   下载驱动和开发环境 / 186
14.1.2   访问控制 / 188
14.1.3   C#对数据库的基础操作 / 189
14.2   C#驱动一致性 / 194
14.3   C#常用操作 / 195
14.3.1   对MongoDB实例的操作 / 195
14.3.2   对用户的操作 / 198
14.3.3   对collection的操作 / 202
14.3.4   对索引的操作 / 208
14.4   C#高级查询 / 211
14.4.1   判断列名是否存在 / 211
14.4.2   比较运算符 / 213
14.4.3   逻辑运算符 / 221
14.4.4   正则表达式查询 / 223
14.4.5   跳过查询 / 224
14.5   用C#操作GridFS / 225
14.5.1   插入数据 / 225
14.5.2   查询数据 / 226
14.5.3   读取并保存数据 / 227
14.5.4   删除数据 / 228
14.6   本章小结 / 229
第15章   Java开发接口 / 230
15.1   Java快速入门 / 230
15.1.1   下载驱动和开发环境 / 230
15.1.2   访问控制 / 232
15.1.3   Java对数据库的基础操作 / 233
15.2   Java驱动一致性 / 237
15.3   Java常用操作 / 238
15.3.1   对MongoDB实例的操作 / 238
15.3.2   对用户的操作 / 241
15.3.3   对collection的操作 / 243
15.3.4   对索引的操作 / 250
15.4   Java高级查询 / 253
15.4.1   通过游标获取所有document / 253
15.4.2   比较运算符 / 254
15.4.3   逻辑运算符 / 263
15.4.4   正则表达式查询 / 264
15.4.5   跳过查询 / 265
15.5   用Java操作GridFS / 266
15.5.1   插入数据 / 266
15.5.2   查询数据 / 267
15.5.3   读取并保存数据 / 268
15.5.4   删除数据 / 269
15.6   本章小结 / 270
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>MongoDB管理与开发精要
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>はじめてのMongoDB
第1章 「MongoDB」とは
第2章 「MongoDB」のインストール
第3章 「MongoDB」でデータを操作してみる
第4章 「MongoDB」に対する、より「高度」な「操作」
第5章 「MongoDB」を使ったアプリケーション開発
附録 その他のトピック
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>はじめてのMongoDB
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node.js+MongoDB+Angular Web开发
引 言  1
第1 部分 入 门
第1 章 介绍Node.js-to-Angular 套件  9
1.1 了解基本的Web 开发框架  9
1.1.1 用户  10
1.1.2 浏览器  10
1.1.3 Web 服务器  12
1.1.4 后端服务  12
1.2 了解Node.js-to-Angular 套件组件  13
1.2.1 Node.js  13
1.2.2 MongoDB  14
1.2.3 Express  15
1.2.4 Angular  15
1.3 小结  16
1.4 下一章  16
第2 章 JavaScript 基础  17
2.1 定义变量  17
2.2 了解JavaScript 数据类型  18
2.3 使用运算符  19
2.3.1 算术运算符  19
2.3.2 赋值运算符  20
2.3.3 运用比较和条件运算符  20
2.4 实现循环  22
2.4.1 while 循环  23
2.4.2 do/while 循环  23
2.4.3 for 循环  23
2.4.4 for/in 循环  24
2.4.5 中断循环  25
2.5 创建函数  26
2.5.1 定义函数  26
2.5.2 将变量传递给函数  26
2.5.3 从函数返回值  27
2.5.4 使用匿名函数  27
2.6 理解变量作用域  28
2.7 使用JavaScript 对象  28
2.7.1 使用对象语法  29
2.7.2 创建自定义对象  30
2.7.3 使用原型对象模式  30
2.8 处理字符串  31
2.8.1 合并字符串  32
2.8.2 在字符串中搜索子串  33
2.8.3 在一个字符串中替换单词  33
2.8.4 将字符串分割成数组  33
2.9 使用数组  33
2.9.1 合并数组  35
2.9.2 遍历数组  35
2.9.3 将数组转换为字符串  35
2.9.4 检查数组是否包含某个条目  36
2.9.5 在数组中添加条目和删除条目  36
2.10 添加错误处理  36
2.10.1 try/catch 块  37
2.10.2 抛出你自己的错误  37
2.10.3 使用finally  38
2.11 小结  38
2.12 下一章  38
第2 部分 学习Node.js
第3 章 开始使用Node.js  41
3.1 了解Node.js  41
3.1.1 谁在使用Node.js  41
3.1.2 Node.js 的用途  42
3.1.3 Node.js 包含的内容  42
3.2 Node.js 安装  44
3.2.1 纵观Node.js 安装位置  44
3.2.2 验证Node.js 可执行文件  44
3.2.3 选择Node.js IDE  45
3.3 使用Node 包  45
3.3.1 什么是Node 封装模块  45
3.3.2 了解Node 包注册表  46
3.3.3 使用Node 包管理器  46
3.3.4 搜索Node 封装模块  47
3.3.5 安装Node 封装模块  48
3.3.6 使用package.json  49
3.4 创建Node.js 应用程序  50
3.4.1 创建Node.js 模块封装  51
3.4.2 将一个Node.js 封装模块发布到NPM 注册表  52
3.4.3 在Node.js 应用程序中使用Node.js 封装模块  54
3.5 将数据写入控制台  55
3.6 小结  56
3.7 下一章  56
第4 章 在Node.js 中使用事件、监听器、定时器和回调  57
4.1 了解Node.js 事件模型  57
4.1.1 比较事件回调和线程模型  57
4.1.2 在Node.js 中阻塞I/O  58
4.1.3 会话示例  60
4.2 将工作添加到事件队列  60
4.2.1 实现定时器  61
4.2.2 使用nextTick 来调度工作  64
4.2.3 实现事件发射器和监听器  65
4.3 实现回调  68
4.3.1 向回调函数传递额外的参数  69
4.3.2 在回调中实现闭包  70
4.3.3 链式回调  71
4.4 小结  72
4.5 下一章  72
第5 章 在Node.js 中处理数据I/O  73
5.1 处理JSON  73
5.1.1 把JSON 转换成JavaScript 对象  73
5.1.2 把JavaScript 对象转换为JSON  74
5.2 使用Buffer 模块缓冲数据  74
5.2.1 了解缓冲数据  75
5.2.2 创建缓冲区  75
5.2.3 写入缓冲区  76
5.2.4 从缓冲区读取  77
5.2.5 确定缓冲区的长度  78
5.2.6 复制缓冲区  78
5.2.7 对缓冲区切片  80
5.2.8 拼接缓冲区  80
5.3 使用Stream 模块来传送数据  81
5.3.1 Readable 流  82
5.3.2 Writable 流  84
5.3.3 Duplex 流  86
5.3.4 Transform 流  88
5.3.5 把Readable 流用管道输送到Writable 流  89
5.4 用Zlib 压缩与解压缩数据  91
5.4.1 压缩和解压缩缓冲区  91
5.4.2 压缩/解压缩流  93
5.5 小结  93
5.6 下一章  93
第6 章 从Node.js 访问文件系统  95
6.1 同步和异步文件系统调用  95
6.2 打开和关闭文件  96
6.3 写入文件  97
6.3.1 简单文件写入  97
6.3.2 同步文件写入  98
6.3.3 异步写入文件  99
6.3.4 流式文件写入  101
6.4 读取文件  102
6.4.1 简单文件读取  102
6.4.2 同步文件读取  103
6.4.3 异步文件读取  104
6.4.4 流式文件读取  105
6.5 其他文件系统任务  106
6.5.1 验证路径的存在性  106
6.5.2 获取文件信息  107
6.5.3 列出文件  108
6.5.4 删除文件  110
6.5.5 截断文件  110
6.5.6 建立和删除目录  111
6.5.7 重命名文件和目录  112
6.5.8 监视文件更改  112
6.6 小结  113
6.7 下一章  113
第7 章 在Node.js 中实现HTTP 服务  115
7.1 处理URL  115
7.1.1 了解URL 对象  116
7.1.2 解析URL 组件  117
7.2 处理查询字符串和表单参数  117
7.3 了解请求、响应和服务器对象  118
7.3.1 http.ClientRequest 对象  118
7.3.2 http.ServerResponse 对象  121
7.3.3 http.IncomingMessage 对象  122
7.3.4 http.Server 对象  122
7.4 在Node.js 中实现HTTP 客户端和服务器  124
7.4.1 提供静态文件服务  124
7.4.2 实现动态的GET 服务器  126
7.4.3 实现POST 服务器  128
7.4.4 与外部源交互  131
7.5 实现HTTPS 服务器和客户端  133
7.5.1 创建HTTPS 客户端  134
7.5.2 创建HTTPS 服务器  135
7.6 小结  136
7.7 下一章  136
第8 章 在Node.js 中实现套接字服务  137
8.1 了解网络套接字  137
8.2 了解TCP 服务器和Socket 对象  138
8.2.1 net.Socket 对象  138
8.2.2 net.Server 对象  141
8.3 实现TCP 套接字服务器和客户端  144
8.3.1 实现TCP 套接字客户端  144
8.3.2 实现TCP 套接字服务器  146
8.4 实现TLS 服务器和客户端  149
8.4.1 创建TLS 套接字客户端  150
8.4.2 创建TLS 套接字服务器  151
8.5 小结  153
8.6 下一章  153
第9 章 在Node.js 中使用多处理器扩展应用程序  155
9.1 了解process 模块  155
9.1.1 了解进程I/O 管道  155
9.1.2 了解进程的信号  156
9.1.3 使用process 模块控制进程执行  156
9.1.4 从process 模块获取信息  157
9.2 实现子进程  159
9.2.1 了解ChildProcess 对象  159
9.2.2 使用exec()在另一个进程上执行一个系统命令  161
9.2.3 使用execFile()在另一个进程上执行一个可执行文件  162
9.2.4 使用spawn()在另一个Node.js 实例中产生一个进程  163
9.2.5 实现子派生  165
9.3 实现进程集群  167
9.3.1 使用cluster 模块  168
9.3.2 了解Worker 对象  169
9.3.3 实现一个HTTP 集群  170
9.4 小结  172
9.5 下一章  172
第10 章 使用其他Node.js 模块  173
10.1 使用os 模块  173
10.2 使用util 模块  175
10.2.1 格式化字符串  175
10.2.2 检查对象类型  176
10.2.3 将JavaScript 对象转换为字符串  176
10.2.4 从其他对象继承功能  177
10.3 使用dns 模块  178
10.4 使用crypto 模块  180
10.5 其他Node 模块和对象  181
10.6 小结  182
10.7 下一章  182
第3 部分 学习MongoDB
第11 章 了解NoSQL 和MongoDB  185
11.1 为什么要采用NoSQL  185
11.2 了解MongoDB  186
11.2.1 理解集合  186
11.2.2 了解文档  186
11.3 MongoDB 的数据类型  187
11.4 规划你的数据模型  188
11.4.1 使用文档引用来规范化数据  189
11.4.2 使用嵌入式文档反规范化数据  190
11.4.3 使用封顶集合  191
11.4.4 了解原子写操作  192
11.4.5 考虑文件增长  192
11.4.6 识别索引、分片和复制的机会  193
11.4.7 大集合与大量集合的对比  193
11.4.8 决定数据生命周期  193
11.4.9 考虑数据的可用性和性能  194
11.5 小结  194
11.6 下一章  194
第12 章 MongoDB 入门  195
12.1 构建MongoDB 的环境  195
12.1.1 MongoDB 的安装  195
12.1.2 启动MongoDB  196
12.1.3 停止MongoDB  197
12.1.4 从shell 客户端访问MongoDB  197
12.2 管理用户账户  200
12.2.1 列出用户  200
12.2.2 创建用户账户  201
12.2.3 删除用户  202
12.3 配置访问控制  203
12.3.1 创建用户管理员账户  203
12.3.2 打开身份验证  204
12.3.3 创建数据库管理员账户  204
12.4 管理数据库  205
12.4.1 显示数据库清单  205
12.4.2 切换当前数据库  205
12.4.3 创建数据库  206
12.4.4 删除数据库  206
12.4.5 复制数据库  207
12.5 管理集合  207
12.5.1 显示数据库中的集合列表  207
12.5.2 创建集合  208
12.5.3 删除集合  208
12.5.4 在集合中查找文档  209
12.5.5 将文档添加到集合中  210
12.5.6 从集合中删除文档  210
12.5.7 更新集合中的文档  211
12.6 小结  212
12.7 下一章  212
第13 章 MongoDB 和Node.js 入门  213
13.1 把MongoDB 的驱动程序添加到Node.js  213
13.2 从Node.js 连接到MongoDB  213
13.2.1 了解写入关注  214
13.2.2 通过MongoClient 对象从Node.js 连接到MongoDB  214
13.3 了解用在MongoDB Node.js 驱动程序中的对象  218
13.3.1 了解Db 对象  218
13.3.2 了解Admin 对象  220
13.3.3 了解Collection 对象  220
13.3.4 了解Cursor 对象  222
13.4 访问和操作数据库  223
13.4.1 列出数据库  223
13.4.2 创建数据库  223
13.4.3 删除数据库  224
13.4.4 创建、列出和删除数据库实例  224
13.4.5 获取MongoDB 服务器的状态  226
13.5 访问和操作集合  227
13.5.1 列出集合  227
13.5.2 创建集合  227
13.5.3 删除集合  227
13.5.4 创建、列出和删除集合的示例  228
13.5.5 获取集合信息  229
13.6 小结  230
13.7 下一章  230
第14 章 从Node.js 操作MongoDB 文档  231
14.1 了解数据库更改选项  231
14.2 了解数据库更新运算符  232
14.3 将文档添加到集合  233
14.4 从集合获取文档  235
14.5 更新集合中的文档  237
14.6 原子地修改文档的集合  239
14.7 保存集合中的文档  241
14.8 使用upsert 往集合中插入文档  242
14.9 从集合中删除文档  244
14.10 从集合中删除单个文档  246
14.11 小结  248
14.12 下一章  248
第15 章 从Node.js 访问MongoDB  249
15.1 介绍数据集  249
15.2 了解query 对象  250
15.3 了解查询options 对象  251
15.4 查找特定文档集合  252
15.5 清点文档数量  255
15.6 对结果集进行限制  257
15.6.1 按大小限制结果  257
15.6.2 限制对象返回的字段  258
15.6.3 对结果进行分页  260
15.7 对结果集进行排序  262
15.8 查找不同的字段值  263
15.9 对结果进行分组  265
15.10 通过聚合结果来应用MapReduce  269
15.10.1 了解aggregate()方法  269
15.10.2 使用聚合框架运算符  270
15.10.3 实现聚合表达式运算符  272
15.10.4 聚合的例子  273
15.11 小结  274
15.12 下一章  274
第16 章 利用Mongoose 来使用结构化模式与验证  275
16.1 了解Mongoose  275
16.2 利用Mongoose 连接到MongoDB 数据库  276
16.3 定义模式  278
16.3.1 了解路径  278
16.3.2 创建一个模式定义  278
16.3.3 把索引添加到一个模式  279
16.3.4 实现字段的唯一性  280
16.3.5 强制字段的必需性  280
16.3.6 往Schema 模型添加方法  280
16.3.7 在words 数据库上实现模式  281
16.4 编译模型  282
16.5 了解Query 对象  282
16.5.1 设置查询数据库操作  283
16.5.2 设置查询数据库操作选项  284
16.5.3 设置查询运算符  285
16.6 了解Document 对象  287
16.7 利用Mongoose 查找文档  288
16.8 利用Mongoose 添加文档  290
16.9 利用Mongoose 更新文档  292
16.9.1 保存文档更改  292
16.9.2 更新单个文档  293
16.9.3 更新多个文档  295
16.10 利用Mongoose 删除文档  296
16.10.1 删除单个文档  296
16.10.2 删除多个文档  298
16.11 利用Mongoose 聚合文档  299
16.12 使用验证框架  302
16.13 实现中间件函数  304
16.14 小结  306
16.15 下一章  307
第17 章 高级MongoDB 概念  309
17.1 添加索引  309
17.2 使用封顶集合  311
17.3 应用复制  312
17.3.1 复制策略  314
17.3.2 部署一个副本集  314
17.4 实施分片  315
17.4.1 分片服务器类型  316
17.4.2 选择一个分片键  317
17.4.3 选择一种分区方法  318
17.4.4 部署一个分片的MongoDB 集群  319
17.5 修复MongoDB 数据库  322
17.6 备份MongoDB  323
17.7 小结  324
17.8 下一章  324
第4 部分 使用Express 使生活更轻松
第18 章 在Node.js 中实现Express  327
18.1 Express 入门  327
18.1.1 配置Express 设置  327
18.1.2 启动Express 服务器  328
18.2 配置路由  329
18.2.1 实现路由  329
18.2.2 在路由中应用参数  330
18.3 使用Request 对象  334
18.4 使用Response 对象  336
18.4.1 设置标头  336
18.4.2 设置状态  337
18.4.3 发送响应  337
18.4.4 发送JSON 响应  339
18.4.5 发送文件  341
18.4.6 发送下载响应  342
18.4.7 重定向响应  343
18.5 实现一个模板引擎  343
18.5.1 定义引擎  344
18.5.2 加入本地对象  345
18.5.3 创建模板  345
18.5.4 在响应中呈现模板  347
18.6 小结  348
18.7 下一章  348
第19 章 实现Express 中间件  349
19.1 了解中间件  349
19.1.1 在全局范围内把中间件分配给某个路径  350
19.1.2 把中间件分配到单个路由  350
19.1.3 添加多个中间件函数  351
19.2 使用query 中间件  351
19.3 提供静态文件服务  351
19.4 处理POST 正文数据  353
19.5 发送和接收cookie  354
19.6 实现会话  356
19.7 应用基本的HTTP 身份验证  358
19.8 实现会话身份验证  359
19.9 创建自定义中间件  362
19.10 小结  363
19.11 下一章  364
第5 部分 学习Angular
第20 章 TypeScript 入门  367
20.1 学习不同的类型  367
20.2 了解接口  369
20.3 实现类  370
20.4 实现模块  371
20.5 理解函数  372
20.6 小结  373
20.7 下一章  373
第21 章 Angular 入门  375
21.1 为什么选择Angular  375
21.2 了解Angular  375
21.2.1 模块  376
21.2.2 指令  376
21.2.3 数据绑定  376
21.2.4 依赖注入  376
21.2.5 服务  377
21.3 职责分离  377
21.4 为你的环境添加Angular  377
21.5 使用Angular CLI  378
21.6 创建一个基本的Angular 应用程序  379
21.6.1 创建你的第一个Angular 应用程序  380
21.6.2 了解和使用NgModule  381
21.6.3 创建Angular 引导程序  382
21.7 小结  386
21.8 下一章  386
第22 章 Angular 组件  387
22.1 组件配置  387
22.2 建立模板  388
22.3 使用构造函数  391
22.4 使用外部模板  392
22.5 注入指令  394
22.5.1 使用依赖注入构建嵌套组件  395
22.5.2 通过依赖注入传递数据  397
22.5.3 创建使用输入的Angular 应用程序  397
22.6 小结  399
22.7 下一章  399
第23 章 表达式  401
23.1 使用表达式  401
23.1.1 使用基本表达式  402
23.1.2 在表达式中与Component 类交互  404
23.1.3 在Angular 表达式中使用TypeScript  405
23.2 使用管道  408
23.3 建立一个自定义管道  412
23.4 小结  414
23.5 下一章  414
第24 章 数据绑定  415
24.1 了解数据绑定  415
24.1.1 插值  415
24.1.2 性质绑定  417
24.1.3 属性绑定  419
24.1.4 类绑定  419
24.1.5 样式绑定  420
24.1.6 事件绑定  421
24.1.7 双向绑定  424
24.2 小结  426
24.3 下一章  426
第25 章 内置指令  427
25.1 了解指令  427
25.2 使用内置指令  427
25.2.1 组件指令  428
25.2.2 结构指令  428
25.2.3 属性指令  431
25.3 小结  434
25.4 下一章  434
第6 部分 高级Angular
第26 章 自定义指令  437
26.1 创建自定义属性指令  437
26.2 使用组件创建自定义指令  440
26.3 小结  444
26.4 下一章  444
第27 章 事件和变更检测  445
27.1 使用浏览器事件  445
27.2 发出自定义事件  446
27.2.1 将自定义事件发送到父组件层次结构  446
27.2.2 使用监听器处理自定义事件  446
27.2.3 在嵌套组件中实现自定义事件  446
27.2.4 从子组件中删除父组件中的数据  448
27.3 使用可观察物  452
27.3.1 创建一个可观察物对象  452
27.3.2 利用可观察物观察数据变化  453
27.4 小结  455
27.5 下一章  456
第28 章 在Web 应用程序中实现Angular 服务  457
28.1 了解Angular 服务  457
28.2 使用内置的服务  457
28.3 使用http 服务发送HTTP GET 和PUT 请求  458
28.3.1 配置HTTP 请求  459
28.3.2 实现HTTP 响应回调函数  459
28.3.3 实现一个简单的JSON 文件并使用http 服务来访问它  460
28.4 使用http 服务实现一个简单的模拟服务器  463
28.5 使用router 服务更改视图  474
28.5.1 在Angular 中使用routes  475
28.5.2 实现一个简单的路由  476
28.6 用导航栏实现路由  479
28.7 实现带参数的路由  484
28.8 小结  488
28.9 下一章  488
第29 章 创建自己的自定义Angular 服务  489
29.1 将自定义服务集成到Angular 应用程序中  489
29.2 实现一个使用常量数据服务的简单应用程序  490
29.3 实现数据转换服务  492
29.4 实现可变数据服务  496
29.5 实现一个返回promise 的服务  500
29.6 实现共享服务  501
29.7 小结  508
29.8 下一章  508
第30 章 玩转Angular  509
30.1 实现使用动画服务的Angular 应用程序  509
30.2 实现放大图像的Angular 应用程序  514
30.3 实现启用拖放的Angular 应用程序  517
30.4 实现星级评级的Angular 组件  522
30.5 小结  530
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node.js+MongoDB+Angular Web开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>MongoDB运维实战
第1章 MongoDB 3.4新特性
1.1 复制集（Replica Set）
1.2 分片集群（Sharded Cluster）
第2章 MongoDB 3.6新特性
2.1 复制集（Replica Sets）
2.2 分片集群（Sharded Clusters）
第3章 运维实战：故障案例分析
3.1 调整oplog大小引发的从库宕机
3.2 hotbackup报错
3.3 MongoDB最大连接数限制
3.4 MongoDB启动失败
3.5 Mongos异常宕机
3.6 sharding集群执行sh.stopBalancer()命令卡住
3.7 Remove shard失败
3.8 move chunk aborted
3.9 迁移引发的性能抖动
3.10 Mongos连接数异常
3.11 rs.add时报错operation exceeded time limit
3.12 副本集延迟突然增大到上万秒
3.13 升级发现infoMessage异常
3.14 对已存在集合shardcollection失败
3.15 operation exceeded time limit
3.16 强制重新配置副本集
3.17 create index oom
3.18 rs.remove导致从节点crash
第4章 性能调优
4.1 机器负载高
4.2 快速修改库名
4.3 dbhash检查一致性
4.4 使用索引却依旧性能低下
4.5 索引
4.5.1 单列索引
4.5.2 复合索引
4.5.3 多键索引
4.5.4 文本索引
4.5.5 2dsphere索引
4.5.6 2d索引
4.5.7 Hash索引
4.5.8 一条SQL创建多个索引
4.6 索引属性
4.6.1 TTL索引
4.6.2 唯一索引
4.6.3 部分索引
4.6.4 稀疏索引
4.7 在大集合上创建索引
4.8 索引交集
4.9 索引排序
4.10 查询计划
4.11 systemprofile
4.12 Profile操作相关
第5章 备份与恢复
5.1 逻辑备份
5.2 Oplog Replay
5.3 物理备份
第6章 高可用架构集群管理
6.1 副本集
6.1.1 冗余和数据可用性
6.1.2 MongoDB中的副本集
6.1.3 自动故障转移
6.1.4 关于MongoDB的读操作
6.2 副本集成员状态
6.3 副本集原理
6.4 复制集成员
6.5 复制集成员类型
6.6 副本集中的主库
6.7 副本集中的从库
6.7.1 Priority 0从库
6.7.2 hidden从库
6.7.3 延迟从库
6.8 oplog简介
6.9 oplog过滤
6.10 副本集的数据复制
6.11 3节点最小副本集架构
6.12 副本集的选举
6.12.1 writeConcern
6.12.2 Read Preference
6.13 副本集环境搭建
6.14 配置延迟
6.15 从2.6版本升级至3.0版本
6.15.1 升级过程
6.15.2 关于认证
6.15.3 变更存储引擎
6.15.4 Driver兼容性
6.16 从3.2版本升级至3.4版本
6.16.1 升级过程
6.16.2 启用不向下兼容的3.4版本功能
6.16.3 升级发现infoMessage异常
6.17 分片
6.17.1 分片和非分片集合
6.17.2 Sharding组建
6.17.3 Shard
6.17.4 Config server
6.17.5 mongos
6.17.6 Shard keys
6.17.7 哈希分片
6.17.8 范围分片
6.17.9 zone
6.17.10 zone常用命令
6.17.11 Chunk
6.17.12 Chunk迁移
6.17.13 chunksize
6.17.14 Balancer
6.17.15 Balancer运维
6.18 Troubleshoot Sharded Clusters
6.19 在线开启认证
6.20 分片架构搭建
第7章 监控
7.1 PMM监控MongoDB
7.2 Server组件
7.3 Client组件
7.3.1 安装Docker
7.3.2 创建PMM数据容器
7.3.3 运行PMM容器，并配置监控登录用户名密码
7.3.4 安装客户端
第8章 常用命令
8.1 查询
8.2 插入
8.3 修改
8.4 删除
8.5 分片集群常用命令
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>MongoDB运维实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>MongoDB从入门到商业实战
一一第1篇  MongoDB环境的理论与实践
一
第1章  初识NoSQL数据库与MongoDB / 2
1.1  初识NoSQL数据库 / 2
一1.1.1  何为NoSQL数据库 / 2
一1.1.2  NoSQL数据库有哪些特征 / 3
一1.1.3  为何NoSQL数据库会崛起 / 4
一1.1.4  NoSQL数据库有哪些种类 / 4
一1.1.5  NoSQL数据库与RDB该怎么选择 / 5
1.2  初识MongoDB / 6
一1.2.1  何为MongoDB / 6
一1.2.2  MongoDB有哪些特性 / 6
一1.2.3  MongoDB适用于哪些场景 / 7
一1.2.4  MongoDB中的对象 / 7
一1.2.5  MongoDB的文档知识 / 9
一1.2.6  MongoDB的数据类型 / 11
一
第2章  部署MongoDB单机版 / 16
2.1  操作系统硬件规格选择 / 16
2.2  部署Windows版MongoDB / 18
一2.2.1  下载软件 / 18
一2.2.2  部署安装版 / 19
一2.2.3  部署免安装版 / 25
2.3  部署Linux版MongoDB / 26
一2.3.1  下载软件 / 26
一2.3.2  启动MongoDB / 27
一2.3.3  配置启动文件 / 28
一2.3.4  启动、终止服务 / 31
一2.3.5  配置单机权限——Auth属性值 / 33
一2.3.6  配置自启动服务 / 35
一
第3章  认识MongoDB集群 / 40
3.1  认识集群 / 40
一3.1.1  从一个日常生活情境着手 / 40
一3.1.2  mongos服务 / 44
一3.1.3  config服务 / 46
一3.1.4  shard服务 / 47
3.2  认识副本集（Replica Set） / 47
一3.2.1  副本集简介 / 48
一3.2.2  高可用（节点故障转移） / 50
一3.2.3  数据读写策略 / 59
3.3  认识分片集（Sharding Cluster） / 63
一3.3.1  分片集简介 / 63
一3.3.2  片键（Shard Key） / 65
一3.3.3  控制数据分发——分片标签 / 67
一3.3.4  平衡器（Balancer） / 68
一
第4章  集群的配置 / 73
4.1  配置副本集 / 73
一4.1.1  了解要配置的架构 / 73
一4.1.2  配置数据副本集（含Arbiter） / 74
一4.1.3  配置内存节点 / 78
4.2  配置分片集群 / 79
一4.2.1  了解要配置的架构 / 79
一4.2.2  配置config副本集 / 81
一4.2.3  配置mongos / 84
一4.2.4  配置集群的权限 / 87
一4.2.5  配置自启动服务 / 88
一4.2.6  设置数据库分片（含指定数据存放分片） / 91
4.3  集群的常用配置 / 93
一4.3.1  查看分片信息状态 / 93
一4.3.2  调整副本集 / 95
一4.3.3  调整分片集群 / 98
一4.3.4  管理平衡器（Balancer） / 99
一4.3.5  让数据在分片间迁移 / 100
一
第5章  优化Linux以提升MongoDB性能 / 101
5.1  实现所有MongoDB Server时间的同步 / 101
一5.1.1  了解时间同步（NTP） / 101
一5.1.2  手动设定时间同步 / 102
一5.1.3  通过服务自动实现时间同步 / 102
5.2  减少时间戳记录 / 103
5.3  关闭磁盘预读功能 / 104
一5.3.1  手动关闭 / 105
一5.3.2  让系统自动关闭 / 105
5.4  关闭内存管理 / 108
一5.4.1  了解标准大页和透明大页 / 108
一5.4.2  在CentOS 7.0中配置THP / 108
5.5  禁用“非统一内存访问”（NUMA） / 109
一5.5.1  NUMA的工作原理 / 109
一5.5.2  查看硬件的NUMA分配节点资源的情况 / 110
一5.5.3  禁用NUMA机制 / 110
一
一一第2篇  数据管理操作
一
第6章  MongoDB基础操作 / 112
6.1  文档的操作 / 112
一6.1.1  插入 / 112
一6.1.2  更新 / 116
一6.1.3  删除 / 120
一6.1.4  基本查询 / 121
一6.1.5  条件查询 / 122
一6.1.6  正则表达式 / 124
一6.1.7  内嵌文档查询 / 126
一6.1.8  数据校验 / 127
一6.1.9  原子性操作 / 129
6.2  集合的操作 / 131
一6.2.1  集合管理 / 131
一6.2.2  固定集合 / 133
6.3  创建索引 / 134
一6.3.1  单字段索引 / 135
一6.3.2  复合索引 / 137
一6.3.3  TTL索引 / 137
一6.3.4  全文本索引 / 138
一6.3.5  地理空间索引 / 139
一6.3.6  Hash索引 / 142
一6.3.7  查询优化诊断 / 142
6.4  常用聚合操作 / 143
一6.4.1  聚合——$group / 144
一6.4.2  显示字段——$project / 145
一6.4.3  数据排序、跳过几个文档、限制显示文档数量——$sort、$skip、$limit / 152
一6.4.4  条件筛选——$match / 152
一6.4.5  多表关联查询——$lookup / 153
一6.4.6  计算文档数量——$count / 155
一6.4.7  展开数组——$unwind / 155
一6.4.8  结果汇入新表——$out / 156
6.5  映射和归约（MapReduce） / 157
一6.5.1  MapReduce介绍 / 157
一6.5.2  范例1：数据汇总 / 158
一6.5.3  范例2：存成数组 / 160
6.6  存储过程 / 162
一6.6.1  保存存储过程 / 162
一6.6.2  查看存储过程 / 163
一6.6.3  执行存储过程 / 163
一
第7章  大文件存储——MongoDB GridFS / 165
7.1  GridFS介绍 / 165
一7.1.1  GridFS如何存储文档 / 165
一7.1.2  认识chunks与files集合 / 166
7.2  GridFS操作 / 167
一7.2.1  通过GridFS上传文件 / 168
一7.2.2  通过GridFS查看文件列表 / 168
一7.2.3  通过GridFS下载文件 / 168
一7.2.4  通过GridFS删除文件 / 169
一7.2.5  通过GridFS查找文件 / 169
一7.2.6  GridFS的其余参数 / 169
7.3  用Python实现GridFS操作 / 170
-
一一第3篇   运维与安全管理
一
第8章  数据库安全管理与审计 / 174
8.1  权限管理简介 / 174
8.2  用户管理 / 175
一8.2.1  创建用户与登录 / 175
一8.2.2  修改用户 / 178
一8.2.3  删除用户 / 179
一8.2.4  查询用户 / 180
一8.2.5  授予用户权限 / 183
一8.2.6  撤销用户权限 / 183
8.3  角色管理 / 184
一8.3.1  内建角色 / 184
一8.3.2  创建自定义角色 / 186
一8.3.3  修改自定义角色 / 187
一8.3.4  删除自定义角色 / 188
一8.3.5  查询自定义角色 / 189
一8.3.6  授予角色权限 / 191
一8.3.7  撤销角色权限 / 192
8.4  身份验证 / 193
一8.4.1  SCRAM / 193
一8.4.2  x.509 / 195
8.5  数据加密 / 198
一8.5.1  动态数据加密（传输加密） / 198
一8.5.2  静态数据加密 / 198
8.6  审计 / 198
一8.6.1  审计的启用与配置 / 199
一8.6.2  审计事件与过滤 / 199
8.7  检测安全漏洞 / 200
一
第9章  备份与恢复 / 202
9.1  了解备份/恢复 / 202
9.2  逻辑备份/恢复的常用命令 / 203
一9.2.1  备份/恢复命令 / 203
一9.2.2  导出/导入命令 / 206
9.3  物理备份/恢复的常用命令 / 210
9.4  备份/恢复的具体方案 / 211
一9.4.1  单机的备份/恢复 / 211
一9.4.2  副本集的备份/恢复 / 212
一9.4.3  分片集群的备份/恢复 / 213
一
第10章  监控管理 / 216
10.1  监控MongoDB / 216
一10.1.1  MongoDB自带监控工具 / 217
一10.1.2  mongo shell中的监控指令 / 219
一10.1.3  第三方监控工具 / 223
一10.1.4  免费监控服务 / 224
10.2  官方提供的运维管理系统——MongoDB Ops Manager / 225
一10.2.1  认识Ops Manager / 226
一10.2.2  Ops Manager的功能 / 227
一
第11章  客户端软件 / 231
11.1  官方客户端软件 / 231
一11.1.1  MongoDB Compass简介 / 231
一11.1.2  创建数据库及集合 / 232
一11.1.3  新增集合中的文档及查询数据 / 233
一11.1.4  查询文档 / 233
一11.1.5  进行聚合操作 / 234
一11.1.6  查询执行计划 / 235
一11.1.7  建立数据校验规则 / 236
一11.1.8  进行监控 / 237
11.2  第三方客户端软件 / 238
一11.2.1  Studio 3T for MongoDB / 238
一11.2.2  Robo 3T / 245
一11.2.3  NoSQL Manager / 246
11.3  总结 / 251
一
一一第4篇  应用开发与案例
一
第12章  用Java操作MongoDB / 254
12.1  环境准备 / 254
一12.1.1  环境说明 / 254
一12.1.2  配置MongoDB的Java驱动 / 255
12.2  建立连接与断开连接 / 256
12.3  应用与操作 / 259
一12.3.1  新增文档 / 259
一12.3.2  删除文档 / 261
一12.3.3  修改文档 / 263
12.4  查询文档数据 / 266
一12.4.1  限制查询结果集的大小 / 266
一12.4.2  限制查询返回的字段 / 267
一12.4.3  按条件进行查询 / 267
一12.4.4  对查询结果分页 / 268
一12.4.5  用聚合命令查询文档 / 271
一12.4.6  应用索引查询 / 272
12.5  使用正则表达式 / 275
12.6  批量处理数据 / 276
12.7  创建文档关联查询 / 277
12.8  操作MongoDB GridFS / 279
12.9  小结 / 282
一
第13章  用C#操作MongoDB / 283
13.1  环境准备 / 283
一13.1.1  环境说明 / 283
一13.1.2  配置MongoDB驱动 / 284
13.2  建立连接 / 285
13.3  应用与操作 / 287
一13.3.1  新增文档 / 287
一13.3.2  删除文档 / 289
一13.3.3  修改文档 / 290
13.4  查询文档数据 / 293
一13.4.1  限制查询结果集大小 / 293
一13.4.2  限制查询返回的字段 / 294
一13.4.3  按条件进行查询 / 295
一13.4.4  将查询结果分页显示 / 296
一13.4.5  使用聚合命令查询文档 / 297
一13.4.6  应用索引查询 / 299
13.5  使用正则表达式 / 301
13.6  批量处理数据 / 302
13.7  创建文档关联查询 / 302
13.8  操作MongoDB GridFS / 304
13.9  小结 / 307
一
第14章  用Python操作MongoDB / 308
14.1  环境准备 / 309
一14.1.1  安装Python / 309
一14.1.2  安装pymongo / 310
14.2  建立连接与断开连接 / 310
14.3  应用与操作 / 311
一14.3.1  新增文档 / 311
一14.3.2  删除文档 / 315
一14.3.3  修改文档 / 316
14.4  查询文档数据 / 318
一14.4.1  限制查询结果集大小 / 318
一14.4.2  限制查询返回的字段 / 320
一14.4.3  用复杂条件进行查询 / 322
一14.4.4  将查询结果分页显示 / 323
一14.4.5  用聚合方法查询文档 / 325
一14.4.6  用索引查询 / 326
14.5  使用正则表达式 / 331
14.6  批量处理数据 / 333
14.7  创建文档关联查询 / 336
14.8  操作MongoDB GridFS / 339
14.9  小结 / 341
一
第15章  用Node.js操作MongoDB / 342
15.1  准备环境 / 342
一15.1.1  安装Node.js / 342
一15.1.2  安装MongoDB包 / 344
15.2  建立与断开连接 / 344
15.3  应用与操作 / 347
一15.3.1  新增文档 / 347
一15.3.2  删除文档 / 350
一15.3.3  修改文档 / 351
15.4  查询文档 / 354
一15.4.1  限制查询结果集大小 / 354
一15.4.2  限制查询字段 / 357
一15.4.3  查询条件使用 / 358
一15.4.4  将查询结果分页 / 359
一15.4.5  使用聚合方法查询文档 / 361
一15.4.6  用索引进行查询 / 362
15.5  使用正则表达式 / 365
15.6  批量处理数据 / 366
15.7  创建文档关联查询 / 368
15.8  操作MongoDB GridFS / 369
15.9  小结 / 371
一
第16章  实际应用案例 / 372
16.1  搭建跨区域数据中心 / 372
一16.1.1  需求描述 / 372
一16.1.2  架构设计 / 373
一16.1.3  架构配置 / 375
16.2  用MongoDB实现流式数据处理 / 378
一16.2.1  任务与目标 / 378
一16.2.2  问题展开 / 378
一16.2.3  解决方案 / 379
一16.2.4  代码编写 / 382
16.3  用“Node.js+MongoDB”实现高并发的网络聊天室 / 386
一16.3.1  需求描述 / 386
一16.3.2  解决方案 / 387
16.3.3  MongoDB应用 / 387
一16.3.4  代码编写 / 389
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>MongoDB从入门到商业实战
