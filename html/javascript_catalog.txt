>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript高级程序设计（第3版）
目　　录
第1章　JavaScript简介　　1
1.1　JavaScript简史　　1
1.2　JavaScript实现　　2
1.2.1　ECMAScript　　3
1.2.2　文档对象模型（DOM）　　5
1.2.3　浏览器对象模型（BOM）　　8
1.3　JavaScript版本　　8
1.4　小结　　9
第2章　在HTML中使用JavaScript　　10
2.1　<script>元素　　10
2.1.1　标签的位置　　12
2.1.2　延迟脚本　　13
2.1.3　异步脚本　　13
2.1.4　在XHTML中的用法　　14
2.1.5　不推荐使用的语法　　16
2.2　嵌入代码与外部文件　　16
2.3　文档模式　　16
2.4　<noscript>元素　　18
2.5　小结　　18
第3章　基本概念　　19
3.1　语法　　19
3.1.1　区分大小写　　19
3.1.2　标识符　　19
3.1.3　注释　　20
3.1.4　严格模式　　20
3.1.5　语句　　20
3.2　关键字和保留字　　21
3.3　变量　　22
3.4　数据类型　　23
3.4.1　typeof操作符　　23
3.4.2　Undefined类型　　24
3.4.3　Null类型　　25
3.4.4　Boolean类型　　26
3.4.5　Number类型　　27
3.4.6　String类型　　32
3.4.7　Object类型　　35
3.5　操作符　　36
3.5.1　一元操作符　　36
3.5.2　位操作符　　39
3.5.3　布尔操作符　　44
3.5.4　乘性操作符　　47
3.5.5　加性操作符　　48
3.5.6　关系操作符　　50
3.5.7　相等操作符　　51
3.5.8　条件操作符　　53
3.5.9　赋值操作符　　53
3.5.10　逗号操作符　　54
3.6　语句　　54
3.6.1　if语句　　54
3.6.2　do-while语句　　55
3.6.3　while语句　　55
3.6.4　for语句　　56
3.6.5　for-in语句　　57
3.6.6　label语句　　58
3.6.7　break和continue语句　　58
3.6.8　with语句　　60
3.6.9　switch语句　　60
3.7　函数　　62
3.7.1　理解参数　　64
3.7.2　没有重载　　66
3.8　小结　　67
第4章　变量、作用域和内存问题　　68
4.1　基本类型和引用类型的值　　68
4.1.1　动态的属性　　68
4.1.2　复制变量值　　69
4.1.3　传递参数　　70
4.1.4　检测类型　　72
4.2　执行环境及作用域　　73
4.2.1　延长作用域链　　75
4.2.2　没有块级作用域　　76
4.3　垃圾收集　　78
4.3.1　标记清除　　78
4.3.2　引用计数　　79
4.3.3　性能问题　　80
4.3.4　管理内存　　81
4.4　小结　　81
第5章　引用类型　　83
5.1　Object类型　　83
5.2　Array类型　　86
5.2.1　检测数组　　88
5.2.2　转换方法　　89
5.2.3　栈方法　　90
5.2.4　队列方法　　91
5.2.5　重排序方法　　92
5.2.6　操作方法　　94
5.2.7　位置方法　　95
5.2.8　迭代方法　　96
5.2.9　缩小方法　　97
5.3　Date类型　　98
5.3.1　继承的方法　　100
5.3.2　日期格式化方法　　101
5.3.3　日期/时间组件方法　　102
5.4　RegExp类型　　103
5.4.1　RegExp实例属性　　105
5.4.2　RegExp实例方法　　106
5.4.3　RegExp构造函数属性　　107
5.4.4　模式的局限性　　109
5.5　Function类型　　110
5.5.1　没有重载（深入理解）　　111
5.5.2　函数声明与函数表达式　　111
5.5.3　作为值的函数　　112
5.5.4　函数内部属性　　113
5.5.5　函数属性和方法　　116
5.6　基本包装类型　　118
5.6.1　Boolean类型　　120
5.6.2　Number类型　　120
5.6.3　String类型　　122
5.7　单体内置对象　　130
5.7.1　Global对象　　131
5.7.2　Math对象　　134
5.8　小结　　137
第6章　面向对象的程序设计　　138
6.1　理解对象　　138
6.1.1　属性类型　　139
6.1.2　定义多个属性　　142
6.1.3　读取属性的特性　　143
6.2　创建对象　　144
6.2.1　工厂模式　　144
6.2.2　构造函数模式　　144
6.2.3　原型模式　　147
6.2.4　组合使用构造函数模式和原型模式　　159
6.2.5　动态原型模式　　159
6.2.6　寄生构造函数模式　　160
6.2.7　稳妥构造函数模式　　161
6.3　继承　　162
6.3.1　原型链　　162
6.3.2　借用构造函数　　167
6.3.3　组合继承　　168
6.3.4　原型式继承　　169
6.3.5　寄生式继承　　171
6.3.6　寄生组合式继承　　172
6.4　小结　　174
第7章　函数表达式　　175
7.1　递归　　177
7.2　闭包　　178
7.2.1　闭包与变量　　181
7.2.2　关于this对象　　182
7.2.3　内存泄漏　　183
7.3　模仿块级作用域　　184
7.4　私有变量　　186
7.4.1　静态私有变量　　188
7.4.2　模块模式　　189
7.4.3　增强的模块模式　　191
7.5　小结　　192
第8章　BOM　　193
8.1　window对象　　193
8.1.1　全局作用域　　193
8.1.2　窗口关系及框架　　194
8.1.3　窗口位置　　197
8.1.4　窗口大小　　198
8.1.5　导航和打开窗口　　199
8.1.6　间歇调用和超时调用　　203
8.1.7　系统对话框　　205
8.2　location对象　　207
8.2.1　查询字符串参数　　207
8.2.2　位置操作　　208
8.3　navigator对象　　210
8.3.1　检测插件　　211
8.3.2　注册处理程序　　213
8.4　screen对象　　214
8.5　history对象　　215
8.6　小结　　216
第9章　客户端检测　　217
9.1　能力检测　　217
9.1.1　更可靠的能力检测　　218
9.1.2　能力检测，不是浏览器检测　　220
9.2　怪癖检测　　220
9.3　用户代理检测　　221
9.3.1　用户代理字符串的历史　　222
9.3.2　用户代理字符串检测技术　　228
9.3.3　完整的代码　　242
9.3.4　使用方法　　245
9.4　小结　　246
第10章　DOM　　247
10.1　节点层次　　247
10.1.1　Node类型　　248
10.1.2　Document类型　　253
10.1.3　Element类型　　261
10.1.4　Text类型　　270
10.1.5　Comment类型　　273
10.1.6　CDATASection类型　　274
10.1.7　DocumentType类型　　274
10.1.8　DocumentFragment类型　　275
10.1.9　Attr类型　　276
10.2　DOM操作技术　　277
10.2.1　动态脚本　　277
10.2.2　动态样式　　279
10.2.3　操作表格　　281
10.2.4　使用NodeList　　283
10.3　小结　　284
第11章　DOM扩展　　286
11.1　选择符API　　286
11.1.1　querySelector()方法　　286
11.1.2　querySelectorAll()
方法　　287
11.1.3　matchesSelector()
方法　　288
11.2　元素遍历　　288
11.3　HTML5　　289
11.3.1　与类相关的扩充　　289
11.3.2　焦点管理　　291
11.3.3　HTMLDocument的变化　　292
11.3.4　字符集属性　　293
11.3.5　自定义数据属性　　293
11.3.6　插入标记　　294
11.3.7　scrollIntoView()方法　　298
11.4　专有扩展　　298
11.4.1　文档模式　　298
11.4.2　children属性　　299
11.4.3　contains()方法　　300
11.4.4　插入文本　　301
11.4.5　滚动　　303
11.5　小结　　304
第12章　DOM2和DOM3　　305
12.1　DOM变化　　305
12.1.1　针对XML命名空间的变化　　306
12.1.2　其他方面的变化　　309
12.2　样式　　312
12.2.1　访问元素的样式　　313
12.2.2　操作样式表　　317
12.2.3　元素大小　　320
12.3　遍历　　326
12.3.1　NodeIterator　　328
12.3.2　TreeWalker　　330
12.4　范围　　332
12.4.1　DOM中的范围　　332
12.4.2　IE8及更早版本中的范围　　340
12.5　小结　　343
第13章　事件　　345
13.1　事件流　　345
13.1.1　事件冒泡　　346
13.1.2　事件捕获　　346
13.1.3　DOM事件流　　347
13.2　事件处理程序　　348
13.2.1　HTML事件处理程序　　348
13.2.2　DOM0级事件处理程序　　350
13.2.3　DOM2级事件处理程序　　351
13.2.4　IE事件处理程序　　352
13.2.5　跨浏览器的事件处理程序　　353
13.3　事件对象　　355
13.3.1　DOM中的事件对象　　355
13.3.2　IE中的事件对象　　358
13.3.3　跨浏览器的事件对象　　360
13.4　事件类型　　362
13.4.1　UI事件　　362
13.4.2　焦点事件　　367
13.4.3　鼠标与滚轮事件　　368
13.4.4　键盘与文本事件　　379
13.4.5　复合事件　　384
13.4.6　变动事件　　385
13.4.7　HTML5事件　　388
13.4.8　设备事件　　395
13.4.9　触摸与手势事件　　399
13.5　内存和性能　　402
13.5.1　事件委托　　402
13.5.2　移除事件处理程序　　404
13.6　模拟事件　　405
13.6.1　DOM中的事件模拟　　405
13.6.2　IE中的事件模拟　　410
13.7　小结　　411
第14章　表单脚本　　412
14.1　表单的基础知识　　412
14.1.1　提交表单　　413
14.1.2　重置表单　　414
14.1.3　表单字段　　414
14.2　文本框脚本　　419
14.2.1　选择文本　　420
14.2.2　过滤输入　　423
14.2.3　自动切换焦点　　426
14.2.4　HTML5约束验证API　　427
14.3　选择框脚本　　431
14.3.1　选择选项　　432
14.3.2　添加选项　　434
14.3.3　移除选项　　435
14.3.4　移动和重排选项　　435
14.4　表单序列化　　436
14.5　富文本编辑　　438
14.5.1　使用contenteditable
属性　　438
14.5.2　操作富文本　　439
14.5.3　富文本选区　　441
14.5.4　表单与富文本　　443
14.6　小结　　443
第15章　使用Canvas绘图　　445
15.1　基本用法　　445
15.2　2D上下文　　446
15.2.1　填充和描边　　446
15.2.2　绘制矩形　　447
15.2.3　绘制路径　　449
15.2.4　绘制文本　　451
15.2.5　变换　　453
15.2.6　绘制图像　　456
15.2.7　阴影　　457
15.2.8　渐变　　458
15.2.9　模式　　460
15.2.10　使用图像数据　　460
15.2.11　合成　　462
15.3　WebGL　　463
15.3.1　类型化数组　　463
15.3.2　WebGL上下文　　468
15.3.3　支持　　478
15.4　小结　　478
第16章　HTML5脚本编程　　480
16.1　跨文档消息传递　　480
16.2　原生拖放　　481
16.2.1　拖放事件　　482
16.2.2　自定义放置目标　　482
16.2.3　dataTransfer对象　　483
16.2.4　dropEffect与effectAllowed　　484
16.2.5　可拖动　　485
16.2.6　其他成员　　485
16.3　媒体元素　　486
16.3.1　属性　　487
16.3.2　事件　　488
16.3.3　自定义媒体播放器　　488
16.3.4　检测编解码器的支持情况　　489
16.3.5　Audio类型　　490
16.4　历史状态管理　　491
16.5　小结　　492
第17章　错误处理与调试　　493
17.1　浏览器报告的错误　　493
17.1.1　IE　　493
17.1.2　Firefox　　494
17.1.3　Safari　　496
17.1.4　Opera　　497
17.1.5　Chrome　　498
17.2　错误处理　　499
17.2.1　try-catch语句　　500
17.2.2　抛出错误　　503
17.2.3　错误（error）事件　　505
17.2.4　处理错误的策略　　506
17.2.5　常见的错误类型　　507
17.2.6　区分致命错误和非致命
错误　　510
17.2.7　把错误记录到服务器　　511
17.3　调试技术　　512
17.3.1　将消息记录到控制台　　512
17.3.2　将消息记录到当前页面　　515
17.3.3　抛出错误　　515
17.4　常见的IE错误　　516
17.4.1　操作终止　　516
17.4.2　无效字符　　518
17.4.3　未找到成员　　518
17.4.4　未知运行时错误　　519
17.4.5　语法错误　　519
17.4.6　系统无法找到指定资源　　519
17.5　小结　　520
第18章　JavaScript与XML　　521
18.1　浏览器对XML DOM的支持　　521
18.1.1　DOM2级核心　　521
18.1.2　DOMParser类型　　522
18.1.3　XMLSerializer类型　　523
18.1.4　IE8及之前版本中的XML　　523
18.1.5　跨浏览器处理XML　　527
18.2　浏览器对XPath的支持　　529
18.2.1　DOM3级XPath　　529
18.2.2　IE中的XPath　　534
18.2.3　跨浏览器使用XPath　　535
18.3　浏览器对XSLT的支持　　537
18.3.1　IE中的XSLT　　537
18.3.2　XSLTProcessor类型　　541
18.3.3　跨浏览器使用XSLT　　543
18.4　小结　　544
第19章　E4X　　546
19.1　E4X的类型　　546
19.1.1　XML类型　　546
19.1.2　XMLList类型　　547
19.1.3　Namespace类型　　548
19.1.4　QName类型　　549
19.2　一般用法　　550
19.2.1　访问特性　　551
19.2.2　其他节点类型　　552
19.2.3　查询　　553
19.2.4　构建和操作XML　　555
19.2.5　解析和序列化　　557
19.2.6　命名空间　　558
19.3　其他变化　　559
19.4　全面启用E4X　　560
19.5　小结　　561
第20章　JSON　　562
20.1　语法　　562
20.1.1　简单值　　562
20.1.2　对象　　563
20.1.3　数组　　564
20.2　解析与序列化　　565
20.2.1　JSON对象　　565
20.2.2　序列化选项　　566
20.2.3　解析选项　　569
20.3　小结　　570
第21章　Ajax与Comet　　571
21.1　XMLHttpRequest对象　　571
21.1.1　XHR的用法　　573
21.1.2　HTTP头部信息　　575
21.1.3　GET请求　　576
21.1.4　POST请求　　577
21.2　XMLHttpRequest 2级　　578
21.2.1　FormData　　578
21.2.2　超时设定　　579
21.2.3　overrideMimeType()
方法　　580
21.3　进度事件　　580
21.3.1　load事件　　580
21.3.2　progress事件　　581
21.4　跨源资源共享　　582
21.4.1　IE对CORS的实现　　582
21.4.2　其他浏览器对CORS的
实现　　584
21.4.3　Preflighted Reqeusts　　584
21.4.4　带凭据的请求　　585
21.4.5　跨浏览器的CORS　　585
21.5　其他跨域技术　　586
21.5.1　图像Ping　　586
21.5.2　JSONP　　587
21.5.3　Comet　　588
21.5.4　服务器发送事件　　590
21.5.5　Web Sockets　　591
21.5.6　SSE与Web Sockets　　593
21.6　安全　　593
21.7　小结　　594
第22章　高级技巧　　596
22.1　高级函数　　596
22.1.1　安全的类型检测　　596
22.1.2　作用域安全的构造函数　　597
22.1.3　惰性载入函数　　600
22.1.4　函数绑定　　602
22.1.5　函数柯里化　　604
22.2　防篡改对象　　606
22.2.1　不可扩展对象　　606
22.2.2　密封的对象　　607
22.2.3　冻结的对象　　608
22.3　高级定时器　　609
22.3.1　重复的定时器　　610
22.3.2　Yielding Processes　　612
22.3.3　函数节流　　614
22.4　自定义事件　　616
22.5　拖放　　618
22.5.1　修缮拖动功能　　620
22.5.2　添加自定义事件　　622
22.6　小结　　624
第23章　离线应用与客户端存储　　626
23.1　离线检测　　626
23.2　应用缓存　　627
23.3　数据存储　　628
23.3.1　Cookie　　629
23.3.2　IE用户数据　　637
23.3.3　Web存储机制　　638
23.3.4　IndexedDB　　643
23.4　小结　　654
第24章　最佳实践　　656
24.1　可维护性　　656
24.1.1　什么是可维护的代码　　656
24.1.2　代码约定　　657
24.1.3　松散耦合　　659
24.1.4　编程实践　　662
24.2　性能　　666
24.2.1　注意作用域　　666
24.2.2　选择正确方法　　667
24.2.3　最小化语句数　　672
24.2.4　优化DOM交互　　673
24.3　部署　　676
24.3.1　构建过程　　676
24.3.2　验证　　677
24.3.3　压缩　　679
24.4　小结　　681
第25章　新兴的API　　682
25.1　requestAnimationFrame()　　682
25.1.1　早期动画循环　　682
25.1.2　循环间隔的问题　　683
25.1.3　mozRequestAnimation-Frame　　683
25.1.4　webkitRequestAnima-tionFrame与msRequest-AnimationFrame　　685
25.2　Page Visibility API　　686
25.3　Geolocation API　　687
25.4　File API　　689
25.4.1　FileReader类型　　690
25.4.2　读取部分内容　　692
25.4.3　对象URL　　693
25.4.4　读取拖放的文件　　694
25.4.5　使用XHR上传文件　　695
25.5　Web计时　　696
25.6　Web Workers　　697
25.6.1　使用Worker　　697
25.6.2　Worker全局作用域　　698
25.6.3　包含其他脚本　　699
25.6.4　Web Workers的未来　　700
25.7　小结　　700
附录A　ECMAScript Harmony　　701
附录B　严格模式　　717
附录C　JavaScript库　　723
附录D　JavaScript工具　　727

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript高级程序设计（第3版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript语言精粹
前言	I
第1章 精华	1
为什么是JAVASCRIPT?	2
分析JAVASCRIPT	3
一个简单的试验场	4
第2章 语法	5
空白	5
标识符	6
数字	7
字符串	8
语句	10
表达式	15
字面量	17
函数	19
第3章 对象	20
对象字面量	20
检索	21
更新	22
引用	22
原型	22
反射	23
枚举	24
删除	24
减少全局变量污染	25
第4章 函数	26
函数对象	26
函数字面量	27
调用	27
参数	31
返回	31
异常	32
给类型增加方法	32
递归	34
作用域	36
闭包	37
回调	40
模块	40
级联	42
套用	43
记忆	44
第5章 继承..	46
伪类	47
对象说明符	50
原型	50
函数化	52
部件	55
第6章 数组	58
数组字面量	58
长度	59
删除	60
枚举	60
混淆的地方	61
方法	62
维度	63
第7章 正则表达式	65
一个例子	66
结构	70
元素	72
第8章 方法	78
第9章 代码风格	94
第10章 优美的特性	98
附录A：糟粕	101
附录B：鸡肋	109
附录C：JSLINT	115
附录D：语法图	125
附录E：JSON	136
索引	147
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript语言精粹
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript DOM编程艺术 （第2版）
第1章 JavaScript简史	1
1.1 JavaScript的起源	1
1.2 DOM	2
1.3 浏览器战争	3
1.3.1 DHTML	3
1.3.2 浏览器之间的冲突	3
1.4 制定标准	4
1.4.1 浏览器以外的考虑	4
1.4.2 浏览器战争的结局	5
1.4.3 崭新的起点	5
1.5 小结	6
第2章 JavaScript语法	8
2.1 准备工作	8
2.2 语法	10
2.2.1 语句	10
2.2.2 注释	10
2.2.3 变量	11
2.2.4 数据类型	14
2.2.5 数组	16
2.2.6 对象	18
2.3 操作	19
2.4 条件语句	21
2.4.1 比较操作符	22
2.4.2 逻辑操作符	23
2.5 循环语句	24
2.5.1 while循环	24
2.5.2 for循环	25
2.6 函数	26
2.7 对象	29
2.7.1 内建对象	30
2.7.2 宿主对象	31
2.8 小结	31
第3章 DOM	32
3.1 文档：DOM中的“D”	32
3.2 对象：DOM中的“O”	32
3.3 模型：DOM中的“M”	33
3.4 节点	35
3.4.1 元素节点	35
3.4.2 文本节点	35
3.4.3 属性节点	36
3.4.4 CSS	36
3.4.5 获取元素	38
3.4.6 盘点知识点	42
3.5 获取和设置属性	43
3.5.1 getAttribute	43
3.5.2 setAttribute	44
3.6 小结	45
第4章 案例研究：JavaScript图片库	46
4.1 标记	46
4.2 JavaScript	48
4.2.1 非DOM解决方案	49
4.2.2 最终的函数代码清单	50
4.3 应用这个JavaScript函数	50
4.4 对这个函数进行扩展	52
4.4.1 childNodes属性	53
4.4.2 nodeType属性	54
4.4.3 在标记里增加一段描述	54
4.4.4 用JavaScript改变这段描述	55
4.4.5 nodeValue属性	56
4.4.6 firstChild和lastChild属性	56
4.4.7 利用nodeValue属性刷新这段描述	57
4.5 小结	60
第5章 最佳实践	61
5.1 过去的错误	61
5.1.1 不要怪罪JavaScript	61
5.1.2 Flash的遭遇	62
5.1.3 质疑一切	63
5.2 平稳退化	63
5.2.1 “javascript:”伪协议	64
5.2.2 内嵌的事件处理函数	65
5.2.3 谁关心这个	65
5.3 向CSS学习	66
5.3.1 结构与样式的分离	66
5.3.2 渐进增强	67
5.4 分离JavaScript	68
5.5 向后兼容	70
5.5.1 对象检测	70
5.5.2 浏览器嗅探技术	71
5.6 性能考虑	72
5.6.1 尽量少访问DOM和尽量减少标记	72
5.6.2 合并和放置脚本	73
5.6.3 压缩脚本	73
5.7 小结	74
第6章 案例研究：图片库改进版	75
6.1 快速回顾	75
6.2 它支持平稳退化吗	76
6.3 它的JavaScript与HTML标记是分离的吗	77
6.3.1 添加事件处理函数	77
6.3.2 共享onload事件	82
6.4 不要做太多的假设	84
6.5 优化	86
6.6 键盘访问	88
6.7 把JavaScript与CSS结合起来	90
6.8 DOM Core和HTML-DOM	93
6.9 小结	94
第7章 动态创建标记	96
7.1 一些传统方法	96
7.1.1 document.write	96
7.1.2 innerHTML属性	98
7.2 DOM方法	101
7.2.1 createElement方法	101
7.2.2 appendChild方法	102
7.2.3 createTextNode方法	103
7.2.4 一个更复杂的组合	105
7.3 重回图片库	107
7.3.1 在已有元素前插入一个新元素	108
7.3.2 在现有方法后插入一个新元素	109
7.3.3 图片库二次改进版	111
7.4 Ajax	114
7.4.1 XMLHttpRequest对象	115
7.4.2 渐进增强与Ajax	119
7.4.3 Hijax	120
7.5 小结	121
第8章 充实文档的内容	122
8.1 不应该做什么	122
8.2 把“不可见”变成“可见”	123
8.3 内容	123
8.3.1 选用HTML、XHTML还是HTML5	124
8.3.2 CSS	126
8.3.3 JavaScript	127
8.4 显示“缩略语列表”	127
8.4.1 编写displayAbbreviations函数	128
8.4.2 创建标记	130
8.4.3 一个浏览器“地雷”	135
8.5 显示“文献来源链接表”	138
8.6 显示“快捷键清单”	143
8.7 检索和添加信息	146
8.8 小结	147
第9章 CSS-DOM	148
9.1 三位一体的网页	148
9.1.1 结构层	148
9.1.2 表示层	148
9.1.3 行为层	149
9.1.4 分离	150
9.2 style属性	150
9.2.1 获取样式	151
9.2.2 设置样式	156
9.3 何时该用DOM脚本设置样式	158
9.3.1 根据元素在节点树里的位置来设置样式	158
9.3.2 根据某种条件反复设置某种样式	161
9.3.3 响应事件	165
9.4 className属性	167
9.5 小结	171
第10章 用JavaScript实现动画效果	172
10.1 动画基础知识	172
10.1.1 位置	172
10.1.2 时间	175
10.1.3 时间递增量	175
10.1.4 抽象	178
10.2 实用的动画	184
10.2.1 提出问题	184
10.2.2 解决问题	186
10.2.3 CSS	187
10.2.4 JavaScript	189
10.2.5 变量作用域问题	192
10.2.6 改进动画效果	193
10.2.7 添加安全检查	196
10.2.8 生成HTML标记	198
10.3 小结	200
第11章 HTML5	201
11.1 HTML5简介	201
11.2 来自朋友的忠告	203
11.3 几个示例	204
11.3.1 Canvas	205
11.3.2 音频和视频	209
11.3.3 表单	215
11.4 HTML5还有其他特性吗	219
11.5 小结	219
第12章 综合示例	220
12.1 项目简介	220
12.1.1 原始资料	220
12.1.2 站点结构	220
12.1.3 页面结构	221
12.2 设计	222
12.3 CSS	223
12.3.1 颜色	225
12.3.2 布局	226
12.3.3 版式	228
12.4 标记	229
12.5 JavaScript	230
12.5.1 页面突出显示	231
12.5.2 JavaScript幻灯片	235
12.5.3 内部导航	239
12.5.4 JavaScript图片库	242
12.5.5 增强表格	245
12.5.6 增强表单	249
12.5.7 压缩代码	263
12.6 小结	264
附录 JavaScript库	265
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript DOM编程艺术 （第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript权威指南(第6版)
前言  1
第1章 JavaScript概述  5
1.1 JavaScript语言核心  8
1.2 客户端JavaScript  12
第一部分 JavaScript 语言核心
第2章 词法结构  25
2.1 字符集  25
2.2 注释  27
2.3 直接量  27
2.4 标识符和保留字  28
2.5 可选的分号  30
第3章 类型、值和变量  32
3.1 数字  34
3.2 文本  38
3.3 布尔值  43
3.4 null和undefined  44
3.5 全局对象  45
3.6 包装对象  46
3.7 不可变的原始值和可变的对象引用  47
3.8 类型转换  48
3.9 变量声明  55
3.10 变量作用域  56
第4章 表达式和运算符  60
4.1 原始表达式  60
4.2 对象和数组的初始化表达式  61
4.3 函数定义表达式  62
4.4 属性访问表达式  63
4.5 调用表达式  64
4.6 对象创建表达式  64
4.7 运算符概述  65
4.8 算术表达式  69
4.9 关系表达式  74
4.10 逻辑表达式  79
4.11 赋值表达式  81
4.12 表达式计算  83
4.13 其他运算符  86
第5章 语句  91
5.1 表达式语句  92
5.2 复合语句和空语句  92
5.3 声明语句  94
5.4 条件语句  96
5.5 循环  101
5.6 跳转  106
5.7 其他语句类型  113
5.8 JavaScript语句小结  116
第6章 对象  118
6.1 创建对象  120
6.2 属性的查询和设置  123
6.3 删除属性  127
6.4 检测属性  128
6.5 枚举属性  130
6.6 属性getter和setter  132
6.7 属性的特性  134
6.8 对象的三个属性  138
6.9 序列化对象  141
6.10 对象方法  142
第7章 数组  144
7.1 创建数组  144
7.2 数组元素的读和写  145
7.3 稀疏数组  147
7.4 数组长度  148
7.5 数组元素的添加和删除  149
7.6 数组遍历  149
7.7 多维数组  151
7.8 数组方法  152
7.9 ECMAScript 5中的数组方法  156
7.10 数组类型  160
7.11 类数组对象  161
7.12 作为数组的字符串  163
第8章 函数  165
8.1 函数定义  166
8.2 函数调用  168
8.3 函数的实参和形参  173
8.4 作为值的函数  178
8.5 作为命名空间的函数  181
8.6 闭包  182
8.7 函数属性、方法和构造函数  188
8.8 函数式编程  194
第9章 类和模块  201
9.1 类和原型  202
9.2 类和构造函数  203
9.3 JavaScript中Java式的类继承  207
9.4 类的扩充  210
9.5 类和类型  212
9.6 JavaScript中的面向对象技术  217
9.7 子类  230
9.8 ECMAScript 5 中的类  239
9.9 模块  248
第10章 正则表达式的模式匹配  253
10.1 正则表达式的定义  253
10.2 用于模式匹配的String方法  261
10.3 RegExp对象  263
第11章 JavaScript的子集和扩展  267
11.1 JavaScript的子集  268
11.2 常量和局部变量  271
11.3 解构赋值  274
11.4 迭代  276
11.5 函数简写  285
11.6 多Catch 从句  285
11.7 E4X: ECMAScript for XML  286
第12章 服务器端JavaScript  290
12.1 用Rhino脚本化Java  291
12.2 用Node实现异步I/O  297
第二部分 客户端JavaScript
第13章 Web浏览器中的JavaScript  309
13.1 客户端JavaScript  309
13.2 在HTML里嵌入JavaScript  313
13.3 JavaScript程序的执行  319
13.4 兼容性和互用性  326
13.5 可访问性  333
13.6 安全性  334
13.7 客户端框架  339
第14章 Window对象  341
14.1 计时器  342
14.2 浏览器定位和导航  343
14.3 浏览历史  345
14.4 浏览器和屏幕信息  346
14.5 对话框  348
14.6 错误处理  351
14.7 作为Window对象属性的文档元素  351
14.8 多窗口和窗体  353
第15章 脚本化文档  361
15.1 DOM概览  362
15.2 选取文档元素  364
15.3 文档结构和遍历  371
15.4 属性  375
15.5 元素的内容  378
15.6 创建、插入和删除节点  382
15.7 例子：生成目录表  387
15.8 文档和元素的几何形状和滚动  389
15.9 HTML表单  396
15.10 其他文档特性  404
第16章 脚本化CSS  410
16.1 CSS概览  411
16.2 重要的CSS属性  416
16.3 脚本化内联样式  427
16.4 查询计算出的样式  431
16.5 脚本化CSS类  433
16.6 脚本化样式表  435
第17章 事件处理  440
17.1 事件类型  442
17.2 注册事件处理程序  451
17.3 事件处理程序的调用  454
17.4 文档加载事件  459
17.5 鼠标事件  461
17.6 鼠标滚轮事件  465
17.7 拖放事件  468
17.8 文本事件  475
17.9 键盘事件  478
第18章 脚本化HTTP  484
18.1 使用XMLHttpRequest  487
18.2 借助<script>发送HTTP请求：JSONP  505
18.3 基于服务器端推送事件的Comet技术  508
第19章 jQuery类库  514
19.1 jQuery基础  515
19.2 jQuery的getter和setter  522
19.3 修改文档结构  528
19.4 用jQuery处理事件  531
19.5 动画效果  542
19.6 jQuery中的Ajax  550
19.7 工具函数  563
19.8 jQuery选择器和选取方法  566
19.9 jQuery的插件扩展  574
19.10 jQuery UI类库  577
第20章 客户端存储  579
20.1 localStorage和sessionStorage  581
20.2 cookie  586
20.3 利用IE userData来持久化数据  592
20.4 应用程序存储和离线Web应用  594
第21章 多媒体和图形编程  606
21.1 脚本化图片  606
21.2 脚本化音频和视频  608
21.3 SVG：可伸缩的矢量图形  615
21.4 <canvas>中的图形  623
第22章 HTML5 API  658
22.1 地理位置  659
22.2 历史记录管理  662
22.3 跨域消息传递  668
22.4 Web Workers  671
22.5 类型化数组和ArrayBuffer  678
22.6 Blob  682
22.7 文件系统API  691
22.8 客户端数据库  696
22.9 Web套接字  704
第三部分 JavaScript核心参考
JavaScript核心参考  711
第四部分 客户端JavaScript参考
客户端JavaScript参考  847
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript权威指南(第6版)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>高性能JavaScript
前言 1
第1章：加载和执行 1
1.1 脚本位置 2
1.2 组织脚本 4
1.3 无阻塞的脚本 5
1.3.1 延迟的脚本 5
1.3.2 动态脚本元素 6
1.3.3 XMLHttpRequest脚本注入 9
1.3.4 推荐的无阻塞模式 10
1.4 小结 14
第2章：数据访问 15
2.1 管理作用域 16
2.1.1 作用域链和标识符解析 16
2.1.2 标识符解析的性能 19
2.1.3 改变作用域链 21
2.1.4 动态作用域 24
2.1.5 闭包，作用域和内存 24
2.2 对象成员 27
2.2.1 原型 27
2.2.2 原型链 29
2.2.3 嵌套成员 30
2.2.4 缓存对象成员值 31
2.3 小结 33
第3章：DOM编程 35
3.1 浏览器中的DOM 35
3.1.1 天生就慢 36
3.2 DOM访问与修改 36
3.2.1 innerHTML对比DOM方法 37
3.2.2 节点克隆 41
3.2.3 HTML集合 42
3.2.4 遍历DOM 46
3.3 重绘与重排 50
3.3.1 重排何时发生？ 51
3.3.2 渲染树变化的排队与刷新 51
3.3.3 最小化重绘和重排 52
3.3.4 缓存布局信息 56
3.3.5 让元素脱离动画流 56
3.3.6 IE和:hover 57
3.4 事件委托 57
3.5 小结 59
第4章：算法和流程控制 61
4.1 循环 61
4.1.1 循环的类型 61
4.1.2 循环性能 63
4.1.3 基于函数的迭代 67
4.2 条件语句 68
4.2.1 if-else对比switch 68
4.2.2 优化if-else 70
4.2.3 查找表 72
4.3 递归 73
4.3.1 调用栈限制 74
4.3.2 递归模式 75
4.3.3 迭代 76
4.3.4 Memoization 77
4.4 小结 79
第5章：字符串和正则表达式 81
5.1 字符串连接 81
5.1.1 加（+）和加等于（+=）操作符 82
5.1.2 数组项连接 84
5.1.3 String.prototype.concat 86
5.2 正则表达式优化 87
5.2.1 正则表达式工作原理 88
5.2.2 理解回溯 89
5.2.3 回溯失控 91
5.2.4 基准测试的说明 96
5.2.5 更多提高正则表达式效率的方法 96
5.2.6 何时不使用正则表达式 99
5.3 去除字符串首尾空白 99
5.3.1 使用正则表达式去首尾空白 99
5.3.2 不使用正则表达式去除字符串首尾空白 102
5.3.3 混合解决方案 103
5.4 小结 104
第6章：快速响应的用户界面 107
6.1 浏览器UI线程 107
6.1.1 浏览器限制 109
6.1.2 多久才算“太久”？ 110
6.2 使用定时器让出时间片段 111
6.2.1 定时器基础 112
6.2.2 定时器的精度 114
6.2.3 使用定时器处理数组 114
6.2.4 分割任务 116
6.2.5 记录代码运行时间 118
6.2.6 定时器与性能 119
6.3 Web Workers 120
6.3.1 Worker运行环境 120
6.3.2 与Worker通信 121
6.3.3 加载外部文件 122
6.3.4 实际应用 122
6.4 小结 124
第7章：Ajax 125
7.1 数据传输 125
7.1.1 请求数据 125
7.1.2 发送数据 131
7.2 数据格式 134
7.2.1 XML 134
7.2.2 JSON 137
7.2.3 HTML 141
7.2.4 自定义格式 142
7.2.5 数据格式总结 144
7.3 Ajax性能指南 145
7.3.1 缓存数据 145
7.3.2 了解Ajax类库的限制 148
7.4 总结 149
第8章：编程实践 151
8.1 避免双重求值（Double Evaluation） 151
8.2 使用Object/Array直接量 153
8.3 不要重复工作 154
8.3.1 延迟加载 154
8.3.2 条件预加载 156
8.4 使用速度快的部分 156
8.4.1 位操作 156
8.4.2 原生方法 159
8.5 小结 161
第9章：构建并部署高性能JavaScript应用 163
9.1 Apache Ant 163
9.2 合并多个JavaScript文件 165
9.3 预处理JavaScript文件 166
9.4 JavaScript压缩 168
9.5 构建时处理对比运行时处理 170
9.6 JavaScript的HTTP压缩 170
9.7 缓存JavaScript文件 171
9.8 处理缓存问题 172
9.9 使用内容分发网络（CDN） 173
9.10 部署JavaScript资源 173
9.11 敏捷JavaScript构建过程 174
9.12 小结 175
第10章：工具 177
10.1 JavaScript性能分析 178
10.2 YUI Profiler 179
10.3 匿名函数 182
10.4 Firebug 183
10.41 控制台面板分析工具 183
10.4.2 Console API 184
10.4.3 网络面板 185
10.5 IE开发人员工具 186
10.6 Safari Web查看器 188
10.6.1 描述文件面板 189
10.6.2 资源面板 191
10.7 Chrome开发人员工具 192
10.8 脚本阻塞 193
10.9 Page Speed 194
10.10 Fiddler 196
10.11 YSlow 198
10.12 dyna Trace Ajax Edition 199
10.13 总结 202
索引 203
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>高性能JavaScript
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>你不知道的JavaScript（上卷）
前言　　VIII
第一部分　作用域和闭包
序　　2
第1章　作用域是什么　　4
1.1　编译原理　　4
1.2　理解作用域　　6
1.2.1　演员表　　6
1.2.2　对话　　6
1.2.3　编译器有话说　　7
1.2.4　引擎和作用域的对话　　9
1.2.5　小测验　　10
1.3　作用域嵌套　　10
1.4　异常　　12
1.5　小结　　12
第2章　词法作用域　　14
2.1　词法阶段　　14
2.2　欺骗词法　　17
2.2.1　eval　　17
2.2.2　with　　18
2.2.3　性能　　20
2.3　小结　　21
第3章　函数作用域和块作用域　　22
3.1　函数中的作用域　　22
3.2　隐藏内部实现　　23
3.3　函数作用域　　26
3.3.1　匿名和具名　　27
3.3.2　立即执行函数表达式　　28
3.4　块作用域　　30
3.4.1　with　　31
3.4.2　try/catch　　31
3.4.3　let　　32
3.4.4　const　　35
3.5　小结　　36
第4章　提升　　37
4.1　先有鸡还是先有蛋　　37
4.2　编译器再度来袭　　38
4.3　函数优先　　40
4.4　小结　　41
第5章　作用域闭包　　43
5.1　启示　　43
5.2　实质问题　　44
5.3　现在我懂了　　47
5.4　循环和闭包　　48
5.5　模块　　51
5.5.1　现代的模块机制　　54
5.5.2　未来的模块机制　　56
5.6　小结　　57
附录A　动态作用域　　58
附录B　块作用域的替代方案　　60
附录C　this词法　　64
附录D　致谢　　67
第二部分　this和对象原型
序　　72
第1章　关于this　　74
1.1　为什么要用this　　74
1.2　误解　　76
1.2.1　指向自身　　76
1.2.2　它的作用域　　79
1.3　this到底是什么　　80
1.4　小结　　80
第2章　this全面解析　　82
2.1　调用位置　　82
2.2　绑定规则　　83
2.2.1　默认绑定　　83
2.2.2　隐式绑定　　85
2.2.3　显式绑定　　87
2.2.4　new绑定　　90
2.3　优先级　　91
2.4　绑定例外　　95
2.4.1　被忽略的this　　96
2.4.2　间接引用　　97
2.4.3　软绑定　　98
2.5　this词法　　99
2.6　小结　　101
第3章　对象　　102
3.1　语法　　102
3.2　类型　　103
3.3　内容　　105
3.3.1　可计算属性名　　106
3.3.2　属性与方法　　107
3.3.3　数组　　108
3.3.4　复制对象　　109
3.3.5　属性描述符　　111
3.3.6　不变性　　114
3.3.7　[[Get]]　　115
3.3.8　[[Put]]　　116
3.3.9　Getter和Setter　　117
3.3.10　存在性　　119
3.4　遍历　　121
3.5　小结　　124
第4章　混合对象“类”　　126
4.1　类理论　　126
4.1.1　“类”设计模式　　127
4.1.2　JavaScript中的“类”　　128
4.2　类的机制　　128
4.2.1　建造　　128
4.2.2　构造函数　　130
4.3　类的继承　　130
4.3.1　多态　　132
4.3.2　多重继承　　134
4.4　混入　　134
4.4.1　显式混入　　135
4.4.2　隐式混入　　139
4.5　小结　　140
第5章　原型　　142
5.1　[[Prototype]]　　142
5.1.1　Object.prototype　　144
5.1.2　属性设置和屏蔽　　144
5.2　“类”　　146
5.2.1　“类”函数　　146
5.2.2　“构造函数”　　149
5.2.3　技术　　151
5.3　（原型）继承　　153
5.4　对象关联　　159
5.4.1　创建关联　　159
5.4.2　关联关系是备用　　161
5.5　小结　　162
第6章　行为委托　　164
6.1　面向委托的设计　　165
6.1.1　类理论　　165
6.1.2　委托理论　　166
6.1.3　比较思维模型　　170
6.2　类与对象　　173
6.2.1　控件“类”　　174
6.2.2　委托控件对象　　176
6.3　更简洁的设计　　178
6.4　更好的语法　　182
6.5　内省　　185
6.6　小结　　187
附录A　ES6中的Class　　189
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>你不知道的JavaScript（上卷）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript设计模式与开发实践
第一部分　基础知识
第1章　面向对象的JavaScript
1.1 动态类型语言和鸭子类型　　2
1.2 多态　　4
1.3 封装　　12
1.4 原型模式和基于原型继承的JavaScript对象系统　　14
第2章　this、call和apply
2.1 this　　24
2.2 call和apply　　29
第3章　闭包和高阶函数
3.1 闭包 35
3.2 高阶函数　　44
3.3 小结　　58
第二部分 设计模式
第4章　单例模式
4.1 实现单例模式　　60
4.2 透明的单例模式　　61
4.3 用代理实现单例模式　　62
4.4 JavaScript中的单例模式　　63
4.5 惰性单例　　65
4.6 通用的惰性单例　　68
4.7 小结　　70
第5章　策略模式
5.1 使用策略模式计算奖金　　72
5.2 JavaScript 版本的策略模式　　75
5.3 多态在策略模式中的体现　　76
5.4 使用策略模式实现缓动动画　　76
5.5 更广义的“算法”　　80
5.6 表单校验　　80
5.7 策略模式的优缺点　　86
5.8 一等函数对象与策略模式　　86
5.9 小结　　87
第6章　代理模式
6.1 第一个例子——小明追MM的故事　　88
6.2 保护代理和虚拟代理　　91
6.3 虚拟代理实现图片预加载　　91
6.4 代理的意义　　93
6.5 代理和本体接口的一致性　　94
6.6 虚拟代理合并HTTP 请求　　95
6.7 虚拟代理在惰性加载中的应用　　97
6.8 缓存代理　　99
6.9 用高阶函数动态创建代理　　100
6.10 其他代理模式　　101
6.11 小结　　102
第7章　迭代器模式
7.1 jQuery 中的迭代器　　103
7.2 实现自己的迭代器　　104
7.3 内部迭代器和外部迭代器　　104
7.4 迭代类数组对象和字面量对象　　106
7.5 倒序迭代器　　106
7.6 中止迭代器　　107
7.7 迭代器模式的应用举例　　107
7.8 小结　　109
第8章　发布—订阅模式
8.1 现实中的发布—订阅模式　　110
8.2 发布—订阅模式的作用　　110
8.3 DOM 事件　　111
8.4 自定义事件　　112
8.5 发布—订阅模式的通用实现　　113
8.6 取消订阅的事件　　115
8.7 真实的例子——网站登录　　115
8.8 全局的发布—订阅对象　　117
8.9 模块间通信　　119
8.10 必须先订阅再发布吗　　120
8.11 全局事件的命名冲突　　121
8.12 JavaScript实现发布—订阅模式的便利性　　124
8.13 小结　　124
第9章　命令模式
9.1 命令模式的用途　　125
9.2 命令模式的例子——菜单程序　　126
9.3 JavaScript中的命令模式　　128
9.4 撤销命令　　130
9.5 撤消和重做　　132
9.6 命令队列　　134
9.7 宏命令　　134
9.8 智能命令与傻瓜命令　　135
9.9 小结　　136
第10章　组合模式
10.1 回顾宏命令　　138
10.2 组合模式的用途　　139
10.3 请求在树中传递的过程　　139
10.4 更强大的宏命令　　140
10.5 抽象类在组合模式中的作用　　143
10.6 透明性带来的安全问题　　144
10.7 组合模式的例子——扫描文件夹　　145
10.8 一些值得注意的地方　　147
10.9 引用父对象　　148
10.10 何时使用组合模式　　150
10.11 小结　　150
第11章　模板方法模式
11.1 模板方法模式的定义和组成　　151
11.2 第一个例子——Coffee or Tea　　151
11.3 抽象类　　156
11.4 模板方法模式的使用场景　　159
11.5 钩子方法　　160
11.6 好莱坞原则　　162
11.7 真的需要“继承”吗　　162
11.8 小结　　164
第12章　享元模式
12.1 初识享元模式　　165
12.2 内部状态与外部状态　　166
12.3 享元模式的通用结构　　167
12.4 文件上传的例子　　167
12.5 享元模式的适用性　　173
12.6 再谈内部状态和外部状态　　173
12.7 对象池　　175
12.8 小结　　178
第13章　职责链模式
13.1 现实中的职责链模式　　179
13.2 实际开发中的职责链模式　　180
13.3 用职责链模式重构代码　　181
13.4 灵活可拆分的职责链节点　　183
13.5 异步的职责链　　184
13.6 职责链模式的优缺点　　185
13.7 用AOP 实现职责链　　186
13.8 用职责链模式获取文件上传对象　　187
13.9 小结　　188
第14章　中介者模式
14.1 现实中的中介者　　190
14.2 中介者模式的例子——泡泡堂游戏　　191
14.3 中介者模式的例子——购买商品　　199
14.4 小结　　207
第15章　装饰者模式
15.1 模拟传统面向对象语言的装饰者模式　　210
15.2 装饰者也是包装器　　211
15.3 回到JavaScript 的装饰者　　212
15.4 装饰函数　　212
15.5 用AOP 装饰函数　　214
15.6 AOP 的应用实例　　216
15.7 装饰者模式和代理模式　　222
15.8 小结　　223
第16章　状态模式
16.1 初识状态模式　　224
16.2 状态模式的定义　　230
16.3 状态模式的通用结构　　230
16.4 缺少抽象类的变通方式　　　231
16.5 另一个状态模式示例——文件上传　　232
16.6 状态模式的优缺点　　241
16.7 状态模式中的性能优化点　　241
16.8 状态模式和策略模式的关系　　241
16.9 JavaScript版本的状态机　　242
16.10 表驱动的有限状态机　　244
16.11 实际项目中的其他状态机　　245
16.12 小结　　245
第17章　适配器模式
17.1 现实中的适配器　　246
17.2 适配器模式的应用　　247
17.3 小结　　250
第三部分 设计原则和编程技巧
第18章　单一职责原则
18.1 设计模式中的SRP原则　　252
18.2 何时应该分离职责　　256
18.3 违反SRP原则　　256
18.4 SRP 原则的优缺点　　257
第19章　最少知识原则
19.1 减少对象之间的联系　　258
19.2 设计模式中的LKP原则　　259
19.3 封装在LKP 原则中的体现　　261
第20章　开放-封闭原则
20.1 扩展window.onload函数　　263
20.2 开放和封闭　　264
20.3 用对象的多态性消除条件分支　　265
20.4 找出变化的地方　　266
20.5 设计模式中的开放—封闭原则　　268
20.6 开放—封闭原则的相对性　　270
20.7 接受第一次愚弄　　270
第21章　接口和面向接口编程
21.1 回到Java的抽象类　　271
21.2 interface　　276
21.3 JavaScript 语言是否需要抽象类和interface　　275
21.4 用鸭子类型进行接口检查　　277
21.5 用TypeScript 编写基于interface的命令模式　　278
第22章　代码重构
22.1 提炼函数　　282
22.2 合并重复的条件片段　　283
22.3 把条件分支语句提炼成函数　　284
22.4 合理使用循环　　285
22.5 提前让函数退出代替嵌套条件分支　　285
22.6 传递对象参数代替过长的参数列表　　286
22.7 尽量减少参数数量　　287
22.8 少用三目运算符　　288
22.9 合理使用链式调用　　288
22.10 分解大型类　　289
22.11 用return退出多重循环　　290
参考文献　　293
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript设计模式与开发实践
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript语言精粹
前言................................................................................................................................xv
第1 章 精华.................................................................................................................. 1
为什么要使用JavaScript .......................................................................................................2
分析JavaScript......................................................................................................................2
一个简单的试验场.................................................................................................................4
第2 章 语法.................................................................................................................. 5
空白.......................................................................................................................................5
标识符...................................................................................................................................6
数字.......................................................................................................................................7
字符串...................................................................................................................................8
语句.....................................................................................................................................10
表达式.................................................................................................................................15
字面量.................................................................................................................................18
函数.....................................................................................................................................19
第3 章 对象................................................................................................................ 20
对象字面量..........................................................................................................................20
检索.....................................................................................................................................21
更新.....................................................................................................................................22
引用.....................................................................................................................................22
原型.....................................................................................................................................22
反射.....................................................................................................................................23
枚举.....................................................................................................................................24
删除.....................................................................................................................................24
减少全局变量污染...............................................................................................................25
第4 章 函数................................................................................................................ 26
函数对象..............................................................................................................................26
函数字面量..........................................................................................................................27
调用.....................................................................................................................................27
参数.....................................................................................................................................30
返回.....................................................................................................................................31
异常.....................................................................................................................................31
扩充类型的功能...................................................................................................................32
递归.....................................................................................................................................33
作用域.................................................................................................................................36
闭包.....................................................................................................................................36
回调.....................................................................................................................................39
模块.....................................................................................................................................40
级联.....................................................................................................................................42
柯里化.................................................................................................................................43
记忆.....................................................................................................................................43
第5 章 继承................................................................................................................. 46
伪类.....................................................................................................................................46
对象说明符..........................................................................................................................49
原型.....................................................................................................................................50
函数化.................................................................................................................................51
部件.....................................................................................................................................55
第6 章 数组................................................................................................................. 57
数组字面量..........................................................................................................................57
长度.....................................................................................................................................58
删除.....................................................................................................................................59
枚举.....................................................................................................................................59
容易混淆的地方...................................................................................................................60
方法.....................................................................................................................................60
指定初始值..........................................................................................................................62
第7 章 正则表达式..................................................................................................... 64
一个例子..............................................................................................................................65
结构.....................................................................................................................................69
元素.....................................................................................................................................71
第8 章 方法................................................................................................................. 77
Array ....................................................................................................................................77
Function ...............................................................................................................................83
Number ................................................................................................................................84
Object...................................................................................................................................85
RegExp ................................................................................................................................86
String....................................................................................................................................88
第9 章 代码风格........................................................................................................ 94
第10 章 优美的特性................................................................................................... 98
附录A 毒瘤............................................................................................................... 101
附录B 糟粕............................................................................................................... 109
附录C JSLint ............................................................................................................. 115
附录D 语法图........................................................................................................... 127
附录E JSON............................................................................................................... 138
索引.............................................................................................................................. 149
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript语言精粹
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript DOM编程艺术
第1章 javascript简史 1
1.1　javascript的起源 2
1.2　浏览器之争 3
1.2.1　dhtml 3
1.2.2　浏览器之间的冲突 4
1.3　制定标准 5
1.3.1　浏览器以外的考虑 5
1.3.2　浏览器之争的结局 6
1.3.3　新的开始 6
1.4　小结 7
第2章 javascript语法 9
2.1　准备工作 9
2.2　语法 11
2.3　语句 11
2.4　变量 13
2.4.1　数据类型 15
2.4.2　数组 17
2.5　操作 20
2.6　条件语句 22
2.6.1　比较操作符 23
.2.6.2　逻辑操作符 24
2.7　循环语句 25
2.7.1　while 25
2.7.2　do...while 26
2.7.3　for 27
2.8　函数 27
2.9　对象 31
2.9.1　内建对象 32
2.9.2　宿主对象 33
2.10　小结 33
第3章 dom 35
3.1　文档：dom中的“d” 35
3.2　对象：dom中的“o” 35
3.3　模型：dom中的“m” 36
3.3.1　节点 38
3.3.2　getelementbyid()方法 42
3.3.3　getelementsbytagname()方法 44
3.4　趁热打铁 46
3.4.1　getattribute()方法 46
3.4.2　setattribute()方法 48
3.5　小结 49
第4章 案例研究：javascript美术馆 51
4.1　编写标记语言文档 52
4.2　编写javascript函数 54
4.2.1　dom之前的解决方案 55
4.2.2　showpic()函数的代码清单 56
4.3　javascript函数的调用 56
4.4　对javascript函数进行功能扩展 59
4.4.1　childnodes属性 59
4.4.2　nodetype属性 60
4.4.3　在html文档里增加一段描述性文本 61
4.4.4　用javascript代码改变＜p＞元素的文本内容 62
4.4.5　nodevalue属性 63
4.4.6　firstchild和lastchild属性 63
4.4.7　利用nodevalue属性刷新＜p＞元素的文本内容 64
4.5　小结 68
第5章 javascript编程原则和良好习惯 69
5.1　不要误解javascript 69
5.1.1　不要归罪于javascript 70
5.1.2　flash的遭遇 71
5.1.3　质疑 72
5.2　预留退路 72
5.2.1　“javascript:”伪协议 74
5.2.2　内嵌的事件处理函数 74
5.2.3　有何不好 74
5.3　向css学习 75
5.4　分离javascript 78
5.5　向后兼容性 80
5.6　小结 82
第6章 案例研究：javascript美术馆改进版 83
6.1　快速回顾 84
6.2　解决“预留退路”问题 84
6.3　解决“分离javascript”问题 85
6.3.1　添加事件处理函数 86
6.3.2　进行必要的检查 87
6.3.3　创建必要的变量 89
6.3.4　创建循环 90
6.3.5　完成必要的操作 91
6.3.6　完成javascript函数 91
6.3.7　把多个javascript函数绑定到onload事件处理函数上 92
6.4　javascript函数的优化：不要做太多的假设 94
6.4.1　不放过每个细节 97
6.4.2　键盘浏览功能 99
6.4.3　慎用onkeypress事件处理函数 100
6.4.4　把javascript与css结合起来 102
6.5　dom core和html-dom 105
6.6　小结 106
第7章 动态创建html内容 109
7.1　document.write()方法 110
7.2　innerhtml属性 111
7.3　dom提供的方法 114
7.3.1　createelement()方法 115
7.3.2　appendchild()方法 116
7.3.3　createtextnode()方法 117
7.4　重回“javascript美术馆” 121
7.4.1　insertbefore()方法 123
7.4.2　“javascript美术馆”二次改进版 127
7.5　小结 131
7.6　下章简介 132
第8章 充实文档的内容 133
8.1 不应该做的事情 133
8.2 把“不可见”变成“可见” 134
8.3 原始内容 135
8.4 xhtml文档 137
8.5 css 138
8.6 javascript代码 139
8.6.1 显示“缩略词语表” 139
8.6.2 显示“文献来源链接表” 152
8.6.3 显示“快速访问键清单” 158
8.7 小结 161
8.8 下章简介 162
第9章 css-dom 163
9.1 三位一体的网页 163
9.1.1 结构层 163
9.1.2 表示层 164
9.1.3 行为层 164
9.1.4 分离 165
9.2 style属性 165
9.2.1 样式信息的检索 167
9.2.2 设置样式信息 172
9.3 何时该用dom脚本去设置样式信息 174
9.3.1 根据元素在节点树里的位置来设置样式信息 174
9.3.2 根据某种条件来设置样式信息 178
9.3.3 对事件做出响应 182
9.4 classname属性 184
9.5 小结 188
第10章 用javascript实现动画效果 191
10.1 何为动画 191
10.1.1 位置 192
10.1.2 时间 194
10.1.3 抽象化 198
10.2 实用的动画 205
10.2.1 问题的提出 205
10.2.2 问题的解决 207
10.2.3 css 208
10.2.4 javascript代码 210
10.2.5 与变量的作用域有关的问题 214
10.3 改进动画效果 216
10.4 最后的优化 219
10.5 小结 224
第11章 学以致用：javascript网站设计实战 225
11.1 案例背景介绍 225
11.1.1 原始材料 226
11.1.2 网站的结构 226
11.1.3 网页的结构 227
11.2 页面视觉效果设计 228
11.3 css 229
11.4 颜色 231
11.4.1 布局 232
11.4.2 字型 234
11.5 xhtml文档 236
11.6 javascript脚本 236
11.6.1 当前页面的标识 238
11.6.2 javascript动画 242
11.6.3 内部浏览 247
11.6.4 javascript美术馆 251
11.6.5 改进表格 254
11.6.6 改进表单 259
11.7 小结 268
11.8 下章简介 268
第12章 展望dom脚本编程技术 269
12.1 web的现状 269
12.1.1 web浏览器 270
12.1.2 web设计师 271
12.1.3 三条腿的凳子 272
12.2 ajax技术 274
12.2.1 xmlhttprequest对象 275
12.2.2 ajax技术的爆发 278
12.2.3 循序渐进：如何运用ajax技术 279
12.2.4 ajax技术的未来 281
12.3 web应用 282
12.4 小结 283
附录 dom方法和属性 285
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript DOM编程艺术
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript权威指南
前言
第1章  JavaScript概述
第一部分  核心JavaScript
第2章  词法结构
第3章  数据类型和值
第4章  变量
第5章  表达式和运算符
第6章  语句
第7章  对象和数组
第8章  函数
第9章  类、构造函数和原型
第10章  模块和名字空间
第11章  使用正则表达式的模式匹配
第12章  脚本化Java
第二部分  客户端JavaScript
第13章  Web浏览器中的JavaScript
第14章  脚本化浏览器窗口
第15章  脚本化文档
第16章  层叠样式表和动态HTML
第17章  事件和事件处理
第18章  表单和表单元素
第19章  cookie和客户端持久性
第20章  脚本化HTTP
第21章  JavaScript和XML
第22章  脚本化客户端图形
第23章  脚本化JavaApplet和Flash电影
第三部分  核心JavaScript参考手册
核心JavaScript参考手册
第四部分  客户端JavaScript参考手册
客户端JavaScript参考手册
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript权威指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>编写可维护的JavaScript
目录
第一部分　编程风格	1
第1章　基本的格式化	4
1.1　缩进层级	4
1.2　语句结尾	7
1.3　行的长度	8
1.4　换行	9
1.5　空行	10
1.6　命名	11
1.6.1　变量和函数	12
1.6.2　常量	13
1.6.3　构造函数	14
1.7　直接量	15
1.7.1　字符串	15
1.7.2　数字	16
1.7.3　null	17
1.7.4　undefined	18
1.7.5　对象直接量	19
1.7.6　数组直接量	20
第2章　注释	21
2.1　单行注释	21
2.2　多行注释	23
2.3　使用注释	24
2.3.1　难于理解的代码	25
2.3.2　可能被误认为错误的代码	26
2.3.3　浏览器特性hack	26
2.4　文档注释	27
第3章　语句和表达式	30
3.1　花括号的对齐方式	31
3.2　块语句间隔	32
3.3　switch语句	33
3.3.1　缩进	33
3.3.2　case语句的“连续执行”	35
3.3.3　default	36
3.4　with语句	37
3.5　for循环	37
3.6　for-in循环	39
第4章　变量、函数和运算符	41
4.1　变量声明	41
4.2　函数声明	44
4.3　函数调用间隔	45
4.4　立即调用的函数	46
4.5　严格模式	47
4.6　相等	49
4.6.1　eval()	51
4.6.2　原始包装类型	52
第二部分　编程实践	54
第5章　UI层的松耦合	55
5.1　什么是松耦合	56
5.2　将JavaScript从CSS中抽离	57
5.3　将CSS从JavaScript中抽离	58
5.4　将JavaScript从HTML中抽离	60
5.5　将HTML从JavaScript中抽离	62
5.5.1　方法1：从服务器加载	63
5.5.2　方法2：简单客户端模板	64
5.5.3　方法3：复杂客户端模板	67
第6章　避免使用全局变量	70
6.1　全局变量带来的问题	70
6.1.1　命名冲突	71
6.1.2　代码的脆弱性	71
6.1.3　难以测试	72
6.2　意外的全局变量	72
避免意外的全局变量	73
6.3　单全局变量方式	74
6.3.1　命名空间	76
6.3.2　模块	78
6.4　零全局变量	81
第7章　事件处理	83
7.1　典型用法	83
7.2　规则1：隔离应用逻辑	84
7.3　规则2：不要分发事件对象	85
第8章　避免“空比较”	88
8.1　检测原始值	88
8.2　检测引用值	90
8.2.1　检测函数	92
8.2.2　检测数组	94
8.3　检测属性	95
第9章　将配置数据从代码中分离出来	98
9.1　什么是配置数据	98
9.2　抽离配置数据	99
9.3　保存配置数据	100
第10章　抛出自定义错误	103
10.1　错误的本质	103
10.2　在JavaScript中抛出错误	104
10.3　抛出错误的好处	105
10.4　何时抛出错误	106
10.5　try-catch语句	107
10.6　错误类型	109
第11章　不是你的对象不要动	112
11.1　什么是你的	112
11.2　原则	113
11.2.1　不覆盖方法	113
11.2.2　不新增方法	114
11.2.3　不删除方法	116
11.3　更好的途径	117
11.3.1　基于对象的继承	118
11.3.2　基于类型的继承	119
11.3.3　门面模式	120
11.4　关于Polyfill的注解	121
11.5　阻止修改	122
第12章　浏览器嗅探	125
12.1　User-Agent检测	125
12.2　特性检测	127
12.3　避免特性推断	129
12.4　避免浏览器推断	130
12.5　应当如何取舍	134
第三部分　自动化	135
第13章　文件和目录结构	137
13.1　最佳实践	137
13.2　基本结构	138
第14章　Ant	143
14.1　安装	143
14.2　配置文件	143
14.3　执行构建	145
14.4　目标操作的依赖	145
14.5　属性	146
14.6　Buildr项目	148
第15章　校验	149
15.1　查找文件	149
15.2　任务	150
15.3　增强的目标操作	152
15.4　其他方面的改进	153
15.5　Buildr任务	154
第16章　文件合并和加工	156
16.1　任务	156
16.2　行尾结束符	157
16.3　文件头和文件尾	158
16.4　加工文件	159
第17章　文件精简和压缩	163
17.1　文件精简	163
17.1.1　使用YUI Compressor精简代码	165
17.1.2　用Closure Compiler精简	167
17.1.3　使用UglifyJS精简	169
17.2　压缩	170
17.2.1　运行时压缩	171
17.2.2　构建时压缩	171
第18章　文档化	175
18.1　JSDoc Toolkit	175
18.2　YUI Doc	177
第19章　自动化测试	180
19.1　YUI Test Selenium引擎	180
19.1.1　配置一台Selenium服务器	181
19.1.2　配置YUI Test Selenium引擎	181
19.1.3　使用YUI Test Selenium引擎	181
19.1.4　Ant的配置写法	183
19.2　Yeti	184
19.3　PhantomJS	186
19.3.1　安装及使用	186
19.3.2　Ant的配置写法	187
19.4　JsTestDriver	188
19.4.1　安装及使用	188
19.4.2　Ant的配置写法	189
第20章　组装到一起	191
20.1　被忽略的细节	191
20.2　编制打包计划	192
20.2.1　开发版本的构建	193
20.2.2　集成版本的构建	194
20.2.3　发布版本的构建	195
20.3　使用CI系统	196
20.3.1　Jenkins	196
20.3.2　其他CI系统	199
附录A　JavaScript编码风格指南	200
附录B　JavaScript工具集	223
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>编写可维护的JavaScript
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>ppk谈JavaScript
第1章　目标
a 概念回顾
在浏览器中处理交互
胖与瘦
javascript的目标
b 技术概览
标准化
版本
安全
c javascript的历史
错误的开始
事实标准
css变革
新的开始
下一步
第2章　大背景
a css变革
无侵入脚本编程
三个层
分离关注点
b 表现与结构的分离
css修改
更改结构还是表现
c 行为与结构的分离
独立文件中的函数
从html中移除事件处理程序
d 行为和表现的分离
下拉菜单：hover或mouseover/mouseout
相同的效果与相似的效果
e 可访问性概览
什么是可访问性
无脚本
没有鼠标
屏幕阅读器
屏幕阅读器和事件
可访问性和可用性
f 可访问性规则
条理分明的html
产生对脚本用户有意义的内容
重定向用户
键盘用户
[ noscript ]标签
g 范例脚本
限长的文本输入区
易用的表单
表单验证
下拉菜单
编辑样式表
三明治拾取器
xmlhttp测速计
站点调查
第3章　浏览器
a 浏览器
mozilla家族
windows的explorer
safari
opera
其他图形桌面浏览器
移动电话
屏幕阅读器
b 兼容性问题
问题
解决方案
c 对象检测
对象检测是如何工作的
我们该走多远
d 浏览器检测
为什么浏览器检测行不通
浏览器检测的军备竞赛
拆解浏览器字符串
浏览器检测的正确使用
e 调试
错误消息
处理浏览器的bug
范例
报告浏览器bug
第4章　准备
第5章　核心
第6章　bom
第7章　事件
第8章　dom
第9章　css修改
第10章　数据检索
后记
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>ppk谈JavaScript
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>基于MVC的JavaScript Web富应用开发
目  录
第1章 MVC和类 ............................................................1
最初 .........................................................................................................................1
增加结构 ..................................................................................................................2
什么是MVC ............................................................................................................2
模型 ..................................................................................................................3
视图 ..................................................................................................................4
控制器 ..............................................................................................................5
向模块化进军，创建类 ............................................................................................6
给类添加函数...........................................................................................................7
给“类”库添加方法 ...............................................................................................8
基于原型的类继承 .................................................................................................10
给“类”库添加继承 ............................................................................................. 11
函数调用 ................................................................................................................12
控制“类”库的作用域 ..........................................................................................15
添加私有函数.........................................................................................................17
“类”库 ..................................................................................................................18
第2章 事件和监听 ........................................................21
监听事件 ................................................................................................................21
事件顺序 ................................................................................................................22
取消事件 ................................................................................................................23
事件对象 ................................................................................................................23
事件库 ....................................................................................................................25
切换上下文 ............................................................................................................26
委托事件 ................................................................................................................26
自定义事件 ............................................................................................................27
自定义事件和jQuery 插件 .....................................................................................28
DOM 无关事件 ......................................................................................................30
第3章 模型和数据 ........................................................33
MVC 和命名空间 ...................................................................................................33
构建对象关系映射（ORM） ...................................................................................34
原型继承 ........................................................................................................35
添加ORM 属性 ..............................................................................................36
持久化记录.....................................................................................................37
增加ID 支持 ..........................................................................................................39
寻址引用 ................................................................................................................40
装载数据 ................................................................................................................41
直接嵌套数据 .................................................................................................42
通过Ajax 载入数据 ........................................................................................42
JSONP ............................................................................................................46
跨域请求的安全性 .........................................................................................46
向ORM 中添加记录 ..............................................................................................47
本地存储数据.........................................................................................................47
给ORM 添加本地存储 ..........................................................................................49
将新记录提交给服务器 ..........................................................................................51
第4章 控制器和状态 .....................................................53
模块模式 ................................................................................................................54
全局导入 ........................................................................................................54
全局导出 ........................................................................................................54
添加少量上下文 .....................................................................................................55
抽象出库 ........................................................................................................56
文档加载完成后载入控制器 ..........................................................................58
访问视图 ........................................................................................................59
委托事件 ........................................................................................................61
状态机 ....................................................................................................................63
路由选择 ................................................................................................................65
使用URL 中的hash .......................................................................................65
检测hash 的变化 ............................................................................................66
抓取Ajax .......................................................................................................67
使用HTML5 History API ...............................................................................68
第5章 视图和模板 ........................................................71
动态渲染视图.........................................................................................................71
模板 .......................................................................................................................73
模板Helpers ...................................................................................................75
模板存储 ........................................................................................................75
绑定 .......................................................................................................................77
模型中的事件绑定 .........................................................................................78
第6章 依赖管理 ...........................................................81
CommonJS .............................................................................................................82
模块的声明.....................................................................................................83
模块和浏览器 .................................................................................................83
模块加载器 ............................................................................................................84
Yabble ............................................................................................................84
RequireJS .......................................................................................................85
包装模块 ................................................................................................................87
模块的按需加载 .....................................................................................................88
LABjs .............................................................................................................89
无交互行为内容的闪烁（FUBC） ..........................................................................89
第7章 使用文件 ...........................................................91
浏览器支持 ............................................................................................................91
获取文件信息.........................................................................................................92
文件输入 ................................................................................................................92
拖曳 .......................................................................................................................93
拖曳 ................................................................................................................94
释放拖曳 ........................................................................................................96
撤销默认的Drag/Drop ...................................................................................97
复制和粘贴 ............................................................................................................97
复制 ................................................................................................................98
粘贴 ................................................................................................................99
读文件 .................................................................................................................. 100
二进制大文件和文件切割 ............................................................................ 101
自定义浏览器按钮 ............................................................................................... 102
上传文件 .............................................................................................................. 102
Ajax 进度条 .................................................................................................. 104
jQuery 拖曳上传 .................................................................................................. 106
创建拖曳目标区域 ....................................................................................... 106
上传文件 ...................................................................................................... 107
第8章 实时Web .........................................................109
实时Web 的发展历史 .......................................................................................... 109
WebSocket ............................................................................................................ 110
Node.js 和Socket.IO .................................................................................... 114
实时架构 .............................................................................................................. 116
感知速度 .............................................................................................................. 117
第9章 测试和调试 ......................................................119
单元测试 .............................................................................................................. 121
断言 .............................................................................................................. 121
QUnit ............................................................................................................ 122
Jasmine ......................................................................................................... 126
驱动 ..................................................................................................................... 128
无界面的测试....................................................................................................... 131
Zombie ......................................................................................................... 132
Ichabod ......................................................................................................... 134
分布式测试 .......................................................................................................... 135
提供支持 .............................................................................................................. 136
调试工具 .............................................................................................................. 136
Web Inspector ............................................................................................... 136
Firebug ......................................................................................................... 138
控制台 .................................................................................................................. 139
控制台函数................................................................................................... 140
使用JavaScript 调试器 ........................................................................................ 141
分析网络请求....................................................................................................... 143
Profile 和函数运行时间 ....................................................................................... 144
第10章 部署 ..............................................................147
性能 ..................................................................................................................... 147
缓存 ..................................................................................................................... 148
源码压缩（Minification） ..................................................................................... 150
Gzip 压缩 ............................................................................................................. 151
使用CDN ............................................................................................................. 152
审查工具 .............................................................................................................. 153
外部资源 .............................................................................................................. 154
第11章 Spine类库 .....................................................155
设置 ..................................................................................................................... 156
类 ......................................................................................................................... 156
实例化 .......................................................................................................... 156
类扩展 .......................................................................................................... 157
上下文 .......................................................................................................... 158
事件 ..................................................................................................................... 159
模型 ..................................................................................................................... 160
获取记录 ...................................................................................................... 161
模型事件 ...................................................................................................... 162
校验 .............................................................................................................. 163
持久化 .......................................................................................................... 163
控制器 .................................................................................................................. 165
代理 .............................................................................................................. 166
元素 .............................................................................................................. 167
委托事件 ...................................................................................................... 167
控制器事件................................................................................................... 168
全局事件 ...................................................................................................... 168
渲染模式 ...................................................................................................... 169
元素模式 ...................................................................................................... 169
构建联系人管理应用 ........................................................................................... 171
联系人模型................................................................................................... 172
侧边栏控制器 ............................................................................................... 173
联系人控制器 ............................................................................................... 175
应用程序控制器 ........................................................................................... 178
第12章 Backbone类库 ...............................................181
模型 ..................................................................................................................... 182
模型和属性................................................................................................... 182
集合 ..................................................................................................................... 184
控制集合的内部顺序 .................................................................................... 185
视图 ..................................................................................................................... 185
渲染视图 ...................................................................................................... 186
委托事件 ...................................................................................................... 187
绑定和上下文 ............................................................................................... 187
控制器 .................................................................................................................. 188
与服务器的同步 ................................................................................................... 190
填充集合 ...................................................................................................... 192
服务器端 ...................................................................................................... 192
自定义行为................................................................................................... 193
构建To-Do 列表应用 ........................................................................................... 195
第13章 JavaScriptMVC类库 ......................................203
设置 ..................................................................................................................... 204
Class ..................................................................................................................... 204
实例化 .......................................................................................................... 205
调用基类的方法 ........................................................................................... 205
代理 .............................................................................................................. 205
静态继承 ...................................................................................................... 206
自省 .............................................................................................................. 206
一个模型的例子 ........................................................................................... 207
模型 ..................................................................................................................... 207
属性和可观察 ............................................................................................... 208
扩展模型 ...................................................................................................... 210
Setter ............................................................................................................ 210
Defaults ........................................................................................................ 211
辅助方法 ...................................................................................................... 211
服务封装 ...................................................................................................... 212
类型转换 ...................................................................................................... 215
CRUD 事件 .................................................................................................. 216
在视图中使用客户端模板 .................................................................................... 216
基本用法 ...................................................................................................... 217
jQuery 修改器 .............................................................................................. 217
用Script 标签加载 ....................................................................................... 217
$.View 和子模板 .......................................................................................... 218
延时对象 ...................................................................................................... 218
打包、预加载和性能 .................................................................................... 219
$.Controller ：jQuery 插件工厂 ............................................................................ 220
概览 .............................................................................................................. 222
控制器实例化 ............................................................................................... 222
事件绑定 ...................................................................................................... 223
模板动作 ...................................................................................................... 224
大综合：一个抽象的CRUD 列表 ........................................................................ 225
附录A jQuery基础 .....................................................227
附录B CSS扩展 .........................................................239
附录C CSS3参考 .......................................................245
索引 ...........................................................................267
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>基于MVC的JavaScript Web富应用开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>了不起的Node.js
PART Ⅰ　从安装与概念开始
CHAPTER 1　安装............................................... 3
在Windows下安装............................................... 3
在OS.X下安装. ................................................ 4
在Linux下安装................................................. 5
编译. ............................................................5
确保安装成功. ...............................................5
Node.REPL................................................. 5
执行文件.......................................................... 6
NPM................................................................. 6
安装模块...........................................................7
自定义模块. .......................................................8
安装二进制工具包. ..................................................9
浏览NPM仓库. .......................................................9
小结................................................................. 10
CHAPTER 2　JavaScript概览.........................................11
介绍.......................................................... 11
JavaScript基础..................................................... 12
类型. ......................................................... 12
类型的困惑. ............................................... 12
函数. .......................................................... 13
THIS、FUNCTION #CALL以及FUNCTION#APPLY.................... 14
函数的参数数量. ........................... 14
闭包. ........................................................ 14
类. .............................................................. 15
继承. ..................................................... 16
TRY.{}.CATCH.{}...................................... 17
v8中的JavaScript............................... 17
OBJECT#KEYS....................................................... 18
ARRAY#ISARRAY................................................ 18
数组方法................................................. 18
字符串方法.. .................................................... 19
JSON............................................................. 19
FUNCTION#BIND....................................................... 19
FUNCTION#NAME.............................................. 19
_PROTO_（继承）. ............................................ 20
存取器....................................................... 20
小结.............................................................. 21
CHAPTER ３　阻塞与非阻塞IO................................. 23
能力越强，责任就越大................................................. 23
阻塞. ............................................................. 25
单线程的世界. ............................................... 27
错误处理..................................................... 29
堆栈追踪................................................ 30
小结............................................................... 32
CHAPTER 4　Node中的JavaScript ..................................... 33
global对象....................................................... 33
实用的全局对象. ................................................ 34
模块系统............................................................ 34
绝对和相对模块. .................................................. 35
暴露API. ............................................................... 37
事件......................................................... 38
buffer............................................................... 40
小结................................................................... 41
PART Ⅱ　Node重要的API
CHAPTER 5　命令行工具（CLI）以及FS API：首个Node应用................... 45
需求................................................. 45
编写首个Node程序...................................... 46
创建模块.............................................. 46
同步还是异步. ............................ 47
理解什么是流（stream）................................... 49
输入和输出. .......................................................... 50
重构. ........................................ 53
用fs进行文件操作. .............................. 55
对CLI一探究竟. ................................................. 56
argv.................................................... 57
工作目录...................................... 57
环境变量........................................... 58
退出. ............................................... 58
信号. .......................................................... 58
ANSI转义码............................................ 59
对fs一探究竟. ................................................. 59
Stream......................................................... 59
监视. .......................................... 60
小结...................................................... 61
CHAPTER 6　TCP ........................................... 63
TCP有哪些特性. ..................................................... 64
面向连接的通信和保证顺序的传递. ........................... 64
面向字节........................................ 65
可靠性............................................... 65
流控制......................................... 65
拥堵控制.............................................. 65
Telnet................................................................ 65
基于TCP的聊天程序............................................... 68
创建模块..................................... 68
理解NET.SERVER.API........................ 68
接收连接....................................... 70
data事件. ...................................................... 71
状态以及记录连接情况. ........................................ 73
圆满完成此程序. ............................................ 75
一个IRC客户端程序.......................................... 77
创建模块.............................................. 77
理解NET#STREAM.API.. ......................................... 78
实现部分IRC协议. .................................................. 78
测试实际的IRC服务器. .................................. 78
小结................................................................. 79
CHAPTER 7　HTTP .................................................. 81
HTTP结构......................................................... 81
头信息. ...................................................... 82
连接.............................................................. 87
一个简单的Web服务器.................................................. 88
创建模块....................................... 88
输出表单.................................................... 88
method和URL. ........................................... 90
数据. .............................................. 92
整合. ................................................ 94
让程序更健壮. ..................................... 95
一个Twitter.Web客户端......................................... 96
创建模块....................................... 96
发送一个简单的HTTP请求. ...................... 97
发送数据......................................... 98
获取推文................................................. 99
superagent来拯救.............................................. 102
使用up重启HTTP服务器..................................... 103
小结............................................. 104
PART Ⅲ　Web开发
CHAPTER 8　Connect .............................. 107
使用HTTP构建一个简单的网站. ....................................... 108
通过Connect实现一个简单的网站...................................... 111
中间件. ................................................. 112
书写可重用的中间件. .........................114
static中间件. .............................................119
query中间件. .......................................120
logger中间件................................................... 120
body.parser中间件. .................................122
cookie.........................................................125
会话（session）. ......................................126
Redis.session..................................................131
methodOverride中间件. ...........................132
basicAuth中间件. ......................................132
小结.............................................................. 134
CHAPTER 9　Express..................................................135
一个小型Express应用. ...................................... 135
创建模块..............................................136
HTML...........................................................136
SETUP..........................................................137
定义路由............................................137
查询. .................................................140
运行. .....................................................141
设置......................................................... 142
模板引擎...................................................... 143
错误处理........................................................ 144
快捷方法................................................. 144
路由................................................ 146
中间件. .................................................... 148
代码组织策略. ......................................... 149
小结................................................. 151
CHAPTER 10　WebSocket .................. 153
Ajax.............................................. 153
HTML5.WebSocket............................................... 156
一个ECHO示例. ......................................................... 157
初始化项目. .............................................157
建立服务器. ..................................................158
建立客户端. ......................................159
运行示例程序. ...................................160
鼠标光标.......................................... 161
初始化示例程序. .........................................161
建立服务器. ............................................161
建立客户端. .....................................164
运行示例程序. .........................................166
面临一个挑战. ............................................. 166
关闭并不意味着断开连接. .............................166
JSON...........................................167
重连. ...................................................167
广播. ................................................167
WebSocket属于HTML5：早期浏览器不支持. ..........................167
解决方案.................................................167
小结............................................................. 167
CHAPTER 11　Socket.IO.............................................169
传输................................................. 170
断开.VS.关闭. ............................................170
事件. ..........................................170
命名空间..............................................171
聊天程序................................................. 172
初始化程序. .......................................172
构建服务器. ..........................................172
构建客户端. .......................................173
事件和广播. ........................................175
消息接收确认. .................................179
一个轮流做DJ的应用................................ 180
扩展聊天应用. ...........................................181
集成Grooveshark.API. ...............................182
播放歌曲...............................................185
小结.................................................... 190
PART Ⅳ　数据库
CHAPTER 12　MongoDB.......................193
安装.................................................. 195
使用MongoDB：一个用户认证的例子. .................................. 195
构建应用程序. .......................................195
创建Express.App.. ..............................196
连接MongoDB. ...................................200
创建文档......................................201
查找文档..................................203
身份验证中间件. ..................................204
校验.. ..............................................205
原子性..............................................206
安全模式................................206
Mongoose介绍......................................... 206
定义模型........................................207
定义嵌套的键. ..........................208
定义嵌套文档. .....................................209
构建索引..........................................209
中间件.................................................209
探测模型状态.. ...............................210
查询. ..............................................210
扩展查询........................................210
排序.. ........................................211
选择. ......................................................211
限制.. .....................................211
跳过. .........................................211
自动产生键. ...............................211
转换. ..............................................212
一个使用Mongoose的例子........................................ 212
构建应用.................................212
重构. ..............................213
建立模型.................................213
小结.......................................... 215
CHAPTER 13　MySQL...........................................217
node-mysql........................................ 217
初始化项目. .......................................217
Express应用. ...................................218
连接MySQL. .....................................219
初始化脚本. .......................................220
创建数据................................................224
获取数据.....................................228
sequelize............................................ 229
初始化sequelize. ................................230
初始化Express应用. ....................................230
连接sequelize. .........................233
定义模型和同步. ........................... 234
创建数据.................................236
获取数据......................................238
删除数据..............................239
完整地完成应用. ...............................240
小结.......................................... 241
CHAPTER 14　Redis......................................... 243
安装Redis............................................... 244
Redis查询语言. ............................................... 245
数据类型............................................. 245
字符串. ...................................246
哈希. .................................................246
列表. ......................................... 248
数据集. .....................................249
有序数据集. .........................................249
Redis和Node. .......................................... 249
使用node-redis实现一个社交图谱. .............250
小结......................................... 259
PART Ⅴ　测试
CHAPTER 15　代码共享 ................................. 263
什么样的代码可以共享........................................... 263
书写兼容的JavaScript代码................................ 264
导出模块......................................................264
模拟实现ECMA.API. ................................265
模拟实现Node.API. ......................................267
模拟实现浏览器端API. ...............................267
跨浏览器的继承实现. ...........................268
集成到一起：browserbuild. ...................... 268
基础案例....................................269
小结......................................... 271
CHAPTER 16　测试................................... 273
简单测试........................................ 273
测试目标............................................. 274
测试策略................................... 274
测试程序...................................................275
expect.js................................................. 276
API一览. .........................................276
Mocha................................................. 278
测试异步代码. ..................................279
BDD风格. ................................281
TDD风格. .......................................281
export风格. .................................282
在浏览器端使用Mocha. ...................................282
小结.................................... 284
索引 ...................................... 285
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>了不起的Node.js
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Effective JavaScript
本书赞誉
译者序
序
前言
第1章　让自己习惯JavaScript 1
第1条：了解你使用的JavaScript版本 1
第2条：理解JavaScript的浮点数 6
第3条：当心隐式的强制转换 8
第4条：原始类型优于封装对象 13
第5条：避免对混合类型使用==运算符 14
第6条：了解分号插入的局限 16
第7条：视字符串为16位的代码单元序列 21
第2章　变量作用域 25
第8条：尽量少用全局对象 25
第9条：始终声明局部变量 27
第10条：避免使用with 28
第11条：熟练掌握闭包 31
第12条：理解变量声明提升 34
第13条：使用立即调用的函数表达式创建局部作用域 36
第14条：当心命名函数表达式笨拙的作用域 38
第15条：当心局部块函数声明笨拙的作用域 41
第16条：避免使用eval创建局部变量 43
第17条：间接调用eval函数优于直接调用 44
第3章　使用函数 46
第18条：理解函数调用、方法调用及构造函数调用之间的不同 46
第19条：熟练掌握高阶函数 48
第20条：使用call方法自定义接收者来调用方法 51
第21条：使用apply方法通过不同数量的参数调用函数 53
第22条：使用arguments创建可变参数的函数 54
第23条：永远不要修改arguments对象 56
第24条：使用变量保存arguments的引用 58
第25条：使用bind方法提取具有确定接收者的方法 59
第26条：使用bind方法实现函数柯里化 61
第27条：使用闭包而不是字符串来封装代码 62
第28条：不要信赖函数对象的toString方法 63
第29条：避免使用非标准的栈检查属性 65
第4章　对象和原型 67
第30条：理解prototype、getPrototype Of和__proto__之间的不同 67
第31条：使用Object.getPrototypeOf函数而不要使用__proto__属性 69
第32条：始终不要修改__proto__属性 70
第33条：使构造函数与new操作符无关 71
第34条：在原型中存储方法 73
第35条：使用闭包存储私有数据 75
第36条：只将实例状态存储在实例对象中 76
第37条：认识到this变量的隐式绑定问题 78
第38条：在子类的构造函数中调用父类的构造函数 81
第39条：不要重用父类的属性名 84
第40条：避免继承标准类 86
第41条：将原型视为实现细节 88
第42条：避免使用轻率的猴子补丁 88
第5章　数组和字典 91
第43条：使用Object的直接实例构造轻量级的字典 91
第44条：使用null原型以防止原型污染 94
第45条：使用hasOwnProperty方法以避免原型污染 95
第46条：使用数组而不要使用字典来存储有序集合 99
第47条：绝不要在Object.prototype中增加可枚举的属性 102
第48条：?避免在枚举期间修改对象 103
第49条：数组迭代要优先使用for循环而不是for...in循环 108
第50条：迭代方法优于循环 109
第51条：在类数组对象上复用通用的数组方法 113
第52条：数组字面量优于数组构造函数 114
第6章　库和API设计 116
第53条：保持一致的约定 116
第54条：将undefined看做“没有值” 117
第55条：接收关键字参数的选项对象 121
第56条：避免不必要的状态 125
第57条：使用结构类型设计灵活的接口 127
第58条：区分数组对象和类数组对象 130
第59条：避免过度的强制转换 134
第60条：支持方法链 137
第7章　并发 140
第61条：不要阻塞I/O事件队列 140
第62条：在异步序列中使用嵌套或命名的回调函数 143
第63条：当心丢弃错误 147
第64条：对异步循环使用递归 150
第65条：不要在计算时阻塞事件队列 153
第66条：使用计数器来执行并行操作 156
第67条：绝不要同步地调用异步的回调函数 160
第68条：使用promise模式清洁异步逻辑 162
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Effective JavaScript
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript模式
前言
第1章 简介
模式
JavaScript：基本概念
ECMAScript 5
JSLint
Console
第2章 基本技巧
编写可维护的代码
尽量少用全局变量
for循环
for-in循环
不要增加内置的原型
switch模式
避免使用隐式类型转换
使用parseInt()的数值约定
编码约定
命名约定
编写注释
编写API文档
编写可读性强的代码
同行互查
在正式发布时精简代码
运行JSLint
小结
第3章 字面量和构造函数
对象字面量
自定义构造函数
强制使用new的模式
数组字面量
JSON
正则表达式字面量
基本值类型包装器
错误对象
小结
第4章 函数
背景
回调模式
返回函数
自定义函数
即时函数
即时对象初始化
初始化时分支
函数属性——备忘模式
配置对象
Curry
小结
第5章 对象创建模式
命名空间模式
声明依赖关系
私有属性和方法
模块模式
沙箱模式
静态成员
对象常量
链模式
method()方法
小结
第6章 代码复用模式
传统与现代继承模式的比较
使用类式继承时的预期结果
类式继承模式#1——默认模式
类式继承模式#2——借用构造函数
类式继承模式#3——借用和设置原型
类式继承模式#4——共享原型
类式继承模式#5——临时构造函数
Klass
原型继承
通过复制属性实现继承
借用方法
小结
第7章 设计模式
单体模式
工厂模式
迭代器模式
装饰者模式
策略模式
外观模式
代理模式
中介者模式
观察者模式
小结
第8章 DOM和浏览器模式
关注分离
DOM脚本
事件
长期运行脚本
远程脚本
配置JavaScript
载入策略
小结
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript模式
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript高级程序设计:第2版
第1章 JavaScript简介 1
1.1 JavaScript简史 1
1.2 JavaScript实现 2
1.2.1 ECMAScript 3
1.2.2 文档对象模型(DOM) 5
1.2.3 浏览器对象模型(BOM) 7
1.3 JavaScript版本 8
1.4 小结 8
第2章 在HTML中使用JavaScript 9
2.1 script元素 9
2.1.1 标签的位置 11
2.1.2 延迟脚本 11
2.1.3 在XHTML中的用法 12
2.1.4 不推荐使用的语法 13
2.1.5 嵌入代码与外部文件 13
2.2 文档模式 14
2.3 noscript元素 15
2.4 小结 16
第3章 基本概念 17
3.1 语法 17
3.1.1 区分大小写 17
3.1.2 标识符 17
3.1.3 注释 18
3.1.4 语句 18
3.2 关键字和保留字 18
3.3 变量 19
3.4 数据类型 20
3.4.1 typeof操作符 20
3.4.2 Undefined类型 21
3.4.3 Null类型 22
3.4.4 Boolean类型 22
3.4.5 Number类型 23
3.4.6 String类型 28
3.4.7 Object类型 30
3.5 操作符 31
3.5.1 一元操作符 31
3.5.2 位操作符 34
3.5.3 布尔操作符 38
3.5.4 乘性操作符 40
3.5.5 加性操作符 42
3.5.6 关系操作符 43
3.5.7 相等操作符 44
3.5.8 条件操作符 46
3.5.9 赋值操作符 46
3.5.10 逗号操作符 47
3.6 语句 47
3.6.1 if语句 47
3.6.2 do-while语句 48
3.6.3 while语句 48
3.6.4 for语句 48
3.6.5 for-in语句 49
3.6.6 label语句 50
3.6.7 break和continue语句 50
3.6.8 with语句 52
3.6.9 switch语句 52
3.7 函数 54
3.7.1 理解参数 55
3.7.2 没有重载 57
3.8 小结 57
第4章 变量、作用域和内存问题 59
4.1 基本类型和引用类型的值 59
4.1.1 动态属性 60
4.1.2 复制变量值 60
4.1.3 传递参数 62
4.1.4 检测类型 63
4.2 执行环境及作用域 64
4.2.1 延长作用域链 66
4.2.2 没有块级作用域 66
4.3 垃圾收集 69
4.3.1 标记清除 69
4.3.2 引用计数 69
4.3.3 性能问题 70
4.3.4 管理内存 71
4.4 小结 72
第5章 引用类型 73
5.1 Object类型 73
5.2 Array类型 75
5.2.1 转换方法 77
5.2.2 栈方法 78
5.2.3 队列方法 79
5.2.4 重排序方法 80
5.2.5 操作方法 81
5.3 Date类型 83
5.3.1 继承的方法 84
5.3.2 日期格式化方法 85
5.3.3 日期/时间组件方法 85
5.4 RegExp类型 86
5.4.1 RegExp实例属性 88
5.4.2 RegExp实例方法 89
5.4.3 RegExp构造函数属性 90
5.4.4 模式的局限性 92
5.5 Function类型 92
5.5.1 没有重载(深入理解) 93
5.5.2 函数声明与函数表达式 94
5.5.3 作为值的函数 94
5.5.4 函数内部属性 96
5.5.5 函数属性和方法 97
5.6 基本包装类型 99
5.6.1 Boolean类型 100
5.6.2 Number类型 101
5.6.3 String类型 102
5.7 内置对象 109
5.7.1 Global对象 109
5.7.2 Math对象 111
5.8 小结 114
第6章 面向对象的程序设计 115
6.1 创建对象 115
6.1.1 工厂模式 115
6.1.2 构造函数模式 116
6.1.3 原型模式 119
6.1.4 组合使用构造函数模式和原型模式 128
6.1.5 动态原型模式 129
6.1.6 寄生构造函数模式 129
6.1.7 稳妥构造函数模式 130
6.2 继承 131
6.2.1 原型链 131
6.2.2 借用构造函数 136
6.2.3 组合继承 137
6.2.4 原型式继承 138
6.2.5 寄生式继承 139
6.2.6 寄生组合式继承 139
6.3 小结 142
第7章 匿名函数 143
7.1 递归 144
7.2 闭包 144
7.2.1 闭包与变量 147
7.2.2 关于this对象 148
7.2.3 内存泄漏 149
7.3 模仿块级作用域 150
7.4 私有变量 152
7.4.1 静态私有变量 153
7.4.2 模块模式 154
7.4.3 增强的模块模式 156
7.5 小结 157
第8章 BOM 158
8.1 window对象 158
8.1.1 全局作用域 158
8.1.2 窗口关系及框架 159
8.1.3 窗口位置 161
8.1.4 窗口大小 162
8.1.5 导航和打开窗口 163
8.1.6 间歇调用和超时调用 166
8.1.7 系统对话框 168
8.2 location对象 169
8.2.1 查询字符串参数 170
8.2.2 位置操作 171
8.3 navigator对象 172
8.3.1 检测插件 173
8.3.2 注册处理程序 175
8.4 screen对象 176
8.5 history对象 177
8.6 小结 178
第9章 客户端检测 179
9.1 能力检测 179
9.2 怪癖检测 181
9.3 用户代理检测 181
9.3.1 用户代理字符串的历史 182
9.3.2 用户代理字符串检测技术 187
9.3.3 完整的代码 199
9.3.4 使用方法 202
9.4 小结 202
第10章 DOM 204
10.1 节点层次 204
10.1.1 Node类型 205
10.1.2 Document类型 210
10.1.3 Element类型 217
10.1.4 Text类型 225
10.1.5 Comment类型 228
10.1.6 CDATASection类型 228
10.1.7 DocumentType类型 229
10.1.8 DocumentFragment类型 229
10.1.9 Attr类型 230
10.2 DOM扩展 231
10.2.1 呈现模式 231
10.2.2 滚动 232
10.2.3 children属性 232
10.2.4 contains()方法 233
10.2.5 操作内容 234
10.3 DOM操作技术 239
10.3.1 动态脚本 239
10.3.2 动态样式 241
10.3.3 操作表格 242
10.3.4 使用NodeList 245
10.4 小结 245
第11章 DOM2和DOM3 247
11.1 DOM变化 247
11.1.1 针对XML命名空间的变化 248
11.1.2 其他方面的变化 250
11.2 样式 254
11.2.1 访问元素的样式 254
11.2.2 操作样式表 258
11.2.3 元素大小 261
11.3 遍历 267
11.3.1 NodeIterator 268
11.3.2 TreeWalker 271
11.4 范围 272
11.4.1 DOM中的范围 272
11.4.2 IE中的范围 279
11.5 小结 282
第12章 事件 283
12.1 事件流 283
12.1.1 事件冒泡 283
12.1.2 事件捕获 284
12.1.3 DOM事件流 285
12.2 事件处理程序(或事件侦听器) 285
12.2.1 HTML事件处理程序 286
12.2.2 DOM0级事件处理程序 286
12.2.3 DOM2级事件处理程序 287
12.2.4 IE事件处理程序 288
12.2.5 跨浏览器的事件处理程序 289
12.3 事件对象 290
12.3.1 DOM中的事件对象 291
12.3.2 IE中的事件对象 293
12.3.3 跨浏览器的事件对象 295
12.4 事件类型 296
12.4.1 UI事件 297
12.4.2 鼠标事件 297
12.4.3 键盘事件 303
12.4.4 HTML事件 307
12.4.5 变动事件 312
12.4.6 专有事件 316
12.4.7 移动Safari支持的事件 325
12.5 内存和性能 328
12.5.1 事件委托 328
12.5.2 移除事件处理程序 330
12.6 模拟事件 331
12.6.1 DOM中的事件模拟 331
12.6.2 IE中的事件模拟 335
12.7 小结 336
第13章 表单脚本 337
13.1 表单 337
13.1.1 提交表单 338
13.1.2 重置表单 338
13.1.3 表单字段 339
13.2 文本框脚本 343
13.2.1 选择文本 344
13.2.2 过滤输入 347
13.2.3 自动切换焦点 350
13.3 选择框脚本 351
13.3.1 选择选项 352
13.3.2 添加选项 354
13.3.3 移除选项 354
13.3.4 移动和重排选项 355
13.4 表单序列化 355
13.5 富文本编辑 357
13.5.1 操作富文本 358
13.5.2 富文本选区 359
13.5.3 表单与富文本 361
13.6 小结 361
第14章 错误处理与调试 363
14.1 浏览器错误报告 363
14.1.1 Internet Explorer 363
14.1.2 Firefox 364
14.1.3 Safari 366
14.1.4 Opera 367
14.1.5 Chrome 368
14.2 错误处理 369
14.2.1 try-catch语句 369
14.2.2 抛出错误 372
14.2.3 错误(error)事件 374
14.3 错误处理策略 375
14.3.1 常见的错误类型 375
14.3.2 区分致命错误和非致命错误 379
14.3.3 把错误记录到服务器 380
14.4 调试技术 381
14.4.1 将消息记录到控制台 381
14.4.2 将消息记录到当前页面 383
14.4.3 抛出错误 384
14.5 常用的IE错误 384
14.5.1 操作终止 384
14.5.2 无效字符 386
14.5.3 未找到成员 386
14.5.4 未知运行时错误 387
14.5.5 语法错误 387
14.5.6 系统无法找到指定资源 387
14.6 调试工具 388
14.6.1 IE中的调试器 388
14.6.2 Firebug 392
14.6.3 Drosera 396
14.6.4 Opera中的JavaScript调试器 398
14.6.5 其他调试工具 401
14.7 小结 401
第15章 JavaScript与XML 402
15.1 浏览器对XML DOM的支持 402
15.1.1 DOM2级核心 402
15.1.2 DOMParser类型 403
15.1.3 XMLSerializer类型 404
15.1.4 DOM3级加载和保存 404
15.1.5 IE对XML的支持 409
15.1.6 跨浏览器处理XML 412
15.2 浏览器对XPath的支持 414
15.2.1 DOM3级XPath 414
15.2.2 IE中的XPath 418
15.2.3 跨浏览器使用XPath 419
15.3 浏览器对XSLT的支持 421
15.3.1 IE中的XSLT 421
15.3.2 XSLTProcessor类型 425
15.3.3 跨浏览器使用XSLT 427
15.4 小结 428
第16章 E4X 429
16.1 E4X的类型 429
16.1.1 XML类型 429
16.1.2 XMLList类型 430
16.1.3 命名空间类型 431
16.1.4 QName类型 432
16.2 一般用法 432
16.2.1 访问特性 433
16.2.2 其他节点类型 434
16.2.3 查询 436
16.2.4 构建和操作XML 437
16.2.5 解析和序列化 439
16.2.6 命名空间 439
16.3 其他变化 441
16.4 全面启用E4X 442
16.5 小结 442
第17章 Ajax与JSON 443
17.1 XHR对象 443
17.1.1 XHR的用法 445
17.1.2 HTTP头部信息 446
17.1.3 GET请求 448
17.1.4 POST请求 448
17.1.5 浏览器差异 449
17.1.6 安全 451
17.2 跨域请求 452
17.2.1 XDomainRequest对象 452
17.2.2 跨域XHR 454
17.3 JSON 454
17.3.1 在Ajax中使用JSON 456
17.3.2 安全 458
17.4 小结 459
第18章 高级技巧 460
18.1 高级函数 460
18.1.1 作用域安全的构造函数 460
18.1.2 惰性载入函数 462
18.1.3 函数绑定 464
18.1.4 函数柯里化 465
18.2 高级定时器 467
18.2.1 重复的定时器 469
18.2.2 Yielding Processes 470
18.2.3 函数节流 472
18.3 自定义事件 474
18.4 拖放 476
18.4.1 修缮拖动功能 478
18.4.2 添加自定义事件 480
18.5 小结 482
第19章 客户端存储 483
19.1 cookie 483
19.1.1 限制 483
19.1.2 cookie的成分 484
19.1.3 JavaScript中的cookie 485
19.1.4 子cookie 487
19.1.5 关于cookie的思考 491
19.2 IE用户数据 491
19.3 DOM存储机制 492
19.3.1 存储类型 492
19.3.2 sessionStorage对象 493
19.3.3 globalStorage对象 494
19.3.4 localStorage对象 495
19.3.5 StorageItem类型 496
19.3.6 storage事件 496
19.3.7 限制 496
19.4 总结 497
第20章 最佳实践 498
20.1 可维护性 498
20.1.1 什么是可维护的代码 498
20.1.2 代码约定 498
20.2 松散耦合 501
20.3 性能 507
20.3.1 注意作用域 508
20.3.2 选择正确方法 509
20.3.3 最小化语句数 513
20.3.4 优化DOM交互 515
20.4 部署 517
20.4.1 构建过程 517
20.4.2 验证 518
20.4.3 压缩 520
20.5 小结 522
第21章 未来的API 523
21.1 选择器API 523
21.1.1 querySelector()方法 523
21.1.2 querySelectorAll()方法 524
21.1.3 现今和未来的支持情况 525
21.2 HTML5 525
21.2.1 字符集属性 525
21.2.2 类相关的增加 526
21.2.3 自定义数据特性 528
21.2.4 跨文档消息传递 528
21.2.5 媒体元素 529
21.2.6 canvas元素 532
21.2.7 离线支持 540
21.2.8 历史的改变 541
21.2.9 数据库存储 541
21.2.10 拖放操作 543
21.2.11 WebSocket类型 546
21.2.12 HTML5的未来 547
21.3 小结 547
第22章 JavaScript的未来 548
22.1 ECMAScript4/JavaScript2 548
22.1.1 JavaScript1.5 548
22.1.2 JavaScript1.6 550
22.1.3 JavaScript1.7 552
22.1.4 JavaScript1.8 557
22.1.5 JavaScript1.9 558
22.1.6 ECMAScript4提案 559
22.1.7 变量类型 559
22.1.8 函数 561
22.1.9 类型定义 563
22.1.10 类和接口 565
22.1.11 接口 569
22.1.12 继承 569
22.1.13 命名空间 571
22.1.14 包 572
22.1.15 语言上的其他变更 572
22.1.16 ECMAScript4的未来 577
22.2 ECMAScript3.1 577
22.2.1 对对象内部实现的变更 578
22.2.2 静态对象方法 578
22.2.3 本地的JSON支持 585
22.2.4 Decimal 586
22.2.5 用法子集 589
22.2.6 ECMAScript3.1的未来 590
22.3 小结 590
附录A JavaScript库 591
附录B JavaScript工具 595
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript高级程序设计:第2版
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript & jQuery交互式Web前端开发
第1章 编程基础知识1
第2章 JavaScript基础指令 43
第3章 函数、方法与对象75
第4章 判断和循环 135
第5章 文档对象模型 173
第6章 事件 233
第7章 jQuery 283
第8章 Ajax与JSON 357
第9章 API 399
第10章 错误处理与调试 439
第11章 内容面板477
第12章 筛选、搜索与排序 517
第13章 表单增强与验证 557
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript & jQuery交互式Web前端开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript设计模式
第一部分　面向对象的JavaScript
第1章　富有表现力的JavaScript
1.1　JavaScript的灵活性
1.2　弱类型语言
1.3　函数是一等对象
1.4　对象的易变性
1.5　继承
1.6　JavaScript中的设计模式
1.7　小结
第2章　接口
2.1　什么是接口
2.1.1　接口之利
2.1.2　接口之弊
2.2　其他面向对象语言处理接口的方式
2.3　在JavaScript中模仿接口
2.3.1　用注释描述接口
2.3.2　用属性检查模仿接口
2.3.3　用鸭式辨型模仿接口
2.4　本书采用的接口实现方法
2.5　Interface类
2.5.1　Interface类的使用场合
2.5.2　Interface类的用法
2.5.3　示例：使用Interface类
2.6　依赖于接口的设计模式
2.7　小结
第3章　封装和信息隐藏
3.1　信息隐藏原则
3.1.1　封装与信息隐藏
3.1.2　接口扮演的角色
3.2　创建对象的基本模式
3.2.1　门户大开型对象
3.2.2　用命名规范区别私用成员
3.2.3　作用域、嵌套函数和闭包
3.2.4　用闭包实现私用成员
3.3　更多高级对象创建模式
3.3.1　静态方法和属性
3.3.2　常量
3.3.3　单体和对象工厂
3.4　封装之利
3.5　封装之弊
3.6　小结
第4章　继承
4.1　为什么需要继承
4.2　类式继承
4.2.1　原型链
4.2.2　extend函数
4.3　原型式继承
4.3.1　对继承而来的成员的读和写的不对等性
4.3.2　clone函数
4.4　类式继承和原型式继承的对比
4.5　继承与封装
4.6　掺元类
4.7　示例：就地编辑
4.7.1　类式继承解决方案
4.7.2　原型式继承解决方案
4.7.3　掺元类解决方案
4.8　继承的适用场合
4.9　小结
第5章　单体模式
5.1　单体的基本结构
5.2　划分命名空间
5.3　用作特定网页专用代码的包装器的单体
5.4　拥有私用成员的单体
5.4.1　使用下划线表示法
5.4.2　使用闭包
5.4.3　两种技术的比较
5.5　惰性实例化
5.6　分支
5.7　示例：用分支技术创建XHR对象
5.8　单体模式的适用场合
5.9　单体模式之利
5.10　单体模式之弊
5.11　小结
第3章　封装和信息隐藏
第4章　继承
第5章　单体模式
第6章　方法的链式调用
第二部分　设计模式
第7章　工厂模式
第8章　桥接模式
第9章　组合模式
第10章　门面模式
第11章　适配器模式
第12章　装饰者模式
第13章　享元模式
第14章　代理模式
第15章　观察者模式
第16章　命令模式
第17章　职责链模式
索引
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript设计模式
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>数据结构与算法JavaScript描述
推荐序　　XI
前言　　XII
第1章　JavaScript的编程环境和模型　　1
1.1　JavaScript环境　　1
1.2　JavaScript编程实践　　2
1.2.1　声明和初始化变量　　3
1.2.2　JavaScript中的算术运算和数学库函数　　3
1.2.3　判断结构　　4
1.2.4　循环结构　　6
1.2.5　函数　　7
1.2.6　变量作用域　　7
1.2.7　递归　　9
1.3　对象和面向对象编程　　10
1.4　小结　　11
第2章　数组　　13
2.1　JavaScript中对数组的定义　　13
2.2　使用数组　　13
2.2.1　创建数组　　14
2.2.2　读写数组　　15
2.2.3　由字符串生成数组　　15
2.2.4　对数组的整体性操作　　16
2.3　存取函数　　17
2.3.1　查找元素　　17
2.3.2　数组的字符串表示　　18
2.3.3　由已有数组创建新数组　　18
2.4　可变函数　　19
2.4.1　为数组添加元素　　19
2.4.2　从数组中删除元素　　20
2.4.3　从数组中间位置添加和删除元素　　21
2.4.4　为数组排序　　21
2.5　迭代器方法　　22
2.5.1　不生成新数组的迭代器方法　　22
2.5.2　生成新数组的迭代器方法　　25
2.6　二维和多维数组　　27
2.6.1　创建二维数组　　27
2.6.2　处理二维数组的元素　　28
2.6.3　参差不齐的数组　　29
2.7　对象数组　　30
2.8　对象中的数组　　31
2.9　练习　　32
第3章　列表　　33
3.1　列表的抽象数据类型定义　　33
3.2　实现列表类　　34
3.2.1　append：给列表添加元素　　35
3.2.2　remove：从列表中删除元素　　35
3.2.3　find：在列表中查找某一元素　　35
3.2.4　length：列表中有多少个元素　　36
3.2.5　toString：显示列表中的元素　　36
3.2.6　insert：向列表中插入一个元素　　37
3.2.7　clear：清空列表中所有的元素　　37
3.2.8　contains：判断给定值是否在列表中　　37
3.2.9　遍历列表　　38
3.3　使用迭代器访问列表　　39
3.4　一个基于列表的应用　　40
3.4.1　读取文本文件　　40
3.4.2　使用列表管理影碟租赁　　41
3.5　练习　　44
第4章　栈　　45
4.1　对栈的操作　　45
4.2　栈的实现　　46
4.3　使用Stack类　　48
4.3.1　数制间的相互转换　　49
4.3.2　回文　　50
4.3.3　递归演示　　51
4.4　练习　　52
第5章　队列　　53
5.1　对队列的操作　　53
5.2　一个用数组实现的队列　　54
5.3　使用队列：方块舞的舞伴分配问题　　57
5.4　使用队列对数据进行排序　　61
5.5　优先队列　　63
5.6　练习　　65
第6章　链表　　67
6.1　数组的缺点　　67
6.2　定义链表　　67
6.3　设计一个基于对象的链表　　69
6.3.1　Node类　　69
6.3.2　LinkedList类　　69
6.3.3　插入新节点　　69
6.3.4　从链表中删除一个节点　　71
6.4　双向链表　　74
6.5　循环链表　　78
6.6　链表的其他方法　　79
6.7　练习　　79
第7章　字典　　81
7.1　Dictionary类　　81
7.2　Dictionary类的辅助方法　　83
7.3　为Dictionary类添加排序功能　　85
7.4　练习　　86
第8章　散列　　87
8.1　散列概览　　87
8.2　HashTable类　　88
8.2.1　选择一个散列函数　　88
8.2.2　一个更好的散列函数　　91
8.2.3　散列化整型键　　93
8.2.4　对散列表排序、从散列表中取值　　95
8.3　碰撞处理　　96
8.3.1　开链法　　96
8.3.2　线性探测法　　99
8.4　练习　　100
第9章　集合　　101
9.1　集合的定义、操作和属性　　101
9.1.1　集合的定义　　101
9.1.2　对集合的操作　　102
9.2　Set类的实现　　102
9.3　更多集合操作　　104
9.4　练习　　107
第10章　二叉树和二叉查找树　　109
10.1　树的定义　　109
10.2　二叉树和二叉查找树　　111
10.2.1　实现二叉查找树　　111
10.2.2　遍历二叉查找树　　113
10.3　在二叉查找树上进行查找　　116
10.3.1　查找最小值和最大值　　116
10.3.2　查找给定值　　117
10.4　从二叉查找树上删除节点　　118
10.5　计数　　120
10.6　练习　　123
第11章　图和图算法　　125
11.1　图的定义　　125
11.2　用图对现实中的系统建模　　127
11.3　图类　　127
11.3.1　表示顶点　　127
11.3.2　表示边　　127
11.3.3　构建图　　128
11.4　搜索图　　130
11.4.1　深度优先搜索　　130
11.4.2　广度优先搜索　　133
11.5　查找最短路径　　135
11.5.1　广度优先搜索对应的最短路径　　135
11.5.2　确定路径　　135
11.6　拓扑排序　　137
11.6.1　拓扑排序算法　　137
11.6.2　实现拓扑排序算法　　137
11.7　练习　　141
第12章　排序算法　　143
12.1　数组测试平台　　143
12.2　基本排序算法　　145
12.2.1　冒泡排序　　145
12.2.2　选择排序　　148
12.2.3　插入排序　　150
12.2.4　基本排序算法的计时比较　　151
12.3　高级排序算法　　153
12.3.1　希尔排序　　153
12.3.2　归并排序　　158
12.3.3　快速排序　　163
12.4　练习　　167
第13章　检索算法　　169
13.1　顺序查找　　169
13.1.1　查找最小值和最大值　　172
13.1.2　使用自组织数据　　175
13.2　二分查找算法　　177
13.3　查找文本数据　　183
13.4　练习　　185
第14章　高级算法　　187
14.1　动态规划　　187
14.1.1　动态规划实例：计算斐波那契数列　　188
14.1.2　寻找最长公共子串　　191
14.1.3　背包问题：递归解决方案　　194
14.1.4　背包问题：动态规划方案　　195
14.2　贪心算法　　196
14.2.1　第一个贪心算法案例：找零问题　　196
14.2.2　背包问题的贪心算法解决方案　　197
14.3　练习　　199
封面介绍　　200
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>数据结构与算法JavaScript描述
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Head First HTML5 Programming（中文版）
引子
1 认识html5：欢迎来到web镇
2 介绍javascript和dom：一点点代码
3 事件、处理程序，诸如此类：一点点交互
4 javascript函数和对象：正式javascript
5 实现html位置感知：地理定位
6 与web交流：喜欢社交的应用
7 秀出你的艺术天份：画布
8 不再是父辈的老电视：视频……以及特邀演员“画布”
9 在本地存储：web存储
10 运用javascript：web工作线程
附录：（我们没有谈到的）十大主题
索引
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Head First HTML5 Programming（中文版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>学习JavaScript数据结构与算法
第1 章 JavaScript 简介 1
1.1 环境搭建 1
1.1.1 浏览器 2
1.1.2 使用Web 服务器（XAMPP） 3
1.1.3 使用Node.js 搭建Web 服务器 4
1.2 JavaScript 基础 6
1.2.1 变量 7
1.2.2 操作符 8
1.2.3 真值和假值 11
1.2.4 相等操作符（==和===） 12
1.3 控制结构 13
1.3.1 条件语句 14
1.3.2 循环 15
1.4 函数 16
1.5 面向对象编程 16
1.6 调试工具 18
1.7 小结 18
第2 章 数组 19
2.1 为什么用数组 19
2.2 创建和初始化数组 20
2.3 添加和删除元素 21
2.4 二维和多维数组 24
2.5 JavaScript 的数组方法参考 26
2.5.1 数组合并 27
2.5.2 迭代器函数 27
2.5.3 搜索和排序 28
2.5.4 输出数组为字符串 31
2.6 小结 32
第3 章 栈 33
3.1 栈的创建 33
3.2 从十进制到二进制 38
3.3 小结 39
第4 章 队列 40
4.1 创建队列 40
4.1.1 完整的Queue 类 42
4.1.2 使用Queue 类 43
4.2 优先队列 44
4.3 循环队列——击鼓传花 46
4.4 小结 47
第5 章 链表 48
5.1 创建一个链表 49
5.1.1 向链表尾部追加元素 50
5.1.2 从链表中移除元素 52
5.1.3 在任意位置插入一个元素 54
5.1.4 实现其他方法 56
5.2 双向链表 58
5.2.1 在任意位置插入一个新元素 59
5.2.2 从任意位置移除元素 61
5.3 循环链表 64
5.4 小结 64
第6 章 集合 65
6.1 创建一个集合 65
6.1.1 has(value)方法 66
6.1.2 add 方法 66
6.1.3 remove 和clear 方法 67
6.1.4 size 方法 68
6.1.5 values 方法 69
6.1.6 使用Set 类 69
6.2 集合操作 70
6.2.1 并集 70
6.2.2 交集 71
6.2.3 差集 72
6.2.4 子集 73
6.3 小结 74
第7 章 字典和散列表 75
7.1 字典 75
7.1.1 创建一个字典 75
7.1.2 使用Dictionary 类 78
7.2 散列表 79
7.2.1 创建一个散列表 79
7.2.2 使用HashTable 类 81
7.2.3 散列表和散列集合 82
7.2.4 处理散列表中的冲突 82
7.2.5 创建更好的散列函数 90
7.3 小结 91
第8 章 树 92
8.1 树的相关术语 92
8.2 二叉树和二叉搜索树 93
8.2.1 创建BinarySearchTree 类 94
8.2.2 向树中插入一个键 95
8.3 树的遍历 98
8.3.1 中序遍历 98
8.3.2 先序遍历 99
8.3.3 后序遍历 100
8.4 搜索树中的值 101
8.4.1 搜索最小值和最大值 101
8.4.2 搜索一个特定的值 103
8.4.3 移除一个节点 104
8.5 更多关于二叉树的知识 108
8.6 小结 109
第9 章 图 110
9.1 图的相关术语 110
9.2 图的表示 112
9.2.1 邻接矩阵 112
9.2.2 邻接表 113
9.2.3 关联矩阵 114
9.3 创建图类 114
9.4 图的遍历 116
9.4.1 广度优先搜索 117
9.4.2 深度优先搜索 122
9.5 小结 128
第10 章 排序和搜索算法 129
10.1 排序算法 129
10.1.1 冒泡排序 130
10.1.2 选择排序 133
10.1.3 插入排序 134
10.1.4 归并排序 135
10.1.5 快速排序 138
10.2 搜索算法 142
10.2.1 顺序搜索 143
10.2.2 二分搜索 143
10.3 小结 145
第11 章 算法补充知识 146
11.1 递归146
11.1.1 JavaScript 调用栈大小的
限制 147
11.1.2 斐波那契数列 147
11.2 动态规划 149
11.3 贪心算法 152
11.4 大O 表示法 153
11.4.1 理解大O 表示法 153
11.4.2 时间复杂度比较 155
11.5 用算法娱乐身心 156
11.6 小结 157
附录A 时间复杂度速查表 158
致谢 160
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>学习JavaScript数据结构与算法
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript忍者秘籍
作者简介
图书评论
版权声明
内容提要
致谢
译者序
序
前言
第一部分 准入训练
第1章 进入忍者世界
第2章 利用测试和调试武装 自己
第二部分 见习训练
第3章 函数是根
第4章 挥舞函数
第5章 闭包
第6章 原型与面向对象
第7章 正则表达式
第8章 驯服线程和定时器
第三部分 忍者训练
第9章 忍者点金术：运行时代码 求值‘
第10章 with语句
第11章 开发跨浏览器 策略
第12章 洞悉特性、属性和 样式
第四部分 火影训练
第13章 不老事件
第14章 DOM操作
第15章 CSS选择器引擎
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript忍者秘籍
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5+JavaScript动画基础
第一部分JavaScript动画基础
第1章 动画的基本概念 2
1.1 动画 3
1.2 帧与运动 3
1.2.1 记录帧 4
1.2.2 程序帧 5
1.3 动态动画与静态动画 5
1.4 小结 6
第2章 动画的JavaScript基础 7
2.1 动画基础 7
2.2 HTML5简介 8
2.2.1 对canvas的支持 8
2.2.2 性能 9
2.2.3 HTML5基本文档 9
2.2.4 CSS样式表 11
2.2.5 额外的脚本 12
2.2.6 调试 12
2.3 用代码实现动画 13
2.3.1 动画循环 13
2.3.2 使用requestAnimationFrame的动画循环 16
2.4 JavaScript对象 17
2.4.1 基础对象 18
2.4.2 创建一类新对象 18
2.4.3 原型 19
2.4.4 函数风格 19
2.5 用户交互 20
2.5.1 事件与事件处理程序 20
2.5.2 监听器与事件处理程序 20
2.5.3 鼠标事件 22
2.5.4 鼠标位置 24
2.5.5 触摸事件 25
2.5.6 触摸位置 26
2.5.7 键盘事件 27
2.5.8 键盘码 28
2.6 小结 30
第3章 动画中的三角学 31
3.1 三角学 32
3.2 角 32
3.2.1 弧度和角度 32
3.2.2 canvas坐标系 33
3.2.3 三角形的边 35
3.2.4 三角函数 35
3.3 旋转 39
3.4 波 42
3.4.1 平滑的上下运动 43
3.4.2 线性垂直运动 45
3.4.3 脉冲运动 46
3.4.4 使用两个角的产生波 47
3.4.5 使用绘图API产生的波 48
3.5 圆与椭圆 49
3.5.1 圆周运动 49
3.5.2 椭圆运动 51
3.6 勾股定律 52
3.6.1 两点间距离 52
3.7 本章中的重要公式 55
3.7.1 三角学基础函数 55
3.7.2 角度与弧度互转 55
3.7.3 朝鼠标（或任意一点）旋转 55
3.7.4 创建波 56
3.7.5 创建圆形 56
3.7.6 创建椭圆形 56
3.7.7 获取两点间的距离 56
3.8 小结 57
第4章 渲染技术 58
4.1 canvas上的颜色 58
4.1.1 使用十六进制表示颜色值 59
4.1.2 色彩合成 60
4.1.3 提取三原色 61
4.1.4 透明度 62
4.1.5 与颜色相关的工具函数 63
4.2 绘图API 64
4.3 canvas上下文 65
4.4 使用clearRect消除图案 65
4.4.1 设置线条的外观 66
4.5 使用lineTo与moveTo绘制路径 66
4.5.1 使用quadraticCurveTo绘制曲线 68
4.5.2 创建多条曲线 70
4.5.3 其他形式的曲线 74
4.6 使用填充色创建图形 74
4.6.1 创建渐变填充色 75
4.6.2 设置渐变色的颜色 76
4.7 加载并绘制图片 77
4.7.1 加载图片 77
4.7.2 使用图片元素 78
4.7.3 使用视频元素 79
4.8 操纵像素 81
4.8.1 获取像素数据 81
4.8.2 绘制像素数据 82
4.9 本章中的重要公式 86
4.9.1 从十六进制转换到十进制 86
4.9.2 从十进制转换到十六进制 86
4.9.3 组合三原色 86
4.9.4 提取三原色 86
4.9.5 绘制一条穿越某个点的曲线 87
4.10 小结 87
第二部分基本动画
第5章 速度向量和加速度 90
5.1 速度向量 90
5.1.1 向量与速度向量 91
5.1.2 单轴上的速度向量 91
5.1.3 双轴上的速度向量 94
5.1.4 角速度 94
5.1.5 向量加法 96
5.1.6 鼠标追随者 97
5.1.7 速度向量扩展 98
5.2 加速度 100
5.2.1 单轴加速度 100
5.2.2 双轴加速度 102
5.2.3 重力加速度 104
5.2.4 角加速度 105
5.2.5 宇宙飞船 107
5.2.6 飞船控制 108
5.3 本章中的重要公式 111
5.3.1 将角速度分解为x、y轴上的速度向量 111
5.3.2 将角加速度（作用域物体上的力）分解为x、y轴上的加速度 111
5.3.3 将加速度加入速度向量 111
5.3.4 将速度向量加入位置坐标 111
5.4 小结 111
第6章 边界与摩擦力 112
6.1 环境边界 113
6.1.1 设置边界 113
6.1.2 移除物体 114
6.1.3 重置物体 117
6.1.4 屏幕环绕 119
6.1.5 反弹 121
6.2 摩擦力 124
6.2.1 摩擦力，正确方法 125
6.2.2 摩擦力，简便方法 126
6.2.3 摩擦力应用 127
6.3 本章中的重要公式 128
6.3.1 移除越界物体 128
6.3.2 重置越界物体 129
6.3.3 越界物体的屏幕环绕 129
6.3.4 应用摩擦力（正确方法） 129
6.3.5 应用摩擦力（简便方法） 129
6.4 小结 129
第7章 用户交互：移动物体 130
7.1 按下及释放物体 130
7.1.1 使用触摸事件 133
7.2 拖曳对象 135
7.2.1 结合运动代码的拖曳 136
7.3 投掷 139
7.4 小结 142
第三部分高级动画
第8章 缓动与弹动 144
8.1 比例运动 144
8.2 缓动 145
8.2.1 简单缓动 145
8.2.2 高级缓动 153
8.3 弹动 153
8.3.1 一维坐标上的弹动 154
8.3.2 二维坐标上的弹动 156
8.3.3 向移动的目标点弹动 157
8.3.4 弹簧在哪儿 158
8.3.5 链式弹动 159
8.3.6 多个目标点的弹动 161
8.3.7 目标偏移量 163
8.3.8 用弹簧连接多个物体 165
8.4 本章中的重要公式 170
8.4.1 简单缓动，详细版 170
8.4.2 简单缓动，缩略版 170
8.4.3 简单缓动，简易版 170
8.4.4 简单弹动，详细版 170
8.4.5 简单弹动，缩略版 171
8.4.6 简单弹动，简易版 171
8.4.7 有偏移量的弹动 171
8.5 小结 171
第9章 碰撞检测 172
9.1 碰撞检测的方法 172
9.2 基于几何图形的碰撞检测 173
9.2.1 两个物体间的碰撞检测 173
9.2.2 物体和点的碰撞检测 177
9.2.3 几何图形碰撞检测法的总结 179
9.3 基于距离的碰撞检测 179
9.3.1 基于距离的简单碰撞检测 180
9.3.2 弹性碰撞 182
9.4 多物体的碰撞检测策略 184
9.4.1 基础的多物体碰撞检测 184
9.4.2 多物体弹动 186
9.5 本章中的重要公式 189
9.5.1 基于距离的碰撞检测 189
9.5.2 多物体碰撞检测 189
9.6 小结 189
第10章 坐标旋转与斜面反弹 190
10.1 简单坐标旋转 190
10.2 高级坐标旋转 192
10.2.1 旋转单个物体 193
10.2.2 旋转多个物体 194
10.3 斜面反弹 196
10.3.1 执行旋转 197
10.3.2 优化代码 201
10.3.3 实现动态效果 202
10.3.4 修复“不从边缘落下”的问题 202
10.3.5 修复“线下”问题 204
10.3.6 从多个斜面反弹 205
10.4 本章中的重要公式 208
10.4.1 坐标旋转 208
10.4.2 反向坐标旋转 208
10.5 小结 208
第11章 撞球物理 209
11.1 质量 209
11.2 动量 210
11.3 动量守恒 210
11.3.1 单轴上的动量守恒 212
11.3.2 双轴上的动量守恒 216
11.4 本章中的重要公式 231
11.4.1 动量守恒的数学表示 231
11.4.2 动量守恒的JavaScript代码 231
11.5 小结 231
第12章 粒子与万有引力 232
12.1 粒子 232
12.2 万有引力 233
12.2.1 万有引力 234
12.2.2 碰撞检测及反应 236
12.2.3 轨道运动 237
12.3 弹力 238
12.3.1 万有引力VS弹力 238
12.3.2 弹力节点花园 238
12.3.3 相连的节点 241
12.3.4 有质量的节点 242
12.4 本章中的重要公式 244
12.4.1 基本引力 244
12.4.2 引力公式的JavaScript实现 244
12.5 小结 244
第13章 正向运动学：让物体行走 245
13.1 介绍正向和反向运动学 245
13.2 正向运动学编程入门 246
13.2.1 移动一个节段 246
13.2.2 移动两个节段 251
13.3 过程自动化 253
13.3.1 建立一个自然行走周期 254
13.3.2 动态调整 257
13.4 让它真实地行走 260
13.4.1 给它一些空间 260
13.4.2 加入重力 260
13.4.3 处理碰撞 261
13.4.4 处理反作用力 262
13.4.5 屏幕环绕，重复 264
13.5 小结 267
第14章 反向运动学：拖曳与伸出 268
14.1 伸出和拖曳单个节段 268
14.1.1 伸出单个节段 269
14.1.2 拖曳单个节段 270
14.2 拖曳多个节段 270
14.2.1 拖曳两个节段 271
14.2.2 拖曳更多节段 272
14.3 伸出多个节段 274
14.3.1 伸向鼠标位置 274
14.3.2 伸向一个物体 279
14.3.3 加入一些交互 280
14.4 使用标准反向运动学方法 281
14.4.1 介绍余弦定理 281
14.4.2 编程实现余弦定理 283
14.5 本章中的重要公式 285
14.5.1 余弦定理 285
14.5.2 JavaScript中的余弦定理 285
14.6 小结 285
第四部分3D动画
第15章 三维基础 288
15.1 第三维度与透视图 289
15.1.1 z轴 289
15.1.2 透视图 290
15.2 速度与加速度 293
15.3 反弹 295
15.3.1 单物体反弹 295
15.3.2 多物体反弹 297
15.3.3 Z排序 300
15.4 重力 301
15.5 屏幕环绕 304
15.6 缓动与弹动 311
15.6.1 缓动 311
15.6.2 弹动 312
15.7 坐标旋转 314
15.8 碰撞检测 319
15.9 本章中的重要公式 321
15.9.1 基本透视图 321
15.9.2 Z排序 321
15.9.3 坐标旋转 322
15.9.4 三维距离计算 322
15.10 小结 322
第16章 三维线条与填充 323
16.1 创建点和线 323
16.2 创建图形 328
16.3 创建三维填充 332
16.3.1 使用三角形 332
16.4 三维实体建模 337
16.4.1 建模旋转的立方体 337
16.4.2 建模其他形状 339
16.5 移动三维实体 343
16.6 小结 344
第17章 背面剔除与三维灯光 345
17.1 背面剔除 346
17.2 增强的深度排序 348
17.3 三维灯光 349
17.4 小结 356
第五部分其他技巧
第18章 矩阵数学 358
18.1 矩阵基础 358
18.2 矩阵运算 359
18.2.1 矩阵加法 359
18.2.2 矩阵乘法 360
18.3 canvas变换 363
18.4 小结 366
第19章 秘诀与技巧 367
19.1 布朗（随机）运动 367
19.2 随机分布 370
19.2.1 正方形分布 370
19.2.2 圆形分布 372
19.2.3 偏向分布 374
19.2.4 基于碰撞的分布 376
19.3 基于定时器和基于时间的动画 378
19.3.1 基于定时器的动画 378
19.3.2 基于时间的动画 379
19.4 等质量物体之间的碰撞 381
19.5 集成声音 382
19.6 小结 385
附录A 常用公式 386
A.1 第3章 386
A.1.1 三角学基础函数 386
A.1.2 角度与弧度互转 386
A.1.3 朝鼠标指针（或任意一点）旋转 386
A.1.4 创建波 386
A.1.5 创建圆形 387
A.1.6 创建椭圆形 387
A.1.7 获取两点间的距离 387
A.2 第4章 387
A.2.1 从十六进制转换到十进制 387
A.2.2 从十进制转换到十六进制 387
A.2.3 组合三原色 387
A.2.4 提取三原色 388
A.2.5 绘制一条穿越某个点的曲线 388
A.3 第5章 388
A.3.1 将角速度分解为x、y轴上的速度向量 388
A.3.2 将角加速度（作用于物体上的力）分解为x、y轴上的加速度 388
A.3.3 将加速度加入速度向量 388
A.3.4 将速度向量加入位置坐标 388
A.4 第6章 388
A.4.1 移除越界物体 388
A.4.2 重置越界物体 389
A.4.3 屏幕环绕越界物体 389
A.4.4 应用摩擦力（正确方法） 389
A.4.5 应用摩擦力（简便方法） 389
A.5 第8章 389
A.5.1 简单缓动，详细版 389
A.5.2 简单缓动，缩略版 390
A.5.3 简单缓动，简易版 390
A.5.4 简单弹动，详细版 390
A.5.5 简单弹动，缩略版 390
A.5.6 简单弹动，简易版 390
A.5.7 有偏移量的弹动 390
A.6 第9章 391
A.6.1 基于距离的碰撞检测 391
A.6.2 多物体碰撞检测 391
A.7 第10章 391
A.7.1 坐标旋转 391
A.7.2 反向坐标旋转 391
A.8 第11章 391
A.8.1 动量守恒的数学表示 391
A.8.2 动量守恒的JavaScript代码 392
A.9 第12章 392
A.9.1 基本引力 392
A.9.2 引力公式的JavaScript实现 392
A.10 第14章 392
A.10.1 余弦定理 392
A.10.2 JavaScript中的余弦定理 392
A.11 第15章 393
A.11.1 基本透视图 393
A.11.2 Z排序 393
A.11.3 坐标旋转 393
A.11.4 三维距离计算 393
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5+JavaScript动画基础
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>你不知道的JavaScript（中卷）
前言 XI
第一部分　类型和语法
序　　2
第1章 　类型　　3
1.1　类型　　4
1.2　内置类型　　4
1.3　值和类型　　6
1.3.1　undefined 和undeclared　　6
1.3.2　typeof Undeclared　　7
1.4　小结　　10
第2章　值　　11
2.1　数组　　11
2.2　字符串　　13
2.3　数字　　15
2.3.1　数字的语法　　16
2.3.2　较小的数值　　18
2.3.3　整数的安全范围　　19
2.3.4　整数检测　　20
2.3.5　32 位有符号整数　　20
2.4　特殊数值　　21
2.4.1　不是值的值　　21
2.4.2　undefined　　21
2.4.3　特殊的数字　　23
2.4.4　特殊等式　　27
2.5　值和引用　　28
2.6　小结　　31
第3章　原生函数　　33
3.1　内部属性[[Class]]　　34
3.2　封装对象包装　　35
3.3　拆封　　36
3.4　原生函数作为构造函数　　37
3.4.1　Array(..)　　37
3.4.2　Object(..)、Function(..) 和RegExp(..)　　40
3.4.3　Date(..) 和Error(..)　　41
3.4.4　Symbol(..)　　42
3.4.5　原生原型　　43
3.5　小结　　45
第4章　强制类型转换　　46
4.1　值类型转换　　46
4.2　抽象值操作　　47
4.2.1　ToString　　48
4.2.2　ToNumber　　52
4.2.3　ToBoolean　　53
4.3　显式强制类型转换　　56
4.3.1　字符串和数字之间的显式转换　　57
4.3.2　显式解析数字字符串　　62
4.3.3　显式转换为布尔值　　65
4.4　隐式强制类型转换　　67
4.4.1　隐式地简化　　67
4.4.2　字符串和数字之间的隐式强制类型转换　　68
4.4.3　布尔值到数字的隐式强制类型转换　　71
4.4.4　隐式强制类型转换为布尔值　　72
4.4.5　|| 和&&　　73
4.4.6　符号的强制类型转换　　76
4.5　宽松相等和严格相等　　77
4.5.1　相等比较操作的性能　　77
4.5.2　抽象相等
4.6　抽象关系比较　　89
4.7　小结　　91
第5章　语法　　92
5.1　语句和表达式　　92
5.1.1　语句的结果值　　93
5.1.2　表达式的副作用　　95
5.1.3　上下文规则　　99
5.2　运算符优先级　　104
5.2.1　短路　　107
5.2.2　更强的绑定　　107
5.2.3　关联　　108
5.2.4　释疑　　110
5.3　自动分号　　111
5.4　错误　　113
5.5　函数参数　　115
5.6　try..finally　　117
5.7　switch　　120
5.8　小结　　122
附录A　混合环境JavaScript　　123
第二部分　异步和性能
序　　136
第1章　异步：现在与将来　　138
1.1　分块的程序　　139
1.2　事件循环　　141
1.3　并行线程　　143
1.4　并发　　148
1.4.1　非交互　　150
1.4.2　交互　　150
1.4.3　协作　　154
1.5　任务　　156
1.6　语句顺序　　157
1.7　小结　　159
第2章　回调　　161
2.1　continuation　　162
2.2　顺序的大脑　　163
2.2.1　执行与计划　　164
2.2.2　嵌套回调与链式回调　　165
2.3　信任问题　　169
2.3.1　五个回调的故事　　170
2.3.2　不只是别人的代码　　171
2.4　省点回调　　173
2.5　小结　　176
第3章　Promise　　178
3.1　什么是Promise　　179
3.1.1　未来值　　179
3.1.2　完成事件　　183
3.2　具有then 方法的鸭子类型　　188
3.3　Promise 信任问题　　190
3.3.1　调用过早　　190
3.3.2　调用过晚　　191
3.3.3　回调未调用　　192
3.3.4　调用次数过少或过多　　193
3.3.5　未能传递参数/ 环境值　　193
3.3.6　吞掉错误或异常　　194
3.3.7　是可信任的Promise 吗　　195
3.3.8　建立信任　　197
3.4　链式流　　198
3.5　错误处理　　206
3.5.1　绝望的陷阱　　208
3.5.2　处理未捕获的情况　　209
3.5.3　成功的坑　　211
3.6　Promise 模式　　212
3.6.1　Promise.all([ .. ])　　212
3.6.2　Promise.race([ .. ])　　213
3.6.3　all([ .. ]) 和race([ .. ]) 的变体　　216
3.6.4　并发迭代　　217
3.7　Promise API 概述　　219
3.7.1　new Promise(..) 构造器　　219
3.7.2　Promise.resolve(..) 和Promise.reject(..)　　219
3.7.3　then(..) 和catch(..)　　220
3.7.4　Promise.all([ .. ]) 和Promise.race([ .. ])　　221
3.8　Promise 局限性　　222
3.8.1　顺序错误处理　　222
3.8.2　单一值　　223
3.8.3　单决议　　225
3.8.4　惯性　　227
3.8.5　无法取消的Promise　　230
3.8.6　Promise 性能　　231
3.9　小结　　233
第4章　生成器　　234
4.1　打破完整运行　　234
4.1.1　输入和输出　　236
4.1.2　多个迭代器　　239
4.2　生成器产生值　　243
4.2.1　生产者与迭代器　　243
4.2.2　iterable　　246
4.2.3　生成器迭代器　　247
4.3　异步迭代生成器　　250
4.4　生成器+Promise　　254
4.4.1　支持Promise 的Generator Runner　　256
4.4.2　生成器中的Promise 并发　　258
4.5　生成器委托　　262
4.5.1　为什么用委托　　264
4.5.2　消息委托　　264
4.5.3　异步委托　　268
4.5.4　递归委托　　268
4.6　生成器并发　　269
4.7　形实转换程序　　273
4.8　ES6 之前的生成器　　279
4.8.1　手工变换　　280
4.8.2　自动转换　　284
4.9　小结　　285
第5章　程序性能　　287
5.1　Web Worker　　288
5.1.1　Worker 环境　　290
5.1.2　数据传递　　291
5.1.3　共享Worker　　291
5.1.4　模拟Web Worker　　293
5.2　SIMD　　293
5.3　asm.js　　295
5.3.1　如何使用asm.js 优化　　295
5.3.2　asm.js 模块　　296
5.4　小结　　298
第6章　性能测试与调优　　299
6.1　性能测试　　99
6.1.1　重复　　300
6.1.2　Benchmark.js　　301
6.2　环境为王　　303
6.3　jsPerf.com　　305
6.4　写好测试　　309
6.5　微性能　　309
6.5.1　不是所有的引擎都类似　　312
6.5.2　大局　　314
6.6　尾调用优化　　316
6.7　小结　　318
附录A　asynquence 库　　319
附录B　高级异步模式　　339
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>你不知道的JavaScript（中卷）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>你不知道的JavaScript（下卷）
前言 xi
致谢 xvii
第 一部分 起步上路
序 2
第 1 章 深入编程 4
1.1 代码 4
1.2 表达式 5
1.3 实践 6
1.3.1 输出 7
1.3.2 输入 8
1.4 运算符 9
1.5 值与类型 11
1.6 代码注释 13
1.7 变量 14
1.8 块 16
1.9 条件判断 17
1.10 循环 18
1.11 函数 20
1.12 实践 23
1.13 小结 25
第 2 章 深入JavaScript 26
2.1 值与类型 26
2.1.1 对象 28
2.1.2 内置类型方法 30
2.1.3 值的比较 31
2.2 变量 35
2.3 条件判断 37
2.4 严格模式 39
2.5 作为值的函数 40
2.5.1 立即调用函数表达式 41
2.5.2 闭包 42
2.6 this标识符 44
2.7 原型 46
2.8 旧与新 47
2.8.1 polyfilling 47
2.8.2 transpiling 48
2.9 非JavaScript 49
2.10 小结 50
第 3 章 深入“你不知道的JavaScript”系列 51
3.1 作用域和闭包 51
3.2 this和对象原型 52
3.3 类型和语法 53
3.4 异步和性能 53
3.5 ES6及更新版本 54
3.6 小结 55
第 二部分 ES6及更新版本
序 58
第 1 章 ES？现在与未来 59
1.1 版本 60
1.2 transpiling 61
1.3 小结 63
第 2 章 语法 64
2.1 块作用域声明 64
2.1.1 let声明 65
2.1.2 const声明 68
2.1.3 块作用域函数 70
2.2 spread/rest 71
2.3 默认参数值 73
2.4 解构 77
2.4.1 对象属性复制模式 78
2.4.2 不只是声明 79
2.4.3 重复赋值 81
2.5 太多，太少，刚刚好 83
2.5.1 默认值赋值 84
2.5.2 嵌套解构 84
2.5.3 解构参数 85
2.6　对象字面量扩展 90
2.6.1　简洁属性 90
2.6.2　简洁方法 90
2.6.3　计算属性名 95
2.6.4　设定[[Prototype]] 96
2.6.5　super对象 97
2.7　模板字面量 98
2.7.1　插入表达式 99
2.7.2　标签模板字面量 100
2.8　箭头函数 103
2.9　for..of循环 109
2.10　正则表达式 111
2.10.1　Unicode标识 111
2.10.2　定点标识 112
2.10.3　正则表达式flags 116
2.11　数字字面量扩展 117
2.12　Unicode 118
2.12.1　支持Unicode的字符串运算 119
2.12.2　字符定位 121
2.12.3　Unicode标识符名 123
2.13　符号 123
2.13.1　符号注册 125
2.13.2　作为对象属性的符号 127
2.14　小结 128
第 3 章　代码组织 129
3.1　迭代器 129
3.1.1　接口 130
3.1.2　next()迭代 131
3.1.3　可选的return(..)和throw(..) 132
3.1.4　迭代器循环 133
3.1.5　自定义迭代器 134
3.1.6　迭代器消耗 137
3.2　生成器 138
3.2.1　语法 139
3.2.2　迭代器控制 144
3.2.3　提前完成 147
3.2.4　错误处理 149
3.2.5　Transpile生成器 151
3.2.6　生成器使用 152
3.3　模块 153
3.3.1　旧方法 153
3.3.2　前进 154
3.3.3　新方法 156
3.3.4　模块依赖环 164
3.3.5　模块加载 166
3.4　类 167
3.4.1　class 168
3.4.2　extends和super 169
3.4.3　new.target 174
3.4.4　static 175
3.5　小结 176
第 4 章　异步流控制 177
4.1　Promise 177
4.1.1　构造和使用Promise 178
4.1.2　Thenable 180
4.1.3　Promise API 181
4.2　生成器 + Promise 183
4.3　小结 185
第 5 章　集合 187
5.1　TypedArray 187
5.1.1　大小端（Endianness） 188
5.1.2　多视图 189
5.1.3　带类数组构造器 190
5.2　Map 192
5.2.1　Map值 194
5.2.2　Map键 194
5.3　WeakMap 195
5.4　Set 196
5.5　WeakSet 198
5.6　小结 199
第 6 章　新增API 200
6.1　Array 200
6.1.1　静态函数Array.of(..) 200
6.1.2　静态函数Array.from(..) 201
6.1.3　创建数组和子类型 204
6.1.4　原型方法copyWithin(..) 205
6.1.5　原型方法fill(..) 206
6.1.6　原型方法find(..) 206
6.1.7　原型方法findIndex(..) 207
6.1.8　原型方法entries()、values()、keys() 208
6.2　Object 209
6.2.1　静态函数Object.is(..) 209
6.2.2　静态函数Object.getOwnPropertySymbols(..) 210
6.2.3　静态函数Object.setPrototypeOf(..) 210
6.2.4　静态函数Object.assign(..) 211
6.3　Math 212
6.4　Number 214
6.4.1　静态属性 214
6.4.2　静态函数Number.isNaN(..) 214
6.4.3　静态函数Number.isFinite(..) 215
6.4.4　整型相关静态函数 215
6.5　字符串 216
6.5.1　Unicode函数 217
6.5.2　静态函数String.raw(..) 217
6.5.3　原型函数repeat(..) 217
6.5.4　字符串检查函数 218
6.6　小结 218
第 7 章　元编程 219
7.1　函数名称 219
7.2　元属性 222
7.3　公开符号 223
7.3.1　Symbol.iterator 223
7.3.2　Symbol.toStringTag与Symbol.hasInstance 224
7.3.3　Symbol.species 225
7.3.4　Symbol.toPrimitive 226
7.3.5　正则表达式符号 226
7.3.6　Symbol.isConcatSpreadable 227
7.3.7　Symbol.unscopables 228
7.4　代理 228
7.4.1　代理局限性 231
7.4.2　可取消代理 232
7.4.3　使用代理 233
7.5　Reflect API 240
7.6　特性测试 243
7.7　尾递归调用（Tail Call Optimization,TCO） 245
7.7.1　尾调用重写 247
7.7.2　非TCO优化 248
7.7.3　元在何处 250
7.8　小结 251
第 8 章　ES6之后 253
8.1　异步函数 254
8.2　Object.observe(..) 257
8.2.1　自定义改变事件 258
8.2.2　结束观测 259
8.3　幂运算符 260
8.4　对象属性与... 260
8.5　Array#includes 261
8.6　SIMD 262
8.7　WebAssembly (WASM) 262
8.8　小结 264
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>你不知道的JavaScript（下卷）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript面向对象精要
第1章　原始类型和引用类型 1
1.1　什么是类型 2
1.2　原始类型 3
1.2.1　鉴别原始类型 4
1.2.2　原始方法 6
1.3　引用类型 6
1.3.1　创建对象 6
1.3.2　对象引用解除 7
1.3.3　添加删除属性 8
1.4　内建类型实例化 8
1.4.1　字面形式 9
1.4.2　对象和数组字面形式 9
1.4.3　函数字面形式 10
1.4.4　正则表达式字面形式 11
1.5　访问属性 11
1.6　鉴别引用类型 12
1.7　鉴别数组 13
1.8　原始封装类型 14
1.9　总结 16
第2章　函数 17
2.1　声明还是表达式 18
2.2　函数就是值 19
2.3　参数 21
2.4　重载 23
2.5　对象方法 24
2.5.1　this对象 25
2.5.2　改变this 26
2.6　总结 29
第3章　理解对象 31
3.1　定义属性 32
3.2　属性探测 33
3.3　删除属性 35
3.4　属性枚举 36
3.5　属性类型 37
3.6　属性特征 38
3.6.1　通用特征 39
3.6.2　数据属性特征 40
3.6.3　访问器属性特征 41
3.6.4　定义多重属性 43
3.6.5　获取属性特征 44
3.7　禁止修改对象 45
3.7.1　禁止扩展 45
3.7.2　对象封印 45
3.7.3　对象冻结 47
3.8　总结 48
第4章　构造函数和原型对象 49
4.1　构造函数 49
4.2　原型对象 53
4.2.1　[[Prototype]]属性 54
4.2.2　在构造函数中使用原型对象 57
4.2.3　改变原型对象 60
4.2.4　内建对象的原型对象 62
4.3　总结 63
第5章　继承 65
5.1　原型对象链和Object.prototype 65
5.1.1　继承自Object.prototype的方法 66
5.1.2　修改Object.prototype 68
5.2　对象继承 69
5.3　构造函数继承 72
5.4　构造函数窃取 75
5.5　访问父类方法 77
5.6　总结 78
第6章　对象模式 79
6.1　私有成员和特权成员 80
6.1.1　模块模式 80
6.1.2　构造函数的私有成员 82
6.2　混入 84
6.3　作用域安全的构造函数 90
6.4　总结 92
索引 93
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript面向对象精要
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Three.js开发指南
前　言
致　谢
第1章用Three.js创建你的第一个三维场景1
1.1　使用Three.js的前提条件3
1.2　获取源代码4
1.2.1　用Git克隆代码仓库4
1.2.2　下载并解压压缩包5
1.2.3　测试示例6
1.3　创建HTML页面框架7
1.4　渲染并展示三维对象9
1.5　添加材质、灯光和阴影13
1.6　用动画扩展你的首个场景15
1.6.1　引入requestAnimation-Frame()方法15
1.6.2　转动方块17
1.6.3　弹跳球17
1.7　使用dat.GUI库简化试验18
1.8　使用ASCII效果19
1.9　总结20
第2章使用构建Three.js场景的基本组件22
2.1　创建场景22
2.1.1　场景的基本功能23
2.1.2　在场景中添加雾化效果27
2.1.3　使用材质覆盖属性28
2.2　使用几何和网格对象29
2.2.1　几何对象的属性和函数29
2.2.2　网格对象的函数和属性33
2.3　选择合适的相机37
2.3.1　正投影相机和透视相机37
2.3.2　让相机在指定点上聚焦41
2.4　总结41
第3章使用Three.js里的各种光源43
3.1　探索Three.js库提供的光源43
3.2　学习基础光源44
3.2.1　AmbientLight—影响整个场景的光源44
3.2.2　PointLight—照射所有方向的光源47
3.2.3　SpotLight—具有锥形效果的光源49
3.2.4　DirectinalLight—模拟远处类似太阳的光源53
3.2.5　使用特殊光源生成高级光照效果54
3.3　总结61
第4章使用Three.js的材质62
4.1　理解共有属性63
4.1.1　基础属性63
4.1.2　融合属性64
4.1.3　高级属性64
4.2　从简单的网格材质（基础、深度和面）开始65
4.2.1　简单表面的MeshBasic-Material65
4.2.2　基于深度着色的MeshDepthMaterial67
4.2.3　联合材质68
4.2.4　计算法向颜色的MeshNormalMaterial70
4.2.5　为每个面指定材质的MeshFaceMaterial72
4.3　学习高级材质73
4.3.1　用于暗淡、不光亮表面的MeshLambertMaterial74
4.3.2　用于光亮表面的MeshPhongMaterial75
4.3.3　用ShaderMaterial创建自己的着色器76
4.4　线段几何体的材质81
4.4.1　LineBasicMaterial81
4.4.2　LineDashedMaterial83
4.5　总结84
第5章学习使用几何体85
5.1　Three.js提供的基础几何体86
5.1.1　二维几何体86
5.1.2　三维几何体92
5.2　总结100
第6章使用高级几何体和二元操作102
6.1　ConvexGeometry102
6.2　LatheGeometry104
6.3　通过拉伸创建几何体105
6.3.1　ExtrudeGeometry106
6.3.2　TubeGeometry107
6.3.3　从SVG拉伸109
6.3.4　ParametricGeometry110
6.4　创建三维文本112
6.4.1　渲染文本113
6.4.2　添加自定义字体114
6.5　使用二元操作组合网格115
6.5.1　subtract函数117
6.5.2　intersect函数120
6.5.3　union函数121
6.6　总结121
第7章粒子和粒子系统123
7.1　理解粒子123
7.2　粒子、粒子系统和BasicParticleMaterial125
7.3　使用HTML5画布格式化粒子128
7.3.1　在CanvasRenderer类里使用HTML5画布128
7.3.2　在WebGLRenderer中使用HTML5画布129
7.4　使用纹理格式化粒子131
7.5　从高级几何体中创建粒子系统139
7.6　总结141
第8章创建、加载高级网格和几何体143
8.1　几何体组合和合并143
8.1.1　对象组合143
8.1.2　将多个网格合并成一个网格145
8.2　从外部资源中加载几何体147
8.3　以Three.js的JSON格式保存和加载147
8.3.1　保存和加载几何体147
8.3.2　保存和加载场景149
8.4　使用Blender151
8.4.1　在Blender中安装Three.js导出器152
8.4.2　在Blender里加载和导出模型153
8.5　导入三维格式文件155
8.5.1　OBJ和MTL格式156
8.5.2　加载Collada模型159
8.5.3　加载STL、CTM和VTK模型160
8.5.4　展示蛋白质数据银行中的蛋白质161
8.5.5　从PLY模型中创建粒子系统163
8.6　总结164
第9章创建动画和移动相机166
9.1　基础动画166
9.1.1简单动画167
9.1.2　选择对象168
9.1.3　用Tween.js做动画170
9.2　使用相机172
9.2.1　轨迹球控件172
9.2.2　飞行控件174
9.2.3　翻滚控件175
9.2.4　第一人称控件175
9.2.5　轨道控件177
9.2.6　路径控件178
9.3　变形动画和骨骼动画180
9.3.1　用变形目标制作动画181
9.3.2用骨骼和蒙皮制作动画184
9.4使用外部模型创建动画186
9.4.1　用Blender创建骨骼动画186
9.4.2从Collada模型中加载动画190
9.4.3从雷神之锤模型中加载动画191
9.5总结192
第10章加载和使用纹理194
10.1在材质中使用纹理194
10.1.1加载纹理并应用到网格194
10.1.2使用凹凸贴图创建皱纹197
10.1.3使用法向贴图创建更加细致的凹凸和皱纹198
10.1.4使用光照贴图创建假阴影199
10.1.5用环境贴图创建虚假的反光效果201
10.1.6高光贴图204
10.2纹理的高级用途205
10.2.1定制UV映射205
10.2.2重复映射207
10.2.3在画布上绘制图案并作为纹理209
10.3总结213
第11章定制着色器和渲染后期处理215
11.1设置后期处理215
11.1.1创建EffectComposer对象216
11.2后期处理通道218
11.2.1简单后期处理通道218
11.2.2　使用掩膜的高级效果组合器223
11.2.3　用ShaderPass定制效果226
11.3　创建自定义的后期处理着色器231
11.3.1　定制灰度图着色器232
11.3.2　定制位着色器235
11.4　总结237
第12章用Physijs在场景中添加物理效果238
12.1　创建可用Physijs的基本Three.js场景238
12.2　材质属性243
12.3　基础图形244
12.4　使用约束限制对象移动248
12.4.1　用PointConstraint限制两点间的移动249
12.4.2　用HingeConstraint创建类似门的约束250
12.4.3　用SliderConstraint将移动限制到一个轴252
12.4.4　用ConeTwistConstraint创建类似球销的约束254
12.4.5　用DOFConstraint实现细节的控制255
12.5　总结259
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Three.js开发指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript设计模式
第一篇 面向对象编程
第1章 灵活的语言——JavaScript 2
1.1 入职第一天 2
1.2 函数的另一种形式 2
1.3 用对象收编变量 3
1.4 对象的另一种形式 4
1.5 真假对象 4
1.6 类也可以 5
1.7 一个检测类 5
1.8 方法还可以这样用 6
1.9 函数的祖先 7
1.10 可以链式添加吗 8
1.11 换一种方式使用方法 9
下章剧透 10
忆之获 10
我问你答 10
第2章 写的都是看到的——面向
对象编程 11
2.1 两种编程风格——面向过程与
面向对象 11
2.2 包装明星——封装 12
2.3 传宗接代——继承 19
2.4 老师不止一位——多继承 27
2.5 多种调用方式——多态 29
下章剧透 30
忆之获 31
我问你答 31
第二篇 创建型设计模式
第3章 神奇的魔术师——简单工厂模式 34
3.1 工作中的第一次需求 34
3.2 如果类太多，那么提供一个 35
3.3 一个对象有时也可代替许多类 37
3.4 你的理解决定你选择的方式 38
下章剧透 39
忆之获 39
我问你答 39
第4章 给我一张名片——工厂方法模式 40
4.1 广告展现 40
4.2 方案的抉择 41
4.3 安全模式类 42
4.4 安全的工厂方法 43
下章剧透 44
忆之获 44
我问你答 44
第5章 出现的都是幻觉——抽象
工厂模式 45
5.1 带头模范——抽象类 45
5.2 幽灵工厂——抽象工厂模式 46
5.3 抽象与实现 47
下章剧透 49
忆之获 49
我问你答 49
第6章 分即是合——建造者模式 50
6.1 发布简历 50
6.2 创建对象的另一种形式 50
6.3 创建一位应聘者 52
下章剧透 53
忆之获 53
我问你答 54
第7章 语言之魂——原型模式 55
7.1 语言中的原型 55
7.2 创建一个焦点图 55
7.3 最优的解决方案 56
7.4 原型的拓展 58
7.5 原型继承 58
下章剧透 59
忆之获 60
我问你答 60
第8章 一个人的寂寞——单例模式 61
8.1 滑动特效 61
8.2 命名空间的管理员 62
8.3 模块分明 63
8.4 创建一个小型代码库 63
8.5 无法修改的静态变量 64
8.6 惰性单例 65
下章剧透 65
忆之获 66
我问你答 66
第三篇 结构型设计模式
第9章 套餐服务——外观模式 68
9.1 添加一个点击事件 68
9.2 兼容方式 69
9.3 除此之外 70
9.4 小型代码库 70
下章剧透 71
忆之获 71
我问你答 72
第10章 水管弯弯——适配器模式 73
10.1 引入jQuery 73
10.2 生活中的适配器 73
10.3 jQuery适配器 74
10.4 适配异类框架 74
10.5 参数适配器 75
10.6 数据适配 76
10.7 服务器端数据适配 77
下章剧透 77
忆之获 77
我问你答 78
第11章 牛郎织女——代理模式 79
11.1 无法获取图片上传模块数据 79
11.2 一切只因跨域 79
11.3 站长统计 80
11.4 JSONP 81
11.5 代理模板 81
下章剧透 83
忆之获 83
我问你答 84
第12章 房子装修——装饰者模式 85
12.1 为输入框的新需求 85
12.2 装饰已有的功能对象 86
12.3 为输入框添砖加瓦 86
下章剧透 87
忆之获 87
我问你答 88
第13章 城市间的公路——桥接模式 89
13.1 添加事件交互 89
13.2 提取共同点 90
13.3 事件与业务逻辑之间的桥梁 90
13.4 多元化对象 91
下章剧透 93
忆之获 93
我问你答 93
第14章 超值午餐——组合模式 94
14.1 新闻模块十万火急 94
14.2 餐厅里的套餐业务 95
14.3 每个成员要有祖先 95
14.4 组合要有容器类 96
14.5 创建一个新闻类 97
14.6 把新闻模块创建出来 99
14.7 表单中的应用 100
下章剧透 101
忆之获 101
我问你答 102
第15章 城市公交车——享元模式 103
15.1 翻页需求 103
15.2 冗余的结构 104
15.3 享元对象 104
15.4 实现需求 105
15.5 享元动作 106
下章剧透 108
忆之获 108
我问你答 108
第四篇 行为型设计模式
第16章 照猫画虎——模板方法模式 110
16.1 提示框归一化 110
16.2 美味的蛋糕 111
16.3 创建基本提示框 111
16.4 模板的原型方法 112
16.5 根据模板创建类 113
16.6 继承类也可作为模板类 113
16.7 创建一个提示框 114
16.8 创建多类导航 114
16.9 创建导航更容易 116
下章剧透 116
忆之获 116
我问你答 117
第17章 通信卫星——观察者模式 118
17.1 团队开发的坎坷 118
17.2 卫星的故事 118
17.3 创建一个观察者 119
17.4 拉出来溜溜 121
17.5 使用前的思考 121
17.6 大显身手 121
17.7 对象间解耦 123
17.8 课堂演练 124
下章剧透 125
忆之获 125
我问你答 125
第18章 超级玛丽——状态模式 126
18.1 最美图片 126
18.2 分支判断的思考 126
18.3 状态对象的实现 127
18.4 状态对象演练 127
18.5 超级玛丽 128
18.6 状态的优化 129
18.7 两种使用方式 130
下章剧透 131
忆之获 131
我问你答 131
第19章 活诸葛——策略模式 132
19.1 商品促销 132
19.2 活诸葛 132
19.3 策略对象 133
19.4 诸葛奇谋 133
19.5 缓冲函数 134
19.6 表单验证 134
19.7 算法拓展 135
19.8 算法调用 135
下章剧透 136
忆之获 136
我问你答 137
第20章 有序车站——职责链模式 138
20.1“半成品”需求 138
20.2 分解需求 139
20.3 第一站——请求模块 139
20.4 下一站——响应数据适配模块 140
20.5 终点站——创建组件模块 141
20.6 站点检测——单元测试 141
20.7 方案确定 142
下章剧透 142
忆之获 143
我问你答 143
第21章 命令模式 144
21.1 自由化创建视图 144
21.2 命令对象 145
21.3 视图创建 145
21.4 视图展示 146
21.5 命令接口 147
21.6 大功告成 147
21.7 绘图命令 148
21.8 写一条命令 150
下章剧透 150
忆之获 151
我问你答 151
第22章 驻华大使——访问者模式 152
22.1 设置样式 152
22.2 自娱自乐的IE 152
22.3 访问操作元素 153
22.4 事件自定义数据 153
22.5 原生对象构造器 154
22.6 对象访问器 154
22.7 操作类数组 155
下章剧透 156
忆之获 156
我问你答 156
第23章 媒婆——中介者模式 157
23.1 导航设置层 157
23.2 创建中介者对象 158
23.3 试试看，可否一用 159
23.4 攻克需求 159
23.5 订阅消息 160
23.6 发布消息 161
下章剧透 162
忆之获 162
我问你答 162
第24章 做好笔录——备忘录模式 163
24.1 新闻展示 163
24.2 缓存数据 164
24.3 新闻缓存器 164
24.4 工作中的备忘录 166
下章剧透 166
忆之获 166
我问你答 166
第25章 点钞机——迭代器模式 167
25.1 简化循环遍历 167
25.2 迭代器 167
25.3 实现迭代器 168
25.4 小试牛刀 170
25.5 数组迭代器 171
25.6 对象迭代器 171
25.7 试用迭代器 172
25.8 同步变量迭代器 172
25.9 分支循环嵌套问题 174
25.10 解决方案 176
下章剧透 177
忆之获 177
我问你答 177
第26章 语言翻译——解释器模式 178
26.1 统计元素路径 178
26.2 描述文法 179
26.3 解释器 179
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript设计模式
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript编程精解(第2版)
目录
译者序
赞誉
前言
第一部分JavaScript编程语言
第1章值、类型和运算符2
1.1值2
1.2数字3
1.3字符串5
1.4一元运算符6
1.5布尔值6
1.6未定义值8
1.7自动类型转换8
1.8本章小结10
第2章程序结构11
2.1表达式和语句11
2.2变量12
2.3关键字和保留字13
2.4环境14
2.5函数14
2.6console.log函数14
2.7返回值15
2.8prompt和confirm函数15
2.9控制流16
2.10条件执行16
2.11while和do循环17
2.12代码缩进19
2.13for循环19
2.14跳出循环20
2.15更新变量的简便方法21
2.16switch条件分支21
2.17大写22
2.18注释22
2.19本章小结23
2.20习题23
第3章函数25
3.1定义函数25
3.2参数和作用域26
3.3嵌套作用域27
3.4函数值28
3.5符号声明29
3.6调用栈29
3.7可选参数31
3.8闭包31
3.9递归32
3.10添加新函数35
3.11函数及其副作用37
3.12本章小结37
3.13习题38
第4章数据结构：对象和数组39
4.1松鼠人39
4.2数据集40
4.3属性41
4.4方法41
4.5对象42
4.6可变性44
4.7松鼠人的记录45
4.8计算关联性47
4.9对象映射48
4.10分析结果49
4.11详解数组50
4.12字符串及其属性51
4.13arguments对象52
4.14Math对象53
4.15全局对象55
4.16本章小结55
4.17习题55
第5章高阶函数58
5.1抽象59
5.2数组遍历抽象59
5.3高阶函数61
5.4参数传递62
5.5JSON63
5.6数组过滤64
5.7使用map函数转换数组65
5.8使用reduce进行数据汇总65
5.9可组合性66
5.10性能开销67
5.11曾曾曾曾……祖父67
5.12绑定70
5.13本章小结70
5.14习题71
第6章深入理解对象72
6.1历史72
6.2方法73
6.3原型74
6.4构造函数75
6.5覆盖继承的属性76
6.6原型污染77
6.7无原型对象79
6.8多态79
6.9绘制表格80
6.10Getter与Setter84
6.11继承85
6.12instanceof运算符87
6.13本章小结87
6.14习题88
第7章项目实战：构建电子生态
系统89
7.1定义89
7.2描述世界90
7.3动物的编程接口91
7.4World对象93
7.5this及其作用域94
7.6赋予生命96
7.7动物的爬行动作98
7.8更多动物98
7.9更逼真的生态系统仿真99
7.10动作处理器100
7.11充实这个新世界102
7.12让虚拟世界生机盎然103
7.13习题104
第8章处理缺陷与错误105
8.1开发人员造成的问题105
8.2严格模式106
8.3测试107
8.4调试108
8.5错误传播109
8.6异常110
8.7异常后清理111
8.8选择性捕获112
8.9断言114
8.10本章小结115
8.11习题115
第9章正则表达式116
9.1创建正则表达式116
9.2匹配测试117
9.3匹配字符集117
9.4部分模式重复118
9.5子表达式分组119
9.6匹配和分组119
9.7日期类型120
9.8单词和字符串边界121
9.9选项模式122
9.10匹配原理122
9.11回溯123
9.12replace方法125
9.13贪婪模式126
9.14动态创建RegExp对象127
9.15search方法128
9.16lastIndex属性128
9.17解析INI文件129
9.18国际化字符131
9.19本章小结131
9.20习题132
第10章模块134
10.1模块的好处134
10.2使用函数作为命名空间136
10.3使用对象作为接口137
10.4与全局作用域分离138
10.5将数据作为代码执行138
10.6require函数139
10.7模块加载过慢的问题140
10.8接口设计143
10.9本章小结144
10.10习题145
第11章项目实战：开发编程语言147
11.1解析147
11.2代码执行器150
11.3特殊形式151
11.4环境153
11.5函数154
11.6编译155
11.7站在别人的肩膀上155
11.8习题156
第二部分在浏览器中使用JavaScript
第12章浏览器中的JavaScript160
12.1网络和Internet160
12.2Web161
12.3HTML162
12.4HTML和JavaScript164
12.5沙箱164
12.6兼容性与浏览器之争165
第13章文档对象模型166
13.1文档结构166
13.2树167
13.3标准168
13.4通过树结构访问节点169
13.5查找元素170
13.6修改文档170
13.7创建节点171
13.8属性173
13.9布局175
13.10样式176
13.11层叠样式177
13.12查询选择器178
13.13位置与动画179
13.14本章小结181
13.15习题181
第14章处理事件183
14.1事件处理器183
14.2事件与DOM节点184
14.3事件对象184
14.4传播185
14.5默认动作186
14.6按键事件187
14.7鼠标点击188
14.8鼠标移动189
14.9滚动事件191
14.10焦点事件192
14.11加载事件192
14.12脚本执行时间线193
14.13设置定时器193
14.14降频194
14.15本章小结195
14.16习题196
第15章项目实战：平台游戏198
15.1游戏198
15.2实现技术199
15.3关卡199
15.4读取关卡200
15.5活动元素201
15.6当封装成为负担203
15.7绘图204
15.8动作与冲突208
15.9活动元素与动作209
15.10跟踪按键213
15.11运行游戏213
15.12习题215
第16章使用canvas绘图217
16.1SVG217
16.2canvas元素218
16.3填充与描边219
16.4路径220
16.5曲线221
16.6绘制饼状图224
16.7文本225
16.8图像225
16.9变换227
16.10存储与清除图像的变换状态228
16.11回到游戏230
16.12选择图像接口234
16.13本章小结235
16.14习题235
第17章HTTP协议概述237
17.1协议简介237
17.2浏览器和HTTP238
17.3XMLHttpRequest240
17.4发送请求240
17.5异步请求241
17.6获取XML数据242
17.7HTTP沙箱242
17.8抽象请求243
17.9Promise245
17.10运用HTTP247
17.11安全和HTTPS247
17.12本章小结248
17.13习题248
第18章表单和表单域250
18.1域250
18.2聚焦252
18.3禁用域252
18.4作为整体的表单253
18.5文本域254
18.6选择框和单选框255
18.7选择域256
18.8文件域257
18.9客户端保存数据259
18.10本章小结261
18.11习题261
第19章项目实战：绘图程序263
19.1实现263
19.2建立DOM264
19.3基础265
19.4工具选择265
19.5颜色和画刷大小267
19.6保存269
19.7加载图片文件270
19.8完成271
19.9习题272
第三部分高级主题
第20章Node.js276
20.1背景276
20.2异步性277
20.3node命令278
20.4模块278
20.5使用NPM安装279
20.6文件系统模块281
20.7HTTP模块282
20.8流283
20.9简单的文件服务器284
20.10错误处理288
20.11本章小结290
20.12习题290
第21章项目实战：技能分享网站293
21.1设计293
21.2长轮询294
21.3HTTP接口295
21.4服务器297
21.5客户端303
21.6习题309
第22章JavaScript和性能311
22.1分阶段编译311
22.2图形布局312
22.3定义图313
22.4第一个力导向布局函数314
22.5性能分析316
22.6函数内联317
22.7退化回旧式循环318
22.8避免工作319
22.9产生更少的垃圾319
22.10垃圾回收320
22.11修改对象321
22.12动态类型322
22.13本章小结323
22.14习题324
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript编程精解(第2版)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript 函数式编程
第1章 JavaScript函数式编程简介1
1.1 JavaScript案例1
1.2 开始函数式编程4
1.2.1 为什么函数式编程很重要4
1.2.2 以函数为抽象单元7
1.2.3 封装和隐藏9
1.2.4 以函数为行为单位10
1.2.5 数据抽象14
1.2.6 函数式JavaScript初试17
1.2.7 加速19
1.3 Underscore示例22
1.4 总结23
第2章 一等函数与Applicative编程24
2.1 函数是一等公民24
2.2 Applicative编程30
2.2.1 集合中心编程31
2.2.2 Applicative编程的其他实例32
2.2.3 定义几个Applicative函数35
2.3 数据思考36
2.4 总结43
第3章 变量的作用域和闭包44
3.1 全局作用域44
3.2 词法作用域46
3.3 动态作用域47
3.4 函数作用域51
3.5 闭包52
3.5.1 模拟闭包53
3.5.2 使用闭包57
3.5.3 闭包的抽象59
3.6 总结60
第4章 高阶函数62
4.1 以其他函数为参数的函数62
4.1.1 关于传递函数的思考：max、finder和best63
4.1.2 关于传递函数的更多思考：重复、反复和条件迭代
（iterateUntil）65
4.2 返回其他函数的函数67
4.2.1 高阶函数捕获参数69
4.2.2 捕获变量的好处69
4.2.3 防止不存在的函数：fnull72
4.3 整合：对象校验器74
4.4 总结77
第5章 由函数构建函数78
5.1 函数式组合的精华78
5.2 柯里化（Currying）83
5.2.1 向右柯里化，还是向左84
5.2.2 自动柯里化参数85
5.2.3 柯里化流利的API88
5.2.4 JavaScript柯里化的缺点89
5.3 部分应用89
5.3.1 部分应用一个和两个已知的参数91
5.3.2 部分应用任意数量的参数92
5.3.3 局部应用实战：前置条件93
5.4 通过组合端至端的拼接函数96
5.5 总结98
第6章 递归100
6.1 自吸收（self—absorbed）函数（调用自己的函数）100
6.1.1 用递归遍历图105
6.1.2 深度优先自递归搜索106
6.1.3 递归和组合函数：Conjoin和Disjoin108
6.2 相互关联函数（函数调用其他会再调用回它的函数）110
6.2.1 使用递归深克隆111
6.2.2 遍历嵌套数组112
6.3 太多递归了114
6.3.1 生成器117
6.3.2 蹦床原理以及回调120
6.4 递归是一个底层操作121
6.5 总结122
第7章 纯度、不变性和更改政策123
7.1 纯度123
7.1.1 纯度和测试之间的关系124
7.1.2 提取纯函数125
7.1.3 测试不纯函数的属性126
7.1.4 纯度与引用透明度的关系127
7.1.5 纯度和幂等性129
7.2 不变性130
7.2.1 如果一棵树倒在树林里，有没有声音？132
7.2.2 不变性与递归133
7.2.3 冻结和克隆134
7.2.4 在函数级别上观察不变性136
7.2.5 观察对象的不变性137
7.2.6 对象往往是一个低级别的操作140
7.3 控制变化的政策141
7.4 总结144
第8章 基于流的编程145
8.1 链接145
8.1.1 惰性链148
8.1.2 Promises152
8.2 管道154
8.3 数据流与控制流158
8.3.1 找个一般的形状161
8.3.2 函数可以简化创建action164
8.4 总结166
第9章 无类编程167
9.1 数据导向167
9.2 Mixins173
9.2.1 修改核心原型175
9.2.2 类层次结构176
9.2.3 改变层级结构179
9.2.4 用Mixin扁平化层级结构180
9.2.5 通过Mixin扩展新的语义185
9.2.6 通过Mixin混合出新的类型187
9.2.7 方法是低级别操作188
9.3.call（“Finis”）；190
附录A 更多函数式JavaScript191
A.1 JavaScript的函数式库191
A.1.1 函数式JavaScript191
A.1.2 Underscore—contrib192
A.1.3 RxJS192
A.1.4 Bilby194
A.1.5 allong.es195
A.1.6 其他函数式库196
A.2 能编译成JavaScript的函数式语言196
A.2.1 ClojureScript196
A.2.2 CoffeeScript197
A.2.3 Roy198
A.2.4 Elm198
附录B推荐书目
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript 函数式编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node.js开发实战
第一部分  开始接触Node.js 1
第1章  入门 3
1.1  不限于Web 3
1.2  Node.js的应用范围 4
1.3  Node.js的工作原理 6
1.4  Node.js开发的5个方面 8
1.5  安装Node.js 9
第2章  文件操作 11
2.1  Node.js事件循环编程 12
2.2  创建子进程 16
2.3  使用EventEmitter 获取数据 18
2.4  异步读/写文件 20
2.5  Node.js程序运行的两个阶段 24
2.6  小结与练习 24
第3章  Socket网络编程 26
3.1  监听Socket连接 27
3.2  实现消息协议 32
3.3  建立Socket客户端连接 34
3.4  网络应用功能测试 36
3.5  在自定义模块中扩展Node.js核心类 39
3.6  使用Mocha编写单元测试 44
3.7  小结与练习 50
第4章  创建健壮的微服务 52
4.1  安装ØMQ 53
4.2  发布和订阅消息 58
4.3  响应网络请求 61
4.4  运用ROUTER/DEALER模式 65
4.5  多进程Node.js 68
4.6  推送和拉取消息 72
4.7  小结与练习 75
第二部分  数据处理 79
第5章  数据转换 81
5.1  获取外部数据 82
5.2  基于Mocha和Chai的行为驱动开发 84
5.3  提取数据 90
5.4  依次处理数据文件 100
5.5  使用Chrome DevTools调试测试 103
5.6  小结与练习 108
第6章  操作数据库 111
6.1  Elasticsearch入门 112
6.2  使用Commander创建命令行程序 114
6.3  使用request获取JSON 120
6.4  使用jq处理JSON 125
6.5  批量插入Elasticsearch文档 128
6.6  实现Elasticsearch查询命令 132
6.7  小结与练习 139
第三部分  从头开始创建应用程序 143
第7章  开发RESTful Web服务 145
7.1  使用Express的好处 146
7.2  运用Express开发服务端API 147
7.3  编写模块化的Express的服务 149
7.4  使用nodemon保持服务不间断运行 153
7.5  添加搜索API 154
7.6  使用Promise简化代码 159
7.7  操作RESTfull文档 165
7.8  使用async和await模拟同步 168
7.9  为Express提供一个async处理函数 170
7.10  小结与练习 178
第8章  打造漂亮的用户界面 181
8.1  开始使用webpack 182
8.2  生成第一个webpack Bundle 186
8.3  使用Bootstrap美化页面 188
8.4  引入Bootstrap Javascript和jQuery 192
8.5  使用TypeScript进行转译 193
8.6  使用Handlebars处理HTML模板 197
8.7  实现hash路由 200
8.8  在页面中展示对象数据 202
8.9  使用表单保存数据 207
8.10  小结与练习 211
第9章  强化你的应用 214
9.1  设置初始项目 215
9.2  在Express中管理用户会话 219
9.3  添加身份验证UI元素 222
9.4  设置Passport 224
9.5  通过社交账号进行身份验证 228
9.6  编写Express路由 240
9.7  引入书单UI 245
9.8  在生产模式下部署服务 246
9.9  小结与练习 250
第10章  使用Node-RED进行流式开发 252
10.1  配置Node-RED 252
10.2  保护Node-RED 254
10.3  开发一个Node-RED流 255
10.4  使用Node-RED创建HTTP API 259
10.5  处理Node-RED流中的错误 269
10.6  小结 276
附录A  配置Angular开发环境 277
附录B  配置React开发环境 282
索引 285
翻译审校名单 300
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node.js开发实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>单页Web应用
第一部分　单页应用简介
第1章　第一个单页应用　3
1．1　定义、一些历史和一些关注点　4
1．1．1　一些历史　4
1．1．2　是什么导致JavaScript单页应用姗姗来迟　5
1．1．3　我们的关注点　8
1．2　构建第一个单页应用　9
1．2．1　定义目标　9
1．2．2　创建文件结构　10
1．2．3　使用Chrome开发者工具　10
1．2．4　开发HTML和CSS　11
1．2．5　添加JavaScript　12
1．2．6　使用Chrome开发者工具查看应用　17
1．3　精心编写的单页应用的用户效益　19
1．4　小结　20
第2章　温故JavaScript　22
2．1　变量作用域　24
2．2　变量提升　27
2．3　高级变量提升和执行环境对象　28
2．3．1　提升　28
2．3．2　执行环境和执行环境对象　30
2．4　作用域链　33
2．5　JavaScript对象和原型链　35
2．6　函数——更深入的窥探　43
2．6．1　函数和匿名函数　43
2．6．2　自执行匿名函数　44
2．6．3　模块模式——将私有变量引入JavaScript　46
2．6．4　闭包　51
2．7　小结　54
第二部分　单页应用客户端
第3章　开发Shell　57
3．1　深刻理解Shell　57
3．2　创建文件和名字空间　59
3．2．1　创建文件结构　59
3．2．2　编写应用的HTML文件　60
3．2．3　创建CSS根名字空间　61
3．2．4　创建JavaScript根名字空间　62
3．3　创建功能容器　64
3．3．1　选取策略　64
3．3．2　编写Shell的HTML　64
3．3．3　编写Shell的CSS　65
3．4　渲染功能容器　68
3．4．1　将HTML转换为JavaScript　68
3．4．2　在JavaScript中添加HTML模板　69
3．4．3　编写Shell的样式表　71
3．4．4　指示应用使用Shell　73
3．5　管理功能容器　74
3．5．1　编写展开或收起聊天滑块的方法　74
3．5．2　给聊天滑块添加点击事件处理程序　76
3．6　管理应用状态　80
3．6．1　理解浏览器用户所期望的行为　80
3．6．2　选取一个策略来管理历史控件　81
3．6．3　当发生历史事件时，更改锚　82
3．6．4　使用锚来驱动应用状态　83
3．7　小结　89
第4章　添加功能模块　90
4．1　功能模块策略　91
4．1．1　与第三方模块的比较　91
4．1．2　功能模块和分形MVC模式　93
4．2　创建功能模块文件　96
4．2．1　规划文件结构　96
4．2．2　填写文件　97
4．2．3　我们创建了什么　103
4．3　设计方法API　103
4．3．1　锚接口模式　104
4．3．2　Chat的配置API　105
4．3．3　Chat的初始化API　106
4．3．4　Chat的setSliderPosition API　107
4．3．5　配置和初始化的级联　107
4．4　实现功能API　109
4．4．1　样式表　110
4．4．2　修改Chat　114
4．4．3　清理Shell　120
4．4．4　详细解释执行的过程　125
4．5　添加经常使用的方法　127
4．5．1　removeSlider方法　127
4．5．2　handleResize方法　129
4．6　小结　133
第5章　构建Model　134
5．1　理解Model　135
5．1．1　我们将要构建什么　135
5．1．2　Model做什么　137
5．1．3　Model不做什么　137
5．2　创建Model和其他文件　138
5．2．1　规划文件结构　138
5．2．2　填充文件　139
5．2．3　使用统一的触摸——鼠标库　145
5．3　设计people对象　145
5．3．1　设计person对象　146
5．3．2　设计people对象的API　147
5．3．3　给people对象的API编写文档　150
5．4　构建people对象　151
5．4．1　创建伪造的人员列表　152
5．4．2　开始构建people对象　154
5．4．3　完成people对象的构建　157
5．4．4　测试people对象的API　164
5．5　在Shell中开启登入和登出的功能　166
5．5．1　设计用户登入的体验　167
5．5．2　更新Shell的JavaScript　167
5．5．3　更新Shell的样式表　169
5．5．4　使用UI测试登入和登出　170
5．6　小结　171
第6章　完成Model和Data模块　172
6．1　设计chat对象　172
6．1．1　设计方法和事件　173
6．1．2　给chat对象的API添加文档　175
6．2　构建chat对象　177
6．2．1　先创建chat对象的join方法　177
6．2．2　更新Fake以响应chat．join　179
6．2．3　测试chat．join方法　181
6．2．4　给chat对象添加消息传输功能　182
6．2．5　更新Fake，模拟消息传输功能　187
6．2．6　测试chat的消息传输功能　189
6．3　给Model添加Avatar功能　190
6．3．1　给chat对象添加Avatar功能　190
6．3．2　修改Fake来模拟头像功能　191
6．3．3　测试头像功能　192
6．3．4　测试驱动开发　193
6．4　完成Chat功能模块　195
6．4．1　更新Chat的JavaScript　196
6．4．2　更新样式表　203
6．4．3　测试Chat UI　207
6．5　创建Avatar功能模块　208
6．5．1　创建Avatar的JavaScript　209
6．5．2　创建Avatar的样式表　213
6．5．3　更新Shell和浏览文档　214
6．5．4　测试Avatar功能模块　215
6．6　数据绑定和jQuery　216
6．7　创建Data模块　217
6．8　小结　220
第三部分　单页应用服务器
第7章　Web服务器　223
7．1　服务器的作用　223
7．1．1　认证和授权　224
7．1．2　验证　224
7．1．3　数据的保存和同步　225
7．2　Node．js　225
7．2．1　为什么选择Node．js　225
7．2．2　使用Node．js创建‘Hello World’应用　226
7．2．3　安装并使用Connect　229
7．2．4　添加Connect中间件　230
7．2．5　安装并使用Express　231
7．2．6　添加Express中间件　234
7．2．7　Express的使用环境　235
7．2．8　Express的静态文件服务　236
7．3　高级路由　237
7．3．1　用户对象的CRUD路由　237
7．3．2　通用CRUD路由　243
7．3．3　把路由放到单独的Node．js模块里面　246
7．4　添加认证和授权　249
7．5　Web socket和Socket．IO　251
7．5．1　简单的Socket．IO应用程序　251
7．5．2　Socket．IO和消息服务器　254
7．5．3　使用Socket．IO更新JavaScript　255
7．6　小结　258
第8章　服务器数据库　259
8．1　数据库的作用　259
8．1．1　选择数据存储　260
8．1．2　消除数据转换　260
8．1．3　把逻辑放在需要的地方　261
8．2　MongoDB简介　262
8．2．1　面向文档的存储　262
8．2．2　动态文档结构　262
8．2．3　开始使用MongoDB　263
8．3　使用MongoDB驱动程序　264
8．3．1　准备项目文件　265
8．3．2　安装并连接MongoDB　265
8．3．3　使用MongoDB的CRUD方法　267
8．3．4　向服务器应用添加CRUD操作　270
8．4　验证客户端数据　274
8．4．1　验证对象类型　274
8．4．2　验证对象　276
8．5　创建单独的CRUD模块　283
8．5．1　组织文件结构　284
8．5．2　把CRUD移到它自己的模块里面　287
8．6　构建chat模块　292
8．6．1　开始创建chat模块　293
8．6．2　创建adduser消息处理程序　295
8．6．3　创建updatechat消息处理程序　299
8．6．4　创建disconnect消息处理程序　301
8．6．5　创建updateavatar消息处理程序　302
8．7　小结　305
第9章　单页应用发布准备　306
9．1　单页应用针对搜索引擎的优化　307
9．2　云和第三方服务　310
9．2．1　站点分析　310
9．2．2　记录客户端错误　312
9．2．3　内容分发网络　314
9．3　缓存和缓存破坏　314
9．3．1　缓存时机　315
9．3．2　Web存储　316
9．3．3　HTTP缓存　317
9．3．4　服务器缓存　320
9．3．5　数据库查询缓存　325
9．4　小结　326
附录A　JavaScript编码标准　328
附录B　测试单页应用　361
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>单页Web应用
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript面向对象编程指南
第1章　引言	1
1.1　回顾历史	1
1.2　变革之风	3
1.3　分析现状	3
1.4　展望未来	4
1.5　面向对象程序设计	5
1.5.1　对象	5
1.5.2　类	6
1.5.3　封装	6
1.5.4　聚合	7
1.5.5　继承	7
1.5.6　多态	8
1.6　OOP概述	8
1.7　训练环境设置	9
1.8　使用Firebug控制台	10
1.9　本章小结	11
第2章　基本数据类型、数组、循环及条件表达式	13
2.1　变量	13
2.2　操作符	15
2.3　基本数据类型	18
2.3.1　查看类型操作符——typeof	19
2.3.2　数字	19
2.3.3　字符串	23
2.3.4　布尔值	26
2.3.5　Undefined与null	32
2.4　基本数据类型综述	34
2.5　数组	35
2.5.1　增加、更新数组元素	36
2.5.2　删除元素	36
2.5.3　数组的数组	37
2.6　条件与循环	38
2.6.1　代码块	38
2.6.2　循环	44
2.7　注释	49
2.8　本章小结	49
2.9　练习题	50
第3章　函数	52
3.1　什么是函数	53
3.1.1　调用函数	53
3.1.2　参数	53
3.2　预定义函数	55
3.2.1　parseInt()	56
3.2.2　parseFloat()	57
3.2.3　isNaN()	58
3.2.4　isFinite()	58
3.2.5　URI的编码与反编码	59
3.2.6　eval()	59
3.2.7　一点惊喜—alert()函数	60
3.3　变量的作用域	60
3.4　函数也是数据	62
3.4.1　匿名函数	63
3.4.2　回调函数	64
3.4.3　回调示例	65
3.4.4　自调函数	66
3.4.5　内部（私有）函数	67
3.4.6　返回函数的函数	68
3.4.7　能重写自己的函数	68
3.5　闭包	70
3.5.1　作用域链	70
3.5.2　词法作用域	71
3.5.3　利用闭包突破作用域链	72
3.5.4　Getter与Setter	78
3.5.5　迭代器	79
3.6　本章小结	80
3.7　练习题	80
第4章　对象	82
4.1　从数组到对象	82
4.1.1　元素、属性、方法	84
4.1.2　哈希表、关联型数组	85
4.1.3　访问对象的属性	85
4.1.4　调用对象的方法	86
4.1.5　修改属性与方法	87
4.1.6　使用this值	88
4.1.7　构造器函数	88
4.1.8　全局对象	90
4.1.9　构造器属性	91
4.1.10　instanceof操作符	92
4.1.11　返回对象的函数	92
4.1.12　传递对象	93
4.1.13　对象比较	94
4.1.14　Firebug控制台中的对象	95
4.2　内建对象	96
4.2.1　Object	97
4.2.2　Array	98
4.2.3　Function	102
4.2.4　Boolean	107
4.2.5　Number	109
4.2.6　String	110
4.2.7　Math	115
4.2.8　Date	117
4.2.9　RegExp	121
4.2.10　Error对象	127
4.3　本章小结	131
4.4　练习题	132
第5章　原型	135
5.1　原型属性	135
5.1.1　利用原型添加方法与属性	136
5.1.2　使用原型的方法与属性	137
5.1.3　自身属性与原型属性	138
5.1.4　利用自身属性重写原型属性	139
5.1.5　isPrototypeOf()方法	143
5.1.6　神秘的_proto_链接	143
5.2　扩展内建对象	145
5.2.1　关于扩展内建对象的讨论	146
5.2.2　一些原型陷阱	147
5.3　本章小结	150
5.4　练习题	150
第6章　继承	152
6.1　原型链	152
6.1.1　原型链示例	153
6.1.2　将共享属性迁移到原型中去	156
6.2　只继承于原型	158
6.3　uber—子对象访问父对象的方式	161
6.4　将继承部分封装成函数	163
6.5　属性拷贝	163
6.6　小心处理引用拷贝	165
6.7　对象之间的继承	167
6.8　深拷贝	169
6.9　object()	171
6.10　原型继承与属性拷贝的混合应用	172
6.11　多重继承	173
6.12　寄生式继承	175
6.13　构造器借用	176
6.14　本章小结	179
6.15　案例学习：图形绘制	183
6.15.1　分析	183
6.15.2　实现	184
6.15.3　测试	188
6.16　练习题	189
第7章　浏览器环境	190
7.1　在HTML页面中引入JavaScript代码	190
7.2　概述：BOM与DOM	191
7.3　BOM	192
7.3.1　window对象再探	192
7.3.2　window.navigator	193
7.3.3　Firebug的备忘功能	193
7.3.4　window.location	194
7.3.5　window.history	195
7.3.6　window.frames	196
7.3.7　window.screen	197
7.3.8　window.open()/close()	198
7.3.9　window.moveTo()、window.resizeTo()	199
7.3.10　window.alert()、window.prompt()、window.confirm()	199
7.3.11　window.setTimeout()、window.setInterval()	201
7.3.12　window.document	202
7.4　DOM	202
7.4.1　Core DOM与HTML DOM	204
7.4.2　DOM节点的访问	206
7.4.3　DOM节点的修改	215
7.4.4　新建节点	218
7.4.5　移除节点	221
7.4.6　只适用于HTML的DOM对象	223
7.5　事件	227
7.5.1　内联HTML属性法	227
7.5.2　元素属性法	227
7.5.3　DOM的事件监听器	228
7.5.4　捕捉法与冒泡法	229
7.5.5　阻断传播	231
7.5.6　防止默认行为	233
7.5.7　跨浏览器事件监听器	233
7.5.8　事件类型	235
7.6　XMLHttpRequest对象	236
7.6.1　发送请求	236
7.6.2　处理响应	237
7.6.3　在早于7的IE版本中创建XMLHttpRequest对象	238
7.6.4　A代表异步	239
7.6.5　X代表XML	240
7.6.6　实例示范	240
7.7　本章小结	242
7.8　练习题	244
第8章　编程模式与设计模式	247
8.1　编程模式	248
8.1.1　行为隔离	248
8.1.2　命名空间	250
8.1.3　初始化分支	253
8.1.4　延迟定义	254
8.1.5　配置对象	255
8.1.6　私有属性和方法	257
8.1.7　特权函数	258
8.1.8　私有函数的公有化	258
8.1.9　自执行函数	259
8.1.10　链式调用	260
8.1.11　JSON	261
8.2　设计模式	262
8.2.1　单件模式1	263
8.2.2　单件模式2	263
8.2.3　工厂模式	264
8.2.4　装饰器模式	266
8.2.5　观察者模式	269
8.3　本章小结	272
附录A　保留字	273
附录B　内建函数	276
附录C　内建对象	279
附录D　正则表达式	305
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript面向对象编程指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Head First JavaScript程序设计
前言　　xxv
1　JavaScript速览：进入JavaScript的世界　　1
2　编写代码：更进一步　　43
3　函数简介：养成函数思维　　79
4　让数据排排坐：数组　　125
5　理解对象：对象镇之旅　　173
6　与网页交互：了解DOM　　229
7　类型、相等、转换等：系统地讨论类型　　265
8　综合应用：编写一个应用程序　　317
9　异步编码：处理事件　　381
10　函数是一等公民：自由的函数　　429
11　匿名函数、作用域和闭包：系统地讨论函数　　475
12　高级对象构造技巧：创建对象　　521
13　使用原型：超强的对象创建方式　　563
附录　遗漏内容：未涉足的十大主题　　623
索引　　639
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Head First JavaScript程序设计
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JAVASCRIPT权威指南(第四版)
前言
第一章 JavaScript概述
第一部分 JavaScript的核心
第二章 词法结构
第三章 数据类型和值
第四章 变量
第五章 表达式和运算符
……
第二部分 客户JavaScript
第十二章 Web浏览器中的JavaScript
第十三章 窗口和框架
第十四章 Document对象
第十五章 表单和表单元素
第十六章 脚本化cookie
……
第三部分 JavaScript核心参考手册
JavaScript核心参考手册
第四部分 客户端JavaScript参考手册
客户端JavaScript参考手册
第五部分 W3C DOM 参考手册
W3C DOM 参考手册
第六部分 类、属性、方法和事件处理程序索引
类、属性、方法和事件处理程序索引
词汇表
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JAVASCRIPT权威指南(第四版)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通JavaScript
第一部分　认识现代javascript
第1章　现代javascript程序设计　2
1.1　面向对象的javascript　2
1.2　测试代码　3
1.3　打包分发　4
1.4　分离式dom脚本编程　5
1.4.1　dom　6
1.4.2　事件　7
1.4.3　javascript与css　8
1.5　ajax　8
1.6　浏览器支持　11
1.7　小结　12
第二部分　专业javascript开发
第2章　面向对象的javascript　14
2.1　语言特性　14
2.1.1　引用　14
2.1.2　函数重载和类型检查　16
.2.1.3　作用域　19
2.1.4　闭包　20
2.1.5　上下文对象　23
2.2　面向对象基础　24
2.2.1　对象　25
2.2.2　对象的创建　25
2.3　小结　30
第3章　创建可重用代码　31
3.1　标准化面向对象的代码　31
3.1.1　原型式继承　31
3.1.2　类式继承　32
3.1.3　base库　35
3.1.4　prototype库　36
3.2　打包　39
3.2.1　命名空间　40
3.2.2　清理代码　42
3.2.3　压缩　43
3.3　分发　45
3.4　小结　47
第4章　调试与测试的工具　48
4.1　调试　48
4.1.1　错误控制台　48
4.1.2　dom查看器　52
4.1.3　firebug　54
4.1.4　venkman　55
4.2　测试　56
4.2.1　jsunit　56
4.2.2　j3unit　57
4.2.3　test.simple　58
4.3　小结　59
第三部分　分离式javascript
第5章　dom　62
5.1　dom简介　62
5.2　遍历dom　62
5.2.1　处理dom中的空格　64
5.2.2　简单的dom遍历　66
5.2.3　绑定到每一个html元素　67
5.2.4　标准的dom方法　68
5.3　等待html dom的加载　69
5.3.1　等待整个页面的加载　70
5.3.2　等待大部分dom的加载　70
5.3.3　判断dom何时加载完毕　71
5.4　在html文档中查找元素　73
5.4.1　通过类的值查找元素　73
5.4.2　使用css选择器查找元素　74
5.4.3　xpath　76
5.5　获取元素的内容　77
5.5.1　获取元素内的文本　77
5.5.2　获取元素内的html　78
5.6　操作元素特性　79
5.7　修改dom　82
5.7.1　使用dom创建节点　83
5.7.2　插入到dom中　83
5.7.3　注入html到dom　85
5.7.4　删除dom节点　87
5.8　小结　88
第6章　事件　89
6.1　javascript事件简介　89
6.1.1　异步事件与线程　89
6.1.2　事件阶段　91
6.2　常见事件特性　93
6.2.1　事件对象　93
6.2.2　this关键字　93
6.2.3　取消事件冒泡　94
6.2.4　重载浏览器的默认行为　95
6.3　绑定事件监听函数　97
6.3.1　传统绑定　98
6.3.2　dom绑定：w3c　99
6.3.3　dom绑定：ie　100
6.3.4　addevent和removeevent　100
6.4　事件类型　103
6.5　分离式脚本编程　103
6.5.1　javascript禁用的未雨绸缪　104
6.5.2　确保链接不依赖于javascript　104
6.5.3　监听css何时禁用　105
6.5.4　事件的亲和力　105
6.6　小结　106
第7章　javascript与css　107
7.1　访问样式信息　107
7.2　动态元素　109
7.2.1　元素的位置　109
7.2.2　元素的尺寸　115
7.2.3　元素的可见性　117
7.3　动画　119
7.3.1　滑动　119
7.3.2　渐显　119
7.4　浏览器　120
7.4.1　鼠标位置　120
7.4.2　视口　121
7.5　拖放　123
7.6　库　128
7.6.1　moo.fx和jquery　128
7.6.2　scriptaculous　129
7.7　小结　131
第8章　改进表单　132
8.1　表单验证　132
8.1.1　必填字段　134
8.1.2　模式匹配　136
8.1.3　规则集合　138
8.2　显示错误信息　139
8.2.1　验证　140
8.2.2　何时验证　142
8.3　可用性的提升　144
8.3.1　悬停的说明　144
8.3.2　标记必填字段　146
8.4　小结　147
第9章　制作图库　148
9.1　图库示例　148
9.1.1　lightbox　148
9.1.2　thickbox　150
9.2　制作图库　151
9.2.1　分离加载　154
9.2.2　半透明的覆盖层　155
9.2.3　定位盒子　157
9.2.4　导航　160
9.2.5　幻灯片　162
9.3　小结　165
第四部分　ajax
第10章　ajax导引　168
10.1　使用ajax　168
10.1.1　http请求　169
10.1.2　http响应　173
10.2　处理响应数据　176
10.3　完整的ajax程序包　177
10.4　数据的不同用途　179
10.4.1　基于xml的rss feed　179
10.4.2　html注入器　181
10.4.3　json与javascript：远程执行　182
10.5　小结　182
第11章　用ajax改进blog　183
11.1　永不终止的blog　183
11.1.1　blog的模板　183
11.1.2　数据源　186
11.1.3　事件检测　187
11.1.4　请求　188
11.1.5　结果　188
11.2　实时网志　191
11.3　小结　193
第12章　自动补全的搜索　194
12.1　自动补全搜索的例子　194
12.2　制作页面　195
12.3　监听键盘输入　197
12.4　抓取结果　200
12.5　导航结果列表　202
12.5.1　键盘导航　202
12.5.2　鼠标导航　203
12.6　最终成果　203
12.7　小结　208
第13章　ajax wiki　209
13.1　wiki是什么　209
13.2　对话数据库　209
13.3　ajax请求　211
13.4　服务器端代码　212
13.4.1　处理请求　212
13.4.2　执行和格式化sql　213
13.5　处理json响应　215
13.6　附加的案例研究：javascript blog　216
13.7　应用程序的代码　217
13.7.1　核心javascript代码　218
13.7.2　javascript sql库　221
13.7.3　ruby服务器端代码　221
13.8　小结　224
第五部分　javascript的未来
第14章　javascript路在何方　226
14.1　javascript 1.6与1.7　226
14.1.1　javascript 1.6　226
14.1.2　javascript 1.7　229
14.2　web applications 1.0　231
14.2.1　制作时钟　232
14.2.2　简单行星模拟　235
14.3　comet　238
14.4　小结　240
第六部分　附录
附录a　dom参考手册　242
附录b　事件参考手册　257
附录c　浏览器　273
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通JavaScript
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript ES6函数式编程入门经典
第1章　函数式编程简介   1
1.1  什么是函数式编程？为何它重要   1
1.2  引用透明性   4
1.3  命令式、声明式与抽象   5
1.4  函数式编程的好处   7
1.5  纯函数   7
1.5.1  纯函数产生可测试的代码   7
1.5.2  合理的代码   9
1.6  并发代码   10
1.7  可缓存   11
1.8  管道与组合   12
1.9  纯函数是数学函数   13
1.10  我们要构建什么   15
1.11  JavaScript是函数式编程语言吗   15
1.12  小结   16
第2章  JavaScript函数基础   17
2.1  ECMAScript历史   18
2.2  创建并执行函数   19
2.2.1  第一个函数   19
2.2.2  严格模式   21
2.2.3  return语句是可选的   22
2.2.4  多语句函数   22
2.2.5  函数参数   24
2.2.6  ES5函数在ES6中是有效的   24
2.3  设置项目   24
2.3.1  初始设置   24
2.3.2  用第一个函数式方法处理循环问题   26
2.3.3  export要点   28
2.3.4  import要点   28
2.3.5  使用babel-node运行代码   29
2.3.6  在npm中创建脚本   30
2.3.7  从git上运行源代码   31
2.4  小结   31
第 3 章  高阶函数   33
3.1  理解数据   34
3.1.1  理解JavaScript数据类型   34
3.1.2  存储函数   35
3.1.3  传递函数   35
3.1.4  返回函数   37
3.2  抽象和高阶函数   38
3.2.1  抽象的定义   38
3.2.2  通过高阶函数实现抽象   39
3.3  真实的高阶函数   42
3.3.1  every函数   42
3.3.2  some函数   44
3.3.3  sort函数   44
3.4  小结   48
第 4 章  闭包与高阶函数   49
4.1  理解闭包   50
4.1.1  什么是闭包   50
4.1.2  记住闭包生成的位置   52
4.1.3  回顾sortBy函数   53
4.2  真实的高阶函数（续）   54
4.2.1  tap函数   54
4.2.2  unary函数   56
4.2.3  once函数   57
4.2.4  memoized函数   58
4.3  小结   60
第 5 章  数组的函数式编程   61
5.1  数组的函数式方法   62
5.1.1  map   62
5.1.2  filter   65
5.2  连接操作   67
5.3  reduce函数   71
5.4  zip数组   77
5.5  小结   81
第 6 章  柯里化与偏应用   83
6.1  一些术语   84
6.1.1  一元函数   84
6.1.2  二元函数   84
6.1.3  变参函数   84
6.2  柯里化   86
6.2.1  柯里化用例   87
6.2.2  日志函数——应用柯里化   89
6.2.3  回顾curry   90
6.2.4  回顾日志函数   93
6.3  柯里化实战   94
6.3.1  在数组内容中查找数字   94
6.3.2  求数组的平方   95
6.4  数据流   96
6.4.1  偏应用   96
6.4.2  实现偏函数   97
6.4.3  柯里化与偏应用   99
6.5  小结   100
第7章  组合与管道   101
7.1  组合的概念   102
7.2  函数式组合   104
7.2.1  回顾map与filter   104
7.2.2  compose函数   106
7.3  应用compose函数   106
7.3.1  引入curry与partial   108
7.3.2  组合多个函数   111
7.4  管道/序列   113
7.5  组合的优势   114
7.5.1  组合满足结合律   114
7.5.2  使用tap函数调试   115
7.6  小结   116
第8章  函子   117
8.1  什么是函子   118
8.1.1  函子是容器   118
8.1.2  函子实现了map方法   120
8.2  MayBe函子   121
8.2.1  实现MayBe函子   122
8.2.2  简单用例   123
8.2.3  真实用例   125
8.3  Either函子   129
8.3.1  实现Either函子   130
8.3.2  reddit例子的Either版本   131
8.4  Pointed函子   134
8.5  小结   134
第9章  深入理解Monad   135
9.1  根据搜索词条获取Reddit评论   136
9.2  问题描述   136
9.2.1  实现第一步   138
9.2.2  合并Reddit调用   141
9.2.3  多个map的问题   144
9.3  通过join解决问题   146
9.3.1  实现join   146
9.3.2  实现chain   148
9.4  小结   151
第10章  使用Generator   153
10.1  异步代码及其问题   154
10.2  Generator基础   156
10.2.1  创建Generator   156
10.2.2  Generator的注意事项   157
10.2.3  yield关键字   158
10.2.4  done属性   160
10.2.5  向Generator传递数据   162
10.3  使用Generator处理异步调用   164
10.3.1  一个简单的案例   164
10.3.2  一个真实的案例   169
10.4  小结   172
附录   173
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript ES6函数式编程入门经典
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript编程精解
对本书的赞誉
译者序
前言
第1章　JavaScript基础：值、变量、控制流程	1
1.1   值1
1.1.1   数字1
1.1.2　算术2
1.1.3　字符串3
1.1.4　一元操作符3
1.1.5　布尔值、比较和布尔逻辑4
1.1.6　表达式与语句5
1.2   变量5
1.3   环境7
1.3.1   函数7
1.3.2　prompt和confirm7
1.3.3　print函数8
1.3.4　修改环境8
1.4　程序结构8
1.4.1　条件执行9
1.4.2　while循环与do循环9
1.4.3　缩进代码11
1.4.4　for循环11
1.4.5　跳出循环12
1.4.6　更新变量简便法12
1.4.7　使用switch进行调度12
1.4.8　大小写13
1.4.9　注释13
1.5　进一步认识类型14
1.5.1　Undefined值14
1.5.2　自动类型转换14
1.5.3　自动类型转换的风险15
1.5.4　进一步了解&&和||16
第2章　函数17
2.1　剖析函数定义17
2.1.1　定义顺序18
2.1.2　局部变量18
2.1.3　嵌套作用域19
2.1.4　栈20
2.1.5　函数值20
2.1.6　闭包21
2.1.7　可选参数21
2.2　技巧22
2.2.1　避免重复22
2.2.2　纯函数23
2.2.3　递归24
第3章　数据结构：对象与数组27
3.1　问题：Emily姨妈家的猫27
3.2　基本数据结构28
3.2.1　属性28
3.2.2　对象值29
3.2.3　对象即集合30
3.2.4　易变性30
3.2.5　对象即集合：数组31
3.2.6　方法32
3.3　解决关于Emily姨妈家猫的问题33
3.3.1　分离段落33
3.3.2　找出相关段落34
3.3.3　提取猫的名字35
3.3.4　完整算法35
3.3.5　清理代码36
3.3.6　日期表示38
3.3.7　日期提取39
3.3.8　收集更多信息40
3.3.9　数据表示41
3.4　更多理论42
3.4.1　arguments对象42
3.4.2　完成扫尾工作44
3.4.3　Math对象44
3.4.4　可枚举属性44
第4章　错误处理47
4.1　问题类型47
4.1.1　程序员错误47
4.1.2　运行时错误48
4.2　处理错误48
4.2.1　返回特殊值48
4.2.2　异常49
4.2.3　异常之后的错误清除50
4.2.4　Error对象51
4.2.5　未处理的异常51
4.2.6　选择性Catch51
4.3　自动化测试52
第5章　函数式编程55
5.1　抽象55
5.2　高阶函数56
5.2.1　修改函数57
5.2.2　归约函数58
5.2.3　映射数组59
5.3　隐士的悲惨故事59
5.3.1　HTML60
5.3.2　隐士的文本文件61
5.3.3　找出段落64
5.3.4　强调与脚注64
5.3.5　移动脚注67
5.3.6　生成HTML67
5.3.7　转化隐士的书70
5.4　其他函数技巧71
5.4.1　操作符函数71
5.4.2　分布应用72
5.4.3　组合73
第6章　面向对象编程75
6.1　对象75
6.1.1　定义方法75
6.1.2　构造函数76
6.1.3　从原型中构建77
6.1.4　构造函数与原型77
6.1.5　原型污染79
6.1.6　对象即词典80
6.1.7　指定接口81
6.2　构建生态系统模拟82
6.2.1　定义生态圈82
6.2.2　空间里的点83
6.2.3　呈现网格83
6.2.4　昆虫的编程接口85
6.2.5　生态圈对象86
6.2.6　this及其作用域87
6.2.7　有活力的生命88
6.2.8　昆虫移动90
6.2.9　更多生命形式90
6.2.10　多态性93
6.3　更逼真的模拟生态系统93
6.3.1　继承93
6.3.2　记录能量94
6.3.3　添加植物96
6.3.4　食草动物97
6.3.5　为它带来生命97
6.3.6　人工愚蠢99
6.4　原型继承100
6.4.1　类型定义工具100
6.4.2　类型原型101
6.4.3　对象的世界102
6.4.4　instanceof操作符103
6.4.5　混合类型104
第7章　模块化107
7.1　模块107
7.1.1　生态圈例子107
7.1.2 　模块文件化108
7.2　模块的形态108
7.2.1　函数作为局部命名空间109
7.2.2　模块对象110
7.3　接口设计111
7.3.1　可预见性111
7.3.2　可组合性111
7.3.3　分层接口112
7.3.4　参数对象112
7.4　JS库113
第8章　正则表达式115
8.1　语法115
8.1.1　匹配字符集115
8.1.2　匹配单词和字符边界116
8.1.3　重复模式117
8.1.4　子表达式分组117
8.1.5　多选一117
8.2　匹配与替换118
8.2.1　匹配方法118
8.2.2　正则表达式和替换方法118
8.2.3　动态创建RegExp 对象120
8.3　解析.ini文件121
8.4　结论123
第9章　Web编程：速成课125
9.1　互联网125
9.1.1　URL网址125
9.1.2　服务器端编程126
9.1.3　客户端编程126
9.2 　Web脚本基础知识126
9.2.1　windows对象126
9.2.2　document对象127
9.2.3　计时器128
9.2.4　表单128
9.2.5　表单脚本化130
9.2.6　自动焦点132
9.3　浏览器非兼容性132
9.4　延伸阅读133
第10章　文档对象模型135
10.1　DOM元素135
10.1.1　节点链接136
10.1.2　节点类型136
10.1.3　innerHTML属性137
10.1.4　查找节点137
10.1.5　创建节点138
10.1.6　节点创建辅助函数138
10.1.7　移动节点139
10.1.8　print实现140
10.2　样式表140
10.2.1　样式属性141
10.2.2　隐藏节点141
10.2.3　定位141
10.2.4　控制节点大小142
10.3　警示语142
第11章　浏览器事件143
11.1　事件句柄143
11.1.1　注册事件句柄143
11.1.2　事件对象145
11.1.3　鼠标相关事件类型145
11.1.4　键盘事件146
11.1.5　停止事件147
11.1.6　事件对象正规化147
11.1.7　跟踪焦点148
11.1.8　表单事件148
11.1.9　window事件149
11.2　示例：实现推箱子149
11.2.1　等级输入格式149
11.2.2　程序设计150
11.2.3　游戏板展示150
11.2.4 　控制器对象153
第12章　HTTP请求157
12.1　HTTP协议157
12.2　XMLHttpRequest API158
12.2.1　创建请求对象158
12.2.2　简单的请求158
12.2.3　发送异步请求159
12.2.4　获取XML数据160
12.2.5　读取JSON数据161
12.2.6 　基本的请求包装161
12.3　学习HTTP162
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript编程精解
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript异步编程
本书赞誉
献词
致谢
前言
第1章 深入理解JavaScript事件
第2章 分布式事件
第3章 Promise对象和Deferred对象
第4章 Async.js的工作流控制
第5章 worker对象的多线程技术
第6章 异步的脚本加载
附录 JavaScript编辑工具
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript异步编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript
前言
第1章 JavaScript概述
1.1 JavaScript语言核心
1.2 客户端JavaScript
第一部分 JavaScript 语言核心
第2章 词法结构
2.1 字符集
2.2 注释
2.3 直接量
2.4 标识符和保留字
2.5 可选的分号
第3章 类型、值和变量
3.1 数字
3.2 文本
3.3 布尔值
3.4 null和undefined
3.5 全局对象
3.6 包装对象
3.7 不可变的原始值和可变的对象引用
3.8 类型转换
3.9 变量声明
3.10 变量作用域
第4章 表达式和运算符
4.1 原始表达式
4.2 对象和数组的初始化表达式
4.3 函数定义表达式
4.4 属性访问表达式
4.5 调用表达式
4.6 对象创建表达式
4.7 运算符概述
4.8 算术表达式
4.9 关系表达式
4.10 逻辑表达式
4.11 赋值表达式
4.12 表达式计算
4.13 其他运算符
第5章 语句
5.1 表达式语句
5.2 复合语句和空语句
5.3 声明语句
5.4 条件语句
5.5 循环
5.6 跳转
5.7 其他语句类型
5.8 JavaScript语句小结
第6章 对象
6.1 创建对象
6.2 属性的查询和设置
6.3 删除属性
6.4 检测属性
6.5 枚举属性
6.6 属性getter和setter
6.7 属性的特性
6.8 对象的三个属性
6.9 序列化对象
6.10 对象方法
第7章 数组
7.1 创建数组
7.2 数组元素的读和写
7.3 稀疏数组
7.4 数组长度
7.5 数组元素的添加和删除
7.6 数组遍历
7.7 多维数组
7.8 数组方法
7.9 ECMAScript 5中的数组方法
7.10 数组类型
7.11 类数组对象
7.12 作为数组的字符串
第8章 函数
8.1 函数定义
8.2 函数调用
8.3 函数的实参和形参
8.4 作为值的函数
8.5 作为命名空间的函数
8.6 闭包
8.7 函数属性、方法和构造函数
8.8 函数式编程
第9章 类和模块
9.1 类和原型
9.2 类和构造函数
9.3 JavaScript中Java式的类继承
9.4 类的扩充
9.5 类和类型
9.6 JavaScript中的面向对象技术
9.7 子类
9.8 ECMAScript 5 中的类
9.9 模块
第10章 正则表达式的模式匹配
10.1 正则表达式的定义
10.2 用于模式匹配的String方法
10.3 RegExp对象
第11章 JavaScript的子集和扩展
11.1 JavaScript的子集
11.2 常量和局部变量
11.3 解构赋值
11.4 迭代
11.5 函数简写
11.6 多catch 从句
11.7 E4X: ECMAScript for XML
第12章 服务器端JavaScript
12.1 用Rhino脚本化Java
12.2 用Node实现异步I/O
第二部分 客户端JavaScript
第13章 Web浏览器中的JavaScript
13.1 客户端JavaScript
13.2 在HTML里嵌入JavaScript
13.3 JavaScript程序的执行
13.4 兼容性和互用性
13.5 可访问性
13.6 安全性
13.7 客户端框架
第14章 Window对象
14.1 计时器
14.2 浏览器定位和导航
14.3 浏览历史
14.4 浏览器和屏幕信息
14.5 对话框
14.6 错误处理
14.7 作为Window对象属性的文档元素
14.8 多窗口和窗体
第15章 脚本化文档
15.1 DOM概览
15.2 选取文档元素
15.3 文档结构和遍历
15.4 属性
15.5 元素的内容
15.6 创建、插入和删除节点
15.7 例子：生成目录表
15.8 文档和元素的几何形状和滚动
15.9 HTML表单
15.10 其他文档特性
第16章 脚本化CSS
16.1 CSS概览
16.2 重要的CSS属性
16.3 脚本化内联样式
16.4 查询计算出的样式
16.5 脚本化CSS类
16.6 脚本化样式表
第17章 事件处理
17.1 事件类型
17.2 注册事件处理程序
17.3 事件处理程序的调用
17.4 文档加载事件
17.5 鼠标事件
17.6 鼠标滚轮事件
17.7 拖放事件
17.8 文本事件
17.9 键盘事件
第18章 脚本化HTTP
18.1 使用XMLHttpRequest
18.2 借助
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript经典实例
前言
第1章 使用JavaScript字符串
1.0 简介
1.1 连接两个或多个字符串
1.2 连接字符串和另一种数据类型
1.3 条件比较字符串
1.4 在字符串中查找子字符串
1.5 从一个字符串提取子字符串
1.6 检查一个存在的、非空的字符串
1.7 将一个关键字字符串分解为单独的关键字
1.8 插入特殊字符
1.9 处理textarea的单个行
1.10 去除字符串末尾的空白
1.11 左补充或右补充一个字符串
第2章 使用正则表达式
2.0 简介
2.1 测试一个子字符串是否存在
2.2 测试不区分大小写的子字符串匹配
2.3 验证社会安全号码
2.4 找到并突出显示一个模式的所有实例
2.5 使用新字符串替换模式
2.6 使用捕获圆括号交换一个字符串中的单词
2.7 使用正则表达式来去除空白
2.8 使用命名实体来替代HTML标签
2.9 搜索特殊字符
第3章 日期、时间和定时器
3.0 简介
3.1 打印出今天的日期
3.2 打印出UTC日期和时间
3.3 打印出一个ISO 8601格式日期
3.4 把一个ISO 8601格式的日期转换为Date对象可接受的一种格式
3.5 创建一个特定的日期
3.6 规划未来的一个日期
3.7 记录流逝的时间
3.8 创建一个延迟
3.9 创建重复性定时器
3.10 使用带有定时器的函数闭包
第4章 使用Number和Math
4.0 简介
4.1 保持一个递增的计数
4.2 把十进制数转换为一个十六进制值
4.3 创建一个随机数生成器
4.4 随机产生颜色
4.5 把表中的字符串转换为数字
4.6 把表中一列的所有数字加和
4.7 在角度和弧度之间转换
4.8 找到页面元素可容纳的一个圆的半径和圆心
4.9 计算圆弧的长度
第5章 使用数组和循环
5.0 简介
5.1 循环遍历数组
5.2 创建多维数组
5.3 从数组创建一个字符串
5.4 排序数组
5.5 按顺序存储和访问值
5.6 以相反的顺序存储和访问值
5.7 创建一个新数组作为已有数组的子集
5.8 在数组中搜索
5.9 将一个多维数组扁平化
5.10 搜索和删除或替换数组元素
5.11 对每个数组元素应用一个函数
5.12 对数组中的每个元素执行一个函数并返回一个新数组
5.13 创建一个过滤后的数组
5.14 验证数组内容
5.15 使用一个关联数组来存储表单元素名和值
第6章 使用JavaScript函数构建重用性
6.0 简介
6.1 创建一段可重用的代码
6.2 把单个数据值传递到函数
6.3 把复杂的数据对象传递给函数
6.4 创建一个动态运行时函数
6.5 把一个函数当做参数传递给另一个函数 6.6 实现递归算法
6.7 创建能够记住其状态的函数
6.8 使用一个通用的科里化函数提高应用程序性能
6.9 使用缓存计算（Memoization）来提高应用程序性能
6.10 使用匿名函数包装全局变量
第7章 处理事件
7.0 简介
7.1 检测页面何时完成载入
7.2 使用Event对象捕获鼠标点击事件的位置
7.3 创建一个通用的、可重用的事件处理函数
7.4 根据修改的条件来取消一个事件
7.5 阻止事件在一组嵌套元素中传播
7.6 捕获键盘活动
7.7 使用新的HTML 5拖放
7.8 使用Safari方向事件和其他移动开发环境
第8章 浏览器模块
8.0 简介
8.1 请求Web页面访问者确认一项操作
8.2 创建一个新的、下拉式的浏览器窗口
8.3 找到关于浏览器的访问页面
8.4 警告Web页面访问者将要离开页面
8.5 根据颜色支持更改样式表
8.6 根据页面大小修改图像尺寸
8.7 在CMS模板页面中创建面包屑路径
8.8 将一个动态页面加入书签
8.9 针对后退按钮、页面刷新来保持状态
第9章 表单元素和验证
9.0 简介
9.1 访问表单文本输入值
9.2 动态关闭或打开表单元素
9.3 根据一个事件从表单元素获取信息
9.4 当点击单选按钮的时候执行一个动作
9.5 检查一个有效的电话号码
9.6 取消表单提交
9.7 阻止重复表单提交
9.8 隐藏和显示表单元素
9.9 根据其他表单选择修改一个选项列表
第10章 调试和错误处理
10.0 简介
10.1 优雅地处理无JavaScript支持的情况
10.2 检查函数中的错误
10.3 对于简单调试使用一条警告
10.4 捕获一个错误并提供优雅的错误处理
10.5 初始化可管理的错误
10.6 使用Firefox的Firebug
10.7 使用Firebug设置一个断点并查看数据
10.8 Firefox和Console
10.9 使用IE的内建调试器
10.10 使用IE Developer Tools设置一个断点
10.11 Opera的Dragonfly
10.12 使用Dragonfly设置一个断点
10.13 打开Safari的开发工具
10.14 使用Safari调试器设置断点
10.15 Chrome中的调试
第11章 访问页面元素
11.0 简介
11.1 访问一个给定的元素并找到其父元素和子元素
11.2 访问Web页面中所有的图像
11.3 在一篇文章中找出所有的图像
11.4 使用Selectors API找出文章中的所有图像
11.5 找出一组元素的父元素
11.6 突出显示每个元素中的第一个段落
11.7 对无序列表应用条纹主题
11.8 创建一个给定类的所有元素的一个数组
11.9 找出共享同一属性的所有元素
11.10 找出所有选中的选项
11.11 把一个表行中所有值加和
11.12 获取元素属性
11.13 获取一个元素的样式信息
第12章 创建和删除元素和属性
12.0 简介
12.1 使用innerHTML：一种添加内容的快速而容易的方法
12.2 在已有页面元素前插入元素
12.3 在页面的末尾附加一个新元素
12.4 触发IE的旧版来样式化新元素
12.5 插入一个新的段落
12.6 给新的段落添加文本
12.7 向一个已有元素添加属性
12.8 测试一个布尔值
12.9 删除一个属性
12.10 移动一个段落
12.11 使用脚注项目符号替代链接
12.12 向已有的表添加行
12.13 从一个div元素删除一个段落
12.14 从HTML表格删除行
12.15 修改元素的CSS样式属性
第13章 使用Web页面空间
13.0 简介
13.1 确定Web页面的区域
13.2 度量元素
13.3 在页面中定位元素
13.4 隐藏页面区段
13.5 创建可折叠的表单区段
13.6 添加一个页面覆盖
13.7 创建标签页
13.8 创建基于悬停的弹出信息窗口
13.9 折叠边栏或调整其大小
第14章 使用JavaScript、CSS和ARIA
创建交互式和可访问性效果
14.0 简介
14.1 显示隐藏的页面区段
14.2 创建警告消息
14.3 突出显示遗漏数据或数据不正确的表单字段
14.4 给页面覆盖添加键盘可访问性
14.5 创建可折叠的表单区段
14.6 显示一个带颜色的闪烁以表示一个动作
14.7 给标签页应用程序添加ARIA属性
14.8 动态区域
第15章 创建富媒体和交互应用程序
15.0 简介
15.1 在画布中创建基本的图形（使用canvas元素）
15.2 在Internet Explorer中实现画布应用程序
15.3 在画布中创建一个动态的线条图表
15.4 向一个SVG文件添加JavaScript
15.5 从Web页面脚本访问SVG
15.6 在Internet Explorer中模拟SVG
15.7 为嵌入到HTML中的SVG增加交互性
15.8 使用Math函数在SVG中创建一个实际的、走动的模拟时钟
15.9 在HTML中加入SVG和画布元素
15.10 在Firefox和WebKit/Safari中调试WebGL支持
15.11 当一个音频文件开始播放的时候运行一个例程
15.12 用JavaScript和video元素控制视频
第16章 JavaScript对象
16.0 简介
16.1 定义一个基本的JavaScript对象
16.2 保持对象成员私有
16.3 用原型扩展对象
16.4 给对象添加Getter/Setter
16.5 继承一个对象的功能
16.6 通过定义一个新的属性来扩展对象
16.7 枚举一个对象的属性
16.8 阻止对象可扩展性
16.9 阻止对象添加和修改属性描述符
16.10 阻止对对象的任何修改
16.11 一次性对象和为你的JavaScript提供命名空间
16.12 用Prototype.bind再次发现“this”
16.13 将对象方法链化
第17章 JavaScript库
17.0 简介
17.1 包装你的代码
17.2 使用JsUnit测试代码
17.3简化你的库
17.4 寄存库
17.5 使用一个外部库：构建于jQuery框架之上
17.6 使用已有的jQuery插件
17.7 把库转换为一个jQuery插件
17.8 安全地把几个库组合到你的应用程序中
第18章 通信
18.0 简介
18.1 访问XMLHttpRequest对象
18.2 为传输准备数据
18.3 确定查询调用的类型
18.4 为Ajax请求添加一个回调函数
18.5 检查一个错误条件
18.6 处理一个文本结果
18.7 （使用JSONP）对另一个域进行Ajax请求
18.8 从服务器填充一个选项列表
18.9 使用定时器以新数据自动更新页面
18.10 使用PostMessage跨窗口通信
第19章 使用结构化数据
19.0 简介
19.1 处理从Ajax调用返回的一个XML文档 19.2 从一个XML树提取相关信息
19.3 使用JSON产生一个JavaScript对象
19.4 解析一个JSON格式化字符串
19.5 使用JSON把一个对象转换为过滤的/转换的字符串
19.6 把hCalendar微格式注释转换为一个画布时间表
19.7 清除页面RDFa并且使用rdfQuery和jQuery RDF插件将其转换为JSON
第20章 持久化
20.0 简介
20.1 给URL附加持久性信息
20.2 创建一个Cookie来跨页面持久化信息
20.3 使用History.pushState方法和window.onpopevent来持久化信息
20.4 针对客户端存储使用sessionStorage
20.5 创建一个localStorage客户端数据存储项
20.6 使用关系数据存储来持久化数据
第21章 JavaScript创新用法
21.0 简介
21.1 创建一个浏览器插件或扩展
21.2 创建桌面和移动挂件
21.3 使用PhoneGap为iPhone、Android和BlackBerry开发JavaScript应用程序
21.4 使用JavaScript扩展工具
21.5 使用Web Workers和File API创建高效的桌面应用程序
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript经典实例
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>编写高质量代码
前言
第1章　JavaScript语言基础 / 1
建议1：警惕Unicode乱码 / 1
建议2：正确辨析JavaScript句法中的词、句和段 / 2
建议3：减少全局变量污染 / 4
建议4：注意JavaScript数据类型的特殊性 / 6
建议5：防止JavaScript自动插入分号 / 11
建议6：正确处理JavaScript特殊值 / 12
建议7：小心保留字的误用 / 15
建议8：谨慎使用运算符 / 16
建议9：不要信任hasOwnProperty / 20
建议10：谨记对象非空特性 / 20
建议11：慎重使用伪数组 / 21
建议12：避免使用with / 22
建议13：养成优化表达式的思维方式 / 23
建议14：不要滥用eval / 26
建议15：避免使用continue / 27
建议16：防止switch贯穿 / 28
建议17：块标志并非多余 / 29
建议18：比较function语句和function表达式 / 29
建议19：不要使用类型构造器 / 30
建议20：不要使用new / 31
建议21：推荐提高循环性能的策略 / 31
建议22：少用函数迭代 / 35
建议23：推荐提高条件性能的策略 / 35
建议24：优化if逻辑 / 36
建议25：恰当选用if和switch / 39
建议26：小心if嵌套的思维陷阱 / 40
建议27：小心if隐藏的Bug / 42
建议28：使用查表法提高条件检测的性能 / 43
建议29：准确使用循环体 / 44
建议30：使用递归模式 / 48
建议31：使用迭代 / 49
建议32：使用制表 / 50
建议33：优化循环结构 / 51
第2章　字符串、正则表达式和数组 / 53
建议34：字符串是非值操作 / 53
建议35：获取字节长度 / 55
建议36：警惕字符串连接操作 / 56
建议37：推荐使用replace / 59
建议38：正确认识正则表达式工作机制 / 62
建议39：正确理解正则表达式回溯 / 63
建议40：正确使用正则表达式分组 / 65
建议41：正确使用正则表达式引用 / 68
建议42：用好正则表达式静态值 / 69
建议43：使用exec增强正则表达式功能 / 71
建议44：正确使用原子组 / 72
建议45：警惕嵌套量词和回溯失控 / 73
建议46：提高正则表达式执行效率 / 74
建议47：避免使用正则表达式的场景 / 76
建议48：慎用正则表达式修剪字符串 / 77
建议49：比较数组与对象同源特性 / 80
建议50：正确检测数组类型 / 81
建议51：理解数组长度的有限性和无限性 / 82
建议52：建议使用splice删除数组 / 83
建议53：小心使用数组维度 / 84
建议54：增强数组排序的sort功能 / 85
建议55：不要拘泥于数字下标 / 87
建议56：使用arguments模拟重载 / 89
第3章　函数式编程 / 91
建议57：禁用Function构造函数 / 91
建立58：灵活使用Arguments / 94
建议59：推荐动态调用函数 / 96
建议60：比较函数调用模式 / 99
建议61：使用闭包跨域开发 / 101
建议62：在循环体和异步回调中慎重使用闭包 / 104
建议63：比较函数调用和引用本质 / 106
建议64：建议通过Function扩展类型 / 108
建议65：比较函数的惰性求值与非惰性求值 / 109
建议66：使用函数实现历史记录 / 111
建议67：套用函数 / 113
建议68：推荐使用链式语法 / 114
建议69：使用模块化规避缺陷 / 115
建议70：惰性实例化 / 117
建议71：推荐分支函数 / 118
建议72：惰性载入函数 / 119
建议73：函数绑定有价值 / 121
建议74：使用高阶函数 / 123
建议75：函数柯里化 / 125
建议76：要重视函数节流 / 126
建议77：推荐作用域安全的构造函数 / 127
建议78：正确理解执行上下文和作用域链 / 129
第4章　面向对象编程 / 133
建议79：参照Object构造体系分析prototype机制 / 133
建议80：合理使用原型 / 137
建议81：原型域链不是作用域链 / 140
建议82：不要直接检索对象属性值 / 142
建议83：使用原型委托 / 143
建议84：防止原型反射 / 144
建议85：谨慎处理对象的Scope / 145
建议86：使用面向对象模拟继承 / 149
建议87：分辨this和function调用关系 / 152
建议88：this是动态指针，不是静态引用 / 153
建议89：正确应用this / 157
建议90：预防this误用的策略 / 161
建议91：推荐使用构造函数原型模式定义类 / 164
建议92：不建议使用原型继承 / 166
建议93：推荐使用类继承 / 168
建议94：建议使用封装类继承 / 171
建议95：慎重使用实例继承 / 172
建议96：避免使用复制继承 / 174
建议97：推荐使用混合继承 / 175
建议98：比较使用JavaScript多态、重载和覆盖 / 176
建议99：建议主动封装类 / 179
建议100：谨慎使用类的静态成员 / 181
建议101：比较类的构造和析构特性 / 183
建议102：使用享元类 / 186
建议103：使用掺元类 / 188
建议104：谨慎使用伪类 / 190
建议105：比较单例的两种模式 / 192
第5章　DOM编程 / 195
建议106：建议先检测浏览器对DOM支持程度 / 195
建议107：应理清HTML DOM加载流程 / 198
建议108：谨慎访问DOM / 200
建议109：比较innerHTML与标准DOM方法 / 200
建议110：警惕文档遍历中的空格Bug / 202
建议111：克隆节点比创建节点更好 / 203
建议112：谨慎使用HTML集合 / 204
建议113：用局部变量访问集合元素 / 206
建议114：使用nextSibling抓取DOM / 207
建议115：实现DOM原型继承机制 / 207
建议116：推荐使用CSS选择器 / 210
建议117：减少DOM重绘和重排版次数 / 211
建议118：使用DOM树结构托管事件 / 216
建议119：使用定时器优化UI 队列 / 217
建议120：使用定时器分解任务 / 220
建议121：使用定时器限时运行代码 / 221
建议122：推荐网页工人线程 / 222
第6章　客户端编程 / 226
建议123：比较IE和W3C事件流 / 226
建议124：设计鼠标拖放方案 / 229
建议125：设计鼠标指针定位方案 / 231
建议126：小心在元素内定位鼠标指针 / 233
建议127：妥善使用DOMContentLoaded事件 / 234
建议128：推荐使用beforeunload事件 / 236
建议129：自定义事件 / 236
建议130：从CSS样式表中抽取元素尺寸 / 238
建议131：慎重使用offsetWidth和offsetHeight / 241
建议132：正确计算区域大小 / 244
建议133：谨慎计算滚动区域大小 / 247
建议134：避免计算窗口大小 / 248
建议135：正确获取绝对位置 / 249
建议136：正确获取相对位置 / 251
第7章　数据交互和存储 / 254
建议137：使用隐藏框架实现异步通信 / 254
建议138：使用iframe实现异步通信 / 257
建议139：使用script实现异步通信 / 259
建议140：正确理解JSONP异步通信协议 / 264
建议141：比较常用的服务器请求方法 / 267
建议142：比较常用的服务器发送数据方法 / 271
建议143：避免使用XML格式进行通信 / 273
建议144：推荐使用JSON格式进行通信 / 275
建议145：慎重使用HTML格式进行通信 / 278
建议146：使用自定义格式进行通信 / 279
建议147：Ajax性能向导 / 280
建议148：使用本地存储数据 / 281
建议149：警惕基于DOM的跨域侵入 / 283
建议150：优化Ajax开发的最佳实践 / 286
建议151：数据存储要考虑访问速度 / 290
建议152：使用局部变量存储数据 / 291
建议153：警惕人为改变作用域链 / 293
建议154：慎重使用动态作用域 / 294
建议155：小心闭包导致内存泄漏 / 295
建议156：灵活使用Cookie存储长信息 / 296
建议157：推荐封装Cookie应用接口 / 298
第8章　JavaScript引擎与兼容性 / 300
建议158：比较主流浏览器内核解析 / 300
建议159：推荐根据浏览器特性进行检测 / 302
建议160：关注各种引擎对ECMAScript v3的分歧 / 305
建议161：关注各种引擎对ECMAScript v3的补充 / 316
建议162：关注各种引擎对Event解析的分歧 / 327
建议163：关注各种引擎对DOM解析的分歧 / 330
建议164：关注各种引擎对CSS渲染的分歧 / 335
第9章　JavaScript编程规范和应用 / 339
建议165：不要混淆JavaScript与浏览器 / 339
建议166：掌握JavaScript预编译过程 / 340
建议167：准确分析JavaScript执行顺序 / 344
建议168：避免二次评估 / 350
建议169：建议使用直接量 / 351
建议170：不要让JavaScript引擎重复工作 / 351
建议171：使用位操作符执行逻辑运算 / 353
建议172：推荐使用原生方法 / 355
建议173：编写无阻塞JavaScript脚本 / 356
建议174：使脚本延迟执行 / 358
建议175：使用XHR脚本注入 / 362
建议176：推荐最优化非阻塞模式 / 362
建议177：避免深陷作用域访问 / 363
建议178：推荐的JavaScript性能调优 / 365
建议179：减少DOM操作中的Repaint和Reflow / 368
建议180：提高DOM访问效率 / 370
建议181：使用 setTimeout实现工作线程 / 372
建议182：使用 Web Worker / 375
建议183：避免内存泄漏 / 377
建议184：使用SVG创建动态图形 / 380
建议185：减少对象成员访问 / 385
建议186：推荐100 ms用户体验 / 388
建议187：使用接口解决JavaScript文件冲突 / 390
建议188：避免JavaScript与CSS冲突 / 392
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>编写高质量代码
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>XMPP高级编程
第I部分XMPP协议和架构
第1章 了解XMPP协议
1.1什么是XMPP
1.2XMPP简史
1.3XMPP网络
1.4XMPP寻址
1.5XMPP节
1.6连接生命周期
1.7小结
第2章 设计XMPP应用程序
2.1他山之石
2.2 XMPP与HTTP的比较
2.3桥接XMPP与Web
2.4构建XMPP应用程序
2.5小结
第II部分 应用程序
第3章 HelloWorld.第一个应用程序
3.1应用程序预览
3.2 Hello应用程序设计
3.3准备
3.4开始构建第一个应用程序
3.5建立连接
3.6创建节
3.7处理事件
3.8给Hello程序添加新功能
3.9小结
第4章 探索XMPP协议：一个调试控制台
4.1应用程序预览
4.2设计Peek
4.3构建控制台
4.4研究XMPP
4.5更好的调试
4.6小结
第5章 实时微博：一个Identica客户端
5.1应用程序预览
5.2Arthur的设计
5.31dentica微博
5.4构建Arthar
5.5XHTML-IM
5.6离线消息
5.7创建更好的微博客户端
5.8小结
第6章 与好友交谈：一对一聊天
6.1应用程序预览
6.2Gab的设计
6.3制作界面
6.4构建花名册
6.5构建聊天对话
6.6即时通信最佳实践
6.7添加活动通知
6.8收尾工作
6.9更多Gab功能
6.10小结
第7章 探索服务：服务发现与浏览
7.1应用程序预览
7.2 Dig的设计
7.3查找信息
7.4创建Dig
7.5挖掘服务
7.6服务发现的更多功能
7.7小结
第8章 群聊：多人聊天客户端
8.1应用程序预览
8.2 Groupie的设计
8.3公开发言
8.4构建界面
8.5加入房间
8.6处理出席和消息
8.7管理房间
8.8改进Oro叩记
8.9小结
第9章 发布与订阅：共享画板简介
9.1SketchCast预览
9.2 SketchCast的设计
9.3填写表单
9.4处pubsub节点
9.5使用pubsub广播绘图
9.6改进SketchPad
9.7小结
第10章 与好友一同写作：协作式文本编辑器
10.1应用程序预览
10.2NetPad的设计
10.3操作转换
10.4扩展XMPP协议
10.5设计协议
10.6构建编辑器
10.7扩展Netpad
10.8小结
第11章 玩游戏：面对面的Tic-Tac-Toe
11.1应用程序预览
11.2Toetem的设计
11.3设计游戏协议
11.4Toetem起步
11.5实现会话和等待列表
11.6实现游戏管理
11.7实现游戏逻辑
11.8让游戏更有趣
11.9小结
第III部分 高级主题分构
第12章 加入已有会话：引导BOSH
12.1会话接入
12.2利用会话接入实现自动登录
12.3小结
第13章 部署XMPP应用程序
13.1横向扩展
13.2纵向扩展
13.3小结
第14章 编写Strophe插件
14.1使用插件
14.2构建插件
14.3创建花名册插件
14.4试用插件
14.5改进花名册插件
14.6小结
附录A jQuery入门
附录B 设置BOSH连接管理器
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>XMPP高级编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript王者归来
第一部分 概论
第1章 从零开始
1.1 为什么选择JavaScript?
1.2 JavaScript的应用范围
1.3 JavaScript的版本
1.4 一些值得留意的特性　禁忌及如何突破这些禁忌
1.5 安全性和执行效率
1.6 一个例子--JavaScript编写的计算器
1.7 学习和使用JavaScript的几点建议
1.8 关于本书的其余部分
第2章 浏览器中的JavaScript
2.1 嵌入网页的可执行内容
2.2 赏心悦目的特效
2.3 使用JavaScript来与用户交互
2.4 绕开脚本陷阱　2.5 总结
第3章 开发环境和调试方法
3.1 我能用什么来编写脚本--适合编写JavaScript的文本编辑器
3.2 来自浏览器的支持
3.3 集成开发环境
3.4 调试工具--提升开发效率的利器
3.5 定位代码和调用堆栈
3.6 浏览器捕获异常
3.7 总结
第二部分 JavaScript核心
第4章 语言结构
4.1 JavaScript的基本文法
4.2 常量和变量
4.3 表达式和运算符符
4.4 控制语句　句
4.5 总结
第5章 数据类型
5.1 基本数据类型
5.2 数组和对象
5.2.1 数组
5.2.2 对象--一个构造函数的例子
5.3 函数类型--一个函数和闭包的例子
5.4 神奇的null和undefined
5.4.1 null
5.4.2 undefined--独一无二的类型
5.5 正则表达式
5.5.1 正则表达式常量
5.5.2 正则表达式对象
5.6 值类型和引用类型
5.6.1 什么是值和值的引用
5.6.2 使用值和使用引用
5.6.3 值与引用的相互转换：装箱和拆箱
5.7 类型识别与类型转换
5.7.1 运行时类型识别--两个运行的类型识别的例子
5.7.2 类型的自动转换及其例子
5.7.3 强制类型转换及其例子
5.7.4 高级用法--一个自定义类型转换的例子
5.8 警惕数值陷阱
5.8.1 困惑--浮点数的精度问题
5.8.2 误差的修正及其例子
5.9 总结
第6章 函数
6.1 函数定义和函数调用
6.1.1 函数的定义
6.1.1.1 声明式函数定义与函数表达式及其例子
6.1.1.2 JavaScript函数的奥妙——魔法代码
6.1.2 函数的调用
6.2 函数的参数
6.2.1 形参与实参
6.2.2 Arguments对象
6.2.2.1 一个使用Arguments对象检测形参的例子
6.2.2.2 一个使用Arguments对象接收任意个数参数的例子
6.2.2.3 一个使用Arguments对象模拟函数重载的例子
6.2.3 参数类型匹配--一个利用arguments实现函数重载机制的例子
6.3 函数的调用者和所有者
6.3.1 函数的调用者
6.3.2 函数的所有者--一个为函数指定所有者的例子
6.3.3 动态调用--外来的所有者
6.4 函数常量和闭包
6.4.1 匿名的函数
6.4.2 函数引用
6.4.3 函数参数和函数返回值及其例子
6.4.4 高级用法--闭包作为局部域与延迟求值
6.5 高级抽象--Function类型和函数模版
6.5.1 动态创建函数--一个利用Function实现Lambda算子的例子
6.5.2 模式--函数工厂及其实例
6.6 总结
第7章 对象
7.1 什么是对象
7.2 对象的属性和方法
7.2.1 对象的内置属性
7.2.2 为对象添加和删除属性
7.2.3 反射机制--枚举对象属性
7.3 对象的构造
7.3.1 构造函数--一个双精度浮点数封装类的例子
7.3.2 缺省构造和拷贝构造
7.3.3 对象常量
7.4 对象的销毁和存储单元的回收
7.5 JavaScript的内置对象
7.5.1 Math对象
7.5.2 Date对象--创建一个简单的日历
7.5.3 Error对象
7.5.4 其他内置对象
7.5.5 特殊的对象--全局对象与调用对象
7.6 总结
第8章 集合
8.1 数组和数组元素
8.1.1 数组的构造
8.1.2 数组常量
8.1.3 数组元素
8.2 数组对象和方法
8.2.1 查找元素
8.2.2 添加和删除元素
8.2.3 集合操作及其范例
8.2.3.1 join()方法
8.2.3.2 reverse()方法
8.2.3.3 sort()方法
8.2.3.4 concat()方法
8.2.3.5 slice()方法
8.2.3.6 splice()方法
8.2.3.7 toSgring()方法和toLocaleString()方法
8.3 哈希表
8.3.1 什么是哈希表
8.3.2 哈希表的构造
8.3.3 实现一个简单的HashTable类型
8.4 高级用法--集合操作和闭包
8.5 总结
第9章 字符串
9.1 字符串的构造
9.1.1 字符串常量
9.1.2 转义序列
9.1.3 字符串构造函数
9.2 字符串的使用
9.2.1 比较字符串
9.2.2 抽取和检索子串
9.2.3 连接拆分字符串
9.2.4 字符串的模式匹配--一个字符串格式校验的例子
9.2.5 其他方法
9.3 字符串与字符数组
9.4 字符串与文本处理--JavaScript棋谱阅读器（一）
9.4.1 需求分析--什么是棋谱和棋谱阅读器
9.4.2 系统设计--棋谱和棋盘数据的字符串描述
9.4.3 系统实现--解析和处理棋谱
9.4.4 完整的棋谱阅读器
9.5 总结
第10章 正则表达式
10.1 什么是正则表达式
10.1.1 正则表达式的概念
10.1.2 JavaScript中的正则表达式
10.2 正则表达式的规则
10.2.1 直接量字符
10.2.2 字符类和布尔操作
10.2.3 重复
10.2.4 选择、分组和引用
10.2.5 指定匹配的位置
10.2.6 标志——高级模式匹配的规则
10.3 模式匹配
10.3.1 用于模式匹配的String方法及其例子
10.3.2 用于模式匹配的RegExp方法
10.3.2.1 一个使用exec()方法从身份证号码获取生日的例子
10.3.2.2 一个使用test()方法遍历字符串的例子
10.4 关于正则表达式包装对象
10.4.1 RegExp对象——利用正则表达式实现全文检索
10.4.2 RegExp的实例属性
10.5 强大的正则表达式
10.5.1 分析正则表达式的局部
10.5.2 一个例子--强大的在线编辑器
10.5.3 构造新的文法--一个在JSVM中实现JSVM2解析器的例子
10.6 高级用法
10.7 用正则表达式处理文本
10.7.1 创建一个计价公式编辑器
10.7.1.1 需求分析--什么是计价公式编辑器
10.7.1.2 系统实现--计价公式编辑器的实现
10.7.2 创建一个同步滚动歌词播放器
10.7.2.1 需求分析--什么是同步滚动歌词播放器
10.7.2.2 系统设计与实现--处理LRC歌词
10.8 总结
第三部分 浏览器与DOM
第11章 浏览器对象
11.1 Window对象--最基本的浏览器对象
11.1.1 Window对象概览
11.1.2 Window对象的生命周期
11.1.3 Window对象的属性和方法
11.1.4 一个多窗口应用的例子
11.2 Document对象--浏览器窗口文档内容的代表
11.2.1 Document对象概览
11.2.2 动态生成的文档
11.2.3 Document对象的基本信息
11.2.4 Document对象的外观属性
11.2.5 Document子对象接口
11.2.5.1 一个遍历Anchors对象的例子
11.2.5.2 一个颠倒图片的例子
11.3 对话框和状态栏
11.3.1 创建一个简单对话框
11.3.2 其他类型的对话框
11.3.2.1 模拟对话框--创建一个窗口对话框及一个对话框阻塞进行的例子
11.3.2.2 showModalDialog和showModelessDialog--非W3C或ECMAScrip标准
11.3.3 状态栏
11.4 框架--上层的Window对象
11.4.1 多框架应用
11.4.2 框架之间的关系
11.4.3 框架的命名
11.4.4 子框架中的JavaScript
11.4.5 框架的应用--多页签显示
11.4.5.1 什么是页签
11.4.5.2 页签的实现--创建一个包含页签的页面
11.5 表单和表单对象
11.5.1 Form对象及其范例
11.5.2 定义表单元素
11.5.3 客户端表单校验及其例子
11.5.4 创建一款通用的客户端表单校验组件
11.6 其他内置对象
11.6.1 Navigator对象--浏览器总体信息的代表
11.6.2 Screen对象--提供显示器分辨率和可用颜色数量信息
11.6.3 Location对象--当前窗口中显示文档的URL的代表
11.6.4 History对象--一个有趣的对象
11.7 总结
第12章 文档对象模型
12.1 什么是DOM
12.1.1 把文档表示为树
12.1.2 树的节点
12.1.3 DOM对象的通用属性和方法
12.1.4 HTML结构和DOM对象的关系--用JavaScript通过DOM来操作HTML文档
12.2 DOM与浏览器实现
12.2.1 关于DOM HTML API
12.2.2 DOM的级别和特性
12.2.3 DOM的一致性
12.2.4 差异性--浏览器的DOM方言
12.3 一组“盒子”--DOM元素
12.3.1 嵌套的“盒子”
12.3.2 “盒子”和“盒子”内容的分类
12.4 创建和删除节点
12.4.1 构造全新的节点
12.4.2 平面展开--通过文档元素直接创建
12.4.3 回收空间--删除不用的节点
12.5 访问和操纵DOM节点
12.5.1 打开每一个盒子--遍历节点
12.5.2 弄清层级关系--父子与兄弟
12.5.3 如何搜索特定节点
12.5.4 克隆节点--一个使用cloneNode()复制表格的例子
12.5.5 移动节点及其范例
12.5.6 关于添加新行和排序的小技巧
12.6 读写数据--添加、修改和删除属性
12.7 外观与行为
12.7.1 DOM样式属性
12.7.2 控制DOM元素的显示与隐藏
12.7.3 改变颜色和大小--一个简单有趣的例子
12.7.4 改变位置--创建一个绕圆圈旋转的文字
12.7.5 编辑控制及其范例
12.7.6 改变样式及其范例
12.7.7 改变行为
12.8 XML DOM
12.8.1 什么是XML DOM
12.8.2 如何使用XML DOM--一个利用XML实现多级关联下拉选择框的例子
12.9 总结
第13章 事件处理
13.1 什么是事件
13.1.1 消息与事件响应
13.1.2 浏览器的事件驱动机制
13.2 基本事件处理
13.2.1 事件和事件类型
13.2.2 事件的绑定
13.2.3 直接调用事件处理函数
13.2.4 事件处理函数的返回值
13.2.5 带参数的事件响应及其例子
13.2.6 “this”关键字
13.3 标准事件模型
13.3.1 起泡和捕捉--浏览器的事件传播
13.3.2 事件处理函数的注册
13.3.3 把对象注册为事件处理程序
13.3.4 事件模块和事件类型
13.3.5 关于Event接口
13.3.5.1 Event接口的属性和方法
13.3.5.2 UIEvent接口的属性
13.3.5.3 MouseEvent接口的属性
13.3.5.4 MutationEvent接口
13.3.6 混合事件模型
13.3.7 合成事件
13.4 浏览器的事件处理模型实现
13.4.1 Internet Explorer事件模型
13.4.1.1 关于IE事件注册
13.4.1.2 IE Event对象的属性
13.4.1.3 IE中的事件起泡
13.4.2 Netscape 4事件模型
13.4.2.1 Netscape 4中的事件捕捉及其范例
13.4.2.2 Netscape 4 Event对象的属性
13.5 回调与用户自定义事件
13.5.1 事件处理模式--一个实现简单事件处理模式的例子
13.5.2 用户事件接口的定义
13.5.3 事件代理和事件注册--一个实现标准事件接口的例子
13.5.4 标准模式--事件分派和接收
13.6 一个例子--增强数据表格
13.6.1 什么是增强数据表格
13.6.2 一个采用两重table嵌套方式固定表头的例子
13.6.3 可变列宽的实现
13.6.4 标记行--呈现有别于其他行的背景色
13.6.5 小技巧--将代码添加到样式表
13.7 总结
第14章 级联样式表
14.1 什么是级联样式表
14.1.1 CSS样式和样式表
14.1.2 CSS的标准化
14.1.3 浏览器支持的CSS
14.2 JavaScript与CSS
14.2.1 CSS和DOM的关系
14.2.2 CSS和IE的关系
14.2.3 浏览器的CSS兼容性
14.3 控制CSS改变页面风格
14.3.1 实现结构与表现的分离及其范例
14.3.2 使用JwaScript和CSS实现页面多种风格的实时替换
14.4 总结
第15章 数据存储的脚本化
15.1 什么是cookie
15.1.1 浏览器和客户端cookie
15.1.2 cookie的属性
15.2 cookie的客户端存取
15.2.1 cookie的存储
15.2.2 cookie的读取
15.3 cookie的限制
15.4 cookie示例--让问候更加温暖
15.5 cookie对象的封装
15.6 什么是userData
15.6.1 浏览器和客户端userData
15.6.2 userData的声明
15.6.3 userData的属性和方法
15.7 userData的客户端存取
15.7.1 userData的存储和读取
15.7.2 userData的安全性
15.8 userData的限制
15.9 userData与cookie的对比
15.10 userData示例--一个利用userData实现客户端保存表单数据的例子
15.11 总结
第四部分 数据交互
第16章 同步和异步
16.1 什么是同步和异步
16.2 超时设定和时间间隔
16.3 定时器使用--侦听与拦截
16.3.1 标准模式--监视器及其范例
16.3.2 使用定时器时应当注意的问题
16.4 一个例子--漂亮的Web时钟
16.4.1 什么是Web时钟？
16.4.2 最简单的Web时钟
16.4.3 Web时钟的设计
16.4.4 完整的Web时钟源代码
16.5 总结
第17章 XML DOM和XML HTTP
17.1 什么是XML DOM对象
17.1.1 XML DOM简介
17.1.2 浏览器支持的XML DOM接口
17.1.2.1 XML DOM标准接口
17.1.2.2 IE的XML DOM组件
17.1.2.3 操作XML文档--一个使用MSXML操作XML文档的例子
17.2 XML DOM的版本兼容性--XML DOM的跨浏览器应用
17.3 XML DOM的错误处理
17.3.1 处理错误信息的ParseError对象
17.3.2 包含错误信息的文档
17.4 XML DOM操作XML文档
17.4.1 访问节点
17.4.2 创建新节点
17.4.3 移动和修改节点及其范例
17.4.4 读写节点属性和读写数据
17.4.5 保存文档
17.5 一个例子--JavaScript棋谱阅读器（二）
17.5.1 用XML描述棋谱
17.5.2 将XML棋谱转换为SGF棋谱
17.6 什么是XML HTTP对象
17.6.1 XML HTTP对象简介
17.6.2 浏览器支持的XML HTTP对象
17.7 通过XML HTTP发送请求
17.7.1 建立连接
17.7.2 发送请求
17.8 读取和设定HTTP头
17.8.1 什么是HTTP头
17.8.2 读取和设定HTTP头
17.9 服务器应答
17.9.1 同步和异步应答及其例子
17.9.2 包含应答文本内容的ResponseText 和ResponseXML
17.10 总结
第18章 Ajax简介
第19章 标准和兼容性
第20章 信息安全
第五部分 超越JavaScript
第21章 面向对象
第22章 闭包与函数式编程
第23章 模块级管理
第24章 动态构建
第25章 执行效率
25.1 为什么要讨论执行效率
25.2 封闭的代价
25.3 盒子里的流火
25.4 动态--魔鬼与天使
25.5 让代码轻舞飞扬
25.6 总结
第26章 应用框架
26.1 应用框架概览
26.2 为什么要设计应用框架
26.3 如何设计应用框架
26.4 框架的实际应用--在Silverna 2.0框架上开发的Widgets
26.5 已存在的应用框架
26.6 总结
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript王者归来
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript框架设计
目　录
第1章　种子模块　1
1.1　命名空间　1
1.2　对象扩展　3
1.3　数组化　4
1.4　类型的判定　6
1.5　主流框架引入的机制——domReady　14
1.6　无冲突处理　16
第2章　模块加载系统　18
2.1　AMD规范　18
2.2　加载器所在路径的探知　19
2.3　require方法　21
2.4　define方法　27
第3章　语言模块　31
3.1　字符串的扩展与修复　31
3.2　数组的扩展与修复　43
3.3　数值的扩展与修复　50
3.4　函数的扩展与修复　56
3.5　日期的扩展与修复　61
第4章　浏览器嗅探与特征侦测　64
4.1　判定浏览器　64
4.2　事件的支持侦测　67
4.3　样式的支持侦测　69
4.4　jQuery一些常用特征的含义　70
第5章　类工厂　72
5.1　JavaScript对类的支撑　72
5.2　各种类工厂的实现　77
5.2.1　相当精巧的库——P.js　77
5.2.2　JS.Class　80
5.2.3　simple-inheritance　82
5.2.4　体现JavaScript灵活性的库——def.js　84
5.3　es5属性描述符对OO库的冲击　88
第6章　选择器引擎　100
6.1　浏览器内置的寻找元素的方法　100
6.2　getElementsBySelector　102
6.3　选择器引擎涉及的知识点　106
6.4　选择器引擎涉及的通用函数　114
6.4.1　isXML　114
6.4.2　contains　115
6.4.3　节点排序与去重　117
6.4.4　切割器　121
6.4.5　属性选择器对于空白字符的匹配策略　123
6.4.6　子元素过滤伪类的分解与匹配　125
6.5　Sizzle引擎　127
第7章　节点模块　137
7.1　节点的创建　138
7.2　节点的插入　149
7.3　节点的复制　155
7.4　节点的移除　158
7.5　innerHTML、innerText与outerHTML的处理　161
7.6　一些奇葩的元素节点　164
7.6.1　iframe元素　164
7.6.2　object元素　174
7.6.3　video标签　179
第8章　数据缓存系统　185
8.1　jQuery的第1代缓存系统　185
8.2　jQuery的第2代缓存系统　190
8.3　mass Framework的第1代数据缓存系统　193
8.4　mass Framework的第2代数据缓存系统　196
8.5　mass Framework的第3代数据缓存系统　198
8.6　总结　199
第9章　样式模块　200
9.1　主体结构　201
9.2　样式名的修正　205
9.3　个别样式的特殊处理　206
9.3.1　opacity　206
9.3.2　user-select　208
9.3.3　background-position　208
9.3.4　z-index　209
9.3.5　盒子模型　210
9.3.6　元素的尺寸　211
9.3.7　元素的显隐　218
9.3.8　元素的坐标　222
9.4　元素的滚动条的坐标　228
第10章　属性模块　229
10.1　如何区分固有属性与自定义属性　231
10.2　如何判定浏览器是否区分固有属性与自定义属性　233
10.3　IE的属性系统的三次演变　234
10.4　className的操作　235
10.5　Prototype.js的属性系统　240
10.6　jQuery的属性系统　246
10.7　mass Framework的属性系统　249
10.8　value的操作　253
第11章　事件系统　256
11.1　onXXX绑定方式的缺陷　257
11.2　attachEvent的缺陷　258
11.3　addEventListener的缺陷　259
11.4　Dean Edward的addEvent.js源码分析　260
11.5　jquery1.8.2的事件模块概览　263
11.6　jQuery.event.add的源码解读　266
11.7　jQuery.event.remove的源码解读　269
11.8　jQuery.event.dispatch的源码解读　271
11.9　jQuery.event.trigger的源码解读　276
11.10　jQuery对事件对象的修复　280
11.11　滚轮事件的修复　286
11.12　mouseenter与mouseleave事件的修复　290
11.13　focusin与focusout事件的修复　293
11.14　旧版本IE下submit的事件代理的实现　295
11.15　oninput事件的兼容性处理　296
第12章　章异步处理　298
12.1　setTimeout与setInterval　299
12.2　Mochikit Deferred　301
12.3　JSDeferred　309
12.3.1　得到一个Deferred实例　310
12.3.2　Deferred链的实现　312
12.3.3　JSDeferred的并归结果　316
12.3.4　JSDeferred的性能提速　318
12.4　jQuery Deferred　321
12.5　Promise/A与mmDeferred　327
12.6　JavaScript异步处理的前景　334
第13章　数据交互模块　339
13.1　Ajax概览　339
13.2　优雅地取得XMLHttpRequest对象　339
13.3　XMLHttpRequest对象的事件绑定与状态维护　342
13.4　发送请求与数据　344
13.5　接收数据　346
13.6　上传文件　349
13.7　一个完整的Ajax实现　351
第14章　动画引擎　363
14.1　动画的原理　363
14.2　缓动公式　365
14.3　API的设计　368
14.4　mass Framework基于JavaScript的动画引擎　369
14.5　requestAnimationFrame　377
14.6　CSS3 transition　383
14.7　CSS3 animation　388
14.8　mass Framework基于CSS的动画引擎　390
第15章　插件化　398
15.1　jQuery的插件的一般写法　398
15.2　jQuery UI对内部类的操作　401
15.3　jQuery easy UI的智能加载与个别化制定　403
15.4　更直接地操作UI实例　406
第16章　MVVM　409
16.1　当前主流MVVM框架介绍　410
16.2　属性变化的监听　416
16.3　ViewModel　418
16.4　绑定　429
16.5　监控数组与子模板　437
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript框架设计
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>全端Web开发
前言　　xiii
第1章　因变而变　　1
1.1　Web用户　　2
1.2　技术　　2
1.3　软件开发　　3
1.4　哪些没变　　4
1.4.1　Web 的本质　　5
1.4.2　为什么说服务器驱动的Web开发有害　　6
1.5　为什么需要客户端- 服务器端的Web应用　　7
1.5.1　代码组织结构/ 软件架构　　7
1.5.2　“设计的灵活性”与“使用开源API”　　7
1.5.3　原型　　7
1.5.4　开发者的效率　　8
1.5.5　应用性能　　8
1.6　小结　　9
第2章　JavaScript和JavaScript工具　　11
2.1　学习JavaScript　　12
2.2　JavaScript的历史　　13
2.3　一门函数式语言　　14
2.3.1　作用域　　15
2.3.2　一级函数　　16
2.3.3　函数声明和表达式　　17
2.3.4　函数调用　　19
2.3.5　函数参数　　19
2.3.6　对象　　20
2.4　面向Java开发者的JavaScript　　20
2.4.1　HelloWord.java　　20
2.4.2　带变量的HelloWord.java　　23
2.5　最佳开发实践　　25
2.5.1　编码规范和约定　　25
2.5.2　浏览器　　26
2.5.3　集成开发环境　　26
2.5.4　单元测试　　27
2.5.5　文档　　27
2.6　项目　　27
第3章 　REST和JSON　　33
3.1　什么是REST　　34
3.1.1　资源　　34
3.1.2　动词（HTTP请求）　　34
3.1.3　统一资源标识符　　35
3.2　REST约束　　36
3.2.1　客户端- 服务器端　　36
3.2.2　无状态　　36
3.2.3　可缓存　　37
3.2.4　统一接口　　37
3.2.5　分层　　38
3.2.6　按需交付代码　　38
3.3　HTTP响应代码　　38
3.4　JSON　　39
3.5　HATEOAS　　40
3.6　API衡量和分类　　43
3.7　函数式编程和REST　　43
3.8　项目　　44
3.9　其他Web API工具　　48
3.10　约束回顾　　48
第4章　Java工具　　49
4.1　Java语言　　49
4.2　Java虚拟机　　50
4.3　Java工具　　51
4.4　构建工具　　52
4.4.1　Maven的优点　　54
4.4.2　Maven的功能　　54
4.4.3　版本控制　　55
4.4.4　单元测试　　56
4.5　处理JSON的Java 类库　　56
4.6　项目　　57
4.6.1　用Java处理JSON　　57
4.6.2　用JVM上的脚本语言处理JSON　　59
4.7　小结　　62
第5章　客户端框架　　65
5.1　概述　　65
5.2　起点一：响应式Web设计　　67
5.2.1　HTML5 Boilerplate　　68
5.2.2　Bootstrap　　68
5.3　起点二：JavaScript库和框架　　69
5.3.1　浏览器兼容性　　69
5.3.2　框架　　69
5.3.3　功能　　70
5.3.4　流行程度　　70
5.4　获取起始项目　　71
5.4.1　直接从仓库下载　　71
5.4.2　从入门网站下载　　71
5.4.3　IDE生成的起始项目　　72
5.5　前端工程师的崛起　　72
5.5.1　客户端模板　　72
5.5.2　资源管道　　73
5.5.3　开发流程　　74
5.6　项目　　74
5.7　小结　　76
第6章　Java Web API服务器　　77
6.1　更简单的服务器端解决方案　　77
6.2　基于Java的服务器　　79
6.2.1　Java HTTP服务器　　79
6.2.2　Jetty嵌入式服务器　　81
6.2.3　Restlet　　82
6.2.4　Roo　　83
6.2.5　Netty嵌入式服务器　　87
6.2.6　Play服务器　　89
6.2.7　其他轻量级服务器　　92
6.3　基于JVM的服务器　　92
6.4　Web应用服务器　　93
6.5　如何在开发中使用　　94
6.6　小结　　94
第7章 　快速开发实践　　95
7.1　开发者的生产率　　95
7.2　优化开发者和团队的工作流程　　98
7.2.1　例子：修复Web应用　　99
7.2.2　例子：测试集成　　100
7.2.3　例子：绿地开发　　101
7.3　生产率和软件开发生命周期　　101
7.3.1　管理方式和企业文化　　102
7.3.2　技术架构　　102
7.3.3　软件工具　　103
7.3.4　性能　　104
7.3.5　测试　　104
7.3.6　底层平台　　105
7.4　小结　　106
第8章　API设计　　107
8.1　设计的起点　　108
8.2　实用的Web API与REST API　　109
8.3　指引　　110
8.3.1　名词即资源，动词即HTTP 行为　　110
8.3.2　请求参数作为修饰符　　 111
8.3.3　Web API版本　　112
8.3.4　HTTP 标头　　113
8.3.5　链接　　113
8.3.6　响应　　113
8.3.7　文档　　113
8.3.8　格式约定　　114
8.3.9　安全性　　114
8.4　项目　　114
8.4.1　运行项目　　114
8.4.2　服务端代码　　115
8.4.3　Curl和jQuery　　117
8.5　实践理论　　118
第9章　jQuery和Jython　　119
9.1　服务端：Jython　　120
9.1.1　Python Web服务器　　120
9.1.2　Jython Web服务器　　120
9.1.3　Mock API　　121
9.2　客户端：jQuery　　122
9.2.1　DOM遍历和操作　　122
9.2.2　实用函数　　123
9.2.3　效果　　124
9.2.4　事件处理　　124
9.2.5　Ajax　　124
9.3　jQuery和更高级的抽象　　125
9.4　项目　　125
9.4.1　基础HTML　　126
9.4.2　JavaScript和jQuery　　126
9.5　小结　　128
第10章　JRuby和Angular　　129
10.1　服务器端：JRuby和Sinatra　　130
10.1.1　工作流　　130
10.1.2　交互式Ruby shell　　131
10.1.3　Ruby版本管理器　　131
10.1.4　包　　132
10.1.5　Sinatra　　133
10.1.6　JSON处理　　134
10.2　客户端：AngularJS　　135
10.2.1　模型　　135
10.2.2　视图　　135
10.2.3　控制器　　136
10.2.4　服务　　136
10.3　比较jQuery和Angular　　136
10.3.1　DOM和模型操作　　136
10.3.2　Angular的不可见性　　137
10.4　项目　　137
10.5　小结　　143
第11章　打包和部署　　145
11.1　打包Java和JEE 应用　　145
11.2　JEE 应用的部署　　147
11.2.1　图形界面管理　　148
11.2.2　命令行管理　　150
11.3　非JEE应用的部署　　151
11.3.1　服务器在应用之外　　152
11.3.2　服务器和应用并行　　152
11.3.3　服务器在应用里面　　154
11.4　不同部署方式带来的影响　　154
11.4.1　负载均衡　　155
11.4.2　自动化应用部署　　156
11.5　项目　　157
11.5.1　客户端　　157
11.5.2　服务器端　　158
11.6　小结　　158
第12章　虚拟化　　159
12.1　全虚拟化　　159
12.2　虚拟机的实现　　161
12.2.1　VMWare　　161
12.2.2　VirtualBox　　161
12.2.3　Amazon EC2　　161
12.3　虚拟机的管理　　162
12.3.1　Vagrant　　162
12.3.2　Packer　　162
12.3.3　DevOps配置管理　　163
12.4　容器　　163
12.4.1　LXC　　164
12.4.2　Docker　　164
12.5　项目　　165
12.5.1　Docker帮助　　166
12.5.2　镜像和容器的维护　　166
12.5.3　在Docker里使用Java　　167
12.5.4　Docker和Vagrant 的网络设置　　169
12.6　小结　　170
第13章　测试和文档　　171
13.1　测试的种类　　172
13.1.1　“正式”与“非正式”　　172
13.1.2　测试范围　　172
13.1.3　谁来测？测什么？为谁测　　173
13.2　测试反映了组织的成熟度　　173
13.2.1　使用软件能力成熟度模型评价流程　　173
13.2.2　使用Maven促进流程统一　　174
13.2.3　使用行为驱动开发促进流程统一　　176
13.3　测试框架　　176
13.3.1　JUnit　　177
13.3.2　Jasmine　　177
13.3.3　Cucumber　　178
13.4　项目　　179
13.4.1　JUnit　　180
13.4.2　Jasmine　　180
13.4.3　Cucumber　　181
13.4.4　Maven报告　　181
13.5　小结　　182
第14章　总结　　183
14.1　社区　　183
14.2　历史　　184
14.3　尾声　　184
附录A　JRuby IRB及Java API　　185
附录B　REST式的Web API总结　　191
附录C　参考文献　　196
关于作者　　197
关于封面图　　197
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>全端Web开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript语言精髓与编程实践
第1部分 语言基础
第1章 十年JavaScript	3
1.1 网页中的代码	3
1.1.1 新鲜的玩意儿	3
1.1.2 第一段在网页中的代码	4
1.1.3 最初的价值	5
1.2 用JavaScript来写浏览器上的应用	7
1.2.1 我要做一个聊天室	7
1.2.2 Flash的一席之地	9
1.2.3 RWC与RIA之争	10
1.3 没有框架与库的语言能怎样发展呢	12
1.3.1 做一个框架	12
1.3.2 重写框架的语言层	15
1.3.3 富浏览器端开发与AJAX	16
1.4 语言的进化	18
1.4.1 Qomo的重生	18
1.4.2 QoBean是对语言的重新组织	18
1.4.3 JavaScript作为一门语言的进化	19
1.5 为JavaScript正名	22
1.5.1 JavaScript	22
1.5.2 Core JavaScript	23
1.5.3 SpiderMonkey JavaScript	24
1.5.4 ECMAScript	24
1.5.5 JScript	25
1.5.6 总述	25
1.6 JavaScript的应用环境	26
1.6.1 宿主环境	27
1.6.2 外壳程序	28
1.6.3 运行期环境	29
第2章 JavaScript的语法	31
2.1 语法综述	31
2.1.1 标识符所绑定的语义	32
2.1.2 识别语法错误与运行错误	33
2.2 JavaScript的语法：变量声明	33
2.2.1 变量的数据类型	34
2.2.1.1 基本数据类型	34
2.2.1.2 值类型与引用类型	35
2.2.2 变量声明	36
2.2.3 变量与直接量	37
2.2.3.1 字符串直接量、转义符	38
2.2.3.2 数值直接量	40
2.2.4 函数声明	41
2.3 JavaScript的语法：表达式运算	42
2.3.1 一般表达式运算	43
2.3.2 逻辑运算	44
2.3.3 字符串运算	45
2.3.4 比较运算	46
2.3.4.1 等值检测	46
2.3.4.2 序列检测	48
2.3.5 赋值运算	50
2.3.6 函数调用	51
2.3.7 特殊作用的运算符	51
2.3.8 运算优先级	53
2.4 JavaScript的语法：语句	55
2.4.1 表达式语句	56
2.4.1.1 一般表达式语句	57
2.4.1.2 赋值语句与隐式的变量声明	59
2.4.1.3 （显式的）变量声明语句	59
2.4.1.4 函数调用语句	61
2.4.2 分支语句	65
2.4.2.1 条件分支语句（if语句）	65
2.4.2.2 多重分支语句（switch语句）	66
2.4.3 循环语句	68
2.4.4 流程控制：一般子句	70
2.4.4.1 标签声明	70
2.4.4.2 break子句	71
2.4.4.3 continue子句	73
2.4.4.4 return子句	75
2.4.5 流程控制：异常	75
2.5 面向对象编程的语法概要	77
2.5.1 对象直接量声明与实例创建	78
2.5.1.1 使用构造器创建对象实例	78
2.5.1.2 对象直接量声明	81
2.5.1.3 数组直接量声明	82
2.5.1.4 正则表达式直接量声明	83
2.5.1.5 【ES5】在对象直接量中使用属性读写器	85
2.5.1.6 讨论：初始器与直接量的区别	86
2.5.2 对象成员	87
2.5.2.1 对象成员列举、存取和删除	87
2.5.2.2 属性存取与方法调用	91
2.5.2.3 对象及其成员的检查	92
2.5.2.4 可列举性	94
2.5.3 默认对象的指定	95
2.6 【ES5】严格模式下的语法限制	96
2.6.1 语法限制	97
2.6.2 严格模式的范围	99
2.7 运算符的二义性	100
2.7.1 加号“+”的二义性	102
2.7.2 括号“( )”的二义性	103
2.7.3 冒号“：”与标签的二义性	105
2.7.4 大括号“{ }”的二义性	106
2.7.5 逗号“,”的二义性	109
2.7.6 方括号“[ ]”的二义性	111
第2部分 语言特性及基本应用
第3章 JavaScript的非函数式语言特性	117
3.1 概述	117
3.1.1 命令式语言与结构化编程	118
3.1.2 结构化的疑难	120
3.1.3 “面向对象语言”是突破吗	122
3.1.4 更高层次的抽象：接口	125
3.1.5 再论语言的分类	127
3.1.6 JavaScript的语源	129
3.2 基本语法的结构化含义	131
3.2.1 基本逻辑与代码分块	131
3.2.2 模块化的层次：语法作用域	134
3.2.2.1 主要的语法作用域及其效果	135
3.2.2.2 语法作用域之间的相关性	138
3.2.3 执行流程及其变更	139
3.2.3.1 级别2：“break ＜label＞”等语法	140
3.2.3.2 级别3：return子句	143
3.2.3.3 级别4：throw语句	144
3.2.3.4 执行流程变更的内涵	145
3.2.4 模块化的效果：变量作用域	147
3.2.4.1 级别1：表达式	148
3.2.4.2 级别2：语句	149
3.2.4.3 级别3：函数（局部）	150
3.2.4.4 级别4：全局	151
3.2.4.5 变量作用域中的次序问题	153
3.2.4.6 变量作用域与变量的生存周期	154
3.2.5 语句的副作用	155
3.3 JavaScript中的原型继承	157
3.3.1 空对象（null）与空的对象	158
3.3.2 原型继承的基本性质	159
3.3.3 空的对象是所有对象的基础	159
3.3.4 构造复制？写时复制？还是读遍历？	160
3.3.5 构造过程：从函数到构造器	162
3.3.6 预定义属性与方法	163
3.3.7 原型链的维护	165
3.3.7.1 两个原型链	165
3.3.7.2 constructor属性的维护	167
3.3.7.3 内部原型链的作用	170
3.3.7.4 【ES5】在SpiderMonkey与ES5中的原型链维护	170
3.3.8 原型继承的实质	172
3.3.8.1 原型修改	172
3.3.8.2 原型继承	173
3.3.8.3 原型继承的实质：从无到有	174
3.3.8.4 如何理解“继承来的成员”	175
3.4 JavaScript的对象系统	177
3.4.1 封装	177
3.4.2 多态	179
3.4.3 事件	181
3.4.4 类抄写？或原型继承？	182
3.4.4.1 类抄写	183
3.4.4.2 原型继承存在的问题	186
3.4.4.3 如何选择继承的方式	186
3.4.5 JavaScript中的对象（构造器）	187
3.4.6 不能通过继承得到的效果	190
3.5 【ES5】可定制的对象属性	192
3.5.1 属性描述符	192
3.5.1.1 （一般的）数据属性描述符	193
3.5.1.2 （带读写器的）存取属性描述符	193
3.5.1.3 直接量形式的初始器是语法格式，而非描述符	194
3.5.2 定制对象属性	195
3.5.2.1 属性声明以及获取属性描述符	195
3.5.2.2 新的对象创建方法：Object.create()	197
3.5.3 属性状态维护	198
3.5.3.1 取属性列表	198
3.5.3.2 使用defineProperty来维护属性的性质	199
3.5.3.3 对于继承自原型的属性，修改其值的效果	200
3.5.3.4 重写原型继承来的属性的描述符	201
第4章 JavaScript的函数式语言特性	203
4.1 概述	203
4.1.1 从代码风格说起	204
4.1.2 为什么常见的语言不赞同连续求值	204
4.1.3 函数式语言的渊源	206
4.2 函数式语言中的函数	208
4.2.1 函数是运算元	208
4.2.2 在函数内保存数据	209
4.2.3 函数内的运算对函数外无副作用	210
4.3 从运算式语言到函数式语言	211
4.3.1 JavaScript中的几种连续运算	212
4.3.1.1 连续赋值	212
4.3.1.2 三元表达式的连用	212
4.3.1.3 一些运算连用	214
4.3.1.4 函数与方法的调用	214
4.3.2 运算式语言	216
4.3.2.1 运算的实质是值运算	216
4.3.2.2 有趣的运算：在IE和J2EE中	218
4.3.3 如何消灭掉语句	220
4.3.3.1 通过表达式消灭分支语句	221
4.3.3.2 通过函数递归消灭循环语句	222
4.3.3.3 其他可以被消灭的语句	223
4.4 函数：对运算式语言的补充和组织	224
4.4.1 函数是必要的补充	224
4.4.2 函数是代码的组织形式	226
4.4.3 重新认识“函数”	227
4.4.3.1 “函数”==“lambda”	228
4.4.3.2 当运算符等义于某个函数时	228
4.4.4 JavaScript语言中的函数式编程	230
4.5 JavaScript中的函数	231
4.5.1 可变参数与值参数传递	231
4.5.2 非惰性求值	235
4.5.3 函数是第一型	237
4.5.4 函数是一个值	239
4.5.5 可遍历的调用栈	239
4.5.5.1 callee：我是谁	240
4.5.5.2 caller：谁呼（叫）我	242
4.6 闭包	244
4.6.1 闭包与函数实例	244
4.6.1.1 什么是闭包	245
4.6.1.2 什么是函数实例与函数引用	246
4.6.1.3 （在被调用时，）每个函数实例至少拥有一个闭包	248
4.6.2 闭包与调用对象	250
4.6.2.1 “调用对象”的局部变量维护规则	252
4.6.2.2 “全局对象”的变量维护规则	252
4.6.2.3 函数闭包与“调用对象”的生存周期	253
4.6.3 闭包相关的一些特性	255
4.6.3.1 引用与泄漏	256
4.6.3.2 函数实例拥有多个闭包的情况	258
4.6.3.3 语句或语句块中的闭包问题	260
4.6.3.4 闭包中的标识符（变量）特例	262
4.6.3.5 函数对象的闭包及其效果	265
4.6.4 闭包与可见性	266
4.6.4.1 函数闭包带来的可见性效果	266
4.6.4.2 对象闭包带来的可见性效果	269
4.6.4.3 匿名函数的闭包与可见性效果	273
4.7 【ES5】严格模式与闭包	274
4.7.1 严格模式下的执行限制	275
4.7.2 严格模式下的匿名函数递归问题	276
第5章 JavaScript的动态语言特性	279
5.1 概述	279
5.1.1 动态数据类型的起源	280
5.1.2 动态执行系统的起源	280
5.1.2.1 编译系统、解释系统与编码	280
5.1.2.2 动态执行	281
5.1.3 脚本系统的起源	282
5.1.4 脚本只是一种表面的表现形式	283
5.2 动态执行	285
5.2.1 动态执行与闭包	285
5.2.1.1 eval使用全局闭包	286
5.2.1.2 eval使用当前函数的闭包	287
5.2.2 动态执行过程中的语句、表达式与值	289
5.2.3 奇特的、甚至是负面的影响	291
5.3 动态方法调用（call、apply与bind）	293
5.3.1 动态方法调用中指定this对象	293
5.3.2 丢失的this引用	295
5.3.3 栈的可见与修改	296
5.3.4 兼容性：低版本中的call()与apply()	298
5.3.5 【ES5】兼容性：ES5中的call()、apply()	301
5.3.6 【ES5】bind()方法与函数的延迟调用	302
5.4 重写	303
5.4.1 原型重写	304
5.4.2 构造器重写	305
5.4.2.1 语法声明与语句含义不一致的问题	307
5.4.2.2 对象检测的麻烦	310
5.4.2.3 构造器的原型（prototype属性）不受重写影响	311
5.4.2.4 “内部对象系统”不受影响	312
5.4.2.5 让用户对象系统影响内部对象系统	313
5.4.2.6 构造器重写对直接量声明的影响	314
5.4.2.7 构造绑定	315
5.4.2.8 内置构造器重写的概述	317
5.4.3 对象成员的重写	318
5.4.3.1 成员重写的检测	318
5.4.3.2 成员重写的删除	319
5.4.4 宿主对重写的限制	321
5.4.5 引擎对重写的限制	323
5.4.5.1 this的重写	323
5.4.5.2 语句语法中的重写	324
5.4.5.3 结构化异常处理中的重写	326
5.5 包装类：面向对象的妥协	327
5.5.1 显式包装元数据	328
5.5.2 隐式包装的过程与检测方法	329
5.5.3 包装值类型数据的必要性与问题	332
5.5.4 其他直接量与相应的构造器	333
5.5.4.1 函数特例	333
5.5.4.2 正则表达式特例	334
5.6 关联数组：对象与数组的动态特性	335
5.6.1 关联数组是对象系统的基础	336
5.6.2 用关联数组实现的索引数组	336
5.6.3 干净的对象	339
5.7 类型转换	342
5.7.1 宿主环境下的特殊类型系统	343
5.7.2 值运算：类型转换的基础	345
5.7.3 隐式转换	346
5.7.3.1 运算导致的类型转换	346
5.7.3.2 语句（语义）导致的类型转换	348
5.7.4 值类型之间的转换	348
5.7.4.1 undefined的转换	349
5.7.4.2 number的转换	349
5.7.4.3 boolean的转换	350
5.7.4.4 string的转换	351
5.7.4.5 值类型数据的显式转换	351
5.7.5 从引用到值：深入探究valueOf()方法	353
5.7.6 到字符串类型的显式转换	355
5.7.6.1 重写toString()方法	356
5.7.6.2 从数值到字符串的显式转换	357
5.7.6.3 其他类型的显式转换	358
5.7.6.4 序列化	358
第3部分 编程实践
第6章 元语言：QoBean核心技术与实现	363
6.1 QoBean语言层的基本特性	363
6.1.1 QoBean语言层概要	363
6.1.1.1 如何使用QoBean	364
6.1.1.2 QoBean中的面向对象（OOP）	365
6.1.1.3 QoBean中的接口（Interface）	367
6.1.1.4 QoBean中的切面（Aspect）	369
6.1.2 Qomo的体系结构及其与QoBean的关系	373
6.2 QoBean的元语言特性	374
6.2.1 QoBean如何理解元语言	374
6.2.2 算法与数据结构	375
6.2.2.1 引用类型与值类型的数据	376
6.2.2.2 函数调用	376
6.2.2.3 源起	377
6.2.2.4 小结	377
6.2.3 代码组织形式	379
6.2.3.1 块，以及基于块的编织	379
6.2.3.2 更强的编织	381
6.2.3.3 逻辑代码块：局部、全局，以及闭包	382
6.2.3.4 逻辑的属主	384
6.2.4 对“如何组织对象”的补充	385
6.2.4.1 原子，与原子联结的友类、友函数	386
6.2.4.2 对象唯一化	387
6.2.5 综述	390
6.3 基于元语言实现的语言特性	391
6.3.1 基于元语言的类继承框架	391
6.3.1.1 类注册过程	392
6.3.1.2 示例：实现MetaClass与MetaObject的约定	393
6.3.1.3 完整的Qomo语法实现	396
6.3.1.4 类类型树的建立	400
6.3.2 多投事件	401
6.3.3 其他语言特性的实现	403
6.4 基于元语言实现的DSL	405
6.4.1 DSL的基本设计	405
6.4.2 DSL的基本实现	406
6.4.3 DSL的基本应用	409
6.4.4 一些修补	410
6.4.5 基于严格模式的一些修补	412
第7章 一般性的动态函数式语言技巧	415
7.1 消除代码的全局变量名占用	415
7.2 一次性的构造器	417
7.3 对象充当识别器	418
7.4 识别new运算进行的构造器调用	420
7.5 使用直接量及其包装类快速调用对象方法	421
7.6 三天前是星期几	422
7.7 使用对象的值含义来构造复杂对象	423
7.8 控制字符串替换过程的基本模式	426
7.9 实现二叉树	427
7.10 将函数封装为方法	429
7.11 使用with语句来替代函数参数传递	431
7.12 使用对象闭包来重置重写	432
7.13 构造函数参数	434
7.14 使用更复杂的表达式来消减if语句	437
7.15 利用钩子函数来扩展功能	439
7.16 安全的字符串	441
附录A 术语表	443
附录B 主要引擎的特性差异列表	447
附录C 附图	449
附录D 参考书目	453
附录E 本书各版次主要修改	455
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript语言精髓与编程实践
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入浅出JavaScript（中文版）
序1  交互式网络：感觉虚拟世界2  存储数据：每项事物都有自己的位置3  探索客户端：浏览器探索4  决策：前有叉路，面对抉择5  循环：自我重复的风险6  函数：简化、重复利用、回收再利用7  表单与验证：让用户全盘托出8  驾驭网页：利用DOM分割HTML9  为数据带来生命：科学对象怪人10  创建自定义对象：自定义对象让你为所欲为11  除错务尽：好脚本也会出错12  动态数据：贴心易感的网络应用程序
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入浅出JavaScript（中文版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript设计模式
第1章　介绍　1
第2章　什么是模式　3
我们每天都在使用模式　4
第3章　模式状态测试、proto模式及三法则　6
第4章　设计模式的结构　8
第5章　编写设计模式　11
第6章　反模式　13
第7章　设计模式类别　15
第8章　设计模式分类　17
有关类(class)的要点　17
第9章 javascript设计模式　20
9.1 constructor(构造器)模式　21
9.1.1 对象创建　21
9.1.2 基本constructor(构造器)　23
9.1.3 带原型的constructor(构造器)　24
9.2 module(模块)模式　25
9.2.1 对象字面量　25
9.2.2 module(模块)模式　27
9.2.3 module模式变化　31
.9.3 revealing module(揭示模块)模式　36
9.3.1 优点　38
9.3.2 缺点　38
9.4 singleton(单例)模式　38
9.5 observer(观察者)模式　42
9.5.1 observer(观察者)模式和publish/subscribe(发布/订阅)模式的区别　47
9.5.2 优点　49
9.5.3 缺点　49
9.5.4 publish/subscribe实现　49
9.6 mediator(中介者)模式　59
9.6.1 基本实现　60
9.6.2 高级实现　61
9.6.3 示例　67
9.6.4 优点和缺点　68
9.6.5 中介者(mediator)与观察者(observer)　69
9.6.6 中介者(mediator)与外观(facade)　69
9.7 prototype(原型)模式　70
9.8 command(命令)模式　73
9.9 facade(外观)模式　75
有关抽象的要点　78
9.10 factory(工厂)模式　78
9.10.1 何时使用factory模式　81
9.10.2 何时不应使用factory模式　81
9.10.3 abstract factory(抽象工厂)　81
9.11 mixin模式　82
9.11.1 子类化　83
9.11.2 mixin(混入)　84
9.12 decorator(装饰者)模式　88
9.12.1 伪经典decorator(装饰者)　91
9.12.2 使用jquery的装饰者　96
9.12.3 优点和缺点　97
9.13 flyweight(享元)模式　98
9.13.1 使用flyweight模式　98
9.13.2 flyweight和共享数据　99
9.13.3 实现经典flyweight(享元)　99
9.13.4 转换代码以使用flyweight(享元)模式　103
9.13.5 基本工厂　105
9.13.6 管理外部状态　106
9.13.7 flyweight(享元)模式和dom　107
第10章　javascript mv*模式　112
10.1 mvc　112
smalltalk-80 mvc　113
10.2 为javascript开发人员提供的mvc　114
10.2.1 model(模型)　114
10.2.2 view(视图)　116
10.2.3 controller(控制器)　119
10.2.4 spine.js与backbone.js　120
10.3 mvc为我们提供了什么　122
10.4 javascript中的smalltalk-80 mvc　122
10.4.1 深入挖掘　123
10.4.2 总结　123
10.5 mvp　124
10.5.1 model、view和presenter　124
10.5.2 mvp或mvc？　125
10.5.3 mvc、mvp和backbone.js　126
10.6 mvvm　128
10.6.1 历史　129
10.6.2 model　129
10.6.3 view　130
10.6.4 viewmodel　133
10.6.5 小结：view和viewmodel　135
10.6.6 小结：viewmodel和model　135
10.7 利与弊　135
10.7.1 优点　135
10.7.2 缺点　136
10.8 使用更松散数据绑定的mvvm　136
10.9 mvc、mvp与mvvm　141
10.10 backbone.js与knockoutjs　142
第11章 模块化的javascript设计模式　144
11.1 脚本加载器要点　145
11.2 amd　145
11.2.1 模块入门　146
11.2.2 使用dojo的amd模块　150
11.2.3 amd模块设计模式(dojo)　151
11.2.4 使用jquery的amd模块　152
11.2.5 amd总结　155
11.3 commonjs　155
11.3.1 入门指南　156
11.3.2 使用多个依赖　157
11.3.3 支持commonjs的加载器和框架　158
11.3.4 commonjs适用于浏览器吗？　158
11.3.5 延伸阅读　159
11.4 amd和commonjs：互相竞争，标准同效　159
umd：用于插件的amd和commonjs兼容模块　160
11.5 es harmony　165
11.5.1 具有imports和exports的模块　166
11.5.2 从远程数据源加载的模块　167
11.5.3 模块加载器api　167
11.5.4 用于服务器的类commonjs模块　168
11.5.5 具有构造函数、getter和setter的类　168
11.5.6 es harmony总结　169
11.5.7 延伸阅读　170
11.6 总结　170
第12章 jquery中的设计模式　171
12.1 composite(组合)模式　171
12.2 adapter(适配器)模式　173
12.3 facade(外观)模式　174
12.4 observer(观察者)模式　177
12.5 iterator(迭代器)模式　180
12.6 延迟初始化　181
12.7 proxy(代理)模式　183
12.8 builder(生成器)模式　184
第13章 jquery插件设计模式　187
13.1 模式　188
13.2 lightweight start模式　189
延伸阅读　191
13.3 完整的widget factory模式　191
延伸阅读　194
13.4 嵌套命名空间插件模式　194
延伸阅读　196
13.5 自定义事件插件模式(使用widget factory)　196
延伸阅读　198
13.6 使用dom-to-object bridge模式的原型继承　198
延伸阅读　200
13.7 jquery ui widget factory bridge模式　200
延伸阅读　203
13.8 使用widget factory的jquery mobile widget　203
13.9 requirejs和jquery ui widget factory　206
13.9.1 用法　208
13.9.2 延伸阅读　209
13.10 全局选项和单次调用可重写选项(最佳选项模式)　209
延伸阅读　211
13.11 高可配和高可变的插件模式　211
延伸阅读　213
13.12 是什么使插件超越模式　213
13.12.1 质量　214
13.12.2 代码风格　214
13.12.3 兼容性　214
13.12.4 可靠性　214
13.12.5 性能　214
13.12.6 文档　215
13.12.7 维护的可能性　215
13.13 总结　215
13.14 命名空间模式　215
13.15 命名空间基础　216
13.15.1 单一全局变量　216
13.15.2 命名空间前缀　217
13.15.3 对象字面量表示法　217
13.15.4 嵌套命名空间　221
13.15.5 立即调用的函数表达式(iife)　222
13.15.6 命名空间注入　224
13.16 高级命名空间模式　226
13.16.1 自动嵌套的命名空间　227
13.16.2 依赖声明模式　229
13.16.3 深度对象扩展　229
13.16.4 推荐　232
第14章　总结　233
附录　参考文献　235
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript设计模式
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript面向对象编程指南（第2版）
第1章 面向对象的JavaScript 1
1.1 回顾历史 2
1.2 浏览器的战争与复兴 3
1.3 分析现状 4
1.4 展望未来 5
1.5 ECMAScript 5 6
1.6 面向对象的程序设计 6
1.6.1 对象 7
1.6.2 类 8
1.6.3 封装 8
1.6.4 聚合 9
1.6.5 继承 9
1.6.6 多态 10
1.7 OOP小结 10
1.8 训练环境设置 11
1.8.1 WebKit所附带的Web审查工具 11
1.8.2 Mac上的JavaScriptCore 12
1.8.3 更多控制台 13
1.9 本章小结 15
第2章 基本数据类型、数组、循环及条件表达式 16
2.1 变量 16
2.2 操作符 19
2.3 基本数据类型 23
2.3.1 查看类型操作符—typeof 24
2.3.2 数字 24
2.3.3 字符串 29
2.3.4 布尔值 33
2.3.5 undefined与null 39
2.4 基本数据类型综述 41
2.5 数组 42
2.5.1 增加、更新数组元素 43
2.5.2 删除元素 44
2.5.3 数组的数组 44
2.6 条件与循环 45
2.6.1 if条件表达式 46
2.6.2 else语句 46
2.6.3 代码块 47
2.6.4 检查变量是否存在 48
2.6.5 循环 53
2.7 注释 58
2.8 本章小结 58
2.9 练习题 59
第3章 函数 61
3.1 什么是函数 62
3.1.1 调用函数 62
3.1.2 参数 63
3.2 预定义函数 64
3.2.1 parseInt() 65
3.2.2 parseFloat() 67
3.2.3 isNaN() 68
3.2.4 isFinite() 68
3.2.5 URI的编码与反编码 69
3.2.6 eval() 69
3.2.7 一点惊喜—alert()函数 70
3.3 变量的作用域 71
3.4 函数也是数据 73
3.4.1 匿名函数 75
3.4.2 回调函数 75
3.4.3 回调示例 77
3.4.4 即时函数 79
3.4.5 内部（私有）函数 80
3.4.6 返回函数的函数 81
3.4.7 能重写自己的函数 82
3.5 闭包 83
3.5.1 作用域链 84
3.5.2 利用闭包突破作用域链 85
3.5.3 getter与setter 91
3.5.4 迭代器 92
3.6 本章小结 93
3.7 练习题 93
第4章 对象 95
4.1 从数组到对象 95
4.1.1 元素、属性、方法与成员 97
4.1.2 哈希表、关联型数组 98
4.1.3 访问对象属性 98
4.1.4 调用对象方法 100
4.1.5 修改属性与方法 101
4.1.6 使用this值 102
4.1.7 构造器函数 102
4.1.8 全局对象 104
4.1.9 构造器属性 106
4.1.10 instanceof操作符 106
4.1.11 返回对象的函数 107
4.1.12 传递对象 108
4.1.13 比较对象 109
4.1.14 Webkit控制台中的对象 110
4.2 内建对象 111
4.2.1 Object 112
4.2.2 Array 113
4.2.3 Function 117
4.2.4 Boolean 124
4.2.5 Number 125
4.2.6 String 127
4.2.7 Math 132
4.2.8 Date 134
4.2.9 RegExp 139
4.2.10 Error对象 146
4.3 本章小结 149
4.4 练习题 150
第5章 原型 153
5.1 原型属性 154
5.1.1 利用原型添加方法与属性 154
5.1.2 使用原型的方法与属性 155
5.1.3 自身属性与原型属性 156
5.1.4 利用自身属性重写原型属性 158
5.1.5 isPrototypeOf()方法 162
5.1.6 神秘的__proto__链接 163
5.2 扩展内建对象 164
5.2.1 关于扩展内建对象的讨论 166
5.2.2 原型陷阱 167
5.3 本章小结 169
5.4 练习题 170
第6章 继承 171
6.1 原型链 171
6.1.1 原型链示例 172
6.1.2 将共享属性迁移到原型中去 175
6.2 只继承于原型 178
6.3 uber—子对象访问父对象的方式 181
6.4 将继承部分封装成函数 183
6.5 属性拷贝 185
6.6 请小心处理引用拷贝 187
6.7 对象之间的继承 190
6.8 深拷贝 192
6.9 object() 194
6.10 原型继承与属性拷贝的混合应用 195
6.11 多重继承 197
6.12 寄生式继承 199
6.13 构造器借用 200
6.14 本章小结 203
6.15 案例学习：图形绘制 206
6.15.1 分析 207
6.15.2 实现 207
6.15.3 测试 211
6.16 练习题 213
第7章 浏览器环境 215
7.1 在HTML页面中引入JavaScript代码 215
7.2 概述：BOM与DOM 216
7.3 BOM 217
7.3.1　window对象再探 217
7.3.2　window.navigator 218
7.3.3　控制台的备忘功能 219
7.3.4　window.location 219
7.3.5　window.history 221
7.3.6　window.frames 222
7.3.7　window.screen 223
7.3.8　window.open()/close() 224
7.3.9　window.moveTo()、window.resizeTo() 225
7.3.10　window.alert()、window.prompt()、window.confirm() 225
7.3.11　window.setTimeout()、window.setInterval() 227
7.3.12　window.document 229
7.4 DOM 229
7.4.1　Core DOM与HTML DOM 231
7.4.2　DOM节点的访问 233
7.4.3　DOM节点的修改 242
7.4.4　新建节点 245
7.4.5　移除节点 248
7.4.6　只适用于HTML的DOM对象 250
7.5 事件 254
7.5.1　内联HTML属性法 254
7.5.2　元素属性法 254
7.5.3　DOM的事件监听器 255
7.5.4　捕捉法与冒泡法 257
7.5.5　阻断传播 258
7.5.6　防止默认行为 260
7.5.7　跨浏览器的事件监听器 261
7.5.8　事件类型 262
7.6 XMLHttpRequest对象 263
7.6.1　发送请求 264
7.6.2　处理响应 265
7.6.3　在早于7的IE版本中创建XMLHttpRequest对象 266
7.6.4　A代表异步 267
7.6.5　X代表XML 267
7.6.6　实例示范 268
7.7 本章小结 270
7.8 练习题 272
第8章 编程模式与设计模式 274
8.1 编程模式 275
8.1.1 行为隔离 275
8.1.2 命名空间 278
8.1.3 初始化分支 281
8.1.4 惰性初始 282
8.1.5 配置对象 283
8.1.6 私有属性和方法 285
8.1.7 特权函数 286
8.1.8 私有函数的公有化 286
8.1.9 即时函数 287
8.1.10 模块 288
8.1.11 链式调用 289
8.1.12 JSON 290
8.2 设计模式 292
8.2.1 单件模式1 292
8.2.2 单件模式2 293
8.2.3 工厂模式 294
8.2.4 装饰器模式 296
8.2.5 观察者模式 299
8.3 本章小结 302
附录A 保留字 303
附录B 内建函数 307
附录C 内建对象 310
附录D 正则表达式 347
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript面向对象编程指南（第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>使用HTML、CSS和JavaScript开发Android程序
第1章 入门指南	1
网络应用程序与原生应用程序的对比	1
什么是网络应用程序	1
什么是原生应用程序	1
优势和劣势	2
哪种方法最合适你	2
网络编程速成	3
html入门	3
css入门	5
javascript入门	9
第2章 基本样式	13
还没网站	13
准备工作	14
准备独立的android样式表	17
控制页面缩放	18
添加android css	20
添加android视觉效果	23
使用jquery添加基本行为	24
内容回顾	30
.第3章 高级样式	31
添加一点ajax	31
交通警察	31
添加一些内容	34
javascript的路由请求	34
简单的点缀	36
进度指示器（process indicator）	36
设置页面标题	39
处理长标题	41
自动回到顶部	42
只拦截本地链接	43
编写自己的返回按钮	44
在主屏幕上添加图标	50
内容回顾	50
第4章 动画	51
来自朋友的帮助	51
让主页滑动起来	51
添加dates面板	54
添加date面板	56
添加new entry面板	57
添加settings面板	60
将所有代码放在一起	61
自定义jqtouch	64
内容回顾	65
第5章 客户端数据存储	67
web storage	67
将用户设置保存到本地	68
将选中的数据保存到session storage中	71
web sql database	74
创建数据库	74
插入行	77
检索行及处理结果集	80
删除行	84
内容回顾	88
web database错误编码参考	88
第6章 走向离线	89
离线应用程序缓存基础	89
在线whitelist（白名单）和fallback（备选）选项	92
创建动态manifest文件	95
调试	101
javascript控制台（javascript console）	101
内容回顾	104
第7章 走向原生	105
phonegap简介	105
下载android sdk	107
下载phonegap	110
配置环境	111
创建android virtual device（android虚拟设备）	113
创建kilogap	114
在模拟器中安装kilogap	118
使用屏幕的全部高度	121
自定义程序图标	122
在手机上安装kilogap	123
使用javascript来控制手机	123
beep（蜂鸣）、vibrate（振动）及alert（提醒）	123
地理位置	127
加速度传感器	133
内容回顾	136
第8章 将应用程序提交到android应用程序市场上	137
准备程序的发行版本	137
移除调试代码	137
应用程序版本管理	138
应用程序签名管理	138
将程序上传到android应用程序市场	141
直接分发程序	143
延伸阅读	145
附录 147
索引	151
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>使用HTML、CSS和JavaScript开发Android程序
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>测试驱动的JavaScript开发
译者序
前言
致谢
关于作者
第一部分　测试驱动开发
第1章 自动化测试
第2章 测试驱动开发的过程
第3章 行业工具
第4章 从测试中学习
第二部分　开发人员的JavaScript
第5章 函数
第6章 函数和闭包的应用
第7章 对象和原型继承
第8章 ECMAScript 5
第9章 不唐突的JavaScript
第10章 特性检测
第三部分　JavaScript测试驱动开发实践
第11章 观察者模式
第12章 抽象化浏览器区别：Ajax
第13章 使用Ajax和Comet将数据流式化
第14章 基于Node.js的服务器端JavaScript
第15章 TDD及DOM操作：聊天室客户端程序
第四部分　测试模式
第16章 模拟对象和创建桩
第17章 编写良好的单元测试
参考文献
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>测试驱动的JavaScript开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>React
推荐序1 . . . . . . . iii
推荐序2 . . . . . . . v
推荐序3 . . . . . . . vii
前言. . . . . . . . . . . ix
第1 章React 简介. . . . . . . . . . . . . . . . . . . . . . . 1
背景介绍1
本书概览3
Component 的创建和复合3
进阶4
React 工具5
React 实践5
第2 章JSX . . . . 6
什么是JSX 7
使用JSX 的好处7
更加熟悉7
更加语义化8
更加直观8
抽象化9
关注点分离9
复合组件10
定义一个自定义组件10
使用动态值11
子节点12
JSX 与HTML 有何不同13
属性13
条件判断14
非DOM 属性15
事件17
注释18
特殊属性19
样式19
没有JSX 的React 19
创建React 元素20
简写21
延伸阅读及参考引用21
JSX 官方规范22
第3 章组件的生命周期. . . . . . . . . . . . . . . . . 23
生命周期方法23
实例化23
存在期24
销毁& 清理期24
实例化24
getDefaultProps 24
getInitialState 25
componentWillMount 25
render 25
componentDidMount 25
存在期26
componentWillReceiveProps 26
shouldComponentUpdate 27
componentWillUpdate 28
componentDidUpdate 28
销毁& 清理期28
componentWillUnmount 28
反模式：把计算后的值赋给state 28
总结30
第4 章数据流. 31
Props 31
PropTypes 33
getDefaultProps 33
State 34
放在state 和props 的各是哪些部分35
总结35
第5 章事件处理. . . . . . . . . . . . . . . . . . . . . . . . 36
绑定事件处理器36
事件和状态37
根据状态进行渲染38
更新状态40
事件对象42
总结43
第6 章组件的复合. . . . . . . . . . . . . . . . . . . . . . 44
扩展HTML 44
组件复合的例子45
组装HTML 45
追踪状态47
整合到父组件当中48
父组件、子组件关系50
总结52
第7 章mixin . . 53
什么是mixin 53
总结56
第8 章DOM 操作. . . . . . . . . . . . . . . . . . . . . . . 57
访问受控的DOM 节点57
整合非React 类库59
侵入式插件61
总结63
第9 章表单. . . 64
无约束的组件65
约束组件66
表单事件68
Label 68
文本框和Select 69
复选框和单选框71
表单元素的name 属性73
多个表单元素与change 处理器75
自定义表单组件79
Focus 83
可用性83
把要求传达清楚83
不断地反馈84
迅速响应84
符合用户的预期84
可访问85
减少用户的输入85
总结86
第10 章动画. . 87
CSS 渐变组87
给渐变class 添加样式88
渐变生命周期89
使用渐变组的隐患89
间隔渲染89
使用requestAnimationFrame 实现间隔渲染90
使用setTimeout 实现间隔渲染91
总结92
第11 章性能优化. . . . . . . . . . . . . . . . . . . . . . . 93
shouldComponentUpdate 93
不可变性辅助插件95
深入调查拖慢你应用的部分96
键（key） 97
总结98
第12 章服务端渲染. . . . . . . . . . . . . . . . . . . . . 99
渲染函数100
React.renderToString 100
React.renderToStaticMarkup 100
用React.renderToString 还是用React.renderToStaticMarkup 101
服务端组件生命周期102
设计组件102
异步状态104
同构路由106
单例、实例及上下文107
总结107
第13 章周边类库. . . . . . . . . . . . . . . . . . . . . . . 108
Jest 108
设置109
自动模拟依赖109
手动模拟依赖111
Immutable.js 113
Flux 114
总结115
第14 章开发工具. . . . . . . . . . . . . . . . . . . . . . . 116
构建工具116
Browserify 117
建立一个Browserify 项目117
对代码做出修改118
Watchify 119
构建119
Webpack 119
Webpack 与React 120
调试工具122
基础工具123
总结124
第15 章测试. . 125
上手125
测试的类型126
工具126
第一个测试用例：render 测试127
模拟组件132
函数监视138
监视函数被调用141
模拟事件146
测试中的组件查找器149
mixin 测试152
直接测试mixin 153
把mixin 包含在虚拟组件中进行测试156
共享行为的用例159
渲染到<body> 中164
服务端测试168
浏览器自动化测试174
启动服务器179
总结180
第16 章架构模式. . . . . . . . . . . . . . . . . . . . . . . 181
路由182
Backbone.Router 182
Aviator 183
react-router 185
Om (ClojureScript) 186
Flux 187
数据流187
Flux 各个部分188
Dispatcher 188
Action 189
Store 190
控制视图191
管理多个Store 192
更新Dispatcher 192
注册依赖行为193
总结194
第17 章其他使用场景. . . . . . . . . . . . . . . . . . 195
桌面应用195
游戏197
电子邮件202
绘图208
总结210
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>React
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript高效图形编程
第1章　代码重用和优化　1
1.1　快速运行　4
1.2　优化什么，何时优化？　4
1.3　自定义代码性能测试　7
1.4　优化JavaScript　8
1.4.1　查找表　8
1.4.2　位操作、整数和二进制数　12
1.5　优化jQuery和DOM交互　20
1.5.1　优化CSS格式变化　20
1.5.2　优化DOM插入　22
1.6　其他资源　23
第2章　DHTML基础　24
2.1　创建DHTML sprite　24
2.1.1　图像动画　25
2.1.2　封装和画图抽象　27
2.1.3　最小化DOM插入和删除　27
2.1.4　sprite代码　27
2.1.5　一个简单的sprite应用程序　29
2.1.6　一个更动态的sprite应用程序　31
2.2　转为一个jQuery插件　35
2.3　定时器、速度和帧速率　37
2.3.1　使用setInterval和setTimeout　38
2.3.2　定时器精度　39
2.3.3　保持速度一致　40
2.4　IE6背景图像缓存　45
第3章　滚动　46
3.1　纯CSS滚动特效　46
3.2　用JavaScript滚动　50
3.2.1　背景图像滚动　50
3.2.2　基于块的图像滚动　52
第4章　高级UI　68
4.1　HTML5表单　68
4.2　使用JavaScript UI库　70
4.3　从头创建UI元素　78
第5章　JavaScript游戏介绍　89
5.1　游戏对象概述　90
5.2　游戏代码　92
5.2.1　游戏变量　92
5.2.2　读取键盘输入　93
5.2.3　移动所有物体　95
5.2.4　一个简单的动画　96
5.2.5　碰撞检测　97
5.2.6　外星人　102
5.2.7　玩家　107
5.2.8　护甲　110
5.2.9　神秘飞碟　111
5.2.10　游戏　112
5.2.11　所有代码　116
第6章　HTML5画布　119
6.1　画布的支持　120
6.2　位图、矢量图，或两者兼而有之？　120
6.3　画布限制　121
6.4　画布与SVG的对比　121
6.5　画布与Adobe Flash的对比　122
6.6　画布导出器　123
6.7　画布绘制基础　125
6.7.1　画布元素　125
6.7.2　绘图环境　125
6.7.3　绘制矩形　126
6.7.4　绘制直线和曲线的路径　126
6.7.5　绘制位图图像　133
6.7.6　颜色、描边和填充　134
6.8　使用画布创建动画　138
6.9　画布和递归绘图　140
6.10　用画布sprites取代DHTMLsprite　143
6.10.1　新CanvasSprite对象　143
6.10.2　其他的代码更改　144
6.11　一个图形使用画布的WebSockets聊天应用　145
6.11.1　WebSockets优势　146
6.11.2　WebSockets支持和安全　146
6.11.3　聊天应用程序　147
第7章　游戏和模拟中的向量　159
7.1　向量运算　162
7.1.1　加法和减法　163
7.1.2　缩放　163
7.1.3　标准化　163
7.1.4　旋转　163
7.1.5　向量的点乘　164
7.2　创建一个JavaScript向量对象　165
7.3　使用向量的大炮模拟　166
7.3.1　模拟范围的变量　167
7.3.2　炮弹　168
7.3.3　大炮　168
7.3.4　背景　170
7.3.5　主循环　171
7.3.6　页面布局　171
7.4　火箭模拟　172
7.4.1　游戏对象　173
7.4.2　障碍物对象　174
7.4.3　火箭物体　175
7.4.4　背景　178
7.4.5　碰撞检测和反馈　178
7.4.6　页面代码　180
7.4.7　可能的改进方案　182
第8章　谷歌可视化　183
8.1　限制　185
8.2　相关术语表　186
8.3　图像图表　187
8.3.1　数据格式及图表分辨率　190
8.3.2　使用动态数据　194
8.3.3　总结　197
8.4　交互式图表　197
第9章　使用jQuery Mobile为移动设备开发　206
9.1　jQuery Mobile　207
9.2　TilePic：移动友好的网络应用程序　209
9.2.1　TilePic游戏概述　209
9.2.2　TilePic游戏代码　211
9.3　PhoneGap　220
第10章　用PhoneGap创建Android应用　222
10.1　安装PhoneGap　223
10.1.1　安装Java开发工具包(JDK)　223
10.1.2　安装Android软件开发工具包(SDK)　224
10.1.3　安装 Eclipse　225
10.1.4　安装Android开发工具　226
10.1.5　安装PhoneGap　227
10.2　在Eclipse中创建一个PhoneGap项目　227
10.2.1　更改App.java文件　229
10.2.2　改变AndroidManifest.xml文件　230
10.2.3　创建和测试一个简单的Web应用程序　231
10.2.4　测试TilePic应用程序　232
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript高效图形编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript框架设计 第二版
第1章　种子模块	1
1．1　模块化	1
1．2　功能介绍	2
1．3　对象扩展	3
1．4　数组化	5
1．5　类型的判定	8
1．5．1　type	12
1．5．2　isPlainObject	13
1．5．3　isWindow	14
1．5．4　isNumeric	15
1．5．5　isArrayLike	16
1．6　domReady	17
1．7　无冲突处理	20
1．8　总结	20
第2章　语言模块	21
2．1　字符串的扩展与修复	22
2．1．1　repeat	24
2．1．2　byteLen	26
2．1．3　pad	30
2．1．4　quote	32
2．1．5　trim与空白	33
2．2　数组的扩展与修复	37
2．3　数值的扩展与修复	45
2．4　函数的扩展与修复	48
2．5　日期的扩展与修复	53
第3章　浏览器嗅探与特征侦测	57
3．1　浏览器判定	58
3．2　document．all趣闻	61
3．3　事件的支持侦测	62
3．4　样式的支持侦测	65
3．5　jQuery一些常用特征的含义	65
第4章　类工厂	68
4．1　JavaScript对类的支撑	68
4．2　各种类工厂的实现	73
4．2．1　相当精巧的库—P．js	74
4．2．2　JS．Class	76
4．2．3　simple-inheritance	78
4．2．4　体现JavaScript灵活性的
库—def．js	81
4．3　进击的属性描述符	85
4．4　真类降临	93
第5章　选择器引擎	102
5．1　浏览器内置的寻找元素的方法	103
5．2　getElementsBySelector	105
5．3　选择器引擎涉及的知识点	108
5．3．1　关系选择器	109
5．3．2　伪类	111
5．3．3　其他概念	113
5．4　选择器引擎涉及的通用函数	114
5．4．1　isXML	114
5．4．2　contains	115
5．4．3　节点排序与去重	117
5．4．4　切割器	121
5．4．5　属性选择器对于空白字符的
匹配策略	123
5．4．6　子元素过滤伪类的分解与
匹配	125
5．5　Sizzle引擎	127
5．6　总结	135
第6章　节点模块	136
6．1　节点的创建	136
6．2　节点的插入	142
6．3　节点的复制	144
6．4　节点的移除	148
6．5　节点的移除回调实现	151
6．5．1　Mutation Observer	152
6．5．2　更多候选方案	153
6．6　innerHTML、innerText、outerHTML、
outerText的兼容处理	157
6．7　模板容器元素	161
6．8　iframe元素	162
6．9　总结	165
第7章　数据缓存模块	166
7．1　jQuery的第1代缓存系统	166
7．2　jQuery的第2代缓存系统	172
7．3　jQuery的第3代缓存系统	175
7．4　有容量限制的缓存系统	176
7．5　本地存储系统	178
7．6　总结	184
第8章　样式模块	185
8．1　主体架构	186
8．2　样式名的修正	189
8．3　个别样式的特殊处理	190
8．3．1　opacity	190
8．3．2　user-select	192
8．3．3　background-position	192
8．3．4　z-index	193
8．3．5　盒子模型	194
8．3．6　元素的尺寸	195
8．3．7　元素的显隐	201
8．3．8　元素的坐标	203
8．4　元素的滚动条的坐标	209
8．5　总结	210
第9章　属性模块	211
9．1　元素节点的属性	212
9．2　如何区分固有属性与自定义
属性	214
9．3　如何判定浏览器是否区分固有
属性与自定义属性	216
9．4　IE的属性系统的3次演变	217
9．5　className的操作	218
9．6　Prototype．js的属性系统	221
9．7　jQuery的属性系统	226
9．8　avalon的属性系统	229
9．9　value的操作	232
9．10　总结	235
第10章　PC端的事件系统	236
10．1　原生API简介	238
10．2　on×××绑定方式的缺陷	239
10．3　attachEvent的缺陷	239
10．4　addEventListener的缺陷	241
10．5　handleEvent与
EventListenerOptions	242
10．6　Dean Edward大神的addEvent．js
源码分析	243
10．7　jQuery的事件系统	246
10．8　avalon2的事件系统	248
10．9　总结	254
第11章　移动端的事件系统	255
11．1　touch系事件	256
11．2　gesture系事件	258
11．3　tap系事件	259
11．4　press系事件	268
11．5　swipe系事件	271
11．6　pinch系事件	273
11．7　拖放系事件	276
11．8　rotate系事件	279
11．9　总结	282
第12章　异步模型	283
12．1　setTimeout与setInterval	284
12．2　Promise诞生前的世界	287
12．2．1　回调函数callbacks	287
12．2．2　观察者模式observers	287
12．2．3　事件机制listeners	289
12．3　JSDeferred里程碑	289
12．4　jQuery Deferred宣教者	299
12．5　es6 Promise第一个标准模型	303
12．5．1 构造函数：Promise
( executor )	308
12．5．2 Promise．resolve/reject	309
12．5．3 Promise．all/race	309
12．5．4 Promise#then/catch	310
12．5．5 Promise#resolve/reject	310
12．5．6 Promsie#notify	311
12．5．7 nextTick	312
12．6　es6生成器过渡者	314
12．6．1 关键字yield	315
12．6．2 yield*和yield的区别	316
12．6．3 异常处理	317
12．7　es7 async/await终极方案	319
12．8 总结	321
第13章　数据交互模块	323
13．1　Ajax概览	323
13．2　优雅地取得XMLHttpRequest
对象	324
13．3　XMLHttpRequest对象的事件
绑定与状态维护	326
13．4　发送请求与数据	328
13．5　接收数据	330
13．6　上传文件	333
13．7　jQuery．ajax	335
13．8　fetch，下一代Ajax	340
第14章　动画引擎	344
14．1　动画的原理	344
14．2　缓动公式	347
14．3　jQuery．animate	349
14．4　mass Framework基于JavaScript的
动画引擎	350
14．5　requestAnimationFrame	358
14．6　CSS3 transition	364
14．7　CSS3 animation	368
14．8　mass Framework基于CSS的动画
引擎	370
第15章　MVVM	378
15．1　前端模板（静态模板）	378
15．2　MVVM的动态模板	388
15．2．1　求值函数	390
15．2．2　刷新函数	395
15．3　ViewModel	399
15．3．1　Proxy	400
15．3．2　Reflect	401
15．3．3　avalon的ViewModel
设计	403
15．3．4　angular的ViewModel
设计	407
15．4　React与虚拟DOM	412
15．4．1　React的diff算法	415
15．4．2　React的多端渲染	417
15．5　性能墙与复杂墙	417
第16章　组件	422
16．1　jQuery时代的组件方案	422
16．2　avalon2的组件方案	427
16．2．1　组件容器	429
16．2．2　配置对象	430
16．2．3　slot机制	430
16．2．4　soleSlot机制	431
16．2．5　生命周期	432
16．3　React的组件方案	433
16．3．1　React组件的各种定义
方式	433
16．3．2　React组件的生命周期	439
16．3．3　React组件间通信	441
16．3．4　React组件的分类	445
16．4　前端路由	446
16．4．1 storage	447
16．4．2 mmHistory	448
16．4．3 mmRouter	454
彩蛋	458
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript框架设计 第二版
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入浅出CoffeeScript
目      录

第1章   入门指南    1
1.1   安装CoffeeScript    1
1.2   CoffeeScript编辑器    4
1.3  “邂逅”coffee    5
1.3.1   编译为JavaScript    6
1.3.2   REPL    7
1.4   调试CoffeeScript    8
1.5   预备    9
第2章   函数、作用域和上下文    11
2.1   函数基础知识    11
2.1.1   访问arguments对象    13
2.1.2   条件表达式和异常    14
2.2   作用域：你在哪里看到它们    16
2.3   上下文    18
2.4   属性参数（@arg）    21
2.5   默认参数（arg=）    22
2.6   参数列（...）    24
2.7   项目：5×5游戏输入分析器    25
2.8   做得好，年轻的学徒    29
2.9   练习    29
第3章   集合与迭代    31
3.1   作为哈希表的对象    31
3.1.1   JavaScript基础知识：一节JavaScript补习课    31
3.1.2   精简的JSON    32
3.1.3   同名键值对    33
3.1.4   吸收操作符：'a?.b'    33
3.2   数组    34
3.2.1   区间    35
3.2.2   切分和剪接    35
3.3   集合的迭代    37
3.4   条件迭代    39
3.5   列表解析    40
3.6   模式匹配（或解构赋值）    41
3.7   项目：5×5单人游戏    42
3.8   进阶    48
3.9   练习    48
第4章   模块与类    51
4.1   模块：解构程序    51
4.2   原型的威力    53
4.3   类：原型函数    55
4.4   使用extends来继承    56
4.5   项目：重构5×5游戏    59
4.5.1   Dictionary类    60
4.5.2   Grid类    61
4.5.3   Player类    62
4.5.4   Console.Coffee接口    63
4.6   就如“一勺糖”    63
4.7   练习    64
第5章   jQuery Web交互开发    66
5.1   jQuery之道    66
5.2   操作DOM    67
5.3   学会选择    68
5.4   响应事件    69
5.5   项目：基于浏览器的5×5游戏    71
5.5.1   index.html    71
5.5.2   style.css    72
5.5.3   jq5×5.coffee    73
5.6   未来是jQuery化的    77
5.7   练习    77
第6章   Node.js服务器端程序    79
6.1   什么是Node.js    79
6.2   使用exports和require构建模块化代码    80
6.3   异步思想    81
6.4   项目：多人5×5游戏    84
6.4.1   5×5server.coffee    85
6.4.2   5×5client.coffee    89
6.4.3   都结束了    91
6.5   客户端、服务器端——有何不同    91
6.6   练习    91
附录A   练习答案    92
附录B   运行CoffeeScript的几种方法    98
附录C   JavaScript开发者备忘录    102
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入浅出CoffeeScript
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>实战 ES2015
第1章 ECMAScript版本发展历程 1
1.1 ECMAScript的历史更替 2
1.1.1 ECMA-262 / ECMA-262 Edition 2 2
1.1.2 ECMA-262 Edition 3 3
1.1.3 ECMA-262 Edition 5 4
1.1.4 ECMA-262 Edition 4 4
1.2 小结 5
第2章 ES2015能为实际开发带来什么 6
2.1 简单概括ES2015 6
2.2 语法糖 7
2.3 工程优势 8
2.3.1 模块化 8
2.3.2 模块化与组件化结合 11
2.3.3 内存安全 13
2.4 小结 14
第3章 ES2015新语法详解 15
3.1 let、const和块级作用域 16
3.1.1 块级作用域 16
3.1.2 let定义变量 20
3.1.3 const定义常量 22
3.1.3.1 使用语法 23
3.1.3.2 const与块级作用域 25
3.1.4 变量的生命周期 27
3.1.5 更佳体验 29
3.1.5.1 let VS const 29
3.1.5.2 let、const与循环语句 30
3.2 箭头函数（Arrow Function） 31
3.2.1 使用语法 31
3.2.1.1 单一参数的单行箭头函数 31
3.2.1.2 多参数的单行箭头函数 31
3.2.1.3 多行箭头函数 32
3.2.1.4 无参数箭头函数 32
3.2.2 this穿透 33
3.2.2.1 程序逻辑注意事项 34
3.2.2.2 编写语法注意事项 36
3.3 模板字符串（Template String） 37
3.3.1 字符串元素注入 37
3.3.2 多行字符串 37
3.3.3 模板字符串使用语法 38
3.3.3.1 支持字符串元素注入 38
3.3.3.2 支持换行 39
3.3.4 注意事项 41
3.4 对象字面量扩展语法（Enhanced Object Literals） 41
3.4.1 函数类属性的省略语法 41
3.4.2 支持 __proto__ 注入 42
3.4.3 可动态计算的属性名 43
3.4.4 将属性名定义省略 44
3.5 表达式结构（Destructuring） 45
3.5.1 使用语法 47
3.5.1.1 使用对象作为返回载体（带有标签的多返回值） 47
3.5.1.2 使用数组作为返回载体 47
3.5.2 使用场景 48
3.5.2.1 Promise与模式匹配 48
3.5.2.2 Swap（变量值交换） 49
3.5.3 用法 49
3.5.3.1 解构别名 50
3.5.3.2 无法匹配的缺省值 50
3.5.3.3 深层匹配 50
3.5.3.4 配合其他新特性 52
3.6 函数参数表达、传参 53
3.6.1 默认参数值 54
3.6.1.1 使用语法 54
3.6.1.2 使用场景 54
3.6.2 剩余参数 55
3.6.2.1 使用语法 56
3.6.2.2 使用场景 57
3.6.2.3 注意事项 57
3.6.3 解构传参 58
3.7 新的数据结构 59
3.7.1 Set有序集合 59
3.7.1.1 使用语法 60
3.7.1.2 增减元素 61
3.7.1.3 检查元素 61
3.7.1.4 历遍元素 61
3.7.2 WeakSet 62
3.7.3 Map映射类型 64
3.7.3.1 使用语法 64
3.7.3.2 增减键值对 65
3.7.3.3 获取键值对 66
3.7.3.4 检查映射对象中的键值对 66
3.7.3.5 历遍映射对象中的键值对 66
3.7.3.6 映射对象与Object的区别 67
3.7.4 WeakMap 67
3.8 类语法（Classes） 68
3.8.1 使用语法 69
3.8.1.1 基本定义语法 69
3.8.1.2 继承语法 70
3.8.1.3 Getter/Setter 72
3.8.1.4 静态方法 73
3.8.1.5 技巧 77
3.8.2 注意事项 78
3.8.3 遗憾与期望 79
3.9 生成器（Generator） 80
3.9.1 由来 80
3.9.2 基本概念 81
3.9.2.1 生成器函数（Generator Function） 81
3.9.2.2 生成器（Generator） 82
3.9.3 使用方法 83
3.9.3.1 构建生成器函数 83
3.9.3.2 启动生成器 83
3.9.3.3 运行生成器内容 84
3.9.4 深入理解 85
3.9.4.1 运行模式 85
3.9.4.2 生成器函数以及生成器对象的检测 85
3.9.4.3 生成器嵌套 88
3.9.4.4 生成器与协程 90
3.10 Promise 93
3.10.1 基本语法 94
3.10.1.1 创建Promise对象 94
3.10.1.2 进行异步操作 94
3.10.1.3 处理Promise的状态 95
3.10.2 使用方法 97
3.10.2.1 Promise.all(iterable) 97
3.10.2.2 Promise.race(iterable) 97
3.11 代码模块化 98
3.11.1 引入模块 99
3.11.1.1 引入默认模块 99
3.11.1.2 引入模块部分接口 100
3.11.1.3 引入全部局部接口到指定命名空间 101
3.11.1.4 混入引入默认接口和命名接口 101
3.11.1.5 不引入接口，仅运行模块代码 102
3.11.2 定义模块 102
3.11.3 暴露模块 103
3.11.3.1 暴露单一接口 103
3.11.3.2 暴露模块默认接口 104
3.11.3.3 混合使用暴露接口语句 104
3.11.3.4 从其他模块暴露接口 105
3.11.3.5 暴露一个模块的所有接口 105
3.11.3.6 暴露一个模块的部分接口 106
3.11.3.7 暴露一个模块的默认接口 106
3.12 Symbol 106
3.12.1 基本语法 107
3.12.1.1 生成的Symbol值 107
3.12.1.2 注册全局可重用 Symbol 108
3.12.1.3 获取全局 Symbol的key 109
3.12.2 常用Symbol值 109
3.12.3 Symbol.iterator 110
3.12.3.1 for-of循环语句与可迭代对象 111
3.12.3.2 使用Symbol.iterator定义一个可迭代对象 111
3.12.4 Symbol.hasInstance 113
3.12.5 Symbol.match 113
3.12.6 Symbol.unscopables 114
3.12.7 Symbol.toPrimitive 115
3.12.8 Symbol.toStringTag 116
3.13 Proxy 117
3.13.1 元编程 117
3.13.2 使用语法 118
3.13.3 handler.has 119
3.13.4 handler.get 120
3.13.5 handler.set 121
3.13.6 handler.apply 122
3.13.7 handler.construct 122
3.13.8 创建可解除Proxy对象 123
3.13.9 使用场景 123
3.13.9.1 看似“不可能”的自动填充 123
3.13.9.2 只读视图 124
3.13.9.3 入侵式测试框架 125
3.14 小结 127
第4章 ES2015的前端开发实战 129
4.1 Filmy的功能规划 129
4.1.1 数据分级 130
4.1.2 数据结构 130
4.1.2.1 核心数据 130
4.1.2.2 分类数据 131
4.1.2.3 相册数据 131
4.1.3 数据搜索 132
4.1.3.1 搜索分类 132
4.1.3.2 搜索相册 132
4.1.4 界面原型规划 133
4.1.4.1 着陆页面 133
4.1.4.2 分类目录页面 133
4.1.4.3 分类内容页面 134
4.1.4.4 相册页面 134
4.2 功能组件分割 135
4.2.1 根组件分割 135
4.2.2 着陆页面 136
4.2.3 目录页面 136
4.2.4 分类页面 137
4.2.5 相册页面 137
4.3 技术选型 139
4.3.1 整体架构 139
4.3.2 数据层 139
4.3.3 逻辑层及UI层 140
4.3.3.1 AngularJS 141
4.3.3.2 React.js 141
4.3.3.3 Vue.js 142
4.3.4 程序架构 143
4.3.4.1 路由组件 143
4.3.4.2 数据组件 144
4.3.4.3 视图组件 145
4.4 数据层开发 146
4.4.1 安装依赖 147
4.4.2 配置七牛 SDK 147
4.4.3 核心配置数据 150
4.4.3.1 获取核心配置数据 150
4.4.3.2 更新配置数据 151
4.4.4 分类数据 154
4.4.4.1 数据结构 155
4.4.4.2 数据索引 157
4.4.4.3 更新分类数据 159
4.4.5 相册数据 159
4.4.5.1 数据加载 160
4.4.5.2 数据更新 161
4.4.5.3 数据检索 161
4.5 入口文件与路由组件开发 165
4.5.1 路由基础组件 166
4.5.2 入口文件 166
4.5.2.1 简单的字符串处理 167
4.5.2.2 多国语言处理 168
4.6 着陆页面开发 170
4.6.1 路由组件开发 171
4.6.2 着陆页视图 174
4.6.2.1 引入数据 174
4.6.2.2 绑定视图 174
4.6.3 分类目录视图 177
4.6.3.1 分类元素视图组件 177
4.6.3.2 渲染分类目录 178
4.6.4 路由组件、视图组件与数据组件的联系 180
4.6.4.1 在逻辑控制器中进行数据操作 180
4.6.4.2 在视图中进行数据操作 181
4.6.4.3 组织方式的区别与项目应用 182
4.7 分类页面开发 182
4.7.1 路由组件开发 183
4.7.2 分类元素视图组件 185
4.7.3 相册列表视图组件 186
4.7.4 相册页面开发 188
4.7.4.1 相册页面的路由组件 188
4.7.4.2 相册信息视图组件 189
4.7.4.3 图片列表视图组件 189
4.8 管理工具开发 190
4.9 初始化Filmy实例 191
4.9.1 基本元素 192
4.9.2 基本逻辑 194
4.9.2.1 获取七牛云的上传凭证 195
4.9.2.2 检查并处理管理员对背景图片的填写方式 196
4.9.2.3 将核心数据部署到七牛云上 197
4.10 管理工具的总体组织 197
4.10.1 管理页面的总体架构 198
4.10.2 侧边栏 198
4.10.3 路由配置 200
4.11 相册发布页面 202
4.11.1 基本逻辑 202
4.11.1.1 绑定数据 202
4.11.1.2 绑定元素以接收文件上传 203
4.11.2 上传数据 204
4.11.2.1 图片上传逻辑 204
4.11.2.2 数据提交 205
4.12 打包发布 206
4.12.1 准备工作 206
4.12.2 配置 webpack 207
4.12.2.1 安装依赖 207
4.12.2.2 编写配置文件 207
4.12.3 发布到云端 209
4.13 小结 210
第5章 ES2015的Node.js开发实战 211
5.1 Duel Living的功能规划 211
5.1.1 基本产品组织 211
5.1.2 数据结构 213
5.1.2.1 赛事（Duel） 213
5.1.2.2 消息（Message） 214
5.1.2.3 参赛方（Player）和主持人（Host） 216
5.1.3 数据结构的关系 216
5.2 数据层开发 217
5.2.1 文件结构 217
5.2.2 安装依赖 217
5.2.3 主持人数据和参赛方数据 218
5.2.4 赛事数据 223
5.2.5 消息数据 225
5.3 服务端基本架构开发 227
5.3.1 安装依赖 227
5.3.2 程序入口 229
5.3.3 路由表 229
5.4 API开发 230
5.4.1 API安全 230
5.4.2 赛事API 231
5.4.2.1 获取当前可用的所有赛事信息 232
5.4.2.2 获取指定赛事数据 232
5.4.2.3 创建新的赛事 233
5.4.3 消息API 236
5.4.3.1 获取指定赛事中的若干消息 236
5.4.3.2 发布消息到指定赛事 237
5.5 直播网络 237
5.5.1 网络架构 238
5.5.1.1 集中架构 238
5.5.1.2 分布式架构 239
5.5.1.3 P2P 网络 239
5.5.2 技术实现 240
5.5.3 WebSocket 服务端 241
5.5.3.1 建立WebSocket服务端实例 242
5.5.3.2 建立WebSocket通讯连接 242
5.5.3.3 广播消息 244
5.5.4 P2P 协调服务端 245
5.5.4.1 建立P2P协调连接 245
5.5.4.2 存储客户端地理信息 246
5.5.4.3 匹配相近的客户端 248
5.6 直播间客户端 249
5.6.1 准备工作 249
5.6.2 建立直播通信 250
5.6.2.1 建立PeerJS客户端实例 251
5.6.2.2 建立WebSocket通信连接 251
5.6.2.3 建立P2P通信连接 253
5.6.3 处理消息 253
5.7 部署应用 255
5.7.1 编译代码 255
5.7.2 运行程序 256
5.7.3 发布部署 257
5.8 小结 258
第6章 ES2016标准 259
6.1 Array.prototype.includes 259
6.2 幂运算符 260
6.3 小结 261
第7章 展望更远的未来 262
7.1 async/await 262
7.2 Decorators 264
7.2.1 简单实例 264
7.2.2 黑科技 265
7.3 函数绑定 266
7.4 小结 267
附录 其他ES2015新特性 268
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>实战 ES2015
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript基础教程
第1章　了解JavaScript
第2章　开始
第3章　语言基础
第4章　处理图像
第5章　框架
第6章　操作浏览器窗口
第7章　表单处理
第8章　表单和正则表达式
第9章　处理事件
第10章　JavaScript和cookie
第11章　CSS简介
第12章　对象和DOM
第13章　建立动态页面
第14章　JavaScript应用示例
第15章　Ajax简介
第16章　Ajax工具包
第17章　bookmarklet
附录A　JavaScript的版本演化和参考资料（图灵网站下载）
附录B　JavaScript保留字（图灵网站下载）
附录C　CSS参考（图灵网站下载）
附录D　其他学习资源（图灵网站下载）
索引　（图灵网站下载）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript基础教程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript启示录
《javascript启示录》
第1章 javascript对象 1
1.1 创建对象 1
1.2 javascript构造函数构建并返回对象实例 6
1.3 javascript原生/内置对象构造函数 7
1.4 用户自定义/非原生对象构造函数 8
1.5 使用new操作符实例化构造函数 10
1.6 从构造函数创建字面量值 11
1.7 原始值(或简单值) 13
1.8 null、undefined、“string”、10、true和false等原始值不是对象 14
1.9 如何存储和复制原始值 15
1.10 原始值比较采用值比较 16
1.11 原始值(string、number、boolean)在被用做对象时就像对象 17
1.12 复杂值(或组合值) 18
1.13 如何存储或复制复杂值 19
1.14 复杂对象比较采用引用比较 20
1.15 复杂对象具有动态属性 21
1.16 typeof操作符 21
1.17 动态属性支持易变对象 23
1.18 构造函数实例都拥有指向其构造函数的constructor属性 24
.1.19 验证对象是否是特定构造函数的实例 26
1.20 构造函数创建的实例可拥有自己独立的属性(实例属性) 27
1.21 javascript对象和object()对象 28
第2章 对象与属性 29
2.1　复杂对象可以将大多数javascript值作为属性 29
2.2 封装复杂对象 30
2.3 用点表示法或中括号表示法获取/设置/更新对象属性 31
2.4 删除对象属性 34
2.5 如何解决对象属性的引用 34
2.6 使用hasownproperty验证对象属性不是来自原型链 37
2.7 使用in操作符检查一个对象是否包含给定属性 37
2.8 使用for in循环枚举(循环遍历)对象的属性 38
2.9 宿主对象与原生对象 39
2.10 使用underscore.js增强及扩展对象 40
第3章 object() 43
3.1　object()对象概要 43
3.2 object()参数 44
3.3 object()属性和方法 45
3.4 object()对象实例属性和方法 45
3.5 使用对象字面量创建object()对象 46
3.6 所有对象都继承自object.prototype 47
第4章 function() 49
4.1　function()对象概要 49
4.2 function()参数 50
4.3 function()属性和方法 50
4.4 function对象实例属性和方法 51
4.5 函数总有返回值 51
4.6 函数是“一等公民”(不仅语法，还有值) 52
4.7 函数的参数传递 53
4.8 this和arguments适用于所有函数 53
4.9 arguments.callee属性 54
4.10 函数实例的length属性和arguments.length 55
4.11 重定义函数参数 55
4.12 代码执行完成前取消函数执行 56
4.13 定义函数(语句、表达式或构造函数) 57
4.14 调用函数[函数、方法、构造函数或call()和apply()] 57
4.15 匿名函数 59
4.16 自调用的函数表达式 59
4.17 自调用的匿名函数语句 59
4.18 函数可以嵌套 60
4.19 给函数传递函数，从函数返回函数 61
4.20 函数定义之前调用(函数提升) 61
4.21 函数可以调用自身(递归) 62
第5章 head/全局对象 64
5.1　head/全局对象概要 64
5.2 head对象内的全局函数 65
5.3 head对象与全局属性、全局变量 65
5.4 引用head对象 67
5.5 head对象是隐式的，通常不显式引用 67
第6章 this关键字 69
6.1　this概要及this如何引用对象 69
6.2 如何确定this值 70
6.3 在嵌套函数中用this关键字引用head对象 71
6.4 充分利用作用域链研究嵌套函数问题 73
6.5 使用call()或apply()控制this值 73
6.6 在用户自定义构造函数内部使用this关键字 75
6.7 原型方法内的this关键字引用构造函数实例 75
第7章 作用域和闭包 77
7.1　javascript作用域概要 77
7.2 javascript没有块作用域 78
7.3 在函数中用var声明变量，避免作用域陷阱 78
7.4 作用域链(词法作用域) 79
7.5 作用域链查找返回第一轮值 81
7.6 函数定义时确定作用域，而非调用时确定 81
7.7 闭包是由作用域链引起的 82
第8章 函数原型属性 84
8.1　原型链概要 84
8.2 为何要关注prototype属性 85
8.3 原型在所有function()实例上都是标准的 85
8.4 默认的prototype属性是object()对象 86
8.5 将构造函数创建的实例链接至构造函数的prototype属性 87
8.6 原型链的最后是object.prototype 88
8.7 原型链返回在链中找到的第一个匹配结果 88
8.8 用新对象替换prototype属性会删除默认构造函数属性 89
8.9 继承原型属性的实例总是能够获得最新值 90
8.10 用新对象替换prototype属性不会更新以前的实例 91
8.11 用户自定义构造函数像原生构造函数一样原型继承 92
8.12 创建继承链 94
第9章 array() 95
9.1　array()对象概要 95
9.2 array()参数 96
9.3 array()属性和方法 96
9.4 数组对象实例属性和方法 96
9.5 创建数组 97
9.6 数组添加及更新 98
9.7 长度与索引 99
9.8 定义预定义长度的数组 100
9.9 可以通过设置数组长度添加或删除值 100
9.10 数组包含数组(多维数组) 101
9.11 遍历数组 101
第10章 string() 103
10.1　string()对象概要 103
10.2 string()参数 104
10.3 string()属性和方法 104
10.4 字符串对象实例属性和方法 104
第11章 number() 106
11.1　number()对象概要 106
11.2 整数和浮点数 106
11.3 number()参数 107
11.4 number()属性 108
11.5 数字对象实例属性和方法 108
第12章 boolean() 109
12.1　boolean()对象概要 109
12.2 boolean()参数 109
12.3 boolean()属性和方法 110
12.4 布尔对象实例属性和方法 110
12.5 非原始false布尔对象转换为true 111
12.6 某些值是false，其他都是true 111
第13章 使用原始值：字符串、数字和布尔值 113
13.1　访问属性时原始值/字面量值被转换为对象 113
13.2 通常应使用原始字符串、数字和布尔值 115
第14章 null 116
14.1　null值概要 116
14.2 typeof(null)的返回值为“object” 116
第15章 undefined 118
15.1　undefined值概要 118
15.2 在全局作用域中定义undefined变量 119
第16章 math函数 120
16.1　内置math对象概要 120
16.2 math属性和方法 120
16.3 math不是构造函数 122
16.4 math常数无法增大/改变 122
附录a 回顾 123
附录b 总结 126
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript启示录
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript编程全解
第1部分　JavaScript概要　　001
第1章 　JavaScript概要　　002
1.1 　JavaScript概要　　002
1.2 　JavaScript的历史　　002
1.3 　ECMAScript　　003
1.3.1 　JavaScript的标准化　　003
1.3.2 　被放弃的ECMAScript第4版　　004
1.4 　JavaScript的版本　　004
1.5 　JavaScript实现方式　　005
1.6 　JavaScript运行环境　　006
1.6.1 　核心语言　　006
1.6.2 　宿主对象　　007
1.7 　JavaScript相关环境　　007
1.7.1 　库　　007
1.7.2 　源代码压缩　　007
1.7.3 　集成开发环境　　008
第2部分　JavaScript的语言基础　　009
第2章 　JavaScript基础　　010
2.1 　JavaScript的特点　　010
2.2 　关于编排格式　　011
2.3 　变量的基础　　012
2.3.1 　变量的使用方法　　012
2.3.2 　省略var　　013
2.3.3 　常量　　013
2.4 　函数基础　　013
2.4.1 　函数的定义　　013
2.4.2 　函数的声明与调用　　014
2.4.3 　匿名函数　　014
2.4.4 　函数是一种对象　　015
2.5 　对象的基础　　016
2.5.1 　对象的定义　　016
2.5.2 　对象字面量表达式与对象的使用　　016
2.5.3 　属性访问　　017
2.5.4 　属性访问（括号方式）　　017
2.5.5 　方法　　018
2.5.6 　new表达式　　018
2.5.7 　类与实例　　018
2.5.8 　对类的功能的整理　　018
2.5.9 　对象与类型　　019
2.6 　数组的基础　　019
第3章 　JavaScript的数据类型　　021
3.1 　数据类型的定义　　021
3.1.1 　在数据类型方面与Java作比较　　021
3.1.2 　基本数据类型和引用类型　　022
3.2 　内建数据类型概要　　022
3.3 　字符串型　　023
3.3.1 　字符串字面量　　023
3.3.2 　字符串型的运算　　024
3.3.3 　字符串型的比较　　024
3.3.4 　字符串类（String类）　　025
3.3.5 　字符串对象　　026
3.3.6 　避免混用字符串值和字符串对象　　027
3.3.7 　调用String函数　　027
3.3.8 　String类的功能　　027
3.3.9 　非破坏性的方法　　029
3.4 　数值型　　029
3.4.1 　数值字面量　　029
3.4.2 　数值型的运算　　030
3.4.3 　有关浮点数的常见注意事项　　030
3.4.4 　数值类（Number类）　　031
3.4.5 　调用Number函数　　031
3.4.6 　Number类的功能　　032
3.4.7 　边界值与特殊数值　　033
3.4.8 　NaN　　034
3.5 　布尔型　　035
3.5.1 　布尔值　　035
3.5.2 　布尔类（Boolean类）　036
3.5.3 　Boolean类的功能　　036
3.6 　null型　　037
3.7 　undefined型　　037
3.8 　Object类型　　038
3.9 　数据类型转换　　039
3.9.1 　从字符串值转换为数值　　039
3.9.2 　从数值转换为字符串值　　040
3.9.3 　数据类型转换的惯用方法　　040
3.9.4 　转换为布尔型　　041
3.9.5 　其他的数据类型转换　　042
3.9.6 　从Object类型转换为基本数据类型　　042
3.9.7 　从基本数据类型转换为Object类型　　043
第4章 　语句、表达式和运算符　　045
4.1 　表达式和语句的构成　　045
4.2 　保留字　　045
4.3 　标识符　　046
4.4 　字面量　　047
4.5 　语句　　047
4.6 　代码块（复合语句）　　048
4.7 　变量声明语句　　048
4.8 　函数声明语句　　048
4.9 　表达式语句　　048
4.10 　空语句　　049
4.11 　控制语句　　049
4.12 　if-else语句　　050
4.13 　switch-case语句　　052
4.14 　循环语句　　054
4.15 　while语句　　055
4.16 　do-while语句　　056
4.17 　for语句　　057
4.18 　for in语句　　058
4.18.1 　数列与for in语句　　059
4.18.2 　在使用for in语句时需要注意的地方　　060
4.19 　for each in语句　　060
4.20 　break语句　　061
4.21 　continue语句　　061
4.22 　通过标签跳转　　062
4.23 　return语句　　063
4.24 　异常　　063
4.25 　其他　　064
4.26 　注释　　065
4.27 　表达式　　065
4.28 　运算符　　065
4.29 　表达式求值　　066
4.30 　运算符的优先级以及结合律　　066
4.31 　算术运算符　　067
4.32 　字符串连接运算符　　068
4.33 　相等运算符　　068
4.34 　比较运算符　　069
4.35 　in运算符　　070
4.36 　instanceof运算符　　071
4.37 　逻辑运算符　　071
4.38 　位运算符　　072
4.39 　赋值运算符　　072
4.40 　算术赋值运算符　　073
4.41 　条件运算符（三目运算符）　　073
4.42 　typeof运算符　　073
4.43 　new运算符　　074
4.44 　delete运算符　　074
4.45 　void运算符　　074
4.46 　逗号（,）运算符　　074
4.47 　点运算符和中括号运算符　　075
4.48 　函数调用运算符　　075
4.49 　运算符使用以及数据类型转换中需要注意的地方075
第5章 　变量与对象　　076
5.1 　变量的声明　　076
5.2 　变量与引用　　076
5.2.1 　函数的参数（值的传递）　　078
5.2.2 　字符串与引用　　079
5.2.3 　对象与引用相关的术语总结　　079
5.3 　变量与属性　　080
5.4 　变量的查找　　081
5.5 　对变量是否存在的检验　　081
5.6 　对象的定义　　082
5.6.1 　抽象数据类型与面向对象　　082
5.6.2 　实例间的协作关系与面向对象　　083
5.6.3 　JavaScript的对象　　083
5.7 　对象的生成　　083
5.7.1 　对象字面量　　083
5.7.2 　构造函数与new表达式　　085
5.7.3 　构造函数与类的定义　　087
5.8 　属性的访问　　087
5.8.1 　属性值的更新　　088
5.8.2 　点运算符与中括号运算符在使用上的区别　　088
5.8.3 　属性的枚举　　089
5.9 　作为关联数组的对象　　089
5.9.1 　关联数组　　089
5.9.2 　作为关联数组的对象的注意点　　090
5.10 　属性的属性　　091
5.11 　垃圾回收　　092
5.12 　不可变对象　　092
5.12.1 　不可变对象的定义　　092
5.12.2 　不可变对象的作用　　092
5.12.3 　实现不可变对象的方式　　093
5.13 　方法　　094
5.14 　this引用　　094
5.14.1 　this引用的规则　　094
5.14.2 　this引用的注意点　　095
5.15 　apply与call　　096
5.16 　原型继承　　097
5.16.1 　原型链　　097
5.16.2 　原型链的具体示例　　099
5.16.3 　原型继承与类　　100
5.16.4 　对于原型链的常见误解以及_proto_属性　　100
5.16.5 　原型对象　　101
5.16.6 　ECMAScript第5版与原型对象　　101
5.17 　对象与数据类型　　102
5.17.1 　数据类型判定（constructor属性）　　102
5.17.2 　constructor属性的注意点　　102
5.17.3 　数据类型判定（instance运算与isPrototypeOf方法）　　103
5.17.4 　数据类型判定（鸭子类型）　　103
5.17.5 　属性的枚举（原型继承的相关问题）　　104
5.18 　ECMAScript第5版中的Object类　　105
5.18.1 　属性对象　　105
5.18.2 　访问器的属性　　106
5.19 　标准对象　　108
5.20 　Object类　　108
5.21 　全局对象　　110
5.21.1 　全局对象与全局变量　　110
5.21.2 　Math对象　　111
5.21.3 　Error对象　　112
第6章 　函数与闭包　　113
6.1 　函数声明语句与匿名函数表达式　　113
6.2 　函数调用的分类　　113
6.3 　参数与局部变量　　114
6.3.1 　arguments对象　　114
6.3.2 　递归函数　　114
6.4 　作用域　　115
6.4.1 　浏览器与作用域　　116
6.4.2 　块级作用域　　116
6.4.3 　let与块级作用域　　117
6.4.4 　嵌套函数与作用域　　119
6.4.5 　变量隐藏　　119
6.5 　函数是一种对象　　120
6.6 　Function类　　122
6.7 　嵌套函数声明与闭包　　123
6.7.1 　对闭包的初步认识　　123
6.7.2 　闭包的原理　　123
6.7.3 　闭包中需要注意的地方　　126
6.7.4 　防范命名空间的污染　　127
6.7.5 　闭包与类　　129
6.8 　回调函数设计模式　　130
6.8.1 　回调函数与控制反转　　130
6.8.2 　JavaScript与回调函数　　131
第7章 　数据处理　　134
7.1 　数组　　134
7.1.1 　JavaScript的数组　　134
7.1.2 　数组元素的访问　　135
7.1.3 　数组的长度　　136
7.1.4 　数组元素的枚举　　136
7.1.5 　多维数组　　137
7.1.6 　数组是一种对象　　138
7.1.7 　Array类　　139
7.1.8 　数组对象的意义　　140
7.1.9 　数组的习惯用法　　141
7.1.10 　数组的内部实现　　144
7.1.11 　数组风格的对象　　145
7.1.12 　迭代器　　145
7.1.13 　生成器　　147
7.1.14 　数组的内包　　149
7.2 　JSON　　149
7.2.1 　JSON字符串　　149
7.2.2 　JSON对象　　150
7.3 　日期处理　　151
7.4 　正则表达式　　153
7.4.1 　正则表达式的定义　　153
7.4.2 　正则表达式相关的术语　　154
7.4.3 　正则表达式的语法　　154
7.4.4 　JavaScript中的正则表达式156
7.4.5 　正则表达式程序设计　　157
7.4.6 　字符串对象与正则表达式对象　　158
第3部分　客户端JavaScript　　161
第8章 　客户端JavaScript与HTML　　162
8.1 　客户端JavaScript的重要性　　162
8.1.1 　Web应用程序的发展　　162
8.1.2 　JavaScript的性能提升　　162
8.1.3 　JavaScript的作用　　163
8.2 　HTML与JavaScript　　163
8.2.1 　网页显示过程中的处理流程　　163
8.2.2 　JavaScript的表述方式及其执行流程　　163
8.2.3 　执行流程的小结　　166
8.3 　运行环境与开发环境　　166
8.3.1 　运行环境　　166
8.3.2 　开发环境　　166
8.4 　调试　　167
8.4.1 　alert　　167
8.4.2 　console　　167
8.4.3 　onerror　　169
8.4.4 　Firebug, Web Inspector (Developer Tools), Opera Dragonfly　　169
8.5 　跨浏览器支持　　171
8.5.1 　应当提供支持的浏览器　　171
8.5.2 　实现方法　　172
8.6 　Window对象　　174
8.6.1 　Navigator对象　　174
8.6.2 　Location对象　　174
8.6.3 　History对象　　175
8.6.4 　Screen对象　　176
8.6.5 　对Window对象的引用　　176
8.6.6 　Document对象　　176
第９章 　DOM　　177
9.1 　DOM的定义　　177
9.1.1 　DOM Level 1　　177
9.1.2 　DOM Level 2　　177
9.1.3 　DOM Level 3　　178
9.1.4 　DOM的表述方式　　178
9.2 　DOM的基础　　179
9.2.1 　标签、元素、节点　　179
9.2.2 　DOM操作　　179
9.2.3 　Document对象　　179
9.3 　节点的选择　　180
9.3.1 　通过ID检索　　180
9.3.2 　通过标签名检索　　180
9.3.3 　通过名称检索　　184
9.3.4 　通过类名检索　　184
9.3.5 　父节点、子节点、兄弟节点　　185
9.3.6 　XPath　　187
9.3.7 　Selector 　API　　189
9.4 　节点的创建与新增　　190
9.5 　节点的内容更改　　190
9.6 　节点的删除　　190
9.7 　innerHTML/textContent　　190
9.7.1 　innerHTML　　190
9.7.2 　textContent　　191
9.8 　DOM操作的性能　　191
第10章 　事件　　192
10.1 　事件驱动程序设计　　192
10.2 　事件处理程序/事件侦听器的设定　　192
10.2.1 　指定为HTML元素的属性193
10.2.2 　指定为DOM元素的属性　　194
10.2.3 　通过EventTarget.addEventListener()进行指定　　194
10.2.4 　事件处理程序/事件侦听器内的this引用　　196
10.3 　事件的触发　　196
10.4 　事件的传播　　196
10.4.1 　捕获阶段　　197
10.4.2 　目标阶段　　197
10.4.3 　事件冒泡阶段　　197
10.4.4 　取消　　197
10.5 　事件所具有的元素　　198
10.6 　标准事件　　199
10.6.1 　DOM Level 2中所定义的事件　　199
10.6.2 　DOM Level 3中所定义的事件　　200
10.7 　自定义事件　　202
第11章 　客户端JavaScript实践　　203
11.1 　样式　　203
11.1.1 　样式的变更方法　　203
11.1.2 　位置的设定　　207
11.1.3 　位置　　208
11.1.4 　动画　　209
11.2 　AJAX　　210
11.2.1 　异步处理的优点　　210
11.2.2 　XMLHttpRequest　　210
11.2.3 　基本的处理流程　　210
11.2.4 　同步通信　　212
11.2.5 　超时　　212
11.2.6 　响应　　213
11.2.7 　跨源限制　　214
11.2.8 　跨源通信　　214
11.2.9 　JSONP　　214
11.2.10 　iframe攻击（iframe hack）　　215
11.2.11 　window.postMessage218
11.2.12 　XMLHttpRequest Level 2　　219
11.2.13 　跨源通信的安全问题　　219
11.3 　表单　　219
11.3.1 　表单元素　　219
11.3.2 　表单控件　　221
11.3.3 　内容验证　　221
11.3.4 　可用于验证的事件　　222
11.3.5 　使用表单而不产生页面跳转的方法　　222
第12章 　库　　224
12.1 　使用库的原因　　224
12.2 　jQuery的特征　　224
12.3 　jQuery的基本概念　　225
12.3.1 　使用实例　　225
12.3.2 　链式语法　　226
12.4 　$函数　　227
12.4.1 　抽取与选择器相匹配的元素　　227
12.4.2 　创建新的DOM元素　　227
12.4.3 　将已有的DOM元素转换为jQuery对象　　227
12.4.4 　对DOM构造完成后的事件侦听器进行设定　　227
12.5 　通过jQuery进行DOM操作　　228
12.5.1 　元素的选择　　228
12.5.2 　元素的创建·添加·替换·删除　　230
12.6 　通过jQuery处理事件　　231
12.6.1 　事件侦听器的注册·删除　　231
12.6.2 　事件专用的事件侦听器注册方法　　232
12.6.3 　ready()方法　　232
12.7 　通过jQuery对样式进行操作　　233
12.7.1 　基本的样式操作　　233
12.7.2 　动画　　234
12.8 　通过jQuery进行AJAX操作　　235
12.8.1 　AJAX()函数　　235
12.8.2 　AJAX()的包装函数　　236
12.8.3 　全局事件　　237
12.9 　Deferred　　237
12.9.1 　Deferred的基本概念　　237
12.9.2 　状态迁移　　238
12.9.3 　后续函数　　239
12.9.4 　并行处理　　241
12.10 　jQuery插件　　241
12.10.1 　使用jQuery插件　　241
12.10.2 　创建jQuery插件　　242
12.11 　与其他库共同使用　　243
12.11.1 　$对象的冲突　　243
12.11.2 　避免$对象的冲突　　243
12.12 　库的使用方法　　244
第13章 　HTML5概要　　272
13.1 　HTML5的历史　　246
13.2 　HTML5的现状　　247
13.2.1 　浏览器的支持情况　　247
13.2.2 　Web应用程序与原生应用程序　　248
13.3 　HTML5的概要　　248
第14章 　Web应用程序　　250
14.1 　History API　　250
14.1.1 　History API的定义　　250
14.1.2 　哈希片段　　250
14.1.3 　接口　　251
14.2 　ApplicationCache　　255
14.2.1 　关于缓存管理　　255
14.2.2 　缓存清单文件　　255
14.2.3 　ApplicationCache 　API　　258
14.2.4 　在线与离线　　259
第15章 　与桌面应用的协作　　260
15.1 　Drag Drop API　　260
15.1.1 　Drag Drop API的定义260
HTML5　　245
第4部分　HTML5　　245
15.1.2 　接口　　261
15.1.3 　基本的拖动与释放　　262
15.1.4 　自定义显示　　263
15.1.5 　文件的Drag-In/ Drag-Out　　265
15.2 　File API　　267
15.2.1 　File API的定义　　267
15.2.2 　File对象　　267
15.2.3 　FileReader　　269
15.2.4 　data URL　　271
15.2.5 　FileReaderSync　　273
第16章 　存储　　274
16.1 　Web Storage　　274
16.1.1 　Web Storage的定义　　274
16.1.2 　基本操作　　275
16.1.3 　storage事件　　277
16.1.4 　关于Cookie　　277
16.1.5 　命名空间的管理　　278
16.1.6 　版本的管理　　279
16.1.7 　对localStorage的模拟279
16.2 　Indexed Database　　280
16.2.1 　Indexed Database的定义　　280
16.2.2 　基础架构　　280
16.2.3 　连接数据库　　281
16.2.4 　对象存储的创建　　281
16.2.5 　数据的添加·删除·引用　　282
16.2.6 　索引的创建　　283
16.2.7 　数据的检索与更新　　284
16.2.8 　数据的排序　　285
16.2.9 　事务　　285
16.2.10 　同步API　　286
第17章 　WebSocket　　287
17.1 　WebSocket概要　　287
17.1.1 　WebSocket的定义　　287
17.1.2 　现有的通信技术　　287
17.1.3 　WebSocket的标准　　290
17.1.4 　WebSocket的执行方式　　290
17.2 　基本操作　　291
17.2.1 　连接的建立　　291
17.2.2 　消息的收发　　291
17.2.3 　连接的切断　　292
17.2.4 　连接的状态确认　　292
17.2.5 　二进制数据的收发　　293
17.2.6 　WebSocket实例的属性一览　　293
17.3 　WebSocket实践　　294
17.3.1 　Node.js的安装　　294
17.3.2 　服务器端的实现　　295
17.3.3 　客户端的实现　　295
17.3.4 　客户端的实现2　　296
第18章 　Web Workers　　298
18.1 　Web Workers概要　　298
18.1.1 　Web Workers的定义　　298
18.1.2 　Web Workers的执行方式　　298
18.2 　基本操作　　299
18.2.1 　工作线程的创建　　299
18.2.2 　主线程一侧的消息收发　　299
18.2.3 　工作线程一侧的消息收发　　300
18.2.4 　工作线程的删除　　300
18.2.5 　外部文件的读取　　301
18.3 　Web 　Worker实践　　301
18.3.1 　工作线程的使用　　301
18.3.2 　中断对工作线程的处理　　302
18.4 　共享工作线程　　304
18.4.1 　共享工作线程的定义　　304
18.4.2 　共享工作线程的创建　　304
18.4.3 　共享工作线程的消息收发　　305
18.4.4 　共享工作线程的删除　　306
18.4.5 　共享工作线程的应用实例　　306
第5部分　Web API　　309
第19章 　Web API的基础 　310
19.1 　Web API与Web服务　　310
19.2 　Web API的历史　　311
19.2.1 　Web抓取　　311
19.2.2 　语义网　　311
19.2.3 　XML　　311
19.2.4 　Atom　　312
19.2.5 　JSON　　312
19.2.6 　SOAP　　313
19.2.7 　REST　　313
19.2.8 　简单总结　　313
19.3 　Web API的组成　　314
19.3.1 　Web API的形式　　314
19.3.2 　Web API的使用　　315
19.3.3 　RESTful API　　315
19.3.4 　API密钥　　316
19.4 　用户验证与授权　　317
19.4.1 　Web应用程序的会话管理　　317
19.4.2 　会话管理与用户验证　　318
19.4.3 　Web API与权限　　319
19.4.4 　验证与授权　　320
19.4.5 　OAuth　　321
第20章 　Web API的实例 　323
20.1 　Web API的分类　　323
20.2 　Google Translate API　　324
20.2.1 　准备　　325
20.2.2 　执行方式的概要　　325
20.2.3 　使用了Web API的代码示例　　326
20.2.4 　微件（Google Translate Element）　　327
20.3 　Google Maps API　　328
20.3.1 　Google Static Maps API　　328
20.3.2 　我的地图　　329
20.3.3 　Google Maps API的概要　　330
20.3.4 　简单的Google Maps API示例　　330
20.3.5 　事件　　331
20.3.6 　Geolocation API与Geocoding API　　333
20.4 　Yahoo! Flickr　　334
20.4.1 　Flickr Web API的使用　　335
20.4.2 　Flickr Web API的使用实例　　336
20.5 　Twitter　　337
20.5.1 　搜索API　　337
20.5.2 　REST API　　338
20.5.3 　Twitter JS API @anywhere　　339
20.5.4 　Twitter Widget　　341
20.6 　Facebook　　341
20.6.1 　Facebook应用的发展历程　　341
20.6.2 　Facebook的JavaScript 　API　　343
20.6.3 　Facebook的插件　　344
20.7 　OpenSocial　　345
第6部分　服务器端　JavaScript　　351
第21章 　服务器端JavaScript与Node.js　　352
21.1 　服务器端JavaScript的动向　　352
21.2 　CommonJS　　352
21.2.1 　CommonJS的定义　　352
21.2.2 　CommonJS的动向　　353
21.2.3 　模块功能　　353
21.3 　Node.js　　355
21.3.1 　Node.js概要　　355
21.3.2 　node指令　　359
21.3.3 　npm与包　　359
21.3.4 　console模块　　360
21.3.5 　util模块　　361
21.3.6 　process对象　　362
21.3.7 　全局对象　　363
21.3.8 　Node.js程序设计概要　　363
21.3.9 　事件API　　365
21.3.10 　缓冲　　369
21.3.11 　流　　372
第22章 　Node.js程序设计实践　　374
22.1 　HTTP服务器处理　　374
22.1.1 　HTTP服务器处理的基本流程　　374
22.1.2 　请求处理　　375
22.1.3 　响应处理　　376
22.1.4 　POST请求处理　　377
22.2 　HTTP客户端处理　　378
22.3 　HTTPS处理　　379
22.3.1 　通过openssl指令发布自签名证书的方法　　379
22.3.2 　HTTPS服务器　　379
22.4 　Socket.IO与WebSocket　　380
22.5 　下层网络程序设计　　381
22.5.1 　下层网络处理　　381
22.5.2 　套接字的定义　　382
22.5.3 　套接字程序设计的基本结构　　382
22.5.4 　套接字程序设计的具体实例　　384
22.6 　文件处理　　385
22.6.1 　本节的范例代码　　385
22.6.2 　文件的异步处理　　386
22.6.3 　文件的同步处理　　386
22.6.4 　文件操作相关函数　　387
22.6.5 　文件读取　　387
22.6.6 　文件写入　　388
22.6.7 　目录操作　　389
22.6.8 　对文件更改的监视　　390
22.6.9 　文件路径　　390
22.7 　定时器　　390
22.8 　Express　　391
22.8.1 　URL路由　　392
22.8.2 　请求处理　　392
22.8.3 　响应处理　　393
22.8.4 　scaffold创建功能　　393
22.8.5 　MVC架构　　393
22.8.6 　模板语言Jade　　394
22.8.7 　MongoDB（数据库）　　395
22.8.8 　Mongoose的实例　　397
22.8.9 　使用了Express与Mongoose的Web应用程序　　398
后记　　401
索引　　403
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript编程全解
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node即学即用
目录
第一部分 　基础入门
第1 章 　Node.js 简介　　3
1.1 　安装Node.js　　4
1.2 　开始写代码　　7
1.2.1 　Node REPL　　7
1.2.2 　编写首个服务器程序　　9
1.3 　为什么选择Node　　11
1.3.1 　高性能Web 服务器　　11
1.3.2 　专业的JavaScript　　12
1.3.3 　浏览器之战 2.0　　13
第2 章 　编写有趣的应用　　15
2.1 　创建一个聊天服务器　　15
2.2 　我们也来编写个Twitter　　23
第3 章 　编写健壮的Node 程序　　33
3.1 　事件循环　　33
3.2 　模式　　39
3.3 　编写产品代码　　44
3.3.1 　差错处理　　45
3.3.2 　使用多处理器　　46
第二部分 　API 和常用模块
第4 章 　核心API　　55
4.1 　Events　　55
4.1.1 　EventEmitter　　56
4.1.2 　Callback 语法　　57
4.2 　HTTP　　59
4.2.1 　HTTP 服务器　　59
4.2.2 　HTTP 客户端　　61
4.2.3 　URL　　65
4.2.4 　querystring　　67
4.3 　I/O　　68
4.3.1 　数据流（stream）　　68
4.3.2 　文件系统　　69
4.3.3 　Buffer　　70
4.3.4 　console.log　　76
第5 章 　工具类API　　77
5.1 　DNS　　77
5.2 　加密　　79
5.2.1 　Hashing　　79
5.2.2 　HMAC　　81
5.2.3 　公钥加密　　82
5.3 　进程　　86
5.3.1 　process 模块　　87
5.3.2 　子进程　　95
5.4 　用assert 来测试　　101
5.5 　虚拟机　　104
第6 章 　数据访问　　109
6.1 　NoSQL 和文档存储　　109
6.1.1 　CouchDB　　109
6.1.2 　Redis　　117
6.1.3 　MongoDB　　25
6.2 　关系型数据库　　129
6.2.1 　MySQL　　129
6.2.2 　PostgreSQL　　136
6.3 　连接池　　139
6.4 　消息队列协议　　141
第7 章 　重要的外部模块　　147
7.1 　Express　　147
7.1.1 　一个简单的Express 应用　　147
7.1.2 　在Express 中设置路由　　148
7.1.3 　处理表单数据　　153
7.1.4 　模板引擎　　154
7.1.5 　中间件　　158
7.2 　Socket.IO　　161
7.2.1 　命名空间　　163
7.2.2 　Express 中使用Socket.IO　　165
第8 章 　扩展Node　　171
8.1 　模块　　171
8.2 　包管理　　172
8.2.1 　搜索包　　172
8.2.2 　创建包　　172
8.2.3 　发布包　　173
8.2.4 　链接　　173
8.3 　附加组件　　174
词汇表　　175
索引　　176
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node即学即用
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript入门经典
第1章 JavaScript与Web概述
1.1 JavaScript简介
1.1.1.JavaScIjpt的含义
1.1.2 JavaScript与Web
1.1.3 为什么选择JavaScript
1.1.4 JavaScript的功能
1.1.5 创建JavaScript Web应用程序所需的工具
1.2 脚本的使用场合
1.2.1 链接外部JavaScript文件
1.2.2 使用外部文件的优点
1.3 第一个简单的JavaScript程序
1.4 浏览器以及兼容性问题
1.5 小结
第2章 数据类型与变量
2.1 JavaScript中的数据类型
2.1.1 数值数据
2.1.2 文本数据
2.1.3 布尔数据
2.2 变量——保存在内存中的数据
2.2.1 创建变量并赋值
2.2.2 用其他变量的值为变量赋值
2.3 使用数据——计算数值及基本字符串操作
2.3.1 数值计算
2.3.2 运算符的优先级
2.3.3 基本的字符串操作
2.3.4 字符串与数值的混合操作
2.4 数据类型转换
2.5 数组
2.6 小结
2.7 习题
第3章 决策、循环和函数
3.1 决策语句——if和switch语句
3.1.1 比较运算符
3.1.2 if语句
3.1.3 逻辑运算符
3.1.4 在if语句中使用多个条件
3.1.5 else和else if
3.1.6 字符串的比较
3.1.7 switch语句
3.2 循环——for语句和while语句
3.2.1 for循环
3.2.2 for…in循环
3.2.3 while循环.
3.2.4 do…while循环
3.2.5 break和continue语句
3.3 函数
3.3.1 创建自定义函数
3.3.2 变量的作用域和生存期
3.4 小结
3.5 习题
第4章 常见错误、调试和错误处理
4.1 一些常见错误
4.1.1 未经定义的变量
4.1.2 区分大小写
4.1.3 不匹配的大括号
4.1.4 不匹配的圆括号
4.1.5 赋值而不是相等
4.1.6 将方法和属性混为一谈
4.1.7 在连接字符串时未使用加号(+)
4.2 错误处理
4.2.1 避免错误
4.2.2 try…catch语句
4.3 调试
4.3.1 在Firefox中用Firebug调试
4.3.2 在Intemet Explorer中调试
4.3.3 在Safari中调试
4.3.4 使用Opera的开发工具Dragonfly
4.4 小结
4.5 习题
第5章 JavaScript——基于对象的语言
5.1 基于对象的程序设计
5.1.1 对象的含义
5.1.2 JavaScript中的对象
5.1.3 使用JavaScript对象
5.1.4 基本数据类型与对象
5.2 JavaScript的内置对象类型
5.2.1 String对象
5.2.2 Array对象
5.2.3 Array的新方法
5.2.4 Math对象
5.2.5 Number对象
5.2.6 toFixed()方法
5.2.7 Date对象
5.3 创建对象的新类型(引用类型)
5.4 小结
5.5 习题
第6章 浏览器程序设计
6.1 浏览器对象简介
6.1.1 window对象
6.1.2 history对象
6.1.3 locmion对象
6.1.4 navigator对象
6.1.5 screen对象
6.1.6 document对象
6.1.7 使用document对象
6.1.8 images集合
6.1.9 links集合
6.2 用事件响应用户的操作
6.2.1 事件的含义
6.2.2 将代码连接到事件
6.2.3 确定用户的浏览器
6.3 小结
6.4 习题
第7章 HTML表单与用户交互
7.1 HTML表单
7.2 FOITII对象的其他属性和方法
7.2.1 表单中的HTMI.。元素
7.2.2 共有的属性和方法
7.2.3 按钮元素
7.2.4 文本元素
7.2.5 textarea元素
7.2.6 复选框和单选按钮
7.2.7 选择框
7.3 小结
7.4 习题
第8章 窗口和框架
8.1 框架和窗口对象
8.1.1 在框架之间编写代码
8.1.2 框架之间的代码访问
8.2 打开新窗口
8.2.1 打开新的浏览器窗口
8.2.2 窗口之间的脚本编程
8.2.3 移动窗口并重置其大小
8.3 安全性
8.4 小结
8.5 习题
……
第9章 字符串操作
第10章 日期、时间和计时器
第11章 使用Cookie存储信息
第12章 动态HTML和W3C文档对象模型
第13章 在JavaScript中使用ActiveX和插件
第14章 Ajax
第15章 JavaScript框架
附录
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript入门经典
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript入门经典
第一部分  Web脚本编写与JavaScript语言的概念  第1章  了解JavaScript  第2章  创建简单的脚本  第3章  开始JavaScript编程  第4章  使用文档对象模型(DOM) 第二部分  学习JavaScript基础  第5章  使用变量、字符串和数组  第6章  使用函数和对象  第7章  用条件和循环控制流程  第8章  使用内置函数和程序库    第三部分  深人学习DOM  第9章   事件响应  第10章  使用窗口和框架  第11章  利用表单获取数据  第12章  使用样式表  第13章  使用W3C的DOM  第14章  使用高级DOM功能第四部分  使用JavaScript的高级功能  第15章  编写规范型脚本  第16章  调试JavaScript应用程序  第17章  AJAX远程脚本技术  第18章  Greasemonkey使用JavaScript增强页面功能    第五部分  使用JavaScript创建多媒体应用程序  第19章  使用图像和动画  第20章  使用声音和插件    第六部分  创建复杂脚本  第21章  创建JavaScript下拉菜单  第22章  创建JavaScdpt游戏  第23章  创建JavaScript应用程序  第24章  JavaScript的未来    第七部分  附录  附录A  其他JavaScript资源  附录B  JavaScript开发人员工具  附录C  术语表  附录D  JavaScript快速参考  附录E  DOM快速参考
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript入门经典
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript核心技术
前言
第1章　JavaScript初探
1.1　规范和实现相互交织的历史
1.2　跨浏览器的不兼容性和其他常见的JavaScript传说
1.3　你能用JavaScript来做什么
1.4　JavaScript初探：“HelloWorld！”
1.5　JavaScript沙箱
1.6　可访问性和JavaScript的最佳实践
第2章　JavaScript数据类型与变量
2.1　变量的标识
2.2　作用域
2.3　简单类型
2.4　常量：有名称但不改变
2.5　习题
第3章　运算符和语句
3.1　JavaScript语句的格式
3.2　简单语句
3.3　条件语句和程序流
3.4　条件运算符
3.5　逻辑运算符
3.6　高级语句：循环语句
3.7　习题
第4章　JavaScript对象
4.1　对象构造函数
4.2　Number对象
4.3　String对象
4.4　正则表达式与RegExp
4.5　有专门用途的对象：Date和Math
4.6　JavaScript数组
4.7　关联数组：不是数组的数组
4.8　习题
第5章　函数
5.1　定义函数：细数所有方式
5.2　回调函数
5.3　函数和递归
5.4　嵌套函数、函数闭包和内存泄漏
5.5　作为对象的函数
5.6　习题
第6章　捕捉事件
6.1　O级DOM上的事件句柄
6.2　2级DOM上的事件句柄
6.3　产生事件
6.4　习题
第7章　表单与即时验证
7.1　访问表单
7.2　把事件附加在表单上：不同的方法
7.3　选择列表
7.4　单选按钮和复选框
7.5　输入字段和JiT正则表达式
7.6　习题
第8章　沙箱及之上的cookie、连通性和隐私
第9章　基础浏览器对象
第10章　DOM：文档对象模型
第11章　创建定制的JavaScript对象
第12章　构建动态网页：在脚本中加入样式
第13章　使用Ajax
第14章　好消息：生动的程序库！令人惊异的Web服务！有趣的API！
附录　习题答案
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript核心技术
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通JavaScript+jQuery
第1部分  JavaScript、CSS与DOM基础篇第1章  JavaScript  1.1  JavaScript的起源  1.2  浏览器之争    1.2.1  DHTML    1.2.2  浏览器之间的冲突    1.2.3  标准的制定  1.3  JavaScript的实现    1.3.1  ECMAScript    1.3.2  DUM    1.3.3  BOM    1.3.4  新的开始  1.4  Web标准    1.4.1  Web标准概述    1.4.2  结构、表现和行为的分离第2章  JavaScript基础  2.1  JavaScript的语法  2.2  变量  2.3  数据类型    2.3.1  字符串    2.3.2  数值  2.3.3  布尔型    2.3.4  类型转换    2.3.5  数组  2.4  关键字  2.5  保留字  2.6  条件语句    2.6.1  比较操作符    2.6.2  逻辑操作符    2.6.3  if语句    2.6.4  switch语句  2.7  循环语句    2.7.1  while语句    2.7.2  dowhile语句    2.7.3  for语句    2.7.4  break和continue语句    2.7.5  forin语句    2.7.6  实例：九九乘法表  2.8  函数    2.8.1  定义和调用函数    2.8.2  用arguments对象访问函数的参数    2.8.3   实例：杨辉三角  2.9  其他对象    2.9.1  对象简述    2.9.2  时间日期：Date对象    2.9.3  数学计算：Math对象  2.10  BOM基础  2.10.1  window对象  2.10.2  document对象  2.10.3  location对象  2.10.4  navigator对象  2.10.5  screen对象第3章  CSS基础  3.1  CSS的概念    3.1.1  标记的概念    3.1.2  传统HTML的缺点    3.1.3  CSS的引入    3.1.4  浏览器与CSS  3.2  使用CSS控制页面    3.2.1  行内样式  3.2.2   内嵌式    3.2.3  链接式    3.2.4  导入样式  3.3  CSS选择器    3.3.1  标记选择器    3.3.2  类别选择器    3.3.3  ID选择器    3.3.4  选择器集体声明    3.3.5  选择器的嵌套    3.3.6  子选择器    3.3.7  属性选择器  3.4  CSS设置文字效果    3.4.1  CSS文字样式    3.4.2  CSS段落文字    3.4.3  首字放大  3.5  CSS设置图片效果    3.5.1  图片的边框    3.5.2  图文混排  3.6  CSS设置页面背景    3.6.1  背景颜色    3.6.2  背景图片    3.6.3  背景图的重复    3.6.4  背景样式综合设置  3.7  CSS设置超链接效果  3.8  CSS制作实用菜单    3.8.1  项目列表    3.8.2  无需表格的菜单第4章  CSS进阶  4.1  <div>标记与<span>标记    4.1.1  概述    4.1.2  <div>与<span>的区别  4.2  盒子模型  4.3  元素的定位    4.3.1  float定位    4.3.2  position定位    4.3.3  z-index空间位置  4.4  CSS排版观念    4.4.1  将页面用div分块    4.4.2  设计各块的位置    4.4.3  用CSS定位  4.5  排版实例：我的博客    4.5.1  设计分析    4.5.2  排版构架    4.5.3  导航与Banner    4.5.4  左侧列表    4.5.5  内容部分    4.5.6  footer脚注    4.5.7  整体调整  4.6  JavaScript与CSS    4.6.1  颜色渐变的文字    4.6.2  鼠标文字跟随第5章  DOM模型  5.1  网页中的DOM模型框架  5.2  DOM模型中的节点    5.2.1  元素节点    5.2.2  文本节点    5.2.3  属性节点  5.3  使用DOM    5.3.1  访问节点    5.3.2  检测节点类型    5.3.3  利用父子兄关系查找节点    5.3.4  设置节点属性  5.3.5  创建和添加节点    5.3.6  删除节点    5.3.7  替换节点    5.3.8在特定节点前插入节点    5.3.9  在特定节点后插入节点  5.4  使用非标准DOM innerHTML属性  5.5  DOM与CSS    5.5.1  三位一体的页面    5.5.2  使用className属性第2部分  JavaScript、CSS、DOM第6章  事件  6.1  事件流    6.1.1  冒泡型事件    6.1.2  捕获型事件  6.2  事件监听    6.2.1  通用监听方法    6.2.2  IE中的监听方法    6.2.3  标准DOM的监听方法  6.3  事件对象  6.4  事件的类型    6.4.1  鼠标事件    6.4.2  键盘事件    6.4.3  HTML事件  6.5  实例1：屏蔽鼠标右键    6.5.1  方法1    6.5.2  方法2  6.6  实例2：伸缩的两级菜单    6.6.1  建立HTML框架    6.6.2  设置各级菜单的CSS样式风格    6.6.3  为菜单添加伸缩效果第7章  表格与表单  7.1  用CSS控制表格样式    7.1.1  理解表格的相关标记    7.1.2  设置表格的颜色    7.1.3  设置表格的边框  7.2  用DOM动态控制表格    7.2.1  动态添加表格    7.2.2  修改单元格内容    7.2.3  动态删除表格  7.3  控制表单    7.3.1  理解表单的相关标记与表单元素    7.3.2  用CSS控制表单样式    7.3.3  访问表单中的元素    7.3.4  公共属性与方法    7.3.5  提交表单  7.4  设置文本框    7.4.1  控制用户输入字符个数    7.4.2  设置鼠标经过时自动选择文本  7.5  设置单选按钮  7.6  设置复选框  7.7  设置下拉菜单    7.7.1  访问选中项    7.7.2  添加、替换、删除选项  7.8实例：自动提示的文本框    7.8.1  建立框架结构    7.8.2  实现匹配用户输入    7.8.3  显示提示框第8章  JavaScript的调试与优化第9章  Ajax第3部分  jQuery框架篇第10章  jQuery基础第11章  jQuery控制页面第12章  jQuery制作动画与特效第13章  jQuery的功能函数第14章  jQuery与Ajax第15章  jQuery插件第四部分  综合案例篇第16章  网络相册第17章  可自由拖动板块的页面第18章  时尚购物网站报价单第19章  图片切割器
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通JavaScript+jQuery
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript核心概念及实践
目　录
第1章  概述	1
1.1  JavaScript简史	1
1.1.1  动态网页	1
1.1.2  浏览器之战	2
1.2  JavaScript语言特性	3
1.2.1  动态性	3
1.2.2  弱类型	5
1.2.3  面向对象	6
1.2.4  解释与编译	7
1.3  JavaScript应用范围	7
1.3.1  客户端JavaScript	7
1.3.2  服务器端JavaScript	10
1.3.3  其他应用中的JavaScript	12
第2章  基本概念	16
2.1  数据类型	16
2.1.1  数据类型	16
2.1.2  对象类型	17
2.1.3  基本类型与对象间的转换	18
2.1.4  类型的判断	20
2.2  变量	21
2.2.1  基本类型和引用类型	21
2.2.2  变量的作用域	22
2.3  运算符	23
2.3.1  中括号运算符([])	23
2.3.2  点运算符(.)	24
2.3.3  相等与等同运算符	25
第3章  对象	28
3.1  JavaScript对象	28
3.1.1  对象的属性	29
3.1.2  属性与变量	29
3.1.3  原型对象及原型链	30
3.1.4  this指针	32
3.2  使用对象	33
3.3  对象字面量	34
3.4  JSON	36
第4章  函数	38
4.1  函数对象	38
4.1.1  创建函数	38
4.1.2  函数的参数	40
4.2  函数作用域	41
4.2.1  词法作用域	41
4.2.2  调用对象	43
4.3  函数上下文	44
4.4  call和apply	44
4.5  使用函数	45
4.5.1  赋值给一个变量	45
4.5.2  赋值为对象的属性	46
4.5.3  作为参数传递	46
4.5.4  作为函数的返回值	47
第5章  数组	48
5.1  数组的特性	48
5.2  使用数组	50
5.2.1  数组的基本方法使用	50
5.2.2  删除数组元素	53
5.2.3  遍历数组	55
第6章  正则表达式	57
6.1  正则表达式基础概念	57
6.1.1  元字符与特殊字符	58
6.1.2  范围及重复	58
6.1.3  分组与引用	61
6.2  使用正则表达式	62
6.2.1  创建正则表达式	62
6.2.2  String中的正则表达式	64
6.3  实例：JSFilter	65
第7章  闭包	67
7.1  闭包的特性	67
7.2  闭包的用途	69
7.2.1  匿名自执行函数	69
7.2.2  缓存	70
7.2.3  实现封装	71
7.3  应该注意的问题	72
7.3.1  内存泄漏	72
7.3.2  上下文的引用	73
第8章  面向对象的JavaScript	75
8.1  原型继承	75
8.1.1  引用	77
8.1.2  new操作符	78
8.2  封装	79
8.3  工具包Base	80
8.4  实例：事件分发器	83
第9章  函数式的JavaScript	92
9.1  匿名函数	93
9.2  高阶函数	93
9.2.1  JavaScript中的高阶函数	94
9.2.2  C语言中的高阶函数	95
9.2.3  Java中的高阶函数	96
9.3  闭包与柯里化	97
9.3.1  柯里化的概念	98
9.3.2  柯里化的应用	98
9.4  一些例子	99
9.4.1  函数式编程风格	99
9.4.2  Y-结合子	101
9.4.3  其他实例	103
第10章  核心概念深入	104
10.1  原型链	104
10.1.1  原型对象与原型链	104
10.1.2  构造器	107
10.2  执行期上下文	108
10.3  活动对象	111
10.4  作用域链	111
10.5  this值	113
10.5.1  词法作用域	113
10.5.2  this的上下文	114
第11章  客户端的JavaScript	116
11.1  客户端JavaScript执行环境	116
11.2  文档对象模型（DOM）	117
11.3  事件驱动模型	118
11.4  与服务器端交互（Ajax）	119
11.5  调试	122
11.5.1  FireFox	122
11.5.2  Chrome	124
11.6  客户端的MVC	126
11.7  JavaScript/Ajax框架	128
第12章  客户端的MVC框架：Backbone.js	130
12.1  Backbone背景简介	130
12.1.1  Backbone模型	131
12.1.2  Backbone集合	132
12.1.3  Backbone视图	133
12.1.4  Backbone路由	134
12.2  Backbone实例1：使用客户端本地存储	135
12.2.1  客户端存储	135
12.2.2  运行结果	136
12.2.3  数据模型	137
12.2.4  视图及模板	137
12.3  Backbone实例2：与服务器端交互	141
12.3.1  后台服务	141
12.3.2  客户端代码修改	142
第13章  JavaScript测试	144
13.1  单元测试框架QUnit	144
13.1.1  QUnit简介	144
13.1.2  QUnit示例	144
13.2  Jasmine	150
13.2.1  Jasmine基本概念	151
13.2.2  Jasmine的spy	155
13.2.3  Jasmine 实例	159
13.2.4  测试复杂的场景	162
第14章  JavaScript引擎	165
14.1  使用SpiderMonkey	165
14.1.1  SpiderMonkey简介	165
14.1.2  JavaScript对象与C对象间的转换关系	166
14.1.3  基本代码模板	167
14.1.4  执行JavaScript代码	170
14.1.5  C程序调用JavaScript函数	172
14.1.6  JavaScript程序调用C函数	173
14.1.7  在C程序中定义JavaScript对象	175
14.2  SpiderMonkey的实现简介	177
14.2.1  虚拟机概述	177
14.2.2  SpiderMonkey体系结构	177
14.2.3  jsval类型	178
14.2.4  对象	179
14.3  V8引擎概览	179
14.3.1  V8引擎基本概念	179
14.3.2  V8引擎使用示例	181
14.3.3  使用C++变量	181
14.3.4  调用C++函数	183
14.3.5  使用C++类	184
第15章  Java应用中的JavaScript	188
15.1  脚本化基础	188
15.2  使用Rhino引擎	189
15.2.1  直接对脚本求值	189
15.2.2  传递Java对象	190
15.2.3  调用脚本内的函数	191
15.2.4  在脚本中使用Java资源	193
15.2.5  实现Java接口	194
15.3  实例：sTodo	195
15.3.1  sTodo简介	195
15.3.2  sTodo的插件机制	197
15.3.3  sTodo中的脚本	199
15.4  实例：可编程计算器phoc	201
15.4.1  phoc简介	201
15.4.2  phoc中的脚本	203
第16章  服务器端的JavaScript	207
16.1  node.js	207
16.1.1  node.js简介	207
16.1.2  node.js 使用示例	208
16.1.3  node.js实例	211
16.1.4  使用Jasmine测试	215
16.2  CouchDB	217
16.2.1  CouchDB简介	217
16.2.2  CouchDB使用	218
16.2.3  CouchDB实例	220
16.3  MongoDB	227
16.3.1  基本操作	227
16.3.2  map/reduce	230
附录A  一些JavaScript技巧	232
A.1  创建对象	232
A.2  访问对象的属性	232
A.3  遍历对象	233
A.4  名称空间	234
附录B  前端JavaScript框架：jQuery	236
B.1  jQuery简介	236
B.2  jQuery基础	239
B.2.1   jQuery选择器	239
B.2.2  对DOM的操作	241
B.2.3  对CSS的操作	242
B.2.4  事件处理	244
B.2.5  实用函数	246
B.3  jQuery实例	247
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript核心概念及实践
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5游戏开发
第1 章   基础知识　　1
1.1  引言　　1
1.2  关键需求　　3
1.3  HTML5、CSS 和JavaScript 特性　　3
1.3.1  基本HTML 结构和标记　　4
1.3.2  JavaScript 编程　　9
1.4  构建自己的应用　　10
1.5  测试和上传应用　　16
1.6  小结　　16
第2 章  骰子游戏　　17
2.1  引言　　17
2.2  关键需求　　20
2.3  HTML5、CSS 和JavaScript 特性　　20
2.3.1  伪随机处理和数学表达式　　20
2.3.2  变量和赋值语句　　21
2.3.3  程序员自定义函数　　22
2.3.4  条件语句：if 和switch　　23
2.3.5  在画布上绘图　　25
2.4  构建自己的应用　　34
2.4.1  掷一个骰子　　35
2.4.2  掷两个骰子　　40
2.4.3  完整的craps 游戏　　44
2.5  测试和上传应用　　50
2.6  小结　　51
第3 章  弹跳球　　52
3.1  引言　　52
3.2  关键需求　　54
3.3  HTML5、CSS 和JavaScript 特性　　55
3.4  构建自己的应用　　64
3.5  测试和上传　　74
3.6  小结　　74
第4 章  炮弹和弹弓　　75
4.1  引言　　75
4.2  关键需求　　78
4.3  HTML5、CSS 和JavaScript 特性　　79
4.3.1  数组和程序员自定义对象　　79
4.3.2  绘图旋转和平移　　80
4.3.3  绘制线段　　84
4.3.4  拉弹弓的鼠标事件　　85
4.3.5  使用数组接合改变显示元素列表　　87
4.3.6  点之间的距离　　87
4.4  构建自己的应用　　88
4.4.1  有大炮、角度和速度的炮弹应用　　92
4.4.2  弹弓：使用鼠标设置飞行参数　　98
4.5  测试和上传应用　　106
4.6  小结　　106
第5 章  记忆力（注意力）游戏　　107
5.1  引言　　107
5.2  关键需求　　111
5.3  HTML5、CSS 和JavaScript 特性　　112
5.3.1  表示扑克牌　　112
5.3.2  使用Date 确定时间　　113
5.3.3  提供暂停　　114
5.3.4  绘制文本　　114
5.3.5  绘制多边形　　116
5.3.6  洗牌　　117
5.3.7  单击牌的实现　　118
5.3.8  防止某些作弊行为　　119
5.4  构建自己的应用　　119
5.5  测试和上传应用　　132
5.6  小结　　132
第6 章  猜谜游戏　　133
6.1  引言　　133
6.2  关键需求　　137
6.3  HTML5、CSS 和JavaScript 特性　　138
6.3.1  存储和获取数组信息　　138
6.3.2  程序执行时创建HTML　　140
6.3.3  使用JavaScript 代码修改CSS来改变元素　　142
6.3.4  使用form 和input 元素的文本反馈　　144
6.3.5  表现视频　　144
6.4  构建自己的应用　　146
6.5  测试和上传应用　　157
6.6  小结　　157
第7 章  迷宫　　158
7.1  引言　　158
7.2  关键需求　　162
7.3  HTML5、CSS 和JavaScript 特性　　162
7.3.1  墙和token 的表示　　163
7.3.2  建立和定位墙的鼠标事件　　163
7.3.3  检测箭头按键　　164
7.3.4  token 与墙的碰撞检测　　165
7.3.5  使用本地存储　　167
7.3.6  为本地存储编码数据　　172
7.3.7  单选按钮　　174
7.4  构建自己的应用　　174
7.5  测试和上传应用　　189
7.6  小结　　189
第8 章  石头剪刀布　　191
8.1  引言　　191
8.2  关键需求　　 194
8.3  HTML5、CSS 和JavaScript 特性　　 195
8.3.1  为玩家提供图片按钮　　 195
8.3.2  生成计算机动作　　 199
8.3.3  启动　　 206
8.4  构建自己的应用　　 206
8.5  测试和上传应用　　 212
8.6  小结　　 213
第9 章  上吊小人游戏　　 214
9.1  引言　　 214
9.2  关键需求　　 221
9.3  HTML5、CSS 和JavaScript 特性　　 222
9.3.1  将单词表存储为一个在外部脚本文件中定义的数组　　222
9.3.2  生成和定位HTML 标记，使标记作为按钮并禁用这些按钮　　223
9.3.3  在画布上逐步绘制　　225
9.3.4  维护游戏状态并确定输赢　　 226
9.3.5  检查猜测，设置textContent显示秘密词中的字母　　 227
9.4  构建自己的应用　　228
9.5  测试和上传应用　　236
9.6  小结　　 236
第10 章  黑桃J 　　 237
10.1  引言　　237
10.2  关键需求　　 242
10.3  HTML5、CSS 和JavaScript 特性　　 242
10.4  构建自己的应用　　 249
10.5  测试和上传应用　　 258
10.6  小结　　 258
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5游戏开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript学习指南
第1章　Hello JavaScript！
第2章　JavaScript数据类型和变量
第3章　操作符和语句
第4章　JavaScript对象
第5章　函数
第6章　排错、调试及跨浏览器问题
第7章　捕获事件
第8章　表单、表单事件及校验
第9章　浏览器就像个难题箱
第10章　cookie和其他客户端存储技术
第11章　DOM或以树形展示的Web页面
第12章　动态页面
第13章　创建自定义JavaScript对象
第14章　使用Ajax
第15章　Ajax数据：XML或JSON
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript学习指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript修炼之道
第一部分  JavaScript 必备操作
任务1  动态选择方法及属性　　 2
任务2  通过模块模式实现代码访问控制　　 4
任务3  使用可选/可变/命名参数　　 6
第二部分  DOM、事件及定时器
任务4  获得DOM元素的引用　　　10
任务5  动态修饰内容　　12
任务6  修改元素的内容　　 14
任务7  在DOM 加载完成后运行脚本　　16
任务8  监听及停止监听事件　　 18
任务9  利用事件委托　　20
任务10  将行为和自定义事件解耦　　22
任务11  模拟后台处理　　24
第三部分  UI 技巧
任务12  打造漂亮的tooltip　　28
任务13  制作友好的弹窗　　30
任务14  预载入图片　　32
任务15  创造光箱特效　　 34
任务16  实现“无限翻页” 　　36
任务17  在载入内容时保持显示区域　　38
第四部分  表单技巧
任务18  暂时禁用提交按钮　　 42
任务19  提供输入长度反馈　　44
任务20  同时选择或反选多个checkbox　　 46
任务21  表单验证：基本技巧　　48
任务22  表单验证：进阶技巧　　50
任务23  表单验证：高级技巧　　52
任务24  在表单中提供动态的帮助tooltip　　 54
任务25  自动完成输入　　 56
任务26  使用动态多文件上传　　 58
第五部分  服务器端技术
任务27  读取及写入cookie 　　 62
任务28  通过Ajax 载入内容（同域名）　　 64
任务29  使用JSON 　　 66
任务30  使用JSON-P　　 68
任务31  跨域“Ajax”（方法收集1） 　　 70
任务32  跨域“Ajax”（方法收集2） 　　72
第六部分  使用混搭
任务33  Twitter 的同步更新　　 76
任务34  Flickr 的同步更新　　 78
任务35  获得地理位置及该位置的照片　　 80
第七部分  附录
附录A  JavaScript 快速参考　　 84
附录B  JavaScript 调试指南　　 91
附录C  JavaScript 框架概览　　 104
附录D  求助指南　　112
参考文献　　117
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript修炼之道
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript 艺术与科学
前言	I
适用读者	I
内容组织	II
配套网站	III
代码存档	III
更新和勘误	III
SitePoint论坛	III
SitePoint新闻邮件	III
反馈	IV
规范	IV
代码样例	IV
提示、记录和警告	V
第1章　玩转表格	1
1.1　表格剖析	1
1.1.1  用getElementById访问表格元素	4
1.1.2  用getElementsByTagName访问表格元素	6
1.2  按列排序	7
1.2.1  让表格可排序	7
1.2.2  执行排序	12
1.3  创建可拖拽的列	24
1.3.1  让表格列可拖拽	25
1.3.2  不用鼠标也能拖拽表格列	37
1.4  小结	44
第2章  创建客户端Badge	45
2.1  Badge简介	46
2.1.1  Badge太多会坏事	46
2.1.2  现成的Badge	48
2.1.3  服务器端badge	50
2.1.4  自定义客户端Badge	51
2.2  客户端Badge的选择：Ajax和JSON	53
2.2.1  Ajax的问题	53
2.2.2  JSON：轻量的原生数据格式	54
2.2.3  提供连接失败的处理	58
2.3  规划badge脚本	59
2.4  完整的badge脚本	61
2.4.1  定义配置变量	63
2.4.2  定义公共方法	64
2.4.3  定义私有方法	67
2.5  请求服务器备份	72
2.6  小结	73
第3章  用canvas绘制向量图形	75
3.1  使用canvas	76
3.1.1  canvas API	77
3.1.2  了解向量图形	78
3.1.3  创建形状	79
3.2  创建饼图	98
3.2.1  绘制饼图	98
3.2.2  投射阴影	104
3.2.3  动态更新饼图	109
3.3  Internet Explorer中的canvas	115
3.4  小结	119
第4章  用Firebug进行调试和测定	121
4.1  安装并运行Firebug	122
4.1.1  安装Firefox和Firebug	122
4.1.2  Firebug初体验	123
4.1.3  打开、关闭Firebug，并调整其大小	124
4.1.4  启用和禁用Firebug	127
4.2  Firebug组成部分	127
4.2.1  公共组件	127
4.2.2  Firebug视图	128
4.2.3  切换视图	132
4.3  使用Firebug	133
4.3.1  执行快速应用开发	133
4.3.2  利用Console进行监控、记录日志和运行	134
4.3.3  实时查看和编辑	138
4.3.4  调试你的应用	140
4.3.5  优化你的应用性能	143
4.4  相关工具	145
4.4.1  Firebug Lite	145
4.4.2  YSlow	146
4.4.3  微软的工具	146
4.4.4  其他Firefox扩展	147
4.5  小结	147
第5章  用JavaScript进行元编程	149
5.1  基石	150
5.1.1 （几乎）所有东西都是哈希	150
5.1.2  在对象里查找和遍历属性	151
5.1.3  检测类型	152
5.1.4  JavaScript里面没有类	153
5.1.5  检测一个函数是否以new调用	154
5.1.6  函数就是对象	155
5.1.7  理解arguments数组	157
5.1.8  理解闭包	159
5.2  元编程技巧	164
5.2.1  创建带有默认参数的函数	164
5.2.2  处理内建函数及变量	165
5.2.3  创建自优化的函数	168
5.2.4  在鞋带上使用面向特征编程	171
5.2.5  用动态函数构建更好的API	172
5.2.6  创建动态的构造器	176
5.2.7  模拟传统的面向对象	178
5.3  小结	187
第6章  用CSS和JavaScript构建三维迷宫	189
6.1  基本原理	190
6.1.1  制作三角形	191
6.1.2  定义地面设计	193
6.1.3  创建透视效果	196
6.2  制作动态视图	198
6.2.1  核心方法	198
6.2.2  使用最后几手	208
6.2.3  该方法的局限性	209
6.3  创建地图视图	209
6.4  添加说明	212
6.5  地面设计	213
6.6  进一步开发	214
6.6.1  使用回调	214
6.6.2  无限的可能性	215
6.7  小结	216
第7章  Flickr和Google地图的混搭	217
7.1  API、混搭和小控件！天哪！	218
7.1.1  Flickr和Google地图	218
7.1.2  绘制地图	219
7.1.3  打上地理标签的照片	221
7.1.4  获取数据	222
7.2  JSON	223
7.2.1  同源限制	224
7.3  把它们放在一起	233
7.3.1  增强我们的小部件	238
7.3.2  把所有的放在一起	245
7.4  下一步	249
7.5  小结	250
索引	251
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript 艺术与科学
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>网页开发手记
目 录第1篇  HTML网页技术第1章  网页技术学前班第2章  网页制作的第一次接触第3章  HTML网页的整体设置第4章  HTML网页中的文字和段落第5章  HTML网页中的图片第6章  插入外部资源第7章  强大的表格第8章  和程序交互的利器——表单第9章  网页的框架页面第2篇  CSS网站布局与样式第10章  CSS的第一次接触第11章  CSS布局方法第12章  CSS网页元素设计第13章  CSS编写技巧第3篇  JavaScript动态行为第14章  JavaScript的第一次接触第15章  JavaScript程序基础知识第16章  JavaScript程序核心语法第17章  JavaScript核心对象第18章  浏览器对象模型第19章  文档对象模型第20章  事件响应第21章  JavaScript综合范例第4篇  网页制作综合实例第22章  制作个人网站第23章  制作门户网站附录A  HTML标记参考附录B  CSS属性列表附录C  JavaScript属性及方法列表
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>网页开发手记
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>计算机导论与JavaScript编程
《计算机导论与javascript编程:第3版》
第1章 计算机基础 1
1.1　什么是计算机 2
1.2　硬件 3
1.2.1　中央处理器(cpu) 4
1.2.2 存储器 6
1.2.3 输入/输出设备(i/o) 8
1.3 软件 9
1.4 因特网和万维网 12
1.4.1 web浏览器和服务器 14
1.4.2 web地址 14
1.4.3 访问本地网页 15
1.5 展望未来 15
本章小结 16
复习题 17
参考文献 18
第2章 html和网页 19
2.1 html基础知识 20
2.1.1 html标记 20
2.1.2 html元素 21
.2.2 文档格式化 22
2.2.1 文本间距 22
2.2.2 标题和对齐 23
2.2.3 字体格式化 25
2.3 超文本和多媒体 26
2.3.1 超链接 26
2.3.2 图像 27
2.4 列表 29
2.5 表格 32
2.5.1 表格边框 33
2.5.2 表格对齐 33
2.6 使网页可以公开访问 35
2.7 展望未来 35
本章小结 36
补充材料和练习 37
html标准 37
浏览器设置 38
背景色和图像 38
图像链接和视频 39
层叠样式表 40
第3章 因特网和万维网 41
3.1 因特网的历史 42
3.1.1 阿帕网(arpanet) 42
3.1.2 发展和私有化 43
3.2 因特网的工作原理 45
3.2.1 分布式网络 46
3.2.2 包交换技术 46
3.2.3 因特网协议：tcp/ip 47
3.2.4 域名 48
3.3 万维网的历史 49
3.3.1 超文本和万维网 50
3.3.2 万维网的大规模采纳 50
3.3.3 万维网的发展 52
3.4 万维网的工作原理 52
3.4.1 html 52
3.4.2 万维网协议：http 53
3.4.3 缓存技术 53
3.5 展望未来 54
本章小结 54
复习题 55
章后注 57
参考文献 57
第4章 javascript和动态网页 59
4.1 动态网页 59
4.1.1 html事件处理器 60
4.1.2 onclick事件处理器 63
4.2 和按钮交互 63
4.3 网页中的动态文本 66
4.3.1 警告窗口 66
4.3.2 innerhtml属性 67
4.3.3 示例：名人名言页 70
4.4 展望未来 71
本章小结 72
补充材料和练习 73
更改图片边框 73
相对大小 73
更改元素颜色 74
嵌套引号 75
第5章 javascript和用户交互 77
5.1 使用文本框进行输入/输出 77
5.1.1 文本框元素 78
5.1.2 套用信函网页 79
5.2 javascript变量 81
5.2.1 用变量实现值的重用 82
5.2.2 示例：故事填空 83
5.3.3 供临时值使用的变量 84
5.3 会计算的网页 85
5.3.1 javascript数字和表达式 86
5.3.2 数字的表示 87
5.3.3 文本框和parsefloat 88
5.3.4 成绩计算 90
5.4 编程错误和调试 91
5.5 展望未来 92
本章小结 92
补充材料和练习 93
用表格对齐元素 93
巩固表达式和赋值 94
深入混合表达式 95
用于输出的文本框 95
第6章 计算机的历史 97
6.1 第0代：机械计算机(1642—1945) 98
6.1.1 可编程设备 99
6.1.2 电磁式继电器 101
6.2 第1代：电子管(1945－1954) 102
6.2.1 计算机和第二次世界大战 103
6.2.2 冯·诺依曼体系结构 104
6.3　第2代：晶体管(1954—1963) 105
6.4 第3代：集成电路(1963—1973) 106
6.4.1　大规模集成电路 108
6.4.2 商用计算 109
6.5 第4代：vlsl(1973—1985) 109
6.5.1 个人计算机革命 110
6.5.2 面向对象编程 111
6.6 第5代：并行处理和网络
(1985—????) 111
6.7 展望未来 112
本章小结 113
复习题 114
章后注 115
参考文献 116
第7章 函数和随机性 117
7.1 预定义javascript函数 117
7.1.1 数学函数 118
7.1.2 乘幂 120
7.1.3 生成随机数 121
7.2 简单的用户自定义函数 123
7.3 网页中的随机性 126
7.3.1 示例：模拟掷骰子 126
7.3.2 示例：随机幻灯片放映 127
7.3.3 示例：随机横幅广告 128
7.4 展望未来 129
本章小结 130
补充材料和练习 131
用函数修改网页 131
关于数学函数的更多研究 131
onload和onunload属性 132
第8章 算法和编程语言 133
8.1 算法 134
8.2 设计和分析算法 135
8.2.1 替代算法 136
8.2.2 算法分析 137
8.2.3 大o表示法 138
8.3 算法实例：搜索列表 139
8.3.1 顺序搜索 139
8.3.2 二分搜索 140
8.3.3 算法分析 141
8.4 算法实例：近似平方根 141
8.5 算法和编程 143
8.5.1 机器语言 143
8.5.2　高级语言 144
8.5.3 程序翻译 145
8.5.4 解释器和和编译器 147
8.6 展望未来 148
本章小结 148
复习题 149
参考文献 150
第9章 抽象和库 153
9.1 函数的结构 154
9.2 带有输入的函数 156
9.3 返回值的函数 159
9.4 random.js库 162
9.5 展望未来 164
本章小结 165
补充材料和练习 166
更多用户自定义函数 166
巩固random.js 167
time.js库 168
第11章 作为一门学科的计算机科学 171
10.1 计算机“科学” 172
10.2 计算机科学的主题 173
10.2.1 硬件 174
10.2.2 软件 174
10.2.3 理论 175
10.3 计算机科学的分支 176
10.3.1 算法和数据结构 177
10.3.2 计算机的体系结构 178
10.3.3 操作系统和网络 180
10.3.4 软件工程 182
10.3.5 人工智能和机器人技术 183
10.3.6 生物信息学 184
10.4 计算机科学道德标准 185
展望未来 187
本章小结 187
复习题 188
章后注 189
参考文献 190
第11章 条件执行 191
11.1 if语句 191
11.2 嵌套if语句 195
11.3 示例：掷骰子 197
11.3.1 计数器 197
11.3.2 布尔表达式 200
11.4 示例：老虎机 201
11.5 展望未来 204
本章小结 204
补充材料和练习 205
关于嵌套if语句的更多练习 205
极端天气 207
示例：设计esp测试 208
示例：设计圆点赛跑 209
第12章 数据的表示 211
12.1 模拟与数字 212
12.2 二进制数 213
12.3 表示整数 214
12.4 表示实数 216
12.5 表示字符和字符串 217
12.6 表示其他类型的数据 219
12.6.1 声音 219
12.6.2 图像 221
12.6.3 电影 223
12.7 计算机怎样区别不同的数据类型 224
12.8 展望未来 225
本章小结 226
复习题 227
参考文献 228
第13章 条件重复 229
13.1 while循环 229
13.1.1 避免冗余 231
13.1.2 示例：彩票组合 233
13.2 计数器驱动的循环 235
13.3 变量和重复 238
13.4 示例：生成hailstone序列 240
13.5 展望未来 242
本章小结 242
补充材料和练习 243
循环的更多练习 243
更多掷骰子的例子 244
for循环 246
第14章 深入计算机——冯·诺依曼体系
结构 249
14.1 cpu子单元和数据通道 249
14.1.1 cpu子单元 250
14.1.2 cpu数据通道指令周期 250
14.1.3 数据通道模拟器 251
14.2 cpu和主存储器 253
14.2.1 与主存储器来回传输数据 253
14.2.2 模拟了存储器的数据通道 254
14.3 存储程序的计算机 256
14.3.1 机器语言 257
14.3.2 控制器 258
14.3.3 存储程序的计算机模拟器 259
14.3.4 输入/输出设备的作用 263
14.4 机器语言和汇编语言 264
14.5 展望未来 265
本章小结 266
复习题 267
参考文献 268
第15章 javascript字符串 269
15.1 字符串对象 269
15.2 通用的字符串操作方法 272
15.3 查找字符串 274
15.4 字符串操作和循环 276
15.5 示例：置换密码 278
15.5.1 编码消息 279
15.5.2 解码消息 282
15.6 展望未来 282
本章小结 283
补充材料和练习 283
关于字符串的更多练习 283
示例：置换电话号码 284
罗马数字 285
示例：旋转密码 285
math对象和文档对象 286
第16章 深入计算机——晶体管和
集成电路 289
16.1 电和开关 290
16.1.1 电学基础 290
16.1.2 开关 290
16.1.3 晶体管 291
16.1.4 晶体管开关 292
16.2 从晶体管到门电路 293
16.3 从门电路到复杂电路 295
16.4 从电路到微型芯片 299
16.4.1 集成电路 299
16.4.2 集成电路的制造 299
16.4.3 微型芯片的封装 301
16.5 展望未来 302
本章小结 302
复习题 304
参考文献 305
第17章 javascript数组 307
17.1 数组对象 308
17.1.1 访问数组元素 308
17.1.2 为一个数组内的元素赋值 309
17.2 从字符串到数组 311
17.2.1 字符串的split方法 311
17.2.2 示例：生成首字母缩略词 312
17.3 数字数组 314
17.3.1 示例：维护掷骰子统计数据
(方法1) 317
17.3.2 示例：维护掷骰子统计数据
(方法2) 318
17.4 ascii动画 320
17.5 展望未来 322
本章小结 323
补充材料和练习 323
关于数组的更多练习 323
查找数组 324
平行和嵌套数组 327
第18章 计算机和社会 331
18.1 技术的正面影响 331
18.1.1 日常事务中的计算机和
程序 332
18.1.2 internet和web作为信息源 334
18.1.3 因特网和web作为
传播媒介 336
18.1.4 internet和web用于商业 337
18.2 技术的潜在危险 338
18.2.1 对复杂系统的依赖 338
18.2.2 信息过量 339
18.2.3 隐私与安全 340
18.2.4 数字鸿沟 342
18.3 展望未来 343
本章小结 343
复习题 344
章后注 345
参考文献 346
附录a 浏览器基础 347
附录b 常用文本编辑器 355
附录c html参考 361
附录d javascript参考 364
附录e random.js 函数库 370
附录f time.js函数库 371
附录g arrays.js函数库 373
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>计算机导论与JavaScript编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript精粹
第1章　JavaScript初步
1.1　JavaScript的定义
1.2　JavaScript的限制
1.3　JavaScript的最佳实践
1.4　为那些没有JavaScript的用户着想(逐步改进)
1.5　内容和行为的隔离(谨慎地编码)
1.6　使用括号和分号结束符(一致的编码方式)
1.7　给页面添加脚本
1.8　让不同的脚本在同一页面中协同工作
1.9　隐藏JavaScript源代码
1.10　脚本调试
1.11　严格的警告
1.12　小结
第2章　使用数字
2.1　JavaScript中的数学计算
2.2　将数字转化为拥有x位小数位的形式
2.3　创建受约束的随机数
2.4　将数字转换为字符串
2.5　格式化货币值
2.6　将字符串转换为数字
2.7　将数字转换为序数
2.8　小结
第3章　使用字符串
3.1　在字符串中包含一个特殊字符
3.2　处理字符串中的字符
3.3　对URL编码
3.4　比较字符串
3.5　查找字符串中的子串
3.6　将字符串拆分成子串
3.7　创建正则表达式
3.8　测试字符串和正则表达式的匹配
3.9　测试字符串是否只包含数字
3.10　测试字符串是否是有效的电话号码
3.11　测试字符串是否是有效的电子邮件地址
3.12　使用正则表达式搜索和替换文本
3.13　小结
第4章　使用数组
4.1　使用数组显式声明
4.2　创建数组的数组
4.3　使用字符串代替数字做数组索引
4.4　将数组转化为字符串
4.5　增加和删除数组中的成员
4.6　将数组按照字母顺序或者数字顺序排序
4.7　对多维数组排序
4.8　随机地排列一个数组
4.9　小结
第5章　导航文档对象模型
5.1　访问元素
5.2　创建元素节点和文本节点
5.3　改变元素的类型
5.4　删除一个元素节点或者文本节点
5.5　读写元素属性
5.6　获得拥有特定属性值的所有元素
5.7　元素的class的增减
5.8　小结
第6章　处理和验证表单
6.1　读写文本区的数据
6.2　读取和设置checkbox的状态
6.3　读写radio按钮的状态
6.4　读取和设置select box
6.5　验证强制性的文本区
6.6　验证数字
6.7　验证E-mail地址
6.8　检查未选中的radio按钮
6.9　阻止不合法的表单被提交
6.10　验证数据项数目不详的表单
6.11　验证表单时打印内嵌错误信息
6.12　根据其他输入区域的值隐藏和显示某些表单输入区域
6.13　小结
第7章　窗口和Frame
7.1　使用弹出窗口
7.2　在新窗口中打开链接
7.3　Frame之间的通信
7.4　获取滚动位置
7.5　滚动页面到特定位置
7.6　获得视区的大小(窗口内可用的空间)
7.7　小结
第8章　cookie
8.1　写入cookie
8.2　读取cookie
8.3　设定cookie的过期时间
8.4　使cookie只能通过特定的域和路径访问
8.5　突破浏览器对cookie数目的限制
8.6　小结
第9章　日期和时间
第10章　图片
第11章　检测浏览器
第12章　在JavaScript中使用CSS
第13章　动态HTML基础
第14章　计时器和动画
第15章　DHTML菜单和导航
第16章　JavaScript和可用性
第17章　在JavaScript中使用Flash
第18章　使用JavaScript构建Web应用程序
第19章　JavaScript中的面向对象技术
第20章　高级话题
收起全部
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript精粹
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>详解HTML&CSS&JavaScript语法辞典
HTML篇
详解HTML
基本内容
文件信息
文本类型
字体与版式
链接
列表
表格
图像与多媒体
表单
框架
关于脚本
CSS篇
详解CSS
导入CSS
应用CSS的各种对象
字体
文本
背景
边框
排列版式
列表
表格
其他相关内容
CSS附录
JavaScript篇
详解
浏览器对象
navigator对象
screen对象
event对象
window对象
frame对象
document对象
history对象
location对象
Link和Anchor对象
From对象
Area对象
Image对象
Layer对象
Style对象
Date对象
Math对象
string对象
Array对象
function对象
Object对象
Boolean对象
Number对象
其他
公共属性和方法
内联函数（top－level函数）
JavaScript附录
全书附录
颜色一览表1：在HTML4.01中定义了名称的颜色
关于Web安全色
颜色一览表2：Web安全色
颜色一览表3：Color Name
字体显示样本
Web尺寸一览表
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>详解HTML&CSS&JavaScript语法辞典
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript权威指南
前言
第一章  JavaScript绪论
1. 1  对JavaScript的误解
1. 2  JavaScript的版本
1. 3  客户端JavaScript：网页中的可执行内容

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript权威指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>超实用的JavaScript代码段
序1  30段简单趣味的JavaScript代码	VII
序2  30个你不可能全部会做的JavaScript题目	XIII
序3  30个最火热的JavaScript面试题	XXI
第1章　学习JavaScript必须知道的事儿	1
1.1　如何在HTML中调用JavaScript代码	1
1.1.1　<script>标签的定义	1
1.1.2　两种嵌入JavaScript代码的方式	2
1.1.3　XHTML与HTML对JavaScript解析的不同之处	2
1.1.4　<noscript>如何用	3
1.2　使用什么工具开发JavaScript	3
1.2.1　Adobe Dreamweaver软件，推荐指数：3	3
1.2.2　SublimeText，推荐指数：4	4
1.2.3　AptanaStudio，推荐指数：4	4
1.2.4　WebStorm，推荐指数：4.5	5
1.3　如何在不同浏览器中调试JavaScript代码	5
1.3.1　WebInspector调试工具	6
1.3.2　Firebug调试工具	7
1.3.3　JavaScript调试器	7
1.3.4　控制台	8
1.3.5　HTTP分析	9
1.3.6　性能检测	10
1.4　总结	11
第2章　表单常用代码	12
2.1　去除字符串左右两边的空格	12
2.2　验证用户是否输入	13
2.3　禁止输入	14
2.4　关闭输入法	16
2.5　禁止复制与粘贴	18
2.6　限制只能输入数字	19
2.7　限制只能输入中文	20
2.8　限制字符串长度	21
2.9　限制字符串长度（区分中英文）	23
2.10　实时提示可输入字符（区分中英文）	25
2.11　在输入框中显示提示信息	28
2.12　文本框内容自动滚动	32
2.13　密码强度实时验证	34
2.14　回车提交表单	37
2.15　光标停留在文字最后	37
2.16　禁止文本框的记忆功能	38
2.17　自动选定文本内容	39
2.18　获取和失去焦点时改变样式	40
2.19　常见的验证规则	41
2.20　对文本内容进行关键词过滤	44
2.21　从字符串中剔除所有HTML代码	45
2.22　检测是否为数值型	46
2.23　TextArea自适应文字行数	47
2.24　判断单选框是否选中	48
2.25　判断复选框至少选中一项	48
2.26　限制复选框最多选择几项	49
2.27　复选框全选、取消全选、反选	50
2.28　根据指定内容选中复选框	51
2.29　获取选中的复选框值	53
2.30　判断下拉框中的值是否被选中	55
2.31　动态添加下拉选项	56
2.32　动态删除下拉选项	57
2.33　下拉框二级联动效果	58
2.34　可输入的下拉框	61
2.35　简单的数字及字符操作	63
2.36　清空所有文本型输入框	64
2.37　JavaScript对上传文件的相关操作	65
第3章　图片控制常用代码	68
3.1　动画管理模块	68
3.2　实时预览上传的图片	73
3.3　鼠标移入/移出时改变图片样式	77
3.4　图片放大镜效果	78
3.5　水中倒影效果	84
3.6　横向图片轮播	90
3.7　图片层叠轮播	95
3.8　单击图片逐渐放大	100
3.9　图片旋转	101
3.10　类似QQ相册效果	104
第4章　内容展示常用代码	113
4.1　单元行上的鼠标悬停提示	113
4.2　表格光棒效果	116
4.3　让表单没有凹凸感	118
4.4　动态插入和删除单元行	119
4.5　表格内容的展开和折叠	121
4.6　表格内容拖曳效果	123
4.7　表格分页	129
4.8　英文字符串自动换行	134
4.9　内容超过元素宽度显示省略号	136
4.10　调整字体大小	139
4.11　实现打字机效果	140
4.12　文本段落的展开和折叠	142
4.13　关键字的高亮显示	144
4.14　字幕上下滚动	146
4.15　弹出层	151
4.16　用层模拟的提示消息框	153
4.17　隐藏层	156
4.18　用层实现滚动条	157
4.19　让层可以随意拖动	162
4.20　遮罩层效果	165
4.21　Tab选项卡切换	167
4.22　对联浮动广告	170
4.23　类似QQ消息窗口提示	173
4.24　修改浏览器的主题	177
4.25　打开链接时弹出确认框	177
4.26　删除时弹出确认对话框	178
第5章　页面控制常用代码	180
5.1　打开新页面	180
5.2　打开指定大小的窗口	181
5.3　打开模式子窗口	183
5.4　获取子窗口的返回值	183
5.5　刷新iframe窗口	185
5.6　刷新当前页面	186
5.7　不弹出提示框关闭父窗口	186
5.8　弹出窗口关闭时刷新父窗口	187
5.9　子窗口全屏	188
5.10　屏蔽右键	189
5.11　网页防止另存为	190
5.12　防止被人frame	191
5.13　永远都带着框架	192
5.14　禁止滚动条	192
5.15　禁止查看源代码	193
5.16　取消选取、防止复制	195
5.17　添加到收藏夹	196
5.18　将网页设置为首页	197
5.19　将网页另存为	198
5.20　自定义IE地址栏图标	199
5.21　在收藏夹中显示自定义图标	200
5.22　查看网页源代码	200
5.23　判断上一页的来源	202
5.24　最小化、最大化、关闭窗口	203
5.25　禁止浏览器缓存	204
5.26　检测某个网站的链接速度	205
5.27　脚本永不出错	207
5.28　解决点击空链接返回页面顶部的问题	208
5.29　获取浏览器信息	208
5.30　解决URL传递中文参数出现乱码	210
5.31　获取地址栏URL的参数	211
5.32　获得一个窗口的大小	212
5.33　让弹出窗口总在最前面	213
5.34　屏蔽功能键Shift、Alt、Ctrl	213
5.35　页面慢慢变大	214
5.36　IE浏览器页面进入和退出的特效	215
5.37　页面全屏	217
5.38　定时关闭页面	218
5.39　打印页面的指定区域	218
5.40　去掉打印时的页眉页脚	221
第6章　日期处理常用代码	222
6.1　获取日期的指定部分	222
6.2　显示当前时间	223
6.3　显示最后修改时间	224
6.4　实时显示当前时间	225
6.5　将日期格式化成字符串	225
6.6　获取短日期格式	227
6.7　获取指定日期所在月份的天数	229
6.8　获取指定日期是第几周	231
6.9　倒计时	231
6.10　比较两个日期相差多少秒	233
6.11　比较日期大小	234
6.12　对指定日期进行加减	235
6.13　将字符串转换成日期格式	237
6.14　判断是闰年还是平年	238
6.15　日期合法性验证	240
第7章　页面特效常用代码	242
7.1　页面悬浮导航	242
7.2　下拉式导航菜单	244
7.3　滑动门导航	247
7.4　树形菜单导航	249
7.5　仿QQ菜单	253
7.6　漂浮广告	258
7.7　滑动展开/收缩广告	260
7.8　定时关闭的背投广告	261
7.9　页面五颜六色的雪花	263
第8章　移动开发常用代码	267
8.1　区分平台类型	267
8.2　判断设备方向变更	268
8.3　移除移动浏览器地址栏	270
8.4　防止网页触摸滚动	271
8.5　使用JavaScript调用百度地图	272
8.6　获取当前地理坐标	274
8.7　判断当前浏览器是否为移动浏览器	276
第9章　其他常用代码	277
9.1　网页图片较多时分批次加载图片	277
9.2　使用JavaScript解析XML数据	280
9.3　使用JavaScript解析JSON数据	282
9.4　跨浏览器的Ajax	283
9.5　使用Ajax轻松加载文件	287
9.6　跨浏览器读取XML	290
9.7　HTML 5版JavaScript实现的MP3播放器	294
9.8　Ajax实现动态导航	297
9.9　类似百度的自动完成功能	301
9.10　等级星投票效果	306
9.11  IE导出表格 307
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>超实用的JavaScript代码段
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript基础教程（第8版）
目      录
第1章   了解JavaScript    1
1.1   JavaScript是什么    1
1.2   JavaScript不是Java    2
1.3   JavaScript的起源    3
1.4   JavaScript可以做什么    3
1.5   JavaScript不能做什么    3
1.6   Ajax是什么    4
1.7   组合式（snap-together）语言    5
1.7.1   对象    5
1.7.2   属性    6
1.7.3   方法    6
1.7.4   将对象、属性和方法组合在一起    6
1.7.5   DOM简介    7
1.8   处理事件    7
1.9   值和变量    8
1.9.1   操作符    8
1.9.2   赋值和比较    9
1.9.3   比较    9
1.10   编写对JavaScript友好的HTML    10
1.10.1   结构、表现和行为    10
1.10.2   div和span    10
1.10.3   class和id    11
1.11   要使用什么工具    12
第2章   开始    13
2.1   将脚本放在哪里    13
2.2   关于函数    14
2.3   使用外部脚本    15
2.4   在脚本中添加注释    17
2.5   向用户发出警告    18
2.6   确认用户的选择    19
2.7   提示用户    21
2.8   用链接对用户进行重定向    22
2.9   使用JavaScript改进链接    25
2.10   使用多级条件    28
2.11   处理错误    30
第3章   第一个Web应用程序    33
3.1   用循环进行重复操作    33
3.2   将值传递给函数    37
3.3   探测对象    39
3.4   处理数组    40
3.5   处理有返回值的函数    42
3.6   更新数组    43
3.7   使用do/while循环    44
3.8   以多种方式调用脚本    46
3.9   组合使用JavaScript和CSS    47
3.10   检查状态    50
3.11   处理字符串数组    55
第4章   处理图像    59
4.1   创建翻转器    59
4.2   创建更有效的翻转器    61
4.3   构建三状态翻转器    64
4.4   由链接触发翻转器    66
4.5   让多个链接触发一个翻转器    68
4.6   处理多个翻转器    71
4.7   创建循环的广告条    74
4.8   在循环广告条中添加链接    76
4.9   建立循环式幻灯片    78
4.10   显示随机图像    80
4.11   随机开始循环显示图像    81
第5章   窗口与框架    83
5.1   防止页面显示在框架中    83
5.2   设置目标    84
5.3   用JavaScript加载iframe    86
5.4   Iframes的使用    87
5.5   创建动态iframe    89
5.6   在文档之间共享函数    90
5.7   打开新窗口    92
5.8   为窗口加载不同的内容    96
第6章   表单处理    98
6.1   选择并转移导航菜单    99
6.2   动态地改变菜单    102
6.3   建立必须填写的字段    104
6.4   根据其他字段对字段进行检查    109
6.5   标识有问题的字段    111
6.6   准备进行表单验证    113
6.7   处理单选按钮    117
6.8   用一个字段设置另一个字段    119
6.9   检验Zip编码    122
6.10   验证电子邮件地址    126
第7章   表单和正则表达式    131
7.1   用正则表达式验证电子邮件地址    131
7.2   验证文件名    136
7.3   提取字符串    139
7.4   格式化字符串    141
7.5   对字符串进行格式化和排序    144
7.6   对字符串进行格式化和验证    146
7.7   使用正则表达式替换元素    148
第8章   处理事件    151
8.1   处理窗口事件    151
8.1.1   onload事件    151
8.1.2   onunload事件    154
8.1.3   onresize事件    154
8.1.4   onmove事件    156
8.1.5   onabort事件    156
8.1.6   onerror事件    156
8.1.7   onfocus事件    156
8.1.8   onblur事件    157
8.2   处理鼠标事件    158
8.2.1   onmousedown事件    158
8.2.2   onmouseup事件    161
8.2.3   onmousemove事件    161
8.2.4   onmouseover事件    163
8.2.5   onmouseout事件    163
8.2.6   ondblclick事件    164
8.2.7   onclick事件    165
8.3   表单事件处理    165
8.3.1   onsubmit事件    165
8.3.2   onreset事件    165
8.3.3   onchange事件    166
8.3.4   onselect事件    166
8.3.5   onclick事件    166
8.3.6   onblur事件    166
8.3.7   onfocus事件    168
8.4   键事件处理    169
8.4.1   onkeydown事件    169
8.4.2   onkeyup事件    172
8.4.3   onkeypress事件    172
第9章   JavaScript和cookie    173
9.1   建立第一个cookie    173
9.2   读取cookie    176
9.3   显示cookie    177
9.4   使用cookie作为计数器    178
9.5   删除cookie    180
9.6   处理多个cookie    182
9.7   显示新内容提醒信息    184
第10章   对象和DOM    189
10.1   关于节点操纵    189
10.1.1   DOM 2和W3C    189
10.1.2   DOM 2术语    189
10.1.3   DOM 3    190
10.2   添加节点    191
10.3   删除节点    192
10.4   删除特定的节点    194
10.5   插入节点    197
10.6   替换节点    199
10.7   用对象字面值编写代码    202
第11章   建立动态页面    206
11.1   在网页上显示当前日期    206
11.2   处理周中的日期    208
11.3   根据时间对消息进行定制    209
11.4   根据时区显示日期    210
11.5   把24小时制转换为12小时制    213
11.6   创建倒数计数器    216
11.7   隐藏和显示层    219
11.8   移动文档中的对象    221
11.9   日期方法    223
第12章   JavaScript应用示例    225
12.1   使用可折叠菜单    225
12.2   添加下拉菜单    228
12.3   改进下拉菜单    230
12.4   带说明的幻灯片    233
12.5   一个无聊的姓名生成器    236
12.6   柱状图生成器    240
12.7   样式表切换器    246
第13章   Ajax简介    253
13.1   Ajax的定义    253
13.2   读取服务器数据    255
13.3   解析服务器数据    261
13.4   刷新服务器数据    266
13.5   从服务器获得数据    267
13.6   用Ajax预览链接    270
13.7   自动补全表单字段    273
第14章   工具包、框架和库    279
14.1   添加jQuery    280
14.2   使用jQuery更新页面    282
14.3   使用jQuery交互    282
14.4   交互与更新    284
14.5   自动完成字段    287
第15章   用jQuery设计页面    289
15.1   突出显示新元素    289
15.2   创建可折叠菜单    292
15.3   创建更漂亮的对话框    294
15.4   条纹表格    298
15.5   表格排序    301
第16章   基于jQuery的应用    306
16.1   以jQuery为基础    306
16.2   使用ThemeRoller定制外观    307
16.3   在页面中添加日历    309
16.4   拖放元素    313
16.5   使用jQuery处理外部数据    316
16.6   使用jQuery插件    322
第17章   bookmarklet    328
17.1   第一个bookmarklet    328
17.2   改变页面的背景颜色    333
17.3   改变页面样式    334
17.4   查询单词    335
17.5   查看图像    337
17.6   显示ISO Latin字符    339
17.7   将RGB值转换为十六进制    340
17.8   对值进行转换    341
17.9   bookmarklet计算器    342
17.10   缩短URL    344
17.11   检验页面    344
17.12   通过电子邮件发送页面    345
17.13   改变页面大小    346
附录A   JavaScript的版本演化和参考
资料    348
附录B   JavaScript保留字    373
附录C   CSS参考    376
附录D   其他学习资源    386

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript基础教程（第8版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>移动Web前端高效开发实战
第1章　初识移动Web前端	1
1.1  移动Web前端史	1
1.1.1  Web开发的变迁	2
1.1.2  移动Web与HTML 5不得不说的关系	3
1.1.3  移动Web与原生应用的优劣势	5
1.2  移动Web前端现状与未来	6
1.2.1  移动Web的现状	6
1.2.2  您需要掌握的知识体系	7
1.2.3  技术拐点与未来趋势	10
1.3  常见问题	11
1.3.1  移动Web前端开发有前景吗	11
1.3.2  PC Web和移动Web开发区别	12
1.4  本章小结	13
第2章　移动Web开发环境搭建	14
2.1  Visual Studio Code免费跨平台编辑器	14
2.2  使用Node.js	16
2.2.1  Node.js的用途	16
2.2.2  安装和调试Node.js	17
2.2.3  什么是NPM	19
2.2.4  Web代理工具NProxy	22
2.2.5  HTTP服务器http-server	24
2.3  本章小结	25
第3章　HTML 5 必会实际常用特性	26
3.1  新的语义	26
3.1.1  新元素的到来	26
3.1.2  表单的增强应用	28
3.1.3  使用音频和视频	32
3.2  访问你的设备	34
3.2.1  定位当前地埋位置	35
3.2.2  实战演练：调用摄像头拍个照	37
3.2.3  实战演练：在手机上实现摇一摇	41
3.3  离线和存储	44
3.3.1  实战演练：搭建一个简单的离线应用	44
3.3.2  离线之后资源该如何更新——Service Worker	47
3.3.3  LocalStorage与SessionStorage	48
3.3.4  实战演练：利用IndexedDB实现便签管理	51
3.4  图像效果	56
3.4.1  使用Canvas绘制一个简单的饼图	56
3.4.2  使用SVG实现奥运五环	58
3.4.3  WebGL带来了3D图像功能	60
3.5  不一样的通信	62
3.5.1  PostMessages	62
3.5.2  XMLHttpRequest Level 2	65
3.5.3  Server Sent Event	69
3.5.4  WebSocket	72
3.5.5  WebRTC	73
3.6  其他常用特性	77
3.6.1  History API与单页应用	77
3.6.2  Drag和Drop介绍	79
3.6.3  利用Web Workers加速应用计算	81
3.6.4  利用Performance API分析网站性能	82
3.7  本章小结	85
第4章　CSS 3 必会实战技巧	86
4.1  认识CSS 3	86
4.1.1  什么是CSS 3	87
4.1.2  移动Web的CSS 3现状	89
4.1.3  用Modernizr检测浏览器是否支持CSS 3	93
4.2  选择器	96
4.2.1  常见选择器	97
4.2.2  伪类和伪元素	99
4.2.3  优先级和权重	104
4.3  响应式开发	106
4.3.1  常见设备的宽高	106
4.3.2  Flex弹性盒布局	108
4.3.3  媒体查询（Media Query）	112
4.3.4  用rem开发响应式设计	115
4.3.5  多列（Multiple Columns）	119
4.4  动效	122
4.4.1  转换（Transform）	122
4.4.2  过渡（Transition）	126
4.4.3  动画（Animation）	128
4.5  常用特性	131
4.5.1  开放字体格式（WOFF）	131
4.5.2  背景（Backgrounds）	134
4.5.3  颜色（Color）	138
4.5.4  文字效果（Text Effects）	141
4.5.5  边框（Border）	144
4.6  预编译	147
4.6.1  Less介绍和安装	147
4.6.2  Less使用	150
4.6.3  Sass介绍和安装	154
4.6.4  Sass使用	156
4.6.5  Compass的安装和使用	160
4.7  本章小结	163
第5章　JavaScript关键语法及使用技巧	164
5.1  理解JavaScript	164
5.1.1  语言基础	165
5.1.2  函数和参数	168
5.2  事件	171
5.2.1  事件概述	171
5.2.2  事件委托	172
5.2.3  移动端事件	175
5.3  作用域、闭包和this	178
5.3.1  使用let实现块级作用域	178
5.3.2  闭包	180
5.3.3  采用call、apply、bind改变this	182
5.4  面向对象	184
5.4.1  原型和原型链	184
5.4.2  Mixin模式	186
5.4.3  ECMAScript 6的Class和Extends	188
5.5  异步编程	189
5.5.1  AJAX中的Callback回调函数	189
5.5.2  Promise模式	190
5.5.3  生成器Generator	192
5.6  模块化	194
5.6.1  为什么需要模块化	195
5.6.2  AMD和CMD规范	197
5.6.3  ECMAScript 6标准的模块支持	205
5.7  ECMAScript 6其他常用功能	207
5.7.1  基础数据类型的扩展	207
5.7.2  使用解构赋值来简化代码	210
5.7.3  使用Babel插件提前使用新特性	212
5.8  本章小结	215
第6章　HTML 5 移动开发实战	216
6.1  在地图上显示行走轨迹	216
6.2  仿原生相册	220
6.2.1  实现相册初始展示页	221
6.2.2  通过手势操作控制相片	222
6.3  使用Socket.IO制作小型聊天室	224
6.3.1  前端HTML+JavaScript实现聊天界面	225
6.3.2  服务器端Node.js监听连接	227
6.4  移动端拍照上传实践	228
6.4.1  前端HTML+CSS+JavaScript	229
6.4.2  服务器端Node.js	232
6.5  利用Microdata进行SEO优化	232
6.5.1  认识Microdata	233
6.5.2  提升网页SEO效果	233
6.6  制作一个带字幕的视频播放器	237
6.7  使用Pixi.js制作“抓住开学君”游戏（Canvas+WebGL）	242
6.8  用Canvas制作刮刮卡	248
6.9  实战演练：实现3D全景效果	251
6.9.1  需要的CSS 3特性	251
6.9.2  实现原理	251
6.9.3  实现代码	253
6.10  本章小结	255
第7章　移动网页样式布局实战	256
7.1  静态布局的实际应用	256
7.1.1  设计活动页面静态布局	257
7.1.2  静态布局在移动端上的自适应	257
7.2  水平居中与垂直居中实战	259
7.2.1  水平居中	259
7.2.2  自适应块级元素水平居中	260
7.2.3  行内元素垂直居中	261
7.2.4  块级元素的垂直居中	263
7.2.5  基于视口单位的解决方案	264
7.2.6  基于Flexbox的解决方案	265
7.3  栅格系统实现响应式列表	267
7.3.1  实现栅格布局	267
7.3.2  栅格布局的原理	269
7.4  Flex多栏布局实战	269
7.5  实战演练：沪江网校首页rem布局实践	272
7.6  实战演练：侧边栏的滑进滑出效果	276
7.7  实战演练：模拟原生的页面切换效果	280
7.7.1  实现页面切换过渡效果	280
7.7.2  模拟切换原理解析	283
7.8  提高Web动画的性能实战	284
7.8.1  使用CSS 3动画	284
7.8.2  使用高性能的JavaScript动画	285
7.9  实战演练：课程分类列表实战	286
7.9.1  实现主页结构	287
7.9.2  响应式CSS实现（Compass）	289
7.9.3  添加页面动态效果	293
7.10  本章小结	294
第8章　前端工程化实战	295
8.1  前端工程化	295
8.1.1  前端工程化的必要性	296
8.1.2  前端工程化的发展史	298
8.2  工程化入门Grunt	300
8.2.1  安装和配置	301
8.2.2  Grunt插件	302
8.2.3  实战演练：使用Grunt开发一个简易相册	305
8.3  使用Gulp构建一个ECMAScript 6和Sass应用	309
8.3.1  安装和配置	309
8.3.2  预处理任务	310
8.3.3  实战演练：采用ECMAScript 6开发一个Markdown编辑器	312
8.3.4  代码检查任务	315
8.3.5  代码合并、压缩、重命名任务	317
8.3.6  监听文件变化自动构建	318
8.4  实战演练：使用Webpack构建一个React应用	320
8.4.1  安装和配置	320
8.4.2  常用的加载器和插件	323
8.4.3  缓存控制	327
8.4.4  简化模块引用	330
8.4.5  异步模块加载	332
8.4.6  使用Source Map调试代码	335
8.5  本章小结	338
第9章　移动Web常用开发方式实战	339
9.1  基于DOM的开发方式	339
9.1.1  使用Zepto和前端模板开发简单备忘录	340
9.1.2  解决原生单击事件的缺陷	341
9.1.3  为何抛弃掉Zepto	343
9.2  基于React的开发方式	345
9.2.1  使用JSX语法创建React组件	345
9.2.2  在实践中掌握React生命周期	348
9.2.3  实现组件间通信	353
9.2.4  实现组件关注分离	355
9.2.5  实战演练：运用组件化方式开发一个备忘录	358
9.2.6  如何管理应用的状态	364
9.2.7  添加动画效果	366
9.2.8  提高React组件性能	369
9.3  基于Vue.js的开发方式	372
9.3.1  实战演练：开发一个简单的备忘录应用（Vue.js 2.0）	372
9.3.2  管理应用的状态及实现组件间的通信	375
9.3.3  添加动画效果	379
9.4  打造单页应用SPA	381
9.4.1  单页应用的优势是什么	382
9.4.2  实战演练：实现一个单页路由	382
9.4.3  实战演练：使用React开发一个简单的单页应用	384
9.4.4  单页应用的状态管理	386
9.5  本章小结	388
第10章　混合式开发实战	389
10.1  为什么需要混合式开发	389
10.1.1  混合式开发种类	389
10.1.2  混合式开发的优势	390
10.1.3  选择合适的混合式开发方案	391
10.2  Cordova开发入门	392
10.2.1  JavaScript和Native互相调用	392
10.2.2  Cordova介绍和安装	394
10.2.3  Cordova开发使用	397
10.3  React Native实战	400
10.3.1  React Native简介	400
10.3.2  React Native样式和布局	402
10.3.3  React Native组件概念	404
10.3.4  简单组件实战	404
10.3.5  复合组件实战	405
10.3.6  第三方组件实战	406
10.3.7  常用API实践	407
10.4  实战演练：用React Native开发新闻阅读应用	410
10.4.1  React Native的工程项目结构一览	410
10.4.2  列表页	411
10.4.3  新闻评论页	414
10.4.4  新闻展示页	414
10.5  本章小结	415
第11章　前端开发调试实战	417
11.1  浏览器调试	417
11.1.1  Chrome开发者工具	418
11.1.2  Safari开发者工具	421
11.2  代理工具	424
11.2.1  Mac OS下Charles的用法	424
11.2.2  Windows下Fiddler的用法	426
11.3  多终端同步工具	428
11.3.1  多设备浏览器同步测试工具BrowserSync	429
11.3.2  双向自动刷新样式工具Emmet LiveStyle	431
11.4  模拟器调试	432
11.4.1  Android模拟器调试	432
11.4.2  iOS模拟器调试	434
11.4.3  在线模拟器Manymo	436
11.5  多平台调试	437
11.5.1  网站响应式设计测试工具Ghostlab	437
11.5.2  移动端Web开发调试工具Weinre	439
11.5.3  JavaScript远程调试和测试工具Vorlon.JS	442
11.6  云真机调试	444
11.6.1  浏览器兼容性云端测试应用BrowserStack	444
11.6.2  Web端移动设备管理控制工具STF	446
11.6.3  多浏览器兼容性测试平台F2etest	448
11.7  React调试	452
11.7.1  React Developer Tools	452
11.7.2  Redux DevTools	455
11.8  本章小结	458
第12章　前端单元测试实战	459
12.1  JavaScript单元测试框架Jasmine实战	459
12.2  使用Mocha和Chai在Node.js进行单元测试	462
12.3  使用Sinon辅助单元测试	465
12.4  使用Karma自动化单元测试	468
12.5  使用Istanbul计算代码覆盖率	470
12.6  使用Benchmark.js进行基准测试	473
12.7  实战演练：React版备忘录项目的完整单元测试	475
12.8  本章小结	479
第13章　前端性能优化实战	480
13.1  常用网站性能优化指标	480
13.1.1  网页的资源请求与加载阶段	481
13.1.2  网页渲染阶段	482
13.1.3  JavaScript脚本的执行速度	484
13.2  依旧有效的Yahoo性能优化法则	484
13.3  性能优化工具使用实战	486
13.3.1  YSlow	486
13.3.2  PageSpeed	487
13.3.3  WebPagetest	488
13.4  HTTP协议头缓存实战	489
13.4.1  客户端缓存流程	489
13.4.2  缓存协议内容	490
13.4.3  实战演练：HTTP缓存	491
13.5  资源按需加载实战	492
13.5.1  基于RequireJS的按需加载	492
13.5.2  基于Webpack的按需加载	493
13.5.3  图片懒加载	494
13.6  不同网络类型的优化实战	495
13.6.1  获取网络类型	495
13.6.2  弱网图片优化	496
13.6.3  弱网缓存优化	496
13.7  实战演练：Nginx配置Combo合并HTTP请求	497
13.7.1  安装Nginx和文件合并模块	498
13.7.2  配置Nginx和Combo	499
13.8  本章小结	499
第14章　项目实战：搭建直播平台（Cordova+Koa+React）	500
14.1  项目的安装和启动	500
14.1.1  安装依赖	501
14.1.2  启动项目	501
14.1.3  Cordova打包	502
14.2  直播平台功能预览	502
14.2.1  直播流程	503
14.2.2  直播核心页面	503
14.3  页面的布局和结构	504
14.3.1  首页	504
14.3.2  发起直播页面	505
14.3.3  观看直播页面	505
14.4  搭建WebRTC服务端——Koa	506
14.5  实现多人在线直播功能	512
14.6  实现弹幕客户端与服务端通信	517
14.6.1  客户端与服务端通信的过程	517
14.6.2  客户端代码设计——React	518
14.6.3  服务端代码设计	520
14.7  本章小结	521
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>移动Web前端高效开发实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript快速全栈开发
第一部分　快速入门
第1章　基础知识　　2
1.1　定义前端　　2
1.1.1　综述　　2
1.1.2　HTML　　3
1.1.3　CSS　　5
1.1.4　JavaScript　　6
1.2　敏捷开发概述　　11
1.2.1　Scrum　　11
1.2.2　测试驱动开发　　12
1.2.3　持续部署和集成　　12
1.2.4　结对编程　　13
1.3　后端定义　　13
1.3.1　Node.js　　13
1.3.2　NoSQL和MongoDB　　14
1.3.3　云计算　　14
1.3.4　HTTP请求和响应　　15
1.3.5　REST式API 　　16
第2章　设置　　17
2.1　本地环境搭建　　17
2.1.1　开发目录　　17
2.1.2　浏览器　　18
2.1.3　IDE和文本编辑器　　20
2.1.4　版本控制系统　　22
2.1.5　本地HTTP服务器　　24
2.1.6　数据库：MongoDB　　25
2.1.7　其他组件　　28
2.2　云端环境搭建　　30
2.2.1　SSH 密钥　　30
2.2.2　GitHub　　32
2.2.3　Windows Azure　　33
2.2.4　Heroku　　34
2.2.5　Cloud9　　35
第二部分　前端原型构建
第3章　jQuery和Parse.com　　38
3.1　定义　　38
3.1.1　JSON　　38
3.1.2　AJAX　　39
3.1.3　跨域调用　　40
3.2　jQuery　　40
3.3　Twitter Bootstrap　　41
3.4　LESS　　　　45
3.4.1　变量　　45
3.4.2　混入类（mixin） 　　46
3.4.3　操作符　　46
3.5　使用第三方API（Twitter）和jQuery的例子　　48
3.6　Parse.com　　53
3.7　使用Parse.com的Chat概述　　56
3.8　使用Parse.com的Chat：REST API和jQuery版本　　56
3.9　推送到GitHub　　63
3.10　部署到Windows Azure 　　64
3.11　部署到Heroku　　65
3.12　更新和删除消息　　67
第4章　Backbone.js　　68
4.1　从头开始构建Backbone.js应用　　68
4.2　使用集合　　72
4.3　事件绑定　　76
4.4　使用Underscore.js视图和子视图　　80
4.5　重构　　87
4.6　开发时的AMD 和Require.js　　92
4.7　生产环境里的Require.js 　　99
4.8　简单好用的Backbone脚手架工具　　102
第5章　Backbone.js和Parse.com　　104
5.1　使用Parse.com的Chat：JavaScript SDK和Backbone.js版本　　105
5.2　部署Chat到PaaS 　　115
5.3　增强Chat应用　　116
第三部分　后端原型构建
第6章　Node.js和MongoDB　　118
6.1　Node.js　　118
6.1.1　创建Node.js 的Hello World程序　　118
6.1.2　Node.js 核心模块　　119
6.1.3　NPM　　121
6.1.4　部署Hello World到PaaS　　123
6.1.5　部署到Windows Azure 　　123
6.1.6　部署到Heroku 　　123
6.2　Chat：运行时内存版本　　124
6.3　Chat的测试用例　　.125
6.4　MongoDB 　　131
6.4.1　MongoDB Shell　　131
6.4.2　MongoDB原生驱动　　132
6.4.3　MongoDB on Heroku：MongoHQ 　　134
6.4.4　BSON　　138
6.5　Chat：MongoDB版本　　139
第7章　整合前后端　　142
7.1　不同域部署　　142
7.2　修改入口　　143
7.3　Chat应用　　146
7.4　部署　　147
7.5　同域部署　　148
第8章　福利：Webapplog上的文章　　150
8.1　Node里的异步　　 150
8.1.1　非阻塞I/O 　　150
8.1.2　异步编码方式　　 151
8.2　使用Monk迁移MongoDB　　 152
8.3 在Node.js里使用Mocha实践TDD　　156
8.3.1　谁需要使用测试驱动的开发　　156
8.3.2　快速开始指南　　 156
8.4　Wintersmith：静态网站生成器　　 158
8.4.1　开始使用Wintersmith 　　159
8.4.2　其他静态网站生成器　　160
8.5　Express.js教程：使用Monk和MongoDB的简单REST API应用　　161
8.6　Express.js教程：参数、错误处理及其他中间件　　 164
8.6.1　请求处理函数　　 164
8.6.2　参数处理中间件　　 165
8.6.3　错误处理　　166
8.6.4　其他中间件　　 167
8.6.5　抽象　　168
8.7　使用Node.js和MongoDB通过Mongoskin和Express.js构建JSON REST API服务器　　 169
8.7.1　测试覆盖率　　 169
8.7.2　依赖　　172
8.7.3　实现　　172
8.7.4　总结　　176
8.8　Node.js MVC：Express.js + Derby Hello World教程　　177
8.8.1　Node MVC框架　　 177
8.8.2　Derby安装　　177
8.8.3　文件结构　　178
8.8.4　依赖　　178
8.8.5　视图　　178
8.8.6　主服务器　　179
8.8.7　Derby应用　　180
8.8.8　运行Hello World应用　　 181
8.8.9　递值给后端　　 181
总结与推荐阅读　　 185
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript快速全栈开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript&DHTML Cookbook中文版
前言 	I
第1章 字符串	1
1.0 引言	1
1.1 连接字符串	4
1.2 提高字符处理的性能	6
1.3 访问子串	7
1.4 改变字符串的大小写	8
1.5 检验两个字符是否相等	9
1.6 不使用正则表达式检验字符串的包含关系	11
1.7 使用正则表达式检验字符串的包含关系	13
1.8 查找和替换子字符串	14
1.9 特殊字符和转义字符的应用	15
1.10 cookies的读写	17
1.11 Unicode值和字符的互相转换	20
1.12 URL字符串的编码和解码	21
1.13 Base64字符串的编码和解码	23
第2章 数字和日期	27
2.0 引言	27
2.1 数字和字符串的互相转换	31
2.2 检验数字的有效性	33
2.3 检验数字的相等	34
2.4 浮点小数的取整	35
2.5 为文本显示指定数字格式	36
2.6 十进制和十六进制之间的互相转换	39
2.7 生成伪随机数字	41
2.8 三角函数的计算	41
2.9 创建Date对象	42
2.10 过去或将来日期的计算	43
2.11 计算两个日期之间的天数	45
2.12 验证日期	47
第3章 数组和对象	51
3.0 引言	51
3.1 创建简单的数组	54
3.2 创建多维数组	56
3.3 数组和字符串之间的转换	57
3.4 操作数组元素	59
3.5 简单数组的排序	61
3.6 合并数组	63
3.7 分解数组	64
3.8 创建自定义对象	65
3.9 用于快速数组查询的模拟哈希表	69
3.10 对象属性的处理	71
3.11 对象数组的排序	72
3.12 自定义对象的原型	74
3.13 把数组和自定义对象转换成字符串	79
3.14 使用对象减少命名冲突	82
第4章 变量、函数和流程控制	85
4.0 引言	85
4.1 创建JavaScript变量	85
4.2 创建命名函数	89
4.3 嵌套命名函数	92
4.4 创建匿名函数	93
4.5 延迟函数的调用	94
4.6 条件分支	97
4.7 漂亮地处理脚本错误	101
4.8 提高脚本的性能	103
第5章 浏览器特性检测	107
5.0 引言	107
5.1 检测浏览器的种类	113
5.2 检测早期的浏览器版本	113
5.3 检测Internet Explorer的版本	115
5.4 检测Mozilla的版本	116
5.5 检测Safari的版本	118
5.6 检测Opera的版本	119
5.7 检测客户端的操作系统	120
5.8 检测对象支持	121
5.9 检测对象属性和方法的支持	124
5.10 检测W3C DOM标准的支持	126
5.11 检测浏览器的书写语言	127
5.12 检测Cookie的是否可用	128
5.13 为特定浏览器或属性定义链接	129
5.14 多个浏览器版本的检验	130
第6章 管理浏览器窗口	132
6.0 引言	132
6.1 在浏览器窗口控制受限的环境下生存	135
6.2 设置主窗口的尺寸	136
6.3 主窗口定位	137
6.4 最大化主窗口	138
6.5 创建新窗口	139
6.6 将窗口置前	143
6.7 与新窗口进行通信	144
6.8 与主窗口进行通信	147
6.9 使用IE的模态/非模态窗口	148
6.10 模拟跨浏览器的模态对话框	151
6.11 用层模拟窗口	158
第7章 管理多个框架	173
7.0 引言	173
7.1 在新的框架组中创建空白框架	178
7.2 从其他框架中改变框架的内容	179
7.3 同时改变多个框架的内容	181
7.4 用单一页面替换框架组	182
7.5 避免被其他网站“加框”	183
7.6 确保页面加载到自己的框架组	184
7.7 读取框架的尺寸	187
7.8 设置框架的尺寸	188
7.9 动态设置框架组的规格	192
第8章 动态表单	194
8.0 引言	194
8.1 自动在第一个文本域聚焦	197
8.2 常见的文本域检验	198
8.3 在验证失败时阻止表单提交	204
8.4 自动聚焦到无效的文本域输入	207
8.5 使用自定义验证对象	208
8.6 改变表单的动作	213
8.7 封锁回车键的提交..	214
8.8 通过回车键移动文本域的焦点	215
8.9 在文本框中输入回车键来提交表单	216
8.10 禁用表单控件	217
8.11 隐藏和显示表单控件	219
8.12 仅允许在文本框中输入数字（或字母）	221
8.13 在固定长度的文本框中自动移动焦点	223
8.14 改变select元素的内容	224
8.15 页面间表单数据的复制	227
第9章 管理事件	231
9.0 引言	231
9.1 等价使用IE和W3C的事件模型	236
9.2 在页面加载之后初始化	240
9.3 添加多个load事件处理	242
9.4 判断点击事件的坐标	244
9.5 阻止事件执行默认行为	248
9.6 阻止重复点击	251
9.7 判断哪个元素收到事件	252
9.8 判断哪个鼠标按键被按下	254
9.9 读取被按下的字符键	256
9.10 读取被按下的非字符键	257
9.11 在事件中判断哪个辅助键被按下	260
9.12 判断光标移出/移入的元素	262
9.13 与事件同步播放声音	266
第10章 页面导航技术	268
10.0 引言	268
10.1 加载新页面或锚点	271
10.2 避免页面进入浏览器历史	273
10.3 将select元素用于导航	274
10.4 通过Cookie在页面之间传递数据	276
10.5 通过框架在页面之间传递数据	278
10.6 通过URL在页面之间传递数据	280
10.7 创建上下文（右键）菜单	283
10.8 创建下拉式导航菜单	291
10.9 创建导航踪迹菜单	305
10.10 创建可展开菜单	308
10.11 建立可折叠的XML菜单	320
第11章 管理样式表	331
11.0 引言	331
11.1 从全局给元素指定样式表规则	333
11.2 为一组元素指定样式表规则	334
11.3 为单独的元素指定样式表规则	336
11.4 导入外部样式表	337
11.5 针对浏览器或操作系统导入样式表	338
11.6 在加载之后更改导入的样式表	340
11.7 启用/禁用样式表	341
11.8 切换元素的样式表	342
11.9 覆盖样式表规则	343
11.10 将任意内容转变成带有样式的元素	344
11.11 创建居中的body元素	345
11.12 读取有效样式表属性值	346
11.13 强制浏览器使用标准模式	348
第12章 静态内容的视觉效果	351
12.0 引言	351
12.1 预读图像	354
12.2 在鼠标移过时切换图像	356
12.3 减少JavaScript下载的切换图像	358
12.4 使用CSS减少切换图像的下载	362
12.5 动态改变图像大小	366
12.6 改变文本样式属性	367
12.7 让用户选择正文的文字大小	370
12.8 创建自定义链接样式	374
12.9 改变页面背景色和图像	375
12.10 隐藏和显示元素	378
12.11 调整元素透明度	379
12.12 创建过渡视觉效果	381
12.13 在canvas元素中绘制图表	385
第13章 HTML元素定位	392
13.0 引言	392
13.1 让元素在文档空间中可定位	397
13.2 定位元素与body元素的联系	398
13.3 通过DHTML函数库控制定位	400
13.4 选择div和span容器	407
13.5 调整定位元素的叠放顺序（Z-order）	409
13.6 使元素在另一个元素上方居中	410
13.7 在窗口或框架中使元素居中	412
13.8 判断未定位元素的位置	414
13.9 让元素沿直线运动	415
13.10 让元素沿圆形路径移动	419
13.11 创建可拖动的元素	421
13.12 滚动div的内容	426
13.13 创建自定义滚动条	432
13.14 创建滑块控件	445
第14章 创建动态内容	452
14.0 引言	452
14.1 在页面加载时写入动态内容	453
14.2 动态创建新的页面内容	454
14.3 包含外部HTML内容	456
14.4 嵌入XML数据	458
14.5 用JavaScript对象嵌入数据	460
14.6 将XML数据转换到HTML表格中	463
14.7 将JavaScript对象转换成HTML表格	466
14.8 将XML结点树转换成JavaScript对象	469
14.9 创建新的HTML元素	470
14.10 为新元素创建文本内容	473
14.11 创建混合的元素和文本结点	474
14.12 插入并填充iframe元素	476
14.13 获取HTML元素对象的引用	478
14.14 引用所有同类的元素	480
14.15 替换部分正文内容	482
14.16 删除正文内容	483
14.17 使用XMLHttpRequest进行REST请求	485
14.18 使用XMLHttpRequest进行SOAP调用	488
14.19 排序动态表格	491
14.20 遍历文档结点树	494
14.21 捕获文档内容	498
第15章 动态内容的应用	500
15.0 引言	500
15.1 显示随机格言	501
15.2 将用户选择区域转换为任意元素	504
15.3 自动查找替换正文内容	506
15.4 设计用户可以编辑的内容页面	512
15.5 创建幻灯片	515
15.6 自动滚动页面	523
15.7 根据用户的时间进行问候	524
15.8 显示距离圣诞节的天数	525
15.9 显示倒计时	527
15.10 创建基于日历的日期选择控件	534
15.11 显示动画进度条	542
附录A 键盘事件的字符值	548
附录B 键盘的按键编码值	550
附录C ECMAScript保留关键字	552
索引 	553
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript&DHTML Cookbook中文版
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript应用程序设计
目录
前言 1
第1章 JavaScript的革命时代 7
JavaScript的特性 8
性能 8
对象 8
语法 9
函数是一等公民 9
事件 9
复用性 10
结论 10
解构现代JavaScript应用 10
基础架构 10
JSON ——数据存储与通信 11
NoSQL数据库 12
RESTful JSON Web Services 12
第2章 函数 15
减少隐式副作用 16
函数声明 18
lambdas 22
立即执行函数表达式 23
方法上下文 25
函数作用域 27
变量提升 28
闭包 30
方法API的设计 33
参数命名 33
多态函数 34
范型编程与集合多态 37
链式调用与流式API 40
函数式编程 41
无状态函数(纯函数) 43
偏函数应用与函数加里化 44
异步操作 45
回调函数 46
Promises与Deferreds 46
小结 49
第3章 对象 50
过时的类继承 51
流式JavaScript 53
原型 56
原型代理 56
原型克隆 58
享元模式 60
创建对象 61
工厂函数 63
使用Stamps进行原型继承 66
小结 71
第4章 模块 73
模块化编程原则 74
接口 75
模块模式 79
AMD规范 81
加载器插件 82
CommonJS模块规范 84
npm包管理器 85
ES6模块规范 87
基于CommonJS、npm、Grunt与Browserify构建客户端应用 89
定义应用 89
特性实现 91
构建与部署 94
小结 98
第5章 关注点分离 99
客户端的关注点 100
模块管理 101
模型－视图－控制器 113
表现层与Dom操作 116
服务端关注点 123
Node与Express入门 124
在Node中组织代码 125
小结 132
第6章 访问控制 134
身份验证 134
密码认证 134
Credential类库 138
多因素身份验证 140
联合认证与授权认证 142
应用功能授权 144
应用授权 144
OAuth 2.0协议 145
小结 146
第7章 日志 147
调试 147
服务端数据监控 149
安全/入侵检测 149
审计 150
业务指标分析 150
传播力度 151
日志清单 151
应用请求日志 152
异常日志 156
日志输出示例 158
日志预警 161
跟踪业务指标（效果跟踪） 162
性能分析与优化 162
客户端事件记录 163
日志数据挖掘 164
小结 165
第8章 构建RESTful API 166
可用性 167
专一性 167
一致性 169
自描述的超媒体 177
功能可见性 177
超媒体即应用状态引擎 178
HTML：一种特别的API媒介类型 180
Jade 180
Jiron 182
响应式API 184
性能优化 186
小结 187
第9章 特性开关 188
组织特性 188
特性的规模 188
特性编组 189
特性的生命周期 189
开发阶段 190
预发布阶段 190
灰度测试 190
正式发布 190
默认激活 191
完整集成 191
客户端实现 191
小结 195
第10章 应用工程国际化 196
小结 198
附录A JavaScript编码风格指南 199
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript应用程序设计
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>高性能JavaScript
前言	I
第1章：加载和执行	1
1.1	脚本位置	2
1.2	组织脚本	4
1.3	无阻塞的脚本	5
1.3.1	延迟的脚本	5
1.3.2	动态脚本元素	6
1.3.3	XMLHttpRequest脚本注入	9
1.3.4	推荐的无阻塞模式	10
1.4	小结	14
第2章：数据访问	15
2.1	管理作用域	16
2.1.1	作用域链和标识符解析	16
2.1.2	标识符解析的性能	19
2.1.3	改变作用域链	21
2.1.4	动态作用域	24
2.1.5	闭包，作用域和内存	24
2.2	对象成员	27
2.2.1	原型	27
2.2.2	原型链	29
2.2.3	嵌套成员	30
2.2.4	缓存对象成员值	31
2.3	小结	33
第3章：DOM编程	35
3.1	浏览器中的DOM	35
3.1.1	天生就慢	36
3.2	DOM访问与修改	36
3.2.1	innerHTML对比DOM方法	37
3.2.2	节点克隆	41
3.2.3	HTML集合	42
3.2.4	遍历DOM	46
3.3	重绘与重排	50
3.3.1	重排何时发生？	51
3.3.2	渲染树变化的排队与刷新	51
3.3.3	最小化重绘和重排	52
3.3.4	缓存布局信息	56
3.3.5	让元素脱离动画流	56
3.3.6	IE和:hover	57
3.4	事件委托	57
3.5	小结	59
第4章：算法和流程控制	61
4.1	循环	61
4.1.1	循环的类型	61
4.1.2	循环性能	63
4.1.3	基于函数的迭代	67
4.2	条件语句	68
4.2.1	if-else对比switch	68
4.2.2	优化if-else	70
4.2.3	查找表	72
4.3	递归	73
4.3.1	调用栈限制	74
4.3.2	递归模式	75
4.3.3	迭代	76
4.3.4	Memoization	77
4.4	小结	79
第5章：字符串和正则表达式	81
5.1	字符串连接	81
5.1.1	加（+）和加等于（+=）操作符	82
5.1.2	数组项连接	84
5.1.3	String.prototype.concat	86
5.2	正则表达式优化	87
5.2.1	正则表达式工作原理	88
5.2.2	理解回溯	89
5.2.3	回溯失控	91
5.2.4	基准测试的说明	96
5.2.5	更多提高正则表达式效率的方法	96
5.2.6	何时不使用正则表达式	99
5.3	去除字符串首尾空白	99
5.3.1	使用正则表达式去首尾空白	99
5.3.2	不使用正则表达式去除字符串首尾空白	102
5.3.3	混合解决方案	103
5.4	小结	104
第6章：快速响应的用户界面	107
6.1	浏览器UI线程	107
6.1.1	浏览器限制	109
6.1.2	多久才算“太久”？	110
6.2	使用定时器让出时间片段	111
6.2.1	定时器基础	112
6.2.2	定时器的精度	114
6.2.3	使用定时器处理数组	114
6.2.4	分割任务	116
6.2.5	记录代码运行时间	118
6.2.6	定时器与性能	119
6.3	Web Workers	120
6.3.1	Worker运行环境	120
6.3.2	与Worker通信	121
6.3.3	加载外部文件	122
6.3.4	实际应用	122
6.4	小结	124
第7章：Ajax	125
7.1	数据传输	125
7.1.1	请求数据	125
7.1.2	发送数据	131
7.2	数据格式	134
7.2.1	XML	134
7.2.2	JSON	137
7.2.3	HTML	141
7.2.4	自定义格式	142
7.2.5	数据格式总结	144
7.3	Ajax性能指南	145
7.3.1	缓存数据	145
7.3.2	了解Ajax类库的局限	148
7.4	小结	149
第8章：编程实践	151
8.1	避免双重求值（Double Evaluation）	151
8.2	使用Object/Array直接量	153
8.3	不要重复工作	154
8.3.1	延迟加载	154
8.3.2	条件预加载	156
8.4	使用速度快的部分	156
8.4.1	位操作	156
8.4.2	原生方法	159
8.5	小结	161
第9章：构建并部署高性能JavaScript应用	163
9.1	Apache Ant	163
9.2	合并多个JavaScript文件	165
9.3	预处理JavaScript文件	166
9.4	JavaScript压缩	168
9.5	构建时处理对比运行时处理	170
9.6	JavaScript的HTTP压缩	170
9.7	缓存JavaScript文件	171
9.8	处理缓存问题	172
9.9	使用内容分发网络（CDN）	173
9.10	部署JavaScript资源	173
9.11	敏捷JavaScript构建过程	174
9.12	小结	175
第10章：工具	177
10.1	JavaScript性能分析	178
10.2	YUI Profiler	179
10.3	匿名函数	182
10.4	Firebug	183
10.4.1	控制台面板分析工具	183
10.4.2	Console API	184
10.4.3	网络面板	185
10.5	IE开发人员工具	186
10.6	Safari Web检查器（Web Inspector）	188
10.6.1	分析面板	189
10.6.2	资源面板	191
10.7	Chrome开发人员工具	192
10.8	脚本阻塞	193
10.9	Page Speed	194
10.10	Fiddler	196
10.11	YSlow	198
10.12	dynaTrace Ajax Edition	199
10.13	小结	202
索引	203
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>高性能JavaScript
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript性能优化
目　录
译者序
致　谢
第1章　什么是性能
1 1　Web性能
1 2　解析与渲染
1 2 1　渲染引擎
1 2 2　JavaScript引擎
1 3　运行时性能
1 4　为什么性能如此重要
1 5　工具与可视化
1 6　本书的目的
1 7　使用的技术以及拓展阅读
1 8　小结
第2章　测量和影响性能的工具与技术
2 1　Firebug
2 1 1　安装
2 1 2　使用
2 2　YSlow
2 2 1　安装
2 2 2　使用
2 3　WebPagetest
2 4　缩减
2 4 1　Minify
2 4 2　YUI Compressor
2 4 3　Closure Compiler
2 4 4　结果比较
2 4 5　分析与可视化
2 5　R入门
2 5 1　安装并运行R
2 5 2　R基础
2 5 3　使用R进行简单绘图
2 5 4　R的一个实例
2 5 5　使用apply()函数
2 6　小结
第3章　WPTRunner--使用WebPagetest进行自动化性能监测与可视化
3 1　架构
3 2　创建一个共享配置文件
3 3　解析测试结果
3 4　完成实例
3 5　数据解析
3 6　绘制加载时间
3 7　绘制负载和HTTP请求数
3 8　开源
3 9　小结
附：WebPagetest的创办人Patrick Meenan访谈
第4章　perfLogger--JavaScript基准测试和日志记录
4 1　架构
4 2　开始编写代码
4 2 1　计算测试结果
4 2 2　设置测试结果元数据
4 2 3　显示测试结果
4 2 4　保存数据
4 2 5　制定公有API
4 3　远程日志记录
4 4　一个示例页
4 5　为测试结果绘制图表
4 6　开源
4 7　小结
第5章　展望未来，性能的标准化
5 1　W3C的Web性能工作组
5 2　性能对象
5 2 1　性能定时
5 2 2　用perfLogger整合性能对象
5 3　升级日志功能
5 4　性能导航
5 5　性能内存
5 6　高分辨率时间
5 7　新数据可视化
5 8　小结
第6章　Web性能优化
6 1　优化页面的渲染瓶颈
6 1 1　脚本加载
6 1 2　异步
6 1 3　对比结果
6 2　惰性加载
6 2 1　惰性加载的艺术
6 2 2　惰性加载脚本
6 2 3　惰性加载CSS
6 2 4　为什么不惰性加载图片
6 3　小结
第7章　运行时性能
7 1　跨作用域的缓存变量和属性
7 1 1　新建文件
7 1 2　创建测试
7 1 3　结果可视化
7 1 4　属性引用示例
7 2　核心JavaScript与Frameworks的比较
7 2 1　jQuery与JavaScript比较：循环
7 2 2　jQuery与JavaScript比较：DOM访问
7 3　Eval函数的真正价值
7 4　DOM访问
7 4 1　使用队列完成DOM元素修改
7 4 2　使用队列添加新节点
7 5　嵌套循环的代价
7 6　小结
第8章　在性能、软件工程最佳实践和软件产品运行之间谋求平衡
8 1　在性能与可读性、模块化和良好设计之间谋求平衡
8 2　焦土化性能
8 2 1　内联函数
8 2 2　Closure Compiler
8 3　下一步：从实践到实际应用
8 3 1　Web性能监测
8 3 2　用工具检测你的网站
8 3 3　在测试实验环境中进行基准测试
8 3 4　分享你的发现
8 4　小结
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript性能优化
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript编程实战
第一部分　坚实的基础
第1章　最佳实践　　2
1.1 　松耦合　　2
1.1.1 　紧耦合的问题　　2
1.1.2 　松耦合的优势　　3
1.2 　JavaScript MVC和模板　　3
1.2.1 　MVC　　3
1.2.2 　模板　　5
1.3 　开发工具　　6
1.3.1 　WebKit开发人员工具　　6
1.3.2 　Weinre　　10
1.3.3 　版本控制　　12
1.3.4 　CSS预处理　　12
1.4 　测试　　12
1.4.1 　使用Grunt　　13
1.4.2 　使用QUnit　　17
1.5 　小结　　20
1.6 　补充资源　　21
第2章　库、框架与插件　　22
2.1 　选择恰当的JavaScript库　　22
2.1.1 　jQuery　　22
2.1.2 　Zepto　　24
2.1.3 　普通的DOM　　25
2.2 　使用框架　　27
2.2.1 　Bootstrap　　27
2.2.2 　jQuery UI　　28
2.2.3 　移动框架　　28
2.3 　其他脚本　　28
2.3.1 　Modernizr　　28
2.3.2 　HTML5 Shiv　　29
2.4 　HTML5样板　　29
2.5 　寻找jQuery插件　　30
2.5.1 　去哪里（以及不要去哪里）找　　30
2.5.2 　要找什么——一个十项检查列表　　30
2.6 　小结　　32
2.7 　补充资源　　32
第二部分　构建前端
第3章　Backbone.js　　36
3.1 　初识Backbone　　36
3.1.1 　Backbone是什么　　36
3.1.2 　为什么要用Backbone　　36
3.1.3 　Backbone基础　　37
3.1.4 　什么时候用Backbone　　37
3.1.5 　设置Backbone　　38
3.2 　Backbone中的模型　　38
3.2.1 　创建一个模型　　39
3.2.2 　创建计算属性　　39
3.2.3 　设置默认值　　39
3.2.4 　使用初始化函数　　40
3.2.5 　使用Backbone事件　　40
3.2.6 　模型的校验　　41
3.3 　使用Backbone中的集合　　42
3.3.1 　创建集合　　42
3.3.2 　创建集合事件　　43
3.4 　理解Backbone视图　　43
3.4.1 　创建视图　　44
3.4.2 　使用渲染函数　　44
3.4.3 　使用Backbone中的视图元素　　46
3.4.4 　使用嵌套视图　　49
3.5 　数据的保存及获取　　55
3.5.1 　与服务器上的模型同步　　55
3.5.2 　在Backbone中使用LocalStorage API　　58
3.5.3 　把集合保存在服务器上　　59
3.5.4 　使用Backbone.sync　　65
3.6 　使用路由控制器　　66
3.6.1 　路由如何使用　　66
3.6.2 　设置路由控制器　　67
3.6.3 　PushState与Hashchange　　69
3.7 　再谈事件　　70
3.7.1 　事件解绑定　　71
3.7.2 　手动触发事件　　71
3.7.3 　绑定“this”　　71
3.7.4 　All事件　　72
3.8 　操作集合　　73
3.8.1 　取出集合中的条目　　73
3.8.2 　集合排序　　74
3.9 　小结　　76
3.10 　补充资源　　77
第4章　使用JavaScript模板　　78
4.1 　认识模板　　78
4.1.1 　为什么使用模板　　78
4.1.2 　了解不同的模板库　　79
4.1.3 　做出正确的选择　　80
4.2 　使用Underscore模板　　81
4.2.1 　Underscore模板基础知识　　81
4.2.2 　重温模板的最佳实践　　83
4.2.3 　在模板中使用JavaScript　　85
4.3 　在Backbone中使用模板　　88
4.3.1 　不用模板设置模型和视图　　88
4.3.2 　用模板渲染视图　　89
4.4 　小结　　92
4.5 　补充资源　　92
第5章　创建表单　　93
5.1 　理解渐进式增强　　93
5.1.1 　渐进式增强方式　　93
5.1.2 　为什么要渐进式增强　　94
5.1.3 　决定支持哪个环境　　94
5.2 　让HTML5替你工作　　95
5.2.1 　HTML5的输入控件类型　　95
5.2.2 　交互特性　　102
5.3 　给老浏览器用Polyfill　　104
5.3.1 　寻找第三方Polyfill　　105
5.3.2 　编写自己的Polyfill　　105
5.4 　连接REST API　　112
5.4.1 　提交表单　　113
5.4.2 　构建通用函数　　114
5.5 　Backbone中的表单　　115
5.5.1 　设置表单模型　　115
5.5.2 　设置表单视图　　116
5.5.3 　将表单域保存到模型中　　117
5.5.4 　添加校验　　118
5.5.5 　清理模板　　123
5.5.6 　必填项　　124
5.5.7 　提交表单　　126
5.5.8 　合并代码　　128
5.6 　小结　　132
5.7 　补充资源　　132
第三部分　编写服务器端JavaScript
第6章　Node.js简介　　136
6.1 　为什么是Node　　136
6.1.1 　在实时程序中使用Node　　136
6.1.2 　Node的工作机制　　137
6.2 　安装Node　　138
6.2.1 　在Mac/Linux上安装　　138
6.2.2 　在Windows上安装　　139
6.2.3 　检查安装情况　　140
6.3 　Node入门　　140
6.3.1 　创建服务器　　140
6.3.2 　添加内容　　141
6.3.3 　打包　　141
6.3.4 　运行脚本　　142
6.3.5 　简化脚本　　143
6.3.6 　使用Node REPL　　143
6.4 　Node模块　　145
6.4.1 　引入模块　　145
6.4.2 　外部模块和NPM　　146
6.4.3 　寻找模块　　147
6.5 　Node 模式　　148
6.5.1 　模块和全局变量　　148
6.5.2 　异步模式　　152
6.5.3 　事件　　154
6.5.4 　子进程　　155
6.6 　小结　　158
6.7 　补充资源　　158
第7章　Express框架　　160
7.1 　Express入门　　160
7.1.1 　安装Express　　160
7.1.2 　创建Express程序　　160
7.2 　设置路由　　161
7.2.1 　已有路由　　162
7.2.2 　创建新的路由　　163
7.2.3 　POST、PUT和DELETE　　163
7.3 　渲染视图　　164
7.3.1 　启用Underscore模板　　164
7.3.2 　创建视图　　166
7.4 　处理表单数据　　172
7.4.1 　创建POST路由　　172
7.4.2 　将反馈发给模板　　173
7.5 　发封邮件　　178
7.5.1 　连到SMTP服务器上　　178
7.5.2 　构建Email消息　　179
7.5.3 　发送邮件　　179
7.5.4 　在结束之前　　180
7.6 　小结　　182
7.7 　补充资源　　182
第8章　MongoDB　　184
8.1 　NoSQL数据库有什么好处　　184
8.1.1 　扩展能力　　184
8.1.2 　简单性　　184
8.2 　MongoDB入门　　185
8.2.1 　安装MongoDB　　185
8.2.2 　运行MongoDB　　186
8.2.3 　安装MongoDB模块　　187
8.2.4 　创建数据库　　187
8.3 　MongoDB中的CRUD　　188
8.3.1 　创建集合　　188
8.3.2 　读取数据　　190
8.3.3 　更新数据　　194
8.3.4 　删除数据　　196
8.4 　Mongoose　　197
8.4.1 　Mongoose入门　　197
8.4.2 　创建模型　　198
8.4.3 　读取数据　　200
8.5 　数据库上的其他选择　　204
8.6 　小结　　204
8.7 　补充资源　　204
第四部分　挑战极限
第9章　用WebSockets构建实时程序　　208
9.1 　WebSockets的工作机制　　208
9.1.1 　轮询的问题　　208
9.1.2 　WebSockets方案　　209
9.2 　Socket.IO入门　　210
9.2.1 　服务器上的Socket.IO　　210
9.2.2 　客户端的Socket.IO　　211
9.3 　构建实时的聊天室　　212
9.3.1 　创建聊天室视图　　212
9.3.2 　将消息提交给服务器　　214
9.3.3 　在服务器端处理消息　　215
9.3.4 　在客户端显示新消息　　216
9.3.5 　添加Backbone.js结构　　217
9.3.6 　添加用户　　223
9.3.7 　添加时间戳　　225
9.3.8 　保存到MongoDB中　　227
9.3.9 　合并代码　　229
9.4 　小结　　233
9.5 　补充资源　　234
第10章　进入移动领域　　235
10.1 　搭建移动App　　235
10.1.1 　检测移动终端　　235
10.1.2 　设置移动端网站的样式　　237
10.1.3 　移动端框架　　238
10.2 　集成触屏　　238
10.2.1 　基本触摸事件　　239
10.2.2 　复杂的触摸手势　　239
10.3 　Geolocation　　248
10.3.1 　找到用户的位置　　248
10.3.2 　连接Google地图　　249
10.3.3 　追踪Geolocation的变化　　251
10.4 　电话号码和短信　　251
10.4.1 　静态的电话号码和SMS链接　　251
10.4.2 　用JavaScript拨打电话和发送短信　　252
10.5 　PhoneGap　　252
10.5.1 　PhoneGap的优与劣　　253
10.5.2 　PhoneGap入门　　254
10.5.3 　连接相机　　254
10.5.4 　连接通讯录　　254
10.5.5 　其他API　　255
10.6 　小结　　255
10.7 　补充资源　　255
第11章　JavaScript图形　　257
11.1 　画布基础　　257
11.1.1 　画出基本的形状　　258
11.1.2 　让画布动起来　　260
11.1.3 　画布中的鼠标事件　　261
11.2 　SVG基础　　261
11.2.1 　让SVG动起来　　262
11.2.2 　SVG鼠标事件　　262
11.2.3 　编码SVG　　263
11.3 　Rapha?l.js　　263
11.3.1 　作画路径　　264
11.3.2 　画曲线　　265
11.3.3 　样式　　266
11.3.4 　动画　　268
11.3.5 　鼠标事件　　269
11.4 　用gRapha?l做图表　　270
11.4.1 　饼图　　270
11.4.2 　柱状图　　271
11.4.3 　折线图　　273
11.5 　带WebGL的3D画布　　276
11.5.1 　Three.js简介　　276
11.5.2 　创建图像纹理　　280
11.5.3 　3D动画　　281
11.5.4 　添加鼠标事件　　282
11.5.5 　使用备选的2D画布　　283
11.6 　CSS中的3D变换　　284
11.7 　小结　　286
11.8 　补充资源　　286
第12章　推出你的程序　　288
12.1 　性能检查表　　288
12.1.1 　重点在哪　　288
12.1.2 　资源管理　　290
12.1.3 　动画优化　　291
12.1.4 　少做为妙　　295
12.1.5 　规避回流　　295
12.2 　部署　　296
12.2.1 　把静态资源部署在CDN上　　296
12.2.2 　把Node服务部署在EC2上　　297
12.3 　推出　　297
12.4 　补充资源　　297
附录A 　用LESS做CSS预处理　　299
A.1 　LESS简介　　299
A.1.1 　预处理的好处　　299
A.1.2 　安装LESS编译器　　300
A.1.3 　在服务器上编译　　300
A.2 　LESS的基础知识　　300
A.2.1 　变量　　300
A.2.2 　操作符　　301
A.2.3 　嵌套　　302
A.3 　函数和Mixin　　304
A.3.1 　函数　　304
A.3.2 　Mixin　　305
A.4 　文件结构　　306
A.4.1 　使用Import　　306
A.4.2 　文件结构示例　　306
A.4.3 　定制结构　　307
A.5 　小结　　307
A.6 　补充资源　　307

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript编程实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Ember.js实战
第一部分　Ember.js基础
第1章　发力雄心勃勃的Web应用　2
1.1　Ember.js适用场景　3
1.2　从静态页面到Ajax、再到全功能Web应用　4
1.2.1　异步Web应用的兴起　5
1.2.2　Ember.js模型　6
1.3　Ember.js概览　6
1.3.1　Ember.js特性　7
1.3.2　Ember.js应用程序结构　7
1.4　第一个Ember.js应用程序：记事本应用　9
1.4.1　记事本应用开发起步　11
1.4.2　创建命名空间与路由器　13
1.4.3　定义应用程序路由　14
1.4.4　创建并列出事项　16
1.4.5　选择并查看单条事项　19
1.4.6　删除事项　23
1.5　小结　28
第2章　Ember.js第2章 Ember.js风格　29
2.1　绑定对象　30
2.2　自动更新模板　33
2.3　计算属性　35
2.4　观察者模式　38
2.5　Ember.js对象模型　39
2.6　Ember.js实现各层间数据同步　41
2.7　小结　42
第3章　使用Ember.js路由器融合应用结构　43
3.1　Ember.js实战博客介绍　44
3.2　服务器端模型-视图-控制器模式的困境　46
3.2.1　Ember MVC模式　47
3.2.2　将各层组合起来　48
3.3　Ember路由器：Ember.js的状态图　49
3.4　Ember.js实战博客第一部分：博客索引页　52
3.4.1　创建博客路由器　52
3.4.2　添加视图和模板　55
3.4.3　显示博客文章列表　56
3.5　Ember.js实战博客第二部分：添加博客文章路由　59
3.6　依赖注入与Ember容器　65
3.6.1　使用needs属性连接控制器　65
3.6.2　通过Ember容器连接对象　66
3.7　小结　68
第4章　通过Handlebars.js自动更新模板　69
4.1　模板是什么　69
4.1.1　简单表达式　70
4.1.2　块表达式　71
4.2　内置块表达式　73
4.2.1　if及if-else块表达式　73
4.2.2　{{unless}}块表达式　74
4.2.3　{{with}}块表达式　74
4.2.4　Handlbars.js的注释　75
4.3　结合使用Handlebars.js与Ember.js　75
4.3.1　在index.html中定义模板　76
4.3.2　直接在Ember.TEMPLATES散列中定义模板　77
4.3.3　创建Handlebars.js模板支持的Ember.js视图　77
4.4　Ember.js提供的Handlebars.js表达式　78
4.4.1　{{view}}表达式　79
4.4.2　{{bind-attr}}表达式　80
4.4.3　{{action}}表达式　81
4.4.4　{{outlet}}表达式　83
4.4.5　{{unbound}}表达式　84
4.4.6　{{partial}}表达式　84
4.4.7　{{link-to}}表达式　85
4.4.8　{{render}}表达式　85
4.4.9　{{control}}表达式　86
4.4.10　{{input}}和{{textarea}}表达式　87
4.4.11　{{yield}}表达式　88
4.5　创建自己的表达式　88
4.6　小结　89
第二部分　创建雄心勃勃的真实Web应用
第5章　获取数据：使用Ember Data与服务器端交互　92
5.1　将Ember Data用作应用缓存　93
5.1.1　定义Ember Data模型　93
5.1.2　标识映射的Ember Data　94
5.1.3　模型对象间的关联　96
5.1.4　模型状态和事件　97
5.1.5　与后台通信　99
5.2　初尝Ember Data　100
5.2.1　从模型中获取数据　101
5.2.2　在模型中指定关联关系　101
5.3　Ember Data模型的关联　103
5.3.1　了解Ember Data模型的
关联关系　103
5.3.2　Ember Data端数据加载　106
5.4　自定义适配器和序列化器　108
5.4.1　编写自定义适配器，但保留默认的序列化器　109
5.4.2　编写自定义适配器和序列化器代码　111
5.4.3　自定义URL　113
5.5　小结　113
第6章　绕过Ember Data与服务器端第6章 绕过Ember Data与服务器端交互　115
6.1　Ember Fest介绍　115
6.1.1　了解应用程序的路由器　117
6.1.2　使用model()钩子函数获取数据　117
6.1.3　实现标识映射　118
6.2　获取数据　119
6.2.1　通过find()函数返回指定演讲数据　120
6.2.2　通过findAll()函数获取所有演讲数据　121
6.2.3　实现Emberfest.Talk模型类　121
6.3　数据持久化　124
6.3.1　通过createRecord()函数提交新的演讲　124
6.3.2　通过updateRecord()函数修改演讲数据　127
6.3.3　通过delete()函数删除演讲数据　130
6.4　小结　131
第7章　编写自定义第7章 编写自定义组件　133
7.1　关于Ember自定义组件　134
7.2　实现可选列表　134
7.2.1　定义selectable-list组件　137
7.2.2　selectable-list-item组件　138
7.2.3　delete-modal组件　140
7.2.4　通过已完成的三个组件删除具体项　141
7.3　实现树形菜单　144
7.3.1　树形菜单的数据模型　144
7.3.2　定义tree-menu组件　145
7.3.3　定义tree-menu-item和tree-menu-node组件　145
7.3.4　单选功能支持　147
7.4　小结　150
第8章　测试Ember.js应用第8章 测试Ember.js应用 程序　152
8.1　使用QUnit和PhantomJS进行单元测试　153
8.1.1　Qunit介绍　154
8.1.2　使用PhantomJS在命令行执行测试　156
8.1.3　集成QUnit和PhantomJS　157
8.2　使用QUnit编写简单的Ember.js单元测试　160
8.3　集成测试　164
8.3.1　Sinon介绍　165
8.3.2　添加新告警信息的集成测试　166
8.4　通过Ember.Instrumentation进行性能测试　168
8.5　小结　169
第三部分　高级Ember.js主题
第9章　使用Mozilla Persona进行第9章 使用Mozilla Persona进行认证　172
9.1　集成第三方认证系统　173
9.1.1　首次登录及注册　173
9.1.2　通过第三方认证提供者登录Montric　177
9.2　通过HTTP cookie登录用户　180
9.3　小结　183
第10章　Ember.js运行循环——Backburner.js　185
10.1　什么是运行循环？　186
10.1.1　Ember.js TodoMVC应用程序介绍　186
10.1.2　解释Ember.js运行循环　187
10.2　在运行循环框架下执行代码　191
10.2.1　在当前运行循环中执行代码　191
10.2.2　在下一个运行循环中执行代码　192
10.2.3　在后续运行循环中执行代码　193
10.2.4　在指定队列执行代码　194
10.2.5　通过运行循环执行重复任务　196
10.3　小结　197
第11章　打包与第11章 打包与部署　198
11.1　理解JavaScript应用程序打包和装配　199
11.1.1　选择目录结构　199
11.1.2　组织自己编写的源代码　200
11.1.3　组织非JavaScript资源　202
11.1.4　Ember.js应用程序装配过程　203
11.2　使用构建工具Grunt.js　204
11.2.1　为Montric应用程序引导Grunt.js构建系统　205
11.2.2　连接JavaScript代码　206
11.2.3　抽取插件配置代码到单独文件　208
11.2.4　Lint常见错误　209
11.2.5　预编译Handlebars模板　211
11.2.6　压缩源文件　214
11.2.7　Grunt.js的优缺点　217
11.3　小结　218
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Ember.js实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>编写可测试的JavaScript代码
第1章 可测试的JavaScript 1
1.1 现有技术 2
1.1.1 敏捷开发 3
1.1.2 测试驱动开发 4
1.1.3 行为驱动开发 5
1.1.4 哪种方式最好？ 6
1.2 代码是让人用的 7
1.2.1 为何要编写可测试的代码 7
1.2.2 什么是可测试的代码 9
1.2.3 如何编写可测试的代码 10
1.3 卓越的应用程序代码 11
1.3.1 测试 11
1.3.2 调试 12
1.4 小结 12
第2章 复杂度 13
2.1 代码大小 14
2.2 JSLint 20
2.3 圈复杂度 24
2.4 重用 28
2.5 扇出 30
2.6 扇入 40
2.7 耦合 40
2.7.1 内容耦合 41
2.7.2 公共耦合 41
2.7.3 控制耦合 41
2.7.4 印记耦合 42
2.7.5 数据耦合 42
2.7.6 无耦合 42
2.7.7 实例化 42
2.8 耦合性度量 43
2.9 现实中的耦合 43
2.9.1 测试耦合代码 46
2.10 依赖注入 47
2.11 注释 50
2.11.1 YUIDoc 50
2.11.2 JSDoc 52
2.11.3 Docco/Rocco 54
2.12 人工测试 56
2.13 小结 58
第3章 基于事件的架构 59
3.1 基于事件编程的好处 59
3.2 事件集线器 60
3.2.1 使用事件集线器 62
3.2.2 事件的响应 67
3.2.3 基于事件的架构与MVC架构 69
3.2.4 基于事件的架构与面向对象编程 69
3.2.5 基于事件的架构与软件即服务 70
3.3 Web应用程序 70
3.4 测试基于事件的架构 71
3.5 基于事件架构的说明 75
3.5.1 可伸缩性 75
3.5.2 广播 75
3.5.3 运行时检测 75
3.5.4 安全性 76
3.5.5 状态 76
3.6 更智能的集线器：事件交换机 77
3.6.1 部署 77
3.6.2 一种实现 79
3.6.3 会话 82
3.6.4 可扩展性 82
3.7 小结 83
第4章 单元测试 84
4.1 单元测试框架 84
4.2 开始编写测试 85
4.3 编写好的单元测试 87
4.3.1 隔离 88
4.3.2 范围 88
4.3.3 定义函数 89
4.3.4 正向测试 91
4.3.5 负向测试 91
4.3.6 代码覆盖率 92
4.4 真实场景测试 92
4.4.1 依赖项 92
4.4.2 异步测试 95
4.5 运行客户端JavaScript单元测试 97
4.5.1 PhantomJS 97
4.5.2 Selenium 102
4.6 运行服务端JavaScript单元测试 109
4.6.1 Jasmine 110
4.7 小结 116
第5章 代码覆盖率 117
5.1 覆盖率基础理论 117
5.2 代码覆盖率数据 120
5.3 实际例子 121
5.3.1 转换instrumented文件 121
5.3.2 Instrumented文件剖析 122
5.4 练习/部署 123
5.4.1 客户端JavaScript 123
5.4.2 服务端JavaScript 125
5.5 持久化覆盖率信息 129
5.5.1 单元测试 129
5.5.2 集成测 130
5.6 生成输出 131
5.7 聚合 132
5.8 隐藏的文件 134
5.9 覆盖率目标 137
5.10 小结 138
第6章 集成测试、性能测试、负载测试 140
6.1 集成测试 140
6.1.1 Selenium 141
6.1.2 CasperJS 147
6.2 性能测试 150
6.2.1 生成HAR文件 150
6.2.2 查看HAR文件 156
6.2.3 浏览器性能测试 158
6.3 负载测试 160
6.3.1 浏览器负载测试 161
6.4 跟踪资源利用率 165
6.4.1 客户端跟踪 167
6.4.2 服务端跟踪 173
6.5 小结 176
第7章 调试 177
7.1 浏览器内调试 177
7.1.1 Firefox 179
7.1.2 Chrome 182
7.1.3 Safari 185
7.1.4 Internet Explorer 187
7.2 Node.js调试 187
7.3 远程调试 190
7.3.1 Chrome 191
7.3.2 PhantomJS 196
7.3.3 Firefox 197
7.4 移动调试 198
7.4.1 Android 4 198
7.4.2 iOS 6 200
7.4.3 Adobe Edge Inspect 202
7.4.4 其他方面的移动调试选择 205
7.5 生产环境调试 206
7.5.1 最小化代码 206
7.5.2 Source Map 207
7.6 小结 212
第8章 自动化 213
8.1 自动化什么内容 213
8.2 何时进行自动化 213
8.3 如何进行自动化 214
8.3.1 含有持续集成的自动化 214
8.3.2 开发环境自动化 215
8.3.3 构建环境自动化 225
8.3.4 部署 245
8.4 小结 246
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>编写可测试的JavaScript代码
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML、XHTML、CSS与JavaScript入门经典
第1章 为Web结构化文档
第2章 链接和导航
第3章 图像、音频和视频
第4章 表格
第5章 表单
第6章 框架
第7章 层叠样式表
第8章 更多层叠样式表
第9章 网页布局
第10章 设计问题
第11章 学习Java Script
第12章 使用Java Script
第13章 在Web上发布网站
第14章 核对清单
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML、XHTML、CSS与JavaScript入门经典
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript详解（第2版）
第1 章  JavaScript 简介　　1
1.1  JavaScript 是什么　　1
1.2  JavaScript 不是什么　　2
1.3  JavaScript 的用处　　3
1.4  JavaScript 及其在Web 页面中的位置　　3
1.5  Ajax 是什么　　5
1.6  JavaScript 是什么样子的　　6
1.7  JavaScript 及其在Web 开发中承担的角色　　7
1.8  JavaScript 和事件　　9
1.9  标准化JavaScript 和W3C　　11
1.9.1  JavaScript 对象　　12
1.9.2  文档对象模型　　12
1.10  关于浏览器　　13
1.10.1  JavaScript 的版本　　14
1.10.2  你的浏览器遵循标准吗　　16
1.10.3  浏览器是否已启用JavaScript 　　16
1.11  JavaScript 代码放在哪儿　　17
1.12  验证标签　　20
1.12.1  W3C 验证工具　　21
1.12.2  Validome 验证工具　　21
1.13  应知应会　　22
练习　　23
第2 章  脚本的安装　　24
2.1  HTML 文档与JavaScript　　24
2.2  语法细节　　27
2.2.1  区分大小写问题　　27
2.2.2  自由形式及保留字　　27
2.2.3  语句及分号　　28
2.2.4  注释　　28
2.2.5  <script>标签　　29
2.3  生成HTML 并输出显示　　30
2.3.1  字符串及字符串串联　　30
2.3.2  write()及writeln()方法　　31
2.4  关于调试　　33
2.5  调试工具　　33
2.5.1  Firefox 　　　33
2.5.2  在Internet Explorer 8 中调试　　36
2.5.3  JavaScript:URL 协议　　37
2.6  JavaScript 与旧浏览器或受限的浏览器　　37
2.7  应知应会　　40
练习　　41
第3 章  数据类型、字面量和变量　　42
3.1  数据类型　　42
3.1.1  基本数据类型　　42
3.1.2  复合数据类型　　47
3.2  变量　　47
3.2.1  有效变量名　　48
3.2.2  声明和初始化变量　　48
3.2.3  动态或宽松类型语言　　50
3.2.4  变量作用域　　52
3.2.5  变量的拼接　　52
3.3  常量　　54
3.4  要注意的bug　　55
3.5  应知应会　　55
练习　　56
第4 章  对话框　　57
4.1  与用户交互　　57
4.1.1  alert()方法　　57
4.1.2  prompt()方法　　59
4.1.3  confirm()方法　　61
4.2  应知应会　　62
练习　　63
第5 章  运算符　　64
5.1  JavaScript 运算符和表达式　　64
5.1.1  赋值运算符　　64
5.1.2  优先级和结合性　　65
5.2  运算符类型　　68
5.2.1  算术运算符　　68
5.2.2  快捷赋值运算符　　69
5.2.3  递增运算符和递减运算符　　70
5.2.4  拼接运算符　　72
5.2.5  比较运算符　　73
5.2.6  逻辑运算符　　78
5.2.7  条件运算符　　83
5.2.8  位运算符　　84
5.3  数字、字符串还是布尔值？数据类型转换　　87
5.3.1  parseInt()函数　　88
5.3.2  parseFloat()函数　　90
5.3.3  eval()函数　　91
5.4  特殊运算符　　92
5.5  应知应会　　93
练习　　93
第6 章  条件选择　　95
6.1  控制结构、块及复合语句　　95
6.2  条件　　95
6.2.1  if/else　　96
6.2.2  if/else if 　　98
6.2.3  switch　　99
6.3  循环　　102
6.3.1  while 循环　　102
6.3.2  do/while 循环　　103
6.3.3  for 循环　　104
6.3.4  for/in 循环　　105
6.3.5  使用break 和continue控制循环　　105
6.3.6  嵌套循环及标签　　107
6.4  应知应会　　 109
练习　　 110
第7 章  函数　　 112
7.1  什么是函数　　112
7.1.1  函数声明和调用　　 112
7.1.2  返回值　　119
7.1.3  匿名函数变量　　 121
7.1.4  闭包　　 124
7.1.5  递归　　 125
7.1.6  函数是对象　　 129
7.2  调试技巧　　129
7.2.1  函数语法　　 129
7.2.2  使用try/catch 和throw捕捉异常　　131
7.3  应知应会　　 134
练习　　 134
第8 章  对象　　136
8.1  什么是对象　　 136
8.1.1  对象及点语法　　 137
8.1.2  使用构造函数创建对象　　137
8.1.3  对象的属性　　139
8.1.4  对象的方法　　140
8.2  类和用户自定义函数　　 142
8.2.1  什么是类　　142
8.2.2  什么是this 　　142
8.2.3  内联函数作为对象的方法　　 145
8.3  对象字面量　　146
8.4  操作对象　　 149
8.4.1  with 关键字　　149
8.4.2  for/in 循环　　151
8.5  通过原型扩展对象　　152
8.5.1  使用prototype 属性为对象添加属性　　 154
8.5.2  原型查找链　　155
8.5.3  使用原型为对象添加方法　　157
8.5.4  所有对象都有的属性和方法　　159
8.5.5  创建子类及继承　　162
8.6  应知应会　　164
练习　　164
第9 章  JavaScript 核心对象　　166
9.1  什么是核心对象　　166
9.2  数组对象　　166
9.2.1  数组的声明及填充　　167
9.2.2  Array 对象属性　　171
9.2.3  关联数组　　173
9.2.4  嵌套数组　　175
9.3  数组方法　　178
9.4  Date 对象　　184
9.4.1  Date 对象方法的使用　　185
9.4.2  操纵日期及时间　　187
9.4.3  通过prototype 属性自定义Date 对象　　188
9.5  Math 对象　　190
9.5.1  向上取整及向下取整　　192
9.5.2  生成随机数　　193
9.5.3  wrapper 对象　　194
9.5.4  String 对象　　195
9.5.5  Number 对象　　205
9.5.6  Boolean 对象　　207
9.5.7  Function 对象　　209
9.5.8  再论关键字with 　　210
9.6  应知应会　　211
练习　　212
第10 章  浏览器对象模型：BOM　　214
10.1  JavaScript 及浏览器对象模型　　214
10.1.1  navigator 对象的使用　　215
10.1.2  window 对象的使用　　225
10.1.3  创建定时事件　　231
10.1.4  Frame 的使用　　240
10.1.5  location 对象　　249
10.1.6  history 对象　　253
10.1.7  screen 对象　　256
10.2  应知应会　　　258
练习　　258
第11 章  表单及输入设备的使用　　259
11.1  文档对象模型及传统DOM 0　　259
11.2  JavaScript 层次结构　　259
11.3  关于HTML 表单　　265
11.4  JavaScript 与form 对象　　271
11.4.1  为表单及其输入类型（控件）命名　　271
11.4.2  表单中的传统DOM 　　274
11.4.3  为表单及按钮命名　　277
11.4.4  提交填写完成的表单　　281
11.4.5  this 关键字　　289
11.4.6  submit()及reset()方法　　291
11.5  输入设备（控件）编程　　295
11.6  应知应会　　324
练习　　324
第12 章  图片与链接　　326
12.1  图片简介　　326
12.1.1  重温HTML 中的图片　　326
12.1.2  JavaScript 中的image对象　　328
12.2  回顾链接　　329
12.3  图片地图　　333
12.3.1  使用src 属性动态替换图片　　336
12.3.2  预加载图片和Image()构造函数　　339
12.3.3  随机显示图片和onClick事件　　341
12.3.4  图片地图与JavaScript　　343
12.4  缩放图片以适应窗口　　345
12.5  幻灯简介　　347
12.5.1  带有控制按钮的简单幻灯展示　　348
12.5.2  可单击的图片幻灯展示　　351
12.6  动画和定时器　　354
12.6.1  变换图片位置　　354
12.6.2  改变图片的高度和宽度属性　　355
12.7  应知应会　　356
练习　　357
第13 章  事件处理　　358
13.1  事件处理函数介绍　　358
13.2  事件处理的内联模型　　358
13.2.1  HTML 和事件处理函数　　359
13.2.2  设置事件处理函数　　361
13.2.3  返回值　　363
13.2.4  JavaScript 对象方法和事件　　364
13.3  处理窗口事件或框架事件　　366
13.3.1  onLoad 和onUnLoad事件　　366
13.3.2  onFocus 和onBlur 事件函数　　368
13.3.3  onResize 事件处理函数　　371
13.4  鼠标事件处理　　373
13.4.1  怎样使用鼠标事件　　374
13.4.2  鼠标事件和图像——翻转　　376
13.4.3  通过鼠标事件创建幻灯片　　376
13.5  处理链接事件　　379
13.6  处理表单事件　　380
13.6.1  按钮　　381
13.6.2  表单和按钮中的this 关键字　　382
13.6.3  表单和onClick 事件处理函数　　383
13.6.4  表单和onFocus、onBlur事件处理函数　　384
13.6.5  表单和onChange 事件处理函数　　386
13.6.6  表单和onSubmit 事件处理函数　　387
13.6.7  HTML 事件处理函数和JavaScript 事件方法　　391
13.6.8  onError 事件　　393
13.7  event 对象　　394
13.7.1  捕获和冒泡（滴漏和冒泡） 　 394
13.7.2  事件对象属性　　 395
13.7.3  使用事件对象属性　　396
13.7.4  将事件传递给JavaScript函数　　 398
13.7.5  鼠标坐标　　 400
13.7.6  按键事件　　 404
13.8  处理事件的脚本模型　　407
13.9  应知应会　　 412
练习　　 412
第14 章  CSS 与JavaScript　　 414
14.1  什么是CSS 　　 414
14.2  什么是样式表　　 414
14.2.1  什么是兼容CSS 的浏览器　　 415
14.2.2  样式表的工作原理　　415
14.3  CSS 程序结构　　 417
14.3.1  注释　　 417
14.3.2  组合　　 417
14.4  常用样式表属性　　 418
14.4.1  计量单位　　 420
14.4.2  使用颜色　　 421
14.4.3  使用字体　　 423
14.4.4  使用文本　　 425
14.4.5  使用背景和图片　　 427
14.4.6  使用边距和边框　　 429
14.5  样式表类型　　 432
14.5.1  嵌入式样式表和<style>标签　　 432
14.5.2  内联样式和<style>属性　　 435
14.6  链接的样式表　　 436
14.6.1  <link>标签　　 436
14.6.2  使用@import 导入　　 438
14.7  创建样式类　　 438
14.7.1  用类设定简单表格样式　　439
14.7.2  使用特定类选择器　　 441
14.8  ID 选择器和ID 属性　　 443
14.9  使用<span>标签重写或添加样式　　 444
14.9.1  <span>标签和style属性　　445
14.9.2  <span>标签和class属性　　446
14.9.3  继承和上下文选择器　　447
14.10  定位元素和层　　449
14.10.1  绝对定位　　450
14.10.2  <div>容器　　455
14.10.3  绝对定位　　455
14.10.4  相对定位　　457
14.10.5 z  索引和三维　　458
14.11  如何与JavaScript 融合　　459
14.11.1  什么是DHTML 　　459
14.11.2  JavaScript 如何操作样式表　　459
14.11.3  style 对象　　462
14.11.4  className 属性　　470
14.11.5  下拉菜单和提示框　　472
14.12  应知应会　　477
练习　　478
第15 章  W3C DOM 与JavaScript　　479
15.1  W3C DOM　　479
15.2  理解DOM 节点　　480
15.3  节点　　481
15.3.1  父节点和子节点　　482
15.3.2  兄弟节点　　482
15.3.3  nodeName 和nodeType属性　　483
15.3.4  空白bug　　483
15.4  遍历DOM　　484
15.5  DOM 查看器　　486
15.6  查询DOM 的快捷方式　　487
15.6.1  document.getElement-ById()方法　　487
15.6.2  document.getElements-ByTagName()方法　　490
15.6.3  对应于HTML 属性的JavaScript 属性　　491
15.7  DOM 的修改（追加、复制和删除节点） 　　493
15.7.1  innerHTML 属性和元素的内容　　493
15.7.2  更改元素的内容　　495
15.7.3  使用DOM 创建新元素　　496
15.7.4  在节点前插入　　498
15.7.5  为节点创建属性　　499
15.7.6  DOM 回顾：创建博客　　501
15.7.7  使用DOM 创建表格　　504
15.7.8  复制节点　　507
15.7.9  删除节点　　512
15.7.10  利用节点实现文本滚动　　515
15.8  事件处理和DOM　　517
15.8.1  HTML 内联方式　　517
15.8.2  脚本方法　　517
15.8.3  DOM 方法　　518
15.8.4  冒泡和捕获　　518
15.9  W3C 模型中的事件监听器　　522
15.9.1  添加事件　　522
15.9.2  注册多个事件　　524
15.9.3  删除事件　　526
15.9.4  Microsoft Internet Explorer中的事件监听器　 　528
15.9.5  回顾事件属性　　530
15.10  不唐突的JavaScript 　　533
15.11  应知应会　　539
练习　　540
第16 章  cookie　　543
16.1  什么是cookie 　　543
16.1.1  cookie 的组成　　545
16.1.2  cookie 的属性　　546
16.2  使用JavaScript 创建cookie 　　547
16.2.1  cookie 对象　　548
16.2.2  设置cookie 属性　　548
16.2.3  创建cookie 　　550
16.2.4  从服务器获取cookie 信息　　552
16.2.5  删除cookie 　　554
16.2.6  使用浏览器删除cookie 　　556
16.3  应知应会　　557
练习　　557
第17 章  正则表达式和模式匹配　　558
17.1  什么是正则表达式　　558
17.2  创建正则表达式　　560
17.2.1  字面量方式　　560
17.2.2  构造函数　　560
17.2.3  测试正则表达式　　561
17.2.4  RegExp 对象的属性　　564
17.3  使用字符串的正则表达式方法　　566
17.3.1  match()方法　　566
17.3.2  search()方法　　567
17.3.3  replace()方法　　568
17.3.4  split()方法　　569
17.4  获取控制——元字符　　571
17.4.1  点元字符　　574
17.4.2  字符类　　575
17.4.3  元符号　　578
17.4.4  重复模式匹配元字符　　580
17.4.5  锚元字符　　587
17.4.6  或模式　　592
17.5  用正则表达式验证表单　　596
17.5.1  检查空字段　　596
17.5.2  检查邮政编码　　598
17.5.3  检查字母数据　　600
17.5.4  删除多余字符　　601
17.5.5  有效社会安全号码验证　　604
17.5.6  验证电话号码　　606
17.5.7  验证电子邮件地址　　608
17.5.8  验证信用卡号　　610
17.5.9  汇总　　 616
17.6  应知应会　　 619
练习　　 619
第18 章  Ajax(及JSON)简介　　 621
18.1  为什么要用Ajax 　　 621
18.2  为什么最后才提到Ajax　　623
18.3  建立Ajax 通信的步骤　　 623
18.3.1  步骤1：创建XMLHttp-Request 对象　　 623
18.3.2  步骤2：初始化对象　　625
18.3.3  向服务器发送请求　　628
18.3.4  步骤3：监控服务器响应状态　　 628
18.3.5  使用回调函数处理响应　　 630
18.3.6  浏览器缓存问题　　 632
18.4  结合起来　　632
18.4.1  使用Ajax 从文件中获取文本　　 638
18.4.2  使用Ajax 从文件中获取XML 　　641
18.4.3  Ajax 和表单　　 644
18.5  Ajax 和JSON 　　 651
18.5.1  JSON 数据结构　　 652
18.5.2  使用JSON 的步骤　　 652
18.5.3  JSON 综合示例　　655
18.5.4  解决eval()安全问题　　 658
18.6  使用Firebug 调试Ajax 　　 662
18.7  应知应会　　 664
练习　　 665
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript详解（第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Effective Javascript
推荐序
前言
致谢
关于作者
Chapter 1： Accustoming Yourself to JavaScript
Item 1： Know Which JavaScript You Are Using
Item 2： Understand JavaScript's Floating—Point Numbers
Item 3： Beware of Implicit Coercions
Item 4： Prefer Primitives to Object Wrappers
Item 5： Avoid using == with Mixed Types
Item 6： Learn the Limits of Semicolon Insertion
Item 7： Think of Strings As Sequences of 16—Bit Code Units
Chapter 2： Variable Scope
Item 8： Minimize Use of the Global Object
Item 9： Always Declare Local Variables
Item 10： Avoid with
Item 11： Get Comfortable with Closures
Item 12： Understand Variable Hoisting
Item 13： Use Immediately Invoked Function Expressions to Create Local Scopes
Item 14： Beware of Unportable Scoping of Named Function Expressions
Item 15： Beware of Unportable Scoping of Block—Local Function Declarations
Item 16： Avoid Creating Local Variables with eval
Item 17： Prefer Indirect eval to Direct eval
Chapter 3： Working with Functions
Item 18： Understand the Difference between Function， Method， and Constructor Calls
Item 19： Get Comfortable Using Higher—Order Functions
Item 20： Use call to Call Methods with a Custom Receiver
Item 21： Use apply to Call Functions with Different Numbers of Arguments
Item 22： Use arguments to Create Variadic Functions
Item 23： Never Modify the arguments Object
Item 24： Use a Variable to Save a Reference to arguments
Item 25： Use bind to Extract Methods with a Fixed Receiver
Item 26： Use bind to Curry Functions
Item 27： Prefer Closures to Strings for Encapsulating Code
Item 28： Avoid Relying on the toStri ng Method of Functions
Item 29： Avoid Nonstandard Stack Inspection Properties
Chapter 4： Objects and Prototypes
Item 30： Understand the Difference between prototype，getPrototypeOf， and__proto__
Item 31： Prefer Object.getPrototype0f to __proto__
Item 32： Never Modify __proto__
Item 33： Make Your Constructors new—Agnostic
Item 34： Store Methods on Prototypes
Item 35： Use Closures to Store Private Data
Item 36： Store Instance State Only on Instance Objects
Item 37： Recognize the Implicit Binding of this
Item 38： Call Superclass Constructors from Subclass Constructors
Item 39： Never Reuse Superclass Property Names
Item 40： Avoid Inheriting from Standard Classes
Item 41： Treat Prototypes As an Implementation Detail
Item 42： Avoid Reckless Monkey—Patching
Chapter 5： Arrays and Dictionaries
Item 43： Build Lightweight Dictionaries from Direct Instances of Object
Item 44： Use null Prototypes to Prevent Prototype Pollution
Item 45： Use hasOwnProperty to Protect Against Prototype Pollution
Item 46： Prefer Arrays to Dictionaries for Ordered Collections
Item 47： Never Add Enumerable Properties to Object.prototype
Item 48： Avoid Modifying an Object during Enumeration
Item 49： Prefer for Loops to for...in Loops for Array Iteration
Item 50： Prefer Iteration Methods to Loops
Item 51： Reuse Generic Array Methods on Array—Like Objects
Item 52： Prefer Array Literals to the Array Constructor
Chapter 6： Library and API Design
Item 53： Maintain Consistent Conventions
Item 54： Treat undefined As "No Value"
Item 55： Accept Options Objects for Keyword Arguments
Item 56： Avoid Unnecessary State
Item 57： Use Structural Typing for Flexible Interfaces
Item 58： Distinguish between Array and Array—Like
Item 59： Avoid Excessive Coercion
Item 60： Support Method Chaining
Chapter 7： Concurrency
Item 61： Don't Block the Event Queue on I／O
Item 62： Use Nested or Named Callbacks for Asynchronous Sequencing
Item 63： Be Aware of Dropped Errors
Item 64： Use Recursion for Asynchronous Loops
Item 65： Don't Block the Event Queue on Computation
Item 66： Use a Counter to Perform Concurrent Operations
Item 67： Never Call Asynchronous Callbacks Synchronously
Item 68： Use Promises for Cleaner Asynchronous Logic
Index
Index
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Effective Javascript
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript基础教程
第1章 了解javascript    1
1.1 javascript是什么	1
1.2 javascript不是java	2
1.3 javascript的起源	2
1.4 javascript可以做什么	3
1.5 javascript不能做什么	3
1.6 ajax是什么	4
1.7 组合式（snap-together）语言	5
1.7.1 对象	5
1.7.2 属性	6
1.7.3 方法	6
1.7.4 将这些成分组合在一起	6
1.7.5 dom简介	6
1.8 处理事件	7
1.9 值和变量	8
1.10 赋值和比较	9
1.10.1 赋值	9
1.10.2 比较	9
1.11 编写对javascript友好的html	10
1.11.1 结构、表现和行为	10
1.11.2 div和span	10
1.11.3 class和id	11
1.12 要使用什么工具	11
第2章 开始	13
2.1 将脚本放在哪里	13
2.2 关于函数	14
2.3 使用外部脚本	15
2.4 在脚本中添加注释	16
2.5 向用户发出警告	17
2.6 确认用户的选择	19
2.7 提示用户	20
2.8 用链接对用户进行重定向	22
2.9 使用javascript改进链接	24
2.10 使用多级条件	28
2.11 处理错误	30
第3章 第一个web应用程序	33
3.1 用循环进行重复操作	33
3.2 将值传递给函数	37
3.3 探测对象	38
3.4 处理数组	40
3.5 处理有返回值的函数	42
3.6 更新数组	43
3.7　使用do/while循环	44
3.8 以多种方式调用脚本	45
3.9 组合使用javascript和css	47
3.10 检查状态	50
3.11 处理字符串数组	55
第4章 处理图像	59
4.1 创建翻转器	59
4.2 创建更有效的翻转器	61
4.3 构建三状态翻转器	65
4.4 由链接触发翻转器	67
4.5 让多个链接触发一个翻转器	69
4.6 处理多个翻转器	71
4.7 创建循环的广告条	74
4.8 在循环广告条中添加链接	76
4.9 建立循环式幻灯片	78
4.10 显示随机图像	80
4.11 随机开始循环显示图像	81
第5章 框架	83
5.1 防止页面显示在框架中	84
5.2 迫使页面显示在框架中	85
5.3 迫使站点显示在框架中	86
5.4 设置目标	89
5.5 创建和加载动态框架	90
5.6 在框架之间共享函数..	92
5.7 同时加载多个框架	94
5.8 处理iframe	95
5.9 用javascript加载iframe	97
第6章 操作浏览器窗口	99
6.1 打开新窗口	99
6.2 将不同的内容加载进窗口中	102
6.3 打开多个窗口	103
6.4 从一个窗口更新另一个窗口	104
6.5 关闭窗口	107
6.6 把窗口放在指定的位置	109
第7章 表单处理	112
7.1 选择并转移导航菜单	113
7.2 动态地改变菜单	116
7.3 建立必须填写的字段	118
7.4 根据其他字段对字段进行检查	123
7.5 标识有问题的字段	125
7.6 准备进行表单验证	127
7.7 处理单选按钮	130
7.8 用一个字段设置另一个字段	134
7.9 检验zip编码	136
7.10 验证电子邮件地址	140
第8章 表单和正则表达式	146
8.1 用正则表达式验证电子邮件地址	146
8.2 验证文件名	151
8.3 提取字符串	153
8.4 对字符串进行格式化	155
8.5 对字符串进行格式化和排序	159
8.6 对字符串进行格式化和验证	160
8.7 使用正则表达式替换元素	162
第9章 处理事件	165
9.1 窗口事件处理	165
9.1.1 onload事件	165
9.1.2 onunload事件	168
9.1.3 onresize事件	168
9.1.4 onmove事件	170
9.1.5 onabort事件	170
9.1.6 onerror事件	170
9.1.7 onfocus事件	170
9.1.8 onblur事件	171
9.2 鼠标事件处理	172
9.2.1 onmousedown事件	172
9.2.2 onmouseup事件	175
9.2.3 onmousemove事件	175
9.2.4 onmouseover事件	177
9.2.5 onmouseout事件	178
9.2.6 ondblclick事件	178
9.2.7 onclick事件	179
9.3 表单事件处理	179
9.3.1 onsubmit事件	179
9.3.2 onreset事件	179
9.3.3 onchange事件	179
9.3.4 onselect事件	179
9.3.5 onclick事件	180
9.3.6 onblur事件	180
9.3.7 onfocus事件	182
9.4 键事件处理	183
9.4.1 onkeydown事件	183
9.4.2 onkeyup事件	185
9.4.3 onkeypress事件	185
第10章 javascript和cookie	186
10.1 建立第一个cookie	186
10.2 读取cookie	189
10.3 显示cookie	190
10.4 使用cookie作为计数器	191
10.5 删除cookie	193
10.6 处理多个cookie	195
10.7 显示新内容提醒信息	197
第11章 对象和dom	201
11.1 关于节点操纵	201
11.1.1 dom-2和w3c	201
11.1.2 dom-2术语	201
11.1.3 dom-3	202
11.2 添加节点	202
11.3 删除节点	204
11.4 删除特定的节点	206
11.5 插入节点	209
11.6 替换节点	212
11.7　用对象字面值编写代码	214
第12章 建立动态页面	219
12.1 在网页上显示当前日期	219
12.2 处理周中日	221
12.3 根据时间对消息进行定制	222
12.4 根据时区显示日期	223
12.5 把24小时制转换为12小时制	226
12.6 创建倒数计数器	229
12.7　隐藏和显示层	232
12.8 移动文档中的对象	234
12.9 日期方法	236
第13章 ajax简介	239
13.1 ajax的定义	239
13.2 读取服务器数据	241
13.3 解析服务器数据	247
13.4 刷新服务器数据	251
13.5 从服务器获得数据	253
13.6 用ajax预览链接	256
13.7 自动补全表单字段	260
第14章 ajax工具包	266
14.1 拖放页面元素	267
14.2 在页面上添加日历	271
14.3 在页面上添加双月日历	275
14.4 使用容器实用程序	281
14.5 添加动画效果	285
14.6 实现用于调试的logger控件	287
第15章 javascript应用示例	291
15.1 使用可折叠菜单	291
15.2 添加下拉菜单	294
15.3 改进下拉菜单	296
15.4 带说明的幻灯片	300
15.5 一个无聊的姓名生成器	302
15.6 柱状图生成器	306
15.7 样式表切换器	312
第16章 用ajax设计页面	320
16.1 突出显示新元素	320
16.2 创建可折叠菜单	323
16.3 创建更漂亮的对话框	326
16.4 条纹表格	328
16.5 表格排序	332
第17章 bookmarklet	337
17.1 第一个bookmarklet	337
17.2 改变页面的背景颜色	342
17.3 改变页面样式	342
17.4 查询单词	344
17.5 查看图像	346
17.6 显示iso latin字符	347
17.7 将rgb值转换为十六进制	348
17.8 对值进行转换	349
17.9 bookmarklet计算器	350
17.10 缩短url	352
17.11 检验页面	353
17.12 通过电子邮件发送页面	353
17.13 改变页面大小	354
附录a javascript的版本演化和
参考资料（图灵网站下载）
附录b javascript保留字（图灵网站下载）
附录c css参考（图灵网站下载）
附录d 其他学习资源（图灵网站下载）
索引（图灵网站下载）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript基础教程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript快速开发工具箱
第1章  充分利用插件 1
1.1  下载并安装Web浏览器 1
1.2  选择程序编辑器 2
1.3  管理Ajax 3
1.4  早期版本的Microsoft Internet
Explorer 5
1.5  配套网站 7
1.6  包含全部插件 8
1.7  包含单个插件 9
1.8  包含JavaScript文件的位置 9
1.9  优选代码部分 9
1.10  错误修正和报告 10
1.11  等待网页加载完毕 10
1.12  小结 11
第2章  JavaScript、CSS和DOM 13
2.1  文档对象模型 14
2.2  级联样式表 16
2.3  在JavaScript中访问样式 18
2.4  JavaScript与分号 20
2.5  小结 20
第3章  核心插件 21
3.1  插件1：O() 21
3.1.1  关于此插件 21
3.1.2  变量、数组和函数 22
3.1.3  工作原理 22
3.1.4  使用方法 27
3.1.5  插件代码 28
3.2  插件2：S() 28
3.2.1  关于此插件 29
3.2.2  变量、数组和函数 29
3.2.3  工作原理 30
3.2.4  使用方法 31
3.2.5  插件代码 32
3.3  插件3：Initialize() 32
3.3.1  关于此插件 33
3.3.2  变量、数组和函数 33
3.3.3  工作原理 33
3.3.4  使用方法 35
3.3.5  插件代码 36
3.4  插件4：CaptureMouse() 37
3.4.1  关于此插件 37
3.4.2  变量、数组和函数 37
3.4.3  工作原理 38
3.4.4  使用方法 38
3.4.5  插件代码 39
3.5  插件5：CaptureKeyboard() 40
3.5.1  关于此插件 40
3.5.2  变量、数组和函数 40
3.5.3  工作原理 40
3.5.4  使用方法 41
3.5.5  插件代码 42
3.6  插件6：FromKeyCode() 42
3.6.1  关于此插件 42
3.6.2  变量、数组和函数 43
3.6.3  工作原理 43
3.6.4  使用方法 43
3.6.5  插件代码 43
3.7  插件7：GetLastKey() 44
3.7.1  关于此插件 44
3.7.2  变量、数组和函数 45
3.7.3  工作原理 45
3.7.4  使用方法 45
3.7.5  插件代码 46
3.8  插件8：PreventAction() 46
3.8.1  关于此插件 47
3.8.2  变量、数组和函数 47
3.8.3  工作原理 47
3.8.4  使用方法 47
3.8.5  插件代码 48
3.9  插件9：NoPx()和Px() 49
3.9.1  关于此插件 50
3.9.2  变量、数组和函数 50
3.9.3  工作原理 50
3.9.4  使用方法 50
3.9.5  插件代码 51
3.10  插件10：X()和Y() 51
3.10.1  关于此插件 52
3.10.2  变量、数组和函数 52
3.10.3  工作原理 52
3.10.4  使用方法 52
3.10.5  插件代码 53
3.11  插件11：W()和H() 53
3.11.1  关于此插件 53
3.11.2  变量、数组和函数 54
3.11.3  工作原理 54
3.11.4  使用方法 55
3.11.5  插件代码 55
3.12  插件12：Html() 56
3.12.1  关于此插件 56
3.12.2  变量、数组和函数 57
3.12.3  工作原理 57
3.12.4  使用方法 57
3.12.5  插件代码 58
3.13  插件13：SaveState() 58
3.13.1  关于此插件 58
3.13.2  变量、数组和函数 58
3.13.3  工作原理 59
3.13.4  使用方法 59
3.13.5  插件代码 60
3.14  插件14：RestoreState() 60
3.14.1  关于此插件 60
3.14.2  变量、数组和函数 60
3.14.3  工作原理 61
3.14.4  使用方法 61
3.14.5  插件代码 62
3.15  插件15：InsVars() 62
3.15.1  关于此插件 63
3.15.2  变量、数组和函数 63
3.15.3  工作原理 63
3.15.4  使用方法 63
3.15.5  插件代码 64
3.16  插件16：StrRepeat() 64
3.16.1  关于此插件 64
3.16.2  变量、数组和函数 64
3.16.3  工作原理 65
3.16.4  使用方法 65
3.16.5  插件代码 65
3.17  插件17：HexDec() 65
3.17.1  关于此插件 66
3.17.2  变量、数组和函数 66
3.17.3  工作原理 66
3.17.4  使用方法 66
3.17.5  插件代码 66
3.18  插件18：DecHex() 66
3.18.1  关于此插件 67
3.18.2  变量、数组和函数 67
3.18.3  工作原理 67
3.18.4  使用方法 68
3.18.5  插件代码 68
第4章  位置和大小 69
4.1  插件19：ResizeWidth() 69
4.1.1  关于此插件 69
4.1.2  变量、数组和函数 70
4.1.3  工作原理 70
4.1.4  使用方法 70
4.1.5  插件代码 71
4.2  插件20：ResizeHeight() 71
4.2.1  关于此插件 71
4.2.2  变量、数组和函数 71
4.2.3  工作原理 72
4.2.4  使用方法 72
4.2.5  插件代码 72
4.3  插件21：Resize() 73
4.3.1  关于此插件 73
4.3.2  变量、数组和函数 73
4.3.3  工作原理 73
4.3.4  使用方法 73
4.3.5  插件代码 74
4.4  插件22：Position() 74
4.4.1  关于此插件 75
4.4.2  变量、数组和函数 75
4.4.3  工作原理 75
4.4.4  使用方法 75
4.4.5  插件代码 76
4.5  插件23：GoTo() 76
4.5.1  关于此插件 76
4.5.2  变量、数组和函数 77
4.5.3  工作原理 77
4.5.4  使用方法 77
4.5.5  插件代码 77
4.6  插件24：Locate() 78
4.6.1  关于此插件 78
4.6.2  变量、数组和函数 78
4.6.3  工作原理 78
4.6.4  使用方法 78
4.6.5  插件代码 79
4.7  插件25：GetWindowWidth() 79
4.7.1  关于此插件 80
4.7.2  变量、数组和函数 80
4.7.3  工作原理 80
4.7.4  使用方法 80
4.7.5  插件代码 81
4.8  插件26：GetWindowHeight() 81
4.8.1  关于此插件 81
4.8.2  变量、数组和函数 81
4.8.3  工作原理 82
4.8.4  使用方法 82
4.8.5  插件代码 82
4.9  插件27：GoToEdge() 82
4.9.1  关于此插件 83
4.9.2  变量、数组和函数 83
4.9.3  工作原理 83
4.9.4  使用方法 84
4.9.5  插件代码 85
4.10  插件28：CenterX() 86
4.10.1  关于此插件 86
4.10.2  变量、数组和函数 86
4.10.3  工作原理 86
4.10.4  使用方法 87
4.10.5  插件代码 87
4.11  插件29：CenterY() 88
4.11.1  关于此插件 88
4.11.2  变量、数组和函数 88
4.11.3  工作原理 88
4.11.4  使用方法 89
4.11.5  插件代码 89
4.12  插件30：Center() 89
4.12.1  关于此插件 90
4.12.2  变量、数组和函数 90
4.12.3  工作原理 90
4.12.4  使用方法 90
4.12.5  插件代码 91
第5章  可视化 93
5.1  插件31：Invisible() 93
5.1.1  关于此插件 94
5.1.2  变量、数组和函数 94
5.1.3  工作原理 94
5.1.4  使用方法 94
5.1.5  插件代码 95
5.2  插件32：Visible() 95
5.2.1  关于此插件 95
5.2.2  变量、数组和函数 96
5.2.3  工作原理 96
5.2.4  使用方法 96
5.2.5  插件代码 96
5.3  插件33：VisibilityToggle() 96
5.3.1  关于此插件 97
5.3.2  变量、数组和函数 97
5.3.3  工作原理 97
5.3.4  使用方法 98
5.3.5  插件代码 98
5.4  插件34：Opacity() 99
5.4.1  关于此插件 99
5.4.2  变量、数组和函数 99
5.4.3  工作原理 100
5.4.4  使用方法 100
5.4.5  插件代码 101
5.5  插件35：Fade() 101
5.5.1  关于此插件 101
5.5.2  变量、数组和函数 102
5.5.3  工作原理 102
5.5.4  使用方法 107
5.5.5  插件代码 108
5.6  插件36：FadeOut() 109
5.6.1  关于此插件 110
5.6.2  变量、数组和函数 110
5.6.3  工作原理 110
5.6.4  使用方法 110
5.6.5  插件代码 111
5.7  插件37：FadeIn() 111
5.7.1  关于此插件 111
5.7.2  变量、数组和函数 112
5.7.3  工作原理 112
5.7.4  使用方法 112
5.7.5  插件代码 112
5.8  插件38：FadeToggle() 113
5.8.1  关于此插件 113
5.8.2  变量、数组和函数 113
5.8.3  工作原理 113
5.8.4  使用方法 114
5.8.5  插件代码 114
5.9  插件39：FadeBetween() 115
5.9.1  关于此插件 115
5.9.2  变量、数组和函数 115
5.9.3  工作原理 115
5.9.4  使用方法 115
5.9.5  插件代码 116
5.10  插件40：Hide() 116
5.10.1  关于此插件 117
5.10.2  变量、数组和函数 117
5.10.3  工作原理 117
5.10.4  使用方法 117
5.10.5  插件代码 118
5.11  插件41：Show() 118
5.11.1  关于此插件 119
5.11.2  变量、数组和函数 119
5.11.3  工作原理 119
5.11.4  使用方法 119
5.11.5  插件代码 121
5.12  插件42：HideToggle() 121
5.12.1  关于此插件 121
5.12.2  变量、数组和函数 122
5.12.3  工作原理 122
5.12.4  使用方法 122
5.12.5  插件代码 123
第6章  移动和动画 125
6.1  插件43：Slide() 125
6.1.1  关于此插件 125
6.1.2  变量、数组和函数 126
6.1.3  工作原理 126
6.1.4  使用方法 130
6.1.5  插件代码 131
6.2  插件44：SlideBetween() 132
6.2.1  关于此插件 132
6.2.2  变量、数组和函数 132
6.2.3  工作原理 133
6.2.4  使用方法 134
6.2.5  插件代码 136
6.3  插件45：Deflate() 136
6.3.1  关于此插件 137
6.3.2  变量、数组和函数 137
6.3.3  工作原理 138
6.3.4  使用方法 140
6.3.5  插件代码 141
6.4  插件46：Reflate() 142
6.4.1  关于此插件 143
6.4.2  变量、数组和函数 143
6.4.3  工作原理 143
6.4.4  使用方法 144
6.4.5  插件代码 145
6.5  插件47：DeflateToggle() 146
6.5.1  关于此插件 146
6.5.2  变量、数组和函数 146
6.5.3  工作原理 147
6.5.4  使用方法 147
6.5.5  插件代码 148
6.6  插件48：DeflateBetween() 148
6.6.1  关于此插件 149
6.6.2  变量、数组和函数 149
6.6.3  工作原理 149
6.6.4  使用方法 149
6.6.5  插件代码 150
6.7  插件49：Zoom() 151
6.7.1  关于此插件 151
6.7.2  变量、数组和函数 152
6.7.3  工作原理 153
6.7.4  使用方法 158
6.7.5  插件代码 160
6.8  插件50：ZoomDown() 162
6.8.1  关于此插件 162
6.8.2  变量、数组和函数 162
6.8.3  工作原理 163
6.8.4  使用方法 163
6.8.5  插件代码 164
6.9  插件51：ZoomRestore() 165
6.9.1  关于此插件 165
6.9.2  变量、数组和函数 166
6.9.3  工作原理 166
6.9.4  使用方法 167
6.9.5  插件代码 167
6.10  插件52：ZoomToggle() 168
6.10.1  关于此插件 168
6.10.2  变量、数组和函数 169
6.10.3  工作原理 169
6.10.4  使用方法 169
6.10.5  插件代码 170
第7章  链接和交互 173
7.1  插件53： Chain()、NextInChain()
和CallBack() 173
7.1.1  关于此插件 174
7.1.2  变量、数组和函数 174
7.1.3  工作原理 175
7.1.4  使用方法 177
7.1.5  插件代码 179
7.2  插件54：Repeat() 180
7.2.1  关于此插件 180
7.2.2  变量、数组和函数 181
7.2.3  工作原理 181
7.2.4  使用方法 181
7.2.5  插件代码 182
7.3  插件55：While() 182
7.3.1  关于此插件 182
7.3.2  变量、数组和函数 183
7.3.3  工作原理 183
7.3.4  使用方法 185
7.3.5  插件代码 187
7.4  插件56：Pause() 187
7.4.1  关于此插件 187
7.4.2  变量、数组和函数 188
7.4.3  工作原理 188
7.4.4  使用方法 188
7.4.5  插件代码 189
7.5  插件57：WaitKey() 189
7.5.1  关于此插件 190
7.5.2  变量、数组和函数 190
7.5.3  工作原理 190
7.5.4  使用方法 190
7.5.5  插件代码 192
7.6  插件58：Flip() 192
7.6.1  关于此插件 193
7.6.2  变量、数组和函数 193
7.6.3  工作原理 194
7.6.4  使用方法 195
7.6.5  插件代码 196
7.7  插件59：HoverSlide() 197
7.7.1  关于此插件 198
7.7.2  变量、数组和函数 198
7.7.3  工作原理 199
7.7.4  使用方法 202
7.7.5  插件代码 204
第8章  菜单和导航 207
8.1  插件60：HoverSlideMenu() 207
8.1.1  关于此插件 208
8.1.2  变量、数组和函数 208
8.1.3  工作原理 208
8.1.4  使用方法 210
8.1.5  插件代码 211
8.2  插件61：PopDown() 212
8.2.1  关于此插件 212
8.2.2  变量、数组和函数 213
8.2.3  工作原理 213
8.2.4  使用方法 213
8.2.5  插件代码 214
8.3  插件62：PopUp() 215
8.3.1  关于此插件 215
8.3.2  变量、数组和函数 216
8.3.3  工作原理 216
8.3.4  使用方法 217
8.3.5  插件代码 217
8.4  插件63：PopToggle() 218
8.4.1  关于此插件 218
8.4.2  变量、数组和函数 219
8.4.3  工作原理 219
8.4.4  使用方法 219
8.4.5  插件代码 220
8.5  插件64：FoldingMenu() 221
8.5.1  关于此插件 221
8.5.2  变量、数组和函数 222
8.5.3  工作原理 222
8.5.4  使用方法 224
8.5.5  插件代码 226
8.6  插件65：ContextMenu() 227
8.6.1  关于此插件 227
8.6.2  变量、数组和函数 228
8.6.3  工作原理 228
8.6.4  使用方法 230
8.6.5  插件代码 231
8.7  插件66：DockBar() 232
8.7.1  关于此插件 232
8.7.2  变量、数组和函数 233
8.7.3  工作原理 233
8.7.4  使用方法 235
8.7.5  插件代码 236
8.8  插件67：RollOver() 237
8.8.1  关于此插件 238
8.8.2  变量、数组和函数 238
8.8.3  工作原理 238
8.8.4  使用方法 240
8.8.5  插件代码 241
8.9  插件68：Breadcrumbs() 242
8.9.1  关于此插件 242
8.9.2  变量、数组和函数 242
8.9.3  工作原理 242
8.9.4  使用方法 243
8.9.5  插件代码 244
8.10  插件69：BrowserWindow() 244
8.10.1  关于此插件 245
8.10.2  变量、数组和函数 246
8.10.3  工作原理 247
8.10.4  使用方法 249
8.10.5  插件代码 251
第9章  文本效果 253
9.1  插件70：TextScroll() 253
9.1.1  关于此插件 253
9.1.2  变量、数组和函数 254
9.1.3  工作原理 254
9.1.4  使用方法 256
9.1.5  插件代码 256
9.2  插件71：TextType() 257
9.2.1  关于此插件 257
9.2.2  变量、数组和函数 257
9.2.3  工作原理 258
9.2.4  使用方法 259
9.2.5  插件代码 260
9.3  插件72：MatrixToText() 261
9.3.1  关于此插件 261
9.3.2  变量、数组和函数 261
9.3.3  工作原理 262
9.3.4  使用方法 264
9.3.5  插件代码 264
9.4  插件73：TextToMatrix() 265
9.4.1  关于此插件 266
9.4.2  变量、数组和函数 266
9.4.3  工作原理 266
9.4.4  使用方法 266
9.4.5  插件代码 267
9.5  插件74：ColorFade() 268
9.5.1  关于此插件 268
9.5.2  变量、数组和函数 269
9.5.3  工作原理 269
9.5.4  使用方法 272
9.5.5  插件代码 273
9.6  插件75：FlyIn() 274
9.6.1  关于此插件 274
9.6.2  变量、数组和函数 275
9.6.3  工作原理 275
9.6.4  使用方法 276
9.6.5  插件代码 278
9.7  插件76：TextRipple() 278
9.7.1  关于此插件 279
9.7.2  变量、数组和函数 279
9.7.3  工作原理 280
9.7.4  使用方法 282
9.7.5  插件代码 283
第10章  声音和视觉效果 285
10.1  插件77：Lightbox() 285
10.1.1  关于此插件 286
10.1.2  变量、数组和函数 286
10.1.3  工作原理 287
10.1.4  使用方法 288
10.1.5  插件代码 289
10.2  插件78：Slideshow() 290
10.2.1  关于此插件 291
10.2.2  变量、数组和函数 291
10.2.3  工作原理 291
10.2.4  使用方法 294
10.2.5  插件代码 295
10.3  插件79：Billboard() 296
10.3.1  关于此插件 296
10.3.2  变量、数组和函数 297
10.3.3  工作原理 297
10.3.4  使用方法 300
10.3.5  插件代码 301
10.4  插件80：GoogleChart() 302
10.4.1  关于此插件 303
10.4.2  变量、数组和函数 304
10.4.3  工作原理 304
10.4.4  使用方法 305
10.4.5  插件代码 306
10.5  插件81：PlaySound() 307
10.5.1  关于此插件 307
10.5.2  变量、数组和函数 307
10.5.3  工作原理 308
10.5.4  使用方法 308
10.5.5  插件代码 309
10.6  插件82：EmbedYouTube() 309
10.6.1  关于此插件 310
10.6.2  变量、数组和函数 310
10.6.3  工作原理 310
10.6.4  使用方法 310
10.6.5  插件代码 311
10.7  插件83：PulsateOn-
Mouseover() 312
10.7.1  关于此插件 312
10.7.2  变量、数组和函数 312
10.7.3  工作原理 313
10.7.4  使用方法 315
10.7.5  插件代码 315
第11章  cookie、Ajax和安全性 317
11.1  插件84：ProcessCookie() 317
11.1.1  关于此插件 318
11.1.2  变量、数组和函数 318
11.1.3  工作原理 318
11.1.4  使用方法 320
11.1.5  插件代码 321
11.2  插件85：CreateAjaxObject() 322
11.2.1  关于此插件 322
11.2.2  变量、数组和函数 323
11.2.3  工作原理 323
11.2.4  使用方法 324
11.2.5  插件代码 325
11.3  插件86：GetAjaxRequest() 326
11.3.1  关于此插件 326
11.3.2  变量、数组和函数 326
11.3.3  工作原理 327
11.3.4  使用方法 327
11.3.5  插件代码 328
11.4  插件87：PostAjax-
Request() 328
11.4.1  关于此插件 329
11.4.2  变量、数组和函数 329
11.4.3  工作原理 329
11.4.4  使用方法 330
11.4.5  插件代码 331
11.5  插件88：FrameBust() 331
11.5.1  关于此插件 332
11.5.2  变量、数组和函数 332
11.5.3  工作原理 332
11.5.4  使用方法 333
11.5.5  插件代码 333
11.6  插件89：ProtectEmail() 333
11.6.1  关于此插件 334
11.6.2  变量、数组和函数 334
11.6.3  工作原理 334
11.6.4  使用方法 334
11.6.5  插件代码 335
第12章  表单和验证 337
12.1  插件90：FieldPrompt() 337
12.1.1  关于此插件 338
12.1.2  变量、数组和函数 338
12.1.3  工作原理 338
12.1.4  使用方法 339
12.1.5  插件代码 340
12.2  插件91：ResizeTextarea() 340
12.2.1  关于此插件 341
12.2.2  变量、数组和函数 342
12.2.3  工作原理 342
12.2.4  使用方法 343
12.2.5  插件代码 343
12.3  插件92：ValidateEmail() 344
12.3.1  关于此插件 344
12.3.2  变量、数组和函数 344
12.3.3  工作原理 345
12.3.4  使用方法 346
12.3.5  插件代码 346
12.4  插件93：Validate-
Password() 346
12.4.1  关于此插件 347
12.4.2  变量、数组和函数 347
12.4.3  工作原理 347
12.4.4  使用方法 348
12.4.5  插件代码 348
12.5  插件94：CleanupString() 349
12.5.1  关于此插件 350
12.5.2  变量、数组和函数 350
12.5.3  工作原理 350
12.5.4  使用方法 350
12.5.5  插件代码 351
12.6  插件95：ValidateCredit-
Card() 351
12.6.1  关于此插件 352
12.6.2  变量、数组和函数 352
12.6.3  工作原理 352
12.6.4  使用方法 353
12.6.5  插件代码 354
第13章  常见问题解决方案 357
13.1  插件96：Rolling-
Copyright() 357
13.1.1  关于此插件 357
13.1.2  变量、数组和函数 358
13.1.3  工作原理 358
13.1.4  使用方法 358
13.1.5  插件代码 358
13.2  插件97：Alert() 359
13.2.1  关于此插件 360
13.2.2  变量、数组和函数 360
13.2.3  工作原理 361
13.2.4  使用方法 362
13.2.5  插件代码 363
13.3  插件98：ReplaceAlert() 364
13.3.1  关于此插件 365
13.3.2  变量、数组和函数 365
13.3.3  工作原理 365
13.3.4  使用方法 365
13.3.5  插件代码 366
13.4  插件99：ToolTip() 366
13.4.1  关于此插件 366
13.4.2  变量、数组和函数 367
13.4.3  工作原理 368
13.4.4  使用方法 369
13.4.5  插件代码 370
13.5  插件100：CursorTrail() 371
13.5.1  关于此插件 372
13.5.2  变量、数组和函数 372
13.5.3  工作原理 373
13.5.4  使用方法 375
13.5.5  插件代码 375
13.6  插件101：TouchEable() 376
13.6.1  关于此插件 377
13.6.2  变量、数组和函数 377
13.6.3  工作原理 378
13.6.4  使用方法 380
13.6.5  插件代码 381
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript快速开发工具箱
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>React Native：用JavaScript开发移动应用
第1 章简介. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 1
本书中你将学到的内容: 1
如何阅读本书1
各章节的组织结构2
第2 章安装配置新项目. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 3
在已有的iOS 应用中集成React Native 5
首先建立一个简单的iOS 应用5
安装React Native 5
创建React Native 应用6
将React Naitve 集成到iOS 应用中去7
在设备上编译和运行13
在设备上运行13
练习： 15
第3 章Flexbox 布局介绍. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 18
Web 开发中的Flexbox 18
Flexbox 布局究竟是什么呢？ 19
教程20
1. 栅格系统20
2. 圣杯布局24
3. 带有可变宽度搜索框的流式导航条27
4. 垂直居中32
在React Native 中使用Flexbox 35
第4 章开发第一个应用. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 38
在React Native 中完成“Hello World” 38
创建项目38
使用Xcode 39
使用模拟器39
项目结构41
React 基础43
render 函数43
样式45
注册组件46
修改组件46
搜索框和数据检索50
增加搜索框50
方法代理51
检索数据52
显示结果55
组件状态55
创建我们的ListView 组件56
创建每个数据单元57
给列表中每个结果项设置样式59
结果60
第5 章在React Native 中使用导航. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 66
第6 章动画和滑动菜单. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 71
我们需要做什么71
相关的代码71
它是如何运行的75
如何使用76
扩展一些缺少的功能78
ii 目录
第7 章用React Native 绘制Canvas. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 79
使用WebView 79
如何使用80
使用ReactART library 82
在网页中使用ReactART 82
在React Native 中使用ReactART 85
结论90
使用React Native 播放音频90
第8 章你的第一个自定义视图. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 97
尝试一下98
第9 章Flux 介绍. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 104
Flux 是什么？ 104
从React 到Flux 105
Flux 110
练习119
第10 章处理复杂的应用程序状态. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 120
解决方案121
初识Baobab 121
把我们的状态树并入ReactJS 123
连接单个游标到组件124
连接多个游标到组件124
如何改变Baobab 树的状态125
应用程序状态127
一个稍微复杂的例子129
Optimize 130
1.ReactJS 的级联渲染131
2. 重复渲染131
第11 章使用Node 来实现服务端API . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 135
安装Express： 135
目录iii
Request 和Response 对象136
理解中间件139
从URL 中获取参数142
处理相关参数143
路由实例143
重构路由144
使用JSON 146
JSON 结构146
在JavaScript 中使用JSON 149
iOS 中的HTTP 149
Web 服务151
NSURL, NSURLRequest, NSURLSession 和NSURLSessionTask 152
构造URL 和发送请求153
使用NSURLSession 153
JSON 数据155
解析JSON 数据156
主线程156
更深入的学习：请求主体157
第12 章在React Native 中使用文件上传. . . . . . . . . . . . . . . . . . . . . . . . . . . . 159
创建服务器159
注解161
进行文件验证161
总结： 162
React Native 文件上传的客户端： 162
第13 章理解JavaScript Promise . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 171
事件并不是万能的172
Promise 术语173
JavaScript 中的Promise 174
浏览器支持和Polyfill 175
与其他库的兼容性175
让复杂的异步代码变得更加简单176
iv 目录
将Promise 用于XMLHttpRequest 177
链式调用178
数值处理178
异步操作队列179
错误处理180
图片181
JavaScript 异常和Promise 182
错误处理实战182
并行和串行—— 鱼和熊掌兼得184
创建序列185
Promise 和Generator 190
Promise API 参考193
静态方法193
构造器194
实例方法194
第14 章Fetch 简介. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 195
XMLHttpRequest 快要过时了195
fetch 基础使用195
使用XMLHttpRequest 实现195
使用fetch 实现196
响应中的元数据197
响应类型197
Promsie 方法链198
使用fetch 请求发送凭证信息199
问答环节200
我该如何取消一个fetch 请求？ 200
有相关的polyfill 么？ 200
为什么在service workers 中支持“no-cors”，而在window 中却不行？ 200
第15 章在iOS 中使用SQLite . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 201
创建并打开数据库202
绑定变量203
目录v
开发SQLite 模块204
第16 章集成Google Admob . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 209
创建项目209
将SDK 添加到你的Xcode 项目209
第17 章React Native 组件国际化. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 214
我要做什么214
工作机制214
安装步骤214
在项目中使用218
第18 章测试React Native 组件. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 221
安装配置测试环境221
编写测试程序226
第19 章附录：React.js 快速介绍. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 228
JSX - React 的特殊语法228
开始和运行229
组件- 构建React 的基石229
在我的javascript 代码中，出现了HTML 片段？ 230
组件和状态231
第20 章附录B：Objective-C Primer . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 233
类的基本语法233
方法233
属性234
实现235
规范237
第21 章webpack 入门. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 238
为什么要使用webpack? 238
webpack 也适合Browserify 用户238
vi 目录
启动webpack 239
loader 的使用239
样式表和图片240
功能开关241
多个入口点（entrypoint） 242
优化共用代码243
异步加载243
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>React Native：用JavaScript开发移动应用
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript框架高级编程
第i部分 prototype
第1章 扩展和增强dom元素
1.1 扩展dom元素
1.2 dom导航
1.3 修改页面内容
1.4 操作元素的大小
1.5 处理css和样式
1.6 使用自己编写的方法扩展
1.7 本章小结
第2章 处理跨浏览器事件
2.1 注册事件处理程序
2.2 响应事件
2.3 触发调度事件
2.4 本章小结
第3章 简化ajax和动态数据
3.1 建立到服务器的请求
3.2 以全局方式响应数据变化
3.3 动态更新页面
3.4 本章小结
.第4章处理表单
4.1 操作表单元素和数据
4.2 验证表单数据
4.3 使用ajax提交表单
4.4 本章小结
第5章 操作通用数据结构和函数
5.1 增强原生对象并引入类
5.2 修改和分析字符串
5.3 生成模板化内容
5.4 绑定和操作函数
5.5 改进数组、散列和迭代器
5.6 处理数值和日期
5.7 本章小结
第6章 扩展prototype
6.1 script.aculo.us
6.2 moo.fx forprototype
6.3 rico
6.4 本章小结
第ⅱ部分 yui库
第7章 利用yui库遍历和操作dom
7.1 遍历dom以及查找元素
7.2 操作内容
7.3 本章小结
第8章 处理跨浏览器事件
8.1 注册页面事件和元素准备就绪事件
8.2 处理键盘和鼠标输入
8.3 处理自定义事件
8.4 管理浏览器历史并修正后退按钮
8.5 本章小结
第9章 使用动画和拖放
9.1 组合基本的动画序列
9.2 平滑动画路径和运动
9.3 带有拖放功能的交互动画
9.4 本章小结
第10章 简化ajax和动态加载
10.1 建立http请求并获取数据
10.2 动态加载库和组件
10.3 本章小结
第11章 利用窗口部件构建用户界面(第一部分)
11.1 autocomplete实用工具与表单字段结合使用
11.2 为内容构建容器
11.3 使用选项卡和树状视图呈现内容
11.4本章小结
第12章 利用窗口部件构建用户界面(第二部分)
12.1 装配按钮、滑块和菜单
12.2 提供日期选择功能
12.3 启用富内容编辑
12.4 本章小结
第13章 利用yui核心增强开发
13.1 应用名称空间和模块性
13.2 检测浏览器环境和可用模块
13.3 日志记录和调试
13.4 本章小结
第14章 处理数据、表和图表
14.1 格式化日期和数字
14.2 获取数据源
14.3 呈现表数据
14.4 绘制图表和图形
14.5 本章小结
第15章 使用yuicss工具
15.1 建立跨浏览器一致性
15.2 控制字体
15.3 利用网格构建布局
15.4 本章小结
第16章 构建和部署
16.1 来自yahoo!的共享yui文件
16.2 减少和优化加载时间
16.3 本章小结
第ⅲ部分 extjs
第17章 架构和库约定
17.1 何时使用extjs
17.2 如何使用extjs
17.3 extjs的面向对象设计
17.4 功能强大的实用工具函数
17.5 extjs的基于事件的设计
17.6 本章小结
第18章 元素、domhelper和模板
18.1 元素操作
18.2 dom遍历
18.3 dom操作
18.4 css操作
18.5 本章小结
第19章 组件、布局和窗口
19.1 extjscomponent系统
19.2 extjscomponent生命周期
19.3 ext.viewport
19.4 ext.container布局
19.5 面板和窗口
19.6 本章小结
第20章 数据处理以及服务器通信
20.1 获取数据
20.2 重新建模数据
20.3 本地存储数据
20.4 集成所有类
20.5 本章小结
第21章 dataview和网格
21.1 ext.dataview
21.2 ext.grid.gridpanel
21.3 本章小结
第22章 表单控件、验证及其他功能
22.1 表单控件介绍
22.2 表单字段和表单验证
22.3 其他功能
22.4 本章小结
第iv部分 dojo
第23章 利用ddojo核心增强开发
23.1 获取ddojo
23.2 尝试使用dojo
23.3 研究dojo核心
23.4 本章小结
第24章 操作dom
24.1 查找dom元素
24.2 处理dom元素列表
24.3 本章小结
第25章 处理事件
25.1 响应页面加载和卸载事件
25.2 连接到dom事件
25.3 连接到对象方法
25.4 利用nodelist建立连接
25.5 发布与订阅事件主题
25.6 使用dojo行为
25.7 本章小结
第26章 编排动画
26.1 对css样式属性制作动画
26.2 使用淡入淡出转换
26.3 使用擦除转换
26.4 使用滑动动画移动元素
26.5 使用缓动控制运动
26.6 顺序链接动画
26.7 以并行方式组合动画
26.8 使用nodelist动画方法
26.9 研究动画对象
26.10 本章小结
第27章 处理ajax和动态数据
27.1 建立简单的web请求
27.2 利用deferred处web响应
27.3 处理响应格式
27.4 指定请求方法
27.5 使用请求参数和内容
27.6 利用就地请求增强表单
27.7 使用跨域的json源
27.8 利用iframe建立请求
27.9 本章小结
第28章 利用窗口部件构建用户界面
28.1 构建并验证表单
28.2 管理应用程序布局
28.3 创建应用程序控件和对话框
28.4 对窗口部件应用主题
28.5 本章小结
第29章 构建和部署dojo
29.1 研究dojo构建
29.2 查找构建系统
29.3 创建自定义构建配置文件
29.4 生成自定义构建
29.5 检验并使用自定义构建
29.6 本章小结
第30章 扩展dojo
30.1 研究dojox子项目
30.2 尝试高级窗口部件
30.3 采用高级表单验证辅助函数
30.4 从模板生成内容
30.5 绘制形状以及呈现图表
30.6 使用编码和加密例程
30.7 导航json数据结构
30.8 研究dojox的其他功能
30.9 本章小结
第v部分 mootoois
第31章 利用mootools增强开发
31.1 获取mootools
31.2 研究mootools core
31.3 使用数组扩展
31.4 使用散列数据结构
31.5 使用字符串扩展
31.6 使用函数扩展
31.7 使用面向对象编程方法
31.8 本章小结
第32章 操作dom以及处理事件
32.1 查找dom元素
32.2 操作元素样式和属性
32.3 修改dom结构
32.4 附加监听程序并处理事件
32.5本章小结
第33章 简化ajax以及处理动态数据
33.1 操作浏览器cookie
33.2 动态加载页面素材
33.3 建立web请求
33.4 本章小结
第34章 构建用户界面以及使用动画
34.1 编排动画
34.2 使用用户界面窗口部件
34.3 本章小结
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript框架高级编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript和jQuery实战手册
目录
The Missing Credits................................................1
前言........................................................................ 5
第一部分：JavaScript 入门
第1章  编写第一个JavaScript 程序........................... 23
1.1 编程简介...............................................................................................24
1.2 如何把JavaScript 添加到页面................................................................27
1.3 第一个JavaScript 程序...........................................................................31
1.4 把文本写到Web 页面上.........................................................................34
1.5附加外部JavaScript 文件.......................................................................35
1.6追踪错误...............................................................................................37
第2章  JavaScript 的语法........................................ 42
2.1 语句......................................................................................................42
2.2 内置函数...............................................................................................43
2.3 数据类型...............................................................................................43
2.4 变量......................................................................................................46
2.5 操作数据类型和变量............................................................................51
2.6 教程：使用变量创建消息.....................................................................56
2.7 教程：请求信息...................................................................................58
2.8 数组......................................................................................................60
2.9 教程：编写使用数组的页面.................................................................68
2.10 对象的简单介绍..................................................................................71
2.11 注释....................................................................................................73
第3章  为程序添加逻辑和控制................................. 77
2.1 使程序智能地响应................................................................................77
2.2 教程：使用条件语句............................................................................89
2.3 使用循环处理重复性任务.....................................................................93
2.4 函数：把有用的代码转换为可复用的命令........................................100
2.5 教程：一个简单测验..........................................................................109
第二部分：jQuery 入门
第4章  jQuery 简介................................................ 117
4.1 JavaScript 库简介................................................................................117
4.2 获取jQuery .........................................................................................119
4.3 把jQuery 添加到页面...........................................................................121
4.4 修改Web 页面：概览...........................................................................124
4.5 理解文档对象模型..............................................................................127
4.6 再谈选择页面元素..............................................................................128
4.7 向页面添加内容.................................................................................138
4.8 设置和读取标签属性..........................................................................141
4.9 读取、设置和删除HTML 属性............................................................147
4.10 操作选择中的每个元素....................................................................148
4.11 自动提取引用...................................................................................151
第5章  动作/响应：让页面通过事件动起来............. 157
5.1 事件....................................................................................................157
5.2 以jQuery 的方式使用事件...................................................................162
5.3 教程：事件简介.................................................................................164
5.4 更多的jQuery 事件概念.......................................................................169
5.5 高级事件管理.....................................................................................176
5.6 教程：一页的FAQ ..............................................................................179
第6章  动画和效果................................................ 184
6.1 jQuery 效果.........................................................................................184
6.2 教程：登录滑块.................................................................................189
6.3 动画....................................................................................................191
6.4 在效果完成后执行一个操作...............................................................195
6.5 教程：动画的仪表盘..........................................................................198
第三部分：构建网页功能
第7章  改进图像................................................... 207
7.1 交换图像.............................................................................................207
7.2 教程：添加翻滚图像..........................................................................212
7.3 教程：带有效果的照片集...................................................................216
7.4 使用jQuery lightBox 的高级照片集.....................................................222
7.5 教程：FancyBox 照片集......................................................................231
第8章  改进导航................................................... 235
8.1 一些链接基础知识..............................................................................235
8.2 在新窗口中打开外部链接...................................................................238
8.3 创建新窗口.........................................................................................241
8.4 在页面上的一个窗口中打开页面.......................................................245
8.5 基本的动画的导航栏..........................................................................249
第9章  扩展Web 表单............................................ 257
9.1 理解表单.............................................................................................257
9.2 为表单添加智能.................................................................................268
9.3 教程：基本表单扩展..........................................................................272
9.4 表单验证.............................................................................................278
9.5 验证教程.............................................................................................291
第10 章  扩展界面................................................. 302
10.1 把信息组织到标签页面板.................................................................302
10.2 为站点添加一个内容幻灯片.............................................................313
10.3 确定页面元素的大小和位置.............................................................320
10.4 添加工具提示...................................................................................327
第四部分：Ajax 与Web 服务器通信
第11 章  初识Ajax.................................................. 343
11.1 Ajax...................................................................................................344
11.2 Ajax 基础知识....................................................................................345
11.3 Ajax 的jQuery 方式.............................................................................351
11.4 JSON.................................................................................................373
第12 章  Flickr 和Google Maps............................... 380
12.1 JSONP 简介.......................................................................................380
12.2 给站点添加一个Flickr Feed ..............................................................381
12.3 教程：给站点添加Flickr 图像...........................................................386
12.4 向站点添加Google 地图....................................................................390
第五部分：提示、技巧和除错
第13 章  让jQuery 发挥最大的作用.......................... 407
13.1 有用的jQuery 提示和信息.................................................................407
13.2 使用jQuery 文档................................................................................411
13.3 遍历DOM .........................................................................................417
13.4 用于操作HTML 的更多函数.............................................................421
13.5 高级事件处理...................................................................................425
第14 章  深入JavaScript ........................................ 428
14.1 操作字符串.......................................................................................428
14.2 在字符串中查找模式........................................................................433
14.3 操作数字...........................................................................................447
14.4 日期和时间.......................................................................................453
14.5 综合应用...........................................................................................459
14.6 编写更高效的JavaScript ...................................................................462
14.7 创建快速载入的JavaScript................................................................468
第15 章  除错和调试.............................................. 470
15.1 常见JavaScript 编程错误...................................................................470
15.2 使用Firebug 调试...............................................................................481
15.3 调试教程...........................................................................................492
附录  JavaScript 资源............................................ 499
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript和jQuery实战手册
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node.js高级编程
第Ⅰ部分 概述和安装
第1章 安装Node 3
1.1 在Windows上安装Node 4
1.2 在MAC OS X上安装Node 6
1.3 使用源代码安装Node 7
1.3.1 选择Node的版本 7
1.3.2 下载Node源代码 7
1.3.3 编译Node 8
1.3.4 安装Node 8
1.3.5 运行Node 8
1.4 安装和应用Node包管理器 9
1.5 本章小结 14
第2章 Node简介 15
2.1 事件驱动编程风格介绍 16
2.2 Node和JavaScript如何简化异步应用程序的编写 17
2.2.1 什么是闭包 17
2.2.2 闭包如何辅助异步编程 18
2.3 本章小结 19
第Ⅱ部分 Node核心API基础
第3章 加载模块 23
3.1 理解Node如何加载模块 24
3.2 导出模块 24
3.3 加载模块 25
3.3.1 加载核心模块 25
3.3.2 加载文件模块 26
3.3.3 加载文件夹模块 26
3.3.4 从node_modules文件夹加载 26
3.3.5 缓存模块 27
3.4 本章小结 28
第4章 应用缓冲区处理、编码和解码二进制数据 29
4.1 创建缓冲区 30
4.2 在缓冲区中获取和设置数据 30
4.3 切分缓冲区 31
4.4 复制缓冲区 32
4.5 缓冲区解码 32
4.6 本章小结 33
第5章 使用事件发射器模式简化事件绑定 35
5.1 理解标准回调模式 35
5.2 理解事件发射器模式 36
5.3 理解事件类型 37
5.4 应用事件发生器API 38
5.4.1 使用.addListener( )或.on( )绑定回调函数 38
5.4.2 绑定多个事件监听器 39
5.4.3 使用.removeListener( )从事件发射器中删除一个事件监听器 40
5.4.4 使用.once()使回调函数最多执行一次 40
5.4.5 使用.removeAllListeners()从事件发射器删除所有事件监听器 41
5.5 创建事件发射器 41
5.5.1 从Node事件发射器继承 41
5.5.2 发射事件 42
5.6 本章小结 42
第6章 使用定时器制定函数执行计划 45
6.1 使用setTimeout推迟函数执行 46
6.2 使用clearTimeout取消函数执行 46
6.3 制定和取消函数的重复执行计划 47
6.4 使用process.nextTick将函数执行推迟到下一轮事件循环 47
6.5 阻塞事件循环 48
6.6 退出事件循环 49
6.7 使用setTimeout代替setInterval强制函数串行执行 49
6.8 本章小结 50
第Ⅲ部分 文件、进程、流和网络
第7章 查询和读写文件 53
7.1 处理文件路径 54
7.1.1 规范化路径 54
7.1.2 连接路径 54
7.1.3 解析路径 55
7.1.4 查找两个绝对路径之间的相对路径 55
7.1.5 提取路径的组成部分 55
7.1.6 确定路径是否存在 56
7.2 fs模块简介 57
7.3 打开文件 58
7.4 读取文件 58
7.4.1 写入文件 59
7.4.2 关闭文件 60
7.5 本章小结 62
第8章 创建和控制外部进程 63
8.1 执行外部命令 63
8.2 生成子进程 68
8.2.1 创建子进程 68
8.2.2 监听子进程的输出数据 69
8.2.3 向子进程发送数据 69
8.2.4 当子进程退出时获得通知 71
8.3 向进程发送信号并终止进程 72
8.4 本章小结 73
第9章 读写数据流 75
9.1 使用可读流 76
9.1.1 等待数据 76
9.1.2 暂停与恢复流 76
9.1.3 了解流何时终止 77
9.2 使用可写流 77
9.2.1 将数据写入流 77
9.2.2 等待流被清空 78
9.3 考虑几个流的例子 78
9.3.1 创建文件系统流 78
9.3.2 理解网络流 80
9.4 避免慢客户端问题以及挽救服务器 80
9.4.1 理解慢客户端问题 80
9.4.2 避免慢客户端问题 81
9.4.3 应用stream.pipe()避免慢客户端问题与使用pipe()集成可读流和可写流 81
9.5 本章小结 82
第10章 构建TCP服务器 83
10.1 创建TCP服务器 83
10.1.1 应用套接字对象 85
10.1.2 理解空闲套接字 86
10.1.3 设置保持运行 87
10.1.4 应用延时或非延时 87
10.1.5 监听连接 88
10.1.6 关闭服务器 88
10.1.7 处理错误 88
10.2 构建一个简单的TCP聊天服务器 89
10.2.1 接受连接 89
10.2.2 从连接中读取数据 89
10.2.3 聚合所有客户端 90
10.2.4 广播数据 91
10.2.5 删除被关闭的连接 91
10.2.6 使用TCP聊天服务器 92
10.3 本章小结 93
第11章 构建HTTP服务器 95
11.1 理解http.ServerRequest对象 96
11.2 理解http.ServerResponse对象 98
11.2.1 写入响应头 98
11.2.2 修改或设置响应头 98
11.2.3 删除响应头 99
11.2.4 写入一块响应主体 99
11.3 以流的形式传送HTTP分块响应 99
11.3.1 传送文件 99
11.3.2 传送其他进程的输出 100
11.4 关闭服务器 100
11.5 示例1：构建提交静态文件的服务器 101
11.6 示例2：使用HTTP分块响应和定时器 102
11.7 本章小结 102
第12章 构建TCP客户端 103
12.1 连接服务器 104
12.2 发送和接收数据 104
12.3 终止连接 105
12.4 处理错误 106
12.5 创建命令行TCP客户端的示例 106
12.5.1 连接服务器 107
12.5.2 向服务器发送命令行 107
12.5.3 打印服务器消息 107
12.5.4 在连接终止时重新连接 108
12.5.5 关闭连接 110
12.5.6 前述内容综合 111
12.6 本章小结 112
第13章 创建HTTP请求 113
13.1 创建GET请求 113
13.2 使用其他HTTP动词 114
13.2.1 查看响应对象 115
13.2.2 获取响应主体 116
13.2.3 以流的方式传送响应主体 116
13.3 使用HTTP.Agent维护套接字池 116
13.4 应用第三方请求模块简化HTTP请求 118
13.4.1 安装和应用request模块 118
13.4.2 创建测试服务器 119
13.4.3 跟随重定向 121
13.4.4 设置请求选项 122
13.4.5 对请求体进行编码 125
13.4.6 流式传送 126
13.4.7 使用Cookie Jar 127
13.5 本章小结 127
第14章 使用用户数据报 129
14.1 理解用户数据报 129
14.2 理解用户数据报的使用 130
14.3 构建数据报服务器 130
14.3.1 监听消息 130
14.3.2 测试服务器 131
14.3.3 查看附加的消息信息 132
14.4 创建简单的数据报回送服务器 132
14.4.1 等待消息 132
14.4.2 向发送端发回消息 132
14.4.3 前述内容综合 133
14.5 构建数据报客户端 133
14.5.1 创建客户端 134
14.5.2 发送消息 134
14.5.3 关闭套接字 134
14.6 创建一个简单的数据报命令行客户端 134
14.6.1 读取命令行 135
14.6.2 向服务器发送数据 135
14.6.3 从服务器接收数据 135
14.6.4 前述内容综合 136
14.7 理解和使用数据报多播 136
14.7.1 接收多播消息 137
14.7.2 发送多播消息 137
14.7.3 理解数据报最大容量 138
14.8 本章小结 138
第15章 用TLS/SSL保证服务器的安全性 139
15.1 理解私钥和公钥 139
15.1.1 产生私钥 140
15.1.2 产生公钥 140
15.2 构建TLS服务器 140
15.2.1 初始化服务器 141
15.2.2 监听连接 141
15.2.3 从客户端读取数据 142
15.2.4 向客户端发送数据 142
15.2.5 终止连接 142
15.3 构建TLS客户端 142
15.3.1 初始化客户端 143
15.3.2 连接服务器 143
15.3.3 验证服务器证书 143
15.3.4 向服务器发送数据 144
15.3.5 从服务器读取数据 144
15.3.6 终止连接 144
15.4 创建几个示例 144
15.4.1 创建TLS聊天服务器 145
15.4.2 创建TLS命令行聊天客户端 146
15.4.3 验证客户端证书 147
15.5 本章小结 148
第16章 用HTTPS保证HTTP服务器的安全性 149
16.1 构建安全的HTTP服务器 149
16.1.1 设置服务器选项 150
16.1.2 监听连接 150
16.1.3 验证HTTPS客户端证书 151
16.2 创建HTTPS客户端 152
16.2.1 初始化客户端 152
16.2.2 创建请求 152
16.2.3 验证HTTPS服务器证书 153
16.3 本章小结 154
第Ⅳ部分 构建与调试模块及应用程序
第17章 测试模块及应用程序 157
17.1 应用测试运行工具 157
17.1.1 编写测试 158
17.1.2 运行测试 159
17.2 使用断言测试模块 159
17.2.1 使用断言模块 159
17.2.2 使用Node-Tap中的内置断言函数 161
17.3 测试异步模块 163
17.4 本章小结 166
第18章 调试模块及应用程序 167
18.1 使用console.log 167
18.2 使用Node内置调试器 169
18.3 使用Node检查器 173
18.4 本章小结 175
第19章 控制回调流程 177
19.1 理解飞去来器效应 177
19.2 通过声明函数避免飞去来器效应 179
19.3 使用ASYNC流程控制库 183
19.3.1 串行执行 184
19.3.2 并行执行 185
19.3.3 连续传递 186
19.3.4 排队 187
19.3.5 迭代 189
19.3.6 映射 190
19.3.7 规约 191
19.3.8 过滤 192
19.3.9 检测 193
19.4 本章小结 194
第Ⅴ部分 构建Web应用程序
第20章 构建和使用HTTP中间件 197
20.1 理解Connect HTTP中间件框架 198
20.2 构建自定义HTTP中间件 198
20.2.1 创建异步中间件 199
20.2.2 在中间件内部注册回调函数 201
20.2.3 在中间件内处理错误 202
20.3 使用捆绑在Connect中的HTTP中间件 206
20.3.1 记录请求 206
20.3.2 处理错误 208
20.3.3 提交静态文件 209
20.3.4 解析查询字符串 210
20.3.5 解析请求主体 211
20.3.6 解析Cookies 212
20.3.7 使用会话 213
20.3.8 其他可用的中间件 216
20.4 本章小结 216
第21章 用Express.js创建Web应用程序 217
21.1 初始化Express.js应用程序 218
21.2 在应用程序中设置中间件 220
21.3 路由请求 222
21.3.1 处理路由 222
21.3.2 使用会话 229
21.3.3 使用路由中间件 234
21.4 本章小结 238
第22章 使用Socket.IO创建通用的实时Web应用程序 241
22.1 理解WebSockets如何工作 242
22.2 使用Socket.IO创建WebSocket应用程序 243
22.2.1 在服务器上安装和运行Socket.IO 243
22.2.2 使用Socket.IO创建实时网络聊天应用程序 245
22.2.3 扩展聊天应用程序 250
22.2.4 检测连接断开 253
22.2.5 将用户分隔到聊天室中 255
22.2.6 使用名称空间 259
22.2.7 使用Redis分布运行服务器端应用程序 260
22.3 本章小结 263
第Ⅵ部分 连接数据库
第23章 使用node-mysql连接MySQL数据库 267
23.1 应用库与MySQL数据库进行连接和通信 267
23.2 向数据库添加数据时请记住安全性 269
23.3 高效读取数据 272
23.4 本章小结 276
第24章 使用Nano连接CouchDB数据库 277
24.1 安装Nano 278
24.2 连接和创建数据库 281
24.3 存储文档 285
24.4 创建和使用CouchDB视图 286
24.5 将文件附加到CouchDB文档上 299
24.6 本章小结 312
第25章 使用Mongoose连接MongoDB 数据库 313
25.1 安装Mongoose 315
25.2 理解Mongoose如何使用模型封装对数据库的访问 315
25.3 连接MongoDB数据库 316
25.4 定义模式 316
25.5 定义模型 316
25.5.1 使用验证器 326
25.5.2 使用修改器 332
25.5.3 使用取值器 333
25.5.4 使用虚拟属性 334
25.5.5 使用默认值 340
25.5.6 定义索引 341
25.5.7 使用DB Refs引用其他文档 343
25.5.8 定义实例方法 349
25.5.9 定义静态方法 350
25.6 本章小结 351
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node.js高级编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript应用程序经典实例
英文版编辑的话
前言
绪论
第一章 客户端搜索引擎
执行条件
语法细则
nav．html
创建自己的javascript数据库
应用程序扩展
第二章 在线测试
执行条件
语法细则
index．html——框架设定
questions.js——javascript源文件
administer．html
应用程序扩展
第三章 交互式的幻灯片放映
执行条件
语法细则
应用程序变量
. 应用程序的函数
应用程序扩展
第四章 多搜索引擎界面
执行条件
语法细则
应用程序扩展：增加用户控制
第五章 imagemachine程序
执行条件
语法细则
应用程序扩展：添加模板属性
第六章 javascript源文件
arrays．js
cookies．js
dhtml．js
events．js
frames．js
images．js
navbar. js
numbers．js
objects．js
strings．js
应用程序扩展
第七章 基于cookie的用户参数选择
执行条件
语法细则
prefs．html
dive．html
应用程序扩展
第八章 购物袋：javascript购物车
购物袋概述
执行条件
语法细则
第1步：载入购物袋应用程序
第2步：显示产品
第3步：显示所有的种类
第4步：将产品添加到购物袋
第5步：修改定单／付帐
应用程序扩展
第九章 javascript中的加密技术
密码如何工作
执行条件
语法细则
应用程序扩展
第十章 网络贺卡：拖放email
执行条件
语法细则
服务器端
应用程序扩展
第十一章 能感知当前环境的帮助
执行条件
语法细则
应用程序扩展
后记
附录一 javascript参考
附录二 web资源
附录三 使用perl脚本
词汇表
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript应用程序经典实例
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>第三方JavaScript编程
第1章 第三方JavaScript介绍 1
1.1 第三方JavaScript的定义 2
1.2 第三方JavaScript的用法 4
1.2.1 嵌入式微件 6
1.2.2 分析和统计 8
1.2.3 Web服务API封装 9
1.3 开发一个简单的微件 13
1.3.1 服务端生成脚本 14
1.3.2 通过iframes分发微件 16
1.4 第三方开发的挑战 17
1.4.1 未知的上下文 17
1.4.2 共享环境 18
1.4.3 浏览器限制 19
1.5 总结 19
第2章 应用的分发和加载 20
2.1 配置第三方开发环境 21
2.1.1 发布者的测试页面 21
2.1.2 Web服务器 22
2.1.3 模拟多个域 23
2.2 加载初始的脚本 24
2.2.1 阻塞式脚本引入 25
2.2.2 使用async和defer无阻塞
加载脚本 26
2.2.3 动态脚本插入 28
2.3 初始脚本文件 29
2.3.1 window和undefined混淆 30
2.3.2 基本应用程序流程 31
2.4 加载额外的文件 32
2.4.1 JavaScript文件 33
2.4.2 库 35
2.5 脚本参数传递 37
2.5.1 使用查询字符串 37
2.5.2 使用片段标识符 40
2.5.3 使用自定义数据属性 40
2.5.4 使用全局变量 42
2.6 获取应用数据 44
2.7 总结 45
第3章 HTML和CSS的渲染 46
3.1 输出HTML 47
3.1.1 使用document.write 47
3.1.2 追加到已知位置 48
3.1.3 追加多个微件 50
3.1.4 解耦渲染对象 52
3.2 为你的HTML添加样式 53
3.2.1 使用内联样式 53
3.2.2 加载CSS文件 54
3.2.3 嵌入CSS到
JavaScript中 56
3.3 防御性的HTML和CSS 59
3.3.1 命名空间59
3.3.2 CSS的特殊性 60
3.3.3 过度设置CSS的特殊性 62
3.4 将内容嵌入到iframe中 65
3.4.1 没有设置src的iframe 66
3.4.2 外部iframe 68
3.4.3 样式继承 69
3.4.4 何时避免使用iframe 73
3.5 小结 74
第4章 与服务器通信 75
4.1 AJAX和浏览器的同源
策略 76
4.1.1 判定同源的规则 77
4.1.2 同源策略和脚本加载 78
4.2 带填充的JSON（JSONP） 80
4.2.1 通过脚本元素加载JSON 80
4.2.2 动态的回调函数 81
4.2.3 局限性和安全问题 84
4.3 子域名代理 85
4.3.1 使用document.domain更改
文档的源 87
4.3.2 使用子域代理实现跨域
通信 88
4.3.3 子域名代理与JSONP相结合 91
4.3.4 Internet Explorer和子域代理 94
4.3.5 安全隐患 95
4.4 跨源资源共享 95
4.4.1 发送简单的HTTP请求 96
4.4.2 使用CORS传输Cookie 98
4.4.3 发送预检请求 99
4.4.4 浏览器支持 99
4.5 总结 100
第5章 跨域iframe通信 101
5.1 HTML5 window.postMessage API 102
5.1.1 使用window.postMessage 发送信息 103
5.1.2 接收发送给窗口的消息 104
5.1.3 浏览器的支持 106
5.2 降级技术 107
5.2.1 使用window.name发送
消息 108
5.2.2 使用URL片段标识符发送消息 111
5.2.3 使用Flash发送消息 113
5.3 使用easyXDM简化跨域消息通信 116
5.3.1 加载并初始化easyXDM 116
5.3.2 使用easyXDM.Socket发送简单信息 118
5.3.3 使用easyXDM.Rpc定义JSON-RPC接口 119
5.4 总结 124
第6章 验证和会话 125
6.1 第三方Cookie 126
6.1.1 Sessions的设置和
读取 127
6.1.2 禁用第三方Cookie 128
6.1.3 Internet Explorer和P3P头 129
6.1.4 检测cookies是否可用 131
6.2 设置第三方cookie 134
6.2.1 使用独立窗口 134
6.2.2 iframe的解决方案（只针对Safari） 137
6.2.3 Chrome和Firefox中的单页面会话 140
6.3 会话安全 140
6.3.1 HTTPS和更安全的cookie 141
6.3.2 多级身份认证 142
6.4 总结 144
第7章 安全性 145
7.1 Cookies，会话，和会话窃取 146
7.2 跨站脚本 147
7.2.1 XSS攻击 148
7.2.2 CSS中的XSS漏洞 149
7.2.3 防止XSS对应用的攻击 151
7.3 跨站请求伪造 153
7.3.1 XSRF攻击 154
7.3.2 JSON劫持 155
7.3.3 保护应用免受XSRF攻击 156
7.4 发布者漏洞 158
7.4.1 发布者模拟 158
7.4.2 点击劫持 160
7.4.3 拒绝服务 162
7.5 总结 162
第8章 独特的框架 163
8.1 实现一个最基本的
SDK 165
8.1.1 初始化 166
8.1.2 异步加载 167
8.1.3 暴露公共方法 170
8.1.4 事件监听器 170
8.2 版本管理 173
8.2.1 URL版本管理 174
8.2.2 通过初始化进行版本控制 176
8.3 封装Web服务的APIs 178
8.3.1 在客户端访问Web服务APIs 179
8.3.2 封装Camera Stork API 182
8.3.3 识别发布者 186
8.3.4 用户授权和OAuth 190
8.4 总结 191
第9章 性能 193
9.1 优化负荷 194
9.1.1 合并和压缩源代码 195
9.1.2 减少图像请求 196
9.1.3 缓存文件 198
9.1.4 推迟HTTP请求 199
9.2 JavaScript优化 204
9.2.1 浏览器内部：UI线程，重绘和回流 205
9.2.2 控制耗性能的调用：throttle和debounce函数 206
9.2.3 使用setTimeout延迟计算 208
9.3 被感知的性能 210
9.3.1 对用户的操作保持乐观 211
9.3.2 在文档就绪之前渲染 212
9.4 总结 213
第10章 调试和测试 215
10.1 调试 216
10.1.1 在生产环境中使用开发环境的代码 218
10.1.2 单步执行代码 223
10.2 测试 227
10.2.1 单元测试、集成测试和回归测试 228
10.2.2 使用QUnit编写回归测试 230
10.2.3 使用Hiro写回归测试 233
10.3 总结 236
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>第三方JavaScript编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript入门经典
第1章 eb与javascript概述
第2章 avascript中的数据类型与变量
第3章 判断、循环和函数
第4章 javascript——基于对象的语言
第5章 浏览器程序设计
第6章 html表单——与用户进行交互
第7章 窗体和框架
第8章 字符串操作
第9章 日期、时间和计时器
第10章 常见错误、调试和错误处理
第11章 使用cookie存储信息
第12章 dhtml概述
第13章 现代浏览器中的dhtml
第14章 javascript与xml
第15章 使用activex和plug-in
第16章 ajax与远程脚本
附录 参考答案
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript入门经典
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript入门经典（第5版）
第1章 JavaScript与Web概述 1
1.1 JavaScript简介 1
1.1.1 JavaScript的含义 1
1.1.2 JavaScript与Web 2
1.1.3 JavaScript的功能 3
1.1.4 创建JavaScript Web应用程序所需的工具 4
1.2 脚本的使用场合 6
1.2.1 链接外部JavaScript文件 6
1.2.2 使用外部文件的优点 7
1.3 第一个简单的JavaScript程序 7
1.4 编写更多的JavaScript程序 9
1.5 浏览器和兼容性问题简述 13
1.6 小结 14
第2章 数据类型与变量 15
2.1 JavaScript中的数据类型 15
2.1.1 数值数据 16
2.1.2 文本数据 16
2.1.3 布尔数据 17
2.2 变量—— 存储在内存中的数据 18
2.2.1 创建变量并赋值 19
2.2.2 用其他变量的值为
变量赋值 21
2.3 使用数据—— 计算数值及基本字符串操作 23
2.3.1 数值计算 23
2.3.2 运算符的优先级 27
2.3.3 基本的字符串操作 31
2.3.4 字符串与数值的混合操作 33
2.4 数据类型转换 34
2.5 数组 38
2.6 小结 46
2.7 习题 46
第3章 决策与循环 49
3.1 决策语句—— if和switch语句 50
3.1.1 比较运算符 50
3.1.2 if语句 52
3.1.3 逻辑运算符 56
3.1.4 在if语句中使用多个条件 58
3.1.5 else和else if 61
3.1.6 字符串的比较 63
3.1.7 switch语句 63
3.2 循环—— for语句和while语句 68
3.2.1 for循环 68
3.2.2 for...in 循环 71
3.2.3 while循环 72
3.2.4 do...while循环 73
3.2.5 break和continue语句 74
3.3 小结 75
3.4 习题 76
第4章 函数与作用域 79
第5章 JavaScript —— 基于对象的语言 91
第6章 字符串操作 141
第7章 日期、时间和计时器 177
第8章 浏览器程序设计 189
第9章 编写DOM脚本 211
第10章 事件 249
第11章 HTML表单：与用户交互 309
第12章 JSON 361
第13章 数据存储 371
第14章 Ajax 403
第15章 HTML5媒体 433
第16章 jQuery 453
第17章 其他JavaScript库 475
第18章 常见错误、调试和错误处理 519
附录A 参考答案 555
附录B JavaScript核心参考 623
附录C W3C DOM参考 647
附录D Latin-1字符集 671
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript入门经典（第5版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入理解JavaScript
作者简介
版权声明
内容提要
译者简介
对本书的赞誉
前言
第1部分　JavaScript快速上手
第1章　基础JavaScript
第2部分　背景
第2章 为什么选择JavaScript
第3章　JavaScript的性质
第4章　JavaScript是如何创造出来的
第5章　标准化：ECMAScript
第6章　JavaScript的历史里程碑
第3部分　深入JavaScript
第7章　JavaScript的语法
第8章　值
第9章　运算符
第10章　布尔类型
第11章　数字
第12章　字符串
第13章　语句
第14章　异常捕获
第15章　函数
第16章　变量：作用域、环境和闭包
第17章　对象与继承
第18章　数组
第19章　正则表达式
第20章　Date
第21章　Math
第22章　JSON
第23章　标准全局变量
第24章　编码和JavaScript
第25章　ECMAScript 5的新特性
第4部分　技巧、工具和类库
第26章　元编程风格指南
第27章　调试的语言机制
第28章　子类化内置构造函数
第29章　JSDoc：生成API文档
第30章　类库
第31章　模块系统和包管理器
第32章　其他工具
第33章　接下来该做什么
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入理解JavaScript
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入浅出Node.js
第1章　Node简介　　1
1.1 　Node的诞生历程　　1
1.2 　Node的命名与起源　　1
1.2.1 　为什么是JavaScript　　2
1.2.2 　为什么叫Node　　2
1.3 　Node给JavaScript带来的意义　　2
1.4 　Node的特点　　4
1.4.1 　异步I/O　　4
1.4.2 　事件与回调函数　　6
1.4.3 　单线程　　7
1.4.4 　跨平台　　7
1.5 　Node的应用场景　　8
1.5.1 　I/O密集型　　8
1.5.2 　是否不擅长CPU密集型业务　　8
1.5.3 　与遗留系统和平共处　　10
1.5.4 　分布式应用　　10
1.6 　Node的使用者　　10
1.7 　参考资源　　11
第2章　模块机制　　12
2.1 　CommonJS规范　　13
2.1.1 　CommonJS的出发点　　13
2.1.2 　CommonJS的模块规范　　14
2.2 　Node的模块实现　　15
2.2.1 　优先从缓存加载　　16
2.2.2 　路径分析和文件定位　　16
2.2.3 　模块编译　　18
2.3 　核心模块　　20
2.3.1 　JavaScript核心模块的编译过程　　21
2.3.2 　C/C++核心模块的编译过程　　22
2.3.3 　核心模块的引入流程　　25
2.3.4 　编写核心模块　　25
2.4 　C/C++扩展模块　　27
2.4.1 　前提条件　　28
2.4.2 　C/C++扩展模块的编写　　29
2.4.3 　C/C++扩展模块的编译　　30
2.4.4 　C/C++扩展模块的加载　　31
2.5 　模块调用栈　　32
2.6 　包与NPM　　33
2.6.1 　包结构　　34
2.6.2 　包描述文件与NPM　　34
2.6.3 　NPM常用功能　　37
2.6.4 　局域NPM　　42
2.6.5 　NPM潜在问题　　43
2.7 　前后端共用模块　　44
2.7.1 　模块的侧重点　　44
2.7.2 　AMD规范　　44
2.7.3 　CMD规范　　45
2.7.4 　兼容多种模块规范　　45
2.8 　总结　　46
2.9 　参考资源　　46
第3章　异步I/O　　47
3.1 　为什么要异步I/O　　47
3.1.1 　用户体验　　48
3.1.2 　资源分配　　49
3.2 　异步I/O实现现状　　50
3.2.1 　异步I/O与非阻塞I/O　　50
3.2.2 　理想的非阻塞异步I/O　　54
3.2.3 　现实的异步I/O　　54
3.3 　Node的异步I/O　　56
3.3.1 　事件循环　　56
3.3.2 　观察者　　56
3.3.3 　请求对象　　57
3.3.4 　执行回调　　59
3.3.5 　小结　　60
3.4 　非I/O的异步API　　60
3.4.1 　定时器　　60
3.4.2 　process.nextTick()　　61
3.4.3 　setImmediate()　　62
3.5 　事件驱动与高性能服务器　　63
3.6 　总结　　65
3.7 　参考资源　　65
第4章　异步编程　　66
4.1 　函数式编程　　66
4.1.1 　高阶函数　　66
4.1.2 　偏函数用法　　67
4.2 　异步编程的优势与难点　　68
4.2.1 　优势　　69
4.2.2 　难点　　70
4.3 　异步编程解决方案　　74
4.3.1 　事件发布/订阅模式　　74
4.3.2 　Promise/Deferred模式　　82
4.3.3 　流程控制库　　93
4.4 　异步并发控制　　105
4.4.1 　bagpipe的解决方案　　105
4.4.2 　async的解决方案　　109
4.5 　总结　　110
4.6 　参考资源　　110
第5章　内存控制　　111
5.1 　V8的垃圾回收机制与内存限制　　111
5.1.1 　Node与V8　　112
5.1.2 　V8的内存限制　　112
5.1.3 　V8的对象分配　　112
5.1.4 　V8的垃圾回收机制　　113
5.1.5 　查看垃圾回收日志　　119
5.2 　高效使用内存　　121
5.2.1 　作用域　　121
5.2.2 　闭包　　123
5.2.3 　小结　　124
5.3 　内存指标　　124
5.3.1 　查看内存使用情况　　124
5.3.2 　堆外内存　　126
5.3.3 　小结　　127
5.4 　内存泄漏　　127
5.4.1 　慎将内存当做缓存　　127
5.4.2 　关注队列状态　　130
5.5 　内存泄漏排查　　130
5.5.1 　node-heapdump　　131
5.5.2 　node-memwatch　　132
5.5.3 　小结　　135
5.6 　大内存应用　　135
5.7 　总结　　136
5.8 　参考资源　　136
第6章 　理解Buffer　　137
6.1 　Buffer结构　　137
6.1.1 　模块结构　　137
6.1.2 　Buffer对象　　138
6.1.3 　Buffer内存分配　　139
6.2 　Buffer的转换　　141
6.2.1 　字符串转Buffer　　141
6.2.2 　Buffer转字符串　　142
6.2.3 　Buffer不支持的编码类型　　142
6.3 　Buffer的拼接　　143
6.3.1 　乱码是如何产生的　　144
6.3.2 　setEncoding()与string_decoder()　　144
6.3.3 　正确拼接Buffer　　145
6.4 　Buffer与性能　　146
6.5 　总结　　149
6.6 　参考资源　　149
第7章　网络编程　　150
7.1 　构建TCP服务　　150
7.1.1 　TCP　　150
7.1.2 　创建TCP服务器端　　151
7.1.3 　TCP服务的事件　　153
7.2 　构建UDP服务　　154
7.2.1 　创建UDP套接字　　154
7.2.2 　创建UDP服务器端　　154
7.2.3 　创建UDP客户端　　155
7.2.4 　UDP套接字事件　　155
7.3 　构建HTTP服务　　155
7.3.1 　HTTP　　156
7.3.2 　http模块　　157
7.3.3 　HTTP客户端　　161
7.4 　构建WebSocket服务　　163
7.4.1 　WebSocket握手　　164
7.4.2 　WebSocket数据传输　　167
7.4.3 　小结　　169
7.5 　网络服务与安全　　169
7.5.1 　TLS/SSL　　170
7.5.2 　TLS服务　　172
7.5.3 　HTTPS服务　　173
7.6 　总结　　175
7.7 　参考资源　　176
第8章　构建Web应用　　177
8.1 　基础功能　　177
8.1.1 　请求方法　　178
8.1.2 　路径解析　　179
8.1.3 　查询字符串　　180
8.1.4 　Cookie　　181
8.1.5 　Session　　184
8.1.6 　缓存　　190
8.1.7 　Basic认证　　193
8.2 　数据上传　　195
8.2.1 　表单数据　　195
8.2.2 　其他格式　　196
8.2.3 　附件上传　　197
8.2.4 　数据上传与安全　　199
8.3 　路由解析　　201
8.3.1 　文件路径型　　202
8.3.2 　MVC　　202
8.3.3 　RESTful　　207
8.4 　中间件　　210
8.4.1 　异常处理　　214
8.4.2 　中间件与性能　　215
8.4.3 　小结　　216
8.5 　页面渲染　　217
8.5.1 　内容响应　　217
8.5.2 　视图渲染　　219
8.5.3 　模板　　220
8.5.4 　Bigpipe　　231
8.6 　总结　　235
8.7 　参考资源　　235
第9章　玩转进程　　236
9.1 　服务模型的变迁　　236
9.1.1 　石器时代：同步　　236
9.1.2 　青铜时代：复制进程　　237
9.1.3 　白银时代：多线程　　237
9.1.4 　黄金时代：事件驱动　　237
9.2 　多进程架构　　238
9.2.1 　创建子进程　　239
9.2.2 　进程间通信　　240
9.2.3 　句柄传递　　242
9.2.4 　小结　　247
9.3 　集群稳定之路　　248
9.3.1 　进程事件　　248
9.3.2 　自动重启　　249
9.3.3 　负载均衡　　254
9.3.4 　状态共享　　255
9.4 　Cluster模块　　257
9.4.1 　Cluster工作原理　　258
9.4.2 　Cluster事件　　259
9.5 　总结　　259
9.6 　参考资源　　260
第10章　测试　　261
10.1 　单元测试　　261
10.1.1 　单元测试的意义　　261
10.1.2 　单元测试介绍　　263
10.1.3 　工程化与自动化　　276
10.1.4 　小结　　277
10.2 　性能测试　　278
10.2.1 　基准测试　　278
10.2.2 　压力测试　　280
10.2.3 　基准测试驱动开发　　281
10.2.4 　测试数据与业务数据的转换　　283
10.3 　总结　　284
10.4 　参考资源　　284
第11章　产品化　　285
11.1 　项目工程化　　285
11.1.1 　目录结构　　285
11.1.2 　构建工具　　286
11.1.3 　编码规范　　289
11.1.4 　代码审查　　289
11.2 　部署流程　　290
11.2.1 　部署环境　　291
11.2.2 　部署操作　　291
11.3 　性能　　293
11.3.1 　动静分离　　293
11.3.2 　启用缓存　　294
11.3.3 　多进程架构　　294
11.3.4 　读写分离　　295
11.4 　日志　　295
11.4.1 　访问日志　　295
11.4.2 　异常日志　　296
11.4.3 　日志与数据库　　299
11.4.4 　分割日志　　299
11.4.5 　小结　　299
11.5 　监控报警　　299
11.5.1 　监控　　300
11.5.2 　报警的实现　　302
11.5.3 　监控系统的稳定性　　303
11.6 　稳定性　　303
11.7 　异构共存　　304
11.8 　总结　　305
11.9 　参考资源　　305
附录A 　安装Node　　306
A.1 　Windows系统下的Node安装　　306
A.2 　Mac系统下Node的安装　　307
A.3 　Linux系统下Node的安装　　308
A.4 　总结　　309
A.5 　参考资源　　309
附录B 　调试Node　　310
B.1 　Debugger　　310
B.2 　Node Inspector　　311
B.2.1 　安装Node Inspector　　312
B.2.2 　错误堆栈　　312
B.3 　总结　　313
附录C 　Node编码规范　　314
C.1 　根源　　314
C.2 　编码规范　　315
C.2.1 　空格与格式　　315
C.2.2 　命名规范　　317
C.2.3 　比较操作　　318
C.2.4 　字面量　　318
C.2.5 　作用域　　318
C.2.6 　数组与对象　　319
C.2.7 　异步　　320
C.2.8 　类与模块　　320
C.2.9 　注解规范　　321
C.3 　最佳实践　　321
C.3.1 　冲突的解决原则　　321
C.3.2 　给编辑器设置检测工具　　321
C.3.3 　版本控制中的hook　　322
C.3.4 　持续集成　　322
C.4 　总结　　322
C.5 　参考资源　　323
附录D 　搭建局域NPM仓库　　324
D.1 　NPM仓库的安装　　325
D.1.1 　安装Erlang和CouchDB　　325
D.1.2 　搭建NPM仓库　　326
D.2 　高阶应用　　328
D.2.1 　镜像仓库　　328
D.2.2 　私有模块应用　　328
D.2.3 　纯私有仓库　　329
D.3 　总结　　331
D.4 　参考资源　　332
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入浅出Node.js
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>jQuery实战案例精粹
第1章 jQuery入门 1
11什么是 jQuery1
111 jQuery的功能 1
112配置 jQuery运行环境 4
113使用 Dreamweaver编写 jQuery代码 5
114认识 jQuery对象 9
12 jQuery选择器 10
121基本选择器 10
122层次选择器 13
123过滤选择器 16
124表单选择器 27
13操纵 DOM 28
131修改元素属性 28
132修改元素内容 31
133动态创建内容 32
134动态插入节点 33
135动态删除节点 35
14 jQuery的事件处理 37
141页面初始化事件 37
142绑定事件 38
143移除事件绑定 41
144切换事件 41
15小结 44
第2章 jQuery插件的应用开发 45
21认识 jQuery插件 45
211什么是插件 45
212常用的插件网站 49
213开发自己的插件 51
22用第三方插件创建自己的网站 57
221网站结构设计 57
222下载第三方插件 58
223使用第三方插件 59
224网站最终效果 62
23小结 63
第3章五星评级插件 jRating65
31准备 jRating插件 66
311下载 jRating插件 66
312 jRating的使用方法 67
313 jRating的参数介绍 69
314 jRating的效果展示 70
32开发图书点评网站 71
321准备 PHP开发环境 72
322创建图书点评页面 75
323引入五星评级插件 79
324评分查看页面 80
325保存评分信息到数据库 82
326从数据库读取评分信息 83
33小结 85
第4章流行的图片展示插件 Slider86
41准备 Sliderjs插件 86
411下载 Slidesjs插件 87
412参数说明 88
413图片轮播效果展示 93
42开发一个 AJAX网络相册 95
421创建相册页面 95
422实现 AJAX图像加载 97
423定义图片列表数据 98
424显示相册主题分类 98
425加载相册缩略图 100
426使用 Slider幻灯播放相片 102
427最终的多功能相册 103
43其他图片展示插件 104
431简单易用的 Easy Slider 104
432相册插件 Gallerifc 106
44小结 111
第5章日历和日期插件  112
51日期选取插件 Datepicker 113
511下载 Datepicker插件 113
512使用日期选择器 114
513 Datepicker参数说明 117
514同时显示多个月份 121
515限制日历的选择范围 122
516动画显示日历 123
52事件日历插件 xGCalendar 124
521下载 xGCalendar插件 124
522使用 xGCalendar插件 126
523 xGCalendar参数说明 129
524创建在线事件日历 131
525在线事件日历实现方法 133
53其他日历插件 ——jTimepicker 135
54小结 138
第6章表单插件 139
61准备 jQueryform插件 139
611下载 jQueryform插件 139
612参数说明 143
613无刷新表单的简易制作 145
62开发一个 Ajax效果的留言簿 147
621留言簿页面设计 148
622创建留言簿网站 149
623构建留言簿网页 151
624使用 jQuery进行客户端分页 153
625构建留言簿表单 157
626使用 Ajax无刷新提交表单 158
627添加留言功能实现 159
63其他表单插件 161
631快速生成表单插件 jFormer161
632表单美化插件 Uniforms 162
64小结 163
第7章表单验证插件 164
71准备 jQueryvalidate插件 164
711下载 jQueryvalidate插件 164
712参数说明 168
713表单验证效果展示 174
72带验证功能的用户注册表单 175
721注册表单的结构 176
722构建注册表单 177
723校验表单数据 180
724自定义的验证规则 183
725验证通过，自动提交 186
726最终的用户注册表单效果 186
73其他表单验证插件 188
731简单易用的 niceValidator 188
732 formValidator表单验证插件 189
74小结 190
第8章表格插件 191
81准备 Flexigrid插件 191
811下载 Flexigrid插件 192
812参数说明 195
813表格效果演示 198
82开发一个联系人列表页面 202
821准备表格显示数据 202
822定义 Flexigrid联系人列表 205
823添加新联系人 206
824删除联系人 210
83其他表格插件 211
831 jqGrid表格插件 212
832 ParamQuery表格插件 213
84小结 214
第9章树状列表插件 215
91准备 zTree插件 215
911下载 zTree插件 216
912参数说明 219
913树状效果演示 223
92开发一个 Web文件管理页面 228
921获取服务器端文件列表 229
922定义显示页面 232
923设置 zTree显示效果 233
924最终的资源管理器效果 234
93其他树状列表插件 235
931 Treeview树状插件 235
932 treetable树状列表插件 236
94小结 237
第10章对话框插件 238
101使用 FancyBox插件 239
1011下载 FancyBox插件 239
1012参数说明 243
1013使用 FancyBox开发网页画廊 244
102开发一个弹出式图片上传对话框 248
1021构建相册数据库 248
1022使用 FancyBox显示服务器图像 249
1023构建上传相片表单 251
1024上传图片 PHP实现 253
1025最终的图片上传对话框效果 256
103其他对话框插件 256
1031 jqModal对话框插件 256
1032使用 jQuery UI中的 Dialog对话框 258
104小结 260
第11章图片放大器插件 261
111准备 jQzoom插件 262
1111下载 jQzoom插件 262
1112参数说明 266
1113使用 jQzoom插件开发内嵌式图片放大器 267
112开发购物网站商品展示橱窗页面应用 269
1121构建商品图片信息数据库 269
1122使用 jQzoom插件显示服务器图像 271
1123构建上传商品图片表单 274
1124商品图片上传功能的 PHP实现 276
1125基于 jQzoom的商品展示橱窗最终效果 279
113其他图片放大器插件 279
1131 jQuery-gzoom图片缩放插件 280
1132使用基于 jQuery的AnythingZoomer插件 281
114小结 284
第12章图片文件上传插件 285
121准备 jQuery File Upload插件 286
1211下载 jQuery File Upload插件 286
1212参数说明 292
1213使用 jQuery File Upload插件实现多图片上传 295
122开发多功能图片文件上传 Web应用 300
1221添加 jQuery File Upload插件库文件 300
1222客户端添加本地图片文件功能实现 301
1223图片文件上传服务器功能实现 303
1224删除已上传服务器图片功能实现 306
1225多功能图片文件上传 Web应用最终效果 307
123其他文件上传插件 309
1231使用 jQuery Plupload插件上传文件 309
1232使用 jQuery Uploadify插件上传文件 311
124小结 313
第13章网站导航菜单插件 314
131准备 jQuerymmenu插件 315
1311下载 jQuerymmenu插件 315
1312参数说明 319
1313使用 jQuerymmenu插件实现自定义颜色风格导航菜单 322
132开发网站导航菜单管理 Web应用 325
1321添加 jQuerymmenu插件库文件 325
1322构建导航菜单管理页面布局 326
1323构建导航菜单结构 327
1324导航菜单管理选项设置实现 327
1325网站导航菜单管理 Web应用最终效果 329
133其他文件上传插件 331
1331使用 Color Fading Menu with jQuery插件 331
1332使用基于 jQuery的Kwicks滑动板导航菜单插件 335
134小结 338
第14章动画插件 339
141准备 Motio插件 340
1411下载 Motio插件 340
1412参数说明 344
1413使用 Motio插件实现精灵 (Sprite)模式动画 349
142开发 360度全景动画网页应用 352
1421添加 Motio插件库文件 352
1422添加 Motio插件 HTML代码 352
1423添加 Motio插件 CSS代码 354
1424执行 Motio插件初始化代码 354
1425基于 Motio插件实现 360度全景动画最终效果 355
143其他动画插件 ——制作背景动画的 jAni插件 357
144小结 360
第15章可拖放的布局插件 361
151准备 gridsterjs可拖放布局插件 362
1511下载 gridsterjs插件 362
1512参数说明 368
1513基于 gridsterjs插件实现动态缩放可拖放布局应用 372
152开发一个可拖放的商品橱窗页面 376
1521添加 gridsterjs插件库文件 376
1522构建可拖放的商品橱窗页面布局 376
1523可拖放的商品橱窗页面布局初始化 377
1524应用 gridsterjs插件回调方法增强商品橱窗页面功能 379
1325可拖放的商品橱窗页面布局最终效果 380
153其他可拖放布局插件 381
1531使用 Masonry布局插件 381
1532使用可视化页面布局 Layoutit插件 384
154小结 388
第16章页面便条插件 389
161准备 jStickyNote页面便条插件 390
1611下载 jStickyNote页面便条插件 390
1612参数说明 393
1613使用 jStickyNote插件实现大小尺寸页面便条 394
162开发多种风格页面便条 398
1621添加 jStickyNote插件库文件 398
1622构建 jStickyNote插件库页面布局 398
1623 jStickyNote插件库页面初始化 400
1624基于 jQuery的jStickyNote插件多种风格页面便条最终效果 402
163其他页面便条插件 ——StickyNotes页面便条 403
164小结 407
第17章图表插件 408
171准备 jqChart图表插件 409
1711下载 jqChart图表插件 409
1712参数说明 414
1713基于 jqChart图表插件实现分类 -折线图表应用 420
172开发一个模拟股票指数实时图应用 424
1721添加 jqChart图表插件插件库文件 424
1722构建股票指数实时图页面布局 425
1723模拟股票指数实时图初始化操作 425
1724模拟股票指数实时图应用最终效果 428
173其他图表插件 ——将HTML表格转化为图表的 HighchartsTable插件 430
174小结 432
第18章多媒体插件 433
181准备 jPlayer多媒体插件 434
1811下载 jPlayer多媒体插件 434
1812参数说明 438
1813使用 jPlayer多媒体插件开发视频播放器 442
182开发在线视频播放网页 445
1821添加 jPlayer插件库文件 445
1822构建在线视频播放网页页面布局 446
1823基于 jPlayer插件的在线视频播放网页初始化 448
183其他多媒体插件 ——jQuery Media Plugin插件 450
184小结 452
第19章谷歌地图插件 453
191准备 Gmap3地图插件 454
1911下载 Gmap3地图插件 454
1912参数说明 459
1913基于 Gmap3地图插件实现在线地图搜索功能应用 465
192基于 Gmap3地图插件实现集群功能应用 469
193其他地图插件 ——mageMapster插件 475
194小结 477
第20章 jQuery+HTML5文件拖动上传插件 478
201 jQuery HTML5 Uploader拖曳文件上传插件 479
2011下载 jQuery HTML5 Uploader插件 479
2012 jQuery HTML5 Uploader插件特性 481
2013 jQuery HTML5 Uploader插件参数说明 481
2014使用 jQuery HTML5 Uploader插件实现文件拖曳上传 481
202拖曳式文件上传 FileDropjs插件 484
2021下载 FileDropjs插件 484
2022 FileDropjs插件特性 485
2023 FileDropjs插件方法参数说明 485
2024使用 FileDropjs插件实现文件拖曳上传 487
203开发图片拖曳上传 Web应用 491
2031 HTML5文件上传功能 491
2032图片拖曳上传 HTML代码 491
2033图片拖曳上传 CSS代码 493
2034图片拖曳上传 JS代码 494
2035图片拖曳上传服务器端 PHP代码 496
2036图片拖曳上传 Web应用最终效果 497
204小结 498
第21章 jQuery+HTML5音视频播放器 499
211准备 MediaElementjs音视频播放器插件 500
2111下载 MediaElementjs音视频播放器插件 500
2112参数说明 505
2113使用 MediaElementjs插件模仿 WMP播放器 506
212基于 MediaElementjs插件事件处理播放器应用 508
2121添加 MediaElementjs插件库文件 508
2122构建事件处理播放器页面布局 509
2123事件处理播放器页面初始化 509
213其他 jQuery+HTML5音视频插件 511
2131下载 videojs音视频播放器插件 511
2132参数说明 513
2133使用 videojs插件实现网页视频播放器应用 515
214小结 517
第22章 jQuery+HTML5绘图程序 518
221准备 jquerydeviantartmuro绘图插件 519
2211下载 jquerydeviantartmuro绘图插件 519
2212参数说明 525
2213使用 jquerydeviantartmuro绘图插件开发 Sandbox绘图应用 528
222基于 HTML5的Canvas绘图初级应用 531
2221 Canvas（画布）简介 531
2222 Canvas（画布）技术基本知识 531
223 Canvas（画布）技术初级应用 533
2231 Canvas（画布）技术绘制矩形应用 533
2232 Canvas（画布）技术清除矩形区域应用 534
2233 Canvas（画布）技术绘制圆弧应用 535
2234 Canvas（画布）技术绘制路径应用 536
2235 Canvas（画布）技术绘制线段应用 538
2236 Canvas（画布）技术绘制贝塞尔（ Bezier）曲线与二次样条曲线应用 538
224 Canvas（画布）技术综合应用 ——绘制花样 540
225 Canvas（画布）技术综合应用 ——绘制复杂图样 541
226 Canvas（画布）技术综合应用 ——图形变换 542
227小结 545
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>jQuery实战案例精粹
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript Web应用开发
第一部分　构建过程
第1章　构建优先　　2
1.1　问题出现了　　2
1.1.1　45分钟内每秒损失17万美元　　3
1.1.2　构建优先　　3
1.1.3　繁琐的前戏　　4
1.2　遵守构建优先原则，提前计划　　5
1.3　构建过程　　7
1.4　处理应用的复杂度和设计理念　　8
1.5　钻研构建优先原则　　12
1.5.1　检查代码质量　　12
1.5.2　在命令行中使用lint工具　　15
1.6　总结　　18
第2章　编写构建任务，制定流程　　19
2.1　介绍Grunt　　20
2.1.1　安装Grunt　　21
2.1.2　设置第一个Grunt任务　　23
2.1.3　使用Grunt管理构建过程　　24
2.2　预处理和静态资源优化　　26
2.2.1　详述预处理　　26
2.2.2　处理LESS　　28
2.2.3　打包静态资源　　31
2.2.4　简化静态资源　　32
2.2.5　创建子图集　　34
2.3　检查代码完整性　　36
2.3.1　清理工作目录　　36
2.3.2　使用lint程序检查代码　　37
2.3.3　自动运行单元测试　　38
2.4　首次自己编写构建任务　　38
2.5　案例分析：数据库任务　　39
2.6　总结　　41
第3章　精通环境配置和开发流程　　42
3.1　应用的环境　　42
3.1.1　配置构建模式　　43
3.1.2　环境层面的配置　　47
3.1.3　开发环境有什么特别之处　　48
3.2　配置环境　　48
3.2.1　瀑布式存储配置的方法　　49
3.2.2　通过加密增强环境配置的安全性　　50
3.2.3　使用系统级方式设置环境层面的配置　　52
3.2.4　在代码中使用瀑布式方法合并配置　　53
3.3　自动执行繁琐的首次设置任务　　54
3.4　在持续开发环境中工作　　54
3.4.1　监视变动，争分夺秒　　55
3.4.2　监视Node应用的变动　　56
3.4.3　选择一款合适的文本编辑器　　57
3.4.4　手动刷新浏览器已经过时了　　58
3.5　总结　　58
第4章　发布、部署和监控　　59
4.1　发布应用　　60
4.1.1　优化图像　　60
4.1.2　缓存静态资源　　62
4.1.3　内嵌对首屏至关重要的CSS　　64
4.1.4　部署前要测试　　65
4.2　预部署操作　　65
4.2.1　语义化版本　　66
4.2.2　使用更改日志　　67
4.2.3　提升版本号时提交更改日志　　67
4.3　部署到Heroku　　68
4.3.1　在Heroku的服务器中构建　　70
4.3.2　管理多个环境　　71
4.4　持续集成　　71
4.4.1　使用Travis托管的CI　　72
4.4.2　持续部署　　73
4.5　监控和诊断　　74
4.5.1　日志和通知　　74
4.5.2　调试Node应用　　76
4.5.3　分析性能　　78
4.5.4　运行时间和进程管理　　78
4.6　总结　　79
第二部分　管理复杂度
第5章　理解模块化和依赖管理　　82
5.1　封装代码　　83
5.1.1　理解单一职责原则　　84
5.1.2　信息隐藏和接口　　86
5.1.3　作用域和this关键字　　87
5.1.4　严格模式　　90
5.1.5　提升变量的作用域　　91
5.2　JavaScript模块　　92
5.2.1　闭包和模块模式　　92
5.2.2　原型的模块化　　93
5.2.3　CommonJS模块　　94
5.3　管理依赖　　95
5.3.1　依赖图　　95
5.3.2　介绍RequireJS　　98
5.3.3　Browserify：在浏览器中使用CJS 模块　　100
5.3.4　Angular管理依赖的方式　　100
5.4　理解包管理　　102
5.4.1　Bower 简介　　103
5.4.2　大型库，小组件　　104
5.4.3　选择合适的模块系统　　105
5.4.4　学习循环依赖　　105
5.5　ECMAScript 6新功能简介　　106
5.5.1　在Grunt任务中使用Traceur　　107
5.5.2　Harmony中的模块　　107
5.5.3　创建块级作用域的let关键字　　108
5.6　总结　　109
第6章　理解JavaScript中的异步流程控制方法　　110
6.1　使用回调　　110
6.1.1　跳出回调之坑　　111
6.1.2　解开混乱的回调　　112
6.1.3　嵌套请求　　114
6.1.4　处理异步流程中的错误　　116
6.2　使用async库　　119
6.2.1　使用瀑布式、串行还是并行　　119
6.2.2　异步函数式任务　　123
6.2.3　异步任务队列　　124
6.2.4　制定流程和动态流程　　125
6.3　使用Promise对象　　127
6.3.1　Promise对象基础知识　　127
6.3.2　链接Promise对象　　130
6.3.3　控制流程　　132
6.3.4　处理被拒绝的Promise对象　　133
6.4　理解事件　　134
6.4.1　事件和DOM　　134
6.4.2　自己实现事件发射器　　135
6.5　展望：ES6生成器　　138
6.5.1　创建第一个生成器　　138
6.5.2　生成器的异步性　　140
6.6　总结　　141
第7章　使用模型-视图-控制器模式　　142
7.1　jQuery力不胜任　　142
7.2　在JavaScript中使用MVC模式　　145
7.2.1　为什么使用Backbone　　146
7.2.2　安装Backbone　　147
7.2.3　使用Grunt和Browserify编译Backbone模块　　147
7.3　介绍Backbone 　　148
7.3.1　Backbone视图　　149
7.3.2　创建Backbone模型　　152
7.3.3　使用Backbone集合组织模型　　154
7.3.4　添加Backbone路由器　　155
7.4　案例分析：购物清单　　157
7.4.1　从静态购物清单开始　　157
7.4.2　添加删除按钮　　159
7.4.3　把物品添加到购物车中　　161
7.4.4　实现行内编辑　　164
7.4.5　服务层和视图路由　　170
7.5　Backbone和Rendr：服务器和客户端共享渲染　　172
7.5.1　Rendr简介　　172
7.5.2　理解Rendr 的样板代码　　174
7.5.3　一个简单的Rendr应用　　176
7.6　总结　　182
第8章　测试JavaScript组件　　184
8.1　JavaScript测试速成课　　185
8.1.1　隔离逻辑单元　　185
8.1.2　使用TAP　　186
8.1.3　编写第一个单元测试　　186
8.1.4　在浏览器中运行使用Tape编写的测试　　187
8.1.5　筹备、行动和断言　　188
8.1.6　单元测试　　188
8.1.7　便利性优于约定　　189
8.1.8　案例分析：为事件发射器编写单元测试　　189
8.1.9　测试事件发射器　　190
8.1.10　测试.on方法　　192
8.1.11　驭件、侦件和代理　　193
8.1.12　模拟　　194
8.1.13　介绍Sinon.js　　195
8.1.14　监视函数的调用情况　　195
8.1.15　代理require调用　　196
8.2　在浏览器中测试　　198
8.2.1　伪造XHR请求和服务器响应　　198
8.2.2　案例分析：测试DOM交互　　200
8.3　案例分析：为使用MVC模式开发的购物清单编写单元测试　　209
8.3.1　测试视图路由器　　209
8.3.2　测试视图模型的验证　　214
8.4　自动运行Tape测试　　216
8.4.1　自动运行浏览器中的Tape测试　　217
8.4.2　持续测试　　218
8.5　集成测试、外观测试和性能测试　　218
8.5.1　集成测试　　219
8.5.2　外观测试　　219
8.5.3　性能测试　　220
8.6　总结　　221
第9章　REST API设计和分层服务架构　　222
9.1　规避API设计误区　　222
9.2　学习REST API设计　　223
9.2.1　端点、HTTP方法和版本　　224
9.2.2　请求、响应和状态码　　227
9.2.3　分页、缓存和限流　　229
9.2.4　为API编写文档　　231
9.3　实现分层服务架构　　232
9.3.1　路由层　　233
9.3.2　服务层　　233
9.3.3　数据层　　234
9.3.4　路由层　　234
9.3.5　服务层　　234
9.3.6　数据层　　235
9.4　在客户端使用REST API　　235
9.4.1　请求处理层　　236
9.4.2　中止旧请求　　236
9.4.3　使用一致的方式处理AJAX错误　　237
9.5　总结　　238
附录A　Node.js的模块　　240
附录B　介绍Grunt　　242
附录C　选择合适的构建工具　　249
附录D　JavaScript代码质量指南　　257
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript Web应用开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通JavaScript开发
第1章　面向对象的JavaScript　　1
1.1　JavaScript中的对象　　1
1.1.1　定制对象　　1
1.1.2　类　　2
1.2　代码规范和命名　　22
1.2.1　规则1：使用描述性的名字　　22
1.2.2　规则2：以小写字母开头　　23
1.2.3　规则3：使用骆驼命名法来分割单词　　23
1.2.4　规则4：全局常量使用全大写的名字　　23
1.2.5　规则5：集中在一个语句中声明函数体的所有变量并将其置于函数体顶部　　24
1.3　ECMAScript 5　　26
1.3.1　JSON数据格式解析　　27
1.3.2　严格模式　　27
1.3.3　函数绑定　　28
1.3.4　数组方法　　29
1.3.5　对象方法　　31
1.4　小结　　34
第2章　JavaScript文档　　35
2.1　行内和块级注释　　35
2.2　结构化的JavaScript文档　　36
2.3　YUIDoc文档格式　　36
2.3.1　为“类”、构造器、属性和方法添加文档　　37
2.3.2　为事件添加文档　　45
2.3.3　为代码示例添加文档　　45
2.3.4　其他YUIDoc文档标签　　46
2.4　更具表达性的文档格式——Markdown　　46
2.4.1　用标题来组织内容　　46
2.4.2　换行以及创建段落　　47
2.4.3　创建列表　　48
2.4.4　强调文本　　50
2.4.5　显示代码　　51
2.4.6　添加引用　　51
2.4.7　添加URL 链接　　52
2.4.8　插入图片　　53
2.4.9　生成水平分割线　　53
2.4.10　用反斜杠来插入保留字符　　53
2.4.11　对于其他内容，可以使用HTML　　54
2.5　使用YUIDoc创建一个文档网站　　54
2.6　小结　　59
第3章　编写高质量的JavaScript　　60
3.1　进行静态代码分析　　60
3.1.1　JSLint　　60
3.1.2　JSHint　　64
3.1.3　Google Closure Compiler和Closure Linter　　65
3.1.4　选择一个静态代码分析工具　　66
3.2　JavaScript中的单元测试　　67
3.2.1　JavaScript的单元测试框架　　67
3.2.2　使用Jasmine来进行JavaScript单元测试　　68
3.3　处理运行时错误　　74
3.3.1　JavaScript的原生错误类型　　75
3.3.2　将可能出错的代码放入try-catch语句中　　75
3.3.3　检测错误类型　　77
3.3.4　自定义错误类型　　77
3.4　度量代码质量　　79
3.4.1　单元测试的代码覆盖度　　79
3.4.2　度量代码复杂度　　81
3.5　小结　　84
第4章　增强JavaScript性能　　85
4.1　优化页面加载时间　　85
4.1.1　HTML 标签顺序　　85
4.1.2　JavaScript文件的GZip编码传输　　85
4.1.3　缩编、混淆和编译　　86
4.1.4　请求时才延迟加载JavaScript文件　　90
4.2　优化文档对象的操作　　91
4.2.1　实现对页面元素的最小化访问　　92
4.2.2　尽量利用已有元素　　92
4.2.3　离线DOM的利用　　93
4.2.4　使用CSS而非JavaScript来操控页面样式　　94
4.3　提升DOM 事件性能　　95
4.3.1　委托事件至父元素　　95
4.3.2　使用框架化处理频密发出的事件　　96
4.4　提升函数性能　　97
4.5　使用正则表达式实现更快速的字符串操作　　100
4.6　更快速地使用数组　　102
4.6.1　快速创建数组　　103
4.6.2　快速进行数组循环　　103
4.7　转移密集型任务至Web Worker　　106
4.8　简单的性能测量　　110
4.9　小结　　111
第5章　设计模式：创建型　　112
5.1　什么是设计模式　　112
5.2　创建型设计模式　　113
5.2.1　工厂模式　　113
5.2.2　抽象工厂模式　　116
5.2.3　生成器模式　　120
5.2.4　原型模式　　122
5.2.5　单例模式　　124
5.3　小结　　128
第6章　设计模式：结构型　　129
6.1　适配器模式　　129
6.2　组合模式　　132
6.3　装饰模式　　133
6.4　外观模式　　135
6.5　享元模式　　137
6.6　掺合模式　　143
6.7　模块模式　　147
6.8　代理模式　　150
6.9　小结　　153
第7章　设计模式：行为型　　154
7.1　职责链模式　　154
7.2　命令模式　　157
7.3　迭代器模式　　160
7.4　观察者模式　　163
7.5　中介者模式　　167
7.6　备忘录模式　　171
7.7　承诺模式　　173
7.8　策略模式　　184
7.9　小结　　188
第8章　设计模式：架构型　　189
8.1　MVC模式　　189
8.2　MVP模式　　197
8.3　MVVM模式　　203
8.4　架构型模式框架　　208
8.5　小结　　209
第9章　代码文件依赖管理　　210
9.1　使用RequireJS进行代码文件依赖管理　　210
9.2　加载、初始化RequireJS　　215
9.3　模块名称的别名　　217
9.4　内容分发网络和后备　　217
9.5　建立模块　　218
9.6　于请求时才加载额外的脚本　　220
9.7　RequireJS代码优化工具　　221
9.8　RequireJS的附加插件　　221
9.9　RequireJS的代替品　　222
9.10　小结　　223
第10章　移动设备JavaScript开发　　224
10.1　移动Web开发的局限性　　224
10.1.1　电池续航能力　　224
10.1.2　网络带宽速度与延时　　225
10.1.3　板载内存容量　　225
10.1.4　操作系统响应能力　　226
10.2　通过JavaScript访问移动设备上的传感器　　227
10.2.1　访问地理位置定位传感器　　228
10.2.2　访问触摸传感器　　230
10.2.3　访问姿态传感器和方向传感器　　232
10.2.4　访问运动传感器　　235
10.2.5　未能访问的传感器　　237
10.2.6　事件框架化与传感器数据　　237
10.2.7　利用传感器数据进一步发挥　　238
10.3　网络连接故障与离线状态　　238
10.3.1　在线与离线状态的检测　　239
10.3.2　利用Web Storage API长期保存数据　　241
10.3.3　HTML5 Application Cache　　244
10.4　响应式（自适应）网页设计的JavaScript　　246
10.5　小结　　247
第11章　使用CanvasAPI创建游戏　　248
11.1　在Canvas中的基本绘图操作　　248
11.2　高清Canvas元素　　251
11.3　使用Canvas制作游戏　　251
11.3.1　在Canvas上绘制图像　　252
11.3.2　Canvas中的动画　　253
11.3.3　游戏的控制　　254
11.3.4　碰撞检测　　256
11.3.5　游戏主循环　　257
11.3.6　分层Canvas以提高性能　　258
11.4　在Canvas中制作Frogger游戏　　258
11.5　小结　　299
第12章　使用WebRTC实现视频聊天　　300
12.1　WebRTC规范　　300
12.2　访问网络摄像头和麦克风　　300
12.3　建立一个简单的视频聊天网页应用程序　　303
12.4　创建视频聊天客户端　　307
12.5　小结　　317
第13章　客户端模板引擎的使用　　318
13.1　动态更新页面内容　　318
13.2　通过Ajax动态加载HTML　　319
13.3　在客户端应用模板　　320
13.3.1　不依赖库实现客户端模板　　321
13.3.2　使用Mustache.js模板引擎实现客户端模板　　323
13.3.3　使用Handlebars.js引擎实现客户端模板　　330
13.3.4　作为替换的其他客户端模板引擎库　　341
13.4　考虑渐进增强　　344
13.5　小结　　345
第14章　Node.js应用平台　　346
14.1　Node.js 安装　　346
14.2　编写Node.js应用程序　　347
14.2.1　console对象　　348
14.2.2　加载模块　　349
14.3　Node.js软件包　　351
14.4　划分Node.js应用程序分布至多个文件　　356
14.5　用于网页应用程序的Node.js框架　　357
14.5.1　Express框架　　357
14.5.2　Socket.IO　　360
14.6　Node.js应用程序的托管　　365
14.7　小结　　365
第15章　构建工具及自动化　　366
15.1　构建工具　　366
15.1.1　Grunt——JavaScript任务运行器　　367
15.1.2　Gulp.js——“流式”构建系统　　374
15.1.3　使用构建工具来使常规任务实现自动化　　377
15.2　第三方库和框架的管理　　392
15.3　项目的建立以及基本框架搭建　　393
15.4　小结　　395
第16章　浏览器开发者工具　　396
16.1　找出隐藏的浏览器开发者工具　　396
16.2　JavaScript 控制台　　398
16.2.1　输出信息到控制台窗口　　398
16.2.2　使用控制台进行性能测量　　400
16.2.3　移除引用console对象的代码以进行发布　　401
16.3　对运行中的JavaScript Code进行调试　　401
16.3.1　已缩编代码的处理　　401
16.3.2　暂停并观察正在运行的JavaScript代码　　403
16.4　分析JavaScript代码　　405
16.4.1　查找内存泄漏　　405
16.4.2　识别性能瓶颈　　408
16.5　小结　　410
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通JavaScript开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>众妙之门：JavaScript与jQuery技术精粹
第一部分 JavaScript基础篇 1
第1章 初学JavaScript需知的七件事 1
1.1 缩略标记 2
1.2 JSON数据格式 3
1.3 JavaScript自带函数(数学、数组以及字符串函数) 5
1.4 事件代理 7
1.5 匿名函数和模块模式 9
1.6 允许配置 11
1.7 与后台交互 12
1.8 特定于浏览器的代码就是浪费时间，试试库文件 12
第2章 复查JavaScript代码的启示 15
2.1 简介 16
2.2 在哪里可以使代码得到复查？ 17
2.3 该怎样构造复查请求？ 18
2.4 进行代码复查的人员需要提供的信息 19
2.5 协作代码复查 20
2.6 JavaScript代码复查实例 21
2.7 总结 33
第3章 利用七步测试法找到正确的JavaScript解决方法 35
3.1 问题的关键不在于你 37
3.2 介绍JavaScript部件的七步测试法 37
3.3 最后说一说文件大小 47
第4章 关于JavaScript的十个古怪之处和秘密 49
4.1 数据类型及定义 50
4.2 正则表达式 52
4.3 函数及范围 53
4.4 浏览器 55
4.5 其他 56
第5章 JavaScript的“七宗罪” 59
5.1 罪恶之源：特定于浏览器的代码 60
5.2 提供帮助的库 61
5.3 罪状1：与其他脚本兼容不好 62
5.4 罪状2：相信取代测试 66
5.5 罪状3：使用错误的技术进行设计 67
5.6 罪状4：依赖于JavaScript和特定输入设备 71
5.7 罪状5：使维护变成不必要的麻烦 74
5.8 罪状6：未进行文档整理的代码 78
5.9 罪状7：为机器而非人优化 79
第6章 JavaScript动画计算详解 81
6.1 从0到1的有趣过程 82
6.2 不是罪状，只是一种自然运动 84
6.3 沙堆中的圆圈，周而复始 89
6.4 一种快速DOM绘图程序 91
6.5 总结 97
第7章 使用AJAX爬行算法的可搜索式动态信息 99
7.1 AJAX的问题 100
7.2 相同内容使用两种URL 100
7.3 HTML代码片段 102
7.4 利用站点地图 105
7.5 谷歌站长工具 105
7.6 利用HTML5制作美观的URL 108
7.7 掩蔽 109
7.8 散列感叹号或许有点丑，但它却非常有效 109
第二部分 jQuery应用篇 111
第8章 jQuery几个易混淆之处 111
8.1 parent()、parents()与closest() 112
8.2 position()与offset() 114
8.3 css('width')和css('height')与width()和height() 115
8.4 click()(etc)、bind()、live()与delegate() 116
8.5 children()与find() 120
8.6 not()、is()与:not() 121
8.7 each()与filter() 123
8.8 merge()与extend() 125
8.9 总结 126
第9章 使用jQuery和PHP GD处理图片 129
9.1 开始之前 130
9.2 设置文件 130
9.3 上传功能 131
9.4 验证表单 132
9.5 报告结果与继续处理 136
9.6 增加交互性 137
9.7 保存已剪裁的图片 141
9.8 最后提醒 146
第10章 使用jQuery制作自己的书签 147
10.1 准备开始 148
10.2 进入jQuery 149
10.3 获取信息 150
10.4 处理字符 151
10.5 组合起来 152
10.6 加以完善 156
10.7 更多资源 158
第11章 基本的jQuery插件模式 161
11.1 模式 163
11.2 从轻量级开始 164
11.3 “完整的”小部件工厂 166
11.4 命名空间和嵌套命名空间 169
11.5 发布/订阅自定义事件(使用小部件工厂) 171
11.6 使用DOM到对象桥接模式实现原型继承 173
11.7 jQuery UI小部件工厂桥接 176
11.8 使用小部件工厂的jQuery Mobile小部件 179
11.9 RequireJS和jQuery UI小部件工厂 182
11.10 全局和每次调用可重写模式(最佳选项模式) 186
11.11 高度可配置的和可变的插件 187
11.12 兼容AMD和CommonJS的模块 190
11.13 优秀jQuery插件必备要素 199
11.14 总结 200
第12章 jQuery插件清单：是否应该使用jQuery插件？ 201
12.1 究竟需不需要插件？ 202
12.2 避免红色警告 203
12.3 最终评估 206
12.4 总结 208
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>众妙之门：JavaScript与jQuery技术精粹
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript专家编程
第1章对象和原型1
1.1鸟瞰JavaScript441
脚本设计2
1.2对象概述3
1.2.1对象化3
1.2.2原型编程20
1.3小结29
第2章函数30
2.1JavaScript中的代码块30
2.2小结44
第3章了解闭包45
3.1作用域的真相45
3.1.1理解this关键字46
3.1.2块级作用域48
3.2第一个闭包程序49
3.3为什么要用闭包50
对象工厂50
3.4小结53
第4章术语和俚语54
4.1Jargon.prototype=newSlang（）54
什么是编程术语？55
4.2强转55
4.2.1转为String56
4.2.2转为数字56
4.2.3强转的陷阱57
4.3逻辑运算符61
4.3.1逻辑与（&&）61
4.3.2逻辑或（||）62
4.3.3逻辑非（！）62
4.4位变换65
4.4.1按位与（&）65
4.4.2按位或（|）67
4.4.3按位异或（；）68
4.4.4按位非（～～）69
4.4.5位移操作（＜＜，＞＞，＞＞＞）69
4.5不易读代码71
4.5.1暗中的eval71
4.5.2各种进制71
4.5.3使用Unicode编码的变量72
4.5.4真正的WAT在这里72
4.6小结73
4.7补充参考资料74
第5章异步生活75
5.1理解JavaScript中的并发75
并发75
5.2理解JavaScript的事件循环77
5.2.1运行至完成77
5.2.2事件触发的设计77
5.2.3事件循环的内部77
5.3回调79
5.3.1感知性能80
5.3.2连续传递风格81
5.3.3回调地狱82
5.4Promise：从未来返回83
使用Promise84
5.5生成器和协程85
5.5.1生成器86
5.5.2协程的约定88
5.5.3可持续生成器89
5.6WebWorkers91
5.6.1并发91
5.6.2知道什么时候做一个工头91
5.6.3雇用worker92
5.7小结100
其他资源100
第6章JavaScript的IRL102
6.1硬件崇拜者日记102
6.1.1消防软管102
6.1.2每个人都可以玩的硬件103
6.1.3了解物理硬件103
6.2物理计算104
物联网105
6.3为什么要使用JavaScript105
6.3.1搭建桥梁106
6.3.2响应式编程范式106
6.4NodeBots：快速，廉价和伺服控制107
6.4.1REPL108
6.4.2为何要多此一举108
6.4.3前提条件109
6.4.4ArduinoIDE110
6.4.5Node串行端口112
6.4.6Firmata115
6.4.7Johnny—Five118
6.5Fauxbots123
6.6其他资源123
第7章风格124
7.1什么是风格124
7.2什么是编程风格125
7.2.1一致性125
7.2.2表达能力125
7.2.3简洁125
7.2.4约束性126
7.3JavaScript风格指南126
7.3.1视觉清晰度规则126
7.3.2计算效率规则134
7.4施行代码风格139
7.4.1Beautifiers139
7.4.2通过IDE执行140
7.5小结142
第8章工作流程144
8.1不要铲雪144
8.2什么是工作流程144
8.3合理的JavaScript开发流程145
8.4工具的选择145
8.4.1订购工具146
8.4.2依赖关系管理148
8.4.3保护升级路径149
8.5引导程序150
8.6开发153
CoffeeScript示例154
8.7测试157
8.7.1如何测试157
8.7.2Karma157
8.7.3PhantomJS159
8.7.4测试什么160
8.8构建163
8.8.1编译163
8.8.2分析163
8.8.3拼接163
8.8.4优化163
8.8.5测试164
8.8.6通知164
8.9支持164
8.9.1JavaScript中的错误报告165
8.9.2源码映射165
8.10小结165
第9章代码质量167
9.1定义代码质量167
9.1.1主观质量168
9.1.2客观质量168
9.2如何度量质量168
9.3为什么要度量代码质量169
9.4度量JavaScript代码质量170
静态代码分析170
9.5小结188
第10章提高可测试性189
10.1为什么测试无法测试189
10.1.1测试谬论190
10.1.2确认偏见193
10.2找到基线195
10.2.1语句覆盖196
10.2.2函数覆盖197
10.2.3分支覆盖197
10.2.4Istanbul198
10.2.5覆盖率偏见199
10.3偏见消除测试200
10.3.1模糊测试200
10.3.2JSCheck202
10.3.3自动测试206
10.4小结207
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript专家编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript宝典
第1部分 JavaScript起步
第1章 JavaScript在万维网及其他方面的作用
第2章 开发适用于各种浏览器的JavaScript
第3章 第1个JavaScript脚本
第2部分 JavaScript教程
第4章 浏览器对象和文档对象
第5章 脚本和HTML文档
第6章 程序设计基础之一
第7章 程序设计基础之二
第8章 window和document对象
第9章 表单和表单元素
第10章 String、Math和Date对象
第11章 用脚本编写框架和多窗口
第12章 图像和动态HTML
第3部分 文档对象参考
第13章 JavaScript基础
第14章 文档对象模型基础
第15章 通用html元素对象
第16章 window对象和frame对象
第17章 location对象和history对象
第18章 document对象和body对象
第19章 Link和Anchor对象
第20章 lmage对象、Area对象、Map对象和Canvas对象
第21章 Form及其相关对象
第22章 按钮对象
第23章 文本相关表单对象
第24章 选择、选项和文件上传对象
第25章 event对象
第26章 styleSheet表和style对象
第27章 Ajax和XML
第4部分 JavaScript核心语言参考
第28章 string对象
第29章 Math、Number和Boolean对象
第30章 date对象
第31章 Array对象
第32章 控制结构和异常处理
第33章 JavaScript操作符
第34章 函数和自定义对象
第35章 全局函数和语句
第5部分 附录
附录A JavaScript和浏览器对象快速参考
附录B JavaScript保留字
附录C 练习答案
附录D JavaScript和DOM Internet资源
附录E 本书配套光盘内容
第6部分 附赠章节(本部分内容在光盘中)
第36章 主体文本对象
第37章 HTML指示性对象
第38章 表和列表对象
第39章 Navigator和其他环境对象
第40章 定位对象
第41章 嵌入对象
第42章 正则表达式和RegExp对象
第43章 数据输入验证
第44章 脚本化Java applet和插件
第45章 脚本调试
第46章 安全和NetScape签名脚本
第47章 跨浏览器动态HTML问题
第48章 Internet Explorer的行为
第49章 应用程序：表格和日历
第50章 应用程序：查找表
第51章 应用程序：较小的订单
第52章 应用程序：分级式目录
第53章 应用程序：计算和绘图
第54章 应用程序：智能Updated标志位
第55章 应用程序：Decision Helper
第56章 应用程序：跨浏览器DHTML拼图游戏
第57章 转换XML数据
第58章 应用程序：创建自定义google地图
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript宝典
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript网页动画设计
第1章　JavaScript动画的优势　　1
1.1　JavaScript动画与CSS动画　　2
1.2　强大的性能　　3
1.3　功能　　4
1.3.1　页面滚动　　4
1.3.2　动画反转　　4
1.3.3　基于物理的动效　　5
1.4　易维护的工作流　　5
1.5　小结　　6
第2章　使用Velocity.js实现动画　　7
2.1　JavaScript动画库的种类　　8
2.2　安装jQuery和Velocity　　8
2.3　使用Velocity：基础知识　　8
2.3.1　Velocity和jQuery　　9
2.3.2　参数　　9
2.3.3　属性　　10
2.3.4　值　　11
2.3.5　链式操作　　12
2.4　使用Velocity：选项　　13
2.4.1　duration（持续时间）　　13
2.4.2　easing（缓动）　　13
2.4.3　begin（开始）和complete（完成）　　15
2.4.4　loop（循环）　　16
2.4.5　delay（延迟）　　17
2.4.6　display（显示）和visibility（可见性）　　18
2.5　使用Velocity：其他功能　　19
2.5.1　reverse（反转）命令　　20
2.5.2　scrolling（滚动）　　20
2.5.3　color（颜色）　　21
2.5.4　transform（变换）　　22
2.6　使用Velocity：不用jQuery（中级技巧）　　22
2.7　小结　　24
第3章　动效设计理论　　25
3.1　动效设计提升用户体验　　26
3.2　实用　　27
3.2.1　借鉴惯例　　27
3.2.2　预览结果　　27
3.2.3　无聊时的消遣　　28
3.2.4　用本能反应　　29
3.2.5　使人对互动充满欲望　　29
3.2.6　体现重要性　　29
3.2.7　减少同时发生的动画　　29
3.2.8　减少动画种类　　30
3.2.9　镜像动画　　30
3.2.10　限制持续时间　　30
3.2.11　限制动画　　31
3.3　优雅　　32
3.3.1　不要华而不实　　32
3.3.2　唯一华而不实的机会　　32
3.3.3　考虑个性化　　32
3.3.4　不要拘泥于不透明度动画　　33
3.3.5　将动画拆分为多步　　33
3.3.6　错开动画　　33
3.3.7　从触发元素处产生动画　　34
3.3.8　使用图形　　34
3.4　小结　　36
第4章　动画工作流　　37
4.1　CSS动画工作流　　38
4.1.1　CSS的问题　　38
4.1.2　什么时候用CSS比较明智　　38
4.2　代码技巧：将样式与逻辑分离　　40
4.2.1　一般做法　　40
4.2.2　优化做法　　41
4.3　代码技巧：组织排序动画　　44
4.3.1　一般做法　　45
4.3.2　优化做法　　46
4.4　代码技巧：打包你的效果　　47
4.4.1　一般做法　　47
4.4.2　优化做法　　48
4.5　设计技巧　　51
4.5.1　定时乘数　　51
4.5.2　使用Velocity动效设计器　　52
4.6　小结　　53
第5章　文本动画　　55
5.1　文本动画的一般做法　　56
5.2　为使用Blast.js实现动画准备文本元素　　57
5.2.1　Blast.js的工作原理　　58
5.2.2　安装　　59
5.2.3　选项：delimiter（分隔符）　　60
5.2.4　选项：customClass（自定义类）　　61
5.2.5　选项：generateValueClass（生成值类）　　61
5.2.6　选项：tag（标签）　　62
5.2.7　命令：reverse（反转）　　63
5.3　让文本过渡进入视图或离开视图　　64
5.3.1　替换已有文本　　64
5.3.2　错开动画　　65
5.3.3　过渡文本离开视图　　65
5.4　过渡单个文本部分　　67
5.5　华丽地过渡文本　　68
5.6　文字装饰　　68
5.7　小结　　70
第6章　SVG入门　　71
6.1　用代码创建图片　　72
6.2　SVG标记的写法　　72
6.3　SVG样式设置　　73
6.4　对SVG的支持　　74
6.5　SVG动画　　74
6.5.1　传入属性　　75
6.5.2　表象属性　　75
6.5.3　定位属性（positional attribute）VS变换（transform）　　75
6.6　应用实例：logo动画　　76
6.7　小结　　78
第7章　动画性能　　79
7.1　网络性能的实际情况　　80
7.2　技术：去除布局颠簸　　82
7.2.1　问题　　82
7.2.2　解决办法　　82
7.2.3　jQuery元素对象　　83
7.2.4　强制给值　　85
7.3　批量添加DOM　　86
7.3.1　问题　　86
7.3.2　解决办法　　87
7.4　技巧：避免影响临近的元素　　88
7.4.1　问题　　88
7.4.2　解决办法　　89
7.5　技巧：减少并发加载　　90
7.5.1　问题　　90
7.5.2　解决办法　　90
7.6　技巧：不用持续响应滚动（scroll）和调整大小（resize）事件　　92
7.6.1　问题　　92
7.6.2　解决办法　　92
7.7　技巧：减少图片渲染　　93
7.7.1　问题　　93
7.7.2　解决办法　　93
7.7.3　暗中潜入的图片　　94
7.8　在旧浏览器上降级动画　　94
7.8.1　问题　　94
7.8.2　解决办法　　95
7.9　尽早找到你的性能门限　　95
7.10　小结　　98
第8章　动画演示　　99
8.1　行为　　100
8.2　代码结构　　101
8.3　代码段：动画设置　　103
8.4　代码段：圆形创建　　104
8.5　代码段：容器动画　　105
8.5.1　三维CSS入门　　105
8.5.2　属性　　106
8.5.3　选项　　107
8.6　代码段：圆形动画　　107
8.6.1　值函数　　108
8.6.2　不透明度动画　　109
8.6.3　平移动画　　109
8.6.4　反转命令　　110
8.7　小结　　111
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript网页动画设计
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5和JavaScript Web应用开发
第1章 客户端架构
1.1 了解HTML
1.2 在客户端放置更多代码
1.3 浏览器（即平台）
1.4 结语
第2章 移动Web
2.1 移动优先
2.2 决定支持
2.3 移动浏览器市场份额
2.4 浏览器分级
2.5 企业中的HTML
2.6 QA和设备测试
第3章 为移动Web构造程序
3.1 移动Web的观感
3.1.1 外观
3.1.2 感觉
3.2 交互和过渡
3.2.1 滑动
3.2.2 翻转
3.2.3 旋转
3.2.4 调试硬件加速
3.2.5 内存消耗
3.3 读取和缓冲
3.4 网络类型检测与处理
3.5 框架和方法
3.5.1 单页
3.5.2 无页面结构
3.5.3 100% JavaScript驱动
3.5.4 移动调试
第4章 桌面Web
4.1 作为平台的浏览器
4.2 设备和特征检测
4.2.1 客户端特征检测
4.2.2 客户端userAgent检测
4.2.3 服务器端userAgent检测
4.3 压缩
4.3.1 GZIP与DEFLATE的对比
4.3.2 精简
4.4 JavaScript MVC框架和服务器
4.4.1 最重要的5个框架
4.4.2 Backbone
4.4.3 Ember
4.4.4 Angular
4.4.5 Batman
4.4.6 Knockout
第5章 Web Socket
5.1 构建协议栈
5.2 编程模式
5.2.1 将事件从服务器中转到浏览器
5.2.2 通过WebSocket传递的二进制数据
5.2.3 管理代理
5.2.4 框架
第6章 用Web Storage进行优化
6.1 Storage API
6.2 StorageEvent API
6.3 使用JSON进行编码和解码
6.4 安全性和秘密浏览
6.4.1 安全性
6.4.2 秘密浏览
6.5 谁在使用Web Storage
今天就使用Web Storage
6.6 从客户端缓冲数据
6.7 在任何浏览器中使用Web Storage
6.8 框架
6.8.1 LawnChair
6.8.2 persistence.js
第7章 Geolocation
7.1 实用用例：用户跟踪
7.2 实用用例：反向地址匹配
7.3 框架
7.3.1 geo-location-javascript
7.3.2 Webshims lib
第8章 Device Orientation API
第9章 Web Workers
9.1 实用用例：池化和并行作业
9.2 其他用处
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5和JavaScript Web应用开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML、CSS和JavaScript入门经典
第1章 发布Web内容
1.1 HTML和World Wide Web的简短历史
1.2 创建Web内容
1.3 理解Web内容递送
1.4 选择Web托管提供商
1.5 利用多种Web浏览器进行测试
1.6 创建一个示例文件
1.7 使用FTP传输文件
1.7.1 选择FTP客户
1.7.2 使用FTP客户
1.8 理解在Web服务器上的什么位置存放文件
1.8.1 基本的文件管理
1.8.2 使用索引页面
1.9 在没有Web服务器的情况下分布内容
1.9.1 在本地发布内容
1.9.2 在博客上发布内容
1.10 测试Web内容的几点提示
1.11 总结
1.12 问与答
1.13 作业
1.13.1 测验
1.13.2 答案
1.13.3 练习
第2章 理解HTML与XHTML之间的联系
2.1 做好准备
2.2 从简单的Web页面开始
2.3 每个XHTML Web页面都必须具有的HTML标签
2.4 利用段落和换行符组织页面
2.5 利用标题组织内容
2.6 验证Web内容
2.7 关于HTML、XML、XHTML和HTML5的内幕消息
2.8 总结
2.9 问与答
2.10 作业
2.10.1 测验
2.10.2 答案
2.10.3 练习
第3章 理解层叠样式表
3.1 CSS的工作原理
3.2 基本的样式表
3.3 CSS样式基础
3.3.1 布局属性
3.3.2 格式化属性
3.4 使用样式类
3.5 使用样式ID
3.6 内部样式表和内联样式
3.7 总结
3.8 问与答
3.9 作业
3.9.1 测验
3.9.2 答案
3.9.3 练习
第4章 理解JavaScript
4.1 学习Web脚本编程的基础知识
4.1.1 脚本和程序
4.1.2 JavaScript简介
4.2 JavaScript如何适应Web页面
4.2.1 使用单独的JavaScript文件
4.2.2 理解JavaScript事件
4.3 探索JavaScript的能力
4.3.1 改进导航
4.3.2 验证表单
4.3.3 特殊效果
4.3.4 远程脚本调用（AJAX）
4.4 利用JavaScript显示时间
4.5 开始创建脚本
4.6 添加JavaScript语句
4.6.1 在变量中存储数据
4.6.2 计算结果
4.7 创建输出
4.8 向Web页面中添加脚本
4.9 测试脚本
4.9.1 修改脚本
4.9.2 处理JavaScript错误
4.10 总结
4.11 问与答
4.12 作业
4.12.1 测验
4.12.2 答案
4.12.3 练习
第5章 处理字体、文本块和列表
5.1 粗体字、斜体字和特殊的文本格式化效果
5.2 调整字体
5.3 处理特殊字符
5.4 在页面上对齐文本
5.4.1 使用属性
5.4.2 对齐块级元素
5.5 三种HTML列表
5.6 在列表内放置列表
5.7 总结
5.8 问与答
5.9 作业
5.9.1 测验
5.9.2 答案
5.9.3 练习
第6章 使用表格显示信息
6.1 创建简单的表格
6.2 控制表格大小
6.3 表格内的对齐和跨越
6.4 利用表格进行页面布局
6.5 总结
6.6 问与答
6.7 作业
6.7.1 测验
6.7.2 答案
6.7.3 练习
第7章 使用外部链接和内部链接
7.1 使用Web地址
7.2 使用锚在页面内建立链接
7.2.1 利用锚标识页面中的位置
7.2.2 链接到锚位置
7.3 在你自己的Web内容之间创建链接
7.4 链接到外部Web内容
7.5 链接到电子邮件地址
7.6 在新的浏览器窗口中打开链接
7.7 使用CSS编排超链接的样式
7.8 总结
7.9 问与答
7.10 作业
7.10.1 测验
7.10.2 答案
7.10.3 练习
第8章 处理颜色、图像和多媒体
8.1 用于选择颜色的最佳实践
8.2 了解Web颜色
8.3 使用颜色的十六进制值
8.4 使用CSS设置背景、文本和边框的颜色
8.5 选择图形软件
8.6 关于图形至少需要知道什么
8.7 准备照片图像
8.7.1 裁剪图像
8.7.2 调整图像大小
8.7.3 调整图像颜色
8.7.4 控制JPEG压缩
8.8 创建广告条和按钮
8.9 减少图像中的颜色数量
8.10 处理透明的图像
8.11 创建平铺背景
8.12 创建动画式Web图形
8.13 把图像放在Web页面上
8.14 利用文本描述图像
8.15 指定图像的高度和宽度
8.16 对齐图像
8.16.1 水平的图像对齐
8.16.2 垂直的图像对齐
8.17 把图像转变成链接
8.18 使用背景图像
8.19 使用图像映射
8.19.1 为什么图像映射并非总是必要的
8.19.2 映射图像内的区域
8.19.3 为图像映射创建HTML代码
8.20 把多媒体整合进网站中
8.20.1 链接到多媒体文件
8.20.2 嵌入多媒体文件
8.20.3 关于使用多媒体的额外几点提示
8.21 总结
8.22 问与答
8.23 作业
8.23.1 测验
8.23.2 答案
8.23.3 练习
第9章 处理边距、填充、对齐和浮动
9.1 使用边距
9.2 填充元素
9.3 使所有内容保持对齐
9.4 理解float属性
9.5 总结
9.6 问与答
9.7 作业
9.7.1 测验
9.7.2 答案
9.7.3 练习
第10章 理解CSS盒子模型和定位
10.1 CSS盒子模型
10.2 关于定位的详细解释
10.3 控制元素的堆叠方式
10.4 管理文本流
10.5 总结
10.6 问与答
10.7 作业
10.7.1 测验
10.7.2 答案
10.7.3 练习
第11章 使用CSS对列表、文本和导航进行更多的处理
11.1 HTML列表回顾
11.2 CSS盒子模型如何影响列表
11.3 放置列表项指示符
11.4 利用列表项和CSS创建图像映射
11.5 导航列表与普通列表之间有何区别
11.6 利用CSS创建垂直导航系统
11.6.1 编排单级垂直导航系统的样式
11.6.2 编排多级垂直导航系统的样式
11.7 利用CSS创建水平导航系统
11.8 总结
11.9 问与答
11.10 作业
11.10.1 测验
11.10.2 答案
11.10.3 练习
第12章 创建固定布局或流体布局
12.1 理解固定布局
12.2 理解流体布局
12.3 创建固定/流体混合式布局
12.3.1 从基本的布局结构开始
12.3.2 在固定/流体混合式布局中定义两列
12.3.3 设置布局的最小宽度
12.3.4 在固定/流体混合式布局中处理列高度
12.4 总结
12.5 问与答
12.6 作业
12.6.1 测验
12.6.2 答案
12.6.3 练习
第13章 理解动态网站
13.1 理解不同类型的脚本编程
13.2 在HTML中包括JavaScript
13.3 显示随机内容
13.4 了解文档对象模型
13.5 基于用户交互更改图像
13.6 总结
13.7 问与答
13.8 作业
13.8.1 测验
13.8.2 答案
13.8.3 练习
第14章 初识JavaScript程序设计
14.1 基本概念
14.1.1 语句
14.1.2 把任务与函数相结合
14.1.3 变量
14.1.4 了解对象
14.1.5 条件语句
14.1.6 循环语句
14.1.7 事件处理程序
14.1.8 首先运行哪个脚本
14.2 JavaScript语法规则
14.2.1 大小写敏感性
14.2.2 变量、对象和函数名称
14.2.3 保留字
14.2.4 空白
14.3 使用注释
14.4 关于JavaScript的最佳实践
14.5 总结
14.6 问与答
14.7 作业
14.7.1 测验
14.7.2 答案
14.7.3 练习
第15章 使用文档对象模型（Document Object Model，DOM）
15.1 理解文档对象模型（Document Object Model，DOM）
15.2 使用window对象
15.3 处理document对象
15.3.1 获取关于文档的信息
15.3.2 在文档中编写文本
15.3.3 使用链接和锚
15.4 访问浏览器的历史记录
15.5 使用location对象
15.6 关于DOM结构的更多知识
15.6.1 节点
15.6.2 父对象与子对象
15.6.3 兄弟对象
15.7 处理DOM节点
15.7.1 基本的节点属性
15.7.2 节点的关系属性
15.7.3 文档方法
15.7.4 节点方法
15.8 创建可定位的元素（图层）
15.8.1 利用JavaScript控制定位
15.9 隐藏和显示对象
15.10 修改页面内的文本
15.11 向页面中添加文本
15.12 总结
15.13 问与答
15.14 作业
15.14.1 测验
15.14.2 答案
15.14.3 练习
第16章 使用JavaScript变量、字符串和数组
16.1 使用变量
16.1.1 选择变量名
16.1.2 使用局部变量和全局变量
16.1.3 给变量赋值
16.2 了解表达式和运算符
16.2.1 使用JavaScript运算符
16.2.2 运算符优先级
16.3 JavaScript中的数据类型
16.4 在数据类型之间转换
16.5 使用String对象
16.5.1 创建String对象
16.5.2 赋值
16.5.3 计算字符串的长度
16.5.4 转换字符串的大小写
16.6 处理子串
16.6.1 使用字符串的一部分
16.6.2 获取单个字符
16.6.3 查找子串
16.7 使用数值型数组
16.7.1 创建数值型数组
16.7.2 了解数组长度
16.7.3 访问数组元素
16.8 使用字符串数组
16.8.1 创建字符串数组
16.8.2 拆分字符串
16.8.3 对字符串数组进行排序
16.9 对数值型数组进行排序
16.10 总结
16.11 问与答
16.12 作业
16.12.1 测验
16.12.2 答案
16.12.3 练习
第17章 使用JavaScript函数和对象
17.1 使用函数
17.1.1 定义函数
17.1.2 调用函数
17.1.3 返回值
17.2 介绍对象
17.2.1 创建对象
17.2.2 对象的属性和值
17.2.3 了解方法
17.3 使用对象简化脚本编程
17.3.1 定义对象
17.3.2 定义对象的方法
17.3.3 创建对象的实例
17.4 扩展内置对象
17.5 使用Math对象
17.5.1 四舍五入和截尾
17.5.2 生成随机数
17.5.3 其他Math函数
17.6 使用Math函数
17.7 使用with关键字
17.8 处理日期
17.8.1 创建Date对象
17.8.2 设置Date值
17.8.3 读取Date值
17.8.4 处理时区
17.8.5 在日期格式之间转换
17.9 总结
17.10 问与答
17.11 作业
17.11.1 测验
17.11.2 答案
17.11.3 练习
第18章 利用条件和循环控制流程
18.1 if语句
18.1.1 条件运算符
18.1.2 利用逻辑运算符把条件结合起来
18.1.3 else关键字
18.2 使用简写的条件表达式
18.3 利用if和else测试多个条件
18.3.1 HTML文件
18.3.2 JavaScript文件
18.4 利用switch使用多个条件
18.5 使用for循环
18.6 使用while循环
18.7 使用do...while循环
18.8 使用循环
18.8.1 创建无限循环
18.8.2 退出循环
18.8.3 继续执行循环
18.9 遍历对象属性
18.10 总结
18.11 问与答
18.12 作业
18.12.1 测验
18.12.2 答案
18.12.3 练习
第19章 响应事件
19.1 理解事件处理程序
19.1.1 对象和事件
19.1.2 创建事件处理程序
19.1.3 利用JavaScript定义事件处理程序
19.1.4 支持多个事件处理程序
19.1.5 使用event对象
19.2 使用鼠标事件
19.2.1 移入和移出
19.2.2 按下和释放（以及单击）
19.3 使用键盘事件
19.4 使用onLoad和onUnload事件
19.5 使用onclick更改的外观
19.6 总结
19.7 问与答
19.8 作业
19.8.1 测验
19.8.2 答案
19.8.3 练习
第20章 使用窗口和框架
20.1 利用对象控制窗口
20.1.1 window对象的属性
20.1.2 创建新窗口
20.1.3 打开和关闭窗口
20.2 移动和调整窗口
20.3 使用定时器
20.4 显示对话框
20.5 处理框架
20.6 构建框架集
20.6.1 创建框架集文档
20.6.2 添加单独的框架
20.7 在框架与窗口之间建立链接
20.7.1 修改框架的边框
20.7.2 将JavaScript对象用于框架
20.7.3 frames数组
20.8 使用内联框架
20.9 总结
20.10 问与答
20.11 作业
20.11.1 测验
20.11.2 答案
20.11.3 练习
第21章 使用不唐突的JavaScript
21.1 脚本编程的最佳实践
21.1.1 内容、表示和行为
21.1.2 渐进增强
21.1.3 添加事件处理程序
21.1.4 Web标准：避免成为特定于浏览器的
21.1.5 注解代码
21.1.6 有用性
21.1.7 设计模式
21.1.8 可访问性
21.2 读取浏览器信息
21.2.1 显示浏览器信息
21.2.2 应对不诚实的浏览器
21.3 跨浏览器的脚本编程
21.3.1 特性检测
21.3.2 应对浏览器的怪癖
21.4 支持非JavaScript的浏览器
21.4.1 使用标签
21.4.2 保持JavaScript是可选的
21.4.3 避免错误
21.5 总结
21.6 问与答
21.7 作业
21.7.1 测验
21.7.2 答案
21.7.3 练习
第22章 使用第三方库
22.1 使用第三方库
22.1.1 Prototype
22.1.2 jQuery
22.1.3 Script.aculo.us
22.1.4 AJAX框架
22.2 其他库
22.3 总结
22.4 问与答
22.5 作业
22.5.1 测验
22.5.2 答案
22.5.3 练习
第23章 Greasemonkey：利用JavaScript增强Web
23.1 Greasemonkey简介
23.1.1 在Firefox中安装Greasemonkey
23.1.2 用于Internet Explorer的Trixie
23.1.3 其他的浏览器
23.1.4 用户脚本安全性
23.2 处理用户脚本
23.2.1 查找脚本
23.2.2 安装脚本
23.2.3 管理脚本
23.2.4 测试用户脚本
23.2.5 激活与停用Greasemonkey或Trixie
23.3 创建你自己的用户脚本
23.3.1 创建简单的用户脚本
23.3.2 描述用户脚本
23.3.3 测试脚本
23.3.4 Greasemonkey API函数
23.3.5 创建特定于站点的脚本
23.3.6 调试用户脚本
23.4 总结
23.5 问与答
23.6 作业
23.6.1 测验
23.6.2 答案
23.6.3 练习
第24章 AJAX：远程脚本编程
24.1 AJAX简介
24.1.1 JavaScript客户（前端）
24.1.2 服务器端脚本（后端）
24.1.3 XML
24.1.4 流行的AJAX示例
24.1.5 AJAX框架和库
24.1.6 AJAX的局限性
24.2 使用XMLHttpRequest
24.2.1 创建请求
24.2.2 打开URL
24.2.3 发送请求
24.2.4 等待响应
24.2.5 解释响应数据
24.3 创建简单的AJAX库
24.3.1 ajaxRequest函数
24.3.2 ajaxResponse函数
24.3.3 使用库
24.4 使用库创建AJAX测验
24.4.1 HTML文件
24.4.2 XML文件
24.4.3 JavaScript文件
24.4.4 测试示例
24.5 调试AJAX应用程序
24.6 总结
24.7 问与答
24.8 作业
24.8.1 测验
24.8.2 答案
24.8.3 练习
第25章 创建打印友好的Web页面
25.1 什么使得页面是打印友好的
25.2 应用特定于媒体的样式表
25.3 设计用于打印页面的样式表
25.4 在打印预览中查看Web页面
25.5 总结
25.6 问与答
25.7 作业
25.7.1 测验
25.7.2 答案
25.7.3 练习
第26章 处理基于Web的表单
26.1 HTML表单如何工作
26.2 创建表单
26.3 接受文本输入
26.4 命名每份表单数据
26.5 探索表单输入控件
26.5.1 复选框
26.5.2 单选按钮
26.5.3 选择列表
26.5.4 文本框和文本区
26.6 提交表单数据
26.7 利用JavaScript访问表单元素
26.8 显示来自表单的数据
26.9 通过电子邮件发送表单结果
26.10 总结
26.11 问与答
26.12 作业
26.12.1 测验
26.12.2 答案
26.12.3 练习
第27章 组织和管理网站
27.1 何时一个页面就足够了
27.2 组织简单的站点
27.3 组织较大的站点
27.4 编写可维护的代码
27.4.1 利用注释给代码加注解
27.4.2 缩进代码以使之清晰
27.5 考虑版本控制
使用版本控制系统
27.6 总结
27.7 问与答
27.8 作业
27.8.1 测验
27.8.2 答案
27.8.3 练习
第28章 帮助人们找到你的Web页面
28.1 宣扬你的网站
28.2 利用主要的搜索站点列出你的页面
28.3 提供用于搜索引擎的提示
28.4 关于搜索引擎优化的额外提示
28.5 总结
28.6 问与答
28.7 作业
28.7.1 测验
28.7.2 答案
28.7.3 练习
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML、CSS和JavaScript入门经典
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript忍者秘籍（第2版）
本书通过4个部分，让你从“学徒”晋升为“忍者”。
第1部分介绍我们后续学习的主题和所需要的工具。
第1章介绍JavaScript语言及最重要的特性，推荐目前我们开发应用时需要遵循的最佳实践，包括测试和性能分析。
因为我们对JavaScript的研究是基于浏览器上下文，因此在第2章中，我们介绍客户端Web应用的生命周期，这有助于我们理解在开发Web应用程序时JavaScript所扮演的角色。
第2部分重点关注JavaScript的核心支柱之一——函数。我们将研究为什么函数如此重要，函数之间的区别，以及定义和调用函数的细节内容。我们还将特别关注一个新的函数类型——生成器函数，它在处理异步代码时尤为有效。
第3章从彻底检查JavaScript函数的定义开始涉足基础语言，也许你会感到吃惊。预期中可能是把对象作为重点，但是，让我们充分理解函数、JavaScript函数式语言，从普通的JavaScript程序员升级为JavaScript“忍者”！
在第4章中，我们继续研究函数，深入研究函数调用的机制，以及隐式函数参数的来龙去脉。
关于函数的内容还没有结束，在第5章我们把讨论推向更高的一个层级，研究两个密切相关的概念——作用域和闭包。闭包是函数式编程中的关键概念，闭包允许更细粒度地控制程序中声明和创建的对象作用域范围。控制对象的作用域范围是“忍者”编写代码的关键因素。即使不阅读后续的章节（但我们希望大家不要停下来），编程水平也会比刚开始学习时提高很多。
在第6章中，我们通过一种全新的函数类型（生成器函数）和一个新的对象类型（promise）帮助我们处理异步代码，最后结束对函数的研究。我们还展示了如何结合generator与promise，优雅地处理异步代码。
第3部分研究JavaScript的第二支柱——对象。我们将彻底地探索JavaScript中的面向对象，研究如何保护对对象的访问，如何处理集合和正则表达式。
第7章阐述对象，彻底了解JavaScript中面向对象是如何工作的。此外，我们还将引入一个新的JavaScript关键字：class。其背后概念可能与你所期望的有所不同。
第8章继续探索对象，我们将学习使用多种不同的技术保护对对象的访问。
在第9章中，我们将特别关注JavaScript中几种不同类型的集合。数组，从JavaScript诞生起就是JavaScript的一部分，map和set是最近新加入JavaScript的集合类型。
第10章着重介绍正则表达式，正则表达式是经常被忽略的一项语言特性，但正确使用正则表达式，可以减少很多代码量。我们将学习如何构建和使用正则表达式，以及如何使用正则表达式及其相关方法，优雅地解决一些重复出现的问题。
在第11章中，我们将学习使用不同技术实现代码模块化：更小、相对松耦合的代码片段，以及改善代码的机构和组织方式。
最后，第4部分研究JavaScript与Web页面的交互以及浏览器如何处理事件，最后结束本书。在结束之前的最后一个重要话题是跨浏览器开发。
第12章研究如何通过DOM API 动态修改页面，如何处理元素属性、样式，以及一些重要的性能注意事项。
第13章讨论JavaScript的单线程执行模型的重要性，以及单线程执行模型对事件循环的影响。我们还将学习间隔定时器的工作原理，以及如何使用它们提高Web应用程序的性能。
第14章检查开发时主要关心的5项跨浏览器问题：浏览器缺陷、缺陷修复、外部代码、功能缺失和回归。讨论诸如特性模拟和对象检测等方法，有助于跨浏览器开发的挑战。
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript忍者秘籍（第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通JavaScript（第2版）
第1章　专业JavaScript技术　　1
1.1　JavaScript的历程　　1
1.2　现代JavaScript　　3
1.2.1　库的崛起　　4
1.2.2　移动，可不只说说而已　　5
1.2.3　何去何从　　5
1.3　后续内容　　6
1.4　小结　　7
第2章　特性、函数和对象　　8
2.1　语言特性　　8
2.1.1　引用和值　　8
2.1.2　作用域　　10
2.1.3　上下文　　12
2.1.4　闭包　　13
2.1.5　函数重载与类型检查　　16
2.2　新的对象工具　　19
2.2.1　对象　　19
2.2.2　修改对象　　19
2.3　小结　　22
第3章　创建可重用代码　　23
3.1　面向对象的JavaScript　　23
3.1.1　继承　　27
3.1.2　成员可见性　　31
3.1.3　面向对象JavaScript的未来　　33
3.2　打包JavaScript　　33
3.2.1　命名空间　　33
3.2.2　模块模式　　34
3.2.3　立即调用的函数表达式　　36
3.3　小结　　38
第4章　JavaScript代码调试　　39
4.1　调试工具　　39
4.1.1　控制台　　40
4.1.2　利用控制台的特性　　42
4.2　调试器　　43
4.2.1　DOM探查器　　44
4.2.2　网络分析器　　44
4.2.3　时间线　　45
4.2.4　侧写器　　45
4.3　小结　　47
第5章　文档对象模型　　48
5.1　文档对象模型简介　　48
5.1.1　DOM结构　　50
5.1.2　DOM中的相互关系　　51
5.2　访问DOM元素　　53
5.3　等待HTML DOM载入　　56
5.3.1　等待页面载入　　56
5.3.2　等待正确的事件　　56
5.4　获取元素内容　　57
5.4.1　获取元素的文本内容　　57
5.4.2　获取元素的HTML　　59
5.5　使用元素特性　　59
5.6　修改DOM　　63
5.6.1　使用DOM创建节点　　63
5.6.2　插入DOM　　63
5.6.3　向DOM中插入HTML　　64
5.6.4　从DOM中删除节点　　66
5.6.5　处理DOM中的空白字符　　67
5.6.6　简单的DOM导航　　68
5.7　小结　　70
第6章　事件　　71
6.1　JavaScript事件简介　　71
6.1.1　栈、队列和事件循环　　71
6.1.2　事件阶段　　72
6.2　绑定事件侦听器　　73
6.2.1　传统式绑定　　74
6.2.2　DOM绑定：W3C　　77
6.2.3　解除事件绑定　　78
6.3　常见的事件特性　　79
6.3.1　事件对象　　79
6.3.2　取消事件冒泡　　80
6.3.3　屏蔽浏览器的默认行为　　81
6.3.4　事件委托　　82
6.4　事件对象　　83
6.4.1　普通属性　　83
6.4.2　鼠标属性　　84
6.4.3　键盘属性　　86
6.5　事件类型　　86
6.5.1　页面事件　　87
6.5.2　UI事件　　88
6.5.3　鼠标事件　　88
6.5.4　键盘事件　　89
6.5.5　表单事件　　90
6.5.6　事件可访问性　　90
6.6　小结　　91
第7章　JavaScript与表单验证　　92
7.1　HTML与CSS表单验证　　92
7.2　JavaScript表单验证　　95
7.2.1　验证与用户　　98
7.2.2　验证事件　　99
7.3　定制验证　　101
7.4　小结　　102
第8章　Ajax入门　　103
8.1　使用Ajax　　104
8.1.1　HTTP请求　　104
8.1.2　HTTP响应　　109
8.2　小结　　111
第9章　Web生产工具　　112
9.1　为项目搭建脚手架　　112
9.2　NPM必不可少　　113
9.3　生成器　　113
9.3.1　版本控制　　115
9.3.2　添加文件、更新以及首次
提交　　116
9.4　小结　　119
第10章　AngularJS与测试　　120
10.1　视图与控制器　　122
10.2　远程数据源　　124
10.3　路由　　126
10.4　路由参数　　126
10.5　应用程序测试　　128
10.5.1　单元测试　　128
10.5.2　使用Protractor进行端到端
测试　　132
10.6　小结　　134
第11章　JavaScript的未来　　135
11.1　ECMAScript的过去和未来　　135
11.2　使用ECMAScript Harmony　　136
11.2.1　Harmony资源　　136
11.2.2　使用Harmony　　137
11.3　ECMAScript Harmony语言特性　　141
11.3.1　箭头函数　　142
11.3.2　类　　143
11.3.3　Promise　　144
11.3.4　模块　　146
11.3.5　类型扩展　　148
11.3.6　全新的聚合类型　　151
11.4　小结　　153
附录A　DOM参考　　154
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通JavaScript（第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript基础教程（第9版）
第1章　了解JavaScript　　1
1.1　JavaScript是什么　　1
1.2　JavaScript不是Java　　2
1.3　JavaScript的起源　　3
1.4　JavaScript可以做什么　　3
1.5　JavaScript不能做什么　　4
1.6　JavaScript及其他　　4
1.6.1　jQuery是什么　　4
1.6.2　Ajax是什么　　4
1.7　组合式语言　　6
1.7.1　对象　　6
1.7.2　属性　　6
1.7.3　方法　　7
1.7.4　将对象、属性和方法组合在一起　　7
1.7.5　DOM简介　　7
1.8　处理事件　　8
1.9　值和变量　　8
1.9.1　操作符　　9
1.9.2　赋值和比较　　9
1.9.3　比较　　10
1.10　编写对JavaScript友好的HTML　　10
1.10.1　结构、表现和行为　　11
1.10.2　div和span　　11
1.10.3　class和id　　11
1.11　要使用什么工具　　12
第2章　开始　　14
2.1　将脚本放在哪里　　14
2.2　关于函数　　15
2.3　使用外部脚本　　16
2.4　在脚本中添加注释　　17
2.5　向用户发出警告　　18
2.6　确认用户的选择　　20
2.7　提示用户　　21
2.8　用链接对用户进行重定向　　23
2.9　使用JavaScript改进链接　　25
2.10　使用多级条件　　28
2.11　处理错误　　31
第3章　第一个Web应用程序　　33
3.1　用循环进行重复操作　　33
3.2　将值传递给函数　　38
3.3　探测对象　　39
3.4　处理数组　　41
3.5　处理有返回值的函数　　42
3.6　更新数组　　43
3.7　使用do/while循环　　45
3.8　以多种方式调用脚本　　46
3.9　组合使用JavaScript和CSS　　48
3.10　检查状态　　51
3.11　处理字符串数组　　56
第4章　处理图像　　60
4.1　创建翻转器　　60
4.2　创建更有效的翻转器　　62
4.3　构建三状态翻转器　　66
4.4　由链接触发翻转器　　67
4.5　让多个链接触发一个翻转器　　69
4.6　处理多个翻转器　　72
4.7　创建循环的广告条　　75
4.8　在循环广告条中添加链接　　77
4.9　建立循环式幻灯片　　79
4.10　显示随机图像　　81
4.11　随机开始循环显示图像　　82
第5章　窗口与框架　　84
5.1　防止页面显示在框架中　　84
5.2　设置目标　　85
5.3　用JavaScript加载iframe　　87
5.4　iframe的使用　　88
5.5　创建动态iframe　　90
5.6　在文档之间共享函数　　91
5.7　打开新窗口　　93
5.8　为窗口加载不同的内容　　96
第6章　表单处理　　98
6.1　选择并转移导航菜单　　99
6.2　动态地改变菜单　　102
6.3　建立必须填写的字段　　104
6.4　根据其他字段对字段进行检查　　108
6.5　标识有问题的字段　　110
6.6　准备进行表单验证　　112
6.7　处理单选按钮　　116
6.8　用一个字段设置另一个字段　　119
6.9　检验Zip编码　　121
6.10　验证电子邮件地址　　125
第7章 表单和正则表达式　　130
7.1　用正则表达式验证电子邮件地址　　130
7.2　验证文件名　　135
7.3　提取字符串　　137
7.4　格式化字符串　　139
7.5　对字符串进行格式化和排序　　142
7.6　对字符串进行格式化和验证　　143
7.7　使用正则表达式替换元素　　146
第8章　处理事件　　148
8.1　处理窗口事件　　148
8.1.1　onload事件　　148
8.1.2　onunload事件　　151
8.1.3　onbeforeunload事件　　151
8.1.4　onresize事件　　153
8.1.5　onmove事件　　153
8.1.6　onabort事件　　153
8.1.7　onerror事件　　153
8.1.8　onfocus事件和onblur事件　　153
8.1.9　onscroll事件　　153
8.1.10　onDOMContentLoaded事件　　153
8.2　处理鼠标事件　　153
8.2.1　onmousedown事件　　154
8.2.2　onmouseup事件　　156
8.2.3　onmousemove事件　　156
8.2.4　onmouseover事件　　159
8.2.5　onmouseout事件　　159
8.2.6　ondblclick事件　　159
8.2.7　onclick事件　　160
8.3　表单事件处理　　160
8.3.1　onsubmit事件　　160
8.3.2　onreset事件　　161
8.3.3　onchange事件　　161
8.3.4　onselect事件　　161
8.3.5　onclick事件　　161
8.3.6　onblur事件　　161
8.3.7　onfocus事件　　163
8.4　键事件处理　　164
8.4.1　onkeydown事件　　164
8.4.2　onkeyup事件　　167
8.4.3　onkeypress事件　　167
8.5　高级事件处理　　167
8.5.1　addEventListener方法　　167
8.5.2　removeEventListener方法　　169
8.5.3　dispatchEvent方法　　169
8.5.4　initEvent方法　　169
8.5.5　stopPropagation方法　　169
8.5.6　preventDefault方法　　169
第9章　JavaScript和cookie　　171
9.1　建立第一个cookie　　171
9.2　读取cookie　　174
9.3　显示cookie　　175
9.4　使用cookie作为计数器　　176
9.5　删除cookie　　178
9.6　处理多个cookie　　180
9.7　显示新内容提醒信息　　182
第10章　对象和DOM　　186
10.1　关于节点操纵　　186
10.1.1　DOM 2和W3C　　186
10.1.2　DOM 2术语　　186
10.1.3　DOM 3　　187
10.2　添加节点　　187
10.3　删除节点　　189
10.4　删除特定的节点　　191
10.5　插入节点　　194
10.6　替换节点　　196
10.7　用对象字面量编写代码　　199
第11章　建立动态页面　　204
11.1　在网页上显示当前日期　　204
11.2　处理周中的日期　　206
11.3　根据时间对消息进行定制　　207
11.4　根据时区显示日期　　208
11.5　把24小时制转换为12小时制　　211
11.6　创建倒数计数器　　214
11.7　隐藏和显示层　　217
11.8　移动文档中的对象　　220
11.9　日期方法　　221
第12章　JavaScript应用示例　　223
12.1　使用可折叠菜单　　223
12.2　添加下拉菜单　　226
12.3　改进下拉菜单　　229
12.4　带说明的幻灯片　　232
12.5　一个娱乐姓名生成器　　235
12.6　柱状图生成器　　239
12.7　样式表切换器　　246
第13章　Ajax简介　　254
13.1　Ajax的定义　　254
13.2　读取服务器数据　　256
13.3　解析服务器数据　　263
13.4　刷新服务器数据　　268
13.5　从服务器获得数据　　270
13.6　用Ajax预览链接　　273
13.7　自动补全表单字段　　276
13.8　检查文件是否存在　　281
第14章　工具包、框架和库　　285
14.1　添加jQuery　　286
14.2　使用jQuery更新页面　　288
14.3　使用jQuery交互　　288
14.4　交互与更新　　291
14.5　条纹表格　　292
14.6　表格排序　　296
第15章　用jQuery设计页面　　301
15.1　突出显示新元素　　301
15.2　创建可折叠菜单　　303
15.3　创建更漂亮的对话框　　306
15.4　自动完成字段　　309
15.5　添加可排序选项卡　　311
15.6　使用复选框作为按钮　　313
15.7　在页面中添加日历　　316
15.8　使用ThemeRoller定制外观　　320
第16章　基于jQuery的应用　　323
16.1　以jQuery为基础　　323
16.1.1　Ajax、JSON和jQuery　　323
16.1.2　jQuery插件　　324
16.2　拖放元素　　324
16.3　使用jQuery处理外部数据　　327
16.4　使用jQuery插件　　329
16.5　添加jQuery音频插件　　333
第17章　为移动设备编写脚本　　335
17.1　改变方向　　335
17.2　处理触摸事件　　342
17.3　针对不同设备编写特定代码　　344
17.4　定位设备　　346
第18章　bookmarklet　　349
18.1　第一个bookmarklet　　349
18.2　改变页面的背景颜色　　353
18.3　改变页面样式　　354
18.4　查询单词　　355
18.5　查看图像　　357
18.6　显示ISO Latin字符　　359
18.7　将RGB值转换为十六进制　　360
18.8　对值进行转换　　362
18.9　bookmarklet计算器　　362
18.10　缩短URL　　364
18.11　检验页面　　364
18.12　通过电子邮件发送页面　　365
18.13　改变页面大小　　366
附录A　JavaScript的版本演化和参考资料　　368
附录B　JavaScript保留字　　386
附录C　CSS参考　　389
附录D　其他学习资源　　398
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript基础教程（第9版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript网页开发<体验式学习教程>(附光盘)
第1章 HTML语言基础
第2章 HTML高级部分
第3章 CSS
第4章 JavaScript语法
第5章 DOM编程
第6章 脚本编程的相关技术
第7章 正则表达式
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript网页开发<体验式学习教程>(附光盘)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5、CSS和JavaScript开发
第一部分第1章 HTML语言简介  1.1 HTML简介  1.2 HTML基本概念  1.3 HTML文档类型  1.4 HTML文档结构  1.5 HTML编辑器介绍  1.6 基本元素介绍  1.7 练习第2章 超链接、图片及其他常用元素  2.1 超链接元素    2.1.1 超链接的基本用法    2.1.2 相对路径与绝对路径    2.1.3 超链接的target属性    2.1.4 锚链接    2.1.5 链接到电子邮件和网站  2.2 图片元素    2.2.1 常见图片格式介绍    2.2.2 图片元素的基本用法    2.2.3 图片元素的常用属性    2.2.4 图片与超链接    2.2.5 图片热点  2.3 其他常用元素  2.4 练习第3章 表格、列表与框架  3.1 表格的组成  3.2 表格的属性    3.2.1 table元素的属性    3.2.2 tr元素的属性    3.2.3 td/th元素的属性  3.3 表格的嵌套  3.4 使用表格进行页面布局  3.5 列表元素  3.6 框架结构    3.6.1 frameset与frame元素    3.6.2 子窗体之间的互操作    3.6.3 iframe元素  3.7 练习第4章 HTML表单  4.1 表单的作用与提交方式  4.2 表单中的输入域  4.3 表单的设计    4.3.1 选择表单的提交方式    4.3.2 尽量避免键盘输入    4.3.3 设计向导式表单    4.3.4 使用表格对表单进行布局  4.4 练习    第二部分第5章 层叠样式表  5.1 层叠样式表CSS简介    5.1.1 CSS与HTML    5.1.2 CSS的版本  5.2 CSS的语法    5.2.1 基本语法规则    5.2.2 样式的引用方式    5.2.3 选择器分类    5.2.4 选择器的命名规则    5.2.5 样式的继承  5.3 常用CSS属性介绍  5.4 练习第6章 利用CSS进行网页布局  6.1 网页布局原则  6.2 网页布局原则  6.3 常见的网页布局技术分析    6.3.1 上、中、下布局    6.3.2 中部有侧边栏的布局    6.3.3 中部为左、中、右结构的布局    6.3.4 UL + CSS布局  6.4 网页布局实例  6.5 练习    第三部分第7章 JAVASCRIPT语言基础  7.1 JAVASCRIPT语言简介    7.1.1 JavaScript的作用    7.1.2 JavaScript的历史    7.1.3 Javascript中的常见问题  7.2 JAVASCRIPT语言特点  7.3 JAVASCRIPT中的变量    7.3.1 变量的定义    7.3.2 变量的类型    7.3.3 注释与特殊符号    7.3.4 运算符  7.4 JAVASCRIPT中的流程控制语句  7.5 JAVASCRIPT中的方法  7.6 练习第8章 JAVASCRIPT中的数据结构与内置对象  8.1 JAVASCRIPT中的数组    8.1.1 数组的定义    8.1.2 数组的长度与下标    8.1.3 数组的常用方法    8.1.4 多维数组  8.2 JAVA SCRIPT中的HASH结构    8.2.1 hash的定义    8.2.2 hash的遍历    8.2.3 数组 + hash = JSON  8.3 JAVASCRIPT中的本地对象  8.4 JAVASCRIPT中的浏览器对象  8.5 练习第9章 JAVASCRIPT事件处理  9.1 事件的概念  9.2 加载事件  9.3 鼠标事件    9.3.1 单击事件    9.3.2 其他鼠标事件    9.3.3 鼠标滚轴事件（非标准）  9.4 键盘事件  9.5 表单事件    9.5.1 焦点事件    9.5.2 内容更改事件    9.5.3 表单提交事件  9.6 练习第10章 JAVA SCRIPT操作DOM模型  10.1 DOM模型简介  10.2 使用DOM解析HTML  10.3 使用DOM修改HTML    10.3.1 通过DOM创建节点    10.3.2 通过DOM删除节点    10.3.3 通过DOM修改节点  10.4 练习第11章 常见网页特效  11.1 下拉框联动  11.2 二级下拉菜单  11.3 固定位置的广告  11.4 漂浮广告  11.5 练习    第四部分附录A HTML 5的新特性附录B CSS 3新特性简介附录C 各章练习参考答案
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5、CSS和JavaScript开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript入门经典
第一部分　Web脚本编写与JavaScript语言的概念
第1章　了解JavaScript
1.1　学习Web脚本编写基础
1.1.1　脚本和程序
1.1.2　JavaScript简介
1.2　在网页中如何嵌入JavaScript
1.2.1　JavaScript和HTML
1.2.2　使用单独的JavaScript文件
1.2.3　事件
1.3　浏览器和JavaScript
1.3.1　文档对象模型(DOM)
1.3.2　Internet Explorer
1.3.3　Netscape和Firefox
1.3.4　其他浏览器
1.3.5　JavaScript的版本
1.4　指定JavaScript的版本
1.5　JavaScript在浏览器之外的应用
1.6　JavaScript功能一览
1.6.1　改善导航功能
1.6.2　验证表单
1.6.3　特殊效果
1.6.4　AJAX
1.7　JavaScript的替代技术
1.7.1　Java
1.7.2　ActiveX
1.7.3　VBScript
1.7.4　CGI和服务器端脚本技术
1.8　小结
1.9　问题与解答
1.10　测试题
1.11　测试题答案
1.12　练习题
第2章　创建简单的脚本
2.1　脚本编写的工具
2.1.1　文本编辑器
2.1.2　浏览器
2.2　在JavaScript中显示时间
2.3　开始编写脚本
2.4　添加JavaScript语句
2.4.1　在变量中存储数据
2.4.2　计算结果
2.5　创建输出
2.6　在网页中添加脚本
2.7　测试脚本
2.7.1　修改脚本
2.7.2　处理JavaScript中的错误
2.8　实践练习：使用一个单独的JavaScript文件
2.9　小结
2.10　问题与解答
2.11　测试题
2.12　测试题答案
2.13　练习题
第3章　开始JavaScript编程
3.1　基本概念
3.1.1　语句
3.1.2　用函数来组合任务
3.1.3　变量
3.1.4　理解对象
3.1.5　条件语句
3.1.6　循环语句
3.1.7　事件处理程序
3.1.8　最先运行哪个脚本
3.2　JavaScript语法规则
3.2.1　区分大小写
3.2.2　变量、对象和函数的名称
3.2.3　保留字
3.2.4　空格
3.3　使用注释
3.4　编写JavaScript的好习惯
3.5　实践练习：使用事件处理程序
3.6　小结
3.7　问题与解答
3.8　测试题
3.9　测试题答案
3.10　练习题
第4章　使用文档对象模型(DOM)
4.1　认识文档对象模型
4.1.1　DOM的历史
4.1.2　DOM的分级标准
4.2　使用window对象
4.3　处理Web文档
4.3.1　获得文档的信息
4.3.2　在文档中写入文字
4.3.3　使用link和anchor对象
4.4　访问浏览器的history对象
4.5　使用location对象
4.6　实践练习：创建“后退”和“前进”按钮
4.7　小结
4.8　问题与解答
4.9　测试题
4.10　测试题答案
4.11　练习题
第二部分　学习JavaScript基础
第5章　使用变量、字符串和数组
5.1　使用变量
5.1.1　选择变量名称
5.1.2　使用局部变量和全局变量
5.1.3　给变量赋值
5.2　理解表达式和运算符
5.2.1　使用JavaScript运算符
5.2.2　运算符的优先级
5.3　JavaScript的数据类型
5.4　数据类型之间的转换
5.5　使用String对象
5.5.1　创建String对象
5.5.2　给变量赋值
5.5.3　计算字符串长度
5.5.4　字符串大小写转换
5.6　使用子字符串
5.6.1　使用字符串的一部分
5.6.2　获取单个字符
5.6.3　查找子字符串
5.7　使用数值数组
5.7.1　创建数值数组
5.7.2　理解数组的长度
5.7.3　存取数组元素
5.8　使用字符串数组
5.8.1　建立字符串数组
5.8.2　分离字符串
5.8.3　字符串数组的排序
5.9　数值数组的排序
5.10　实践练习：排序并显示名字
5.11　小结
5.12　问题与解答
5.13　测试题
5.14　测试题答案
5.15　练习题
第6章　使用函数和对象
6.1　使用函数
6.1.1　定义函数
6.1.2　调用函数
6.1.3　返回值
6.2　对象简介
6.2.1　创建对象
6.2.2　对象属性和值
6.2.3　了解方法
6.3　使用对象来简化脚本
6.3.1　定义对象
6.3.2　定义对象的方法
6.3.3　创建对象实例
6.4　扩展内置对象
6.5　实践练习：使用对象保存数据
6.6　小结
6.7　问题与解答
6.8　测试题
6.9　测试题答案
6.10　练习题
第7章　用条件和循环控制流程
7.1　if语句
7.1.1　条件运算符
7.1.2　条件与逻辑运算符
7.1.3　关键字else
7.2　使用简写的条件表达式
7.2.1　用if和else测试多种条件
7.2.2　使用带switch的多个条件
7.2.3　使用for循环
7.2.4　使用while循环
7.2.5　使用do…while循环
7.3　使用循环
7.3.1　创建无穷循环
7.3.2　退出循环
7.3.3　继续循环
7.4　循环遍历对象属性
7.5　实践练习：处理数组和循环
7.6　小结
7.7　问题与解答
7.8　测试题
7.9　测试题答案
7.10　练习题
第8章　使用内置函数和程序库
8.1　使用Math对象
8.1.1　舍入和截取
8.1.2　生成随机数
8.1.3　其他Math函数
8.2　使用Math函数
8.3　使用with关键字
8.4　使用日期
8.4.1　创建Date对象
8.4.2　设置Date的值
8.4.3　读取Date的值
8.4.4　使用时区
8.4.5　日期格式的转换
8.5　使用第三方程序库
8.5.1　Prototype
8.5.2　Script.aculo.us
8.5.3　AJAX框架
8.6　其他程序库
8.7　实践练习：用程序库增添效果
8.7.1　下载程序库
8.7.2　包含文件
8.7.3　使用效果
8.7.4　构建脚本
8.8　小结
8.9　问题与解答
8.10　测试题
8.11　测试题答案
8.12　练习题
第三部分　深入学习DOM
第9章　事件响应
9.1　认识事件处理程序
9.1.1　对象与事件
9.1.2　创建事件处理程序
9.1.3　使用JavaScript定义事件处理程序
9.1.4　支持多个事件处理程序
9.1.5　使用event对象
9.1.6　Internet Explorer的event属性
9.1.7　Netscape和Firefox的event属性
9.2　使用鼠标事件
9.2.1　移至和移开
9.2.2　使用onMouseMove事件
9.2.3　常态和按下(以及单击)
9.3　使用键盘事件
9.4　使用onLoad和onUnload事件
9.5　实践练习：为网页添加链接说明
9.6　小结
9.7　问题与解答
9.8　测试题
9.9　测试题答案
9.10　练习题
第10章　使用窗口和框架
10.1　用对象控制窗口
10.1.1　window对象的属性
10.1.2　创建新窗口
10.1.3　打开和关闭窗口
10.2　移动和调整窗口大小
10.3　使用超时功能
10.4　显示对话框
10.5　使用框架
10.5.1　为框架使用JavaScript对象
10.5.2　frames数组
10.6　实践练习：在JavaScript中使用框架
10.7　小结
10.8　问题与解答
10.9　测试题
10.10　测试题答案
10.11　练习题
第11章　利用表单获取数据
11.1　HTML表单基础
11.2　在JavaScript中使用form对象
11.2.1　form对象的属性
11.2.2　提交和重置表单
11.2.3　检测表单事件
11.3　编制表单元素的脚本
11.3.1　文本字段
11.3.2　文本区域
11.3.3　处理表单中的文本
11.3.4　按钮
11.3.5　复选框
11.3.6　单选按钮
11.3.7　下拉列表
11.4　显示表单数据
11.5　通过邮件发送表单结果
11.6　实践练习：验证表单
11.7　小结
11.8　问题与解答
11.9　测试题
11.10　测试题答案
11.11　练习题
第12章　使用样式表
12.1　样式与内容
12.2　定义和使用CSS样式
12.2.1　创建规则
12.2.2　设置指定元素的样式
12.2.3　使用id属性
12.2.4　使用类
12.3　使用CSS属性
12.3.1　文本对齐
12.3.2　改变颜色和背景图像
12.3.3　使用字体
12.3.4　边距和边框
12.3.5　样式表的单位
12.4　创建一个简单的样式表
12.5　使用外部样式表
12.5.1　链接外部样式表
12.5.2　创建外部.css文件
12.6　用JavaScript控制样式
12.7　实践练习：创建动态样式
12.8　小结
12.9　问题与解答
12.10　测试题
12.11　测试题答案
12.12　练习题
第13章　使用W3C的DOM
13.1　DOM和动态HTML
13.2　理解DOM结构
13.2.1　节点
13.2.2　父与子
13.2.3　兄弟
13.3　创建可定位元素(层)
13.3.1　设置对象的位置和大小
13.3.2　设定溢出属性
13.3.3　使用可见性属性
13.3.4　设置背景和边框属性
13.3.5　用JavaScript控制定位
13.4　实践练习：创建可移动的层
13.5　小结
13.6　问题与解答
13.7　测试题
13.8　测试题答案
13.9　练习题
第14章　使用高级DOM功能
14.1　使用DOM节点
14.1.1　基本节点属性
14.1.2　节点关系属性
14.1.3　文档方法
14.1.4　节点的方法
14.2　隐藏和显示对象
14.3　在页面中修改文本
14.4　为页面添加文本
14.5　实践练习：创建导航树
14.6　小结
14.7　问题与解答
14.8　测试题
14.9　测试题答案
14.10　练习题
第四部分　使用JavaScript的高级功能
第15章　编写规范型脚本
15.1　编写脚本的最佳方法
15.1.1　内容、展现和行为
15.1.2　渐进式提高
15.1.3　添加事件处理程序
15.1.4　Web标准：浏览器无关性
15.1.5　为代码编写文档
15.1.6　可用性
15.1.7　设计模型
15.1.8　可访问性
15.2　读取浏览器的信息
15.2.1　显示浏览器的信息
15.2.2　处理特殊的浏览器
15.3　编写跨浏览器的脚本
15.3.1　功能检测技术
15.3.2　处理浏览器异常
15.4　为不支持JavaScript的浏览器提供支持
15.4.1　使用noscript标记
15.4.2　保持JavaScript的功能可选
15.4.3　避免错误
15.5　实践练习：创建规范型脚本
15.6　小结
15.7　问题与解答
15.8　测试题
15.9　测试题答案
15.10　练习题
第16章　调试JavaScript应用程序
16.1　防止Bug
16.1.1　养成良好的编程习惯
16.1.2　常见错误的预防
16.2　基本调试工具
16.2.1　Firefox的JavaScript控制台
16.2.2　在Internet Explorer中显示错误信息
16.2.3　警告信息
16.2.4　使用注释功能
16.2.5　其他调试工具
16.3　创建错误处理程序
16.3.1　使用onerror属性
16.3.2　显示错误信息
16.3.3　使用try和catch
16.4　高级调试工具
16.4.1　Web Developer工具栏(用于Firefox)
16.4.2　Developer工具栏(适用于Internet Explorer)
16.4.3　DOM Inspector(用于Firefox)
16.4.4　查看生成的源代码
16.4.5　JavaScript Shell
16.5　实践练习：调试脚本
16.5.1　测试脚本
16.5.2　解决问题
16.5.3　重新测试
16.6　小结
16.7　问题与解答
16.8　测试题
16.9　测试题答案
16.10　练习题
第17章　AJAX：远程脚本技术
17.1　AJAX简介
17.1.1　JavaScript客户端(前端)
17.1.2　后台
17.1.3　XML
17.1.4　AJAX的典型应用
17.1.5　框架和库
17.1.6　AJAX的局限性
17.2　使用XMLHttpRequest
17.2.1　创建请求
17.2.2　打开URL
17.2.3　发送请求
17.2.4　等待响应
17.2.5　解释响应数据
17.3　创建简单的AJAX库
17.3.1　ajaxRequest()函数
17.3.2　ajaxResponse()函数
17.3.3　使用AJAX库
17.4　使用AJAX库编写AJAX测验程序
17.4.1　HTML文件
17.4.2　XML文件
17.4.3　JavaScript文件
17.4.4　测试示例
17.5　调试AJAX应用程序
17.6　实践练习：制作一个实时查询表单
17.6.1　HTML表单
17.6.2　PHP后台
17.6.3　JavaScript前端
17.6.4　执行程序
17.7　小结
17.8　问题与解答
17.9　测试题
17.10　测试题答案
17.11　练习题
第18章　Greasemonkey：使用JavaScript增强页面功能
18.1　Greasemonkey插件简介
18.1.1　在Firefox中安装Greasemonkey插件
18.1.2　Internet Explorer的Turnabout插件
18.1.3　其他浏览器
18.1.4　用户脚本的安全性
18.2　使用用户脚本
18.2.1　查找脚本
18.2.2　安装脚本
18.2.3　管理脚本
18.2.4　测试用户脚本
18.2.5　激活或禁用Greasemonkey或Turnabout
18.3　创建自己的用户脚本
18.3.1　创建一个简单的用户脚本
18.3.2　描述用户脚本
18.3.3　测试脚本
18.3.4　Greasemonkey API函数
18.3.5　创建专用站点脚本
18.3.6　调试用户脚本
18.4　实践练习：创建用户脚本
18.4.1　运行过程
18.4.2　使用脚本
18.5　小结
18.6　问题与解答
18.7　测试题
18.8　测试题答案
18.9　练习题
第五部分　使用JavaScript创建多媒体应用程序
第19章　使用图像和动画
19.1　使用动态图像
19.1.1　使用image对象
19.1.2　预加载图像
19.2　创建Rollover(鼠标翻转)效果
19.2.1　通过JavaScript创建Rollover效果
19.2.2　使用CSS而不是JavaScript实现Rollover效果
19.2.3　使用CSS技术创建图形化的rollover效果
19.3　制作简单的JavaScript幻灯效果
19.3.1　HTML文件
19.3.2　JavaScript文件
19.4　实践练习：向幻灯中添加动画效果
19.4.1　HTML文件
19.4.2　CSS文件
19.4.3　JavaScript脚本
19.4.4　整合所有技术
19.5　小结
19.6　问题与解答
19.7　测试题
19.8　测试题答案
19.9　练习题
第20章　使用声音和插件
20.1　插件介绍
20.1.1　embed和object标签
20.1.2　理解ＭIME类型
20.1.3　在JavaScript中使用插件
20.1.4　插件功能检测
20.2　JavaScript和Flash
20.2.1　ActionScript
20.2.2　JavaScript与Flash之间的交互
20.2.3　在JavaScript中嵌入Flash
20.3　使用JavaScript处理音频
20.3.1　音频格式
20.3.2　音频插件
20.3.3　嵌入音频
20.3.4　使用JavaScript控制音频
20.3.5　检测当前浏览支持的音频功能
20.3.6　使用Flash
20.4　使用JavaScript测试音频
20.5　实践练习：使用鼠标播放音乐
20.5.1　示例的HTML文档
20.5.2　CSS样式单
20.5.3　播放音频
20.5.4　嵌入音频
20.5.5　整合所有技术
20.6　小结
20.7　问题与解答
20.8　测试题
20.9　测试题答案
20.10　练习题
第六部分　创建复杂脚本
第21章　创建JavaScript下拉菜单
21.1　设计下拉菜单
21.1.1　创建HTML标记
21.1.2　使用CSS设计菜单布局
21.2　使用脚本来设置下拉菜单的行为
21.2.1　设置菜单
21.2.2　显示子菜单
21.2.3　隐藏子菜单
21.2.4　完成脚本
21.3　实践练习：利用CSS增强菜单
21.4　小结
21.5　问题与解答
21.6　测试题
21.7　测试题答案
21.8　练习题
第22章　创建JavaScript游戏
22.1　游戏简介
22.1.1　游戏玩法
22.1.2　得分计算
22.1.3　创建图形
22.2　创建HTML文档
22.3　创建脚本
22.3.1　使用对象存储纸牌
22.3.2　构建游戏板
22.3.3　洗牌
22.3.4　将牌放到游戏板上
23.3.5　计算行、列和对角线得分
23.3.6　合计得分
23.3.7　结束游戏
22.4　利用CSS添加样式
22.5　实践练习：组合应用技术
22.6　小结
22.7　问题与解答
22.8　测试题
22.9　测试题答案
22.10　练习题
第23章　创建JavaScript应用程序
23.1　创建滚动窗口
23.1.1　HTML文档
23.1.2　CSS文件
23.1.3　JavaScript文件
23.2　利用JavaScript在CSS样式表之间切换
23.2.1　创建HTML文档
23.2.2　创建第一张样式表
23.2.3　创建第二张样式表
23.2.4　创建脚本
23.3　实践练习：创建动态表单
23.3.1　创建HTML文档
23.3.2　添加脚本
23.4　小结
23.5　问题与解答
23.6　测试题
23.7　测试题答案
23.8　练习题
第24章　JavaScript的未来
24.1　学习JavaScript高级技巧
24.2　未来的Web技术
24.2.1　JavaScript的未来版本
24.2.2　DOM的未来版本
24.2.3　XML(可扩展标记语言)
24.2.4　XHTML(可扩展超文本标记语言)
24.2.5　XSL(可扩展样式表语言)
24.3　为未来做好准备
24.3.1　保持脚本兼容性
24.3.2　保持HTML兼容
24.3.3　详细编制文档
24.4　继续学习其他语言
24.5　实践练习：创建拖放式对象
24.5.1　HTML文档
24.5.2　CSS样式表
24.5.3　实现拖放
24.5.4　JavaScript文件
24.6　小结
24.7　问题与解答
24.8　测试题
24.9　测试题答案
24.10　练习题
第七部分　附录
附录A　其他JavaScript资源
A.1　JavaScript网站
A.2　Web开发站点
附录B　JavaScript开发人员工具
B.1　HTML和文本编辑器
B.1.1　HomeSite
B.1.2　TopStyle
B.1.3　FrontPage
B.1.4　BBEdit
B.1.5　文本编辑器
B.2　HTML验证工具
B.3　调试工具
附录C　术语表
附录D　JavaScript快速参考
D.1　内置对象
D.1.1　数组
D.1.2　字符串
D.1.3　Math
D.1.4　Date
D.2　创建和自定义对象
D.2.1　创建对象
D.2.2　自定义对象
D.3　JavaScript语句
D.3.1　注释
D.3.2　break
D.3.3　continue
D.3.4　for
D.3.5　for...in
D.3.6　function
D.3.7　if...else
D.3.8　return
D.3.9　var
D.3.10　while
D.4　JavaScript内置函数
D.4.1　eval
D.4.2　parseInt
D.4.3　parseFloat
附录E　DOM快速参考
E.1　DOM Level
E.1.1　window
E.1.2　location
E.1.3　history
E.1.4　document
E.1.5　navigator
E.2　DOM Level 1
E.2.1　基本的节点属性
E.2.2　关系属性
E.2.3　偏置属性
E.2.4　样式属性
E.2.5　节点方法
E.2.6　文档对象方法和属性
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript入门经典
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript权威指南
第1篇　ecmascript和javascript语言基础入门篇
第1章　正确认识ecmascript5和javascript
1.1　ecmascript和javascript的关系
1.1.1　关于标准和实现
1.1.2　javascript与ecmascript版本的关系
1.2　有关javascript的认识
1.2.1　区分javascript和jscript
1.2.2　javascript不是解释型java语言
1.2.3　什么是脚本语言
1.2.4　区分客户端和服务端javascript
第2章　准备开发环境和运行环境
2.1　正确认识javascript的开发工具
2.1.1　dreamweaver的安装和配置向导
2.1.2　aptana　studio的安装和配置向导
2.2　准备执行环境
2.2.1　浏览器的发展史
2.2.2　安装浏览器
2.2.3　在浏览器中启用javascript执行环境
第3章　在网页中编写javascript脚本代码
3.1　创建第一个javascript应用程序
3.1.1　使用dreamweaver编写javascript
3.1.2　使用aptana　studio编写javascript
3.2　在html网页中书写javascript脚本代码
3.2.1　使用script元素定义脚本代码
3.2.2　在事件属性值中定义脚本
3.2.3　在超链接中定义脚本
3.3　浏览器不支持脚本时应注意的问题
3.3.1　noscript元素
3.3.2　关于隐藏脚本数据
3.4　声明脚本语言
3.4.1　默认的脚本语言
3.4.2　脚本语言的本地声明
第4章　程序开发的基石——声明和使用变量
4.1　变量的声明
4.1.1　声明和命名变量
4.1.2　变量和标识符的命名规范
4.1.3　变量的数据类型
4.1.4　自定义常量和内建常量
4.2　在程序中使用变量
4.2.1　为变量赋值和更改变量值
4.2.2　使用变量和获取变量值
4.3　变量的传值和传址
4.3.1　传值变量——按值传递
4.3.2　传址变量——按引用传递
4.4　内存使用规则——堆和栈
4.4.1　栈的使用规则
4.4.2　堆的使用规则
4.4.3　易犯的错误
4.5　数据类型转换
第5章　javascript语法规范和良好的编程习惯
5.1　空白和多行书写
5.2　点语法
5.3　花括号
5.4　分号
5.5　圆括号
5.6　字母的大小写
5.7　程序注释
5.7.1　单行注释和尾随注释
5.7.2　多行注释
5.7.3　文档注释
5.7.4　html注释
5.8　关键字
5.9　培养良好的编程习惯
5.9.1　通用的变量名、方法名和类名命名约定
5.9.2　重构
5.9.3　使用注释
5.10　ecmascript5严格模式
5.10.1　使用严格模式
5.10.2　严格模式的特定要求
第6章　数据运算和运算规则
6.1　javascript表达式
6.1.1　简单表达式和复杂表达式
6.1.2　赋值表达式和单值表达式
6.2　算术运算符
6.2.1　算术运算符的使用
6.2.2　进行算术运算时的注意事项
6.3　赋值运算符
6.4　字符串运算符
6.5　比较运算符和逻辑运算符
6.5.1　数据类型的影响
6.5.2　全等运算符
6.5.3　特殊值的比较
6.5.4　易犯错的比较运算
6.6　位运算符
6.7　其他运算符
6.7.1　三元条件运算符
6.7.2　typeof运算符
6.7.3　instanceof运算符
6.7.4　圆括号和逗号运算符的结合使用
6.7.5　delete运算符
6.7.6　void运算符
6.8　运算符的使用规则
6.8.1　运算符的优先级规则
6.8.2　运算符的结合规则
6.9　运行时进行类型检查
第7章　流程控制
7.1　语句和语句块
7.2　if…else条件语句
7.3　switch条件语句
7.4　do...while循环
7.5　for循环
7.6　for...in循环
7.7　for　each...in循环
7.8　其他流程控制
7.8.1　break语句
7.8.2　continue语句
7.8.3　标签语句
7.8.4　let语句
7.8.5　yield语句
7.9　with语句
7.10　流程控制总结
第8章　内建的全局函数
8.1　eval（）函数
8.2　转义操作函数
8.2.1　escape（）和unescape（）函数
8.2.2　encodeuri（）和decodeuri（）函数
8.2.3　encodeuricomponent（）和decodeuricomponent（）函数
8.3　转换函数
8.3.1　parsefloat（）函数
8.3.2　parseint（）函数
8.3.3　number（）和string（）函数
8.3.4　boolean（）函数
8.4　判断函数
8.4.1　isfinite（）函数
8.4.2　isnan（）函数
第9章　自定义函数
9.1　函数的定义
9.2　函数的调用
9.2.1　在函数中定义参数的初始值
9.2.2　嵌套函数的定义和调用
9.2.3　条件函数的定义和调用
9.2.4　特殊的调用方式
9.3　使用函数表达式定义函数（匿名函数）
9.3.1　函数表达式和函数语句的区别
9.3.2　匿名自执行函数
9.4　使用function类定义函数
9.5　变量的作用范围和生命周期
9.5.1　了解变量的作用范围和生命周期
9.5.2　局部变量的声明
9.5.3　全局变量的声明
9.5.4　全局变量和局部变量的使用
9.5.5　易出错的变量使用
9.6　形参和实参
9.7　闭包函数（绑定函数）
9.7.1　什么是闭包函数
9.7.2　闭包函数常用的环境
9.7.3　易犯的错误
9.8　产生器
第2篇　javascript面向对象编程篇
第10章　面向对象编程（oop）——创建类和使用类
10.1　面向对象编程思想
10.1.1　对象的抽象
10.1.2　对象的使用
10.1.3　易犯的错误
10.1.4　面向对象程序设计的优点和基本特征
10.1.5　面向对象和结构化程序设计的区别
10.2　创建类
10.2.1　创建一个javascript类
10.2.2　类的定义
10.2.3　关于构造器方法
10.2.4　获取构造器方法
10.3　类的使用
10.3.1　创建类的实例
10.3.2　访问对象属性
10.3.3　调用对象方法
10.3.4　调用静态方法和访问静态属性
10.4　使用this关键字定义方法和属性
10.5　使用prototype定义方法和属性
10.5.1　使用prototype定义方法
10.5.2　使用prototype定义属性
10.5.3　关于prototype和__proto__属性
10.6　使用object类为实例定义方法和属性
10.6.1　使用return语句定义方法和属性
10.6.2　使用prototype和object配合为类定义方法和属性
10.7　使用get和set存取器方法定义属性
10.8　在类体内使用this关键字
10.8.1　使用this时易犯的错误
10.8.2　闭包方法（绑定方法）内的this关键字
10.8.3　事件处理中的闭包
10.8.4　另一个使用this时易犯的错误
第11章　建立更可靠的oop程序——类和成员的访问控制
第12章　重复使用类——继承和组合
12.1　类的继承
12.1.1　创建子类
12.1.2　使用基类的构造器方法
12.1.3　检测继承关系
12.1.4　使用$super实现访问基类
12.1.5　创建子类时的注意事项
12.2　扩展内建javascript类
12.3　类的组合
12.3.1　实现类的组合
12.3.2　组合的优点
12.3.3　了解is-a和has-a
12.3.4　关于聚合和组合
第13章　静态成员、静态类和枚举　（enumeration）
13.1　定义静态成员和静态类的意义
13.2　创建静态成员
13.2.1　使用静态成员
13.2.2　静态成员和继承
13.2.3　使用静态成员的注意事项
13.3　静态类及其声明方法
13.4　枚举（enumeration）
13.4.1　创建枚举
13.4.2　使用枚举的优点
第14章　多态（polymorphism）——重载和覆载
14.1　方法的重载（overload）
14.1.1　重载参数列表的数量
14.1.2　重载参数列表的数据类型
14.2　方法的覆载（override）
14.3　属性的覆载
第15章　原型链本质论
15.1　原型链的根源
15.1.1　内部属性
15.1.2　访问内部属性[prototype]
15.2　prototype的作用——原型链的实现
15.2.1　实现继承
15.2.2　分享属性（和方法）
15.2.3　__proto__和prototype属性的区别
15.2.4　使用ecmascript5新增的原型处理功能
15.3　检查原型链
15.3.1　查看对象是否在指定对象的原型链中
15.3.2　查看指定对象是否定义了特定属性和方法
15.3.3　使用hasownproperty（）方法过滤原型链
15.3.4　查看指定对象是否定义了特定属性且可以枚举
第16章　ecmascript5增强的对象模型
16.1　属性和描述符
16.1.1　易犯的错误
16.1.2　使用ecmascript　5增强的对象模型定义属性
16.1.3　定义get和set存取器方法
16.1.4　一次定义多个属性
16.1.5　获取特定属性的属性描述符
16.2　枚举属性
16.2.1　object.keys（obj）方法
16.2.2　object.getownpropertynames（obj）方法
16.3　密封对象和动态对象
16.3.1　密封对象不允许添加成员
16.3.2　密封对象不允许添加和删除成员
16.3.3　完全密封对象
16.3.4　易犯的错误
16.4　根据原型创建对象
第17章　处理字符串——string类和正则表达式
第3篇　html5bom篇
第4篇　dom篇
第5篇　javascript和activexobject篇
附录a　保留的关键字
附录b　键盘键和键控代码值对照表
附录c　w3c的xmlhttprequest接口规范
附录d　input元素type属性值与htmlinputelement　api匹配索引
附录e　html5元素和html5dom接口的对应关系
附录f　html4和html5事件属性对照表
附录g　参考资料来源
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript权威指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>大型JavaScript应用最佳实践指南
1 扩展JavaScript 应用1
影响扩展的因素2
对可扩展的需要  2
不断增长的用户  3
添加新功能  3
雇佣更多的开发者  4
架构角度5
浏览器是一个独特的环境5
组件设计  7
组件通信  7
加载时间  8
响应性  9
可寻址性  9
可配置性  10
架构性取舍11
确定不可变内容  11
从开发的便捷性考虑性能  11
性能的可配置性  12
从可替换性考虑性能  13
可寻址性的开发便捷性  13
性能的可维护性  13
减少功能以提高可维护性  14
利用框架  15
框架与类库16
一致地实现模式  16
内建的性能  16
利用社区智慧  16
框架并非天生支持扩展  17
小结17
2 可扩展性的影响因素  19
扩展用户20
许可证费用  20
订阅费用  21
消耗费用  21
广告支持  21
开源  22
与用户沟通  23
支持机制  24
反馈机制  25
提示用户  26
用户维度  26
扩展用户示例  27
扩展功能28
应用价值  28
“杀手级”功能与“杀死”应用的功能  29
数据驱动的功能  30
与竞品比较  30
修改已有的功能  31
支持用户分组和角色  32
增加新服务  32
扩展功能示例  34
开发的可扩展性34
寻找开发资源  35
开发职责  36
资源过多  36
扩展开发示例  37
影响因素检查表37
用户检查清单  38
功能清单  39
开发者清单  41
小结41
3 组件组合  43
通用组件44
模块  44
路由器  46
模型/集合50
控制器/视图53
模板  55
应用特定的组件  56
扩展通用组件56
识别公用数据、功能  56
扩展路由器组件  57
扩展模型/集合58
扩展控制器/视图59
将功能映射到组件60
通用功能  61
特定功能  61
解构组件62
维护和调试组件  62
重构复杂组件  64
可插拔的业务逻辑64
扩展与配置  65
无状态的业务逻辑  65
组织组件代码66
小结67
4 组件的通信与职责 69
通信模型69
消息传递模型  70
事件模型  70
通信数据结构71
命名约定  71
数据格式  72
公共数据  73
可追踪的组件通信74
订阅事件  74
全局事件日志  74
事件的生命周期  77
通信的开销77
事件的频率  78
回调函数执行时间  80
事件复杂度  81
通信责任区82
后端API  82
Web Socket 用于更新状态  83
DOM 更新 85
松耦合的通信86
替换组件  86
应对意外事件  87
组件分层90
事件流向  90
开发者的职责  91
构建代码思维导图  91
小结92
5 寻址和导航  93
实现路由的方法93
Hash URI  94
传统URI  94
路由是如何工作的95
路由的职责  95
路由事件  96
URI 的结构和模式96
编码信息  97
设计URI  97
将资源映射到URI99
手动创建URI  99
自动生成资源URI  99
触发路由103
用户行为  103
重定向用户  104
路由配置104
静态路由声明  105
注册事件  105
禁用路由  105
故障排查108
路由器冲突  108
记录初始配置  110
记录路由事件  110
处理非法资源的状态  110
小结111
6 用户偏好和默认设置113
偏好类型113
地区  113
行为  114
外观  115
支持地区115
决定支持哪些地区  115
维护地区  116
设置地区116
选择地区  117
存储地区偏好  117
URI 中的地区  118
通用组件配置118
选择配置的值  119
存储和硬编码默认值  119
对后端的影响  120
加载配置值  121
配置行为122
启用和禁用组件  122
改变数量  123
改变顺序  124
配置通知  126
行内选项  126
改变外观127
主题工具  127
选择一个主题  128
单独的样式偏好  128
性能影响128
可配置地区的性能  129
可配置行为的性能  129
可配置主题的性能  132
小结132
7 加载时间和响应速度135
组件构件135
组件依赖  135
构建组件  136
加载组件137
加载模块  137
懒惰的模块加载  138
模块加载的延迟  139
通信瓶颈141
减少间接引用  141
分析代码  143
组件优化145
维护状态的组件  145
处理副作用  146
DOM 渲染技术  148
API 数据150
加载延迟  150
处理大数据集  151
优化运行时组件152
小结153
8 可移植性和测试  155
与后端解耦155
模拟后端API  155
前端入口  156
模拟工具  157
生成模拟数据集  158
执行操作  159
功能设计过程159
设计API  160
实现模拟数据  160
实现功能  161
协调模拟数据与真实数据  162
单元测试工具163
框架自带的工具  163
独立的单元测试工具  164
工具链和自动化  165
测试模拟场景166
模拟API 和测试固件  166
场景生成工具  167
端到端测试和持续集成168
小结169
9 缩小规模171
扩展限制171
JavaScript 文件体积  172
网络带宽  173
内存消耗  175
CPU 消耗177
后端能力  179
互相矛盾的功能180
重叠的功能  181
冗余的功能  182
用户需求  182
设计失效183
多余的组件  184
低效的数据处理  186
过度创建标记  190
应用组合191
功能的启动  191
新功能的影响  192
重要的库  192
小结193
10 处理错误195
快速失效195
使用质量约束  196
提供有意义的反馈  196
当无法快速失效时……  197
容错198
区分关键行为  198
探测和控制错误行为  199
禁用出错组件  202
优雅地降级功能  203
故障恢复204
重试失败操作  204
重启组件  207
用户手动干涉  208
当我们无法从故障中恢复……  209
性能和复杂度210
异常处理  210
状态检查  211
通知其他组件  211
记录日志和调试212
有意义的错误日志  212
为潜在故障发出警告  213
通知和指导用户  214
改进架构214
记录错误场景  215
改进组件分类  215
复杂导致出错  216
小结216
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>大型JavaScript应用最佳实践指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript完全手册
第一部分  简介
第1章  JavaScript简介
1. 1  JavaScript入门
1. 2  向HTML文档中添加JavaScript
1. 3  JavaScript应用
1. 4  JavaSc

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript完全手册
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript实战
第一篇  JavaScript实战篇
第1章   JavaScript概述
1.1  认识JavaScript
1.1.1  浏览器战争
1.1.2  寄生语言
1.1.3  DHTML、DOM和W3C
1.1.4  动态语言和静态语言
1.2  配置JavaScript开发环境
1.2.1  EditPlus
1.2.2  Adobe Dreamweaver
1.2.3  Sublime Text
1.2.4  JetBrains WebStorm
1.2.5  Aptana Studio
1.3  在Web页面中使用JavaScript
1.3.1  直接内嵌JavaScript代码
1.3.2  引用JavaScript文件
1.3.3  让收藏夹做更多事情
1.4  高效率的开发
1.4.1  熟悉语法
1.4.2  自动完成
1.4.3  使用成熟框架和便捷工具
1.5  相关参考
第2章   用JavaScript验证表单
2.1  最简单的表单验证——禁止空白的必填项目
2.1.1  最简单表单的HTML结构
2.1.2  绑定验证功能
2.1.3  绑定验证的另一种方式
2.2  处理各种类型的表单元素
2.2.1  input、textarea、hidden和button
2.2.2  checkbox、radio和select
2.3  用正则来校验复杂的格式要求
2.3.1  认识JavaScript正则
2.3.2  JavaScript正则符号及其说明
2.3.3  正则验证输入邮箱
2.4  改善用户体验
2.4.1  什么是用户体验
2.4.2  表单的用户体验改善
2.5  相关参考
第3章   用JavaScript实现照片展示
3.1  功能设计
3.1.1  HTML、CSS和JavaScript的分层关系
3.1.2  照片展示功能设计
3.2  照片加载与定位
3.2.1  HTML代码
3.2.2  CSS代码
3.2.3  JavaScript代码
3.3  响应鼠标动作
3.3.1  响应小照片单击动作
3.3.2  响应小照片上一组或下一组单击动作
3.4  响应键盘动作
3.4.1  常见键盘按键对应的ASCII码值
3.4.2  响应键盘动作
3.5  代码分离带来的红利
3.6  相关参考
第4章   AJAX——无刷新的用户体验
4.1  认识AJAX
4.1.1  AJAX是技术不是编程语言
4.1.2  同步与异步
4.1.3  AJAX与JSON
4.1.4  AJAX是如何工作的
4.2  XMLHttpRequest对象的常见方法和属性
4.2.1  XMLHttpRequest对象方法
4.2.2  XMLHttpRequest对象属性
4.3  检查待注册的用户名是否存在
4.3.1  客户端进行检测
4.3.2  服务器端获取数据
4.4  用Ajax提交数据给服务器
4.4.1  客户端部分
4.4.2  服务端部分
4.5  相关参考
第5章   瀑布流布局
5.1  瀑布流简介
5.1.1  瀑布流是不是万金油
5.1.2  穿过瀑布流看水帘洞
5.2  固定列宽的简单瀑布流实现
5.2.1  简单的HTML结构
5.2.2  让瀑布流动起来
5.3  非固定列宽的复杂瀑布流
5.3.1  非固定列宽瀑布流的争议
5.3.2  用Masonry实现任意非固定列宽瀑布流
5.4  延迟加载图片
5.4.1  延迟加载是何方神圣
5.4.2  延迟加载运用实例
5.5  相关参考
第6章   用户控件的构造——目录树视图
6.1  功能设计
6.2  树视图的最简化实现
6.2.1  树视图的HTML结构和数据结构
6.2.2  用递归最简化显示树
6.3  类和抽象
6.3.1  基于对象（Object-Based）和面向对象（Object-Oriented）
6.3.2  用JavaScript创建一个类
6.3.3  静态属性、方法和动态属性、方法
6.3.4  JavaScript继承
6.3.5  私有属性和方法
6.3.6  抽象
6.4  复杂的树视图
6.4.1  闭包隔离变量污染
6.4.2  省去new关键字调用控件
6.4.3  丰富控件方法
6.5  相关参考
第二篇    HTML 5+CSS 3实战篇
第7章   HTML 5概述
7.1  什么是HTML 5
7.1.1  差点夭折的HTML 5
7.1.2  HTML 5的前世今生
7.1.3  HTML 5理念
7.2  HTML 5的新特性
7.2.1  语义化
7.2.2  CSS 3
7.2.3  本地存储/离线应用
7.2.4  音频/视频多媒体
7.2.5  画布Canvas
7.2.6  本地文件访问
7.2.7  开放字体格式WOFF
7.2.8  地理位置
7.2.9  微数据
7.2.10  XMLHttpRequest Level 2
7.2.11  新的HTML Forms
7.2.12  其他特性及未来发展
7.3  有哪些浏览器支持HTML 5
7.4  如何书写HTML 5
7.4.1  HTML 5和XHTML的对比
7.4.2  HTML 5书写的误区
7.5  相关参考
第8章   焕然一新的表单
8.1  E-mail和URL类型的输入元素
8.1.1  各浏览器内核一览
8.1.2  各浏览器对E-mail和URL类型的支持情况
8.1.3  全球顶级域名
8.1.4  E-mail类型的使用
8.1.5  URL类型的使用
8.2  数值输入
8.2.1  各浏览器对number类型的支持情况
8.2.2  number类型的属性与使用
8.3  日期选择器
8.3.1  各浏览器对日期选择器的支持情况
8.3.2  日期选择器类型与使用
8.4  用datalist来实现自动提示
8.4.1  各浏览器对datalist的支持情况
8.4.2  各浏览器datalist的效果对比
8.4.3  datalist让input自动提示更智能
8.5  相关参考
第9章   在Web页面中轻松控制多媒体视频和音乐
9.1  在页面中插入视频和音频
9.1.1  容器和编解码器
9.1.2  使用HTML 5 Video和Audio API的好处
9.1.3  浏览器支持性检测
9.1.4  使用video/audio元素
9.1.5  使用source元素来兼容
9.2  video/audio元素的属性
9.2.1  通过HTML设置的属性
9.2.2  通过JavaScript设置的属性
9.3  video/audio元素的事件
9.3.1  video/audio元素的主要事件
9.3.2  设置当前播放位置
9.4  video/audio元素的方法
9.4.1  通过JavaScript控制的方法
9.4.2  鼠标悬停播放，移开暂停
9.5  综合应用——打造属于自己的视频播放器
9.5.1  界面设计
9.5.2  CSS 3+HTML布局
9.5.3  用JavaScript控制播放器
9.6  相关参考
第10章   用CSS 3画一个哆啦A梦
10.1  CSS 3简介
10.1.1  CSS 3历史情况
10.1.2  CSS 3的支持情况
10.2  阴影和文本阴影
10.2.1  阴影（box-shadow）
10.2.2  文本阴影（text-shadow）
10.3  圆角
10.3.1  圆角（border-radius）属性
10.3.2  圆角变圆与半圆
10.4  渐变
10.4.1  线性渐变
10.4.2  放射渐变
10.5  综合应用——画一个哆啦A梦
10.5.1  头部和脸部
10.5.2  脖子和铃铛
10.5.3  身体和四肢
10.5.4  让眼睛动起来
10.6  相关参考
第11章   酷炫的CSS 3动画效果 ——3D旋转方块
11.1  文本描边和文本填充色
11.1.1  文本描边（text-stroke）
11.1.2  文本填充（text-fill-color）
11.2  变形和变形原点
11.2.1  变形（transform）
11.2.2  变形原点（transform-origin）
11.3  简单应用——飞行旋转文本
11.3.1  过渡动画（transition）
11.3.2  自定义动画（animation）和@keyframes
11.3.3  飞行旋转的文本
11.4  综合应用——3D旋转方块
11.5  相关参考
第12章   一个可以离线的内容管理系统
12.1  功能设计
12.2  Web储存和应用缓存
12.2.1  本地存储（LocalStorage）
12.2.2  会话存储（SessionStorage）
12.2.3  应用程序缓存
12.2.4  搭建支持应用缓存的服务器
12.2.5  神奇的manifest file文件清单
12.3  HTML 5本地存储
12.3.1  Web IndexedDB
12.3.2  Web Sql Database
12.4  编写内容管理系统
12.4.1  可离线的HTML、JS和CSS
12.4.2  添加数据
12.4.3  列表和查询数据
12.4.4  更新数据
12.4.5  删除数据
12.4.6  前端交互
12.5  相关参考
第13章   SVG动画
13.1  什么是SVG
13.1.1  SVG的历史
13.1.2  SVG的优缺点
13.1.3  SVG的Hello world
13.1.4  SVG的调用方式
13.2  SVG形状
13.2.1  矩形（rect）
13.2.2  圆形（circle）
13.2.3  椭圆（ellipse）
13.2.4  线（line）
13.2.5  折线（polyline）
13.2.6  多边形（polygon）
13.2.7  路径（path）
13.3  SVG滤镜
13.3.1  高斯模糊滤镜（feGaussianBlur）
13.3.2  色彩转换滤镜（feColorMatrix）
13.3.3  位移滤镜（feOffset）
13.4  SVG渐变
13.4.1  线性渐变（linearGradient）
13.4.2  放射渐变（radialGradient）
13.5  制作简单的SVG动画——太阳系
13.5.1  SVG绘制的太阳和地球公转轨迹
13.5.2  贴图地球和地月系统
13.5.3  太阳系
13.6  相关参考
第三篇    HTML 5 Canvas实战篇
第14章   Canvas的初步应用 ——再画一个哆啦A梦
14.1  什么是Canvas
14.1.1  Canvas起源
14.1.2  Canvas的支持情况
14.1.3  Canvas优缺点及与SVG的对比
14.1.4  Canvas与JavaScript
14.1.5  Canvas的发展
14.1.6  Canvas标签的使用
14.2  绘制形状和文字
14.2.1  直线（lineTo）
14.2.2  矩形（rect）
14.2.3  圆（arc）
14.2.4  弧和圆角（arcTo）
14.2.5  贝塞尔曲线quadraticCurveTo
14.2.6  绘制文本（fillText）和strokeText
14.3  颜色、风格和阴影
14.3.1  线性渐变（createLinearGradient）
14.3.2  放射渐变（createRadialGradient）
14.3.3  阴影
14.4  再画一个哆啦A梦
14.4.1  准备工作
14.4.2  绘制头和脸
14.4.3  绘制眼睛和鼻子
14.4.4  绘制嘴巴和胡须
14.5  相关参考
第15章   Canvas的高级应用 ——制作飞行游戏
15.1  转换
15.1.1  放大和缩小
15.1.2  平移和旋转
15.1.3  矩阵转换
15.2  合成
15.2.1  用Photoshop控制图形合成
15.2.2  使用Canvas控制图形合成
15.3  碰撞检测
15.3.1  圆形碰撞检测
15.3.2  矩形碰撞检测
15.4  让游戏动起来
15.4.1  打飞机游戏设计
15.4.2  移动的星空
15.4.3  加载资源
15.4.4  我方战机、敌机和子弹
15.4.5  让游戏动起来
15.5  相关参考
第16章   Canvas的另类应用 ——压缩和解压
16.1  绘制图片
16.1.1  绘制外部载入的图片
16.1.2  Canvas给视频加字幕
16.2  像素级操作
16.2.1  反转颜色-底片效果
16.2.2  灰度控制——黑白灰效果
16.2.3  透明度控制
16.2.4  倒影
16.3  实现压缩解压功能
16.3.1  载入位图
16.3.2  压缩位图
16.3.3  保存到本地
16.4  相关参考
第四篇    jQuery实战篇
第17章   jQuery简介
17.1  什么是jQuery
17.1.1  jQuery的历史
17.1.2  为什么要使用jQuery
17.2  编写jQuery代码
17.2.1  下载jQuery
17.2.2  简单应用jQuery
17.2.3  调试jQuery程序
17.3  基于jQuery的UI插件
17.3.1  基于jQuery的扩展——jQuery UI插件
17.3.2  下载jQuery UI插件
17.3.3  简单应用jQuery UI插件
17.3.4  其他UI框架
17.4  相关参考
第18章   用动态效果来响应浏览者
18.1  jQuery库基础
18.1.1  jQuery库的核心方法——$()
18.1.2  jQuery库延迟等待加载模式
18.1.3  jQuery对象与DOM对象间的转换
18.2  基础选择器
18.2.1  简单选择器
18.2.2  进阶选择器
18.2.3  高级选择器
18.3  过滤选择器
18.3.1  jQuery所支持的过滤器
18.3.2  页面中的经典导航条
18.4  操作DOM对象
18.4.1  jQuery关于元素的操作
18.4.2  关于表的经典效果
18.4.3  jQuery关于节点的操作
18.4.4  超级链接提示效果
18.4.5  图片预览效果
18.5  响应事件
18.5.1  绑定和删除事件
18.5.2  jQuery所支持的事件和事件类型
18.5.3  表单动态效果
18.6  实现动态效果
18.6.1  jQuery库所支持的动画方法
18.6.2  实现可折叠的列表
18.6.3  淡入淡出效果
18.7  相关参考
第19章   用户交互操作、进度条和滑动条美化页面
19.1  页面中的交互操作
19.1.1  jQuery UI所支持的拖动组件
19.1.2  jQuery UI所支持的拖放组件
19.1.3  模拟Windows系统“回收站”
19.2  页面中的进度条效果
19.2.1  jQuery UI所支持的进度条工具集
19.2.2  实现进度条效果
19.3  页面中滑动条效果
19.3.1  jQuery UI所支持的滑动条工具集
19.3.2  实现图片滑块滚动条效果
19.3.3  实现简单颜色调色器
19.4  相关参考
第20章   用工具集实现酷炫的页面
20.1  实现“手风琴”效果
20.1.1  jQuery UI所支持的折叠面板工具集
20.1.2  实现经典的导航菜单
20.2  设计页面中各种对话框效果
20.2.1  jQuery UI所支持的对话框工具集
20.2.2  实现弹出和确认信息对话框效果
20.3  处理页面中的日期
20.3.1  jQuery UI所支持的日期选择器工具集
20.3.2  实现日期输入框
20.3.3  实现选取时间段功能
20.4  实现幻灯和分页效果
20.4.1  jQuery UI所支持的选项卡工具集
20.4.2  经典的选项卡效果
20.4.3  实现幻灯效果
20.4.4  实现分页效果
20.5  相关参考
第五篇    Node.js 实战篇
第21章   Node.js简介
21.1  什么是Node.js
21.1.1  Node.js是平台
21.1.2  Node.js不是万能的
21.2  获取、安装和配置Node.js
21.2.1  Node.js获取
21.2.2  Node.js的安装
21.2.3  Node.js的配置
21.3  Node.js与其他服务器脚本语言的比较
21.4  Node.js与客户端JavaScript脚本的比较
21.5  相关参考
第22章   构造一个最简单的Web服务器
22.1  Node.js中脚本文件的组织
22.1.1  CommonJS规范
22.1.2  Node.js中的模块
22.1.3  HTTP协议
22.2   建立服务、路径处理与响应
22.2.1  用6行代码创建的Web服务器
22.2.2  让Web服务器响应和处理不同路径
22.3  异步与文件处理
22.3.1  智能的404提示
22.3.2  文件格式MIME协议
22.3.3  响应不同类型的文件
22.4  处理文件上传
22.4.1  安装并使用Node.js第三方模块
22.4.2  用node-formidable处理上传图片
22.5  相关参考
第23章   基于Express框架的Http服务器
23.1  引入Express框架
23.1.1  Express与Connect
23.1.2  在Node.js环境下安装Express
23.1.3  用Express搭建简单Web应用
23.2  Express的程序控制
23.2.1  模板引擎ejs
23.2.2  中间件（middleware）
23.3  Express的请求解析
23.3.1  路由routes
23.3.2  Request对象
23.4  Express的响应控制
23.4.1  wirte、end、send输出响应到客户端
23.4.2  JSON、JSONP输出响应到客户端
23.4.3  设置cookie
23.4.4  其他响应控制
23.5  相关参考
第24章   构造一个基于Socket的聊天系统
24.1  建立Socket服务器
24.1.1  安装Socket.IO
24.1.2  聊天室服务端
24.2  HTML 5中的Web Socket
24.2.1  Web Socket协议
24.2.2  Nginx对Web Socket的支持
24.2.3  Web Socket常用API
24.3  在Node.js中操作数据库
24.3.1  操作MS SQL Server
24.3.2  操作MySQL
24.3.3  操作MongoDB
24.4  完善聊天系统
24.4.1  聊天室客户端
24.4.2  Socket.IO 常见API
24.5  相关参考
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python测试驱动开发
前言　　xv
准备工作和应具备的知识　　xxi
配套视频　　xxviii
致谢　　xxix
第一部分　TDD和Django基础
第1章　使用功能测试协助安装Django　　2
1.1　遵从测试山羊的教诲，没有测试什么也别做　　2
1.2　让Django运行起来　　4
1.3　创建Git仓库　　6
第2章　使用unittest模块扩展功能测试　　10
2.1　使用功能测试驱动开发一个最简可用的应用　　10
2.2　Python标准库中的unittest模块　　12
2.3　提交　　14
第3章　使用单元测试测试简单的首页　　16
3.1　第一个Django应用，第一个单元测试　　16
3.2　单元测试及其与功能测试的区别　　17
3.3　Django中的单元测试　　18
3.4　Django中的MVC、URL和视图函数　　19
3.5　终于可以编写一些应用代码了　　20
3.6　urls.py　　22
3.7　为视图编写单元测试　　23
第4章　测试（及重构）的目的　　28
4.1　编程就像从井里打水　　28
4.2　使用Selenium测试用户交互　　30
4.3　遵守“不测试常量”规则，使用模板解决这个问题　　32
4.3.1　使用模板重构　　33
4.3.2　Django测试客户端　　35
4.4　关于重构　　37
4.5　接着修改首页　　38
4.6　总结：TDD流程　　39
第5章　保存用户输入：测试数据库　　42
5.1　编写表单，发送POST请求　　42
5.2　在服务器中处理POST请求　　45
5.3　把Python变量传入模板中渲染　　46
5.4　事不过三，三则重构　　50
5.5　Django ORM和第一个模型　　51
5.5.1　第一个数据库迁移　　53
5.5.2　测试向前走得挺远　　53
5.5.3　添加新字段就要创建新迁移　　54
5.6　把POST请求中的数据存入数据库　　55
5.7　处理完POST请求后重定向　　57
5.8　在模板中渲染待办事项　　59
5.9　使用迁移创建生产数据库　　61
5.10　回顾　　64
第6章　改进功能测试：确保隔离，去掉含糊的休眠　　66
6.1　确保功能测试之间相互隔离　　66
6.2　升级Selenium和Geckodriver　　70
6.3　隐式等待、显式等待和含糊的time.sleep　　70
第7章　步步为营　　75
7.1　必要时做少量的设计　　75
7.1.1　不要预先做大量设计　　75
7.1.2　YAGNI　　76
7.1.3　REST（式）　　76
7.2　使用TDD实现新设计　　77
7.3　确保出现回归测试　　78
7.4　逐步迭代，实现新设计　　80
7.5　自成一体的第一步：新的URL　　81
7.5.1　一个新URL　　82
7.5.2　一个新视图函数　　82
7.6　变绿了吗？该重构了　　84
7.7　再迈一小步：一个新模板，用于查看清单　　84
7.8　第三小步：用于添加待办事项的URL　　86
7.8.1　用来测试新建清单的测试类　　87
7.8.2　用于新建清单的URL和视图　　88
7.8.3　删除当前多余的代码和测试　　89
7.8.4　出现回归！让表单指向刚添加的新URL　　89
7.9　下定决心，调整模型　　90
7.9.1　外键关系　　92
7.9.2　根据新模型定义调整其他代码　　93
7.10　每个列表都应该有自己的URL　　95
7.10.1　捕获URL中的参数　　96
7.10.2　按照新设计调整new_list视图　　97
7.11　功能测试又检测到回归　　98
7.12　还需要一个视图，把待办事项加入现有清单　　99
7.12.1　小心霸道的正则表达式　　99
7.12.2　最后一个新URL　　100
7.12.3　最后一个新视图　　101
7.12.4　直接测试响应上下文对象　　102
7.13　使用URL引入做最后一次重构　　103
第二部分　Web 开发要素
第8章　美化网站：布局、样式及其测试方法　　108
8.1　如何在功能测试中测试布局和样式　　108
8.2　使用CSS框架美化网站　　111
8.3　Django模板继承　　112
8.4　集成Bootstrap　　114
8.5　Django中的静态文件　　115
8.6　使用Bootstrap中的组件改进网站外观　　117
8.6.1　超大文本块　　118
8.6.2　大型输入框　　118
8.6.3　样式化表格　　118
8.7　使用自己编写的CSS　　118
8.8　补遗：collectstatic命令和其他静态目录　　120
8.9　没谈到的话题　　122
第9章　使用过渡网站测试部署　　123
9.1　TDD以及部署的危险区域　　124
9.2　一如既往，先写测试　　125
9.3　注册域名　　127
9.4　手动配置托管网站的服务器　　127
9.4.1　选择在哪里托管网站　　127
9.4.2　搭建服务器　　128
9.4.3　用户账户、SSH和权限　　128
9.4.4　安装Nginx　　128
9.4.5　安装Python　　3.6　　129
9.4.6　解析过渡环境和线上环境所用的域名　　130
9.4.7　使用功能测试确认域名可用而且Nginx正在运行　　130
9.5　手动部署代码　　130
9.5.1　调整数据库的位置　　131
9.5.2　手动创建虚拟环境，使用requirements.txt　　133
9.5.3　简单配置Nginx　　134
9.5.4　使用迁移创建数据库　　136
9.6　手动部署大功告成　　137
第10章　为部署到生产环境做好准备　　139
10.1　换用Gunicorn　　139
10.2　让Nginx伺服静态文件　　140
10.3　换用Unix套接字　　141
10.4　把DEBUG设为False，设置ALLOWED_HOSTS　　142
10.5　使用Systemd确保引导时启动Gunicorn　　143
10.6　考虑自动化　　144
10.7　保存进度　　147
第11章　使用Fabric自动部署　　148
11.1　分析一个Fabric部署脚本　　149
11.1.1　分析一个Fabric部署脚本　　149
11.1.2　使用Git拉取源码　　150
11.1.3　更新settings.py　　151
11.1.4　更新虚拟环境　　151
11.1.5　需要时迁移数据库　　152
11.2　试用部署脚本　　152
11.2.1　部署到线上服务器　　154
11.2.2　使用sed配置Nginx和Gunicorn　　155
11.3　使用Git标签标注发布状态　　157
11.4　延伸阅读　　157
第12章　输入验证和测试的组织方式　　159
12.1　针对验证的功能测试：避免提交空待办事项　　159
12.1.1　跳过测试　　160
12.1.2　把功能测试分拆到多个文件中　　161
12.1.3　运行单个测试文件　　163
12.2　功能测试新工具：通用显式等待辅助方法　　164
12.3　补完功能测试　　167
12.4　重构单元测试，分拆成多个文件　　168
第13章　数据库层验证　　171
13.1　模型层验证　　172
13.1.1　self.assertRaises上下文管理器　　172
13.1.2　Django怪异的表现：保存时不验证数据　　173
13.2　在视图中显示模型验证错误　　173
13.3　Django模式：在渲染表单的视图中处理POST请求　　177
13.3.1　重构：把new_item实现的功能移到view_list中　　178
13.3.2　在view_list视图中执行模型验证　　180
13.4　重构：去除硬编码的URL　　182
13.4.1　模板标签{% url %}　　182
13.4.2　重定向时使用get_absolute_url　　183
第14章　简单的表单　　186
14.1　把验证逻辑移到表单中　　186
14.1.1　使用单元测试探索表单API　　187
14.1.2　换用Django中的ModelForm类　　188
14.1.3　测试和定制表单验证　　189
14.2　在视图中使用这个表单　　191
14.2.1　在处理GET请求的视图中使用这个表单　　191
14.2.2　大量查找和替换　　192
14.3　在处理POST请求的视图中使用这个表单　　194
14.3.1　修改new_list视图的单元测试　　195
14.3.2　在视图中使用这个表单　　196
14.3.3　使用这个表单在模板中显示错误消息　　196
14.4　在其他视图中使用这个表单　　197
14.4.1　定义辅助方法，简化测试　　197
14.4.2　意想不到的好处：HTML5自带的客户端验证　　199
14.5　值得鼓励　　201
14.6　这难道不是浪费时间吗　　201
14.7　使用表单自带的save方法　　202
第15章　高级表单　　205
15.1　针对重复待办事项的功能测试　　205
15.1.1　在模型层禁止重复　　206
15.1.2　题外话：查询集合排序和字符串表示形式　　208
15.1.3　重写旧模型测试　　210
15.1.4　保存时确实会显示完整性错误　　211
15.2　在视图层试验待办事项重复验证　　212
15.3　处理唯一性验证的复杂表单　　213
15.4　在清单视图中使用ExistingListItemForm　　215
15.5　小结：目前所学的Django测试知识　　217
第16章　试探JavaScript　　219
16.1　从功能测试开始　　219
16.2　安装一个基本的JavaScript测试运行程序　　221
16.3　使用jQuery和固件元素　　223
16.4　为想要实现的功能编写JavaScript单元测试　　225
16.5　固件、执行顺序和全局状态：JavaScript测试的重大挑战　　227
16.5.1　使用console.log打印调试信息　　227
16.5.2　使用初始化函数精确控制执行时　　229
16.6　经验做法：onload样板代码和命名空间　　230
16.7　JavaScript测试在TDD循环中的位置　　232
16.8　一些缺憾　　232
第17章　部署新代码　　234
17.1　部署到过渡服务器　　234
17.2　部署到线上服务器　　235
17.3　如果看到数据库错误该怎么办　　235
17.4　总结：为这次新发布打上Git标签　　235
第三部分　高级话题
第18章　用户身份验证、探究及去掉探究代码　　238
18.1　无密码验证　　238
18.2　探索性编程（又名“探究”）　　239
18.2.1　为此次探究新建一个分支　　239
18.2.2　前端登录UI　　240
18.2.3　从Django中发出邮件　　240
18.2.4　使用环境变量，避免源码中出现机密信息　　242
18.2.5　在数据库中存储令牌　　243
18.2.6　自定义身份验证模型　　243
18.2.7　结束自定义Django身份验证功能　　224
18.3　去掉探究代码　　248
18.4　一个极简的自定义用户模型　　251
18.5　令牌模型：把电子邮件地址与唯一的ID关联起来　　254
第19章　使用驭件测试外部依赖或减少重复　　257
19.1　开始之前布好基本管道　　257
19.2　自己动手模拟（打猴子补丁）　　258
19.3　Python的模拟库　　261
19.3.1　使用unittest.patch　　261
19.3.2　让测试向前迈一小步　　263
19.3.3　测试Django消息框架　　263
19.3.4　在HTML中添加消息　　265
19.3.5　构建登录URL　　266
19.3.6　确认给用户发送了带有令牌的链接　　267
19.4　去除自定义的身份验证后端中的探究代码　　269
19.4.1　一个if语句需要一个测试　　269
19.4.2　get_user方法　　272
19.4.3　在登录视图中使用自定义的验证后端　　273
19.5　使用驭件的另一个原因：减少重复　　274
19.5.1　使用驭件的返回值　　277
19.5.2　在类一级上打补丁　　278
19.6　关键时刻：功能测试能通过吗　　279
19.7　理论上正常，那么实际呢　　281
19.8　完善功能测试，测试退出功能　　283
第20章　测试固件和一个显式等待装饰器　　285
20.1　事先创建好会话，跳过登录过程　　285
20.2　显式等待辅助方法最终版：wait装饰器　　290
第21章　服务器端调试技术　　293
21.1　实践是检验真理的唯一标准：在过渡服务器中捕获最后的问题　　293
21.2　在服务器上通过环境变量设定机密信息　　295
21.3　调整功能测试，以便通过POP3测试真实的电子邮件　　296
21.4　在过渡服务器中管理测试数据库　　299
21.4.1　创建会话的Django管理命令　　300
21.4.2　让功能测试在服务器上运行管理命令　　301
21.4.3　直接在Python代码中使用Fabric　　302
21.4.4　回顾：在本地服务器和过渡服务器中创建会话的方式　　303
21.5　集成日志相关的代码　　304
21.6　小结　　305
第22章　完成“My Lists”页面：由外而内的TDD　　306
22.1　对立技术：“由内而外”　　306
22.2　为什么选择使用“由外而内”　　307
22.3　“My Lists”页面的功能测试　　307
22.4　外层：表现层和模板　　309
22.5　下移一层到视图函数（控制器）　　309
22.6　使用由外而内技术，再让一个测试通过　　310
22.6.1　快速重组模板的继承层级　　311
22.6.2　使用模板设计API　　311
22.6.3　移到下一层：视图向模板中传入什么　　313
22.7　视图层的下一个需求：新建清单时应该记录属主　　313
22.8　下移到模型层　　315
第23章　测试隔离和“倾听测试的心声”　　319
23.1　重温抉择时刻：视图层依赖于尚未编写的模型代码　　319
23.2　首先尝试使用驭件实现隔离　　320
23.3　倾听测试的心声：丑陋的测试表明需要重构　　323
23.4　以完全隔离的方式重写视图测试　　323
23.4.1　为了新测试的健全性，保留之前的整合测试组件　　324
23.4.2　完全隔离的新测试组件　　324
23.4.3　站在协作者的角度思考问题　　324
23.5　下移到表单层　　329
23.6　下移到模型层　　332
23.7　关键时刻，以及使用模拟技术的风险　　335
23.8　把层与层之间的交互当作“合约”　　336
23.8.1　找出隐形合约　　337
23.8.2　修正由于疏忽导致的问题　　338
23.9　还缺一个测试　　339
23.10　清理：保留哪些整合测试　　340
23.10.1　删除表单层多余的代码　　340
23.10.2　删除以前实现的视图　　341
23.10.3　删除视图层多余的代码　　342
23.11　总结：什么时候编写隔离测试，什么时候编写整合测试　　343
23.11.1　以复杂度为准则　　344
23.11.2　两种测试都要写吗　　344
23.11.3　继续前行　　344
第24章　持续集成　　346
24.1　安装Jenkins　　346
24.2　配置Jenkins　　347
24.2.1　首次解锁　　348
24.2.2　现在建议安装的插件　　348
24.2.3　配置管理员用户　　348
24.2.4　添加插件　　350
24.2.5　告诉Jenkins到哪里寻找Python　　3和Xvfb　　350
24.2.6　设置HTTPS　　351
24.3　设置项目　　351
24.4　第一次构建　　352
24.5　设置虚拟显示器，让功能测试能在无界面的环境中运行　　354
24.6　截图　　356
24.7　如有疑问，增加超时试试　　359
24.8　使用PhantomJS运行QUnit JavaScript测试　　359
24.8.1　安装node　　359
24.8.2　在Jenkins中添加构建步骤　　361
24.9　CI服务器能完成的其他操作　　362
第25章　简单的社会化功能、页面模式以及练习　　363
25.1　有多个用户以及使用addCleanup的功能测试　　363
25.2　页面模式　　365
25.3　扩展功能测试测试第二个用户和“My Lists”页面　　367
25.4　留给读者的练习　　368
第26章　测试运行速度的快慢和炽热的岩浆　　371
26.1　正题：单元测试除了运行速度超快之外还有其他优势　　372
26.1.1　测试运行得越快，开发速度越快　　372
26.1.2　神赐的心流状态　　372
26.1.3　经常不想运行速度慢的测试，导致代码变坏　　373
26.1.4　现在还行，不过随着时间推移，整合测试会变得越来越慢　　373
26.1.5　别只听我一个人说　　373
26.1.6　单元测试能驱使我们实现好的设计　　373
26.2　纯粹的单元测试有什么问题　　373
26.2.1　隔离的测试难读也难写　　373
26.2.2　隔离测试不会自动测试集成情况　　374
26.2.3　单元测试几乎不能捕获意料之外的问题　　374
26.2.4　使用驭件的测试可能和实现方式联系紧密　　374
26.2.5　这些问题都可以解决　　374
26.3　合题：我们到底想从测试中得到什么　　374
26.3.1　正确性　　374
26.3.2　简洁可维护的代码　　375
26.3.3　高效的工作流程　　375
26.3.4　根据所需的优势评估测试　　375
26.4　架构方案　　375
26.4.1　端口和适配器（或六边形、简洁）架构　　376
26.4.2　函数式核心，命令式外壳　　377
26.5　小结　　377
遵从测试山羊的教诲　　379
附录A PythonAnywhere　　381
附录B 基于类的Django 视图　　385
附录C 使用Ansible 配置服务器　　394
附录D 测试数据库迁移　　398
附录E 行为驱动开发　　403
附录F 构建一个REST API：JSON、Ajax 和JavaScript 模拟技术　　416
附录G Django-Rest-Framework　　433
附录H 速查表　　443
附录I 接下来做什么　　447
附录J 示例源码　　451
参考书目　　453
作者简介　　454
封面介绍　　454
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Python测试驱动开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript完全解析
第1章　web的三层结构.　1
1.1　页面分离　2
1.2　三层结构　3
1.2.1　用html设置内容　4
1.2.2　用css描述页面展现效果　6
1.2.3　用javascript实现行为　7
1.3　正确的方法　7
1.4　javascript程序库　8
1.5　让我们开始吧　9
第2章　javascript编程　10
2.1　运行javascript程序　10
2.2　语句：给浏览器看的最小程序块　13
2.3　注释：给程序员看的最小程序块　13
2.4　变量：为程序存储数据　14
2.5　条件和循环：控制程序流　23
2.5.1　条件：做出选择　24
2.5.2　循环：使重复代码最少化　29
2.6　函数：编写后续将使用的代码　33
2.6.1　参数：向函数传递数据　33
2.6.2　返回语句：函数的数据输出　35
2.6.3　作用域：保持变量相互独立　36
2.7　对象　37
2.8　实际应用中的低调脚本　39
2.9　小结　40
第3章　文档访问　41
3.1　文档对象模型：对html的映射　41
3.1.1　文本节点　43
3.1.2　属性节点　44
3.2　访问所需的节点　45
3.2.1　通过id属性查找元素　45
3.2.2　通过标签名称查找元素　47
3.2.3　通过类名查找元素　50
3.2.4　遍历dom树　53
3.2.5　操作元素属性　56
3.3　更改样式　57
3.4　实例：建立带底纹的表格　62
3.4.1　查找所有类名为datatable的表格　63
3.4.2　获取每个表格的行　63
3.4.3　为偶数行添加类alt　65
3.4.4　合并全部代码　65
3.5　程序库简介　67
3.5.1　prototype程序库　67
3.5.2　jquery程序库　68
3.5.3　dojo程序库　69
3.6　小结　70
第4章　事件　71
4.1　重要的历史　71
4.2　事件句柄　72
4.2.1　默认操作　75
4.2.2　this关键字　76
4.2.3　事件句柄中存在的问题　78
4.3　事件监听器　79
4.3.1　默认行为　81
4.3.2　事件传送　83
4.3.3　this关键字　86
4.3.4　ie的内存泄漏问题　88
4.3.5　合并全部代码　88
4.4　实例：富提示条　90
4.4.1　静态页面　91
4.4.2　生成提示条　91
4.4.3　核心方法　93
4.4.4　动态样式　96
4.4.5　合并全部代码　97
4.5　实例：折叠菜单　98
4.5.1　静态页面　99
4.5.2　核心方法　100
4.5.3　动态样式　102
4.5.4　合并全部代码　103
4.6　程序库简介　109
4.7　小结　110
第5章　动画　111
5.1　动画原理　111
5.2　用javascript控制时间..　112
5.2.1　在settimeout函数中使用变量　115
5.2.2　停止计时器　117
5.2.3　建立重复计时器　118
5.2.4　停止重复计时器　119
5.3　再谈富提示条　119
5.4　用新风格实现老式动画　120
5.5　基于路径的运动　124
5.5.1　二维空间内的动画效果　130
5.5.2　创建更真实的运动效果　132
5.5.3　进一步学习　136
5.6　再谈折叠菜单　136
5.6.1　如何为折叠菜单添加动画效果　136
5.6.2　代码修改　137
5.7　程序库简介　143
5.8　小结　145
第6章　表单增强　146
6.1　html dom扩展　147
6.1.1　实例：创建关联的表单域　148
6.1.2　实例：级联菜单　156
6.2　表单验证　165
6.2.1　截获表单提交　166
6.2.2　正则表达式　167
6.2.3　实例：可复用的验证脚本　171
6.3　自定义表单控件　175
6.4　程序库简介　186
6.4.1　表单验证　187
6.4.2　自定义控件　188
6.5　小结　189
第7章　错误和调试　190
7.1　什么也没有发生　191
7.2　常见错误　195
7.2.1　语法错误　195
7.2.2　运行错误　199
7.2.3　逻辑错误　201
7.3　用firebug调试　204
7.4　小结　209
第8章　ajax　210
8.1　xmlhttprequest：处理小内容块　210
8.1.1　创建xmlhttprequest对象　211
8.1.2　访问服务器　213
8.1.3　数据处理　216
8.2　关于屏幕阅读器　217
8.3　ajax实战　218
8.4　基于ajax的无缝表单提交　227
8.5　程序库简介　234
8.5.1　prototype　235
8.5.2　dojo　236
8.5.3　jquery　236
8.5.4　yui　237
8.5.5　mootools　237
8.6　小结　238
第9章　展望　239
9.1　使web变得更加丰富多彩　240
9.1.1　更简单的浏览方式　240
9.1.2　更好的视觉效果　241
9.1.3　独特的交互机制　242
9.2　富互联网应用　244
9.3　摆脱网页的javascript　247
9.4　程序库简介　248
9.4.1　dojo　249
9.4.2　google web toolkit　251
9.5　小结　251
附录a　javascript核心程序库　253
a.1　对象　253
a.2　事件监听器方法　254
a.3　脚本启动　262
a.4　css类管理方法　264
a.5　获取派生的样式　265
a.6　完整的程序库...　265
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript完全解析
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript从入门到精通
第1篇  基 础 知 识
第1章  初识JavaScript	3
视频讲解：28分钟
1.1  JavaScript简述	4
1.1.1  JavaScript的起源	4
1.1.2  JavaScript的主要特点	4
1.1.3  JavaScript的应用	5
1.2  JavaScript的环境要求	7
1.2.1  硬件要求	7
1.2.2  软件要求	8
1.2.3  浏览器对JavaScript的支持	8
1.3  编写JavaScript的工具	9
1.3.1  Macromedia Dreamweaver	9
1.3.2  Microsoft FrontPage	10
1.4  JavaScript在HTML中的使用	10
1.4.1  在页面中直接嵌入JavaScript代码	11
1.4.2  链接外部JavaScript文件	12
1.5  JavaScript基本语法	13
1.5.1  执行顺序	13
1.5.2  大小写敏感	13
1.5.3  每行结尾的分号可有可无	13
1.6  小结	15
1.7  实践与练习	15
第2章  JavaScript基础	17
视频讲解：39分钟
2.1  数据结构	18
2.1.1  标识符	18
2.1.2  关键字	18
2.1.3  常量	19
2.1.4  变量	19
2.2  数据类型	21
2.2.1  数字型	21
2.2.2  字符串型	23
2.2.3  布尔型	24
2.2.4  特殊数据类型	24
2.3  运算符	26
2.3.1  算术运算符	26
2.3.2  比较运算符	27
2.3.3  赋值运算符	28
2.3.4  逻辑运算符	28
2.3.5  条件运算符	28
2.3.6  其他运算符	29
2.3.7  运算符优先级	30
2.4  表达式	31
2.5  数据类型的转换规则	31
2.6  小结	33
2.7  实践与练习	33
第3章  流程控制	35
视频讲解：21分钟
3.1  赋值语句	36
3.2  条件判断语句：if语句、switch语句	36
3.2.1  if语句	36
3.2.2  if…else语句	38
3.2.3  if…else if语句	38
3.2.4  if语句的嵌套	41
3.2.5  switch语句	42
3.3  循环控制语句：while语句、do…while
语句、for循环	44
3.3.1  while语句	44
3.3.2  do…while语句	46
3.3.3  for循环	46
3.4  跳转语句：continue语句、break语句	48
3.4.1  continue语句	48
3.4.2  break语句	48
3.5  小结	50
3.6  实践与练习	50
第4章  函数	51
视频讲解：22分钟
4.1  函数的定义	52
4.2  函数的调用	52
4.2.1  函数的简单调用	52
4.2.2  在事件响应中调用函数	54
4.2.3  通过链接调用函数	54
4.3  函数参数的使用	55
4.4  使用函数的返回值	55
4.5  嵌套函数	56
4.6  递归函数	58
4.7  JavaScript中的内置函数	59
4.8  Function()构造函数与函数直接量	62
4.9  小结	64
4.10  实践与练习	64
第5章  JavaScript对象与数组	65
视频讲解：1小时35分钟
5.1  JavaScript内部对象	66
5.1.1  Object对象	66
5.1.2  String对象	69
5.1.3  Date对象	72
5.1.4  event对象	75
5.1.5  Filesystemobject对象	84
5.1.6  Drive对象	90
5.1.7  File对象	94
5.1.8  Folder对象	105
5.2  对象访问语句	107
5.2.1  for…in循环语句	107
5.2.2  with语句	108
5.3  JavaScript中的数组	109
5.3.1  创建Array对象	109
5.3.2  Array对象的输入/输出	110
5.3.3  Array对象的属性	111
5.3.4  Array对象的方法	113
5.3.5  数组的添加和删除	113
5.3.6  设置数组的排列顺序	116
5.3.7  获取数组中的某段数组元素	117
5.3.8  将数组转换成字符串	118
5.4  小结	120
5.5  实践与练习	120
第6章  字符串与数值处理对象	121
视频讲解：27分钟
6.1  字符串对象	122
6.1.1  match()方法	122
6.1.2  search()方法	122
6.1.3  replace()方法	123
6.1.4  split()方法	123
6.2  数值处理对象	124
6.2.1  JavaScript中的数值	124
6.2.2  Math对象	124
6.2.3  Number对象	127
6.2.4  Boolean对象	131
6.3  小结	134
6.4  实践与练习	134
第7章  正则表达式	135
视频讲解：44分钟
7.1  正则表达式基础	136
7.1.1  正则表达式的基本结构	136
7.1.2  正则表达式的作用	136
7.2  正则表达式语法	136
7.2.1  模式匹配符	137
7.2.2  定位符与原义字符	138
7.2.3  限定符与选择匹配符	141
7.2.4  特殊字符与字符匹配符	142
7.2.5  分组组合与反向引用符	145
7.2.6  实际应用	146
7.3  RegExp对象	147
7.3.1  创建RegExp对象	147
7.3.2  RegExp对象的属性	149
7.3.3  RegExp对象的方法	150
7.4  小结	155
7.5  实践与练习	155
第8章  程序调试与错误处理	157
视频讲解：15分钟
8.1  IE浏览器内建的错误报告	158
8.2  处理异常	158
8.2.1  异常类型	159

8.2.2  触发onerror事件处理异常	159
8.2.3  使用try...catch...finally语句处理异常	161
8.3  JavaScript语言调试技巧	165
8.3.1  使用alert()语句进行调试	165
8.3.2  使用write()语句进行调试	166
8.3.3  使用抛出自定义异常消息进行调试	166
8.4  小结	167
8.5  实践与练习	168
第2篇  核 心 技 术
第9章  事件处理	171
视频讲解：50分钟
9.1  事件与事件处理概述	172
9.1.1  事件与事件名称	172
9.1.2  JavaScript的常用事件	172
9.1.3  事件处理程序的调用	174
9.2  DOM事件模型	175
9.2.1  事件流	175
9.2.2  主流浏览器的事件模型	176
9.2.3  事件对象	176
9.2.4  注册与移除事件监听器	177
9.3  鼠标键盘事件	179
9.3.1  鼠标的单击事件	179
9.3.2  鼠标的按下或松开事件	180
9.3.3  鼠标的移入/移出事件	181
9.3.4  鼠标移动事件	182
9.3.5  键盘事件	182
9.4  页面相关事件	185
9.4.1  加载与卸载事件	185
9.4.2  页面大小事件	187
9.5  表单相关事件	188
9.5.1  获得焦点与失去焦点事件	188
9.5.2  失去焦点修改事件	189
9.5.3  表单提交与重置事件	190
9.6  滚动字幕事件	193
9.6.1  onbounce事件	193
9.6.2  onstart事件	194
9.7  编辑事件	195
9.7.1  文本编辑事件	195
9.7.2  对象拖动事件	199
9.8  小结	201
9.9  实践与练习	201
第10章  处理文档（document对象）	203
视频讲解：20分钟
10.1  文档对象概述	204
10.2  文档对象的常用属性、方法与事件	204
10.2.1  document对象的属性	204
10.2.2  document对象的方法	205
10.2.3  document对象的事件	205
10.3  document对象的应用	206
10.3.1  链接文字颜色设置	206
10.3.2  文档前景色和背景色设置	208
10.3.3  查看文档创建日期、修改日期和
文档大小	209
10.3.4  动态标题栏	210
10.3.5  获取并设置URL	211
10.3.6  获取对象的当前状态	212
10.3.7  在文档中输出数据	213
10.3.8  打开新窗口并输出内容	214
10.3.9  动态添加一个HTML标记	216
10.3.10  获取文本框并修改其内容	217
10.4  小结	218
10.5  实践与练习	218
第11章  文档对象模型（DOM对象）	219
视频讲解：29分钟
11.1  DOM概述	220
11.1.1  DOM分层	220
11.1.2  DOM级别	222
11.2  DOM对象节点属性	222
11.2.1  访问指定节点	222
11.2.2  遍历文档树	224
11.3  节点	227
11.3.1  创建节点	227
11.3.2  插入节点	229
11.3.3  复制节点	231
11.3.4  删除与替换节点	232
11.4  获取文档中的指定元素	234
11.4.1  通过元素的id属性获取元素	234
11.4.2  通过元素的name属性获取元素	235
11.5  与DHTML相对应的DOM	236
11.5.1  innerHTML和innerText属性	236
11.5.2  outerHTML和outerText属性	237
11.6  小结	239
11.7  实践与练习	239
第12章  window窗口对象	241
视频讲解：33分钟
12.1  window对象	242
12.1.1  window对象的属性	242
12.1.2  window对象的方法	242
12.1.3  window对象的使用	243
12.2  对话框	244
12.2.1  警告对话框	244
12.2.2  询问回答对话框	245
12.2.3  提示对话框	245
12.3  窗口的打开与关闭	246
12.3.1  打开窗口	246
12.3.2  关闭窗口	249
12.4  控制窗口	251
12.4.1  移动窗口	251
12.4.2  改变窗口大小	254
12.4.3  窗口滚动	256
12.4.4  访问窗口历史	257
12.4.5  控制窗口状态栏	258
12.4.6  窗口时间与超时设定	261
12.5  窗口事件	261
12.5.1  通用窗口事件	261
12.5.2  扩展窗口事件	262
12.6  IE浏览器窗口扩展	262
12.6.1  模式窗口	262
12.6.2  无模式窗口	263
12.6.3  弹出窗口	264
12.7  小结	264
12.8  实践与练习	264
第13章  级联样式表	265
视频讲解：1小时3分钟
13.1  样式表简介	266
13.2  什么是CSS	266
13.3  CSS规则	268
13.4  利用Dreamweaver编写CSS
代码	269
13.5  style对象	269
13.5.1  style对象简介	270
13.5.2  style对象的样式标签属性和样式
属性	270
13.5.3  style元素对象的滤镜属性	290
13.5.4  style元素对象的方法	296
13.6  CSS选择器	298
13.6.1  标记选择器	299
13.6.2  类别选择器	300
13.6.3  id选择器	302
13.6.4  通用选择器	302
13.7  在页面中包含CSS	304
13.7.1  行内样式	304
13.7.2  内嵌样式表	305
13.7.3  链接式样式表	306
13.7.4  样式表作用的优先顺序	307
13.8  CSS的继承	309
13.8.1  HTML的继承关系	309
13.8.2  CSS继承的运用	311
13.9  小结	311
13.10  实践与练习	312
第14章  表单和表单元素	313
视频讲解：32分钟
14.1  什么是表单	314
14.2  表单标记<form>	314
14.2.1  处理程序action属性	315
14.2.2  表单名称name属性	315
14.2.3  提交方式method属性	315
14.2.4  编码方式enctype属性	316
14.2.5  目标显示方式target属性	316
14.3  输入标记<input>	317
14.3.1  文字域text	317
14.3.2  密码域password	318
14.3.3  单选按钮radio	319
14.3.4  复选框checkbox	320

14.3.5  普通按钮button	320
14.3.6  提交按钮submit	321
14.3.7  重置按钮reset	321
14.3.8  图像域image	322
14.3.9  隐藏域hidden	323
14.3.10  文件域file	323
14.4  文本域标记<textarea>	324
14.5  菜单和列表标记<select>，
<option>	325
14.6  利用Dreamweaver快速创建
表单元素	326
14.7  在JavaScript中访问表单	328
14.8  在JavaScript中访问表单域	328
14.9  表单验证	328
14.10  小结	331
14.11  实践与练习	331

第3篇  高 级 应 用
第15章  页面打印	335
视频讲解：13分钟
15.1  用WebBrowser组件的execWB()方法
进行打印	336
15.2  打印指定框架中的内容	338
15.3  分页打印	339
15.4  设置页眉/页脚	341
15.5  小结	343
15.6  实践与练习	343
第16章  使用Cookie	345
视频讲解：32分钟
16.1  了解Cookie	346
16.1.1  Cookie的形式	346
16.1.2  Cookie的属性	347
16.1.3  Cookie的主要用途	347
16.1.4  Cookie的优点	348
16.1.5  Cookie的缺点	348
16.2  在JavaScript中使用Cookie	349
16.2.1  Cookie设置	349
16.2.2  Cookie的传递流程	351
16.2.3  Cookie的写入	352
16.2.4  Cookie的读取	357
16.2.5  Cookie的删除	359
16.3  Cookie的安全问题	360
16.4  页面重定向中使用Cookie	360
16.5  小结	362
16.6  实践与练习	362
第17章  图像处理	363
视频讲解：30分钟
17.1  Image对象	364
17.2  图像对象的应用	364
17.2.1  图像的预装载	364
17.2.2  图片的随机显示	366
17.2.3  无间断的图片滚动效果	369
17.2.4  登录图片验证码	370
17.2.5  浮动广告	371
17.2.6  图片渐变效果	372
17.2.7  进度条的显示	373
17.2.8  图片的时钟显示	374
17.2.9  不断闪烁的图片	376
17.2.10  图片翻转效果	376
17.2.11  图片水波倒影	380
17.2.12  图片总置于顶端	381
17.3  小结	382
17.4  实践与练习	382
第18章  浏览器检测	383
视频讲解：13分钟
18.1  浏览器检测对象	384
18.1.1  浏览器对象的属性	384
18.1.2  浏览器对象的子对象	385
18.2  检测浏览器是否支持某些特性	386
18.3  检测Quirks模式和标准模式	387
18.4  小结	388
18.5  实践与练习	388
第19章  嵌入式对象	389
视频讲解：22分钟
19.1  object嵌入对象标记	390
19.2  MIME类型	391
19.3  Java applet对象	392
19.3.1  创建Java applet	392
19.3.2  嵌入Java applet	393
19.3.3  在IE中执行Java applet	393
19.3.4  JavaScript与Java applet交互	394
19.4  ActiveX控件	395
19.4.1  创建ActiveX	396
19.4.2  嵌入ActiveX	396
19.4.3  JavaScript与ActiveX交互	396
19.5  Flash	397
19.5.1  嵌入Flash	397
19.5.2  用JavaScript控制Flash	399
19.6  小结	401
19.7  实践与练习	401
第20章  JavaScript中的XML	403
视频讲解：19分钟
20.1  XML简介	404
20.2  创建XML	404
20.3  DOM与XML	405
20.4  载入XML	406
20.4.1  在IE中创建DOM并载入XML	407
20.4.2  在Mozilla中创建DOM并载入XML	407
20.5  读取XML	409
20.5.1  获取XML元素的属性值	409
20.5.2  通过JavaScript获取XML文档中的
数据	410
20.5.3  使用XML DOM对象读取XML文档	412
20.6  通过JavaScript操作XML实现
分页	413
20.7  小结	415
20.8  实践与练习	415
第21章  JavaScript的安全	417
视频讲解：18分钟
21.1  同源策略	418
21.2  Internet Explorer安全区域	419
21.3  JavaScript代码安全	419
21.3.1  屏蔽部分按键	420
21.3.2  屏蔽鼠标右键	422
21.3.3  禁止网页另存为	423
21.3.4  禁止复制网页内容	423
21.4  JavaScript加密	424
21.4.1  JavaScript代码加密	424
21.4.2  JavaScript编写MD5加密	426
21.5  小结	430
21.6  实践与练习	430
第22章  Ajax技术	431
视频讲解：39分钟
22.1  当下谁在用Ajax	432
22.1.1  百度搜索提示	432
22.1.2  淘宝新会员免费注册	432
22.1.3  明日科技编程词典服务网	432
22.2  Ajax开发模式与传统开发模式的
比较	433
22.3  Ajax技术特点	434
22.4  Ajax使用的技术	435
22.4.1  XMLHttpRequest对象	435
22.4.2  XML	435
22.4.3  JavaScript	437
22.4.4  CSS	438
22.4.5  DOM	438
22.5  Ajax需要注意的几个问题	438
22.5.1  安全问题	438
22.5.2  性能问题	439
22.5.3  浏览器兼容性问题	439
22.5.4  解决中文乱码问题	439
22.6  Ajax新技术——XMLHttpRequest
对象	440
22.6.1  初始化XMLHttpRequest对象	440
22.6.2  XMLHttpRequest对象的常用方法	441
22.6.3  XMLHttpRequest对象的常用属性	443
22.6.4  实战模拟：不刷新页面提交表单数据	445
22.7  Ajax的重构	448
22.7.1  Ajax重构的步骤	449
22.7.2  实时显示商城公告	451
22.8  小结	452
22.9  实践与练习	452
第23章   jQuery技术	453
视频讲解：1小时36分钟
23.1  jQuery概述	454
23.1.1  jQuery能做什么	454
23.1.2  jQuery的特点	455
23.2  jQuery下载与配置	456

23.2.1  下载jQuery	456
23.2.2  配置jQuery	457
23.3  jQuery的插件	458
23.3.1  插件的使用	458
23.3.2  流行的插件	458
23.4  jQuery选择器	460
23.4.1  jQuery的工厂函数	460
23.4.2  基本选择器	461
23.4.3  层级选择器	468
23.4.4  过滤选择器	476
23.4.5  属性选择器	482
23.4.6  表单选择器	483
23.5  jQuery控制页面	485
23.5.1  对元素内容和值进行操作	485
23.5.2  对DOM节点进行操作	489
23.5.3  对元素属性进行操作	494
23.5.4  对元素的CSS样式进行操作	494
23.6  jQuery的事件处理	495
23.6.1  页面加载响应事件	495
23.6.2  jQuery中的事件	496
23.6.3  事件绑定	497
23.6.4  模拟用户操作	498
23.6.5  事件捕获与事件冒泡	500
23.7  jQuery的动画效果	503
23.7.1  基本的动画效果	503
23.7.2  淡入淡出的动画效果	506
23.7.3  滑动效果	507
23.7.4  自定义的动画效果	510
23.8  小结	514
23.9  实践与练习	514


第4篇  项 目 实 战
第24章  JavaScript+Ajax+jQuery网页
开发	517
视频讲解：23分钟
24.1  系统分析	518
24.2  系统设计	518
24.2.1  系统目标	518
24.2.2  系统功能结构	518
24.3  网页预览	519
24.4  使用JavaScript技术实现导航菜单
设计	521
24.5  使用jQuery技术实现图片展示区	523
24.6  使用Ajax技术实现最新消息
页面	526
24.7  使用JavaScript脚本实现产品推荐
页面	528
24.8  使用JavaScript脚本实现浮动窗口
设计	530
24.9  小结	532
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript从入门到精通
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript设计与开发新思维
第1部分　入门
第1章　(重新)介绍JavaScript
1.1　什么是JavaScript
1.2　JavaScript的历史
1.2.1　间或有些丑陋的历史
1.2.2　Ajax重临
1.2.3　浏览器改进
1.2.4　框架的兴起
1.3　JavaScript不是什么
1.4　JavaScript和其他常见技术的比较
1.5　为什么说JavaScript是一种好语言
1.6　JavaScript版本和浏览器支持
1.7　JavaScript编程目标
1.8　小结
第2章　JavaScript实战
2.1　选择DOCTYPE
2.2　HTML5入门
2.2.1　一个HTML5模板
2.2.2　HTML5表单元素
2.3　为HTML添加JavaScript
2.4　关键的开发方法
2.4.1　功能退化
2.4.2　渐进增强
2.4.3　无干扰的JavaScript
2.5　拼凑一些代码
2.5.1　开发基本功能
2.5.2　添加JavaScript层次
2.5.3　处理事件
2.5.4　执行验证
2.6　窃取这段JavaScript
2.7　小结
第3章　行业工具
3.1　大辩论：文本编辑器还是IDE？
3.1.1　共有特性
3.1.2　两者的比较
3.1.3　一些文本编辑器
3.1.4　几种IDE
3.2　浏览器：你的朋友，你的敌人
3.2.1　Google公司的Chrome
3.2.2　Mozilla公司的Firefox
3.2.3　微软公司的Internet Explorer
3.2.4　Opera
3.2.5　苹果公司的Safari
3.3　在多个浏览器上测试
3.4　测试JavaScript
3.5　错误和调试
3.5.1　错误类型
3.5.2　常见错误起因
3.5.3　调试技术
3.5.4　使用Firebug
3.6　在线资源
3.7　小结
第2部分　JavaScript基础
第4章　简单变量类型
4.1　变量基础知识
4.1.1　变量声明
4.1.2　变量名
4.1.3　赋值
4.1.4　简单值类型
4.2　使用数字
4.2.1　算术运算符
4.2.2　创建计算器
4.2.3　格式化数字
4.2.4　Math对象
4.3　使用字符串
4.3.1　创建字符串
4.3.2　字符串拆分
4.3.3　操纵字符串
4.3.4　转义序列
4.4　完成类型转换
4.5　复习与提高
4.5.1　复习
4.5.2　提高
4.6　小结
第5章　使用控制结构
5.1　条件语句的基础知识
5.1.1　if条件语句
5.1.2　什么是真
5.1.3　比较运算符
5.1.4　逻辑运算符
5.1.5　汇总
5.2　更多的条件语句
5.2.1　if-else条件语句
5.2.2　if-else if条件语句
5.2.3　switch条件语句
5.2.4　神秘的条件语句
5.3　更复杂的条件
5.3.1　数值比较
5.3.2　字符串比较
5.3.3　typeof运算符
5.4　循环基础知识
5.4.1　for循环
5.4.2　while循环
5.5　复习和提高
5.5.1　复习
5.5.2　提高
5.6　小结
第6章　复杂变量类型
6.1　生成日期和时间
6.1.1　创建日期
6.1.2　日期方法
6.1.3　使用时区
6.1.4　更改日期
6.1.5　日期运算
6.2　使用数组
6.2.1　创建数组
6.2.2　访问数组元素
6.2.3　访问所有数组元素
6.2.4　删除数组元素
6.2.5　数组方法
6.2.6　在字符串和数组之间转换
6.3　使用对象
6.3.1　创建对象
6.3.2　访问对象属性
6.3.3　访问所有对象属性
6.3.4　删除对象属性
6.4　数组与对象的比较
6.5　复习和提高
6.5.1　复习
6.5.2　提高
6.6　小结
第7章　创建函数
7.1　基础知识
7.1.1　定义你自己的函数
7.1.2　向函数传递值
7.1.3　验证函数参数
7.1.4　参数值传递方式
7.1.5　从函数返回值
7.1.6　理解变量作用域
7.2　作为对象的函数
7.2.1　作为变量值的函数
7.2.2　作为参数值的函数
7.2.3　汇总
7.3　更有趣的内容
7.3.1　上下文和this对象
7.3.2　匿名函数
7.3.3　嵌套函数
7.3.4　执行递归
7.4　复习和提高
7.4.1　复习
7.4.2　提高
7.5　小结
第8章　事件处理
8.1　事件处理的基础
8.2　创建事件监听器
8.2.1　(不要使用)嵌入式事件处理器
8.2.2　传统事件处理
8.2.3　W3C事件处理
8.2.4　IE浏览器事件处理
8.2.5　创建一个事件分配器
8.3　创建一个实用程序库
8.4　事件类型
8.4.1　输入设备事件
8.4.2　键盘事件
8.4.3　浏览器事件
8.4.4　表单事件
8.5　事件可访问性
8.6　事件和渐进增强
8.7　高级事件处理
8.7.1　引用事件
8.7.2　事件属性
8.7.3　检查按键
8.7.4　阻止默认事件行为
8.7.5　事件的两个阶段
8.7.6　委派事件处理
8.8　复习和提高
8.8.1　复习
8.8.2　提高
8.9　小结
第9章　JavaScript与浏览器
9.1　使用对话窗口
9.1.1　警告对话框
9.1.2　确认对话框
9.1.3　提示对话框
9.1.4　自定义对话框
9.2　处理窗口
9.2.1　window全局对象
9.2.2　操纵窗口的大小和位置
9.2.3　屏幕属性
9.2.4　创建新窗口
9.2.5　自定义弹出窗口
9.2.6　改变焦点
9.2.7　可访问解决方案
9.2.8　窗口之间的通信
9.2.9　处理浏览器历史
9.2.10　重定向浏览器
9.2.11　创建具有表现力的URL
9.2.12　打印本页
9.2.13　文档对象
9.3　操纵DOM
9.3.1　DOM基础
9.3.2　DOM快捷方式
9.3.3　使用DOM操纵
9.3.4　DOM方法
9.3.5　CSS选择符
9.3.6　修改元素
9.3.7　创建元素
9.4　JavaScript与CSS
9.4.1　引用单独的样式
9.4.2　隐藏和显示元素
9.4.3　创建模态窗口
9.4.4　引用样式表
9.5　使用Cookie
9.5.1　创建Cookie
9.5.2　读取Cookie
9.5.3　删除Cookie
9.5.4　创建一个Cookie程序库
9.5.5　使用Cookie程序库
9.6　使用定时器
9.7　复习与提高
9.7.1　复习
9.7.2　提高
9.8　小结
第10章　处理表单
10.1　表单一般考虑事项
10.1.1　创建错误信息
10.1.2　创建工具提示
10.1.3　禁用提交按钮
10.2　文本输入域和文本区域
10.2.1　文本输入域和文本区域基础知识
10.2.2　实现自动完成
10.3　选择菜单
10.3.1　验证选择菜单
10.3.2　创建动态选择框
10.4　复选框
10.5　单选按钮
10.6　处理文件上传
10.7　正则表达式
10.7.1　什么是正则表达式
10.7.2　创建一个正则表达式
10.7.3　正则表达式函数
10.7.4　定义简单的模式
10.7.5　使用限定符
10.7.6　使用字符类
10.8　汇总
10.9　复习与提高
10.9.1　复习
10.9.2　提高
10.10　小结
第11章　Ajax
11.1　Ajax基础知识
11.1.1　理解Ajax
11.1.2　创建一个Ajax对象
11.1.3　指定结果处理器
11.1.4　发出请求
11.1.5　处理服务器响应
11.1.6　发送数据
11.1.7　基本调试
11.2　处理其他数据
11.2.1　XML
11.2.2　JSON
11.3　服务器端脚本
11.3.1　返回普通文本
11.3.2　返回XML
11.3.3　返回JSON
11.4　Ajax示例
11.4.1　显示进度
11.4.2　完成第2章中的登录示例
11.4.3　创建一个Ajax联络表单
11.4.4　预加载数据
11.4.5　使用定时器的股票报价
11.5　复习与提高
11.5.1　复习
11.5.2　提高
11.6　小结
第3部分　后续步骤
第12章　错误管理
12.1　捕捉和抛出错误
12.1.1　捕捉错误
12.1.2　finally子句
12.1.3　抛出异常
12.1.4　汇总
12.2　使用断言
12.2.1　创建断言函数
12.2.2　Firebug中的断言
12.3　单元测试
12.3.1　安装jsUnity
12.3.2　定义测试
12.3.3　运行测试
12.3.4　记录结果
12.3.5　建立和拆除
12.3.6　汇总
12.4　复习与提高
12.4.1　复习
12.4.2　提高
12.5　小结
第13章　框架
13.1　选择框架
13.2　jQuery简介
13.2.1　jQuery入门
13.2.2　选择元素
13.2.3　操纵元素
13.2.4　DOM操纵
13.2.5　处理事件
13.2.6　创建特效
13.2.7　实施Ajax操作
13.2.8　jQuery插件
13.3　YUI简介
13.3.1　YUI入门
13.3.2　选择元素
13.3.3　操纵元素
13.3.4　DOM操纵
13.3.5　处理事件
13.3.6　创建特效
13.3.7　执行Ajax
13.3.8　使用小部件和工具
13.4　库
13.5　复习与提高
13.5.1　复习
13.5.2　提高
13.6　小结
第14章　高级JavaScript
14.1　定义命名空间
14.2　创建自定义对象
14.2.1　创建单个自定义对象
14.2.2　创建自定义对象的多个实例
14.2.3　更完整的自定义对象
14.2.4　汇总
14.3　理解原型
14.3.1　原型化继承
14.3.2　添加原型方法
14.4　使用闭包
14.5　备选类型标识
14.6　精简代码
14.7　复习与提高
14.7.1　复习
14.7.2　提高
14.8　小结
第15章　PHP和JavaScript的结合
15.1　确定目标
15.2　创建数据库
15.3　建立网站
15.4　编写非JavaScript版本
15.4.1　列出拍卖
15.4.2　登录
15.4.3　查看单个拍卖
15.5　创建Ajax资源
15.5.1　登录Ajax脚本
15.5.2　用于出价的Ajax脚本
15.5.3　获取出价的Ajax脚本
15.6　添加JavaScript
15.6.1　编写login.js
15.6.2　在View.php中编写JavaScript
15.6.3　编写view.js
15.7　完成示例
15.8　复习与提高
15.8.1　复习
15.8.2　提高
15.9　小结
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript设计与开发新思维
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>学习JavaScript数据结构与算法（第3版）
第1章　JavaScript简介　　1
1.1　JavaScript数据结构与算法　　1
1.2　环境搭建　　2
1.2.1　最简单的环境搭建　　2
1.2.2　使用Web服务器　　3
1.2.3　Node.js　http-server　　5
1.3　JavaScript基础　　5
1.3.1　变量　　6
1.3.2　运算符　　8
1.3.3　真值和假值　　11
1.3.4　相等运算符（==和===）　　12
1.4　控制结构　　14
1.4.1　条件语句　　14
1.4.2　循环　　15
1.5　函数　　16
1.6　JavaScript面向对象编程　　17
1.7　调试工具　　18
1.8　小结　　20
第2章　ECMAScript和TypeScript概述　　21
2.1　ECMAScript还是JavaScript　　21
2.1.1　ES6、ES2015、ES7、ES2016、ES8、ES2017和ES.Next　　21
2.1.2　使用Babel.js　　23
2.2　ECMAScript　2015+的功能　　24
2.2.1　用let替代var声明变量　　24
2.2.2　模板字面量　　27
2.2.3　箭头函数　　27
2.2.4　函数的参数默认值　　28
2.2.5　声明展开和剩余参数　　29
2.2.6　增强的对象属性　　30
2.2.7　使用类进行面向对象编程　　31
2.2.8　乘方运算符　　33
2.2.9　模块　　33
2.3　介绍TypeScript　　39
2.3.1　类型推断　　40
2.3.2　接口　　41
2.3.3　其他TypeScript功能　　43
2.3.4　TypeScript中对JavaScript文件的编译时检查　　43
2.4　小结　　44
第3章　数组　　45
3.1　为什么用数组　　45
3.2　创建和初始化数组　　46
3.3　添加元素　　47
3.3.1　在数组末尾插入元素　　47
3.3.2　在数组开头插入元素　　48
3.4　删除元素　　49
3.4.1　从数组末尾删除元素　　49
3.4.2　从数组开头删除元素　　49
3.5　在任意位置添加或删除元素　　51
3.6　二维和多维数组　　51
3.6.1　迭代二维数组的元素　　52
3.6.2　多维数组　　53
3.7　JavaScript的数组方法参考　　54
3.7.1　数组合并　　55
3.7.2　迭代器函数　　55
3.7.3　ECMAScript　6和数组的新功能　　57
3.7.4　排序元素　　60
3.7.5　搜索　　63
3.7.6　输出数组为字符串　　64
3.8　类型数组　　64
3.9　TypeScript中的数组　　65
3.10　小结　　66
第4章　栈　　67
4.1　创建一个JavaScript数据结构和算法库　　67
4.2　栈数据结构　　68
4.2.1　创建一个基于数组的栈　　69
4.2.2　向栈添加元素　　69
4.2.3　从栈移除元素　　70
4.2.4　查看栈顶元素　　70
4.2.5　检查栈是否为空　　71
4.2.6　清空栈元素　　71
4.2.7　使用Stack类　　71
4.3　创建一个基于JavaScript对象的Stack类　　73
4.3.1　向栈中插入元素　　73
4.3.2　验证一个栈是否为空和它的大小　　74
4.3.3　从栈中弹出元素　　74
4.3.4　查看栈顶的值并将栈清空　　75
4.3.5　创建toString方法　　75
4.4　保护数据结构内部元素　　76
4.4.1　下划线命名约定　　76
4.4.2　用ES2015的限定作用域Symbol实现类　　77
4.4.3　用ES2015的WeakMap实现类　　77
4.4.4　ECMAScript类属性提案　　78
4.5　用栈解决问题　　79
4.6　小结　　81
第5章　队列和双端队列　　82
5.1　队列数据结构　　82
5.1.1　创建队列　　83
5.1.2　使用Queue　类　　86
5.2　双端队列数据结构　　87
5.2.1　创建Deque类　　87
5.2.2　使用Deque类　　89
5.3　使用队列和双端队列来解决问题　　90
5.3.1　循环队列——击鼓传花游戏　　90
5.3.2　回文检查器　　91
5.3.3　JavaScript任务队列　　93
5.4　小结　　93
第6章　链表　　94
6.1　链表数据结构　　94
6.2　双向链表　　106
6.2.1　在任意位置插入新元素　　107
6.2.2　从任意位置移除元素　　109
6.3　循环链表　　111
6.3.1　在任意位置插入新元素　　112
6.3.2　从任意位置移除元素　　113
6.4　有序链表　　114
6.5　创建StackLinkedList类　　116
6.6　小结　　117
第7章　集合　　118
7.1　构建数据集合　　118
7.2　创建集合类　　119
7.2.1　has(element)方法　　119
7.2.2　add方法　　120
7.2.3　delete和clear方法　　120
7.2.4　size方法　　121
7.2.5　values方法　　122
7.2.6　使用Set类　　122
7.3　集合运算　　123
7.3.1　并集　　123
7.3.2　交集　　125
7.3.3　差集　　127
7.3.4　子集　　128
7.4　ECMAScript　2015——Set类　　130
7.5　多重集或袋　　132
7.6　小结　　133
第8章　字典和散列表　　134
8.1　字典　　134
8.1.1　创建字典类　　135
8.1.2　使用Dictionary类　　141
8.2　散列表　　142
8.2.1　创建散列表　　143
8.2.2　使用HashTable类　　146
8.2.3　散列表和散列集合　　147
8.2.4　处理散列表中的冲突　　147
8.2.5　创建更好的散列函数　　158
8.3　ES2015　Map类　　159
8.4　ES2105　WeakMap类和WeakSet类　　159
8.5　小结　　160
第9章　递归　　161
9.1　理解递归　　161
9.2　计算一个数的阶乘　　162
9.2.1　迭代阶乘　　162
9.2.2　递归阶乘　　163
9.3　斐波那契数列　　165
9.3.1　迭代求斐波那契数　　166
9.3.2　递归求斐波那契数　　166
9.3.3　记忆化斐波那契数　　167
9.4　为什么要用递归？它更快吗　　167
9.5　小结　　168
第10章　树　　169
10.1　树数据结构　　169
10.2　树的相关术语　　170
10.3　二叉树和二叉搜索树　　170
10.3.1　创建BinarySearchTree类　　171
10.3.2　向二叉搜索树中插入一个键　　172
10.4　树的遍历　　175
10.4.1　中序遍历　　175
10.4.2　先序遍历　　176
10.4.3　后序遍历　　177
10.5　搜索树中的值　　178
10.5.1　搜索最小值和最大值　　178
10.5.2　搜索一个特定的值　　180
10.5.3　移除一个节点　　182
10.6　自平衡树　　185
10.6.1　Adelson-Velskii-Landi树（AVL树）　　185
10.6.2　红黑树　　194
10.7　小结　　200
第11章　二叉堆和堆排序　　201
11.1　二叉堆数据结构　　201
11.1.1　创建最小堆类　　202
11.1.2　创建最大堆类　　208
11.2　堆排序算法　　209
11.3　小结　　211
第12章　图　　212
12.1　图的相关术语　　212
12.2　图的表示　　214
12.2.1　邻接矩阵　　215
12.2.2　邻接表　　215
12.2.3　关联矩阵　　216
12.3　创建Graph类　　216
12.4　图的遍历　　219
12.4.1　广度优先搜索　　220
12.4.2　深度优先搜索　　225
12.5　最短路径算法　　231
12.5.1　Dijkstra算法　　232
12.5.2　Floyd-Warshall算法　　234
12.6　最小生成树　　235
12.6.1　Prim算法　　236
12.6.2　Kruskal算法　　237
12.7　小结　　238
第13章　排序和搜索算法　　239
13.1　排序算法　　239
13.1.1　冒泡排序　　239
13.1.2　选择排序　　242
13.1.3　插入排序　　244
13.1.4　归并排序　　245
13.1.5　快速排序　　247
13.1.6　计数排序　　251
13.1.7　桶排序　　253
13.1.8　基数排序　　255
13.2　搜索算法　　257
13.2.1　顺序搜索　　257
13.2.2　二分搜索　　258
13.2.3　内插搜索　　260
13.3　随机算法　　261
13.4　小结　　262
第14章　算法设计与技巧　　263
14.1　分而治之　　263
14.2　动态规划　　265
14.2.1　最少硬币找零问题　　266
14.2.2　背包问题　　268
14.2.3　最长公共子序列　　270
14.2.4　矩阵链相乘　　272
14.3　贪心算法　　274
14.3.1　最少硬币找零问题　　274
14.3.2　分数背包问题　　275
14.4　回溯算法　　276
14.4.1　迷宫老鼠问题　　277
14.4.2　数独解题器　　279
14.5　函数式编程简介　　282
14.5.1　函数式编程与命令式编程　　283
14.5.3　JavaScript函数式工具箱——map、filter和reduce　　284
14.5.4　JavaScript函数式类库和数据结构　　286
14.6　小结　　286
第15章　算法复杂度　　287
15.1　大O表示法　　287
15.1.1　理解大O表示法　　287
15.1.2　时间复杂度比较　　289
15.1.3　NP完全理论概述　　292
15.2　用算法娱乐身心　　293
15.3　小结　　294
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>学习JavaScript数据结构与算法（第3版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS Web应用开发
目 录

第1章 　移动触摸设备的新思路　　1
1.1 　为什么要选择移动互联网　　1
1.1.1 　从桌面端到移动端　　1
1.1.2 　移动市场　　3
1.1.3 　为何现在就进军移动领域　　4
1.1.4 　面向移动的做法　　4
1.1.5 　面向移动的指南　　5
1.2 　Apple的移动设备硬件　　6
1.3 　小结　　6
第2章 　为iOS设备打造的敏捷项目　　7
2.1 　实现移动信息架构　　7
2.1.1 　信息架构及其重要性　　8
2.1.2 　遵循移动策略的黄金法则　　16
2.1.3 　纯内容标注法　　17
2.1.4 　使用站点导航图来表现信息
架构　　18
2.1.5 　使用线框图草拟信息架构　　21
2.1.6 　通过原型将交互可视化　　22
2.2 　移动设计的系统方法　　24
2.2.1 　 苹果设备的可访问性　　25
2.2.2 　 iOS设备的可用性　　28
2.2.3 　 iPhone页面模型　　32
2.2.4 　 iPhone用户界面　　33
2.2.5 　 iPad块模型　　35
2.2.6 　 iPad用户界面　　37
2.2.7 　用于苹果移动设计的工具　　39
2.3 　小结　　39
第3章 　针对iOS设备的Web开发　　41
3.1 　Web开发工具　　41
3.1.1 　开发框架　　42
3.1.2 　移动网站　　48
3.2 　移动应用　　49
3.3 　Web开发模型　　50
3.3.1 　Web开发模型的优缺点　　50
3.3.2 　开发Web应用的四种方法　　54
3.3.3 　Web应用和原生应用在用户眼中的区别　　56
3.3.4 　Web标准：HTML、CSS及JavaScript　　59
3.3.5 　浏览器对标准的支持情况：WebKit和Safari　　86
3.4 　SDK开发模型　　92
3.4.1 　苹果的Objective-C、Cocoa Touch以及Xtools模型　　93
3.4.2 　我是一台Mac电脑　　95
3.4.3 　用于苹果移动开发的工具和框架　　96
3.5 　小结　　96
第4章 　针对iOS设备的用户界面设计　　97
4.1 　用户界面设计　　97
4.1.1 　什么是界面　　98
4.1.2 　万物皆界面　　100
4.1.3 　负空间　　105
4.1.4 　色彩心理学　　110
4.1.5 　界面层次　　117
4.1.6 　阅读模式　　118
4.1.7 　用户界面设计流程　　125
4.2 　兼容iPhone和iPad的用户界面设计　　127
4.2.1 　调研　　128
4.2.2 　结构　　130
4.2.3 　美工　　133
4.2.4 　交互　　133
4.2.5 　可交付结果　　134
4.3 　iPad类原生用户界面设计　　135
4.3.1 　调研　　135
4.3.2 　结构　　135
4.3.3 　美工　　136
4.3.4 　交互　　137
4.3.5 　可交付结果　　138
4.4 　iPhone类原生用户界面设计　　138
4.4.1 　调研　　138
4.4.2 　结构　　138
4.4.3 　美工　　139
4.4.4 　交互　　140
4.4.5 　可交付结果　　141
4.4.6 　用于用户界面设计的工具　　141
4.5 　小结　　142
第5章 　iPhone用户界面设计：简化思维　　143
5.1 　草绘用户界面　　143
5.2 　简化思维　　143
5.2.1 　iPhone是随身携带的设备　　144
5.2.2 　iPhone页面模型的本质　　144
5.2.3 　iPhone的局限性　　144
5.2.4 　用户认知资源的本质　　144
5.3 　草绘剖析　　145
5.4 　使用工具来设计　　147
5.4.1 　探索Balsamiq Mockups界面　　148
5.4.2 　描绘关联性　　149
5.5 　使用Adobe Fireworks来设计　　150
5.5.1 　创建画布　　151
5.5.2 　整理图层　　152
5.5.3 　布局设计　　152
5.5.4 　界面设计　　153
5.5.5 　复用设计　　158
5.5.6 　用于用户界面设计的工具　　160
5.6 　小结　　160
第6章 　iPad用户界面设计：逆向思维　　161
6.1 　草绘用户界面　　161
6.2 　逆向思维　　161
6.2.1 　逆向简化　　162
6.2.2 　删减与优选　　163
6.2.3 　隐藏与改造　　164
6.2.4 　收缩与分组　　165
6.2.5 　“简单?复杂”悖论的关键点　　166
6.2.6 　草绘用户界面　　166
6.3 　使用工具进行设计　　168
6.4 　使用Adobe Fireworks来设计　　174
6.4.1 　iPad兼容版　　174
6.4.2 　iPad类原生版　　183
6.4.3 　用于用户界面设计的工具　　190
6.5 　小结　　191
第7章 　WebKit所支持的Web标准：充分发挥Mobile Safari的能力　　192
7.1 　iPhone和iPad的Web表现对比　　192
7.2 　HTML5　　192
7.2.1 　HTML5标记语法　　193
7.2.2 　HTML5重新定义过的标签　　194
7.2.3 　HTML5语义　　195
7.2.4 　HTML5媒体　　197
7.3 　CSS3　　217
7.3.1 　前缀　　217
7.3.2 　圆角边框　　218
7.3.3 　边框图片　　218
7.3.4 　渐变　　219
7.3.5 　盒子尺寸标准　　219
7.3.6 　盒子阴影　　220
7.3.7 　轮廓　　220
7.3.8 　背景尺寸　　221
7.3.9 　背景起点　　221
7.3.10 　多重背景　　222
7.3.11 　文字阴影　　222
7.3.12 　文本溢出　　223
7.3.13 　单词换行　　223
7.3.14 　线上字体　　224
7.3.15 　轻触高亮　　224
7.3.16 　多列布局　　225
7.3.17 　横跨多列　　225
7.3.18 　过渡　　226
7.3.19 　变换　　226
7.3.20 　动画　　228
7.3.21 　关键帧　　230
7.3.22 　倒影　　230
7.4 　JavaScript　　231
7.4.1 　在网页上添加JavaScript　　232
7.4.2 　JavaScript结构　　233
7.4.3 　数据类型分类　　234
7.4.4 　保留字　　235
7.4.5 　变量　　236
7.4.6 　运算符　　238
7.4.7 　条件语句　　239
7.4.8 　循环语句　　241
7.4.9 　函数　　242
7.4.10 　变量作用域　　243
7.4.11 　数组　　244
7.4.12 　字符串　　245
7.4.13 　对象　　246
7.4.14 　浏览器对象模型　　247
7.4.15 　文档对象模型　　248
7.4.16 　对比DOM和HTML结构　　249
7.4.17 　操作DOM　　250
7.4.18 　一些JavaScript的最佳实践　　253
7.4.19 　与Web标准有关的资源　　253
7.5 　小结　　254
第8章 　原生iOS环境开发　　255
8.1 　配置环境　　255
8.2 　视口的定义　　256
8.3 　全屏模式应用　　258
8.4 　添加主屏幕图标　　259
8.5 　应用启动图片　　260
8.6 　应用重定向　　261
8.7 　配置Head标签部分　　262
8.8 　原生链接模拟　　263
8.9 　原生文本模拟　　263
8.10 　原生元素模拟　　264
8.11 　原生滚动模拟　　265
8.12 　原生iOS服务交互　　265
8.12.1 　电话应用　　265
8.12.2 　邮件应用　　266
8.12.3 　短信应用　　267
8.12.4 　地图应用　　267
8.13 　触摸事件和手势交互　　268
8.13.1 　触摸事件模式：触摸并不是点击　　269
8.13.2 　原生及自定义的触摸事件处理　　272
8.13.3 　创建可触摸的设计元素　　273
8.13.4 　设备朝向变更事件　　274
8.13.5 　屏幕朝向变更的媒体查询　　275
8.14 　扩展iOS开发框架　　276
8.15 　用于编写代码的资源　　278
8.16 　小结　　278
第9章 　原生iOS设计实现　　279
9.1 　iPhone页面模型的实现　　279
9.2 　实现类原生的页面结构　　279
9.3 　iPhone原生界面模拟　　280
9.3.1 　顶部栏部分　　280
9.3.2 　页面标题元素　　282
9.3.3 　面包屑导航栏　　284
9.3.4 　宣传内容区　　285
9.3.5 　菜单区　　288
9.3.6 　页脚部分　　290
9.4 　小结　　292
第10章 　优化iOS Web应用　　293
10.1 　iPad和iPhone兼容性　　293
10.2 　性能优化　　293
10.2.1 　代码优化　　294
10.2.2 　图片优化　　297
10.2.3 　应用压缩　　300
10.2.4 　可用性优化　　301
10.3 　离线可用的Web应用　　305
10.4 　移动SEO　　308
10.4.1 　搜索引擎的结构　　309
10.4.2 　面向搜索引擎的设计　　309
10.4.3 　可用于优化和SEO的工具　　315
10.5 　小结　　316
第11章 　测试iOS Web应用　　317
11.1 　Web开发生命周期　　317
11.2 　Web应用测试　　318
11.3 　敏捷测试　　318
11.4 　热图测试　　320
11.5 　组织一次测试　　321
11.5.1 　创建用例　　321
11.5.2 　创建物料　　324
11.6 　执行测试　　325
11.6.1 　纸面原型图　　326
11.6.2 　电子原型　　328
11.7 　评估测试　　328
11.8 　评估的变量和反馈　　329
11.8.1 　点触次数　　330
11.8.2 　错误次数　　330
11.8.3 　预计完成时间　　331
11.8.4 　收集反馈　　332
11.8.5 　评估技术　　333
11.9 　测试所需资源　　335
11.10 　小结　　335
第12章 　深入挖掘iOS Web应用市场　　337
12.1 　利用你的移动策略　　337
12.2 　如何推广你的Web应用　　337
12.2.1 　利用Beta测试邀请测试者　　338
12.2.2 　利用新闻发布　　339
12.2.3 　创建Web应用的宣传网站　　339
12.2.4 　使用邮件营销　　340
12.2.5 　创建YouTube视频教程　　341
12.2.6 　提交到苹果Web应用门户　　341
12.2.7 　提交到其他Web应用门户网站　　342
12.2.8 　利用社交网络的传播力　　344
12.3 　让Web应用创造收益　　345
12.4 　Web应用市场上的资源　　346
12.5 　小结　　347
第13章 　从移动互联网展望普适计算　　348
13.1 　移动设备、无线网络及蜂窝通信的爆发　　348
13.2 　下一代触屏和多点触控技术的用户体验　　349
13.3 　新技术、新用途以及新机遇　　349
13.4 　多点触控屏幕革命会为下一代计算机带来怎样的改变　　350
13.4.1 　从家用到普适计算与环境智能　　351
13.4.2 　通信与普适计算资源　　353
13.5 　小结　　354
索引　　355

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS Web应用开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>可測試的JavaScript
chapter 01 可測試的JavaScript程式（Testable JavaScript）
chapter 02 複雜度（Complexity）
chapter 03 事件導向架構（Event-Based Architectures）
chapter 04 單元測試（Unit Tests）
chapter 05 程式碼涵蓋率（Code Coverage）
chapter 06 整合（Integration）、效能（Performance）以及負載（Load）測試
chapter 07 除錯（Debugging）
chapter 08 自動化（Automation）
索引
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>可測試的JavaScript
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>移动网页设计与开发
目　录
第1章　网络平台　1
1．1　对术语的简短说明　2
1．2　你是谁，你需要知道些什么　2
1．3　了解什么是HTML5　3
1．4　真正的HTML5　3
1．5　CSS3及其他　7
1．6　浏览器支持　9
1．7　测试，再测试，进行更多的测试　9
总结　10
第2章　结构和语义　11
2．1　HTML5的新元素　12
2．2　网页易读性倡议的无障碍的富因特网应用程序组件(WAI-ARIA)　16
2．3　语义标记的重要性　18
2．4　微格式　19
2．5　RDFa　20
2．6　微数据　21
2．7　数据属性　25
2．8　Web组件：标记的未来？　27
总结　28
第3章　设置响应性CSS　29
3．1　媒体查询　30
3．2　JavaScript中的媒体查询　42
3．3　自适应网页设计响应式网页　43
3．4　窗口关联的长度单位　46
3．5　响应式设计和被替换的对象　49
总结　53
第4章　CSS布局的新方法　54
4．1　多栏结构　55
4．2　弹性布局盒(Flexbox)　58
4．3　网格布局　65
4．4　更远的未来　73
总结　73
第5章　现代JavaScript　74
5．1　JavaScript的新功能　75
5．2　JavaScript库　82
5．3　polyfill和shim　89
5．4　测试和调试　90
总结　90
第6章　Device(设备)API　91
6．1　地理定位(Geolocation)　92
6．2　方向(Orientation)　94
6．3　全屏(Fullscreen)　95
6．4　振动(Vibration)　97
6．5　电池状态(Battery Status)　98
6．6　网络信息　99
6．7　摄像头和麦克风　100
6．8　网络存储(Web Storage)　101
6．9　拖放(Drag和Drop)　103
6．10　文件交互　106
6．11　Mozilla公司的火狐OS系统和WebAPI　107
6．12　PhoneGap和本地封装器　108
总结　108
第7章　图像和图形　109
7．1　矢量和位图比较　110
7．2　可缩放矢量图形　110
7．3　canvas元素　119
7．4　选择SVG或Canvas的情况　123
总结　124
第8章　新表单　125
8．1　新输入类型　126
8．2　新属性　127
8．3　数据单(datalists)　130
8．4　屏幕控件与部件　131
8．5　将信息显示给用户　135
8．6　客户端表单验证　139
8．7　客户端验证API(ConstraintValidation API)　141
8．8　表单和CSS　144
总结　145
第9章　多媒体　146
9．1　媒体元素　147
9．2　媒体框架结构　153
9．3　Media API(媒体API)　154
9．4　媒体事件　158
9．5　高级媒体交互　159
总结　160
第10章　网络应用程序　161
10．1　网络应用程序　162
10．2　混合应用程序　165
10．3　电视应用程序　168
10．4　Webinos　169
10．5　应用程序缓存　169
总结　172
第11章　前景　174
11．1　Web组件　175
总结　182
11．2　CSS的前景　183
总结　191
附录A　192
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>移动网页设计与开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript数据可视化编程
前言
第1章图像数据
第2章和图表进行交互
第3章在页面中整合图表
第4章创建特殊图表
第5章时间轴显示
第6章地理位置信息的可视化
第7章用D3.js自定义可视化数据视图
第8章在浏览器中管理数据
第9章创建数据驱动的网络应用：第1部分
第10章创建数据驱动的网络应用：第2部分
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript数据可视化编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript经典实例（第2版）
JavaScript的世界
第一部分 经典JavaScript
第1章 JavaScript不只是简单的构件块
1.1 JavaScript对象、基本类型和字面值之间的区别
1.2 从字符串提取一个列表
1.3 检查一个存在的、非空的字符串
1.4 插入特殊字符
1.5 使用新字符串替换模式
1.6 找到并突出显示一个模式的所有实例
1.7 使用捕获圆括号交换一个字符串中的单词
1.8 使用命名实体来替代HTML标签
1.9 把一个ISO 8601格式的日期转换为Date对象可接受的一种格式
1.10 使用带有定时器的函数闭包
1.11 记录消耗时间
1.12 把十进制数转换为一个十六进制值
1.13 把表中一列的所有数字加和
1.14 在角度和弧度之间转换
1.15 找到页面元素可容纳的一个圆的半径和圆心
1.16 计算圆弧的长度
1.17 使用ES6字符串新增方法而不会丢弃用户
第2章 JavaScript数组
2.1 在数组中搜索
2.2 用concat()和apply()将一个两维数组扁平化
2.3 删除或替换数组元素
2.4 提取一个数组的一部分
2.5 对每个数组元素应用一个函数
2.6 使用forEach()and call()遍历querySelectorAll()的结果
2.7 对数组中的每个元素执行一个函数并返回一个新数组
2.8 创建一个过滤后的数组
2.9 验证数组内容
2.10 使用一个关联数组来存储表单元素名和值
2.11 使用解构赋值简化代码
第3章 函数：JavaScript的构建块
3.1 放置函数并提升
3.2 把一个函数当做参数传递给另一个函数
3.3 实现递归算法
3.4 使用一个定时器和回调防止代码阻塞
3.5 创建能够记住其状态的函数
3.6 把函数参数转换到一个数组中
3.7 使用一个局部应用减少冗余性
3.8 使用缓存计算(Memoization)来提高应用程序性能
3.9 使用匿名函数包装全局变量
3.10 提供一个默认的参数
第4章 可扩展JavaScript对象
4.1 保持对象成员私有
4.2 用原型扩展对象
4.3 继承一个对象的功能
4.4 通过定义一个新的属性来扩展对象
4.5 阻止对象可扩展性
4.6 阻止对对象的任何修改
……
第5章 JavaScript和直接访问用户界面
第6章 基本测试和可访问性
第7章 创建和使用JavaScript库
第8章 简化的客户端-服务器通信和数据
第9章 创建富媒体和交互Web效果
第二部分 JavaScript全面兴起
第10章 新的ECMAScript标准对象
第11章 Node：服务器上的JavaScript
第12章 模块化和管理JavaScript
第13章 API的乐趣
第14章 JavaScript框架
第15章 高级客户端-服务器通信和流
第16章 数据可视化和客户端/服务器图形
第17章 数据和持久性
第18章 JavaScript迈上移动之路
附录A 认识jsBin和jsFiddle
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript经典实例（第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript for PHP Developers(中文版)
致谢
前言
第1章 简介
1．1 本书范围
1．2 语言
1. 3 学习环境
1．4 较长的例子
1．5 开始学习
第2章 JavaScript语法
2．1 变量
2．2 值
2. 3 数组
2. 4 条件
2．5 while和for循环
2．6 for．in循环
2．7 其他操作符
第3章 函数
3．1 默认参数
3. 2 任意多个参数
3. 3 arguments．1ength技巧
3．4 返回值
3．5 函数是对象
3．6 一种不同的语法
3．7 作用域
3．8 提升
3．9 闭包
3．10 作用域链
3．11 立即函数
3．12 传递和返回函数
第4章 面向对象编程
4．1 构造器和类
4．2 原型
4. 3 对象直接量
4．4 奇特的数组
4．5 自身属性
4．6 继承
第5章 内建API
5．1 全局对象
5．2 全局属性
5. 3 全局函数
5．4 内建构造器
5．5 构造器概述
第6章 ECMAScript 5
6．1 严格模式
6. 2 属性特性
6. 3 新的对象API
6. 4 数组的添加
6．5 字符串截断
6．6 Date中的新变化
6．7 Function．prototype．bind()
6．8 JSUN
6．9 Shims
第7章 JavaScript模式
7．1 私有属性
7．2 揭示模式
7. 3 常量
7．4 命名空间
7．5 模块
7．6 CommonJS模块
7．7 AMD
7．8 设计模式
7．9 文档和测试
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript for PHP Developers(中文版)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>PHP、MySQL与JavaScript学习手册(第4版)
前言
第1章动态Web内容介绍
HTTP和HTML：Berners—Lee的基础
Request／Response的处理流程
PHP、MySQL、JavaScript、CSS和HTML5所带来的便利
使用PHP
使用MySQL
使用Javascript
使用CSS
于是出现了HTML5
ApacheWeb服务器
关于开源
将它们结合在一起使用
思考题
第2章安装开发服务器
什么是WAMP、MAMP和LAMP？
在Windows下安装XAMPP
测试安装
在MacOSX上安装XAMPP
访问文档根目录
在Linux上安装LAMP
远程操作
登录
使用FTP
使用程序编辑器
使用IDE
思考题
第3章关于PHP
在HTML代码中嵌入PHP
本书的实例
PHP的结构
使用注释
基本语法
变量
运算符
变量赋值
多行命令
变量分类
常量
预定义常量
echo和print命令的区别
函数
变量的作用域
思考题
第4章PHP中的表达式和控制流
表达式
TRUE还是FALSE？
直接量和变量
运算符
运算符的优先级
结合性
关系运算符
条件语句
if语句
else语句
elseif语句
switch语句
？运算符
循环
while循环
do…while循环
for循环
跳出循环
continue
continue语句
隐式和显式转换
PHP动态链接
运行中的动态链接
思考题
第5章PHP函数与对象
PHP函数
定义函数
返回值
返回一个数组
不由引用传递参数
返回全局变量
变量作用域要点重述
包含和请求文件
include语句
使用include_once
使用require和requirc_once
PHP版本兼容
PHP对象
术语
声明一个类
创建对象
访问对象
对象克隆
构造方法
PHP5析构方法
创建方法
PHP5中的静态方法
声明属性
声明常量
PHP5中属性和方法的作用域
静态属性和方法
继承
思考题
第6章PHP的数组
数组基础
带数值下标的数组
关联数组
使用数组关键字赋值
foreach…as循环
多维数组
使用数组函数
is_array
count
son
shufne
explode
extract
compact
reset
end
思考题
第7章实用PHP技术
使用printf
精确度设置
字符串填充
使用sprintf
日期与时间函数
日期常量
使用checkdate
文件处理
检测文件是否存在
创建文件
从文件中读取数据
复制文件
移动文件
删除文件
更新文件
在多用户访问时为文件加锁
读取整个文件
上传文件
系统调用
XHTML或HTML5？
思考题
……
第8章MySQL入门
第9章掌握MySQL
第10章使用PHP访问MySQL
第11章表单处理
第12章Cookies、会话和身份验证
第13章探究JavaScript
第14章JavaScript中的表达式和控制流
第15章JavaScript函数、对象和数组
第16章JavaScript和PHP验证与错误处理
第17章使用Ajax
第18章CSS简介
第19章支持CSS3的高级CSS
第20章由JavaScript访问CSS
第21章jQuery概述
第22章HTML5概述
第23章HTML5画布
第24章HTML5音频和视频
第25章其他HTML5属性
第26章综合应用
附录A思考题答案
附录B在线资源
附录CMySQL函数
附录DjQuery选择器、对象和方法
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>PHP、MySQL与JavaScript学习手册(第4版)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript应用开发实践指南
本书赞誉
译者序
前言
第1章 渐进增强模型 / 1
1.1 渐进增强式网页开发模型的定义 / 1
1.1.1 渐进增强式开发模型的历史 / 2
1.1.2 渐进增强式开发模型的目标 / 3
1.1.3 易访问性 / 4
1.1.4 代码可读性 / 4
1.1.5 渐进增强与平稳退化 / 4
1.2 结构层 / 5
1.3 表现层 / 9
1.3.1 内联css / 9
1.3.2 链接外部样式表 / 10
1.4 行为层 / 11
1.4.1 内联javascript代码 / 12
1.4.2 嵌入式javascript代码 / 13
1.4.3 外联式的低调javascript代码 / 15
1.5 渐进增强式开发模型的好处 / 16
.1.5.1 性能 / 17
1.5.2 适应新趋势 / 17
1.5.3 触摸界面 / 19
1.6 渐进增强模型结语 / 20
1.7 总结 / 20
1.8 习题 / 20
第2章 javascript语言在浏览器中的运用 / 21
2.1 javascript风云录 / 22
2.1.1 源起 / 22
2.1.2 渐进增强模型 / 24
2.1.3 行为层 / 25
2.1.4 javascript的未来 / 26
2.2 浏览器与javascript代码的交互 / 26
2.2.1 http请求 / 27
2.2.2 javascript引擎与渲染引擎 / 31
2.3 javascript语言能做什么 / 32
2.3.1 修改html文档 / 32
2.3.2 与服务器通信 / 33
2.3.3 存储数据 / 34
2.4 javascript的正确用法 / 34
2.4.1 改善用户体验 / 35
2.4.2 编写可靠的javascript代码 / 35
2.4.3 创建备用方案 / 37
2.5 javascript辅助开发工具 / 38
2.5.1 语言内置的工具 / 39
2.5.2 浏览器中的工具 / 40
2.6 总结 / 40
2.7 习题 / 41
第3章 javascript术语解析 / 42
3.1 基本术语 / 42
3.1.1 文档对象模型（dom） / 42
3.1.2 父节点 / 43
3.1.3 子节点 / 43
3.1.4 兄弟节点 / 44
3.1.5 变量 / 44
3.1.6 字符串 / 46
3.1.7 注释 / 46
3.1.8 操作符 / 47
3.1.9 use strict指令 / 48
3.2 数据存储方式 / 48
3.2.1 缓存 / 48
3.2.2 数组 / 49
3.2.3 cookies / 49
3.2.4 javascript对象表示法（json） / 50
3.2.5 对象 / 50
3.3 创建交互层 / 51
3.3.1 循环 / 51
3.3.2 条件语句 / 52
3.3.3 switch语句 / 53
3.3.4 函数 / 53
3.3.5 匿名函数 / 54
3.3.6 回调函数 / 56
3.3.7 方法 / 56
3.3.8 事件 / 57
3.3.9 ajax / 58
3.4 总结 / 58
3.5 习题 / 59
第4章 操作文档对象模型 / 60
4.1 文档对象模型是什么 / 60
4.2 dom结构树 / 61
4.2.1 元素节点 / 62
4.2.2 文本节点 / 63
4.2.3 属性节点 / 64
4.3 处理元素节点 / 66
4.3.1 根据id定位元素 / 66
4.3.2 根据标签名称定位元素 / 67
4.3.3 根据class属性定位元素 / 70
4.3.4 在javascript中使用css选择器来定位节点 / 71
4.4 处理属性节点 / 73
4.4.1 获取属性 / 74
4.4.2 设置属性 / 75
4.4.3 移除属性 / 76
4.5 处理文本节点并修改其内容 / 76
4.6 遍历dom / 77
4.6.1 访问首尾两个子节点 / 79
4.6.2 在dom中动态地添加和移除节点 / 80
4.6.3 向dom中新增元素 / 81
4.6.4 从dom中移除元素 / 82
4.7 总结 / 82
4.8 习题 / 83
第5章 javascript数据存储 / 84
5.1 变量 / 84
5.1.1 字符串 / 85
5.1.2 数值 / 86
5.1.3 boolean / 87
5.1.4 与变量相关的性能问题 / 87
5.2 数组 / 88
5.2.1 基本数组 / 88
5.2.2 关联数组 / 90
5.2.3 多维数组 / 90
5.2.4 向数组中新增数据 / 91
5.2.5 数组对象各方法的使用 / 92
5.3 join方法 / 92
5.4 slice方法 / 93
5.5 shift与unshift方法 / 94
5.6 pop方法 / 95
5.7 concat方法 / 95
5.8 sort方法 / 96
5.9 对象 / 96
5.10 json / 98
5.10.1 使用json格式的好处 / 99
5.10.2 调用api / 99
5.11 html5标准中的网络数据存储方式 / 100
5.12 setitem方法 / 101
5.13 getitem方法 / 102
5.14 removeitem方法 / 102
5.14.1 以json格式存放大量数据 / 103
5.14.2 编写健壮的网络存储代码 / 104
5.15 总结 / 104
5.16 习题 / 105
第6章 变量、函数及循环 / 106
6.1 定义变量 / 106
6.1.1 将变量集中到一起 / 107
6.1.2 保留字 / 107
6.2 函数 / 109
6.2.1 普通函数 / 109
6.2.2 匿名函数 / 110
6.3 作用域 / 111
6.3.1 回调函数 / 112
6.3.2 返回数据 / 113
6.3.3 将函数作为方法使用 / 115
6.4 循环 / 116
6.5 条件语句 / 119
6.5.1 if语句 / 120
6.5.2 if/else语句 / 121
6.5.3 switch语句 / 121
6.5.4 if与switch语句的对比 / 122
6.6 综合运用本章所学内容 / 123
6.7 总结 / 125
6.8 习题 / 125
第7章 以事件处理实现用户交互 / 126
7.1 设置事件处理程序 / 127
7.1.1 事件处理器 / 128
7.1.2 事件监听器 / 129
7.1.3 事件绑定 / 131
7.1.4 解除事件绑定 / 133
7.2 鼠标与键盘事件 / 133
7.2.1 click事件 / 136
7.2.2 focus与blur事件 / 138
7.2.3 易访问性 / 139
7.2.4 change事件 / 139
7.2.5 mouseover与mouseout事件（处理鼠标悬停） / 140
7.2.6 submit事件 / 141
7.2.7 阻止浏览器的默认行为 / 143
7.2.8 keydown、keypress与keyup事件 / 144
7.2.9 本节代码汇总 / 144
7.3 触摸及方向变换事件 / 147
7.3.1 touchstart与touchend事件 / 148
7.3.2 touchmove事件 / 149
7.3.3 orientationchange事件 / 150
7.3.4 支持触摸事件的设备 / 151
7.4 触摸事件相关代码汇总 / 151
7.5 总结 / 152
7.6 习题 / 153
第8章 通过ajax与服务器通信 / 154
8.1 ajax的历史 / 155
8.1.1 服务器通信 / 156
8.1.2 xmlhttprequest对象 / 157
8.2 创建ajax调用 / 159
8.2.1 向服务器发送请求 / 160
8.2.2 接收服务器传回的数据 / 163
8.2.3 反复执行ajax调用 / 169
8.3 ajax数据格式 / 170
8.3.1 xml / 170
8.3.2 html / 172
8.3.3 json / 173
8.4 ajax的易访问性 / 174
8.5 ajax常见误区 / 176
8.6 本章代码汇总 / 178
8.7 ajax的未来 / 182
8.8 总结 / 183
8.9 习题 / 184
第9章 代码组织方式 / 185
9.1 通用代码风格规范 / 186
9.1.1 作用域 / 187
9.1.2 在遇到错误时尽快终止 / 189
9.1.3 用户体验 / 191
9.2 代码设计 / 191
9.2.1 文件与目录结构 / 192
9.2.2 文档内的脚本 / 193
9.2.3 变量声明 / 194
9.2.4 变量与函数的命名 / 196
9.2.5 注释 / 196
9.2.6 缩进 / 198
9.2.7 空格 / 199
9.2.8 语句内间隔 / 200
9.2.9 断行 / 201
9.2.10 数学运算与操作符 / 202
9.2.11 eval()的用法 / 203
9.2.12 不宜制定过于死板的代码风格 / 205
9.3 代码结构 / 206
9.3.1 函数 / 206
9.3.2 匿名函数 / 207
9.3.3 以变量形式出现的函数 / 208
9.3.4 以方法形式出现的函数 / 209
9.3.5 javascript开发模式 / 210
9.4 总结 / 214
9.5 习题 / 215
第10章 用程序库更便捷地编写javascript代码 / 216
10.1 javascript程序库基础 / 217
10.1.1 程序库的学习过程 / 218
10.1.2 语法 / 219
10.1.3 专注于目标 / 219
10.1.4 创造捷径 / 220
10.1.5 解决浏览器兼容性问题 / 221
10.1.6 流行的程序库 / 222
10.2 jquery基础知识 / 227
10.2.1 document.ready / 229
10.2.2 选择器 / 229
10.2.3 遍历dom / 231
10.2.4 添加样式信息 / 232
10.2.5 事件绑定 / 233
10.2.6 动画 / 234
10.3 jquery中的非基础知识 / 234
10.3.1 使用jquery库执行ajax调用 / 235
10.3.2 用jquery遍历数据 / 237
10.3.3 函数链 / 238
10.4 以插件扩展程序库 / 240
10.5 使用程序库的好处 / 242
10.5.1 流行度与社区支持度 / 242
10.5.2 高效代码 / 244
10.6 使用程序库的缺点 / 245
10.6.1 开销 / 245
10.6.2 性能 / 245
10.6.3 对程序库的过分依赖及其寿命问题 / 246
10.7 微型程序库的使用 / 246
10.7.1 微型程序库的优点 / 247
10.7.2 微型程序库的缺点 / 248
10.8 总结 / 249
10.9 习题 / 249
第11章 html5 javascript api / 250
11.1 html5是什么 / 251
11.2 新标记（新html元素） / 251
11.2.1 创建更好的语义 / 252
11.2.2 构建更易访问的内容 / 252
11.3 javascript api / 255
11.3.1 navigator对象 / 255
11.3.2 地理位置api / 256
11.3.3 音频与视频 / 258
11.3.4 history api / 261
11.3.5 工作线程 / 266
11.4 device api / 272
11.4.1 电池状态api / 273
11.4.2 震动api / 275
11.4.3 网络信息api / 276
11.5 通过功能检测技术来尝试新的api / 279
11.6 总结 / 280
11.7 习题 / 280
第12章 javascript深入研究指要 / 281
12.1 对关键知识点的简要回顾 / 282
12.1.1 渐进增强模型 / 282
12.1.2 操作dom / 283
12.1.3 数据存储 / 285
12.1.4 服务器通信 / 287
12.2 适合网站设计师的javascript研究方向 / 288
12.2.1 高级界面设计 / 288
12.2.2 用javascript代码操控css渐变效果 / 293
12.2.3 与桌面操作系统交互 / 297
12.3 适合网站开发者的javascript研究方向 / 302
12.3.1 javascript模板 / 302
12.3.2 通过node.js库以javascript语言实现服务器程序 / 308
12.4 总结 / 311
12.5 习题 / 311
参考答案 / 312
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript应用开发实践指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript 入门与提高
前言
第1章 Internet及网络开发入门
1．1什么是Internet
1．2 JavaScript简介
1．3其他常用Web开发语言简介…
1．3．1 VBScript简介
1．3．2 Java简介
1．3．3 CGI简介
第2章初识HTML
2．1 HTML基本标注
2．1．1版面设计标注
2．1．2具有字符控制功能的标注
2．1．3颜色属性
2．1．4在页面中加入注释
2．2 HTML的图像、表格和链接
2．2．1插入图像
2．2．2引用表格
2．2．3列表标注
2．2．4使用链接
2．2．5使用编程标注
2．3 HTML中的表单
2．4在表单中使用界面对象
2．5在HTML中使用JavaScript
第3章 JavaScript的开发环境
3．1 JavaScript开发环境总览
3．2利用Microsoft FrontPage开发
3．3利用ActiveX Control Pad开发
3．4利用JavaScript Editor开发
第4章JavaScript的变量、表达式和操作符
4．1 JavaScript的类型和变量
4．2 JavaScript的常量
4．3 JavaScript的表达式
4．4 Javascript的操作符
第5章JavaScript的基本语法
5．1 JavaScript语句总览
5．2变量声明和赋值语句
5．3函数定义语句
5．4条件和分支语句
5．5循环语句
5．6对象操作语句
5．7注释语句
第6章JavaScript的对象模型
6．1 JavaScript中对象的概念
6．2对象的属性和方法
6．3创建新对象
第7章内置对象和函数
7．1基本内置对象和函数总览
7．2几个基本的内置对象
7．1．1 String对象
7．2．2 Math对象
7．2．3 Date对象
7．2．4 Array对象
7．2．5 Event对象
7．2．6 RegExp对象
7．3 JavaScript的内置函数
7．4 JScript中的内置对象和函数
第8章浏览器对象详解
8．1使用浏览器对象
8．2使用Netscape Navigator的对象
8．2．1浏览器对象Navigator
8．2．2浏览器对象Windows
8．2．3浏览器对象document
8．2．4其他浏揽器对象
8．3使用 Internet Explorer的对象
8．4 HTML网页的外观设计
第9章在JavaScrpt中处理事件
9．1事件处理的基本概念
9．2事件处理句柄总览
9．3常用事件及处理
9．3．1浏览器事件
9．3．2鼠标事件
9．3．3键盘事件
9．3．4其他事件
9．4高级事件处理方法
第10章JavaScrpt高级使用技巧
10．1使用帧对象
10．2使用Cookie和URL存放用户信息
10．3使用图形
10．4使用＿音
第11章使用JavaScrpt创作
11．1程序示例：控制浏览器的外观和属性
11．2程序示例：网页管理器
11．3程序示例：桌面日历
11．4 JavaScript程序排错
第12章与其他Web工具协同工作
12．1 JavaScript的可扩展性
12．2在Javascript中使用插件
12．3在JavaScript中使用Java
12．4 JavaScript的局限性以及未来展望
附录
附录1 JavaScript保留字一览表
附录2 JavaScript常用对象一览表
附录3 JavaScript颜色对照表
附录4 Internet上有关JavaScript的网站、讨论组以及其他
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript 入门与提高
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript动态网页设计
第一章 JAVASCRIPT入门
第二章 窗口操作
第三章 框架控制
第四章 表单和验证
第五章 使用数组
第六章 浏览器太多了吗？不是
第七章 动态图像
第八章 用COOKIE定制站点
第九章 动态HTML
第十章 交互的DHTML技术
第十一章 高级应用技术

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript动态网页设计
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript RIA开发实战
第I部分 最佳实践
第1章 构建牢固的基础 3
1.1 最佳实践概述 3
1.1.1 确认最佳实践的最佳性的人员 3
1.1.2 可以从最佳实践中受益的人群 4
1.2 常规最佳实践 5
1.2.1 定义项目目标 5
1.2.2 掌握基本规则 6
1.3 标记语言最佳实践：语义HTML 12
1.3.1 学习HTML标签 13
1.3.2 从文档类型定义开始 14
1.3.3 XHTML扩展HTML的方式 16
1.3.4 实际使用最佳实践 17
1.3.5 Web内容的可访问性指导原则 25
1.4 格式化最佳实践：CSS 27
1.4.1 像素完美再现设计的相关内容 27
1.4.2 W3C CSS标准 28
1.4.3 样式表的指导原则 28
1.4.4 样式的可访问性指导原则 35
1.4.5 注释块 37
.1.4.6 浏览器迂回方法 38
1.4.7 本地化考虑事项 38
1.5 结构化文件夹、文件和有价值资源 39
1.5.1 易于阅读的URL 39
1.5.2 文件和文件夹命名 39
1.5.3 文件编码 40
1.5.4 组织有价值资源 40
1.6 设置开发环境 41
1.6.1 编写文件：集成开发环境 41
1.6.2 存储文件：版本控制系统 42
1.6.3 测试页面：浏览器和开发工具 43
1.7 本章小结 44
第2章 面向富互联网应用程序的JavaScript 45
2.1 编码风格指导原则 45
2.1.1 使用一致的格式 45
2.1.2 使用大括号和圆括号 46
2.1.3 使用字母大小写来增加含义 46
2.1.4 使用描述性的变量和函数名 47
2.1.5 维护简短的函数块 48
2.1.6 使用ScriptDoc将注释变为评注 49
2.1.7 使用TODO标记剩余的工作 50
2.2 专业水准的JavaScript编程 50
2.2.1 避免解决不存在的问题 50
2.2.2 使用文档对象模型 51
2.2.3 动态更改CSS属性 52
2.2.4 操作元素及其内容 52
2.2.5 不要将JavaScript和HTML混合 53
2.2.6 将样式与代码分离 53
2.2.7 链接函数调用 54
2.2.8 编写健壮的代码 54
2.2.9 记住对代码进行本地化 56
2.3 面向对象的JavaScript 56
2.3.1 对象、类和构造函数 56
2.3.2 继承：从现有的类创建新类 60
2.3.3 this关键字 62
2.3.4 访问属性和方法 64
2.3.5 对象字面值和JavaScript对象标记 65
2.3.6 创建名称空间和层次结构 67
2.4 库和架构 68
2.4.1 选择库 68
2.4.2 构建JavaScript库 69
2.5 构建RIA 83
2.5.1 构造应用程序 83
2.5.2 管理两组HTML 86
2.5.3 使用设计模式 86
2.6 测试和测试驱动的开发 92
2.7 使用第三方脚本 94
2.8 本章小结 95
第II部分 性能
第3章 理解Web浏览器 99
3.1 引擎：浏览器的动力室 99
3.1.1 呈现引擎和JavaScript引擎 99
3.1.2 JavaScript引擎的性能基准测试 100
3.2 Web页面请求剖析 103
3.2.1 HTTP：Web背后的通信标准 103
3.2.2 HTTP状态码 108
3.2.3 消息的传输机制 110
3.2.4 HTML页面的加载顺序 112
3.3 页面性能 113
3.3.1 查看页面的性能 113
3.3.2 找出性能的潜在瓶颈 114
3.4 本章小结 116
第4章 性能调整 117
4.1 性能是否确实是问题 117
4.2 对Web服务器进行调整以获得出色性能 118
4.2.1 对外部资源使用单独域名 119
4.2.2 使用内容分发网络 119
4.2.3 以数据块方式将HTML文件发送给浏览器 120
4.2.4 定制HTTP头部以驱动浏览器缓存 121
4.2.5 压缩服务器的输出 123
4.3 对HTML页面进行调整以获得出色性能 124
4.3.1 利用HTML Tidy程序缩小HTML文件的大小 124
4.3.2 在HTML代码的结束处引用JavaScript文件 125
4.3.3 减少HTTP请求的数量 126
4.3.4 不要加载来自主页的每个资源 127
4.3.5 减少域名查找次数 127
4.3.6 跨域对组件进行拆分 128
4.3.7 避免链接到重定向 129
4.3.8 减少HTML元素的数量 129
4.3.9 不要链接至不存在的文件 130
4.3.10 缩小HTTP cookie的大小 130
4.4 对样式表进行调整以获得出色性能 131
4.4.1 使用CSSTidy工具压缩CSS文件 131
4.4.2 不要使用@import命令 131
4.4.3 提高表布局的效率 131
4.4.4 在IE中避免使用CSS过滤器和表达式 132
4.4.5 使用简码值 132
4.4.6 使用CSS Sprite技术 136
4.4.7 避免低效的CSS选择器 138
4.5 对图像进行调整以获得出色性能 139
4.5.1 理解图像格式 140
4.5.2 优化PNG图像 142
4.5.3 不要忘记favicon 142
4.6 对JavaScript代码进行调整以获得出色性能 142
4.6.1 使用Dojo ShrinkSafe压缩JavaScript文件 143
4.6.2 通过内容分发网络访问JavaScript库 143
4.6.3 时机就是一切 144
4.6.4 提升核心的JavaScript性能 145
4.6.5 提高Ajax性能 148
4.6.6 提高DOM性能 151
4.7 本章小结 156
第5章 欺骗性行为：可感知的响应性 157
5.1 提供快速的视觉反馈 157
5.1.1 选择正确的时机 157
5.1.2 对超链接使用CSS伪类 158
5.1.3 让用户知道表单正在提交 159
5.1.4 更改鼠标指针 159
5.1.5 使用Web 2.0样式动画指示器 160
5.1.6 显示进度条 160
5.2 处理运行时间长的脚本 161
5.2.1 将运行时间长的脚本分割为代码块 162
5.2.2 使用定时器多次运行代码块 164
5.3 预测网站访问者的需求 165
5.3.1 预先加载内容 165
5.3.2 高效加载导航层次 166
5.3.3 提前捕捉鼠标单击事件 167
5.4 本章小结 168
第III部分 表现
第6章 美丽的印刷字体 171
6.1 面临的挑战 171
6.2 字体的基本结构 172
6.3 给文本使用静态图像 172
6.4 为文本动态生成图像 174
6.4.1 使用CSS直接嵌入字体文件 174
6.4.2 让服务器生成文本图像 176
6.4.3 使用Flash生成使用自定义字体的文本 183
6.4.4 使用矢量图生成文本 183
6.5 使用可重用的自定义字体组件 184
6.5.1 Text2PNG 184
6.5.2 Scalable Inman Flash Replacement组件 187
6.5.3 Facelift Image Replacement组件 190
6.5.4 Typeface.js组件 193
6.6 本章小结 194
第7章 多媒体回放 195
7.1 处理可访问性 195
7.2 使用可重用的音频回放组件 196
7.2.1 SoundManager组件 196
7.2.2 在没有Flash的浏览器中播放音频文件 199
7.3 使用可重用的视频回放组件 200
7.3.1 YouTube Chromeless Player 203
7.3.2 JW FLV Player 208
7.4 展望：HTML 5中的音频和视频 211
7.4.1 [audio]和[video]标签 211
7.4.2 JavaScript API 212
7.4.3 当前采用情况 213
7.5 本章小结 213
第8章 表单控件 215
8.1 自定义现有表单控件 215
8.1.1 按钮 215
8.1.2 文本字段 219
8.1.3 文件上传控件 220
8.2 添加新型表单控件 223
8.2.1 用于日期选择的日历构件 224
8.2.2 滑块控件 241
8.3 使用可重用的表单组件 253
8.3.1 SWFUpload：包含进度条的多文件上传 254
8.3.2 TinyMCE:富文本编辑 258
8.4 验证表单 260
8.5 本章小结 261
第9章 脱机存储 263
9.1 使用cookie保存数据 263
9.1.1 创建cookie 263
9.1.2 cookie的不足之处 266
9.2 使用Internet Explorer的数据存储 266
9.3 数据存储API简介 268
9.3.1 本地存储API 269
9.3.2 Mozilla的全局存储API 270
9.3.3 客户端数据库存储API 271
9.4 使用Flash共享对象保存数据 275
9.5 创建跨浏览器的本地数据存储API 277
9.6 使用可重用的脱机存储组件 282
9.7 本章小结 282
第10章 二进制Ajax 283
10.1 纯文本文件与二进制文件 283
10.2 使用Ajax读取二进制文件 283
10.3 从照片文件中提取图像数据 290
10.3.1 理解EXIF格式 290
10.3.2 使用JavaScript读取EXIF数据 291
10.3.3 显示文件的EXIF数据 299
10.4 本章小结 303
第11章 在浏览器中绘制 305
11.1 创建可缩放矢量图 305
11.1.1 创建SVG图像文件 306
11.1.2 在HTML中指定SVG 307
11.1.3 通过JavaScript指定SVG 308
11.2 使用矢量标记语言绘制 309
11.3 使用可重用绘图库构建动态图形 310
11.4 使用HTML 5 [canvas]标签 317
11.5 本章小结 319
第12章 富互联网应用程序的可访问性 321
12.1 迎合需求的用户 321
12.1.1 使用辅助技术的用户 321
12.1.2 移动设备用户 321
12.1.3 不使用鼠标的用户 322
12.1.4 面向所有用户的可访问性 322
12.2 恰当地使用前进以及后退按钮导航 323
12.3 设备无关的JavaScript 327
12.3.1 设备无关事件 327
12.3.2 设备无关事件委托 329
12.3.3 已更新内容提示以及焦点 330
12.4 Web页面可访问性倡议——无障碍富互联网应用程序 333
12.4.1 角色 333
12.4.2 状态以及特性 335
12.4.3 焦点管理 336
12.4.4 使用键盘与ARIA构件交互 336
12.4.5 WAI-ARIA示例 337
12.4.6 验证 340
12.4.7 测试 341
12.5 本章小结 342
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript RIA开发实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript学习指南 第3版 (Learning JavaScript, 3rd Edition)
目录
第1章　第一个应用　1
1.1　从哪里开始　2
1.2　实用的工具　2
1.2.1　语法高亮　3
1.2.2　括号匹配　3
1.2.3　代码折叠　4
1.2.4　自动补全　4
1.3　关注注释　4
1.4　从这里开始　5
1.5　JavaScript控制台　7
1.6　jQuery　8
1.7　绘制图元　8
1.8　自动执行重复任务　10
1.9　处理用户输入　11
1.10　Hello, World　13
第2章　JavaScript开发中的常用工具　14
2.1　在当下编写ES6代码　14
2.2　ES6的新特性　15
2.2.1　安装Git　16
2.2.2　终端　16
2.2.3　项目根目录　17
2.2.4　版本控制：Git　17
2.2.5　包管理工具：npm　20
2.2.6　构建工具：Gulp和Grunt　22
2.2.7　项目结构　23
2.3　转换器　24
2.3.1　使用Gulp运行Babel　24
2.3.2　格式审查工具　26
2.4　总结　29
第3章　字面量、变量、常量和数据类型　32
3.1　变量和常量　32
3.2　变量和常量：用哪个　33
3.3　标识符命名　34
3.4　字面量　35
3.5　基本类型和对象　36
3.6　数字　37
3.7　字符串　39
3.8　特殊字符　40
3.8.1　模板字符串　41
3.8.2　多行字符串　42
3.8.3　数字用作字符串　43
3.9　布尔型　43
3.10　符号　43
3.11　null和undefined　44
3.12　对象　44
3.13　Number, String和Boolean对象　47
3.14　数组　47
3.15　对象和数组的拖尾逗号　49
3.16　日期　50
3.17　正则表达式　50
3.18　映射和集合　51
3.19　数据类型转换　51
3.19.1　转换成数字　51
3.19.2　转换成字符串　52
3.19.3　转换成布尔型　52
3.20　总结　53
第4章　控制流　54
4.1　控制流的底层　54
4.1.1　while循环　57
4.1.2　块语句　58
4.1.3　空格　59
4.1.4　辅助方法　60
4.1.5　if else语句　60
4.1.6　do...while循环　62
4.1.7　for循环　63
4.1.8　if语句　64
4.1.9　最后的整合　65
4.2　JavaScript中的控制语句　66
4.2.1　控制流异常　67
4.2.2　链式if… else语句　67
4.2.3　元语法　68
4.2.4　其他循环模式　69
4.2.5　switch语句　70
4.2.6　for…in循环　74
4.2.7　for…of循环　74
4.3　实用的控制流模式　74
4.3.1　使用continue减少条件嵌套　75
4.3.2　使用break或return避免不必要的计算　75
4.3.3　在循环结束后使用索引的值　76
4.3.4　列表变动时索引递减　76
4.4　总结　77
第5章　表达式和运算符　78
5.1　运算符　79
5.2　算术运算符　80
5.3　运算符优先级　82
5.4　比较运算符　83
5.5　比较数字　85
5.6　字符串连接　86
5.7　逻辑运算符　87
5.8　与、或和非　88
5.8.1　短路求值　89
5.8.2　非布尔值的逻辑运算符　89
5.8.3　条件运算符　90
5.8.4　逗号运算符　91
5.9　分组运算符　91
5.9.1　位运算符　91
5.9.2　类型判断运算符　93
5.9.3　void运算符　94
5.9.4　赋值运算符　94
5.10　解构赋值　95
5.11　对象和数组运算符　97
5.12　模板字符串中的表达式　97
5.13　表达式和控制流模式　97
5.13.1　将if…else语句转化成条件表达式　98
5.13.2　将if语句转化成短路求值的逻辑或（||）表达式　98
5.14　总结　98
第6章　函数　99
6.1　返回值　100
6.2　引用调用　100
6.3　函数参数　101
6.3.1　参数会让函数有所区别吗　103
6.3.2　解构参数　104
6.3.3　默认参数　105
6.4　函数作为对象属性　105
6.5　this关键字　105
6.6　函数表达式和匿名函数　107
6.7　箭头符号　109
6.8　调用、请求和绑定　110
6.9　总结　112
第7章　作用域　113
7.1　作用域和存在　114
7.2　静态作用域与动态作用域　114
7.3　全局作用域　115
7.4　块作用域　117
7.5　变量屏蔽　117
7.6　函数、闭包和静态作用域　119
7.7　即时调用函数表达式　120
7.8　函数作用域和提升　121
7.9　函数提升　123
7.10　临时死区　124
7.11　严格模式　124
7.12　总结　125
第8章　数组及其处理　126
8.1　数组概览　126
8.2　操作数组内容　127
8.2.1　在起始和末尾添加或删除元素　128
8.2.2　在末尾添加多个元素　128
8.2.3　获取子数组　128
8.2.4　从任意位置添加或删除元素　129
8.2.5　数组内的分割和替换　129
8.2.6　用指定值填充数组　129
8.2.7　数组反转和排序　130
8.3　数组搜索　130
8.4　数组的基本操作：map和filter　133
8.5　数组魔法：reduce　135
8.6　数组方法，已删除或者未定义的元素　138
8.7　字符串连接　138
8.8　总结　139
第9章　对象以及面向对象编程　141
9.1　属性枚举　141
9.1.1　for...in　142
9.1.2　Object.keys　142
9.2　面向对象编程　143
9.2.1　创建类和实例　143
9.2.2　动态属性　145
9.2.3　类即函数　146
9.2.4　原型　147
9.2.5　静态方法　148
9.2.6　继承　149
9.2.7　多态　151
9.2.8　枚举对象属性，回顾　151
9.2.9　字符串表示　152
9.3　多继承、混合类和接口　153
9.4　总结　155
第10章　Maps和Sets　156
10.1　Maps　156
10.2　Weak Maps　158
10.3　Sets　159
10.4　Weak Sets　160
10.5　打破对象习惯　161
第11章　异常和错误处理　162
11.1　Error对象　162
11.2　使用try和catch处理异常　163
11.3　抛出异常　164
11.4　异常处理和调用栈　165
11.5　try...catch... finally　166
11.6　让异常成为例外　167
第12章　迭代器和生成器　168
12.1　迭代协议　170
12.2　生成器　172
12.2.1　yield表达式和双向交流　173
12.2.2　生成器和返回值　175
12.3　总结　175
第13章　函数和抽象思考的力量　176
13.1　函数作为子程序　176
13.2　函数作为有返回值的子程序　177
13.3　函数即…函数　178
13.4　那又如何？　180
13.5　IIEFs和异步代码　182
13.6　函数变量　184
13.6.1　数组中的函数　186
13.6.2　将函数传给函数　187
13.6.3　在函数中返回函数　188
13.7　递归　189
13.8　总结　190
第14章　异步编程　191
14.1　类比　192
14.2　回调　192
14.2.1　setInterval和clearInterval　193
14.2.2　Scope和异步执行　194
14.2.3　错误优先回调　195
14.2.4　回调地狱　196
14.3　Promise　197
14.3.1　创建Promise　198
14.3.2　使用Promise　198
14.3.3　事件　200
14.3.4　Promise链　202
14.3.5　避免不被处理的Promise　203
14.4　生成器　205
14.4.1　向前一步和退后两步　207
14.4.2　不要自己编写生成器运行器　208
14.4.3　生成器运行器中的异常处理　208
14.5　总结　209
第15章　日期和时间　211
15.1　日期、时区、时间戳以及Unix时间　211
15.2　构造Date对象　212
15.3　Moment.js　213
15.4　JavaScript中Date的实际用法　214
15.5　构造日期对象　214
15.5.1　在服务端构造日期对象　214
15.5.2　在浏览器中构造Date对象　215
15.6　传递日期　215
15.7　展日期　216
15.8　日期的组成　217
15.9　日期的比较　218
15.10　日期的四则运算　218
15.11　用户友好的相对日期　219
15.12　总结　220
第16章　数学运算　221
16.1　格式化数字　221
16.1.1　固定小数　222
16.1.2　指数符号　222
16.1.3　固定精度　222
16.1.4　不同进制　223
16.1.5　进一步格式化数字　223
16.2　常量　224
16.3　代数函数　224
16.3.1　幂运算　224
16.3.2　对数函数　225
16.3.3　其他函数　225
16.3.4　伪随机数生成器　226
16.4　三角函数　227
16.5　双曲线函数　227
第17章　正则表达式　229
17.1　子字符串匹配和替换　229
17.2　构造正则表达式　230
17.3　使用正则表达式进行搜索　231
17.4　使用正则表达式进行替换　231
17.5　消费输入　232
17.6　分枝　234
17.7　匹配HTML　235
17.8　字符集　235
17.9　具名字符集　236
17.10　重复　237
17.11　句点元字符和转义　238
17.12　分组　238
17.13　懒惰匹配，贪婪匹配　240
17.14　反向引用　241
17.15　替换组　242
17.16　函数替换　243
17.17　锚点　245
17.18　单词边界匹配　245
17.19　向前查找　247
17.20　动态构造正则表达式　248
17.21　总结　248
第18章　浏览器中的JavaScript　249
18.1　ES5还是ES6　249
18.2　文档对象模型　250
18.3　关于树的专用语　252
18.4　DOM中的“Get”方法　253
18.5　查询DOM元素　253
18.6　多个DOM元素　254
18.7　创建DOM元素　255
18.8　样式元素　256
18.9　数据属性　257
18.10　事件　258
18.11　事件捕获与事件冒泡　259
18.12　Ajax　263
18.13　总结　267
第19章　jQuery　268
19.1　万能的美元（符号）　268
19.2　引入jQuery　269
19.3　等待DOM加载　269
19.4　jQuery封装的DOM元素　270
19.5　操作元素　270
19.6　展开jQuery对象　272
19.7　Ajax　273
19.8　总结　273
第20章　Node　274
20.1　Node基础　274
20.2　模块（Module）　275
20.3　核心module、文件module和npm module　277
20.4　自定义函数Module　279
20.5　访问文件系统　281
20.6　进程　284
20.7　操作系统　286
20.8　子进程　287
20.9　流　288
20.10　Web服务器　289
20.11　总结　291
第21章　对象属性配置和代理　292
21.1　存取器属性：getter和setter　292
21.2　对象属性的属性　294
21.3　对象保护：冻结、封装、以及阻止扩展　296
21.4　代理　299
21.5　总结　301
第22章　附加资源　302
22.1　在线文档　302
22.2　期刊　303
22.3　博客和教程　303
22.4　Stack Overflow　304
22.5　给开源项目做贡献　306
22.6　总结　307
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript学习指南 第3版 (Learning JavaScript, 3rd Edition)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript速成教程
前言第一部分
入门知识第1学时

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript速成教程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript学习指南
第1章　Hello JavaScript！　1
1.1　“Hello World！”程序　1
1.2　第二个“Hello World!”程序　2
1.2.1　script标签　3
1.2.2　JavaScript、ECMAScript和JScript的比较　5
1.2.3　在JavaScript中定义函数　6
1.2.4　事件处理程序　6
1.2.5　浏览器对象document　7
1.2.6　property操作符　8
1.2.7　var关键字和作用域　9
1.2.8　JavaScript语句　9
1.2.9　注释　10
1.2.10　你没看到的：HTML注释和CDATA区段　10
1.3　JavaScript文件　12
1.4　可访问性和JavaScript最佳实践　14
1.4.1　可访问性指南　14
1.4.2　noscript　15
第2章　JavaScript数据类型和变量　17
2.1　标识变量　17
2.1.1　命名规范　19
2.2　基本类型　21
2.3　String数据类型　22
2.3.1　字符串转义序列　22
2.3.2　字符串编码　23
2.3.3　字符串转换　25
2.4　Boolean数据类型　27
2.5　Number数据类型　28
2.6　null和undefined变量　31
2.7　常量：已命名数值，但不是变量　33
2.8　知识测验　33
2.9　测验答案　34
第3章　运算符和语句　36
3.1　JavaScript语句的格式　36
3.2　赋值语句　37
3.2.1　算术运算符　38
3.2.2　一元运算符　39
3.2.3　运算符的优先级　40
3.2.4　带运算符的快捷赋值　41
3.2.5　位操作运算符　41
3.3　条件语句和程序流　43
3.3.1　if…else条件语句　45
3.3.2　switch条件语句　46
3.4　条件运算符　49
3.4.1　相等和恒等运算符　49
3.4.2　其他关系运算符　52
3.4.3　JavaScript中唯一的三元运算符　54
3.5　逻辑运算符　54
3.6　高级语句：循环　56
3.6.1　while循环　56
3.6.2　do…while循环　57
3.6.3　for循环　58
3.7　知识测验　60
3.8　测验答案　61
第4章　JavaScript对象　63
4.1　基本数据类型对象　63
4.2　布尔值、数字和字符串　65
4.2.1　Boolean对象　65
4.2.2　Number对象、静态属性及实例方法　66
4.2.3　String对象　69
4.3　正则表达式和RegExp　74
4.3.1　RegExp方法：test和exec　74
4.3.2　正则表达式的应用　77
4.4　Date对象　81
4.5　Math对象　84
4.5.1　Math的属性　85
4.5.2　Math的方法　85
4.6　JavaScript数组　87
4.6.1　FIFO队列　89
4.7　知识测验　92
4.8　测验答案　92
第5章　函数　94
5.1　声明式的函数　94
5.1.1　函数的命名约定和大小　95
5.1.2　函数返回值和参数　95
5.2　匿名函数　97
5.3　函数字面量　100
5.3.1　函数和递归　101
5.3.2　嵌套函数、函数闭包与内存泄漏　103
5.3.3　回调函数　106
5.4　函数类型小结　109
5.5　函数作用域　109
5.6　函数就是一个对象　111
5.7　知识测验　111
5.8　测验答案　111
第6章　排错、调试及跨浏览器问题　113
6.1　调试的简单方法　113
6.2　浏览器提供的开发和调试工具　113
6.2.1　Firefox和Firebug　114
6.2.2　使用console.log　117
6.2.3　Firefox、Web Developer toolkit和NoScript　119
6.2.4　Opera和Dragonfly　119
6.2.5　Safari/WebKit和Web Inspector　121
6.2.6　Internet Explorer　122
6.3　处理浏览器之间的差异　123
6.3.1　对象检测　123
6.3.2　对象检测失败的场合　126
6.3.3　DOCTYPE、X-UA-Compatible和Quirks模式　129
6.3.4　阻止向后兼容性：IE 8.0中的元标签http-equiv　130
6.4　知识测验　131
6.5　测验答案　131
第7章　捕获事件　132
7.1　事件　132
7.2　0级事件处理　133
7.2.1　Event对象　135
7.2.2　事件冒泡　138
7.2.3　事件处理程序和this　141
7.3　DOM Level 2事件模型　142
生成事件　148
7.4　知识测验　149
7.5　测验答案　150
第8章　表单、表单事件及验证　151
8.1　为表单添加事件：不同方法　151
8.1.1　跨浏览器兼容的事件处理　152
8.1.2　取消一个事件　153
8.2　选择列表框元素　154
8.2.1　动态修改选择列表框　156
8.2.2　选择列表框和自动选择　158
8.3　单选按钮和复选框　160
8.4　文本框、文本区域、密码框和隐藏表单字段的输入元素　164
文本验证　166
8.5　input元素字段和基于正则表达式的验证　168
8.6　表单、沙箱和XSS　171
8.7　知识测验　172
8.8　测验答案　172
第9章　浏览器之谜　174
9.1　浏览器结构概述　174
9.2　window对象　175
9.3　窗口的创建和控制　176
9.3.1　对话框：alert、confirm和prompt　176
9.3.2　创建自定义窗口　177
9.3.3　修改窗口　180
9.4　frame对象　183
9.4.1　location对象　185
9.4.2　基于iframe的远程脚本　187
9.5　添加并控制定时器　191
9.6　history、screen和navigator对象　193
9.6.1　history对象　193
9.6.2　screen对象　194
9.6.3　navigator对象　195
9.6.4　history、screen和navigator属性的实际应用　195
9.7　document对象　198
9.7.1　链接　198
9.7.2　图像　200
9.8　innerHTML　201
9.9　知识测验　203
9.10　测验答案　203
第10章　cookie和其他客户端存储技术　205
10.1　JavaScript沙箱与cookie安全　205
10.1.1　同源安全策略　205
10.1.2　使用document.domain　206
10.2　cookie全解　207
cookie的保存和读取　207
10.3　Flash共享对象、Google Gears和HTML5 DOM存储　212
10.4　知识测验　215
10.5　测验答案　215
第11章　DOM或以树型展示的Web页面　217
11.1　两个接口的传说　217
11.2　DOM HTML API　218
11.2.1　DOM HTML对象及其属性　219
11.2.2　DOM(HTML)集合　223
11.3　理解DOM：Core API　226
11.3.1　DOM树　227
11.3.2　节点属性和方法　228
11.3.3　DOM核心文档对象　232
11.4　元素及其上下文内访问　235
11.5　修改文档树　237
11.6　知识测验　241
11.7　测验答案　242
第12章　动态页面　243
12.1　JavaScript、CSS和DOM　243
样式属性　243
12.2　字体和文本　247
12.2.1　字体样式属性　247
12.2.2　文本属性　248
12.3　定位和动画　251
12.3.1　动态定位　251
12.3.2　拖放操作　255
12.4　大小和修剪　259
12.4.1　溢出和动态内容　259
12.4.2　修剪矩形　262
12.5　显示、可视性和不透明性　264
12.5.1　实现正确效果的正确工具　264
12.5.2　即时信息　265
12.6　再探DOM：可折叠表单、查询选择器和类名　267
12.7　知识测验　272
12.8　测验答案　272
第13章　创建自定义JavaScript对象　274
13.1　JavaScript对象和原型　274
原型　274
13.2　创建自定义JavaScript对象　276
13.2.1　深入函数　277
13.2.2　公有和私有属性以及何时使用两种属性　280
13.2.3　getter和setter　280
13.3　对象封装　282
13.4　构造函数链和JavaScript继承　289
13.5　一次性对象　291
13.6　对象库：为复用而封装对象　294
13.7　高级错误处理技术（try、throw和catch）　296
13.8　知识测验　299
13.9　测验答案　299
第14章　使用Ajax　301
14.1　Ajax的工作原理　301
14.2　Hello Ajax World　302
14.3　XMLHttpRequest对象及请求的准备与发送　306
14.3.1　对象，对象，什么拥有对象　306
14.3.2　XMLHttpRequest对象的方法　308
14.4　处理Web请求的返回结果　311
14.4.1　检查Ajax请求的readyState和status值　311
14.4.2　处理Web请求的结果　312
14.5　Ajax：不仅是代码　315
14.5.1　Ajax的动态特性　315
14.5.2　Ajax的可访问性和适度降格　315
14.5.3　安全和工作区　317
14.6　JavaScript和Ajax库　318
14.7　知识测验　320
14.8　测验答案　321
第15章　Ajax数据：XML或JSON　322
15.1　XML格式的Ajax结果　322
15.1.1　数据的MIME类型　322
15.1.2　在服务器端生成XML数据　323
15.1.3　在客户端处理XML数据　326
15.2　JSON　330
15.2.1　简单的JSON应用程序　330
15.2.2　JSON对象　334
15.3　知识测验　338
15.4　测验答案　340
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript学习指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>使用HTML、CSS和JavaScript开发Android程序（第2版）
前言 .............................................................................. xi
第1 章 入门指南 ............................................................ 1
1.1 网络应用程序对比原生应用程序 ....................................................................1
1.1.1 什么是网络应用程序 .............................................................................1
1.1.2 什么是原生应用程序 .............................................................................1
1.1.3 优势和劣势 ............................................................................................2
1.1.4 哪种方法最适合你 .................................................................................2
1.2 网络编程速成 ..................................................................................................3
1.2.1 HTML 入门 ...........................................................................................3
1.2.2 CSS 入门 ...............................................................................................6
1.2.3 JavaScript 入门 ......................................................................................9
第2 章 基本样式 .......................................................... 13
2.1 还没网站 .......................................................................................................13
2.2 第一步 ...........................................................................................................15
2.2.1 准备单独的Android 样式表 ................................................................18
2.2.2 控制页面缩放 ......................................................................................20
2.3 添加Android CSS .........................................................................................22
2.4 添加Android 感观效果 .................................................................................25
2.5 使用jQuery 添加基本行为 ............................................................................28
2.6 内容回顾 .......................................................................................................34
第3 章 高级样式 .......................................................... 35
3.1 添加一点Ajax ...............................................................................................35
3.2 交通警察 .......................................................................................................35
3.2.1 添加一些内容 ......................................................................................38
3.2.2 JavaScript 的路由请求 .........................................................................39
3.3 简单的点缀 ...................................................................................................40
3.3.1 进度指示器 ..........................................................................................40
3.3.2 设置页面标题 ......................................................................................44
3.3.3 处理长标题 ..........................................................................................46
3.3.4 自动回到顶部 ......................................................................................47
3.3.5 只拦截本地链接 ..................................................................................49
3.3.6 编写自己的返回按钮 ...........................................................................49
3.4 在主屏幕上添加图标 ....................................................................................56
3.5 内容回顾 .......................................................................................................57
第4 章 动画 ................................................................ 59
4.1 来自朋友的帮助 ............................................................................................59
4.2 让主页滑动起来 ............................................................................................59
4.3 添加Dates 面板 .............................................................................................62
4.4 添加Date 面板 ..............................................................................................67
4.5 添加New Entry 面板 .....................................................................................68
4.6 添加Settings 面板 .........................................................................................71
4.7 将所有代码放在一起 ....................................................................................75
4.8 自定义jQTouch .............................................................................................77
4.9 内容回顾 .......................................................................................................79
第5 章 客户端数据存储 ............................................... 81
5.1 Web Storage ..................................................................................................81
5.1.1 将用户设置保存到本地 .......................................................................82
5.1.2 将选中的数据保存到Session Storage 中 .............................................86
5.2 Web SQL Database ........................................................................................90
5.2.1 创建数据库 ..........................................................................................90
5.2.2 插入行 .................................................................................................93
5.2.3 检索行及处理结果集 ...........................................................................96
5.2.4 删除行 ............................................................................................... 101
5.3 Web Database 错误编码参考 ....................................................................... 104
5.4 内容回顾 ..................................................................................................... 105
第6 章 走向离线 ........................................................ 107
6.1 离线应用程序缓存基础 ............................................................................... 107
6.2 在线Whitelist（白名单）和Fallback（备选）选项 .................................. 111
6.3 创建动态Manifest 文件 .............................................................................. 118
6.4 调试 ............................................................................................................. 122
6.4.1 JavaScript 控制台（JavaScript Console） ........................................... 123
6.5 内容回顾 ..................................................................................................... 125
第7 章 走向原生 ........................................................ 127
7.1 PhoneGap 简介 ............................................................................................ 127
7.2 使用Eclipse 和Android SDK 在本地构建应用程序 ................................... 128
7.2.1 下载并安装Eclipse............................................................................ 128
7.2.2 下载并安装Android SDK .................................................................. 129
7.2.3 在Eclipse 中安装ADT 插件 ............................................................. 129
7.2.4 添加Android 平台和其他组件 .......................................................... 130
7.2.5 安装最新版的PhoneGap ................................................................... 131
7.2.6 建立一个新的Android 项目 .............................................................. 131
7.2.7 以Android 应用方式运行Kilo .......................................................... 132
7.3 使用JavaScript 来控制手机 ........................................................................ 135
7.3.1 Beep（蜂鸣）、Vibrate（振动）及Alert（提醒） .............................. 135
7.3.2 地理位置 ........................................................................................... 139
7.3.3 加速度传感器 .................................................................................... 146
7.4 内容回顾 ..................................................................................................... 149
第8 章 将应用程序提交到Android 应用程序市场 ........ 151
8.1 准备程序的发行版本 .................................................................................. 151
8.1.1 移除调试代码 .................................................................................... 151
8.1.2 应用程序版本管理 ............................................................................. 152
8.1.3 编译并签名你的应用程序 ................................................................. 153
8.2 将程序上传到Android 应用程序市场 ......................................................... 153
8.3 直接发布程序 .............................................................................................. 155
8.4 延伸阅读 ..................................................................................................... 158
附录A 通过WURFL 检测浏览器 ................................ 161
A.1 安装 ............................................................................................................ 161
A.2 配置 ............................................................................................................ 162
A.3 测试wurfl-php ........................................................................................... 163
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>使用HTML、CSS和JavaScript开发Android程序（第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>从零开始学JavaScript
第一篇  JavaScript入门篇第1章 初步了解JavaScript第2章 JavaScript编程的语言基础第3章 JavaScript事件处理第4章 JavaScript基于对象编程第5章 文档对象模型（DOM）第6章 String、Math、Array等数据对象第7章 Window及相关顶级对象第8章 Document对象第9章 HTML元素对象第二篇 JavaScript进阶篇第10章 正则表达式第11章 客户端与服务器端通信第12章 JavaScript与Ajax技术第13章 JavaScript错误与异常处理第三篇  JavaScript实例篇第14章 JavaScript与插件通信第15章 JavaScript常用特效收集
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>从零开始学JavaScript
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node.js开发指南
目 　 　录
第1章 　Node.js简介　　1
1.1 　Node.js 是什么　　2
1.2 　Node.js 能做什么　　3
1.3 　异步式 I/O 与事件驱动　　4
1.4 　Node.js 的性能　　5
1.4.1 　Node.js 架构简介　　5
1.4.2 　Node.js 与 PHP + Nginx　　6
1.5 　JavaScript 简史　　6
1.5.1 　Netscape 与 LiveScript　　7
1.5.2 　Java 与 Javascript　　7
1.5.3 　微软的加入—— JScript　　8
1.5.4 　标准化—— ECMAScript　　8
1.5.5 　浏览器兼容性问题　　9
1.5.6 　引擎效率革命和 JavaScript 的未来　　9
1.6 　CommonJS　　10
1.6.1 　服务端 JavaScript 的重生　　10
1.6.2 　CommonJS 规范与实现　　11
1.7 　参考资料　　12
第2章 　安装和配置Node.js　　13
2.1 　安装前的准备　　14
2.2 　快速安装　　14
2.2.1 　Microsoft Windows系统上安装Node.js　　14
2.2.2 　Linux 发行版上安装Node.js　　16
2.2.3 　Mac OS X上安装Node.js　　16
2.3 　编译源代码　　17
2.3.1 　在 POSIX 系统中编译　　17
2.3.2 　在 Windows系统中编译　　18
2.4 　安装Node 包管理器　　18
2.5 　安装多版本管理器　　19
2.6 　参考资料　　21
第3章 　Node.js快速入门　　23
3.1 　开始用 Node.js 编程　　24
3.1.1 　Hello World　　24
3.1.2 　Node.js 命令行工具　　25
3.1.3 　建立 HTTP 服务器　　26
3.2 　异步式 I/O 与事件式编程　　29
3.2.1 　阻塞与线程　　29
3.2.2 　回调函数　　31
3.2.3 　事件　　33
3.3 　模块和包　　34
3.3.1 　什么是模块　　35
3.3.2 　创建及加载模块　　35
3.3.3 　创建包　　38
3.3.4 　Node.js 包管理器　　41
3.4 　调试　　45
3.4.1 　命令行调试　　45
3.4.2 　远程调试　　47
3.4.3 　使用 Eclipse 调试 Node.js　　48
3.4.4 　使用 node-inspector 调试Node.js　　54
3.5 　参考资料　　55
第4章 　Node.js核心模块　　57
4.1 　全局对象　　58
4.1.1 　全局对象与全局变量　　58
4.1.2 　process　　58
4.1.3 　console　　60
4.2 　常用工具 util　　61
4.2.1 　util.inherits　　61
4.2.2 　util.inspect　　62
4.3 　事件驱动 events　　63
4.3.1 　事件发射器　　64
4.3.2 　error 事件　　65
4.3.3 　继承 EventEmitter　　65
4.4 　文件系统 fs　　65
4.4.1 　fs.readFile　　66
4.4.2 　fs.readFileSync　　67
4.4.3 　fs.open　　67
4.4.4 　fs.read　　68
4.5 　HTTP 服务器与客户端　　70
4.5.1 　HTTP 服务器　　70
4.5.2 　HTTP 客户端　　74
4.6 　参考资料　　77
第5章 　使用Node.js进行Web开发　　79
5.1 　准备工作　　80
5.1.1 　使用http模块　　82
5.1.2 　Express 框架　　83
5.2 　快速开始　　84
5.2.1 　安装 Express　　84
5.2.2 　建立工程　　85
5.2.3 　启动服务器　　86
5.2.4 　工程的结构　　87
5.3 　路由控制　　89
5.3.1 　工作原理　　89
5.3.2 　创建路由规则　　92
5.3.3 　路径匹配　　93
5.3.4 　REST 风格的路由规则　　94
5.3.5 　控制权转移　　95
5.4 　模板引擎　　97
5.4.1 　什么是模板引擎　　97
5.4.2 　使用模板引擎　　98
5.4.3 　页面布局　　99
5.4.4 　片段视图　　100
5.4.5 　视图助手　　100
5.5 　建立微博网站　　102
5.5.1 　功能分析　　102
5.5.2 　路由规划　　102
5.5.3 　界面设计　　103
5.5.4 　使用Bootstrap　　104
5.6 　用户注册和登录　　107
5.6.1 　访问数据库　　107
5.6.2 　会话支持　　110
5.6.3 　注册和登入　　111
5.6.4 　页面权限控制　　120
5.7 　发表微博　　123
5.7.1 　微博模型　　123
5.7.2 　发表微博　　125
5.7.3 　用户页面　　126
5.7.4 　首页　　127
5.7.5 　下一步　　129
5.8 　参考资料　　129
第6章 　Node.js进阶话题　　131
6.1 　模块加载机制　　132
6.1.1 　模块的类型　　132
6.1.2 　按路径加载模块　　132
6.1.3 　通过查找node_modules目录加载模块　　133
6.1.4 　加载缓存　　134
6.1.5 　加载顺序　　134
6.2 　控制流　　135
6.2.1 　循环的陷阱　　135
6.2.2 　解决控制流难题　　137
6.3 　Node.js 应用部署　　138
6.3.1 　日志功能　　138
6.3.2 　使用cluster模块　　140
6.3.3 　启动脚本　　142
6.3.4 　共享80端口　　143
6.4 　Node.js 不是银弹　　144
6.5 　参考资料　　146
附录A 　JavaScript的高级特性　　147
附录B 　Node.js编程规范　　167
索引　　175
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node.js开发指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>C#网站开发案例详解
第1章 ajax技术基础应用 1
1.1 准备工作 2
1.1.1 安装aspajaxextsetup程序 2
1.1.2 引用ajax.dll文件 2
1.1.3 设置web.config文件 3
1.2 第一个ajax示例 3
1.2.1 实现代码 3
1.2.2 实现效果 6
1.2.3 示例分析 6
1.3 求和运算示例 7
1.3.1 页面文件 7
1.3.2 后台代码 7
1.3.3 实现效果 8
1.4 无刷新检测用户名是否重复 8
1.4.1 数据库文件 9
1.4.2 页面文件 9
1.4.3 后台代码 10
1.4.4 实现效果 11
1.5 无刷新实现二级下拉列表框的联动 11
1.5.1 数据库文件 11
.1.5.2 页面文件 12
1.5.3 后台代码 13
1.5.4 实现效果 15
1.6 无刷新更新数据 16
1.6.1 页面文件 16
1.6.2 后台代码 17
1.6.3 实现效果 19
1.7 无刷新增加和浏览数据 20
1.7.1 数据库文件 20
1.7.2 添加css文件 20
1.7.3 页面文件 20
1.7.4 后台代码 22
1.7.5 实现效果 25
第2章 新闻系统开发 26
2.1 需求分析 27
2.1.1 总体设计 27
2.1.2 功能设计 28
2.1.3 全局css 28
2.1.4 全局js 29
2.2 系统数据库设计 30
2.3 数据库逻辑设计的实现 30
2.3.1 新闻大类表 31
2.3.2 新闻小类表 31
2.3.3 新闻位置表 32
2.3.4 新闻点评表 32
2.3.5 新闻信息表 33
2.3.6 后台人员表 34
2.4 新闻首页的开发 34
2.4.1 实现效果 35
2.4.2 页面css 35
2.5 新闻分类页面的开发 36
2.5.1 实现效果 36
2.5.2 页面css 36
2.6 新闻详细页面的开发 37
2.6.1 实现效果 37
2.6.2 页面css 38
2.7 新闻点评页面的开发 39
2.7.1 实现效果 39
2.7.2 页面css 40
2.7.3 js脚本文件 42
2.8 新闻后台管理页面的开发 42
2.8.1 实现效果 43
2.8.2 模块css 44
2.8.3 模块js 45
2.9 用户表示层 47
2.9.1 新闻首页 47
2.9.2 新闻分类页面 48
2.9.3 html新闻模板页面 49
2.9.4 新闻关联页面 50
2.9.5 新闻点评页面 50
2.9.6 新闻后台管理登录页面 52
2.9.7 新闻类别管理页面 52
2.9.8 点评管理页面 53
2.9.9 新闻浏览页面 53
2.9.10 增加新闻页面 53
2.9.11 编辑新闻页面 53
2.10 业务逻辑层 53
2.10.1 新闻首页设计模块 54
2.10.2 新闻分类页面模块 54
2.10.3 新闻点评模块 55
2.10.4 新闻后台管理模块 55
2.11 通用层 57
2.11.1 新闻首页部分 57
2.11.2 新闻分类部分 57
2.11.3 新闻后台管理 59
2.12 数据访问层 62
2.12.1 新闻首页设计 62
2.12.2 新闻分类页面 63
2.12.3 新闻点评页面 64
2.12.4 新闻后台管理模块 65
2.13 新闻管理系统中所涉及的存储过程 67
2.13.1 根据设置的位置和显示记录数量获取新闻数据 68
2.13.2 根据id号获取新闻数据 68
2.13.3 获取某一类新闻数据 68
2.13.4 根据新闻id号获取某类随机新闻数据 69
2.13.5 根据id号获取用户的点评信息 69
2.13.6 根据id号获取新闻数据 69
2.13.7 增加新闻点评信息 70
2.13.8 增加新闻数据 70
2.13.9 删除数据通用过程 70
2.13.10 根据id号更新新闻数据 71
第3章 论坛系统开发 72
3.1 需求分析 73
3.1.1 总体设计 73
3.1.2 功能设计 74
3.1.3 全局css 74
3.2 数据库设计 75
3.2.1 数据库需求分析 75
3.2.2 数据库中各表之间的关系 75
3.3 数据库逻辑设计的实现 76
3.3.1 后台人员表 76
3.3.2 帖子类别表 76
3.3.3 帖子信息表 77
3.3.4 用户信息表 78
3.4 会员管理模块的开发 79
3.4.1 实现效果 79
3.4.2 模块css 80
3.4.3 js文件 81
3.5 帖子管理模块的开发 82
3.5.1 帖子管理模块的实现效果 82
3.5.2 帖子管理模块的css文件 84
3.6 论坛后台管理模块的开发 86
3.6.1 后台管理模块的实现效果 87
3.6.2 后台管理模块的css和js层 88
3.7 用户表示层 88
3.7.1 会员注册页面 88
3.7.2 会员登录页面 89
3.7.3 会员中心页面 90
3.7.4 后台的会员管理页面 90
3.7.5 论坛首页 92
3.7.6 首页中的自定义控件 93
3.7.7 某类主帖列表页面 94
3.7.8 某类主帖详细页面 95
3.7.9 发表主帖页面 95
3.8 业务逻辑层 96
3.8.1 会员管理模块 96
3.8.2 帖子管理模块 98
3.8.3 后台管理模块 99
3.9 通用层 100
3.9.1 会员管理模块 100
3.9.2 帖子管理模块 101
3.10 数据访问层 103
3.10.1 会员管理模块 103
3.10.2 帖子管理模块 106
3.10.3 后台管理模块 108
3.11 论坛系统所使用的存储过程 109
3.11.1 增加用户资料信息 109
3.11.2 通过id号更新某一字段信息 110
3.11.3 通过id号更新注册用户信息 111
3.11.4 根据字符获取注册用户资料或密码信息 111
3.11.5 根据参数获取表中某类数据信息 111
3.11.6 获取主帖信息 112
3.11.7 根据id号获取某一字段内容 112
3.11.8 根据参数获取某类主帖信息 113
3.11.9 根据相关参数获取主帖的所有跟帖信息 113
3.11.10 增加主帖和跟帖信息 114
3.11.11 通过id号更新某条主帖内容 114
3.11.12 根据类型和id号删除某条记录信息 115
第4章 博客系统开发 118
4.1 需求分析 119
4.1.1 总体设计 119
4.1.2 功能设计 120
4.1.3 全局css 120
4.1.4 全局js 121
4.2 数据库功能设计 122
4.3 数据库逻辑设计的实现 123
4.3.1 博文信息表 123
4.3.2 注册用户表 124
4.3.3 博文点评表 125
4.3.4 用户相册表 126
4.3.5 系统风格表 126
4.3.6 博客来访表 127
4.4 博文管理模块的开发 127
4.4.1 实现效果 128
4.4.2 模块css和js 129
4.5 相册管理模块的开发 129
4.5.1 实现效果 129
4.5.2 模块css的开发 130
4.5.3 模块js的开发 131
4.6 用户管理模块的开发 131
4.6.1 实现效果 131
4.6.2 模块css的开发 132
4.6.3 模块js的开发 132
4.7 用户表示层 132
4.7.1 公用自定义控件的设计 133
4.7.2 博客首页的开发 135
4.7.3 写博文页面的开发 137
4.7.4 查看和点评博文页面的开发 138
4.7.5 相册展示页面的开发 140
4.7.6 上传相册页面的开发 140
4.7.7 用户信息页面的开发 141
4.7.8 自定义风格页面的开发 142
4.8 业务逻辑层 144
4.8.1 博文管理模块的主逻辑部分 144
4.8.2 相册管理的主业务逻辑部分 145
4.8.3 博文管理模块的通用层部分 146
4.8.4 业务逻辑层的通用层部分 147
4.9 数据访问层 149
4.9.1 博文管理模块在数据访问层的实现 149
4.9.2 相册管理模块在数据访问层的实现 150
4.10 系统所使用的存储过程 151
4.10.1 通过id号获取对应内容信息 152
4.10.2 通过字符和id号更新不同数据信息 152
4.10.3 增加注册用户信息 153
4.10.4 增加会员博客访问记录 153
4.10.5 获取多种不同页面浏览的数据信息 154
4.10.6 增加博文点评信息 154
4.10.7 增加博客文章信息 155
4.10.8 获取可实现分页的博文数据信息 155
4.10.9 通过字符获取不同数据信息 156
4.10.10 增加用户相片信息 156
第5章 二手信息管理系统开发 157
5.1 需求分析 158
5.1.1 总体设计 158
5.1.2 功能设计 158
5.1.3 模块css 159
5.1.4 模块js 160
5.2 数据库逻辑设计的实现 164
5.2.1 二手信息表 164
5.2.2 二手信息留言表 165
5.3 系统实现效果 166
5.4 用户表示层 167
5.4.1 首页模板页 167
5.4.2 详细展示模板页 168
5.4.3 数据处理页 169
5.4.4 发布二手信息页 170
5.5 业务逻辑层 171
5.6 通用层 173
5.7 数据访问层 174
5.8 系统所使用的存储过程 176
5.8.1 增加二手商品留言信息 176
5.8.2 增加二手商品信息 177
5.8.3 获取全部二手商品信息 177
5.8.4 根据id号获取二手商品的留言信息 177
第6章 在线聊天系统开发 178
6.1 系统需求分析 179
6.1.1 总体设计 179
6.1.2 功能设计 179
6.1.3 模块css 180
6.1.4 模块js 181
6.2 数据库需求分析 187
6.3 数据库逻辑设计的实现 187
6.3.1 会话记录表 187
6.3.2 会话内容表 188
6.3.3 数据库中的存储过程 189
6.4 系统效果预览 189
6.5 用户表示层 190
6.5.1 首页模板页 190
6.5.2 后台管理页 191
6.5.3 内容展示公用页 192
6.5.4 用户申请对话处理页 192
6.5.5 用户对话处理页 193
6.6 业务逻辑层 194
6.7 通用层 195
6.8 数据访问层 196
6.9 在线聊天系统所使用的存储过程 197
6.9.1 增加聊天双方对话内容数据 198
6.9.2 增加用户聊天记录信息 198
6.9.3 获取全部的聊天记录 198
6.9.4 通过用户聊天记录编号 198
第7章 在线调查系统开发 199
7.1 系统结构需求分析 200
7.2 功能设计 200
7.3 数据库设计 201
7.4 数据库逻辑设计的实现 201
7.4.1 后台用户信息表 201
7.4.2 调查类型表 202
7.4.3 调查主题表 202
7.4.4 调查选题表 203
7.4.5 数据库中的存储过程 204
7.5 调查系统前台展示模块的开发 205
7.5.1 实现效果 205
7.5.2 全局模块css的开发 206
7.5.3 模块js的开发 207
7.6 系统后台管理模块的开发 209
7.6.1 后台实现效果预览 209
7.6.2 css与js模块的开发 210
7.7 用户表示层 211
7.7.1 分类展示全部调查数据页 211
7.7.2 查看调查主题的选项信息页 213
7.7.3 查看调查主题的结果信息页 214
7.7.4 单个题目和选项页 214
7.7.5 新闻模板页 215
7.7.6 数据处理页 216
7.7.7 在线调查管理页面 217
7.7.8 增加调查主题页面 219
7.7.9 增加调查题目和选项页面 220
7.7.10 增加新闻页面 222
7.8 业务逻辑层 223
7.8.1 系统前台主逻辑部分的开发 223
7.8.2 后台管理部分主逻辑的开发 225
7.9 通用层 225
7.9.1 前台通用层的开发 225
7.9.2 后台通用层的开发 228
7.10 数据访问层 230
7.10.1 前台数据访问层的开发 230
7.10.2 后台数据访问层的开发 231
7.11 存储过程 232
7.11.1 根据相关参数获取不同数据 232
7.11.2 获取可用于分页的调查数据 233
7.11.3 更新用户投票数据信息 234
7.11.4 增加调查主题的题目和选项数据 235
7.11.5 增加调查主题数据 235
第8章 通用进销存系统开发 236
8.1 系统结构需求分析 237
8.2 功能设计 237
8.3 数据库设计 238
8.4 数据库逻辑设计的实现 239
8.4.1 图书信息表 239
8.4.2 客户表 239
8.4.3 后台权限表 240
8.4.4 采购明细表 241
8.4.5 采购主表 242
8.4.6 发货明细表 242
8.4.7 发货主表 243
8.4.8 供应商表 244
8.4.9 后台用户信息表 245
8.4.10 数据库中的存储过程 246
8.5 进销存管理模块的开发 246
8.5.1 实现效果预览 246
8.5.2 css模块的开发 248
8.5.3 js模块的开发 250
8.6 用户表示层 251
8.6.1 全局文件的设计 251
8.6.2 图书入库页的设计 251
8.6.3 出入库单打印页的设计 257
8.6.4 出入库单打印内容页的设计 257
8.6.5 权限设置页的设计 259
8.7 业务逻辑层 261
8.7.1 主逻辑类文件的设计 261
8.7.2 通用类文件的设计 262
8.8 数据访问层 263
8.9 系统中应用的存储过程 265
8.9.1 增加图书入库的数据 265
8.9.2 增加图书出库的数据 266
8.9.3 增加图书入库主表数据 266
8.9.4 增加图书出库主表数据 266
8.9.5 获取后台用户人员信息 266
8.9.6 获取某年度各月份图书进销存的财务数据信息 267
8.9.7 获取指定的数据信息1 268
8.9.8 获取指定的数据信息2 269
8.9.9 更新相关数据 270
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>C#网站开发案例详解
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript与JScript从入门到精通
第一部分 JavaScript和JScript初步
第1章 基础
Web
超文本标志语言
帮助器程序
统一资源定位器
超文本传输协议
公共网关接口程序
Java小程序
ActiveX――Microsoft对象
JavaScript简史
LiveWire与LiveWire数据库服务
活动服务器页面、WSH与远程脚本
Intranets、Extranets和分布式应用程序
小结
第2章 JavaScript与JScript简介
JavaScript、浏览器及服务器
在HTML中嵌入JavaScript
JavaScript的说明语句
生成HTML
变量――数值仓库
小结
第3章 运算符、语句和函数
运算算符与表达式
JavaScript编程语句
小结
第4章 事件处理
什么是事件
JavaScript如何处理事件
处理JavaScript事件
在JavaScript中设置事件处理器
事件仿真方法
event对象
事件捕获
事件起泡
错误处理
小结
第5章 JavaScript对象
什么是对象
什么是面向对象编程
JavaScript基于对象编程功能
JavaScript对象模型
浏览器对象
其他预定义对象类型
颜色常量
定义对象类型
删除属性和方法
event、Event和error对象
小结
第二部分 使用预定义对象和方法
第6章 生成帧与窗口
Window对象
frame对象
Dosument对象
navigator对象
screen对象
小结
第7章 窗体处理
Form对象
从JavaScript中访问窗体
访问窗体元素
使用窗体事件处理器
客户方窗体处理
使用CGI脚本
小结
第8章 隐藏字段和Cookie
保存状态信息
使用隐藏窗体字段
JavaScript与隐藏字段
Cookie
Cookie中信息的存放方法
在JavaScript中使用Cookie
比较Cookie与隐藏富体字段
小结
第9章 使用链接
URL
location对象
link对象
link()方法
anchor对象
history对象
小结
第10章 使用图形
image对象
动态图形显示
图形与动画
图形映射与area对象
使用图形映射
小结
第11章 算术运算
Math对象
算术常数
算术函数
在脚本中使用算术函数
实例：JavaScript计算器
小结
第三部分 建立样本应用程序
第12章 页面附件
日历
计算器
备忘录
世界钟
集成
小结
第13章 联机产品目录
开发非CGI程序的产品目录
根据用户选项剪裁产品目录
加入多媒体特性
小结
第14章 开发搜索工具
搜索窗体
搜索引擎
小结
第四部分 与Java、ActiveX和插入件通信
第15章 与Java小程序通信
Java简介
Java与JavaScript
Java开发工具集
学习Java
Java API
程序与小程序
LiveConnect与Internet Explorer对象模型
从JavaScript中访问Java方法
从JavaScript中访问小程序
在小程序中使用JavaScript
GraphIt!
小结
第16章 ActiveX组件脚本
何谓ActiveX
使用ActiveX组件
从JScript中访问ActiveX组件
使用ActiveX控件板
小结
第17章 使用插入件
受欢迎的插入件
插入件的操作
使用MIME类型
确定安装的插入件
插入件帮助命令的使用
检测插入件
从JavaScript访问插入件
Netscape插入件文档
列表显不插入件方法
多个插入件的同步
协助用户安装插入件
开发自己的插入件
小结
第五部分 服务器编程
第18章 使用样式单与DHTML
什么是样式单
JavaScript样式单与级联样式单
入门实例
定义样式单
用标志使用样式
使用多个样式单
使用Internet Explorer的DHTML功能
小结
第19章 生成多媒体应用程序
使用层
使用节
使用声音
播放动画
使用影像
小结
第六部分 服务器编程
第20章 JavaScript与CGI程序接口
何时使用CGI程序
CGI程序如何工作
CGI程序的常规设计
Shell脚本举例
建立JavaScript脚本与CGI脚本的接口
从CGI程序返回JavaScript
小结
第21章 Netscape服务器脚本
使用LiveWire的服务器方脚本
简单LiveWire例子
LiveWire编译器
应用程序管理器
服务器方JavaWcript编程
服务器方对象
文件输入和输出
完整的例子：diskette
状态维护
服务器函数
面向文件系统与数据库管理系统
LiveWire数据库服务的补充
设置Microsoft Access数据库以便在LiveWire中使用
使用LiveWire数据库服务
database对象
结构化查询语言
更新diskette应用程序
小结
第22章 Microsoft服务器脚本
活动服务器页面
Windows脚本宿主
远程脚本
小结
第23章 加密脚本
Internet的安全性威胁
Web安全问题
窃听脚本与JavaScript安全策略
小结
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript与JScript从入门到精通
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML、CSS、JavaScript网页制作从入门到精通
第1章　HTML基础
1.1　HTML的基本概念
1.1.1　HTML简介
1.1.2　HTML文件的基本结构
1.1.3　认识HTML标记
1.2　HTML文件的编写方法
1.2.1　使用记事本手工编写HTML
1.2.2　使用Dreamweaver编写HTML文件
1.3　使用浏览器浏览HTML文件
1.3.1　查看页面效果
1.3.2　查看源文件
1.4　练习题
第2章　HTML基本标记
2.1　HTML头部标记head
2.2　标题标记title
2.3　元信息标记meta
2.3.1　设置页面关键字
2.3.2　设置页面说明
2.3.3　定义编辑工具
2.3.4　设置作者信息
2.3.5　设置网页文字及语言
2.3.6　设置网页的定时跳转
2.4　网页的主体标记body
2.4.1　网页背景色bgcolor
2.4.2　网页背景图片background
2.4.3　文字颜色text
2.4.4　链接文字属性link
2.4.5　边距margin
2.5　页面注释标记
2.6　练习题
第3章　文字与段落标记
3.1　标题字
3.1.1　标题字标记h
3.1.2　标题字对齐属性align
3.2　文本基本标记
3.2.1　字体属性face
3.2.2　字号属性size
3.2.3　颜色属性color
3.3　文本格式化标记
3.3.1　粗体标记b、strong
3.3.2　斜体标记i、em、cite
3.3.3　上标标记sup
3.3.4　下标标记sub
3.3.5　大字号标记big
3.3.6　小字号标记small
3.3.7　下画线标记u
3.4　段落标记
3.4.1　段落标记p
3.4.2　换行标记br
3.4.3　不换行标记nobr
3.5　水平线
3.5.1　插入水平线hr
3.5.2　水平线宽度width
3.5.3　水平线高度size
3.5.4　水平线去掉阴影noshade
3.5.5　水平线颜色color
3.5.6　水平线排列align
3.6　其他标记
3.6.1　插入空格
3.6.2　插入特殊符号
3.7　练习题
第4章　使用图像
4.1　图像的格式
4.2　插入图像
4.2.1　插入图像标记img
4.2.2　图像的源文件src
4.2.3　图像的提示文字alt
4.2.4　图像的宽度和高度width、height
4.2.5　图像的边框border
4.2.6　图像的垂直边距vspace
4.2.7　图像的水平间距hspace
4.2.8　图像的排列align
4.3　图像的超链接
4.3.1　图像的超链接
4.3.2　图像热区链接
4.4　练习题
第5章　使用列表
5.1　认识列表标记
5.2　有序列表
5.2.1　有序列表ol
5.2.2　有序列表的序号类型type
5.2.3　有序列表的起始数值start
5.3　无序列表
5.3.1　无序列表标记
5.3.2　无序列表的类型type
5.3.3　目录列表标记
5.3.4　定义列表标记
5.3.5　菜单列表标记
5.4　练习题
第6章　使用表格
6.1　创建表格
6.1.1　表格的基本构成table、tr、td
6.1.2　设置表格的标题caption
6.1.3　表头th
6.2　表格基本属性
6.2.1　表格宽度width
6.2.2　表格高度height
6.2.3　表格对齐方式align
6.3　表格的边框
6.3.1　表格边框宽度border
6.3.2　表格边框颜色bordercolor
6.3.3　内框宽度cellspacing
6.3.4　表格内文字与边框间距cellpadding
6.4　表格背景
6.4.1　表格背景颜色bgcolor
6.4.2　表格背景图像
6.5　表格的行属性
6.5.1　高度控制height
6.5.2　边框颜色bordercolor
6.5.3　行背景bgcolor、background
6.5.4　行文字的水平对齐方式align
6.5.5　行文字的垂直对齐方式valign
6.6　单元格属性
6.6.1　单元格大小width、height
6.6.2　水平跨度colspan
6.6.3　垂直跨度rowspan
6.6.4　对齐方式align、valign
6.6.5　单元格的背景色
6.6.6　单元格的边框颜色bordercolor
6.6.7　单元格的亮边框bordercolorlight
6.6.8　单元格的暗边框bordercolordark
6.6.9　单元格的背景图像background
6.7　表格的结构
6.7.1　表格的表首标记
6.7.2　表格的表主体标记
6.7.3　表格的表尾标记
6.8　练习题
第7章　建立超链接
7.1　超链接的基本知识
7.1.1　绝对路径
7.1.2　相对路径
7.2　内部链接
7.2.1　认识内部链接
7.2.2　链接的目标窗口
7.3　锚点链接
7.3.1　建立锚点
7.3.2　链接同一页面中的锚点
7.3.3　链接到其他页面中的锚点
7.4　外部链接
7.4.1　链接到外部网站
7.4.2　链接到E-mail
7.4.3　链接到FTP
7.4.4　链接到Telnet
7.4.5　下载文件
7.5　练习题
第8章　添加多媒体
8.1　设置滚动效果
8.1.1　滚动标记marquee
8.1.2　滚动方向direction
8.1.3　滚动方式behavior
8.1.4　滚动速度scrollamount
8.1.5　滚动延迟scrolldelay
8.1.6　滚动循环loop
8.1.7　滚动范围width、height
8.1.8　滚动背景颜色bgcolor
8.1.9　空白空间hspace、vspace
8.2　插入多媒体文件
8.2.1　插入Flash动画
8.2.2　插入音频和视频文件
8.3　设置背景音乐
8.3.1　背景音乐bgsound
8.3.2　循环次数loop
8.4　插入Java Applet
8.5　练习题
第9章　使用框架结构
9.1　框架的基本概念
9.2　设置框架集的属性frameset
9.2.1　水平分割窗口rows
9.2.2　垂直分割窗口cols
9.2.3　嵌套分割窗口
9.2.4　框架的边框frameborder
9.2.5　框架的边框宽度framespacing
9.2.6　框架的边框颜色bordercolor
9.3　设置窗口属性frame
9.3.1　页面源文件src
9.3.2　页面名称name
9.3.3　禁止调整窗口的尺寸noresize
9.3.4　边框与页面内容的水平边距marginwidth
9.3.5　边框与页面内容的垂直边距marginheight
9.3.6　控制框架滚动条显示scrolling
9.3.7　不支持框架标记noframes
9.4　浮动框架iframe
9.4.1　页面源文件src
9.4.2　浮动框架的宽和高width、height
9.4.3　浮动框架的对齐方式align
9.4.4　浮动框架滚动条显示属性scrolling
9.5　创建框架链接
9.5.1　普通框架结构的链接
9.5.2　浮动框架的链接
9.6　练习题
第10章　使用表单
10.1　表单标记form
10.1.1　提交表单action
10.1.2　表单名称name
10.1.3　传送方法method
10.1.4　编码方式enctype
10.1.5　目标显示方式target
10.2　插入表单对象
10.2.1　文字字段text
10.2.2　密码域password
10.2.3　单选按钮radio
10.2.4　复选框checkbox
10.2.5　普通按钮button
10.2.6　提交按钮submit
10.2.7　重置按钮reset
10.2.8　图像域image
10.2.9　隐藏域hidden
10.2.10　文件域file
10.3　菜单和列表
10.3.1　下拉菜单
10.3.2　列表项
10.4　文本域标记textarea
10.5　id标记
10.6　创建表单实例
10.7　练习题
第11章　使用XHTML
11.1　XHTML简介
11.1.1　什么是XHTML
11.1.2　为什么要升级到XHTML
11.2　XHTML页面结构
11.2.1　文档类型声明
11.2.2　元素和名字空间
11.2.3　网页头部元素
11.2.4　页面标题元素
11.2.5　页面主体元素
11.3　XHTML语法规范
11.3.1　XHTML元素必须是完全嵌套的
11.3.2　XHTML文档格式必须规范
11.3.3　标签名必须是小写的
11.3.4　所有的XHTML元素都必须有始有终
11.3.5　用id属性代替name属性
11.3.6　DOCTYPE声明是不可缺少的
11.3.7　属性必须加上英文双引号
11.3.8　明确所有属性的值
11.4　在Dreamweaver中编辑XHTML文件
11.5　将现有的HTML网站转换成XHTML
11.6　练习题
第12章　使用CSS样式表
12.1　认识CSS
12.2　使用CSS
12.2.1　CSS的基本语法
12.2.2　添加CSS的方法
12.3　字体属性
12.3.1　字体font-family
12.3.2　字号font-size
12.3.3　字体风格font-style
12.3.4　加粗字体font-weight
12.3.5　小写字母转为大写font-variant
12.3.6　字体复合属性
12.4　颜色和背景属性
12.4.1　颜色属性color
12.4.2　背景颜色background-color
12.4.3　背景图像background-image
12.4.4　背景重复background-repeat
12.4.5　背景附件background-attachment
12.4.6　背景位置background-position
12.4.7　背景复合属性background
12.5　段落属性
12.5.1　单词间隔word-spacing
12.5.2　字符间隔letter-spacing
12.5.3　文字修饰text-decoration
12.5.4　垂直对齐方式vertical-align
12.5.5　文本转换text-transform
12.5.6　水平对齐方式text-align
12.5.7　文本缩进text-indent
12.5.8　文本行高line-height
12.5.9　处理空白white-space
12.5.10　文本反排unicode-bidi、direction
12.6　外边距与内边距属性
12.6.1　上边距margin-top
12.6.2　其他边距margin-bottom、margin-left、margin-right
12.6.3　外边距复合属性margin
12.6.4　顶端内边距padding-top
12.6.5　其他内边距padding-bottom、padding-right、padding-left
12.6.6　内边距复合属性padding
12.7　边框属性
12.7.1　边框样式border-style
12.7.2　边框宽度border-width
12.7.3　边框颜色border-color
12.7.4　边框属性border
12.8　定位属性
12.8.1　定位方式position
12.8.2　元素位置top、right、bottom、left
12.8.3　层叠顺序z-index
12.8.4　浮动属性float
12.8.5　清除属性clear
12.8.6　可视区域clip
12.8.7　层的宽度和高度width、height
12.8.8　超出范围overflow
12.8.9　可见属性visibility
12.9　列表属性
12.9.1　列表符号list-style-type
12.9.2　图像符号list-style-image
12.9.3　列表缩进list-style-position
12.9.4　列表复合属性list-style
12.10　光标属性cursor
12.11　滤镜属性
12.11.1　不透明度alpha
12.11.2　动感模糊blur
12.11.3　对颜色进行透明处理chroma
12.11.4　阴影效果dropShadow
12.11.5　对象翻转flipH、flipV
12.11.6　发光效果glow
12.11.7　灰度处理gray
12.11.8　反相invert
12.11.9　X光片效果xray
12.11.10　遮罩效果mask
12.11.11　波形滤镜wave
12.12　练习题
第13章　Web标准与CSS网页布局实例
13.1　Web标准与CSS布局
13.1.1　什么是Web标准
13.1.2　CSS布局的优势
13.2　DIV+CSS布局网页基础
13.2.1　认识DIV
13.2.2　一列固定宽度
13.2.3　一列自适应
13.2.4　两列固定宽度
13.2.5　两列宽度自适应
13.2.6　两列右列宽度自适应
13.3　使用CSS设计网站导航栏
13.3.1　实现背景变换的导航菜单
13.3.2　利用CSS制作横向导航
13.4　使用CSS设计表单样式
13.4.1　改变按钮的背景颜色和文字颜色
13.4.2　设计文本框的样式
13.4.3　设计文本框中的文字样式
13.5　字体及段落样式设计
13.5.1　利用CSS控制字体大小和行距
13.5.2　制作光晕文字效果
13.6　使用CSS设计图片样式
13.6.1　鼠标指针移上时图片渐变的效果
13.6.2　设计不重复出现的背景
13.7　使用CSS控制链接样式
13.7.1　使用CSS实现鼠标指针形状改变
13.7.2　鼠标指针移到链接文字上时改变文字大小或颜色
13.8　练习题
第14章　JavaScript脚本基础
14.1　JavaScript简介
14.2　JavaScript基本语法
14.2.1　常量和变量
14.2.2　表达式和运算符
14.2.3　基本语句
14.2.4　函数
14.3　JavaScript的事件
14.3.1　onClick事件
14.3.2　onchange事件
14.3.3　onSelect事件
14.3.4　onFocus事件
14.3.5　onLoad事件
14.3.6　onUnload事件
14.3.7　onBlur事件
14.3.8　onMouseOver事件
14.3.9　onMouseOut事件
14.3.10　onDblClick事件
14.3.11　其他常用事件
14.4　浏览器的内部对象
14.4.1　navigator对象
14.4.2　document对象
14.4.3　windows对象
14.4.4　location对象
14.4.5　history对象
14.5　练习题
第15章　利用JavaScript制作网页特效
15.1　时间特效
15.1.1　显示当前时间
15.1.2　显示当前日期
15.1.3　显示网页停留时间
15.1.4　制作倒计时特效
15.2　图像特效
15.2.1　当鼠标指针经过图像时图像震动效果
15.2.2　图片闪烁效果
15.2.3　自动切换图像
15.3　窗口特效
15.3.1　全屏显示窗口
15.3.2　定时关闭窗口
15.4　鼠标特效
15.4.1　禁止鼠标右击
15.4.2　跟随鼠标指针移动的图像
15.4.3　跟随鼠标指针的滚动字幕
15.5　其他特效
15.5.1　设置为首页和加入收藏夹
15.5.2　浏览器状态栏显示信息
15.5.3　进入网站的口令设置
15.6　练习题
第16章　在Dreamweaver中编辑HTML网页
16.1　Dreamweaver的基本操作界面
16.2　在网页中使用文本
16.2.1　插入文本
16.2.2　设置文本属性
16.2.3　插入特殊字符
16.2.4　插入水平线
16.3　插入图像
16.3.1　在网页中插入图像
16.3.2　设置图像属性
16.3.3　使用图像编辑器
16.3.4　插入鼠标经过图像
16.4　插入多媒体
16.4.1　插入Flash
16.4.2　打开浏览器窗口
16.4.3　插入Java Applet
16.5　设置链接
16.5.1　创建文字链接
16.5.2　创建图像链接
16.5.3　创建锚点链接
16.6　布局网页
16.6.1　使用表格
16.6.2　使用DIV
16.7　使用表单
16.7.1　插入表单
16.7.2　插入文本域
16.7.3　插入单选按钮和复选框
16.7.4　插入菜单和列表
16.7.5　插入跳转菜单
16.7.6　插入按钮
16.8　使用CSS样式表
16.8.1　CSS的基本概念
16.8.2　建立标签样式
16.8.3　建立类样式
16.8.4　建立复合内容样式
16.8.5　应用CSS固定字体大小
16.9　使用行为
16.9.1　行为的基本知识
16.9.2　使用行为制作特效
16.10　在网页中添加脚本
16.11　练习题
第17章　个人博客网站布局
17.1　博客网站概述
17.2　博客网站主页布局设计
17.3　博客网站主页具体制作过程
17.3.1　导入外部CSS
17.3.2　制作网页头部分
17.3.3　制作页面内容部分
17.3.4　制作页面页脚部分
17.4　练习题
第18章　公司宣传网站的布局
18.1　企业网站设计分析
18.1.1　企业网站内容设计
18.1.2　排版构架
18.2　各部分设计
18.2.1　Logo与顶部导航
18.2.2　左侧导航
18.2.3　主体内容
18.2.4　制作搜索部分
18.2.5　制作公司新闻
18.2.6　制作联系我们
18.2.7　底部版权信息
18.3　练习题
附录A　HTML网页制作技巧精讲
技巧1　制作带背景音乐的网页
技巧2　设置每隔一定的时间自动刷新网页
技巧3　提高站点在搜索引擎中被搜索到的机会
技巧4　让站点自动跳转到另一页
技巧5　避免自己的图片被其他站点利用
技巧6　不用表格而准确地分隔图片和文字
技巧7　跳到页面的顶部
技巧8　在一个站点的不同页面播放同一个声音文件
技巧9　清除页面中的框架结构
技巧10　防止站点页面被任意链接
技巧11　为文字链接加上提示
技巧12　删除图片链接的蓝色边框
技巧13　让浏览器正确显示word格式文件
技巧14　利用水平线制作垂直线
技巧15　正确选择JPG和GIF图片格式
技巧16　正确使用分隔线
技巧17　去除页面四周的空白
技巧18　去除浏览器的滚动条
附录B　CSS常用技巧精讲
技巧1　去掉网页超链接的下画线
技巧2　设置浮动背景
技巧3　正确对齐文本
技巧4　超链接访问过后防止hover样式出现问题
技巧5　解决list-style-image无法准确定位的问题
技巧6　让文本垂直居中
技巧7　使一个层垂直居中于浏览器
技巧8　给部分内容加上边框
技巧9　利用CSS去掉下画线
技巧10　让div横向排列
技巧11　巧妙设置滚动条颜色
附录C　JavaScript特效制作精讲
技巧1　添加链接提示
技巧2　在网页中加入最后修改日期
技巧3　实现图片循环隐现的效果
技巧4　给图像添加探照灯效果
技巧5　打开一个新的浏览器窗口并设置窗口的属性
技巧6　利用单击来关闭浏览器窗口
技巧7　禁止保存网页
技巧8　制作网页中雪花飘飘效果
技巧9　在状态栏中显示跑马灯效果
技巧10　制作烟花效果
技巧11　制作状态栏数字时钟
技巧12　制作围绕鼠标指针旋转的文本
技巧13　制作跟随鼠标指针飘动的双层时钟
技巧14　实现每天不同时间显示不同信息
技巧15　禁止鼠标右键和左键对页面的操作
技巧16　实现鼠标指针移上时图片加亮的效果
技巧17　让网页中跳出一个会说话的老人
技巧18　让浏览者知道自己访问网页的次数
技巧19　禁止页面最小化
技巧20　设置网页由中间向外扩大变化
附录D　Dreamweaver常用技巧精讲
技巧1　在Dreamweaver中插入空格
技巧2　在Dreamweaver中设置Flash动画的背景透明
技巧3　在Dreamweaver中准确定位层
技巧4　把别人网页上的背景音乐保存下来
技巧5　使网页在不同分辨率下都全屏铺开
技巧6　在Dreamweaver中给水平线加颜色
技巧7　在网页中实现Flash的全屏播放
技巧8　怎么样让在800×600分辨率下生成的网页在1024×768分辨率下居中显示
技巧9　清除网页中不必要的HTML代码
技巧10　在网页中添加E-mail链接并显示预定的主题
技巧11　在网页中添加电子邮件表单提交
技巧12　防止别人把自己的网页放在框架里
技巧13　巧妙实现两个表格的并排
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML、CSS、JavaScript网页制作从入门到精通
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>数据分析与呈现——使用JavaScript &amp; jQuery
目    录
第Ⅰ部分  数据可视化之美
第1章  数据可视化的世界	3
1.1  将数字带入生活中	3
1.1.1  采集数据	4
1.1.2  可视化数据	4
1.1.3  同时采集和可视化数据	5
1.2  数据可视化的应用	6
1.2.1  在公共部门中的应用	7
1.2.2  在B2B和企业内部的应用	7
1.2.3  B2C的使用	8
1.3  Web专业人士：一直参与其中	9
1.4  可用的技术	10
1.4.1  更快和更优秀的JavaScript处理	10
1.4.2  HTML5的崛起	11
1.4.3  降低实现门槛	12
1.5  小结	13
第2章  分析的基本要点	15
2.1  关键的分析概念	15
2.1.1  平均数和中位数	16
2.1.2  标准偏差	16
2.2  使用采样数据	18
2.2.1  标准偏差变异	18
2.2.2  人均计算	18
2.2.3  误差幅度	19
2.3  使用数据挖掘检测模式	19
2.4  预测未来趋势	20
2.5  小结	22
第3章  构建可视化基础	23
3.1  探索可视化数据的范围	23
3.1.1  图表图元	24
3.1.2  浏览高级可视化	35
3.1.3  蜡烛图	35
3.1.4  气泡图	36
3.1.5  曲面图	37
3.1.6  地图	38
3.1.7  信息图	39
3.2  使用HTML5 Canvas	41
3.3  集成SVG	43
3.4  小结	45
第Ⅱ部分  使用JavaScript进行分析
第4章  集成现有数据	49
4.1  从标准文本文件中读取数据	49
4.1.1  异步工作	50
4.1.2  读取CSV文件	50
4.2  使用XML数据	52
4.2.1  了解XML格式	52
4.2.2  获得XML数据	53
4.2.3  使用XSLT设计样式	55
4.3  显示JSON内容	57
4.3.1  了解JSON语法	57
4.3.2  读取JSON数据	58
4.3.3  异步JSON	59
4.4  小结	62
第5章  以交互方式收集数据	63
5.1  使用HTML5表单控件	63
5.1.1  引入HTML5 输入类型	63
5.1.2  表单部件和数据格式化	64
5.2  最大化移动表单	65
5.2.1  使用上下文键盘	65
5.2.2  样式化移动表单增加可用性	66
5.2.3  移动表单部件	66
5.3  小结	66
第6章  验证数据	69
6.1  服务器端验证和客户端验证	70
6.2  原生HTML5验证	70
6.2.1  原生验证和JavaScript验证	71
6.2.2  了解HTML5验证	71
6.2.3  使用HTML5验证数字	72
6.2.4  必需的字段和最大长度	72
6.2.5  自定义HTML5验证规则	73
6.2.6  自定义HTML5验证消息	73
6.2.7  h5Validate polyfill	74
6.3  jQuery验证引擎	74
6.3.1 了解jQuery验证引擎	75
6.3.2  验证器	75
6.3.3  错误消息	79
6.4  小结	80
第7章  检查和排序数据表	81
7.1  输出基本的表格数据	82
7.1.1  构建表格	82
7.1.2  使用语义表格标记	84
7.1.3  为表格添加标签	88
7.1.4  配置列	89
7.2  确保最大可读性	92
7.2.1  设计表格	93
7.2.2  增加可读性	96
7.2.3  添加动态高亮效果	102
7.3  包含计算	104
7.3.1  使用JavaScript执行计算	108
7.3.2  填充表格	111
7.4  使用DataTables库	112
7.4.1  使用DataTables制作美观的表格	113
7.4.2  使用DataTables排序	116
7.4.3  使用DataTables创建计算列	118
7.5  将数据表关联到图表	120
7.6  小结	132
第8章  在客户端执行统计分析	133
8.1  使用jStat执行统计分析	133
8.1.1  开始使用jStat	134
8.1.2  初步使用Stat	135
8.2  使用Flot渲染概率分布图	136
8.2.1  开始使用Flot	136
8.2.2  渲染正态分布曲线	138
8.3  小结	140
第Ⅲ部分  以编程的方式可视化数据
第9章  浏览绘图工具	143
9.1  创建HTML5画布图表	144
9.1.1  HTML5画布基础知识	144
9.1.2  线性插值	145
9.1.3  简单柱状图	146
9.1.4  实现坐标轴	161
9.1.5  添加动画	169
9.2  使用Google Charts	180
9.2.1  Google Charts API基础知识	180
9.2.2  基本的条形图	181
9.2.3  基本的饼状图	182
9.2.4  使用图表动画	184
9.3  小结	187
第10章  使用Rapha?l构建自定义图表	189
10.1  介绍Rapha?l	190
10.1.1  SVG和画布图表	190
10.1.2  开始使用Rapha?l	190
10.1.3  绘制路径	191
10.1.4  将自定义图形导入到Rapha?l中	192
10.1.5  创建Rapha?l图形动画	194
10.1.6  使用Rapha?l处理鼠标事件	194
10.2  使用gRapha?l	195
10.2.1  创建饼状图	195
10.2.2  创建线形图	196
10.2.3  创建条形图和柱状图	199
10.3  扩展Rapha?l来创建自定义图表	201
10.3.1  创建通用模式	202
10.3.2  绘制弧形	203
10.3.3  将数据处理成可用的值	207
10.3.4  添加鼠标交互性	211
10.3.5  为数据添加标签	213
10.3.6  结束示例	215
10.4  小结	219
第11章  D3简介	221
11.1  开始学习	223
11.1.1  DOM和SVG	224
11.1.2  .select	224
11.1.3  .selectAll	225
11.1.4  .data(又称数据连接)	227
11.1.5  键函数	236
11.1.6  .transition	238
11.1.7  对象不变	240
11.1.8  嵌套选择	242
11.2  D3帮助函数	244
11.2.1  绘制线条	244
11.2.2  缩放	246
11.3  D3帮助布局	248
11.4  小结	251
第12章  使用符号	253
12.1  通过D3使用SVG符号	254
12.1.1  创建D3线形表	254
12.1.2  在线形表中添加符号	259
12.1.3  使符号变得可交互	260
12.2  通过Ignite UI igDataChart使用画布符号	264
12.2.1  使用Ignite UI igDataChart创建线形图	264
12.2.2  为图表添加符号	269
12.2.3  创建气泡图	272
12.3  小结	276
第13章  映射全局、区域和局部数据	277
13.1  使用Google Maps	278
13.1.1  映射可视化的基础知识	278
13.1.2  Google Maps API v3	279
13.2  使用标记自定义地图	282
13.2.1  显示地图标记	283
13.2.2  准备将要绘制在地图上的数据	284
13.2.3  使用标记绘制点数据	288
13.2.4  使用标记区域绘制一个额外的统计信息	291
13.2.5  使用热度地图显示数据密度	295
13.3  在分级统计图中绘制数据	298
13.3.1  获取几何图形绘制在地图上	299
13.3.2  使用Topojson转换几何图形用于显示	300
13.3.3  使用D3渲染地图几何图形	301
13.3.4  使用分级统计地图显示统计信息	303
13.4  小结	310
第14章  使用Ignite UI igDataChart 绘制时间系列	311
14.1  使用股票数据	312
14.1.1  股票数据基础知识	312
14.1.2  获取一些股票数据	313
14.1.3  蜡烛图和OHLC(收市价图)	313
14.2  实现Ignite UI igDataChart	315
14.2.1  获取Ignite UI	316
14.2.2  使用igDataChart实现股票图	316
14.2.3  为图表添加缩放栏	325
14.2.4  添加同步图表	327
14.2.5  使用技术分析工具	329
14.3  绘制实时数据	330
14.3.1  创建一个节点推送数据服务	331
14.3.2  在客户端接收更新	335
14.3.3  浏览更新渲染技术	341
14.4  绘制海量数据	343
14.5  小结	348
第Ⅳ部分  交互式分析和可视化项目
第15章  构建一个内部相互连接的仪表盘	351
15.1  美国人口普查API	352
15.2  渲染图表	353
15.2.1  性别图表	353
15.2.2  种族图表	355
15.2.3  家庭规模图表	357
15.2.4  家庭不动产占有图表	358
15.2.5  年龄性别图表	359
15.2.6  人口历史图表	364
15.3  创建仪表盘	366
15.3.1  基本标记和样式	366
15.3.2  响应层	369
15.4  使用Backbone连接组件	370
15.4.1  创建模型和集合	371
15.4.2  将图表标记转换成JavaScript模板	372
15.4.3  创建州下拉菜单	374
15.4.4  渲染州的变化	376
15.5  下一步	392
15.5.1  在重置大小时重新渲染	392
15.5.2  其他改进	392
15.6  小结	392
第16章  D3实践	395
16.1  使D3看起来更完美	396
16.1.1  内嵌样式与CSS	396
16.1.2  外边距	396
16.1.3  排序	397
16.1.4  指针事件	398
16.1.5  清晰边缘	398
16.2  使用坐标轴	399
16.3  使用Voronoi地图	403
16.3.1  基本的Voronoi地图	403
16.3.2  Voronoi点选择	406
16.4  制作可重用的可视化	409
16.5  小结	416

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>数据分析与呈现——使用JavaScript &amp; jQuery
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript宝典
目    录

第I部分  JavaScript入门
第1章  JavaScript在万维网和其他领域所起的作用	3
1.1  Web流量的竞争	4
1.2  其他Web技术	4
1.2.1  超文本标记语言(HTML和
XHTML)	5
1.2.2  CSS	7
1.2.3  服务器编程	7
1.2.4  辅助程序和插件程序	8
1.3  JavaScript是一门综合性语言	9
1.3.1  LiveScript蜕变成JavaScript	10
1.3.2  微软的JavaScript版本	10
1.3.3  JavaScript版本	10
1.3.4  核心语言标准ECMAScript	11
1.4  JavaScript：灵活易用的工具	12
第2章  脚本开发策略	13
2.1  浏览器的竞争	13
2.2  相互包容	14
2.3  当今存在的兼容性问题	14
2.3.1  将核心JavaScript语言从文档
对象中独立出来	15
2.3.2  核心语言标准	15
2.3.3  文档对象模型	16
2.3.4  通过标记打下良好的基础	17
2.3.5  层叠样式表	17
2.3.6  标准兼容模式(DOCTYPE
转换)	18
2.3.7  动态HTML和定位	19
2.4  开发脚本编写策略	19
2.4.1  功能降低和渐进增强	19
2.4.2  开发层的分离	20
2.4.3  延伸阅读	21
第3章  选择和使用工具	23
3.1  软件工具	23
3.1.1  选择文本编辑器	23
3.1.2  选择浏览器	24
3.2  建立编写环境	24
3.2.1  Windows	25
3.2.2  Mac OS X	25
3.2.3  重载问题	26
3.3  验证	26
3.4  创建第一个脚本	27
3.4.1  第一步：静态HTML	27
3.4.2  第二步：连接JavaScript	28
3.4.3  第三步：用CSS指定样式	29
第4章  JavaScript基础	31
4.1  合并JavaScript和HTML	31
4.1.1  <script>标记	31
4.1.2  旧式内联JavaScript	35
4.1.3  容纳不支持JavaScript的用户
代理	35
4.1.4  隐藏脚本	39
4.1.5  给不同的浏览器编写脚本	40
4.2  兼容性设计	44
4.2.1  处理beta版浏览器	44
4.2.2  参考章节中的兼容性等级	45
4.3  资深程序员的语言基础	46
第Ⅱ部分  JavaScript教程
第5章  第一个JavaScript脚本	53
5.1  第一个脚本的功能	53
5.2  输入第一个脚本	54
5.2.1  第一步：HTML文档	54
5.2.2  第二步：添加JavaScript	57
5.2.3  第三步：添加样式	63
5.3  进行改动	65
5.4  习题	65
第6章  浏览器对象和文档对象	67
6.1  脚本运行初步	67
6.2  使用JavaScript的场合	68
6.3  文档对象模型	69
6.3.1  HTML结构和DOM	69
6.3.2  浏览器窗口中的DOM	70
6.4  文档的载入	71
6.4.1  简单文档	72
6.4.2  添加段落元素	72
6.4.3  添加段落文本	72
6.4.4  生成新元素	73
6.5  对象引用	73
6.5.1  对象命名	74
6.5.2  引用特定对象	74
6.6  节点术语	75
6.6.1  节点	75
6.6.2  父子节点	76
6.7  对象的定义	76
6.7.1  属性	76
6.7.2  方法	77
6.7.3  事件	79
6.8  习题	80
第7章  脚本和HTML文档	83
7.1  把脚本连接到文档上	83
7.1.1  script标记的位置	84
7.1.2  非JavaScript的浏览器和
XHTML	85
7.2  JavaScript语句	86
7.3  脚本语句的执行时间	87
7.3.1  文档载入时即刻执行	87
7.3.2  延时脚本	88
7.4  查找脚本错误	90
7.5  脚本和编程	91
7.6  习题	92
第8章  程序设计基础(一)	93
8.1  JavaScript语言	93
8.2  处理信息	93
8.3  变量	94
8.3.1  创建变量	94
8.3.2  变量的命名	95
8.4  表达式和求值	95
8.4.1  脚本中的表达式	96
8.4.2  表达式和变量	97
8.5  数据类型转换	97
8.5.1  将字符串转换成数值	98
8.5.2  将数字转换成字符串	99
8.6  操作符	99
8.6.1  算术操作符	99
8.6.2  比较操作符	100
8.7  习题	100
第9章  程序设计基础(二)	103
9.1  决策和循环	103
9.2  控制结构	103
9.2.1  if结构	104
9.2.2  if ... else结构	104
9.3  重复循环	105
9.4  函数	106
9.4.1  函数的参数	107
9.4.2  变量的作用域	108
9.5  大括号	109
9.6  数组	110
9.6.1  创建数组	110
9.6.2  访问数组的数据	111
9.6.3  关联数组	111
9.6.4  数组中的document对象	113
9.7  习题	114
第10章  window和document对象	115
10.1  顶层对象	115
10.2  window对象	115
10.2.1  访问窗口的属性和方法	116
10.2.2  创建窗口	117
10.3  window对象的属性和方法	119
10.3.1  window.alert()方法	119
10.3.2  window.confirm()方法	119
10.3.3  window.prompt()方法	120
10.3.4  load事件	120
10.4  location对象	121
10.5  navigator对象	122
10.6  document对象	122
10.6.1  document.getElementById()
方法	123
10.6.2  document.getElementsByTag
Name()方法	123
10.6.3  document.forms[ ]属性	124
10.6.4  document. images[ ]属性	124
10.6.5  document.createElement()和
document.createTextNode()
方法	125
10.6.6  document.write()方法	126
10.7  习题	130
第11章  表单和表单元素	131
11.1  form对象	131
11.1.1  将表单作为对象和容器	133
11.1.2  访问表单属性	134
11.1.3  form.elements[ ]属性	135
11.2  将表单控件作为对象	136
11.2.1  与文本相关的输入对象	136
11.2.2  按钮输入对象	139
11.2.3  复选框输入对象	139
11.2.4  单选输入对象	141
11.2.5  select对象	143
11.3  用this向函数传递元素	146
11.4  提交和预验证表单	149
11.5  习题	152
第12章  String、Math和Date对象	155
12.1  核心语言对象	155
12.2  String对象	155
12.2.1  连接字符串	156
12.2.2  字符串方法	157
12.3  Math对象	159
12.4  Date对象	160
12.5  日期计算	161
12.6  习题	163
第13章  编写框架和多窗口脚本	165
13.1  框架：父框架和子框架	165
13.2  家庭成员之间的引用	167
13.2.1  父到子的引用	167
13.2.2  子到父的引用	167
13.2.3  子到子的引用	168
13.3  有关框架脚本编程的提示	168
13.4  iframe元素简介	169
13.5  突出显示脚注：框架集脚本
示例		169
13.6  多窗口引用	175
13.7  习题	178
第14章  图像和动态HTML	181
14.1  image对象	181
14.1.1  可互换的图像	182
14.1.2  图像的预缓存	182
14.1.3  图像变换的创建	184
14.2  无需脚本的图像变换	189
14.3  JavaScript：伪URL	192
14.4  主流的动态HTML技术	193
14.4.1  样式表设置的修改	193
14.4.2  通过W3C DOM节点实现
动态内容	193
14.4.3  通过innerHTML属性实现
动态内容	194
14.5  习题	194
第Ⅲ部分  JavaScript核心语言参考
第15章  String对象	199
15.1  字符串以及数值数据类型	199
15.1.1  简单字符串	199
15.1.2  建立长字符串变量	200
15.1.3  连接字符串字面量和
变量	200
15.1.4  特殊的内嵌字符	201
15.2  String对象	202
15.2.1  语法	202
15.2.2  关于String对象	203
15.2.3  属性	204
15.2.4  解析方法	207
15.3  字符串使用函数	231
15.4  URL字符串编码及解码	236
第16章  Math、Number和Boolean
对象		237
16.1  JavaScript中的数值	237
16.1.1  整数和浮点数	237
16.1.2  十六进制和八进制整数	240
16.1.3  将字符串转换成数值	241
16.1.4  将数值转换成字符串	242
16.1.5  数值不是数值型时	243
16.2  Math对象	243
16.2.1  语法	243
16.2.2  关于Math对象	243
16.2.3  属性	244
16.2.4  方法	244
16.2.5  创建随机数	245
16.2.6  Math对象的快捷引用	246
16.3  Number对象	246
16.3.1  语法	247
16.3.2  关于Number对象	247
16.3.3  属性	247
16.3.4  方法	248
16.4  Boolean对象	250
16.4.1  语法	250
16.4.2  关于Boolean对象	250
第17章  Date对象	251
17.1  时区和GMT	251
17.2  Date对象	252
17.2.1  创建date对象	253
17.2.2  内部对象的属性和方法	254
17.2.3  日期方法	254
17.2.4  处理时区	257
17.2.5  字符串日期	257
17.2.6  用于以前浏览器的日期
格式	258
17.2.7  更多转换	259
17.2.8  日期和时间运算	260
17.2.9  计算天数	262
17.2.10  早期浏览器中日期的错误
和漏洞	266
17.3  在表单中验证日期项	267
第18章  Array对象	273
18.1  结构化的数据	273
18.2  创建空数组	274
18.3  填充数组	274
18.4  JavaScript数组创建功能的
增强		276
18.5  删除数组项	276
18.6  并行数组	277
18.7  多维数组	281
18.8  模拟Hash表	282
18.9  Array对象的属性和方法	284
18.9.1  Array对象属性	285
18.9.2  Array对象的方法	286
18.10  数组包含	311
18.11  解构赋值	312
18.12  与旧浏览器的兼容性	313
第19章  JSON — Native JavaScript
Object Notation	315
19.1  JSON的工作原理	315
19.2  收发JSON数据	317
19.3  JSON 对象	318
19.4  安全限制	319
第20章  E4X — Native XML
Processing	321
20.1  XML	321
20.2  ECMAScript for XML
(E4X)	322
20.2.1  使用XML对象	322
20.2.2  在HTML中嵌入E4X	328
20.2.3  方法	328
第21章  控制结构和异常处理	331
21.1  if和if...else判定语句	331
21.1.1  简单判定	331
21.1.2  (condition)表达式	332
21.1.3  复杂判定语句	333
21.1.4  嵌套的if…else语句	334
21.2  条件表达式	336
21.3  switch语句	337
21.4  重复(for)循环	340
21.4.1  使用循环计数器	342
21.4.2  跳出循环	343
21.4.3  使用continue继续循环	344
21.5  while循环	345
21.6  do-while循环	346
21.7  遍历属性(for-in)	346
21.8  with语句	348
21.9  标签语句	349
21.10  异常处理	352
21.10.1  异常及错误	352
21.10.2  异常机制	353
21.11  使用try-catch-finally结构	353
现实的异常	356
21.12  抛出异常	356
21.13  error对象	361
21.13.1  语法	361
21.13.2  关于error对象	362
21.13.3  属性	362
21.13.4  方法	363
第22章  JavaScript操作符	365
22.1  操作符的类别	365
22.2  比较操作符	366
22.3  不同数据类型的相等比较	367
22.4  结合操作符	369
22.5  赋值操作符	371
22.6  布尔操作符	373
22.6.1  布尔运算	374
22.6.2  使用布尔操作符	375
22.7  按位操作符	377
22.8  对象操作符	377
22.9  其他操作符	382
22.10  操作符的优先级	384
第23章  函数和自定义对象	387
23.1  Function对象	387
23.1.1  语法	387
23.1.2  关于Function对象	388
23.1.3  创建函数	388
23.1.4  嵌套函数	389
23.1.5  函数的参数	390
23.1.6  属性	391
23.1.7  方法	395
23.2  函数应用的注意事项	396
23.2.1  调用函数	396
23.2.2  变量的作用域：全局作用域
还是局部作用域	397
23.2.3  参数变量	401
23.2.4  递归函数	402
23.2.5  创建函数库	403
23.2.6  封闭区间	404
23.3  使用面向对象的JavaScript创建
自定义对象	406
23.3.1  对象的具体细节	407
23.3.2  OO例子：行星对象	409
23.3.3  进一步的封装	412
23.3.4  创建对象数组	412
23.3.5  利用嵌套对象	414
23.3.6  创建对象的最新方法	415
23.3.7  定义对象属性的提取器和
设置器	415
23.4  面向对象的概念	416
23.4.1  增加原型	417
23.4.2  原型继承	418
23.4.3  嵌套对象和原型继承	418
23.5  Object对象	420
23.5.1  语法	420
23.5.2  关于该对象	421
23.5.3  属性	422
23.5.4  方法	423
第24章  全局函数和语句	425
24.1  函数	426
24.2  语句	435
24.3  WinIE对象	438
24.3.1  ActiveXObject	438
24.3.2  Dictionary	439
24.3.3  Enumerator	440
24.3.4  VBArray	441
第Ⅳ部分  文档对象参考
第25章  文档对象模型基础	445
25.1  对象模型层次结构	445
25.1.1  作为路径图的层次结构	446
25.1.2  第一个浏览器文档对象
路径图	446
25.2  产生文档对象的过程	447
25.3  对象的属性	448
25.4  对象的方法	449
25.5  对象事件处理程序	450
25.6  对象模型概述	451
25.7  基本对象模型	452
25.8  附加图像的基本对象模型	452
25.9  仅用于Navigator 4的扩展	453
25.9.1  事件捕获模型	453
25.9.2  层	453
25.10  Internet Explorer 4+扩展	454
25.10.1  HTML元素对象	454
25.10.2  元素包含层次结构	454
25.10.3  层叠样式表	455
25.10.4  事件冒泡	456
25.11  Internet Explorer 5+扩展	456
25.12  W3C DOM	457
25.12.1  DOM层	457
25.12.2  规范中恒定不变的
部分	458
25.12.3  W3C DOM不具备的
特性	458
25.12.4  新的HTML惯例	459
25.12.5  新DOM概念	459
25.12.6  W3C DOM的静态HTML
对象	467
25.12.7  双向事件模型	469
25.13  脚本编程的发展趋势	470
25.13.1  将内容与脚本分离	470
25.13.2  尽量使用W3C DOM	471
25.13.3  处理事件	471
25.14  标准兼容模式(DOCTYPE
切换)		472
25.15  小结	473
第26章  通用HTML元素对象	475
第27章  window对象和frame
对象		657
27.1  window对象术语	657
27.2  框架	658
27.2.1  创建框架	658
27.2.2  框架对象模型	658
27.2.3  引用框架	660
27.2.4  top和parent	660
27.2.5  防止在其他Web站点的框架
中显示自己的页面	660
27.2.6  确认页面载入框架集	661
27.2.7  从有框架转换为无框架	661
27.2.8  继承性和封装性	661
27.2.9  框架的同步	662
27.2.10  空白框架	662
27.2.11  查看框架源代码	663
27.2.12  框架和frame元素对象	663
27.3  window对象属性	663
27.3.1  语法	665
27.3.2  关于window对象	665
27.3.3  属性	667
27.3.4  方法	700
27.3.5  事件处理程序	754
27.4  frame元素对象	759
27.4.1  语法	759
27.4.2  关于frame对象	759
27.4.3  属性	760
27.5  frameset元素对象	765
27.5.1  语法	765
27.5.2  关于frameset对象	766
27.5.3  属性	767
27.6  iframe元素对象	771
27.6.1  语法	771
27.6.2  关于iframe对象	772
27.6.3  属性	772
27.7  popup对象	776
27.7.1  语法	776
27.7.2  关于popup对象	777
27.7.3  属性	777
27.7.4  方法	778
第28章  location对象和history
对象		781
28.1  location对象	781
28.1.1  语法	782
28.1.2  关于location对象	782
28.1.3  属性	784
28.1.4  方法	795
28.2  history对象	798
28.2.1  语法	798
28.2.2  关于history对象	798
28.2.3  属性	799
28.2.4  方法	800
第29章  document对象和body
对象		805
29.1  document对象	806
29.1.1  语法	808
29.1.2  关于document对象	808
29.1.3  属性	809
29.1.4  方法	848
29.1.5  事件处理程序	870
29.2  body元素对象	871
29.2.1  语法	872
29.2.2  关于body对象	872
29.2.3  属性	873
29.2.4  方法	877
29.2.5  事件处理程序	879
29.3  TreeWalker对象	879
29.3.1  语法	879
29.3.2  关于TreeWalker对象	879
29.3.3  属性	880
29.3.4  方法	881
第30章  link和anchor对象	883
第31章  image、area、map和
canvas对象	891
31.1  image和img元素对象	891
31.1.1  语法	892
31.1.2  关于image对象	893
31.1.3  属性	894
31.1.4  事件处理程序	908
31.2  area元素对象	910
31.2.1  语法	910
31.2.2  关于area对象	911
31.2.3  属性	912
31.3  map元素对象	913
31.3.1  语法	914
31.3.2  关于map对象	914
31.3.3  属性	914
31.4  canvas元素对象	917
31.4.1  语法	918
31.4.2  关于canvas对象	918
31.4.3  属性	921
31.4.4  方法	923
第32章  event对象	927
32.1  事件	927
32.1.1  事件的内容和事件发生
时间	928
32.1.2  静态event对象	928
32.2  事件传播	929
32.2.1  仅用于NN4的事件传播	929
32.2.2  IE4+事件传播	931
32.2.3  W3C事件传播	935
32.3  引用事件对象	941
32.4  绑定事件	942
32.4.1  使用标记特性绑定事件	942
32.4.2  使用对象特性绑定事件	943
32.4.3  使用IE附加功能绑定
事件	944
32.4.4  通过W3C监听器绑定
事件	944
32.4.5  跨浏览器的事件绑定解决
方案	945
32.5  事件对象兼容性	946
32.6  事件模型详析	948
32.6.1  以跨平台方式检查
修改键	948
32.6.2  以跨平台方式捕获按键	950
32.7  事件类型	951
32.7.1  IE4+和NN6+/W3C中的事件
类型	952
32.7.2  语法	954
32.7.3  关于event对象	955
32.7.4  属性	955
32.8  NN6+/Moz的event对象	974
32.8.1  语法	975
32.8.2  关于event对象	975
32.8.3  属性	976
32.8.4  方法	994
附录A  JavaScript和浏览器对象快速
参考		997
附录B  本书配套光盘内容	1011
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript宝典
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript编程起步
第1章　JavaScript简介
1. 1　学习本书所需的基本知识
1. 1. 1　HTML（超文本标记语言）的基本知识
1. 1. 2　文本编辑器和Web浏览器的基本知识
1. 1. 3　JavaScript语言的不同版本

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript编程起步
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>高性能网站建设进阶指南
致谢	I
前言	III
第1章：理解Ajax性能	1
1.1 权衡	1
1.2 优化原则	2
1.3 Ajax	4
1.4 浏览器	4
1.5 哇！	5
1.6 JavaScript	6
1.7 总结	6
第2章：创建快速响应的Web应用	7
2.1 怎样才算足够快	9
2.2 测量延迟时间	10
2.2.1 当延迟变得很严重时	12
2.3 线程处理	12
2.4 确保响应速度	13
2.4.1 Web Workers	14
2.4.2 Gears	14
2.4.3 定时器	16
2.4.4 内存使用对响应时间的影响	17
2.4.5 虚拟内存	18
2.4.6 内存问题的疑难解答	18
2.5 总结	19
第3章：拆分初始化负载	21
3.1 全部加载	21
3.2 通过拆分来节省下载量	22
3.3 寻找拆分	23
3.4 未定义标识符和竞争状态	24
3.5 个案研究：Google日历	25
第4章：无阻塞加载脚本	27
4.1 脚本阻塞并行下载	27
4.2 让脚本运行得更好	29
4.2.1 XHR Eval	29
4.2.2 XHR注入	31
4.2.3 Script in Iframe	31
4.2.4 Script DOM Element	32
4.2.5 Script Defer	32
4.2.6 document.write Script Tag	33
4.3 浏览器忙指示器	33
4.4 确保（或避免）按顺序执行	35
4.5 汇总结果	36
4.6 最佳方案	38
第5章：整合异步脚本	41
5.1 代码示例：menu.js	42
5.2 竞争状态	44
5.3 异步加载脚本时保持执行顺序	45
5.3.1 技术1：硬编码回调（Hardcoded Callback）	46
5.3.2 技术2：Window Onload	47
5.3.3 技术3：定时器（Timer）	48
5.3.4 技术4：Script Onload	49
5.3.5 技术5：降级使用script标签（Degrading Script Tags）	50
5.4 多个外部脚本	52
5.4.1 Managed XHR	52
5.4.2 DOM Element和Doc Write	56
5.5 综合解决方案	59
5.5.1 单个脚本	59
5.5.2 多个脚本	60
5.6 现实互联网中的异步加载	63
5.6.1 Google分析和Dojo	63
5.6.2 YUI Loader	65
第6章：布置行内脚本	69
6.1 行内脚本阻塞并行下载	69
6.1.1 把行内脚本移至底部	70
6.1.2 异步启动执行脚本	71
6.1.3 使用script的defer属性	73
6.2 保持CSS和JavaScript的执行顺序	73
6.3 风险：把行内脚本放置在样式表之后	74
6.3.1 大部分下载都不阻塞行内脚本	74
6.3.2 样式表阻塞行内脚本	75
6.3.3 问题确曾发生	77
第7章：编写高效的JavaScript	79
7.1 管理作用域	79
7.1.1 使用局部变量	81
7.1.2 增长作用域链	83
7.2 高效的数据存取	85
7.3 流控制	88
7.3.1 快速条件判断	89
7.3.2 快速循环	93
7.4 字符串优化	99
7.4.1 字符串连接	99
7.4.2 裁剪字符串	100
7.5 避免运行时间过长的脚本	102
7.5.1 使用定时器挂起	103
7.5.2 用于挂起的定时器模式	105
7.6 总结	107
第8章：可伸缩的Comet	109
8.1 Comet工作原理	109
8.2 传输技术	111
8.2.1 轮询	111
8.2.2 长轮询	112
8.2.3 永久帧	113
8.2.4 XHR流	115
8.2.5 传输方式的前景	116
8.3 跨域	116
8.4 在应用程序上的执行效果	118
8.4.1 连接管理	118
8.4.2 测量性能	119
8.4.3 协议	119
8.5 总结	120
第9章：超越Gzip压缩	121
9.1 这为什么很重要	121
9.2 问题的根源	123
9.2.1 快速回顾	123
9.2.2 罪魁祸首	123
9.2.3 流行的乌龟窃听者实例	124
9.3 如何帮助这些用户	124
9.3.1 设计目标：最小化未压缩文件的尺寸	125
9.3.2 引导用户	129
9.3.3 对Gzip的支持进行直接探测	130
第10章：图像优化	133
10.1 两步实现简单图像优化	134
10.2 图像格式	135
10.2.1 背景	135
10.2.2 不同图像格式的特性	137
10.2.3 PNG的更多资料	139
10.3 自动无损图像优化	141
10.3.1 优化PNG格式的图像	142
10.3.2 剥离JPEG的元数据	143
10.3.3 将GIF转换成PNG	144
10.3.4 优化GIF动画	144
10.3.5 Smush.it	145
10.3.6 使用渐进JPEG格式来存储大图像	145
10.4 Alpha透明：避免使用AlphaImageLoader	146
10.4.1 Alpha透明度的效果	147
10.4.2 AlphaImageLoader	149
10.4.3 AlphaImageLoader的问题	150
10.4.4 渐进增强的PNG8 Alpha透明	151
10.5 优化Sprite	153
10.5.1 超级Sprite VS.模块化Sprite	154
10.5.2 高度优化的CSS Sprite	155
10.6 其他图像优化方法	155
10.6.1 避免对图像进行缩放	155
10.6.2 优化生成的图像	156
10.6.3 Favicons	157
10.6.4 Apple触摸图标	158
10.7 总结	159
第11章：划分主域	161
11.1 关键路径	161
11.2 谁在划分主域	163
11.3 降级到HTTP/1.0	165
11.4 域划分的扩展话题	168
11.4.1 IP地址和主机名	168
11.4.2 多少个域	168
11.4.3 如何划分资源	168
11.4.4 新型浏览器	169
第12章：尽早刷新文档的输出	171
12.1 刷新文档头部的输出	171
12.2 输出缓冲	173
12.3 块编码	175
12.4 刷新输出和Gzip压缩	176
12.5 其他障碍	177
12.6 刷新输出时的域阻塞	178
12.7 浏览器：最后的障碍	178
12.8 不借助PHP进行刷新输出	179
12.9 刷新输出问题清单	180
第13章：少用iframe	181
13.1 开销最高的DOM元素	181
13.2 iframe阻塞onload事件	182
13.3 使用iframe并行下载	184
13.3.1 脚本位于iframe之前	184
13.3.2 样式表位于iframe之前	185
13.3.3 样式表位于iframe之后	186
13.4 每个主机名的连接	187
13.4.1 iframe中的连接共享	187
13.4.2 跨标签页和窗口的连接共享	188
13.5 总结使用iframe的开销	190
第14章：简化CSS选择符	191
14.1 选择符的类型	191
14.1.1 ID选择符	192
14.1.2 类选择符	193
14.1.3 类型选择符	193
14.1.4 相邻兄弟选择符	193
14.1.5 子选择符	193
14.1.6 后代选择符	193
14.1.7 通配选择符	194
14.1.8 属性选择符	194
14.1.9 伪类和伪元素	194
14.2 高效CSS选择符的关键	194
14.2.1 最右边优先	195
14.2.2 编写高效的CSS选择符	195
14.3 CSS选择符性能	197
14.3.1 复杂的选择符影响性能（有时）	197
14.3.2 应避免使用的CSS选择符	200
14.3.3 回流时间	201
14.4 在现实中测量CSS选择符	202
附录：性能工具	205
索引	221
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>高性能网站建设进阶指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Web前端工程师修炼之道(原书第4版)
前言
第一部分开始起步
第1章我从哪里开始
我该从哪里开始呢
Web设计师是做什么的
我需要学习哪些语言
我需要购买些什么
你学会了什么
自我测验
第2章Web是如何工作的
互联网与Web
提供你的信息
关于浏览器
网页地址（URL）
网页结构
小结
自我测验
第3章Web设计基本概念
眼花缭乱的设备
与标准一致
逐步提高
自适应Web设计
可访问性——所有用户，一个网站
连接速度的要求（站点性能）
自我测验
第二部分HTML结构化标记
第4章创建简单网页（HTML概述）
一个网页，一步一步来
开始之前，启动文本编辑器
第1步：从内容开始
第2步：文档结构化
第3步：确定文本元素
第4步：添加图像
第5步：使用样式表改变外观
当网页出错时
验证你的文档
自我测验
元素回顾：文档结构
第5章标记文本
段落
标题
列表
更多内容元素
组织网页内容
内联元素综述
泛型元素（div和span）
特殊字符
小结
自我测验
元素回顾：文本
第6章添加链接
href耐特性
链接到Web上的网页
站内链接
以新浏览器窗口为目标
邮件链接
电话链接
自我测验
元素回顾：链接
第7章添加图片
首先，关于图片格式的信息
img元素
窗口中的窗口
自我测验
元素回顾：图片
第8章表格标记
如何使用表格
量小表结构
表头
合并单元格
表格可达性
小结
自我测验
元素回顾：表格
第9章表单
裹单如何工作
表单元素
变量和内容
重要表单控件综述
表格的可访问性
表单布局和设计
自我测验
元素回顾：表单
第10章HTML5
在通往XHTML 2的路上发生的有趣的事
标记部分
遇到API
视频与音频
canvas
小结
自我检测
第三部分表现层的CSS
第11章CSS入门
CSS的益处
样式表如何工作
大概念
继续使用CSS
自我测验
第12章格式化文本（使用更多选择器）
字体属性
改变文本颜色
更多选择器类型
字行设置
下划线和其他的“修饰”
改变字母大写
空格
文本阴影
改变列表的数字编号
自我测验
CSS回顾：字体和文本属性
……
第13章颜色和背景（附加更多选择器和外部样式表）
第14章盒子思想（填充、边框和空白边）
第15章浮动与定位
第16章使用CSS进行网页布局
第17章过渡、变换和动画
第18章CSS技术
第四部分JavaScript行为
第19章JavaScript简介
第20章使用JavaScript
第五部分创建Web图像
第21章Web图像基础
第22章精简Web图像
附录A答案
附录BCSS3选择器
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Web前端工程师修炼之道(原书第4版)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>同构JavaScript应用开发
前言 ix
第一部分　简介与关键概念
第1章　为什么需要同构JavaScript 2
1.1　定义同构JavaScript 3
1.2　评价其他的Web应用架构方案 3
1.2.1　状况的改变 3
1.2.2　工程上的关注点 4
1.2.3　可选架构 4
1.3　附加说明：何时不使用同构 10
1.4　小结 11
第2章　同构JavaScript图谱 12
2.1　共享视图 13
2.1.1　共享模板 14
2.1.2　共享视图逻辑 14
2.2　共享路由 14
2.3　共享模型 15
2.4　小结 15
第3章　同构JavaScript分类 16
3.1　与环境无关的代码 18
3.2　为每个特定环境提供shim 19
3.3　小结 20
第4章　超越服务器端的渲染 21
4.1　实时Web应用 22
4.1.1　同构API 23
4.1.2　双向数据同步 23
4.1.3　在服务器端进行客户端仿真 23
4.2　小结 24
第二部分　构建第一个应用
第5章　起步 26
5.1　Node的安装和运行 27
5.1.1　从源码安装 27
5.1.2　与Node REPL交互 28
5.1.3　使用npm 管理项目 28
5.2　建立应用项目 29
5.2.1　初始化项目 29
5.2.2　安装应用服务器 31
5.2.3　编写下一代的JavaScript（ES6） 32
5.2.4　将ES6编译为ES5 34
5.2.5　建立开发流程 35
5.3　小结 39
第6 章　提供第一份HTML文档 40
6.1　提供HTML模板 40
6.2　使用路径参数与查询参数 42
6.3　小结 45
第7章　设计应用架构 46
7.1　理解问题 47
7.2　响应用户请求 47
7.2.1　创建Application类 47
7.2.2　创建控制器 49
7.2.3　构造控制器实例 50
7.2.4　拓展控制器 52
7.2.5　改进响应流 53
7.3　小结 57
第8章　将应用传输到客户端 58
8.1　打包应用的客户端版本 58
8.1.1　选择打包库 58
8.1.2　创建打包任务 59
8.1.3　添加客户端实现 61
8.2　响应用户请求 62
8.2.1　利用History API 63
8.2.2　响应并调用History　API 63
8.3　客户端路由 67
8.4　组织代码 73
8.5　小结 75
第9章　创建常用的抽象 76
9.1　何时抽象，为什么需要抽象 76
9.2　获取和设置cookie 77
9.3　重定向请求 84
9.4　小结 88
第10章　序列化、反序列化和添加事件监听 89
10.1　序列化数据 90
10.2　创建控制器实例 92
10.3　反序列化数据 93
10.4　添加DOM事件处理器 94
10.5　验证rehydration过程 96
10.6　小结 98
第11章　结束感言 99
11.1　生产准备 99
11.2　衡量架构 99
11.3　小结 102
第三部分　现实世界的解决方案
第12章　沃尔玛实验室的同构React.js方案 104
12.1　物种起源 104
12.1.1　问题 105
12.1.2　解决方案 106
12.2　React模板与模式 106
12.2.1　在服务器端渲染 106
12.2.2　在客户端恢复 110
12.3　沃尔玛采用的方法 112
12.4　克服挑战 112
12.4.1　首字节时间 112
12.4.2　组件渲染优化 113
12.4.3　性能提升 117
12.5　下一步 119
12.6　感谢 120
12.7　补充说明 120
第13章　全栈Angular 121
13.1　同构JavaScript：Web应用的未来 122
13.2　同构Angular 1 122
13.3　Angular 2服务器端渲染 124
13.3.1　服务器端渲染的用例 124
13.3.2　Web 应用脱节 126
13.3.3　Angular 2渲染架构 127
13.3.4　Preboot 128
13.4　Angular Universal 128
13.5　GetHuman.com 130
13.6　补充说明 131
第14章　Brisket 132
14.1　问题 132
14.2　两全其美 134
14.3　早期Brisket 135
14.4　成为现实 136
14.5　代码自由 136
14.6　跨环境一致的API 139
14.6.1　模型/ 集合 140
14.6.2　视图生命周期 140
14.6.3　子视图管理 141
14.6.4　跨环境使用的工具 141
14.7　前进之路 142
14.7.1　ClientApp与ServerApp 142
14.7.2　布局模板 142
14.7.3　其他经验教训 143
14.8　Brisket的下一步？ 143
14.9　补充说明 144
第15章　Colony案例研究：脱离Node创建同构应用 145
15.1　问题 145
15.2　模板 146
15.3　数据 147
15.4　转译视图模型 148
15.5　布局 150
15.6　页面生成器 152
15.7　前端SPA 152
15.8　最终架构 153
15.9　后续计划 154
第16 章　结语 155
16.1　设计模式、Flux和同构JavaScript家族 155
16.1.1　永远相信JavaScrip 156
16.1.2　命名与理解 157
关于作者 159
关于封面 159
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>同构JavaScript应用开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript程序设计
第1章　计算的概念　　1
1.1　计算是一门自然科学　　1
1.2　计算的五大学科　　2
1.2.1　计算机科学　　2
1.2.2　软件工程　　2
1.2.3　计算机工程　　2
1.2.4　信息技术　　3
1.2.5　信息系统　　3
1.3　与计算相关的职业　　3
1.4　关于计算的误解　　4
1.5　本章小结　　5
1.6　练习　　5
第2章　编程　　7
2.1　学习编程　　7
2.2　基本概念　　7
2.2.1　浏览器地址栏　　8
2.2.2　运行器页面　　8
2.2.3　交互式命令行　　10
2.2.4　文件　　12
2.3　程序的构成　　16
2.3.1　表达式　　16
2.3.2　变量　　17
2.3.3　语句　　20
2.4　编程惯例　　21
2.4.1　注释　　21
2.4.2　编码约定　　22
2.4.3　代码质量检查工具　　23
2.5　JavaScript编程语言　　24
2.6　本章小结　　24
2.7　练习　　25
第3章　数据　　28
3.1　数据类型　　28
3.2　真值　　28
3.3　数值　　29
3.3.1　数值运算　　30
3.3.2　大小和精度的限制　　30
3.3.3　NaN　　31
3.3.4　十六进制数值　　31
3.4　文本　　32
3.4.1　字符、符号与字符集　　32
3.4.2　字符串操作　　35
3.5　undefined与null　　36
3.6　对象　　37
3.6.1　对象基础　　37
3.6.2　理解对象引用　　38
3.6.3　对象原型　　40
3.6.4　自引用对象　　41
3.7　数组　　41
3.8　类型转换　　44
3.8.1　弱类型　　44
3.8.2　显式转换　　45
3.8.3　松散相等操作符　　47
3.9　typeof操作符*　　47
3.10　本章小结　　48
3.11　练习　　48
第4章　语句　　52
4.1　声明语句　　52
4.2　表达式语句　　52
4.3　条件执行　　54
4.3.1　if语句　　54
4.3.2　条件表达式　　56
4.3.3　switch语句　　56
4.3.4　用查询避免条件代码　　58
4.3.5　短路执行　　61
4.4　迭代　　62
4.4.1　while和do-while语句　　62
4.4.2　for语句　　63
4.4.3　for-in语句　　67
4.5　中断　　68
4.5.1　break和continue　　69
4.5.2　异常　　70
4.6　应该避免的编码风格　　72
4.6.1　不分块的复合语句　　72
4.6.2　隐式分号　　73
4.6.3　隐式声明　　74
4.6.4　递增和递减运算符　　74
4.6.5　with语句　　74
4.7　本章小结　　74
4.8　练习　　75
第5章　函数　　78
5.1　黑盒　　78
5.2　定义和调用函数　　78
5.3　示例　　80
5.3.1　简单的一行函数　　80
5.3.2　验证实参　　81
5.3.3　将对象引用作为参数传送　　82
5.3.4　先决条件　　83
5.3.5　关注点的分离　　85
5.3.6　斐波那契数列　　86
5.4　作用域　　87
5.5　作为对象的函数　　89
5.5.1　函数的属性　　89
5.5.2　作为属性的函数　　89
5.5.3　构造器　　90
5.6　上下文　　95
5.7　高阶函数　　96
5.8　函数声明与函数表达式*　　98
5.9　本章小结　　99
5.10　练习　　100
第6章　事件　　105
6.1　用户互动　　105
6.1.1　程序设计范例转移　　105
6.1.2　事件举例：温度转换Web页面　　106
6.2　定义用户界面元素　　107
6.2.1　Web页面是结构化文档　　108
6.2.2　生成用户界面控件的元素　　109
6.3　以编程方式访问用户界面元素　　112
6.3.1　document对象　　112
6.3.2　DOM属性的乐趣　　114
6.3.3　一个“玩耍”的地方　　115
6.3.4　操控用户界面控件　　116
6.3.5　遍历DOM*　　118
6.4　事件处理程序　　122
6.4.1　事件处理程序的骨架　　122
6.4.2　事件处理程序是函数，是对象　　123
6.5　事件对象　　125
6.6　事件实现细节　　126
6.6.1　事件捕获与冒泡　　126
6.6.2　默认操作　　127
6.6.3　指定事件处理程序　　129
6.6.4　时间流逝触发的事件　　130
6.6.5　多点触摸、手势和物理事件　　131
6.7　案例研究：井字棋　　135
6.7.1　文件与连接　　135
6.7.2　初始化　　137
6.7.3　事件处理　　139
6.7.4　业务逻辑　　139
6.8　本章小结　　140
6.9　练习　　140
第7章　软件构架　　146
7.1　软件工程活动　　146
7.2　面向对象的设计与编程　　146
7.2.1　对象族　　147
7.2.2　继承　　149
7.2.3　信息隐藏　　153
7.2.4　属性描述符*　　155
7.3　JavaScript标准对象　　157
7.3.1　内置对象　　157
7.3.2　Web浏览器宿主对象　　166
7.4　模块　　166
7.4.1　简单模块　　167
7.4.2　作为模块的井字棋游戏　　168
7.5　jQuery JavaScript库　　171
7.6　性能　　175
7.6.1　运行时效率　　175
7.6.2　空间效率　　177
7.6.3　加载时间效率　　178
7.6.4　用户界面效率　　179
7.7　单元测试　　181
7.7.1　一个简单的例子　　182
7.7.2　QUnit测试框架　　183
7.7.3　软件开发过程中的测试　　186
7.8　本章小结　　187
7.9　练习　　187
第8章　分布式计算　　193
8.1　分布式计算模型　　193
8.2　数据交互格式　　194
8.2.1　纯文本　　194
8.2.2　XML　　195
8.2.3　JSON　　198
8.2.4　YAML　　200
8.3　同步通信与异步通信　　201
8.4　Ajax　　202
8.4.1　jQuery中的Ajax　　202
8.4.2　没有库的Ajax　　206
8.5　设计分布式应用程序　　208
8.5.1　统一资源标识符　　208
8.5.2　REST　　211
8.5.3　分布式应用程序关注点的分离　　213
8.5.4　服务器端技术*　　216
8.6　安全性　　217
8.6.1　Web、不利因素和沙盒　　217
8.6.2　同源策略　　218
8.6.3　跨站脚本　　222
8.6.4　mashup　　224
8.7　案例研究：事件与趋势主题　　225
8.7.1　日期选择用户界面　　229
8.7.2　Ajax连接　　230
8.7.3　结果处理　　232
8.7.4　数据（mashup）显示　　234
8.8　本章小结　　235
8.9　练习　　236
第9章　图形与动画　　246
9.1　基础知识　　246
9.1.1　坐标空间　　246
9.1.2　色彩　　247
9.1.3　像素与对象/矢量　　248
9.1.4　动画　　250
9.2　HTML和CSS　　250
9.2.1　图形的HTML元素　　250
9.2.2　CSS　　251
9.2.3　可视属性　　254
9.2.4　绝对位置　　257
9.2.5　案例研究：条形图　　258
9.2.6　案例研究：汉诺塔显示　　259
9.3　HTML和CSS中的动画　　262
9.3.1　恒定速度　　262
9.3.2　淡入与淡出　　263
9.3.3　实现其他属性的动画　　264
9.3.4　缓动动画　　264
9.3.5　声明性CSS动画　　265
9.4　canvas元素　　266
9.4.1　实例化canvas　　266
9.4.2　渲染上下文　　266
9.4.3　绘制矩形　　267
9.4.4　绘制直线和多边形　　268
9.4.5　绘制弧和圆　　269
9.4.6　绘制贝塞尔曲线和二次曲线　　270
9.4.7　处理图像　　271
9.4.8　变换　　274
9.4.9　动画　　278
9.4.10　canvas举例　　280
9.5　SVG　　283
9.5.1　在Web浏览器中查看SVG　　284
9.5.2　SVG案例研究：一个贝塞尔曲线编辑器　　286
9.5.3　绘画中的对象　　287
9.5.4　读写属性　　287
9.5.5　交互性（事件处理归来）　　290
9.5.6　其他SVG功能　　291
9.6　用WebGL实现3D图形　　292
9.6.1　WebGL是3D canvas　　292
9.6.2　案例研究：谢尔宾斯基三角　　293
9.6.3　定义3D数据　　295
9.6.4　着色器代码　　295
9.6.5　绘制场景　　296
9.6.6　交互性与事件　　297
9.7　其他客户端图形技术　　299
9.7.1　Flash　　299
9.7.2　Java　　299
9.7.3　VML　　300
9.8　本章小结　　300
9.9　练习　　300
第10章　高级主题　　310
10.1　正则表达式　　310
10.1.1　正则表达式简介　　310
10.1.2　捕获　　311
10.1.3　数量词　　312
10.1.4　向后引用　　313
10.1.5　正则表达式修饰符　　313
10.1.6　RegExp构造器　　314
10.1.7　正则表达式的更多内容　　314
10.2　递归　　314
10.2.1　什么是递归　　315
10.2.2　递归经典示例　　316
10.2.3　递归与家族树　　322
10.2.4　什么时候不用递归　　324
10.3　缓存　　325
10.4　MapReduce　　327
10.4.1　使用map、filter和reduce　　327
10.4.2　实现　　329
10.4.3　大规模数据处理中的MapReduce　　330
10.5　动态创建事件处理程序　　330
10.6　本章小结　　333
10.7　练习　　333
附录A　　JavaScript语言参考　　337
附录B　　数值编码　　352
附录C　　Unicode　　355
术语表　　363
参考文献　　366

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript程序设计
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>学习JavaScript数据结构与算法（第2版）
第1章　JavaScript简介　　1
1.1　JavaScript数据结构与算法　　1
1.2　环境搭建　　2
1.2.1　最简单的环境搭建　　2
1.2.2　使用Web服务器（XAMPP）　　4
1.2.3　使用Node.js搭建Web服务器　　5
1.3　JavaScript基础　　6
1.3.1　变量　　7
1.3.2　操作符　　9
1.3.3　真值和假值　　11
1.3.4　相等操作符（==和===）　　12
1.4　控制结构　　14
1.4.1　条件语句　　14
1.4.2　循环　　15
1.5　函数　　16
1.6　JavaScript面向对象编程　　17
1.7　调试工具　　18
1.8　ECMAScript概述　　19
1.9　ECMAScript 6的功能　　21
1.9.1　用let替代var声明变量　　21
1.9.2　常量　　23
1.9.3　模板字面量　　23
1.9.4　箭头函数　　24
1.9.5　函数的参数默认值　　24
1.9.6　声明展开和剩余参数　　25
1.9.7　使用类进行面向对象编程　　27
1.10　ECMAScript 7的功能　　29
1.11　小结　　30
第2章　数组　　31
2.1　为什么用数组　　31
2.2　创建和初始化数组　　32
2.3　添加元素　　33
2.3.1　使用push方法　　33
2.3.2　插入元素到数组首位　　34
2.4　删除元素　　34
2.5　在任意位置添加或删除元素　　36
2.6　二维和多维数组　　36
2.6.1　迭代二维数组的元素　　37
2.6.2　多维数组　　38
2.7　JavaScript的数组方法参考　　39
2.7.1　数组合并　　39
2.7.2　迭代器函数　　40
2.7.3　ECMAScript 6和数组的新功能　　42
2.7.4　排序元素　　46
2.7.5　搜索　　48
2.7.6　输出数组为字符串　　49
2.8　类型数组　　50
2.9　小结　　51
第3章　栈　　52
3.1　栈数据结构　　52
3.1.1　创建栈　　53
3.1.2　向栈添加元素　　53
3.1.3　从栈移除元素　　53
3.1.4　查看栈顶元素　　54
3.1.5　检查栈是否为空　　54
3.1.6　清空和打印栈元素　　54
3.2　ECMAScript 6和Stack类　　56
3.3　用栈解决问题　　59
3.4　小结　　61
第4章　队列　　62
4.1　队列数据结构　　62
4.2　创建队列　　63
4.2.1　向队列添加元素　　63
4.2.2　从队列移除元素　　63
4.2.3　查看队列头元素　　64
4.2.4　检查队列是否为空　　64
4.2.5　打印队列元素　　64
4.3　用ECMAScript 6语法实现的Queue类　　66
4.4　优先队列　　66
4.5　循环队列——击鼓传花　　68
4.6　JavaScript任务队列　　70
4.7　小结　　70
第5章　链表　　71
5.1　链表数据结构　　71
5.2　创建链表　　72
5.2.1　向链表尾部追加元素　　73
5.2.2　从链表中移除元素　　75
5.2.3　在任意位置插入元素　　77
5.2.4　实现其他方法　　79
5.3　双向链表　　82
5.3.1　在任意位置插入新元素　　82
5.3.2　从任意位置移除元素　　85
5.4　循环链表　　87
5.5　小结　　88
第6章　集合　　89
6.1　构建数据集合　　89
6.2　创建集合　　89
6.2.1　has(value)方法　　90
6.2.2　add方法　　91
6.2.3　remove和clear方法　　91
6.2.4　size方法　　92
6.2.5　values方法　　93
6.2.6　使用Set类　　93
6.3　集合操作　　94
6.3.1　并集　　94
6.3.2　交集　　95
6.3.3　差集　　97
6.3.4　子集　　98
6.4　ES6——Set类　　99
6.5　小结　　101
第7章　字典和散列表　　102
7.1　字典　　102
7.1.1　创建字典　　102
7.1.2　使用Dictionary类　　105
7.2　散列表　　106
7.2.1　创建散列表　　106
7.2.2　使用HashTable类　　108
7.2.3　散列表和散列集合　　109
7.2.4　处理散列表中的冲突　　109
7.2.5　创建更好的散列函数　　117
7.3　ES6——Map类　　118
7.4　ES6——WeakMap类和WeakSet类　　118
7.5　小结　　119
第8章　树　　120
8.1　树数据结构　　120
8.2　树的相关术语　　121
8.3　二叉树和二叉搜索树　　121
8.3.1　创建BinarySearchTree类　　122
8.3.2　向树中插入一个键　　123
8.4　树的遍历　　126
8.4.1　中序遍历　　126
8.4.2　先序遍历　　127
8.4.3　后序遍历　　128
8.5　搜索树中的值　　129
8.5.1　搜索最小值和最大值　　130
8.5.2　搜索一个特定的值　　131
8.5.3　移除一个节点　　133
8.6　自平衡树　　137
8.6.1　Adelson-Velskii-Landi树（AVL树）　　137
8.6.2　更多关于二叉树的知识　　143
8.7　小结　　143
第9章　图　　144
9.1　图的相关术语　　144
9.2　图的表示　　146
9.2.1　邻接矩阵　　146
9.2.2　邻接表　　147
9.2.3　关联矩阵　　148
9.3　创建Graph类　　148
9.4　图的遍历　　150
9.4.1　广度优先搜索　　151
9.4.2　深度优先搜索　　156
9.5　最短路径算法　　162
9.5.1　Dijkstra算法　　163
9.5.2　Floyd-Warshall算法　　165
9.6　最小生成树　　166
9.6.1　Prim算法　　166
9.6.2　Kruskal算法　　168
9.7　小结　　169
第10章　排序和搜索算法　　170
10.1　排序算法　　170
10.1.1　冒泡排序　　171
10.1.2　选择排序　　174
10.1.3　插入排序　　175
10.1.4　归并排序　　176
10.1.5　快速排序　　179
10.1.6　堆排序　　183
10.1.7　计数排序、桶排序和基数排序（分布式排序）　　186
10.2　搜索算法　　187
10.2.1　顺序搜索　　187
10.2.2　二分搜索　　187
10.3　小结　　189
第11章　算法模式　　190
11.1　递归　　190
11.1.1　JavaScript调用栈大小的限制　　191
11.1.2　斐波那契数列　　191
11.2　动态规划　　193
11.2.1　最少硬币找零问题　　194
11.2.2　背包问题　　196
11.2.3　最长公共子序列　　198
11.2.4　矩阵链相乘　　200
11.3　贪心算法　　202
11.3.1　最少硬币找零问题　　203
11.3.2　分数背包问题　　204
11.4　函数式编程简介　　205
11.4.1　函数式编程与命令式编程　　205
11.4.2　ES2015和函数式编程　　206
11.4.3　　JavaScript函数式工具箱——map、filter和reduce　　207
11.4.4　JavaScript函数式类库和数据结构　　209
11.5　小结　　209
第12章　算法复杂度　　210
12.1　大O表示法　　210
12.1.1　理解大O表示法　　210
12.1.2　时间复杂度比较　　212
12.1.3　NP完全理论概述　　214
12.2　用算法娱乐身心　　216
12.3　小结　　217

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>学习JavaScript数据结构与算法（第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript程序设计:基础·PHP·XML
译者序
前 言
第0章 计算机基础
第1章 JavaScript程序设计基础 1
1.1 什么是程序设计 2
1.1.1 通用问题解决策略 2
1.1.2 程序开发周期 3
1.2 程序的结构 4
1.2.1 输入—处理—输出 4
1.2.2 控制结构 6
1.3 数据类型和对数据的操作 7
1.3.1 数字型数据 7
1.3.2 字符串型数据 7
1.3.3 布尔型数据 8
1.3.4 变量和命名常量 8
1.3.5 赋值语句 9
1.3.6 对数据的操作 10
1.4 解决问题：逻辑思考的重要性 13
1.4.1 伪代码 14
1.4.2 流程图 14
1.5 网页中的JavaScript 17
1.5.1 标签对 17
1.5.2 标签对 17
1.5.3 在网页（body）中的JavaScript 17
1.5.4 在文档区域中的JavaScript 18
1.5.5 （body）的onload事件 19
1.6 对象简介 21
1.6.1 对象是什么 21
1.6.2 属性和方法 22
1.6.3 document（文档）对象 23
1.6.4 点标记 24
1.6.5 write（ ）方法 24
1.6.6 getElementById（ ）方法和innerHTML属性 26
1.6.7 open（）和close（）方法 28
1.7 JavaScript函数和事件 31
1.7.1 JavaScript函数 31
1.7.2 JavaScript事件 35
1.8 操作实践 38
1.8.1 Greg's Gambits：创建About You页面 38
1.8.2 Carla's Classroom：创建About You页面 45
1.9 复习与练习 51
主要术语 51
练习 52
编程挑战 55
案例研究 56
第2章 编程基石：变量和操作符 59
2.1 变量是什么 60
2.1.1 内存单元 60
2.1.2 变量名 60
2.1.3 命名建议 61
2.1.4 声明变量 61
2.2 数据类型 62
2.2.1 弱类型语言 63
2.2.2 数字 63
2.2.3 字符串和字符 64
2.2.4 命名常量 65
2.3 算术操作符和一些重要的函数 65
2.3.1 模操作符 66
2.3.2 操作优先级 66
2.3.3 连接操作符 68
2.3.4 分析整数和浮点数 68
2.4 关系操作符 70
2.4.1 ASCII 码 70
2.4.2 关系操作符 72
2.5 逻辑操作符和条件操作符 75
2.5.1 逻辑操作符 75
2.5.2 布尔逻辑和布尔操作符 76
2.5.3 逻辑操作符的操作次序 77
2.5.4 条件操作符 78
2.6 操作实践 80
2.6.1 Greg's Gambits：创建填字游戏 80
2.6.2 Carla's Classroom：拼写课 85
2.7 复习与练习 94
主要术语 94
练习 94
编程挑战 96
案例研究 98
第3章 做出判断：选择结构 100
3.1 选择结构类型 100
3.2 单路选择结构：if语句 102
3.2.1 关于测试条件的说明 103
3.2.2 关于花括号的说明 103
3.3 二路选择结构：if ...else语句 105
3.4 嵌套选择结构 108
3.5 复合条件 111
3.5.1 组合关系和逻辑操作符 111
3.6 多路选择结构 116
3.6.1 if ...else if ...结构 116
3.6.2 错误检查：只是开始 117
3.6.3 switch语句 120
3.7 操作实践 124
3.7.1 Greg's Gambits：Vadoma夫人知道所有事情 124
3.7.2 Carla's Classroom：算术课 132
3.8 复习与练习 144
主要术语 144
练习 144
编程挑战 147
案例研究 149
第4章 周而复始：重复结构 152
4.1 计算机不厌烦重复 153
4.1.1 循环基本概念 153
4.2 循环的类型 156
4.2.1 前测循环和后测循环 156
4.2.2 前测while循环 157
4.2.3 后测do...while循环 162
4.2.4 哨兵控制循环 165
4.2.5 计数器控制循环 167
4.3 for循环 170
4.3.1 for语句 171
4.3.2 初值 171
4.3.3 测试条件 171
4.3.4 递增／递减语句 172
4.3.5 谨慎的豆子计数器 172
4.4 数据验证 176
4.4.1 isNaN（）方法 177
4.4.2 检查整数 177
4.4.3 使用复合条件进行数据验证 178
4.4.4 charAt（）方法 179
4.4.5 length属性 180
4.5 操作实践 182
4.5.1 Greg's Gambits：编码秘密信息 182
4.5.2 Carla's Classroom：高级算术课 190
4.6 复习与练习 202
主要术语 202
练习 202
编程挑战 205
案例研究 206
第5章 高级判断和循环 210
5.1 一些简单的教学统计分析 211
5.1.1 把所有数加起来 211
5.1.2 计算平均数 212
5.1.3 范围 213
5.1.4 奇数和偶数 214
5.1.5 整数准确性：Math方法 216
5.2 继续或者不继续 220
5.2.1 break语句 220
5.2.2 continue语句 228
5.3 循环嵌套 230
5.3.1 台式检查 230
5.3.2 嵌套循环的不同方法 232
5.4 用循环绘制形状和图案 236
5.4.1 绘制形状 237
5.4.2 使用循环创建图案 239
5.4.3 鼠标事件 240
5.5 操作实践 245
5.5.1 Greg's Gambits：巫师和巨怪之间的战斗 245
5.5.2 Carla's Classroom：语法课 257
5.6 复习与练习 264
主要术语 264
练习 264
编程挑战 267
案例研究 268
第6章 表单和表单控件 271
6.1 表单是什么 272
6.1.1 最基本的表单 272
6.1.2 返回表单提交的信息 274
6.2 表单控件 275
6.2.1 单选按钮 275
6.2.2 复选框 278
6.2.3 文本框 282
6.2.4 文本区框 286
6.3 隐藏字段和密码 291
6.3.1 隐藏的表单元素 291
6.3.2 密码表单元素 292
6.4 选择列表及其他 301
6.4.1 选择列表 301
6.4.2 表单元素的高级属性 305
6.5 操作实践 310
6.5.1 Greg's Gambits：玩家信息和物品目录 310
6.5.2 Carla's Classroom：Carla的进度报告表单 321
6.6 复习与练习 330
主要术语 330
练习 331
编程挑战 332
案例研究 333
第7章 代码简洁化：函数和JavaScript源文件 336
7.1 函数 337
7.1.1 内置函数 337
7.1.2 用户自定义函数 338
7.2变量作用域 343
7.2.1 全局变量 343
7.2.2 局部变量 345
7.3将信息传递给函数 346
7.3.1 将实参传递给形参 347
7.4对象和面向对象概念 355
7.4.1 Math对象 355
7.4.2 其他JavaScript对象 356
7.4.3 Date对象 358
7.5JavaScript源文件 360
7.5.1 更聪明地工作，而不是更努力地工作 361
7.5.2 创建和访问JavaScript源文件 361
7.5.3 创建函数库 367
7.6操作实践 368
7.6.1 Greg's Gambits：悬吊人猜字游戏 368
7.6.2 Carla's Classroom：阅读理解课 378
7.7复习与练习 386
主要术语 386
练习 387
编程挑战 389
案例研究 390
第8章 数组 394
8.1 一维数组 394
8.1.1 在JavaScript中创建数组 395
8.1.2 Array对象 396
8.1.3 关于数组名的说明 396
8.2 填充数组 398
8.2.1 直接装载数组 398
8.2.2 交互地装载数组 399
8.2.3 显示数组 400
8.3 平行数组 401
8.3.1 为什么使用数组 403
8.4 使用Array方法 405
8.4.1 push（）方法 405
8.4.2 length属性可用于获取数组的长度 406
8.4.3 unshift（）方法 407
8.4.4 splice（）方法 408
8.5 多维数组 415
8.5.1 二维数组 415
8.5.2 声明和填充二维数组 416
8.6 操作实践 419
8.6.1 Greg's Gambits：数字拼图游戏15419
8.6.2 Carla's Classroom：图像和想象 430
8.7 复习与练习 438
主要术语 438
练习 438
编程挑战 440
案例研究 442
第9章 搜索和排序 444
9.1 排序数组 445
9.1.1 sort（）方法 445
9.1.2 用sort（）方法排序数字 446
9.1.3 reverse（）方法 447
9.2 冒泡排序 449
9.2.1 交换值 449
9.2.2 使用冒泡排序算法 450
9.2.3 传递数组 454
9.3 选择排序 456
9.4 搜索数组：线性搜索 462
9.4.1 线性搜索 462
9.4.2 线性搜索平行数组 465
9.5 搜索数组：二分搜索 468
9.5.1 二分搜索 469
9.5.2 让编程更容易：indexOf（）方法 475
9.6 操作实践 477
9.6.1 Greg's Gambits：Greg的拼字游戏 477
9.6.2 Carla's Classroom：因数分解课 486
9.7 复习与练习 500
主要术语 500
练习 500
编程挑战 503
案例研究 505
第10章 文档对象模型和XML 507
10.1 文档对象模型 508
10.1.1 DOM简史 508
10.1.2 DOM节点和树 508
10.1.3 家族：父子模型 510
10.1.4 创建和插入元素 511
10.1.5 替换和除去元素 513
10.2 与定时器和样式一起使用DOM方法 516
10.2.1setAttribute（）和getAttribute（）方法 516
10.2.2 setInterval（）和clearInterval（）方法 519
10.3 XML基础 523
10.3.1 XML是什么 523
10.3.2 为什么需要XML 523
10.3.3 XML组件 524
10.3.4 XML语法分析器和DTD 527
10.4 添加样式和XSL转换 530
10.4.1 与XML文档一起使用层叠样式表 531
10.4.2 可扩展样式表语言（XSL） 533
10.5 XML命名空间和模式 537
10.5.1 XML命名空间 537
10.5.2 XML模式 541
10.5.3 XML模式数据类型 542
10.5.4 创建XML模式 542
10.6 操作实践 545
10.6.1 Greg's Gambits：Greg的头像 545
10.6.2 Carla's Classroom：拼写课 555
10.7 复习与练习 562
主要术语 562
练习 563
编程挑战 565
案例研究 566
第11章 PHP概述 570
11.1 PHP简史 571
11.1.1 服务器做什么 571
11.1.2 Apache HTTP服务器、MySQL和PHP 572
11.2 XAMPP 573
11.2.1 安装XAMPP 574
11.2.2 开始使用 574
11.3 PHP基础 577
11.3.1 PHP文件名、htdocs文件夹和浏览PHP页面 578
11.3.2 变量和方法 579
11.3.3 PHP关键字584
11.3.4 操作符 584
11.4 使用条件和循环语句 589
11.4.1 做出判断：if结构 589
11.4.2 循环往复：重复和循环 592
11.5 数组和字符串 596
11.5.1 数组 596
11.5.2 为什么要学习PHP 599
11.5.3 处理字符串 600
11.6 操作实践 605
11.6.1 Greg's Gambits：PHP欢迎信息 606
11.6.2 Carla's Classroom：使用PHP获取提示信息 614
11.7 复习与练习 622
主要术语 622
练习 623
编程挑战 625
案例研究 627
第12章 与Cookie和MySQL一起使用PHP 630
12.1 Cookie 631
12.1.1 Cookie类型 631
12.1.2 写Cookie 632
12.2 数据库服务器：MySQL 640
12.2.1 MySQL概述 640
12.2.2 建立MySQL用户账户 640
12.2.3 数据库结构 643
12.2.4 构建小型商务数据库 644
12.2.5 用phpMy Admin创建数据库 646
12.3 通过Web填充数据库 649
12.3.1 网页表单 650
12.4 使用PHP发送含数据库信息的电子邮件 656
12.4.1 表单 656
12.5 操作实践 660
12.5.1 Greg's Gambits：创建账户和验证登录 660
12.5.2 Carla's Classroom：使用 PHP通过电子邮件发送学生报告 677
12.6 复习与练习 686
主要术语 686
练习 687
编程挑战 689
案例研究 690
附录A ASCII字符 692
附录B 操作符优先级 696
附录C HTML字符和实体 698
附录D JavaScript对象 700
附录E jQuery 709
附录F DOM属性、方法和事件 711
附录G PHP保留字 714
附录H PHP MySQL函数 717
附录I 检查点答案 719
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript程序设计:基础·PHP·XML
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>javascript开发框架权威指南
第1章　Bower　1
1．1　准备工作　1
1．2　配置Bower　2
1．3　清单文件（Manifest）　2
创建新的清单文件　3
1．4　查找、添加和删除Bower包　3
1．4．1　查找包　3
1．4．2　添加包　3
1．4．3　删除包　5
1．5　语义化版本控制　5
1．6　维护依赖链　6
1．7　创建Bower包　7
1．7．1　选择有效的包名　7
1．7．2　使用语义化版本（Semver）的
Git标签　7
1．7．3　将软件包发布到注册中心　7
1．8　小结　8
第2章　Grunt　9
2．1　安装Grunt　10
2．2　Grunt是如何工作的　10
2．2．1　Gruntfile．js　10
2．2．2　任务（Tasks）　11
2．2．3　插件（Plugins）　11
2．2．4　配置　12
2．3　将Grunt添加到项目中　12
保持合理的Grunt结构　12
2．4　与任务共舞　14
2．4．1　配置管理　14
2．4．2　任务描述　15
2．4．3　异步任务　15
2．4．4　任务依赖　16
2．4．5　多任务　16
2．4．6　多任务中的Options　17
2．7　模板配置　18
2．4．8　命令行选项　19
2．4．9　提供反馈　19
2．4．10　错误处理　20
2．5　操作文件系统　20
2．5．1　源-目标映射　20
2．5．2　监视文件变化　22
2．6　创建Grunt插件　25
2．6．1　开始　25
2．6．2　创建任务　26
2．6．3　将任务发布到npm　28
2．7　总结　28
2．8　相关资源　29
第3章　Yeoman　30
3．1　安装Yeoman　30
3．2　创建第一个项目　30
3．2．1　子命令　33
3．3　创建你的第一个脚手架　34
3．3．1　Yeoman脚手架是一个Node
模块　34
3．3．2　子脚手架　35
3．3．3　定义二级命令　39
3．3．4　可组合性　41
3．4　小结　41
3．5　相关资源　42
第4章　PM2　43
4．1　安装　43
4．2　与进程一起工作　43
4．2．1　从错误中恢复　46
4．2．2　监控文件变化　47
4．3　监控日志　48
4．4　监控资源占用　49
4．41　监控本地资源　49
4．4．2　监控远程资源　49
4．5　进程的高级管理　52
4．5．1　通过JSON方式配置应用　52
4．6　多核处理器的负载均衡　55
4．6．1　0秒宕机的部署方式　57
4．7　小结　59
4．8　相关资源　59
第5章　RequireJS　60
5．1　运行示例　61
5．2　使用RequireJS　61
5．2．1　安装　62
5．2．2　配置　62
5．2．3　应用模块和依赖　64
5．2．4　路径和别名　66
5．2．5　Shims　69
5．2．6　加载器插件　73
5．2．7　缓存清除　78
5．3　RequireJS优化　80
5．3．1　配置 r．js　80
5．3．2　运行r．js命令　81
5．4　小结　82
第6章　Browserify　84
6．1　AMD API与CommonJS对比　84
6．2　安装Browserify　85
6．3　创建你的第一个Bundle　85
6．4　可视化依赖树　87
6．5　发生变化时重新打包文件　88
6．5．1　通过Grunt监听文件变化　88
6．5．2　通过Watchify监听文件
变化　88
6．6　使用多个打包文件　90
6．7　Node方式　92
6．7．1　模块解析方案和NODE_PATH
环境变量　93
6．7．2　依赖管理　95
6．8　定义浏览器指定模块　96
6．9　用Transforms扩展Browserify　97
6．9．1　brfs　97
6．9．2　folderify　98
6．9．3　bulkify　98
6．9．4　Browserify-Shim　99
6．10　小结　100
6．11　相关资源　100
第7章　Knockout　101
7．1　View、Model与View Model　102
7．1．1　菜谱列表　103
7．1．2　菜谱详情　106
7．2　绑定视图模型到DOM　108
7．3　视图模型与表单　109
7．3．1　切换到“编辑”模式　109
7．3．2　更改菜谱的标题　112
7．3．3　更改菜谱的Serving与
Cooking　Time　112
7．3．4　添加与删除食材　114
7．3．5　操作步骤　118
7．3．6　引文　119
7．4　自定义组件　120
7．4．1　input-list组件的视图模型　120
7．4．2　input-list模板　121
7．4．3　注册input-list组件　123
7．5　Subscribable： 简单的消息传递　124
7．6　小结　126
7．7　相关资源　127
第8章　AngularJS　128
8．1　声明式Web编程　128
8．1．1　命令式编程　128
8．1．2　声明式编程　129
8．2　Module：创建松散耦合程序的基石　130
8．3　指令：DOM的抽象　132
8．4　加入逻辑　134
8．4．1　Scope与原型继承　134
8．4．2　用Controller操作Scope　135
8．5　通过Service与依赖注入（DI）
实现松散耦合　138
8．5．1　依赖注入　138
8．5．2　简单的Controller与复杂的
Service　139
8．6　创建路由　142
8．6．1　路由参数　143
8．6．2　路由的Resolve　144
8．7　创建复杂表单　145
8．7．1　表单验证　146
8．7．2　条件逻辑　150
8．7．3　列表　151
8．8　小结　153
8．9　相关资源　154
第9章　Kraken　155
9．1　环境感知的配置　156
9．2　注册基于配置的中间件　162
9．3　结构化路由注册　165
9．3．1　索引配置　165
9．3．2　目录配置　166
9．3．3　路由配置　167
9．4　Dust模板　169
9．4．1　上下文及引用　169
9．4．2　片段　171
9．4．3　迭代　172
9．4．4　条件句　173
9．4．5　局部模板　173
9．4．6　块　174
9．4．7　过滤器　175
9．4．8　上下文辅助器　176
9．4．9　Dust辅助器　182
9．4．10　使用Kraken　186
9．5　小结　200
9．6　相关资源　200
第10章　Mach　202
10．1　章节例子　202
10．2　安装　203
10．3　Mach - Web服务　203
10．3．1　HTTP路由　205
10．3．2　建立连接　210
10．3．3　公共的中间件　212
10．3．4　路由重写　226
10．3．5　主机映射　228
10．3．6　自定义中间件　232
10．4　Mach-HTTP客户端　234
10．5　Mach - HTTP代理　236
10．6　小结　239
第11章　Mongoose>　240
11．1　MongoDB的基本概念　240
11．2　Mongoose的一个简单示例　243
11．2．1　针对JSON数据创建一个
Mongoose模式　243
11．2．2　使用Mongoose导入数据　244
11．2．3　通过Mongoose查询数据　247
11．3　使用结构（Schemas）　248
11．3．1　数据类型　248
11．3．2　嵌套结构　250
11．3．3　默认属性值　250
11．3．4　必要属性　251
11．3．5　辅助索引　251
11．3．6　结构校验　252
11．3．7　结构引用　255
11．3．8　结构中间件　258
11．4　使用模型和文档　259
11．4．1　文档实例方法　262
11．4．2　文档虚拟　263
11．4．3　静态模型方法　265
11．5　使用查询　266
11．5．1　Model．find()　266
11．5．2　使用查询运算符查找文档　272
11．6　小结　278
第12章　Knex和Bookshelf　279
12．1　Knex　279
12．1．1　安装命令行工具　280
12．1．2　把Knex添加到你的项目　280
12．1．3　配置Knex　280
12．1．4　SQL查询构建器　281
12．1．5　迁移脚本　287
12．1．6　种子脚本　291
12．2　Bookshelf　291
12．2．1　什么是对象映射关系？　292
12．2．2　创建Bookshelf模型　292
12．2．3　关系　299
12．3　小结　306
12．4　相关资源　307
第13章　Faye　308
13．1　HTTP、Bayeux和WebSocket　308
13．1．1　WebSocket　310
13．1．2　Bayeux协议　310
13．2　开始使用Faye　312
13．3　发布/订阅消息系统　313
13．4　小结　318
13．5　相关资源　318
第14章　Q　319
14．1　时间就是一切　319
14．2　Promise对比回调函数　322
14．3　Q的Promise　324
14．3．1　Deferreds 和 Promises　324
14．3．2　值和错误　328
14．3．3　报告进度　333
14．3．4　终点　336
14．4　控制流　338
14．4．1　顺序流　338
14．4．2　平行流　339
14．4．3　管道流　341
14．5　小结　342
14．6　相关资源　343
第15章　Async．js　344
15．1　顺序流　345
15．2　并行流　346
15．3　管线流　348
15．4　循环流　352
15．4．1　为真则循环执行　352
15．4．2　为假则循环执行　354
15．4．3　循环重试　355
15．4．4　无限循环　357
15．5　批处理流　358
15．5．1　异步队列　358
15．5．2　异步负载　359
15．6　小结　361
第16章　Underscore和Lodash　362
16．1　安装及用法　363
16．2　聚合和索引　364
16．2．1　countBy()　364
16．2．2　groupBy()　365
16．2．3　indexBy()　366
16．3　选择　367
16．3．1　从集合中选择数据　367
16．3．2　从对象中选择数据　369
16．4　链式调用　373
16．5　函数计时　375
16．5．1　defer()　375
16．5．2　debounce()　377
16．5．3　throttle()　378
16．6　模板　380
16．6．1　模板内的循环及其他
JavaScript代码　381
16．6．2　书写不加鳄鱼标记的代码　382
16．6．3　从模板中获取数据对象　383
16．6．4　默认模板数据　384
16．7　小结　385
16．8　相关资源　386
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>javascript开发框架权威指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript实例教程
第1章  JavaScript语言基础
1. 1  什么是JavaScript
1. 1. 1  JavaScript的基本特点
1. 1. 2  JavaScript与JScript
1. 1. 3  J

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript实例教程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript入门与提高
第1篇　基础知识　第1章　预备知识第2篇　了解JavaScript　第2章　了解JavaScript　第3章　创建JavaScript程序第3篇　JavaScript编程基础　第4章　JavaScript语言概念　第5章　变量和常见数据类型　第6章　函数和事件　第7章　运算符和表达式　第8章　流程控制语句第4篇　JavaScript进阶　第9章　表单　第10章　CSS样式表　第11章　动态HTML和动画　第12章　窗口和框架　第13章　Cookies　第14章　在JavaScript中使用Java　第15章　第三方框架　第16章　JavaScript的安全性　第17章　调试JavaScript第6篇　案例应用　第18章　JavaScript常见实例　第19章　JavaScript常用特效
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript入门与提高
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>新手学JavaScript编程(第4版)
目    录
第1章  JavaScript简介	1
1.1  预备知识	2
1.1.1  HTML和CSS基础知识	2
1.1.2  文本编辑器和Web浏览器基础知识	3
1.1.3  版本	5
1.1.4  与Java的区别	5
1.1.5  与其他语言的相似之处	5
1.2  开始学习JavaScript	7
1.2.1  基于原型	7
1.2.2  客户端	7
1.2.3  脚本语言	8
1.3  汇总	8
1.4  在线资源	9
1.5  动手尝试1-1：使用JavaScript输出文本	9
1.6  自测题	10
第2章  在HTML文件中添加JavaScript	13
2.1  使用HTML脚本标记	14
2.1.1  识别脚本语言	14
2.1.2  调用外部脚本	15
2.1.3  指定脚本加载时间	15
2.1.4  使用<noscript></noscript>标记	16
2.2  创建第一个脚本	17
2.2.1  编写“Hello World”脚本	18
2.2.2  为脚本创建HTML文档	18
2.2.3  在HTML文档中插入脚本	19
2.3  动手尝试2-1：在HTML文档中插入脚本	20
2.4  使用外部JavaScript文件	21
2.4.1  创建JavaScript文件	21
2.4.2  创建HTML文件	22
2.4.3  在浏览器中查看页面	23
2.5  动手尝试2-2：从HTML文档调用外部脚本	24
2.6  使用JavaScript注释	24
2.6.1  添加单行注释	25
2.6.2  添加多行注释	25
2.7  自测题	26
第3章  使用变量	29
3.1  变量简介	30
3.2  变量的作用	30
3.2.1  用作未知值的占位符	30
3.2.2  节省编程时间	31
3.2.3  使代码更清晰	31
3.3  定义变量	31
3.3.1  声明变量	31
3.3.2  变量赋值	32
3.3.3  命名变量	33
3.4  数据类型	35
3.4.1  数字	36
3.4.2  字符串	36
3.4.3  布尔类型	40
3.4.4  null	41
3.4.5  undefined	41
3.5  动手尝试3-1：声明变量	42
3.6  在脚本中使用变量	43
3.6.1  访问变量	43
3.6.2  将变量添加到文本字符串中	43
3.7  编写JavaScript页面	44
3.7.1  创建框架	45
3.7.2  定义变量	45
3.7.3  添加命令	46
3.7.4  修改页面	47
3.8  动手尝试3-2：创建使用JavaScript的HTML文档	48
3.9  自测题	50
第4章  使用函数	53
4.1  函数的定义	54
4.2  函数的作用	54
4.3  构建函数	55
4.3.1  声明函数	55
4.3.2  定义函数代码	55
4.3.3  命名函数	56
4.3.4  添加函数参数	57
4.3.5  添加函数返回语句	58
4.4  在脚本中调用函数	59
4.4.1  script标记：头部分或主体部分	60
4.4.2  嵌套调用函数	62
4.4.3  调用包含参数的函数	64
4.4.4  调用包含return语句的函数	67
4.4.5  定义函数的其他方式	68
4.5  动手尝试4-1：创建包含函数的HTML页面	71
4.6  作用域/上下文基础知识	72
4.6.1  全局上下文	72
4.6.2  函数上下文	73
4.7  动手尝试4-2：编写自己的函数	74
4.8  自测题	75
第5章  JavaScript运算符	77
5.1  理解运算符类型	78
5.2  理解算术运算符	78
5.2.1  加法运算符(+)	79
5.2.2  减法运算符(-)	82
5.2.3  乘法运算符(*)	83
5.2.4  除法运算符(/)	83
5.2.5  取模运算符(%)	84
5.2.6  自增运算符(++)	84
5.2.7  自减运算符	85
5.2.8  一元加运算符(+)	86
5.2.9  一元减运算符(-)	86
5.3  理解赋值运算符	87
5.3.1  赋值运算符	87
5.3.2  加法赋值运算符	88
5.3.3  减法赋值运算符	88
5.3.4  乘法赋值运算符	89
5.3.5  除法赋值运算符	89
5.3.6  取模赋值运算符	89
5.4  动手尝试5-1：修改变量值	89
5.5  理解比较运算符	90
5.5.1  相等运算符(==)	91
5.5.2  不等运算符(!=)	92
5.5.3  恒等运算符(===)	93
5.5.4  非恒等运算符(!==)	93
5.5.5  大于运算符(>)	93
5.5.6  小于运算符(<)	94
5.5.7  大于等于运算符(>=)	94
5.5.8  小于等于运算符	95
5.6  理解逻辑运算符	95
5.6.1  逻辑与运算(&&)	96
5.6.2  逻辑或运算符(||)	96
5.6.3  逻辑非运算符(！)	96
5.6.4  位运算符	97
5.7  特殊运算符	97
5.8  理解运算符的执行顺序	98
5.9  动手尝试5-2：true还是false	99
5.10  自测题	100
第6章  条件语句和循环	103
6.1  条件语句的定义	104
6.1.1  条件语句的定义	104
6.1.2  条件语句的作用	104
6.2  条件语句的使用	105
6.2.1  使用if/else语句	105
6.2.2  使用switch语句	112
6.2.3  使用条件运算符	114
6.2.4  提示框中获得的用户输入	115
6.3  动手尝试6-1：处理用户的输入	117
6.4  定义循环	118
6.4.1  循环的定义	118
6.4.2  循环的作用	119
6.5  使用循环	119
6.5.1  for	119
6.5.2  while	126
6.5.3  do while循环	128
6.5.4  for in和for each in循环	128
6.5.5  使用break和continue	128
6.6  动手尝试6-2：使用for循环和while循环	130
6.7  自测题	132
第7章  JavaScript数组	135
7.1  数组的定义	136
7.2  数组的作用	136
7.3  定义和访问数组	137
7.3.1  命名数组	137
7.3.2  定义数组	137
7.3.3  访问数组元素	138
7.3.4  使用length属性和循环	139
7.3.5  修改数组元素值和数组长度	141
7.4  动手尝试7-1：使用循环遍历数组	142
7.5  数组属性和方法	143
7.5.1  属性	143
7.5.2  方法	144
7.6  嵌套数组	157
7.6.1  定义嵌套数组	157
7.6.2  循环和嵌套数组	158
7.7  动手尝试7-2：嵌套数组练习	160
7.8  自测题	161
第8章  对象	163
8.1  定义对象	164
8.2  创建对象	164
8.2.1  命名	164
8.2.2  单一对象	164
8.3  动手尝试8-1：创建computer对象	168
8.4  对象结构	168
8.4.1  构造函数	169
8.4.2  使用原型	173
8.5  帮助访问对象的语句	176
8.5.1  for-in循环	176
8.5.2  with语句	177
8.6  动手尝试8-2：练习使用构造函数/原型结合模式	178
8.7  理解JavaScript预定义对象	179
8.7.1  navigator对象	180
8.7.2  history对象	182
8.8  自测题	183
第9章  document对象	185
9.1  定义document对象	186
9.2  使用文档对象模型	186
9.3  使用document对象的属性	187
9.3.1  集合	189
9.3.2  cookie属性	189
9.3.3  dir属性	190
9.3.4  lastModified属性	190
9.3.5  referrer属性	191
9.3.6  title属性	191
9.3.7  URL属性	192
9.3.8  URLUnencoded属性	192
9.4  使用document对象的方法	193
9.4.1  针对元素的get方法	195
9.4.2  open()和close()方法	197
9.4.3  write()和writeln()方法	199
9.5  使用DOM节点	200
9.5.1  DOM节点属性	200
9.5.2  DOM节点方法	202
9.6  动手尝试9-1：向文档中添加DOM节点	206
9.7  创建动态脚本	207
9.7.1  JavaScript中的样式	207
9.7.2  简单事件处理	208
9.7.3  编写动态脚本	209
9.8  动手尝试9-2：尝试修改属性	211
9.9  自测题	212
第10章  事件处理程序	215
10.1  事件处理程序的含义	216
10.2  事件处理程序的作用	216
10.3  理解事件处理程序位置和用法	216
10.3.1  在HTML元素中使用事件处理程序	217
10.3.2  在脚本代码中使用事件处理程序	218
10.4  学习事件	219
10.4.1  单击事件	221
10.4.2  获得焦点和失去焦点事件	222
10.4.3  加载和卸载事件	224
10.4.4  重置和提交事件	226
10.4.5  鼠标事件	226
10.4.6  键盘事件	227
10.5  动手尝试10-1：获得焦点和失去焦点	228
10.6  注册事件的其他方式	229
10.6.1  addEventListener()方法	230
10.6.2  attachEvent()方法	231
10.7  event对象	231
10.7.1  DOM和Internet Explorer：DOM级别0注册	231
10.7.2  使用最新事件注册方法处理事件	232
10.7.3  属性和方法	233
10.7.4  事件信息	234
10.8  动手尝试10-2：使用addEventListener()	234
10.9  使用事件处理程序创建脚本	235
10.9.1  显示隐藏内容	235
10.9.2  修改内容	237
10.10  自测题	241
第11章  window对象	243
11.1  window全局对象	244
11.2  使用window对象的属性	244
11.2.1  closed属性	246
11.2.2  frames属性	246
11.2.3  innerWidth和innerHeight属性	246
11.2.4  length属性	247
11.2.5  location属性	247
11.2.6  name属性	247
11.2.7  opener属性	248
11.2.8  parent、self和top属性	248
11.2.9  status和defaultStatus属性	248
11.3  动手尝试11-1：使用location和innerWidth属性	249
11.4  使用Window对象的方法	250
11.4.1  alert()、prompt()和confirm()方法	251
11.4.2  find()方法	253
11.4.3  home()方法	253
11.4.4  print()方法	253
11.4.5  setInterval()和clearInterval()方法	254
11.4.6  setTimeout()和clearTimeout()方法	255
11.5  动手尝试11-2：使用setTimeout()和confirm()方法	257
11.6  主窗口和新窗口	258
11.6.1  弹出窗口的使用	258
11.6.2  打开新窗口	258
11.6.3  关闭新窗口	261
11.6.4  移动、重置和滚动新窗口	262
11.7  自测题	267
第12章  Math、Number和Date对象	269
12.1  使用Math对象	270
12.1.1  Math对象的定义	270
12.1.2  如何使用Math对象	270
12.1.3  属性	270
12.1.4  方法	272
12.2  动手尝试12-1：在页面中显示随机链接	283
12.3  理解Number对象	284
12.3.1  属性	284
12.3.2  方法	286
12.4  使用Date对象	289
12.4.1  属性和方法	289
12.4.2  用于获取值的方法	291
12.4.3  用于设置值的方法	293
12.4.4  其他方法	294
12.4.5  创建日期脚本	295
12.5  动手尝试12-2：创建JavaScript时钟	298
12.6  自测题	299
第13章  处理字符串	301
13.1  String对象简介	302
13.1.1  String对象	302
13.1.2  字符串字面量	302
13.1.3  区别	302
13.2  使用String对象的属性和方法	303
13.3  String对象的方法	304
13.4  动手尝试13-1：使用indexOf()测试地址	314
13.5  使用cookie	315
13.5.1  设置cookie	316
13.5.2  读取cookie	318
13.6  动手尝试13-2：记住名字	320
13.7  使用正则表达式	321
13.7.1  创建正则表达式	321
13.7.2  使用正则表达式测试字符串	322
13.7.3  添加标志	323
13.7.4  创建强大的模式	324
13.7.5  分组表达式	327
13.7.6  replace()、match()和search()方法	328
13.7.7  更多信息	330
13.8  自测题	331
第14章  JavaScript和表单	333
14.1  访问表单	334
14.1.1  使用表单数组	334
14.1.2  使用表单名	337
14.1.3  使用id	338
14.2  使用表单对象的属性和方法	339
14.2.1  属性	339
14.2.2  方法	342
14.3  确保表单的可访问性	343
14.3.1  使用正确的元素和标签顺序	343
14.3.2  使用<label>和</label>标记	344
14.3.3  使用<fieldset></fieldset>标记	344
14.3.4  不要假设客户端会支持客户端脚本	345
14.4  验证	345
14.4.1  简单验证	346
14.4.2  技术	347
14.4.3  复选框和单选按钮	348
14.5  动手尝试14-1：请求数字	350
14.6  HTML5和表单	351
14.6.1  新元素	351
14.6.2  新输入类型	355
14.6.3  新特性	356
14.6.4  HTML5表单验证	357
14.7  动手尝试14-2：使用HTML5或JavaScript验证电话号码	358
14.8  自测题	359
第15章  高级技术简介	361
15.1　使用图像	362
15.2  动手尝试15-1：访问性更强的翻转效果	364
15.3　JavaScript和框架	365
15.3.1　框架的用法	365
15.3.2　访问框架	365
15.3.3  打破框架限制	368
15.4  调试脚本	368
15.4.1  错误类型	368
15.4.2  使用警告和控制台	371
15.4.3  使用Lint工具	372
15.4.4  浏览器开发工具	373
15.5  JavaScript和可访问性	374
15.5.1  将内容与显示分离	374
15.5.2  内容增强	376
15.6  动手尝试15-2：使该代码具有可访问性	377
15.7  JavaScript安全	378
15.7.1  安全和签名脚本	379
15.7.2  页面保护	379
15.8  AJAX和JSON	381
15.8.1  AJAX	381
15.8.2  JSON	386
15.9  自测题	390
第16章  JavaScript库、HTML5和Harmony	393
16.1  使用jQuery	394
16.1.1  获取jQuery	394
16.1.2  开始使用jQuery：document.ready()	394
16.1.3  使用选择器	395
16.1.4  修改类	396
16.1.5  用于创建特效的方法	398
16.1.6  深入阅读	400
16.2  动手尝试16-1：使用jQuery创建特效	400
16.3  其他JavaScript库	401
16.3.1  jQuery Mobile	401
16.3.2  php.js	401
16.3.3  node.js	401
16.3.4  MooTools	401
16.3.5  Three.js	401
16.4  JavaScript和HTML5	402
16.4.1  <canvas>元素	402
16.4.2  拖放	408
16.5  动手尝试16-2：拖放	411
16.6  ECMAScript Harmony	413
16.6.1  关键字const和let	413
16.6.2  默认参数值	415
16.6.3  类	416
16.6.4  关于Harmony的更多内容	417
16.7  深入阅读	417
16.8  自测题	418
附录A　自测题答案	421
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>新手学JavaScript编程(第4版)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript网页特效经典300例(含DVD光盘1张)
第1篇   JavaScript基础篇
第1章  网页特效	2
实例001  自动刷新页面	2
难度指数 ★☆☆☆☆  占用时间 ○○
实例002  让页面后退和前进	3
难度指数 ★☆☆☆☆  占用时间 ○○
实例003  动态关闭页面	4
难度指数 ★☆☆☆☆  占用时间 ○○
实例004  页面载入等待界面	5
难度指数 ★★☆☆☆  占用时间 ○○
实例005  若干秒后不操作自动关闭窗口	6
难度指数 ★☆☆☆☆  占用时间 ○○
实例006  修改网页标题	7
难度指数 ★☆☆☆☆  占用时间 ○○
实例007  禁止网页放入框架	8
难度指数 ★☆☆☆☆  占用时间 ○○
实例008  跳转到其他页面	9
难度指数 ★☆☆☆☆  占用时间 ○○
实例009  进入页面时的问候	10
难度指数 ★☆☆☆☆  占用时间 ○○
实例010  在网页里动态加载JavaScript	11
难度指数 ★★★☆☆  占用时间 ○
实例011  设为首页	12
难度指数 ★★☆☆☆  占用时间 ○○
实例012  收藏本页	13
难度指数 ★★☆☆☆  占用时间 ○○
实例013  判断页面是否加载完毕	14
难度指数 ★★☆☆☆  占用时间 ○
实例014  避免浏览器使用缓存加载页面	16
难度指数 ★☆☆☆☆  占用时间 ○
实例015  窗口打开时显示大广告图片及其自动关闭	17
难度指数 ★☆☆☆☆  占用时间 ○
实例016  带关闭按钮的右下角图片广告	19
难度指数 ★★★☆☆  占用时间 ○○
第2章  DOM操作	21
实例017  通过id获取网页中的某一部分	21
难度指数 ★☆☆☆☆  占用时间 ○○
实例018  根据name获取网页中的全部复选框	22
难度指数 ★☆☆☆☆  占用时间 ○○
实例019  根据标签名获取网页中的多个元素	23
难度指数 ★☆☆☆☆  占用时间 ○○
实例020  遍历打印一个元素的所有属性	24
难度指数 ★☆☆☆☆  占用时间 ○○
实例021  遍历HTML文档内容	26
难度指数 ★☆☆☆☆  占用时间 ○○
实例022  动态创建网页新元素	27
难度指数 ★☆☆☆☆  占用时间 ○○
实例023  删除元素	28
难度指数 ★☆☆☆☆  占用时间 ○○
实例024  主动触发按钮的单击事件	29
难度指数 ★☆☆☆☆  占用时间 ○○
实例025  替换元素内容	31
难度指数 ★☆☆☆☆  占用时间 ○○
实例026  修改元素的属性值	32
难度指数 ★☆☆☆☆  占用时间 ○○
实例027  引用同级的元素	33
难度指数 ★☆☆☆☆  占用时间 ○○
实例028  克隆元素	34
难度指数 ★★☆☆☆  占用时间 ○○
实例029  隐藏或显示元素	35
难度指数 ★☆☆☆☆  占用时间 ○○
实例030  倒排序子元素	36
难度指数 ★★★☆☆  占用时间 ○○
实例031  删除所有的子元素	38
难度指数 ★☆☆☆☆  占用时间 ○○
第3章  控制表单控件	40
实例032  遍历表单的所有控件	40
难度指数 ★☆☆☆☆  占用时间 ○○
实例033  通过控件名访问特定的控件	41
难度指数 ★☆☆☆☆  占用时间 ○○
实例034  修改控件的值	42
难度指数 ★☆☆☆☆  占用时间 ○○
实例035  获取表单内文本框的个数	44
难度指数 ★☆☆☆☆  占用时间 ○○
实例036  修改表单的提交方法	45
难度指数 ★☆☆☆☆  占用时间 ○○
实例037  动态指定表单的动作属性	46
难度指数 ★☆☆☆☆  占用时间 ○○
实例038  动态选择聚焦的控件	47
难度指数 ★☆☆☆☆  占用时间 ○○
实例039  初始化表单里的所有控件的值到最初状态	48
难度指数 ★☆☆☆☆  占用时间 ○○
实例040  为表单加上一个框	50
难度指数 ★☆☆☆☆  占用时间 ○○
实例041  批量为所有的表单控件加一个说明	51
难度指数 ★★☆☆☆  占用时间 ○○
实例042  设置下拉菜单的值	53
难度指数 ★☆☆☆☆  占用时间 ○○
实例043  使用隐藏控件为表单添加参数	54
难度指数 ★☆☆☆☆  占用时间 ○○
实例044  勾选全部复选框	55
难度指数 ★★☆☆☆  占用时间 ○
实例045  为表单的聚焦控件设置醒目的样式	57
难度指数 ★★☆☆☆  占用时间 ○○
第4章  窗口的控制和框架的互操作	59
实例046  计算窗口内的框架数量	59
难度指数 ★☆☆☆☆  占用时间 ○○
实例047  父框架对子框架的引用	60
难度指数 ★☆☆☆☆  占用时间 ○○
实例048  子框架的互相引用	61
难度指数 ★☆☆☆☆  占用时间 ○○
实例049  用top操作顶部框架	63
难度指数 ★☆☆☆☆  占用时间 ○○
实例050  确保网页只能被框架载入	64
难度指数 ★★★☆☆  占用时间 ○○
实例051  动态创建框架	65
难度指数 ★☆☆☆☆  占用时间 ○○
实例052  打开一个新窗口	66
难度指数 ★☆☆☆☆  占用时间 ○○
实例053  得到是谁打开了子窗口	67
难度指数 ★☆☆☆☆  占用时间 ○○
实例054  通过子窗口获取数据输入	69
难度指数 ★☆☆☆☆  占用时间 ○
实例055  随意改变框架的大小组合	70
难度指数 ★★☆☆☆  占用时间 ○○
实例056  巧用self操作当前文档所在的框架或窗口	72
难度指数 ★☆☆☆☆  占用时间 ○○
实例057  iframe自适应高度	73
难度指数 ★★★★☆  占用时间 ○
实例058  网页打开5秒后弹出广告窗口	75
难度指数 ★★☆☆☆  占用时间 ○○
第5章  鼠标特效	76
实例059  禁用鼠标右键	76
难度指数 ★★☆☆☆  占用时间 ○○
实例060  动态定义鼠标指针形状	77
难度指数 ★☆☆☆☆  占用时间 ○○
实例061  鼠标进出时字体大小变化	79
难度指数 ★☆☆☆☆  占用时间 ○○
实例062  双击鼠标滚动到网页底部	80
难度指数 ★☆☆☆☆  占用时间 ○
实例063  当按下鼠标左键时弹出广告窗口	81
难度指数 ★★☆☆☆  占用时间 ○○
实例064  鼠标放上链接出现不同的颜色	82
难度指数 ★★☆☆☆  占用时间 ○○
实例065  用鼠标拖动图片	83
难度指数 ★★☆☆☆  占用时间 ○○
实例066  让鼠标滑轮失效	85
难度指数 ★★☆☆☆  占用时间 ○○
第6章  按钮特效	87
实例067  为按钮加上背景颜色	87
难度指数 ★☆☆☆☆  占用时间 ○○
实例068  自定义按钮的click事件	88
难度指数 ★☆☆☆☆  占用时间 ○○
实例069  不同的按钮提交不同的表单地址	89
难度指数 ★★☆☆☆  占用时间 ○○
实例070  在网页上为用户定义一个打印按钮	90
难度指数 ★☆☆☆☆  占用时间 ○○
实例071  Enter键自动提交表单	91
难度指数 ★☆☆☆☆  占用时间 ○○
实例072  按钮在单击以后就失效	92
难度指数 ★★☆☆☆  占用时间 ○○
实例073  删除按钮必需的提醒功能	93
难度指数 ★☆☆☆☆  占用时间 ○○
实例074  图片式的按钮	94
难度指数 ★★☆☆☆  占用时间 ○○
实例075  通过单击按钮改变状态栏信息	95
难度指数 ★☆☆☆☆  占用时间 ○○
实例076  不同的状态展示不同样式的按钮	96
难度指数 ★★☆☆☆  占用时间 ○
实例077  注册按钮倒计时效果	98
难度指数 ★★★☆☆  占用时间 ○
实例078  阅读完协议以后才可以单击的注册按钮	99
难度指数 ★★★★☆  占用时间 ○
实例079  会变色的按钮	100
难度指数 ★★☆☆☆  占用时间 ○○
第7章  链接特效	102
实例080  带下画线的链接	102
难度指数 ★☆☆☆☆  占用时间 ○○
实例081  改变链接的单击事件	103
难度指数 ★☆☆☆☆  占用时间 ○○
实例082  关闭窗口的那个“X”链接	104
难度指数 ★★☆☆☆  占用时间 ○○
实例083  用链接模拟一个按钮	105
难度指数 ★★☆☆☆  占用时间 ○○
实例084  用链接替代表单提交按钮	106
难度指数 ★★☆☆☆  占用时间 ○○
实例085  动态修改一个链接的地址	107
难度指数 ★☆☆☆☆  占用时间 ○○
实例086  让所有链接都在新窗口中打开	108
难度指数 ★★☆☆☆  占用时间 ○○
实例087  让页面所有的超级链接都失效	109
难度指数 ★★☆☆☆  占用时间 ○○
实例088  为链接地址多加一个参数	110
难度指数 ★★★☆☆  占用时间 ○○
实例089  回到顶部的链接	112
难度指数 ★☆☆☆☆  占用时间 ○
实例090  需要确认的链接	113
难度指数 ★☆☆☆☆  占用时间 ○○
实例091  几条链接交替显示	114
难度指数 ★★☆☆☆  占用时间 ○○
第8章  文本输入框和下拉菜单特效	116
实例092  让文本框只带有下画线	116
难度指数 ★☆☆☆☆  占用时间 ○
实例093  用正则表达式验证E-mail格式	117
难度指数 ★★☆☆☆  占用时间 ○○
实例094  首字母或全部字母大写	118
难度指数 ★☆☆☆☆  占用时间 ○○
实例095  只能输入数字的文本框	120
难度指数 ★★☆☆☆  占用时间 ○○
实例096  判断汉字的个数	121
难度指数 ★★☆☆☆  占用时间 ○○
实例097  成为焦点时清除文本框内容	122
难度指数 ★☆☆☆☆  占用时间 ○○
实例098  动态为下拉菜单设置项目	123
难度指数 ★★★☆☆  占用时间 ○○
实例099  联动的省市下拉菜单	124
难度指数 ★★★★☆  占用时间 ○
实例100  三级联动的省市县下拉菜单	126
难度指数 ★★★★☆  占用时间 ○
实例101  用户输入完以后立刻进行格式校验	128
难度指数 ★★☆☆☆  占用时间 ○○
实例102  鼠标划过文本框改变其背景色	130
难度指数 ★★☆☆☆  占用时间 ○○
实例103  输入文字时文本框边框闪烁	131
难度指数 ★★☆☆☆  占用时间 ○○
第9章  层的应用	133
实例104  从下往上的信息滚动特效	133
难度指数 ★★☆☆☆  占用时间 ○
实例105  灯箱效果	134
难度指数 ★★★★☆  占用时间 
实例106  可以拖动的层	136
难度指数 ★★☆☆☆  占用时间 ○
实例107  让层的叠放层次分明	138
难度指数 ★★☆☆☆  占用时间 ○○
实例108  随意改变层的尺寸	139
难度指数 ★★☆☆☆  占用时间 ○○
实例109  新闻切换特效	140
难度指数 ★★★★☆  占用时间 
实例110  悬浮的广告层	144
难度指数 ★★☆☆☆  占用时间 
实例111  由左向右地滚动广告	145
难度指数 ★★★★☆  占用时间 ○
实例112  右下角的提示层	147
难度指数 ★☆☆☆☆  占用时间 ○
实例113  带关闭按钮的右下角提示层	148
难度指数 ★☆☆☆☆  占用时间 ○
实例114  底部工具栏	150
难度指数 ★★★★☆  占用时间 
第10章  表格的控制	152
实例115  动态地为表格中的单元格文字添加样式	152
难度指数 ★★☆☆☆  占用时间 ○○
实例116  动态加入一个新的表格行	153
难度指数 ★★☆☆☆  占用时间 ○○
实例117  可变样式的表格边框	154
难度指数 ★★☆☆☆  占用时间 ○○
实例118  克隆表格	156
难度指数 ★★☆☆☆  占用时间 ○
实例119  将表格的数据根据某一列排序	157
难度指数 ★★★☆☆  占用时间 ○
实例120  让表格行的背景颜色间隔开	159
难度指数 ★☆☆☆☆  占用时间 ○
实例121  删除表格中的任意一行	161
难度指数 ★★☆☆☆  占用时间 ○
实例122  隐藏表格数据	162
难度指数 ★☆☆☆☆  占用时间 ○○
实例123  用背景色重点突出表格行	163
难度指数 ★☆☆☆☆  占用时间 ○
第2篇  JavaScript进阶篇
第11章  导航菜单特效	168
实例124  简单的导航菜单	168
难度指数 ★☆☆☆☆  占用时间 ○
实例125  凸显正在浏览的菜单项的导航菜单	169
难度指数 ★★☆☆☆  占用时间 ○
实例126  二级导航菜单	170
难度指数 ★★★☆☆  占用时间 
实例127  三级导航菜单	173
难度指数 ★★★☆☆  占用时间 
实例128  动态加载导航菜单	175
难度指数 ★★★★☆  占用时间 ○
实例129  三级联动导航菜单	177
难度指数 ★★★★☆  占用时间 
实例130  树形导航菜单	180
难度指数 ★★★☆☆  占用时间 ○
实例131  当网页超过一屏时导航菜单始终置顶	182
难度指数 ★★★☆☆  占用时间 ○
第12章  日期和时间特效	184
实例132  标题栏显示当前的日期	184
难度指数 ★☆☆☆☆  占用时间 ○○
实例133  不同时段显示不同的标题欢迎词	185
难度指数 ★☆☆☆☆  占用时间 ○○
实例134  不同月份显示不同的背景效果	186
难度指数 ★★☆☆☆  占用时间 ○○
实例135  倒计时效果	187
难度指数 ★★☆☆☆  占用时间 ○○
实例136  查看“今天是否为节假日”	188
难度指数 ★☆☆☆☆  占用时间 ○○
实例137  每秒刷新的时间展示效果	190
难度指数 ★★☆☆☆  占用时间 ○○
实例138  日期输入框	191
难度指数 ★★★☆☆  占用时间 ○
实例139  使用定时器	194
难度指数 ★★★☆☆  占用时间 ○○
实例140  算出两个时间之间的时间差	195
难度指数 ★★☆☆☆  占用时间 ○○
实例141  用表格来完成一个日历特效	196
难度指数 ★★★★☆  占用时间 
实例142  月底和月初的网页标题各不相同	198
难度指数 ★☆☆☆☆  占用时间 ○○
实例143  显示登录的时间	199
难度指数 ★★☆☆☆  占用时间 ○○
第13章  样式的操作	201
实例144  不同浏览器加载不同的CSS文件	201
难度指数 ★★☆☆☆  占用时间 ○○
实例145  动态滤镜效果	202
难度指数 ★★★☆☆  占用时间 ○○
实例146  访问外部定义的CSS样式	203
难度指数 ★☆☆☆☆  占用时间 ○○
实例147  访问元素中style属性的CSS样式	204
难度指数 ★☆☆☆☆  占用时间 ○○
实例148  切换样式表	206
难度指数 ★★☆☆☆  占用时间 ○○
实例149  让样式动起来	207
难度指数 ★★☆☆☆  占用时间 ○○
实例150  同时改变多个DOM的样式	208
难度指数 ★☆☆☆☆  占用时间 ○○
实例151  隐藏和显示的切换效果	209
难度指数 ★★☆☆☆  占用时间 ○○
实例152  用JavaScript代码替代CSS实现链接样式	210
难度指数 ★★☆☆☆  占用时间 ○○
实例153  自定义错误样式	212
难度指数 ★☆☆☆☆  占用时间 ○○
第14章  网页中变量和函数的应用	214
实例154  无处不在的变量	214
难度指数 ★☆☆☆☆  占用时间 ○○
实例155  应用不同场景的变量类型	215
难度指数 ★☆☆☆☆  占用时间 ○○
实例156  无所不能的变量载体	216
难度指数 ★★☆☆☆  占用时间 ○○
实例157  巧妙地使用内部变量	217
难度指数 ★★☆☆☆  占用时间 ○○
实例158  闭包的概念和使用	218
难度指数 ★★★☆☆  占用时间 ○
实例159  使用动态的函数参数	219
难度指数 ★★☆☆☆  占用时间 ○○
实例160  调用动态函数	220
难度指数 ★★★☆☆  占用时间 ○○
第15章  图片特效	222
实例161  仿iPhone图片查看器效果	222
难度指数 ★★★☆☆  占用时间 ○
实例162  仿QQ空间相册效果	223
难度指数 ★★☆☆☆  占用时间 
实例163  放大镜特效	224
难度指数 ★★★★☆  占用时间 
实例164  让图片保持在层里的上下左右都居中	226
难度指数 ★★☆☆☆  占用时间 ○○
实例165  让图片自适应框的大小	228
难度指数 ★★☆☆☆  占用时间 ○○
实例166  图片新闻效果	229
难度指数 ★★★☆☆  占用时间 
实例167  为图片加上边框	231
难度指数 ★☆☆☆☆  占用时间 ○○
实例168  显示图片的局部	232
难度指数 ★★★☆☆  占用时间 ○
实例169  动态加载图片	233
难度指数 ★★★☆☆  占用时间 ○
实例170  重新加载验证码图片	234
难度指数 ★★☆☆☆  占用时间 ○
实例171  延迟加载图片	235
难度指数 ★★★★☆  占用时间 
第16章  文件和打印的技巧	238
实例172  判断文件上传的类型	238
难度指数 ★★☆☆☆  占用时间 ○
实例173  单独打开一个页面来完成打印功能	239
难度指数 ★★☆☆☆  占用时间 
实例174  限制多文件上传的文件类型	241
难度指数 ★★☆☆☆  占用时间 ○
实例175  上传图片以后显示缩略图	242
难度指数 ★★★☆☆  占用时间 ○
实例176  在打印内容里隐藏打印按钮	243
难度指数 ★☆☆☆☆  占用时间 ○○
第17章  对象和数组	246
实例177  创建自定义对象	246
难度指数 ★★☆☆☆  占用时间 ○○
实例178  创建数组的多种方法	247
难度指数 ★★☆☆☆  占用时间 ○○
实例179  扩展数组的元素数目	248
难度指数 ★☆☆☆☆  占用时间 ○○
实例180  在数组的末尾处加入和移除元素	249
难度指数 ★★☆☆☆  占用时间 ○○
实例181  在数组的任意位置加入和移除元素	251
难度指数 ★★☆☆☆  占用时间 ○
实例182  把数据转换成对象	252
难度指数 ★★☆☆☆  占用时间 ○○
实例183  把数组里的元素按照自然排序	254
难度指数 ★★☆☆☆  占用时间 ○○
实例184  数组的本质就是对象	255
难度指数 ★★☆☆☆  占用时间 ○○
第3篇  JavaScript高级篇
第18章  Ajax应用	258
实例185  创建动态的XMLHttpRequest对象	258
难度指数 ★☆☆☆☆  占用时间 ○○
实例186  自定义Ajax回调函数	259
难度指数 ★☆☆☆☆  占用时间 ○○
实例187  自定义Ajax请求方法	261
难度指数 ★☆☆☆☆  占用时间 ○○
实例188  为Ajax请求添加参数	262
难度指数 ★☆☆☆☆  占用时间 ○○
实例189  Ajax请求中的友好等待界面	264
难度指数 ★★☆☆☆  占用时间 ○○
实例190  根据不同的HTTP返回代码进行不同的响应	266
难度指数 ★☆☆☆☆  占用时间 ○○
实例191  Ajax传输JSON数据实例	268
难度指数 ★★☆☆☆  占用时间 ○○
实例192  定义一套自己的Ajax框架	271
难度指数 ★★☆☆☆  占用时间 ○
第19章  面向对象的特性	273
实例193  定义一个类	273
难度指数 ★★☆☆☆  占用时间 ○○
实例194  利用prototype为类创建静态成员	274
难度指数 ★★☆☆☆  占用时间 ○○
实例195  模拟继承机制	275
难度指数 ★★★☆☆  占用时间 ○○
实例196  为string类型的变量扩展一个replaceAll()函数	276
难度指数 ★★★☆☆  占用时间 ○
实例197  为对象扩展一个动态属性	277
难度指数 ★★☆☆☆  占用时间 ○○
实例198  为对象扩展一个方法	279
难度指数 ★★☆☆☆  占用时间 ○○
第20章  经典JavaScript框架应用	281
实例199  框架对JavaScript编码的意义	281
难度指数 ★☆☆☆☆  占用时间 ○○
实例200  Prototype让JavaScript面向对象	282
难度指数 ★☆☆☆☆  占用时间 ○○
实例201  利用Prototype实现继承机制	283
难度指数 ★☆☆☆☆  占用时间 ○○
实例202  用Prototype来包装JavaScript事件	284
难度指数 ★☆☆☆☆  占用时间 ○○
实例203  用Prototype轻松获取DOM的实际尺寸	285
难度指数 ★☆☆☆☆  占用时间 ○○
实例204  用Dojo动态创建层的DOM	287
难度指数 ★☆☆☆☆  占用时间 ○○
实例205  用Dojo动态指定按钮的click事件	288
难度指数 ★☆☆☆☆  占用时间 ○○
实例206  用Dojo隐退图片	289
难度指数 ★☆☆☆☆  占用时间 ○○
实例207  用Dojo轻松实现元素的拖曳	290
难度指数 ★☆☆☆☆  占用时间 ○○
实例208  利用YUI来动态监听单击事件	291
难度指数 ★☆☆☆☆  占用时间 ○○
实例209  利用YUI模拟向左滑动以删除菜单项	292
难度指数 ★☆☆☆☆  占用时间 ○○
实例210  利用YUI实现被单击按钮样式突出的效果	294
难度指数 ★★☆☆☆  占用时间 ○○
实例211  利用YUI实现网页元素隐藏和显示的切换	295
难度指数 ★☆☆☆☆  占用时间 ○○
实例212  利用YUI实现层的收缩隐藏特效	297
难度指数 ★☆☆☆☆  占用时间 ○○
实例213  利用YUI实现层的随意拖动效果	298
难度指数 ★☆☆☆☆  占用时间 ○○
实例214  利用YUI实现图片的滚动延迟加载	299
难度指数 ★☆☆☆☆  占用时间 ○○
实例215  利用YUI随意改变层的尺寸	300
难度指数 ★☆☆☆☆  占用时间 ○○
第21章  jQuery的妙用	302
实例216  选择所有的元素	302
难度指数 ★☆☆☆☆  占用时间 ○○
实例217  选择相同标签的元素	303
难度指数 ★☆☆☆☆  占用时间 ○○
实例218  选择相同class的元素	304
难度指数 ★☆☆☆☆  占用时间 ○○
实例219  快速选择表单元素	305
难度指数 ★☆☆☆☆  占用时间 ○○
实例220  选择所有已勾选的复选框	306
难度指数 ★☆☆☆☆  占用时间 ○○
实例221  指定下拉菜单的已选项	307
难度指数 ★☆☆☆☆  占用时间 ○○
实例222  选择包含特定内容的层	308
难度指数 ★☆☆☆☆  占用时间 ○○
实例223  修改元素属性的值	309
难度指数 ★☆☆☆☆  占用时间 ○○
实例224  获取和指定元素的内容	310
难度指数 ★☆☆☆☆  占用时间 ○○
实例225  一次选择多个不同类的元素	311
难度指数 ★☆☆☆☆  占用时间 ○○
实例226  删除部分文档内容	313
难度指数 ★☆☆☆☆  占用时间 ○○
实例227  一次选择多个不同类的元素	314
难度指数 ★☆☆☆☆  占用时间 ○○
实例228  快速修改样式规则	315
难度指数 ★☆☆☆☆  占用时间 ○○
实例229  获取实际元素的高度和宽度	316
难度指数 ★☆☆☆☆  占用时间 ○○
实例230  指定页面加载完成的回调	317
难度指数 ★☆☆☆☆  占用时间 ○○
实例231  为元素动态添加某种事件	318
难度指数 ★☆☆☆☆  占用时间 ○○
实例232  隐藏或显示元素	319
难度指数 ★☆☆☆☆  占用时间 ○○
实例233  滑动效果	320
难度指数 ★☆☆☆☆  占用时间 ○○
实例234  淡入效果	321
难度指数 ★☆☆☆☆  占用时间 ○○
实例235  让Ajax如此简单	322
难度指数 ★★☆☆☆  占用时间 ○○
实例236  使用Ajax获取JSON数据	323
难度指数 ★★☆☆☆  占用时间 ○○
第22章  丰富的jQuery插件应用	324
实例237  带伸缩功能的内容分段	324
难度指数 ★★☆☆☆  占用时间 ○○
实例238  带自动提示功能的文本输入框	325
难度指数 ★★☆☆☆  占用时间 ○○
实例239  多功能按钮	326
难度指数 ★☆☆☆☆  占用时间 ○○
实例240  自定义格式的日期输入框	328
难度指数 ★☆☆☆☆  占用时间 ○○
实例241  选择日期段	329
难度指数 ★☆☆☆☆  占用时间 ○○
实例242  自定义提示框	331
难度指数 ★★☆☆☆  占用时间 ○○
实例243  轻松实现层的拖动功能	332
难度指数 ★☆☆☆☆  占用时间 ○○
实例244  多级菜单	333
难度指数 ★★☆☆☆  占用时间 ○○
实例245  用幻灯片方式浏览图片	335
难度指数 ★★☆☆☆  占用时间 ○○
实例246  进度条	337
难度指数 ★☆☆☆☆  占用时间 ○○
实例247  可改变大小的层	338
难度指数 ★☆☆☆☆  占用时间 ○○
实例248  可被选择的菜单项	339
难度指数 ★★☆☆☆  占用时间 ○○
实例249  滑块效果	341
难度指数 ★☆☆☆☆  占用时间 ○○
实例250  选择范围的滑块效果	342
难度指数 ★☆☆☆☆  占用时间 ○○
实例251  可排序的列表	343
难度指数 ★☆☆☆☆  占用时间 ○○
实例252  可拖动的选择项	344
难度指数 ★☆☆☆☆  占用时间 ○○
实例253  数字输入框	346
难度指数 ★☆☆☆☆  占用时间 ○○
实例254  时间输入框	347
难度指数 ★★☆☆☆  占用时间 ○○
实例255  多页切换效果	348
难度指数 ★★☆☆☆  占用时间 ○○
实例256  带提示信息的输入框	350
难度指数 ★☆☆☆☆  占用时间 ○○
第23章  HTML 5的新应用	351
实例257  视频尺寸动态修改示例	351
难度指数 ★☆☆☆☆  占用时间 ○○
实例258  动态播放或暂停视频	352
难度指数 ★☆☆☆☆  占用时间 ○○
实例259  指定视频的播放进度	354
难度指数 ★☆☆☆☆  占用时间 ○○
实例260  隐藏音频播放器的控制按钮	355
难度指数 ★☆☆☆☆  占用时间 ○○
实例261  拖动页面上的元素	356
难度指数 ★★☆☆☆  占用时间 ○○
实例262  让图片不可以拖动	358
难度指数 ★☆☆☆☆  占用时间 ○○
实例263  使用canvas画一个矩形图案	359
难度指数 ★★☆☆☆  占用时间 ○○
实例264  使用canvas画一个圆形图案	360
难度指数 ★★☆☆☆  占用时间 ○○
实例265  用HTML 5绘制一个SVG标量圆形	362
难度指数 ★★☆☆☆  占用时间 ○○
实例266  获取用户当前的地理坐标	363
难度指数 ★★☆☆☆  占用时间 ○
实例267  根据地理信息定位城市	364
难度指数 ★★☆☆☆  占用时间 ○○
实例268  在地图上标识附近加油站的地址	365
难度指数 ★★★☆☆  占用时间 ○○
实例269  使用localStorage实现计数器	366
难度指数 ★★☆☆☆  占用时间 ○○
实例270  使用sessionStorage实现计数器	367
难度指数 ★★☆☆☆  占用时间 ○○
实例271  使用Web Worker为学生考试计时	368
难度指数 ★★☆☆☆  占用时间 ○
第24章  CSS 3带给我们的新体验	371
实例272  圆角边框	371
难度指数 ★★☆☆☆  占用时间 ○○
实例273  图形边框	372
难度指数 ★★☆☆☆  占用时间 ○○
实例274  图片阴影效果	373
难度指数 ★★★☆☆  占用时间 ○○
实例275  文字阴影效果	374
难度指数 ★★☆☆☆  占用时间 ○○
实例276  带有可见度的背景颜色	375
难度指数 ★★☆☆☆  占用时间 ○
实例277  多列显示文字	377
难度指数 ★★☆☆☆  占用时间 ○○
实例278  使用CSS 3实现过渡效果	378
难度指数 ★★☆☆☆  占用时间 ○
实例279  使用CSS 3实现动画效果	379
难度指数 ★★★☆☆  占用时间 ○
实例280  使用CSS 3实现图片旋转效果	380
难度指数 ★★☆☆☆  占用时间 ○○
实例281  可移动的图片	382
难度指数 ★☆☆☆☆  占用时间 ○○
实例282  放大和缩小图片	383
难度指数 ★☆☆☆☆  占用时间 ○○
实例283  扭曲的图片	384
难度指数 ★☆☆☆☆  占用时间 ○○
实例284  让图片立体旋转	385
难度指数 ★★☆☆☆  占用时间 ○○
第25章  JavaScript在智能手机上的应用	387
实例285  判断是否为移动浏览器	387
难度指数 ★★☆☆☆  占用时间 ○○
实例286  测试是否支持滑动事件	388
难度指数 ★★☆☆☆  占用时间 ○○
实例287  通过滑动修改网页字体大小	390
难度指数 ★★★☆☆  占用时间 ○
实例288  用手势来改变图片大小	392
难度指数 ★★★☆☆  占用时间 ○
实例289  用手势改变图片的显示方向	393
难度指数 ★★☆☆☆  占用时间 ○
实例290  使用手机GPS定位用户所在城市	395
难度指数 ★★★☆☆  占用时间 ○
第26章  其他应用和技巧	397
实例291  利用浏览器的cookie保存用户名	397
难度指数 ★★☆☆☆  占用时间 ○○
实例292  eval()函数大行其道	399
难度指数 ★☆☆☆☆  占用时间 ○○
实例293  妙用正则表达式来减少JS代码	400
难度指数 ★★☆☆☆  占用时间 ○○
实例294  按拼音首字母排序	402
难度指数 ★★☆☆☆  占用时间 ○○
实例295  用try和catch来让程序更友好	403
难度指数 ★☆☆☆☆  占用时间 ○○
实例296  不用Ajax也可以达到不刷新页面的效果	405
难度指数 ★★★☆☆  占用时间 ○
实例297  让输入的英文字母自动变成大写	406
难度指数 ★★☆☆☆  占用时间 ○○
实例298  用JSON格式来保存数据	407
难度指数 ★☆☆☆☆  占用时间 ○○
实例299  得到用户显示器的最大分辨率	409
难度指数 ★☆☆☆☆  占用时间 ○○
实例300  用JavaScript实现的抽奖程序	410
难度指数 ★★☆☆☆  占用时间 ○
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript网页特效经典300例(含DVD光盘1张)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入理解ES6
第1章 块级作用域绑定 1
var声明及变量提升（Hoisting）机制 1
块级声明 3
-- let声明 3
-- 禁止重声明 4
-- const声明 4
-- 临时死区（Temporal Dead Zone） 6
循环中的块作用域绑定 7
-- 循环中的函数 8
-- 循环中的let声明 9
-- 循环中的const声明 10
全局块作用域绑定 12
块级绑定最佳实践的进化 13
小结 13
第2章 字符串和正则表达式 14
更好的Unicode支持 14
-- UTF-16码位 15
-- codePointAt()方法 16
-- String.fromCodePoint()方法 17
-- normalize()方法 17
-- 正则表达式u修饰符 19
其他字符串变更 21
-- 字符串中的子串识别 21
-- repeat()方法 22
其他正则表达式语法变更 23
-- 正则表达式y修饰符 23
-- 正则表达式的复制 26
-- flags属性 27
模板字面量 28
-- 基础语法 28
-- 多行字符串 29
-- 字符串占位符 31
-- 标签模板 32
小结 36
第3章 函数 37
函数形参的默认值 37
-- 在ECMAScript 5中模拟默认参数 38
-- ECMAScript 6中的默认参数值 38
-- 默认参数值对arguments对象的影响 40
-- 默认参数表达式 42
-- 默认参数的临时死区 44
处理无命名参数 46
-- ECMAScript 5中的无命名参数 46
-- 不定参数 47
增强的Function构造函数 49
展开运算符 50
name属性 52
-- 如何选择合适的名称 52
-- name属性的特殊情况 52
明确函数的多重用途 54
-- 在ECMAScript 5中判断函数被调用的方法 54
-- 元属性（Metaproperty）new.target 55
块级函数 57
-- 块级函数的使用场景 58
-- 非严格模式下的块级函数 58
箭头函数 59
-- 箭头函数语法 60
-- 创建立即执行函数表达式 62
-- 箭头函数没有this绑定 63
-- 箭头函数和数组 65
-- 箭头函数没有arguments绑定 66
-- 箭头函数的辨识方法 66
尾调用优化 67
-- ECMAScript 6中的尾调用优化 68
-- 如何利用尾调用优化 69
小结 71
第4章 扩展对象的功能性 72
对象类别 72
对象字面量语法扩展 73
-- 属性初始值的简写 73
-- 对象方法的简写语法 74
-- 可计算属性名（Computed Property Name） 75
新增方法 76
-- Object.is()方法 76
-- Object.assign()方法 77
重复的对象字面量属性 80
自有属性枚举顺序 81
增强对象原型 82
-- 改变对象的原型 82
-- 简化原型访问的Super引用 83
正式的方法定义 86
小结 88
第5章 解构：使数据访问更便捷 89
为何使用解构功能 89
对象解构 90
-- 解构赋值 91
-- 默认值 92
-- 为非同名局部变量赋值 93
-- 嵌套对象解构 94
数组解构 96
-- 解构赋值 97
-- 默认值 99
-- 嵌套数组解构 99
-- 不定元素 99
混合解构 101
解构参数 102
-- 必须传值的解构参数 103
-- 解构参数的默认值 104
小结 106
第6章 Symbol和Symbol属性 107
创建Symbol 107
Symbol的使用方法 109
Symbol共享体系 110
Symbol与类型强制转换 112
Symbol属性检索 112
通过well-known Symbol暴露内部操作 113
-- Symbol.hasInstance方法 114
-- Symbol.isConcatSpreadable属性 116
-- Symbol.match、Symbol.replace、Symbol.search和Symbol.split属性 118
-- Symbol.toPrimitive方法 120
-- Symbol.toStringTag属性 122
-- Symbol.unscopables属性 125
小结 127
第7章 Set集合与Map集合 128
ECMAScript 5中的Set集合与Map集合 129
该解决方案的一些问题 129
ECMAScript 6中的Set集合 131
-- 创建Set集合并添加元素 131
-- 移除元素 133
-- Set集合的forEach()方法 133
-- 将Set集合转换为数组 136
-- Weak Set集合 136
ECMAScript 6中的Map集合 139
-- Map集合支持的方法 140
-- Map集合的初始化方法 141
-- Map集合的forEach()方法 142
-- Weak Map集合 143
小结 147
第8章 迭代器（Iterator）和生成器（Generator） 149
循环语句的问题 149
什么是迭代器 150
什么是生成器 151
-- 生成器函数表达式 153
-- 生成器对象的方法 154
可迭代对象和for-of循环 155
-- 访问默认迭代器 156
-- 创建可迭代对象 157
内建迭代器 158
-- 集合对象迭代器 158
-- 字符串迭代器 163
-- NodeList迭代器 164
展开运算符与非数组可迭代对象 165
高级迭代器功能 166
-- 给迭代器传递参数 166
-- 在迭代器中抛出错误 168
-- 生成器返回语句 170
-- 委托生成器 171
异步任务执行 174
-- 简单任务执行器 174
-- 向任务执行器传递数据 176
-- 异步任务执行器 177
小结 180
第9章 JavaScript中的类 181
ECMAScript 5中的近类结构 181
类的声明 182
-- 基本的类声明语法 182
-- 为何使用类语法 184
类表达式 186
-- 基本的类表达式语法 186
-- 命名类表达式 187
作为一等公民的类 189
访问器属性 190
可计算成员名称 192
生成器方法 193
静态成员 195
继承与派生类 196
-- 类方法遮蔽 199
-- 静态成员继承 199
-- 派生自表达式的类 200
-- 内建对象的继承 203
-- Symbol.species属性 205
在类的构造函数中使用new.target 208
小结 210
第10章 改进的数组功能 211
创建数组 211
-- Array.of()方法 212
-- Array.from()方法 213
为所有数组添加的新方法 216
-- find()方法和findIndex()方法 217
-- fill()方法 217
-- copyWithin()方法 218
定型数组 219
-- 数值数据类型 220
-- 数组缓冲区 221
-- 通过视图操作数组缓冲区 221
定型数组与普通数组的相似之处 228
-- 通用方法 229
-- 相同的迭代器 230
-- of()方法和from()方法 230
定型数组与普通数组的差别 231
-- 行为差异 231
-- 缺失的方法 232
-- 附加方法 233
小结 234
第11章 Promise与异步编程 235
异步编程的背景知识 235
-- 事件模型 236
-- 回调模式 236
Promise的基础知识 239
-- Promise的生命周期 239
-- 创建未完成的Promise 242
-- 创建已处理的Promise 244
-- 执行器错误 247
全局的Promise拒绝处理 248
Node.js环境的拒绝处理 248
浏览器环境的拒绝处理 251
串联Promise 253
-- 捕获错误 254
-- Promise链的返回值 255
-- 在Promise链中返回Promise 256
响应多个Promise 259
-- Promise.all()方法 259
-- Promise.race()方法 260
自Promise继承 262
基于Promise的异步任务执行 263
小结 267
第12章 代理（Proxy）和反射（Reflection）API 269
数组问题 269
代理和反射 270
创建一个简单的代理 271
使用set陷阱验证属性 272
用get陷阱验证对象结构（Object Shape） 274
使用has陷阱隐藏已有属性 275
用deleteProperty陷阱防止删除属性 277
原型代理陷阱 279
-- 原型代理陷阱的运行机制 279
-- 为什么有两组方法 281
对象可扩展性陷阱 282
-- 两个基础示例 283
-- 重复的可扩展性方法 284
属性描述符陷阱 285
-- 给Object.defineProperty()添加限制 286
-- 描述符对象限制 287
-- 重复的描述符方法 288
ownKeys陷阱 290
函数代理中的apply和construct陷阱 291
-- 验证函数参数 292
-- 不用new调用构造函数 294
-- 覆写抽象基类构造函数 296
-- 可调用的类构造函数 297
可撤销代理 298
解决数组问题 299
-- 检测数组索引 300
-- 添加新元素时增加length的值 300
-- 减少length的值来删除元素 302
-- 实现MyArray类 304
将代理用作原型 307
-- 在原型上使用get陷阱 307
-- 在原型上使用set陷阱 308
-- 在原型上使用has陷阱 309
-- 将代理用作类的原型 310
小结 314
第13章 用模块封装代码 315
什么是模块 315
导出的基本语法 316
导入的基本语法 317
-- 导入单个绑定 318
-- 导入多个绑定 318
-- 导入整个模块 318
-- 导入绑定的一个微妙怪异之处 320
导出和导入时重命名 320
模块的默认值 321
-- 导出默认值 321
-- 导入默认值 322
重新导出一个绑定 323
无绑定导入 324
加载模块 325
-- 在Web浏览器中使用模块 325
-- 浏览器模块说明符解析 329
小结 330
附录A ECMAScript 6中较小的改动 331
附录B 了解ECMAScript 7（2016） 337
索引 343
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入理解ES6
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>锋利的jQuery
第1章 认识jQuery 1
1.1 JavaScript和JavaScript库 1
1.1.1 JavaScript简介 1
1.1.2 JavaScript库作用及对比 1
1.2 加入jQuery 3
1.2.1 jQuery简介 3
1.2.2 jQuery的优势 4
1.3 jQuery代码的编写 5
1.3.1 配置jQuery环境 5
1.3.2 编写简单的jQuery代码 7
1.3.3 jQuery代码风格 8
1.4 jQuery对象和DOM对象 11
1.4.1 DOM对象和jQuery对象简介 11
1.4.2 jQurey对象和DOM对象的相互转换 13
1.4.3 实例研究 14
1.5 解决jQuery和其他库的冲突 16
1.6 jQuery开发工具和插件 18
1.7 小结 22
第2章 jQuery选择器 23
2.1 jQuery选择器是什么 23
2.2 jQuery选择器的优势 26
2.3 jQuery选择器 27
2.3.1 基本选择器 32
2.3.2 层次选择器 33
2.3.3 过滤选择器 35
2.3.4 表单选择器 48
2.4 应用jQuery改写示例 50
2.5 选择器中的一些注意事项 50
2.5.1 选择器中含有特殊符号的注意事项 50
2.5.2 选择器中含有空格的注意事项 51
2.6 案例研究——某网站品牌列表的效果 52
2.7 其他选择器 58
2.7.1 jQuery提供的选择器的扩展 58
2.7.2 其他使用CSS选择器的方法 59
2.8 小结 60
第3章 jQuery中的DOM操作 61
3.1 DOM操作的分类 61
3.2 jQuery中的DOM操作 62
3.2.1 查找节点 63
3.2.2 创建节点 64
3.2.3 插入节点 66
3.2.4 删除节点 69
3.2.5 复制节点 71
3.2.6 替换节点 72
3.2.7 包裹节点 72
3.2.8 属性操作 75
3.2.9 样式操作 76
3.2.10 设置和获取HTML、文本和值 80
3.2.11 遍历节点 85
3.2.12 CSS-DOM操作 88
3.3 案例研究——某网站的超链接和图片提示效果 91
3.4 小结 97
第4章 jQuery中的事件和动画 98
4.1 jQuery中的事件 98
4.1.1 加载DOM 98
4.1.2 事件绑定 101
4.1.3 合成事件 105
4.1.4 事件冒泡 108
4.1.5 事件对象的属性 112
4.1.6 移除事件 114
4.1.7 模拟操作 117
4.1.8 其他用法 118
4.2 jQuery中的动画 120
4.2.1 show()方法和hide()方法 120
4.2.2 fadeIn()方法和fadeOut()方法 122
4.2.3 slideUp()方法和slideDown()方法 123
4.2.4 自定义动画方法animate() 123
4.2.5 动画回调函数 127
4.2.6 停止动画和判断是否处于动画状态 127
4.2.7 其他动画方法 130
4.2.8 动画方法概括 131
4.3 视频展示效果实例 133
4.4 小结 139
第5章 jQuery对表单、表格的操作及更多应用 140
5.1 表单应用 140
5.1.1 单行文本框应用 140
5.1.2 多行文本框应用 142
5.1.3 复选框应用 145
5.1.4 下拉框应用 149
5.1.5 表单验证 152
5.2 表格应用 155
5.2.1 表格变色 156
5.2.2 表格展开关闭 160
5.2.3 表格内容筛选 161
5.3 其他应用 163
5.3.1 网页字体大小 163
5.3.2 网页选项卡 165
5.3.3 网页换肤 167
5.4 小结 171
第6章 jQuery与Ajax的应用 172
6.1 Ajax的优势和不足 172
6.1.1 Ajax的优势 172
6.1.2 Ajax的不足 173
6.2 Ajax的XMLHttpRequest对象 173
6.3 安装Web环境——AppServ 174
6.4 编写第1个Ajax例子 175
6.5 jQuery中的Ajax 177
6.5.1 load()方法 177
6.5.2 $.get()方法和$.post()方法 179
6.5.3 $.getScript()方法和$.getJson()方法 185
6.5.4 $.ajax()方法 188
6.6 序列化元素 191
6.7 jQuery中的Ajax全局事件 193
6.8 基于jQuery的Ajax聊天室程序 195
6.8.1 基本设想 195
6.8.2 设计数据库 195
6.8.3 服务器端处理 196
6.8.4 客户端处理 197
6.8.5 客户端代码 197
6.8.6 整合代码 201
6.9 小结 202
第7章 jQuery插件的使用和写法 203
7.1 jQuery表单验证插件——Validation 203
7.1.1 Validation简介 203
7.1.2 下载地址 204
7.1.3 快速上手 204
7.1.4 不同的验证写法 207
7.1.5 验证信息 209
7.1.6 自定义验证规则 212
7.1.7 API 213
7.2 jQuery表单插件——Form 213
7.2.1 Form插件简介 213
7.2.2 下载地址 214
7.2.3 快速上手 214
7.2.4 核心方法——ajaxForm()和ajaxSubmit() 215
7.2.5 ajaxForm()方法和ajaxSubmit()方法的参数 215
7.2.6 表单提交之前验证表单 218
7.2.7 API 220
7.3 模态窗口插件——SimpleModal 220
7.3.1 SimpleModal插件简介 220
7.3.2 下载地址 221
7.3.3 快速上手 221
7.3.4 关闭模态窗口 222
7.3.5 实际应用 223
7.3.6 API 225
7.4 管理Cookie的插件——Cookie 225
7.4.1 Cookie插件简介 225
7.4.2 下载地址 225
7.4.3 快速上手 226
7.4.4 API 227
7.5 jQuery UI插件 228
7.5.1 jQuery UI简介 228
7.5.2 下载地址 228
7.5.3 快速上手 230
7.5.4 与单击事件冲突 231
7.5.5 与后台结合 232
7.6 编写jQuery插件 234
7.6.1 插件的种类 234
7.6.2 插件的基本要点 234
7.6.3 插件中的闭包 235
7.6.4 jQuery插件的机制 236
7.6.5 编写jQuery插件 237
7.7 小结 248
第8章 用jQuery打造个性网站 249
8.1 案例背景介绍 249
8.2 网站材料 249
8.3 网站结构 249
8.3.1 文件结构 249
8.3.2 网页结构 250
8.3.3 界面设计 250
8.4 网站的(X)HTML 252
8.5 网站样式(CSS) 252
8.5.1 将CSS文件分门别类 252
8.5.2 编写CSS 252
8.6 网站脚本(jQuery) 273
8.6.1 准备工作 273
8.6.2 首页(index.html)上的功能 274
8.6.3 详细页(detail.html)上的功能 282
8.7 小结 290
第9章 jQuery Mobile 291
9.1 HTML 5简介 291
9.2 jQuery Mobile简介 292
9.3 jQuery Mobile主要特性 292
9.4 jQuery Mobile的使用 293
9.4.1 准备工作 293
9.4.2 构建HTML模板 294
9.4.3 data-role属性 295
9.4.4 添加内容 296
9.4.5 样式切换 297
9.5 其他框架 298
9.5.1 移动框架 298
9.5.2 PhoneGap 299
9.6 小结 299
第10章 jQuery各个版本的变化 300
10.1 jQuery的发展历史 300
10.2 jQuery各个版本新增方法 307
10.3 小结 311
第11章 jQuery性能优化和技巧 312
11.1 jQuery性能优化 312
11.2 jQuery技巧 318
11.3 小结 328
附录A 关于$(document).ready()函数 329
A.1 $(document).ready()函数介绍 329
A.2 多个$(document).ready()函数 330
附录B Firebug 331
B.1 概述 331
B.2 主面板简介 332
B.2.1 控制台面板 333
B.2.2 HTML面板 337
B.2.3 CSS、DOM和网络面板 341
B.2.4 脚本面板 341
B.3 一些资源 344
B.4 总结 345
附录C Ajax的XMLHttpRequest对象的属性和方法 346
附录D jQuery $.ajax()方法的参数详解 349
附录E jQuery加载并解析XML 353
E.1 简述 353
E.2 Content-Type 353
E.3 XML结构 353
E.4 获取XML 354
E.5 解析XML 355
E.6 禁用缓存 355
附录F 插件API 357
F.1 Validation插件API 357
F.2 Form插件API 359
F.3 SimpleModal插件API 365
F.4 Cookie插件API 366
附录G jQuery速查表 368
G.1 基础 368
G.2 选择器 369
G.3 属性 371
G.4 筛选 371
G.5 文档处理 372
G.6 CSS 373
G.7 事件 374
G.8 效果 376
G.9 Ajax 377
G.10 实用项 378
G.11 其他对象 379
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>锋利的jQuery
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>全面理解JavaScript
第一章  JavaScript简介
第二章  变量、函数、对象和事件
第三章  数据类型和运算符
第四章  使用控制结构和语句进行流程控制
第五章  窗口和帧
第六章  表单
第七章  动态HTML和动画
第八章  Cookies和安全
第九章  调试JavaScript
第十章  服务器端JavaScript
第十一章   数据库连接
第十二章   使用Java小应用程序和嵌入数据
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>全面理解JavaScript
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5 Canvas核心技术
《html5 canvas核心技术：图形、动画与游戏开发》
译者序
前言
第1章　基础知识	1
1.1　canvas元素	1
1.1.1　canvas元素的大小与绘图表面的大小	4
1.1.2　canvas元素的api	5
1.2　canvas的绘图环境	6
1.2.1　2d绘图环境	6
1.2.2　canvas状态的保存与恢复	8
1.3　本书程序清单的规范格式	9
1.4　开始学习html5	10
1.4.1　规范	10
1.4.2　浏览器	11
1.4.3　控制台与调试器	11
1.4.4　性能	13
1.5　基本的绘制操作	15
1.6　事件处理	18
1.6.1　鼠标事件	18
1.6.2　键盘事件	22
.1.6.3　触摸事件	23
1.7　绘制表面的保存与恢复	23
1.8　在canvas中使用html元素	25
1.9　打印canvas的内容	32
1.10　离屏canvas	35
1.11　基础数学知识简介	37
1.11.1　求解代数方程	37
1.11.2　三角函数	38
1.11.3　向量运算	39
1.11.4　根据计量单位来推导等式	42
1.12　总结	44
第2章　绘制	45
2.1　坐标系统	46
2.2　canvas的绘制模型	47
2.3　矩形的绘制	48
2.4　颜色与透明度	50
2.5　渐变色与图案	52
2.5.1　渐变色	52
2.5.2　图案	54
2.6　阴影	57
2.7　路径、描边与填充	60
2.7.1　路径与子路径	63
2.7.2　剪纸效果	64
2.8　线段	69
2.8.1　线段与像素边界	70
2.8.2　网格的绘制	71
2.8.3　坐标轴的绘制	72
2.8.4　橡皮筋式的线条绘制	74
2.8.5　虚线的绘制	79
2.8.6　通过扩展canvasrenderingcontext2d来绘制虚线	80
2.8.7　线段端点与连接点的绘制	81
2.9　圆弧与圆形的绘制	83
2.9.1　arc()方法的用法	83
2.9.2　以橡皮筋式辅助线来协助用户画圆	85
2.9.3　arcto()方法的用法	86
2.9.4　刻度仪表盘的绘制	88
2.10　贝塞尔曲线	93
2.10.1　二次方贝塞尔曲线	93
2.10.2　三次方贝塞尔曲线	95
2.11　多边形的绘制	97
2.12　高级路径操作	102
2.12.1　拖动多边形对象	102
2.12.2　编辑贝塞尔曲线	107
2.12.3　自动滚动网页，使某段路径所对应的元素显示在视窗中	115
2.13　坐标变换	116
2.13.1　坐标系的平移、缩放与旋转	116
2.13.2　自定义的坐标变换	119
2.14　图像合成	123
2.15　剪辑区域	128
2.15.1　通过剪辑区域来擦除图像	128
2.15.2　利用剪辑区域来制作伸缩式动画	133
2.16　总结	135
第3章　文本	137
3.1　文本的描边与填充	137
3.2　设置字型属性	141
3.3　文本的定位	144
3.3.1　水平与垂直定位	144
3.3.2　将文本居中	146
3.3.3　文本的度量	147
3.3.4　绘制坐标轴旁边的文本标签	148
3.3.5　绘制数值仪表盘周围的文本标签	151
3.3.6　在圆弧周围绘制文本	152
3.4　实现文本编辑控件	154
3.4.1　指示文本输入位置的光标	154
3.4.2　在canvas中编辑文本	159
3.4.3　文本段的编辑	163
3.5　总结	174
第4章　图像与视频	175
4.1　图像的绘制	176
4.1.1　在canvas之中绘制图像	176
4.1.2　drawimage()方法的用法	177
4.2　图像的缩放	179
4.3　将一个canvas绘制到另一个canvas之中	183
4.4　离屏canvas	186
4.5　操作图像的像素	189
4.5.1　获取图像数据	189
4.5.2　修改图像数据	195
4.6　结合剪辑区域来绘制图像	208
4.7　以图像制作动画	211
4.8　图像绘制的安全问题	216
4.9　性能	216
4.9.1　对比drawimage(htmlimage)、drawimage(htmlcanvas)与putimagedata()的绘图效率	217
4.9.2　在canvas中绘制另一个canvas与绘制普通图像之间的对比；在绘制时缩放图像与保持原样之间的对比	217
4.9.3　遍历图像数据	218
4.10　放大镜	222
4.10.1　使用离屏canvas	224
4.10.2　接受用户从文件系统中拖放进来的图像	225
4.11　视频处理	227
4.11.1　视频格式	227
4.11.2　在canvas中播放视频	229
4.11.3　视频处理	230
4.12　总结	234
第5章　动画	235
5.1　动画循环	235
5.1.1　通过requestanimationframe()方法让浏览器来自行决定帧速率	237
5.1.2　internet explorer浏览器对requestanimationframe()功能的实现	241
5.1.3　可移植于各浏览器平台的动画循环逻辑	241
5.2　帧速率的计算	248
5.3　以不同的帧速率来执行各种任务	249
5.4　恢复动画背景	250
5.4.1　利用剪辑区域来处理动画背景	250
5.4.2　利用图块复制技术来处理动画背景	252
5.5　利用双缓冲技术绘制动画	253
5.6　基于时间的运动	254
5.7　背景的滚动	257
5.8　视差动画	261
5.9　用户手势	264
5.10　定时动画	266
5.10.1　秒表	266
5.10.2　动画计时器	269
5.11　动画制作的最佳指导原则	270
5.12　总结	271
第6章　精灵	272
6.1　精灵概述	273
6.2　精灵绘制器	275
6.2.1　描边与填充绘制器	275
6.2.2　图像绘制器	279
6.2.3　精灵表绘制器	281
6.3　精灵对象的行为	284
6.3.1　将多个行为组合起来	285
6.3.2　限时触发的行为	287
6.4　精灵动画制作器	289
6.5　基于精灵的动画循环	293
6.6　总结	294
第7章　物理效果	295
7.1　重力	295
7.1.1　物体的下落	296
7.1.2　抛射体弹道运动	298
7.1.3　钟摆运动	307
7.2　时间轴扭曲	311
7.3　时间轴扭曲函数	315
7.4　时间轴扭曲运动	317
7.4.1　没有加速度的线性运动	319
7.4.2　逐渐加速的缓入运动	320
7.4.3　逐渐减速的缓出运动	322
7.4.4　缓入缓出运动	323
7.4.5　弹簧运动与弹跳运动	324
7.5　以扭曲后的帧速率播放动画	326
7.6　总结	332
第8章　碰撞检测	333
8.1　外接图形判别法	333
8.1.1　外接矩形判别法	333
8.1.2　外接圆判别法	334
8.2　碰到墙壁即被弹回的小球	336
8.3　光线投射法	337
8.4　分离轴定理（sat）与最小平移向量（mtv）	340
8.4.1　使用分割轴定理检测碰撞	340
8.4.2　根据最小平移向量应对碰撞	362
8.5　总结	373
第9章　游戏开发	374
9.1　游戏引擎	374
9.1.1　游戏循环	376
9.1.2　加载图像	382
9.1.3　同时播放多个声音	384
9.1.4　键盘事件	385
9.1.5　高分榜	386
9.1.6　游戏引擎源代码	387
9.2　游戏原型	395
9.2.1　游戏原型程序的html代码	396
9.2.2　原型程序的游戏循环	399
9.2.3　游戏原型程序的加载画面	400
9.2.4　暂停画面	402
9.2.5　按键监听器	404
9.2.6　游戏结束及高分榜	404
9.3　弹珠台游戏	407
9.3.1　游戏循环弹珠	408
9.3.2　弹珠精灵	410
9.3.3　重力与摩擦力	411
9.3.4　弹板的移动	412
9.3.5　处理键盘事件	413
9.3.6　碰撞检测	416
9.4　总结	425
第10章　自定义控件	 426
10.1　圆角矩形控件	427
10.2　进度条控件	433
10.3　滑动条控件	437
10.4　图像查看器控件	446
10.5　总结	454
第11章　移动平台开发	455
11.1　移动设备的视窗	456
11.2　媒体特征查询技术	461
11.2.1　媒体特征查询与css	461
11.2.2　用javascript程序应对媒体特征的变化	462
11.3　触摸事件	464
11.3.1　touchevent对象	464
11.3.2　touchlist对象	465
11.3.3　touch对象	466
11.3.4　同时支持触摸事件与鼠标事件	466
11.3.5　手指缩放	468
11.4　ios5	469
11.4.1　应用程序图标及启动画面	469
11.4.2　利用媒体特征查询技术设置ios5系统的应用程序图标及启动画面	470
11.4.3　以不带浏览器饰件的全屏模式运行应用程序	471
11.4.4　应用程序的状态栏	471
11.5　虚拟键盘	472
11.6　总结	485
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5 Canvas核心技术
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Web GIS从基础到开发实践
第1章Web GIS基础
1.1GIS及相关技术的发展
1.1.1Web开发技术的发展
1.1.2GIS的发展
1.1.3Web服务的发展
1.1.4Web GIS的发展
1.2OGC的Web服务规范
1.2.1OWS服务体系
1.2.2空间信息Web服务的角色与功能
1.2.3空间信息Web服务的系统框架
1.2.4OWS中的常用服务
1.2.5服务的请求与响应
1.3REST及REST风格的Web服务
1.3.1REST中的基础知识
1.3.2REST风格的Web服务
1.3.3REST风格的Web服务实例
1.4Web GIS的组成
1.5ArcGIS Server REST风格的Web服务
1.5.1ArcGIS Server站点的架构
1.5.2ArcGIS Server发布的服务类型
1.5.3服务发布
1.5.4Web服务的URL及元数据
1.5.5查看地图
1.5.6使用ArcGIS Server REST风格Web服务的过程
1.5.7支持的输出格式
第2章ArcGIS API for JavaScript基础
2.1ArcGIS API for JavaScript版的Hello World
2.2ArcGIS API for JavaScript与Dojo
2.2.1ArcGIS API for JavaScript的构成
2.2.2ArcGIS API for JavaScript与Dojo的关系
2.3开发与调试工具
2.3.1集成开发环境
2.3.2调试工具
2.3.3Firebug
2.3.4其他工具软件
2.4Dojo基础知识
2.4.1JavaScript对象
2.4.2函数也是对象
2.4.3模拟类与继承
2.4.4使用模块与包管理源代码
第3章页面布局设计
3.1使用布局小部件设计页面框架
3.1.1小部件与布局小部件简介
3.1.2使用面板组织页面元素
3.1.3使用容器小部件设计页面布局
3.2可移动的小部件微架构
3.2.1自定义小部件的基础知识
3.2.2内容小部件的基类实现
3.2.3可移动的框架小部件
3.2.4测试
3.3集中控制的小部件微架构
3.3.1可集中控制的框架小部件
3.3.2小部件容器
3.3.3测试
3.3.4订阅／发布模式的事件处理机制
3.4使用菜单组织功能
3.4.1菜单容器小部件
3.4.2菜单项小部件
3.4.3菜单小部件
3.4.4测试
第4章地图与图层
4.1图层操作
4.1.1图层类及其之间的继承关系
4.1.2切片地图图层
4.1.3动态地图图层
4.1.4图形图层
4.1.5带地理参考的影像图层
4.1.6 KML图层
4.2自定义图层
4.2.1自定义动态图层——热度图图层
4.2.2自定义切片地图图层——百度地图
4.2.3自定义图层——三维建筑图
4.3地图操作
4.3.1地图窗口操作
4.3.2地图属性获取
4.3.3事件处理
4.4地图参数的基本配置
4.4.1漫游与缩放动画的参数配置
4.4.2比例滚动条的参数配置
4.4.3跨域访问参数配置
4.5图层控制器
4.5.1图层控制器小部件模板
4.5.2图层控制器小部件类
4.5.3图层控制器小部件的使用
第5章空间参考系统与几何对象
5.1空间参考系统
5.1.1空间参考系统类
5.1.2参考系统转换
5.2几何对象
5.2.1几何对象类及其之间的继承关系
5.2.2几何对象的绘制
5.2.3几何对象相关的功能模块
第6章符号与图形
6.1符号
6.1.1标记符号
6.1.2线符号
6.1.3填充符号
6.1.4文本符号
6.2图形
6.2.1图形对象的构成
6.2.2 InfoTemplate与InfoWindow
6.3符号与图形代码优化
第7章要素图层与专题图
7.1要素图层
7.1.1要素图层的创建
7.1.2显示模式的选择
7.1.3返回数据的限定
7.2专题图
7.2.1独立值专题图
7.2.2点密度专题图
7.2.3范围专题图
7.2.4等级符号专题图
7.2.5时序专题图
7.2.6多比例尺专题图
7.2.7多变量专题图
7.3自定义专题图
7.3.1直方图专题图
7.3.2饼图专题图
7.4使用CSS对要素样式化
7.4.1浏览器矢量绘制方法
7.4.2使用CSS对要素样式化的步骤
7.4.3使用D3.js增强要素的CSS样式化
……
第8章空间分析
第9章小部件与工具条
第10章混搭地图应用实例
第11章利用HTML5提升应用
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Web GIS从基础到开发实践
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript经典范例50讲
预备知识
第1讲 检测系统基本信息
第2讲 操作网页基本元素
第3讲 表单提交信息的验证
第4讲 实现框架间的信息交互
第5讲 实现键盘操作
第6讲 用Cookie获取用户信息
第7讲 JavaScript窗口特效
第8讲 JavaScript的时间特效
第9讲 文字移动
第10讲 文字的色彩特效
第11讲 文字形状特效
第12讲 文本特效
第13讲 文字特效的综合运用
第14讲 图像的显示特效
……
附录A JavaScript出错信息
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript经典范例50讲
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript完全参考手册(第3版)
第1部分 概述
第1章 JavaScript介绍
第2章 JavaScript核心语言
第2部分 核心语言
第3章 数据类型与变量
第4章 运算符、表达式和语句
第5章 函数
第6章 对象
第7章 数组、日期、数学对象以及与类型相关的对象
第8章 正则表达式
第9章 JavaScript对象模型
第10章 标准文档对象模型
第11章 事件处理
第3部分 JavaScript应用
第12章 窗口、框架和重叠
第13章 表单处理
第14章 用户界面元素
第15章 Ajax和远程JavaScript
第16章 浏览器管理
第17章 媒体管理
第18章 实践与发展趋势
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript完全参考手册(第3版)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>基于MVC的JavaScript Web富应用开发
第1章 MVC和类  1
最初  1
增加结构  2
什么是MVC  2
模型  3
视图  4
控制器  5
向模块化进军，创建类  6
给类添加函数  7
给“类”库添加方法  8
基于原型的类继承  10
给“类”库添加继承  11
函数调用  12
控制“类”库的作用域  15
添加私有函数  17
“类”库  18
第2章 事件和监听  21
监听事件  21
事件顺序  22
取消事件  23
事件对象  23
事件库  25
切换上下文  26
委托事件  26
自定义事件  27
自定义事件和jQuery 插件  28
DOM 无关事件  30
第3章 模型和数据  33
MVC 和命名空间  33
构建对象关系映射（ORM）  34
原型继承  35
添加ORM 属性  36
持久化记录  37
增加ID 支持  39
寻址引用  40
装载数据  41
直接嵌套数据  42
通过Ajax 载入数据  42
JSONP  46
跨域请求的安全性  46
向ORM 中添加记录  47
本地存储数据  47
给ORM 添加本地存储  49
将新记录提交给服务器  51
第4章 控制器和状态  53
模块模式  54
全局导入  54
全局导出  54
添加少量上下文  55
抽象出库  56
文档加载完成后载入控制器  58
访问视图  59
委托事件  61
状态机  63
路由选择  65
使用URL 中的hash  65
检测hash 的变化  66
抓取Ajax  67
使用HTML5 History API  68
第5章 视图和模板  71
动态渲染视图  71
模板  73
模板Helpers  75
模板存储  75
绑定  77
模型中的事件绑定  78
第6章 依赖管理  81
CommonJS  82
模块的声明  83
模块和浏览器  83
模块加载器  84
Yabble  84
RequireJS  85
包装模块  87
模块的按需加载  88
LABjs  89
无交互行为内容的闪烁（FUBC）  89
第7章 使用文件  91
浏览器支持  91
获取文件信息  92
文件输入  92
拖曳  93
拖曳  94
释放拖曳  96
撤销默认的Drag/Drop  97
复制和粘贴  97
复制  98
粘贴  99
读文件  100
二进制大文件和文件切割  101
自定义浏览器按钮  102
上传文件  102
Ajax 进度条  104
jQuery 拖曳上传  106
创建拖曳目标区域  106
上传文件  107
第8章 实时Web  109
实时Web 的发展历史  109
WebSocket  110
Node js 和Socket IO  114
实时架构  116
感知速度  117
第9章 测试和调试  119
单元测试  121
断言  121
QUnit  122
Jasmine  126
驱动  128
无界面的测试  131
Zombie  132
Ichabod  134
分布式测试  135
提供支持  136
调试工具  136
Web Inspector  136
Firebug  138
控制台  139
控制台函数  140
使用JavaScript 调试器  141
分析网络请求  143
Profile 和函数运行时间  144
第10章 部署  147
性能  147
缓存  148
源码压缩（Minification）  150
Gzip 压缩  151
使用CDN  152
审查工具  153
外部资源  154
第11章 Spine类库  155
设置  155
类  156
实例化  156
类扩展  157
上下文  158
事件  159
模型  160
获取记录  161
模型事件  162
校验  163
持久化  163
控制器  165
代理  166
元素  167
委托事件  167
控制器事件  168
全局事件  168
渲染模式  169
元素模式  169
构建联系人管理应用  171
联系人模型  172
侧边栏控制器  173
联系人控制器  175
应用程序控制器  178
第12章 Backbone类库  181
模型  182
模型和属性  182
集合  184
控制集合的内部顺序  185
视图  185
渲染视图  186
委托事件  187
绑定和上下文  187
控制器  188
与服务器的同步  190
填充集合  192
服务器端  192
自定义行为  193
构建To-Do 列表应用  195
第13章 JavaScriptMVC类库  203
设置  204
Class  204
实例化  205
调用基类的方法  205
代理  205
静态继承  206
自省  206
一个模型的例子  207
模型  207
属性和可观察  208
扩展模型  210
Setter  210
defaults  211
辅助方法  211
服务封装  212
类型转换  215
CRUD 事件  216
在视图中使用客户端模板  216
基本用法  217
jQuery 修改器  217
用script 标签加载  217
$ View 和子模板  218
延时对象  218
打包、预加载和性能  219
$ Controller ：jQuery 插件工厂  220
概览  222
控制器实例化  222
事件绑定  223
模板动作  224
大综合：一个抽象的CRUD 列表  225
附录A jQuery基础  227
附录B CSS扩展  239
附录C CSS3参考  245
索引  267
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>基于MVC的JavaScript Web富应用开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript高效图形编程 (修订版)
第1章 代码重用和优化1
1.1 快速运行4
1.2 优化什么，何时优化？4
1.3 自定义代码性能测试7
1.4 优化JavaScript8
1.4.1 查找表8
1.4.2 位操作、整数和二进制数12
1.5 优化jQuery和DOM交互20
1.5.1 优化CSS格式变化20
1.5.2 优化DOM插入22
1.6 其他资源23
第2章 DHTML基础24
2.1 创建DHTML sprite24
2.1.1 图像动画25
2.1.2 封装和画图抽象27
2.1.3 最小化DOM插入和删除27
2.1.4 sprite代码27
2.1.5 一个简单的sprite应用程序29
2.1.6 一个更动态的sprite应用程序31
2.2 转为一个jQuery插件35
2.3 定时器、速度和帧速率37
2.3.1 使用setInterval和setTimeout38
2.3.2 定时器精度39
2.3.3 保持速度一致40
2.4 IE6背景图像缓存45
第3章 滚动46
3.1 纯CSS滚动特效46
3.2 用JavaScript滚动50
3.2.1 背景图像滚动50
3.2.2 基于块的图像滚动52
第4章 高级UI68
4.1 HTML5表单68
4.2 使用JavaScript UI库70
4.3 从头创建UI元素78
第5章 JavaScript游戏介绍89
5.1 游戏对象概述90
5.2 游戏代码92
5.2.1 游戏变量92
5.2.2 读取键盘输入93
5.2.3 移动所有物体95
5.2.4 一个简单的动画96
5.2.5 碰撞检测97
5.2.6 外星人102
5.2.7 玩家107
5.2.8 护甲110
5.2.9 神秘飞碟111
5.2.10 游戏112
5.2.11 所有代码116
第6章 HTML5画布119
6.1 画布的支持120
6.2 位图、矢量图，或两者兼而有之？120
6.3 画布限制121
6.4 画布与SVG的对比121
6.5 画布与Adobe Flash的对比122
6.6 画布导出器123
6.7 画布绘制基础125
6.7.1 画布元素125
6.7.2 绘图环境125
6.7.3 绘制矩形126
6.7.4 绘制直线和曲线的路径126
6.7.5 绘制位图图像133
6.7.6 颜色、描边和填充134
6.8 使用画布创建动画138
6.9 画布和递归绘图140
6.10 用画布sprites取代DHTMLsprite143
6.10.1 新CanvasSprite对象143
6.10.2 其他的代码更改144
6.11 一个图形使用画布的WebSockets聊天应用145
6.11.1 WebSockets优势146
6.11.2 WebSockets支持和安全146
6.11.3 聊天应用程序147
第7章 游戏和模拟中的向量159
7.1 向量运算162
7.1.1 加法和减法163
7.1.2 缩放163
7.1.3 标准化163
7.1.4 旋转163
7.1.5 向量的点乘164
7.2 创建一个JavaScript向量对象165
7.3 使用向量的大炮模拟166
7.3.1 模拟范围的变量167
7.3.2 炮弹168
7.3.3 大炮168
7.3.4 背景170
7.3.5 主循环171
7.3.6 页面布局171
7.4 火箭模拟172
7.4.1 游戏对象173
7.4.2 障碍物对象174
7.4.3 火箭物体175
7.4.4 背景178
7.4.5 碰撞检测和反馈178
7.4.6 页面代码180
7.4.7 可能的改进方案182
第8章 谷歌可视化183
8.1 限制185
8.2 相关术语表186
8.3 图像图表187
8.3.1 数据格式及图表分辨率190
8.3.2 使用动态数据194
8.3.3 总结197
8.4 交互式图表197
第9章 使用jQuery Mobile为移动设备开发206
9.1 jQueryMobile207
9.2 TilePic：移动友好的网络应用程序209
9.2.1 TilePic游戏概述209
9.2.2 TilePic游戏代码211
9.3 PhoneGap220
第10章 用PhoneGap创建Android应用222
10.1 安装PhoneGap223
10.1.1 安装Java开发工具包（JDK）223
10.1.2 安装Android软件开发工具包（SDK）224
10.1.3 安装 Eclipse225
10.1.4 安装Android开发工具226
10.1.5 安装PhoneGap227
10.2 在Eclipse中创建一个PhoneGap项目227
10.2.1 更改App.java文件229
10.2.2 改变AndroidManifest.xml文件230
10.2.3 创建和测试一个简单的Web应用程序231
10.2.4 测试TilePic应用程序232
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript高效图形编程 (修订版)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>网页设计与开发
第1章  引言  1.1  讲述与示范    实验1-1  优秀网站赏析    实验1-2  体会超链接在网页中的广泛应用    实验1-3  多种URL资源的访问方法    实验1-4  使用记事本编写网页    实验1-5  了解EditPlus编辑器    实验1-6  了解浏览工具的安装  1.2  理论解答题  1.3  学生实验第2章  HTML基础  2.1  讲述和示范    实验2-1  HTML文件的编写规则    实验2-2  标记元素的属性    实验2-3  利用style标记定义样式  2.2  理论解答题  2.3  学生实验第3章  文字与段落  3.1  讲述和示范    实验3-1  网页欣赏    实验3-2  唐诗页面设计    实验3-3  文章排版  3.2  理论解答题  3.3  学生实验第4章  列表  4.1  讲述和示范    实验4-1  网页欣赏    实验4-2  新闻列表的实现    实验4-3  利用无序列表制作页面垂直导航和水平导航    实验4-4  电子相册的实现  4.2  理论解答题  4.3  学生实验第5章  超链接  5.1  讲述和示范    实验5-1  网页欣赏    实验5-2  新闻列表的制作    实验5-3  相册的制作    实验5-4  利用书签链接制作帮助文档  5.2  理论解答题  5.3  学生实验第6章  网页中的多媒体应用  6.1  讲述和示范    实验6-1  网页欣赏    实验6-2  在网页中实现图文混排    实验6-3  在网页中添加多媒体文件    实验6-4  产品图片展示多媒体效果  6.2  理论解答题  6.3  学生实验第7章  表格  7.1  讲述和示范    实验7-1  网页欣赏    实验7-2  成绩登记表的制作    实验7-3  产品介绍页面的制作  7.2  理论解答题  7.3  学生实验第8章  框架  8.1  讲述和示范    实验8-1  网页欣赏    实验8-2  浮动框架制作    实验8-3  网站管理后台页面  8.2  理论解答题  8.3  学生实验第9章  表单  9.1  讲述和示范    实验9-1  网页欣赏    实验9-2  会员登录    实验9-3  调查问卷    实验9-4  在线预订客房表单  9.2  理论解答题  9.3  学生实验第10章  使用CSS格式化网页  10.1  讲述和示范    实验10-1  网页欣赏    实验10-2  常用页面布局设计    实验10-3  CSS文件的4种引用方式    实验10-4  利用CSS定位页面元素    实验10-5  用DIV+CSS布局网页结构  10.2  理论解答题  10.3  学生实验第11章  JavaScript基础  11.1  讲述和示范    实验11-1  认识JavaScript    实验11-2  创建自定义函数    实验11-3  建立外部js文件    实验11-4  对象创建与复制    实验11-5  表单验证    实验11-6  动态改变样式    实验11-7  Cookie操作  11.2  理论解答题  11.3  学生实验第12章  综合网站案例制作  12.1  讲述和示范    实验12-1  网站欣赏    实验12-2  网站设计规划    实验12-3  IIS服务器安装及站点本地发布  12.2  学生实验参考文献
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>网页设计与开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node.js实战
第一部分　Node基础
第1章　欢迎进入Node.js世界　　2
1.1　构建于JavaScript之上　　3
1.2　异步和事件触发：浏览器　　4
1.3　异步和事件触发：服务器　　5
1.4　DIRT程序　　6
1.5　默认DIRT　　8
1.5.1　简单的异步程序　　9
1.5.2　Hello World HTTP服务器　　10
1.5.3　流数据　　10
1.6　小结　　11
第2章　构建有多个房间的聊天室程序　　12
2.1　程序概览　　12
2.2　程序需求及初始设置　　15
2.2.1　提供HTTP和WebSocket服务　　15
2.2.2　创建程序的文件结构　　16
2.2.3　指明依赖项　　16
2.2.4　安装依赖项　　17
2.3　提供HTML、CSS和客户端JavaScript的服务　　18
2.3.1　创建静态文件服务器　　19
2.3.2　添加HTML和CSS文件　　21
2.4　用Socket.IO处理与聊天相关的消息　　23
2.4.1　设置Socket.IO服务器　　24
2.4.2　处理程序场景及事件　　25
2.5　在程序的用户界面上使用客户端JavaScript　　29
2.5.1　将消息和昵称/房间变更请求传给服务器　　29
2.5.2　在用户界面中显示消息及可用房间　　30
2.6　小结　　34
第3章　Node编程基础　　35
3.1　Node功能的组织及重用　　36
3.1.1　创建模块　　37
3.1.2　用module.exports微调模块的创建　　39
3.1.3　用node_modules重用模块　　40
3.1.4　注意事项　　41
3.2　异步编程技术　　42
3.2.1　用回调处理一次性事件　　43
3.2.2　用事件发射器处理重复性事件　　46
3.2.3　异步开发的难题　　53
3.3　异步逻辑的顺序化　　54
3.3.1　什么时候使用串行流程控制　　55
3.3.2　实现串行化流程控制　　56
3.3.3　实现并行化流程控制　　58
3.3.4　利用社区里的工具　　60
3.4　小结　　61
第二部分　用Node开发Web程序
第4章　构建Node Web程序　　64
4.1　HTTP服务器的基础知识　　64
4.1.1　Node如何向开发者呈现HTTP请求　　65
4.1.2　一个用“Hello World”做响应的HTTP服务器　　67
4.1.3　读取请求头及设定响应头　　67
4.1.4　设定HTTP响应的状态码　　67
4.2　构建RESTful Web服务　　68
4.2.1　用POST请求创建资源　　69
4.2.2　用GET请求获取资源　　71
4.2.3　用DELETE请求移除资源　　72
4.3　提供静态文件服务　　73
4.3.1　创建一个静态文件服务器　　73
4.3.2　处理服务器错误　　77
4.3.3　用fs.stat()实现先发制人的错误处理　　77
4.4　从表单中接受用户输入　　78
4.4.1　处理提交的表单域　　78
4.4.2　用formidable处理上传的文件　　81
4.4.3　计算上传进度　　84
4.5　用HTTPS加强程序的安全性　　85
4.6　小结　　86
第5章　存储Node程序中的数据　　87
5.1　无服务器的数据存储　　88
5.1.1　内存存储　　88
5.1.2　基于文件的存储　　88
5.2　关系型数据库管理系统　　91
5.2.1　MySQL　　91
5.2.2　PostgreSQL　　99
5.3　NoSQL数据库　　100
5.3.1　Redis　　101
5.3.2　MongoDB　　105
5.3.3　Mongoose　　107
5.4　小结　　109
第6章　Connect　　110
6.1　搭建一个Connect程序　　111
6.2　Connect的工作机制　　112
6.2.1　做日志的中间件　　112
6.2.2　响应“hello world”的中间件　　113
6.3　为什么中间件的顺序很重要　　114
6.3.1　中间件什么时候不调用next()　　114
6.3.2　用中间件的顺序执行认证　　115
6.4　挂载中间件和服务器　　115
6.4.1　认证中间件　　116
6.4.2　显示管理面板的中间件　　117
6.5　创建可配置中间件　　118
6.5.1　创建可配置的logger中间件组件　　119
6.5.2　构建路由中间件组件　　120
6.5.3　构建一个重写URL的中间件组件　　122
6.6　使用错误处理中间件　　123
6.6.1　Connect的默认错误处理器　　124
6.6.2　自行处理程序错误　　124
6.6.3　使用多个错误处理中间件组件　　125
6.7　小结　　129
第7章　Connect自带的中间件　　130
7.1　解析cookie、请求主体和查询字符串的中间件　　131
7.1.1　cookieParser()：解析HTTP cookie　　131
7.1.2　bodyParser()：解析请求主体　　134
7.1.3　limit()：请求主体的限制　　135
7.1.4　query()：查询字符串解析　　137
7.2　实现Web程序核心功能的中间件　　138
7.2.1　logger()：记录请求　　138
7.2.2　favicon()：提供favicon　　140
7.2.3　methodOverride()：伪造HTTP方法　　141
7.2.4　vhost()：虚拟主机　　143
7.2.5　session()：会话管理　　144
7.3　处理Web程序安全的中间件　　148
7.3.1　basicAuth()：HTTP基本认证　　148
7.3.2　csrf()：跨站请求伪造防护　　150
7.3.3　errorHandler()：开发错误处理　　150
7.4　提供静态文件服务的中间件　　152
7.4.1　static()：静态文件服务　　152
7.4.2　compress()：压缩静态文件　　154
7.4.3　directory()：目录列表　　156
7.5　小结　　157
第8章　Express　　158
8.1　生成程序骨架　　160
8.1.1　安装Express的可执行程序　　161
8.1.2　生成程序　　162
8.1.3　探索程序　　162
8.2　配置Express和你的程序　　164
8.3　渲染视图　　166
8.3.1　视图系统配置　　167
8.3.2　视图查找　　169
8.3.3　把数据输出到视图中　　171
8.4　处理表单和文件上传　　175
8.4.1　实现照片模型　　175
8.4.2　创建照片上传表单　　176
8.4.3　显示上传照片列表　　178
8.5　创建资源下载　　179
8.5.1　创建照片下载路由　　179
8.5.2　实现照片下载路由　　180
8.6　小结　　182
第9章　Express进阶　　183
9.1　认证用户　　184
9.1.1　保存和加载用户　　184
9.1.2　注册新用户　　189
9.1.3　已注册用户登录　　194
9.1.4　用户加载中间件　　197
9.2　先进的路由技术　　199
9.2.1　校验用户内容提交　　199
9.2.2　特定路由中间件　　202
9.2.3　实现分页　　205
9.3　创建一个公开的REST API　　208
9.3.1　设计API　　208
9.3.2　添加基本的认证　　209
9.3.3　实现路由　　209
9.3.4　启用内容协商　　212
9.4　错误处理　　214
9.4.1　处理404错误　　215
9.4.2　处理错误　　217
9.5　小结　　220
第10章　测试Node程序　　221
10.1　单元测试　　222
10.1.1　assert模块　　222
10.1.2　Nodeunit　　225
10.1.3　Mocha　　227
10.1.4　Vows　　232
10.1.5　should.js　　234
10.2　验收测试　　235
10.2.1　Tobi　　236
10.2.2　Soda　　237
10.3　小结　　239
第11章　Web程序模板　　240
11.1　用模板保持代码的整洁性　　240
11.2　嵌入JavaScript的模板　　244
11.2.1　创建模板　　245
11.2.2　用EJS过滤器处理模板数据　　246
11.2.3　将EJS集成到你的程序中　　249
11.2.4　在客户端程序中使用EJS　　250
11.3　使用Mustache模板语言与Hogan　　251
11.3.1　创建模板　　251
11.3.2　Mustache标签　　252
11.3.3　微调Hogan　　254
11.4　用Jade做模板　　255
11.4.1　Jade基础知识　　256
11.4.2　Jade模板中的逻辑　　258
11.4.3　组织Jade模板　　260
11.5　小结　　264
第三部分　在Node中更进一步
第12章　部署Node程序并维持正常运行时间　　266
12.1　安置Node程序　　266
12.1.1　专用的和虚拟私有服务器　　267
12.1.2　云主机　　268
12.2　部署的基础知识　　269
12.2.1　从Git存储库部署　　270
12.2.2　让Node保持运行　　270
12.3　让正常运行时间和性能达到最优　　271
12.3.1　用Upstart维护正常运行时间　　272
12.3.2　集群API：利用多核的优势　　273
12.3.3　静态文件及代理　　275
12.4　小结　　277
第13章　超越Web服务器　　278
13.1　Socket.IO　　278
13.1.1　创建一个最小的Socket.IO程序　　279
13.1.2　用Socket.IO触发页面和CSS的重新加载　　281
13.1.3　Socket.IO的其他用法　　283
13.2　深入TCP/IP网络　　284
13.2.1　处理缓冲区和二进制数据　　284
13.2.2　创建TCP服务器　　286
13.2.3　创建TCP客户端　　289
13.3　跟操作系统交互的工具　　290
13.3.1　单例的全局process对象　　291
13.3.2　使用文件系统模块　　293
13.3.3　繁衍外部进程　　296
13.4　开发命令行工具　　301
13.4.1　解析命令行参数　　301
13.4.2　处理stdin和stdout　　302
13.4.3　添加彩色的输出　　304
13.5　小结　　306
第14章　Node生态系统　　307
14.1　给Node开发人员的在线资源　　308
14.1.1　Node和模块的参考资料　　308
14.1.2　Google群组　　309
14.1.3　IRC　　309
14.1.4　GitHub问题列表　　310
14.2　GitHub　　310
14.2.1　GitHub入门　　311
14.2.2　添加一个项目到GitHub中　　312
14.2.3　用GitHub协作　　314
14.3　为npm库做贡献　　316
14.3.1　准备包　　317
14.3.2　编写包规范　　317
14.3.3　测试和发布包　　318
14.4　小结　　320
附录A　安装Node和社区附加组件　　321
附录B　调试Node　　329
附录C　Express的扩展及配置　　336
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node.js实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML/CSS/JavaScript标准教程实例版（第5版）(含CD光盘1张)
第1章  HTML、CSS、JavaScript综述
1.1  这就是HTML、CSS、JavaScript的代码
1.2  HTML、CSS、JavaScript各自的角色
1.3  如何学习HTML、CSS、JavaScript
1.4  小实例——HTML、CSS、JavaScript的综合应用
1.5  总结
1.6  习题
第2章  HTML基础介绍
2.1  HTML文档的结构
2.2  HTML基本语法
2.3  HTML文件的命名
2.4  编写HTML文件的注意事项
2.5  小实例——插入图片与表格
2.6  习题
第3章  HTML文件的整体结构
3.1  文件头部内容
3.2  主体内容＜body＞
3.3  习题
第4章文字与段落
4.1  编辑内容
4.2  文字效果
4.3  文字修饰
4.4  段落＜p＞
4.5  小实例——文字网页
4.6  习题
第5章建立和使用列表
5.1  列表类型
5.2  嵌套列表
5.3  小实例——列表在网页中的使用
5.4  习题
第6章超链接
6.1  超链接概述
6.2  超链接的路径
6.3  超链接的建立
6.4  设置图像映射
6.5  小实例——超链接的使用
6.6  习题
第7章表格的应用
7.1  表格概述
7.2  插入表格＜table＞
7.3  设置表格标记属性
7.4  设置表格行与单元格
7.5  表格嵌套
7.6  小实例——表格在网页中的应用
7.7  习题
第8章层的应用
8.1  图层的创建——＜div＞
8.2  创建嵌套图层
8.3  层的属性设置
8.4  小实例——图层的实际应用
8.5  习题
第9章框架的应用
9.1  框架概述
9.2  框架的基本结构
9.3  设置框架
9.4  设置框架集＜frameset＞
9.5  浮动框架＜iframe＞
9.6  在框架上建立链接
9.7  小实例——框架的实际应用
9.8  习题
第10章表单的应用
10.1  表单概述
10.2  表单标记＜form＞
10.3  信息输入＜input＞
10.4  小实例——表单的实际应用
10.5  习题
第11章  CSS样式表基础
11.1  CSS的概述
11.2  CSS的使用
11.3  插入CSS样式表
11.4  编写CSS文件
11.5  习题
第12章字体的设置
12.1  设置字体——font-family
12.2  设置字号——font-size
12.3  设置字体样式——font-style
12.4  设置字体加粗——font-weight
12.5  设置字体变体——font-variant
12.6  组合设置字体属性——font
12.7  小实例——综合设置字体
12.8  习题
第13章文本的精细排版
13.1  调整字符间距——letter-spacing
13.2  调整单词间距——word-spacing
13.3  添加文字修饰——text-decoration
13.4  设置文本排列方式——text-align
13.5  设置段落缩进——text-indent
13.6  调整行高——line-height
13.7  转换英文大小写——text-transform
13.8  小实例——综合应用文本属性
13.9  习题
第14章颜色和背景
14.1  设置颜色——color
14.2  设置背景颜色——background-color
14.3  插入背景图片——background-image
14.4  插入背景附件——background-attachment
14.5  设置重复背景图片——background-repeat
14.6  设置背景图片位置——background-position
14.7  小实例——综合设置颜色和背景
14.8  习题
第15章边框和边距
15.1  设计边框样式——border-style
15.2  调整边框宽度——border-width
15.3  设置边框颜色——border-color
15.4  设置边框属性——border
15.5  边距——margin-top /margin-bottom /margin-left/ margin-right/margin
15.6  填充——padding-top／padding- bottom /padding-left / padding- right /padding
15.7  小实例——综合设置边框和边距	1
15.8  习题
第16章  JavaScript基础
16.1  JavaScript语言概况
16.2  第一个JavaScript程序
16.3  习题
第17章  JavaScript基本语法
17.1  基本数据类型
17.2  运算符
17.3  程序结构
17.4  函数
17.5  小实例——修改密码
17.6  习题
第18章  JavaScript事件分析
18.1  事件概述
18.2  主要事件分析
18.3  其他常用事件
18.4  习题
第19章图片和多媒体文件的使用
19.1  图片
19.2  插入多媒体文件——＜embed＞
19.3  习题
第20章  CSS样式的高级应用
20.1  列表
20.2  定位
20.3  CSS层
20.4  鼠标指针——cursor
20.5  小实例——综合设置层样式
20.6  习题
第21章滤镜特效的应用
21.1  设置透明度——alpha
21.2  添加模糊效果——blur
21.3  设置水平/垂直翻转——fliph/flipv
21.4  设置灰度——＜gray＞
21.5  设置反转——＜invert＞
21.6  设置X射线效果——xray
21.7  设置波浪效果——wave
21.8  设置阴影——dropshadow
21.9  设置边缘光晕效果——glow
21.10  设置遮罩——mask
21.11  设置渐变阴影——shadow
21.12  设定颜色透明——chroma
21.13  小实例——滤镜的综合应用
21.14  习题
第22章  JavaScript对象的应用
22.1  对象概述
22.2  浏览器内部对象
22.3  内置对象和方法
22.4  习题
第23章综合案例
23.1  HTML综合案例
23.2  CSS综合案例
23.3  网站开发流程
23.4  大综合案例
第24章移动网站开发
24.1 移动网站与传统网站的区别
24.2 当前移动网站开发的主要标准
24.3 XHTML MP 语言
24.4 为已有网站增加移动版本
附录A  HTML5基本介绍
附录B  HTML语法概述
附录C  CSS语法概述
附录D  JavaScript语法概述
附录E  颜色关键字对照表
习题参考答案
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML/CSS/JavaScript标准教程实例版（第5版）(含CD光盘1张)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript入门经典 第7版
版权信息
版权
版权声明
内容提要
前言
资源与支持
第一部分  JavaScript 基础
第 1 章  JavaScript 简介
1.1 Web 脚本编程基础
1.1.1 服务器端与客户端编程
1.1.2 JavaScript 简介
1.1.3 JavaScript 起源
1.1.4 浏览器的竞争
1.1.5 <script>标签
1.1.6 DOM 简介
1.1.7 W3C 和 标准兼容
1.1.8 window 和 document 对象
1.1.9 对象表示法
1.1.10 与用户交互
1.1.11 document.write()
1.1.12 读取 document 对象的属性
1.2 小结
1.3 问答
1.4 作业
1.4.1 测验
1.4.2 答案
1.5 练习
第 2 章  创建简单的脚本
2.1 在 Web 页面里添加 JavaScript
2.2 编写 JavaScript 语句代码注释
2.3 变量
2.4 操作符
2.4.1 算术操作符
2.4.2 操作符优先级
2.4.3 对字符串使用操作符 “+”
2.5 捕获鼠标事件
2.5.1 onClick 事件处理器
2.5.2 onMouseOver 和 onMouseOut 事件处理器
2.6 小结
2.7 问答
2.8 作业
2.8.1 测验
2.8.2 答案
2.9 练习
第 3 章  使用函数
3.1 基本语法
3.2 调用函数
3.2.1 把 JavaScript 代码放置到页面的 <head> 区域
3.2.2 给函数传递参数
3.2.3 多参数
3.2.4 从函数返回值
3.2.5 匿名函数
3.3 小结
3.4 问答
3.5 作业
3.5.1 测验
3.5.2 答案
3.6 练习
第 4 章  函数的更多知识
4.1 变量作用域
4.1.1 使用 this 关键字
4.1.2 使用 let 和 const
4.1.3 用 const 关键字声明变量
4.2 箭头函数
4.3 设置默认参数
4.4 小结
4.5 问答
4.6 作业
4.6.1 测验
4.6.2 答案
4.7 练习
第 5 章  DOM 对象和 内置对象
5.1 与用户交互
5.1.1 alert()
5.1.3 prompt()
5.2 根据 id 选择元素 innerHTML 属性
5.3 访问浏览器历史记录
5.4 使用 location 对象
5.4.1 用 location 对象导航
5.4.2 刷新页面
5.4.3 获取浏览器信息： navigator 对象
5.5 日期和时间
5.5.1 创建具有当前日期和时间的 Date 对象
5.5.2 创建具有指定日期和时间的 Date 对象
5.5.3 设置和编辑日期与时间
5.5.4 利用 Math 对象简化运算
5.5.5 取整
5.5.6 获得最大值和 最小值
5.5.7 生成随机数
5.5.8 数学常数
5.5.9 关键字 with
5.6 小结
5.7 问答
5.8 作业
5.8.1 测验
5.8.2 答案
5.9 练习
第二部分  JavaScript 编程
第 6 章  数字和字符串
6.1 数值
6.1.1 整数
6.1.2 浮点数
6.1.3 十六进制数、二进制数和八进制数
6.2 全局方法
6.2.1 toString()
6.2.2 toFixed()
6.2.3 toExponential()
6.3 Number 对象
6.3.1 Number.isNaN()
6.3.2 Number.isInteger()
6.3.3 Number.parseFloat() 和 Number.parseInt()
6.3.4 无穷大
6.4 Number() 函数
6.5 布尔值
非操作符（！）
6.6 null（空）和 undefined（未定义）
6.7 小结
6.8 问答
6.9 作业
6.9.1 测验
6.9.2 答案
6.10 练习
第 7 章  操作字符串
7.1 字符串
7.1.1 length 属性
7.1.2 转义序列
7.1.3 字符串方法
7.2 模板字符串
7.3 小结
7.4 问答
7.5 作业
7.5.1 测验
7.5.2 答案
7.6 练习
第 8 章  数组
8.1 数组
8.1.1 创建新数组
8.1.2 初始化数组
8.1.3 数组的方法
8.2 如何遍历数组
8.2.1 使用 forEach()
8.2.2 使用 map()
8.2.3 使用 for-of 访问数组
8.3 三点表示法
8.3.1 组合多个数组
8.3.2 用参数的数组来调用函数
8.3.3 收集数据
8.4 小结
8.5 问答
8.6 作业
8.6.1 测验
8.6.2 答案
8.7 练习
第 9 章  用 JavaScript 处理事件
9.1 事件的类型
9.2 事件处理器
9.2.1 内联事件处理器
9.2.2 作为 DOM 对象的属性的事件处理器
9.2.3 使用 addEventListener()
9.2.4 添加多个监听器
9.3 event 对象
9.3.1 阻止默认行为
9.3.2 事件冒泡和捕获
9.3.3 关闭冒泡和捕获
9.4 小结
9.5 问答
9.6 作业
9.6.1 测验
9.6.2 答案
9.7 练习
第 10 章  程序控制
10.1 条件语句
10.1.1 if() 语句
10.1.2 比较操作符
10.1.3 测试相等性
10.1.4 if 进阶
10.1.5 测试多个条件
10.1.6 switch 语句
10.1.7 逻辑操作符
10.2 循环和控制结构
10.2.1 while
10.2.2 do...while
10.2.3 for
10.2.4 用 break 跳出循环
10.2.5 用 for...in 在对象集 里循环
10.3 设置和使用定时器
10.3.1 setTimeout()
10.3.2 setInterval()
10.4 小结
10.5 问答
10.6 作业
10.6.1 测验
10.6.2 答案
10.7 练习
第三部分  理解 JavaScript 对象
第 11 章  面向对象编程
11.1 什么是面向对象编程
11.2 创建对象
11.2.1 创建直接实例
11.2.2 使用关键字 this
11.2.3 匿名函数
11.2.4 使用构造函数
11.3 用 prototype 扩展和继承对象
11.3.1 扩展对象
11.3.2 继承对象
11.4 封装
11.5 小结
11.6 问答
11.7 作业
11.7.1 测验
11.7.2 答案
11.8 练习
第 12 章  对象进阶
12.1 类
12.1.1 使用 getter 和 setter
12.1.2 Symbol
12.2 对象继承
使用 extends 和 super
12.3 使用功能检测
12.4 小结
12.5 问答
12.6 作业
12.6.1 测验
12.6.2 答案
12.7 练习
第 13 章  DOM 脚本编程
13.1 DOM 节点
13.1.1 节点类型
13.1.2 使用 nodeValue
13.1.3 使用 nodeName
13.2 用 getElementsByTagName() 选择元素
13.3 读取元素的属性
13.4 Mozilla 的 DOM 查看器
13.4.1 创建新节点
13.4.2 操作子节点
13.4.3 编辑元素属性
13.4.4 动态加载 JavaScript 文件
13.5 小结
13.6 问答
13.7 作业
13.7.1 测验
13.7.2 答案
13.8 练习
第 14 章  JSON 简介
14.1 JSON 是什么
JSON 语法
14.2 访问 JSON 数据
14.2.2 使用直接浏览器 JSON 支持
14.2.3 使用 JSON.parse()
14.3 JSON 的数据序列化
使用 JSON.stringify()
14.4 JSON 数据类型
14.5 模拟关联数组
14.6 使用 JSON 创建对象
14.6.1 属性
14.6.2 方法
14.6.3 数组
14.6.4 对象
14.7 JSON 安全性
14.8 小结
14.9 问答
14.10 作业
14.10.1 测验
14.10.2 答案
14.11 练习
第四部分  用 JavaScript 操作 Web 界面
第 15 章  HTML 与 JavaScript 编程
15.1 HTML5 的新标签
15.2 一些重要的新元素
15.2.1 用 <video> 回放视频
15.2.2 用 canPlayType() 测试可用的格式
15.2.3 控制回放
15.2.4 用 <audio> 标签播放声音
15.2.5 用 <canvas> 在页面上 绘图
15.3 拖放
15.4 本地存储
15.5 操作本地文件
查看浏览器的支持情况
15.6 小结
15.7 问答
15.8 作业
15.8.1 测验
15.8.2 答案
15.9 练习
第 16 章  JavaScript 和 CSS
16.1 CSS 简介
16.1.1 从内容 分离样式
16.1.2 CSS 样式声明
16.1.3 在哪里保存样式声明
16.2 DOM 的 style 属性
16.3 用 className 访问类
16.4 DOM 的 styleSheets 对象
启用、禁用和切换样式表
16.5 小结
16.6 问答
16.7 作业
16.7.1 测验
16.7.2 答案
16.8 练习
第 17 章  CSS3 简介
17.1 特定厂商的属性和前缀
17.2 CSS3 边框
17.2.1 创建边框阴影
17.2.2 用 border- radius 属性实现圆角
17.3 CSS3 背景
17.3.1 background- size 属性
17.3.2 background- origin 属性
17.3.3 多背景图像
17.4 CSS3 渐变
17.4.1 线性渐变
17.4.2 放射渐变
17.5 CSS3 文本效果
17.5.1 文本阴影
17.5.2 单词换行
17.6 CSS3 过渡、变换和动画
17.7 在 JavaScript 中引用 CSS3 属性
17.7.1 将 CSS 属性名 转换到 JavaScript 中
17.7.2 DOM getComputedStyle() 方法
17.8 设置带有厂商前缀的 CSS3 属性
17.9 小结
17.10 问答
17.11 作业
17.11.1 测验题
17.11.2 答案
17.12 练习
第五部分与 JavaScript 工具相关的高级技术
第 18 章  读取和写入 cookie
18.1 什么是 cookie
cookie 的局限
18.2 使用 document.cookie 属性
数据的编码和解码
18.3 cookie 组成
18.4 编写 cookie
18.5 编写一个函数来写 cookie
18.6 读取 cookie
18.7 删除 cookie
18.8 在一个 cookie 里设置多个值
18.9 小结
18.10 问答
18.11 作业
18.11.1 测验
18.11.2 答案
18.12 练习
第 19 章用 正则表达式匹配模式
19.1 创建正则表达式
19.1.1 使用正则表达式字符串字 面值
19.1.2 使用 JavaScript 的 RegExp 对象
19.1.3 对正则 表达式使用字符串方法
19.2 小结
19.3 问答
19.4 作业
19.4.1 测验
19.4.2 答案
19.5 练习
第 20 章  理解并使用闭包
20.1 回顾作用域的相关知识
20.2 从一个函数返回另一个函数
20.3 实现闭包
20.3.1 传递参数
20.3.2 编辑一个闭包变量
20.3.3 闭包和对象
20.4 小结
20.5 问答
20.6 作业
20.6.1 测验
20.6.2 答案
20.7 练习
第 21 章  用模块组织代码
21.1 为何使用模块
21.1.1 模块使得代码更容易维护
21.1.2 模块帮助复用代码
21.1.3 模块有助于整齐的全局作用域
21.2 模块基础知识
21.2.1 如何包含一个 JavaScript 模块
21.2.2 nomodule 关键字
21.3 导出
21.3.1 一个简单的示例模块
21.3.2 如何在导出时重命名
21.3.3 具名的和默认的导出
21.4 导入
21.4.1 默认导入
21.4.2 如何在导入的过程中重命名
21.4.3 如何把一个模块导入为一个对象
21.5 小结
21.6 问答
21.7 作业
21.7.1 测验
21.7.2 答案
21.8 练习
第六部分  专业技能
第 22 章  良好的编程习惯
22.1 避免过度使用 JavaScript
22.2 编写易读和易维护的代码
22.2.1 明智地使用注释
22.2.2 使用适当的文件名称、属性名称和方法名称
22.2.3 尽量复用代码
22.2.4 不要假设
22.3 平稳退化
22.4 渐进增强
分离样式、内容和代码
22.5 代码分离的 JavaScript
22.5.1 脱离 HTML
22.5.2 仅把 JavaScript 作为性能增强手段
22.6 功能检测
22.7 妥善处理错误
使用 try 和 catch
22.8 小结
22.9 问答
22.10 作业
22.10.1 测验
22.10.2 答案
22.11 练习
第 23 章  调试代码
23.1 调试简介
23.1.1 错误类型
23.1.2 选择程序员的编辑器
23.1.3 用 alert() 进行简单调试
23.2 更高级的调试
23.2.1 控制台
23.2.2 分组消息
23.2.3 用断点停止代码执行
23.2.4 条件性断点
23.2.5 从代码中启动调试器
23.2.6 验证 JavaScript
23.3 小结
23.4 问答
23.5 作业
23.5.1 测验
23.5.2 答案
23.6 练习
第 24 章  继续深入学习
24.1 为什么要使用库
24.2 库能做什么
24.3 一些常见的库和框架
24.3.1 Prototype 框架
24.3.2 Dojo
24.3.3 React
24.3.4 Node.js
24.3.5 jQuery
24.4 jQuery 入门
24.4.1 在页面里引用 jQuery
24.4.2 jQuery 的 $(document).ready 处理器
24.4.3 选择页面元素
24.4.4 操作 HTML 内容
24.4.5 显示和隐藏元素
24.4.6 命令链
24.4.7 处理事件
24.5 The jQuery UI
jQuery UI 是什么
24.6 Ajax 简介
24.6.1 Ajax 入门
24.6.2 XMLHttpRequest 对象
24.6.3 创建 request 对象
24.6.4 方法和属性
24.6.5 与服务器通信
24.6.6 在服务器端发生了什么
24.6.7 处理服务器响应
24.6.8 还有更容易的方法，不 是吗？
24.7 用 jQuery 实现 Ajax
24.8 Node.js 简介
使用一种非阻塞的代码模式
24.9 小结
24.10 问答
24.11 作业
24.11.1 测验
24.11.2 答案
24.12 练习
附录  JavaScript 开发工具
编辑器
Notepad++
jEdit
SciTE
Geany
验证程序
W3C 验证服务
Web 设计组（WDG）
CodeBeautify JavaScript 验证器
验证和测试工具
JSLint
JSONLint
在线正则表达式测试器
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript入门经典 第7版
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript使用详解
绪论第1章
欢迎使用JavaS

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript使用详解
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>疯狂HTML 5+CSS 3+JavaScript讲义（第2版）
第1章　HTML 5简介	1
1.1　HTML历史与HTML 5	2
1.2　HTML 5的优势	6
1.3　HTML 5的基本结构和语法变化	8
1.4　本章小结	12
第2章　HTML 5的常用元素与属性	14
2.1　HTML 5保留的常用元素	15
2.2　HTML 5增强的iframe元素	34
2.3　HTML 5保留的通用属性	40
2.4　HTML 5新增的通用属性	44
2.5　HTML 5新增的结构元素	48
2.6　HTML 5新增的语义元素	55
2.7　HTML 5头部和元信息	59
2.8　HTML 5新增的拖放API	63
2.9　本章小结	71
第3章　HTML 5表单相关的元素和属性	72
3.1　HTML原有的表单及表单控件	73
3.2　HTML 5新增的表单属性	83
3.3　HTML 5新增的表单元素	90
3.4　HTML 5新增的客户端校验	96
3.5　本章小结	100
第4章　HTML 5的绘图支持	101
4.1　使用canvas元素	102
4.2　绘图	103
4.3　坐标变换	118
4.4　控制叠加风格	123
4.5　控制填充风格	124
4.6　位图处理	128
4.7　输出位图	132
4.8　动画制作	133
4.9　本章小结	136
第5章　HTML 5的多媒体支持	137
5.1　使用audio和video元素	138
5.2　使用JavaScript脚本控制媒体播放	141
5.3　事件监听	144
5.4　track元素	146
5.5　本章小结	149
第6章　级联样式单与CSS选择器	150
6.1　样式单概述	151
6.2　CSS样式单的基本使用	152
6.3　CSS选择器	158
6.4　伪元素选择器	167
6.5　CSS 3新增的伪类选择器	176
6.6　在脚本中修改显示样式	195
6.7　本章小结	197
第7章　字体与文本相关属性	198
7.1　字体相关属性	199
7.2　CSS 3支持的颜色表示方法	205
7.3　文本相关属性	206
7.4　CSS 3新增的服务器字体	212
7.5　本章小结	215
第8章　背景、边框和边距相关属性	216
8.1　盒模型简介	217
8.2　背景相关属性	217
8.3　使用渐变背景	226
8.4　边框相关属性	239
8.5　使用opacity控制透明度	246
8.6　padding和margin相关属性	247
8.7　本章小结	249
第9章　大小、定位、轮廓相关属性	250
9.1　width、height相关属性	251
9.2　定位相关属性	255
9.3　轮廓相关属性	257
9.4　用户界面和滤镜属性	258
9.5　本章小结	263
第10章　盒模型与布局相关属性	264
10.1　盒模型和display属性	265
10.2　对盒添加阴影	275
10.3　布局相关属性	278
10.4　CSS 3新增的多栏布局	285
10.5　使用弹性盒布局	289
10.6　本章小结	306
第11章　表格、列表相关属性及media query	307
11.1　表格相关属性	308
11.2　列表相关属性	313
11.3　控制光标的属性	316
11.4　media query和响应式布局	317
11.5　本章小结	323
第12章　变形与动画相关属性	324
12.1　CSS 3提供的变形支持	325
12.2　CSS 3新增的3D变换	337
12.3　CSS 3提供的Transition动画	341
12.4　CSS 3提供的Animation动画	345
12.5　本章小结	349
第13章　JavaScript语法详解	350
13.1　JavaScript简介	351
13.2　数据类型和变量	356
13.3　基本数据类型	364
13.4　复合类型	376
13.5　运算符	381
13.6　语句	391
13.7　流程控制	395
13.8　函数	403
13.9　函数的参数处理	425
13.10　面向对象	429
13.11　创建对象	437
13.12　本章小结	443
第14章　DOM编程详解	444
14.1　DOM模型概述	445
14.2　DOM模型和HTML文档	446
14.3　访问HTML元素	448
14.4　修改HTML元素	456
14.5　增加HTML元素	458
14.6　删除HTML元素	463
14.7　传统的DHTML模型	467
14.8　使用window对象	469
14.9　navigator和地理定位	479
14.10　HTML 5增强的History API	485
14.11　使用document对象	490
14.12　HTML 5新增的浏览器分析	493
14.13　本章小结	496
第15章　事件处理机制	497
15.1　事件模型的基本概念	498
15.2　绑定事件处理函数	499
15.3　事件处理函数的执行环境	505
15.4　事件类型	521
15.5　本章小结	534
第16章　本地存储与离线应用	535
16.1　Web Storage	536
16.2　Indexed数据库API	545
16.3　离线应用	564
16.4　本章小结	571
第17章　文件支持与二进制数据	572
17.1　HTML 5增强的文件上传域	573
17.2　ArrayBuffer与TypedArray	578
17.3　Blob类	583
17.4　本章小结	587
第18章　Web Worker多线程API	588
18.1　使用Worker创建多线程	589
18.2　与Worker线程进行数据交换	591
18.3　Worker线程嵌套	594
18.4　使用SharedWorker创建共享线程	597
18.5　Promise	603
18.6　本章小结	611
第19章　客户端通信	612
19.1　跨文档消息传递	613
19.2　使用WebSocket与服务器通信	621
19.3　使用Server-Sent Events API	630
19.4　使用Beacon	635
19.5　本章小结	636
第20章　HTML 5的疯狂俄罗斯方块	637
20.1　俄罗斯方块简介	638
20.2　开发游戏界面	639
20.3　俄罗斯方块的数据模型	640
20.4　实现游戏逻辑	644
20.5　本章小结	654
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>疯狂HTML 5+CSS 3+JavaScript讲义（第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript开发技术详解
目录
第1章 了解JavaScript
1.1 学习Web脚本编写基础
1.1.1 JavaScript简介
1.1.2 JavaScript和HTML
1.1.3 文档对象模型
1.1.4 Internet Explorer
1.1.5 Firefox
1.2 JavaScript功能一览
1.2.1 改善导航功能
1.2.2 验证表单
1.2.3 特殊效果
1.2.4 远程脚本技术(AJAX)
1.3 创建简单的脚本
1.3.1 脚本编写工具
1.3.2 在JavaScript中显示时间
1.3.3 计算结果
1.4 综合应用：制作导航链接
1.5 课后练习
第2章 变量、字符串和数组
2.1 变量和运算符
2.1.1 选择变量名称
2.1.2 使用局部变量和全局变量
2.1.3 给变量赋值
2.1.4 使用JavaScript运算符
2.1.5 运算符的优先级
2.2 JavaScript的数据类型
2.3 数据类型之间的转换
2.4 使用String对象
2.4.1 创建String对象
2.4.2 给变量赋值
2.4.3 计算字符串长度
2.4.4 字符串大小写转换
2.5 使用数值数组
2.5.1 创建数值数组
2.5.2 理解数组的长度
2.5.3 存取数组元素
2.5.4 数值数组的排序
2.6 综合应用：制作显示当前日期的JavaScript程序
2.7 课后练习
第3章 条件和循环控制流程
3.1 if语句
3.1.1 比较运算符
3.1.2 条件运算符
3.1.3 逻辑运算符
3.1.4 关键字else
3.2 使用条件表达式
3.2.1 用if和else测试多种条件
3.2.2 使用for循环
3.2.3 使用while循环
3.2.4 使用do…while循环
3.3 使用循环
3.3.1 无限循环
3.3.2 退出循环
3.3.3 继续循环
3.4 循环遍历对象属性
3.5 综合应用：计算器的制作
3.6 课后练习
第4章 使用函数和对象
4.1 使用函数
4.1.1 定义函数
4.1.2 调用函数
4.1.3 无重载
4.1.4 arguments对象
4.1.5 返回值
4.2 对象简介
4.2.1 创建对象
4.2.2 对象属性和方法
4.2.3 对象属性的值
4.3 使用对象来简化脚本
4.3.1 对象类型
4.3.2 定义对象的方法
4.3.3 定义文字量对象
4.3.4 使用和访问对象
4.4 函数的递归与嵌套
4.4.1 递归函数
4.4.2 函数的嵌套
4.5 扩展内置对象
4.6 综合应用：创建函数和对象计算长方形的面积
4.7 课后练习
第5章 使用内置函数和程序库
5.1 使用Math对象
5.1.1 舍入和截取
5.1.2 生成随机数
5.1.3 其他Math函数
5.2 使用Math函数
5.3 使用this关键字
5.4 使用日期
5.4.1 创建Date对象
5.4.2 设置Date的值
5.4.3 读取Date的值
5.4.4 使用时区
5.4.5 日期格式的转换
5.4.6 日期时间的运算
5.4.7 扩展Date对象的功能
5.5 使用第三方程序库
5.5.1 prototype
5.5.2 Script.aculo.us
5.5.3 AJAX框架
5.6 其他程序库
5.7 综合应用：用程序库增添效果
5.7.1 下载程序库
5.7.2 包含文件
5.7.3 使用效果
5.7.4 构建脚本
5.8 课后练习
第6章 事件响应
6.1 认识事件处理程序
6.1.1 对象与事件
6.1.2 创建事件处理程序
6.2 使用JavaScript定义事件处理程序
6.2.1 支持多个事件处理程序
6.2.2 使用event对象
6.2.3 事件类型
6.2.4 Internet Explorer的event属性
6.2.5 Netscape和Firefox的event属性
6.3 其他事件
6.3.1 响应鼠标事件
6.3.2 响应链接事件
6.3.3 输入域的onClick事件
6.3.4 响应表单输入域的事件
6.3.5 按钮事件
6.4 使用onLoad和onUnload事件
6.5 综合应用：为网页添加链接说明
6.6 课后练习
第7章 使用DOM对象
7.1 认识文档对象模型
7.1.1 DOM的历史
7.1.2 DOM的分级标准
7.1.3 DOM和动态HTML
7.2 使用DOM
7.2.1 DOM节点
7.2.2 document对象的属性和方法
7.2.3 DOM的其他功能
7.3 高级DOM技术
7.3.1 样式编程
7.3.2 自定义鼠标提示
7.3.3 访问样式表
7.4 最终样式
7.4.1 IE中的最终样式
7.4.2 innerText和innerHTML
7.4.3 outerText和outerHTML
7.5 使用location对象
7.6 访问浏览器的history对象
7.7 链接编程
7.7.1 URL的形式和链接中调用JavaScript代码
7.7.2 链接对象links
7.8 综合应用：创建Back和Forward按钮
7.9 课后练习
第8章 使用窗口和框架
8.1 用对象控制窗口
8.1.1 访问窗口属性和方法
8.1.2 创建新窗口
8.2 窗口的属性
8.2.1 closed属性
8.2.2 status属性
8.2.3 opener属性
8.3 窗口的方法
8.3.1 alert()方法
8.3.2 confirm()方法
8.3.3 prompt()方法
8.3.4 moveTo()方法
8.4 使用超时功能
8.5 使用框架
8.5.1 创建框架
8.5.2 frame对象
8.6 菜单设计
8.6.1 创建菜单
8.6.2 隐藏菜单
8.7 screen对象
8.8 综合应用：在JavaScript中使用框架
8.9 课后练习
第9章 利用表单获取数据
9.1 HTML表单基础
9.2 在JavaScript中使用form对象
9.2.1 forms对象的属性
9.2.2 获取表单
9.2.3 访问表单字段
9.2.4 使第一个字段获取焦点
9.3 使用表单输入域
9.3.1 使用单行文本框(text对象)
9.3.2 使用密码框
9.3.3 使用多行文本框(textarea对象)
9.3.4 使用单选按钮(radio对象)
9.3.5 使用复选框(checkbox对象)
9.3.6 使用选择列表(select对象)
9.3.7 使用按钮
9.4 通过邮件发送表单结果
9.5 显示表单数据
9.6 创建自动提示文本框
9.7 综合应用：验证表单
9.8 课后练习
第10章 使用样式表
10.1 样式与内容
10.2 定义和使用CSS样式
10.2.1 定义样式
10.2.2 使用样式
10.3 样式的属性
10.3.1 颜色
10.3.2 字体
10.3.3 文字
10.3.4 背景和图像
10.3.5 空白与边框
10.4 使用样式表的其他方式
10.4.1 嵌入方式样式表
10.4.2 行内方式样式表
10.4.3 外部方式样式表
10.5 使用类
10.6 使用id属性
10.7 使用标记
10.8 使用元素定位和分层
10.8.1 绝对定位
10.8.2 相对定位
10.9 使用
标记
10.10 对象的重叠
10.11 下拉菜单和即时提示的实现
10.11.1 实现下拉菜单
10.11.2 显示即时提示
10.12 综合应用：创建动态样式
10.13 课后练习
第11章 常用标准控件
11.1 防止bug
11.1.1 养成良好的编程习惯
11.1.2 常见错误的预防
11.2 基本调试工具
11.2.1 Firefox的JavaScript控制台
11.2.2 在 Internet Explorer中显示错误信息
11.2.3 警告信息
11.2.4 使用注释功能
11.2.5 其他调试工具
11.3 创建错误处理程序
11.3.1 使用onerror属性
11.3.2 显示错误信息
11.3.3 使用try和catch
11.4 高级调试工具
11.4.1 Web Developer工具栏(用于Firefox)
11.4.2 Developer工具栏(用于Internet Explorer)
11.4.3 DOM Inspector(用于Firefox)
11.4.4 查看生成的源代码
11.4.5 JavaScript Shell
11.5 综合应用：调试脚本
11.5.1 测试脚本
11.5.2 解决问题
11.5.3 重新测试
11.6 课后练习
第12章 AJAX：远程脚本技术
12.1 AJAX简介
12.1.1 JavaScript客户端(前端)
12.1.2 后台
12.1.3 AJAX的典型应用
12.1.4 框架和库
12.1.5 AJAX的局限性
12.2 使用XMLHttpRequest
12.2.1 XMLHttpRequest对象的方法和属性
12.2.2 创建XMLHttpRequest对象
12.2.3 等待响应
12.3 创建简单的AJAX库
12.3.1 ajaxRequest()函数
12.3.2 ajaxResponse()函数
12.3.3 使用AJAX库
12.4 使用AJAX库编写AJAX测试程序
12.4.1 HTML文件
12.4.2 XML文件
12.4.3 JavaScript文件
12.4.4 测试示例
12.4.5 调试AJAX应用程序
12.5 实践练习：制作一个实时查询表单
12.5.1 HTML表单
12.5.2 PHP后台
12.6 综合应用：数据的更新
12.7 课后练习
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript开发技术详解
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>jQuery基础教程
第1章　jquery入门
1.1　jquery能做什么
1.2　jquery为什么如此出色
1.3　第一个jquery文档
1.3.1　下载jquery
1.3.2　设置html文档
1.3.3　编写jquery代码
1.4　小结
第2章　选择符——取得你想要的一切
2.1　dom
2.2　工厂函数$（）
2.3　css选择符
2.4　xpath选择符
2.5　自定义选择符
2.6　dom遍历方法
2.7　访问dom元素
2.8　小结
第3章　事件——扣动扳机
3.1　在页面加载后执行任务
3.1.1　代码执行的时机选择
3.1.2　基于一个页面执行多个脚本
3.1.3　缩短代码的简写方式
3.2　简单的事件
3.2.1　简单的样式转换器
3.2.2　简写的事件
3.3　复合事件
3.3.1　显示和隐藏高级特性
3.3.2　突出显示可单击的项
3.3.3　事件的旅程
3.3.4　事件冒泡的副作用
3.4　限制和终止事件
3.4.1　阻止事件冒泡
3.4.2　移除事件处理程序
3.5　模仿用户操作
3.6　小结
第4章　效果——为操作添加艺术性
4.1　修改内联css
4.2　基本的隐藏和显示
4.3　效果和速度
4.4　多重效果
4.4.1　构建具有动画效果的show（）
4.4.2　创建一种自定义的动画效果
4.4.3　理解数字的含义
4.4.4　改进自定义动画效果
4.5　并发与排队效果
4.5.1　处理一组元素
4.5.2　处理多组元素
4.6　简单概括
4.7　小结
第5章　dom操作——基于命令改变页面
5.1　操作属性
5.2　插入新元素
5.3　移动元素
5.3.1　标注、编号和链接到上下文
5.3.2　插入脚注
5.4　包装元素
5.5　复制元素
5.5.1　复制的深度
5.5.2　通过复制创建突出引用
5.6　dom操作方法的简单归纳
5.7　小结
第6章　ajax——让网站与时俱进
6.1　基于请求加载数据
6.1.1　追加html
6.1.2　操作javascript对象
6.1.3　加载xml　文档
6.2　选择数据格式
6.3　向服务器传递数据
6.3.1　执行get请求
6.3.2　执行post请求
6.3.3　序列化表单
6.4　关注请求
6.5　ajax和事件
6.5.1　限定事件绑定函数的作用域
6.5.2　利用事件冒泡
6.6　安全限制
6.7　小结
第7章　表格操作
7.1　排序
7.1.1　服务器端排序
7.1.2　javascript排序
7.2　分页
7.2.1　服务器端分页
7.2.2　javascript　分页
7.3　完成的代码
7.4　高级行条纹效果
7.4.1　三色交替模式
7.4.2　三行一组交替
7.5　突出显示行
7.6　工具提示条
7.7　折叠和扩展
7.8　筛选
7.8.1　筛选选项
7.8.2　同其他代码整合
7.9　完成的代码
7.10　小结
第8章　构建功能型表单
8.1　渐进增强的表单设计
8.1.1　图标符号
8.1.2　必填字段的提示信息
8.1.3　根据条件显示的字段
8.2　表单验证
8.2.1　即时反馈
8.2.2　最终检查
8.3　复选框操作
8.4　完成的代码
8.5　字段的占位符文本
8.6　ajax自动完成
8.6.1　服务器端代码
8.6.2　浏览器端脚本
8.6.3　填充搜索字段
8.6.4　键盘导航
8.6.5　自动完成与实时搜索
8.7　完成的代码
8.8　输入掩码
8.8.1　购物车表格结构
8.8.2　拒绝非数字输入
8.9　数字计算
8.9.1　解析和格式化货币值
8.9.2　处理小数位
8.9.3　其他计算
8.10　删除商品
8.11　修改送货信息
8.12　完成的代码
8.13　小结
第9章　滑移和翻转
9.1　标题翻转效果
9.1.1　设置页面
9.1.2　取得新闻源
9.1.3　设置翻转效果
9.1.4　标题翻转函数
9.1.5　悬停时暂停
9.1.6　从不同的域中取得新闻源
9.1.7　附加的内部渐变效果
9.2　图像传送带
9.2.1　设置页面
9.2.2　通过javascript修改样式
9.2.3　通过单击滑移图像
9.2.4　添加滑移效果
9.2.5　显示操作图标
9.3　放大图像
9.3.1　隐藏大幅封面
9.3.2　更有价值的标记
9.3.3　为封面放大添加动画效果
9.4　完成的代码
9.5　小结
第10章　插件
10.1　使用插件
10.2　流行的插件
10.2.1　dimensions
10.2.2　form
10.2.3　interface
10.3　查找插件文档
10.4　开发新插件
10.4.1　添加新的全局函数
10.4.2　添加jquery对象方法
10.4.3　dom遍历方法
10.4.4　添加新的简写方法
10.4.5　维护多事件日志
10.4.6　添加选择符表达式
10.4.7　创建缓动样式
10.4.8　做个好公民
10.5　小结
附录a　在线资源
附录b　开发工具
附录c　javascript闭包
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>jQuery基础教程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>AngularJS权威教程
第1章　初识AngularJS　　1
1.1　浏览器如何获取网页　　1
1.2　浏览器是什么　　2
1.3　AngularJS是什么　　2
1.3.1　AngularJS有什么不同　　3
1.3.2　许可　　3
第2章　数据绑定和第一个AngularJS Web应用　　4
2.1　AngularJS中的数据绑定　　5
2.2　简单的数据绑定　　6
2.3　数据绑定的最佳实践　　8
第3章　模块　　10
3.1　参数　　11
3.1.1　name（字符串）　　11
3.1.2　requires（字符串数组）　　11
第4章　作用域　　12
4.1　视图和$scope的世界　　12
4.2　就是HTML而已　　13
4.3　作用域能做什么　　14
4.4　$scope的生命周期　　14
4.4.1　创建　　15
4.4.2　链接　　15
4.4.3　更新　　15
4.4.4　销毁　　15
4.5　指令和作用域　　15
第5章　控制器　　16
5.1　控制器嵌套（作用域包含作用域）　　18
第6章　表达式　　20
6.1　解析AngularJS表达式　　20
6.2　插值字符串　　21
第7章　过滤器　　24
7.1　自定义过滤器　　29
7.2　表单验证　　29
第8章　指令简介　　43
8.1　指令：自定义HTML元素和属性　　44
8.2　向指令中传递数据　　50
第9章　内置指令　　56
9.1　基础ng属性指令　　56
9.1.1　布尔属性　　56
9.1.2　类布尔属性　　58
9.2　在指令中使用子作用域　　59
第10章　指令详解　　72
10.1　指令定义　　72
10.1.1　restrict（字符串）　　74
10.1.2　优先级（数值型）　　75
10.1.3　terminal（布尔型）　　75
10.1.4　template（字符串或函数）　　76
10.1.5　templateUrl（字符串或函数）　　76
10.1.6　replace（布尔型）　　77
10.2　指令作用域　　77
10.2.1　scope参数（布尔型或对象）　　78
10.2.2　隔离作用域　　80
10.3　绑定策略　　81
10.3.1　transclude　　82
10.3.2　controller（字符串或函数）　　84
10.3.3　controllerAs（字符串）　　86
10.3.4　require（字符串或数组）　　86
10.4　AngularJS的生命周期　　87
10.4.1　编译阶段　　87
10.4.2　compile（对象或函数）　　88
10.4.3　链接　　89
10.5　ngModel　　90
10.5.1　自定义渲染　　92
10.5.2　属性　　92
10.6　自定义验证　　93
第11章　AngularJS模块加载　　95
11.1　配置　　95
11.2　运行块　　96
第12章　多重视图和路由　　98
12.1　安装　　98
12.2　布局模板　　99
12.3　路由　　99
12.4　$location服务　　103
12.5　路由模式　　105
12.5.1　HTML5模式　　105
12.5.2　路由事件　　106
12.5.3　关于搜索引擎索引　　107
12.6　更多关于路由的内容　　107
12.6.1　页面重新加载　　107
12.6.2　异步的地址变化　　107
第13章　依赖注入　　108
13.1　推断式注入声明　　109
13.2　显式注入声明　　110
13.3　行内注入声明　　110
13.4　$injector API　　111
13.4.1　annotate()　　111
13.4.2　get()　　111
13.4.3　has()　　111
13.4.4　instantiate()　　112
13.4.5　invoke()　　112
13.5　ngMin　　112
13.5.1　安装　　113
13.5.2　使用ngMin　　113
13.5.3　工作原理　　113
第14章　服务　　114
14.1　注册一个服务　　114
14.2　使用服务　　116
14.3　创建服务时的设置项　　118
14.3.1　factory()　　119
14.3.2　service()　　119
14.3.3　provider()　　120
14.3.4　constant()　　122
14.3.5　value()　　122
14.3.6　何时使用value()和constant()　　123
14.3.7　decorator()　　123
第15章　同外界通信：XHR和服务器通信　　125
15.1　使用$http　　125
15.2　设置对象　　128
15.3　响应对象　　130
15.4　缓存HTTP请求　　131
15.5　拦截器　　132
15.6　设置$httpProvider　　133
15.7　使用$resource　　134
15.8　安装　　134
15.9　应用$resource　　135
15.9.1　基于HTTP GET方法　　135
15.9.2　基于非HTTP GET类型的方法　　136
15.9.3　$resource实例　　137
15.9.4　$resource实例是异步的　　138
15.9.5　附加属性　　138
15.10　自定义$resource方法　　138
15.11　$resource设置对象　　139
15.12　$resource服务　　141
15.13　使用Restangular　　142
15.14　Restangular简介　　142
15.15　安装Restangular　　143
15.16　Restangular对象简介　　144
15.17　使用Restangular　　145
15.17.1　我的HTTP方法们怎么办　　146
15.17.2　自定义查询参数和头　　147
15.18　设置Restangular　　147
第16章　XHR实践　　153
16.1　跨域和同源策略　　153
16.2　JSONP　　153
16.3　使用CORS　　154
16.3.1　设置　　154
16.3.2　服务器端CORS支持　　155
16.3.3　简单请求　　155
16.3.4　非简单请求　　156
16.4　服务器端代理　　157
16.5　使用JSON　　157
16.6　使用XML　　158
16.7　使用AngularJS进行身份验证　　159
16.7.1　服务器端需求　　159
16.7.2　客户端身份验证　　160
16.8　和MongoDB通信　　165
第17章　promise　　168
17.1　什么是promise　　168
17.2　为什么使用promise　　169
17.3　Angular中的promise　　170
17.4　链式请求　　173
17.4.1　all(promises)　　174
17.4.2　defer()　　174
17.4.3　reject(reason)　　174
17.4.4　when(value)　　174
第18章　服务器通信　　175
18.1　自定义服务器端　　175
18.2　安装NodeJS　　175
18.3　安装Express　　176
18.4　调用API　　178
18.5　使用Amazon AWS的无服务器应用　　181
18.5.1　DynamoDB　　181
18.5.2　简单通知服务（SNS）　　181
18.5.3　简单队列服务（SQS，Simple Queue Service）　　182
18.5.4　简单存储服务（S3）　　182
18.5.5　安全令牌服务（STS）　　182
18.6　AWSJS + Angular　　182
18.7　开始　　182
18.8　介绍　　184
18.9　安装　　184
18.10　运行　　185
18.11　用户认证/鉴权　　186
18.12　UserService　　190
18.13　迁移到AWS上　　191
18.14　AWSService　　194
18.15　在Dynamo上开始　　196
18.16　$cacheFactory　　196
18.17　保存currentUser　　197
18.18　上传到S3　　199
18.19　处理文件上传　　201
18.20　查询Dynamo　　203
18.21　在HTML显示列表　　204
18.22　出售我们的作品　　205
18.23　使用Stripe　　206
18.24　使用Firebase的无服务器应用　　209
18.25　使用Firebase和Angular的三方数据绑定　　210
18.26　从AngularFire开始　　211
18.26.1　注册并创建一个Firebase　　211
18.26.2　包含Firebase和AngularFire库　　212
18.26.3　把Firebase作为依赖项添加　　212
18.26.4　绑定模型到Firebase URL　　212
18.26.5　数据同步　　213
18.27　在AngularFire中排序　　214
18.28　Firebase事件　　215
18.29　显式同步　　215
18.30　用AngularFire进行认证　　216
18.31　认证事件　　217
18.31.1　$logout()　　218
18.31.2　$createUser()　　218
18.32　使用Firebase托管部署你的Angular应用　　218
18.32.1　安装Firebase工具　　218
18.32.2　部署你的Web站点　　219
18.33　除了AngularFire之外　　219
第19章　测试　　220
19.1　为什么要做测试　　220
19.2　测试策略　　220
19.3　开始测试　　220
19.4　AngularJS测试的类型　　221
19.4.1　单元测试　　221
19.4.2　端到端测试　　222
19.5　开始　　222
19.6　初始化Karma配置文件　　223
19.7　配置选项　　226
19.8　使用RequireJS　　231
19.9　Jasmine　　233
19.9.1　细则套件　　233
19.9.2　定义一个细则　　233
19.10　预期　　234
19.10.1　内置的匹配器　　234
19.10.2　安装和卸载　　237
19.11　端到端的介绍　　238
19.11.1　选项输入　　244
19.11.2　重复循环元素　　244
19.12　模拟和测试帮助函数　　245
19.13　模拟$httpBackend　　246
19.14　测试一个应用　　251
19.14.1　测试路由　　252
19.14.2　测试页面内容　　255
19.14.3　测试控制器　　257
19.14.4　测试服务和工厂　　259
19.14.5　测试过滤器　　263
19.14.6　测试模板　　264
19.14.7　测试指令　　266
19.15　测试事件　　269
19.16　对Angular的持续集成　　270
19.17　Protractor　　270
19.18　配置　　272
19.19　配置选项　　273
19.20　编写测试　　275
19.21　测试实践　　278
19.21.1　我们的应用　　278
19.21.2　测试的策略　　279
19.22　建立我们的第一个测试　　279
19.23　测试输入框　　281
19.23.1　测试列表　　282
19.23.2　测试路由　　284
19.24　页面对象　　285
第20章　事件　　287
20.1　什么是事件　　287
20.2　事件传播　　287
20.2.1　使用$emit来冒泡事件　　288
20.2.2　使用$broadcast向下传递事件　　288
20.3　事件监听　　289
20.4　事件对象　　289
20.5　事件相关的核心服务　　290
20.5.1　核心系统的$emitted事件　　290
20.5.2　核心系统的$broadcast事件　　290
第21章　架构　　292
21.1　目录结构　　292
21.2　模块　　293
21.3　控制器　　294
21.4　指令　　296
21.5　测试　　296
第22章　Angular动画　　297
22.1　安装　　297
22.2　它是如何运作的　　297
22.3　使用CSS3过渡　　298
22.4　使用CSS3动画　　300
22.5　交错CSS过渡/动画　　301
22.5.1　交错CSS过渡　　301
22.5.2　交错CSS动画　　302
22.5.3　什么指令支持交错动画　　302
22.6　使用JavaScript动画　　302
22.7　微调动画　　303
22.8　DOM回调事件　　304
22.9　内置指令的动画　　304
22.9.1　ngRepeat动画　　304
22.9.2　ngView动画　　306
22.9.3　ngInclude动画　　308
22.9.4　ngSwitch动画　　310
22.9.5　ngIf动画　　312
22.9.6　ngClass动画　　314
22.9.7　ngShow/ngHide动画　　316
22.10　创建自定义动画　　318
22.10.1　addClass()　　319
22.10.2　removeClass()　　320
22.10.3　enter()　　321
22.10.4　leave()　　322
22.10.5　move()　　323
22.11　与第三方库集成　　324
22.11.1　Animate.css　　324
22.11.2　TweenMax/TweenLite　　324
第23章　digest循环和$apply　　326
23.1　$watch列表　　326
23.2　脏值检查　　327
23.3　$watch　　328
23.4　$watchCollection　　330
23.5　页面中的$digest循环　　330
23.6　$evalAsync列表　　331
23.7　$apply　　332
23.8　何时使用$apply　　332
第24章　揭秘Angular　　334
24.1　视图的工作原理　　335
24.1.1　编译阶段　　335
24.1.2　运行时　　336
第25章　AngularJS精华扩展　　337
25.1　AngularUI　　337
25.2　安装　　337
25.3　ui-router　　337
25.3.1　安装　　337
25.3.2　事件　　342
25.3.3　$stateParams　　343
25.3.4　$urlRouterProvider　　344
25.3.5　创建一个导航程序　　345
25.4　ui-utils　　346
25.4.1　安装　　347
25.4.2　mask　　347
25.4.3　ui-event　　347
25.4.4　ui-format　　348
第26章　移动应用　　350
26.1　响应式Web应用　　350
26.2　交互　　350
26.2.1　安装　　350
26.2.2　ngTouch　　351
26.2.3　$swipe服务　　352
26.2.4　angular-gestures和多点触控手势　　353
26.2.5　安装angular-gestures　　354
26.2.6　使用angular-gestures　　354
26.3　Cordova中的原生应用程序　　355
26.4　Cordova入门　　356
26.4.1　Cordova开发流程　　359
26.4.2　平台　　359
26.4.3　插件　　359
26.4.4　构建　　360
26.4.5　模拟和运行　　360
26.4.6　开发阶段　　360
26.4.7　Anguar中的Cordova服务　　361
26.5　引入Angular　　362
26.6　使用Yeoman构建　　363
26.6.1　修改Yeoman以便使用Cordova　　364
26.6.2　装配Yeoman构建　　365
26.6.3　构建移动部分　　365
26.6.4　处理引导程序　　367
第27章　本地化　　369
27.1　angular-translate　　369
27.2　安装　　369
27.3　教你的应用一种新语言　　370
27.4　多语言支持　　371
27.5　运行时切换语言　　372
27.6　加载语言　　373
27.7　angular-gettext　　374
27.8　安装　　374
27.9　用法　　375
27.10　字符串提取　　375
27.11　翻译字符串　　377
27.12　编译新语言　　378
27.13　改变语言　　379
第28章　缓存　　381
28.1　什么是缓存　　381
28.2　Angular中的缓存　　381
28.2.1　$cacheFactory简介　　381
28.2.2　缓存对象　　382
28.3　$http中的缓存　　382
28.3.1　默认的$http缓存　　382
28.3.2　自定义缓存　　383
28.4　为$http设置默认缓存　　384
第29章　安全性　　385
29.1　严格的上下文转义：$sce服务　　385
29.2　URL白名单　　387
29.3　URL黑名单　　388
29.4　$sce API　　388
29.4.1　getTrusted　　388
29.4.2　parse　　389
29.4.3　trustAs　　389
29.4.4　isEnabled　　390
29.5　配置$sce　　390
29.6　可信赖的上下文类型　　390
第30章　AngularJS和IE浏览器　　391
30.1　Ajax缓存　　393
30.2　AngularJS中的SEO　　393
30.3　使Angular应用可被索引　　393
30.4　服务端　　393
30.4.1　hashbang语法　　394
30.4.2　HTML5路由模式　　394
30.5　服务端处理SEO的选项　　394
30.5.1　使用Node/Express中间件　　395
30.5.2　使用Apache重写URL　　395
30.5.3　使用Ngnix代理URL　　396
30.6　获取快照　　396
30.7　使用Zombie.js获取HTML快照　　397
30.8　使用grunt-html-snapshot　　398
30.9　Prerender.io　　399
30.10　<noscript>方法　　400
第31章　构建Angular Chrome应用　　401
31.1　了解Chrome应用　　401
31.1.1　manifest.json　　401
31.1.2　背景脚本　　401
31.1.3　视图　　401
31.2　构建你的Chrome应用　　402
31.3　搭建框架　　402
31.4　manifest.json　　403
31.5　tab.html　　404
31.6　在Chrome中加载应用　　405
31.7　主模块　　406
31.8　构建主页　　406
31.9　使用Wundergroud的天气API　　408
31.10　设置界面　　411
31.11　实现用户服务　　413
31.12　城市自动填充/自动完成　　415
31.13　添加时区支持　　418
第32章　优化Angular应用　　421
32.1　优化什么　　421
32.2　优化$digest循环　　421
32.3　优化ng-repeat　　423
32.4　优化$digest调用　　423
32.5　优化$watch函数　　424
32.5.1　bindonce　　425
32.5.2　$watch函数的自动优化　　427
32.6　优化过滤器　　427
32.6.1　不变的数据　　427
32.6.2　过滤后的数据　　427
32.7　页面加载优化技巧　　428
32.7.1　压缩　　429
32.7.2　利用$templateCache　　429
第33章　调试AngularJS　　430
33.1　从DOM中调试　　430
33.1.1　scope()　　431
33.1.2　controller()　　431
33.1.3　injector()　　431
33.1.4　inheritedData()　　431
33.2　调试器　　431
33.3　Angular Batarang　　432
33.3.1　安装Batarang　　432
33.3.2　检查模型　　433
33.3.3　检查性能　　433
33.3.4　检查依赖图表　　434
33.3.5　可视化应用　　434
第34章　下一步　　435
34.1　jqLite和jQuery　　435
34.2　了解基本工具　　436
34.3　Grunt　　436
34.4　grunt-angular-templates　　439
34.4.1　安装　　439
34.4.2　用法　　440
34.4.3　可用选项　　440
34.4.4　用法　　442
34.5　Lineman　　443
34.6　Bower　　445
34.6.1　安装　　445
34.6.2　Bower简介　　445
34.6.3　配置Bower　　446
34.6.4　搜索程序包　　447
34.6.5　安装程序包　　447
34.6.6　使用程序包　　447
34.6.7　移除程序包　　448
34.7　Yeoman　　448
34.7.1　安装　　448
34.7.2　用法　　449
34.7.3　创建路由　　451
34.7.4　创建控制器　　451
34.7.5　创建自定义指令　　451
34.7.6　创建自定义过滤器　　451
34.7.7　创建视图　　451
34.7.8　创建服务　　452
34.7.9　创建装饰器　　452
34.8　配置Angular生成器　　452
34.8.1　CoffeeScript　　452
34.8.2　安全压缩　　452
34.8.3　跳过索引　　452
34.9　测试应用　　452
34.10　打包应用　　453
34.11　打包模板　　453
第35章　总结　　456
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>AngularJS权威教程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通JavaScript
第1章 概述
1-1 什么是Script
1-2 为什么要使用JavaScript
1-3 如何撰写JavaScript
1-4 问题与讨论
第2章 HTML基本语法
2-1 HTML文档宣告
2-2 文档主体
2-3 海阔天空的LINK
2-4 插入图片
2-5 窗体语法的介绍
2-6 窗体卷标综合范例
2-7 表格卷标
2-8 建立框架FRAMES
2-9 文

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通JavaScript
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>看透JavaScript
第一篇 JavaScript基础知识
第1章 JavaScript怎么学 2
1.1 三种学习方法 2
1.2 JavaScript的学习方法 3
第2章 JavaScript简介 6
2.1 ECMAScript概述 7
2.2 DOM概述 8
2.3 BOM概述 8
2.4 HTML5概述 9
第3章 JavaScript的本质 10
3.1 工具介绍 10
3.2 JavaScript的结构 15
3.3 JavaScript的内存模型 17
第4章 function类型对象 20
4.1 创建function 20
4.2 用作对象 23
4.3 处理业务 23
4.4 创建对象 49
4.5 三种子类型 57
第5章 object类型对象 62
5.1 创建object类型对象的三种方式 62
5.2 对象的属性 66
5.3 属性的描述 74
第6章 直接量及其相关对象 79
6.1 直接量的保存方式 79
6.2 直接量的封包与解包 80
6.3 直接量的包装对象 81
第7章 点运算符与this关键字 90
7.1 点运算符 90
7.2 this的含义 90
7.3 关联方法后的this 91
7.4 内部函数中的this 91
7.5 对象的属性不可以继承 93
第8章 Global与Window对象 94
8.1 Global对象 94
8.2 Window对象的特殊性 94
第二篇 ECMAScript 2015中的新特性
第9章 类 98
9.1 新类型class 98
9.2 class的用法 98
第10章 模块 100
10.1 模块的基本用法 100
10.2 导入后重命名 101
10.3 默认导出 102
10.4 导入为命名空间 103
10.5 打包导出 103
第11章 新增语法 105
11.1 let和const 105
11.2 字符串模板 106
11.3 函数参数默认值 106
11.4 参数扩展 107
11.5 箭头函数 107
11.6 for-of遍历 108
第12章 新增对象 111
12.1 Symbol 111
12.2 容器对象 112
12.3 缓存对象 121
12.4 异步处理 128
12.5 GeneratorFunction和Generator 132
12.6 反射与代理 134
第13章 原有对象的新增属性 140
13.1 Object 140
13.2 String 143
13.3 Number 150
13.4 Array 150
13.5 Math 154
13.6 RegExp 155
第三篇 DOM
第14章 DOM概述 162
14.1 DOM标准的结构 162
14.2 DOM标准的特点 163
第15章 DOM核心 164
15.1 文档对象 164
15.2 异常对象 177
15.3 辅助对象 178
第16章 DOM中的HTML标准 182
16.1 HTMLCollection 182
16.2 HTMLOptionsCollection 184
16.3 HTMLDocument 184
16.4 HTMLElement 186
第17章 DOM事件 187
17.1 事件流 187
17.2 EventTarget 189
17.3 EventListener 190
17.4 Event 190
17.5 DOM0级事件 199
第18章 DOM样式和视图 201
18.1 Views 201
18.2 StyleSheets 202
18.3 CSS 204
第19章 DOM遍历和范围 215
19.1 遍历 215
19.2 范围 219
第四篇 BOM
第20章 window对象 228
20.1 窗口、框架相关属性 228
20.2 窗口操作相关属性 230
20.3 弹出窗口相关属性 231
20.4 浏览器对象相关属性 231
20.5 定时器相关属性 231
20.6 其他属性 234
第21章 location对象 235
21.1 8个读写属性 235
21.2 三个方法属性 237
第22章 其他对象 238
22.1 history对象 238
22.2 navigator对象 238
第五篇 HTML5
第23章 本地存储 242
23.1 本地存储的分类 242
23.2 Storage存储 243
23.3 StorageEvent 245
23.4 IndexedDB数据库 248
第24章 canvas作图 271
24.1 绘制矩形 272
24.2 绘制路径 274
24.3 组合与剪切 282
24.4 坐标检测 285
24.5 修改颜色和样式 286
24.6 插入文本 290
24.7 插入图片 292
24.8 环境的保存和恢复 292
24.9 移动坐标原点 293
24.10 旋转坐标系 294
24.11 缩放 295
24.12 自由转换 297
24.13 阴影 298
24.14 动画 299
24.15 游戏 300
第25章 WebSocket 306
25.1 网络传输的原理和底层协议 306
25.2 WebSocket简介 307
25.3 WebSocket的优势 308
25.4 基本应用 308
25.5 RESTful应用 312
25.6 在线聊天系统 313
25.7 传输对象和二进制数据 318
第26章 多线程处理 335
26.1 单线程与多线程的概念 335
26.2 线程与进程的概念 337
26.3 JavaScript中的多线程 338
第27章 获取位置信息 347
27.1 geolocation对象 347
27.2 Position接口 348
27.3 PositionError接口 349
27.4 PositionOptions接口 350
27.5 显示到地图上 353
第28章 富文本编辑器与公式编辑器 356
28.1 富文本编辑器的原理 356
28.2 公式编辑器 364
第29章 总结 380
29.1 ECMAScript 380
29.2 DOM和BOM 381
29.3 HTML5 382
附录 ExcelibIDB源代码 384
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>看透JavaScript
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript编程精粹
第1章　JavaScript入门　　1
1.1　JavaScript极简史　　2
1.2　如何阅读本书　　2
1.3　Hello World　　4
1.3.1　JavaScript概览　　5
1.3.2　JavaScript类型　　21
1.3.3　自动插入分号　　23
1.3.4　JavaScript代码风格指南　　25
1.4　小结　　33
第2章　函数、闭包与模块　　34
2.1　函数的字面形式　　34
2.2　函数作为数据　　36
2.3　作用域　　38
2.3.1　全局作用域　　38
2.3.2　局部作用域　　39
2.3.3　函数作用域与块作用域　　39
2.3.4　行内函数表达式　　42
2.3.5　块作用域　　42
2.4　函数声明与函数表达式　　44
2.5　arguments参数　　45
2.6　匿名函数　　48
2.6.1　对象创建过程中的匿名函数　　48
2.6.2　列表创建过程中的匿名函数　　49
2.6.3　作为函数参数的匿名函数　　49
2.6.4　出现在条件逻辑中的匿名函数　　49
2.7　闭包　　50
2.8　计时器和回调函数　　52
2.9　私有变量　　53
2.10　循环与闭包　　53
2.11　模块　　54
2.12　小结　　55
第3章　数据结构及相关操作　　56
3.1　正则表达式　　56
3.2　严格匹配　　57
3.3　匹配字符组　　58
3.4　重复出现　　61
3.5　首部与尾部　　63
3.6　向后引用　　63
3.7　贪婪限定符与惰性限定符　　64
3.8　数组　　65
3.9　map　　71
3.10　set　　72
3.11　编码风格　　73
3.12　小结　　74
第4章　面向对象的JavaScript　　75
4.1　理解对象　　75
4.1.1　JavaScript对象的行为　　77
4.1.2　原型　　78
4.2　实例属性与原型属性　　79
4.3　继承　　83
4.4　接收器与设置器　　89
4.5　小结　　91
第5章　JavaScript模式　　92
5.1　设计模式　　92
5.2　命名空间模式　　94
5.3　模块模式　　95
5.4　工厂模式　　100
5.5　mixin模式　　101
5.6　装饰器模式　　102
5.7　观察者模式　　104
5.8　JavaScript的Model-View-*模式　　106
5.8.1　模型?视图?控制器　　106
5.8.2　模型　　106
5.8.3　视图　　107
5.8.4　控制器　　107
5.9　模型?视图?表现器　　107
5.10　模型?视图?视图模型　　108
5.11　小结　　109
第6章　测试与调试　　110
6.1　单元测试　　111
6.1.1　测试驱动开发　　111
6.1.2　行为驱动开发　　112
6.2　JavaScript调试　　117
6.2.1　语法错误　　117
6.2.2　使用严格模式　　117
6.2.3　运行时异常　　118
6.3　小结　　123
第7章　ECMAScript 6　　124
7.1　shim/polyfill　　124
7.2　转换编译器　　125
7.3　ES6语法上的变化　　125
7.3.1　块级作用域　　125
7.3.2　默认参数　　127
7.3.3　spread与rest　　127
7.3.4　解构　　128
7.3.5　对象字面量　　129
7.3.6　模板字面量　　130
7.3.7　Map与Set　　131
7.3.8　Symbol　　133
7.3.9　迭代器　　134
7.3.10　for..of循环　　134
7.3.11　箭头函数　　134
7.4　小结　　137
第8章　DOM操作与事件　　138
8.1　DOM　　138
8.1.1　访问DOM元素　　138
8.1.2　访问特定的节点　　140
8.2　链式方法　　145
8.3　遍历与操作　　146
8.4　处理浏览器事件　　147
8.5　事件传播　　148
8.6　jQuery事件处理及传播　　149
8.7　事件委托　　151
8.8　事件对象　　152
8.9　小结　　153
第9章　服务器端JavaScript　　154
9.1　浏览器的异步事件模型　　154
9.2　回调函数　　158
9.3　计时器　　160
9.4　EventEmitter　　161
9.5　模块　　162
9.6　npm　　165
9.7　JavaScript性能　　166
9.8　小结　　169
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript编程精粹
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Windows 8 开发权威指南
第1章  Visual Studio 2012的新特性  1
1.1  如何安装Windows 8  1
1.1.1  安装配置要求  1
1.1.2  使用“自定义”选项安装Windows 8  1
1.1.3  注意事项  6
1.2  如何安装Visual Studio 2012  6
1.2.1  安装配置要求  7
1.2.2  安装过程  7
1.3  Microsoft Design新特性  9
1.3.1  有一个支持多个视图的窗口  9
1.3.2  应用与触控和笔输入协作良好  10
1.3.3  应用可彼此交谈  10
1.3.4  应用具有新的控件和UI设计面  10
1.3.5  应用使用磁贴而非图标  11
1.3.6  采用已知的语言编写应用  12
1.3.7  在Windows应用商店中销售你的应用  12
1.4  Visual Studio 2012新特性  12
1.4.1  Windows Microsoft Design样式应用程序  12
1.4.2  Visual Studio IDE  13
1.4.3  语言  15
1.4.4  应用程序生命周期管理和Team Foundation Server  16
1.4.5  ASP.NET 4.5和Web开发  18
1.4.6  其他改进  20
第2章  HTML5 JavaScript概述以及新特性  23
2.1  HTML5概述  23
2.1.1  什么是HTML5  23
2.1.2  新的文档类型  24
2.1.3  脚本和链接无需添加type属性  24
2.1.4  用于绘画的画布(canvas元素)  24
2.1.5  用于媒介播放的video和audio元素  24
2.1.6  新的特殊内容元素  25
2.1.7  新的表单控件  25
2.2  JavaScript概述  25
2.2.1  什么是JavaScript  25
2.2.2  第一个JavaScript程序  27
2.2.3  JavaScript的新特性  27
2.3  IE10与CSS3  33
2.3.1  使用CSS3添加圆角  33
2.3.2  使用CSS3添加投影  38
2.3.3  使用CSS3创建酷炫十足的按钮  40
2.3.4  使用CSS3增强网站的样式设计  43
2.3.5  IE 10概述  51
2.4  HTML5  57
2.4.1  HTML5添加音频  57
2.4.2  HTML5添加视频  58
2.4.3  HTML5添加位置感知  60
2.4.4  捕获照片和视频  63
2.4.5  HTML5本地存储的应用  65
2.4.6  管理启动、挂起和回复  68
2.4.7  支持设备  70
2.4.8  访问文件和文件夹  71
第3章  基于HTML5 JavaScript开发Microsoft Design Blank App  79
3.1  Microsoft Design控件大全  79
3.1.1  超链接(a)  79
3.1.2  应用栏(AppBar)  79
3.1.3  音频  80
3.1.4  按钮  80
3.1.5  画布  81
3.1.6  复选框  84
3.1.7  上下文菜单  84
3.1.8  日期选取器  84
3.1.9  电子邮件输入框  89
3.1.10  文件上传  89
3.1.11  弹性框  89
3.1.12  翻转视图  89
3.1.13  弹出窗口  93
3.1.14  网格  94
3.1.15  网格视图  94
3.1.16  HTML控件  95
3.1.17  浮动框架(iframe)  95
3.1.18  列表视图  95
3.1.19  消息对话框  100
3.1.20  分级  100
3.2  Microsoft Design基础开发讲解  102
3.2.1  应用栏  102
3.2.2  上下文菜单  106
3.2.3  布局和视图  108
3.2.4  笔和触笔输入  122
3.2.5  资源  131
3.2.6  磁贴  139
3.2.7  消息通知  164
3.3  Microsoft Design Blank App案例  172
3.3.1  创建Hello，World应用  172
3.3.2  使用加速计响应用户移动  180
3.3.3  使用指南针确定当前的方位  182
第4章  基于HTML5 JavaScript开发Microsoft Design Grid App  185
4.1  Microsoft Design Grid App概述  185
4.1.1  网格项目模板预览  185
4.1.2  网格模板的项目文件介绍  186
4.1.3  网格模板的工作原理及应用的生命周期  187
4.1.4  网格模板的工作原理之导航模型  188
4.1.5  网格模板的工作原理之向项目模板中添加数据  190
4.2  添加页面转换动画  194
4.3  添加应用栏  196
4.3.1  示例概述  197
4.3.2  示例效果实现  198
4.4  如何使网格可选并显示上下文应用栏命令  199
4.4.1  ListView概述  199
4.4.2  示例概述  200
4.4.3  示例效果实现  201
4.5  添加SemanticZoom控件  204
4.5.1  添加SemanticZoom控件概述  204
4.5.2  添加SemanticZoom控件的实现  205
4.6  在网格中显示多尺寸项  209
4.6.1  网格的尺寸概述  209
4.6.2  在网格中显示多尺寸项示例概述  210
4.6.3  在网格中显示多尺寸项示例实现  210
第5章  基于HTML5 JavaScript开发Microsoft Design Split App  215
5.1  Microsoft Design Split App概述  215
5.1.1  拆分模板的项目文件介绍  216
5.1.2  拆分模板的工作原理之应用的生命周期  216
5.1.3  拆分模板的工作原理之导航模型  217
5.1.4  拆分模板的工作原理之向项目模板中添加数据  219
5.1.5  拆分模板的工作原理之处理视图状态  224
5.1.6  拆分模板的工作原理之CSS样式  225
5.2  创建博客阅读器  226
5.2.1  在Visual Studio中创建新项目  227
5.2.2  启动我们的新MicrosoftDesign风格应用  228
5.2.3  更改标题和背景色  228
5.2.4  替换示例数据  229
5.2.5  更新items的PageControl  233
5.2.6  更新拆分页PageControl  235
5.3  对博客阅读器的完善  236
5.3.1  添加项详细信息PageControl  236
5.3.2  添加带有显示项目详细信息页面命令的应用栏  239
5.3.3  从拆分页PageControl导航到项详细信息PageControl  239
5.4  唐诗两三首  240
5.4.1  唐诗两三首概述  240
5.4.2  新建项目  241
5.4.3  引入应用需要的图像  242
5.4.4  修改应用的数据（data.js）  244
5.4.5  修改split.js、items.html和split.html  247
5.4.6  修改CSS  248
5.4.7  修改应用在开始屏幕上的名称  249
5.4.8  运行应用“唐诗两三首”  249
第6章  基于HTML5 JavaScript开发Microsoft Design导航应用程序  251
6.1  Microsoft Design风格应用的导航设计  251
6.1.1  分层系统  251
6.1.2  平面系统  252
6.1.3  导航剖析  252
6.1.4  通过轻扫边缘进行导航  254
6.1.5  使用标题菜单和部分标签进行导航  254
6.1.6  使用筛选、透视、排序和查看进行导航  255
6.2  使用单页导航  259
6.3  支持导航  267
6.3.1  如何引用内容  267
6.3.2  如何链接到外部网页  268
6.3.3  如何创建混合外部应用程序  270
6.3.4  如何要求HTTPS链接  272
6.3.5  链接指南和清单  273
6.4  导航与导航历史案例  274
6.4.1  新建项目  274
6.4.2  新建sample-utils  275
6.4.3  新建场景选择页scenario-select.html  285
6.4.4  导航内容的编写  286
6.4.5  修改default.js  296
6.4.6  运行结果  296
第7章  基于HTML5 JavaScript开发Microsoft Design固定布局应用程序  298
7.1  固定布局概述  298
7.1.1  基本概念  298
7.1.2  自适应缩放  300
7.2  固定布局项目模板  302
7.2.1  default.html  303
7.2.2  default.css  303
7.2.3  default.js  306
7.2.4  其他文件  306
7.3  案例：touch  game之界面篇  307
7.3.1  文件结构  307
7.3.2  主页homepage  308
7.3.3  游戏界面gamepage  309
7.3.4  规则界面rulespage  313
7.3.5  分数排行界面scorespage  314
7.3.6  制作人员界面creditspage  316
7.4  案例：两个小工具的介绍  317
7.4.1  天气预报  317
7.4.2  设定锁屏  321
7.5  案例：Snooker  323
7.5.1  文件结构  324
7.5.2  default.html  324
7.5.3  Site.css  325
7.5.4  CanvasPrototype.js  325
7.5.5  Vector2D.js  326
7.5.6  碰撞动作相关处理  327
第8章  HTML5 Windows 8 Microsoft Design经典案例  331
8.1  Microsoft Design多点触控程序范例  331
8.1.1  Windows 8触控概述  331
8.1.2  使用JavaScript的多点触控案例  340
8.2  Microsoft Design云存储程序范例之漫游应用程序数据  356
8.2.1  漫游应用程序数据概述  357
8.2.2  访问Live服务数据  360
8.3  Microsoft Design手写识别范例  362
8.3.1  文件结构  362
8.3.2  default.html  362
8.3.3  simpleInk.js  363
8.4  Microsoft Design传感器范例之确定设备的方向  369
8.5  Microsoft Design摄像头范例  372
8.5.1  文件结构  372
8.5.2  html  373
8.5.3  sample-utils.css  374
8.5.4  sample-utils.js  374
8.5.5  showoptionsui.js  376
第9章  将程序发布到Windows 8商店  378
9.1  如何注册Windows 8商店  378
9.2  如何打包应用程序  382
9.2.1  Visual Studio 2012“应用商店”菜单介绍  382
9.2.2  应用程序包介绍  383
9.3  如何发布程序到Windows 8商店  384
9.3.1  鼓励开发人员在开始编码之前访问应用商店开发人员门户网站  384
9.3.2  协助制定应用商店技术要求  386
9.3.3  直接从应用程序包提取信息  387
9.3.4  跟踪认证状态  389
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Windows 8 开发权威指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>轻松学用JavaScript
前言
第一部分  创建Web页
第一章  JavaScript的基本知识
1. 1  JavaScript是什么
1. 1. 1  使用简单
1. 1. 2  运行快捷

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>轻松学用JavaScript
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript从零开始学：视频教学版

第1章  必须了解的JavaScript知识
1.1  认识JavaScript
1.1.1  什么是JavaScript
1.1.2  JavaScript的特点
1.1.3  JavaScript与Java的区别
1.1.4  JavaScript版本
1.2  JavaScript的编写工具
1.2.1  记事本
1.2.2  UltraEdit-32
1.2.3  Dreamweaver
1.3  JavaScript在HTML中的使用
1.3.1  在HTML网页头中嵌入JavaScript代码
1.3.2  在HTML网页中嵌入JavaScript代码
1.3.3  在HTML网页的元素事件中嵌入JavaScript代码
1.3.4  在HTML中调用已经存在的JavaScript文件
1.3.5  通过JavaScript伪URL引入JavaScript脚本代码
1.4  JavaScript和浏览器
1.4.1  在IE中调用JavaScript代码
1.4.2  在Firefox中调用JavaScript代码
1.4.3  在Opera中调用JavaScript代码
1.4.4  浏览器中的文档对象类型（DOM）
1.5  实战演练——一个简单的JavaScript实例
1.6  专家答疑
第2章  JavaScript编程基础
2.1  JavaScript的基本语法
2.1.1  执行顺序
2.1.2  区分大小写
2.1.3  分号与空格
2.1.4  对代码行进行折行
2.1.5  注释
2.1.6  语句
2.1.7  语句块
2.2  JavaScript的数据结构
2.2.1  标识符
2.2.2  关键字
2.2.3  保留字
2.2.4  常量
2.2.5  变量
2.3  看透代码中的数据类型
2.3.1  typeof 运算符
2.3.2  Undefined类型
2.3.3  Null类型
2.3.4  Boolean类型
2.3.5  Number类型
2.3.6  String类型
2.3.7  Object类型
2.4  明白数据间的计算法则——运算符
2.4.1  算术运算符
2.4.2  比较运算符
2.4.3  位运算符
2.4.4  逻辑运算符
2.4.5  条件运算符
2.4.6  赋值运算符
2.4.7  运算符优先级
2.5  JavaScript的表达式
2.5.1  赋值表达式
2.5.2  算术表达式
2.5.3  布尔表达式
2.5.4  字符串表达式
2.5.5  类型转换	44
2.6  实战演练——局部变量和全局变量的优先级
2.7  疑难解惑
第3章  程序控制结构与语句
3.1  基本处理流程
3.2  赋值语句
3.3  条件判断语句
3.3.1  if语句
3.3.2  if…else语句
3.3.3  if…else if语句
3.3.4  if语句的嵌套
3.3.5  switch语句
3.4  循环控制语句
3.4.1  while语句
3.4.2  do…while语句
3.4.3  for循环
3.5  跳转语句
3.5.1  break语句
3.5.2  continue语句
3.6  使用对话框
3.7  实战演练——在页面中显示距离2014年元旦的天数
3.8  疑难解惑
第4章  函数
4.1  函数的简介
4.2  函数的定义
4.2.1  不指定函数名
4.2.2  指定函数名
4.2.3  函数参数的使用
4.2.4  函数返回值
4.3  函数的调用
4.3.1  简单调用
4.3.2  在表达式中调用
4.3.3  在事件响应中调用
4.3.4  通过链接调用
4.4  JavaScript中常用的函数
4.4.1  嵌套函数
4.4.2  递归函数
4.4.3  内置函数
4.5  实战演练——购物简易计算器
4.6  疑难解惑
第5章  对象与数组
5.1  了解对象
5.1.1  什么是对象
5.1.2  面向对象编程
5.1.3  JavaScript的内部对象
5.2  对象访问语句
5.2.1  for…in循环语句
5.2.2  with语句
5.3  JavaScript中的数组
5.3.1  结构化数据
5.3.2  创建和访问数组对象
5.3.3  使用for…in语句
5.3.4  Array对象的常用属性和方法
5.4  详解常用的数组对象方法
5.4.1  连接其他数组到当前数组
5.4.2  将数组元素连接为字符串
5.4.3  移除数组中最后一个元素
5.4.4  将指定的数值添加到数组中
5.4.5  反序排列数组中的元素
5.4.6  删除数组中的第一个元素
5.4.7  获取数组中的一部分数据
5.4.8  对数组中的元素进行排序
5.4.9  将数组转换成字符串
5.4.10  将数组转换成本地字符串
5.4.11  在数组开头插入数据
5.5  创建和使用自定义对象
5.5.1  通过定义对象的构造函数的方法
5.5.2  通过对象直接初始化的方法
5.5.3  修改和删除对象实例的属性
5.5.4  通过原型为对象添加新属性和新方法
5.5.5  自定义对象的嵌套
5.5.6  内存的分配和释放
5.6  实战演练——利用二维数组创建动态下拉菜单
5.7  疑难解惑
第6章  日期与字符串对象
6.1  日期对象
6.1.1  创建日期对象
6.1.2  Date 对象属性
6.1.3  日期对象的常用方法
6.2  详解日期对象的常用方法
6.2.1  返回当前日期和时间
6.2.2  以不同的格式显示当前日期
6.2.3  返回日期所对应的周次
6.2.4  显示当前时间
6.2.5  返回距1970年1月1日午夜的时间差
6.2.6  以不同的格式来显示UTC日期
6.2.7  根据世界时返回日期对应的周次
6.2.8  以不同的格式来显示UTC时间
6.2.9  设置日期对象中的年份、月份与日期值
6.2.10  设置日期对象中的小时、分钟与秒钟值
6.2.11  以UTC日期对Date对象进行设置
6.2.12  返回当地时间与UTC时间的差值
6.2.13  将Date对象中的日期转化为字符串格式
6.2.14  返回一个以UTC时间表示的日期字符串
6.2.15  将日期对象转化为本地日期
6.2.16  日期间的运算
6.3 字符串对象
6.3.1  创建字符串对象
6.3.2  字符串对象的常用属性
6.3.3  字符串对象的常用方法
6.4  详解字符串对象的常用方法
6.4.1  设置字符串字体属性
6.4.2  以闪烁方式显示字符串
6.4.3  转换字符串的大小写
6.4.4  连接字符串
6.4.5  比较两个字符串的大小
6.4.6  分割字符串
6.4.7  从字符串中提取字符串
6.5  实战演练1——制作网页随机验证码
6.6  实战演练2——制作动态时钟
6.7  疑难解惑
第7章  数值与数学对象
7.1  Number对象
7.1.1  创建Number对象
7.1.2  Number对象的属性
7.1.3  Number对象的方法
7.2  详解Number对象常用的方法
7.2.1  把Number对象转换为字符串
7.2.2  把Number对象转换为本地格式字符串
7.2.3  四舍五入时指定小数位数
7.2.4  返回以指数记数法表示的数字
7.2.5  以指数记数法指定小数位
7.3  Math对象
7.3.1  创建Math对象
7.3.2  Math对象的属性
7.3.3  Math对象的方法
7.4  详解Math对象常用的方法
7.4.1  返回数的绝对值
7.4.2  返回数的正弦值、正切值和余弦值
7.4.3  返回数的反正弦值、正切值和余弦值
7.4.4  返回两个或多个参数中的最大值或最小值
7.4.5  计算指定数值的平方根
7.4.6  数值的幂运算
7.4.7  计算指定数值的对数
7.4.8  取整运算
7.4.9  生成0~1之间的随机数
7.4.10  根据指定的坐标返回一个弧度值
7.4.11  返回大于或等于指定参数的最小整数
7.4.12  返回小于或等于指定参数的最大整数
7.4.13  返回以e为基数的幂
7.5  实战演练——使用Math对象设计程序
7.6  疑难解惑
第8章  文档对象模型与事件驱动
8.1  文档对象模型
8.1.1  认识文档对象模型
8.1.2  文档对象的产生过程
8.2  访问节点
8.2.1  节点的基本概念
8.2.2  节点的基本操作
8.3  文档对象模型的属性和方法
8.4  事件处理
8.4.1  常见的事件驱动
8.4.2  JavaScript的常用事件
8.4.3  JavaScript处理事件的方式
8.4.4  使用 Event对象
8.5  实战演练1——通过事件控制文本框的背景颜色
8.6  实战演练2——在DOM模型中获得对象
8.7  实战演练3——超链接的事件驱动
8.8  疑难解惑
第9章  处理窗口和文档对象
9.1  窗口（window）对象
9.1.1  窗口（window）简介
9.1.2  window对象的属性
9.1.3  对话框
9.1.4  窗口操作
9.2  文档（document）对象
9.2.1  文档的属性
9.2.2  document对象的方法
9.2.3  文档中的表单和图片
9.2.4  文档中的超链接
9.3  实战演练1——综合使用各种对话框
9.4  实战演练2——设置弹出的窗口
9.5  疑难解惑
第10章  层叠样式表
10.1  CSS介绍
10.1.1  CSS功能
10.1.2  CSS发展历史
10.1.3  浏览器与CSS
10.2  编辑和浏览CSS
10.2.1  CSS基础语法
10.2.2  手工编写CSS
10.2.3  用Dreamweaver编写CSS
10.3  在HTML中使用CSS的方法
10.3.1  行内样式
10.3.2  内嵌样式
10.3.3  链接样式
10.3.4  导入样式
10.3.5  优先级问题
10.4  CSS选择器
10.4.1  标签选择器
10.4.2  类选择器
10.4.3  ID选择器
10.4.4  全局选择器
10.4.5  组合选择器
10.4.6  继承选择器
10.4.7  伪类
10.4.8  属性选择器
10.4.9  结构伪类选择器
10.4.10  UI元素状态伪类选择器
10.5  选择器声明
10.5.1  集体声明
10.5.2  多重嵌套声明
10.6  实战演练1——制作五彩标题
10.7  实战演练2——制作新闻菜单
10.8  疑难解惑
第11章  表单和表单元素
11.1  表单概述	301
11.2  表单基本元素的使用
11.2.1  单行文本输入框（text）
11.2.2  多行文本输入框（textarea）
11.2.3  密码域（password）
11.2.4  单选按钮（radio）
11.2.5  复选框（checkbox）
11.2.6  下拉选择框（select）
11.2.7  普通按钮（button）
11.2.8  提交按钮（submit）
11.2.9  重置按钮（reset）
11.3  表单高级元素的使用
11.3.1  url属性	310
11.3.2  email属性
11.3.3  date和time属性
11.3.4  number属性
11.3.5  range属性
11.3.6  required属性
11.4  表单（Form）对象在JavaScript中的应用
11.4.1  HTML表单基础
11.4.2  编辑表单元素的脚本
11.4.3  用JavaScript获取网页内容实现数据验证
11.5  实战演练1——创建用户反馈表单
11.6  实战演练2——处理表单元素
11.7  疑难解惑
第12章  JavaScript控制样式表
12.1  DHTML简介
12.2  前台动态网页效果
12.2.1  动态内容
12.2.2  动态样式
12.2.3  动态定位
12.2.4  显示与隐藏
12.3  实战演练1——控制表单背景色和文字提示
12.4  实战演练2——实现即时验证效果
12.5  疑难解惑
第13章  CSS和JavaScript搭配的应用案例
13.1  实战演练1——打字效果的文字
13.2  实战演练2——文字升降特效
13.3  实战演练3——跑马灯效果
13.4  实战演练4——闪烁图片
13.5  实战演练5——左右移动的图片
13.6  实战演练6——向上滚动菜单
13.7  实战演练7——跟随鼠标移动图片
13.8  实战演练8——树型菜单
13.9  实战演练9——时钟特效
13.10  实战演练10——颜色选择器
13.11  疑难解惑
第14章  程序调试和错误处理
14.1  常见的错误和异常
14.2  处理异常的方法
14.2.1  用onerror事件处理异常
14.2.2  用try…catch…finally语句处理异常
14.2.3  使用throw语句抛出异常
14.3  使用调试器
14.3.1  IE浏览器内建的错误报告
14.3.2  用Firefox错误控制台调试
14.4  JavaScript语言调试技巧
14.4.1  用alert()语句进行调试
14.4.2  用write()语句进行调试
14.5  疑难解惑
第15章  JavaScript 中的XML编程
15.1  XML语法基础
15.1.1  XML的基本应用
15.1.2  XML文档组成和声明
15.1.3  XML元素介绍
15.2  用CSS修饰XML文件
15.2.1  在XML中使用CSS
15.2.2  设置字型属性
15.2.3  设置色彩属性
15.2.4  设置边框属性
15.2.5  设置文本属性
15.3  XML编程基础
15.3.1  XPath简介
15.3.2  XSLT简介
15.4  浏览器中的XML DOM
15.4.1  IE中的XML DOM
15.4.2  Firefox中的XML DOM
15.5  浏览器中的XPath
15.5.1  IE中的XPath
15.5.2  Firefox中的XPath
15.6  浏览器中的XSLT
15.6.1  IE中的XSLT
15.6.2  Firefox中的XSLT
15.7  疑难解惑
第16章  AJAX技术
16.1  AJAX概述
16.1.1  什么是AJAX
16.1.2  AJAX的关键元素
16.1.3  CSS在AJAX应用中的地位
16.2  AJAX快速入门
16.2.1  全面剖析XMLHttpRequest对象
16.2.2  发出AJAX请求
16.2.3  处理服务器响应
16.3  实战演练1——制作自由拖动的网页
16.4  实战演练2——制作加载条
16.5  疑难解惑
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript从零开始学：视频教学版
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入React技术栈
第1章 初入React世界1
1.1 React简介1
1.1.1 专注视图层1
1.1.2 Virtual DOM1
1.1.3 函数式编程2
1.2 JSX语法3
1.2.1 JSX的由来3
1.2.2 JSX基本语法7
1.3 React组件11
1.3.1 组件的演变11
1.3.2 React组件的构建18
1.4 React数据流21
1.4.1 state21
1.4.2 props23
1.5 React生命周期29
1.5.1 挂载或卸载过程29
1.5.2 数据更新过程30
1.5.3 整体流程33
1.6 React与DOM34
1.6.1 ReactDOM35
1.6.2 ReactDOM的不稳定方法36
1.6.3 refs38
1.6.4 React之外的DOM操作40
1.7 组件化实例：Tabs组件41
1.8 小结47
第2章 漫淡React48
2.1 事件系统48
2.1.1 合成事件的绑定方式48
2.1.2 合成事件的实现机制49
2.1.3 在React中使用原生事件51
2.1.4 合成事件与原生事件混用51
2.1.5 对比React合成事件与JavaScript原生事件54
2.2 表单55
2.2.1 应用表单组件55
2.2.2 受控组件60
2.2.3 非受控组件61
2.2.4 对比受控组件和非受控组件62
2.2.5 表单组件的几个重要属性63
2.3 样式处理64
2.3.1 基本样式设置64
2.3.2 CSS Modules66
2.4 组件间通信74
2.4.1 父组件向子组件通信74
2.4.2 子组件向父组件通信75
2.4.3 跨级组件通信77
2.4.4 没有嵌套关系的组件通信79
2.5 组件间抽象81
2.5.1 mixin81
2.5.2 高阶组件86
2.5.3 组合式组件开发实践93
2.6 组件性能优化97
2.6.1 纯函数97
2.6.2 PureRender100
2.6.3 Immutable103
2.6.4 key109
2.6.5 react—addons—perf110
2.7 动画111
2.7.1 CSS动画与JavaScript动画111
2.7.2 玩转ReactTransition113
2.7.3 缓动函数116
2.8 自动化测试121
2.8.1 Jest121
2.8.2 Enzyme124
2.8.3 自动化测试125
2.9 组件化实例：优化Tabs组件125
2.10 小结133
第3章 解读React源码134
3.1 初探React源码134
3.2 Virtual DOM模型137
3.2.1 创建React元素138
3.2.2 初始化组件入口140
3.2.3 文本组件141
3.2.4 DOM标签组件144
3.2.5 自定义组件150
3.3 生命周期的管理艺术151
3.3.1 初探React生命周期152
3.3.2 详解React生命周期152
3.3.3 无状态组件163
3.4 解密setState机制164
3.4.1 setState异步更新164
3.4.2 setState循环调用风险165
3.4.3 setState调用栈166
3.4.4 初识事务168
3.4.5 解密setState170
3.5 diff算法172
3.5.1 传统diff算法172
3.5.2 详解diff172
3.6 ReactPatch方法181
3.7 小结183
第4章 认识Flux架构模式184
4.1 React独立架构184
4.2 MV*与Flux190
4.2.1 MVC／MVVM190
4.2.2 Flux的解决方案193
4.3 Flux基本概念194
4.4 Flux应用实例198
4.4.1 初始化目录结构198
4.4.2 设计store198
4.4.3 设计actionCreator200
4.4.4 构建controller—view202
4.4.5 重构view203
4.4.6 添加单元测试205
4.5 解读Flux206
4.5.1 Flux核心思想206
4.5.2 Flux的不足207
4.6 小结207
第5章 深入Redux应用架构208
5.1 Redux简介208
5.1.1 Redux是什么208
5.1.2 Redux三大原则209
5.1.3 Redux核心API210
5.1.4 与React绑定211
5.1.5 增强Flux的功能212
5.2 Reduxmiddleware212
5.2.1 middleware的由来212
5.2.2 理解middleware机制213
5.3 Redux异步流217
5.3.1 使用middleware简化异步请求217
5.3.2 使用middleware处理复杂异步流221
5.4 Redux与路由224
5.4.1 React Router225
5.4.2 React Router Redux227
5.5 Redux与组件229
5.5.1 容器型组件229
5.5.2 展示型组件229
5.5.3 Redux中的组件230
5.6 Redux应用实例231
5.6.1 初始化Redux项目231
5.6.2 划分目录结构232
5.6.3 设计路由234
5.6.4 让应用跑起来235
5.6.5 优化构建脚本239
5.6.6 添加布局文件239
5.6.7 准备首页的数据242
5.6.8 连接Redux245
5.6.9 引入Redux Devtools250
5.6.10 利用middleware实现Ajax
请求发送251
5.6.11 请求本地的数据252
5.6.12 页面之间的跳转253
5.6.13 优化与改进256
5.6.14 添加单元测试257
5.7 小结258
第6章 Redux高阶运用259
6.1 高阶reducer259
6.1.1 reducer的复用259
6.1.2 reducer的增强261
6.2 Redux与表单262
6.2.1 使用redux—form—utils减少创建表单的冗余代码263
6.2.2 使用redux—form完成表单的异步验证265
6.2.3 使用高阶reducer为现有模块引入表单功能267
6.3 ReduxCRUD实战268
6.3.1 准备工作268
6.3.2 使用Table组件完成“查”功能269
6.3.3 使用Modal组件完成“增”与“改”274
6.3.4 巧用Modal实现数据的删除确认277
6.3.5 善用promise玩转Redux异步事件流278
6.4 Redux性能优化279
6.4.1 Reselect280
6.4.2 Immutable Redux282
6.4.3 Reducer性能优化282
6.5 解读Redux284
6.5.1 参数归一化285
6.5.2 初始状态及getState286
6.5.3 subscribe286
6.5.4 dispatch287
6.5.5 replaceReducer288
6.6 解读react—redux288
6.6.1 Provider288
6.6.2 connect290
6.6.3 代码热替换293
6.7 小结294
第7章 React服务端渲染295
7.1 React与服务端模板295
7.1.1 什么是服务端渲染295
7.1.2 react—view296
7.1.3 react—view源码解读296
7.2 React服务端渲染299
7.2.1 玩转Node.js300
7.2.2 React—Router和Koa—Router统一303
7.2.3 同构数据处理的探讨306
7.3 小结307
第8章 玩转React可视化308
8.1 React结合Canvas和SVG308
8.1.1 Canvas与SVG308
8.1.2 在React中的Canvas310
8.1.3 React中的SVG311
8.2 React与可视化组件316
8.2.1 包装已有的可视化库316
8.2.2 使用D3绘制UI部分317
8.2.3 使用React绘制UI部分319
8.3 Recharts组件化的原理322
8.3.1 声明式的标签323
8.3.2 贴近原生的配置项325
8.3.3 接口式的API326
8.4 小结328
附录A 开发环境329
附录B 编码规范345
附录C Koamiddleware349
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入React技术栈
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>动态网页全接触
第一章　DHTML概述　1
1

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>动态网页全接触
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5权威指南
第一部分　开篇
第1章　HTML5背景知识　　1
1.1 　HTML的历史　　2
1.1.1 　JavaScript出场　　2
1.1.2 　浏览器战争的结束　　3
1.1.3 　插件称雄　　3
1.1.4 　语义HTML浮出水面　　3
1.1.5 　发展态势：HTML标准滞后于其使用　　4
1.2 　HTML5简介　　4
1.2.1 　新标准　　4
1.2.2 　引入原生多媒体支持　　5
1.2.3 　引入可编程内容　　5
1.2.4 　引入语义Web　　6
1.3 　HTML5现况　　6
1.3.1 　浏览器对HTML5的支持情况　　6
1.3.2 　网站对HTML5的支持情况　　6
1.4 　本书结构　　6
1.5 　HTML5的更多信息　　7
1.6 　小结　　7
第2章　准备工作　　8
2.1 　挑选浏览器　　8
2.2 　挑选HTML编辑器　　9
2.3 　挑选Web服务器　　9
2.4 　获取Node.js　　9
2.5 　获取示例代码　　10
2.6 　小结　　10
第3章　初探HTML　　11
3.1 　使用元素　　12
3.1.1 　了解本章用到的元素　　13
3.1.2 　使用空元素　　14
3.1.3 　使用自闭合标签　　14
3.1.4 　使用虚元素　　14
3.2 　使用元素属性　　16
3.2.1 　一个元素应用多个属性　　16
3.2.2 　使用布尔属性　　16
3.2.3 　使用自定义属性　　17
3.3 　创建HTML文档　　17
3.3.1 　外层结构　　18
3.3.2 　元数据　　19
3.3.3 　内容　　19
3.3.4 　父元素、子元素、后代元素和兄弟元素　　20
3.3.5 　了解元素类型　　20
3.4 　使用HTML实体　　21
3.5 　HTML5全局属性　　21
3.5.1 　accesskey属性　　21
3.5.2 　class属性　　22
3.5.3 　contenteditable属性　　25
3.5.4 　contextmenu属性　　25
3.5.5 　dir属性　　26
3.5.6 　draggable属性　　26
3.5.7 　dropzone属性　　26
3.5.8 　hidden属性　　26
3.5.9 　id属性　　28
3.5.10 　lang属性　　29
3.5.11 　spellcheck属性　　29
3.5.12 　style属性　　30
3.5.13 　tabindex属性　　30
3.5.14 　title属性　　31
3.6 　有用的HTML工具　　32
3.7 　小结　　32
第4章　初探CSS　　33
4.1 　定义和应用样式　　33
4.1.1 　了解本章所用的CSS属性　　34
4.1.2 　使用元素内嵌样式　　34
4.1.3 　使用文档内嵌样式　　35
4.1.4 　使用外部样式表　　37
4.2 　样式的层叠和继承　　40
4.2.1 　浏览器样式　　40
4.2.2 　用户样式　　41
4.2.3 　样式如何层叠　　42
4.2.4 　用重要样式调整层叠次序　　42
4.2.5 　根据具体程度和定义次序解决同级样式冲突　　43
4.2.6 　继承　　46
4.3 　CSS中的颜色　　48
4.4 　CSS中的长度　　49
4.4.1 　绝对长度　　50
4.4.2 　相对长度　　51
4.5 　其他CSS单位　　56
4.5.1 　使用CSS角度　　56
4.5.2 　使用CSS时间　　57
4.6 　测试CSS特性的支持情况　　57
4.7 　有用的CSS工具　　57
4.7.1 　浏览器样式报告　　57
4.7.2 　用SelectorGadget生成选择器　　58
4.7.3 　用LESS改进CSS　　59
4.7.4 　使用CSS框架　　59
4.8 　小结　　59
第5章　初探JavaScript　　60
5.1 　准备使用JavaScript　　61
5.2 　使用语句　　62
5.3 　定义和使用函数　　63
5.3.1 　定义带参数的函数　　63
5.3.2 　定义会返回结果的函数　　64
5.4 　使用变量和类型　　65
5.4.1 　使用基本类型　　66
5.4.2 　创建对象　　67
5.4.3 　使用对象　　69
5.5 　使用JavaScript运算符　　73
5.5.1 　相等和等同运算符　　73
5.5.2 　显式类型转换　　76
5.6 　使用数组　　78
5.6.1 　使用数组字面量　　79
5.6.2 　读取和修改数组内容　　80
5.6.3 　枚举数组内容　　80
5.6.4 　使用内置的数组方法　　81
5.7 　处理错误　　81
5.8 　比较undefined和null值　　83
5.8.1 　检查变量或属性是否为undefined或null　　85
5.8.2 　区分null和undefined　　85
5.9 　常用的JavaScript工具　　86
5.9.1 　使用JavaScript调试器　　86
5.9.2 　使用JavaScript库　　86
5.10 　小结　　87
第二部分　HTML元素
第6章　HTML5元素背景知识　　90
6.1 　语义与呈现分离　　90
6.2 　元素选用原则　　91
6.2.1 　少亦可为多　　91
6.2.2 　别误用元素　　91
6.2.3 　具体为佳，一以贯之　　91
6.2.4 　对用户不要想当然　　92
6.3 　元素说明体例　　92
6.4 　元素速览　　92
6.4.1 　文档和元数据元素　　92
6.4.2 　文本元素　　93
6.4.3 　对内容分组　　94
6.4.4 　划分内容　　95
6.4.5 　制表　　95
6.4.6 　创建表单　　96
6.4.7 　嵌入内容　　96
6.5 　未实现的元素　　97
6.6 　小结　　97
第7章　创建HTML文档　　98
7.1 　构筑基本的文档结构　　99
7.1.1 　DOCTYPE元素　　99
7.1.2 　html元素　　99
7.1.3 　head元素　　100
7.1.4 　body元素　　101
7.2 　用元数据元素说明文档　　102
7.2.1 　设置文档标题　　102
7.2.2 　设置相对URL的解析基准　　103
7.2.3 　用元数据说明文档　　104
7.2.4 　定义CSS样式　　108
7.2.5 　指定外部资源　　112
7.3 　使用脚本元素　　116
7.3.1 　script元素　　117
7.3.2 　noscript元素　　123
7.4 　小结　　125
第8章　标记文字　　126
8.1 　生成超链接　　127
8.1.1 　生成指向外部的超链接　　128
8.1.2 　使用相对URL　　129
8.1.3 　生成内部超链接　　129
8.1.4 　设定浏览环境　　130
8.2 　用基本的文字元素标记内容　　131
8.2.1 　表示关键词和产品名称　　131
8.2.2 　加以强调　　132
8.2.3 　表示外文词语或科技术语　　133
8.2.4 　表示不准确或校正　　134
8.2.5 　表示重要的文字　　135
8.2.6 　为文字添加下划线　　136
8.2.7 　添加小号字体内容　　137
8.2.8 　添加上标和下标　　138
8.3 　换行　　139
8.3.1 　强制换行　　139
8.3.2 　指明可以安全换行的建议位置　　141
8.4 　表示输入和输出　　142
8.5 　使用标题引用、引文、定义和缩写　　143
8.5.1 　表示缩写　　143
8.5.2 　定义术语　　144
8.5.3 　引用来自他处的内容　　145
8.5.4 　引用其他作品的标题　　146
8.6 　使用语言元素　　147
8.6.1 　ruby、rt和rp元素　　147
8.6.2 　bdo元素　　149
8.6.3 　bdi元素　　150
8.7 　其他文本元素　　152
8.7.1 　表示一段一般性的内容　　152
8.7.2 　突出显示文本　　153
8.7.3 　表示添加和删除的内容　　155
8.7.4 　表示时间和日期　　156
8.8 　小结　　157
第9章　组织内容　　158
9.1 　为什么要对内容分组　　158
9.2 　建立段落　　159
9.3 　使用div元素　　161
9.4 　使用预先编排好格式的内容　　163
9.5 　引用他处内容　　164
9.6 　添加主题分隔　　166
9.7 　将内容组织为列表　　169
9.7.1 　ol元素　　169
9.7.2 　ul元素　　171
9.7.3 　li元素　　172
9.7.4 　生成说明列表　　173
9.7.5 　生成自定义列表　　174
9.8 　使用插图　　176
9.9 　小结　　178
第10章　文档分节　　179
10.1 　添加基本的标题　　179
10.2 　隐藏子标题　　182
10.3 　生成节　　185
10.4 　添加首部和尾部　　188
10.5 　添加导航区域　　191
10.6 　使用article　　194
10.7 　生成附注栏　　198
10.8 　提供联系信息　　201
10.9 　生成详情区域　　202
10.10 　小结　　205
第11章　表格元素　　206
11.1 　生成基本的表格　　206
11.2 　添加表头单元格　　209
11.3 　为表格添加结构　　211
11.3.1 　表示表头和表格主题　　212
11.3.2 　添加表脚　　214
11.4 　制作不规则表格　　216
11.5 　把表头与单元格关联起来　　220
11.6 　为表格添加标题　　221
11.7 　处理列　　223
11.8 　设置表格边框　　228
11.9 　小结　　230
第12章　表单　　231
12.1 　制作基本表单　　232
12.1.1 　定义表单　　233
12.1.2 　查看表单数据　　234
12.2 　配置表单　　236
12.2.1 　配置表单的action属性　　236
12.2.2 　配置HTTP方法属性　　237
12.2.3 　配置数据编码　　237
12.2.4 　控制表单的自动完成功能　　239
12.2.5 　指定表单反馈信息的目标显示位置　　240
12.2.6 　设置表单名称　　242
12.3 　在表单中添加说明标签　　242
12.4 　自动聚焦到某个input元素　　244
12.5 　禁用单个input元素　　245
12.6 　对表单元素编组　　246
12.6.1 　为fieldset元素添加说明标签　　248
12.6.2 　用fieldset禁用整组input元素　　249
12.7 　使用button元素　　250
12.7.1 　用button元素提交表单　　251
12.7.2 　用button元素重置表单　　252
12.7.3 　把button作为一般元素使用　　253
12.8 　使用表单外的元素　　254
12.9 　小结　　254
第13章　定制input元素　　255
13.1 　用input元素输入文字　　256
13.1.1 　设定元素大小　　256
13.1.2 　设置初始值和占位式提示　　258
13.1.3 　使用数据列表　　259
13.1.4 　生成只读或被禁用的文本框　　262
13.1.5 　指定文字方向数据的名称　　263
13.2 　用input元素输入密码　　263
13.3 　用input元素生成按钮　　266
13.4 　用input元素为输入数据把关　　267
13.4.1 　用input元素获取数值　　268
13.4.2 　用input元素获取指定范围内的数值　　270
13.4.3 　用input元素获取布尔型输入　　271
13.4.4 　用input元素生成一组固定选项　　273
13.4.5 　用input元素获取有规定格式的字符串　　275
13.4.6 　用input元素获取时间和日期　　277
13.4.7 　用input元素获取颜色值　　279
13.5 　用input元素获取搜索用词　　281
13.6 　用input元素生成隐藏的数据项　　282
13.7 　用input元素生成图像按钮和分区响应图　　284
13.8 　用input元素上传文件　　286
13.9 　小结　　288
第14章　其他表单元素及输入验证　　289
14.1 　使用其他表单元素　　289
14.1.1 　生成选项列表　　289
14.1.2 　输入多行文字　　294
14.1.3 　表示计算结果　　296
14.1.4 　生成公开/私有密钥对　　297
14.2 　使用输入验证　　298
14.2.1 　确保用户提供了一个值　　299
14.2.2 　确保输入值位于某个范围内　　300
14.2.3 　确保输入值与指定模式匹配　　301
14.2.4 　确保输入值是电子邮箱地址或URL　　303
14.3 　禁用输入验证　　304
14.4 　小结　　305
第15章　嵌入内容　　306
15.1 　嵌入图像　　306
15.1.1 　在超链接里嵌入图像　　308
15.1.2 　创建客户端分区响应图　　310
15.2 　嵌入另一张HTML文档　　313
15.3 　通过插件嵌入内容　　315
15.3.1 　使用embed元素　　315
15.3.2 　使用object和param元素　　317
15.4 　object元素的其他用途　　319
15.4.1 　使用object元素嵌入图像　　319
15.4.2 　使用object元素创建分区响应图　　320
15.4.3 　将object元素作为浏览上下文环境　　320
15.5 　嵌入数字表现形式　　321
15.5.1 　显示进度　　321
15.5.2 　显示范围里的值　　322
15.6 　其他嵌入元素　　324
15.6.1 　嵌入音频和视频　　324
15.6.2 　嵌入图形　　324
15.7 　小结　　324
第三部分　CSS
第16章　理解CSS　　326
16.1 　CSS标准化　　326
16.2 　盒模型　　327
16.3 　选择器简明参考　　328
16.4 　属性简明参考　　329
16.4.1 　边框和背景属性　　329
16.4.2 　盒模型属性　　331
16.4.3 　布局属性　　332
16.4.4 　文本属性　　332
16.4.5 　过渡、动画和变换属性　　333
16.4.6 　其他属性　　334
16.5 　小结　　334
第17章　使用CSS选择器（第Ⅰ部分）　　335
17.1 　使用CSS基本选择器　　335
17.1.1 　选择所有元素　　336
17.1.2 　根据类型选择元素　　337
17.1.3 　根据类选择元素　　338
17.1.4 　根据ID选择元素　　340
17.1.5 　根据属性选择元素　　341
17.2 　复合选择器　　344
17.2.1 　并集选择器　　344
17.2.2 　后代选择器　　345
17.2.3 　选择子元素　　347
17.2.4 　选择兄弟元素　　349
17.3 　使用伪元素选择器　　351
17.3.1 　使用::first-line选择器　　351
17.3.2 　使用::first-letter选择器　　352
17.3.3 　使用:before和:after选择器　　353
17.3.4 　使用CSS计数器　　354
17.4 　小结　　356
第18章　使用CSS选择器（第Ⅱ部分）　　357
18.1 　使用结构性伪类选择器　　357
18.1.1 　使用根元素选择器　　358
18.1.2 　使用子元素选择器　　359
18.1.3 　使用:nth-child选择器　　363
18.2 　使用UI伪类选择器　　364
18.2.1 　选择启用或禁用元素　　364
18.2.2 　选择已勾选的元素　　365
18.2.3 　选择默认元素　　366
18.2.4 　选择有效和无效的input元素　　367
18.2.5 　选择限定范围的input元素　　369
18.2.6 　选择必需和可选的input元素　　370
18.3 　使用动态伪类选择器　　371
18.3.1 　使用:link和:visited选择器　　371
18.3.2 　使用:hover选择器　　372
18.3.3 　使用:active选择器　　373
18.3.4 　使用:focus选择器　　374
18.4 　其他伪类选择器　　375
18.4.1 　使用否定选择器　　376
18.4.2 　使用:empty选择器　　376
18.4.3 　使用:lang选择器　　377
18.4.4 　使用:target选择器　　377
18.5 　小结　　379
第19章　使用边框和背景　　380
19.1 　应用边框样式　　380
19.1.1 　定义边框宽度　　381
19.1.2 　定义边框样式　　382
19.1.3 　为一条边应用边框样式　　383
19.1.4 　使用border简写属性　　384
19.1.5 　创建圆角边框　　385
19.1.6 　将图像用做边框　　388
19.2 　设置元素的背景　　392
19.2.1 　设置背景颜色和图像　　392
19.2.2 　设置背景图像的尺寸　　394
19.2.3 　设置背景图像位置　　395
19.2.4 　设置元素的背景附着方式　　396
19.2.5 　设置背景图像的开始位置和裁剪样式　　397
19.2.6 　使用background简写属性　　399
19.3 　创建盒子阴影　　400
19.4 　应用轮廓　　403
19.5 　小结　　405
第20章　使用盒模型　　406
20.1 　为元素应用内边距　　407
20.2 　为元素应用外边距　　409
20.3 　控制元素的尺寸　　410
20.3.1 　设置一定尺寸的盒子　　412
20.3.2 　设置最小和最大尺寸　　413
20.4 　处理溢出内容　　414
20.5 　控制元素的可见性　　417
20.6 　设置元素的盒类型　　419
20.6.1 　认识块级元素　　420
20.6.2 　认识行内元素　　421
20.6.3 　认识行内?块级元素　　422
20.6.4 　认识插入元素　　423
20.6.5 　隐藏元素　　426
20.7 　创建浮动盒　　427
20.8 　小结　　433
第21章　创建布局　　434
21.1 　定位内容　　434
21.1.1 　设置定位类型　　435
21.1.2 　设置元素的层叠顺序　　437
21.2 　创建多列布局　　439
21.3 　创建弹性盒布局　　442
21.3.1 　创建简单的弹性盒　　444
21.3.2 　伸缩多个元素　　446
21.3.3 　处理垂直空间　　447
21.3.4 　处理最大尺寸　　448
21.4 　创建表格布局　　450
21.5 　小结　　453
第22章　设置文本样式　　454
22.1 　应用基本文本样式　　454
22.1.1 　对齐文本　　455
22.1.2 　处理空白　　457
22.1.3 　指定文本方向　　460
22.1.4 　指定单词、字母、行之间的间距　　461
22.1.5 　控制断词　　462
22.1.6 　首行缩进　　464
22.2 　文本装饰与大小写转换　　465
22.3 　创建文本阴影　　467
22.4 　使用字体　　468
22.4.1 　选择字体　　469
22.4.2 　设置字体大小　　470
22.4.3 　设置字体样式和粗细　　472
22.5 　使用Web字体　　473
22.6 　小结　　475
第23章　过渡、动画和变换　　476
23.1 　使用过渡　　477
23.1.1 　创建反向过渡　　480
23.1.2 　选择中间值的计算方式　　481
23.2 　使用动画　　483
23.2.1 　使用关键帧　　486
23.2.2 　设置重复方向　　488
23.2.3 　理解结束状态　　490
23.2.4 　初始布局时应用动画　　491
23.2.5 　重用关键帧　　492
23.2.6 　为多个元素应用多个动画　　493
23.2.7 　停止和启动动画　　495
23.3 　使用变换　　497
23.3.1 　应用变换　　497
23.3.2 　指定元素变换的起点　　498
23.3.3 　将变换作为动画和过渡处理　　500
23.4 　小结　　501
第24章　其他CSS属性和特性　　502
24.1 　设置元素的颜色和透明度　　502
24.1.1 　设置前景色　　502
24.1.2 　设置元素的透明度　　504
24.2 　设置表格样式　　505
24.2.1 　合并表格边框　　505
24.2.2 　配置独立边框　　507
24.2.3 　处理空单元格　　508
24.2.4 　设置标题的位置　　509
24.2.5 　指定表格布局　　511
24.3 　设置列表样式　　512
24.3.1 　设置列表标记类型　　513
24.3.2 　使用图像作为列表标记　　514
24.3.3 　设置列表标记的位置　　515
24.4 　设置光标样式　　517
24.5 　小结　　518
第四部分　使用DOM
第25章　理解DOM　　520
25.1 　理解文档对象模型　　520
25.2 　理解DOM Level和兼容性　　522
25.3 　DOM快速查询　　524
25.3.1 　Document的成员　　524
25.3.2 　Window的成员　　525
25.3.3 　HTMLElement的成员　　527
25.3.4 　DOM里的CSS属性　　529
25.3.5 　DOM中的事件　　531
25.4 　小结　　532
第26章　使用Document对象　　533
26.1 　使用Document元数据　　536
26.1.1 　获取文档信息　　536
26.1.2 　使用Location对象　　537
26.1.3 　读取和写入cookie　　541
26.1.4 　理解就绪状态　　542
26.1.5 　获取DOM的实现情况　　543
26.2 　获取HTML元素对象　　544
26.2.1 　使用属性获取元素对象　　545
26.2.2 　使用数组标记获取已命名元素　　546
26.2.3 　搜索元素　　548
26.2.4 　合并进行链式搜索　　550
26.3 　在DOM树里导航　　552
26.4 　小结　　554
第27章　使用Window对象　　555
27.1 　获取Window对象　　555
27.2 　获取窗口信息　　556
27.3 　与窗口进行交互　　558
27.4 　对用户进行提示　　559
27.5 　获取基本信息　　561
27.6 　使用浏览器历史　　561
27.6.1 　在浏览历史中导航　　562
27.6.2 　在浏览历史里插入条目　　564
27.6.3 　为不同的文档添加条目　　566
27.6.4 　在浏览历史中保存复杂状态　　567
27.6.5 　替换浏览历史中的条目　　570
27.7 　使用跨文档消息传递　　570
27.8 　使用计时器　　574
27.9 　小结　　576
第28章　使用DOM元素　　577
28.1 　使用元素对象　　577
28.1.1 　使用类　　579
28.1.2 　使用元素属性　　582
28.2 　使用Text对象　　586
28.3 　修改模型　　588
28.3.1 　创建和删除元素　　589
28.3.2 　复制元素　　591
28.3.3 　移动元素　　592
28.3.4 　比较元素对象　　593
28.3.5 　使用HTML片段　　595
28.3.6 　向文本块插入元素　　600
28.4 　小结　　601
第29章　为DOM元素设置样式　　602
29.1 　使用样式表　　602
29.1.1 　获得样式表的基本信息　　603
29.1.2 　使用媒介限制　　605
29.1.3 　禁用样式表　　607
29.1.4 　CSSRuleList对象的成员　　608
29.2 　使用元素样式　　611
29.3 　使用CSSStyleDeclaration对象　　613
29.3.1 　使用便捷属性　　613
29.3.2 　使用常规属性　　616
29.3.3 　使用细粒度的CSS DOM对象　　620
29.4 　使用计算样式　　623
29.5 　小结　　625
第30章　使用事件　　626
30.1 　使用简单事件处理器　　627
30.1.1 　实现简单的内联事件处理器　　627
30.1.2 　实现一个简单的事件处理函数　　629
30.2 　使用DOM和事件对象　　630
30.2.1 　按类型区分事件　　633
30.2.2 　理解事件流　　634
30.2.3 　使用可撤销事件　　641
30.3 　使用HTML事件　　642
30.3.1 　文档和窗口事件　　642
30.3.2 　使用鼠标事件　　643
30.3.3 　使用键盘焦点事件　　645
30.3.4 　使用键盘事件　　647
30.3.5 　使用表单事件　　649
30.4 　小结　　649
第31章　使用元素专属对象　　650
31.1 　文档和元数据对象　　650
31.1.1 　base元素　　650
31.1.2 　body元素　　650
31.1.3 　link元素　　651
31.1.4 　meta元素　　651
31.1.5 　script元素　　651
31.1.6 　style元素　　652
31.1.7 　title元素　　652
31.1.8 　其他文档和元数据元素　　652
31.2 　文本元素　　652
31.2.1 　a元素　　652
31.2.2 　del和ins元素　　653
31.2.3 　q元素　　653
31.2.4 　time元素　　653
31.2.5 　其他文本元素　　654
31.3 　分组元素　　654
31.3.1 　blockquote元素　　654
31.3.2 　li元素　　654
31.3.3 　ol元素　　654
31.3.4 　其他分组元素　　655
31.4 　区块元素　　655
31.4.1 　details元素　　655
31.4.2 　其他区块元素　　655
31.5 　表格元素　　655
31.5.1 　col和colgroup元素　　655
31.5.2 　table元素　　656
31.5.3 　thead、tbody和tfoot元素　　656
31.5.4 　th元素　　657
31.5.5 　tr元素　　657
31.5.6 　其他表格元素　　657
31.6 　表单元素　　657
31.6.1 　button元素　　657
31.6.2 　datalist元素　　658
31.6.3 　fieldset元素　　658
31.6.4 　form元素　　658
31.6.5 　input元素　　659
31.6.6 　label元素　　660
31.6.7 　legend元素　　661
31.6.8 　optgroup元素　　661
31.6.9 　option元素　　661
31.6.10 　output元素　　661
31.6.11 　select元素　　662
31.6.12 　textarea元素　　663
31.7 　内容元素　　663
31.7.1 　area元素　　664
31.7.2 　embed元素　　664
31.7.3 　iframe元素　　664
31.7.4 　img元素　　665
31.7.5 　map元素　　665
31.7.6 　meter元素　　665
31.7.7 　object元素　　666
31.7.8 　param元素　　666
31.7.9 　progress元素　　667
31.8 　小结　　667
第五部分　高级功能
第32章　使用Ajax（第Ⅰ部分）　　670
32.1 　Ajax起步　　671
32.1.1 　处理响应　　674
32.1.2 　主流中的异类：应对Opera　　675
32.2 　使用Ajax事件　　677
32.3 　处理错误　　679
32.3.1 　处理设置错误　　681
32.3.2 　处理请求错误　　682
32.3.3 　处理应用程序错误　　682
32.4 　获取和设置标头　　683
32.4.1 　覆盖请求的HTTP方法　　683
32.4.2 　禁用内容缓存　　685
32.4.3 　读取响应标头　　685
32.5 　生成跨源Ajax请求　　687
32.5.1 　使用Origin请求标头　　690
32.5.2 　高级CORS功能　　691
32.6 　中止请求　　691
32.7 　小结　　693
第33章　使用Ajax（第Ⅱ部分）　　694
33.1 　准备向服务器发送数据　　694
33.1.1 　定义服务器　　695
33.1.2 　理解问题所在　　697
33.2 　发送表单数据　　698
33.3 　使用FormData对象发送表单数据　　701
33.3.1 　创建FormData对象　　701
33.3.2 　修改FormData对象　　702
33.4 　发送JSON数据　　703
33.5 　发送文件　　705
33.6 　追踪上传进度　　707
33.7 　请求并处理不同内容类型　　709
33.7.1 　接收HTML片段　　709
33.7.2 　接收XML数据　　712
33.7.3 　接收JSON数据　　714
33.8 　小结　　715
第34章　使用多媒体　　716
34.1 　使用video元素　　717
34.1.1 　预先加载视频　　718
34.1.2 　显示占位图像　　720
34.1.3 　设置视频尺寸　　720
34.1.4 　指定视频来源（和格式）　　721
34.1.5 　track元素　　724
34.2 　使用audio元素　　724
34.3 　通过DOM操作嵌入式媒体　　726
34.3.1 　获得媒体信息　　726
34.3.2 　评估回放能力　　728
34.3.3 　控制媒体回放　　730
34.4 　小结　　733
第35章　使用canvas元素（第Ⅰ部分）　　734
35.1 　开始使用canvas元素　　735
35.2 　获取画布的上下文　　736
35.3 　绘制矩形　　737
35.4 　设置画布绘制状态　　739
35.4.1 　设置线条连接样式　　741
35.4.2 　设置填充和笔触样式　　742
35.4.3 　使用渐变　　743
35.4.4 　使用径向渐变　　748
35.4.5 　使用图案　　751
35.5 　保存和恢复绘制状态　　753
35.6 　绘制图像　　755
35.6.1 　使用视频图像　　756
35.6.2 　使用画布图像　　759
35.7 　小结　　761
第36章　使用canvas元素（第Ⅱ部分）　　762
36.1 　用路径绘图　　762
36.1.1 　用线条绘制路径　　763
36.1.2 　绘制矩形　　766
36.2 　绘制圆弧　　768
36.2.1 　使用arcTo方法　　768
36.2.2 　使用arc方法　　772
36.3 　绘制贝塞尔曲线　　773
36.3.1 　绘制三次贝塞尔曲线　　773
36.3.2 　绘制二次贝塞尔曲线　　775
36.4 　创建剪辑区域　　777
36.5 　绘制文本　　778
36.6 　使用特效和变换　　780
36.6.1 　使用阴影　　780
36.6.2 　使用透明度　　781
36.6.3 　使用合成　　782
36.6.4 　使用变换　　784
36.7 　小结　　786
第37章　使用拖放　　787
37.1 　创建来源项目　　787
37.2 　创建释放区　　791
37.3 　使用DataTransfer对象　　794
37.3.1 　根据数据过滤被拖动项目　　796
37.3.2 　拖放文件　　797
37.4 　小结　　801
第38章　使用地理定位　　802
38.1 　使用地理定位　　802
38.2 　处理地理定位错误　　805
38.3 　指定地理定位选项　　807
38.4 　监控位置　　809
38.5 　小结　　810
第39章　使用Web存储　　811
39.1 　使用本地存储　　811
39.2 　使用会话存储　　815
39.3 　小结　　819
第40章　创建离线Web应用程序　　820
40.1 　定义问题　　820
40.2 　定义清单　　822
40.3 　检测浏览器状态　　827
40.4 　使用离线缓存　　828
40.4.1 　制作更新　　832
40.4.2 　获取更新　　832
40.4.3 　应用更新　　833
40.5 　小结　　834

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5权威指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>WebGL编程指南
第1 章 WebGL 概述...................... 1
WebGL 的优势 ...........................................3
使用文本编辑器开发三维应用 ...............3
轻松发布三维图形程序 .................................4
充分利用浏览器的功能 ...........................5
学习和使用WebGL 很简单 ...................5
WebGL 的起源 .................................................5
WebGL 程序的结构 ...................................6
总结 .....................................7
第2 章 WebGL 入门.................... 9
Canvas 是什么？ ........................................10
使用<canvas> 标签 ................................11
DrawRectangle.js .............................................13
最短的WebGL 程序：清空绘图区 ....................16
HTML 文件（HelloCanvas.html）.............................16
JavaScript 程序（HelloCanvas.js） ............................17
用示例程序做实验 ..............................................22
绘制一个点（版本1） ............................................22
HelloPoint1.html ..............................................24
HelloPoint1.js ....................................................24
着色器是什么？ ...........................................25
使用着色器的WebGL 程序的结构 .................................27
初始化着色器 ...........................................29
顶点着色器 ......................................................31
片元着色器 ...........................................33
绘制操作 .............................................34
WebGL 坐标系统 ....................................35
用示例程序做实验 ................................37
绘制一个点（版本2） ..............................38
使用attribute 变量..................................38
示例程序（HelloPoint2.js） .........................................39
获取attribute 变量的存储位置.......................41
向attribute 变量赋值.............................................42
gl.vertexAttrib3f() 的同族函数 .........................44
用示例程序做实验 ...............................45
通过鼠标点击绘点 ...........................................46
示例程序（ClickedPoints.js） ...........................47
注册事件响应函数 ..................................48
响应鼠标点击事件 ............................50
用示例程序做实验 ..............................53
改变点的颜色 ............................................55
示例程序（ColoredPoints.js） ..............................56
uniform 变量 ........................................58
获取uniform 变量的存储地址 .....................59
向uniform 变量赋值 .................................60
gl.uniform4f() 的同族函数 .......................61
总结 ............................62
第3 章 绘制和变换三角形................ 63
绘制多个点 ...............................................64
示例程序（MultiPoint.js） ........................................66
使用缓冲区对象 ....................................69
创建缓冲区对象（gl.createBuffer()） ...................70
绑定缓冲区（gl.bindBuffer()） .....................................71
向缓冲区对象中写入数据（gl.bufferData()）..............72
类型化数组 ........................................74
将缓冲区对象分配给attribute 变量（gl.vertexAttribPointer()） ...............75
开启attribute 变量（gl.enableVertexAttribArray()） ................77
gl.drawArrays() 的第2 个和第3 个参数 .................78
用示例程序做实验 ........................................79
Hello Triangle ..................................80
示例程序（HelloTriangle.js） .........................80
基本图形 .................................................82
用示例程序做实验 ...........................83
Hello Rectangle（HelloQuad） ...........................84
用示例程序做实验 ...................................85
移动、旋转和缩放 ........................................86
平移 ................................................87
示例程序（TranslatedTriangle.js） ...........................88
旋转 ...........................................................91
示例程序（RotatedTriangle.js） ..................................93
变换矩阵：旋转 ........................................97
变换矩阵：平移 ...................................100
4×4 的旋转矩阵 ..................................101
示例程序（RotatedTriangle_Matrix.js） ...................102
平移：相同的策略 ................................105
变换矩阵：缩放 ...............................106
总结 ...........................................................108
第4 章 高级变换与动画基础.............................. 109
平移，然后旋转 ...........................................109
矩阵变换库：cuon-matrix.js ....................110
示例程序（RotatedTriangle_Matrix4.js） ............... 111
复合变换 .............................................113
示例程序（RotatedTranslatedTriangle.js）.....................115
用示例程序做实验 ..................................117
动画 .....................................118
动画基础 .........................................119
示例程序（RotatingTriangle.js） .......................119
反复调用绘制函数（tick()） ............................123
按照指定的旋转角度绘制三角形（draw()） .............123
请求再次被调用（requestAnimationFrame()） ............125
更新旋转角（animate()）................................126
用示例程序做实验 ............................128
总结 .....................................................130
第5 章 颜色与纹理.............. 131
将非坐标数据传入顶点着色器 ................131
示例程序（MultiAttributeSize.js） .....................133
创建多个缓冲区对象 .........................134
gl.vertexAttribPointer() 的步进和偏移参数 ...............135
示例程序（MultiAttributeSize_Interleaved.js） ...................136
修改颜色（varying 变量） .......................140
示例程序（MultiAttributeColor.js） .........................141
用示例程序做实验 .........................144
彩色三角形（ColoredTriangle.js） ............................145
几何形状的装配和光栅化 ................145
调用片元着色器 ............................149
用示例程序做实验 ..................................149
varying 变量的作用和内插过程 ..............151
在矩形表面贴上图像 ...........................................153
纹理坐标 ...................................................156
将纹理图像粘贴到几何图形上 .....................156
示例程序（TexturedQuad.js） ...............................157
设置纹理坐标（initVertexBuffers()）......................160
配置和加载纹理（initTextures()） ..................160
为WebGL 配置纹理（loadTexture()） .............164
图像Y 轴反转 .................................164
激活纹理单元（gl.activeTexture()） ..................165
绑定纹理对象（gl.bindTexture()） ..................166
配置纹理对象的参数（gl.texParameteri()） .........168
将纹理图像分配给纹理对象（gl.texImage2D()） .....171
将纹理单元传递给片元着色器（gl.uniform1i()） .........173
从顶点着色器向片元着色器传输纹理坐标 .......................174
在片元着色器中获取纹理像素颜色（texture2D()） ..................174
用示例程序做试验 ............................175
使用多幅纹理 ...............................................177
示例程序（MultiTexture.js） ............................178
总结 .......................................................183
第6 章 OpenGL ES 着色器语言（GLSL ES）.............. 185
回顾：基本着色器代码 ...............................186
GLSL ES 概述 .............................................186
你好，着色器！ ...................................................187
基础 ......................187
执行次序 .........................................187
注释 ..................................................187
数据值类型（数值和布尔值） ......................188
变量 .........................................................188
GLSL ES 是强类型语言 ........................189
基本类型 ....................................................189
赋值和类型转换 .........................190
运算符 ............................................191
矢量和矩阵 .........................................192
赋值和构造 ...............................193
访问元素 .........................................195
运算符 ............................................197
结构体 .....................................................200
赋值和构造 ...................................200
访问成员 ...............................................200
运算符 ...........................................201
数组 ..........................................................201
取样器（纹理） ........................................202
运算符优先级 ..........................................203
程序流程控制：分支和循环 .......................203
if 语句和if-else 语句 ............................203
for 语句 .......................................204
continue、break 和discard 语句 ................205
函数 ..........................................205
规范声明 ........................................207
参数限定词 ........................................207
内置函数 .................................................208
全局变量和局部变量 ..............................209
存储限定字 ...........................................209
const 变量 .....................................209
Attribute 变量 ..............................210
uniform 变量 ..................................211
varying 变量 ..................................211
精度限定字 ..............................................211
预处理指令 .............................................213
总结 ......................................................215
第7 章 进入三维世界................ 217
立方体由三角形构成 .............................217
视点和视线 ...........................................218
视点、观察目标点和上方向 ........... 219
示例程序（LookAtTriangles.js） ...........................221
LookAtTriangles.js 与RotatedTriangle_Matrix4.js ..........224
从指定视点观察旋转后的三角形 .....................225
示例程序（LookAtRotatedTriangles.js） ...................227
用示例程序做实验 .................................228
利用键盘改变视点 .............................230
示例程序（LookAtTrianglesWithKeys.js） .................230
独缺一角 ......................................232
可视范围（正射类型） .............................233
可视空间 ..................................................234
定义盒状可视空间 ................................235
示例程序（OrthoView.html） ........................236
示例程序（OrthoView.js） ...............................237
JavaScript 修改HTML 元素 ..........................239
顶点着色器的执行流程 ............................239
修改near 和far 值 .............................241
补上缺掉的角（LookAtTrianglesWithKeys_ViewVolume.js） ..........243
用示例程序做实验 ................................245
可视空间（透视投影） ....................................246
定义透视投影可视空间 .......................247
示例程序（perspectiveview.js） .........................249
投影矩阵的作用 ...................................251
共冶一炉（模型矩阵、视图矩阵和投影矩阵） .............252
示例程序（PerspectiveView_mvp.js） ........................254
用示例程序做实验 ................................257
正确处理对象的前后关系 ............................258
隐藏面消除 .....................................260
示例程序（DepthBuffer.js）..............................262
深度冲突 ................................................263
立方体 ...........................................................266
通过顶点索引绘制物体 ....................268
示例程序（HelloCube.js） ...........................268
向缓冲区中写入顶点的坐标、颜色与索引 ....................271
为立方体的每个表面指定颜色 .............274
示例程序（ColoredCube.js） ............................275
用示例程序做实验 ............................277
总结 ..............................................279
第8 章 光照......... 281
光照原理 ....................................................281
光源类型 .......................................283
反射类型 ............................................284
平行光下的漫反射 ............................286
根据光线和表面的方向计算入射角 .................287
法线：表面的朝向 .............................288
示例程序（LightedCube.js） ..........................291
环境光下的漫反射 ...................................296
示例程序（LightedCube_ambient.js） .........................298
运动物体的光照效果 .....................................299
魔法矩阵：逆转置矩阵 .....................301
示例程序（LightedTranslatedRotatedCube.js） .....................302
点光源光 ............................................304
示例程序（PointLightedCube.js） ...............305
更逼真：逐片元光照 ......................................308
示例程序（PointLightedCube_perFragment.js） ........309
总结 ............................310
第9 章 层次模型.......... 311
多个简单模型组成的复杂模型 .....................311
层次结构模型 ..................................313
单关节模型 ......................................314
示例程序（JointMode.js） ................................315
绘制层次模型（draw()） .....................319
多节点模型 ..........................................321
示例程序（MultiJointModel.js） .........................323
绘制部件（drawBox()）............................326
绘制部件（drawSegments()） .......................327
着色器和着色器程序对象：initShaders() 函数的作用 .................332
创建着色器对象（gl.createShader()） ..................333
指定着色器对象的代码（gl.shaderSource()） ................334
编译着色器（gl.compileShader()） ...............334
创建程序对象（gl.createProgram()） ..............................336
为程序对象分配着色器对象（gl.attachShader()） .............337
连接程序对象（gl.linkProgram()） ..........................337
告知WebGL 系统所使用的程序对象（gl.useProgram()） ................339
initShaders() 函数的内部流程 .....................................339
总结 ...........................................................342
第10 章 高级技术......................... 343
用鼠标控制物体旋转 .......................................343
如何实现物体旋转 ......................................344
示例程序（RotateObject.js） .......................344
选中物体 ........................................347
如何实现选中物体 .........................................347
示例程序（PickObject.js） .................................348
选中一个表面 ......................................351
示例程序（PickFace.js）...................................352
HUD（平视显示器） .................................355
如何实现HUD ...................................355
示例程序（HUD.html） ..............................356
示例程序（HUD.js）...................................357
在网页上方显示三维物体 ....................359
雾化（大气效果） ...................................359
如何实现雾化 ....................................360
示例程序（Fog.js） .....................................361
使用w 分量（Fog_w.js） ...............................363
绘制圆形的点 .................................................364
如何实现圆形的点 ......................................364
示例程序（RoundedPoint.js） ...............................366
α 混合 .............................................367
如何实现α 混合 .....................................367
示例程序（LookAtBlendedTriangles.js） .................369
混合函数 .....................................................369
半透明的三维物体（BlendedCube.js）................371
透明与不透明物体共存 .........................372
切换着色器 ............................373
如何实现切换着色器 .....................................374
示例程序（ProgramObject.js） ............................375
渲染到纹理 .......................................................379
帧缓冲区对象和渲染缓冲区对象 ....................380
如何实现渲染到纹理 ...............................381
示例程序（FramebufferObject.js） ........................382
创建帧缓冲区对象（gl.createFramebuffer()） ............385
创建纹理对象并设置其尺寸和参数 ....................385
创建渲染缓冲区对象（gl.createRenderbuffer()） ...........386
绑定渲染缓冲区并设置其尺寸（gl.bindRenderbuffer()，
gl.renderbufferStorage()） ......................................386
将纹理对象关联到帧缓冲区对象（gl.bindFramebuffer()，
gl.framebufferTexture2D()） ................................388
将渲染缓冲区对象关联到帧缓冲区对象（gl.framebufferRenderbuffer()） ...389
检查帧缓冲区的配置（gl.checkFramebufferStatus()） ..........390
在帧缓冲区进行绘图 ........................390
绘制阴影 ..................................................392
如何实现阴影 ................................392
示例程序（Shadow.js） ...........................393
提高精度 ........................................399
示例程序（Shadow_highp.js） .........................400
加载三维模型 .....................................401
OBJ 文件格式 ....................................404
MTL 文件格式 ...............................405
示例程序（OBJViewer.js） ........................406
自定义类型对象 ..................................409
示例程序（OBJViewer.js 解析数据部分） .........411
响应上下文丢失 .....................................418
如何响应上下文丢失 ....................419
示例程序（RotatingTriangle_contextLost.js） ................420
总结 .............................................................422
附录A WebGL 中无须交换缓冲区....................... 423
附录B GLSL ES 1.0 内置函数..................... 427
角度和三角函数 .....................................428
指数函数 ...............................................429
通用函数 ...................................................430
几何函数 ...................................................433
矩阵函数 ....................................................434
矢量函数 .......................................................435
纹理查询函数 ...........................................436
附录C 投影矩阵....................... 437
正射投影矩阵 ........................................................437
透视投影矩阵 ......................................437
附录D WebGL/OpenGL ：左手还是右手坐标系？............................ 439
示例程序(CoordinateSystem.js) .............................440
隐藏面消除和裁剪坐标系统 ......................................443
裁剪坐标系和可视空间 ....................................444
什么是对的？ .................................................446
总结 .....................................448
附录E 逆转置矩阵................... 449
附录F 从文件中加载着色器............ 453
附录G 世界坐标系和本地坐标系........... 457
本地坐标系 ......................................................458
世界坐标系 ...........................459
变换与坐标系 ..........................................461
附录H WebGL 的浏览器设置.................. 463
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>WebGL编程指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript&HTML精通网页编程
第1章  JavaScript基础
1. 1  关于JavaScript
1. 2  了解JavaScript
1. 3  world Wide web
1. 4  Web应用程序结构

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript&HTML精通网页编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>不一樣的_Nodejs
第1章    Node.js簡介
它看起來是個前端的JavaScript，卻可以開發後端應用程式。許多人總認為JavaScript 語言的效能相當差勁，可是它卻效能不俗。轉眼間，只要提到雲端技術甚至是嵌入式應用，就時常會出現它的身影。到底是什麼神秘的技術，如此讓眾人著迷？如此讓大家喜愛？
第2章    一切從JavaScript開始
由於Node.js源於JavaScript。因此，想要真正瞭解Node.js 並應用自如，就必須先懂JavaScript語言。本章節將介紹JavaScript語言，重點說明JavaScript 各項概念，就算你從未接觸過JavaScript語言，沒有任何JavaScript的開發經驗，只要看完了本章節，也可以具備必須的技能，開始學習Node.js。
第3章    Node.js起手式
本章將開始正式說明Node.js的基本起手招式，包括安裝設定、基本操作以及Node.js的各種基礎知識，在閱讀本章後，我們將會從JavaScript的開發者，一躍成為Node.js的開發者。
第4章    Node.js模組機制
一個語言或是應用程式框架，能否有寬廣的發展，被人所接受，一個很重要的因素就是有沒有大量的資源可以利用。令人振奮的是，Node.js有良好的模組機制和線上的模組資料庫，不但應該有的功能一樣也沒少，更因極佳的擴充性，讓Node.js武器庫更多元，功能更為強大。
第5章    Node.js做中學：親手打造各式應用程式
本章節將帶領讀者，在正式進入到開發網站服務的章節前，先小試牛刀一番，直接運用Node.js開發一些應用程式，在過程中熟悉一些基本常用的API和開發環境，也順便體會和培養使用Node.js寫出應用程式的樂趣。
第6章    更有效率的網站後端程式開發
在這應用百家爭鳴的時代，開發的效率總是需要「快還要更快」。因此，這些年來，無論是什麼語言，更流行起MVC等網站開發模式，以面對這需要快速開發應用的市場。想當然爾，Node.js也有許多第三方的網站框架（Web Framework），除了包裝底層HTTP/HTTPS核心模組之外，也提供更多開發網站服務時必要的功能，讓開發者可以更快完成眼前工作。所以，現在幾乎所有使用Node.js開發網站服務的人，都會借助這些現成的網站框架。
第7章    Node.js資料庫應用
資訊時代中，最重要的事莫過於資料處理，最有價值的東西當然莫過於資訊。一個網站服務，絕對免不了處理和記錄大量的資訊，舉凡使用者資料、服務內容和各種資訊，都需要靠著資料庫系統來儲存。因此，學習資料庫應用和整合，也是理所當然的必經之路。本章將試著說明如何使用Node.js銜接資料庫，以及討論當前最常與Node.js所搭配的資料庫系統。
第8章    親手打造Blog系統
在這章節將會運用整本書所介紹過的技術實作一個Blog系統。實作一個Blog系統的基本功能不外乎就是會有首頁、註冊會員、會員登入登出、新增文章、更新文章、修改文章和訪客留言等功能。所以在這章節將會詳細說明各個功能的實作。
第9章    應用程式佈建與效能
經過許多章節的介紹，你應該已經知道如何使用Node.js開發自己的應用程式，也或許你已經開始了自己的Node.js專案，但是惡魔往往藏在細節之中。我們會開始遭遇效能問題，試圖佈建自己的Node.js網站服務，以及擁有更多疑難雜症。本章將整理許多過來人的經驗，將常見的開發問題和程式部署方法，一一詳列並說明。
第10章    Node.js的進階應用
本章將介紹各種領域的Node.js解決方案，讓我們可以使用Node.js開發一般跨平台的桌面應用程式，甚至是運用在專業的嵌入式系統開發，讓大家共同體會Node.js未來可觀的發展性。
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>不一樣的_Nodejs
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Three.js开发指南
前言
第1章　使用Three. js创建你的第一个三维场景1
1.1　准备工作4
1.2　获取源码5
1.2.1　通过Git获取代码仓库5
1.2.2　下载并解压缩档案文件5
1.2.3　测试示例6
1.3　搭建HTML框架9
1.4　渲染并查看三维对象10
1.5　添加材质、光源和阴影效果14
1.6　让你的场景动起来16
1.6.1　引入requestAnimationFrame()方法16
1.6.2　旋转立方体17
1.6.3　弹跳球18
1.7　使用dat.GUI简化试验流程19
1.8　场景对浏览器的自适应21
1.9　总结22
第2章　构建Three.js场景的基本组件23
2.1　创建场景23
2.1.1　场景的基本功能24
2.1.2　给场景添加雾化效果29
2.1.3　使用overrideMaterial属性30
2.2　几何体和网格31
2.2.1　几何体的属性和方法31
2.2.2　网格对象的属性和方法36
2.3　选择合适的摄像机40
2.3.1　正交投影摄像机和透视投影摄像机40
2.3.2　将摄像机聚焦在指定点上44
2.4　总结45
第3章　学习使用Three.js中的光源46
3.1　Three.js中不同种类的光源46
3.2　基础光源47
3.2.1　THREE.AmbientLight47
3.2.2　THREE.PointLight51
3.2.3　THREE.SpotLight54
3.2.4　THREE.DirectionalLight58
3.3　特殊光源60
3.3.1　THREE.HemisphereLight60
3.3.2　THREE.AreaLight61
3.3.3　镜头光晕64
3.4　总结66
第4章　使用Three.js的材质67
4.1　理解材质的共有属性68
4.1.1　基础属性68
4.1.2　融合属性69
4.1.3　高级属性70
4.2　从简单的网格材质开始70
4.2.1　THREE.MeshBasicMaterial71
4.2.2　THREE.MeshDepthMaterial73
4.2.3　联合材质75
4.2.4　THREE.MeshNormalMaterial76
4.2.5　THREE.MeshFaceMaterial78
4.3　高级材质81
4.3.1　THREE.MeshLambertMaterial81
4.3.2　THREE.MeshPhongMaterial82
4.3.3　用THREE.ShaderMaterial创建自己的着色器83
4.4　线性几何体的材质89
4.4.1　THREE.LineBasicMaterial89
4.4.2　THREE.LineDashedMaterial91
4.5　总结92
第5章　学习使用几何体93
5.1　THREE.js提供的基础几何体94
5.1.1　二维几何体94
5.1.2　三维几何体102
5.2　总结112
第6章　高级几何体和二元操作113
6.1　THREE.ConvexGeometry113
6.2　THREE.LatheGeometry115
6.3　通过拉伸创建几何体116
6.3.1　THREE.ExtrudeGeometry117
6.3.2　THREE.TubeGeometry119
6.3.3　从SVG拉伸120
6.3.4　THREE.ParametricGeometry122
6.4　创建三维文本124
6.4.1　渲染文本124
6.4.2　添加自定义字体126
6.5　使用二元操作组合网格127
6.5.1　subtract函数129
6.5.2　intersect函数132
6.5.3　函数133
6.6　总结134
第7章　粒子、精灵和点云135
7.1　理解粒子135
7.2　粒子、THREE.PointCloud和THREE.PointCloudMaterial138
7.3　使用HTML5画布样式化粒子140
7.3.1　在THREE.CanvasRenderer中使用HTML5画布140
7.3.2　在WebGLRenderer中使用HTML5画布142
7.4　使用纹理样式化粒子144
7.5　使用精灵贴图149
7.6　从高级几何体创建THREE.Point Cloud153
7.7　总结155
第8章　创建、加载高级网格和几何体156
8.1　几何体组合与合并156
8.1.1　对象组合156
8.1.2　将多个网格合并成一个网格158
8.1.3　从外部资源中加载几何体160
8.1.4　以Three.js的JSON格式保存和加载161
8.1.5　使用Blender165
8.1.6　导入三维格式文件169
8.2　总结179
第9章　创建动画和移动摄像机180
9.1　基础动画180
9.1.1　简单动画181
9.1.2　选择对象182
9.1.3　使用Tween.js实现动画184
9.2　使用摄像机186
9.2.1　轨迹球控制器187
9.2.2　飞行控制器189
9.2.3　翻滚控制器190
9.2.4　第一视角控制器191
9.2.5　轨道控制器192
9.3　变形动画和骨骼动画193
9.3.1　用变形目标创建动画195
9.3.2　用骨骼和蒙皮创建动画198
9.4　使用外部模型创建动画200
9.4.1　使用Blender创建骨骼动画201
9.4.2　从Collada模型加载动画203
9.4.3　从雷神之锤模型中加载动画204
9.5　总结205
第10章　加载和使用纹理206
10.1　将纹理应用于材质206
10.1.1　加载纹理并应用到网格206
10.1.2　使用凹凸贴图创建褶皱210
10.1.3　使用法向贴图创建更加细致的凹凸和褶皱211
10.1.4　使用光照贴图创建阴影效果212
10.1.5　使用环境贴图创建反光效果214
10.1.6　高光贴图218
10.2　纹理的高级用途220
10.2.1　自定义UV映射220
10.2.2　重复纹理222
10.2.3　在画布上绘制图案并作为纹理224
10.2.4　将视频输出作为纹理227
10.3　总结229
第11章　自定义着色器和后期处理230
11.1　配置Three.js以进行后期处理230
11.2　后期处理通道233
11.2.1　简单后期处理通道233
11.2.2　使用掩码的高级效果组合器239
11.2.3　使用THREE.ShaderPass自定义效果242
11.3　创建自定义后期处理着色器248
11.3.1　自定义灰度图着色器248
11.3.2　自定义位着色器251
11.4　总结253
第12章　在场景中添加物理效果和声音254
12.1　创建基本的Three.js场景254
12.2　材质属性259
12.3　基础图形260
12.4　使用约束限制对象的移动265
12.4.1　使用PointConstraint限制对象在两点间移动266
12.4.2　使用HingeConstraint创建类似门的约束267
12.4.3　使用SliderConstraint将移动限制在一个轴上269
12.4.4　使用ConeTwistConstraint创建类似球销的约束270
12.4.5　使用DOFConstraint实现细节的控制272
12.4.6　在场景中添加声源276
12.5　总结277
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Three.js开发指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>网页设计基础与上机指导
第1章网页设计入门  1.1网页设计基础知识  1.2网页制作相关技术  1.3HTML入门  1.4HTML基本语法  1.5上机练习与指导  1.6本章习题第2章制作网页内容  2.1添加文字和符号  2.2添加段落及相关设置  2.3添加列表  2.4添加图片  2.5设置移动的文字  2.6插入其他多媒体文件  2.7上机练习与指导  2.8本章习题第3章超级链接  3.1认识超级链接  3.2创建超级链接  3.3常见的超级链接应用  3.4图像映射  3.5上机练习与指导  3.6本章习题第4章用表格和框架布局网页  4.1创建表格  4.2表格属性设置  4.3使用表格布局网页  4.4创建框架  4.5框架控制  4.6使用框架布局网页实例  4.7上机练习与指导  4.8本章习题第5章表单的应用  5.1表单应用基础  5.3多行文本框  5.4下拉列表框  5.5上机练习与指导  5.6本章习题第6章CSS样式表基础  6.1WEB标准介绍  6.2XHTML与CSS介绍  6.3CSS编写基本模式  6.4CSS的基本语法  6.5上机练习与指导  6.6本章习题第7章CSS布局  7.1DIV+CSS的概念及布局  7.2CSS盒模型  7.3CSS元素的定位  7.4上机练习与指导  7.5本章习题第8章CSS网页元素设计  8.1文本的设置  8.2颜色与背景  8.3图片样式控制  8.4上机练习与指导  8.5本章习题第9章JavaScript基础  9.1JavaScript语言概述  9.2HTML文档与JavaScript的使用  9.3JavaScript程序设计基础  9.4常用运算符  9.5JavaScript程序控制结构  9.6JavaScript函数的使用  9.7上机练习与指导  9.8本章习题第10章JavaScript核心对象  10.1JavaScript对象简介  10.2JavaScript内置对象  10.3宿主对象  10.4上机练习与指导  10.5本章习题第11章事件响应  11.1事件响应编程简介  11.2常用事件分析  11.3EVENT对象的应用  11.4上机练习与指导  11.5本章习题第12章综合实例  12.1网站开发流程  12.2网站开发  12.3网站发布附录 习题参考答案
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>网页设计基础与上机指导
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>16课学会网页程序设计
第1章 网页程序设计简介 1—1认识WWW的架构——网页、网站与浏览器 1—2网页的组成——HTML CSS JavaScript 1—3网页开发的测试环境与工具第2章 HTML基础 2—1HTML文件的结构 2—2各种文字段落 2—3对文字的强调 2—4HTML文件的组成架构第3章 多媒体与超链接 3—1添加图片 3—2播放音频 3—3播放视频 3—4创建超链接第4章 列表与表格 4—1创建列表 4—2创建表格 4—3表格的应用第5章 表单与内嵌式网页 5—1创建表单 5—2创建各种表单框 5—3优化表单界面以提高操作的便利性 5—4使用iframe创建内嵌窗体第6章 使用CSS修饰网页 6—1在网页中加入CSS样式 6—2CSS样式规则的组成 6—3CSS文字效果 6—4CSS背景效果第7章 使用CSS设计边框与列表样式 7—1设定表格边框样式 7—2边框的各种应用 7—3CSS列表样式第8章 使用CSS设计版面与特效 8—1CSSBOX模型 8—2控制元素定位 8—3多栏版面的设计 8—4CSS特效第9章 JavaScript基础 9—1认识JavaScript 9—2在网页中加入JavaScript程序 9—3使用JavaScript改变网页内容 9—4使用开发人员工具协助调试第1O章 DOM对象模型与事件处理 10—1认识DOM对象模型 10—2在HTML文档中新增元素 10—3表单内容验证 10—4通过DOM设定元素属性和样式 10—5DOM事件设定 10—6使用Window对象控制浏览器第11章 jQuery：JavaScript必用的程序类库 11—1jQuery简介 11—2jQuery的基本用法 11—3使用jQuery处理事件 11—4使用jQuerly特效第12章 使用jQueryUI专业美观的网页插件 12—1认识jQueryUI 12—2设计功能表 12—3使用日期选择器——DatePicker 12—4进度条——ProgressBar 12—5使用滑块——Slider 12—6使用标签页——Tabs 12—7设计对话框——DiaIog第13章 ResponsiveWebDesign与Bootstrap网页框架 13—1什么是RWD(ResponsiveWebDesign) 13—2使用viewport指定画面尺寸 13—3CSS3MediaQuery机制 13—4使用Bootstrap自动调整网页版面 13—5使用Bootstrap制作手机网页导航栏 13—6使用Bootstrap建立首页图片轮播元件第14章 AJAX与WebServices 14—1认识AJAX 14-2使用jQuery的AJAX功能 14—3利用AJAX取得Yahoo!天气概况 14—4利用AJAX读取紫外线即时监测数据——使用JSONP第15章 网页中GoogleMaps的使用 15—1申请GoogleAPI密钥 15—2使用GoogleMapsEmbedAPI构建嵌入式地图 15—3使用GoogleMaps静态地图 15—4使用GoogleMapsJavaScriptAPI加载地图第16章 针对移动设备设计的网页 16—1利用超链接在手机上打电话、传简讯 16—2使用定位功能 16—3读取手机感应器 16—4使用jQueryMobile创建移动网页 16—5使用jQueryMobile事件与函数
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>16课学会网页程序设计
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>完美图解物联网IoT实操
0无所不在的JavaScript 与物联网设备 1
0.1 JavaScript 与物联网.3
0.2 MPU、MCU 与SoC 介绍 6
0.3 章节导读 9
1 JavaScript 入门 13
1.1 JavaScript 入门14
1.2 JavaScript 语言基础19
1.3 函数定义与事件处理程序. 29
1.4 定时产生随机数 32
1.5 Array（数组）对象. 34
1.6 认识Object（对象）类型. 36
1.7 BOM（浏览器对象模型）与DOM（文档对象模型）41
动手做 操作网页对象 43
1.8 在网页中嵌入JavaScript 44
1.9 事件触发程序 46
2 认识jQuery 库 53
2.1 jQuery 简介 54
2.2 jQuery 语法基础 59
2.3 AJAX 技术：动态更新HTML 内容 64
动手做 从Arduino 输出纯文本温度 66
2.4 网页消息交换格式 69
2.5 Arduino 输出JSON 消息 73
2.6 调整灯光亮度的网页界面 76
动手做 接收调光值的Arduino 网站程序 76
2.7 使用jQuery UI 附加网页用户界面元素 79
动手做 制作滑块界面网页 82
2.8 AJAX 的安全限制 85
3 Node.js 入门 91
3.1 在电脑以及树莓派上安装Node.js 94
3.2 Node 编程起步 99
3.3 使用http 模块创建网站服务器程序 103
3.4 事件驱动、非阻塞I/O 示范：读取文件 107
3.5 global（全局）对象与模块文件 113
3.6 安装与管理模块：使用npm 工具程序115
3.7 使用Express 框架开发网站应用程序 118
3.8 接收URL 数据. 122
3.9 接收与处理POST 数据 125
3.10 使用package.json 管理Node 项目的模块程序 129
动手做 从Arduino 传递温湿度值给Node 网站 131
3.11 使用JSONP 格式跨网域访问信息 136
4 Node.js 串口通信与树莓派GPIO 控制 143
4.1 安装编译Node 模块所需的软件144
4.2 安装C/C++ 编译器147
动手做 Node.js 串口通信 150
动手做 从Node.js 发送串口数据 154
4.3 通过Node.js 运行系统指令（运行raspistill 指令拍照） 157
4.4 树莓派的GPIO 简介 162
4.5 Node.js 程序GPIO 控制：使用onoff 模块 166
动手做 GPIO 输入/ 输出信号练习：按开关闪烁LED 167
动手做 通过红外传感模块拍摄照片 170
4.6 树莓派GPIO 集成Arduino 控制板 172
4.7 5V 和3.3V 电压准位转换 182
4.8 MOSFET 逻辑电位转换电路原理解说 185
5 使用霹雳五号操控Arduino 189
5.1 霹雳五号：用JavaScript 控制Arduino. 190
动手做 用霹雳五号指挥Arduino 闪烁LED 192
动手做 启用上拉电阻并读取开关信号200
动手做 模拟输入与PWM 输出程序实验 201
动手做 检测温度203
动手做 控制舵机 207
动手做 控制LED 矩阵显示图像.209
5.2 使用socket.io 创建实时连接 211
动手做 创建实时通信程序 214
动手做 浏览器与矩阵LED 作画 217
6 电子邮件、串流视频、计算机视觉与操控舵机 227
6.1 通过Node 发送电子邮件 228
动手做 云搜证：拍照自动发送E-mail. 233
动手做 串流视频：推播实时影像 234
6.2 使用MJPG 压缩与串流视频. 240
6.3 控制舵机云台  246
动手做 使用方向键操控舵机云台 247
动手做 摄像头云台的Node 服务器代码 249
6.4 使用触摸屏幕虚拟摇杆操控摄像头云台 250
6.5 浏览器连接游戏控制器（电玩控制器） 254
动手做 使用gamepad.js 库创建游戏器操作的网页程序255
6.6 计算机视觉（computer vision）应用260
6.7 使用tracking.js 侦测人脸. 264
动手做 脸孔侦测与舵机联动 270
动手做 侦测颜色 273
7 使用MongoDB 数据库以及ejs 模板引擎创建动态网页279
7.1 数据库简介. 280
7.2 安装MongoDB 285
7.3 MongoDB 的基本操作 289
7.4 查询数据 294
7.5 更新与删除数据. 298
7.6 使用mongoose 包连接MongoDB 数据库299
7.7 连接MongoDB 并读取数据的程序 303
动手做 存储Arduino 上传的温湿度数据 307
7.8 认识模板引擎309
动手做 在ejs 模板中显示最近10 笔温湿度数据 315
动手做 分页显示数据 318
8 数据可视化——使用C3.js 与D3.js 绘制图表321
8.1 使用C3.js 绘制图表. 322
8.2 显示动态平移的实时线条图 327
动手做 使用数据库数据描绘折线 331
8.3 动态显示Arduino 检测模拟值 334
8.4 简易数字滤波. 340
8.5 使用D3 库 344
8.6 认识SVG 348
8.7 使用D3 绘制SVG 图像 353
8.8 使用动态数据绘制折线图355
8.9 结合数据动态附加HTML 元素 364
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>完美图解物联网IoT实操
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>实战微信小程序
第一部分认识微信小程序
1 微信小程序绍. . . . . . . .. . . . . .. . . . . . . 1
1.1 微信小程序是什么1
1.2 微信小程序的前景2
1.3 微信小程序与订阅号、服务号的区别3
1.4 如何创建一个微信小程序4
1.4.1 成为微信小程序开发者5
1.4.2 安装开发者编辑器7
1.5 运行一个微信小程序7
1.6 本章小结9
2 体验微信小序. . . . . . . . . . . . . . . . . . 10
2.1 界面与操作10
2.2 编辑功能11
2.3 调试功能12
2.4 项目功能16
2.5 常用快捷键18
2.6 项目的目录与文件结构18
2.7 本章小结21
第二部分读懂每一行代码
3 JavaScript 语法. . . . . . . . . . . . .. . . .. . . . . . . . 22
3.1 JavaScript 简介22
3.2 基础语法24
3.2.1 语句和语句块25
3.2.2 注释26
3.2.3 变量26
3.2.4 常量27
3.2.5 数据类型27
3.2.6 运算符38
3.2.7 条件判断42
3.2.8 循环语句43
3.2.9 Map 和Set 46
3.3 JavaScript 函数48
3.3.1 函数定义和调用48
3.3.2 变量作用域53
3.3.3 方法54
3.3.4 高阶函数56
3.3.5 箭头函数57
3.4 JavaScript 标准对象58
3.4.1 Date 58
3.4.2 RegExp 59
3.4.3 JSON 60
3.4.4 Math 61
3.5 本章小结62
4 熟练掌握WXML 和HTML. . . . . . . . . . . . . . . . . . . . . . . 63
4.1 WXML 和HTML 的差异63
4.2 WXML 语法65
4.2.1 数据绑定65
4.2.2 条件渲染70
4.2.3 列表渲染72
4.2.4 模板75
4.2.5 事件绑定77
4.2.6 引用81
4.3 WXSS 语法83
4.3.1 语法规则83
4.3.2 注释83
4.3.3 选择器84
4.4 WXSS 基本属性85
4.5 CSS 和WXSS 的区别86
4.5.1 尺寸单位86
4.5.2 样式导入87
4.5.3 内联样式87
4.5.4 全局样式与局部样式87
4.6 本章小结87
第三部分精通微信小程序开发
5 微信小程序开发基础. . . . . . . . . . . . . . . . . 88
5.1 全局配置88
5.2 页面配置93
5.3 注册程序94
5.4 注册页面96
5.4.1 页面的生命周期98
5.4.2 页面的事件处理99
5.4.3 页面的数据处理101
5.4.4 页面的栈103
5.4.5 页面的路由103
5.5 简单封装与调用104
5.6 本章小结106
6 Flexbox 布局. . . . . . . . . .. . . . . . . . . . . . . . . . 107
6.1 基本要素107
6.2 容器属性108
6.2.1 display 109
6.2.2 flex-direction 109
6.2.3 flex-wrap 110
6.2.4 flex-flow 110
6.2.5 justify-content 110
6.2.6 align-item 111
6.2.7 align-content 112
6.3 子元素属性112
6.4 position 属性115
6.5 边框、空隙与填充120
6.6 本章小结121
7 组件的开发应用. . . . . . . . . .. . . . . . . . . 122
7.1 视图容器组件124
7.1.1 view 124
7.1.2 scroll-view 126
7.1.3 swiper 129
7.2 基础内容组件131
7.2.1 icon 132
7.2.2 text 132
7.2.3 progress 135
7.3 表单组件135
7.3.1 button 136
7.3.2 checkbox 138
7.3.3 radio 139
7.3.4 input 142
7.3.5 textarea 146
7.3.6 form 149
7.3.7 label 151
7.3.8 picker 154
7.3.9 picker-view 158
7.3.10 slider 160
7.3.11 switch 162
7.4 多媒体组件164
7.4.1 image 164
7.4.2 audio 167
7.4.3 video 170
7.5 地图组件174
7.6 导航组件177
7.7 画布组件179
7.8 客服会话按钮182
7.9 本章小结183
8 API 接口. . . . . . . . . . . . . . .. . . . . . . . . . . 184
8.1 网络相关185
8.1.1 发送请求185
8.1.2 上传和下载187
8.1.3 WebSocket 189
8.2 多媒体193
8.2.1 图片193
8.2.2 录音196
8.2.3 音频202
8.2.4 背景音乐204
8.2.5 音频组件控制208
8.2.6 视频209
8.2.7 视频组件控制212
8.3 文件214
8.4 数据缓存218
8.5 位置224
8.5.1 获取与查看位置224
8.5.2 地图组件控制227
8.6 设备229
8.6.1 系统信息229
8.6.2 网络状态231
8.6.3 重力感应232
8.6.4 罗盘232
8.6.5 拨打电话233
8.6.6 扫描二维码233
8.7 界面234
8.7.1 交互反馈234
8.7.2 设置导航条239
8.7.3 导航241
8.7.4 动画246
8.7.5 绘画254
8.7.6 下拉刷新256
8.8 开放接口257
8.8.1 登录257
8.8.2 用户信息263
8.8.3 微信支付266
8.8.4 模板消息267
8.8.5 客服消息272
8.8.6 分享275
8.8.7 获取二维码276
8.9 本章小结276
9 组件进阶. . . . . . . . . . . . . . . . . .. . .. . . . . . . 277
9.1 九宫格278
9.2 页脚280
9.3 加载更多283
9.4 导航条287
9.5 搜索条290
9.6 字母列表导航条295
9.7 日历299
9.8 本章小结305
第四部分自己动手开发微信小程序
10 综合案例——音乐播放小程序. . . .. . . . . . . . . 306
10.1 项目需求306
10.2 项目结构307
10.3 配置项目文件308
10.4 首页index 308
10.4.1 推荐页311
10.4.2 排行页317
10.4.3 检索页（上） 325
10.4.4 检索页（中） 332
10.4.5 检索页（下） 340
10.5 列表页346
10.5.1 获取列表页数据346
10.5.2 页面渲染353
10.5.3 完成相似页面357
10.6 音乐播放页364
10.7 本章小结376
11 发布微信小程序. . . . . . . . . . . . . . . . . . . . . . . . 378
11.1 设置服务器域名378
11.2 上传与审核步骤380
11.3 微信小程序数据分析382
11.4 常见问题及注意事项384
11.5 微信小程序审核不通过原因整理汇总386
11.6 本章小结388
附录A . . .. . . . . . . . . . . . . . . . . . . .. . . . . . 389
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>实战微信小程序
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>编写可靠的JavaScript代码
目录
第Ⅰ部分 奠定坚实的基础
第1章 实践软件工程 3
1.1 编写从开始就正确的代码 4
1.1.1 掌握JavaScript的特性 4
1.1.2 在大型系统中规避JavaScript陷阱 15
1.1.3 应用软件工程原则 17
1.2 编写保持正确的代码 22
1.2.1 投资单元测试的未来 22
1.2.2 实践测试驱动开发 22
1.2.3 编写易于测试的代码 23
1.3 小结 26
第2章 准备工具 27
2.1 使用测试框架 27
2.1.1 辨别不正确的代码 30
2.1.2 可测试性设计 32
2.1.3 编写最少的代码 33
2.1.4 安全维护和重构 33
2.1.5 可运行规范 34
2.1.6 当前的开源和商业框架 34
2.1.7 介绍Jasmine 36
2.2 使用依赖注入框架 41
2.2.1 依赖注入的定义 41
2.2.2 使用依赖注入让代码更可靠 43
2.2.3 掌握依赖注入 43
2.2.4 案例研究：编写一个轻量级依赖注入框架 43
2.2.5 使用依赖注入框架 50
2.2.6 当前的依赖注入框架 52
2.3 使用切面工具 53
2.3.1 案例研究：使用和不使用AOP进行缓存 53
2.3.2 案例研究：构建Aop.js模块 55
2.3.3 其他AOP库 67
2.3.4 结论 68
2.4 使用代码检查工具 68
2.4.1 使用linting工具让代码更可靠 68
2.4.2 JSHint简介 71
2.4.3 其他工具 73
2.4.4 严格模式 74
2.5 小结 74
第3章 构造可靠的对象 75
3.1 使用原生数据 75
3.2 使用对象字面量 77
3.3 使用模块模式 78
3.3.1 创建任意模块 78
3.3.2 创建立即执行模块 79
3.3.3 创建可靠的模块 80
3.4 使用对象原型和原型继承 80
3.4.1 默认对象原型 80
3.4.2 原型继承 81
3.4.3 原型链 82
3.5 使用new创建对象 83
3.6 使用类继承 88
3.6.1 模拟类继承 88
3.6.2 重复将杀死Kangaroo 89
3.7 使用函数式继承 91
3.8 猴子补丁(Monkey-Patching) 92
3.9 小结 95
第Ⅱ部分 测试基于模式的代码
第4章 浏览各种模式的优点 99
4.1 案例分析 99
4.2 通过更广泛的词汇产生更加优雅的代码 100
4.3 使用拥有良好设计、良好测试的构建块产生可靠的代码 101
4.4 小结 102
第5章 确保回调模式的正确使用 103
5.1 通过单元测试了解回调模式 104
5.1.1 编写和测试使用了回调函数的代码 104
5.1.2 编写和测试回调函数 109
5.2 避免问题 113
5.2.1 扁平化回调箭头 113
5.2.2 注意this变量 115
5.3 小结 119
第6章 确保承诺模式的正确使用 121
6.1 通过单元测试了解承诺 122
6.1.1 使用承诺 122
6.1.2 构造和返回承诺 127
6.1.3 测试XMLHttpRequest 130
6.2 串联承诺 133
6.3 使用承诺封装器 134
6.4 了解状态和命运 135
6.5 区分标准承诺和jQuery承诺 135
6.6 小结 136
第7章 确保正确使用散函数应用程序 137
7.1 对散函数应用程序进行单元测试 137
7.2 为散函数应用程序创建切面 139
7.3 区分散函数应用程序和柯里化 140
7.3.1 柯里化 140
7.3.2 散函数应用程序 141
7.4 小结 141
第8章 确保备忘录模式的正确使用 143
8.1 通过单元测试了解备忘录模式 144
8.2 使用AOP添加备忘录 147
8.2.1 创建备忘录切面 147
8.2.2 为restaurantApi应用returnValueCache切面 150
8.3 小结 152
第9章 确保单例模式的正确实现 153
9.1 通过单元测试了解单例模式 154
9.1.1 使用对象字面量实现单例共享缓存 154
9.1.2 使用模块实现单例共享缓存 158
9.2 小结 162
第10章 确保工厂模式的正确实现 163
10.1 为工厂编写单元测试 163
10.2 实现工厂模式 169
10.3 考虑其他工厂类型 171
10.4 小结 171
第11章 确保沙箱模式的正确实现和使用 173
11.1 通过单元测试了解沙箱模式 173
11.1.1 创建部件沙箱 174
11.1.2 创建和测试沙箱工具 187
11.1.3 创建与沙箱一起使用的函数 191
11.2 小结 193
第12章 确保装饰器模式的正确实现 195
12.1 使用测试驱动的方式开发装饰器 196
12.1.1 为被装饰的对象编写一个假对象 197
12.1.2 为错误的传递编写测试 198
12.1.3 编写空白装饰器 199
12.1.4 添加传递功能到装饰器 200
12.1.5 验证成功传递 202
12.1.6 添加装饰器的特性 204
12.1.7 通用化装饰器 210
12.2 小结 211
第13章 确保策略模式的正确实现 213
13.1 通过单元测试了解该模式 213
13.1.1 在不使用策略模式的情况下实现transportScheduler 214
13.1.2 使用策略模式实现transportScheduler 216
13.2 小结 227
第14章 确保代理模式的正确实现 229
14.1 通过测试驱动的方式开发代理 230
14.2 小结 245
第15章 确保正确实现可链接方法 247
15.1 通过单元测试了解该模式 248
15.2 链接then方法 255
15.3 小结 257
第Ⅲ部分 测试和编写高级JavaScript特性
第16章 在无接口语言中遵守接口 261
16.1 了解接口的优点 262
16.2 了解接口隔离原则 263
16.3 使用测试驱动开发创建契约注册表 265
16.3.1 定义契约 266
16.3.2 判断是否履行了契约 267
16.3.3 断言契约被履行了 271
16.3.4 绕过契约执行 273
16.3.5 创建在被返回(创建)的对象上实施契约的切面 273
16.4 小结 277
第17章 确保正确的参数类型 279
17.1 了解JavaScript无类型参数带来的机会和风险 280
17.2 扩展ContractRegistry检查参数 280
17.2.1 界定任务范围 280
17.2.2 判断集合中的所有变量是否都履行了它的契约 281
17.2.3 断言集合中的所有变量都履行了它的契约 289
17.2.4 在切面中打包参数检查功能 290
17.3 支持契约库 292
17.4 综合起来 293
17.4.1 创建契约模块 293
17.4.2 创建应用程序的ContractRegistry 296
17.4.3 为生产发布绕过契约 297
17.5 比较面向切面的解决方案和静态解决方案 297
17.5.1 考虑TypeScript的优点 297
17.5.2 考虑切面的优点 297
17.6 小结 298
第18章 确保正确使用call、apply和bind 299
18.1 浏览this是如何绑定的 299
18.1.1 默认绑定 300
18.1.2 隐式绑定 302
18.1.3 new绑定 303
18.1.4 显式绑定 305
18.2 创建和测试使用call、apply和bind的代码 305
18.2.1 使用call和apply 305
18.2.2 使用测试驱动开发创建一个Array.prototype.forEach Polyfill 307
18.2.3 使用bind 316
18.3 小结 321
第19章 确保正确使用方法借用 323
19.1 确保借用对象符合需求 324
19.1.1 让被借用的函数验证借用者的资格 324
19.1.2 向被借用的对象附加切面 326
19.1.3 使用borrow()方法 329
19.1.4 在ContractRegistry中添加对象验证器 330
19.2 预期借用者的副作用 331
19.2.1 考虑被隔离函数的副作用 331
19.2.2 考虑调用其他函数的函数的副作用 332
19.3 预期捐赠者对象的副作用 338
19.4 小结 339
第20章 确保正确使用混合 341
20.1 创建和使用混合 343
20.1.1 创建和使用传统混合 344
20.1.2 创建和使用函数式混合 361
20.2 小结 367
第21章 测试高级程序架构 369
21.1 确保观察者模式的可靠使用 369
21.1.1 检查观察者模式 370
21.1.2 增强观察者模式的可靠性 376
21.2 确保中介者模式的可靠使用 380
21.2.1 了解中介者模式 381
21.2.2 增强基于中介者代码的可靠性 382
21.3 小结 395
第Ⅳ部分 测试中的特殊主题
第22章 测试DOM访问 399
22.1 对UI进行单元测试 399
22.1.1 检查难于测试的UI代码 400
22.1.2 使用TDD创建UI组件 401
22.2 使用分析器优化代码 411
22.2.1 检测低效代码 411
22.2.2 避免不成熟的优化 418
22.3 小结 418
第23章 确保符合标准 419
23.1 使用ESLint 420
23.1.1 安装ESLint 420
23.1.2 运行ESLint 424
23.1.3 使用ESLint实施代码标准 427
23.2 实施架构分离 432
23.2.1 家庭秘密技术 433
23.2.2 铭记技术 435
23.2.3 不可能任务(Mission Impossible)技术 437
23.2.4 魔术棒(Magic Wand)
技术 441
23.2.5 不要使用调用栈技术 442
23.2.6 其他技术 442
23.2.7 其他架构 442
23.3 小结 443
第Ⅴ部分 总结
第24章 测试驱动开发原则的总结 447
24.1 回顾值得使用测试驱动开发的原因 447
24.2 练习测试驱动开发 448
24.3 编写可单元测试的代码 448
24.4 掌握测试驱动开发的
技术 448
24.4.1 在编码之前编写测试 448
24.4.2 保持测试DRY 449
24.4.3 首先测试错误条件 449
24.4.4 测试要先易后难 449
24.4.5 具体 449
24.4.6 只测试一件事情 450
24.4.7 测试数据如同测试一样重要 450
24.4.8 高效地使用Jasmine 450
24.5 测试本书描述的模式 450
24.5.1 测试面向切面编程 450
24.5.2 测试对象构造 451
24.5.3 测试回调 451
24.5.4 测试基于承诺的代码 451
24.5.5 测试散函数应用程序 451
24.5.6 测试备忘录模式 452
24.5.7 测试单例模式 452
24.5.8 测试工厂模式 452
24.5.9 测试沙箱 452
24.5.10 测试装饰器模式 453
24.5.11 测试策略模式 453
24.5.12 测试代理模式 453
24.5.13 测试可链接方法 453
24.5.14 测试接口一致性 453
24.5.15 测试call和apply的
使用 453
24.5.16 测试方法借用模式 454
24.5.17 测试混合 454
24.5.18 测试中介者和观察者模式 454
24.5.19 测试DOM访问 454
24.5.20 实施架构分离的测试 454
24.6 小结 455
第25章 本书JavaScript习语的总结 457
25.1 回顾对象 457
25.1.1 可以添加和删除的对象属性 457
25.1.2 可以将对象用作词典 458
25.2 回顾变量 459
25.2.1 提升变量声明 459
25.2.2 变量有函数作用域 460
25.3 回顾函数 463
25.3.1 函数是对象 463
25.3.2 提升函数声明 463
25.3.3 函数没有返回类型 464
25.3.4 函数可以是匿名的 465
25.3.5 函数可以被嵌套 465
25.3.6 函数调用可以使用任意数量的参数 466
25.3.7 函数可以立即被调用 467
25.4 回顾布尔操作 468
25.4.1 在测试相等性时类型可能会被强制转换 468
25.4.2 值可以是真或假 469
25.5 小结 469
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>编写可靠的JavaScript代码
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>锋利的jQuery
第1章 认识jQuery  1.1 JavaScript和JavaScript库    1.1.1 JavaScript简介    1.1.2 JavaScript库作用及对比  1.2 加入jQuery    1.2.1 jQuery简介    1.2.2 jQuery的优势  1.3 jQuery代码的编写    1.3.1 配置jQuery环境    1.3.2 编写简单的jQuery代码    1.3.3 jQuery代码风格  1.4 jQuery对象和DOM对象    1.4.1 DOM对象和jQuery对象简介    1.4.2 jQurey对象和DOM对象的相互转换    1.4.3 实例研究  1.5 解决jQuery和其他库的冲突  1.6 jQuery开发工具和插件  1.7 小结第2章 jQuery选择器  2.1 jQuery选择器是什么  2.2 jQuery选择器的优势  2.3 jQuery选择器    2.3.1 基本选择器    2.3.2 层次选择器    2.3.3 过滤选择器    2.3.4 表单选择器  2.4 应用jQuery改写示例  2.5 选择器中的一些注意事项    2.5.1 选择器中含有特殊符号的注意事项    2.5.2 选择器中含有空格的注意事项  2.6 案例研究——某网站品牌列表的效果  2.7 其他选择器    2.7.1 jQuery提供的选择器的扩展    2.7.2 其他使用CSS选择器的方法  2.8 小结第3章 jQuery中的DOM操作  3.1 DOM操作的分类  3.2 jQuery中的DOM操作    3.2.1 查找节点    3.2.2 创建节点    3.2.3 插入节点    3.2.4 删除节点    3.2.5 复制节点    3.2.6 替换节点    3.2.7 包裹节点    3.2.8 属性操作    3.2.9 样式操作    3.2.10 设置和获取HTML、文本和值    3.2.11 遍历节点    3.2.12 CSS—DOM操作  3.3 案例研究——某网站的超链接和图片提示效果  3.4 小结第4章 jQuery中的事件和动画  4.1 jQuery中的事件    4.1.1 加载DOM    4.1.2 事件绑定    4.1.3 合成事件    4.1.4 事件冒泡    4.1.5 事件对象的属性    4.1.6 移除事件    4.1.7 模拟操作    4.1.8 其他用法  4.2 jQuery中的动画    4.2.1 showt()方法和hide()方法    4.2.2 fadeln()方法和fadeOut()方法    4.2.3 slidetJp()方法和slideDown()方法    4.2.4 自定义动画方法animate()    4.2.5 动画回调函数    4.2.6 停止动画和判断是否处于动画状态    4.2.7 其他动画方法    4.2.8 动画方法概括  4.3 视频展示效果实例  4.4 小结第5章jQuery对表单、表格的操作及更多应用  5.1 表单应用    5.1.1 单行文本框应用    5.1.2 多行文本框应用    5.1.3 复选框应用    5.1.4 下拉框应用    5.1.5 表单验证  5.2 表格应用    5.2.1 表格变色    5.2.2 表格展开关闭    5.2.3 表格内容筛选  5.3 其他应用    5.3.1 网页字体大小    5.3.2 网页选项卡    5.3.3 网页换肤  5.4 小结第6章jQuery与AjaX的应用  6.1 Ajax的优势和不足    6.1.1 AiaX的优势    6.1.2 Ajax的不足  6.2 Ajax的XMLHttpRequest对象  6.3 安装Web环境——AppServ  6.4 编写第1个Aiax例子  6.5 jQuery中的Ajax    6.5.1 loadt()方法    6.5.2 $.get()方法和$.post()方法    6.5.3 $.getScript()方法和$.getJson()方法    6.5.4 $.ajaX()方法  6.6 序列化元素  6.7 jQuery中的AjaX全局事件  6.8 基于jQuery的AjaX聊天室程序    6.8.1 基本设想    6.8.2 设计数据库    6.8.3 服务器端处理    6.8.4 客户端处理    6.8.5 客户端代码    6.8.6 整合代码  6.9 小结第7章插件的使用和写法  7.1 jQuery表单验证插件——Validation    7.1.1 Validation简介    7.1.2 下载地址    7.1.3 快速上手    7.1.4 不同的验证写法    7.1.5 验证信息    7.1.6 自定义验证规则    7.1.7 API  7.2 jQuery表单插件——Form    7.2.1 Form插件简介    7.2.2 下载地址    7.2.3 快速上手    7.2.4 核心方法——ajaxForm()和ajaxSubmit()    7.2.5 ajaxForm()方法和ajaxSubmit()方法的参数    7.2.6 表单提交之前验证表单    7.2.7 API  7.3 动态绑定事件插件——livequery    7.3.1 livequery插件简介    7.3.2 下载地址    7.3.3 快速上手    7.3.4 与复杂选择器结合使用    7.3.5 触发回调函数    7.3.6 关于插件开发    7.3.7 API  7.4 jQuery UI插件    7.4.1 jQuery UI简介    7.4.2 下载地址    7.4.3 快速上手    7.4.4 与单击事件冲突    7.4.5 与后台结合  7.5 管理Cookie的插件——Cookie    7.5.1 Cookie插件简介    7.5.2 下载地址    7.5.3 快速上手    7.5.4 API  7.6 编写jQuery插件    7.6.1 插件的种类    7.6.2 插件的基本要点    7.6.3 插件中的闭包    7.6.4 jQuery插件的机制    7.6.5 编写jQuery插件  7.7 小结第8章用jQuery打造个性网站  8.1 案例背景介绍  8.2 网站材料  8.3 网站结构    8.3.1 文件结构    8.3.2 网页结构    8.3.3 界面设计  8.4 网站的(X)HTML  8.5 网站样式(CSS)    8.5.1 将CSS文件分门别类    8.5.2 编写CSS  8.6 网站脚本(jQuery)    8.6.1 准备工作    8.6.2 首页(index.html)上的功能    8.6.3 详细页(detail.html)上的功能  8.7 小结附录A关于$(document).ready()函数  A.1 $(document).ready()函数介绍  A.2 多个$(document).ready()函数附录B Firebug  B.1 概述  B.2 主面板简介    B.2.1 控制台面板    B.2.2 HTML面板    B.2.3 CSS、脚本和网络面板    B.2.4 脚本面板  B.3 一些资源  B.4 总结附录C Ajax的XMLHttpRequest对象的属性和方法附录D jQuery $.ajax()方法的参数详解附录E jQuery加载并解析XML  E.1 简述  E.2 Content-Type  E.3 XML结构  E.4 获取XML  E.5 解析XML  E.6 禁用缓存附录F插件API  F.1 Validation插件API  F.2 Form插件API  F.3 Livequery插件API附录G jQuery速查表  G.1 基础  G.2 选择器  G.3 属性  G.4 筛选  G.5 文档处理  G.6 CSS  G.7 事件  G.8 效果  G.9 Ajax  G.10 实用项
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>锋利的jQuery
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>WebKit技术内幕
第1章　浏览器和浏览器内核	1
1.1  浏览器	1
1.1.1  浏览器简介	1
1.1.2  浏览器特性	4
1.1.3  HTML	5
1.1.4　用户代理和浏览器行为	8
1.1.5  实践：浏览器用户代理	9
1.2  浏览器内核及特性	11
1.2.1  内核和主流内核	11
1.2.2  内核特征	12
1.3  WebKit内核	15
1.3.1  WebKit介绍	15
1.3.2  WebKit和WebKit2	16
1.3.3  Chromium内核：Blink	18
1.4  本书结构	18
第2章　HTML网页和结构	21
2.1  网页构成	21
2.1.1  基本元素和树状结构	21
2.1.2  HTML5新特性	23
2.2  网页结构	25
2.2.1  框结构	25
2.2.2  层次结构	27
2.2.3  实践：理解网页结构	29
2.3  WebKit的网页渲染过程	31
2.3.1  加载和渲染	31
2.3.2  WebKit的渲染过程	32
2.3.3  实践：从网页到可视化结果	35
第3章　WebKit架构和模块	39
3.1  WebKit架构及模块	39
3.1.1  获取WebKit	39
3.1.2  WebKit架构	40
3.1.3  WebKit源代码结构	43
3.2  基于Blink的Chromium浏览器结构	45
3.2.1  Chromium浏览器的架构及模块	45
3.2.2  实践：从Chromium代码结构和运行状态理解现代浏览器	56
3.3  WebKit2	61
3.3.1  WebKit2架构及模块	61
3.3.2  WebKit和WebKit2嵌入式接口	62
3.3.3  比较WebKit2和Chromium的多进程模型以及接口	63
第4章　资源加载和网络栈	65
4.1  WebKit资源加载机制	65
4.1.1  资源	65
4.1.2  资源缓存	67
4.1.3  资源加载器	68
4.1.4  过程	69
4.1.5  资源的生命周期	70
4.1.6  实践：资源的缓存	71
4.2  Chromium多进程资源加载	74
4.2.1  多进程	74
4.2.2  工作方式和资源共享	76
4.3  网络栈	78
4.3.1  WebKit的网络设施	78
4.3.2  Chromium网络栈	78
4.3.3  磁盘本地缓存	84
4.3.4  Cookie机制	88
4.3.5  安全机制	90
4.3.6  高性能网络栈	90
4.3.7  实践：Chromium网络工具和信息	97
4.4  实践：高效的资源使用策略	99
4.4.1  DNS和TCP连接	99
4.4.2  资源的数量	99
4.4.3  资源的数据量	100
第5章　HTML解释器和DOM模型	101
5.1  DOM模型	101
5.1.1  DOM标准	101
5.1.2  DOM树	104
5.2  HTML解释器	107
5.2.1  解释过程	107
5.2.2  词法分析	110
5.2.3  XSSAuditor验证词语	111
5.2.4  词语到节点	111
5.2.5  节点到DOM树	113
5.2.6  网页基础设施	114
5.2.7  线程化的解释器	117
5.2.8  JavaScript的执行	119
5.2.9  实践：理解DOM树	120
5.3  DOM的事件机制	121
5.3.1  事件的工作过程	122
5.3.2  WebKit的事件处理机制	123
5.3.3  实践：事件的传递机制	125
5.4  影子（Shadow）DOM	127
5.4.1  什么是影子DOM	127
5.4.2  WebKit的支持	128
5.4.3  实践：使用影子DOM	129
第6章　CSS解释器和样式布局	131
6.1  CSS基本功能	131
6.1.1  简介	131
6.1.2  样式规则	134
6.1.3  选择器	135
6.1.4  框模型	136
6.1.5  包含块（Containing Block）模型	139
6.1.6  CSS样式属性	139
6.1.7  CSSOM（CSS Object Model）	140
6.1.8  实践：理解CSSOM和选择器	141
6.2  CSS解释器和规则匹配	143
6.2.1  样式的WebKit表示类	143
6.2.2  解释过程	146
6.2.3  样式规则匹配	148
6.2.4  实践：样式匹配	149
6.2.5  JavaScript设置样式	151
6.3  WebKit布局	152
6.3.1  基础	152
6.3.2  布局计算	153
6.3.3  布局测试	155
第7章　渲染基础	157
7.1  RenderObject树	157
7.1.1  RenderObject基础类	157
7.1.2  RenderObject树	162
7.2  网页层次和RenderLayer树	163
7.2.1  层次和RenderLayer对象	163
7.2.2  构建RenderLayer树	165
7.3  渲染方式	167
7.3.1  绘图上下文（GraphicsContext）	167
7.3.2  渲染方式	169
7.4  WebKit软件渲染技术	172
7.4.1  软件渲染过程	172
7.4.2  Chromium的多进程软件渲染技术	177
7.4.3  实践：软件渲染过程	180
第8章　硬件加速机制	183
8.1  硬件加速基础	183
8.1.1  概念	183
8.1.2  WebKit硬件加速设施	185
8.1.3  硬件渲染过程	189
8.1.4  3D图形上下文	193
8.2  Chromium的硬件加速机制	194
8.2.1  GraphicsLayer的支持	194
8.2.2  框架	196
8.2.3  命令缓冲区	200
8.2.4  Chromium合成器（Chromium Compositor）	202
8.2.5  实践：减少重绘	213
8.3  其他硬件加速模块	216
8.3.1  2D图形的硬件加速机制	216
8.3.2  WebGL	223
8.3.3  CSS 3D变形	228
8.3.4  其他	229
8.3.5  实践：Chromium的支持	229
第9章　JavaScript引擎	231
9.1  概述	231
9.1.1  JavaScript语言	231
9.1.2  JavaScript引擎	238
9.1.3  JavaScript引擎和渲染引擎	241
9.2  V8引擎	242
9.2.1  基础	242
9.2.2  工作原理	246
9.2.3  绑定和扩展	258
9.3  JavaScriptCore引擎	259
9.3.1  原理	259
9.3.2  架构和模块	259
9.3.4  内存管理	265
9.3.5  绑定	266
9.3.6  比较JavaScriptCore和V8	266
9.4  实践——高效的JavaScript代码	266
9.4.1  编程方式	266
9.4.2  例子	268
9.4.3  未来	271
第10章　插件和JavaScript扩展	273
10.1  NPAPI插件	274
10.1.1  NPAPI简介	274
10.1.2  WebKit和Chromium的实现	275
10.2  Chromium PPAPI插件	284
10.2.1  原理	284
10.2.2  结构和接口	285
10.2.3  工作过程	288
10.2.4  Native Client	294
10.3  JavaScript引擎的扩展机制	297
10.3.1  混合编程	297
10.3.2  JavaScript扩展机制	299
10.4  Chromium扩展机制	303
10.4.1  原理	303
10.4.2  基本设施	306
10.4.3  消息传递机制	309
第11章　多媒体	311
11.1  HTML5的多媒体支持	311
11.2  视频	313
11.2.1  HTML5视频	313
11.2.2  WebKit基础设施	315
11.2.3  Chromium视频机制	317
11.2.4  字幕	328
11.2.5  视频扩展	330
11.3  音频	331
11.3.1  音频元素	331
11.3.2  Web Audio	334
11.3.3  MIDI和Web MIDI	336
11.3.4  Web Speech	337
11.4  WebRTC	339
11.4.1  历史	339
11.4.2  原理和规范	341
11.4.3  实践——一个WebRTC例子	342
11.4.4  WebKit和Chromium的实现	345
第12章　安全机制	353
12.1  网页安全模型	353
12.1.1  安全模型基础	353
12.1.2  WebKit的实现	363
12.2  沙箱模型	366
12.2.1  原理	366
12.2.2  实现机制	367
第13章　移动WebKit	373
13.1  触控和手势事件	373
13.1.1  HTML5规范	373
13.1.2  工作原理	377
13.1.3  启示和实践	381
13.2  移动化用户界面	382
13.3  其他机制	384
13.3.1  新渲染机制	384
13.3.2  其他机制	387
第14章　调试机制	389
14.1  Web Inspector	389
14.1.1  基本原理	389
14.1.2  协议	391
14.1.3  WebKit内部机制	395
14.1.4  Chromium开发者工具	398
14.1.5  远程调试	400
14.1.6  Chromium Tracing机制	402
14.2  实践——基础和性能调试	404
14.2.1  基础调试	404
14.2.2  性能调试	408
第15章　Web前端的未来	411
15.1  趋势	411
15.2  嵌入式应用模式	414
15.2.1  嵌入式模式	414
15.2.2  CEF	414
15.2.3  Android WebView	417
15.3  Web应用和Web运行环境	419
15.3.1  Web应用	419
15.3.2  Web运行环境	421
15.4  Cordova项目	423
15.5  Crosswalk项目	425
15.6  Chromium OS和Chrome的Web应用	429
15.6.1  基本原理	429
15.6.2  其他Web操作系统	431
参考资料	435
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>WebKit技术内幕
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript完全自学手册
写给自学编程的人员
前言
第一篇JavaScript入门
第1章JavaScript简介
1.1什么是JavaScript
1.2JavaScript与Java的区别
1.3JavaScript程序运行开发环境
1.4JavaScript的优点与局限
1.5小结
第2章第1个例子—向用户说“你好”
2.1第1个例子
2.1.1最简单的程序—“用户你好”
2.1.2在HTML中插入JavaScript块
2.1.3JavaScript代码书写规则
2.2JavaScript基础知识—变量和常量
2.2.1变量命名规则
2.2.2数据类型
2.3告诉用户当前时间
2.3.1什么是内置对象
2.3.2内置对象Date的方法
2.3.3获取时间和日期
2.4在Web页上输出
2.4.1弹出警告框—alert
2.4.2弹出确认“是/否”的对话框—confirm
2.4.3输出到页面内容—document.write
2.5改进版的“你好”程序
2.6小结
第3章获取用户的输入
3.1实例：让用户输入两个数字,然后输出相加的结果
3.2JavaScript基础知识—操作符和表达式
3.2.1什么是表达式
3.2.2什么是操作符
3.2.3什么是优先级
3.3变量类型转换
3.4JavaScript基础知识—字符串初探
3.4.1什么是字符串
3.4.2字符串的书写与转义符
3.4.3字符串操作
3.5实例：让用户输入自己的名字,输出写给用户的情书
3.6小结
第4章简单的表单操作
4.1实例：确认表单必填项目完整性
4.2JavaScript基础知识—函数
4.2.1函数和变量作用域
4.2.2函数的参数和返回值
4.2.3什么是递归调用
4.3在表单提交时调用检查函数—绑定事件到表单
4.3.1什么是事件
4.3.2如何绑定事件
4.4发生了什么？—获取事件的内容
4.5表单元素的属性和方法
4.6综合应用—更人性化的表单
4.7小结
第5章小游戏—算二十四
5.1实例：电脑帮你算二十四
5.2JavaScript基础知识—条件判断
5.2.1if语句
5.2.2switch语句
5.2.3不同类型数据的比较和逻辑操作
5.3JavaScript基础知识—循环
5.3.1for循环
5.3.2while循环
5.3.3break和continue
5.4JavaScript基础知识—数组对象
5.4.1如何引用数组对象
5.4.2数组对象的属性和方法
5.5内置eval函数和错误捕获机制
5.6小结
第6章物理问题—炮弹的射程
6.1实例：由初速度和仰角求射程
6.2数学计算—内置对象Math的属性和方法
6.3.Math对象应用——科学计算器
6.4随机函数和彩票游戏
6.5小结
第7章用Cookio在客户端保存信息
7.1实例：用Cookie实现可以记住内容的表单
7.2什么是Cookie
7.2.1HTTP简介
7.2.2Cookie存在的意义
7.2.3Cookie的优点和限制
7.3把输入框的内容保存在客户端——使用Cookie
7.3.1Cookie的保存和读取
7.3.2字符串的编码
7.4Cookie的有效期、域和路径
7.4.1Cookie的有效期和清除
7.4.2用Cookie实现记事贴
7.4.3Cookie的域和路径及Cookie欺骗
7.5小结
第8章操作窗口和框架
8.1实例：模拟LiveMessenger的振动闪屏功能
8.2控制窗口——窗口对象的事件、属性和方法
8.2.1获取窗口的改变——窗口对象的事件
8.2.2控制窗口的行为——窗口对象的方法
8.3打开一个新窗口——窗口的“open”方法详解
8.3.1“open”方法的参数说明
8.3.2检测弹窗动作是否被拦截
8.3.3色彩选择器——“open”方法的应用
8.4在网页中使用自定义的对话框
8.4.1模拟Windows帮助效果——弹出式窗体的应用
8.4.2模式对话框和非模式对话框
8.5延时函数的使用
8.5.1定时函数的设定和取消
8.5.2综合应用——动态提示窗口
8.6可以收起的分栏——改变框架的分割比例
8.6.1嵌套窗口的结构
8.6.2可以收起和展开的侧边框架
8.6.3跨窗口调用JavaScript脚本
8.7小结
第9章控制表单——内容验证
9.1实例：表单数据的有效性验证
9.2用正则来判断复杂的文本规则
9.2.1什么是正则
9.2.2正则的优势
9.2.3正则的格式和含义
9.2.4用RegExp函数创建正则对象
9.2.5示例代码中正则的详细解释
9.3文本的编码和加密——正则和字符串操作
9.3.1字符串的搜索、匹配
9.3.2字符串的替换
9.4正则对象的属性和方法
9.4.1正则对象的属性
9.4.2正则对象的方法
9.5正则应用——UBB代码转换
9.6小结
第10章控制表单——和用户的操作交互
10.1实例：随用户操作而变化的表单
10.2用户操作会激发的事件
10.2.1onchange事件
10.2.2鼠标和键盘事件
10.3表单的状态变化
10.3.1只读和不可用状态的改变
10.3.2显示和隐藏
10.4表单的内容变化
10.4.1文本框内容I
10.4.2单选框和复选框的选取
10.4.3下拉列表框的联动
10.5小结
第11章复杂的跑马灯
11.1实例：一个向左弹性滑入、向上滑出的跑马灯
11.2用JavaScript控制内联CSS
11.2.1CSS名称和JavaScript属性的对应
11.2.2内联CSS样式的读取
11.2.3内联CSS样式的设置和单位
11.2.4示例：放大缩小文字
11.3用JavaScript控制非内联CSS
11.3.1样式表“styleSheet对象
11.3.2用样式表对象实现切换皮肤的功能
11.3.3样式规则“rule”对象
第三篇操作ActiveX控件
第四篇类和对象
第五篇无刷新的用户体验和Ajax
附录JavaScript常用对象的方法和属性
……
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript完全自学手册
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Web前端开发实战教程
第1章 HTML核心基础　1
1.1　了解Web系统　2
1.1.1　网络体系结构　2
1.1.2　B/S架构的特点　2
1.1.3　页面渲染引擎　3
1.2　HTML开发基础　3
1.2.1　HTML简介　3
1.2.2　第一个HTML页面　5
1.2.3　WebStorm开发工具　6
1.2.4　其他开发工具　11
1.3　HTML常用标签　11
1.3.1　文本　11
1.3.2　超链接　12
1.3.3　图像　14
1.3.4　表格　17
1.3.5　表单元素　22
1.3.6　列表　23
1.3.7　滚动字幕　24
1.3.8　音频/视频播放　26
1.3.9　其他标签　28
第2章　HTML项目实战　31
2.1　在线计算器　32
2.1.1　项目介绍　32
2.1.2　开发思路　32
2.1.3　代码实现　33
2.2　蜗牛学院官网　35
2.2.1　项目介绍　35
2.2.2　开发思路　35
2.2.3　代码实现　36
第3章　CSS核心基础　40
3.1　CSS基础　41
3.1.1　CSS简介　41
3.1.2　CSS的特点　41
3.1.3　CSS的使用　42
3.2　CSS选择器　43
3.2.1　标签选择器　43
3.2.2　ID选择器　45
3.2.3　Class选择器　47
3.2.4　组合选择器　49
3.2.5　伪类选择器　50
3.3　CSS元素样式　52
3.3.1　文本与图像　52
3.3.2　表格　54
3.3.3　超链接　56
3.3.4　列表　57
3.3.5　表单　58
第4章　盒模型　60
4.1　盒模型基础知识　61
4.1.1　盒模型简介　61
4.1.2　盒模型属性　61
4.1.3　盒模型基础使用　62
4.2　盒模型浮动　64
4.2.1　浮动的作用　64
4.2.2　盒模型左浮动　65
4.2.3　盒模型右浮动　66
4.2.4　禁止浮动　67
4.3　盒模型内容　67
4.3.1　宽度与高度　67
4.3.2　水平居中　69
4.3.3　垂直居中　71
4.3.4　内容溢出　73
4.4　盒模型嵌套　76
4.4.1　嵌套的作用　76
4.4.2　嵌套的排版　76
4.5　盒模型定位　78
4.5.1　定位简介　78
4.5.2　固定定位　79
4.5.3　绝对定位　82
4.5.4　相对定位　83
4.5.5　其他属性　84
第5章　布局项目实战　85
5.1　九宫格布局　86
5.1.1　项目介绍　86
5.1.2　开发思路　86
5.1.3　代码实现　87
5.2　在线计算器布局　88
5.2.1　项目介绍　88
5.2.2　开发思路　89
5.2.3　代码实现　89
5.3　蜗牛学院官网布局　92
5.3.1　项目介绍　92
5.3.2　开发思路　92
5.3.3　代码实现　94
5.3.4　代码优化　105
第6章　CSS高级应用　106
6.1　动画效果　107
6.1.1　animation　107
6.1.2　transform　113
6.1.3　transition　119
6.2　响应式布局　121
6.2.1　响应式布局简介　121
6.2.2　媒体查询　122
6.3　项目实战　126
6.3.1　实现一个立方体　126
6.3.2　实现立方体运动　128
第7章　JavaScript程序设计　131
7.1　语法基础　132
7.1.1　JavaScript简介　132
7.1.2　输入与输出　133
7.1.3　变量与数据类型　135
7.1.4　分支语句　138
7.1.5　循环语句　142
7.2　基础编程练习　144
7.2.1　练习题目　144
7.2.2　循环求和　145
7.2.3　字符判断　145
7.2.4　密码验证　147
7.2.5　水仙花数　148
7.2.6　次方计算　149
7.2.7　统计字符　150
7.2.8　抓球问题　150
7.2.9　九九乘法表　151
7.2.10　字符串判断　152
7.3　数组　154
7.3.1　定义与使用　154
7.3.2　核心算法　155
7.3.3　排序算法　156
7.3.4　多维数组　157
7.3.5　数组对象　158
7.3.6　数组练习　159
7.4　函数　163
7.4.1　函数定义　163
7.4.2　可选参数　165
7.4.3　匿名函数　165
7.4.4　函数应用　166
7.5　字符串　172
7.5.1　字符串的属性　172
7.5.2　字符串的方法　172
7.5.3　字符串的应用　173
第8章　文档对象模型　177
8.1　Document对象　178
8.1.1　对象集合　178
8.1.2　对象属性　180
8.1.3　对象方法　181
8.2　查找DOM元素　182
8.2.1　DOM简介　182
8.2.2　通过ID查找　183
8.2.3　通过标签查找　185
8.2.4　通过Class查找　186
8.2.5　通过Name查找　188
8.2.6　DOM操作练习　188
8.3　操作DOM元素　192
8.3.1　DOM的属性与方法　192
8.3.2　DOM的新增　194
8.3.3　DOM的删除　195
8.3.4　DOM的修改　196
8.3.5　针对表格的操作　197
第9章　JavaScript对象　204
9.1　Window对象　205
9.1.1　BOM简介　205
9.1.2　窗口对象　206
9.1.3　弹出窗口　208
9.1.4　弹出框对象　209
9.1.5　定时器对象　209
9.1.6　其他对象　210
9.2　异常处理机制　211
9.2.1　异常处理机制简介　211
9.2.2　使用onerror处理异常　211
9.2.3　使用try…catch处理异常　212
9.3　正则表达式　213
9.3.1　正则表达式简介　213
9.3.2　正则表达式语法　213
9.3.3　RegExp对象　215
第10章　事件处理　217
10.1　鼠标事件　218
10.1.1　鼠标事件列表　218
10.1.2　鼠标单击实例　218
10.1.3　鼠标悬停实例　220
10.2　键盘事件　221
10.2.1　键盘事件及属性　221
10.2.2　检测按键实例　222
10.2.3　只接受数字输入　224
10.3　表单事件　224
10.3.1　表单事件简述　224
10.3.2　密码对比实例　225
10.3.3　动态城市联动　226
10.4　多媒体事件　227
10.4.1　多媒体事件列表　227
10.4.2　记录播放时间　228
第11章　JavaScript项目实战　230
11.1　随机飘雪　231
11.1.1　项目介绍　231
11.1.2　开发思路　231
11.1.3　代码实现　233
11.1.4　思维拓展　236
11.2　在线计算器　237
11.2.1　项目介绍　237
11.2.2　开发思路　238
11.2.3　代码实现　239
11.2.4　思维拓展　241
11.3　在线时钟　242
11.3.1　项目介绍　242
11.3.2　开发思路　243
11.3.3　代码实现　243
11.4　倒计时程序　245
11.4.1　项目介绍　245
11.4.2　开发思路　246
11.4.3　代码实现　246
11.4.4　思维拓展　251
11.5　图片轮播　252
11.5.1　项目介绍　252
11.5.2　开发思路　252
11.5.3　代码实现　253
11.5.4　思维拓展　258
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Web前端开发实战教程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>完美图解物联网IoT实操
第0 章 无所不在的物联网装置 1
0.1 MPU , MCU 与SoC 介绍 3
0.2 章节导读 6
第1 章 Espruino 控制板简介 9
1.1 Espruino 程序开发软件 13
1.2 Espruino 的基本硬件操作命令 17
动手做 使用光敏电阻制作小夜灯 22
动手做 呼吸灯效果 23
动手做 超声波控制灯光亮度 25
1.3 Espruino 的睡眠模式 29
动手做 深层睡眠实验 30
动手做 蓝牙控制LED 32
动手做 蓝牙遥控车（电机控制） 35
动手做 利用SD 内存卡记录温湿度变化 39
动手做 控制舵机 45
1.4 STM32 微控制器兼容板 49
动手做 为STM32 控制板烧录Espruino 固件 51
第2 章 使用Cordova 开发移动设备App 59
2.1 认识Cordova 60
2.2 设置Cordova 的Android 开发环境 61
2.3 下载与设置Android SDK 65
2.4 安装Cordova 工具和Ant 69
2.5 使用Cordova 创建手机App 71
2.6 启用Android 手机的USB Debug 功能 75
2.7 Cordova 网页的基本程序架构 78
2.8 jQuery Mobile 框架入门 83
动手做 手机App 网络控制Arduino 95
第3 章 制作蓝牙手机遥控App 107
3.1 设置蓝牙App 项目 108
动手做 Arduino 端的蓝牙LED 开关代码 121
3.2 制作蓝牙机器昆虫遥控App 123
动手做 加速度传感器 125
动手做 通过手机USB 接口连接Arduino 板 130
3.3 通过返回（Back）键关闭App 137
第4 章 ESP8266 物联网应用入门 141
4.1 ESP8 266 模块简介 142
4.2 NodeMCU 开发板简介 145
4.3 使用AT 命令操作通用型ESP 模块（ESP-01） 147
动手做 通过Arduino 运行ESP8266 的AT 命令 149
4.4 Wi- Fi 无线网络简介 152
动手做 通过ESP-01 的AT 命令创建HTTP 服务器 154
4.5 使用Arduino 开发ESP8266 程序 157
4.6 使用ESP8266Wi-Fi.h 库连接无线网络 161
4.7 使用ESP8266WebServer.h 库创建HTTP 服务器 164
动手做 处理GET 或POST 请求 166
第5 章 零配置网络与ESP8266 文件系统 171
5.1 设置局域网域名 172
动手做 使用ESP-01 模块开发Arduino 物联网 177
5.2 在ESP8266 的SPIFFS 文件系统中存放网页文件 183
5.3 撰写引用文件系统的ESP8266 网站服务器程序 186
5.4 自动设置资源的内容类型 191
5.5 ESP8 266 Wi- Fi 无线网络灯光控制与调光器 196
第6 章 ESP8266 物联网实操 201
6.1 使用OLED 显示器呈现IP 地址和温湿度值 202
动手做 在OLED 显示IP 地址与动态温湿度 209
6.2 从ESP8266 链接Node.js 并发送JSON 数据 213
6.3 通过OTA 更新ESP8266 的固件 219
6.4 使用JavaScript 程序开发ESP8266 程序 224
6.5 使用Espruino 的Wi-Fi 库 232
6.6 触发运行Node.js 网络程序 236
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>完美图解物联网IoT实操
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>现代JavaScript编程：经典范例与实践技巧
第1章 快速体验JavaScript 1
1-1 使用Chrome运行JavaScript代码 1
1-2 JavaScript的变量 2
1-3 不同数据类型之间的运算 2
1-4 分支语句 3
1-5 循环语句 4
1-6 函数 5
1-7 理解对象 5
1-8 数组对象的使用 6
1-9 编写闰年判断小程序 7
1-10 使用Sublime Text来编写JavaScript代码 8
1-11 JavaScript的语法特点 16
1-12 编程练习 17
第2章 ECMAScript的语法世界 20
2-1 理解变量 20
2-2 变量的命名 21
2-3 变量提升 24
2-4 块级作用域 25
2-5 ECMAScript中的数据类型 27
2-6 再看const关键字 28
2-7 Undefined与Null 29
2-8 关于Boolean类型 30
2-9 关于Number类型 31
2-10 关于String类型 32
2-11 对象简介 33
2-12 算术运算符 35
2-13 赋值运算符 39
2-14 关系运算符 40
2-15 逻辑运算符 42
2-16 位运算符 44
2-17 自增与自减运算符 49
2-18 条件运算符 50
2-19 逗号运算符与delete运算符 50
2-20 关于运算符的优先级与结合性 51
2-21 隐式类型转换 53
2-22 编程练习 55
第3章 ECMAScript流程控制与函数 59
3-1 if-else分支结构 59
3-2 switch-case分支结构 60
3-3 while循环结构 62
3-4 for循环结构 63
3-5 关于for-in与for-of结构 64
3-6 break中断语句 66
3-7 continue中断语句 68
3-8 异常抛出语句throw 69
3-9 对异常进行捕获处理 71
3-10 传递异常 73
3-11 使用函数语句定义函数 76
3-12 使用函数表达式定义函数 77
3-13 使用Function构造器定义函数 78
3-14 立即执行函数 79
3-15 编程练习 80
第４章 ECMAScript面向对象编程 85
4-1 创建对象 86
4-2 设置对象的属性和行为 87
4-3 内置Number对象 88
4-4 Number对象与Number数值 90
4-5 内置String对象 91
4-6 与HTML相关的String方法 93
4-7 内置Boolean对象 94
4-8 内置Array对象 95
4-9 内置Date对象 99
4-10 内置Math对象 103
4-11 内置RegExp正则表达式对象 105
4-12 内置Function对象 109
4-13 内置Object对象 112
4-14 进行对象属性的配置 112
4-15 Object函数对象常用方法 114
4-16 Object实例对象常用方法 119
4-17 面向对象编程中的几个重要概念 120
4-18 用工厂方法模拟类 121
4-19 使用构造方法模拟类 122
4-20 使用Object函数对象的create方法模拟类 123
4-21 使用封装法模拟类 123
4-22 使用对象冒充的方式实现继承 124
4-23 使用原型链的方式实现继承 126
4-24 使用混合模式实现继承 128
4-25 编程练习 129
第5章 ECMAScript的高级特性 133
5-1 数组的解构赋值 133
5-2 对象的解构赋值 135
5-3 字符串与函数参数的解构赋值 137
5-4 用解构赋值交换变量的值 138
5-5 箭头函数的基本用法 138
5-6 箭头函数中this的固化 139
5-7 Set集合结构 141
5-8 Map字典结构 144
5-9 使用Proxy代理对对象的属性读写进行拦截 146
5-10 Proxy代理处理器支持的拦截操作 147
5-11 使用Promise承诺对象 150
5-12 建立Promise任务链 152
5-13 进行Promise对象组合 153
5-14 Generator函数应用 155
5-15 Generator任务参数的传递 158
5-16 使用class定义类 159
5-17 使用class实现类的继承 160
5-18 认识JSON数据格式 162
5-19 使用JSON对象 163
5-20 认识Symbol 165
5-21 注册全局的Symbol符号 166
5-22 迭代器Symbol 167
5-23 正则表达式符号 167
5-24 使用export进行模块的导出 168
5-25 使用import进行模块的导入 169
5-26 编程练习 170
第6章 JavaScript常用设计模式 173
6-1 工厂设计模式 173
6-2 单例设计模式 176
6-3 建造者设计模式 177
6-4 适配器设计模式 180
6-5 装饰器设计模式 181
6-6 外观设计模式 182
6-7 享元设计模式 184
6-8 代理设计模式 186
6-9 责任链设计模式 187
6-10 命令设计模式 189
6-11 迭代器设计模式 190
6-12 备忘录设计模式 191
6-13 观察者设计模式 193
6-14 编程练习 194
第7章 JavaScript HTML DOM/BOM 197
7-1 创建学习模板 197
7-2 几个重要概念 199
7-3 Document文档对象 199
7-4 Element节点对象 202
7-5 Attribute属性对象 206
7-6 用户事件 208
7-7 Event事件对象 209
7-8 关于事件传递 210
7-9 简单的轮播广告 211
7-10 Window窗口对象 213
7-11 Navigator导航对象 216
7-12 Screen屏幕对象 217
7-13 History历史对象 217
7-14 Location地址对象 218
7-15 编程练习 218
第8章 JavaScript项目实战 222
8-1 项目一：编写一个简易网页时钟 222
8-1-1 关于Canvas标签 223
8-1-2 制作简易网页时钟 225
8-2 项目二：编写网页笑话阅读器 229
8-2-1 通过互联网获取免费的应用数据 229
8-2-2 关于AJAX 232
8-2-3 代码实现 234
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>现代JavaScript编程：经典范例与实践技巧
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>物联网系统开发
译者序
关于作者
前言
第1章　初识树莓派Zero1
1.1　设置树莓派Zero1
1.1.1　准备SD卡2
1.1.2　安装Raspbian操作系统2
1.1.3　利用串口控制电缆调试树莓派Zero3
1.1.4　使用COM串口测试和通信4
1.2　联网与远程控制树莓派7
1.2.1　连接以太网络7
1.2.2　用SSH接入树莓派Zero8
1.2.3　连接Wi-Fi10
1.3　如何安装无线工具10
1.4　测试通信13
1.5　更新package库14
1.6　远程桌面16
1.7　自定义网络服务器18
1.8　测试PHP安装19
1.9　总结21
第2章　连接树莓派Zero22
2.1　数字信号输入：传感器DS18B2022
2.1.1　硬件要求22
2.1.2　硬件连接23
2.2　自定义单线协议24
2.2.1　软件自定义25
2.2.2　在屏幕上显示读数26
2.3　用模数转换器MCP3008输入模拟信号26
2.4　树莓派GPIO引脚头28
2.5　连接RTC32
2.6　设置DS3231模块35
2.7　测试RTC37
2.8　I2C设备设置37
2.9　最终测试RTC38
2.10　总结39
第3章　接入传感器——测量现实事物40
3.1　读取流水传感器来计算水的体积41
3.1.1　硬件连接41
3.1.2　读取传感器信号41
3.2　用Arduino读取和统计脉冲42
3.3　根据统计的脉冲数量计算水流速度43
3.4　计算水的流速和体积44
3.5　测量煤气浓度48
3.6　用传感器测量酒精浓度50
3.7　用传感器监测火焰51
3.8　测量植物湿度53
3.9　测量容器中的水量55
3.10　测量温度、湿度和光照，并把数据显示到LCD屏幕上57
3.10.1　硬件和软件要求57
3.10.2　测试传感器59
3.10.3　在LCD上显示数据60
3.11　用PIR传感器监测物体运动62
3.12　用簧片开关监测门是否被打开63
3.13　用指纹传感器管理进门人员64
3.13.1　硬件设置64
3.13.2　保存指纹65
3.13.3　测试传感器69
3.14　总结71
第4章　控制连接的设备72
4.1　利用Node.js制作一个简单的网络服务器72
4.2　利用Restful API和Node.js让树莓派控制一个继电器73
4.2.1　JSON 结构74
4.2.2　aREST API指令74
4.2.3　在树莓派Zero上安装Node.js74
4.3　从浏览器用aREST指令控制继电器75
4.4　将电脑上的Node.js设置成网络服务器77
4.4.1　下载Node.js78
4.4.2　安装Node.js78
4.4.3　用Node.js设置网络服务器端口808080
4.5　用Arduino Wi-Fi扩展板和Node.js监控温度、湿度和光照81
4.6　用Arduino以太网扩展板和Node.js监控温度、湿度和光照87
4.6.1　Arduino以太网扩展板的应用代码87
4.6.2　设置设备的Node.js90
4.7　总结91
第5章　在你的安全系统中添加网络摄像头92
5.1　Arduino和树莓派间的互动92
5.1.1　在Raspbian系统下安装Arduino IDE93
5.1.2　远程连接树莓派93
5.1.3　用图像接口执行Arduino93
5.2　Raspbian系统下的Arduino界面94
5.2.1　准备工作95
5.2.2　选择串口95
5.2.3　从图形界面下载程序96
5.3　从树莓派Zero控制一个Arduino的输出口97
5.4　用Python控制Arduino98
5.5　将TTL串口摄像头连接到Arduino，并将图像保存到micro SD卡99
5.6　用TTL串口摄像头监测运动101
5.7　用树莓派控制快照拍摄102
5.8　用网页控制摄像头104
5.8.1　通过PHP启动Python脚本104
5.8.2　Python脚本代码105
5.9　在安全网络中监控USB摄像头106
5.9.1　设置Arduino YUN106
5.9.2　从MJPG-STREAMER服务器监控108
5.9.3　用树莓派监控USB摄像头108
5.10　总结109
第6章　搭建网络监视器和用仪表盘控制设备110
6.1　设置MySQL数据服务器110
6.1.1　安装MySQL111
6.1.2　安装PHP的MySQL驱动113
6.1.3　测试PHP和MySQL113
6.2　安装phpMyAdmin管理数据库115
6.2.1　设置Apache服务器116
6.2.2　从远程控制面板进入phpMyAdmin118
6.2.3　展示Arduinobd数据库118
6.2.4　从Arduino的以太网扩充板发送数据到网页服务器119
6.3　MySQL的Datalogger121
6.3.1　脚本语言编程121
6.3.2　测试连接122
6.4　数据库查询123
6.4.1　脚本软件123
6.4.2　展示特定数据的脚本124
6.4.3　查询记录的温度125
6.5　LED的控制和调光126
6.5.1　软件要求126
6.5.2　测试LED127
6.5.3　从界面控制LED128
6.6　控制直流电机129
6.7　用电路控制灯132
6.8　其他电气用具135
6.8.1　控制门锁135
6.8.2　控制浇水136
6.9　从任何地方远程访问树莓派Zero136
6.9.1　如何访问并设置路由器137
6.9.2　设置动态DNS139
6.9.3　创建No-ip.org账号140
6.10　控制灯并且测量电流消耗141
6.11　从已经连接的设备和传感器上控制与监视Arduino、Wi-Fi和以太网扩展板147
6.11.1　编写控制和监控设备的单一接口代码147
6.11.2　为监视和控制添加设备148
6.12　总结150
第7章　用物联网仪表盘搭建监视设备151
7.1　可以检测噪声的监听麦克风151
7.2　管理交流灯调光器的电流153
7.2.1　硬件要求153
7.2.2　软件代码154
7.3　用RFID卡控制访问156
7.3.1　硬件要求156
7.3.2　软件要求157
7.3.3　软件代码157
7.4　监测烟雾160
7.5　用树莓派Zero
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>物联网系统开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Web前端开发简明教程
内容提要
前言
第1章 HTML概述
第2章 HTML文本与图像
第3章 HTML列表
第4章 HTML表格
第5章 HTML表单
第6章 HTML 5
第7章 CSS基础
第8章 CSS盒子模型
第9章 CSS字体与文本
第10章 CSS列表与表格
第11章 CSS定位
第12章 JavaScript基础
第13章 JavaScript应用
第14章 jQuery应用
第15章 综合案例
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Web前端开发简明教程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>网页游戏开发秘笈
《网页游戏开发秘笈》
译者序
前　言
导　言
第1章　问答游戏 1
1.1　第一步：出题 1
1.2　第二步：隐藏题目 8
1.3　第三步：重现题目 9
1.4　第四步：引入各种程序库 11
1.5　第五步：判断玩家所选答案是否正确 15
1.6　小结 19
第2章　文字冒险游戏 20
2.1　第一步：设计页面样式 21
2.2　第二步：实现页面跳转 25
2.3　第三步：添加道具栏及道具拖放功能 27
2.4　第四步：添加复杂的交互功能 35
2.5　第五步：添加历史记录导航功能 44
2.6　第六步：添加精彩的结局 46
2.7　小结 48
第3章　派对游戏 50
3.1　第一步：采用atom.js创建范例游戏 50
3.2　第二步：用canvas元素绘图 56
3.3　第三步：绘制鼠洞 58
3.4　第四步：绘制鼹鼠 60
3.5　第五步：将鼹鼠放入鼠洞 63
3.6　第六步：令鼹鼠从洞中钻出来 65
3.7　第七步：使玩家可通过敲击键盘来打鼹鼠 67
3.8　html5的<audio>标签并不尽如人意 70
3.9　小结 72
第4章　解谜游戏 73
4.1　第一步：用easel.js来渲染 74
4.2　第二步：渲染多个方块 78
4.3　第三步：创建成对出现的同色方块 81
4.4　第四步：配对并消除同色方块 83
4.5　第五步：隐藏与翻转图片 85
4.6　第六步：胜负判定 87
4.7　第七步：缓存与性能优化 91
4.8　第八步：将方块配对游戏改为字母认读游戏 93
4.9　小结 99
第5章　平台游戏 100
5.1　初识melon.js 100
5.2　第一步：创建瓦片地图 101
5.3　第二步：启动游戏 102
5.4　第三步：加入游戏角色 105
5.5　第四步：构建碰撞图层 107
5.6　第五步：行走与跳跃 108
5.7　第六步：标题画面 110
5.8　第七步：添加可供玩家收集的物品 112
5.9　第八步：添加敌人 113
5.10　第九步：添加能力提升道具 115
5.11　第十步：添加胜负判定机制并显示游戏信息 116
5.12　小结 118
第6章　格斗游戏 120
6.1　第一步：初识game.js 120
6.2　第二步：单独绘制精灵表中的各个精灵 123
6.3　第三步：处理两位玩家的输入 124
6.4　第四步：移动与变形 127
6.5　第五步：不要使两位玩家的输入互相阻塞 130
6.6　第六步：用位掩码记录按键状态 134
6.7　第七步：用掩码来检测碰撞 137
6.8　第八步：令两个游戏角色可以互相攻击对方 140
6.9　小结 145
第7章　飞行射击游戏 146
7.1　与渲染有关的准备知识 146
7.2　第一步：初识gamequery 148
7.3　第二步：添加“敌机” 150
7.4　第三步：创建己方战机 153
7.5　第四步：处理玩家与敌人的碰撞 156
7.6　第五步：发射子弹 157
7.7　第六步：为玩家提供多种武器 159
7.8　小结 162
第8章　第一人称射击游戏 164
8.1　第一步：初识jaws 164
8.2　第二步：创建二维地图 166
8.3　第三步：增添玩家 169
8.4　第四步：用光线投射技术绘制俯视图 173
8.5　第五步：用光线投射技术实现伪三维效果 177
8.6　第六步：为玩家配备照相机 180
8.7　第七步：装点游戏场景 184
8.8　第八步：添加同伴 188
8.9　小结 195
第9章　角色扮演游戏 197
9.1　第一步：初识enchant.js 197
9.2　第二步：创建地图 199
9.3　第三步：增添玩家 202
9.4　第四步：添加碰撞层 207
9.5　第五步：绘制状态画面 209
9.6　第六步：与npc对话 212
9.7　第七步：绘制道具栏 215
9.8　第八步：开设道具店 218
9.9　第九步：实现战斗界面 226
9.10　第十步：通过html5的本地存储api来存储游戏进度 236
9.11　小结 238
第10章　即时战略游戏 240
10.1　服务器 240
10.2　第一步：配置node 243
10.3　第二步：用socket.io实现即时通信 246
10.4　第三步：用crafty.js创建isometric地图 249
10.5　第四步：绘制棋子 251
10.6　第五步：移动棋子 255
10.7　第六步：使玩家只能控制己方棋子，并将对方棋子上面的图案隐藏起来 258
10.8　第七步：实现碰撞检测，令玩家能吃掉对方棋子并看到其图案 264
10.9　小结 268
第11章　如何继续提升游戏开发水平 270
11.1　本书已经讲过的内容 270
11.2　接下来应该学习的内容 271
附录a　javascript基础 273
附录b　代码质量控制 280
附录c　资源 285
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>网页游戏开发秘笈
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML/CSS/JavaScript标准教程实例版
第1章  HTML、CSS、JavaScript综述
1.1  这就是HTML、CSS、JavaScript的代码	2
1.2  HTML、CSS、JavaScript各自的角色	4
1.3  如何学习HTML、CSS、JavaScript	8
1.4  小实例——HTML、CSS、JavaScript的
1.4  综合应用	11
1.5  总结	13
1.6  习题	13
第2章  HTML基础介绍
2.1  HTML文档的结构	16
2.2  HTML基本语法	16
2.3  HTML文件的命名	18
2.4  编写HTML文件的注意事项	19
2.5  小实例——插入图片与表格	20
2.6  习题	22
第3章  HTML文件的整体结构
3.1  文件头部内容	25
3.2  主体内容＜body＞	29
3.3  习题	32
第4章  文字与段落
4.1  编辑内容	35
4.2  文字效果	39
4.3  文字修饰	40
4.4  段落＜p＞	44
4.5  小实例——文字网页	50
4.6  习题	51
第5章  建立和使用列表
5.1  列表类型	54
5.2  嵌套列表	58
5.3  小实例——列表在网页中的使用	61
5.4  习题	62
第6章  超链接
6.1  超链接概述	65
6.2  超链接的路径	65
6.3  超链接的建立	66
6.4  设置图像映射	68
6.5  小实例——超链接的使用	69
6.6  习题	70
第7章  表格的应用
7.1  表格概述	73
7.2  插入表格＜table＞	74
7.3  设置表格标记属性	79
7.4  设置表格行与单元格	83
7.5  表格嵌套	89
7.6  小实例——表格在网页中的应用	91
7.7  习题	92
第8章  层的应用
8.1  图层的创建——＜div＞	95
8.2  创建嵌套图层	96
8.3  层的属性设置	97
8.4  小实例——图层的实际应用	98
8.5  习题	99
第9章  框架的应用
9.1  框架概述	102
9.2  框架的基本结构	103
9.3  设置框架	104
9.4  设置框架集＜frameset＞	111
9.5  浮动框架＜iframe＞	115
9.6  在框架上建立链接	119
9.7  小实例——框架的实际应用	121
9.8  习题	123
第10章  表单的应用
10.1  表单概述	127
10.2  表单标记＜form＞	127
10.3  信息输入＜input＞	128
10.4  小实例——表单的实际应用	137
10.5  习题	139
第11章  CSS样式表基础
11.1  CSS的概述	143
11.2  CSS的使用	146
11.3  插入CSS样式表	149
11.4  编写CSS文件	151
11.5  习题	155
第12章  字体的设置
12.1  设置字体——font-family	158
12.2  设置字号——font-size	159
12.3  设置字体样式——font-style	161
12.4  设置字体加粗——font-weight	162
12.5  设置字体变体——font-variant	164
12.6  组合设置字体属性——font	165
12.7  小实例——综合设置字体	165
12.8  习题	166
第13章  文本的精细排版
13.1  调整字符间距——letter-spacing	169
13.2  调整单词间距——word-spacing	170
13.3  添加文字修饰——text-decoration	171
13.4  设置文本排列方式——text-align	173
13.5  设置段落缩进——text-indent	174
13.6  调整行高——line-height	175
13.7  转换英文大小写——text-transform	176
13.8  小实例——综合应用文本属性	178
13.9  习题	179
第14章  颜色和背景
14.1  设置颜色——color	182
14.2  设置背景颜色——background-color	183
14.3  插入背景图片——background-image	184
14.4  插入背景附件——
14.4  background-attachment	185
14.5  设置重复背景图片——
14.4  background-repeat	187
14.6  设置背景图片位置——
14.4  background-position	188
14.7  小实例——综合设置颜色和背景	190
14.8  习题	191
第15章  边框和边距
15.1  设计边框样式——border-style	194
15.2  调整边框宽度——border-width	197
15.3  设置边框颜色——border-color	199
15.4  设置边框属性——border	200
15.5  边距——margin-top /margin-bottom
14.4  /margin-left/ margin-right/margin	202
15.6  填充——padding-top／padding-
14.4  bottom /padding-left / padding- right
14.4  /padding	203
15.7  小实例——综合设置边框和边距	205
15.8  习题	206
第16章  JavaScript基础
16.1  JavaScript语言概况	209
16.2  第一个JavaScript程序	210
16.3  习题	211
第17章  JavaScript基本语法
17.1  基本数据类型	214
17.2  运算符	214
17.3  程序结构	218
17.4  函数	224
17.5  小实例——修改密码	226
17.6  习题	228
第18章  JavaScript事件分析
18.1  事件概述	231
18.2  主要事件分析	231
18.3  其他常用事件	238
18.4  习题	238
第19章  图片和多媒体文件的使用
19.1  图片	241
19.2  滚动文字	252
19.3  插入多媒体文件——＜embed＞	262
19.4  添加背景音乐——＜bgsound＞	264
19.5  小实例——综合设置图片和多媒体	266
19.6  习题	267
第20章  CSS样式的高级应用
20.1  列表	270
20.2  定位	274
20.3  CSS层	279
20.4  鼠标指针——cursor	287
20.5  小实例——综合设置层样式	289
20.6  习题	290
第21章  滤镜特效的应用
21.1  设置透明度——alpha	294
21.2  添加模糊效果——blur	296
21.3  设置水平/垂直翻转——fliph/flipv	298
21.4  设置灰度——＜gray＞	299
21.5  设置反转——＜invert＞	300
21.6  设置X射线效果——xray	301
21.7  设置波浪效果——wave	303
21.8  设置阴影——dropshadow	305
21.9  设置边缘光晕效果——glow	306
21.10  设置遮罩——mask	308
21.11  设置渐变阴影——shadow	309
21.12  设定颜色透明——chroma	310
21.13  小实例——滤镜的综合应用	312
21.14  习题	313
第22章  JavaScript对象的应用
22.1  对象概述	316
22.2  浏览器内部对象	316
22.3  内置对象和方法	322
22.4  习题	323
第23章  综合案例
23.1  HTML综合案例	326
23.2  CSS综合案例	337
23.3  网站开发流程	345
23.4  大综合案例	346
第24章  手持设备可访问页面的设计
24.1  XHTML MP语言	358
24.2  WML语言	368
附录A  HTML语法概述	373
附录B  CSS语法概述	378
附录C  JavaScript语法概述	381
附录D  颜色关键字对照表	387
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML/CSS/JavaScript标准教程实例版
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入浅出React和Redux
前言
第1章　React新的前端思维方式1
1.1　初始化一个React项目1
1.2　增加一个新的React组件3
1.2.1　JSX6
1.2.2　JSX是进步还是倒退7
1.3　分解React应用8
1.4　React的工作方式10
1.4.1　jQuery如何工作10
1.4.2　React的理念11
1.4.3　Virtual DOM12
1.4.4　React工作方式的优点13
1.5　本章小结14
第2章　设计高质量的React组件16
2.1　易于维护组件的设计要素16
2.2　React组件的数据17
2.2.1　React的prop18
2.2.2　React的state22
2.2.3　prop和state的对比24
2.3　组件的生命周期25
2.3.1　装载过程25
2.3.2　更新过程30
2.3.3　卸载过程34
2.4　组件向外传递数据34
2.5　React组件state和prop的局限37
2.6　本章小结39
第3章　从Flux到Redux40
3.1　Flux40
3.1.1　MVC框架的缺陷41
3.1.2　Flux应用43
3.1.3　Flux的优势53
3.1.4　Flux的不足54
3.2　Redux56
3.2.1　Redux的基本原则56
3.2.2　Redux实例59
3.2.3　容器组件和傻瓜组件64
3.2.4　组件Context67
3.2.5　React-Redux71
3.3　本章小结73
第4章　模块化React和Redux应用75
4.1　模块化应用要点75
4.2　代码文件的组织方式76
4.2.1　按角色组织76
4.2.2　按功能组织78
4.3　模块接口79
4.4　状态树的设计81
4.4.1　一个状态节点只属于一个模块82
4.4.2　避免冗余数据82
4.4.3　树形结构扁平83
4.5　Todo应用实例83
4.5.1　Todo状态设计84
4.5.2　action构造函数86
4.5.3　组合reducer87
4.5.4　Todo视图90
4.5.5　样式 98
4.5.6　不使用ref99
4.6　开发辅助工具100
4.6.1　Chrome扩展包100
4.6.2　redux-immutable-state-invariant辅助包101
4.6.3　工具应用101
4.7　本章小结103
第5章　React组件的性能优化105
5.1　单个React组件的性能优化105
5.1.1　发现浪费的渲染时间106
5.1.2　性能优化的时机107
5.1.3　React-Redux的should-ComponentUpdate实现108
5.2　多个React组件的性能优化115
5.2.1　React的调和（Reconciliation）过程116
5.2.2　Key的用法120
5.3　用reselect提高数据获取性能122
5.3.1　两阶段选择过程123
5.3.2　范式化状态树125
5.4　本章小结127
第6章　React高级组件129
6.1　高阶组件129
6.1.1　代理方式的高阶组件132
6.1.2　继承方式的高阶组件136
6.1.3　高阶组件的显示名139
6.1.4　曾经的React Mixin139
6.2　以函数为子组件140
6.2.1　实例CountDown142
6.2.2　性能优化问题145
6.3　本章小结146
第7章　Redux和服务器通信147
7.1　React组件访问服务器147
7.1.1　代理功能访问API148
7.1.2　React组件访问服务器的生命周期150
7.1.3　React组件访问服务器的优缺点153
7.2　Redux访问服务器154
7.2.1　redux-thunk中间件154
7.2.2　异步action对象 156
7.2.3　异步操作的模式157
7.2.4　异步操作的中止 163
7.3　Redux异步操作的其他方法165
7.3.1　如何挑选异步操作方式165
7.3.2　利用Promise实现异步操作167
7.4　本章小结　167
第8章　单元测试168
8.1　单元测试的原则168
8.2　单元测试环境搭建170
8.2.1　单元测试框架170
8.2.2　单元测试代码组织172
8.2.3　辅助工具173
8.3　单元测试实例175
8.3.1　action构造函数测试175
8.3.2　异步action构造函数测试176
8.3.3　reducer测试178
8.3.4　无状态React组件测试178
8.3.5　被连接的React组件测试179
8.4　本章小结180
第9章　扩展Redux182
9.2　中间件182
9.1.1　中间件接口183
9.1.2　使用中间件186
9.1.3　Promise中间件187
9.1.4　中间件开发原则190
9.2　Store Enhancer 191
9.2.1　增强器接口191
9.2.2　增强器实例reset192
9.3　本章小结194
第10章　动画195
10.1　动画的实现方式195
10.1.1　CSS3方式195
10.1.2　脚本方式197
10.2　ReactCSSTransitionGroup199
10.2.1　Todo应用动画200
10.2.2　ReactCSSTransitionGroup规则202
10.3　React-Motion动画库205
10.3.1　React-Motion的设计原则205
10.3.2　Todo应用动画206
10.4　本章小结210
第11章　多页面应用211
11.1　单页应用211
11.2　React-Router213
11.2.1　路由213
11.2.2　路由链接和嵌套216
11.2.3　默认链接218
11.2.4　集成Redux219
11.3　代码分片221
11.3.1　弹射和配置webpack224
11.3.2　动态加载分片225
11.3.3　动态更新Store的reducer和状态228
11.4　本章小结234
第12章　同构235
12.1　服务器端渲染vs浏览器端渲染235
12.2　构建渲染动态内容服务器239
12.2.1　设置Node.js和Express240
12.2.2　热加载242
12.3　React同构246
12.3.1　React服务器端渲染HTML247
12.3.2　脱水和注水248
12.3.3　服务器端Redux Store249
12.3.4　支持服务器和浏览器获取共同数据源250
12.3.5　服务器端路由251
12.4　同构实例252
12.5　本章小结257
结语258
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入浅出React和Redux
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Learning PHP,MySQL,JavaScript,and CSS(第2版)
前言
第1章　动态Web内容介绍
第2章　安装开发服务器
第3章　关于PHP
第4章　PHP中的表达式和控制流
第5章　PHP函数与对象
第6章　PHP数组
第7章　实用PHP数组
第8章　MySQL入门
第9章　掌握MySQL
第10章　使用PHP访问MySQL
第11章　表单处理
第12章　Cookies、会话和身份验证
第13章　探究Java Script
第14章　Java Script中的表达式和控制流
第15章　Java Script函数、对象和数组
第16章　Java Script和PHP验证与错误处理
第17章　使用Ajax
第18章　CSS简介
第19章　支持CSS3的高级CSS
第21章　由JavaScript访问CSS
第21章　综合应用
附录A 各章知识测试解答
附录B 在线资源
附录C MySQL函数
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Learning PHP,MySQL,JavaScript,and CSS(第2版)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5+CSS+JavaScript深入学习实录
第1章　设计的灵魂源于灵感	1
1.1  成为一名出色的网页设计师	1
1.2  认识网页和网站	2
1.2.1  网页	2
1.2.2  网站	3
1.3  制作网页和网站的那些事	4
1.3.1  网站制作流程	4
1.3.2  网页设计流程	5
1.3.3  发布站点	5
1.4  Web标准布局介绍	5
1.4.1  看当前的Web开发标	6
1.4.2  为什么使用Web标准	6
1.4.3  CSS布局标准	7
1.5  网页制作工具面面观	8
1.5.1  几种可视化工具	8
1.5.2  安装Dreamweaver	10
1.6  谈HTML和JavaScript的必要性	13
1.7  灵感是设计师的设计之源	13
第2章　网页设计三剑客	15
2.1  三剑客之——体现身材的HTML	15
2.1.1  HTML概述	15
2.1.2  HTML的特点	16
2.1.3  看HTML的身材如何	16
2.2  三剑客之——会化妆的CSS	16
2.2.1  CSS概述	17
2.2.2  CSS的特点	17
2.2.3  CSS的好处	18
2.3  三剑客之——JavaScript是美的升华	18
2.3.1  JavaScript概述	18
2.3.2  JavaScript基本概念	18
2.3.3  JavaScript的作用	19
2.4  一个典型页面文件实例	20
第3章　网页的记号	23
3.1  为网页设计发型——设置网页头部元素	23
3.1.1  设置文档类型	23
3.1.2  设置编码类型	26
3.1.3  设置页面标题	28
3.2  其他头部元素	30
3.2.1  命名空间	30
3.2.2  meta标记	31
3.2.3  关键词	31
3.2.4  网页描述	31
3.3  设置页面正文	34
3.4  注释是一种说明	36
第4章　你不一定了解的文字和段落	40
4.1  标题文字	40
4.2  文本文字	42
4.2.1  文本文字标记<font>	43
4.2.2  字型设置	44
4.3  段落标记	46
4.4  换行标记	48
4.5  插入水平线	48
4.6  特殊符号处理	51
第5章　看超链接的跳跃	56
5.1  链接概述	56
5.1.1  锚链	56
5.1.2  URL引用	57
5.2  建立内部链接	57
5.3  建立外部链接	60
5.4  使用Telnet链接	63
5.5  创建E-mail链接	64
5.6  创建FTP链接	66
5.7  其他形式的链接	68
5.7.1  新闻组链接	69
5.7.2  WAIS链接	69
第6章　图片是修饰网页的最佳途径	71
6.1  常用的图片格式介绍	71
6.1.1  GIF格式	71
6.1.2  JPEG格式	72
6.2  设置背景图片	73
6.3  插入图片	75
6.3.1  图片的基本处理	76
6.3.2  图片布局处理	77
6.4  设置图片链接	80
第7章　你不一定了解的列表	82
7.1  无序列表	82
7.2  有序列表	84
7.3  更加紧凑的菜单列表	87
7.4  定义列表标记	89
7.5  列表的嵌套使用	91
第8章　表格没那么简单	94
8.1  创建一个表格	94
8.2  表格标题	97
8.3  跨行和跨列	99
8.3.1  实现跨列处理	100
8.3.2  实现跨行处理	102
8.3.3  实现同时跨行、跨列处理	105
8.4  设置表格页眉	107
8.5  设置表格背景图像	109
8.6  对齐处理	110
8.6.1  表格的整体对齐	110
8.6.2  对齐表格中的内元素	112
8.7  设置单元格大小	115
第9章　特效和多媒体带来的绚丽	117
9.1  实现滚动效果	117
9.2  设置背景音乐	119
9.2.1  代码指定	119
9.2.2  媒体插件实现	120
9.3  插入Flash	122
9.4  插入Applet	126
9.5  ActiveX 控件	129
第10章　使用框架	133
10.1  框架标记介绍	133
10.2  创建框架	135
10.3  设置框架大小	139
10.4  为框架创建链接	142
10.5  框架嵌套	146
第11章　看表单带来的革命性意义	152
11.1  表单标记	152
11.2  使用form标记	153
11.3  使用文本域	154
11.4  使用文本区域	156
11.5  使用按钮	159
11.6  使用单选按钮和复选框	161
11.7  使用列表菜单	164
11.8  使用文件域	167
11.9  使用图像域	169
11.10 使用隐藏域	171
11.11 使用单选组按钮	173
11.12 表单的综合使用	176
第12章　div布局处理	188
12.1  div标记介绍	188
12.1.1  div的格式	188
12.1.2  使用div	189
12.2  插入div标记	190
12.3  插入AP div	192
第13章　HTML 5来了	196
13.1  HTML 5 是下一代的HTML	196
13.1.1  发展历程	196
13.1.2  HTML 5的吸引力	197
13.2  新特性之视频处理	197
13.2.1  video标记	198
13.2.2  <video>标记的属性	198
13.3  新特性之音频处理	203
13.3.1  audio标记	203
13.3.2  <audio>标记的属性	204
13.4  新特性之Canvas	208
13.4.1  <canvas>标记介绍	208
13.4.2  HTML DOM Canvas 对象	209
13.4.3  Canvas实践	209
13.5  新特性之Web存储	219
13.5.1  Web存储介绍	219
13.5.2  HTML 5中Web存储的意义	220
13.5.3  两种存储方法	220
13.6  新特性之表单新特性	223
13.6.1  全新的Input 类型	223
13.6.2  全新的表单元素	227
13.6.3  全新的表单属性	229
第14章　等了很久的CSS基础	236
14.1  CSS语法	236
14.2  使用选择符	239
14.2.1  命名机制	239
14.2.2  通配选择符	240
14.2.3  类型选择符	242
14.2.4  群组选择符	244
14.2.5  包含选择符	246
14.2.6  ID选择符	248
14.2.7  class选择符	250
14.2.8  组合选择符	250
14.3  CSS属性介绍	250
14.4  CSS编码规范	252
14.4.1  书写规范	253
14.4.2  命名规范	253
14.5  颜色介绍	253
14.5.1  颜色名称定义	254
14.5.2  十六进制定义	255
14.6  长度单位	257
14.6.1  绝对长度单位	257
14.6.2  相对长度单位	257
14.7  百分比值	258
14.8  URL是地址	261
14.8.1  相对路径	261
14.8.2  绝对路径	261
14.8.3  应用实例	261
14.9  CSS的调用	264
第15章　先看页面布局	268
15.1  CSS元素介绍	268
15.1.1  块元素	268
15.1.2  内联元素	271
15.1.3  可变元素	272
15.2  CSS元素定位介绍	272
15.2.1  元素的定位	272
15.2.2  定位属性	277
15.3  内容控制属性	282
15.3.1  控制页面内容属性display	282
15.3.2  是否显示属性visibility	283
15.3.3  居中显示属性text-align	286
15.3.4  边界属性margin	289
15.4  控制页面背景	291
15.4.1  页面背景概述	291
15.4.2  使用背景颜色	292
15.4.3  使用背景图片	293
15.4.4  背景颜色和背景图片混用	301
15.4.5  设置文本样式	303
15.4.6  设置链接样式	305
15.5  使用浮动属性	307
15.5.1  浮动属性简介	307
15.5.2  固定元素相邻	307
15.5.3  两个浮动元素相邻	309
15.5.4  多个浮动元素相邻	310
15.6  清除浮动属性	311
15.6.1  清除浮动属性简介	311
15.6.2  使用清除浮动属性	313
15.7  使用列表属性	315
15.7.1  列表样式属性list-style-type	315
15.7.2  列表位置属性list-style-position  317
15.7.3  列表图片属性list-style- image  318
15.7.4  列表综合属性list-style	320
第16章　将网页打造成一个容器	322
16.1  盒模型简介	322
16.1.1  盒模型的内容	322
16.1.2  盒模型的背景	324
16.2  使用补白属性	324
16.2.1  补白属性概述	324
16.2.2  使用补白属性百分比值	327
16.2.3  使用单侧补白属性	329
16.3  使用边框属性	331
16.3.1  边框样式属性	331
16.3.2  边框宽度属性	333
16.3.3  边框颜色属性	335
16.3.4  边框属性的综合使用	336
16.3.5  使用表格边框属性	338
16.4  使用边界属性	340
16.4.1  边界属性	340
16.4.2  单侧边界属性	342
16.4.3  相邻边界属性	344
16.5  父子元素之间的距离	349
16.5.1  子元素边界为0	349
16.5.2  父元素补白为0	351
16.6  嵌套元素使用负边界	353
16.7  固定元素的大小	355
第17章　CSS设置和修饰	358
17.1  CSS文本设置	358
17.1.1  文本缩进	358
17.1.2  对齐文本	362
17.1.3  图文混排对齐处理	365
17.1.4  设置行高和间隔	367
17.1.5  设置文本间隔和空白	372
17.1.6  实现文本转换	375
17.1.7  实现水平和垂直居中	376
17.2  文本修饰链接	380
17.2.1  文本修饰	380
17.2.2  使用链接属性	383
17.2.3  设置鼠标悬停样式	389
17.3  CSS修饰图片	391
17.3.1  背景图片修饰	391
17.3.2  修饰内容图片	392
17.4  CSS表单修饰	395
17.4.1  修饰表单文本域	396
17.4.2  修饰表单文本区域	396
17.4.3  修饰表单按钮	398
17.4.4  修饰表单复选框	399
17.4.5  修饰表单单选按钮	400
17.4.6  修饰表单列表	401
17.4.7  修饰表单文件域	402
17.4.8  修饰表单图像域	403
17.5  修饰页面滚动条	404
17.6  修饰水平线	406
17.7  修饰表格	407
17.7.1  修饰表格边线和背景	407
17.7.2  设置表格的宽度和高度	408
17.7.3  实现表格居中	409
17.7.4  设置表格内容高度	412
第18章　引入JavaScript	414
18.1  JavaScript简介	414
18.1.1  JavaScript格式	414
18.1.2  一个典型的JavaScript文件	414
18.2  数据类型	416
18.2.1  数据类型概述	416
18.2.2  JavaScript常量	417
18.2.3  JavaScript变量	417
18.3  表达式和运算符	420
18.3.1  JavaScript表达式	420
18.3.2  JavaScript运算符	420
18.4  JavaScript循环语句	424
18.4.1  if条件语句	424
18.4.2  for循环语句	427
18.4.3  while循环语句	429
18.4.4  do…while循环语句	430
18.4.5  break控制	432
18.4.6  switch循环语句	432
18.5  JavaScript函数	432
18.5.1  函数的构成	433
18.5.2  JavaScript常用函数	434
18.6  JavaScript对象	436
18.6.1  对象基础知识	436
18.6.2  JavaScript常用对象和方法	438
18.7  JavaScript事件	441
18.7.1  JavaScript常用事件	441
18.7.2  事件处理程序	443
18.8  JavaScript窗口对象	444
18.8.1  窗口对象	444
18.8.2  窗口对象的事件驱动	444
18.8.3  窗口对象中的属性	444
18.8.4  窗口对象的方法	445
18.8.5  JavaScript窗口对象的应用	445
18.9  JavaScript框架对象	448
第19章　行为操作	451
19.1  行为介绍	451
19.1.1  行为简介	451
19.1.2  行为事件	453
19.1.3  行为的使用	453
19.2  调用JavaScript	455
19.3  URL转移	456
19.4  交换图像	458
19.5  打开浏览器窗口	460
19.6  显示隐藏元素	462
19.7  播放声音	463
19.8  改变属性	465
19.9  弹出信息	467
19.10 跳转菜单	469
19.11 拖动AP元素	472
第20章　谈一谈设计师这个行业	474
20.1  网页设计师这一行业	474
20.2  从合格到优秀其实并不遥远	475
20.3  企业需要什么样的人才	476
20.4  设计师们的三块大蛋糕	476
20.5  从设计师的担心谈出路	477
第21章　从面试中谈设计	479
21.1  面试	479
21.1.1  面试前的准备	479
21.1.2  常见的面试错误	480
21.2  面试中最大的问题	481
21.2.1  网页设计师要抓住设计的灵魂	481
21.2.2  需要牢记的原则	481
21.2.3  考官的问题——网页设计理念	484
21.2.4  考官的问题——网页设计的误区	484
21.3  在面试中所得——什么才是好的网页设计	484
21.4  配色的问题	485
21.5  不得不说的标题	486
21.6  面试问题——网页设计布局	487
21.7  网页设计必须注意的26个问题	488
21.8  探索无止境，学习无归期	491
第22章　从项目中谈模块	493
22.1  一个项目引发的问题	493
22.2  JavaScript特效的应用	495
22.3  文字处理	496
22.3.1  实例概述	496
22.3.2  定义文本颜色	497
22.3.3  指定文本内容	498
22.3.4  文本增亮处理	498
22.3.5  文本减亮处理	498
22.3.6  定义变换频率	499
22.4  时间处理	502
22.5  图像处理	506
22.5.1  实例概述	507
22.5.2  设置图像属性	507
22.5.3  亮度增加处理	507
22.5.4  亮度减小处理	508
22.6  背景处理	511
22.7  鼠标光标处理	515
22.7.1  实例概述	515
22.7.2  指定跟随文本	515
22.7.3  文本效果处理	515
22.7.4  页面显示	516
22.8  菜单处理	518
22.8.1  实例概述	518
22.8.2  设置菜单元素内容	518
22.8.3  设置滚动区域属性	519
第23章　为Android手机设计网页	523
23.1  搭建开发环境	523
23.1.1  搭建Android开发环境	523
23.1.2  搭建网页运行环境	525
23.2  先看一段代码	528
23.2.1  实现主页	528
23.2.2  编写CSS文件	529
23.2.3  实现页面自动缩放	531
23.3  添加Android的CSS	532
23.3.1  编写基本的样式	532
23.3.2  添加视觉效果	534
23.4  添加JavaScript	535
23.4.1  jQuery框架介绍	535
23.4.2  具体实践	536
23.5  使用Ajax	539
23.5.1  编写HTML文件	539
23.5.2  编写JavaScript文件	543
23.5.3  最后的修饰	544
23.6  让网页动起来	545
23.6.1  一个开源框架——JQTouch	546
23.6.2  一个简单应用	546
第24章　SEO优化	555
24.1  SEO基础	555
24.2  搜索引擎	556
24.2.1  搜索引擎的工作	556
24.2.2  搜索引擎之间的差异	557
24.3  非常重要的关键词	557
24.3.1  优化正确的关键词	557
24.3.2  关键词密度	558
24.3.3  特殊的关键词	559
24.3.4  利用相关性提高网站关键词排名	560
24.3.5  挖掘准确的长尾关键词	562
24.4  链接	563
24.4.1  内向链接和外向链接	563
24.4.2  锚文本	564
24.5  做好数据分析	565
24.6  网站排名算法总结	566
24.7  几个有效的SEO排名策略	567
第25章　个人博客网站	569
25.1  网站规划	569
25.1.1  站点需求分析	569
25.1.2  预期效果分析	570
25.1.3  站点结构规划	571
25.2  切图分析	571
25.3  制作站点首页	572
25.3.1  实现流程分析	572
25.3.2  制作顶部导航	573
25.3.3  设计中间内容部分	577
25.3.4  制作底部版权部分	583
25.4  制作日志页面	585
25.4.1  实现流程分析	585
25.4.2  日志内容实现	585
25.5  制作日志详情页面	586
25.5.1  实现流程分析	586
25.5.2  页面具体实现	587
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5+CSS+JavaScript深入学习实录
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Ajax高级程序设计
第1章 什么是ajax
1.1 ajax的诞生
1.2 web的演化过程
1.2.1 javascript
1.2.2 帧
1.2.3 隐藏帧技术
1.2.4 动态html和dom
1.2.5 iframe
1.2.6 xmlhttp
1.3 真正的ajax
1.4 ajax原则
1.5 ajax后面的技术
1.6 谁在使用ajax？
1.6.1 google suggest
1.6.2 gmail
1.6.3 google maps
1.6.4 a9
1.6.5 yahoo!news
1.6.6 bitflux blog
1.7 混乱与争议
1.8 小结
第2章 ajax基础
2.1 http基础
2.1.1 http请求
2.1.2 http应答
2.2 ajax通讯技术
2.2.1 隐藏帧技术
2.2.2 xmlhttp请求
2.3 进一步考虑
2.3.1 同源策略
2.3.2 缓存的控制
2.4 小结
第3章 ajax模式
3.1 通信控制模式
3.1.1 预先获取
3.1.2 页面预载入的例子
3.1.3 提交节流
3.1.4 表单增量验证的实例
3.1.5 字段增量验证实例
3.1.6 定期刷新
3.1.7 新评论提示实例
3.1.8 多阶段下载
3.1.9 附加信息链接实例
3.2 失效处理模式
3.2.1 取消待处理的请求
3.2.2 重试
3.3 小结
第4章 xml、xpath和xslt
4.1 浏览器对xml的支持
4.1.1 ie中的xml dom
4.1.2 firefox中的xml dom
4.1.3 跨浏览器兼容的xml
4.1.4 基本的xml实例
4.2 浏览器对xpath的支持
4.2.1 xpath概述
4.2.2 ie中的xpath
4.2.3 使用命名空间
4.2.4 firefox中的xpath
4.2.5 使用命名空间解析器
4.2.6 跨浏览器兼容的xpath
4.3 浏览器对xslt的支持
4.3.1 xslt概述
4.3.2 ie中的xslt
4.3.3 firefox中的xslt
4.3.4 跨浏览器兼容xslt
4.3.5 重访“最佳选择”
4.4 小结
第5章 基于rss/atom的syndication
5.1 rss
5.1.1 rss 0.91
5.1.2 rss 1.0
5.1.3 rss 2.0
5.2 atom
5.3 fooreader.net
5.3.1 客户端组件
5.3.2 服务器端组件
5.3.3 将客户端和服务器连接起来
5.4 安装
5.5 测试
5.6 小结
第6章 web服务
6.1 相关技术
6.1.1 soap
6.1.2 wsdl
6.1.3 rest
6.2 .net连接
6.3 设计决策
6.4 创建windows平台的web服务
6.4.1 系统需求
6.4.2 配置iis
6.4.3 编写web服务
6.4.4 创建程序集
6.5 web服务和ajax
6.5.1 创建测试工具
6.5.2 ie使用的方法
6.5.3 mozilla使用的方法
6.5.4 通用方法
6.6 跨域的web服务
6.6.1 google web api 服务
6.6.2 创建代理
6.7 小结
第7章 json
7.1 什么是json？
7.1.1 数组表示
7.1.2 对象表示
7.1.3 混合表示
7.1.4 json语法
7.1.5 json编码和解码
7.2 json vs. xml
7.3 服务端json工具
7.3.1 json-php
7.3.2 其它工具
7.4 创建自动提示的文本框
7.4.1 功能概述
7.4.2 html部分
7.4.3 数据库表
7.4.4 体系结构
7.4.5 类
7.4.6 自动建议控件
7.4.7 建议提供者
7.4.8 服务器端组件
7.4.9 客户端组件
7.5 小结
第8章 web网站的用户界面组件
8.1 创建滚动新闻用户界面组件
8.1.1 服务器端组件
8.1.2 客户端组件
8.1.3 对新闻设置样式
8.1.4 实现滚动新闻用户界面组件
8.2 创建天气用户界面组件
8.2.1 weather.com提供的sdk
8.2.2 服务器端组件
8.2.3 客户端组件
8.2.4 从服务器获取数据
8.2.5 定制天气用户界面组件
8.2.6 实现天气用户界面组件
8.3 创建web搜索用户界面组件
8.3.1 服务器端组件
8.3.2 客户端组件
8.3.3 定制web搜索用户界面组件
8.3.4 实现web搜索用户界面组件
8.4 创建网站搜索用户界面组件
8.4.1 服务器端组件
8.4.2 客户端组件
8.4.3 定制网站搜索用户界面组件
8.4.4 实现网站搜索用户界面组件
8.5 小结
第9章 ajaxmail
9.1 需求
9.2 架构
9.2.1 将使用的资源
9.2.2 数据库表
9.2.3 配置文件
9.2.4 ajaxmailbox类
9.2.5 执行操作
9.3 用户界面
9.3.1 文件夹视图
9.3.2 阅读视图
9.3.3 写邮件视图
9.3.4 布局
9.4 整合
9.4.1 辅助函数
9.4.2 mailbox对象
9.4.3 回调函数
9.4.4 事件处理函数
9.5 最后一步
9.6 小结
第10章 ajax框架
10.1 jpspan
10.1.1 工作原理
10.1.2 安装jpspan
10.1.3 创建服务端页面
10.1.4 创建客户端页面
10.1.5 错误处理
10.1.6 类型转换
10.1.7 jpspan小结
10.2 dwr
10.2.1 工作原理
10.2.2 安装dwr
10.2.3 创建客户端页面
10.2.4 使用自定义类
10.2.5 错误处理
10.2.6 dwr.xml中的更多配置项
10.2.7 转换器
10.2.8 dwr小结
10.3 ajax.net
10.3.1 工作原理
10.3.2 安装ajax.net
10.3.3 创建web页面
10.3.4 简单类型和复杂类型
10.3.5 session状态
10.3.6 ajax.net小结
10.4 小结
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Ajax高级程序设计
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Vue.js权威指南
第1 章 遇见Vue.js    1
1.1 MVX 模式是什么   1
1.1.1 MVC    1
1.1.2 MVP  2
1.1.3 MVVM   3
1.2 Vue.js 是什么  4
1.2.1 Vue.js 与其他框架的区别  4
1.2.2 如何使用Vue.js 10
1.2.3 Vue.js 的发展历史  11
第2 章 数据绑定 13
2.1 语法 13
2.1.1 插值   13
2.1.2 表达式  14
2.1.3 指令   14
2.2 分隔符  15
第3 章 指令 16
3.1 内部指令 16
3.1.1 v-if  16
3.1.2 v-show   17
3.1.3 v-else   18
3.1.4 v-model 19
3.1.5 v-repeat 22
3.1.6 v-for   30
3.1.7 v-text   32
3.1.8 v-html   32
3.1.9 v-bind   33
3.1.10 v-on   34
3.1.11 v-ref   35
3.1.12 v-el   36
3.1.13 v-pre   36
3.1.14 v-cloak 36
3.2 自定义指令  37
3.2.1 基础   37
3.2.2 高级选项   41
3.3 内部指令解析 47
3.4 常见问题解析 50
第4 章 计算属性 53
4.1 什么是计算属性   53
4.2 计算属性缓存 54
4.3 常见问题 56
4.3.1 计算属性getter 不执行的场景 56
4.3.2 在v-repeat 中使用计算属性  57
第5 章 表单控件绑定 59
5.1 基本用法 59
5.1.1 text 59
5.1.2 checkbox 59
5.1.3 radio   60
5.1.4 select   60
5.2 值绑定  62
5.3 v-model 修饰指令  63
5.3.1 lazy 63
5.3.2 debounce 64
5.3.3 number  64
5.4 修饰指令原理 64
5.4.1 lazy 64
5.4.2 debounce 65
5.4.3 number  66
第6 章 过滤器   67
6.1 内置过滤器  68
6.1.1 字母操作   68
6.1.2 json 69
6.1.3 限制   69
6.1.4 currency 72
6.1.5 debounce 73
6.2 自定义过滤器 73
6.2.1 fillter 语法   73
6.2.2 教你写一个filter   75
6.3 源码解析 76
6.3.1 管道实现   76
6.3.2 过滤器解析  77
6.4 常见问题解析 78
第7 章 Class 与Style 绑定 80
7.1 绑定HTML Class  80
7.1.1 对象语法   80
7.1.2 数组语法   82
7.2 绑定内联样式 82
7.2.1 对象语法   82
7.2.2 数组语法   83
7.2.3 自动添加前缀 84
第8 章 过渡 86
8.1 CSS 过渡 87
8.1.1 内置Class 类名   88
8.1.2 自定义CSS 类名  89
8.1.3 显式声明CSS 过渡类型 89
8.1.4 动画案例   89
8.1.5 过渡流程   90
8.2 JavaScript 过渡   92
8.3 渐进过渡 93
第9 章 Method   95
9.1 如何绑定事件 95
9.1.1 内联方式   95
9.1.2 methods 配置  96
9.1.3 $events 应用  97
9.2 如何使用修饰符   97
9.2.1 prevent  98
9.2.2 stop 98
9.2.3 capture   98
9.2.4 self  98
9.2.5 按键   99
9.3 Vue.js 0.12 到1.0 中的变化  99
9.3.1 v-on 变更   99
9.3.2 @click 缩写  100
第10 章 Vue 实例方法   101
10.1 实例属性  101
10.1.1 组件树访问 101
10.1.2 DOM 访问  102
10.1.3 数据访问  102
10.2 实例方法  102
10.2.1 实例DOM 方法的使用 102
10.2.2 实例Event 方法的使用 104
第11 章 组件   107
11.1 基础  108
11.1.1 注册  108
11.1.2 数据传递  110
11.1.3 混合  123
11.1.4 动态组件  126
11.2 相关拓展  129
11.2.1 组件和v-for  129
11.2.2 编写可复用组件 130
11.2.3 异步组件  130
11.2.4 资源命名约定   131
11.2.5 内联模板  132
11.2.6 片段实例  133
11.3 生命周期  134
11.4 开发组件  136
11.4.1 基础组件  136
11.4.2 基于第三方组件开发  141
11.5 常见问题解析   146
第12 章 表单校验   154
12.1 安装  154
12.2 基本使用  155
12.3 验证结果结构   156
12.4 验证器语法 158
12.4.1 校验字段名field 158
12.4.2 校验规则定义   160
12.5 内置验证规则   163
12.5.1 required   163
12.5.2 pattern 165
12.5.3 minlength  165
12.5.4 maxlength   166
12.5.5 min  167
12.5.6 max   167
12.6 与v-model 同时使用  168
12.7 重置校验结果   169
12.8 表单元素  169
12.9 各校验状态对应的class   172
12.9.1 自定义校验状态class  173
12.9.2 在其他元素上使用校验状态class 173
12.10 分组校验  174
12.11 错误信息  174
12.11.1 错误信息输出组件  177
12.11.2 动态设置错误信息  180
12.12 事件  182
12.12.1 单个字段校验事件  182
12.12.2 整个表单校验事件  183
12.13 延迟初始化   185
12.14 自定义验证器  186
12.14.1 注册自定义验证器  187
12.15 自定义验证时机 189
12.16 异步验证  192
12.16.1 注册异步验证器 192
12.16.2 验证器函数context   194
第13 章 与服务端通信   196
13.1.1 安装  197
13.1.2 参数配置  198
13.1.3 headers 配置 199
13.1.4 基本HTTP 调用 200
13.1.5 请求选项对象   202
13.1.6 response 对象   205
13.1.7 RESTful 调用   205
13.1.8 拦截器   207
13.1.9 跨域AJAX 208
13.1.10 Promise  210
13.1.11 url 模板   211
13.2 vue-async-data  212
13.2.1 安装  212
13.2.2 使用  212
13.3 常见问题解析   213
13.3.1 如何发送JSONP 请求 213
13.3.2 如何修改发送给服务端的数据类型   215
13.3.3 跨域请求出错   215
13.3.4 $.http.post 方法变为OPTIONS 方法   216
第14 章 路由与视图 217
14.1 如何安装  217
14.2 基本使用  218
14.3 视图部分  219
14.3.1 v-link  219
14.3.2 router-view  222
14.4 路由实例  222
14.4.1 实例化路由 222
14.5 组件路由配置   227
14.5.1 路由切换的各个阶段  227
14.5.2 各阶段的钩子介绍   230
14.6 路由匹配  236
14.6.1 动态片段  236
14.6.2 全匹配片段 237
14.6.3 具名路径  237
14.6.4 路由对象  238
14.7 transition 对象   239
14.8 嵌套路由  239
14.9 动态加载路由组件   241
14.10 实战  242
14.10.1 浏览器直接引用 242
14.10.2 Webpack 模块化开发 244
14.11 常见问题解析  250
第15 章 vue-cli 254
15.1 安装  254
15.2 基本使用  254
15.3 命令  257
15.3.1 init   257
15.3.2 list 257
15.4 模板  258
15.4.1 官方模板  258
15.4.2 自定义模板 258
15.4.3 本地模板  259
15.5 不错的工具包   259
15.5.1 commander  259
15.5.2 download-git-repo  259
15.5.3 inquirer 259
15.5.4 ora   260
第16 章 测试开发与调试  261
16.1 测试工具  261
16.1.1 ESLint 261
16.1.2 工具包   263
16.2 开发工具  264
16.2.1 Vue Syntax Highlight   264
16.2.2 Snippets 264
16.2.3 其他编辑器/IDE  265
16.3 调试工具  269
第17 章 scrat+Vue.js 的化学反应  271
17.1 浅谈前端工程化 271
17.2 前端工程化怎么做   271
17.3 scrat 简介  273
17.4 scrat+Vue.js 实现组件 275
17.5 案例分析  276
17.5.1 准备工作  277
17.5.2 代码实现  279
17.5.3 编译和发布 284
17.6 总结  287
第18 章 Vue.js 2.0   288
18.1 API 变更   288
18.1.1 全局配置  288
18.1.2 全局API  289
18.1.3 VM 选项   290
18.1.4 实例属性  294
18.1.5 实例方法  294
18.1.6 指令  296
18.1.7 特殊元素  297
18.1.8 服务端渲染 297
18.2 Virtual DOM   297
18.2.1 认识Virtual DOM 297
18.2.2 Virtual DOM 在Vue.js 2.0 中的实现   299
18.3 服务端渲染技术 315
18.3.1 普通服务端渲染 315
18.3.2 流式服务端渲染 320
18.4 总结  326
第19 章 源码篇——util 327
19.1 env 327
19.1.1 系统判断  328
19.1.2 属性支持  328
19.1.3 过渡属性  329
19.1.4 nextTick   330
19.1.5 set 332
19.2 dom   332
19.2.1 dom 操作  332
19.2.2 属性操作  339
19.2.3 class 操作  341
19.2.4 事件操作  343
19.2.5 其他  344
19.3 lang   347
19.3.1 对象操作  347
19.3.2 名称转换  351
19.3.3 数组操作  352
19.3.4 类型转换  352
19.3.5 方法绑定  354
19.3.6 其他  354
19.4 components  357
19.5 options 359
19.6 debug  364
第20 章 源码篇——深入响应式原理   365
20.1 如何追踪变化   365
20.1.1 Observer 367
20.1.2 Directive 372
20.1.3 Watcher   382
20.2 变化检测问题   391
20.3 初始化数据 394
20.4 异步更新队列   395
20.5 计算属性的奥秘 398
20.6 总结  402
第21 章 源码篇——父子类合并策略   403
21.1 策略是什么 403
21.1.1 生命周期合并策略   403
21.1.2 属性方法计算   405
21.1.3 数据合并策略   406
第22 章 源码篇——缓存  409
22.1 Cache 有什么用  409
22.2 LRU  410
22.3 Cache 类   410
22.4 put   410
22.5 shift   411
22.6 get 412
第23 章 源码篇——属性props  413
23.1 流程设计  413
23.2 属性name   415
23.3 coerce  416
23.4 type 验证  416
23.5 default  417
23.6 validator   418
第24 章 源码篇——events 419
24.1 events 配置是什么   419
24.1.1 如何配置  419
24.1.2 $emit 触发  422
24.1.3 $once 绑定 424
24.1.4 $off 删除  425
24.1.5 $dispatch 派发   426
24.1.6 $broadcast 广播  427
第25 章 Webpack  428
25.1 安装  428
25.2 基本使用  429
25.3 命令行 430
25.4 配置文件  430
25.4.1 context 431
25.4.2 entry  431
25.4.3 output 432
25.4.4 module   433
25.4.5 resolve 434
25.4.6 devServer  435
25.5 开发调试  435
25.5.1 安装  435
25.5.2 启动服务  435
25.5.3 命令行参数 436
25.5.4 配置文件  436
25.6 使用插件  436
25.6.1 安装  437
25.6.2 常用插件  438
第26 章 Rollup 440
26.1 简介  440
26.2 安装  441
26.3 配置  441
26.4 命令  443
26.5 插件  447
26.6 常见问题解析   449
第27 章 Browserify  450
27.1 安装  450
27.2 基本使用  450
27.3 转换模块  451
27.3.1 安装转换模块   451
27.3.2 使用转换模块   452
27.3.3 相关转换模块介绍   452
第28 章 vue-loader  456
28.1 如何配置  456
28.2 包含内容  456
28.3 特性介绍  457
28.4 常见问题解析   458
28.5 源码解析  459
28.6 工具包介绍 465
第29 章 PostCSS   467
29.1 安装  467
29.2 配置  467
29.3 命令  468
29.4 插件  471
第30 章 拓展篇 473
30.1 Composition Event   473
30.2 ES 6   474
30.2.1 模块  475
30.2.2 let   479
30.2.3 const  481
30.3 object  482
30.4 函数柯里化 488
30.4.1 动态创建函数   488
30.4.2 参数复用  489
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Vue.js权威指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript趣味编程15例/达人迷
概述
关于本书
给选人迷们的假设
本书中的图标
更多内容
下一步
第1部分什么是JavaScript？注意！JaveScript真的很棒！
第1章网络编程
什么是编程
谈起计算机
选择一种语言
JavaScript是什么
准备好你的浏览器
打开Web开发工具
介绍JavaScript控制台（Console）
运行第一个JavaScript命令
与数学快乐相处
第2章理解语法
准确地表达你的意思
写一条语句
遵守规则
在字符串中使用文本
在代码中使用文本
注意空白
写注释
第3章给予和接收效据
掌握变量
创建变量
在变量中存储数据
理解数据类型
字符串数据类型
数字数据类型
布尔数据类型
提示用户输入
存储用户输入
响应输入
使用alert（）
使用document.write（）
结合输入和输出
第4章修改Web应用程序
介绍JSFiddIe
查看修改
Playing with fiddles
利用CSS
修改HTML
修改JavaScript
创建一个JSFiddle账户
分章你的修改
保存你的应用程序
第2部分网络动画
第5章JavaScript和HTML
编写HTML
看看没有HTML时文本的样子
使用HTML：标签相关
看一个网页的基本结构
创建你的第一个网页
了解HTML元素
添加属性元素
使用JavaScript改变HTML
用getElementByld获取元素
使用innerHTML获取元素中的内容
尝试一下：更改列表
第6章JavaScript和CSS
会见JavaScript的机顺丰Douglas
CSS基础
CSS选择器
CSS声明
CSS属性提供风格
使用CSS颜色
调整CSS元素大小
了解串联
CSS定位元素
定制专属的JavaScript机嚣人
第7章构建动画机器人
用JavaScript更改CSS
用JavaScript修改Douglas
对Douglas进行试验
让Douglas跳舞
处理事件
编写一个监听器
创建一个JavaScript动荀
给另一个元素添加动画
添加第二个动画函数
第3部分获取操作
第8章用操作赦建立你梦想中的车
了解操作数
使用对象
配置梦想中的车
第9章混合使用运算符
介绍超缓计算器
复制超级计算器
使用超级计算器
操作字符串和算术运算符的超级计算器
超级计算器与比较运算符
超级计算器的技巧
第10章创建JavaScript文字游戏
创建一个可变的故事
创建单词替换游戏
编写HTML
样式化文字游戏
编写JavaScript代码
整理程序
第4部分数组和函数
第11章创建和修改数组
什么是数组
创建和访问数组
存储不同类型的数据
获取数组值
在数组中使用变量
改变效组元素的值
使用数组方法
学习数组中的方法
toString（）和valueOf（）
concat（）
indexOf（）
join（）
lastlndexOf（）
pop（）
push（）
reverse（）
shift（）和unshift（）
slice（）
sort（）
splice（）
第12章函数
理解函数
内置函数
自定义函数
了解函数的组成
定义函数
给定函数头
填写函数体
调用函数
定义形式参数
传递实际参数
返回值
创建Function Junction
浏览HTML
仔细阅读CSS
编写Function Junction的JavaScript
轮到你了：加长轨道
……
第13章创建一个心愿单程序
第5部分自由选择
第14章使用If…Else语句做判断
第15章用switch做不一样的事情
第16章开启探险之旅
第6部分循环
第17章什么是For循环
第18章使用While循环
第19章创建一个柠檬水摊
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript趣味编程15例/达人迷
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript从入门到精通（标准版）
第1章  JavaScript基础
1.1  JavaScript概述
1.1.1  JavaScript发展历史
1.1.2  ECMAScript与JavaScript的关系
1.1.3  ECMAScript版本变化
1.1.4  ECMAScript5和ECMAScript6
1.2  JavaScript相关概念
1.2.1  JavaScript核心
1.2.2  文档对象模型
1.2.3  浏览器对象模型
第2章  初次使用JavaScript
2.1  在网页中嵌入JavaScript脚本
2.1.1  编写脚本
2.1.2  脚本位置
2.1.3  设置延迟执行
2.1.4  设置异步响应
2.2  执行JavaScript程序
2.2.1  执行过程
2.2.2  预编译
2.2.3  代码块
2.2.4  响应事件
2.2.5  设计动态脚本
第3章  代码测试和错误处理
3.1  浏览器与JavaScript
3.1.1  浏览器内核
3.1.2  浏览器错误报告
3.2  JavaScript开发工具
3.2.1  JavaScript编辑器
3.2.2  JavaScript测试和调试
3.2.3  使用控制台
3.3  错误处理
3.3.1  认识错误类型
3.3.2  使用try-catch
3.3.3  使用finally
3.3.4  使用throw
3.3.5  抛出时机
3.3.6  错误事件
第4章  JavaScript基本语法
4.1  基本词法
4.1.1  字符编码
4.1.2  区分大小写
4.1.3  标识符
4.1.4  直接量
4.1.5  关键字和保留字
4.1.6  分隔符
4.1.7  注释
4.1.8  转义序列
4.2  使用变量
4.2.1  声明变量
4.2.2  赋值变量
4.2.3  变量的作用域
4.2.4  避免变量污染
4.3  数据类型
4.3.1  基本数据类型
4.3.2  数值
4.3.3  字符串
4.3.4  布尔值
4.3.5  Null
4.3.6  Undefined
4.4  严格模式
4.4.1  启用严格模式
4.4.2  严格模式的执行限制
4.5  案例实战
4.5.1  使用typeof检测类型
4.5.2  使用constructor检测类型
4.5.3  封装类型检测方法：toString()

4.5.4  转换为字符串
4.5.5  转换数字模式
4.5.6  设置数字显示的小数位数
4.5.7  转换为数字
4.5.8  转换为布尔值
4.5.9  转换为对象
4.5.10  把对象转换为值
4.5.11  强制转换
第5章  使用运算符
5.1  运算符概述
5.2  算术运算符
5.2.1  加法运算
5.2.2  减法运算
5.2.3  乘法运算
5.2.4  除法运算
5.2.5  余数运算
5.2.6  取反运算
5.2.7  递增和递减
5.3  逻辑运算符
5.3.1  逻辑与运算
5.3.2  逻辑或运算符
5.3.3  逻辑非运算符
5.3.4  案例：逻辑运算训练
5.4  关系运算符
5.4.1  大小比较
5.4.2  案例：包含检测
5.4.3  案例：等值检测
5.5  赋值运算符
5.6  对象操作运算符
5.6.1  new运算符
5.6.2  delete运符
5.6.3  中括号和点号运算符
5.6.4  小括号运算符
5.7  其他运算符
5.7.1  条件运算符
5.7.2  逗号运算符
5.7.3  void运算符
5.8  案例实战
5.8.1  使用表达式
5.8.2  连续运算
5.8.3  把命令转换为表达式
5.8.4  表达式中的函数
第6章  设计程序结构
6.1  语句概述
6.1.1  表达式语句
6.1.2  复合语句
6.1.3  声明语句
6.1.4  空语句
6.2  分支结构
6.2.1  if语句
6.2.2  条件嵌套
6.2.3  设计分支结构
6.2.4  switch语句
6.2.5  default从句
6.2.6  比较if和switch
6.2.7  优化分支结构
6.3  循环结构
6.3.1  while语句
6.3.2  do/while语句
6.3.3  for语句
6.3.4  for/in语句
6.3.5  比较while和for
6.3.6  优化循环结构
6.4  结构跳转
6.4.1  标签语句
6.4.2  break语句
6.4.3  continue语句
6.5  案例实战
6.5.1  提升分支运算性能
6.5.2  提升循环运算性能
6.5.3  设计杨辉三角
第7章  使用数组
7.1  定义数组
7.1.1  构造数组
7.1.2  数组直接量
7.2  使用数组
7.2.1  存取数组元素
7.2.2  数组长度
7.2.3  对象与数组
7.2.4  定义多维数组
7.3  使用数组对象
7.3.1  检索数组
7.3.2  操作元素
7.3.3  操作子数组
7.3.4  数组排序
7.3.5  使用排序函数
7.3.6  数组与字符串的转换
7.3.7  定位
7.3.8  迭代
7.3.9  汇总
7.4  案例实战
7.4.1  快速交换
7.4.2  数组下标
7.4.3  扩展数组方法
7.4.4  设计迭代器
7.4.5  使用迭代器
7.4.6  使用数组维度
第8章  使用函数
8.1  定义函数
8.1.1  声明函数
8.1.2  构造函数
8.1.3  函数直接量
8.1.4  定义嵌套函数
8.1.5  比较定义函数的方法
8.2  使用函数
8.2.1  函数返回值
8.2.2  调用函数
8.2.3  函数作用域
8.3  使用参数
8.3.1  定义参数
8.3.2  使用arguments对象
8.3.3  使用callee回调函数
8.3.4  应用arguments对象
8.4  使用函数对象
8.4.1  获取函数形参个数
8.4.2  自定义属性
8.4.3  使用call()和apply()
8.4.4  使用bind()
8.5  使用this
8.5.1  使用this
8.5.2  this安全策略
8.5.3  应用this
8.5.4  函数调用模式
8.5.5  函数的标识符
8.6  使用闭包函数
8.6.1  认识闭包函数
8.6.2  使用闭包
8.6.3  定义闭包存储器
8.6.4  在事件处理中应用闭包
8.7  案例实战
8.7.1  绑定函数
8.7.2  链式语法
8.7.3  函数节流
8.7.4  分支函数
8.7.5  惰性载入函数
8.7.6  惰性求值
8.7.7  记忆
8.7.8  构建模块
8.7.9  柯里化
8.7.10  高阶函数
8.7.11  递归运算
8.7.12  尾递归算法
第9章  使用对象
9.1  创建对象
9.1.1  使用构造函数创建对象
9.1.2  使用对象直接量创建对象
9.1.3  使用create()方法创建对象
9.2  操作对象
9.2.1  引用对象
9.2.2  复制对象
9.2.3  克隆继承
9.2.4  销毁对象
9.3  操作属性
9.3.1  定义属性
9.3.2  访问属性
9.3.3  赋值属性
9.3.4  删除属性
9.3.5  使用方法
9.3.6  配置特性
9.3.7  检测特性
9.4  使用方法
9.4.1  使用toString()
9.4.2  使用valueOf()
9.4.3  检测私有属性
9.4.4  检测枚举属性
9.4.5  检测原型对象
9.4.6  静态方法
9.5  使用原型
9.5.1  定义原型
9.5.2  比较原型属性和本地属性
9.5.3  应用原型
9.5.4  原型域和原型域链
9.5.5  原型继承
9.5.6  扩展原型方法
9.6  案例实战
9.6.1  设计工厂模式
9.6.2  设计类继承
9.6.3  设计构造原型模式
9.6.4  设计动态原型模式
9.6.5  设计实例继承
9.6.6  惰性实例化
9.6.7  安全构造对象
第10章  BOM操作
10.1  使用window对象
10.1.1  访问浏览器窗口
10.1.2  全局作用域
10.1.3  使用系统测试方法
10.1.4  打开和关闭窗口
10.1.5  使用框架集
10.1.6  控制窗口位置
10.1.7  控制窗口大小
10.1.8  使用定时器
10.2  使用navigator对象
10.2.1  浏览器检测方法
10.2.2  检测浏览器类型和版本号
10.2.3  检测客户操作系统
10.2.4  检测插件
10.3  使用location对象
10.4  使用history对象
10.5  使用screen对象
10.6  使用document对象
10.6.1  访问文档对象
10.6.2  动态生成文档内容
10.7  案例实战
10.7.1  使用远程脚本
10.7.2  设计远程交互
10.7.3  使用浮动框架
10.7.4  封装用户代理检测
第11章  DOM操作
11.1  DOM基础
11.2  使用节点
11.2.1  节点类型
11.2.2  节点名称和值
11.2.3  节点关系
11.2.4  访问节点
11.2.5  操作节点
11.3  使用文档节点
11.3.1  访问文档子节点
11.3.2  访问文档信息
11.3.3  访问文档元素
11.3.4  访问文档集合
11.3.5  使用HTML5 Document
11.4  使用元素节点
11.4.1  访问元素
11.4.2  遍历元素
11.4.3  创建元素
11.4.4  复制节点
11.4.5  插入节点
11.4.6  删除节点
11.4.7  替换节点
11.4.8  获取焦点元素
11.4.9  检测包含节点
11.5  使用文本节点
11.5.1  访问文本节点
11.5.2  创建文本节点
11.5.3  操作文本节点
11.5.4  读取HTML字符串
11.5.5  插入HTML字符串
11.5.6  替换HTML字符串
11.5.7  插入文本
11.6  使用文档片段节点
11.7  使用属性节点
11.7.1  访问属性节点
11.7.2  读取属性值
11.7.3  设置属性值
11.7.4  删除属性
11.7.5  使用类选择器
11.7.6  自定义属性
11.8  使用范围
11.8.1  创建范围
11.8.2  选择范围
11.8.3  设置范围
11.8.4  操作范围内容
11.8.5  插入范围内容
11.8.6  折叠范围
11.8.7  比较范围
11.8.8  复制和清除范围
11.9  使用CSS选择器
11.10  案例实战
11.10.1  设计动态脚本
11.10.2  使用script加载远程数据
11.10.3  使用script实现异步交互
11.10.4  使用JSONP
11.10.5  设计动态表格
11.10.6  访问DOM集合
11.10.7  在微博分享选中文本
第12章  事件处理
12.1  事件基础
12.1.1  事件模型
12.1.2  事件流
12.1.3  事件类型
12.1.4  绑定事件
12.1.5  事件处理函数
12.1.6  注册事件
12.1.7  销毁事件
12.1.8  使用event对象
12.1.9  事件委托
12.2  使用鼠标事件
12.2.1  鼠标点击
12.2.2  鼠标移动
12.2.3  鼠标经过
12.2.4  鼠标来源
12.2.5  鼠标定位
12.2.6  鼠标按键
12.3  使用键盘事件
12.3.1  键盘事件属性
12.3.2  键盘响应顺序
12.4  使用页面事件
12.4.1  页面初始化
12.4.2  结构初始化
12.4.3  页面卸载
12.4.4  窗口重置
12.4.5  页面滚动
12.4.6  错误处理
12.5  使用UI事件
12.5.1  焦点处理
12.5.2  选择文本
12.5.3  字段值变化监测
12.5.4  提交表单
12.5.5  重置表单
12.5.6  剪贴板数据
12.6  案例实战
12.6.1  封装事件
12.6.2  模拟事情
12.6.3  设计弹出对话框
12.6.4  设计遮罩层
12.6.5  自定义事件
12.6.6  设计事件触发模型
12.6.7  应用事件模型
第13章  使用正则表达式与表单验证
13.1  正则表达式操作基础
13.1.1  定义正则表达式
13.1.2  访问正则表达式对象
13.1.3  执行匹配操作
13.1.4  访问匹配信息
13.1.5  条件检测
13.2  正则表达式语法基础
13.2.1  字符描述
13.2.2  字符范围
13.2.3  选择操作
13.2.4  重复类量词
13.2.5  惰性模式
13.2.6  边界量词
13.2.7  声明量词
13.2.8  表达式分组
13.2.9  子表达式引用
13.3  案例实战
第14章  字符串处理与表单开发
14.1  字符串操作基础
14.1.1  定义字符串
14.1.2  字符串的值和字符长度
14.1.3  字符串连接
14.1.4  字符串查找
14.1.5  字符串截取
14.1.6  字符串替换
14.1.7  字符串大小转换
14.1.8  字符串比较
14.1.9  字符串与数组转换
14.1.10  字符串格式化
14.1.11  字符编码和解码
14.1.12  Unicode编码和解码
14.2  案例实战
14.2.1  访问表单对象
14.2.2  访问表单元素
14.2.3  访问字段属性
14.2.4  访问文本框的值
14.2.5  文本框过滤
14.2.6  切换焦点
14.2.7  访问选择框的值
14.2.8  编辑选项
14.2.9  字符串替换的高级应用
14.2.10  字符串修剪
14.2.11  检测特殊字符
14.2.12  自定义加密和解密
14.2.13  表单序列化
14.2.14  设计文本编辑器
第15章  CSS脚本化与网页特效
15.1  CSS脚本化基础
15.1.1  访问CSS行内样式
15.1.2  使用style对象
15.1.3  使用styleSheets对象
15.1.4  使用selectorText对象
15.1.5  编辑样式
15.1.6  添加样式
15.1.7  访问计算样式
15.2  元素大小
15.2.1  访问CSS宽度和高度
15.2.2  把值转换为整数
15.2.3  使用offsetWidth和offset Height
15.2.4  元素尺寸
15.2.5  视图尺寸
15.2.6  窗口尺寸
15.3  位置偏移
15.3.1  窗口位置
15.3.2  相对位置
15.3.3  定位位置
15.3.4  设置偏移位置
15.3.5  设置相对位置
15.3.6  鼠标指针绝对位置
15.3.7  鼠标指针相对位置
15.3.8  滚动条位置
15.3.9  设置滚动条位置
15.4  显示隐藏
15.4.1  可见性
15.4.2  透明度
15.5  案例实战
15.5.1  滑动
15.5.2  渐显
第16章  使用Ajax实现异步通信
16.1  使用XML数据
16.1.1  新建XML文档
16.1.2  访问XML数据
16.1.3  创建XML DOM对象
16.1.4  加载XML数据
16.1.5  显示XML数据
16.1.6  案例：在网页中显示XML数据
16.1.7  案例：异步加载XML数据
16.2  使用JSON数据
16.2.1  JSON结构
16.2.2  案例：JSON与XML格式比较
16.2.3  案例：JSON数据优化
16.2.4  案例：解析JSON
16.2.5  案例：序列化JSON
16.3  使用Ajax
16.3.1  HTTP头部信息
16.3.2  定义XMLHttpRequest对象
16.3.3  建立XMLHttpRequest连接
16.3.4  发送GET请求
16.3.5  发送POST请求
16.3.6  转换串行化字符串
16.3.7  跟踪状态
16.3.8  中止请求
16.3.9  获取XML数据
16.3.10  获取HTML文本
16.3.11  获取JavaScript脚本
16.3.12  获取JSON数据
16.3.13  获取纯文本
16.3.14  获取头部信息
16.4  案例实战
16.4.1  封装异步请求操作
16.4.2  动态显示提示信息
16.4.3  动态查询记录集
16.4.4  记录集分页显示
16.4.5  设计Tab面板
16.4.6  关键字匹配
16.4.7  使用灯标
第17章  本地数据存储571
17.1  使用cookie
17.1.1  写入cookie信息
17.1.2  读取cookie信息
17.1.3  修改和删除cookie信息
17.1.4  附加cookie信息
17.1.5  封装cookie操作
17.1.6  案例：打字游戏
17.2  使用Web Storage
17.2.1  基本操作
17.2.2  案例：设计网页皮肤
17.2.3  案例：跟踪localStorage数据
17.2.4  案例：设计计数器
17.3  使用Web SQL
17.3.1  基本操作
17.3.2  案例：创建本地数据库
17.3.3  案例：批量存储本地数据
17.4  案例实战
第18章  JavaScript图形设计
18.1  HTML 5 canvas基础
18.1.1  在页面中插入canvas元素
18.1.2  绘制图形的基本方法
18.1.3  使用canvas
18.2  绘制图形
18.2.1  绘制直线
18.2.2  绘制矩形
18.2.3  绘制圆形
18.2.4  绘制多边形
18.2.5  绘制曲线
18.2.6  绘制二次方曲线
18.2.7  绘制三次方曲线
18.3  设置图形样式
18.3.1  设置线型
18.3.2  绘制线性渐变
18.3.3  绘制径向渐变
18.3.4  绘制图案
18.3.5  设置不透明度
18.3.6  设置阴影
18.4  操作图形
18.4.1  保存和恢复canvas状态
18.4.2  清除绘图
18.4.3  移动坐标
18.4.4  旋转坐标
18.4.5  缩放图形
18.4.6  变换矩阵
18.4.7  组合图形
18.4.8  裁切路径
18.5  绘制文字
18.5.1  绘制填充文字
18.5.2  设置文字属性
18.5.3  绘制轮廓文字
18.5.4  测量宽度
18.6  绘制图像
18.6.1  导入图像
18.6.2  变换图像
18.6.3  裁切图像
18.6.4  图像平铺
18.6.5  像素处理
18.7  案例实战
18.7.1  设计canvas动画
18.7.2  保存绘图
第19章  离线应用
19.1  HTML5离线应用基础
19.1.1  认识HTML5离线应用
19.1.2  浏览器支持
19.1.3  使用manifest文件
19.1.4  使用离线缓存
19.1.5  监听离线存储
19.2  案例实战
19.2.1  缓存首页
19.2.2  离线编辑内容
19.2.3  离线跟踪
第20章  多线程处理
20.1  Web Workers基础
20.1.1  认识Web Workers
20.1.2  浏览器支持
20.1.3  创建Web Workers
20.1.4  Web Workers通信674
20.1.5  案例：使用Web Workers675
20.2  案例实战
20.2.1  后台运算
20.2.2  数值过滤
20.2.3  并发处理
20.2.4  线程通信
20.2.5  Fibonacci数列运算
第21章  文件操作
21.1  访问文件域
21.2  使用Blob对象
21.2.1  在文件域中访问Blob对象
21.2.2  创建Blob对象
21.2.3  截取Blob对象
21.2.4  保存Blob对象
21.3  使用FileReader对象
21.3.1  读取并显示文件
21.3.2  监测读取操作
21.4  使用缓存对象
21.4.1  使用ArrayBuffer对象
21.4.2  使用ArrayBufferView对象
21.4.3  使用DataView对象
21.5  使用FileSystem
21.5.1  访问文件系统
21.5.2  申请配额
21.5.3  创建文件
21.5.4  写入文件
21.5.5  添加数据
21.5.6  读取文件
21.5.7  复制文件
21.5.8  删除文件
21.5.9  创建目录
21.5.10  读取目录
21.5.11  删除目录
21.5.12  复制目录
21.5.13  移动和重命名目录
21.5.14  使用filesystem:URL
21.6  案例实战
第22章  使用History
22.1  History API基础
22.1.1  History API处理方式
22.1.2  浏览器兼容和扩展
22.1.3  操作历史记录
22.2  案例实战
22.2.1  设计无刷新页面导航
22.2.2  设计主题宣传网站
22.2.3  设计图片画廊
22.2.4  设计历史恢复
第23章  案例实战
23.1  设计折叠面板
23.2  设计计算器
23.3  设计万年历
23.4  设计俄罗斯方块
23.4.1  设计游戏界面
23.4.2  设计游戏模型
23.4.3  实现游戏功能
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript从入门到精通（标准版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>前端架构：从入门到微前端
第1章  前端架构	1
1.1  为什么需要软件架构	2
1.1.1  什么是软件架构	2
1.1.2  开发人员需要怎样的软件架构	3
1.2  架构的设计	4
1.2.1  收集架构需求	5
1.2.2  架构模式	10
1.2.3  架构设计方法	11
1.2.4  生成架构产出物	15
1.3  架构设计原则	16
1.3.1  不多也不少	16
1.3.2  演进式	17
1.3.3  持续性	19
1.4  前端架构发展史	20
1.5  前端架构设计：层次设计	21
1.5.1  系统内架构	22
1.5.2  应用级架构	23
1.5.3  模块级架构	24
1.5.4  代码级：规范与原则	25
1.6  小结	25
第2章  项目中的技术架构实施	27
2.1  技术负责人与架构	28
2.2  技术准备期：探索技术架构	30
2.2.1  架构设计	30
2.2.2  概念验证：架构的原型证明	30
2.2.3  迭代0：搭建完整环境	31
2.2.4  示例项目代码：体现规范与原则	32
2.3  业务回补期：应对第一次Deadline	33
2.3.1  追补业务	33
2.3.2  测试：实践测试策略	34
2.3.3  上线准备	35
2.3.4  第一次部署：验证部署架构	35
2.3.5  提升团队能力	36
2.4  成长优化期：技术债务与演进	39
2.4.1  偿还技术债务	40
2.4.2  优化开发体验	41
2.4.3  带来技术挑战	41
2.4.4  架构完善及演进	42
2.5  小结	43
第3章  架构基础：工作流设计	44
3.1  代码之旅：基础规范	45
3.2  代码组织决定应用架构	47
3.3  统一代码风格，避免架构腐烂	49
3.4  使用Lint规范代码	50
3.5  规范化命名，提升可读性	51
3.5.1  命名法	51
3.5.2  CSS及其预处理器命名规则	52
3.5.3  组件命名规则	53
3.6  规范开发工具，提升开发效率	54
3.7  项目的文档化：README搭建指南	55
3.8  绘制架构图：减少沟通成本	56
3.8.1  代码生成	56
3.8.2  专业工具	57
3.8.3  软件附带工具	57
3.8.4  在线工具	58
3.9  可编辑文档库：提升协作性	59
3.10  记录架构决策：轻量级架构决策记录	59
3.11  可视化文档：注重代码的可读性	60
3.12  看板工具：统一管理业务知识	62
3.13  提交信息：每次代码提交文档化	63
3.13.1  项目方式	63
3.13.2  开源项目方式	64
3.13.3  对比不同文档方式	65
3.14  通过流程化提高代码质量	66
3.14.1  代码预处理	67
3.14.2  手动检视代码	69
3.15  使用工具提升代码质量	70
3.15.1  代码扫描工具	70
3.15.2  IDE 快速重构	71
3.16  测试策略	72
3.16.1  单元测试	73
3.16.2  组件测试	75
3.16.3  契约/接口测试	76
3.17  小结	77
第4章  架构基础：设计构建流	78
4.1  依赖管理工具	81
4.2  软件包源管理	83
4.3  前端代码的打包	88
4.4  设计构建流	89
4.5  持续交付问题	99
4.6  小结	105
第5章  架构设计：多页面应用	107
5.1  为什么不需要单页面应用	108
5.1.1  构建成本	108
5.1.2  学习成本	109
5.1.3  后台渲染成本	110
5.1.4  应用架构的复杂性	111
5.2  简单多页面应用的开发	112
5.2.1  选择UI库及框架	113
5.2.2  jQuery和Bootstrap仍然好用	113
5.2.3  不使用框架：You Don’t Need xxx	114
5.3  复杂多页面应用的开发	115
5.3.1  模板与模板引擎原理	115
5.3.2  基于字符串的模板引擎设计	116
5.3.3  基于JavaScript的模板引擎设计	117
5.3.4  双向绑定原理及实践	120
5.3.5  前端路由原理及实践	124
5.3.6  两种路由类型	124
5.3.7  自造Hash路由管理器	125
5.4  避免散弹式架构	127
5.4.1  散弹式架构应用	127
5.4.2  如何降低散弹性架构的出现频率	128
5.5  小结	130
第6章  架构设计：单页面应用	131
6.1  前端MV*原理	132
6.2  前端MVC架构原理	133
6.3  进阶：设计双向绑定的MVC	135
6.4  前端框架选型	138
6.4.1  选型考虑因素	139
6.4.2  框架类型：大而全还是小而美	140
6.4.3  框架：React	142
6.4.4  框架：Angular	143
6.4.5  框架：Vue	145
6.4.6  选型总结	146
6.5  启动前端应用	146
6.5.1  创建应用脚手架	147
6.5.2  构建组件库	148
6.5.3  考虑浏览器的支持范围	150
6.6  服务端渲染	155
6.6.1  非JavaScript语言的同构渲染	155
6.6.2  基于JavaScript语言的同构渲染	157
6.6.3  预渲染	158
6.7  小结	159
第7章  架构设计：组件化架构	161
7.1  前端的组件化架构	161
7.2  基础：风格指南	163
7.2.1  原则与模式	163
7.2.2  色彩	165
7.2.3  文字排印	167
7.2.4  布局	168
7.2.5  组件	173
7.2.6  文档及其他	174
7.2.7  维护风格指南	174
7.3  重用：模式库	175
7.3.1  组件库	176
7.3.2  组件类型	178
7.3.3  隔离：二次封装	183
7.4  进阶：设计系统	184
7.4.1  设立原则，创建模式	186
7.4.2  原子设计	188
7.4.3  维护与文档	191
7.5  跨框架组件化	192
7.5.1  框架间互相调用：Web Components	192
7.5.2  跨平台模式库	193
7.6  小结	194
第8章  架构设计：前后端分离架构	195
8.1  前后端分离	196
8.1.1  为什么选择前后端分离	196
8.1.2  前后端分离的开发模式	197
8.1.3  前后端分离的API设计	198
8.2  API管理模式：API文档管理方式	202
8.3  前后端并行开发：Mock Server	205
8.3.1  什么是Mock Server	205
8.3.2  三种类型Mock Server的比较	207
8.3.3  Mock Server的测试：契约测试	212
8.3.4  前后端并行开发总结	217
8.4  服务于前端的后端：BFF	218
8.4.1  为什么使用BFF	218
8.4.2  前后端如何实现BFF	221
8.4.3  使用GraphQL作为BFF	223
8.5  小结	228
第9章  架构设计：微前端架构	229
9.1  微前端	230
9.1.1  微前端架构	230
9.1.2  为什么需要微前端	232
9.2  微前端的技术拆分方式	234
9.2.1  路由分发式	235
9.2.2  前端微服务化	236
9.2.3  组合式集成：微应用化	237
9.2.4  微件化	238
9.2.5  前端容器：iframe	239
9.2.6  结合Web Components构建	240
9.3  微前端的业务划分方式	241
9.3.1  按照业务拆分	242
9.3.2  按照权限拆分	243
9.3.3  按照变更的频率拆分	243
9.3.4  按照组织结构拆分	244
9.3.5  跟随后端微服务拆分	244
9.3.6  DDD与事件风暴	245
9.4  微前端的架构设计	245
9.4.1  构建基础设施	246
9.4.2  提取组件与模式库	246
9.4.3  应用通信机制	247
9.4.4  数据管理	248
9.4.5  专用的构建系统	249
9.5  微前端的架构模式	249
9.5.1  基座模式	250
9.5.2  自组织模式	251
9.6  微前端的设计理念	252
9.6.1  中心化：应用注册表	252
9.6.2  标识化应用	253
9.6.3  生命周期	253
9.6.4  高内聚，低耦合	254
9.7 “微”害架构	254
9.7.1  微架构	256
9.7.2  架构的演进	256
9.7.3  微架构带来的问题	257
9.7.4  解决方式：可拆分式微架构	259
9.8  小结	259
第10章  微前端实战	261
10.1  遗留系统：路由分发	262
10.1.1  路由分发式微前端	263
10.1.2  路由分发的测试	264
10.2  遗留系统微前端：使用iframe作为容器	266
10.3  微应用化	266
10.3.1  微应用化	267
10.3.2  架构实施	269
10.3.3  测试策略	271
10.4  前端微服务化	272
10.4.1  微服务化设计方案	273
10.4.2  通用型前端微服务化：Single-SPA	276
10.4.3  定制型前端微服务化：Mooa	279
10.4.4  前端微服务化总结	283
10.5  组件化微前端：微件化	283
10.5.1  运行时编译微件化：动态组件渲染	284
10.5.2  预编译微件化	287
10.6  面向未来：Web Components	288
10.6.1  Web Components	289
10.6.2  纯Web Components方式	291
10.6.3  结合Web Components方式	293
10.7  小结	295
第11章  架构演进：演进式架构	297
11.1  更新	298
11.1.1  依赖和框架版本升级	299
11.1.2  语言版本升级	300
11.1.3  遗留系统重搭	300
11.2  迁移	301
11.2.1  架构迁移的模式	302
11.2.2  迁移方式：微前端	303
11.2.3  迁移方式：寻找容器	303
11.3  重构	304
11.3.1  架构重构	304
11.3.2  组件提取、函数提取、样式提取	305
11.3.3  引入新技术	306
11.4  重写	307
11.4.1  重写能解决问题吗	308
11.4.2  梳理业务	309
11.4.3  沉淀新架构	310
11.5  重新架构	311
11.5.1  重搭架构	311
11.5.2  增量改写	312
11.6  小结	313
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>前端架构：从入门到微前端
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node与Express开发
序　　XIV
前言　　XV
第1章　初识Express　　1
1.1　JavaScript革命　　1
1.2　初识Express　　2
1.3　Express 简史　　3
1.4　升级到Express 4.0　　4
1.5　Node：一种新型Web 服务器　　4
1.6　Node 的生态系统　　5
1.7　授权　　6
第2章　从Node开始　　8
2.1　获取Node　　8
2.2　使用终端　　9
2.3　编辑器　　10
2.4　npm　　11
2.5　用Node 实现的简单Web服务器　　12
2.5.1　Hello World　　12
2.5.2　事件驱动编程　　13
2.5.3　路由　　13
2.5.4　静态资源服务　　14
2.6　走向Express　　16
第3章　省时省力的Express　　17
3.1　脚手架　　17
3.2　草地鹨旅行社网站　　18
3.3　初始步骤　　18
3.3.1　视图和布局　　21
3.3.2　视图和静态文件　　24
3.3.3　视图中的动态内容　　24
3.4　小结　　25
第4章　工欲善其事，必先利其器　　26
4.1　最佳实践　　26
4.2　版本控制　　27
4.3　针对本书如何使用Git　　27
4.3.1　如果你要自己动手　　28
4.3.2　如果你要使用官方存储库　　29
4.4　npm 包　　29
4.5　项目元数据　　31
4.6　Node 模块　　31
第5章　质量保证　　33
5.1　QA：值得吗　　34
5.2　逻辑与展示　　35
5.3　测试的类型　　35
5.4　QA 技术概览　　35
5.5　运行你的服务器　　36
5.6　页面测试　　36
5.7　跨页测试　　40
5.8　逻辑测试　　43
5.9　去毛　　43
5.10　链接检查　　44
5.11　用Grunt 实现自动化　　44
5.12　持续集成　　46
第6章　请求和响应对象　　48
6.1　URL 的组成部分　　48
6.2　HTTP 请求方法　　49
6.3　请求报头　　50
6.4　响应报头　　50
6.5　互联网媒体类型　　51
6.6　请求体　　51
6.7　参数　　51
6.8　请求对象　　51
6.9　响应对象　　53
6.10　获取更多信息　　55
6.11　小结　　56
6.11.1　内容渲染　　56
6.11.2　处理表单　　57
6.11.3　提供一个API　　58
第7章　Handlebars 模板引擎　　60
7.1　唯一一条绝对规则　　61
7.2　选择模板引擎　　61
7.3　Jade：不走寻常路　　62
7.4　Handlebars 基础　　63
7.4.1　注释　　64
7.4.2　块级表达式　　64
7.4.3　服务器端模板　　66
7.4.4　视图和布局　　67
7.4.5　在Express 中使用（或不使用）布局　　69
7.4.6　局部文件　　69
7.4.7　段落　　71
7.4.8　完善你的模板　　72
7.4.9　客户端Handlebars　　73
7.5　小结　　75
第8章　表单处理　　76
8.1　向服务器发送客户端数据　　76
8.2　HTML 表单　　76
8.3　编码　　77
8.4　处理表单的不同方式　　78
8.5　Express 表单处理　　79
8.6　处理AJAX 表单　　81
8.7　文件上传　　83
8.8　jQuery 文件上传　　85
第9章　Cookie 与会话　　88
9.1　凭证的外化　　89
9.2　Express 中的Cookie　　90
9.3　检查Cookie　　91
9.4　会话　　92
9.4.1　内存存储　　92
9.4.2　使用会话　　93
9.5　用会话实现即显消息　　93
9.6　会话的用途　　95
第10章　中间件　　96
10.1　常用中间件　　100
10.2　第三方中间件　　102
第11章　发送邮件　　103
11.1　SMTP、MSA 和MTA　　103
11.2　接收邮件　　104
11.3　邮件头　　104
11.4　邮件格式　　104
11.5　HTML 邮件　　105
11.6　Nodemailer　　105
11.6.1　发送邮件　　106
11.6.2　将邮件发送给多个接收者　　107
11.7　发送批量邮件的更佳选择　　108
11.8　发送HTML 邮件　　108
11.8.1　HTML 邮件中的图片　　108
11.8.2　用视图发送HTML 邮件　　109
11.8.3　封装邮件功能　　 111
11.9　将邮件作为网站监测工具　　112
第12章　与生产相关的问题　　113
12.1　执行环境　　113
12.2　环境特定配置　　114
12.3　扩展你的网站　　115
12.3.1　用应用集群扩展　　116
12.3.2　处理未捕获的异常　　118
12.3.3　用多台服务器扩展　　121
12.4　网站监控　　122
12.4.1　第三方正常运行监控　　122
12.4.2　应用程序故障　　122
12.5　压力测试　　123
第13章　持久化　　124
13.1　文件系统持久化　　124
13.2　云持久化　　126
13.3　数据库持久化　　126
13.3.1　关于性能　　127
13.3.2　设置MongoDB　　127
13.3.3　Mongoose　　128
13.3.4　使用Mongoose连接数据库　　128
13.3.5　创建模式和模型　　129
13.3.6　添加初始数据　　130
13.3.7　获取数据　　131
13.3.8　添加数据　　133
13.3.9　用MongoDB存储会话数据　　134
第14章　路由　　137
14.1　路由和SEO　　139
14.2　子域名　　139
14.3　路由处理器是中间件　　140
14.4　路由路径和正则表达式　　141
14.5　路由参数　　142
14.6　组织路由　　143
14.7　在模块中声明路由　　143
14.8　按逻辑对处理器分组　　144
14.9　自动化渲染视图　　145
14.10　其他的路由组织方式　　146
第15章　REST API 和JSON　　147
15.1　JSON和XML　　148
15.2　我们的API　　148
15.3　API 错误报告　　149
15.4　跨域资源共享　　150
15.5　我们的数据存储　　150
15.6　我们的测试　　151
15.7　用Express 提供API　　152
15.8　使用REST 插件　　153
15.9　使用子域名　　155
第16章　静态内容　　157
16.1　性能方面的考虑　　158
16.2　面向未来的网站　　158
16.2.1　静态映射　　159
16.2.2　视图中的静态资源　　160
16.2.3　CSS 中的静态资源　　161
16.3　服务器端JavaScript中的静态资源　　162
16.4　客户端JavaScript中的静态资源　　163
16.5　提供静态资源　　164
16.6　修改静态内容　　165
16.7　打包和缩小　　165
16.8　关于第三方库　　170
16.9　QA　　170
16.10　小结　　171
第17章　在Express 中实现MVC　　173
17.1　模型　　174
17.2　视图模型　　175
17.3　控制器　　177
17.4　小结　　179
第18章　安全　　180
18.1　HTTPS　　180
18.1.1　生成自己的证书　　181
18.1.2　使用免费的证书颁发机构　　182
18.1.3　购买证书　　182
18.1.4　对你的Express 应用启用HTTPS　　184
18.1.5　关于端口的说明　　185
18.1.6　HTTPS 和代理　　185
18.2　跨站请求伪造　　187
18.3　认证　　187
18.3.1　认证与授权　　188
18.3.2　密码的问题　　188
18.3.3　第三方认证　　188
18.3.4　把用户存在数据库中　　189
18.3.5　认证与注册和用户体验　　190
18.3.6　Passport　　190
18.3.7　基于角色的授权　　199
18.3.8　添加更多认证提供者　　200
18.4　小结　　201
第19章　集成第三方API　　202
19.1　社交媒体　　202
19.1.1　社交媒体插件和站点性能　　202
19.1.2　搜索推文　　203
19.1.3　渲染推文　　206
19.2　地理编码　　209
19.2.1　用谷歌的地理编码　　209
19.2.2　对你的数据做地理编码　　210
19.2.3　显示地图　　213
19.2.4　提升客户端性能　　215
19.3　天气数据　　216
19.4　小结　　217
第20章　调试　　218
20.1　调试的首要原则　　218
20.2　利用好REPL 和控制台　　219
20.3　利用Node 内置的调试器　　220
20.4　Node 探查器　　220
20.5　调试异步函数　　223
20.6　调试Express　　224
第21章　正式启用　　226
21.1　域名注册和托管服务　　226
21.1.1　域名系统　　227
21.1.2　安全　　227
21.1.3　顶级域名　　228
21.1.4　子域名　　229
21.1.5　域名服务器　　229
21.1.6　托管　　230
21.1.7　部署　　233
21.2　小结　　236
第22章　维护　　237
22.1　维护的原则　　237
22.1.1　有长远规划　　237
22.1.2　使用源码控制系统　　239
22.1.3　使用问题追踪系统　　239
22.1.4　良好的卫生习惯　　239
22.1.5　不要拖延　　239
22.1.6　做常规的QA检查　　240
22.1.7　监测分析　　240
22.1.8　性能优化　　240
22.1.9　潜在用户追踪优先　　241
22.1.10　防止出现“不可见的”错误　　242
22.2　代码重用及重构　　243
22.2.1　私有npm库　　243
22.2.2　中间件　　244
22.3　小结　　246
第23章　其他资源　　247
23.1　在线文档　　247
23.2　期刊　　248
23.3　Stack Overflow　　248
23.4　为Express做贡献　　250
23.5　小结　　252
关于封面　　253
关于作者　　254
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node与Express开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>边用边学JavaScript
第1章 JavaScript概述
第2章 认识HTML世界
第3章 JavaScript的基本语法
第4章 JavaScript的语句
第5章 利用JavaScript的内置对象
第6章 document对象
第7章 window对象和frame对象
第8章 表单对象
第9章 了解其他常用对象
附录1 HTML元素及相关属性
附录2 JavaScript的保留字
附录3 JavaScript的常用内置对象的属性和方法一览表
附录4 常用的浏览器对象的属性和方法一览表
后记
参考文献
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>边用边学JavaScript
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript构建Web和ArcGIS Server应用实战
第1章　HTML、CSS和JavaScript简介 1
1.1　基本的HTML页面概念 1
1.1.1　HTML DOCTYPE声明 2
1.1.2　基本标签 3
1.1.3　验证HTML代码 3
1.2　JavaScript基础 5
1.2.1　代码注释 6
1.2.2　变量 7
1.2.3　JavaScript大小写区分 7
1.2.4　变量数据类型 8
1.2.5　条件语句 9
1.2.6　循环语句 9
1.2.7　函数 10
1.2.8　对象 11
1.3　CSS基本原则 12
1.3.1　CSS语法 13
1.3.2　行内样式 15
1.3.3　内嵌样式 16
1.3.4　链接样式 16
1.4　分离HTML、CSS和JavaScript 17
1.5　总结 18
第2章　创建地图和添加图层 19
2.1　简介 19
2.2　ArcGIS API for JavaScript沙盒 20
2.3　使用ArcGIS API for JavaScript创建应用程序的基本步骤 21
2.3.1　创建Web页面HTML代码 21
2.3.2　引用ArcGIS API for JavaScript 22
2.3.3　加载模块 24
2.3.4　确保DOM可用 25
2.3.5　创建地图 25
2.3.6　创建页面内容 26
2.3.7　页面样式 27
2.3.8　完整代码 27
2.4　更多关于地图的介绍 29
2.5　使用地图服务图层 29
2.5.1　使用图层类 31
2.5.2　切片地图服务图层 32
2.5.3　动态地图服务图层 33
2.5.4　添加图层到地图 35
2.5.5　地图服务设置可见图层 35
2.5.6　设置定义表达式 36
2.5.7　地图导航 37
2.6　地图事件 40
2.7　总结 42
第3章　添加图形到地图 43
3.1　图形的四个组成部分 44
3.2　创建几何图形 45
3.3　图形符号化 46
3.4　图形分配属性 48
3.5　信息模板中展示图形属性 48
3.6　创建图形 49
3.7　添加图形到图形图层 50
3.8　图形练习 50
3.9　总结 58
第4章　特征图层 59
4.1　创建FeatureLayer对象 60
4.2　定义显示模式 62
4.2.1　快照模式 62
4.2.2　按需模式 62
4.2.3　选择模式 63
4.3　设置定义表达式 63
4.4　特征选择 63
4.5　特征图层渲染 64
4.6　特征图层练习 69
4.7　总结 74
第2　使用FindTask获取特征属性 134
7.2.1　FindParameters 135
7.2.2　FindTask 135
7.2.3　FindResult 136
7.3　总结 137
第8章　地址转换点和点转换地址 139
8.1　地理编码简介 139
8.2　使用Locator服务进
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript构建Web和ArcGIS Server应用实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript从入门到精通(黄金版)
第一部分 JavaScript和JScript初步
第二部分 编程文档对象模型
第三部分 开发组件与应用程序
第四部分 使用XML兼容浏览器
第五部分 与Java、ActiveX和插入件通信
第六部分 Shell编程
附录
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript从入门到精通(黄金版)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>战胜Javascript必做练习50题
练习1 Title栏特效
练习

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>战胜Javascript必做练习50题
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>突破JavaScript编程实例五十讲
第一篇时间日期篇
第一讲指定位置的时钟显示
第二讲表针式时钟
第三讲带按钮开关的Form时钟
第四讲年龄提示器
第五讲得到本文件的最后修改时间

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>突破JavaScript编程实例五十讲
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>javascript之美
前言 1
第1章美丽的mixin 7
类继承 7
原型 8
mixin方法10
小结 17
第2章 eval和领域特定语言 19
“eval是邪恶的”是怎么回事？19
历史和接口 20
性能 21
常见应用场景 22
模板编译器 22
速度 25
混杂多种语言 25
依赖和作用域 26
对生成的代码调错 27
二进制模式匹配 28
最后的一些想法 32
第3章小兔子的画法 33
什么是兔子？ 33
什么是小兔子？ 34
绘画和JavaScript有什么关系？35
表达形式多样，哪种正确？ 38
对课堂教学有怎样的影响？ 39
这是艺术吗？为什么它很重要？ 40
这看起来像什么？ 41
我刚读了些什么内容？ 43
第4章太多的绳子或JavaScript团队开发 45
了解代码的读者 45
代码不妨写得直白些 46
使用类继承 48
风格指南 49
代码的进化 50
小结 51
第5章打造和谐模型的构造器设计技巧 53
幽灵：同一模型有多个实例 55
用工厂函数构造的微型模型 56
构造器身份危机 58
支持扩展 58
小结 61
第6章同一个世界，同一种语言 63
一项强有力的提议 64
选择的悖论 66
全球交流无阻的脚本语言 66
第7章数学表达式的解析和求值 69
词法分析和标记 69
句法分析器和句法树 74
句法树遍历和表达式求值 80
小结 84
第8章演进 85
Backbone 87
新的可能性 88
第9章错误处理 91
假定你的代码会出错 91
处理错误 97
小结 101
第10章 Nodejs事件循环 103
事件驱动编程 103
异步，非阻断I/O 105
并发 107
为事件循环增加任务 107
第11章 JavaScript是…… 109
JavaScript是动态的109
JavaScript可以是静态的110
JavaScript可以是函数式110
JavaScript可以实现一切 111
第12章编码超乎逻辑之上 113
地下室 113
Quine悖论 113
abc猜想 119
同行评审 121
第13章 JavaScript机灵又美丽 123
宽松的美 123
达利作品的抽象性 124
第14章函数式编程129
函数式编程129
函数式JavaScript131
对象136
现在做什么？137
第15章 前进139
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>javascript之美
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript开发实战
译者序
序言
前言
致谢
导读
速览
第一部分 控制台上的核心概念
第 1 章 编程、JavaScript 和 JS Bin
1.1 编程
1.2 JavaScript
1.3 在实践和思考中学习
1.4 JS Bin
1.4.1 JS Bin 面板
1.4.2 在 JS Bin 上运行代码清单
1.4.3 输出到控制台
1.4.4 代码注释
1.4.5 Further Adventures——进阶练习
1.4.6 错误消息
1.4.7 行号
1.4.8 获取账户
1.5 游戏 The Crypt——本书的一个持续示例
1.5.1 运行 The Crypt
1.5.2 创建 The Crypt 的具体步骤
1.6 更多示例和练习
1.7 浏览器的兼容性
1.8 本章小结
第 2 章 变量：在程序中存储数据
2.1 什么是变量
2.2 变量的声明和赋值
2.2.1 变量声明
2.2.2 变量赋值
2.2.3 一步实现变量声明和赋值
2.2.4 先运算再赋值
2.3 选择合适的变量名
2.3.1 关键字和保留字
2.3.2 变量的命名规则
2.3.3 骆驼式命名法（camelCase）
2.3.4 使用描述性变量名
2.4 The Crypt——玩家变量
2.5 本章小结
第 3 章 对象：数据分组
3.1 变量需要分组
3.2 创建对象
3.2.1 创建一个空对象
3.2.2 属性“键?值对”
3.3 访问对象的属性
3.4 更新对象的属性
3.5 其他示例
3.5.1 撰写一条博客
3.5.2 创建一个日历
3.5.3 天气怎么样？
3.5.4 一个小测验
3.5.5 创建自己的程序
3.6 游戏 The Crypt——玩家对象
3.7 本章小结
第 4 章 函数：按需执行代码
4.1 重复问题
4.1.1 将对象的属性作为文本进行显示
4.1.2 加税算出总成本
4.2 定义函数和调用函数
4.2.1 定义新函数
4.2.2 函数表达式和函数声明
4.2.3 使用函数
4.2.4 使用函数的步骤
4.3 减少重复
4.3.1 函数可用于将对象的属性作为文本进行显示
4.3.2 加税并显示总成本的函数
4.4 使代码易于阅读和更新
4.4.1 更新 showMovieInfo 函数
4.5 游戏 The Crypt——显示玩家的信息
4.5.1 用函数显示玩家的信息
4.6 本章小结
第 5 章 参数：将数据传递给函数
5.1 函数重用
5.2 将信息传递给函数
5.2.1 将实参传递给函数
5.2.2 将多个实参传递给一个函数
5.3 The Crypt——显示玩家信息
5.3.1 显示玩家的姓名
5.3.2 显示玩家的健康值
5.3.3 显示玩家的位置
5.3.4 合并显示玩家的信息
5.4 本章小结
第 6 章 返回值：从函数获取数据
6.1 从函数返回数据
6.1.1 用返回值替代函数调用
6.1.2 关键字 return
6.1.3 使用参数来确定返回值
6.2 在控制台提示符下进行实验
6.2.1 调用函数
6.2.2 声明新的变量
6.3 The Crypt——构建玩家信息字符串
6.3.1 为玩家的姓名、健康值和位置构建字符串
6.3.2 用一个函数显示玩家的信息——把几个函数集合在一起
6.4 本章小结
第 7 章 对象参数：将对象传递给函数
7.1 使用对象作为参数
7.1.1 访问对象参数的属性
7.1.2 给对象参数添加属性
7.2 从函数返回对象
7.2.1 构建行星——对象创建函数
7.2.2 二维空间的点
7.3 方法——设置函数作为对象的属性
7.3.1 命名空间——将相关函数组织到一起
7.3.2 Math 方法
7.3.3 String 方法
7.3.4 spacer——将更多的方法收入命名空间
7.3.5 进一步探索命名空间
7.4 The Crypt——将玩家对象作为参数
7.5 本章小结
第 8 章 数组：将数据存入列表
8.1 创建数组并访问元素
8.1.1 创建数组
8.1.2 访问数组元素
8.2 数组方法
8.2.1 添加和删除元素
8.2.2 截取和拼接数组
8.2.3 使用 forEach 访问每一个元素
8.3 The Crypt——玩家的物品数组
8.4 本章小结
第 9 章 构造函数：构建带有函数的对象
9.1 使用函数构建对象
9.1.1 添加属性
9.1.2 添加方法
9.2 使用构造函数构建对象
9.2.1 构造函数
9.2.2 使用 Planet 构造函数创建一个新世界
9.2.3 使用 instanceof 运算符区分对象
9.3 建造大师——两个构造函数的示例
9.4 The Crypt——为玩家提供掠夺地
9.4.1 构建 Place 构造函数——名称标题和描述
9.4.2 构建 Place 构造函数——囤积物品
9.4.3 构建 Place 构造函数——探索出口
9.5 The Crypt——简化玩家创建代码
9.5.1 整理玩家属性
9.5.2 将函数转换为方法
9.5.3 为玩家分配位置
9.5.4 使用 null 作为对象的占位符
9.6 本章小结
第 10 章 方括号运算符：灵活的属性名称
10.1 用方括号运算符替代圆点运算符
10.1.1 使用方括号——人的姓名作为键
10.1.2 最大限度地利用方括号运算符——单词统计
10.2 The Crypt——使游戏出口更加刺激好玩
10.2.1 使用对象存放出口
10.2.2 创建一个添加并显示出口的函数
10.2.3 设置每个场所对象的出口集合
10.2.4 将 exits 对象添加到完整的 Place 构造函数
10.2.5 测试 Place 构造函数
10.3 The Crypt——开始游戏！
10.3.1 刷新显示——render
10.3.2 探索地图——go
10.3.3 收集物品——get
10.3.4 设计一个更大的冒险游戏——Jahver 的船
10.4 下一步目标
10.5 本章小结
第二部分 组 织 代 码
第 11 章 作用域：隐藏信息
11.1 全局变量的危险性
11.1.1 访问所有区域——偷窥和篡改
11.1.2 访问所有区域——借助于实现
11.1.3 命名冲突
11.1.4 难以查找的错误
11.2 局部变量的优势
11.3 接口——控制访问权限并提供可用功能
11.3.1 使用一个函数来隐藏变量
11.3.2 使用 getCount 创建多个独立计数器
11.3.3 用构造函数创建多个独立的计数器
11.4 创建一个简单的测验应用程序
11.4.1 将对象用作一个命名空间
11.4.2 隐藏问题数组
11.5 The Crypt——隐藏玩家信息
11.5.1 当前的 Player 构造函数——全部内容都公开
11.5.2 更新版的 Player 构造函数——某些变量被隐藏
11.6 The Crypt——隐藏地点信息
11.7 The Crypt——用户交互
11.7.1 接口——go 和 get
11.7.2 隐藏程序的实现
11.8 本章小结
第 12 章 条件：有选择地运行代码
12.1 有条件地执行代码
12.1.1 严格相等运算符
12.1.2 if 语句
12.1.3 else 子句
12.1.4 隐藏函数中的密码数字
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript开发实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通从JavaScript到JSP范例程序设计
序
导读
第1章  JavaScript基础
变量 variables
变量的类型
变量的声明
变量的参考

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通从JavaScript到JSP范例程序设计
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript网络编程实例
楔子
丛书前言
前言
实例1 步入JavaScript的世界
实例2 多功能日历
实例3 动态日历
实例4 个人网页向导
实例5 创建新的定制窗口
实例6 菜单导航
实例7 网页上的层叠菜单
实例8 缩进的动态菜单
实例9 网页上的右键菜单
实例10 页面效果
实例11 页面的滚动与停止
实例12 导航目录树
实例13 对状态栏的操作
实例14 日程安排列表
实例15 背景上的烟花效果
……
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript网络编程实例
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript 网络效果大师
前言
第1篇 基础篇
第2篇 窗口篇
第3篇 按钮篇
第4篇 文字篇
第5篇 图像篇
第6篇 背景和链接篇
第7篇 时间篇
第8篇 页面篇
第9篇 鼠标篇
第10篇 系统篇
第11篇 综合篇
第12篇 参考手册篇
附录 术语表
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript 网络效果大师
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>21天学通HTML+CSS+JavaScript Web开发
第1部分　起步
第1章　何为Web发布　1
1.1　像Web发布者一样思考　1
1.1.1　Web是一个超文本信息系统　1
1.1.2　Web是跨平台的　2
1.1.3　Web是分布式的　2
1.1.4　Web是动态的　3
1.1.5　Web是交互式的　4
1.2　Web浏览器　5
1.2.1　Web浏览器的作用　5
1.2.2　概述一些流行的Web浏览器　6
1.3　Web服务器　8
1.4　统一资源定位符　8
1.5　广义的Web发布　9
1.6　小结　9
1.7　作业　9
1.7.1　问与答　9
1.7.2　小测验　10
1.7.3　小测验答案　10
1.7.4　练习　10
第2章　准备好工具　11
2.1　网站剖析　11
2.2　为发布到Web准备好计算机　13
2.2.1　文本编辑器　13
2.2.2　Web浏览器　14
2.3　使用Google Chrome 开发者工具　14
2.4　您要在Web上做什么　17
2.5　绘制网站线框图　18
2.5.1　线框图是什么，为何需要绘制线框图　18
2.5.2　线框图绘制小贴士　19
2.6　Web托管　19
2.6.1　使用内容管理应用程序　20
2.6.2　设置Web托管　20
2.7　小结　21
2.8　作业　21
2.8.1　问与答　21
2.8.2　小测验　22
2.8.3　小测验答案　22
2.8.4　练习　22
第3章　HTML和CSS简介　23
3.1　HTML是什么　23
3.1.1　HTML定义了网页的结构　23
3.1.2　HTML并未定义网页的布局　24
3.1.3　HTML为何以这样的方式工作　25
3.1.4　标记的工作原理　25
3.2　HTML文件什么样　25
3.3　HTML属性　28
3.4　使用属性style　29
3.5　HTML标准简史　30
3.6　不断发展的最新标准HTML5　31
3.7　小结　31
3.8　作业　31
3.8.1　问与答　31
3.8.2　小测验　32
3.8.3　小测验答案　32
3.8.4　练习　32
第2部分　创建网页
第4章　HTML基础知识　33
4.1　定义页面的总体结构　33
4.1.1　标签[html]　33
4.1.2　标签[head]　34
4.1.3　标签[body]　34
4.2　名称　35
4.3　标题　36
4.4　段落　37
4.5　注释　38
4.6　小结　39
4.7　作业　40
4.7.1　问与答　40
4.7.2　小测验　40
4.7.3　小测验答案　41
4.7.4　练习　41
第5章　使用列表组织信息　42
5.1　列表概述　42
5.2　带编号的列表　43
5.3　无序列表　46
5.4　定义列表　48
5.5　嵌套列表　49
5.6　列表的其他用途　51
5.7　小结　51
5.8　作业　52
5.8.1　问与答　52
5.8.2　小测验　53
5.8.3　小测验答案　53
5.8.4　练习　53
第6章　使用链接　54
6.1　创建链接　54
6.2　使用相对和绝对路径名链接到本地页面　58
6.2.1　绝对路径名　58
6.2.2　该使用相对路径名还是绝对路径名　59
6.3　链接到Web上的其他文档　59
6.4　链接到文档的特定位置　63
6.4.1　创建链接和锚　64
6.4.2　标签[a]的name属性　64
6.4.3　链接到当前文档的其他元素　67
6.5　剖析URL　67
6.5.1　URL的组成部分　68
6.5.2　URL中的特殊字符　69
6.5.3　属性rel　69
6.6　URL分类　70
6.6.1　HTTP URL　70
6.6.2　匿名FTP URL　70
6.6.3　非匿名FTP URL　71
6.6.4　mailto URL　71
6.6.5　文件URL　72
6.7　小结　72
6.8　作业　73
6.8.1　问与答　73
6.8.2　小测验　74
6.8.3　小测验答案　74
6.8.4　练习　74
第3部分　HTML和CSS的高级用法
第7章　使用HTML和CSS设置文本的格式　75
7.1　字符级元素　75
7.1.1　HTML语义标签　75
7.1.2　HTML5物理样式标签的变化　77
7.2　使用CSS设置字符的格式　77
7.2.1　text-decoration属性　78
7.2.2　字体属性　78
7.3　预定格式的文本　79
7.4　水平分隔线（主题分隔）　81
7.5　换行　83
7.6　地址　84
7.7　引文　84
7.8　特殊字符　86
7.8.1　字符编码　87
7.8.2　表示特殊字符的字符实体　88
7.8.3　表示保留字符的字符实体　88
7.9　字体和字号　89
7.10　小结　97
7.11　作业　98
7.11.1　问与答　98
7.11.2　小测验　99
7.11.3　小测验答案　99
7.11.4　练习　99
第8章　使用CSS设置网站的样式　100
8.1　在页面中包含样式表　100
8.1.1　创建页面级样式　100
8.1.2　创建网站级样式表　101
8.2　选择器　102
8.2.1　上下文选择器　102
8.2.2　类和ID　103
8.2.3　级联的含义　104
8.3　度量单位　105
8.4　使用开发者工具编辑样式　108
8.5　使用颜色　109
8.6　链接　109
8.7　盒子模型　110
8.7.1　边框　111
8.7.2　外边距和内边距　112
8.7.3　控制大小和元素显示　116
8.7.4　浮动　118
8.8　其他选择器　121
8.8.1　伪类　122
8.8.2　属性选择器　124
8.9　标签[body]　124
8.10　小结　125
8.11　作业　125
8.11.1　问与答　125
8.11.2　小测验　126
8.11.3　小测验答案　126
8.11.4　练习　126
第9章　在网页中使用图像　127
9.1　Web上的图像　127
9.2　图像格式　128
9.2.1　GIF　128
9.2.2　JPEG　128
9.2.3　PNG　128
9.2.4　SVG　129
9.3　HTML内嵌图像：标签[img]　129
9.4　图像和文本　132
9.4.1　文本和图像对齐　134
9.4.2　沿图像绕排文本　135
9.4.3　调整图像周围空白区域的大小　138
9.5　图像和链接　139
9.6　其他图像使用技巧　142
9.7　将图像用作背景　143
9.8　将图像用作项目符号　145
9.9　图像映射是什么　146
9.9.1　选择图像　147
9.9.2　确定坐标　147
9.9.3　标签[map]和[area]　149
9.9.4　属性usemap　150
9.10　图像使用规范　153
9.11　小结　154
9.12　作业　154
9.12.1　问与答　154
9.12.2　小测验　155
9.12.3　小测验答案　155
9.12.4　练习　155
第10章　创建表格　156
10.1　创建表格　156
10.2　表格的组成部分　156
10.2.1　[table]元素　157
10.2.2　表格摘要　158
10.2.3　行和单元格　158
10.2.4　空单元格　159
10.2.5　表题　160
10.3　设置表格、边框和单元格的尺寸　163
10.3.1　设置表格的宽度　163
10.3.2　修改表格的边框　164
10.3.3　单元格内边距　166
10.3.4　单元格间距　167
10.3.5　列宽　168
10.4　表格和单元格的颜色　169
10.5　对齐表格内容　171
10.5.1　表格对齐方式　171
10.5.2　表格和表题的对齐方式　172
10.6　横跨多行或多列　174
10.7　更高级的表格改进方式　180
10.7.1　将列编组并设置其样式　180
10.7.2　将行编组并设置其样式　183
10.8　表格的用途　185
10.9　小结　185
10.10　作业　186
10.10.1　问与答　186
10.10.2　小测验　187
10.10.3　小测验答案　187
10.10.4　练习　187
第11章　使用CSS定位元素　188
11.1　定位方案　188
11.2　绝对定位　192
11.2.1　定位属性　192
11.2.2　定位属性及高度和宽度　192
11.2.3　嵌套绝对定位的元素　194
11.2.4　动态覆盖层　195
11.3　固定定位　198
11.4　控制堆叠　199
11.5　创建下拉式菜单　201
11.6　小结　204
11.7　作业　205
11.7.1　问与答　205
11.7.2　小测验　205
11.7.3　小测验答案　205
11.7.4　练习　205
第12章　设计表单　206
12.1　理解表单　206
12.2　使用标签[form]　210
12.3　使用标签[label]　212
12.4　使用标签[input]创建表单控件　213
12.4.1　创建文本控件　214
12.4.2　使用datalist给文本字段添加可供选择的值　215
12.4.3　使用HTML5新增的控件　216
12.4.4　创建密码控件　219
12.4.5　创建提交按钮　220
12.4.6　创建重置按钮　220
12.4.7　创建复选框　221
12.4.8　创建单选按钮　222
12.4.9　将图像用作提交按钮　222
12.4.10　创建常规按钮　223
12.4.11　隐藏的表单字段　224
12.4.12　文件上传控件　224
12.5　使用其他表单控件　225
12.5.1　使用元素button　225
12.5.2　使用textarea创建大型文本输入字段　225
12.5.3　使用select和option创建菜单　226
12.6　使用fieldset和legend将控件编组　231
12.6.1　修改默认的表单导航顺序　233
12.6.2　使用快捷键　233
12.6.3　创建被禁用的控件和只读控件　233
12.7　使用progress和meter显示更新进度　234
12.8　使用CSS设置表单控件的样式　238
12.9　规划表单　242
12.10　小结　243
12.11　作业　244
12.11.1　问与答　244
12.11.2　小测验　245
12.11.3　小测验答案　245
12.11.4　练习　245
第13章　使用HTML5定义页面的结构　246
13.1　HTML页面布局简史　246
13.2　使用HTML5设计页面布局　247
13.3　HTML5结构性标签　248
13.3.1　区段　248
13.3.2　页眉　249
13.3.3　页脚　249
13.3.4　导航　250
13.3.5　文章　251
13.3.6　侧栏　251
13.4　页面大纲　251
13.5　使用HTML5结构性元素　252
13.6　小结　253
13.7　作业　253
13.7.1　问与答　253
13.7.2　小测验　254
13.7.3　小测验答案　254
13.7.4　练习　254
第14章　集成多媒体：视频和声音　255
14.1　以简单的方式嵌入视频　255
14.1.1　将视频托管到外部网站的优缺点　256
14.1.2　将视频上传到YouTube　257
14.1.3　定制视频播放器　257
14.1.4　其他服务　258
14.2　自己托管视频　259
14.2.1　视频和容器格式　259
14.2.2　将视频转换为H.264格式　260
14.3　使用[video]嵌入视频　262
14.3.1　标签[video]　263
14.3.2　使用[source]元素　265
14.4　使用[object]标签嵌入Flash电影　266
14.5　标签[embed]　268
14.6　使用SWFObject嵌入Flash电影　269
14.7　Flash视频播放器　271
14.7.1　JW Player　271
14.7.2　使用Flowplayer　272
14.8　结合使用标签[object]和[video]　273
14.9　在页面中嵌入音频　274
14.9.1　标签[audio]　274
14.9.2　Flash音频播放器　275
14.10　小结　276
14.11　作业　277
14.11.1　问与答　277
14.11.2　小测验　277
14.11.3　小测验答案　278
14.11.4　练习　278
第15章　高级CSS：使用CSS设置页面布局　279
15.1　设置页面布局　279
15.1.1　基于表格的布局存在的问题　280
15.1.2　编写结构清晰的HTML　280
15.1.3　编写布局样式表　282
15.1.4　使用定位属性调整各部分的排列顺序　285
15.1.5　浮动栏布局技术　287
15.2　CSS在Web设计中扮演的角色　288
15.3　网站级样式表　291
15.4　小结　292
15.5　作业　292
15.5.1　问与答　292
15.5.2　小测验　293
15.5.3　小测验答案　293
15.5.4　练习　293
第16章　响应式Web设计　294
16.1　什么是响应式Web设计　294
16.1.1　响应式Web设计简史　294
16.1.2　RWD为何很重要　295
16.1.3　RWD并非只调整栏数　295
16.2　应优先考虑移动设备　295
16.2.1　移动优先　296
16.2.2　设置视口　296
16.3　规划响应式网站　298
16.3.1　复核所做的分析　298
16.3.2　使用手机访问自己的网站　298
16.3.3　确定哪些内容至关重要　298
16.4　编写媒体查询　298
16.4.1　媒体类型　299
16.4.2　媒体特征　299
16.4.3　断点　300
16.4.4　使用媒体查询创建样式表　301
16.5　理解RWD的技术细节　302
16.5.1　调整布局　302
16.5.2　创建响应式图像和视频　306
16.5.3　创建响应式表格　308
16.6　响应式Web设计最佳实践　311
16.6.1　让每位用户都获得最佳的使用体验　311
16.6.2　根据网站而不是设备选择最佳的断点　312
16.6.3　保持灵活的同时不忘小屏幕设备　312
16.7　小结　312
16.8　作业　312
16.8.1　问与答　312
16.8.2　小测验　313
16.8.3　小测验答案　313
16.8.4　练习　313
第4部分　使用JavaScript和jQuery
第17章　JavaScript简介　314
17.1　为何要使用JavaScript　314
17.1.1　易于使用　315
17.1.2　可改善性能　315
17.1.3　与浏览器集成　315
17.2　[script]标签　315
17.2.1　JavaScript脚本的结构　316
17.2.2　属性src　316
17.3　JavaScript和Chrome开发者工具　316
17.4　JavaScript语言　317
17.4.1　运算符和表达式　319
17.4.2　变量　320
17.4.3　控制结构　321
17.4.4　函数　324
17.4.5　数据类型　325
17.4.6　数组　326
17.4.7　对象　326
17.5　JavaScript环境　327
17.6　事件　327
17.7　小结　330
17.8　作业　330
17.8.1　问与答　330
17.8.2　小测验　331
17.8.3　小测验答案　331
17.8.4　练习　331
第18章　使用jQuery　332
18.1　JavaScript库是什么？　332
18.2　jQuery初步　333
18.3　编写第一个jQuery脚本　333
18.4　选择文档中的元素　334
18.5　关联到事件　335
18.6　修改页面的样式　336
18.6.1　隐藏和显示元素　336
18.6.2　获取和修改样式表属性　337
18.7　修改页面的内容　337
18.7.1　操作类　338
18.7.2　操作表单值　339
18.7.3　直接操作属性　341
18.7.4　添加和删除内容　341
18.8　特效　344
18.9　AJAX和jQuery　345
18.10　小结　348
18.11　作业　348
18.11.1　问与答　349
18.11.2　小测验　349
18.11.3　小测验答案　349
18.11.4　练习　349
第19章　在页面中使用JavaScript　350
19.1　使用JavaScript验证表单　350
19.2　隐藏和显示内容　357
19.3　在页面中添加新内容　363
19.4　小结　366
19.5　作业　366
19.5.1　问与答　367
19.5.2　小测验　367
19.5.3　小测验答案　367
19.5.4　练习　367
第20章　使用框架和链接窗口　368
20.1　框架是什么　368
20.1.1　HTML5为何不再支持框架　368
20.1.2　内嵌框架又如何呢　369
20.2　使用链接窗口　369
20.2.1　浏览上下文关键字　369
20.2.2　[base]标签　372
20.3　内嵌框架　373
20.4　使用JavaScript打开链接窗口　376
20.5　小结　378
20.6　作业　379
20.6.1　问与答　379
20.6.2　小测验　379
20.6.3　小测验答案　379
20.6.4　练习　379
第5部分　一个都不能少
第21章　移动Web设计　380
21.1　使用手机浏览网页的方式截然不同　380
21.2　移动Web设计标准　381
21.2.1　渐进增强　381
21.2.2　验证网页　382
21.3　移动Web写作　384
21.3.1　清晰而简明　384
21.3.2　以便于快速扫描的方式组织页面　384
21.3.3　每个页面都自成一体　385
21.3.4　慎用突出　385
21.3.5　不要使用浏览器专用的术语　385
21.3.6　对页面进行拼写检查和校对　386
21.4　设计和页面布局　386
21.4.1　只将标题标签用于标题　386
21.4.2　将相关的信息编组　387
21.4.3　使用统一的布局　387
21.5　使用链接　387
21.5.1　移动用户轻按而不单击　387
21.5.2　使用包含描述性文本的链接菜单　388
21.5.3　在文本中使用链接　388
21.5.4　别患“这里”综合症　388
21.5.5　链接还是不链接　389
21.6　使用图像和多媒体　390
21.6.1　不要滥用图像　390
21.6.2　图像别太大　390
21.6.3　别随便对访客使用的硬件做出假设　391
21.6.4　别让视频令人讨厌　391
21.6.5　别使用Flash　391
21.7　充分利用CSS和JavaScript　392
21.7.1　将CSS和JavaScript放在外部文件中　392
21.7.2　位置很重要　392
21.7.3　对CSS和JavaScript进行压缩　393
21.8　利用移动设备的功能　393
21.8.1　定位　393
21.8.2　打电话　393
21.8.3　短信　394
21.9　其他良好的移动Web设计习惯和提示　394
21.9.1　链接到主页　395
21.9.2　不要将一个主题放在多个页面中　395
21.9.3　在页面中包含落款　395
21.9.4　最后一个移动Web设计秘诀　396
21.10　小结　396
21.11　作业　397
21.11.1　问与答　397
21.11.2　小测验　397
21.11.3　小测验答案　398
21.11.4　练习　398
第22章　用户体验设计　399
22.1　考虑用户的经验水平　399
22.1.1　添加搜索引擎　399
22.1.2　使用简洁易懂的URL　400
22.1.3　在导航中提供上下文　401
22.1.4　用户是过客还是常客　402
22.2　判断用户偏好　402
22.3　何为无障碍　403
22.3.1　对无障碍的一些常见误解　403
22.3.2　508条款　403
22.4　替代浏览器　404
22.5　编写无障碍HTML　404
22.5.1　表格　404
22.5.2　链接　405
22.5.3　图像和多媒体　406
22.6　无障碍设计　407
22.6.1　使用颜色　407
22.6.2　字体　407
22.6.3　充分利用各种HTML标签　408
22.6.4　框架　408
22.6.5　表单　408
22.7　网站无障碍验证　408
22.8　小结　409
22.9　作业　410
22.9.1　问与答　410
22.9.2　小测验　411
22.9.3　小测验答案　411
22.9.4　练习　411
第6部分　发布到Web
第23章　如何发布网站　412
23.1　Web服务器的功能　412
23.2　如何寻找Web托管服务　413
23.2.1　使用学校或单位的Web服务器　414
23.2.2　使用商业Web托管服务　414
23.2.3　商业Web开发商　415
23.2.4　自己搭建服务器　415
23.2.5　免费托管　415
23.3　组织HTML文件以方便发布　415
23.3.1　需要向网站管理员提出的问题　416
23.3.2　使用目录确保文件组织有序　416
23.3.3　提供默认索引文件并正确地命名文件　417
23.4　发布文件　417
23.4.1　在系统之间移动文件　418
23.4.2　上传文件　418
23.5　故障排除　419
23.5.1　无法访问服务器　419
23.5.2　无法访问文件　420
23.5.3　无法访问图像　420
23.5.4　链接不管用　420
23.5.5　文件不能正确地显示　421
23.6　网站推广　421
23.6.1　友情链接　421
23.6.2　通过发客座文章进行内容营销　422
23.6.3　通过社交媒体推广网站　422
23.6.4　为网站创建Facebook页面　423
23.6.5　网站索引和搜索引擎　424
23.6.6　名片、信笺抬头、小册子和广告　425
23.7　了解谁查看了您的网页　425
23.7.1　日志文件　425
23.7.2　Google Analytics　426
23.8　小结　428
23.9　作业　428
23.9.1　问与答　428
23.9.2　小测验　429
23.9.3　小测验答案　429
23.9.4　练习　429
第24章　使用服务器　430
24.1　PHP的工作原理　430
24.2　在计算机上运行PHP　431
24.3　PHP语言　432
24.3.1　注释　432
24.3.2　变量　433
24.3.3　数组　433
24.3.4　字符串　435
24.3.5　条件语句　436
24.3.6　PHP条件运算符　437
24.4　循环　438
24.4.1　foreach循环　438
24.4.2　for循环　438
24.4.3　while和do...while循环　439
24.4.4　控制循环的执行　439
24.5　内置函数　440
24.6　用户定义的函数　440
24.7　处理表单　441
24.7.1　处理包含多个值的参数　442
24.7.2　显示表单　446
24.8　使用PHP包含　449
24.9　更深入地学习PHP　451
24.9.1　连接到数据库　451
24.9.2　正则表达式　451
24.9.3　发送邮件　451
24.9.4　PHP面向对象功能　452
24.9.5　Cookie和会话　452
24.9.6　上传文件　452
24.10　其他应用程序平台　452
24.10.1　Microsoft ASP.NET　452
24.10.2　Java EE　452
24.10.3　Ruby on Rails　453
24.11　小结　453
24.12　作业　453
24.12.1　问与答　453
24.12.2　小测验　454
24.12.3　小测验答案　454
24.12.4　练习　454
第25章　搜索引擎和SEO　455
25.1　何为SEO　455
25.1.1　为何需要SEO　455
25.1.2　社交媒体怎样　456
25.1.3　您可自己动手进行SEO　456
25.1.4　不进行SEO搜索引擎就找不到您的网站吗　456
25.2　搜索引擎的工作原理　456
25.2.1　Google　457
25.2.2　Microsoft Bing　457
25.2.3　Yahoo!　458
25.2.4　别忘了国际搜索　458
25.3　SEO技巧　458
25.3.1　您的网站友好吗　458
25.3.2　使用关键字和关键字搜索　459
25.3.3　致力于为用户提供卓越的内容就是最好的SEO　459
25.3.4　有关SEO的误解和实情　460
25.4　SEO跟踪和管理工具　461
25.4.1　使用网站地图　461
25.4.2　文件robots.txt　462
25.4.3　理解权威链接　462
25.4.4　重定向重复的内容　462
25.4.5　看看您的网站在搜索引擎眼里是什么样　463
25.4.6　跟踪SEO成效　464
25.5　付费链接　464
25.6　小结　464
25.7　作业　464
25.7.1　问与答　465
25.7.2　小测验　465
25.7.3　小测验答案　465
25.7.4　练习　465
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>21天学通HTML+CSS+JavaScript Web开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>21天学通JavaScript（第3版）
第一篇  基 础 篇
第1章  JavaScript概述（教学视频：59分钟）	1
1.1  初识JavaScript	1
1.1.1  理解JavaScript的历史	1
1.1.2  JavaScript标准	2
1.1.3  JavaScript的现况	2
1.1.4  JavaScript的发展趋势	3
1.2  简单的脚本语言	3
1.2.1  认识脚本语言	3
1.2.2  脚本语言的分类	3
1.2.3  JavaScript的作用	4
1.2.4  JavaScript和其他语言的异同	4
1.2.5  JavaScript与Java的异同	4
1.3  第一个JavaScript程序	4
1.3.1  预备知识	5
1.3.2  选择JavaScript编辑器	5
1.3.3  编写“Hello World”程序	6
1.3.4  浏览器对JavaScript的支持	7
1.4  注意事项	8
1.4.1  大小写敏感	8
1.4.2  注意空格与换行	8
1.4.3  分号可有可无	9
1.5  小结	9
1.6  习题	10
第2章  数据类型（教学视频：61分钟）	12
2.1  基本数据类型	12
2.1.1  字符串型数据	12
2.1.2  深入理解字符串	13
2.1.3  使用数值型数据	14
2.1.4  使用布尔型数据	16
2.2  复合数据类型	17
2.2.1  常用内置对象	17
2.2.2  常用日期对象	18
2.2.3  理解全局对象	20
2.2.4  常用数学对象	21
2.2.5  常用字符串对象	23
2.2.6  掌握数组对象	24
2.3  其他数据类型	26
2.3.1  使用函数	26
2.3.2  使用空值	27
2.3.3  使用不确定的类型	28
2.4  数据类型的转换	29
2.4.1  隐式类型转换	29
2.4.2  显式类型转换	30
2.5  小结	30
2.6  习题	31
第3章  变量和常量（教学视频：47分钟）	35
3.1  常量	35
3.1.1  常量分类	35
3.1.2  使用常量	35
3.2  变量	36
3.2.1  什么是变量	36
3.2.2  如何定义变量	37
3.2.3  变量的命名	39
3.2.4  变量的作用范围	40
3.2.5  变量的用途	41
3.3  JavaScript关键字详解	42
3.4  小结	42
3.5  习题	43
第4章  表达式与运算符（    教学视频：88分钟）	46
4.1  什么是表达式	46
4.2  什么是操作数	47
4.3  运算符概述	48
4.3.1  什么是运算符	48
4.3.2  操作数的分类	48
4.4  算术运算符简介	49
4.4.1  加法运算符	49
4.4.2  减法运算符	49
4.4.3  乘法运算符	50
4.4.4  除法运算符	51
4.4.5  取模运算符	51
4.4.6  负号运算符	52
4.4.7  正号运算符	52
4.4.8  递增运算符	53
4.4.9  递减运算符	54
4.5  关系运算符简介	55
4.5.1  相等运算符	55
4.5.2  等同运算符	56
4.5.3  不等运算符	56
4.5.4  不等同运算符	58
4.5.5  小于运算符	58
4.5.6  大于运算符	59
4.5.7  小于或等于运算符	60
4.5.8  大于或等于运算符	61
4.5.9  in运算符	61
4.5.10  instanceof运算符	62
4.6  字符串运算符简介	63
4.7  赋值运算符简介	63
4.8  逻辑运算符简介	64
4.8.1  逻辑与运算符	64
4.8.2  逻辑或运算符	65
4.8.3  逻辑非运算符	66
4.9  位运算符简介	66
4.9.1  位与运算符	66
4.9.2  位或运算符	67
4.9.3  位异或运算符	67
4.9.4  位非运算符	68
4.9.5  左移运算符	69
4.9.6  带符号右移运算符	70
4.9.7  高位补0右移运算符	70
4.10  其他运算符	70
4.10.1  条件运算符	71
4.10.2  new运算符	71
4.10.3  void运算符	71
4.10.4  类型检测运算符	72
4.10.5  对象属性存取运算符	72
4.10.6  数组存取运算符	73
4.10.7  delete运算符	74
4.10.8  逗号运算符	74
4.10.9  函数调用运算符	75
4.10.10  this运算符	76
4.11  掌握运算符的优先级	76
4.12  小结	78
4.13  习题	78
第5章  控制语句（    教学视频：69分钟）	81
5.1  使用选择语句	81
5.1.1  if选择语句	81
5.1.2  if-else选择语句	83
5.1.3  if-else-if选择语句	84
5.1.4  switch多条件选择语句	85
5.1.5  选择语句综合示例	86
5.2  使用循环语句	88
5.2.1  for循环语句	88
5.2.2  while循环语句	89
5.2.3  do-while循环语句	90
5.2.4  for-in循环语句	91
5.2.5  break和continue跳转语句	91
5.2.6  循环语句综合示例	92
5.3  使用异常处理语句	93
5.3.1  try-catch语句	93
5.3.2  try-catch-finally语句	94
5.3.3  throw语句	95
5.3.4  异常处理语句综合示例	96
5.4  小结	97
5.5  习题	98
第6章  函数（    教学视频：68分钟）	103
6.1  函数的功能	103
6.2  函数的定义	103
6.2.1  函数的普通定义方式	103
6.2.2  函数的变量定义方式	106
6.2.3  函数的指针调用方式	107
6.2.4  认识函数参数	108
6.2.5  认识arguments对象	108
6.3  函数返回类型	109
6.3.1  值类型	110
6.3.2  引用类型	110
6.3.3  使用返回函数	110
6.4  函数的分类	111
6.4.1  构造函数	111
6.4.2  有返回值的函数	111
6.4.3  无返回值的函数	111
6.5  函数的作用域	112
6.5.1  公有函数的作用域	112
6.5.2  私有函数的作用域	112
6.5.3  使用this关键字	113
6.6  小结	114
6.7  习题	114
第7章  数组（    教学视频：65分钟）	119
7.1  数组简介	119
7.1.1  简单介绍数组概念	119
7.1.2  认识数组元素	119
7.1.3  掌握多维数组	120
7.2  如何创建一个数组	120
7.2.1  创建空数组	120
7.2.2  指定数组长度创建新数组	120
7.2.3  指定数组元素创建新数组	121
7.2.4  直接创建新数组	121
7.3  数组元素基本操作	121
7.3.1  提取数据——读取数组元素	122
7.3.2  添加数据——添加数组元素	122
7.3.3  删除数据——删除数组元素	122
7.3.4  详解数组元素个数	122
7.4  数组对象常见操作	123
7.4.1  字符转换——数组转换为字符串	123
7.4.2  字符连接——数组元素连接成字符串	123
7.4.3  数据添加——在数组尾部添加元素	124
7.4.4  数据更新——删除数组的最后一个元素	125
7.4.5  删除数据——移除数组顶端的元素	126
7.4.6  添加数据——在数组头部添元素	127
7.4.7  扩充数组——添加元素并生成新数组	128
7.4.8  更新移动数据——删除、替换或插入数组元素	129
7.4.9  生成特定数据——获取数组中的一部分元素	131
7.4.10  置换数据——颠倒数组元素的顺序	131
7.4.11  数据排序——对数组元素进行排序	132
7.4.12  数据转换——将对象转换为本地字符串	134
7.5  小结	135
7.6  习题	135
第二篇  对 象 篇
第8章  JavaScript面向对象基础（    教学视频：44分钟）	138
8.1  面向对象概念	138
8.1.1  面向对象中的语言	138
8.1.2  对象的构成方式	139
8.2  对象应用	139
8.2.1  详解对象声明和实例化	139
8.2.2  详解对象的引用	141
8.2.3  详解对象的废除	141
8.2.4  详解对象的早绑定和晚绑定	142
8.3  JavaScript的对象层次	142
8.3.1  JavaScript对象模型结构	142
8.3.2  客户端对象层次简单介绍	143
8.3.3  浏览器对象模型详解	143
8.4  事件驱动与事件处理	144
8.4.1  详解事件与事件驱动	144
8.4.2  掌握事件与处理代码关联	145
8.4.3  函数调用事件	146
8.4.4  代码调用事件	147
8.4.5  掌握设置对象事件的方法	148
8.4.6  掌握显式调用事件处理程序	149
8.4.7  事件处理程序的返回值	149
8.4.8  事件与this运算符	151
8.5  常用事件	152
8.5.1  详解浏览器事件	152
8.5.2  详解鼠标移动事件	152
8.5.3  详解鼠标单击事件	153
8.5.4  详解加载与卸载事件	154
8.5.5  详解得到焦点与失去焦点事件	154
8.5.6  详解键盘事件	154
8.5.7  详解提交与重置事件	155
8.5.8  详解选择与改变事件	155
8.6  小结	156
8.7  习题	156
第9章  窗口和框架（    教学视频：70分钟）	159
9.1  window对象	159
9.1.1  认识window对象	159
9.1.2  认识window对象的使用方法	159
9.2  window对象事件及使用方法	160
9.2.1  装进去——装载文档	161
9.2.2  卸下来——卸载文档	161
9.2.3  焦点处理——得到焦点与失去焦点	162
9.2.4  调整窗口的大小	163
9.2.5  对错误进行处理	164
9.3  对话框	165
9.3.1  过滤错误——警告对话框	165
9.3.2  信息确认——询问对话框	166
9.3.3  信息录入——输入对话框	167
9.4  状态栏	167
9.4.1  详解状态栏	168
9.4.2  认识默认状态栏信息	168
9.4.3  认识状态栏瞬间信息	168
9.5  窗口操作	169
9.5.1  打开一个新窗口	169
9.5.2  认识窗口名字	170
9.5.3  如何关闭窗口	171
9.5.4  对窗口进行引用	172
9.5.5  对文档进行滚动	173
9.6  超时与时间间隔	174
9.6.1  对代码延迟执行	175
9.6.2  认识周期性执行代码	175
9.6.3  停止执行周期性执行代码	176
9.6.4  取消延迟代码执行	177
9.7  框架操作	178
9.7.1  框架简介	178
9.7.2  详解父窗口与子窗口	178
9.7.3  详解窗口之间的关系	180
9.7.4  认识窗口名字	180
9.8  小结	180
9.9  习题	181
第10章  屏幕和浏览器对象（    教学视频：60分钟）	184
10.1  认识屏幕对象	184
10.1.1  利用屏幕对象检测显示器参数	184
10.1.2  利用屏幕对象检测客户端显示器屏幕分辨率	185
10.1.3  利用屏幕对象检测客户端显示器屏幕的有效宽度和高度	186
10.1.4  利用屏幕对象进行网页开屏	187
10.2  认识浏览器对象	188
10.2.1  获取浏览器对象的属性值	188
10.2.2  MimeType对象和Plugin对象详解	189
10.2.3  浏览器对象的javaEnabled属性详解	190
10.3  小结	191
10.4  习题	191
第11章  文档对象（    教学视频：84分钟）	194
11.1  文档对象概述	194
11.1.1  初识文档对象	194
11.1.2  详解文档对象的使用方法	194
11.1.3  对标签中的值进行引用	195
11.1.4  详解引用文档中对象的方法	196
11.2  文档对象的应用	198
11.2.1  美化链接——设置超链接的颜色	198
11.2.2  美化网页——设置网页背景颜色和默认文字颜色	199
11.2.3  设置文档信息	200
11.2.4  如何在标题栏中显示滚动信息	201
11.2.5  如何防止盗链	202
11.2.6  详解在网页中输出内容	203
11.2.7  详解在其他文档中输出内容	203
11.2.8  详解输出非HTML文档	205
11.2.9  认识文档中的所有HTML元素	206
11.2.10  如何引用文档中的HTML元素	207
11.2.11  如何引用文档元素中的子元素	208
11.3  图像对象	209
11.3.1  图像对象概述	209
11.3.2  如何创建和使用图像对象	210
11.3.3  掌握图像对象的onerror事件	211
11.3.4  掌握显示图片的信息	212
11.3.5  对图片进行置换	213
11.3.6  认识随机图片	214
11.3.7  动态改变图片大小	215
11.4  链接对象	217
11.4.1  链接对象简介	217
11.4.2  掌握感知鼠标移动事件	217
11.4.3  对一个网页上的所有超链接进行查看	218
11.4.4  认识翻页程序	219
11.4.5  认识网站目录	221
11.5  锚对象	223
11.5.1  锚对象简介	223
11.5.2  认识锚对象与链接对象的区别	223
11.5.3  巧建文档索引	224
11.6  小结	225
11.7  习题	226
第12章  历史对象和地址对象（    教学视频：50分钟）	230
12.1  历史对象	230
12.1.1  历史对象简介	230
12.1.2  如何前进到上一页和后退到下一页	230
12.1.3  如何实现页面的跳转	232
12.2  地址对象	233
12.2.1  URL对象简介	233
12.2.2  如何获取指定地址的各属性值	233
12.2.3  如何加载新网页	234
12.2.4  如何获取参数	235
12.2.5  如何装载新文档与重新装载当前文档	236
12.2.6  如何刷新文档	237
12.2.7  如何加载新文档	238
12.3  小结	239
12.4  习题	240
第13章  表单对象和表单元素（    教学视频：64分钟）	242
13.1  表单对象概述	242
13.1.1  表单对象简介	242
13.1.2  对大小写进行转换	242
13.1.3  表单的提交和重置	244
13.1.4  响应表单的提交和重置	245
13.2  表单对象的应用	246
13.2.1  如何进行表单验证	246
13.2.2  认识循环验证表单	248
13.2.3  掌握设置表单的提交方式	249
13.2.4  认识重置表单的提示	250
13.2.5  如何不使用提交按钮来提交表单	251
13.3  表单元素	253
13.3.1  表单元素简介	253
13.3.2  表单元素的命名方式	253
13.4  文本框	255
13.4.1  认识文本框的创建方式	255
13.4.2  如何查看文本框的属性值	255
13.4.3  如何动态跟踪文本框中输入的文字个数	256
13.4.4  如何限制文本框中输入的字数	257
13.4.5  如何自动选择文本框中的文字	258
13.5  按钮	259
13.5.1  按钮简介	259
13.5.2  按钮创建方式简介	259
13.5.3  认识网页调色板	259
13.5.4  如何改变多行文本框大小	261
13.6  小结	262
13.7  习题	262
第14章  脚本化cookie（    教学视频：59分钟）	266
14.1  cookie对象简介	266
14.1.1  什么是cookie对象	266
14.1.2  cookie的作用和检测用户浏览器是否支持cookie	266
14.2  如何创建与读取cookie	267
14.3  如何获取cookie的值	268
14.4  认识cookie的编码	270
14.5  掌握cookie的生存期	272
14.6  掌握cookie的路径和域	273
14.7  了解cookie的安全性	274
14.8  掌握使用cookie的注意事项	276
14.9  小结	276
14.10  习题	277
第三篇  高级技术篇
第15章  JavaScript与XML技术（    教学视频：84分钟）	282
15.1  XML简介	282
15.1.1  针对XML的API概述	282
15.1.2  认识节点的层次	282
15.1.3  掌握特定语言的文档模型	283
15.2  使用DOM	283
15.2.1  巧妙访问相关的节点	284
15.2.2  巧测节点类型	285
15.2.3  简单处理节点属性	286
15.2.4  如何访问指定节点	287
15.2.5  如何创建新节点	289
15.2.6  如何修改节点	290
15.3  HTML DOM特性	291
15.3.1  让特性像属性一样	292
15.3.2  认识表格相关特性	293
15.4  遍历DOM文档	294
15.4.1  认识文档节点迭代器	294
15.4.2  巧妙遍历文档树	295
15.5  如何测试与DOM标准的一致性	297
15.6  小结	298
15.7  习题	298
第16章  正则表达式（    教学视频：40分钟）	301
16.1  正则表达式基础	301
16.1.1  为何使用正则表达式	301
16.1.2  使用RegExp对象	301
16.2  简单模式	302
16.2.1  详解元字符	302
16.2.2  详解量词	303
16.3  复杂模式	304
16.3.1  使用分组	305
16.3.2  使用候选	305
16.3.3  使用非捕获性分组	306
16.3.4  使用前瞻	307
16.4  常用模式	308
16.4.1  使用正则表达式验证日期	308
16.4.2  使用正则表达式验证电子邮件地址	309
16.5  小结	311
16.6  习题	311
第17章  Ajax基础（    教学视频：68分钟）	315
17.1  了解传统的Web技术及Ajax的由来	315
17.2  Ajax技术原理简介	316
17.3  Ajax技术的优缺点分析	316
17.4  认识Ajax技术的组成部分	317
17.4.1  Ajax中的JavaScript技术	317
17.4.2  Ajax中的XMLHttpRequest技术	317
17.4.3  Ajax中的CSS技术	317
17.4.4  Ajax中的DOM技术	318
17.4.5  Ajax中的XML技术	318
17.5  XMLHttpRequest对象简介	318
17.5.1  XMLHttpRequest简介	318
17.5.2  XMLHttpRequest如何创建	318
17.6  局部更新	319
17.7  实现Ajax	321
17.7.1  详解实现Ajax的步骤	321
17.7.2  如何创建HTTP请求	321
17.7.3  如何设置HTTP响应回调函数	322
17.7.4  如何发送HTTP请求	322
17.7.5  一个完整的Ajax实例	322
17.8  小结	324
17.9  习题	324
第18章  Ajax高级应用（    教学视频：64分钟）	329
18.1  客户端脚本语言详解	329
18.1.1  如何使用JavaScript的局部刷新技术	329
18.1.2  如何使用iframe的局部刷新技术	330
18.2  服务器脚本语言详解	332
18.2.1  掌握改进的iframe局部刷新	332
18.2.2  掌握Ajax与服务器互动	333
18.3  小结	335
18.4  习题	335
第19章  JavaScript与插件（    教学视频：96分钟）	339
19.1  掌握ActiveX控件的应用	339
19.1.1  创建ActiveX控件	339
19.1.2  添加ATL控件	341
19.1.3  为控件添加属性	342
19.1.4  为实现类添加成员变量	342
19.1.5  改写相关函数	342
19.1.6  添加事件功能	345
19.1.7  添加事件激发功能	346
19.1.8  编译生成控件	347
19.1.9  使用ActiveX控件	348
19.2  JavaApplet	350
19.2.1  如何安装JDK	351
19.2.2  如何创建Applet	352
19.2.3  如何使用Applet	353
19.3  Flash概述	354
19.3.1  如何创建Flash	355
19.3.2  认识Flash与JavaScript的交互	358
19.4  小结	360
19.5  习题	360
第20章  JavaScript的调试与优化（    教学视频：57分钟）	367
20.1  JavaScript开发工具深入剖析	367
20.2  JavaScript的调试简介	368
20.2.1  如何进行调试前的准备工作	368
20.2.2  如何进行调试	369
20.2.3  如何跟踪代码	370
20.3  对日志进行输出	371
20.4  对代码进行优化	373
20.5  小结	375
20.6  习题	376
第四篇  综合案例篇
第21章  捡馅饼游戏（    教学视频：63分钟）	378
21.1  创作思路及基本场景的实现	378
21.1.1  创作思路	378
21.1.2  实现基本场景及用户界面	378
21.2  设计游戏角色	381
21.2.1  馅对象	381
21.2.2  饼对象	382
21.3  游戏进程控制	385
21.3.1  初始化游戏	385
21.3.2  游戏启动控制	385
21.3.3  游戏循环	387
21.3.4  游戏结束控制	388
21.3.5  运行测试	389
21.4  小结	390
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>21天学通JavaScript（第3版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>21天学通JavaScript（第4版）
第一篇 基础篇
第1章 JavaScript 概述（ 教学视频：59 分钟）..................... 1
1.1 初识JavaScript................................................................................ 1
1.1.1 理解JavaScript 的历史....................................................................... 1
1.1.2 JavaScript 标准.................................................................................... 2
1.1.3 JavaScript 的现况................................................................................ 2
1.1.4 JavaScript 的发展趋势........................................................................ 3
1.2 简单的脚本语言.............................................................................. 3
1.2.1 认识脚本语言..................................................................................... 3
1.2.2 脚本语言的分类................................................................................. 3
1.2.3 JavaScript 的作用................................................................................ 4
1.2.4 JavaScript 和其他语言的异同............................................................ 4
1.2.5 JavaScript 与Java 的异同................................................................... 4
1.3 第一个JavaScript 程序................................................................... 4
1.3.1 预备知识............................................................................................ 4
1.3.2 选择JavaScript 编辑器....................................................................... 5
1.3.3 编写“Hello World”程序.................................................................. 6
1.3.4 浏览器对JavaScript 的支持............................................................... 7
1.4 注意事项.......................................................................................... 8
1.4.1 大小写敏感......................................................................................... 8
1.4.2 注意空格与换行................................................................................. 8
1.4.3 分号可有可无..................................................................................... 9
1.5 小结................................................................................................. 9
1.6 习题............................................................................................... 10
第2章 数据类型（ 教学视频：61 分钟）.................................................................. 12
2.1 基本数据类型................................................................................ 12
2.1.1 字符串型数据................................................................................... 12
2.1.2 深入理解字符串............................................................................... 13
2.1.3 使用数值型数据............................................................................... 14
2.1.4 使用布尔型数据............................................................................... 16
2.2 复合数据类型................................................................................ 17
2.2.1 常用内置对象................................................................................... 17
2.2.2 常用日期对象................................................................................... 18
2.2.3 理解全局对象................................................................................... 20
2.2.4 常用数学对象................................................................................... 21
2.2.5 常用字符串对象............................................................................... 23
2.2.6 掌握数组对象................................................................................... 24
2.3 其他数据类型................................................................................ 26
2.3.1 使用函数........................................................................................... 26
2.3.2 使用空值........................................................................................... 27
2.3.3 使用不确定的类型........................................................................... 28
2.4 数据类型的转换............................................................................ 29
2.4.1 隐式类型转换................................................................................... 29
2.4.2 显式类型转换................................................................................... 30
2.5 小结............................................................................................... 31
2.6 习题............................................................................................... 31
第3章 变量和常量（ 教学视频：47 分钟）.......................... 35
3.1 常量............................................................................................... 35
3.1.1 常量分类........................................................................................... 35
3.1.2 使用常量........................................................................................... 35
3.2 变量............................................................................................... 36
3.2.1 什么是变量....................................................................................... 36
3.2.2 如何定义变量................................................................................... 37
3.2.3 变量的命名....................................................................................... 39
3.2.4 变量的作用范围............................................................................... 40
3.2.5 变量的用途....................................................................................... 41
3.3 JavaScript 关键字详解.................................................................. 42
3.4 小结............................................................................................... 42
3.5 习题............................................................................................... 43
第4章 表达式与运算符（ 教学视频：88 分钟）................... 46
4.1 什么是表达式................................................................................ 46
4.2 什么是操作数................................................................................ 47
4.3 运算符概述.................................................................................... 48
4.3.1 什么是运算符................................................................................... 48
4.3.2 操作数的分类................................................................................... 48
4.4 算术运算符简介............................................................................ 49
4.4.1 加法运算符....................................................................................... 49
4.4.2 减法运算符....................................................................................... 49
4.4.3 乘法运算符....................................................................................... 50
4.4.4 除法运算符....................................................................................... 51
4.4.5 取模运算符....................................................................................... 51
4.4.6 负号运算符....................................................................................... 52
4.4.7 正号运算符....................................................................................... 52
4.4.8 递增运算符....................................................................................... 53
4.4.9 递减运算符....................................................................................... 54
4.5 关系运算符简介............................................................................ 55
4.5.1 相等运算符....................................................................................... 55
4.5.2 等同运算符....................................................................................... 56
4.5.3 不等运算符....................................................................................... 56
4.5.4 不等同运算符................................................................................... 58
4.5.5 小于运算符....................................................................................... 58
4.5.6 大于运算符....................................................................................... 59
4.5.7 小于或等于运算符........................................................................... 60
4.5.8 大于或等于运算符........................................................................... 61
4.5.9 in 运算符........................................................................................... 61
4.5.10 instanceof 运算符............................................................................ 62
4.6 字符串运算符简介........................................................................ 63
4.7 赋值运算符简介............................................................................ 63
4.8 逻辑运算符简介............................................................................ 64
4.8.1 逻辑与运算符................................................................................... 64
4.8.2 逻辑或运算符................................................................................... 65
4.8.3 逻辑非运算符................................................................................... 65
4.9 位运算符简介................................................................................ 66
4.9.1 位与运算符....................................................................................... 66
4.9.2 位或运算符....................................................................................... 67
4.9.3 位异或运算符................................................................................... 67
4.9.4 位非运算符....................................................................................... 68
4.9.5 左移运算符....................................................................................... 69
4.9.6 带符号右移运算符........................................................................... 70
4.9.7 高位补0 右移运算符........................................................................ 70
4.10 其他运算符.................................................................................. 70
4.10.1 条件运算符..................................................................................... 71
4.10.2 new 运算符...................................................................................... 71
4.10.3 void 运算符..................................................................................... 71
4.10.4 类型检测运算符............................................................................. 72
4.10.5 对象属性存取运算符...................................................................... 72
4.10.6 数组存取运算符............................................................................. 73
4.10.7 delete 运算符................................................................................... 74
4.10.8 逗号运算符..................................................................................... 74
4.10.9 函数调用运算符............................................................................. 75
4.10.10 this 运算符..................................................................................... 76
4.11 掌握运算符的优先级.................................................................. 76
4.12 小结............................................................................................. 78
4.13 习题............................................................................................. 78
第5章 控制语句（ 教学视频：69 分钟）.................................................................. 81
5.1 使用选择语句................................................................................ 81
5.1.1 if 选择语句........................................................................................ 81
5.1.2 if-else 选择语句................................................................................ 83
5.1.3 if-else-if 选择语句............................................................................. 84
5.1.4 switch 多条件选择语句.................................................................... 85
5.1.5 选择语句综合示例........................................................................... 86
5.2 使用循环语句................................................................................ 88
5.2.1 for 循环语句...................................................................................... 88
5.2.2 while 循环语句................................................................................. 89
5.2.3 do-while 循环语句............................................................................ 90
5.2.4 for-in 循环语句................................................................................. 91
5.2.5 break 和continue 跳转语句.............................................................. 91
5.2.6 循环语句综合示例........................................................................... 92
5.3 使用异常处理语句........................................................................ 93
5.3.1 try-catch 语句.................................................................................... 93
5.3.2 try-catch-finally 语句................................................................................. 94
5.3.3 throw 语句......................................................................................... 95
5.3.4 异常处理语句综合示例.................................................................... 96
5.4 小结............................................................................................... 97
5.5 习题............................................................................................... 98
第6章 函数（ 教学视频：68 分钟）................................... 103
6.1 函数的功能.................................................................................. 103
6.2 函数的定义.................................................................................. 103
6.2.1 函数的普通定义方式............................................................................. 103
6.2.2 函数的变量定义方式...................................................................... 106
6.2.3 函数的指针调用方式.................................................................... 107
6.2.4 认识函数参数................................................................................. 108
6.2.5 认识arguments 对象....................................................................... 108
6.3 函数返回类型.............................................................................. 109
6.3.1 值类型............................................................................................ 110
6.3.2 引用类型......................................................................................... 110
6.3.3 使用返回函数................................................................................. 110
6.4 函数的分类................................................................................... 111
6.4.1 构造函数......................................................................................... 111
6.4.2 有返回值的函数............................................................................. 111
6.4.3 无返回值的函数............................................................................. 111
6.5 函数的作用域.............................................................................. 112
6.5.1 公有函数的作用域......................................................................... 112
6.5.2 私有函数的作用域......................................................................... 112
6.5.3 使用this 关键字.............................................................................. 113
6.6 小结............................................................................................. 114
6.7 习题............................................................................................. 114
第7章 数组（ 教学视频：65 分钟）................................... 119
7.1 数组简介...................................................................................... 119
7.1.1 简单介绍数组概念......................................................................... 119
7.1.2 认识数组元素................................................................................. 119
7.1.3 掌握多维数组................................................................................. 120
7.2 如何创建一个数组...................................................................... 120
7.2.1 创建空数组..................................................................................... 120
7.2.2 指定数组长度创建新数组.............................................................. 120
7.2.3 指定数组元素创建新数组.............................................................. 121
7.2.4 直接创建新数组............................................................................. 121
7.3 数组元素基本操作...................................................................... 121
7.3.1 提取数据——读取数组元素.......................................................... 122
7.3.2 添加数据——添加数组元素.......................................................... 122
7.3.3 删除数据——删除数组元素.......................................................... 122
7.3.4 详解数组元素个数......................................................................... 122
7.4 数组对象常见操作...................................................................... 123
7.4.1 字符转换——数组转换为字符串.................................................. 123
7.4.2 字符连接——数组元素连接成字符串.......................................... 123
7.4.3 数据添加——在数组尾部添加元素.............................................. 124
7.4.4 数据更新——删除数组的最后一个元素...................................... 125
7.4.5 删除数据——移除数组顶端的元素.............................................. 126
7.4.6 添加数据——在数组头部添加元素.............................................. 127
7.4.7 扩充数组——添加元素并生成新数组.......................................... 128
7.4.8 更新移动数据——删除、替换或插入数组元素........................... 129
7.4.9 生成特定数据——获取数组中的一部分元素............................... 131
7.4.10 置换数据——颠倒数组元素的顺序............................................ 131
7.4.11 数据排序——对数组元素进行排序............................................. 132
7.4.12 数据转换——将对象转换为本地字符串.................................... 134
7.5 小结............................................................................................. 135
7.6 习题............................................................................................. 135
第二篇 对象篇
第8章 JavaScript 面向对象基础（ 教学视频：44 分钟）.. 138
8.1 面向对象概念.............................................................................. 138
8.1.1 面向对象中的语言......................................................................... 138
8.1.2 对象的构成方式............................................................................. 139
8.2 对象应用...................................................................................... 139
8.2.1 详解对象声明和实例化.................................................................. 139
8.2.2 详解对象的引用............................................................................. 141
8.2.3 详解对象的废除............................................................................. 141
8.2.4 详解对象的早绑定和晚绑定.......................................................... 142
8.3 JavaScript 的对象层次................................................................ 142
8.3.1 JavaScript 对象模型结构................................................................ 142
8.3.2 客户端对象层次简单介绍.............................................................. 143
8.3.3 浏览器对象模型详解................................................................. 143
8.4 事件驱动与事件处理.................................................................. 144
8.4.1 详解事件与事件驱动............................................................................... 144
8.4.2 掌握事件与处理代码关联.............................................................. 145
8.4.3 函数调用事件................................................................................. 146
8.4.4 代码调用事件................................................................................. 147
8.4.5 掌握设置对象事件的方法.............................................................. 148
8.4.6 掌握显式调用事件处理程序.......................................................... 149
8.4.7 事件处理程序的返回值.................................................................. 149
8.4.8 事件与this 运算符.......................................................................... 151
8.5 常用事件...................................................................................... 152
8.5.1 详解浏览器事件............................................................................. 152
8.5.2 详解鼠标移动事件......................................................................... 152
8.5.3 详解鼠标单击事件......................................................................... 153
8.5.4 详解加载与卸载事件.............................................................................. 154
8.5.5 详解得到焦点与失去焦点事件...................................................... 154
8.5.6 详解键盘事件................................................................................. 154
8.5.7 详解提交与重置事件........................................................................................ 155
8.5.8 详解选择与改变事件................................................................................. 155
8.6 小结............................................................................................. 156
8.7 习题............................................................................................. 156
第9章 窗口和框架（ 教学视频：70 分钟）........................ 159
9.1 window 对象................................................................................ 159
9.1.1 认识window 对象........................................................................... 159
9.1.2 认识window 对象的使用方法....................................................... 159
9.2 window 对象事件及使用方法.................................................... 160
9.2.1 装进去—装载文档............................................................................................ 160
9.2.2 卸下来—卸载文档..................................................................................... 161
9.2.3 焦点处理——得到焦点与失去焦点.............................................. 162
9.2.4 调整窗口的大小............................................................................. 163
9.2.5 对错误进行处理............................................................................. 163
9.3 对话框.......................................................................................... 164
9.3.1 过滤错误——警告对话框.............................................................. 164
9.3.2 信息确认——询问对话框.............................................................. 165
9.3.3 信息录入——输入对话框.............................................................. 166
9.4 状态栏.......................................................................................... 167
9.4.1 详解状态栏..................................................................................... 167
9.4.2 认识默认状态栏信息............................................................................... 167
9.4.3 认识状态栏瞬间信息..................................................................................... 168
9.5 窗口操作...................................................................................... 169
9.5.1 打开一个新窗口............................................................................. 169
9.5.2 认识窗口名字................................................................................. 170
9.5.3 如何关闭窗口................................................................................. 171
9.5.4 对窗口进行引用............................................................................. 172
9.5.5 对文档进行滚动............................................................................. 173
9.6 超时与时间间隔.......................................................................... 174
9.6.1 对代码延迟执行............................................................................. 174
9.6.2 认识周期性执行代码............................................................................. 175
9.6.3 停止执行周期性执行代码.............................................................. 176
9.6.4 取消延迟代码执行......................................................................... 177
9.7 框架操作...................................................................................... 178
9.7.1 框架简介......................................................................................... 178
9.7.2 详解父窗口与子窗口............................................................................ 178
9.7.3 详解窗口之间的关系.......................................................................... 179
9.7.4 认识窗口名字................................................................................. 180
9.8 小结............................................................................................. 180
9.9 习题............................................................................................. 180
第10章 屏幕和浏览器对象（ 教学视频：60 分钟）........... 183
10.1 认识屏幕对象............................................................................ 183
10.1.1 利用屏幕对象检测显示器参数.................................................... 183
10.1.2 利用屏幕对象检测客户端显示器屏幕分辨率............................ 184
10.1.3 利用屏幕对象检测客户端显示器屏幕的有效宽度和高度........ 185
10.1.4 利用屏幕对象进行网页开屏........................................................ 186
10.2 认识浏览器对象........................................................................ 187
10.2.1 获取浏览器对象的属性值............................................................ 187
10.2.2 MimeType 对象和Plugin 对象详解............................................. 188
10.2.3 浏览器对象的javaEnabled 属性详解.......................................... 189
10.3 小结........................................................................................... 190
10.4 习题........................................................................................... 190
第11章 文档对象（ 教学视频：84 分钟）.......................... 193
11.1 文档对象概述............................................................................ 193
11.1.1 初识文档对象................................................................................ 193
11.1.2 详解文档对象的使用方法............................................................ 193
11.1.3 对标签中的值进行引用................................................................ 194
11.1.4 详解引用文档中对象的方法........................................................ 195
11.2 文档对象的应用........................................................................ 197
11.2.1 美化链接——设置超链接的颜色................................................ 197
11.2.2 美化网页——设置网页背景颜色和默认文字颜色..................... 198
11.2.3 设置文档信息................................................................................ 199
11.2.4 如何在标题栏中显示滚动信息.................................................... 200
11.2.5 如何防止盗链................................................................................ 201
11.2.6 详解在网页中输出内容................................................................ 202
11.2.7 详解在其他文档中输出内容........................................................ 202
11.2.8 详解输出非HTML 文档.............................................................. 204
11.2.9 认识文档中的所有HTML 元素................................................... 205
11.2.10 如何引用文档中的HTML 元素................................................. 206
11.2.11 如何引用文档元素中的子元素.................................................. 207
11.3 图像对象.................................................................................... 208
11.3.1 图像对象概述................................................................................ 208
11.3.2 如何创建和使用图像对象............................................................ 209
11.3.3 掌握图像对象的onerror 事件...................................................... 210
11.3.4 掌握显示图片的信息.................................................................... 211
11.3.5 对图片进行置换............................................................................ 212
11.3.6 认识随机图片................................................................................ 213
11.3.7 动态改变图片大小........................................................................ 214
11.4 链接对象.................................................................................... 216
11.4.1 链接对象简介................................................................................ 216
11.4.2 掌握感知鼠标移动事件................................................................ 216
11.4.3 对一个网页上的所有超链接进行查看........................................ 217
11.4.4 认识翻页程序................................................................................ 218
11.4.5 认识网站目录................................................................................ 220
11.5 锚对象........................................................................................ 222
11.5.1 锚对象简介................................................................................... 222
11.5.2 认识锚对象与链接对象的区别.................................................... 222
11.5.3 巧建文档索引................................................................................ 223
11.6 小结........................................................................................... 224
11.7 习题........................................................................................... 225
第12章 历史对象和地址对象（ 教学视频：50 分钟）....... 229
12.1 历史对象.................................................................................... 229
12.1.1 历史对象简介............................................................................... 229
12.1.2 如何前进到上一页和后退到下一页............................................ 229
12.1.3 如何实现页面的跳转.................................................................... 231
12.2 地址对象.................................................................................... 232
12.2.1 URL 对象简介.............................................................................. 232
12.2.2 如何获取指定地址的各属性值.................................................... 232
12.2.3 如何加载新网页........................................................................... 233
12.2.4 如何获取参数............................................................................... 234
12.2.5 如何装载新文档与重新装载当前文档........................................ 235
12.2.6 如何刷新文档............................................................................... 236
12.2.7 如何加载新文档........................................................................... 237
12.3 小结........................................................................................... 238
12.4 习题........................................................................................... 238
第13章 表单对象和表单元素（ 教学视频：64 分钟）....... 241
13.1 表单对象概述............................................................................ 241
13.1.1 表单对象简介............................................................................... 241
13.1.2 对大小写进行转换....................................................................... 241
13.1.3 表单的提交和重置....................................................................... 243
13.1.4 响应表单的提交和重置................................................................ 244
13.2 表单对象的应用........................................................................ 245
13.2.1 如何进行表单验证....................................................................... 245
13.2.2 认识循环验证表单....................................................................... 247
13.2.3 掌握设置表单的提交方式............................................................ 248
13.2.4 认识重置表单的提示.................................................................... 249
13.2.5 如何不使用提交按钮来提交表单................................................ 250
13.3 表单元素.................................................................................... 252
13.3.1 表单元素简介............................................................................... 252
13.3.2 表单元素的命名方式.................................................................... 252
13.4 文本框........................................................................................ 254
13.4.1 认识文本框的创建方式................................................................ 254
13.4.2 如何查看文本框的属性值............................................................ 254
13.4.3 如何动态跟踪文本框中输入的文字个数.................................... 255
13.4.4 如何限制文本框中输入的字数.................................................... 256
13.4.5 如何自动选择文本框中的文字.................................................... 257
13.5 按钮........................................................................................... 258
13.5.1 按钮简介....................................................................................... 258
13.5.2 按钮创建方式简介....................................................................... 258
13.5.3 认识网页调色板........................................................................... 258
13.5.4 如何改变多行文本框大小............................................................ 260
13.6 小结........................................................................................... 261
13.7 习题........................................................................................... 261
第14章 脚本化cookie（ 教学视频：59 分钟）.................. 265
14.1 cookie 对象简介........................................................................ 265
14.1.1 什么是cookie 对象....................................................................... 265
14.1.2 cookie 的作用和检测用户浏览器是否支持cookie..................... 265
14.2 如何创建与读取cookie............................................................ 266
14.3 如何获取cookie 的值............................................................... 267
14.4 认识cookie 的编码................................................................... 268
14.5 掌握cookie 的生存期............................................................... 271
14.6 掌握cookie 的路径和域........................................................... 272
14.7 了解cookie 的安全性............................................................... 273
14.8 掌握使用cookie 的注意事项................................................... 275
14.9 小结........................................................................................... 275
14.10 习题.......................................................................................... 275
第三篇 高级技术篇
第15章 JavaScript 与XML 技术（ 教学视频：84 分钟）.. 281
15.1 XML 简介.................................................................................. 281
15.1.1 针对XML 的API 概述................................................................ 281
15.1.2 认识节点的层次........................................................................... 281
15.1.3 掌握特定语言的文档模型............................................................ 282
15.2 使用DOM................................................................................. 282
15.2.1 巧妙访问相关的节点.................................................................... 283
15.2.2 巧测节点类型............................................................................... 284
15.2.3 简单处理节点属性....................................................................... 285
15.2.4 如何访问指定节点....................................................................... 286
15.2.5 如何创建新节点........................................................................... 288
15.2.6 如何修改节点............................................................................... 289
15.3 HTML DOM 特性..................................................................... 290
15.3.1 让特性像属性一样....................................................................... 291
15.3.2 认识表格相关特性....................................................................... 292
15.4 遍历DOM 文档........................................................................ 293
15.4.1 认识文档节点迭代器.................................................................... 293
15.4.2 巧妙遍历文档树........................................................................... 294
15.5 如何测试与DOM 标准的一致性............................................. 296
15.6 小结........................................................................................... 297
15.7 习题........................................................................................... 297
第16章 正则表达式（ 教学视频：40 分钟）...................... 300
16.1 正则表达式基础........................................................................ 300
16.1.1 为何使用正则表达式.................................................................... 300
16.1.2 使用RegExp 对象......................................................................... 300
16.2 简单模式.................................................................................... 301
16.2.1 详解元字符................................................................................... 301
16.2.2 详解量词....................................................................................... 302
16.3 复杂模式.................................................................................... 303
16.3.1 使用分组....................................................................................... 304
16.3.2 使用候选....................................................................................... 304
16.3.3 使用非捕获性分组....................................................................... 305
16.3.4 使用前瞻....................................................................................... 306
16.4 常用模式.................................................................................... 307
16.4.1 使用正则表达式验证日期............................................................ 307
16.4.2 使用正则表达式验证电子邮件地址............................................ 309
16.5 小结........................................................................................... 310
16.6 习题........................................................................................... 310
第17章 AJAX基础（ 教学视频：68 分钟）....................... 314
17.1 了解传统的Web技术及AJAX的由来................................... 314
17.2 AJAX技术原理简介................................................................. 315
17.3 AJAX技术的优缺点分析......................................................... 315
17.4 认识AJAX技术的组成部分.................................................... 316
17.4.1 AJAX中的JavaScript技术.......................................................... 316
17.4.2 AJAX中的XMLHttpRequest技术.............................................. 316
17.4.3 AJAX中的CSS技术................................................................... 316
17.4.4 AJAX中的DOM技术................................................................. 317
17.4.5 AJAX中的XML技术................................................................. 317
17.5 XMLHttpRequest对象简介...................................................... 317
17.5.1 XMLHttpRequest简介.................................................................. 317
17.5.2 XMLHttpRequest如何创建.......................................................... 317
17.6 局部更新.................................................................................... 318
17.7 实现AJAX................................................................................ 320
17.7.1 详解实现AJAX的步骤............................................................... 320
17.7.2 如何创建HTTP请求.................................................................... 320
17.7.3 如何设置HTTP响应回调函数.................................................... 321
17.7.4 如何发送HTTP请求.................................................................... 321
17.7.5 一个完整的AJAX实例............................................................... 321
17.8 小结........................................................................................... 323
17.9 习题........................................................................................... 323
第18章 AJAX高级应用（ 教学视频：64 分钟）.................................................... 328
18.1 客户端脚本语言详解................................................................ 328
18.1.1 如何使用JavaScript的局部刷新技术......................................... 328
18.1.2 如何使用iframe的局部刷新技术............................................... 329
18.2 服务器脚本语言详解................................................................ 331
18.2.1 掌握改进的iframe局部刷新....................................................... 331
18.2.2 掌握AJAX与服务器互动........................................................... 332
18.3 小结........................................................................................... 334
18.4 习题........................................................................................... 334
第19章 JavaScript与插件（ 教学视频：96 分钟）........... 338
19.1 掌握ActiveX控件的应用........................................................ 338
19.1.1 创建ActiveX控件........................................................................ 338
19.1.2 添加ATL控件.............................................................................. 340
19.1.3 为控件添加属性........................................................................... 341
19.1.4 为实现类添加成员变量................................................................ 341
19.1.5 改写相关函数............................................................................... 341
19.1.6 添加事件功能............................................................................... 344
19.1.7 添加事件激发功能....................................................................... 345
19.1.8 编译生成控件............................................................................... 346
19.1.9 使用ActiveX控件........................................................................ 347
19.2 JavaApplet.................................................................................. 349
19.2.1 如何安装JDK............................................................................... 349
19.2.2 如何创建Applet............................................................................ 351
19.2.3 如何使用Applet............................................................................ 352
19.3 Flash 概述.................................................................................. 353
19.3.1 如何创建Flash.............................................................................. 353
19.3.2 认识Flash 与JavaScript的交互.................................................. 357
19.4 小结........................................................................................... 359
19.5 习题........................................................................................... 359
第20章 JavaScript的调试与优化（ 教学视频：57 分钟） 365
20.1 JavaScript 开发工具深入剖析.................................................. 365
20.2 JavaScript 的调试简介.............................................................. 366
20.2.1 如何进行调试前的准备工作........................................................ 366
20.2.2 如何进行调试............................................................................... 367
20.2.3 如何跟踪代码............................................................................... 368
20.3 对日志进行输出........................................................................ 369
20.4 对代码进行优化........................................................................ 371
20.5 小结........................................................................................... 373
20.6 习题........................................................................................... 374
第四篇 综合案例篇
第21章 捡馅饼游戏（ 教学视频：63 分钟）...................... 376
21.1 创作思路及基本场景的实现.................................................... 376
21.1.1 创作思路....................................................................................... 376
21.1.2 实现基本场景及用户界面............................................................ 376
21.2 设计游戏角色............................................................................ 379
21.2.1 馅对象........................................................................................... 379
21.2.2 饼对象........................................................................................... 380
21.3 游戏进程控制............................................................................ 383
21.3.1 初始化游戏................................................................................... 383
21.3.2 游戏启动控制............................................................................... 383
21.3.3 游戏循环....................................................................................... 385
21.3.4 游戏结束控制............................................................................... 386
21.3.5 运行测试....................................................................................... 387
21.4 小结........................................................................................... 388
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>21天学通JavaScript（第4版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript自学视频教程
本书光盘“自主学习系统”内容索引…XI
第1篇  入  门  篇
第1章  JavaScript入门
（ 视频讲解：20分钟）	2
1.1  JavaScript概述	3
1.1.1  JavaScript的发展历程	3
1.1.2  JavaScript的主要特点	3
1.1.3  JavaScript的典型应用	4
1.2  JavaScript运行环境	6
1.2.1  硬件要求	6
1.2.2  软件要求	7
1.2.3  浏览器对JavaScript脚本的支持	7
1.3  JavaScript的开发工具	8
1.3.1  Macromedia Dreamweaver	8
1.3.2  Microsoft FrontPage	9
1.4  在HTML中使用JavaScript	9
1.4.1  在页面中直接嵌入JavaScript
脚本	9
1.4.2  链接外部JavaScript文件	10
1.5  综合应用	11
1.6  本章小结	12
1.7  跟我上机	12
第2章  JavaScript基础
（ 视频讲解：78分钟）	13
2.1  JavaScript基本语法	14
2.1.1  程序的执行顺序	14
2.1.2  字母大小写敏感	14
2.1.3  语句的结束标记	14
2.2  JavaScript数据结构	15
2.2.1  标识符	15
2.2.2  关键字	15
2.2.3  常量	16
2.2.4  变量	16
2.3  数据类型	18
2.3.1  数字型数据	18
2.3.2  字符串型数据	20
2.3.3  布尔型数据	21
2.3.4  特殊数据类型	22
2.3.5  数据类型的转换规则	23
2.4  运算符与表达式	24
2.4.1  算术运算符	24
2.4.2  比较运算符	25
2.4.3  赋值运算符	26
2.4.4  字符串运算符	27
2.4.5  布尔运算符	27
2.4.6  条件运算符	28
2.4.7  其他运算符	28
2.4.8  运算符优先级	29
2.4.9  表达式	31
2.5  综合应用	31
2.5.1  输出姚明个人信息	31
2.5.2  计算长方形的面积	32
2.6  本章常见错误	32
2.6.1  程序代码大小写不统一	32
2.6.2  输出字符串时未加引号	32
2.7  本章小结	32
2.8  跟我上机	33
第3章  流程控制语句
（ 视频讲解：20分钟）	34
3.1  条件控制语句	35
3.1.1  if条件控制语句	35
3.1.2  if…else语句	36
3.1.3  if…else if语句	36
3.1.4  if语句的嵌套	39
3.1.5  switch多分支语句	41
3.2  循环控制语句	43
3.2.1  while循环语句	43
3.2.2  do…while循环语句	44
3.2.3  for循环语句	45
3.3  跳转语句	47
3.3.1  continue跳转语句	47
3.3.2  break跳转语句	48
3.4  综合应用	48
3.4.1  利用continue语句计算100以内
所有偶数的和	48
3.4.2  用for语句制作一个乘法
口诀表	49
3.5  本章常见错误	50
3.5.1  条件语句中缺少小括号	50
3.5.2  while语句不正确，形成死循环	50
3.6  本章小结	50
3.7  跟我上机	50
第4章  函数
（ 视频讲解：18分钟）	52
4.1  函数的定义	53
4.2  函数的调用	53
4.2.1  函数的参数	53
4.2.2  函数的简单调用	54
4.2.3  通过链接调用函数	55
4.2.4  在响应事件中调用函数	55
4.2.5  函数的返回值	56
4.3  几种特殊的函数	57
4.3.1  构造函数与函数直接量	57
4.3.2  JavaScript的内置函数	59
4.3.3  嵌套函数	62
4.3.4  递归函数	63
4.4  综合应用	65
4.4.1  自定义一个为数字取绝对值的
函数	65
4.4.2  随机生成指定位数的验证码	66
4.5  本章常见错误	67
4.5.1  使用JavaScript关键字作为
变量名或函数名	67
4.5.2  自定义函数后没有调用	67
4.6  本章小结	67
4.7  跟我上机	67
第5章  字符串与数值处理对象
（ 视频讲解：26分钟）	68
5.1  字符串对象String	69
5.1.1  search()方法	69
5.1.2  match()方法	69
5.1.3  split()方法	70
5.1.4  replace()方法	70
5.2  常用的数值处理对象	71
5.2.1  Math对象	71
5.2.2  Number对象	73
5.2.3  Boolean对象	78
5.2.4  Date对象	80
5.3  综合应用	83
5.3.1  将RGB格式的颜色值转换为
十六进制格式	83
5.3.2  通过自定义函数实时显示系统
时间	85
5.4  本章常见错误	86
5.4.1  书写Date对象的方法名不正确	86
5.4.2  使用new关键字创建Math对象	86
5.5  本章小结	86
5.6  跟我上机	86
第6章  正则表达式
（ 视频讲解：44分钟）	88
6.1  正则表达式概述	89
6.1.1  为什么要使用正则表达式	89
6.1.2  正则表达式基本结构	89
6.2  正则表达式的语法规则	89
6.2.1  模式匹配符	90
6.2.2  定位符与原义字符	91
6.2.3  限定符与选择匹配符	94
6.2.4  特殊字符与字符匹配符	95
6.2.5  分组组合与反向引用符	98
6.2.6  整合常用的正则表达式	99
6.3  RegExp对象	101
6.3.1  创建RegExp对象	101
6.3.2  RegExp对象的属性	103
6.3.3  RegExp对象的方法	104
6.4  综合应用	108
6.4.1  验证输入是否为汉字	108
6.4.2  验证身份证号码	109
6.5  本章常见错误	111
6.5.1  匹配特殊字符时未使用转义
字符“\”	111
6.5.2  显式构造函数中的表达式未加
引号	111
6.6  本章小结	111
6.7  跟我上机	111
第7章  数组
（ 视频讲解：18分钟）	113
7.1  数组对象Array	114
7.1.1  Array对象概述	114
7.1.2  数组元素的输入输出	116
7.2  常用的数组操作方法	118
7.2.1  数组的添加和删除	118
7.2.2  数组的排序	120
7.2.3  获取数组中的某段数组元素	122
7.2.4  将数组转换成字符串	122
7.3  综合应用	124
7.3.1  使用数组显示星期	124
7.3.2  使用数组存储商品信息	125
7.4  本章常见错误	125
7.4.1  数组对象名和已存在的
变量重名	125
7.4.2  获取数组长度写成arrayObj.
length()	126
7.5  本章小结	126
7.6  跟我上机	126
第8章  程序调试与错误处理
（ 视频讲解：15分钟）	127
8.1  IE浏览器内置的错误报告	128
8.2  处理异常	128
8.2.1  常见的3种异常类型	129
8.2.2  onerror事件处理异常	129
8.2.3  try...catch语句处理异常	131
8.3  JavaScript语言调试	134
8.3.1  使用write()方法进行调试	134
8.3.2  使用alert语句进行调试	135
8.3.3  使用抛出自定义异常进行调试	135
8.4  综合应用	136
8.4.1  使用提示对话框显示异常信息	136
8.4.2  判断参数个数和除数是否为0	137
8.5  本章常见错误	138
8.5.1  根据浏览器中的错误提示断定
错误	138
8.5.2  try…catch使用大写	138
8.6  本章小结	138
8.7  跟我上机	138


第2篇  提  高  篇
第9章  Document对象
（ 视频讲解：20分钟）	140
9.1  文档对象概述	141
9.2  文档对象的常用属性、方法与
事件	141
9.2.1  Document对象的常用属性	141
9.2.2  Document对象的常用方法	142
9.2.3  Document对象的常用事件	142
9.3  Document对象的应用	143
9.3.1  链接文字颜色设置	143
9.3.2  文档背景色和前景色设置	145
9.3.3  查看文档创建时间、修改时间和
文档大小	146
9.3.4  获取对象的当前状态	147
9.3.5  获取并设置URL	148
9.3.6  在文档中输出数据	148
9.3.7  动态添加一个HTML标记	149
9.3.8  获取文本框并修改其内容	150
9.4  综合应用	151
9.4.1  动态设置网页的标题栏	151
9.4.2  打开新窗口并输出内容	152
9.5  本章常见错误	153
9.5.1  Document对象的属性和方法
忽略大小写	153
9.5.2  document.getElementById(…)
为空或不是对象	153
9.6  本章小结	154
9.7  跟我上机	154
第10章  Window对象
（ 视频讲解：32分钟）	155
10.1  Window对象概述	156
10.1.1  Window对象的属性	156
10.1.2  Window对象的方法	156
10.1.3  Window对象的使用	157
10.2  对话框	158
10.2.1  警告对话框	158
10.2.2  确认对话框	159
10.2.3  提示对话框	160
10.3  打开与关闭窗口	161
10.3.1  打开窗口	161
10.3.2  关闭窗口	164
10.4  控制窗口	166
10.4.1  移动窗口	166
10.4.2  窗口滚动	169
10.4.3  改变窗口大小	170
10.4.4  控制窗口状态栏	171
10.4.5  访问窗口历史	174
10.4.6  设置超时	174
10.5  窗口事件	175
10.5.1  通用窗口事件	175
10.5.2  扩展窗口事件	175
10.6  IE浏览器窗口扩展	176
10.6.1  模式窗口	176
10.6.2  无模式窗口	176
10.6.3  弹出窗口	177
10.7  综合应用	178
10.7.1  根据用户分辨率自动调整
窗口	178
10.7.2  网页拾色器	178
10.8  本章常见错误	180
10.8.1  在使用Window方法时未写
小括号	180
10.8.2  clearTimeout(timerId)中的timerId
加了引号	180
10.9  本章小结	181
10.10  跟我上机	181
第11章  JavaScript事件处理
（ 视频讲解：50分钟）	182
11.1  事件与事件处理概述	183
11.1.1  事件与事件名称	183
11.1.2  JavaScript的常用事件	183
11.1.3  事件的调用	185
11.2  DOM事件模型	186
11.2.1  事件流	186
11.2.2  主流浏览器的事件模型	186
11.2.3  事件对象	187
11.2.4  注册与移除事件监听器	188
11.3  表单相关事件	190
11.3.1  获得焦点与失去焦点事件	190
11.3.2  失去焦点内容改变事件	191
11.3.3  表单提交与重置事件	192
11.4  鼠标键盘事件	195
11.4.1  鼠标单击事件	195
11.4.2  鼠标按下和松开事件	196
11.4.3  鼠标移入移出事件	197
11.4.4  鼠标移动事件	197
11.4.5  键盘事件	198
11.5  页面事件	200
11.5.1  加载与卸载事件	200
11.5.2  页面大小事件	201
11.6  滚动字幕事件	202
11.6.1  onbounce事件	202
11.6.2  onstart事件	204
11.7  文本编辑事件	205
11.8  综合应用	208
11.8.1  屏蔽键盘相关事件	208
11.8.2  限制文本框的输入	210
11.9  本章常见错误	211
11.9.1  onsubmit调用自定义函数时
未加return语句	211
11.9.2  JavaScript中的事件名称忽略了
大小写	211
11.10  本章小结	211
11.11  跟我上机	212
第12章  表单的应用
（ 视频讲解：32分钟）	214
12.1  表单概述	215
12.2  表单标记及其属性	215
12.2.1  name属性	216
12.2.2  action属性	216
12.2.3  method属性	216
12.2.4  enctype属性	217
12.2.5  target属性	217
12.3  输入标记<input>	217
12.3.1  文字域text	218
12.3.2  密码域password	219
12.3.3  单选按钮radio	220
12.3.4  复选框checkbox	221
12.3.5  普通按钮button	221
12.3.6  提交按钮submit	222
12.3.7  重置按钮reset	222
12.3.8  图像域image	223
12.3.9  隐藏域hidden	224
12.3.10??文件域file	224
12.4  文本域标记<textarea>	225
12.5  菜单和列表标记<select>、
<option>	226
12.6  在Dreamweaver中快速创建
表单	227
12.7  JavaScript访问表单及表单
元素	229
12.7.1  JavaScript访问表单	229
12.7.2  JavaScript访问表单元素	230
12.8  表单的验证	230
12.9  综合应用	233
12.9.1  让密码域更安全	233
12.9.2  制作个人信息页面	234
12.10  本章常见错误	236
12.10.1  上传文件表单没有设置enctype
属性	236
12.10.2  表单中的列表不能实现多选	236
12.11  本章小结	236
12.12  跟我上机	236
第13章  JavaScript操作XML和DOM
（ 视频讲解：44分钟）	239
13.1  XML编程	240
13.1.1  XML概述	240
13.1.2  创建XML文件	240
13.1.3  加载XML文件	241
13.1.4  读取XML	244
13.2  DOM编程	248
13.2.1  DOM概述	248
13.2.2  DOM对象节点属性	251
13.2.3  操作节点	255
13.2.4  获取文档中的指定元素	262
13.2.5  与DHTML相对应的DOM	264
13.3  DOM与XML编程	266
13.4  综合应用	267
13.4.1  通过JavaScript操作XML实现
分页	267
13.4.2  通过操作XML数据岛实现添加、
删除留言信息	269
13.5  本章常见错误	272
13.5.1  getElementById()方法无法获取
指定元素	272
13.5.2  getElementsByName()方法无法
获取元素	273
13.6  本章小结	273
13.7  跟我上机	273
第14章  Cookie应用
（ 视频讲解：28分钟）	275
14.1  Cookie基础	276
14.1.1  Cookie概述	276
14.1.2  Cookie的传递流程	278
14.1.3  Cookie的常用属性	278
14.2  JavaScript中的Cookie应用	279
14.2.1  Cookie的设置	279
14.2.2  Cookie的写入和读取	281
14.2.3  删除Cookie	288
14.3  Cookie的安全问题	289
14.4  综合应用	290
14.4.1  页面重定向中使用Cookie	290
14.4.2  弹出的窗口之Cookie控制	291
14.5  本章常见错误	293
14.5.1  expires属性用encodeURI()
进行编码	293
14.5.2  浏览器重新打开后获取不到
Cookie值	293
14.6  本章小结	293
14.7  跟我上机	293
第15章  图像处理
（ 视频讲解：30分钟）	295
15.1  Image对象	296
15.2  JavaScript中的图像应用	296
15.2.1  图像的预装载	296
15.2.2  图片的随机显示	298
15.2.3  浮动广告	300
15.2.4  图片验证码	302
15.2.5  图片置顶	302
15.2.6  进度条	304
15.2.7  图片时钟	305
15.3  特殊的图像效果	306
15.3.1  图片渐变	306
15.3.2  图片翻转	307
15.3.3  图片闪烁	311
15.4  综合应用	312
15.4.1  图片水波倒影	312
15.4.2  图片无间断滚动	313
15.5  本章常见错误	314
15.5.1  图像文件路径不正确	314
15.5.2  document.images[]获取图像
不正确	314
15.6  本章小结	314
15.7  跟我上机	315
第16章  文件处理和页面打印
（ 视频讲解：82分钟）	316
16.1  文件处理对象	317
16.1.1  FileSystemObject对象	317
16.1.2  Drive对象	322
16.1.3  File对象	326
16.1.4  Folder对象	337
16.2  页面打印	338
16.2.1  使用execWB方法进行打印	338
16.2.2  打印页面局部内容	341
16.2.3  设置页眉页脚	342
16.2.4  分页打印	344
16.3  综合应用	346
16.3.1  表格导出到Word并打印	346
16.3.2  将Web页面中的数据导出到
Excel	348
16.4  本章常见错误	349
16.4.1  GetFile()方法指定的文件
不存在	349
16.4.2  Delete()方法删除的文件
不存在	349
16.5  本章小结	350
16.6  跟我上机	350
第17章  嵌入式插件
（ 视频讲解：22分钟）	351
17.1  嵌入对象标记<object>	352
17.2  MIME类型	353
17.3  ActiveX控件	354
17.3.1  创建ActiveX	354
17.3.2  嵌入ActiveX	354
17.3.3  JavaScript与ActiveX交互	355
17.4  Java applet对象	356
17.4.1  创建Java applet	356
17.4.2  嵌入Java applet	356
17.4.3  在IE中执行Java applet	357
17.4.4  JavaScript与Java applet交互	358
17.5  使用Flash动画	359
17.5.1  嵌入Flash动画	359
17.5.2  使用JavaScript控制Flash	361
17.6  综合应用	363
17.6.1  为网页设置背景音乐	363
17.6.2  插入背景透明的Flash动画	364
17.7  本章常见错误	365
17.7.1  无法向注册表中注册ActiveX
控件	365
17.7.2  使用<object>标记嵌入Flash
未指定MIME类型	365
17.8  本章小结	365
17.9  跟我上机	365
第18章  AJAX技术
（ 视频讲解：38分钟）	366
18.1  AJAX概述	367
18.1.1  什么是AJAX	367
18.1.2  AJAX应用案例	367
18.1.3  AJAX的开发模式	369
18.1.4  AJAX的优点	370
18.2  AJAX的技术组成	370
18.2.1  XMLHttpRequest对象	370
18.2.2  XML语言	371
18.2.3  JavaScript脚本语言	373
18.2.4  DOM	373
18.2.5  CSS	373
18.3  XMLHttpRequest对象	374
18.3.1  XMLHttpRequest对象的
初始化	374
18.3.2  XMLHttpRequest对象的常用
属性	375
18.3.3  XMLHttpRequest对象的常用
方法	377
18.4  AJAX的重构	379
18.5  AJAX开发注意事项	381
18.5.1  浏览器兼容性问题	381
18.5.2  安全问题	381
18.5.3  性能问题	382
18.5.4  解决中文乱码问题	382
18.6  综合应用	383
18.6.1  应用AJAX技术检测用户名	383
18.6.2  应用AJAX技术删除数据	385
18.7  本章常见错误	388
18.7.1  在应用AJAX过程中出现
乱码	388
18.7.2  不能及时获取最新数据	388
18.8  本章小结	388
18.9  跟我上机	389
第19章  JQuery脚本库
（ 视频讲解：95分钟）	391
19.1  JQuery概述	392
19.1.1  JQuery主要特点	392
19.1.2  JQuery案例展示	393
19.2  JQuery下载与配置	394
19.2.1  JQuery下载	394
19.2.2  JQuery配置	395
19.3  JQuery的插件	396
19.3.1  插件的使用	396
19.3.2  流行的插件	396
19.4  JQuery选择器	398
19.4.1  JQuery的工厂函数	399
19.4.2  基本选择器	399
19.4.3  层级选择器	405
19.4.4  过滤选择器	412
19.4.5  属性选择器	419
19.4.6  表单选择器	420
19.5  JQuery操作元素	421
19.5.1  操作元素内容和值	421
19.5.2  操作DOM节点	425
19.5.3  操作元素属性	428
19.5.4  操作元素的CSS样式	429
19.6  JQuery的事件处理	430
19.6.1  页面加载响应事件	430
19.6.2  JQuery中的事件	431
19.6.3  事件绑定	432
19.6.4  模拟用户操作事件	433
19.6.5  事件捕获与事件冒泡	435
19.7  JQuery动画	438
19.7.1  元素的隐藏和显示	438
19.7.2  元素的淡入淡出	442
19.7.3  元素的滑动效果	443
19.7.4  自定义动画效果	445
19.8  综合应用	449
19.8.1  表格隔行换色	449
19.8.2  打造自己的开心农场	451
19.9  本章常见错误	453
19.9.1  两个元素的id属性值相同	453

19.9.2  使用animate()方法时未设置
position定位属性	453
19.10  本章小结	453
19.11  跟我上机	453


第3篇  实  战  篇
第20章  JavaScript+AJAX+JQuery开发企业门户网站
（ 视频讲解：12分钟）	458
20.1  系统分析	459
20.2  系统设计	459
20.2.1  系统目标	459
20.2.2  系统功能结构	459
20.3  网页预览	460
20.4  关键技术	462
20.4.1  JavaScript脚本技术	463
20.4.2  AJAX无刷新技术	465
20.4.3  JQuery技术	470
20.5  JavaScript实现导航菜单	471
20.6  JQuery实现图片展示	473
20.7  AJAX实现最新消息页面	476
20.8  JavaScript实现产品推荐页面	478
20.9  JavaScript实现浮动窗口	480
20.10  本章小结	482


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript自学视频教程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript语法和对象速查手册
第1篇　JavaScript入门　第1章　认识JavaScript　第2章　JavaScript语法基础　第3章　函数和对象第2篇　函数和JavaScript对象详解　第4章　JavaScript的内部函数　第5章　String字符串对象　第6章　Number数值对象　第7章　Date日期对象　第8章　Math对象　第9章　Array数组对象　第10章　其他JavaScript对象第3篇　浏览器对象详解　第11章　Window窗口对象　第12章　Navigator浏览器对象　第13章　Screen屏幕对象　第14章　其他浏览器对象第4篇　DOM对象详解　第15章　Document文档对象　第16章　Form表单对象　第17章　Table表格对象　第18章　浏览器事件对象　第19章　其他常见DOM对象第5篇　ActiveX插件技术  第20章  ActiveX对象的应用  第21章  FileSystemObject文件处理对象  第22章  使用JavaScript操作数据库附录索引
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript语法和对象速查手册
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>最新HTML\CSS\JavaScript标准教程
HTML篇  01  HTML基础知识    1.1  什么是HTML    1.2  HTML的基本结构      1.2.1  HTML文件结构      1.2.2  编写HTML文件时的注意事项    1.3  HTML文件编写方法      1.3.1  使用记事本手工编写HTML页面      1.3.2  使用Dreamweaver编写HTML页面    1.4  HTML页面主体标签<body>      1.4.1  设置网页背景色(bgcolor)      1.4.2  设置背景图片(background)      1.4.3  设置文本颜色(text)      1.4.4  设置链接文本属性(link)      1.4.5  设置边距(margin)    1.5  综合实训——创建最基本的HTML文件    1.6  本章小结    1.7  代码练习      1.7.1  使用记事本编写HTML代码      1.7.2  创建最基本的HTML网页    1.8  行业链接知识  02  HTML网页中的文字、段落和列表  03  图片及多媒体文件的使用  04  HTML超链接和表单  05  创建框架结构网页  06  使用表格  07  使用XHTMLCSS篇JavaScript篇综合篇
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>最新HTML\CSS\JavaScript标准教程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>网站开发新动力 HTML/JavaScript/ASP网页开发秘笈
第1章 HTML从零开始
第2章 如何建立超级链接
第3章 如何插入图形
第4章 如何建立框架
第5章 FORM元素
第6章 CSS语法定义及嵌入方法
第7章 CSS属性及单位
第8章 CSS定位方法
第9章 功能强大CSS滤镜
第10章 JavaScript基本知识
第11章 JavaScript的函数
第12章 JavaScript中的对象
第13章 JavaScript中鼠标事件及其他
第14章 VBScript从零开始
第15章 VBScript的过程与其他
……
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>网站开发新动力 HTML/JavaScript/ASP网页开发秘笈
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML JavaScript与Java完全实战演练
第1章  网页编程基础
1. 1  Internet的基本情况
1. 1. 1  计算机网络与Internet
1. 1. 2  Internet上的服务
1. 1. 3  TCP/IP协议

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML JavaScript与Java完全实战演练
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JAVASCRIPT 教学范本
第1章  JavaScript简介	1
什么是Script	2
什么是JavaScript	2
JavaScript可以做什么	3
JavaScript与国际标准	4
JavaScript的执行平台	5

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JAVASCRIPT 教学范本
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript 技术大全
译者序作者介绍前言第一部分
J

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript 技术大全
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript 案例教程

目 录


第1篇图像特效

案例1　改变图像隐现效果

案例2　图片变形扭曲

案例3　雪景

案例4　相片选择器

案例5　图像循环渐显

案例6　图片响应鼠标变换

案例7　图像浏览器

案例8　水纹倒影

案例9　图片自由运动

案例10　飘动的图片

案例11　图片虚幻表示

第2篇　鼠标特效

案例12　鼠标经过打开新页面

案例13　字符围绕鼠标

案例14　追逐鼠标指针的图片

案例15　跟着鼠标指针的字符

案例16　鼠标跟踪器

第3篇　状态栏特效

案例17　跳动的状态栏

案例18　消失的状态栏信息

案例19　"冒泡"的状态栏

案例20　标题栏跑马灯

案例21　状态栏跑马灯

案例22　状态栏导航

案例23　状态栏文字快速依次弹出

案例24　状态栏文字组合弹出

第4篇　页面特效

案例25　文档滚动特效

案例26　改变背景颜色

案例27　背景颜色连续变化

案例28　时间决定背景颜色

案例29　背景颜色表

第5篇　文本特效

案例3O　降落的文本

案例31　缓缓上移的文本

案例32　飘动的文本

案例33　文字逐个闪耀

案例34　旋转变换的文本

案例35　文字效果变幻

案例36　字符消隐特效

案例37　文本自动输出特效

案例38　文本颜色渐变

案例39　文本弹跳特效

案例40　元素周期表

第6篇　页面导航

案例41　动态导航

案例42　隐现导航

案例43　下拉式导航菜单

案例44　层叠式导航菜单

案例45　目录式导航菜单

案例46　移动导航菜单

案例47　导航菜单说明

案例48　自动变色的链接

案例49　浮动链接导航条

案例50　跑马灯式栏目指南

第7篇　其他特效

案例51　设置打开窗口的特性

案例52　日历

案例53　追踪来访次数

案例54　记录上次访问时间
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript 案例教程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript 动态网站建设
第一部分  基础篇
第1章  JavaScript简介
1. 1  Internet概述
1. 1. 1  Internet工作原理
1. 1. 2  Internet发展简史
l. l. 3  Intern

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript 动态网站建设
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript实践与提高
第1章　JavaScript简介

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript实践与提高
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JAVASCRIPT宝典
前言
第1部分  JavaScript初步
第1章  JavaScript在存维网上的地位
网上竞争
标准的沿革
CGI的Script过程
关于辅助程序、插件和小应用程序
关于辅助程序、插件和小应用程序
插件
Java的小应用程序
JavaScript：语言的集大成者
LiveScript变成了JavaScript
走到一起来
JavaScript：一种活学活

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JAVASCRIPT宝典
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML+CSS+JavaScript网页客户端程序设计
第1章 网站部署与发布及设计分析	/1
1.1 网页的基本概念	/1
1.2 网站的发布与测试	/5
1.2.1 在实验室或局域网内部发布HTML页面	/5
1.2.2 在Internet上发布网站	/7
1.3 软件开发流程	/8
1.4 网站开发人员相关岗位职责和要求	/10
1.5 网站开发工具和项目实施	/11
1.6 项目实训：免费域名的注册与空间申请	/12
1.7 综合练习	/12
第2章 HTML页面与框架	/14
2.1 HTML页面文件的整体结构	/15
2.2 HTML文件的标签与语法	/15
2.3 HTML文档编写规范	/16
2.4 利用Dreamweaver进行HTML页面设计	/16
2.4.1 Dreamweaver介绍	/16
2.4.2 Dreamweaver设计页面过程	/19
2.5 项目实训：独立动手制作网页	/21
2.6 认识框架与框架集网页	/21
2.7 典型应用项目范例：利用框架制作设计院门户网站网页	/23
2.8 项目实训：利用框架设计网页	/27
2.9 综合练习	/27
第3章 表格	/29
3.1 表格标签	/29
3.1.1 利用＜table＞标签布局网站页面	/29
3.1.2 利用＜tr＞、＜th＞和＜td＞标签设计统计数据表格	/30
3.2 格式化表格与单元格	/32
3.2.1 通过设置表格的宽度高度和边框颜色来突出网页主题	/32
3.2.2 设置滚动公告消息的背景颜色与背景图片	/33
3.2.3 设置表格的边框大小和显示方式	/34
3.2.4 数据表格整体位置及单元格数据对齐方式的设置	/35
3.2.5 单元格背景颜色与背景图片的制作	/36
3.3 表格标题制作	/37
3.4 合并单元格	/38
3.5 设置表格的表头、主体与表尾	/39
3.6 表格列的设置	/41
3.7 典型应用项目范例：利用表格布局门户网站页面	/42
3.8 项目实训：大学门户网站首页布局设计	/46
3.9 综合练习	/47
第4章 表单	/48
4.1 认识表单	/48
4.1.1 表单简介	/48
4.1.2 ＜form＞标签	/48
4.2 使用输入标签＜input＞插入数据控件	/50
4.3 列表标签＜select＞	/53
4.4 文字域标签＜textarea＞	/55
4.5 虚框修饰标签＜fieldset＞＜legend＞	/56
4.6 典型应用项目范例：设计用户注册功能	/57
4.7 文件上传与下载	/60
4.8 项目实训：学生独立完成留言簿功能	/63
4.9 综合练习	/64
第5章 HTML网页格式设置	/65
5.1 HTML网页文字美化	/65
5.1.1 标题字格式	/65
5.1.2 文字修饰	/67
5.1.3 字体设置	/71
5.2 HTML网页段落设置	/73
5.3 HTML网页列表显示	/75
5.3.1 有序列表	/76
5.3.2 无序列表	/77
5.4 HTML网页其他标签	/80
5.4.1 水平线标签＜HR＞	/80
5.4.2 滚动文字标签＜MARQUEE＞	/82
5.4.3 输入空格等特殊符号	/84
5.4.4 插入或删除线标签	/84
5.4.5 设置提示文字	/84
5.4.6 设置跑马灯效果	/85
5.5 典型应用项目范例：网站滚动消息公告设计	/86
5.6 综合练习	/89
第6章 图片与超链接	/90
6.1 网页图片的格式	/90
6.2 插入图片	/91
6.3 设置影像地图	/94
6.3.1 定义影像地图热点	/94
6.3.2 在HTML文件中建立影像地图	/95
6.3.3 建立图像影像关联	/96
6.4 典型应用项目范例：影像地图在门户网站中的应用	/97
6.5 路径的概念	/98
6.5.1 统一资源定位器URL	/98
6.5.2 相对路径和绝对路经	/99
6.6 超链接标签＜A＞	/100
6.7 超链接的应用	/101
6.7.1 图片链接	/101
6.7.2 邮箱链接	/102
6.7.3 书签链接	/103
6.7.4 其他相关标签	/104
6.8 典型应用项目范例：超链接在项目中的应用	/105
6.9 综合练习	/107
第7章 网页上的特殊元素与特效	/109
7.1 加入音乐	/109
7.1.1 常见的音乐格式	/110
7.1.2 音乐相关的标签	/111
7.2 加入视频和Flash	/113
7.3 元信息标签＜META＞的应用	/115
7.4 嵌入Java Applet实现烟花特效网页	/118
7.5 嵌入JavaScript实现跑马灯特效网页	/119
7.6 典型应用项目范例：嵌入Flash网页动画	/120
7.7 综合练习	/121
第8章 JavaScript基础语法	/123
8.1 JavaScript概述	/123
8.2 JavaScript的功能	/124
8.3 编写第一个JavaScript程序	/125
8.4 在HTML页面中引入JavaScript的方式	/126
8.4.1 内部引用JavaScript	/126
8.4.2 外部引用JavaScript	/127
8.4.3 内联引用JavaScript	/128
8.5 JavaScript基本语法	/129
8.5.1 JavaScript代码编写格式及规范	/129
8.5.2 JavaScript保留字	/130
8.5.3 基本的输出方法	/130
8.6 JavaScript交互基本方法	/131
8.6.1 显示警告对话框的alert( )方法	/131
8.6.2 显示确认对话框的confirm( )方法	/132
8.6.3 显示提示对话框的prompt( )方法	/133
8.7 基本数据类型、常量和变量	/135
8.7.1 基本数据类型	/135
8.7.2 常量	/135
8.7.3 变量	/136
8.7.4 变量的声明及作用域	/136
8.8 表达式和运算符	/137
8.8.1 表达式	/137
8.8.2 算术运算符和赋值运算符	/138
8.8.3 比较运算符和逻辑运算符	/141
8.8.4 位运算符和条件运算符	/143
8.8.5 其他运算符	/144
8.8.6 运算符的优先级	/147
8.9 典型应用项目范例：在网页上显示系统日期时间	/148
8.10 项目实训：根据半径的值求圆的周长、面积和体积	/149
8.11 综合练习	/149
第9章 JavaScript程序控制语句	/150
9.1 顺序控制语句	/150
9.2 分支控制语句	/152
9.2.1 if语句	/152
9.2.2 if...else语句	/153
9.2.3 switch语句	/155
9.3 循环控制语句	/157
9.3.1 while语句	/157
9.3.2 do…while语句	/158
9.3.3 for 语句	/159
9.3.4 for…in语句	/161
9.3.5 break和continue语句	/163
9.4 典型应用项目范例：网页分时问候	/163
9.5 项目实训：将成绩分数按4个等级输出结果	/165
9.6 综合练习	/165
第10章 JavaScript函数与对象	/166
10.1 函数概述	/166
10.2 JavaScript内置函数	/167
10.3 自定义函数	/181
10.4 典型应用项目范例：在网页上实现日期验证	/183
10.5 内置对象	/186
10.5.1 浏览器信息对象（navigator）	/186
10.5.2 窗口对象（window）	/188
10.5.3 屏幕对象（screen）	/191
10.5.4 历史记录对象（history）	/191
10.5.5 文档对象（document）	/191
10.6 JavaScript操作页面中标签元素与属性	/192
10.6.1 页面标签对象的引用	/192
10.6.2 HTML文档中控件对象的属性	/195
10.6.3 表单及其控件的访问	/196
10.7 典型应用项目范例：弹出“用户登记”新窗口	/197
10.8 综合练习	/199
第11章 JavaScript事件触发与响应处理	/200
11.1 事件触发与响应	/200
11.2 常用事件程序编写	/201
11.2.1 click事件	/201
11.2.2 change事件	/202
11.2.3 select事件	/202
11.2.4 focus事件	/203
11.2.5 load事件	/204
11.2.6 鼠标移动事件	/205
11.2.7 onblur事件	/207
11.3 其他常用事件	/208
11.4 典型应用项目范例：Web页面打印	/210
11.5 综合练习	/212
第12章 JavaScript应用实例	/213
12.1 状态栏跑马灯	/213
12.2 禁止使用鼠标右键	/214
12.3 随机播放背景音乐	/216
12.4 动态导航菜单	/217
12.5 具有提示效果的超链接	/218
12.6 在网页上实现表单验证	/219
12.7 综合练习	/221
第13章 CSS	/222
13.1 CSS文档制作与应用	/222
13.1.1 CSS文档制作	/222
13.1.2 CSS语言在HTML文档中的应用方式	/223
13.2 CSS选择器	/225
13.3 设置CSS样式	/226
13.3.1 设置字体样式	/226
13.3.2 设置文字样式（Text Property）	/228
13.3.3 设置背景样式（Background Property）	/230
13.3.4 设置区域样式（Box Property）	/231
13.3.5 设置分类样式（Classification Property）	/233
13.4 典型应用项目范例：门户网站菜单列表的设计	/234
13.5 定位效果制作	/241
13.5.1 利用层制作图层叠加特殊效果	/241
13.5.2 制作图片透明效果	/242
13.5.3 鼠标指针变换	/243
13.6 综合练习	/243
第14章 认识HTML5	/245
14.1 HTML5语法的改变	/245
14.1.1 HTML5中的标记方法	/245
14.1.2 HTML5与早期版本HTML的兼容性	/246
14.2 新增的和废除的元素	/247
14.3 新增的和废除的属性	/249
14.4 全局属性	/251
14.5 典型应用项目范例：HTML5离线访问功能的实现	/253
14.6 综合练习	/256
第15章 认识CSS3	/257
15.1 概要介绍	/257
15.1.1 CSS3新特性	/257
15.1.2 CSS的发展历史	/259
15.2 CSS3的功能	/259
15.2.1 模块与模块化结构	/259
15.2.2 CSS3自动拉伸背景图片新功能应用	/260
15.3 典型应用项目范例：CSS3文字特殊效果制作	/262
15.4 综合练习	/263
附录A	/265
参考文献	/270
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML+CSS+JavaScript网页客户端程序设计
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript網頁應用程式設計
前言
chapter 01 MVC 和類別（Classes）
chapter 02 事件（Event）和監聽
chapter 03 模型（Model）和資料
chapter 04 控制器（Controller）和狀態
chapter 05 檢視器（View）與模版（Template）
chapter 06 相依性管理（Dependency Management）
chapter 07 處理檔案
chapter 08 即時網頁（Real-time web）
chapter 09 測試與除錯
chapter 10 部署程式
chapter 11 Spine 函式庫
chapter 12 Backbone 函式庫
chapter 13 JavaScriptMVC 函式庫
appendix A jQuery 入門
appendix B CSS 擴充模組
appendix C CSS3 參考資料
index
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript網頁應用程式設計
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript本格入門
1 イントロダクション
2 基本的な書き方を身につける
3 基本データを操作する―組み込みオブジェクト
4 くり返し利用するコードを1箇所にまとめる―関数
5 大規模開発でも通用する書き方を身につける―オブジェクト指向構文
6 HTMLやXMLの文書を操作する―DOM(Document Object Model)
7 クライアントサイドJavaScript開発を極める
8 現場で避けて通れない応用知識
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript本格入門
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>確かな力が身につくJavaScript「超」入門
Chapter1 イントロダクション
Chapter2 インプットとデータの加工
Chapter3 JavaScriptの文法と基本的な機能
Chapter4 インプットとデータの加工
Chapter5 一歩進んだテクニック
Chapter6 jQuery入門
Chapter7 外部データを活用したアプリケーションに挑戦!
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>確かな力が身につくJavaScript「超」入門
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript+jQuery
第1章 必须了解的javascript知识 1
1.1　认识javascript 2
1.1.1　什么是javascript 2
1.1.2　javascript的特点 2
1.1.3　javascript与java的区别 3
1.1.4　javascript版本 4
1.2　javascript的编写工具 5
1.2.1　记事本 5
1.2.2　ultraedit-32 6
1.2.3　dreamweaver 7
1.3　javascript在html中的使用 8
1.3.1　在html网页头中嵌入javascript代码 8
1.3.2　在html网页中嵌入javascript代码 9
1.3.3　在html网页的元素事件中嵌入javascript代码 10
1.3.4　在html中调用已经存在的javascript文件 11
1.3.5　通过javascript伪url引入javascript脚本代码 13
1.4　javascript和浏览器 14
1.4.1　在internet explorer中调用javascript代码 14
1.4.2　在firefox中调用javascript代码 14
1.4.3　在opera中调用javascript代码 14
1.4.4　浏览器中的文档对象类型(dom) 15
1.5　实战演练——一个简单的javascript示例 15
1.6　疑难解惑 16
第2章 javascript编程基础 19
2.1　javascript的基本语法 20
2.1.1　执行顺序 20
2.1.2　区分大小写 20
2.1.3　分号与空格 20
2.1.4　对代码行进行折行 21
2.1.5　注释 21
2.1.6　语句 23
2.1.7　语句块 24
2.2　javascript的数据结构 25
2.2.1　标识符 25
2.2.2　关键字 25
2.2.3　保留字 26
2.2.4　常量 26
2.2.5　变量 26
2.3　看透代码中的数据类型 29
2.3.1　typeof运算符 29
2.3.2　undefined类型 30
2.3.3　null类型 31
2.3.4　boolean类型 32
2.3.5　number类型 33
2.3.6　string类型 33
2.3.7　object类型 34
2.4　明白数据间的计算法则——运算符 35
2.4.1　算术运算符 35
2.4.2　比较运算符 37
2.4.3　位运算符 38
2.4.4　逻辑运算符 39
2.4.5　条件运算符 40
2.4.6　赋值运算符 42
2.4.7　运算符的优先级 43
2.5　javascript的表达式 44
2.5.1　赋值表达式 44
2.5.2　算术表达式 46
2.5.3　布尔表达式 46
2.5.4　字符串表达式 48
2.5.5　类型转换 49
2.6　实战演练——局部变量和全局变量的优先级 50
2.7　疑难解惑 51
第3章 程序控制结构和语句 53
3.1　基本处理流程 54
3.2　赋值语句 55
3.3　条件判断语句 55
3.3.1　if语句 55
3.3.2　if-else语句 56
3.3.3　if-else-if语句 57
3.3.4　if语句的嵌套 58
3.3.5　switch语句 60
3.4　循环控制语句 62
3.4.1　while语句 62
3.4.2　do-while语句 63
3.4.3　for循环 64
3.5　跳转语句 65
3.5.1　break语句 66
3.5.2　continue语句 67
3.6　使用对话框 68
3.7　实战演练——显示距离2014年元旦的天数 70
3.8　疑难解惑 71
第4章 函数 73
4.1　函数的简介 74
4.2　定义函数 74
4.2.1　不指定函数名 74
4.2.2　指定函数名 75
4.2.3　函数参数的使用 76
4.2.4　函数的返回值 76
4.3　函数的调用 78
4.3.1　函数的简单调用 78
4.3.2　在表达式中调用 79
4.3.3　在事件响应中调用函数 80
4.3.4　通过链接调用函数 81
4.4　javascript中常用的函数 82
4.4.1　嵌套函数 82
4.4.2　递归函数 83
4.4.3　内置函数 85
4.5　实战演练——购物简易计算器 93
4.6　疑难解惑 96
第5章 对象与数组 97
5.1　了解对象 98
5.1.1　什么是对象 98
5.1.2　面向对象编程 99
5.1.3　javascript的内部对象 100
5.2　对象访问语句 101
5.2.1　for-in循环语句 101
5.2.2　with语句 102
5.3　javascript中的数组 103
5.3.1　结构化数据 103
5.3.2　创建和访问数组对象 104
5.3.3　使用for-in语句 107
5.3.4　array对象的常用属性和方法 107
5.4　详解常用的数组对象方法 118
5.4.1　连接其他数组到当前数组 118
5.4.2　将数组元素连接为字符串 119
5.4.3　移除数组中*后一个元素 120
5.4.4　将指定的数值添加到数组中 121
5.4.5　反序排列数组中的元素 122
5.4.6　删除数组中的第一个元素 123
5.4.7　获取数组中的一部分数据 123
5.4.8　对数组中的元素进行排序 124
5.4.9　将数组转换成字符串 126
5.4.10　将数组转换成本地字符串 126
5.4.11　在数组开头插入数据 127
5.5　创建和使用自定义对象 128
5.5.1　通过定义对象的构造函数的方法 128
5.5.2　通过对象直接初始化的方法 131
5.5.3　修改和删除对象实例的属性 131
5.5.4　通过原型为对象添加新属性和新方法 133
5.5.5　自定义对象的嵌套 135
5.5.6　内存的分配和释放 137
5.6　实战演练——利用二维数组创建动态下拉菜单 137
5.7　疑难解惑 139
第6章 日期与字符串对象 141
6.1　日期对象 142
6.1.1　创建日期对象 142
6.1.2　date对象属性 143
6.1.3　日期对象的常用方法 143
6.2　详解日期对象的常用方法 147
6.2.1　返回当前日期和时间 147
6.2.2　以不同的格式显示当前日期 148
6.2.3　返回日期所对应的是星期几 149
6.2.4　显示当前时间 149
6.2.5　返回距1970年1月1日午夜的时间差 150
6.2.6　以不同的格式来显示utc日期 151
6.2.7　根据世界时返回日期对应的是星期几 152
6.2.8　以不同的格式来显示utc时间 153
6.2.9　设置日期对象中的年份、月份与日期值 154
6.2.10　设置日期对象中的小时、分钟与秒钟值 155
6.2.11　以utc日期对date对象进行设置 157
6.2.12　返回当地时间与utc时间的差值 157
6.2.13　将date对象中的日期转化为字符串格式 158
6.2.14　返回一个以utc时间表示的日期字符串 159
6.2.15　将日期对象转化为本地日期 159
6.2.16　日期间的运算 160
6.3　字符串对象 161
6.3.1　创建字符串对象 161
6.3.2　字符串对象的常用属性 162
6.3.3　字符串对象的常用方法 163
6.4　详解字符串对象的常用方法 164
6.4.1　设置字符串字体属性 164
6.4.2　以闪烁方式显示字符串 165
6.4.3　转换字符串的大小写 166
6.4.4　连接字符串 167
6.4.5　比较两个字符串的大小 168
6.4.6　分割字符串 169
6.4.7　从字符串中提取字符串 169
6.5　实战演练1——制作网页随机验证码 170
6.6　实战演练2——制作动态时钟 172
6.7　疑难解惑 174
第7章 数值与数学对象 175
7.1　number对象 176
7.1.1　创建number对象 176
7.1.2　number对象的属性 177
7.1.3　number对象的方法 180
7.2　详解number对象常用的方法 181
7.2.1　把number对象转换为字符串 181
7.2.2　把number对象转换为本地格式字符串 182
7.2.3　四舍五入时指定小数位数 182
7.2.4　返回以指数记数法表示的数值 183
7.2.5　以指数记数法指定小数位 184
7.3　math对象 184
7.3.1　创建math对象 184
7.3.2　math对象的属性 185
7.3.3　math对象的方法 186
7.4　详解math对象常用的方法 187
7.4.1　返回数的绝对值 187
7.4.2　返回数的正弦值、正切值和余弦值 188
7.4.3　返回数的反正弦值、反正切值和反余弦值 190
7.4.4　返回两个或多个参数中的*大值或*小值 192
7.4.5　计算指定数值的平方根 193
7.4.6　数值的幂运算 194
7.4.7　计算指定数值的对数 195
7.4.8　取整运算 196
7.4.9　生成0到1之间的随机数 196
7.4.10　根据指定的坐标返回一个弧度值 197
7.4.11　返回大于或等于指定参数的*小整数 198
7.4.12　返回小于或等于指定参数的*大整数 199
7.4.13　返回以e为基数的幂 199
7.5　实战演练——使用math对象设计程序 200
7.6　疑难解惑 201
第8章 文档对象模型与事件驱动 203
8.1　文档对象模型 204
8.1.1　认识文档对象模型 205
8.1.2　文档对象的产生过程 206
8.2　访问节点 207
8.2.1　节点的基本概念 207
8.2.2　节点的基本操作 208
8.3　文档对象模型的属性和方法 220
8.4　事件处理 222
8.4.1　常见的事件驱动 222
8.4.2　javascript的常用事件 224
8.4.3　javascript处理事件的方式 227
8.4.4　使用event对象 231
8.5　实战演练1——通过事件控制文本框的背景颜色 232
8.6　实战演练2——在dom模型中获得对象 234
8.7　实战演练3——超级链接的事件驱动 235
8.8　疑难解惑 237
第9章 处理窗口和文档对象 241
9.1　窗口(window)对象 242
9.1.1　窗口(window)简介 242
9.1.2　window对象的属性 244
9.1.3　对话框 251
9.1.4　窗口操作 256
9.2　文档(document)对象 259
9.2.1　文档的属性 259
9.2.2　document对象的方法 268
9.2.3　文档中的表单和图片 271
9.2.4　文档中的超链接 273
9.3　实战演练1——综合使用各种
对话框 275
9.4　实战演练2——设置弹出的窗口 276
9.5　疑难解惑 278
第10章 级联样式表 281
10.1　css介绍 282
10.1.1　css的功能 282
10.1.2　css的发展历史 282
10.1.3　浏览器与css 283
10.2　编辑和浏览css 283
10.2.1　css基础语法 284
10.2.2　手工编写css 284
10.2.3　用dreamweaver编写css 285
10.3　在html中使用css的方法 286
10.3.1　行内样式 287
10.3.2　内嵌样式 287
10.3.3　链接样式 289
10.3.4　导入样式 290
10.3.5　优先级问题 291
10.4　css选择器 294
10.4.1　标签选择器 294
10.4.2　类选择器 295
10.4.3　id选择器 297
10.4.4　全局选择器 298
10.4.5　组合选择器 299
10.4.6　继承选择器 300
10.4.7　伪类选择器 302
10.4.8　属性选择器 303
10.4.9　结构伪类选择器 305
10.4.10　ui元素状态伪类选择器 306
10.5　选择器声明 307
10.5.1　集体声明 307
10.5.2　多重嵌套声明 308
10.6　实战演练1——制作五彩标题 309
10.7　实战演练2——制作新闻菜单 311
10.8　疑难解惑 314
第11章 表单和表单元素 315
11.1　表单概述 316
11.2　表单基本元素的使用 317
11.2.1　单行文本输入框text 317
11.2.2　多行文本输入框textarea 318
11.2.3　密码输入框password 318
11.2.4　单选按钮radio 319
11.2.5　复选框checkbox 320
11.2.6　下拉选择框select 321
11.2.7　普通按钮button 322
11.2.8　提交按钮submit 323
11.2.9　重置按钮reset 324
11.3　表单高级元素的使用 325
11.3.1　url属性 325
11.3.2　email属性 326
11.3.3　date和times 327
11.3.4　number属性 328
11.3.5　range属性 329
11.3.6　required属性 329
11.4　表单(form)对象在javascript中的应用 330
11.4.1　html表单基础 331
11.4.2　编辑表单元素的脚本 334
11.4.3　用javascript获取网页内容实现数据验证 339
11.5　实战演练1——创建用户反馈表单 341
11.6　实战演练2——处理表单元素 343
11.7　疑难解惑 345
第12章 javascript的调试和错误处理 347
12.1　常见的错误和异常 348
12.2　处理异常的方法 349
12.2.1　用onerror事件处理异常 349
12.2.2　用try-catch-finally语句处理异常 351
12.2.3　使用throw语句抛出异常 352
12.3　使用调试器 353
12.3.1　ie浏览器内建的错误报告 354
12.3.2　用firefox错误控制台调试 354
12.4　javascript语言调试技巧 355
12.4.1　用alert()语句进行调试 355
12.4.2　用write()语句进行调试 356
12.5　疑难解惑 356
第13章 javascript和ajax技术 359
13.1　ajax快速入门 360
13.1.1　什么是ajax 360
13.1.2　ajax的关键元素 363
13.1.3　css在ajax应用中的地位 364
13.2　ajax的核心技术 364
13.2.1　全面剖析xmlhttprequest对象 364
13.2.2　发出ajax请求 367
13.2.3　处理服务器响应 368
13.3　实战演练1——制作自由拖放的网页 369
13.4　实战演练2——制作加载条 375
13.5　疑难解惑 376
第14章 jquery的基础知识 379
14.1　jquery概述 380
14.1.1　jquery能做什么 380
14.1.2　jquery的特点 380
14.1.3　jquery的技术优势 381
14.2　下载并配置jquery 383
14.2.1　下载jquery 384
14.2.2　配置jquery 385
14.3　jquery的开发工具 385
14.3.1　javascript editor pro 385
14.3.2　dreamweaver 386
14.3.3　ultraedit 387
14.3.4　记事本工具 387
14.4　jquery的调试小工具 388
14.4.1　firebug 388
14.4.2　blackbird 391
14.4.3　jquerypad 393
14.5　jquery与css 3 393
14.5.1　css构造规则 394
14.5.2　浏览器的兼容性 394
14.5.3　jquery的引入 395
14.6　综合案例——我的第一个jquery程序 396
14.6.1　开发前的一些准备工作 396
14.6.2　具体的程序开发 397
14.7　疑难解惑 398
第15章 jquery的选择器 399
15.1　jquery的“$” 400
15.1.1　$符号的应用 400
15.1.2　功能函数的前缀 401
15.1.3　创建dom元素 402
15.2　基本选择器 403
15.2.1　通配符选择器(*) 403
15.2.2　id选择器(#id) 404
15.2.3　类名选择器(.class) 405
15.2.4　元素选择器(element) 406
15.2.5　复合选择器 407
15.3　层级选择器 408
15.3.1　祖先后代选择器(ancestor descendant) 409
15.3.2　父子选择器(parent>child) 410
15.3.3　相邻元素选择器(prev+next) 412
15.3.4　兄弟选择器(prev~siblings) 413
15.4　过滤选择器 414
15.4.1　简单过滤选择器 414
15.4.2　内容过滤选择器 421
15.4.3　可见性过滤器 428
15.4.4　表单过滤器 431
15.5　表单选择器 433
15.5.1　:input 433
15.5.2　:text 434
15.5.3　:password 435
15.5.4　:radio 436
15.5.5　:checkbox 437
15.5.6　:submit 438
15.5.7　:reset 439
15.5.8　:button 440
15.5.9　:image 441
15.5.10　:file 442
15.6　属性选择器 443
15.6.1　[attribute] 444
15.6.2　[attribute=value] 445
15.6.3　[attribute!=value] 446
15.6.4　[attribute$=value] 447
第16章 用jquery控制页面 449
16.1　对页面的内容进行操作 450
16.1.1　对文本内容进行操作 450
16.1.2　对html内容进行操作 452
16.1.3　移动和复制页面内容 454
16.1.4　删除页面内容 454
16.1.5　克隆页面内容 455
16.2　对标记的属性进行操作 456
16.2.1　获取属性的值 456
16.2.2　设置属性的值 457
16.2.3　删除属性的值 458
16.3　对表单元素进行操作 459
16.3.1　获取表单元素的值 459
16.3.2　设置表单元素的值 460
16.4　对元素的css样式进行操作 461
16.4.1　添加css类 461
16.4.2　删除css类 464
16.4.3　动态切换css类 465
16.4.4　获取和设置css样式 466
16.5　实战演练——制作奇偶变色的表格 468
16.6　疑难解惑 471
第17章 jquery的动画特效 473
17.1　jquery的基本动画效果 474
17.1.1　隐藏元素 474
17.1.2　显示元素 477
17.1.3　状态切换 479
17.2　淡入淡出的动画效果 480
17.2.1　淡入隐藏元素 480
17.2.2　淡出可见元素 482
17.2.3　切换淡入淡出元素 483
17.2.4　淡入淡出元素至指定数值 484
17.3　滑动效果 485
17.3.1　滑动显示匹配的元素 485
17.3.2　滑动隐藏匹配的元素 487
17.3.3　通过高度的变化动态切换元素的可见性 488
17.4　自定义的动画效果 489
17.4.1　创建自定义动画 489
17.4.2　停止动画 490
第18章 jquery的事件处理 493
18.1　jquery的事件机制概述 494
18.1.1　什么是jquery的事件机制 494
18.1.2　切换事件 494
18.1.3　事件冒泡 496
18.2　页面加载响应事件 497
18.3　jquery中的事件函数 498
18.3.1　键盘操作事件 498
18.3.2　鼠标操作事件 500
18.3.3　其他的常用事件 504
18.4　事件的基本操作 506
18.4.1　绑定事件 506
18.4.2　触发事件 507
18.4.3　移除事件 508
18.5　实战演练——制作绚丽的多级动画 菜单 509
18.6　疑难解惑 515
第19章 jquery的功能函数 517
19.1　功能函数概述 518
19.2　常用的功能函数 519
19.2.1　操作数组和对象 519
19.2.2　操作字符串 523
19.2.3　序列化操作 525
19.2.4　检测浏览器 526
19.3　调用外部代码 527
19.4　疑难解惑 528
第20章 jquery插件的开发与使用 531
20.1　理解插件 532
20.1.1　什么是插件 532
20.1.2　如何使用插件 532
20.2　流行的插件 533
20.2.1　jqueryui插件 534
20.2.2　form插件 535
20.2.3　提示信息插件 537
20.2.4　jcarousel插件 537
20.3　定义自己的插件 538
20.3.1　插件的工作原理 538
20.3.2　自定义一个简单的插件 539
20.4　实战演练——创建拖拽购物车效果 542
20.5　疑难解惑 543
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript+jQuery
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript物联网
序一
序二
前言
第一篇　基础篇
第1章　物联网系统基础 2
1.1　万物互联与互联网进化论 3
1.2　物联网的核心数据的流动 4
1.2.1　现代物联网的对称性 4
1.2.2　现代物联网的IP化 4
1.3　端到端物联网解决方案 5
1.3.1　JavaScript老树新花 5
1.3.2　物联网节点JavaScript开发 6
1.3.3　物联网客户端JavaScript开发 7
1.4　物联网大数据的必然趋势 9
1.5　物联网机器学习的必然趋势 11
1.6　本章小结 12
第2章　Node.js基础 14
2.1　标准库 14
2.1.1　简单模块定义和使用 15
2.1.2　标准库API编程 16
2.1.3　标准库console模块 18
2.2　V8引擎 22
2.2.1　编译执行 23
2.2.2　垃圾回收 24
2.3　非阻塞式I/O 25
2.4　事件循环 27
2.5　包管理器NPM 30
2.5.1　包结构 31
2.5.2　包管理 33
2.6　Node.js开发环境 34
2.7　微服务架构 35
2.8　本章小结 37
第二篇　数据篇
第3章　基于JavaScript物联网数据收集 40
3.1　嵌入式系统特点 40
3.1.1　高集成度 40
3.1.2　资源受限 41
3.1.3　长寿命 42
3.1.4　环境苛刻 42
3.2　实时数据收集 43
3.2.1　强实时任务 44
3.2.2　准实时任务 44
3.2.3　弱实时任务与最终实时任务 45
3.2.4　时延、抖动与吞吐量 46
3.3　Node.js物联网节点开发 49
3.3.1　内存分配与优化 50
3.3.2　延时测量与性能优化 58
3.3.3　Node.js 跨语言调用 60
3.3.4　Node.js 物联网通信协议开发 61
3.3.5　Node.js代码远程部署与更新 65
3.3.6　Node.js 服务发现 70
3.4　IoT.js物联网节点开发 73
3.5　Espruino的物联网节点开发 75
3.6　本章小结 76
第4章　基于JavaScript数据存储与处理 77
4.1　大数据基础 77
4.1.1　指数增长 77
4.1.2　水平扩展 79
4.1.3　MapReduce 80
4.1.4　高可用性 82
4.1.5　模式可复制 83
4.2　大数据实时处理 84
4.2.1　时间序列 84
4.2.2　Lambda架构 85
4.2.3　JavaScript物联网实时数据处理 88
4.3　Kafka大数据消息总线 89
4.3.1　消息总线 90
4.3.2　Kafka集群 91
4.3.3　数据存储 95
4.3.4　高可用性 98
4.3.5　连接器 98
4.3.6　JavaScript Kafka 数据收发 100
4.3.7　Kafka即服务 101
4.4　Spark大数据处理平台 104
4.4.1　HDFS 105
4.4.2　RDD 107
4.4.3　变换与动作 108
4.4.4　DAG调度器 110
4.4.5　数据帧 111
4.4.6　流处理 113
4.4.7　EclairJS JavaScript大数据处理 113
4.5　ElasticSearch大数据索引平台 116
4.5.1　JSON文档 117
4.5.2　模板与映射 118
4.5.3　确切值与全文文本 120
4.5.4　Lucene引擎与倒排索引 121
4.5.5　分片与副本 122
4.5.6　RESTful接口的JavaScript编程 122
4.6　本章小结 125
第5章　基于JavaScript物联网数据分析 126
5.1　人工智能与机器学习 126
5.1.1　监督学习 128
5.1.2　强化学习 134
5.2　深度学习 138
5.2.1　多层感知器网络 139
5.2.2　卷积神经网络 145
5.2.3　递归神经网络 149
5.2.4　大规模深度学习 152
5.3　深度学习物联网数据分析 155
5.3.1　基于卷积神经网络的物联网视频监控物体识别 155
5.3.2　基于Q深度学习的物联网扫地机器人 156
5.4　本章小结 158
第6章　基于JavaScript物联网数据展示与交互 159
6.1　物联网网页应用开发 159
6.1.1　HTML 160
6.1.2　CSS 165
6.1.3　本地数据存储 170
6.1.4　AJAX 171
6.1.5　WebSocket 174
6.1.6　多媒体 176
6.1.7　数据可视化 179
6.2　Angular.js网页应用开发 186
6.2.1　单页应用 187
6.2.2　MVC设计模式 189
6.2.3　双向绑定 191
6.2.4　依赖注入 192
6.2.5　URL路由 193
6.3　Ionic移动应用开发 195
6.3.1　Cordova 196
6.3.2　UI组件 197
6.3.3　Ionic集成开发环境 199
6.3.4　物联网单页应用程序 201
6.4　本章小结 205
第7章　基于JavaScript物联网数据安全 206
7.1　物联网的安全挑战 206
7.1.1　未来已经来临 206
7.1.2　早期物联网安全 207
7.1.3　现代物联网安全 208
7.2　攻击表面与安全防护 209
7.2.1　设备安全 210
7.2.2　网络安全 211
7.2.3　数据安全 213
7.3　安全猎手与击杀链 215
7.3.1　基于大数据的物联网安全监控系统设计 216
7.3.2　物联网安全监控系统击杀实战 219
7.4　JavaScript物联网数据安全 221
7.4.1　JavaScript程序漏洞扫描 221
7.4.2　JavaScript网络传输加密 222
7.4.3　JavaScript实现访问控制 225
7.5　本章小结 227
第三篇　实战篇
第8章　物联网智能网关系统开发 230
8.1　物联网智能网关 230
8.2　开源硬件OpenFPGAduino 231
8.2.1　开源硬件简介 232
8.2.2　OpenFPGAduino硬件设计 234
8.2.3　OpenFPGAduino软件设计 235
8.3　Node.js物联网系统开发 236
8.3.1　Arduino.js网络系统 237
8.3.2　Express HTTP服务 237
8.3.3　微服务架构 238
8.3.4　数据库微服务 242
8.3.5　服务发现 244
8.3.6　物联网协议转换 246
8.3.7　硬件访问 248
8.3.8　硬件仿真 252
8.3.9　Mocha集成测试 254
8.4　FPGA实时性系统开发 256
8.4.1　FPGA简介 256
8.4.2　Qsys总线 257
8.4.3　内核空间驱动 259
8.4.4　用户空间驱动 260
8.4.5　FPGA在线应用配置 261
8.5　本章小结 262
第9章　物联网云管理与开发环境 264
9.1　云计算与云服务 264
9.1.1　虚拟化 265
9.1.2　容器化 266
9.2　物联网云服务 272
9.3　基于HTML的嵌入式软件开发环境 274
9.4　基于Blockly的云软件开发环境 275
9.5　基于Docker与云存储的云开发编译部署环境 280
9.6　基于Yeelink云的物联网远程管理与控制 285
9.7　基于Plot.ly数据可视化云服务 288
9.8　基于听云物联网运维服务 289
9.9　本章小结 291
第10章　物联网生物芯片实验测试系统 292
10.1　生物芯片测试平台 292
10.2　生物芯片测试平台总体设计 294
10.3　平台电源与机箱系统设计 296
10.4　控温控湿度平台系统设计 298
10.5　实验试剂注射进样系统设计 302
10.6　高精度三轴移动定位系统设计 304
10.7　显微镜图像监控系统设计 309
10.8　物联网实验自动化控制系统设计 309
10.9　本章小结 312
第11章　物联网大数据分析系统 313
11.1　物联网大数据平台 313
11.1.1　物联网络三层架构 315
11.1.2　物联网大数据信息处理平台设计 316
11.2　物联网数据汇聚 319
11.2.1　物联网MQTT Kafka网桥 319
11.2.2　物联网数据平面Kafka聚合网关管理 322
11.2.3　物联网控制平面ZooKeeper节点管理 323
11.3　物联网数据清洗 324
11.3.1　抽取变换加载 325
11.3.2　一致性检查 326
11.3.3　重复数据去除 327
11.4　物联网数据统计分析与机器学习 334
11.4.1　统计分析与机器学习 335
11.4.2　基于Spark批处理统计分析 335
11.4.3　基于Kappa架构实时统计分析 336
11.4.4　在线机器学习 338
11.4.5　基于RLS的异常检测 339
11.5　物联网日志异常检测与监控系统设计 341
11.5.1　物联网日志分析 341
11.5.2　LogStash日志收集与解析 342
11.5.3　ElasticSearch日志存储与索引 344
11.5.4　Kibana日志可视化 344
11.5.5　日志异常检测与告警 346
11.6　物联网数据安全日志机器学习系统设计 350
11.6.1　攻击指纹DGA 351
11.6.2　DGA应用实例DNS隧道 353
11.6.3　自然语言处理 355
11.6.4　深度学习识别DGA 358
11.7　本章小结 364
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript物联网
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>零基础学JavaScript（全彩版）
第1章 JavaScript简介
1.1 JavaScript简述
1.2 WebStorm的下载与安装
1.3 JavaScript在HTML中的使用
1.3.1 在页面中直接嵌入JavaScript代码
1.3.2 链接外部JavaScript文件
1.3.3 作为标签的属性值使用
1.4 JavaScript基本语法
1.5 难 点 解 答
1.5.1 如何加载其他Web服务器中的JavaScript文件
1.5.2 应用“javascript:”调用函数
1.6 小 结
第2章 JavaScript语言基础
2.1 数 据 类 型
2.1.1 数值型
2.1.2 字符串型
2.1.3 布尔型
2.1.4 特殊数据类型
2.2 常量和变量
2.2.1 常量
2.2.2 变量
2.3 运 算 符
2.3.1 算术运算符
2.3.2 字符串运算符
2.3.3 比较运算符
2.3.4 赋值运算符
2.3.5 逻辑运算符
2.3.6 条件运算符
2.3.7 其他运算符
2.3.8 运算符优先级
2.4 表 达 式
2.5 数据类型的转换规则
2.6 难 点 解 答
2.6.1 如何在字符串中输出字符“\”
2.6.2 null和undefined的用法
2.7 小 结
2.8 动 手 纠 错
第3章 JavaScript基本语句
3.1 条件判断语句
3.1.1 if语句
3.1.2 switch语句
3.2 循 环 语 句
3.2.1 while语句
3.2.2 do…while语句
3.2.3 for语句
3.2.4 循环语句的嵌套
3.3 跳 转 语 句
3.3.1 continue语句
3.3.2 break语句
3.4 异常处理语句
3.4.1 try catch finally语句
3.4.2 Error对象
3.4.3 使用throw语句抛出异常
3.5 难点解答
3.5.1 do…while语句和while语句的区别
3.5.2 continue语句和break语句的作用
3.6 小 结
3.7 动 手 纠 错
第4章 函 数
4.1 函数的定义和调用
4.1.1 函数的定义
4.1.2 函数的调用
4.2 函数的参数
4.3 函数的返回值
4.4 嵌 套 函 数
4.4.1 函数的嵌套定义
4.4.2 函数的嵌套调用
4.5 递 归 函 数
4.6 变量的作用域
4.6.1 全局变量和局部变量
4.6.2 变量的优先级
4.7 内 置 函 数
4.7.1 数值处理函数
4.7.2 字符串处理函数
4.8 定义匿名函数
4.8.1 在表达式中定义函数
4.8.2 使用Function()构造函数
4.9 难 点 解 答
4.9.1 实参个数和形参个数不同的情况
4.9.2 在函数体内定义全局变量
4.10 小 结
4.11 动 手 纠 错
第5章 对 象
5.1 对 象 简 介
5.1.1 什么是对象
5.1.2 对象的属性和方法
5.1.3 JavaScript对象的种类
5.2 自定义对象的创建
5.2.1 直接创建自定义对象
5.2.2 通过自定义构造函数创建对象
5.2.3 通过Object对象创建自定义对象
5.3 对象访问语句
5.3.1 for…in语句
5.3.2 with语句
5.4 常用内部对象
5.4.1 Math对象
5.4.2 Date对象
5.5 难 点 解 答
5.5.1 如何获取0到9之间的随机整数
5.5.2 创建指定日期对象
5.6 小 结
5.7 动 手 纠 错
第6章 数 组
6.1 数 组 介 绍
6.2 定 义 数 组
6.2.1 定义空数组
6.2.2 指定数组长度
6.2.3 指定数组元素
6.2.4 直接定义数组
6.3 操作数组元素
6.3.1 数组元素的输入和输出
6.3.2 数组元素的添加
6.3.3 数组元素的删除
6.4 数组的属性
6.4.1 length属性
6.4.2 prototype属性
6.5 数组的方法
6.5.1 数组的添加和删除
6.5.2 设置数组的排列顺序
6.5.3 获取某段数组元素
6.5.4 数组转换成字符串
6.6 难 点 解 答
6.6.1 如何删除数组中后面几个元素
6.6.2 计算数组元素的和
6.7 小 结
6.8 动 手 纠 错
第7章 String对象
7.1 String对象的创建
7.2 String对象的属性
7.2.1 length属性
7.2.2 constructor属性
7.2.3 prototype属性
7.3 String对象的方法
7.3.1 查找字符串
7.3.2 截取字符串
7.3.3 大小写转换
7.3.4 连接和拆分
7.3.5 格式化字符串
7.4 难 点 解 答
7.4.1 substring()方法参数的特殊情况
7.4.2 slice()方法和substring()方法的相同点和不同点
7.5 小 结
7.6 动 手 纠 错
第2篇 核心技术
第8章 JavaScript事件处理
8.1 事件与事件处理概述
8.1.1 什么是事件
8.1.2 JavaScript的常用事件
8.1.3 事件的调用
8.1.4 事件对象
8.2 表单相关事件
8.2.1 获得焦点与失去焦点事件
8.2.2 失去焦点内容改变事件
8.2.3 表单提交与重置事件
8.3 鼠标键盘事件
8.3.1 鼠标单击事件
8.3.2 鼠标按下和松开事件
8.3.3 鼠标移入移出事件
8.3.4 鼠标移动事件
8.3.5 键盘事件
8.4 页 面 事 件
8.4.1 加载与卸载事件
8.4.2 页面大小事件
8.5 难 点 解 答
8.5.1 onkeypress、onkeydown和onkeyup事件的区别
8.5.2 触发onunload事件的条件
8.6 小 结
8.7 动 手 纠 错
第9章 文 档 对 象
9.1 文档对象概述
9.2 文档对象的应用
9.2.1 链接文字颜色设置
9.2.2 文档背景色和前景色设置
9.2.3 获取并设置URL
9.2.4 在文档中输出数据
9.2.5 动态添加一个HTML标记
9.2.6 获取文本框并修改其内容
9.3 难 点 解 答
9.3.1 设置页面跳转
9.3.2 bgColor属性和fgColor属性解析
9.4 小 结
9.5 动 手 纠 错
第10章 表 单 对 象
10.1 访问表单与表单元素
10.1.1 JavaScript访问表单
10.1.2 JavaScript访问表单元素
10.2 表单对象的属性、方法与事件
10.3 表 单 元 素
10.3.1 文本框
10.3.2 按钮
10.3.3 单选按钮和复选框
10.3.4 下拉菜单
10.4 难 点 解 答
10.4.1 如何获取选中的单选按钮或复选框的值
10.4.2 defaultSelected属性和selected属性的区别
10.5 小 结
10.6 动 手 纠 错
第11章 图 像 对 象
11.1 图像对象概述
11.1.1 图像对象介绍
11.1.2 图像对象的属性
11.1.3 图像对象的事件
11.2 图像对象的应用
11.2.1 图片的随机显示
11.2.2 图片置顶
11.2.3 图片翻转效果
11.3 难 点 解 答
11.3.1 如何获取0到某个数字的随机整数
11.3.2 documentElement对象中的定位属性介绍
11.4 小 结
11.5 动 手 纠 错
第12章 文档对象模型（DOM）
12.1 DOM概述
12.2 DOM对象节点属性
12.3 节点的操作
12.3.1 创建节点
12.3.2 插入节点
12.3.3 复制节点
12.3.4 删除节点
12.3.5 替换节点
12.4 获取文档中的指定元素
12.4.1 通过元素的id属性获取元素
12.4.2 通过元素的name属性获取元素
12.5 与DHTML相对应的DOM
12.5.1 innerHTML和innerText属性
12.5.2 outerHTML和outerText属性
12.6 难 点 解 答
12.6.1 如何通过元素的name属性获取元素的值
12.6.2 innerHTML属性和outerHTML属性的区别
12.7 小 结
12.8 动 手 纠 错
第13章 Window窗口对象
13.1 Window对象概述
13.1.1 Window对象的属性
13.1.2 Window对象的方法
13.1.3 Window对象的使用
13.2 对 话 框
13.2.1 警告对话框
13.2.2 确认对话框
13.2.3 提示对话框
13.3 打开与关闭窗口
13.3.1 打开窗口
13.3.2 关闭窗口
13.4 控 制 窗 口
13.4.1 移动窗口
13.4.2 窗口滚动
13.4.3 改变窗口大小
13.4.4 访问窗口历史
13.4.5 设置超时
13.5 窗 口 事 件
13.6 难 点 解 答
13.6.1 在使用确认对话框时return语句的应用
13.6.2 resizeTo()方法和resizeBy()方法的区别
13.7 小 结
13.8 动 手 纠 错
第3篇 高级应用
第14章 Ajax技术
14.1 Ajax概述
14.1.1 Ajax应用案例
14.1.2 Ajax的开发模式
14.1.3 Ajax的优点
14.2 Ajax的技术组成
14.2.1 XMLHttpRequest对象
14.2.2 XML语言
14.2.3 JavaScript脚本语言
14.2.4 DOM
14.2.5 CSS
14.3 XMLHttpRequest对象
14.3.1 XMLHttpRequest对象的初始化
14.3.2 XMLHttpRequest对象的常用属性
14.3.3 XMLHttpRequest对象的常用方法
14.4 难 点 解 答
14.4.1 指定事件处理器时调用带参数的函数
14.4.2 Apache服务器的根目录
14.5 小 结
14.6 动 手 纠 错
第15章 jQuery基础
15.1 jQuery概述
15.2 jQuery下载与配置
15.3 jQuery选择器
15.3.1 jQuery的工厂函数
15.3.2 基本选择器
15.3.3 层级选择器
15.3.4 过滤选择器
15.3.5 属性选择器
15.3.6 表单选择器
15.4 难 点 解 答
15.4.1 应用:even和:odd匹配表格行的问题
15.4.2 如何获取选中的复选框的值
15.5 小 结
15.6 动 手 纠 错
第16章 jQuery控制页面和事件处理
16.1 jQuery控制页面
16.1.1 对元素内容和值进行操作
16.1.2 对DOM节点进行操作
16.1.3 对元素属性进行操作
16.1.4 对元素的CSS样式进行操作
16.2 jQuery的事件处理
16.2.1 页面加载响应事件
16.2.2 jQuery中的事件
16.2.3 事件绑定
16.2.4 模拟用户操作
16.3 难 点 解 答
16.3.1 text()方法和html()方法在获取内容时的不同
16.3.2 $(document).ready()方法和window.onload()方法的区别
16.4 小 结
16.5 动 手 纠 错
第17章 jQuery动画效果
17.1 基本的动画效果
17.2 淡入、淡出的动画效果
17.3 滑动效果
17.4 自定义的动画效果
17.5 难 点 解 答
17.5.1 应用stop()方法停止动画时的状态
17.5.2 怎样使元素在当前位置向右移动指定距离
17.6 小 结
17.7 动 手 纠 错
第4篇 项目实战
第18章 365影视网站设计
18.1 系 统 分 析
18.2 系 统 设 计
18.2.1 系统目标
18.2.2 系统功能结构
18.2.3 开发环境
18.2.4 文件夹组织结构
18.3 网 页 预 览
18.4 关 键 技 术
18.4.1 JavaScript脚本技术
18.4.2 Ajax无刷新技术
18.4.3 jQuery技术
18.5 首页技术实现
18.5.1 JavaScript实现导航菜单
18.5.2 JavaScript实现图片的轮换效果
18.5.3 Ajax实现热门专题页面
18.5.4 JavaScript实现电影图片不间断滚动
18.5.5 JavaScript实现浮动窗口
18.5.6 jQuery实现滑动门效果
18.5.7 jQuery实现向上间断滚动效果
18.6 查看影片详情页面
18.7 小 结
实 例 索 引
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>零基础学JavaScript（全彩版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript网页特效实例解析
出版说明
前言
第1章 JavaScript网页特效简介
1 JavaScript语言简介
2 JavaScript和JScript的区别
3 JavaScript程序设计风格
第2章 文本特效
1 在状态栏显示静态文本
2 在状态栏显示滚动的文字
3 不断变色的文字
4 每天显示不同的文本信息
5 始终位于窗口顶部的文本
6 由小变大的文字
7 动态水波形文字
8 动态、闪烁地显示文本的公告牌
第3章 窗口特效
……
第4章 时间和日期
……
第5章 链接和按钮特效
……
第6章 密码特效
……
第7章 图片特效
……
附录 JavaScript相关资源站点
参考文献
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript网页特效实例解析
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript 实例应用
JavaScript 实例应用
第1章  JavaScript概述	1
1.1  JavaScript与Java	1
1.2  JavaScript初探	2
1.2.1  实例一	2
1.2.2  实例二	3

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript 实例应用
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML JavaScript与Java 三合一最新培训教程
目录
第1讲 Internet和HTML简介
第1课 Internet概述
一、Interned作原理
二、Internet发展简史
三、Internet提供的主要服务
（一）电子函件
（二）文件传输
（三）电子公告
（四）远程登录
（五）网页浏览
第2课 与HTML有关的一些术语
一、统一资源定位器――URL
二、超文本标记语言――HTML
三、超文本传输协议――HTTP
第3课 编辑和运行HTML文档的环境
习题一
第2讲 HTML语言的语洁基础及规则
第1课 基本结构
一、标签
二、标签
（一）
（二）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML JavaScript与Java 三合一最新培训教程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript即用特效
怎样使用本书。
第1章 玩转网页背景
第2章 窗口转换
第3章 菜单
第4章 好玩的鼠标
第5章 网友资料
第6章 用尽状态栏
第7章 日期与时间
第8章 图文特效
第9章 小玩意
第10章 工具
第11章 JavaScript代码精选
附录1 JavaScript编写要点
附录2 JavaScript重要对象属性、方法及事件一览
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript即用特效
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript / VBScript 网页编程实例解析
第1章  基础知识
1. 1  背景知识
1. 1. 1  Internet的发展与Script语言的出现
1. 1. 2  Script语言的作用
1. 1. 3  Script语言与浏览器
1. 2  J

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript / VBScript 网页编程实例解析
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript 动态网页设计实务
第1篇  理论基础篇
第1章  动态网页解决方案	3
本章内容	4
1-1  尊重用户, 从加强互动做起	4
1-2  简单任务	5
简单任务的传统解法	7
解铃还须系铃人

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript 动态网页设计实务
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JAVAScript 网页特效应用开发手册
第一部分 认识JavaScript
第1章 Javascript浅谈
1-1什么是JavaScript
1-2如何使用Javascript
1-3 Javascript和 HTML的搭配
1-4 Javas

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JAVAScript 网页特效应用开发手册
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>程序设计JavaScript与JSP
第1章  JavaScript语言概况
1. 1  什么是Internet
1. 2  万维网WWW
1. 3  HTML
1. 4  其他常用Web开发语言简介
1. 5  小结

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>程序设计JavaScript与JSP
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>新概念 JavaScript 教程
第一部分 JavaScript的背景知识
第一章 Web页与JavaScript
第二章 在HTML中使用JavaScript
第二部分 JavaScript语言的基本语法
第三章 JavaScript基础
第四章 流程控制与函数
第三部分 JavaScript语言的高级部分
第五章 JavaScript的对象（Object）
第六章 浏览器内部对象与事件驱动
……
第四部分 精彩范例详解
第十七章 综合范例
第十八章 分组选择
……
附录 JavaScript常用对象一览表
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>新概念 JavaScript 教程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript 网页开发技术
第1章　预备知识
1. l　浏

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript 网页开发技术
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript网页开发实例教程
丛书序
前言
第1章 基础知识
第2章 JavaScript语法基础
第3章 JavaScript中的对象
第4章 JavaScript中的事件处理
第5章 文字特效
第6章 表单特效
第7章 图像特效
第8章 鼠标特效
第9章 菜单特效
第10章 动画和音乐特效
第11章 页面效果
第12章 Cookie效果
第13章 其他特效
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript网页开发实例教程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML+JavaScript 30日完全掌握
一，HTML入门
二，基本HTML标记
三，背景调协及制表
四，文本输入样式
五，HTML中特殊文字的使用及窗口的分割
六，JavaScript
七，运算符
八，提示对话框和条件语句
九，循环语句
十，内置函数和函数设置
十一，函数和对象的使用
十二，数组对象
十三，对象控制语句及内置对象
十四，内置对象（1）
十五，内置对象（2）
十六，事件
十七，浏览器内置对象

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML+JavaScript 30日完全掌握
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>因特网与网页设计疑难问题解答—关于因特网、HTML、DHTML、CSS、CGI及JavaScript
第一部分 因特网一点通
  第一章 因特网（Internet）
  第二章 家用计算机上网的基本条件及常见问题
  第三章 因特网电子函件
  第四章 远程登录与快速文件传递
  第五章 因特网函件名单与新闻组
  第六章 因特网聊天
  第七章 万维网与万维网浏览
  第八章 因特网安全常识
  第九章 搜索引擎与网上信息查询
  第十章 充分、有效地利用万维网所提供的信息资源
第二部分 网页设计指导
  第十一章 万维网与超文本标记语言
  第十二章 HTML文件内文字的表现风格
  第十三章 图形、声音与网上多媒体
  第十四章 表格
  第十五章 多视窗
  第十六章 电子表单
  第十七章 层叠样式单（风格样式单）
  第十八章 CGI与CGI程序应用举例
  第十九章 有关JavaScript
  第二十章 主页设计策划技巧
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>因特网与网页设计疑难问题解答—关于因特网、HTML、DHTML、CSS、CGI及JavaScript
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5+CSS3+JavaScript从入门到精通（标准版）
第1章HTML5基础
1.1HTML发展历史
1.2HTML文档结构和基本语法
1.2.1HTML4文档基本结构
1.2.2HTML4基本语法
1.2.3XHTML文档基本结构
1.2.4XHTML基本语法
1.2.5HTML5文档基本结构
1.2.6HTML5基本语法
1.3HTML4元素
1.3.1结构元素
1.3.2内容元素
1.3.3修饰元素
1.4HTML4属性
1.4.1核心属性
1.4.2语言属性
1.4.3键盘属性
1.4.4内容属性
1.4.5其他属性
1.5HTML5元素
1.5.1结构元素
1.5.2功能元素
1.5.3表单元素
1.6HTML5属性
1.6.1表单属性
1.6.2链接属性
1.6.3其他属性
1.7HTML5全局属性
1.7.1contentEditable属性
1.7.2contextmenu属性
1.7.3data-*属性
1.7.4draggable属性
1.7.5dropzone属性
1.7.6hidden属性
1.7.7spellcheck属性
1.7.8translate属性
第2章CSS3基础
2.1CSS3概述
2.1.1CSS的发展历史
2.1.2CSS3新功能
2.1.3浏览器支持
2.2CSS基本用法
2.2.1CSS样式
2.2.2CSS应用
2.2.3CSS样式表
2.2.4导入外部样式表
2.2.5CSS注释
2.3CSS特性
2.3.1CSS层叠性
2.3.2CSS继承性
2.4案例实战
第3章使用CSS3选择器
3.1CSS3选择器分类
3.2基本选择器
3.2.1标签选择器.
3.2.2类选择器
3.2.3ID选择器
3.2.4通配选择器
3.3组合选择器
3.3.1包含选择器
3.3.2子选择器
3.3.3相邻选择器
3.3.4兄弟选择器
3.3.5分组选择器
3.4属性选择器
3.5伪类选择器
3.5.1动态伪类
3.5.2结构伪类
3.5.3否定伪类
3.5.4状态伪类
3.5.5目标伪类
3.6案例实战
3.6.1设计菜单样式
3.6.2设计表单样式
3.6.3设计超链接样式
3.6.4设计表格样式
4章设计网页文本
4.1使用文本标签
4.1.1标题文本
4.1.2段落文本
4.1.3引用文本
4.1.4强调文本
4.1.5格式文本
4.1.6输出文本
4.1.7缩写文本
4.1.8插入和删除文本
4.1.9文本方向
4.2HTML5新增文本标签
4.2.1标记文本
4.2.2进度信息
4.2.3刻度信息
4.2.4时间信息
4.2.5联系文本
4.2.6隔离文本
4.2.7换行断点
4.2.8文本注释
4.3案例实战
4.3.1设计自我介绍页
4.3.2解决网页乱码
4.3.3把HTML转换为XHTML
4.3.4输出唐诗
5章使用CSS美化网页文本
5.1字体样式
5.1.1定义字体类型
5.1.2定义字体大小
5.1.3定义字体颜色
5.1.4定义字体粗细
5.1.5定义斜体字体
5.1.6定义下划线
5.1.7定义字体大小写
5.2文本样式
5.2.1定义文本对齐
5.2.2定义垂直对齐
5.2.3定义字距和词距
5.2.4定义行高
5.2.5定义缩进
5.3CSS3新增文本样式
5.3.1定义文本阴影
5.3.2设计阴影特效
5.3.3定义溢出文本
5.3.4文本换行
5.3.5添加动态内容
5.3.6恢复默认样式
5.3.7自定义字体类型
5.4案例实战
5.4.1配置网页字体大小
5.4.2网页配色
5.4.3网页居中显示
5.4.4垂直对齐
5.4.5文字隐藏和截取
5.4.6设计中文报刊版式
5.4.7设计特效首页
5.4.8使用RGBA
5.4.9使用HSL
第6章使用并美化图像
6.1在网页中插入图像
6.2设置图像样式
6.2.1定义图像大小
6.2.2定义图像边框
6.2.3定义图像不透明度
6.2.4定义圆角图像
6.2.5定义阴影图像
6.2.6图文混排
6.3设置背景图像
6.3.1定义背景图像
6.3.2定义显示方式
6.3.3定义显示位置
6.3.4定义固定背景
6.3.5定义坐标
6.3.6定义裁剪区域
6.3.7定义大小
6.3.8定义循环方式
6.3.9定义多背景图
6.4定义渐变背景
6.4.1设计Webkit渐变
6.4.2设计Gecko渐变
6.4.3设计W3C渐变
6.5案例实战
6.5.1设计图文新闻内容页
6.5.2设计精致按钮
6.5.3设计花边框
6.5.4设计阴影白边效果
6.5.5设计网页纹理背景
6.5.6设计发光的球体
6.5.7设计图标按钮
7章使用并美化超链接
7.1定义超链接
7.1.1URL格式
7.1.2超链接分类
7.1.3使用<a>标签
7.1.4定义锚点链接
7.1.5定义不同目标的链接
7.1.6定义下载链接
7.1.7定义热点区域
7.1.8定义框架链接
7.2设置超链接样式
7.2.1伪类
7.2.2定义超链接样式
7.3案例实战
7.3.1定义下划线样式
7.3.2定义立体样式
7.3.3定义动态样式
7.3.4定义图像交换样式
7.3.5定义鼠标样式
7.3.6设计图形化按钮样式
7.3.7设计滑动门样式
第8章使用并美化列表
8.1列表的基本结构
8.2创建列表
8.2.1无序列表
8.2.2有序列表
8.2.3定义列表
8.2.4菜单列表
8.2.5弹出菜单
8.2.6案例：设计图片旋转功能
8.2.7案例：设计分享功能
8.2.8案例：添加任务列表
8.3设计CSS样式
8.3.1设计项目符号类型
8.3.2自定义项目符号
8.3.3使用背景图设计项目符号
8.4案例实战
8.4.1使用背景图装饰菜单
8.4.2设计垂直导航条
8.4.3设计水平导航条
8.4.4设计多级菜单
8.4.5设计滑动门菜单
8.4.6设计排行榜
8.4.7设计图文列表栏目
第9章使用并美化表格
9.1表格的基本结构
9.1.1早期表格的结构
9.1.2标准化的表格结构
9.2创建表格
9.2.1简单的表格
9.2.2包含表头的表格
9.2.3包含标题的表格
9.2.4结构化的表格
9.2.5列分组的表格
9.3设置表格属性
9.3.1设计单线表格
9.3.2设计井字表格
9.3.3设计细线表格
9.3.4设置表格说明
9.4设置单元格属性
9.4.1单元格跨列或跨行显示
9.4.2定义表头单元格
9.4.3为单元格指定表头
9.4.4定义单元格信息缩写
9.4.5对单元格进行分类
9.5设计CSS样式
9.5.1设计细线表格
9.5.2定义单元格间距和空隙
9.5.3隐藏空单元格
9.5.4定义标题样式
9.6案例实战
9.6.1隔行换色
9.6.2设计动态交互特效
9.6.3设计清淡视觉表格
9.6.4设计结构化表格
9.6.5设计日历表
第10章使用并美化表单
10.1表单的基本结构
10.2创建表单控件
10.2.1输入型控件
10.2.2选择型控件
10.2.3辅助控件
10.3HTML5增强输入类型
10.3.1email类型
10.3.2url类型
10.3.3number类型
10.3.4range类型
10.3.5日期选择器类型
10.3.6search类型
10.3.7tel类型
10.3.8color类型
10.4HTML5增强输入属性
10.4.1autocomplete属性
10.4.2autofocus属性
10.4.3form属性
10.4.4表单重写属性
10.4.5height和width属性
10.4.6list属性
10.4.7min、max和step属性
10.4.8multiple属性
10.4.9pattern属性
10.4.10placeholder属性
10.4.11required属性
10.5HTML5新增控件
10.5.1datalist元素
10.5.2keygen元素
10.5.3output元素
10.6HTML5表单属性
10.6.1autocomplete属性
10.6.2novalidate属性
10.6.3显式验证
10.7案例实战
10.7.1设计反馈表
10.7.2设计用户登录页
10.7.3设计用户注册页
10.7.4设计搜索页
第11章CSS3布局基础
11.1CSS盒模型基础
11.1.1盒模型结构
11.1.2定义大小
11.1.3定义边框
11.1.4定义边界
11.1.5定义补白
11.2CSS3完善盒模型
11.2.1定义显示方式
11.2.2定义可控大小
11.2.3溢出处理
11.2.4定义轮廓
11.2.5定义轮廓样式
11.2.6定义多色边框
11.2.7定义边框背景
11.3案例实战
11.3.1设计行内元素边框
11.3.2边界的应用
11.3.3边界重叠现象
11.3.4行内元素边界
11.3.5设计网页居中显示
11.3.6设计多栏高度自适应页面
11.3.7设计负margin页面
第12章CSS3+HTML5网页排版
12.1使用结构标签
12.1.1使用div和span
12.1.2使用id和class
12.1.3认识显示类型
12.1.4正确嵌套标签
12.2设计HTML5结构
12.2.1定义文章块
12.2.2定义内容块
12.2.3定义导航块
12.2.4定义侧边栏
12.2.5定义主要区域
12.2.6定义标题栏
12.2.7定义标题组
12.2.8定义脚注栏
12.3浮动显示
12.3.1定义浮动显示
12.3.2清除浮动
12.3.3浮动嵌套
12.3.4混合浮动布局
12.4定位显示
12.4.1定义定位显示
12.4.2定位框
12.4.3相对定位
12.4.4定位层叠
12.4.5混合定位布局
第13章使用CSS3新布局
13.1多列流动布局
13.1.1设置列宽
13.1.2设置列数
13.1.3设置列间距
13.1.4设置列边框样式
13.1.5设置跨列显示
13.1.6设置列高度
13.2弹性盒布局
13.2.1定义Flexbox
13.2.2定义伸缩方向
13.2.3定义行数
13.2.4定义对齐方式
13.2.5定义伸缩项目
13.3案例实战
13.3.1比较3种布局方式
13.3.2设计可伸缩网页模板
13.3.3设计多列网页
13.3.4设计HTML5应用网页模板
第14章使用CSS3动画
14.1设计2D变换
14.1.1定义旋转
14.1.2定义缩放
14.1.3定义移动
14.1.4定义倾斜
14.1.5定义矩阵
14.1.6定义变换原点
14.2设计3D变换
14.2.1定义位移
14.2.2定义缩放
14.2.3定义旋转
14.3设计过渡动画
14.3.1设置过渡属性
14.3.2设置过渡时间
14.3.3设置延迟时间
14.3.4设置过渡动画类型
14.3.5设置触发方式
14.4设计帧动画
14.4.1设置关键帧
14.4.2设置动画属性
14.5案例实战
14.5.1设计挂图
14.5.2设计高亮显示
14.5.3设计3D几何体
14.5.4设计旋转的盒子
14.5.5设计翻转广告
14.5.6设计跑步动画
第15章JavaScript基础
15.1JavaScript入门
15.1.1在网页中插入JavaScript代码
15.1.2使用JavaScript文件
15.1.3JavaScript语法基础
15.1.4认识JavaScript语法特性
15.2常量和变量
15.3表达式和运算符
15.4语句
15.4.1表达式语句和语句块
15.4.2条件语句
15.4.3循环语句
15.4.4跳转语句
15.4.5异常处理语句
15.4.6var语句和function语句
15.4.7with语句和空语句
15.5数据类型
15.5.1数值
15.5.2字符串
15.5.3布尔型
15.5.4null和undefined
15.5.5引用型数据
15.6函数
15.6.1定义函数
15.6.2调用函数
15.6.3函数参数
15.6.4函数应用
15.6.5闭包函数
15.7对象
15.7.1创建对象
15.7.2访问对象
15.8数组
15.8.1定义数组
15.8.2存取元素
15.8.3数组应用
15.9案例实战
15.9.1检测数据类型
15.9.2数值计算与类型转换
15.9.3字符串替换
15.9.4增强数组排序
第16章操作BOM
16.1使用window对象
16.1.1访问浏览器窗口
16.1.2全局作用
16.1.3使用系统测试方法
16.1.4打开和关闭窗口
16.1.5使用框架集
16.1.6控制窗口位置
16.1.7控制窗口大小
16.1.8使用定时器
16.2使用navigator对象
16.2.1浏览器检测方法
16.2.2检测浏览器类型和版本号
16.2.3检测客户操作系统
16.2.4检测插件
16.3使用location对象
16.4使用history对象
16.5使用screen对象
16.6使用document对象
16.6.1访问文档对象
16.6.2动态生成文档内容
16.7案例实战
16.7.1使用远程脚本
16.7.2设计远程交互
16.7.3使用浮动框架
第17章操作DOM
17.1DOM基础
17.2使用节点
17.2.1节点类型
17.2.2节点名称和值
17.2.3节点关系
17.2.4访问节点
17.2.5操作节点
17.3使用文档节点
17.3.1访问文档子节点
17.3.2访问文档信息
17.3.3访问文档元素
17.3.4访问文档集合
17.3.5使用HTML5Document
17.4使用元素节点
17.4.1访问元素
17.4.2遍历元素
17.4.3创建元素
17.4.4复制节点
17.4.5插入节点
17.4.6删除节点
17.4.7替换节点
17.4.8获取焦点元素
17.4.9检测包含节点
17.5使用文本节点
17.5.1访问文本节点
17.5.2创建文本节点
17.5.3操作文本节点
17.5.4读取HTML字符串
17.5.5插入HTML字符串
17.5.6替换HTML字符串
17.5.7插入文本
17.6使用文档片段节点
17.7使用属性节点
17.7.1访问属性节点
17.7.2读取属性值
17.7.3设置属性值
17.7.4删除属性
17.7.5使用类选择器
17.7.6自定义属性
17.8案例实战
17.8.1设计动态脚本
17.8.2使用script加载远程数据
17.8.3使用script实现异步交互
17.8.4使用JSONP
17.8.5使用CSS选择器
第18章事件处理
18.1事件基础
18.1.1事件模型
18.1.2事件流
18.1.3绑定事件
18.1.4事件处理函数
18.1.5注册事件
18.1.6销毁事件
18.1.7使用event对象
18.1.8事件委托
18.2使用鼠标事件
18.2.1鼠标点击
18.2.2鼠标移动
18.2.3鼠标经过
18.2.4鼠标来源
18.2.5鼠标定位
18.2.6鼠标按键
18.3使用键盘事件
18.3.1键盘事件属性
18.3.2键盘响应顺序
18.4使用页面事件
18.4.1页面初始化
18.4.2结构初始化
18.4.3页面卸载
18.4.4窗口重置
18.4.5页面滚动
18.4.6错误处理
18.5使用UI事件
18.5.1焦点处理
18.5.2选择文本
18.5.3字段值变化监测
18.5.4提交表单
18.5.5重置表单
18.5.6剪贴板数据
18.6案例实战
18.6.1设计弹出对话框
18.6.2设计遮罩层
18.6.3自定义事件
18.6.4设计事件触发模型
18.6.5应用事件模型
第19章使用Ajax
19.1Ajax基础
19.1.1HTTP头部信息
19.1.2定义XMLHttpRequest对象
19.1.3建立XMLHttpRequest连接
19.1.4发送GET请求
19.1.5发送POST请求
19.1.6转换串行化字符串
19.1.7跟踪状态
19.1.8中止请求
19.1.9获取XML数据
19.1.10获取HTML文本
19.1.11获取JavaScript脚本
19.1.12获取JSON数据
19.1.13获取纯文本
19.1.14获取头部信息
19.2案例实战
19.2.1动态查询记录集
19.2.2记录集分页显示
19.2.3设计Tab面板
19.2.4使用灯标
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5+CSS3+JavaScript从入门到精通（标准版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript测试驱动开发
第1章　自动化测试让你重获自由　　1
1.1 变更的挑战　　1
1.1.1 变更的成本　　1
1.1.2 变更的影响　　2
1.2 测试与验证　　2
1.3 采用自动化验证　　3
1.4 为什么难以验证　　5
1.5 如何实现自动化测试　　6
1.6 小结　　6
第一部分 创建自动化测试
第2章　测试驱动设计　　10
2.1 让我们开始吧　　10
2.1.1 检查npm和Node.js的安装　　11
2.1.2 创建示例项目　　11
2.1.3 创建测试套件和金丝雀测试　　12
2.1.4 验证函数的行为　　14
2.1.5 验证另一个数据　　16
2.2 正向测试、反向测试和异常测试　　18
2.3 设计服务器端代码　　20
2.3.1 从测试列表开始　　20
2.3.2 回文项目　　21
2.3.3 编写正向测试　　22
2.3.4 编写反向测试　　26
2.3.5 编写异常测试　　27
2.4 评估服务器端代码覆盖率　　29
2.5 为测试客户端代码做准备　　31
2.5.1 切换到客户端项目　　31
2.5.2 配置Karma　　33
2.5.3 从金丝雀测试开始　　34
2.6 设计客户端代码　　34
2.7 评估客户端代码覆盖率　　37
2.8 小结　　38
第3章　异步测试　　39
3.1 服务器端回调　　39
3.1.1 一次天真的尝试　　40
3.1.2 编写异步测试　　41
3.1.3 编写一个反向测试　　43
3.2 客户端的回调函数　　44
3.3 测试promise　　46
3.3.1 对promise的简单介绍　　46
3.3.2 promise异步测试的类型　　47
3.3.3 返回promise对象的函数　　48
3.3.4 使用done()进行测试　　49
3.3.5 返回promise 的测试 .　　49
3.3.6 使用chai-as-promised　　50
3.3.7 结合eventually和done()　　50
3.3.8 为promise编写反向测试　　51
3.4 小结　　52
第4章　巧妙处理依赖　　53
4.1 问题以及spike解决方案　　53
4.1.1 转移到spike项目　　53
4.1.2 从spike中获得见解　　54
4.2 模块化设计　　55
4.3 尽量分离依赖　　56
4.3.1 结束spike，准备自动化测试　　56
4.3.2 测试creatURL　　57
4.4 使用测试替身　　59
4.5 依赖注入　　61
4.6 交互测试　　62
4.7 使用Sinon清理测试代码　　64
4.7.1 安装Sinon　　65
4.7.2 初探Sinon　　65
4.7.3 使用Sinon的mock测试交互　　67
4.7.4 使用Sinon的stub测试状态　　68
4.7.5 使用Sinon的spy拦截调用　　70
4.8 回顾与继续　　72
4.9 小结　　75
第二部分 真实的自动化测试
第5章　Node.js测试驱动开发　　78
5.1 从策略设计开始——适度即可　　78
5.2 深入战略设计——测试优先　　79
5.2.1 创建初始测试列表　　79
5.2.2 编写第一个测试　　80
5.2.3 编写一个正向测试　　82
5.3 继续设计　　85
5.3.1 readTickersFile的反向测试　　85
5.3.2 设计parseTickers函数　　87
5.3.3 设计processTickers函数　　88
5.4 创建spike以获得启发　　89
5.4.1 为getPrice创建spike　　89
5.4.2 设计getPrice函数　　90
5.5 模块化以易于测试　　93
5.5.1 设计processResponse和processError函数　　93
5.5.2 设计processHttpError　　95
5.5.3 设计parsePrice和processError　　96
5.6 分离关注点　　97
5.6.1 设计printReport　　98
5.6.2 设计sortData　　98
5.7 集成和运行　　100
5.8 回顾代码覆盖率和设计　　102
5.8.1 评估代码覆盖率　　102
5.8.2 代码设计　　103
5.9 提供HTTP访问　　104
5.10 小结　　105
第6章　Express测试驱动开发　　106
6.1 为可测试性设计　　106
6.1.1 创建策略设计　　107
6.1.2 通过测试创建战略设计　　108
6.2 创建Express应用并运行金丝雀测试　　108
6.3 设计数据库连接　　109
6.4 设计模型　　113
6.4.1 建立数据库连接和测试固件　　113
6.4.2 设计all函数　　114
6.4.3 设计get函数　　115
6.4.4 设计add函数　　116
6.4.5 处理delete函数　　121
6.4.6 设计共享的校验代码　　123
6.5 设计路由函数　　126
6.5.1 重温路由　　127
6.5.2 从为Router创建stub开始　　128
6.5.3 测试路径/的GET方法　　129
6.5.4 测试路径/:id的GET方法　　131
6.5.5 处理路径/的POST方法　　133
6.5.6 以路径/:id的DELETE方法结束整个测试　　135
6.6 评估代码覆盖率　　136
6.7 运行应用　　138
6.7.1 使用Curl　　139
6.7.2 使用Chrome扩展程序　　140
6.7.3 观察响应　　141
6.8 小结　　141
第7章　与DOM和jQuery协作　　142
7.1 创建策略设计　　142
7.2 通过测试创建战略设计　　143
7.2.1 创建测试列表　　143
7.2.2 创建项目　　144
7.3 增量开发　　145
7.3.1 设计getTasks　　146
7.3.2 更新DOM　　147
7.3.3 调用服务　　150
7.3.4 注册window对象的onload事件　　154
7.4 运行 UI　　155
7.5 完成设计　　156
7.5.1 设计addTask　　157
7.5.2 设计deleteTask　　163
7.6 使用jQuery进行测试　　165
7.6.1 准备工作　　166
7.6.2 使用jQuery选择器　　166
7.6.3 使用$.ajax验证调用　　167
7.6.4 测试document的ready函数　　168
7.6.5 完整的测试和使用jQuery的代码实现　　170
7.7 评估代码覆盖率　　170
7.8 小结　　171
第8章　使用AngularJS　　172
8.1 测试AngularJS的方式　　172
8.2 初步设计　　175
8.3 关注控制器　　176
8.3.1 准备工作空间　　176
8.3.2 编写第一个测试　　177
8.3.3 设计控制器　　177
8.4 设计服务交互　　180
8.5 分离关注点，减少mock　　182
8.5.1 找到合适的地方　　183
8.5.2 结合经验测试和交互测试　　183
8.5.3 测试加载顺序　　186
8.6 继续设计　　187
8.6.1 设计addTask　　188
8.6.2 设计deleteTask　　192
8.7 设计服务　　194
8.7.1 设计get 函数　　194
8.7.2 设计add 函数　　197
8.7.3 设计delete 函数　　198
8.8 评估代码覆盖率　　199
8.9 运行UI　　200
8.10 小结　　201
第9章　Angular　　2测试驱动开发　　202
9.1 通过spike学习Angular　　202
9.1.1 管道、服务和组件　　203
9.1.2 创建项目　　203
9.1.3 创建管道　　204
9.1.4 创建服务　　205
9.1.5 创建组件　　207
9.1.6 集成　　211
9.2 通过测试设计Angular应用　　213
9.2.1 创建项目　　214
9.2.2 创建测试列表　　215
9.3 测试驱动组件的设计　　215
9.3.1 验证是否设置组件属性　　215
9.3.2 初始化模型　　218
9.3.3 设计getTasks　　219
9.3.4 对任务进行排序　　222
9.3.5 验证依赖注入　　224
9.4 测试驱动服务的设计　　226
9.5 测试驱动管道的设计　　230
9.6 测试驱动启动代码　　234
9.7 集成　　236
9.8 完成设计　　237
9.8.1 设计任务添加功能　　238
9.8.2 设计任务删除功能　　245
9.8.3 评估代码覆盖率　　248
9.9 小结　　249
第10章　集成测试和端到端测试　　250
10.1 认识Protractor　　250
10.1.1 使用Protractor的理由　　251
10.1.2 安装Protractor　　251
10.1.3 使用Protractor进行测试　　251
10.1.4 为UI层测试做准备　　253
10.1.5 编写第一个测试　　254
10.1.6 测试数据发送　　255
10.2 启动服务器和配置数据库　　256
10.2.1 为TO-DO应用安装Protractor　　257
10.2.2 在设置前启动服务器　　257
10.2.3 为不同的环境创建数据库　　259
10.2.4 在beforeEach中设置数据　　260
10.3 测试jQuery UI　　261
10.3.1 设置Protractor配置文件　　261
10.3.2 发现必要的测试　　261
10.3.3 实现集成测试　　262
10.4 使用页面对象　　265
10.5 测试AngularJS的UI　　268
10.6 测试Angular　　2的UI　　272
10.7 小结　　275
第11章　测试驱动你自己的应用　　276
11.1 努力的成果　　276
11.2 测试的规模和层次　　279
11.3 测试驱动：程序员指南　　280
11.4 测试驱动：团队领导、架构师指南　　282
11.5 测试驱动：项目经理指南　　283
11.5.1 促进可持续的敏捷开发实践　　283
11.5.2 优雅地处理遗留应用　　283
11.5.3 结束新的遗留应用　　284
11.6 摇滚吧　　285
附录 网络资源　　286
参考文献　　288
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript测试驱动开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>21天学通JavaScript（第5版）
第1篇  Visual Basic 6.0基础篇
第1章  Visual Basic 6.0概述
1.1  初识Visual Basic 6.0
1.1.1  Visual Basic的发展历程
1.1.2  Visual Basic 6.0的特点
1.1.3  Visual Basic 6.0的安装和卸载
1.2  Visual Basic 6.0集成开发环境（IDE）
1.2.1  启动Visual Basic 6.0
1.2.2  退出Visual Basic 6.0
1.2.3  集成开发环境的组成部分
1.3  第一个Visual Basic应用程序——Hello World
1.3.1  从“Hello World”开始
1.3.2  创建工程
1.3.3  创建窗体
1.3.4  设计程序界面
1.3.5  编写代码
1.3.6  保存工程
1.3.7  运行程序
1.3.8  生成可执行文件
1.4  Visual Basic 6.0 的帮助系统
1.4.1  MSDN帮助系统
1.4.2  网络资源
1.5  小结
1.6  习题
第2章  Visual Basic 6.0语言基础
2.1  代码编写规范
2.1.1  标识符命名规则
2.1.2  语句书写规范
2.1.3  程序注释
2.1.4  格式化及缩排
2.2  数据类型
2.2.1  基本数据类型
2.2.2  自定义数据类型
2.3  常量
2.3.1  局部常量
2.3.2  模块级常量
2.3.3  公用常量
2.4  变量
2.4.1  普通局部变量
2.4.2  静态局部变量
2.4.3  模块级变量
2.4.4  公用变量
2.5  运算符
2.5.1  算术运算符
2.5.2  字符串运算符
2.5.3  关系运算符
2.5.4  逻辑运算符
2.6  表达式
2.6.1  表达式的分类
2.6.2  表达式的书写规则
2.6.3  复合表达式的运算顺序
2.7  小结
2.8  习题
第3章  程序控制结构
3.1  顺序结构
3.1.1  赋值语句
3.1.2  顺序结构实例
3.2  选择结构
3.2.1  If…Then语句
3.2.2  If…Then…Else语句
3.2.3  If…Then…ElseIf…Else语句
3.2.4  IIf函数
3.2.5  If语句的嵌套
3.2.6  Select Case语句
3.2.7  Is、To关键字的使用
3.3  循环结构
3.3.1  While…Wend语句
3.3.2  For…Next语句
3.3.3  For Each…Next语句
3.3.4  While型Do…Loop语句
3.3.5  Until型Do…Loop语句
3.3.6  循环的嵌套
3.4  其他结构控制语句
3.4.1  GoTo语句
3.4.2  Exit语句
3.4.3  End语句
3.4.4  With语句
3.4.5  DoEvents语句
3.5  小结
3.6  习题
第4章  数组
4.1  数组的概念
4.2  静态数组与动态数组
4.2.1  静态数组
4.2.2  动态数组
4.3  一维数组与多维数组
4.3.1  一维数组
4.3.2  多维数组
4.4  数组的基本操作
4.4.1  输入数组元素
4.4.2  输出数组元素
4.4.3  插入数组元素
4.4.4  删除数组元素
4.4.5  查找数组元素
4.4.6  数组的排序
4.5  小结
4.6  习题
第5章  过程和函数
5.1  Sub过程
5.1.1  Sub过程的分类
5.1.2  创建Sub过程
5.1.3  调用Sub过程
5.2  Function过程
5.2.1  创建Function过程
5.2.2  调用Function过程
5.3  参数传递
5.3.1  形参与实参
5.3.2  传值调用
5.3.3  传址调用
5.3.4  可选参数
5.3.5  数组参数
5.3.6  对象参数
5.4  过程的嵌套与递归调用
5.4.1  嵌套调用
5.4.2  递归调用
5.5  小结
5.6  习题
第2篇  Visual Basic 应用程序篇
第6章  应用程序用户界面
6.1  界面样式
6.1.1  单文档界面
6.1.2  多文档界面
6.1.3  资源管理器样式界面
6.2  窗体的基本概念
6.2.1  窗体的组成
6.2.2  添加和删除窗体
6.3  窗体的属性、方法和事件
6.3.1  窗体的常用属性
6.3.2  窗体的常用方法
6.3.3  窗体的常用事件
6.4  多文档界面设计
6.4.1  多文档界面概述
6.4.2  多文档窗体菜单的设计
6.5  小结
6.6  习题
第7章  通用标准控件
7.1  控件概述
7.2  文本框控件
7.2.1  文本框控件的属性
7.2.2  文本框控件的事件
7.2.3  应用示例
7.3  命令按钮控件
7.3.1  命令按钮控件的属性
7.3.2  命令按钮控件的事件
7.3.3  用户登录窗体设计范例
7.4  单选按钮控件
7.4.1  单选按钮控件的属性
7.4.2  单选按钮控件的事件
7.5  复选按钮控件
7.5.1  复选按钮控件的属性
7.5.2  设置字体格式范例
7.6  定时器控件
7.6.1  定时器控件的属性
7.6.2  定时器控件应用范例
7.7  列表框控件
7.7.1  列表框控件的属性
7.7.2  列表框控件的方法
7.7.3  列表框控件的事件
7.7.4  列表框控件应用范例
7.8  小结
7.9  习题
第8章  扩展控件
8.1  通用对话框控件
8.1.1 “打开”对话框
8.1.2 “工程另存为”对话框
8.1.3 “颜色”对话框
8.1.4 “字体”对话框
8.1.5 “打印”对话框
8.2  列表视图控件
8.2.1  常用属性
8.2.2  常用方法
8.2.3  常用事件
8.3  树视图控件
8.3.1  常用属性
8.3.2  常用方法
8.4  小结
8.5  习题
第9章  菜单、工具栏与状态栏
9.1  菜单
9.1.1  菜单编辑器
9.1.2  下拉式菜单
9.1.3  应用示例
9.2  弹出式菜单
9.3  工具栏
9.3.1  一般步骤
9.3.2  应用示例
9.4  状态栏
9.5  小结
9.6  习题
第10章  文件系统
10.1  文件系统概述
10.1.1  文件的结构
10.1.2  文件的类型
10.2  文件的基本操作
10.2.1  顺序文件的打开和关闭
10.2.2  顺序文件的写操作
10.2.3  顺序文件的读操作
10.2.4  随机文件的打开和关闭
10.2.5  随机文件的写操作
10.2.6  随机文件的读操作
10.3  文件系统控件
10.3.1  DriveListBox控件
10.3.2  DirListBox控件
10.3.3  FileListBox控件
10.3.4  应用示例
10.4  文件系统对象
10.4.1  文件系统对象概述
10.4.2  Drive对象
10.4.3  Folder对象
10.4.4  File对象
10.4.5  TextStream对象
10.5  小结
10.6  习题
第11章  图形与图像
11.1  坐标系统
11.2  图形的基本属性
11.2.1  获取当前坐标
11.2.2  设置颜色属性
11.2.3  设置线条属性
11.2.4  填充图形
11.3  图形控件
11.3.1  Shape控件
11.3.2  Line控件
11.4  图形的基本方法
11.4.1  PSet方法
11.4.2  Line方法
11.4.3  Circle方法
11.4.4  Cls方法
11.4.5  用图形方法绘制统计图例
11.5  小结
11.6  习题
第12章  多媒体编程
12.1  多媒体概述
12.2  多媒体控件
12.2.1  MMControl控件
12.2.2  WindowsMediaPlayer控件
12.3  API函数实现多媒体编程
12.3.1  PlaySound函数
12.3.2  mciSendString函数
12.4  小结
12.5  习题
第3篇  Visual Basic 高级应用篇
第13章  网络通信编程技术
13.1  网络协议
13.1.1  TCP/IP协议
13.1.2  UDP协议
13.2  Winsock控件
13.2.1  常用属性
13.2.2  常用方法
13.2.3  主要事件
13.3  Winsock控件的应用
13.3.1  创建网络通信程序服务器端
13.3.2  创建网络通信程序客户端
13.3.3  用UDP创建网络通信程序
13.4  小结
13.5  习题
第14章  WIN32 API函数
14.1  API概述
14.1.1  API简介
14.1.2  动态链接库（DLL）
14.2  使用API
14.2.1  API函数的声明
14.2.2  启动API文本浏览器
14.2.3  用API文本浏览器声明API函数
14.3  API函数的应用
14.3.1  常用API函数
14.3.2  获取驱动器的类型
14.3.3  锁定鼠标移动边界
14.4  小结
14.5  习题
第15章  ActiveX控件
15.1  ActiveX控件概述
15.2  创建ActiveX控件
15.2.1  创建步骤
15.2.2  创建ActiveX控件工程
15.2.3  设计外观
15.2.4  添加代码
15.2.5  添加属性、方法和事件
15.2.6  生成ActiveX控件
15.2.7  使用ActiveX控件
15.3  小结
15.4  习题
第16章  程序的调试与除错
16.1  常见错误类型
16.1.1  编译错误
16.1.2  运行错误
16.1.3  逻辑错误
16.2  程序工作模式
16.3  程序调试技术
16.3.1  调试工具栏
16.3.2  本地窗口
16.3.3  立即窗口
16.3.4  监视窗口
16.3.5  Debug对象
16.3.6  Stop语句
16.4  错误处理
16.4.1  Err对象
16.4.2  捕获错误
16.4.3  恢复程序运行
16.5  小结
16.6  习题
第4篇  Visual Basic与数据库系统篇
第17章  数据库系统与SQL语言
17.1  数据库系统概述
17.1.1  三级模式
17.1.2  关系数据库
17.2  Access数据库
17.2.1  创建Access数据库
17.2.2  添加数据表
17.3  SQL Server数据库
17.3.1  创建SQL Server数据库
17.3.2  新建数据表
17.4  SQL语言
17.4.1  数据查询语句
17.4.2  数据操作语句
17.4.3  数据定义语句
17.5  小结
17.6  习题
第18章  ADO数据库编程
18.1  ADO概述
18.2  ADO对象模型
18.2.1  Connection对象
18.2.2  连接数据库
18.2.3  Recordset对象
18.2.4  数据显示实例
18.2.5  Command对象
18.2.6  Field对象
18.2.7  Stream对象
18.2.8  Error对象
18.3  小结
18.4  习题
第19章  VB与数据库编程
19.1  Data控件
19.1.1  Data控件的常用属性
19.1.2  Data控件的常用方法
19.1.3  Data控件的常用事件
19.2  ADO控件
19.2.1  ADO控件的常用属性
19.2.2  ADO控件的常用方法
19.2.3  连接数据库
19.3  数据绑定控件
19.3.1  DBGrid控件
19.3.2  DBList控件和DBCombo控件
19.3.3  DataGrid控件
19.3.4  DataList控件和DataCombo控件
19.4  小结
19.5  习题
第20章  设计数据报表
20.1  数据环境
20.1.1  添加数据环境设计器
20.1.2  添加Connection对象
20.1.3  添加Command对象
20.1.4  使用数据环境
20.2  数据报表
20.2.1  添加数据报表设计器
20.2.2  制作数据报表
20.3  小结
20.4  习题
第21章  人事管理系统开发实例
21.1  人事管理系统开发背景
21.2  人力资源案例设计与分析
21.2.1  系统结构设计
21.2.2  系统需求分析
21.2.3  系统总体设计
21.3  数据库设计
21.3.1  数据库需求分析
21.3.2  创建数据库
21.4  设计公共函数模块
21.4.1  创建公共变量和公共函数模块
21.4.2  创建入口函数
21.5  创建系统登录模块
21.6  创建主窗体模块
21.7  创建用户管理子模块
21.8  创建修改密码子模块
21.9  创建基础数据管理模块
21.10  创建部门信息管理模块
21.11  创建职员基本信息管理子模块
21.12  设计报表
21.13  创建数据库管理模块
21.13.1  创建数据库备份子模块
21.13.2  创建数据库恢复子模块
21.14  应用程序的打包发布
21.15  小结
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>21天学通JavaScript（第5版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript核心技术开发解密
1 三种基础数据结构1
1.1 栈 1
1.2 堆 3
1.3 队列. 4
2 内存空间5
2.1 基础数据类型与变量对象. 5
2.2 引用数据类型与堆内存空间 . 7
2.3 内存空间管理 . 9
3 执行上下文11
3.1 实例1 11
3.2 实例2 15
3.3 生命周期 18
4 变量对象20
4.1 创建过程 20
4.2 实例分析 23
4.3 全局上下文的变量对象 26
目录| vii
5 作用域与作用域链27
5.1 作用域 . 27
5.1.1 全局作用域27
5.1.2 函数作用域28
5.1.3 模拟块级作用域 29
5.2 作用域链 31
6 闭包33
6.1 概念. 33
6.2 闭包与垃圾回收机制 . 38
6.3 闭包与作用域链 39
6.4 在Chrome 开发者工具中观察函数调用栈、作用域链与闭包. 41
6.5 应用闭包 49
6.5.1 循环、setTimeout 与闭包. 49
6.5.2 单例模式与闭包 50
6.5.3 模块化与闭包 . 53
7 this 59
8 函数与函数式编程67
8.1 函数. 67
8.2 函数式编程. 75
8.2.1 函数是一等公民 77
8.2.2 纯函数 . 80
8.2.3 高阶函数 85
8.2.4 柯里化 . 91
8.2.5 代码组合 101
viii | 目录
9 面向对象106
9.1 基础概念 106
9.1.1 对象的定义106
9.1.2 创建对象 107
9.1.3 构造函数与原型 108
9.1.4 更简单的原型写法114
9.1.5 原型链 . 114
9.1.6 实例方法、原型方法、静态方法117
9.1.7 继承118
9.1.8 属性类型 122
9.1.9 读取属性的特性值127
9.2 jQuery 封装详解 127
9.3 封装一个拖曳对象. 134
9.4 封装一个选项卡 147
9.5 封装无缝滚动 . 153
10 ES6 与模块化159
10.1 常用语法知识 . 160
10.2 模板字符串. 167
10.3 解析结构 168
10.4 展开运算符. 171
10.5 Promise 详解173
10.5.1 异步与同步173
10.5.2 Promise. 175
10.5.3 async/await . 185
10.6 事件循环机制 . 189
10.7 对象与class . 197
10.8 模块化 . 202
10.8.1 基础语法 204
10.8.2 实例209
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript核心技术开发解密
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5 Web开发最佳实践  使用CSS JavaScript和多媒体
第Ⅰ部分　HTML5技术

第1章  超文本标记语言     3
1.1  HTML文档     3
1.1.1  元素     4
1.1.2  DOCTYPE     4
1.1.3  特性     5
1.1.4  各种各样的结构规则     5
1.1.5  html元素     6
1.2  head元素     6
1.2.1  title元素     6
1.2.2  meta元素     7
1.2.3  script元素     8
1.2.4  link元素     8
1.2.5  style元素     11
1.2.6  base元素     12
1.3  小结     12
第2章  级联样式表     15
2.1  样式设计指导     15
2.1.1  组织内容     15
2.1.2  应用样式     16
2.1.3  CSS3规范     17
2.2  CSS概念     17
2.2.1  选择器     17
2.2.2  声明     18
2.2.3  单位     18
2.3  优先级     21
2.3.1  样式表来源     21
2.3.2  特殊性规则     22
2.3.3  关键字!important     23
2.4  盒子模型     23
2.5  厂商前缀     24
2.6  style特性     25
2.7  小结     25
第3章  JavaScript要素     29
3.1  JavaScript介绍     29
3.1.1  对象     29
3.1.2  构造函数     30
3.1.3  原型     32
3.2  继承     32
3.2.1  使用原型     33
3.2.2  使用Create     34
3.2.3  使用类关键字     35
3.2.4  重写成员     36
3.3  属性     37
3.3.1  数组     37
3.3.2  特性     38
3.3.3  特殊类型     39
3.4  其他主题     39
3.4.1  比较运算符     39
3.4.2  变量作用域     40
3.4.3  严格模式     41
3.4.4  函数     42
3.4.5  上下文     43
3.4.6  立即调用的函数     45
3.4.7  命名空间     45
3.4.8  异常     47
3.4.9  承诺     47
3.5  数组方法     49
3.5.1  访问元素     49
3.5.2  输出数组     50
3.5.3  操作元素     50
3.5.4  搜索     52
3.5.5  创建子集     53
3.5.6  处理     54
3.6  小结     55

第Ⅱ部分  HTML
第4章  结构化HTML元素     59
4.1  内容类别     59
4.2  节内容     60
4.2.1  section     60
4.2.2  article     60
4.2.3  aside     61
4.2.4  nav     61
4.2.5  address     61
4.3  大纲     62
4.3.1  显性节     62
4.3.2  文档标题     64
4.3.3  header和footer     65
4.3.4  规划页面布局     65
4.4  节根     66
4.4.1  blockquote     66
4.4.2  details     66
4.4.3  figure     67
4.5  分组元素     68
4.5.1  段落     68
4.5.2  水平规则     68
4.5.3  预格式化(pre)     68
4.5.4  main     69
4.5.5  div     69
4.6  列表元素     70
4.6.1  列表     70
4.6.2  描述列表     72
4.7  内联框架     74
4.8  已弃用的元素     75
4.8.1  hgroup     75
4.8.2  dir     75
4.8.3  frame和frameset     75
4.9  小结     76
第5章  短语HTML元素     81
5.1  突出显示文本     81
5.1.1  重要性(strong)     82
5.1.2  强调(em)     82
5.1.3  关联(mark)     82
5.1.4  交替声音(i)     83
5.1.5  细则(small)     84
5.1.6  删除线(s)     84
5.1.7  文体突出(b)     85
5.1.8  无法明确表达(u)     86
5.1.9  元素复习     86
5.2  其他语义短语     87
5.2.1  代码、样本、键盘和变量     87
5.2.2  缩写和定义     88
5.2.3  下标和上标     89
5.2.4  time     90
5.3  编辑     90
5.4  引用     91
5.5  span     93
5.6  添加回车     93
5.6.1  换行     93
5.6.2  单词换行时机     94
5.6.3  连字符     95
5.7  双向文本     96
5.7.1  文本方向     96
5.7.2  流动方向     96
5.7.3  紧紧包裹     98
5.7.4  使用隔离     98
5.7.5  覆盖方向     99
5.8  ruby     99
5.9  小结     100
第6章  表格HTML元素     101
6.1  简单表格     101
6.2  列和行标题     102
6.3  列组     103
6.4  表标题和页脚     105
6.5  跨越单元格     106
6.6  小结     110
第7章  嵌入式HTML元素     111
7.1  锚     111
7.2  图像     112
7.2.1  多个来源     113
7.2.2  图像映射     116
7.3  音频     117
7.3.1  使用本机控件     118
7.3.2  文件格式     119
7.4  视频     120
7.5  轨道     122
7.6  HTML5插件     124
7.7  小结     125
第8章  HTML表单元素     127
8.1  概述     127
8.2  表单元素     127
8.2.1  表单动作     128
8.2.2  表单方法     129
8.2.3  附加特性     130
8.3  输入元素     130
8.3.1  文本表单数据     130
8.3.2  选择元素     135
8.3.3  其他类型     138
8.3.4  日期和时间数据     142
8.4  其他可视元素     145
8.4.1  label     145
8.4.2  output元素     146
8.4.3  meter元素     146
8.4.4  progress元素     148
8.5  按钮类型     148
8.6  组织表单     149
8.7  验证     150
8.8  小结     151
第Ⅲ部分  CSS
第9章  CSS选择器     155
9.1  选择器概述     155
9.1.1  元素选择器     155
9.1.2  类选择器     156
9.1.3  ID选择器     156
9.1.4  特性选择器     156
9.1.5  伪类选择器     157
9.1.6  伪元素     159
9.2  使用组合选择符     160
9.2.1  组合元素和类选择器     160
9.2.2  伪类选择器     160
9.2.3  组合运算符     160
9.2.4  not选择器     161
9.2.5  组运算符     162
9.2.6  解决冲突     162
9.3  媒体查询     162
9.3.1  媒体特性     163
9.3.2  使用媒体查询     164
9.4  小结     164
第10章  定位内容     165
10.1  display     165
10.2  定义大小     167
10.2.1  绝对大小     167
10.2.2  相对大小     168
10.2.3  设置最大值     168
10.2.4  基于内容     169
10.2.5  IE的变通方法     170
10.2.6  min-content示例     171
10.2.7  盒子大小调整     172
10.3  float     174
10.3.1  清除浮动     175
10.3.2  包含浮动     177
10.4  内联块     178
10.5  定位     179
10.5.1  相对定位     180
10.5.2  绝对定位     182
10.5.3  固定定位     182
10.6  z-index     183
10.7  内容居中     184
10.8  小结     185
第11章  文本样式     187
11.1  字体     187
11.1.1  获取字体     187
11.1.2  字体系列     189
11.1.3  字体设置     190
11.1.4  简写符号     195
11.2  文本格式化     195
11.2.1  水平对齐     196
11.2.2  缩进     196
11.2.3  溢出     196
11.2.4  引号     197
11.2.5  阴影     197
11.2.6  大小写     198
11.3  间距和对齐     199
11.3.1  基本间距     199
11.3.2  处理空白     199
11.3.3  垂直对齐     200
11.4  break     202
11.4.1  单词换行     202
11.4.2  分页符     203
11.5  光标     203
11.6  小结     204
第12章  边框和背景     205
12.1  边框     205
12.1.1  基本样式     205
12.1.2  单个边     207
12.1.3  半径     208
12.1.4  使用图像     209
12.1.5  渐变     213
12.2  阴影     216
12.3  轮廓     217
12.4  背景     218
12.4.1  图像特性     218
12.4.2  裁剪     220
12.4.3  背景简写     220
12.4.4  示例     221
12.5  小结     223
第13章  对表格进行样式设计     225
13.1  对表格进行样式设计     225
13.1.1  基本表格样式     226
13.1.2  其他表格样式     232
13.2  使用CSS创建表格     235
13.2.1  display特性     236
13.2.2  CSS表格演示     237
13.2.3  应用     239
13.3  样式列表     244
13.3.1  类型     244
13.3.2  图像     245
13.3.3  位置     246
13.3.4  简写     246
13.4  小结     246
第14章  Flexbox     247
14.1  容器配置     247
14.1.1  flex方向     247
14.1.2  flex换行     249
14.1.3  对齐     250
14.1.4  对齐项目     252
14.2  项目配置     252
14.2.1  增长与收缩     253
14.2.2  顺序     257
14.2.3  重写对齐方式     257
14.3  垂直示例     258
14.4  小结     259
第15章  动画与变形     261
15.1  动画     261
15.1.1  关键帧     261
15.1.2  配置动画     262
15.1.3  贝塞尔曲线     265
15.2  过渡     266
15.3  变形     269
15.3.1  移动     269
15.3.2  旋转     269
15.3.3  缩放     270
15.3.4  倾斜     271
15.3.5  演示     271
15.3.6  3D变形     273
15.4  小结     274

第Ⅳ部分  JavaScript
第16章  浏览器环境     279
16.1   浏览器对象模型     279
16.1.1  screen     280
16.1.2  location     281
16.1.3  history     282
16.1.4  navigator     283
16.2  window对象     284
16.2.1  控制台     285
16.2.2  缓存     288
16.2.3  浏览器界面元素     290
16.2.4  计时器     290
16.3  小结     291
第17章  窗口对象     293
17.1  创建窗口     293
17.1.1  弹出窗口阻止程序     294
17.1.2  重新使用窗口     295
17.1.3  配置参数     295
17.1.4  操作窗口     297
17.2  模态对话框窗口     300
17.2.1  标准的弹出对话框     300
17.2.2  自定义模态对话框     301
17.3  框架     303
17.3.1  简单示例     304
17.3.2  访问框架     305
17.3.3  使用sandbox     305
17.4  小结     306
第18章  DOM元素     307
18.1  文档对象模型     307
18.1.1  元素继承     308
18.1.2  简单示例     309
18.2  基本的DOM操作     309
18.2.1  查找元素     309
18.2.2  创建元素     310
18.2.3  移动元素     311
18.2.4  修改元素     312
18.3  相关元素     313
18.4  使用jQuery     314
18.4.1  基本知识     314
18.4.2  操作DOM元素     315
18.5  小结     317
第19章  动态样式设计     319
19.1  更改样式表     319
19.1.1  启用样式表     319
19.1.2  选择样式表     321
19.1.3  备用样式表     322
19.1.4  使用样式元素     323
19.2  修改规则     324
19.3  修改类     326
19.4  修改内联样式     327
19.4.1  使用CSSStyleDeclaration     327
19.4.2  设置样式属性     328
19.4.3  使用setAttribute     329
19.5  计算的样式     329
19.6  小结     330
第20章  事件     331
20.1  初始示例     331
20.2  事件传播     333
20.3  未注册事件     336
20.4  事件接口     336
20.4.1  常用的事件属性     337
20.4.2  取消事件     337
20.5  探索事件     338
20.6  小结     339

第Ⅴ部分  高级应用
第21章  音频和视频     343
21.1  概述     343
21.2  自定义音频控件     344
21.2.1  支持播放和暂停     345
21.2.2  支持进度和查找     346
21.2.3  控制音量     347
21.2.4  调整样式     348
21.2.5  更改音频源     349
21.3  自定义视频控件     349
21.4  小结     351
第22章  可缩放矢量图形     353
22.1  SVG介绍     353
22.1.1  添加一些简单的形状     353
22.1.2  添加样式     354
22.2  使用SVG图像文件     355
22.2.1  创建SVG图像     356
22.2.2  使用SVG背景     356
22.3  创建交互式地图     357
22.3.1  使用path元素     357
22.3.2  实现初始地图     360
22.4  对州元素进行样式设计     361
22.4.1  使用基本填充颜色     361
22.4.2  使用渐变填充     363
22.4.3  使用背景图像     364
22.4.4  使用JavaScript更改
样式     365
22.5  添加动画     367
22.6  小结     369
第23章  画布     371
23.1  创建一个国际象棋棋盘     371
23.1.1  绘制矩形     372
23.1.2  使用渐变     374
23.1.3  使用图像     374
23.1.4  添加简单动画     380
23.2  建立太阳系模型     382
23.2.1  使用路径     383
23.2.2  绘制圆弧     383
23.2.3  使用变换     384
23.2.4  保存上下文状态     385
23.2.5  绘制太阳系     386
23.2.6  应用缩放     389
23.3  裁剪画布     390
23.4  了解合成     391
23.5  小结     394
第24章  拖放     397
24.1  理解拖动和放置     397
24.1.1  处理事件     397
24.1.2  使用数据传输对象     399
24.1.3  启用可拖动元素     400
24.2  创建跳棋应用程序     401
24.2.1  创建项目     401
24.2.2  绘制跳棋棋盘     401
24.3  添加拖放功能     404
24.3.1  允许放置     405
24.3.2  执行自定义放置操作     405
24.3.3  提供视觉反馈     407
24.4  执行游戏规则     409
24.4.1  验证移动     409
24.4.2  晋升为王     413
24.4.3  依次移动     414
24.5  使用高级功能     418
24.5.1  更改拖动图像     418
24.5.2  在窗口之间拖动     419
24.6  小结     420
第25章  Indexed DB     421
25.1  介绍Indexed DB     421
25.1.1  使用对象存储     422
25.1.2  定义数据库     423
25.1.3  异步处理     423
25.1.4  使用事务     425
25.2  创建应用程序     425
25.2.1  创建Web项目     425
25.2.2  绘制画布     426
25.2.3  配置棋子     427
25.3  创建数据库     429
25.3.1  打开数据库     429
25.3.2  定义数据库结构     430
25.4  绘制棋子     433
25.4.1  使用游标     433
25.4.2  获取单个对象     435
25.4.3  测试应用程序     435

25.5  移动棋子     437
25.5.1  定义移动     437
25.5.2  转换位置     438
25.5.3  完成一次移动     439
25.5.4  获取对象键     440
25.5.5  执行更新     441
25.5.6  启动动画     442
25.6  跟踪被捕获的棋子     443
25.7  小结     444
第26章  地理定位和映射     447
26.1  理解地理定位     447
26.1.1  测量地理位置技术     447
26.1.2  使用地理位置数据     448
26.2  使用地理定位API     448
26.2.1  创建Web项目     448
26.2.2  使用地理定位对象     449
26.2.3  显示位置     451
26.3  使用映射平台     452
26.3.1  创建Bing Maps账户     453
26.3.2  添加地图     454
26.3.3  添加图钉     456
26.4  小结     459
附录A  Ajax     461
附录B  拖放源代码     465
附录C 参考资料     471
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5 Web开发最佳实践  使用CSS JavaScript和多媒体
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript函数式编程思想
内容提要	5
前言	5
第1章  名称	6
1.1  名称绑定	6
1.1.1  常量和变量	7
1.2  作用域	8
1.2.1  包块作用域与就近声明	9
1.2.2  静态作用域和动态作用域	11
1.2.3  前向引用和提升	13
1.3  闭包	14
1.3.1  包块作用域与闭包	16
1.4  小结	17
第2章  类型系统	17
2.1  类型是什么	17
2.2  常用的数据类型	18
2.2.1  整数	19
2.2.2  浮点数	19
2.2.3  布尔值	19
2.2.4  字符	19
2.2.5  元组、结构体、类	19
2.2.6  函数	20
2.2.7  数组、字符串、队列、堆栈、列表	21
2.2.8  结构体、映射	23
2.2.9  深入复合类型	24
2.3  强类型与弱类型	25
2.4  名义类型和结构类型	26
2.5  静态类型与动态类型	27
2.5.1  静态类型	27
2.5.2  动态类型	29
2.6  多态性	31
2.6.1  子类型多态性	32
2.6.2  参数多态性	34
2.7  JavaScript的类型系统	36
2.7.1  undefined和null	37
2.7.2  弱类型	40
2.7.3  变成强类型	43
2.8  鸭子类型和多态性	46
2.9  小结	47
第3章  Lambda演算和函数	48
3.1  命令式编程中函数的作用	48
3.1.1  抽象级别	49
3.2  Lambda演算	50
3.2.1  定义	51
3.2.2  记法	51
3.2.3  化约	51
3.2.4  算数	52
3.2.5  逻辑运算	53
3.2.6  函数式编程的特点	54
3.3  JavaScript中的函数	55
3.3.1  定义函数	56
3.3.2  调用函数	61
3.3.3  传递参数	61
3.3.4  模块	63
3.5  小结	64
第4章  函数是一等值	64
4.1  函数参数	65
4.1.1  数组的迭代方法	65
4.1.2  设计函数参数	66
4.2  函数返回值	69
4.2.1  判断数据类型	69
4.2.2  日志	70
4.2.3  读取对象属性	71
4.3  高阶函数	72
4.3.1  组合谓词函数	73
4.3.2  改变函数参数数目	74
4.3.3  检查参数类型	76
4.3.4  记忆化	78
4.4  小结	81
第5章  部分应用和复合	81
5.1  部分应用	81
5.2  柯里化	83
5.2.1  增强的柯里化	86
5.2.2  从右向左柯里化	87
5.2.3  进一步增强的柯里化	88
5.2.4  柯里化的性能成本	90
5.2.5  应用柯里化的方式	91
5.2.6  参数的顺序	92
5.2.7  柯里化与高阶函数	93
5.3  复合	95
5.3.1  管道和数据流	97
5.3.2  函数类型与柯里化	99
5.4  一切都是函数	101
5.4.1  操作符的函数化	101
5.4.2  方法的函数化	105
5.4.3  控制流语句的函数化	109
5.5  性能和可读性	112
5.6  小结	113
第6章  副作用和不变性	113
6.1  副作用	113
6.2  纯函数	114
6.2.1  外部变量	115
6.2.2  实现	117
6.2.3  函数内部的副作用	117
6.2.4  闭包	119
6.3  不变性	120
6.3.1  哲学上的不变性与身份	120
6.3.2  简单类型和复合类型	121
6.3.3  值类型和引用类型	122
6.3.4  可变类型和不可变类型	123
6.3.5  可变数据类型的坏处	123
6.3.6  克隆和冻结	125
6.3.7  不可变的数据结构	128
6.3.8  不可变的映射和数组	131
6.3.9  不可变类型的其他好处	134
6.4  小结	135
第7章  递归	136
7.1  调用自身	136
7.1.1  递归的思路	138
7.1.2  带累积参数的递归函数	139
7.2  递归的数据结构	142
7.2.1  构建列表	142
7.2.2  树	145
7.3  递归与迭代	146
7.3.1  名称	146
7.3.2  理念和对比	146
7.3.3  迭代协议	148
7.3.4  递归协议	150
7.3.5  搜索树	152
7.4  尾部递归	154
7.4.1  调用堆栈	154
7.4.2  尾部调用优化	156
7.4.3  怎样算是尾部调用	157
7.4.4  尾部递归	159
7.5  递归的效率	160
7.6  小结	163
第8章  列表	164
8.1  处理列表	164
8.1.1  函数的三种写法	165
8.1.2  处理列表的高阶函数	166
8.2  函数式编程的列表接口	169
8.2.1  没有副作用的方法	170
8.2.2  有副作用的方法	171
8.2.3  列表接口中的其他函数	173
8.3  小结	175
第9章  从面向对象到函数式编程	175
9.1  面向对象编程的特点	175
9.1.1  封装性	176
9.1.2  继承性	176
9.1.3  多态性	177
9.2  JavaScript面向对象编程	180
9.2.1  创建和修改单个对象	180
9.2.2  克隆和复制属性	181
9.2.3  原型	182
9.2.4  建构函数	182
9.2.5  建构函数和类型继承	184
9.2.6  原型和类型继承	186
9.2.7  Proxy和对象继承	189
9.2.8  Mixin	191
9.2.9  工厂函数	193
9.3  函数式编程的视角	196
9.3.1  不可变的对象	196
9.3.2  评判面向对象编程	197
9.4  方法链和复合函数	199
9.4.1  方法链	199
9.4.2  延迟的方法链	202
9.4.3  复合函数	203
9.4.3  函数式的SQL	203
9.5  小结	207
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript函数式编程思想
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML+CSS+JavaScript网页制作案例教程
第1章 网页那点事
1.1 Web 基本概念
1.1.1 认识网页
1.1.2 名词解释
1.1.3 了解Web 标准
1.2 网页制作入门
1.2.1 HTML 简介
1.2.2 CSS 简介
1.2.3 JavaScript 简介
1.2.4 常见浏览器介绍
1.3 Dreamweaver 工具的使用
1.3.1 Dreamweaver 界面介绍
1.3.2 Dreamweaver 初始化设置
1.3.3 创建第*个网页
第2章 从零开始构建HTML 页面
2.1 【案例1】简单的网页
案例描述
知识引入
案例实现
2.2 【案例2】新闻页面
案例描述
知识引入
案例实现
2.3 【案例3】图文混排
案例描述
知识引入
案例实现
动手实践
第3章 使用CSS 技术美化网页
3.1 【案例4】文字Logo
案例描述
知识引入
案例实现
3.2 【案例5】专题栏目
案例描述
知识引入
案例实现
3.3 【案例6】搜索页面
案例描述
知识引入
案例实现
动手实践
第4章 CSS 盒子模型
4.1 【案例7】音乐盒
案例描述
知识引入
案例实现
4.2 【案例8】用户中心
案例描述
知识引入
案例实现
4.3 【案例9】咖啡店banner
案例描述
知识引入
案例实现
4.4 【案例10】图标导航栏
案例描述
知识引入
案例实现
动手实践
第5章 列表与超链接
5.1 【案例11】精美电商悬浮框
案例描述
知识引入
案例实现
5.2 【案例12】二维码名片
案例描述
知识引入
案例实现
5.3 【案例13】电商团购悬浮框
案例描述
知识引入
案例实现
5.4 【案例14】唱吧导航栏
案例描述
知识引入
案例实现
动手实践
第6章 HTML 表单
6.1 【案例15】用户登录界面
案例描述
知识引入
案例实现
6.2 【案例16】趣味选择题
案例描述
知识引入
案例实现
6.3 【案例17】空间日志
案例描述
知识引入
案例实现
6.4 【案例18】学员档案
案例描述
知识引入
案例实现
动手实践
第7章 浮动与定位
7.1 【案例19】世界杯梦幻阵容
案例描述
知识引入
案例实现
7.2 【案例20】商品专栏
案例描述
知识引入
案例实现
7.3 【案例21】移动端电商界面
案例描述
知识引入
案例实现
7.4 【案例22】违停查询
案例描述
知识引入
案例实现
动手实践
第8章 JavaScript 编程基础
8.1 【案例23】动态获取用户密码
案例描述
知识引入
案例实现
8.2 【案例24】传智商城下拉菜单
案例描述
知识引入
案例实现
8.3 【案例25】计算器
案例描述
知识引入
案例实现
动手实践
第9章 JavaScript 事件处理
9.1 【案例26】电商网站限时秒杀
案例描述
知识引入
案例实现
9.2 【案例27】Tab 栏切换效果
案例描述
知识引入
案例实现
9.3 【案例28】台球移动游戏
案例描述
知识引入
案例实现
9.4 【案例29】用户登录验证
案例描述
知识引入
案例实现
动手实践
第10章 实战开发——传智播客设计学院首页面
10.1 准备工作
10.2 首页面详细制作
动手实践
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML+CSS+JavaScript网页制作案例教程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>PHP、MySQL和JavaScript入门经典(第6版)
第1部分：Web应用基础知识
第1章　理解Web的工作方式　3
1．1　HTML和WWW简史　4
1．2　创建Web内容　4
1．3　理解Web内容递送　5
1．4　选择Web托管提供商　7
1．5　利用多种Web浏览器执行测试　8
1．6　创建一个示例文件　9
1．7　使用FTP传输文件　10
1．7．1　选择FTP客户端　10
1．7．2　使用FTP客户端　11
1．8　了解在Web服务器上放置文件的位置　13
1．8．1　基本的文件管理　14
1．8．2　使用索引页面　15
1．9　小结　16
1．10　问与答　16
1．11　测验　17
1．11．1　问题　17
1．11．2　解答　17
1．11．3　练习　17
第2章　构造HTML文档　19
2．1　从一个简单的Web页面开始　20
2．2　每个Web页面都必须具有的HTML标签　22
2．3　在Web页面中使用超链接　24
2．3．1　使用锚点链接到一个页面内部　25
2．3．2　链接到外部Web内容　25
2．3．3　链接到一个E-mail地址　26
2．4　利用段落和换行符组织页面　26
2．5　利用标题组织内容　28
窥探其他设计师的页面？　30
2．6　理解语义元素　30
2．6．1　以多种方式使用元素　35
2．6．2　理解元素　36
2．6．3　正确地使用元素　37
2．6．4　实现元素　37
2．6．5　何时使用元素　38
2．6．6　有效地使用元素　39
2．7　CSS的工作方式　40
2．8　基本的样式表　41
2．9　CSS样式的基础知识　46
2．9．1　基本的布局属性　46
2．9．2　基本的格式化属性　47
2．10　使用样式类　49
2．11　使用样式ID　51
2．12　内部样式表和内联样式　52
验证样式表　53
2．13　小结　54
2．14　问与答　55
2．15　测验　56
2．15．1　问题　56
2．15．2　解答　57
2．15．3　练习　57
第3章　理解CSS方框模型和定位　58
3．1　CSS方框模型　59
3．2　详解定位　61
3．3　控制元素的堆叠方式　65
3．4　管理文本流　67
3．5　理解固定布局　67
3．6　理解流动布局　69
3．7　创建固定/流动混合布局　70
3．7．1　从基本的布局结构开始　71
3．7．2　在固定/流动混合布局中定义两栏　72
3．7．3　设置布局的最小宽度　74
3．7．4　在固定/流动混合布局中处理栏高度　74
3．8　考虑响应性Web设计　79
3．9　小结　80
3．10　问与答　80
3．11　测验　81
3．11．1　问题　81
3．11．2　解答　81
3．11．3　练习　81
第4章　理解JavaScript　82
4．1　学习Web脚本编程的基础知识　83
脚本和程序　83
4．2　JavaScript如何适应Web页面　84
4．2．1　使用单独的JavaScript文件　85
4．2．2　使用基本的JavaScript事件　85
4．3　探索JavaScript的能力　86
4．3．1　验证表单　86
4．3．2　特殊效果　86
4．3．3　远程脚本调用（AJAX）　86
4．4　基本概念　87
4．4．1　语句　87
4．4．2　把任务与函数相结合　88
4．4．3　变量　88
4．4．4　了解对象　88
4．4．5　条件语句　89
4．4．6　循环语句　89
4．4．7　事件处理程序　90
4．4．8　首先运行哪个脚本　91
4．5　JavaScript语法规则　92
4．5．1　大小写敏感性　92
4．5．2　变量、对象和函数名称　92
4．5．3　保留字　92
4．5．4　空白　92
4．6　使用注释　93
4．7　关于JavaScript的最佳实践　93
4．8　理解JSON　94
4．9　使用JavaScript控制台调试JavaScript错误　95
4．10　小结　96
4．11　问与答　96
4．12　测验　97
4．12．1　问题　97
4．12．2　解答　98
4．12．3　练习　98
第5章　PHP简介　99
5．1　PHP是如何与Web服务器协作的　99
5．2　PHP脚本基础　100
5．2．1　开始和结束一个PHP语句块　101
5．2．2　echo语句和print()函数　102
5．2．3　组合HTML和PHP　103
5．2．4　为PHP代码添加注释　104
5．3　代码块和浏览器输出　104
5．4　小结　107
5．5　问与答　107
5．6　测验　107
5．6．1　问题　107
5．6．2　解答　108
5．6．3　练习　108
第2部分：动态Web站点基础
第6章　理解动态Web站点和HTML5应用程序　111
6．1　理解不同类型的脚本　112
6．2　显示随机内容　112
6．3　理解文档对象模型　116
6．4　使用window对象　116
6．5　处理document对象　117
6．5．1　获取关于文档的信息　117
6．5．2　在文档中编写文本　118
6．5．3　使用链接和锚　119
6．6　访问浏览器的历史记录　119
6．7　使用location对象　121
6．8　关于DOM结构的更多知识　122
6．8．1　节点　123
6．8．2　父对象与子对象　123
6．8．3　兄弟对象　123
6．9　处理DOM节点　123
6．9．1　基本的节点属性　123
6．9．2　节点的关系属性　124
6．9．3　文档方法　124
6．9．4　节点方法　125
6．10　创建可定位的元素（图层）　125
利用JavaScript控制定位　126
6．11　隐藏和显示对象　129
6．12　修改页面内的文本　131
6．13　向页面中添加文本　132
6．14　基于用户交互更改图像　134
6．15　提前考虑开发HTML5应用程序　135
6．16　小结　136
6．17　问与答　136
6．18　测验　137
6．18．1　问题　137
6．18．2　解答　137
6．18．3　练习　137
第7章　JavaScript基础：变量、字符串和数组　138
7．1　使用变量　138
7．1．1　选择变量名　139
7．1．2　使用局部变量和全局变量　139
7．1．3　给变量赋值　140
7．2　了解表达式和运算符　141
7．2．1　使用JavaScript运算符　141
7．2．2　运算符优先级　142
7．3　JavaScript中的数据类型　143
7．4　在数据类型之间转换　143
7．5　使用String对象　144
7．5．1　创建String对象　144
7．5．2　赋值　145
7．5．3　计算字符串的长度　146
7．5．4　转换字符串的大小写　146
7．6　处理子串　147
7．6．1　使用字符串的一部分　147
7．6．2　获取单个字符　148
7．6．3　查找子串　148
7．7　使用数值型数组　149
7．7．1　创建数值型数组　149
7．7．2　理解数组长度　149
7．7．3　访问数组元素　150
7．8　使用字符串数组　150
7．8．1　创建字符串数组　150
7．8．2　拆分字符串　151
7．8．3　对字符串数组进行排序　151
7．9　对数值型数组进行排序　151
7．10　小结　154
7．11　问与答　154
7．12　测验　155
7．12．1　问题　155
7．12．2　解答　156
7．12．3　练习　156
第8章　JavaScript基础：函数、对象和流程控制　157
8．1　使用函数　158
8．1．1　定义函数　158
8．1．2　调用函数　159
8．1．3　返回值　161
8．2　对象简介　163
8．2．1　创建对象　163
8．2．2　理解方法　163
8．3　使用对象简化脚本编程　164
8．3．1　定义对象　164
8．3．2　定义对象的方法　165
8．3．3　创建对象的实例　166
8．4　扩展内置对象　168
8．5　使用Math对象　169
8．5．1　四舍五入和截尾　170
8．5．2　生成随机数　170
8．5．3　其他Math方法　170
8．6　使用Math方法　171
8．7　处理Date对象　173
8．7．1　创建Date对象　173
8．7．2　设置Date值　173
8．7．3　读取Date值　174
8．7．4　处理时区　174
8．7．5　在日期格式之间转换　175
8．8　if语句　175
8．8．1　条件运算符　176
8．8．2　利用逻辑运算符把条件结合起来　176
8．8．3　else关键字　177
8．9　使用简写的条件表达式　178
8．10　利用if和else测试多个条件　179
8．10．1　HTML文件　179
8．10．2　JavaScript文件　180
8．11　利用switch使用多个条件　181
8．12　使用for循环　182
8．13　使用while循环　184
8．14　使用do．．．while循环　185
8．15　使用循环　185
8．15．1　创建无限循环　185
8．15．2　退出循环　186
8．15．3　继续执行循环　186
8．16　遍历对象属性　187
8．17　小结　189
8．18　问与答　190
8．19　测验　190
8．19．1　问题　190
8．19．2　解答　191
8．19．3　练习　191
第9章　理解JavaScript事件处理　192
9．1　理解事件处理程序　192
9．1．1　对象和事件　193
9．1．2　创建事件处理程序　193
9．1．3　用JavaScript定义事件处理程序　194
9．1．4　支持多个事件处理程序　194
9．1．5　使用Event对象　195
9．2　使用鼠标事件　196
9．2．1　移入和移出　196
9．2．2　按下和释放（以及单击）　197
9．3　使用键盘事件　199
9．4　使用load和unload事件　201
9．5　使用click更改的外观　202
9．6　小结　207
9．7　问与答　207
9．8　测验　207
9．8．1　问题　207
9．8．2　解答　208
9．8．3　练习　208
第10章　使用jQuery的基础知识　209
10．1　使用第三方JavaScript库　209
10．2　jQuery应运而生　210
10．3　准备使用jQuery　211
10．4　熟悉$()．ready处理程序　212
10．5　选择DOM和CSS内容　213
10．6　操作HTML内容　214
10．6．1　显示和隐藏元素　215
10．6．2　制作元素的动画　216
10．7　结合使用各种方法来创建jQuery动画　218
10．8　利用jQuery处理事件　221
10．9　小结　222
10．10　问与答　222
10．11　测验　222
10．11．1　问题　222
10．11．2　解答　223
10．11．3　练习　223
第3部分：提高Web应用程序的层级
第11章　AJAX：远程脚本编程　227
11．1　AJAX简介　227
11．1．1　JavaScript客户（前端）　228
11．1．2　服务器端脚本（后端）　228
11．1．3　XML　229
11．1．4　流行的AJAX示例　229
11．2　使用XMLHttpRequest　229
11．2．1　创建请求　230
11．2．2　打开URL　230
11．2．3　发送请求　230
11．2．4　等待响应　230
11．2．5　解释响应数据　231
11．3　创建简单的AJAX库　231
11．3．1　ajaxRequest函数　232
11．3．2　ajaxResponse函数　232
11．3．3　使用库　232
11．4　使用库创建AJAX测验　233
11．4．1　HTML文件　233
11．4．2　XML文件　234
11．4．3　JavaScript文件　234
11．4．4　测试示例　236
11．5　调试基于AJAX的应用程序　236
11．5．1　HTML表单　237
11．5．2　PHP后端　238
11．5．3　JavaScript前端　238
11．5．4　使之工作　240
11．6　将jQuery的内置函数用于AJAX　240
11．7　小结　241
11．8　问与答　241
11．9　测验　242
11．9．1　问题　242
11．9．2　解答　242
11．9．3　练习　242
第12章　PHP基础：变量、字符串和数组　243
12．1　变量　243
12．1．1　全局变量　244
12．1．2　超全局变量　245
12．2　数据类型　245
12．2．1　使用settype()来改变变量的数据类型　247
12．2．2　通过类型转换改变变量的数据类型　248
12．2．3　为何测试类型　250
12．3　操作符和表达式　250
12．3．1　赋值操作符　251
12．3．2　算术操作符　251
12．3．3　连接操作符　252
12．3．4　复合赋值操作符　252
12．3．5　自动增加和减少一个整型变量　253
12．3．6　比较操作符　254
12．3．7　使用逻辑操作符创建复杂的测试表达式　255
12．3．8　操作符优先级　256
12．4　常量　257
预定义常量　258
12．5　理解数组　258
12．6　创建数组　258
12．6．1　创建关联数组　260
12．6．2　创建多维数组　260
12．7　一些和数组相关的函数　262
12．8　小结　263
12．9　问与答　264
12．10　测验　264
12．10．1　问题　264
12．10．2　解答　265
12．10．3　练习　265
第13章　PHP基础：函数、对象和
流程控制　266
13．1　调用函数　267
13．2　定义一个函数　268
13．3　从用户定义的函数返回值　270
13．4　理解变量作用域　271
使用global语句访问变量　272
13．5　使用static语句在函数调用之间
保存状态　273
13．6　关于参数的更多内容　275
13．6．1　为参数设置默认值　275
13．6．2　把变量引用传递给函数　276
13．7　测试函数是否存在　277
13．8　创建一个对象　278
13．8．1　对象的属性　280
13．8．2　对象方法　281
13．8．3　构造方法　283
13．9　对象继承　283
13．10　转换流程　284
13．10．1　if语句　284
13．10．2　使用else子句的if语句　285
13．10．3　使用带有elseif子句的if
语句　286
13．10．4　switch语句　287
13．10．5　使用?：运算符　288
13．11　实现循环　289
13．11．1　while语句　289
13．11．2　do…while语句　290
13．11．3　for语句　291
13．11．4　用break语句跳出循环　292
13．11．5　用continue语句跳过迭代　293
13．11．6　嵌套循环　294
13．12　小结　296
13．13　问与答　296
13．14　测验　296
13．14．1　问题　297
13．14．2　解答　297
13．14．3　练习　297
第14章　使用cookie和用户会话　298
14．1　cookie简介　298
14．1．1　深入了解一个cookie　299
14．1．2　访问cookies　299
14．2　设置一个cookie　300
14．3　删除一个cookie　302
14．4　会话函数概览　303
14．5　使用会话变量　304
14．6　销毁会话和重置变量　308
14．7　在一个带有注册用户的环境中
使用会话　308
14．7．1　使用注册的用户　309
14．7．2　使用用户偏好　309
14．7．3　理解浏览器中的本地存储和
会话存储　309
14．8　小结　310
14．9　问与答　310
14．10　测验　310
14．10．1　问题　311
14．10．2　解答　311
14．10．3　练习　311
第15章　处理基于Web的表单　312
15．1　HTML表单的工作方式　313
15．2　创建表单　313
15．3　接受文本输入　317
15．4　命名各种表单数据　317
15．5　标记各种表单数据　318
15．6　组合表单元素　319
在表单中包括隐藏的数据　319
15．7　探索表单输入控件　320
15．7．1　复选框　320
15．7．2　单选按钮　322
15．7．3　选择列表　323
15．7．4　文本框、文本区及其他输入
类型　325
15．8　使用HTML5表单验证　326
15．9　提交表单数据　328
为表单事件使用JavaScript　329
15．10　利用JavaScript访问表单元素　329
显示来自表单的数据　330
15．11　创建一个简单的输入表单　331
15．11．1　使用用户定义数组访问表单
输入　332
15．11．2　在单个页面上组合HTML和
PHP代码　333
15．12　使用隐藏字段来保存状态　336
15．13　根据表单提交发送邮件　337
15．13．1　mail()函数的系统配置　337
15．13．2　创建表单　338
15．13．3　创建发送邮件的脚本　339
15．14　小结　341
15．15　问与答　342
15．16　测验　342
15．16．1　问题　342
15．16．2　解答　343
15．16．3　练习　343
第4部分：将数据库整合到应用程序中
第16章　理解数据库设计过程　347
16．1　良好的数据库设计的重要性　347
16．2　表关系的类型　348
16．2．1　一对一关系　349
16．2．2　一对多关系　349
16．2．3　多对多关系　350
16．3　理解规范化　351
16．3．1　平表带来的问题　351
16．3．2　第一范式　352
16．3．3　第二范式　352
16．3．4　第三范式　353
16．4　遵从设计过程　353
16．5　小结　354
16．6　问与答　355
16．7　测验　355
16．7．1　问题　355
16．7．2　解答　355
16．7．3　练习　355
第17章　SQL基本命令　356
17．1　MySQL数据类型　357
17．1．1　数字数据类型　357
17．1．2　日期和时间类型　358
17．1．3　字符串类型　359
17．2　表的创建语法　360
17．3　使用INSERT命令　360
进一步学习INSERT语句　361
17．4　使用SELECT命令　362
17．4．1　排序SELECT结果　363
17．4．2　限制结果　364
17．5　在查询中使用WHERE　365
17．5．1　在WHERE子句中使用
操作符　366
17．5．2　使用LIKE比较字符串　366
17．6　从多个表中查询　367
17．6．1　使用JOIN　369
17．6．2　使用子查询　371
17．7　使用UPDATE命令来修改记录　372
17．7．1　条件式UPDATE　374
17．7．2　在UPDATE中使用已有的
列值　375
17．8　使用REPLACE命令　375
17．9　使用DELETE命令　376
条件式DELETE　377
17．10　MySQL中常用的字符串函数　378
17．10．1　长度和连接函数　379
17．10．2　截断和填充函数　381
17．10．3　定位和位置函数　383
17．10．4　子字符串函数　383
17．10．5　字符串修改函数　384
17．11　在MySQL中使用日期和时间
函数　386
17．11．1　操作日期　386
17．11．2　操作月份和年份　388
17．11．3　操作周　390
17．11．4　操作小时、分钟和秒　391
17．11．5　使用MySQL格式化日期和
时间　392
17．11．6　使用MySQL执行日期
算术　394
17．11．7　特殊函数和转换函数　396
17．12　小结　398
17．13　问与答　399
17．14　测验　400
17．14．1　问题　400
17．14．2　解答　400
17．14．3　练习　401
第18章　使用PHP和MySQL交互　402
18．1　MySQL函数和MySQLi函数　402
18．2　使用PHP连接MySQL　402
18．2．1　进行连接　403
18．2．2　执行查询　404
18．2．3　获取错误消息　405
18．3　使用MySQL数据　406
18．3．1　避免SQL注入　406
18．3．2　使用PHP插入数据　407
18．3．3　使用PHP获取数据　409
18．3．4　PHP中其他的MySQL函数　411
18．4　小结　411
18．5　问与答　412
18．6　测验　412
18．6．1　问题　412
18．6．2　解答　412
18．6．3　练习　412
第5部分：应用开发基础
第19章　创建一个简单的讨论论坛　415
19．1　设计数据库表　415
19．2　为共同函数创建一个包含文件　416
19．3　创建输入表单和脚本　417
19．4　显示主题列表　420
19．5　显示一个主题中的帖子　423
19．6　向主题添加帖子　426
19．7　用JavaScript修改论坛的显示　429
19．8　小结　431
19．9　问与答　431
19．10　测验　431
19．10．1　问题　431
19．10．2　解答　431
19．10．3　练习　432
第20章　创建一个在线商店　433
20．1　规划和创建数据库表　433
20．1．1　向store_categories表插入
记录　435
20．1．2　向store_items表插入记录　435
20．1．3　向store_item_size表中插入
记录　436
20．1．4　向store_item_color表插入
记录　436
20．2　显示商品分类　436
20．3　显示商品　439
20．4　对在线商店前端使用
JavaScript　442
20．5　小结　445
20．6　问与答　445
20．7　测验　446
20．7．1　问题　446
20．7．2　解答　446
20．7．3　练习　446
第21章　创建一个简单的日历　447
21．1　构建一个简单的显示日历　447
21．1．1　检查用户输入　447
21．1．2　构建HTML表单　448
21．1．3　创建日历表格　450
21．1．4　向日历添加事件　453
21．2　用JavaScript创建一个日历库　461
21．2．1　创建日历的HTML　461
21．2．2　构建接受用户输入的表单　462
21．2．3　创建日历　463
21．3　小结　467
21．4　问与答　467
21．5　测验　467
21．5．1　问题　467
21．5．2　解答　467
21．5．3　练习　467
第22章　管理Web应用程序　468
22．1　理解Web应用开发中的一些最佳
实践　468
22．1．1　将逻辑和内容分离开　469
22．1．2　原型　470
22．1．3　测试　470
22．2　编写可维护的代码　471
22．2．1　确定命名惯例　471
22．2．2　用注释作为代码文档　472
22．2．3　清晰地缩进代码　473
22．2．4　分解代码　474
22．3　在工作中实现版本控制　474
使用版本控制系统　475
22．4　理解代码框架的价值和用法　476
22．4．1　使用JavaScript框架　477
22．4．2　使用PHP框架　478
22．5　小结　479
22．6　问与答　479
22．7　测验　480
22．7．1　问题　480
22．7．2　解答　480
22．7．3　练习　480
附录A　使用XAMPP的安装入门指南　482
A．1　使用第三方的安装包　482
A．2　Linux/UNIX下的安装　483
A．3　在Windows上安装XAMPP　484
A．4　在Mac OS X上安装XAMPP　487
A．5　让XAMPP更安全　490
A．6　故障排除　490
附录B　安装和配置MySQL　492
B．1　MySQL的当前版本和未来版本　492
B．2　如何获取MySQL　493
B．3　在Linux/UNIX上安装MySQL　493
B．4　在Mac OS X上安装MySQL　495
B．5　在Windows上安装MySQL　496
B．6　安装故障排除　499
B．7　基本安全规则　500
B．7．1　启动MySQL　500
B．7．2　增强MySQL连接的安全　501
B．8　MySQL权限系统简介　501
B．8．1　两步身份验证过程　502
B．8．2　添加用户　503
B．8．3　移除权限　505
附录C　安装和配置Apache　506
C．1　Apache的当前版本　506
C．2　选择合适的安装方法　507
C．2．1　从源代码安装　507
C．2．2　安装一个二进制代码版本　507
C．3　在Linux/UNIX上安装Apache　507
C．3．1　下载Apache源代码　508
C．3．2　解压源代码　508
C．3．3　准备编译Apache　508
C．3．4　编译和安装Apache　509
C．4　在Mac OS X上安装Apache　510
C．5　在Windows上安装Apache　510
C．6　Apache配置文件结构　512
C．6．1　指令　512
C．6．2　容器　513
C．6．3　条件评估　513
C．6．4　ServerRoot指令　514
C．6．5　per-directory配置文件　514
C．7　Apache日志文件　515
C．7．1　access_log文件　515
C．7．2　error_log文件　516
C．7．3　其他文件　516
C．8　Apache相关命令　516
C．8．1　Apache服务器二进制程序　516
C．8．2　Apache控制脚本　517
C．9　第一次启动Apache　517
C．9．1　检查你的配置文件　518
C．9．2　启动Apache　518
C．10　故障排除　519
C．10．1　未安装Visual C库
（在Windows上）　519
C．10．2　已经存在一个Web服务器　519
C．10．3　不允许绑定到端口　519
C．10．4　拒绝访问　520
C．10．5　错误组设置　520
附录D　安装和配置PHP　521
D．1　PHP的当前版本和未来版本　521
D．2　在带有Apache的Linux/UNIX上
编译PHP　521
D．2．1　额外的Linux/UNIX配置
选项　524
D．2．2　在Linux/UNIX上集成PHP和
Apache　524
D．3　在Mac OS X上安装PHP　525
D．4　在Windows上安装PHP　525
在Windows上集成PHP和
Apache　526
D．5　php．ini基础　527
D．6　测试安装　527
D．7　获取安装帮助　528
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>PHP、MySQL和JavaScript入门经典(第6版)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript与jQuery网页前端开发与设计/Web前端开发技术丛书
本书从零开始讲解JavaScript与jQuery技术，全书以项目为驱动，循序渐进、案例丰富。全书共分13章，主要内容包括4个部分。第一部分是概述篇，即第1章，内容主要有JavaScript与jQuery的简介、发展史和特点，以及开发工具的选择。第二部分是JavaScript技术篇，包括第2～5章的内容。这4章循序渐进地介绍了JavaScript入门、JavaScript数据类型与运算符、JavaScript语句与函数、JavaScript DOM和BOM。第三部分是jQuery技术篇，包括第6～12章的内容。
目录
第一部分 概 述 篇
第1章 绪论 3
1.1 JavaScript概述 3
1.1.1 JavaScript简介 3
1.1.2 JavaScript起源 3
1.1.3 JavaScript和Java 3
1.1.4 JavaScript的特点 4
1.2 jQuery概述 4
1.2.1 jQuery简介 4
1.2.2 jQuery的发展史 4
1.2.3 jQuery的特点 5
1.2.4 jQuery的版本比较 5
1.3 Web开发工具 6
1.3.1 Adobe Dreamweaver 6
1.3.2 Sublime Text 7
1.3.3 Notepad++ 7
1.3.4 EditPlus 7
1.4 本章小结 8
习题1 9
第二部分 JavaScript技术篇
第2章 JavaScript入门 13
2.1 JavaScript的实现 13
2.2 JavaScript的使用 13
2.2.1 内部JavaScript 14
2.2.2 外部JavaScript 15
2.3 JavaScript的语法 16
2.3.1 JavaScript中的大小写 16
2.3.2 JavaScript中的分号 16
2.3.3 JavaScript中的注释 16
2.3.4 JavaScript中的代码块 17
2.4 JavaScript变量 17
2.4.1 变量的声明 17
2.4.2 变量的命名规范 19
2.4.3 JavaScript关键字和保留字 20
2.5 本章小结 20
习题2 20
第3章 JavaScript数据类型与运算符 22
3.1 JavaScript基本数据类型 22
3.1.1 Undefined类型 22
3.1.2 Null类型 24
3.1.3 String类型 25
3.1.4 Number类型 36
3.1.5 Boolean类型 43
3.2 JavaScript对象类型 44
3.2.1 本地对象 44
3.2.2 内置对象 54
3.2.3 宿主对象 57
3.3 JavaScript类型转换 57
3.3.1 转换成字符串 57
3.3.2 转换成数字 59
3.3.3 强制类型转换 63
3.4 JavaScript运算符 64
3.4.1 赋值运算符 64
3.4.2 算术运算符 65
3.4.3 逻辑运算符 66
3.4.4 关系运算符 70
3.4.5 相等性运算符 72
3.4.6 条件运算符 74
3.5 本章小结 74
习题3 74
第4章 JavaScript语句与函数 76
4.1 JavaScript条件语句 76
4.1.1 几种if语句 76
4.1.2 switch语句 78
4.2 JavaScript循环语句 80
4.2.1 for循环 80
4.2.2 for-in循环 82
4.2.3 while循环 83
4.2.4 do-while循环 85
4.2.5 break和continue 86
4.3 JavaScript函数 88
4.3.1 函数的基本结构 88
4.3.2 函数的调用 88
4.3.3 函数的返回值 89
4.4 本章小结 91
习题4 91
第5章 JavaScript DOM和BOM 92
5.1 文档对象模型 92
5.1.1 查找HTML元素 92
5.1.2 DOM HTML 95
5.1.3 DOM CSS 98
5.1.4 DOM事件 100
5.1.5 DOM节点 102
5.2 浏览器对象模型 106
5.2.1 Window对象 106
5.2.2 Screen对象 107
5.2.3 Location对象 108
5.2.4 History对象 109
5.2.5 Navigator对象 110
5.3 本章小结 112
习题5 112
第三部分 jQuery技术篇
第6章 jQuery入门 115
6.1 jQuery的下载和使用 115
6.1.1 jQuery的下载 115
6.1.2 jQuery的使用 116
6.2 jQuery的语法 116
6.2.1 基础语法结构 116
6.2.2 文档就绪函数 116
6.2.3 jQuery名称冲突 117
6.3 本章小结 118
习题6 119
第7章 jQuery选择器与过滤器 120
7.1 jQuery选择器 120
7.1.1 基础选择器 120
7.1.2 属性选择器 128
7.1.3 表单选择器 129
7.1.4 层次选择器 132
7.1.5 jQuery CSS选择器 138
7.2 jQuery过滤器 140
7.2.1 基础过滤器 140
7.2.2 子元素过滤器 147
7.2.3 内容过滤器 155
7.2.4 可见性过滤器 161
7.3 本章小结 165
习题7 165
第8章 jQuery事件 166
8.1 jQuery事件概述 166
8.1.1 事件的含义 166
8.1.2 jQuery事件的语法格式 166
8.2 常用jQuery事件 167
8.2.1 文档/窗口事件 167
8.2.2 键盘事件 172
8.2.3 鼠标事件 175
8.2.4 表单事件 186
8.3 jQuery事件的绑定与解除 193
8.3.1 jQuery事件的绑定 193
8.3.2 jQuery事件的解除 197
8.3.3 jQuery临时事件 201
8.4 本章小结 202
习题8 203
第9章 jQuery特效 204
9.1 jQuery隐藏和显示 204
9.1.1 jQuery hide() 204
9.1.2 jQuery show() 205
9.1.3 jQuery toggle() 207
9.2 jQuery淡入和淡出 208
9.2.1 jQuery fadeIn() 208
9.2.2 jQuery fadeOut() 209
9.2.3 jQuery fadeToggle() 211
9.2.4 jQuery fadeTo() 213
9.3 jQuery滑动 216
9.3.1 jQuery slideDown() 216
9.3.2 jQuery slideUp() 216
9.3.3 jQuery slideToggle() 219
9.4 jQuery动画 220
9.4.1 改变元素的基本属性 221
9.4.2 改变元素的位置 223
9.4.3 动画队列 225
9.5 jQuery方法链接 227
9.6 jQuery停止动画 229
9.7 本章小结 232
习题9 232
第10章 jQuery HTML DOM 233
10.1 jQuery获取和设置 233
10.1.1 jQuery text() 233
10.1.2 jQuery html() 236
10.1.3 jQuery val() 238
10.1.4 jQuery attr() 239
10.1.5 jQuery css() 241
10.2 jQuery添加 244
10.2.1 jQuery append()和prepend() 244
10.2.2 jQuery after()和before() 248
10.3 jQuery删除 251
10.3.1 jQuery remove() 251
10.3.2 jQuery empty() 253
10.3.3 jQuery removeAttr() 255
10.4 jQuery类属性 256
10.4.1 jQuery addClass() 257
10.4.2 jQuery removeClass() 257
10.4.3 jQuery toggleClass() 259
10.5 jQuery尺寸 261
10.6 本章小结 264
习题10 264
第11章 jQuery遍历 265
11.1 HTML家族树简介 265
11.2 jQuery后代遍历 266
11.2.1 jQuery children() 266
11.2.2 jQuery find() 268
11.3 jQuery同胞遍历 270
11.3.1 jQuery siblings() 270
11.3.2 jQuery next()、nextAll()和nextUntil() 272
11.3.3 jQuery prev()、prevAll()和prevUntil() 276
11.4 jQuery祖先遍历 280
11.4.1 jQuery parent() 280
11.4.2 jQuery parents() 282
11.4.3 jQuery parentsUntil() 284
11.5 本章小结 286
习题11 286
第12章 jQuery AJAX技术 288
12.1 jQuery AJAX简介 288
12.1.1 什么是AJAX 288
12.1.2 jQuery AJAX 288
12.2 jQuery AJAX常用方法 289
12.2.1 jQuery AJAX load()方法 289
12.2.2 jQuery AJAX get()方法 293
12.2.3 jQuery AJAX post()方法 295
12.2.4 jQuery AJAX ajax()方法 298
12.2.5 jQuery AJAX更多方法介绍 302
12.3 jQuery AJAX事件 303
12.4 本章小结 304
习题12 305
第四部分 综合篇
第13章 综合应用设计实例 309
13.1 jQuery图片轮播特效的设计与实现 309
13.1.1 界面设计 309
13.1.2 图片轮播特效的实现 316
13.1.3 完整代码展示 318
13.2 jQuery手动切换图片的设计与实现 322
13.2.1 界面设计 322
13.2.2 图片切换特效的实现 325
13.2.3 完整代码展示 327
13.3 jQuery AJAX天气预报查询的设计与实现 329
13.3.1 准备工作 330
13.3.2 界面设计 334
13.3.3 天气预报查询的实现 342
13.3.4 完整代码展示 345
本章小结 350
附录 课后习题参考答案 351
参考文献 362
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript与jQuery网页前端开发与设计/Web前端开发技术丛书
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript函数式编程指南
第　一部分 函数式思想
第　1章 走近函数式　3
1．1　函数式编程有用吗？　4
1．2　什么是函数式编程？　5
1．2．1　函数式编程是声明式
编程　7
1．2．2　副作用带来的问题和
纯函数　8
1．2．3　引用透明和可置换性　12
1．2．4　存储不可变数据　13
1．3　函数式编程的优点　14
1．3．1　鼓励复杂任务的分解　15
1．3．2　使用流式链来处理数据　16
1．3．3　复杂异步应用中的响应　18
1．4　总结　19
第　2章 高阶JavaScript　21
2．1　为什么要使用
JavaScript？　22
2．2　函数式与面向对象的程序设计　22
2．2．1　管理JavaScript对象的
状态　28
2．2．2　将对象视为数值　29
2．2．3　深冻结可变部分　31
2．2．4　使用Lenses定位并修改对象图　33
2．3　函数　34
2．3．1　一等函数　35
2．3．2　高阶函数　36
2．3．3　函数调用的类型　38
2．3．4　函数方法　39
2．4　闭包和作用域　40
2．4．1　全局作用域　42
2．4．2　函数作用域　43
2．4．3　伪块作用域　44
2．4．4　闭包的实际应用　45
2．5　总结　48
第二部分　函数式基础
第3章　轻数据结构，重操作　51
3．1　理解程序的控制流　52
3．2　链接方法　53
3．3　函数链　54
3．3．1　了解 lambda 表达式　54
3．3．2　用_．map做数据变换　56
3．3．3　用_．reduce 收集结果　57
3．3．4　用_．filter 删除不需要的
元素　61
3．4　代码推理　62
3．4．1　声明式惰性计算函数链　63
3．4．2　类SQL的数据：函数即
数据　66
3．5　学会递归地思考　68
3．5．1　什么是递归？　68
3．5．2　学会递归地思考　68
3．5．3　递归定义的数据结构　70
3．6　总结　73
第4章　模块化且可重用的
代码　75
4．1　方法链与函数管道的
比较　76
4．1．1　方法链接　77
4．1．2　函数的管道化　78
4．2　管道函数的兼容条件　78
4．2．1　函数的类型兼容条件　78
4．2．2　函数与元数：元组的
应用　79
4．3　柯里化的函数求值　82
4．3．1　仿真函数工厂　85
4．3．2　创建可重用的函数模板　86
4．4　部分应用和函数绑定　87
4．4．1　核心语言扩展　89
4．4．2　延迟函数绑定　89
4．5　组合函数管道　90
4．5．1　HTML部件的组合　91
4．5．2　函数组合：描述与求值
分离　92
4．5．3　函数式库的组合　95
4．5．4　应对纯的代码和不纯的
代码　96
4．5．5　point-free编程　98
4．6　使用函数组合子来管理
程序的控制流　99
4．6．1　identity（I-combinator）　99
4．6．2　tap（K-组合子）　99
4．6．3　alt（OR-组合子）　100
4．6．4　seq（S-组合子）　101
4．6．5　fork（join）组合子　101
4．7　总结　102
第5章　针对复杂应用的设计
模式　103
5．1　命令式错误处理的
不足　104
5．1．1　用try-catch处理错误　104
5．1．2　函数式程序不应抛出
异常　105
5．1．3　空值（null）检查问题　106
5．2　一种更好的解决方案
——Functor　106
5．2．1　包裹不安全的值　107
5．2．2　Functor定义　108
5．3　使用Monad函数式地处理错误　111
5．3．1　Monad：从控制流到
数据流　111
5．3．2　使用Maybe Monad和Either Monad来处理异常　115
5．3．3　使用IO Monad与外部资源交互　123
5．4　Monadic链式调用及
组合　126
5．5　总结　131
第三部分　函数式技能提升
第6章　坚不可摧的代码　135
6．1　函数式编程对单元测试的影响　136
6．2　测试命令式代码的
困难　137
6．2．1　难以识别和分解任务　137
6．2．2　对共享资源的依赖会导致结果不一致　138
6．2．3　按预定义顺序执行　139
6．3　测试函数式代码　140
6．3．1　把函数当作黑盒子　140
6．3．2　专注于业务逻辑，而不是控制流　141
6．3．3　使用Monadic式从不纯的代码中分离出纯函数　142
6．3．4　mock外部依赖　144
6．4　通过属性测试制定规格
说明　146
6．5　通过代码覆盖率衡量有
效性　152
6．5．1　衡量函数式代码测试的
有效性　152
6．5．2　衡量函数式代码的
复杂性　155
6．6　总结　158
第7章　函数式优化　159
7．1　函数执行机制　160
7．1．1　柯里化与函数上下文
堆栈　161
7．1．2　递归的弱点　164
7．2　使用惰性求值推迟
执行　165
7．2．1　使用函数式组合子避免重复计算　167
7．2．2　利用shortcut fusion　167
7．3　实现需要时调用的
策略　168
7．3．1　理解记忆化　169
7．3．2　记忆化计算密集型
函数　169
7．3．3　有效利用柯里化与
记忆化　172
7．3．4　通过分解来实现更大程度
的记忆化　173
7．3．5　记忆化递归调用　173
7．4　递归和尾递归优化　175
7．5　总结　178
第8章　管理异步事件以及
数据　181
8．1　异步代码的挑战　182
8．1．1　在函数之间创建时间依赖
关系　182
8．1．2　陷入回调金字塔　183
8．1．3　使用持续传递式样　186
8．2　一等公民Promise　188
8．2．1　链接将来的方法　190
8．2．2　组合同步和异步行为　195
8．3　生成惰性数据　197
8．3．1　生成器与递归　199
8．3．2　迭代器协议　200
8．4　使用RxJS进行函数式和响应式编程　202
8．4．1　数据作为Observable
序列　202
8．4．2　函数式编程与响应式
编程　203
8．4．3　RxJS和Promise　205
8．5　总结　206
附录　本书中使用的
JavaScript库　207
函数式JavaScript库　207
使用的其他库　208
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript函数式编程指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5炼成记——Web前端开发（HTML5+CSS3+JavaScript）12堂必修课
目录
Chapter 01一起来学HTML 5
Warming Up	 HTML 5能做什么
Section 01	 更强大的元素
01 一起来画图
02 一个实用的表单
03 路痴的救星
04 让图片可以拖拽
Section 02	 更精美的样式
01 漂亮的文字
02 炫酷的图片
03 设置动画效果
04 自适应网页
Section 03	 更炫酷的特效
01 banner是怎样制作的
02 消息的提示框
Test 课后作业
Chapter 02网页绘图如此有趣
Warming Up	 强大的canvas
Section 01	 潜心修行canvas
01 圆形表盘
Try it 制作圆形表盘
02 分针、时针和秒针
Try it 制作表针
03 时间刻度线
Try it 制作时间刻度线
04 看看几点了
Try it 计时开始
Section 02	 图像好看的样式
01 让图片更加高级
Try it 修饰图片
02 观看图片的局部
Try it 图片的局部显示
03 给图片添加“蒙版”
Try it 微信聊天框效果
04 图片的立体显示
Try it 图片的阴影效果
Try it 文字、边框、图片的阴影效果
Section 03	 图形的各种效果
01 螺旋形旋转
Try it 螺旋旋转图形
02 两种渐变设置
Try it 图形的渐变设置
03 当图形重叠时
Try it 组合图形的绘制
Test 课后作业
Chapter 03生成漂亮的表单
Warming Up	 怎样让表单变漂亮
Section 01	 一起制作表单
01 改变传统登录方式
Try it 制作一个登录表单
02 注册简洁大方型表单
Try it 制作简洁的注册型表单
Section 02	 多姿多彩的表单
01 年月日的出现
Warming Up	 怎样让表单变漂亮
Section 01	 一起制作表单
01 改变传统登录方式
Try it 制作一个登录表单
02 注册简洁大方型表单
Try it 制作简洁的注册型表单
Section 02	 多姿多彩的表单
01 年月日的出现
Chapter 04播放器的打开姿势
Warming Up	 网页播放器
Section 01	 看视频听音乐之前
01 了解浏览器支持情况
02 测试浏览器
Try it 亲测浏览器是否支持
Try it 嵌入插件作为备选解决不支持
Section 02	 享受视听盛宴
01 沉浸在音乐的海洋
Try it 制作音乐播放器
02 打开视频的正确方式
Try it 制作视频播放器
03 了解播放器中的方法
Test 课后作业
Chapter 05定位自己的位置
Warming Up	 一起学习定位知识
Section 01	 有导航不迷路
01 学习经纬度知识
02 IP地址定位数据
03 GPS地理定位
Section 02	 开始定位
01 获取地理位置
Try it 获取当前的地理位置
02 浏览器的支持情况
Try it 测试浏览器支持情况
Section 03	 找到自己
01 保护用户的隐私
02 调用地图接口
Try it 调用谷歌地图
03 显示你的位置
Try it 定位自己的位置
Test 课后作业
Chapter 06 实用的上传方式
Warming Up	 拖拽上传的应用
Section 01	 调整图片位置
01 实现拖放的步骤
02 实现拖拽的方法
Section 02	 拖放操作
01 拖放应用
Try it 最简单的拖放操作
02 拖放列表
Try it 制作拖放列表
03 拖拽上传文件
Try it 附件的拖拽上传
Section 03	 离线知识
01 支持离线行为
Try it 演示网页是否在线
02 检测浏览器支持与否
Try it 检测浏览器是否支持
03 Web Workers的简单应用
Test 课后作业
Chapter 07开启样式的大门
Warming Up	 让网页多姿多彩
Section 01	 给样式作修饰
01 选择元素进行样式设置
Try it 需要重点标注的句子
02 设置一类元素的样式
Try it 给所有元素设置相同样式
Try it 使用什么方法能制作出相同的效
03 属性也可以设置样式
Try it 设置其中一张图片的属性
Section 02	 选择性地修饰
01 新版本与旧版本的比较
02 让设计更高级
Try it 单击链接发生颜色变化
Try it 设置多彩的输入框
Try it 单击时按钮颜色发生变化
03 结构性伪类的用法
Try it 变化的字体颜色
04 伪类选择器
Try it 给第一句诗添加背景颜色
Try it 设置首字母的大小写
Try it 运用其他方法做出图片效果
Test 课后作业
Chapter 08网页中的“动画片”
Warming Up	 怎样让元素动起来
Section 01	 过渡知识
01 与用户的互动
Try it 让元素不再呆板
02 变化出更多样式
Try it 多种变化效果
03 模拟DOCK的缩放特效
Try it 制作一个有导航的电脑桌面
Section 02	 实现动画
01 动起来的关键
Try it 一起荡秋千
02 制作旋转的圈圈
Try it 制作loading图标
Try it 制作loading进度条
03 使用放大镜查看
Try it 使用放大镜查看图片
Test 课后作业
Chapter 09让浏览更轻松
Warming Up	 三站合一
Section 01	 自适应效果
01 多媒体查询能做什么
02 窗口大小控制颜色
Try it 网页背景随浏览器大小改变而改变
03 自适应导航栏
Try it 制作流行的网页导航栏
Section 02	 与用户的互动
01 制作一张电子报纸
Try it 多列布局的用法
02 Photoshop中的滤镜效果
Try it ps一张美女图片
03 修饰图片
Try it 修饰图片的轮廓
04 开关按钮样式
Try it 用最简单的方法制作按钮
Test 课后作业
Chapter 10重要的网页元素
Warming Up	 变花样的文字和边框
Section 01	 文字让网页更突出
01 文字的阴影效果
Try it 让文字显得立体
Try it 用阴影增加前景色与背景色的对比
02 更多的文字效果
Try it 制作更多文字效果
03 文本溢出的设置
Try it 制作文本的溢出效果
04 英文单词的换行
Try it 长单词的换行
Try it 拆分单词
Section 02	 颜色让网页更好看
01 多变的颜色
Try it 制作颜色渐变
Try it 制作一颗闪闪的星星
02 色彩的模式
Try it 制作一个HsL颜色模式表
03 扩展的色彩模式
Try it 制作颜色的不透明度
Section 03 动作让网页更高级
01 图片的3D旋转
Try it 制作图片的3D旋转
02 高级图标
Try it 制作扁平化的图标
Test 课后作业
Chapter11特效是用什么做的
Warming Up	 Javascript怎样嵌入
Section 01	 流行的网页样式
01 JavaScript的作用
02 JavaScript的特点
03 JavaScript的应用
Try it 单击按钮出现文字
Section 02	 炫酷特效的前提
01 掌握一些类型
02 了解一些语句
Try it 单击按钮出现问候语
Try it 用时间点来设置问候语
Try it 让代码循环计算5次
Try it 一直循环代码
03 应用哪些事件
04 事件的句柄
05 怎样处理事件
Test 课后作业
Chapter12炫酷效果应用方向
Warming Up	 怎样制作滚动banner
Section 01	 这个函数不一样
01 函数定义
Try it 单击按钮显示“你好”
Try it 单击按钮出现欢迎词
Try it 制作一个计算器
02 函数参数
Try it 给参数设置默认值
Try it 设置查找值的函数
03 函数调用
Section 02	 表单中的应用
01 按钮对象
Try it 设置表单的按钮对象
02 复选框对象
Try it 可以全选的复选框
03 列表框对象
Try it 设置列表框对象
04 增加列表框
Try it 与用户的互动效果
05 表单中的时间
Try it 调用时间
Section 03 网页中的应用
01 轮播图效果
Try it 制作一个网页的轮播图
02 字体闪烁效果
Try it 制作文字的闪烁效果
03 鼠标滑过效果
Try it 制作鼠标滑过图片的震动效果
Section 04	 网页中的特效
01 显示网页停留时间
Try it 显示所在网页停留的时间
02 制作定时关闭窗口
Try it 让窗口在设定好的时间自动关闭
Test 课后作业
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5炼成记——Web前端开发（HTML5+CSS3+JavaScript）12堂必修课
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Nginx完全开发指南：使用C、C++、JavaScript和Lua
第0章  导读	1
0.1  关于本书	1
0.2  读者对象	3
0.3  读者要求	4
0.4  运行环境	5
0.5  本书的结构	5
0.6  如何阅读本书	6
0.7  本书的源码	7
第1章  Nginx入门	8
1.1  关于Nginx	8
1.1.1  历史	9
1.1.2  特点	9
1.1.3  进程模型	10
1.1.4  版本	12
1.2  安装Nginx	12
1.2.1  准备工作	13
1.2.2  快速安装	13
1.2.3  运行命令	14
1.2.4  验证安装	15
1.2.5  定制安装	16
1.3  配置Nginx	18
1.3.1  语法格式	19
1.3.2  进程管理	20
1.3.3  动态模块	22
1.3.4  运行日志	22
1.3.5  事件机制	22
1.4  HTTP服务	23
1.4.1  基本配置	24
1.4.3  location配置	25
1.4.4  file配置	26
1.5  TCP/UDP服务	27
1.6  反向代理	28
1.6.1  上游集群	28
1.6.2  负载均衡	29
1.6.3  代理转发	30
1.7  变量	30
1.8  总结	32
第2章  Nginx开发准备	33
2.1  源码结构	33
2.2  源码特点	34
2.2.1  代码风格	34
2.2.2  代码优化	35
2.2.3  面向对象思想	35
2.3  头文件	36
2.4  总结	36
第3章  Nginx基础设施	37
3.1  常数	37
3.1.1  环境信息	37
3.1.2  版本信息	38
3.1.3  错误码	38
3.2  整数类型	39
3.2.1  标准整数类型	39
3.2.2  自用整数类型	40
3.2.3  无效值	40
3.3  内存池	42
3.3.1  结构定义	42
3.3.2  操作函数	43
3.3.3  用法示例	44
3.4  字符串	44
3.4.1  结构定义	44
3.4.2  操作函数	45
3.4.3  用法示例	48
3.5  时间	49
3.5.1  结构定义	49
3.5.2  操作函数	49
3.5.3  用法示例	50
3.6  日期	50
3.6.1  结构定义	50
3.6.2  操作函数	51
3.6.3  用法示例	52
3.7  运行日志	52
3.7.1  结构定义	52
3.7.2  操作函数	53
3.7.3  用法示例	54
3.8  摘要算法	54
3.8.1  Times33	55
3.8.2  CRC	55
3.8.3  MurmurHash	56
3.8.4  MD5	57
3.8.5  SHA-1	57
3.9  数据编码	58
3.9.1  Base64	58
3.9.2  HTML/JSON	59
3.10  总结	60
第4章  Nginx高级数据结构	61
4.1  动态数组	61
4.1.1  结构定义	62
4.1.2  操作函数	63
4.1.3  用法示例	64
4.2  单向链表	65
4.2.1  结构定义	65
4.2.2  操作函数	66
4.2.3  用法示例	66
4.3  双端队列	68
4.3.1  结构定义	68
4.3.2  操作函数	69
4.3.3  用法示例	71
4.4  红黑树	72
4.4.1  结构定义	73
4.4.2  操作函数	75
4.4.3  用法示例	76
4.5  缓冲区	78
4.5.1  结构定义	78
4.5.2  操作函数	80
4.5.3  用法示例	81
4.6  数据块链	82
4.6.1  结构定义	82
4.6.2  操作函数	83
4.6.3  用法示例	83
4.7  总结	84
第5章  Nginx开发概述	85
5.1  开发示例	85
5.1.1  模块设计	85
5.1.2  配置解析	86
5.1.3  处理函数	88
5.1.4  模块集成	90
5.1.5  编译脚本	91
5.1.6  测试验证	92
5.2  开发流程	92
5.2.1  设计	93
5.2.2  开发	93
5.2.3  编译	94
5.2.4  测试验证	94
5.2.5  调优	94
5.2.6  流程图	95
5.3  编译脚本	95
5.3.1  运行机制	96
5.3.2  脚本变量	96
5.3.3  添加模块	97
5.3.4  脚本格式	97
5.3.5  旧式脚本	98
5.4  总结	99
第6章  Nginx模块体系	100
6.1  模块架构	100
6.1.1  结构定义	100
6.1.2  模块的签名	102
6.1.3  模块的种类	103
6.1.4  模块的函数指针表	104
6.1.5  模块的类图	105
6.1.6  模块的组织形式	106
6.1.7  模块的静态加载	108
6.1.8  模块的动态加载	110
6.2  配置解析	113
6.2.1  结构定义	113
6.2.2  配置解析的基本流程	116
6.2.3  存储模型	118
6.2.4  访问配置数据	122
6.2.5  配置数据的位置	123
6.2.6  配置数据的解析	124
6.2.7  配置数据的合并	126
6.2.8  配置指令的类型	127
6.3  源码分析	128
6.3.1  ngx_core_module	128
6.3.2  ngx_errlog_module	130
6.4  总结	132
第7章  Nginx功能框架	134
7.1  框架简介	134
7.1.1  模块分类	134
7.1.2  处理流程	135
7.1.3  请求的处理阶段	137
7.1.4  请求结构体	138
7.1.5  请求的环境数据	140
7.2  处理引擎	141
7.2.1  函数原型	141
7.2.2  处理函数的存储方式	141
7.2.3  内容处理函数	142
7.2.4  引擎的数据结构	143
7.2.5  引擎的初始化	144
7.2.6  引擎的运行机制	145
7.2.7  日志阶段的处理	148
7.3  过滤引擎	148
7.3.1  函数原型	148
7.3.2  过滤函数链表	149
7.3.3  过滤函数的顺序	150
7.3.4  过滤链表的运行机制	152
7.3.5  请求体过滤	153
7.4  源码分析	153
7.4.1  ngx_http_static_module	154
7.4.2  ngx_http_not_modified_filter_module	155
7.5  总结	156
第8章  Nginx请求处理	158
8.1  状态码	158
8.2  请求结构体	159
8.3  请求行	160
8.3.1  请求方法	160
8.3.2  协议版本号	161
8.3.3  资源标识符	161
8.4  请求头	162
8.5  请求体	163
8.5.1  结构定义	163
8.5.2  操作函数	164
8.6  响应头	164
8.6.1  结构定义	164
8.6.2  操作函数	165
8.7  响应体	166
8.8  源码分析	166
8.8.1  ngx_http_static_module	166
8.8.2  ngx_http_not_modified_filter_module	168
8.9  开发示例：content handler	169
8.9.1  模块设计	169
8.9.2  配置数据	169
8.9.3  处理函数	170
8.9.4  注册函数	171
8.9.5  模块集成	172
8.9.6  编译脚本	173
8.9.7  测试验证	173
8.10  开发示例：filter	173
8.10.1  模块设计	173
8.10.2  配置数据	174
8.10.3  环境数据	174
8.10.4  注册过滤函数	175
8.10.5  过滤响应头	175
8.10.6  过滤响应体	176
8.10.7  模块集成	178
8.10.8  编译脚本	179
8.10.9  测试验证	179
8.11  总结	180
第9章  Nginx请求转发	181
9.1  框架简介	181
9.1.1  工作原理	182
9.1.2  请求结构体	183
9.1.3  上游结构体	184
9.1.4  上游配置参数	185
9.2  请求转发	186
9.2.1  回调函数	186
9.2.2  初始化	188
9.2.3  设置参数	189
9.2.4  启动连接	190
9.2.5  处理响应头	190
9.2.6  处理响应体	191
9.3  负载均衡	192
9.3.1  结构定义	192
9.3.2  初始化模块入口	196
9.3.3  初始化地址列表	197
9.3.4  初始化算法	199
9.3.5  执行算法	200
9.4  源码分析	200
9.4.1  ngx_http_memcached_module	201
9.4.2  ngx_http_upstream_ip_hash_module	203
9.5  开发示例：upstream	206
9.5.1  模块设计	206
9.5.2  配置数据	206
9.5.3  上行数据	208
9.5.4  下行数据	208
9.5.5  启动转发	209
9.5.6  注册函数	210
9.5.7  模块集成	210
9.5.8  编译脚本	211
9.5.9  测试验证	212
9.6  开发示例：balance	212
9.6.1  模块设计	212
9.6.2  配置数据	212
9.6.3  算法数据结构	213
9.6.4  模块入口	213
9.6.5  算法实现	214
9.6.6  模块集成	215
9.6.7  编译脚本	216
9.6.8  测试验证	216
9.7  总结	216
第10章  Nginx子请求	218
10.1  框架简介	218
10.1.1  工作原理	219
10.1.2  请求结构体	220
10.1.3  回调函数	221
10.1.4  待处理请求链表	223
10.1.5  子请求存储结构	223
10.2  运行机制	223
10.2.1  创建子请求	224
10.2.2  处理引擎	228
10.2.3  数据整理	229
10.3  开发示例	230
10.3.1  模块设计	231
10.3.2  配置数据	231
10.3.3  环境数据	231
10.3.4  回调函数	231
10.3.5  处理函数	232
10.3.6  注册函数	233
10.3.7  测试验证	234
10.4  总结	234
第11章  Nginx变量	236
11.1  结构定义	236
11.1.1  变量	237
11.1.2  复杂变量	238
11.1.3  变量的存储	239
11.1.4  请求结构体	239
11.2  操作变量	240
11.2.1  添加变量	240
11.2.2  获取变量	241
11.2.3  修改变量	242
11.2.4  编译复杂变量	242
11.2.5  获取复杂变量	242
11.3  开发示例：变量	243
11.3.1  模块设计	243
11.3.2  定义变量	243
11.3.3  添加变量	244
11.3.4  获取变量	244
11.3.5  测试验证	245
11.4  开发示例：复杂变量	246
11.4.1  模块设计	246
11.4.2  定义复杂变量	246
11.4.3  编译复杂变量	246
11.4.4  获取复杂变量	247
11.4.5  测试验证	247
11.5  总结	247
第12章  Nginx内存管理机制	249
12.1  基本系统调用	250
12.1.1  malloc	250
12.1.2  posix_memalign	251
12.1.3  free	251
12.2  块式内存池	252
12.2.1  结构定义	252
12.2.2  常量定义	255
12.2.3  创建内存池	255
12.2.4  分配内存	257
12.2.5  分配大块内存	258
12.2.6  分配小块内存	259
12.2.7  释放内存	264
12.2.8  清理机制	264
12.2.9  清空内存池	265
12.2.10  销毁内存池	266
12.3  页式内存池	267
12.3.1  结构定义	268
12.3.2  常量定义	270
12.3.3  初始化内存池	271
12.3.4  分配内存	273
12.3.5  分配大块内存	275
12.3.6  分配小块内存	277
12.3.7  释放内存	280
12.4  总结	282
第13章  Nginx进程机制	284
13.1  基本系统调用	284
13.1.1  errno	284
13.1.2  getrlimit	285
13.2  进程系统调用	285
13.2.1  getpid	285
13.2.2  fork	286
13.2.3  waitpid	286
13.3  信号系统调用	287
13.3.1  kill	287
13.3.2  sigaction	288
13.3.3  sigsuspend	288
13.4  结构定义	288
13.4.1  ngx_cycle_t	288
13.4.2  ngx_core_conf_t	289
13.4.3  ngx_process_t	290
13.5  全局变量	291
13.5.1  命令行相关	291
13.5.2  操作系统相关	292
13.5.3  进程功能相关	292
13.5.4  信号功能相关	293
13.6  启动过程	293
13.6.1  基本流程	293
13.6.2  解析命令行	294
13.6.3  版本和帮助信息	294
13.6.4  初始化cycle	294
13.6.5  测试配置	296
13.6.6  发送信号	297
13.6.7  守护进程化	297
13.6.8  启动工作进程	298
13.6.9  流程图	298
13.7  信号处理	299
13.7.1  信号处理函数	300
13.7.2  发送信号	300
13.7.3  处理信号	301
13.8  单进程模式	302
13.8.1  single进程	302
13.8.2  single进程流程图	304
13.9  多进程模式	304
13.9.1  产生子进程	304
13.9.2  master进程	306
13.9.3  master进程流程图	309
13.9.4  worker进程	310
13.9.5  worker进程流程图	312
13.10  总结	313
第14章  Nginx进程间通信机制	315
14.1  基本系统调用	315
14.1.1  atomic	315
14.1.2  sched_yield	316
14.1.3  semaphore	316
14.1.4  mmap	317
14.2  共享内存（Ⅰ）	317
14.2.1  结构定义	317
14.2.2  创建共享内存	317
14.2.3  使用共享内存	318
14.3  自旋锁	318
14.3.1  自旋锁定	319
14.3.2  解除锁定	320
14.3.3  使用自旋锁	320
14.4  互斥锁	320
14.4.1  结构定义	320
14.4.2  创建互斥锁	321
14.4.3  互斥锁定	322
14.4.4  解除锁定	323
14.4.5  销毁互斥锁	324
14.4.6  使用互斥锁	324
14.5  读写锁	325
14.5.1  写锁定	325
14.5.2  读锁定	325
14.5.3  解除锁定	326
14.5.4  降级锁定	326
14.5.5  使用读写锁	327
14.6  共享内存（Ⅱ）	327
14.6.1  结构定义	327
14.6.2  添加共享内存	328
14.6.3  创建共享内存	329
14.6.4  使用共享内存	330
14.7  总结	331
第15章  Nginx事件机制	333
15.1  基本系统调用	333
15.1.1  errno	334
15.1.2  ioctl	334
15.1.3  setitimer	334
15.1.4  gettimeofday	334
15.2  socket系统调用	335
15.2.1  socket	335
15.2.2  bind	335
15.2.3  listen	336
15.2.4  accept	336
15.2.5  connect	336
15.2.6  recv	336
15.2.7  send	337
15.2.8  setsockopt	337
15.2.9  close	337
15.2.10  函数关系图	338
15.3  epoll系统调用	338
15.3.1  epoll_create	339
15.3.2  epoll_ctl	339
15.3.3  epoll_wait	340
15.3.4  LT和ET	341
15.3.5  函数关系图	342
15.4  结构定义	342
15.4.1  ngx_event_t	342
15.4.2  ngx_connection_t	343
15.4.3  ngx_listening_t	345
15.4.4  ngx_cycle_t	346
15.4.5  ngx_os_io_t	347
15.4.6  ngx_event_actions_t	351
15.4.7  ngx_posted_events	353
15.4.8  关系图	354
15.5  定时器	354
15.5.1  红黑树	354
15.5.2  操作函数	355
15.5.3  超时处理	355
15.6  模块体系	358
15.6.1  函数指针表	358
15.6.2  模块的组织形式	359
15.6.3  核心配置	361
15.6.4  epoll模块	362
15.7  全局变量	363
15.7.1  更新时间相关	363
15.7.2  事件机制相关	364
15.7.3  负载均衡相关	365
15.7.4  统计相关	365
15.8  进程初始化	366
15.8.1  初始化函数	366
15.8.2  基本参数初始化	368
15.8.3  事件机制初始化	369
15.8.4  连接池初始化	370
15.8.5  监听端口初始化	371
15.8.6  初始化流程图	373
15.9  运行机制	373
15.9.1  添加事件	374
15.9.2  删除事件	377
15.9.3  处理事件	378
15.9.4  接受连接	382
15.9.5  负载均衡	384
15.10  避免阻塞	389
15.11  总结	390
第16章  Nginx多线程机制	392
16.1  eventfd系统调用	392
16.2  pthread系统调用	393
16.3  结构定义	393
16.3.1  ngx_thread_task_t	394
16.3.2  ngx_thread_pool_queue_t	394
16.3.3  ngx_thread_pool_t	395
16.3.4  结构关系图	396
16.4  事件通知	396
16.4.1  函数接口	396
16.4.2  初始化	397
16.4.3  发送通知	398
16.4.4  处理通知	398
16.5  运行机制	399
16.5.1  完成任务队列	399
16.5.2  创建线程池	399
16.5.3  创建任务	400
16.5.4  投递任务	401
16.5.5  执行任务	402
16.5.6  任务完成回调	404
16.5.7  销毁线程池	405
16.6  开发示例	406
16.6.1  模块设计	406
16.6.2  配置数据	407
16.6.3  线程任务	407
16.6.4  任务完成回调	408
16.6.5  投递任务	409
16.6.6  测试验证	410
16.7  总结	410
第17章  Nginx Stream机制	412
17.1  模块体系	412
17.1.1  函数指针表	413
17.1.2  基础模块	413
17.1.3  核心模块	415
17.1.4  结构关系图	416
17.1.5  存储模型	416
17.2  监听端口	418
17.2.1  结构定义	418
17.2.2  解析配置	420
17.2.3  启动监听	424
17.3  处理引擎	425
17.3.1  阶段定义	426
17.3.2  函数原型	426
17.3.3  处理函数的存储方式	426
17.3.4  引擎数据结构	427
17.3.5  结构关系图	428
17.3.6  引擎的初始化	428
17.4  过滤引擎	430
17.4.1  函数原型	430
17.4.2  过滤函数链表	430
17.5  运行机制	431
17.5.1  会话结构体	431
17.5.2  创建会话	432
17.5.3  执行引擎	435
17.5.4  通用阶段处理	437
17.5.5  预读数据	438
17.5.6  产生响应数据	442
17.5.7  过滤数据	442
17.5.8  结束会话	442
17.6  开发示例	443
17.6.1  discard协议	444
17.6.2  time协议	446
17.6.3  echo协议	448
17.7  总结	450
第18章  Nginx HTTP机制	452
18.1  结构定义	452
18.1.1  ngx_http_state_e	452
18.1.2  ngx_http_connection_t	453
18.1.3  ngx_http_request_t	453
18.2  初始化连接	454
18.2.1  建立连接	455
18.2.2  等待数据	456
18.2.3  读取请求头	458
18.3  执行引擎	463
18.3.1  初始化引擎	463
18.3.2  通用阶段	465
18.3.3  改写阶段	466
18.3.4  访问控制阶段	467
18.3.5  内容产生阶段	469
18.4  处理请求体	470
18.4.1  丢弃缓冲区数据	470
18.4.2  读取并丢弃数据	471
18.4.3  读事件处理函数	473
18.4.4  启动丢弃处理	474
18.5  发送数据	475
18.5.1  发送初始化	475
18.5.2  事件处理函数	476
18.6  结束请求	478
18.6.1  释放请求资源	478
18.6.2  检查引用计数结束请求	479
18.6.3  检查状态结束请求	480
18.6.4  综合处理结束请求	481
18.7  总结	483
第19章  Nginx与设计模式	485
19.1  设计模式简介	485
19.2  框架级别的模式	485
19.3  业务级别的模式	487
19.4  代码级别的模式	488
19.5  总结	490
第20章  Nginx C++开发	491
20.1  语言简介	491
20.2  开发准备	492
20.2.1  程序库	492
20.2.2  头文件	492
20.2.3  编程范式	493
20.2.4  实现原则	493
20.2.5  源码组织	494
20.2.6  编译脚本	495
20.3  封装类	497
20.3.1  基础设施	497
20.3.2  高级数据结构	500
20.3.3  功能框架	505
20.3.4  请求处理	509
20.4  开发示例：content handler	510
20.4.1  配置信息类	510
20.4.2  业务逻辑类	511
20.4.3  模块集成类	512
20.4.4  实现源文件	515
20.5  开发示例：filter	515
20.5.1  配置信息类	515
20.5.2  环境数据类	515
20.5.3  业务逻辑类	516
20.5.4  模块集成类	518
20.5.5  实现源文件	519
20.6  总结	519
第21章  Nginx JavaScript开发	521
21.1  语言简介	521
21.2  模块简介	522
21.3  开发准备	523
21.4  指令简介	523
21.5  功能接口	524
21.5.1  运行日志	524
21.5.2  变量	525
21.5.3  请求处理	525
21.5.4  子请求	527
21.5.5  定时器	527
21.5.6  流处理	527
21.6  开发示例	528
21.6.1  content handler	528
21.6.2  subrequest	529
21.6.3  A/B testing	530
21.7  总结	531
第22章  Nginx Lua开发	532
22.1  语言简介	532
22.2  模块简介	533
22.2.1  http_lua	533
22.2.2  stream_lua	533
22.2.3  lua-resty-lib	534
22.3  开发准备	534
22.4  指令简介	535
22.4.1  配置指令	536
22.4.2  功能指令	536
22.4.3  指令关系图	538
22.5  应用开发流程	538
22.6  功能接口	539
22.6.1  运行日志	539
22.6.2  时间与日期	540
22.6.3  变量	540
22.6.4  正则表达式	541
22.6.5  请求处理	542
22.6.6  请求转发	544
22.6.7  子请求	545
22.6.8  定时器	546
22.6.9  共享内存	546
22.7  开发示例	547
22.7.1  content handler	548
22.7.2  filter	549
22.7.3  upstream	550
22.7.4  subrequest	550
22.7.5  discard	551
22.7.6  echo	552
22.8  总结	552
第23章  Nginx调试与测试	554
23.1  调试	554
23.1.1  调试器	554
23.1.2  调试断点	555
23.1.3  调试日志	556
23.2  功能测试	558
23.2.1  测试套件	559
23.2.2  测试用例	559
23.2.3  运行测试	564
23.3  性能测试	564
23.3.1  ab	565
23.3.2  http_load	565
23.3.3  wrk	566
23.3.4  Test::Nginx	567
23.4  总结	568
第24章  Nginx性能分析	569
24.1  简介	569
24.2  火焰图	570
24.3  分析工具	572
24.3.1  使用方式	572
24.3.2  处理数据	573
24.4  动态追踪	576
24.4.1  CPU分析	577
24.4.2  I/O分析	579
24.4.3  Memory分析	580
24.4.4  观测工具	581
24.5  总结	582
第25章  结束语	583
25.1  本书的遗憾	583
25.2  下一步	583
25.3  临别赠言	584
附录A  推荐书目	585
附录B  字符串格式化	587
附录C  开发辅助工具	589
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Nginx完全开发指南：使用C、C++、JavaScript和Lua
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入理解JavaScript特性
序　xi
前言　xiii
第1章　ECMAScript和JavaScript的未来　　1
1.1　JavaScript标准简史　　1
1.2　持续迭代的ECMAScript　　3
1.3　浏览器支持和辅助工具　　5
1.3.1　Babel转译器简介　　5
1.3.2　使用ESLint提高代码质量和一致性　　9
1.4　ES6特性　　11
1.5　JavaScript的未来　　12
第2章　ES6基础　　14
2.1　对象字面量　　14
2.1.1　属性值简写　　14
2.1.2　可计算属性名　　15
2.1.3　方法定义　　17
2.2　箭头函数　　18
2.2.1　词法作用域　　19
2.2.2　箭头函数的写法　　20
2.2.3　优点和用例　　21
2.3　解构　　22
2.3.1　对象的解构　　22
2.3.2　数组的解构　　25
2.3.3　函数参数的默认值　　25
2.3.4　函数参数的解构　　26
2.3.5　解构的用例　　28
2.4　剩余参数和扩展运算符　　29
2.4.1　剩余参数　　29
2.4.2　扩展运算符　　30
2.5　模板字面量　　32
2.5.1　字符串插值　　32
2.5.2　多行模板字面量　　33
2.5.3　标签模板　　35
2.6　let和const声明　　37
2.6.1　块级作用域和let声明　　38
2.6.2　暂时性死区　　39
2.6.3　const声明　　41
2.6.4　const和let的优势　　42
第3章　类、符号、对象和装饰器　　44
3.1　类　　44
3.1.1　使用类　　44
3.1.2　类的属性和方法　　47
3.1.3　类的继承　　49
3.2　符号　　51
3.2.1　本地符号　　51
3.2.2　符号的实际用法　　53
3.2.3　全局符号注册表　　55
3.2.4　众所周知的符号　　57
3.3　对象的内置改进　　58
3.3.1　使用Object.assign扩展对象　　58
3.3.2　使用Object.is进行对象比较　　61
3.3.3　Object.setPrototypeOf　　62
3.4　装饰器　　63
3.4.1　初识JavaScript装饰器　　63
3.4.2　装饰器叠加及不变性提醒　　64
3.4.3　用例：C#中的特性　　64
3.4.4　在JavaScript中装饰属性　　66
第4章　迭代与流程控制　　68
4.1　Promise　　68
4.1.1　快速理解Promise　　68
4.1.2　Promise的延续与连缀　　　72
4.1.3　创建Promise　　　76
4.1.4　Promise的状态　　　78
4.1.5　Promise#finally提案　　　79
4.1.6　Promise.all和Promise.race　　81
4.2　迭代器协议与可迭代协议　　83
4.2.1　迭代的原理　　83
4.2.2　无穷序列　　85
4.2.3　迭代对象以生成键/值对　　88
4.2.4　打造多功能播放列表　　90
4.3　生成器函数与生成器对象　　93
4.3.1　生成器基础　　93
4.3.2　手工迭代生成器　　96
4.3.3　将生成器混入可迭代对象　　97
4.3.4　使用生成器遍历树　　99
4.3.5　传递生成器函数　　101
4.3.6　处理异步流　　102
4.3.7　在生成器上抛出错误　　103
4.3.8　代替生成器返回　　104
4.3.9　基于生成器的异步I/O　　105
4.4　异步函数　　109
4.4.1　各种异步代码　　109
4.4.2　使用async/await　　111
4.4.3　并发异步流　　112
4.4.4　错误处理　　113
4.4.5　深入理解异步函数114
4.5　异步迭代　　119
4.5.1　异步迭代器　　119
4.5.2　异步生成器　　120
第5章　巧妙使用ES中的集合　　122
5.1　使用ES6 map　　124
5.1.1　初识ES6 map　　124
5.1.2　散列映射和DOM元素　　128
5.2　理解和使用WeakMap　　130
5.3　ES6中的Set　　131
5.4　ES6 WeakSet　　133
第6章　使用代理控制属性访问　　136
6.1　了解代理　　136
6.1.1　捕获get访问　　137
6.1.2　捕获set访问　　138
6.1.3　通过代理实现模式验证　　140
6.2　可撤销代理　　142
6.3　代理捕获器　　143
6.3.1　has捕获器　　143
6.3.2　deleteProperty捕获器　　144
6.3.3　defineProperty捕获器　　146
6.3.4　ownKeys捕获器　　148
6.4　高级代理捕获器　　150
6.4.1　getOwnPropertyDescriptor捕获器　　150
6.4.2　apply捕获器　　151
6.4.3　construct捕获器　　154
6.4.4　getPrototypeOf捕获器　　156
6.4.5　setPrototypeOf捕获器　　157
6.4.6　preventExtensions捕获器　　158
6.4.7　isExtensible捕获器　　159
第7章　ES6中内置API的改进　　161
7.1　数字　　161
7.1.1　二进制和八进制字面量　　161
7.1.2　Number.isNaN　　162
7.1.3　Number.isFinite　　164
7.1.4　Number.parseInt　　165
7.1.5　Number.parseFloat　　166
7.1.6　Number.isInteger　　166
7.1.7　Number.EPSILON　　167
7.1.8　Number.MAX_SAFE_INTEGER和Number.MIN_SAFE_INTEGER　　167
7.1.9　Number.isSafeInteger　　168
7.2　Math　　170
7.2.1　Math.sign　　171
7.2.2　Math.trunc　　171
7.2.3　Math.cbrt　　171
7.2.4　Math.expm1　　172
7.2.5　Math.log1p　　172
7.2.6　Math.log10　　173
7.2.7　Math.log2　　173
7.2.8　三角函数174
7.2.9　Math.hypot　　174
7.2.10　按位计算助手　　174
7.3　字符串和Unicode　　175
7.3.1　String#startsWith　　175
7.3.2　String#endsWith　　176
7.3.3　String#includes　　177
7.3.4　String#repeat　　177
7.3.5　字符串填充和去空白　　179
7.3.6　Unicode　　180
7.3.7　String.prototype[Symbol.iterator]　　181
7.3.8　有关分割字形段的提案　　182
7.3.9　String#codePointAt　　183
7.3.10　String.fromCodePoint　　184
7.3.11　Unicode-Aware字符串反转　　185
7.3.12　String#normalize　　185
7.4　正则表达式　　186
7.4.1　粘连修饰符/y　　186
7.4.2　Unicode修饰符/u　　187
7.4.3　具名捕获组　　188
7.4.4　Unicode属性转义　　190
7.4.5　后行断言　　191
7.4.6　新的/s（dotAll）修饰符　　193
7.4.7　String#matchAll　　193
7.5　Array　　196
7.5.1　Array.from　　196
7.5.2　Array.of　　198
7.5.3　Array#copyWithin　　199
7.5.4　Array#fill　　200
7.5.5　Array#find和Array#findIndex　　201
7.5.6　Array#keys　　201
7.5.7　Array#values　　202
7.5.8　Array#entries　　202
7.5.9　Array.prototype[Symbol.iterator]　　202
第8章　JavaScript模块　　204
8.1　CommonJS　　204
8.2　JavaScript模块　　209
8.2.1　严格模式　　209
8.2.2　export语句　　209
8.2.3　import语句　　213
8.2.4　动态import()　　215
8.3　ES模块的实践考量　　216
第9章　实用建议　　219
9.1　变量声明　　219
9.2　模板字面量　　223
9.3　简写及对象解构　　227
9.4　剩余参数和扩展运算符　　229
9.5　函数偏好　　231
9.6　类和代理　　235
9.7　异步代码流　　238
9.8　复杂性蠕变、抽象及约定　　241
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入理解JavaScript特性
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>了不起的JavaScript工程师：从前端到全端高级进阶
第1章  开发环境	1
1.1　代码编写工具	2
1.1.1　IDE	2
1.1.2　编辑器	3
1.1.3　最佳选择	3
1.2　Docker容器	5
1.2.1　Docker概述	5
1.2.2　Docker重要概念	6
1.2.3　Docker使用场景	11
1.2.4　Docker扩展	15
1.3　代码管理	15
1.3.1　什么是代码仓库	16
1.3.2　版本管理的意义	16
1.3.3　版本管理的常用操作	16
1.3.4　分支管理的意义	17
1.3.5　分支管理的常用操作	17
1.3.6　分支管理流程	18
1.4　其他软件	23
1.4.1　文件夹管理软件	23
1.4.2　快速搜索工具	24
1.4.3　终端管理软件	25
1.4.4　Chrome中的插件	25
1.5　硬件提升	26
1.5.1　提升程序运行速度	26
1.5.2　减少程序切换时间	27
1.6　小结	28
第2章  Web页面与多页应用	29
2.1　Web页面的运行环境——浏览器	29
2.1.1　渲染引擎	30
2.1.2　JavaScript引擎	38
2.1.3　数据持久层	40
2.2　HTML	41
2.3　模板	42
2.3.1　模板的意义	42
2.3.2　常用模板分类	42
2.3.3　模板的重要功能	42
2.4　CSS盒模型	45
2.5　CSS	46
2.6　CSS布局	47
2.6.1　普通文档流	47
2.6.2　浮动	57
2.6.3　定位	61
2.6.4　弹性盒模型	62
2.7　CSS预处理	68
2.7.1　预处理的意义	68
2.7.2　预处理的重要功能	69
2.7.3　样式文件规划	72
2.7.4　样式类命名	73
2.8　JavaScript	77
2.8.1　实现功能逻辑	77
2.8.2　操作页面或浏览器	78
2.8.3　进行网络通信	79
2.8.4　第三方JavaScript库——jQuery	84
2.8.5　JavaScript简史	84
2.9　自动化构建工具	85
2.9.1　自动化构建工具的作用	85
2.9.2　常用的自动化构建工具	85
2.10　小结	86
第3章  高效编写/组织代码的心法	87
3.1　拆分方式	89
3.1.1　按文件类型拆分	89
3.1.2　按功能类型拆分	90
3.1.3　按关注点拆分	90
3.2　抽象原则	91
3.2.1　第一原则：DRY	91
3.2.2　第二原则：YAGNI	92
3.2.3　第三原则：The Rule of Three	93
3.3　不止于代码	94
3.4　小结	94
第4章  模块	96
4.1　模块的意义	96
4.2　ECMAScript 5中的模块	96
4.2.1　立即执行函数表达式（Immediately-Invoked Function Expression）	97
4.2.2　显式模块声明	97
4.2.3　异步模块定义	98
4.2.4　共同模块定义	99
4.2.5　CommonJS	100
4.2.6　通用模块定义	101
4.3　ECMAScript 6中的模块	102
4.4　模块打包工具	103
4.5　小结	107
第5章  单页应用（SPA）	108
5.1　框架	109
5.2　视图与数据	110
5.2.1　双向数据绑定	111
5.2.2　单向数据流	115
5.3　路由	116
5.3.1　hash	116
5.3.2　history	117
5.4　组件	119
5.4.1　原生组件	119
5.4.2　第三方组件	121
5.5　小结	123
第6章  JavaScript的几个趋势	124
6.1　接口与数据类型	125
6.2　更好的异步解决方案	127
6.3　面向对象与类	132
6.3.1　封装	132
6.3.2　继承	134
6.3.3　多态	135
6.4　模块化	138
6.5　小结	141
第7章  小程序概述	142
7.1　常见的App	142
7.2　JavaScript开发者的一双翅膀	143
7.3　小程序的发展	144
7.4　小结	144
第8章  小程序与Web页面	145
8.1　WXML	145
8.1.1　WXML与HTML的相同之处	145
8.1.2　WXML与HTML的不同之处	146
8.2　WXSS	149
8.2.1　WXSS与CSS的相同点	149
8.2.2　WXSS与CSS的不同点	149
8.3　JavaScript与WXS	155
8.4　JSON	155
8.4.1　app.json	155
8.4.2　project.config.json	156
8.4.3　page.json	157
8.4.4　component.json	158
8.5　小结	158
第9章  小程序与单页应用	159
9.1　路由	159
9.1.1　路由配置	159
9.1.2　路由跳转	160
9.1.3　路由监听	161
9.2　组件	162
9.2.1　组件与页面	162
9.2.2　小程序组件与单页应用组件	164
9.3　web-view	165
9.3.1　作用	165
9.3.2　交互	165
9.4　小结	165
第10章  小程序的框架与插件	166
10.1　RxWX	166
10.2　WePY	168
10.3　mpvue	171
10.4　Taro	171
10.5　小结	171
第11章  小程序的开发工具与发布	173
11.1　开发者工具组成	173
11.1.1　模拟器	174
11.1.2　调试器	174
11.1.3　编辑器	176
11.1.4　其他功能	176
11.2　发布流程	177
11.2.1　小程序的版本	177
11.2.2　用户身份与权限	178
11.3　小结	178
第12章  其他混合应用简介	180
12.1　流应用	180
12.2　桌面应用	181
12.3　小结	182
第13章  HTTP协议与Web网站	183
13.1　HTTP的历史	183
13.2　HTTP的通信方式	183
13.3　HTTP的状态	184
13.4　小结	184
第14章  HTTP协议内容	185
14.1　请求行/状态行	186
14.1.1　URL	186
14.1.2　请求方法	188
14.1.3　状态码/状态信息	188
14.2　头部	192
14.2.1　通用头部字段	192
14.2.2　请求头部字段	194
14.2.3　响应头部字段	196
14.2.4　主体头部字段	196
14.2.5　其他头部字段	197
14.3　主体	198
14.4　Cookie	199
14.4.1　Cookie的分类	199
14.4.2　Cookie的使用	199
14.4.3　Cookie的缺陷	200
14.4.4　Cookie与存储	201
14.5　Cookie与状态	204
14.5.1　状态存储	205
14.5.2　状态获取	207
14.5.3　基于token的认证方式更好	207
14.6　小结	208
第15章  HTTP请求优化	209
15.1　减少连接/请求数	209
15.1.1　减少请求	209
15.1.2　减少连接	210
15.2　缓存数据	210
15.3　减少传输数据量	210
15.4　优化网络链路	210
15.4.1　减少域名	211
15.4.2　使用CDN	211
15.5　小结	211
第16章  HTTP/2协议	212
16.1　多路复用	212
16.2　压缩	214
16.3　支持TLS	215
16.4　应用层协议协商	215
16.5　服务器端推送	215
16.6　流控制	216
16.7　小结	216
第17章  HTTPS协议	217
17.1　HTTP的缺点	217
17.1.1　通信使用明文	217
17.1.2　不验证通信方身份	218
17.1.3　无法证明报文的完整性	218
17.2　理解HTTPS	219
17.2.1  HTTPS通信流程	219
17.2.2  密码学基础	221
17.2.3  摘要与签名	221
17.2.4  X.509与证书	222
17.3　小结	223
第18章  WebSocket协议	224
18.1　WebSocket与HTTP	224
18.2　WebSocket的使用	224
18.2.1　客户端	225
18.2.2　服务器端	226
18.3　小结	227
第19章  API	228
19.1　REST	228
19.1.1　REST API设计	228
19.1.2　REST API工具	230
19.2　GraphQL	231
19.2.1　GraphQL设计	232
19.2.2　GraphQL工具	234
19.3　小结	235
第20章  Node.js概述	237
20.1　为什么要学习Node.js	237
20.2　什么是Node.js	238
20.3　Node.js的历史	239
20.4　Node.js的结构	240
20.5　Node.js的运行机制	241
20.5.1　单线程	241
20.5.2　事件循环	242
20.6　学习Node.js的三个挑战	244
20.6.1　I/O回调	244
20.6.2　代码性能	244
20.6.3　多进程协作	245
20.7　小结	245
第21章  用Node.js编写Web服务器端	246
21.1　处理请求	246
21.1.1　创建服务器端	246
21.1.2　解析请求	247
21.2　响应结果	250
21.2.1　状态信息	250
21.2.2　响应头部	251
21.2.3　响应主体	251
21.3　路由解析	253
21.4　I/O操作	260
21.4.1　文件	260
21.4.2　数据库	264
21.4.3　网络请求	267
21.5　Web框架	270
21.5.1　Express	271
21.5.2　Koa	271
21.6　小结	271
第22章  Node.js内存控制	273
22.1　内存限制	273
22.2　内存管理	276
22.2.1　内存分配	276
22.2.2　内存回收	276
22.3　内存泄漏	277
22.3.1　缓存	277
22.3.2　不断增长的数组	279
22.3.3　重复的事件监听	279
22.4　大内存处理	281
22.5　小结	283
第23章  Node.js多进程	284
23.1　PM2模块	284
23.1.1　安装与使用	285
23.1.2　进程通信	286
23.1.3　进程管理	287
23.2　cluster模块	290
23.2.1　基本使用	291
23.2.2　进程通信	294
23.2.3　进程管理	294
23.3　child_process模块	298
23.3.1　基本使用	298
23.3.2　进程通信	298
23.3.3　进程管理	302
23.4　worker_threads模块	303
23.4.1　基本使用	303
23.4.2　线程通信	304
23.4.3　线程管理	305
23.5　小结	306
第24章  Node.js调试与测试	307
24.1　开发工具	307
24.2　调试工具	307
24.2.1　debug模块	308
24.2.2　Node Inspector	309
24.3　单元测试	312
24.3.1　单元测试的意义	312
24.3.2　单元测试代码编写原则	312
24.3.3　测试框架	314
24.3.4　测试风格	316
24.3.5　测试指标	317
24.4　小结	319
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>了不起的JavaScript工程师：从前端到全端高级进阶
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5+CSS3+JavaScript 从入门到项目实践(超值版)
前言
丛书说明
Web前端开发最佳学习线路
本书内容
本书特色
本书附赠超值王牌资源库
上述资源获取及使用
读者对象
创作团队
第1篇 基础知识
第1章 HTML 5基础入门
1.1 HTML的基本概念
1.2 HTML 5的优势
1.3 编写第一个HTML页面
1.4 认识网页与网站
1.5 就业面试技巧与解析
第2章 HTML 5文档基本结构
2.1 HTML 5文档构成
2.2 HTML 5的语法变化
2.3 HTML 5标签、元素及属性
2.4 HTML 5文档头部标签
2.5 meta标签
2.6 页面注释标签
2.7 标题标签、换行标签及不换行标签
2.8 段落标签、换行标签及不换行标签
2.9 其他标签
2.10 就业面试技巧与解析
第3章 CSS 3基础入门
3.1 CSS概述
3.2 CSS的基本语法
3.3 HTML网页应用CSS样式的方法
3.4 CSS三大特性
3.5 在脚本中修改显示样式
3.6 实践案例——设计登录和注册界面
3.7 就业面试技巧与解析
第4章 CSS 3样式选择器
4.1 选择器分类
4.2 基本选择器
4.3 层次选择器
4.4 动态伪类选择器
4.5 CSS 3新增的伪类选择器
4.6 属性选择器
4.7 实践案例——制作404页面
4.8 就业面试技巧与解析
第5章 使用并美化网页文本
5.1 设置网页文本字体
5.2 设置网页文本的缩进和间距
5.3 设置网页文本的对齐方式
5.4 CSS 3新增的服务器字体
5.5 实践案例——设置简单的文字效果
5.6 就业面试技巧与解析
第6章 使用并美化网页图像
6.1 插入网页图像
6.2 设置网页图像
6.3 设置网页图像样式
6.4 设置网页背景颜色和背景图
6.5 实践案例——独特的瀑布流效果
6.6 就业面试技巧与解析
第2篇 核心应用
第7章 使用并美化网页超链接
7.1 超链接基础
7.2 超链接路径
7.3 定义超链接和热点区域
7.4 定义锚点超链接
7.5 使用CSS样式美化超链接
7.6 实践案例——鼠标指针跟随的超链接样式
7.7 就业面试技巧与解析
第8章 使用并美化网页列表
8.1 列表标签
8.2 列表的常见应用
8.3 设计CSS 3样式美化列表
8.4 实践案例——设计排行榜
8.5 就业面试技巧与解析
第9章 使用并美化表格
9.1 表格的基本结构
9.2 创建网页表格
9.3 表格的边框
9.4 表格背景
9.5 表格的行属性
9.6 单元格属性
9.7 使用CSS样式美化表格
9.8 实践案例
9.9 就业面试技巧与解析
第10章 使用并美化表单
10.1 表单的基本结构
10.2 表单及表单控件
10.3 HTML 5新增的表单元素
10.4 HTML 5新增的表单属性
10.5 HTML 5新增的客户端校验
10.6 实践案例——设计美化搜索页面
10.7 就业面试技巧与解析
第11章 Web标准与网页布局
11.1 Web标准与CSS布局
11.2 网页排版
11.3 CSS定位
11.4 浮动布局及浮动嵌套
11.5 案例实战
11.6 就业面试技巧与解析
第12章 CSS 3盒子模型与页面布局
12.1 认识盒子模型
12.2 添加盒阴影
12.3 布局的相关属性
12.4 设置多列显示样式
12.5 使用弹性盒布局
12.6 实践案例
12.7 就业面试技巧与解析
第13章 使用网页动画效果
13.1 定义2D变形动画
13.2 自定义2D变换
13.3 CSS 3 3D变换动画
13.4 CSS 3平滑过渡动画
13.5 CSS 3帧动画
13.6 实践案例
13.7 就业面试技巧与解析
第3篇 核心技术
第14章 JavaScript基础
14.1 JavaScript概述
14.2 网页中的JavaScript
14.3 变量
14.4 数据类型
14.5 运算符
14.6 运算符优先级
14.7 表达式语句
14.8 条件判断语句
14.9 循环语句
14.10 跳转语句
14.11 九九乘法表
14.12 计算借贷支出金额
14.13 就业面试技巧与解析
第15章 JavaScript开发应用工具
15.1 JavaScript的编写工具
15.2 JavaScript常用的开发工具
15.3 JavaScript常用的调试工具
15.4 就业面试技巧与解析
第16章 JavaScript对象与数组
16.1 创建对象的方法
16.2 常用内置对象
16.3 对象访问语句
16.4 对象序列化
16.5 创建对象的常用模式
16.6 数组对象
16.7 数组方法
16.8 经典案例——制作二级关联菜单
16.9 就业面试技巧与解析
第17章 JavaScript函数与闭包
17.1 函数是什么
17.2 定义函数
17.3 函数的调用
17.4 内置常规函数
17.5 JavaScript特殊函数
17.6 JavaScript的闭包
17.7 回调函数设计模式
17.8 制作伸缩两级菜单
17.9 就业面试技巧与解析
第18章 JavaScript窗口与人机交互对话框
18.1 window对象
18.2 打开与关闭窗口
18.3 操作窗口对象
18.4 获取窗口历史记录
18.5 窗口定时器
18.6 JavaScript对话框
18.7 调用对话框
18.8 其他
18.9 制作询问式对话框
18.10 就业面试技巧与解析
第4篇 高级应用
第19章 文档对象与对象模型
19.1 熟悉文档对象
19.2 使用文档对象
19.3 DOM及DOM技术简介
19.4 DOM模型中的节点
19.5 操作DOM中的节点
19.6 使用非标准DOM innerHTML属性
19.7 DOM与CSS
19.8 制作树形导航菜单
19.9 就业面试技巧与解析
第20章 JavaScript事件机制
20.1 什么是事件
20.2 JavaScript事件的调用方式
20.3 JavaScript常用事件
20.4 JavaScript处理事件的方式
20.5 事件对象Event
20.6 事件模拟
20.7 制作可关闭的窗体对象
20.8 就业面试技巧与解析
第21章 JavaScript客户端开发技术
21.1 客户端JavaScript的重要性
21.2 HTML与JavaScript
21.3 JavaScript的线程模型技术
21.4 客户端JavaScript的简单应用
21.5 就业面试技巧与解析
第22章 JavaScript服务器端开发技术
22.1 认识服务器端JavaScript
22.2 浏览器端与服务器端
22.3 JavaScript与数据库的连接
22.4 制作网页版时钟
22.5 就业面试技巧与解析
第23章 JavaScript的安全策略及安全区域的使用
23.1 安全策略
23.2 使用Internet Explorer安全区域
23.3 JavaScript常用安全策略代码
23.4 JavaScript加密与解密
23.5 禁止新建IE窗口
23.6 就业面试技巧与解析
第24章 JavaScript中的错误和异常处理
24.1 常见的错误和异常
24.2 错误和异常处理
24.3 使用浏览器调试器
24.4 JavaScript优化
24.5 加载图像时的错误提示
24.6 就业面试技巧与解析
第5篇 行业应用
第25章 JavaScript在金融理财行业开发中的应用
25.1 系统功能描述
25.2 系统功能分析及实现
第26章 JavaScript在移动互联网行业开发中的应用
26.1 系统功能描述
26.2 系统功能分析及实现
第27章 JavaScript在电子商务行业开发中的应用
27.1 系统功能描述
27.2 系统功能分析及实现
第28章 软件工程师必备素养与技能
28.1 软件工程师的基本素养
28.2 个人素质必修课程
28.3 项目开发流程
28.4 项目开发团队
28.5 项目的实际开发过程
28.6 项目规划常见问题及解决
第6篇 项目实践
第29章 项目实践初级阶段——制作企业门户网站
29.1 项目代码结构
29.2 项目代码实现
29.3 项目总结
第30章 项目实践提高阶段——制作游戏大厅网站
30.1 项目代码结构
30.2 项目代码实现
30.3 项目总结
第31章 项目实践高级阶段——开发便捷计算器App
31.1 项目概述
31.2 项目解析
31.3 运行效果
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5+CSS3+JavaScript 从入门到项目实践(超值版)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Learning TypeScript中文版
前言  XVIII
1 TypeScript 简介  1
TypeScript 的架构  1
设计目标  1
TypeScript 组件  3
TypeScript 语言特性  4
类型  6
变量、基本类型和运算符  7
流程控制语句  14
函数  18
类  20
接口  22
命名空间  22
综合运用  23
小结  25
2 自动化工作流程  26
一个现代化的开发工作流程  26
准备工作  27
Node.js  27
Atom  27
Git 和GitHub  30
版本控制工具  30
包管理工具  34
npm  35
Bower  38
tsd  38
自动化任务工具  39
检查TypeScript 代码的质量  41
编译TypeScript 代码  42
优化TypeScript 应用  44
管理Gulp 任务的执行顺序  48
自动化测试工具  50
使跨设备测试同步  52
持续集成工具  55
脚手架工具  56
小结  58
3 使用函数  59
在TypeScript 中使用函数  60
函数声明和函数表达式  60
函数类型  61
有可选参数的函数  62
有默认参数的函数  63
有剩余参数的函数  64
函数重载  66
特定重载签名  67
函数作用域  68
立即调用函数  71
范型  74
tag 函数和标签模板  77
TypeScript 中的异步编程  78
回调和高阶函数  79
箭头函数  79
回调地狱  81
promise  86
生成器  91
异步函数——async 和await  93
小结  93
4 TypeScript 中的面向对象编程  94
SOLID 原则  95
类  95
接口  99
关联、聚合和组合  100
关联  100
聚合  100
组合  100
继承  101
混合  104
范型类  109
范型约束  113
在范型约束中使用多重类型  117
范型中的 new 操作  118
遵循SOLID 原则  118
里氏替换原则  118
接口隔离原则  120
依赖反转原则  122
命名空间  122
模块  124
ES6 模块——运行时与程序设计时  126
外部模块语法——仅在程序设计阶段可用  127
AMD 模块定义语法——仅在运行时使用  128
CommonJS 模块定义语法——仅在运行时使用  129
UMD 模块定义语法——仅在运行时使用  130
SystemJS 模块定义——仅在运行时使用  131
循环依赖  131
小结  133
5 运行时  134
环境  135
运行时的一些概念  135
帧  136
栈  137
队列  137
堆  137
事件循环  137
this 操作符  138
全局上下文中的this 操作符  139
函数上下文中的this 操作符  139
call、apply 和bind 方法  140
原型  143
实例属性与类属性的对比  144
基于原型的继承  147
原型链  151
访问对象的原型  152
new 操作符  153
闭包  153
闭包和静态变量  155
闭包和私有成员  157
小结  159
6 应用性能  160
准备工作  160
性能和资源  161
性能指标  162
可用性  162
响应时间  162
处理速度  162
延迟  162
带宽  163
可伸缩性  163
性能分析  163
网络性能分析  163
网络性能与用户体验  168
GPU 性能分析  172
CPU 性能分析  174
内存性能分析  176
垃圾回收器  178
性能自动化  178
性能优化自动化  178
性能监测自动化  179
性能测试自动化  180
错误处理  180
Error 类  181
try…catch 语句和 throw 语句  182
小结  182
7 应用测试  183
软件测试术语表  183
断言  184
测试规范  185
测试用例  185
测试套件  185
测试监视  185
替身  185
测试桩  185
模拟  185
测试覆盖率  186
必要的准备  186
Gulp  187
Karma  187
Istanbul  187
Mocha  187
Chai  188
Sinon.JS  188
类型定义  188
PhantomJS  189
Selenium 和 Nightwatch.js  189
测试计划和方法  190
测试驱动开发  190
行为驱动测试  191
测试计划和测试类型  191
建立测试基础结构  192
使用Gulp 构建这个程序  193
使用Karma 运行单元测试  197
使用Selenium 和Nightwatch.js 运行E2E 测试  200
使用Mocha 和Chai 创建测试断言、规范和套件  203
测试异步代码  207
断言异常  208
Mocha 和Chai 的TDD 与BDD 对比  209
使用Sinon.JS 编写测试监视和测试桩  209
测试监视  213
测试桩  215
使用Nightwatch.js 创建端对端测试  216
生成测试覆盖率报告  217
小结  220
8 装饰器  221
条件准备  221
注解和装饰器  222
类装饰器  223
方法装饰器  226
属性装饰器  228
参数装饰器  230
装饰器工厂  232
带有参数的装饰器  234
反射元数据 API  235
小结  239
9 应用架构  240
单页应用架构  241
MV* 架构  246
MV* 框架中的组件和功能  247
model  247
collection  248
item view  248
collection view  249
controller  250
事件  251
路由和 hash (#) 导航  251
中介器  254
调度器  255
客户端渲染和 Virtual DOM  256
用户界面数据绑定  256
数据流  258
Web component 和 shadow DOM  259
选择一个程序框架  260
从零开始实现一个MVC 框架  261
准备工作  262
程序事件  264
中介器  265
程序组件  268
路由表  270
事件发射  271
路由  272
调度器  275
controller  279
model 和model settings  280
view 和view settings  283
框架  287
小结  288
10 汇总  289
准备工作  289
程序依赖  290
程序中的数据  291
程序架构  292
程序文件结构  293
配置自动构建流程  294
程序布局  297
实现根组件  298
实现market controller  299
实现NASDAQ model  302
实现NYSE model  303
实现market view  304
实现market 模板  306
实现symbol controller  308
实现quote model  309
实现symbol view  311
实现chart model  313
实现chart view  316
测试应用  318
准备发布程序  319
小结  320
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Learning TypeScript中文版
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5秘籍（第2版）
前言　　 ix
第一部分　现代标记
第1章　HTML5 简介　　 2
1.1 HTML5 的故事　　 2
1.1.1 XHTML 1.0：更严格的标准　　 2
1.1.2 XHTML 2：意想不到的失败　　 3
1.1.3 HTML5：起死回生　　 3
1.1.4 HTML：活着的语言　　 5
1.2 HTML5 的三个主要原理　　 6
1.2.1 不破坏Web 　　 6
1.2.2 修补牛蹄子路　　 7
1.2.3 实用至上　　 7
1.3 HTML5标记初体验　　 8
1.3.1 HTML5文档类型　　 9
1.3.2 字符编码　　 11
1.3.3 页面语言　　 11
1.3.4 添加样式表　　 11
1.3.5 添加JavaScript 　　 12
1.3.6 最终结果　　 13
1.4 HTML5 语法　　 13
1.4.1 放松的规则　　 13
1.4.2 HTML5 验证　　 14
1.4.3 XHTML 的回归　　 16
1.5 HTML5 元素家族　　 17
1.5.1 新增的元素　　 18
1.5.2 删除的元素　　 18
1.5.3 改变的元素　　 19
1.5.4 调整的元素　　 20
1.5.5 标准化的元素　　 21
1.6 今天开始用HTML5 　　 21
1.6.1 了解浏览器支持情况　　 23
1.6.2 浏览器装机情况统计　　 24
1.6.3 通过Modernizr 检测功能　　 25
1.6.4 使用“腻子脚本”填补功能缺陷　　 28
第2章　用语义元素构造网页　　 30
2.1 语义元素　　 30
2.2 改造传统的HTML 页面　　 32
2.2.1 构造页面的老办法　　 32
2.2.2 使用HTML5 构造页面　　 35
2.2.3 用<figure>添加插图　　 38
2.2.4 用<aside>添加附注　　 40
2.3 浏览器对语义元素的支持情况　　 42
2.3.1 为语义元素添加样式　　 43
2.3.2 使用HTML5“垫片” 　　 43
2.3.3 Modernizr：一站式解决方案　　 44
2.4 使用语义元素设计站点　　 44
2.4.1 理解<header> 　　 45
2.4.2 用<nav>标注导航链接　　 47
2.4.3 理解区块　　 51
2.4.4 理解<footer> 　　 51
2.4.5 使用<main>标识主要内容　　 54
2.5 HTML5 纲要　　 55
2.5.1 如何查看纲要　　 55
2.5.2 基本纲要　　 56
2.5.3 分块元素　　 58
2.5.4 解决一个纲要问题　　 60
第3章　编写更有意义的标记　　 64
3.1 回顾语义元素　　 64
3.1.1 使用<time>标注日期和时间　　 65
3.1.2 使用<output>标注JavaScript返回值　　 67
3.1.3 使用<mark>标注突显文本　　 68
3.2 其他语义标准　　 70
3.2.1 ARIA　　 70
3.2.2 RDFa　　 71
3.2.3 微格式　　 71
3.2.4 微数据　　 72
3.3 实例：改进“About Me”页面　　 75
3.4 搜索引擎如何使用元数据　　 79
3.4.1 Google Rich Snippets　　 79
3.4.2 增强搜索结果　　 80
3.4.3 食谱搜索引擎　　 84
第4章　构建更好的Web 表单　　 87
4.1 理解表单　　 87
4.2 传统表单翻新　　 89
4.2.1 通过占位符文本添加提示　　 92
4.2.2 焦点：挑选正确的起点　　 94
4.3 验证：阻止错误　　 94
4.3.1 HTML5 验证的原理　　 95
4.3.2 关闭验证　　 96
4.3.3 验证样式挂钩　　 97
4.3.4 使用正则表达式　　 98
4.3.5 自定义验证　　 99
4.4 浏览器对Web 表单和验证的支持　　 101
4.4.1 用Modernizr 检测支持情况　　 101
4.4.2 用HTML5Forms 兼容　　 102
4.5 新的输入控件　　 104
4.5.1 电子邮件地址　　 106
4.5.2 网址　　 106
4.5.3 搜索框　　 107
4.5.4 电话号码　　 107
4.5.5 数值　　 107
4.5.6 滑动条　　 108
4.5.7 日期和时间　　 108
4.5.8 颜色　　 110
4.6 新元素　　 110
4.6.1 使用<datalist>显示输入建议　　 110
4.6.2 进度条和计量条　　 113
4.6.3 使用<command>和<menu>创建工具条和菜单　　 115
4.7 网页中的HTML 编辑器　　 115
4.7.1 使用contenteditable 编辑元素　　 115
4.7.2 使用designMode 编辑页面　　 117
第二部分　视频、图形和特效
第5章　音频与视频　　 122
5.1 网络视频的演变　　 122
5.2 HTML5 音频与视频　　 123
5.2.1 使用<audio>播放点噪音　　 124
5.2.2 预加载媒体文件　　 125
5.2.3 自动播放　　 125
5.2.4 循环播放　　 126
5.2.5 了解<video> 　　 126
5.3 HTML5 媒体格式　　 128
5.3.1 谈谈格式　　 128
5.3.2 浏览器对媒体格式的支持情况　　 130
5.4 后备措施：如何讨好每一款浏览器　　 131
5.4.1 支持多种格式　　 132
5.4.2 添加Flash 后备措施　　 134
5.5 使用JavaScript 控制播放器　　 137
5.5.1 添加音效　　 137
5.5.2 创建自定义视频播放器　　 140
5.5.3 JavaScript 媒体播放器　　 142
5.6 视频字幕　　 144
5.6.1 标记时间的文本轨道和WebVTT　　 145
5.6.2 使用<track>添加字幕　　 146
5.6.3 浏览器对视频字幕的支持情况　　 148
第6章　美妙的CSS3 字体和特效　　 149
6.1 使用CSS3 　　 149
6.1.1 选择一：用能用的　　 150
6.1.2 选择二：将CSS 功能作为增强　　 150
6.1.3 选择三：Modernizr　　 151
6.1.4 有开发商前缀的特定于浏览器的样式　　 154
6.2 多变的盒子　　 156
6.2.1 透明　　 157
6.2.2 圆角　　 158
6.2.3 背景　　 159
6.2.4 阴影　　 160
6.2.5 渐变　　 162
6.3 创建过渡效果　　 165
6.3.1 基本的颜色过渡　　 166
6.3.2 更多的过渡思路　　 168
6.3.3 用JavaScript 触发过渡　　 168
6.3.4 变换　　 170
6.3.5 使用变换的过渡　　 173
6.4 Web 字体　　 174
6.4.1 Web 字体格式　　 176
6.4.2 给网站找个字体　　 177
6.4.3 从Font Squirrel 获取免费字体　　 177
6.4.4 准备一个网络字体　　 179
6.4.5 用谷歌更简单地使用Web字体　　 181
6.4.6 多栏文本　　 184
第7章　CSS3 与响应式Web 设计　　 187
7.1 响应式设计基础　　 187
7.1.1 流式布局　　 187
7.1.2 流式图片　　 191
7.1.3 流式排版　　 192
7.1.4 理解视口　　 195
7.2 使用媒体查询适配布局　　 196
7.2.1 媒体查询　　 197
7.2.2 创建简单的媒体查询　　 198
7.2.3 构建移动设备友好的布局　　 199
7.2.4 媒体查询的高级条件　　 202
7.2.5 替换整个样式表　　 204
7.2.6 识别特定的移动设备　　 205
第8章　基本Canvas 绘图　　 207
8.1 Canvas 起步　　 207
8.1.1 画直线　　 210
8.1.2 路径与形状　　 212
8.1.3 绘制曲线　　 214
8.1.4 变换　　 217
8.1.5 透明度　　 220
8.1.6 合成操作　　 221
8.2 构建基本的画图程序　　 223
8.2.1 准备工作　　 224
8.2.2 在画布上绘图　　 225
8.2.3 将画布保存为图像　　 226
8.3 浏览器对Canvas 的支持情况　　 229
8.3.1 用ExplorerCanvas 兼容Canvas　　 230
8.3.2 用FlashCanvas 兼容Canvas　　 230
8.3.3 Canvas 后备及功能检测　　 231
第9章　高级Canvas 技术：交互性和动画　　 233
9.1 高级Canvas 绘图　　 233
9.1.1 绘制图像　　 233
9.1.2 裁剪、切割和伸缩图片　　 235
9.1.3 绘制文本　　 237
9.2 阴影与填充　　 238
9.2.1 添加阴影　　 238
9.2.2 填充图案　　 240
9.2.3 填充渐变　　 241
9.2.4 综合示例：绘制图解　　 245
9.3 赋予图形交互能力　　 249
9.3.1 记录绘制的内容　　 249
9.3.2 基于坐标的碰撞检测　　 252
9.4 给Canvas 添加动画　　 254
9.4.1 基本的动画　　 255
9.4.2 多物体动画　　 256
9.5 实例：迷宫游戏　　 260
9.5.1 布置迷宫　　 261
9.5.2 让笑脸动起来　　 263
9.5.3 基于像素颜色的碰撞检测　　 265
第三部分　构建Web 应用
第10章　数据存储　　 270
10.1 Web 存储简介　　 270
10.1.1 存储数据　　 272
10.1.2 实战：保存游戏中的最后位置　　 274
10.1.3 浏览器对Web 存储的支持情况　　 275
10.2 深入Web 存储　　 276
10.2.1 删除数据项　　 276
10.2.2 查找所有数据项　　 276
10.2.3 保存数值和日期　　 277
10.2.4 保存对象　　 278
10.2.5 响应存储变化　　 279
10.3 读取文件　　 281
10.3.1 取得文件　　 282
10.3.2 用<input>读取文本文件　　 282
10.3.3 替换标准的上传控件　　 284
10.3.4 一次读取多个文件　　 285
10.3.5 通过拖曳读取图片文件　　 285
10.3.6 浏览器对File API 的支持情况　　 288
10.4 IndexDB：浏览器的数据库引擎　　 288
10.4.1 数据对象　　 290
10.4.2 创建并连接数据库　　 291
10.4.3 在数据库中保存数据　　 293
10.4.4 在数据表中查询所有数据　　 295
10.4.5 查询单条数据　　 297
10.4.6 删除一条数据　　 298
10.4.7 浏览器对IndexedDB 的支持情况　　 299
第11章　离线应用　　 300
11.1 通过描述文件缓存资源　　 301
11.1.1 创建描述文件　　 302
11.1.2 使用描述文件　　 303
11.1.3 把描述文件放到Web 服务器　　 304
11.1.4 更新描述文件　　 306
11.1.5 浏览器对离线应用的支持情况　　 308
11.2 实用缓存技术　　 309
11.2.1 访问未缓存的文件　　 309
11.2.2 添加后备内容　　 310
11.2.3 检测连接　　 312
11.2.4 用JavaScript 监听更新　　 313
第12章　与Web 服务器通信　　 317
12.1 向Web 服务器发送消息　　 317
12.1.1 XMLHttpRequest 对象　　 318
12.1.2 向Web 服务器提问　　 319
12.1.3 取得新内容　　 323
12.2 服务器发送事件　　 326
12.2.1 消息格式　　 327
12.2.2 通过服务器脚本发送消息　　 328
12.2.3 在网页中处理消息　　 330
12.2.4 轮询服务器端事件　　 331
12.3 Web Socket　　 333
12.3.1 Web Socket 服务器　　 333
12.3.2 简单的Web Socket 客户端　　 334
12.3.3 使用现成的Web Socket服务器　　 335
第13章　地理定位、Web Worker 和历史管理　　 339
13.1 地理定位　　 339
13.1.1 地理定位的基本原理　　 340
13.1.2 查找访客的坐标　　 342
13.1.3 处理错误　　 344
13.1.4 设置地理定位选项　　 345
13.1.5 显示地图　　 346
13.1.6 跟踪访客移动　　 349
13.1.7 浏览器对地理定位的兼容情况　　 349
13.2 Web Worker　　 350
13.2.1 费时的任务　　 351
13.2.2 把任务放在后台　　 353
13.2.3 处理Worker 错误　　 356
13.2.4 取消后台任务　　 356
13.2.5 传递复杂消息　　 357
13.2.6 浏览器对Web Worker 的兼容情况　　 359
13.3 历史管理　　 360
13.3.1 URL 问题　　 361
13.3.2 以往的解决方案：hashbang URL　　 362
13.3.3 HTML5 的方案：会话历史　　 363
13.3.4 浏览器对会话历史的支持情况　　 366
第四部分　附 录
附录A　CSS 基础　　 368
附录B　JavaScript：页面的大脑　　 381
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5秘籍（第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>ECMAScript6入门
第一章ECMAScript6简介............................  1
ECMAScript和JavaScript的关系    3
ECMAScript的历史    4
部署进度    5Traceur编译器    7
ECMAScript7    11
第二章let和const命令..............................13
let命令    15
块级作用域    17
const命令    19
第三章 变量的解构赋值..............................21
数组的解构赋值    23
对象的解构赋值    25
用途    27
第四章 字符串的扩展 ................................31
codePointAt方法    33
String.fromCodePoint方法    34
字符的Unicode表示法    35
正则表达式的u修饰符    36
contains(),startsWith(),endsWith()    36
repeat()    37
正则表达式的y修饰符    38
模板字符串    39
第五章 数值的扩展 ..................................41
二进制和八进制数值表示法    43
Number.isFinite(),Number.isNaN()    43
Number.parseInt(),Number.parseFloat()    44
Number.isInteger()和安全整数    44
Math对象的扩展    45
Math.trunc()    45
数学方法    45
第六章 数组的扩展 ..................................47
Array.from()    49
Array.of()    50
数组实例的fnd()和fndIndex()    50
数组实例的fll()    51
数组实例的entries()，keys()和values()    52
数组推导    53
Array.observe()，Array.unobserve()    55
第七章 对象的扩展 ..................................57
Object.is()    59
Object.assign()    59
__proto__属性，Object.setPrototypeOf()，
Object.getPrototypeOf()    60
__proto__属性    60
Object.setPrototypeOf()    61
Object.getPrototypeOf()    61
增强的对象写法    62
属性名表达式    63Symbol    64
Proxy    66Object.observe()，Object.unobserve()    68
第八章 函数的扩展 ..................................71
函数参数的默认值    73rest参数    74
扩展运算符    75箭头函数    77
第九章 Set和Map数据结构..........................81Set    83Map    86
基本用法    86
属性和方法    88
遍历    89WeakMap    91
第十章Iterator和for...of循环.......................93
Iterator（遍历器）    95for...of循环    97
第十一章Generator函数..............................103
含义    105
next方法的参数    108
异步操作的应用    109
for...of循环    112
yield*语句    112
第十二章Promise对象 ...............................115
基本用法    117
链式操作    120
catch方法：捕捉错误    121
Promise.all方法    121
Promise.resolve方法    122
async函数    123
第13章  Class和Module.............................125
Class    127
Module的基本用法    129
export和import    129
模块的整体加载    130
exportdefault语句    131
模块的继承    132
参考链接.............................................135
索引.................................................143
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>ECMAScript6入门
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>ES6标准入门（第3版）
第1章 ECMAScript 6简介 1
1.1 ECMAScript和JavaScript的关系 1
1.2 ES6与ECMAScript 2015的关系 1
1.3 语法提案的批准流程 2
1.4 ECMAScript的历史 3
1.5 部署进度 4
1.6 Babel 转码器 4
1.6.1 配置文件.babelrc 5
1.6.2 命令行转码babel-cli 6
1.6.3 babel-node 7
1.6.4 babel-register 8
1.6.5 babel-core 8
1.6.6 babel-polyfill 9
1.6.7 浏览器环境 10
1.6.8 在线转换 10
1.6.9 与其他工具的配合 11
1.7 Traceur转码器 11
1.7.1 直接插入网页 12
1.7.2 在线转换 13
1.7.3 命令行转换 14
1.7.4 Node环境的用法 15
第2章 let和const命令 17
2.1 let 命令 17
2.1.1 基本用法 17
2.1.2 不存在变量提升 19
2.1.3 暂时性死区 19
2.1.4 不允许重复声明 21
2.2 块级作用域 22
2.2.1 为什么需要块级作用域 22
2.2.2 ES6的块级作用域 23
2.2.3 块级作用域与函数声明 24
2.2.4 do表达式 27
2.3 const命令 28
2.3.1 基本用法 28
2.3.2 本质 29
2.3.3 ES6声明变量的6种方法 30
2.4 顶层对象的属性 30
2.5 global对象 31
第3章 变量的解构赋值 33
3.1 数组的解构赋值 33
3.1.1 基本用法 33
3.1.2 默认值 35
3.2 对象的解构赋值 37
3.3 字符串的解构赋值 41
3.4 数值和布尔值的解构赋值 41
3.5 函数参数的解构赋值 42
3.6 圆括号问题 43
3.6.1 不能使用圆括号的情况 43
3.6.2 可以使用圆括号的情况 44
3.7 用途 44
第4章 字符串的扩展 49
4.1 字符的Unicode表示法 49
4.2 codePointAt() 50
4.3 String.fromCodePoint() 52
4.4 字符串的遍历器接口 52
4.5 at() 53
4.6 normalize() 53
4.7 includes()、startsWith()、endsWith() 54
4.8 repeat() 55
4.9 padStart()、padEnd() 56
4.10 模板字符串 57
4.11 实例：模板编译 60
4.12 标签模板 62
4.13 String.raw() 67
4.14 模板字符串的限制 68
第5章 正则的扩展 71
5.1 RegExp构造函数 71
5.2 字符串的正则方法 72
5.3 u修饰符 72
5.4 y修饰符 74
5.5 sticky属性 77
5.6 flags属性 77
5.7 s修饰符：dotAll模式 78
5.8 后行断言 79
5.9 Unicode属性类 80
5.10 具名组匹配 81
5.10.1 简介 81
5.10.2 解构赋值和替换 82
5.10.3 引用 83
第6章 数值的扩展 85
6.1 二进制和八进制表示法 85
6.2 Number.isFinite()、Number.isNaN() 86
6.3 Number.parseInt()、Number.parseFloat() 87
6.4 Number.isInteger() 88
6.5 Number.EPSILON 88
6.6 安全整数和Number.isSafeInteger() 89
6.7 Math对象的扩展 92
6.7.1 Math.trunc() 92
6.7.2 Math.sign() 92
6.7.3 Math.cbrt() 93
6.7.4 Math.clz32() 94
6.7.5 Math.imul() 95
6.7.6 Math.fround() 95
6.7.7 Math.hypot() 96
6.7.8 对数方法 96
6.7.9 双曲函数方法 98
6.8 Math.signbit() 98
6.9 指数运算符 99
6.10 Integer数据类型 99
6.10.1 简介 99
6.10.2 运算 100
第7章 函数的扩展 103
7.1 函数参数的默认值 103
7.1.1 基本用法 103
7.1.2 与解构赋值默认值结合使用 105
7.1.3 参数默认值的位置 107
7.1.4 函数的length属性 108
7.1.5 作用域 108
7.1.6 应用 111
7.2 rest参数 112
7.3 严格模式 113
7.4 name属性 115
7.5 箭头函数 116
7.5.1 基本用法 116
7.5.2 注意事项 118
7.5.3 嵌套的箭头函数 121
7.6 绑定this 123
7.7 尾调用优化 124
7.7.1 什么是尾调用 124
7.7.2 尾调用优化 125
7.7.3 尾递归 126
7.7.4 递归函数的改写 128
7.7.5 严格模式 129
7.7.6 尾递归优化的实现 129
7.8 函数参数的尾逗号 132
第8章 数组的扩展 133
8.1 扩展运算符 133
8.1.1 含义 133
8.1.2 替代数组的apply方法 134
8.1.3 扩展运算符的应用 136
8.2 Array.from() 139
8.3 Array.of() 142
8.4 数组实例的copyWithin() 143
8.5 数组实例的find()和findIndex() 144
8.6 数组实例的fill() 145
8.7 数组实例的entries()、keys()和values() 145
8.8 数组实例的includes() 146
8.9 数组的空位 147
第9章 对象的扩展 151
9.1 属性的简洁表示法 151
9.2 属性名表达式 154
9.3 方法的name属性 156
9.4 Object.is() 157
9.5 Object.assign() 158
9.5.1 基本用法 158
9.5.2 注意点 160
9.5.3 常见用途 161
9.6 属性的可枚举性 163
9.7 属性的遍历 165
9.8 __proto__ 属性、Object.setPrototypeOf()、Object.getPrototypeOf() 166
9.8.1 __proto__ 属性 166
9.8.2 Object.setPrototypeOf() 167
9.8.3 Object.getPrototypeOf() 168
9.9 Object.keys()、Object.values()、Object.entries() 169
9.9.1 Object.keys() 169
9.9.2 Object.values() 170
9.9.3 Object.entries 171
9.10 对象的扩展运算符 173
9.11 Object.getOwnPropertyDescriptors() 177
9.12 Null传导运算符 181
第10章 Symbol 183
10.1 概述 183
10.2 作为属性名的Symbol 185
10.3 实例：消除魔术字符串 188
10.4 属性名的遍历 189
10.5 Symbol.for()、Symbol.keyFor() 191
10.6 实例：模块的Singleton模式 192
10.7 内置的Symbol值 194
10.7.1 Symbol.hasInstance 194
10.7.2 Symbol.isConcatSpreadable 195
10.7.3 Symbol.species 196
10.7.4 Symbol.match 197
10.7.5 Symbol.replace 197
10.7.6 Symbol.search 198
10.7.7 Symbol.split 198
10.7.8 Symbol.iterator 199
10.7.9 Symbol.toPrimitive 200
10.7.10 Symbol.toStringTag 201
10.7.11 Symbol.unscopables 202
第11章 Set和Map数据结构 205
11.1 Set 205
11.1.1 基本用法 205
11.1.2 Set实例的属性和方法 207
11.1.3 遍历操作 208
11.2 WeakSet 212
11.2.1 含义 212
11.2.2 语法 212
11.3 Map 214
11.3.1 含义和基本用法 214
11.3.2 实例的属性和操作方法 218
11.3.3 遍历方法 220
11.3.4 与其他数据结构的互相转换 222
11.4 WeakMap 225
11.4.1 含义 225
11.4.2 WeakMap的语法 227
11.4.3 WeakMap示例 228
11.4.4 WeakMap的用途 229
第12章 Proxy 233
12.1 概述 233
12.2 Proxy实例的方法 237
12.2.1 get() 237
12.2.2 set() 241
12.2.3 apply() 243
12.2.4 has() 244
12.2.5 construct() 246
12.2.6 deleteProperty() 247
12.2.7 defineProperty() 248
12.2.8 getOwnPropertyDescriptor() 248
12.2.9 getPrototypeOf() 249
12.2.10 isExtensible() 249
12.2.11 ownKeys() 250
12.2.12 preventExtensions() 254
12.2.13 setPrototypeOf() 255
12.3 Proxy.revocable() 255
12.4 this问题 256
12.5 实例：Web服务的客户端 258
第13章 Reflect 259
13.1 概述 259
13.2 静态方法 261
13.2.1 Reflect.get(target, name, receiver) 262
13.2.2 Reflect.set(target, name, value, receiver) 263
13.2.3 Reflect.has(obj, name) 264
13.2.4 Reflect.deleteProperty(obj, name) 265
13.2.5 Reflect.construct(target, args) 265
13.2.6 Reflect.getPrototypeOf(obj) 265
13.2.7 Reflect.setPrototypeOf(obj, newProto) 266
13.2.8 Reflect.apply(func, thisArg, args) 267
13.2.9 Reflect.defineProperty(target, propertyKey, attributes) 267
13.2.10 Reflect.getOwnPropertyDescriptor (target, propertyKey) 268
13.2.11 Reflect.isExtensible (target) 268
13.2.12 Reflect.preventExtensions(target) 269
13.2.13 Reflect.ownKeys (target) 269
13.3 实例：使用Proxy实现观察者模式 270
第14章 Promise对象 273
14.1 Promise的含义 273
14.2 基本用法 274
14.3 Promise.prototype.then() 278
14.4 Promise.prototype.catch() 279
14.5 Promise.all() 285
14.6 Promise.race() 287
14.7 Promise.resolve() 288
14.8 Promise.reject() 290
14.9 两个有用的附加方法 291
14.9.1 done() 291
14.9.2 finally() 292
14.10 应用 292
14.10.1 加载图片 292
14.10.2 Generator函数与Promise的结合 293
14.11 Promise.try() 294
第15章 Iterator和for...of循环 297
15.1 Iterator（遍历器）的概念 297
15.2 默认Iterator接口 300
15.3 调用Iterator接口的场合 305
15.4 字符串的Iterator接口 307
15.5 Iterator接口与Generator函数 308
15.6 遍历器对象的return()、throw() 309
15.7 for...of循环 310
15.7.1 数组 310
15.7.2 Set和Map结构 311
15.7.3 计算生成的数据结构 312
15.7.4 类似数组的对象 313
15.7.5 对象 314
15.7.6 与其他遍历语法的比较 315
第16章 Generator函数的语法 317
16.1 简介 317
16.1.1 基本概念 317
16.1.2 yield表达式 319
16.1.3 与Iterator接口的关系 322
16.2 next方法的参数 323
16.3 for...of循环 325
16.4 Generator.prototype.throw() 328
16.5 Generator.prototype.return() 334
16.6 yield*表达式 335
16.7 作为对象属性的Generator函数 342
16.8 Generator函数this 342
16.9 含义 345
16.9.1 Generator与状态机 345
16.9.2 Generator与协程 346
16.10 应用 347
16.10.1 异步操作的同步化表达 347
16.10.2 控制流管理 348
16.10.3 部署Iterator接口 351
16.10.4 作为数据结构 352
第17章 Generator函数的异步应用 355
17.1 传统方法 355
17.2 基本概念 355
17.2.1 异步 355
17.2.2 回调函数 356
17.2.3 Promise 356
17.3 Generator函数 357
17.3.1 协程 357
17.3.2 协程的Generator函数实现 358
17.3.3 Generator函数的数据交换和错误处理 359
17.3.4 异步任务的封装 360
17.4 Thunk函数 361
17.4.1 参数的求值策略 361
17.4.2 Thunk函数的含义 362
17.4.3 JavaScript语言的Thunk函数 362
17.4.4 Thunkify模块 364
17.4.5 Generator函数的流程管理 365
17.4.6 Thunk函数的自动流程管理 367
17.5 co模块 368
17.5.1 基本用法 368
17.5.2 co模块的原理 369
17.5.3 基于Promise对象的自动执行 369
17.5.4 co模块的源码 371
17.5.5 处理并发的异步操作 372
17.6 实例：处理 Stream 373
第18章 async函数 375
18.1 含义 375
18.2 用法 377
18.3 语法 379
18.3.1 返回Promise对象 379
18.3.2 Promise对象的状态变化 379
18.3.3 await命令 380
18.3.4 错误处理 382
18.3.5 使用注意点 383
18.4 async函数的实现原理 386
18.5 其他异步处理方法的比较 387
18.6 实例：按顺序完成异步操作 388
18.7 异步遍历器 390
18.7.1 异步遍历的接口 390
18.7.2 for await...of 392
18.7.3 异步Generator函数 393
18.7.4 yield*语句 398
第19章 Class的基本语法 399
19.1 简介 399
19.2 严格模式 403
19.3 constructor方法 403
19.4 类的实例对象 404
19.5 Class表达式 406
19.6 不存在变量提升 407
19.7 私有方法 408
19.8 私有属性 409
19.9 this的指向 410
19.10 name属性 412
19.11 Class的取值函数（getter）和存值函数（setter） 412
19.12 Class的Generator方法 413
19.13 Class的静态方法 414
19.14 Class的静态属性和实例属性 415
19.14.1 Class的实例属性 416
19.14.2 Class的静态属性 417
19.15 new.target属性 418
第20章 Class的继承 421
20.1 简介 421
20.2 Object.getPrototypeOf() 423
20.3 super关键字 423
20.4 类的prototype属性和 __proto__ 属性 429
20.4.1 extends的继承目标 430
20.4.2 实例的 __proto__ 属性 432
20.5 原生构造函数的继承 432
20.6 Mixin模式的实现 436
第21章 修饰器 439
21.1 类的修饰 439
21.2 方法的修饰 442
21.3 为什么修饰器不能用于函数 444
21.4 core-decorators.js 446
21.5 使用修饰器实现自动发布事件 449
21.6 Mixin 450
21.7 Trait 453
21.8 Babel转码器的支持 456
第22章 Module的语法 457
22.1 概述 457
22.2 严格模式 458
22.3 export命令 459
22.4 import命令 462
22.5 模块的整体加载 464
22.6 export default命令 465
22.7 export与import的复合写法 468
22.8 模块的继承 469
22.9 跨模块常量 470
22.10 import() 471
22.10.1 简介 471
22.10.2 适用场合 472
22.10.3 注意点 473
第23章 Module的加载实现 475
23.1 浏览器加载 475
23.1.1 传统方法 475
23.1.2 加载规则 476
23.2 ES6模块与CommonJS模块的差异 477
23.3 Node加载 481
23.3.1 概述 481
23.3.2 import命令加载CommonJS模块 482
23.3.3 require命令加载ES6模块 484
23.4 循环加载 485
23.4.1 CommonJS模块的加载原理 485
23.4.2 CommonJS模块的循环加载 486
23.4.3 ES6模块的循环加载 488
23.5 ES6模块的转码 492
23.5.1 ES6 module transpiler 492
23.5.2 SystemJS 492
第24章 编程风格 495
24.1 块级作用域 495
24.1.1 let取代var 495
24.1.2 全局常量和线程安全 496
24.2 字符串 497
24.3 解构赋值 497
24.4 对象 498
24.5 数组 500
24.6 函数 501
24.7 Map结构 503
24.8 Class 503
24.9 模块 504
24.10 ESLint的使用 506
第25章 读懂ECMAScript规格 509
25.1 概述 509
25.2 相等运算符 510
25.3 数组的空位 511
25.4 数组的map方法 513
第26章 ArrayBuffer 517
26.1 ArrayBuffer对象 518
26.1.1 概述 518
26.1.2 ArrayBuffer.prototype.byteLength 520
26.1.3 ArrayBuffer.prototype.slice() 520
26.1.4 ArrayBuffer.isView() 520
26.2 TypedArray视图 521
26.2.1 概述 521
26.2.2 构造函数 522
26.2.3 数组方法 524
26.2.4 字节序 526
26.2.5 BYTES_PER_ELEMENT属性 528
26.2.6 ArrayBuffer与字符串的互相转换 528
26.2.7 溢出 529
26.2.8 TypedArray.prototype.buffer 531
26.2.9 TypedArray.prototype.byteLength、TypedArray. prototype.byteOffset 531
26.2.10 TypedArray.prototype.length 531
26.2.11 TypedArray.prototype.set() 532
26.2.12 TypedArray.prototype.subarray() 532
26.2.13 TypedArray.prototype.slice() 532
26.2.14 TypedArray.of() 533
26.2.15 TypedArray.from() 533
26.3 复合视图 534
26.4 DataView视图 535
26.5 二进制数组的应用 537
26.5.1 AJAX 537
26.5.2 Canvas 538
26.5.3 WebSocket 539
26.5.4 Fetch API 539
26.5.5 File API 539
26.6 SharedArrayBuffer 541
26.7 Atomics对象 543
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>ES6标准入门（第3版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node.js：来一打 C++ 扩展
1 Node.js 的 C++ 扩展前驱知识储备 1
1.1 Node.js 的模块机制 2
1.1.1 CommonJS 的模块规范 2
1.1.2 Node.js 的模块 4
1.1.3 小结 9
1.1.4 参考资料 9
1.2 Node.js 的包机制 9
1.2.1 CommonJS 的包规范 9
1.2.2 Node.js / NPM 下的包 13
1.2.3 NPM 与 CNPM 16
1.2.4 小结 19
1.2.5 参考资料 19
1.3 Node.js 依赖简介 20
1.3.1 Chrome V8 20
1.3.2 libuv 25
1.3.3 其他依赖 28
1.3.4 小结 30
1.3.5 参考资料 30
1.4 C++ 扩展开发的准备工作 31
1.4.1 编辑器 / IDE 31
1.4.2 node-gyp 36
1.4.3 其他构建工具 54
1.4.4 小结 56
1.4.5 参考资料 56
2 C++ 模块原理简析 57
2.1 为什么要写 C++ 模块 57
2.1.1 C++ 比 JavaScript 解释器高效 57
2.1.2 已有的 C++ 轮子 72
2.1.3 小结 77
2.1.4 参考资料 77
2.2 什么是 C++ 扩展 78
2.2.1 C++ 模块本质 78
2.2.2 Node.js 模块加载原理 80
2.2.3 小结 102
2.2.4 参考资料 103
3 Chrome V8 基础 104
3.1 Node.js 与 Chrome V8 104
3.2 基本概念 105
3.2.1 内存机制 105
3.2.2 隔离实例（Isolate） 108
3.2.3 上下文（Context） 109
3.2.4 脚本（Script） 110
3.2.5 小结 110
3.2.6 参考资料 111
3.3 句柄（Handle） 111
3.3.1 本地句柄（Local） 112
3.3.2 持久句柄（Persistent） 115
3.3.3 永生句柄（Eternal） 119
3.3.4 待实本地句柄（Maybe Local） 119
3.3.5 小结 121
3.3.6 参考资料 121
3.4 句柄作用域 121
3.4.1 一般句柄作用域（Handle Scope） 122
3.4.2 可逃句柄作用域（Escapable Handle Scope） 125
3.4.3 小结 129
3.4.4 参考资料 129
3.5 上下文（Context） 129
3.6 模板（Template） 133
3.6.1 函数模板（Function Template） 133
3.6.2 对象模板（Object Template） 138
3.6.3 对象模板的访问器（Accessor）与拦截器（Interceptor） 144
3.6.4 对象模板的内置字段（Internal Field） 175
3.6.5 函数模板的继承（Inherit） 183
3.6.6 小结 188
3.6.7 参考资料 189
3.7 常用数据类型 189
3.7.1 基值（Value） 189
3.7.2 字符串（String） 194
3.7.3 数值类型 196
3.7.4 布尔类型（Boolean） 196
3.7.5 对象（Object） 196
3.7.6 函数（Function） 200
3.7.7 数组（Array） 202
3.7.8 JSON 解析器 203
3.7.9 函数回调信息（Function Callback Info） 203
3.7.10 函数返回值（Return Value） 204
3.7.11 隔离实例（Isolate） 204
3.7.12 小结 205
3.7.13 参考资料 206
3.8 异常机制 206
3.8.1 try-catch 206
3.8.2 抛出异常 209
3.8.3 异常生成类（Exception） 211
3.8.4 小结 211
3.8.5 参考资料 211
4 C++ 扩展实战初探 212
4.1 binding.gyp 212
4.1.1 惊鸿一瞥 213
4.1.2 binding.gyp 基础结构 213
4.1.3 GYP 文件 214
4.1.4 常用字段 221
4.1.5 小结 228
4.1.6 参考资料 228
4.2 牛刀小试 229
4.2.1 又是 Hello World 229
4.2.2 函数参数 232
4.2.3 回调函数 234
4.2.4 函数返回 238
4.2.5 小结 239
4.2.6 参考资料 240
4.3 循序渐进 240
4.3.1 C++ 与 JavaScript 类封装 240
4.3.2 实例化 C++ 类封装对象的函数 250
4.3.3 将 C++ 类封装对象传来传去 253
4.3.4 进程退出钩子 255
4.3.5 小结 259
4.3.6 参考资料 259
5 Node.js 原生抽象——NAN 260
5.1 Node.js 原生模块开发方式的变迁 260
5.1.1 以不变应万变 260
5.1.2 时代在召唤 261
5.1.3 小结 267
5.1.4 参考资料 267
5.2 基础开发 267
5.2.1 什么是 NAN 267
5.2.2 安装和配置 269
5.2.3 先睹为快——搭上NAN 的快车 270
5.2.4 基础帮助函数和宏 276
5.2.5 忽略 node_modules 279
5.2.6 小结 279
5.2.7 参考资料 280
5.3 JavaScript 函数 280
5.3.1 函数参数类型 280
5.3.2 函数声明 282
5.3.3 函数设置 288
5.3.4 小结 296
5.3.5 参考资料 296
5.4 常用帮助类与函数 296
5.4.1 句柄相关 296
5.4.2 创建数据对象 298
5.4.3 与数据对象“玩耍” 300
5.4.4 封装一个类 314
5.4.5 异常处理 315
5.4.6 小结 315
5.4.7 参考资料 316
5.5 NAN 中的异步机制 316
5.5.1 Nan::AsyncQueueWorker 316
5.5.2 Nan::Callback 317
5.5.3 Nan::AsyncWorker 317
5.5.4 Nan::AsyncProgressWorker 323
5.5.5 小结 327
5.5.6 参考资料 327
6 异步之旅——libuv 328
6.1 基础概念 329
6.1.1 事件循环 330
6.1.2 句柄（Handle）与请求（Request） 333
6.1.3 尝尝甜头 335
6.1.4 小结 340
6.1.5 参考资料 340
6.2 libuv 的跨线程编程基础 341
6.2.1 libuv 的线程 342
6.2.2 同步原语（Synchronization Primitive） 347
6.2.3 工作队列 355
6.2.4 小结 356
6.2.5 参考资料 357
6.3 跨线程通信 357
6.3.1 uv_async_t 句柄 357
6.3.2 Watchdog 半成品实战解析 358
6.3.3 Watchdog 试运行 367
6.3.4 小结 368
6.3.5 参考资料 369
7 实战——文件监视器 370
7.1 准备工作 370
7.1.1 功能规划 370
7.1.2 文件系统监听库——efsw 373
7.1.3 小结 376
7.1.4 参考资料 376
7.2 核心设计 376
7.2.1 API 设计 377
7.2.2 EFSWCore 的血肉之躯 377
7.2.3 EFSWCore 的灵魂 381
7.2.4 小结 385
7.3 编写JavaScript 类 386
7.3.1 类的设计 386
7.3.2 核心逻辑 388
7.3.3 简单容错 391
7.3.4 小结 393
7.4 进一步完善 393
7.4.1 C++ 代码的完善 393
7.4.2 JavaScript 代码的完善 398
7.4.3 小结 400
8 实战——现有包剖析 401
8.1 字符串哈希模块——Bling Hashes 401
8.1.1 文件设定 402
8.1.2 C++ 源码剖析 403
8.1.3 JavaScript 源码剖析 408
8.1.4 小结 409
8.1.5 参考资料 410
8.2 类 Proxy 包——Auto Object 410
8.2.1 Proxy 410
8.2.2 Auto Object 使用范例 412
8.2.3 代码剖析 415
8.2.4 小结 424
8.2.5 参考资料 424
9 N-API——下一代 Node.js C++ 扩展开发方式 425
9.1 浅尝辄止 426
9.1.1 实现一个 Echo 函数 426
9.1.2 尝试运行 N-API 扩展 430
9.1.3 向下兼容 431
9.1.4 N-API Package——C++ 封装 433
9.1.5 小结 433
9.1.6 参考资料 433
9.2 基本数据类型与错误处理 433
9.2.1 基本数据类型 433
9.2.2 与作用域及生命周期相关的数据类型 435
9.2.3 回调数据类型 438
9.2.4 错误处理 439
9.2.5 模块注册 441
9.2.6 小结 442
9.2.7 参考资料 442
9.3 对象与函数 442
9.3.1 对象 442
9.3.2 函数 448
9.3.3 类的封装 453
9.3.4 小结 455
9.3.5 参考资料 455
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node.js：来一打 C++ 扩展
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5高级程序设计
第1章 HTML5概述        1
1.1 HTML5发展史        1
1.2 关于2022年的那个神话        2
1.3 谁在开发HTML5        3
1.4 新的认识        3
1.4.1 兼容性和存在即合理        3
1.4.2 效率和用户优先        4
1.4.3 化繁为简        4
1.4.4 通用访问        5
1.5 无插件范式        5
1.6 HTML5的新功能        8
1.6.1 新的DOCTYPE和字符集        8
1.6.2 新元素和旧元素        9
1.6.3 语义化标记        9
1.6.4 使用Selectors API简化选取操作        15
1.6.5 JavaScript日志和调试        18
1.6.6 window.JSON        19
1.6.7 DOM Level 3        19
1.6.8 Monkeys、Squirrelfish和其他JavaScript引擎        19
1.7 小结        20
第2章 Canvas API        22
2.1 HTML5 Canvas概述        22
2.1.1 历史        22
2.1.2 canvas是什么        23
2.1.3 canvas坐标        23
2.1.4 什么情况下不用canvas        24
2.1.5 替代内容        24
2.1.6 CSS和canvas        24
2.1.7 浏览器对HTML5 Canvas的支持        25
2.2 使用HTML5 Canvas API        25
2.2.1 检测浏览器支持情况        25
2.2.2 在页面中加入canvas        26
2.2.3 变换        28
2.2.4 路径        30
2.2.5 描边样式        32
2.2.6 填充样式        33
2.2.7 填充矩形区域        34
2.2.8 绘制曲线        35
2.2.9 在canvas中插入图片        36
2.2.10 渐变        37
2.2.11 背景图        39
2.2.12 缩放canvas对象        41
2.2.13 Canvas变换        42
2.2.14 Canvas文本        43
2.2.15 应用阴影        45
2.2.16 像素数据        46
2.2.17 Canvas的安全机制        48
2.3 使用HTML5 Canvas创建应用        48
2.4 小结        52
第3章 音频和视频        53
3.1 HTML5 Audio和Video概述        53
3.1.1 视频容器        53
3.1.2 音频和视频编解码器        54
3.1.3 HTML5 Audio和Video的限制        55
3.1.4 audio元素和video元素的浏览器支持情况        56
3.2 使用HTML5 Audio和Video API        56
3.2.1 浏览器支持性检测        57
3.2.2 理解媒体元素        58
3.2.3 使用audio元素        62
3.2.4 使用video元素        63
3.2.5 进阶功能        68
3.3 小结        70
第4章 Geolocation API        72
4.1 位置信息        72
4.1.1 纬度和经度坐标        73
4.1.2 位置信息从何而来        73
4.1.3 IP地址地理定位数据        74
4.1.4 GPS地理定位数据        74
4.1.5 Wi-Fi地理定位数据        74
4.1.6 手机地理定位数据        75
4.1.7 用户自定义的地理定位数据        75
4.2 HTML5 Geolocation的浏览器支持情况        75
4.3 隐私        76
4.3.1 触发隐私保护机制        77
4.3.2 处理位置信息        78
4.4 使用HTML5 Geolocation API        78
4.4.1 浏览器支持性检查        78
4.4.2 位置请求        79
4.5 使用HTML5 Geolocation构建实时应用        83
4.5.1 编写HTML显示代码        84
4.5.2 处理Geolocation数据        85
4.5.3 最终代码        88
4.6 进阶功能        90
4.6.1 现在的状态是什么        91
4.6.2 在Goolge Map上显示“我在这里”        92
4.7 小结        93
第5章 Communication API        94
5.1 跨文档消息通信        94
5.1.1 理解源安全        96
5.1.2 跨文档消息通信的浏览器支持情况        97
5.1.3 使用postMessage API        97
5.1.4 使用postMessage API创建应用        98
5.2 XMLHttpRequest Level 2        103
5.2.1 跨源XMLHttpRequest        104
5.2.2 进度事件        105
5.2.3 XMLHttpRequest Level 2的浏览器支持情况        106
5.2.4 使用XMLHttpRequest API        106
5.2.5 创建XMLHttpRequest应用        107
5.3 进阶功能        111
5.3.1 结构化的数据        111
5.3.2 Framebusting        111
5.4 小结        112
第6章 WebSockets API        113
6.1 HTML5 WebSockets概述        113
6.1.1 实时和HTTP        113
6.1.2 解读HTML5 WebSockets        115
6.2 HTML5 WebSockets的浏览器支持情况        120
6.3 编写简单的Echo WebSocket服务器        120
6.4 使用HTML5 WebSockets API        126
6.4.1 浏览器支持情况检测        126
6.4.2 API的基本用法        127
6.5 创建HTML5 WebSockets应用程序        130
6.5.1 编写HTML文件        131
6.5.2 添加WebSocket代码        133
6.5.3 添加Geolocation代码        133
6.5.4 合并所有内容        134
6.5.5 最终代码        136
6.6 小结        138
第7章 Forms API        139
7.1 HTML5 Forms概述        139
7.1.1 HTML Forms与XForms        139
7.1.2 功能性表单        140
7.1.3 HTML5 Forms的浏览器支持情况        140
7.1.4 输入型控件目录        141
7.2 使用HTML5 Forms API        144
7.2.1 新的表单特性和函数        144
7.2.2 表单验证        147
7.2.3 验证反馈        151
7.3 构建HTML5 Forms应用        152
7.4 小结        157
第8章 Web Workers API        158
8.1 HTML5 Web Workers的浏览器支持情况        158
8.2 使用HTML5 Web Workers API        159
8.2.1 浏览器支持性检查        159
8.2.2 创建HTML5 Web Workers        160
8.2.3 多个JavaScript文件的加载与执行        160
8.2.4 与HTML5 Web Workers通信        160
8.3 编写主页        161
8.3.1 处理错误        161
8.3.2 HTML5 Web Workers        162
8.3.3 HTML5 Web Workers的嵌套使用        162
8.3.4 使用定时器        163
8.3.5 示例代码        163
8.4 构建HTML5 Web Workers应用        164
8.4.1 编写blur.js辅助脚本        165
8.4.2 编写blur.html应用页面        166
8.4.3 编写blurWorker.js        167
8.4.4 与Web Worker通信        168
8.4.5 运行程序        169
8.4.6 示例代码        170
8.5 小结        174
第9章 Web Storage API        175
9.1 HTML5 Web Storage概述        175
9.2 HTML5 Web Storage的浏览器支持情况        176
9.3 使用HTML5 Web Storage API        176
9.3.1 检查浏览器的支持性        176
9.3.2 设置和获取数据        178
9.3.3 封堵数据泄漏        179
9.3.4 localStorage与session-Storage        180
9.3.5 Web Storage API的其他特性和函数        180
9.3.6 更新Web Storage后的通信        182
9.3.7 探索Web Storage        183
9.4 构建HTML5 Web Storage应用        184
9.5 浏览器数据库存储展望        195
9.6 进阶功能        197
9.6.1 JSON对象的存储        198
9.6.2 共享窗口        198
9.7 小结        200
第10章 构建离线Web应用        201
10.1 HTML5离线Web应用概述        201
10.2 使用HTML5离线Web应用API        203
10.2.1 检查浏览器的支持情况        203
10.2.2 搭建简单的离线应用程序        203
10.2.3 支持离线行为        204
10.2.4 manifest文件        204
10.2.5 applicationCache API        205
10.3 使用HTML5离线Web应用构建应用        206
10.3.1 创建记录资源的manifest文件        208
10.3.2 创建构成界面的HTML和CSS        208
10.3.3 创建离线JavaScript        209
10.3.4 检查applicationCache的支持情况        210
10.3.5 为Update按钮添加处理函数        211
10.3.6 添加Geolocation跟踪代码        211
10.3.7 添加Storage功能代码        212
10.3.8 添加离线事件处理程序        212
10.4 小结        213
第11章 HTML5未来展望        214
11.1 HTML5的浏览器支持情况        214
11.2 HTML未来的发展        214
11.2.1 WebGL        215
11.2.2 设备        217
11.2.3 音频数据API        217
11.2.4 视频元素改进        218
11.2.5 触摸屏设备事件        218
11.2.6 P2P网络        220
11.2.7 最终方向        221
11.3 小结        221
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5高级程序设计
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>编写高质量代码
推荐序
赞　誉
前　言
致　谢
第1章　从网站重构说起/1
1.1　糟糕的页面实现，头疼的维护工作/2
1.2　Web标准—结构、样式和行为的分离/4
1.3　前端的现状/6
1.4　打造高品质的前端代码，提高代码的可维护性—精简、重用、有序/8
第2章　团队合作/9
2.1　揭秘前端开发工程师/10
2.2　欲精一行，必先通十行/13
2.3　增加代码可读性—注释/15
2.4　提高重用性—公共组件和私有组件的维护/15
2.5　冗余和精简的矛盾—选择集中还是选择分散/16
2.6　磨刀不误砍柴工—前期的构思很重要/17
2.7　制订规范/18
2.8　团队合作的最大难度不是技术，是人/18
第3章　高质量的HTML/19
3.1　标签的语义/20
3.2　为什么要使用语义化标签/21
3.3　如何确定你的标签是否语义良好/26
3.4　常见模块你真的很了解吗/36
3.4.1　标题和内容/36
3.4.2　表单/38
3.4.3　表格/40
3.4.4　语义化标签应注意的一些其他问题/43
第4章　高质量的CSS/44
4.1　怪异模式和DTD/45
4.2　如何组织CSS/46
4.3　推荐的base.css/49
4.4　模块化CSS—在CSS中引入面向对象编程思想/55
4.4.1　如何划分模块—单一职责/55
4.4.2　CSS的命名—命名空间的概念/60
4.4.3　挂多个class还是新建class —多用组合，少用继承/66
4.4.4　如何处理上下margin/72
4.5　低权重原则—避免滥用子选择器/81
4.6　CSS sprite/85
4.7　CSS 的常见问题/88
4.7.1　CSS的编码风格/88
4.7.2　id和class/89
4.7.3　CSS hack/89
4.7.4　解决超链接访问后hover样式不出现的问题/93
4.7.5　hasLayout/94
4.7.6　块级元素和行内元素的区别/95
4.7.7　display:inline-block 和 hasLayout/97
4.7.8　relative、absolute和float/103
4.7.9　居中/104
4.7.10　网格布局/112
4.7.11　z-index的相关问题以及Flash和IE 6下的select元素/122
4.7.12　插入png图片/129
4.7.13　多版本IE并存方案—CSS的调试利器IETester/131
第5章　高质量的JavaScript/133
5.1　养成良好的编程习惯/134
5.1.1　团队合作—如何避免JS冲突/134
5.1.2　给程序一个统一的入口—window.onload和DOMReady/148
5.1.3　CSS放在页头，JavaScript放在页尾/159
5.1.4　引入编译的概念—文件压缩/160
5.2　JavaScript的分层概念和JavaScript库/162
5.2.1　JavaScript如何分层/162
5.2.2　base层/163
5.2.3　common层/181
5.2.4　page层/184
5.2.5　JavaScript库/185
5.3　编程实用技巧/187
5.3.1　弹性/187
5.3.2　getElementById、getElementsByTagName和getElements-
ByClassName/193
5.3.3　可复用性/196
5.3.4　避免产生副作用/199
5.3.5　通过传参实现定制/203
5.3.6　控制this关键字的指向/207
5.3.7　预留回调接口/211
5.3.8　编程中的DRY规则/212
5.3.9　用hash对象传参/215
5.4　面向对象编程/217
5.4.1　面向过程编程和面向对象编程/217
5.4.2　JavaScript的面向对象编程/224
5.4.3　用面向对象方式重写代码/245
5.5　其他问题/251
5.5.1　prototype和内置类/251
5.5.2　标签的自定义属性/255
5.5.3　标签的内联事件和event对象/260
5.5.4　利用事件冒泡机制/263
5.5.5　改变DOM样式的三种方式/267
附录A　写在规则前面的话/271
附录B　命名规则/272
附录C　分工安排/274
附录D　注释规则/276
附录E　HTML规范/278
附录F　CSS规范/280
附录G　JavaScript规范/282
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>编写高质量代码
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Ajax实战
第一部分 重新思考web应用
第1章 一种新的web设计方法
1.1 为什么需要ajax富客户端？
1.1.1 比较用户体验
1.1.2 网络延迟
1.1.3 异步交互
1.1.4 独占或瞬态的使用模式
1.1.5 忘掉web
1.2 ajax的四个基本原则
1.2.1 浏览器中的是应用而不是内容
1.2.2 服务器交付的是数据而不是内容
1.2.3 用户交互变得流畅而连续
1.2.4 有纪律的严肃编程
1.3 真实世界中的ajax富客户端
1.3.1 现状
1.3.2 google maps
1.4 ajax的替代方案
1.4.1 基于macromedia flash的方案
1.4.2 java web start及其相关技术
1.5 小结
.1.6 资源
第2章 ajax新手上路
2.1 ajax的关键元素
2.2 用javascript改善用户体验
2.3 用css定义应用的外观
2.3.1 css选择器
2.3.2 css样式属性
2.3.3简单的css例子
2.4 用dom组织视图
2.4.1 使用javascript操作dom
2.4.2 寻找dom节点
2.4.3 创建dom节点
2.4.4 为文档增加样式
2.4.5 捷径：使用innerhtml属性
2.5 使用xml技术异步加载数据
2.5.1 iframe
2.5.2 xmldocument和xmlhttprequest对象
2.5.3 向服务器发送请求
2.5.4 使用回调函数监视请求
2.5.5 完整的生命周期
2.6 ajax有何不同
2.7 小结
2.8 资源
第3章 使ajax秩序井然
3.1 从混沌到秩序
3.1.1 模式：创造一个通用的词汇
3.1.2 重构与ajax
3.1.3 保持均衡
3.1.4 重构实战
3.2 一些小型重构的案例研究
3.2.1 跨浏览器不一致性：facade和adapter模式
3.2.2 管理事件处理函数：observer模式
3.2.3 重用用户操作处理函数：command模式
3.2.4 保持对资源的唯一引用：singleton模式
3.3 模型-视图-控制器
3.4 web服务器端的mvc
3.4.1 不使用模式的ajax web服务器
3.4.2 重构领域模型
3.4.3 从表现中分离内容
3.5 第三方的库和框架
3.5.1 跨浏览器库
3.5.2 ui组件和ui组件套件
3.5.3 应用框架
3.6 小结
3.7 资源
第二部分 核心技术
第4章 作为应用的页面
4.1一种不同类型的mvc
4.1.1 以不同的规模重复mvc模式
4.1.2 在浏览器端应用mvc
4.2 ajax 应用中的视图
4.2.1 将逻辑从视图中分离
4.2.2 保持视图与逻辑的分离
4.3 ajax 应用中的控制器
4.3.1 传统的javascript事件处理函数
4.3.2 w3c 事件模型
4.3.3 在javascript中实现灵活的事件模型
4.4 ajax 应用中的模型
4.4.1 使用javascript为业务领域建模
4.4.2 与服务器交互
4.5 从模型生成视图
4.5.1 javascript对象的反射
4.5.2 处理数组和对象
4.5.3 添加控制器
4.6 小结
4.7 资源
第5章 服务器的角色
5.1 与服务器配合工作
5.2 编写服务器端代码
5.2.1 流行的实现语言
5.2.2 n层体系架构
5.2.3 维护客户端和服务器端的领域模型
5.3 大局观：通用的服务器端设计
5.3.1 不使用框架进行简单的web服务器编码
5.3.2 使用model2工作流框架
5.3.3 使用基于组件的框架
5.3.4 使用面向服务的体系架构
5.4 细节：交换数据
5.4.1 仅限于客户端的交互
5.4.2 介绍行星浏览器的例子
5.4.3 从web页面的角度思考：以内容为中心的交互
5.4.4 从插件的角度思考：以脚本为中心的交互
5.4.5 从应用的角度思考：以数据为中心的交互
5.5 向服务器写数据
5.5.1 使用html表单
5.5.2 使用xmlhttprequest对象
5.5.3 有效地管理用户的更新
5.6 小结
5.7 资源
第三部分 专业级的ajax
第六章 用户体验
6.1 做正确的事：开发高质量的应用
6.1.1 响应性
6.1.2 健壮性
6.1.3 一致性
6.1.4 简单性
6.1.5 付诸实践
6.2 让用户知情
6.2.1 处理自己请求的响应
6.2.2 处理其他用户提交的更新
6.3 为ajax设计通知系统
6.3.1 对通知建模
6.3.2 定义用户界面需求
6.4 实现通知框架
6.4.1 显示状态栏图标
6.4.2显示详细的通知信息
6.4.3 集成
6.5使用通知框架处理网络请求
6.6 表示数据的时效性
6.6.1定义简单的突出显示格式
6.6.2 用scriptaculous效果库进行突出显示
6.7 小结
6.8 资源
第7章 安全性与ajax
7.1 javascript与浏览器安全性
7.1.1 引入来源服务器策略
7.1.2 ajax的相关考虑
7.1.3 子域问题
7.1.4 跨浏览器安全性
7.2 使用远程服务进行通信
7.2.1 代理远程服务
7.2.2 使用web服务
7.3 保护机密数据
7.3.1 中间人
7.3.2 使用安全http
7.3.3 在普通http上使用javascript加密数据
7.4 ajax数据流的访问策略
7.4.1 设计安全的web层
7.4.2 限制对web数据的访问
7.5 小结
7.6 资源
第8章 性能
8.1 什么是性能？
8.2 javascript执行速度
8.2.1 测定应用时间的艰难方式
8.2.2 使用venkman性能分析器
8.2.3 优化ajax应用的执行速度
8.3 javascript内存使用量
8.3.1 避免内存泄漏
8.3.2 ajax的特殊考虑因素
8.4 考虑性能的设计
8.4.1 测量内存使用量
8.4.2简单示例
8.4.3 结果：如何将内存使用量缩减150倍
8.5 小结
8.6 资源
第四部分 ajax实例研究
第9章 动态双组合功能
9.1 双组合脚本
9.1.1 客户端解决方案的局限性
9.1.2 服务器端解决方案的限制
9.1.3 基于ajax的解决方案
9.2 客户端体系架构
9.2.1 设计表单
9.2.2 设计客户端/服务器端交互
9.3 服务器端的vb.net实现
9.3.1 定义xml响应格式
9.3.2 编写服务器端代码
9.4 显示结果
9.4.1 遍历xml文档
9.4.2 应用css
9.5 高级问题
9.5.1 允许多选择查询
9.5.2 将双组合扩展为三组合
9.6 重构
9.6.1 新的和改进过的net.contentloader
9.6.2 创建双组合组件
9.7 小结
第10章 输入前提示
10.1	10．1 考察输入前提示应用
10.1.3	10.1.1常见的输入前提示的特征
10.1.4	10.1.2 google suggest
10.1.3	实战开发ajax输入前提示
10.2	服务器端框架：c#
10.2.1	服务器与数据库
10.2.2	测试服务器端代码
10.3	客户端框架
10.3.1	html
10.3.2	javascript
10.3.3	访问服务器
10.4	添加功能：包含不同查询的多个元素
10.5	10.5 重构
10.5.1 第一天：开发textsuggest组件的游戏计划
10.5.2	第2天：创建textsuggest――清晰而且可配置
10.5.3	第3天：激活ajax
10.5.4	第4天：事件处理
10.5.5	第5天：提示的弹出框的ui
10.5.6	重构报告
10.6	小结
第11章 增强的ajax web门户
11.1 正在进化的门户
11.1.1 传统门户
11.1.2 拥有丰富的用户界面的门户
11.2 使用java的ajax门户的体系架构
11.3 ajax登录
11.3.1 用户表
11.3.2 服务器端的登录代码：用java实现
11.3.3 客户端登录框架
11.4 实现dhtml窗口
11.4.1 门户窗口数据库
11.4.2 门户窗口的服务器端代码
11.4.3 添加外部js库
11.5 添加ajax自动保存功能
11.5.1 修改库的代码
11.5.2 自动保存信息到数据库
11.6 重构
11.6.1 定义构造器
11.6.2 修改ajaxwindows.js库
11.6.3 指定protal命令
11.6.4 执行ajax处理
11.6.5 重构报告
11.7 小结
第12章 使用xslt的动态搜索
12.1 理解搜索技术
12.1.1 考察传统的搜索
12.1.2 帧和弹出窗口方法的缺点
12.1.3 研究使用ajax和xslt的动态搜索
12.1.4 向客户端发回结果
12.2 客户端的代码
12.2.1 设置客户端
12.2.2 启动搜索过程
12.3 服务器端的php代码
12.3.1创建xml文档
12.3.2 创建xslt文档
12.4合并xslt和xml文档
12.4.1 使用微软的ie
12.4.2 使用mozilla
12.5 完成搜索
12.5.1 应用层叠样式表
12.5.2 改善搜索
12.5.3 决定使用xslt
12.5.4 克服ajax书签支持的缺陷
12.6 重构
12.6.1 xslthelper
12.6.2 动态搜索组件
12.6.3 重构报告
12.7 小结
第13章 使用ajax创建独立的应用
13.1 从外部读取信息
13.1.1 查找xml提要
13.1.2 rss结构
13.2 创建丰富的用户界面
13.2.1 流程
13.2.2不使用表格的html框架
13.2.3 采用css方法做排版
13.3 加载rss提要
13.3.1 全局作用域
13.3.2 ajax预加载功能
13.4 增加丰富的渐变效果
13.4.1 跨浏览器的不透明规则
13.4.2 实现淡入/淡出渐变
13.4.3 集成javascript定时器
13.5 附加功能
13.5.1 插入额外提要
13.5.2集成跳过和暂停功能
13.6 避免项目的限制
13.6.1克服mozilla的安全限制
13.6.2修改应用的范围
13.7 重构
13.7.1 rss阅读器模型
13.7.2 rss阅读器视图
13.7.3 rss阅读器控制器
13.7.4 重构报告
13.8 小结
附录a ajax工具箱
a.1 选择正确的工具集更加聪明地工作
a.1.1获取适合的工具
a.1.2 创建自己的工具
a.1.3 维护工具箱
a.2 编辑器和ide
a.2.1 在代码编辑器中需要什么功能
a.2.2 当前的工具
a.3 调试器
a.3.1为什么要使用调试器
a.3.2 javascript调试器
a.3.3 http 调试器
a.3.4创建自己的跨浏览器输出控制台
a.4 dom 检查器
a.4.1 使用mozilla dom 检查器
a.4.2 ie的dom 检查器
a.5 安装firefox扩展
a.6 资源
附录b 面向对象程序员的javascript
b.1 javascript不是java
b.2 javascript中的对象
b.2.1创建一个开箱即用（ad hoc）的对象
b.2.2 构造函数、类和原型
b.2.3 扩展内建类
b.2.4 原型的继承
b.2.5 javascript对象的反射
b.2.6 接口和“鸭子类型”
b.3 方法和函数
b.3.1 函数是一等公民
b.3.2 向对象附加函数
b.3.3 从其他对象借用函数
b.3.4 ajax事件处理和函数上下文
b.3.5 javascript中的闭包
b.4 小结
b.5 资源
附录c ajax框架和库
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Ajax实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>用AngularJS开发下一代Web应用
前言 vii
第1章 AngularJS 简介 1
一些概念 2
客户端模板 2
Model View Controller（MVC） 3
数据绑定 4
依赖注入 5
指令 6
实例：购物车 6
接下来 9
第2章 AngularJS 应用骨架 11
调用Angular 11
加载脚本 11
使用ng-app 声明Angular 的边界 12
Model View Controller 12
模板和数据绑定 15
显示文本 16
表单输入 16
浅谈非入侵式JavaScript 19
列表、表格以及其他迭代型元素 22
隐藏和显示 24
CSS 类和样式 25
反思src 和href 属性 27
表达式 28
区分UI 和控制器的职责 28
利用$scope 暴露模型数据 29
使用$watch 监控数据模型的变化 30
watch() 中的性能注意事项 33
使用Module（模块）组织依赖关系 35
我需要多少个模块呢 38
使用过滤器格式化数据 39
使用路由和$location 切换视图 40
index.html 41
list.html 42
detail.html 42
controllers.js 42
与服务器交互 43
使用指令修改DOM 45
index.html 46
controllers.js 46
校验用户输入 47
继续前进 48
第3章 使用AngularJS 进行开发 49
项目结构 49
工具 52
各种IDE 52
运行你的应用 53
使用Yeoman 53
不使用Yeoman 54
AngularJS 下的测试 54
Karma 55
单元测试 57
端到端/ 集成测试 58
编译 60
其他好用的工具 62
调试 62
Batarang 62
Yeoman ：优化你的工作流程 65
安装Yeoman 66
运行服务器 66
添加新的路由、视图和控制器 66
关于测试 67
构建项目 67
与RequireJS 集成 68
第4章 一款AngularJS 应用剖析 77
应用 77
模型、控制器和模板之间的关系 78
模型 79
控制器、指令及服务 80
服务 80
指令 84
控制器 86
模板 90
测试 96
单元测试 96
场景测试 100
第5章 与服务器交互 101
利用$http 进行通信 101
进一步配置请求 103
设置HTTP 头 104
缓存响应 105
转换请求和响应 106
单元测试 107
使用RESTful 资源 108
声明 111
自定义方法 111
别用回调！（除非你真的需要它们） 112
简化服务端操作 112
ngResource 单元测试 113
$q 和Promise 114
拦截响应 115
安全性措施 116
JSON 漏洞 116
XSRF 117
第6章 指令 119
指令和HTML 校验 119
API 概览 120
为你的指令命名 121
用来定义指令的对象 122
内嵌 126
compile 和link 函数 126
作用域 128
操作DOM 元素 132
控制器 134
继续前进 137
第7章 其他注意点 139
$location 139
HTML5 模式和Hashbang 模式 142
AngularJS Module 类的方法 145
Main 方法在哪里 145
加载和依赖 146
快捷方法 146
使用$on、$emit 和$broadcast 在作用域之间进行交互 149
Cookies 150
国际化和本地化 151
在AngularJS 里面应该怎么做 152
怎样才能让一切运行起来呢 152
常见问题 153
HTML 无害化和Sanitize 模块 153
Linky 155
第8章 速查和技巧 157
封装jQuery Datepicker 157
ng-model 159
绑定select 159
调用select 159
例子中的其他内容 160
Teams List 应用：过滤器和控制器的交互 161
搜索框 165
下拉框 165
复选框 165
迭代器 165
AngularJS 中的文件上传 166
使用Socket.IO 169
简单的分页服务 172
与服务端协作及登录 175
结论 179
索引 181
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>用AngularJS开发下一代Web应用
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Ajax基础教程
译者序
前言
致谢
关于技术审校
第1章 ajax简介 1
1.1 web应用简史 1
1.2 浏览器历史 2
1.3 web应用的发展历程 3
1.3.1 cgi 4
1.3.2 applet 4
1.3.3 javascript 5
1.3.4 servlet、asp和php……哦，太多了！ 6
1.3.5 flash 9
1.3.6 dhtml革命 10
1.3.7 xml衍生语言 10
1.3.8 基本问题 12
1.3.9 ajax 13
1.4 可用性问题 17
1.5 相关技术 18
1.6 使用场合 19
1.7 设计考虑 20
1.8 小结 21
第2章 使用xmlhttprequest对象 23
2.1 xmlhttprequest对象概述 23
2.2 方法和属性 25
2.3 交互示例 26
2.4 get与post 28
2.5 远程脚本 29
2.5.1 远程脚本概述 29
2.5.2 远程脚本的示例 29
2.6 如何发送简单请求 31
2.6.1 简单请求的示例 32
2.6.2 关于安全 34
2.7 dom level 3 加载和保存规约 35
2.8 dom 35
2.9 小结 36
第3章 与服务器通信：发送请求和处理响应 37
3.1 处理服务器响应 37
3.1.1 使用innerhtml属性创建动态内容 37
3.1.2 将响应解析为xml 40
3.1.3 使用w3c dom动态编辑页面 45
3.2 发送请求参数 52
3.2.1 请求参数作为xml发送 59
3.2.2 使用json向服务器发送数据 64
3.3 小结 70
第4章 实现基本ajax技术 71
4.1 完成验证 71
4.2 读取响应首部 75
4.3 动态加载列表框 79
4.4 创建自动刷新页面 85
4.5 显示进度条 90
4.6 创建工具提示 95
4.7 动态更新web页面 101
4.8 访问web服务 110
4.9 提供自动完成 116
4.10 小结 123
第5章 构建完备的ajax开发工具箱 125
5.1 使用jsdoc建立javascript代码的文档 125
5.1.1 安装 126
5.1.2 用法 126
5.2 使用firefox扩展验证html内容 129
5.2.1 html validator 130
5.2.2 checky .. 132
5.3 使用dom inspector搜索节点 133
5.4 使用jslint完成javascript语法检查 137
5.5 完成javascript压缩和模糊处理 138
5.6 使用firefox的web开发扩展 140
5.7 实现高级javascript技术 141
5.7.1 通过prototype属性建立面向对象的javascript 142
5.7.2 私有属性和使用javascript的信息隐藏 146
5.7.3 javascript中基于类的继承 148
5.7.4 汇合 149
5.8 小结 152
第6章 使用jsunit测试javascript代码 155
6.1 javascript提出的问题 155
6.1.1 测试先行方法介绍 155
6.1.2 junit介绍 157
6.2 分析jsunit 158
6.2.1 起步 159
6.2.2 编写测试 159
6.2.3 运行测试 172
6.2.4 使用标准/定制查询串 177
6.2.5 使用jsunit服务器 181
6.2.6 获得帮助 183
6.2.7 还能用什么? 184
6.3 小结 184
第7章 分析javascript调试工具和技术 185
7.1 用greasemonkey调试ajax请求 186
7.1.1 greasemonkey介绍 186
7.1.2 使用greasemonkey xmlhttprequest调试用户脚本 186
7.1.3 使用xmlhttprequest调试用户脚本检查ajax请求和响应 186
7.2 调试javascript 188
7.2.1 使用firefox javascript console 189
7.2.2 使用microsoft script debugger 190
7.2.3 使用venkman 192
7.3 小结 207
第8章 万事俱备 209
8.1 模式介绍 209
8.1.1 实现褪色技术 209
8.1.2 实现自动刷新 210
8.1.3 实现部分页面绘制 210
8.1.4 实现可拖放dom 211
8.2 避免常见的陷阱 212
8.3 相关的更多资源 214
8.4 使用框架 216
8.5 taconite介绍 216
8.5.1 taconite原理 217
8.5.2 解决方案 217
8.5.3 taconite怎么处理内容 219
8.6 dashboard应用介绍 219
8.7 用taconite构建ajax dashboard 221
8.7.1 一般特性介绍 221
8.7.2 设计特性介绍 222
8.7.3 分析代码 224
8.7.4 分析天气预报组件 225
8.7.5 分析标题新闻组件 232
8.7.6 如何完成自动重新刷新工作 235
8.7.7 构建更好的autocomplete 237
8.8 小结 240
附录a 开发跨浏览器javascript 241
a.1 向表中追加行 241
a.2 通过javascript设置元素的样式 242
a.3 设置元素的class属性 243
a.4 创建输入元素 243
a.5 向输入元素增加事件处理程序 244
a.6 创建单选钮 245
a.7 小结 246
附录b ajax框架介绍 247
b.1　浏览器端框架 247
b.1.1　dojo 248
b.1.2　rico 248
b.1.3　qooxdoo 248
b.1.4　tibet 249
b.1.5　flash/javascript集成包 249
b.1.6　google ajaxslt 249
b.1.7　libxmlrequest 249
b.1.8　rslite 250
b.1.9　sack 250
b.1.10　sarrisa 250
b.1.11　xhconn 251
b.2　服务器端框架 251
b.2.1　cpaint 251
b.2.2　sajax 251
b.2.3　json/json-rpc 251
b.2.4　direct web remoting 252
b.2.5　swato 252
b.2.6　java blueprints 252
b.2.7　ajax.net 252
b.2.8　microsoft的atlas项目 253
b.2.9　ruby on rails  253
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Ajax基础教程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>jQuery实战
第1章 引荐jQuery
1.1 为什么是jQuery
1.2 不唐突的JavaScript
1.3 jQuery基本原理
1.3.1 jQuery包装器
1.3.2 实用工具函数
1.3.3 文档就绪处理程序
1.3.4 创建DOM元素
1.3.5 扩展jQuery
1.3.6 使用jQuery和其他库
1.4 小结
第2章 创建元素包装集
2.1 选择将被操作的元素
2.1.1 利用基本CSS选择器
2.1.2 利用子选择器、容器选择器和特性选择器
2.1.3 通过位置选择
2.1.4 利用自定义jQuery选择器
2.2 生成新HTML
2.3 管理包装元素集合
2.3.1 确定包装集的大小
2.3.2 从包装集获取元素
2.3.3 筛选元素包装集
2.3.4 利用关系获取包装集
2.3.5 还有更多使用包装集的途径
2.3.6 管理jQuery链
2.4 小结
第3章 用jQuery让页面生动起来
3.1 操作元素属性和特性
3.1.1 操作元素属性
3.1.2 获取特性值
3.1.3 设置特性值
3.1.4 删除特性
3.1.5 特性带来的快乐
3.2 修改元素样式
3.2.1 添加和删除类名称
3.2.2 获取和设置样式
3.2.3 样式相关的更有用的命令
3.3 设置元素内容
3.3.1 替换HTML或文本内容
3.3.2 移动和复制元素
3.3.3 包裹元素
3.3.4 删除元素
3.3.5 克隆元素
3.4 处理表单元素值
3.5 小结
第4章 事件
4.1 浏览器的事件模型
4.1.1 DOM第0级事件模型
4.1.2 DOM第2级事件模型
4.1.3 IE事件模型
4.2 jQuery事件模型
4.2.1 利用jQuery绑定事件处理程序
4.2.2 删除事件处理程序
4.2.3 Event实例
4.2.4 影响事件传播
4.2.5 触发事件处理程序
4.2.6 其他事件相关命令
4.3 让事件(以及更多)工作起来
4.4 小结
第5章 用动画和效果来装扮页面
5.1 使元素显示和隐藏
5.1.1 实现可折叠的列表
5.1.2 切换元素的显示状态
5.2 以动画方式使函数显示和隐藏
5.2.1 使元素逐渐地显示和隐藏
5.2.2 使元素淡入和淡出
5.2.3 使元素滑上和滑下
5.2.4 使动画停止
5.3 创建自定义的动画
5.3.1 一个自定义的放大动画
5.3.2 一个自定义的坠落动画
5.3.3 一个自定义的消散动画
5.4 小结
第6章 jQuery实用工具函数
6.1 利用jQuery标志
6.1.1 检测用户代理
6.1.2 确定方框模型
6.1.3 检测要用的正确的浮动样式
6.2 使用jQuery和其他库
6.3 操作JavaScript对象和集合
6.3.1 修整字符串
6.3.2 对属性和集合进行迭代
6.3.3 对数组进行筛选
6.3.4 对数组进行转换
6.3.5 从JavaScript数组上找到更多乐趣
6.3.6 扩展对象
6.4 动态加载脚本
6.5 小结
第7章 用自定义插件来扩展jQuery
7.1 为什么要扩展
7.2 jQuery插件创建准则
7.2.1 给文件和函数命名
7.2.2 小心$
7.2.3 简化复杂的参数列表
7.3 编写自定义实用工具函数
7.3.1 创建操作数据的实用工具函数
7.3.2 编写日期格式器
7.4 添加新的包装器方法
7.4.1 在包装器方法中应用多个操作
7.4.2 保留在包装器方法之内的状态
7.5 小结
第8章 利用Ajax与服务器交谈
8.1 温习Ajax
8.1.1 创建一个XHR实例
8.1.2 发起请求
8.1.3 跟踪进展
8.1.4 获得响应
8.2 加载内容到元素上
8.2.1 利用jQuery加载内容
8.2.2 加载动态的库存数据
8.3 发起GET和POST请求
8.3.1 利用jQuery获取数据
8.3.2 获取JSON数据
8.3.3 发起POST请求
8.4 完全控制Ajax请求
8.4.1 带着所有的修整发起Ajax请求
8.4.2 设置请求的默认值
8.4.3 全局函数
8.5 整合一切
8.5.1 实现工具提示行为
8.5.2 利用术语提示器
8.5.3 改进的空间
8.6 小结
第9章 卓越、强大和实用的插件
9.1 表单插件
9.1.1 获得表单控件的值
9.1.2 清除和复位表单控件
9.1.3 通过Ajax提交表单
9.1.4 上传文件
9.2 尺寸插件
9.2.1 宽度和高度的已扩展方法
9.2.2 获得滚动尺寸
9.2.3 关于偏移和位置
9.3 实时查询插件
9.3.1 建立主动事件处理程序
9.3.2 定义匹配和不匹配监听器
9.3.3 强制Live Query求值
9.3.4 使Live Query监听器过期
9.4 UI插件
9.4.1 鼠标交互
9.4.2 UI小部件和可视化效果
9.5 小结
9.6 尾声
附录A JavaScript必知必会
索引
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>jQuery实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node.js硬实战：115个核心技巧
第一部分Node 基础
1 入门. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2
1.1 Node 入门3
1.1.1 为什么使用Node 3
1.1.2 Node 的主要特性5
1.2 构建一个Node 应用7
1.2.1 创建一个新的Node 项目8
1.2.2 创建一个流的类9
1.2.3 使用流10
1.2.4 编写测试11
1.3 总结13
2 全局变量：Node 环境. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 15
2.1 模块16
技巧1 安装与加载模块16
技巧2 创建与管理模块17
技巧3 加载一组相关的模块20
技巧4 使用路径22
2.2 标准I/O 以及console 对象23
技巧5 标准I/O 流的读写24
技巧6 打印日志消息25
技巧7 基准测试27
2.3 操作系统与命令行29
技巧8 获取平台信息29
技巧9 传递命令行参数30
技巧10 退出程序31
技巧11 响应信号量33
2.4 使用timer 延迟执行35
技巧12 通过setTimeout 延迟执行函数35
技巧13 通过定时器定时调用回调函数37
技巧14 安全的操作异步接口38
2.5 总结41
3 Buffers：使用比特、字节以及编码. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 43
3.1 修改数据编码44
技巧15 Buffer 转换为其他格式44
技巧16 使用Buffers 来修改字符串编码46
3.2 二进制文件转换为JSON 49
技巧17 使用Buffer 来转换原始数据49
3.3 创建你自己的二进制协议65
技巧18 创建自己的网络协议65
3.4 总结71
4 Events：玩转EventEmitter . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 72
4.1 基础用法73
技巧19 从EventEmitter 继承73
技巧20 混合EventEmitter 76
4.2 异常处理78
技巧21 管理异常78
技巧22 通过domains 管理异常80
4.3 高级模式82
技巧23 反射82
技巧24 探索EventEmitter 85
技巧25 组织事件名称87
4.4 第三方模块以及扩展88
技巧26 EventEmitter 的替代方案89
4.5 总结91
5 流：最强大和最容易误解的功能. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 93
5.1 流的介绍94
5.1.1 流的类型94
5.1.2 什么时候使用流94
5.1.3 历史95
5.1.4 第三方模块中的流96
5.1.5 流继承事件97
5.2 内置流98
技巧27 使用内置的流来实现静态web 服务器98
技巧28 流的错误处理101
5.3 第三方模块和流102
技巧29 使用流的第三方模块102
5.4 使用流基类105
技巧30 正确地从流的基类继承105
技巧31 实现一个可读流107
技巧32 实现一个可写流111
技巧33 使用双工流转换和接收数据113
技巧34 使用转换流解析数据114
5.5 高级模式和优化118
技巧35 流的优化118
技巧36 使用老的流API 121
技巧37 基于功能的流适配123
技巧38 测试流125
5.6 总结128
6 文件系统：通过异步和同步的方法处理文件. . . . . . . . . . . . . . . . . . . . . . . . . 129
6.1 fs 模块概述130
6.1.1 POSIX 文件系统包装器130
6.1.2 流132
6.1.3 批量文件操作133
6.1.4 文件监视133
6.1.5 同步的替代方案133
技巧39 读取配置文件134
技巧40 使用文件描述136
技巧41 使用文件锁137
技巧42 递归文件操作142
技巧43 编写文件数据库147
技巧44 监视文件以及文件夹151
6.2 总结154
7 网络：Node 真正的“Hello, World” . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 156
7.1 Node 中的网络156
7.1.1 网络技术157
7.1.2 Node 网络模块161
7.1.3 非阻塞网络和线程池162
7.2 TCP 客户端和服务端163
技巧45 创建TCP 服务端和客户端163
技巧46 使用客户端测试TCP 服务端165
技巧47 改进实时性低的应用168
7.3 UDP 客户端和服务端170
技巧48 通过UDP 传输文件170
技巧49 UDP 客户端服务应用174
7.4 HTTP 客户端和服务端179
技巧50 HTTP 服务器179
技巧51 重定向181
技巧52 HTTP 代理186
7.5 创建DNS 请求189
技巧53 创建DNS 请求189
7.6 加密191
技巧54 一个加密的TCP 服务器192
技巧55 加密的Web 服务器和客户端196
7.7 总结198
8 子进程：利用Node 整合外部应用程序. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 200
8.1 执行外部应用程序202
技巧56 执行外部应用程序202
8.1.1 路径和Path 的环境变量203
8.1.2 执行外部程序时候出现的异常204
技巧57 流和外部应用程序205
8.1.3 外部应用程序的串联调用206
技巧58 在shell 中执行命令208
8.1.4 安全性和shell 命令执行209
技巧59 分离子进程210
8.1.5 父进程和子进程之间的I/O 处理211
8.1.6 引用计数和子进程213
8.2 执行Node 程序213
技巧60 执行Node 程序214
技巧61 Forking Node 模块216
技巧62 运行作业218
8.2.1 工作池220
8.2.2 使用池模块222
8.3 同步运行223
技巧63 同步子进程223
8.4 总结227
第二部分实践中的技巧
9 网络：构建精简的网络应用. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 230
9.1 前端技术231
技巧64 快速的静态网站服务器231
技巧65 在Node 中使用DOM 236
技巧66 在浏览器端使用Node 模块238
9.2 服务端技术241
技巧67 Express 路由分离241
技巧68 自动重启服务器245
技巧69 配置web 应用248
技巧70 优雅地处理错误253
技巧71 RESTful web 应用257
技巧72 使用自定义的中间件267
技巧73 使用事件进行解耦273
技巧74 使用WebSockets 来处理sessions 276
技巧75 升级Express 3 到4 281
9.3 web 应用程序的测试285
技巧76 测试路由286
技巧77 为中间件注入创建seams 288
技巧78 测试依赖远程服务的应用291
9.4 全栈框架297
9.5 实时服务299
9.6 总结300
10 测试：编写健壮代码的关键. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 301
10.1 Node 测试的相关介绍303
10.2 使用断言编写简单的测试304
技巧79 用内置的模块编写测试305
技巧80 编写验证异常的测试308
技巧81 创建自定义的断言312
10.3 测试装置314
技巧82 使用一个测试装置组织测试314
10.4 测试框架318
技巧83 使用Mocha 编写测试319
技巧84 使用Mocha 测试web 应用323
技巧85 万能测试协议（TAP） 328
10.5 测试工具331
技巧86 持续集成331
技巧87 数据库装置335
10.6 扩展阅读343
10.7 总结343
11 调试：用于发现和解决问题. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 344
11.1 内省345
11.1.1 显式异常345
11.1.2 隐藏的异常346
11.1.3 错误事件346
11.1.4 错误参数347
技巧88 处理未捕获的异常348
技巧89 检查我们的Node 代码351
11.2 问题的调试352
技巧90 使用Node 内置的调试器352
技巧91 使用Node Inspector 359
技巧92 对Node 应用进行性能分析361
技巧93 内存泄漏的调试365
技巧94 使用REPL 来检测运行中的程序370
技巧95 跟踪系统调用377
11.3 总结381
12 生产环境中的Node：安全地部署应用程序. . . . . . . . . . . . . . . . . . . . . . . . . . 382
12.1 部署383
技巧96 将Node 程序部署到云端383
技巧97 使用Apache 和Ngnix 部署Node 程序389
技巧98 在80 端口上安全地运行Node 程序392
技巧99 保持Node 进程一直运行394
技巧100 在生产环境中使用WebSockets 396
12.2 Node 程序的缓存和扩展性402
技巧101 HTTP 缓存402
技巧102 为程序的路由和扩展使用Node 代理404
技巧103 使用集群保持程序的扩展性和弹性408
12.3 维护413
技巧104 包的优化413
技巧105 日志和日志服务415
12.4 更多关于Node 程序的扩展性和弹性的备注418
12.5 总结419
第三部分编写模块
13 编写模块，掌握Node 的所有. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 422
13.1 头脑风暴424
13.1.1 更快的斐波那契模块424
技巧106 计划编写我们的模块425
技巧107 验证我们模块的想法427
13.2 创建package.json 文件433
技巧108 创建package.json 文件433
技巧109 依赖处理436
技巧110 语义化版本号441
13.3 用户体验444
技巧111 添加可执行脚本444
技巧112 在本地测试模块446
技巧113 在不同版本Node 中测试448
13.4 发布451
技巧114 发布模块451
技巧115 使用私有模块453
13.5 总结455
A 社区. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 457
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node.js硬实战：115个核心技巧
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Java Script深度剖析
第1章 JavaScript简介
第2章 变量、函数、对象和事件
第3章 数据类型和操作符
第4章 使用控制结构和语句进行流程控制
第5章 窗口和框架
第6章 表单
第7章 调试JavaScript
第8章 动态HTML和动画
第9章 cookie和安全性
第10章 服务器端JavaScript
第11章 数据库连接
第12章 使用java小程序和嵌入式数据
附录 JavaScript参考

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Java Script深度剖析
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>jQuery基础教程（第3版）
目　 　　 　录
第1章　 　jQuery入门　 　　 　1
1.1　 　jQuery能做什么　 　　 　1
1.2　 　jQuery为什么如此出色　 　　 　2
1.3　 　第一个jQuery驱动的页面　 　　 　3
1.3.1　 　下载jQuery　 　　 　4
1.3.2　 　在HTML文档中引入jQuery　 　　 　4
1.3.3　 　编写jQuery代码　 　　 　7
1.3.4　 　最终结果　 　　 　9
1.4　 　纯JavaScript与jQuery　 　　 　9
1.5　 　开发工具　 　　 　10
1.6　 　小结　 　　 　13
第2章　 　选择元素　 　　 　14
2.1　 　DOM　 　　 　14
2.2　 　 $()函数　 　　 　15
2.3　 　CSS选择符　 　　 　16
2.3.1　 　基于列表项的级别添加样式　 　　 　18
2.3.2　 　属性选择符　 　　 　19
2.3.3　 　为链接添加样式　 　　 　19
2.4　 　自定义选择符　 　　 　21
2.4.1　 　每隔一行为表格添加样式　 　　 　22
2.4.2　 　基于表单的选择符　 　　 　26
2.5　 　DOM遍历方法　 　　 　26
2.5.1　 　为特定单元格添加样式　 　　 　27
2.5.2　 　连缀　 　　 　29
2.6　 　访问DOM元素　 　　 　30
2.7　 　小结　 　　 　31
2.8　 　练习　 　　 　31
第3章　 　事件　 　　 　32
3.1　 　在页面加载后执行任务　 　　 　32
3.1.1　 　代码执行的时机选择　 　　 　32
3.1.2　 　基于一个页面执行多个脚本　 　　 　33
3.1.3　 　缩短代码的简写方式　 　　 　34
3.1.4　 　向.ready()回调函数中传入参数　 　　 　35
3.2　 　简单的事件　 　　 　35
3.2.1　 　简单的样式转换器　 　　 　35
3.2.2　 　启用其他按钮　 　　 　38
3.2.3　 　事件处理程序的环境　 　　 　39
3.2.4　 　进一步合并　 　　 　41
3.2.5　 　简写的事件　 　　 　42
3.3　 　复合事件　 　　 　43
3.3.1　 　显示和隐藏高级特性　 　　 　43
3.3.2　 　突出显示可单击的项　 　　 　45
3.4　 　事件的旅程　 　　 　47
3.5　 　通过事件对象改变事件的旅程　 　　 　49
3.5.1　 　事件目标　 　　 　50
3.5.2　 　停止事件传播　 　　 　50
3.5.3　 　默认操作　 　　 　51
3.5.4　 　事件委托　 　　 　52
3.5.5　 　事件委托的方法　 　　 　54
3.6　 　移除事件处理程序　 　　 　55
3.6.1　 　事件的命名空间　 　　 　56
3.6.2　 　重新绑定事件　 　　 　56
3.7　 　模仿用户操作　 　　 　58
3.8　 　小结　 　　 　62
3.9　 　练习　 　　 　62
第4章　 　样式与动画　 　　 　64
4.1　 　修改内联CSS　 　　 　64
4.2　 　基本的隐藏和显示　 　　 　68
4.3　 　效果和速度　 　　 　70
4.3.1　 　指定显示速度　 　　 　70
4.3.2　 　淡入和淡出　 　　 　71
4.3.3　 　滑上和滑下　 　　 　72
4.3.4　 　复合效果　 　　 　73
4.4　 　创建自定义动画　 　　 　74
4.4.1　 　手工创建效果　 　　 　75
4.4.2　 　一次给多个属性添加动画效果　 　　 　75
4.5　 　并发与排队效果　 　　 　79
4.5.1　 　处理一组元素　 　　 　79
4.5.2　 　处理多组元素　 　　 　82
4.5.3　 　简单概括　 　　 　86
4.6　 　小结　 　　 　87
4.7　 　练习　 　　 　87
第5章　 　操作DOM　 　　 　88
5.1　 　操作属性　 　　 　88
5.1.1　 　非class属性　 　　 　88
5.1.2　 　DOM元素属性　 　　 　92
5.2　 　DOM树操作　 　　 　92
5.2.1　 　重新认识$()函数　 　　 　93
5.2.2　 　创建新元素　 　　 　93
5.2.3　 　插入新元素　 　　 　94
5.2.4　 　移动元素　 　　 　95
5.2.5　 　包装元素　 　　 　96
5.2.6　 　反向插入方法　 　　 　98
5.3　 　复制元素　 　　 　101
5.4　 　内容setter和getter方法　 　　 　104
5.5　 　DOM操作方法的简单归纳　 　　 　107
5.6　 　小结　 　　 　108
5.7　 　练习　 　　 　109
第6章　 　通过AJAX发送数据　 　　 　110
6.1　 　基于请求加载数据　 　　 　110
6.1.1　 　追加HTML　 　　 　111
6.1.2　 　操作JavaScript对象　 　　 　114
6.1.3　 　加载XML文档　 　　 　120
6.2　 　选择数据格式　 　　 　123
6.3　 　向服务器传递数据　 　　 　124
6.3.1　 　执行GET请求　 　　 　124
6.3.2　 　执行POST请求　 　　 　128
6.3.3　 　序列化表单　 　　 　129
6.4　 　为AJAX请求提供不同的内容　 　　 　131
6.5　 　关注请求　 　　 　133
6.6　 　错误处理　 　　 　135
6.7　 　AJAX和事件　 　　 　136
6.8　 　安全限制　 　　 　137
6.9　 　其他工具　 　　 　140
6.9.1　 　低级AJAX方法　 　　 　140
6.9.2　 　修改默认选项　 　　 　141
6.9.3　 　部分加载HTML页面　 　　 　141
6.10　 　小结　 　　 　144
6.11　 　练习　 　　 　144
第7章　 　使用插件　 　　 　145
7.1　 　查找插件和帮助　 　　 　145
7.2　 　使用插件　 　　 　145
7.2.1　 　下载并包含Cycle插件　 　　 　146
7.2.2　 　简单的用法　 　　 　146
7.2.3　 　为插件方法指定参数　 　　 　148
7.2.4　 　参数默认值　 　　 　148
7.2.5　 　其他形式的插件　 　　 　149
7.3　 　jQuery UI插件库　 　　 　151
7.3.1　 　效果　 　　 　151
7.3.2　 　交互组件　 　　 　154
7.3.3　 　部件　 　　 　156
7.3.4　 　ThemeRoller　 　　 　158
7.4　 　小结　 　　 　159
7.5　 　练习　 　　 　159
第8章　 　开发插件　 　　 　160
8.1　 　$别名在插件中的应用　 　　 　160
8.2　 　添加新的全局函数　 　　 　160
8.3　 　添加jQuery对象方法　 　　 　166
8.3.1　 　对象方法的上下文　 　　 　166
8.3.2　 　隐式迭代　 　　 　167
8.3.3　 　方法连缀　 　　 　168
8.4　 　方法的参数　 　　 　169
8.4.1　 　参数映射　 　　 　170
8.4.2　 　默认参数值　 　　 　171
8.4.3　 　回调函数　 　　 　172
8.4.4　 　可定制的默认值　 　　 　173
8.5　 　jQuery UI部件工厂　 　　 　174
8.5.1　 　创建部件　 　　 　175
8.5.2　 　销毁部件　 　　 　177
8.5.3　 　启用和禁用部件　 　　 　177
8.5.4　 　接受部件选项　 　　 　178
8.5.5　 　添加子方法　 　　 　179
8.5.6　 　触发部件事件　 　　 　179
8.6　 　插件设计建议　 　　 　180
8.7　 　小结　 　　 　181
8.8　 　练习　 　　 　181
第9章　 　高级选择符与遍历　 　　 　183
9.1　 　深入选择与遍历　 　　 　183
9.1.1　 　动态筛选表格内容　 　　 　184
9.1.2　 　表格行条纹效果　 　　 　186
9.1.3　 　组合筛选与条纹　 　　 　188
9.1.4　 　更多选择符与遍历方法　 　　 　189
9.2　 　定制与优化选择符　 　　 　190
9.2.1　 　编写定制的选择符插件　 　　 　190
9.2.2　 　选择符的性能问题　 　　 　192
9.3　 　DOM遍历背后的秘密　 　　 　194
9.3.1　 　jQuery对象属性　 　　 　194
9.3.2　 　DOM元素栈　 　　 　196
9.3.3　 　编写DOM遍历方法插件　 　　 　197
9.3.4　 　DOM遍历的性能问题　 　　 　199
9.4　 　小结　 　　 　200
9.5　 　练习　 　　 　201
第10章　 　高级事件处理　 　　 　202
10.1　 　再谈事件　 　　 　202
10.1.1　 　追加数据页面　 　　 　204
10.1.2　 　悬停时显示数据　 　　 　205
10.2　 　事件委托　 　　 　206
10.2.1　 　使用jQuery的委托方法　 　　 　207
10.2.2　 　选择委托方法　 　　 　207
10.2.3　 　早委托　 　　 　208
10.2.4　 　使用上下文参数　 　　 　209
10.3　 　自定义事件　 　　 　210
10.3.1　 　无穷滚动　 　　 　211
10.3.2　 　自定义事件参数　 　　 　212
10.4　 　节流事件　 　　 　213
10.5　 　特殊事件　 　　 　215
10.6　 　小结　 　　 　216
10.7　 　练习　 　　 　217
第11章　 　高级效果　 　　 　218
11.1　 　再谈动画　 　　 　218
11.2　 　观测及中断动画　 　　 　220
11.2.1　 　确定动画状态　 　　 　220
11.2.2　 　中止运行的动画　 　　 　221
11.3　 　全局效果属性　 　　 　222
11.3.1　 　全局禁用所有效果　 　　 　222
11.3.2　 　微调动画的平滑度　 　　 　223
11.3.3　 　定义效果的持续时间　 　　 　223
11.4　 　多属性缓动　 　　 　226
11.5　 　延迟对象　 　　 　226
11.6　 　小结　 　　 　230
11.7　 　练习　 　　 　230
第12章　 　高级DOM操作　 　　 　231
12.1　 　排序表格行　 　　 　231
12.1.1　 　服务器端排序　 　　 　231
12.1.2　 　AJAX排序　 　　 　232
12.1.3　 　JavaScript排序　 　　 　232
12.2　 　移动和插入元素　 　　 　233
12.2.1　 　为已有的文本添加链接　 　　 　234
12.2.2　 　简单的JavaScript数组排序　 　　 　235
12.2.3　 　对DOM元素排序　 　　 　235
12.3　 　在DOM元素中保存数据　 　　 　237
12.3.1　 　执行额外的预先计算　 　　 　238
12.3.2　 　存储非字符串数据　 　　 　239
12.3.3　 　变换排序方向　 　　 　241
12.4　 　使用HTML5自定义数据特性　 　　 　242
12.5　 　使用JSON排序和构建行　 　　 　245
12.5.1　 　修改JSON对象　 　　 　246
12.5.2　 　按需要重新构建内容　 　　 　248
12.6　 　高级特性操作　 　　 　249
12.6.1　 　简捷地创建元素　 　　 　249
12.6.2　 　DOM创建挂钩　 　　 　250
12.7　 　小结　 　　 　252
12.8　 　练习　 　　 　253
第13章　 　高级AJAX　 　　 　254
13.1　 　渐进增强与AJAX　 　　 　254
13.2　 　AJAX错误处理　 　　 　260
13.3　 　jqXHR对象　 　　 　261
13.3.1　 　AJAX承诺　 　　 　262
13.3.2　 　缓存响应　 　　 　263
13.4　 　截流AJAX请求　 　　 　264
13.5　 　扩展AJAX功能　 　　 　265
13.5.1　 　数据类型转换器　 　　 　265
13.5.2　 　AJAX预过滤器　 　　 　270
13.5.3　 　替代传输方式　 　　 　270
13.6　 　小结　 　　 　274
13.7　 　练习　 　　 　274
附录A　 　JavaScript闭包　 　　 　275
附录B　 　使用QUnit测试JavaScript　 　　 　289
附录C　 　快速参考　 　　 　297
附录D　 　jQuery 1.7简介　 　　 　313

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>jQuery基础教程（第3版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Java Script 开发使用手册
第一部分 JavaScript基

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Java Script 开发使用手册
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>数据可视化实战
目录
前言　　XI
第1章　写在前面　　1
1.1　 数据为什么要可视化　　1
1.2　 为什么要写代码　　2
1.3　 为什么要交互　　2
1.4　 为什么要在Web上　　3
1.5　 这是一本什么书　　3
1.6　 读者是谁　　4
1.7　 这不是什么书　　4
1.8　 使用示例代码　　5
1.9　 谢谢你　　6
第2章　D3简介　　7
2.1　 D3能做什么　　7
2.2　 D3不能做什么　　8
2.3　 起源与背景　　9
2.4　 替代方案　　10
2.4.1　 简易图表　　10
2.4.2　 图谱可视化　　12
2.4.3　 地图映射　　12
2.4.4　 较原始的方案　　13
2.4.5　 三维图形　　13
2.4.6　 基于D3的工具　　14
第3章　技术基础　　15
3.1　 Web（万维网）　　15
3.2　 HTML　　17
3.2.1　 内容和结构　　18
3.2.2　 通过元素来添加结构　　19
3.2.3　 常用元素　　20
3.2.4　 属性　　22
3.2.5　 类和ID　　22
3.2.6　 注释　　23
3.3　 DOM　　23
3.4　 开发者工具　　24
3.5　 渲染与盒模型　　26
3.6　 CSS　　28
3.6.1　 选择符　　28
3.6.2　 属性和值　　30
3.6.3　 注释　　30
3.6.4　 引用样式　　30
3.6.5　 继承、层叠和特指度　　32
3.7　 JavaScript　　34
3.7.1　 Hello, Console　　34
3.7.2　 变量　　34
3.7.3　 其他数据类型　　35
3.7.3　 数学运算符　　39
3.7.4　 比较运算符　　39
3.7.5　 控制结构　　40
3.7.6　 函数　　42
3.7.7　 注释　　43
3.7.8　 引用脚本文件　　43
3.7.9　 JavaScript陷阱　　44
3.8　 SVG　　48
3.8.1　 SVG元素　　48
3.8.2　 简单的图形　　49
3.8.3　 为SVG元素添加样式　　51
3.8.4　 分层与绘制顺序　　53
3.8.5　 透明度　　54
3.9　 关于兼容性　　56
第4章　安装D3　　59
4.1　 下载D3　　59
4.2　 引用D3　　60
4.3　 配置Web服务器　　61
4.3.1　 基于Python的文本终端方案　　61
4.3.2　 MAMP、WAMP和LAMP　　62
4.3.3　 快开始吧　　62
第5章　数据　　63
5.1　 生成页面元素　　63
5.1.1　 连缀方法　　65
5.1.2　 各个击破　　66
5.1.3　 平稳交接　　66
5.1.4　 不要连缀　　67
5.2　 绑定数据　　67
5.2.1　 怎么绑定　　67
5.2.2　 数据　　68
5.2.3　 作出你的选择　　71
5.2.4　 绑定及确定　　72
5.3　 使用自己的数据　　75
5.3.1　 自定义函数　　75
5.3.2　 数据需要拥抱　　76
5.2.3　 添加样式　　77
第6章　基于数据绘图　　79
6.1　 绘制DIV　　79
6.1.1　 设定属性　　80
6.1.2　 关于类　　81
6.1.3　 言归正传　　81
6.1.4　 设定样式　　82
6.2　 data()的魔力　　83
6.3　 绘制SVG　　86
6.3.1　 创建SVG　　87
6.3.2　 数据驱动的图形　　88
6.3.3　 你好，色彩　　90
6.4　 绘制条形图　　90
6.4.1　 老方法生成的条形图　　90
6.4.2　 用新方法改进条形图　　91
6.4.3　 上色　　96
6.4.4　 加标签　　98
6.5　 绘制散点图　　100
6.5.1　 数据　　100
6.5.2　 散点图　　101
6.5.3　 散点大小　　102
6.5.4　 标签　　103
6.6　 更上一层楼　　105
第7章　比例尺　　107
7.1　 苹果和像素　　107
7.2　 值域和范围　　108
7.3　 归一化　　109
7.4　 创建比例尺　　109
7.5　 缩放散点图　　110
7.5.1　 d3.min()和d3.max()　　110
7.5.2　 设置动态缩放　　112
7.5.3　 整合缩放后的值　　112
7.6　 修饰图表　　113
7.7　 其他方法　　117
7.8　 其他比例尺　　117
第8章　数轴　　119
8.1　 数轴简介　　119
8.2　 设定数轴　　120
8.3　 修整数轴　　121
8.4　 优化刻度　　124
8.5　 垂直数轴　　125
8.6　 最后的润色　　126
8.7　 为刻度标签定义样式　　128
第9章　更新、过渡和动画　　129
9.1　 更新条形图　　129
9.1.1　 序数比例尺　　130
9.1.2　 自动分档　　132
9.1.3　 使用序数比例尺　　132
9.1.4　 其他更新　　133
9.2　 更新数据　　133
9.2.1　 通过事件监听器实现交互　　134
9.2.2　 改变数据　　135
9.2.3　 更新视觉元素　　135
9.3　 过渡动画　　138
9.3.1　 持续时间　　139
9.3.2　 缓动函数　　140
9.3.3　 延迟时间　　141
9.3.4　 使用随机数据　　143
9.3.5　 更新比例尺　　145
9.3.6　 更新数轴　　147
9.3.7　 在过渡开始和结束时执行操作　　149
9.4　 其他数据更新方式　　156
9.4.1　 添加值（和元素）　　156
9.4.2　 删除值（和元素）　　161
9.4.3　 通过键联结数据　　164
9.4.4　 添加和删除组合拳　　169
9.4.5　 简要回顾　　170
第10章　交互式图表　　171
10.1　 绑定事件监听器　　171
10.2　 什么是行为　　172
10.3　 分组SVG元素　　177
10.4　 提示条　　182
10.4.1　 浏览器默认提示条　　182
10.4.2　 SVG元素提示条　　184
10.4.3　 HTML的div提示条　　185
10.5　 适应触摸设备　　188
10.6　 更进一步　　188
第11章　 布局　　189
11.1　 饼图布局　　190
11.2　 堆叠布局　　194
11.3　 力导向布局　　197
第12章　 地图　　203
12.1　 JSON与GeoJSON　　203
12.2　 路径　　205
12.3　 投影　　206
12.4　 等值区域　　208
12.5　 添加定位点　　212
12.6　 取得和解析地图数据　　215
12.6.1　 查找shapefile文件　　215
12.6.2　 选择解析度　　216
12.6.3　 简化数据文件　　217
12.6.4　 转换为GeoJSON　　218
第13章　导出文件　　221
13.1　 导出位图　　221
13.2　 导出PDF　　222
13.3　 导出SVG　　223
附录A　 扩展阅读　　227
A.1　 图书　　228
A.2　 网站　　228
A.3　 Twitter　　229
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>数据可视化实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node Web开发
目          录
第1章     Node入门    1
1.1     Node能做什么    1
1.2     为什么要使用Node    3
1.2.1     架构问题：线程，还是异步事件驱动    4
1.2.2     性能和利用率    5
1.2.3     服务器利用率、成本和绿色Web托管服务    6
1.3     Node、Node.js还是Node .JS    7
1.4     小结    7
第2章     安装并配置Node    8
2.1     系统要求    8
2.2     在符合POSIX标准的系统上安装    9
2.3     在Mac OS X上安装开发者工具    9
2.3.1     在home目录下安装    9
2.3.2     在系统级目录下安装Node    11
2.3.3     在Mac OS X上使用MacPorts安装    12
2.3.4     在Mac OS X上使用homebrew安装    12
2.3.5     在Linux上使用软件包管理系统安装    12
2.3.6     同时安装并维护多个Node    13
2.4     验证安装成功与否    14
2.4.1     Node命令行工具    14
2.4.2     用Node运行简单的脚本    15
2.4.3     用Node启动服务器    16
2.5     安装npm——Node包管理器    16
2.6     系统启动时自动启动Node服务器    17
2.7     小结    22
第3章     Node模块    23
3.1     什么是模块    23
3.1.1     Node模块    24
3.1.2     Node解析require ('module')的方式    24
3.2     Node包管理器    28
3.2.1     npm包的格式    29
3.2.2     查找npm包    30
3.2.3     使用npm命令    31
3.2.4     Node包版本的标识和范围    38
3.2.5     CommonJS模块    39
3.3     小结    40
第4章     几种典型的简单应用    41
4.1     Math Wizard    41
4.2     不依赖框架的实现    41
4.2.1     路由请求    42
4.2.2     处理URL查询参数    43
4.2.3     乘法运算    44
4.2.4     其他数学函数的执行    45
4.2.5     扩展Math Wizard    48
4.2.6     长时间运行的运算（斐波那契数）    48
4.2.7     还缺什么功能    51
4.2.8     使用Connect框架实现Math Wizard    52
4.2.9     安装和设置Connect    52
4.2.10     使用Connect    53
4.3     使用Express框架实现Math Wizard    55
4.3.1     准备工作    55
4.3.2     处理错误    59
4.3.3     参数化的URL和数据服务    60
4.4     小结    64
第5章     简单的Web服务器、EventEmitter和HTTP客户端    65
5.1     通过EventEmitter发送和接收事件    65
5.2     HTTP Sniffer——监听HTTP会话    67
5.3     基本的Web服务器    69
5.4     MIME类型和MIME npm包    78
5.5     处理cookie    79
5.6     虚拟主机和请求路由    79
5.7     发送HTTP客户端请求    79
5.8     小结    81
第6章     存取数据    83
6.1     Node的数据存储引擎    83
6.2     SQLite3——轻量级的进程内SQL引擎    83
6.2.1     安装SQLite 3    83
6.2.2     用SQLite3实现便签应用    84
6.2.3     在Node中使用其他SQL数据库    95
6.3     Mongoose    96
6.3.1     安装Mongoose    96
6.3.2     用Mongoose实现便签应用    97
6.3.3     对MongoDB数据库的其他支持    102
6.4     如何实现用户验证    102
6.5     小结    104

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node Web开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通AngularJS
序  1
第 1 章 Angular之禅 7
11  邂逅AngularJS  7
熟悉框架 8
参与AngularJS项目 8
社区 8
在线学习资源  9
库和扩展 9
工具 9
Batarang  10
Plunker与jsFiddle  10
IDE扩展和插件  10
12 AngularJS速成  10
Hello World——AngularJS 示例  10
双向数据绑定 12
AngularJS中的MVC 模式 12
鸟瞰 13
深入作用域 15
视图 21
模块与依赖注入 26
模块 26
协作对象  27
注册服务 29
模块的生命周期  33
模块依赖  35
13 AngularJS和其他框架 38
jQuery 与 AngularJS 39
苹果与橙子 40
窥视未来 41
14  总结 41
第 2 章  构建与测试 43
21  介绍示例应用 44
熟悉问题领域 44
技术栈 45
持久化存储 46
MongoLab 46
服务器端环境  47
第三方JavaScript库 48
Bootstrap CSS 48
22    构建系统 48
构建系统准则 49
自动化所有事情 49
尽早报错，清晰报错 49
不同的工作流，不同的命令 50
构建脚本同样是代码 50
工具 50
Gruntjs 51
测试库与工具 51
Jasmine 51
Karma runner  52
23    组织文件和目录  52
根目录  52
进入源代码目录  54
AngularJS的特定文件  54
轻装上路  56
深入测试目录  57
文件命名约定  57
24    AngularJS模块和文件  57
一个文件，一个模块 58
模块内部  59
注册provider的不同语法  59
声明配置和运行块的语法61
25    自动化测试 62
单元测试 63
剖析Jasmine测试 64
测试AngularJS对象  65
测试服务  65
测试控制器  67
Mock对象和异步代码测试 68
端对端测试 70
日常工作流 71
Karma runner的提示与技巧  72
执行测试子集  73
调试  73
26    小结  74
第 3章  与后端服务器通信 75
31  使用 $http 进行 XHR和JSONP 请求  75
熟悉数据模型和MongoLab URLs  76
$http API快速导览  76
配置对象说明 77
转换请求数据  78
处理HTTP响应  79
转换响应数据  79
处理同源政策约束  79
利用JSONP克服同源政策约束 80
JSONP的限制  81
利用CORS克服同源政策约束  81
服务器端代理 83
32 promise API 与$q84
工作中的promise 和$q服务 85
学习$q服务的基础知识 85
promise是第一类JavaScript对象  87
聚合回调 88
注册回调和承诺的生命周期 88
异步动作的链式调用 89
关于$q的其他 91
AngularJS中的$q集成 93
33 promise API与 $http 94
34  与 RESTful 端点通信  95
$resource服务  95
构造级与实例级方法  97
$resource 创建异步方法  100
$resource服务的限制 101
使用$http 自定义 REST 适配器 101
35  使用$http 的高级特性  104
截取响应  104
36  测试与 $http 交互的代码  106
37  小结  108
第 4 章  显示与格式化数据 109
41  引用指令  109
42  显示表达式的求值结果 110
插值指令 110
利用ngBind渲染模型值  111
AngularJS表达式中的 HTML内容  111
43  条件化显示 112
根据条件包含内容块 114
44  用 ngRepeat 指令渲染集合 114
熟悉ngRepeat 指令  115
特殊变量  115
迭代对象的属性 116
ngRepeat 模式  117
列表和细节  117
改动表格、行和类 119
45 DOM 事件处理器  120
46  基于DOM 的模板 121
习惯烦琐的语法 121
ngRepeat 和多个DOM 元素 122
不能在运行时修改的元素和属性 123
自定义HTML元素与 IE 的老版本  124
47  使用过滤器处理模型变换  124
内置过滤器 125
格式化过滤器 125
数组变换过滤器 125
编写自定义过滤器——分页示例  131
从JavaScript代码中访问过滤器 133
过滤器做什么与不做什么 134
过滤器与DOM操作 135
过滤器中代价高昂的数据变换 136
不稳定的过滤器 136
48  摘要  138
第5章  创建高级表单  139
51 AngularJS表单与传统表单的比较 139
介绍ngModel 指令 141
52  创建用户信息表单  142
53  理解输入指令 143
添加所需验证 143
使用基于文本的输入（text、textarea、e-mail、URL、number） 143
使用checkbox 输入  144
使用radio 输入 145
使用select 输入 145
提供简单的字符串options 145
利用ngOptions指令提供动态options  146
select指令与空的options  148
理解select和对象判等  149
选择多个options  150
运用传统的HTML hidden input 字段  150
嵌入来自服务器的值  150
提交传统的HTML表单  151
54  详解ngModel 数据绑定  151
理解ngModelController  151
在模型与视图之间转换值152
追踪值是否变化 152
跟踪input字段有效性153
55  校验AngularJS 表单 153
理解ngFormController 153
运用name属性将表单附加到作用域上 154
为用户信息表单增加动态行为 154
显示验证错误 155
让保存按钮无效 156
使原生浏览器校验无效 157
56  在其他表单中嵌套表单 157
将子表单作为可重用组件 157
57  重复子表单  158
验证重复输入 159
58  处理传统的HTML表单提交 161
直接向服务器提交表单 161
处理表单提交事件 161
使用ngSubmit处理表单提交  162
使用ngClick处理表单提交  162
59  重置用户信息表单  162
510  摘要  164
第 6 章  导航  165
61  单页Web应用的URL  166
HTML5之前的Hashbang URL  166
HTML5和history API 167
62  使用 $location服务  168
理解$location服务API与 URL的关系  169
哈希、页面内导航和 $anchorScroll 170
配置HTML5方式的URL  171
客户端  171
服务端  171
使用$location 导航 172
根据路由构建页面 173
路由映射URL 174
定义路由时指定控制器 174
导航的不足 175
63  使用AngularJS自带的路由服务 175
基础路由定义 175
显示匹配的路由内容 176
匹配灵活的路由 177
定义默认路由 178
访问路由参数 178
多个控制器重用局部模板 178
路由改变时避免UI 抖动 179
取消路由更新 181
64 $route 服务的局限  182
一个路由只对应页面中的一个区域  183
使用ng-include处理多个UI区域  183
不支持嵌套路由  184
65  路由相关的模式及技巧  185
处理链接  185
创建可点击的链接  186
兼容HTML5及hashbang模式  186
链接外部页面 187
组织路由定义 187
将路由定义分离到多个模块  188
减少路由定义的重复代码 188
66  总结  189
第7 章  安全  191
71  提供服务端认证和授权  192
处理未授权的访问  192
提供服务端验证API  192
72  保护局部模板 193
73  阻止恶意攻击  194
防止cookie 监听、中间人攻击  194
防止跨站脚本攻击 195
确保AngularJS 表达式内HTML 内容的安全性 195
允许不安全的HTML 绑定  196
净化HTML  196
防止JSON 注入攻击 197
防止跨站请求伪造  198
74  客户端安全  198
创建security 服务  199
显示登录表单 200
创建安全的菜单及工具栏  201
隐藏菜单项  201
创建登录工具栏 202
75  支持客户端认证 203
处理认证失败 203
拦截响应 204
HTTP响应拦截器 204
创建 securityInterceptor 服务 205
创建securityRetryQueue 服务 207
通知安全服务 208
76  防止导航到安全受限路由 208
使用路由resolve函数 209
创建授权服务  210
77  总结 212
第 8 章  创建自定义指令 213
81  什么是 AngularJS 指令  214
理解内置指令  214
在HTML标签中使用指令 215
82  指令的编译生命周期 215
83  为指令编写单元测试 217
84  定义指令  218
85  使用指令修改按钮样式  219
编写一个按钮指令 220
86  理解 AngularJS的组件指令 222
编写一个分页指令 222
为分页指令编写单元测试代码 223
在指令中使用HTML模板 224
从父作用域中隔离指令 225
使用@插入属性 226
使用=绑定数据  227
使用&提供一个回调表达式  227
实现分页组件 228
为指令添加分页跳转回调 229
87  创建一个自定义验证指令 230
需要其他指令的控制器 231
可选的依赖控制器 231
查找祖先元素的控制器 232
使用ngModelController 232
编写自定义验证指令的单元测试 233
实现自定义验证指令  235
88  创建一个异步模型验证器  235
模拟用户服务 236
为异步验证编写测试代码  237
实现异步验证指令 238
89  包装 jQueryUIdatepicker 指令 239
为包装组件指令编写测试代码 240
实现jQuery datepicker 指令 242
810  小结243
第9章  创建自定义指令 245
91  使用嵌入 245
在指令中使用嵌入 245
在独立作用域指令中使用嵌入 246
创建一个使用嵌入的提示指令 246
理解指令定义中的replace属性  247
理解指令定义中的transclude属性 248
使用ng-transclude插入嵌入元素 248
理解嵌入作用域 248
92  创建和使用嵌入函数 250
使用$compile 服务创建一个嵌入函数 251
在嵌入时克隆原始元素 251
在指令中访问嵌入函数 252
通过编译函数中的transcludeFn来获取嵌入函数  252
通过$transclude在指令控制器中获取嵌入函数  253
使用嵌入创建一个if 指令  253
在指令中使用priority属性  255
93  理解指令控制器 256
为指令控制器注入特殊依赖  257
创建一个基于控制器的分页指令 258
理解指令控制器和链接函数的区别 258
注入依赖 259
编译过程 259
获取其他控制器 260
获取嵌入函数  261
创建一个手风琴指令套件  261
在手风琴组件中使用指令控制器 262
实现accordion指令 263
实现accordion-group指令 263
94  控制编译过程 265
创建一个ﬁeld指令 265
在指令中使用terminal属性  267
使用$interpolate 服务 268
绑定验证信息 269
动态加载模板 269
设置ﬁeld指令的模板 270
95  小结271
第 10章  创建为全球用户服务的AngularJS应用 273
101  使用本地化的符号和设置  274
配置本地化设置模块  274
使用已有的本地化设置  275
本地化设置和AngularJS过滤器  275
102  处理翻译  277
翻译AngularJS模板中的字符串  277
使用过滤器 278
使用指令  279
翻译JavaScript代码中的字符串 280
103  范式、秘诀和技巧 282
按照设定的地区初始化应用 282
将地区标识作为URL一部分带来的问题 283
切换地区 284
针对日期、数字和货币的自定义过滤器 285
104  小结 287
第 11章  开发健壮的 AngularJS应用  289
111  理解AngularJS的内部运作机制 290
AngularJS不是基于字符串的模板引擎 290
响应DOM事件更新模型  291
将模型变化传播给DOM  291
同步DOM和模型变化 292
Scope$apply——打开AngularJS世界的钥匙 293
深入$digest循环  295
整合 300
112  性能优化——设置期望值、测量、调节、并重复  301
113 AngularJS应用的性能优化 303
优化CPU使用率 303
加速$digest循环 303
尽可能少进入$digest循环  310
限制每个$digest循环的执行轮数 312
优化内存占用 312
尽可能避免深度监视 312
注意监视表达式的大小 314
ng-repeat 指令 314
ng-repeat指令中对集合的监视 314
瞬间绑定大量监视 315
114  小结 315
第12章  打包和部署 AngularJS Web 应用  317
121  提升网络相关的性能  318
压缩静态资源  318
AngularJS如何判断依赖关系  318
编写会被安全压缩的JavaScript代码 319
数组风格依赖注入的缺陷322
模板预加载 323
使用<script>指令预加载模板 324
填充$templateCache服务  325
组合使用不同的预加载技术  327
122  优化首页  327
避免显示未经处理的模板 328
使用ng-cloak指令隐藏DOM元素 328
使用ng-bind指令隐藏表达式 329
引入AngularJS 和应用脚本文件 330
引用脚本文件 330
AngularJS和异步模块定义 331
123  浏览器支持 333
在Internet Explorer 中使用 333
124  小结 334
索引 337
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通AngularJS
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>jQuery基础教程
第1章　jquery入门
1.1　jquery能做什么
1.2　jquery为什么如此出色
1.3　jquery项目历史
1.4　第一个jquery驱动的页面
1.4.1　下载jquery
1.4.2　建立html文档
1.4.3　编写jquery代码
1.4.4　最终结果
1.5　小结
第2章　选择符
2.1　dom
2.2　工厂函数$()
2.3　css选择符
2.4　属性选择符
2.5　自定义选择符
2.5.1　每隔一行为表格添加样式
2.5.2　基于表单的选择符
2.6　dom遍历方法
2.6.1　为特定单元格添加样式
2.6.2　连缀
2.7　访问dom元素
2.8　小结
第3章　事件
3.1　在页面加载后执行任务
3.1.1　代码执行的时机选择
3.1.2　基于一个页面执行多个脚本
3.1.3　缩短代码的简写方式
3.1.4　与其他库共存
3.2　简单的事件
3.2.1　简单的样式转换器
3.2.2　简写的事件
3.3　复合事件
3.3.1　显示和隐藏高级特性
3.3.2　突出显示可单击的项
3.4　事件的旅程
3.5　通过事件对象改变事件的旅程
3.5.1　事件目标
3.5.2　停止事件传播
3.5.3　默认操作
3.5.4　事件委托
3.6　移除事件处理程序
3.6.1　事件的命名空间
3.6.2　重新绑定事件
3.7　模仿用户操作
3.8　小结
第4章　效果
4.1　修改内联css
4.2　基本的隐藏和显示
4.3　效果和速度
4.3.1　指定显示速度
4.3.2　淡入和淡出
4.4　复合效果
4.5　创建自定义动画
4.5.1　切换淡入淡出
4.5.2　创建多个属性的动画
4.6　并发与排队效果
4.6.1　处理一组元素
4.6.2　处理多组元素
4.6.3　回调函数
4.6.4　简单概括
4.7　小结
第5章　dom操作
5.1　操作属性
5.1.1　非class属性
5.1.2　深入理解$()工厂函数
5.2　插入新元素
5.3　移动元素
5.3.1　标注、编号和链接到上下文
5.3.2　插入脚注
5.4　包装元素
5.5　复制元素
5.5.1　连同事件一起复制
5.5.2　通过复制创建突出引用
5.5.3　通过css使突出引用偏离正文
5.5.4　回到代码中
5.5.5　修饰突出引用
5.6　dom操作方法的简单归纳
5.7　小结
第6章　ajax
6.1　基于请求加载数据
6.1.1　追加html
6.1.2　操作javascript对象
6.1.3　加载xml文档
6.2　选择数据格式
6.3　向服务器传递数据
6.3.1　执行get请求
6.3.2　执行post请求
6.3.3　序列化表单
6.4　关注请求
6.5　ajax和事件
6.6　安全限制
6.7　其他工具
6.7.1　低级ajax方法
6.7.2　修改默认选项
6.7.3　部分加载html页面
6.8　小结
第7章　表格操作
7.1　排序和分页
7.1.1　服务器端排序
7.1.2　javascript排序
7.1.3　服务器端分页
7.1.4　javascript分页
7.1.5　完成的代码
7.2　修改表格外观
7.2.1　突出显示行
7.2.2　工具提示条
7.2.3　折叠和扩展
7.2.4　筛选
7.2.5　完成的代码
7.3　小结
第8章　构建功能型表单
8.1　改进基本的表单
8.1.1　渐进增强表单样式
8.1.2　根据条件显示的字段
8.1.3　表单验证
8.1.4　复选框操作
8.1.5　完成的代码
8.2　提升紧凑的表单
8.2.1　字段的占位符文本
8.2.2　ajax自动完成
8.2.3　完成的代码
8.3　操作数字型表单数据
8.3.1　购物车表格结构
8.3.2　拒绝非数字输入
8.3.3　数字计算
8.3.4　删除商品
8.3.5　修改送货信息
8.3.6　完成的代码
8.4　小结
第9章　滑移和翻转
9.1　标题新闻翻转效果
9.1.1　设置页面
9.1.2　取得新闻源
9.1.3　设置翻转效果
9.1.4　标题新闻翻转函数
9.1.5　悬停时暂停
9.1.6　从不同的域中取得新闻源
9.1.7　附加的内部渐变效果
9.1.8　完成的代码
9.2　图像传送带
9.2.1　设置页面
9.2.2　通过单击滑移图像
9.2.3　放大图像
9.2.4　完成的代码
9.3　小结
第10章　使用插件
10.1　查找插件和帮助
10.2　使用插件
10.3　form插件
10.4　jquery ui插件库
10.4.1　效果
10.4.2　交互组件
10.4.3　部件
10.4.4　jquery ui themeroller
10.5　其他插件
10.5.1　表单类
10.5.2　表格类
10.5.3　图像类
10.5.4　亮盒及模态对话框
10.5.5　图表类
10.5.6　事件类
10.6　小结
第11章　开发插件
11.1　添加新的全局函数
11.1.1　添加多个函数
11.1.2　关键所在
11.1.3　创建实用方法
11.2　添加jquery对象方法
11.2.1　对象方法的环境
11.2.2　方法连缀
11.3　dom遍历方法
11.4　添加新的简写方法
11.5　方法的参数
11.5.1　简单参数
11.5.2　参数映射
11.5.3　默认参数值
11.5.4　回调函数
11.5.5　可定制的默认值
11.6　添加选择符表达式
11.7　共享插件
11.7.1　命名约定
11.7.2　别名$的使用
11.7.3　方法接口
11.7.4　文档格式
11.8　小结
附录a　在线资源
附录b　开发工具
附录c　javascript闭包
附录d　快速参考
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>jQuery基础教程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>jQuery 技术内幕
第1章  总体架构	1
1.1 设计理念	1
1.2 总体架构	1
1.3 自调用匿名函数	4
1.4 总结	6
第2章  构造 jQuery 对象	6
2.1 构造函数 jQuery()	7
2.1.1 jQuery( selector [, context] )	7
2.1.2 jQuery( html [, ownerDocument] )、jQuery( html, props )	8
2.1.3 jQuery( element )、jQuery( elementArray )	9
2.1.4 jQuery( object )	9
2.1.5 jQuery( callback )	10
2.1.6 jQuery( jQuery object )	10
2.1.7 jQuery()	10
2.2 总体结构	10
2.3 jQuery.fn.init( selector, context, rootjQuery )	13
2.3.1 12个分支	13
2.3.2 源码分析	14
2.3.3 小结	24
2.4 jQuery.buildFragment( args, nodes, scripts )	24
2.4.1 实现原理	24
2.4.2 源码分析	25
2.4.3 小结	30
2.5 jQuery.clean( elems, context, fragment, scripts )	31
2.5.1 实现原理	31
2.5.2 源码分析	32
2.5.3 小结	48
2.6 jQuery.extend()、jQuery.fn.extend()	48
2.6.1 如何使用	48
2.6.2 源码分析	49
2.7 原型属性和方法	53
2.7.1 .selector、.jquery、.length、.size()	54
2.7.2 .toArray()、.get( [index] )	55
2.7.3 .each( function(index, Element) )、jQuery.each( collection, callback(indexInArray, valueOfElement) )	56
2.7.4 .map( callback(index, domElement) )、jQuery.map( arrayOrObject, callback( value, indexOrKey ) )	59
2.7.5 .pushStack( elements, name, arguments )	62
2.7.6 .end()	64
2.7.7 .eq( index )、.first()、.last()、.slice( start [, end] )	64
2.7.8 .push( valur, ... )、.sort( [orderfunc] )、.splice( start,deleteCount, value, ... )	65
2.7.9 小结	66
2.8 静态属性和方法	67
2.8.1 jQuery.noConflict( [removeAll] )	69
2.8.2 类型检测：jQuery.isFunction( obj )、jQuery.isArray( obj )、jQuery.isWindow( obj )、jQuery.isNumeric( value )、jQuery.type( obj )、jQuery.isPlainObject( object )、jQuery.isEmptyObject( object )	70
2.8.3 解析 JSON 和 XML：jQuery.parseJSON( data)、jQuery.parseXML( data )	75
2.8.4 jQuery.globalEval( code )	81
2.8.5 jQuery.camelCase ( string )	82
2.8.6 jQuery.nodeName ( elem, name )	83
2.8.7 jQuery.trim( str )	84
2.8.8 数组操作方法：jQuery.makeArray( obj )、jQuery.inArray( value, array [, fromIndex] )、jQuery.merge( first, second )、jQuery.grep( array, function(elementOfArray, indexInArray) [, invert] )	85
2.8.9 jQuery.guid、jQuery.proxy( function, context )	91
2.8.10 jQuery.access( elems, key, value, exec, fn( elem, key, value ), pass )	94
2.8.11 jQuery.error( message )、jQuery.noop()、jQuery.now()	96
2.8.12 浏览器嗅探：jQuery.uaMatch( ua )、jQuery.browser	96
2.8.13 小结	98
2.9 总结	100
第3章  选择器 Sizzle	100
3.1 总体结构	101
3.2 选择器表达式	104
3.3 设计思路	105
3.4 Sizzle( selector, context, results, seed )	107
3.5 正则 chunker	119
3.6 Sizzle.find( expr, context, isXML )	121
3.7 Sizzle.filter( expr, set, inplace, not )	124
3.8 Sizzle.selectors.relative	129
3.8.1 "+"	130
3.8.2 ">"	132
3.8.3 ""	133
3.8.4 "~"	134
3.8.5 dirCheck( dir, cur, doneName, checkSet, nodeCheck, isXML )	135
3.8.6 dirNodeCheck( dir, cur, doneName, checkSet, nodeCheck, isXML )	136
3.9 Sizzle.selectors	138
3.9.1 Sizzle.selectors.order	138
3.9.2 Sizzle.selectors.match/leftMatch	139
3.9.3 Sizzle.selectors.find	151
3.9.4 Sizzle.selectors.preFilter	154
3.9.5 Sizzle.selectors.filters	162
3.9.6 Sizzle.selectors.setFilters	165
3.9.7 Sizzle.selectors.filter	166
3.10 工具方法	176
3.10.1 Sizzle.uniqueSort( results )	176
3.10.2 sortOrder(a, b)	177
3.10.3 Sizzle.contains( a, b )	182
3.10.4 Sizzle.error( msg )	182
3.10.5 Sizzle.getText( elem )	183
3.11 便捷方法	184
3.11.1 Sizzle.matches( expr, set )	184
3.11.2 Sizzle.matchesSelector( node, expr )	184
3.12 jQuery 扩展	186
3.12.1 暴露 Sizzle 给 jQuery	186
3.12.2 .find( selector )	186
3.12.3 .has( target )	188
3.12.4 .not( selector )、.filter( selecotr )	189
3.12.5 .is( selector )	191
3.12.6 .closest( selectors, context )	193
3.12.7 .index( elem )	195
3.12.8 .add( selector, context )	196
3.12.9 jQuery.filter( expr, elems, not )	197
3.12.10 :animated	198
3.12.11 :hidden、:visible	199
3.13 总结	200
第4章  异步队列 Deferred Object	201
4.1 jQuery.Callbacks( flags )	202
4.1.1 实现原理和总体结构	204
4.1.2 源码分析	205
4.1.3 小结	219
4.2 jQuery.Deferred( func )	220
4.2.1 实现原理和总体结构	223
4.2.2 源码分析	224
4.2.3 小结	232
4.3 jQuery.when( deferreds )	232
4.3.1 实现原理	234
4.3.2 源码分析	234
4.4 异步队列在 jQuery 中的应用	237
4.5 总结	238
第5章  数据缓存 Data	238
5.1 实现原理	239
5.1.1 为 DOM 元素附加数据	239
5.1.2 为 JavaScript 对象附加数据	241
5.2 总体结构	242
5.3 jQuery.acceptData( elem )	244
5.4 jQuery.data( elem, name, data, pvt )、jQuery._data( elem, name, data, pvt )	245
5.4.1 如何使用	245
5.4.2 源码分析	246
5.4.3 jQuery._data( elem, name, data )	253
5.4.4 小结	254
5.5 .data( key, value )	256
5.5.1 如何使用	256
5.5.2 源码分析	256
5.5.3 小结	261
5.6 jQuery.removeData( elem, name, pvt )、.removeData( key )	262
5.6.1 如何使用	262
5.6.2 源码分析	263
5.6.4 小结	269
5.7 .removeData( key )	270
5.8 jQuery.cleanData( elems )	271
5.8.1 应用场景	271
5.8.2 源码分析	273
5.8.3 小结	276
5.9 jQuery.hasData( elem )	277
5.10 总结	278
第6章  队列 Queue	279
6.1 如何使用	280
AJAX 队列	280
动画队列 + AJAX 队列	281
基于 JavaScript 对象	281
6.2 实现原理	282
6.3 总体结构	282
6.4 jQuery.queue( elem, type, data )	284
6.5 jQuery.dequeue( elem, type )	286
6.6 .queue( type, data )	288
6.7 .dequeue( type )	290
6.8 .delay( time, type )	291
6.9 .clearQueue( type )	292
6.10 jQuery._mark( elem, type )、jQuery._unmark( force, elem, type )	293
6.11 .promise( type, object )	295
6.11.1 如何使用	295
6.11.2 实现原理	296
6.11.3 源码分析	297
6.11.4 handleQueueMarkDefer( elem, type, src )	299
6.12 总结	301
第7章  浏览器功能测试 Support	302
7.1 总体结构	302
7.2 DOM 测试（15 项）	305
7.2.1 leadingWhitespace	305
7.2.2 tbody	307
7.2.3 htmlSerialize	309
7.2.4 hrefNormalized	311
7.2.5 checkOn	313
7.2.6 noCloneChecked	315
7.2.7 optSelected	318
7.2.8 optDisabled	320
7.2.9 getSetAttribute	322
7.2.10 deleteExpando	326
7.2.11 enctype	328
7.2.12 html5Clone	330
7.2.13 radioValue	332
7.2.14 checkClone	334
7.2.15 appendChecked	337
7.3 样式测试（3 项）	339
7.3.1 style	339
7.3.2 opacity	342
7.3.3 cssFloat	346
7.4 盒模型测试（10 项）	349
7.4.1 reliableMarginRight	349
7.4.2 reliableHiddenOffsets	352
7.4.3 boxModel	355
7.4.4 inlineBlockNeedsLayout	358
7.4.5 shrinkWrapBlocks	361
7.4.6 doesNotAddBorder、doesAddBorderForTableAndCells	365
7.4.7 fixedPosition	369
7.4.8 subtractsBorderForOverflowNotVisible	372
7.4.9 doesNotIncludeMarginInBodyOffset	375
7.5 事件测试（4 项）	378
7.5.1 noCloneEvent	378
7.5.2 submitBubbles、changeBubbles、focusinBubbles	381
7.6 Ajax 测试（2 项）	383
7.6.1 ajax	383
7.6.2 cors	386
7.7 总结	387
第8章  属性操作 Attributes	392
8.1 总体结构	394
8.2 jQuery.attr( elem, name, value, pass )	395
8.2.1 源码分析	396
8.2.2 boolHook	400
8.2.3 nodeHook	403
8.2.4 jQuery.attrHooks	404
8.2.5 小结	411
8.3 .attr( name, value )	412
8.4 jQuery.removeAttr( elem, value )	413
8.4.1 源码分析	414
8.4.2 小结	416
8.5 .removeAttr( name )	416
8.6 jQuery.prop( elem, name, value )	417
8.6.1 源码分析	417
8.6.2 jQuery.propHooks	420
8.6.3 小结	421
8.7 .prop( name, value )	422
8.8 .removeProp( name )	423
8.9 .addClass( className )	424
8.9.1 源码分析	425
8.9.2 小结	427
8.10 .removeClass( [className] )	428
8.10.1 源码分析	429
8.10.2 小结	431
8.11 .toggleClass( [className] [, switch] )	432
8.11.1 源码分析	432
8.11.2 小结	435
8.12 .hasClass( selector )	436
8.12.1 源码分析	436
8.12.2 小结	437
8.13 .val( [value] )	437
8.13.1 源码分析	438
8.13.2 jQuery.valHooks	441
8.13.3 小结	445
8.14 总结	446
第9章  事件系统 Events	448
9.1 总体结构	450
9.2 实现原理	455
9.3 jQuery 事件对象	457
9.3.1 构造函数 jQuery.Event( src, props )	459
9.3.2 原型对象 jQuery.Event.prototype	462
9.3.3 事件属性修正方法 jQuery.event.fix( event )	466
9.4 绑定事件	475
9.4.1 .on( events [, selector] [, data] , handler(eventObject) )	475
9.4.2 jQuery.event.add( elem, types, handler, data, selector )	479
9.5 移除事件	491
9.5.1 .off( events [, selector] [, handler(eventObject)] )	491
9.5.2 jQuery.event.remove( elem, types, handler, selector, mappedTypes )	495
9.6 事件响应	504
9.6.1 主监听函数	504
9.6.2 jQuery.event.dispatch( event )	505
9.7 手动触发事件	514
9.7.1 .trigger( eventType [, extraParameters] )、.triggerHandler( eventType [, extraParameters] )	514
9.7.2 jQuery.event.trigger( event, data, elem, onlyHandlers )	515
9.8 事件修正和模拟 jQuery.event.special	528
9.8.1 ready	529
9.8.2 load	530
9.8.3 focus、blur	530
9.8.4 beforeunload	531
9.8.5 mouseenter、mouseleave	532
9.8.6 submit	534
9.8.7 change	537
9.8.8 focusin、focusout	540
9.8.9 jQuery.event.simulate( type, elem, event, bubble )	541
9.9 事件便捷方法	543
9.10 组合方法	545
9.10.1 .toggle( handler(eventObject), handler(eventObject) [, handler(eventObject)] )	545
9.10.2 .hover(handlerIn(eventObject) [, handlerOut(eventObject)] )	546
9.11 ready 事件	547
9.11.1 总体结构	547
9.11.2 .ready( handler )	551
9.11.3 jQuery.bindReady()	551
9.11.4 jQuery.holdReady( hold )	556
9.11.5 jQuery.ready( wait )	557
9.12 总结	559
第10章  DOM 遍历 Traversing	562
10.1 总体结构	564
10.2 遍历函数	566
10.3 工具函数	569
10.3.1 jQuery.dir( elem, dir, until )	569
10.3.2 jQuery.nth( cur, result, dir, elem )	571
10.3.3 jQuery.sibling( n, elem )	572
10.4 模板函数	574
10.5 总结	576
第11章  DOM 操作 Manipulation	577
11.1 总体结构	577
11.2 插入元素	579
11.2.1 核心方法 .domManip( args, table, callback )	579
11.2.2 .append( content [, content] )	587
11.2.3 .prepend( content [, content] )	587
11.2.4 .before( content [, content] )	588
11.2.5 .after( content [, content] )	588
11.2.6 .appendTo( target )、.prependTo( target )、.insertBefore( target )、.insertAfter( target )	589
11.2.7 .html( [value] )	590
11.2.8 .text( [text] )	595
11.3 删除元素	598
11.3.1 .remove( selector, keepData )	598
11.3.2 .empty()	599
11.3.3 .detach( selector )	599
11.4 复制元素	600
11.4.1 .clone( dataAndEvents, deepDataAndEvents )	600
11.4.2 jQuery.clone( elem, dataAndEvents, deepDataAndEvents )	601
11.4.3 cloneFixAttributes( src, dest )	606
11.5 替换元素	609
11.5.1 .replaceWith( value )	609
11.5.2 .replaceAll( target )	612
11.6 包裹元素	612
11.6.1 .wrapAll( html )	612
11.6.2 .wrapInner( html )	613
11.6.3 .wrap( html )	614
11.6.4 .unwrap()	615
11.7 总结	615
第12章  样式操作 CSS	618
12.1 内联样式、计算样式	619
12.1.1 总体结构	619
12.1.2 .css( name, value )	621
12.1.3 jQuery.style( elem, name, value, extra )	622
12.1.4 jQuery.css( elem, name, extra )	628
12.1.5 curCSS( elem, name )、getComputedStyle( elem, name )、currentStyle( elem, name )	631
12.1.6 jQuery.cssHooks	634
12.2 坐标 Offset	643
12.2.1 总体结构	643
12.2.2 .offset( options )	644
12.2.3 jQuery.offset.setOffset( elem, options, i )	650
12.2.4 jQuery.offset.bodyOffset( body )	654
12.2.5 .position()	655
12.2.6 .offsetParent()	656
12.2.7 .scrollLeft( val )、.scrollTop( val )	657
12.3 尺寸 Dimensions	659
12.3.1 总体结构	659
12.3.2 getWH( elem, name, extra )	660
12.3.3 .innerHeight()、.innerWidth()	664
12.3.4 .outerHeight( margin )、.outerWidth( margin )	665
12.3.5 .height( size )、.width( size )	666
12.3.6 小结	670
12.4 总结	671
第13章  异步请求 Ajax	673
13.1 总体结构	674
13.2 jQuery.ajax( url, options )	677
13.3 前置过滤器、请求发送器的初始化和执行	705
13.3.1 初始化	706
13.3.2 执行	709
13.4 前置过滤器	713
13.4.1 json、jsonp	713
13.4.2 script	716
13.4.3 小结	717
13.5 请求发送器	718
13.5.1 script	718
13.5.2 XMLHttpRequest	722
13.5.3 小结	733
13.6 数据转换器	733
13.6.1 初始化	734
13.6.2 执行	736
13.6.3 小结	741
13.7 Ajax 事件	742
13.8 便捷方法	744
13.8.1 jQuery.get( url, data, callback, type )、jQuery.post( url, data, callback, type )	744
13.8.2 jQuery.getJSON( url, data, callback )、jQuery.getScript( url, callback )	745
13.8.3 .load( url, params, callback )	745
13.9 工具方法	750
13.9.1 .serialize()	750
13.9.2 jQuery.param( a, traditional )	751
13.9.3 .serializeArray()	756
13.10 总结	757
第14章  动画 Effects	761
14.1 总体结构	762
14.2 动画入口	766
14.2.1 .animate( prop, speed, easing, callback )	766
14.2.2 jQuery.speed( speed, easing, fn )	769
14.2.3 doAnimation()	772
14.2.4 jQuery.fx( elem, options, prop )	778
14.2.5 jQuery.fx.prototype.show()	779
14.2.6 jQuery.fx.prototype.hide()	780
14.2.7 小结	780
14.3 动画执行	781
14.3.1 jQuery.fx.prototype.custom( from, to, unit )	781
14.3.2 jQuery.fx.tick()	784
14.3.3 jQuery.fx.prototype.step( gotoEnd )	785
14.3.4 jQuery.easing	790
14.3.5 jQuery.fx.prototype.update()	791
14.3.6 jQuery.fx.step	791
14.4 停止动画 .stop( type, clearQueue, gotoEnd )	793
14.5 便捷方法	797
14.5.1 生成动画样式集 genFx( type, num )	797
14.5.2 显示隐藏 .show/hide/toggle()	798
14.5.3 渐显渐隐 .fadeIn/fadeOut/fadeTo/fadeToggle()	802
14.5.4 滑入滑出 .slideDwon/slidUp/slideToggle()	803
14.6 总结	804
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>jQuery 技术内幕
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5和CSS3实例教程
第1 章 HTML5 和CSS3 概述......................1
1.1 一个新的Web 开发平台...........................1
1.1.1 更多的描述性标记.........................1
1.1.2 较少依赖于插件的多媒体支持.....1
1.1.3 更强大的Web 应用.......................2
1.1.4 跨文档消息通信............................2
1.1.5 Web Sockets...................................2
1.1.6 客户端存储....................................2
1.1.7 更精美的界面................................2
1.1.8 更强大的表单................................2
1.1.9 提升可访问性................................3
1.1.10 先进的选择器..............................3
1.1.11 视觉效果......................................3
1.2 向后兼容....................................................3
1.3 未来之路崎岖不平....................................4
1.3.1 IE ...................................................5
1.3.2 可访问性........................................5
1.3.3 废弃的标签....................................6
1.3.4 企业利益的竞争............................7
1.3.5 HTML5 和CSS3 仍在改进............8
第一部分 改善用户界面
第2 章 新的结构标签和属性.......................10
2.1 实例1：用语义化标记重定义博客.........11
2.1.1 以正确的文档类型声明为
基础.............................................13
2.1.2 头部.............................................13
2.1.3 尾部.............................................14
2.1.4 导航.............................................14
2.1.5 区段和文章..................................15
2.1.6 文章.............................................16
2.1.7 旁白和侧边栏..............................17
2.1.8 旁白绝非页面侧边栏..................18
2.1.9 添加样式......................................19
2.1.10 回退...........................................21
2.2 实例2：使用自定义数据属性创建
弹出窗口.................................................22
2.2.1 行为与内容的分离，或者说
为什么设置onclick 不好.........22
2.2.2 提升可访问性..............................23
2.2.3 废弃onclick .............................23
2.2.4 自定义数据属性来解围...............24
2.2.5 回退.............................................25
2.2.6 未来展望......................................25
第3 章 创建易用的Web 表单....................27
3.1 实例3：使用新的输入字段描述数据.....28
3.1.1 改进AwesomeCo 项目中的
表单.............................................28
3.1.2 创建基础表单..............................29
3.1.3 使用range 类型创建滑块..........29
3.1.4 使用选值框处理数字..................30
3.1.5 日期控件......................................30
3.1.6 email 类型..................................31
3.1.7 url 类型......................................31
3.1.8 color 类型..................................32
3.1.9 回退.............................................32
3.3.10 替换颜色选择器........................33
3.1.11 Modernizr ..................................34
3.2 案例4：使用autofocus 属性定位
第一个表单字段元素..............................34
回退.........................................................35
3.3 实例5：使用placeholder 属性进行
2 目 录
提示......................................................... 35
3.3.1 简单的注册表单.......................... 36
3.3.2 阻止自动完成.............................. 37
3.3.3 回退............................................. 38
3.4 实例6：基于contenteditable
属性实现在位编辑.................................. 42
3.4.1 账户表单...................................... 42
3.4.2 持久化数据.................................. 44
3.4.3 回退............................................. 44
3.4.4 创批建编辑页面.......................... 44
3.4.5 未来展望...................................... 47
第4 章 用CSS3 打造更好的用户界面......48
4.1 实例7：使用伪类渲染表格.................... 49
4.1.1 优化付款清单样式...................... 49
4.1.2 使用:nth-of-type 条纹化
表格的行..................................... 51
4.1.3 使用:nth-child 对齐列文本.... 52
4.1.4 使用:last-child 加粗最后
一行............................................. 53
4.1.5 使用:nth-last-child 向前
查找元素..................................... 54
4.1.6 回退............................................. 55
4.1.7 修改html 代码............................. 55
4.1.8 使用JavaScript ............................ 56
4.2 实例8：使用:after 和content
支持打印页面上的链接.......................... 57
4.2.1 使用CSS ..................................... 57
4.2.2 回退............................................. 58
4.3 实例9：创建多列布局............................ 60
4.3.1 分栏............................................. 60
4.3.2 回退............................................. 63
4.4 实例10：使用媒体查询构建移动设备
界面......................................................... 65
4.4.1 回退............................................. 66
4.4.2 未来展望...................................... 66
第5 章 增强可访问性................................... 67
5.1 实例11：使用ARIA 角色提供导航
提示......................................................... 68
5.1.1 标志角色...................................... 68
5.1.2 文档结构角色.............................. 70
5.1.3 回退............................................. 71
5.2 实例12：创建可访问的可更新区域...... 71
5.2.1 创建页面..................................... 72
5.2.2 polite 和assertive 更新...... 74
5.2.3 atomic 更新............................... 74
5.2.4 隐藏区域..................................... 74
5.2.5 回退............................................. 76
5.2.6 未来展望..................................... 76
第二部分 新的影音解决方案
第6 章 在canvas 上绘图........................ 78
6.1 实例13：绘制logo................................. 78
6.1.1 绘制logo ..................................... 80
6.1.2 添加文字..................................... 81
6.1.3 绘制线条..................................... 81
6.1.4 移动原点..................................... 82
6.1.5 添加颜色..................................... 83
6.1.6 回退............................................. 84
6.2 实例14：使用RGraph 绘制统计图........ 84
6.2.1 使用HTML 描述数据................. 85
6.2.2 将HTML 内容转换为条形图...... 86
6.2.3 显示备用内容.............................. 87
6.2.4 回退............................................. 88
6.2.5 未来展望..................................... 90
第7 章 嵌入音频和视频............................... 92
7.1 发展历史................................................. 92
7.2 容器和编解码器...................................... 93
7.2.1 视频编解码器.............................. 94
7.2.2 音频编解码器.............................. 95
7.2.3 容器和编解码器协同工作........... 96
7.3 实例15：音频......................................... 96
7.3.1 建立基本列表.............................. 97
7.3.2 回退............................................. 98
7.4 实例16：嵌入视频................................. 99
7.4.1 回退........................................... 101
7.4.2 HTML5 视频的限制.................. 103
7.4.3 Audio、Video 和可访问性........ 104
7.4.4 未来展望................................... 105
第8 章 柔化视觉体验................................. 106
8.1 实例17：创建圆角............................... 106
8.1.1 圆角化登录表单........................107
8.1.2 特定于浏览器的选择器.............108
8.1.3 回退...........................................109
8.1.4 检测对圆角的支持.....................109
8.1.5 jQuery Corners ...........................110
8.1.6 自制表单圆角插件.....................111
8.1.7 生成圆角....................................111
8.1.8 微调...........................................112
8.2 实例18：使用阴影、渐变和变换.........113
8.2.1 基础结构....................................113
8.2.2 增加渐变....................................115
8.2.3 给标志加上阴影........................115
8.2.4 旋转标志....................................116
8.2.5 调节背景的透明度.....................117
8.2.6 回退...........................................118
8.2.7 旋转...........................................119
8.2.8 渐变...........................................119
8.2.9 透明度........................................120
8.2.10 整合.........................................120
8.3 实例19：使用自定义字体....................122
8.3.1 @font-face .................................122
8.3.2 字体格式....................................123
8.3.3 改变字体....................................124
8.3.4 回退...........................................125
8.3.5 未来展望....................................126
第三部分 HTMl5 延伸
第9 章 客户端数据的使用.........................128
9.1 实例20：使用localStorage 保存参数
设置.......................................................129
9.1.1 创建参数表单............................130
9.1.2 保存和加载设置........................131
9.1.3 应用设置....................................132
9.1.4 回退...........................................132
9.2 实例21：在客户端关系数据库中保
存数据...................................................135
9.2.1 浏览器中的CRUD ....................135
9.2.2 留言的前端展现........................136
9.2.3 连接数据库................................138
9.2.4 创建留言表................................139
9.2.5 加载留言....................................139
9.2.6 获取指定记录............................140
9.2.7 插入、更新和删除记录.............141
9.2.8 包装...........................................143
9.2.9 回退...........................................144
9.3 实例22：离线运行...............................145
9.3.1 使用manifest 定义缓存.............145
9.3.2 manifest 和缓存.........................146
9.3.3 未来展望....................................147
第10 章 使用其他API 锦上添花.............148
10.1 实例23：维护历史记录......................148
10.1.1 保存当前状态........................149
10.1.2 获取先前状态........................149
10.1.3 默认状态................................150
10.1.4 回退........................................150
10.2 实例24：跨域对话.............................151
10.2.1 联系人列表............................152
10.2.2 发送消息................................153
10.2.3 支持页面................................153
10.2.4 接收消息................................155
10.2.5 回退........................................156
10.3 实例25：使用Web Sockets 进行
即时通信..............................................157
10.3.1 即时通信界面........................157
10.3.2 与服务器交互........................159
10.3.3 回退........................................160
10.3.4 什么是Flash 套接字策略......161
10.3.5 服务器....................................162
10.4 实例26：Geolocation .........................162
10.4.1 定位Awesomeness ................163
10.4.2 如何定位................................163
10.4.3 回退........................................164
10.4.4 未来展望................................166
第11 章 未来的发展方向...........................167
11.1 CSS3 变换............................................167
时间函数...............................................168
11.2 Web Workers .......................................170
11.3 原生拖放支持......................................171
11.3.1 拖放事件................................172
11.3.2 释放元素................................173
11.3.3 修改样式................................ 174
11.3.4 拖动文件................................ 175
11.3.5 并不完美................................ 175
11.4 WebGL ................................................ 176
11.5 Indexed Database API.......................... 176
11.6 客户端表单验证.................................. 176
11.7 前进！ ................................................. 177
附录A 功能快速索引.................................. 178
A.1 新元素.................................................. 178
A.2 属性...................................................... 178
A.3 表单...................................................... 178
A.4 表单字段属性....................................... 179
A.5 可访问性............................................... 179
A.6 多媒体.................................................. 180
A.7 CSS3 ..................................................... 180
A.8 客户端存储........................................... 181
A.9 其他API ............................................... 182
附录B jQuery 入门..................................... 183
B.1 加载jQuery .......................................... 183
B.2 jQuery 基础........................................... 183
B.3 修改内容的方法................................... 184
B.3.1 hide 和show............................. 184
B.3.2 html、val 和attr....................... 184
B.3.3 append、prepend 和wrap ........ 185
B.3.4 CSS 和类.................................. 185
B.3.5 链............................................. 186
B.4 创建元素............................................... 186
B.5 事件...................................................... 187
B.5.1 绑定.......................................... 187
B.5.2 原始事件.................................. 187
B.6 document.ready..................................... 188
附录C 音频和视频编码............................. 189
C.1 音频编码............................................... 189
C.2 为Web 进行视频编码.......................... 189
附录D 资源.................................................. 191
附录E 参考书目.......................................... 193
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5和CSS3实例教程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Dynamic HTML权威指南
前言
第1章：HTML与XHTML参考
属性值类型
共享的HTML元素属性
共享的事件处理属性
标签参考（按字母次序排列）
第2章：文档对象模型参考
属性值类型
关于CLIENT-与OFFSET-属性集
默认属性值
事件
静态W3C HTML DOM模型
共享的对象属性、方法与事件
对象参考（按字母顺序编排）
第3章：事件参考
按字母排序的事件参考
第4章：样式单属性参考
属性值类型
选择符
伪元素及伪类选择符
＠规划
常规约定
按字母属性排列的属性参考
第5章：JavaScript核心语言参考
关于静态对象
Mozilla的读、写方法
支持XML的ECMAScript
ECMASc邱t的保留关键字
核心对象
运算符（Operators）
控制指令（Control Statemems）
其他指令（Miscellaneous Statements）
转义字符串字符（Special（Escaped）String Cheaters）
术语表
索引
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Dynamic HTML权威指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>ES6 标准入门（第2版）
第１章　ECMAScript 6简介 001
1.1 ECMAScript和JavaScript的关系 001
1.2 ECMAScript的历史 001
1.3 部署进度 002
1.4 Babel转码器 003
命令行环境 004
浏览器环境 005
Node.js环境 005
在线转换 006
1.5 Traceur转码器 006
直接插入网页 006
在线转换 007
命令行转换 008
Node.js环境的用法 008
1.6 ECMAScript 7 009
第２章　let和const命令 010
2.1 let命令 010
基本用法 010
不存在变量提升 011
暂时性死区 011
不允许重复声明 012
2.2 块级作用域 013
为什么需要块级作用域 013
ES6的块级作用域 013
2.3 const命令 015
2.4 跨模块常量 016
2.5 全局对象的属性 017
第３章　变量的解构赋值 018
3.1 数组的解构赋值 018
基本用法 018
默认值 020
3.2 对象的解构赋值 021
3.3 字符串的解构赋值 024
3.4 数值和布尔值的解构赋值 024
3.5 函数参数的解构赋值 024
3.6 圆括号问题 025
不能使用圆括号的情况 025
可以使用圆括号的情况 026
3.7 用途 026
第４章　字符串的扩展 029
4.1 字符的Unicode表示法 029
4.2 codePointAt() 030
4.3 String.fromCodePoint() 031
4.4 字符串的遍历器接口 031
4.5 at() 032
4.6 normalize() 032
4.7 includes()，startsWith()，endsWith() 033
4.8 repeat() 033
4.9 padStart()，padEnd() 034
4.10 模板字符串 034
4.11 实例：模板编译 037
4.12 标签模板 038
4.13 String.raw() 042
第５章　正则的扩展 043
5.1 RegExp 构造函数 043
5.2 字符串的正则方法 043
5.3 u 修饰符 043
5.4 y 修饰符 045
5.5 sticky 属性 047
5.6 flags 属性 048
5.7 RegExp.escape() 048
第６章　数值的扩展 049
6.1 二进制和八进制数值表示法 049
6.2 Number.isFinite()， Number.isNaN() 049
6.3 Number.parseInt()， Number.parseFloat() 051
6.4 Number.isInteger() 051
6.5 Number.EPSILON 051
6.6 安全整数和Number.isSafeInteger() 052
6.7 Math 对象的扩展 054
Math.trunc() 054
Math.sign() 054
Math.cbrt() 055
Math.clz32() 055
Math.imul() 056
Math.fround() 056
Math.hypot() 057
对数方法 057
三角函数方法 058
6.8 指数运算符 058
第７章　数组的扩展 059
7.1 Array.from() 059
7.2 Array.of() 061
7.3 数组实例的copyWithin() 062
7.4 数组实例的find() 和findIndex() 063
7.5 数组实例的fill() 063
7.6 数组实例的entries()、keys() 和values() 064
7.7 数组实例的includes() 064
7.8 数组的空位 065
7.9 数组推导 067
第８章　函数的扩展 069
8.1 函数参数的默认值 069
基本用法 069
与解构赋值默认值结合使用 070
参数默认值的位置 071
函数的length 属性 072
作用域 073
应用 074
8.2 rest 参数 074
8.3 扩展运算符 075
含义 075
替代数组的apply 方法 076
扩展运算符的应用 077
8.4 name 属性 079
8.5 箭头函数 080
基本用法 080
使用注意点 081
嵌套的箭头函数 083
8.6 函数绑定 084
8.7 尾调用优化 085
什么是尾调用 085
尾调用优化 086
尾递归 087
递归函数的改写 088
8.8 函数参数的尾逗号 089
第９章　对象的扩展 090
9.1 属性的简洁表示法 090
9.2 属性名表达式 092
9.3 方法的name 属性 093
9.4 Object.is() 094
9.5 Object.assign() 095
9.6 属性的可枚举性 097
9.7 属性的遍历 098
9.8 __proto__ 属性， Object.setPrototypeOf()， Object.getPrototypeOf() 099
9.9 对象的扩展运算符 101
第10 章　Symbol 103
10.1 概述 103
10.2 作为属性名的Symbol 105
10.3 实例：消除魔术字符串 106
10.4 属性名的遍历 107
10.5 Symbol.for()，Symbol.keyFor() 109
10.6 内置的Symbol 值 110
Symbol.hasInstance 110
Symbol.isConcatSpreadable 110
Symbol.species 111
Symbol.match 111
Symbol.replace 112
Symbol.search 112
Symbol.split 112
Symbol.iterator 112
Symbol.toPrimitive 113
Symbol.toStringTag 113
Symbol.unscopables 114
第11 章　Proxy 和Reflect 116
11.1 Proxy 概述 116
11.2 Proxy 实例的方法 119
get() 119
set() 121
apply() 122
has() 123
construct() 123
deleteProperty() 124
defineProperty() 125
enumerate() 125
getOwnPropertyDescriptor() 126
getPrototypeOf() 126
isExtensible() 127
ownKeys() 127
preventExtensions() 128
setPrototypeOf() 128
11.3 Proxy.revocable() 129
11.4 Reflect 概述 129
11.5 Reflect 对象的方法 130
第12 章　二进制数组 133
12.1 ArrayBuffer 对象 134
概述 134
ArrayBuffer.prototype.byteLength 135
ArrayBuffer.prototype.slice() 135
ArrayBuffer.isView() 136
12.2 TypedArray 视图 136
概述 136
构造函数 136
数组方法 138
字节序 140
BYTES_PER_ELEMENT 属性 141
ArrayBuffer 与字符串的互相转换 142
溢出 142
TypedArray.prototype.buffer 143
TypedArray.prototype.byteLength， TypedArray.prototype.byteOffset 143
TypedArray.prototype.length 143
TypedArray.prototype.set() 144
TypedArray.prototype.subarray() 144
TypedArray.prototype.slice() 144
TypedArray.of() 144
TypedArray.from() 145
12.3 复合视图 145
12.4 DataView 视图 146
12.5 二进制数组的应用 148
AJAX 148
Canvas 148
WebSocket 149
Fetch API 149
File API 149
第13 章　Set 和Map 数据结构 151
13.1 Set 151
基本用法 151
Set 实例的属性和方法 152
遍历操作 153
13.2 WeakSet 155
13.3 Map 157
Map 结构的目的和基本用法 157
实例的属性和操作方法 159
遍历方法 160
与其他数据结构的互相转换 162
13.4 WeakMap 164
第14 章　Iterator 和for...of 循环 166
14.1 Iterator 的概念 166
14.2 数据结构的默认Iterator 接口 168
14.3 调用Iterator 接口的场合 172
14.4 字符串的Iterator 接口 173
14.5 Iterator 接口与Generator 函数 174
14.6 遍历器对象的return()、throw() 175
14.7 for...of 循环 175
数组 175
Set 和Map 结构 177
计算生成的数据结构 177
类似数组的对象 178
对象 179
与其他遍历语法的比较 180
第15 章　Generator 函数 181
15.1 简介 181
基本概念 181
yield 语句 182
与Iterator 接口的关系 184
15.2 next 方法的参数 185
15.3 for...of 循环 187
15.4 Generator.prototype.throw() 189
15.5 Generator.prototype.return() 193
15.6 yield* 语句 194
15.7 作为对象属性的Generator 函数 199
15.8 Generator 函数的this 200
15.9 Generator 函数推导 201
15.10 含义 202
Generator 与状态机 202
Generator 与协程 202
15.11 应用 203
第16 章　Promise 对象 208
16.1 Promise 的含义 208
16.2 基本用法 208
16.3 Promise.prototype.then() 211
16.4 Promise.prototype.catch() 212
16.5 Promise.all() 215
16.6 Promise.race() 216
16.7 Promise.resolve() 216
16.8 Promise.reject() 217
16.9 两个有用的附加方法 218
done() 218
finally() 218
16.10 应用 219
加载图片 219
Generator 函数与Promise 的结合 219
16.11 async 函数 220
第17 章　异步操作和async 函数 221
17.1 基本概念 221
异步 221
回调函数 221
Promise 222
17.2 Generator 函数 223
协程 223
Generator 函数的概念 223
Generator 函数的数据交换和错误处理 224
异步任务的封装 224
17.3 Thunk 函数 225
参数的求值策略 225
Thunk 函数的含义 226
JavaScript 语言的Thunk 函数 226
Thunkify 模块 227
Generator 函数的流程管理 228
Thunk 函数的自动流程管理 229
17.4 co 模块 230
基本用法 230
co 模块的原理 230
基于Promise 对象的自动执行 231
co 模块的源码 232
处理并发的异步操作 233
17.5 async 函数 234
含义 234
async 函数的实现 235
async 函数的用法 236
注意点 236
与Promise、Generator 的比较 238
第18 章　Class 240
18.1 Class 基本语法 240
概述 240
constructor 方法 243
实例对象 243
name 属性 244
Class 表达式 245
不存在变量提升 245
严格模式 246
18.2 Class 的继承 246
基本用法 246
类的prototype 属性和__proto__ 属性 247
extends 的继承目标 248
Object.getPrototypeOf() 249
super 关键字 249
实例的__proto__ 属性 250
18.3 原生构造函数的继承 250
18.4 Class 的取值函数（getter）和存值函数（setter） 253
18.5 Class 的Generator 方法 254
18.6 Class 的静态方法 254
18.7 Class 的静态属性 255
18.8 new.target 属性 256
18.9 Mixin 模式的实现 258
第19 章　修饰器 259
19.1 类的修饰 259
19.2 方法的修饰 261
19.3 为什么修饰器不能用于函数 262
19.4 core-decorators.js 263
@autobind 263
@readonly 263
@override 263
@deprecate（别名@deprecated） 264
@suppressWarnings 265
19.5 使用修饰器实现自动发布事件 265
19.6 Mixin 266
19.7 Trait 267
19.8 Babel 转码器的支持 269
第20 章　Module 270
20.1 严格模式 271
20.2 export 命令 271
20.3 import 命令 272
20.4 模块的整体加载 273
20.5 module 命令 274
20.6 export default 命令 274
20.7 模块的继承 276
20.8 ES6 模块加载的实质 277
20.9 循环加载 278
CommonJS 模块的加载原理 279
CommonJS 模块的循环加载 279
ES6 模块的循环加载 280
20.10 ES6 模块的转码 282
ES6 module transpiler 282
SystemJS 282
第21 章　编程风格 284
21.1 块级作用域 284
let 取代var 284
全局常量和线程安全 285
严格模式 285
21.2 字符串 285
21.3 解构赋值 285
21.4 对象 286
21.5 数组 288
21.6 函数 288
21.7 Map 结构 289
21.8 Class 290
21.9 模块 291
21.10 ESLint 的使用 292
第22 章　读懂ECMAScript 规格 293
22.1 概述 293
22.2 相等运算符 293
22.3 数组的空位 295
22.4 数组的map 方法 296
第23 章　参考链接 299
23.1 官方文件 299
23.2 综合介绍 299
23.3 let 和const 302
23.4 解构赋值 302
23.5 字符串 303
23.6 正则 304
23.7 数值 304
23.8 数组 304
23.9 函数 305
23.10 对象 306
23.11 Proxy 和Reflect 306
23.12 Symbol 308
23.13 二进制数组 308
23.14 Set 和Map 309
23.15 Iterator 310
23.16 Generator 311
23.17 Promise 对象 312
23.18 Class 314
23.19 Decorator 314
23.20 Module 315
23.21 工具 316
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>ES6 标准入门（第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>跨终端Web
1 跨终端Web 1
1.1 终端VS.设备 1
1.2 一个贯穿全书的例子 2
1.3 后续章节 3
1.4 移动优先 4
1.4.1 移动流量暴增 4
1.4.2 聚焦业务本质 5
1.4.3 人机交互扩展 7
1.4.4 再说书名 8
1.5 不只是响应式 8
1.5.1 响应式 8
1.5.2 多站点 13
1.5.3 多模板 13
1.5.4 多平台 15
1.6 解决方案 16
2 Mobile Web 17
2.1 HTML5 18
2.2 HTML 19
2.2.1 移动页面模板 19
2.2.2 Viewport 21
2.2.3 touch-icon 26
2.2.4 其他 27
2.3 触屏事件 27
2.3.1 触屏事件一览 27
2.3.2 通用触屏事件 28
2.4 调试 31
2.4.1 远程调试 31
2.4.2 设备调试 43
2.5 兼容性 44
2.5.1 OS版本碎片化 44
2.5.2 国内的特殊情况 46
2.5.3 WebView 46
2.5.4 更多工具 46
2.6 文档 48
3 基准 51
3.1 GBS 51
3.2 MGBS 53
3.2.1 准备 53
3.2.2 操作系统分级 54
3.2.3 屏幕分辨率分级 65
3.2.4 浏览器分级 71
3.2.5 MGBS 73
3.3 GTE 75
3.3.1 分层设计 76
3.3.2 核心层 76
3.3.3 数据层 78
4 检测 81
4.1 终端 81
4.1.1 什么是终端 81
4.1.2 分类 82
4.2 终端检测 82
4.2.1 场景 82
4.2.2 原理 83
4.2.3 实现 85
4.3 遗留问题 86
4.3.1 硬件信息 86
4.3.2 更精准的终端检测 86
5 接口 87
5.1 跨终端流程复用 87
5.1.1 示例1 87
5.1.2 示例2 88
5.2 IF 89
5.2.1 始于一次重构 90
5.2.2 新的环境 95
5.2.3 模型 95
5.2.4 解决方案 96
5.2.5 架构 96
5.2.6 路线图 99
5.3 if-spec 2.0 102
5.3.1 JSON Schema 102
5.3.2 Demo 109
5.3.3 meta 113
5.3.4 if-spec 1.0 114
5.4 if-mock 2.0 116
5.5 if-guide 2.0 118
5.6 总结 122
6 定位 125
6.1 定位 126
6.1.1 Hash 126
6.1.2 History API 127
6.1.3 视图定位 129
6.2 数据 129
7 预览 131
7.1 客户端 132
7.2 服务端 133
7.3 示例 136
8 Hybrid App 139
8.1 Hybrid简史 139
8.1.1 背景 139
8.1.2 简史 140
8.1.3 现状 142
8.2 Hybrid技术 144
8.2.1 Native调用Web 144
8.2.2 Web调用Native 144
8.2.3 Bridge 146
8.3 Hybrid框架 150
8.3.1 PhoneGap 151
8.3.2 Titanium 152
8.4 Device API 153
8.4.1 动作传感器 156
8.4.2 环境传感器 158
8.4.3 音频 159
8.4.4 视频 160
8.5 小结 160
9 存储 161
9.1 状态持久化 162
9.2 技术方案 163
9.2.1 整体方案 163
9.2.2 跨终端存储方案 164
9.2.3 跨域通信方案 166
9.2.4 安全性 168
9.2.5 遗留问题 168
9.3 使用 168
9.3.1 实例化 169
9.3.2 set/get 169
9.3.3 remove/clear 170
9.3.4 推荐命名 170
10 动作同步 171
10.1 原理 171
10.1.1 案例 171
10.1.2 动作同步 172
10.2 实现 173
10.2.1 Selenium 173
10.2.2 脚本录制和回放 174
附录A GBS 183
附录B JSON Schema Core 189
附录C JSON Schema Validation 201
附录D if-spec 2.0 221
作者简介 225
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>跨终端Web
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>jQuery基础教程 （第4版）
目 录

第1章　jQuery入门　　1
1.1 　jQuery能做什么　　1
1.2 　jQuery为什么如此出色　　2
1.3 　第一个jQuery驱动的页面　　3
1.3.1 　下载jQuery　　4
1.3.2 　本书使用jQuery的哪个版本　　4
1.3.3 　在HTML文档中引入jQuery　　4
1.3.4 　编写jQuery代码　　7
1.3.5 　最终结果　　9
1.4 　纯JavaScript与jQuery　　9
1.5 　使用开发工具　　10
1.6 　小结　　13
第2章　选择元素　　14
2.1 　理解DOM　　14
2.2 　使用$()函数　　15
2.3 　CSS选择符　　16
2.4 　属性选择符　　19
2.5 　自定义选择符　　21
2.5.1 　每隔一行为表格添加样式　　22
2.5.2 　基于上下文内容选择元素　　25
2.5.3 　基于表单的选择符　　26
2.6 　DOM遍历方法　　27
2.6.1 　为特定单元格添加样式　　28
2.6.2 　连缀　　30
2.7 　访问DOM元素　　31
2.8 　小结　　32
2.9 　练习　　32
第3章　事件　　33
3.1 　在页面加载后执行任务　　33
3.1.1 　代码执行的时机选择　　33
3.1.2 　基于一个页面执行多个脚本　　34
3.1.3 　.ready()的简写形式　　35
3.1.4 　向.ready()回调函数中传入参数　　36
3.2 　处理简单的事件　　36
3.2.1 　简单的样式转换器　　36
3.2.2 　启用其他按钮　　39
3.2.3 　利用事件处理程序的上下文　　40
3.2.4 　使用事件上下文进一步减少代码　　41
3.2.5 　简写的事件　　43
3.2.6 　显示和隐藏高级特性　　43
3.3 　事件传播　　45
3.3.1 　事件的旅程　　46
3.3.2 　事件冒泡的副作用　　47
3.4 　通过事件对象改变事件的旅程　　48
3.4.1 　事件目标　　49
3.4.2 　停止事件传播　　49
3.4.3 　阻止默认操作　　50
3.4.4 　事件委托　　50
3.4.5 　使用内置的事件委托功能　　53
3.5 　移除事件处理程序　　53
3.5.1 　为事件处理程序添加命名空间　　54
3.5.2 　重新绑定事件　　54
3.6 　模仿用户操作　　56
3.7 　小结　　59
3.8 　练习　　60
第4章　样式与动画　　61
4.1 　修改内联CSS　　61
4.1.1 　设置计算的样式属性值　　63
4.1.2 　带厂商前缀的样式属性　　65
4.2 　隐藏和显示元素　　66
4.3 　效果和时长　　68
4.3.1 　指定显示速度　　68
4.3.2 　淡入和淡出　　69
4.3.3 　滑上和滑下　　70
4.3.4 　切换可见性　　71
4.4 　创建自定义动画　　72
4.4.1 　手工创建效果　　73
4.4.2 　一次给多个属性添加动画效果　　73
4.5 　并发与排队效果　　76
4.5.1 　处理一组元素　　77
4.5.2 　处理多组元素　　80
4.5.3 　简单概括　　83
4.6 　小结　　84
4.7 　练习　　84
第5章　操作DOM　　85
5.1 　操作属性　　85
5.1.1 　非类属性　　85
5.1.2 　DOM元素属性　　89
5.1.3 　表单控件的值　　90
5.2 　DOM树操作　　90
5.2.1 　重新认识$()函数　　90
5.2.2 　创建新元素　　91
5.2.3 　插入新元素　　91
5.2.4 　移动元素　　92
5.2.5 　包装元素　　94
5.2.6 　使用反向插入方法　　96
5.3 　复制元素　　99
5.4 　内容setter和getter方法　　101
5.5 　DOM操作方法的简单归纳　　103
5.6 　小结　　104
5.7 　练习　　104
第6章　通过Ajax发送数据　　106
6.1 　基于请求加载数据　　106
6.1.1 　追加HTML　　107
6.1.2 　操作JavaScript对象　　110
6.1.3 　加载XML文档　　115
6.2 　选择数据格式　　118
6.3 　向服务器传递数据　　119
6.3.1 　执行GET请求　　120
6.3.2 　执行POST请求　　123
6.3.3 　序列化表单　　124
6.4 　为Ajax请求提供不同的内容　　126
6.5 　关注请求　　127
6.6 　错误处理　　129
6.7 　Ajax和事件　　131
6.8 　安全限制　　132
6.9 　其他工具　　134
6.9.1 　低级Ajax方法　　134
6.9.2 　修改默认选项　　135
6.9.3 　部分加载HTML页面　　135
6.10 　小结　　138
6.11 　练习　　138
第7章　使用插件　　139
7.1 　查找插件和帮助　　139
7.2 　使用插件　　139
7.2.1 　下载并包含Cycle插件　　140
7.2.2 　调用插件提供的方法　　140
7.2.3 　为插件方法指定参数　　142
7.2.4 　修改参数默认值　　142
7.3 　其他形式的插件　　143
7.3.1 　自定义选择符　　143
7.3.2 　全局函数插件　　144
7.4 　jQuery UI插件库　　145
7.4.1 　效果　　145
7.4.2 　交互组件　　148
7.4.3 　部件　　149
7.4.4 　jQuery UI主题卷轴　　151
7.5 　jQuery Mobile插件库　　152
7.5.1 　HTML5自定义数据属性　　152
7.5.2 　移动导航　　153
7.5.3 　一个文档支持多个页面　　157
7.5.4 　交互式元素　　158
7.5.5 　高级功能　　161
7.6 　小结　　161
7.7 　练习　　161
第8章　开发插件　　163
8.1 　在插件中使用$别名　　163
8.2 　添加新的全局函数　　163
8.3 　添加jQuery对象方法　　169
8.3.1 　对象方法的上下文　　169
8.3.2 　隐式迭代　　170
8.3.3 　方法连缀　　171
8.4 　提供灵活的方法参数　　172
8.4.1 　参数对象　　173
8.4.2 　默认参数值　　174
8.4.3 　回调函数　　175
8.4.4 　可定制的默认值　　176
8.5 　使用jQuery UI部件工厂创建插件　　177
8.5.1 　创建部件　　178
8.5.2 　销毁部件　　180
8.5.3 　启用和禁用部件　　181
8.5.4 　接受部件选项　　182
8.5.5 　添加子方法　　183
8.5.6 　触发部件事件　　183
8.6 　插件设计建议　　184
8.7 　小结　　185
8.8 　练习　　185
第9章　高级选择符与遍历　　187
9.1 　深入选择与遍历　　187
9.1.1 　动态筛选表格内容　　189
9.1.2 　为表格行添加条纹效果　　191
9.1.3 　组合筛选与条纹　　192
9.1.4 　更多选择符与遍历方法　　193
9.2 　定制与优化选择符　　194
9.2.1 　编写定制的选择符插件　　194
9.2.2 　选择符的性能问题　　196
9.3 　DOM遍历背后的秘密　　199
9.3.1 　jQuery对象属性　　199
9.3.2 　DOM元素栈　　201
9.3.3 　编写DOM遍历方法插件　　201
9.3.4 　DOM遍历的性能问题　　203
9.4 　小结　　205
9.5 　练习　　205
第10章　高级事件处理　　206
10.1 　再谈事件　　206
10.1.1 　追加数据页面　　208
10.1.2 　悬停时显示数据　　209
10.2 　事件委托　　210
10.2.1 　使用jQuery的委托方法　　211
10.2.2 　选择委托的作用域　　212
10.2.3 　早委托　　212
10.3 　自定义事件　　213
10.3.1 　无穷滚动　　215
10.3.2 　自定义事件参数　　216
10.4 　节流事件　　217
10.5 　扩展事件　　219
10.6 　小结　　222
10.7 　练习　　222
第11章　高级效果　　223
11.1 　再谈动画　　223
11.2 　观测及中断动画　　225
11.2.1 　确定动画状态　　226
11.2.2 　中止运行的动画　　226
11.3 　全局效果属性　　227
11.3.1 　禁用所有效果　　228
11.3.2 　定义效果时长　　228
11.4 　多属性缓动　　230
11.5 　使用延迟对象　　231
11.6 　精细地控制动画　　234
11.7 　小结　　236
11.8 　练习　　236
第12章　高级DOM操作　　237
12.1 　排序表格行　　237
12.1.1 　服务器端排序　　237
12.1.2 　Ajax排序　　238
12.1.3 　JavaScript排序　　238
12.2 　移动和插入元素　　240
12.2.1 　为已有的文本添加链接　　240
12.2.2 　简单的JavaScript数组排序　　241
12.2.3 　对DOM元素排序　　241
12.3 　在DOM元素中保存数据　　243
12.3.1 　执行预先计算　　244
12.3.2 　存储非字符串数据　　245
12.3.3 　变换排序方向　　247
12.4 　使用HTML5自定义数据属性　　249
12.5 　使用JSON排序和构建行　　250
12.5.1 　修改JSON对象　　252
12.5.2 　按需重新构建内容　　253
12.6 　高级属性操作　　254
12.6.1 　简捷地创建元素　　254
12.6.2 　DOM创建挂钩　　255
12.7 　小结　　257
12.8 　练习　　258
第13章　高级Ajax　　259
13.1 　渐进增强与Ajax　　259
13.2 　处理Ajax错误　　264
13.3 　jqXHR对象　　265
13.3.1 　Ajax承诺　　266
13.3.2 　缓存响应　　267
13.4 　截流Ajax请求　　268
13.5 　扩展Ajax功能　　269
13.5.1 　数据类型转换器　　269
13.5.2 　Ajax预过滤器　　274
13.5.3 　替代传输方式　　274
13.6 　小结　　277
13.7 　练习　　278
附录A 　JavaScript闭包　　279
A.1 　创建内部函数　　279
A.1.1 　在任何地方调用内部函数　　280
A.1.2 　理解变量作用域　　281
A.2 　处理闭包之间的交互　　283
A.3 　在jQuery中创建闭包　　284
A.3.1 　$(document).ready()
的参数　　284
A.3.2 　绑定事件处理程序　　285
A.3.3 　在循环中绑定处理程序　　286
A.3.4 　命名及匿名函数　　288
A.4 　应对内存泄漏的风险　　289
A.4.1 　避免意外的引用循环　　290
A.4.2 　控制DOM与JavaScript的循环　　290
A.5 　小结　　292
附录B 　使用QUnit测试JavaScript　　293
B.1 　下载QUnit　　293
B.2 　设置文档　　293
B.3 　组织测试　　294
B.4 　添加和运行测试　　295
B.5 　其他测试类型　　299
B.6 　最佳实践　　299
B.7 　小结　　300
附录C 　简明参考　　301
C.1 　选择符表达式　　301
C.1.1 　简单的CSS选择符　　301
C.1.2 　在同辈元素间定位　　301
C.1.3 　在匹配的元素间定位　　302
C.1.4 　属性　　302
C.1.5 　表单　　303
C.1.6 　其他自定义选择符　　303
C.2 　DOM遍历方法　　304
C.2.1 　筛选元素　　304
C.2.2 　后代元素　　304
C.2.3 　同辈元素　　304
C.2.4 　祖先元素　　305
C.2.5 　集合操作　　305
C.2.6 　操作选中的元素　　306
C.3 　事件方法　　306
C.3.1 　绑定　　306
C.3.2 　简写绑定　　307
C.3.3 　触发事件　　307
C.3.4 　简写触发方法　　308
C.3.5 　实用方法　　308
C.4 　效果方法　　308
C.4.1 　预定义效果　　308
C.4.2 　自定义动画　　309
C.4.3 　队列操作　　309
C.5 　DOM操作方法　　309
C.5.1 　特性与属性　　310
C.5.2 　内容　　310
C.5.3 　CSS　　310
C.5.4 　尺寸　　311
C.5.5 　插入　　311
C.5.6 　替换　　312
C.5.7 　删除　　312
C.5.8 　复制　　312
C.5.9 　数据　　312
C.6 　Ajax方法　　312
C.6.1 　发送请求　　313
C.6.2 　监视请求　　313
C.6.3 　配置　　313
C.6.4 　实用方法　　314
C.7 　延迟方法　　314
C.7.1 　创建对象　　314
C.7.2 　延迟对象的方法　　314
C.7.3 　承诺对象的方法　　315
C.8 　其他方法　　315
C.8.1 　jQuery对象的属性　　315
C.8.2 　数组和对象　　315
C.8.3 　对象内省　　316
C.8.4 　其他　　316
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>jQuery基础教程 （第4版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入浅出Ext JS
第1章　ext概述
1.1　下载ext发布包
1.2　如何查看ext自带的api和示例
1.3　为什么有些示例必须放在服务器上才能看到效果
1.4　hello world
1.4.1　直接使用下载的发布包
1.4.2　在项目中使用ext
1.5　为什么页面提示“找不到图片”
1.6　辅助开发
1.6.1　调试工具firebug
1.6.2　开发利器spket
1.7　本章小结
第2章　ext框架基础
2.1　ext的事件和类
2.1.1　自定义事件
2.1.2　浏览器事件
2.1.3　ext.lib.event
2.1.4　ext.util.observable
2.1.5　ext.eventmanager
2.1.6　ext.eventobject
.　2.2　ext的核心组件
2.2.1　ext.component
2.2.2　ext.boxcomponent
2.2.3　ext.container
2.2.4　ext.panel
2.2.5　ext.tabpanel
2.3　本章小结
第3章　表格控件
3.1　grid的特性简介
3.2　制作一个简单的grid
3.3　grid常用功能详解
3.3.1　部分属性功能
3.3.2　自主决定每列的宽度
3.3.3　让grid支持按列排序
3.3.4　解决中文排序
3.3.5　显示日期类型数据
3.4　在单元格里显示红色的字、图片和按钮
3.5　给grid的行和列设置颜色
3.6　自动显示行号和复选框
3.6.1　自动显示行号
3.6.2　复选框
3.7　选择模型
3.8　表格视图——ext.grid.gridview
3.9　表格分页
3.9.1　为grid添加分页工具条
3.9.2　通过后台脚本获得分页数据
3.9.3　分页工具栏显示在grid的顶部
3.9.4　让ext支持前台排序
3.10　后台排序
3.11　可编辑表格控件——editorgrid
3.11.1　制作一个简单的editorgrid
3.11.2　添加一行数据
3.11.3　保存修改结果
3.11.4　验证editgrid中的数据
3.11.5　限制输入数据的类型
3.12　属性表格控件——propertygrid
3.12.1　propertygrid
3.12.2　只能看不能动的propertygrid
3.12.3　强制对name列排序
3.12.4　根据name获得value
3.12.5　自定义编辑器
3.13　分组表格控件——group
3.13.1　分组表格简介
3.13.2　分组表格视图ext.grid.groupingview
3.14　可拖放的表格
3.14.1　拖放改变表格的大小
3.14.2　在同一个表格里拖放
3.14.3　表格之间的拖放
3.14.4　表格与树之间的拖放
3.15　grid与右键菜单
3.16　本章小结
第4章　表单与输入控件
4.1　制作一个表单
4.2　formpanel和basicform详解
4.3　ext支持的控件
4.3.1　控件继承图
4.3.2　表单控件
4.3.3　基本输入控件ext.form.field
4.3.4　文本输入控件ext.form.textfield
4.3.5　多行文本输入控件ext.form.textarea
4.3.6　日期输入控件ext.form.datefield
4.3.7　时间输入控件ext.form.timefield
4.3.8　在线编辑器ext.form.htmleditor
4.3.9　隐藏域ext.form.hidden
4.3.10　下拉输入框ext.form.triggerfield
4.4　使用表单提交数据
4.4.1　ext默认的提交形式
4.4.2　使用html原始的提交形式
4.4.3　单纯ajax
4.5　数据校验
4.5.1　输入不能为空
4.5.2　最大长度和最小长度
4.5.3　借助vtype
4.5.4　自定义校验规则
4.5.5　算不上校验的numberfield
4.5.6　使用后台返回的校验信息
4.6　表单布局
4.6.1　默认的平铺布局
4.6.2　平行分列布局
4.6.3　在布局中使用fieldset
4.6.4　在fieldset中使用布局
4.6.5　自定义布局：在表单中加入图片
4.7　combobox、datefield和timefield详解
4.7.1　combobox简介
4.7.2　将select转换成combobox
4.7.3　combobox结构详解
4.7.4　使用远程数据
4.7.5　combobox的高级配置
4.7.6　监听用户选择了哪条数据
4.7.7　使用本地数据实现省、市、县级联
4.7.8　使用后台数据实现省、市、县级联
4.8　复选框和单选框
4.8.1　复选框
4.8.2　单选框radio
4.9　文件上传
4.10　自动把数据填充到表单中
4.11　本章小结
第5章　树形结构
5.1　treepanel的基本使用
5.1.1　创建一棵树
5.1.2　为树生枝展叶
5.1.3　tree的配置
5.1.4　使用treeloader获得数据
5.1.5　读取本地json数据
5.1.6　struts 2的jsonplugin
5.1.7　使用jsp提供后台数据
5.2　树的事件
5.3　右键菜单
5.4　修改节点的默认图标
5.5　从节点弹出对话框
5.6　节点提示信息
5.7　为节点设置超链接
5.8　直接修改树节点名称
5.9　树形的拖放
5.9.1　节点拖放的三种形式
5.9.2　叶子不能append
5.9.3　判断拖放的目标
5.9.4　树之间的拖放
5.10　树形过滤器treefilter
5.11　利用treesorter对树进行排序
5.12　树形节点视图——ext.tree.treenodeui
5.13　表格与树形的结合——ext.tree.columntree
5.14　本章小结
第6章　拖放
6.1　拖放简介
6.2　拖放的简单应用
6.3　拖放组件体系
6.4　拖放的事件
6.5　高级拖放
6.5.1　basic
6.5.2　handle
6.5.3　on top
6.5.4　proxy
6.5.5　group
6.5.6　grid
6.5.7　circle
6.5.8　region
6.6　本章小结
第7章　弹出窗口
7.1　ext.messagebox
7.1.1　ext.messagebox.alert()
7.1.2　ext.messagebox.confirm()
7.1.3　ext.messagebox.prompt()
7.2　对话框的更多配置
7.2.1　可以输入多行的输入框
7.2.2　自定义对话框的按钮
7.2.3　进度条
7.2.4　动画效果
7.3　ext.window的常用属性
7.3.1　创建一个窗口
7.3.2　窗口的最大化和最小化
7.3.3　窗口的隐藏与销毁
7.3.4　防止窗口超出浏览器
7.3.5　设置窗口中的按钮
7.3.6　窗口的其他配置选项
7.4　窗口分组
7.5　向窗口中放入各种控件
7.5.1　在窗口中加入表格
7.5.2　在窗口中加入表单
7.5.3　复杂布局
7.6　本章小结
第8章　布局
8.1　布局的用途
8.2　最简单的布局fitlayout
8.3　常用的边框布局borderlayout
8.3.1　设置子区域的大小
8.3.2　使用split并限制它的范围
8.3.3　子区域的展开和折叠
8.4　制作伸缩菜单的布局——accordion
8.5　实现操作向导的布局——cardlayout
8.6　控制位置和大小的布局——anchorlayout和absolutelayout
8.7　表单专用的布局formlayout
8.8　分列式的布局columnlayout
8.9　表格状的布局tablelayout
8.10　与布局相关的其他知识
8.10.1　超类ext.container的公共配置与xtype的概念
8.10.2　layout的超类ext.layout.containerlayout
8.10.3　不指定任何布局时会发生的情况
8.10.4　使用viewport对整个页面进行布局
8.10.5　使用嵌套实现复杂布局
8.11　本章小结
第9章　工具栏和菜单
9.1　简单菜单
9.2　向菜单中添加分隔线
9.3　多级菜单
9.4　高级菜单
9.4.1　多选菜单和单选菜单
9.4.2　日期菜单
9.4.3　颜色菜单
9.4.4　ext.menu.adapter菜单适配器
9.4.5　使用ext.menu.menumgr统一管理菜单
9.5　工具栏组件详解
9.5.1　ext.toolbar.button
9.5.2　ext.toolbar.textmenu
9.5.3　ext.toolbar.spacer
9.5.4　ext.toolbar.separator
9.5.5　ext.toolbar.fill
9.5.6　ext.toolbar.splitbutton
9.5.7　为工具条添加html标签
9.5.8　为工具条添加输入控件
9.6　分页工具条ext.pagingtoolbar
9.6.1　ext.pagingtoolbar的基本用法
9.6.2　向ext.pagingtoolbar添加按钮组件
9.7　右键弹出菜单
9.8　本章小结
第10章　数据存储与传输
10.1　ext.data简介
10.2　ext.data.connection
10.3　ext.data.record
10.4　ext.data.store
10.4.1　基本应用
10.4.2　对数据进行排序
10.4.3　从store中获取数据
10.4.4　更新store中的数据
10.4.5　加载及显示数据
10.4.6　其他功能
10.5　常用proxy
10.5.1　memoryproxy
10.5.2　httpproxy
10.5.3　scripttagproxy
10.6　常用reader
10.6.1　arrayreader
10.6.2　jsonreader
10.6.3　xmlreader
10.7　高级store
10.8　ext中的ajax
10.8.1　最容易看到的ext.ajax
10.8.2　ext.lib.ajax是更底层的封装
10.9　关于scope和createdelegate()
10.10　dwr与ext整合
10.10.1　在ext中直接使用dwr
10.10.2　dwrproxy
10.10.3　dwrtreeloader
10.10.4　dwrproxy和combobox
10.11　localxhr支持本地使用ajax
10.12　本章小结
第11章　实用工具
11.1　ext提供的常用函数
11.1.1　onready函数
11.1.2　get函数
11.1.3　query函数和select函数
11.1.4　encode函数和decode函数
11.1.5　extend函数
11.1.6　apply函数和applyif函数
11.1.7　namespace函数
11.1.8　ext.isempty函数
11.1.9　ext.each函数
11.1.10　ext.domquery
11.2　用domhelper和template动态生成html
11.2.1　用domhelper生成小片段
11.2.2　ext.domhelper.applystyles函数
11.2.3　template模板
11.2.4　ext.domhelper.createtemplate函数
11.2.5　复杂模板xtemplate
11.3　用ext.utils.css切换主题
11.4　悬停提示
11.4.1　初始化
11.4.2　注册提示
11.4.3　标签提示
11.4.4　全局配置
11.4.5　个体配置
11.5　使用ext.state保存状态
11.6　fx实现的动画效果
11.7　局部更新网页内容
11.8　ext.util.format
11.9　使用ext.util.css管理css样式
11.10　使用ext.util.clickrepeater处理点击事件
11.11　使用ext.util.delayedtask延时执行函数
11.12　使用ext.util.taskrunner执行循环任务
11.13　混合型集合ext.util.mixedcollection
11.14　使用ext.util.textmetrices获得文本所占的高度和宽度
11.15　ext.keynav处理导航按键
11.16　ext.keymap为对象绑定按键功能
11.17　扩展
11.17.1　扩展date
11.17.2　扩展string
11.17.3　扩展function
11.17.4　扩展number
11.17.5　扩展array
11.18　ext.ux.portal
11.19　ext.desktop
11.20　本章小结
第12章　一个完整的ext应用
12.1　确定整体布局
12.2　使用html和css设置静态信息
12.3　对学生信息进行数据建模
12.4　在页面中显示学生信息列表
12.5　添加表单编辑学生信息
12.6　为表单添加提交事件
12.7　清空表单信息
12.8　删除指定的学生信息
12.9　在grid和form之间进行数据交互
12.10　本章小结
第13章　通过ext framework合理地应用ext
13.1　ext framework简介
13.2　ext framework架构解析
13.2.1　主要的第三方包
13.2.2　后台类关系图
13.2.3　前台组件关系图
13.3　本章小结
附录a ext常见问题
附录b ext对air的支持
附录c ext的版本变迁
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入浅出Ext JS
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5 Canvas基础教程
第1 章  HTML5 简介　　1
1.1  HTML 简史　　1
1.2  为什么需要HTML5 　　2
1.2.1  问题　　2
1.2.2  解决问题　　2
1.3  HTML5 的新特性　　3
1.3.1  结构和内容元素　　3
1.3.2  表单　　6
1.3.3  媒体元素　　7
1.4  剖析HTML5 页面的结构　　11
1.5  对HTML5 的误解　　16
1.5.1  CSS3 误解　　16
1.5.2  Web Fonts 误解　　17
1.5.3  Geolocation 误解　　17
1.5.4  SVG 误解　　17
1.5.5  Web Storage 误解　　18
1.5.6  Web Workers 误解　　18
1.5.7  WebSocket 误解　　18
1.6  小结　　19
第2 章  JavaScript 基础　　20
2.1  JavaScript 概述　　20
2.2  jQuery 　　21
2.2.1  jQuery 是什么　　21
2.2.2  为什么要使用它　　21
2.2.3  这是在误导你吗　　22
2.2.4  是否不需要理解纯JavaScript　　22
2.2.5  如何使用jQuery 　22
2.3  在HTML 页面上添加JavaScript 　23
2.4  在页面加载之后运行JavaScript 　25
2.4.1  错误的方法（window.onload 事件） 　26
2.4.2  冗长的方法（DOM） 　26
2.4.3  简单的方法（jQuery 方法） 　27
2.5  变量与数据类型　　28
2.5.1  变量　　28
2.5.2  数据类型　　32
2.6  条件语句　　33
2.6.1  if 语句　　33
2.6.2  比较运算符　　34
2.6.3  在if 语句中进行多重布尔值检查　　35
2.6.4  else 和else if 语句　　35
2.7  函数　　36
2.7.1  创建函数　　36
2.7.2  调用函数　　37
2.8  对象　　38
2.8.1  什么是对象　　38
2.8.2  创建和使用对象　　38
2.9  数组　　40
2.9.1  创建数组　　40
2.9.2  访问和修改数组　　41
2.10  循环　　41
2.11  定时器　　43
2.11.1  设置一次性定时器　　43
2.11.2  取消一次性定时器　　43
2.11.3  设置重复定时器　　43
2.11.4  取消重复定时器　　44
2.12  DOM　　44
2.12.1  HTML 网页示例　　44
2.12.2  使用纯JavaScript 访问DOM 　　45
2.12.3  使用jQuery 访问DOM　　46
2.12.4  操作DOM　　46
2.13  小结　　47
第3 章  Canvas 基础知识　　48
3.1  认识canvas 元素　　48
3.2  2D 渲染上下文　　49
3.2.1  坐标系统　　49
3.2.2  访问2D 渲染上下文　　50
3.3  绘制基本图形和线条　　51
3.3.1  线条　　53
3.3.2  圆形　　54
3.4  样式　　58
3.5  绘制文本　　62
3.6  擦除Canvas　　65
3.7  使Canvas 填满浏览器窗口　　69
3.8  小结　　71
第4 章  Canvas 高级功能　　72
4.1  保存和恢复绘图状态　　72
4.1.1  画布绘图状态是什么　　72
4.1.2  保存绘图状态　　73
4.1.3  恢复绘图状态　　73
4.1.4  保存和恢复多个绘图状态　　75
4.2  变形　　76
4.2.1  平移　　76
4.2.2  缩放　　78
4.2.3  旋转　　80
4.2.4  变换矩阵　　82
4.3  合成　　85
4.3.1  全局阿尔法值　　86
4.3.2  合成操作　　87
4.4  阴影　　91
4.5  渐变　　93
4.6  复杂路径　　96
4.7  将画布导出为图像　　100
4.8  小结　　102
第5 章  处理图像和视频　　103
5.1  加载图像　　103
5.2  调整和裁剪图像　　105
5.2.1  调整图像大小　　105
5.2.2  裁剪图像　　106
5.2.3  阴影　　108
5.3  图像变形　　110
5.3.1  平移　　110
5.3.2  旋转　　111
5.3.3  缩放与翻转　　111
5.4  访问像素值　　 113
5.5  从零绘制图像　　117
5.5.1  随机绘制像素　　119
5.5.2  创建马赛克效果　　119
5.6  基本图像效果　　123
5.6.1  反转颜色　　123
5.6.2  灰度　　124
5.6.3  像素化　　125
5.7  视频处理　　127
5.7.1  创建HTML5 video 元素　　 127
5.7.2  使用HTML5 video API　　128
5.7.3  设置画布　　129
5.8  小结　　133
第6 章  制作动画　　134
6.1  画布中的动画　　134
6.2  创建动画循环　　135
6.2.1  循环　　135
6.2.2  更新、清除、绘制　　137
6.3  记忆要绘制的形状　　138
6.3.1  错误的方法　　138
6.3.2  正确的方法　　139
6.3.3  随机产生形状　　142
6.4  改变方向　　143
6.5  圆周运动　　144
6.5.1  三角函数　　145
6.5.2  综合运用　　148
6.6  反弹　　150
6.7  小结　　154
第7 章  实现高级动画　　155
7.1  物理常识　　155
7.1.1  什么是物理学　　155
7.1.2  物理学对创建动画有何作用　　156
7.1.3  基本概念　　156
7.1.4  牛顿运动定律　　157
7.2  运用物理知识创建动画　　158
7.2.1  准备工作　　158
7.2.2  速度　　161
7.2.3  添加边界　　163
7.2.4  加速度　　163
7.2.5  摩擦力　　165
7.3  碰撞检测　　166
7.3.1  碰撞检测　　167
7.3.2  弹开物体　　170
7.3.3  动量守恒　　173
7.4  小结　　175
第8 章  太空保龄球游戏　　176
8.1  游戏概述　　176
8.2  核心功能　　177
8.2.1  构建HTML 代码　　177
8.2.2  美化界面　　180
8.2.3  编写JavaScript 代码　　182
8.3  激活用户界面　　183
8.4  创建游戏对象　　185
8.4.1  创建平台　　185
8.4.2  创建小行星　　187
8.4.3  创建玩家使用的小行星　　190
8.4.4  更新UI 　　191
8.5  让对象运动起来　　191
8.6  检测用户交互　　195
8.6.1  建立事件监听器　　195
8.6.2  选中玩家使用的小行星　　196
8.6.3  增加力度　　197
8.6.4  让玩家使用的小行星动起来　　198
8.6.5  可视化用户输入　　199
8.7  重置player 　　200
8.8  玩家获胜　　201
8.8.1  更新分数　　201
8.8.2  从平台上删除小行星　　202
8.9  小结　　205
第9 章  躲避小行星游戏　　206
9.1  游戏概述　　206
9.2  核心功能　　207
9.2.1  创建HTML 代码　　207
9.2.2  美化界面　　209
9.2.3  编写JavaScript 代码　　211
9.3  创建游戏对象　　213
9.3.1  创建小行星　　213
9.3.2  创建玩家使用的火箭　　215
9.4  检测键盘输入　　216
9.4.1  键值　　216
9.4.2  键盘事件　　216
9.5  让对象运动起来　　218
9.6  假造横向卷轴效果　　223
9.6.1  循环利用小行星　　223
9.6.2  添加边界　　223
9.6.3  让玩家保持连续移动　　224
9.7  添加声音　　224
9.8  结束游戏　　226
9.8.1  计分系统　　226
9.8.2  杀死玩家　　228
9.9  增加游戏难度　　230
9.10  小结　　231
第10 章  未来的Canvas　　232
10.1  Canvas 与SVG 　　232
10.1.1  可访问性　　233
10.1.2  位图与矢量图　　233
10.2  Canvas 与Flash 　　234
10.2.1  JavaScript 开发人员可以借鉴Flash 　　234
10.2.2  Canvas 没有像Flash 那样用户友好的编辑器
235
10.3  Canvas 与性能　　 236
10.4  Canvas 游戏和动画库　　236
10.5  三维图形　　238
10.6  与外围设备交互　　 239
10.7  用WebSocket 技术构建多人游戏　　240
10.8  灵感　　241
10.8.1  Sketch Out 游戏　　241
10.8.2  Z-Type 游戏　　242
10.8.3  Sinuous 游戏　　242
10.9  小结和结束语　　243
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5 Canvas基础教程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Web性能实践日志
第1章 WebPageTest内部原理 1
1．1 函数拦截 2
1．2 代码注入 2
1．3 决定浏览器架构 3
1．4 获取代码 4
1．5 浏览器的发展 4
第2章 localStorage读取性能 5
2．1 基准测试 6
2．2 这是怎么回事 6
2．3 优化策略 7
2．4 跟进 8
第3章 内联不是万能的 10
3．1 没有浏览器缓存 10
3．2 没有边缘缓存 11
3．3 没有按需加载 12
3．4 浏览器预加载失效 13
3．5 不完美的方案：只在第一次访问时采用内联方式 13
3．6 总结和建议 14
第4章 加载异步脚本的艺术 16
4．1 Facebook插件JS SDK 16
4．2 设计原则和标准 18
4．3 代码片段 18
4．4 插入脚本的其他方案 20
4．5 终于…… 21
4．6 我们遗漏了什么 21
4．7 如果我是代码片段的使用者 22
4．8 离别感言：站在巨人的肩膀上 22
第5章 运营商网络：钻进兔子洞 24
5．1 多样化 24
5．2 延迟 25
5．3 编码变换 25
5．4 这是一座金山 26
5．5 4G也不能拯救我们 26
5．6 我们要去向何方 27
5．7 隧道尽头的光 27
第6章 并行化 29
6．1 介绍：滚下楼梯 29
6．2 目前最佳实践：绕过 30
6．3 实验：深入研究 Archive 31
6．4 结果：大量的连续请求序列 32
6．5 推荐：是时候修改协议了 32
第7章 自动化网站性能优化 34
第8章 前端单点故障 36
8．1 Business Insider网站 36
8．2 ET网站 37
8．3 O’Reilly Radar网站 39
8．4 引起前端单点故障的原因 40
8．5 避免前端单点故障 41
8．6 行动起来 41
第9章 关于YSlow 43
第10章 高性能原生移动应用 46
10．1 注意你的瀑布流 47
10．2 压缩这些资源 47
10．3 不要重复下载 48
10．4 太多图片会减慢你的速度么 49
10．5 后记 50
第11章 纯CSS3图片？哼，也许晚点再说吧 51
11．1 挑战 51
11．2 动手写CSS3 52
11．3 跨浏览器效果 52
11．4 基准测试 54
11．4．1 加载成本 55
11．4．2 渲染 55
11．5 达到我们的目标了么 57
11．6 附录：代码目录 57
11．6．1 HTML 57
11．6．2 css 59
第12章 Android中下载无用背景图片 63
12．1 Android下的问题 63
12．2 无法解决 64
第13章 网络计时 65
第14章 我对的理解/思考 71
14．1 icy 71
14．2 一些细节 71
14．3 演练 71
14．4 待办事项 77
14．5 前进道路 80
14．6 我想要的圣诞礼物 80
第15章 使用智能缓存避免机器人性能开销 81
第16章 导航计时API实践 84
16．1 为什么要关心这些 84
16．2 收集导航计时时间戳并将它们转为有用的度量值 85
16．3 使用Google分析作为性能数据仓库 85
16．4 Google分析中的性能报告 86
16．5 限制 86
16．6 最后的思考 87
第17章 响应时间对业务的影响 88
第18章 考虑移动界面的性能 91
18．1 电池寿命 91
18．2 延迟 92
18．3 嵌入CSS和JS：最佳实践 92
18．4 内存 94
18．4．1 优化图片 95
18．4．2 权衡CSS的好处 96
18．4．3 GPU的好处及陷阱 96
18．4．4 视口：眼不见，心还是得为它“烦” 97
18．4．5 最小化DOM 97
18．5 UI响应 97
18．6 总结 98
第19章 别再浪费时间使用Google Analytics的站点速度报告了 99
19．1 问题：Firefox中关于Navigation Timing API的一个bug 99
19．2 解决方案：在Google Analytics中滤除Firefox的时间 100
19．3 好消息：这个bug已在Firefox 9中修复 101
19．4 结语 101
第20章 超越Web开发者工具：Strace 102
20．1 其他平台怎么办 102
20．2 开始 103
20．3 校正 103
20．4 示例：本地存储 103
20．5 我们才刚触及皮毛 104
第21章 mod_spdy介绍：Apache Server的SPDY模块 105
21．1 mod_spdy入门 105
21．2 SPDY和Apache 105
21．3 帮助改进mod_spdy 107
第22章 CommonJS模块的惰性求值 108
22．1 深入理解Text/JavaScript类型 108
22．2 懒加载 110
22．3 用延迟执行来挽救 110
22．4 在CommonJS模块中创建懒执行 112
第23章 关于接受建议的建议 114
第24章 为什么你对性能测试结果的解读可能是错误的(至少你在大公司里工作) 118
24．1 测试方法 119
24．2 测试结果 119
24．3 结论 120
24．4 为什么这个问题如此重要 120
24．5 几个重要的点 120
第25章 有损图像压缩 122
第26章 基于Selenium和JavaScript的性能测试 126
26．1 记录数据 127
26．2 收集和分析数据 128
26．3 示例结果 129
26．4 帮助/益处 130
26．5 结束语 130
26．6 致谢 131
第27章 一个评估网站性能的简单方法 132
27．1 概念 132
27．2 优势 133
27．3 局限 133
27．4 结束语 134
第28章 超越带宽：UI性能 135
28．1 引言 135
28．2 页面加载后：UI层 136
28．3 UI性能分析工具 136
28．4 CSS压力测试 136
28．5 CSS性能分析器 137
28．6 CSS Lint 137
28．7 DOM Monster 137
28．8 对速度的感知/速度感 138
28．9 花絮 138
28．10 呼吁关注UI性能 139
第29章 CSS Selector性能改变了(变得更好了) 141
29．1 样式共享(Style Sharing) 142
29．2 规则哈希(Rule Hashes) 142
29．3 父过滤器(Ancestor filters) 142
29．4 快速路径(Fast Path) 143
29．5 还有什么仍然很慢呢 143
第30章 大胆尝试PhantomJS和confess．js 145
30．1 性能概要 145
30．2 应用程序缓存清单(App Cache Manifest) 147
30．3 发展和完善 148
第31章 两次测量一次优化 149
31．1 识别需要优化的页面/部分 150
31．2 识别需要优化的功能 151
31．3 优化 151
第32章 后端问题检测 153
32．1 适当的后端时间该是多少 154
32．2 搞清楚是怎么回事 155
32．3 修复 158
32．4 最后 158
第33章 Web字体性能：@font-face及其他解决方案间的权衡 159
33．1 字体托管服务与自主开发 159
33．1．1 字体托管服务 159
33．1．2 DIY方式 160
33．2 FOUT是什么 160
33．3 移除多余的字体字形 161
33．4 JavaScript字体加载器 162
33．5 Boot．getFont介绍：一种快速、小巧的Web字体加载器 163
33．6 Gentlefonts，启动你的引擎 164
33．7 我的观察 168
33．8 一些想法 168
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Web性能实践日志
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>jQuery权威指南
前　　言
第1章　jQuery开发入门/1
1.1　jQuery概述/2
1.1.1　认识jQuery /2
1.1.2　jQuery基本功能/2
1.1.3　搭建jQuery开发环境/3
1.1.4　编写第一个简单的jQuery应用/3
1.1.5　jQuery程序的代码风格/5
1.2　jQuery的简单应用/7
1.2.1　jQuery访问DOM对象/7
1.2.2　jQuery控制DOM对象/7
1.2.3　jQuery控制页面CSS /9
1.3　本章小结/11
第2章　jQuery 选择器/12
2.1　jQuery选择器概述/13
2.1.1　什么是选择器/13
2.1.2　选择器的优势/13
2.2　jQuery选择器详解/17
2.2.1　基本选择器/18
2.2.2　层次选择器/20
2.2.3　简单过滤选择器/22
2.2.4　内容过滤选择器/25
2.2.5　可见性过滤选择器/27
2.2.6　属性过滤选择器/28
2.2.7　子元素过滤选择器/30
2.2.8　表单对象属性过滤选择器/32
2.2.9　表单选择器/34
2.3　综合案例分析—导航条在项目中的应用/37
2.3.1　需求分析/37
2.3.2　效果界面/38
2.3.3　功能实现/38
2.3.4　代码分析/40
2.4　本章小结/41
第3章　jQuery操作DOM /42
3.1　DOM基础/43
3.2　访问元素/44
3.2.1　元素属性操作/45
3.2.2　元素内容操作/49
3.2.3　获取或设置元素值/51
3.2.4　元素样式操作/53
3.3　创建节点元素/58
3.4　插入节点/60
3.4.1　内部插入节点方法/60
3.4.2　外部插入节点方法/64
3.5　复制节点/66
3.6　替换节点/68
3.7　包裹节点/69
3.8　遍历元素/71
3.9　删除元素/73
3.10　综合案例分析—数据删除和图片预览在项目中的应用/75
3.10.1　需求分析/75
3.10.2　效果界面/75
3.10.3　功能实现/77
3.10.4　代码分析/80
3.11　本章小结/81
第4章　jQuery中的事件与应用/82
4.1　事件机制/83
4.2　页面载入事件/85
4.2.1　ready()方法的工作原理/85
4.2.2　ready()方法的几种相同写法/86
4.3　绑定事件/86
4.4　切换事件/90
4.4.1　hover()方法/90
4.4.2　toggle()方法/93
4.5　移除事件/94
4.6　其他事件/96
4.6.1　方法one() /97
4.6.2　方法trigger () /98
4.7　表单应用/100
4.7.1　文本框中的事件应用/100
4.7.2　下拉列表框中的事件应用/104
4.8　列表应用/109
4.9　网页选项卡的应用/114
4.10 　综合案例分析—删除数据时的提示效果在项目中的应用/116
4.10.1　需求分析/116
4.10.2　效果界面/117
4.10.3　功能实现/118
4.10.4　代码分析/121
4.11　本章小结/123
第5章　jQuery的动画与特效/124
5.1　显示与隐藏/125
5.1.1　show()与hide()方法/125
5.1.2　动画效果的show()与hide()方法/126
5.1.3　toggle()方法/128
5.2　滑动/131
5.2.1　slideDown()与slideUp方法/131
5.2.2　slideToggle()方法/134
5.3　淡入淡出/135
5.3.1　fadeIn()与fadeOut()方法/135
5.3.2　fadeTo()方法/137
5.4　自定义动画/139
5.4.1　简单的动画/140
5.4.2　移动位置的动画/141
5.4.3　队列中的动画/144
5.4.4　动画停止和延时/146
5.5　动画效果综述/148
5.5.1　各种动画方法说明/148
5.5.2　使用animate()方法代替其他动画效果/148
5.6　综合案例分析—动画效果浏览相册中的图片/149
5.6.1　需求分析/149
5.6.2　效果界面/149
5.6.3　功能实现/151
5.6.4　代码分析/155
5.7　本章小结/158
第6章　Ajax在jQuery中的应用/159
6.1　加载异步数据/160
6.1.1　传统的JavaScript方法/160
6.1.2　jQuery中的load()方法/162
6.1.3　jQuery中的全局函数getJSON()/164
6.1.4　jQuery中的全局函数getScript()/166
6.1.5　jQuery中异步加载XML文档/168
6.2　请求服务器数据/170
6.2.1　$.get()请求数据/170
6.2.2　$.post()请求数据/172
6.2.3　serialize()序列化表单/175
6.3　$.ajax()方法/177
6.3.1　$.ajax()的基本概念/177
6.3.2　$.ajaxSetup()设置全局Ajax /181
6.4　Ajax中的全局事件/184
6.4.1　Ajax全局事件的基本概念/184
6.4.2　ajaxStart与ajaxStop全局事件/184
6.5　综合案例分析—用Ajax实现新闻点评即时更新/187
6.5.1　需求分析/187
6.5.2　效果界面/187
6.5.3　功能实现/189
6.5.4　代码分析/193
6.6　本章小结/196
第7章　jQuery常用插件/197
7.1　jQuery插件概述/198
7.2　验证插件validate /198
7.3　表单插件form /202
7.4　Cookie插件cookie /205
7.5　搜索插件AutoComplete /209
7.6　图片灯箱插件notesforlightbox /213
7.7　右键菜单插件contextmenu /216
7.8　图片放大镜插件jqzoom /222
7.9　自定义jQuery插件/224
7.9.1　插件的种类/225
7.9.2　插件开发要点/225
7.9.3　开发插件示例/226
7.10　综合案例分析—使用uploadify插件实现文件上传功能 /232
7.10.1 　需求分析/232
7.10.2　效果界面/233
7.10.3　功能实现/234
7.10.4　代码分析/236
7.11　本章小结/241
第8章　jQuery UI插件/242
8.1　认识jQuery UI /243
8.2　jQuery UI交互性插件/244
8.2.1　拖曳插件/244
8.2.2　放置/247
8.2.3　排序插件/250
8.3　jQuery UI微型插件/252
8.3.1　折叠面板插件/252
8.3.2　日历/255
8.3.3　选项卡插件/260
8.3.4　对话框插件/263
8.4　综合案例分析—使用jQuery UI插件以拖动方式管理相册/269
8.4.1　需求分析/269
8.4.2　效果界面/269
8.4.3　功能实现/270
8.4.4　代码分析/274
8.5　本章小结/277
第9章　jQuery实用工具函数/278
9.1　什么是工具函数/279
9.2　工具函数的分类/279
9.2.1　浏览器的检测/279
9.2.2　数组和对象的操作/284
9.2.3　字符串操作/291
9.2.4　测试操作/293
9.2.5　URL操作/297
9.3　工具函数的扩展/299
9.4　其他工具函数—$.proxy() /302
9.5　综合案例分析—使用jQuery扩展工具函数实现对字符串指定类型的检测/305
9.5.1　需求分析/305
9.5.2　效果界面/305
9.5.3　功能实现/306
9.5.4　代码分析/309
9.6　本章小结/311
第10章　jQuery性能优化与最佳实践/312
10.1　优化选择器执行的速度/313
10.1.1　优先使用ID与标记选择器/313
10.1.2　使用jQuery对象缓存/314
10.1.3　给选择器一个上下文/315
10.2　处理选择器中的不规范元素标志/317
10.2.1　选择器中含有特殊符号/317
10.2.2　选择器中含有空格符号/318
10.3　优化事件中的冒泡现象/319
10.4　使用data()方法缓存数据/321
10.5　解决jQuery库与其他库的冲突/326
10.5.1　jQuery在其他库前导入/326
10.5.2　jQuery在其他库后导入/328
10.6　使用子查询优化选择器性能/330
10.7　减少对DOM元素直接操作/332
10.8　正确区分DOM对象与jQuery对象/334
10.8.1　DOM对象与jQuery对象的定义/334
10.8.2　DOM对象与jQuery对象的类型转换/335
10.9　本章小结/337
第11章　综合案例开发/338
案例1：切割图片/339
案例2：在线聊天室/349
本章小结/365
示 例 目 录
第1章　jQuery开发入门/1
示例1-1　编写第一个简单的jQuery程序/4
示例1-2　jQuery事件的链式写法/5
示例1-3　控制DOM对象/7
示例1-4　jQuery控制CSS样式/10
第2章　jQuery 选择器/12
示例2-1　使用JavaScript实现隔行变色/13
示例2-2　使用jQuery选择器实现隔行变色/15
示例2-3　使用JavaScript输出文字信息/16
示例2-4　使用jQuery输出文字信息/17
示例2-5　使用jQuery基本选择器选择元素/18
示例2-6　使用jQuery层次选择器选择元素/20
示例2-7　使用jQuery基本过滤选择器选择元素/22
示例2-8　使用jQuery内容过滤选择器选择元素/25
示例2-9　使用jQuery可见性过滤选择器选择元素/27
示例2-10　使用jQuery属性过滤选择器选择元素/28
示例2-11　使用jQuery子元素过滤选择器选择元素/30
示例2-12　通过表单对象属性过滤选择器获取表单对象/32
示例2-13　使用jQuery表单过滤选择器获取元素/35
综合案例分析—导航条在项目中的应用/37
第3章　jQuery操作DOM /42
示例3-1　创建一个DOM页面文档/43
示例3-2　通过attr(name)方法获取元素的属性/45
示例3-3　设置元素的属性（一）/46
示例3-4　设置元素的属性（二）/48
示例3-5　设置或获取元素的内容/50
示例3-6　设置或获取元素的值/51
示例3-7　直接设置元素样式值/54
示例3-8　增加CSS类别/55
示例3-9　类别切换/57
示例3-10　动态创建节点元素/59
示例3-11　插入节点（一）/62
示例3-12　插入节点（二）/63
示例3-13　外部插入节点/65
示例3-14　复制元素节点/66
示例3-15　替换元素节点/68
示例3-16　包裹元素节点/70
示例3-17　遍历元素/72
示例3-18　删除元素/73
综合案例分析—数据删除和图片预览在项目中的应用/75
第4章　jQuery中的事件与应用/82
示例4-1　事件中的冒泡现象/83
示例4-2　用bind方法绑定事件/87
示例4-3　用映射方式绑定不同的事件/88
示例4-4　用hover方法绑定事件/91
示例4-5　用toggle方法绑定事件/93
示例4-6　用unbind方法移除事件/94
示例4-7　用one方法绑定事件/97
示例4-8　用trigger方法绑定事件/98
示例4-9　文本框中的事件应用/100
示例4-10　下拉列表框中的事件应用/104
示例4-11　列表中的导航菜单应用/109
示例4-12　网页选项卡的应用/114
综合案例分析—删除数据时的提示效果在项目中的应用/116
第5章　jQuery的动画与特效/124
示例5-1　show()与hide()方法简介125
示例5-2　动画效果的show()与hide()方法127
示例5-3　toggle()方法的使用/129
示例5-4　slideDown()与slideUp()方法/132
示例5-5　slideToggle()方法/134
示例5-6　fadeIn()和fadeOut()方法/136
示例5-7　fadeTo()方法/138
示例5-8　简单的动画/140
示例5-9　移动位置的动画/142
示例5-10　队列中的动画/144
示例5-11　动画停止和延时/146
综合案例分析—动画效果浏览相册中的图片/149
第6章　Ajax在jQuery中的应用/159
示例6-1　传统的JavaScript方法实现Ajax功能/160
示例6-2　load()方法实现异步获取数据/162
示例6-3　全局函数getJSON()实现异步获取数据/164
示例6-4　全局函数getScript()实现异步获取数据/166
示例6-5　全局函数get()实现异步获取XML文档数据/168
示例6-6　全局函数get ()向服务器请求数据/171
示例6-7　全局函数post ()向服务器请求数据/173
示例6-8　serialize()序列化表单/175
示例6-9　用$.ajax()方法发送请求/178
示例6-10　$.ajaxSetup()方法全局设置Ajax /181
示例6-11　jQuery中的全局事件/185
综合案例分析—用Ajax实现新闻点评即时更新/187
第7章　jQuery常用插件/197
示例7-1　验证插件的使用/199
示例7-2　表单插件的使用/203
示例7-3　cookie插件的使用/206
示例7-4　搜索插件的使用/209
示例7-5　图片灯箱插件的使用/213
示例7-6　右键菜单插件的使用/217
示例7-7　图片放大镜插件的使用/222
示例7-8　对象级别插件的开发/226
示例7-9　类级别插件的开发/229
综合案例分析—使用uploadify插件实现文件上传功能 /232
第8章　jQuery UI插件/242
示例8-1　使用draggable插件实现对象的拖曳操作/245
示例8-2　使用droppable插件实现对象的放置操作/247
示例8-3　使用sortable插件实现列表中表项的拖曳排序操作/250
示例8-4　使用accordion插件实现页面中多区域的折叠操作/253
示例8-5　使用datepicker插件实现日期选择的基本操作/256
示例8-6　使用datepicker插件实现分段时间的选择/258
示例8-7　使用tabs插件展示选项卡的基本功能/261
示例8-8　使用dialog插件弹出提示和确定信息对话框/264
综合案例分析—使用jQuery UI插件以拖动方式管理相册/269
第9章　jQuery实用工具函数/278
示例9-1　browser对象的使用/280
示例9-2　boxModel对象的使用/282
示例9-3　$.each()函数遍历数组/284
示例9-4　$.each()函数遍历对象/285
示例9-5　$. grep()函数筛选数据/287
示例9-6　$. map()函数变更数据/288
示例9-7　$.inArray()函数搜索数据/290
示例9-8　$.trim()函数除掉字符串左右两边的空格符/292
示例9-9　$.isEmptyObject()函数的使用/293
示例9-10　$.isPlainObject ()函数的使用/295
示例9-11　$.contains()函数的使用/296
示例9-12　使用函数$.param()对数组进行序列化/298
示例9-13　使用函数$.extend()扩展工具函数/300
示例9-14　使用函数$.proxy()改变事件函数的作用域/302
综合案例分析—使用jQuery扩展工具函数实现对字符串指定类型的检测/305
第10章　jQuery性能优化与最佳实践/312
示例10-1　在指定的查找范围内获取DOM元素/315
示例10-2　选择器中含有空格符与不含空格符的区别/318
示例10-3　事件中的target方法优化冒泡现象/320
示例10-4　使用data()方法在元素上存取移除数据/322
示例10-5　使用data()方法在元素上存取移除JSON格式的数据/323
示例10-6　解决jQuery库先于其他库导入时，变量“$”的使用权问题/326
示例10-7　解决jQuery库后于其他库导入时，变量“$”的使用权问题/328
示例10-8　使用子查询优化选择器性能/330
示例10-9　减少对DOM元素直接操作/332
示例10-10　DOM对象与jQuery对象的类型转换/335
第11章　综合案例开发/338
案例1：切割图片/339
案例2：在线聊天室/349
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>jQuery权威指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5移动Web开发指南
第1章移动互联网时代的Web技术	1
1.1  移动互联网的发展	1
1.2  智能手机发展迅速	2
1.3  智能手机的Web浏览器	4
1.4  移动Web应用的发展	7
1.5  基于HTML5的移动Web应用	8
第2章移动设备HTML5页面布局	12
2.1  页面语义化简介	12
2.1.1  HTML5新语义元素概述	12
2.1.2  更多HTML5新元素	16
2.2  页面结构与移动设备的布局	16
2.2.1  常见的移动应用布局	17
2.2.2  使用HTML5创建标准的移动Web页面	18
2.3  本章小结	22
第3章  HTML5规范的本地存储	23
3.1  移动设备的支持	23
3.2  localStorage	24
3.3  sessionStorage	28
3.4  Storage事件监听	29
3.5  本章小结	33
第4章移动Web的离线应用	34
4.1  离线Web概述	34
4.1.1  离线与缓存	34
4.1.2  离线的意义	35
4.2  移动设备的支持	35
4.3  applicationCache和manifest	36
4.3.1  manifest文件	36
4.3.2  applicationCache对象和事件	38
4.4  本章小结	39
第5章移动设备的常见HTML5表单元素	40
5.1  丰富的表单属性	40
5.2  移动Web表单的input类型	42
5.2.1  search类型文本	42
5.2.2  email类型文本	43
5.2.3  number类型文本	44
5.2.4  range类型文本	45
5.2.5  tel类型文本	45
5.2.6  url类型文本	46
5.2.7  更多的类型	46
5.3  表单属性应用范围	47
5.4  本章小结	47
第6章移动Web界面样式	48
6.1  CSS3	48
6.2  选择器	49
6.2.1  属性选择器	49
6.2.2  伪类选择器	51
6.3  阴影	53
6.3.1  box-shadow	53
6.3.2  text-shadow	54
6.4  背景	54
6.4.1  background-size	55
6.4.2  background-clip	55
6.4.3  background-origin	55
6.4.4  background	56
6.5  圆角边框	56
6.6  Media Queries移动设备样式	57
6.6.1  传统网站在iPhone上的显示问题	57
6.6.2  viewport设置适应移动设备屏幕大小	59
6.6.3  Media Queries如何工作	60
6.6.4  Media Queries语法总结	63
6.6.5  如何将官方网站移植成移动Web网站	65
6.7  本章小结	73
第7章Geolocation地理定位	74
7.1  功能介绍	74
7.2  浏览器支持情况	75
7.3  如何使用Geolocation API	75
7.3.1  首次获取当前位置	75
7.3.2  监视移动设备的位置变化	77
7.4  本章小结	78
第8章轻量级框架jQuery Mobile初探	79
8.1  jQuery Mobile概述	79
8.2  入门示例Hello World	80
8.2.1  部署文件	80
8.2.2  编码	81
8.3  基于HTML5的自定义属性驱动组件	82
8.3.1  dataset自定义属性	82
8.3.2  使用dataset属性驱动jQuery Mobile组件	83
8.4  页面与视图	85
8.4.1  标准的移动Web页面	85
8.4.2  移动设备的视图	86
8.4.3  多视图Web页面	88
8.4.4  改变页面标题的视图	90
8.4.5  视图切换动画	91
8.4.6  dialog对话框	92
8.4.7  页面主题	93
8.5  button按钮	94
8.5.1  button组件	94
8.5.2  具有icon图标的button组件	95
8.5.3  具有内联样式的button	98
8.5.4  具有分组功能的button按钮	99
8.6  Bar工具栏	102
8.6.1  如何使用工具栏	103
8.6.2  含有后退按钮的Header工具栏	104
8.6.3  多按钮的Footer工具栏	107
8.6.4  导航条工具栏	109
8.6.5  定义fixed工具栏	113
8.6.6  全屏模式工具栏	114
8.7  内容区域格式布局	114
8.7.1  网格布局	114
8.7.2  仿9宫格排列的按钮组例子	120
8.7.3  折叠块功能	122
8.7.4  创建具有手风琴效果的例子	124
8.8  Form表单	125
8.8.1  如何使用表单提交功能	126
8.8.2  HTML5文本框类型	126
8.8.3  HTML5搜索类型输入框	127
8.8.4  Slider类型	128
8.8.5  Toggle类型	129
8.8.6  单选按钮类型	130
8.8.7  复选框类型	133
8.8.8  下拉选择菜单	135
8.9  List列表	144
8.9.1  基本列表类型	145
8.9.2  普通链接列表	147
8.9.3  多层次嵌套列表	149
8.9.4  有序编号列表	151
8.9.5  只读列表	153
8.9.6  可分割按钮列表	154
8.9.7  列表的分隔符	155
8.9.8  列表搜索过滤器	157
8.9.9  含有气泡式计数的列表	159
8.9.10  显示列表项右侧文本格式的列表	160
8.9.11  列表项含有图标的列表	162
8.9.12  数据项含有图片的列表	163
8.9.13  内嵌列表	164
8.9.14  列表的性能问题	166
8.10  配置选项	166
8.11  Event事件	170
8.11.1  页面加载事件	171
8.11.2  其他事件类型	171
8.12  实用方法和工具	173
8.12.1  页面视图辅助工具	174
8.12.2  数据存储	176
8.12.3  地址路径辅助工具	177
8.12.4  loading显示/隐藏	184
8.13  主题系统	185
8.14  本章小结	186
第9章重量级富框架Sencha Touch入门	187
9.1  Sencha Touch概述	187
9.1.1  功能特点	187
9.1.2  官方套件包	188
9.2  入门示例Hello World	190
9.2.1  部署文件	190
9.2.2  开始编码	190
9.2.3  调试环境	192
9.2.4  页面调整	192
9.3  事件管理	194
9.3.1  自定义事件	194
9.3.2  初始化事件	195
9.3.3  Touch触控事件	196
9.3.4  事件管理器Ext.EventManager	197
9.4  核心组件库	199
9.4.1  Ext.lib.Component	199
9.4.2  属性、方法、事件	200
9.5  Toolbar工具栏	210
9.5.1  创建一个只有标题的工具栏例子	211
9.5.2  模拟前进返回按钮的工具栏例子	212
9.5.3  具有图标效果按钮的工具栏例子	214
9.5.4  按钮组的工具栏	216
9.6  Tabs选项卡	219
9.6.1  使用TabPanel组件定义Tab页面	219
9.6.2  选项卡功能	220
9.7  Carousel	222
9.8  Overlays遮罩层	224
9.8.1  Alert提示信息类型	224
9.8.2  Confirm确认提示框类型	226
9.8.3  Prompt提示输入类型	227
9.8.4  ActionSheet选择器类型	229
9.8.5  Overlay浮动层显示框类型	232
9.9  Picker选择器	234
9.9.1  创建单列的选择器例子	235
9.9.2  创建允许选择日期的选择器例子	236
9.10  List列表	238
9.10.1  创建基本的列表例子	238
9.10.2  改进的分组列表例子	240
9.10.3  使用Ajax异步请求的列表	242
9.10.4  XTemplate模板的应用	245
9.11  对HTML5的支持和封装	249
9.11.1  封装HTML5新表单元素	249
9.11.2  HTML5表单应用例子	249
9.11.3  封装GeoLocation地理定位功能	252
9.11.4  本地存储的支持	255
9.11.5  多媒体的支持	257
9.12  MVC开发模式	258
9.12.1  MVC介绍	258
9.12.2  创建application应用程序	259
9.12.3  Model实体对象	262
9.12.4  View视图类	267
9.12.5  setActiveItem使用方法	268
9.12.6  Controller业务逻辑类	270
9.13  本章小结	272
第10章跨平台的PhoneGap应用介绍	273
10.1  PhoneGap概述	273
10.2  搭建PhoneGap开发环境	274
10.2.1  如何在Android平台下搭建PhoneGap开发环境	275
10.2.2  如何在iOS平台下搭建PhoneGap	280
10.3  硬件设备接口	283
10.3.1  Accelerometer加速度传感器	283
10.3.2  Compass对象获取指南针信息	286
10.3.3  使用connection对象检测网络状态	289
10.3.4  File对象操作文件系统	290
10.3.5  使用Device对象获取移动设备的信息	307
10.4  软件接口	309
10.4.1  Camera对象获取照片资源	309
10.4.2  Capture对象采集多媒体资源	312
10.4.3  使用Contacts对象获取通信录资源	317
10.4.4  公告警示信息	326
10.4.5  Media对象	328
10.5  Events事件	328
10.5.1  公共事件	329
10.5.2  网络状态事件	332
10.5.3  Android专有事件	333
10.6  HTML5特性	335
10.6.1  GeoLocation定位位置	336
10.6.2  Storage特性	336
10.7  本章小结	336
第11章构建基于HTML5的生活轨迹Web App	337
11.1  项目背景	337
11.1.1  功能介绍	337
11.1.2  功能模块	339
11.2  创建基本应用程序	340
11.2.1  创建首页	340
11.2.2  创建入口函数	341
11.3  设置Model数据模型	343
11.3.1  创建Model实体类	343
11.3.2  设置Store对象	344
11.4  创建View视图组件	344
11.4.1  列表视图	344
11.4.2  列表组件	346
11.4.3  表单视图	346
11.4.4  浏览生活轨迹视图	349
11.4.5  Sheet组件选择更多功能	350
11.5  业务逻辑	352
11.5.1  定义controller类	352
11.5.2  实现视图之间的切换	352
11.5.3  保存生活轨迹内容	355
11.5.4  实现Geolocation地理定位	355
11.5.5  显示生活轨迹内容	357
11.5.6  显示Google地图	358
11.5.7  显示Sheet组件函数	360
11.5.8  清除所有存储的列表函数	360
11.5.9  删除一条记录的函数	361
11.6  缓存文件	362
11.6.1  设置manifest文件内容	362
11.6.2  设置HTML缓存文件	363
11.7  后端服务器通信	364
11.8  本章小结	365
第12章进阶之路	366
12.1  重新理解HTML5	366
12.2  浏览器的Web开发文档	367
12.3  网站或社区的推荐	367
12.4  移动Web应用框架	368
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5移动Web开发指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node.js入门经典
第1部分　入门
第1章　Node.js介绍　2
1.1　什么是Node.js　2
1.2　使用Node.js能做什么　3
1.3　安装并创建第一个Node.js程序　3
1.3.1　验证Node.js正确安装　4
1.3.2　创建“Hello World”Node.js程序　4
1.4　小结　5
1.5　问与答　6
1.6　测验　6
1.6.1　问题　6
1.6.2　答案　7
1.7　练习　7
第2章　npm(Node包管理器)　8
2.1　npm是什么　8
2.2　安装npm　9
2.3　安装模块　9
2.4　使用模块　10
2.5　如何找模块　11
2.5.1　官方来源　11
2.5.2　非官方来源　12
2.6　本地和全局的安装　13
2.6.1　本地安装　13
2.6.2　全局安装　13
2.7　如何找模块文档　14
2.8　使用package.json指定依赖关系(dependency)　14
2.9　小结　16
2.10　问与答　16
2.11　测验　16
2.11.1　问题　16
2.11.2　答案　17
2.12　练习　17
第3章　Node.js的作用　18
3.1　设计Node.js的目的　18
3.2　理解I/O　19
3.3　处理输入　19
3.4　联网的I/O是不可预测的　22
3.5　人类是不可预测的　24
3.6　处理不可预测性　25
3.7　小结　26
3.8　问与答　26
3.9　测验　27
3.9.1　问题　27
3.9.2　答案　27
3.10　练习　27
第4章　回调(Callback)　29
4.1　什么是回调　29
4.2　剖析回调　33
4.3　Node.js如何使用回调　34
4.4　同步和异步代码　36
4.5　事件循环　39
4.6　小结　39
4.7　问与答　39
4.8　测验　40
4.8.1　问题　40
4.8.2　答案　40
4.9　练习　40
第2部分　使用Node.js的基本网站
第5章　HTTP　44
5.1　什么是HTTP　44
5.2　使用Node.js的HTTP服务器　44
5.2.1　一个基础的服务器　44
5.2.2　加入头(Header)　45
5.2.3　检查响应头　46
5.2.4　Node.js中的重定向　49
5.2.5　响应不同的请求　50
5.3　使用Node.js的HTTP客户端　52
5.4　小结　53
5.5　问与答　53
5.6　测验　54
5.6.1　问题　54
5.6.2　答案　54
5.7　练习　54
第6章　Express介绍　55
6.1　什么是Express　55
6.2　为什么使用Express　55
6.3　安装Express　56
6.4　创建一个基础的Express站点　56
6.5　探索Express　58
6.5.1　app.js　58
6.5.2　node_modules　58
6.5.3　package.json　58
6.5.4　public　58
6.5.5　routes　58
6.5.6　views　58
6.6　介绍Jade　59
6.6.1　使用Jade定义页面结构　60
6.6.2　使用Jade输出数据　62
6.7　小结　68
6.8　问与答　68
6.9　测验　68
6.9.1　问题　69
6.9.2　答案　69
6.10　练习　69
第7章　深入Express　70
7.1　Web应用程序中的路由　70
7.2　在Express中路由如何工作　70
7.3　添加GET路由　71
7.4　添加POST路由　72
7.5　在路由中使用参数　73
7.6　让路由保持可维护性　74
7.7　视图渲染　75
7.8　使用本地变量　76
7.9　小结　78
7.10　问与答　78
7.11　测验　78
7.11.1　问题　79
7.11.2　答案　79
7.12　练习　79
第8章　数据的持久化　80
8.1　什么是持久的数据　80
8.2　将数据写入文件　81
8.3　从文件读取数据　82
8.4　读取环境变量　83
8.5　使用数据库　84
8.5.1　关系数据库　84
8.5.2　NoSQL数据库　85
8.6　在Node.js中使用MongoDB　85
8.6.1　安装MongoDB　86
8.6.2　连接MongoDB　87
8.6.3　定义文档　89
8.6.4　将Twitter Bootstrap包含进来　90
8.6.5　索引(Index)视图　91
8.6.6　创建(Create)视图　93
8.6.7　编辑视图　95
8.6.8　删除任务　98
8.6.9　添加闪出消息　99
8.6.10　验证输入的数据　101
8.7　小结　102
8.8　问与答　103
8.9　测验　103
8.9.1　问题　103
8.9.2　答案　103
8.10　练习　104
第3部分　调试、测试与部署
第9章　调试Node.js应用程序　106
9.1　调试　106
9.2　STDIO模块　107
9.3　Node.js调试器　111
9.4　Node Inspector　113
9.5　关于测试的注释　116
9.6　小结　116
9.7　问与答　116
9.8　测验　117
9.8.1　问题　117
9.8.2　答案　117
9.9　练习　117
第10章　测试Node.js应用程序　119
10.1　为什么测试　119
10.2　Assert(断言)模块　120
10.3　第三方测试工具　122
10.4　行为驱动的开发(Behavior Driven Development)　125
10.4.1　Vows　125
10.4.2　Mocha　128
10.5　小结　131
10.6　问与答　131
10.7　测验　132
10.7.1　问题　132
10.7.2　答案　132
10.8　练习　132
第11章　部署Node.js应用程序　133
11.1　准备好部署　133
11.2　在云上托管　133
11.3　Heroku　135
11.3.1　注册Heroku　135
11.3.2　为Heroku准备应用程序　136
11.3.3　将应用程序部署到Heroku　137
11.4　Cloud Foundry　138
11.4.1　注册Cloud Foundry　138
11.4.2　为Cloud Foundry准备应用程序　139
11.4.3　将应用程序部署到Cloud Foundry　140
11.5　Nodester　141
11.5.1　注册Nodester　141
11.5.2　为Nodester准备应用程序　142
11.5.3　将应用程序部署到Nodester　143
11.6　其他PaaS提供商　144
11.7　小结　144
11.8　问与答　144
11.9　测验　145
11.9.1　测验　145
11.9.2　答案　145
11.10　练习　145
第4部分　使用Node.js的中间站点
第12章　介绍Socket.IO　148
12.1　现在要开始学习一些完全不同的技术了　148
12.2　动态Web简史　148
12.3　Socket.IO　149
12.4　基础的Socket.IO示例　150
12.5　从服务器发送数据到客户端　152
12.6　将数据广播给客户端　156
12.7　双向数据　160
12.8　小结　163
12.9　问与答　163
12.10　测验　164
12.10.1　问题　164
12.10.2　答案　164
12.11　练习　165
第13章　一个Socket.IO聊天服务器　166
13.1　Express和Socket.IO　166
13.2　添加昵称　168
13.2.1　将昵称发送给服务器　169
13.2.2　管理昵称列表　171
13.2.3　使用回调来验证　174
13.2.4　广播昵称列表　178
13.2.5　添加消息收发功能　179
13.3　小结　183
13.4　问与答　184
13.5　测验　184
13.5.1　问题　184
13.5.2　答案　184
13.6　练习　185
第14章　一个流Twitter客户端　186
14.1　流API　186
14.2　注册Twitter　187
14.3　和Node.js一起使用Twitter的API　189
14.4　从数据中挖掘含义　191
14.5　将数据推送到浏览器　194
14.6　创建一个实时的爱恨表　197
14.7　小结　206
14.8　问与答　206
14.9　测验　206
14.9.1　问题　206
14.9.2　答案　206
14.10　练习　207
第15章　JSON API　208
15.1　API　208
15.2　JSON　209
15.3　使用Node.js发送JSON数据　211
15.4　从JavaScript对象创建JSON　212
15.5　使用Node.js消费JSON数据　213
15.6　使用Node.js创建JSON API　216
15.6.1　在Express中以JSON发送数据　216
15.6.2　构建应用程序　219
15.7　小结　224
15.8　问与答　225
15.9　测验　225
15.9.1　问题　225
15.9.2　答案　225
15.10　练习　226
第5部分　探索Node.js API
第16章　进程模块　228
16.1　进程是什么　228
16.2　退出进程以及进程中的错误　230
16.3　进程与信号　230
16.4　向进程发送信号　231
16.5　使用Node.js创建脚本　233
16.6　给脚本传递参数　234
16.7　小结　236
16.8　问与答　236
16.9　测验　237
16.9.1　问题　237
16.9.2　答案　237
16.10　练习　238
第17章　子进程模块　239
17.1　什么是子进程　239
17.2　杀死子进程　241
17.3　与子进程通信　242
17.4　集群(Cluster)模块　244
17.5　小结　246
17.6　问与答　246
17.7　测验　246
17.7.1　问题　246
17.7.2　答案　246
17.8　练习　247
第18章　事件模块　248
18.1　理解事件　248
18.2　通过HTTP演示事件　251
18.3　用事件玩乒乓　254
18.4　动态编写事件侦听器程序　255
18.5　小结　258
18.6　问与答　258
18.7　测验　259
18.7.1　问题　259
18.7.2　答案　259
18.8　练习　259
第19章　缓冲区模块　260
19.1　二进制数据初步　260
19.2　从二进制到文本　261
19.3　二进制和Node.js　262
19.4　Node.js中的缓冲区是什么？　264
19.5　写入缓冲区　265
19.6　向缓冲区追加数据　266
19.7　复制缓冲区　267
19.8　修改缓冲区中的字符串　267
19.9　小结　268
19.10　问与答　268
19.11　测验　268
19.11.1　问题　268
19.11.2　答案　269
19.12　练习　269
第20章　流模块　270
20.1　流简介　270
20.2　可读流　272
20.3　可写流　275
20.4　通过管道连接流　276
20.5　流的MP3　277
20.6　小结　278
20.7　问与答　278
20.8　测验　279
20.8.1　问题　279
20.8.2　答案　279
20.9　练习　279
第6部分　进一步的Node.js开发
第21章　CoffeeScript　282
21.1　什么是CoffeeScript　282
21.2　安装与运行CoffeeScript　284
21.3　为什么要使用预编译器　285
21.4　CoffeeScript的功能　286
21.4.1　最小语法　286
21.4.2　条件和比较　287
21.4.3　循环　288
21.4.4　字符串　289
21.4.5　对象　290
21.4.6　类、继承和super　291
21.5　调试CoffeeScript　294
21.6　对CoffeeScript的反应　294
21.7　小结　295
21.8　问与答　295
21.9　测验　296
21.9.1　问题　296
21.9.2　答案　296
21.10　练习　296
第22章　创建Node.js模块　298
22.1　为什么创建模块　298
22.2　流行的Node.js模块　298
22.3　package.json文件　299
22.4　文件夹结构　301
22.5　开发和测试模块　302
22.6　添加可执行文件　304
22.7　使用面向对象或者基于原型的编程　305
22.8　通过GitHub共享代码　306
22.9　使用Travis CI　307
22.10　发布到npm　309
22.11　公开模块　310
22.12　小结　310
22.13　问与答　310
22.14　测验　311
22.14.1　问题　311
22.14.2　答案　311
22.15　练习　311
第23章　使用Connect创建中间件　312
23.1　什么是中间件　312
23.2　Connect中的中间件　313
23.3　使用中间件的访问控制　317
23.4　按IP地址限制访问　319
23.5　将用户强制到单个域上　321322
23.6　小结　323324
23.7　问与答　324
23.8　测验　324
23.8.1　问题　324
23.8.2　答案　324325
23.9　练习　324325
第24章　结合使用Backbone.js与Node.js　326
24.1　什么是Backbone.js　326
24.2　Backbone.js如何工作　327
24.3　一个简单的Backbone.js视图　332
24.4　使用Backbone.js创建记录　336
24.5　小结　337
24.6　问与答　337
24.7　测验　338
24.7.1　问题　338
24.7.2　答案　338
24.8　练习　338
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node.js入门经典
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node.js 实战
第1章　使用Express + MongoDB搭建多人博客.................. 1
1.1　一个简单的博客.......................... 2
1.1.1　学习环境......................... 2
1.1.2　快速开始......................... 2
1.1.3　路由控制......................... 7
1.1.4　模板引擎....................... 11
1.1.5　搭建多人博客............... 13
1.1.6　使用数据库................... 17
1.1.7　注册和登录................... 21
1.1.8　发表文章....................... 35
1.2　使用Markdown............................... 40
1.3　增加文件上传功能.................... 42
1.4　实现用户页面和文章页面................... 45
1.5　增加编辑与删除功能................ 49
1.6　实现留言功能............................ 54
1.7　实现分页功能............................ 57
1.8　增加存档页面............................ 60
1.9　增加标签和标签页面................ 62
1.10　增加pv统计和留言统计..................... 68
1.11　增加文章检索功能....................... 70
1.12　增加友情链接......................... 72
1.13　增加404页面........................... 73
1.14　增加用户头像......................... 74
1.15　增加转载功能和转载统计............ 77
1.16　增加日志功能......................... 84
1.17　小结......................................... 85
第2章　使用Express+MongoDB搭建多人博客番外篇.................... 87
2.1　番外篇之一——使用Passport....................... 88
2.2　番外篇之二——部署到Heroku................................... 91
2.3　番外篇之三——使用Mongoose...................... 95
2.4　番外篇之四——使用Async.......................... 98
2.5　番外篇之五——使用KindEditor.................... 102
2.6　番外篇之六——使用Handlebars................ 105
2.7　番外篇之七——使用KindEditor............. 109
第3章　使用Redis搭建漂流瓶服务器..............................111
3.1　初识Redis.................................. 112
3.2　开始漂流瓶之旅............................. 119
3.3　讨厌的海星................................... 127
3.4　扔回海里......................................... 127
3.5　今天的瓶子已经用完啦.................. 129
3.6　我的瓶子.................................. 131
3.7　女神，我们做朋友吧....................... 134
3.8　部署.......................................... 137
3.9　小结.......................................... 139
3.10　参考文献............................... 139
第4章　使用Meteor搭建微博网站................ 141
4.1　Meteor简介............................. 142
4.2　Meteor的安装与使用................. 142
4.3　快速入门.................................. 145
4.3.1　测试一：客户端和服务器端执行同一段代码............ 156
4.3.2　测试二：响应式............. 156
4.3.3　测试三：insecure包................ 157
4.3.4　测试四：autopublish包.............................. 159
4.3.5　测试五：加载顺序............... 161
4.4　开始搭建微博网站.................................... 161
4.4.1　开发环境............................ 161
4.4.2　学习目标.......................... 162
4.4.3　创建应...................................... 162
4.5　路由功能....................................... 165
4.6　用户注册..................................... 169
4.7　用户登录.................................. 173
4.8　发表微博.................................. 174
4.9　使用Markdown.................................. 176
4.10　部署....................................... 177
4.11　小结....................................... 179
4.12　参考文献.................................. 179
第5章　使用socket.io+Angular打造单页应用.......................... 181
5.1　最简单的聊天室............................ 182
5.1.1　socket.io简介..................... 182
5.1.2　Angular.js................................. 182
5.1.3　开始新建TechNode目录.............. 182
5.1.4　express.js服务器.................... 183
5.1.5　安装Bootstrap和Angular.js........ 185
5.1.6　搭建聊天室......................... 186
5.1.7　开始与好友聊天................ 192
5.2　让用户不再匿名........................... 192
5.2.1　添加登录功能..................... 192
5.2.2　用户登录与认证................ 195
5.2.3　socket.io验证...................... 200
5.2.4　显示用户名和在线用户列表................................. 202
5.2.5　我不喜欢你们................................ 211
5.3　提供不同的房间................................ 211
5.3.1　设计房间列表页面............................. 211
5.3.2　添加房间API.......................... 212
5.3.3　实现room的controller................. 213
5.3.4　提供socket的房间API................ 214
5.3.5　登录后跳转至房间列表.............. 215
5.3.6　房间列表............................. 216
5.3.7　进入单独的房间........................ 219
5.3.8　让消息只在房间内传递................... 224
5.3.9　用户离开房间.......................... 225
5.3.10　坏代码的味道...................... 227
5.4　架构优化与发布....................... 227
5.4.1　项目结构..................... 228
5.4.2　分拆http和socket服务...................... 229
5.4.3　客户端缓存................. 231
5.4.4　使用Grunt打包TechNode..... 236
5.4.5　发布TechNode.................. 242
5.4.6　聊天室之旅结束啦.................. 242
第6章　网络爬虫与数据操作........................... 243
6.1　学习目标.................................. 244
6.2　网络爬虫.................................. 245
6.2.1　相关模块介绍.................. 246
6.2.2　创建网络爬虫前的准备工作................................. 253
6.2.3　获取文章分类列表...................... 254
6.2.4　获取分类下的文章列表............... 257
6.2.5　获取文章的内容.................. 262
6.2.6　获取文章分类下的所有文章................................... 264
6.2.7　将结果保存到数据库中................... 267
6.2.8　保存文章分类............................. 269
6.2.9　一个完整的爬虫实例............... 270
6.3　显示数据库中的数据.............................. 279
6.3.1　相关模块介绍......................... 279
6.3.2　创建Web服务器前的工作........................... 280
6.3.3　查询数据.................................... 281
6.3.4　博客首页.................................. 283
6.3.5　文章页面................................. 285
6.4　自动更新文章数据.................................. 286
6.4.1　相关模块介绍.............................. 287
6.4.2　准备工作........................... 290
6.4.3　定时执行更新任务............................... 290
6.5　让程序更稳定地运行................................. 291
6.5.1　处理uncaughtException事件................................ 291
6.5.2　使用pm2来启动程序.................................. 291
6.5.3　安装pm2........................................... 292
6.5.4　启动和停止程序..................... 292
6.6　处理 GBK 编码的网页.......................... 292
6.7　小结.......................................... 294
6.8　参考文献.................................. 294
第7章　Node.js的进程与线程............................ 295
7.1　Node.js和PHP................................. 296
7.2　单线程的Node.js............................... 298
7.3　单线程的优缺点.......................... 298
7.4　多线程...................................... 300
7.5　多进程...................................... 305
7.6　多进程和多线程使用的比较................ 310
7.7　总结.......................................... 314
7.8　参考文献.................................. 315
第8章　发布一个Package............................ 317
8.1　Node.js包解决的问题...................... 318
8.2　创建package.json............................ 318
8.3　设计package的文件目录..................... 319
8.4　纯js包开发............................... 321
8.5　安装node-gyp......................................... 323
8.6　创建binding.byp............................... 324
8.7　C++插件包开发............................ 324
8.8　包的测试.................................. 330
8.9　跨平台测试................................. 333
8.10　readme.md......................................... 334
8.11　发布到GitHub............................ 334
8.12　发布到npm............................. 334
8.13　状态图标............................... 335
8.14　总结....................................... 336
8.15　参考文献............................... 337
第9章　Web安全实战............................... 339
9.1　什么是Web安全............................ 340
安全的定义和意识........................ 340
9.2　Node.js中的Web安全................ 341
HTTP管道洪水漏洞...................... 341
9.3　SQL注入....................................... 343
9.4　XSS脚本攻击................................ 345
9.5　CSRF请求伪造............................. 350
9.6　应用层DoS拒绝服务................... 358
9.7　文件路径漏洞............................... 366
9.8　加密安全.......................................... 372
9.9　小结.............................................. 375
9.10　参考文献.................................. 375
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node.js 实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Bootstrap用户手册
目录
序　　XI
前言　　XIII
第1章　Bootstrap提供的网站框架　　1
1.1 　Bootstrap到底是什么　　2
1.2 　Bootstrap的文件结构　　3
1.3 　基本的HTML模板　　3
1.4 　全局样式　　4
1.5　　默认网格系统　　4
1.5.1 　基本网格的HTML　　5
1.5.2 　平移列　　5
1.5.3 　嵌套列　　6
1.6 　流式网格系统　　6
1.7 　容器布局　　7
1.8 　响应式设计　　8
第2章　Bootstrap预定义的CSS样式　　11
2.1 　排版　　12
2.1.1　　标题　　12
2.1.2 　强调段落　　13
2.1.3 　强调内容　　13
2.1.4 　粗体　　13
2.1.5 　斜体　　13
2.1.6 　强调相关的类　　14
2.1.7 　列表　　17
2.2 　代码　　20
2.3 　表格　　20
2.3.1 　可选的表格类　　22
2.3.2 　表格行的类　　23
2.4 　表单　　24
2.4.1 　可选的表单布局　　25
2.4.2 　内置支持的表单控件　　27
2.4.3 　扩展的表单控件　　30
2.4.4 　设置控件大小　　31
2.4.5 　表单控件的状态　　35
2.5 　按钮　　37
2.5.1 　按钮大小　　39
2.5.2 　禁用按钮的样式　　40
2.6 　图片　　41
2.7 　图标　　41
2.7.1 　感谢GLYPHICONS提供图标　　42
2.7.2 　用法　　43
第3章　Bootstrap内置的布局组件　　45
3.1 　下拉菜单　　46
3.2 　按钮组　　47
3.3 　按钮下拉菜单　　49
3.3.1 　分隔式按钮下拉菜单　　50
3.3.2 　上拉菜单　　51
3.4 　导航元素　　52
3.4.1 　标签形导航　　52
3.4.2 　胶囊形导航　　52
3.4.3 　垂直堆叠的导航　　53
3.4.4 　导航加下拉菜单　　54
3.4.5 　导航列表　　55
3.4.6 　可切换的标签导航　　57
3.5 　导航条　　60
3.5.1 　导航条链接　　60
3.5.2 　表单　　61
3.5.3 　导航条菜单　　62
3.6 　面包屑式导航　　64
3.7 　分页导航　　65
3.8 　标签　　68
3.9 　圆标签　　69
3.10 　排版相关的元素　　69
3.10.1 　重头消息　　69
3.10.2 　页面标题　　70
3.11 　缩略图　　70
3.12 　警示框　　72
3.13 　进度条　　73
3.14 　媒体对象　　75
3.15 　其他组件　　77
3.15.1 　洼地　　78
3.15.2 　辅助类　　79
第4章　Bootstrap支持的JavaScript插件　　81
4.1 　概述　　82
4.2 　过渡　　83
4.3 　模态框　　83
4.3.1 　用法　　85
4.3.2 　选项　　85
4.3.3 　方法　　86
4.3.4 　事件　　87
4.4 　下拉菜单　　87
4.4.1 　用法　　87
4.4.2 　通过JavaScript使用下拉菜单　　88
4.4.3 　方法　　89
4.5 　滚动监控器　　89
4.5.1 　用法　　89
4.5.2 　.scrollspy('refresh')方法　　90
4.5.3 　选项　　90
4.5.4 　事件　　91
4.6 　可切换的标签页　　91
4.6.1 　用法　　92
4.6.2 　事件　　92
4.7 　提示条　　93
4.7.1 　用法　　93
4.7.2 　选项　　93
4.7.3 　方法　　94
4.8 　弹出层　　95
4.8.1 　用法　　96
4.8.2 　选项　　96
4.8.3 　方法　　97
4.9 　警示框　　97
4.9.1 　用法　　98
4.9.2 　关闭方法　　98
4.9.3 　事件　　98
4.10 　按钮　　99
4.10.1 　加载状态　　99
4.10.2 　单选开关　　99
4.10.3 　复选按钮　　100
4.10.4 　单选按钮　　100
4.10.5 　用法.100
4.10.6 　方法.101
4.11 　折叠框　　101
4.11.1 　用法　　103
4.11.2 　选项　　103
4.11.3 　方法　　104
4.11.4 　事件　　104
4.12 　传送带　　105
4.12.1 　用法　　106
4.12.2 　选项　　106
4.12.3 　方法　　106
4.12.4 　事件　　107
4.13 　预先输入　　108
4.13.1 　用法　　108
4.13.2 　选项　　109
4.14 　粘条　　109
4.14.1 　用法　　110
4.14.2 　选项　　110
第5章　实际使用Bootstrap　　111
5.1 　GitHub项目　　112
5.2 　定制Bootstrap　　112
5.2.1 　使用LESS　　113
5.2.2 　Snippets插件　　115
5.2.3 　Photoshop模板　　115
5.2.4 　主题　　116
5.3 　获得灵感　　117
5.4 　小结　　117
作者及封面介绍　　118
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Bootstrap用户手册
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入理解Bootstrap
前言
第1章 入门准备   1
1.1 框架简介   1
1.2 新手入门   2
1.3 文件结构   4
1.4 HTML标准模板   5
1.5 CSS基本语法   6
1.5.1 优先级   6
1.5.2 选择器   6
1.5.3 伪类   7
1.5.4 display属性   8
1.5.5 媒体查询   8
1.6 JavaScript基本语法   9
1.6.1 ||和&&运算符   9
1.6.2 立即调用的函数表达式   9
1.6.3 原型   10
1.7 jQuery基本用法   10
1.7.1 事件绑定   11
1.7.2 事件命名空间   11
1.7.3 $.data()   12
1.8 HTML5辅助设计   12
第2章 整体架构   14
2.1 整体架构   14
2.2 栅格系统   16
2.2.1 实现原理   16
2.2.2 基本用法   18
2.2.3 响应式栅格   22
2.2.4 对重复代码的处理   26
2.3 CSS组件架构的设计思想   26
2.3.1 基础样式   27
2.3.2 颜色样式   27
2.3.3 尺寸样式   29
2.3.4 状态样式   29
2.3.5 特殊元素样式   30
2.3.6 并列元素样式   32
2.3.7 嵌套子元素样式   32
2.3.8 动画样式   33
2.3.9 小结   34
2.4 JavaScript插件架构   34
2.4.1 HTML布局规则   34
2.4.2 JavaScript实现步骤   36
2.4.3 通用技术   39
2.4.4 不足   41
2.5 禁用响应式布局   41
第3章 CSS布局   43
3.1 概述   43
3.2 基础排版   45
3.2.1 标题   45
3.2.2 页面主题   46
3.2.3 强调文本   47
3.2.4 缩略语   48
3.2.5 地址元素   48
3.2.6 引用   49
3.2.7 列表   50
3.3 代码   54
3.3.1 内联代码   54
3.3.2 用户输入代码   54
3.3.3 多行代码块   55
3.4 表格   55
3.4.1 基础样式   55
3.4.2 带背景条纹的表格   56
3.4.3 带边框的表格   57
3.4.4 鼠标悬停高亮的表格   58
3.4.5 紧凑型表格   58
3.4.6 行级元素样式   59
3.4.7 响应式表格   60
3.5 表单   62
3.5.1 基础表单   63
3.5.2 内联表单   64
3.5.3 横向表单   66
3.5.4 表单控件   67
3.5.5 控件状态   69
3.5.6 控件大小   74
3.5.7 其他   76
3.6 按钮   76
3.6.1 按钮样式   76
3.6.2 按钮大小   78
3.6.3 多标签支持   80
3.6.4 活动状态   80
3.6.5 禁用状态   81
3.7 图像   82
3.8 辅助样式   83
3.8.1 文本样式及背景样式   83
3.8.2 辅助图标   84
3.8.3 内容浮动   85
3.8.4 隐藏与显示   86
3.9 响应式样式   86
第4章 CSS组件   88
4.1 小图标   88
4.1.1 基本用法   88
4.1.2 实现方式   89
4.1.3 应用场景   92
4.1.4 其他   93
4.2 下拉菜单   94
4.2.1 基本用法   94
4.2.2 多级嵌套   97
4.3 按钮组   98
4.3.1 基本用法   99
4.3.2 按钮工具栏   100
4.3.3 按钮尺寸设置   101
4.3.4 嵌套分组   102
4.3.5 垂直分组   103
4.3.6 自适应分组   106
4.4 按钮下拉菜单   107
4.4.1 组合式下拉菜单   107
4.4.2 分离式下拉菜单   108
4.4.3 按钮大小   109
4.4.4 向上弹起的下拉菜单   109
4.5 输入框组   110
4.5.1 基本用法   110
4.5.2 尺寸大小设置   113
4.5.3 复选框与单选框作为addon   115
4.5.4 按钮作为addon   115
4.5.5 下拉菜单按钮作为addon   117
4.5.6 分段按钮作为addon   117
4.6 导航   118
4.6.1 选项卡导航   119
4.6.2 胶囊式选项卡导航   120
4.6.3 堆叠式导航   121
4.6.4 自适应导航   123
4.6.5 禁用链接   124
4.6.6 二级导航实现   124
4.7 导航条   126
4.7.1 基础导航条   126
4.7.2 导航条中的表单   130
4.7.3 导航条中的按钮、文本、链接   132
4.7.4 导航条中的项进行左右浮动   134
4.7.5 顶部固定或底部固定   134
4.7.6 响应式导航条   136
4.7.7 反色导航条   140
4.8 面包屑导航   141
4.9 分页导航   143
4.9.1 页码分页   143
4.9.2 翻页   145
4.10 标签   147
4.11 徽章   149
4.12 大屏幕展播   151
4.13 页面标题   152
4.14 缩略图   153
4.15 警告框   155
4.15.1 默认警告框   155
4.15.2 可关闭的警告框   156
4.15.3 多彩样式警告框   157
4.15.4 警告框中的链接   158
4.16 进度条   159
4.16.1 基本样式   159
4.16.2 多彩样式   160
4.16.3 条纹样式   161
4.16.4 动画样式   162
4.16.5 堆叠样式   162
4.17 媒体对象   163
4.17.1 默认样式   163
4.17.2 媒体列表   164
4.18 列表组   165
4.18.1 基础列表组   165
4.18.2 应用徽章标记或导航箭头   166
4.18.3 可链接的列表组   167
4.18.4 多彩列表项   168
4.18.5 自定义列表组   169
4.19 面板   171
4.19.1 基础面板   171
4.19.2 带有头和尾的面板   172
4.19.3 多彩面板   173
4.19.4 面板与表格进行嵌套   174
4.19.5 面板和列表组进行嵌套   177
4.20 洼地   179
4.21 主题   180
4.21.1 btn按钮样式主题   181
4.21.2 缩略图样式主题   182
4.21.3 下拉菜单样式主题   182
4.21.4 导航条样式主题   182
4.21.5 警告框样式主题   183
4.21.6 进度条样式主题   184
4.21.7 列表组样式主题   184
4.21.8 面板样式主题   184
4.21.9 well样式主题   185
第5章 JavaScript插件   186
5.1 动画过渡效果   186
5.1.1 使用方法   186
5.1.2 源码分析   187
5.2 模态弹窗   188
5.2.1 弹窗布局与样式   189
5.2.2 声明式用法   194
5.2.3 JavaScript用法   195
5.2.4 源码分析   197
5.3 下拉菜单   203
5.3.1 声明式用法   204
5.3.2 JavaScript用法   207
5.3.3 源码分析   208
5.4 滚动侦测   212
5.4.1 声明式用法   213
5.4.2 JavaScript用法   214
5.4.3 源码分析   215
5.5 选项卡   219
5.5.1 声明式用法   220
5.5.2 JavaScript用法   221
5.5.3 源码分析   222
5.6 提示框   225
5.6.1 声明式用法   226
5.6.2 JavaScript用法   228
5.6.3 源码分析   229
5.7 弹出框   240
5.7.1 声明式用法   241
5.7.2 JavaScript用法   242
5.7.3 源码分析   244
5.8 警告框插件   246
5.8.1 声明式用法   247
5.8.2 JavaScript用法   248
5.8.3 源码分析   249
5.9 按钮   251
5.9.1 声明式用法   251
5.9.2 JavaScript用法   253
5.9.3 源码分析   253
5.10 折叠   256
5.10.1 声明式用法   257
5.10.2 JavaScript用法   258
5.10.3 源码分析   259
5.11 旋转轮播   264
5.11.1 声明式用法   264
5.11.2 CSS源码分析   266
5.11.3 JavaScript用法   270
5.11.4 源码分析   272
5.12 自动定位浮标   280
5.12.1 声明式用法   282
5.12.2 JavaScript用法   284
5.12.3 源码分析   284
第6章 实战：扩展现有组件   289
6.1 扩展分页组件   289
6.1.1 形状扩展   289
6.1.2 颜色扩展   290
6.2 扩展Modal弹窗   292
6.2.1 扩展点探讨   292
6.2.2 Info弹窗扩展   293
6.2.3 Form弹窗扩展   301
第7章 实战：Win8磁贴组件开发   311
7.1 基本样式   311
7.1.1 方块定义   311
7.1.2 边框定义   312
7.2 颜色样式   313
7.3 尺寸样式   314
7.4 状态设置   316
7.5 特殊元素样式   317
7.5.1 tile-content样式定义   318
7.5.2 tile-content子元素的样式定义   318
7.5.3 Brand样式定义   320
7.6 并列元素与嵌套样式   321
7.7 动画插件   323
7.8 更全的Win8风格样式   329
第8章 实战：组合应用开发   330
8.1 任务描述   330
8.2 实战过程   332
8.3 笔者的建议   342
8.4 实战成果   343
8.5 所用技术总结   344
第9章 第三方扩展   345
9.1 Font Awesome   345
9.1.1 介绍   345
9.1.2 常规用法   346
9.1.3 List列表上的图标   347
9.1.4 导航上的图标   347
9.1.5 固定角度旋转   348
9.1.6 360度旋转   349
9.1.7 多图叠加   350
9.2 BSIE扩展   352
9.3 Buttons   353
9.4 DateTime Picker   356
9.5 Cikonss   358
9.6 Flat UI   359
9.7 更多插件   360
附录A 浏览器兼容性支持   361
附录B 第三方插件开发建议   365
附录C 从2.x迁移到3.x   366
附录D Glyphicons图标全集   369
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入理解Bootstrap
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>jQuery实战（第2版）
目　 　 录
第一部分　 核心jQuery
第1章　 jQuery基础　 　 2
1.1　 用少量代码实现丰富的功能　 　 3
1.2　 不唐突的JavaScript　 　 4
1.2.1　 行为和结构分离　 　 5
1.2.2　 分离脚本　 　 6
1.3　 jQuery基础　 　 6
1.3.1　 jQuery包装器　 　 7
1.3.2　 实用函数　 　 9
1.3.3　 文档就绪处理程序　 　 9
1.3.4　 创建DOM元素　 　 10
1.3.5　 扩展jQuery　 　 11
1.3.6　 jQuery与其他库共存　 　 13
1.4　 小结　 　 14
第2章　 选择要操作的元素　 　 15
2.1　 选择将被操作的元素　 　 15
2.1.1　 控制上下文　 　 17
2.1.2　 使用基本CSS选择器　 　 18
2.1.3　 使用子节点、容器和特性选择器　 　 19
2.1.4　 通过位置选择元素　 　 23
2.1.5　 使用CSS和自定义的jQuery过滤选择器　 　 25
2.2　 创建新的HTML　 　 28
2.3　 管理包装集　 　 30
2.3.1　 确定包装集的大小　 　 32
2.3.2　 从包装集中获取元素　 　 32
2.3.3　 分解元素包装集　 　 35
2.3.4　 使用关系获取包装集　 　 43
2.3.5　 更多处理包装集的方式　 　 44
2.3.6　 管理jQuery链　 　 45
2.4　 小结　 　 47
第3章　 用jQuery为页面添加活力　 　 48
3.1　 使用元素属性与特性　 　 48
3.1.1　 操作元素属性　 　 50
3.1.2　 获取特性值　 　 50
3.1.3　 设置特性值　 　 52
3.1.4　 删除特性　 　 54
3.1.5　 有趣的特性　 　 54
3.1.6　 在元素上存储自定义数据　 　 55
3.2　 改变元素样式　 　 57
3.2.1　 添加和删除类名　 　 57
3.2.2　 获取和设置样式　 　 62
3.3　 设置元素内容　 　 68
3.3.1　 替换HTML或者文本内容　 　 68
3.3.2　 移动和复制元素　 　 70
3.3.3　 包裹与反包裹元素　 　 76
3.3.4　 删除元素　 　 78
3.3.5　 复制元素　 　 79
3.3.6　 替换元素　 　 80
3.4　 处理表单元素值　 　 81
3.5　 小结　 　 84
第4章　 事件处理　 　 85
4.1　 浏览器的事件模型　 　 86
4.1.1　 DOM第0级事件模型　 　 87
4.1.2　 DOM第2级事件模型　 　 92
4.1.3　 IE事件模型　 　 96
4.2　 jQuery事件模型　 　 97
4.2.1　 使用jQuery绑定事件处理器　 　 97
4.2.2　 删除事件处理器　 　 101
4.2.3　 Event实例　 　 102
4.2.4　 预先管理事件处理器　 　 104
4.2.5　 触发事件处理器　 　 107
4.2.6　 其他事件相关的方法　 　 109
4.3　 充分利用（更多的）事件　 　 113
4.3.1　 过滤大的数据集合　 　 114
4.3.2　 通过模板复制创建元素　 　 116
4.3.3　 建立主体标记　 　 118
4.3.4　 添加新的过滤器　 　 119
4.3.5　 添加限定控件　 　 122
4.3.6　 删除不需要的过滤器和其他任务　 　 123
4.3.7　 总是有改进的余地　 　 124
4.4　 小结　 　 125
第5章　 用动画和特效装扮页面　 　 126
5.1　 显示和隐藏元素　 　 126
5.1.1　 实现可折叠的“模块”　 　 127
5.1.2　 切换元素的显示状态　 　 131
5.2　 用动画改变元素的显示状态　 　 131
5.2.1　 渐变地显示和隐藏元素　 　 131
5.2.2　 使元素淡入和淡出　 　 136
5.2.3　 上下滑动元素　 　 139
5.2.4　 停止动画　 　 140
5.3　 创建自定义动画　 　 141
5.3.1　 自定义缩放动画　 　 143
5.3.2　 自定义掉落动画　 　 143
5.3.3　 自定义消散动画　 　 144
5.4　 动画和队列　 　 146
5.4.1　 并发的动画　 　 146
5.4.2　 将函数排队执行　 　 148
5.4.3　 插入函数到特效队列　 　 153
5.5　 小结　 　 154
第6章　 DOM无关的jQuery实用函数　 　 155
6.1　 使用jQuery标志　 　 155
6.1.1　 禁用动画　 　 156
6.1.2　 检测用户代理支持　 　 156
6.1.3　 浏览器检测标志　 　 160
6.2　 jQuery与其他库并存　 　 161
6.3　 操作JavaScript对象和集合　 　 164
6.3.1　 修剪字符串　 　 165
6.3.2　 遍历属性和集合　 　 165
6.3.3　 筛选数组　 　 167
6.3.4　 转换数组　 　 168
6.3.5　 发现JavaScript数组的更多乐趣　 　 169
6.3.6　 扩展对象　 　 171
6.3.7　 序列化参数值　 　 173
6.3.8　 测试对象　 　 177
6.4　 其他实用函数　 　 177
6.4.1　 什么都不做　 　 177
6.4.2　 测试包含关系　 　 178
6.4.3　 附加数据到元素上　 　 178
6.4.4　 预绑定函数上下文　 　 179
6.4.5　 解析JSON　 　 182
6.4.6　 表达式求值　 　 183
6.4.7　 动态加载脚本　 　 183
6.5　 小结　 　 186
第7章　 扩展jQuery　 　 187
7.1　 为什么要扩展jQuery　 　 187
7.2　 jQuery插件开发指南　 　 188
7.2.1　 为文件和函数命名　 　 188
7.2.2　 当心$　 　 189
7.2.3　 简化复杂参数列表　 　 190
7.3　 编写自定义实用函数　 　 191
7.3.1　 创建数据操作的实用函数　 　 192
7.3.2　 编写日期格式器　 　 194
7.4　 添加新的包装器方法　 　 197
7.4.1　 在包装器方法中应用多个操作　 　 199
7.4.2　 保留在包装器方法里的状态　 　 204
7.5　 小结　 　 213
第8章　 使用Ajax与服务器通信　 　 215
8.1　 回顾Ajax　 　 216
8.1.1　 创建XHR实例　 　 216
8.1.2　 发起请求　 　 218
8.1.3　 保持跟踪进度　 　 219
8.1.4　 获取响应　 　 219
8.2　 加载内容到元素中　 　 220
8.2.1　 使用jQuery加载内容　 　 222
8.2.2　 加载动态的HTML片段　 　 224
8.3　 发起GET和POST请求　 　 228
8.3.1　 使用GET获取数据　 　 230
8.3.2　 获取JSON数据　 　 232
8.3.3　 发起POST请求　 　 233
8.3.4　 实现级联下拉列表　 　 234
8.4　 完全控制Ajax请求　 　 239
8.4.1　 发起带所有参数的Ajax请求　 　 239
8.4.2　 设置请求默认值　 　 241
8.4.3　 处理Ajax事件　 　 242
8.5　 整合所有知识　 　 245
8.5.1　 实现Termifier　 　 246
8.5.2　 测试Termifier插件　 　 250
8.5.3　 改进Termifier　 　 253
8.6　 小结　 　 254
第二部分　 jQuery UI
第9章　 jQuery UI简介：主题和特效　 　 256
9.1　 配置并下载jQuery UI库　 　 257
9.1.1　 配置和下载库　 　 257
9.1.2　 使用jQuery UI库　 　 258
9.2　 jQuery的主题和样式　 　 259
9.2.1　 概述　 　 260
9.2.2　 使用ThemeRoller 工具　 　 262
9.3　 jQuery UI特效　 　 264
9.3.1　 jQuery UI特效　 　 264
9.3.2　 扩展核心库的动画功能　 　 268
9.3.3　 增强的可见性方法　 　 269
9.3.4　 为类转换应用动画特效　 　 270
9.3.5　 缓动特效　 　 271
9.4　 高级定位　 　 273
9.5　 小结　 　 276
第10章　 jQuery UI鼠标交互：跟随鼠标的移动　 　 277
10.1　 来回拖动元素　 　 278
10.1.1　 使元素可拖动　 　 280
10.1.2　 可拖动性事件　 　 283
10.1.3　 控制可拖动性　 　 284
10.2　 放置可拖动元素　 　 285
10.2.1　 使元素可放置　 　 286
10.2.2　 可放置性事件　 　 288
10.3　 排序　 　 292
10.3.1　 使元素可排序　 　 294
10.3.2　 连接可排序元素　 　 296
10.3.3　 可排序事件　 　 297
10.3.4　 获取排序的顺序　 　 298
10.4　 改变元素的尺寸　 　 299
10.4.1　 使元素可改变尺寸　 　 300
10.4.2　 可改变尺寸事件　 　 303
10.4.3　 为手柄添加样式　 　 304
10.5　 使元素可选择　 　 305
10.5.1　 创建可选择元素　 　 309
10.5.2　 可选择事件　 　 311
10.5.3　 查找已选择的和可选择的元素　 　 312
10.6　 小结　 　 313
第11章　 jQuery UI 部件：超越HTML控件　 　 315
11.1　 按钮和按钮组　 　 316
11.1.1　 UI主题中的按钮外观　 　 316
11.1.2　 创建带有主题的按钮　 　 318
11.1.3　 按钮图标　 　 320
11.1.4　 按钮事件　 　 321
11.1.5　 设置按钮样式　 　 321
11.2　 滑动条　 　 322
11.2.1　 创建滑动条部件　 　 322
11.2.2　 滑动条事件　 　 325
11.2.3　 为滑动条添加样式的技巧　 　 327
11.3　 进度条　 　 328
11.3.1　 创建进度条　 　 329
11.3.2　 进度条事件　 　 330
11.3.3　 自动更新的进度条插件　 　 330
11.3.4　 为进度条添加样式　 　 336
11.4　 自动完成部件　 　 336
11.4.1　 创建自动完成部件　 　 337
11.4.2　 自动完成部件的数据源　 　 340
11.4.3　 自动完成部件的事件　 　 342
11.4.4　 自动完成部件的样式　 　 342
11.5　 日期选择器　 　 343
11.5.1　 创建jQuery日期选择器　 　 344
11.5.2　 日期选择器的日期格式　 　 350
11.5.3　 日期选择器的事件　 　 352
11.5.4　 日期选择器的实用函数　 　 352
11.6　 选项卡　 　 354
11.6.1　 创建选项卡的内容　 　 355
11.6.2　 选项卡事件　 　 361
11.6.3　 修改选项卡样式　 　 362
11.7　 手风琴部件　 　 362
11.7.1　 创建手风琴部件　 　 363
11.7.2　 手风琴部件的事件　 　 367
11.7.3　 手风琴部件的样式类名　 　 368
11.7.4　 使用Ajax加载手风琴面板　 　 369
11.8　 对话框　 　 370
11.8.1　 创建对话框　 　 370
11.8.2　 对话框事件　 　 374
11.8.3　 对话框的类名　 　 375
11.8.4　 对话框使用技巧　 　 376
11.9　 小结　 　 377
11.10　 结束语　 　 378
附录　 JavaScript必知必会　 　 379

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>jQuery实战（第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>AngularJS深度剖析与最佳实践
序
前　言
第1章　从实战开始1
1.1　环境准备1
1.2　需求分析与迭代计划3
1.3　创建项目11
1.3.1　Yeoman11
1.3.2　FrontJet13
1.4　实现第一个页面：注册18
1.4.1　约定优于配置18
1.4.2　定义路由19
1.4.3　把后端程序跑起来24
1.4.4　连接后端程序26
1.4.5　添加验证器28
1.4.6　“错误信息提示”指令31
1.4.7　用过滤器生成用户友好的提示
信息33
1.4.8　实现自定义验证规则34
1.4.9　实现图形验证码36
1.5　实现更多功能：主题38
1.5.1　实现主题列表38
1.5.2　实现过滤功能40
1.5.3　实现分页功能42
1.5.4　实现主题树44
1.5.5　实现递归主题树56
1.5.6　实现“查看详情”功能58
1.6　实现AOP功能59
1.6.1　实现登录功能60
1.6.2　实现对话框65
1.6.3　实现错误处理功能67
1.7　实战小结68
第2章　概念介绍70
2.1　什么是UI70
2.2　模块71
2.3　作用域72
2.4　控制器73
2.5　视图74
2.6　指令75
2.6.1　组件型指令76
2.6.2　装饰器型指令79
2.7　过滤器81
2.8　路由82
2.9　服务83
2.9.1　服务85
2.9.2　工厂86
2.10　承诺88
2.11　消息92
2.12　单元测试93
2.12.1　MOCK的使用方式94
2.12.2　测试工具与断言库95
2.13　端到端测试96
第3章　背后的原理98
3.1　Angular中的MVVM模式98
3.2　Angular启动过程102
3.3　依赖注入106
3.3.1　什么是依赖注入106
3.3.2　如何在JavaScript中实现DI107
3.3.3　Angular中的DI108
3.3.4　DI与minify109
3.4　脏检查机制110
3.4.1　浏览器事件循环和Angular的MVW110
3.4.2　Angular中的$watch函数111
3.4.3　Angular中的$digest函数113
3.4.4　Angular中的$apply116
3.5　指令的生命周期117
3.5.1　Injecting118
3.5.2　compile和link过程120
3.6　Angular中的$parse、$eval和$observe、$watch122
3.6.1　$parse和$eval122
3.6.2　$observe和$watch124
3.6.3　使用场景125
3.7　REST127
3.7.1　REST的六大要点128
3.7.2　REST的四个级别130
3.8　跨域131
3.8.1　同源策略与跨域131
3.8.2　如何解决跨域问题132
3.9　前端安全技术133
3.9.1　前端攻击的基本原理和类型133
3.9.2　前端安全与前后端分工136
3.9.3　移动时代的特殊挑战137
3.9.4　安全无止境138
第4章　最佳实践140
4.1　调整开发协作流程140
4.2　前后端分离部署143
4.3　样式中心页144
4.4　CSS的扩展语言与架构145
4.5　HTML的表意性146
4.6　table，天使还是魔鬼148
4.7　测试什么？怎么测？150
4.7.1　准备工作150
4.7.2　如何测试Controller151
4.7.3　如何测试Service151
4.7.4　如何测试Filter152
4.7.5　如何测试组件型指令152
4.7.6　如何测试装饰器型指令153
4.7.7　如何测试网络请求153
4.7.8　如何测试setTimeout类功能153
4.7.9　如何Mock Service154
4.8　如何设计友好的REST API155
4.8.1　URI155
4.8.2　资源拆分155
4.8.3　资源命名155
4.8.4　方法156
4.8.5　返回值157
4.8.6　综合案例：分页API159
4.9　使用controller as vm方式160
4.9.1　源码分析161
4.9.2　推荐用法和优势161
4.9.3　路由中的controller as语法162
4.9.4　指令中的controller as语法163
4.10　移除不必要的$watch163
4.10.1　双向绑定和watchers函数164
4.10.2　其他指令中的watchers函数166
4.10.3　慎用$watch和及时销毁167
4.10.4　one-time绑定168
4.10.5　滚屏加载170
4.10.6　其他171
4.11　总是用ng-model作为输出172
4.12　用打包代替动态加载173
4.13　引入Angular-hint173
4.13.1　通过batarang插件使用angular-hint174
4.13.2　手动集成angular-hint174
4.13.3　Module hints175
4.13.4　Controller hints176
4.13.5　Directive hints176
第5章　Angular开发技巧178
5.1　$timeout的妙用178
5.2　ngTemplate寄宿方式182
5.3　在非独立作用域指令中实现scope绑定185
5.4　表单验证错误信息显示186
5.5　Angular中的AOP机制187
5.5.1　拦截器案例188
5.5.2　拦截器源码分析192
5.5.3　Angular中的装饰器195
5.5.4　Angular装饰器源码分析197
5.6　Ajax请求和响应数据的转换198
5.6.1　兼容老式API198
5.6.2　Ajax请求配置的源码分析201
5.7　在代码中注入Filter205
5.7.1　复用指定Filter205
5.7.2　重用多个Filter案例206
5.7.3　Filter源码分析207
5.8　防止Angular表达式闪烁208
5.8.1　表达式闪烁解决方案208
5.8.2　ngCloak源码分析208
5.8.3　最佳实践209
5.9　实现前端权限控制209
5.9.1　事件方案210
5.9.2　resolve方案211
5.10　依赖注入—$injector214
5.10.1　$injector的创建214
5.10.2　$injector注入方式215
5.10.3　$injector的妙用217
5.11　在指令中让使用者自定义模板219
5.12　跨多个节点的ng-if或ng-repeat223
5.13　阻止事件冒泡和浏览器默认行为224
5.14　动态绑定HTML226
第6章　Angular常见的“坑”229
6.1　module函数的声明和获取重载229
6.2　ngModel绑定值不更改232
6.2.1　验证引起的model值不显示233
6.2.2　原型链继承问题235
6.3　指令不生效239
6.4　Angular中锚点的使用240
6.5　ngRepeat验证失效241
6.5.1　简单的验证显示242
6.5.2　复杂的验证显示242
6.6　有些指令需要唯一的根节点243
6.7　指令优先级-Priority243
6.8　ngRepeat报重复内容错误244
6.9　单元测试中promise不触发245
第7章　编码规范247
7.1　目录结构248
7.1.1　按照类型优先、业务功能其次的组织方式248
7.1.2　按照业务功能优先、类型其次的组织方式249
7.2　模块组织250
7.2.1　命名250
7.2.2　Module声明250
7.2.3　依赖声明251
7.2.4　Module组件声明251
7.3　控制器252
7.3.1　命名252
7.3.2　ControllerAs vm声明252
7.3.3　初始化数据253
7.3.4　DOM操作253
7.3.5　依赖的声明253
7.3.6　精简控制器逻辑254
7.3.7　禁止用$rootScope传递数据255
7.3.8　格式化显示逻辑255
7.3.9　Resolve255
7.4　服务256
7.4.1　命名256
7.4.2　代码复用256
7.4.3　使用场景256
7.4.4　Service返回值257
7.4.5　缓存不变数据257
7.4.6　RESTful257
7.5　过滤器258
7.5.1　命名258
7.5.2　重用已有Filter258
7.5.3　禁止复杂的Filter258
7.6　指令259
7.6.1　命名259
7.6.2　Template声明259
7.6.3　link函数的scope参数命名259
7.6.4　pre-link和post-link260
7.6.5　DOM操作260
7.6.6　Directive分类260
7.6.7　Directive不是封装jQuery代码“天堂”260
7.6.8　自动回收261
7.7　模板261
7.7.1　表达式绑定261
7.7.2　Src、Href问题261
7.7.3　Class优于Style262
7.8　工具262
7.9　其他264
7.9.1　内置$服务替代原生服务264
7.9.2　Promise解决回调地狱264
7.9.3　减少$watch265
7.9.4　TDD265
第8章　工具267
8.1　WebStorm与IntelliJ267
8.2　Chrome269
8.3　Gulp273
8.4　Swagger274
8.4.1　前后端分离274
8.4.2　Swagger275
8.4.3　契约测试277
8.5　TSD277
8.6　Postman280
8.6.1　安装280
8.6.2　功能介绍280
第9章　杂项知识282
9.1　Angular 2.0282
9.2　SEO284
9.3　IE兼容性287
9.3.1　问题概述287
9.3.2　问题分类288
9.4　访问统计292
9.5　响应式布局293
9.6　国际化294
9.7　动画296
9.7.1　CSS动画296
9.7.2　JavaScript动画297
9.8　手机版开发298
9.8.1　Hybrid应用298
9.8.2　Ionic300
附录A　相关资源301
后记　提问的智慧318
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>AngularJS深度剖析与最佳实践
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>jQuery攻略
第1章 jQuery基础知识        1
1.1 jQuery的安装        1
1.2 选择DOM节点        2
1.3 延迟JavaScript的执行        3
1.4 把CSS应用到元素上        3
1.5 选择一系列非标准的HTML元素        4
1.6 计数DOM节点和显示其文本        5
1.7 获得一个元素的HTML代码        7
1.8 改变DOM节点的内容        8
1.9 快速创建DOM节点        9
1.10 为不同HTML元素分配相同类名并
对它们应用样式        12
1.11 小结        13
第2章 数组和字符串        14
2.1 利用数组在列表中显示名字        14
2.2 操作数组元素        17
2.3 筛选数组元素，只显示所需的数据        19
2.4 字符串数组和数值数组的排序        22
2.5 拆分数组        24
2.6 合并数组        26
2.7 把数值数组转换成字符串，并查找其
子字符串        27
2.8 创建对象数组        28
2.9 为对象数组排序        30
2.10 小结        32
第3章 事件处理        33
3.1 查找被点击的按钮        34
3.2 自动触发事件        37
3.3 点击之后禁用按钮        39
3.4 处理鼠标事件        40
3.5 查明哪个鼠标键被按下        43
3.6 查找鼠标按下时的屏幕坐标        44
3.7 动态地突出显示文本        45
3.8 随着鼠标移动使图像明亮或模糊        47
3.9 查明元素何时获得和失去焦点        49
3.10 在按钮上应用悬停效果        50
3.11 切换应用一个CSS类        52
3.12 创建基于图像的变换        54
3.13 为响应事件而添加和删除文本        57
3.14 应用样式作为对事件的响应        58
3.15 显示文字气球        60
3.16 创建“返回顶部”链接        63
3.17 提供“更多……”链接        64
3.18 以动画效果显示文本        67
3.19 以滑动效果来替换文本        70
3.20 使图像滚动        71
3.21 确定被按下的键        75
3.22 防止事件冒泡        77
3.23 链接多个活动        80
3.24 小结        81
第4章 表单验证        82
4.1 确认必需字段不留空        82
4.2 验证数字字段        84
4.3 验证电话号码        88
4.4 验证用户ID        90
4.5 验证日期        92
4.6 验证电子邮件地址        94
4.7 检查复选框是否被选中        96
4.8 检查单选按钮是否被选中        99
4.9 检查select元素中的选项是否被选中        101
4.10 把样式应用到选项和表格按钮        104
4.11 一步选择或取消所有的复选框        107
4.12 验证两个字段        110
4.13 验证密码和确认密码字段是否匹配        113
4.14 禁用某些字段        116
4.15 验证整个表单        118
4.16 表单数据序列化        128
4.17 小结        132
第5章 页面导航        133
5.1 编写面包屑菜单        133
5.2 把悬停效果添加到菜单项        135
5.3 创建上下文菜单        137
5.4 创建具有快捷键的导航菜单        140
5.5 创建一个右键单击上下文菜单        144
5.6 创建具有独立菜单项的两个菜单        147
5.7 建立包含子菜单项的两个菜单        149
5.8 创建折叠式菜单        153
5.9 创建动态可视化菜单        156
5.10 小结        161
第6章 视觉特效        162
6.1 水平和垂直显示图片        162
6.2 创建水平滑动的图片浏览器        165
6.3 显示一幅图片，点击时向左滚动并
消失        166
6.4 创建图片，使它向左滚动消失，然后
从右侧重新出现        169
6.5 使图片在浏览器窗口中间滚动        171
6.6 在鼠标悬停时依次显示图片        172
6.7 垂直滚动图片        175
6.8 水平滚动图片        179
6.9 创建新闻滚动浏览器        183
6.10 在鼠标悬停时显示放大的图片        188
6.11 按页显示图片        193
6.12 在任意两个方向上切换图片        196
6.13 编写钟摆式滚动器        199
6.14 使用数组来滚动图片        202
6.15 小结        205
第7章 处理表格        206
7.1 在鼠标悬停时突出显示行        206
7.2 交替突出显示相邻列        207
7.3 过滤行        211
7.4 隐藏选定列        213
7.5 分页显示表格        215
7.6 展开和折叠列表项        218
7.7 展开和折叠行        221
7.8 对列表项目排序        226
7.9 对表格排序        227
7.10 过滤表格中的行        233
7.11 小结        235
第8章 Ajax        237
8.1 显示欢迎信息        237
8.2 执行认证        241
8.3 验证用户名        243
8.4 验证邮件地址        246
8.5 使用自动完成        252
8.6 导入HTML        256
8.7 取得JSON数据        259
8.8 取得XML数据        261
8.9 分页显示表格        265
8.10 小结        268
第9章 使用插件        269
9.1 对表格的任一列进行过滤，并且可以
设置每页的行数        269
9.2 为图片添加注解        271
9.3 拖放表格中的行        273
9.4 取得、序列化并清理表单控件        275
9.5 通过Ajax提交表单        277
9.6 找到元素的准确位置和大小        281
9.7 以传送带的方式显示图片        284
9.8 使用datepicker选择日期        286
9.9 对表格排序        288
9.10 小结        289
第10章 使用CSS        290
10.1 区分HTML元素        291
10.2 向内嵌在一个元素中的另一个元素
应用样式        292
10.3 缩进段落        293
10.4 将段落的首字母设为大写        294
10.5 去除标题和段落之间的间隔        295
10.6 向标题文字应用样式        297
10.7 缩进多个段落的第一行        297
10.8 创建带有悬挂缩进的段落        298
10.9 创建带有边框的提取引用        299
10.10 创建带有图片的提取引用        301
10.11 向列表项应用列表属性        302
10.12 只对选定的列表项应用样式        303
10.13 在列表项之间放置分隔线        306
10.14 向列表应用图片标记        307
10.15 创建水平显示的列表        308
10.16 在超链接上应用样式        309
10.17 为HTML元素赋予不同的尺寸        311
10.18 放置HTML元素        313
10.19 创建多栏的布局        314
10.20 使文字围绕图片显示        316
10.21 在图片背后放置阴影        317
10.22 当鼠标移过链接的时候改变鼠标
样式        319
10.23 在指定的区域中显示长文字        320
10.24 创建圆角的栏        322
10.25 应用文字装饰        323
10.26 缩放图片        324
10.27 设置背景图片        326
10.28 使背景图片在浏览器中央显示        327
10.29 保持背景图片固定        328
10.30 小结        330
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>jQuery攻略
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Ajax模式与最佳实践
关于作者.
关于技术评论员
致谢
简介
第1章 ajax导言
一图胜千言
另一个ajax的例子
ajax体系架构基础
比较ajax与其他软件类型
一些最后的思考
第2章 ajax的具体细节
为缺乏耐心的人解释ajax
xmlhttprequest的细节
使用工厂模式
发送异步请求
将xmlht中request投入实际使用
一些最后的思考
第3章 内容分块模式
意图
动机
适用性
相关模式
体系架构
实现
模式要点
第4章 缓存控制器模式
意图
动机
适用性
相关模式
架构
实现
模式要点
第5章 置换模式
意图
动机
适用性
相关模式
体系架构
实现
模式要点
第6章 解耦导航模式
意图
动机..
适用性
相关模式
架构
实现
模式要点
第7章 表现变形模式
意图
动机
适用性
相关模式
体系架构
实现
模式要点
第8章 持久通信模式
意图
动机
适用性
相关模式
架构
实现
模式要点
第9章 状态导航模式
意图
动机
适用性
相关模式
架构
实现
模式要点
第10章 无限数据模式
意图
动机
适用性
相关模式
架构
实现
模式要点
第11章 基于rest的mvc模式
意图
动机
适用性
相关模式
架构
实现
模式要点
索引
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Ajax模式与最佳实践
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5触摸界面设计与开发
目　录
第1章　移动设备概述　0
1.1　触摸设备和桌面设备之间的差异　2
1.2　广泛使用的设备　3
1.3　HTML　56
1.4　神秘谷，是什么让触摸界面反应灵敏？　7
1.5　总结　9
第2章　创建一个简单的内容型网站　10
2.1　选择一个观念：移动优先或置后　12
2.2　创建标记　13
2.3　奠定基础的标签　15
2.4　理解 Viewport　15
2.5　响应式的CSS　19
2.6　总结　24
第3章　提高第一次加载的速度　25
3.1　浏览器是如何加载页面的　27
3.2　为什么页面加载缓慢？　27
3.3　用YSlow和PageSpeed提升速度　30
3.4　解决常见的问题　33
3.5　将它们全部放在一起　41
3.6　总结　41
第4章　加快下一次访问的速度　42
4.1　在HTTP中缓存　44
4.2　为移动优化45
4.3　使用网络存储(Web Storage)　46
4.4　应用缓存(Application Cache)　53
4.5　总结　57
第5章　使用PJAX提升触摸体验　58
5.1　页面加载的代价　60
5.2　浏览器历史API　62
5.3　添加PJAX　69
5.4　总结　77
第6章　轻触VS单击：基本的事件处理　78
6.1　是什么让轻触不同？　80
6.2　触摸事件简介　80
6.3　处理轻触　83
6.4　总结　89
6.5　项目　89
第7章　CSS过渡、动画和变换　90
7.1　动画元素　92
7.2　CSS变换　105
7.3　总结　112
7.4　项目　112
第8章　JavaScript性能最优化　113
8.1　性能测试和调试　115
8.2　只写入DOM　116
8.3　给用户反馈的优先级是最高的　117
8.4　将它们一起使用：无限滚动　118
8.5　总结　127
8.6　项目　127
第9章　手势的基本内容　128
9.1　为什么用手势呢？　130
9.2　创建一个循序渐进增强的触摸控制　131
9.3　创建一个触摸控制的灯箱(lightbox)　136
9.4　总结　150
9.5　项目　150
第10章　滚动与滑动　151
10.1　滚动　153
10.2　布局失效　159
10.3　让鸟类浏览工具可滑动　161
10.4　总结　176
10.5　项目　177
第11章　双指缩放和其他复杂的手势　178
11.1　了解多点触摸的限制和支持情况　180
11.2　处理多点触摸　180
11.3　处理双指缩放　185
11.4　总结　195
11.5　项目　195
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5触摸界面设计与开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Ajax与PHP基础教程
第1章 ajax概述
1.1 从cgi到flash再到dhtml
1.2 当前web应用稃序环境的优缺点
1.2.1 走近ajax
1.2.2 ajax的必要条件
1.3 小结
第2章 ajax基础
2.1 http请求和响应基础
2.2 xmlhttprequest对象
2.2.1 xmlhttprequest方法
2.2.2 xmlhttprequest属性
2.2.3 跨浏览器用法
2.2.4 向服务器发送请求
2.2.5 一个简单的ajax示例
2.3 小结
第3章 php和ajax
3.1 为什么选择php和ajax
3.2 客户端驱动通信，服务器端完成处理
3.3 简单示例
3.3.1 内容缩放
.　　3.3.2 自动完成
3.3.3 表单验证
3.3.4 工具提示
3.4 小结
第4章 数据库驱动的ajax
4.1 mysql简介
4.2 连接到mysql
4.3 查询mysql数据库
4.4 mysql技巧和警告
4.5 将幕于ajax的数据库查询应用到工作中
4.6 更完善的自动完成功能
4.7 载入日历
4.8 小结
第5章 表单
5.1 引入ajax：get与post
5.2 值的传递
5.3 表单验证
5.4 小结
第6章 图像
6.1 图像上传
6.2 图像显示
6.3 图像载入
6.4 略缩图动态生成
6.5 小结
第7章 一个真实的ajax应用程序
7.1 程序代码
7.2 应用程序的界面外观
7.3 工作原理
7.4 小结
第8章 人性化的显示
8.1 何时使用ajax
8.1.1 后退按钮问题
8.1.2 ajax导航
8.1.3 隐藏与显示
8.2 pear简介
8.3 html-table
8.4 小结
第9章 web服务
第10章 包含空间信息的web应用
第11章 跨浏览器问题
第12章 安全
第13章 测试与调试
第14章 dom
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Ajax与PHP基础教程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>犀利开发
第1章  jQuery起步  1.1  认识jQuery    1.1.1  JavaScript及其库    1.1.2  选用jQuery框架的理由  1.2  jQuery初步体验    1.2.1  安装jQuery库    1.2.2  导入jQuery库    1.2.3  编写jQuery代码    1.2.4  区分jQuery对象和DOM对象    1.2.5  jQuery对象和DOM对象的相互转换    1.2.6  ready事件和load事件比较  1.3  jQuery核心特性    1.3.1  jQuery构造函数    1.3.2  jQuery链式语法    1.3.3  jQuery选择器    1.3.4  jQuery扩展性第2章  jQuery技术解密第3章  高效选择的技巧与原理第4章  文档对象的操作及其高效实践第5章  事件封装机制与解析第6章  动画效果设计及其高效实践第7章  Ajax异步通信高效实践第8章  高效开发和使用插件第9章  jQuery辅助工具第10章  使用jQuery打造Ajax异步交互式动态网站
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>犀利开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Chrome扩展及应用开发
第1章　初步接触Chrome扩展及应用开发　 001
1.1　 认识Chrome扩展及应用　 002
1.2　 应用与扩展的区别　 003
1.3　 我的第一个Chrome扩展　 004
1.4　 Manifest文件格式　 008
1.5　 DOM简述　 011
1.6　 调试方法与代码质量　 013
第2章　Chrome扩展基础　 016
2.1　 操作用户正在浏览的页面　 017
2.2　 跨域请求　 020
2.3　 常驻后台　 025
2.4　 带选项页面的扩展　 027
2.5　 扩展页面间的通信　 032
2.6　 存储数据　 034
2.7　 i18n　 037
第3章　Chrome扩展的UI界面　 039
3.1　 CSS简述　 040
3.1.1　 默认样式及box模型　 040
3.1.2　 元素定位　 042
3.1.3　 字体及背景颜色　 043
3.2　 Browser　 Actions　 045
3.2.1　 图标　 045
3.2.2　 popup页面　 047
3.2.3　 标题和badge　 049
3.3　 右键菜单　 051
3.4　 桌面提醒　 056
3.5　 omnibox　 058
3.6　 Page　 Actions　 061
第4章　管理你的浏览器　 062
4.1　 书签　 063
4.1.1　 创建书签　 064
4.1.2　 创建书签分类　 064
4.1.3　 调整书签位置　 065
4.1.4　 更新书签　 065
4.1.5　 移除书签　 065
4.1.6　 获取书签内容　 065
4.1.7　 书签事件　 066
4.2　 Cookies　 068
4.2.1　 管理Cookie　 068
4.2.2　 读取Cookie　 069
4.2.3　 设置Cookie　 069
4.2.4　 删除Cookie　 070
4.2.5　 获取全部的cookie　 store　 070
4.2.6　 监控操作Cookie的行为　 071
4.3　 历史　 071
4.3.1　 读取历史　 072
4.3.2　 添加历史　 073
4.3.3　 删除历史　 074
4.3.4　 对历史操作的监听　 074
4.4　 管理扩展与应用　 075
4.4.1　 读取用户已安装的扩展和应用的信息　 075
4.4.2　 获取权限警告　 076
4.4.3　 启用、禁用、卸载扩展和启动应用　 076
4.4.4　 对管理操作的监听　 077
4.5　 标签　 078
4.5.1　 获取标签信息　 078
4.5.2　 创建标签　 079
4.5.3　 更新标签　 079
4.5.4　 移动标签　 080
4.5.5　 重载标签　 080
4.5.6　 移除标签　 080
4.5.7　 获取当前标签页面的显示语言　 081
4.5.8　 获取指定窗口活动标签可见部分的截图　 081
4.5.9　 注入JavaScript和CSS　 081
4.5.10　 与指定标签中的内容脚本（content　 script）通信　 082
4.5.11　 监视标签行为　 082
4.6　 Override　 Pages　 084
第5章　部分高级API　 086
5.1　 下载　 087
5.2　 网络请求　 089
5.3　 代理　 092
5.4　 系统信息　 095
第6章　Chrome应用基础　 098
6.1　 更加严格的内容安全策略　 099
6.2　 图标设计规范　 101
6.3　 应用的生命周期　 103
6.4　 应用窗口　 106
6.4.1　 创建窗口　 106
6.4.2　 样式更加自由的窗口　 109
6.4.3　 获取窗口　 115
6.4.4　 窗口事件　 116
6.5　 编写第一个Chrome应用　 117
第7章　文件系统　 125
7.1　 目录及文件操作对象　 126
7.2　 获取目录及文件操作对象　 127
7.3　 读取文件　 128
7.4　 遍历目录　 130
7.5　 创建及删除目录和文件　 132
7.6　 写入文件　 134
7.6.1　 Typed　 Array　 134
7.6.2　 Blob对象　 136
7.6.3　 FileWriter对象　 137
7.7　 复制及移动目录和文件　 139
第8章　媒体库　 140
8.1　 获取媒体库　 141
8.2　 添加及移除媒体库　 146
8.3　 更新媒体库　 148
8.4　 获取媒体文件信息　 152
第9章　网络通信　 154
9.1　 UDP协议　 155
9.1.1　 建立与关闭连接　 156
9.1.2　 发送与接收数据　 158
9.1.3　 多播　 160
9.1.4　 获取socket和组　 162
9.1.5　 局域网聊天应用　 163
9.2　 TCP协议　 166
9.2.1　 建立与关闭连接　 167
9.2.2　 发送与接收数据　 168
9.2.3　 获取socket　 170
9.3　 TCP　 Server　 170
9.3.1　 建立与关闭连接　 171
9.3.2　 监听数据　 173
9.3.3　 获取socket　 174
9.3.4　 HTTP　 Server　 175
9.4　 WebSocket　 178
第10章　其他接口　 179
10.1　 操作USB设备　 180
10.1.1　 发现设备　 180
10.1.2　 接口操作　 181
10.1.3　 传输操作　 182
10.2　 串口通信　 183
10.2.1　 建立连接　 183
10.2.2　 发送和接收数据　 184
10.2.3　 获取连接及状态　 185
10.3　 文字转语音　 185
10.3.1　 朗读文字　 186
10.3.2　 获取声音　 187
10.3.3　 获取朗读状态并监听事件　 188
10.4　 系统信息　 189
附录A　 制作Chrome主题　 191
A.1　 背景图片　 193
A.2　 颜色　 198
A.3　 颜色叠加　 205
A.4　 UI属性　 206
A.5　 使用My　 Chrome　 Theme制作主题　 209
附录B　 CSS选择器　 212
B.1　 基本选择器　 213
B.2　 高级选择器　 215
B.3　 伪类　 216
附录C　 初识AngularJS　 220
C.1　 视图　 221
C.2　 $scope　 224
C.3　 module与路由　 225
附录D　 Chrome扩展及应用的完整API列表　 229
D.1　 Chrome扩展的全部API　 230
D.2　 Chrome应用的全部API　 235
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Chrome扩展及应用开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通Dojo
第1章　导论  1.1　Dojo的一些主要方面    1.1.1　Dojo不只是一个程序库，而是一个工具包    1.1.2　Dojo着眼于广大的用户群    1.1.3　Dojo是面向未来的    1.1.4　Dojo是开源的    1.1.5　Dojo分为三个项目    1.1.6　Dojo具有高度的概念完整性  1.2　如何使用本书    1.2.1　预备知识    1.2.2　示例代码    1.2.3　关于调试    1.2.4　本书大纲  1.3　致谢    第一部分　用Dojo玩转Ajax第2章　轻松创建功能强大的Web表单  2.1　顾客如何评价传统表单  2.2　在服务器上安装Dojo  2.3　把Dojo和Dijit添加到网页  2.4　表单的布局    2.4.1　准备页面    2.4.2　用选项卡来组织表单    2.4.3　有问题吗  2.5　增强表单控制    2.5.1　验证字段    2.5.2　简单输入日期  2.6　组合起来第3章　连接外部服务    第二部分　Dojo API第4章　深入Dojo第5章　JavaScript语言的扩展第6章　异步编程第7章　DOM工具第8章　基于XHR、script和iframe编写远程脚本第9章　使用dojo.declare定义类第10章　dojo.data第11章　Dojo加载器和构建系统    第三部分　高级Dijit第12章　编写小部件脚本第13章　树第14章　网格第15章　表单控件第16章　Dijit主题、设计与布局第17章　创建和扩展小部件类    第四部分　富因特网应用程序第18章　创建富因特网应用程序第19章　向RIA中添加动态内容第20章　继续学习参考书目
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通Dojo
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Ajax与PHP Web开发
第1章　Ajax与未来的Web应用程序
1.1　通过Web发布的功能
1.2　20世纪90年代开始出现网站
1.2.1　HTTP与HTML
1.2.2　PHP及其他服务器端技术
1.2.3　JavaScript及其他客户端技术
1.2.4　缺少的是什么
1.3　理解Ajax
1.4　使用Ajax和PHP建立一个简单应用程序
1.5　小结
第2章　JavaScript下灵活的客户端技术
2.1　JavaScript和Document Object Model
2.2　JavaScript事件和DOM
2.3　关于DOM的进一步介绍
2.4　JavaScript、DOM和CSS
2.5　使用XMLHttpRequest对象
2.5.1　创建XMLHttpRequest对象
2.5.2　使用XMLHttpRequest初始化服务器请求
2.5.3　服务器响应处理
2.6　使用XML结构
2.6.1　处理更多的错误和抛出异常
2.6.2　建立XML结构
2.7　小结
第3章　使用PHP和MySQL实现服务器端技术
3.1　PHP与DOM
3.2　参数传递与PHP错误处理
3.3　连接远程服务器与JavaScript的安全性
3.4　使用代理服务器脚本
3.5　重复异步请求框架
3.6　使用MySQL
3.6.1　创建数据库表
3.6.2　数据操作
3.6.3　连接数据库并执行查询操作
3.7　程序封装与程序结构
3.8　小结
第4章　Ajax表单验证
4.1　实现Ajax表单验证
4.2　小结
第5章　Ajax聊天
5.1　Ajax聊天简介
5.2　实现Ajax聊天
5.3　小结
第6章　Ajax建议和自动完成
6.1　Ajax建议和自动完成简介
6.2　实现Ajax建议和自动完成
6.3　小结
第7章　使用SVG实现Ajax实时绘制图表
7.1　使用Ajax和SVG实现实时图表
7.2　小结
第8章　Ajax数据表格
8.1　使用客户端XSLT实现Ajax数据表格
8.2　小结
第9章　Ajax RSS阅读器
9.1　使用RSS
9.1.1　RSS文档结构
9.1.2　Google Reader
9.2　实现基于Ajax的RSS阅读器
9.3　小结
第10章　Ajax的拖放功能
10.1　在Web上使用拖放功能
10.1.1　购物车
10.1.2　分类列表
10.2　创建Ajax拖放分类列表应用
10.3　小结
附录A　环境配置
A.1　Windows下的环境配置
A.1.1　安装Apache
A.1.2　安装MySQL
A.1.3　安装PHP
A.2　*nix下的环境配置
A.2.1　安装Apache
A.2.2　安装MySQL
A.2.3　安装PHP
A.3　安装phpMyAdmin
A.4　配置Ajax数据库
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Ajax与PHP Web开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>React Native入门与实战
第一部分 基础语法篇
第1章　React Native简介　　 2
1.1　环境搭建　　2
1.1.1　安装Node.js　　2
1.1.2　安装React Native　　6
1.1.3　使用NVM 管理Node.js 版本　　7
1.1.4　创建项目　　8
1.2　从React到 React Native　　9
1.2.1　React简介　　9
1.2.2　ReactNative简介　　13
1.3　为什么要使用React Native　　17
1.4　如何学习React Native　　17
1.5　说明　　18
第2章　React Native开发基础　　19
2.1　flexbox布局　　19
2.1.1　介绍　　19
2.1.2　布局模型　　20
2.1.3　伸缩容器属性　　20
2.1.4　伸缩项目属性　　37
2.1.5　在React Native中使用flexbox　　46
2.1.6　实例　　47
2.2　React中的JSX　　53
2.2.1　JSX入门　　53
2.2.2　JSX实战之ReactJS　　59
2.2.3　JSX实战之React Native　　77
2.3　React Native开发向导　　80
2.3.1　配置文件　　80
2.3.2　运行　　83
2.3.3　调试　　85
2.3.4　内部发布　　91
2.4　参考资料　　91
第二部分 API和组件篇
第3章　常用组件及其实践　　94
3.1　View组件　　94
3.1.1　View介绍　　94
3.1.2　案例：九宫格实现　　94
3.2　Text组件　　102
3.2.1　Text组件介绍　　102
3.2.2　案例：网易新闻列表展示　　102
3.3　NavigatorIOS组件　　109
3.3.1　NavigatorIOS组件介绍　　109
3.3.2　案例：列表页跳转详情页　　110
3.4　TextInput组件　　113
3.4.1　TextInput组件介绍　　113
3.4.2　案例：搜索自动提示　　114
3.5　Touchable类组件　　121
3.5.1　TouchableHighlight组件　　121
3.5.2　TouchableOpacity组件　　123
3.5.3　TouchableWithoutFeedback组件　　123
3.6　Image组件　　124
3.6.1　Image组件介绍　　124
3.6.2　加载网络图片　　124
3.6.3　加载本地图片　　127
3.7　TabBarIOS组件　　128
3.7.1　TabBarIOS组件介绍　　128
3.7.2　案例：类QQ Tab切换　　129
3.8　WebView组件　　133
3.8.1　WebView组件介绍　　133
3.8.2　案例：使用WebView组件加载微博页面　　134
3.8.3　案例：新浪微博OAuth认证　　136
第4章　常用API及其实践　　 138
4.1　AppRegistry　　138
4.1.1　AppRegistry介绍　　138
4.1.2　AppRegistry示例　　138
4.2　AsyncStorage　　140
4.2.1　AsyncStorage介绍　　140
4.2.2　案例：购物车　　140
4.3　AlertIOS　　149
4.3.1　AlertIOS　　149
4.3.2　AlertIOS组件的应用　　150
4.4　ActionSheetIOS　　152
4.4.1　ActionSheetIOS介绍　　152
4.4.2　ActionSheetIOS应用　　152
4.5　PixelRatio　　154
4.5.1　PixelRatio介绍　　154
4.5.2　PixelRatio应用　　155
4.6　AppStateIOS　　156
4.6.1　AppStateIOS介绍　　156
4.6.2　AppStateIOS实例　　156
4.7　StatusBarIOS　　157
4.7.1　StatusBarIOS介绍　　157
4.7.2　StatusBarIOS应用　　157
4.8　NetInfo　　158
4.8.1　NetInfo介绍　　159
4.8.2　NetInfo示例　　 159
4.9　CameraRoll　　 159
4.9.1　CameraRoll介绍　　 160
4.9.2　CameraRoll应用　　 160
4.9.3　react-native-camera　　 167
4.10　VibrationIOS　　 170
4.11　Geolocation　　 171
4.11.1　Geolocation介绍　　 171
4.11.2　Geolocation应用　　 172
4.12　数据请求　　 173
4.12.1　XMLHttpRequest　　 174
4.12.2　Fetch　　 174
4.13　定时器　　 175
4.13.1　setTimeout　　 175
4.13.2　setInterval　　 176
4.13.3　setImmediate　　 176
4.13.4　使用requestAnimationFrame开发进度条　　 176
4.13.5　完整代码　　 177
第5章　Native扩展　　 178
5.1　通信机制　　 178
5.1.1　模块配置映射　　 178
5.1.2　通信流程　　 180
5.2　自定义Native API组件　　 183
5.2.1　模块和方法定义　　 184
5.2.2　回调函数　　 185
5.2.3　线程　　 187
5.2.4　常量导出　　 188
5.2.5　事件　　 189
5.2.6　实战　　 190
5.3　构建Native UI组件　　 196
5.3.1　概述　　 196
5.3.2　UI组件的定义　　 196
5.3.3　UI组件属性　　 197
5.3.4　组件方法　　 199
5.3.5　事件　　199
5.3.6　实例　　201
第6章　组件封装　　 208
6.1　二级菜单组件　　208
6.1.1　静态组件的实现　　209
6.1.2　实现组件的复用和封装　　213
6.1.3　应用二级菜单组件　　219
6.2　日历组件　　220
6.2.1　开发日历组件　　221
6.2.2　应用日历组件　　226
6.3　开源组件　　227
6.3.1　react-native-swiper　　228
6.3.2　react-native-modal　　231
第三部分 App更新和上架篇
第7章　热更新和上架　　 236
7.1　动态更新　　236
7.1.1　初始化设置　　236
7.1.2　更新逻辑　　238
7.1.3　回滚策略　　240
7.2　App 上架　　240
7.2.1　证书生成　　241
7.2.2　注册应用　　248
7.2.3　上传应用　　249
第四部分 实战篇
第8章　企业内部通讯录应用开发　　 254
8.1　需求提出　　254
8.2　技术架构　　255
8.3　服务器端设计和开发　　256
8.3.1　服务器端整体设计　　257
8.3.2　用户数据模型设计　　257
8.3.3　公告数据模型设计　　259
8.3.4　服务路由设计　　260
8.3.5　创建项目　　260
8.3.6　app.js入口文件　　262
8.3.7　加载服务模块到内存　　263
8.3.8　工具类开发　　264
8.3.9　用户信息接口　　265
8.3.10　公告消息接口　　270
8.3.11　建议　　272
8.4　客户端设计和开发　　272
8.4.1　客户端设计　　272
8.4.2　工具组件和服务　　274
8.4.3　添加依赖库　　275
8.4.4　程序入口和登录　　277
8.4.5　联系人列表　　286
8.4.6　公告功能　　294
8.4.7　管理功能　　299
8.4.8　关于　　316
8.4.9　建议　　318
第9章　基于LBS的应用开发　　 319
9.1　功能设计　　319
9.1.1　需求确定　　319
9.1.2　开发目录结构　　320
9.2　程序入口和工具模块　　321
9.2.1　注册应用程序　　321
9.2.2　工具模块　　322
9.2.3　Nearby组件入口　　323
9.3　列表组件开发　　327
9.3.1　通用列表组件开发　　327
9.3.2　完成列表页　　334
9.4　详情页组件开发　　336
9.5　WebView地图模块开发　　338
9.6　综合效果　　341
第10章　豆搜App　　 342
10.1　豆瓣API　　342
10.1.1　熟悉豆瓣API　　342
10.1.2　图书、电影、音乐API　　343
10.2　应用设计　　345
10.2.1　功能设计　　345
10.2.2　模块划分　　345
10.3　公共模块开发　　347
10.3.1　工具类开发　　347
10.3.2　服务列表　　348
10.3.3　Navigator封装　　349
10.3.4　公共头封装　　350
10.3.5　WebView封装　　 352
10.3.6　搜索框封装　　 353
10.4　功能开发　　 354
10.4.1　入口组件　　 354
10.4.2　图书列表页开发　　 356
10.4.3　图书详情页开发　　 361
10.4.4　电影模块开发　　 363
10.4.5　音乐模块开发　　 368
10.5　完成豆搜App　　 372
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>React Native入门与实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>React 进阶之路
第1篇  基础篇——React，一种革命性的UI开发理念
第1章  初识React	3
1.1  React简介	3
1.2  ES 6语法简介	4
1.3  开发环境及工具介绍	9
1.3.1  基础环境	9
1.3.2  辅助工具	9
1.3.3  Create React App	10
1.4  本章小结	12
第2章  React基础	13
2.1  JSX	13
2.1.1  JSX简介	13
2.1.2  JSX语法	14
2.1.3  JSX不是必需的	16
2.2  组件	17
2.2.1  组件定义	17
2.2.2  组件的props	18
2.2.3  组件的state	21
2.2.4  有状态组件和无状态组件	23
2.2.5  属性校验和默认属性	26
2.2.6  组件样式	28
2.2.7  组件和元素	32
2.3  组件的生命周期	34
2.3.1  挂载阶段	34
2.3.2  更新阶段	35
2.3.3  卸载阶段	36
2.4  列表和Keys	36
2.5  事件处理	39
2.6  表单	43
2.6.1  受控组件	44
2.6.2  非受控组件	51
2.7  本章小结	52
第3章  React 16新特性	53
3.1  render新的返回类型	53
3.2  错误处理	54
3.3  Portals	56
3.4  自定义DOM属性	57
3.5  本章小结	58
第2篇  进阶篇——用好React，你必须要知道的那些事
第4章  深入理解组件	60
4.1  组件state	60
4.1.1  设计合适的state	60
4.1.2  正确修改state	63
4.1.3  state与不可变对象	64
4.2  组件与服务器通信	66
4.2.1  组件挂载阶段通信	66
4.2.2  组件更新阶段通信	67
4.3  组件通信	68
4.3.1  父子组件通信	68
4.3.2  兄弟组件通信	71
4.3.3  Context	75
4.3.4  延伸	78
4.4  特殊的ref	79
4.4.1  在DOM元素上使用ref	79
4.4.2  在组件上使用ref	79
4.4.3  父组件访问子组件的DOM节点	81
4.5  本章小结	82
第5章  虚拟DOM和性能优化	83
5.1  虚拟DOM	83
5.2  Diff算法	84
5.3  性能优化	87
5.4  性能检测工具	90
5.5  本章小结	91
第6章  高阶组件	92
6.1  基本概念	92
6.2  使用场景	93
6.3  参数传递	96
6.4  继承方式实现高阶组件	99
6.5  注意事项	99
6.6  本章小结	101
第3篇  实战篇——在大型Web应用中使用React
第7章  路由：用React Router开发单页面应用	103
7.1  基本用法	103
7.1.1  单页面应用和前端路由	103
7.1.2  React Router 的安装	104
7.1.3  路由器	104
7.1.4  路由配置	105
7.1.5  链接	107
7.2  项目实战	108
7.2.1  后台服务API介绍	108
7.2.2  路由设计	111
7.2.3  登录页	113
7.2.4  帖子列表页	117
7.2.5  帖子详情页	125
7.3  代码分片	133
7.4  本章小结	138
第8章  Redux：可预测的状态管理机	139
8.1  简介	139
8.1.1  基本概念	139
8.1.2  三大原则	141
8.2  主要组成	141
8.2.1  action	141
8.2.2  reducer	142
8.2.3  store	146
8.3  在React中使用Redux	148
8.3.1  安装react-redux	148
8.3.2  展示组件和容器组件	148
8.3.3  connect	149
8.3.4  mapStateToProps	150
8.3.5  mapDispatchToProps	150
8.3.6  Provider 组件	151
8.4  中间件与异步操作	152
8.4.1  中间件	152
8.4.2  异步操作	154
8.5  本章小结	155
第9章  Redux项目实战	156
9.1  组织项目结构	156
9.2  设计state	161
9.2.1  错误1：以API作为设计state的依据	161
9.2.2  错误2：以页面UI为设计state的依据	164
9.2.3  合理设计state	165
9.3  设计模块	170
9.3.1  app模块	170
9.3.2  auth模块	171
9.3.3  posts模块	173
9.3.4  comments模块	177
9.3.5  users模块	179
9.3.6  ui模块	180
9.6.7  index模块	181
9.4  连接Redux	182
9.4.1  注入state	182
9.4.2  注入action creators	184
9.4.3  connect连接PostList和Redux	185
9.5  Redux调试工具	187
9.6  性能优化	188
9.6.1  React Router引起的组件重复渲染问题	188
9.6.2  Immutable.JS	193
9.6.3  Reselect	198
9.7  本章小结	199
第10章  MobX：简单可扩展的状态管理解决方案	200
10.1  简介	200
10.2  主要组成	204
10.2.1  state	204
10.2.2  computed value	211
10.2.3  reaction	212
10.2.4  action	215
10.3  MobX响应的常见误区	216
10.4  在React中使用MobX	220
10.5  本章小结	221
第11章  MobX项目实战	222
11.1  组织项目结构	222
11.2  设计store	223
11.3  视图层重构	234
11.4  MobX调试工具	236
11.5  优化建议	238
11.6  Redux与MobX比较	241
11.7  本章小结	242
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>React 进阶之路
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>超实用的jQuery代码段
序1  jQuery必知必会	VIII
序2  你绝对不可能全部做对的jQuery题	XIII
序3  最流行的前端面试题	XX
第1章  jQuery操作网页	1
1.1  显示或隐藏网页内容	1
1.2  切换页面的显示或隐藏	3
1.3  实现幻灯片式的淡入淡出效果	4
1.4  切换页面的淡入淡出	5
1.5  页面的滑动隐藏	6
1.6  切换页面的滑动	7
1.7  图片的动画效果	8
1.8  停止动画效果	11
1.9  不可不知的Callback回调	12
1.10  提高效率的链式（Chaining）操作	13
1.11  在新窗口中打开链接	15
1.12  强制在弹出窗口中打开链接	16
1.13  平滑滚动页面到某个锚点	18
1.14  阻止文本行换行	20
1.15  实现iframe高度自适应	21
1.16  实现左右div自适应相同高度	22
1.17  获取鼠标在屏幕中的坐标	24
1.18  获取鼠标在窗口客户区中的坐标	25
1.19  获取鼠标在窗口页面中的坐标	26
1.20  设置Flash对象的WMode窗口模式	27
1.21  实现类Twitter的字数限制效果	28
1.22  提示文本的隐藏与显示	29
1.23  实现文字闪烁效果	31
1.24  实现文字动画效果	33
1.25  实现文字跟随鼠标移动变化的动画效果	35
1.26  文本域中光标的定位	36
1.27  实现可折叠效果	38
1.28  文本框内容自动缩进	39
1.29  禁止页面滚动的方法	40
1.30  页面加载后消息框居中显示	43
1.31  创建页面固定浮动栏的方法	45
第2章  jQuery操作DOM元素	47
2.1  如何验证某个元素是否为空	47
2.2  检查特定的HTML元素是否存在	48
2.3  判断HTML元素是否嵌套	49
2.4  获取当前元素的索引值	50
2.5  插入节点元素	52
2.6  复制节点元素	54
2.7  替换节点元素	55
2.8  删除节点元素	57
2.9  为元素绑定事件	58
2.10  如何从元素中除去HTML标签	59
2.11  如何限制文本域中字符的个数	61
2.12  如何选中页面上的所有复选框	63
2.13  禁用表单的回车键提交	65
2.14  禁用右键单击上下文菜单	67
2.15  IE下禁用文本选择功能	68
2.16  输入框获取焦点时文本高亮提示	69
2.17  实现多个输入框同步操作	70
2.18  在新窗口中打开外部链接	71
2.19  jQuery实现outerHTML属性	72
2.20  实现带固定表头的表格	73
2.21  为表单内控件设定缺省数值和文本	75
2.22  防止单个页面重复提交按钮	76
2.23  取得列表控件选中的option对象	77
2.24  限制输入框仅接受特殊字符的输入	78
2.25  禁止页面内全部超链接	80
2.26  实现动态组合列表框	81
2.27  如何使用属性过滤器	83
2.28  如何测试某个元素是否可见	86
第3章  jQuery操作HTML事件	88
3.1  禁止或启用输入框	88
3.2  实时监听输入框字符的变化	89
3.3  实时监听输入框值的变化	90
3.4  绑定鼠标右键单击事件	91
3.5  双击不选中文本	93
3.6  通过单击事件添加或解除绑定	94
3.7  激活整个div层的单击事件	95
3.8  鼠标单击实现div的选取	95
3.9  模拟鼠标单击事件	96
3.10  设定时间间隔的方法	98
3.11  设定时间延迟的方法	99
3.12  延时显示子菜单的方法	100
3.13  通过事件获取页面加载时间	101
3.14  如何为动态添加的元素绑定事件处理函数	102
3.15  为表格行增加单击事件	103
3.16  用回车键模拟Tab键	104
第4章  jQuery操作CSS样式	106
4.1  使用addClass()函数动态添加样式类	106
4.2  使用removeClass()函数动态移除样式类	107
4.3  使用toggleClass()函数切换页面元素的样式类	108
4.4  为body增加class类支持	109
4.5  操作div的显示与隐藏	111
4.6  如何设定div始终居中显示	112
4.7  测试浏览器是否支持某些CSS 3属性	114
4.8  如何添加hover类到指定元素	114
4.9  基于URL地址为导航链接添加class样式	116
4.10  如何延迟添加class类	117
4.11  如何延迟清除class类	118
4.12  动态调整页面的字体大小	119
第5章  jQuery实现用户输入自动完成功能	121
5.1  最简单的用户输入自动完成	121
5.2  使用远程数据源的自动完成	123
5.3  带缓存的自动完成	124
5.4  带滚动条的自动完成	126
5.5  Combobox风格的自动完成	127
5.6  读取XML数据的自动完成	129
5.7  多维数据的自动完成	130
第6章  jQuery实现拖放功能	133
6.1  基本拖放功能	133
6.2  基于事件的拖放	134
6.3  限制移动范围的拖放	135
6.4  延迟进行的拖放	136
6.5  具有对齐功能的拖放	136
6.6  自动滚动的拖放	137
6.7  反转位置的拖放	138
6.8  使用事件监控拖曳次数	138
6.9  拖动时动态更改鼠标的光标类型和位置	139
6.10  拖曳并放置到目标容器	140
6.11  限制可放置的元素	141
6.12  实现可拖放的购物车	142
6.13  可排序的拖放	143
6.14  在多个列表之间进行拖放	144
6.15  使用拖动方式选择多个元素	145
6.16  在两个Tab标签之间进行元素拖动	146
6.17  拖动表格选择多行数据	148
6.18  拖动表格时自动选中复选框	149
6.19  拖动表格行并放置到目标位置	150
6.20  表格的拖动排序	152
6.21  拖动调整控件的大小	153
6.22  调整控件大小时设置调整约束	154
6.23  使用拖动的方式调整表格的宽度	154
6.24  设计可改变单元格宽度并可以多选的表格	155
第7章  jQuery操作图形图像	158
7.1  如何更好地处理图片无法显示问题	158
7.2  如何显示图片直到页面加载完成	160
7.3  预加载显示图片的方法	162
7.4  Facebook风格的图片预加载	163
7.5  检查图片src是否有效	164
7.6  上下滑动的图片	166
7.7  淡入淡出一幅图片，进入另一幅图片	170
7.8  获取图片原生尺寸的方法	171
7.9  检查图像是否已经被完全加载	172
7.10  单击改变背景图案	173
7.11  如何显示Flickr网站的图片	175
7.12  如何显示Google Picasaweb的图片	177
7.13  按比例调整图片的大小	179
7.14  滑动效果的背景图片	181
7.15  动态表单生成图片预览	182
7.16  平滑滚动的导航菜单	184
7.17  图片的放大预览	185
7.18  实现平滑的图片动态缩放效果	187
7.19  自动适应的窗口背景	188
7.20  如何判断加载多张图片的完成状态	189
7.21  鼠标悬停时的图片放大	190
7.22  淡出图片，淡入另一幅图片	192
7.23  页面加载时随机显示图片	193
7.24  按顺序淡入图片显示	195
7.25  检测图片的URL是否有效	196
7.26  强制显示图片的方法	198
7.27  实现可拖动显示的图片	199
第8章　jQuery实现AJAX	201
8.1　动态加载外部文件	201
8.2　动态加载外部网页	202
8.3　加载网页文件内容并传递服务器端参数	203
8.4　使用AJAX无刷新删除网页记录	205
8.5　使用AJAX异步验证用户名和密码	207
8.6　页面滚动时加载新的网页内容	209
8.7　打造自己的站内搜索引擎	211
8.8　异步加载并解析XML文件	213
8.9　动态加载HTML内容到标签页中	215
8.10　使用AJAX无刷新异步提交表单	216
8.11　使用AJAX无刷新上传图片	219
8.12　使用AJAX无刷新验证PHP会话是否有效	222
8.13　在AJAX异步调用时显示加载指示器	223
8.14　在AJAX异步调用时处理JSON数据	226
8.15　解析XML数据并加载到HTML表格	228
8.16　jQuery AJAX错误的处理方法	230
8.17　在页面级创建全局的AJAX监听器以及状态指示器	231
8.18　级联AJAX数据异步加载	231
8.19　取消AJAX异步请求	233
第9章　jQuery常用算法	234
9.1　jQuery遍历算法	234
9.2　jQuery祖先算法	235
9.3　jQuery后代算法	237
9.4　jQuery同胞算法	238
9.5　jQuery过滤算法	240
9.6　对一个列表进行排序	241
9.7　实现JSON对象数组的排序	242
9.8　将12343778转成12.343.778的形式	244
9.9　模拟抽奖程序	244
9.10　实现冒泡算法	246
9.11　查询数组中特定数值	248
9.12　从数组中移除特定数值	249
9.13　根据指定正则表达式识别超链接	249
9.14　验证Email地址的正确性	250
9.15　动态统计字符个数	251
9.16　使用jQuery验证用户年龄	253
9.17　按照首字母进行元素排序	254
9.18　获取URL地址的Hash参数	255
9.19　避免多行文本溢出的算法	256
9.20　随机选择一个元素	257
9.21　替换&bnsp;空字符的方法	258
9.22　序列化表单到JSON数据	259
9.23　获取页面加载时间	260
9.24　将单个句子打断显示	262
9.25　限制只能输入中文、英文或数字	263
9.26　日期类型与时间戳的转换	264
9.27　使用数组模拟打字效果	265
9.28　获取数组中特定索引的最高值	266
9.29　清除所有的表单内容	267
9.30　用jQuery删除空白标签和具有非中断空格的标签	268
第10章　jQuery Mobile移动开发技巧	270
10.1　让页面自适应屏幕宽度	270
10.2　在移动设备页面中创建多个显示视图	271
10.3　创建对话框显示效果	273
10.4　从外部文件中加载页面内容	275
10.5　为页面添加转场效果	276
10.6　设置全局默认的转场效果	278
10.7　定制显示回退按钮	280
10.8　在标题栏中添加导航栏	280
10.9　在页脚区域添加导航栏	281
10.10　添加可折叠的导航按钮	282
10.11　实现可折叠的输入表单	284
10.12　实现手风琴样式的折叠面板	285
10.13　使用网格打造简单的九宫格界面	287
10.14　可动态隐藏的页眉和页脚	289
10.15　最简单的手机相册	289
10.16　在列表框上添加气泡提示	291
10.17　在列表框上添加自定义按钮	292
10.18　为列表添加自定义的缩略图图标	294
10.19　创建列表日历的效果	296
10.20　动态创建listview列表项	298
10.21　动态加载和切换页面	299
10.22　在页面切换时显示加载进度框	300
10.23　在屏幕旋转时更改显示样式	302
10.24　在列表框中实现加载更多效果	303
10.25　自定义选择菜单	304
10.26　使用多个选择菜单进行组合选择	306
10.27　使用多选菜单选择多个值	308
10.28　创建双重范围的滑块	310
10.29　实现开关效果的选择功能	312
10.30　创建主题化的表单效果	313
第11章　其他常用代码段	315
11.1　判断jQuery库是否被加载	315
11.2　解决jQuery库冲突的方法	316
11.3　jQuery版本检查方法	317
11.4　解决jQuery版本冲突问题	317
11.5　如何设置IE特有的功能	318
11.6　判断浏览器类型并设置HTML元素内容	319
11.7　加载Google CDN的jQuery库	320
11.8　Cookies应用方法	321
11.9　使用cookie.js管理Cookies	323
11.10　让Cookies在N分钟后过期	324
11.11　如何删除Cookies	324
11.12　获取当前页面的URL并添加样式	325
11.13　向表格追加一行数据	326
11.14　获取客户端IP	327
11.15　向Firebug的控制面板发送消息	328
11.16　根据不同的屏幕大小显示不同的网页	329
11.17　jQuery遍历对象的属性	330
11.18　最优化的循环语句写法	331
11.19　如何构建最优化的字符串	332
11.20　使用jQuery产生GUID值	333
11.21　使用jQuery实现聚合函数	333
11.22　用jQuery打印网页的特定区域	334
11.23　禁止表单被提交	335
11.24　使用delay()延迟执行动画	336
11.25　在网页上运行本地程序的方法	337
11.26　动态过滤HTML表格中的内容	338
11.27　使用递归函数创建文字闪烁特效	340
11.28　使用ID选择器加快选择的速度	341
11.29　在类选择器前用标签选择器加快速度	341
11.30　缓存jQuery对象以提升性能	342
11.31　使用find()函数提升子查询的性能	343
11.32　使用jQuery操作DOM的限制	344
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>超实用的jQuery代码段
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Rails之道
第1章 Rails环境与配置 1
1.1 启动 1
1.1.1 默认环境设置 1
1.1.2 引导 2
1.1.3 RubyGems 3
1.1.4 初始化 4
1.1.5 默认加载路径 4
1.1.6 Rails模组及代码自动加载 5
1.1.7 内置的Rails信息 5
1.1.8 配置 6
1.1.9 附加配置 8
1.2 开发模式 8
1.2.1 类文件自动化重新加载 9
1.2.2 Rails类加载器 9
1.3 测试模式 10
1.4 生产模式 11
1.5 日志器 11
1.5.1 Rails日志文件 12
1.5.2 日志分析 13
1.5.3 Syslog 15
1.6 总结 15
第2章 运用控制器 16
2.1 调度器：从这里开始 16
2.1.1 接收请求 17
2.1.2 和调度器亲密接触 17
2.2 渲染视图 18
2.2.1 何时开始渲染 19
2.2.2 指定渲染 19
2.2.3 渲染其他动作的模板 19
2.2.4 渲染一个完全不同的模板 20
2.2.5 渲染局部模板 20
2.2.6 渲染内联模板代码 21
2.2.7 渲染文本 21
2.2.8 渲染其他类型的数据结构 21
2.2.9 什么都不渲染 21
2.2.10 渲染的属性 22
2.3 重定向 23
2.4 控制器和视图之间的通信 25
2.5 过滤器 25
2.5.1 过滤器继承 26
2.5.2 过滤器的类型 27
2.5.3 过滤器的队列的顺序 28
2.5.4 Around过滤器 28
2.5.5 跳过过滤器 29
2.5.6 过滤器条件 29
2.5.7 过滤器挂起 30
2.6 流 30
2.6.1 send_data(data, options = {}) 30
2.6.2 send_file(path, options = {}) 31
2.6.3 让web服务器发送文件 33
2.7 小结 33
第3章 路由 34
3.1 路由的两个目的 35
3.2 绑定参数 35
3.3 使用通配符(“接收器”) 36
3.4 静态字符串 37
3.5 route.rb文件 38
3.5.1 默认的路由信息 39
3.5.2 聚焦在:id字段 40
3.5.3 默认的路由生成规则 40
3.5.4 修改默认的路由信息 41
3.6 默认路由信息之前的信息和respond_to 41
3.7 空的路由信息 42
3.8 编写自定义路由规则 43
3.9 使用静态字符串 43
3.10 使用你自己的“接收器” 44
3.11 关于路由次序的说明 45
3.12 在路由信息中使用正则表达式 45
3.13 默认参数和url_for方法 46
3.14 使用文字化的URL 47
3.15 路由中的通配字段 47
3.16 通配符的键——值对 48
3.17 具名路由 48
3.17.1 创建具名路由 49
3.17.2 比较name_path和name_url的使用 49
3.17.3 请考虑 49
3.18 如何命名你的路由 50
3.18.1 参数糖衣 50
3.18.2 更多糖衣 51
3.19 特殊的范围方法with_options 51
3.20 小结 52
第4章 REST，资源和Rails 53
4.1 REST简介 53
4.2 Rails的REST 54
4.3 路由选择和CRUD 54
4.4 资源和表现 55
4.4.1 REST资源与Rails 55
4.4.2 从具名路由到REST支持 55
4.4.3 重新认识HTTP方法 56
4.5 标准的REST化的控制器动作 57
4.5.1 模拟PUT和DELETE操作 58
4.5.2 REST化的资源的单数和复数 58
4.5.3 特殊的拍档：new/create和edit/update 58
4.6 单数的资源路由 59
4.7 嵌套资源 59
4.7.1 显式地设置:path_prefix 60
4.7.2 显式地设置:name_prefix 61
4.7.3 显式地设置REST化的控制器 61
4.7.4 使用所有选项 62
4.7.5 思考嵌套路由 63
4.7.6 嵌套过深 63
4.8 自定义REST化的路由 64
4.8.1 添加成员路由 65
4.8.2 添加集合路由 65
4.8.3 思考 65
4.9 仅有控制器的资源 67
4.10 资源的不同展现形式 68
4.10.1 respond_to方法 68
4.10.2 格式化具名路由 68
4.11 REST化的Rails动作集合 69
4.11.1 Index 69
4.11.2 Show 71
4.11.3 Destory 71
4.11.4 New和Create 72
4.11.5 Edit和Update 73
4.12 小结 74
第5章 探究路由选择 75
5.1 在应用程序控制台检查路由 75
5.1.1 转存路由信息 75
5.1.2 剖析Route对象 76
5.1.3 在控制台识别和生成路由 78
5.1.4 控制台的具名路由 79
5.2 测试路由 80
5.3 Routing Navigator插件 80
5.4 小结 81
第6章 运用ActiveRecord 82
6.1 基础知识 82
6.2 数据迁移 84
6.2.1 创建迁移 84
6.2.2 用于迁移的API 87
6.2.3 定义列 88
6.3 宏样式方法 92
6.3.1 关系声明 93
6.3.2 约定优于配置 93
6.3.3 复数化 94
6.3.4 手动设置名字 95
6.3.5 遗留的命名约定 95
6.4 定义属性 96
6.4.1 默认属性值 96
6.4.2 序列化属性 98
6.5 CRUD：创建、读取、更新和删除 98
6.5.1 创建新的ActiveRecord实例 98
6.5.2 读取ActiveRecord对象 99
6.5.3 读写属性 100
6.5.4 在类型转换之前访问并且操作属性 102
6.5.5 重新载入 102
6.5.6 基于属性的动态查找器 102
6.5.7 自定义SQL查询 103
6.5.8 查询缓存 104
6.5.9 更新 106
6.5.10 基于条件的更新 107
6.5.11 更新特定实例 107
6.5.12 更新特定属性 107
6.5.13 便利的更新器 108
6.5.14 控制对属性的访问 108
6.5.15 删除和销毁 109
6.6 数据库锁定 109
6.6.1 乐观锁定 110
6.6.2 悲观锁定 111
6.6.3 需要考虑的问题 112
6.7 高级查找 112
6.7.1 条件 112
6.7.2 查询结果集的排序 114
6.7.3 限制和偏移量 114
6.7.4 select选项 115
6.7.5 from选项 115
6.7.6 group by选项 115
6.7.7 locking选项 116
6.7.8 连接和包含关联 116
6.7.9 read only 116
6.8 在不同的数据模型中连接多个数据库 116
6.9 直接使用数据库连接 117
6.9.1 DatabaseStatements模组 118
6.9.2 其他连接方法 119
6.10 其他配置选项 120
6.11 小结 121
第7章 ActiveRecord关联 122
7.1 关联的继承关系 122
7.2 一对多关联 123
7.2.1 向集合添加已经关联的对象 124
7.2.2 AssociationCollection的方法 125
7.3 belongs_to关联 127
7.3.1 重新载入关联 127
7.3.2 通过关联来构建(build)或创建(create)相关对象 128
7.3.3 belongs_to的选项 128
7.4 has_many关联 132
7.4.1 has_many的选项 133
7.4.2 代理方法 137
7.5 多对多关系 138
7.5.1 has_and_belongs_to_many 138
7.5.2 has_many :through 143
7.5.3 has_many :through的选项 146
7.6 一对一关系 148
7.6.1 has_one 148
7.6.2 has_one的选项 150
7.7 未保存的对象和关联 151
7.7.1 一对一关联 151
7.7.2 集合 152
7.8 关联的扩展 152
7.9 AssociationProxy类 153
7.10 小结 154
第8章 ActiveRecord验证 155
8.1 查找错误 155
8.2 简单的验证声明 155
8.2.1 validates_acceptance_of 156
8.2.2 validates_associated 156
8.2.3 validates_confirmation_of 156
8.2.4 validates_each 157
8.2.5 validates_inclusion_of和validates_exclusion_of 157
8.2.6 validates_existence_of 158
8.2.7 validates_format_of 158
8.2.8 validates_length_of 159
8.2.9 validates_numericality_of 159
8.2.10 validates_presence_of 159
8.2.11 validates_uniqueness_of 160
8.2.12 RecordInvalid 161
8.3 通用验证选项 161
8.3.1 :allow_nil 161
8.3.2 :if 161
8.3.3 :message 161
8.3.4 :on 161
8.4 条件认证 162
8.5 使用Errors对象 163
8.5.1 操作Errors集合 163
8.5.2 Errors的检查 163
8.6 自定义验证 164
8.7 跳过验证 164
8.8 小结 165
第9章 ActiveRecord的高级技巧 166
9.1 回调方法 166
9.1.1 注册回调方法 167
9.1.2 匹配before/after回调方法 167
9.1.3 中断执行 168
9.1.4 使用回调方法 168
9.1.5 特殊的回调方法：after_initialize和after_find 170
9.1.6 回调方法类 171
9.2 观察器 173
9.2.1 命名规则 173
9.2.2 注册观察器 174
9.2.3 时机 174
9.3 单表继承(single-table inheritance，STI) 174
9.3.1 将继承映射到数据库 176
9.3.2 STI值得注意的几点 177
9.3.3 STI和数据模型关联 177
9.4 抽象数据类型的基类 179
9.5 多态的has_many关系 180
9.5.1 假如数据模型带有注释功能 180
9.5.2 使用has_many的注意事项 182
9.6 用以重用通用行为的模块 182
9.6.1 回顾类的作用范围和环境 184
9.6.2 Include回调方法 185
9.7 在运行时修改ActiveRecord 186
9.7.1 应用时的注意事项 187
9.7.2 Ruby和域指定语言 187
9.8 小结 188
第10章 ActionView 189
10.1 ERb基础 189
10.1.1 ERb实践 189
10.1.2 整理ERb输出 191
10.1.3 ERb分隔符中的注释 191
10.1.4 条件输出 191
10.1.5 RHTML? RXML? RJS? 191
10.2 布局和模板 192
10.2.1 使用Yield生成内容 193
10.2.2 模板变量 194
10.2.3 针对用户提交的数据保护你的视图 196
10.3 局部模板 197
10.3.1 简单的使用示例 197
10.3.2 重用局部模板 198
10.3.3 共享局部模板 198
10.3.4 给局部模板传递变量 199
10.3.5 渲染数据集合 200
10.3.6 日志 201
10.4 缓存 201
10.4.1 在开发模式下的缓存 201
10.4.2 页面缓存 202
10.4.3 动作缓存 202
10.4.4 片段缓存 203
10.4.5 缓存内容的期限 205
10.4.6 使用Sweeper自动过期缓存 206
10.4.7 缓存日志 207
10.4.8 Action Cache插件 208
10.4.9 缓存的存储 208
10.5 小结 209
第11章 辅助方法 210
11.1 ActiveRecordHelper 210
11.1.1 报告验证的错误 210
11.1.2 自动创建表单 212
11.1.3 自定义验证错误的高亮方式 213
11.2 AssetTagHelper 214
11.2.1 Head的辅助方法 214
11.2.2 针对插件的辅助方法以设定默认的JavaScript文件 217
11.3 BenchmarkHelper 217
11.4 CacheHelper 217
11.5 CapturelHelper 218
11.6 DateHelper 218
11.6.1 日期时间选择 218
11.6.2 单个日期和时间选择辅助 219
11.6.3 日期选择辅助方法的通用选项 220
11.6.4 名字复杂的distance_in_time方法 221
11.7 DebugHelper 222
11.8 FormHelper 222
11.8.1 通过表单创建Active Record模型 222
11.8.2 表单辅助方法是怎样取值的？ 227
11.9 FormOptionsHelpers 228
11.9.1 Select标签的辅助器 228
11.9.2 Option标签的辅助器 229
11.10 FormTagHelper 232
11.11 JavaScriptHelper 234
11.12 NumberHelper 235
11.13 PaginationHelper 236
11.13.1 will_paginate 236
11.13.2 paginator 237
11.13.3 Paginating Find 237
11.14 RecordIdentification 237
11.15 RecordTagHelper 239
11.16 TagHelper 239
11.17 TextHelper 240
11.18 UrlHelper 245
11.19 编写你自己的辅助方法 249
11.19.1 小小的优化：Title辅助方法 249
11.19.2 封装视图的逻辑：photo_for辅助方法 250
11.19.3 智能视图：breadcrumbs辅助方法 250
11.20 包装并生成局部视图模板 251
11.20.1 一个tiles辅助器 251
11.20.2 生成局部模板 253
11.21 小结 255
第12章 Ajax on Rails 256
12.1 Prototype 257
12.1.1 FireBug 257
12.1.2 Prototype API 257
12.1.3 顶层函数 258
12.1.4 类 259
12.1.5 JavaScript的对象类的扩展 259
12.1.6 扩展JavaScript的Array类 260
12.1.7 扩展document对象 261
12.1.8 扩展Event类 261
12.1.9 扩展JavaScript的Function类 263
12.1.10 扩展JavaScript的Nubmer类 263
12.1.11 扩展JavaScript String类 264
12.1.12 Ajax对象 266
12.1.13 Ajax.Responders 266
12.1.14 Enumerable 267
12.1.15 Hash 270
12.1.16 ObjectRange 271
12.1.17 Prototype 对象 271
12.2 PrototypeHelper模组 271
12.2.1 link_to_remote 271
12.2.2 remote_form_for 274
12.2.3 periodically_call_remote 275
12.2.4 observe_field 276
12.2.5 observe_form 277
12.3 RJS——在Ruby中编写Javascript 277
12.3.1 RJS模板 278
12.3.2 (javascript) 279
12.3.3 [](id) 279
12.3.4 alert(message) 279
12.3.5 call(function, *arguments, &block) 279
12.3.6 delay(seconds = 1){ ... } 280
12.3.7 draggable(id, options = {}) 280
12.3.8 drop_receiving(id, options = {}) 280
12.3.9 hide(*ids) 280
12.3.10 insert_html(position, id, *options_for_render) 280
12.3.11 literal(code) 281
12.3.12 redirect_to(location) 281
12.3.13 remove(*ids) 281
12.3.14 replace(id, *options_for_render) 281
12.3.15 replace_html(id, *options_for_render) 281
12.3.16 select(pattern) 281
12.3.17 show(*ids) 281
12.3.18 sortable(id, options = {}) 282
12.3.19 toggle(*ids) 282
12.3.20 visual_effect(name, id = nil, options = {} 282
12.4 JSON 282
12.5 Drag and Drop 283
12.6 Sortable 285
12.7 自动完成 285
12.8 可切换的编辑输入框 286
12.9 小结 287
第13章 Session管理 288
13.1 该把什么放在session中 288
13.1.1 当前用户 288
13.1.2 Session使用规则 289
13.2 Session属性 289
13.2.1 针对机器人关闭session功能 289
13.2.2 选择性开启session 290
13.2.3 安全的session 290
13.3 存储机制 290
13.3.1 ActiveRecord存储机制 291
13.3.2 PStore(基于文件的方式) 291
13.3.3 DRb Session存储机制 291
13.3.4 memcach存储机制 292
13.3.5 关于CookieStore的争议 292
13.4 超时机制和session生命周期 293
13.4.1 Session超时插件 294
13.4.2 跟踪活跃的session 294
13.4.3 增强安全性 295
13.4.4 清除陈旧的session 295
13.5 Cookies 295
13.6 小结 296
第14章 登录与认证 297
14.1 Acts as Authenticated 297
14.1.1 安装与设置 298
14.1.2 User数据模型 298
14.1.3 Account控制器 304
14.1.4 从Cookie中登录 306
14.1.5 当前用户 307
14.2 在登录期间测试 308
14.3 小结 309
第15章 XML和ActiveResource 310
15.1 to_xml方法 310
15.1.1 定制to_xml输出 311
15.1.2 to_xml和关联性 312
15.1.3 高级to_xml 313
15.1.4 运行时的动态属性 314
15.1.5 重载to_xml 315
15.1.6 由数组的to_xml方法所学到的 315
15.2 XML Builder 316
15.3 解析XML 318
15.3.1 将XML转换成散列 318
15.3.2 XmlSimple 319
15.3.3 类型转换 320
15.4 ActiveResource 320
15.4.1 Find 321
15.4.2 Create 322
15.4.3 Update 324
15.4.4 Delete 324
15.4.5 HTTP头信息 325
15.4.6 自定义 326
15.4.7 散列形式 327
15.5 小结 327
第16章 ActionMailer 328
16.1 安装 328
16.2 Mailer模型 328
16.2.1 准备要发出的邮件消息 329
16.2.2 HTML格式的邮件信息 331
16.2.3 复合格式的信息 331
16.2.4 文件附件 332
16.2.5 发送邮件 333
16.3 接收邮件 333
16.3.1 TMail::Mail API参考 334
16.3.2 处理附件 334
16.4 配置 335
16.5 小结 335
第17章 测试 336
17.1 Rails中测试的专用术语 337
17.1.1 关于独立性… 337
17.1.2 Rails的数据模拟 337
17.1.3 真正的数据模拟和占位代码 338
17.1.4 整合测试 339
17.1.5 避免概念混淆 339
17.2 Test::Unit 340
17.3 数据装置 341
17.3.1 CSV格式的数据装置 342
17.3.2 在测试中访问数据装置中的记录 342
17.3.3 动态的数据装置的数据 343
17.3.4 在开发模式下使用数据装置中的数据 344
17.3.5 从开发数据中生成数据装置 344
17.3.6 数据装置的选项 345
17.3.7 大家都不喜欢数据装置 345
17.3.8 数据装置其实没那么糟糕 346
17.4 断言 347
17.4.1 基本的断言 347
17.4.2 Rails的断言 349
17.4.3 一个断言配一个测试方法 349
17.5 使用单元测试来测试数据模型 350
17.5.1 数据模型测试基础 350
17.5.2 决定测试什么 352
17.6 使用功能测试来测试控制器 352
17.6.1 结构和setup 352
17.6.2 功能测试方法 353
17.6.3 通用断言 353
17.7 使用功能测试来测试视图 356
17.7.1 测试RJS的行为 359
17.7.2 其他选择方法 359
17.7.3 测试路由规则 359
17.8 Rails整合测试 360
17.8.1 基础 361
17.8.2 整合测试的API 361
17.8.3 使用session 362
17.9 和测试相关的Rake任务 362
17.10 验收测试 362
17.11 Selenium 363
17.11.1 Selenium的基本概念 363
17.11.2 开始使用Selenium 364
17.11.3 RSelenese 365
17.12 小结 366
第18章 RSpec on Rails 367
18.1 介绍RSpec 367
18.1.1 Should和预期情况 368
18.1.2 结果预测 369
18.1.3 自定义预期情况匹配器 369
18.1.4 包含多个例子的行为 371
18.1.5 共享的行为 372
18.1.6 RSpec的数据模拟和占位代码 374
18.1.7 运行spec 376
18.1.8 安装RSpec和RSpec on Rails插件 378
18.2 RSpec on Rails插件 378
18.2.1 代码生成器 378
18.2.2 数据模型spec 378
18.2.3 控制器的spec 380
18.2.4 视图的spec 383
18.2.5 辅助器的spec 384
18.2.6 Scaffolding 385
18.3 RSpec工具 385
18.3.1 Autotest 385
18.3.2 RCov 385
18.4 小结 386
第19章 用插件扩展Rails 387
19.1 管理插件 387
19.1.1 重用代码 387
19.1.2 插件脚本 388
19.1.3 Subversion和script/plugin 391
19.2 使用Piston 392
19.2.1 安装 392
19.2.2 导入Vendor库 393
19.2.3 转换现有的Vendor库 393
19.2.4 更新 394
19.2.5 锁定和解锁版本 394
19.2.6 Piston属性 394
19.3 编写自己的插件 394
19.3.1 init.rb钩子 395
19.3.2 lib目录 396
19.3.3 扩展Rails类 396
19.3.4 README和MIT-LICENSE文件 397
19.3.5 install.rb和uninstall.rb文件 398
19.3.6 自定义Rake任务 399
19.3.7 插件的Rakefile 399
19.3.8 测试插件 400
19.4 小结 400
第20章 Rails生产环境配置 401
20.1 生产环境Rails的简史 401
20.2 一些基本的先决条件 402
20.3 软件集清单 403
20.3.1 服务器和网络环境 403
20.3.2 Web层 404
20.3.3 应用程序层 404
20.3.4 数据库层 404
20.3.5 监控 405
20.3.6 版本控制 405
20.4 安装 405
20.4.1 Ruby 405
20.4.2 RubyGems 405
20.4.3 Rails 406
20.4.4 Mongrel 406
20.4.5 Mongrel Cluster 406
20.4.6 Nginx 406
20.4.7 Subversion 407
20.4.8 MySQL 407
20.4.9 Monit 407
20.4.10 Capistrano 407
20.5 配置 408
20.5.1 配置Mongrel Cluster 408
20.5.2 配置Nginx 408
20.5.3 配置Monit 412
20.5.4 配置Capistrano 414
20.6 配置init脚本 414
20.6.1 Nginx init脚本 414
20.6.2 Mongrel init脚本 415
20.6.3 Monit配置 416
20.7 部署和发布 418
20.8 有关生产环境软件集的其他注意点 418
20.8.1 冗余和失效转移 418
20.8.2 缓存 418
20.8.3 性能和可扩展性 418
20.8.4 安全 419
20.8.5 可维护性 419
20.9 结论 419
第21章 Capistrano 421
21.1 Capistrano 概述 421
21.1.1 术语 421
21.1.2 基础知识 422
21.1.3 Capistrano做了什么，没做什么 423
21.2 入门 423
21.2.1 安装 423
21.2.2 “Capify”你的Rails应用程序 423
21.2.3 配置部署 425
21.2.4 一些茧合脚本 425
21.2.5 设置部署目标服务器 426
21.2.6 部署！ 427
21.3 重载Capistrano的默认假定 427
21.3.1 使用远程用户账号 428
21.3.2 定制Capistrano使用的源代码管理系统(SCM) 428
21.3.3 部署目标服务器不能访问源代码管理系统(SCM) 428
21.3.4 如果我不把database.yml放在源代码库中 428
21.3.5 如果我的数据迁移不能从0运行到100 430
21.4 实用的Capistrano策略 431
21.4.1 变量和它们的有效范围 431
21.4.2 练习#1：Staging 432
21.4.3 练习#2：管理其他服务 434
21.5 多服务器部署 435
21.6 事务处理 436
21.7 代理访问部署目标服务器 437
21.8 小结 438
第22章 后台进程 439
22.1 script/runner 439
22.1.1 入门 440
22.1.2 用法说明 440
22.1.3 script/runner的考虑 441
22.2 DRb 441
22.2.1 一个简单的DRb服务 441
22.2.2 在Rails中使用DRb 442
22.2.3 DRb的考虑 442
22.2.4 资源 442
22.3 BackgrounDRb 443
22.3.1 入门 443
22.3.2 配置 443
22.3.3 理解BackgrounDRb 444
22.3.4 使用中间人 444
22.3.5 警告 445
22.3.6 BackGrounDRb的考虑 446
22.4 Daemons 446
22.4.1 用法 446
22.4.2 线程介绍 447
22.4.3 Daemon的考虑 448
22.5 小结 449
附录A ActiveSupport API参考 450
附录B Rails概要 498
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Rails之道
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>揭秘Angular 2
第一部分入门篇
1 前端风云. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2
1.1 故事的起点2
1.2 AJAX 王者归来3
1.3 工具库的流行3
1.4 百家争鸣3
1.5 走进前端新时代4
1.6 小结6
2 Angular 简介. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 7
2.1 历史回顾7
2.1.1 AngularJS 1.x 起源7
2.1.2 AngularJS 1.x 迭代之路8
2.1.3 初生的Angular 2 9
2.1.4 快速发展的Angular 2 10
2.1.5 开发语言之选11
2.2 Angular 2 简述12
2.2.1 核心概念12
2.2.2 平台简介14
2.2.3 平台亮点16
2.3 小结17
3 TypeScript 入门. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 18
3.1 TypeScript 概述18
3.1.1 概述18
3.1.2 安装19
3.2 基本类型20
3.2.1 布尔类型20
3.2.2 数字类型20
3.2.3 字符串类型21
3.2.4 数组类型21
3.2.5 元组类型21
3.2.6 枚举类型21
3.2.7 任意值类型22
3.2.8 null 和undefined 22
3.2.9 void 类型23
3.2.10 never 类型24
3.3 声明和解构24
3.3.1 let 声明25
3.3.2 const 声明26
3.3.3 解构26
3.4 函数28
3.4.1 函数定义28
3.4.2 可选参数28
3.4.3 默认参数29
3.4.4 剩余参数30
3.4.5 函数重载30
3.4.6 箭头函数31
3.5 类32
3.5.1 类的例子32
3.5.2 继承与多态32
3.5.3 修饰符33
3.5.4 参数属性35
3.5.5 静态属性35
3.5.6 抽象类36
3.6 模块37
3.6.1 概述37
3.6.2 模块导出方式37
3.6.3 模块导入方式38
3.6.4 模块的默认导出39
3.6.5 模块设计原则40
3.7 接口42
3.7.1 概述42
3.7.2 属性类型接口42
3.7.3 函数类型接口43
3.7.4 可索引类型接口44
3.7.5 类类型接口44
3.7.6 接口扩展45
3.8 装饰器46
3.8.1 概述46
3.8.2 方法装饰器47
3.8.3 类装饰器48
3.8.4 参数装饰器50
3.8.5 属性装饰器51
3.8.6 装饰器组合51
3.9 泛型53
3.10 TypeScript 周边54
3.10.1 编译配置文件54
3.10.2 声明文件55
3.10.3 编码工具56
3.10.4 展望未来57
3.11 小结57
4 快速入门. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 58
4.1 Hello World 例子58
4.1.1 准备工作58
4.1.2 搭建步骤59
4.2 通讯录例子66
4.2.1 背景介绍66
4.2.2 架构设计68
4.3 小结74
第二部分深入篇
5 Angular 架构总览. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 76
5.1 核心模块介绍76
5.1.1 组件77
5.1.2 模板81
5.1.3 指令82
5.1.4 服务83
5.1.5 依赖注入84
5.1.6 路由86
5.2 应用模块88
5.3 源码结构介绍91
5.4 小结93
6 组件. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 94
6.1 概述94
6.1.1 模块化介绍94
6.1.2 组件化标准96
6.1.3 Angular 的组件100
6.2 组件基础100
6.2.1 创建组件的步骤100
6.2.2 组件基础构成102
6.2.3 组件与模块108
6.3 组件交互113
6.3.1 组件的输入输出属性114
6.3.2 父组件向子组件传递数据115
6.3.3 子组件向父组件传递数据120
6.3.4 其他组件交互方式122
6.4 组件内容嵌入124
6.5 组件生命周期128
6.5.1 概述128
6.5.2 生命周期钩子128
6.6 变化监测131
6.6.1 数据变化的源头131
6.6.2 变动通知机制132
6.6.3 变化监测的响应处理133
6.7 扩展阅读139
6.7.1 元数据一览表139
6.7.2 元数据说明139
6.7.3 深入理解Zones 149
6.8 小结155
7 模板. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 156
7.1 模板语法概览156
7.2 数据绑定158
7.2.1 概述158
7.2.2 插值160
7.2.3 模板表达式160
7.2.4 属性绑定162
7.2.5 事件绑定165
7.2.6 双向数据绑定168
7.2.7 输入和输出属性169
7.3 内置指令170
7.3.1 NgClass 170
7.3.2 NgStyle 170
7.3.3 NgIf 171
7.3.4 NgSwitch 172
7.3.5 NgFor 172
7.4 表单173
7.4.1 模板表单例子174
7.4.2 表单指令175
7.4.3 自定义表单样式184
7.4.4 表单校验185
7.5 管道189
7.5.1 管道介绍190
7.5.2 内置管道190
7.5.3 自定义管道196
7.5.4 管道的变化监测198
7.6 扩展阅读202
7.6.1 安全导航操作符202
7.6.2 双向绑定的原理202
7.7 小结205
8 指令. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 206
8.1 概述206
8.1.1 指令分类208
8.1.2 内置指令210
8.2 自定义属性指令219
8.2.1 实现属性指令219
8.2.2 为指令绑定输入221
8.2.3 响应用户操作223
8.3 自定义结构指令224
8.3.1 实现结构指令224
8.3.2 模板标签与星号前缀227
8.3.3 NgIf 指令原理228
8.4 扩展阅读231
8.5 小结235
9 服务与RxJS . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 237
9.1 Angular 服务237
9.1.1 概述237
9.1.2 使用场景238
9.2 HTTP 服务242
9.2.1 AJAX 介绍243
9.2.2 JSONP 介绍249
9.2.3 HttpModule 250
9.3 响应式编程254
9.3.1 概述254
9.3.2 ReactiveX 256
9.4 RxJS 258
9.4.1 创建Observable 对象258
9.4.2 使用RxJS 处理复杂场景258
9.4.3 RxJS 和Promise 的对比259
9.4.4 “冷”模式下的Observable 260
9.4.5 RxJS 中的Operator 261
9.4.6 Angular 中的RxJS 265
9.5 小结269
10 依赖注入. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 270
10.1 依赖注入介绍271
10.2 Angular 依赖注入274
10.2.1 概述274
10.2.2 在组件中注入服务276
10.2.3 在服务中注入服务278
目录xvii
10.2.4 在模块中注入服务280
10.2.5 层级注入282
10.2.6 注入到派生组件286
10.2.7 限定方式的依赖注入288
10.3 Provider 292
10.3.1 概述292
10.3.2 Provider 注册方式293
10.4 扩展阅读297
10.5 小结299
11 路由. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 300
11.1 概述300
11.2 基本用法302
11.2.1 路由配置302
11.2.2 创建根路由模块303
11.2.3 添加RouterOutlet 指令303
11.3 路由策略304
11.3.1 HashLocationStrategy 介绍305
11.3.2 PathLocationStrategy 介绍306
11.4 路由跳转307
11.4.1 使用指令跳转308
11.4.2 使用代码跳转310
11.5 路由参数312
11.5.1 Path 参数312
11.5.2 Query 参数315
11.5.3 Matrix 参数317
11.6 子路由和附属Outlet 317
11.6.1 子路由317
11.6.2 附属Outlet 319
11.7 路由拦截320
11.7.1 激活拦截与反激活拦截321
11.7.2 数据预加载拦截325
11.8 模块的延迟加载327
11.8.1 延迟加载实现328
11.8.2 模块加载拦截329
11.9 小结331
12 测试. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 332
12.1 概述332
12.2 单元测试333
12.2.1 概述333
12.2.2 常用测试框架334
12.2.3 Jasmine 介绍334
12.2.4 Karma 介绍338
12.2.5 Karma 结合Jasmine 测试339
12.3 Angular 单元测试343
12.3.1 概述343
12.3.2 独立单元测试348
12.3.3 测试工具集352
12.4 端到端测试360
12.4.1 概述360
12.4.2 Protractor 介绍361
12.5 小结364
第三部分实战篇
13 问卷调查系统简介. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 366
13.1 项目背景366
13.2 主要特性367
13.2.1 首页和帮助页369
13.2.2 问卷编辑页369
13.2.3 我的问卷页369
13.2.4 用户管理页369
13.3 产品设计369
13.4 小结371
14 项目起步. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 372
14.1 技术选型372
14.1.1 前端脚手架372
14.1.2 UI 样式库373
14.1.3 后端服务器374
14.2 环境搭建374
14.2.1 搭建脚手架374
14.2.2 引入样式库377
14.2.3 搭建后台环境378
14.3 目录结构介绍380
14.4 首页开发384
14.5 小结388
15 问卷编辑模块. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 389
15.1 概述389
15.1.1 功能设计389
15.1.2 数据模型391
15.2 问卷编辑模块开发393
15.2.1 问题选择组件394
15.2.2 问题组件398
15.2.3 问卷组件408
15.2.4 问卷服务415
15.2.5 问卷大纲422
15.3 小结425
16 我的问卷模块. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 426
16.1 问卷列表427
16.1.1 问卷列表项428
16.1.2 显示问卷列表429
16.1.3 显示问卷详情431
16.2 问卷操作433
16.2.1 修改路由配置434
16.2.2 发布后的问卷页面436
16.2.3 问卷操作组件439
16.3 小结442
17 用户管理模块. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 443
17.1 开发简单注册页444
17.2 表单控件组件446
17.2.1 定义表单控件446
17.2.2 校验表单控件447
17.2.3 表单安全450
17.3 用户注册功能开发451
17.3.1 用户注册服务451
17.3.2 组件的逻辑453
17.3.3 注册接口开发455
17.4 权限管理456
17.5 小结460
18 项目构建和最佳实践. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 461
18.1 项目构建461
18.1.1 代码质量检查461
18.1.2 测试463
18.1.3 打包465
18.1.4 容器化467
18.2 最佳实践468
18.2.1 单一职责468
18.2.2 命名约定469
18.2.3 编码约定471
18.2.4 应用结构约定474
18.2.5 组件相关约定475
18.2.6 指令相关约定478
18.2.7 服务相关约定478
18.2.8 其他479
18.3 小结480
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>揭秘Angular 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Ext JS高级程序设计
前  言

第一部分   Ext Core
第 1 章   Ext Core 重要概念••••••••••••••••2
1.1  Ext.Element•••••••••••••••••••••••••••••••••••••••••2
1.1.1  获取 HTMLElement 节点的 Ext.Element 实例•••••••••••••••••••••••••2
1.1.2  CSS 样式操作•••••••••••••••••••••••••••••3
1.1.3  DOM 查询与遍历•••••••••••••••••••••••4
1.1.4  DOM 操作•••••••••••••••••••••••••••••••••••6
1.1.5  事件处理•••••••••••••••••••••••••••••••••••••9
1.1.6  尺寸大小•••••••••••••••••••••••••••••••••••13
1.1.7  定位功能•••••••••••••••••••••••••••••••••••14
1.1.8  动画功能•••••••••••••••••••••••••••••••••••16
1.1.9  杂项•••••••••••••••••••••••••••••••••••••••••••19
1.2  Ext Core 的 Ajax 功能••••••••••••••••••••••19
1.3  DomQuery 详解••••••••••••••••••••••••••••••••20
1.4  模板介绍 ••••••••••••••••••••••••••••••••••••••••••23
1.5  实用功能 ••••••••••••••••••••••••••••••••••••••••••24
1.6  定时执行代码 ••••••••••••••••••••••••••••••••••25
1.7  本章小结 ••••••••••••••••••••••••••••••••••••••••••26
第 2 章   Ext Core 实例系统 设计•••••••••••••••••••••••••••••••••••••••••••27
2.1  需求分析 ••••••••••••••••••••••••••••••••••••••••••27
2.2  系统设计•••••••••••••••••••••••••••••••••••••••••• 28
2.3  功能结构图•••••••••••••••••••••••••••••••••••••• 29
2.4  开发与运行环境•••••••••••••••••••••••••••••• 31
2.5  数据库设计•••••••••••••••••••••••••••••••••••••• 31
2.6  本章小结•••••••••••••••••••••••••••••••••••••••••• 34
第 3 章   Ext Core 实例— .NET 语言实现 ••••••••••••••••••••• 35
3.1  创建应用并设置开发环境 •••••••••••••• 35
3.2  自定义 Membership 提供程序 •••••••• 37
3.3  创建母版页•••••••••••••••••••••••••••••••••••••• 38
3.4  首页设计•••••••••••••••••••••••••••••••••••••••••• 42
3.5  产品列表页•••••••••••••••••••••••••••••••••••••• 47
3.6  产品详细信息页•••••••••••••••••••••••••••••• 51
3.7  登录对话框•••••••••••••••••••••••••••••••••••••• 56
3.8  用户注册对话框•••••••••••••••••••••••••••••• 61
3.9  购物车对话框•••••••••••••••••••••••••••••••••• 65
3.10  结算•••••••••••••••••••••••••••••••••••••••••••••••• 70
3.11  为产品详细页添加评论••••••••••••••••• 77
3.12  本章小结•••••••••••••••••••••••••••••••••••••••• 84
第 4 章   Ext Core 实例— Java 语言实现 •••••••••••••••••••• 85
4.1  技术选型•••••••••••••••••••••••••••••••••••••••••• 85
4.2  搭建开发环境•••••••••••••••••••••••••••••••••• 85
4.3  设计页面布局 ••••••••••••••••••••••••••••••••••87
4.4  网上商店首页 ••••••••••••••••••••••••••••••••••90
4.5  产品列表页面 ••••••••••••••••••••••••••••••••••98
4.6  产品详细信息页面•••••••••••••••••••••••••105
4.7  登录对话框 ••••••••••••••••••••••••••••••••••••113
4.8  用户注册对话框•••••••••••••••••••••••••••••118
4.9  购物车对话框 ••••••••••••••••••••••••••••••••123
4.10  结算页面 ••••••••••••••••••••••••••••••••••••••126
4.11  为产品添加评论功能•••••••••••••••••••133
4.12  本章小结 ••••••••••••••••••••••••••••••••••••••139

第二部分   Store 和 Direct
第 5 章   在.NET 中使用 Ext.Direct ••••••••••••••••••••••••••••142
5.1  路由器包的内容•••••••••••••••••••••••••••••142
5.2  DIY 一个 Ext.Direct 实例 ••••••••••••••152
5.3  NewtonSoft.JSON•••••••••••••••••••••••••••155
5.3.1  JSON 的序列化和反序
列化••••••••••••••••••••••••••••••••••••••••••155
5.3.2  LINQ to JSON •••••••••••••••••••••••••158
5.3.3  JSON 文本的输出•••••••••••••••••••162
5.4  本章小结 ••••••••••••••••••••••••••••••••••••••••163
第 6 章   在 Java 中使用 Ext.Direct•••••••••••••••••••••••••••••164
6.1  在 Java 平台上配置 Ext.Direct•••••••164
6.1.1  下载 directjngine••••••••••••••••••••••164
6.1.2  配置主控 servlet ••••••••••••••••••••••165
6.1.3  配置客户端 •••••••••••••••••••••••••••••170
6.1.4  编写 JavaScript 调用 远程方法•••••••••••••••••••••••••••••••••172
6.2  为 Ext.Direct 自定义远程方法•••••••••173
6.3  Ext.Direct 中的高级应用••••••••••••••• 178
6.3.1  批量请求和批量响应••••••••••••• 178
6.3.2  在 tree 中使用 Ext.Direct •••••••• 181
6.3.3  为 grid 设置 DirectStore•••••••••• 183
6.3.4  在 form 中使用 Ext.Direct 加载数据 ••••••••••••••••••••••••••••••••• 185
6.3.5  在 form 中使用 Ext.Direct 提交数据••••••••••••••••••••••••••••••••• 187
6.3.6  使用 polling 方式进行轮询•••• 189
6.4  本章小结•••••••••••••••••••••••••••••••••••••••• 191
第 7 章   Store •••••••••••••••••••••••••••••••••••••• 192
7.1  Store 的结构••••••••••••••••••••••••••••••••••• 192
7.2  Ext.data.Field•••••••••••••••••••••••••••••••••• 197
7.3  Ext.data.Record•••••••••••••••••••••••••••••• 198
7.4  ArrayReader、JsonReader 和 XmlReader••••••••••••••••••••••••••••••••••••• 199
7.4.1  JsonReader •••••••••••••••••••••••••••••• 200
7.4.2  ArrayReader•••••••••••••••••••••••••••• 200
7.4.3  XmlReader •••••••••••••••••••••••••••••• 201
7.5  Store 的加载数据••••••••••••••••••••••••••• 201
7.6  Store 的数据操作••••••••••••••••••••••••••• 203
7.6.1  添加数据••••••••••••••••••••••••••••••••• 203
7.6.2  删除数据••••••••••••••••••••••••••••••••• 203
7.6.3  搜索、定位和统计••••••••••••••••• 203
7.6.4  更新数据••••••••••••••••••••••••••••••••• 206
7.6.5  排序 •••••••••••••••••••••••••••••••••••••••• 207
7.7  DataProxy••••••••••••••••••••••••••••••••••••••• 208
7.8  DirectStore ••••••••••••••••••••••••••••••••••••• 209
7.9  DataWriter•••••••••••••••••••••••••••••••••••••• 212
7.10  Ext.data.Api•••••••••••••••••••••••••••••••••• 212
7.11  本章小结•••••••••••••••••••••••••••••••••••••• 213
第三部分   Ext-UI
第 8 章   Ext 用户界面控件••••••••••••••216
8.1  布局••••••••••••••••••••••••••••••••••••••••••••••••216
8.1.1  在 FormPanel 中使用 HBoxLayout 进行布局••••••••••••216
8.1.2  在 FormPanel 中使用 HBoxLayout 和 VBoxLayout 进行布局•••••••••••••••••••••••••••••••••219
8.1.3  Panel 的 body 的样式范围•••••••••••••••••••••••••••••••••••••••••224
8.2  Form 表单组件•••••••••••••••••••••••••••••••226
8.2.1  DisplayField 控件••••••••••••••••••••226
8.2.2  在 FormPanel 中使用TabPanel ••••••••••••••••••••••••••••••••••229
8.2.3  DirectLoad 与 DirectSubmit ••••••••••••••••••••••••••••232
8.2.4  使用 DirectSubmit 上传文件•••••••••••••••••••••••••••••••••••••••••235
8.3  Grid 组件••••••••••••••••••••••••••••••••••••••••238
8.3.1  一个结合 DataWrite 和 RowEditor 的 Grid 示例••••••••••238
8.3.2  在 CRUD 操作中 restful 的 设置以及使用 Ext.Direct 的问题•••••••••••••••••••••••••••••••••••••••••247
8.4  ListView 控件•••••••••••••••••••••••••••••••••248
8.5  本章小结 ••••••••••••••••••••••••••••••••••••••••251
第四部分   Ext  扩展和 Ext 插件
第 9 章   Ext  扩展 •••••••••••••••••••••••••••••••254
9.1  利用 Ext.extend 实现继承••••••••••••••254
9.2  与 Ext 扩展相关的预备知识••••••••• 256
9.2.1  定义命名空间••••••••••••••••••••••••• 256
9.2.2  重写构造函数••••••••••••••••••••••••• 257
9.2.3  继承组件的一些准备••••••••••••• 257
9.2.4  常用的辅助函数••••••••••••••••••••• 258
9.2.5  使用 xtype••••••••••••••••••••••••••••••• 258
9.3  实现一个功能完整的增、删、查、改表格控件 ••••••••••••••••••••••••••• 259
9.3.1  扩展 GridPanel •••••••••••••••••••••••• 259
9.3.2  配置列模型••••••••••••••••••••••••••••• 259
9.3.3  配置显示数据••••••••••••••••••••••••• 260
9.3.4  点缀 EasyGrid••••••••••••••••••••••••• 261
9.3.5  实现添加一条记录的功能••••••••• 262
9.3.6  实现修改一条记录的功能••••••••• 264
9.3.7  实现删除一条记录的功能••••••••• 266
9.4  从头实现  Ext 扩展•••••••••••••••••••••••• 270
9.5  本章小结•••••••••••••••••••••••••••••••••••••••• 274
第 10 章   Ext 插件 ••••••••••••••••••••••••••••• 275
10.1  插件的用法•••••••••••••••••••••••••••••••••• 275
10.2  标签页右键菜单TabCloseMenu••••••••••••••••••••••••••••• 276
10.3  面板最大化 MaximizeTool •••••••••• 278
10.4  分页设置 PageSizePlugin •••••••••••• 282
10.5  行数据扩展 RowExpander••••••••••• 284
10.6  本章小结•••••••••••••••••••••••••••••••••••••• 290
第五部分   调试
第 11 章   调试•••••••••••••••••••••••••••••••••••••• 292
11.1  测试 Ext.Element 的功能••••••••••••• 292
11.1.1  获取 Ext.Element 实例•••••••••• 292
11.1.2  测试 CSS 样式操作 •••••••••••••• 294
11.1.3  测试 DOM 操作 ••••••••••••••••••••296
11.1.4  测试 DOM 查询与遍历•••••••••300
11.1.5  测试事件处理••••••••••••••••••••••••302
11.2  结合 DataWrite 和 RowEditor
的 Grid 的调试过程••••••••••••••••••••••303
11.3  本章小结 ••••••••••••••••••••••••••••••••••••••306
第六部分   实例
第 12 章   单页面应用实例系统分析 •••••••••••••••••••••••••••308
12.1  系统分析 ••••••••••••••••••••••••••••••••••••••308
12.2  系统设计 ••••••••••••••••••••••••••••••••••••••308
12.2.1  单页面应用设计的难点••••••••308
12.2.2  开发与运行环境••••••••••••••••••••309
12.2.3  数据库设计 •••••••••••••••••••••••••••309
12.3  各个模块的详细功能说明 •••••••••••311
12.3.1  登录页面 •••••••••••••••••••••••••••••••311
12.3.2  主页面•••••••••••••••••••••••••••••••••••311
12.3.3  角色管理 •••••••••••••••••••••••••••••••311
12.3.4  用户管理 •••••••••••••••••••••••••••••••312
12.3.5  进仓管理 •••••••••••••••••••••••••••••••312
12.3.6  出仓管理 •••••••••••••••••••••••••••••••313
12.3.7  产品管理 •••••••••••••••••••••••••••••••313
12.3.8  库存统计 •••••••••••••••••••••••••••••••314
12.3.9  修改密码 •••••••••••••••••••••••••••••••314
12.4  本章小结 ••••••••••••••••••••••••••••••••••••••314
第 13 章   单页面应用实例—.NET 语言实现 •••••••••••••••••315
13.1  创建应用并设置开发环境 •••••••••••315
13.2  自定义 Membership 提供程序••••••••••••••••••••••••••••••••••••••••• 317
13.3  登录页•••••••••••••••••••••••••••••••••••••••••• 319
13.4  主页面•••••••••••••••••••••••••••••••••••••••••• 324
13.5  Ext.Direct 的 API 句柄 •••••••••••••••• 329
13.6  修改密码对话框 •••••••••••••••••••••••••• 330
13.7  角色管理模块•••••••••••••••••••••••••••••• 333
13.8  用户管理•••••••••••••••••••••••••••••••••••••• 345
13.9  产品管理•••••••••••••••••••••••••••••••••••••• 356
13.10  进仓管理•••••••••••••••••••••••••••••••••••• 367
13.11  出仓管理•••••••••••••••••••••••••••••••••••• 388
13.12  库存统计•••••••••••••••••••••••••••••••••••• 403
13.13  退出页•••••••••••••••••••••••••••••••••••••••• 407
13.14  权限设置•••••••••••••••••••••••••••••••••••• 408
13.15  本章小结•••••••••••••••••••••••••••••••••••• 409
第 14 章   单页面应用实例——Java 语言实现•••••••••••••••• 410
14.1  技术选型•••••••••••••••••••••••••••••••••••••• 410
14.2  搭建开发环境•••••••••••••••••••••••••••••• 411
14.3  配置 Ext.Direct••••••••••••••••••••••••••••• 413
14.4  用户登录页面•••••••••••••••••••••••••••••• 417
14.5  系统主页面与动态菜单 •••••••••••••• 421
14.6  用户管理模块•••••••••••••••••••••••••••••• 427
14.7  角色管理模块•••••••••••••••••••••••••••••• 439
14.8  产品管理模块•••••••••••••••••••••••••••••• 447
14.9  进仓管理模块•••••••••••••••••••••••••••••• 450
14.10  出仓管理模块•••••••••••••••••••••••••••• 460
14.11  库存统计模块•••••••••••••••••••••••••••• 474
14.12  用户修改密码窗口 •••••••••••••••••••• 479
14.13  用户注销•••••••••••••••••••••••••••••••••••• 482
14.14  本章小结•••••••••••••••••••••••••••••••••••• 483
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Ext JS高级程序设计
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入HTML5应用开发
目录
HTML5 Geolocation
前言 　 3
第1章　 路在何方　　9
1.1　 地理定位的历史　　11
1.1.1　 公元前的地理定位　　11
1.1.2　 探险技术　　11
1.1.3　 20世纪的定位　　13
1.2　 GPS的民用化　　14
1.3　 今天的地理定位　　15
1.4　 基本知识　　15
1.5　 定位方法　　16
1.5.1　 GPS　　17
1.5.2　 IP地址　　18
1.5.3　 GSM/CDMACellID　　19
1.5.4　 Wi-Fi和蓝牙的MAC地址　　20
1.6　 位置与基于位置的服务　　20
1.7　 今天的地理定位　　21
1.7.1　 手机应用　　21
1.7.2　 增强现实应用　　24
第2章　 地理定位：不仅是经纬度　　27
2.1　 坐标系统　　29
2.2　 大地测量系统与基准点　　32
2.2.1　 地球的形状　　32
2.2.2　 公共基准　　33
2.2.3　 地图投影　　35
2.3　 高度、路线与速度　　35
2.3.1　 大地高度　　36
2.3.2　 路线　　37
2.3.3　 速度　　37
2.4　 精确度　　38
第3章　 地理定位API编程　　39
3.1　 W3CGeolocationAPI　　41
3.1.1　 当前的API支持情况　　41
3.1.2　 其他浏览器的解决方案　　42
3.2　 功能更完备的W3CGeolocationAPI　　44
3.3　 Geolocation对象　　45
3.4　 取得用户位置　　46
3.4.1　 PositionOptions　　46
3.4.2　 缓存的位置信息　　47
3.5　 更新用户位置　　48
3.5.1　 不需要轮询　　49
3.5.2　 清除监视操作　　49
3.6　 处理成功的请求　　50
3.6.1　 Position对象　　50
3.6.2　 Coordinates对象　　50
3.7　 处理请求返回的错误　　53
3.8　 隐私问题　　55
第4章　 地理定位和地图API　　57
4.1　 Google地图示例　　59
4.1.1　 GoogleMapsAPI简介　　59
4.1.2　 向Google地图中添加地理定位　　63
4.2　 ArcGISJavaScriptAPI的例子　　70
4.2.1　 ArcGISJavaScriptAPI简介　　70
4.2.2　 向Esri地图中添加地理定位　　73
第5章　 保存地理信息　　81
5.1　 KML　　83
5.2　 Shapefile　　86
5.3　 数据库　　89
5.3.1　 SDE　　89
5.3.2　 PostGIS　　90
5.3.3　 MySQL　　90
第6章　 基于地理定位开发应用　　93
6.1　 地理营销　　96
6.1.1　 特价与新品　　96
6.1.2　 众包　　96
6.1.3　 特殊化　　97
6.2　 地理社交　　98
6.2.1　 持续增长　　98
6.2.2　 自动签到　　99
6.2.3　 双向数据　　99
6.3　 地理标签　　100
6.3.1　 数字媒体与地理标签　　100
6.3.2　 隐私与地理标签　　100
6.4　 地理应用　　101
6.4.1　 安全/跟踪　　101
6.4.2　 打车　　101
6.4.3　 搜索　　102
6.4.4　 移动商务　　102
6.4.5　 其他应用　　102
6.5　 HTML5与地理定位　　102
6.5.1　 辅助LBS的Web应用　　103
6.5.2　 基于Web的LBS　　110
HTML5:等轴实时游戏开发
前言　 113
第1章　 图形基础：画布与精灵　　119
1.1　 使用canvas对象　　121
1.2　 创建平滑的动画　　129
1.3　 使用精灵　　133
1.4　 操作像素　　138
1.5　 为图像选择渲染方法　　149
第2章　 理解等轴游戏　　163
第3章　 游戏界面设计　　181
3.1　 Web游戏中的GUI设计和交互　　183
3.2　 实现GUI　　185
第4章　 HTML5声音及处理优化　　201
4.1　 通过audio元素添加声音　　203
4.2　 用WebWorkersAPI执行大计算量任务　　213
4.3　 本地存储和会话存储　　221
第5章　 推向市场　　227
5.1　 预防作弊及服务器端工作　　229
5.2　 通往最终游戏的路　　235
5.3　 对游戏作最后修饰　　248
5.4　 使用Facebook添加社交功能　　254
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入HTML5应用开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Ajax实战实例详解
第一部分 ajax基础
第1章 拥抱ajax
1.1 ajax，一种颠覆性的技术
1.1.1 重新定义用户的工作流程
1.1.2 重新定义web应用的架构
1.2 ajax快速入门
1.2.1 xmlhttprequest简介
1.2.2 实例化xmlhttprequest
1.2.3 发送请求
1.2.4 处理响应
1.2.5 xmlhttprequest的其他方法和属性
1.3 使用框架简化ajax
1.3.1 用prototype库中的ajax.request对象创建请求
1.3.2 简化ajax响应
1.4 总结
第2章 ajax的通信方式
2.1 在服务器端生成javascript
2.1.1 执行由服务器生成的代码
2.1.2 遵循代码生成的实践准则
2.2 json简介
.　　　2.2.1 在服务器上生成json
2.2.2 使用json往返传输数据
2.3 在ajax中使用xml和xslt
2.3.1 解析服务器生成的xml
2.3.2 用xslt和xpath来更好地处理xml
2.4 在web服务中使用ajax
2.5 总结
第3章 面向对象的javascript与prototype库
3.1 面向对象的javascript
3.1.1 对象的基本原理
3.1.2 函数是一等公民
3.1.3 对象构造器和方法
3.1.4 编写javascript类：一个按钮
3.2 prototype程序库
3.2.1 常用的函数和扩展
3.2.2 对数组的扩展
3.2.3 hash类
3.2.4 给函数绑定上下文对象
3.2.5 面向对象的prototype
3.2.6 用prototype重写button类
3.3 总结
第4章 ajax开源工具集
4.1 dojo工具包
4.1.1 用dojo进行异步请求
4.1.2 用dojo自动对表单进行编组
4.2 prototype
4.2.1 prototype中的异步请求
4.2.2 用prototype进行自动更新
4.2.3 用prototype进行定期更新
4.3 jquery
4.3.1 jquery基础
4.3.2 用jquery进行异步加载
4.3.3 用jquery获取动态数据
4.4 dwr
4.5 总结
第二部分 ajax最佳实践
第5章 事件处理
5.1 事件处理模型
5.1.1 基本的事件处理注册
5.1.2 高级事件处理
5.2 event对象与事件传播机制
5.2.1 event对象
5.2.2 事件的传播
5.3 使用prototype进行事件处理
5.4 事件类型
5.4.1 鼠标事件
5.4.2 键盘事件
5.4.3 change事件
5.4.4 页面事件
5.5 事件处理实践
5.5.1 在服务端验证文本字段
5.5.2 无需页面重新加载的表单元素提交方式
5.5.3 只提交发生改变的元素
5.6 总结
第6章 表单验证与提交
6.1 客户端表单验证
6.1.1 在客户端进行验证
6.1.2 即时验证
6.1.3 跨字段验证
6.2 投递数据
6.2.1 post请求剖析
6.2.2 将数据投递到服务器
6.2.3 将表单数据投递到服务器
6.2.4 检测表单数据变化
6.3 总结
第7章 内容导航
7.1 网站导航原理
7.1.1 大海捞“针”
7.1.2 创造更好的“针”探
7.1.3 导航和ajax
7.2 传统的web导航
7.2.1 一个简单的导航菜单
7.2.2 dhtml菜单
7.3 借鉴桌面应用的导航设施
7.3.1 使用qooxdoo库实现tab组件
7.3.2 qooxdoo工具栏和窗口
7.3.3 qooxdoo树组件
7.4 桌面应用和web应用的折中
7.4.1 openrico库的accordion控件
7.4.2 创建html友好的树控件
7.5 总结
第8章 处理后退、刷新和撤销
8.1 禁止用户访问浏览器的导航控件
8.1.1 移除浏览器导航工具栏
8.1.2 捕捉快捷键
8.1.3 禁止右键弹出上下文菜单
8.1.4 阻止用户导航历史记录或刷新页面
8.2 与浏览器导航控件协作
8.2.1 使用javascript内建的history对象
8.2.2 使用hash对象实现书签
8.2.3 rsh框架介绍
8.2.4 使用rsh框架维护客户端状态
8.2.5 使用rsh在服务端维护应用程序状态
8.3 处理撤销操作
8.3.1 何时提供可撤销功能
8.3.2 实现一个可撤销/恢复操作栈
8.3.3 扩展撤销栈以支持更复杂的用户操作
8.4 总结
第9章 拖放
9.1 支持拖放的javascript框架
9.2 ajax应用中的拖放
9.2.1 支持拖放的ajax购物车示例
9.2.2 拖放列表中的数据操纵
9.2.3 使用icefaces创建ajax购物车
9.3 总结
第10章 对用户友好一点
10.1 与延迟作斗争
10.1.1 以反馈来应对等待
10.1.2 显示进度
10.1.3 ajax请求超时
10.1.4 处理多次点击
10.2 预防和检测输入错误
10.2.1 主动显示上下文帮助
10.2.2 对表单输入项进行有效性验证
10.3 维护焦点和分层顺序
10.3.1 维护焦点顺序
10.3.2 管理堆叠顺序
10.4 总结
第11章 状态管理和缓存
11.1 客户端状态的维持
11.2 服务器数据缓存
11.2.1 java类的数据的交换
11.2.2 预取
11.3 客户端状态的持久化
11.3.1 以json形式存储和取回用户状态
11.3.2 通过amass保存json字符串
11.4 总结
第12章 开放式web api和ajax
12.1 yahoo!开发者网络
12.1.1 yahoo!地图
12.1.2 跨服务器代理
12.1.3 yahoo! maps geocoding
12.1.4 yahoo!交通
12.2 google搜索api
12.3 flickr图片分享
12.3.1 flickr用户内部标识
12.3.2 flickr图片和缩略图
12.4 稍等！据说，还有很多
12.4.1 amazon服务
12.4.2 ebay服务
12.4.3 mapquest
12.4.4 noaa/国家气象服务
12.4.5 更多web服务接口
12.5 总结
第13章 使用ajax进行混搭
13.1 trip-o-matic应用简介
13.1.1 应用的目的
13.1.2 应用概览和需求
13.2 trip-o-matic的数据文件
13.2.1 我们应该采用什么格式
13.2.2 旅行数据格式
13.2.3 设置flickr照片集
13.3 tripomaticdigester类
13.3.1 依赖性检查
13.3.2 tripomaticdigester的构造器
13.3.3 解读旅行数据
13.3.4 加载经典信息
13.3.5 收集元素的文本内容
13.4 tripomatic应用类
13.4.1 tripomatic类和构造器
13.4.2 创建内容元素
13.4.3 填充旅行数据
13.4.4 显示地图
13.4.5 加载缩略图
13.4.6 显示照片
13.5 trip-o-matic应用页面
13.5.1 trip-o-matic的html文档
13.5.2 样式之旅
13.6 总结
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Ajax实战实例详解
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>前端函数式攻城指南
第1章  函数式JavaScript  1
1.1  JavaScript也是函数式语言吗  1
1.1.1  编程范式  1
1.1.2  JavaScript的函数式支持  3
1.2  作为函数式语言，JavaScript还差些什么  10
1.2.1  不可变数据结构  11
1.2.2  惰性求值  11
1.2.3  函数组合  12
1.2.4  尾递归优化  13
1.3  Underscore你错了  14
1.3.1  跟大家都不一样的 map 函数  14
1.3.2  ClojureScript  16
1.3.3  Mori  17
1.4  小结  18
第2章  集合  19
2.1  集合的使用  20
2.1.1  向量（vector）  20
2.1.2  Map  23
2.1.3  函数组合子  24
2.2  持久性数据结构  27
2.2.1  向量的持久性数据结构  28
2.2.2  最后一片叶子不完整  31
2.2.3  所有叶子完整且叶子个数不大于完全树的叶子个数  32
2.2.4  所有叶子完整且叶子个数大于完全树的叶子个数  34
2.3  不可变性  35
2.3.1  致命魔术  36
2.3.2  引用透明性  38
2.3.3  函数式React  40
2.3.4  线程不安全  42
2.4  惰性序列  44
2.4.1  改良奥利奥吃法  44
2.4.2  惰性求值与及早求值  46
2.4.3  惰性求值的实现  48
2.5  小结  50
第3章  递归  51
3.1  不可变性与递归  51
3.1.1  真的需要循环吗  52
3.1.2  递归还是循环  54
3.2  柯里悖论  55
3.2.1  Y组合子  57
3.2.2  栈是多么容易爆  60
3.3  尾递归优化  62
3.4  蹦跳乐园（Trampoline）  64
3.4.1  有穷状态机（DFA）  65
3.4.2  Trampoline  67
3.5  小结  69
第4章  函数组合  70
4.1  Underscore到底做错了什么  70
4.1.1  自由（Free）变量与约束（Bound）变量  72
4.1.2  闭包  74
4.2  柯里化有什么用  75
4.3  Transducer  78
4.3.1  Reducer  79
4.3.2  来看看更好更快的解法  79
4.3.3  Reducer  80
4.3.4  Reducible  81
4.3.5  Transducer详解  82
4.3.6  跟柯里化有什么区别  83
4.4  组合与管道  84
4.4.1  管道（Pipeline）  84
4.4.2  组合与管道  86
4.4.3  管道函数  87
4.5  小结  87
第5章  Macro宏  89
5.1  什么是REPL  89
5.1.1  宏扩展器（Macro Expander）  90
5.1.2  那么前端怎么办  92
5.2  为什么要语法糖  93
5.2.1  只是为了语法漂亮吗  94
5.3  Sweet.js  94
5.3.1  Rule Macro  95
5.3.2  Case Macro  97
5.4  Infix Macro 和 Operator  104
5.4.1  Infix Macro  104
5.4.2  自定义操作符  105
5.5  小结  106
第6章  模式匹配  107
6.1  Destructure  107
6.1.1  对象  109
6.1.2  数组  109
6.1.3  函数  109
6.2  Arity 函数  110
6.3  Fizz Buzz  111
6.3.1  字面匹配（Literal Matching）  111
6.3.2  绑定  113
6.3.3  Vector与Map匹配  113
6.3.4  Guard  114
6.3.5  Sparkler  114
6.4  代数数据类型（ADT）  116
6.5  小结  118
第7章  Monadic编程  119
7.1  链式调用  119
7.1.1  Promise  120
7.1.2  高阶Promise  122
7.2  Monad  123
7.2.1  函子（Functor）  123
7.2.2  Applicative Functor  126
7.2.3  含幺半群（Monoid）  130
7.2.4  Monad就是容器界的管道  132
7.2.5  Monad就是自函子范畴上的一个幺半群  136
7.3  走钢丝  139
7.3.1  用Monad表示薛定谔猫  139
7.3.2  皮尔斯走钢丝  140
7.4  Monad在JavaScript中的应用  143
7.4.1  Promise版本的走钢丝  144
7.4.2  When  144
7.5  Reactive编程  146
7.5.1  流（Stream）  146
7.5.2  Functor  147
7.5.3  Applicative  147
7.5.4  Monad  148
7.5.5  一个“简单”的Reactive实例  149
7.6  小结  153
第8章  并发编程  154
8.1  什么是并发  154
8.1.1  异步与多线程  155
8.1.2  JavaScript的并发模型  157
8.2  通信顺序进程（CSP）  160
8.3  使用Generator实现CSP  162
8.3.1  Generator  163
8.3.2  Go Block  163
8.3.3  timeout  164
8.3.4  take <!  165
8.3.5  put >!  165
8.3.6  JavaScript CSP版本的例子  166
8.4  实战 CSP  168
8.4.1  使用移植的core.async  168
8.4.2  使用ES7中的异步函数  169
8.4.3  try catch  170
8.5  小结  173
参考资料  174
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>前端函数式攻城指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Bulletproof Ajax中文版
第1章　什么是ajax
1.1　诠释ajax
1.2　ajax工具包
1.3　小结
第2章　javascript和dom
2.1　javascript
2.2　dom
2.3　小结
第3章　xmlhttprequest
3.1　起源
3.2　创建实例
3.3　发送请求
3.4　接收响应
3.5　汇总
3.6　小结
第4章　数据格式
4.1　xml
4.2　json
4.3　html
4.4　小结
第5章　hijax
5.1　渐进式改进
5.2　分离式javascript
5.3　渐进式改进和ajax
5.4　实战hijax
5.5　虚伪的富客户端
5.6　小结
第6章　ajax的挑战
第7章　ajax与亲和力
第8章　汇总
第9章　ajax的未来
索引
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Bulletproof Ajax中文版
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>ExtJS Web应用程序开发指南
前言第1章  认识ExtJS第2章  开始ExtJS之旅第3章  ExtJS 4.0的基本功能第4章  最常用的表单第5章  面板及布局类第6章  常用工具类与函数第7章  让ExtJS开始响应事件第8章  常见Web框架的ExtJS改造第9章  ExtJS对Ajax的支持第10章  增强型模板第11章  数据模型第12章  Grid组件第13章  Tree组件第14章  ExtJS与服务端框架的整合第15章  主题第16章  Ext.Direct第17章  Draw图形第18章  Chart图表附录A
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>ExtJS Web应用程序开发指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>CoffeeScript程序设计
第一部分 核心CoffeeScript
第1章 从这里开始 2
1.1 CoffeeScript的REPL 2
1.2 浏览器端编译 4
1.3 警告 6
1.4 命令行编译 6
1.5 CoffeeScript命令行界面 7
1.5.1 output标志 7
1.5.2 bare标志 8
1.5.3 print标志 9
1.5.4 watch标志 9
1.5.5 执行CoffeeScript文件 10
1.5.6 其他选项 10
1.6 小结 10
第2章 基础知识 11
2.1 语法 11
2.1.1 有意义的空格 12
2.1.2 function关键字 13
2.1.3 括号 14
2.2 作用域与变量 15
2.2.1 JavaScript中的变量作用域 15
2.2.2 CoffeeScript中的变量作用域 16
2.2.3 匿名封装器函数 17
2.3 插值 19
2.3.1 字符串插值 19
2.3.2 插值字符串 20
2.3.3 文本字符串 22
2.3.4 heredoc 24
2.3.5 注释 25
2.3.6 内联注释 25
2.3.7 块级注释 26
2.4 扩展的正则表达式 26
2.5 小结 27
第3章 控制结构 28
3.1 操作符与别名 28
3.1.1 运算 28
3.1.2 赋值 30
3.1.3 比较 34
3.1.4 字符串 36
3.1.5 与存在相关操作符 37
3.1.6 别名 39
3.1.7 is与isnt别名 40
3.1.8 not别名 41
3.1.9 and与or别名 42
3.1.10 布尔相关的别名 43
3.1.11 @别名 44
3.2 if/unless 45
3.2.1 if语句 46
3.2.2 if/else语句 47
3.2.3 if/else if语句 48
3.2.4 unless语句 50
3.2.5 内联条件语句 52
3.3 switch/case语句 52
3.4 小结 54
第4章 函数与参数 55
4.1 函数基础 57
4.2 参数 59
4.3 默认参数值 61
4.4 splat操作符 63
4.5 小结 67
第5章 集合与迭代 68
5.1 数组 68
5.1.1 检测是否包含 70
5.1.2 交换赋值 71
5.1.3 多重赋值(又称解构赋值) 72
5.2 区间 75
5.2.1 分割数组 78
5.2.2 替换数组值 79
5.2.3 注入数值 80
5.3 对象/散列 81
5.3.1 设置属性/获取属性 85
5.3.2 解构赋值 87
5.4 循环与迭代 89
5.4.1 迭代数组 89
5.4.2 迭代对象 92
5.4.3 while循环 96
5.4.4 until循环 97
5.5 comprehension 98
5.6 do关键字 101
5.7 小结 103
第6章 类 104
6.1 定义类 104
6.2 定义函数 105
6.3 constructor函数 106
6.4 类中的作用域 108
6.5 扩展类 117
6.6 类级函数 124
6.7 原型函数 128
6.8 绑定(?与=) 129
6.9 小结 135
第二部分 CoffeeScript实践
第7章 Cake与Cakefile 138
7.1 从这里开始 138
7.2 创建Cake任务 138
7.3 执行Cake任务 139
7.4 使用选项 140
7.5 调用其他任务 143
7.6 小结 146
第8章 使用Jasmine测试 147
8.1 安装Jasmine 148
8.2 准备Jasmine环境 148
8.3 Jasmine介绍 150
8.4 单元测试 151
8.5 Before与After 156
8.6 自定义匹配器 162
8.7 小结 164
第9章 Node.js介绍 166
9.1 什么是Node.js 166
9.2 安装Node 167
9.3 从这里开始 168
9.4 流化响应 170
9.5 构建CoffeeScript服务器 171
9.6 验收我们的服务器 184
9.7 小结 185
第10章 示例: 待办事宜列表第1部分(服务器端) 186
10.1 安装并设置Express 187
10.2 使用Mongoose建立MongoDB数据库 190
10.3 编写待办事宜API 193
10.4 用Mongoose做查询操作 194
10.4.1 查找所有待办事宜 194
10.4.2 创建新的待办事宜 196
10.4.3 获取、更新以及销毁待办事宜 197
10.4.4 简化控制器 199
10.5 小结 202
第11章 示例: 待办事宜列表第2部分(客户端, 使用jQuery) 203
11.1 用Twitter的Bootstrap来构建HTML 203
11.2 使用jQuery进行交互 206
11.3 给新建待办事宜表单添加功能 207
11.4 列举现有的待办事宜 212
11.5 更新待办事宜 212
11.6 删除待办事宜 215
11.7 小结 216
第12章 示例: 待办事宜列表第3部分(客户端, 使用Backbone.js) 217
12.1 什么是Backbone.js 217
12.2 配置Backbone.js 218
12.3 编写Todo模型与集合 221
12.4 使用视图来罗列待办事宜 224
12.5 创建新的待办事宜 226
12.6 每个待办事宜一个视图 229
12.6.1 从视图层更新和校验模型 230
12.6.2 校验 232
12.7 从视图删除模型 233
12.8 小结 234
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>CoffeeScript程序设计
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入浅出PhoneGap
目 　 　录
第1章 　概述　　1
1.1 　PhoneGap概述　　1
1.1.1 　PhoneGap是什么　　3
1.1.2 　PhoneGap的由来　　4
1.1.3 　PhoneGap现状　　5
1.1.4 　PhoneGap的优缺点　　7
1.1.5 　PhoneGap API 简介　　10
1.2 　HTML5简介　　12
1.2.1 　HTML5发展史　　12
1.2.2 　HTML5的新功能　　12
1.3 　相关技术　　13
1.3.1 　Titanium　　13
1.3.2 　Adobe AIR　　13
1.3.3 　Corona　　14
1.3.4 　AppMobi　　15
1.3.5 　JavaScript移动UI框架介绍　　15
1.4 　小结　　16
第2章 　基于PhoneGap快速开发移动Web应用　　17
2.1 　PhoneGap构成　　17
2.2 　基于PhoneGap移动本地应用开发周期　　18
2.3 　PhoneGap发布包　　19
2.4 　Android系统下快速开发　　19
2.4.1 　环境准备与配置　　19
2.4.2 　在Android平台上创建基于PhoneGap的HelloWorld应用　　22
2.5 　iOS系统下快速开发　　32
2.5.1 　环境准备与配置　　32
2.5.2 　在iOS平台上创建基于PhoneGap的HelloWorld应用　　34
2.6 　Windows Phone系统下快速开发　　39
2.6.1 　环境准备与配置　　39
2.6.2　　在Windows Phone平台上创建基于PhoneGap的HelloWorld应用　　40
2.7 　PhoneGap Build　　43
第3章 　PhoneGap与移动Web应用开发框架　　46
3.1 　jQuery Mobile+Backbone.js+Underscore.js　　46
3.1.1 　jQuery Mobile介绍　　46
3.1.2 　Backbone.js和Underscore.js介绍　　48
3.1.3　　使用jQuery Mobile、Backbone.js和Underscore.js构建MiniNote原型　　52
3.2 　Sencha Touch　　60
3.2.1 　Sencha Touch介绍　　60
3.2.2　　使用Sencha Touch构建MiniNote原型　　68
3.3 　Dojo Mobile　　79
3.3.1 　Dojo Mobile介绍　　81
3.3.2　　利用Dojo Mobile构建MiniNote原型　　86
第4章 　PhoneGap事件机制　　90
4.1 　注册事件监听器　　90
4.2 　PhoneGap特有事件　　91
4.2.1 　deviceready　　91
4.2.2 　backbutton　　93
4.2.3 　pause和resume　　95
4.2.4 　searchbutton　　97
4.2.5 　online和offline　　97
4.2.6 　menubutton　　97
4.2.7　　batterycritical、batterylow和batterystatus　　99
4.2.8 　startcallbutton和endcallbutton　　102
4.2.9 　volumedownbutton和volumeupbutton　　102
第5章 　PhoneGap的应用、通知、设备与网络连接API　　104
5.1 　应用API　　104
5.1.1 　PhoneGap白名单安全机制　　104
5.1.2 　主要对象阐述　　106
5.1.3 　相关业务操作　　106
5.2 　通知API　　107
5.2.1 　主要对象阐述　　108
5.2.2 　相关业务操作　　108
5.3 　设备API　　113
5.3.1 　主要对象阐述　　113
5.3.2 　相关业务操作　　113
5.4 　网络连接API　　114
第6章 　PhoneGap的加速计API　　117
6.1 　加速计原理介绍　　117
6.2 　加速计应用场景和实例　　118
6.3 　主要对象阐述　　120
6.4 　相关业务操作　　120
6.4.1 　获取当前设备在x、y和z轴上的加速度　　120
6.4.2 　定期获取设备的加速度信息　　122
6.4.3 　取消定期获取设备的加速度信息　　122
6.4.4 　综合实例　　124
第7章 　PhoneGap的地理位置API　　129
7.1 　地理位置应用场景和实例　　129
7.2 　主要对象阐述　　130
7.2.1 　Position对象　　131
7.2.2 　PositionError对象　　131
7.2.3 　Coordinates对象　　131
7.2.4 　Geolocation选项参数　　132
7.3 　相关业务操作　　132
7.3.1 　获取设备当前的地理位置信息　　132
7.3.2 　定期获取设备的地理位置信息　　134
7.3.3 　取消定期获取设备的地理位置信息　　135
7.3.4 　综合实例　　137
第8章 　PhoneGap的指南针API　　139
8.1 　指南针原理分析　　140
8.2 　指南针应用场景和实例　　140
8.3 　主要对象阐述　　141
8.3.1 　CompassHeading对象　　141
8.3.2 　CompassError对象　　142
8.3.3 　Compass选项参数　　142
8.4 　相关业务操作　　142
8.4.1 　获取设备当前的指南针信息　　143
8.4.2 　定期获取设备的指南针信息　　144
8.4.3 　取消定期获取设备的指南针信息　　144
8.4.4 　综合实例：制作一个指南针应用　　146
第9章 　PhoneGap的照相机API、捕获API和媒体API　　150
9.1 　照相机API　　150
9.1.1 　主要对象阐述　　150
9.1.2 　相关业务操作　　151
9.2 　捕获API　　155
9.2.1 　主要对象阐述　　155
9.2.2 　相关业务操作　　156
9.3 　媒体API　　164
9.3.1 　主要对象阐述　　164
9.3.2 　相关业务操作　　164
第10章 　PhoneGap的通讯录API　　169
10.1 　主要对象阐述　　169
10.1.1 　联系人信息　　169
10.1.2 　联系人名字　　170
10.1.3 　联系人邮件和电话　　170
10.1.4 　联系人的地址　　171
10.1.5 　联系人组织结构　　171
10.2 　相关业务操作　　171
10.2.1 　查找联系人　　171
10.2.2 　创建联系人　　173
10.2.3 　保存联系人　　173
10.2.4 　删除联系人　　173
10.2.5 　复制联系人　　174
10.3 　综合实例　　174
第11章 　PhoneGap的存储API　　184
11.1 　localStorage　　184
11.1.1 　主要对象阐述　　184
11.1.2 　相关业务操作　　184
11.2 　Web SQL　　186
11.2.1 　主要对象阐述　　186
11.2.2 　相关业务操作　　186
11.3 　IndexedDB　　192
11.4 　Lawnchair及其他　　192
11.4.1 　简单应用　　193
11.4.2 　适配器架构　　194
11.4.3 　插件架构　　195
11.4.4 　其他可选存储框架　　197
第12章 　PhoneGap的文件API　　198
12.1 　主要对象阐述　　198
12.2 　相关业务操作　　198
12.2.1 　文件系统的请求与创建　　199
12.2.2 　文件操作　　201
12.2.3 　目录操作　　203
12.2.4 　文件的上传与下载　　205
第13章 　PhoneGap插件与嵌入式特性　　209
13.1 　PhoneGap插件架构　　209
13.1.1 　总体架构图示　　210
13.1.2 　工作原理简介　　210
13.2 　获取PhoneGap插件　　210
13.3 　使用PhoneGap插件　　211
13.3.1 　在Android下使用插件　　211
13.3.2 　在iOS下使用插件　　214
13.3.3 　在Windows Phone下使用插件　　218
13.4 　编写PhoneGap插件　　220
13.4.1 　编写Android插件　　221
13.4.2 　编写iOS插件　　227
13.4.3 　编写Windows Phone插件　　232
13.5 　PhoneGap的嵌入式特性　　236
13.5.1 　将PhoneGap嵌入iOS应用　　236
13.5.2 　将PhoneGap嵌入Android应用　　238
第14章 　PhoneGap第三方插件概览　　242
14.1 　NativeControls插件介绍　　242
14.1.1 　NativeControls插件概览　　242
14.1.2 　NativeControls实例　　243
14.2 　WebGL插件介绍　　245
14.2.1 　何为WebGLGap　　246
14.2.2 　WebGLGap实例　　246
14.3 　BarcodeScanner插件介绍　　247
14.4 　Bluetooth插件介绍　　250
14.5 　SMSPlugin插件介绍　　251
14.6 　Globalization插件介绍　　252
14.7 　Mac插件介绍　　254
14.8 　Windows插件介绍　　256
14.9 　其他常用插件　　257
第15章 　PhoneGap应用调试　　259
15.1 　桌面浏览器调试　　259
15.1.1 　标准的Web页面调试　　259
15.1.2 　基于浏览器插件的设备模拟器调试　　261
15.2 　原生开发环境调试　　265
15.2.1 　Android模拟器和实体机的调试　　265
15.2.2 　iOS模拟器和实体机的调试　　268
15.3 　远程调试　　269
15.3.1　　使用debug.phonegap.com进行远程调试　　269
15.3.2 　本地搭建基于weinre的调试服务器　　272
15.3.3 　基于iOS 5模拟器的远程调试　　275
15.3.4 　基于新浪移动云的远程调试　　277
15.3.5 　Adobe Shadow　　280
第16章 　PhoneGap通信机制的实现原理　　285
16.1 　本地桥接　　285
16.2 　Android上的实现原理　　285
16.2.1 　JavaScript到本地代码的通信　　286
16.2.2 　本地代码到JavaScript的通信　　287
16.2.3 　小结　　293
16.3 　iOS上的实现原理　　293
16.3.1 　JavaScript到本地代码的通信　　293
16.3.2 　本地代码到JavaScript的通信　　294
16.3.3 　小结　　297
16.4 　其他平台的实现　　297
第17章 　综合实例　　298
17.1 　完善对象模型　　298
17.2 　添加数据持久化功能　　299
17.3 　添加日期显示功能　　302
17.4 　添加日期分组功能　　302
17.5 　添加简易的数据备份与恢复功能　　303
17.6 　添加拍照功能　　307
17.7 　编辑笔记功能　　310
17.8 　发送微博功能　　312
17.8.1 　创建微博开放平台应用　　312
17.8.2 　使用微博JS-SDK　　314
17.8.3 　使用微博JS-Widget　　315
17.8.4 　使用微博移动云服务　　317
17.9 　删除笔记功能　　318
17.9.1 　实现手指滑动删除　　318
17.9.2 　实现“摇一摇”提示删除功能　　320
17.10 　添加笔记分类功能　　322
17.11 　更改应用界面　　326
附录A 　PhoneGap相关资源　　327
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入浅出PhoneGap
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精彩绝伦的jQuery
目　 　 录
第一部分　 jQuery与JavaScript简介
第1章　 认识jQuery　 　 2
1.1　 探索JavaScript库　 　 2
1.1.1　 JavaScript库优于传统解决方案之处　 　 2
1.1.2　 主流JavaScript库　 　 3
1.1.3　 jQuery的高明之处　 　 5
第2章　 jQuery入门　 　 13
2.1　 搭建开发环境　 　 13
2.2　 下载jQuery库　 　 21
2.3　 在页面中包含jQuery库　 　 23
2.4　 理解jQuery包装器　 　 25
2.4.1　 在document.ready事件处理方法之外执行代码　 　 26
2.4.2　 防止与其他库发生冲突　 　 27
2.4.3　 用jQuery写JavaScript　 　 28
第二部分　 jQuery基础
第3章　 jQuery核心：选择器、过滤器及CSS　 　 30
3.1　 使用jQuery选择器选取DOM元素　 　 30
3.2　 使用jQuery过滤器过滤元素　 　 42
3.2.1　 基本过滤器及应用　 　 42
3.2.2　 利用:even和:odd过滤器生成条纹表格　 　 43
3.2.3　 为列表或集合中的第一个和最后一个元素设置样式　 　 45
3.2.4　 找出包含特定元素的元素　 　 46
3.2.5　 找出不包含任何子元素或文本的元素　 　 47
3.2.6　 根据元素包含的文本过滤元素　 　 48
3.3　 根据元素的属性在DOM中选取元素　 　 50
3.3.1　 选择包含某个网站地址的链接　 　 50
3.3.2　 选择属性值以某个单词结尾的元素　 　 51
3.3.3　 用jQuery操作HTML和CSS　 　 53
3.3.4　 添加、删除、克隆及替换DOM元素或内容　 　 53
3.3.5　 在jQuery中使用CSS　 　 58
第4章　 事件　 　 60
4.1　 理解jQuery事件　 　 60
4.2　 使用文档和窗口事件　 　 61
4.2.1　 使用.ready()事件检测DOM是否完全加载　 　 61
4.2.2　 使用.load()事件预加载图片　 　 62
4.2.3　 在用户离开页面时显示一条提示消息　 　 64
4.2.4　 使用error事件显示备用图片　 　 65
4.3　 事件代理（委托）入门　 　 66
4.3.1　 使用.bind()绑定事件处理函数　 　 67
4.3.2　 使用.live()绑定事件处理函数　 　 68
4.3.3　 使用.delegate()绑定事件处理函数　 　 68
4.4　 捕获鼠标事件　 　 69
4.4.1　 通过单击鼠标触发添加或删除页面内容的行为　 　 70
4.4.2　 双击事件　 　 73
4.4.3　 利用鼠标悬停行为显示提示内容　 　 73
4.4.4　 利用mousedown和mouseup事件实现添加到购物车功能　 　 77
4.4.5　 实现图片翻转效果　 　 80
4.5　 捕获表单事件　 　 81
4.5.1　 得到焦点时为表单元素添加边框　 　 82
4.5.2　 焦点离开输入框之后显示消息　 　 82
4.6　 捕获键盘事件　 　 82
第5章　 用特效为Web站点添色　 　 86
5.1　 jQuery特效能做些什么　 　 86
5.2　 使用.show()和.hide()方法显示或隐藏元素　 　 88
5.2.1　 结合.show()方法和cookie让一条消息在站点上只显示一次　 　 90
5.2.2　 切换元素的显示状态（显示/隐藏）　 　 92
5.3　 滑动元素　 　 93
5.4　 使用.slideToggle()方法显示替代搜索项　 　 93
5.5　 元素淡入淡出　 　 96
5.6　 使用淡入/淡出效果建立一个简单的图库　 　 96
5.7　 使用延迟创建定时执行的动画　 　 100
5.8　 链式调用多个效果　 　 101
5.9　 使用多种特效创建一个新闻阅读器　 　 102
5.10　 创建高级动画　 　 105
5.10.1　 使用高级动画创建一个带文本说明的图库　 　 106
5.10.2　 使用jQuery Easing插件添加缓动效果　 　 113
第三部分　 jQuery应用
第6章　 改进导航：菜单、标签及折叠选项　 　 116
6.1　 让页面上所有的链接都在新窗口打开　 　 116
6.2　 突出显示导航中的当前选中项　 　 117
6.3　 创建简单的下拉菜单　 　 119
6.4　 创建折叠菜单　 　 125
6.5　 创建标签式内容　 　 131
第7章　 生成可交互的生动表格　 　 138
7.1　 用CSS为表格数据设置样式　 　 138
7.1.1　 使用过滤器创建条纹表格　 　 140
7.1.2　 为表格中的行添加简单悬停效果　 　 141
7.1.3　 为表格中的行添加高级悬停效果　 　 142
7.2　 维护表格数据　 　 143
7.2.1　 在表格第一行或最后一行之后添加一行　 　 145
7.2.2　 使用过滤器选择器删除一行　 　 147
7.2.3　 基于索引在某一行之后增加一行　 　 148
7.2.4　 基于索引删除某行　 　 148
7.2.5　 在包含特定内容的行之后追加消息　 　 148
7.2.6　 基于元素内容删除一行　 　 149
7.3　 使用jQuery设置表格分页　 　 149
7.4　 使用jQuery插件生成高级表格　 　 154
7.4.1　 使用tablesorter插件对表格行排序　 　 155
7.4.2　 修改默认排序顺序　 　 158
7.4.3　 使用Visualize插件为表格数据生成迷人的图表　 　 158
7.4.4　 生成柱状图　 　 159
第8章　 使用jQuery制作高级表单　 　 162
8.1　 页面加载完成后使文本框获得焦点　 　 162
8.2　 启用或禁用表单元素　 　 163
8.3　 突出显示表单当前项　 　 164
8.4　 为文本框设置默认文本　 　 166
8.5　 限制文本输入框的输入字数　 　 169
8.6　 实现复选框的全选功能　 　 170
8.7　 获取文本输入框的值　 　 172
8.8　 得到select元素的值　 　 173
8.9　 简单验证表单中的电子邮件　 　 174
8.10　 复制一个文本框的内容到另一个文本框　 　 178
8.11　 利用插件增强表单功能　 　 181
8.11.1　 为网站整合qTip插件　 　 181
8.11.2　 利用qTip使用title属性创建表单元素的基本提示信息　 　 183
8.11.3　 使用jQuery Validate插件验证表单　 　 184
8.11.4　 为联系人表单添加简单验证　 　 185
8.11.5　 在联系人表单中使用高级验证规则并自定义提示信息　 　 188
第四部分　 jQuery高级技术
第9章　 Ajax与动态数据处理　 　 192
9.1　 Ajax揭秘　 　 192
9.2　 在页面上动态载入内容　 　 194
9.2.1　 载入全部内容　 　 194
9.2.2　 在内容载入失败时处理错误　 　 195
9.2.3　 载入部分内容　 　 198
9.3　 使用GET和POST方法提交表单　 　 199
9.4　 操作XML数据　 　 204
9.5　 解析内部XML数据并生成HTML　 　 207
9.6　 操作JSON数据　 　 209
9.7　 获取JSON数据并生成HTML　 　 211
9.8　 使用Delicious API接收JSONP数据以创建Delicious用户组件　 　 213
9.9　 使用JSONP和Yelp API创建一个Yelp最热点评组件　 　 219
9.9.1　 申请Yelp API Key　 　 220
9.9.2　 使用Yelp API基于电话号码获取点评　 　 222
第10章　 创建及使用jQuery插件　 　 228
10.1　 jQuery插件　 　 228
10.2　 在站点上使用jQuery插件　 　 229
10.3　 在站点上包含jQuery UI　 　 230
10.3.1　 下载jQuery UI　 　 231
10.3.2　 将jQuery UI添加到站点　 　 231
10.3.3　 jQuery UI小部件工作原理　 　 232
10.3.4　 自定义jQuery UI的外观　 　 232
10.3.5　 使用ThemeRoller创建UI主题　 　 234
10.3.6　 使用jQuery UI主题　 　 236
10.3.7　 将jQuery UI组件整合到站点　 　 236
10.4　 整合流行的jQuery插件到站点　 　 244
10.4.1　 jQuery Tools　 　 244
10.4.2　 Fancybox　 　 247
10.5　 编写第一个jQuery插件　 　 249
10.5.1　 筹划一个插件　 　 250
10.5.2　 插件的结构　 　 250
10.5.3　 设定插件选项　 　 251
10.5.4　 创建插件　 　 252
10.6　 如何发布jQuery插件　 　 258
10.6.1　 打包插件以便发布　 　 258
10.6.2　 发布插件　 　 259
第11章　 jQuery在移动Web开发中的应用　 　 260
11.1　 使用jQuery构建移动Web应用　 　 260
11.2　 移动浏览器　 　 261
11.2.1　 CSS3　 　 262
11.2.2　 HTML5　 　 263
11.2.3　 移动开发的必要装备　 　 263
11.2.4　 面向Apple iPhone Safari移动浏览器的开发　 　 265
11.2.5　 面向Google Android的Chrome浏览器的开发　 　 267
11.2.6　 在不同智能手机上显示不同内容　 　 268
11.2.7　 使用jQuery开发移动站点和应用程序　 　 268
11.3　 jQuery Mobile预览版介绍　 　 268
11.4　 移动框架　 　 269
11.4.1　 Appcelerator Titanium框架　 　 269
11.4.2　 jQTouch插件　 　 270
第12章　 jQuery资源　 　 272
12.1　 jQuery的快速成长　 　 272
12.2　 jQuery官方站点　 　 274
12.2.1　 jQuery API文档子站　 　 274
12.2.2　 jQuer教程　 　 275
12.2.3　 jQuery 聚会或讨论会　 　 275
12.2.4　 bug追踪系统　 　 277
12.2.5　 jQuery论坛　 　 277
12.3　 其他Web设计和开发资源　 　 279
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精彩绝伦的jQuery
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>高性能网站建设进阶指南（第二版）
致谢	xiii
前言	xv
第1章  理解Ajax性能	1
权衡	1
优化原则	2
Ajax	4
浏览器	4
哇！	5
JavaScript	6
总结	6
第2章  创建快速响应的Web应用	7
怎样才算足够快	9
测量延迟时间	10
当延迟变得很严重时	12
线程处理	12
确保响应速度	13
Web Workers	14
Gears	14
定时器	16
内存使用对响应时间的影响	17
虚拟内存	18
内存问题的疑难解答	18
总结	19
第3章  拆分初始化负载	21
全部加载	21
通过拆分来节省下载量	22
寻找拆分	23
未定义标识符和竞争状态	24
个案研究：Google日历	25
第4章  无阻塞加载脚本	27
脚本阻塞并行下载	27
让脚本运行得更好	29
XHR Eval	29
XHR注入	31
Script in Iframe	31
Script DOM Element	32
Script Defer	33
document.write Script Tag	33
浏览器忙指示器	33
确保（或避免）按顺序执行	35
汇总结果	36
最佳方案	38
第5章  整合异步脚本	41
代码示例：menu.js	42
竞争状态	44
异步加载脚本时保持执行顺序	45
技术1：硬编码回调	46
技术2：Window Onload	47
技术3：定时器	48
技术4：Script Onload	49
技术5：降级使用script标签	50
多个外部脚本	52
Managed XHR	52
DOM Element和Doc Write	56
综合解决方案	59
单个脚本	59
多个脚本	60
现实互联网中的异步加载	63
Google分析和Dojo	63
YUI Loader	65
第6章  布置行内脚本	69
行内脚本阻塞并行下载	69
把行内脚本移至底部	70
异步启动执行脚本	71
使用script的defer属性	73
保持CSS和JavaScript的执行顺序	73
风险：把行内脚本放置在样式表之后	74
大部分下载都不阻塞行内脚本	74
样式表阻塞行内脚本	75
问题确曾发生	77
第7章  编写高效的JavaScript	79
管理作用域	79
使用局部变量	81
增长作用域链	83
高效的数据存取	85
流控制	88
快速条件判断	89
快速循环	93
字符串优化	99
字符串连接	99
裁剪字符串	100
避免运行时间过长的脚本	102
使用定时器挂起	103
用于挂起的定时器模式	105
总结	107
第8章  可伸缩的Comet	109
Comet工作原理	109
传输技术	111
轮询	111
长轮询	112
永久帧	113
XHR流	115
传输方式的前景	116
跨域	116
在应用程序上的执行效果	118
连接管理	118
测量性能	119
协议	119
总结	120
第9章  超越Gzip压缩	121
这为什么很重要	121
问题的根源	123
快速回顾	123
罪魁祸首	123
流行的乌龟窃听者实例	124
如何帮助这些用户	124
设计目标：最小化未压缩文件的尺寸	125
引导用户	129
对Gzip的支持进行直接探测	130
第10章  图像优化	133
两步实现简单图像优化	134
图像格式	135
背景	135
不同图像格式的特性	137
PNG的更多资料	139
自动无损图像优化	141
优化PNG格式的图像	142
剥离JPEG的元数据	143
将GIF转换成PNG	144
优化GIF动画	144
Smush.it	145
使用渐进JPEG格式来存储大图像	145
Alpha透明：避免使用AlphaImageLoader	146
Alpha透明度的效果	147
AlphaImageLoader	149
AlphaImageLoader的问题	150
渐进增强的PNG8 Alpha透明	151
优化Sprite	153
超级Sprite VS.模块化Sprite	154
高度优化的CSS Sprite	155
其他图像优化方法	155
避免对图像进行缩放	155
优化生成的图像	156
Favicons	157
Apple触摸图标	158
总结	159
第11章  划分主域	161
关键路径	161
谁在划分主域	163
降级到HTTP/1.0	165
域划分的扩展话题	168
IP地址和主机名	168
多少个域	168
如何划分资源	168
新型浏览器	169
第12章  尽早刷新文档的输出	171
刷新文档头部的输出	171
输出缓冲	173
块编码	175
刷新输出和Gzip压缩	176
其他障碍	177
刷新输出时的域阻塞	178
浏览器：最后的障碍	178
不借助PHP进行刷新输出	179
刷新输出问题清单	180
第13章  少用iframe	181
开销最高的DOM元素	181
iframe阻塞onload事件	182
使用iframe并行下载	184
脚本位于iframe之前	184
样式表位于iframe之前	185
样式表位于iframe之后	186
每个主机名的连接	187
iframe中的连接共享	187
跨标签页和窗口的连接共享	188
总结使用iframe的开销	190
第14章  简化CSS选择符	191
选择符的类型	191
ID选择符	192
类选择符	193
类型选择符	193
相邻兄弟选择符	193
子选择符	193
后代选择符	193
通配选择符	194
属性选择符	194
伪类和伪元素	194
高效CSS选择符的关键	194
最右边优先	195
编写高效的CSS选择符	195
CSS选择符性能	197
复杂的选择符影响性能（有时）	197
应避免使用的CSS选择符	200
回流时间	201
在现实中测量CSS选择符	202
附录A  性能工具	205
索引	221
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>高性能网站建设进阶指南（第二版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5游戏开发实战
审校者简介
译者序
前言
第1章　HTML5游戏概述1
1.1　探索HTML5新功能1
1.1.1　Canvas2
1.1.2　音频2
1.1.3　GeoLocation2
1.1.4　WebGL2
1.1.5　WebSocket3
1.1.6　本地存储4
1.1.7　离线应用程序4
1.2　探索CSS3新功能5
1.2.1　CSS3转换5
1.2.2　CSS3变换7
1.2.3　CSS3动画7
1.3　HTML5和CSS3新功能的更多细节8
1.4　创建HTML5游戏的好处8
1.4.1　不需要第三方插件9
1.4.2　不需要插件就能支持iOS设备9
1.4.3　突破常规浏览器游戏限制9
1.4.4　创建HTML5游戏9
1.5　HTML5还能做些什么11
1.5.1　《记忆配对》游戏11
1.5.2　Sinuous11
1.5.3　小行星式书签小程序12
1.5.4　Quake 212
1.5.5　蝌蚪聊天室13
1.5.6　Scrabb.ly13
1.5.7　Aves引擎14
1.6　浏览更多HTML5游戏15
1.7　本书主要涉及哪些游戏15
1.8　总结16
第2章　DOM游戏开发入门17
2.1　准备开发工具18
2.2　为DOM游戏准备HTML文档18
2.2.1　新式HTML5 doctype声明19
2.2.2　页眉和页脚20
2.2.3　JavaScript代码最佳位置20
2.2.4　页面加载完后运行代码20
2.3　设置《乒乓球》游戏元素21
2.3.1　jQuery简述23
2.3.2　jQuery选择器基础知识23
2.3.3　jQuery css函数24
2.3.4　使用jQuery的好处25
2.3.5　使用jQuery操纵DOM游戏元素25
2.3.6　绝对位置的行为26
2.4　获取玩家的键盘输入27
2.4.1　了解按键代码29
2.4.2　让常数更具可读性29
2.4.3　用parseInt函数将字符串转换为数字30
2.4.4　在控制台面板中直接执行JavaScript表达式31
2.4.5　检查控制台窗口32
2.5　支持玩家多键盘同时输入32
2.5.1　更好地声明全局变量34
2.5.2　用setInterval函数创建JavaScript定时器35
2.5.3　理解游戏主循环35
2.6　通过JavaScript间隔移动DOM对象35
2.7　开始碰撞检测37
2.8　动态显示HTML文本41
2.9　总结43
第3章　用CSS3构建《纸牌记忆配对》游戏44
3.1　用CSS3转换和变换模块移动游戏对象44
3.1.1　2D变换函数47
3.1.2　3D变换函数48
3.1.3　用CSS3转换实现样式间过渡49
3.2　创建翻牌效果50
3.2.1　使用jQuery toggleClass函数切换类 52
3.2.2　通过z-index控制重叠元素的可见性53
3.2.3　介绍CSS perspective属性53
3.2.4　介绍背面可见性54
3.3　创建《纸牌记忆配对》游戏55
3.3.1　下载纸牌精灵表图像55
3.3.2　设置游戏开发环境56
3.3.3　使用jQuery复制DOM元素61
3.3.4　使用jQuery的子节点过滤器选择首个子元素61
3.3.5　垂直对齐DOM元素62
3.3.6　通过背景位置来使用CSS精灵62
3.4　给配对游戏添加游戏逻辑63
3.4.1　在CSS转换完后执行代码66
3.4.2　翻牌后延迟代码的执行67
3.4.3　在JavaScript中随机化数组67
3.4.4　通过HTML5自定义数据属性保存内部自定义数据68
3.4.5　用JQuery访问自定义数据属性68
3.4.6　制作其他纸牌游戏70
3.5　在游戏中嵌入Web字体70
3.6　总结73
第4章　用Canvas和绘图API构建《解题》游戏74
4.1　介绍HTML5 Canvas元素75
4.2　在Canvas中绘制圆形75
4.2.1　当Web浏览器不支持Canvas时的反馈信息77
4.2.2　用Canvas的arc函数绘制圆和图形78
4.2.3　把角度转换为弧度78
4.2.4　在Canvas中执行路径绘制的操作82
4.2.5　在切换路径样式时先调用BeginPath82
4.2.6　关闭路径83
4.2.7　将画圆功能封装成函数83
4.2.8　在JavaScript中生成随机数85
4.2.9　保存圆的位置85
4.3　在Canvas中画线87
4.4　通过Canvas中的鼠标事件与绘制对象交互90
4.4.1　在Canvas元素中获取鼠标位置93
4.4.2　在Canvas中检测鼠标事件是否发生在圆上93
4.4.3　游戏主循环95
4.4.4　清除Canvas95
4.5　在Canvas中检测线的交点96
4.6　制作《解题》游戏100
4.6.1　定义关卡数据105
4.6.2　判断是否过关105
4.6.3　显示当前关卡和完成进度105
4.7　总结106
第5章　构建大师级Canvas游戏107
5.1　用渐变色来填充图形108
5.1.1　给渐变添加色标109
5.1.2　填充径向渐变色110
5.2　在Canvas中绘制文本112
5.3　在Canvas中绘制图像116
5.3.1　使用drawImage函数120
5.3.2　装点Canvas游戏121
5.4　在Canvas中播放精灵表动画123
5.5　创建多层Canvas游戏127
5.6　总结132
第６章　给游戏添加声音效果134
6.1　给PLAY按钮添加声音效果135
6.1.1　定义audio元素137
6.1.2　播放声音138
6.1.3　暂停声音138
6.1.4　调整音量大小139
6.1.5　使用jQuery 的hover事件139
6.1.6　创建Ogg格式的音频以支持Mozilla Firefox140
6.1.7　不同Web浏览器所支持的音频格式141
6.2　构建迷你钢琴音乐游戏141
6.2.1　在HTML5游戏中创建场景144
6.2.2　让音乐播放可视化144
6.2.3　为音乐游戏选择正确的歌曲149
6.2.4　存储和提取歌曲关卡数据149
6.2.5　获取游戏的流逝时间150
6.2.6　创建音乐点150
6.2.7　移动音乐点151
6.3　将PLAY按钮与音乐游戏场景链接起来152
6.4　构建键盘驱动的迷你钢琴音乐游戏155
6.4.1　通过按键来击打三条音乐线156
6.4.2　判断按键是否击中音乐点157
6.4.3　通过给定索引将元素从数组中移除158
6.5　给迷你钢琴游戏添加额外的功能159
6.5.1　 根据玩家的表现而调整音乐音量159
6.5.2　从游戏中删除音乐点161
6.5.3　保存最近5个音乐点的成功率计数162
6.5.4　记录音符来得到关卡数据162
6.6　音乐播放完后处理audio事件164
6.7　总结166
第7章　利用本地存储技术保存游戏数据167
7.1　使用HTML5本地存储技术保存数据168
7.1.1　创建游戏结束对话框168
7.1.2　在浏览器中保存成绩171
7.1.3　通过本地存储技术保存和加载数据172
7.1.4　本地存储只保存字符串值173
7.1.5　将本地存储对象看做关联数组173
7.2　在本地存储中保存对象174
7.2.1　在JavaScript中获取当前日期和时间177
7.2.2　使用原生JSON将对象编码成字符串178
7.2.3　从JSON字符串中加载所保存的对象178
7.2.4　在控制台窗口中检测本地存储179
7.3　用一种漂亮的彩带效果来告诉玩家破记录了180
7.4　保存整个游戏的进度183
7.4.1　保存游戏进度183
7.4.2　从本地存储中删除记录186
7.4.3　在JavaScript中复制数组186
7.4.4　恢复游戏进度187
7.5　总结189
第8章　利用WebSocket构建多人 游戏—《我画你猜》190
8.1　初试WebSocket Web应用程序190
8.2　安装WebSocket服务器192
8.2.1　安装Node.JS WebSocket服务器193
8.2.2　创建广播连接数的WebSocket服务器194
8.2.3　初始化WebSocket服务器195
8.2.4　在服务器端监听连接事件195
8.2.5　在服务器端获取已连接的客户端数196
8.2.6　向所有已连接的浏览器广播消息196
8.2.7　创建客户端来连接WebSocket服务器并获取总连接数196
8.2.8　建立WebSocket连接198
8.2.9　WebSocket客户端事件198
8.3　使用WebSocket构建聊天室199
8.3.1　向服务器发送消息199
8.3.2　从客户端发送消息到服务器201
8.3.3　在服务器端接收消息201
8.4　通过在服务端广播接收到的消息来创建聊天室202
8.5　使用Canvas和WebSocket制作共享绘图板205
8.5.1　构建本地绘图板205
8.5.2　广播绘图数据给所有已连接的浏览器208
8.5.3　定义用于在客户端与服务器之间进行通信的数据对象211
8.5.4　将画线数据打包成JSON以便于广播211
8.5.5　再现从其他客户端接收到的画线数据212
8.6　构建多人游戏：《我画你猜》212
8.6.1　控制多人游戏的游戏流程217
8.6.2　在服务器端罗列出所有已连接客户端218
8.6.3　在服务器端发送消息给指定的连接218
8.6.4　改进现有游戏218
8.7　用CSS装点《我画你猜》游戏219
8.8　总结221
第9章　用Box2D和Canvas构建物理类汽车游戏222
9.1　安装Box2d JavaScript库223
9.1.1　用b2World创建新的物理世界对象226
9.1.2　用b2AABB定义物理边界226
9.1.3　给物理世界设置重力226
9.1.4　设置 Box2D忽略休眠物体227
9.2　在物理世界中创建静态地面227
9.2.1　创建物体形状228
9.2.2　创建物理物体228
9.3　在Canvas上绘制物理世界 229
9.4　在物理世界里创建动态的长方形232
9.5　推进物理世界的时间233
9.6　给游戏安装车轮234
9.7　创建物理汽车235
9.8　通过键盘给汽车施加动力237
9.8.1　向物体施加动力238
9.8.2　理解ApplyForce与ApplyImpulse之间的不同点239
9.8.3　给游戏环境添加坡道239
9.9　在Box2D世界检测碰撞240
9.10　重启游戏242
9.11　让游戏支持关卡244
9.12　为Box2D绘制图形轮廓247
9.12.1　使用形状和物体的userData属性250
9.12.2　根据物理物体的状态来绘制每一帧图像250
9.12.3　在Canvas中旋转和翻转图片251
9.13　给游戏添加装饰，让游戏更具趣味性251
9.13.1　用燃料的限制加速256
9.13.2　用CSS3进度条显示剩余燃料256
9.14　总结257
9.14.1　HTML5 游戏引擎258
9.14.2　游戏精灵以及贴图258
9.14.3　声音效果258
附录　突击测验答案259
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5游戏开发实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Backbone.js应用程序开发
《backbone.js应用程序开发》
第1章 概述 1
1.1　什么是mvc 2
1.2　什么是backbone.js 2
1.3　何时需要javascript mvc框架 3
1.4　为何考虑backbone.js 4
1.5　设定预期目标 5
第2章 基本概念 8
2.1　mvc 8
2.1.1　smalltalk-80 mvc 8
2.1.2　mvc应用于web 9
2.1.3　客户端mvc和单页面应用程序 12
2.1.4　客户端mvc：backbone风格 13
2.1.5　实现规范 16
2.2　mvc能带给我们什么 19
2.2.1　深究mvc 19
2.2.2　总结 20
2.2.3　延伸阅读 20
2.3　基本概况 20
2.3.1　backbone.js 20
2.3.2　使用案例 21
第3章 backbone基础 25
3.1　准备开始 25
3.2　模型（model） 26
3.2.1　初始化 27
3.2.2　默认值 27
3.2.3　赋值与取值 28
3.2.4　监听模型变化 30
3.2.5　验证 32
3.3　视图（view） 33
3.3.1　创建视图 33
3.3.2　el是什么 34
3.4　集合（collection） 39
3.4.1　添加和移除模型 40
3.4.2　检索模型 40
3.4.3　事件监听 42
3.4.4　重置和刷新集合 44
3.4.5　underscore实用函数 45
3.4.6　链式api 49
3.5　restful持久化 50
3.5.1　从服务器上获取模型 50
3.5.2　保存模型到服务器 50
3.5.3　从服务器删除模型 51
3.5.4　选项 52
3.6　事件（event） 52
3.6.1　on()、off()和trigger() 53
3.6.2　listento()和stoplistening() 56
3.6.3　事件与视图 57
3.7　路由（router） 58
3.8　backbone同步api 63
3.9　依赖文件 67
3.10　总结 67
第4章 练习1：todos——第一个backbone.js应用程序 68
4.1　静态html 69
4.1.1　html头部和script脚本 69
4.1.2　应用程序html 70
4.1.3　模板 71
4.2　todo模型 72
4.3　todo集合 72
4.4　应用程序视图（appview） 74
4.5　独立的待办项视图（todoview） 79
4.6　程序启动 81
4.7　实战操作 82
4.8　标记完成或删除todo项 84
4.9　todo路由 86
4.10　总结 88
第5章 练习2：book library——第一个restful风格的backbone.js
应用程序 89
5.1　程序建立 89
5.2　界面布局 96
5.2.1　添加模型 96
5.2.2　删除模型 97
5.3　创建后端系统 98
5.3.1　安装node.js、npm、mongodb 98
5.3.2　安装node模块 99
5.3.3　创建简单的web服务器 99
5.3.4　连接到数据库 102
5.4　和服务器通信 108
5.5　总结 113
第6章 backbone扩展 114
6.1　marionettejs（backbone.marionette） 114
6.1.1　boilerplate渲染代码 116
6.1.2　使用marionette.itemview减少boilerplate 117
6.1.3　内存管理 117
6.1.4　区域管理 120
6.1.5　marionette todo应用程序 122
6.1.6　todo应用程序的marionette实现更具可维护性吗？ 132
6.1.7　marionette与灵活性 132
6.1.8　更多特性 134
6.2　thorax 134
6.2.1　hello world 134
6.2.2　嵌入子视图 135
6.2.3　视图助手 136
6.2.4　集合助手 137
6.2.5　自定义html data属性 138
6.2.6　thorax资源 139
6.3　总结 140
第7章 常见问题和解决方案 141
7.1　使用嵌套视图 141
7.1.1　问题 141
7.1.2　解决方案1 141
7.1.3　解决方案2 142
7.1.4　解决方案3 143
7.1.5　解决方案4 143
7.2　在嵌套视图中管理模型 145
7.2.1　问题 145
7.2.2　解决方案 145
7.3　在子视图中渲染父视图 146
7.3.1　问题 146
7.3.2　解决方案 146
7.4　消除视图层级结构 147
7.4.1　问题 147
7.4.2　解决方案 147
7.5　渲染视图层级结构 148
7.5.1　问题 148
7.5.2　解决方案 148
7.6　使用嵌套模型或嵌套集合 149
7.6.1　问题 149
7.6.2　解决方案 149
7.7　更好的模型属性验证 150
7.7.1　问题 150
7.7.2　解决方案 150
7.7.3　backbone.validateall 152
7.7.4　backbone.validation 154
7.7.5　特定表单验证类 155
7.8　避免多个backbone版本的冲突 155
7.8.1　问题 155
7.8.2　解决方案 155
7.9　构建层级模型和层级视图 156
7.9.1　问题 156
7.9.2　解决方案 156
7.9.3　调用重载方法 157
7.9.4　backbone-super 159
7.10　事件聚合器和中介者 159
7.10.1　问题 159
7.10.2　解决方案 160
7.10.3　事件聚合器 160
7.10.4　中介者 161
7.10.5　相似性与差异性 162
7.10.6　关系：何时用，用哪个 163
7.10.7　事件聚合器与中介器一起使用 164
7.10.8　模式语言：语义 165
第8章 模块化开发 166
8.1　使用requirejs和amd组织模型 166
8.1.1　多个脚本文件的可维护性问题 167
8.1.2　需要更好的依赖管理 167
8.1.3　异步模块定义（amd） 168
8.1.4　使用requirejs编写amd模块 168
8.1.5　requirejs入门 170
8.1.6　require.js/backbone示例 172
8.1.7　使用requirejs和text插件将模板保持在外部 176
8.1.8　使用requirejs优化生产环境中的backbone应用 177
8.2　总结 180
第9章 练习3：第一个模块化的backbone/requirejs应用程序 181
9.1　概述 181
9.2　html代码 182
9.3　配置选项 183
9.4　模块化模型、视图、集合 184
9.5　基于路由的模块加载 189
9.5.1　基于json的模块配置 189
9.5.2　模块加载器 190
9.5.3　使用nodejs处理pushstate 191
9.6　另外一种依赖管理方式 192
第10章 对backbone.js请求和集合进行分页 193
10.1　backbone.paginator 194
10.2　paginator.requestpager 195
10.3　paginator.clientpager 199
10.3.1　便利方法 202
10.3.2　实现备注 204
10.3.3　插件 205
10.3.4　引导 206
10.3.5　样式化 207
10.4　总结 208
第11章 backbone boilerplate和grunt-bbb 209
11.1　准备开始 211
11.2　创建新项目 211
11.2.1　index.html 212
11.2.2　config.js 213
11.2.3　main.js 215
11.2.4　app.js 216
11.2.5　创建backbone样板模块 218
11.2.6　router.js 220
11.3　其他有用的工具和项目 221
11.3.1　yeoman 221
11.3.2　backbone devtools 223
11.4　总结 223
第12章 backbone和jquery mobile 224
12.1　使用jquery mobile进行移动应用开发 224
12.1.1　jqmobile渐进部件增强原则 225
12.1.2　理解jquery mobile导航 226
12.2　backbone应用的基础设置（用于jquery mobile） 227
12.3　backbone和jquerymobile的工作流程 230
12.3.1　路由到具体视图页面，继承于basicview 231
12.3.2　移动页面模板的管理 232
12.3.3　dom管理与$.mobile.changepage 234
12.4　在backbone上应用jqm高级技术 237
12.4.1　动态dom脚本 237
12.4.2　拦截jquery mobile事件 239
12.4.3　性能 240
12.4.4　智能的多平台支持管理 241
第13章 jasmine 246
13.1　行为驱动开发 246
13.2　suite、spec以及spie 248
13.3　beforeeach()和aftereach() 252
13.4　共享作用域 254
13.5　准备开始 255
13.6　tdd与backbone 256
13.7　模型 256
13.8　集合 258
13.9　视图 260
13.10　练习 268
13.11　延伸阅读 268
13.12　总结 268
第14章 qunit 269
14.1　准备开始 269
14.2　断言 272
14.2.1　使用test（name, callback）编写基础测试用例 272
14.2.2　比较函数的实际输出和期望输出 273
14.3　为断言添加结构 273
14.3.1　qunit基本模块 273
14.3.2　使用setup()和teardown() 274
14.3.3　使用setup()和teardown()用于初始化和清理工作 274
14.4　断言示例 275
14.5　fixtures 276
14.6　异步代码 279
第15章 sinonjs 281
15.1　sinonjs概述 281
15.1.1　基础spy 282
15.1.2　在现有函数上监听 282
15.1.3　检测接口 282
15.2　stub与mock 284
15.2.1　stub 284
15.2.2　mock 285
15.3　练习 286
15.3.1　模型 286
15.3.2　集合 288
15.3.3　视图 289
15.3.4　app 290
15.4　延伸阅读与资源 291
第16章 结论 293
附录a 延伸学习 295
附录b 资源 313
封面介绍 316
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Backbone.js应用程序开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JSON必知必会
前言　　ix
第1章什么是JSON　　1
1.1　 JSON是一种数据交换格式　　1
1.2　 JSON独立于编程语言　　3
1.3　 专业术语和概念　　4
第2章JSON语法　　7
2.1　 JSON基于JavaScript对象字面量　　7
2.2　 名称-值对　　9
2.3　 正确的JSON语法　　10
2.4　 语法验证　　13
2.5　 JSON文件　　14
2.6　 JSON的媒体类型　　14
2.7　 专业术语和概念　　14
第3章JSON的数据类型　　17
3.1　 数据类型简介　　17
3.2　 JSON中的数据类型　　19
3.3　 JSON中的对象数据类型　　20
3.4　 JSON中的字符串类型　　21
3.5　 JSON中的数字类型　　24
3.6　 JSON中的布尔类型　　24
3.7　 JSON中的null　　类型　　25
3.8　 JSON中的数组类型　　26
3.9　 专业术语和概念　　31
第4章JSON Schema　　33
4.1　 验证的魔力　　34
4.2　 JSONSchema　　简介　　35
4.3　 专业术语和概念　　41
第5章JSON中的安全问题　　43
5.1　 客户端和服务端的关系　　43
5.2　 跨站请求伪造　　45
5.3　 注入攻击　　47
5.3.1　 跨站脚本攻击　　48
5.3.2　 安全漏洞：决策上的失误　　49
5.4　 专业术语和概念　　50
第6章JavaScript中的XMLHttpRequest与Web API　　53
6.1　 Web API　　54
6.2　 JavaScript中的XMLHttpRequest对象　　57
6.3　 混乱的关系与共享的规则　　62
6.3.1　 跨域资源共享　　62
6.3.2　 JSON-P　　63
6.4　 专业术语和概念　　65
第7章JSON与客户端框架　　67
7.1　 jQuery和JSON　　68
7.2　 AngularJS　　71
7.3　 专业术语和概念　　75
第8章JSON与NoSQL　　77
8.1　 CouchDB数据库　　79
8.2　 CouchDB API　　82
8.3　 专业术语和概念　　90
第9章服务端的JSON　　91
9.1　 序列化、反序列化与请求JSON　　92
9.1.1　 ASP.NET　　92
9.1.2　 PHP　　96
9.2　 发送JSON HTTP请求的其他方式　　101
9.2.1　 Ruby on Rails　　101
9.2.2　 Node.js　　102
9.2.3　 Java　　103
9.3　 专业术语和概念　　104
第10章总结　　105
10.1　 作为配置文件的JSON　　105
10.2　 结语　　108
作者简介　　110
封面介绍　　110
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JSON必知必会
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>DOM启蒙
前言
序言
第1章  节点概览
1.1  文档对象模型（Document Object Model，亦称 DOM）是个由JavaScript节点对象组成的层次结构/树
1.2  节点对象类型
1.3  继承自节点对象的子节点对象
1.4  用于与节点打交道的属性与方法
1.5  识别节点的类型与名称
1.6  获取节点的值
1.7  使用 JavaScript 方法来创建元素与文本节点
1.8  使用 JavaScript 字符串创建并向DOM中添加元素与文本节点
1.9  提取DOM树中的部分作为JavaScript字符串
1.10  使用 appendChild() 与 insertBefore() 向DOM中插入节点对象
1.11  使用 removeChild() 与 replaceChild() 来移除与替换节点
1.12  使用 cloneNode() 来复制节点
1.13  理解节点集合（即 NodeList 与 HTMLCollection）
1.14  获取所有直属子节点的列表/集合
1.15  将 NodeList 或者 HTMLCollection 转换成JavaScript 数组
1.16  遍历 DOM 中的节点
1.17  使用 contains() 与 compareDocumentPosition()验证节点在 DOM 树中的位置
1.18  判断两个节点是否相同
第2章  文档节点
2.1  文档节点概览
2.2  HTML 文档属性与方法（包括继承的）
2.3  获取 HTML Document 通用信息（标题、链接、提及者、最后修改时间及兼容模式）
2.4  文档子节点
2.5  document 提供的 <!DOCTYPE>、<html lang="en">、<head>及 <body> 捷径
2.6  使用 document.implementation.hasFeature() 探测 DOM 规范/特性
2.7  获取文档中当前聚焦/激活节点的引用
2.8  判断文档或者文档中任何节点得到焦点
2.9  document.defaultView 是个到顶部/全局对象的捷径
2.10  使用 ownerDocument 从某一元素取得文档的引用
第3章  元素节点
3.1  HTML*Element 对象概览
3.2  HTML*Element 对象属性与方法（包括继承的）
3.3  创建元素
3.4  获取元素的标签名
3.5  获取元素属性与值的列表/集合
3.6  获取、设置及移除元素的属性值
3.7  验证元素是否有某一特定属性
3.8  获取类属性值列表
3.9  添加与移除类属性中的部分值
3.10  变换某个类属性值
3.11  判断类属性值是否含有某一特定值
3.12  获取与设置 data-* 属性
第4章  元素节点选取
4.1  选取特定元素节点
4.2  选取/创建一个元素节点列表（即 NodeList）
4.3  选取所有的直属子元素节点
4.4  选取与上下文有关的元素
4.5  预定义的元素节点选取/列表
4.6  使用 matchesSelector() 验证元素会否被选取
第5章  元素节点几何量与滚动几何量
5.1  元素节点尺寸、偏移及滚动概览
5.2  获取元素相对于 offsetParent 的 offsetTop 及 offsetLeft 值
5.3  使用 getBoundingClientRect() 获取元素相对于视区的Top, Right, Bottom及Left边沿偏移量
5.4  获取元素在视区中的尺寸（边框 + 填充 + 内容）
5.5  获取元素在视区中的尺寸（填充 + 内容），不含边框
5.6  使用 elementFromPoint() 获取视区中某一特定点上最顶层的元素
5.7  使用 scrollHeight 及 scrollWidth 获取滚动元素的尺寸
5.8  使用 scrollTop及scrollLeft 获取并设置从上、左边滚动的距离
5.9  使用 scrollIntoView() 滚动元素到视区
第6章  元素节点内联样式
6.1  样式属性（亦称元素内联 CSS 属性）概览
6.2  获取、设置及移除单个内联 CSS 属性
6.3  获取、设置及移除所有内联 CSS 属性
6.4  使用 getComputedStyle() 获取元素的已计算样式（即包含任何级联样式的实际样式）
6.5  使用 class 及 id 属性应用或者移除元素上的 CSS 属性
第7章  文本节点
7.1  文本对象概览
7.2  文本对象与属性
7.3  空白符创建文本节点
7.4  创建与注入文本节点
7.5  使用 .data 或 nodeValue 获取文本节点值
7.6  使用appendData()、deleteData()、insertData()、replaceData()及 subStringData() 操作文本节点
7.7  当有多个兄弟文本节点时
7.8  使用 textContent 移除文本标记并返回所有的子文本节点
7.9  textContent 与 innerText 的区别
7.10  使用 normalize() 合并兄弟文本节点成单个文本节点
7.11  使用 splitText() 分割文本节点
第8章  DocumentFragment 节点
8.1  DocumentFragment 对象概览
8.2  使用 createDocumentFragment() 创建 DocumentFragment
8.3  添加 DocumentFragment 到实时 DOM
8.4  使用文档片段上的 innerHTML
8.5  通过复制将片段所含节点保留在内存中
第9章  CSS 样式表与 CSS 规则
9.1  CSS 样式表概览
9.2  访问 DOM 中所有样式表（即 CSSStyleSheet 对象）
9.3  CSSStyleSheet 属性与方法
9.4  CSSStyleRule 概览
9.5  CSSStyleRule 属性与方法
9.6  使用 cssRules 获取样式表内的 CSS 规则列表
9.7  使用 insertRule() 和 deleteRule() 来插入与删除样式表中的 CSS 规则
9.8  使用 .style 属性修改 CSSStyleRule 的值
9.9  创建新的内联 CSS 样式表
9.10  以编程方式添加外部样式表到 HTML 文档
9.11  用 .disabled 属性使样式表失效/生效
第10章  DOM 中的 JavaScript
10.1  插入与执行 JavaScript 概览
10.2  JavaScript 默认同步解析
10.3  使用 defer 推迟外部脚本的下载与执行
10.4  使用 async 异步下载并执行外部JavaScript文件
10.5  使用动态 <script> 元素强制异步加载并解析外部 JavaScript
10.6  通过给异步 <script> 加 onload 回调从而知道它们何时加载完毕
10.7  注意含有 DOM 操作的 <script> 的放置
10.8  获取 DOM 中 <script> 列表
第11章  DOM 事件
11.1  DOM 事件概览
11.2  DOM 事件类型
11.3  事件流程
11.4  添加事件监听函数到Element节点、window 对象及document 对象
11.5  移除事件监听函数
11.6  从事件对象中获取事件属性
11.7  使用 addEventListener() 时监听函数中 this的值
11.8  事件调用时取得事件模板而不是所绑定的节点或对象
11.9  使用 preventDefault() 撤销浏览器默认事件
11.10  使用 stopPropagation() 终止事件流程
11.11  使用 stopImmediatePropagation() 终止事件流程与相同目标上的其他事件
11.12  自定义事件
11.13  模拟/触发鼠标事件
11.14  事件委托
第12章  创作dom.js：源自jQuery的灵感，服务于现代浏览器，这是一个万众期待的DOM库
12.1  dom.js 概览
12.2  创建唯一作用域
12.3  创建 dom() 与 GetOrMakeDom()，全局暴露 dom() 与 GetOrMakeDom.prototype
12.4  创建传给 dom() 的可选上下文参数
12.5  依据 params 产生一个持有 DOM 节点引用的对象并返回
12.6  创建 each() 方法并使它可链式调用
12.7  创建 html()、append()及 text() 方法
12.8  拉 dom.js 出来兜兜风
12.9  总结与 dom.js 继续
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>DOM启蒙
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Bootstrap实战
前言
第1章　为什么要学习Bootstrap 1
1.1　Bootstrap概述 2
1.1.1　Bootstrap的历史 2
1.1.2　选择Bootstrap的理由 3
1.1.3　一位程序员的话 4
1.1.4　Bootstrap构成模块 5
1.2　Bootstrap功能介绍 7
1.2.1　Bootstrap主要特色 7
1.2.2　Bootstrap主要功能 8
1.3　Bootstrap应用项目赏析 9
1.3.1　Bootstrap优秀网站 10
1.3.2　Bootstrap优秀插件 11
1.4　Bootstrap版本变化 12
1.5　Bootstrap开发工具和参考资源 16
1.5.1　Bootstrap开发工具 16
1.5.2　Bootstrap参考资源 16
第2章　使用Bootstrap的准备 18
2.1　下载和定制Bootstrap 19
2.1.1　下载Bootstrap 19
2.1.2　定制Bootstrap 20
2.2　Bootstrap的文件结构 24
2.2.1　源码版Bootstrap文件结构 24
2.2.2　编译版Bootstrap文件结构 26
2.3　Bootstrap应用解析 27
2.3.1　安装Bootstrap 27
2.3.2　Bootstrap架构解析 28
2.3.3　设计Bootstrap网页模板 28
2.4　开发第一个Bootstrap示例 30
2.4.1　设计交互组件 30
2.4.2　设计页面版式 31
第3章　Bootstrap框架解析 36
3.1　设计全局样式表 37
3.1.1　CSS全局样式设计思路 37
3.1.2　CSS规范和样式重用 39
3.1.3　CSS重设 41
3.2　栅格系统 43
3.2.1　网页栅格系统的设计技法 43
3.2.2　解析960栅格系统 46
3.2.3　Bootstrap栅格系统 50
3.2.4　响应式Bootstrap栅格系统 54
3.3　Bootstrap布局 58
3.3.1　固定式布局 58
3.3.2　流式布局 59
3.3.3　布局嵌套 60
3.4　响应式设计 61
3.4.1　什么是响应式设计 61
3.4.2　设计响应式图片 64
3.4.3　设计响应式布局结构 67
3.4.4　自适应显示/隐藏页面内容 72
3.4.5　响应式设计流程和实战 76
3.4.6　响应式Bootstrap 81
第4章　优化CSS样式 84
4.1　页面排版优化 85
4.1.1　标题和字体风格 85
4.1.2　文本强调风格 88
4.1.3　文本对齐风格 90
4.1.4　缩略语风格 90
4.1.5　地址风格 91
4.1.6　引用风格 91
4.1.7　列表风格 93
4.1.8　代码风格 95
4.2　表格优化设计 98
4.2.1　优化表格结构 98
4.2.2　默认风格 98
4.2.3　表格个性风格 100
4.2.4　表格行风格 102
4.3　表单优化设计 103
4.3.1　Bootstrap支持的表单控件 103
4.3.2　Bootstrap扩展的表单组件 106
4.3.3　默认风格 109
4.3.4　布局风格 110
4.3.5　外观风格 111
4.3.6　状态风格 115
4.4　按钮设计 117
4.4.1　默认风格 117
4.4.2　定制风格 119
4.4.3　状态风格 120
4.5　图片和图标设计 121
4.5.1　图片风格 121
4.5.2　图标风格 122
第5章　CSS动态样式——LESS 126
5.1　为什么要使用LESS 127
5.1.1　LESS概述 127
5.1.2　LESS的优势 127
5.1.3　LESS参考和工具 128
5.2　如何使用LESS 130
5.2.1　在客户端使用LESS 130
5.2.2　在服务器端使用LESS 134
5.3　LESS包含哪些内容 140
5.3.1　LESS基本特性 140
5.3.2　LESS主要功能 143
5.3.3　LESS和SASS 143
5.4　LESS动态语法 145
5.4.1　变量 145
5.4.2　混合 146
5.4.3　参数混合 146
5.4.4　模式匹配 148
5.4.5　条件表达式 151
5.4.6　嵌套规则 154
5.4.7　运算 156
5.4.8　颜色函数 156
5.4.9　数学函数 158
5.4.10　作用域 158
5.4.11　命名空间 159
5.4.12　注释 160
5.4.13　导入 161
5.4.14　字符串插值 161
5.4.15　转义字符 161
5.4.16　JavaScript表达式 162
5.5　Bootstrap与LESS结合 163
5.5.1　基于LESS的Bootstrap 163
5.5.2　Bootstrap变量 164
5.5.3　Bootstrap混合 169
第6章　使用Bootstrap组件 173
6.1　下拉菜单 174
6.1.1　快速体验下拉菜单 174
6.1.2　设计下拉菜单 177
6.1.3　设计多级下拉菜单 178
6.1.4　设置下拉菜单选项 179
6.2　按钮组 182
6.2.1　设计按钮组 182
6.2.2　设计按钮导航条 183
6.2.3　设计按钮布局 183
6.3　按钮式下拉菜单 184
6.3.1　设计按钮式下拉菜单 184
6.3.2　设计分隔样式 185
6.3.3　设计按钮式下拉菜单布局 185
6.4　导航 186
6.4.1　设计导航组件 186
6.4.2　设置导航选项 187
6.4.3　绑定导航和下拉菜单 189
6.4.4　设计导航列表 190
6.4.5　激活标签页 191
6.4.6　设计标签页布局 193
6.5　导航条 194
6.5.1　设计导航条 194
6.5.2　绑定表单和下拉菜单 196
6.5.3　导航条布局 198
6.6　面包屑和分页 201
6.6.1　设计面包屑 202
6.6.2　设计分页组件 203
6.6.3　设置分页选项 204
6.6.4　设计翻页组件 206
6.7　标签与徽章 207
6.8　缩略图 209
6.8.1　关于图像占位符 209
6.8.2　设计缩略图 210
6.9　警告框 213
6.9.1　设计警告框 213
6.9.2　添加关闭按钮 215
6.10　进度条 215
6.10.1　设计进度条 216
6.10.2　设置个性进度条 217
6.11　媒体 218
6.11.1　媒体版式 218
6.11.2　媒体列表 219
6.12　版式 220
6.12.1　Hero区块 220
6.12.2　页面标题 221
6.13　其他组件 222
6.13.1　Well 222
6.13.2　关闭图标 223
6.13.3　辅助类 223
第7章　使用Bootstrap插件 224
7.1　JavaScript插件开发概述 225
7.1.1　使用Bootstrap插件 225
7.1.2　过渡效果 227
7.2　模态对话框 228
7.2.1　设计对话框 228
7.2.2　调用对话框 230
7.2.3　应用对话框 232
7.3　下拉项 234
7.4　滚动监听 235
7.4.1　使用滚动监听插件 236
7.4.2　控制滚动监听 239
7.5　标签页 241
7.5.1　使用标签页插件 241
7.5.2　控制标签页插件 243
7.6　工具提示 244
7.6.1　使用工具提示插件 245
7.6.2　控制工具提示插件 246
7.7　弹出提示 247
7.7.1　使用弹出提示插件 248
7.7.2　控制弹出提示插件 249
7.8　警告框 251
7.9　按钮 253
7.10　折叠 256
7.10.1　使用折叠插件 256
7.10.2　控制折叠插件 259
7.11　轮播 262
7.11.1　使用轮播插件 262
7.11.2　控制轮播插件 264
7.12　输入提示 268
7.13　附加导航 270
第8章　Bootstrap扩展 274
8.1　针对IE6、IE7的Bootstrap扩展 275
8.1.1　使用Bsie插件 276
8.1.2　手动修补Bsie 277
8.2　Bootstrap Metro 278
8.3　颜色选择器 282
8.3.1　使用颜色选择器 282
8.3.2　配置颜色选择器 283
8.4　日期选择器 286
8.4.1　使用日期选择器 286
8.4.2　配置日期选择器 287
8.5　jQuery UI Bootstrap 293
第9章　使用Bootstrap快速开发社区分享网站 300
9.1　准备工作 301
9.1.1　定制Bootstrap 301
9.1.2　初始化Bootstrap 302
9.2　首页设计 303
9.2.1　设计思路 303
9.2.2　设计结构 305
9.2.3　设计主菜单和按钮 306
9.2.4　设计轮播广告位 308
9.2.5　设计新闻区和版权区版式 311
9.3　阅读页设计 312
9.3.1　设计响应式主菜单 313
9.3.2　设计附加导航菜单 314
9.3.3　设计页面版式 315
9.4　小组页设计 317
9.5　打卡页设计 320
9.5.1　设计页面栅格系统 320
9.5.2　设计滚动监听和附加导航 322
9.6　词根页设计 323
第10章　Bootstrap内核解码 326
10.1　定义jQuery插件 327
10.1.1　jQuery插件形式 327
10.1.2　jQuery插件规范 327
10.1.3　jQuery插件封装 329
10.1.4　jQuery插件优化 331
10.2　Bootstrap设计思想 336
10.2.1　类型化 336
10.2.2　松散与耦合处理 338
10.2.3　继承和可扩展性 340
10.3　Bootstrap框架解析 342
10.3.1　源码结构 342
10.3.2　类定义 343
10.3.3　插件定义 345
10.3.4　命名冲突解决 347
10.3.5　数据接口 347
10.4　Bootstrap内核解疑 347
10.4.1　封装形式 348
10.4.2　启用严格模式 349
10.4.3　插件中的this 353
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Bootstrap实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5数据推送应用开发
前言　　IX
第1章　SSE 及其他　　1
1.1　HTML5　　2
1.2　数据推送　　2
1.3　数据推送的其他名称　　5
1.4　可能会用到SSE 的应用　　5
1.5　和WebSocket 的对比　　6
1.6　什么时候数据推送是错误的选择　　8
1.7　决策、决策还是决策　　10
1.8　带我看代码吧　　11
第2章　玩转SSE　　13
2.1　最简单的示例：前端　　13
2.2　使用jQuery 吗　　16
2.3　最简示例：后端　　17
2.4　基于Node.js 的后端　　19
2.4.1　基于Node.js 的最简Web 服务器　　19
2.4.2　用Node.js 做推送　　20
2.4.3　在浏览器中运行　　22
2.5　华丽退场　　25
第3章　迷人的真实数据推送应用　　27
3.1　问题领域　　27
3.2　后端　　28
3.3　前端　　32
3.4　可复现的真实随机数据　　33
3.5　精磨时间戳　　36
3.6　控制好随机性　　39
3.7　为时间的真正流逝留出余地　　41
3.8　本章内容盘点　　42
第4章　别安于现状　　43
4.1　数据的更多构成　　43
4.2　重构PHP　　44
4.3　重构JavaScript　　45
4.4　历史数据存储　　47
4.5　永久存储　　50
4.6　现在我们是历史学家　　53
第5章　走出象牙塔，打造产品级品质　　55
5.1　错误处理　　55
5.2　错误的JSON　　56
5.3　长连接　　56
5.3.1　服务器端　　57
5.3.2　客户端　　58
5.3.3　SSE 重试　　60
5.4　添加定期的关闭/ 重连　　63
5.5　发送Last-Event-ID　　66
5.6　多路数据ID　　69
5.7　使用Last-Event-ID　　70
5.8　在重连时发送ID　　72
5.9　不要全局化，考虑本地化　　74
5.10　阻止缓存　　75
5.11　阻止死亡　　75
5.12　精简的简单办法　　76
5.13　本章回顾　　76
第6章　向后兼容：其他数据推送策略　　77
6.1　浏览器战争　　77
6.2　什么是轮询　　78
6.3　怎样做长轮询　　79
6.4　给我看些代码　　80
6.5　优化长轮询　　83
6.6　如果JavaScript 被禁用怎么办　　84
6.7　将长轮询移植到我们的外汇交易应用　　85
6.7.1　连接　　85
6.7.2　长轮询和长连接　　87
6.7.3　长轮询和连接错误　　88
6.7.4　服务器端　　89
6.7.5　处理数据　　91
6.7.6　接起来　　92
6.7.7　IE8 及更早版本　　92
6.7.8　IE7 及其更早版本　　93
6.8　蜿蜒曲折的轮询　　94
第7章　向后兼容：另辟蹊径　　95
7.1　共性　　96
7.2　XHR　　98
7.3　iframe　　100
7.4　将XHR/iframe 移植到外汇交易应用　　102
7.4.1　后端的XHR　　102
7.4.2　前端的XHR　　103
7.4.3　前端的iframe　　103
7.4.4　接通XHR　　104
7.4.5　接通iframe　　105
7.5　感谢内存　　107
7.6　把襁褓中的外汇交易应用放到床上　　108
第8章　关于SSE 的其他标准　　111
8.1　请求头　　111
8.2　事件　　114
8.3　多行数据　　118
8.4　消息中的空白　　120
8.5　又见请求头　　120
8.6　这就是全部内容吗　　121
第9章　认证授权：谁在敲门　　123
9.1　Cookie　　123
9.2　认证授权（使用Apache 服务器）　　125
9.3　带有SSE 的HTTP POST　　127
9.4　多重鉴权选择　　129
9.5　SSL 和CORS（连接到其他服务器）　　130
9.6　Allow-Origin　　132
9.7　完善访问控制　　134
9.8　HEAD 和OPTIONS　　135
9.9　Chrome 和Safari 以及CORS　　137
9.10　构造函数与证书　　138
9.11　withCredentials　　138
9.12　CORS 和向后兼容方案　　140
9.12.1　CORS 和IE9 及其更早版本　　141
9.12.2　IE8/IE9：总是使用长轮询　　142
9.12.3　动态处理IE9 及其更早版本　　143
9.13　汇总　　146
9.14　未来会有更多一样　　151
附录A　SSE 标准　　153
A.1　W3C 候选推荐标准2012.12.11　　153
A.1.1　摘要　　154
A.1.2　本文档的状态　　154
A.1.3　目录　　155
A.1.4　引言　　156
A.1.5　一致性要求　　157
A.1.6　术语　　158
A.1.7　EventSource 接口　　158
A.1.8　处理模型　　160
A.1.9　解析事件流　　162
A.1.10　解释事件流　　162
A.1.11　注意事项　　165
A.1.12　无连接推送和其他特性　　166
A.1.13　垃圾回收　　166
A.1.14　IANA 须知　　167
A.1.15　参考文献　　169
A.1.16　致谢　　170
附录B　重构：JavaScript 全局变量、对象和闭包　　171
B.1　示例　　171
B.2　问题是……　　174
B.3　JavaScript 对象和构造函数　　175
B.4　用对象的代码　　176
B.5　JavaScript 闭包　　177
附录C　PHP　　181
C.1　PHP 中的类　　181
C.2　随机函数　　182
C.3　超全局变量　　182
C.4　数据处理　　182
C.5　密码　　183
C.6　休眠　　184
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5数据推送应用开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>前端架构设计
前言　　xi
第一部分　引言
第1章　前端架构原则　　7
第2章　Alpha 项目　　11
2.1　慢而有力的开端　　11
2.2　全副武装　　12
第3章　前端架构的核心　　15
3.1　围绕四个核心工作　　15
3.2　四个核心的含义　　16
第二部分　代码核心
第4章　HTML　　19
4.1　过去处理标记的方法　　19
4.1.1　程序式标记：自动化程度　　100%，可控程度 0%　　19
4.1.2　静态标记：自动化程度 0%，可控程度　　100%　　20
4.2　平衡可控性和自动化　　21
4.3　这一切背后的设计系统　　22
4.4　模块化 CSS 理论的多面性　　22
4.4.1　OOCSS 方法　　23
4.4.2　SMACSS 方法　　23
4.4.3　BEM 方法　　24
4.5　选择适合的方案　　25
第5章　CSS　　27
5.1　特性之争与继承之痛　　28
5.2　一种现代的、模块化的方法　　30
5.3　其他有助益的原则　　32
5.3.1　单一职责原则　　32
5.3.2　单一样式来源　　33
5.3.3　组件修饰符　　34
5.4　小结　　35
第6章　JavaScript　　37
6.1　选择框架　　37
6.2　维护整洁的 JavaScript 代码　　38
6.2.1　保持代码整洁　　38
6.2.2　创造可复用的函数　　38
6.3　小结　　40
第7章　Red Hat 代码　　41
7.1　过多的依赖　　41
7.2　严重的位置依赖问题　　42
7.3　设计分解　　42
7.4　组件分类　　43
7.5　BB 鸟规则　　44
7.6　编写你自己的规则　　44
7.7　每个标签指定唯一的选择器　　46
7.7.1　单一责任原则　　46
7.7.2　样式只有单一的来源　　47
7.7.3　可选的修饰符　　47
7.7.4　可选的上下文　　50
7.8　语义化的网格　　53
第三部分　流程核心
第8章　工作流　　57
8.1　过去的开发工作流　　57
8.2　现代的开发工作流　　58
8.2.1　需求　　58
8.2.2　原型设计　　58
8.2.3　程序开发　　58
8.3　前端工作流　　59
8.3.1　必要的工具　　59
8.3.2　本地部署　　59
8.3.3　编写用户故事　　60
8.4　开发　　61
8.5　发布　　62
8.6　提交编译后的资源　　62
8.7　持续集成的服务器　　63
8.7.1　标签分支　　64
8.7.2　究竟为什么要这么做　　64
8.8　发布渠道　　64
第9章　任务处理器　　67
9.1　在任务处理器中完成一切　　68
9.2　在项目中使用任务处理器　　69
9.3　有明显的优胜者吗　　71
第10章　Red Hat 流程　　73
10.1　征服最后一英里　　73
10.2　模式驱动的设计系统　　75
第四部分　测试核心
第11章　单元测试　　87
11.1　单元　　87
11.1.1　更多重用　　88
11.1.2　更好的测试　　88
11.2　测试驱动的开发　　88
11.3　一个测试驱动的例子　　89
11.4　测试覆盖率要多大才足够　　90
11.4.1　解决分歧点　　90
11.4.2　从测试覆盖率开始　　90
第12章　性能测试　　91
12.1　制定性能预算　　91
12.1.1　竞争基线　　92
12.1.2　平均基准　　92
12.2　原始指标　　93
12.2.1　页面大小　　93
12.2.2　HTTP 请求次数　　94
12.3　计时度量　　94
12.4　混合度量标准　　95
12.4.1　PageSpeed 分数　　95
12.4.2　Speed Index 指标　　95
12.5　设置性能测试　　95
12.5.1　Grunt PageSpeed 插件　　96
12.5.2　Grunt Perfbuget 插件　　96
12.6　小结　　97
第13章　视觉还原测试　　99
13.1　常见的质疑　　99
13.1.1　不了解情况的开发者　　100
13.1.2　不一致的设计　　100
13.1.3　举棋不定的决策者　　100
13.2　一个经过测试的解决方案　　101
13.3　视觉还原测试的多面性　　101
第14章　Red Hat 测试方法　　103
14.1　实践视觉还原测试　　103
14.1.1　测试工具集　　103
14.1.2　设置 Grunt　　104
14.1.3　测试文件　　104
14.1.4　对比　　105
14.1.5　运行全部测试用例　　106
14.1.6　如何应对测试失败　　107
14.1.7　从失败到成功　　107
14.1.8　修改代码以适应需求　　108
14.1.9　将基准图片放在组件目录里　　108
14.1.10　独立运行每个组件的测试集　　109
14.1.11　测试的可扩展性　　110
14.2　小结　　111
第五部分　文档核心
第15章　样式文档　　117
15.1　配置 Hologram　　117
15.1.1　Hologram 的文档注释块　　119
15.1.2　Hologram 编译流程　　120
15.1.3　Hologram 小结　　121
15.2　SassDoc　　121
15.2.1　安装 SassDoc　　121
15.2.2　使用 SassDoc　　122
15.2.3　探索 SassDoc　　123
15.2.4　深入了解 SassDoc　　124
15.2.5　内部依赖　　125
15.3　小结　　127
第16章　图形库　　129
16.1　何为 Pattern Lab　　129
16.2　运行 Pattern Lab　　131
16.3　首页模板　　133
16.4　首变量　　134
16.5　原子　　135
16.6　发挥原子的作用　　135
第17章　Red Hat 文档　　137
17.1　阶段　　1：静态的样式文档　　137
17.2　阶段　　2：重写 Pattern Lab　　139
17.3　阶段　　3：分拆模式库和样式文档　　142
17.4　阶段　　4：创建统一的渲染引擎　　143
17.5　阶段　　5：自动创建新模式　　144
第18章　总结　　147
作者介绍　　149
封面介绍　　149

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>前端架构设计
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>jQuery Mobile即学即用
目录
前言　　XI
第1 章 　移动平台　　1
1.1 　为什么需要jQuery Mobile　　1
1.1.1 　移动互联网的传说　　1
1.1.2 　移动Web 应用　　3
1.1.3 　再问一次，为什么需要jQuery Mobile　　4
1.2 　jQuery Mobile 是什么　　4
1.2.1 　jQuery Mobile 不是什么　　4
1.2.2 　框架　　5
1.3 　移动及平板的世界　　6
1.3.1 　设备分类　　7
1.3.2 　操作系统和浏览器　　9
1.3.3 　jQuery Mobile 兼容性　　11
1.4 　HTML5 和CSS3　　14
1.5 　主要特性　　15
1.5.1 　使用非侵入性语义的 HTML5　　15
1.5.2 　渐进增强　　17
1.5.3 　可访问性支持　　18
1.6 　测试Web 应用　　18
1.6.1 　仿真器与模拟器　　19
1.6.2 　远程实验室　　22
第2 章 　框架起步　　23
2.1 　准备文档　　23
2.1.1 　需求　　23
2.1.2 　托管文件　　23
2.1.3 　使用CDN　　25
2.1.4 　主HTML5 模板　　27
2.2 　Adobe Dreamweaver 的支持　　29
2.3 　架构　　31
2.3.1 　角色　　32
2.3.2 　主题　　33
2.3.3 　页面　　34
2.4 　导航　　37
2.4.1 　后退按钮　　38
2.4.2 　内部页面链接　　39
2.4.3 　外部页面链接　　42
2.4.4 　绝对外部链接　　46
2.4.5 　移动互联网特有链接　　47
2.4.6 　页面间的过渡效果　　47
2.4.7 　反转过渡效果　　49
2.5 　对话框　　49
2.5.1 　关闭，还是后退　　51
2.5.2 　从对话框打开页面　　54
2.6 　与电话整合　　54
2.6.1 　拨打电话　　54
2.6.2 　视频及VoIP 呼叫　　56
2.6.3 　发送电子邮件　　56
2.6.4 　发短消息　　57
2.6.5 　其他URI 方案　　57
2.6.6 　综合起来　　58
第3 章 　UI 组件　　59
3.1 　工具栏　　59
3.1.1 　定位　　60
3.1.2 　真实固定工具栏　　62
3.1.3 　在页头中添加内容　　62
3.1.4 　在页脚中添加内容　　65
3.1.5 　导航栏　　66
3.1.6 　固定页脚　　69
3.2 　格式化内容　　71
3.2.1 　可折叠内容　　72
3.2.2 　手风琴部件　　75
3.3 　列　　76
3.4 　按钮　　78
3.4.1 　内联按钮　　79
3.4.2 　分组按钮　　79
3.4.3 　效果　　80
3.4.4 　图标　　80
3.4.5 　创建自定义图标　　81
3.4.6 　图标位置　　83
3.4.7 　纯图标按钮　　84
3.4.8 　图标阴影　　84
第4 章 　列表　　85
4.1 　整页列表与插入列表　　88
4.2 　视觉分隔符　　89
4.3 　交互行　　91
4.3.1 　内嵌列表　　94
4.3.2 　分割按钮列表　　97
4.3.3 　有序交互列表　　100
4.4 　使用图片　　100
4.4.1 　行图标　　101
4.4.2 　缩略图　　101
4.5 　附加内容　　102
4.6 　标题与描述　　103
4.7 　使用计数气泡　　103
4.8 　使用搜索过滤数据　　104
4.9 　列表视图速查表　　105
第5 章 　表单组件　　107
5.1 　表单动作　　107
5.2 　表单元素　　108
5.2.1 　文本标签　　109
5.2.2 　域容器　　109
5.2.3 　文本输入框　　110
5.2.4 　自增长文本区　　112
5.2.5 　新HTML5 属性　　113
5.2.6 　日期输入框　　114
5.2.7 　滑块　　115
5.2.8 　平移切换开关　　116
5.2.9 　选择菜单　　117
5.2.10 　单选按钮　　124
5.2.11 　复选框　　126
5.2.12 　上传文件　　128
第6 章 　jQuery Mobile API　　129
6.1 　文档事件　　129
6.2 　配置　　131
6.2.1 　全局配置　　132
6.2.2 　页面配置　　136
6.2.3 　部件配置　　138
6.3 　实用工具　　139
6.3.1 　Data-* 工具　　139
6.3.2 　页面工具　　139
6.3.3 　平台工具　　141
6.3.4 　路径工具　　142
6.3.5 　UI 工具　　142
6.4 　自定义过渡　　143
6.5 　动态内容　　144
6.5.1 　创建页面　　144
6.5.2 　创建部件　　147
6.5.3 　更新部件　　148
6.6 　创建网格　　148
6.7 　改变页面内容　　148
6.8 　处理事件　　149
6.8.1 　页面事件　　149
6.8.2 　部件事件　　152
6.8.3 　方向事件　　152
6.8.4 　手势事件　　153
6.8.5 　虚拟点击事件　　154
第7 章 　创建主题　　155
7.1 　ThemeRoller　　156
7.1.1 　全局设置　　157
7.1.2 　色样设置　　158
7.1.3 　审查器　　159
7.1.4 　Adobe Kuler　　159
7.1.5 　输出主题　　159
7.2 　Fireworks 主题编辑器　　160
7.3 　编辑主题　　164
7.4 　定制页面过渡　　165
第8 章 　安装以及离线访问　　167
8.1 　软件包定义　　167
8.1.1 　HTML 清单　　168
8.1.2 　下载应用　　169
8.1.3 　访问在线资源　　170
8.1.4 　更新资源　　171
8.1.5 　JavaScript 对象　　172
8.1.6 　事件　　173
8.2 　安装应用图标　　175
8.2.1 　引导　　175
8.2.2 　图标快捷方式名　　176
8.2.3 　图标定义　　178
8.3 　全屏　　180
8.3.1 　全屏检测　　181
8.3.2 　修饰Web 应用　　182
8.4 　完整的例子　　184
8.5 　存储离线数据　　185
第9 章 　Web 应用实例　　187
9.1 　Web 应用的结构　　187
9.1.1 　离线清单　　188
9.1.2 　页面　　189
9.1.3 　样式　　196
9.1.4 　数据　　197
9.1.5 　脚本　　197
第10 章 　扩展框架　　203
10.1 　创建插件　　203
10.1.1 　基础模板　　204
10.1.2 　创建插件　　205
10.2 　插件精萃　　210
10.2.1 　分页插件　　210
10.2.2 　Bartender 插件　　211
10.2.3 　DateBox 插件　　213
10.2.4 　Simple Dialog 插件　　214
10.2.5 　Action Sheet 插件　　216
10.3 　供平板使用的插件　　216
10.3.1 　SplitView 插件　　217
10.3.2 　MultiView 插件　　219
10.4 　兼容的jQuery UI 插件　　220
第11 章 　为应用商店打包　　221
11.1 　到应用商店去发布　　222
11.2 　自定义的发布　　223
11.3 　准备打包　　223
11.4 　使用PhoneGap 打包　　224
关于封面　　226
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>jQuery Mobile即学即用
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node学习指南
《node学习指南》
第1章　node.js：启动与运行　1
1.1　搭建node开发环境　2
1.1.1　linux(ubuntu)下安装node　2
1.1.2　windows 7平台下node+webmatrix　4
1.1.3　升级node　8
1.2　开始node开发　9
1.2.1　hello, world in node　9
1.2.2　分析“hello,world”　11
1.3　异步函数及node事件循环　13
1.3.1　使用异步方式读取文件　14
1.3.2　观察异步程序流程　15
1.4　node的优势　19
第2章　node与repl　20
2.1　repl：先睹为快和未定义的表达式　20
2.2　repl的优势：更好地理解表层之下的javascript　22
2.3　多行以及更复杂的javascript　23
2.3.1　repl命令　26
2.3.2　repl和rlwrap　27
2.3.3　定制repl　28
.2.4　不可预计的意外——记得经常保存　32
第3章　node核心库　33
3.1　全局对象：global、process和buffer　34
3.1.1　global　34
3.1.2　process　36
3.1.3　buffer　38
3.2　定时器：settimeout、cleartimeout、setinterval 和clearinterval　39
3.3　servers、streams和sockets　40
3.3.1　tcp sockets和servers　41
3.3.2　http　43
3.3.3　udp数据报套接字　45
3.3.4　流、管道和readline　47
3.4　子进程　49
3.4.1　child_process.spawn　50
3.4.2　child_process.exec和child_process.execfile　52
3.4.3　child_process.fork　52
3.4.4　在windows系统中使用子进程　53
3.5　域名解析和url处理　54
3.6　utilities模块和对象继承　55
3.7　events和eventemitter　59
第4章　node模块系统　63
4.1　使用require和默认路径加载模块　63
4.2　外部模块和node包管理工具　65
4.3　如何找到你需要的模块　69
4.3.1　colors：简单至上　71
4.3.2　optimist：另一个简单的小模块　73
4.3.3　underscore　74
4.4　创建自定义模块　75
4.4.1　打包整个目录　76
4.4.2　为你的模块发布做准备　76
4.4.3　发布模块　80
第5章　控制流、异步模式和异常处理　82
5.1　使用callback而不使用promises　82
5.2　顺序调用、嵌套回调、异常捕获　85
5.3　异步模式和控制流模块　92
5.3.1　step　93
5.3.2　async　96
5.4　node编码风格　101
第6章　路由寻址、服务文件和中间件　103
6.1　从头开始：创建一个简单的静态文件服务器　103
6.2　中间件　110
6.2.1　connect基本知识　111
6.2.2　connect中间件　113
6.2.3　定制connect中间件　118
6.3　routers　121
6.4　proxies　124
第7章　express框架　128
7.1　express：启动和运行　129
7.2　app.js文件　130
7.3　错误处理　133
7.4　express与connect的关系　134
7.5　路由　135
7.5.1　路由路径　137
7.5.2　路由和http动词　140
7.6　关于mvc　147
7.7　使用curl测试express应用程序　152
第8章　express、模板系统和css　154
8.1　ejs模板系统(embedded javascript template system)　154
8.1.1　基本语法　155
8.1.2　node与ejs　156
8.1.3　ejs与node filters　158
8.2　在express中使用ejs　159
8.2.1　多对象环境的改造　161
8.2.2　静态文件路由　162
8.2.3　处理一个新对象的post请求　164
8.2.4　widget索引和生成picklist　166
8.2.5　显示单个对象并确认对象的删除操作　168
8.2.6　提供更新信息的表达以及处理put请求　170
8.3　jade模板系统　173
8.3.1　jade语法简介　173
8.3.2　使用block和extends模块化视图模板　176
8.3.3　widget view转换为jade模板　178
8.3.4　转换edit和delete表单　179
8.4　使用stylus完成简单的css样式　182
第9章　结构化数据、noe和redis　187
9.1　node和redis　188
9.2　构建游戏得分排行榜　190
9.3　创建消息队列　197
9.4　为express应用程序添加统计中间件　201
第10章　node和mongodb：文档中心数据　206
10.1　mongodb native node.js driver(mongodb原生node.js驱动)　207
10.1.1　mongodb入门　207
10.1.2　定义、创建以及销毁mongodb collection　208
10.1.3　为collection添加数据　209
10.1.4　查询数据　212
10.1.5　使用updates、upserts、find和remove　216
10.2　使用mongoose实现widget模块　221
10.3 重构widget工厂　222
10.4　添加mongodb后台　223
第11章　node与关系型数据库　228
11.1　db-mysql入门　229
11.1.1　查询字符串和方法链　229
11.1.2　使用查询字符串更新数据库　233
11.1.3　使用方法链更新数据库　235
11.2　使用node-mysql实现本地mysql访问　237
11.2.1　使用node-mysql做基本的crud操作　237
11.2.2　mysql事务与mysql-queues　239
11.3　orm与sequelize　241
11.3.1　定义模型　241
11.3.2　orm风格的crud实现　243
11.3.3　添加多个对象　246
11.3.4　从关系型到orm　247
第12章　图形和html5 video　248
12.1　创建和使用pdf　248
12.1.1　使用子进程访问pdf工具　249
12.1.2　使用pdfkit创建pdf　257
12.2　从子进程访问imagemagick　258
12.3　通过http提供html5 video服务　263
12.4　创建和流化画布内容(canvas content)　267
第13章　websockets和socket.io　271
13.1　websockets　271
13.2　socket.io简介　272
13.2.1　一个简单的通信范例　273
13.2.2　异步世界里的websockets　276
13.2.3　关于客户端代码　277
13.3　配置socket.io　278
13.4　chat：websockets版本的“hello, world”　279
13.5　在express中使用socket.io　282
第14章　node应用程序的测试和调试　284
14.1　调试　284
14.1.1　node.js debugger　284
14.1.2　使用node inspector的客户端调试　287
14.2　单元测试(unit testing)　289
14.2.1　assert与单元测试　289
14.2.2　nodeunit与单元测试　293
14.2.3　其他测试框架　295
14.3　验收测试　299
14.3.1　soda和selenium测试　299
14.3.2　通过tobi和zombie模拟浏览器　303
14.4　性能测试：基准问题和负载测试　304
14.4.1　apachebench基准测试　305
14.4.2　nodeload与负载测试　309
14.5　nodemon更新代码　312
第15章　安全及防护　313
15.1　数据加密　314
15.1.1　tsl/ssl配置　314
15.1.2　使用https　315
15.1.3　如何安全的保存密码　317
15.2　认证/授权及passport　320
15.2.1　授权/认证策略：oauth、openid、用户名/密码验证　321
15.2.2　local passport strategy　323
15.2.3　twitter passport strategy(oauth)　330
15.3　保护应用程序，防止攻击　336
15.3.1　不要使用eval　336
15.3.2　尽量使用复选框、单选按钮和下拉式选项　337
15.3.3　使用node-validator　337
15.4　在沙箱中执行代码　339
第16章　扩展和部署node应用　343
16.1　把你的节点部署到服务器上　343
16.1.1　编写package.json文件　344
16.1.2　使用forever让你的应用“永不掉线”　347
16.1.3　使用node和apache　350
16.1.4　改善性能　352
16.2　部署到云服务　352
16.2.1　通过cloud9 ide部署到windows azure　353
16.2.2　joyent development smartmachine　355
16.2.3　heroku　355
16.2.4　amazon ec2　356
16.2.5　nodejitsu　356
附录　node、git和github　357
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node学习指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Dojo权威指南
序 1
前言 5
第一部分 base与core
第1章 dojo工具箱概述 23
dojo的架构 23
开发前的准备 27
重要的术语 32
启用dojo 34
在firebug中探索dojo 41
小结 51
第2章 语言及浏览器实用程序 52
查找dom节点 52
类型检查 53
字符串工具 54
数组处理 55
通过模块管理源代码 60
javascript对象实用程序 68
操作对象环境 72
dom实用程序 76
浏览器实用程序 83
小结 87
第3章 事件侦听器及发布/预订通信 89
事件和键盘标准化 89
事件侦听器 92
发布/预订通信 97
小结 101
第4章 ajax及服务器通信 102
ajax简介 102
简化ajax操作 104
deferred对象 111
表单和http实用程序 120
使用jsonp实现跨站点脚本 122
核心io 123
json远程过程调用 132
openajax hub 135
小结 135
第5章 节点操作 136
query：以不变应万变 137
nodelist 143
创建nodelist扩展 153
分离行为 154
小结 158
第6章 国际化（i18n） 159
国际化简介 159
自定义模块的国际化 160
日期、数字和货币 163
小结 166
第7章 拖放 167
拖动 167
放置 178
小结 187
第8章 动画和特效 188
base中的动画方法 188
core的fx模块 201
动画+拖放=酷 209
颜色 210
小结 219
第9章 数据抽象 220
重建数据访问模式 220
数据api概览 221
深入理解api 222
core对数据api的实现.. 230
小结 246
第10章 模拟类和继承 248
javascript不是java 248
一题多解 249
使用dojo来模拟类 252
小结 266
第二部分 dijit与util
第11章 dijit概述 271
dijit产生的动机 271
易访问性（a11y） 274
设计人员需要了解的dijit 277
解析器 283
动手构建numberspinner部件 287
内置部件一览 292
dijit api简介 296
小结 297
第12章 深入理解dijit及其生命周期 299
理解dijit 299
dijit的生命周期方法 302
自定义部件示例：helloworld 309
_container和_contained与父子关系 319
在标记中快速构建部件 319
小结 321
第13章 表单部件 323
表单部件 326
textbox及其变体 329
filteringselect 348
multiselect 349
textarea及其变体 350
button及其变体 351
slider 358
form 363
小结 365
第14章 布局部件 366
布局部件的共同特性 366
contentpane 368
bordercontainer 372
stackcontainer 377
tabcontainer 380
accordioncontainer 382
呈现与可见 383
小结 384
第15章 应用程序部件 386
tooltip 386
dialog部件 387
progressbar 391
colorpalette 394
toolbar 395
menu 397
titlepane 402
inlineeditbox 403
tree 405
简单的树 406
editor 417
小结 423
第16章 构建工具、测试及程序发布 424
构建工具 424
dojo目标套件（doh） 435
基于浏览器的测试套件 440
性能问题 442
小结 444
附录a firebug入门教程 445
附录b dojox评述  456
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Dojo权威指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5经典实例
第1章基本语法和语义
1.0简介
1.1指定DOCTYPE
1.2指定字符集
1.3指定语言
1.4优化和
1.5使用HTML5的新元素添加文档结构
1.6在和之间选择
1.7查看文档纲要
1.8修改文档纲要
1.9强调文本
1.10增强文本的重要性
1.11突出显示表示引用的文本
1.12标记附属规则
1.13定义缩略语与缩写
1.14给块级内容添加链接
1.15标记图和图题
1.16标记日期和时间
1.17设置本地扩展和折叠功能
1.18控制列表的编号
1.19隐藏内容以稍后显示
1.20让页面的一部分可编辑
1.21设置本地拖放
第2章增强性标记和技术
2.0简介
2.1添加更多的语义含义
2.2选取标记样式
2.3理解浏览器对HTML5的支持
2.4让IE识别HTML5元素
2.5使用JavaScript检测HTML5功能
2.6使甩HTML5 Boilerplate
2.7验证HTML5
2.8将HTML5元素映射到id和class名
第3章表单
3.0简介
3.1显示一个搜索输入字段
3.2联系信息输入字段
3.3使用日期和时间输入字段
3.4数字输入
3.5从一个数字范围选取
3.6选择颜色
3.7创建可编辑的下拉列表
3.8要求必须填写一个表单字段
3.9自动聚焦一个表单字段
3.10显示占位符文本
3.11关闭自动填充
3.12限定输入值
3.13让HTML5在旧的浏览器中工作
3.14在旧浏览器中使用JavaScript验证表单数据
3.15示例：示例表单
第4章本地音频
4.0简介
4.1添加HTML5音频
4.2操作音频流
4.3使用JavaScript生成音频
4.4使用canvas可视化音频
4.5示例设计：定制音频播放器
第5章本地视频
5.0简介
5.1添加HTML5视频
5.2确保多个浏览器视频支持
5.3设置视频尺寸
5.4在视频播放前显示一个占位符图像
5.5让视频循环
5.6示例设计：使用canvas操作视频
第6章微数据和定制数据
6.0简介
6.1给标记添加微数据
6.2使用微数据和Schema.org
6.3给标记添加定制数据
6.4使用JavaSci。ipt访问定制数据
6.5操作定制数据
6.6示例：使用定制数据创建一个地图应用
第7章可访问性
7.0简介
7.1编写合适的ALT文本说明
7.2识别缩写和缩略语
7.3在页面中使用ARIA Landmai_k角色
7.4创建更具可访问性的导航链接
7.5将表单字段及其标签关联起来
7.6按逻辑组织表单字段
7.7动态地打开fieldset
7.8识别必需的表单字段
7.9当动态内容更新的时候，使用ARIA Live Regions声明
第8章GeoLocation
8.0简介
8.1获取基本的GeoLocation数据
8.2获取带有备用的基本GeoLocation数据
8.3用纬度和经度逆向Geocoding以得到一个地址
8.4将地址转换为纬度和经度
8.5从当前位置的方向指示
8.6示例：从星巴克到星巴克
第9章Canvas
9.0简介
9.1在canvas上绘制
9.2使用透明度
9.3设置canvas大小
9.4创建渐变
9.5将外部图像放入到canvas绘制中
9.6设置颜色变换
9.7使用几何变换
9.8在canvas上放置文本
9.9裁剪canvas绘制
9.10让canvas绘制实现动画
9.11用绘制图形
9.12将canvas绘制保存到一个文件
第10章高级HTML5 JavaScripl
10.0简介
10.1本地存储
10.2应用程序缓存
10.3拖放
10.4Web Workers
10.5Web Sockets
10.6历史
10.7本地文件
附录HTML5资源
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5经典实例
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>React Native开发指南
前言　　xi
第1章　初识React Native　　1
1.1　React Native 的优点　　2
1.1.1　开发者体验　　2
1.1.2　代码复用与知识共享　　3
1.2　风险和缺点　　4
1.3　小结　　4
第2章　React Native 工作原理　　5
2.1　React Native 是如何工作的　　5
2.2　渲染周期　　7
2.3　在React Native 中创建组件 7
2.3.1　编写视图　　7
2.3.2　使用JSX　　9
2.3.3　原生组件的样式　　10
2.4　宿主平台接口　　11
2.5　小结　　12
第3章　构建你的第一个应用　　13
3.1　搭建环境　　13
3.1.1　安装React Native　　14
3.1.2　iOS 依赖　　14
3.1.3　Android 依赖　　14
3.2　创建一个新的应用　　17
3.2.1　在iOS 平台运行React Native 应用　　18
3.2.2　部署到iOS 设备　　20
3.2.3　在Android 平台运行React Native 应用　　23
3.2.4　小结：创建并运行项目　　24
3.3　探索示例代码　　24
3.3.1　添加组件到视图中　　24
3.3.2　React Native 中的模块导入　　25
3.3.3　FirstProject 组件　　26
3.4　开发天气应用　　27
3.4.1　处理用户输入　　28
3.4.2　展现数据　　30
3.4.3　添加背景图片　　34
3.4.4　从Web 获取数据　　36
3.4.5　整合　　37
3.5　小结　　40
第4章　移动应用组件　　42
4.1　类比HTML 元素与原生组件　　42
4.1.1　文本组件　　43
4.1.2　图片组件　　45
4.2　处理触摸和手势　　46
4.2.1　使用TouchableHighlight　　47
4.2.2　GestureResponder 系统　　49
4.2.3　PanResponder　　52
4.3　使用结构化组件　　58
4.3.1　使用ListView　　58
4.3.2　使用Navigator　　66
4.3.3　其他结构化组件　　68
4.4　平台特定组件　　69
4.4.1　iOS 或Android 特定组件　　69
4.4.2　平台特定版本的组件　　70
4.4.3　何时使用平台特定组件　　74
4.5　小结　　74
第5章　样式　　75
5.1　声明和操作样式　　75
5.1.1　内联样式　　76
5.1.2　对象样式　　76
5.1.3　使用Stylesheet.Create　　77
5.1.4　样式拼接　　77
5.2　组织和继承　　79
5.2.1　导出样式对象　　79
5.2.2　样式作为属性传递　　80
5.2.3　复用和共享样式　　81
5.3　定位和设计布局　　81
5.3.1　使用flexbox 布局　　82
5.3.2　使用绝对定位　　86
5.3.3　学以致用　　86
5.4　小结　　91
第6章　平台接口　　92
6.1　使用定位接口　　93
6.1.1　获取用户地理位置　　93
6.1.2　处理权限问题　　94
6.1.3　在iOS 模拟器上测试定位　　95
6.1.4　监听用户位置　　96
6.1.5　限制　　96
6.1.6　改进天气应用　　96
6.2　使用用户图片与摄像头  99
6.2.1　相机模块　　99
6.2.2　通过getPhotoParams 获取图片　　101
6.2.3　从相机渲染一张图片　　101
6.2.4　展示照片列表　　103
6.2.5　上传图片至服务器　　107
6.3　AsyncStore 持久化数据存储　　108
6.4　智能天气应用　　109
6.4.1　WeatherProject 组件　　111
6.4.2　Forecast 组件　　114
6.4.3　Button 组件　　115
6.4.4　LocationButton 组件　　116
6.4.5　PhotoBackdrop 组件　　117
6.5　小结　　119
第7章　模块　　120
7.1　使用npm 安装JavaScript 类库　　120
7.2　iOS 原生模块　　121
7.2.1　导入第三方组件　　122
7.2.2　使用视频组件　　125
7.2.3　剖析Objective-C 原生模块　　125
7.2.4　RCTVideo 的实现　　128
7.3　Android 原生模块　　130
7.3.1　安装第三方组件　　130
7.3.2　剖析Java 原生模块　　134
7.3.3　LinearGradient 的Android 实现　　137
7.4　跨平台原生模块　　139
7.5　小结　　141
第8章　调试与开发者工具　　142
8.1　JavaScript 调试实践和解释　　142
8.1.1　激活开发者选项　　142
8.1.2　使用console.log 调试　　143
8.1.3　使用JavaScript 调试器　　145
8.1.4　使用React 开发者工具　　146
8.2　React Native 调试工具　　147
8.2.1　使用审查元素功能　　147
8.2.2　宕机红屏　　148
8.3　JavaScript 之外的调试方法　　152
8.3.1　常见的开发环境问题　　153
8.3.2　常见的Xcode 问题　　153
8.3.3　常见的Android 问题　　154
8.3.4　React Native 包管理器　　155
8.3.5　部署至iOS 设备的问题　　156
8.3.6　模拟器行为　　157
8.4　测试代码　　158
8.4.1　使用Flow 进行类型检查　　158
8.4.2　使用Jest 进行测试　　158
8.5　当你陷入困境　　160
8.6　小结　　160
第9章　学以致用　　161
9.1　闪卡应用　　161
9.1.1　项目结构　　163
9.1.2　组件层次结构　　164
9.2　模型与数据存储　　168
9.2.1　数据流架构：Reflux 与Flux　　170
9.2.2　在Zebreto 中使用Reflux　　173
9.2.3　AsyncStorage 与Reflux Store 的持久化　　175
9.3　使用Navigator　　177
9.4　探索第三方依赖　　180
9.5　响应式设计与字体尺寸　　180
9.6　小结及任务　　183
第10章　部署至iOS 应用商店　　184
10.1　准备Xcode 工程　　184
10.1.1　选择支持的设备和目标iOS 版本　　185
10.1.2　启动界面图像　　186
10.1.3　添加应用图标　　188
10.1.4　设置Bundle 名称　　190
10.1.5　更新AppDelegate.m　　190
10.1.6　为发布设置Schema　　191
10.2　上传应用　　192
10.2.1　完成协议文书　　192
10.2.2　创建归档　　193
10.2.3　在iTunes Connect 上创建应用　　196
10.3　使用TestFlight 进行Beta 测试　　199
10.4　提交应用审核　　200
10.5　小结　　201
第11章　部署Android 应用　　203
11.1　设置应用图标　　203
11.2　生成release 版本的APK　　205
11.3　通过邮件或链接发布　　207
11.4　提交应用至Play 商店　　207
11.4.1　通过Play Store 进行Beta 测试　　209
11.4.2　Play 商店列表　　210
11.4.3　商店列表所需的资源　　211
11.4.4　发布应用　　212
11.5　小结　　214
总结　215
附录A　ES6 语法　　216
附录B　命令与快速入门指南　　219
作者简介　　221
关于封面　　221
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>React Native开发指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>jQuery Mobile快速入门
第1章  jQuery Mobile简介  1  1.1  通用访问  1  1.2  跨所有移动平台的统一UI  4  1.3  简化的标记驱动的开发  5  1.4  渐进式增强  6  1.5  响应式设计  7  1.6  可主题化的设计  10  1.7  可访问性  11  1.8  总结  12第2章  jQuery Mobile入门  15  2.1  jQuery Mobile页面模板  15  2.2  多页面模板  20    2.2.1  设置内部页面的页面标题  22    2.2.2  单页面文档与多页面文档的对比  23  2.3  Ajax驱动的导航  24    2.3.1  $.mobile.changePage()  26    2.3.2  用途  26    2.3.3  参数  26    2.3.4  配置Ajax导航  28  2.4  转换  28  2.5  对话框  31    2.5.1  链接与页面配置的对比  33    2.5.2  操作表  33    2.5.3  对话框UX指南  35  2.6  带有媒体查询的响应式布局  36  2.7  总结  38第3章  使用页眉、工具栏和标签栏来导航  39  3.1  页眉栏  39    3.1.1  页眉基础知识  39    3.1.2  页眉结构  40    3.1.3  页眉定位  40    3.1.4  页眉按钮  42    3.1.5  既有文本又有图标的按钮  43    3.1.6  只带有图标的按钮  43    3.1.7  带有分段控件的页眉栏  44    3.1.8  修复被截断的页眉或页脚  46  3.2  回退按钮  47  3.3  页脚栏  50    3.3.1  页脚基础知识  50    3.3.2  页脚结构  50    3.3.3  页脚定位  51    3.3.4  页脚按钮  52  3.4  工具栏  53    3.4.1  带有图标的工具栏  53    3.4.2  带有分段控件的工具栏  54  3.5  标签栏  56    3.5.1  带有标准图标的标签栏  56    3.5.2  永久标签栏  57    3.5.3  带有自定义图标的标签栏  58    3.5.4  带有分段控件的标签栏  59  3.6  总结  60第4章  表单元素和按钮  63  4.1  按钮  64    4.1.1  链接按钮  64    4.1.2  表单按钮  65    4.1.3  图像按钮  66    4.1.4  使用图标来设计按钮  66    4.1.5  只带有图标的按钮  68    4.1.6  按钮定位  69    4.1.7  带有自定义图标的按钮  69    4.1.8  分组按钮  70    4.1.9  主题按钮  72    4.1.10  动态按钮  73  4.2  表单元素  76    4.2.1  表单基础知识  76    4.2.2  文本输入  77    4.2.3  选择菜单  81    4.2.4  单选按钮  88    4.2.5  复选框  91    4.2.6  滑动条  93    4.2.7  开关控件  97    4.2.8  本地表单元素  98    4.2.9  Mobiscroll日期选择器  101  4.3  总结  103第5章  列表视图  105  5.1  列表基础知识  105  5.2  内置列表  106  5.3  列表分割线  107  5.4  带有缩略图和图标的列表  109  5.5  拆分按钮列表  111  5.6  编号列表  112  5.7  只读列表  113  5.8  列表徽章(计数泡)  114  5.9  使用搜索栏过滤列表  116  5.10  动态列表  118    5.10.1  列表选项  119    5.10.2  列表方法  120    5.10.3  列表事件  120  5.11  总结  121第6章  使用表格和CSS渐变来格式化内容  123  6.1  表格布局  123    6.1.1  表格模板  123    6.1.2  两列的表格  124    6.1.3  带有CSS增强的三列表格  126    6.1.4  带有app图标的四列表格  127    6.1.5  带有emoji图标的五列表格  128    6.1.6  多行表格  129    6.1.7  不相等的表格  130    6.1.8  springboard  131  6.2  可折叠的内容块  133  6.3  可折叠的设置  136  6.4  使用CSS渐变进行样式化  138  6.5  总结  141第7章  创建可主题化的设计  143  7.1  主题基础知识  144  7.2  主题和调色板  145  7.3  主题默认值  148  7.4  主题继承  150  7.5  自定义主题  154  7.6  ThemeRoller  158    7.6.1  调色板和全局设置  158    7.6.2  Preview Inspector和QuickSwatch Bar  159    7.6.3  Adobe Kuler集成  160    7.6.4  入门  161  7.7  总结  163第8章  jQuery Mobile API  165  8.1  配置jQuery Mobile  165    8.1.1  自定义脚本的位置  166    8.1.2  可配置的jQuery Mobile选项  166  8.2  方法  170  8.3  事件  175    8.3.1  事件概览  176    8.3.2  触发事件  182  8.4  属性  183  8.5  数据属性  183  8.6  总结  191第9章  服务集成策略  193  9.1  使用RESTful服务的客户端集成  194    9.1.1  使用Ajax的客户端Twitter集成  194    9.1.2  使用Ajax的客户端表单POST  199  9.2  使用MVC的服务器端集成  205    9.2.1  使用MVC的服务器端表单POST  205    9.2.2  使用MVC的服务器端数据访问  210    9.2.3  服务器端与客户端的对比  211  9.3  Google Maps集成  213  9.4  总结  216第10章  使用PhoneGap轻松部署jQuery Mobile应用程序  217  10.1  什么是PhoneGap  218  10.2  将jQuery Mobile作为一个iOS app来运行  218  10.3  将jQuery Mobile作为一个Android app来运行  226  10.4  Open App Market  231  10.5  客户端设备API  233  10.6  总结  233
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>jQuery Mobile快速入门
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>SPA设计与架构：理解单页面Web应用
第1 部分 基础知识 1
1　单页面应用程序介绍 3
1.1 SPA 简述 4
1.1.1 无须刷新浏览器 7
1.1.2 表现逻辑位于客户端 7
1.1.3 服务器端事务处理 7
1.2 更进一步 8
1.2.1 以Shell 页面开始 8
1.2.2 从传统页面到视图 9
1.2.3 视图的产生 10
1.2.4 实现无刷新的视图切换 11
1.2.5 贯穿动态更新过程的流畅性 12
1.3 SPA 应用相较传统Web 应用的优势 12
1.4 温故知新 13
1.5 优秀SPA 应用的构成 15
1.5.1 组织项目 15
1.5.2 创建可维护的松耦合UI 17
1.5.3 使用JavaScript 模块 18
1.5.4 执行SPA 导航 19
1.5.5 创建视图组成与布局 19
1.5.6 模块通信 20
1.5.7 与服务器端通信 20
1.5.8 执行单元测试 20
1.5.9 客户端自动化技术 20
1.6 小结 21
2　MV* 框架介绍 22
2.1 MV* 概念 24
2.1.1 传统UI 设计模式 25
2.1.2 MV* 和浏览器环境 27
2.2 MV* 基础概念 28
2.2.1 框架 29
2.2.2 我们的MV* 项目 30
2.2.3 模型 32
2.2.4 绑定 36
2.2.5 模板 40
2.2.6 视图 44
2.3 为什么要用MV* 框架 44
2.3.1 关注分离 45
2.3.2 简化日常任务 46
2.3.3 提升生产率 47
2.3.4 标准化 47
2.3.5 可扩展性 48
2.4 框架选择 48
2.5 挑战环节 50
2.6 小结 50
3　JavaScript 模块化 52
3.1 模块概念 53
3.1.1 模块模式概念 53
3.1.2 模块结构 54
3.1.3 揭示模式 55
3.2 模块化编程的意义 56
3.2.1 避免命名冲突 56
3.2.2 保护代码完整性 65
3.2.3 隐藏复杂性 67
3.2.4 降低代码改变带来的冲击 68
3.2.5 代码组织 68
3.2.6 模块模式的不足 69
3.3 模块模式剖析 69
3.3.1 可访问性控制 69
3.3.2 创建公有API 70
3.3.3 允许全局导入 73
3.3.4 创建模块的命名空间 73
3.4 模块加载及依赖管理 74
3.4.1 脚本加载器 74
3.4.2 异步模块定义——AMD 75
3.4.3 通过RequireJS 实践AMD 76
3.5 挑战环节 81
3.6 小结 81
第2 部分　核心概念 83
4　单页面导航 85
4.1 客户端路由器概念 86
4.1.1 传统导航 86
4.1.2 SPA 导航 86
4.2 路由及其配置 88
4.2.1 路由语法 90
4.2.2 路由配置项 90
4.2.3 路由参数 91
4.2.4 缺省路由 93
4.3 客户端路由器的工作机制 93
4.3.1 片段标识符方式 94
4.3.2 HTML5 历史API 方式 95
4.3.3 使用HTML5 历史API 方式 97
4.4 综合实作：实现SPA 路由 98
4.4.1 教员列表（缺省路由） 99
4.4.2 主要联系人路由 101
4.4.3 教员授课时间（参数化路由） 102
4.5 挑战环节 104
4.6 小结 105
5　视图合成与布局 106
5.1 项目介绍 107
5.2 布局设计概念 108
5.2.1 视图 108
5.2.2 Region 109
5.2.3 视图合成 110
5.2.4 嵌套视图 111
5.2.5 路由 112
5.3 高级合成与布局的可选方案 113
5.3.1 优点 113
5.3.2 缺点 114
5.4 设计应用程序 114
5.4.1 设计基本布局 115
5.4.2 设计基本内容 117
5.4.3 在复杂设计中应用视图管理 122
5.4.4 通过自身状态创建嵌套视图 125
5.5 挑战环节 127
5.6 小结 128
6　模块间交互 129
6.1 模块概念回顾 131
6.1.1 用模块封装代码 131
6.1.2 API 提供对内部功能的访问控制 133
6.1.3 SRP——以单一目的作为设计出发点 134
6.1.4 代码重用——控制项目规模 135
6.2 模块间交互方式 136
6.2.1 通过依赖进行模块间交互 136
6.2.2 依赖方式的优缺点 138
6.2.3 通过发布/ 订阅模式进行模块间交互 138
6.2.4 发布/ 订阅模式优缺点 141
6.3 示例项目细节 142
6.3.1 搜索功能 144
6.3.2 显示产品信息 150
6.4 挑战环节 155
6.5 小结 155
7　与服务器端通信 156
7.1 示例项目新要求 157
7.2 与服务器端通信综述 158
7.2.1 选择数据类型 158
7.2.2 HTTP 请求方法 159
7.2.3 数据转换 160
7.3 使用MV* 框架 161
7.3.1 请求生成 162
7.3.2 通过回调函数处理结果 165
7.3.3 通过Promise 处理结果 166
7.3.4 Promise 错误处理 170
7.4 RESTful Web 服务调用 172
7.4.1 什么是REST 172
7.4.2 REST 原则 172
7.4.3 MV* 框架的RESTful 支持 174
7.5 示例项目细节 174
7.5.1 配置REST 调用 174
7.5.2 添加产品到购物车 177
7.5.3 查看购物车 179
7.5.4 修改购物车 181
7.5.5 从购物车中移除产品 183
7.6 挑战环节 184
7.7 小结 184
8　单元测试 186
8.1 示例项目说明 187
8.2 什么是单元测试 187
8.2.1 单元测试的好处 188
8.2.2 构建更好的单元测试 189
8.3 传统的单元测试 192
8.3.1 QUnit 起步 193
8.3.2 创建第一个单元测试 196
8.3.3 测试由MV* 对象创建的代码 200
8.3.4 测试对DOM 所做的改变 205
8.3.5 混合使用其他测试框架 206
8.4 挑战环节 208
8.5 小结 208
9　客户端任务自动化 209
9.1 Task Runner 的常见用途 210
9.1.1 即时刷新浏览器 210
9.1.2 自动化JavaScript 和CSS 的预处理过程 211
9.1.3 自动化Linter 代码分析 211
9.1.4 持续单元测试 211
9.1.5 文件串接 212
9.1.6 代码压缩 212
9.1.7 持续集成 212
9.2 Task Runner 选择 212
9.3 本章示例项目 213
9.3.1 Gulp.js 介绍 214
9.3.2 创建第一个任务 215
9.3.3 创建代码分析任务 216
9.3.4 创建浏览器刷新任务 218
9.3.5 自动化单元测试 220
9.3.6 创建构建过程 222
9.4 挑战环节 227
9.5 小结 227
A　员工通讯录示例说明 229
B　XMLHttpRequest API 259
C　第7 章内容的服务器端设置与总结 266
D　安装Node.js 与Gulp.js 277
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>SPA设计与架构：理解单页面Web应用
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>微信公众平台JSSDK开发实战---公众号与HTML 5混合模式揭秘
目录
第1章  认识微信公众平台	1
1.1  微信公众平台账号分类	1
1.1.1  订阅号	2
1.1.2  服务号	2
1.1.3  企业号	4
1.2  微信公众号申请流程	4
1.3  微信公众号的认证	9
1.4  公众号设置	9
1.5  微信开发者中心	10
1.5.1  开发者中心的配置项	10
1.5.2  开发者中心的接口报警	11
1.6  公众号的安全中心	12
1.7  本章小结	12
第2章  搭建JSSDK开发环境	13
2.1  先了解一下JSSDK	13
面向的对象	13
截止到2015年2月26号开放的接口	13
接口统一说明	14
JSSDK大致的部署过程	14
2.2  如何部署JSSDK	15
2.2.1  绑定域名	15
2.2.2  引入JS文件	16
2.2.3  通过wx.config接口验证JSSDK权限	16
2.3  JSSDK的主要功能参考列表	26
2.4  一些其他基础入门必知的知识点	28
2.5  本章小结	29
第3章  JSSDK的基础接口和分享接口	30
3.1  基础接口的作用	30
3.1.1  任何开发都要从基础接口开始	30
3.1.2  判断当前客户端版本是否支持指定JS接口	32
3.2　分享接口的作用	36
3.2.1  分享接口有什么好处	36
3.2.2  获取微信的分享接口	36
3.3  实例：微信分享一个网页到朋友圈	38
3.4  常见问题	46
第4章  JSSDK的图像处理	47
4.1  认识图像接口	47
4.1.1  从安卓手机相册中选图	48
4.1.2  预览图片	52
4.1.3  上传图片	56
4.1.4  下载图片	62
4.2  实例：从手机相册中选照片然后分享	67
4.2.1  项目需求	67
4.2.2  需求分解	68
4.2.3  代码实现	68
4.3  常见问题	75
第5章  JSSDK的音频处理	76
5.1  音频接口	76
5.1.1  开始录音	77
5.1.2  停止录音	79
5.1.3  监听录音自动停止	82
5.1.4  播放语音	84
5.1.5  暂停播放	88
5.1.6  停止播放	93
5.1.7  监听语音播放完毕	98
5.1.8  上传语音	102
5.1.9  下载语音	107
5.2  常见问题	112
第6章  JSSDK的界面操作	114
6.1  界面操作	114
6.1.1  隐藏右上角菜单	115
6.1.2  显示右上角菜单	117
6.1.3  关闭当前网页窗口	120
6.1.4  批量隐藏功能按钮	122
6.1.5  批量显示功能按钮	125
6.1.6  隐藏所有非基础按钮	128
6.1.7  显示所有功能按钮	130
6.2  常见问题	132
第7章  JSSDK的地理位置	133
7.1  地理位置	133
7.1.1  获取地理位置	134
7.1.2  使用微信内置地图查看位置	138
7.2  常见问题	143
第8章  JSSDK的智能操作与设备信息	144
8.1  智能接口	144
8.1.1  创建智能接口的通用文件	144
8.1.2  识别音频并返回识别结果	145
8.2  微信扫一扫	150
8.2.1  创建微信扫一扫功能的通用文件	150
8.2.2  调用微信扫一扫接口	150
8.3  设备信息	154
8.3.1  获取网络状态接口	154
8.3.2  获取网络状态接口	155
8.4  常见问题	158
第9章  JSSDK的微信商店	159
9.1  微信小店	159
9.1.1  创建微信小店的通用文件	159
9.1.2  跳转微信商品页	160
9.2  微信卡券	162
9.2.1  批量添加卡券	163
9.2.2  调用适用于门店的卡券列表并获取用户选择列表	166
9.2.3  查看微信卡包中的卡券	170
9.3  常见问题	173
第10章  实战案例1：中国好屌挑战赛	174
10.1  案例概述	174
10.2  客户需求	174
10.2.1  首页	174
10.2.2  男生游戏的逻辑	176
10.2.3  女生游戏的逻辑	179
10.2.4  分享页面	184
10.3  实现代码及分析	185
10.3.1  首页模块	185
10.3.2  参加女生组模块	201
10.3.3  参加男生组模块	235
10.4  案例总结	252
第11章  实战案例2：LBS服务获取用户位置	253
11.1  案例概述	253
11.2  实现代码及分析	253
11.3  案例总结	261
第12章  微信JSSDK相关开发技巧及问题	262
12.1  判断微信浏览器	262
12.2  微信浏览器不支持打开App Store页面	263
12.3  一些提示码的问题	265
12.3.1  提示码：invalid url domain	265
12.3.2  提示码：invalid signature	266
12.3.3  提示码：the permission value is offline verifying	266
12.3.4  提示码：permission denied	266
12.3.5  提示码：function not exist	266
12.3.6  版本config问题	267
12.3.7  在调用微信JSSDK选择图片后显示模糊的问题	267
附录A  JS-SDK使用权限签名算法	268
附录B  所有JS接口列表	271
附录C  所有菜单项列表	281
附录D  卡券扩展字段及签名生成算法	283
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>微信公众平台JSSDK开发实战---公众号与HTML 5混合模式揭秘
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node.js权威指南
前言
第1章　Node.js介绍 / 1
1.1　Node.js概述 / 2
1.1.1　使用Node.js能够解决什么问题 / 2
1.1.2　实现高性能服务器 / 2
1.1.3　非阻塞型I/O及事件环机制 / 2
1.1.4 　Node.js适合开发的应用程序 / 3
1.2　安装Node.js / 3
1.3　Node.js中的模块 / 4
1.4　一个简单的示例应用程序 / 6
1.5　小结 / 8
第2章　Node.js中的交互式运行环境——REPL / 9
2.1　REPL运行环境概述 / 10
2.2　在REPL运行环境中操作变量 / 10
2.3　在REPL运行环境中使用下划线字符 / 12
2.4　在REPL运行环境中直接运行函数 / 12
2.5　在REPL运行环境中定义并启动服务器 / 13
2.6　REPL运行环境中的上下文对象 / 13
2.7　REPL运行环境中的基础命令 / 14
2.8　小结 / 17
第3章　Node.js基础知识 / 18
3.1　Node.js中的控制台 / 19
3.1.1　console.log方法 / 19
3.1.2　console.error方法 / 20
3.1.3　console.dir方法 / 21
3.1.4　console.time方法与console.timeEnd方法 / 22
3.1.5　console.trace方法 / 22
3.1.6　console.assert方法 / 23
3.2　Node.js中的全局作用域及全局函数 / 23
3.2.1　Node.js中的全局作用域 / 23
3.2.2　setTimeout函数与clearTimeout函数 / 25
3.2.3　setInterval函数与clearInterval函数 / 25
3.2.4　定时器对象的unref方法与ref方法 / 27
3.2.5　与模块相关的全局函数及对象 / 28
3.3　__filename变量与__dirname变量 / 33
3.3.1　__filename变量 / 33
3.3.2　__dirname变量 / 34
3.4　事件处理机制及事件环机制 / 34
3.4.1　EventEmitter类 / 35
3.4.2　EventEmitter类的各个方法 / 35
3.4.3　获取指定事件的事件处理函数的数量 / 41
3.4.4　EventEmitter类自身所拥有的事件 / 42
3.4.5　事件环机制 / 44
3.5　在Node.js中使用调试器 / 45
3.5.1　在命令行窗口中使用调试器 / 45
3.5.2　观察变量值或表达式的执行结果 / 48
3.5.3　设置与取消断点 / 49
3.5.4　调试器中可以使用的其他实用命令 / 50
3.5.5　使用node-inspector调试工具 / 54
3.6　小结 / 55
第4章　模块与npm包管理工具 / 56
4.1　核心模块与文件模块 / 57
4.2　从模块外部访问模块内的成员 / 58
4.2.1　使用exports对象 / 58
4.2.2　将模块定义为类 / 58
4.2.3　为模块类定义类变量或类函数 / 61
4.3　组织与管理模块 / 61
4.3.1　从node_modules目录中加载模块 / 61
4.3.2　使用目录来管理模块 / 62
4.3.3　从全局目录中加载模块 / 62
4.4　模块对象的属性 / 63
4.5　包与npm包管理工具 / 65
4.5.1　Node.js中的包 / 65
4.5.2　npm包管理工具 / 67
4.6　小结 / 68
第5章　使用Buffer类处理二进制数据 / 69
5.1　创建Buffer对象 / 70
5.2　字符串的长度与缓存区的长度 / 72
5.3　Buffer对象与字符串对象之间的相互转换 / 74
5.3.1　Buffer对象的toString方法 / 74
5.3.2　Buffer对象的write方法 / 75
5.3.3　StringDecoder对象 / 75
5.4　Buffer对象与数值对象之间的相互转换 / 77
5.5　Buffer对象与JSON对象之间的相互转换 / 79
5.6　复制缓存数据 / 80
5.7　Buffer类的类方法 / 81
5.7.1　isBuffer方法 / 81
5.7.2　byteLength方法 / 81
5.7.3　concat方法 / 82
5.7.4　isEncoding方法 / 83
5.8　小结 / 83
第6章　在Node.js中操作文件系统 / 84
6.1　同步方法与异步方法 / 85
6.2　对文件执行读写操作 / 86
6.2.1　文件的完整读写 / 86
6.2.2　从指定位置处开始读写文件 / 91
6.3　创建与读取目录 / 97
6.3.1　创建目录 / 97
6.3.2　读取目录 / 98
6.4　查看与修改文件或目录的信息 / 99
6.4.1　查看文件或目录的信息 / 99
6.4.2　检查文件或目录是否存在 / 101
6.4.3　获取文件或目录的绝对路径 / 102
6.4.4　修改文件访问时间及修改时间 / 103
6.4.5　修改文件或目录的读写权限 / 104
6.5　可以对文件或目录执行的其他操作 / 105
6.5.1　移动文件或目录 / 105
6.5.2　创建与删除文件的硬链接 / 106
6.5.3　创建与查看符号链接 / 107
6.5.4　截断文件 / 110
6.5.5　删除空目录 / 111
6.5.6　监视文件或目录 / 111
6.6　使用文件流 / 116
6.6.1　流的基本概念 / 116
6.6.2　使用ReadStream对象读取文件 / 119
6.6.3　使用WriteStream对象写入文件 / 121
6.7　对路径进行操作 / 127
6.8　小结 / 134
第7章　实现基于TCP与UDP的数据通信 / 135
7.1　使用net模块实现基于TCP的数据通信 / 136
7.1.1　创建TCP服务器 / 136
7.1.2　socket端口对象 / 142
7.1.3　创建TCP客户端 / 151
7.1.4　net模块中的类方法 / 164
7.2　使用dgram模块实现基于UDP的数据通信 / 165
7.2.1　创建UDP服务器与客户端 / 165
7.2.2　实现广播与组播 / 172
7.3　小结 / 175
第8章　创建HTTP与HTTPS服务器及客户端 / 176
8.1　HTTP服务器 / 177
8.1.1　创建HTTP服务器 / 177
8.1.2　获取客户端请求信息 / 182
8.1.3　转换URL字符串与查询字符串 / 184
8.1.4　发送服务器端响应流 / 191
8.2　HTTP客户端 / 202
8.2.1　向其他网站请求数据 / 202
8.2.2　向本地服务器请求数据 / 208
8.2.3　制作代理服务器 / 210
8.3　创建HTTPS服务器与客户端 / 211
8.3.1　创建HTTPS服务器 / 211
8.3.2　创建HTTPS客户端 / 216
8.4　小结 / 223
第9章　进程与子进程 / 224
9.1　Node.js中的进程 / 225
9.1.1　进程对象的属性 / 225
9.1.2　进程对象的方法与事件 / 227
9.2　创建多进程应用程序 / 235
9.2.1　使用spawn方法开启子进程 / 236
9.2.2　使用fork方法开启子进程 / 243
9.2.3　使用exec方法开启子进程 / 250
9.2.4　使用execFile方法开启子进程 / 253
9.3　在多个子进程中运行Node.js应用程序 / 254
9.3.1　使用fork方法创建worker对象 / 254
9.3.2　worker对象的方法与事件 / 262
9.4　小结 / 270
第10章　Node.js中的错误处理与断言处理 / 271
10.1　使用domain模块处理错误 / 272
10.1.1　domain模块概述 / 272
10.1.2　创建并使用Domain对象 / 274
10.1.3　隐式绑定与显式绑定 / 276
10.1.4　绑定回调函数与拦截回调函数 / 279
10.1.5　domain堆栈的弹出与推入 / 280
10.1.6　Domain对象的销毁 / 286
10.2　Node.js中的断言处理 / 286
10.2.1　equal方法与notEqual方法 / 287
10.2.2　strictEqual方法与notStrictEqual方法 / 288
10.2.3　assert方法与ok方法 / 288
10.2.4　deepEqual方法与notDeepEqual方法 / 289
10.2.5　throws方法与doesNotThrow方法 / 290
10.3　小结 / 293
第11章　加密与压缩 / 294
11.1　加密与解密处理 / 295
11.1.1　crypto模块概述 / 295
11.1.2　散列算法 / 296
11.1.3　HMAC算法 / 297
11.1.4　公钥加密 / 298
11.2　压缩与解压缩处理 / 305
11.2.1　创建各种用于压缩及解压缩的对象 / 305
11.2.2　zlib模块中的各种方法 / 310
11.3　小结 / 311
第12章　Node.js中的其他模块 / 312
12.1　使用dns模块解析域名 / 313
12.1.1　使用resolve方法将域名解析为DNS记录 / 313
12.1.2　使用lookup方法查询IP地址 / 315
12.1.3　使用reverse方法反向解析IP地址 / 316
12.1.4　dns模块中的各种错误代码 / 317
12.2　使用punycode模块转换punycode编码 / 318
12.3　使用os模块获取操作系统信息 / 320
12.4　使用readline模块逐行读取流数据 / 323
12.4.1　创建 Interface对象 / 323
12.4.2　Interface对象所拥有的各种方法与事件 / 327
12.5　使用util模块中提供的一些实用方法 / 335
12.6　使用vm模块改变脚本运行环境 / 346
12.6.1　在独立环境中运行JavaScript代码 / 346
12.6.2　创建并使用Script对象 / 350
12.7　自定义REPL运行环境 / 352
12.8　小结 / 358
第13章　数据库访问 / 359
13.1　在MongoDB数据库中存取数据 / 360
13.1.1　MongoDB概述 / 360
13.1.2　安装MongoDB数据库 / 360
13.1.3　安装MongoDB包 / 361
13.1.4　连接MongoDB数据库 / 361
13.1.5　在MongoDB数据库中插入数据 / 364
13.1.6　在MongoDB数据库中查询数据 / 369
13.1.7　在MongoDB数据库中更新与删除数据 / 384
13.1.8　使用Mongoose类库 / 393
13.2　在MySQL数据库中存取数据 / 395
13.2.1　建立连接与关闭连接 / 395
13.2.2　执行数据的基本处理 / 399
13.2.3　执行存储过程 / 404
13.2.4　执行多表结合查询 / 406
13.2.5　以数据流的方式处理查询数据 / 409
13.2.6　创建连接池 / 411
13.3　小结 / 413
第14章　使用Express构建Web应用程序 / 414
14.1　Express概述 / 415
14.1.1　安装Express / 415
14.1.2　使用Express开发一个简单的示例应用程序 / 415
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node.js权威指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5游戏编程核心技术与实战
第1章　游戏和HTML5初探　1
1.1　网页游戏和HTML5　1
1.1.1　网页游戏简介　1
1.1.2　HTML5简介　2
1.1.3　HTML5浏览器工具　4
1.1.4　HTML5开发工具　6
1.2　HTML5新特性初探　10
1.2.1　canvas元素　10
1.2.2　WebGL　12
1.2.3　多媒体元素　13
1.2.4　地理信息服务　14
1.2.5　本地存储　15
1.2.6　Web sockets网络通信　16
1.2.7　Web Worker多线程　16
1.3　小结　18
第2章　Canvas绘图　19
2.1　基本知识　19
2.1.1　创建canvas　20
2.1.2　理解canvas坐标系　20
2.1.3　获取canvas环境上下文　20
2.2　图形API　21
2.2.1　理解路径　21
2.2.2　路径操作API　21
2.2.3　绘制线条　22
2.2.4　绘制矩形　23
2.2.5　绘制圆弧　24
2.2.6　绘制贝塞尔曲线　25
2.2.7　线条属性　27
2.2.8　线条颜色　28
2.2.9　填充　28
2.2.10　绘图状态　31
2.3　图像API　32
2.3.1　使用canvas绘制图像　32
2.3.2　案例：放大镜　33
2.3.3　案例：帧动画实现　34
2.3.4　像素操作　36
2.3.5　案例：转换灰度图　37
2.3.6　案例：浮雕效果　39
2.4　坐标变换　40
2.5　绘制文字　42
2.6　其他全局属性　44
2.7　案例：《你画我猜》　45
2.7.1　UI界面设计　45
2.7.2　定义画板对象　47
2.7.3　初始化画笔选项区　47
2.7.4　实现画板绘制　49
2.7.5　整合代码　50
2.8　小结　54
第3章　多媒体元素　55
3.1　多媒体基本知识　55
3.1.1　多媒体容器　55
3.1.2　音视频解码器　56
3.2　使用多媒体元素　57
3.2.1　属性　58
3.2.2　方法　59
3.2.3　事件　60
3.2.4　多媒体元素的限制　61
3.3　案例：本地音乐播放器　61
3.3.1　UI界面设计　61
3.3.2　创建Player对象　62
3.3.3　添加本地文件　65
3.3.4　实现播放进度条　66
3.3.5　实现播放功能　67
3.3.6　整合代码　68
3.4　音频处理高级技巧　74
3.4.1　Web Audio API简介　74
3.4.2　Audio上下文　74
3.4.3　加载和播放音频　76
3.4.4　调节音频增益　77
3.4.5　混合多个音频　79
3.4.6　3D音效　82
3.4.7　显示声音波形　83
3.5　小结　86
第4章　制作2D游戏引擎　87
4.1　理解游戏循环　87
4.2　渲染引擎实现　88
4.2.1　游戏引擎介绍　88
4.2.2　建立游戏主循环框架　89
4.2.3　控制游戏帧数　92
4.2.4　游戏监听器　94
4.2.5　创建游戏主窗口　97
4.2.6　创建游戏精灵　104
4.2.7　案例：屏幕弹球　112
4.2.8　游戏精灵帧动画　115
4.2.9　加载游戏资源　131
4.2.10　游戏IO控制　142
4.3　使用引擎构建游戏实例　144
4.4　小结　152
第5章　网络通信基础　153
5.1　网络协议基础　153
5.1.1　通信协议　153
5.1.2　TCP/IP　153
5.1.3　HTTP　154
5.1.4　套接字　156
5.2　服务器端框架Node.js基础　157
5.2.1　简介　157
5.2.2　安装　158
5.2.3　应用　158
5.2.4　案例：简单的Web服务器　159
5.3　Web sockets基础　162
5.3.1　简介　162
5.3.2　应用　162
5.3.3　案例：基于socket.io.js框架的聊天室　164
5.4　小结　167
第6章　游戏常用算法　168
6.1　追踪算法　168
6.2　碰撞检测算法　172
6.2.1　地图格子算法　172
6.2.2　包围盒检测算法　173
6.2.3　像素检测算法　183
6.3　路径搜索算法　186
6.3.1　随机迷宫算法　186
6.3.2　A*算法　189
6.4　有限状态机　194
6.4.1　原理　194
6.4.2　实现　195
6.4.3　案例：勤劳的蚂蚁　198
6.5　粒子系统　206
6.6　小结　210
第7章　Box2D引擎和物理游戏　211
7.1　Box2D基础　211
7.1.1　安装Box2D库　211
7.1.2　Box2D中的基本概念　212
7.1.3　创建Box2D物理世界　213
7.1.4　添加物体到空间中　213
7.1.5　渲染Box2D世界　215
7.2　案例：结合渲染引擎渲染Box2D世界　217
7.2.1　建立游戏框架，初始化Box2D世界　217
7.2.2　更新Box2D物理世界　219
7.2.3　创建Box2D物理精灵　219
7.3　小结　222
第8章　使用CSS3开发游戏　223
8.1　CSS历史　223
8.2　CSS3选择器　224
8.2.1　属性选择器　224
8.2.2　结构伪类选择器　224
8.2.3　target伪类选择器　229
8.2.4　UI元素状态伪类选择器　230
8.2.5　反向伪类选择器　230
8.2.6　通用兄弟元素选择器　230
8.3　CSS3动画　231
8.3.1　变形　231
8.3.2　过渡　234
8.3.3　案例：手风琴效果　235
8.3.4　动画　237
8.3.5　案例：沿路径移动的小球　239
8.3.6　案例：地板上弹跳的小球　241
8.4　案例：俄罗斯方块　244
8.4.1　游戏规则和游戏UI　244
8.4.2　分析游戏　246
8.4.3　游戏实现　250
8.5　小结　255
第9章　编程实战之太空战机　256
9.1　创建主框架　256
9.2　创建开始场景　259
9.3　创建运行场景　261
9.3.1　创建视差滚动背景　261
9.3.2　创建射击类　264
9.3.3　创建玩家类　268
9.3.4　创建敌机类　273
9.3.5　创建子弹类　275
9.3.6　游戏配置实现　277
9.3.7　运行场景实现　282
9.4　创建结束场景　285
9.5　小结　286
第10章　编程实战之《你画我猜》　287
10.1　了解游戏逻辑　287
10.2　UI界面设计　288
10.3　登录到服务器的实现　289
10.3.1　创建简单的游戏服务器对象　290
10.3.2　创建服务客户端对象　291
10.3.3　创建客户端对象　293
10.4　画板对象实现　295
10.5　游戏数据定义　299
10.6　显示所有玩家　301
10.7　发送文本消息　303
10.8　游戏逻辑实现　304
10.9　最终实现　305
10.9.1　主页面最终实现　305
10.9.2　客户端最终实现　307
10.9.3　画板最终实现　312
10.9.4　游戏服务器最终实现　315
10.9.5　游戏配置最终实现　319
10.9.6　服务客户端最终实现　320
10.10　小结　322
第11章　编程实战之《疯狂的小鸟》　323
11.1　建立游戏主界面　323
11.2　创建B2Sprite类　328
11.3　创建Bird类　330
11.3.1　Bird状态分析及实现　330
11.3.2　绘制Bird飞行轨迹　334
11.3.3　Box2D中的碰撞检测　336
11.3.4　Bird碰撞效果处理　338
11.3.5　Bird类的实现　339
11.4　Pig类的实现　343
11.5　Block类的实现　345
11.6　TGame类的实现　347
11.7　小结　352
附录A　游戏的历史　353
附录B　游戏类型　373
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5游戏编程核心技术与实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node.js 设计模式（第 2 版）
第1 章欢迎来到Node.js 平台 1
Node.js 的哲学思想2
小核心2
小模块2
小接触面3
简单和实用3
认识Node.js 6 和ES2015 4
let 和const 关键字5
箭头函数6
类语法8
增强的对象字面量10
Map 和Set 集合11
WeakMap 和WeakSet 集合13
模板字面量14
其他ES2015 特性14
Reactor 模式15
I/O 是缓慢的15
阻塞I/O 15
非阻塞I/O 16
事件多路分解器17
Reactor 模式简介19
Node.js-libuv 的非阻塞I/O 引擎20
Node.js 的秘诀21
总结21
第2 章Node.js 基础设计模式  23
回调模式24
CPS（Continuation Passing Style） 24
同步或异步26
Node.js 回调约定31
模块系统及其模式34
揭示模块模式34
Node.js 模块解释35
模块定义模式42
观察者模式49
EventEmitter 类49
创建和使用EventEmitter 50
传播错误51
使任何对象可观察51
同步和异步事件53
EventEmitter 与回调54
组合回调和EventEmitter 55
总结55
第3 章异步控制流模式之回调函数  56
异步编程的困难56
创建一个简单的网络蜘蛛57
回调地狱59
使用纯JavaScript 60
回调规则60
应用回调规则61
顺序执行63
并行执行68
有限制的并行执行73
async 库77
顺序执行78
并行执行81
有限制的并行执行81
总结83
第4 章异步控制流模式之ES2015+   84
promise 84
什么是promise 85
Promises/A+ 实现87
Node.js 风格函数的promise 化88
顺序执行90
并行执行93
有限制的并行执行93
在公共API 中暴露callback 和promise 95
generator 97
generator 基础97
generator 的异步控制流100
顺序执行104
并行执行106
有限制的并行执行108
使用Babel 的async await 111
安装和运行Babel 112
比较113
总结114
第5 章流编程  115
流的重要性115
缓冲和流116
空间效率117
时间效率118
组合性121
开始学习流122
流的分类122
可读流123
可写流127
双向流(Duplex stream) 132
变换流132
使用管道拼接流135
使用流处理异步流程137
顺序执行138
无序并行执行139
无序有限制的并行执行143
顺序并行执行145
管道模式146
组合流146
复制流149
合并流150
复用和分解152
总结159
第6 章设计模式  160
工厂模式161
创建对象的通用接口161
一种封装的机制162
构建一个简单的代码分析器164
可组合的工厂函数166
扩展169
揭示构造函数170
只读事件触发器171
扩展172
代理模式173
实现代理模式的方法174
不同方法的比较176
创建日志记录的写入流176
生态系统中的代理模式——函数钩子与面向行为编程(AOP) 178
ES2015 中的Proxy 对象178
扩展180
装饰者模式(Decorator) 180
实现装饰者模式的方法181
装饰一个LevelUP 数据库182
扩展185
适配器模式(Adapter) 185
通过文件系统API 来使用LevelUP 数据库186
扩展189
策略模式(Strategy) 189
支持多种格式的配置对象190
扩展193
状态模式193
实现一个基本的自动防故障套接字194
模板模式(Template) 199
配置管理器模板199
扩展201
中间件(Middleware) 202
Express 中的中间件202
设计模式中的中间件203
为ØMQ 创建中间件框架204
在Koa 中使用生成器的中间件210
命令模式(Command) 213
灵活的设计模式214
总结218
第7 章连接模块  220
模块和依赖221
Node.js 中最常见的依赖221
内聚和耦合222
有状态的模块222
连接模块模式224
硬编码依赖224
依赖注入229
服务定位器234
依赖注入容器239
连接插件243
插件作为包243
扩展点245
插件控制与应用程序控制的扩展245
实现注销插件248
总结256
第8 章通用JavaScript 的Web 应用程序  257
与浏览器端共享代码258
共享模块258
Webpack 简介262
Webpack 的魔力263
Webpack 的优点264
使用ES2015 和Webpack 265
跨平台开发基础267
运行时代码分支268
构建时代码分支269
模块交换271
用于跨平台开发的设计模式273
React 介绍274
第一个React 组件275
JSX 是什么277
配置Webpack 以实现JSX 转换279
在浏览器中渲染280
React 路由库281
创建通用JavaScript 应用程序286
创建可用的组件287
服务端渲染289
通用渲染和路由293
通用数据检索294
总结304
第9 章高级异步编程技巧  305
需要异步初始化的模块305
规范解决方案306
预初始化队列307
题外话311
异步批处理和缓存312
实现没有缓存或批处理的服务器312
异步请求批处理314
异步请求缓存316
使用promise 进行批处理和缓存319
运行CPU 绑定的任务322
解决子集和问题322
交叉使用setImmediate 325
使用多进程328
总结335
第10 章扩展与架构模式  336
应用程序扩展介绍337
扩展Node.js 应用程序337
可扩展性的三个维度337
克隆和负载均衡339
集群模块340
处理有状态通信348
使用反向代理进行扩展350
使用服务注册表354
对等负载均衡360
分解复杂的应用程序362
单体式架构362
微服务架构364
微服务架构中的集成模式367
总结372
第11 章消息传递与集成模式  374
消息系统的基础375
单向和请求/应答模式375
消息类型376
异步消息和队列377
对等或基于代理的消息378
发布/订阅模式379
构建简约的实时聊天应用程序380
使用Redis 作为消息代理383
使用ØMQ 对等发布/订阅385
持久订阅者389
管道和任务分配模式396
ØMQ 扇出/扇入模式397
使用AMQP 实现管道和竞争消费者模式401
请求/应答模式406
关联标识符406
返回地址410
总结415
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node.js 设计模式（第 2 版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JQUERY从菜鸟到忍者（第二版）
前言
第1章 爱上jQuery
1.1 jQuery的优势
1.1.1 跨浏览器的兼容性
1.1.2 css3选择器
1.1.3 实用工具
1.1.4 jQuery ul
1.1.5 插件
1.1.6 保持标记整洁
1.1.7 广泛采用
1.2 有何缺陷
1.3 下载和包含jQuery
1.3.1 下载jQuery
1.3.2 Google内容分发网络（CDN）
1.3.3 其他CDN选项
1.3.4 Nightlies和Github
1.3.5 使用非压缩版本还是压缩版本
1.4 jQuery脚本剖析
1.4.1 jQuery的别名
1.4.2 jQuery语句剖析
1.5 HTML代码，也称为“DOM”
1.6 如果选择接受jQuery
第2章 选择、修饰和增强
2.1 确保页面已经就绪
2.2 选择：jQuery的核心
2.2.1 简单选择
2.2.2 缩小选择范围
2.2.3 测试选择
2.2.4 筛选器
2.2.5 使用多个选择器
2.2.6 用好选择器
2.3 修饰：用jQuery处理CSS
2.3.1 读取CSS属性
2.3.2 设置CSS属性
2.3.3 类
2.4 增强：用jQuery添加特效
2.4.1 隐藏和显示元素
2.4.2 渐进增强
2.4.3 添加新元素
2.4.4 删除现有元素
2.4.5 修改内容
2.4.6 基本动画：用Flair隐藏和显示
2.4.7 回调函数
2.5 几条小技巧
2.5.1 鼠标悬停时突出显示
2.5.2 小道消息揭秘器
2.6 到下一课之前
第3章 动画、滚动和调整大小
3.1 动画
3.1.1 让CSS属性动起来
3.1.2 颜色动画
3.1.3 缓冲（Easing）
3.1.4 高级缓冲
3.1.5 有活力的内容窗格
3.1.6 动画队列
3.1.7 将操作链接在一起
3.1.8 暂停链
3.1.9 让导航动起来
3.1.10 动画导航，再来一次
3.1.11 jQuery UJ库
3.1.12 动起来
3.2 滚动
3.2.1 scroll事件
3.2.2 浮动导航
3.2.3 滚动文档
3.2.4 自定义滚动条
3.3 调整大小
3.3.1 reSlZe事件
3.3.2 可以调整大小的元素
3.4 我们就是这样滚动和动画的
第4章图片和幻灯片
4.1 Lightbox
4.1.1 自定义Lightbox
4.1.2 用console log排除故障
4.1.3 ColorBox：一个Lightbox插件
4.2 用Jcrop裁剪图片
4.3 幻灯片
4.3.1 交叉渐变幻灯片
4.3.2 滚动幻灯片
4.3.3 iPhoto式的幻灯片小部件
4.4 展望未来
第5章 菜单、选项卡、工具提示和面板
5.1 菜单
5.1.1 可展开／可折叠的菜单
5.1.2 开启／关闭指示器
5.1.3 悬停时展开菜单
5.1.4 下拉菜单
5.2 伸缩菜单
5.2.1 简单的伸缩菜单
5.2.2 多级伸缩菜单
5.2.3 jQuery UI Accordion
5.3 选项卡
5.3.1 基本的选项卡
5.3.2 jQuery UI选项卡
5.4 面板和窗格
5.4.1 下滑式登录表单
5.4.2 滑动覆盖
5.5 工具提示
5.5.1 简单样式的工具提示
5.5.2 高级工具提示和对话框
5.6 本章小结
第6章 结构、Ajax、交互性
6.1 结构和最佳做法
6.1.1 更干净的jQuery
6.1.2 客户端模板处理
6.1.3 浏览器嗅探（正在淘汰）
6.2 Ajax速成
6.2.1 什么是Ajax
6.2.2 加载远程HTML
6.2.3 用HOax增强超级链接
6.2.4 用选择器挑选HTML
6.2.5 高级加载
6.2.6 为未来做准备：on和off
6.2.7 用$.getJSON获取数据
6.2.8 客户端Twitter搜索器
6.2.9 jQueDrAjax骨干
6.2.10 公共Ajax设置
6.2.11 用$.getScript加载外部脚本
6.2.12 GET请求和POST请求
6.2.13 jQlJery的Ajax事件
6.3 交互性：使用Ajax
6.3.1 Aiax图片库
6.3.2 给图片加标记
6.4 Ajax忍者？检查一下！
第7章 表单、控件和对话框
7.1 表单
7.1.1 简单表单验证
7.1.2 用validation插件进行表单验证
7.1.3 最大长度指示器
7.1.4 表单提示
7.1.5 检查所有复选框
7.1.6 内联编辑
7.1.7 自动完成
7.1.8 星级评分控件
7.2 控件
7.2.1 按钮
7.2.2 日期选取器
7.2.3 滑动条
7.2.4 拖放
7.2.5 jQuery UI sortable
7.2.6 进度条
7.3 对话框和通知
7.3.1 简单模态对话框
7.3.2 jQuery UI对话框
7.3.3 Growl风格的通知
7.3.4 l—up通知
7.4 我们有了好的表单
第8章 列表、树和表格
8.1 列表
8.1.1 jQaery UI Selectable
8.1.2 列表排序
8.1.3 操纵选择框列表
8.2 树
8.2.1 可以展开的树
8.2.2 事件委托
8.3 表格
8.3.1 固定表头
8.3.2 重复表头
8.3.3 数据网格
8.3.4 用复选框选择行
84 我们成就了甲级名人
第9章 插件、主题和高级话题
9.1 插件
9.2 高级话题
9.2.1 扩展jQuery
9.2.2 事件
9.3 jQuery忍者的其他技能
9.3.1 避免冲突
9.3.2 动画排队和出队
9.3.3 将JavaScript对象按jQuery对象处理
9.4 更换主题
9.4.1 使用主题库的主题
9.4.2 更换自己的主题
9.4.3 让自己的组件也支持主题
9.5 jQuery Mobile
9.6 Star Trackr！：尾声
附录A 参考资料
附录B JavaScript的点滴
附录C 插件辅助程序
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JQUERY从菜鸟到忍者（第二版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Fiddler调试权威指南
第1章　引言　1
1.1　起源　1
关于本书　4
1.2　快速入门　5
1.2.1　基本概念　5
1.2.2　使用场景　7
第2章　探索Fiddler　9
2.1　入门　9
2.1.1　系统需求　9
2.1.2　安装Fiddler　10
2.1.3　更新Fiddler　10
2.1.4　卸载Fiddler　11
2.2　FIDDLER用户界面　11
2.2.1　Web Sessions列表　12
2.2.2　Web Session上下文菜单　15
2.3　FIDDLER的主菜单　19
2.3.1　File菜单　19
2.3.2　Edit菜单　20
2.3.3　Rules菜单　21
2.3.4　Tools菜单　22
2.3.5　View菜单　23
2.3.6　Help菜单　24
2.4　FIDDLER的工具栏　25
Fiddler的状态栏　27
2.5　QUICKEXEC　27
2.6　应用热键　31
2.7　统计选项卡　32
2.8　FILTERS选项卡　34
2.9　TIMELINE时间轴选项卡　38
2.9.1　模式：Timeline(时间轴)　39
2.9.2　模式：Client Pipe Map(客户端管道映射)　40
2.9.3　模式：Server Pipe Map(服务端管道映射)　40
2.9.4　使用时间轴进行性能分析　41
2.10　自动响应(AUTORESPONDER)选项卡　41
2.10.1　指定匹配条件　42
2.10.2　指定Action Text　44
2.10.3　对Action Text应用正则表达式　45
2.10.4　拖放支持　46
2.10.5　FARX文件　47
2.11　TEXTWIZARD　47
字符编码　49
2.12　COMPOSER选项卡　50
2.13　Log选项卡　54
2.14　Find Session窗口　54
2.15　Hosts Remapping工具　56
第3章　技巧和概念　57
3.1　使用Fiddler重定向数据流　57
重定向请求的功能　59
3.2　Session比较　60
3.3　断点调试　62
第4章　配置Fiddler和客户端　65
4.1　Fiddler选项　65
4.1.1　常用选项　65
4.1.2　HTTPS选项　66
4.1.3　扩展选项　67
4.1.4　连接选项　68
4.1.5　外观选项　69
4.2　HEADER编码设置　70
4.3　PREFERENCES(偏好)　71
4.4　配置客户端　72
4.4.1　捕获浏览器的数据流　72
4.4.2　从其他应用中捕获数据流　74
4.4.3　通过服务捕获数据流　76
4.4.4　捕捉“回路”数据流　76
4.4.5　在Max OSX上运行Fiddler　79
4.4.6　从其他计算机捕捉数据流　81
4.4.7　从设备捕捉数据流　82
4.4.8　使用Fiddler作为反向代理　84
4.4.9　挂接到上游代理服务器　85
4.4.10　挂接到SOCKS/TOR　86
4.4.11　VPN、Modem和网络共享　87
4.4.12　DirectAccess　87
4.5　内存使用和Fiddler的“位数”　87
4.6　缓存和流式数据流　89
4.6.1　请求缓存　89
4.6.2　响应缓存　90
4.6.3　COMET　90
4.7　HTML5 WEBSOCKETS　91
4.8　Fiddler和HTTPS　92
信任Fiddler根证书　94
4.9　为HTTPS解密配置客户端　97
4.9.1　浏览器　97
4.9.2　HTTPS和设备　98
4.9.3　HTTPS服务器有Bug　99
4.9.4　证书生效　100
4.9.5　Certificate Pinning　100
4.10　Fiddler和FTP　101
4.11　Fiddler和Web认证　102
4.11.1　HTTP身份认证　102
4.11.2　Fiddler中的自动身份认证　103
4.11.3　身份认证问题　104
4.11.4　HTTPS客户端证书　105
第5章　Inspectors　107
5.1　概览　107
5.2　授权和认证(AUTH)　108
5.3　缓存(CACHING)　110
5.4　COOKIES　110
5.5　HEADERS　112
5.5.1　上下文菜单　113
5.5.2　快捷键　113
5.5.3　编辑　114
5.6　HEXVIEW　114
5.7　IMAGEVIEW　116
5.8　JSON　117
5.9　RAW　118
5.10　SYNTAXVIEW　119
5.11　TEXTVIEW　120
5.12　TRANSFORMER　121
5.12.1　响应的编码的一些背景知识　121
5.12.2　使用Transformer添加或删除编码方式　122
5.12.3　删除编码的其他方式　123
5.13　WEBFORMS　124
5.14　WEBVIEW　125
5.15　XML　126
第6章　扩展　127
6.1　概览　127
6.1.1　流行的第三方扩展　127
6.1.2　我创建的扩展　128
6.2　JAVASCRIPT FORMATTER　128
6.3　GALLERY　129
全屏视图　130
6.4　CONTENT BLOCKER　131
6.5　TRAFFIC DIFFER　132
6.6　FIDDLERSCRIPT编辑器　133
6.6.1　FiddlerScript选项卡　133
6.6.2　ClassView侧边栏　134
6.6.3　Fiddler2 ScriptEditor　135
6.7　SAZCLIPBOARD　136
6.8　ANYWHERE　136
第7章　保存、导入和导出数据流　138
7.1　Session的ARCHIVE ZIP(SAZ)文件　138
保护SAZ文件　139
7.2　FIDDLERCAP　140
7.2.1　Capture窗口　141
7.2.2　Capture Options窗口　141
7.2.3　Tools窗口　143
7.3　Fiddler的Viewer模式　143
7.4　导出和导出Session　144
7.4.1　导入格式　145
7.4.2　导出格式　145
第8章　FiddlerScript　150
8.1　使用FiddlerScript扩展Fiddler　150
8.1.1　关于FiddlerScript　150
8.1.2　编辑FiddlerScript　152
8.2　FIDDLERSCRIPT函数　153
8.2.1　Session处理函数　153
8.2.2　常用函数　154
8.3　FIDDLERSCRIPT及自动化工具　155
8.4　扩展Fiddler的UI菜单　157
8.4.1　扩展Tools菜单　158
8.4.2　扩展Web Session的上下文菜单　159
8.4.3　扩展Rules菜单　159
8.4.4　创建一个顶级菜单　162
8.5　扩展Fiddler UI——在Web Session列表中添加列　163
8.5.1　使用属性绑定列　163
8.5.2　通过AddBoundColumn绑定列　165
8.6　FIDDLEROBJECT函数　167
8.7　引用程序集ASSEMBLIES　169
8.8　示例脚本　170
8.8.1　请求脚本　171
8.8.2　响应脚本　173
8.8.3　更多例子　174
第9章　通过.NET代码扩展Fiddler　175
9.1　通过.NET扩展Fiddler　175
9.1.1　项目需求和设置　175
9.1.2　调试扩展　176
9.1.3　扩展的最佳实践　176
9.2　和Fiddler对象交互　180
9.2.1　Web Session列表　180
9.2.2　Session对象　183
9.2.3　向TextWizard发送字符串　189
9.2.4　记录日志　190
9.2.5　和FiddlerScript引擎交互　191
9.3　Preferences编程　191
9.3.1　Preference命名　192
9.3.2　IFiddlerPreferences接口　192
9.3.3　保存和删除Preferences　193
9.3.4　检索Preferences　193
9.3.5　观察Preference变化　193
9.4　构建扩展安装程序　195
9.5　构建Inspectors　198
监测Session对象　202
9.6　处理HTTP压缩和分块传输　203
9.6.1　对响应体副本解码　204
9.6.2　使用GetRe*BodyAsString方法　205
9.6.3　使用utilDecode*方法　205
9.6.4　Inspector程序集　206
9.7　构建扩展　206
9.7.1　理解线程　208
9.7.2　集成到QuickExec　208
9.7.3　示例扩展　209
9.7.4　扩展的程序集　214
9.8　构建导入导出转换器(TRANSCODERS)　215
9.8.1　处理选项　217
9.8.2　不止是文件　219
9.8.3　示例Transcoder　219
第10章　FiddlerCore　224
10.1　概述　224
10.1.1　合法性　225
10.1.2　FiddlerCore入门　225
10.1.3　编译示例应用　225
10.2　FIDDLERAPPLICATION类　228
10.2.1　FiddlerApplication事件　228
10.2.2　FiddlerApplication提供的方法　232
10.2.3　FiddlerApplication的属性和变量　233
10.2.4　Fiddler API的其余部分　234
10.3　FIDDLERCORE的常见任务　234
附录A　故障排除　238
A.1　缺失数据流　238
A.2　安全软件的干扰　239
A.3　代理设置被破坏　240
A.4　重新设置Fiddler　241
A.5　解决证书问题　241
A.6　清除Fiddler所有运行痕迹　242
A.7　Fiddler崩溃信息提示关于“Configuration System”　243
A.8　Fiddler会随机停止捕捉数据流　243
A.9　Fiddler在流式发送RPC-over-HTTPS的数据流时“抛锚”　244
附录B　命令行语义　246
B.1　选项标志　246
B.2　实例　247
附录C　Session标志位　248
C.1　Session显示标志位　248
C.2　断点和编辑标志位　250
C.3　网络标志位　251
C.4　认证标志位　252
C.5　客户端信息标志位　253
C.6　性能模拟标志位　254
C.7　HTTPS标志位　254
C.8　Request Composer标志位　257
C.9　其他标志位　257
附录D　Preferences　261
D.1　网络Preferences　261
D.2　HTTPS Preferences　266
D.3　Fiddler UI Preferences　269
D.4　FiddlerScript Preferences　274
D.5　TextWizard Preferences　275
D.6　Request Composer Preferences　275
D.7　路径配置　276
D.8　其他标志位　277
D.9　扩展Preferences　279
D.10　Raw Inspector　279
D.11　JavaScript Formatter　280
D.12　证书生成器(Certificate Maker)　280
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Fiddler调试权威指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>jQuery Cookbook中文版
第1章jQuery基础
1.1在HTML页面中包含jQuery程序库代码
1.2在DOM加载之后、整个页面加载之前执行jQuery／JavaScript代码
1.3用选择器和jQuery函数选择DOM元素
1.4在指定上下文中选择DOM元素
1.5过滤DOM元素包装器集
1.6查找当前选择包装器集中的后代元素
1.7返回破坏性修改之前的选择
1.8将前一个选择集包含到当前选择集
1.9根据当前上下文遍历DOM获得新的DOM元素集
1.10创建、操作和插入DOM元素
1.11删除DOM元素
1.12替换DOM元素
1.13克隆DOM元素
1.14获取、设置和删除DOM元素属性
1.15获取和设置HTML内容
1.16获取和设置文本内容
1.17在不造成全局冲突的情况下使用$别名
第2章用jQuery选择元素
2.1仅选择子元素
2.2选择特定的兄弟元素
2.3按照索引顺序选择元素
2.4选择当前动画元素
2.5根据包含的内容选择元素
2.6选择不匹配的元素
2.7根据可见性选择元素
2.8根据属性选择元素
2.9按照类型选择表单元素
2.10选择有具体特性的元素
2.11使用上下文参数
2.12创建一个子定义过滤器选择器
第3章超越基础
3.1循环读取选择结果集合
3.2将选择集缩减为某个特定项
3.3将选中的jQuery对象转换为原始DOM对象
3.4获得选择集中某个元素的索引
3.5从现有数组中建立独特的数组
3.6在选择集合的子集上执行某项操作
3.7配置jQuery，避免与其他程序库冲突
3.8用插件增加功能
3.9确定使用的到底是哪一个查询
第4章jQuery工具
4.1用jQuery.suppoert检测功能
4.2用jQuery.each循环读取数组和对象
4.3用jQuery.grep过滤数组
4.4用jQuery.map循环修改数组元素
4.5用jQuery.merge合并两个数组
4.6用jQuery.unique过滤重复的数组元素
4.7用jQuery.isFunction测试回调函数
4.8用jQuery.trim从字符串或者表单值中删除空格
4.9用jQuery.data将对象和数据附加到DOM中
4.10用jQuery.extend扩展对象
第5章更快、更简单、更有趣
5.1这不是jQuery，而是JavaScript
5.2$（this）出了什么问题
5.3删除多余的重复
5.4格式化jQuery链
5.5从其他程序库借用代码
5.6编写自定义迭代器
5.7切换属性
5.8寻找瓶颈
5.9缓存jQuery对象
5.10编写更快的选择器
5.11更快地加载表格
5.12编写基本的循环代码
5.13减少名称查找
5.14用.innerHTML更快地更新DOM
5.15分解方法链
5.16这是jQuery的缺陷吗
5.17跟踪jQuery
5.18减少服务器请求的数量
5.19编写无干扰式的JavaScript
5.20将jQuery用于渐进增强
5.21使页面易于访问
第6章尺寸
6.1求取窗口和文档的尺寸
6.2求取元素的尺寸
6.3求取元素的偏移量
6.4滚动元素使其可见
6.5确定元素是否在视区内
6.6将元素放在视区的中央
6.7在当前位置绝对定位一个元素
6.8按照与另一个元素的相对位置定位元素
6.9根据浏览器宽度切换样式表
第7章特效
7.1滑动和淡入／淡出元素
7.2通过向上滑动使元素可见
7.3创建水平折叠特效
7.4同时滑动和淡入／淡出元素
7.5应用连续的特效
7.6确定元素目前是否处于动画中
7.7停止和复位动画
7.8为特效使用自定义的缓动方法
7.9禁用所有特效
7.10将jQueryUI用于高级特效
第8章事件
8.1将一个事件处理程序用于许多事件
8.2对不同的数据重用处理程序函数
8.3删除整组事件处理程序
8.4触发特定事件处理程序
8.5向事件处理程序传递动态数据
8.6尽早访问元素（在document.ready之前）
8.7停止处理程序执行循环
8.8在使用event.target时获取正确的元素
8.9避免多个hover（）动画并行显示
8.10使事件处理程序适用于新添加的元素
第9章高级事件
9.1在动态加载时运行jQuery
9.2加速全局事件触发
9.3创建自己的事件
9.4让事件处理程序提供需要的数据
9.5创建事件驱动插件
9.6在调用jQuery方法时得到通知
9.7将对象方法作为事件监听器使用
第10章从头开始增强HTML表单
10.1在页面加载时将焦点放在一个文本输入字段上
10.2禁用和启用表单元素
10.3自动选择单选按钮
10.4用专用的链接选择（反选）所有复选框
10.5用一个切换开关选中（反选）所有复选框
10.6添加和删除Select元素中的选项
10.7根据字符计数自动跳到下一个控件
10.8显示剩余字符串计数
10.9限制文本输入字段内容为特定的字符
10.10用Ajax提交表单
10.11验证表单
第11章用插件增强HTML表单
11.1验证表单
11.2创建固定格式的输入字段
11.3自动补全文本字段
11.4选择一个取值范围
11.5输入范围约束值
11.6在后台上传文件
11.7限制输入文本的长度
11.8在输入字段上方显示标签
11.9根据内容增大输入字段
11.10选择日期
第12章jQuery插件
12.1从哪里寻找jQuery插件
12.2何时应该编写一个jQuery插件
12.3编写第一个jQuery插件
12.4向插件传递选项
12.5在插件中使用$快捷方式
12.6在插件中包含私有函数
12.7支持元数据插件
12.8为插件添加静态函数
12.9用Qunit对插件进行单元测试
……
第13章从头开始创建界面组件
第14章使用jQueryUI构建用户界面
第15章jQueryUI主题
第16章jQuery、Ajax、数据格式：HTML、XML、JSON、JSONP
第17章在大项目中使用jQuery
第18章单元测试
后记
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>jQuery Cookbook中文版
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5 Canvas游戏开发实战
html5 canvas游戏开发实战》
前　　言
第一部分　准备工作篇
第1章　准备工作 / 2
1.1　html5介绍 / 2
1.1.1　什么是html5 / 2
1.1.2　html5的新特性 / 2
1.2　canvas简介 / 5
1.2.1　canvas标签的历史 / 5
1.2.2　canvas的定义和用法 / 6
1.2.3　如何使用canvas来绘图 / 6
1.2.4　canvas的限制 / 7
1.3　开发与运行环境的准备 / 7
1.3.1　浏览器的支持 / 7
1.3.2　准备一个本地的服务器 / 8
1.4　开发工具的选择 / 8
1.5　测试与上传代码 / 12
1.6　javascript中的面向对象 / 13
1.6.1　类 / 13
1.6.2　静态类 / 16
.1.6.3　继承 / 16
1.7　小结 / 17
第二部分　基础知识篇
第2章　canvas基本功能 / 20
2.1　绘制基本图形 / 20
2.1.1　画线 / 20
2.1.2　画矩形 / 22
2.1.3　画圆 / 24
2.1.4　画圆角矩形 / 26
2.1.5　擦除canvas画板 / 27
2.2　绘制复杂图形 / 28
2.2.1　画曲线 / 28
2.2.2　利用clip在指定区域绘图 / 30
2.2.3　绘制自定义图形 / 31
2.3　绘制文本 / 32
2.3.1　绘制文字 / 32
2.3.2　文字设置 / 33
2.3.3　文字的对齐方式 / 38
2.4　图片操作 / 41
2.4.1　利用drawimage绘制图片 / 41
2.4.2　利用getimagedata和putimagedata绘制图片 / 45
2.4.3　利用createimagedata新建像素 / 47
2.5　小结 / 49
第3章　canvas高级功能 / 50
3.1　变形 / 50
3.1.1　放大与缩小 / 50
3.1.2　平移 / 53
3.1.3　旋转 / 54
3.1.4　利用transform矩阵实现多样化的变形 / 56
3.2　图形的渲染 / 65
3.2.1　绘制颜色渐变效果的图形 / 65
3.2.2　颜色合成之globalcompositeoperation属性 / 67
3.2.3　颜色反转 / 69
3.2.4　灰度控制 / 70
3.2.5　阴影效果 / 71
3.3　自定义画板 / 72
3.3.1　画板的建立 / 72
3.3.2　canvas画布的导出功能 / 79
3.4　小结 / 81
第4章　lufylegend开源库件 / 82
4.1　lufylegend库件简介 / 82
4.1.1　工作原理 / 82
4.1.2　库件使用流程 / 83
4.2　图片的加载与显示 / 84
4.2.1　图片显示举例 / 84
4.2.2　lbitmapdata对象 / 86
4.2.3　lbitmap对象 / 87
4.3　层的概念 / 88
4.4　使用lgraphics对象绘图 / 90
4.4.1　绘制矩形 / 90
4.4.2　绘制圆 / 91
4.4.3　绘制任意多边形 / 92
4.4.4　使用canvas的原始绘图函数进行绘图 / 93
4.4.5　使用lsprite对象进行绘图 / 94
4.4.6　使用lgraphics对象绘制图片 / 95
4.5　文本 / 101
4.5.1　文本属性 / 101
4.5.2　输入框 / 102
4.6　事件 / 103
4.6.1　鼠标事件 / 103
4.6.2　循环事件 / 104
4.6.3　键盘事件 / 105
4.7　按钮 / 106
4.8　动画 / 108
4.9　小结 / 113
第三部分　开发实战篇
第5章　从简单做起—“石头剪子布”游戏 / 116
5.1　游戏分析 / 116
5.2　必要的javascript知识 / 117
5.2.1　随机数 / 117
5.2.2　条件分支 / 117
5.3　分层实现 / 117
5.4　各个层的基本功能 / 119
5.4.1　基本画面显示 / 119
5.4.2　结果层的显示 / 126
5.4.3　控制层的显示 / 127
5.5　出拳 / 129
5.6　结果判定 / 131
5.7　小结 / 137
第6章　开发“俄罗斯方块”游戏 / 138
6.1　游戏分析 / 138
6.2　必要的javascript知识 / 138
6.3　游戏标题画面显示 / 139
6.4　向游戏里添加方块 / 141
6.5　控制方块的移动 / 152
6.5.1　键盘事件 / 152
6.5.2　触屏事件 / 155
6.6　方块的消除和得分的显示 / 157
6.7　小结 / 160
第7章　开发“是男人就下一百层”游戏 / 161
7.1　游戏分析 / 161
7.2　游戏标题画面显示 / 161
7.3　读取图片与背景显示 / 162
7.4　添加一个静止的地板 / 167
7.5　添加游戏主角 / 170
7.5.1　让游戏主角出现在画面上 / 170
7.5.2　通过键盘事件来控制游戏主角的移动 / 177
7.5.3　通过触屏事件来控制游戏主角的移动 / 178
7.6　添加多种多样的地板 / 179
7.6.1　会消失的地板 / 179
7.6.2　带刺的地板 / 181
7.6.3　带有弹性的地板 / 182
7.6.4　向左和向右移动的地板 / 184
7.7　游戏数据的显示 / 187
7.8　游戏结束与重开 / 190
7.9　小结 / 192
第8章　开发射击类游戏 / 193
8.1　游戏分析 / 193
8.2　添加一架可控飞机 / 194
8.2.1　添加一个飞机类 / 194
8.2.2　可控飞机类 / 197
8.3　为飞机添加多样化的子弹 / 203
8.3.1　建立一个子弹类 / 203
8.3.2　单发子弹 / 205
8.3.3　多发子弹 / 207
8.3.4　环形子弹 / 208
8.3.5　反向子弹 / 209
8.4　添加敌机 / 209
8.4.1　建立一个敌机类 / 210
8.4.2　建立一个敌机boss类 / 214
8.5　碰撞检测 / 217
8.5.1　飞机与子弹的碰撞 / 217
8.5.2　我机与敌机的碰撞 / 220
8.6　子弹的变更 / 221
8.6.1　建立一个弹药类 / 222
8.6.2　弹药与我机的碰撞 / 223
8.7　飞机生命值的显示 / 225
8.8　游戏胜利与失败判定 / 226
8.9　小结 / 228
第9章　开发物理游戏 / 229
9.1　box2d简介 / 229
9.2　box2dweb在lufylegend库件中的使用 / 229
9.3　创建各种各样的物体 / 234
9.3.1　矩形物体 / 234
9.3.2　圆形物体 / 237
9.3.3　多边形物体 / 239
9.4　响应鼠标拖拽物体 / 242
9.5　关节（joint） / 243
9.5.1　距离关节（b2distancejointdef） / 243
9.5.2　旋转关节（b2revolutejointdef） / 245
9.5.3　滑轮关节（b2pulleyjointdef） / 247
9.5.4　移动关节（b2prismaticjoint） / 248
9.5.5　齿轮关节（b2gearjoint） / 250
9.5.6　悬挂关节（b2linejoint） / 252
9.5.7　焊接关节（b2weldjoint） / 253
9.5.8　鼠标关节（mouse joint） / 254
9.6　力 / 254
9.7　碰撞检测 / 256
9.8　镜头移动 / 260
9.9　做一个简单的物理游戏 / 263
9.10　小结 / 267
第10章　开发网络游戏 / 268
10.1　http通信 / 268
10.1.1　如何实现http通信 / 268
10.1.2　http通信的弊端 / 275
10.2　socket通信 / 275
10.2.1　区分socket通信和http通信 / 276
10.2.2　服务器端 / 276
10.2.3　客户端 / 281
10.3　利用websocket实现简单的聊天室 / 283
10.4　做一款多人在线的坦克大战 / 293
10.4.1　服务器 / 293
10.4.2　客户端 / 293
10.5　小结 / 307
第四部分　技能提高篇
第11章　提高效率的分析 / 310
11.1　绘图时使用小数的影响 / 310
11.2　drawimage和putimagedata的效率比较 / 311
11.3　区域更新和图片大小对绘图效率的影响 / 311
11.4　图片格式对绘图效率的影响 / 313
11.5　优化代码以提高整体效率 / 314
11.5.1　使用位运算 / 314
11.5.2　少用math静态类 / 316
11.5.3　优化算法 / 319
11.6　小结 / 322
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5 Canvas游戏开发实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node.js+MongoDB+AngularJS Web开发
第1部分  引    言
第1章  介绍Node.js-to-AngularJS套件	3
1.1  了解基本的Web开发框架	3
1.1.1  用户	4
1.1.2  浏览器	4
1.1.3  Web服务器	6
1.1.4  后端服务	6
1.2  了解Node.js-to-AngularJS套件组件	7
1.2.1  Node.js	7
1.2.2  MongoDB	8
1.2.3  Express	9
1.2.4  AngularJS	9
1.3  小结	10
1.4  下一章	10
第2章  JavaScript基础	11
2.1  定义变量	11
2.2  了解JavaScript数据类型	12
2.3  使用运算符	13
2.3.1  算术运算符	13
2.3.2  赋值运算符	14
2.3.3  运用比较和条件运算符	14
2.4  实现循环	16
2.4.1  while循环	17
2.4.2  do/while循环	17
2.4.3  for循环	17
2.4.4  for/in循环	18
2.4.5  中断循环	19
2.5  创建函数	19
2.5.1  定义函数	20
2.5.2  传递变量给函数	20
2.5.3  从函数返回值	20
2.5.4  使用匿名函数	21
2.6  理解变量作用域	22
2.7  使用JavaScript对象	22
2.7.1  使用对象语法	23
2.7.2  创建自定义对象	23
2.7.3  使用原型对象模式	24
2.8  处理字符串	25
2.8.1  合并字符串	26
2.8.2  在字符串中搜索子串	26
2.8.3  在一个字符串中替换单词	27
2.8.4  将字符串分割成数组	27
2.9  使用数组	27
2.9.1  合并数组	28
2.9.2  遍历数组	29
2.9.3  将数组转换为字符串	29
2.9.4  检查数组是否包含某个条目	29
2.9.5  在数组中添加条目和删除条目	30
2.10  添加错误处理	30
2.10.1  try/catch块	30
2.10.2  抛出你自己的错误	31
2.10.3  使用finally	31
2.11  小结	32
2.12  下一章	32
第2部分  学习Node.js
第3章  开始使用Node.js	35
3.1  了解Node.js	35
3.1.1  谁在使用Node.js	35
3.1.2  Node.js的用途	36
3.2  Node.js安装	36
3.2.1  纵观Node.js安装位置	36
3.2.2  验证Node.js可执行文件	37
3.2.3  选择Node.js IDE	37
3.3  使用Node.js包	38
3.3.1  什么是Node封装模块	38
3.3.2  了解Node包注册表	38
3.3.3  使用Node包管理器	38
3.3.4  搜索Node封装模块	39
3.3.5  安装Node封装模块	40
3.3.6  使用package.json	41
3.4  创建Node.js应用程序	43
3.4.1  创建Node.js模块封装	43
3.4.2  将一个Node.js封装模块发布到NPM注册表	45
3.4.3  在Node.js应用程序中使用Node.js封装模块	46
3.5  将数据写入控制台	47
3.6  小结	49
3.7  下一章	49
第4章  在Node.js中使用事件、监听器、定时器和回调	51
4.1  了解Node.js事件模型	51
4.1.1  比较事件回调和线程模型	51
4.1.2  在Node.js中阻塞I/O	52
4.1.3  会话示例	54
4.2  将工作添加到事件队列	54
4.2.1  实现定时器	55
4.2.2  使用nextTick来调度工作	58
4.2.3  实现事件发射器和监听器	59
4.3  实现回调	62
4.3.1  向回调函数传递额外的参数	63
4.3.2  在回调中实现闭包	64
4.3.3  链式回调	65
4.4  小结	66
4.5  下一章	66
第5章  在Node.js中处理数据I/O	67
5.1  处理JSON	67
5.1.1  把JSON转换成JavaScript对象	67
5.1.2  把JavaScript对象转换为JSON	68
5.2  使用Buffer模块缓冲数据	68
5.2.1  了解缓冲数据	69
5.2.2  创建缓冲区	69
5.2.3  写入缓冲区	70
5.2.4  从缓冲区读取	71
5.2.5  确定缓冲区长度	72
5.2.6  复制缓冲区	73
5.2.7  对缓冲区切片	74
5.2.8  拼接缓冲区	75
5.3  使用Stream模块来传送数据	76
5.3.1  Readable流	76
5.3.2  Writable流	78
5.3.3  Duplex流	81
5.3.4  Transform流	82
5.3.5  把Readable流用管道输送到Writable流	84
5.4  用Zlib压缩与解压缩数据	85
5.4.1  压缩和解压缩缓冲区	85
5.4.2  压缩/解压缩流	87
5.5  小结	88
5.6  下一章	88
第6章  从Node.js访问文件系统	89
6.1  同步和异步文件系统调用	89
6.2  打开和关闭文件	90
6.3  写入文件	91
6.3.1  简单文件写入	91
6.3.2  同步文件写入	92
6.3.3  异步写入文件	93
6.3.4  流式文件写入	95
6.4  读取文件	96
6.4.1  简单文件读取	96
6.4.2  同步文件读取	97
6.4.3  异步文件读取	98
6.4.4  流式文件读取	100
6.5  其他文件系统任务	101
6.5.1  验证路径的存在性	101
6.5.2  获取文件信息	102
6.5.3  列出文件	103
6.5.4  删除文件	104
6.5.5  截断文件	105
6.5.6  建立和删除目录	105
6.5.7  重命名文件和目录	106
6.5.8  监视文件更改入	107
6.6  小结	107
6.7  下一章	107
第7章  在Node.js中实现HTTP服务	109
7.1  处理URL	109
7.1.1  了解URL对象	110
7.1.2  解析URL组件	111
7.2  处理查询字符串和表单参数	111
7.3  了解请求、响应和服务器对象	112
7.3.1  http.ClientRequest对象	112
7.3.2  http.ServerResponse对象	114
7.3.3  http.IncomingMessage对象	115
7.3.4  HTTP Server对象	116
7.4  在Node.js中实现HTTP客户端和服务器	118
7.4.1  提供静态文件服务	118
7.4.2  实现动态的GET服务器	120
7.4.3  实现POST服务器	122
7.4.4  与外部源交互	124
7.5  实现HTTPS服务器和客户端	127
7.5.1  创建HTTPS客户端	127
7.5.2  创建HTTPS服务器	129
7.6  小结	129
7.7  下一章	129
第8章  在Node.js中实现套接字服务	131
8.1  了解网络套接字	131
8.2  了解TCP服务器和Socket对象	132
8.2.1  net.Socket对象	132
8.2.2  net.Server对象	135
8.3  实现TCP套接字服务器和客户端	137
8.3.1  实现TCP套接字客户端	138
8.3.2  实现TCP套接字服务器	140
8.4  实现TLS服务器和客户端	143
8.4.1  创建TLS套接字客户端	144
8.4.2  创建TLS套接字服务器	145
8.5  小结	147
8.6  下一章	147
第9章  在Node.js中使用多处理器扩展应用程序	149
9.1  了解process模块	149
9.1.1  了解进程I/O管道	149
9.1.2  了解进程的信号	150
9.1.3  使用process模块控制进程执行	150
9.1.4  从process模块获取信息	151
9.2  实现子进程	153
9.2.1  了解ChildProcess对象	153
9.2.2  使用exec()在另一个进程上执行一个系统命令	154
9.2.3  使用execFile()在另一个进程上执行一个可执行文件	156
9.2.4  使用spawn()在另一个Node.js实例中产生一个进程	157
9.2.5  实现子派生	159
9.3  实现进程集群	161
9.3.1  使用cluster模块	162
9.3.2  了解Worker对象	163
9.3.3  实现一个HTTP集群	164
9.4  小结	166
9.5  下一章	166
第10章  使用其他Node.js模块	167
10.1  使用os模块	167
10.2  使用util模块	169
10.2.1  格式化字符串	169
10.2.2  检查对象类型	170
10.2.3  同步写入输出流	170
10.2.4  将JavaScript对象转换为字符串	170
10.2.5  从其他对象继承功能	171
10.2.6  使用dns模块	172
10.3  小结	174
10.4  下一章	174
第3部分  学习MongoDB
第11章  了解NoSQL和MongoDB	177
11.1  为什么要采用NoSQL	177
11.2  了解MongoDB	178
11.2.1  理解集合	178
11.2.2  了解文档	178
11.3  MongoDB的数据类型	179
11.4  规划你的数据模型	180
11.4.1  使用文档引用来规范化数据	181
11.4.2  使用嵌入式文档反规范化数据	182
11.4.3  使用封顶集合	183
11.4.4  了解原子写操作	184
11.4.5  考虑文件增长	184
11.4.6  识别索引、分片和复制的机会	184
11.4.7  大集合与大量集合的对比	185
11.4.8  决定数据生命周期	185
11.4.9  考虑数据的可用性和性能	185
11.5  小结	186
11.6  下一章	186
第12章  MongoDB入门	187
12.1  构建MongoDB的环境	187
12.1.1  MongoDB的安装	187
12.1.2  启动MongoDB	188
12.1.3  停止MongoDB	189
12.1.4  从shell客户端访问MongoDB	189
12.2  管理用户账户	192
12.2.1  列出用户	192
12.2.2  创建用户账户	193
12.2.3  删除用户	194
12.3  配置访问控制	194
12.3.1  创建用户管理员账户	195
12.3.2  打开身份验证	196
12.3.3  创建数据库管理员账户	196
12.4  管理数据库	197
12.4.1  显示数据库清单	197
12.4.2  切换当前数据库	197
12.4.3  创建数据库	197
12.4.4  删除数据库	198
12.4.5  复制数据库	198
12.5  管理集合	199
12.5.1  显示数据库中的集合列表	199
12.5.2  创建集合	199
12.5.3  删除集合	200
12.5.4  在集合中查找文档	201
12.5.5  将文档添加到集合中	201
12.5.6  从集合中删除文档	202
12.5.7  更新集合中的文档	202
12.6  小结	204
12.7  下一章	204
第13章  MongoDB和Node.js入门	205
13.1  把MongoDB的驱动程序添加到Node.js	205
13.2  从Node.js连接到MongoDB	206
13.2.1  了解写入关注	206
13.2.2  了解Server对象	206
13.2.3  通过Client对象连接到MongoDB	207
13.2.4  通过一个连接字符串连接到MongoDB	210
13.3  了解用在MongoDB Node.js驱动程序中的对象	211
13.3.1  了解Db对象	212
13.3.2  了解Admin对象	213
13.3.3  了解Collection对象	214
13.3.4  了解Cursor对象	215
13.4  访问和操作数据库	216
13.4.1  列出数据库	217
13.4.2  创建数据库	217
13.4.3  删除数据库	217
13.4.4  创建、列出和删除数据库实例	218
13.4.5  获取MongoDB服务器的状态	219
13.5  访问和操作集合	220
13.5.1  列出集合	220
13.5.2  创建集合	221
13.5.3  删除集合	221
13.5.4  创建、列出和删除集合的示例	221
13.5.5  获取集合信息	222
13.6  小结	223
13.7  下一章	223
第14章  从Node.js操作MongoDB文档	225
14.1  了解数据库更改选项	225
14.2  了解数据库更新运算符	226
14.3  将文档添加到集合	227
14.4  从集合获取文档	229
14.5  更新集合中的文档	230
14.6  原子地修改文档的集合	232
14.7  保存集合中的文档	234
14.8  使用upsert往集合中插入文档	235
14.9  从集合中删除文档	236
14.10  从集合中删除单个文档	238
14.11  小结	240
14.12  下一章	240
第15章  从Node.js访问MongoDB的文档	241
15.1  介绍数据集	241
15.2  了解query对象	242
15.3  了解查询options对象	243
15.4  查找特定文档集合	244
15.5  清点文档数量	247
15.6  对结果集进行限制	249
15.6.1  按大小限制结果	249
15.6.2  限制对象返回的字段	250
15.6.3  对结果进行分页	252
15.7  对结果集进行排序	253
15.8  查找不同的字段值	255
15.9  对结果进行分组	256
15.10  通过聚合结果来应用MapReduce	259
15.10.1  了解aggregate()方法	259
15.10.2  使用聚合框架运算符	260
15.10.3  实现聚合表达式运算符	261
15.10.4  聚合的例子	262
15.11  小结	263
15.12  下一章	264
第16章  利用Mongoose来使用结构化模式与验证	265
16.1  了解Mongoose	265
16.2  利用Mongoose连接到MongoDB数据库	266
16.3  定义模式	267
16.3.1  了解路径	268
16.3.2  创建一个模式定义	268
16.3.3  把索引添加到一个模式	269
16.3.4  实现字段的唯一性	269
16.3.5  强制字段的必需性	270
16.3.6  添加Schema对象的方法	270
16.3.7  在words数据库上实现一个模式	270
16.4  编译模型	271
16.5  了解Query对象	272
16.5.1  设置查询数据库操作	273
16.5.2  设置查询数据库操作选项	274
16.5.3  设置查询运算符	275
16.6  了解Document对象	276
16.7  利用Mongoose查找文档	278
16.8  利用Mongoose添加文档	280
16.9  利用Mongoose更新文档	281
16.9.1  保存文档更改	282
16.9.2  更新单个文档	283
16.9.3  更新多个文档	284
16.10  利用Mongoose删除文档	286
16.10.1  删除单个文档	286
16.10.2  删除多个文档	287
16.11  利用Mongoose聚合文档	288
16.12  使用验证框架	291
16.13  实现中间件函数	293
16.14  小结	295
16.15  下一章	295
第17章  高级MongoDB概念	297
17.1  添加索引	297
17.2  使用封顶集合	299
17.3  应用复制	300
17.3.1  复制策略	302
17.3.2  部署一个副本集	302
17.4  实施分片	303
17.4.1  分片服务器类型	304
17.4.2  选择一个分片键	305
17.4.3  选择一种分区方法	306
17.4.4  部署一个分片的MongoDB集群	307
17.5  实现一个GridFS Store	310
17.5.1  在Node.js实现Grid对象	311
17.5.2  在Node.js实现GridStore对象	313
17.6  修复MongoDB数据库	315
17.7  备份MongoDB	316
17.8  小结	317
17.9  下一章	317
第4部分  使用Express使生活更轻松
第18章  在Node.js中实现Express	321
18.1  Express入门	321
18.1.1  配置Express设置	321
18.1.2  启动Express服务器	322
18.2  配置路由	323
18.2.1  实现路由	323
18.2.2  在路由中应用参数	324
18.3  使用Request对象	328
18.4  使用Response对象	330
18.4.1  设置标头	330
18.4.2  设置状态	331
18.4.3  发送响应	331
18.4.4  发送JSON响应	333
18.4.5  发送文件	335
18.4.6  发送下载响应	336
18.4.7  重定向响应	336
18.5  实现一个模板引擎	337
18.5.1  定义一个模板引擎	338
18.5.2  加入本地对象	338
18.5.3  创建模板	339
18.5.4  在响应中呈现模板	340
18.6  小结	342
18.7  下一章	342
第19章  实现Express中间件	343
19.1  了解中间件	343
19.1.1  在全局范围内把中间件分配给某个路径	344
19.1.2  把中间件分配到单个路由	345
19.1.3  添加多个中间件函数	345
19.2  使用query中间件	345
19.3  提供静态文件服务	346
19.4  处理POST正文数据	348
19.5  发送和接收cookie	349
19.6  实现会话	350
19.7  应用基本的HTTP身份验证	352
19.8  实现会话身份验证	354
19.9  创建自定义中间件	356
19.10  小结	357
19.11  下一章	357
第5部分  学习AngularJS
第20章  AngularJS入门	361
20.1  为什么选择AngularJS	361
20.2  了解AngularJS	362
20.2.1  模块	362
20.2.2  作用域和数据模型	363
20.2.3  具有模板和指令的视图	363
20.2.4  表达式	363
20.2.5  控制器	363
20.2.6  数据绑定	364
20.2.7  服务	364
20.2.8  依赖注入	364
20.2.9  职责分离	364
20.3  AngularJS生命周期概述	365
20.3.1  引导阶段	365
20.3.2  编译阶段	365
20.3.3  运行时数据绑定阶段	366
20.4  将AngularJS与现有的JavaScript和jQuery整合	366
20.5  将AngularJS添加到Node.js的环境	367
20.6  在HTML文档中引导AngularJS	367
20.7  使用全局API	368
20.8  创建基本的AngularJS应用程序	369
20.8.1  加载AngularJS库和你的主模块	370
20.8.2  定义AngularJS应用程序根元素	370
20.8.3  将控制器添加到模板	370
20.8.4  实现作用域模型	371
20.9  小结	372
20.10  下一章	372
第21章  了解AngularJS模块和依赖注入	373
21.1  模块和依赖注入概述	373
21.1.1  了解模块	373
21.1.2  依赖注入	374
21.2  定义AngularJS模块	374
21.2.1  创建AngularJS Module对象	374
21.2.2  使用配置块	375
21.2.3  使用运行块	375
21.2.4  把提供器添加到AngularJS模块	376
21.3  实现依赖注入	377
21.4  小结	379
21.5  下一章	380
第22章  把作用域实现为数据模型	381
22.1  了解作用域	381
22.1.1  根作用域和应用程序之间的关系	381
22.1.2  作用域和控制器之间的关系	382
22.1.3  作用域和模板之间的关系	383
22.1.4  作用域和后端服务器数据之间的关系	385
22.1.5  作用域的生命周期	385
22.2  实现作用域层次结构	387
22.3  发出和广播活动	389
22.4  小结	392
22.5  下一章	393
第23章  使用AngularJS模板来创建视图	395
23.1  了解模板	395
23.2  使用表达式	396
23.3  使用过滤器	399
23.3.1  使用内置过滤器	400
23.3.2  使用过滤器来实现排序和过滤	402
23.4  创建自定义过滤器	405
23.5  小结	406
23.6  下一章	407
第24章  在AngularJS视图中实现指令	409
24.1  了解指令	409
24.2  使用内置指令	409
24.2.1  支持AngularJS功能的指令	410
24.2.2  扩展表单元素的指令	411
24.2.3  把模型绑定到页面元素的指令	414
24.2.4  把页面事件绑定到控制器的指令	418
24.3  创建你自己的指令来扩展HTML	420
24.3.1  定义指令视图模板	421
24.3.2  限制指令行为	422
24.3.3  更换模板元素	423
24.3.4  转置外部作用域	423
24.3.5  配置指令的作用域	423
24.3.6  操纵DOM的链接功能	425
24.3.7  添加一个控制器到指令	426
24.3.8  创建自定义指令	426
24.4  小结	428
24.5  下一章	429
第25章  在Web应用程序中实现AngularJS服务	431
25.1  了解AngularJS服务	431
25.2  使用内置的服务	431
25.2.1  使用$http服务发送HTTP的GET和PUT请求	432
25.2.2  使用$cacheFactory服务	436
25.2.3  使用$window服务实现浏览器警报	437
25.2.4  使用$cookieStore服务与浏览器cookie交互	437
25.2.5  使用$interval和$timeout服务实现定时器	439
25.2.6  使用$animate服务	440
25.3  创建自定义服务	445
25.3.1  创建value服务	445
25.3.2  创建constant服务	445
25.3.3  创建factory服务	445
25.3.4  创建service服务	446
25.3.5  把服务集成在一个模块中	446
25.4  小结	447
25.5  下一章	447
第6部分  建立实用的Web应用程序组件
第26章  将用户账户添加到你的网站	451
26.1  用到的库	451
26.2  项目的目录结构	451
26.3  定义用户模型	452
26.4  创建服务器	453
26.5  实现路由	454
26.6  实现用户控制器路由	456
26.6.1  实现用户注册路由	456
26.6.2  实现用户登录路由	457
26.6.3  实现获得用户配置文件的路由	457
26.6.4  实现更新用户路由	458
26.6.5  实现删除用户路由	458
26.6.6  完整的用户控制器代码	459
26.7  实现用户和身份验证视图	461
26.7.1  实现signup视图	461
26.7.2  实现index视图	462
26.7.3  实现login视图	463
26.7.4  实现user视图	464
26.7.5  添加CSS代码到样式视图	466
26.8  实现AngularJS模块和控制器	466
26.9  使用社交媒体账户作为身份验证来源	467
26.9.1  添加Passport	467
26.9.2  添加身份验证策略	467
26.9.3  实现应用程序中间件	468
26.9.4  添加已验证身份的用户序列化和反序列化	469
26.9.5  实现路由以使用身份验证	469
26.9.6  使用谷歌验证身份	470
26.10  小结	473
26.11  下一章	473
第27章  添加评论主题页	475
27.1  用到的库	475
27.2  项目的目录结构	475
27.3  定义评论、回复、照片和页面模型	477
27.3.1  定义Page模型	477
27.3.2  定义Photo模型	478
27.3.3  定义CommentThread模型	478
27.4  创建评论服务器	479
27.5  实现路由，以支持查看和添加评论	480
27.6  实现基于模型的控制器路由	481
27.6.1  实现Page模型控制器	481
27.6.2  实现Photo模型控制器	482
27.6.3  实现CommentThread模型控制器	482
27.7  实现照片和评论视图	486
27.7.1  实现照片视图	486
27.7.2  实现评论主题视图	489
27.7.3  实现评论视图	491
27.7.4  添加CSS来设置视图的样式	492
27.8  实现AngularJS模块和控制器来支持评论视图	493
27.8.1  创建一个评论服务	493
27.8.2  实现照片控制器	494
27.8.3  实现页面AngularJS控制器	495
27.8.4  完整的AngularJS应用程序	496
27.9  初始化应用程序	499
27.10  小结	500
27.11  下一章	500
第28章  创建你自己的购物车	501
28.1  项目简介	501
28.2  用到的库	502
28.3  项目的目录结构	502
28.4  定义顾客、产品和订单模式	504
28.4.1  定义地址模式	504
28.4.2  定义账单模式	505
28.4.3  定义产品模式	505
28.4.4  定义数量模式	506
28.4.5  定义订单模式	506
28.4.6  定义顾客模式	506
28.5  创建购物车服务器	508
28.6  实现路由，以支持产品、购物车和订单请求	508
28.7  实现基于模型的控制器路由	509
28.7.1  实现产品模型控制器	509
28.7.2  实现订单模型控制器	510
28.7.3  实现顾客模型控制器	511
28.8  实现购物车和结账视图	513
28.8.1  实现购物视图	513
28.8.2  实现产品视图	515
28.8.3  实现产品页面视图	516
28.8.4  实现购物车视图	516
28.8.5  实现发货视图	518
28.8.6  实现账单视图	519
28.8.7  实现复核视图	521
28.8.8  实现订单视图	523
28.8.9  添加CSS来设置视图的样式	524
28.9  实现AngularJS模块和控制器，以支持购物车视图	526
28.9.1  初始化购物作用域	526
28.9.2  实现辅助函数	527
28.9.3  将物品添加到购物车	527
28.9.4  从购物车删除物品	528
28.9.5  结账	529
28.9.6  设置发货信息	529
28.9.7  验证账单	530
28.9.8  执行购买	530
28.9.9  完整的控制器	531
28.10  初始化应用程序	534
28.11  小结	536
28.12  下一章	536
第29章  构建交互式的Web 2.0应用程序组件	537
29.1  项目简介	537
29.2  用到的库	538
29.3  项目的目录结构	538
29.4  定义项目模型	540
29.5  创建应用程序服务器	540
29.6  实现支持视图的路由	541
29.7  实现选项卡视图	542
29.7.1  创建AngularJS选项卡视图模板	542
29.7.2  定义窗格模板	542
29.7.3  定义卡片模板	542
29.7.4  实现选项卡视图	543
29.7.5  实现AngularJS自定义指令	544
29.7.6  设置卡片视图的样式	545
29.8  实现天气服务视图	546
29.8.1  创建后端天气服务	546
29.8.2  定义天气AngularJS控制器	548
29.8.3  定义天气AngularJS视图	549
29.8.4  设置天气视图的样式	549
29.9  实现可拖动的元素	551
29.9.1  定义可拖动的自定义AngularJS指令	551
29.9.2  在AngularJS视图中实现可拖动的指令	552
29.9.3  设置可拖动视图的样式	552
29.10  实现动态数据访问	553
29.10.1  创建/words路由的Express路由控制器	553
29.10.2  定义表格AngularJS控制器	554
29.10.3  实现表格AngularJS视图	556
29.10.4  设置表格视图的样式	557
29.11  初始化应用程序	558
29.12  小结	560
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node.js+MongoDB+AngularJS Web开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>使用HTML5和Node构建超媒体API
序 ................................................................................. xi
前言 .............................................................................xiii
第1 章 理解超媒体 ........................................................ 1
HTTP、MIME 和超媒体 ........................................................................................2
HTTP 是传输协议 ...........................................................................................2
MIME 是媒体类型标准 ...................................................................................3
超媒体是引擎 ..................................................................................................5
使用超媒体APIs 编写Web 应用 ...........................................................................6
类型封送困局 ..................................................................................................7
超媒体解决方案 ............................................................................................10
识别超媒体：超媒体因子（H-Factors） ...............................................................13
链接因子 .......................................................................................................14
控制因子 .......................................................................................................16
超媒体设计元素 ...................................................................................................19
基本格式 .......................................................................................................20
状态转移 .......................................................................................................23
领域风格 .......................................................................................................25
应用流程 .......................................................................................................28
总结 .....................................................................................................................32
后续内容 ..............................................................................................................33
第2 章 XML 超媒体 .................................................... 35
场景 .....................................................................................................................35
设计Maze XML 媒体类型 ...................................................................................36
识别状态转移 ................................................................................................36
选择基本设计元素 ........................................................................................37
Maze+XML 文档 ...........................................................................................38
示例数据 ..............................................................................................................41
服务器代码 ..........................................................................................................42
集合状态响应 ................................................................................................43
单项状态响应 ................................................................................................43
格子状态响应 ................................................................................................44
退出状态响应 ................................................................................................45
客户端代码 ..........................................................................................................46
迷宫游戏示例 ................................................................................................46
迷宫机器人示例 ............................................................................................51
总结 .....................................................................................................................56
第3 章 JSON 超媒体 ................................................... 57
场景 .....................................................................................................................57
设计Collection+JSON 媒体类型 .........................................................................58
识别状态转移 ................................................................................................58
选择基本设计元素 ........................................................................................59
Collection+JSON 文档...................................................................................60
任务应用语义 ......................................................................................................64
数据模型 .......................................................................................................65
写入模板 .......................................................................................................66
预定义查询 ...................................................................................................67
示例数据 ..............................................................................................................68
任务文档 .......................................................................................................69
设计文档 .......................................................................................................69
服务器代码 ..........................................................................................................70
集合状态响应 ................................................................................................71
条目状态响应 ................................................................................................72
查询状态表示 ................................................................................................73
处理模板写入 ................................................................................................75
客户端代码 ..........................................................................................................77
单页界面任务示例 ........................................................................................77
任务命令行示例 ............................................................................................88
总结 .....................................................................................................................92
第4 章 HTML5 超媒体 ................................................. 95
场景 .....................................................................................................................95
设计Microblog 媒体类型 ....................................................................................96
使用HTML5 表达应用领域语义 ..................................................................96
识别状态转移 ................................................................................................98
选择基本设计元素 ...................................................................................... 103
Microblog 应用语义配置 ............................................................................. 104
示例数据 ............................................................................................................ 110
用户文档 ..................................................................................................... 111
消息文档 ..................................................................................................... 111
关注文档 ..................................................................................................... 111
设计文档 ..................................................................................................... 111
服务器代码 ........................................................................................................ 113
验证用户 ..................................................................................................... 114
注册新用户 ................................................................................................. 115
消息响应 ..................................................................................................... 117
用户响应 ..................................................................................................... 119
客户端代码 ........................................................................................................ 122
POSH 客户端 .............................................................................................. 123
Ajax 风格的QuoteBot 客户端 ..................................................................... 126
总结 ................................................................................................................... 134
第5 章 为超媒体设计编写文档 ................................... 135
要求、遵从性与RFC 2119 ................................................................................ 135
RFC 2119 关键词 ........................................................................................ 136
使用RFC 2119 关键词编写的示例文档 ...................................................... 137
定义遵从性 ................................................................................................. 137
为媒体类型设计编写文档 .................................................................................. 138
一般布局安排 .............................................................................................. 138
为XML 设计编写文档 ................................................................................ 143
为JSON 设计编写文档 ............................................................................... 144
为HTML 设计编写文档 .............................................................................. 146
为应用领域特定信息编写文档 .................................................................... 148
发布媒体类型设计 ...................................................................................... 152
媒体类型的扩展与版本控制 .............................................................................. 152
扩展 ............................................................................................................. 153
版本化 ......................................................................................................... 154
注册媒体类型与链接关系 .................................................................................. 157
媒体类型 ..................................................................................................... 157
链接关系类型 .............................................................................................. 159
设计与实现技巧 ................................................................................................. 162
Joshua Bloch 总结的良好的API 所具有的特征 .......................................... 162
Roy Fielding 的超文本API 准则 ................................................................. 163
Jon Postel 的健壮性原则 ............................................................................. 164
其他考虑 ..................................................................................................... 164
后记 ........................................................................... 167
附录A 参考文献 ........................................................ 169
附录B 补充阅读 ........................................................ 175
附录C Maze+XML 媒体类型 ...................................... 177
附录D Collection+JSON 媒体类型 ............................. 185
附录E 微博HTML 语义配置 ...................................... 197
附录F IANA 媒体类型注册文档 .................................. 207
附录G IETF 链接关系互联网草案............................... 209
附录H 本书所用源代码、软件及其安装说明 ............... 215__
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>使用HTML5和Node构建超媒体API
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5游戏开发进阶指南
第1章  HTML5与JavaScript概要	1
1.1  canvas元素	2
1.1.1  绘制矩形	3
1.1.2  绘制复杂形状或路径	5
1.1.3  绘制文本	7
1.1.4  自定义画笔样式（颜色和纹理）	8
1.1.5  绘制图像	9
1.1.6  平移和旋转	10
1.2  audio元素	11
1.3  image元素	14
1.3.1  图像加载	15
1.3.2  子画面页（精灵图）	15
1.4  动画：计时器和游戏循环	17
1.4.1  requestAnimationFrame	18
1.5  小结	20
第2章  创建基本的游戏世界	21
2.1  基本HTML布局	21
2.2  创建启动画面和主菜单	22
2.3  关卡选择	26
2.4  加载图像	29
2.5  加载关卡	33
2.6  动画	34
2.7  处理鼠标输入	37
2.8  设置游戏阶段	39
2.9  小结	42
第3章  物理引擎基础	43
3.1  Box2D基础	43
3.1.1  引入Box2D	44
3.1.2  定义World变量	45
3.1.3  添加第一个物体：地面	46
3.1.4  绘制世界：调试绘图模式	48
3.1.5  动画	50
3.2  更多的Box2D元素	52
3.2.1  创建矩形物体	52
3.2.2  创建圆形物体	54
3.2.3  创建多边形物体	56
3.2.4  创建多种形状的复杂物体	58
3.2.5  连接物体的接合点	61
3.3  追踪碰撞与破坏	64
3.3.1  接触监听器	65
3.4  绘制角色	68
3.5  小结	71
第4章  物理引擎集成	72
4.1  定义物体	72
4.2  添加Box2D	75
4.3  创建物体	78
4.4  向关卡加入物体	79
4.5  设置Box2D调试绘图	82
4.6  绘制物体	84
4.7  Box2D动画	86
4.8  加载英雄	88
4.9  发射英雄	91
4.10  结束关卡	94
4.11  碰撞损坏	96
4.12  绘制弹弓橡胶带	99
4.13  切换关卡	101
4.14  添加声音	103
4.14.1  添加断裂和反弹的音效	104
4.14.2  添加背景音乐	107
4.15  小结	110
第5章  创建即时战略游戏世界	111
5.1  基本HTML布局	112
5.2  创建启动画面和主菜单	112
5.3  地图与关卡	118
5.4  加载任务简介画面	120
5.5  制作游戏界面	124
5.6  实现地图平移	131
5.7  小结	137
第6章  加入单位	138
6.1  定义单位	138
6.2  第一个物体：主基地	139
6.3  为关卡添加单位	143
6.4  绘制单位	147
6.5  添加星港	150
6.6  添加炼油厂	154
6.7  添加炮塔	157
6.8  添加车辆	160
6.9  添加飞行器	165
6.10  添加地形	170
6.11  选中游戏单位	175
6.12  强调选中的单位	178
6.13  小结	183
第7章  单位智能移动	184
7.1  命令单位	184
7.2  发送和接收命令	186
7.3  执行指令	188
7.4  实现飞行器移动	189
7.5  路径规划	195
7.6  定义寻径格网	196
7.7  实现车辆移动	203
7.8  碰撞检测和导航	207
7.9  将采油车展开为炼油厂	214
7.10  流畅移动	215
7.11  小结	219
第8章  添加更多的游戏元素	220
8.1  实现基本的经济系统	220
8.1.1  设置启动资金	220
8.1.2  实现侧边栏	223
8.1.3  获取资金	225
8.2  购买建筑和单位	226
8.2.1  添加侧边栏按钮	226
8.2.2  启用与禁用侧边栏按钮	229
8.2.3  在星港建造车辆和飞行器	232
8.2.4  从基地建造建筑	241
8.3  结束关卡	249
8.3.1  实现消息对话框	250
8.3.2  实现触发器	254
8.4  小结	259
第9章  添加武器和战斗	261
9.1  实现战斗系统	261
9.1.1  添加炮弹	261
9.1.2  炮塔的战斗指令	269
9.1.3  飞行器的战斗指令	274
9.1.4  车辆的战斗指令	279
9.2  创建智能的敌人	284
9.3  添加战争迷雾	287
9.3.1  定义迷雾对象	287
9.3.2  绘制迷雾	290
9.3.3  禁止在迷雾上建造建筑	293
9.4  小结	295
第10章  完成单人战役	296
10.1  添加音效	296
10.1.1  创建音效	296
10.1.2  命令确认音效	298
10.1.3  消息提示音	301
10.1.4  战斗音效	302
10.2  创建单人战役	303
10.2.1  救援	303
10.2.2  袭击	312
10.2.3  抵抗围攻	318
10.3  小结	329
第11章  WebSocket与多人对战模式	331
11.1  使用Node.js操作WebSocket API	331
11.1.1  浏览器端的WebSocket	331
11.1.2  使用Node.js创建HTTP服务器	334
11.1.3  创建WebSocket服务器	336
11.2  创建多人对战游戏大厅	339
11.2.1  定义多人对战大厅界面	339
11.2.2  游戏房间列表	341
11.2.3  进入和离开房间	345
11.3  启动多人对战游戏	351
11.3.1  定义多人对战关卡	351
11.3.2  加载多人战役关卡	354
11.4  小结	359
第12章  多人对战游戏操作	360
12.1  同步网络模型	360
12.1.1  测量网络传输时间	361
12.1.2  发送命令	365
12.2  结束多人对战	370
12.2.1  玩家被击败时结束游戏	370
12.2.2  玩家断开连接时结束游戏	375
12.2.3  玩家丢失连接时结束游戏	376
12.3  实现玩家聊天	378
12.4  小结	382
索引	384
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5游戏开发进阶指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Vue.js前端开发
版权
内容提要
前言
第1章　Vue.js简介
第2章　基础特性
第3章　指令
第4章　过滤器
第5章　过渡
第6章　组件
第7章　Vue.js常用插件
第8章　Vue.js工程实例
第9章　状态管理：Vuex
第10章　跨平台开发：Weex
第11章　Vue.js 2.0新特性
欢迎来到异步社区！
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Vue.js前端开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Sencha Touch权威指南
前　言
第一部分　准　备　篇
第1章　Sencha Touch 2.0概述 / 2
1.1　认识Sencha Touch   / 2
1.1.1　Sencha Touch框架的特性 / 2
1.1.2　Sencha Touch 2.0中的新特性 / 3
1.2　Sencha Touch 2.0框架 / 4
1.2.1　搭建学习环境 / 4
1.2.2　开发包中的内容 / 10
1.2.3　第一个Sencha Touch 2.0示例页面 / 11
1.3　构建及发布应用程序 / 13
1.3.1　Sencha Touch 2.0中的动态加载技术 / 13
1.3.2　几种核心脚本文件之间的区别 / 14
1.3.3　构建应用程序时执行的处理 / 14
1.3.4　发布应用程序 / 16
1.4　本章小结 / 17
第2章　Sencha Touch 2.0基础知识 / 18
2.1　一个简单的示例页面 / 18
2.2　配置对象与配置选项 / 19
2.3　应用程序的命名与启动 / 21
2.4　Sencha Touch 2.0中的面板组件 / 22
2.4.1　如何创建面板组件 / 22
2.4.2　Viewport组件 / 23
2.5　对DOM的访问及控制 / 23
2.5.1　Ext.get方法的使用 / 24
2.5.2　Ext.ComponentManager.get方法的使用 / 24
2.5.3　Ext.fly方法的使用 / 25
2.6　本章小结 / 26
第二部分　基　础　篇
第3章　面板与布局 / 28
3.1　在面板组件中放置图片 / 28
3.1.1　示例代码及配置选项 / 28
3.1.2　Sencha Touch 2.0中的图片组件 / 30
3.1.3　Sencha Touch 2.0中的事件监听器及事件处理函数 / 30
3.1.4　Sencha Touch 2.0中的动态加载技术 / 31
3.2　Tab面板组件 / 33
3.2.1　Tab面板组件的使用及示例 / 33
3.2.2　Tab面板组件的配置选项 / 35
3.2.3　Sencha Touch 2.0中的内置图标 / 36
3.3　Sencha Touch 2.0中的常用布局 / 38
3.3.1　盒布局 / 38
3.3.2　Fit布局 / 42
3.3.3　Card布局 / 44
3.3.4　容器内部组件的停靠 / 47
3.4　Carousel组件 / 49
3.4.1　Carousel组件的使用及示例 / 49
3.4.2　容器组件的defaults配置选项 / 51
3.4.3　Carousel组件的常用方法 / 52
3.5　NavigationView组件 / 53
3.5.1　NavigationView组件的使用及示例 / 53
3.5.2　配置NavigationView组件的标题栏 / 55
3.6　xtype配置选项 / 56
3.6.1　xtype配置选项的使用及示例 / 56
3.6.2　使用getComponent方法获取容器中的子组件 / 58
3.6.3　重要组件的xtype值及作用 / 59
3.7　本章小结 / 60
第4章　表单及表单域组件 / 61
4.1　一个最简单的表单示例 / 61
4.1.1　表单的核心组件 / 61
4.1.2　第一个表单使用示例 / 62
4.1.3　表单所用配置选项 / 63
4.1.4　Sencha Touch 2.0中的滚动 / 67
4.2　Sencha Touch 2.0中的特殊输入组件 / 69
4.2.1　密码输入组件 / 69
4.2.2　数值输入组件 / 70
4.2.3　Spinner组件 / 71
4.2.4　Email输入组件 / 72
4.2.5　Url输入组件 / 73
4.2.6　TextArea组件 / 74
4.2.7　Search组件 / 75
4.3　单选框与复选框组件 / 76
4.3.1　单选框组件 / 76
4.3.2　复选框组件 / 80
4.4　选取框组件 / 81
4.4.1　选取框组件的使用示例 / 81
4.4.2　选取框组件所用配置选项 / 83
4.5　使用数据仓库装载选取框 / 84
4.5.1　什么是数据仓库 / 84
4.5.2　使用本地数据装载选取框 / 86
4.5.3　代理与阅读器 / 88
4.5.4　使用服务器端数据装载选取框 / 89
4.6　日期选择组件 / 91
4.6.1　日期选择组件使用示例 / 91
4.6.2　日期选择组件所用配置选项 / 92
4.7　滑动条组件 / 94
4.7.1　滑动条组件使用示例 / 94
4.7.2　滑动条组件所用配置选项 / 95
4.7.3　setValue方法与getValue方法 / 95
4.8　Toggle组件 / 95
4.9　Hidden组件 / 96
4.10　本章小结 / 97
第5章　表单验证及提交 / 98
5.1　Sencha Touch 2.0中的按钮 / 98
5.1.1　按钮的使用及示例 / 98
5.1.2　修改按钮的样式 / 99
5.1.3　定义按钮的功能 / 102
5.2　表单验证 / 103
5.2.1　实现表单的AJAX异步提交 / 103
5.2.2　使用Sencha Touch 2.0中的内置验证 / 108
5.2.3　服务器端验证及验证成功后数据的追加 / 114
5.3装载表单数据 / 115
5.3.1装载本地数据 / 115
5.3.2装载服务器端数据 / 117
5.3.3修改服务器端数据 / 120
5.3.4　删除服务器端数据 / 123
5.4　将表单设定为无效状态 / 125
5.5　本章小结 / 126
第6章工具条 / 127
6.1　工具条组件的使用及示例 / 127
6.2　segmentedButton组件 / 128
6.2.1在工具条中放置segmentedButton组件示例 / 129
6.2.2segmentedButton组件的配置选项 / 130
6.3工具条的对齐方式与分隔符 / 131
6.3.1工具条右对齐示例 / 131
6.3.2在子组件中插入间隔距离示例 / 132
6.4　在工具条中使用图标按钮 / 133
6.4.1使用自定义图标按钮 / 133
6.4.2使用Sencha Touch 2.0中的内置图标按钮 / 135
6.5　在工具条中使用表单域组件 / 135
6.6　标题条组件 / 138
6.6.1标题条组件与工具条组件的区别 / 138
6.6.2　标题条组件的使用示例 / 139
6.7本章小结 / 139
第7章　XTemplate模板与DomHelper组件 / 141
7.1　XTemplate模板 / 141
7.1.1　定义XTemplate模板 / 141
7.1.2在模板中使用数组 / 144
7.1.3　在模板中使用操作符 / 148
7.1.4　在模板中使用内置变量 / 149
7.1.5在模板中使用自定义函数 / 151
7.2　DomHelper组件 / 153
7.2.1使用append方法追加元素 / 153
7.2.2　使用overwrite方法重写元素 / 155
7.2.3　在指定位置处追加与删除元素 / 156
7.3　本章小结 / 162
第8章DataView组件 / 163
8.1DataView组件的基本功能 / 163
8.1.1DataView组件的使用及示例 / 163
8.1.2对DataView组件使用样式 / 166
8.1.3　将DataView组件中的数据进行排序 / 168
8.1.4　DataView组件的选取方式 / 171
8.2　DataView组件的常用事件 / 171
8.2.1　itemsingletap事件、itemdoubletab事件与itemtap事件 / 171
8.2.2　itemswipe事件 / 173
8.2.3　refresh事件 / 175
8.2.4　selectionchange事件与deselect事件 / 177
8.3使用DataView组件制作一览表 / 183
8.3.1制作一览表的步骤 / 183
8.3.2为一览表添加排序功能 / 185
8.3.3为一览表添加搜索功能 / 189
8.4使用DataView组件显示服务器端数据 / 193
8.4.1显示XML文件中的数据 / 193
8.4.2显示JSON文件中的数据 / 197
8.4.3显示服务器端数据库中的数据 / 198
8.4.4对服务器端的数据进行分页 / 200
8.4.5在服务器端对数据进行排序 / 206
8.4.6对数据库中的数据进行搜索 / 212
8.5使用代理管理数据 / 223
8.5.1Memory代理 / 223
8.5.2SessionStorage代理 / 235
8.5.3LocalStorage代理 / 240
8.5.4Ajax代理 / 241
8.5.5Rest代理 / 247
8.6　Operation对象的使用方法 / 253
8.6.1通过Operation对象插入url参数 / 253
8.6.2获取分页数据 / 255
8.6.3　对服务器端数据进行排序与过滤 / 260
8.7获取异域数据 / 263
8.7.1通过JsonP代理获取异域数据 / 264
8.7.2利用Ext.data.JsonP对象获取异域数据 / 268
8.8　本章小结 / 275
第9章List组件 / 276
9.1List组件的基本功能 / 276
9.1.1使用List组件在页面上显示列表 / 276
9.1.2itemDisclosure事件 / 277
9.1.3在List组件中使用索引栏 / 279
9.1.4ListPagingView插件 / 280
9.2将List组件中的数据进行分组 / 282
9.2.1使用grouper配置选项进行分组 / 283
9.2.2动态设置List组件的分组方式 / 286
9.2.3动态更新数据时List组件的自动分组 / 287
9.3nestedList组件 / 289
9.3.1nestedList组件的使用及示例 / 290
9.3.2显示服务器端文件夹及文件列表 / 297
9.3.3显示服务器端数据库中的数据 / 302
9.4本章小结 / 307
第10章地图与多媒体 / 308
10.1　利用Map组件在页面中显示Google地图 / 308
10.1.1　Map组件的使用及示例     / 308
10.1.2　Ext.util.Geolocation类的使用及示例 / 309
10.2利用Video组件播放视频文件 / 313
10.2.1　Video组件的使用及示例 / 313
10.2.2　控制视频的主要的方法 / 315
10.3利用Audio组件播放音频文件 / 317
10.3.1　Audio组件的使用及示例 / 317
10.3.2　控制音频的主要方法 / 318
10.4本章小结 / 320
第11章使用具有关联关系的模型 / 321
11.1定义具有关联关系的模型 / 321
11.2定义具有一对多关系的模型 / 322
11.2.1　一对多关系模型的使用示例 / 323
11.2.2使用子模型的数据仓库存取数据 / 326
11.2.3　定制父模型的过滤器 / 337
11.3　定义具有多对一关系的模型 / 343
11.3.1　多对一关系的模型的使用示例 / 343
11.3.2　通过子模型的getter方法获取父模型的记录 / 346
11.3.3　通过子模型的setter方法设置关联id / 351
11.4　定义具有一对一关系的模型 / 361
11.4.1　通过模型的getter方法获取其关联模型的记录 / 361
11.4.2　通过模型的setter方法设置关联id / 363
11.5　在同一个模型内部建立关联关系 / 364
11.6　本章小结 / 369
第12章Sencha Touch 2.0中的Ext Direct API / 370
12.1　服务器端提供的组件  / 370
12.1.1　配置 / 370
12.1.2　API / 372
12.1.3　路由 / 372
12.2　Sencha Touch 2.0中的Provider / 374
12.2.1　PollingProvider方法的使用及示例 / 374
12.2.2　RemotingProvider方法的使用及示例 / 377
12.3　 Direct代理 / 387
12.3.1　Direct代理的使用示例 / 388
12.3.2　在Direct代理所使用的方法中提交命名参数 / 391
12.4　DirectStore数据仓库  / 394
12.5　本章小结 / 402
第13章　自适应尺寸的Sheet组件 / 403
13.1　Sheet组件简介 / 403
13.2　ActionSheet组件的使用及示例 / 403
13.3　Sencha Touch 2.0中的提示信息框 / 406
13.3.1　提示信息框 / 406
13.3.2　确认信息框 / 408
13.3.3　Ext.Msg.show方法 / 409
13.4　Picker组件的使用及示例 / 411
13.5　使用DatePicker组件选取日期 / 417
13.6　本章小结 / 419
第14章　Sencha Touch 2.0中的样式与主题 / 420
14.1　利用配置选项设置单个组件的样式 / 420
14.2　Sencha Touch 2.0中的内置主题 / 421
14.2.1　重载默认主题中组件的样式 / 421
14.2.2　修改Sencha Touch 2.0中的内置主题 / 422
14.3　利用SASS定制Sencha Touch 2.0的主题 / 423
14.3.1　安装SASS和Compass / 423
14.3.2　在Sencha Touch 2.0中使用SASS  / 424
14.3.3　修改Sencha Touch 2.0默认主题中的变量 / 425
14.4　SCSS样式表文件 / 426
14.4.1　SCSS提供的高级特性 / 426
14.4.2　Sencha Touch 2.0提供的mixin / 431
14.4.3　编译SCSS样式表文件 / 432
14.4.4　应用SCSS样式表文件定制主题示例 / 433
14.4.5　SCSS样式表文件中自定义组件样式的示例 / 434
14.5　本章小结 / 436
第15章　创建自定义组件与MVC模式的应用程序 / 437
15.1　实现自定义组件 / 437
15.1.1　Sencha Touch 2.0中的包与命名空间 / 437
15.1.2　创建自定义组件 / 438
15.1.3　为自定义组件添加自定义方法 / 441
15.2　使用命令行工具创建及部署MVC模式的应用程序 / 443
15.2.1　命令行工具的安装及使用 / 443
15.2.2　创建MVC模式的应用程序 / 444
15.2.3　部署MVC模式的应用程序 / 446
15.2.4　页面文件与脚本文件分析 / 447
15.2.5　应用程序中的默认命名约定 / 450
15.2.6　应用程序启动时的函数调用顺序 / 451
15.3　创建视图与控制器 / 452
15.3.1创建应用程序的主视图 / 452
15.3.2创建应用程序的主控制器 / 453
15.3.3通过控制器实现用户与应用程序之间的交互 / 454
15.4　在控制器中指定路由 / 457
15.4.1　通过routes配置选项指定路由 / 458
15.4.2　在路由中使用参数 / 464
15.4.3　通过before配置选项拦截路由方法的执行 / 467
15.5　设备配置文件 / 474
15.5.1　检测应用程序当前所用的设备配置文件 / 474
15.5.2　为应用程序编制设备配置文件 / 475
15.5.3　在设备配置文件中使用launch函数 / 476
15.5.4　为设备单独编写视图 / 477
15.5.5　将各种视图在不同的设备中以不同的方式进行结合 / 480
15.5.6　为设备单独编写控制器 / 487
15.6　本章小结 / 491
第三部分　综 合 案 例
第16章　综合应用案例 / 494
16.1　应用程序的所有文件及其路径 / 494
16.2　应用程序的页面文件与脚本文件 / 496
16.3　利用SASS定制样式主题 / 498
16.4　设备配置文件 / 500
16.5　模型与数据仓库 / 501
16.6　视图与控制器 / 508
16.6.1　应用程序的主视图 / 508
16.6.2　用户注册/登录视图与控制器 / 510
16.6.3　展示视图及其控制器 / 516
16.6.4　书籍列表展示视图与控制器 / 524
16.6.5　书籍信息编辑视图与控制器 / 534
16.7　本章小结 / 540
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Sencha Touch权威指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Ext JS权威指南
前　言
第1章　Ext JS 4开发入门 / 1
1.1　学习Ext JS必需的基础知识 / 1
1.2　JSON概述 / 3
1.2.1　认识JSON /  3
1.2.2　JSON的结构 / 3
1.2.3　JSON的例子 / 4
1.2.4　在JavaScript中使用JSON / 4
1.2.5　在.NET中使用JSON / 8
1.2.6　在Java中使用JSON / 12
1.2.7　更多有关JSON的信息 / 15
1.3　Ext JS 4概述 / 15
1.4　Ext JS的开发工具的获取、安装与配置介绍 / 18
1.4.1　Ext Designer / 18
1.4.2　在Visual Studio中实现智能提示 / 23
1.4.3　Spket / 28
1.4.4　在Eclipse中实现智能提示 / 32
1.5　如何获得帮助 / 32
1.6　本章小结 / 33
第2章　从“Hello World”开始 / 34
2.1　获取Ext JS 4 / 34
2.2　配置使用Ext JS库 / 35
2.3　编写“Hello World”程序 / 37
2.4　关于Ext.onReady  / 38
2.5　关于Ext.BLANK_IMAGE_URL / 40
2.6　关于字体 / 42
2.7　Ext JS 4语法 / 42
2.8　本地化 / 60
2.9　为本书示例准备一个模板 / 60
2.10　本章小结 / 61
第3章　调试工具及技巧 / 62
3.1　使用Firebug进行调试 / 62
3.2　在IE中调试 / 76
3.2.1　使用Debugbar和Companion.js调试 / 76
3.2.2　使用IEtester测试 / 80
3.2.3　在IE 8或IE 9中调试 / 83
3.3　在Chrome中调试 / 84
3.4　调试工具的总结 / 84
3.5　调试技巧 / 85
3.6　本章小结 / 89
第4章　Ext JS的基础架构 / 90
4.1　Ext JS框架的命名空间：Ext / 90
4.1.1　概述 / 90
4.1.2　apply和applyIf方法 / 90
4.1.3　不推荐的extend方法 / 92
4.1.4　数据及其类型检测 / 95
4.1.5　其他的基础方法 / 99
4.2　为框架顺利运行提供支持 / 107
4.2.1　平台检测工具：Ext.is / 107
4.2.2　当前运行环境检测工具：Ext.supports / 109
4.3　Ext JS的静态方法 / 112
4.3.1　概述 / 112
4.3.2　Ext.Object中的静态方法 / 113
4.3.3　Ext.Function中的静态方法 / 120
4.3.4　Ext.Array中的静态方法 / 127
4.3.5　Ext.Error中的静态方法 / 133
4.4　深入了解类的创建及管理 / 135
4.4.1　开始创建类 / 135
4.4.2　创建类的类：Ext.Class / 137
4.4.3　所有继承类的基类：Ext.Base / 151
4.4.4　实现动态加载：Ext.Loader / 151
4.4.5　管理类的类：Ext.ClassManager / 159
4.4.6　类创建的总结 / 161
4.5　动态加载的路径设置 / 163
4.6　综合实例：页面计算器 / 165
4.7　本章小结 / 169
第5章　Ext JS的事件及其应用 / 170
5.1　概述 / 170
5.2　浏览器事件 / 170
5.2.1　绑定浏览器事件的过程：Ext.EventManager / 170
5.2.2　封装浏览器事件：Ext.EventObject / 179
5.2.3　移除浏览器事件 / 181
5.3　内部事件 / 184
5.3.1　内部事件对象：Ext.util.Event / 184
5.3.2　为组件添加事件接口：Ext.util.Observable / 188
5.3.3　为组件绑定事件 / 189
5.3.4　内部事件的触发过程 / 192
5.3.5　移除事件 / 194
5.4　特定功能的事件对象 / 196
5.4.1　延时任务：Ext.util.DelayedTask / 196
5.4.2　一般任务：Ext.util.TaskRunner与Ext.TaskManager / 198
5.4.3　封装好的单击事件：Ext.util.ClickRepeater / 200
5.5　键盘事件 / 201
5.5.1　为元素绑定键盘事件：Ext.util.KeyMap / 201
5.5.2　键盘导航：Ext.util.KeyNav / 204
5.6　综合实例：股票数据的实时更新 / 205
5.7　本章小结 / 214
第6章　选择器与DOM操作 / 215
6.1　Ext JS的选择器：Ext.DomQuery / 215
6.1.1　选择器的作用 / 215
6.1.2　使用Ext.query选择页面元素 / 215
6.1.3　基本选择符 / 223
6.1.4　属性选择符 / 229
6.1.5　CSS属性值选择符 / 234
6.1.6　伪类选择符 / 235
6.1.7　扩展选择器 / 248
6.1.8　Ext.DomQuery的使用方法 / 249
6.1.9　Ext JS选择器的总结 / 252
6.2　获取单一元素：Ext.dom.Element / 252
6.2.1　从错误开始 / 252
6.2.2　使用Ext.get获取元素 / 253
6.2.3　使用Ext.fly获取元素 / 256
6.2.4　使用Ext.getDom获取元素 / 257
6.2.5　获取元素的总结 / 258
6.3　元素生成器：Ext.dom.Helper / 258
6.3.1　概述 / 258
6.3.2　使用createHtml或markup方法生成HTML代码 / 258
6.3.3　使用createDOM方法生成DOM对象 / 261
6.3.4　使用createTemplate方法创建模板 / 263
6.3.5　Helper对象的使用方法 / 263
6.4　元素的操作 / 273
6.5　获取元素集合：Ext.CompositeElementLite与Ext.CompositeElement / 277
6.5.1　使用Ext.select获取元素集合 / 277
6.5.2　Ext.dom.CompositeElement与Ext.dom.CompositeElementLite的区别 / 279
6.5.3　操作元素集合 / 279
6.6　综合实例：可折叠的面板Accordion / 280
6.7　本章小结 / 283
第7章　数据交互 / 284
7.1　数据交互基础 / 284
7.1.1　Ajax概述 / 284
7.1.2　封装Ajax：Ext.data.Connection与Ext.Ajax / 284
7.1.3　使用Ajax / 291
7.1.4　跨域获取数据：Ext.data.JsonP / 295
7.1.5　为Element对象提供加载功能：Ext.ElementLoader / 295
7.1.6　为组件提供加载功能：Ext.ComponentLoader / 296
7.2　代理 / 299
7.2.1　代理概述 / 299
7.2.2　基本的代理：Ext.data.proxy.Proxy / 300
7.2.3　进行批量操作：Ext.data.Batch与Ext.data.Operation / 303
7.2.4　服务器端代理：Ext.data.proxy.Server / 305
7.2.5　使用Ajax处理数据的代理：Ext.data.proxy.Ajax与Ext.data.proxy.Rest / 308
7.2.6　跨域处理数据的代理：Ext.data.proxy.JsonP / 312
7.2.7　为Ext.Direct服务的代理：Ext.data.proxy.Direct / 312
7.2.8　客户端代理：Ext.data.proxy.Client / 314
7.2.9　从变量中提取数据的代理：Ext.data.proxy.Memory / 314
7.2.10　使用浏览器存储的代理：Ext.data.WebStorageProxy、Ext.data. SessionStorageProxy和Ext.data.proxy.LocalStorage / 314
7.3　读取和格式化数据 / 315
7.3.1　概述 / 315
7.3.2　数据的转换过程：Ext.data.reader.Xml、Ext.data.reader.Json和Ext.data.reader.Array / 315
7.3.3　Reader对象的配置项 / 321
7.3.4　格式化提交数据：Ext.data.writer.Writer、Ext.data.writer.JSON和Ext.data. writer.Xml / 322
7.3.5　Writer对象的配置项 / 325
7.4　数据模型 / 326
7.4.1　概述 / 326
7.4.2　数据类型及排序类型：Ext.data.Types与Ext.data.SortTypes / 326
7.4.3　数据模型的骨架——字段：Ext.data.Field / 330
7.4.4　数据集：Ext.util.AbstractMixedCollection与Ext.util.MixedCollection / 330
7.4.5　数据验证及错误处理：Ext.data.validations与Ext.data.Errors / 332
7.4.6　模型的关系：Ext.data.Association、Ext.data.HasManyAssociation和Ext.data.BelongsToAssociation / 334
7.4.7　管理数据模型：Ext.AbstractManager与Ext.ModelManager / 336
7.4.8　定义数据模型：Ext.data.Model / 336
7.4.9　数据模型的定义过程 / 337
7.4.10　数据模型的创建 / 340
7.4.11　数据模型的配置项、属性和方法 / 343
7.5　Store / 344
7.5.1　概述 / 344
7.5.2　Store对象的实例化过程 / 345
7.5.3　TreeStore对象的实例化过程 / 348
7.5.4　Ext.data.Store加载数据的方法 / 350
7.5.5　Ext.data.TreeStore加载数据的方法 / 354
7.5.6　Store的配置项 / 358
7.5.7　Store的分页 / 359
7.5.8　Store的排序：Ext.util.Sorter与Ext.util.Sortable / 360
7.5.9　Store的过滤：Ext.util.Filter / 363
7.5.10　Store的分组：Ext.util.Grouper / 363
7.5.11　树节点：Ext.data.NodeInterface与Ext.data.Tree / 364
7.5.12　Store的方法 / 366
7.5.13　Store的事件 / 368
7.5.14　Store管理器：Ext.data.StoreManager / 369
7.6　综合实例 / 369
7.6.1　远程读取JSON数据 / 369
7.6.2　读取XML数据 / 378
7.6.3　Store的数据操作 / 379
7.7　本章小结 / 384
第8章　模板与组件基础 / 385
8.1　模板 / 385
8.1.1　模板概述 / 385
8.1.2　Ext.Template的创建与编译 / 385
8.1.3　格式化输出数据：Ext.String、Ext.Number、Ext.Date和Ext.util.Format / 389
8.1.4　超级模板：Ext.XTemplate（包括Ext.XTemplateParser和Ext.XTemplateCompiler） / 393
8.1.5　模板的方法 / 396
8.2　组件的基础知识 / 396
8.2.1　概述 / 396
8.2.2　组件类的整体架构 / 397
8.2.3　布局类的整体架构 / 402
8.2.4　组件的创建流程 / 403
8.2.5　常用的组件配置项、属性、方法和事件 / 415
8.3　为组件添加功能 / 418
8.3.1　为元素添加阴影：Ext.Shadow与Ext.ShadowPool / 418
8.3.2　为组件提供阴影和shim功能：Ext.Layer / 419
8.3.3　让组件实现浮动功能：Ext.util.Floating / 420
8.3.4　记录组件状态：Ext.state.Stateful / 420
8.3.5　实现调整大小功能：Ext.resizer.Resizer与Ext.resizer.ResizeTracker / 420
8.3.6　为组件提供拖动功能：Ext.util.ComponentDragger / 421
8.3.7　为组件实现动画功能：Ext.util.Animate / 422
8.3.8　其他的组件辅助功能类 / 423
8.4　组件的管理 / 423
8.4.1　组件管理及查询：Ext.ComponentManager与Ext.ComponentQuery / 423
8.4.2　焦点管理：Ext.FocusManager / 424
8.4.3　z-order管理：Ext.ZindexManager与Ext.WindowManager / 425
8.4.4　状态管理：Ext.state.Manager、Ext.state.Provider、Ext.state.Local-StorageProvider和Ext.state.CookieProvider / 426
8.5　综合实例 / 426
8.5.1　使用子模板 / 426
8.5.2　递归调用模板 / 428
8.6　本章小结 / 429
第9章　容器、面板、布局和视图 / 430
9.1　容器与布局的关系  / 430
9.2　容器 / 431
9.2.1　容器的创建过程：Ext.container.AbstractContainer与Ext.container.Container / 431
9.2.2　 Ext.container.AbstractContainer和Ext.container.Container的配置项、属性、方法和事件 / 434
9.2.3　将body元素作为容器：Ext.container.Viewport / 435
9.3　面板 / 436
9.3.1　面板的结构 / 436
9.3.2　构件的放置：dockedItems / 438
9.3.3　面板标题栏构件：Ext.panel.Header与Ext.panel.Tool / 438
9.3.4　记录和恢复面板属性：Ext.util.Memento / 439
9.3.5　面板常用的配置项、方法和事件 / 439
9.4　布局 / 441
9.4.1　布局概述 / 441
9.4.2　布局的运行流程：Ext.layout.Layout / 441
9.4.3　容器类布局基类：Ext.layout.container.Container / 442
9.4.4　盒子布局、垂直布局与水平布局：Ext.layout.container.Box、Ext.layout.container.VBox与Ext.layout.container.HBox / 442
9.4.5　为盒子模型提供调整大小的功能：Ext.resizer.Splitter / 445
9.4.6　手风琴布局：Ext.layout.container.Accordion / 447
9.4.7　锚固布局：Ext.layout.container.Anchor / 448
9.4.8　绝对定位布局：Ext.layout.container.Absolute / 450
9.4.9　边框布局：Ext.layout.container.Border / 451
9.4.10　自动布局：Ext.layout.container.Auto / 453
9.4.11　表格布局：Ext.layout.container.Table / 454
9.4.12　列布局：Ext.layout.container.Column / 455
9.4.13　自适应布局：Ext.layout.container.AbstractFit与Ext.layout.container.Fit / 456
9.4.14　卡片布局：Ext.layout.container.AbstractCard与Ext.layout.container.Card / 456
9.5　标签面板 / 458
9.5.1　标签面板的构成及其运行流程：Ext.tab.Panel、Ext.tab.Bar与Ext.tab.Tab / 458
9.5.2　标签面板的配置项、属性、方法和事件 / 462
9.5.3　使用标签页 / 463
9.5.4　可重用的标签页 / 465
9.6　视图与选择模型 / 465
9.6.1　视图与选择模型概述 / 465
9.6.2　视图的运行流程：Ext.view.AbstractView与Ext.view.View / 466
9.6.3　选择模型的工作流程 / 475
9.6.4　选择模型的配置项、属性、方法和事件 / 480
9.6.5　视图的配置项、属性、方法和事件 / 482
9.6.6　使用视图 / 484
9.7　页面布局设计 / 491
9.8　综合实例 / 492
9.8.1　布局设计实例：仿Eclipse界面 / 492
9.8.2　在单页面应用中使用卡片布局实现“页面”切换 / 496
9.9　本章小结 / 498
第10章　重构后的Grid / 500
10.1　Grid的基类及其构成 / 500
10.1.1　概述 / 500
10.1.2　表格面板的运行流程：Ext.panel.Table / 500
10.1.3　表格视图的运行流程：Ext.view.Table与Ext.view.TableChunker / 505
10.1.4　列标题容器的运行流程：Ext.grid.header.Container / 508
10.1.5　列标题的运行流程：Ext.grid.column.Column / 510
10.1.6　虚拟滚动条的工作原理：Ext.grid.PagingScroller / 511
10.1.7　锁定列的运行流程：Ext.grid.Lockable与Ext.grid.LockingView / 516
10.2　使用Grid / 520
10.2.1　最简单的Grid / 520
10.2.2　列的配置项 / 521
10.2.3　自定义单元格的显示格式 / 523
10.2.4　通过列对象定义单元格的显示格式 / 525
10.2.5　设置行的背景颜色 / 532
10.2.6　列标题的分组 / 533
10.2.7　使用锁定列 / 534
10.2.8　Grid的配置项、属性、方法和事件 / 535
10.3　Grid的附加功能 / 537
10.3.1　概述 / 537
10.3.2　附加功能基类：Ext.grid.featrue.Featrue / 537
10.3.3　为行添加附加信息：Ext.grid.featrue.RowBody / 538
10.3.4　数据汇总功能：Ext.grid.featrue.AbstractSummary与Ext.grid.featrue. Summary / 539
10.3.5　分组功能：Ext.grid.featrue.Grouping / 543
10.3.6　分组汇总功能：Ext.grid.featrue.GroupingSummary / 545
10.4　可编辑的Grid / 546
10.4.1　概述 / 546
10.4.2　Grid实现可编辑功能的运行流程：Ext.grid.plugin.Editing / 547
10.4.3　单元格编辑的运行流程：Ext.grid.plugin.CellEditing、Ext.grid.CellEditor与Ext.Editor / 550
10.4.4　行编辑的运行流程：Ext.grid.plugin.RowEditing与Ext.grid.RowEditor / 556
10.4.5　在Grid中使用单元格编辑模式 / 561
10.4.6　在Grid中使用行编辑模式 / 562
10.4.7　Grid编辑插件的配置项、属性、方法和事件 / 563
10.5　关于列表视图：ListView / 564
10.6　属性Grid / 564
10.6.1　概述 / 564
10.6.2　使用属性Grid / 564
10.6.3　自定义编辑组件 / 565
10.6.4　PropertyGrid的配置项、属性、方法和事件 / 566
10.7　综合实例 / 567
10.7.1　使用不同选择模型的Grid以及设置默认选择行 / 567
10.7.2　Grid的本地排序和过滤 / 569
10.7.3　使用分页工具条（PagingToolbar）实现远程分页、排序和过滤 / 570
10.7.4　使用分页滚动条（PagingScroller）实现远程分页、排序和过滤 / 574
10.7.5　使用CellEditing实现数据的增删改 / 578
10.7.6　使用RowEditing实现数据的增删改 / 587
10.7.7　主从表的显示 / 589
10.8　本章小结 / 595
第11章　与Grid同源的树 / 597
11.1　树的构成 / 597
11.1.1　概述 / 597
11.1.2　树面板的运行流程：Ext.tree.Panel / 597
11.1.3　TreeStore的运行流程：Ext.data.TreeStore / 600
11.1.4　TreeColumn的运行流程：Ext.tree.Column / 602
11.1.5　视图的运行流程：Ext.tree.View与Ext.data.NodeStore / 602
11.1.6　树的选择模型：Ext.selection.TreeModel / 603
11.2　树的使用 / 603
11.2.1　一个最简单的树 / 603
11.2.2　树节点的默认字段 / 603
11.2.3　为树节点添加附加字段 / 604
11.2.4　显示多列数据（TreeGrid效果） / 605
11.2.5　在树中使用复选框 / 605
11.2.6　树的配置项、属性、方法和事件 / 607
11.3　综合实例 / 608
11.3.1　树的远程加载 / 608
11.3.2　树的动态加载及节点维护 / 610
11.3.3　XML树及节点维护 / 617
11.3.4　使用树动态控制Grid的显示 / 622
11.4　本章小结 / 625
第12章　表单 / 626
12.1　表单的构成及操作 / 626
12.1.1　表单面板的运行流程：Ext.form.Panel与Ext.form.FieldAncestor / 626
12.1.2　表单面板的配置项、属性、方法和事件 / 628
12.1.3　表单的管理：Ext.form.Basic / 629
12.1.4　BasicForm的配置项、属性、方法和事件 / 635
12.1.5　表单的操作：Ext.form.action.Action / 636
12.1.6　加载操作的运行流程：Ext.form.action.Load与Ext.form.action.DirectLoad / 637
12.1.7　提交操作的运行流程：Ext.form.action.Submit、Ext.form.action.DirectSubmit与Ext.form.action.StandardSubmit / 641
12.1.8　字段的构成 / 643
12.1.9　BaseField的配置项、属性、方法和事件 / 643
12.1.10　常用的验证函数：Ext.form.field.VTypes / 647
12.2　使用字段 / 647
12.3　使用Trigger类字段 / 664
12.3.1　具有单击功能的字段：Ext.form.field.Trigger / 664
12.3.2　实现微调功能的Spinner字段 / 665
12.3.3　使用NumberField字段 / 666
12.3.4　下拉选择类字段的基类：Ext.form.field.Picker / 667
12.3.5　使用DateField字段 / 667
12.3.6　使用TimeField字段 / 669
12.4　使用ComboBox字段 / 669
12.4.1　概述 / 669
12.4.2　BoundList对象的运行流程 / 670
12.4.3　ComboBox字段的配置项、属性、方法和事件 / 671
12.4.4　最简单的ComboBox / 672
12.4.5　自定义列表显示格式的ComboBox / 673
12.4.6　动态调整ComboBox的列表数据 / 674
12.4.7　实现ComboBox的联动 / 676
12.4.8　使用ComboBox的查询功能 / 684
12.4.9　设置ComboBox的默认值 / 688
12.5　表单的验证和加载数据 / 690
12.5.1　表单的验证及错误显示方式 / 690
12.5.2　为表单加载数据 / 695
12.6　在表单中使用布局 / 701
12.6.1　分列显示表单的字段 / 701
12.6.2　使用Fieldset作为列容器 / 703
12.6.3　使用两列布局加HtmlEditor的表单 / 704
12.6.4　在表单中使用标签页 / 705
12.7　综合实例：实现Products表的管理功能 / 706
12.8　本章小结 / 715
第13章　窗口 / 716
13.1　窗口：Ext.window.Window. / 716
13.1.1　窗口的构成 / 716
13.1.2　窗口的配置项、属性、方法和事件 / 716
13.1.3　使用窗口 / 718
13.1.4　在窗口内使用布局 / 719
13.2　信息提示窗口：Ext.window.MessageBox / 720
13.2.1　概述 / 720
13.2.2　信息提示窗口的构成 / 720
13.2.3　使用信息提示窗口 / 722
13.2.4　信息提示窗口按钮的本地化 / 723
13.2.5　使用alert方法 / 724
13.2.6　使用confirm方法 / 724
13.2.7　使用progress方法 / 725
13.2.8　使用prompt方法 / 726
13.2.9　使用wait方法 / 727
13.2.10　使用信息提示窗口要注意的问题 / 727
13.3　综合实例：实现登录窗口 / 729
13.4　本章小结 / 733
第14章　按钮、菜单与工具条 / 734
14.1　按钮 / 734
14.1.1　按钮的构成：Ext.button.Button / 734
14.1.2　按钮的配置项、属性、方法和事件 / 734
14.1.3　使用按钮 / 736
14.1.4　带分割线的按钮：Ext.button.Split / 737
14.1.5　多状态按钮：Ext.button.Cycle / 737
14.1.6　按钮组：Ext.container.ButtonGroup / 738
14.2　菜单及菜单项 / 739
14.2.1　Ext JS的菜单（Menu对象）是什么 / 739
14.2.2　菜单管理器：Ext.menu.Manager / 740
14.2.3　菜单项：Ext.menu.Item / 740
14.2.4　可复选的菜单项：Ext.menu.CheckItem / 741
14.2.5　菜单分隔条：Ext.menu.Separator / 741
14.2.6　颜色选择器菜单：Ext.menu.ColorPicker / 742
14.2.7　日期选择菜单：Ext.menu.DatePicker / 742
14.2.8　使用菜单 / 742
14.3　工具栏及工具栏组件 / 743
14.3.1　工具栏：Ext.toolbar.Toolbar / 743
14.3.2　非交互式工具栏条目的基类：Ext.toolbar.Item / 743
14.3.3　文本项：Ext.toolbar.TextItem / 744
14.3.4　填充项：Ext.toolbar.Fill / 744
14.3.5　工具栏分隔条：Ext.toolbar.Separator / 744
14.3.6　空白项：Ext.toolbar.Spacer / 744
14.3.7　分页工具栏：Ext.toolbar.Paging / 744
14.3.8　使用工具栏 / 747
14.4　使用Ext.Action / 747
14.4.1　概述 / 747
14.4.2　Action对象配置项和方法 / 748
14.4.3　使用示例 / 748
14.5　综合实例：在Grid中使用右键菜单 / 750
14.6　本章小结 / 752
第15章　图形与图表 / 753
15.1　基础知识 / 753
15.1.1　SVG简介 / 753
15.1.2　VML简介 / 754
15.2　图形介绍 / 755
15.2.1　概述 / 755
15.2.2　画布的工作流程：Ext.draw.Component / 755
15.2.3　图形引擎及接口：Ext.draw.Surface、Ext.draw.engine.Svg和Ext.draw.engine.Vml / 757
15.2.4　画笔：Ext.draw.Sprite / 760
15.2.5　图层：Ext.draw.CompositeSprite / 760
15.2.6　调色板：Ext.draw.Color / 760
15.2.7　辅助对象：Ext.draw.Draw与Ext.draw.Matrix / 760
15.3　使用图形功能 / 760
15.3.1　简单的开始 / 760
15.3.2　DrawComponent对象的配置项、属性、方法和事件 / 761
15.3.3　Surface对象的配置项、属性、方法和事件 / 761
15.3.4　DrawSprite对象的配置项、属性、方法和事件 / 762
15.3.5　CompositeSprite对象的配置项、属性、方法和事件 / 763
15.3.6　使用基本图形 / 764
15.3.7　使用图片 / 765
15.3.8　使用路径 / 766
15.3.9　移动、旋转和缩放图形 / 767
15.3.10　使用渐变效果 / 770
15.3.11　使用图层 / 771
15.4　图表介绍 / 772
15.4.1　概述 / 772
15.4.2　图表的工作流程 / 773
15.5　使用图表 / 776
15.5.1　从一个简单例子开始 / 776
15.5.2　坐标轴的配置项 / 777
15.5.3　Series对象的配置项、属性、方法和事件 / 779
15.5.4　折线图的配置项 / 780
15.5.5　显示多个折线图及使用图例 / 782
15.5.6　使用面积图 / 783
15.5.7　简单条形图（Bar和Column Chart）及使用标签（Label对象） / 785
15.5.8　堆积条形图 / 787
15.5.9　分组条形图 / 788
15.5.10　自定义条形颜色 / 789
15.5.11　使用散点图 / 789
15.5.12　使用饼图 / 791
15.5.13　自定义饼块颜色 / 792
15.5.14　使用表盘图 / 792
15.5.15　使用雷达图 / 795
15.5.16　使用时间轴 / 796
15.5.17　实现实时动态的图表 / 797
15.5.18　使用组合图 / 800
15.5.19　在图表中使用背景 / 801
15.5.20　在图表中自定义主题 / 803
15.6　本章小结 / 805
第16章　其他组件及实用功能 / 806
16.1　其他组件 / 806
16.2　使用滑块 / 812
16.3　使用提示信息 / 814
16.4　实用功能 / 822
16.5　本章小结 / 826
第17章　可简化通信的Ext.Direct / 827
17.1　准备工作 / 827
17.2　Ext.Direct的工作原理及构成 / 827
17.2.1　工作原理 / 827
17.2.2　Ext.Direct的构成 / 828
17.2.3　RemotingProvider对象的具体工作流程 / 829
17.2.4　PollingProvider对象的具体工作流程 / 838
17.3　配置Ext.Direct的使用环境 / 839
17.3.1　概述 / 839
17.3.2　.NET环境的配置 / 839
17.3.3　Java环境的配置 / 842
17.4　使用Ext.Direct / 846
17.4.1　概述 / 846
17.4.2　使用DirectProxy及进行CURD操作 / 846
17.4.3　使用Ext.Direct实现树的动态加载及节点维护 / 854
17.4.4　使用DirectLoad为表单加载数据 / 858
17.4.5　使用DirectSubmit提交表单及使用Session / 863
17.4.6　使用Ext.Direct上传文件 / 866
17.4.7　使用PollingProvider对象 / 868
17.4.8　错误处理 / 871
17.5　本章小结 / 872
第18章　动画功能 / 873
18.1　动画功能的构成及工作流程 / 873
18.1.1　概述 / 873
18.1.2　动画功能的工作流程：Ext.fx.Anim / 874
18.1.3　分步动画的工作流程：Ext.fx.Animator / 877
18.2　使用动画 / 880
18.2.1　由最简单的动画开始 / 880
18.2.2　过渡效果使用的功能函数介绍 / 880
18.2.3　使用分步动画 / 882
18.2.4　注意的问题 / 883
18.3　在Element对象中使用动画 / 883
18.4　本章小结 / 888
第19章　拖放功能 / 889
19.1　拖放功能的构成及工作流程 / 889
19.1.1　概述 / 889
19.1.2　DragDropManager对象的工作流程 / 891
19.1.3　注册节点：Ext.dd.Registry / 893
19.1.4　一般拖动功能的工作流程：Ext.dd.DD / 894
19.1.5　DragSource对象的工作流程 / 897
19.1.6　DropTarget对象的工作流程 / 898
19.1.7　DragZone对象的工作流程 / 899
19.1.8　DropZone对象的工作流程 / 899
19.2　使用拖放功能 / 899
19.2.1　最简单的拖动效果 / 899
19.2.2　使用DragSource对象与DropTarget对象 / 900
19.2.3　使用DragZone对象与DropZone对象（使用Registry对象） / 902
19.2.4　使用DragZone对象与DropZone对象（不使用Registry对象） / 903
19.2.5　通过拖动实现节点排序 / 904
19.2.6　使用GridViewDropZonePlugin插件 / 905
19.2.7　使用TreeViewDragDropPlugin插件 / 907
19.2.8　关于Grid和Tree拖动后的数据保存问题 / 910
19.3　本章小结 / 910
第20章　扩展与插件 / 911
20.1　扩展与插件的区别 / 911
20.2　扩展与插件如何选择 / 911
20.3　如何编写扩展 / 911
20.3.1　命名空间 / 911
20.3.2　定义扩展 / 912
20.3.3　定义别名 / 912
20.3.4　定义备用名 / 912
20.3.5　要求加载的类：requires与uses / 912
20.3.6　混入功能 / 913
20.3.7　构造函数与initComponent方法 / 913
20.3.8　静态属性和方法与单件模式 / 913
20.3.9　可自动生成set和get方法的属性与initConfig方法 / 914
20.3.10　在扩展中常用的方法 / 914
20.3.11　编写扩展：TreeComboBox / 914
20.4　如何编写插件 / 920
20.4.1　概述 / 920
20.4.2　AbstractPlugin对象 / 921
20.4.3　插件的别名 / 921
20.4.4　编写插件：RowColor / 922
20.5　扩展和插件介绍 / 923
20.5.1　概述 / 923
20.5.2　本地分页代理：Ext.ux.data.PagingMemoryProxy / 923
20.5.3　标签滚动菜单：Ext.ux.TabScrollerMenu / 925
20.5.4　编辑器TinyMCE / 926
20.6　本章小结 / 928
第21章　主题开发 / 929
21.1　准备工作 / 929
21.1.1　安装Ruby / 929
21.1.2　安装Compass / 930
21.1.3　SASS介绍 / 931
21.2　为Ext JS 4创建新主题 / 933
21.2.1　概述 / 933
21.2.2　目录结构 / 933
21.2.3　修改配置 / 933
21.2.4　编译 / 935
21.2.5　测试主题 / 935
21.3　通过ui配置项设置组件样式 / 937
21.4　本章小结 / 937
第22章　MVC应用架构 / 938
22.1　MVC应用架构的构成及工作流程 / 938
22.1.1　构成 / 938
22.1.2　控制器的工作流程：Ext.app.Controller / 938
22.1.3　Application对象的工作流程 / 940
22.2　一步一步实现MVC框架 / 942
22.2.1　概述 / 942
22.2.2　创建目录 / 942
22.2.3　创建首页 / 942
22.2.4　创建启动脚本：app.js / 943
22.2.5　定义登录对话框 / 944
22.2.6　创建应用脚本：Application.js / 948
22.2.7　创建Viewport视图 / 949
22.2.8　菜单视图及控制器 / 950
22.2.9　实现订单管理 / 952
22.2.10　实现产品管理 / 958
22.2.11　示例效果 / 969
22.3　本章小结 / 970
附录　简写类名与Ext JS类名对照表 / 971
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Ext JS权威指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通D3.js：交互式数据可视化高级编程
第1章  D3简介	1
1.1  D3是什么	1
1.1.1  D3简史	2
1.1.2  D3的优势	2
1.1.3  D3的适用范围	3
1.2  数据可视化是什么	3
1.2.1  目的	4
1.2.2  构成要素	4
1.2.3  相关概念	6
1.3  图表种类	6
1.4  学习方法	11
第2章  Web前端开发基础	13
2.1  浏览器和服务器	14
2.1.1  浏览器	14
2.1.2  服务器	15
2.2  HTML＆CSS	16
2.2.1  HTML元素	17
2.2.2  CSS选择器	20
2.2.3  综合运用	23
2.3  JavaScript	25
2.3.1  在HTML中使用JavaScript	26
2.3.2  语法	26
2.3.3  变量	27
2.3.4  数据类型	28
2.3.5  操作符	30
2.3.6  语句	32
2.3.7  函数	34
2.3.8  对象	34
2.3.9  数组	35
2.4  DOM	36
2.4.1  结构	37
2.4.2  访问和修改HTML元素	37
2.4.3  添加和删除节点	38
2.4.4  事件	39
2.5  SVG	40
2.5.1  位图和矢量图	40
2.5.2  图形元素	41
2.5.3  文字	46
2.5.4  样式	47
2.5.5  标记	48
2.5.6  滤镜	50
2.5.7  渐变	51
第3章  安装和使用	53
3.1  安装	53
3.1.1  下载文件	54
3.1.2  网络引用	54
3.2  搭建服务器	54
3.3  HELLO, WORLD	57
3.4  绘制矢量图	58
3.5  调试	59
第4章  选择集与数据	61
4.1  选择元素	61
4.2  选择集	63
4.2.1  查看状态	63
4.2.2  设定和获取属性	63
4.3  添加、插入和删除	66
4.4  数据绑定	67
4.4.1  datum()的工作过程	68
4.4.2  data()的工作过程	71
4.4.3  绑定的顺序	74
4.5  选择集的处理	76
4.5.1  enter的处理方法	76
4.5.2  exit的处理方法	77
4.5.3  处理模板	78
4.5.4  过滤器	79
4.5.5  选择集的顺序	79
4.5.6  each()的应用	80
4.5.7  call()的应用	80
4.6  数组的处理	81
4.6.1  排序	81
4.6.2  求值	82
4.6.3  操作数组	86
4.6.4  映射（Map）	89
4.6.5  集合（Set）	91
4.6.6  嵌套结构（Nest）	92
4.7  柱形图的制作	96
4.7.1  矩形和文字	97
4.7.2  更新数据	101
第5章  比例尺和坐标轴	105
5.1  定量比例尺	105
5.1.1  线性比例尺	106
5.1.2  指数和对数比例尺	109
5.1.3  量子和分位比例尺	110
5.1.4  阈值比例尺	112
5.2  序数比例尺	113
5.3  坐标轴	118
5.3.1  绘制方法	119
5.3.2  刻度	121
5.3.3  各比例尺的坐标轴	122
5.4  柱形图的坐标轴	123
5.5  散点图的制作	125
第6章  绘制	128
6.1  颜色	128
6.1.1  RGB	129
6.1.2  HSL	130
6.1.3  插值	131
6.2  线段生成器	132
6.3  区域生成器	136
6.4  弧生成器	137
6.5  符号生成器	140
6.6  弦生成器	142
6.7  对角线生成器	144
6.8  折线图的制作	145
第7章  动画	151
7.1  过渡效果	151
7.1.1  过渡的启动	152
7.1.2  过渡的属性	155
7.1.3  子元素	158
7.1.4  each()和call()	160
7.1.5  过渡样式	162
7.2  定时器	163
7.2.1  setInterval和setTimeout	163
7.2.2  d3.timer	164
7.3  应用过渡的场合	165
7.4  简单的动画制作	171
7.4.1  时钟	171
7.4.2  小球运动	172
第8章  交互	174
8.1  交互式入门	174
8.1.1  鼠标	176
8.1.2  键盘	178
8.1.3  触屏	180
8.2  事件	182
8.3  行为	183
8.3.1  拖曳	184
8.3.2  缩放	186
第9章  导入和导出	191
9.1  文件导入	191
9.1.1  JSON	192
9.1.2  CSV	194
9.1.3  XML	198
9.1.4  TEXT	199
9.2  文件导出	200
9.2.1  导出为SVG文件	200
9.2.2  编辑矢量图	203
第10章  布局	206
10.1  布局是什么	206
10.2  饼状图	207
10.3  力导向图	213
10.4  弦图	221
10.5  树状图	228
10.6  集群图	234
10.7  捆图	238
10.8  打包图	245
10.9  直方图	248
10.10  分区图	255
10.11  堆栈图	261
10.12  矩阵树图	268
第11章  地图	274
11.1  地图的数据	274
11.1.1  获取数据	275
11.1.2  简化数据	278
11.1.3  GeoJSON	280
11.1.4  TopoJSON	284
11.2  中国地图	285
11.2.1  基于GeoJSON	285
11.2.2  基于TopoJSON	289
11.3  地理路径	297
11.3.1  地理路径生成器	297
11.3.2  形状生成器	301
11.4  投影	306
11.5  球面数学	315
第12章  友好的交互	317
12.1  提示框	317
12.1.1  饼状图的提示框	318
12.1.2  提示框的样式	321
12.2  坐标系中的焦点	323
12.2.1  折线图的焦点	323
12.2.2  为折线图添加提示框	329
12.3  元素组合	334
12.3.1  饼状图的拖曳	335
12.3.2  移入和移出	336
12.3.3  合并	345
12.4  区域选择	347
12.4.1  在SVG画板里选择一块区域	348
12.4.2  散点图的区域选择	350
12.5  开关	353
12.5.1  思维导图的构造思路	353
12.5.2  思维导图的制作	356
第13章  地图进阶	363
13.1  值域的颜色	363
13.2  标注	368
13.2.1  标注地点	368
13.2.2  夜光图	370
13.3  标线	373
13.3.1  带有箭头的标线	373
13.3.2  球状地图的标线	377
13.4  拖动和缩放	378
13.4.1  平面地图	378
13.4.2  球面地图	381
13.5  力导向地图	383
13.5.1  Voronoi图和Delaunay三角剖分	383
13.5.2  力导向的中国地图	387
附录A 彩色插图  393
附录B 参考文献  410
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通D3.js：交互式数据可视化高级编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node.js实战（第2季）
第1章 通过Docker快速发布Node.js应用/ 1
1.1 什么是Docker /1
1.2 Nginx作为Node.js前端Web Server的作用 /3
1.3 安装Docker和下载Images镜像/ 5
1.4 Docker常用命令 /8
1.5 启动Container盒子 /10
1.6 文件卷标加载/ 11
1.7 将多个Container盒子连接起来 /13
1.8 不要用SSH连接到你的Container盒子 /15
1.9 配置DockerImages镜像和发布应用/ 19
1.10 什么是Jenkins/ 26
1.11 通过Docker安装和启动Jenkins /28
1.12 配置Jenkins并自动化部署Node.js项目/ 29
1.13 小结/ 36
1.14 参考文献/ 37
第2章 开发OAuth2认证服务器 /38
2.1 本章所用到的第三方模块/ 38
2.2 REST风格的API/ 39
2.3 定义返回数据格式/ 40
2.4 实现简单的API/ 41
2.4.1 扩展Response对象/ 41
2.4.2 统一处理出错信息/ 43
2.4.3 实现简单的API/ 43
2.4.4 API版本/ 44
2.5 关于OAuth认证/ 45
2.5.1 OAuth 2.0授权流程/ 45
2.5.2 OAuth 2.0授权详解/ 45
2.5.3 定义授权接口/ 48
2.6 实现OAuth认证/ 48
2.6.1 OAuth2/authorize接口/ 48
2.6.2 OAuth2/access_token接口/ 52
2.6.3 在处理API请求前验证Access Token/ 55
2.6.4 Access Token过期的问题/ 56
2.7 实现API客户端/ 58
2.8 API传输过程中的安全问题/ 62
2.9 API请求频率限制/ 63
2.10 让API返回结果支持不同的格式/65
2.10.1 通过后缀来指定返回的数据格式/ 65
2.10.2 通过Accept请求头来指定返回的数据格式/ 67
2.11 生成随机的测试数据/ 68
2.12 小结/ 69
2.13 参考文献及开源项目/ 70
第3章 基于RabbitMQ搭建消息队列/ 72
3.1 什么是消息队列，消息队列的优势/72
3.2 安装和启动RabbitMQ /75
3.3 RabbitMQ的Hello World/ 76
3.4 RabbitMQ的工作队列/80
3.5 RabbitMQ的PUB/SUB队列/ 84
3.6 RabbitMQ的队列路由 /89
3.7 RabbitMQ的RPC远程过程调用/ 94
3.8 基于RabbitMQ的Node.js和Python通信实例/ 99
3.9 RabbitMQ方案和HTTP方案的对比 /103
3.10 小结/ 117
3.11 参考文献 117
第4章 编写命令行工具——打造一个静态博客系统/ 118
4.1 本章所使用到的第三方模块/ 119
4.2 命令格式/ 120
4.2.1 常见的命令格式/ 121
4.2.2 定义静态博客命令格式/121
4.3 编写命令行工具/ 122
4.4 实时预览/ 126
4.4.1 启动Web服务器 /127
4.4.2 渲染文章页面/ 128
4.4.3 文章元数据/ 131
4.4.4 增加模板/ 132
4.4.5 渲染文章列表/ 136
4.5 生成静态博客/ 140
4.6 配置文件/ 146
4.7 创建空白博客模板/ 150
4.8 一些有用的第三方服务/ 153
4.8.1 评论组件/ 153
4.8.2 分享组件/ 154
4.9 小结/ 155
4.10 参考文献/ 156
第5章 基于Koa快速开发Web应用/ 157
5.1 ES6时代的来临/ 157
5.1.1 function和function*/ 158
5.1.2 yield和yield*/ 1605.1.3 co和Koa/ 162
5.2 模板系统/ 170
5.2.1 ejs和co-ejs/ 170
5.2.2 过滤器/ 173
5.3 路由/ 173
5.4 参数验证与错误处理/ 175
5.4.1 koa-scheme /175
5.4.2 koa-errorhandler/ 178
5.5 缓存和配置/ 182
5.5.1 koa-router-cache和co-cache /182
5.5.2 config-lite/ 184
5.6 测试/ 184
5.6.1 单元测试/ 184
5.6.2 co-mocha和co-supertest 185
5.7 开发一个论坛系统/ 189
5.7.1 基础项目搭建/ 189
5.7.2 路由和功能设计/ 193
5.7.3 自定义模型/ 194
5.7.4 theme的设计/ 200
5.7.5 注册/ 206
5.7.6 登录与登出/ 213
5.7.7 主页与版块/ 216
5.7.8 用户页/ 221
5.7.9 发表页与话题页/ 222
5.7.10 测试/ 228
5.7.11 部署 231
5.8 小结/ 233
5.9 参考文献/ 233
第6章 Node.js测试服务搭建 /235
6.1 概述/ 235
6.1.1 目的/ 2356.1.2 Pixbi/ 236
6.2 搭建后端测试服务/ 238
6.2.1 单元测试/ 239
6.2.2 功能性测试/ 259
6.2.3 可拓展性测试/ 260
6.3 搭建前端测试服务/ 261
6.3.1 PhantomJS/ 262
6.3.2 BrowserStack/ 266
6.3.3 Adobe CEP（Common Extensibility Platform）/269
6.4 加入持续集成工作流/ 271
6.5 小结/ 274
6.6 参考资料/ 276
第7章 使用Node.js绑定C语言库——51Degrees.node /277
7.1 开发背景/ 277
7.2 预备知识/ 279
7.2.1 51Degrees-C /279
7.2.2 C/C++中的Node.js API/ 282
7.2.3 使用nan/ 284
7.3 编码/ 285
7.3.1 项目初始化/ 285
7.3.2 创建v8胶水层接口/ 286
7.3.3 创建JavaScript代码/ 293
7.4 构建与发布/ 294
7.4.1 node-gyp与binding.gyp/ 294
7.4.2 发布/ 296
7.5 如何从nan 1.x升级到nan 2.x /296
7.6 后记/ 298
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node.js实战（第2季）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>AngularJS高级程序设计
第1部分准备
第1章准备
1．1你需要知道哪些知识
1．2本书的组织结构
1．3会有许多实例吗
1．4从哪里可以获得实例代码
1．5如何搭建你的开发环境
1．5．1选择Web浏览器
1．5．2选择代码编辑器
1．5．3安装Node．is
1．5．4安装Web服务器
1．5．5安装测试系统
1．5．6创建AngularJS文件夹
1．5．7执行一个简单的测试
1．6小结
第2章你的第一个AngularJS应用
2．1 准备项目
2．2使用AngularJS
2．2．1将AngularJS应用到HTML文件
2．2．2创建数据模型
2．2．3创建控制器
2．2．4创建视图
2．3基本功能之外
2．3．1使用双向模型绑定
2．3．2创建和使用控制器行为
2．3．3使用依赖于其他行为桷行为
2．3．4响应用户交互
2．3．5对模型数据过滤和排序
2．3．6通过ajax获取数据
2．4 小结
第3章结合背景理解AngularJS
3．1理解AngularJS的擅长之处
3．2理解MVC模式
3．2．1理解模型
3．2．2理解控制器
3．2．3理解视图数据
3．2．4理解视图
3．3理解RESTful服务
3．4常见的设计陷阱
3．4．1将逻辑放到错误的地方
3．4．2采用数据存储所依赖的数据格式
3．4．3墨守成规
3．5 小结
第4章HTML和Bootstrap CSS入门
4．1 了解HTML
4．1．1 了解HTML元素的解析结构
4．1．2 了解属性
4．1．3 了解元素内容
4．1．4 了解空元素
……
第2部分　使用AngularJS工作
第3部分　AngularJS　服务
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>AngularJS高级程序设计
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Cocos2d-JS开发之旅——从HTML 5到原生手机游戏
第一部分 准 备 篇
第1 章 Cocos2d-JS 介绍 / 2
1.1 原生手机游戏和HTML5 游戏 / 2
1.2 Cocos2d-JS 的前世今生 / 4
1.3 一次开发，同时完成HTML5 和原生游戏 / 5
1.4 Cocos2d-JS 相比Cocos2d-x 的优势和劣势 / 6
1.5 我们要准备些什么基础知识 / 6
1.6 本书适合人群 / 7
1.7 我们能学到什么 / 8
1.8 推荐的学习资源 / 8
第2 章 跑起我们的HelloWorld / 10
2.1 环境搭建 / 10
2.1.1 乞丐版装备——官方SDK 和记事本足矣 / 10
2.1.2 土豪版装备——JS编程三剑客（WebStorm+Chrome+Fiddler）/ 14
2.1.3 旗舰版装备——再来个Visual Studio 或Xcode / 18
2.2 轻松搞定第一个Cocos2d-JS 程序 / 19
2.2.1 建立第一个程序——HelloWorld / 19
2.2.2 打开HelloWorld 工程 / 20
2.2.3 运行HelloWorld / 20
2.3 HelloWorld 简约而不简单 / 22
2.3.1 程序的目录结构 / 22
2.3.2 它是怎么跑起来的 / 24
2.4 出发前再带上个武器——trace / 26
第一部分总结 / 27
第二部分 做一个简单的小游戏
第3 章 Cocos2d-JS 的平面世界 / 30
3.1 Cocos2d世界的经纬度——坐标系 / 30
3.2 场景（Scene）组成了Cocos2d 世界 / 31
3.3 Cocos2d世界物体的祖宗——节点（Node）/ 33
3.4 让2D世界层次化——层（Layer）/ 34
3.4.1 按层管理所有物体 / 34
3.4.2 把层扩展成各种功能的面板 / 35
3.5 二维世界的人物——精灵（Sprite）/ 36
3.6 天外有天——当层和精灵嵌套时怎么设置坐标 / 39
3.7 导演（Director）指挥一切 / 41
3.7.1 场景的切换 / 41
3.7.2 导演可以提供的信息 / 44
3.8 额外说说Cocos2d-JS 的语法 / 44
3.8.1 JS 面向对象和继承 / 44
3.8.2 有点麻烦的this / 46
第4 章 让世界来点动静 / 51
4.1 帧的概念 / 51
4.2 模仿胶卷电影——逐帧变化 / 52
4.3 现成的既定动作 / 54
4.3.1 基本动作 / 54
4.3.2 放一个连招——组合动作 / 59
4.3.3 让运动轨迹来多点花样 / 64
4.4 控制动作 / 66
4.4.1 停止动作 / 66
4.4.2 暂停/恢复动作 / 67
4.4.3 监听动作的开始与结束 / 68
4.5 播放声音 / 70
4.5.1 背景音乐 / 70
4.5.2 音效 / 70
4.5.3 音量 / 70
第5 章 让玩家操纵这个世界 / 72
5.1 鼠标事件 / 72
5.2 触摸事件 / 75
5.2.1 单点触摸 / 75
5.2.2 多点触摸 / 77
5.3 键盘事件 / 79
5.4 重力感应器事件 / 81
5.5 游戏进入后台/恢复显示事件 / 83
第6 章 控制小怪按时出现——定时器 / 84
6.1 每帧做点什么——scheduleUpdate / 84
6.2 scheduleOnce 取代熟悉的setTimeout / 85
6.3 schedule 取代setInterval / 86
6.4 取消定时器 / 86
6.5 暂停/恢复定时器 / 88
6.6 越来越慢的定时器 / 90
6.7 动手制作不变慢的定时器 / 92
第7 章 游戏界面 / 96
7.1 纯手工打造 / 96
7.1.1 按钮（MenuItem）/ 96
7.1.2 开关按钮（MenuItemToggle）/ 102
7.1.3 菜单（Menu）/ 103
7.1.4 文本（LabelTTF）/ 107
7.1.5 输入框 / 108
7.2 可视化编辑 / 109
7.2.1 CocosStudio UI 编辑器介绍 / 109
7.2.2 新建工程 / 111
7.2.3 UI 元素的属性 / 112
7.2.4 UI 元素的树形从属关系 / 113
7.2.5 导入图片 / 113
7.2.6 导出成果 / 114
7.2.7 回归手工——代码中加载UI文件 / 115
7.2.8 监听UI 元素 / 117
第8 章 不能光说不练——小小碰碰糖 / 122
8.1 功能说明 / 122
8.2 新建项目 / 123
8.3 制作糖果 / 124
8.4 游戏界面 / 125
8.5 一个新知识——遮罩（ClippingNode）/ 129
8.6 点击消除 / 134
8.7 补充糖果 / 137
8.8 关卡设计 / 139
8.9 保存进度——如何读/写数据 / 141
第9 章 把成果分享到网上 / 143
9.1 一句命令打包整个程序 / 143
9.2 文件太大，精简一下 / 146
9.3 世界上有免费的服务器吗 / 149
9.3.1 又当爹又当娘——Github 介绍 / 149
9.3.2 开通免费的个人主页 / 150
9.3.3 方便的Windows客户端 / 151
9.4 发布碰碰糖游戏，PC 手机都能玩 / 153
9.5 自定义类库让更新更方便 / 155
第二部分总结 / 158
第三部分 再做一个高大上游戏
第10 章 走向高大上的必经之路——简单的性能优化 / 160
10.1 化零为整——SpriteSheet / 160
10.1.1 零碎小图的问题 / 160
10.1.2 使用TexturePacker / 161
10.1.3 另一种Sprite 初始化方式——SpriteFrame / 163
10.2 分批处理——SpriteBatchNode / 164
10.3 不要乱丢垃圾——缓存池（pool）/ 167
10.4 拍一张定妆照——位图缓存（BakeLayer）/ 171
第11 章 让主角不再死板 / 173
11.1 帧动画（Frame Animation）/ 173
11.2 骨骼动画 / 176
11.2.1 什么是骨骼动画 / 176
11.2.2 CocosStudio 动画编辑器（Animation Editor）/ 177
11.2.3 导出骨骼动画 / 180
11.2.4 在代码中加载骨骼动画 / 180
11.2.5 更好用的工具——DragonBones / 183
第12 章 动态的背景 / 188
12.1 视差滚动背景（ParallaxNode）/ 188
12.2 实现一个无穷的视差滚动背景 / 190
12.3 瓦片地图（TiledMap）/ 193
12.3.1 瓦片地图介绍 / 193
12.3.2 使用工具：Tiled Map Editor / 194
12.3.3 在代码中加载瓦片地图 / 198
12.4 自行实现无限行走的瓦片地图 / 200
第13 章 界面的文字有点丑 / 204
13.1 高级货位图字体（BMFont）/ 204
13.2 制作位图字体 / 205
13.2.1 BMFont / 205
13.2.2 更特别的字体 / 207
13.3 使用位图字体 / 209
第14 章 超炫的效果——粒子系统 / 211
14.1 粒子系统介绍 / 211
14.2 Cocos2d-JS的粒子系统 / 211
14.3 Cocos2d-JS提供的几种现成效果 / 215
14.4 参数太多手写太累——各种可视化编辑器 / 222
14.5 在代码中加载可视化编辑的粒子系统 / 223
14.6 让粒子系统自生自灭 / 224
第15 章 尝试做一个更大的游戏——Hungry Hero（上篇）/ 226
15.1 游戏简介 / 226
15.2 将会用到什么技术 / 227
15.3 场景列表 / 228
15.4 超人的设计 / 230
15.5 食物的设计 / 232
15.6 障碍物的设计 / 232
15.7 咖啡和蘑菇的设计 / 233
15.8 背景的设计 / 233
15.9 音乐和音效 / 234
第16 章 尝试做一个更大的游戏——Hungry Hero（下篇）/ 235
16.1 准备工作 / 235
16.1.1 代码架构 / 235
16.1.2 打包SpriteSheet / 236
16.2 菜单界面的实现 / 237
16.2.1 添加界面元素 / 237
16.2.2 菜单 / 238
16.2.3 声音按钮 / 239
16.2.4 给画面添加动感 / 240
16.3 声音播放的统一管理 / 241
16.4 关于界面的实现 / 243
16.5 游戏数据的记录 / 245
16.6 游戏过程界面的实现 / 245
16.6.1 游戏UI / 246
16.6.2 加入背景 / 248
16.6.3 结束画面 / 250
16.7 超人登场 / 252
16.7.1 超人的帧动画 / 252
16.7.2 游戏过程场景的框架 / 254
16.7.3 超人的几种状态 / 256
16.7.4 超人起飞 / 256
16.7.5 操控超人 / 258
16.7.6 超人的飞行过程 / 261
16.8 食物 / 263
16.8.1 使用缓存池 / 263
16.8.2 分离食物的逻辑 / 264
16.8.3 食物的移动 / 266
16.8.4 食物的四种排列 / 267
16.8.5 咖啡和蘑菇 / 271
16.8.6 超人和食物的碰撞检测 / 272
16.8.7 接入游戏过程场景 / 274
16.9 障碍物 / 274
16.9.1 封装四种障碍物 / 274
16.9.2 分离障碍物的逻辑 / 278
16.9.3 创建障碍物 / 279
16.9.4 障碍物的移动 / 280
16.9.5 碰到障碍物 / 281
16.9.6 接入游戏过程场景 / 282
16.10 游戏结束 / 283
16.11 加入特效，大功告成 / 285
16.11.1 碰撞障碍物的画面抖动 / 285
16.11.2 吃食物的效果 / 286
16.11.3 蘑菇和咖啡效果 / 287
16.11.4 极速状态下的风痕 / 289
第三部分总结 / 291
第四部分 把两个游戏做成原生手机游戏
第17 章 咱们也来做APP / 294
17.1 一次开发到处运行 / 294
17.2 Android 调试和发布 / 295
17.2.1 命令行运行 / 295
17.2.2 命令行发布 / 297
17.2.3 可视化调试和发布——Cocos Code IDE / 299
17.3 在iOS 侧运行和发布 / 302
17.4 Cocos2d-JS App的启动过程 / 303
第18 章 真是这么美好吗？更多问题来了 / 304
18.1 内存管理 / 304
18.1.1 内存管理机制 / 304
18.1.2 如何使用retain 和release / 309
18.2 HTML5 和JSB 接口差异 / 310
18.3 如何解决兼容问题 / 311
18.4 把碰碰糖和Hungry Hero 部署到手机 / 313
18.4.1 碰碰糖的改造 / 313
18.4.2 Hungry Hero 的改造 / 314
第四部分总结 / 320
第五部分 高 级 篇
第19 章 订阅者模式——事件机制 / 322
19.1 谁更早知道这个事——事件优先级 / 322
19.2 不让别人知道——停止事件传递 / 324
19.3 自定义事件——eventManager / 326
19.4 自己动手做更贴心的消息中心 / 328
第20 章 屏幕尺寸适配哪家强 / 331
20.1 各种终端的屏幕尺寸 / 332
20.2 Cocos2d-JS屏幕适配大法 / 332
20.2.1 设计尺寸（WinSize）、可视尺寸（VisibleSize）和屏幕尺寸（FrameSize）/ 333
20.2.2 方案1——自适应拉伸 / 333
20.2.3 方案2——全显示 / 335
20.2.4 方案3——无黑边 / 335
20.2.5 方案4——固定高度 / 337
20.2.6 方案5——固定宽度 / 339
第21 章 让死去的主角灰掉——渲染控制 / 342
21.1 让人羡慕的Flash 效果 / 342
21.2 Cocos2d 能模仿Flash 吗 / 344
21.3 要从GPU说起 / 345
21.4 想怎么画就怎么画——自定义着色器（shader）/ 346
21.4.1 Cocos2d 和OpenGL ES / 346
21.4.2 画一个蓝色三角形 / 347
21.4.3 让原来彩色的精灵变黑白 / 351
21.4.4 着色器可以做更多 / 355
21.4.5 HTML5 和JSB 在着色器中的兼容问题 / 356
21.5 更简单的方式——混合模式（blendFunc）/ 357
21.5.1 混合模式介绍 / 357
21.5.2 利用混合模式 / 358
第22 章 动态热更新 / 363
22.1 热更新的原理 / 363
22.2 Cocos2d-JS热更新的关键点 / 364
22.3 利用AssetsManager 实现热更新 / 364
22.4 部署服务器测试热更新 / 371
第23 章 想说的还有很多 / 374
23.1 怎么从单机走向网络 / 374
23.2 发布游戏需要知道的 / 375
23.3 接下来可以做什么 / 375
23.4 欢迎反馈问题给笔者Kenko / 375
第五部分总结 / 376
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Cocos2d-JS开发之旅——从HTML 5到原生手机游戏
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node.js项目实践
第1 章 安装Node.js 及相关要点 .............. 1
安装Node.js 和NPM ................................. 1
一键安装 ................................................ 2
通过HomeBrew 或MacPorts 安装 ........ 3
通过tar 文件安装 .................................. 4
无须sudo 授权进行安装 ........................ 4
通过Git Repo 进行安装 ......................... 5
通过Nave 进行多版本安装 ................... 5
通过NVM 进行多版本安装................... 6
其他的多版本系统 .................................. 6
检查安装 ................................................ 7
Node.js 控制台（REPL） ....................... 7
加载Node.js 脚本....................................... 9
Node.js 的基础和语法 ............................... 9
弱类型 .................................................... 9
Buffer——Node.js 特殊数据类型..........10
对象字面量 ...........................................10
函数 ....................................................... 11
数组 .......................................................12
原型特性 ...............................................12
编码规范 ...............................................13
Node.js 的全局变量和保留字 ................14
__dirname 与process.cwd 的对比 .........17
浏览器API 输助工具 ............................17
Node.js 的核心模块 ...............................18
便捷的Node.js 工具 ..............................20
在Node.js 中读写文件 ..........................20
Node.js 中的数据流 ...............................21
使用NPM 安装Node.js 模块 ................21
优化Node.js 中的回调函数...................22
使用Node.js 的HTTP 模块来创建一个简单服务器 ...................23
调试Node.js 程序......................................24
核心Node.js 调试 ..................................24
使用Node Inspector 来调试 ..................25
Node.js 集成开发环境和代码编辑器 ...28
监听文件变化 .............................................30
小结 ...............................................................31
第2 章 使用Express.js 4 创建Node.js 的Web 应用程序 ...................32
什么是Express.js .......................................32
Express.js 是如何工作的 ..........................35
Express.js 的安装 .......................................36
Express.js 的版本 ..................................36
Express.js 生成器 ..................................37
本地Express.js ......................................38
Express.js 脚手架 .......................................40
Express.js 命令行界面 ...........................41
Express.js 中的路由 ...............................43
Express.js 的核心——中间件 ................44
一个Express.js 应用的配置...................45
Jade 就是Express.js/Node.js 的Haml ...45
脚手架总结 ...........................................45
博客项目概述 .............................................46
提交数据 ...............................................47
Express.js 4 中的Hello World 例子 .......48
创建文件夹 ...........................................49
NPM 初始化和package.json .................50
依赖声明：npm install ...........................50
app.js 文件 .............................................51
Jade 模板 ...............................................55
运行Hello World 应用 ...........................56
小结 ...............................................................56
第3 章 Node.js 基于Mocha 的测试驱动开发和行为驱动开发 ......................57
安装与理解Mocha ...................................58
理解Mocha 的hook 机制 ......................60
用assert 进行TDD ...................................61
断言库Chai ...........................................63
用Expect.js 进行BDD .............................64
Expect.js 的语法 ....................................65
项目：为博客开发一个BDD 测试 ......65
将配置参数写入Makefile .....................68
小结 ...............................................................69
第4 章 模板引擎：Jade 和Handlebars 70
Jade 的语法和特性 ...................................70
标签 .......................................................71
变量/数据 ..............................................71
属性 .......................................................72
字面量 ...................................................73
文本 .......................................................73
Script 和 Style 块 ..................................74
JavaScript 代码 ......................................74
注释 .......................................................75
if 语句 ....................................................75
each 语句 ...............................................75
过滤器 ...................................................76
读取变量 ...............................................76
case ........................................................76
函数mixin .............................................77
include ....................................................78
extend .....................................................78
单独使用Jade .............................................79
Handlebars 的语法 ....................................83
变量 .......................................................83
each 语句 ...............................................83
非转义输出 ...........................................84
if 语句 ....................................................85
unless .....................................................85
with ........................................................86
注释 .......................................................87
自定义 Helpers .....................................87
Include ...................................................88
单独使用Handlebars .................................88
Express.js 4 中Jade 和Handlebars 的用法 ............................................91
Jade 和 Express.js .................................92
Handlebars 和Express.js ........................92
项目：给博客添加Jade 模板 .................93
layout.jade ..............................................94
index.jade ...............................................96
article.jade ..............................................97
login.jade ................................................98
post.jade .................................................99
admin.jade ............................................ 100
小结 ............................................................. 101
第5 章 MongoDB、Mongoskin 特性 .... 102
简单且正确地安装MongoDB .............. 103
如何运行Mongo 服务 ............................ 104
用控制台操作Mongo ............................. 105
MongoDB shell 命令介绍 ...................... 106
Node.js 版原生MongoDB 驱动示例 .. 107
Mongoskin 的主要方法介绍 ................. 111
项目：用Mongoskin 把博客数据存储到MongoDB ............................ 112
项目：在MongoDB 中添加seed 数据 ......................................... 112
项目：Mocha 测试 ............................... 113
项目：添加持久连接 ........................... 115
运行App .............................................. 126
小结 ............................................................. 127
第6 章 在Node.js 应用中使用session 和OAuth 进行用户认证和授权 ............... 128
使用Express.js 中间件权限管理 ......... 128
基于token 的用户认证 ........................... 129
基于session 的用户认证 ........................ 130
项目实践：为博客增加邮箱和密码登录功能 .......................................... 132
session 中间件 ..................................... 132
博客中的权限管理 ............................... 133
博客中的用户授权 ............................... 136
运行应用 ............................................. 138
Node.js OAuth ........................................... 138
使用Node.js OAuth 实现Twitter OAuth 2.0 的示例 ................................ 139
Everyauth ............................................. 140
项目实践：为博客增加Twitter OAuth 1.0 第三方登录（使用Everyauth 实现） .......... 141
添加“使用Twitter 账户登录”链接 .. 142
配置EveryauthTwitter 模块 ................. 142
小结 ............................................................. 148
第7 章 使用ORM 类库Mongoose 提升你的Node.js 数据 ......................... 149
安装Mongoose ......................................... 150
用独立的Mongoose 脚本建立数据库连接 .................................. 150
Mongoose 的原型 .................................... 152
使用钩子保持代码的逻辑清晰 ............ 154
自定义静态方法和实例方法 ................ 155
Mongoose 模型 ....................................... 155
使用population 建立关系和连接 ........ 158
嵌套的文档 ............................................... 160
虚拟字段 .................................................... 161
修改原型的行为 ...................................... 162
Express.js + Mongoose =真正的MVC ..................................... 164
小结 ................................. 175
第8 章 使用Express.js 和Hapi 构建Node.js REST API 服务 ....................... 176
RESTful API 基础 ................................... 177
项目依赖 .................................................... 179
使用Mocha 和Superagent 进行测试 . 180
使用Express 和Mongoskin 实现REST API 服务器 ...................................... 185
重构：使用Hapi 搭建REST API 服务器 .............................................. 192
小结 ............................................................. 199
第9 章 WebSocket、Socket.IO 和DerbyJS 的实时应用程序 .................... 200
什么是WebSocket ................................... 200
用ws 模块的例子介绍本地WebSocket 和Node.js .............................. 201
浏览器WebSocket 的实现 ................... 201
用ws 模块实现Node.js 服务器 .......... 202
Socket.IO 和Express.js 的例子 ............ 204
用DerbyJS、Express.js 和MongoDB 搭建一个在线协作的代码编辑器例子 ........ 209
项目依赖和package.json ..................... 210
服务器端代码 ...................................... 211
DerbyJS 应用程序 ................................ 213
DerbyJS 视图 ....................................... 215
编辑器Tryout ...................................... 217
小结 ............................................................. 218
第10 章 为Node.js 应用上线做准备 ..... 219
环境变量 .................................................... 219
生产环境下的Express.js ........................ 220
生产环境下的Socket.IO ........................ 222
错误处理 ................................ 223
错误处理工具Node.js domains ............ 225
使用Cluster 处理多线程 ........................ 229
使用Cluster2 处理多线程 ..................... 232
事件日志和监控 ...................................... 233
监控 ..................................................... 233
生产环境下的REPL ............................ 235
Winston ................................................ 236
使用Papertrail 应用来管理日志 ......... 237
使用Grunt 处理任务 ............................... 237
使用Git 来做版本控制和发布代码 ... 241
安装Git ............................................... 242
生成SSH 密钥 .................................... 242
创建本地Git 仓库................................ 245
将本地仓库推送到GitHub .................. 245
在云上使用TravisCI 运行测试用例 .. 246
TravisCI 配置 ...................................... 247
小结 ............................................................. 248
第11 章 部署Node.js 应用 ....................... 249
部署到Heroku .......................................... 249
部署到Amazon 网络服务 ..................... 255
使用forever、Upstart 和init.d 保持Node.js 持续运行 ................ 259
forever .................................................. 259
Upstart .................................................. 260
init.d ..................................................... 262
尽可能使用Nginx 提供静态资源 ....... 264
使用Varnish 缓存 .................................... 266
小结 ............................................................. 268
第12 章 Node.js 模块发布和参与开源 . 269
推荐的目录结构 ...................................... 270
所需模式 .................................................... 270
package.json............................................... 273
发布到NPM ............................................. 274
锁定版本 .................................................... 274
小结 ............................................................. 275
结束语 ......................................................... 275
进阶阅读 .................................................... 276
勘误和联系方式 ...................................... 276
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node.js项目实践
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML 5实战
前言第1章  拥抱HTML5  1.1  一个简单的HTML5页面    1.1.1  搭建支持的浏览器环境    1.1.2  检测浏览器是否支持HTML5标记    1.1.3  使用HTML5结构编写一个简单的Web页面  1.2  HTML5页面的特征    1.2.1  应用全新的HTML5特征结构化元素    1.2.2  使用CSS文件美化HTML5新元素  1.3  本章小结第2章  HTML5中常用的交互元素  2.1  内容交互元素    2.1.1  details元素    2.1.2  summary元素  2.2  菜单交互元素    2.2.1  menu元素    2.2.2  command元素  2.3  状态交互元素    2.3.1  progress元素    2.3.2  meter元素  2.4  本章小结第3章  HTML5中的重要元素  3.1  html根元素  3.2  文档元素  3.3  脚本  3.4  节点    3.4.1  section元素    3.4.2  nav元素    3.4.3  hgroup元素    3.4.4  address元素  3.5  分组内容    3.5.1  ul元素    3.5.2  ol元素    3.5.3  dl元素  3.6  文本层次语义    3.6.1  time元素    3.6.2  mark元素    3.6.3  cite元素  3.7  嵌入内容    3.7.1  img元素    3.7.2  iframe元素    3.7.3  object元素  3.8  公共属性    3.8.1  draggable属性    3.8.2  hidden属性    3.8.3  spellcheck属性    3.8.4  contenteditable属性  3.9  本章小结第4章  HTML5中的表单  4.1  input元素的新增类型    4.1.1  email邮件类型    4.1.2  url地址类型    4.1.3  number数字类型    4.1.4  range数字滑动条    4.1.5  date日期类型    4.1.6  search搜索类型  4.2  input元素新增的公用属性    4.2.1  autofocus属性    4.2.2  pattern属性    4.2.3  placeholder属性    4.2.4  required属性  4.3  新增表单元素    4.3.1  datalist元素    4.3.2  output元素    4.3.3  keygen元素  4.4  表单新增的验证方法和属性    4.4.1  checkValidity显式验证法    4.4.2  使用setCustomValidity方法修改提示信息    4.4.3  表单的novalidate属性  4.5  本章小结第5章  HTML5中的文件  5.1  选择文件    5.1.1  选择单个文件    5.1.2  选择多个文件    5.1.3  使用Blob接口获取文件的类型与大小    5.1.4  通过类型过滤选择的文件    5.1.5  通过accept属性过滤选择文件的类型  5.2  使用FileReader接口读取文件    5.2.1  FileReader接口的方法    5.2.2  使用readAsDataURL方法预览图片    5.2.3  使用readAsText方法读取文本文件    5.2.4  侦听FileReader接口中的事件  5.3  使用DataTransfer对象拖放上传图片文件  5.4  文件读取时的错误与异常    5.4.1  发生错误与异常的条件    5.4.2  错误代码说明  5.5  本章小结第6章  HTML5中的视频和音频  6.1  多媒体元素基本属性    6.1.1  元素格式    6.1.2  width与height属性    6.1.3  controls属性    6.1.4  poster属性    6.1.5  networkState属性    6.1.6  error属性    6.1.7  其他属性  6.2  多媒体元素常用方法    6.2.1  媒体播放时的方法    6.2.2  canPlayType方法  6.3  多媒体元素重要事件    6.3.1  媒体播放事件    6.3.2  timeupdate事件    6.3.3  其他事件  6.4  本章小结第7章  HTML5绘图基础  7.1  画布的基础知识    7.1.1  canvas元素的基本用法    7.1.2  绘制带边框矩形    7.1.3  绘制渐变图形  7.2  在画布中使用路径    7.2.1  moveTo与lineTo的用法    7.2.2  使用arc方法绘制圆形    7.2.3  绘制渐变圆形  7.3  对画布中图形的操作    7.3.1  变换图形原点坐标    7.3.2  组合多个图形    7.3.3  添加图形阴影  7.4  处理画布中的图像    7.4.1  绘制图像    7.4.2  平铺图像    7.4.3  切割图像    7.4.4  处理像素  7.5  画布的其他应用    7.5.1  绘制文字    7.5.2  保存、恢复及输出图形    7.5.3  制作简单的动画  7.6  本章小结第8章  HTML5中的数据存储  8.1  WebStorage存储简介    8.1.1  sessionStorage对象    8.1.2  localStorage对象  8.2  localStorage详解    8.2.1  清空localStorage数据    8.2.2  遍历localStorage数据    8.2.3  使用JSON对象存取数据    8.2.4  管理localStorage数据  8.3  WebSQL数据库基础    8.3.1  打开与创建数据库    8.3.2  执行事务    8.3.3  插入数据    8.3.4  数据管理  8.4  本章小结第9章  HTML5中的离线应用  9.1  离线应用程序    9.1.1  manifest文件简介    9.1.2  配置IIS服务器    9.1.3  离线应用的开发过程  9.2  本地缓存的更新及状态检测    9.2.1  updateready事件    9.2.2  update方法    9.2.3  swapCache方法    9.2.4  更新本地缓存时触发的其他事件  9.3  检测在线状态    9.3.1  onLine属性    9.3.2  online与offline事件    9.3.3  离线数据交互应用开发过程  9.4  本章小结第10章  HTML5中的其他应用型API  10.1  WebSocketsAPI    10.1.1  postMessage方法    10.1.2  使用WebSocket传送数据    10.1.3  使用WebSocket传送JSON对象  10.2  GeolocationAPI    10.2.1  使用getCurrentPosition方法获取当前地理位置    10.2.2  使用Google地图锁定位置  10.3  WebWorkersAPI    10.3.1  Worker对象处理线程    10.3.2  使用线程传递JSON对象    10.3.3  使用线程嵌套交互数据  10.4  本章小结第11章  HTML5中元素的拖放  11.1  拖放基础    11.1.1  使用JavaScript代码实现拖放    11.1.2  在HTML5中实现拖放时触发的事件  11.2  dataTransfer对象应用详解    11.2.1  使用setData与getData方法存入与读取拖放数据    11.2.2  使用setDragImage方法设置拖放图标    11.2.3  使用effectAllowed与dropEffect属性设置拖放效果  11.3  拖放应用实战    11.3.1  购物车的实现    11.3.2  相册的管理  11.4  本章小结实例目录    实例1-1  检测浏览器是否支持HTML5    实例1-2  Hello,World页面的实现    实例1-3  页面分栏实现    实例1-4  样式化页面实现    实例2-1  交互元素<details>的使用    实例2-2  用脚本控制交互元素<details>的使用    实例2-3  交互元素<summary>与<details>的结合使用    实例2-4  交互元素<menu>的使用    实例2-5  交互元素<command>与<menu>的结合使用    实例2-6  交互元素<progress>的使用    实例2-7  交互元素<meter>的使用    实例3-1  元素<html>的使用    实例3-2  元素<head>的使用    实例3-3  元素<script>与<noscript>的使用    实例3-4  元素<ol>的使用    实例3-5  元素<mark>的使用    实例3-6  元素<cite>的使用    实例3-7  公共属性draggable的使用    实例3-8  公共属性hidden的使用    实例3-9  公共属性spellcheck的使用    实例3-10  公共属性contenteditable的使用    实例4-1  email类型的<input>元素的使用    实例4-2  url类型的<input>元素的使用    实例4-3  number类型的<input>元素的使用    实例4-4  range类型的<input>元素实现颜色选择器    实例4-5  分类展示不同形式的选择日期    实例4-6  search类型的<input>元素的使用    实例4-7  <input>元素中autofocus属性的使用    实例4-8  <input>元素中pattern属性的使用    实例4-9  <input>元素中placeholder属性的使用    实例4-10  <input>元素中required属性的使用    实例4-11  <datalist>元素的使用    实例4-12  <output>元素的使用    实例4-13  <keygen>元素的使用    实例4-14  调用表单的checkValidity方法    实例4-15  调用表单的setCustomValidity方法    实例4-16  表单中novalidate属性的使用    实例5-1  选择单个文件上传    实例5-2  选择多个文件上传    实例5-3  获取上传文件的类型与大小    实例5-4  通过类型过滤上传文件    实例5-5  通过accept属性过滤上传文件的类型    实例5-6  使用readAsDataURL方法预览图片    实例5-7  使用readAsText方法读取文本文件    实例5-8  展示文件读取时触发事件的先后顺序    实例5-9  使用DataTransfer对象拖放上传图片文件    实例6-1  使用多媒体元素播放文件    实例6-2  设置<video>元素的大小与样式    实例6-3  设置<video>元素的控制条工具属性    实例6-4  设置<video>元素的poster属性    实例6-5  获取<video>元素networkState属性的返回值    实例6-6  获取<video>元素error属性的返回值    实例6-7  自定义<video>元素控制条工具栏    实例6-8  使用canPlayType方法检测浏览器支持媒体类型    实例6-9  获取多媒体元素在播放事件中的不同状态    实例6-10  通过timeupdate事件动态显示媒体文件播放时间    实例7-1  使用<canvas>元素绘制正方形    实例7-2  使用<canvas>元素绘制带边框的矩形    实例7-3  使用<canvas>元素绘制有渐变色的图形    实例7-4  使用moveTo与lineTo方法绘制多条直线    实例7-5  使用arc方法绘制多个不同样式的圆形    实例7-6  使用<canvas>元素绘制径向渐变的圆形    实例7-7  使用<canvas>元素移动、缩放、旋转图形    实例7-8  使用<canvas>元素设置多图形组合显示的方式    实例7-9  使用<canvas>元素添加绘制图形阴影    实例7-10  使用drawImage方法在画布中绘制图像    实例7-11  使用createPattern方法在画布中平铺图像    实例7-12  使用clip方法在画布中切割图像    实例7-13  使用getImageData与putImageData方法处理图像像素    实例7-14  使用fillText与strokeText方法绘制文字    实例7-15  在画布中保存、恢复及输出图形    实例7-16  在画布中制作简单的动画    实例8-1  使用sessionStorage对象保存与读取临时数据    实例8-2  使用localStorage对象保存与读取登录用户名与密码    实例8-3  清空localStorage对象保存的全部数据    实例8-4  遍历localStorage对象保存的全部数据    实例8-5  使用JSON对象存取数据    实例8-6  管理localStorage数据    实例8-7  使用openDatabase打开与创建数据库    实例8-8  使用transaction方法执行事务    实例8-9  使用executeSql方法插入记录    实例8-10  使用executeSql方法管理数据记录    实例9-1  开发一个简单的离线应用    实例9-2  监测updateready事件触发    实例9-3  使用update方法更新本地缓存    实例9-4  使用swapCache方法更新本地缓存    实例9-5  检测离线应用在加载过程中触发的事件    实例9-6  通过onLine属性检测网络的当前状态    实例9-7  通过online与offline事件检测网络的当前状态    实例9-8  开发一个离线留言数据交互应用    实例10-1  使用postMessage方法实现跨文档传输数据    实例10-2  使用WebSocket对象传送数据    实例10-3  使用WebSocket传送JSON对象    实例10-4  使用getCurrentPosition方法获取出错数据信息    实例10-5  使用getCurrentPosition方法获取地理位置信息    实例10-6  使用Google地图锁定位置    实例10-7  使用Worker对象处理线程    实例10-8  使用线程传递JSON对象    实例10-9  使用线程嵌套交互数据    实例11-1  使用JavaScript代码实现元素拖放    实例11-2  元素在拖放过程中触发的事件    实例11-3  使用setData与getData方法存入与读取拖放数据    实例11-4  使用setDragImage方法设置拖放图标    实例11-5  使用effectAllowed与dropEffect属性设置拖放效果    实例11-6  使用拖放API将商品拖入购物车    实例11-7  使用拖放API将图片拖入回收站
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML 5实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>PHP与jQuery开发实例
第1 章  使用jQuery 处理事件　　1
1.1  简介　　1
1.2  在页面加载完成时执行函数　　1
1.2.1  准备　　1
1.2.2  步骤　　1
1.2.3  原理　　2
1.3  绑定和解绑元素　　3
1.3.1  准备　　3
1.3.2  步骤　　3
1.3.3  原理　　5
1.3.4  更多信息　　5
1.4  向即将创建的元素添加事件　　6
1.4.1  步骤　　6
1.4.2  原理　　7
1.4.3  参考章节　　8
1.5  使用jQuery 提交表单　　8
1.5.1  准备　　8
1.5.2  步骤　　8
1.5.3  原理　　9
1.5.4  更多信息　　9
1.5.5  参考章节　　10
1.6  检查缺少的图像　　10
1.6.1  准备　　10
1.6.2  步骤　　10
1.6.3  原理　　11
1.6.4  参考章节　　12
1.7  创建选择/取消所有复选框的功能　　12
1.7.1  准备　　12
1.7.2  步骤　　12
1.7.3  原理　　15
1.7.4  更多信息　　15
1.8  捕获鼠标事件　　15
1.8.1  准备　　15
1.8.2  步骤　　15
1.8.3  原理　　17
1.9  创建键盘快捷键　　18
1.9.1  准备　　18
1.9.2  步骤　　18
1.9.3  原理　　20
1.9.4  更多信息　　20
1.9.5  参考章节　　20
1.10  显示用户选择的文本　　20
1.10.1  准备　　20
1.10.2  步骤　　20
1.10.3  原理　　23
1.10.4  更多信息　　23
1.11  在页面上拖动元素　　24
1.11.1  准备　　24
1.11.2  步骤　　24
1.11.3  原理　　26
1.11.4  参考章节　　26
第2 章  使用PHP 和jQuery 　　27
2.1  简介　　27
2.2  使用jQuery 从PHP 获取数据　　28
2.2.1  准备　　28
2.2.2  步骤　　28
2.2.3  原理　　30
2.2.4  参考章节　　31
2.3  为所有表单元素自动创建查询字符串　　31
2.3.1  准备　　31
2.3.2  步骤　　31
2.3.3  原理　　33
2.3.4  更多信息　　33
2.3.5  参考章节　　34
2.4  在PHP 中检测AJAX 请求　　 34
2.4.1  准备　　34
2.4.2  步骤　　34
2.4.3  原理　　35
2.4.4  更多信息　　35
2.5  向PHP 发送数据　　36
2.5.1  准备　　36
2.5.2  步骤　　36
2.5.3  原理　　38
2.5.4  更多信息　　38
2.5.5  参考章节　　39
2.6  终止AJAX 请求　　39
2.6.1  准备　　39
2.6.2  步骤　　39
2.6.3  原理　　41
2.6.4  参考章节　　41
2.7  创建空页面并按区域加载它　　41
2.7.1  准备　　42
2.7.2  步骤　　42
2.7.3  原理　　44
2.7.4  更多信息　　44
2.7.5  参考章节　　44
2.8  处理AJAX 请求中的错误　　 44
2.8.1  准备　　44
2.8.2  步骤　　44
2.8.3  原理　　47
2.8.4  更多信息　　47
2.8.5  参考章节　　48
2.9  禁止浏览器缓存AJAX 请求　　 48
2.9.1  步骤　　48
2.9.2  原理　　48
2.9.3  更多信息　　 49
2.9.4  参考章节　　 49
2.10  按需加载JavaScript 以减少页面加载时间　　49
2.10.1  准备　　49
2.10.2  步骤　　49
2.10.3  原理　　51
2.10.4  更多信息　　 51
2.10.5  参考章节　　 51
第3 章  处理XML 文档　　 52
3.1  简介　　 52
3.2  使用SimpleXML 从文件和字符串加载XML　　54
3.2.1  准备　　 54
3.2.2  步骤　　 54
3.2.3  原理　　 55
3.2.4  更多信息　　 56
3.2.5  参考章节　　 56
3.3  使用SimpleXML 访问元素和特性　　 57
3.3.1  准备　　 57
3.3.2  步骤　　 57
3.3.3  原理　　 59
3.3.4  更多信息　　60
3.3.5  参考章节　　60
3.4  使用XPath 搜索元素　　 60
3.4.1  准备　　 60
3.4.2  步骤　　 60
3.4.3  原理　　 63
3.4.4  更多信息　　 63
3.4.5  参考章节　　 64
3.5  使用DOM 扩展读取XML 　　 64
3.5.1  准备　　 64
3.5.2  步骤　　 64
3.5.3  原理　　 66
3.5.4  更多信息　　 66
3.5.5  参考章节　　 67
3.6  使用DOM 扩展创建XML 　　 67
3.6.1  准备　　 67
3.6.2  步骤　　 67
3.6.3  原理　　 68
3.6.4  参考章节　　 69
3.7  使用DOM 扩展修改XML 　　 69
3.7.1  准备　　 69
3.7.2  步骤　　 69
3.7.3  原理　　 71
3.7.4  更多信息　　72
3.7.5  参考章节　　72
3.8  使用jQuery 解析XML　　72
3.8.1  准备　　72
3.8.2  步骤　　73
3.8.3  原理　　74
3.8.4  更多信息　　74
3.8.5  参考章节　　75
第4 章  使用JSON　　76
4.1  简介　　76
4.2  在PHP 中创建JSON　　77
4.2.1  准备　　78
4.2.2  步骤　　78
4.2.3  原理　　78
4.2.4  更多信息　　79
4.2.5  参考章节　　79
4.3  在PHP 中读取JSON　　79
4.3.1  准备　　79
4.3.2  步骤　　79
4.3.3  原理　　80
4.3.4  参考章节　　81
4.4  捕获JSON 解析错误　　81
4.4.1  准备　　81
4.4.2  步骤　　81
4.4.3  原理　　82
4.4.4  参考章节　　83
4.5  在jQuery 中访问来自JSON 的数据　　83
4.5.1  准备　　83
4.5.2  步骤　　83
4.5.3  原理　　86
4.5.4  更多信息　　86
4.5.5  参考章节　　87
第5 章  使用表单　　88
5.1  简介　　88
5.2  在表单中动态添加输入字段　　88
5.2.1  准备　　88
5.2.2  步骤　　89
5.2.3  原理　　90
5.2.4  更多信息　　91
5.3  在页面中搜索用户输入的字符串　　91
5.3.1  准备　　91
5.3.2  步骤　　91
5.3.3  原理　　94
5.3.4  更多信息　　94
5.4  使用jQuery 检查空字段　　94
5.4.1  步骤　　94
5.4.2  原理　　97
5.4.3  更多信息　　97
5.4.4  参考章节　　97
5.5  使用jQuery 验证数字　　97
5.5.1  准备　　98
5.5.2  步骤　　98
5.5.3  原理　　99
5.5.4  参考章节　　100
5.6  使用正则表达式验证电子邮件和网站地址　　100
5.6.1  准备　　100
5.6.2  步骤　　100
5.6.3  原理　　102
5.6.4  更多信息　　102
5.6.5  参考章节　　103
5.7  在用户键入时显示错误：实时验证　　103
5.7.1  准备　　103
5.7.2  步骤　　103
5.7.3  原理　　106
5.7.4  参考章节　　107
5.8  加强验证：在PHP 中再次验证　　107
5.8.1  准备　　107
5.8.2  步骤　　107
5.8.3  原理　　110
5.8.4  更多信息　　110
5.8.5  参考章节　　111
5.9  创建投票系统　　111
5.9.1  准备　　111
5.9.2  步骤　　111
5.9.3  原理　　115
5.9.4  更多信息　　115
5.9.5  参考章节　　115
5.10  允许在文本区内使用HTML 和限制可使用的HTML 标签　　115
5.10.1  准备　　116
5.10.2  步骤　　116
5.10.3  原理　　117
5.10.4  更多信息　　118
第6 章  向表单添加视觉效果　　119
6.1  简介　　119
6.2  创建带有特效的井字格游戏　　119
6.2.1  准备　　119
6.2.2  步骤　　120
6.2.3  原理　　124
6.2.4  更多信息　　125
6.3  在AJAX 请求期间通知用户　　125
6.3.1  准备　　125
6.3.2  步骤　　126
6.3.3  原理　　129
6.3.4  更多信息　　129
6.3.5  参考章节　　129
6.4  创建可展开和折叠的方框　　129
6.4.1  准备　　129
6.4.2  步骤　　129
6.4.3  原理　　132
6.4.4  更多信息　　133
6.5  更新元素后淡出　　133
6.5.1  准备　　133
6.5.2  步骤　　134
6.5.3  原理　　135
6.6  按需浮动方框　　135
6.6.1  准备　　135
6.6.2  步骤　　136
6.6.3  原理　　138
6.6.4  更多信息　　138
6.7  更新购物车中的商品　　138
6.7.1  准备　　138
6.7.2  步骤　　139
6.7.3  原理　　143
6.7.4  更多信息　　144
6.7.5  参考章节　　144
第7 章  创建漂亮的导航菜单　　145
7.1  简介　　145
7.2  创建基本的下拉菜单　　145
7.2.1  准备　　145
7.2.2  步骤　　145
7.2.3  原理　　148
7.2.4  更多信息　　148
7.2.5  参考章节　　149
7.3  创建在鼠标悬停时更改背景的菜单　　149
7.3.1  准备　　149
7.3.2  步骤　　149
7.3.3  原理　　151
7.3.4  参考章节　　 151
7.4  创建折叠框式菜单　　151
7.4.1  准备　　151
7.4.2  步骤　　151
7.4.3  原理　　155
7.4.4  更多信息　　156
7.4.5  参考章节　　156
7.5  创建浮动菜单　　156
7.5.1  准备　　156
7.5.2  步骤　　156
7.5.3  原理　　160
7.5.4  参考章节　　160
7.6  创建选项卡导航界面　　160
7.6.1  准备　　160
7.6.2  步骤　　160
7.6.3  原理　　163
7.7  添加更多选项卡　　164
7.7.1  准备　　164
7.7.2  步骤　　164
7.7.3  原理　　168
7.7.4  更多信息　　168
7.7.5  参考章节　　169
7.8  使用选项卡创建向导　　169
7.8.1  准备　　169
7.8.2  步骤　　169
7.8.3  原理　　173
7.8.4  参考章节　　173
第8 章  使用PHP 和jQuery 绑定数据　　 174
8.1  简介　　174
8.2  从数据库获取数据并以表格形式显示　　175
8.2.1  准备　　175
8.2.2  步骤　　176
8.2.3  原理　　178
8.2.4  更多信息　　179
8.3  从表单收集数据并保存到数据库　　179
8.3.1  准备　　179
8.3.2  步骤　　179
8.3.3  原理　　183
8.3.4  更多信息　　183
8.3.5  参考章节　　183
8.4  填充彼此依赖的连锁组合框　　183
8.4.1  准备　　184
8.4.2  步骤　　185
8.4.3  原理　　188
8.5  检查数据库中的用户名可用性　　189
8.5.1  准备　　189
8.5.2  步骤　　190
8.5.3  原理　　192
8.5.4  更多信息　　193
8.6  为大型记录集的数据分页　　193
8.6.1  准备　　193
8.6.2  步骤　　193
8.6.3  原理　　197
8.7  向文本框添加自动提示功能　　198
8.7.1  准备　　198
8.7.2  步骤　　199
8.7.3  原理　　203
8.7.4  参考章节　　204
8.8  创建标签云　　205
8.8.1  准备　　205
8.8.2  步骤　　205
8.8.3  原理　　208
8.8.4  参考章节　　208
第9 章  使用PHP 和jQuery 改进网站　　209
9.1  简介　　209
9.2  使用服务器代理发送跨域请求　　209
9.2.1  准备　　209
9.2.2  步骤　　210
9.2.3  原理　　214
9.2.4  参考章节　　214
9.3  使用jQuery 创建跨域请求　　214
9.3.1  准备　　216
9.3.2  步骤　　216
9.3.3  原理　　219
9.3.4  更多信息　　219
9.3.5  参考章节　　219
9.4  创建无限滚动页面　　219
9.4.1  准备　　219
9.4.2  步骤　　220
9.4.3  原理　　222
9.4.4  更多信息　　223
9.5  创建jQuery 插件　　223
9.5.1  准备　　223
9.5.2  步骤　　223
9.5.3  原理　　226
9.6  使用jQuery 和PHP 显示RSS 源　　227
9.6.1  准备　　228
9.6.2  步骤　　228
9.6.3  原理　　230
9.6.4  参考章节　　230
附录A  Firebug 　　231
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>PHP与jQuery开发实例
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>自己动手设计物联网
第1章  概览  1
1.1  物联网发展历史  1
1.2  物联网概念  3
1.3  联网——各式各样的联网设备  4
1.4  物联网系统的核心是网络  5
1.5  小结  6
第2章  一个极简的物联网：hello,world  8
2.1  数据的传输过程  9
2.1.1  将数据快递到用户手中  10
2.1.2  数据与服务中心  14
2.2  一个文本的物联网  16
2.2.1  从浏览器到服务器  17
2.2.2  获取数据与状态  22
2.3  设备状态改变  23
2.3.1  用Raspberry Pi来读取数据  24
2.3.2  使用Raspberry Pi控制LED  28
2.4  小结  32
2.5  练习建议  33
2.6  问题回顾  33
2.7  相关阅读资料  33
第3章  分解物联网系统  34
3.1  物联网的层级结构  35
3.1.1  一个常见场景下的层级结构  35
3.1.2  理想的物联网层级结构  38
3.1.3  与真实世界交互的物理层  41
3.1.4  物联网的神经中枢——协调层  45
3.1.5  物联网的核心——应用层  47
3.1.6  通信  49
3.2  小结  51
3.3  相关阅读资料  52
第4章  基于Web的物联网系统  53
4.1  Web应用架构  54
4.1.1  MVC  55
4.1.2  领域与适配器层  56
4.1.3  最小的HTTP API  57
4.1.4  RESTful API  58
4.2  数据持久化  63
4.2.1  数据库简介  63
4.2.2  连接MongoDB数据库  65
4.3  视图与应用层  76
4.3.1  视图  76
4.3.2  控制层界面  78
4.4  部署  84
4.5  小结  85
4.6  练习建议  86
4.7  相关阅读资料  86
第5章  连接设备  87
5.1  连接控制器  88
5.1.1  一个重复的示例以及仿造API  89
5.1.2  Raspberry Pi + Arduino  90
5.1.3  Arduino与网络模块  94
5.1.4  NodeMCU  98
5.2  连接执行器  103
5.2.1  直接控制示例  103
5.2.2  间接控制示例  106
5.2.3  示例代码  109
5.3  连接传感器  111
5.3.1  让API支持上传传感器数据  112
5.3.2  土壤湿度传感器  114
5.3.3  温度传感器  115
5.3.4  数据合并  121
5.4  小结  123
5.5  相关阅读资料  123
第6章  物联网应用示例  124
6.1  数据可视化  125
6.1.1  可视化用户数据  127
6.1.2  仪表盘  129
6.2  仪表盘类型示例：温度趋势图  130
6.2.1  移动设备上查看  139
6.2.2  使用Dashing  140
6.3  创建手机应用  146
6.3.1  Ionic简介  147
6.3.2  趋势图  153
6.3.3  控制硬件  155
6.3.4  用蓝牙来与硬件通信  158
6.4  使用AWS云平台构建物联网  162
6.5  小结  167
6.6  相关阅读资料  168
第7章  真正的物联网：MQTT与CoAP协议  169
7.1  MQTT  171
7.1.1  MQTT消息订阅示例  171
7.1.2  创建MQTT服务  174
7.1.3  整合MQTT服务  179
7.1.4  MQTT-SN  189
7.2  CoAP  189
7.2.1  CoAP协议示例  191
7.2.2  创建CoAP服务  194
7.2.3  整合CoAP服务  197
7.3  小结  200
7.4  相关阅读资料  200
第8章  智能与安全  201
8.1  回顾我们的物联网系统  202
8.2  智能化  204
8.2.1  自然语言处理  204
8.2.2  机器学习之贝叶斯分类器  207
8.3  安全与隐私  209
8.3.1  网络攻击  209
8.3.2  认证  211
8.3.3  私有物联网  212
8.3.4  隐私  212
8.4  小结  213
8.5  相关阅读资料  214
附录A  Raspberry Pi快速指南  215
附录B  JavaScript基础  217
附录C  Ionic简单帮助文档  228
附录D  相关资源  233
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>自己动手设计物联网
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Angular权威教程
第1章　编写你的第一个Angular Web应用　　1
1.1　仿制Reddit网站　　1
1.2　起步　　3
1.2.1　TypeScript　　3
1.2.2　angular-cli　　3
1.2.3　示例项目　　4
1.3　运行应用　　7
1.3.1　制作Component　　8
1.3.2　导入依赖　　9
1.3.3　Component注解　　10
1.3.4　用templateUrl添加模板　　11
1.3.5　添加template　　11
1.3.6　用styleUrls添加CSS样式　　12
1.3.7　加载组件　　12
1.4　把数据添加到组件中　　13
1.5　使用数组　　15
1.6　使用UserItemComponent组件　　18
1.6.1　渲染UserItemComponent　　18
1.6.2　接收输入　　19
1.6.3　传入Input值　　20
1.7  “启动”速成班　　21
1.8　扩展你的应用　　22
1.8.1　添加CSS　　24
1.8.2　应用程序组件　　24
1.8.3　添加互动　　26
1.8.4　添加文章组件　　29
1.9　渲染多行　　36
1.9.1　创建Article类　　36
1.9.2　存储多篇文章　　40
1.9.3　使用inputs配置ArticleComponent　　41
1.9.4　渲染文章列表　　42
1.10　添加新文章　　44
1.11　最后的修整　　44
1.11.1　显示文章所属的域名　　44
1.11.2　基于分数重新排序　　45
1.12　全部代码　　45
1.13　总结　　45
1.14　获得帮助　　46
第2章　TypeScript　　47
2.1　Angular是用TypeScript构建的　　47
2.2　TypeScript提供了哪些特性　　48
2.3　类型　　49
2.4　内置类型　　50
2.4.1　字符串　　50
2.4.2　数字　　50
2.4.3　布尔类型　　51
2.4.4　数组　　51
2.4.5　枚举　　51
2.4.6　任意类型　　52
2.4.7  “无”类型　　52
2.5　类　　52
2.5.1　属性　　52
2.5.2　方法　　53
2.5.3　构造函数　　54
2.5.4　继承　　55
2.6　工具　　57
2.6.1　胖箭头函数　　57
2.6.2　模板字符串　　58
2.7　总结　　59
第3章　Angular的工作原理　　60
3.1　应用　　60
3.1.1　主导航组件　　61
3.1.2　面包屑导航组件　　61
3.1.3　产品列表组件　　62
3.2　产品数据模型　　64
3.3　组件　　64
3.4　组件注解　　66
3.4.1　组件selector　　66
3.4.2　组件template　　67
3.4.3　添加产品　　67
3.4.4　用模板绑定来查看产品　　68
3.4.5　添加更多产品　　69
3.4.6　选择一个产品　　70
3.4.7　用<products-list>列出产品　　70
3.5　产品列表组件　　73
3.5.1　设置ProductsList的@Component配置项　　73
3.5.2　组件的输入　　74
3.5.3　组件的输出　　77
3.5.4　触发自定义事件　　78
3.5.5　编写ProductsList的控制器类　　79
3.5.6　编写ProdctsList的视图模板　　80
3.5.7　完整的ProductsList组件　　81
3.6　产品条目组件　　83
3.6.1　产品条目的组件配置　　83
3.6.2　产品条目组件的定义类　　84
3.6.3　产品条目组件的template　　84
3.6.4　完整的ProductRow代码清单　　85
3.7　产品图片组件　　85
3.8　价格展示组件　　86
3.9　产品分类组件　　87
3.10　创建NgModule并启动应用　　88
3.11　完整的项目　　89
3.12　关于数据架构的一点说明　　90
第4章　内置指令　　91
4.1　简介　　91
4.2　ngIf　　91
4.3　ngSwitch　　92
4.4　ngStyle　　93
4.5　ngClass　　95
4.6　ngFor　　98
4.7　ngNonBindable　　102
4.8　总结　　102
第5章　Angular中的表单　　103
5.1　表单——既重要，又复杂　　103
5.2　FormControl和FormGroup　　103
5.2.1　FormControl　　104
5.2.2　FormGroup　　104
5.3　我们的第一个表单　　105
5.3.1　加载FormsModule　　106
5.3.2　简易SKU表单：@Component注解　　107
5.3.3　简易SKU表单：template　　107
5.3.4　简易SKU表单：组件定义类　　110
5.3.5　试试看　　110
5.4　使用FormBuilder　　111
5.5　响应式表单 FormBuilder　　112
5.5.1　使用FormBuilder　　112
5.5.2　在视图中使用myForm　　113
5.5.3　试试看　　114
5.6　添加验证　　115
5.6.1　显式地把sku设置为实例变量　　116
5.6.2　自定义验证器　　120
5.7　监听变化　　121
5.8　ngModel　　122
5.9　总结　　124
第6章　HTTP　　125
6.1　简介　　125
6.2　使用 @angular/http　　126
6.3　基本请求　　127
6.3.1　构建SimpleHTTPComponent的@Component　　127
6.3.2　构建SimpleHTTPComponent的template　　128
6.3.3　构建SimpleHTTPComponent控制器　　128
6.3.4　完整的SimpleHTTP-Component　　130
6.4　编写YouTubeSearchComponent　　130
6.4.1　编写SearchResult　　132
6.4.2　编写YouTubeService　　132
6.4.3　编写SearchBox　　140
6.4.4　编写SearchResult-Component　　145
6.4.5　编写YouTubeSearch-Component　　147
6.5　@angular/http API　　150
6.5.1　发起一个POST请求　　150
6.5.2　PUT/PATCH/DELETE/HEAD　　150
6.5.3　RequestOptions　　151
6.6　总结　　151
第7章　路由　　152
7.1　为什么需要路由　　152
7.2　客户端路由的工作原理　　153
7.2.1　初级阶段：使用锚标记　　153
7.2.2　进化：HTML5客户端路由　　154
7.3　编写第一个路由配置　　155
7.4　Angular路由的组成部件　　155
7.4.1　导入　　155
7.4.2　路由配置　　155
7.4.3　安装路由配置　　156
7.4.4　使用<router-outlet>调用RouterOutlet指令　　157
7.4.5　使用[routerLink]调用routerLink指令　　158
7.5　整合　　159
7.5.1　创建组件　　160
7.5.2　应用程序组件　　161
7.5.3　配置路由　　163
7.6　路由策略　　164
7.7　路径定位策略　　165
7.8　运行应用程序　　165
7.9　路由参数　　167
7.10　音乐搜索应用　　168
7.10.1　首要步骤　　169
7.10.2　SpotifyService　　170
7.10.3　SearchComponent　　171
7.10.4　尝试搜索　　179
7.10.5　TrackComponent　　180
7.10.6　音乐搜索应用小结　　182
7.11　路由器钩子　　182
7.11.1　AuthService　　183
7.11.2　LoginComponent　　184
7.11.3　ProtectedComponent组件和路由守卫　　186
7.12　嵌套路由　　190
7.12.1　配置路由　　191
7.12.2　ProductsComponent组件　　191
7.13　总结　　194
第8章　依赖注入　　195
8.1　注入示例：PriceService　　196
8.2  “别打给我们……”　　197
8.3　依赖注入的部件　　199
8.4　尝试注入器　　200
8.5　用NgModule提供依赖　　201
8.6　提供者　　202
8.6.1　使用类　　202
8.6.2　使用工厂　　203
8.6.3　使用值　　205
8.6.4　使用别名　　205
8.7　应用中的依赖注入　　205
8.8　使用注入器　　207
8.9　替换值　　211
8.10　NgModule　　215
8.10.1　NgModule与JavaScript模块　　215
8.10.2　编译器与组件　　215
8.10.3　依赖注入与提供者　　216
8.10.4　组件可见性　　217
8.10.5　指定提供者　　218
8.11　总结　　219
第9章　Angular数据架构　　220
第10章　使用可观察对象的数据架构，
第1部分：服务　　222
10.1　可观察对象和RxJS　　222
10.1.1　注意：一些必备的RxJS相关知识　　222
10.1.2　学习响应式编程和RxJS　　223
10.2　聊天应用概览　　224
10.2.1　组件　　225
10.2.2　数据模型　　226
10.2.3　服务　　226
10.2.4　总结　　226
10.3　实现数据模型　　227
10.3.1　User　　227
10.3.2　Thread　　227
10.3.3　Message　　228
10.4　实现UserService　　228
10.4.1　currentUser流　　229
10.4.2　设置新用户　　230
10.4.3　UserService.ts　　231
10.5　MessagesService　　231
10.5.1　newMessages流　　231
10.5.2　messages流　　233
10.5.3　操作流模式　　233
10.5.4　共享流　　234
10.5.5　把Message对象添加到messages流中　　235
10.5.6　完整的MessagesService　　238
10.5.7　试用MessagesService　　241
10.6　ThreadsService　　242
10.6.1　当前一组Thread的映射（threads流）　　242
10.6.2　按时间逆序排列的Thread列表（orderedthreads流）　　246
10.6.3　当前已选的Thread（currentThread流）　　246
10.6.4　当前已选Thread的Message列表（currentThread- Messages流）　　248
10.6.5　完整的ThreadsService　　250
10.7　总结　　251
第11章　使用可观察对象的数据架构，
第2部分：视图组件　　252
11.1　构建视图：顶层组件ChatApp　　252
11.2　ChatThreads组件　　254
11.2.1　ChatThreads控制器　　255
11.2.2　ChatThreads的template　　255
11.3　单个ChatThread组件　　256
11.3.1　ChatThread控制器和ngOnInit　　257
11.3.2　ChatThread的template　　258
11.3.3　ChatThread的完整代码　　258
11.4　ChatWindow组件　　259
11.4.1　ChatWindow组件类属性　　260
11.4.2　ChatWindow的ngOnInit　　261
11.4.3　ChatWindow的send-Message　　261
11.4.4　ChatWindow的onEnter　　262
11.4.5　ChatWindow的scrollTo-Bottom　　262
11.4.6　ChatWindow的template　　263
11.4.7　处理键盘动作　　264
11.4.8　使用ngModel　　264
11.4.9　点击Send按钮　　265
11.4.10　完整的ChatWindow组件　　265
11.5　ChatMessage组件　　267
11.5.1　设置incoming属性　　268
11.5.2　ChatMessage的template　　268
11.5.3　完整的ChatMessage代码清单　　270
11.6　ChatNavBar组件　　273
11.6.1　ChatNavBar的@Component　　273
11.6.2　ChatNavBar控制器　　273
11.6.3　ChatNavBar的template　　274
11.6.4　完整的ChatNavBar组件　　275
11.7　总结　　276
11.8　更进一步　　277
第12章　基于TypeScript的Redux 简介　　278
12.1　Redux　　279
12.2　Redux核心概念　　280
12.2.1　reducer是什么　　280
12.2.2　定义Action和Reducer的接口　　281
12.2.3　创建第一个Reducer　　281
12.2.4　运行第一个Reducer　　282
12.2.5　使用action调整计数器　　283
12.2.6　reducer的switch　　284
12.2.7　action的“参数”　　285
12.3　保存state　　286
12.3.1　使用store　　287
12.3.2　使用subscribe进行通知　　287
12.3.3　Redux核心　　290
12.4　消息应用　　291
12.4.1　消息应用的state　　291
12.4.2　消息应用的action　　292
12.4.3　消息应用的reducer　　292
12.4.4　试用action　　295
12.4.5　action creator　　296
12.4.6　使用真正的Redux　　297
12.5　在Angular中使用Redux　　299
12.6　规划应用　　299
12.7　组建Redux　　300
12.7.1　定义应用的state　　300
12.7.2　定义reducer　　301
12.7.3　定义action creator　　301
12.7.4　创建store　　302
12.8　CounterApp组件　　303
12.9　提供store　　304
12.10　启动应用　　305
12.11　CounterComponent　　306
12.11.1　import　　306
12.11.2　模板　　306
12.11.3　constructor　　307
12.11.4　整合　　308
12.12　更进一步　　310
12.13　参考资源　　310
第13章　在Angular中引入Redux　　312
13.1　阅读背景　　312
13.2　聊天应用概览　　313
13.2.1　组件　　313
13.2.2　数据模型　　314
13.2.3　reducer　　315
13.2.4　总结　　315
13.3　实现数据模型　　315
13.3.1　User　　315
13.3.2　Thread　　316
13.3.3　Message　　316
13.4　应用的state　　316
13.4.1　关于代码布局　　317
13.4.2　根reducer　　317
13.4.3　UserState　　318
13.4.4　ThreadsState　　318
13.4.5　可视化AppState　　319
13.5　构建reducer（和action creator）　　321
13.5.1　设置当前用户的action creator　　321
13.5.2　UsersReducer：设置当前用户　　321
13.5.3　会话和消息概览　　322
13.5.4　添加新会话的action creator　　322
13.5.5　添加新会话的reducer　　323
13.5.6　添加新消息的action creator　　324
13.5.7　添加新消息的reducer　　325
13.5.8　选择会话的action creator　　326
13.5.9　选择会话的reducer　　327
13.5.10　reducer总结　　328
13.6　构建Angular聊天应用　　328
13.6.1　顶层组件ChatApp　　330
13.6.2　ChatPage　　330
13.6.3　容器型组件与展示型组件　　331
13.7　构建ChatNavBar　　332
13.7.1　Redux选择器　　334
13.7.2　会话选择器　　334
13.7.3　未读消息总数选择器　　336
13.8　构建ChatThreads组件　　336
13.8.1　ChatThreads控制器　　337
13.8.2　ChatThreads的template　　338
13.9　单个ChatThread组件　　338
13.10　构建ChatWindow组件　　340
13.10.1　ChatWindow的update-State()　　341
13.10.2　ChatWindow的scrollToBottom()　　342
13.10.3　ChatWindow的sendMessage　　342
13.10.4　ChatWindow的onEnter　　343
13.10.5　ChatWindow的template　　343
13.10.6　处理键盘动作　　345
13.10.7　使用ngModel　　345
13.10.8　点击Send按钮　　345
13.11　ChatMessage组件　　345
13.11.1　设置incoming属性　　346
13.11.2　ChatMessage的template　　346
13.12　总结　　347
第14章　高级组件　　349
14.1　样式　　349
14.1.1　视图（样式）封装　　351
14.1.2　Shadow DOM封装　　354
14.1.3　不使用封装　　355
14.2　创建popup指令：引用并修改宿主元素　　357
14.2.1　popup指令的结构　　357
14.2.2　使用ElementRef　　359
14.2.3　绑定到host属性　　360
14.2.4　添加按钮并使用exportAs　　362
14.3　使用内容投影创建消息面板　　363
14.3.1　改变host属性的CSS类　　364
14.3.2　使用ng-content　　364
14.4　查询相邻的指令：编写标签页　　366
14.4.1　Tab组件　　367
14.4.2　Tabset组件　　367
14.4.3　使用Tabset　　369
14.5　生命周期钩子　　370
14.5.1　OnInit和OnDestroy　　371
14.5.2　OnChanges　　374
14.5.3　DoCheck　　378
14.5.4　AfterContentInit、AfterViewInit、AfterContentChecked和AfterViewChecked　　386
14.6　高级模板　　391
14.6.1　重写ngIf：ngBookIf　　392
14.6.2　重写ngFor：ngBook-Repeat　　394
14.7　变更检测　　398
14.7.1　自定义变更检测　　401
14.7.2　Zones　　405
14.7.3　可观察对象和OnPush　　406
14.8　总结　　409
第15章　测试　　410
15.1　测试驱动？　　410
15.2　端对端测试与单元测试　　411
15.3　测试工具　　411
15.3.1　Jasmine　　411
15.3.2　Karma　　412
15.4　编写单元测试　　412
15.5　Angular单元测试框架　　412
15.6　测试前准备　　413
15.7　测试服务类和HTTP　　415
15.7.1　HTTP要点　　416
15.7.2　伪装　　417
15.7.3　模拟　　417
15.7.4　Http MockBackend　　418
15.7.5　TestBed.configureTes- tingModule和提供者　　418
15.7.6　测试getTrack方法　　419
15.8　测试组件间的路由　　424
15.8.1　为测试创建路由器　　424
15.8.2　模拟依赖　　427
15.8.3　探子　　427
15.9　回到测试代码　　429
15.9.1　fakeAsync和advance　　431
15.9.2　inject　　432
15.9.3　测试ArtistComponent组件初始化　　432
15.9.4　测试ArtistComponent方法　　433
15.9.5　测试ArtistComponent DOM模板值　　434
15.10　测试表单　　436
15.10.1　创建一个ConsoleSpy　　438
15.10.2　安装ConsoleSpy　　439
15.10.3　配置测试模块　　439
15.10.4　测试表单　　440
15.10.5　重构表单测试　　441
15.11　测试HTTP请求　　444
15.11.1　测试POST方法　　445
15.11.2　测试DELETE方法　　446
15.11.3　测试HTTP头　　447
15.11.4　测试YouTubeService　　448
15.12　总结　　452
第16章　把AngularJS应用升级到Angular　　453
16.1　周边概念　　453
16.2　我们要构建什么　　454
16.3　把AngularJS映射到Angular　　455
16.4　关于互操作性的需求　　456
16.5　AngularJS应用　　456
16.5.1　AngularJS应用的HTML　　458
16.5.2　代码概览　　458
16.5.3　AngularJS：PinsService　　459
16.5.4　AngularJS：配置路由　　460
16.5.5　AngularJS：HomeContro-ller　　461
16.5.6　AngularJS：HomeContro-ller模板　　461
16.5.7　AngularJS：pin指令　　462
16.5.8　AngularJS：pin指令模板　　462
16.5.9　AngularJS：AddContro-ller　　463
16.5.10　AngularJS：AddContro-ller模板　　465
16.5.11　AngularJS：总结　　467
16.6　构建混合式应用　　468
16.6.1　混合式应用的结构　　468
16.6.2　引导混合式应用　　471
16.6.3　我们要升级什么　　473
16.6.4　插一小段内容：类型文件　　475
16.6.5　写Angular的PinControls- Component　　479
16.6.6　使用Angular的PinCon- trolsComponent　　481
16.6.7　把Angular的PinControls- Component降级到 AngularJS　　482
16.6.8　用Angular添加图钉　　483
16.6.9　把AngularJS的PinsSer-vice和$state升级到Angular　　484
16.6.10　写Angular版的AddPin- Component　　485
16.6.11　使用AddPinComponent　　490
16.6.12　把Angular的服务暴露给AngularJS　　490
16.6.13　实现AnalyticsService　　491
16.6.14　把Angular的Analytics- Service降级到AngularJS　　491
16.6.15　在AngularJS中使用AnalyticsService　　492
16.7　总结　　493
16.8　参考资源　　493

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Angular权威教程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>客户端存储技术
前言　　vii
第1章　客户端数据存储概述　　1
第2章　使用Cookie　　3
2.1　真的要讨论Cookie吗　　3
2.2　使用Cookie　　4
2.2.1　读取Cookie　　5
2.2.2　删除Cookie　　6
2.3　演示程序　　6
2.4　使用开发者工具查看Cookie　　10
2.5　浏览器支持和使用建议　　11
第3章　使用Web存储　　13
3.1　Web存储/本地存储　　13
3.2　使用Web存储　　14
3.3　演示程序　　15
3.4　监听存储变化　　19
3.5　使用开发者工具查看Web存储　　21
3.6　浏览器支持和使用建议　　23
第4章　使用IndexedDB　　25
4.1　欢迎来到深度数据时代　　25
4.2　IndexedDB关键术语　　25
4.3　检查IndexedDB支持　　26
4.4　使用数据库　　27
4.5　使用对象存储　　29
4.5.1　创建对象存储　　29
4.5.2　定义主键　　31
4.5.3　定义索引　　33
4.6　操作数据　　34
4.6.1　创建数据　　35
4.6.2　读取数据　　39
4.6.3　更新数据　　41
4.6.4　删除数据　　43
4.7　获取所有数据　　44
4.8　关于IndexedDB的更多内容　　49
4.8.1　存储数组　　49
4.8.2　计算数据量　　53
4.9　使用开发者工具查看IndexedDB　　54
4.10　浏览器支持和使用建议　　55
第5章　使用Web SQL　　57
5.1　已废弃的规范　　57
5.2　数据库基本术语　　57
5.3　检查Web SQL支持　　58
5.4　使用数据库　　58
5.5　使用事务　　60
5.6　使用开发者工具查看Web SQL　　65
5.7　浏览器支持和使用建议　　66
第6章　使用库简化客户端存储　　67
6.1“使用库，卢克……”　　67
6.2　使用Lockr　　67
6.3　使用Dexie简化IndexedDB　　72
6.4　使用localForage　　78
6.5　更多选择　　81
第7章　构建示例应用程序　　83
7.1　让我们构建真实的应用程序！　　83
7.2　示例数据　　84
7.3　应用程序　　87
7.4　代码　　88
7.5　总结　　93
作者介绍　　94
封面介绍　　94
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>客户端存储技术
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Dart语言程序设计
第一部分　入门
第1章　项目：第一个Dart应用程序　2
1.1　后端部分　2
1.2　Dart的HTML部分　3
1.3　Dart的Ajax部分　4
1.4　这个应用程序还无法运行　9
1.5　下一步做什么　9
第2章　基本类型　10
2.1　数字类型　10
2.2　字符串类型　10
2.3　布尔类型　12
2.4　HashMap(也称为Hash或关联数组)　12
2.5　列表(也称为数组)　14
2.6　日期类型　16
2.7　类型　17
2.8　下一步做什么　18
第3章　Dart中的函数式编程　19
3.1　匿名函数　20
3.2　一阶函数　23
3.3　可选参数　23
3.4　下一步做什么　24
第4章　操作DOM　25
4.1　dart:html　25
4.2　查找元素　25
4.3　添加元素　27
4.4　删除元素　28
4.5　更新元素　29
4.6　DOM就绪　30
4.7　下一步做什么　30
第5章　编译为JavaScript　31
5.1　用dart2js编译为JavaScript　32
5.2　维护Dart与JavaScript并存　34
5.3　下一步做什么　36
第二部分　有效的编程技术
第6章　项目：Dart中的MVC　38
6.1　Dart中的MVC　38
6.2　实现集合　40
6.3　实现模型　44
6.4　实现视图　47
6.5　实现删除　50
6.6　下一步做什么　52
第7章　类和对象　53
7.1　类是顶级概念　53
7.2　实例变量　54
7.3　方法　55
7.4　静态方法和静态变量(也称为类方法和类变量)　58
7.5　接口　60
7.6　子类　61
7.7　构造函数　61
7.8　下一步做什么　67
第8章　事件　68
8.1　普通事件　68
8.2　自定义事件系统　69
8.3　下一步做什么　73
第三部分　代码组织
第9章　项目：提炼库　76
9.1　要提炼什么，要保留什么　76
9.2　真正的库　81
9.3　下一步做什么　84
第10章　库　85
10.1　part语句　85
10.2　import语句　87
10.3　核心Dart库　89
10.4　下一步做什么　89
第四部分　可维护性
第11章　项目：变化的行为　92
11.1　用noSuchMethod()改变类行为　92
11.2　通过依赖注入实现同步　97
11.3　下一步做什么　101
第12章　测试　102
12.1　获得测试框架　102
12.2　2+2=5应该出错　103
12.3　下一步做什么　108
第五部分　Dart的高级使用
第13章　项目：终结回调函数的地狱　110
13.1　Future　110
13.2　Future中的错误处理　113
13.3　下一步做什么　115
第14章　Future和Isolate　116
14.1　Completer和Future　116
14.2　Isolate　118
14.3　小结　119
第15章　HTML5和Dart　121
15.1　动画　121
15.2　本地存储　122
15.3　WebSocket　123
15.4　Canvas　125
15.5　小结　127
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Dart语言程序设计
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Ext江湖
第1章  Ext史前
1.1  一个页面做两周	1
1.1.1  变量、对象、数组	5
1.1.1.1  变量	5
1.1.1.2  对象和数组	7
1.1.2  其他重要内置对象	8
1.1.2.1  Nubmer对象	8
1.1.2.2  String对象	9
1.2.2.3  RegExp对象	10
1.1.3  等值判定	10
1.1.4  ||运算符	10
1.1.5  !运算符	11
1.1.6  类型转换技巧	11
1.1.7  特殊运算符	12
1.1.7.1  instanceof 语句	12
1.1.7.2  typeof 语句	13
1.1.7.3  delete 运算符	13
1.1.7.4  []运算符	14
1.1.7.5  ( )运算符	15
1.1.7.6  eval 语句	15
1.1.7.7  三目运算符	16
1.1.7.8  for…in语句	16
1.1.7.9  with语句	18
1.2  缘起Ext	19
1.2.1  开发工具Spket	21
1.2.2  调试工具Firebug	23
1.2.3  编译工具JSBuilder	23
1.2.4  设计工具	24
第2章  DOM操作
2.1  基础概念	27
2.1.1  DOM是什么	27
2.1.2  为什么要DOM	28
2.1.3  DOM怎么用	29
2.1.3.1  访问HTML节点
（Retrieve）	29
2.1.3.2  创建、删除（Create、
Delete）	31
2.1.3.3  修改标签属性和内容
（Update）	33
2.1.4  总结	36
2.2  新石器时代的CRUD	37
2.2.1  Ext.Element	38
2.2.1.1  Ext.get()	39
2.2.1.2  Ext.getDom()	40
2.2.1.3  Ext.fly()	41
3.2.1.4  操纵样式属性	42
2.2.2  Ext.DomHelper	46
2.2.2.1  概述	46
2.2.2.2  append	47
2.2.2.3  insertHtml	48
2.2.2.4  overwrite	49
2.2.2.5  createTemplate	50
2.2.3  Ext.DomQuery	51
2.2.3.1  概述	51
2.2.3.2  元素选择器	52
2.2.3.3  属性选择器	53
2.2.3.4  伪类选择器	55
2.2.3.5  CSS值选择器	57
2.3  源码解析：Ext的DOM封装	58
2.3.1  Ext.Element	59
2.3.1.1  DOM结构工具	59
2.3.1.2  外观工具	66
2.3.2  Ext.DomHelper	67
2.3.2.1  设计思路概述	67
2.3.2.2  源码详解	69
2.3.2.3  DomHelper与Ext.Element
协作	73
2.3.3  Ext.DomQuery	74
2.3.3.1  设计思路概述	74
2.3.3.2  源码详解	75
2.3.3.3  与Ext.Element的配合	79
本章总结	80
第3章  程序员的CSS
3.1  必知的CSS基础概念	81
3.1.1  历史渊源	81
3.1.2  核心概念一：盒子模型	81
3.1.2.1  盒子模型	81
3.1.2.2  padding规则	84
3.1.2.3  border规则	85
3.1.2.4  margin规则	86
3.1.3  核心概念二：选择器	86
3.1.4  浏览器兼容	87
3.2  Ext对CSS的封装	87
3.2.1  静态切换主题	87
3.2.2  动态切换主题	89
3.2.3  结构化CSS	90
3.2.4  Ext UI组件的本质	91
第4章  精通Function
4.1  JS函数特性梳理	95
4.1.1  参数可变长	96
4.1.2  函数不能重载	97
4.1.3  命名空间	97
4.1.4  函数嵌套	100
4.1.5  call/apply/自执行	102
4.1.6  函数也是数据	104
4.1.7  Function	105
4.1.8  函数实例的属性	107
4.1.9  构造函数	110
4.1.10  模拟静态属性	111
4.1.11  综合应用：定时器	112
4.2  函数原型	116
4.2.1  prototype概述	116
4.2.2  向prototype添加自定义属性	118
4.2.3  原型查找机制	119
4.2.4  遮盖	120
4.2.5  原型赋值机制	121
4.2.6  模拟静态属性	122
4.2.7  犀利的prototype	123
4.2.7.1  扩展Array	123
4.2.7.2  扩展Number	126
4.2.7.3  扩展String	127
4.2.7.4  扩展Date	131
4.2.7.5  扩展Error	134
4.2.7.6  扩展Function	135
4.3  作用域链[[scope]]	141
4.3.1  作用域链[[scope]]简介	141
4.3.2  标识符解析	144
4.3.3  修改作用域链和this	146
4.4  闭包	149
4.4.1  从最简单的开始	149
4.4.2  闭包构造三步走	150
4.4.3  闭包用法：经典案例	151
4.4.3.1  获取Table中被点击的行	151
4.4.3.2  模拟多线程	152
4.4.3.3  模拟私有属性	154
第5章  Ext事件系统
5.1  DOM事件演化史	156
5.1.1  没有事件的寂寞年代	156
5.1.2  简单事件模型	157
5.1.3  2级事件模型	159
5.1.3.1  多个监听函数	159
5.1.3.2  浏览器兼容	161
5.1.3.3  事件传播	163
5.1.3.4  监听函数中的this	171
5.1.3.5  事件对象	174
5.1.4  高级语义事件	176
5.1.4.1  设计自己的事件机制	176
5.1.4.2  为原生的事件接口提供
快捷方式	181
5.1.4.3  双剑合璧	183
5.2  熟练使用Ext的事件机制	187
5.2.1  基础用法	187
5.2.1.1  为底层元素注册监听器	187
5.2.1.2  为Ext的UI组件注册事件	190
5.2.2  批量注册监听器	191
5.2.3  指定this	192
5.2.4  单次运行的监听器	193
5.2.5  挂起和恢复	195
5.2.6  事件转发	196
5.2.7  删除监听函数	197
5.2.8  事件综合示例	198
5.2.9  高级用法一：自定义事件	203
5.2.10  高级用法二：为自定义的
类提供事件支持	204
5.3  Ext事件系统全景解析	205
5.3.1  封装底层事件	206
5.3.1.1  Ext.EventManager	206
5.3.1.2  Ext.EventObject	215
5.3.2  高级事件机制Observable	217
5.3.2.1  非可视组件	217
5.3.2.2  可视组件	218
5.3.2.3  详解Ext.util.Observable	220
5.4  全景式解析API根对象Ext	229
5.4.1  整体结构概述	230
5.4.2  源码详解	231
5.4.2.1  Ext版本信息	231
5.4.2.2  浏览器/OS类型判断	231
5.4.2.3  垃圾收集配置	233
5.4.2.4  继承机制的实现	235
5.4.2.5  id机制	235
5.4.2.6  对象类型判定	236
5.4.2.7  数组操纵工具	238
5.4.2.8  对象引用获取工具	245
本章总结	249
第6章  Ext中的Ajax和Direct
6.1  Ajax的前世今生	251
6.2  Ajax和Ext.Ajax	251
6.2.1  Ajax那点事儿	251
6.2.1.1  创建XHR对象	254
6.2.1.2  发送请求，接收数据	255
6.2.1.3  Ajax基础实例	256
6.2.2  Ext.Ajax用法和常见陷阱	258
6.2.2.1  Ext.Ajax基础用法	258
6.2.2.2  缓存问题	259
6.2.2.3  传输XML	260
6.2.2.4  异步问题	261
6.2.2.5  跨域问题	262
6.2.2.6  Ajax上传文件	265
6.2.3  Ext.Ajax源码解析	266
6.2.3.1  屏蔽浏览器差异	266
6.2.3.2  优雅地回调	267
6.3  按需加载JS，梦想照进现实	268
6.3.1  基础动态载入技巧	268
6.3.2  使用Ext.Ajax动态加载JS	270
6.3.3  使用jsloader动态加载	271
6.4  Direct	272
第7章  Ext的数据和缓存架构
7.1  JS原生数据结构	278
7.1.1  数组技法大演练	278
7.1.1.1  join	279
7.1.1.2  slice	280
7.1.1.3  splice	281
7.1.1.4  sort	282
7.1.1.5  Ext扩展：indexOf、
remove	282
7.1.2  JS对象{}	283
7.1.2.1  天然Hash特性	283
7.1.2.2  伪数组	284
7.1.2.3  天然JSON结构	284
7.2  JSON	285
7.2.1  使用Ext.util.JSON	285
7.2.1.1  encode/decode	285
7.2.1.2  对象深拷贝	286
7.2.2  源码分析	287
7.2.2.1  JSON.decode	287
7.2.2.2  JSON.encode	287
7.2.3  服务端JSON工具介绍	289
7.2.3.1  json-lib	289
7.2.3.2  DAO直接生成JSON串	291
7.2.3.3  Gson	292
7.3  XML	294
7.3.1  用JS解析XML	294
7.3.1.1  直接使用XmlDocument
加载XML文件	294
7.3.1.2  使用Ajax加载XML数据	295
7.3.1.3  自制XML解析器源码分析	297
7.3.2  Ext使用XML数据	301
7.3.2.1  使用Ext.data.XmlStore	301
7.3.2.2  Ext.data.XmlStore的解析
方式	303
7.3.3  JSON VS XML	304
7.4  MixedCollection	305
7.4.1  概述	305
7.4.2  玩转MixedCollection	306
7.4.2.1  当做数组使用	306
7.4.2.2  当做HashMap使用	307
7.4.2.3  迭代	308
7.4.2.4  查找和过滤	309
7.4.2.5  排序	313
7.4.2.6  MixedCollection的事件	316
7.4.3  MixedCollection源码分析	316
7.4.3.1  模拟HashMap	317
7.4.3.2  迭代工具	318
7.4.3.3  查找和过滤	320
7.4.3.4  排序和中文支持	321
7.4.3.5  事件支持	322
7.4.4  综合考察MixedCollection	323
7.4.4.1  代码实现层面	323
7.4.4.2  设计层面	324
7.5  Store	324
7.5.1  Store系组件概述	324
7.5.1.1  继承关系图	324
7.5.1.2  协作关系图	327
7.5.1.3  时序图	330
7.5.1.4  Store的本质	331
7.5.2  数据记录Record	332
7.5.2.1  手动创建Record	332
7.5.2.2  create方法源码解析	339
7.5.2.3  拷贝记录	339
7.5.2.4  获取记录中的字段	342
7.5.3  Store对Record的管理	347
7.5.3.1  过滤记录——where	348
7.5.3.2  where机制的实现	354
7.5.3.3  记录排序——order by	357
7.5.3.4  order by机制的实现	360
7.5.3.5  从设计角度“品味”排序
特性	363
7.5.3.6  记录分组——group by	363
7.5.3.7  group by机制的实现	365
7.5.3.8  提交和回滚——commit/
rollback	367
7.5.3.9  commit/rollback机制的
实现	370
7.5.3.10  从设计层面“品味”Store
的核心特性	373
7.5.4  DataProxy	374
7.5.4.1  DataProxy系组件概述	374
7.5.4.2  用法实例	375
7.5.4.3  源码解析	384
7.5.5  DataReader	386
7.5.5.1  DataReader系组件概述	386
7.5.5.2  用法实例	387
7.5.5.3  源码解析	401
7.5.6  DataWriter	402
7.5.7  Store系组件总结	405
7.6  Tree	408
7.6.1  Tree的基本性质	410
7.6.1.1  基本属性	410
7.6.1.2  树和JSON	411
7.6.1.3  递归遍历	411
7.6.2  Ext.TreeNode	414
7.6.2.1  概述	414
7.6.2.2  父类Node解析	414
7.6.2.3  TreeNode解析	415
7.7  Cookie	428
7.7.1  Cookie概述	428
7.7.2  使用Ext的Cookie	430
7.7.3  Ext的Cookies机制	432
7.7.3.1  顶级类Component	432
7.7.3.2  CookieProvider源码解析	434
第8章  面向对象和继承
8.1  JS模拟继承的方式	435
8.1.1  原型继承	435
8.1.1.1  子类prototype赋值为
父类实例	437
8.1.1.2  删除不需要的属性	439
8.1.1.3  重置constructor	440
8.1.2  对象冒充	442
8.1.2.1  对象冒充基础原理	442
8.1.2.2  静态属性	443
8.1.3  综合运用	447
8.2  易筋经：Ext.extend()	449
8.2.1  使用Ext.extend	449
8.2.1.1  招式一：子类不提供构造
函数	449
8.2.1.2  招式二：子类提供显式
构造函数	451
8.2.1.3  招式三：子类提供隐式
构造函数	453
8.2.2  深度解析Ext.extend的源码	454
8.2.2.1  关键点1：私有属性	455
8.2.2.2  关键点2：参数移位	456
8.2.2.3  关键点3：空壳函数	457
8.2.2.4  关键点4：prototype拷贝	458
8.2.2.5  关于静态属性	460
8.2.3  Ext.extend本质：继承和接口
相统一	460
8.2.3.1  机制总结	460
8.2.3.2  Ext中的实例	461
8.2.3.3  Ext.extend再认识	463
第9章  精通Ext的UI组件
9.1  简单组件	467
9.1.1  MessageBox	467
9.1.1.1  熟练使用MessageBox	467
9.1.1.2  源码解析	470
9.1.2  ProgressBar	474
9.1.2.1  熟练使用进展条	474
9.1.2.2  源码解析	477
9.1.3  Menu	478
9.1.4  ToolBar	480
9.1.4.1  熟练使用ToolBar	480
9.1.4.2  ToolBar源码解析	485
9.1.5  LoadMask	485
9.1.5.1  使用LoadMask	485
9.1.5.2  LoadMask源码分析	488
9.1.6  Tip	489
9.2  Panel系	491
9.2.1  Panel	491
9.2.1.1  加载外部页面	491
9.2.1.2  陷阱和注意点	494
9.2.2  Window	495
9.2.2.1  Window的重复创建问题	496
9.2.2.2  使用WindowGroup管理
Window	498
9.2.2.3  Window的其他配置项	499
9.2.3  TabPanel	500
9.3  Form系	503
9.3.1  表单的加载和提交	503
9.3.2  更改FieldLabel	508
9.3.3  多列布局	510
9.3.4  VTypes表单校验	512
9.3.5  ComboBox	515
9.3.5.1  使用本地数据	515
9.3.5.2  使用远程数据	518
9.3.5.3  Combo分页	519
9.3.5.4  二级联动	520
9.3.6  CheckBox/Radio Group	523
9.3.7  FielSet	524
9.3.8  DatePicker	525
9.3.9  动态添加输入项	526
9.4  Grid系	529
9.4.1  GridPanel基本用法	530
9.4.2  SelectionModel&Row
Numberer	532
9.4.3  客户端分页	534
9.4.4  服务端分页	536
9.4.5  renderer和RowAction	538
9.4.6  动态操纵Record	546
9.4.7  数据格式化	553
9.4.8  综合应用EditorGridPanel	555
9.4.9  GridPanel中的右键菜单	559
9.5  Tree系	561
9.5.1  装配“树形”JSON结构	561
9.5.2  动态加载数据	566
9.5.3  监听事件	569
9.5.4  编辑节点数据	572
9.5.5  节点拖曳	573
9.5.6  节点过滤	575
9.5.7  ColumnTree	578
9.6  DataView系	580
9.7  特殊组件	582
9.7.1  文件上传	582
9.7.2  网页编辑器	586
9.7.3  调色板	588
第10章  详解UI组件核心机制
10.1  UI生命周期概述	591
10.2  详解生命周期	593
10.2.1  事件机制	593
10.2.2  组件查找机制	595
10.2.2.1  使用Ext.getCmp	595
10.2.2.2  ComponentMgr源码解析	597
10.2.3  初始化机制	600
10.2.3.1  拷贝配置属性	602
10.2.3.2  生成id	603
10.2.3.3  初始化initComponent	603
10.2.4  插件机制	608
10.2.5  渲染机制	608
10.2.5.1  触发beforerender事件	610
10.2.5.2  开始渲染onRender	611
10.2.5.3  应用样式	615
10.2.5.4  完成渲染afterRender	616
10.2.5.5  持久化	617
10.2.5.6  布局	618
10.2.6  懒渲染机制	619
10.2.6.1  直接创建	620
10.2.6.2  使用xtype	620
10.2.7  销毁机制	622
10.2.8  总结	623
10.3  GridPanel核心机制	623
10.3.1  概述	623
10.3.2  详解GridView	624
10.3.2.1  GridPanel和GridView
协作关系	624
10.3.2.2  标签模板初始化	625
10.3.2.3  GridView对Store的监听	627
10.3.3  数据模型	628
10.3.4  选中模式	631
10.4  FormPanel核心机制	632
10.4.1  概述	632
10.4.2  Field和VType	634
10.5  TreePanel核心机制	634
10.5.1  TreeLoader加载数据	635
10.5.2  树的事件机制	637
第11章  布局管理器
11.1  全面掌握Ext布局	639
11.1.1  AbsoluteLayout	640
11.1.2  AccordionLayout	641
11.1.3  AnchorLayout	642
11.1.4  AutoLayout	643
11.1.5  BorderLayout	644
11.1.6  CardLayout	645
11.1.7  ColumnLayout	646
11.1.8  FitLayout	647
11.1.9  FormLayout	648
11.1.10  HBoxLayout	649
11.1.11  MenuLayout	650
11.1.12  TableLayout	651
11.1.13  ToolbarLayout	651
11.1.14  VBoxLayout	652
11.2  综合应用ViewPort	652
11.3  布局核心源码详解	654
11.3.1  布局管理器概述	654
11.3.2  渲染完成后的布局操作	656
11.3.3  Container.doLayout	657
第12章  扩展UI组件
12.1  概述	660
12.2  常用扩展组件介绍	661
12.2.1  下拉树ComboTree	661
12.2.2  详解ComboTree的实现
细节	666
12.2.2.1  从Filed到ComboBox	666
12.2.2.2  Ext.form.Field	667
12.2.2.3  Ext.form.TextField	669
12.2.2.4  Ext.form.TriggerField	669
12.2.2.5  Ext.form.ComboBox	673
12.2.3  日期选择器	675
12.2.4  Desktop和Portal	678
12.2.4.1  Desktop实例分析	678
12.2.4.2  Portal实例分析	680
12.5  扩展组件的技巧	682
12.5.1  是否真的需要继承	682
12.5.2  扩展组件的经典步骤	682
12.5.3  其他注意点	687
12.5.4  如何在项目中使用UI组件	688
12.5.4.1  设计界面原型	688
12.5.4.2  切分组件	689
12.5.4.3  代码实现	689
第13章  模  板
13.1  概述	693
13.2  Ext模板用法	697
13.2.1  基本拳脚功夫：基础用法	697
13.2.1.1  Ext.Template的基础用法	697
13.2.1.2  Ext.XTempate的基础用法	701
13.2.2  青出于蓝：实现“值班
日志”	705
13.2.3  组合拳：与其他组件配合
使用	709
13.2.3.1  一个自定义的留言板	709
13.2.3.2  与DataView配合使用	711
13.3  模板源码解析	714
13.3.1  自己实现Template	715
13.3.1.1  概要设计	715
13.3.1.2  详细设计	715
13.3.1.3  编码实现	716
13.3.1.4  单元测试	716
13.3.1.5  说明文档	717
13.3.1.6  重构，增加“预编译”
功能	717
13.3.2  自己实现XTemplate	718
13.3.2.1  实现if标签	718
13.3.2.2  实现for标签	724
13.3.3  Ext模板源码解析	727
13.3.3.1  Ext.Template	728
13.3.3.2  Ext.XTemplate	729
第14章  特  效
14.1  使用Ext动画	730
14.1.1  调整大小	730
14.1.2  淡入和淡出	732
14.1.3  其他特效	733
14.2  使用拖拽	733
14.2.1  拖拽的基本原理	733
14.2.2  基本Ext拖拽	734
14.2.3  目标区域	735
14.2.4  Grid和Form之间的拖拽	737
第15章  图  表
15.1  使用Ext的Chart	741
15.1.1  解决本地运行问题	741
15.1.2  用法实例	742
15.1.2.1  前台本地数据	742
15.1.2.2  动态加载远程数据	743
15.1.3  其他类型的Chart	746
15.2  Ext的Chart源码分析	746
15.2.1  swfobject与Flash	746
15.2.2  Ext.FlashComponenet	747
15.2.2.1  Chart系组件概述	747
15.2.2.2  如何把swf渲染到页面中	749
15.2.3  Flash技术前景展望	749
15.3  其他Chart技术概览	750
15.3.1  SVG	750
15.3.1.1  SVG技术简介	750
15.3.1.2  基本用法示例	750
15.3.1.3  SVG总结	754
15.3.2  VML	754
15.3.2.1  VML技术简介	754
15.3.2.2  实例代码	755
15.3.2.3  学习资源	756
第16章  报  表
16.1  客户端报表ActiveXObject	757
16.1.1  导出基本HTML页面数据	757
16.1.2  GridPanel导出到Excel	762
16.2  后台报表Excel、PDF	763
16.2.1  使用jxl生成Excel	764
16.2.2  使用Itext生成PDF/Word	766
第17章  Ext 4新特性
17.1  SVG图表和动画	769
17.2  新的类结构和加载机制	771
17.2.1  类结构优化	771
17.2.2  继承方式升级	771
17.2.3  Mixin机制	772
17.2.4  自动生成getter&setter	772
17.2.5  动态加载类	773
17.3  新的数据模型	774
17.3.1  Model和Store	774
17.3.2  代理Proxy	775
17.3.3  关联关系	776
17.3.4  加载嵌套数据	776
17.4  新的主题引擎	777
第18章  常见问题解答
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Ext江湖
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>迈向Angular 2
序言	XV
第1章　Angular 2快速上手	1
Web的进化——新框架时代	2
ECMAScript的进化	2
Web Component	3
WebWorker	4
从AngularJS 1.x中学到的经验	5
Controller	6
Scope	7
依赖注入	7
服务端渲染	8
大规模应用	9
模板	10
脏值检测	12
本章小结	12
第2章　Augular 2应用的基础构件	14
Angular 2概念性简介	15
脏值检测	17
认识Angular 2中的组件	19
组件实战	20
Angular 2中的组件	22
管道	23
定义管道	24
脏值检测	25
传统的脏值检测	26
AngularJS 1.x中的脏值检测	27
增强AngularJS 1.x的脏值检测	29
理解服务	30
理解新的基于组件的路由机制	33
Angular 2中定义路由的语法	35
本章小结	36
第3章　TypeScript速成	37
TypeScript简介	37
编译时类型检查	38
文本编辑器和IDE的支持更好	38
TypeScript的更多特性	39
TypeScript用法	39
用npm安装TypeScript	40
运行我们的第一个TypeScript程序	40
TypeScript从ES2015和ES2016中引入的语法和特性	41
ES2015中的箭头函数	41
使用ES2015和ES2016中的类	43
定义在块级作用域中可见的变量	45
使用ES2016装饰器进行元编程	46
使用可配置的装饰器	47
使用ES2015编写模块化的代码	48
使用ES2015中的模块语法	49
利用隐式异步行为	50
使用别名	50
导入所有导出的模块	50
默认导出	51
ES2015模块加载器	52
ES2015和ES2016总结	52
发挥静态类型的优势	53
使用显式类型定义	53
理解原生类型	54
理解Object类型	55
定义类	58
使用访问修饰符	59
定义接口	61
使用TypeScript装饰器提升表现力	64
使用类型参数编写泛型代码	64
使用泛型函数	66
多重泛型	66
利用TypeScript的类型推断机制简化代码	67
最常见的类型	67
与上下文有关的类型推断	68
使用外部类型定义	68
使用预定义的外部类型定义	68
自定义外部类型	70
定义ts.d文件	72
本章小结	72
第4章　Angular 2组件和指令入门	74
Angular 2 Hello world!	75
配置开发环境	78
初始化项目仓库	78
Angular 2和TypeScript上手试玩	79
首页代码深度解析	80
Angular 2指令用法	81
ngFor 指令	83
改进了指令语法的语义	83
在模板内部定义变量	85
在模板里面使用语法糖	85
定义Angular 2指令	85
设置指令的输入	87
理解指令的构造函数	87
封装指令的更好方式	88
Angular 2内置指令的用法	89
组件视图封装简介	90
实现组件的控制器	90
处理用户交互	92
指令的输入和输出	93
找到指令的输入和输出	94
定义组件的输入和输出	95
传递输入与使用输出结果	97
事件冒泡	99
重命名指令的输入与输出	100
定义输入输出参数的另一种语法	101
详解Angular 2中的内容投影	102
Angular 2中的内容投影入门	102
投射多块内容	103
组件嵌套	105
ViewChildren和ContentChildren的用法	106
ViewChild与ContentChild	108
挂钩到组件的生命周期上	112
执行的顺序	114
用TemplateRef定义通用视图	115
理解并优化脏值检测机制	118
脏值检测器的执行顺序	118
脏值检测策略	120
利用不可变数据和OnPush策略提升性能	121
在Angular中使用不可变数据结构	122
本章小结	124
第5章　Angular 2中的依赖注入	125
为什么要依赖注入？	125
Angular 2中的依赖注入	126
Angular 2中DI的优点	127
配置注射器	127
使用生成的元数据解析依赖关系	129
初始化注射器	129
前向引用简介	130
配置provider	132
定义实例化服务的工厂	134
子注射器以及可见性	136
构建注射器层级结构	137
配置依赖关系	138
在组件和指令中使用DI	144
元素注射器简介	145
在ES5中使用Angular的DI机制	149
本章小结	152
第6章　Angular 2中的路由和表单	153
开发一个名为“码农仓库”的应用	153
探索Angular 2中的路由	156
定义根组件并启动应用	157
PathLocationStrategy的用法	158
使用@RouteConfig配置路由	158
routerLink 和router-outlet的用法	160
利用AsyncRoute实现懒加载	162
Angular 2中的表单用法	164
开发模板驱动型表单	164
深入理解模板驱动型表单的标签结构	166
使用内置的表单校验器	168
自定义控件的校验器	169
在Angular中使用select输入项	171
NgForm指令的用法	173
Angular 2中的双向数据绑定	176
存储表单数据	178
显示存储的所有开发者列表	180
本章小结	181
第7章　详解管道以及与RESTful服务端之间的通信	183
在Angular 2中开发数据模型驱动型表单	183
使用控件校验器组合	187
探索Angular的HTTP模块	189
使用Angular的HTTP模块	191
定义参数化视图	193
定义嵌套路由	195
使用管道进行数据转换	198
开发无状态管道	199
使用Angular内置的管道	200
开发有状态管道	201
有状态管道的用法	203
Angular中AsyncPipe的用法	204
本章小结	206
第8章　开发体验与服务端渲染	208
在Web Worker中运行应用	208
WebWorker与Angular 2	210
启动基于WebWorker的应用	210
把应用迁移到Web Worker上	212
让应用兼容Web Worker	214
单页应用的加载过程	216
启用了服务端渲染的SPA的加载过程	219
Angular 2中的服务端渲染	220
改善开发体验	221
各种文本编辑器和IDE	221
热重载	222
用angular-cli初始化项目	223
angular-cli的用法	223
Angular 2快速上手项目	224
Angular 2种子项目	224
针对Webpack的Angular 2入门项目	225
本章小结	225
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>迈向Angular 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>MEAN Web开发
第1章　MEAN简介　　 1
1.1 三层Web应用开发　　1
1.2 JavaScript的演进　　2
1.3 MEAN简介　　3
1.4 安装MongoDB　　4
1.4.1 在Windows上安装MongoDB　　5
1.4.2 在Mac OS X和Linux上安装MongoDB　　7
1.4.3 使用MongoDB命令行工具　　8
1.5 安装Node.js　　9
1.5.1 在Windows上安装Node.js　　10
1.5.2 在Mac OS X上安装Node.js　　11
1.5.3 在Linux上安装Node.js 　　12
1.5.4 运行Node.js　　12
1.6 NPM简介　　13
1.7 总结　　18
第2章　Node.js入门　　19
2.1 Node.js简介　　19
2.1.1 JavaScript事件驱动编程　　20
2.1.2 Node.js事件驱动编程　　22
2.2 JavaScript闭包　　23
2.3 Node模块　　24
2.3.1 CommonJS模块　　24
2.3.2 Node.js核心模块　　26
2.3.3 Node.js第三方模块　　26
2.3.4 Node.js文件模块　　26
2.3.5 Node.js文件夹模块　　27
2.4 Node.js Web应用开发　　27
2.5 总结　　34
第3章　使用Express开发Web应用　　35
3.1 Express简介　　35
3.2 Express安装　　36
3.3 创建第一个Express应用　　36
3.4 应用、请求和响应对象　　37
3.4.1 应用对象　　37
3.4.2 请求对象　　38
3.4.3 响应对象　　38
3.5 外部的中间件　　39
3.6 实现MVC模式　　40
3.7 Express应用配置　　48
3.8 渲染视图　　51
3.8.1 配置视图系统　　51
3.8.2 EJS视图渲染　　53
3.9 静态文件服务　　53
3.10 配置会话　　55
3.11 总结　　57
第4章　MongoDB入门　　58
4.1 NoSQL简介　　58
4.2 MongoDB简介　　60
4.3 MongoDB的关键特性　　61
4.3.1 BSON格式　　61
4.3.2 MongoDB即席查询　　61
4.3.3 MongoDB索引　　62
4.3.4 MongoDB副本集　　63
4.3.5 MongoDB分片　　64
4.4 MongoDB命令行工具　　65
4.5 MongoDB数据库　　66
4.6 MongoDB集合　　66
4.7 MongoDB增删改查操作　　67
4.7.1 创建新文档　　67
4.7.2 读取文档　　68
4.7.3 更新已有文档　　69
4.7.4 删除文档　　70
4.8 总结　　71
第5章　Mongoose入门　　72
5.1 Mongoose简介　　72
5.1.1 安装Mongoose　　72
5.1.2 连接MongoDB　　73
5.2 理解Mongoose的模式　　74
5.2.1 创建User模式与模型　　74
5.2.2 注册USer模型　　75
5.2.3 使用save()创建新文档　　75
5.2.4 使用find()查找多个文档　　77
5.2.5 使用findOne()读取单个文档　　79
5.2.6 更新已有文档　　80
5.2.7 删除已有文档　　81
5.3 扩展Mongoose模式　　82
5.3.1 定义默认值　　82
5.3.2 使用模式修饰符　　83
5.3.3 增加虚拟属性　　85
5.3.4 使用索引优化查询　　85
5.4 模型方法自定义　　86
5.4.1 自定义静态方法　　86
5.4.2 自定义实例方法　　87
5.5 模型的校验　　87
5.5.1 预定义的验证器　　87
5.5.2 自定义的验证器　　89
5.6 使用Mongoose中间件　　89
5.6.1 预处理中间件　　89
5.6.2 后置处理中间件　　90
5.7 使用Mongoose DBRef　　90
5.8 总结　　91
第6章　使用Passport模块管理用户权限　　92
6.1 Passport简介　　92
6.1.1 安装　　92
6.1.2 配置　　93
6.2 理解Passport策略　　 95
6.2.1 使用Passport的本地策略　　 95
6.2.2 修改User模型　　 97
6.2.3 创建身份验证视图　　 99
6.2.4 修改用户控制器　　 101
6.2.5 添加用户路由　　 105
6.3 理解Passport的OAuth策略　　 107
6.4 总结　　 118
第7章　AngularJS入门　　 119
7.1 AngularJS简介　　 119
7.2 AngularJS的核心概念　　 119
7.2.1 核心模块　　 120
7.2.2 模块　　 120
7.2.3 双向数据绑定　　 121
7.2.4 依赖注入　　 122
7.2.5 AngularJS指令　　 123
7.2.6 AngularJS应用的引导　　 124
7.3 安装AngularJS　　 125
7.3.1 Bower包管理器　　 125
7.3.2 配置Bower　　 126
7.3.3 使用Bower安装AngularJS 　　 126
7.3.4 配置AngularJS　　 127
7.4 AngularJS应用的结构　　 127
7.5 引导AngularJS应用　　 130
7.6 AngularJS的MVC实体　　 131
7.6.1 视图　　 132
7.6.2 控制器和scope　　 133
7.7 AngularJS路由　　 135
7.7.1 安装ngRoute模块　　 136
7.7.2 配置URL模式　　 137
7.7.3 AngularJS应用路由　　 137
7.8 AngularJS服务　　 139
7.8.1 预置服务　　 139
7.8.2 自定义服务　　 140
7.8.3 服务的使用　　 141
7.9 管理AngularJS的身份验证　　 141
7.9.1 将user对象填充到视图　　 141
7.9.2 添加身份验证服务　　 142
7.9.3 使用身份验证服务　　 144
7.10 总结　　144
第8章　创建MEAN的CURD模块　　 145
8.1 CURD模块简介　　145
8.2 配置Express组件　　145
8.2.1 创建Mongoose模型　　146
8.2.2 建立Express控制器　　147
8.2.3 编写Express路由　　152
8.2.4 配置Express应用　　153
8.3 ngResource模块简介　　154
8.3.1 安装ngResource模块　　154
8.3.2 使用$resource服务　　156
8.4 实现AngularJS的MVC模块　　157
8.4.1 创建模块服务　　157
8.4.2 建立模块控制器　　158
8.4.3 实现模块视图　　161
8.4.4 编写AngularJS路由　　164
8.5 最终实现　　164
8.6 总结　　166
第9章　基于Socket.io的实时通信　　 167
9.1 WebSockets简介　　167
9.2 Socket.io简介　　168
9.2.1 Socket.io服务器端对象　　169
9.2.2 Socket.io客户端对象　　171
9.2.3 Socket.io的事件　　171
9.2.4 Socket.io命名空间　　174
9.2.5 Socket.io的房间　　175
9.3 Socket.io的安装　　176
9.3.1 配置Socket.io的服务器　　177
9.3.2 配置Socket.io的会话　　178
9.4 使用Socket.io创建聊天室　　182
9.4.1 设置聊天服务器的事件处理程序　　182
9.4.2 在AngularJS中创建Socket服务　　184
9.4.3 控制器　　185
9.4.4 视图　　186
9.4.5 路由　　186
9.4.6 实现　　187
9.5 总结　　189
第10章　MEAN应用的测试　　 190
10.1 JavaScript测试简介　　190
10.1.1 TDD、BDD和单元测试　　191
10.1.2 测试框架　　192
10.1.3 断言库　　192
10.1.4 测试执行过程管理工具　　192
10.2 Express应用测试　　193
10.2.1 Mocha简介　　193
10.2.2 Should.js简介　　194
10.2.3 SuperTest简介　　194
10.2.4 Mocha的安装　　195
10.2.5 安装Should.js和SuperTest模块　　195
10.2.6 测试环境配置　　196
10.2.7 编写Mocha测试　　197
10.2.8 执行Mocha测试　　201
10.3 AngularJS应用测试　　202
10.3.1 Jasmine框架简介　　203
10.3.2 AngularJS单元测试　　203
10.3.3 AngularJS E2E测试　　213
10.4 总结　　217
第11章　MEAN应用的调试与自动化　　 218
11.1 构建工具Grunt　　218
11.1.1 安装　　218
11.1.2 Grunt的配置　　220
11.2 使用node-inspector调试Express程序　　230
11.2.1 使用Grunt任务安装node-inspector　　231
11.2.2 使用Grunt任务配置node-inspector　　232
11.2.3 使用Grunt任务运行调试　　234
11.3 使用Batarang调试AngularJS程序　　236
11.4 总结　　241
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>MEAN Web开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>jQuery高级编程
目录
第Ⅰ部分 jQuery基础
第1章 jQuery入门 3
1.1 jQuery的优势 3
1.2 硬件和浏览器条件 4
1.3 获得jQuery库和jQuery UI 4
1.4 HELLO WORLD示例 5
1.5 本书使用的JavaScript规范 6
1.6 开发工具 9
1.7 调试JavaScript和jQuery 16
1.8 使用FireQuery插件 16
1.9 小结 17
第2章 JavaScript基础 19
2.1 理解数值 20
2.2 使用字符串 21
2.3 理解布尔类型 22
2.4 类型之间的比较 23
2.5 日期简介 23
2.6 其他类型 23
2.7 变量 25
2.8 理解对象 26
2.9 使用函数 29
2.10 理解执行上下文 33
2.11 作用域和闭包 33
2.12 理解访问级别 34
2.13 使用模块 35
2.14 使用JavaScript数组 37
2.15 扩展类型 38
2.16 JavaScript最佳实践 39
2.17 综合示例 40
2.18 小结 40
2.19 注意 40
第3章 jQuery核心技术 41
3.1 jQuery脚本的结构 41
3.2 非侵扰式JavaScript 52
3.3 jQuery框架的结构 59
3.4 理解DOM和事件 61
3.5 与其他JavaScript库一起使用jQuery 61
3.6 小结 62
3.7 参考 62
第4章 选择和操作DOM元素 65
4.1 jQuery选择器的功能 66
4.1.1 选择元素 66
4.1.2 CSS样式选择器 68
4.1.3 属性选择器 70
4.1.4 位置选择器 74
4.1.5 过滤选择器 74
4.1.6 用户自定义选择器 83
4.2 遍历DOM 83
4.3 访问并修改元素、属性和内容 90
4.4 生成HTML 95
4.5 小结 96
第5章 事件处理 97
5.1 理解浏览器的事件模型 97
5.2 理解jQuery中的事件处理机制 103
5.3 使用jQuery进行事件处理 105
5.4 使用事件 111
5.5 jQuery新的事件API 117
5.6 小结 120
5.7 参考 120
第6章 HTML表单、数据和Ajax 121
6.1 jQuery数据应用程序 121
6.2 使用表单验证 123
6.3 使用HTML表单元素 126
6.4 Ajax基础 130
6.5 在jQuery中使用Ajax 132
6.6 小结 142
6.7 参考 142
第7章 动画和特效 143
7.1 为元素创建动画效果 143
7.2 用CSS属性创建动画 145
7.3 改变元素的尺寸 148
7.4 设计用户自定义动画 149
7.5 在HTML5的canvas元素中创建动画 153
7.6 小结 155
7.7 参考 155
第Ⅱ部分 jQuery应用
第8章 jQuery UI 第Ⅰ部分——更轻松地创建Web界面 159
8.1 主题和样式 159
8.2 使用ThemeRoller 161
8.3 使用jQuery小组件 161
8.3.1 Button 162
8.3.2 Tabs 163
8.3.3 折叠面板(Accordion) 167
8.3.4 Autocomplete 169
8.3.5 Datepicker 171
8.3.6 对话框 176
8.4 进度条 178
8.5 滑动条 179
8.6 小结 181
8.7 参考 181
第9章 jQuery UI 第Ⅱ部分——鼠标交互 183
9.1 拖曳和置放 183
9.2 排序 188
9.3 缩放元素 191
9.4 可选取元素 194
9.5 小结 196
第10章 编写高效的jQuery代码 197
10.1 优化技术 197
10.1.1 最小化DOM更新 198
10.1.2 更高效的循环 200
10.1.3 缓存对象 201
10.1.4 高效使用选择器 202
10.1.5 考虑完全跳过jQuery方法 206
10.1.6 DRY 207
10.2 使用JavaScript模式 209
10.2.1 使用一个单例创建一个应用程序名称空间 209
10.2.2 Module模式 212
10.2.3 Garber-Irish实现 215
10.3 使用$.DATA() 218
10.3.1 基本的.data() API 219
10.3.2 充分利用Data API 219
10.4 小结 222
第11章 jQuery模板 223
11.1 征服字符串 223
11.1.1 分离内容与行为 225
11.1.2 代码重用 225
11.1.3 简洁而优美 225
11.1.4 jQuery模板的过去、现在和未来 225
11.1.5 创建jQuery模板 226
11.1.6 使用$.tmpl()方法应用模板 228
11.1.7 在模板中使用远程数据 231
11.1.8 模板标记 233
11.2 小结 243
第12章 编写jQuery插件 245
12.1 插件基础 245
12.1.1 遵循jQuery插件的命名规范 246
12.1.2 如何扩展jQuery 246
12.1.3 jQuery插件通用指南 249
12.1.4 jQuery插件最佳实践 254
12.2 学习和使用现有的插件模式 262
12.3 Widget Factory概述 264
12.4 插件开发示例 265
12.5 小结 268
第13章 使用jQuery Deferred对象进行高级异步编程 269
13.1 $.Deferred基础 270
13.1.1 Promise 270
13.1.2 Promises/A Proposal 270
13.2 jQuery中的Deferred对象 271
13.3 小结 286
第14章 使用QUnit进行单元测试 287
14.1 单元测试简介 287
14.2 什么是单元测试 288
14.2.1 单元测试的优点 288
14.2.2 测试驱动的开发 289
14.2.3 什么是一个好的单元测试 289
14.3 QUnit入门 290
14.3.1 在QUnit中使用equal测试Hello World 290
14.3.2 一个失败的QUnit测试 292
14.3.3 使用ok测试真伪 292
14.3.4 设置预期的断言数量 293
14.3.5 其他断言 294
14.3.6 测试DOM元素 295
14.3.7 使用noglobals和notrycatch 296
14.3.8 将测试组织为模块 298
14.4 异步测试 300
14.4.1 使用asyncTest 301
14.4.2 模拟Ajax请求 302
14.5 综合示例 304
14.6 小结 307
附录 本书中使用的插件 309
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>jQuery高级编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5实验室
上篇  实    验
第1章  基础实验	2
实验1  奥运五环	2
实验2  台球	8
实验3  绘制动画	14
实验4  超越祖冲之	18
实验5  立体文字	21
实验6  鸟巢	22
实验7  贪吃蛇	31
第2章  物理实验	36
实验8  质点运动与反射	36
实验9  万有引力	40
实验10  疯狂的大炮	43
实验11  动能守恒不守恒你说了算	49
实验12  密闭球	54
实验13  不规则的密室	60
实验14  大球欺负小球	67
第3章  3D实验	76
实验15  立方体	76
实验16  星星点灯	88
实验17  矩阵变换	92
实验18  3D变形金刚蝙蝠侠	101
实验19  世界上最简单的3D场景渲染	107
第4章  综合实验	113
实验20  正N边形变换	113
实验21  动态加载文字	115
实验22  Loading图片	122
实验23  繁花之上，又生繁花	124
实验24  心	127
实验25  烟花易冷	131
实验26  WAVE	143
实验27  粒子计数器	145
实验28  时间之沙	149
实验29  心碎	151
实验30  Canvas类库	154
下篇  游 戏 开 发
第5章  一步一步搭建物理引擎	162
概述	162
第1步  面向对象编程	162
第2步  建立基本对象	165
第3步  集成单元测试框架	175
第4步  集成图形化输出接口	183
第5步  碰撞检测	188
第6步  方向包围盒——OBB	193
第7步  碰撞反应	198
第8步  重叠处理	204
第9步  贴图	206
物理引擎作品展示一	209
物理引擎作品展示二	211
物理引擎作品展示三	213
第6章  游戏开发全程实录	217
6.1  概述	217
6.2  框架搭建	217
6.3  资源加载	220
6.4  菜单制作	224
6.5  对象建立	228
6.6  碰撞检测	235
6.7  游戏音效	237
6.8  键盘控制	240
6.9  可玩性增强——积分、技能	244
6.10  总结	248
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5实验室
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node.js开发实战详解
第1章Node.js基础知识
1.1概述
1.1.1Node.js是什么
1.1.2Node.js带来了什么
1.2Node.js配置开发
1.2.1Windows配置
1.2.2Linux配置
1.2.3HelloWorld
1.2.4常见问题
1.3异步编程
1.3.1同步调用和异步调用
1.3.2回调和异步调用
1.3.3获取异步函数的执行结果
1.4本章实践
1.5本章小结
第2章模块和NPM
2.1什么是模块
2.1.1模块的概念
2.1.2Node.js如何处理模块
2.1.3Node.js实现Web解析DNS
2.1.4Node.js重构DNS解析网站
2.1.5exports和module.eXports
2.2NPM简介
2.2.1NPM和配置
2.2.2Express框架
2.2.3jade模板
2.2.4forever模块
2.2.5socket.io模块
2.2.6request模块
2.2.7Formidable模块
2.2.8NPM模块开发指南
2.3Node.js设计模式
2.3.1模块与类
2.3.2Node.js中的继承
2.3.3单例模式
2.3.4适配器模式
2.3.5装饰模式
2.3.6工厂模式
2.4本章实践
2.5本章小结
第3章Node.js的Web应用
3.1HTTP服务器
3.1.1简单的HTTP服务器
3.1.2路由处理
3.1.3GET和POST
3.1.4GET方法实例
3.1.5POST方法实例
3.1.6HTTP和HTTPS模块介绍
3.2Node.js静态资源管理
3.2.1为什么需要静态资源管理
3.2.2Node.js实现简单静态资源管理
3.2.3静态资源库设计
3.2.4静态文件的缓存控制
3.3文件处理
3.3.1FileSystem模块介绍
3.3.2图片和文件上传
3.3.3jade模板实现图片上传展示功能
3.3.4上传图片存在的问题
3.3.5文件读写
3.4Cookie和Session
3.4.1Cookie和Session
3.4.2Session模块实现
3.4.3Session模块的应用
3.5Crypto模块加密
3.5.1Crypto介绍
3.5.2Web数据密码的安全
3.5.3简单加密模块设计
3.6Node.js+INginx
3.6.1Nginx概述
3.6.2Nginx的配置安装
3.6.3如何构建
3.7 文字直播实例
3.7.1 系统分析
3.7.2 重要模块介绍
3.8 扩展阅读
3.9 本章实践
3.10 本章小结
第4章 Node.js高级编程
4.1 构建UDP服务器
4.1.1 UDP 模块概述
4.1.2 UDP Server构建
4.2 UDP服务器应用
4.2.1 应用分析介绍
4.2.2 UDP Server端（图片处理服务器）实现
4.2.3 UDP Client端（Web Server）
4.2.4 Jade页面实现
4.2.5 应用体验
4.3 Node.js与PHP合作
4.3.1 UDP方式
4.3.2 脚本执行
4.3.3 HTTP方式
4.3.4 三种方式的比较
4.4 本章实践
4.5 本章小结
第5章 深入Node.js
5.1 Node.js的相关实现机制
5.2 Node.js原生扩展
5.2.1 Node.js扩展开发基础V8
5.2.2 Node.js插件开发介绍
5.3 Node.js异步扩展开发与应用
5.4 本章实践
5.5 本章小结
第6章 Node.js编码习惯
6.1 Node.js规范
6.1.1 变量和函数命名规范
6.1.2 模块编写规范
6.1.3 注释
6.2 Node.js异步编程规范
6.2.1 Node.js的异步实现
6.2.2 异步函数的调用
6.2.3 Node.js异步回调深度
6.2.4 解决异步编程带来的麻烦
6.3 异常逻辑的处理
6.3.1 require模块对象不存在异常
6.3.2 对象中不存在方法或者属性时的异常
6.3.3 异步执行的for循环异常
6.3.4 利用异常处理办法优化路由
6.3.5 异常情况汇总
6.4 本章实践
6.5 本章小结
第7章 Node.js与数据库
7.1 两种数据库介绍
7.1.1 MySQL介绍
7.1.2 MongoDB模块介绍
7.2 Node.js与MySQL
7.2.1 MySQL安装配置应用
7.2.2 MySQL数据库接口设计
7.2.3 数据库连接
7.2.4 数据库插入数据
7.2.5 查询一条数据记录
7.2.6 修改数据库记录
7.2.7 删除数据库记录
7.2.8 数据条件查询
7.3 Node.js与MongoDB
7.3.1 MongoDB的安装以及工具介绍
7.3.2 MongOD的启动运行方法
7.3.3 MongoDB的启动运行
7.3.4 MongoDB数据库接口设计
7.3.5 数据插入
7.3.6 数据修改
7.3.7 查询一条数据
7.3.8 删除数据
7.3.9 查询数据
7.4 MySQL与MongoDB性能
7.4.1 测试工具及测试逻辑
7.4.2 MySQL性能测试代码
7.4.3 MongoDB性能测试代码
7.4.4 性能测试数据分析
7.5 本章实践
7.6 本章小结
第8章 MyWeb框架介绍
8.1 MyWeb框架介绍
8.1.1 MyWeb框架涉及的应用
8.1.2 MyWeb框架应用模块
8.2 MyWeb源码架构
8.2.1 框架MVC设计图
8.2.2 框架文件结构
8.2.3 扩展阅读之更快地了解新项目
8.3 框架源码分析
8.3.1 框架入口文件模块
8.3.2 路由处理模块
8.3.3 Model层基类
8.3.4 Controller层基类
8.4 本章实践
8.5 本章小结
第9章 框架应用MyChat
9.1 编码前的准备
9.1.1 应用分析
9.1.2 应用模块
9.1.3 功能模块设计
9.2 系统的编码开发
9.2.1 Model层
9.2.2 Controller层
9.2.3 View层
9.3 项目总结
9.3.1 forever启动运行项目
9.3.2 系统应用体验
9.3.3 系统开发总结
9.4 扩展阅读之MyWeb 2.0的介绍
9.5 本章实践
9.6 本章小结
第10章 Node.js实例应用
10.1 实时聊天对话
10.1.1 系统设计
10.1.2 系统的模块设计
10.1.3 系统编码实现
10.2 联网中国象棋游戏
10.2.1 系统设计
10.2.2 系统的模块设计
10.2.3 系统编码实现
10.2.4 系统体验
10.3 本章小结
第11章 Node.js实用工具
11.1 日志模块工具
11.1.1 日志模块介绍
11.1.2 日志模块实现
11.1.3 日志模块应用
11.2 配置文件读取模块
11.2.1 配置文件解析模块介绍
11.2.2 配置文件解析模块实现
11.3 curl模块
11.3.1 curl模块介绍
11.3.2 curl模块实现
11.3.3 curl模块应用
11.4 crontab模块
11.4.1 crontab模块介绍
11.4.2 crontab模块设计实现
11.4.3 crontab模块应用
11.5 forever运行脚本
11.5.1 forever运行脚本介绍
11.5.2 forever运行脚本实现
11.5.3 forever运行脚本应用
11.6 xml模块的应用
11.6.1 xml解析模块介绍
11.6.2 xml模块设计实现
11.6.3 xml模块应用
11.7 邮件发送模块应用
11.7.1 邮件模块介绍
11.7.2 邮件模块设计实现
11.7.3 邮件模块应用
11.8 本章小结
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node.js开发实战详解
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>React 精髓
1 给项目预先安装一些有用的工具  1
了解我们的项目. 2
安装Node.js 和npm  3
安装Git  4
从Twitter Streaming API 中获取数据  5
使用Snapkite引擎来过滤数据  6
创建项目结构  9
创建package.json  10
复用Node.js 模块  11
使用Gulp.js 来构建应用  12
创建一个网页  15
小结  16
2 创建你的第一个React 元素  17
理解虚拟DOM  18
安装React  19
使用JavaScript 创建React 元素  20
type 参数  22
props 参数  22
children 参数  23
渲染React 元素 27
使用JSX 来创建React 元素 28
小结  30
3 创建你的第一个React 组件  31
无状态与有状态  31
创建第一个无状态React 组件  32
创建第一个有状态React 组件  37
小结  44
4 让React 组件变得可响应  45
使用React 解决问题  45
规划React 应用程序  47
创建一个React 组件容器  49
小结  57
5 结合其他库来使用React 组件  59
在React 组件中使用其他库  59
理解React 组件的生命周期方法  64
挂载方法  66
卸载方法  71
小结  72
6 更新React 组件  73
理解组件生命周期的更新方法  73
componentWillReceiveProps()方法  74
shouldComponentUpdate()方法  77
componentWillUpdate()方法  77
componentDidUpdate()方法  78
设置React 组件的默认属性  79
验证React 组件的属性  83
创建Collection 组件  85
小结  91
7 构建复杂的React 组件  93
创建TweetList组件  93
创建CollectionControls组件  98
创建CollectionRenameForm组件  105
创建Button 组件  111
创建CollectionExportForm组件  112
小结  114
8 使用Jest 来测试React 应用程序  115
为什么要写单元测试  115
创建测试套件、规范和期望  115
安装并运行Jest  121
创建更多的测试规范和期望  122
测试React 组件  130
小结  137
9 使用Flux 完善React 架构  139
分析当前应用的架构  139
理解Flux  142
创建分发器  143
创建动作生成器  144
创建存储  145
小结  150
10 使用Flux 提升应用的可维护性  151
借助Flux 实现解耦 152
重构Stream 组件  155
创建CollectionStore  161
创建CollectionActionCreators  167
重构Application 组件  169
重构Collection 组件  171
重构CollectionControls组件  175
重构CollectionRenameForm组件  178
重构TweetList组件  180
重构StreamTweet组件  181
编译  181
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>React 精髓
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>AngularJS实战
前　言
第1章	初识Angular 1
1.1	Angular简介 1
1.1.1	特点 2
1.1.2	适用范围 2
1.1.3	搭建开发Angular应用的环境 2
1.2	开发简单的Angular应用 3
示例1-1	编写一个简单的Angular程序 3
示例1-2	编写一个具有计算功能的Angular程序 4
示例1-3	编写一个绑定页面元素的Angular程序 6
示例1-4	编写一个绑定多个页面元素的Angular程序 7
1.3	本章小结 9
第2章	Angular基础知识 10
2.1	Angular中的表达式 10
2.1.1	Angular表达式与JavaScript表达式的区别 10
示例2-1	Angular表达式与JavaScript表达式之间的相互调用 11
2.1.2	$window窗口对象在表达式中的使用 13
示例2-2	$window窗口对象在表达式中的使用 13
2.1.3	Angular表达式的容错性 14
示例2-3	Angular表达式的容错性 14
2.2	Angular中的控制器 16
2.2.1	控制器的概念 16
2.2.2	控制器初始化$scope对象 16
示例2-4	控制器初始化$scope对象 16
2.2.3	添加$scope对象方法 18
示例2-5	通过表达式绑定$scope对象的方法 18
示例2-6	在事件中绑定$scope对象的方法 20
示例2-7	添加带参数的$scope方法 21
2.2.4	$scope对象属性和方法的继承 23
示例2-8	$scope对象中方法和属性的继承 23
2.3	Angular中的模板 24
2.3.1	构建模板内容 25
示例2-9	构建模板内容 25
2.3.2	使用指令复制元素 26
示例2-10 使用指令复制元素 26
2.3.3	添加元素样式 29
示例2-11 添加元素样式 30
2.3.4	控制元素的隐藏与显示状态 33
示例2-12 控制元素的隐藏与显示状态 33
2.4	模板中的表单控件 35
2.4.1	表单基本验证功能 35
示例2-13 表单基本验证功能 35
2.4.2	表单中的checkbox和radio控件 37
示例2-14 表单中的checkbox和radio控件 38
2.4.3	表单中的select控件 39
示例2-15 表单中的select控件 41
2.5	本章小结 43
第3章	Angular的过滤器和作用域 44
3.1	模板中的过滤器 44
3.1.1	排序方式过滤 44
示例3-1	排序方式过滤 45
3.1.2	匹配方式过滤 48
示例3-2	匹配方式过滤 49
3.1.3	自定义过滤器 51
示例3-3	自定义过滤器 51
3.2	过滤器的应用 54
3.2.1	表头排序 55
示例3-4	表头排序 55
3.2.2	字符查找 57
示例3-5	字符查找 58
3.3	作用域概述 60
3.3.1	作用域特点 60
示例3-6	$watch方法的使用 60
3.3.2	作为数据模型的作用域 62
示例3-7	作为数据模型的作用域 62
3.4	作用域的层级和事件 64
3.4.1	作用域的层级 64
示例3-8	作用域的层级 64
3.4.2	作用域事件的传播 67
示例3-9	作用域事件的传播 69
3.5	本章小结 71
第4章　Angular的依赖注入 72
4.1	依赖注入介绍 72
4.1.1	依赖注入的原理 72
示例4-1	依赖注入的原理 73
4.1.2	简单依赖注入的示例 75
示例4-2	简单依赖注入的示例 75
4.2	依赖注入标记 78
4.2.1	推断式注入 78
示例4-3	推断式注入的示例 78
4.2.2	标记式注入 79
示例4-4	标记式注入的示例 80
4.2.3	行内式注入 82
示例4-5	行内式注入的示例 82
4.3	$injector常用API 84
4.3.1	has和get方法 84
示例4-6	has和get方法的示例 84
4.3.2	invoke方法 86
示例4-7	invoke方法的示例 86
4.3.3	依赖注入应用的场景 88
4.4	本章小结 89
第5章	Angular中MVC模式 90
5.1	MVC模式概述 90
5.1.1	MVC简介 90
5.1.2	使用Angular中MVC的优势和缺点 91
5.2	Model组件 92
5.2.1	Model组件的基础概念 92
示例5-1	Model组件的基础概念 92
5.2.2	使用ngRepeater方式遍历Model对象 94
示例5-2	使用ngRepeater方式遍历Model对象 94
5.3	Controller组件 96
5.3.1	控制器的属性和方法 96
示例5-3	控制器的属性和方法 96
5.3.2	控制器方法中的参数 98
示例5-4	控制器方法中的参数 98
5.3.3	控制器中属性和方法的继承 100
示例5-5	控制器中属性和方法的继承 100
5.4	View组件 103
5.4.1	View组件中的模板切换 103
示例5-6	View组件中的模板切换 103
5.4.2	在切换视图模板时传参数 106
示例5-7	多页面切换并传递参数 106
5.5	本章小结 109
第6章	Angular的服务 110
6.1	Angular服务介绍 110
6.1.1	内置服务 110
示例6-1	内置服务调用 111
6.1.2	自定义服务 112
示例6-2	使用$provide自定义服务 113
6.2	创建Angular服务 115
6.2.1	使用factory方法自定义服务 115
示例6-3	使用factory方法自定义服务 115
6.2.2	使用service方法自定义服务 117
示例6-4	使用service方法自定义服务 117
6.2.3	使用constant和value方法自定义服务 119
示例6-5	使用constant和value方法自定义服务 120
6.3	管理服务的依赖 122
6.3.1	添加自定义服务依赖项方法 122
示例6-6	添加自定义服务依赖项方法 122
6.3.2	嵌套注入服务 124
示例6-7	嵌套注入服务 125
6.4	添加服务的其他设置 127
6.4.1	服务的装饰器 127
示例6-8	服务的装饰器 127
6.4.2	服务的多例性 129
示例6-9	服务的多例性 129
6.5	本章小结 132
第7章	Angular与服务端交互 133
7.1	与服务端交互介绍 133
7.1.1	传统的AJAX方式与服务端交互 134
示例7-1	传统的AJAX方式与服务端交互 134
7.1.2	使用$http快捷方法与服务端交互 137
示例7-2	使用$http快捷方法与服务端交互 137
7.1.3	使用$http配置对象方式与服务端交互 139
示例7-3	使用$http配置对象方式与服务端交互 140
7.2	Angular中的缓存 143
7.2.1	$cacheFactory服务创建缓存对象 143
示例7-4	$cacheFactory服务创建缓存对象 144
7.2.2	$http服务中的缓存 146
示例7-5	$http服务中的缓存 146
7.2.3	自定义$http服务中的缓存 148
示例7-6	自定义$http服务中的缓存 148
7.3	$resource服务 150
7.3.1	$resource服务的使用和对象中的方法 150
示例7-7	$resource对象中方法 的使用 152
7.3.2	在$resource服务中自定义请求方法 155
示例7-8	$resource服务中自定义方法 155
7.4	promise对象 159
7.4.1	promise的基本概念和使用方法 159
示例7-9	promise对象的创建和使用 160
7.4.2	promise对象在$http中的应用 162
示例7-10 promise对象在$http中的应用 162
7.5	本章小结 164
第8章	Angular的指令 165
8.1	Angular指令概述 165
8.1.1	指令定义的基础 165
示例8-1	创建一个新的指令 166
8.1.2	设置指令对象的基础属性 168
示例8-2	设置指令对象的基础属性 168
8.2	Angular指令对象的重要属性 170
8.2.1	指令对象中的transclude属性 170
示例8-3	设置指令对象中的transclude属性 171
8.2.2	指令对象中的link属性 173
示例8-4	设置指令对象中的link属性 173
8.2.3	指令对象中的compile属性 175
示例8-5	设置指令对象中的compile属性 175
8.3	Angular指令对象的scope属性 177
8.3.1	scope属性是布尔值 178
示例8-6	scope属性是布尔值 178
8.3.2	scope属性是对象 180
示例8-7	scope属性是JSON对象 181
8.4	Angular指令对象的require和controller属性 183
8.4.1	require和controller属性的概念 184
8.4.2	一个使用require和controller属性的示例 184
示例8-8	一个使用require和controller属性的示例 184
8.5	本章小结 187
第9章	使用$location 188
9.1	初识$location 188
9.1.1	调用$location对象的只读方法 188
示例9-1	调用$location对象的只读方法 189
9.1.2	调用$location对象的读写类方法 190
示例9-2	调用$location对象的读写方法 191
9.2	$location对象的事件 193
9.2.1	$locationChangeStart事件 193
示例9-3	捕捉$locationChangeStart事件 193
9.2.2	$locationChangeSuccess事件 195
示例9-4	捕捉locationChange-Success事件 195
9.3	路由模式和地址变更 197
9.3.1	标签（hashbang）模式 198
示例9-5	标签模式下获取页面URL中的内容 198
9.3.2	HTML 5模式 200
示例9-6	HTML 5模式下获取页面URL中的内容 200
9.3.3	模式间的区别与关联 202
示例9-7	两种模式下分别获取页面URL中的内容 203
9.3.4	路由对象方法的双向绑定 206
示例9-8	路由对象方法的双向绑定 207
9.4	本章小结 208
第10章 使用Angular开发的注意事项和最佳实践 209
10.1 页面元素的控制 209
10.1.1	调用element方法控制DOM元素 209
示例10-1 调用element方法控制DOM元素 210
10.1.2	解决setTimeout改变属性的无效 212
示例10-2 解决setTimeout改变属性的无效 212
10.1.3	解决双大括号绑定元素时的闪烁问题 214
示例10-3 解决双大括号绑定元素时的闪烁问题 214
10.2 使用ng-repeat时的注意事项 216
10.2.1	注意ng-repeat中的索引号 216
示例10-4 注意ng-repeat中的索引号 216
10.2.2	使用track by排序ng-repeat中的数据 219
示例10-5 使用track by排序ng-repeat中的数据 219
10.2.3	正确理解ng-repeat指令中scope的继承关系 222
示例10-6 正确理解ng-repeat指令中scope的继承关系 222
10.3 解决单击按钮事件中的冒泡现象 225
示例10-7 解决单击按钮事件中的冒泡现象 225
10.4 释放多余的$watch监测函数 227
示例10-8 释放多余的$watch监测函数 227
10.5 解决ng-if中ng-model值无效的问题 229
示例10-9 解决ng-if中ng-model值无效的问题 230
10.6 本章小结 231
第11章 综合案例开发 232
11.1 基于AngularJS使用canvas绘制圆形进度条 232
11.1.1	需求分析 232
11.1.2	界面效果 233
11.1.3	功能开发 233
11.1.4	源码解析 238
11.2 使用AngularJS开发一个抽奖应用 240
11.2.1	需求分析 240
11.2.2	界面效果 240
11.2.3	功能开发 241
11.2.4	源码解析 247
11.3	本章小结 251
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>AngularJS实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通jQuery（第2版）
第1章 了解jQuery 1
1.1 jQueryUI和jQueryMobile 1
1.2 jQuery插件 1
1.3 预备知识 2
1.4 本书组织结构 2
1.4.1 第一部分：打好基础 2
1.4.2 第二部分：使用jQuery 2
1.4.3 第三部分：数据和Ajax 2
1.4.4 第四部分：jQueryUI 2
1.4.5 第五部分：jQueryMobile 2
1.4.6 第六部分：高级功能 2
1.5 第2版的新增内容 3
1.5.1 jQuery核心库有什么变化 3
1.5.2 jQueryUI有什么变化 3
1.5.3 jQueryMobile有什么变化 4
1.5.4 其他变化 4
1.6 例子多吗 4
1.7 示例代码下载 6
1.8 所需软件 6
1.8.1 jQuery 6
1.8.2 HTML编辑器 7
1.8.3 Web浏览器 8
1.8.4 Web服务器 8
1.8.5 Node.js 8
1.9 图片版权 9
1.10 小结 9
第2章 HTML入门 10
2.1 基本的HTML文档 10
2.2 HTML元素剖析 12
2.3 属性 12
2.4 元素内容 14
2.5 空元素 14
2.6 文档结构 14
2.6.1 元数据元素 16
2.6.2 内容元素 17
2.7 元素层次关系 21
2.7.1 父子关系 22
2.7.2 祖先？后代关系 22
2.7.3 兄弟关系 22
2.8 文档对象模型 23
2.8.1 使用DOM 23
2.8.2 修改DOM 26
2.8.3 修改样式 26
2.8.4 处理事件 27
2.9 小结 29
第3章 CSS基础 30
3.1 上手CSS 30
3.2 行内样式 31
3.3 内嵌样式 33
3.4 外部样式表 35
3.5 理解CSS选择器 37
3.5.1 属性选择器 37
3.5.2 关系选择器 38
3.5.3 伪元素和伪类选择器 40
3.5.4 联合选择器和反选择器 42
3.6 理解样式层叠 43
3.6.1 样式层叠原理 43
3.6.2 使用important规则微调样式应用的顺序 44
3.6.3 通过“专一程度”和顺序评估决定样式优先级 45
3.7 样式的单位 47
3.7.1 颜色 47
3.7.2 长度 49
3.8 属性速记法和自定义值 52
3.9 小结 54
第4章 JavaScript基础 55
4.1 上手JavaScript 55
4.2 语句 56
4.3 函数 57
4.3.1 带参数的函数 58
4.3.2 有返回值的函数 59
4.4 变量和类型 59
4.4.1 基本数据类型 60
4.4.2 生成对象 61
4.4.3 使用对象 64
4.5 JavaScript运算符 68
4.5.1 条件语句 68
4.5.2 相等运算符和恒等运算符 69
4.5.3 显式类型转换 72
4.6 数组 74
4.6.1 数组字面量 75
4.6.2 读取和修改数组元素 75
4.6.3 枚举数组内容 76
4.6.4 数组内建方法 77
4.7 错误处理 77
4.8 比较undefined和null值 79
4.8.1 检查变量或者属性是否为null或undefined 81
4.8.2 区分null和undefined 82
4.9 小结 82
第5章 jQuery基础 83
5.1 安装jQuery 84
5.2 第一个jQuery脚本 86
5.3 理解jQuery的$函数 88
5.4 等待DOM就绪 90
5.4.1 另一种写法 91
5.4.2 延迟ready事件的触发时间 92
5.5 选择元素 93
5.6 理解选择结果 96
5.6.1 确定jQuery对象对应的上下文对象 96
5.6.2 处理DOM对象 97
5.7 修改多个元素与链式方法调用 101
5.8 事件处理 104
5.9 小结 104
第6章 选择元素 105
6.1 选择更多元素 106
6.2 限制选择范围 108
6.2.1 从结果集中获取某个元素 108
6.2.2 获取元素子集 109
6.2.3 过滤元素 110
6.2.4 基于后代元素过滤结果集 112
6.3 以映射方式处理结果集 113
6.4 检测结果集 114
6.5 修改、回退结果集 115
6.6 访问DOM 116
6.6.1 访问后代元素 117
6.6.2 访问祖先元素 119
6.6.3 访问兄弟元素 124
6.7 小结 128
第7章 操控DOM 129
7.1 创建新元素 130
7.1.1 使用$函数创建新元素 130
7.1.2 通过克隆已有元素生成新元素 132
7.1.3 使用DOMAPI创建新元素 133
7.2 添加子元素或后代元素 134
7.2.1 插入第一个子元素 136
7.2.2 把同一组元素插入到页面的不同位置 138
7.2.3 插入jQuery对象 139
7.2.4 使用回调函数动态插入子元素 140
7.3 封装（包裹）元素 141
7.3.1 把多个元素封装到一个元素之中 143
7.3.2 封装元素的内容 145
7.3.3 使用回调函数封装元素 146
7.4 插入兄弟元素 147
7.4.1 把jQuery对象中的元素插入为兄弟元素 148
7.4.2 使用回调函数动态插入兄弟元素 149
7.5 替换元素 150
7.6 删除元素 152
7.6.1 分离元素 153
7.6.2 清空元素 154
7.6.3 删除元素的父元素 155
7.7 小结 156
第8章 处理元素 157
8.1 处理元素字面属性和元素对象定义属性 158
8.1.1 设置属性值 160
8.1.2 一次设置多个属性 161
8.1.3 动态设置属性值 161
8.1.4 删除属性 162
8.1.5 使用prop方法 163
8.2 处理class属性 164
8.2.1 使用函数动态添加或删除class 165
8.2.2 切换class 167
8.2.3 切换多个class 169
8.2.4 切换全部的class 170
8.2.5 单方向切换class 171
8.2.6 动态切换class 172
8.3 处理CSS样式 174
8.3.1 获取并设置单个CSS值 174
8.3.2 获取多个CSS属性 175
8.3.3 一次设置多个CSS样式属性 176
8.3.4 以相对值设置样式属性 177
8.3.5 使用回调函数设置样式属性 177
8.3.6 针对具体属性的CSS便捷方法 178
8.4 处理元素内容 180
8.4.1 设置元素内容 181
8.4.2 使用回调函数设置元素内容 181
8.5 处理表单元素 182
8.5.1 设置表单元素的值 183
8.5.2 使用回调函数设置表单元素的值 184
8.6 为元素关联数据 184
8.7 小结 186
第9章 事件 187
9.1 事件处理 188
9.1.1 用一个函数处理多种事件 190
9.1.2 为事件处理函数提供数据 191
9.1.3 阻止事件的默认行为 192
9.1.4 撤销事件处理函数 193
9.1.5 仅执行一次事件处理函数 195
9.2 动态绑定事件处理函数 196
9.3 人工调用事件处理函数 200
9.3.1 使用Event对象 201
9.3.2 triggerHandler方法 202
9.4 事件快捷方法 203
9.4.1 document对象事件快捷方法 204
9.4.2 浏览器事件快捷方法 205
9.4.3 鼠标事件快捷方法 205
9.4.4 表单事件快捷方法 206
9.4.5 键盘事件快捷方法 206
9.5 小结 207
第10章 jQuery特效 208
10.1 基础特效 209
10.1.1 切换元素的显示状态 212
10.1.2 单向变换 212
10.1.3 以动画方式改变元素的显示状态 213
10.1.4 使用动画回调函数 215
10.1.5 创建循环动画 217
10.2 滑动特效 219
10.3 淡入淡出特效 220
10.4 实现定制特效 223
10.4.1 使用绝对值设置动画属性 224
10.4.2 使用相对值设置动画属性 225
10.5 创建并管理动画队列 226
10.5.1 显示动画队列中的内容 227
10.5.2 停止当前动画并清理动画队列 228
10.5.3 在动画队列中插入延时 232
10.5.4 在动画队列中插入自定义函数 232
10.6 启用或者禁用动画特效 234
10.7 小结 234
第11章 重构示例页面：第一部分 235
11.1 回顾示例文档 235
11.2 添加更多的花卉产品 237
11.3 添加翻页按钮 238
11.4 处理提交按钮 240
11.5 实现翻页事件处理函数 242
11.6 计算订购产品总数 244
11.7 禁用JavaScript 246
11.8 小结 247
第12章 数据模板 248
12.1 模板解决什么问题 249
12.2 使用模板库 249
12.3 第一个数据模板示例 251
12.3.1 定义数据 252
12.3.2 定义模板 253
12.3.3 使用模板 254
12.4 模板逻辑 257
12.4.1 依据条件生成内容 257
12.4.2 遍历数组和对象属性 259
12.4.3 改变数据上下文 261
12.5 自定义助手指令 265
12.5.1 编写条件助手指令 266
12.5.2 返回更复杂的内容 268
12.5.3 在助手指令处理函数中使用可选参数 269
12.5.4 自定义模板属性 271
12.6 小结 272
第13章 处理表单 273
13.1 准备Node.js服务器 274
13.2 回顾表单事件方法 277
13.2.1 处理表单焦点 277
13.2.2 处理值的变化 279
13.2.3 处理表单提交 280
13.3 验证表单数据 282
13.3.1 插件内建的检查功能 286
13.3.2 指定错误提示信息 294
13.3.3 自定义检查 299
13.3.4 定制错误提示的显示格式 302
13.3.5 使用问题摘要 304
13.4 小结 309
第14章 Ajax：第一部分 310
14.1 Ajax快捷方法 310
14.1.1 发起AjaxGET请求 311
14.1.2 AjaxPOST请求 318
14.1.3 指定数据类型 325
14.2 避免最常见的Ajax陷阱 327
14.3 处理特定任务的快捷方法 328
14.3.1 获取HTML片段 328
14.3.2 获取并执行脚本 330
14.3.3 获取JSON数据 332
14.4 AjaxForms插件 334
14.5 小结 336
第15章 Ajax：第二部分 337
15.1 使用底层API发起简单的Ajax请求 338
15.2 理解jqXHR对象 339
15.3 设置请求URL 341
15.4 发起POST请求 341
15.5 Ajax事件 343
15.5.1 处理成功完成的请求 343
15.5.2 处理失败的请求 344
15.5.3 处理已经完成的请求 346
15.5.4 在请求发出之前配置请求 347
15.5.5 为同一事件指定多个处理函数 348
15.5.6 设置事件上下文对象 349
15.6 全局Ajax事件方法 350
15.7 为Ajax请求配置基础选项 352
15.7.1 设置请求超时选项和报头 353
15.7.2 发送JSON数据到服务器 354
15.8 高级配置选项 355
15.8.1 发起同步请求 355
15.8.2 忽略重复（未修改过的）数据 356
15.8.3 处理statusCode 357
15.8.4 整理响应数据 359
15.8.5 控制数据格式转换 360
15.9 设置及过滤Ajax请求 361
15.9.1 定义默认选项 361
15.9.2 过滤请求 362
15.10 小结 363
第16章 重构示例页面：第二部分 364
16.1 重温重构示例 364
16.2 更新Node.js脚本 367
16.3 为Ajax做准备 369
16.4 处理产品数据来源 371
16.5 添加表单验证 374
16.6 使用Ajax提交表单数据 380
16.7 处理服务器响应 387
16.7.1 添加新表单 393
16.7.2 完成Ajax请求 394
16.7.3 处理数据 395
16.8 小结 397
第17章 安装jQueryUI 398
17.1 获取jQueryUI 398
17.1.1 选定一个主题 398
17.1.2 生成jQueryUI定制下载版本 400
17.2 安装jQueryUI开发版 401
17.3 把jQueryUI部署到生产环境 402
17.4 小结 403
第18章 按钮、进度条与滑动条组件 404
18.1 jQueryUI按钮 405
18.1.1 配置按钮组件 407
18.1.2 在按钮上使用jQueryUI图标 409
18.1.3 在按钮上使用自定义图片 410
18.1.4 button方法 411
18.1.5 按钮事件 414
18.2 创建不同类型的按钮 415
18.2.1 切换按钮 416
18.2.2 按钮组 417
18.3 jQueryUI进度条 419
18.3.1 创建进度条 419
18.3.2 创建模糊进度 420
18.3.3 进度条方法 421
18.3.4 进度条事件 423
18.4 jQueryUI滑动条组件 425
18.4.1 配置滑动条 426
18.4.2 滑动条组件方法 431
18.4.3 滑动条组件事件 433
18.5 小结 434
第19章 自动完成和折叠菜单组件 435
19.1 jQueryUI自动完成组件 436
19.1.1 让输入框支持自动完成 436
19.1.2 配置自动完成组件 438
19.1.3 自动完成组件方法 446
19.1.4 自动完成组件事件 449
19.2 jQueryUI折叠菜单组件 452
19.2.1 创建折叠菜单 452
19.2.2 配置折叠菜单组件 455
19.2.3 折叠菜单方法 463
19.2.4 折叠菜单组件事件 463
19.3 小结 465
第20章 标签组件 466
20.1 创建标签 467
20.2 使用Ajax获取标签内容 469
20.3 配置标签组件 471
20.3.1 选取活跃标签 471
20.3.2 禁用某些标签 473
20.3.3 改变激活标签的事件 474
20.3.4 可折叠的标签 475
20.4 标签组件方法 476
20.4.1 增加或者删除标签 477
20.4.2 触发标签的Ajax请求 478
20.5 标签组件事件 479
20.5.1 拦截Ajax请求 480
20.5.2 修改远程标签的数据 481
20.5.3 用标签显示表单 482
20.6 小结 489
第21章 日期拾取器组件 490
21.1 生成日期拾取器 491
21.2 配置日期拾取器 493
21.2.1 基本设置 493
21.2.2 管理日期选择范围 498
21.2.3 设置日期拾取器的外观 504
21.3 日期拾取器方法 508
21.3.1 使用脚本获取和设置日期 508
21.3.2 使用脚本控制弹出式日期拾取器的显示和隐藏 510
21.4 日期拾取器事件 511
21.4.1 响应月份或年份的变更 511
21.4.2 响应关闭弹出式日期拾取器事件 513
21.5 本地化日期拾取器 514
21.6 小结 515
第22章 对话框组件和微调控制组件 516
22.1 jQueryUI对话框组件 517
22.1.1 创建对话框 517
22.1.2 配置对话框 519
22.1.3 对话框组件方法 529
22.1.4 对话框组件事件 531
22.2 jQueryUI微调控制组件 533
22.2.1 在HTML5input元素上应用微调控制组件 534
22.2.2 配置微调控制组件 536
22.2.3 微调控制组件方法 542
22.2.4 微调控制组件事件 544
22.3 小结 544
第23章 菜单组件和提示说明组件 545
23.1 jQueryUI菜单组件 545
23.1.1 创建菜单 546
23.1.2 配置菜单组件 549
23.1.3 菜单组件的方法 554
23.1.4 菜单组件事件 554
23.2 jQueryUI提示说明组件 556
23.2.1 创建提示说明组件 557
23.2.2 配置提示说明组件 559
23.2.3 提示说明组件的方法 568
23.2.4 提示说明组件事件 569
23.3 小结 571
第24章 使用拖放 572
24.1 创建拖曳元素 573
24.1.1 配置拖曳组件 574
24.1.2 使用draggable方法 579
24.1.3 使用拖曳事件 579
24.2 使用接收组件 580
24.2.1 高亮接收元素 582
24.2.2 处理遮盖元素 583
24.2.3 配置接收组件 584
24.2.4 使用droppable方法 589
24.3 优化拖放功能 589
24.3.1 scope选项 590
24.3.2 使用辅助元素 591
24.3.3 “吸附”到元素边界 594
24.4 小结 596
第25章 其他组件 597
25.1 使用sortable组件 597
25.1.1 获取排序之后的新顺序 599
25.1.2 配置sortable组件 600
25.1.3 使用sortable方法 606
25.1.4 sortable事件 608
25.2 selectable组件 609
25.2.1 配置selectable组件 611
25.2.2 使用selectable方法 612
25.2.3 selectable组件事件 612
25.3 resizable组件 613
25.4 小结 617
第26章 重构示例页面：第三部分 618
26.1 回顾重构示例 618
26.2 展示商品 619
26.3 添加购物车 621
26.3.1 增加一个div元素包住折叠菜单 623
26.3.2 添加表格 623
26.3.3 输入值变更 624
26.4 装饰：应用主题样式 627
26.4.1 为更多元素应用框架样式 628
26.4.2 为表格增加圆角效果 629
26.5 生成jQueryUI按钮 631
26.6 添加完成购买对话框 634
26.7 处理下单按钮的单击事件 637
26.8 完成订单 640
26.9 小结 642
第27章 jQueryMobile入门 643
27.1 安装jQueryMobile 643
27.1.1 下载jQueryMobile 643
27.1.2 安装jQueryMobile 644
27.2 jQueryMobile工作原理 645
27.2.1 自动增强技术 645
27.2.2 视口 647
27.2.3 jQueryMobile事件 649
27.2.4 响应设备手持方向的变化 656
27.3 处理移动设备 659
27.3.1 在移动开发时应该避免的两大“陷阱” 659
27.3.2 避免错误的假设 660
27.3.3 避免不切实际的仿真和测试 661
27.3.4 移动浏览器仿真器 663
27.4 小结 664
第28章 页、主题及布局 665
28.1 什么是jQueryMobile页 665
28.1.1 为一个页添加页头和页脚 666
28.1.2 在页面文件中添加页 668
28.1.3 链接其他页面文件 672
28.2 使用脚本控制jQueryMobile页 678
28.2.1 改变当前页 678
28.2.2 当前页是哪个 683
28.2.3 后台载入页 685
28.3 与页相关的事件 686
28.3.1 页面初始化事件 687
28.3.2 页面加载事件 687
28.3.3 响应页面切换 688
28.4 使用jQueryMobile主题 689
28.5 创建网格布局 692
28.6 小结 694
第29章 对话框与弹窗组件 695
29.1 jQueryMobile对话框组件 695
29.1.1 创建对话框组件 695
29.1.2 配置对话框组件 701
29.1.3 对话框组件方法 704
29.1.4 对话框组件事件 705
29.2 jQueryMobile弹窗组件 705
29.2.1 创建弹窗 705
29.2.2 配置弹窗 706
29.2.3 弹窗组件的方法 712
29.2.4 弹窗组件事件 714
29.3 小结 715
第30章 按钮和折叠块组件 716
30.1 jQueryMobile按钮 716
30.1.1 生成按钮 717
30.1.2 配置jQueryMobile按钮组件 720
30.1.3 按钮组件的方法 723
30.1.4 按钮事件 725
30.2 jQueryMobile导航栏组件 726
30.2.1 配置jQueryMobile导航栏组件 727
30.2.2 导航栏组件支持的方法和事件 728
30.3 折叠块组件 729
30.3.1 生成折叠块 729
30.3.2 配置jQueryMobile折叠块组件 730
30.3.3 折叠块组件的方法 731
30.3.4 折叠块事件 731
30.4 jQueryMobile折叠菜单 733
30.4.1 配置折叠菜单 734
30.4.2 折叠菜单的方法 734
30.4.3 折叠菜单事件 734
30.5 小结 734
第31章 jQueryMobile表单 735
31.1 创建表单元素组件 736
31.2 文本输入组件 738
31.2.1 配置文本输入组件 738
31.2.2 文本输入组件方法 739
31.2.3 文本输入组件事件 740
31.3 滑动选择器组件和范围选择器组件 741
31.3.1 配置滑动选择器组件和范围选择器组件 743
31.3.2 滑动选择器与范围选择器支持的方法 744
31.3.3 滑动选择器事件 745
31.3.4 范围选择器组件事件 746
31.4 选择菜单组件 747
31.4.1 配置选择菜单组件 749
31.4.2 选择菜单组件的方法 752
31.4.3 选择菜单组件事件 753
31.5 轻触开关组件 753
31.6 复选框和单选钮组件 754
31.6.1 创建复选框 755
31.6.2 创建并格式化单选钮 758
31.6.3 配置复选框和单选钮组件 760
31.6.4 复选框和单选钮组件方法 760
31.6.5 复选框和单选钮组件事件 760
31.7 小结 760
第32章 列表组件与面板组件 761
32.1 列表组件 761
32.1.1 配置列表组件 764
32.1.2 列表组件方法 775
32.1.3 列表组件事件 775
32.2 面板组件 775
32.2.1 配置面板组件 776
32.2.2 面板组件方法 780
32.2.3 面板组件事件 780
32.3 小结 781
第33章 重构移动版示例：第四部分 782
33.1 从基础开始 782
33.2 用程序添加花卉产品 784
33.3 生成购物车 790
33.3.1 增加修改数量功能 794
33.3.2 在商品详情页添加购买按钮 798
33.4 实现支付 801
33.5 小结 805
第34章 jQuery实用方法 806
34.1 再访队列：使用常规队列 806
34.2 数组实用方法 810
34.2.1 使用grep方法 810
34.2.2 使用inArray方法 811
34.2.3 使用map方法 812
34.2.4 使用merge方法 813
34.2.5 使用unique方法 813
34.3 数据类型实用方法 814
34.4 数据有关实用方法 816
34.4.1 序列化表单数据 816
34.4.2 解析数据 817
34.4.3 去除字符串首尾空白 818
34.5 其他实用方法 818
34.6 小结 819
第35章 jQueryUI特效及CSS框架 820
35.1 使用jQueryUI特效 820
35.1.1 让颜色变化支持动画 820
35.1.2 让切换类样式支持动画 822
35.1.3 jQueryUI动画 825
35.2 使用jQueryUICSS框架 827
35.2.1 组件容器样式 827
35.2.2 圆角样式 829
35.2.3 交互状态样式 830
35.2.4 提示信息样式 831
35.3 小结 834
第36章 延迟对象 835
36.1 延迟对象第一例 836
36.2 其他回调 843
36.2.1 通知延迟对象任务失败 844
36.2.2 覆盖两个出口（任务成功和任务失败） 846
36.2.3 与出口无关的回调函数 847
36.3 使用多个回调函数 849
36.4 利用多个延迟对象的出口 851
36.5 提供进度信息 853
36.6 获取延迟对象的状态 856
36.7 Ajax延迟对象 858
36.8 小结 860
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通jQuery（第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Vue2实践揭秘
第1章  例说Vue.js	1
1.1  插值	5
1.2  数据绑定	6
1.3  样式绑定	9
1.4  过滤器	12
第2章  工程化的Vue.js开发	15
2.1  脚手架vue-cli	16
2.2  深入vue-cli的工程模板	19
2.2.1  webpack-simple模板	19
2.2.2  webpack模板	21
2.2.3  构建工具	23
2.3  Vue工程的webpack配置与基本用法	25
2.3.1  webpack的特点	26
2.3.2  基本用法	27
2.3.3  用别名取代路径引用	29
2.3.4  配置多入口程序	30
2.4  基于Karma+Phantom+Mocha+Sinon+Chai的单元测试环境	32
2.5  基于Nightwatch的端到端测试环境	38
第3章  路由与页面间导航	51
3.1  vue-router	53
3.2  路由的模式	57
3.3  路由与导航	58
3.4  导航状态样式	69
3.5  History的控制	70
3.6  关于Fallback	71
3.7  小结	73
第4章  页面的区块化与组件的封装	75
4.1  页面逻辑的实现	76
4.2  封装可重用组件	80
4.3  自定义事件	87
4.4  数据接口的分析与提取	89
4.5  从服务端获取数据	91
4.6  创建复合型的模板组件	95
4.7  数据模拟	100
4.8  小结	102
4.9  扩展阅读：Vue组件的继承——mixin	103
第5章  Vue的测试与调试技术	110
5.1  Mocha入门	111
5.2  组件的单元测试方法	118
5.3  单元测试中的仿真技术	121
5.3.1  调用侦测（Spies）	124
5.3.2  Sinon的断言扩展	126
5.3.3  存根（stub）	128
5.3.4  接口仿真（Mocks）	131
5.3.5  后端服务仿真	133
5.4  调试	134
5.5  Nightwatch入门	139
5.5.1  编写端到端测试	139
5.5.2  钩子函数与异步测试	141
5.5.3  全局模块与Nightwatch的调试	143
5.5.4  Page Objects模式	147
第6章  视图与表单的处理	153
6.1  为Vue2集成UIkit	154
6.2  表格视图的实现	159
6.2.1  实时数据筛选	164
6.2.2  多行数据的选择	167
6.2.3  排序的实现	171
6.3  单一职责原则与高级组件开发方法	176
6.3.1  搜索区的组件化	177
6.3.2  母板组件	179
6.3.3  重构模态对话框组件	181
6.3.4  高级组件与Render方法	183
6.3.5  UIkit按钮	194
6.3.6  通用表格组件	198
6.4  表单的设计与实现	211
6.4.1  计算属性的双向绑定	214
6.4.2  富文本编辑器组件的实现	215
6.4.3  实现嵌套式容器组件	220
6.4.4  表单的验证	224
6.5  集成服务端的CRUD Restful API	239
6.6  HTTP拦截器inteceptor	242
6.7  开发服务器的定制	245
第7章  Vuex状态管理	250
7.1  Vuex的基本结构	253
7.2  data的替代者——State和Getter	256
7.3  测试Getter	260
7.4  Action——操作的执行者	261
7.5  测试Action	263
7.6  只用Mutation修改状态	265
7.7  测试Mutations	268
7.8  子状态和模块	269
7.9  用服务分离外部操作	274
附录A  Chai断言参考	277
附录B  Vee-Validate验证规则参考	289
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Vue2实践揭秘
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Backbone.js实战
前　言
第1章　初识Backbone 1
1.1　Backbone简介 1
1.1.1　Backbone的MVC结构 1
1.1.2　特点及适用范围 2
1.2　如何搭建开发Backbone应用的框架 3
1.2.1　Backbone.js主框架文件 3
1.2.2　Underscore.js依赖库文件 3
1.2.3　第三方JavaScript库 5
1.3　Backbone依赖库的使用 5
1.3.1　使用_.bindAll()函数绑定对象方法 5
1.3.2　使用_.keys()函数检索对象属性名称 7
1.4　开发第一个Backbone页面 7
1.5　本章小结 10
第2章　依赖库Underscore 11
2.1　Underscore简介 11
2.1.1　Underscore对象封装 11
2.1.2　Underscore库的类型模块 12
2.2　集合 13
2.2.1　each()和map()函数 13
2.2.2　find()和filter()函数 15
2.2.3　max()和min()函数 16
2.2.4　sortBy()和groupBy()函数 17
2.3　数组 18
2.3.1　first()和last()函数 19
2.3.2　indexOf()和lastIndexOf()函数 20
2.3.3　without()和union()函数 21
2.4　函数 22
2.4.1　delay()函数 22
2.4.2　once ()函数 22
2.4.3　wrap ()函数 23
2.4.4　compose()函数 23
2.5　对象 24
2.5.1　keys()和values()函数 24
2.5.2　pick()和omit()函数 25
2.5.3　defaults()函数 26
2.5.4　has()函数 27
2.6　功能 28
2.6.1　random()函数 28
2.6.2　escape()和unescape()函数 28
2.6.3　template()函数 29
2.6.4　chain()函数 33
2.7　本章小结 34
第3章　事件管理 35
3.1　Backbone.Events模块API结构 35
3.2　基本事件方法 36
3.2.1　绑定on方法 36
3.2.2　绑定一次once方法 42
3.2.3　触发事件trigger方法 43
3.2.4　移除事件off方法 45
3.3　新增事件方法 49
3.3.1　监听事件listenTo方法 49
3.3.2　监听一次listenToOnce方法 50
3.3.3　停止监听stopListening方法 52
3.4　事件其他 53
3.4.1　特殊事件all的使用 54
3.4.2　事件与Model、Collection、View的关系 55
3.5　本章小结 58
第4章　数据模型 59
4.1　创建数据模型 59
4.1.1　创建一个简单模型对象 59
4.1.2　对象模型赋值的方法 60
4.1.3　自定义模型中的方法 62
4.1.4　监听对象属性值变化 63
4.2　模型对象操作 65
4.2.1　读取数据 65
4.2.2　修改数据 66
4.2.3　开启数据验证 67
4.2.4　关闭数据验证 69
4.2.5　更新数据回滚 70
4.2.6　删除数据 71
4.3　对象属性操作 73
4.3.1　attributes对象 73
4.3.2　previous和previousAttributes方法 75
4.3.3　set方法的内部顺序 77
4.4　同步数据到服务器 78
4.4.1　save方法 78
4.4.2　fetch方法 83
4.4.3　destroy方法 84
4.5　本章小结 86
第5章　模型集合 87
5.1　创建集合对象 87
5.1.1　自定义集合对象 87
5.1.2　实例化集合对象 89
5.1.3　自定义集合方法 90
5.2　操作集合中模型对象 91
5.2.1　移除集合对象中的模型 91
5.2.2　添加集合对象中的模型 94
5.2.3　查找集合对象中的模型 96
5.2.4　集合中模型对象的排序 99
5.3　与服务器交互集合中模型对象 102
5.3.1　调用fetch方法获取服务器数据 102
5.3.2　调用create方法与服务器同步数据 104
5.4　本章小结 110
第6章　视图 111
6.1　视图基础 111
6.1.1　定义视图对象 111
6.1.2　视图对象访问模型对象 114
6.1.3　视图对象访问集合对象 116
6.2　视图中的模板 118
6.2.1　处理逻辑的模板 118
6.2.2　显示多项内容的模板 120
6.2.3　自定义模板变量标记 123
6.3　视图中的元素事件 125
6.3.1　视图中简单事件绑定 126
6.3.2　绑定视图模板中的多个事件 128
6.3.3　动态绑定和取消视图中的事件 130
6.4　使用Backbone框架开发前端Web应用 134
6.4.1　功能描述 134
6.4.2　实现代码 135
6.4.3　页面效果 137
6.4.4　源码分析 137
6.5　本章小结 138
第7章　导航控制器 139
7.1　浏览器导航基础 139
7.1.1　history对象 139
7.1.2　HTML 5中history对象API 142
7.1.3　location对象 145
7.2　绑定导航地址 147
7.2.1　action方式绑定URL地址 147
7.2.2　event方式绑定URL地址 150
7.2.3　定义hash属性绑定规则 151
7.3　router类中的方法 154
7.3.1　route方法的使用 154
7.3.2　navigate方法的使用 156
7.4　history对象的stop方法 158
7.5　本章小结 161
第8章　综合案例：Backbone框架开发Web应用 162
8.1　案例1：学生信息管理系统 162
8.1.1　需求分析 162
8.1.2　界面效果 162
8.1.3　功能实现 165
8.1.4　代码分析 170
8.2　案例2：人员资料管理系统 174
8.2.1　需求分析 174
8.2.2　界面效果 174
8.2.3　功能实现 178
8.2.4　代码分析 186
8.3　本章小结 190
第9章　Require框架基础知识 191
9.1　构建Require框架开发环境 191
9.1.1　下载Require文件库 191
9.1.2　异步方式加载文件库 192
9.2　加载主模块 192
9.3　加载自定模块 193
9.3.1　示例文件间的层次关系 194
9.3.2　加载key/value格式模块 194
9.3.3　加载函数模块 196
9.3.4　加载存在依赖关系的函数模块 197
9.4　Require的配置选项 199
9.4.1　加载指定路径的模块文件 200
9.4.2　加载非AMD标准的模块文件 201
9.4.3　加载Require插件模块文件 203
9.5　本章小结 204
第10章　综合案例：Require + jQuery Mobile + Backbone框架开发 205
10.1　案例1：简单的移动端WebApp 205
10.1.1　需求分析 205
10.1.2　界面效果 206
10.1.3　功能实现 206
10.1.4　代码分析 211
10.2　案例2：移动端的新闻浏览应用 212
10.2.1　需求分析 212
10.2.2　界面效果 212
10.2.3　功能实现 213
10.2.4　代码分析 221
10.3　本章小结 223
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Backbone.js实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Web Component实战：探索PolymerJS、Mozilla Brick、Bosonic与ReactJS框架
前言 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . xiii
第 1 章 Web Component 简介. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 1
Web Component 是什么？ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  . 1
Web Component 的使用动机和困境 . . . . . . . . . . . . . . . . . . . . . . . . . 2
Web Component 架构. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2
模板元素 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 3
模板元素的细节. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 3
检测是否支持模板特性 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 4
延迟加载的模板. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 6
激活模板. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 7
HTML Import . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 11
HTML Import 特性检测. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 11
访问引入的文档. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 13
HTML Import 的事件 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .. . . . . . . . . . . . . . . . . . 15
Shadow DOM . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 16
Shadow DOM 特性检测 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 17
Shadow tree. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .. . . . . . . . . . . . . . . . 19
自定义元素 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24
自定义元素特性检测 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24
自定义元素的开发. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 26
示例：自定义元素. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 29
节点分布 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 31
内容插入点 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .. . . . . . . . . . . . . . . . . . . . . . . 31
Shadow 插入点 . . . . . . . . . . . . . . . . . . . . . .. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 33
为 Web Component 添加样式 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 35
构建时钟组件. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 39
时钟模板. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 39
时钟元素注册脚本. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 40
组件的使用 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 41
X-Tag. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 43
X-Tag 元素生命周期 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 43
开发 X-Tag 自定义元素 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 44
Polymer . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 48
Mozilla Brick. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 48
ReactJS. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 48
Bosonic . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 48
总结. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 49
第 2 章 Polymer 简介 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 50
什么是 Polymer . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 50
安装和配置 Polymer. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .. . . . . . . . . . . . . . 50
下载 ZIP 文件 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 51
使用 GIT 克隆. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 51
使用 Bower. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .. . . . . . . . . . . . . . . 52
PolymerJS 结构. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .. . . . 53
包含 polyfill 的 Web Component . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 54
Polymer 库 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .. . . . . . . . . . . 56
元素. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 56
Core 元素 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 56
core-tooltip 元素 . . . . . . . . . . . . . . . . . . . . . . . . . .. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 62
paper 元素. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .. . . . . . . . . . . . . . . . . . . . . . . 64
Material Design . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 65
Polymer Designer 工具. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 72
使用设计工具开发 . . . . . . . . . . . . . . . . . . . . . . . . . . . .. . . . . . . . . . . . . . . . . . . . . . . . . . . 73
获取 GitHub 令牌. . . . . . . . . . . . . . . . . . . . . . . .. . . . . . . . . . . . . . . . . . . . . . . . . . . 73
开发 E-mail 订阅表单 . . . . . . . . . .. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 74
Yeoman Polymer 生成器 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .. . . . . . . . . . . . . 75
Polymer 生成器命令. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .. . . . . . . . 76
Polymer 应用生成器 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 77
Polymer 元素生成器 . . . . . . . . . . . . . . . . . . . . .. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 77
Polymer 种子生成器 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 78
Polymer Github 页面生成器 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 78
总结. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 78
第 3 章 使用 Polymer 开发 Web Component. . . . . . . . . . . . . . . . . . . . . . . . . . 79
PolymerJS 的 ready 事件 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 79
Polymer 表达式 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 80
Polymer 模板的自动绑定. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 82
过滤器表达式 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .. . . . . . . . . . . . . . . . . 86
内建的过滤器表达式 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 86
自定义过滤器表达式 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 89
全局的过滤器表达式 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 91
开发 Polymer 自定义元素. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 92
定义自定义元素. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 93
定义元素属性 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .. . . . . . . . . . . . . . . . . . . . . 93
定义默认属性 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .. . . . . . . . . . . . . . . . . . . . . . 94
定义公共属性和方法 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 94
发布属性. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 95
定义生命周期方法. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 95
注册自定义元素. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 97
开发一个自定义元素示例 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 97
扩展自定义元素 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 99
Polymer 方法. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 101
Polymer 的 mixin 方法 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 101
Polymer 的 import 方法 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 103
Polymer 的 waitingFor 方法. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 104
Polymer 的 forceReady 方法. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 106
异步任务执行. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .. . . . . . . . . . . 107
开发一个数显时钟 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 109
使用 Yeoman. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .. . . . . . 111
Yeoman 元素生成器. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 111
Yeoman 种子生成器. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 114
Yeoman GitHub 页面生成器 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .. . . . . . . . . . . . . 115
为生产环境下使用 vulcanize 做准备. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .. . . . . 116
安装 vulcanize . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .. . . . . . . . . . . . . . . . . . . . . . . 116
运行 vulcanize 进程 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 116
总结. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 117
第 4 章 探索 Web Component 开发工具 Bosonic. . . . . . . . . . . . . . . . . . . . . . 118
Bosonic 是什么？ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 118
浏览器支持情况 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 119
配置 Bosonic. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 119
Bosonic 包 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .. . . . . . . . . 119
内建元素 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 120
b-sortable 元素. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 120
b-toggle-button 元素 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 122
开发自定义元素 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .. . . . . . . . 124
第 1 步 创建 red-message 元素目录. . . . . . . . . . . . . . .. . . . . . . . . . . . . . . . . . . . . . . . 124
第 2 步 进入到 red-message 目录. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 125
第 3 步 为 <red-message> 生成一个框架. . . . . . . . . . . . . . . . . . .. . . . . . . . . . . . . . . . 125
第 4 步 验证目录结构. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 125
第 5 步 定义 <red-message> 元素的代码. . . . . . . . . . . . . . . . . .. . . . . . . . . . . . . . . . . 126
第 6 步 修改 index.html 示例文件. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 127
第 7 步 使用 Grunt 生成分发文件. . . . . . . . . . . . . . . . . . . . . . . .. . . . . . . . . . . . . . . . . . 127
第 8 步运行 index.html 文件 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .. . . . . . . . . . . . . . 130
Bosonic 生命周期 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 130
生命周期示例 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 130
开发一个数显时钟 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .. . . . . . . 136
总结. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 140
第 5 章 使用 Mozilla Brick 开发 Web Component . . . . . . . . . . . . . . . . . . . . . . 141
Brick 库是什么？. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 141
Mozilla Brick 1.0. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 142
Mozilla Brick 2.0. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 142
安装 Mozilla Brick . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 143
配置 Mozilla Brick . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .. . . . . . 144
内置组件 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 145
brick-calendar 元素 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 145
brick-flipbox 元素. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 145
brick-deck 元素 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 148
brick-tabbar 元素 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 151
brick-action 元素. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 154
brick-menu 元素 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 157
X-Tag 库 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .. . . . . . . . . . . . 158
使用 X-Tag 来开发一个数显时钟 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 159
总结. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .. . . . . . . . . . . . . . . . . . . . . . . . . . . . 164
第 6 章 使用 ReactJS 开发 Web Component . . . . . . . . . . . . . . . . . . . . . . . . . . 165
走近 React . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 165
Flux 架构 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 165
Flux 的关键特性 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .. . . . . . . . . 166
安装 ReactJS . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .. . . . . . . . . . . . . . . 167
配置 ReactJS . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .. . . . . . . . . . . . . . . 168
使用 ReactJS . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 168
JSX 是什么. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 170
使用 JSX 创建自定义组件. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .. . . . . . . . 170
ReactJS 行内样式. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .. . . . . . . . . . . . . . 172
ReactJS 事件处理. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .. . . . . . . . . . . . . . . . . 174
使用非 DOM 属性. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 176
ReactJS 组件生命周期 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .. . . . . . . . . . . . . . . . . 179
ReactJS 初始化 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .. . . . . . . . . . 179
ReactJS 存在期 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 180
ReactJS 销毁期 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 181
ReactJS 生命周期示例 . . . . . . . . . . . . . . . . . . .. . . . . . . . . . . . . . . . . . .. . . . . . . . . . . . . 181
有状态的自定义组件. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 184
生产环境预编译 JSX. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 186
JSX 文件监听 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .. . . . . . . . . . . . . . . . 190
使用 ReactJS 开发一个数显时钟. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .. . 190
第 1 步 开发脚本定义数显时钟组件生命周期 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 190
第 2 步 定义数显时钟组件的 CSS 样式 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 191
调试 ReactJS . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 192
总结. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .. . . . . . . . . . . . . . . . . . . . . 194
附录 Web Component 参考文献 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 195
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Web Component实战：探索PolymerJS、Mozilla Brick、Bosonic与ReactJS框架
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>jQuery权威指南(第2版)
前言
第1章 jQuery简介	1
1.1 认识jQuery	2
1.1.1 jQuery基本功能	2
1.1.2 jQuery 1.8 新增功能与特征	3
1.2 搭建jQuery开发环境	3
1.2.1 下载jQuery文件库	3
1.2.2 引入jQuery文件库	4
1.2.3 编写第一个简单的jQuery程序	4
1.3 jQuery程序的代码风格	5
1.3.1 “$”美元符的使用	5
1.3.2 事件操作链接式书写	6
1.4 jQuery简单应用	7
1.4.1 jQuery访问DOM对象	7
1.4.2 jQuery控制DOM对象	8
1.4.3 jQuery控制页面CSS	10
1.5 本章小结	11
第2章 jQuery选择器	12
2.1 选择器的优势	13
2.1.1 代码更简单	13
2.1.2 完善的检测机制	15
2.2 jQuery选择器的类型	17
2.2.1 基本选择器	17
2.2.2 层次选择器	19
2.2.3 简单过滤选择器	21
2.2.4 内容过滤选择器	24
2.2.5 可见性过滤选择器	25
2.2.6 属性过滤选择器	27
2.2.7 子元素过滤选择器	29
2.2.8 表单对象属性过滤选择器	31
2.2.9 表单选择器	33
2.3 综合案例分析—导航条在项目中的应用	36
2.3.1 需求分析	36
2.3.2 界面效果	36
2.3.3 功能实现	37
2.3.4 代码分析	38
2.4 本章小结	39
第3章 jQuery操作DOM	40
3.1 DOM树状模型	41
3.2 元素属性操作	43
3.2.1 获取元素的属性	43
3.2.2 设置元素的属性	44
3.2.3 删除元素的属性	46
3.3 获取和设置元素	47
3.3.1 获取和设置元素内容	47
3.3.2 获取和设置元素值	48
3.4 元素样式操作	50
3.4.1 直接设置元素样式值	50
3.4.2 增加元素CSS类别	52
3.4.3 切换元素CSS类别	53
3.4.4 删除元素CSS类别	54
3.5 页面元素操作	54
3.5.1 创建节点元素	55
3.5.2 内部插入节点	57
3.5.3 外部插入节点	60
3.5.4 复制元素节点	61
3.5.5 替换元素节点	63
3.5.6 包裹元素节点	64
3.5.7 遍历元素	66
3.5.8 删除页面元素	67
3.6 综合案例分析—数据删除和图片预览在项目中的应用	69
3.6.1 需求分析	69
3.6.2 界面效果	69
3.6.3 功能实现	70
3.6.4 代码分析	73
3.7 本章小结	74
第4章 jQuery中的事件与应用	75
4.1 事件机制	76
4.1.1 事件中的冒泡现象	76
4.1.2 如何阻止冒泡的发生	77
4.2 页面载入事件	78
4.2.1 ready()方法的工作原理	78
4.2.2 ready()方法的几种写法	78
4.3 绑定事件	79
4.3.1 使用bind()方法绑定事件	79
4.3.2 通过映射方式绑定事件	81
4.4 切换事件	83
4.4.1 hover()方法	83
4.4.2 toggle()方法	84
4.5 移除事件	86
4.5.1 unbind()方法移除元素绑定事件	86
4.5.2 unbind()方法移除自定义事件	88
4.6 其他事件	88
4.6.1 one()方法	88
4.6.2 trigger ()方法	89
4.7 jQuery中的事件应用	91
4.7.1 文本框中的事件应用	91
4.7.2 下拉列表框中的事件应用	95
4.7.3 列表中的导航菜单应用	99
4.7.4 网页选项卡的应用	104
4.8 综合案例分析—删除数据时的提示效果在项目中的应用	107
4.8.1 需求分析	107
4.8.2 界面效果	107
4.8.3 功能实现	108
4.8.4 代码分析	110
4.9 本章小结	112
第5章 jQuery的动画与特效	113
5.1 显示与隐藏	114
5.1.1 show()与hide()方法	114
5.1.2 动画效果的show()与hide()方法	116
5.1.3 toggle()方法	117
5.2 滑动	119
5.2.1 slideDown()与slideUp()方法	119
5.2.2 slideToggle()方法	122
5.3 淡入淡出	123
5.3.1 fadeIn()与fadeOut()方法	123
5.3.2 fadeTo()方法	125
5.4 自定义动画	127
5.4.1 简单的动画	127
5.4.2 移动位置的动画	128
5.4.3 队列中的动画	131
5.4.4 动画停止和延时	132
5.5 动画效果综述	134
5.5.1 各种动画方法说明	134
5.5.2 使用animate()方法代替其他动画效果	135
5.6 综合案例分析—动画效果浏览相册中的图片	135
5.6.1 需求分析	135
5.6.2 界面效果	136
5.6.3 功能实现	137
5.6.4 代码分析	140
5.7 本章小结	143
第6章 Ajax在jQuery中的应用	145
6.1 加载异步数据	145
6.1.1 传统的JavaScript方法	145
6.1.2 jQuery中的load()方法	147
6.1.3 jQuery中的全局函数getJSON()	148
6.1.4 jQuery中的全局函数getScript()	150
6.1.5 jQuery中异步加载XML文档	152
6.2 请求服务器数据	154
6.2.1 $.get()请求数据	155
6.2.2 $.post()请求数据	156
6.2.3 serialize()序列化表单	158
6.3 $.ajax()方法	161
6.3.1 $.ajax()中的参数及使用方法	161
6.3.2 $.ajax()在数据交互中的应用	162
6.3.3 $.ajaxSetup()设置全局Ajax	164
6.4 Ajax中的全局事件	167
6.4.1 Ajax全局事件的参数及功能	167
6.4.2 ajaxStart与ajaxStop全局事件	167
6.5 综合案例分析—使用Ajax实现新闻点评即时更新	170
6.5.1 需求分析	170
6.5.2 界面效果	170
6.5.3 功能实现	171
6.5.4 代码分析	175
6.6 本章小结	177
第7章 jQuery中调用JSON与XML数据	178
7.1 jQuery调用JSON数据	179
7.1.1 JSON数据的基础知识	179
7.1.2 jQuery读取JSON数据	180
7.1.3 jQuery 遍历JSON 数据	182
7.1.4 jQuery 操作JSON 数据	185
7.2 jQuery调用XML数据	187
7.2.1 使用传统JavaScript调用XML的方法	187
7.2.2 jQuery 解析XML 数据	189
7.2.3 jQuery读取XML 数据	191
7.2.4 jQuery操作XML 数据	194
7.3 综合案例分析—调用JSON实现下拉列表框三级联动	197
7.3.1 需求分析	197
7.3.2 界面效果	198
7.3.3 功能实现	198
7.3.4 代码分析	200
7.4 综合案例分析—调用XML实现无刷新即时聊天	201
7.4.1 需求分析	201
7.4.2 界面效果	201
7.4.3 功能实现	202
7.4.4 代码分析	205
7.5 本章小结	205
第8章 jQuery中的插件	206
8.1 如何调用jQuery插件	207
8.2 jQuery常用插件	208
8.2.1 验证插件validate	208
8.2.2 表单插件form	211
8.2.3 Cookie插件cookie	213
8.2.4 搜索插件AutoComplete	216
8.2.5 图片灯箱插件NotesForLightBox	220
8.2.6 右键菜单插件ContextMenu	223
8.2.7 图片放大镜插件jQZoom	227
8.2.8 图片切换插件Nivo Slider	229
8.2.9 动画表格排序插件TableSort	233
8.2.10 进度条插件ProgressBar	236
8.2.11 页面加载遮盖插件LoadMask	239
8.2.12 数据分页插件Pagination	242
8.2.13 消息通知条插件Activebar2	248
8.2.14 滚动条插件NiceScroll	250
8.3 自定义jQuery插件	253
8.3.1 自定义插件的种类	253
8.3.2 插件开发要点	254
8.3.3 对象级别插件的开发	254
8.3.4 类级别插件的开发	257
8.4 综合案例分析—使用uploadify插件实现文件上传功能 260
8.4.1 需求分析	260
8.4.2 界面效果	261
8.4.3 插件介绍	262
8.4.4 功能实现	263
8.4.5 代码分析	264
8.5 本章小结	268
第9章 jQuery UI插件	269
9.1 认识jQuery UI	270
9.2 jQuery UI交互性插件	271
9.2.1 拖曳插件draggable	271
9.2.2 放置插件droppable	273
9.2.3 排序插件sortable	276
9.3 jQuery UI微型插件	278
9.3.1 折叠面板插件accordion	278
9.3.2 日务插件datepicker	281
9.3.3 选项卡插件tabs	285
9.3.4 对话框插件dialog	288
9.4 jQuery UI 1.9新增功能 293
9.4.1 菜单工具插件menu	294
9.4.2 微调按钮插件spinner	297
9.4.3 工具提示插件tooltip	301
9.5 综合案例分析—使用jQuery UI插件以拖动方式管理相册	304
9.5.1 需求分析	304
9.5.2 界面效果	305
9.5.3 功能实现	306
9.5.4 代码分析	309
9.6 本章小结	312
第10章 jQuery实用工具函数	313
10.1 工具函数的分类	314
10.2 浏览器的检测	314
10.2.1 浏览器名称或版本信息	314
10.2.2 盒子模型	316
10.3 数组和对象的操作	318
10.3.1 遍历数组	318
10.3.2 遍历对象	319
10.3.3 数据筛选	320
10.3.4 数据变更	322
10.3.5 数据搜索	323
10.4 字符串操作	324
10.5 测试操作	326
10.5.1 检测对象是否为空	326
10.5.2 检测对象是否为原始对象	327
10.5.3 检测两个节点的包含关系	329
10.6 URL操作	330
10.7 其他工具函数	331
10.7.1 $.proxy()函数调用语法	331
10.7.2 改变事件函数的作用域	332
10.8 工具函数的扩展	334
10.8.1 使用$.extend()扩展工具函数	334
10.8.2 使用$.extend()扩展Object对象	335
10.9 综合案例分析—使用jQuery扩展工具函数实现对字符串指定类型的检测	336
10.9.1 需求分析	336
10.9.2 界面效果	336
10.9.3 功能实现	336
10.9.4 代码分析	339
10.10 本章小结	341
第11章 jQuery常用开发技巧	342
11.1 快速控制页面元素	343
11.1.1 居中显示元素	343
11.1.2 捕获鼠标位置	345
11.2 使用工具函数$.support检测浏览器的信息	348
11.3 调用jQuery中的方法	350
11.3.1 使用预加载方法预览图片	350
11.3.2 通过html()方法判断元素是否为空	353
11.3.3 使用replace()和replaceWith()方法替换内容	354
11.4 巧用jQuery中的事件	357
11.4.1 开启或禁止页面右键菜单	357
11.4.2 限制文本输入框中字符的数量	359
11.5 jQuery集合处理功能	361
11.6 常用自定义方法与插件	363
11.6.1 自定义选择器	363
11.6.2 自定义样式	365
11.6.3 自定义插件	366
11.7 本章小结	369
第12章 jQuery性能优化	370
12.1 jQuery性能优化常用策略	371
12.1.1 优先使用ID与标记选择器	371
12.1.2 使用jQuery对象缓存	372
12.1.3 正确使用选择器	373
12.1.4 使用最新版本的jQuery	374
12.1.5 避免过度使用jQuery对象	374
12.1.6 更多地使用链接式写法	374
12.1.7 正确处理元素间父子关系	375
12.1.8 正确使用循环语句	375
12.2 优化选择器执行的速度	376
12.2.1 处理选择器中不规范元素标志	376
12.2.2 使用子查询优化选择器性能	378
12.2.3 给选择器一个上下文	380
12.3 使用方法优化性能	381
12.3.1 使用target()方法优化事件中的冒泡现象	381
12.3.2 使用data()方法存取普通数据	383
12.3.3 使用data()方法存取JSON数据	385
12.4 优化DOM元素的操作	386
12.4.1 减少对DOM元素直接操作	386
12.4.2 正确区分DOM对象与jQuery对象	388
12.5 jQuery库与其他库冲突的解决方案	390
12.5.1 jQuery在其他库前导入	390
12.5.2 jQuery在其他库后导入	392
12.6 本章小结	394
第13章 jQuery在HTML 5中的应用	395
13.1 使用jQuery与HTML 5开发自定义视频播放器	396
13.1.1 需求分析	396
13.1.2 界面效果	396
13.1.3 功能实现	397
13.1.4 代码分析	403
13.2 使用jQuery与HTML 5实现图片任意旋转效果	405
13.2.1 需求分析	405
13.2.2 界面效果	405
13.2.3 功能实现	406
13.2.4 代码分析	409
13.3 使用jQuery与HTML 5开发拼图游戏	410
13.3.1 需求分析	410
13.3.2 界面效果	411
13.3.3 功能实现	412
13.3.4 代码分析	418
13.4 使用jQuery与HTML 5开发星球大战游戏	419
13.4.1 需求分析	419
13.4.2 界面效果	419
13.4.3 功能实现	420
13.4.4 代码分析	424
13.5 本章小结	426
第14章 jQuery Mobile基础知识	427
14.1 初识jQuery Mobile	428
14.1.1 jQuery Mobile框架简介	428
14.1.2 jQuery Mobile工作原理	428
14.1.3 开发第一个jQuery Mobile页面	428
14.2 jQuery Mobile基本组件	430
14.2.1 对话框元素	430
14.2.2 工具栏元素	432
14.2.3 内容布局	434
14.2.4 按钮	436
14.2.5 表单元素	438
14.2.6 列表视图	440
14.3 jQuery Mobile API接口应用	442
14.3.1 默认配置设置	442
14.3.2 方法	444
14.3.3 事件	445
14.3.4 页面主题	448
14.4 本章小结	450
第15章 jQuery Mobile综合案例开发	451
15.1 新闻订阅管理系统	452
15.1.1 需求分析	452
15.1.2 界面效果	452
15.1.3 功能实现	453
15.1.4 代码分析	464
15.2 记事本管理	467
15.2.1 需求分析	467
15.2.2 界面效果	468
15.2.3 功能实现	469
15.2.4 代码分析	480
15.3 本章小结	483
第16章 jQuery综合案例开发	484
16.1 切割图片	485
16.1.1 需求分析	485
16.1.2 界面效果	485
16.1.3 功能实现	486
16.1.4 代码分析	491
16.2 在线聊天室	493
16.2.1 需求分析	493
16.2.2 界面效果	494
16.2.3 功能实现	494
16.2.4 代码分析	505
16.3 本章小结	507
示例目录
第1章 jQuery简介	1
示例1-1 编写第一个简单的jQuery程序	4
示例1-2 jQuery事件的链式写法	6
示例1-3 控制DOM对象	8
示例1-4 jQuery控制CSS样式	10
第2章 jQuery选择器	12
示例2-1 分别使用JavaScript和jQuery实现隔行变色	13
示例2-2 分别使用JavaScript和jQuery输出文字信息	15
示例2-3 使用jQuery基本选择器选择元素	17
示例2-4 使用jQuery层次选择器选择元素	19
示例2-5 使用jQuery基本过滤选择器选择元素	21
示例2-6 使用jQuery内容过滤选择器选择元素	24
示例2-7 使用jQuery可见性过滤选择器选择元素	26
示例2-8 使用jQuery属性过滤选择器选择元素	27
示例2-9 使用jQuery子元素过滤选择器选择元素	29
示例2-10 使用jQuery表单对象属性过滤选择器获取表单对象	31
示例2-11 使用jQuery表单过滤选择器获取元素	33
第3章 jQuery操作DOM	40
示例3-1 创建一个DOM页面文档	41
示例3-2 使用attr(name)方法获取元素的属性	43
示例3-3 使用attr(name, value)方法设置元素的属性	44
示例3-4 使用function()函数随机展示图片	45
示例3-5 使用html()和text()方法设置和获取元素的内容	47
示例3-6 使用val()方法设置和获取元素的值	49
示例3-7 使用CSS()方法直接设置元素样式值	51
示例3-8 使用addClass()方法增加元素CSS类别	52
示例3-9 使用toggleClass()方法切换元素CSS类别	53
示例3-10 使用$()函数动态创建节点元素	55
示例3-11 使用append()方法插入节点	58
示例3-12 使用appentTo()方法插入节点	59
示例3-13 使用after()方法外部插入节点	60
示例3-14 使用clone()方法复制元素节点	61
示例3-15 使用replaceWith()和replaceAll()方法替换元素节点	63
示例3-16 使用wrap()和wrapInner()方法包裹元素节点	65
示例3-17 使用each()方法遍历元素获取属性	66
示例3-18 使用remove()方法删除页面元素	67
第4章 jQuery中的事件与应用	75
示例4-1 事件中的冒泡现象	76
示例4-2 使用bind()方法绑定事件	80
示例4-3 使用映射方式绑定不同的事件	81
示例4-4 使用hover()方法切换事件	83
示例4-5 使用toggle()方法切换事件	85
示例4-6 使用unbind()方法移除元素绑定事件	86
示例4-7 使用one()方法绑定触发一次的事件	88
示例4-8 使用trigger()方法触发指定类型事件	90
示例4-9 使用jQuery事件改变文本框的样式	91
示例4-10 三个下拉列表框联动展示数据	95
示例4-11 列表中的导航菜单应用	100
示例4-12 网页选项卡的应用	104
第5章 jQuery的动画与特效	113
示例5-1 使用show()与hide()方法显示和隐藏文本	114
示例5-2 使用show()与hide()方法动画显示和隐藏图片	116
示例5-3 使用toggle()方法切换元素可见状态	118
示例5-4 使用slideDown()与slideUp()方法实现滑动效果	120
示例5-5 使用slideToggle()方法的动画效果自动切换图片高度	122
示例5-6 使用fadeIn()和fadeOut()方法实现淡入淡出效果	124
示例5-7 使用fadeTo()方法改变图片透明度	126
示例5-8 简单的动画	127
示例5-9 移动位置的动画	129
示例5-10 队列中的动画	131
示例5-11 动画停止和延时	132
第6章 Ajax在jQuery中的应用	144
示例6-1 使用传统JavaScript方法实现Ajax功能	145
示例6-2 使用load()方法实现异步获取数据	147
示例6-3 使用全局函数getJSON()实现异步获取数据	149
示例6-4 使用全局函数getScript()实现异步获取数据	151
示例6-5 使用全局函数get()实现异步获取XML文档数据	153
示例6-6 使用全局函数get ()向服务器请求数据	155
示例6-7 使用全局函数post ()向服务器请求数据	157
示例6-8 使用serialize()序列化表单	159
示例6-9 使用$.ajax()方法发送请求	162
示例6-10 使用$.ajaxSetup()方法全局设置Ajax	165
示例6-11 jQuery中的全局事件	168
第7章 jQuery中调用JSON与XML数据	178
示例7-1 使用jQuery读取JSON数据	181
示例7-2 使用jQuery遍历JSON数据	182
示例7-3 使用jQuery操作JSON数据	185
示例7-4 使用传统JavaScript调用XML的方法	187
示例7-5 jQuery 解析XML 数据	189
示例7-6 jQuery 读取XML 数据	191
示例7-7 jQuery 操作XML 数据	194
第8章 jQuery常用插件	206
示例8-1 validate插件的使用	208
示例8-2 form插件的使用	211
示例8-3 cookie插件的使用	214
示例8-4 AutoComplete插件的使用	216
示例8-5 NotesForLightBox插件的使用	220
示例8-6 ContextMenu插件的使用	223
示例8-7 jQZoom插件的使用	227
示例8-8 Nivo Slider插件的使用	229
示例8-9 TableSort插件的使用	233
示例8-10 ProgressBar插件的使用	236
示例8-11 LoadMask插件的使用	239
示例8-12 Pagination插件的使用	242
示例8-13 Activebar2插件的使用	248
示例8-14 NiceScroll插件的使用	250
示例8-15 对象级别插件的开发	254
示例8-16 类级别插件的开发	257
第9章 jQuery UI插件	269
示例9-1 使用draggable插件实现对象的拖曳操作	271
示例9-2 使用droppable插件实现对象的放置操作	274
示例9-3 使用sortable插件实现列表中表项的拖曳排序操作	276
示例9-4 使用accordion插件实现页面中多区域的折叠操作	279
示例9-5 使用datepicker插件实现日期选择的基本操作	281
示例9-6 使用datepicker插件实现分段时间的选择	283
示例9-7 使用tabs插件展示选项卡的基本功能	285
示例9-8 使用dialog插件弹出提示和确定信息对话框	289
示例9-9 使用menu插件演示菜单的基本功能	294
示例9-10 使用spinner按钮改变元素背景色	298
示例9-11 使用tooltip插件演示菜单的基本功能	302
第10章 jQuery常用开发技巧	313
示例10-1 使用browser对象获取浏览器信息	314
示例10-2 使用boxModel对象检测是否是W3C盒子模型	316
示例10-3 使用$.each()工具函数遍历数组	318
示例10-4 使用$.each()工具函数遍历ajaxSettings对象	319
示例10-5 使用$.grep()工具函数筛选数组中的元素	321
示例10-6 使用$.map()工具函数变更数组中的元素	322
示例10-7 使用$.inArray()工具函数搜索数组中指定元素的位置	323
示例10-8 使用$.trim()工具函数删除字符串左右两边的空格符	325
示例10-9 使用$.isEmptyObject()函数检测对象是否为空	327
示例10-10 使用$.isPlainObject()函数检测对象是否为原始对象	328
示例10-11 使用$.contains()函数检测两个节点的包含关系	329
示例10-12 使用$.param()函数对数组进行序列化	330
示例10-13 使用$.proxy()函数改变事件函数的作用域	332
示例10-14 使用$.extend()函数扩展工具函数	334
第11章 jQuery常用开发技巧	342
示例11-1 居中显示弹出框	343
示例11-2 捕获鼠标位置	345
示例11-3 使用工具函数$.support检测浏览器的信息	348
示例11-4 页面打开时使用预加载图片	351
示例11-5 使用replace()和replaceWith()方法替换内容	355
示例11-6 开启或禁止页面右键菜单	357
示例11-7 限制文本输入框中字符数量	359
示例11-8 jQuery集合处理功能	361
示例11-9 自定义选择器获取指定范围元素	363
示例11-10 自定义主题样式	365
示例11-11 自定义插件以动画的形式向上滑动屏幕	366
第12章 jQuery性能优化	370
示例12-1 选择器中含有空格符与不含空格符的区别	377
示例12-2 使用子查询优化选择器性能	378
示例12-3 在指定的查找范围内获取DOM元素	380
示例12-4 使用事件中的target()方法优化冒泡现象	382
示例12-5 使用data()方法在元素上存取普通数据	384
示例12-6 使用data()方法在元素上存取JSON格式的数据	385
示例12-7 减少对DOM元素直接操作	386
示例12-8 DOM对象与jQuery对象的类型转换	388
示例12-9 jQuery先于其他库导入“$”的使用权	390
示例12-10 jQuery后于其他库导入“$”的使用权	392
第14章 jQuery Mobile基础知识	427
示例14-1 开发第一个jQuery Mobile页面	428
示例14-2 以对话框的形式打开目标URL地址	430
示例14-3 创建一个工具栏元素的头部栏	432
示例14-4 创建一个内容布局中可嵌套的折叠组	435
示例14-5 通过分栏的方式在页面中添加两个按钮	437
示例14-6 表单中文本输入框元素的实现	439
示例14-7 嵌套列表的实现	440
示例14-8 默认配置设置的实现	442
示例14-9 jQuery Mobile中方法的调用	444
示例14-10 jQuery Mobile中事件的触发	446
示例14-11 jQuery Mobile中选择主题	449
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>jQuery权威指南(第2版)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5与WebGL编程
前言　　xi
第一部分　基础知识
第1章　绪论　　2
1.1　HTML5：新型的视觉媒介　　4
1.1.1　浏览器平台　　4
1.1.2　浏览器支持情况　　6
1.2　3D图形的基础知识　　6
1.2.1　什么是3D　　6
1.2.2　3D坐标系　　7
1.2.3　网格、多边形与顶点　　8
1.2.4　材质、纹理与光源　　9
1.2.5　变换与矩阵　　9
1.2.6　相机、透视、视口与投影　　10
1.2.7　着色器　　11
第2章　WebGL：实时3D渲染　　13
2.1　WebGL基础　　14
2.2　WebGL API　　15
2.3　WebGL应用剖析　　16
2.4　一个简单的WebGL 示例　　16
2.4.1　Canvas元素和WebGL绘图上下文　　17
2.4.2　视口　　18
2.4.3　缓冲、缓冲数组和类型化数组　　18
2.4.4　矩阵　　19
2.4.5　着色器　　20
2.4.6　绘制图元　　22
2.5　创建3D 几何体　　23
2.6　添加动画　　27
2.7　使用纹理映射　　28
2.8　小结　　34
第3章　Three.js——一款JavaScript 3D引擎　　35
3.1　使用Three.js创建的代表性项目　　35
3.2　Three.js概览　　38
3.2.1　初始化Three.js　　40
3.2.2　Three.js工程结构　　40
3.3　一个简单的Three.js程序　　41
3.3.1　创建渲染器　　43
3.3.2　创建场景　　43
3.3.3　运行循环的实现　　45
3.3.4　为场景添加光照　　46
3.4　小结　　48
第4章　Three.js中的图形和渲染　　49
4.1　几何图形和网格　　49
4.1.1　预置的几何形状类型　　49
4.1.2　路径、形状和挤出　　50
4.1.3　几何形状基础类　　52
4.1.4　用于优化网格渲染的BufferGeometry　　55
4.1.5　从建模软件包中导入网格数据　　56
4.2　场景图和空间变换的层级结构　　57
4.2.1　利用场景图来管理复杂场景　　57
4.2.2　Three.js中的场景图　　57
4.2.3　平移、旋转和缩放的表示　　61
4.3　材质　　61
4.3.1　标准网格材质　　61
4.3.2　使用多重纹理增添逼真效果　　63
4.4　光源　　67
4.5　阴影　　69
4.6　着色器　　73
4.6.1　ShaderMaterial类：编写你自己的着色器代码　　74
4.6.2　在Three.js中使用GLSL着色器代码　　75
4.7　渲染　　78
4.7.1　后处理和多道渲染　　79
4.7.2　延迟渲染　　80
4.8　小结　　80
第5章　3D动画　　81
5.1　使用requestAnimationFrame()来驱动动画　　82
5.1.1　在你的应用中使用requestAnimationFrame()　　83
5.1.2　requestAnimationFrame()和性能　　84
5.1.3　基于帧的动画和基于时间的动画　　85
5.2　使用程序更新属性的方式来构建动画　　85
5.3　使用补间来进行动画过渡　　87
5.3.1　插值　　87
5.3.2　Tween.js库　　88
5.3.3　缓动　　90
5.4　使用关键帧来实现复杂动画　　91
5.4.1　Keyframe.js——一个简单的帧动画通用库　　92
5.4.2　使用关键帧创建关节动画　　94
5.5　使用曲线和路径创建平滑自然的运动　　96
5.6　使用变形目标来创建人物和面部动画　　99
5.7　使用蒙皮来构建角色动画　　100
5.8　使用着色器来进行动画　　104
5.9　小结　　109
第6章　CSS3：高级页面效果　　110
6.1　CSS变换　　112
6.1.1　使用3D变换　　113
6.1.2　添加透视　　115
6.1.3　创建变换层级　　117
6.1.4　控制背面渲染　　119
6.1.5　CSS变换属性汇总　　122
6.2　CSS过渡　　122
6.3　CSS动画　　127
6.4　挑战CSS的极限　　130
6.4.1　渲染3D物体　　130
6.4.2　渲染3D环境　　132
6.4.3　使用CSS自定义滤镜来实现高级着色器效果　　134
6.4.4　用Three.js来渲染CSS 3D　　135
6.5　小结　　135
第7章　Canvas：通用2D绘图　　137
7.1　Canvas基础　　137
7.1.1　Canvas元素和2D绘图上下文　　138
7.1.2　Canvas API的功能　　139
7.2　使用Canvas API来渲染3D　　144
7.3　基于Canvas渲染的3D 库　　147
7.3.1　K3D　　147
7.3.2　Three.js的Canvas渲染　　148
7.4　小结　　153
第二部分　应用开发技术
第8章　3D内容制作流程　　156
8.1　3D内容创建过程　　156
8.1.1　建模　　157
8.1.2　纹理映射　　157
8.1.3　动画　　158
8.1.4　技术美工　　159
8.2　3D建模和动画工具　　160
8.2.1　传统3D软件　　160
8.2.2　基于浏览器的集成环境　　164
8.2.3　3D内容仓库和现成素材　　167
8.3　3D文件格式　　168
8.3.1　模型格式　　168
8.3.2　动画格式　　170
8.3.3　全功能的场景格式　　171
8.4　加载3D内容到WebGL应用中　　178
8.4.1　Three.js JSON格式　　179
8.4.2　Three.js的二进制格式　　184
8.4.3　使用Three.js来加载COLLADA场景　　185
8.4.4　使用Three.js来加载gITF场景　　188
8.5　小结　　189
第9章　3D引擎和框架　　190
9.1　3D框架概念　　191
9.1.1　什么是框架　　191
9.1.2　WebGL框架需求　　192
9.2　WebGL框架概况　　194
9.2.1　游戏引擎　　194
9.2.2　展示框架　　196
9.3　Vizi：一个基于组件的用于可视化Web 应用的框架　　198
9.3.1　背景和设计理念　　199
9.3.2　Vizi架构　　200
9.3.3　Vizi入门　　201
9.3.4　一个Vizi应用示例　　202
9.4　小结　　207
第10章　开发一个简单的3D应用　　209
10.1　设计应用　　211
10.2　创建3D内容　　212
10.2.1　导出Maya场景到COLLADA　　213
10.2.2　将COLLADA文件转换glTF格式　　214
10.3　预览和测试3D内容　　214
10.3.1　基于Vizi的预览工具　　214
10.3.2　Vizi查看器类　　216
10.3.3　Vizi加载类　　217
10.4　将3D 集成到应用中　　220
10.5　开发3D行为和交互　　223
10.5.1　Vizi场景图API方法：findNode()和map()　　223
10.5.2　使用Vizi.FadeBehavior来动画透明度　　225
10.5.3　使用Vizi.RotateBehavior来自动旋转内容　　227
10.5.4　使用Vizi.Picker来实现鼠标悬停时显示信息　　227
10.5.5　使用用户界面来控制动画　　229
10.5.6　使用颜色选择器来改变颜色　　230
10.6　小结　　232
第11章　开发一个3D环境　　233
11.1　创建环境素材　　235
11.2　预览和测试环境　　236
11.2.1　以第一人称模式预览场景　　237
11.2.2　检查场景图　　237
11.2.3　检查对象属性　　240
11.2.4　显示边界框　　242
11.2.5　预览多个对象　　244
11.2.6　使用预览工具来查找场景中的其他问题　　246
11.3　使用skybox创建一个3D背景　　247
11.3.1　3D skybox　　247
11.3.2　Vizi skybox对象　　248
11.4　集成3D 内容到应用中　　250
11.4.1　加载和初始化场景　　250
11.4.2　加载和初始化车模型　　253
11.5　实现第一人称导航　　255
11.5.1　相机控制器　　256
11.5.2　第一人称控制器中的数学　　257
11.5.3　鼠标视角　　258
11.5.4　简单碰撞检测　　259
11.6　使用多个相机　　260
11.7　创建定时的动画过渡　　262
11.8　对象行为脚本　　263
11.8.1　基于Vizi.Script实现自定义组件　　264
11.8.2　驾驶车的控制器脚本　　264
11.9　给环境添加声音　　270
11.10　渲染动态纹理　　272
11.11　小结　　276
第12章　开发移动3D应用　　278
12.1　移动3D平台　　278
12.2　为移动浏览器开发　　280
12.2.1　增加触摸支持　　281
12.2.2　在桌面版Chrome上调试移动功能　　285
12.3　创建Web应用　　287
12.3.1　Web应用开发和测试工具　　287
12.3.2　打包成Web应用来发布　　288
12.4　开发原生/HTML5混合应用　　289
12.4.1　CocoonJS：一种为移动设备构建HTML游戏及应用的技术　　290
12.4.2　使用CocoonJS组装应用　　292
12.4.3　WebGL混合开发：问题　　298
12.5　移动3D性能　　298
12.6　小结　　300
附录　资源　　301
作者介绍　　311
封面介绍　　311
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5与WebGL编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Backbone.js开发秘笈
目　　录
译者序
前　言
致　谢
第1章　理解Backbone 1
1.1　导论 1
1.2　使用MVC模式设计应用 2
1.3　使用模型与集合定义业务逻辑 5
1.4　使用视图与路由器为应用的行为建模 8
1.5　从零开始建立一套应用程序结构 12
1.6　编写第一个Backbone应用 13
1.7　在应用中实现URL路由 16
1.8　使用插件来扩展应用 19
1.9　如何参与Backbone项目 20
第2章　模型 21
2.1　导论 21
2.2　创建一个模型 21
2.3　模型属性的操作 24
2.4　模型标识符的操作 25
2.5　模型属性的验证 26
2.6　重写getters与setters方法 28
2.7　通过创建撤销点来保存或恢复模型的状态 31
2.8　模型中工作流的实现 34
2.9　在模型中使用高级的验证方式 38
2.10　验证HTML表单 42
2.11　在模型中使用嵌套属性 45
2.12　实现模型间一对一的关系 47
第3章　集合 51
3.1　导论 51
3.2　创建模型的集合 52
3.3　使用索引从集合中获取模型 53
3.4　使用ID从集合中获取模型 54
3.5　为集合添加一个模型 54
3.6　从集合中移除一个模型 56
3.7　以栈或队列的方式使用集合 56
3.8　对集合进行排序 57
3.9　对集合中的模型进行过滤 58
3.10　对集合进行遍历 59
3.11　集合的链式操作 61
3.12　在集合上执行NoSQL查询 62
3.13　在同一个集合中存储不同类型的模型 66
3.14　实现一对多的关系 68
第4章　视图 73
4.1　导论 73
4.2　渲染视图 73
4.3　使用jQuery处理视图元素 77
4.4　对视图中的模型进行渲染 78
4.5　对视图中的集合进行渲染 80
4.6　将视图拆分成子视图 81
4.7　处理视图的文档对象模型（DOM）事件 84
4.8　使用Backbone.Router在视图间进行切换 88
第5章　事件及其绑定 92
5.1　导论 92
5.2　在Backbone.js中管理事件 92
5.3　处理Backbone对象的事件 94
5.4　把模型绑定到视图 96
5.5　把集合绑定到视图 98
5.6　使用Backbone.stickit进行双向绑定 104
5.7　把模型与集合绑定到下拉列表 108
5.8　在视图中处理快捷键 111
5.9　处理路由器事件 112
第6章　模板及其他用户界面的相关技术 114
6.1　导论 114
6.2　在视图中使用模板 114
6.3　实现一个模板加载器 117
6.4　使用Mustache模板 119
6.5　定义表单 121
6.6　为表单添加验证功能 124
6.7　处理表单事件 126
6.8　使用Bootstrap框架定制一个表单 128
6.9　使用LayoutManager构建页面布局 132
6.10　创建语义化及风格化的数据表格 136
6.11　使用HTML5的画布元素进行绘图 142
第7章　REST及存储 146
7.1　导论 146
7.2　为后端应用构建REST API 147
7.3　使用MongoLab创建一个RESTful后端应用的原型 148
7.4　与RESTful服务同步模型和集合 151
7.5　使用Backbone创建一个RESTful服务的前端应用 155
7.6　使用轮询技术来获取数据 165
7.7　使用HTML5本地存储 170
第8章　其他相关技术 172
8.1　导论 172
8.2　在Backbone对象中使用mixin 173
8.3　使用Grunt创建一个Backbone.js的扩展插件 174
8.4　使用QUnit为Backbone扩展插件编写测试用例 178
8.5　使用jQuery Mockjax模拟一个RESTful服务来进行异步测试 182
8.6　使用jQuery Mobile开发移动应用 184
8.7　使用PhoneGap创建iOS/Android应用 193
8.8　使用Require.js组织项目结构 196
8.9　使应用与搜索引擎相兼容 204
8.10　避免Backbone应用中的内存泄漏 209
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Backbone.js开发秘笈
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Web程序设计
第1章 基础知识
第2章 XHTML 简介
第3章 层叠样式表
第4章 JavaScript基础知识
第5章 JavaScript与XHTML文档
第6章 利用JavaScript开发动态文档
第7章 XML简介
第8章 Flash简介
第9章 PHP简介
第10章 Ajax简介
第11章 Java Web软件
第12章 ASP.NET简介
第13章 基于Web的数据库访问
第14章 Ruby简介
第15章 Rails简介
附录A Java简介
附录B 颜色名及其十六进制值
附录C Java Applet
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Web程序设计
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>反应式Web应用开发
第1章　你在谈论反应式编程吗　3
1.1　反应式的背景　4
1.1.1　反应式的起源　4
1.1.2　反应式宣言　5
1.1.3　反应式编程　6
1.1.4　反应式技术的涌现　7
1.2　重新思考计算资源的利用　8
1.2.1　基于线程与基于事件的Web应用服务器　8
1.2.2　开发适合多核架构的Web应用　11
1.2.3　水平应用架构　14
1.3　将故障处理作为第一考虑因素　16
1.3.1　故障是无法避免的　17
1.3.2　构建应用时，要充分考虑到故障　19
1.3.3　处理负载　21
1.4　小结　24
第2章　第一个反应式Web应用　25
2.1　创建并运行新工程　25
2.2　连接Twitter的流式API　28
2.2.1　获取到Twitter API的连接凭证　28
2.2.2　解决OAuth认证的一个bug　28
2.2.3　通过Twitter API获取流式数据　29
2.2.4　异步转换Twitter流　33
2.3　使用WebSocket将tweet以流的方式发送到客户端　36
2.3.1　创建Actor　37
2.3.2　搭建WebSocket连接并与之交互　38
2.3.3　发送tweet到WebSocket　40
2.4　让应用有弹性可扩展　42
2.4.1　让客户端变得有弹性　42
2.4.2　扩展　44
2.5　小结　46
第3章　函数式编程基础　47
3.1　函数式编程概述　47
3.2　不可变性　48
3.2.1　可变状态的谬误　48
3.2.2　将不可变值视为现实的快照　49
3.2.3　面向表达式编程　50
3.3　函数　52
3.3.1　面向对象编程语言中的函数　52
3.3.2　函数作为第一类的值　53
3.3.3　传递行为　53
3.3.4　组合函数　54
3.3.5　函数的大小　55
3.4　操作不可变集合　57
3.4.1　使用转换来替换循环　57
3.4.2　用来操作集合的高阶函数　58
3.5　转换到声明式编程风格　64
3.5.1　不要对Option使用get方法　64
3.5.2　只使用不可变值和数据结构　65
3.5.3　致力于编写小巧精炼的函数　65
3.5.4　迭代式地改善函数式编程风格　65
3.6　小结　66
第4章　快速掌握Play框架　67
4.1　Play应用的结构和配置　68
4.1.1　简单词汇教师应用简介　68
4.1.2　创建一个最小的Play应用脚手架　68
4.1.3　构建项目　71
4.2　请求处理　72
4.2.1　请求的生命周期　73
4.2.2　请求路由　76
4.2.3　控制器、Action和结果　80
4.2.4　WebSocket　86
4.2.5　调整默认的请求处理管道　89
4.3　小结　93
第二部分　核心概念
第5章　Future　97
5.1　使用Future　97
5.1.1　Future基础　98
5.1.2　Play中的Future　104
5.1.3　测试Future　111
5.2　用Future来设计异步业务　113
5.2.1　识别可并行的元素　114
5.2.2　组合服务的Future　116
5.2.3　错误的传播与处理　121
5.3　小结　125
第6章　Actor　127
6.1　Actor的基本原理　128
6.1.1　简单的Twitter分析服务　128
6.1.2　搭建基础框架：Actor及其子Actor　129
6.2　任其崩溃—监管与恢复　142
6.2.1　可靠的存储　142
6.2.2　任其崩溃　145
6.2.3　观察Actor的消亡并将其复活　146
6.3　系统对负载的反应，实现监控并预防服务过载　147
6.3.1　流控制消息　148
6.3.2　具有优先级的消息　151
6.3.3　断路器　153
6.4　小结　155
第7章　处理状态　157
7.1　在无状态的Play　Web应用中使用状态　158
7.1.1　数据库　159
7.1.2　使用Play　session保持客户端状态　170
7.1.3　使用分布式缓存保持服务端状态　171
7.2　命令查询职责分离与事件溯源　173
7.2.1　Twitter　SMS服务　173
7.2.2　搭建SMS网关　177
7.2.3　通过持久化Actor编写事件流　179
7.2.4　配置Akka持久化，写入到MongoDB中　182
7.2.5　处理传入的命令：订阅用户在Twitter被提及的通知　183
7.2.6　将事件流转换为关系模型　185
7.2.7　查询关系模型　188
7.2.8　关于最终一致性　190
7.3　小结　190
第8章　反应式用户界面　191
8.1　集成Scala.js和Play　192
8.1.1　应用结构　192
8.1.2　搭建构建流程　193
8.1.3　创建简单的Scala.js应用　195
8.2　集成Scala.js和AngularJS　196
8.2.1　搭建AngularJS绑定　196
8.2.2　创建AngularJS应用　197
8.2.3　初始化AngularJS dashboard模块及其依赖　199
8.2.4　初始化Dashboard控制器　199
8.2.5　创建视图片段　200
8.2.6　在HTML中加载AngularJS应用　200
8.3　使用Scala.js集成已有的JavaScript库　201
8.3.1　将已有的JavaScript库包装为AngularJS服务　201
8.3.2　创建为图表获取数据的服务　203
8.3.3　使用Chart.js展现指标数据　205
8.4　处理客户端故障　207
8.4.1　借助测试防止出现缺陷　207
8.4.2　探测WebSocket连接故障　209
8.4.3　通知用户　209
8.4.4　监控客户端错误　211
8.5　小结　211
第三部分　高级话题
第9章　反应式流　215
9.1　为什么要有反应式流　215
9.1.1　带有非阻塞回压功能的流　216
9.1.2　操作异步流　217
9.2　Akka Streams简介　218
9.2.1　核心原理　218
9.2.2　操作流式的tweet数据　219
9.3　小结　230
第10章　部署反应式Play应用　231
10.1　为Play应用的生产环境部署做好准备　232
10.1.1　创建用于部署的简单应用　232
10.1.2　使用Selenium编写和运行测试　234
10.1.3　为应用的生产部署做好准备　236
10.2　搭建持续集成环境　239
10.2.1　在Docker中运行Jenkins　239
10.2.2　通过配置Jenkins来构建应用　241
10.3　部署应用　243
10.3.1　部署到Clever Cloud　243
10.3.2　部署到自己的服务器上　245
10.3.3　该选择哪种部署模式　248
10.4　小结　248
第11章　测试反应式Web应用　249
11.1　测试反应式特质　249
11.1.1　测试响应性　250
11.1.2　测试弹性　250
11.1.3　测试适应性　251
11.1.4　在哪里进行测试？　251
11.2　测试单个反应式组件　251
11.2.1　测试单个组件的响应性　252
11.2.2　测试单个组件的弹性　256
11.3　测试整个反应式应用　259
11.3.1　创建生成随机数的简单应用　259
11.3.2　使用Gatling测试弹性　261
11.3.3　使用Bees with Machine Guns测试扩展性　265
11.4　小结　270
附录A　安装Play框架　271
附录B　推荐读物　275
附录C　推荐资源　277
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>反应式Web应用开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node.js微服务
1　微服务架构	1
微服务应运而生	1
单块软件	2
现实世界中的微服务	2
面向微服务的架构	3
为什么面向微服务的架构更好	3
不足之处	3
关键设计原则	4
从组件到业务单元	5
智能的服务，愚蠢的通信管道	7
去中心化	8
技术对比	10
多微才是足够的微	10
关键的好处	11
弹性	11
可伸缩性	11
技术多样性	13
可替换性	14
独立性	15
SOA与微服务的比较	16
为什么选择Node.js	18
API聚合	18
展望Node.js	19
小结	20
2　基于Seneca和PM2构建Node.js微服务	21
选择Node.js的理由	21
安装Node.js、npm、Seneca和PM2	22
第一个程序——Hello World	25
Node.js的线程模型	27
模块化组织的最佳实践	27
微服务框架Seneca	32
实现控制反转	35
Seneca的模式匹配	35
PM2——Node.js的任务执行器	46
单线程应用及异常	46
PM2——业界标准的任务执行器	47
小结	52
3　从单块软件到微服务	53
首先，我们拥有一个单块软件	53
如何控制自然增长	54
多抽象才是过度抽象	57
微服务的出现	58
微服务的缺陷	64
分割单块软件	64
数据才是分割单块软件的主要问题	65
组织架构适配	66
小结	67
4　编写你的第一个Node.js微服务	69
微电子商务概览	69
商品管理服务——双重核心	71
获取商品信息	72
获取指定类别的商品	73
根据ID获取商品	74
添加商品	75
删除商品	75
编辑商品	76
整合各模块	76
集成Express与Seneca——如何创建REST API	81
邮件服务：一个常见的问题	82
如何发送邮件	82
接口定义	83
设置Mandrill	84
亲自动手在微服务中集成Mandrill	86
回退策略	91
订单管理服务	92
根据如何获取非本地数据来定义微服务	93
订单管理服务代码	95
UI——API聚合的产物	99
前端微服务的必要性	99
代码	99
服务降级——当出现非灾难性故障时	107
断路器	108
Seneca——一块使我们工作变得更容易的拼图	109
Seneca和promise	111
调试	115
小结	118
5　安全性和可追溯性	119
基础设施的逻辑安全	119
利用SSH来对通信加密	120
应用程序安全	122
保持安全方面的与时俱进来应对常见威胁	123
有效的代码审阅	131
可追溯性	132
日志	132
请求追踪	134
审计	135
HTTP状态码	136
小结	138
6　Node.js微服务的测试及文档化	140
功能性测试	141
自动化测试的金字塔	142
采用Node.js测试微服务	145
对微服务进行文档化	175
采用Swagger对API进行文档化	175
根据Swagger定义来生成项目	182
小结	184
7　微服务的监控	185
服务监控	185
采用PM2和Keymetrics进行监控	186
类人猿大军—来自Netflix的主动监控	201
吞吐量和性能的降级	204
小结	206
8　微服务的部署	208
软件部署的一些概念	208
持续集成	209
持续交付	209
采用PM2进行部署	209
PM2中的“生态系统”	210
采用PM2来部署微服务	212
Docker——一种可用于软件交付的容器	213
组装容器	215
部署Node.js应用	221
将Docker容器的创建过程自动化	223
Node.js事件循环—入门容易精通难	225
Node.js应用的集群化	228
为应用增加负载均衡	233
NGINX的健康检查	238
小结	239
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node.js微服务
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Google御用網頁語言Node.js
前言
第1章　Node.js簡介
1.1 Node.js 是什麼
1.1.1 Node.js 與 JavaScript
1.2 Node.js 能做什麼
1.3 非同步式 I/O 與事件驅動
1.4 Node.js 的效能
1.4.1 Node.js 架構簡介
1.4.2 Node.js 與 PHP + Nginx
1.5 JavaScript 簡史
1.5.1 Netscape 與 LiveScript
1.5.2 Java 與 Javascript
1.5.3 微軟的加入 — JScript
1.5.4 標準化 — ECMAScript
1.5.5 瀏覽器相容性問題
1.5.6 引擎效率革命和 JavaScript 的未來
1.6 CommonJS
1.6.1 服務端 JavaScript 的重生
1.6.2 CommonJS 標準與實現
1.7 參考資料
第2章　安裝和設定Node.js
2.1 安裝前的準備
2.2 快速安裝
2.2.1 Microsoft Windows系統上安裝Node.js
2.2.2 Linux 發行版本上安裝Node.js
2.2.3 Mac OS X上安裝Node.js
2.3 編譯原始程式碼
2.3.1 在 POSIX 系統中編譯
2.3.2 在 Windows系統中編譯
2.4 安裝Node 套件管理員
2.5 安裝多版本管理員
2.6 參考資料
第3章　Node.js 快速入門
3.1 開始用 Node.js 程式設計
3.1.1 Hello World
3.1.2 Node.js 命令列工具
3.1.3 建立 HTTP 伺服器
3.2 非同步式 I/O 與事件式程式設計
3.2.1 阻塞與執行緒
3.2.2 回呼函數
3.2.3 事件
3.3 模組和套件
3.3.1 什麼是模組
3.3.2 建立及載入模組
3.3.3 建立套件
3.3.4 Node.js 套件管理員
3.4 偵錯
3.4.1 命令列偵錯
3.4.2 遠端偵錯
3.4.3 使用 Eclipse 偵錯 Node.js
3.4.4 使用 node-inspector 偵錯 Node.js
3.5 參考資料
第4章　Node.js 核心模組
4.1 全域物件
4.1.1 全域物件與全域變數
4.1.2 process
4.1.3 console
4.2 常用工具 util
4.2.1 util.inherits
4.2.2 util.inspect
4.3 事件驅動 events
4.3.1 事件發射器
4.3.2 error 事件
4.3.3 繼承 EventEmitter
4.4 檔案系統 fs
4.4.1 fs.readFile
4.4.2 fs.readFileSync
4.4.3 fs.open
4.4.4 fs.read
4.5 HTTP 伺服器與用戶端
4.5.1 HTTP 伺服器
4.5.2 HTTP 用戶端
4.6 參考資料
第5章　使用Node.js進行Web開發
5.1 準備工作
5.1.1 使用 http 模組
5.1.2 Express 框架
5.2 快速開始
5.2.1 安裝 Express
5.2.2 建立專案
5.2.3 啟動伺服器
5.2.4 專案的結構
5.3 路由控制
5.3.1 工作原理
5.3.2 建立路由規則
5.3.3 路徑比對
5.3.4 REST 風格的路由規則
5.3.5 控制權轉移
5.4 模版引擎
5.4.1 什麼是模版引擎
5.4.2 使用模版引擎
5.4.3 頁面設定
5.4.4 部分視圖
5.4.5 視圖幫手
5.5 建立微博網站
5.5.1 功能分析
5.5.2 路由規劃
5.5.3 介面設計
5.5.4 使用 Bootstrap
5.6 使用者註冊和登入
5.6.1 存取資料庫
5.6.2 階段支援
5.6.3 註冊和登入
5.6.4 頁面許可權控制
5.7 發表微博
5.7.1 微博模型
5.7.2 發表微博
5.7.3 使用者頁面
5.7.4 首頁
5.7.5 下一步
5.8 參考資料
第6章　Node.js 進階話題
6.1 模組載入機制
6.1.1 模組的型態
6.1.2 按路徑載入模組
6.1.3 透過尋找 node_modules 目錄載入模組
6.1.4 載入快取
6.1.5 載入順序
6.2 控制流
6.2.1 迴圈的陷阱
6.2.2 解決控制流難題
6.3 Node.js 應用部署
6.3.1 記錄檔功能
6.3.2 使用cluster 模組
6.3.3 啟動指令稿
6.3.4 共用80通訊埠
6.4 Node.js 不是銀彈
6.5 參考資料
附錄A　 JavaScript的進階特性
A.1 作用域
A.1.1 函數作用域
A.1.2 全域作用域
A.2 閉包
A.2.1 什麼是閉包
A.2.2 閉包的用途
A.3 物件
A.3.1 建立和存取
A.3.2 建構函數
A.3.3 上下文物件
A.3.4 原型
A.3.5 物件的複製
附錄B　 Node.js程式設計標準
B.1 縮排
B.2 行寬
B.3 敘述分隔符號
B.4 變數定義
B.5 變數名稱和屬性名稱
B.6 函數
B.7 引號
B.8 連結陣列的初始化
B.9 等號
B.10 命名函數
B.11 物件定義
B.12 繼承
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Google御用網頁語言Node.js
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>智能手机跨平台开发高级教程
第1章  智能手机是新式个人电脑	1
1.1  应用程序市场前景	1
1.2  智能手机简介	3
1.2.1  智能手机前景	3
1.2.2  跨平台框架	4
1.2.3  移动应用程序的品牌经验	4
1.3  Web技术	8
1.4  跨平台框架	8
1.5  关于本书	11
第Ⅰ部分  跨平台开发与发布
第2章  iPhone	15
2.1  Xcode介绍	15
2.2  iPhone开发标准实践	16
2.3  构建简单的iPhone应用程序	16
2.3.1  创建Xcode项目	17
2.3.2  创建界面	18
2.4  在设备上安装应用程序	25
2.4.1  使用开发配置助手	25
2.4.2  手动构建iPhone配置	26
2.4.3  查找设备ID	26
2.4.4  创建配置文件	27
2.4.5  安装配置文件	27
2.4.6  在设备上安装和运行
应用程序	28
第3章  Android	29
3.1  Android开发	30
3.1.1  搭建Eclipse开发环境	30
3.1.2  构建简单的Android应用
程序	32
3.1.3  使用Android WebView的
简单应用程序	38
3.2  为Android设备构建应用程序	40
3.3  在Web上发布	41
3.4  Android Market	41
第4章  BlackBerry	43
4.1  BlackBerry平台	43
4.2  搭建典型Java开发环境	44
4.3  构建简单的BlackBerry
应用程序	45
4.3.1  创建Eclipse项目	45
4.3.2  创建界面	47
4.3.3  代码解释	49
4.3.4  构建和测试应用程序	49
4.3.5  使用Label、Text Field和Button
的简单用户界面应用程序	50
4.3.6  代码解释	52
4.3.7  使用BlackBerry Browser
Field的简单应用程序	52
第5章  Windows Mobile	57
5.1  为Windows Mobile 6.5开发
搭建环境	58
5.2  构建简单的Windows Mobile
应用程序	58
5.2.1  创建Smart Device项目	58
5.2.2  构建基本功能	60
5.2.3  部署和测试应用程序	62
5.2.4  充实应用程序	63
5.3  打包和发布应用程序	66
5.3.1  将CAB Project添加到
Solution	66
5.3.2  定制产品名称	67
5.3.3  把应用程序添加到CAB
项目中	67
5.3.4  创建应用程序快捷方式	68
5.3.5  添加注册表项	68
5.3.6  构建和部署CAB文件	68
5.3.7  安装CAB文件	69
5.4  发布应用程序	69
第Ⅱ部分  跨平台的原生框架
第6章  Rhodes	73
6.1  开发架构	74
6.2  运行时架构	75
6.3  数据库(Rhom)	76
6.4  多线程	77
6.5  Rhodes和Rails的区别	77
6.6  创建Rhodes应用程序	77
6.7  构建Rhodes应用程序	78
6.8  运行应用程序	80
6.8.1  运行在iPhone上	81
6.8.2  运行在Android上	82
6.8.3  运行在BlackBerry上	82
6.8.4  运行在Windows
Mobile 6上	83
6.9  生成模型	83
6.10  调试技巧	87
6.10.1  iPhone	87
6.10.2  BlackBerry	88
6.10.3  Android	88
6.11  Rhodes设备功能	88
6.12  联系人示例	89
6.13  照相机示例	93
6.14  地理定位和地图示例	94
第7章  RhoSync	99
7.1  同步服务器的工作原理	100
7.2  RhoSync源适配器	100
7.3  初始化	101
7.4  通过Web服务进行身份认证：
登录和注销	102
7.5  检索数据：查询和同步	102
7.5.1  查询	103
7.5.2  同步	104
7.6  提交数据：创建、更新和
删除	105
7.6.1  创建	105
7.6.2  更新	106
7.6.3  删除	106
7.7  用户身份验证	106
7.8  产品库存示例	108
7.8.1  在RhoHub上创建
应用程序	108
7.8.2  在本地RhoSync服务器上
创建应用程序	112
7.9  调试RhoSync源适配器	115
第8章  PhoneGap	117
8.1  PhoneGap入门	119
8.1.1  示例应用程序	119
8.1.2  Android	121
8.1.3  BlackBerry	122
8.1.4  PhoneGap模拟器	123
8.2  用PhoneGap编写Hello
World	124
8.3  编写一个PhoneGap应用
程序	125
8.4  联系人示例	130
8.5  照相机示例	134
第9章  Titanium Mobile	137
9.1  入门	137
9.1.1  编写Hello World应用程序	139
9.1.2  针对设备构建应用程序	140
9.1.3  Titanium Mobile设备功能	140
9.1.4  照相机示例	141
第Ⅲ部分  HTML 界 面
第10章  移动HTML和CSS	147
10.1  平台概览	147
10.1.1  iPhone、iPad、iPod Touch
的iOS	147
10.1.2  Android	148
10.1.3  BlackBerry	148
10.1.4  Windows Mobile	149
10.2  常用模式	149
10.2.1  基于屏幕的方法	149
10.2.2  导航	149
10.2.3  UI小部件	151
10.2.4  复选框	152
10.2.5  选择框	154
10.2.6  文本框	155
10.2.7  文本域	156
10.2.8  单选按钮	157
10.2.9  其他组件	159
10.2.10  WebKit Web视图	159
第11章  iWebKit	165
11.1  使用iWebKit 框架	165
11.1.1  注意事项	167
11.1.2  所需头文件	167
11.1.3  <body>标记	168
11.1.4  采用列表组织数据	168
11.2  导航	175
11.3  表单	176
11.4  横向模式	180
11.5  手机集成	180
11.6  在移动应用程序中集成
iWebKit	181
11.6.1  通过Object C在iWebKit
中创建原生iPhone应用
程序	181
11.6.2  创建应用程序	183
11.6.3  添加iWebKit框架到应用
程序布局模板	183
11.6.4  为iWebKit构建
PhoneGap	184
第12章  使用jQTouch实现动画UI	187
12.1  jQTouch入门	188
12.1.1  运行示例代码	188
12.1.2  创建简单的jQTouch
应用程序	188
12.2  添加屏幕	191
12.2.1  通过Ajax加载其他屏幕	193
12.2.2  取消、回退和浏览器
历史	194
12.2.3  其他按钮	195
12.3  jQTouch初始选项	195
12.3.1  基本视图	197
12.3.2  定制jQTouch应用程序	198
12.3.3  导航栏(又称工具栏)	198
12.3.4  通过主题定制视图	201
12.3.5  与Rhodes集成	201
12.3.6  与PhoneGap集成	201
第13章  Sencha Touch	203
13.1  入门	203
13.2  添加带面板的HTML文本	206
13.3  添加组件	209
13.4  实现交互	210
第14章  BlackBerry HTML UI	215
14.1  BlackBerry浏览器的UI
控件	216
14.2  BlackBerry 4.2版浏览器
控件	216
14.2.1  CSS	216
14.2.2  字体	219
14.2.3  窗体	220
14.2.4  JavaScript	221
14.3  用于动态布局的Rhodes
技巧	221
14.4  BlackBerry 4.6版浏览器
控件	223
14.5  显示与用户交互	223
14.6  开发环境	224
附录A  级联样式表	225
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>智能手机跨平台开发高级教程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>AngularJS即学即用
前言
第1章AngularJS概述
AngularjS简介
AngularjS，启航！
小结
第2章基本的AngularJS指令及控制器
AngularJS模块
创建自定义控制器
数组的操作与显示
更多指令
ng—repeat的应用
小结
第3章AngularJS中的单元测试
单元测试的定义及作用
Karma简介
Jasmine：定义式测试
控制器的单元测试
运行单元测试
小结
第4章表单、输入和服务
ng—model的使用
表单的使用
使用数据绑定和模型
表单状态及验证
表单的错误处理
ng—form与内嵌表单
其他表单控件
小结
第5章AngularJS服务揭秘
AngularJS服务
创建自定义AngularJS服务
小结
第6章$http与服务器通信
在$http中使用GET方式获取数据
$http进阶应用
小结
第7章服务及XHR的单元测试
单元测试中的依赖注入
单元测试中的服务器请求
小结
第8章与过滤器共舞
AngularJS过滤器介绍
创建AngularJS自定义过滤器
过滤器中的要点
小结
第9章过滤器的单元测试
需要测试的过滤器
测试timeAgo过滤器
小结
第10章ngRoute与页面迁移
在单页面应用中进行页面迁移
使用ngRoute
迁移配置选项
其他配置
备选方案：ui—router
小结
第11章指令
什么是指令？
自定义指令
基本的解决之道
小结
第12章指令的单元测试
测试指令的步骤
Stock Widget指令
构建自定义指令的单元测试
其他考虑
小结
第13章进阶指令
AngularJS中的生命周期
指令控制器及require选项
编译
Priority（优先级）和Terminal（终止）
第三方指令集成
推荐做法
小结
第14章端对端测试
选择Protractor的理由
初始化设置
Protractor配置
端对端测试
我们的顾虑
小结
第15章指导方针和推荐做法
测试
项目结构
构建
推荐做法
工具和库
小结
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>AngularJS即学即用
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaWeb2.0项目开发实战
第一部分　使用Ajax和Java编程
第1章　Ajax：勇闯新世界 2
1.1　Web开发简史：“经典”模型 2
1.2　经典Web的问题 7
1.3　走进Ajax 9
1.4　为什么说Ajax是一场革命？通向RIA之路 13
1.5　第一个Ajax示例 15
1.6　Ajax工具包的选择 22
1.7　Ajax的替代方法 22
1.8　小结 25
第2章　Ajax的支柱 27
2.1　JavaScript基础 27
2.1.1　变量、作用域和函数 29
2.1.2　关键字 31
2.1.3　空白 32
2.1.4　分号 32
2.1.5　注释 33
2.1.6　字面量、数组和对象初始化程序 33
2.1.7　数据类型 34
2.1.8　匿名函数 39
2.1.9　内存管理 40
2.2　面向对象的JavaScript 40
2.3　DOM和脚本编程：在运行中操纵内容 46
2.4　XML：描述语言的语言 51
2.5　在JavaScript中解析XML 53
2.6　CSS 60
2.7　小结 68
第3章　服务器端 69
3.1　项目开发环境 69
3.2　Ant：以开源的方式构建Java应用程序 70
3.3　Apache Tomcat 77
3.4　Web应用、servlet、JSP和在服务器上解析XML 80
3.4.1　Web应用 80
3.4.2　servlet 85
3.4.3　JSP 87
3.4.4　在服务器上解析XML 89
3.5　安装和使用应用程序 93
3.6　小结 94
第二部分　开发项目
第4章　Karnak：输入前提示 96
4.1　需求和目标 96
4.2　如何实现 97
4.3　最终呈现 102
4.4　研究解决方案 103
4.4.1　客户端代码 104
4.4.2　服务器端代码 113
4.5　推荐练习 120
4.6　小结 121
第5章　InstaMail：基于Ajax的webmail客户端 122
5.1　需求和目标 122
5.2　如何实现 123
5.3　最终呈现 126
5.4　研究解决方案 129
5.4.1　客户端代码 131
5.4.2　服务器端代码 152
5.5　推荐练习 174
5.6　小结 175
第6章　AjaxReader：Ajax图书必备内容 176
6.1　需求和目标 176
6.2　如何实现 177
6.3　最终呈现 179
6.4　研究解决方案 182
6.4.1　客户端代码 183
6.4.2　服务器端代码 201
6.5　推荐练习 219
6.6　小结 219
第7章　PhotoShare：分享图片 220
7.1　需求和目标 220
7.2　如何实现 221
7.3　最终呈现 225
7.4　研究解决方案 228
7.4.1　客户端代码 229
7.4.2　服务器端代码 258
7.5　推荐练习 272
7.6　小结 273
第8章　Organizer：管理个人信息 274
8.1　需求与目标 274
8.2　如何实现 275
8.2.1　Prototype 276
8.2.2　WebWork 277
8.2.3　HSQLDB 280
8.2.4　Spring JDBC 280
8.3　最终呈现 281
8.4　研究解决方案 284
8.4.1　客户端代码 286
8.4.2　服务器端代码 299
8.5　推荐练习 310
8.6　小结 310
第9章　AjaxChat：以Ajax方式聊天 311
9.1　需求和目标 311
9.2　如何实现 312
9.3　最终呈现 322
9.4　研究解决方案 324
9.4.1　客户端代码 326
9.4.2　服务器端代码 339
9.5　推荐练习 359
9.6　小结 360
第10章　AJAX勇士游戏：回到未来 361
10.1　需求和目标 361
10.2　如何实现 362
10.2.1　多用途的函数和集中式Ajax 362
10.2.2　JSON 365
10.3　最终呈现 367
10.4　研究解决方案 370
10.4.1　客户端代码 373
10.4.2　服务器端代码 396
10.5　推荐练习 423
10.6　小结 424
附录A　XMLHttpRequest对象 425
附录B　库、网站和图书 429
……
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaWeb2.0项目开发实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5基础知识、核心技术与前沿案例
第一部分 HTML5基础
第1章 初探HTML5：制作一份邀请函 010
1．1 开发前的准备工作 010
1．1．1 制定首个学习目标 010
1．1．2 准备开发环境 011
1．2 制作HTML页面 012
1．2．1 创建首个HTML5页面 012
1．2．2 增加必要的页面元素 014
1．2．3 页面中那些看不见的代码 015
1．3 页面的美化 015
1．3．1 制作邀请函的页面背景 015
1．3．2 调整邀请函的内容区域位置 018
1．3．3 调整邀请函的文字字体与字号 020
1．3．4 制作邀请函的按钮 021
1．3．5 创建一个外部CSS文件 022
1．4 为页面创建交互 024
1．4．1 创建按钮的JavaScript交互 024
1．4．2 制作还未结束：页面的移动化 026
第2章 HTML5新手详解 028
2．1 HTML代码基础 028
2．1．1 HTML基础语法 028
2．1．2 页面根元素 029
2．1．3 文档元数据 031
2．1．4 区块元素 034
2．1．5 分组内容元素 039
2．2 HTML常用元素 042
2．2．1 文本 042
2．2．2 表单 043
2．2．3 表格 047
2．2．4 WAI-ARIA 050
第3章 CSS3新手详解 052
3．1 CSS代码基础 052
3．1．1 CSS基础语法 052
3．1．2 继承 054
3．1．3 选择器 057
3．2 CSS3常用属性 059
3．2．1 文本和字体 059
3．2．2 边框与背景 062
3．2．3元素定位 065
3．2．4 框模型 068
3．2．5 列表 071
3．3 CSS3常用效果与技巧 075
3．3．1 阴影效果 075
3．3．2 2D与3D效果 077
3．3．3 优先级 078
第4章 JavaScript新手详解 080
4．1 JavaScript代码基础 080
4．1．1 如何调试JavaScript？ 080
4．1．2 为代码添加注释 081
4．1．3 创建一个简单的变量 082
4．1．4 几种常用的JavaScript运算符 083
4．1．5 JavaScript中的条件语句 085
4．1．6 JavaScript中的循环语句 087
4．2 JavaScript编程进阶 089
4．2．1 数组及其操作 089
4．2．2 日期和时间 091
4．2．3 初涉函数 092
4．2．4 函数的变量作用域 094
4．2．5 Object简介 095
4．2．6 JavaScript的DOM操作 097
4．2．7 DOM事件处理 100
4．2．8 利用JavaScript实现HTML5拖放 101
第5章 移动端HTML5开发详解 103
5．1 桌面端开发概述 103
5．1．1 桌面端和移动端有何不同？ 103
5．1．2 响应式设计还是移动版网站？ 104
5．2 移动端开发技巧 105
5．2．1 Viewport设置 105
5．2．2 百分比布局 106
5．2．3 Flexbox：轻松实现弹性布局 111
5．2．4 Media Query 114
5．2．5 雪碧图 116
5．2．6 图标字体 119
5．2．7 移动端交互 121
5．2．8 移动端调试 122
5．2．9 移动端其他技巧 124
第6章 事半功倍：运用流行开源类库 126
6．1 开源类库jQuery介绍 126
6．1．1 强大的jQuery 126
6．1．2 jQuery选择器 128
6．1．3 jQuery的属性和DOM操作 130
6．1．4 jQuery动态效果 132
6．1．5 jQuery事件 134
6．1．6 jQuery的优缺点 136
6．2 其他开源类库介绍 136
6．2．1 使用jQuery Mobile开发移动站点 136
6．2．2 Zepto——移动端的jQuery 137
6．2．3 前端开发框架BootStrap 138
6．2．4 设计工具包Flat UI 139
6．2．5 浏览器检测工具Modernizr 140
6．2．6 数据可视化工具D3 141
6．2．7 使用Hammer轻松控制触摸手势 141
6．2．8 前端在线编辑工具 142
第7章 HTML5与周边编程语言、软件 143
7．1 HTML5与Flash 143
7．1．1 HTML5与Flash的结合 143
7．1．2 使用Google Swiffy进行Flash转换 145
7．2 HTML5与其他周边语言和软件 146
7．2．1 HTML5与应用开发 146
7．2．2 HTML5与Illustrator的结合 148
7．2．3 HTML5与Photoshop的结合 149
7．2．4 HTML5开发桌面端应用 151
第二部分?HTML5前沿经典应用篇
第8章 HTML5页面元素与布局 153
8．1 页面元素与布局核心技巧 153
8．2 HTML5布局基础 153
8．2．1 图文混排与题图文字布局 154
8．2．2 Hero Unit图标题文混排 156
8．2．3 两列均分布局 159
8．2．4 格子布局 164
8．2．5 多列等高布局 168
8．3 HTML5布局进阶 170
8．3．1 两列自适应布局 171
8．3．2 三列自适应布局 175
8．3．3 瀑布流布局 179
第9章 HTML5动画与动效 182
9．1 动画与动效核心技巧 182
9．2 CSS3动画与动效 182
9．2．1 按钮元素动画效果 183
9．2．2 图标元素动画效果 186
9．2．3 页面切换动画效果 192
9．2．4 加载动画效果 198
9．2．5 逐帧动画效果 204
9．2．6 3D翻页动画效果 208
9．3 JavaScript动画与动效 211
9．3．1 Canvas粒子动画效果 211
9．3．2 GSAP类库动画效果 214
第10章 HTML5图形与图像 217
10．1 图形与图像核心技巧 217
10．2 CSS3图形与图像绘制 218
10．2．1 关闭按钮绘制 218
10．2．2 菜单图标绘制 219
10．2．3 三角图标绘制 221
10．2．4 渐变色绘制 225
10．2．5 Pattern图案绘制 227
10．2．6 锯齿图形绘制 229
10．3 Canvas图形与图像绘制 231
10．3．1 Canvas图形绘制 231
10．3．2 Canvas像素控制 235
10．4 SVG图形与图像绘制 237
10．4．1 SVG图形绘制 237
10．4．2 SVG图像遮罩 242
第11章 HTML5交互操作 244
11．1 交互操作核心技巧 244
11．2 滚动类交互 244
11．2．1 页面固定背景 244
11．2．2 选区控制 246
11．2．3 局部滚动 248
11．2．4 滚动监听 252
11．2．5 视差滚动 256
11．2．6 滚动触发动画 261
11．3 键盘和鼠标类交互 267
11．3．1 滑块拖动 267
11．3．2 Canvas键盘操作 271
11．4 移动端交互 274
11．4．1 触摸操作 274
11．4．2 运动与重力感应 276
11．5 其他交互操作 279
11．5．1 本地数据文件加载 279
11．5．2 本地文件操作 281
11．5．3 Geolocation操作 284
11．5．4 localStorage操作 287
第12章 HTML5页面组件 290
12．1 页面组件开发核心技巧 290
12．2 图层类页面组件 290
12．2．1 悬浮图层 290
12．2．2 弹出图层 293
12．3 区域类页面组件 297
12．3．1 Tab切换 297
12．3．2 折叠区域 300
12．4 导航类页面组件 303
12．4．1 下拉菜单 303
12．4．2 顶部固定菜单 306
12．4．3 滑动导航 308
12．5 其他页面组件 311
12．5．1 时间轴 311
12．5．2 图像轮播 313
12．5．3 日历组件 317
第13章 HTML5音频与视频 322
13．1 音频、视频核心开发技巧 322
13．2 音频类开发 322
13．2．1 音频播放 322
13．2．2 麦克风操作 327
13．3 视频类开发 330
13．3．1 视频播放 330
13．3．2 视频背景 331
13．3．3 摄像头操作 333
第14章 HTML5响应式设计 336
14．1 响应式设计核心技巧 336
14．2 响应式设计案例 338
14．2．1 响应式列表 338
14．2．2 响应式内容图片 341
14．2．3 响应式背景 343
14．2．4 响应式图像轮播 346
14．2．5 响应式菜单 347
第三部分?HTML5综合案例篇
第15章 HTML5微信游戏 354
15．1 制作思路 354
15．1．1 微信游戏开发基础知识 354
15．1．2 微信“520”小游戏策划 355
15．2 基础页面的开发 356
15．2．1 游戏界面设计 356
15．2．2 创建HTML页面 357
15．2．3 创建CSS样式 359
15．3 交互界面的开发 364
15．3．1 制作loading界面交互 364
15．3．2 制作初始界面交互 364
15．3．3 制作音乐控制器 366
15．3．4 获取点阵坐标 367
15．3．5 制作交互界面 368
15．3．6 制作结果界面 371
15．4 尾声 371
第16章 HTML5创意网站 379
16．1 制作思路与基础页面开发 379
16．1．1 站点规划与设计 379
16．1．2 创建站点DOM结构 380
16．2 页面的美化和交互功能创建 382
16．2．1 创建首页样式 382
16．2．2 创建次级页面样式 385
16．2．3 页面切换效果 389
16．3 页面细节处理 391
16．3．1 制作作品集内容页面 391
16．3．2 兼容性提示 394
16．4 小结 395
后记：Web设计变迁及经验谈 403
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML5基础知识、核心技术与前沿案例
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>代码逆袭 超实用的Node.js代码段
第1章  Node.js控制台模块应用	1
1.1　Node.js版之“Hello World”程序	1
1.2  日志输出与信息输出功能	3
1.3  字符串格式化的应用	5
1.4  数值型格式化的应用	6
1.5  JSON数据交换格式应用	7
1.6  测试特殊运算符如何取值	8
1.7  特殊格式化参数应用	9
1.8  斐波那契（Fibonacci）数列应用	10
1.9  错误与警告提示应用	11
1.10  重定向标准错误输出流	12
1.11  查看Node.js对象的属性和方法	13
1.12  时间计时器应用	14
1.13  查看当前调用栈的方法	16
1.14  对表达式结果进行评估	17
1.15  读取命令行输入信息	18
1.16  阶乘运算输出	20
1.17  向控制台输出组合控制键	22
1.18  模拟一个简单的控制台界面	23
1.19  输出水仙花数	26
1.20  输出质数	27
1.21  打印输出杨辉三角	28
1.22  汉诺塔（Hanoi）问题	30
1.23  简单四则运算应用	33
第2章  Node.js模块与包管理	36
2.1  Node.js框架加载核心模块	36
2.2  Node.js框架加载文件模块	37
2.3  从node_modules文件夹中加载	39
2.4  模块的循环调用问题	40
2.5  module.exports对象应用	42
2.6  module.exports对象与exports对象	43
2.7  汇率换算实用程序	45
2.8  简单计数器实用程序	46
2.9  包管理之package.json详解	49
2.10  基于包管理的四则运算应用	52
第3章　Node.js异步I/O与Async流程控制库	58
3.1  Node.js框架异步机制基础	58
3.2  Node.js框架异常捕获机制	60
3.3  Async串行流程控制	62
3.4  Async瀑布模式流程控制	64
3.5  Async并行流程控制	66
3.6  Async限制性并行流程控制	67
3.7  Async循环流程控制	69
3.8  Async队列流程控制	72
第4章  Buffer模块处理	75
4.1  定义Buffer对象的基本方法	75
4.2  定义Buffer对象的特别方法	77
4.3  如何判断Buffer对象	79
4.4  获取Buffer对象字节长度	80
4.5  读取Buffer对象	82
4.6  写入Buffer对象	84
4.7  Buffer对象转字符串	86
4.8  Buffer对象裁剪	88
4.9  拷贝Buffer对象	89
4.10  正确拼接Buffer	91
4.11  应用Buffer操作HTTP Request Header	93
第5章  Node.js进程管理	98
5.1  获取应用程序当前目录	98
5.2  改变应用程序目录	99
5.3  获取系统相关信息	100
5.4  实现标准输出流	105
5.5  实现标准错误流	107
5.6  实现标准输入流	108
5.7  Kill当前进程	109
5.8  Process模块的异步方法	111
第6章  child_process及进程通信	113
6.1  使用spawn方法创建子进程	113
6.2  使用exec方法创建子进程	115
6.3  使用spawn方法绑定系统事件	117
6.4  使用exec方法绑定错误事件	118
6.5  创建子进程查看用户目录	120
6.6  查看用户目录出现错误的处理方法	122
6.7  查看物理内存使用状态	123
6.8  查看子进程pid的方法	125
6.9  创建子进程统计系统登录次数	127
6.10  使用execFile方法创建子进程	128
6.11  使用execFile方法绑定错误事件	130
6.12  使用fork方法获取CPU信息	131
6.13  使用fork方法实现进程间通信	132
6.14  使用fork方法实现斐波那契数列	134
第7章  OS模块应用	138
7.1  获取当前操作系统类型与平台	138
7.2  获取操作系统默认的临时文件目录	139
7.3  获取操作系统主机名	140
7.4  获取操作系统架构	141
7.5  获取操作系统的发行版本	142
7.6  返回操作系统运行时间	143
7.7  获取操作系统内存状态	145
7.8  获取CPU内核信息	146
7.9  获取网络接口信息	147
第8章  文件系统模块应用	149
8.1  重命名文件	149
8.2  打开与关闭文件	152
8.3  截取文件内容	155
8.4  修改文件长度	156
8.5  获取文件信息	158
8.6  更改文件所有权	159
8.7  更改文件权限	161
8.8  创建与删除文件硬链接	163
8.9  创建文件符号链接	165
8.10  读取文件符号链接	168
8.11  相对路径转绝对路径	169
8.12  创建与删除目录	170
8.13  读取文件目录	172
8.14  读文件的应用	173
8.15  功能增强的读文件应用	175
8.16  写文件的应用	176
8.17  功能增强的写文件应用	178
8.18  追加写入文件	180
8.19  监控文件的应用	182
第9章  路径处理应用	185
9.1  规范化字符串路径	185
9.2  合并字符串路径	187
9.3  解析绝对路径	188
9.4  解析相对路径	189
9.5  获取文件夹路径	191
9.6  获取路径中文件扩展名	192
9.7  如何获取路径中最后部分	193
9.8  解析与格式化url路径	194
9.9  url路径转化	196
9.10  url参数转化url对象	197
第10章  TCP/UDP网络应用	199
10.1  创建基本的TCP服务器	199
10.2  创建基本的TCP客户端	201
10.3  创建简单的TCP通信应用	202
10.4  创建TCP服务器的另一种方式	206
10.5  服务器端绑定事件	207
10.6  获取服务器地址参数	210
10.7  获取当前服务器连接数	211
10.8  获取套接字地址	215
10.9  获取远程地址	216
10.10  使用套接字写数据	218
10.11  控制套接字数据流的应用	221
10.12  创建UDP服务器	225
10.13  创建UDP客户端	227
10.14  创建简单的UDP应用	229
10.15  UDP广播服务的实现	233
10.16  模仿简单的聊天室应用	236
第11章　Node.js流（Stream）应用	241
11.1  创建可读（Readable）流	241
11.2  测试可读readable事件处理	244
11.3  使用data事件读取文件	246
11.4  可读流错误事件处理	247
11.5  暂停与恢复可读（Readable）流	248
11.6  使用可读（Readable）流发送数据	251
11.7  使用可读（Readable）流读取文件	252
11.8  使用pipe方法实现复制文件	253
11.9  解除pipe方法设置的流	255
11.10  使用可写（Writable）流写文件	257
11.11  可写（Writable）流drain事件处理	258
11.12  可写（Writable）流finish事件处理	260
第12章  Node.js Web开发	263
12.1  构建一个基本的HTTP服务器	263
12.2  编写一个简单的HTTP客户端	265
12.3  HTTP响应状态码	268
12.4  设定和获取HTTP头文件	271
12.5  写HTTP头文件的方法	273
12.6  发送与处理GET请求	276
12.7  进行重定向操作	278
12.8  服务器多路径处理方式	281
12.9  模拟ping命令连接服务器	284
12.10  安装Express开发框架	286
12.11  使用Express开发框架开发的Hello World	287
12.12  Express开发框架路由处理	292
12.13  应用Express框架实现登录页面	296
12.14  Express框架实现Ajax方式操作	301
第13章  Node.js Util常用工具	306
13.1  原型对象继承	306
13.2  将任意对象转换为字符串	308
13.3  验证是否为数组	310
13.4  验证是否为日期格式	310
13.5  验证是否为正则表达式	311
13.6  验证是否为错误类型	312
13.7  格式化字符串	313
第14章  Node.js与MySQL交互	315
14.1  连接MySQL数据库	315
14.2  查询MySQL数据库	317
14.3  插入MySQL数据库	318
14.4  删除MySQL数据库	320
14.5  更新MySQL数据库	321
14.6  操作MySQL数据库连接池	322
第15章　Node.js与MongoDB交互	325
15.1  连接MongoDB数据库	326
15.2  连接MongoDB数据集合	328
15.3  查询MongoDB数据集合	330
15.4  插入MongoDB数据集合	333
15.5  删除MongoDB数据集合	335
15.6  更新MongoDB数据集合	336
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>代码逆袭 超实用的Node.js代码段
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Serverless架构：无服务器单页应用开发
第1 章 从简单开始  1
无服Web 应用 2
-- 无服设计的好处  4
-- 无服设计的限制  6
使用自己的工作空间  8
-- 本地执行  12
-- 创建着陆页  13
部署到Amazon S3 15
-- 搭建AWS 命令行接口  16
-- 创建一个带访问密钥的AWS 用户  17
首次部署  20
-- 下一步 21
第2 章 基于hash 事件的视图路由  23
设计可测试的路由器  24
-- 运行Jasmine 测试  25
-- 编写第一个测试用例 26
路由函数  29
-- 创建命名空间 29
-- 添加路由函数 30
-- 创建视图容器 32
添加路由  34
添加视图参数  37
-- 用spy 测试调用 37
-- 处理视图函数中的参数  39
-- 加载应用  41
-- 响应事件  42
-- 响应hash 事件  44
再次部署  46
-- 下一步 46
第3 章 单页应用的必要组件 49
创建视图  50
定义数据模型  53
-- 数据绑定  55
-- 优化数据模型 58
处理用户输入  60
-- 有效地使用视觉反馈 64
-- 控制导航  66
创建一个应用外壳 68
-- 提取着陆页  68
-- 添加工具条  69
使用自定义事件  72
再次部署  75
-- 下一步 75
第4 章 基于Amazon Cognito 的认证服务 77
接入外部身份认证服务商 78
创建身份池 82
-- 身份池配置  83
-- IAM 角色和策略  84
获取Google 身份. 87
请求AWS 证书 90
-- 刷新令牌  91
-- 基于Deferred 对象和Promise 的认证请求  93
-- 创建一个身份Deferred 对象 95
创建个人主页视图 96
再次部署  98
-- 下一步 99
第5 章 使用DynamoDB 存储数据 101
使用DynamoDB  102
-- 理解DynamoDB 的键和哈希 102
-- DynamoDB 用作文档数据库  103
-- 强一致性和最终一致性 105
创建表 106
-- 属性和键值  108
-- 预设吞吐量  109
-- 二级索引与查询 vs 扫描 110
授权访问DynamoDB 111
保存文档  113
-- 一个fail-safe 的数据访问函数  114
-- 创建和保存一个item  115
读取文档  117
数据访问和验证  119
重新部署  122
-- 下一步  122
第6 章 使用Lambda 构建微服务  125
理解Amazon Lambda 126
-- Lambda 环境 126
-- Lambda 的局限  128
-- 内存、时间和费用  129
先部署 130
-- 配置一个Lambda 函数  131
-- 创建代码包  133
-- 通过AWS 控制台测试函数 134
-- 创建一个新的Lambda 配置  135
-- 往Lambda 执行角色上添加策略 136
编写Lambda 函数  138
-- 规避微服务架构问题  138
-- 添加服务依赖  140
-- 构建可测试的服务  141
-- 查询、分组和分页  143
调用Lambda 函数  145
使用Amazon API 网关  146
重新部署  148
-- 下一步  148
第7 章 无服应用的安全  151
保护你的AWS 账号  152
-- 禁用所有root 访问密钥 152
-- 管理用户配置  152
-- 保护AWS 证书  153
-- 设置多重身份认证  154
查询注入攻击 154
跨站脚本攻击 156
-- XSS 注入方法  156
-- 使用web worker 沙盒化JavaScript 157
跨站请求伪造 159
-- 不用Javascript 实现XSRF  160
-- 跨站请求和同源策略  161
线路攻击和传输层安全  162
-- Sidejacking 攻击 162
-- 高效使用HTTPS  163
拒绝服务攻击 165
-- 用CloudFront 保护S3 165
-- 可扩展服务和用户身份 166
重新部署  167
-- 下一步  167
第8 章 扩容  169
监控Web 服务  169
-- 监控容量限制  170
-- 创建付款警告  173
分析S3 的流量  174
-- 记录S3 请求 174
-- 分析S3 日志 177
-- 响应代码频率  179
-- 热门资源 180
-- 每日用量 181
优化应用，实现增长 182
-- 通过缓存降低成本和加载时间 183
-- 通过带版本号的文件名清除缓存  186
云的成本  187
-- 加载成本 188
-- 数据成本 188
-- 微服务成本  189
-- 加起来  190
再次部署  192
-- 下一步 192
附录A 安装Node.js  195
安装Node.js 运行时  195
-- Linux  195
-- OS X  196
-- Windows  196
管理多个Node.js 版本  197
附录B 分配一个域名 199
参考书目 201
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Serverless架构：无服务器单页应用开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>React快速上手开发
译者序　　xiii
前言　　xv
第1章　Hello World　　1
1.1　设置　　1
1.2　Hello React World　　2
1.3　刚才发生了什么　　4
1.4　React.DOM.*　　4
1.5　特殊DOM属性　　7
1.6　React DevTools浏览器扩展　　8
1.7　下一步：自定义组件　　9
第2章　组件的生命周期　　10
2.1　基础　　10
2.2 　属性　　12
2.3　propTypes　　13
2.4　state　　16
2.5　带状态的文本框组件　　16
2.6　关于DOM事件的说明　　19
2.6.1　传统的事件处理　　20
2.6.2　React的事件处理　　21
2.7　props与state　　21
2.8　在初始化state时使用props：一种反模式　　22
2.9　从外部访问组件　　22
2.10　中途改变属性　　24
2.11　生命周期方法　　25
2.12　生命周期示例：输出日志记录　　26
2.13　生命周期示例：使用mixin　　28
2.14　生命周期示例：使用子组件　　30
2.15　性能优化：避免组件更新　　32
2.16　PureRenderMixin　　34
第3章　Excel：一个出色的表格组件　　37
3.1　构造数据　　37
3.2　表头循环　　38
3.3　消除控制台的警告信息　　40
3.4　添加<td>内容　　41
3.5　排序　　44
3.6　排序的视觉提示　　46
3.7　编辑数据　　47
3.7.1　可编辑单元格　　48
3.7.2　输入字段的单元格　　50
3.7.3　保存　　50
3.7.4　结论与虚拟DOM Diff算法　　51
3.8　搜索　　52
3.8.1　状态与界面　　54
3.8.2　筛选内容　　55
3.8.3　如何改进搜索功能　　57
3.9　即时回放　　58
3.9.1　如何改进回放功能　　59
3.9.2　有另一种实现方法吗　　59
3.10　下载表格数据　　59
第4章　JSX　　62
4.1　Hello JSX　　62
4.2　转译JSX　　63
4.3　Babel　　64
4.4　客户端　　64
4.5　关于JSX转换　　66
4.6　在JSX中使用JavaScript　　68
4.7　在JSX中使用空格　　69
4.8　在JSX中使用注释　　70
4.9　HTML实体　　71
4.10　展开属性　　73
4.11　在JSX中返回多个节点　　75
4.12　JSX和HTML的区别　　77
4.12.1　class和for属性不能用了吗　　77
4.12.2　style属性值是一个对象　　77
4.12.3　闭合标签　　78
4.12.4　用驼峰法命名属性　　78
4.13　JSX 和表单　　78
4.13.1　onChange处理器　　78
4.13.2　value和defaultValue的区别　　79
4.13.3　<textarea>的值　　79
4.13.4　<select>的值　　80
4.14　使用JSX实现Excel组件　　82
第5章　为应用开发做准备　　83
5.1　一个模板应用　　83
5.1.1　文件和目录　　84
5.1.2　index.html　　85
5.1.3　CSS　　86
5.1.4　JavaScript　　86
5.1.5　更现代化的JavaScript　　86
5.2　安装必备工具　　89
5.2.1　Node.js　　90
5.2.2　Browserify　　90
5.2.3　Babel　　90
5.2.4　React相关　　91
5.3　开始构建　　91
5.3.1　转译JavaScript　　91
5.3.2　打包JavaScript　　92
5.3.3　打包CSS　　92
5.3.4　大功告成　　92
5.3.5　Windows版本　　93
5.3.6　在开发过程中构建　　93
5.4　发布　　94
5.5　更进一步　　95
第6章　构建应用　　96
6.1　Whinepad v. 0.0.1　　96
6.1.1 　基本设置　　97
6.1.2 　开始编写代码　　97
6.2　组件　　99
6.2.1　设置　　99
6.2.2　组件发现工具　　100
6.2.3　<Button>组件　　101
6.2.4　Button.css　　102
6.2.5　Button.js　　103
6.2.6　表单　　106
6.2.7　<Suggest>　　106
6.2.8　<Rating>组件　　109
6.2.9　<FormInput>“工厂组件”　　112
6.2.10　<Form>　　115
6.2.11　<Actions>　　117
6.2.12　对话框　　119
6.3　应用配置　　121
6.4　<Excel>：改进的新版本　　123
6.5　<Whinepad>　　131
6.6　总结　　134
第7章　lint、Flow、测试与复验　　136
7.1　package.json　　136
7.1.1　配置Babel　　137
7.1.2　脚本　　137
7.2　ESLint138
7.2.1　安装　　138
7.2.2　运行　　138
7.2.3　规则列表　　140
7.3　Flow　　140
7.3.1　安装　　141
7.3.2　运行　　141
7.3.3　注册类型检查　　141
7.3.4　修复<Button>　　142
7.3.5　app.js　　144
7.3.6　关于props和state类型检查的更多内容145
7.3.7　导出/导入类型　　147
7.3.8　类型转换　　148
7.3.9　invariant　　148
7.4　测试　　150
7.4.1　安装　　150
7.4.2　首个测试　　151
7.4.3　首个React测试　　152
7.4.4　测试<Button>组件　　153
7.4.5　测试<Actions>组件　　157
7.4.6　更多模拟交互　　159
7.4.7　测试完整的交互　　160
7.4.8　代码覆盖率　　163
第8章　Flux　　165
8.1　理念　　166
8.2　回顾Whinepad　　166
8.3　Store　　167
8.3.1　Store事件　　169
8.3.2　在<Whinepad>中使用Store　　170
8.3.3　在<Excel>中使用Store　　173
8.3.4　在<Form>中使用Store　　174
8.3.5　界定　　174
8.4　Action　　175
8.4.1　CRUD Action　　175
8.4.2　搜索与排序　　176
8.4.3　在<Whinepad>中使用Action　　178
8.4.4　在<Excel>中使用Action　　179
8.5　Flux回顾181
8.6　immutable　　182
8.6.1　immutable存储数据　　183
8.6.2　immutable数据操作　　184
关于作者　　187
关于封面　　187

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>React快速上手开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node应用程序构建
目　录
第一部分　Node．js、Backbone．js和MongoDB简介
第1章　介绍与总览　2
1．1　打造一个社交网络　3
1．2　模型-视图-控制器(MVC)　3
1．3　纯JavaScript　4
第2章　Node．js　5
2．1　安装Node．js　5
2．2　Express　6
模板　8
2．3　事件　10
2．4　Socket．io　12
2．5　模块与CommonJS　14
第3章　Backbone．js　16
3．1　模型　16
3．2　视图　17
3．3　集合　20
3．4　路由和历史　21
第4章　MongoDB　23
4．1　数据访问　23
4．1．1　写入　24
4．1．2　查询　27
4．1．3　索引　28
4．1．4　映射规约　29
4．2　携手Node．js　31
4．3　并发访问　31
第二部分　建立社交网络
第5章　创建项目　36
5．1　目录结构　36
文件列表　37
5．2　包定义　38
5．3　网站服务器　39
5．3．1　索引模板　41
5．3．2　应用程序JavaScript　42
5．3．3　应用程序类　43
5．3．4　索引视图对象　43
第6章　认证　45
6．1　账户　45
6．2　路由　48
6．2．1　身份验证　49
6．2．2　身份验证处理程序　50
6．3　注册　51
6．3．1　注册模版　51
6．3．2　注册处理程序　53
6．4　登录　54
6．4．1　登录模板　54
6．4．2　登录处理程序　56
6．5　忘记口令　57
6．5．1　忘记口令模板　57
6．5．2　忘记口令处理程序　58
6．6　重置口令　60
6．6．1　重置口令模板　60
6．6．2　重置口令处理函数　61
6．7　整合　62
Node．js　62
第7章　用户界面　65
7．1　账户明细　65
7．1．1　账户明细模板　66
7．1．2　账户明细处理程序　67
7．2　联系人列表　68
7．3　活动流　69
7．3．1　活动流模板　69
7．3．2　活动流处理程序　72
7．4　数据模型　73
7．5　整合　76
7．5．1　Backbone　76
7．5．2　Node．js　78
第8章　交朋友　82
8．1　联系人列表　82
8．1．1　联系人列表模板　82
8．1．2　联系人列表处理程序　86
8．2　添加联系人　87
8．2．1　添加联系人模板　87
8．2．2　添加联系人处理程序　89
8．3　删除联系人　91
8．3．1　删除联系人模板　91
8．3．2　删除联系人处理程序　92
8．4　评论　93
8．4．1　评论模板　94
8．4．2　评论处理程序　96
8．5　整合　97
8．5．1　Backbone　97
8．5．2　Node．js　99
第9章　聊天　109
9．1　重构　109
9．2　连接到聊天服务器　110
9．2．1　Backbone　111
9．2．2　Node．js　113
9．3　发送和接收聊天消息　114
9．3．1　Backbone　116
9．3．2　Node．js　121
9．4　整合　121
9．4．1　Backbone　121
9．4．2　Node．js　125
第10章　实时互动　134
10．1　增加自定义事件　134
10．1．1　触发事件　135
10．1．2　添加监听器　135
10．2　联系人登录通知　137
10．2．1　Backbone．js　137
10．2．2　Node．js　139
10．3　状态更新　141
10．3．1　Backbone．js　141
10．3．2　Node．js　143
10．4　整合　144
10．4．1　Backbone．js　144
10．4．2　Node．js　155
10．4．3　静态文件　166
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node应用程序构建
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>React导学
目录
第1章 什么是React 1
1.1 定义React 1
1.2 为什么是React 2
1.3 React解决什么问题 4
1.4 React不只是另一个框架 5
1.4.1 Ember.js 7
1.4.2 AngularJS 10
1.4.3 React 14
1.5 React的概念和术语 23
1.5.1 React入门 23
1.5.2 组件 24
1.5.3 虚拟DOM 25
1.5.4 JSX 26
1.5.5 属性 27
1.5.6 状态 27
1.5.7 Flux 27
1.5.8 工具 28
1.5.9 附件 28
1.6 小结 30
第2章 React核心 31
2.1 React 31
2.1.1 React.createClass 32
2.1.2 React.Children.map 33
2.1.3 React.Children.forEach 34
2.1.4 React.Children.count 35
2.1.5 React.Children.only 36
2.1.6 React.createElement 37
2.1.7 React.cloneElement 38
2.1.8 React.DOM 38
2.1.9 React.createFactory 39
2.1.10 React.render 39
2.1.11 React.renderToString 40
2.1.12 React.findDOMNode 40
2.2 探索React组件 41
2.3 理解组件的属性和方法 43
2.4 组件的生命周期和渲染 45
2.4.1 render 46
2.4.2 getInitialState 46
2.4.3 getDefaultProps 46
2.4.4 mixins 47
2.4.5 propTypes 49
2.4.6 statics 51
2.4.7 displayName 51
2.4.8 componentWillMount 51
2.4.9 componentDidMount 51
2.4.10 componentWillReceiveProps 52
2.4.11 shouldComponentUpdate 52
2.4.12 componentWillUpdate 52
2.4.13 componentDidUpdate 53
2.4.14 componentWillUnmount 53
2.5 React元素 57
2.6 React工厂 59
2.7 小结 60
第3章 JSX原理 61
3.1 为什么使用JSX而不用常规的JavaScript 61
3.2 JSX转换器 64
3.3 JSX如何将类XML句法转换为可用的JavaScript 67
3.4 展开属性及其他JSX相关 78
3.5 小结 92
第4章 构建React网页应用程序 93
4.1 概述你的应用程序的基础功能 93
4.2 组件思维 94
4.2.1 线框图 95
4.2.2 重写现有应用程序 98
4.3 为你的应用创建必需的组件 101
4.4 测试你的应用程序 111
4.4.1 Simulate 111
4.4.2 renderIntoDocument 112
4.4.3 mockComponent 112
4.4.4 isElement 112
4.4.5 isElementOfType 112
4.4.6 isDOMComponent 112
4.4.7 isCompositeComponent 113
4.4.8 isCompositeComponentWithType 113
4.4.9 findAllInRenderedTree 113
4.4.10 scryRenderedDOMComponentsWithClass 113
4.4.11 findRenderedDOMComponentsWithClass 113
4.4.12 scryRenderedDOMComponentsWithTag 114
4.4.13 findRenderedDOMComponentsWithTag 114
4.4.14 scryRenderedComponentsWithType 114
4.4.15 findRenderedComponentsWithType 114
4.5 运行你的应用程序 116
4.6 小结 120
第5章 介绍React的应用程序架构 121
5.1 Flux是什么以及为什么它和经典MVC框架不同 121
5.2 Flux基础组件 125
5.2.1 分派器 126
5.2.2 存储仓 126
5.2.3 行为 126
5.2.4 视图 127
5.2.5 如何集成React和Flux 127
5.3 小结 150
第6章 使用Flux构建React应用程序 151
6.1 构建你的应用程序 151
6.2 创建应用程序的分派器、存储仓、行为以及React组件 152
6.2.1 分派器 153
6.2.2 存储仓 153
6.2.3 行为 165
6.2.4 React组件 168
6.3 编写测试 180
6.4 运行应用程序 181
6.5 小结 182
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>React导学
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通Ext JS
第1章　启程　　1
1.1 　安装所需软件　　1
1.2 　展示应用及其功能　　3
1.2.1 　启动界面　　3
1.2.2 　登录界面　　4
1.2.3 　主界面　　4
1.2.4 　用户控制管理　　5
1.2.5 　MySQL数据库表管理　　5
1.2.6 　内容管理控制　　6
1.2.7 　电子邮件客户端模块　　7
1.3 　用MVC创建应用框架　　8
1.3.1 　MVC简介　　8
1.3.2 　创建应用　　9
1.4 　创建加载页面　　14
1.5 　小结　　19
第2章　登录界面　　20
2.1 　登录界面　　20
2.2 　创建登录界面　　21
2.2.1 　客户端验证　　24
2.2.2 　添加带有按钮的工具栏　　26
2.2.3 　运行代码　　27
2.2.4 　itemId还是id：Ext.Cmp的问题　　28
2.3 　创建登录控制器　　28
2.3.1 　在app.js中添加控制器　　29
2.3.2 　监听按钮点击事件　　30
2.4 　创建用户和用户组表　　38
2.5 　服务器端的登录界面处理　　39
2.5.1 　连接数据库　　39
2.5.2 　login.php　　40
2.5.3 　处理服务器端的返回结果——登录与否　　42
2.6 　优化登录界面　　45
2.6.1 　进行认证时为表单提供一个加载遮罩　　45
2.6.2 　回车提交表单　　46
2.6.3 　大写键提醒信息　　46
2.7 　小结　　50
第3章　注销与多语言支持　　51
3.1 　基本应用界面　　51
3.2 　注销功能　　54
3.2.1 　重构登录和注销代码　　56
3.2.2 　服务器端注销功能　　58
3.2.3 　客户端行为监控　　58
3.3 　多语言支持　　59
3.3.1 　创建语言转换组件　　60
3.3.2 　创建转换文件　　62
3.3.3 　使用转换信息　　63
3.3.4 　HTML5本地存储　　63
3.3.5 　实时的语言切换　　64
3.3.6 　本地化：Ext JS语言转换　　67
3.4 　小结　　67
第4章　动态菜单高级应用　　68
4.1 　创建动态菜单　　68
4.1.1 　数据库模型：用户组、菜单及权限　　69
4.1.2 　创建菜单模型：hasMany绑定　　70
4.1.3 　创建数据存储器：通过服务器端加载菜单　　73
4.1.4 　在服务器端处理动态菜单　　73
4.1.5 　用折叠面板和树形面板创建菜单　　76
4.1.6 　在视见区替换中央区域容器　　76
4.1.7 　创建菜单控制器　　77
4.1.8 　改动app.js　　80
4.2 　小结　　81
第5章　用户鉴权与安全　　82
5.1 　用户管理　　82
5.2 　列出所有用户：简单的网格面板　　83
5.2.1 　用户模型　　83
5.2.2 　用户存储器　　84
5.2.3 　用户网格面板　　85
5.2.4 　用户控制器　　88
5.3 　添加和编辑用户　　89
5.3.1 　创建编辑视图：窗体里的表单　　89
5.3.2 　用户组模型　　93
5.3.3 　用户组集模型　　93
5.3.4 　控制器：监听Add按钮事件　　94
5.3.5 　控制器：监听Edit按钮事件　　95
5.3.6 　控制器：保存用户信息　　96
5.3.7 　控制器：监听Cancel按钮　　97
5.3.8 　在上传之前预览文件　　98
5.4 　删除用户　　99
5.5 　小结　　101
第6章　MySQL数据库表管理　　102
6.1 　呈现数据库表　　102
6.2 　创建模型　　104
6.2.1 　抽象模型　　104
6.2.2 　特定模型　　105
6.3 　创建存储器　　106
6.3.1 　抽象存储器　　107
6.3.2 　抽象代理类　　107
6.3.3 　特定存储器　　111
6.4 　创建菜单项　　112
6.5 　创建重用的抽象网格面板　　113
6.5.1 　用MVC架构模式处理操作列　　118
6.5.2 　在操作列用iconCls属性取代icon属性　　118
6.5.3 　比较即席搜索插件与过滤插件　　119
6.5.4 　对应每张数据库表的特定网格面板　　120
6.6 　通用控制器　　121
6.6.1 　在网格渲染时加载网格面板　　122
6.6.2 　在网格面板上添加记录　　123
6.6.3 　编辑存在记录　　124
6.6.4 　删除：在控制器中处理操作列　　125
6.6.5 　保存变更　　125
6.6.6 　取消变更　　127
6.6.7 　清除过滤器　　127
6.6.8 　在控制器中监听存储器事件　　128
6.7 　小结　　128
第7章　内容管理　　129
7.1 　管理影片、客户和租借信息　　129
7.2 　呈现影片数据网格　　133
7.2.1 　影片模型　　133
7.2.2 　影片存储器　　133
7.2.3 　带分页功能的影片数据网格　　135
7.2.4 　创建控制器　　141
7.3 　影片网格面板编辑功能　　142
7.3.1 　Packt.view.sakila.WindowForm　　147
7.3.2 　影片类别　　149
7.3.3 　演员信息　　154
7.4 　影片控制器　　159
7.4.1 　在编辑表单中加载已有影片
信息　　159
7.4.2 　获取MultiSelect组件值　　160
7.4.3 　通过即席搜索获取所选演员　　161
7.5 　小结　　162
第8章　添加额外功能　　163
8.1 　将网格面板信息导出成PDF和Excel格式　　163
8.1.1 　导出成PDF格式　　164
8.1.2 　导出成Excel格式　　166
8.2 　通过网格打印插件打印网格面板内容　　166
8.3 　创建影片类别销售图　　168
8.3.1 　饼图　　169
8.3.2 　柱状图　　170
8.3.3 　图表面板　　172
8.3.4 　更改图表类型　　175
8.3.5 　图表导出成图片格式（PNG和SVG）　　176
8.3.6 　图表导出成PDF格式　　177
8.4 　小结　　179
第9章　电子邮件客户端模块　　180
9.1 　创建收件箱：邮件列表　　180
9.1.1 　邮件信息模型　　181
9.1.2 　邮件信息存储器　　181
9.1.3 　邮件列表视图　　182
9.1.4 　邮件预览面板　　186
9.2 　邮件菜单（树形菜单）　　187
9.2.1 　树形邮件菜单存储器　　187
9.2.2 　创建邮件菜单视图　　188
9.3 　邮件容器：组织电子邮件客户端　　189
9.4 　控制器　　191
9.5 　组织电子邮件：拖放　　193
9.6 　创建新邮件　　195
9.6.1 　动态呈现Cc和Bcc字段　　197
9.6.2 　动态添加文件上传字段　　198
9.7 　小结　　199
第10章　产品化准备　　200
10.1 　开始之前　　200
10.2 　自定义主题　　201
10.3 　为产品发布打包应用　　206
10.3.1 　发布成产品的内容　　208
10.3.2 　产品化的优点　　209
10.4 　从Web到桌面：Sencha Desktop Packager　　210
10.4.1 　安装Sencha Desktop Packager　　210
10.4.2 　应用打包　　214
10.4.3 　服务器端代码调整　　216
10.5 　小结　　219
第11章　创建WordPress主题　　220
11.1 　安装WordPress　　220
11.2 　WordPress主题简介　　222
11.3 　组织主题结构　　223
11.4 　构建头部　　225
11.5 　构建页脚　　229
11.6 　构建主页面　　230
11.7 　构建侧边栏　　232
11.8 　构建单一文章页面　　237
11.9 　构建单一页面　　238
11.10 　小结　　238
第12章　调试与测试　　239
12.1 　调试Ext JS应用程序　　239
12.2 　测试Ext JS应用程序　　241
12.2.1 　使用Sencha command生成“测试”构造　　242
12.2.2 　安装Siesta并创建测试用例　　243
12.3 　有用的工具箱　　247
12.4 　从Ext JS应用到移动应用　　249
12.5 　第三方组件和插件　　250
12.6 　小结　　250
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通Ext JS
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>交互式计算机图形学
第1章图形系统和模型
1.1计算机图形学的应用
1.1.1信息的显示
1.1.2设计
1.1.3仿真和动画
1.1.4用户界面
1.2图形系统
1.2.1像素和帧缓存
1.2.2CPU与GPU
1.2.3输出设备
1.2.4输入设备
1.3物理图像与合成图像
1.3.1对象和观察者
1.3.2光和图像
1.3.3成像模型
1.4成像系统
1.4.1针孔照相机
1.4.2人类视觉系统
1.5虚拟照相机模型
1.6应用程序编程接口
1.6.1笔式绘图仪模型
1.6.2三维API
1.6.3使用WebGLAPI绘制的一系列图像
1.6.4建模—绘制模式
1.7图形绘制系统的体系结构
1.7.1显示处理器
1.7.2流水线体系结构
1.7.3图形绘制流水线
1.7.4顶点处理
1.7.5裁剪和图元组装
1.7.6光栅化
1.7.7片元处理
1.8可编程流水线
1.9性能特征
1.10OpenGL版本和WebGL
小结和注释
建议阅读资料
习题
第2章图形学编程
2.1Sierpinski镂垫
2.2编写二维图形应用程序
2.3WebGL应用程序编程接口
2.3.1图形函数
2.3.2图形绘制流水线和状态机
2.3.3OpenGL和WebGL
2.3.4WebGL接口
2.3.5坐标系
2.4图元和属性
2.4.1多边形的基本概念
2.4.2WebGL中的多边形
2.4.3利用多边形近似球面
2.4.4三角剖分
2.4.5文本
2.4.6曲线和曲面对象
2.4.7属性
2.5颜色
2.5.1RGB颜色
2.5.2索引颜色
2.5.3设置颜色属性
2.6观察
2.6.1正投影
2.6.2二维观察
2.7控制函数
2.7.1和窗口系统的交互
2.7.2宽高比和视口
2.7.3应用程序组织结构
2.8Sierpinski镂垫绘制程序
2.8.1向GPU发送数据
2.8.2绘制Sierpinski镂垫的点数据
2.8.3顶点着色器
2.8.4片元着色器
2.8.5组合代码段
2.8.6initShaders（）函数
2.8.7init（）函数
2.8.8从应用程序读入着色器
2.9多边形和递归
2.10三维Sierpinski镂垫
2.10.1使用三维点
2.10.2命名规范
2.10.3使用多边形的三维Sierpinski镂垫
2.10.4隐藏面消除
小结和注释
建议阅读资料
习题
第3章交互和动画
3.1动画
3.1.1旋转的正方形
3.1.2显示过程
3.1.3双缓存
3.1.4使用定时器
3.1.5使用requestAnimFrame
函数
3.2交互
3.3输入设备
3.4物理输入设备
3.4.1键盘码
3.4.2光笔
3.4.3鼠标和跟踪球
3.4.4数据板、触摸板和触摸屏
3.4.5操作杆
3.4.6多维输入设备
3.4.7逻辑设备
3.4.8输入模式
3.5客户和服务器
3.6事件驱动输入编程
3.6.1事件和事件监听器
3.6.2增加按钮
3.6.3菜单
3.6.4使用键码
3.6.5滑动条
3.7位置输入
3.8窗口事件
3.9拾取
3.10建立交互式模型
3.11交互式程序的设计
小结和注释
建议阅读资料
习题
第4章几何对象和变换
4.1标量、点和向量
4.1.1几何对象
4.1.2与坐标无关的几何
4.1.3数学的观点：向量空间和仿射空间
4.1.4计算机科学的观点
4.1.5几何ADT
4.1.6直线
4.1.7仿射加法
4.1.8凸性
4.1.9点积和叉积
4.1.10平面
4.2三维图元
4.3坐标系和标架
4.3.1向量的表示和n元组
4.3.2坐标系的变换
4.3.3举例：不同基下的表示之间的变换
4.3.4齐次坐标
4.3.5举例：标架变换
4.3.6对表示进行处理
4.4WebGL中的标架
4.5矩阵和向量类型
4.6建模一个彩色立方体
4.6.1建模立方体的面
4.6.2向内和向外的面
4.6.3表示对象的数据结构
4.6.4彩色立方体
4.6.5颜色插值
4.6.6显示立方体
4.6.7使用元素绘制网格
4.7仿射变换
4.8平移、旋转和缩放
4.8.1平移
4.8.2旋转
4.8.3缩放
4.9变换的齐次坐标表示
4.9.1平移
4.9.2缩放
4.9.3旋转
4.9.4错切
4.10变换的级联
4.10.1不动点在任意位置的旋转
4.10.2一般的旋转
4.10.3实例变换
4.10.4绕任意轴的旋转
4.11WebGL中的变换矩阵
4.11.1当前变换矩阵
4.11.2基本矩阵函数
4.11.3旋转、平移和缩放
4.11.4绕任意不动点的旋转
4.11.5变换的顺序
4.12使立方体旋转起来
4.13三维应用程序的接口
4.13.1使用屏幕区域
4.13.2虚拟跟踪球
4.13.3平滑的旋转
4.13.4增量式旋转
4.14四元数
4.14.1复数和四元数
4.14.2四元数和旋转
4.14.3四元数和万向节死锁
小结和注释
建议阅读资料
习题
第5章观察
5.1经典观察和计算机观察
5.1.1经典观察
5.1.2正投影
5.1.3轴测投影
5.1.4斜投影
5.1.5透视观察
5.2计算机观察
5.3定位照相机
5.3.1照相机标架的定位
5.3.2两个观察API
5.3.3lookAt函数
5.3.4其他观察API
5.4平行投影
5.4.1正投影
5.4.2WebGL中的平行投影
5.4.3投影的规范化
5.4.4正投影变换矩阵
5.4.5斜投影
5.4.6交互式观察立方体
5.5透视投影
5.6WebGL中的透视投影
5.7透视投影变换矩阵
5.7.1透视投影的规范化
5.7.2WebGL中的透视投影变换
5.7.3透视投影示例程序
5.8隐藏面消除
5.9显示网格
5.9.1显示网格曲面
5.9.2多边形偏移
5.9.3在场景中漫游
5.10投影和阴影
5.11阴影映射
小结和注释
建议阅读资料
习题
第6章光照和着色
6.1光线和材质
6.2光源
6.2.1彩色光源
6.2.2环境光
6.2.3点光源
6.2.4聚光灯
6.2.5远距离光源
6.3Phong反射模型
6.3.1环境光反射
6.3.2漫反射
6.3.3镜面反射
6.3.4改进的Phong模型
6.4计算向量
6.4.1法向量
6.4.2反射角
6.5多边形的着色
6.5.1均匀着色
6.5.2平滑着色
6.5.3Phong着色
6.6通过递归细分逼近球面
6.7指定光照参数
6.7.1光源
6.7.2材质
6.8实现光照模型
6.8.1在WebGL应用程序代码中应用光照模型
6.8.2绘制效率
6.8.3在顶点着色器中实现光照计算
6.9球面模型的着色
6.10基于每个片元的光照计算
6.11非真实感着色
6.12全局光照
小结和注释
建议阅读资料
习题
第7章离散技术
7.1缓存
7.2数字图像
7.3映射方法
7.4二维纹理映射
7.5WebGL的纹理映射
7.5.1纹理对象
7.5.2纹理图像数组
7.5.3纹理坐标和纹理采样器
7.5.4纹理采样
7.5.5使用纹理坐标
7.5.6多纹理映射
7.6纹理生成
7.7环境贴图
7.8反射贴图示例程序
7.9凹凸映射
7.9.1计算凹凸贴图
7.9.2凹凸贴图示例程序
7.10融合技术
7.10.1不透明度与融合
7.10.2图像融合
7.10.3WebGL中图像的融合
7.10.4再探反走样
7.10.5从后向前或从前向后绘制多边形
7.10.6场景反走样和多重采样
7.10.7图像处理
7.10.8其他的多通道绘制方法
7.11GPGPU
7.12帧缓存对象
7.13缓存交换
7.14拾取
小结和注释
建议阅读资料
习题
第8章从几何到像素
8.1图形绘制流水线的基本实现策略
8.2图形绘制系统的四个主要任务
8.2.1建模
8.2.2几何处理
8.2.3光栅化
8.2.4片元处理
8.3裁剪
8.4线段的裁剪
8.4.1Cohen—Sutherland裁剪算法
8.4.2Liang—Barsky裁剪算法
8.5多边形的裁剪
8.6其他图元的裁剪
8.6.1包围盒与包围体
8.6.2曲线、曲面和字符的裁剪
8.6.3帧缓存中的裁剪
8.7三维裁剪
8.8光栅化
8.9Bresenham算法
8.10多边形光栅化算法
8.10.1内外测试法
8.10.2WebGL与凹多边形
8.10.3填充与分类
8.10.4漫水填充算法
8.10.5处理奇点
8.11隐藏面消除
8.11.1对象空间和图像空间消隐算法
8.11.2排序与隐藏面消除
8.11.3扫描线填充算法
8.11.4背面剔除
8.11.5z缓存算法
8.11.6基于z缓存的扫描转换算法
8.11.7深度排序和画家算法
8.12反走样
8.13显示方面的问题
8.13.1颜色系统
8.13.2颜色矩阵
8.13.3γ校正
8.13.4抖动输出技术和半色调输出技术
小结和注释
建议阅读资料
习题
第9章层级建模方法
9.1图符和实例
9.2层级模型
9.3机器人手臂
9.4树与遍历
9.5使用树数据结构
9.6动画
9.7图形对象
9.7.1方法、属性和消息
9.7.2一个立方体对象
9.7.3对象与层级结构
9.7.4几何和非几何对象
9.8场景图
9.9实现场景图
9.10其他树结构
9.10.1CSG树
9.10.2BSP树
9.10.3四叉树和八叉树
小结和注释
建议阅读资料
习题
第10章过程建模方法
10.1基于算法的建模
10.2基于物理的建模和粒子系统
10.3牛顿粒子
10.3.1独立的粒子
10.3.2弹簧力
10.3.3吸引力与排斥力
10.4求解粒子系统方程
10.5约束条件
10.5.1碰撞
10.5.2软约束
10.6一个简单的粒子系统
10.6.1绘制粒子
10.6.2更新粒子的位置
10.6.3碰撞
10.6.4作用力
10.6.5群聚行为
10.7基于agent的建模
10.8基于语言的建模
10.9递归方法和分形
10.9.1标尺和长度
10.9.2分形维数
10.9.3中点划分及布朗运动
10.9.4分形山脉
10.9.5Mandelbrot集
10.9.6Mandelbrot片元着色器
10.10过程噪声
小结和注释
建议阅读资料
习题
第11章曲线和曲面
11.1曲线和曲面的表示形式
11.1.1显式表示形式
11.1.2隐式表示形式
11.1.3参数表示形式
11.1.4参数多项式曲线
11.1.5参数多项式曲面
11.2设计准则
11.3三次参数多项式曲线
11.4插值
11.4.1调和函数
11.4.2三次插值曲面片
11.5Hermite曲线和曲面
11.5.1Hermite形式
11.5.2几何与参数连续性
11.6Bzier曲线和曲面
11.6.1Bzier曲线
11.6.2Bzier曲面片
11.7三次B样条
11.7.1三次B样条曲线
11.7.2B样条和基函数
11.7.3样条曲面
11.8普通B样条
11.8.1B样条的递归定义
11.8.2均匀样条
11.8.3非均匀B样条
11.8.4NURBS
11.8.5Catmull—Rom样条
11.9曲线和曲面的绘制
11.9.1多项式求值方法
11.9.2递归细分Bzier多项式
11.9.3基于细分算法的其他多项式曲线的绘制
11.9.4细分Bzier曲面
11.10Utah茶壶模型
11.11代数曲面
11.11.1二次曲面
11.11.2使用光线跟踪绘制曲面
11.12曲线和曲面的细分
11.13从数据生成网格
11.13.1回顾高度场
11.13.2Delaunay三角剖分
11.13.3点云
11.14支持曲线和曲面的图形API
11.14.1曲面细分着色
11.14.2几何着色
小结和注释
建议阅读资料
习题
第12章高级绘制
12.1超越流水线绘制结构
12.2光线跟踪
12.3构建一个简单的光线跟踪器
12.3.1光线跟踪递归算法
12.3.2计算交点
12.3.3其他不同形式的光线跟踪
12.4绘制方程
12.5辐射度方法
12.5.1辐射度方程
12.5.2求解辐射度方程
12.5.3计算排列因子
12.5.4实现辐射度算法
12.6全局光照和路径跟踪
12.7RenderMan
12.8并行绘制
12.8.1sort—middle绘制方法
12.8.2sort—last绘制方法
12.8.3sort—first绘制方法
12.9GPU硬件实现
12.10隐函数和等高线图
12.10.1步进方格
12.10.2步进三角形
12.11体绘制
12.11.1体数据集
12.11.2隐函数的可视化
12.12等值面与步进立方体
12.13步进四面体
12.14网格简化
12.15直接体绘制
12.15.1指定颜色和透明度
12.15.2抛雪球算法
12.15.3体光线跟踪
12.15.4基于纹理映射的体绘制
12.16基于图像的绘制
小结和注释
建议阅读资料
习题
附录A初始化着色器
附录B空间
附录C矩阵
附录D采样与走样
参考文献
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>交互式计算机图形学
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Polymer：面向未来的Web组件开发
前言
第 1 章 概述
什么是 Web 组件
HTML 模板
HTML 引用
自定义元素
Shadow DOM
为什么使用 Web 组件
I UI 核心概念
第 2 章 基础知识
DOM 抽象层的重要性
控件的 API 和生命周期
继承模式
依赖
优化
Web 组件不仅仅是 JavaScript
示例控件
Voltron 控件基类
对话框类
对话框的 CSS 和 HTML
总结
第 3 章 文档流与定位
文档流
定位元素
offsetParent
定位
计算元素的位置
相对于视窗
相对于文档
定位对话框控件
总结
第 4 章 理解和操作 z-index
z-index 究竟是什么？
渲染层、堆叠次序与 z-index
默认堆叠次序
重写默认堆叠次序
堆叠上下文
堆叠上下文是怎么创建的？
事情越来越复杂了
管理 z-index
z-index管理者对象
转化为 jQuery 插件
向对话框控件类添加 z-index 管理功能
总结
II 构建 UI
第 5 章 克隆节点
使用 cloneNode 方法
使用 jQuery.clone
对话框控件
总结
第 6 章 创建浮层
定义 API
工具
检测滚动栏的宽度
……
第 7 章 拖动元素
第 8 章 调整元素尺寸
第 9 章 完成对话框控件
III 构建HTML5 Web组件
第 10 章 模板
第 11 章 Shadow DOM
第 12 章 自定义元素
第 13 章 引入文档
IV 使用Polymer测试、构建、部署Web组件
第 14 章 Polymer 简介
第 15 章 将对话框迁移至 Polymer
第 16 章 测试 Web 组件
第 17 章 打包和发布
第 18 章 结语
索引
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Polymer：面向未来的Web组件开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>D3 API详解（全彩）
第1 章 核心（Core） .......................... 1
1.1 选择 ......................................................... 1
1.1.1 d3.select(selector) .......................................... 1
1.1.2 d3.select(node) ............................................... 2
1.1.3 d3.selectAll(selector) ..................................... 3
1.1.4 d3.selectAll(nodes) ........................................ 4
1.1.5 selection.attr(name[, value]) .......................... 4
1.1.6 selection.classed(name[, value]) .................... 5
1.1.7 selection.style(name[, value[, priority]]) ........ 6
1.1.8 selection.property(name[, value]) .................. 6
1.1.9 selection.text([value]) .................................... 7
1.1.10 selection.html([value]) ................................. 8
1.1.11 selection.append(name) ................................ 9
1.1.12 selection.insert(name[, before]) ................... 9
1.1.13 selection.remove() ...................................... 10
1.1.14 selection.data([values[, key]]) .................... 10
1.1.15 selection.enter().......................................... 12
1.1.16 selection.exit() ........................................... 14
1.1.17 selection.filter(selector) ............................. 15
1.1.18 selection.datum([value]) ............................ 15
1.1.19 selection.sort(comparator) .......................... 16
1.1.20 selection.on(type[, listener[, capture]]) ...... 17
1.1.21 d3.event ..................................................... 18
1.1.22 d3.mouse(container) .................................. 19
1.1.23 selection.transition() .................................. 19
1.1.24 selection.select(selector) ............................ 19
1.1.25 selection.selectAll(selector) ....................... 20
1.1.26 selection.each(function) ............................. 21
1.1.27 selection.call(function[, arguments…]) ..... 22
1.1.28 selection.empty() ....................................... 23
1.1.29 selection.node() ......................................... 23
1.1.30 selection.size() ........................................... 23
1.2 过渡 ....................................................... 23
1.2.1 transition.delay([delay]) .............................. 23
1.2.2 transition.duration([duration]) ..................... 24
1.2.3 transition.ease([value[, arguments]]) ........... 25
1.2.4 transition.attr(name, value) .......................... 25
1.2.5 transition.attrTween(name, tween) .............. 26
1.2.6 transition.style(name, value[, priority]) ....... 26
1.2.7 transition.styleTween(name,
tween[, priority]) ......................................... 27
1.2.8 transition.text(value) .................................... 27
1.2.9 transition.tween(name, factory) ................... 28
1.2.10 transition.remove() .................................... 28
1.2.11 transition.select(selector) ........................... 29
1.2.12 transition.selectAll(selector) ...................... 29
1.2.13 transition.filter(selector) ............................. 30
1.2.14 transition.transition() .................................. 30
1.2.15 transition.each([type, ]listener) .................. 30
1.2.16 transition.call(function[, arguments…]) ..... 31
1.2.17 transition.empty() ....................................... 32
1.2.18 transition.node() ......................................... 32
1.2.19 transition.size() .......................................... 32
1.2.20 d3.ease(type[, arguments…]) ..................... 32
1.2.21 ease(t) ........................................................ 33
1.2.22 d3.timer(function[, delay[, time]]) ............. 33
1.2.23 d3.interpolate(a, b) ..................................... 34
1.2.24 interpolate(t) .............................................. 34
1.2.25 d3.interpolateNumber(a, b) ........................ 35
1.2.26 d3.interpolateRound(a, b) .......................... 35
1.2.27 d3.interpolateString(a, b) ........................... 35
1.2.28 d3.interpolateRgb(a, b) .............................. 36
1.2.29 d3.interpolateHsl(a, b) ............................... 36
1.2.30 d3.interpolateLab(a, b) ............................... 36
1.2.31 d3.interpolateHcl(a, b) ............................... 36
1.2.32 d3.interpolateArray(a, b) ............................ 37
1.2.33 d3.interpolateObject(a, b) .......................... 37
1.2.34 d3.interpolateTransform(a, b) .................... 37
1.2.35 d3.interpolateZoom(a, b)............................ 38
1.3 数组 ....................................................... 39
1.3.1 d3.ascending(a, b) ........................................ 39
1.3.2 d3.descending(a, b) ...................................... 40
1.3.3 d3.min(array[, accessor]) ............................. 40
1.3.4 d3.max(array[, accessor]) ............................. 41
1.3.5 d3.extent(array[, accessor]) .......................... 41
1.3.6 d3.sum(array[, accessor]) ............................. 41
1.3.7 d3.mean(array[, accessor]) ........................... 41
1.3.8 d3.median(array[, accessor]) ........................ 42
1.3.9 d3.quantile(numbers, p) ............................... 42
1.3.10 d3.bisectLeft(array, x[, lo[, hi]]) ................ 42
1.3.11 d3.bisectRight(array, x[, lo[, hi]]) .............. 42
1.3.12 d3.bisect(array, x[, lo[, hi]]) ....................... 43
1.3.13 d3.bisector(accessor) ................................. 43
1.3.14 d3.shuffle(array) ........................................ 44
1.3.15 d3.keys(object) .......................................... 44
1.3.16 d3.values(object) ....................................... 44
1.3.17 d3.entries(object) ....................................... 44
1.3.18 d3.map([object]) ........................................ 44
1.3.19 map.has(key) ............................................. 45
1.3.20 map.get(key) .............................................. 45
1.3.21 map.set(key, value) .................................... 45
1.3.22 map.remove(key) ....................................... 45
1.3.23 map.keys() ................................................. 45
1.3.24 map.values() .............................................. 45
1.3.25 map.entries() .............................................. 46
1.3.26 map.forEach(function) ............................... 46
1.3.27 map.empty() .............................................. 46
1.3.28 map.size() .................................................. 46
1.3.29 d3.set([array]) ............................................ 46
1.3.30 set.has(value) ............................................. 47
1.3.31 set.add(value) ............................................ 47
1.3.32 set.remove(value) ...................................... 47
1.3.33 set.values() ................................................. 47
1.3.34 set.forEach(function) ................................. 47
1.3.35 set.empty() ................................................. 47
1.3.36 set.size() .................................................... 47
1.3.37 d3.merge(arrays) ........................................ 48
1.3.38 d3.range([start, ]stop[, step]) ..................... 48
1.3.39 d3.permute(array, indexes) ........................ 48
1.3.40 d3.zip(arrays…) ......................................... 48
1.3.41 d3.transpose(matrix) .................................. 49
1.3.42 d3.pairs(array) ............................................ 49
1.3.43 d3.nest() ..................................................... 49
1.3.44 nest.key(function) ...................................... 50
1.3.45 nest.sortKeys(comparator) ......................... 50
1.3.46 nest.sortValues(comparator) ....................... 51
1.3.47 nest.rollup(function)................................... 51
1.3.48 nest.map(array[, mapType]) ....................... 52
1.3.49 nest.entries(array) ...................................... 53
1.4 数学 ....................................................... 54
1.4.1 d3.random.normal([mean, [deviation]]) ....... 54
1.4.2 d3.random.logNormal([mean, [deviation]]) ... 54
1.4.3 d3.random.bates(count) ................................ 55
1.4.4 d3.random.irwinHall(count) ......................... 56
1.4.5 d3.transform(string) ..................................... 56
1.4.6 transform.rotate ............................................ 57
1.4.7 transform.translate ....................................... 57
1.4.8 transform.skew ............................................. 57
1.4.9 transform.scale ............................................. 57
1.4.10 transform.toString ...................................... 57
1.5 请求 ....................................................... 57
1.5.1 d3.xhr(url[, mimeType][, callback]) ............. 57
1.5.2 xhr.header(name[, value]) ............................ 58
1.5.3 xhr.mimeType([type]) .................................. 59
1.5.4 xhr.responseType(type) ................................ 60
1.5.5 xhr.response(value) ...................................... 61
1.5.6 xhr.get([callback]) ........................................ 61
1.5.7 xhr.post([data][, callback]) ........................... 61
1.5.8 xhr.send(method[, data][, callback]) ............ 62
1.5.9 xhr.abort() .................................................... 62
1.5.10 xhr.on(type[, listener]) ............................... 63
1.5.11 d3.text(url[, mimeType][, callback]) .......... 63
1.5.12 d3.json(url[, callback]) ............................... 64
1.5.13 d3.xml(url[, mimeType][, callback]) .......... 65
1.5.14 d3.html(url[, callback]) .............................. 66
1.5.15 d3.csv(url[, accessor][, callback]) .............. 66
1.5.16 d3.tsv(url[, accessor][, callback]) .............. 67
1.6 格式化 ................................................... 68
1.6.1 d3.format(specifier) ..................................... 68
1.6.2 d3.formatPrefix(value[, precision]) ............. 70
1.6.3 d3.round(x[, n]) ........................................... 70
1.6.4 d3.requote(string) ........................................ 71
1.7 本地化 ................................................... 71
1.7.1 d3.locale(definition) .................................... 71
1.7.2 locale.numberFormat(specifier) ................... 72
1.7.3 locale.timeFormat(specifier) ........................ 72
1.7.4 locale.timeFormat.utc(specifier) .................. 72
第2 章 比例尺（Scales） .................. 74
2.1 线性比例尺 ........................................... 74
2.1.1 d3.scale.linear() ........................................... 75
2.1.2 linear(x) ....................................................... 75
2.1.3 linear.invert(y) ............................................. 75
2.1.4 linear.domain([numbers]) ............................ 76
2.1.5 linear.range([values]) ................................... 76
2.1.6 linear.rangeRound(values) ........................... 77
2.1.7 linear.interpolate([factory]) .......................... 78
2.1.8 linear.clamp([boolean]) ............................... 78
2.1.9 linear.nice([count]) ...................................... 79
2.1.10 linear.ticks([count]) ................................... 80
2.1.11 linear.tickFormat(count, [format]) ............. 80
2.1.12 linear.copy() ............................................... 80
2.2 恒等比例尺 ........................................... 81
2.2.1 d3.scale.identity() ........................................ 82
2.2.2 identity.invert(x) .......................................... 82
2.2.3 identity.invert(y) .......................................... 82
2.2.4 identity.domain([numbers]) .......................... 82
2.2.5 identity.range([numbers]) ............................. 82
2.2.6 identity.ticks([count]) ................................... 83
2.2.7 identity.tickFormat(count, [format]) ............ 83
2.2.8 identity.copy() .............................................. 83
2.3 乘方比例尺 ........................................... 83
2.3.1 d3.scale.sqrt() ............................................... 84
2.3.2 d3.scale.pow() .............................................. 85
2.3.3 pow(x) .......................................................... 85
2.3.4 pow.invert(y) ................................................ 85
2.3.5 pow.domain([numbers]) ............................... 85
2.3.6 pow.range([values]) ..................................... 86
2.3.7 pow.rangeRound(values).............................. 87
2.3.8 pow.exponent([k]) ........................................ 87
2.3.9 pow.interpolate([factory]) ............................ 87
2.3.10 pow.clamp([boolean]) ................................ 88
2.3.11 pow.nice([m]) ............................................. 88
2.3.12 pow.ticks([count]) ...................................... 89
2.3.13 pow.tickFormat([count, [format]]) ............. 89
2.3.14 pow.copy() ................................................. 89
2.4 对数比例尺 ........................................... 90
2.4.1 d3.scale.log()................................................ 91
2.4.2 log(x) ............................................................ 91
2.4.3 log.invert(y) ................................................. 91
2.4.4 log.domain([numbers]) ................................ 91
2.4.5 log.range([values]) ....................................... 92
2.4.6 log.rangeRound(values) ............................... 92
2.4.7 log.interpolate([factory]) .............................. 93
2.4.8 log.clamp([boolean]) .................................... 93
2.4.9 log.nice() ...................................................... 94
2.4.10 log.ticks() ................................................... 94
2.4.11 log.tickFormat([count, [format]]) ............... 94
2.4.12 log.copy() ................................................... 95
2.5 量化比例尺 ........................................... 95
2.5.1 d3.scale.quantize() ....................................... 96
2.5.2 quantize(x) ................................................... 96
2.5.3 quantize.invertExtent(y) .............................. 96
2.5.4 quantize.domain([numbers]) ........................ 97
2.5.5 quantize.range([values]) .............................. 97
2.5.6 quantize.copy() ............................................ 97
2.6 分位数比例尺 ....................................... 97
2.6.1 d3.scale.quantile() ....................................... 99
2.6.2 quantile(x) ................................................... 99
2.6.3 quantile.invertExtent(y) ............................... 99
2.6.4 quantile.domain([numbers]) ........................ 99
2.6.5 quantile.range([values]) ............................... 99
2.6.6 quantile.quantiles() .................................... 100
2.6.7 quantile.copy() ........................................... 100
2.7 临界值比例尺 ..................................... 100
2.7.1 d3.scale.threshold() ................................... 101
2.7.2 threshold(x) ............................................... 101
2.7.3 threshold.invertExtent(y) ........................... 101
2.7.4 threshold.domain([domain]) ...................... 102
2.7.5 threshold.range([values]) ........................... 102
2.7.6 threshold.copy() ......................................... 102
2.8 序数比例尺 ......................................... 103
2.8.1 d3.scale.ordinal() ....................................... 104
2.8.2 ordinal(x) ................................................... 104
2.8.3 ordinal.domain([values]) ........................... 104
2.8.4 ordinal.range([values]) .............................. 105
2.8.5 ordinal.rangePoints(interval[, padding]) .... 105
2.8.6 ordinal.rangeBands
(interval[, padding[, outerPadding]]) ......... 106
2.8.7 ordinal.rangeRoundBands
(interval[, padding[, outerPadding]]) ......... 107
2.8.8 ordinal.rangeBand() ................................... 108
2.8.9 ordinal.rangeExtent() ................................. 108
2.8.10 ordinal.copy() ........................................... 108
2.8.11 d3.scale.category10() ............................... 108
2.8.12 d3.scale.category20() ............................... 109
2.8.13 d3.scale.category20b() ............................. 110
2.8.14 d3.scale.category20c() ............................. 110
2.9 时间比例尺 ......................................... 111
2.9.1 d3.time.scale() ............................................ 111
2.9.2 d3.time.scale.utc() ...................................... 111
2.9.3 scale(x) ...................................................... 112
2.9.4 scale.invert(y) ............................................ 112
2.9.5 scale.domain([dates]) ................................. 112
2.9.6 scale.nice([interval[, step]]) ....................... 112
2.9.7 scale.nice([count]) ...................................... 113
2.9.8 scale.range([values]) .................................. 114
2.9.9 scale.rangeRound([values]) ........................ 114
2.9.10 scale.interpolate([factory]) ....................... 114
2.9.11 scale.clamp([boolean]) ............................. 115
2.9.12 scale.ticks([interval[, step]]) .................... 115
2.9.13 scale.ticks([count]) ................................... 116
2.9.14 scale.copy() .............................................. 116
第3 章 可缩放矢量图形（SVG）..... 117
3.1 SVG 元素 ............................................ 117
3.1.1 svg:rect x="0" y="0" width="0"
height="0" rx="0" ry="0" .......................... 117
3.1.2 svg:circle cx="0" cy="0" r="0" .................. 118
3.1.3 svg:ellipse cx="0" cy="0" rx="0" ry="0" ... 119
3.1.4 svg:line x1="0" y1="0" x2="0" y2="0" ..... 119
3.1.5 svg:polyline points="" ............................... 120
3.1.6 svg:polygon points="" ............................... 120
3.1.7 svg:text x="0" y="0" dx="0" dy="0"
text-anchor="start" .................................... 121
3.1.8 svg:path d="" transform="" ....................... 122
3.2 线生成器 ............................................. 123
3.2.1 d3.svg.line() ............................................... 123
3.2.2 line(data) ................................................... 123
3.2.3 line.x([x])和line.y([y]) ............................. 124
3.2.4 line.interpolate([interpolate]) ..................... 124
3.2.5 line.tension([tension]) ................................ 125
3.2.6 line.defined([defined]) ............................... 126
3.3 径向线生成器 ..................................... 126
3.3.1 d3.svg.line.radial() ..................................... 126
3.3.2 line(data) ................................................... 127
3.3.3 line.radius([radius]) ................................... 127
3.3.4 line.angle([angle]) ..................................... 127
3.3.5 line.interpolate([interpolate]) ..................... 127
3.3.6 line.tension([tension]) ................................ 128
3.3.7 line.defined([defined]) ............................... 128
3.4 面积生成器 ......................................... 128
3.4.1 d3.svg.area() .............................................. 128
3.4.2 area(data) ................................................... 129
3.4.3 area.x([x]) .................................................. 129
3.4.4 area.y0([y0]) .............................................. 130
3.4.5 area.y1([y1]) .............................................. 130
3.4.6 area.y，area.x0，area.x1 .......................... 130
3.4.7 area.interpolate([interpolate]) .................... 131
3.4.8 area.tension([tension]) ............................... 131
3.4.9 area.defined([defined]) .............................. 131
3.5 径向面积生成器 ................................. 131
3.5.1 d3.svg.area.radial() .................................... 131
3.5.2 area(data) ................................................... 132
3.5.3 area.outerRadius([radius]) ......................... 132
3.5.4 area.innerRadius([radius]) ......................... 132
3.5.5 area.angle([angle]) ..................................... 132
3.6 弧生成器 ............................................. 133
3.6.1 d3.svg.arc() ................................................ 133
3.6.2 arc(datum[, index]) .................................... 134
3.6.3 arc.innerRadius([radius]) ........................... 134
3.6.4 arc.outerRadius([radius]) ........................... 134
3.6.5 arc.startAngle([angle]) ............................... 135
3.6.6 arc.endAngle([angle]) ................................ 135
3.6.7 arc.centroid(arguments…) ......................... 135
3.7 符号生成器 ......................................... 136
3.7.1 d3.svg.symbol() ......................................... 136
3.7.2 symbol.type([type]) .................................... 137
3.7.3 symbol.size([size]) ..................................... 138
3.7.4 d3.svg.symbolTypes ................................... 139
3.8 弦生成器 ............................................. 139
3.8.1 d3.svg.chord() ............................................ 139
3.8.2 chord(datum[, index]) ................................ 140
3.8.3 chord.source([source]) ............................... 140
3.8.4 chord.target([target]) .................................. 140
3.8.5 chord.startAngle([angle]) ........................... 141
3.8.6 chord.endAngle([angle]) ............................ 141
3.8.7 chord.radius([radius])................................. 141
3.9 对角线生成器 ..................................... 142
3.9.1 d3.svg.diagonal() ....................................... 142
3.9.2 diagonal(datum[, index]) ............................ 143
3.9.3 diagonal.source([source]) ........................... 143
3.9.4 diagonal.target([target]) ............................. 143
3.9.5 diagonal.projection([projection]) ............... 143
3.9.6 d3.svg.diagonal.radial() ............................. 144
3.10 轴 ....................................................... 145
3.10.1 d3.svg.axis() ............................................. 145
3.10.2 axis(selection) .......................................... 145
3.10.3 axis.scale([scale]) .................................... 145
3.10.4 axis.orient([orientation]) .......................... 146
3.10.5 axis.ticks([arguments…]) ........................ 147
3.10.6 axis.tickValues([values]) .......................... 147
3.10.7 axis.tickSize([inner, outer]) ..................... 148
3.10.8 axis.innerTickSize([size]) ........................ 148
3.10.9 axis.outerTickSize([size]) ........................ 149
3.10.10 axis.tickPadding([padding]) ................... 149
3.10.11 axis.tickFormat([format]) ...................... 149
3.11 刷子 ................................................... 150
3.11.1 d3.svg.brush() .......................................... 150
3.11.2 brush(selection) ....................................... 151
3.11.3 brush.x([scale]) ........................................ 151
3.11.4 brush.y([scale]) ........................................ 152
3.11.5 brush.extent([values]) .............................. 152
3.11.6 brush.clamp([clamp]) .............................. 152
3.11.7 brush.clear() ............................................. 153
3.11.8 brush.empty()........................................... 153
3.11.9 brush.on(type[, listener]) ......................... 153
第4 章 时间（Time） ...................... 155
4.1 时间格式 ............................................. 155
4.1.1 d3.time.format(specifier) ........................... 155
4.1.2 format(date) ............................................... 157
4.1.3 format.parse(string) ................................... 157
4.1.4 d3.time.format.multi(formats) ................... 157
4.1.5 d3.time.format.utc(specifier) ..................... 158
4.1.6 d3.time.format.iso ...................................... 158
4.2 时间间隔 ............................................. 159
4.2.1 d3.time.interval .......................................... 159
4.2.2 interval(date) ............................................. 160
4.2.3 interval.floor(date) ..................................... 160
4.2.4 interval.round(date) .................................... 160
4.2.5 interval.ceil(date) ....................................... 160
4.2.6 interval.range(start, stop[, step]) ................ 161
4.2.7 interval.offset(date, step) ............................ 162
4.2.8 interval.utc ................................................. 162
4.3 计数 ..................................................... 162
第5 章 布局（Layouts） ................. 164
5.1 捆绑布局 ............................................. 164
5.1.1 d3.layout.bundle() ...................................... 167
5.1.2 bundle(links) .............................................. 167
5.2 弦布局 ................................................. 168
5.2.1 d3.layout.chord() ........................................ 169
5.2.2 chord.matrix([matrix]) ............................... 169
5.2.3 chord.padding([padding]) .......................... 169
5.2.4 chord.sortGroups([comparator]) ................ 170
5.2.5 chord.sortSubgroups([comparator]) ........... 171
5.2.6 chord.sortChords([comparator]) ................. 171
5.2.7 chord.chords() ............................................ 172
5.2.8 chord.groups() ............................................ 173
5.3 簇布局 ................................................. 173
5.3.1 d3.layout.cluster() ...................................... 175
5.3.2 cluster(root) ............................................... 175
5.3.3 cluster.nodes(root) ...................................... 175
5.3.4 cluster.links(nodes) .................................... 176
5.3.5 cluster.children([children]) ......................... 176
5.3.6 cluster.sort([comparator]) ........................... 177
5.3.7 cluster.separation([separation]) .................. 177
5.3.8 cluster.size([size]) ...................................... 178
5.3.9 cluster.nodeSize([nodeSize]) ...................... 179
5.4 力布局 ................................................. 180
5.4.1 d3.layout.force() ........................................ 182
5.4.2 force.size([size]) ........................................ 182
5.4.3 force.linkDistance([distance]) ................... 182
5.4.4 force.linkStrength([strength]) .................... 183
5.4.5 force.friction([friction]) ............................. 184
5.4.6 force.charge([charge]) ............................... 184
5.4.7 force.chargeDistance([distance]) ............... 185
5.4.8 force.theta([theta]) ..................................... 186
5.4.9 force.gravity([gravity]) .............................. 186
5.4.10 force.nodes([nodes]) ................................ 186
5.4.11 force.links([links]) ................................... 187
5.4.12 force.start() .............................................. 188
5.4.13 force.alpha([value]) ................................. 188
5.4.14 force.resume().......................................... 188
5.4.15 force.stop() .............................................. 189
5.4.16 force.tick() ............................................... 189
5.4.17 force.on(type, listener) ............................. 190
5.4.18 force.drag() .............................................. 190
5.5 层次布局 ............................................. 191
5.6 直方图布局 ......................................... 191
5.6.1 d3.layout.histogram() ................................ 193
5.6.2 histogram(values[, index]) ......................... 193
5.6.3 histogram.value([accessor]) ....................... 193
5.6.4 histogram.range([range]) ........................... 194
5.6.5 histogram.bins() ......................................... 195
5.6.6 histogram.bins(count) ................................ 195
5.6.7 histogram.bins(thresholds) ........................ 196
5.6.8 histogram.bins(function) ........................... 197
5.6.9 histogram.frequency([frequency]) ............. 197
5.7 包布局 ................................................. 198
5.7.1 d3.layout.pack() ......................................... 199
5.7.2 pack(root) .................................................. 199
5.7.3 pack.nodes(root) ........................................ 199
5.7.4 pack.links(nodes) ....................................... 199
5.7.5 pack.children([children]) ........................... 200
5.7.6 pack.sort([comparator]) ............................. 201
5.7.7 pack.value([value]) .................................... 202
5.7.8 pack.size([size]) ......................................... 202
5.7.9 pack.radius([radius]) .................................. 203
5.7.10 pack.padding([padding]) .......................... 203
5.8 分区布局 ............................................. 204
5.8.1 d3.layout.partition() ................................... 207
5.8.2 partition(root) ............................................. 207
5.8.3 partition.nodes(root) .................................. 207
5.8.4 partition.links(nodes) ................................. 208
5.8.5 partition.children([children]) ...................... 209
5.8.6 partition.sort([comparator]) ........................ 209
5.8.7 partition.value([value]) .............................. 210
5.8.8 partition.size([size]) ................................... 210
5.9 饼布局 ................................................. 211
5.9.1 d3.layout.pie() ............................................ 212
5.9.2 pie(values[, index]) .................................... 212
5.9.3 pie.value([accessor]) .................................. 213
5.9.4 pie.sort([comparator]) ................................ 214
5.9.5 pie.startAngle([angle]) ............................... 214
5.9.6 pie.endAngle([angle]) ................................ 215
5.10 堆叠布局 ........................................... 216
5.10.1 d3.layout.stack()....................................... 218
5.10.2 stack(layers[, index]) ................................ 218
5.10.3 stack.values([accessor]) ........................... 219
5.10.4 stack.offset([offset]) ................................. 220
5.10.5 stack.order([order]) .................................. 220
5.10.6 stack.y([accessor]) ................................... 222
5.10.7 stack.out([setter]) ..................................... 223
5.11 树布局 ............................................... 223
5.11.1 d3.layout.tree() ......................................... 225
5.11.2 tree(root) .................................................. 225
5.11.3 tree.nodes(root) ........................................ 225
5.11.4 tree.links(nodes) ...................................... 226
5.11.5 tree.children([children]) ........................... 226
5.11.6 tree.separation([separation]) .................... 227
5.11.7 tree.size([size]) ........................................ 227
5.11.8 tree.nodeSize([nodeSize]) ........................ 228
5.11.9 tree.sort([comparator]) ............................. 229
5.12 矩形树布局 ....................................... 230
5.12.1 d3.layout.treemap().................................. 232
5.12.2 treemap(root) ........................................... 232
5.12.3 treemap.nodes(root) ................................. 232
5.12.4 treemap.links(nodes) ............................... 233
5.12.5 treemap.children([children]) .................... 233
5.12.6 treemap.sort([comparator]) ...................... 234
5.12.7 treemap.value([value]) ............................. 235
5.12.8 treemap.size([size]) ................................. 235
5.12.9 treemap.padding([padding]) .................... 235
5.12.10 treemap.round([round]) ......................... 236
5.12.11 treemap.sticky([sticky]) ......................... 236
5.12.12 treemap.mode([mode]) .......................... 238
第6 章 地理（Geo） ....................... 240
6.1 地理路径 ............................................. 240
6.1.1 d3.geo.path() .............................................. 241
6.1.2 path(feature[, index]) ................................. 241
6.1.3 path.projection([projection]) ...................... 242
6.1.4 path.context([context]) .............................. 243
6.1.5 path.centroid(feature) ................................ 244
6.1.6 path.area(feature) ....................................... 245
6.1.7 path.bounds(feature) .................................. 246
6.2 经纬网生成器 ..................................... 246
6.2.1 d3.geo.graticule .......................................... 247
6.2.2 graticule() ................................................... 247
6.2.3 graticule.lines() .......................................... 247
6.2.4 graticule.outline() ....................................... 248
6.2.5 graticule.extent(extent) .............................. 249
6.2.6 graticule.majorExtent(extent)..................... 249
6.2.7 graticule.minorExtent(extent) .................... 250
6.2.8 graticule.step(step) ..................................... 250
6.2.9 graticule.majorStep(step) ........................... 251
6.2.10 graticule.minorStep(step) ......................... 251
6.3 球面数学运算 ..................................... 252
6.3.1 d3.geo.area(feature) ................................... 252
6.3.2 d3.geo.centroid(feature) ............................. 252
6.3.3 d3.geo.bounds(feature) .............................. 252
6.3.4 d3.geo.distance(a, b) .................................. 252
6.3.5 d3.geo.length(feature) ................................ 253
6.3.6 d3.geo.interpolate(a, b) .............................. 253
6.4 标准抽象投影 ..................................... 254
6.4.1 d3.geo.projection(raw) ............................... 254
6.4.2 projection(location) .................................... 254
6.4.3 projection.invert(point) .............................. 254
6.4.4 projection.rotate([rotation]) ........................ 254
6.4.5 projection.center([location]) ...................... 255
6.4.6 projection.translate([point]) ....................... 256
6.4.7 projection.scale([scale]) ............................. 256
6.4.8 projection.clipAngle(angle) ....................... 257
6.4.9 projection.clipExtent(extent) ...................... 258
6.5 标准投影 ............................................. 258
6.5.1 d3.geo.azimuthalEqualArea() .................... 258
6.5.2 d3.geo.azimuthalEquidistant() ................... 259
6.5.3 d3.geo.conicConformal() ........................... 259
6.5.4 conicConformal.parallels([parallels]) ........ 259
6.5.5 d3.geo.conicEqualArea() ........................... 260
6.5.6 conicEqualArea.parallels([parallels]) ........ 261
6.5.7 d3.geo.conicEquidistant() .......................... 261
6.5.8 conicEquidistant.parallels([parallels]) ....... 261
6.5.9 d3.geo.equirectangular() ............................ 262
6.5.10 d3.geo.gnomonic() ................................... 262
6.5.11 d3.geo.mercator() .................................... 263
6.5.12 d3.geo.orthographic() .............................. 264
6.5.13 d3.geo.stereographic() ............................. 264
6.5.14 d3.geo.transverseMercator() .................... 264
6.6 流 ......................................................... 265
6.6.1 d3.geo.stream(object, listener) ................... 265
6.6.2 listener.point(x, y[, z]) ............................... 266
6.6.3 listener.lineStart() ...................................... 266
6.6.4 listener.lineEnd() ....................................... 266
6.6.5 listener.polygonStart() ............................... 266
6.6.6 listener.polygonEnd() ................................ 266
6.6.7 listener.sphere() ......................................... 267
6.6.8 d3.geo.transform(methods) ........................ 267
6.6.9 transform.stream(listener) .......................... 268
6.6.10 d3.geo.clipExtent() .................................. 269
6.6.11 clipExtent.extent([extent]) ....................... 269
第7 章 几何（Geometry） ............. 270
7.1 四叉树 ................................................. 270
7.1.1 d3.geom.quadtree() .................................... 272
7.1.2 quadtree(points) ......................................... 272
7.1.3 root.add(point) ........................................... 273
7.1.4 root.visit(callback) ..................................... 274
7.1.5 quadtree.x([x]) ........................................... 274
7.1.6 quadtree.y([y]) ........................................... 275
7.2 凸包 ..................................................... 275
7.2.1 d3.geom.hull() ............................................ 276
7.2.2 hull(vertices) .............................................. 276
7.2.3 hull.x([x]) ................................................... 276
7.2.4 hull.y([y]) ................................................... 277
7.3 多边形 ................................................. 277
7.3.1 d3.geom.polygon(vertices) ......................... 278
7.3.2 polygon.area() ............................................ 278
7.3.3 polygon.centroid()...................................... 278
7.3.4 polygon.clip(subject) ................................. 278
7.4 泰森多边形 ......................................... 279
7.4.1 d3.geom.voronoi () .................................... 280
7.4.2 voronoi(data).............................................. 280
7.4.3 voronoi.x([x]) ............................................. 280
7.4.4 voronoi.y([y]) ............................................. 281
7.4.5 voronoi.clipExtent([extent]) ....................... 282
7.4.6 voronoi.links(data) ..................................... 283
7.4.7 voronoi.triangles(data) ............................... 284
第8 章 行为（Behaviors） ............. 285
8.1 拖曳 ..................................................... 285
8.1.1 d3.behavior.drag() ..................................... 286
8.1.2 drag.on(type[, listener]) ............................. 286
8.1.3 drag.origin([origin]) .................................. 287
8.2 缩放 ..................................................... 287
8.2.1 d3.behavior.zoom() .................................... 288
8.2.2 zoom(selection) ......................................... 288
8.2.3 zoom.translate([translate]) ......................... 289
8.2.4 zoom.scale([scale]) .................................... 289
8.2.5 zoom.scaleExtent([extent]) ........................ 290
8.2.6 zoom.center([center]) ................................ 290
8.2.7 zoom.size([size]) ....................................... 290
8.2.8 zoom.x([x]) ................................................ 290
8.2.9 zoom.y([y]) ................................................ 290
8.2.10 zoom.on(type, listener) ............................ 291
本书参考资料 ..................................... 291
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>D3 API详解（全彩）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>CoffeeScript应用开发
译者序
前言
第1章 运行CoffeeScript程序
1.1 安装Node.js
1.1.1 在OS X上安装Node.js
1.1.2 在Windows上安装Node.js
1.2 使用安装程序
1.2.1 使用独立的可执行文件
1.2.2 使用Chocolatey
1.2.3 在Linux上安装Node.js
1.2.4 手动编译Node.js
1.2.5 跳过Node安装步骤
1.3 测试Node安装
1.4 安装CoffeeScript
1.5 第一段CoffeeScript代码
1.6 编译CoffeeScript文件
1.7 支持CoffeeScript的编辑器
1.7.1 TextMate支持
1.7.2 Sublime Text 2支持
1.7.3 Vim支持
1.7.4 Emacs支持
1.8 开始开发Web应用程序
1.9 小结
第2章 编写第一个CoffeeScript程序
2.1 跟着示例做
2.2 CoffeeScript基础
2.2.1 语句
2.2.2 变量
2.2.3 注释
2.3 函数调用
2.4 控制结构
2.4.1 if语句
2.4.2 else和else if语句
2.4.3 unless语句
2.4.4 单行形式
2.5 比较运算符
2.6 数组
2.6.1 数列
2.6.2 循环
2.6.3 判断数组成员
2.7 简单对象
2.8 小结
第3章 构建简单的应用程序
3.1 构建应用程序
3.2 字符串插值
3.3 定义函数
3.3.1 函数命名
3.3.2 函数返回
3.4 在应用程序中增加动态特性
3.5 Switch语句
3.6 小结
第4章 改进应用程序
4.1 检查值是否存在
4.1.1 使用存在运算符
4.1.2 空值在链式调用中
4.1.3 以空值为条件，赋新值
4.1.4 在宠物应用程序中处理空值
4.2 一次给多个变量赋值
4.3 高级函数参数
4.3.1 默认参数值
4.3.2 接受可变数目参数的splat
4.4 小结
第5章 CoffeeScript的类
5.1 在CoffeeScript中定义类
5.1.1 给类绑定方法
5.1.2 CoffeeScript如何构建JavaScript的类
5.1.3 保持对象属性状态
5.1.4 在对象中调用其他方法
5.1.5 在类定义的外面绑定方法
5.2 构造函数
5.3 类的静态方法调用
5.4 继承
5.5 在CoffeeScript中使用其他类库
5.5.1 CoffeeScript的Backbone类
5.5.2 CoffeeScript的Ember类
5.6 小结
第6章 用类重构
6.1 重构周期
6.2 用类结构化数据
6.2.1 添加业务逻辑
6.2.2 更多数据建模
6.2.3 更多业务逻辑
6.3 用类管理显示逻辑
6.3.1 显示一个集合
6.3.2 顶层的显示逻辑
6.4 最后的重构
6.5 使用继承重构
6.6 获得绿灯
6.7 小结
第7章 CoffeeScript高级用法
7.1 正确的上下文
7.2 用memoization节省工作
7.3 新的习惯用法：选项对象
7.4 小结
第8章 异步操作
8.1 理解异步操作
8.2 了解远程API
8.3 发出异步请求
8.4 使用第三方库
8.5 多个异步调用
8.5.1 循环请求
8.5.2 确定何时结束
8.6 管理异步调用的替代方案
8.6.1 承诺
8.6.2 异步辅助库
8.6.3 IcedCoffeeScript
8.7 小结
第9章 调试
9.1 发现问题
9.2 源映射
9.2.1 Firefox的源映射开发工具
9.2.2 Chrome的源映射开发工具
9.3 解决问题
9.4 小结
第10章 在更多地方使用CoffeeScript
10.1 直接在浏览器运行CoffeeScript
10.2 CoffeeScript在浏览器控制台
10.2.1 Firefox的CoffeeScript控制台
10.2.2 Chrome的CoffeeScript控制台
10.3 在Rails中使用CoffeeScript
10.3.1 设置资产管道
10.3.2 配置应用程序
10.3.3 添加CoffeeScript
10.3.4 预编译资产
10.4 在Brunch中使用CoffeeScript
10.4.1 创建Brunch项目
10.4.2 完善应用程序
10.4.3 预编译资产
10.5 在Node.js环境下使用CoffeeScript
10.5.1 创建项目
10.5.2 保持服务器最新
10.5.3 添加CoffeeScript编译
10.5.4 完成应用程序
10.5.5 整理脚本依赖关系
10.6 小结
第11章 在服务器中使用CoffeeScript
11.1 用CoffeeScript运行服务器
11.2 增加数据端
11.3 使用数据库
11.4 使用Cakefile
11.4.1 写一个Cake任务
11.4.2 更多Cake任务
11.5 构建交互式应用程序
11.6小结
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>CoffeeScript应用开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Web 2.0应用程序开发实践
《web 2.0应用程序开发实践》
第1章 web 2.0概述 1
1.1 web 2.0的特点 2
1.2 web 2.0应用程序举例 3
1.3 本章小结 5
第2章 web 2.0应用架构 6
2.1 web界面与用户体验 7
2.2 富客户端网络应用（rich internet application） 9
2.3 可编程性 11
2.3.1 什么是可编程web 2.0应用 11
2.3.2 技术概要 13
2.4 web 2.0系统集成案例 14
2.4.1 amazon ams 15
2.4.2 淘宝网开放平台 15
2.4.3 ibm lotus connections 15
2.5 本章小结 16
第3章 web 2.0应用程序相关开发技术 17
3.1 ajax 18
3.1.1 ajax核心要素——xmlhttprequest对象 19
3.1.2 ajax开源工具包概述 28
.3.2 mashup和widget 29
3.2.1 mashup概述 29
3.2.2 widget概述 32
3.3 feed（atom/rss） 36
3.3.1 概述 36
3.3.2 rss 39
3.3.3 atom 43
3.3.4 feed开源工具包简介 45
3.4 本章小结 46
第4章 rest 47
4.1 rest与soap 49
4.2 hello rest 53
4.3 rest设计器原则 55
4.4 rest设计步骤 62
4.5 rest开发框架 67
4.5.1 restlet 67
4.5.2 cetie4 67
4.6 开发rest应用程序 68
4.7 本章小结 70
第5章 web 2.0应用程序开发包 71
5.1 dojo 72
5.1.1 dojo 概述 72
5.1.2 安装dojo 73
5.1.3 hello world 74
5.1.4 dojo的模块加载机制 75
5.1.5 dojo 中的dom工具函数 76
5.1.6 dojo中的事件监听机制 79
5.1.7 dojo中的xmlhttprequest函数集 79
5.2 jawr 82
5.2.1 jawr简介 82
5.2.2 jawr的使用 83
5.3 abdera 87
5.3.1 创建atom文档 87
5.3.2 解析atom文档 91
5.4 本章小结 92
第6章 构建web 2.0网站实例 93
6.1 网站主要功能简介 94
6.2 网站开发准备 97
6.3 网站详细说明 100
6.3.1 数据库设计与开发 100
6.3.2 domain类的开发 103
6.3.3 ibatis dao的开发 104
6.3.4 struts的开发 108
6.3.5 jsp页面的开发 113
6.3.6 页面的ajax的开发 115
6.3.7 部署与运行 119
6.4 本章小结 122
第7章 web 2.0测试 123
7.1 测试阶段 124
7.2 自动化测试 126
7.2.1 测试流程自动化 126
7.2.2 测试脚本自动化 129
7.3 测试中的工具 132
7.3.1 firebug 132
7.3.2 ie developer 137
7.3.3 ie throttle 138
7.4 本章小结 139
第8章 web 2.0安全性 140
8.1 跨站脚本 143
8.1.1 跨站脚本实例 143
8.1.2 跨站脚本的危害 144
8.1.3 跨站脚本的类型 146
8.1.4 跨站脚本的防范 149
8.2 跨站请求伪造 156
8.2.1 跨站请求伪造实例 157
8.2.2 跨站请求伪造的危害 159
8.2.3 跨站请求伪造的类型 160
8.2.4 跨站请求伪造的防范 162
8.3 web 2.0应用的认证与授权的问题 167
8.3.1 oauth 协议 169
8.4 web 2.0应用的安全性测试 170
8.5 本章小结 172
第9章 web 2.0性能 173
9.1 web 2.0应用性能的特点 174
9.1.1 服务器端的性能特点 174
9.1.2 浏览器端的性能特点 175
9.2 影响web 2.0应用性能的因素 177
9.2.1 服务器端的影响因素 180
9.2.2 浏览器端的影响因素 187
9.3 web 2.0 应用性能测试的常用工具 190
9.3.1 firefox 的性能插件 190
9.3.2 ie的性能插件 190
9.3.3 专用工具 192
9.4 本章小结 196
第10章 web 2.0全球化 197
10.1 软件产品全球化的需求 198
10.2 全球化的基本技术 199
10.2.1 基本技术 200
10.2.2 java的国际化支持 201
10.2.3 icu4j 201
10.2.4 其他框架 202
10.2.5 语言的挑战 202
10.3 全球化软件产品设计与架构 203
10.3.1 好的设计与坏的设计 203
10.3.2 全球化软件开发过程 206
10.4 web 2.0对全球化带来的新挑战 209
10.4.1 新的需求、新的技术 209
10.4.2 基于客户端的全球化方法与实践 209
10.4.3 dojo全球化支持简介 212
10.5 web 2.0全球化常见问题和解决方案 220
10.5.1 过度依赖服务器实现本地化动态页面 221
10.5.2 过度依赖服务器端资源文件 221
10.5.3 字符串拼接 222
10.5.4 locale id归一化 223
10.5.5 缓存 223
10.6 本章小结 224
第11章 网页无障碍化 225
11.1 网页无障碍化标准与相关测试软件 227
11.1.1 网页无障碍化的主要国际标准 228
11.1.2 我国的网页无障碍化标准 231
11.1.3 常用的网页无障碍化测试软件 232
11.2 创建符合wcag标准的网页 235
11.2.1 为非文本内容添加文本辅助信息 235
11.2.2 创建无障碍的输入项 240
11.2.3 支持在高对比度下浏览网页 243
11.2.4 创建无障碍的网页浏览导航 246
11.3 创建符合aria标准的网页 251
11.4 无障碍化测试流程 257
11.5 本章小结 260
11.6 参考资料 261
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Web 2.0应用程序开发实践
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>WEB+DB PRESS 中文版 02
内 容 提 要
WEB+DB PRESS是日本主流的计算机技术杂志，旨在帮助程序员更实时、深入地了解前沿技术，扩大视野，提升技能。内容侧重于Web 开发的相关技术。
本期的主题分为3 个特辑：智能手机测试最前沿、Amazon Web Services 最新技巧和Sass/Compass实战。特辑1 从客户端到服务器端讲解智能手机应用程序自动化测试的相关内容。特辑2 介绍了主流的云计算平台Amazon Web Services 的最新功能，并对其主要服务的一些使用方法进行解说。特辑3则介绍Sass以及构建在其基础之上、能够扩展其功能的Compass框架，内容涵盖了基础知识以及在生产系统中的实战技巧。
本书适合各行业Web 前端和数据库开发者阅读。
目录
第4回　UI/UX 未来志向——预测未来之走向，知晓当下之所需　众多亮点的游戏设计世界　● 渡边惠太　　4
特辑1　智能手机测试最前沿 应用、浏览器、服务器端完全自动化！
第1章　智能手机测试的基本知识　首先要建立测试策略　● 中川胜树　　4
第2 章本机应用程序的UI自动化测试　使用Calabash编写跨Android/iOS平台的测试　● 山内沙瑛　贾成锴　小俣裕一　　10
第3章　浏览器自动化测试　区别使用各种Selenium WebDriver　● 冲田邦夫　　19
第4章　JavaScript自动化测试　使用Jasmine实施单元测试，使用PhantomJS实施集成测试　● 泽村正树　　28
第5章　服务器端自动化测试　Web API的集成测试　● 卜部昌平　　32
第6章　自动构建与发布应用程序　TestFlight与Jenkins的应用　● 吉藤博记　　36
特辑2　Amazon Web Services最新技巧 EC2、VPC、RDS、CloudFormation
第1章　Amazon Web Services的分层比较　理解各项服务的特征，掌握如何选择服务　● 片山晓雄　平山毅　　42
第2章　使用EC2 和VPC 构建系统　设计安全性和可用性俱佳的基础设施　● 舟崎建治　吉荒祐一　　51
第3章有效利用RDS构建数据库　创建、部署、备份　● 今井雄太　八木桥徹平　　59
第4章利用CloudFormation实现自动化的系统环境构建　从系统构建模板的创建到系统中间件的安装及设置　● 安川健太　　66
特辑3　Sass/Compass实战　用简洁的代码描述现代化的CSS　● 石本光司
第1章　Sass/Compass简介　CSS 预处理器及其扩展框架诞生的背景　　74
第2章　构建开发环境　安装、基本操作、GUI工具　　77
第3章　Sass的基本语法以及Compass　嵌套、混合、继承、导入、Compass 模块　　81
第4章　写出现代化的CSS　理解其原则以及灵活运用MVCSS 框架　　89
第5章　实践中的Sass/Compass　陷阱、多人开发、性能　　94
第9回　领先Ruby　使用Boxen进行Mac的环境搭建和配置管理　● 近藤宇智朗　　99
第9回　理论学习SQL新入门　通过重构改善数据库设计　● 奥野干也　　107
第10回　JavaScript应用最前沿——来自大规模开发现场　移动设备环境下的调试技术——模拟移动功能以及iOS/Android中远程调试功能的使用方法　● 天野祐介　　125
第4回　Emerging Web Technology 研究室　使用Grunt 实现前端开发的自动化　● 伊藤直也
第9回　Java的潜力——灭火工程师秘籍　用程序性能分析来分析性能问题——问题的分解方法、分析工具及示例　● 住川裕岳　北川贵久　菅原一志　　134
第9回　站在巨人的肩上学PHP——向前辈学习现代编程　通过Doctrine Annotations实现的声明式编程　● 后藤秀宣　　145
第23回　Perl Hackers Hub　Perl应用的测试与高速CI环境的构建方法　● 审稿：日本Perl协会　　153
第18回　支撑CyberAgent 的程序员们( 技术篇)　致力于改善响应速度的“特命”小组　● 川添贵生  161
图灵访谈　CSS创始人之一Bert Bos：CSS只是进化的一部分　　165
分栏目录
特辑1　智能手机测试最前沿应用、浏览器、服务器端完全自动化!
第1章智能手机测试的基本知识——首先要建立测试策略　　4
第2章　本机应用程序的UI自动化测试——使用Calabash编写跨Android/iOS平台的测试　　10
第3章　浏览器自动化测试——区别使用各种Selenium WebDriver　　19
第4章　JavaScript自动化测试——使用Jasmine实施单元测试，使用PhantomJS实施集成测试　　28
第5章　服务器端自动化测试——Web API 的集成测试　　32
第6章　自动构建与发布应用程序——TestFlight与Jenkins的应用　　36
特辑2　Amazon Web Services最新技巧EC2、VPC、RDS、CloudFormation
第1章　Amazon Web Services的分层比较——理解各项服务的特征，掌握如何选择服务　　42
第2章　使用EC2 和VPC 构建系统——设计安全性和可用性俱佳的基础设施　　51
第3章　有效利用RDS 构建数据库——创建、部署、备份　　59
第4章　利用CloudFormation实现自动化的系统环境构建—— 从系统构建模板的创建到系统中间件的安装及设置　　66
特辑3　Sass/Compass实战用简洁的代码描述现代化的CSS
第1章　Sass/Compass简介——CSS预处理器及其扩展框架诞生的背景　　74
第2章　构建开发环境——安装、基本操作、GUI 工具　　77
第3章　Sass 的基本语法以及Compass——嵌套、混合、继承、导入、Compass模块　　81
第4章　写出现代化的CSS——理解其原则以及灵活运用MVCSS框架　　89
第5章　实践中的Sass/Compass——陷阱、多人开发、性能　　94
专栏
第4回　UI/UX未来志向——预测未来之走向，知晓当下之所需　众多亮点的游戏设计世界　　1
连 载
第9回　领先Ruby　使用Boxen进行Mac的环境搭建和配置管理　　99
第9回　理论学习SQL新入门　通过重构改善数据库设计　　107
第10回　JavaScript应用最前沿——来自大规模开发现场　移动设备环境下的调试技术——模拟移动功能以及iOS/Android中远程调试功能的使用方法　　116
第4回　Emerging Web Technology研究室　使用Grunt实现前端开发的自动化　　125
第9回　Java的潜力——灭火工程师秘籍　用程序性能分析来分析性能问题——问题的分解方法、分析工具及示例　　134
第9回　站在巨人的肩上学PHP——向前辈学习现代编程　通过Doctrine Annotations实现的声明式编程　　145
第23回　Perl Hackers Hub　Perl应用的测试与高速CI 环境的构建方法　　153
专家视点
第18回　支撑CyberAgent的程序员们( 技术篇)　致力于改善响应速度的“特命”小组　　161
图灵访谈
CSS创始人之一Bert Bos：CSS 只是进化的一部分　　165
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>WEB+DB PRESS 中文版 02
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node.js进阶之路
第1章 Node异步编程范式 1
1.1 同步与异步的比较 2
1.2 Node异步的实现 7
1.2.1 HTTP请求——完全异步的例子 8
1.2.2 本地磁盘I/O——多线程模拟 17
1.3 事件驱动 18
参考资料 19
第2章 搭建自己的开发环境 21
2.1 Node的编译与安装 22
2.2 开发与调试 23
2.3 单元测试 29
2.3.1 Mocha 测试框架 29
2.3.2 TDD 风格 32
2.3.3 BDD 风格 34
2.3.4 生成不同形式的测试报告 35
2.3.5 代码覆盖率工具Istanbul36
参考资料 40
第3章 使用Docker部署Node服务 43
3.1 Docker基础 44
3.2 在Docker中运行Node 45
3.3 导出配置好的容器 47
参考资料 48
第4章 Node模块 49
4.1 程序入口 50
4.2 VM模块 50
4.3 模块加载与缓存 52
4.4 模块分类 54
4.5 正确导出模块 55
4.6 小心使用全局变量 56
第5章 V8引擎 57
5.1 Java Script代码的编译与优化 58
5.1.1 即时编译 58
5.1.2 隐藏类 59
5.1.3 内联缓存 60
5.1.4 优化回退 61
5.1.5 写出更具亲和性的代码 62
5.1.6 借助TypeScript 63
5.2 垃圾回收与内存控制 65
5.2.1 V8的垃圾回收算法 65
5.2.2 使用Buffer 67
5.2.3 避免内存泄漏 70
参考资料 77
V
第6章 Promise对象 79
6.1 Promise的含义 80
6.2 基本用法 80
6.3 then的链式写法 82
6.4 bluebird库 85
参考资料 86
第7章 用ES6 Generator解决回调金字塔 87
7.1 Node异步实现流程 88
7.2 用Generator实现异步调用与多并发 89
7.3 严格模式下运行 99
7.4 理解执行过程 100
7.5 本章结语 106
第8章 LoopBack开源框架 107
8.1 安装与运行 108
8.2 路由与权限控制 113
8.3 添加新模型 121
8.4 初始化数据库 131
8.5 钩子机制 134
8.6 中间件 137
8.7 模型关系 139
8.8 使用cluster模式运行服务 141
参考资料 144
第9章 编写C++扩展 145
9.1 使用C++编写扩展模块 146
9.1.1 导出对象 146
9.1.2 导出函数 149
9.1.3 导出构造函数 151
9.2 线程模型与CPU密集型任务 164
9.3 线程对象 164
9.4 本章结语 170
参考资料 170
附 录 171
附录 A JavaScript 严格模式 172
附录 B JavaScript 编码规范 182
参考资料 195
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node.js进阶之路
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>AngularJS学习手册
前言
第1章 AngularJS简介
JavaScript客户端框架
单页应用
引导应用
依赖注入
AngularJS的路由
HTML5模式
现代化搜索引擎
AngularJS的模板
AngularJS的视图 (MVC中的V)
AngularJS的模型 (MVC中的M)
AngularJS的控制器 (MVC中的C)
控制器中的业务逻辑
AngularJS与其他框架集成
测试AngularJS应用
小结
第2章 IDE和AngularJS项目
集成开发环境
编辑HTML代码
编辑JavaScript代码
创建模板
运行应用
在IDE中测试AngularJS应用
JsTestRunner
Karma测试运行程序
Protractor
小结
第3章 MVC和AngularJS
旧方式
更好的新方式
测试方面的考量
响应式设计方面的考量
小结
第4章AngularJS的控制器
在控制器中初始化模型
在控制器中附加行为
控制器中的业务逻辑
表现逻辑和数据格式化
提交表单
使用提交的表单数据
JS Test DriVer
使用Karma测试
使用Protractor做端到端测试
小结
第5章 AngularJS的视图和Bootstrap
AngularJS的模板
创建博客项目
在博客应用中添加一个新控制器
在博客应用中添加一个新模板
Twitter Bootstrap
使用Bootstrap添加导航菜单
添加虚拟的博客数据
使用CSS3为页面添加样式
添加样式和表现逻辑
查看单篇博客文章
运行这个博客程序
使用Karma测试
端到端测试
小结
第6章 AngularJS和REST服务
REST服务
AngularJS和REST服务
创建AngularJS服务的方式
与REST服务通信的方式
更新项目, 使用REST服务
REST服务和控制器
JSON响应
获取一组资源的服务
使用Karma测试服务
端到端测试
小结
第7章 AngularJS的模型
公开的REST服务
修改控制器
模型属性
在博客应用中使用公开服务
修改HTML
修改app.js文件
修改控制器
运行应用
使用Karma测试服务
端到端测试
小结
第8章 服务和业务逻辑
认证用户
使用基本认证
创建AngularJS服务
保存用户的认证凭据
检查用户的认证凭据
删除用户的认证凭据
获取用户的认证凭据
博客应用的业务逻辑
使用这些业务逻辑
使用Karma测试服务
端到端测试
小结
第9章 AngularJS的指令
HTML编译器
指令是什么?
自定义指令
指令的命名约定
约束选项
模板的URL
模板的属性
添加自定义的指令
传入标题属性
运行博客应用
使用Karma测试指令
端到端测试
小结
……
第10章 AngularJS的安全性
第11章 把MEAN工具栈开发的应用部署到云端, 开发移动应用
第12章 AngularJS和SEO
参考资料
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>AngularJS学习手册
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>jQuery全能权威指南
目  录
第1篇  jQuery核心库快速掌握和内核分析篇
第1章  使用jQuery开发Web应用程序	3
视频讲解：63分钟
1.1  使用jQuery核心库——
jQuery Core	4
1.1.1  第一个jQuery范例	5
1.1.2  基本语法	6
1.1.3  为什么要使用jQuery	7
1.1.4  源代码解析——jQuery库的
闭包定义	9
1.1.5  源代码解析——使用单体
模式创建jQuery实例	9
1.2  解决jQuery冲突	10
1.2.1  源代码解析——冲突的解决	12
1.2.2  源代码解析——jQuery类的
声明技巧	12
1.3  优化——关于开发效率和
运行效率	13
第2章  jQuery对象和jQuery选择器——
使用jQuery选择器构建jQuery
对象	15
视频讲解：62分钟
2.1  选择器基本语法——从源头
谈起	16
2.1.1  转义和保留字符	16
2.1.2  快速掌握jQuery选择器	17
2.2  使用选择器	19
2.2.1  基本选择器	19
2.2.2  层级选择器	20
2.2.3  属性选择器	22
2.2.4  子元素过滤选择器	23
2.2.5  基本过滤选择器	26
2.2.6  内容过滤选择器	27
2.2.7  可视化选择器	28
2.2.8  表单选择器	28
2.3  Sizzle选择器引擎	29
2.4  增强的jQuery()函数使用	29
2.4.1  使用DOM元素构造jQuery
对象	30
2.4.2  克隆jQuery对象	31
2.4.3  解析HTML字符串为jQuery
对象	31
2.4.4  解析单个HTML元素字符串
为jQuery对象	32
2.5  jQuery XPath选择器	33
2.5.1  支持的轴运算符	33
2.5.2  支持的条件谓词	34
第3章  jQuery对象和jQuery选择器——jQuery对象结构和处理方法	37
视频讲解：56分钟
3.1  关于jQuery对象的结构	38
3.2  处理jQuery对象	39
3.2.1  迭代jQuery对象	39
3.2.2  使用索引获取jQuery集合
中的元素	40
3.2.3  获取指定元素的索引值	43
3.2.4  过滤jQuery对象	44
3.2.5  检查是否包含指定特征的
元素	47
3.2.6  转换jQuery对象为数组	48
3.3  其他jQuery对象处理方法	49
3.3.1  添加元素到jQuery对象	49
3.3.2  通过合并构建jQuery对象	49
3.3.3  使用jQuery对象缓存	51
第4章  处理DOM结构（DOM树）	53
视频讲解：93分钟
4.1  属性节点处理	54
4.1.1  按照Core DOM规范处理
属性	54
4.1.2  按照HTML DOM规范处理
属性	56
4.1.3  删除属性	57
4.1.4  处理class属性	58
4.2  处理元素内容	60
4.2.1  获取和改变元素的HTML
格式内容	61
4.2.2  获取和改变元素的文本格
式内容	62
4.3  处理表单元素的值	62
4.4  DOM树遍历	65
4.4.1  匹配子元素	65
4.4.2  匹配后代元素	66
4.4.3  匹配祖辈元素	67
4.4.4  匹配同辈元素	69
4.5  改变DOM树	71
4.5.1  插入元素节点	71
4.5.2  替换元素节点	76
4.5.3  删除元素节点	78
4.5.4  克隆元素节点	79
4.5.5  封装元素节点	80
第5章  CSS样式处理	83
视频讲解：30分钟
5.1  基本的CSS样式处理方法	84
5.2  其他几个快捷方法	86
5.2.1  获取和设置元素的定位	86
5.2.2  处理滚动条位置	88
5.2.3  高度和宽度计算	89
5.3  CSS 3新增的样式属性以及浏览
器特定的扩展样式属性	91
第6章  触发事件	93
视频讲解：26分钟
6.1  绑定事件和事件处理函数	94
6.1.1  实现事件绑定的基本方法	94
6.1.2  解除事件绑定	96
6.1.3  单次事件绑定	96
6.1.4  实时追加事件绑定	97
6.2  事件绑定的快捷方法	99
6.3  其他快捷方法	100
6.3.1  监测鼠标在目标对象上的
活动	100
6.3.2  监测交替单击	101
6.4  .ready()方法	102
6.5  手动委派事件	103
6.6  事件委托	104
6.6.1  实现委托	104
6.6.2  解除委托	105
6.7  关于事件处理函数和
jQuery Event对象	106
6.7.1  使用jQuery Event对象	106
6.7.2  自定义jQuery Event对象	108
第7章  动画效果	109
视频讲解：35分钟
7.1  特效全局设置	110
7.2  基本特效——隐藏和显示	110
7.3  淡入淡出特效	112
7.4  滑动特效	114
7.5  自定义特效	115
7.5.1  根据CSS设置执行自定义
的动画效果	115
7.5.2  关于CSS 3的过渡效果
属性	116
7.6  动画队列管理	119
7.6.1  使用.queue()和jQuery.queue()
方法获取队列	120
7.6.2  使用.dequeue()和jQuery.
dequeue()方法执行队列的
下一个函数	121
7.6.3  延迟动画队列执行	122
7.6.4  使用.clearQueue()方法清除
队列	122
7.6.5  使用.stop()方法停止队列	123
7.7  关于新的动画实现方法——
requestAnimationFrame()方法	124
7.7.1  基本使用方法	124
7.7.2  requestAnimationFrame()方法
对jQuery动画队列的影响	126
第8章  使用Ajax	127
视频讲解：13分钟
8.1  jQuery实现Ajax请求的基础
方法	128
8.1.1  Ajax处理过程和回调函数
的顺序	135
8.1.2  了解jqXHR和
XMLHttpRequest	136
8.1.3  jqXHR请求的数据类型	138
8.1.4  使用JSONP	139
8.1.5  便捷的Ajax请求方法	140
8.1.6  便捷的全局事件监听	142
8.2  发送数据到服务器	143
8.2.1  编码表单	144
8.2.2  序列化一个数组或对象	145
8.3  全局设置	147
8.3.1  设置Ajax全局默认选项	147
8.3.2  预处理Ajax请求	147
第9章  工具方法	149
视频讲解：54分钟
9.1  内核方法	150
9.1.1  jQuery.holdReady()——暂停
或恢复.ready()事件处理函
数的执行	150
9.1.2  jQuery.sub()——创建jQuery
副本	150
9.1.3  jQuery.error()——抛出异常	151
9.2  侦测浏览器特性	151
9.2.1  jQuery.support——侦测浏
览器特性	151
9.2.2  jQuery.boxModel——侦测
浏览器BOX模型	152
9.2.3  jQuery.browser和jQuery.
browser.version——侦测浏
览器标识和版本	153
9.3  基本操作	153
9.3.1  jQuery.now()——当前时间
的时间戳	153
9.3.2  jQuery.parseJSON()——解
析JSON字符串	153
9.3.3  jQuery.parseXML()——解析
XML字符串	153
9.4  数组和对象处理	154
9.4.1  jQuery.each()——迭代对象和
数组	154
9.4.2  jQuery.extend()——合并
对象	155
9.4.3  jQuery.grep()——查找匹配
的数组元素	156
9.4.4  jQuery.makeArray()——将
对象转换为数组	156
9.4.5  jQuery.map()——将对象转
换为数组	157
9.4.6  jQuery.merge()——合并数组	158
9.4.7  jQuery.noop()——空函数	159
9.4.8  jQuery.proxy()——代理	159
9.4.9  jQuery.trim()——删除字符
串起始和结尾的空白	160
9.4.10  jQuery.unique()——删除数
组中的重复元素	160
9.4.11  jQuery.inArray()——索引
指定元素	160
9.5  类型检查	160
9.5.1  jQuery.isArray()	160
9.5.2  jQuery.isEmptyObject()	161
9.5.3  jQuery.isFunction()	161
9.5.4  jQuery.isPlainObject()	161
9.5.5  jQuery.isWindow()	161
9.5.6  jQuery.isXMLDoc()	162
9.5.7  jQuery.type()	162
9.6  其他工具方法	162
9.6.1  jQuery.contains()——检查
元素包含	162
9.6.2  jQuery.globalEval()——执行
JavaScript代码	163
9.7  数据处理	163
9.7.1  使用.data()和jQuery.data()方
法存储和获取数据	163
9.7.2  关于HTML 5的data-属性	164
9.7.3  使用.removeData()和jQuery.
removeData()方法移除数据	165
9.7.4  jQuery.hasData()——检查是
否绑定了数据	165
第10章  延迟处理——Deferred对象和
Promise	167
视频讲解：23分钟
10.1  注册回调函数	168
10.2  状态的变化	169

10.2.1  改变状态	170
10.2.2  检测状态	170
10.3  结合jQuery.when()方法使用	171
10.4  使用Promise	172
10.4.1  执行过滤	174
10.4.2  对jQuery对象应用
Promise	174
第2篇  jQuery UI和经典插件实战篇
第11章  使用jQuery UI插件（1）——基
本使用方法	179
11.1  下载和引用jQuery UI插
件库	180
11.1.1  独立使用	181
11.1.2  集成方式	182
11.1.3  自定义集成方式	182
11.2  使用jQuery UI插件的基本
方式	183
11.2.1  使用选项自定义UI
插件	183
11.2.2  为UI插件绑定事件	183
11.2.3  调用UI插件的方法	184
11.3  交互功能插件	184
11.3.1  Resizable插件——调整元
素大小	184
11.3.2  Selectable插件——选择分
组中的元素	186
11.3.3  Sortable插件——对元素
就地排序	188
11.3.4  Draggable插件和Droppable
插件——实现拖放操作	190
11.3.5  HTML 5实现拖放操作	193
11.3.6  范例——使用拖放操作实现
购物车	199
11.4  动画效果插件	202
11.4.1  增强的.animate()方法	202
11.4.2  通过改变类实现过渡
效果	203
11.4.3  增强的隐藏和显示特效	204
11.4.4  对可视元素施加特效	205
第12章  使用jQuery UI插件（2）——
Widget部件	207
12.1  Accordion插件	208
12.1.1  同时打开多个内容板	210
12.1.2  HTML?5的details和summary
元素实现Accordion	210
12.2  AutoComplete插件——自动
完成（自动提示）	211
12.3  Button插件——按钮和按
钮组	213
12.3.1  为按钮定义图标	214
12.3.2  单选按钮组	215
12.3.3  多选按钮组	216
12.3.4  切换按钮	217
12.4  DatePicker插件——日期选
择器	217
12.4.1  使用区域化功能	218
12.4.2  格式化日期	219
12.4.3  HTML?5的日期类型
控件	220
12.5  Dialog插件——对话框	221
12.6  ProgressBar插件——进度条	222
12.7  Slider插件——滑动条	224
12.8  Tabs插件——选项卡	226
第13章  美化jQuery UI插件	229
13.1  使用样式主题美化jQuery UI
插件	230
13.2  自定义CSS美化jQuery UI
插件	231
第14章  创建自己的jQuery插件	233
14.1  创建自己的插件	234
14.2  使用jQuery UI Widget Factory
编写有状态的插件	237
14.2.1  给插件添加方法	239
14.2.2  设置和获取选项值	240
14.2.3  添加回调功能	241
第15章  常用的第三方jQuery插件	243
15.1  水平Accordion	244
15.2  Tree插件	245
15.3  NumericStepper插件	247

15.4  MenuBar插件（导航
菜单）	248
15.5  DataGrid插件	251
15.6  图片居中放大显示插件	253
15.7  图片局部放大插件	255
15.8  图片局部剪切插件	256
15.9  图片滚动新闻、图片滚
动AD插件	257
15.10  调色盘1插件	258
15.11  调色盘2插件	259
15.12  向导插件	260
第3篇  使用jQuery Mobile设计网站和开发移动Web应用
第16章  使用jQuery Mobile UI插
件（1）——基本使用方法	265
16.1  使用jQuery Mobile插件	266
16.1.1  第一个jQuery Mobile范例	266
16.1.2  怎样在“内容页”间导航	269
16.1.3  使用超链接	269
16.1.4  定义页面过渡效果	270
16.1.5  定义样式主题（theme）	270
16.1.6  创建对话框	271
16.1.7  固定页眉和页脚	272
16.1.8  全屏效果	273
16.2  导航模型——jQuery Mobile的
核心机制	273
16.2.1  页面导航的基本规则	274
16.2.2  自动生成的“内容页”和
子书签地址	275
16.2.3  注意事项	276
第17章  使用jQuery Mobile UI插
件（2）——Widget	277
17.1  定义工具按钮	278
17.1.1  定义按钮	278
17.1.2  指定按钮图标	279
17.1.3  自定义按钮图标	279
17.1.4  行内级按钮和块级按钮	280
17.1.5  按钮分组	280
17.1.6  导航条	280
17.1.7  添加返回按钮	283
17.2  定义列表视图	284
17.2.1  有序列表	284
17.2.2  嵌套列表	285
17.2.3  分割按钮列表	286
17.2.4  列表项分组	287
17.2.5  缩略图和图标	288
17.2.6  对列表进行边缘修饰	290
17.2.7  只读列表	290
17.2.8  文字格式和计数泡	292
17.2.9  过滤列表项	292
17.3  内容布局	293
17.3.1  网格布局	293
17.3.2  可折叠内容	296
17.4  定义jQuery Mobile表单	298
17.4.1  表单控件的布局容器	300
17.4.2  切换开关控件	301
17.4.3  滑动条控件（slider）	301
17.4.4  单选按钮和复选框控件	302
17.4.5  水平开关键控件	303
17.4.6  选项菜单控件	304
17.4.7  表单提交	308
第18章  使用Ajax和程序动态控制
jQuery Mobile	309
18.1  jQuery Mobile的自定义事件	310
18.2  使用工具方法	312
18.3  jQuery Mobile初始化配置	316
18.3.1  关于mobileinit事件	317
18.3.2  配置选项	317
18.3.3  其他全局配置项	319

第4篇  jQuery经典网站设计——借鉴与灵感（见光盘）
附录A  准备jQuery Mobile UI插件创
作环境和测试环境	323
视频讲解：20分钟
A.1  使用Mobile Safari测试网页	324
A.1.1  iPhone Simulator的安装	324
A.1.2  使用Mobile Safari	325
A.2  使用IEMobile测试网页	327
A.2.1  Windows Phone 7 Emulator
的安装	327
A.2.2  使用IEMobile	328
A.3  使用Chrome Lite测试网页	330
A.3.1  Android Emulator的安装	330
A.3.2  使用Chrome Lite	336
A.4  使用BlackBerry浏览器测试
网页	338
A.4.1  BlackBerry模拟器的安装	338
A.4.2  使用BlackBerry模拟器	339

A.5  安装和设置Web服务器	341
A.5.1  安装IIS	341
A.5.2  了解Web服务器根目录	343
附录B  准备Visual Studio和
Aptana Studio	345
B.1  使用Visual Studio	346
B.2  使用Aptana Studio	348
B.2.1  安装Aptana Studio	348
B.2.2  使用和配置Aptana Studio	348
B.2.3  使用Aptana Studio编写
JavaScript	349
B.2.4  使用jQuery代码提示功能	352
附录C  参考文献以及资料来源	355
参考网址	356
参考图书	357
参考规范及标准	358

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>jQuery全能权威指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Web开发权威指南
第一部分 浏览器编程基础
第1章　配置开发环境　　2
1.1 安装Google Chrome　　2
1.2 安装并配置Atom　　3
1.3 文档和参考资料　　6
1.4 命令行速成　　8
1.4.1 查看当前工作目录　　9
1.4.2 新建目录　　10
1.4.3 切换目录　　10
1.4.4 列出目录中的文件　　11
1.4.5 获取管理员权限　　12
1.4.6 退出程序　　13
1.5 安装Node.js和browser-sync　　14
1.6 延展阅读：Atom 的替代工具　　15
第2章　开始第一个项目　　17
2.1 搭建Ottergram　　18
2.1.1 开始写HTML　　19
2.1.2 链接到样式表　　22
2.1.3 添加内容　　22
2.1.4 添加图片　　23
2.2 浏览网页　　25
2.3 Chrome开发者工具　　27
2.4 延展阅读：CSS 版本　　29
2.5 延展阅读：favicon.ico　　29
2.6 中级挑战：添加favicon.ico　　30
第3章　样式　　31
3.1 创建基本样式　　32
3.2 为HTML文件添加样式　　33
3.3 样式的构成　　34
3.4 第一条样式规则　　35
3.5 样式继承　　38
3.6 图片自适应　　45
3.7 颜色　　47
3.8 调整空白　　49
3.9 添加字体　　53
3.10 初级挑战：更改颜色　　56
3.11 延展阅读：优先级！当选择器发生冲突了……　　56
第4章　flexbox响应式布局　　58
4.1 界面拓展　　59
4.1.1 添加大图　　59
4.1.2 缩略图水平布局　　61
4.2 flexbox　　63
4.2.1 创建flex容器　　64
4.2.2 改变flex-direction　　65
4.2.3 flex项目中的元素分组　　66
4.2.4 flex缩写属性　　68
4.2.5 flex项目的排序与对齐方式　　69
4.2.6 居中显示大图　　73
4.3 绝对定位与相对定位　　75
第5章　使用媒体查询完成自适应布局　　82
5.1 重置视口　　83
5.2 添加媒体查询　　85
5.3 初级挑战：屏幕方向　　89
5.4 延展阅读：flexbox布局通用解决方案与bug　　89
5.5 高级挑战：圣杯布局　　89
第6章　JavaScript事件处理　　90
6.1 准备锚标签　　91
6.2 第一个脚本　　94
6.3 Ottergram中的JavaScript 描述　　95
6.4 声明字符串变量　　96
6.5 操作控制台　　97
6.6 访问DOM元素　　99
6.7 编写setDetails函数　　104
6.8 从函数返回值　　108
6.9 添加事件监听器　　110
6.10 访问所有缩略图　　115
6.11 迭代缩略图数组　　117
6.12 中级挑战：劫持链接　　118
6.13 高级挑战：随机的水獭　　119
6.14 延展阅读：严格模式　　119
6.15 延展阅读：闭包　　119
6.16 延展阅读：NodeList对象和HTMLCollection 对象　　120
6.17 延展阅读：JavaScript类型　　122
第7章　使用CSS营造视觉效果　　123
7.1 隐藏及显示大图　　123
7.1.1 创建隐藏大图的样式　　125
7.1.2 用JavaScript 隐藏大图　　127
7.1.3 监听键盘事件　　128
7.1.4 重新显示大图　　131
7.2 使用CSS过渡改变状态　　132
7.2.1 变形　　133
7.2.2 添加CSS过渡效果　　135
7.2.3 使用定时函数　　138
7.2.4 基于类的过渡效果　　139
7.2.5 通过JavaScript触发过渡效果　　140
7.3 自定义定时函数　　141
7.4 延展阅读：强制类型转换的规则　　143
第二部分 模块、对象及表单
第8章　模块、对象和方法　　146
8.1 模块　　146
8.1.1 模块模式　　147
8.1.2 通过IIFE修改对象　　149
8.2 搭建我们的CoffeeRun吧　　151
8.3 创建数据存储模块　　152
8.4 在命名空间上添加一个模块　　153
8.5 构造函数　　154
8.5.1 构造函数的原型　　155
8.5.2 为构造函数添加方法　　157
8.6 创建Truck模块　　159
8.6.1 添加订单　　160
8.6.2 删除订单　　161
8.7 调试　　163
8.7.1 使用开发者工具定位bug　　165
8.7.2 使用bind 设置this　　169
8.8 在页面加载时初始化CoffeeRun　　170
8.9 初级挑战：使用非星迷熟悉的餐车ID　　173
8.10 延展阅读：模块私有数据　　173
8.11 中级挑战：私有化数据　　174
8.12 延展阅读：在forEach的回调函数中设置this　　174
第9章　Bootstrap简介　　175
9.1 添加Bootstrap　　175
9.2 创建订单表单　　177
9.2.1 添加文本输入字段　　178
9.2.2 提供单选按钮　　182
9.2.3 添加下拉菜单　　183
9.2.4 添加范围滑块　　185
9.2.5 添加提交按钮和重置按钮　　185
第10章　使用JavaScript 处理表单　　187
10.1 创建FormHandler 模块　　188
10.1.1 jQuery简介　　189
10.1.2 导入jQuery　　189
10.1.3 使用selector参数配置FormHandler 实例　　190
10.2 添加提交处理程序　　192
10.2.1 提取数据　　193
10.2.2 接受并调用回调函数　　195
10.3 使用FormHandler　　196
10.4 UI 优化　　198
10.5 初级挑战：添加超级尺寸　　199
10.6 中级挑战：当滑块滑动时显示其数值　　199
10.7 高级挑战：添加选择　　200
第11章　从数据到DOM　　201
11.1 建立清单　　202
11.2 创建CheckList模块　　203
11.3 创建行构造函数　　204
11.4 在提交时创建清单行　　209
11.5 通过单击行完成订单　　212
11.5.1 创建CheckList.prototype.removeRow方法　　213
11.5.2 删除被覆盖的条目　　213
11.5.3 编写addClickHandler方法　　214
11.5.4 调用addClickHandler　　216
11.6 初级挑战：在描述中加入浓度信息　　217
11.7 中级挑战：不同口味，不同颜色　　217
11.8 高级挑战：允许编辑订单　　217
第12章　表单校验　　218
12.1 required属性　　218
12.2 使用正则表达式校验表单　　220
12.3 约束校验API　　220
12.3.1 监听input事件　　222
12.3.2 将input事件和有效性校验绑定　　223
12.3.3 触发有效性检查　　224
12.4 美化有效元素和无效元素　　225
12.5 中级挑战：为脱咖啡因咖啡进行自定义校验　　227
12.6 延展阅读：Webshim 库　　227
第13章　Ajax　　229
13.1 XMLHttpRequest对象　　230
13.2 RESTful Web服务　　230
13.3 RemoteDataStore模块　　231
13.4 向服务器发送数据　　232
13.4.1 使用jQuery的$.post 方法　　233
13.4.2 添加回调函数　　233
13.4.3 检查Ajax的请求和响应　　234
13.5 从服务器检索数据　　237
13.5.1 查看响应数据　　237
13.5.2 添加回调函数　　238
13.6 从服务器删除数据　　240
13.7 用RemoteDataStore替换DataStore　　241
13.8 中级挑战：校验远端服务器　　243
13.9 延展阅读：Postman　　243
第14章　Deferred和Promise　　244
14.1 Promise和Deferred　　245
14.2 返回Deferred　　246
14.3 通过then注册回调函数　　247
14.4 使用then处理失败的情况　　248
14.5 在仅支持回调函数的API上使用Deferred　　250
14.6 为DataStore配置Promise　　254
14.6.1 创建并返回Promise　　255
14.6.2 resolve一个Promise　　256
14.6.3 将其他DataStore方法Promise 化　　256
14.7 中级挑战：回退到Datastore　　259
第三部分 实时数据传输
第15章　Node.js入门　　262
15.1 Node和npm　　263
15.1.1 npm init　　264
15.1.2 npm脚本　　265
15.2 Hello, World　　265
15.3 添加一个npm脚本　　267
15.4 用文件提供服务　　268
15.4.1 用fs 模块读取文件　　269
15.4.2 处理请求URL　　269
15.4.3 使用path模块　　271
15.4.4 创建自定义模块　　272
15.4.5 使用自定义模块　　272
15.5 错误处理　　273
15.6 延展阅读：npm模块注册　　274
15.7 初级挑战：创建自定义错误页面　　275
15.8 延展阅读：MIME类型　　275
15.9 中级挑战：动态提供MIME类型　　276
15.10 高级挑战：将错误处理放到单独的模块中　　276
第16章　使用WebSocket进行实时通信　　277
16.1 配置WebSocket　　278
16.2 测试WebSocket服务器　　280
16.3 创建聊天服务器的功能　　281
16.4 第一次聊天！　　283
16.5 延展阅读：WebSocket库socket.io　　283
16.6 延展阅读：WebSocket服务　　284
16.7 初级挑战：我重复了我的消息吗？　　284
16.8 中级挑战：Speakeasy　　284
16.9 高级挑战：聊天机器人　　284
第17章　借助Babel使用ES6　　285
17.1 编译JavaScript的工具　　286
17.2 Chattrbox客户端应用程序　　288
17.3 迈出Babel的第一步　　289
17.4 使用Browserify 打包模块　　291
17.5 新增ChatMessage 类　　294
17.6 创建ws-client 模块　　297
17.6.1 处理连接　　298
17.6.2 处理事件并发送消息　　299
17.6.3 发出和回应一条消息　　301
17.7 延展阅读：将其他语言编译成JavaScript　　302
17.8 初级挑战：默认导入名称　　303
17.9 中级挑战：提醒连接关闭　　303
17.10 延展阅读：变量提升　　303
17.11 延展阅读：箭头函数　　305
第18章　继续ES6 探索之旅　　306
18.1 将jQuery 安装成一个Node 模块　　307
18.2 创建ChatForm 类　　307
18.3 创建ChatList 类　　310
18.8 初级挑战：给消息添加特效　　320
18.9 中级挑战：缓存消息　　320
18.10 高级挑战：独立的聊天室　　321
第四部分 应用架构
第19章　初识MVC和Ember　　324
19.1 Tracker　　325
19.2 Ember：一款MVC 框架　　326
19.2.1 安装Ember　　327
19.2.2 创建Ember应用　　328
19.2.3 启动服务器　　329
19.3 安装外部库和插件　　330
19.4 修改配置　　332
19.5 延展阅读：npm和Bower 的安装命令　　335
19.6 初级挑战：限制引入　　336
19.7 中级挑战：添加Font Awesome 库　　336
19.8 高级挑战：自定义NavBar　　336
第20章　路由选择、路由表、模型　　337
20.1 Ember生成器　　338
20.2 嵌套路由　　342
20.3 Ember Inspector　　344
20.4 指派模型　　344
20.5 beforeModel　　347
20.6 延展阅读：setupController和afterModel　　347
第21章　模型和数据绑定　　349
21.1 定义模型　　349
21.2 创建记录　　351
21.3 get和set　　353
21.4 计算属性　　354
21.5 延展阅读：检索数据　　357
21.6 延展阅读：保存或删除数据　　358
21.7 初级挑战：修改计算属性　　358
21.8 中级挑战：对新的目击记录进行标记　　358
21.9 高级挑战：添加称呼　　359
18.4 使用Gravatar　　312
18.5 请求用户名　　314
18.6 使用会话存储　　316
18.7 格式化和更新消息时间戳　　318
第22章　数据——适配器、序列化器和变换器　　360
22.1 适配器　　362
22.2 内容安全策略　　365
22.3 序列化器　　366
22.4 变换器　　368
22.5 延展阅读：Ember CLI Mirage　　368
22.6 中级挑战：内容安全　　369
22.7 高级挑战：Mirage　　369
第23章　视图与模板　　370
23.1 Handlebars　　371
23.2 模型　　371
23.3 辅助方法　　371
23.3.1 条件语句　　372
23.3.2 {{#each}}循环　　373
23.3.3 元素属性赋值　　375
23.3.4 链接　　377
23.4 自定义辅助方法　　380
23.5 初级挑战：为链接添加鼠标悬浮的内容　　382
23.6 中级挑战：修改日期格式　　383
23.7 高级挑战：创建一个自定义缩略图辅助方法　　383
第24章　控制器　　384
24.1 新建目击记录　　385
24.2 编辑目击记录　　392
24.3 删除目击记录　　395
24.4 路由动作　　396
24.5 初级挑战：目击记录详情页　　398
24.6 中级挑战：目击日期　　398
24.7 高级挑战：添加和删除目击者　　398
第25章　组件　　399
25.1 迭代器组件　　399
25.2 “拧干”组件的“水分”　　403
25.3 数据向下，动作向上　　404
25.4 类名绑定　　405
25.5 数据向下　　406
25.6 动作向上　　409
25.7 初级挑战：自定义提示信息　　411
25.8 中级挑战：将导航条转化为组件　　411
25.9 高级挑战：提示框数组　　412
第26章　后记　　413
26.1 最后的挑战　　413
26.2 插播一个广告　　413
26.3 感谢你　　414
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Web开发权威指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML亲密接触
第一部分
HTML
第0课

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>HTML亲密接触
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>jQuery Mobile开发指南
第1章　jQuery Mobile概述　　1
1.1 　Web移动应用还是本机应用　　2
1.2 　移动平台兼容性　　2
1.3 　为何选择 jQuery Mobile　　4
1.4 　其他流行的Web移动应用开发框架　　5
1.5 　jQuery Mobile许可协议　　6
1.6 　受限的应用场景　　6
第2章　框架初探　　7
2.1 　jQuery Mobile与HTML5　　7
2.1.1 　HTML5的演化　　8
2.1.2 　HTML5新特性　　8
2.1.3 　jQuery Mobile应用中经常用到的新特性　　9
2.2 　下载jQuery Mobile　　9
2.3 　第一个程序　　10
2.3.1 　开发前的准备　　11
2.3.2 　Hello World!　　11
2.4 　发布应用　　13
2.4.1 　安装IIS　　13
2.4.2 　通过IIS发布Web移动应用　　15
2.5 　移动设备模拟器　　17
2.5.1 　安装Android模拟器　　17
2.5.2 　创建Android模拟器　　19
2.5.3 　使用Android模拟器　　21
2.6 　jQuery Mobile开发工具　　22
第3章　页面与对话框　　24
3.1 　单页模板与多页模板　　24
3.2 　页面标题　　26
3.3 　页面链接　　27
3.4 　建立和关闭对话框　　30
3.5 　切换方式　　32
第4章　页面高级话题　　33
4.1 　初始化　　33
4.2 　通过预取和缓存改善页面访问速度　　39
4.3 　命名锚记　　43
4.3.1 　在单页模板中实现命名锚记　　45
4.3.2 　在多页模板中实现命名锚记　　46
4.4 　页面间参数传递　　50
4.4.1 　通过JavaScript实现参数传递　　50
4.4.2 　通过HTML5 Web Storage特性实现参数传递　　52
4.5 　加载消息　　56
4.5.1 　自定义加载消息　　57
4.5.2 　通过JavaScript管理加载消息　　59
4.6 　离线应用　　60
4.6.1 　配置Web服务器以支持离线应用　　61
4.6.2 　开发与集成离线应用　　62
第5章　弹出页面　　64
5.1 　基本的弹出页面　　64
5.2 　不同的弹出效果　　66
5.2.1 　菜单与嵌套菜单　　66
5.2.2 　表单　　69
5.2.3 　对话框　　71
5.3 　弹出页面的高级功能　　73
5.3.1 　图片　　73
5.3.2 　视频　　75
5.3.3 　地图　　82
5.3.4 　覆盖面板　　87
5.4 　定制弹出页面样式　　89
5.4.1 　设定弹出页面的位置　　89
5.4.2 　动画切换效果　　91
5.4.3 　弹出页面主题　　91
5.4.4 　关闭按钮　　92
5.5 　属性、选项、方法和事件　　93
5.5.1 　属性　　93
5.5.2 　选项　　94
5.5.3 　方法　　95
5.5.4 　事件　　95
第6章　触控交互　　96
6.1 　触控事件　　96
6.1.1 　轻击与按住　　96
6.1.2 　轻扫　　99
6.2 　虚拟鼠标事件　　100
第7章　按钮　　104
7.1 　基本概念　　104
7.2 　内联按钮　　106
7.3 　按钮图标　　107
7.3.1 　按钮图标样式　　107
7.3.2 　按钮图标位置　　110
7.4 　mini按钮　　111
7.5 　按钮组　　111
7.6 　按钮属性、选项、方法与事件　　113
7.6.1 　属性　　113
7.6.2 　选项　　114
7.6.3 　方法和事件　　115
7.7 　自定义按钮　　116
7.7.1 　自定义按钮图标　　116
7.7.2 　文字折行显示　　117
第8章　工具栏　　119
8.1 　工具栏显示模式　　119
8.2 　页眉和页脚工具栏　　121
8.3 　导航工具栏　　122
8.4 　固定工具栏属性、选项、方法和事件　　125
8.4.1 　属性　　125
8.4.2 　选项　　126
8.4.3 　方法和事件　　127
8.5 　高级开发技巧　　129
8.5.1 　自定义图标导航工具栏　　129
8.5.2 　定制风格导航工具栏　　132
第9章　列表视图　　137
9.1 　基本概念　　137
9.2 　嵌套列表　　139
9.3 　分类列表　　140
9.4 　数字列表　　141
9.5 　分立按钮列表　　142
9.6 　缩略图与图标列表　　143
9.7 　气泡提示　　144
9.8 　只读列表　　146
9.9 　过滤列表内容　　147
9.10 　插页列表　　150
9.11 　折叠列表　　152
9.12 　自动分类列表视图　　155
9.13 　使用列表美化表单布局　　158
9.14 　美化列表内容　　160
9.15 　列表视图属性、选项、方法和事件　　165
9.15.1 　属性　　165
9.15.2 　选项　　166
9.15.3 　方法和事件　　167
9.16 　高级编程技巧　　167
9.16.1 　移除各列表条目间的分隔线　　167
9.16.2 　列表视图触控操作　　168
9.16.3 　动态加载列表视图　　170
第10章　表单　　173
10.1 　表单样式　　173
10.2 　输入框　　175
10.2.1 　属性与选项　　176
10.2.2 　方法与事件　　177
10.3 　单选按钮　　177
10.3.1 　属性与选项　　178
10.3.2 　方法与事件　　179
10.4 　复选框　　179
10.5 　滑块　　180
10.5.1 　属性与选项　　181
10.5.2 　方法与事件　　181
10.6 　开关按钮　　182
10.7 　选择菜单　　183
10.7.1 　分组显示菜单项　　185
10.7.2 　垂直分组与水平分组　　186
10.7.3 　禁用某个菜单项　　188
10.7.4 　多选菜单　　188
10.7.5 　属性与选项　　190
10.7.6 　方法与事件　　191
10.8 　禁用表单元素　　191
10.9 　隐藏标签　　192
10.10 　mini尺寸的表单样式　　193
10.11 　高级开发技术　　195
10.11.1 　表单验证　　195
10.11.2 　文件上传　　196
第11章　页面布局与呈现　　199
11.1 　适应不同的分辨率　　199
11.1.1 　视口　　199
11.1.2 　媒体查询　　201
11.1.3 　背景图片进阶　　205
11.2 　改变屏幕方向　　206
11.3 　分栏布局　　207
11.4 　可折叠内容块　　211
11.4.1 　嵌套可折叠内容块　　213
11.4.2 　属性　　214
11.4.3 　选项　　215
11.4.4 　事件　　219
11.5 　折叠组　　220
第12章　响应式设计　　222
12.1 　基于jQuery Mobile实现响应式设计　　222
12.2 　分栏技术　　223
12.3 　回流表格　　228
12.4 　字段切换表格　　229
12.5 　滑动面板　　230
12.6 　支持触控操作的滑动面板　　232
第13章　主题风格美化　　233
13.1 　主题与色版　　233
13.2 　内置色版　　234
13.3 　通过ThemeRoller自定义主题　　235
13.3.1 　ThemeRoller的基本概念　　235
13.3.2 　编辑全局设置与色版　　237
13.3.3 　导入、下载和分享自定义色版　　238
13.4 　高级开发技术　　240
附录A 　JavaScript测试自动化　　243

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>jQuery Mobile开发指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>MongoDB实战 架构、开发与管理
第1章  大数据 1
1.1  入门指南 1
1.2  大数据 3
1.3  大数据源 4
1.4  大数据的三个V 5
1.4.1  数量 6
1.4.2  多样性 6
1.4.3  速率 7
1.5  大数据的使用 7
1.5.1  可见性 8
1.5.2  发现和分析信息 8
1.5.3  市场细分和产品定制 8
1.5.4  协助决策 8
1.5.5  创新 8
1.6  大数据的挑战 9
1.6.1  政策与程序 9
1.6.2  访问数据 9
1.6.3  技术与技能 9
1.7  传统系统与大数据 10
1.7.1  大数据的结构 10
1.7.2  数据存储 10
1.7.3  数据处理 10
1.8  大数据技术 10
1.9  本章小结 11
第2章  NoSQL 13
2.1  SQL 13
2.2  NoSQL 13
2.2.1  定义 14
2.2.2  NoSQL简史 14
2.3  ACID对比BASE 15
2.3.1  CAP定理 15
2.3.2  BASE 16
2.4  NoSQL的优缺点 17
2.4.1  NoSQL的优点 17
2.4.2  NoSQL的缺点 18
2.5  SQL与NoSQL数据库的
对比 18
2.6  NoSQL数据库的种类 21
2.7  本章小结 22
第3章  MongoDB介绍 23
3.1  历史 23
3.2  MongoDB设计原则 24
3.2.1  高速、可扩展性与敏捷性 24
3.2.2  非关系型方法 24
3.2.3  基于JSON的文档存储 25
3.2.4  性能与功能对比 25
3.2.5  随处都能运行数据库 25
3.3  与SQL的对比 26
3.4  本章小结 26
第4章  MongoDB数据模型 27
4.1  数据模型 27
4.1.1  JSON和BSON 28
4.1.2  标识符(_id) 29
4.1.3  固定集合 30
4.2  多态模式 30
4.2.1  面向对象编程 30
4.2.2  模式演化 31
4.3  本章小结 32
第5章  MongoDB-安装与配置 33
5.1  选择你的版本 33
5.2  在Linux上安装MongoDB 33
5.2.1  使用仓储进行安装 34
5.2.2  手动安装 34
5.3  在Windows上安装
MongoDB 35
5.4  运行MongoDB 35
5.4.1  先决条件 35
5.4.2  开启服务 36
5.5  验证安装结果 36
5.6  MongoDB Shell 36
5.7  保障部署安全 37
5.7.1  使用身份验证和授权 37
5.7.2  控制网络访问 42
5.8  使用MongoDB云管理器进行
配置 46
5.9  本章小结 50
第6章  使用MongoDB Shell 51
6.1  基本查询 51
6.1.1  创建和插入 56
6.1.2  显式创建集合 58
6.1.3  使用循环插入文档 58
6.1.4  通过显式指定_id进行插入 59
6.1.5  更新 59
6.1.6  删除 61
6.1.7  读取 62
6.1.8  使用索引 68
6.2  进阶介绍 78
6.2.1  使用条件操作符 78
6.2.2  正则表达式 80
6.2.3  MapReduce 81
6.2.4  aggregate() 83
6.3  设计应用程序的数据模型 84
6.3.1  关系型数据模型与标准化 84
6.3.2  MongoDB文档数据模型
方法 86
6.4  本章小结 93
第7章  MongoDB架构 95
7.1  核心程序 95
7.1.1  mongod 95
7.1.2  mongo 95
7.1.3  mongos 96
7.2  MongoDB工具 96
7.3  独立部署 96
7.4  复制 97
7.4.1  主/从复制 97
7.4.2  副本集 98
7.4.3  实现带有副本集的高级
群集 115
7.5  分片 124
7.5.1  分片组件 126
7.5.2  数据分发过程 127
7.5.3  数据平衡过程 130
7.5.4  操作 133
7.5.5  实现分片 134
7.5.6  控制集合分布
(基于标签分片) 142
7.5.7  在将数据导入到分片环境时
要记住的要点 152
7.5.8  监控分片 153
7.5.9  监控配置服务器 153
7.6  生产环境群集架构 153
7.6.1  场景1 154
7.6.2  场景2 155
7.6.3  场景3 156
7.6.4  场景4 157
7.7  本章小结 158
第8章  MongoDB阐释 159
8.1  数据存储引擎 159
8.2  (与MMAPv1相关的)数据
文件 161
8.3  (与WiredTiger相关的)数据
文件 168
8.4  读取和写入 170
8.5  使用日志时如何写入数据 172
8.6  GridFS——MongoDB文件
系统 176
8.6.1  GridFS的基本原理 177
8.6.2  GridFS的底层机制 177
8.6.3  使用GridFS 179
8.7  索引 182
8.7.1  索引类型 183
8.7.2  行为和限制 188
8.8  本章小结 189
第9章  管理MongoDB 191
9.1  管理工具 191
9.1.1  mongo 191
9.1.2  第三方管理工具 191
9.2  备份和恢复 191
9.2.1  数据文件备份 192
9.2.2  mongodump和
mongorestore 192
9.2.3  fsync和锁 196
9.2.4  从备份 198
9.3  导入和导出 198
9.3.1  mongoimport 198
9.3.2  mongoexport 199
9.4  管理服务器 199
9.4.1  启动一台服务器 199
9.4.2  停止服务器运行 200
9.4.3  浏览日志文件 200
9.4.4  服务器状态 201
9.4.5  识别和修复MongoDB 203
9.4.6  识别和修复集合级别的数据 204
9.5  监控MongoDB 205
9.5.1  mongostat 205
9.5.2  mongod网络接口 206
9.5.3  第三方插件 206
9.5.4  MongoDB云管理器 206
9.6  本章小结 212
第10章  MongoDB用例 213
10.1  用例1——性能监控 213
10.1.1  模式设计 213
10.1.2  操作 214
10.1.3  分片 218
10.1.4  管理数据 219
10.2  用例2——社交网络 220
10.2.1  模式设计 220
10.2.2  操作 222
10.2.3  分片 225
10.3  本章小结 225
第11章  MongoDB使用限制 227
11.1  MongoDB的空间过大(对于MMAPv1而言) 227
11.2  内存问题(对于MMAPv1而言) 228
11.3  32位与64位对比 228
11.4  BSON文档 228
11.5  命名空间使用限制 229
11.6  索引使用限制 229
11.7  固定集合使用限制——固定集合中文档的最大数量 229
11.8  分片使用限制 229
11.8.1  及早分片以避免出现问题 230
11.8.2  不能更新分片键 230
11.8.3  分片集合使用限制 230
11.8.4  选择合适的分片键 230
11.9  安全性限制 230
11.9.1  默认情况下没有身份验证 230
11.9.2  与MongoDB的交互通信没有被加密 231
11.10  写入和读取限制 231
11.10.1  大小写敏感的查询 231
11.10.2  类型敏感的字段 231
11.10.3  没有联结 231
11.10.4  事务 231
11.11  MongoDB不适用的范围 232
11.12  本章小结 232
第12章  MongoDB的最佳实践 233
12.1  部署 233
12.1.1  MongoDB网站的硬件
配置建议 234
12.1.2  要注意的一些要点 235
12.2  编码 235
12.3  应用程序响应时间优化 238
12.4  数据安全性 238
12.5  管理 239
12.6  复制延迟 239
12.7  分片 240
12.8  监控 240
12.9  本章小结 241
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>MongoDB实战 架构、开发与管理
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>jQuery、jQuery UI及jQuery Mobile技巧与示例
目　录
第一部分　核心基础
第1章　jQuery入门　2
1.1　技巧：jQuery基本使用简介　2
1.2　技巧：和其他库一起使用jQuery　4
1.3　技巧：检测jQuery版本　5
1.4　技巧：使用each()迭代数组　6
1.5　技巧：使用map()操作数组　7
1.6　技巧：使用数组元素　8
1.7　技巧：使用index()获取元素的位置　10
1.8　技巧：使用grep()在数组中查找元素　11
1.9　技巧：使用length()检测元素集的大小　12
1.10　技巧：获取HTML5的data-属性　12
1.11　技巧：使用data()存储元素数据　13
1.12　技巧：使用removeData()移除元素数据　14
1.13　技巧：检验和操作变量　16
1.14　技巧：使用extend()扩展对象　18
1.15　技巧：序列化表单中的数据　19
1.16　技巧：检测浏览器支持的特性　20
小结　21
第2章　选取元素　22
2.1　技巧：使用add()合并两个元素集　22
2.2　技巧：使用filter()优化选取集　23
2.3　技巧：使用find()和children()选取后代元素　24
2.4　技巧：使用has()选取元素、使用is()检测元素　25
2.5　技巧：使用伪选择器选取表单元素　26
2.6　技巧：嵌套选择器　27
2.7　技巧：模拟CSS的hover选择器　28
2.8　技巧：使用contains()选取文本　29
2.9　示例：高亮显示单个词　30
2.10　技巧：创建自定义选择器　31
2.11　技巧：限制选取上下文的范围　32
小结　33
第3章　修改页面　34
3.1　技巧：添加类　34
3.2　示例：移除类　35
3.3　技巧：生成类名　36
3.4　技巧：更改property和attribute　37
3.5　技巧：更改元素的HTML内容　39
3.6　技巧：使用append()和appendTo()添加内容　40
3.7　示例：添加函数的返回结果　41
3.8　技巧：使用prepend()和prependTo()添加内容　42
3.9　技巧：使用jQuery动态生成HTML　43
3.10　技巧：添加和分离元素　44
3.11　技巧：使用clone()复制元素　45
3.12　技巧：在指定的位置插入元素　47
3.13　示例：向上和向下移动列表项　48
3.14　技巧：移除元素　49
3.15　技巧：包裹和解包元素　51
小结　53
第4章　监听和响应事件　54
4.1　技巧：监听鼠标事件　54
4.2　示例：在画布上绘图　56
4.3　技巧：监听键盘事件　57
4.4　技巧：监听表单事件　59
4.5　技巧：监听滚轮事件　60
4.6　技巧：使用live()和die()添加中枢事件监听器　61
4.7　技巧：使用delegate()将事件委托给指定的祖先元素　63
4.8　技巧：使用proxy()更改函数的执行上下文　65
小结　66
第5章　与服务器通信　67
5.1　技巧：使用Node.js安装示例服务器　67
5.2　技巧：执行GET请求　69
5.3　技巧：直接加载HTML　70
5.4　技巧：使用Promise处理结果　71
5.5　技巧：处理服务器错误　72
5.6　技巧：捕获“页面未找到”结果　73
5.7　技巧：处理页面重定向　74
5.8　技巧：设置请求的超时时间　76
5.9　技巧：传递HTTP首部　77
5.10　示例：在服务器端验证表单输入　78
5.11　技巧：加载XML　79
5.12　技巧：监听AJAX事件　80
5.13　技巧：从外部服务器读取JSONP　81
小结　82
第二部分　UI
第6章　与用户交互　84
6.1　下载和安装jQuery UI　84
6.2　技巧：拖曳元素　85
6.2.1　为可拖曳元素添加样式　85
6.2.2　设置可拖曳组件的选项　86
6.2.3　捕获可拖曳组件的事件　89
6.2.4　调用可拖曳组件的方法　90
6.3　技巧：放置元素　91
6.3.1　为可放置元素添加样式　92
6.3.2　设置可放置组件的选项　92
6.3.3　捕获可放置组件的事件　93
6.3.4　调用可放置组件的方法　94
6.4　技巧：使用可排序组件更改元素的顺序　94
6.4.1　为可排序元素添加样式　95
6.4.2　设置可排序组件的选项　96
6.4.3　捕获可排序组件的事件　97
6.4.4　调用可排序组件的方法　100
6.5　示例：对树结构中的元素排序　100
6.6　技巧：从无序列表中选取元素　101
6.6.1　为可选取元素添加样式　103
6.6.2　设置可选取组件的选项　103
6.6.3　捕获可选取组件的事件　103
6.6.4　调用可选取组件的方法　105
6.7　示例：在树结构中选取元素　105
6.8　技巧：调整元素大小　106
6.8.1　为可调整大小元素添加样式　107
6.8.2　设置可调整大小组件的选项　107
6.8.3　捕获可调整大小组件的事件　108
6.8.4　调用可调整大小组件的方法　109
小结　109
第7章　与微件交互　110
7.1　技巧：使用折叠菜单微件组织内容　110
7.1.1　为折叠菜单元素添加样式　111
7.1.2　设置折叠菜单的选项　112
7.1.3　捕获折叠菜单的事件　114
7.1.4　调用折叠菜单的方法　115
7.2　技巧：使用自动补全微件提示输入值　116
7.2.1　为自动补全元素添加样式　117
7.2.2　设置自动补全的选项　117
7.2.3　捕获自动补全的事件　119
7.2.4　调用自动补全的方法　120
7.3　技巧：将元素转换为按钮微件　120
7.3.1　为按钮元素添加样式　121
7.3.2　设置按钮的选项　122
7.3.3　捕获按钮的事件　123
7.3.4　调用按钮的方法　123
7.4　示例：使用按钮集装饰单选框　123
7.5　技巧：使用日历微件选择日期　124
7.5.1　为日历元素添加样式　125
7.5.2　设置日历的选项　126
7.5.3　捕获日历的事件　129
7.5.4　调用日历的方法　130
7.6　技巧：使用对话框微件引起注意　131
7.6.1　为对话框元素添加样式　132
7.6.2　设置对话框的选项　133
7.6.3　捕获对话框的事件　134
7.6.4　调用对话框的方法　136
7.7　技巧：使用进度条微件显示进程的状态　137
7.7.1　为进度条元素添加样式　138
7.7.2　设置进度条的选项　138
7.7.3　捕获进度条的事件　138
7.7.4　调用进度条的方法　139
7.8　技巧：使用滑块微件获取数字　139
7.8.1　为滑块元素添加样式　140
7.8.2　设置滑块的选项　140
7.8.3　捕获滑块的事件　141
7.8.4　调用滑块的方法　142
7.9　技巧：使用选项卡微件导航页面　142
7.9.1　为选项卡元素添加样式　144
7.9.2　设置选项卡的选项　145
7.9.3　捕获选项卡的事件　146
7.9.4　调用选项卡的方法　147
小结　148
第三部分　jQuery Mobile
第8章　更改外观　150
8.1　更改jQuery UI组件的样式　150
8.2　使用jQuery Core创建动画　151
8.3　技巧：使用jQuery UI的颜色动画　152
8.4　技巧：使用jQuery Core中的fade和slide特效来隐藏元素　153
8.5　技巧：使用jQuery UI添加图形特效　155
8.6　技巧：使用jQuery UI的添加和移除CSS类的动画　156
8.7　技巧：以图表的方式显示jQuery UI中的所有缓动函数　157
8.8　技巧：显示jQuery UI中的所有图标　159
8.9　技巧：使用Promise在动画结束时执行代码　161
8.10　技巧：使用queue和dequeue在动画之间执行代码　162
小结　164
第9章　使用jQuery Mobile来导航页面　165
9.1　技巧：搭建jQuery Mobile基础页面　165
9.2　技巧：用单个HTML文件服务多张页面　166
9.3　技巧：更改标题元素　168
9.4　技巧：使用AJAX加载外部页面　169
9.5　技巧：显示页面正在加载的信息　171
9.6　技巧：不使用AJAX而链接至外部页面　173
9.7　技巧：指定过渡动画　174
9.8　技巧：指定自定义的过渡动画　175
9.9　技巧：监听Mobile事件　177
9.10　技巧：生成回退按钮　180
9.11　技巧：在页面下方添加footer　181
9.12　技巧：跨页面时固定footer　183
9.13　技巧：将footer的位置保持固定　184
9.14　技巧：隐藏和显示footer　186
9.15　技巧：优化header和footer以便全屏查看　188
9.16　技巧：使用主题来更改配色方案　189
9.17　技巧：使用多个列　191
9.18　技巧：利用JavaScript调用来变更页面　192
9.19　技巧：利用JavaScript调用加载页面　195
9.20　技巧：向jQuery Mobile中的DOM结点添加数据　196
9.21　技巧：利用jQuery Mobile的辅助函数　197
小结　200
第10章　与jQuery Mobile交互　201
10.1　技巧：在content里面显示工具栏　201
10.2　技巧：显示警告栏　202
10.3　技巧：向footer元素中添加菜单栏　203
10.4　技巧：使用导航栏进行导航　204
10.5　技巧：使用collapsible来显示和隐藏元素　207
10.6　技巧：使用collapsible集合来添加折叠菜单的行为　209
10.7　技巧：使用表单字段来获取基本的文本框　210
10.8　技巧：获取日历输入框　211
10.9　技巧：显示输入框时使用替代键盘　213
10.10　技巧：显示专门的输入框　214
10.11　技巧：使用滑块来获取整数　216
10.12　技巧：使用快速开关来设置二进制值　217
10.13　技巧：使用单选框选取单个元素　218
10.14　技巧：使用复选框选取多个元素　219
10.15　技巧：从下拉列表选取元素　221
10.16　技巧：关闭jQuery Mobile而显示原生的表单　223
10.17　技巧：显示元素列表　224
10.18　技巧：筛选列表元素　232
10.19　技巧：将表单元素按列表分组　233
小结　234
第四部分　插件
第11章　创建插件　236
11.1　技巧：构建简单的静态插件　236
11.2　技巧：创建简单的“有上下文”的插件　237
11.3　技巧：链接jQuery函数和插件　238
11.4　技巧：参数化插件　239
11.5　技巧：提供默认参数　240
11.6　技巧：使用方法来操作插件　242
11.7　技巧：创建“创建插件的插件”　244
11.8　技巧：注册和调用回调函数　246
11.9　技巧：向回调函数传递上下文　247
11.10　技巧：返回Deferred对象来分别调用成功和出错时的回调函数　249
11.11　技巧：返回Promise来保护内部实现　250
11.12　技巧：演示Promise 的保护机制　251
11.13　技巧：使用Promise来控制流的结构　252
11.14　技巧：在调用最后的回调函数之前显示进度　253
11.15　技巧：向回调函数传递上下文　255
11.16　技巧：向进度函数传递上下文　256
小结　257
第12章　使用第三方插件　259
12.1　技巧：显示模态框　259
12.2　技巧：使用下拉菜单　261
12.3　技巧：使用滚动侦测　263
12.4　技巧：变换选项卡　265
12.5　技巧：添加工具提示　267
12.6　技巧：添加提示面板　269
12.7　技巧：警告用户　270
12.8　技巧：按钮控件　272
12.9　技巧：折叠内容　274
12.10　技巧：将内容置于轮播插件中　276
12.11　技巧：将输入提示用于自动补全　278
小结　280
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>jQuery、jQuery UI及jQuery Mobile技巧与示例
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Unity开发实战
译者序
前言
第1章　Unity 4.X 入门
1.1　引言
1.2　安装Unity 4.X
1.3　设置首选项
1.4　了解和优化用户界面
1.5　把Unity中创建的资源另存为Prefab
1.6　了解Unity中的Content
1.7　导入自己的Content
1.8　导入Unity的包到项目中
1.9　导入自定义包到项目中
1.10　从项目中导出自定义包
1.11　添加自定义包到Unity的包快捷列表中
1.12　使用项目浏览视图
第2章　使用摄像机
2.1　引言
2.2　创建画中画效果
2.3　在不同摄像机之间切换
2.4　自定义镜头光晕效果
2.5　从屏幕内容制作纹理
2.6　伸缩可变焦的摄像机
2.7　制作检视摄像机
2.8　用Shuriken制作粒子效果
2.9　显示迷你地图
第3章　制作贴图和材质
3.1　引言
3.2　创建反射材质
3.3　创建自发光材质
3.4　创建高光纹理贴图
3.5　创建透明纹理贴图
3.6　使用cookie纹理模拟多云的户外环境
3.7　创建颜色选择对话框
3.8　通过GUI实时组合纹理
3.9　鼠标悬停时高亮显示材质
3.10　通过循环加载一组材质实现动画纹理（例如模拟视频）
3.11　禁用材质剔除
第4章　创建GUI
4.1　引言
4.2　显示数字时钟
4.3　显示指针时钟
4.4　用罗盘显示玩家的方向
4.5　用雷达指示对象的相对位置
4.6　为对应整数显示相应的图片
4.7　为对应浮点数和范围显示相应的图片
4.8　显示数字倒计时器
4.9　显示图形倒计时器（5，4，3，2，1——发射）
4.10　显示饼图样式的图形倒计时器
4.11　创建逐渐消失的消息
4.12　为单个对象拾取显示物品栏文本
4.13　为单个对象拾取显示物品栏图标
4.14　用一个通用的拾取类管理物品栏
4.15　用鼠标滚轮控制滚动条
4.16　实现自定义的鼠标光标图标
第5章　控制动画
5.1　引言
5.2　配置一个人物角色的Avatar和空闲动画
5.3　用Root Motion和 Blend Trees移动人物角色
5.4　用层和遮罩混合动画
5.5　通过脚本重写 Root Motion
5.6　把刚性道具加入到动画角色中
5.7　让动画角色投掷物体
5.8　把 ragdoll物理系统应用于人物角色
5.9　通过旋转人物角色的身躯瞄准
第6章　播放和处理声音
6.1　引言
6.2　让音调与动画速度相匹配
6.3　添加自定义的音量控件
6.4　用Reverb Zones模拟隧道环境
6.5　防止声音片断在开始播放后又重新开始
6.6　在对象自销毁之前播放声音
6.7　制作动态配乐
第7章　使用外部资源文件和设备
7.1　引言
7.2　通过 Unity Default Resources加载外部资源文件
7.3　通过手动保存文件到Unity的资源文件夹加载外部文件
7.4　通过从互联网下载文件加载外部资源文件
7.5　使用静态属性保存和加载玩家数据
7.6　使用 PlayerPrefs保存和加载玩家数据
7.7　在游戏中保存截屏
7.8　使用Zigfu示例在Unity中用微软的Kinect控制角色
7.9　用微软的Kinect控制器让角色动起来
7.10　通过从微软的Kinect控制器保存移动来自制mocap
7.11　用PHP/MYSQL制作排行榜
第8章　使用外部文本文件和XML数据
8.1　引言
8.2　用TextAsset类的公有变量加载外部文本文件
8.3　用 C#文件流加载外部文本文件
8.4　用C#文件流保存外部文本文件
8.5　加载并解析外部的XML 文件
8.6　用XMLWriter手动创建XML文本数据
8.7　通过序列化自动创建XML文本数据
8.8　通过XMLDocument.Save()直接保存XML到文本文件来创建XML文本文件
第9章　管理对象状态和控制对象移动
9.1　引言
9.2　通过玩家的控制器控制立方体的移动
9.3　控制对象的朝向行为
9.4　控制对象到对象的移动（寻找、逃离、跟随一段距离）
9.5　通过flocking控制一组对象移动
9.6　以前进速度发射实例化的物体
9.7　寻找一个随机出生点
9.8　寻找最近的出生点
9.9　按路径点顺序跟随
9.10　用状态管理对象行为
9.11　用状态模式管理复杂的对象行为
第10章　用附加功能和优化选项改进游戏
10.1　引言
10.2　暂停游戏
10.3　实现慢镜头
10.4　用偏振投影实现3D 立体投影
10.5　阻止游戏被托管在未知服务器上
10.6　用代码分析识别性能的“瓶颈”
10.7　通过在“死亡”时间销毁对象减少对象的数量
10.8　尽可能通过禁用对象减少启用对象的数量
10.9　通过委托和事件（避免SendMessage）改进效率
10.10　用Coroutine定期执行函数并且独立于帧率
10.11　用几个带有Coroutine的帧分摊大计算量
10.12　缓存，而不是使用反射和查找对象
第11章　利用Unity专业版
11.1　引言
11.2　用景深动态地聚焦对象
11.3　创建后视镜
11.4　在场景中播放视频
11.5　用音频滤镜模拟水下环境
11.6　加载和播放外部电影文件
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Unity开发实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node.js by Examples
第一章 Node.js 基础
理解 node.js 架构，安装 node.js, 定义和使用模块，管理和分发包，内置模块介绍，小结
第二章 架构项目
应用程序基本层面介绍，任务运行器和构建系统，发现 Gulp，测试驱动开发TDD，MVC模式，REST API 概念介绍
第三章 管理资产
使用node.js服务文件，css预处理器，打包客户端JS，交付HTML模板，小结
第四章 开发 MVC 层
当前设定演进，实现router，构造程序入口，定义一个控制器，管理我们的视图，创建一个模型，小结
第五章 管理用户
和 MongoDB 数据库一起工作，从之前章节扩展代码，注册一个新用户，使用 session 进行用户鉴权，管理用户profile，小结
第六章 添加朋友关系能力
查找朋友，标记一个用户为朋友，在profile页面上显示链接的用户，小结
第七章 发布内容
第8章 创建页面和事件
第9章 标记，共享和点赞
第10章 添加实时聊天
第11章 测试用户界面
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node.js by Examples
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Ext JS实战（第2版）
第一部分 Ext JS 4.0入门
第1章　功夫在框架外　　2
1.1　初识Ext JS　　2
1.1.1　丰富的API文档　　3
1.1.2　用预制部件快速开发　　5
1.2　你需要知道的　　5
1.3　Ext JS部件之旅　　5
1.3.1　容器和布局初探　　7
1.3.2　其他容器的运作　　8
1.3.3　数据绑定视图　　9
1.3.4　“枝繁叶茂”的树形面板　　11
1.3.5　表单输入框　　12
1.3.6　其他部件　　14
1.4　Ext JS 4.0的新特性　　15
1.4.1　呀！适配层不见了！　　15
1.4.2　新的类系统　　15
1.4.3　数据包　　16
1.4.4　布局：代码大爆炸　　16
1.4.5　新停靠系统　　17
1.4.6　网格面板的改进　　17
1.4.7　树形面板如今更接近网格面板　　18
1.4.8　图形和图表　　19
1.4.9　新的CSS样式架构　　19
1.4.10　新MVC架构　　20
1.4.11　捆绑打包工具　　20
1.5　下载和配置　　20
1.6　亲手一试　　22
1.7　小结　　24
第2章　DOM操作　　25
2.1　用 Ext JS启动代码　　25
2.2　用Ext.Element管理DOM元素　　27
2.2.1　框架的核心　　27
2.2.2　首次使用Ext.Element　　28
2.2.3　创建子节点　　29
2.2.4　删除子节点　　32
2.2.5　配合Ext.Element使用Ajax　　33
2.3　使用模板和XTemplate　　34
2.3.1　使用模板　　34
2.3.2　用XTemplate执行循环操作　　37
2.3.3　XTemplate的高阶应用　　38
2.4　小结　　40
第3章　组件和容器　　41
3.1　组件模型　　41
3.1.1　XType和ComponentManager　　42
3.1.2　组件渲染　　44
3.2　组件生命周期　　46
3.2.1　初始化　　46
3.2.2　渲染　　48
3.2.3　销毁　　50
3.3　容器　　51
3.3.1　构建一个带子元素的容器　　52
3.3.2　处理子元素　　53
3.4　查询组件　　54
3.5　视口容器　　56
3.6　小结　　57
第二部分 Ext JS组件
第4章　核心UI组件　　60
4.1　面板　　60
4.1.1　构建一个复杂的面板　　61
4.1.2　添加按钮和工具　　63
4.1.3　在一个面板上停靠元素　　65
4.1.4　权重很重要　　67
4.2　显示窗口对话框　　69
4.2.1　构建一个窗口　　70
4.2.2　更多窗口配置　　71
4.3　消息框　　73
4.3.1　警告用户　　73
4.3.2　MessageBox的高阶方法　　74
4.3.3　显示一个动画式等待对话框　　75
4.4　组件也可以存活在标签面板中　　77
4.4.1　构建第一个标签面板　　78
4.4.2　你应该知道的标签管理方法　　80
4.5　小结　　81
第5章　探究布局　　82
5.1　布局管理器如何工作　　82
5.1.1　组件布局　　82
5.1.2　容器布局　　83
5.2　Auto布局　　83
5.3　Anchor布局　　85
5.4　Absolute布局　　88
5.5　Fit布局　　89
5.6　Accordion布局　　90
5.7　Card布局　　93
5.8　Column布局　　95
5.9　HBox和VBox布局　　97
5.10　Table布局　　100
5.11　Border布局　　103
5.12 小结　　107
第6章　Ext JS中的表单　　108
6.1　基本输入框　　108
6.1.1　输入框和校验　　109
6.1.2　密码和文件选择框　　111
6.1.3　构建多行文本框　　112
6.1.4　便利的数字输入框　　112
6.2　用组合框实现提前键入　　113
6.2.1　构建一个本地组合框　　113
6.2.2　实现一个远程组合框　　115
6.2.3　解构组合框　　118
6.2.4　自定义组合框　　118
6.3　时间输入框　　119
6.4　HTML编辑器　　120
6.4.1　构建第一个HTML编辑器　　120
6.4.2　处理缺少校验的问题　　121
6.5　选择日期　　121
6.6　复选框和单选按钮　　122
6.7　表单面板　　124
6.7.1　检视正在构建的内容　　125
6.7.2　构建字段集　　125
6.7.3　创建标签面板　　128
6.8　数据提交和加载　　130
6.8.1　提交表单的传统方式　　130
6.8.2　通过Ajax提交数据　　130
6.8.3　把数据加载到表单中　　132
6.9　小结　　134
第7章　数据存储　　135
7.1　介绍数据存储　　135
7.1.1　支持类　　136
7.1.2　数据是如何流动的　　137
7.1.3　关于数据代理　　138
7.1.4　模型和读取器　　139
7.2　读取和保存数据　　140
7.2.1　读取数组数据　　141
7.2.2　读取JSON数据　　143
7.2.3　读取XML数据　　145
7.3　带写入器的数据存储　　146
7.3.1　校验模型数据　　148
7.3.2　同步数据　　150
7.4　关联数据　　151
7.5　小结　　154
第8章　网格面板　　155
8.1　网格面板简介　　155
8.2　构建一个简单的网格面板　　157
8.3　高级网格面板构建　　159
8.3.1　你在构建什么　　159
8.3.2　所需的数据存储和模型　　159
8.3.3　创建列　　160
8.3.4　配置高级网格面板　　161
8.3.5　给网格面板配置一个容器　　162
8.3.6　缓冲滚动分页　　164
8.3.7　为交互应用事件处理程序　　166
8.4　在网格面板上编辑数据　　168
8.4.1　启用编辑插件　　169
8.4.2　浏览一下你的可编辑网格面板　　173
8.5　加入CRUD　　174
8.5.1　添加保存和拒绝逻辑　　174
8.5.2　保存和拒绝修改　　175
8.5.3　添加创建和删除功能　　176
8.5.4　使用创建和删除　　178
8.6　小结　　180
第9章　深入探究树形面板　　181
9.1　树形面板理论　　181
9.1.1　树形面板关键词　　181
9.1.2　深入根节点　　182
9.2　“种下”你的第一棵树　　183
9.3　培育动态树形面板　　185
9.3.1　创建一个远程加载面板　　186
9.3.2　为树（树形面板）“施肥”　　187
9.4　在树形面板上实现CRUD　　189
9.4.1　显示上下文菜单　　189
9.4.2　添加编辑逻辑　　193
9.4.3　着手删除　　196
9.4.4　为树形面板创建节点　　198
9.5　小结　　200
第10章　绘画和图表　　201
10.1　绘制形状　　201
10.2　绘图概念　　202
10.3　表面子画面　　202
10.3.1　绘制子画面　　204
10.3.2　管理位置和大小　　205
10.3.3　自适应大小的子画面　　207
10.4　子画面交互　　207
10.5　掌控路径　　211
10.6　深入了解图表　　213
10.7　实现笛卡儿图表　　215
10.7.1　配置轴　　215
10.7.2　添加序列　　218
10.7.3　改进可视化助手　　219
10.7.4　添加定制形状　　222
10.7.5　同一个图表中的多序列　　224
10.8　定制主题　　226
10.9　饼图　　230
10.10　小结　　232
第11章　用Ext Direct实现远程方法调用　　233
11.1　使两端相见　　233
11.2　对比Ext Direct和REST　　235
11.3　服务器端配置　　236
11.3.1　它是怎样工作的　　236
11.3.2　远程方法配置　　236
11.3.3　路由　　237
11.4　远程方法　　238
11.4.1　配置路由器　　238
11.4.2　启用Ext Direct　　240
11.5　直接调用远程方法　　243
11.6　启用CRUD 的Ext.data.DirectStore　　245
11.7　小结　　248
第12章　拖放　　249
12.1　拖放工作流　　249
12.1.1　拖放的生命周期　　250
12.1.2　自上而下审视拖放类　　251
12.1.3　一切尽在覆盖之中　　252
12.1.4　拖放总是在组中工作的　　253
12.2　拖放：一个基础的例子　　254
12.2.1　创建一个小型工作区　　254
12.2.2　配置元素使之可拖动　　255
12.2.3　分析Ext.dd.DD 的DOM元素变化　　256
12.2.4　增加泳池和热水浴缸作为放置目标　　257
12.3　完成你的拖放实现　　258
12.3.1　增加放入引导　　259
12.3.2　增加有效放入　　261
12.3.3　实现无效放入　　263
12.4　使用DDProxy　　264
12.5　视图的拖放　　268
12.5.1　构建视图　　268
12.5.2　添加拖动手势　　272
12.5.3　使用放入　　275
12.6　网格面板的拖放　　278
12.7　树形面板上的拖放　　282
12.7.1　构建树形面板　　282
12.7.2　启用拖放　　284
12.7.3　采用灵活的约束　　284
12.8　小结　　287
第三部分 构建一个应用
第13章　类系统基础　　290
13.1　经典的JavaScript继承　　290
13.1.1　创建一个基类　　291
13.1.2　创建一个子类　　292
13.2　Ext JS的继承　　293
13.2.1　创建一个基类　　294
13.2.2　创建一个子类　　295
13.3　扩展Ext JS组件　　296
13.3.1　想想你在构建什么　　297
13.3.2　扩展GridPanel　　298
13.3.3　实践你的扩展　　299
13.4　用插件来救援　　302
13.4.1　插件的剖析　　302
13.4.2　开发一个插件　　303
13.5　使用Ext JS加载器的动态加载类　　306
13.5.1　动态加载一切　　306
13.5.2　应该按需加载　　308
13.5.3　采用混合的方案　　309
13.6　小结　　311
第14章　构建一个应用　　312
14.1　像Web UI开发者一样思考　　312
14.2　应用的（基础）结构　　313
14.2.1　在命名空间内进行开发　　313
14.2.2　动态依赖加载　　315
14.3　开启Survey 应用　　318
14.3.1　从想法到代码实现　　318
14.3.2　用Sencha Cmd加快开始的步伐　　319
14.3.3　引导Survey项目　　321
14.3.4　数据驱动的应用程序模型324
14.3.5　给应用程序增加模型　　325
14.3.6　添加数据存储　　329
14.3.7　创建验证表单　　330
14.3.8　插入第一个控制器　　332
14.3.9　Survey视图　　333
14.3.10　Survey控制器　　336
14.4　打包　　342
14.5　小结　　344
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Ext JS实战（第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>AngularJS开发秘籍
目录
第1章学习JavaScript
1.1使用Nodejs创建JavaScfipt开发环境
1.1.1创建Nodeds
1.1.2使用Nodeds运行JavaScfipt
1.1.3使用Nodejs创建Express Web服务器
1.2定义变量
1.3了解JavaScript数据类型
1.4使用运算符
1.4.1算术运算符
1.4.2赋值运算符
1.4.3应用比较和条件运算符
1.5实现循环
1.5.1 while循环
1.5.2 do／while循环
1.5 3 for循环
1.5.4 for／in循环
1.5 5中断循环
1.6创建函数
1.6.1定义函数
1.6.2向函数传递变量
1.6.3从函数返叫值
1.6.4使用匿名函数
1.7理解变量作用域
1.8使用JavaScript对象
1.8.1使用对象语法
1.8.2创建白定义对象
1.8.3使用原型对象模式
1.9操作字符串
1.9.1合并字符串
1.9.2在字符串中搜索子字符串
1.9.3替换字符串中的单词
1.9.4将字符串拆分为数组
1.10使用数组
1.10.1合并数组
1.10.2迭代数组
1.10.3将数组转换为字符串
1.10.4检查数组中是否包含特定的数据项
1.10.5向数组中添加和从数组中移除数据项
1.11添加错误处理
1.11.1 try／catch块
1.11.2抛出自定义错误
1.11.3使用Finally
1.12小结
第2章开始使用AngularJS
2.1选择AngularJS的原因
2.2了解AngularJS
2.2.1模块
2.2.2作用域和数据模型
2.2.3模板视图和指令
2.2.4表达式
2.2.5控制器
2.2.6数据绑定
2.2.7服务
2.2.8依赖注入
2.2.9编译器
2.3 AngularJS生命周期概览
2.3.1启动阶段
2.3.2编译阶段
2.3.3运行时数据绑定阶段
2.4责任分离
2.5在现有JavaScript和jQuery代码中集成AngularJS
2.6在环境中添加AngularJS
2.7在HTML文档中启动AngularJS
2 8使用全局API
2.9创建基本的AngularJS应用
2.9.1加载AngularJS库和主模块
2.9.2定义AngularJS应用根元素
2.9.3在模板中添加控制器
2.9.4实现作用域模型
2 10在AngularJS应用中使用jQuery或者jQuery Lite
2.10.1 jQuetyLite
2.10.2访问jQueue或者jQuery Life库
2.10.3直接访问jQuery或者jOueryLite
2.11小结
第3章了解AngularJS应用动态
第4章实现作用域作为数据模型
第5章使用AngularJS模板创建视图
第6章在AngularJS视图中实现指令
第7章创建自定义指令用于扩展HTML
第8章使用事件与模型中的数据进行交互
第9章在Web应用中实现AngularJS服务
第10章创建自定义AngularJS服务
第11章以Angular JS方式创建富Web应用组件
附录A测试Angular JS应用
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>AngularJS开发秘籍
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入学习
第一部分  JavaScript总览
第1章什么是JavaScript
1. 1  基于对象的技术
1. 1. 1  面向对象的JavaScript
1. 1. 2  模块化程序设计

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入学习
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Dreamweaver MX 2004网页设计标准教材（中文版）
第1课 DreamweaverMX2004基础知识 
第2课 在页面添加内容 
第3课 使用图形
第4课 创建链接
第5课 使用表格进行设计 
第6课 开发样式表
第7课 使用库项目 
第8课 使用模板
第9课 创建框架
第10课 创建表单
第11课 添加交互性
第12课 管理站点
第13课 辅助功能和测试 
……
附录A 正则表达式
附录B Windows快捷键
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Dreamweaver MX 2004网页设计标准教材（中文版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入浅出XML
第1章 XML概述
第2章 XML语言基础
第3章 创建DTD
第4章 XML Schema
第5章 级联样式单CSS1
第6章 级联样式单CSS2
第7章 扩展样式语言XSL
第8章 XML链接
第9章 文档对象模型
第10章 XML的应用
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入浅出XML
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>jQuery实战
第一部分 jQuery入门
第1章 jQuery介绍
第二部分 jQuery核心
第2章 选择元素
第3章 操作jQuery集合
第4章 使用特性、属性和数据
第5章 使用jQuery操作页面
第6章 事件本质
第7章 DVD光盘定位器
第8章 使用动画与特效
第9章 jQuery工具函数操作DOM
第10章 使用Ajax与服务器交互
第11章 demo:Ajax驱动的联系方式表单
第三部分 高级主题
第12章 jQuery扩展插件
第13章 使用Deferred避免回调地狱
第14章 使用QUnit进行单元测试
第15章 jQuery大型项目开发
附录A JavaScript高级编程必备知识
索引
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>jQuery实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Meteor实战
第一部分　看，一颗流星！
第1章　构建应用程序的更好方式　　2
1.1　Meteor简介　　3
1.1.1　Meteor背后的故事　　3
1.1.2　Meteor栈　　4
1.1.3　同构框架：全栈式JavaScript　　5
1.1.4　在浏览器中处理：在分布式平台上运行　　7
1.1.5　响应式编程　　8
1.2　Meteor的工作原理　　10
1.2.1　核心项目　　11
1.2.2　Isobuild和CLI工具　　13
1.2.3　客户端代码和服务器端代码　　14
1.3　优势和劣势　　15
1.3.1　使用Meteor的好处　　16
1.3.2　使用Meteor时的挑战　　17
1.4　创建新的应用程序　　19
1.4.1　创建新项目　　19
1.4.2　启动应用　　20
1.5　剖析默认项目　　21
1.5.1　helloWorld.css　　21
1.5.2　helloWorld.html　　21
1.5.3　helloWorld.js　　22
1.6　总结　　24
第2章　我的冰箱：一个响应式游戏　　25
2.1　应用概述　　25
2.2　初始设置　　26
2.3　创建布局　　27
2.3.1　设置样式　　27
2.3.2　添加模板　　29
2.4　向数据库中实时添加内容　　31
2.4.1　在数据库中存储物品　　31
2.4.2　将数据连接到模板　　33
2.4.3　添加一组预定义的物品　　35
2.5　把物品放进冰箱里　　36
2.5.1　为项目添加jQuery UI　　36
2.5.2　为物品定义拖放目标　　37
2.5.3　允许物品被拖动　　39
2.6　部署应用到meteor.com并使用它　　40
2.7　总结　　40
第二部分　3，2，1——撞击！
第3章　模板　　42
3.1　模板介绍　　42
3.2　使用模板　　44
3.2.1　Blaze引擎　　44
3.2.2　组织模板文件　　45
3.3　创建动态HTML模板　　45
3.3.1　双重和三重大括号标签
（表达式）　　46
3.3.2　包含标签（局部模板）　　48
3.3.3　块标签　　50
3.3.4　辅助函数　　53
3.4　处理事件　　58
3.4.1　模板的事件映射　　58
3.4.2　事件传播　　59
3.4.3　阻止浏览器的默认行为　　60
3.5　模板生命周期　　61
3.6　总结　　63
第4章　数据　　64
4.1　Meteor的默认数据源　　66
4.1.1　什么使数据源具有响应性　　67
4.1.2　如何将响应式数据连接到
函数　　68
4.2　构建房屋保姆应用　　69
4.2.1　设置模板　　71
4.2.2　连接到数据库并声明集合　　71
4.3　Session对象　　72
4.3.1　Session对象简介　　73
4.3.2　使用Session存储选定的
下拉值　　73
4.3.3　使用Tracker.autorun创建响应性上下文　　75
4.4　MongoDB集合　　76
4.4.1　在MongoDB中查询文档　　77
4.4.2　Meteor的集合　　78
4.4.3　初始化集合　　78
4.4.4　查询集合　　79
4.4.5　在模板中显示集合数据　　80
4.4.6　在集合中更新数据　　83
4.4.7　向集合中插入新数据　　85
4.4.8　从集合中删除数据　　87
4.5　总结　　88
第5章　全响应式编辑　　89
5.1　响应式编辑的工作流程　　89
5.2　响应式前端与DOM操作　　90
5.3　在本地集合中进行临时更改　　94
5.4　在表单中显示集合数据　　97
5.5　使用本地集合进行响应式更新　　100
5.5.1　houseForm模板的事件
映射　　101
5.5.2　plantFieldset模板的事件映射　　102
5.6　实现一个简单的通知系统　　105
5.6.1　添加通知模板　　106
5.6.2　添加状态属性　　106
5.6.3　使用会话变量触发通知　　107
5.7　总结　　109
第6章　用户、认证和权限　　110
6.1　将用户加入应用　　111
6.1.1　添加密码认证　　111
6.1.2　注册和密码重置　　113
6.1.3　设置邮件　　117
6.2　使用OAuth认证用户　　120
6.2.1　OAuth介绍　　121
6.2.2　整合Facebook认证　　122
6.2.3　集成其他的OAuth提供者　　126
6.3　管理用户权限、角色和组　　127
6.4　总结　　130
第7章　数据交换　　131
7.1　发布和订阅　　132
7.1.1　publish()和subscribe()　　133
7.1.2　全局订阅　　134
7.1.3　模板级订阅　　135
7.1.4　参数化订阅　　136
7.1.5　向客户端独有的集合发布汇总数据　　138
7.1.6　将聚合发布变成响应式
数据源　　141
7.1.7　通过用户ID限制数据
可见性　　143
7.2　Meteor的方法　　145
7.2.1　删除insecure包　　146
7.2.2　使用方法将数据写入集合　　147
7.3　总结　　150
第8章　路由　　151
8.1　Web应用中的路由　　151
8.2　客户端路由　　154
8.2.1　添加Iron.Router　　155
8.2.2　创建第一个路由　　155
8.2.3　基于路由定义布局　　157
8.2.4　根据路由设置数据上下文　　161
8.2.5　使用Iron.Router订阅
数据　　163
8.3　高级的路由方法　　166
8.3.1　使用命名路由和链接辅助
函数　　166
8.3.2　让活动路由有更好的导航
链接　　167
8.3.3　等待外部库加载　　168
8.3.4　将路由组织为控制器　　169
8.3.5　使用钩子扩展路由过程　　171
8.3.6　创建Iron.Router插件　　172
8.4　用于REST API的服务器端路由　　173
8.5　总结　　175
第9章　包　　176
9.1　所有应用的基础　　176
9.2　使用Isopack　　177
9.2.1　版本求解器和有语义的
版本号　　178
9.2.2　查找包　　179
9.2.3　添加和删除Isopack　　182
9.2.4　更新包　　183
9.3　使用npm包　　183
9.4　创建Isopack　　184
9.4.1　创建包　　185
9.4.2　声明包的元数据　　186
9.4.3　添加包的功能　　188
9.4.4　使用tinytest测试
Isopack　　191
9.4.5　发布　　194
9.5　总结　　195
第10章　高级服务器方法　　196
10.1　再次介绍Node.js　　196
10.1.1　同步代码　　197
10.1.2　异步代码　　198
10.2　使用纤维的异步功能　　200
10.2.1　将多任务引入事件循环　　200
10.2.2　使用wrapAsync为纤维
绑定回调函数　　203
10.2.3　为单个客户端解除方法调用
阻塞　　204
10.2.4　使用bindEnvironment
创建纤维　　206
10.3　整合外部API　　207
10.3.1　使用HTTP包进行RESTful调用　　208
10.3.2　使用同步方法查询API　　208
10.3.3　使用异步方法调用API　　209
10.4　将文件上传到集合　　211
10.5　总结　　215
第三部分　走出陨石坑
第11章　构建和调试　　218
11.1　Meteor的构建过程　　218
11.1.1　构建阶段　　220
11.1.2　使用--production选项
运行　　223
11.1.3　加载顺序　　223
11.1.4　通过包添加构建阶段　　226
11.1.5　添加自定义构建阶段　　227
11.2　访问正在运行的应用　　229
11.2.1　使用交互式服务器外壳　　229
11.2.2　使用node-inspector
进行调试　　230
11.3　创建浏览器应用　　232
11.3.1　使用Meteor.settings
进行应用配置　　232
11.3.2　构建Meteor项目　　233
11.4　创建移动应用　　235
11.4.1　使用Cordova的混合应用　　235
11.4.2　加入移动平台　　236
11.4.3　配置移动应用　　238
11.4.4　添加移动功能　　240
11.5　总结　　242
第12章　开始生产　　243
12.1　准备生产　　243
12.1.1　使用版本控制　　243
12.1.2　功能测试：Velocity框架　　245
12.1.3　估算和测试负载　　247
12.1.4　服务器管理　　249
12.1.5　清单　　250
12.2　安装和部署　　250
12.2.1　最简单的部署：
meteor.com　　251
12.2.2　无所不包的主机：云
供应商　　253
12.2.3　最灵活的方式：手动
设置　　256
12.3　将各部分连接起来　　259
12.3.1　环境变量　　260
12.3.2　Meteor和MongoDB的
连接　　260
12.4　扩展策略　　261
12.4.1　使用冗余的主动?被动高
可用性　　262
12.4.2　单组件部署　　263
12.4.3　冗余和负载均衡　　263
12.4.4　绝对可用性　　265
12.5　总结　　266
附录A　安装Meteor　　267
附录B　MongoDB剖析　　271
附录C　设置nginx　　278
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Meteor实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>React Native 精解与实战
目录 Contents
前言
第Ⅰ部分　入门
第1章　React与React Native简介2
1.1　React简介2
1.2　React Native 简介9
1.3　React Native 前置知识点11
第2章　Node.js 简介与开发环境配置13
2.1　Node.js与npm简介13
2.2　React Native开发环境配置15
2.2.1　安装Node.js16
2.2.2　安装React Native18
2.2.3　代码编辑器以及推荐插件22
第3章　React Native工作原理与生命周期25
3.1　React Native框架及工作原理25
3.1.1　React Native与原生平台通信27
3.1.2　组件间通信27
3.2　React Native中的生命周期31
3.3　本章小结35
第4章　React Native页面布局36
4.1　CSS 3简介36
4.2　Flex弹性盒模型37
4.3　Flex属性详解与实例39
4.3.1　justify-content属性40
4.3.2　align-items属性42
4.3.3　align-self 属性45
4.3.4　flex-direction 属性48
4.3.5　flex-basis属性51
4.3.6　flex-wrap属性52
4.3.7　align-content 属性54
4.3.8　flex-grow 属性58
4.3.9　flex-shrink 属性60
4.3.10　order属性63
4.3.11　flex-flow属性64
4.3.12　flex属性64
4.4　React Native中的Flex属性65
4.5　本章小结65
第5章　React Native开发调试技巧与工具66
5.1　配置iOS开发环境66
5.2　配置 Android 开发环境70
5.3　常用调试属性的说明73
5.4　Chrome 中远程调试代码77
5.5　React Developer Tools 工具安装与应用80
5.6　本章小结82
第6章　React Native 组件详解83
6.1　React Native组件简介83
6.2　视图组件86
6.2.1　View组件介绍86
6.2.2　View组件实例87
6.3　底部导航 TabBar 组件92
6.3.1　TabBar 组件介绍92
6.3.2　iOS平台下TabBarIOS组件实例94
6.3.3　Android 平台下TabBar组件实例99
6.4　iOS 与 Android 的页面跳转102
6.4.1　NavigatorIOS 组件介绍102
6.4.2　NavigatorIOS组件实例104
6.4.3　react-native-navigation组件介绍108
6.4.4　react-native-navigation组件实例110
6.5　Image组件111
6.5.1　Image组件介绍111
6.5.2　Image组件实例112
6.6　Text组件114
6.6.1　Text组件介绍114
6.6.2　Text组件基本使用116
6.6.3　Text组件嵌套117
6.6.4　Text组件样式统一119
6.7　TextInput 组件122
6.7.1　TextInput 组件介绍122
6.7.2　TextInput 组件实例124
6.8　触摸处理类组件130
6.8.1　TouchableHighlight 组件介绍130
6.8.2　TouchableHighlight 组件实例131
6.8.3　TouchableNativeFeedback 组件介绍132
6.8.4　TouchableNativeFeedback 组件实例133
6.8.5　TouchableOpacity组件介绍133
6.8.6　TouchableOpacity 组件实例134
6.8.7　TouchableWithoutFeedback组件介绍134
6.9　Web View组件135
6.9.1　WebView 组件介绍135
6.9.2　WebView 组件实例137
6.10　ScrollView组件139
6.10.1　ScrollView 组件介绍139
6.10.2　ScrollView组件实例140
6.11　本章小结142
第7章　React Native API详解143
7.1　React Native API简介143
7.2　提示框145
7.2.1　Alert 介绍145
7.2.2　Alert实例145
7.3　App运行状态150
7.3.1　AppState 介绍150
7.3.2　AppState 实例150
7.4　异步存储152
7.4.1　AsyncStorage 介绍152
7.4.2　AsyncStorage 实例154
7.4.3　登录状态处理159
7.5　相机与相册API161
7.5.1　CameraRoll介绍161
7.5.2　相册/相机组件实例161
7.6　地理位置信息168
7.6.1　Geolocation介绍168
7.6.2　Geolocation实例169
7.7　设备网络信息175
7.7.1　NetInfo介绍175
7.7.2　NetInfo实例175
7.8　本章小结178
第8章　React Native网络请求详解179
8.1　RESTful API 简介179
8.2　React Native 中的网络请求180
8.3　ListView 组件184
8.4　React Native 网络请求与列表绑定方案186
8.5　本章小结192
第9章　常用React Native开源组件详解193
9.1　React Native 热门资源列表194
9.2　React Native 接入微博、微信、QQ 登录196
9.3　更加美观的组件库200
9.4　React Native图表202
9.5　react-native-gifted-listview205
9.6　react-native-vector-icons207
9.7　本章小结210
第Ⅱ部分　进阶
第10章　React Native运行原理与部署调试214
10.1　React Native运行原理214
10.2　iOS平台部署与调试220
10.3　Android平台部署与调试225
10.4　Android模拟器简介230
10.5　本章小结233
第11章　iOS平台与React Native混合开发234
11.1　iOS平台混合开发简介234
11.2　iOS平台混合开发原理详解235
11.2.1　iOS原生代码实现235
11.2.2　iOS项目编译设置237
11.2.3　React Native中调用混合开发代码239
11.2.4　iOS平台混合开发特性详解241
11.3　iOS平台混合开发实例249
11.3.1　iOS原生代码实现249
11.3.2　React Native调用混合开发代码250
11.4　本章小结252
第12章　Android平台与React Native混合开发253
12.1　Android平台混合开发简介253
12.2　Android平台混合开发原理详解254
12.2.1　Android原生代码实现254
12.2.2　Android原生模块注
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>React Native 精解与实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Java Script示例导学
第1章 JavaScript概述

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Java Script示例导学
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript1.5实例教程
第一部分　JavaScript初探
第1章　进入JavaScript的世界
1. 1　JavaScript无处不在
1. 2　为什么要学习JavaScript
1. 3　JavaScript的发展史

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaScript1.5实例教程
