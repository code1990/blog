>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Vue.js权威指南
第1 章 遇见Vue.js    1
1.1 MVX 模式是什么   1
1.1.1 MVC    1
1.1.2 MVP  2
1.1.3 MVVM   3
1.2 Vue.js 是什么  4
1.2.1 Vue.js 与其他框架的区别  4
1.2.2 如何使用Vue.js 10
1.2.3 Vue.js 的发展历史  11
第2 章 数据绑定 13
2.1 语法 13
2.1.1 插值   13
2.1.2 表达式  14
2.1.3 指令   14
2.2 分隔符  15
第3 章 指令 16
3.1 内部指令 16
3.1.1 v-if  16
3.1.2 v-show   17
3.1.3 v-else   18
3.1.4 v-model 19
3.1.5 v-repeat 22
3.1.6 v-for   30
3.1.7 v-text   32
3.1.8 v-html   32
3.1.9 v-bind   33
3.1.10 v-on   34
3.1.11 v-ref   35
3.1.12 v-el   36
3.1.13 v-pre   36
3.1.14 v-cloak 36
3.2 自定义指令  37
3.2.1 基础   37
3.2.2 高级选项   41
3.3 内部指令解析 47
3.4 常见问题解析 50
第4 章 计算属性 53
4.1 什么是计算属性   53
4.2 计算属性缓存 54
4.3 常见问题 56
4.3.1 计算属性getter 不执行的场景 56
4.3.2 在v-repeat 中使用计算属性  57
第5 章 表单控件绑定 59
5.1 基本用法 59
5.1.1 text 59
5.1.2 checkbox 59
5.1.3 radio   60
5.1.4 select   60
5.2 值绑定  62
5.3 v-model 修饰指令  63
5.3.1 lazy 63
5.3.2 debounce 64
5.3.3 number  64
5.4 修饰指令原理 64
5.4.1 lazy 64
5.4.2 debounce 65
5.4.3 number  66
第6 章 过滤器   67
6.1 内置过滤器  68
6.1.1 字母操作   68
6.1.2 json 69
6.1.3 限制   69
6.1.4 currency 72
6.1.5 debounce 73
6.2 自定义过滤器 73
6.2.1 fillter 语法   73
6.2.2 教你写一个filter   75
6.3 源码解析 76
6.3.1 管道实现   76
6.3.2 过滤器解析  77
6.4 常见问题解析 78
第7 章 Class 与Style 绑定 80
7.1 绑定HTML Class  80
7.1.1 对象语法   80
7.1.2 数组语法   82
7.2 绑定内联样式 82
7.2.1 对象语法   82
7.2.2 数组语法   83
7.2.3 自动添加前缀 84
第8 章 过渡 86
8.1 CSS 过渡 87
8.1.1 内置Class 类名   88
8.1.2 自定义CSS 类名  89
8.1.3 显式声明CSS 过渡类型 89
8.1.4 动画案例   89
8.1.5 过渡流程   90
8.2 JavaScript 过渡   92
8.3 渐进过渡 93
第9 章 Method   95
9.1 如何绑定事件 95
9.1.1 内联方式   95
9.1.2 methods 配置  96
9.1.3 $events 应用  97
9.2 如何使用修饰符   97
9.2.1 prevent  98
9.2.2 stop 98
9.2.3 capture   98
9.2.4 self  98
9.2.5 按键   99
9.3 Vue.js 0.12 到1.0 中的变化  99
9.3.1 v-on 变更   99
9.3.2 @click 缩写  100
第10 章 Vue 实例方法   101
10.1 实例属性  101
10.1.1 组件树访问 101
10.1.2 DOM 访问  102
10.1.3 数据访问  102
10.2 实例方法  102
10.2.1 实例DOM 方法的使用 102
10.2.2 实例Event 方法的使用 104
第11 章 组件   107
11.1 基础  108
11.1.1 注册  108
11.1.2 数据传递  110
11.1.3 混合  123
11.1.4 动态组件  126
11.2 相关拓展  129
11.2.1 组件和v-for  129
11.2.2 编写可复用组件 130
11.2.3 异步组件  130
11.2.4 资源命名约定   131
11.2.5 内联模板  132
11.2.6 片段实例  133
11.3 生命周期  134
11.4 开发组件  136
11.4.1 基础组件  136
11.4.2 基于第三方组件开发  141
11.5 常见问题解析   146
第12 章 表单校验   154
12.1 安装  154
12.2 基本使用  155
12.3 验证结果结构   156
12.4 验证器语法 158
12.4.1 校验字段名field 158
12.4.2 校验规则定义   160
12.5 内置验证规则   163
12.5.1 required   163
12.5.2 pattern 165
12.5.3 minlength  165
12.5.4 maxlength   166
12.5.5 min  167
12.5.6 max   167
12.6 与v-model 同时使用  168
12.7 重置校验结果   169
12.8 表单元素  169
12.9 各校验状态对应的class   172
12.9.1 自定义校验状态class  173
12.9.2 在其他元素上使用校验状态class 173
12.10 分组校验  174
12.11 错误信息  174
12.11.1 错误信息输出组件  177
12.11.2 动态设置错误信息  180
12.12 事件  182
12.12.1 单个字段校验事件  182
12.12.2 整个表单校验事件  183
12.13 延迟初始化   185
12.14 自定义验证器  186
12.14.1 注册自定义验证器  187
12.15 自定义验证时机 189
12.16 异步验证  192
12.16.1 注册异步验证器 192
12.16.2 验证器函数context   194
第13 章 与服务端通信   196
13.1.1 安装  197
13.1.2 参数配置  198
13.1.3 headers 配置 199
13.1.4 基本HTTP 调用 200
13.1.5 请求选项对象   202
13.1.6 response 对象   205
13.1.7 RESTful 调用   205
13.1.8 拦截器   207
13.1.9 跨域AJAX 208
13.1.10 Promise  210
13.1.11 url 模板   211
13.2 vue-async-data  212
13.2.1 安装  212
13.2.2 使用  212
13.3 常见问题解析   213
13.3.1 如何发送JSONP 请求 213
13.3.2 如何修改发送给服务端的数据类型   215
13.3.3 跨域请求出错   215
13.3.4 $.http.post 方法变为OPTIONS 方法   216
第14 章 路由与视图 217
14.1 如何安装  217
14.2 基本使用  218
14.3 视图部分  219
14.3.1 v-link  219
14.3.2 router-view  222
14.4 路由实例  222
14.4.1 实例化路由 222
14.5 组件路由配置   227
14.5.1 路由切换的各个阶段  227
14.5.2 各阶段的钩子介绍   230
14.6 路由匹配  236
14.6.1 动态片段  236
14.6.2 全匹配片段 237
14.6.3 具名路径  237
14.6.4 路由对象  238
14.7 transition 对象   239
14.8 嵌套路由  239
14.9 动态加载路由组件   241
14.10 实战  242
14.10.1 浏览器直接引用 242
14.10.2 Webpack 模块化开发 244
14.11 常见问题解析  250
第15 章 vue-cli 254
15.1 安装  254
15.2 基本使用  254
15.3 命令  257
15.3.1 init   257
15.3.2 list 257
15.4 模板  258
15.4.1 官方模板  258
15.4.2 自定义模板 258
15.4.3 本地模板  259
15.5 不错的工具包   259
15.5.1 commander  259
15.5.2 download-git-repo  259
15.5.3 inquirer 259
15.5.4 ora   260
第16 章 测试开发与调试  261
16.1 测试工具  261
16.1.1 ESLint 261
16.1.2 工具包   263
16.2 开发工具  264
16.2.1 Vue Syntax Highlight   264
16.2.2 Snippets 264
16.2.3 其他编辑器/IDE  265
16.3 调试工具  269
第17 章 scrat+Vue.js 的化学反应  271
17.1 浅谈前端工程化 271
17.2 前端工程化怎么做   271
17.3 scrat 简介  273
17.4 scrat+Vue.js 实现组件 275
17.5 案例分析  276
17.5.1 准备工作  277
17.5.2 代码实现  279
17.5.3 编译和发布 284
17.6 总结  287
第18 章 Vue.js 2.0   288
18.1 API 变更   288
18.1.1 全局配置  288
18.1.2 全局API  289
18.1.3 VM 选项   290
18.1.4 实例属性  294
18.1.5 实例方法  294
18.1.6 指令  296
18.1.7 特殊元素  297
18.1.8 服务端渲染 297
18.2 Virtual DOM   297
18.2.1 认识Virtual DOM 297
18.2.2 Virtual DOM 在Vue.js 2.0 中的实现   299
18.3 服务端渲染技术 315
18.3.1 普通服务端渲染 315
18.3.2 流式服务端渲染 320
18.4 总结  326
第19 章 源码篇——util 327
19.1 env 327
19.1.1 系统判断  328
19.1.2 属性支持  328
19.1.3 过渡属性  329
19.1.4 nextTick   330
19.1.5 set 332
19.2 dom   332
19.2.1 dom 操作  332
19.2.2 属性操作  339
19.2.3 class 操作  341
19.2.4 事件操作  343
19.2.5 其他  344
19.3 lang   347
19.3.1 对象操作  347
19.3.2 名称转换  351
19.3.3 数组操作  352
19.3.4 类型转换  352
19.3.5 方法绑定  354
19.3.6 其他  354
19.4 components  357
19.5 options 359
19.6 debug  364
第20 章 源码篇——深入响应式原理   365
20.1 如何追踪变化   365
20.1.1 Observer 367
20.1.2 Directive 372
20.1.3 Watcher   382
20.2 变化检测问题   391
20.3 初始化数据 394
20.4 异步更新队列   395
20.5 计算属性的奥秘 398
20.6 总结  402
第21 章 源码篇——父子类合并策略   403
21.1 策略是什么 403
21.1.1 生命周期合并策略   403
21.1.2 属性方法计算   405
21.1.3 数据合并策略   406
第22 章 源码篇——缓存  409
22.1 Cache 有什么用  409
22.2 LRU  410
22.3 Cache 类   410
22.4 put   410
22.5 shift   411
22.6 get 412
第23 章 源码篇——属性props  413
23.1 流程设计  413
23.2 属性name   415
23.3 coerce  416
23.4 type 验证  416
23.5 default  417
23.6 validator   418
第24 章 源码篇——events 419
24.1 events 配置是什么   419
24.1.1 如何配置  419
24.1.2 $emit 触发  422
24.1.3 $once 绑定 424
24.1.4 $off 删除  425
24.1.5 $dispatch 派发   426
24.1.6 $broadcast 广播  427
第25 章 Webpack  428
25.1 安装  428
25.2 基本使用  429
25.3 命令行 430
25.4 配置文件  430
25.4.1 context 431
25.4.2 entry  431
25.4.3 output 432
25.4.4 module   433
25.4.5 resolve 434
25.4.6 devServer  435
25.5 开发调试  435
25.5.1 安装  435
25.5.2 启动服务  435
25.5.3 命令行参数 436
25.5.4 配置文件  436
25.6 使用插件  436
25.6.1 安装  437
25.6.2 常用插件  438
第26 章 Rollup 440
26.1 简介  440
26.2 安装  441
26.3 配置  441
26.4 命令  443
26.5 插件  447
26.6 常见问题解析   449
第27 章 Browserify  450
27.1 安装  450
27.2 基本使用  450
27.3 转换模块  451
27.3.1 安装转换模块   451
27.3.2 使用转换模块   452
27.3.3 相关转换模块介绍   452
第28 章 vue-loader  456
28.1 如何配置  456
28.2 包含内容  456
28.3 特性介绍  457
28.4 常见问题解析   458
28.5 源码解析  459
28.6 工具包介绍 465
第29 章 PostCSS   467
29.1 安装  467
29.2 配置  467
29.3 命令  468
29.4 插件  471
第30 章 拓展篇 473
30.1 Composition Event   473
30.2 ES 6   474
30.2.1 模块  475
30.2.2 let   479
30.2.3 const  481
30.3 object  482
30.4 函数柯里化 488
30.4.1 动态创建函数   488
30.4.2 参数复用  489
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Vue.js权威指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>星空图鉴
目录
一、太阳系
天象
1.维纳斯带_ 大气层里的地影镶边
2.绿闪_ 神秘的闪光
3.英仙座流星雨_ 夏夜流星
4.狮子座流星雨_ 流星暴雨
5.彗星_ 来自严寒世界的旅行者
6.黄道光_ 星尘中的太阳反光
7.极光_ 被点亮的大气层
月球
8.朔望月_ 月球的位相
9.月海_ 广阔的熔岩平原
10.地照_ 反射再反射
11.月球天平动_ 摇摆不定的月球
12.月球环形山_ 阳光斜射下的壮观起伏
13.月面辐射纹_ 明亮的轨迹环绕年轻环形山
14.亚平宁山脉_ 月球最高峰
15.直壁_ 月球上的剑痕
16.月球火山_ 微小的熔岩山丘
17.月全食_ 地影中的月球
行星
18.金星，牧羊人之星_ 最亮的点状天体
19.暮光中的水星_ 低调的行星
20.行星逆行_ 当行星“折返”
21.合_ 天空中的行星芭蕾
22.月掩星_ 当月亮遮蔽星光
23.金星位相_ 金星改变面孔
24.火星自转_ 见证行星转动
25.火星极冠_ 另一颗行星上的季节更迭
26.小行星_ 环绕太阳的巨石
27.木星和大红斑_ 巨大的气旋
28.伽利略卫星_ 木星的卫星群
29.土星和土星光环_ 太阳系的杰作
30.天王星_ 蓝绿色弹珠
31.海王星_ 太阳系最后一颗行星
太阳
32.日面_ 肉眼所见的恒星表面
33.太阳黑子_ 我们的恒星活跃不宁
34.日珥_ 太阳抛射的火焰
35.日食_ 太阳显露出自己的大气层
36.水星凌日_ 水星从太阳前面经过
二、星座和恒星
星座
37.猎户座_ 色彩迥异的参宿四和参宿七
38.大熊座_ 永不落下的北斗
39.夏季大三角_ 北天最醒目的标志
40.冬季六边形_ 冬夜最明亮的星群
41.南十字座_ 航海者的灯塔
42.星座的运动_ 旋转的天穹
单星
43.天狼星_ 夜空中最亮的恒星
44.北极星_ 永远位于北方的恒星
45.南门二_ 距离太阳系最近的恒星
46.造父四_ 石榴石星
47.螣蛇十二_ 肉眼可见的最远恒星
48.室宿增一_ 太阳系外第一颗被证实拥有行星的恒星
49.巴纳德星_ 天空中移动最快的恒星
50.天鹅座X-1_ 最邻近的黑洞
51.天琴座T_ 最鲜艳的恒星
52.HD 140283_ 最年长的恒星
双星
53.辇道增七_ 夜空中最美的双星
54.开阳_ 最早发现的双星
55.织女二_ “双双星”
56.天津增廿九_ 贝塞尔之星
57.宗人四_ 双星狂舞
变星
58.大陵五_ 恶魔之星
59.蒭藁增二_ 奇迹之星
60.造父一_ 著名变星
61.渐台二_ 地狱双星
62.新星_ 星空激变
三、银河的瑰宝
银河
63.银河_ 星之河川
64.银心_ 繁星与黑洞
65.银河大裂缝_ 最宽广的尘埃带
星云
66.猎户座大星云_ 星云的色彩
67.礁湖星云和三叶星云_ 宇宙尘埃精雕细琢的作品
68.奥米加星云_ 栖在水上的天鹅
69.北美洲星云_ 朦胧的大陆
70.船底座星云_ 广大的星云
71.墨点星云_ 银河中的一片尘埃云
72.烟斗星云_ 被尘埃雕琢的银河
73.煤袋星云_ 银河中最黑暗的区域
星团
74.玫瑰星团_ 年轻恒星的摇篮
75.M35_ 引力聚合而成的星团
76.昴星团_ 天穹之钻
77.野鸭星团_ 最密集的疏散星团
78.蜂巢星团_ 闪烁的恒星蜂巢
79.英仙座双星团_ 成双成对的星团
80.M4_ 最近的球状星团
81.武仙座大星团_ 北天最美丽的星团
82.M22_ 最早发现的球状星团
83.半人马座ω星团_ 古老星系的遗骸
84.星系漫游者_ 遗落的球状星团
恒星遗迹
85.天琴座环状星云_ 天上的烟圈
86.哑铃星云_ 天上的摇铃
87.螺旋星云_ 最近的恒星爆炸遗迹
88.小丑脸星云_ 眨眼的星云
89.面纱星云_ 灾难的遗迹
90.蟹状星云_ 中国人的客星
四、河外星系
91.麦哲伦云_ 银河系的伴侣
92.仙女座大星系_ 我们最庞大的近邻
93.三角座星系_ 肉眼可见的最远星系
94.M81 与M82_ 迷人的二重奏
95.M51_ 相互作用的双星系
96.草帽星系_ 宇宙膨胀的证明
97.波江座棒旋星系_ 最美丽的棒旋星系
98.触须星系_ 激烈碰撞的双星系
99.室女座星系团_ 恢宏的星系团
100.阿贝尔1656_ 后发座星系团
101.类星体3C 273_ 最亮的天体
附录
月面图和四季星空图
中西星名对照表
术语表
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>星空图鉴
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入浅出Vue.js
第1章　Vue.js简介　　1
1.1　什么是Vue.js　　1
1.2　Vue.js简史　　2
第一篇　变化侦测
第2章　Object的变化侦测　　6
2.1　什么是变化侦测　　6
2.2　如何追踪变化　　7
2.3　如何收集依赖　　7
2.4　依赖收集在哪里　　8
2.5　依赖是谁　　10
2.6　什么是Watcher　　10
2.7　递归侦测所有key　　12
2.8　关于Object的问题　　13
2.9　总结　　14
第3章　Array的变化侦测　　16
3.1　如何追踪变化　　16
3.2　拦截器　　17
3.3　使用拦截器覆盖Array原型　　18
3.4　将拦截器方法挂载到数组的属性上　　19
3.5　如何收集依赖　　21
3.6　依赖列表存在哪儿　　22
3.7　收集依赖　　23
3.8　在拦截器中获取Observer实例　　24
3.9　向数组的依赖发送通知　　25
3.10　侦测数组中元素的变化　　26
3.11　侦测新增元素的变化　　27
3.11.1　获取新增元素　　27
3.11.2　使用Observer侦测新增元素　　28
3.12　关于Array的问题　　29
3.13　总结　　29
第4章　变化侦测相关的API实现原理　　31
4.1　vm.$watch　　31
4.1.1　用法　　31
4.1.2　watch的内部原理　　32
4.1.3　deep参数的实现原理　　36
4.2　vm.$set　　38
4.2.1　用法　　38
4.2.2　Array的处理　　39
4.2.3　key已经存在于target中　　40
4.2.4　处理新增的属性　　40
4.3　vm.$delete　　41
4.3.1　用法　　42
4.3.2　实现原理　　42
4.4　总结　　45
第二篇　虚拟DOM
第5章　虚拟DOM简介　　48
5.1　什么是虚拟DOM　　48
5.2　为什么要引入虚拟DOM　　51
5.3　Vue.js中的虚拟DOM　　51
5.4　总结　　53
第6章　VNode　　54
6.1　什么是VNode　　54
6.2　VNode的作用　　55
6.3　VNode的类型　　56
6.3.1　注释节点　　57
6.3.2　文本节点　　57
6.3.3　克隆节点　　57
6.3.4　元素节点　　58
6.3.5　组件节点　　59
6.3.6　函数式组件　　59
6.4　总结　　59
第7章　patch　　60
7.1　patch介绍　　60
7.1.1　新增节点　　61
7.1.2　删除节点　　62
7.1.3　更新节点　　63
7.1.4　小结　　63
7.2　创建节点　　64
7.3　删除节点　　67
7.4　更新节点　　68
7.4.1　静态节点　　68
7.4.2　新虚拟节点有文本属性　　69
7.4.3　新虚拟节点无文本属性　　69
7.4.4　小结　　70
7.5　更新子节点　　72
7.5.1　更新策略　　72
7.5.2　优化策略　　77
7.5.3　哪些节点是未处理过的　　82
7.5.4　小结　　83
7.6　总结　　86
第三篇　模板编译原理
第8章　模板编译　　88
8.1　概念　　88
8.2　将模板编译成渲染函数　　89
8.2.1　解析器　　90
8.2.2　优化器　　91
8.2.3　代码生成器　　91
8.3　总结　　92
第9章　解析器　　93
9.1　解析器的作用　　93
9.2　解析器内部运行原理　　94
9.3　HTML解析器　　99
9.3.1　运行原理　　100
9.3.2　截取开始标签　　101
9.3.3　截取结束标签　　107
9.3.4　截取注释　　108
9.3.5　截取条件注释　　108
9.3.6　截取DOCTYPE　　109
9.3.7　截取文本　　109
9.3.8　纯文本内容元素的处理　　112
9.3.9　使用栈维护DOM层级　　114
9.3.10　整体逻辑　　114
9.4　文本解析器　　117
9.5　总结　　121
第10章　优化器　　122
10.1　找出所有静态节点并标记　　125
10.2　找出所有静态根节点并标记　　127
10.3　总结　　129
第11章　代码生成器　　130
11.1　通过AST生成代码字符串　　131
11.2　代码生成器的原理　　134
11.2.1　元素节点　　134
11.2.2　文本节点　　136
11.2.3　注释节点　　137
11.3　总结　　137
第四篇　整体流程
第12章　架构设计与项目结构　　140
12.1　目录结构　　140
12.2　架构设计　　143
12.3　总结　　145
第13章　实例方法与全局API的实现原理　　146
13.1　数据相关的实例方法　　147
13.2　事件相关的实例方法　　147
13.2.1　vm.$on　　148
13.2.2　vm.$off　　149
13.2.3　vm.$once　　152
13.2.4　vm.$emit　　153
13.3　生命周期相关的实例方法　　154
13.3.1　vm.$forceUpdate　　154
13.3.2　vm.$destroy　　155
13.3.3　vm.$nextTick　　159
13.3.4　vm.$mount　　169
13.4　全局API的实现原理　　178
13.4.1　Vue.extend　　178
13.4.2　Vue.nextTick　　182
13.4.3　Vue.set　　183
13.4.4　Vue.delete　　183
13.4.5　Vue.directive　　184
13.4.6　Vue.filter　　185
13.4.7　Vue.component　　186
13.4.8　Vue.use　　188
13.4.9　Vue.mixin　　189
13.4.10　Vue.compile　　190
13.4.11　Vue.version　　190
13.5　总结　　191
第14章　生命周期　　192
14.1　生命周期图示　　192
14.1.1　初始化阶段　　193
14.1.2　模板编译阶段　　194
14.1.3　挂载阶段　　194
14.1.4　卸载阶段　　194
14.1.5　小结　　194
14.2　从源码角度了解生命周期　　195
14.3　errorCaptured与错误处理　　199
14.4　初始化实例属性　　203
14.5　初始化事件　　204
14.6　初始化inject　　208
14.6.1　provide/inject的使用方式　　208
14.6.2　inject的内部原理　　210
14.7　初始化状态　　215
14.7.1　初始化props　　216
14.7.2　初始化methods　　224
14.7.3　初始化data　　225
14.7.4　初始化computed　　228
14.7.5　初始化watch　　238
14.8　初始化provide　　241
14.9　总结　　241
第15章　指令的奥秘　　242
15.1　指令原理概述　　242
15.1.1　v-if指令的原理概述　　243
15.1.2　v-for指令的原理概述　　243
15.1.3　v-on指令　　244
15.2　自定义指令的内部原理　　246
15.3　虚拟DOM钩子函数　　250
15.4　总结　　251
第16章　过滤器的奥秘　　252
16.1　过滤器原理概述　　253
16.1.1　串联过滤器　　254
16.1.2　滤器接收参数　　254
16.1.3　resolveFilter的内部原理　　255
16.2　解析过滤器　　256
16.3　总结　　258
第17章　最佳实践　　259
17.1　为列表渲染设置属性key　　259
17.2　在v-if/v-if-else/v-else中使用key　　259
17.3　路由切换组件不变　　260
17.3.1　路由导航守卫beforeRouteUpdate　　261
17.3.2　观察 $route对象的变化　　261
17.3.3　为router-view组件添加属性key　　262
17.4　为所有路由统一添加query　　262
17.4.1　使用全局守卫beforeEach　　263
17.4.2　使用函数劫持　　263
17.5　区分Vuex与props的使用边界　　264
17.6　避免v-if和v-for一起使用　　264
17.7　为组件样式设置作用域　　266
17.8　避免在scoped中使用元素选择器　　267
17.9　避免隐性的父子组件通信　　268
17.10　单文件组件如何命名　　268
17.10.1　单文件组件的文件名的大小写　　268
17.10.2　基础组件名　　269
17.10.3　单例组件名　　270
17.10.4　紧密耦合的组件名　　270
17.10.5　组件名中的单词顺序　　271
17.10.6　完整单词的组件名　　272
17.10.7　组件名为多个单词　　273
17.10.8　模板中的组件名大小写　　273
17.10.9　JS/JSX中的组件名大小写　　274
17.11　自闭合组件　　275
17.12　prop名的大小写　　276
17.13　多个特性的元素　　276
17.14　模板中简单的表达式　　276
17.15　简单的计算属性　　277
17.16　指令缩写　　278
17.17　良好的代码顺序　　278
17.17.1　组件/实例的选项的顺序　　278
17.17.2　元素特性的顺序　　280
17.17.3　单文件组件顶级元素的顺序　　281
17.18　总结　　282
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入浅出Vue.js
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>移动Web前端高效开发实战
第1章　初识移动Web前端	1
1.1  移动Web前端史	1
1.1.1  Web开发的变迁	2
1.1.2  移动Web与HTML 5不得不说的关系	3
1.1.3  移动Web与原生应用的优劣势	5
1.2  移动Web前端现状与未来	6
1.2.1  移动Web的现状	6
1.2.2  您需要掌握的知识体系	7
1.2.3  技术拐点与未来趋势	10
1.3  常见问题	11
1.3.1  移动Web前端开发有前景吗	11
1.3.2  PC Web和移动Web开发区别	12
1.4  本章小结	13
第2章　移动Web开发环境搭建	14
2.1  Visual Studio Code免费跨平台编辑器	14
2.2  使用Node.js	16
2.2.1  Node.js的用途	16
2.2.2  安装和调试Node.js	17
2.2.3  什么是NPM	19
2.2.4  Web代理工具NProxy	22
2.2.5  HTTP服务器http-server	24
2.3  本章小结	25
第3章　HTML 5 必会实际常用特性	26
3.1  新的语义	26
3.1.1  新元素的到来	26
3.1.2  表单的增强应用	28
3.1.3  使用音频和视频	32
3.2  访问你的设备	34
3.2.1  定位当前地埋位置	35
3.2.2  实战演练：调用摄像头拍个照	37
3.2.3  实战演练：在手机上实现摇一摇	41
3.3  离线和存储	44
3.3.1  实战演练：搭建一个简单的离线应用	44
3.3.2  离线之后资源该如何更新——Service Worker	47
3.3.3  LocalStorage与SessionStorage	48
3.3.4  实战演练：利用IndexedDB实现便签管理	51
3.4  图像效果	56
3.4.1  使用Canvas绘制一个简单的饼图	56
3.4.2  使用SVG实现奥运五环	58
3.4.3  WebGL带来了3D图像功能	60
3.5  不一样的通信	62
3.5.1  PostMessages	62
3.5.2  XMLHttpRequest Level 2	65
3.5.3  Server Sent Event	69
3.5.4  WebSocket	72
3.5.5  WebRTC	73
3.6  其他常用特性	77
3.6.1  History API与单页应用	77
3.6.2  Drag和Drop介绍	79
3.6.3  利用Web Workers加速应用计算	81
3.6.4  利用Performance API分析网站性能	82
3.7  本章小结	85
第4章　CSS 3 必会实战技巧	86
4.1  认识CSS 3	86
4.1.1  什么是CSS 3	87
4.1.2  移动Web的CSS 3现状	89
4.1.3  用Modernizr检测浏览器是否支持CSS 3	93
4.2  选择器	96
4.2.1  常见选择器	97
4.2.2  伪类和伪元素	99
4.2.3  优先级和权重	104
4.3  响应式开发	106
4.3.1  常见设备的宽高	106
4.3.2  Flex弹性盒布局	108
4.3.3  媒体查询（Media Query）	112
4.3.4  用rem开发响应式设计	115
4.3.5  多列（Multiple Columns）	119
4.4  动效	122
4.4.1  转换（Transform）	122
4.4.2  过渡（Transition）	126
4.4.3  动画（Animation）	128
4.5  常用特性	131
4.5.1  开放字体格式（WOFF）	131
4.5.2  背景（Backgrounds）	134
4.5.3  颜色（Color）	138
4.5.4  文字效果（Text Effects）	141
4.5.5  边框（Border）	144
4.6  预编译	147
4.6.1  Less介绍和安装	147
4.6.2  Less使用	150
4.6.3  Sass介绍和安装	154
4.6.4  Sass使用	156
4.6.5  Compass的安装和使用	160
4.7  本章小结	163
第5章　JavaScript关键语法及使用技巧	164
5.1  理解JavaScript	164
5.1.1  语言基础	165
5.1.2  函数和参数	168
5.2  事件	171
5.2.1  事件概述	171
5.2.2  事件委托	172
5.2.3  移动端事件	175
5.3  作用域、闭包和this	178
5.3.1  使用let实现块级作用域	178
5.3.2  闭包	180
5.3.3  采用call、apply、bind改变this	182
5.4  面向对象	184
5.4.1  原型和原型链	184
5.4.2  Mixin模式	186
5.4.3  ECMAScript 6的Class和Extends	188
5.5  异步编程	189
5.5.1  AJAX中的Callback回调函数	189
5.5.2  Promise模式	190
5.5.3  生成器Generator	192
5.6  模块化	194
5.6.1  为什么需要模块化	195
5.6.2  AMD和CMD规范	197
5.6.3  ECMAScript 6标准的模块支持	205
5.7  ECMAScript 6其他常用功能	207
5.7.1  基础数据类型的扩展	207
5.7.2  使用解构赋值来简化代码	210
5.7.3  使用Babel插件提前使用新特性	212
5.8  本章小结	215
第6章　HTML 5 移动开发实战	216
6.1  在地图上显示行走轨迹	216
6.2  仿原生相册	220
6.2.1  实现相册初始展示页	221
6.2.2  通过手势操作控制相片	222
6.3  使用Socket.IO制作小型聊天室	224
6.3.1  前端HTML+JavaScript实现聊天界面	225
6.3.2  服务器端Node.js监听连接	227
6.4  移动端拍照上传实践	228
6.4.1  前端HTML+CSS+JavaScript	229
6.4.2  服务器端Node.js	232
6.5  利用Microdata进行SEO优化	232
6.5.1  认识Microdata	233
6.5.2  提升网页SEO效果	233
6.6  制作一个带字幕的视频播放器	237
6.7  使用Pixi.js制作“抓住开学君”游戏（Canvas+WebGL）	242
6.8  用Canvas制作刮刮卡	248
6.9  实战演练：实现3D全景效果	251
6.9.1  需要的CSS 3特性	251
6.9.2  实现原理	251
6.9.3  实现代码	253
6.10  本章小结	255
第7章　移动网页样式布局实战	256
7.1  静态布局的实际应用	256
7.1.1  设计活动页面静态布局	257
7.1.2  静态布局在移动端上的自适应	257
7.2  水平居中与垂直居中实战	259
7.2.1  水平居中	259
7.2.2  自适应块级元素水平居中	260
7.2.3  行内元素垂直居中	261
7.2.4  块级元素的垂直居中	263
7.2.5  基于视口单位的解决方案	264
7.2.6  基于Flexbox的解决方案	265
7.3  栅格系统实现响应式列表	267
7.3.1  实现栅格布局	267
7.3.2  栅格布局的原理	269
7.4  Flex多栏布局实战	269
7.5  实战演练：沪江网校首页rem布局实践	272
7.6  实战演练：侧边栏的滑进滑出效果	276
7.7  实战演练：模拟原生的页面切换效果	280
7.7.1  实现页面切换过渡效果	280
7.7.2  模拟切换原理解析	283
7.8  提高Web动画的性能实战	284
7.8.1  使用CSS 3动画	284
7.8.2  使用高性能的JavaScript动画	285
7.9  实战演练：课程分类列表实战	286
7.9.1  实现主页结构	287
7.9.2  响应式CSS实现（Compass）	289
7.9.3  添加页面动态效果	293
7.10  本章小结	294
第8章　前端工程化实战	295
8.1  前端工程化	295
8.1.1  前端工程化的必要性	296
8.1.2  前端工程化的发展史	298
8.2  工程化入门Grunt	300
8.2.1  安装和配置	301
8.2.2  Grunt插件	302
8.2.3  实战演练：使用Grunt开发一个简易相册	305
8.3  使用Gulp构建一个ECMAScript 6和Sass应用	309
8.3.1  安装和配置	309
8.3.2  预处理任务	310
8.3.3  实战演练：采用ECMAScript 6开发一个Markdown编辑器	312
8.3.4  代码检查任务	315
8.3.5  代码合并、压缩、重命名任务	317
8.3.6  监听文件变化自动构建	318
8.4  实战演练：使用Webpack构建一个React应用	320
8.4.1  安装和配置	320
8.4.2  常用的加载器和插件	323
8.4.3  缓存控制	327
8.4.4  简化模块引用	330
8.4.5  异步模块加载	332
8.4.6  使用Source Map调试代码	335
8.5  本章小结	338
第9章　移动Web常用开发方式实战	339
9.1  基于DOM的开发方式	339
9.1.1  使用Zepto和前端模板开发简单备忘录	340
9.1.2  解决原生单击事件的缺陷	341
9.1.3  为何抛弃掉Zepto	343
9.2  基于React的开发方式	345
9.2.1  使用JSX语法创建React组件	345
9.2.2  在实践中掌握React生命周期	348
9.2.3  实现组件间通信	353
9.2.4  实现组件关注分离	355
9.2.5  实战演练：运用组件化方式开发一个备忘录	358
9.2.6  如何管理应用的状态	364
9.2.7  添加动画效果	366
9.2.8  提高React组件性能	369
9.3  基于Vue.js的开发方式	372
9.3.1  实战演练：开发一个简单的备忘录应用（Vue.js 2.0）	372
9.3.2  管理应用的状态及实现组件间的通信	375
9.3.3  添加动画效果	379
9.4  打造单页应用SPA	381
9.4.1  单页应用的优势是什么	382
9.4.2  实战演练：实现一个单页路由	382
9.4.3  实战演练：使用React开发一个简单的单页应用	384
9.4.4  单页应用的状态管理	386
9.5  本章小结	388
第10章　混合式开发实战	389
10.1  为什么需要混合式开发	389
10.1.1  混合式开发种类	389
10.1.2  混合式开发的优势	390
10.1.3  选择合适的混合式开发方案	391
10.2  Cordova开发入门	392
10.2.1  JavaScript和Native互相调用	392
10.2.2  Cordova介绍和安装	394
10.2.3  Cordova开发使用	397
10.3  React Native实战	400
10.3.1  React Native简介	400
10.3.2  React Native样式和布局	402
10.3.3  React Native组件概念	404
10.3.4  简单组件实战	404
10.3.5  复合组件实战	405
10.3.6  第三方组件实战	406
10.3.7  常用API实践	407
10.4  实战演练：用React Native开发新闻阅读应用	410
10.4.1  React Native的工程项目结构一览	410
10.4.2  列表页	411
10.4.3  新闻评论页	414
10.4.4  新闻展示页	414
10.5  本章小结	415
第11章　前端开发调试实战	417
11.1  浏览器调试	417
11.1.1  Chrome开发者工具	418
11.1.2  Safari开发者工具	421
11.2  代理工具	424
11.2.1  Mac OS下Charles的用法	424
11.2.2  Windows下Fiddler的用法	426
11.3  多终端同步工具	428
11.3.1  多设备浏览器同步测试工具BrowserSync	429
11.3.2  双向自动刷新样式工具Emmet LiveStyle	431
11.4  模拟器调试	432
11.4.1  Android模拟器调试	432
11.4.2  iOS模拟器调试	434
11.4.3  在线模拟器Manymo	436
11.5  多平台调试	437
11.5.1  网站响应式设计测试工具Ghostlab	437
11.5.2  移动端Web开发调试工具Weinre	439
11.5.3  JavaScript远程调试和测试工具Vorlon.JS	442
11.6  云真机调试	444
11.6.1  浏览器兼容性云端测试应用BrowserStack	444
11.6.2  Web端移动设备管理控制工具STF	446
11.6.3  多浏览器兼容性测试平台F2etest	448
11.7  React调试	452
11.7.1  React Developer Tools	452
11.7.2  Redux DevTools	455
11.8  本章小结	458
第12章　前端单元测试实战	459
12.1  JavaScript单元测试框架Jasmine实战	459
12.2  使用Mocha和Chai在Node.js进行单元测试	462
12.3  使用Sinon辅助单元测试	465
12.4  使用Karma自动化单元测试	468
12.5  使用Istanbul计算代码覆盖率	470
12.6  使用Benchmark.js进行基准测试	473
12.7  实战演练：React版备忘录项目的完整单元测试	475
12.8  本章小结	479
第13章　前端性能优化实战	480
13.1  常用网站性能优化指标	480
13.1.1  网页的资源请求与加载阶段	481
13.1.2  网页渲染阶段	482
13.1.3  JavaScript脚本的执行速度	484
13.2  依旧有效的Yahoo性能优化法则	484
13.3  性能优化工具使用实战	486
13.3.1  YSlow	486
13.3.2  PageSpeed	487
13.3.3  WebPagetest	488
13.4  HTTP协议头缓存实战	489
13.4.1  客户端缓存流程	489
13.4.2  缓存协议内容	490
13.4.3  实战演练：HTTP缓存	491
13.5  资源按需加载实战	492
13.5.1  基于RequireJS的按需加载	492
13.5.2  基于Webpack的按需加载	493
13.5.3  图片懒加载	494
13.6  不同网络类型的优化实战	495
13.6.1  获取网络类型	495
13.6.2  弱网图片优化	496
13.6.3  弱网缓存优化	496
13.7  实战演练：Nginx配置Combo合并HTTP请求	497
13.7.1  安装Nginx和文件合并模块	498
13.7.2  配置Nginx和Combo	499
13.8  本章小结	499
第14章　项目实战：搭建直播平台（Cordova+Koa+React）	500
14.1  项目的安装和启动	500
14.1.1  安装依赖	501
14.1.2  启动项目	501
14.1.3  Cordova打包	502
14.2  直播平台功能预览	502
14.2.1  直播流程	503
14.2.2  直播核心页面	503
14.3  页面的布局和结构	504
14.3.1  首页	504
14.3.2  发起直播页面	505
14.3.3  观看直播页面	505
14.4  搭建WebRTC服务端——Koa	506
14.5  实现多人在线直播功能	512
14.6  实现弹幕客户端与服务端通信	517
14.6.1  客户端与服务端通信的过程	517
14.6.2  客户端代码设计——React	518
14.6.3  服务端代码设计	520
14.7  本章小结	521
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>移动Web前端高效开发实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Vue移动开发实战技巧
第1章 搭建开发环境 1
1.1 本地Node环境 1
1.1.1 Node.js 1
1.1.2 npm 7
1.1.3 yarn 12
1.1.4 npm vs yarn 17
1.2 ide相关配置 17
1.2.1 常用ide 17
1.2.2 Sublime text 17
1.2.3 Atom 20
1.2.4 WebStorm 22
1.2.5 VSCode 23
1.3 本章小结 27
第2章 从零搭建Vue工程 28
2.1 本地开发需要哪些工具 28
2.2 搭建Vue工程 29
2.2.1 Vue-cli 29
2.2.2 脚手架项目构成分析 30
2.3 webpack配置 32
2.3.1 webpack简介 32
2.3.2 webpack配置解析 33
第3章 API详解 45
3.1 全局变量 45
3.1.1 silent 45
3.1.2 optionMergeStrategies 45
3.1.3 devtools 46
3.1.4 errorHandler 48
3.1.5 ignoredElements 48
3.1.6 keyCodes 49
3.1.7 performance 49
3.1.8 productionTip 49
3.2 模板语法 50
3.3 指令 50
3.3.1 v-text 51
3.3.2 v-html 51
3.3.3 v-pre 51
3.3.4 v-cloak 52
3.3.5 v-once 53
3.3.6 v-if 54
3.3.7 v-else 54
3.3.8 v-else-if 55
3.3.9 v-show 55
3.3.10 v-for 56
3.3.11 v-bind 64
3.3.12 v-model 70
3.3.13 v-on 74
3.3.14 自定义指令 77
3.4 过滤器 79
3.5 计算属性 80
3.5.1 基础例子 80
3.5.2 计算属性vs Methods 81
3.5.3 计算属性缓存 81
3.5.4 Computed属性vs Watched属性 82
3.5.5 计算setter 83
3.6 观察者Watchers 84
3.7 组件的功能与使用 86
3.7.1 使用组件 86
3.7.2 组件开发 88
3.7.3 非Props属性 92
3.7.4 自定义事件 92
3.7.5 Slots内容分发 96
3.7.6 动态组件 99
3.7.7 组件的其他知识 100
3.8 继承与混合 104
3.8.1 Vue.extend 105
3.8.2 options里的extends 105
3.8.3 源码分析 105
3.8.4 合并策略 106
3.9 插件plugin 111
第4章 Vue组件库 115
4.1 Element 115
4.1.1 Element的设计 115
4.1.2 Element的UI 116
4.1.3 Element的优缺点 117
4.2 Mint UI 118
4.2.1 Mint UI的特性 118
4.2.2 Mint UI的优缺点 119
4.3 iView 119
4.3.1 iView简介 120
4.3.2 iView的优缺点 120
4.4 Vux 121
4.4.1 Vux简介 121
4.4.2 Vux优缺点 122
4.5 XCUI 122
4.5.1 XCUI简介 122
4.5.2 XCUI优缺点 123
第5章 官方周边库 124
5.1 Axios 124
5.1.1 功能 124
5.1.2 安装 124
5.1.3 Example 125
5.1.4 Axios API 126
5.1.5 请求配置 127
5.1.6 响应结构 130
5.1.7 配置的默认值/defaults 131
5.1.8 拦截器 132
5.1.9 错误处理 133
5.1.10 取消 134
5.1.11 Promises 135
5.1.12 TypeScript 135
5.2 Vuex的使用 135
5.2.1 State 135
5.2.2 Getters 137
5.2.3 Mutations ＆ Actions 138
5.2.4 Modules 141
5.2.5 模块重用 145
5.3 Vue-router使用 146
5.3.1 安装 146
5.3.2 开始 146
5.3.3 动态路由匹配 147
5.3.4 编程式导航 151
5.3.5 命名路由 152
5.3.6 命名视图 153
5.3.7 重定向和别名 153
5.3.8 HTML5 History模式 154
5.3.9 后端配置例子 155
5.3.10 警告 155
5.3.11 导航钩子 156
5.3.12 过渡动效 159
5.3.13 数据获取 160
5.3.14 滚动行为 163
5.3.15 懒加载 164
第6章 Vue项目优化 166
6.1 状态过渡 166
6.1.1 过渡的概念 166
6.1.2 CSS过渡 166
6.1.3 Javascript钩子 167
6.2 Vue项目的自动化测试 170
6.2.1 unit tests 172
6.2.2 e2e测试 175
6.3 Typescript Support 179
6.3.1 Typescript 179
6.3.2 安装Typescript 180
6.3.3 Typescript和Vue结合 180
6.4 MPA 186
6.4.1 关于MPA的优劣势 187
6.4.2 如何实现MPA 187
6.5 Vue的异构 190
6.5.1 不属于异构的情况 191
6.5.2 通过封装成Vue组件的方式实现异构 192
6.5.3 通过directive的方式实现异构 194
6.5.4 循环嵌套Vue组件 197
6.6 服务端渲染 198
6.6.1 服务端渲染的概念 198
6.6.2 用Vue-ssr的意义 198
6.6.3 Vue-ssr的作用 198
6.6.4 Vue-ssr学习难度 198
6.6.5 技术栈 199
6.6.6 前后端数据策略 199
6.6.7 性能影响 199
6.6.8 安装 200
6.6.9 渲染一个Vue实例 200
6.6.10 一个例子 202
6.7 Vue的pre-render 204
第7章 原理解析 206
7.1 Virtual DOM原理 206
7.1.1 DOM 206
7.1.2 Virtual DOM算法 209
7.2 Vue精髓之响应式数据流 210
7.2.1 数据流演进史 210
7.2.2 Vue和React介绍 211
7.2.3 Vue的响应式数据流的优势 211
7.2.4 Object.defineProperty与订阅发布设计模式 213
7.2.5 Vue源码 214
7.2.6 Vue的render函数就是Watcher的expOrFn 218
7.3 Vuex2.0源码解析 219
7.3.1 Vuex的含义 219
7.3.2 源码分析 220
7.3.3 Vuex API分析 233
7.3.4 辅助函数 235
7.3.5 插件 239
7.3.6 一些函数的封装 242
7.4 Vue-router原理 244
7.4.1 Vue-router 244
7.4.2 Vue-router应用举例 244
7.4.3 Vue-router原理 245
第8章 进军WEEX 256
8.1 搭建WEEX基础环境 256
8.1.1 初始化：hello world 256
8.1.2 dotwe 257
8.2 分析首个WEEX工程代码 258
8.2.1 目录结构 258
8.2.2 通过serve起服务 258
8.2.3 webpack配置 259
8.2.4 页面开发 260
8.3 debug WEEX代码 260
8.3.1 web端调试 260
8.3.2 手机端调试 261
8.4 集成WEEX到已有应用 263
8.4.1 集成到Android 263
8.4.2 集成到iOS 268
8.5 使用WEEXpack构建移动应用 271
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Vue移动开发实战技巧
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Vue.js前端开发
版权
内容提要
前言
第1章　Vue.js简介
第2章　基础特性
第3章　指令
第4章　过滤器
第5章　过渡
第6章　组件
第7章　Vue.js常用插件
第8章　Vue.js工程实例
第9章　状态管理：Vuex
第10章　跨平台开发：Weex
第11章　Vue.js 2.0新特性
欢迎来到异步社区！
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Vue.js前端开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Vue2实践揭秘
第1章  例说Vue.js	1
1.1  插值	5
1.2  数据绑定	6
1.3  样式绑定	9
1.4  过滤器	12
第2章  工程化的Vue.js开发	15
2.1  脚手架vue-cli	16
2.2  深入vue-cli的工程模板	19
2.2.1  webpack-simple模板	19
2.2.2  webpack模板	21
2.2.3  构建工具	23
2.3  Vue工程的webpack配置与基本用法	25
2.3.1  webpack的特点	26
2.3.2  基本用法	27
2.3.3  用别名取代路径引用	29
2.3.4  配置多入口程序	30
2.4  基于Karma+Phantom+Mocha+Sinon+Chai的单元测试环境	32
2.5  基于Nightwatch的端到端测试环境	38
第3章  路由与页面间导航	51
3.1  vue-router	53
3.2  路由的模式	57
3.3  路由与导航	58
3.4  导航状态样式	69
3.5  History的控制	70
3.6  关于Fallback	71
3.7  小结	73
第4章  页面的区块化与组件的封装	75
4.1  页面逻辑的实现	76
4.2  封装可重用组件	80
4.3  自定义事件	87
4.4  数据接口的分析与提取	89
4.5  从服务端获取数据	91
4.6  创建复合型的模板组件	95
4.7  数据模拟	100
4.8  小结	102
4.9  扩展阅读：Vue组件的继承——mixin	103
第5章  Vue的测试与调试技术	110
5.1  Mocha入门	111
5.2  组件的单元测试方法	118
5.3  单元测试中的仿真技术	121
5.3.1  调用侦测（Spies）	124
5.3.2  Sinon的断言扩展	126
5.3.3  存根（stub）	128
5.3.4  接口仿真（Mocks）	131
5.3.5  后端服务仿真	133
5.4  调试	134
5.5  Nightwatch入门	139
5.5.1  编写端到端测试	139
5.5.2  钩子函数与异步测试	141
5.5.3  全局模块与Nightwatch的调试	143
5.5.4  Page Objects模式	147
第6章  视图与表单的处理	153
6.1  为Vue2集成UIkit	154
6.2  表格视图的实现	159
6.2.1  实时数据筛选	164
6.2.2  多行数据的选择	167
6.2.3  排序的实现	171
6.3  单一职责原则与高级组件开发方法	176
6.3.1  搜索区的组件化	177
6.3.2  母板组件	179
6.3.3  重构模态对话框组件	181
6.3.4  高级组件与Render方法	183
6.3.5  UIkit按钮	194
6.3.6  通用表格组件	198
6.4  表单的设计与实现	211
6.4.1  计算属性的双向绑定	214
6.4.2  富文本编辑器组件的实现	215
6.4.3  实现嵌套式容器组件	220
6.4.4  表单的验证	224
6.5  集成服务端的CRUD Restful API	239
6.6  HTTP拦截器inteceptor	242
6.7  开发服务器的定制	245
第7章  Vuex状态管理	250
7.1  Vuex的基本结构	253
7.2  data的替代者——State和Getter	256
7.3  测试Getter	260
7.4  Action——操作的执行者	261
7.5  测试Action	263
7.6  只用Mutation修改状态	265
7.7  测试Mutations	268
7.8  子状态和模块	269
7.9  用服务分离外部操作	274
附录A  Chai断言参考	277
附录B  Vee-Validate验证规则参考	289
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Vue2实践揭秘
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Vue.js快跑：构建触手可及的高性能Web应用
前言     xi
第1 章 Vue.js 基础    1
为什么选择 Vue.js    1
安装和设置     4
vue-loader 和webpack    4
模板（Template）、数据（Data）和指令（Directive）  6
v-if vs v-show     10
模板中的循环     11
属性绑定     13
响应式      15
响应式如何实现    16
注意事项     17
双向数据绑定     19
动态设置 HTML    21
方法      22
this     23
计算属性     24
侦听器      27
监听data 对象中某个对象的属性   29
获取旧值     29
深度监听     30
过滤器      30
使用 ref 直接访问元素    33
输入和事件     33
v-on 简写     34
事件修饰符     34
生命周期钩子     37
自定义指令     38
钩子函数参数     40
过渡和动画     41
CSS 过渡     41
JavaScript 动画    44
总结      46
第2 章 Vue.js 组件    47
组件基础     47
数据、方法和计算属性    48
传递数据     49
Prop 验证     50
Prop 的大小写    51
响应式     52
数据流和 .sync 修饰符    53
自定义输入组件与 v-model    56
使用插槽（slot）将内容传递给组件    57
默认内容     58
具名插槽     59
作用域插槽     60
自定义事件     62
混入      65
混入对象和组件的合并    67
vue-loader 和.vue 文件    68
非 Prop 属性     70
组件和 v-for 指令     71
总结      74
第3 章 使用Vue 添加样式   77
Class 绑定     77
内联样式绑定     79
数组语法     80
多重值     80
用vue-loader 实现Scoped CSS    81
用 vue-loader 实现 CSS Modules    82
预处理器     83
总结      83
第4 章 render 函数和 JSX   85
标签名称     86
数据对象     86
子节点      88
JSX      89
总结      91
第5 章 使用vue-router 实现客户端路由  93
安装      93
基本用法     94
HTML5 History 模式    96
动态路由     97
响应路由变化     98
路由参数作为组件属性传入    100
嵌套路由      101
重定向和别名     103
链接导航      104
tag 属性     105
active-class 属性    106
原生事件     107
编程式导航     107
导航守卫      108
路由独享守卫    110
组件内部守卫    111
路由顺序      112
404 页面     113
路由命名      114
总结      115
第6 章 使用 vuex 实现状态管理   117
安装      118
概念      119
State 及其辅助函数    121
State 辅助函数    122
Getter      124
Getter 辅助函数    126
Mutation     126
Mutation 辅助函数    128
Mutation 必须是同步函数    128
Action      129
Action 辅助函数    130
参数解构     131
Promise 与 Action    131
Module      132
文件结构     134
带命名空间的模块    135
总结      137
第7 章 对Vue 组件进行测试   139
测试单个组件     139
介绍 vue-test-utils    141
查询 DOM     142
挂载选项      143
模拟和存根数据     145
测试事件      146
总结      148
附录A 搭建Vue 开发环境   149
附录B Vue 与React   153
索引    171
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Vue.js快跑：构建触手可及的高性能Web应用
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Vue.js项目实战
第1章　Vue开发入门　　1
1.1　为什么需要另外一个前端框架　　1
1.1.1　一个有发展前景的项目　　2
1.1.2　兼容性要求　　2
1.2　一分钟设置　　3
1.3　创建一个应用　　3
1.4　借助模板实现DOM的动态性　　6
1.4.1　文本显示　　6
1.4.2　利用指令添加基本的交互　　7
1.5　小结　　8
第2章　项目1：Markdown笔记本　　9
2.1　一个基本的笔记编辑器　　10
2.1.1　项目设置　　10
2.1.2　笔记编辑器　　11
2.1.3　预览面板　　12
2.1.4　保存笔记　　15
2.1.5　加载已保存的笔记　　18
2.2　多条笔记　　20
2.2.1　笔记列表　　20
2.2.2　选中一条笔记　　25
2.2.3　笔记工具栏　　32
2.2.4　状态栏　　36
2.3　小结　　40
第3章　项目2：城堡决斗游戏　　41
3.1　游戏规则　　41
3.2　项目设置　　44
3.3　暴风雨前的平静　　45
3.3.1　模板选项　　45
3.3.2　应用的state　　45
3.3.3　万能的组件　　47
3.4　构建用户界面　　48
3.4.1　第一个组件：顶栏　　48
3.4.2　显示卡牌　　52
3.4.3　手牌　　57
3.4.4　浮层　　68
3.5　游戏世界和场景　　75
3.5.1　城堡　　75
3.5.2　城堡旗帜　　77
3.5.3　云的动画　　82
3.6　游戏玩法　　85
3.6.1　抽取卡牌　　85
3.6.2　出牌　　86
3.6.3　下一回合　　90
3.7　小结　　92
第4章　高级项目设置　　93
4.1　设置开发环境　　93
4.1.1　安装官方命令行工具vue-cli　　93
4.1.2　代码编辑器　　94
4.2　第一个完整的Vue应用　　94
4.2.1　项目脚手架　　94
4.2.2　创建应用　　95
4.2.3　渲染函数　　96
4.2.4　配置Babel　　97
4.2.5　更新依赖　　98
4.2.6　为生产而构建　　99
4.3　单文件组件　　100
4.3.1　模板　　101
4.3.2　脚本　　102
4.3.3　样式　　104
4.3.4　组件内的组件　　106
4.4　小结　　108
第5章　项目3：支持中心　　109
5.1　通用应用结构　　109
5.1.1　项目设置　　109
5.1.2　路由和页面　　110
5.2　FAQ——使用API　　119
5.2.1　服务器设置　　119
5.2.2　使用fetch　　119
5.2.3　用自己的插件扩展Vue　　124
5.2.4　使用mixin复用代码　　126
5.3　支持工单　　132
5.3.1　用户认证　　132
5.3.2　显示和增加工单　　152
5.3.3　高级路由特性　　164
5.4　小结　　171
第6章　项目4：博客地图　　172
6.1　Google认证和状态管理　　173
6.1.1　项目设置　　173
6.1.2　使用Vuex进行状态管理　　177
6.1.3　用户状态　　187
6.2　嵌入Google地图　　193
6.2.1　安装　　193
6.2.2　添加地图　　194
6.2.3　将BlogMap连接到store　　196
6.3　博客和评论　　201
6.3.1　在store中添加博客模块　　201
6.3.2　渲染函数和JSX　　202
6.3.3　创建一篇博客　　210
6.3.4　获取博客列表　　217
6.3.5　选中博客　　222
6.4　小结　　231
第7章　项目5：在线商店以及扩展　　232
7.1　高级开发流程　　232
7.1.1　项目设置　　233
7.1.2　使用PostCSS为CSS自动添加前缀　　235
7.1.3　通过ESLint提升代码质量和风格　　236
7.1.4　Jest单元测试　　240
7.2　补充话题　　245
7.2.1　国际化和代码拆分　　245
7.2.2　服务端渲染　　250
7.2.3　生产环境构建　　260
7.3　小结　　263
第8章　项目6：使用Meteor开发实时仪表盘　　264
8.1　项目设置　　265
8.1.1　什么是Meteor　　265
8.1.2　安装Meteor　　265
8.1.3　创建项目　　266
8.1.4　第一个Vue Meteor应用　　266
8.1.5　路由　　268
8.2　产品测量记录　　269
8.2.1　集成Meteor集合　　269
8.2.2　设置数据　　269
8.2.3　模拟测量记录　　270
8.3　仪表盘和报告　　272
8.3.1　进度条库　　272
8.3.2　Meteor发布　　272
8.3.3　创建仪表盘组件　　273
8.4　小结　　277
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Vue.js项目实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Vue.js前端开发技术
第1章 Vue入门　1
1．1　Vue简述　1
1．1．1　什么是Vue．js　1
1．1．2　为什么使用Vue．js　2
1．1．3　Vue．js的主要特点　2
1．1．4　Vue．js的优势　3
1．2　Vue．js的下载及使用　3
1．2．1　Vue．js下载　4
1．2．2　Vue．js引用　4
1．2．3　npm安装　4
1．2．4　解读Vue项目文件目录结构　8
1．3　实例化Vue对象、数据和方法　9
1．3．1　实例化Vue对象　9
1．3．2　Vue数据和方法　10
1．3．3　将数据挂载到DOM页面　11
1．4　MVVM模式　13
本章小结　14
习题　15
第2章　Vue数据绑定　16
2．1　Vue模板语法　16
2．1．1　模板语法　16
2．1．2　插值　17
2．1．3　表达式　17
2．2　响应式声明渲染机制　18
2．2．1　响应式声明渲染机制简介　18
2．2．2　Vue属性绑定　21
2．2．3　Vue双向数据绑定　22
2．3　Vue计算属性　24
2．3．1　计算属性　24
2．3．2　计算属性与methods的区别　27
2．4　Vue生命周期　28
2．4．1　Vue实例生命周期图解　28
2．4．2　Vue生命周期详解　29
2．4．3　Vue各生命周期适合开发的业务逻辑　31
本章小结　31
习题　32
第3章　Vue指令　33
3．1　Vue指令概述　33
3．1．1　指令　33
3．1．2　指令修饰符　34
3．2　Vue指令详解　34
3．2．1　指令v-if　34
3．2．2　指令v-for　36
3．2．3　指令v-on　41
3．2．4　指令v-show　43
3．3　Vue动态样式绑定　46
3．3．1　v-bind指令属性　46
3．3．2　v-bind绑定class　47
3．3．3　v-bind数组表达式绑定class属性　48
3．3．4　v-bind对象语法绑定行内样式　49
3．3．5　v-bind数组语法绑定行内样式　50
3．4　Vue表单输入绑定　51
3．4．1　指令v-model　51
3．4．2　v-bind在控件上绑定value　56
3．4．3　表单中的参数特性　63
3．5　综合案例　64
本章小结　67
习题　67
第4章　Vue事件处理　68
4．1　Vue事件处理器　68
4．1．1　监听事件　68
4．1．2　方法事件处理器　69
4．1．3　内联事件处理器　70
4．2　修饰符　72
4．2．1　事件修饰符　72
4．2．2　按键修饰符　73
4．2．3　修饰键　77
4．3　综合案例　77
本章小结　79
习题　79
第5章　Vue组件　80
5．1　组件的基本使用　80
5．1．1　什么是组件　80
5．1．2　组件使用　82
5．1．3　组件中的data必须是函数　88
5．2　Vue组件嵌套　90
5．2．1　组件嵌套　90
5．2．2　使用props　92
5．2．3　使用slot插槽内容分发　101
5．2．4　组件实战　107
5．3　组件通信　111
5．3．1　父组件向子组件通信　111
5．3．2　子组件向父组件通信　112
5．3．3　任意组件及平行组件通信　116
5．4　创建自己的组件　118
本章小结　123
习题　123
第6章　自定义指令　128
6．1　自定义指令概述　128
6．1．1　自定义全局指令　128
6．1．2　自定义局部指令　130
6．1．3　案例分析　131
6．2　钩子函数　132
6．2．1　钩子函数参数　133
6．2．2　函数简写　136
6．3　对象字面量　136
本章小结　137
习题　137
第7章　过渡与动画　138
7．1　transition组件　138
7．2　单元素/组件的过渡　141
7．2．1　transition标签结合CSS样式实现动画　141
7．2．2　animate．css结合transition实现动画　143
7．2．3　钩子函数实现动画　144
7．3　多个元素的过渡　147
7．4　多个组件的过渡　149
7．5　综合案例　151
本章小结　156
习题　156
第8章　渲染函数　157
8．1　渲染函数概述　157
8．1．1　从虚拟DOM了解Vue渲染函数　157
8．1．2　为什么使用渲染函数　158
8．1．3　什么是渲染函数　159
8．2　createElement方法　161
8．2．1　createElement参数　161
8．2．2　VNodes必须唯一　166
8．3　使用JavaScript代替模板功能　167
8．3．1　v-if和v-for　167
8．3．2　v-model　168
8．3．3　slot插槽　170
8．3．4　作用域插槽　171
本章小结　172
习题　172
第9章　Vue路由vue-router　173
9．1　路由安装和使用　173
9．2　传递参数及获取参数　175
9．2．1　使用路由传递参数　175
9．2．2　地址栏传递参数　177
9．3　子路由　178
9．3．1　创建子路由　178
9．3．2　路由切换组件　180
9．4　命名视图和导航钩子　183
9．4．1　命名视图　183
9．4．2　导航钩子　185
9．5　元数据及路由匹配　188
本章小结　191
习题　192
第10章　使用webpack　193
10．1　webpack基础　193
10．2　webpack的基本配置　196
10．3　webpack常用的Loaders　198
10．4　插件　201
10．5　webpack常用命令　204
本章小结　204
习题　204
第11章　综合案例开发　205
11．1　综合案例开发步骤　205
11．1．1　通过vue-cli构建工具初始化项目目录　205
11．1．2　初始化依赖包　206
11．1．3　安装vue-router组件　206
11．1．4　创建router对象及配置路由　207
11．1．5　在App．vue中添加路由导航　208
11．2　解析Vue生成文件目录结构　210
11．2．1　build文件夹　210
11．2．2　config文件夹　210
11．2．3　node_modules文件夹　211
11．2．4　src文件夹　211
11．2．5　App．vue与main．js　211
11．3　vue-resource插件　212
11．4　实战：单词本　216
11．4．1　展示单词本　216
11．4．2　修改删除单词　217
11．4．3　添加单词　221
本章小结　223
习题　223
第12章　Vue工程项目实战　224
12．1　项目分析　224
12．2　工程化项目搭建　224
12．2．1　项目准备工作　225
12．2．2　项目资源准备　226
12．2．3　图标字体制作　230
12．2．4　项目目录设计　232
12．2．5　模拟后台数据（mock数据）　233
12．3　组件化开发　235
12．4　使用vue-resource调用后台接口　247
12．4．1　理解后台接口文档　247
12．4．2　根据文档调用接口　248
12．4．3　具体业务逻辑开发　249
12．5　项目打包　251
本章小结　252
习题　252
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Vue.js前端开发技术
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Vue.js 实战
目    录
第1篇  基础篇
第1章  初识Vue.js 3
1.1  Vue.js是什么 3
1.1.1  MVVM模式 3
1.1.2  Vue.js有什么不同 4
1.2  如何使用Vue.js 5
1.2.1  传统的前端开发模式 5
1.2.2  Vue.js的开发模式 5
第2章  数据绑定和第一个Vue应用 8
2.1  Vue实例与数据绑定 9
2.1.1  实例与数据 9
2.1.2  生命周期 10
2.1.3  插值与表达式 11
2.1.4  过滤器 13
2.2  指令与事件 15
2.3  语法糖 18
第3章  计算属性 19
3.1  什么是计算属性 19
3.2  计算属性用法 20
3.3  计算属性缓存 23
第4章  v-bind及class与style绑定 25
4.1  了解v-bind指令 25
4.2  绑定class的几种方式 26
4.2.1  对象语法 26
4.2.2  数组语法 27
4.2.3  在组件上使用 29
4.3  绑定内联样式 30
第5章  内置指令 32
5.1  基本指令 32
5.1.1  v-cloak 32
5.1.2  v-once 33
5.2  条件渲染指令 33
5.2.1  v-if、v-else-if、v-else 33
5.2.2  v-show 36
5.2.3  v-if与v-show的选择 36
5.3  列表渲染指令v-for 37
5.3.1  基本用法 37
5.3.2  数组更新 41
5.3.3  过滤与排序 43
5.4  方法与事件 44
5.4.1  基本用法 44
5.4.2  修饰符 46
5.5  实战：利用计算属性、指令等知识开发购物车 47
第6章  表单与v-model 55
6.1  基本用法 55
6.2  绑定值 61
6.3  修饰符 63
第7章  组件详解 65
7.1  组件与复用 65
7.1.1  为什么使用组件 65
7.1.2  组件用法 66
7.2  使用props传递数据 70
7.2.1  基本用法 70
7.2.2  单向数据流 72
7.2.3  数据验证 74
7.3  组件通信 75
7.3.1  自定义事件 75
7.3.2  使用v-model 77
7.3.3  非父子组件通信 79
7.4  使用slot分发内容 83
7.4.1  什么是slot 83
7.4.2  作用域 84
7.4.3  slot用法 85
7.4.4  作用域插槽 87
7.4.5  访问slot 89
7.5  组件高级用法 90
7.5.1  递归组件 90
7.5.2  内联模板 92
7.5.3  动态组件 93
7.5.4  异步组件 94
7.6  其他 95
7.6.1  $nextTick 95
7.6.2  X-Templates 96
7.6.3  手动挂载实例 97
7.7  实战：两个常用组件的开发 98
7.7.1  开发一个数字输入框组件 98
7.7.2  开发一个标签页组件 106
第8章  自定义指令 118
8.1  基本用法 118
8.2  实战 121
8.2.1  开发一个可从外部关闭的下拉菜单 121
8.2.2  开发一个实时时间转换指令v-time 126
第2篇  进阶篇
第9章  Render函数 133
9.1  什么是Virtual Dom 133
9.2  什么是Render函数 136
9.3  createElement用法 140
9.3.1  基本参数 140
9.3.2  约束 143
9.3.3  使用JavaScript代替模板功能 147
9.4  函数化组件 153
9.5  JSX 157
9.6  实战：使用Render函数开发可排序的表格组件 159
9.7  实战：留言列表 172
9.8  总结 183
第10章  使用webpack 184
10.1  前端工程化与webpack 184
10.2  webpack基础配置 187
10.2.1  安装webpack与webpack-dev-server 187
10.2.2  就是一个js文件而已 188
10.2.3  逐步完善配置文件 191
10.3  单文件组件与vue-loader 194
10.4  用于生产环境 201
第11章  插件 206
11.1  前端路由与vue-router 207
11.1.1  什么是前端路由 207
11.1.2  vue-router基本用法 208
11.1.3  跳转 212
11.1.4  高级用法 213
11.2  状态管理与Vuex 216
11.2.1  状态管理与使用场景 216
11.2.2  Vuex基本用法 217
11.2.3  高级用法 221
11.3  实战：中央事件总线插件vue-bus 227
第3篇  实战篇
第12章  iView经典组件剖析 235
12.1  级联选择组件Cascader 236
12.2  折叠面板组件Collapse 249
12.3  iView内置工具函数 257
第13章  实战：知乎日报项目开发 261
13.1  分析与准备 261
13.2  推荐列表与分类 265
13.2.1  搭建基本结构 265
13.2.2  主题日报 267
13.2.3  每日推荐 271
13.2.4  自动加载更多推荐列表 276
13.3  文章详情页 278
13.3.1  加载内容 278
13.3.2  加载评论 281
13.4  总结 286
第14章  实战：电商网站项目开发 288
14.1  项目工程搭建 288
14.2  商品列表页 290
14.2.1  需求分析与模块拆分 290
14.2.2  商品简介组件 291
14.2.3  列表按照价格、销量排序 297
14.2.4  列表按照品牌、颜色筛选 306
14.3  商品详情页 309
14.4  购 物 车 313
14.4.1  准备数据 314
14.4.2  显示和操作数据 316
14.4.3  使用优惠码 320
14.5  总结 324
第15章  相关开源项目介绍 325
15.1  服务端渲染与Nuxt.js 325
15.1.1  是否需要服务端渲染 325
15.1.2  Nuxt.js 326
15.2  HTTP库axios 327
15.3  多语言插件vue-i18n 329
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Vue.js 实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>寻宝记
第一篇 基础篇
第一章 初识

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>寻宝记
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Vue.js项目开发实战
目录
前言
第1篇 背景知识
第1章 初探网页开发2
1.1 网页开发历史2
1.1.1 传统网页开发3
1.1.2 新前端网页开发5
1.2 MVVM风格开发框架6
1.2.1 为什么会出现MVVM6
1.2.2 MVVM架构的最佳实践7
1.2.3 MVC、MVP和MVVM开发模式对比8
1.3 Vue.js来了9
1.4 Vue.js的安装10
1.4.1 使用独立版本11
1.4.2 使用CDN安装13
1.4.3 “npm大法”安装15
1.4.4 使用Chrome浏览器测试Vue.js的双向绑定17
1.5 Vue.js的主要特性19
1.5.1 组件19
1.5.2 模板22
1.5.3 响应式设计22
1.5.4 过渡效果22
1.5.5 单文件组件24
1.6 小结与练习24
1.6.1 小结24
1.6.2 练习25
第2篇 项目设计
第2章 开启Vue.js之旅的准备工作28
2.1 JavaScript运行与开发环境28
2.1.1 神奇的包管理器——npm28
2.1.2 好用的浏览器——Chrome31
2.1.3 Vue.js的调试神器——vue-devtools34
2.1.4 非常智能的IDE——WebStorm36
2.2 认识ECMAScript 6（ES 6）39
2.2.1 ES 6的前世今生39
2.2.2 为什么要使用ES 640
2.3 ES 6的一些常用语法40
2.3.1 Default Parameters（默认参数）40
2.3.2 Template Literals（模板文本）41
2.3.3 Multi-line Strings（多行字符串）41
2.3.4 Destructuring Assignment（解构赋值）42
2.3.5 Enhanced Object Literals（增强的对象文本）42
2.3.6 Arrow Functions（箭头函数）43
2.3.7 Promise实现44
2.3.8 块作用域构造let45
2.3.9 Classes（类）46
2.3.10 Modules（模块）46
2.4 使用Babel进行ES 6的转化47
2.4.1 安装Babel48
2.4.2 使用Babel48
2.5 精简压缩生产环境的Webpack51
2.5.1 Webpack是什么51
2.5.2 配置一个完整项目的Webpack52
2.5.3 不得不说的新版Webpack 456
2.6 小结与练习59
2.6.1 小结59
2.6.2 练习59
第3章 从一个电影网站项目学习Vue.js60
3.1 快速构建第一个Vue.js程序60
3.1.1 通过CLI构建应用60
3.1.2 输出Hello world！63
3.1.3 开发环境与生产环境66
3.2 电影网站的设计70
3.2.1 网站的功能设计70
3.2.2 网站的路由设计71
3.2.3 网站的页面设计72
3.3 电影网站的技术选择73
3.3.1 服务的坚实后盾——数据库73
3.3.2 数据的搬运和加工——服务器端74
3.4 小结与练习74
3.4.1 小结74
3.4.2 练习75
第4章 电影网站数据库的搭建76
4.1 什么是数据库76
4.1.1 什么是SQL76
4.1.2 什么是NoSQL78
4.1.3 两种数据库的对比分析79
4.2 MongoDB基础入门80
4.2.1 为什么选择MongoDB80
4.2.2 安装MongoDB81
4.2.3 启动MongoDB83
4.2.4 安装MongoDB的可视化界面87
4.2.5 MongoDB的基础操作90
4.3 电影网站数据库的建立92
4.3.1 数据库的分析与设计93
4.3.2 数据集的建立94
4.4 小结与练习96
4.4.1 小结96
4.4.2 练习97
第3篇 Vue.js应用开发
第5章 电影网站服务器端的设计100
5.1 使用JavaScript开发后端服务100
5.1.1 神奇的Node.js100
5.1.2 什么是Express101
5.2 使用Express进行Web开发102
5.2.1 安装Express102
5.2.2 设计后台服务API105
5.2.3 设计路由107
5.3 服务器测试108
5.3.1 一个测试H T T P请求的Postman插件108
5.3.2 在Chrome中安装Postman插件109
5.3.3 使用Postman插件进行数据测试110
5.4 Express后台代码编写112
5.4.1 新建工程112
5.4.2 连接数据库115
5.4.3 使用Supervisor监控代码的修改118
5.5 用户系统开发119
5.5.1 注册路由122
5.5.2 登录路由125
5.5.3 找回密码路由128
5.5.4 提交评论路由133
5.5.5 点赞路由135
5.5.6 下载路由137
5.5.7 发送站内信路由138
5.5.8 接收站内信路由141
5.6 前台API开发143
5.6.1 显示排行榜145
5.6.2 显示文章列表145
5.6.3 显示文章内容146
5.6.4 显示用户个人信息147
5.7 后台API开发148
5.7.1 添加电影148
5.7.2 删除电影151
5.7.3 更新电影152
5.7.4 获取所有电影153
5.7.5 获取用户评论154
5.7.6 审核用户评论154
5.7.7 删除用户评论156
5.7.8 封停用户157
5.7.9 更新用户密码159
5.7.10 显示所有用户160
5.7.11 管理用户权限162
5.7.12 新增文章163
5.7.13 删除文章165
5.7.14 新增主页推荐166
5.7.15 删除热点信息168
5.8 小结与练习169
5.8.1 小结169
5.8.2 练习170
第6章 Vue.js项目开发技术解析171
6.1 Vue.js实例171
6.1.1 何为构造器171
6.1.2 实例的属性和方法172
6.1.3 生命周期173
6.2 Vue.js路由175
6.2.1 RESTful模式的路由175
6.2.2 安装vue-router175
6.3 Vue.js路由配置vue-router176
6.3.1 动态路由匹配176
6.3.2 嵌套路由179
6.3.3 编程式导航181
6.3.4 命名路由183
6.3.5 命名视图184
6.3.6 重定向和别名186
6.3.7 路由组件传递参数187
6.3.8 HTML 5 History模式188
6.4 数据获取189
6.4.1 导航守卫189
6.4.2 数据获取193
6.5 电影网站项目路由设计195
6.5.1 新建Vue.js项目195
6.5.2 前台
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Vue.js项目开发实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node.js实战：使用Egg.js+Vue.js+Docker构建渐进式、可持续集成与交付应用
第1章  Node.js的优势  1
1.1  为什么是JavaScript语言  1
1.2  为什么经常说Node.js不适合大型应用  3
第2章  Egg.js框架核心原理与实现  6
2.1  异步基础  6
2.2  Koa.js基础知识  15
2.2.1  Koa.js 中间件核心代码  16
2.2.2  Koa.js插件  18
2.3  Egg.js 基础知识  21
2.3.1  实现 egg-core  22
2.3.2  实现 egg-init  26
2.3.3  实现egg-cluster  30
2.4  Egg.js插件  33
2.4.1  egg-socket.io  33
2.4.2  原理解读  39
2.5  制作一个Egg.js插件  43
第3章  构建后端API服务  52
3.1  安装相关组件  52
3.2  发布一个插件  59
3.2.1  创建Flash插件  59
3.2.2  使用egg-msg-flash  72
3.2.3  使用egg-y-validator  73
3.3  规范化  73
3.3.1  添加新的scripts支持ESLint自修复  74
3.3.2  添加插件支持  74
3.3.3  prettier格式化工具  76
3.3.4  同步代码编辑器配置  76
3.4  第一个JSON请求  77
3.4.1  给全局添加一些方法  77
3.4.2  全局化一些东西  84
3.4.3  自动路由  86
3.4.4  创建 PostMan 测试  88
3.5  注册服务  91
3.5.1  Invitation模型  91
3.5.2  注释  93
3.5.3  User模型  96
3.5.4  修改控制器  97
3.5.5  添加验证逻辑  98
3.5.6  帮助方法  99
3.5.7  User服务  101
3.5.8  PostMan测试  103
3.6  登录服务  104
3.7  邮件与调试  115
3.7.1  理解发送邮件的原理  115
3.7.2  安装邮件插件  115
3.7.3  环境与调试  116
3.7.4  全局调试  118
3.7.5  VSCode全局调试  121
3.7.6  发送验证邮件  122
3.7.7  添加逻辑  125
3.7.8  验证  135
3.8  构建 RESTful API  137
3.8.1  什么是RESTful API  137
3.8.2  创建RESTController基础类便于继承  138
3.8.3  测试Images RESTful API  141
3.8.4  构建后台的REST路由  143
3.8.5  构建控制器  145
3.8.6  测试后台路由  148
3.8.7  关于验证  149
3.9  安全地开放API  151
3.10  实现OAuth接口  158
3.10.1  实现授权码官方文档所要求的接口  158
3.10.2  实现刷新验证码接口  167
3.10.3  实现 authenticate 所需接口  169
3.11  完善OAuth与测试  170
3.11.1  发放Token  170
3.11.2  新建客户端项目  172
3.11.3  测试OAuth  173
3.12  支付宝支付  176
3.12.1  什么是非对称加密  176
3.12.2  注册支付宝  176
3.12.3  生成非对称秘钥  176
3.12.4  实现  177
3.12.5  添加路由  180
3.12.6  内网穿透  180
3.12.7  测试  182
3.13  社会化登录  183
第4章  构建后台管理页面  189
4.1  后端开发  189
4.1.1  安装VSCode插件  189
4.1.2  获取脚手架  189
4.1.3  安装依赖  190
4.1.4  修改代码  190
4.1.5  跨域请求  191
4.1.6  修改后端代码支持跨域  192
4.1.7  在前端添加存储  198
4.2  模型列表  200
4.3  添加数据  209
4.4  修改逻辑  220
第5章  前端界面设计与实现  228
5.1  搭建前端开发环境  228
5.1.1  开始  228
5.1.2  创建Header头部  229
5.1.3  将变量提取出来  234
5.1.4  添加路径重写  235
5.2  AppFooter组件  237
5.2.1  做一些配置  237
5.2.2  创建src/components/layouts/AppFooter.vue  238
5.2.3  网络识别信息  247
5.2.4  修改一下全局样式  247
5.2.5  查看页面  248
5.2.6  提升编译速度  248
5.3  首页  249
5.4  替换成为真实数据  269
5.4.1  完成后端Image API  269
5.4.2  修改首页的代码  271
5.4.3  添加API逻辑  276
5.4.4  效果  278
5.5  图片详情页  278
5.5.1  创建路由  279
5.5.2  安装依赖  279
5.5.3  创建视图  279
5.5.4  添加插件  285
5.5.5  创建评论组件  286
5.5.6  测试  290
5.5.7  关于服务端访问DOM  290
5.6  注册页面  294
5.6.1  注册路由  294
5.6.2  新建signup.vue页面  295
5.6.3  增强错误提示  299
5.7  登录页面  299
5.8  完善详情与评论  310
5.9  个人中心  321
5.10  创建图片  336
5.10.1  创建又拍云存储  336
5.10.2  添加后端API  338
5.10.3  前端界面  340
5.10.4  测试  348
5.11  团队  349
5.11.1  功能是如何工作的  350
5.11.2  数据库  350
5.11.3  后端  356
5.11.4  前端  363
5.11.5  测试  372
第6章  部署与运维  374
6.1  认识Docker  374
6.1.1  解决了什么问题  374
6.1.2  使用Docker的流程  375
6.1.3  安装Docker  378
6.1.4  使用加速器  378
6.1.5  下载一个基础镜像  379
6.1.6  hello world  379
6.2  手动构建镜像  380
6.3  编写Dockerfile文件  384
6.4  Docker Compose  387
6.4.1  安装docker-compose  387
6.4.2  命令行接口  388
6.4.3  Egg.js简单实例  389
6.4.4  增加服务  391
6.5  集群  396
6.5.1  Docker集群  396
6.5.2  集群初始化  396
6.5.3  实例  397
6.6  持续部署  400
6.6.1  部署主机免密码登录  400
6.6.2  客户端钩子  401
6.6.3  使用服务端钩子进行部署  403
6.6.4  使用 shipit  404
6.6.5  使用 Ansible 部署  406
6.7  持续集成  409
6.8  Kubernetes集群  423
6.8.1  简单使用  423
6.8.2  如何创建应用  425
6.8.3  命令行管理  430
6.8.4  通过UI创建应用  433
6.8.5  添加持续集成  439
6.8.6  固定IP地址  441
6.8.7  部署前端  442
第7章  性能分析与优化  448
7.1  服务器性能分析与测试  448
7.2  用户追踪  458
7.2.1  百度分析  458
7.2.2  Google分析  460
7.2.3  其他付费服务  461
7.3  前端性能分析与优化  461
7.3.1  lighthouse  461
7.3.2  sonarwhal  462
7.3.3  图片压缩  464
7.3.4  错误上报  465
7.3.5  接收用户反馈  466
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Node.js实战：使用Egg.js+Vue.js+Docker构建渐进式、可持续集成与交付应用
