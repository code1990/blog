>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>第一行代码
第1章  开始启程，你的第一行Android代码  1
1.1  了解全貌，Android王国简介  2
1.1.1  Android系统架构  2
1.1.2  Android已发布的版本  3
1.1.3  Android应用开发特色  4
1.2  手把手带你搭建开发环境  5
1.2.1  准备所需要的软件  5
1.2.2  搭建开发环境  6
1.3  创建你的第一个Android项目  11
1.3.1  创建HelloWorld项目  11
1.3.2  运行HelloWorld  14
1.3.3  分析你的第一个Android程序  16
1.3.4  详解项目中的资源  20
1.4  前行必备，掌握日志工具的使用  22
1.4.1  添加LogCat到你的Eclipse  22
1.4.2  使用Android的日志工具Log  23
1.4.3  为什么使用Log而不使用System.out  24
1.5  小结与点评  26
第2章  先从看得到的入手，探究活动  28
2.1  活动是什么  28
2.2  活动的基本用法  28
2.2.1  手动创建活动  29
2.2.2  创建和加载布局  30
2.2.3  在AndroidManifest文件中注册  34
2.2.4  隐藏标题栏  35
2.2.5  在活动中使用Toast  36
2.2.6  在活动中使用Menu  38
2.2.7  销毁一个活动  41
2.3  使用Intent在活动之间穿梭  41
2.3.1  使用显式Intent  41
2.3.2  使用隐式Intent  44
2.3.3  更多隐式Intent的用法  46
2.3.4  向下一个活动传递数据  51
2.3.5  返回数据给上一个活动  52
2.4  活动的生命周期  55
2.4.1  返回栈  55
2.4.2  活动状态  56
2.4.3  活动的生存期  56
2.4.4  体验活动的生命周期  58
2.4.5  活动被回收了怎么办  66
2.5  活动的启动模式  68
2.5.1  standard  68
2.5.2  singleTop  70
2.5.3  singleTask  72
2.5.4  singleInstance  74
2.6  活动的最佳实践  77
2.6.1  知晓当前是在哪一个活动  77
2.6.2  随时随地退出程序  78
2.6.3  启动活动的最佳写法  80
2.7  小结与点评  81
第3章  软件也要拼脸蛋，UI开发的点点滴滴  83
3.1  该如何编写程序界面  83
3.2  常见控件的使用方法  84
3.2.1  TextView  84
3.2.2  Button  88
3.2.3  EditText  90
3.2.4  ImageView  95
3.2.5  ProgressBar  97
3.2.6  AlertDialog  101
3.2.7  ProgressDialog  103
3.3  详解四种基本布局  105
3.3.1  LinearLayout  105
3.3.2  RelativeLayout  112
3.3.3  FrameLayout  116
3.3.4  TableLayout  117
3.4  系统控件不够用？创建自定义控件  120
3.4.1  引入布局  121
3.4.2  创建自定义控件  124
3.5  最常用和最难用的控件——ListView  127
3.5.1  ListView的简单用法  127
3.5.2  定制ListView的界面  129
3.5.3  提升ListView的运行效率  133
3.5.4  ListView的点击事件  135
3.6  单位和尺寸  137
3.6.1  px和pt的窘境  137
3.6.2  dp和sp来帮忙  139
3.7  编写界面的最佳实践  141
3.7.1  制作Nine-Patch图片  141
3.7.2  编写精美的聊天界面  145
3.8  小结与点评  151
第4章  手机平板要兼顾，探究碎片  153
4.1  碎片是什么  153
4.2  碎片的使用方式  155
4.2.1  碎片的简单用法  157
4.2.2  动态添加碎片  160
4.2.3  在碎片中模拟返回栈  163
4.2.4  碎片和活动之间进行通信  164
4.3  碎片的生命周期  165
4.3.1  碎片的状态和回调  165
4.3.2  体验碎片的生命周期  168
4.4  动态加载布局的技巧  171
4.4.1  使用限定符  171
4.4.2  使用最小宽度限定符  174
4.5  碎片的最佳实践——一个简易版的新闻应用  175
4.6  小结与点评  187
第5章  全局大喇叭，详解广播机制  188
5.1  广播机制简介  188
5.2  接收系统广播  189
5.2.1  动态注册监听网络变化  190
5.2.2  静态注册实现开机启动  194
5.3  发送自定义广播  196
5.3.1  发送标准广播  197
5.3.2  发送有序广播  199
5.4  使用本地广播  202
5.5  广播的最佳实践——实现强制下线功能  205
5.6  Git时间，初识版本控制工具  215
5.6.1  安装Git  215
5.6.2  创建代码仓库  216
5.6.3  提交本地代码  218
5.7  小结与点评  218
第6章  数据存储全方案，详解持久化技术  220
6.1  持久化技术简介  220
6.2  文件存储  221
6.2.1  将数据存储到文件中  221
6.2.2  从文件中读取数据  225
6.3  SharedPreferences存储  228
6.3.1  将数据存储到SharedPreferences中  229
6.3.2  从SharedPreferences中读取数据  232
6.3.3  实现记住密码功能  234
6.4  SQLite数据库存储  238
6.4.1  创建数据库  239
6.4.2  升级数据库  245
6.4.3  添加数据  248
6.4.4  更新数据  251
6.4.5  删除数据  254
6.4.6  查询数据  256
6.4.7  使用SQL操作数据库  260
6.5  SQLite数据库的最佳实践  260
6.5.1  使用事务  261
6.5.2  升级数据库的最佳写法  263
6.6  小结与点评  266
第7章  跨程序共享数据，探究内容提供器  268
7.1  内容提供器简介  268
7.2  访问其他程序中的数据  269
7.2.1  ContentResolver的基本用法  269
7.2.2  读取系统联系人  271
7.3  创建自己的内容提供器  275
7.3.1  创建内容提供器的步骤  276
7.3.2  实现跨程序数据共享  281
7.4  Git时间，版本控制工具进阶  292
7.4.1  忽略文件  292
7.4.2  查看修改内容  293
7.4.3  撤销未提交的修改  295
7.4.4  查看提交记录  296
7.5  小结与点评  297
第8章  丰富你的程序，运用手机多媒体  298
8.1  使用通知  298
8.1.1  通知的基本用法  298
8.1.2  通知的高级技巧  305
8.2  接收和发送短信  307
8.2.1  接收短信  308
8.2.2  拦截短信  313
8.2.3  发送短信  314
8.3  调用摄像头和相册  320
8.3.1  将程序运行到手机上  320
8.3.2  调用摄像头拍照  322
8.3.3  从相册中选择照片  327
8.4  播放多媒体文件  331
8.4.1  播放音频  332
8.4.2  播放视频  336
8.5  小结与点评  340
第9章  后台默默的劳动者，探究服务  341
9.1  服务是什么  341
9.2  Android多线程编程  341
9.2.1  线程的基本用法  342
9.2.2  在子线程中更新UI  343
9.2.3  解析异步消息处理机制  348
9.2.4  使用AsyncTask  349
9.3  服务的基本用法  353
9.3.1  定义一个服务  353
9.3.2  启动和停止服务  355
9.3.3  活动和服务进行通信  359
9.4  服务的生命周期  363
9.5  服务的更多技巧  364
9.5.1  使用前台服务  364
9.5.2  使用IntentService  367
9.6  服务的最佳实践——后台执行的定时任务  371
9.7  小结与点评  376
第10章  看看精彩的世界，使用网络技术  377
10.1  WebView的用法  377
10.2  使用HTTP协议访问网络  380
10.2.1  使用HttpURLConnection  380
10.2.2  使用HttpClient  385
10.3  解析XML格式数据  388
10.3.1  Pull解析方式  391
10.3.2  SAX解析方式  394
10.4  解析JSON格式数据  398
10.4.1  使用JSONObject  399
10.4.2  使用GSON  401
10.5  网络编程的最佳实践  404
10.6  小结与点评  408
第11章  Android特色开发，基于位置的服务  409
11.1  基于位置的服务简介  409
11.2  找到自己的位置  409
11.2.1  LocationManager的基本用法  410
11.2.2  确定自己位置的经纬度  412
11.3  反向地理编码，看得懂的位置信息  415
11.3.1  Geocoding API的用法  416
11.3.2  对经纬度进行解析  417
11.4  使用百度地图  420
11.4.1  申请API Key  420
11.4.2  让地图显示出来  423
11.4.3  定位到我的位置  427
11.4.4  使用覆盖物来增加更多功能  430
11.5  Git时间，版本控制工具的高级用法  434
11.5.1  分支的用法  434
11.5.2  与远程版本库协作  437
11.6  小结与点评  438
第12章  Android特色开发，使用传感器  439
12.1  传感器简介  439
12.2  光照传感器  439
12.2.1  光照传感器的用法  440
12.2.2  制作简易光照探测器  441
12.3  加速度传感器  443
12.3.1  加速度传感器的用法  443
12.3.2  模仿微信摇一摇  444
12.4  方向传感器  446
12.4.1  方向传感器的用法  446
12.4.2  制作简易指南针  448
12.5  小结与点评  453
第13章  继续进阶，你还应该掌握的高级技巧  455
13.1  全局获取Context的技巧  455
13.2  使用Intent传递对象  459
13.2.1  Serializable方式  459
13.2.2  Parcelable方式  461
13.3  定制自己的日志工具  462
13.4  调试Android程序  464
13.5  编写测试用例  468
13.5.1  创建测试工程  468
13.5.2  进行单元测试  471
13.6  总结  474
第14章  进入实战，开发酷欧天气  476
14.1  功能需求及技术可行性分析  476
14.2  Git时间，将代码托管到GitHub上  478
14.3  创建数据库和表  485
14.4  遍历全国省市县数据  494
14.5  显示天气信息  507
14.6  切换城市和手动更新天气  519
14.7  后台自动更新天气  523
14.8  修改图标和名称  526
14.9  你还可以做的事情  528
第15章  最后一步，将应用发布到Google Play  530
15.1  生成正式签名的APK文件  530
15.2  申请Google Play账号  533
15.3  上传和发布应用程序  534
15.4  嵌入广告进行盈利  541
15.4.1  注册有米账号和验证身份  542
15.4.2  下载和接入有米SDK  544
15.4.3  重新发布应用程序  550
15.5  结束语  553
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>第一行代码
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>第一行代码：Android（第2版）
第1章　开始启程——你的第一行Android代码　　1
1.1　了解全貌——Android王国简介　　2
1.1.1　Android系统架构　　2
1.1.2　Android已发布的版本　　3
1.1.3　Android应用开发特色　　4
1.2　手把手带你搭建开发环境　　5
1.2.1　准备所需要的工具　　5
1.2.2　搭建开发环境　　5
1.3　创建你的第一个Android项目　　9
1.3.1　创建HelloWorld项目　　9
1.3.2　启动模拟器　　12
1.3.3　运行HelloWorld　　15
1.3.4　分析你的第一个Android程序　　16
1.3.5　详解项目中的资源　　22
1.3.6　详解build.gradle文件　　23
1.4　前行必备——掌握日志工具的使用　　26
1.4.1　使用Android的日志工具Log　　26
1.4.2　为什么使用Log而不使用System.out　　27
1.5　小结与点评　　29
第2章　先从看得到的入手——探究活动　　30
2.1　活动是什么　　30
2.2　活动的基本用法　　30
2.2.1　手动创建活动　　31
2.2.2　创建和加载布局　　32
2.2.3　在AndroidManifest文件中注册　　35
2.2.4　在活动中使用Toast　　37
2.2.5　在活动中使用Menu　　38
2.2.6　销毁一个活动　　40
2.3　使用Intent在活动之间穿梭　　41
2.3.1　使用显式Intent　　41
2.3.2　使用隐式Intent　　44
2.3.3　更多隐式Intent的用法　　46
2.3.4　向下一个活动传递数据　　50
2.3.5　返回数据给上一个活动　　51
2.4　活动的生命周期　　53
2.4.1　返回栈　　53
2.4.2　活动状态　　54
2.4.3　活动的生存期　　55
2.4.4　体验活动的生命周期　　56
2.4.5　活动被回收了怎么办　　62
2.5　活动的启动模式　　63
2.5.1　standard　　64
2.5.2　singleTop　　65
2.5.3　singleTask　　67
2.5.4　singleInstance　　68
2.6　活动的最佳实践　　71
2.6.1　知晓当前是在哪一个活动　　71
2.6.2　随时随地退出程序　　72
2.6.3　启动活动的最佳写法　　74
2.7　小结与点评　　75
第3章　软件也要拼脸蛋——UI开发的点点滴滴　　76
3.1　如何编写程序界面　　76
3.2　常用控件的使用方法　　77
3.2.1　TextView　　77
3.2.2　Button　　80
3.2.3　EditText　　82
3.2.4　ImageView　　86
3.2.5　ProgressBar　　88
3.2.6　AlertDialog　　91
3.2.7　ProgressDialog　　93
3.3　详解4种基本布局　　94
3.3.1　线性布局　　94
3.3.2　相对布局　　100
3.3.3　帧布局　　103
3.3.4　百分比布局　　105
3.4　系统控件不够用？创建自定义控件　　108
3.4.1　引入布局　　109
3.4.2　创建自定义控件　　111
3.5　最常用和最难用的控件——ListView　　113
3.5.1　ListView的简单用法　　114
3.5.2　定制ListView的界面　　115
3.5.3　提升ListView的运行效率　　119
3.5.4　ListView的点击事件　　120
3.6　更强大的滚动控件——RecyclerView　　122
3.6.1　RecyclerView的基本用法　　122
3.6.2　实现横向滚动和瀑布流布局　　125
3.6.3　RecyclerView的点击事件　　130
3.7　编写界面的最佳实践　　132
3.7.1　制作Nine-Patch图片　　132
3.7.2　编写精美的聊天界面　　135
3.8　小结与点评　　141
第4章　手机平板要兼顾——探究碎片　　142
4.1　碎片是什么　　142
4.2　碎片的使用方式　　144
4.2.1　碎片的简单用法　　144
4.2.2　动态添加碎片　　147
4.2.3　在碎片中模拟返回栈　　150
4.2.4　碎片和活动之间进行通信　　151
4.3　碎片的生命周期　　151
4.3.1　碎片的状态和回调　　151
4.3.2　体验碎片的生命周期　　153
4.4　动态加载布局的技巧　　156
4.4.1　使用限定符　　156
4.4.2　使用最小宽度限定符　　159
4.5　碎片的最佳实践——一个简易版的新闻应用　　160
4.6　小结与点评　　169
第5章　全局大喇叭——详解广播机制　　170
5.1　广播机制简介　　170
5.2　接收系统广播　　171
5.2.1　动态注册监听网络变化　　171
5.2.2　静态注册实现开机启动　　174
5.3　发送自定义广播　　177
5.3.1　发送标准广播　　177
5.3.2　发送有序广播　　179
5.4　使用本地广播　　183
5.5　广播的最佳实践——实现强制下线功能　　185
5.6　Git时间——初识版本控制工具　　192
5.6.1　安装Git　　192
5.6.2　创建代码仓库　　193
5.6.3　提交本地代码　　195
5.7　小结与点评　　195
第6章　数据存储全方案——详解持久化技术　　196
6.1　持久化技术简介　　196
6.2　文件存储　　197
6.2.1　将数据存储到文件中　　197
6.2.2　从文件中读取数据　　201
6.3　SharedPreferences存储　　203
6.3.1　将数据存储到SharedPreferences中　　203
6.3.2　从SharedPreferences中读取数据　　206
6.3.3　实现记住密码功能　　208
6.4　SQLite数据库存储　　211
6.4.1　创建数据库　　211
6.4.2　升级数据库　　216
6.4.3　添加数据　　219
6.4.4　更新数据　　222
6.4.5　删除数据　　224
6.4.6　查询数据　　225
6.4.7　使用SQL操作数据库　　228
6.5　使用LitePal操作数据库　　229
6.5.1　LitePal简介　　229
6.5.2　配置LitePal　　230
6.5.3　创建和升级数据库　　231
6.5.4　使用LitePal添加数据　　236
6.5.5　使用LitePal更新数据　　237
6.5.6　使用LitePal删除数据　　240
6.5.7　使用LitePal查询数据　　241
6.6　小结与点评　　243
第7章　跨程序共享数据——探究内容提供器　　244
7.1　内容提供器简介　　244
7.2　运行时权限　　245
7.2.1　Android权限机制详解　　245
7.2.2　在程序运行时申请权限　　249
7.3　访问其他程序中的数据　　254
7.3.1　ContentResolver的基本用法　　254
7.3.2　读取系统联系人　　256
7.4　创建自己的内容提供器　　260
7.4.1　创建内容提供器的步骤　　261
7.4.2　实现跨程序数据共享　　265
7.5　Git时间——版本控制工具进阶　　275
7.5.1　忽略文件　　275
7.5.2　查看修改内容　　276
7.5.3　撤销未提交的修改　　278
7.5.4　查看提交记录　　279
7.6　小结与点评　　280
第8章　丰富你的程序——运用手机多媒体　　281
8.1　将程序运行到手机上　　281
8.2　使用通知　　283
8.2.1　通知的基本用法　　283
8.2.2　通知的进阶技巧　　289
8.2.3　通知的高级功能　　291
8.3　调用摄像头和相册　　293
8.3.1　调用摄像头拍照　　294
8.3.2　从相册中选择照片　　298
8.4　播放多媒体文件　　303
8.4.1　播放音频　　303
8.4.2　播放视频　　307
8.5　小结与点评　　311
第9章　看看精彩的世界——使用网络技术　　312
9.1　WebView的用法　　312
9.2　使用HTTP协议访问网络　　314
9.2.1　使用HttpURLConnection　　315
9.2.2　使用OkHttp　　319
9.3　解析XML格式数据　　321
9.3.1　Pull解析方式　　324
9.3.2　SAX解析方式　　326
9.4　解析JSON格式数据　　329
9.4.1　使用JSONObject　　330
9.4.2　使用GSON　　331
9.5　网络编程的最佳实践　　334
9.6　小结与点评　　338
第10章　后台默默的劳动者——探究服务　　339
10.1　服务是什么　　339
10.2　Android多线程编程　　340
10.2.1　线程的基本用法　　340
10.2.2　在子线程中更新UI　　341
10.2.3　解析异步消息处理机制　　345
10.2.4　使用AsyncTask　　347
10.3　服务的基本用法　　349
10.3.1　定义一个服务　　349
10.3.2　启动和停止服务　　352
10.3.3　活动和服务进行通信　　355
10.4　服务的生命周期　　359
10.5　服务的更多技巧　　359
10.5.1　使用前台服务　　359
10.5.2　使用IntentService　　361
10.6　服务的最佳实践——完整版的下载示例　　365
10.7　小结与点评　　378
第11章　Android特色开发——基于位置的服务　　379
11.1　基于位置的服务简介　　379
11.2　申请API Key　　380
11.3　使用百度定位　　384
11.3.1　准备LBS SDK　　384
11.3.2　确定自己位置的经纬度　　386
11.3.3　选择定位模式　　391
11.3.4　看得懂的位置信息　　393
11.4　使用百度地图　　395
11.4.1　让地图显示出来　　395
11.4.2　移动到我的位置　　397
11.4.3　让“我”显示在地图上　　400
11.5　Git时间——版本控制工具的高级用法　　402
11.5.1　分支的用法　　403
11.5.2　与远程版本库协作　　404
11.6　小结与点评　　406
第12章　最佳的UI体验——MaterialDesign实战　　407
12.1　什么是Material Design　　407
12.2　Toolbar　　408
12.3　滑动菜单　　415
12.3.1　DrawerLayout　　415
12.3.2　NavigationView　　418
12.4　悬浮按钮和可交互提示　　423
12.4.1　FloatingActionButton　　424
12.4.2　Snackbar　　427
12.4.3　CoordinatorLayout　　428
12.5　卡片式布局　　430
12.5.1　CardView　　431
12.5.2　AppBarLayout　　437
12.6　下拉刷新　　440
12.7　可折叠式标题栏　　443
12.7.1　CollapsingToolbarLayout　　443
12.7.2　充分利用系统状态栏空间　　453
12.8　小结与点评　　456
第13章　继续进阶——你还应该掌握的高级技巧　　457
13.1　全局获取Context的技巧　　457
13.2　使用Intent传递对象　　461
13.2.1　Serializable方式　　461
13.2.2　Parcelable方式　　463
13.3　定制自己的日志工具　　464
13.4　调试Android程序　　466
13.5　创建定时任务　　469
13.5.1　Alarm机制　　469
13.5.2　Doze模式　　471
13.6　多窗口模式编程　　472
13.6.1　进入多窗口模式　　473
13.6.2　多窗口模式下的生命周期　　475
13.6.3　禁用多窗口模式　　479
13.7　Lambda表达式　　481
13.8　总结　　485
第14章　进入实战——开发酷欧天气　　486
14.1　功能需求及技术可行性分析　　486
14.2　Git时间——将代码托管到GitHub上　　489
14.3　创建数据库和表　　494
14.4　遍历全国省市县数据　　499
14.5　显示天气信息　　509
14.5.1　定义GSON实体类　　509
14.5.2　编写天气界面　　514
14.5.3　将天气显示到界面上　　520
14.5.4　获取必应每日一图　　526
14.6　手动更新天气和切换城市　　532
14.6.1　手动更新天气　　532
14.6.2　切换城市　　535
14.7　后台自动更新天气　　540
14.8　修改图标和名称　　542
14.9　你还可以做的事情　　543
第15章　最后一步——将应用发布到360应用商店　　545
15.1　生成正式签名的APK文件　　545
15.1.1　使用Android Studio生成　　546
15.1.2　使用Gradle生成　　548
15.1.3　生成多渠道APK文件　　551
15.2　申请360开发者账号　　554
15.3　发布应用程序　　556
15.4　嵌入广告进行盈利　　560
15.4.1　注册腾讯广告联盟账号　　560
15.4.2　新建媒体和广告位　　562
15.4.3　接入广告SDK　　564
15.4.4　重新发布应用程序　　569
15.5　结束语　　570
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>第一行代码：Android（第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>仿生人会梦见电子羊吗？
小说正文
译后记
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>仿生人会梦见电子羊吗？
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android软件安全与逆向分析
第1章 　Android程序分析环境搭建　　1
1.1 　Windows分析环境搭建　　1
1.1.1 　安装JDK　　1
1.1.2 　安装Android SDK　　3
1.1.3 　安装Android NDK　　5
1.1.4 　Eclipse集成开发环境　　6
1.1.5 　安装CDT、ADT插件　　6
1.1.6 　创建Android Virtual Device　　8
1.1.7 　使用到的工具　　9
1.2 　Linux分析环境搭建　　9
1.2.1 　本书的Linux环境　　9
1.2.2 　安装JDK　　9
1.2.3 　在Ubuntu上安装Android SDK　　10
1.2.4 　在Ubuntu上安装Android NDK　　11
1.2.5 　在Ubuntu上安装Eclipse集成开发环境　　12
1.2.6 　在Ubuntu上安装CDT、ADT插件　　13
1.2.7 　创建Android Virtual Device　　13
1.2.8 　使用到的工具　　15
1.3 　本章小结　　15
第2章 　如何分析Android程序　　16
2.1 　编写第一个Android程序　　16
2.1.1 　使用Eclipse创建Android工程　　16
2.1.2 　编译生成APK文件　　19
2.2 　破解第一个程序　　20
2.2.1 　如何动手？　　20
2.2.2 　反编译APK文件　　20
2.2.3 　分析APK文件　　21
2.2.4 　修改Smali文件代码　　26
2.2.5 　重新编译APK文件并签名　　26
2.2.6 　安装测试　　27
2.3 　本章小结　　28
第3章 　进入Android Dalvik虚拟机　　29
3.1 　Dalvik虚拟机的特点——掌握Android程序的运行原理　　29
3.1.1 　Dalvik虚拟机概述　　29
3.1.2 　Dalvik虚拟机与Java虚拟机的区别　　29
3.1.3 　Dalvik虚拟机是如何执行程序的　　34
3.1.4 　关于Dalvik虚拟机JIT（即时编译）　　36
3.2 　Dalvik汇编语言基础为分析Android程序做准备　　37
3.2.1 　Dalvik指令格式　　37
3.2.2 　DEX文件反汇编工具　　39
3.2.3 　了解Dalvik寄存器　　40
3.2.4 　两种不同的寄存器表示方法——v命名法与p命名法　　42
3.2.5 　Dalvik字节码的类型、方法与字段表示方法　　43
3.3 　Dalvik指令集　　44
3.3.1 　指令特点　　45
3.3.2 　空操作指令　　45
3.3.3 　数据操作指令　　46
3.3.4 　返回指令　　46
3.3.5 　数据定义指令　　46
3.3.6 　锁指令　　47
3.3.7 　实例操作指令　　47
3.3.8 　数组操作指令　　48
3.3.9 　异常指令　　48
3.3.10 　跳转指令　　48
3.3.11 　比较指令　　49
3.3.12 　字段操作指令　　50
3.3.13 　方法调用指令　　50
3.3.14 　数据转换指令　　51
3.3.15 　数据运算指令　　51
3.4 　Dalvik指令集练习——写一个Dalvik版的Hello World　　52
3.4.1 　编写smali文件　　52
3.4.2 　编译smali文件　　54
3.4.3 　测试运行　　54
3.5 　本章小结　　55
第4章 　Android可执行文件　　56
4.1 　Android程序的生成步骤　　56
4.2 　Android程序的安装流程　　59
4.3 　dex文件格式　　66
4.3.1 　dex文件中的数据结构　　66
4.3.2 　dex文件整体结构　　68
4.3.3 　dex文件结构分析　　71
4.4 　odex文件格式　　80
4.4.1 　如何生成odex文件　　80
4.4.2 　odex文件整体结构　　81
4.4.3 　odex文件结构分析　　83
4.5 　dex文件的验证与优化工具dexopt的工作过程　　88
4.6 　Android应用程序另类破解方法　　91
4.7 　本章小结　　93
第5章 　静态分析Android程序　　94
5.1 　什么是静态分析　　94
5.2 　快速定位Android程序的关键代码　　94
5.2.1 　反编译apk程序　　94
5.2.2 　程序的主Activity　　95
5.2.3 　需重点关注的Application类　　95
5.2.4 　如何定位关键代码——六种方法　　96
5.3 　smali文件格式　　97
5.4 　Android程序中的类　　100
5.4.1 　内部类　　100
5.4.2 　监听器　　102
5.4.3 　注解类　　105
5.4.4 　自动生成的类　　108
5.5 　阅读反编译的smali代码　　110
5.5.1 　循环语句　　110
5.5.2 　switch分支语句　　115
5.5.3 　try/catch语句　　121
5.6 　使用IDA Pro静态分析Android程序　　127
5.6.1 　IDA Pro对Android的支持　　127
5.6.2 　如何操作　　128
5.6.3 　定位关键代码——使用IDA Pro进行破解的实例　　132
5.7 　恶意软件分析工具包——Androguard　　135
5.7.1 　Androguard的安装与配置　　135
5.7.2 　Androguard的使用方法　　137
5.7.3 　使用Androguard配合Gephi进行静态分析　　144
5.7.4 　使用androlyze.py进行静态分析　　148
5.8 　其他静态分析工具　　152
5.9 　阅读反编译的Java代码　　152
5.9.1 　使用dex2jar生成jar文件　　152
5.9.2 　使用jd-gui查看jar文件的源码　　153
5.10 　集成分析环境——santoku　　154
5.11 　本章小结　　156
第6章 　基于Android的ARM汇编语言基础——逆向原生！　　157
6.1 　Android与ARM处理器　　157
6.1.1 　ARM处理器架构概述　　157
6.1.2 　ARM处理器家族　　158
6.1.3 　Android支持的处理器架构　　159
6.2 　原生程序与ARM汇编语言——逆向你的原生Hello ARM　　160
6.2.1 　原生程序逆向初步　　160
6.2.2 　原生程序的生成过程　　162
6.2.3 　必须了解的ARM知识　　164
6.3 　ARM汇编语言程序结构　　166
6.3.1 　完整的ARM汇编程序　　166
6.3.2 　处理器架构定义　　167
6.3.3 　段定义　　168
6.3.4 　注释与标号　　169
6.3.5 　汇编器指令　　169
6.3.6 　子程序与参数传递　　170
6.4 　ARM处理器寻址方式　　170
6.4.1 　立即寻址　　170
6.4.2 　寄存器寻址　　171
6.4.3 　寄存器移位寻址　　171
6.4.4 　寄存器间接寻址　　171
6.4.5 　基址寻址　　171
6.4.6 　多寄存器寻址　　171
6.4.7 　堆栈寻址　　172
6.4.8 　块拷贝寻址　　172
6.4.9 　相对寻址　　172
6.5 　ARM与Thumb指令集　　173
6.5.1 　指令格式　　173
6.5.2 　跳转指令　　174
6.5.3 　存储器访问指令　　175
6.5.4 　数据处理指令　　177
6.5.5 　其他指令　　184
6.6 　用于多媒体编程与浮点计算的NEON与VFP指令集　　185
6.7 　本章小结　　186
第7章 　Android NDK程序逆向分析　　187
7.1 　Android中的原生程序　　187
7.1.1 　编写一个例子程序　　187
7.1.2 　如何编译原生程序　　188
7.2 　原生程序的启动流程分析　　194
7.2.1 　原生程序的入口函数　　194
7.2.2 　main函数究竟何时被执行　　198
7.3 　原生文件格式　　199
7.4 　原生C程序逆向分析　　200
7.4.1 　原生程序的分析方法　　200
7.4.2 　for循环语句反汇编代码的特点　　204
7.4.3 　if...else分支语句反汇编代码的特点　　208
7.4.4 　while循环语句反汇编代码的特点　　211
7.4.5 　switch分支语句反汇编代码的特点　　215
7.4.6 　原生程序的编译时优化　　218
7.5 　原生C++程序逆向分析　　222
7.5.1 　C++类的逆向　　222
7.5.2 　Android NDK对C++特性的支持　　225
7.5.3 　静态链接STL与动态链接STL的代码区别　　227
7.6 　Android NDK JNI API逆向分析　　232
7.6.1 　Android NDK提供了哪些函数　　232
7.6.2 　如何静态分析Android NDK程序　　233
7.7 　本章小结　　235
第8章 　动态调试Android程序　　236
8.1 　Android动态调试支持　　236
8.2 　DDMS的使用　　237
8.2.1 　如何启动DDMS　　237
8.2.2 　使用LogCat查看调试信息　　238
8.3 　定位关键代码　　240
8.3.1 　代码注入法——让程序自己吐出注册码　　240
8.3.2 　栈跟踪法　　244
8.3.3 　Method Profiling　　247
8.4 　使用AndBug调试Android程序　　250
8.4.1 　安装AndBug　　251
8.4.2 　使用AndBug　　251
8.5 　使用IDA Pro调试Android原生程序　　254
8.5.1 　调试Android原生程序　　255
8.5.2 　调试Android原生动态链接库　　256
8.6 　使用gdb调试Android原生程序　　260
8.6.1 　编译gdb与gdbserver　　260
8.6.2 　如何调试　　262
8.7 　本章小结　　264
第9章 　Android软件的破解技术　　265
9.1 　试用版软件　　265
9.1.1 　试用版软件的种类　　265
9.1.2 　实例破解——针对授权KEY方式的破解　　265
9.2 　序列号保护　　271
9.3 　网络验证　　272
9.3.1 　网络验证保护思路　　272
9.3.2 　实例破解——针对网络验证方式的破解　　273
9.4 　In-app Billing（应用内付费）　　277
9.4.1 　In-app Billing原理　　277
9.4.2 　In-app Billing破解方法　　280
9.5 　Google Play License保护　　281
9.5.1 　Google Play License保护机制　　281
9.5.2 　实例破解——针对Google Play License方式的破解　　283
9.6 　重启验证　　284
9.6.1 　重启验证保护思路　　285
9.6.2 　实例破解——针对重启验证方式的破解　　285
9.7 　如何破解其他类型的Android程序　　296
9.7.1 　Mono for Android开发的程序及其破解方法　　296
9.7.2 　Qt for Android开发的程序及其破解方法　　301
9.8 　本章小结　　309
第10章 　Android程序的反破解技术　　310
10.1 　对抗反编译　　310
10.1.1 　如何对抗反编译工具　　310
10.1.2 　对抗dex2jar　　311
10.2 　对抗静态分析　　312
10.2.1 　代码混淆技术　　312
10.2.2 　NDK保护　　315
10.2.3 　外壳保护　　316
10.3 　对抗动态调试　　316
10.3.1 　检测调试器　　316
10.3.2 　检测模拟器　　317
10.4 　防止重编译　　318
10.4.1 　检查签名　　318
10.4.2 　校验保护　　319
10.5 　本章小结　　320
第11章 　Android系统攻击与防范　　321
11.1 　Android系统安全概述　　321
11.2 　手机ROOT带来的危害　　321
11.2.1 　为什么要ROOT手机　　321
11.2.2 　手机ROOT后带来的安全隐患　　322
11.2.3 　Android手机ROOT原理　　322
11.3 　Android权限攻击　　329
11.3.1 　Android权限检查机制　　329
11.3.2 　串谋权限攻击　　333
11.3.3 　权限攻击检测　　336
11.4 　Android组件安全　　339
11.4.1 　Activity安全及Activity劫持演示　　340
11.4.2 　Broadcast Receiver 安全　　343
11.4.3 　Service安全　　345
11.4.4 　Content Provider安全　　346
11.5 　数据安全　　347
11.5.1 　外部存储安全　　347
11.5.2 　内部存储安全　　348
11.5.3 　数据通信安全　　350
11.6 　ROM安全　　351
11.6.1 　ROM的种类　　352
11.6.2 　ROM的定制过程　　352
11.6.3 　定制ROM的安全隐患　　359
11.6.4 　如何防范　　360
11.7 　本章小结　　361
第12章 　DroidKongFu变种病毒实例分析　　362
12.1 　DroidKongFu病毒介绍　　362
12.2 　配置病毒分析环境　　363
12.3 　病毒执行状态分析　　364
12.3.1 　使用APIMonitor初步分析　　365
12.3.2 　使用DroidBox动态分析　　369
12.3.3 　其他动态分析工具　　373
12.4 　病毒代码逆向分析　　376
12.4.1 　Java层启动代码分析　　376
12.4.2 　Native层启动代码分析　　381
12.4.3 　Native层病毒核心分析　　393
12.5 　DroidKongFu病毒框架总结　　404
12.6 　病毒防治　　406
12.7 　本章小结　　406
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android软件安全与逆向分析
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android 4高级编程
目 录
第1章  Android简介	1
1.1  一些背景信息	2
1.1.1  不远的过去	2
1.1.2  未来的前景	2
1.2  对Android的误解	3
1.3  Android：开放的移动开发平台	3
1.4  原生Android应用程序	4
1.5  Android SDK的特征	5
1.5.1  访问硬件(包括摄像头、GPS和
传感器)	5
1.5.2  使用Wi-Fi、蓝牙技术和NFC
进行数据传输	6
1.5.3  地图、地理编码和基于位置的
服务	6
1.5.4  后台服务	6
1.5.5  使用SQLite数据库进行数据
存储和检索	7
1.5.6  共享数据和应用程序间通信	7
1.5.7  使用Widget和Live Wallpaper
增强主屏幕	7
1.5.8  广泛的媒体支持和2D/3D图形	7
1.5.9  Cloud to Device Messaging	8
1.5.10  优化的内存和进程管理	8
1.6  开放手机联盟简介	8
1.7  运行Android的环境	9
1.8  从事移动开发的原因	9
1.9  从事Android开发的原因	9
1.9.1  推动Android普及的因素	10
1.9.2  Android的独到之处	10
1.9.3  改变移动开发格局	11
1.10  开发框架简介	11
1.10.1  开发包中的资源	12
1.10.2  理解Android软件栈	12
1.10.3  Dalvik虚拟机	14
1.10.4  Android应用程序架构	14
1.10.5  Android库	15
第2章  开始入手	17
2.1  Android开发	18
2.1.1  开始前的准备工作	18
2.1.2  创建第一个Android应用程序	24
2.1.3  Android应用程序的类型	31
2.2  面向移动设备和嵌入式设备的
开发	32
2.2.1  硬件限制带来的设计考虑事项	32
2.2.2  考虑用户环境	35
2.2.3  Android开发	36
2.3  Android开发工具	40
2.3.1  Android虚拟设备管理器	41
2.3.2  Android SDK管理器	42
2.3.3  Android模拟器	42
2.3.4  Dalvik调试监控服务(DDMS)	42
2.3.5  Android调试桥(ADB)	43
2.3.6  Hierarchy Viewer和Lint工具	43
2.3.7  Monkey和Monkey Runner	43
第3章  创建应用程序和Activity	45
3.1  Android应用程序的组成部分	46
3.2  应用程序Manifest文件简介	47
3.3  使用Manifest编辑器	54
3.4  分离资源	55
3.4.1  创建资源	55
3.4.2  使用资源	63
3.4.3  为不同的语言和硬件创建
资源	66
3.4.4  运行时配置更改	68
3.5  Android应用程序生命周期	70
3.6  理解应用程序的优先级和进程
状态	70
3.7  Android Application类简介	72
3.7.1  扩展和使用Application类	72
3.7.2  重写应用程序的生命周期
事件	73
3.8  深入探讨Android Activity	74
3.8.1  创建Activity	74
3.8.2  Activity的生存期	76
3.8.3  Android Activity类	81
第4章  创建用户界面	83
4.1  Android UI基本设计	84
4.2  Android UI的基础知识	84
4.3  布局简介	85
4.3.1  定义布局	86
4.3.2  使用布局创建设备无关的UI	87
4.3.3  优化布局	90
4.4  To-Do List示例	93
4.5  Fragment介绍	100
4.5.1  创建新的Fragment	101
4.5.2  Fragment的生命周期	101
4.5.3  Fragment Manager介绍	105
4.5.4  向Activity中添加Fragment	105
4.5.5  Fragment和Activity之间的
接口	110
4.5.6  没有用户界面的Fragment	111
4.5.7  Android Fragment 类	112
4.5.8  对To-Do List示例使用
Fragment	112
4.6  Android widget 工具箱	116
4.7  创建新视图	117
4.7.1  修改现有的视图	118
4.7.2  创建复合控件	122
4.7.3  使用布局创建简单的复合
控件	124
4.7.4  创建定制的视图	124
4.7.5  使用定制的控件	137
4.8  Adapter简介	137
4.8.1  部分原生Adapter简介	138
4.8.2  定制ArrayAdapter	138
4.8.3  使用Adapter绑定数据到
视图	139
第5章  Intent和Broadcast Receiver	145
5.1  Intent简介	145
5.1.1  使用Intent来启动Activity	146
5.1.2  Linkify简介	153
5.1.3  使用Intent广播事件	155
5.1.4  Local Broadcast Manager	159
5.1.5  Pending Intent简介	160
5.2  创建Intent Filter和Broadcast
Receiver	161
5.2.1  使用Intent Filter为隐式Intent
提供服务	161
5.2.2  使用Intent Filter作为插件和
扩展	170
5.2.3  监听本地Broadcast Intent	173
5.2.4  使用Broadcast Intent监控设备的
状态变化	174
5.2.5  在运行时管理Manifest
Receiver	176
第6章  使用Internet资源	177
6.1  下载和分析Internet资源	177
6.1.1  连接Internet资源	178
6.1.2  使用XML Pull Parser分析
XML	179
6.1.3  创建一个地震查看器	180
6.2  使用Download Manager	186
6.2.1  下载文件	186
6.2.2  自定义Download Manager
Notification	187
6.2.3  指定下载位置	188
6.2.4  取消和删除下载	189
6.2.5  查询Download Manager	189
6.3  使用Internet服务	192
6.4  连接到Google App Engine	192
6.5  下载数据而不会耗尽电量的
最佳实践	194
第7章  文件、保存状态和首选项	195
7.1  保存简单的应用程序数据	195
7.2  创建并保存Shared Preference	196
7.3  检索Shared Preference	197
7.4  为地震查看器创建一个设置
Activity	197
7.5  首选项框架和Preference Activity
概述	205
7.5.1  在XML中定义一个
Preference Screen布局	206
7.5.2  Preference Fragment简介	208
7.5.3  使用Preference Header定义
Preference Fragment的层次
结构	208
7.5.4  Preference Activity简介	209
7.5.5  向后兼容性与Preference
Screen	210
7.5.6  找到并使用Preference Screen
设置的Shared Preference	210
7.5.7  Shared Preference Change
Listener简介	211
7.6  为地震查看器创建一个标准的
Preference Activity	211
7.7  持久化应用程序实例的状态	215
7.7.1  使用Shared Preference保存
Activity状态	215
7.7.2  使用生命周期处理程序保存和
还原Activity实例	215
7.7.3  使用生命周期处理程序保存和
还原Fragment实例状态	216
7.8  将静态文件作为资源添加	218
7.9  在文件系统下工作	218
7.9.1  文件管理工具	218
7.9.2  使用特定于应用程序的文件夹
存储文件	219
7.9.3  创建私有的应用程序文件	219
7.9.4  使用应用程序文件缓存	220
7.9.5  存储公共可读的文件	220
第8章  数据库和Content Provider	223
8.1  Android数据库简介	223
8.1.1  SQLite数据库简介	224
8.1.2  Content Provider简介	224
8.2  SQLite简介	224
8.3  Content Value和Cursor	225
8.4  使用SQLite数据库	225
8.4.1  SQLiteOpenHelper简介	226
8.4.2  在不使用SQLiteOpenHelper的
情况下打开和创建数据库	228
8.4.3  Android数据库设计注意
事项	228
8.4.4  查询数据库	228
8.4.5  从Cursor中提取值	229
8.4.6  添加、更新和删除行	230
8.5  创建Content Provider	232
8.5.1  注册Content Provider	233
8.5.2  发布Content Provider的URI
地址	233
8.5.3  创建Content Provide的
数据库	234
8.5.4  实现Content Provider查询	235
8.5.5  Content Provider事务	236
8.5.6  在Content Provider中存储
文件	239
8.5.7  一个Content Provider的实现
框架	240
8.6  使用Content Provider	244
8.6.1  Content Resolver简介	244
8.6.2  查询Content Provider	244
8.6.3  使用Cursor Loader异步查询
内容	247
8.6.4  添加、删除和更新内容	249
8.6.5  访问Content Provider中存储的
文件	251
8.6.6  创建一个To-Do List数据库和
Content Provider	253
8.7  将搜索功能添加到应用程序中	260
8.7.1  使Content Provider可搜索	261
8.7.2  为应用程序创建一个搜索
Activity	261
8.7.3  将搜索Activity设置为应用
程序的默认搜索Provider	263
8.7.4  使用搜索视图微件	266
8.7.5  由Content Provider支持搜索
建议	267
8.7.6  在快速搜索框中显示搜索
结果	270
8.8  创建可搜索的地震Content
Provider	270
8.8.1  创建Content Provider	270
8.8.2  使用地震Content Provider	276
8.8.3  搜索EarthquakeContent
Provider	279
8.9  本地Android Content Provider	285
8.9.1  使用Media StoreContent
Provider	285
8.9.2  使用Contacts Contract Content
Provider	286
8.9.3  使用Calendar Content
Provider	293
第9章  在后台操作	297
9.1  Service简介	298
9.1.1  创建和控制Service	298
9.1.2  将Service绑定到Activity	302
9.1.3  地震监控Service示例	304
9.1.4  创建前台Service	308
9.2  使用后台线程	309
9.2.1  使用AsyncTask运行异步任务	310
9.2.2  Intent Service简介	312
9.2.3  Loader简介	313
9.2.4  手动创建线程和GUI线程
同步	313
9.3  使用Alarm	315
9.3.1  创建、设置和取消Alarm	316
9.3.2  设置重复Alarm	317
9.3.3  使用重复Alarm调度网络
刷新	318
9.4  使用Intent Service简化Earthquake
更新Service	320
第10章  扩展用户体验	323
10.1  操作栏简介	324
10.1.1  自定义操作栏	325
10.1.2  自定义操作栏来控制应用
程序的导航行为	328
10.1.3  操作栏操作简介	333
10.2  向地震监控程序添加一个
操作栏	333
10.3  创建并使用菜单和操作栏
操作项	339
10.3.1  Android菜单系统简介	340
10.3.2  创建菜单	341
10.3.3  指定操作栏的操作	342
10.3.4  菜单项选项	343
10.3.5  添加操作View和操作提供
程序	344
10.3.6  在Fragment中添加菜单项	345
10.3.7  使用XML定义菜单层次
结构	345
10.3.8  动态更新菜单项	347
10.3.9  处理菜单选择	347
10.3.10  子菜单和上下文菜单简介	348
10.4  更新地震监控程序	351
10.5  全屏显示	353
10.6  对话框简介	355
10.6.1  创建一个对话框	356
10.6.2  使用AlertDialog类	356
10.6.3  使用专门的输入对话框	357
10.6.4  通过Dialog Fragment管理和
显示对话框	358
10.6.5  通过Activity事件处理程序
管理和显示对话框	360
10.6.6  将Activity用作对话框	361
10.7  创建Toast	361
10.7.1  自定义Toast	362
10.7.2  在工作线程中使用Toast	364
10.8  Notification简介	365
10.8.1  Notification Manager简介	366
10.8.2  创建Notification	366
10.8.3  设置和自定义通知托盘UI	369
10.8.4  配置持续和连续的
Notification	373
10.8.5  触发、更新和取消
Notification	374
10.9  向地震监控程序中添加
Notification和对话框	376
第11章  高级用户体验	381
11.1  为每个屏幕尺寸和分辨率做
设计	382
11.1.1  分辨率无关	382
11.1.2  为不同的屏幕大小提供支持和
优化	383
11.1.3  创建可缩放的图形资源	386
11.1.4  创建优化的、自适应的、
动态的设计	390
11.1.5  反复测试	390
11.2  确保可访问性	391
11.2.1  为非触屏设备提供导航	391
11.2.2  为每个View提供文本
描述	391
11.3  Android Text-to-Speech简介	392
11.4  使用语音识别	394
11.4.1  使用语音识别进行语音
输入	395
11.4.2  使用语音识别进行搜索	396
11.5  控制设备振动	396
11.6  使用动画	397
11.6.1  补间View动画	397
11.6.2  创建和使用逐帧动画	400
11.6.3  插值属性动画	400
11.7  强化View	404
11.7.1  高级Canvas绘图	404
11.7.2  硬件加速	419
11.7.3  Surface View简介	420
11.7.4  创建交互式控件	423
11.8  高级Drawable资源	428
11.9  复制、粘贴和剪贴板	431
11.9.1  向剪贴板中复制数据	431
11.9.2  粘贴剪贴板数据	431
第12章  硬件传感器	433
12.1  使用传感器和传感器
管理器	433
12.1.1  受支持的Android传感器	434
12.1.2  虚拟传感器简介	435
12.1.3  查找传感器	435
12.1.4  监视传感器	436
12.1.5  解释传感器值	438
12.2  监视设备的移动和方向	439
12.2.1  确定设备的自然方向	440
12.2.2  加速计简介	441
12.2.3  检测加速度变化	442
12.2.4  创建一个重力计	443
12.2.5  确定设备方向	446
12.2.6  创建一个指南针和人工
地平仪	450
12.2.7  陀螺仪传感器简介	453
12.3  环境传感器简介	454
12.3.1  使用气压计传感器	454
12.3.2  创建气象站	455
第13章  地图、地理编码和基于位置的
服务	461
13.1  使用基于位置的服务	461
13.2  在模拟器中使用基于位置的
服务	462
13.2.1  更新模拟器位置提供器中的
位置	463
13.2.2  配置模拟器来测试基于位置的
服务	463
13.3  选择一个位置提供器	464
13.3.1  查找位置提供器	464
13.3.2  通过指定条件查找位置
提供器	464
13.3.3  确定位置提供器的能力	465
13.4  确定当前位置	466
13.4.1  位置的隐私性	466
13.4.2  找出上一次确定的位置	466
13.4.3  Where Am I示例	466
13.4.4  刷新当前位置	469
13.4.5  在Where Am I中跟踪
位置	472
13.4.6  请求单独一次位置更新	473
13.5  位置更新的最佳实践	474
13.6  使用近距离提醒	477
13.7  使用地理编码器	478
13.7.1  反向地理编码	479
13.7.2  前向地理编码	480
13.7.3  对“Where Am I”示例
进行地理编码	481
13.8  创建基于地图的Activity	482
13.8.1  MapView和MapActivity
简介	482
13.8.2  获得地图的API key	483
13.8.3  创建一个基于地图的
Activity	483
13.8.4  地图和Fragment	485
13.8.5  配置和使用MapView	486
13.8.6  使用MapController	486
13.8.7  对“Where Am I”示例使用
地图	487
13.8.8  创建和使用覆盖(Overlay)	490
13.8.9  MyLocationOverlay简介	497
13.8.10  ItemizedOverlay和
OverlayItem简介	498
13.8.11  将视图固定到地图和地图的
某个位置上	500
13.9  对Earthquake示例添加地图
功能	501
第14章  个性化主屏幕	507
14.1  主屏幕Widget简介	507
14.2  创建App Widgets	509
14.2.1  创建Widget的XML
布局资源	509
14.2.2  定义Widget设置	511
14.2.3  创建Widget Broadcast Receiver
并将其添加到应用程序的
manifest文件中	512
14.2.4  AppWidgetManager和
RemoteView简介	513
14.2.5  刷新Widget	518
14.2.6  创建并使用Widget配置
Activity	521
14.3  创建地震Widget	522
14.4  Collection View Widget简介	528
14.4.1  创建Collection View Widget的
布局	529
14.4.2  创建RemoteViewsService	530
14.4.3  创建一个RemoteViews-
Factory	531
14.4.4  使用RemoteViewsService
填充CollectionViewWidget	533
14.4.5  向Collection View Widget
中的项添加交互性	534
14.4.6  将Collection View Widget
绑定到Content Provider	535
14.4.7  刷新Collection View
Widget	537
14.4.8  创建Earthquake Collection
View Widget	537
14.5  Live Folder简介	543
14.5.1  创建Live Folder	544
14.5.2  创建Earthquake Live Folder	548
14.6  使用快速搜索框显示应用程序
搜索结果	551
14.6.1  在快速搜索框中显示搜索
结果	551
14.6.2  将Earthquake示例的搜索
结果添加到快速搜索框中	552
14.7  创建Live Wallpaper	553
14.7.1  创建Live Wallpaper定义
资源	553
14.7.2  创建Wallpaper Service	554
14.7.3  创建Wallpaper Service
引擎	555
第15章  音频、视频以及摄像头的
使用	557
15.1  播放音频和视频	558
15.1.1  Media Player简介	559
15.1.2  准备音频播放	559
15.1.3  准备视频播放	560
15.1.4  控制Media Player的
播放	564
15.1.5  管理媒体播放输出	566
15.1.6  响应音量控制	566
15.1.7  响应Media播放控件	567
15.1.8  请求和管理音频焦点	569
15.1.9  当音频输出改变时暂停
播放	571
15.1.10  Remote Control Client简介	572
15.2  操作原始音频	574
15.2.1  使用AudioRecord录制
声音	574
15.2.2  使用AudioTrack播放音频	575
15.3  创建一个Sound Pool	577
15.4  使用音效	578
15.5  使用摄像头拍摄照片	579
15.5.1  使用Intent拍摄照片	579
15.5.2  直接控制摄像头	581
15.5.3  读取并写入 JPEG EXIF图像
详细信息	588
15.6  录制视频	589
15.6.1  使用Intent录制视频	589
15.6.2  使用MediaRecorder录制
视频	590
15.7  使用媒体效果	593
15.8  向媒体库中添加新媒体	594
15.8.1  使用媒体扫描仪插入媒体	594
15.8.2  手动插入媒体	595
第16章  蓝牙、NFC、网络和Wi-Fi	597
16.1  使用蓝牙	597
16.1.1  管理本地蓝牙设备适配器	598
16.1.2  可发现性和远程设备发现	600
16.1.3  蓝牙通信	604
16.2  管理网络和Internet连接	609
16.2.1  Connectivity Manager简介	609
16.2.2  支持用户首选项以进行后台
数据传输	609
16.2.3  查找和监视网络连接	611
16.3  管理Wi-Fi	612
16.3.1  监视Wi-Fi连接	613
16.3.2  监视活动的Wi-Fi连接的
详细信息	613
16.3.3  扫描热点	613
16.3.4  管理Wi-Fi配置	614
16.3.5  创建Wi-Fi网络配置	615
16.4  使用Wi-Fi Direct传输数据	615
16.4.1  初始化Wi-Fi Direct框架	615
16.4.2  启用Wi-Fi Direct并监视其
状态	617
16.4.3  发现对等设备	618
16.4.4  连接对等设备	618
16.4.5  在对等设备之间传输数据	620
16.5  近场通信	621
16.5.1  读取NFC标签	622
16.5.2  使用前台分派系统	623
16.5.3  Android Beam简介	625
第17章  电话服务和SMS	629
17.1  电话服务的硬件支持	629
17.1.1  将电话功能指定为必需的
硬件功能	629
17.1.2  检查电话硬件	630
17.2  使用电话服务	630
17.2.1  启动电话呼叫	630
17.2.2  替换本机拨号程序	631
17.2.3  访问电话服务的属性及状态	632
17.2.4  使用PhoneStateListener
监视电话状态的变化	635
17.2.5  使用Intent Receiver监视传入的
电话呼叫	639
17.3  SMS和MMS简介	640
17.3.1  在应用程序中使用SMS和
MMS	640
17.3.2  使用Intent从应用程序中
发送SMS和MMS	640
17.3.3  使用SMS Manager发送
SMS消息	641
17.3.4  监听传入的SMS消息	644
17.3.5  紧急响应程序SMS示例	646
17.3.6  自动紧急响应程序	654
17.4  SIP和VOIP简介	662
第18章  Android高级开发	663
18.1  Android的安全性	664
18.1.1  Linux内核安全	664
18.1.2  权限简介	664
18.2  Cloud to Device Messaging简介	666
18.2.1  C2DM的局限性	667
18.2.2  注册使用C2DM	667
18.2.3  在C2DM服务器上注册
设备	667
18.2.4  向设备发送C2DM消息	670
18.2.5  接收C2DM消息	672
18.3  使用License Verification Library
实现版权保护	673
18.3.1  安装License Verification
Library	673
18.3.2  获得License Verification
公钥	673
18.3.3  配置License Validation
Policy	674
18.3.4  执行许可验证检查	674
18.4  应用程序内收费	675
18.4.1  应用程序内收费的局限性	676
18.4.2  安装IAB库	676
18.4.3  获得公钥和定义可购买的
物品	676
18.4.4  开始IAB交易	677
18.4.5  处理IAB购买请求的响应	678
18.5  使用Wake Lock	679
18.6  使用AIDL支持Service的
IPC	680
18.7  处理不同硬件和软件的可用性	686
18.7.1  指定硬件的要求	686
18.7.2  确认硬件可用性	687
18.7.3  构建向后兼容的应用程序	687
18.8  利用STRICT模式优化UI
性能	689
第19章  推广和发布应用程序并从中
获利	691
19.1  签名和发布应用程序	691
19.2  发布应用程序	693
19.2.1  Google Play简介	693
19.2.2  开始使用Google Play	694
19.2.3  发布应用程序	695
19.2.4  开发者控制台上的应用程序
报告	697
19.2.5  查看应用程序错误报告	697
19.3  如何通过应用程序赚钱	698
19.4  应用程序销售、推广和分发的
策略	699
19.4.1  应用程序的起步策略	699
19.4.2  在Google Play上推广	700
19.4.3  国际化	700
19.5  分析数据和跟踪推荐人	701
19.5.1  使用移动应用程序的Google
Analytics	702
19.5.2  使用Google Analytics追踪
推荐	703
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android 4高级编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android开发艺术探索
第1章  Activity的生命周期和启动模式 / 1
1.1  Activity的生命周期全面分析 / 1
1.1.1  典型情况下的生命周期分析 / 2
1.1.2  异常情况下的生命周期分析 / 8
1.2  Activity的启动模式 / 16
1.2.1  Activity的LaunchMode / 16
1.2.2  Activity的Flags / 27
1.3  IntentFilter的匹配规则 / 28
第2章  IPC机制 / 35
2.1  Android IPC简介 / 35
2.2  Android中的多进程模式 / 36
2.2.1  开启多进程模式 / 36
2.2.2  多进程模式的运行机制 / 39
2.3  IPC基础概念介绍 / 42
2.3.1  Serializable接口 / 42
2.3.2  Parcelable接口 / 45
2.3.3  Binder / 47
2.4  Android中的IPC方式 / 61
2.4.1  使用Bundle / 61
2.4.2  使用文件共享 / 62
2.4.3  使用Messenger / 65
2.4.4  使用AIDL / 71
2.4.5  使用ContentProvider / 91
2.4.6  使用Socket / 103
2.5  Binder连接池 / 112
2.6  选用合适的IPC方式 / 121
第3章  View的事件体系 / 122
3.1  View基础知识 / 122
3.1.1  什么是View / 123
3.1.2  View的位置参数 / 123
3.1.3  MotionEvent和TouchSlop / 125
3.1.4  VelocityTracker、GestureDetector和Scroller / 126
3.2  View的滑动 / 129
3.2.1  使用scrollTo/scrollBy / 129
3.2.2  使用动画 / 131
3.2.3  改变布局参数 / 133
3.2.4  各种滑动方式的对比 / 133
3.3  弹性滑动 / 135
3.3.1  使用Scroller / 136
3.3.2  通过动画 / 138
3.3.3  使用延时策略 / 139
3.4  View的事件分发机制 / 140
3.4.1  点击事件的传递规则 / 140
3.4.2  事件分发的源码解析 / 144
3.5  View的滑动冲突 / 154
3.5.1  常见的滑动冲突场景 / 155
3.5.2  滑动冲突的处理规则 / 156
3.5.3  滑动冲突的解决方式 / 157
第4章  View的工作原理 / 174
4.1  初识ViewRoot和DecorView / 174
4.2  理解MeasureSpec / 177
4.2.1  MeasureSpec / 177
4.2.2  MeasureSpec和LayoutParams的对应关系 / 178
4.3  View的工作流程 / 183
4.3.1  measure过程 / 183
4.3.2  layout过程 / 193
4.3.3  draw过程 / 197
4.4  自定义View / 199
4.4.1  自定义View的分类 / 200
4.4.2  自定义View须知 / 201
4.4.3  自定义View示例 / 202
4.4.4  自定义View的思想 / 217
第5章  理解RemoteViews / 218
5.1  RemoteViews的应用 / 218
5.1.1  RemoteViews在通知栏上的应用 / 219
5.1.2  RemoteViews在桌面小部件上的应用 / 221
5.1.3  PendingIntent概述 / 228
5.2  RemoteViews的内部机制 / 230
5.3  RemoteViews的意义 / 239
第6章  Android的Drawable / 243
6.1  Drawable简介 / 243
6.2  Drawable的分类 / 244
6.2.1  BitmapDrawable / 244
6.2.2  ShapeDrawable / 247
6.2.3  LayerDrawable / 251
6.2.4  StateListDrawable / 253
6.2.5  LevelListDrawable / 255
6.2.6  TransitionDrawable / 256
6.2.7  InsetDrawable / 257
6.2.8  ScaleDrawable / 258
6.2.9  ClipDrawable / 260
6.3  自定义Drawable / 262
第7章  Android动画深入分析 / 265
7.1  View动画 / 265
7.1.1  View动画的种类 / 265
7.1.2  自定义View动画 / 270
7.1.3  帧动画 / 272
7.2  View动画的特殊使用场景 / 273
7.2.1  LayoutAnimation / 273
7.2.2  Activity的切换效果 / 275
7.3  属性动画 / 276
7.3.1  使用属性动画 / 276
7.3.2  理解插值器和估值器 / 280
7.3.3  属性动画的监听器 / 282
7.3.4  对任意属性做动画 / 282
7.3.5  属性动画的工作原理 / 288
7.4  使用动画的注意事项 / 292
第8章  理解Window和WindowManager / 294
8.1  Window和WindowManager / 294
8.2  Window的内部机制 / 297
8.2.1  Window的添加过程 / 298
8.2.2  Window的删除过程 / 301
8.2.3  Window的更新过程 / 303
8.3  Window的创建过程 / 304
8.3.1  Activity的Window创建过程 / 304
8.3.2  Dialog的Window创建过程 / 308
8.3.3  Toast的Window创建过程 / 311
第9章  四大组件的工作过程 / 316
9.1  四大组件的运行状态 / 316
9.2  Activity的工作过程 / 318
9.3  Service的工作过程 / 336
9.3.1  Service的启动过程 / 336
9.3.2  Service的绑定过程 / 344
9.4  BroadcastReceiver的工作过程 / 352
9.4.1  广播的注册过程 / 353
9.4.2  广播的发送和接收过程 / 356
9.5  ContentProvider的工作过程 / 362
第10章  Android的消息机制 / 372
10.1  Android的消息机制概述 / 373
10.2  Android的消息机制分析 / 375
10.2.1  ThreadLocal的工作原理 / 375
10.2.2  消息队列的工作原理 / 380
10.2.3  Looper的工作原理 / 383
10.2.4  Handler的工作原理 / 385
10.3  主线程的消息循环 / 389
第11章  Android的线程和线程池 / 391
11.1  主线程和子线程 / 392
11.2  Android中的线程形态 / 392
11.2.1  AsyncTask / 392
11.2.2  AsyncTask的工作原理 / 395
11.2.3  HandlerThread / 402
11.2.4  IntentService / 403
11.3  Android中的线程池 / 406
11.3.1  ThreadPoolExecutor / 407
11.3.2  线程池的分类 / 410
第12章  Bitmap的加载和Cache / 413
12.1  Bitmap的高效加载 / 414
12.2  Android中的缓存策略 / 417
12.2.1  LruCache / 418
12.2.2  DiskLruCache / 419
12.2.3  ImageLoader的实现 / 424
12.3  ImageLoader的使用 / 441
12.3.1  照片墙效果 / 441
12.3.2  优化列表的卡顿现象 / 446
第13章  综合技术 / 448
13.1  使用CrashHandler来获取应用的crash信息 / 449
13.2  使用multidex来解决方法数越界 / 455
13.3  Android的动态加载技术 / 463
13.4  反编译初步 / 469
13.4.1  使用dex2jar和jd-gui反编译apk / 470
13.4.2  使用apktool对apk进行二次打包 / 470
第14章  JNI和NDK编程 / 473
14.1  JNI的开发流程 / 474
14.2  NDK的开发流程 / 478
14.3  JNI的数据类型和类型签名 / 484
14.4  JNI调用Java方法的流程 / 486
第15章  Android性能优化 / 489
15.1  Android的性能优化方法 / 490
15.1.1  布局优化 / 490
15.1.2  绘制优化 / 493
15.1.3  内存泄露优化 / 493
15.1.4  响应速度优化和ANR日志分析 / 496
15.1.5  ListView和Bitmap优化 / 501
15.1.6  线程优化 / 501
15.1.7  一些性能优化建议 / 501
15.2  内存泄露分析之MAT工具 / 502
15.3  提高程序的可维护性 / 506
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android开发艺术探索
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android编程权威指南
第1章　Android应用初体验　　1
1.1 　应用基础　　2
1.2 　创建Android项目　　2
1.3 　Eclipse工作区导航　　5
1.4 　用户界面设计　　6
1.4.1 　视图层级结构　　9
1.4.2 　组件属性　　10
1.4.3 　创建字符串资源　　11
1.4.4 　预览界面布局　　12
1.5 　从布局XML到视图对象　　13
1.6 　组件的实际应用　　15
1.6.1 　类包组织导入　　16
1.6.2 　引用组件　　16
1.6.3 　设置监听器　　17
1.7 　使用模拟器运行应用　　21
1.8 　Android编译过程　　22
第2章　Android与MVC设计模式　　26
2.1 　创建新类　　26
2.2 　Android与MVC设计模式　　30
2.3 　更新视图层　　31
2.4 　更新控制层　　33
2.5 　在设备上运行应用　　37
2.5.1 　连接设备　　37
2.5.2 　配置设备用于应用开发　　38
2.6 　添加图标资源　　38
2.6.1 　向项目中添加资源　　39
2.6.2 　在XML文件中引用资源　　40
2.7 　关于挑战练习　　41
2.8 　挑战练习一：为TextView添加监听器　　41
2.9 　挑战练习二：添加后退按钮　　42
2.10 　挑战练习三：从按钮到图标按钮　　42
第3章　Activity的生命周期　　45
3.1 　日志跟踪理解Activity生命周期　　46
3.1.1 　输出日志信息　　46
3.1.2 　使用 LogCat　　48
3.2 　设备旋转与Activity生命周期　　52
3.3 　设备旋转前保存数据　　56
3.4 　再探Activity生命周期　　57
3.5 　深入学习：测试onSaveInstanceState-(Bundle)方法　　59
3.6 　深入学习：日志记录的级别与方法　　60
第4章　Android应用的调试　　62
4.1 　DDMS应用调试透视图　　63
4.2 　异常与栈跟踪　　64
4.2.1 　诊断应用异常　　65
4.2.2 　记录栈跟踪日志　　66
4.2.3 　设置断点　　68
4.2.4 　使用异常断点　　71
4.3 　文件浏览器　　72
4.4 　Android特有的调试工具　　73
4.4.1 　使用Android Lint　　73
4.4.2 　R类的问题　　74
第5章　第二个activity　　75
5.1 　创建第二个activity　　76
5.1.1 　创建新布局　　77
5.1.2 　创建新的activity子类　　80
5.1.3 　在manifest配置文件中声明activity　　81
5.1.4 　为QuizActivity添加cheat按钮　　82
5.2 　启动activity　　83
5.3 　activity间的数据传递　　85
5.3.1 　使用intent extra　　86
5.3.2 　从子activity获取返回结果　　88
5.4 　activity的使用与管理　　92
5.5 　挑战练习　　95
第6章　Android SDK版本与兼容　　96
6.1 　Android SDK版本　　96
6.2 　Android编程与兼容性问题　　97
6.2.1 　全新的系统版本——Honeycomb　　97
6.2.2 　SDK最低版本　　99
6.2.3 　SDK目标版本　　99
6.2.4 　SDK编译版本　　99
6.2.5 　安全添加新版本API中的代码　　100
6.3 　使用Android开发者文档　　103
6.4 　挑战练习：报告编译版本　　105
第7章　UI fragment与fragment 管理器　　106
7.1 　UI设计的灵活性需求　　107
7.2 　fragment的引入　　107
7.3 　着手开发CriminalIntent　　108
7.3.1 　创建新项目　　110
7.3.2 　fragment与支持库　　112
7.3.3 　创建Crime类　　113
7.4 　托管UI fragment　　115
7.4.1 　fragment的生命周期　　115
7.4.2 　托管的两种方式　　116
7.4.3 　定义容器视图　　116
7.5 　创建UI fragment　　117
7.5.1 　定义CrimeFragment的布局　　118
7.5.2 　创建CrimeFragment类　　119
7.6 　添加UI fragment到FragmentManager　　122
7.6.1 　fragment事务　　123
7.6.2 　FragmentManager与fragment生命周期　　125
7.7 　activity使用fragment的理由　　127
7.8 　深入学习：Honeycomb、ICS、Jelly Bean以及更高版本系统上的应用开发　　127
第8章　使用布局与组件创建用户界面　　128
8.1 　升级Crime类　　128
8.2 　更新布局　　129
8.3 　生成并使用组件　　131
8.4 　深入探讨XML布局属性　　132
8.4.1 　样式、主题及主题属性　　132
8.4.2 　dp、sp以及屏幕像素密度　　133
8.4.3 　Android开发设计原则　　134
8.4.4 　布局参数　　135
8.4.5 　边距与内边距　　135
8.5 　使用图形布局工具　　136
8.5.1 　添加新组件　　138
8.5.2 　属性视图中编辑组件属性　　138
8.5.3 　在框架视图中重新组织组件　　139
8.5.4 　更新子组件的布局参数　　140
8.5.5　　android:layout_weight属性的工作原理　　141
8.5.6 　图形布局工具使用总结　　142
8.5.7 　组件ID与多种布局　　142
8.6 　挑战练习：日期格式化　　143
第9章　使用ListFragment显示列表　　144
9.1 　更新CriminalIntent应用的模型层　　145
9.2 　创建ListFragment　　147
9.3 　使用抽象activity托管fragment　　149
9.3.1 　通用的fragment托管布局　　149
9.3.2 　抽象activity类　　150
9.4 　ListFragment、ListView及ArrayAdapter　　154
9.4.1 　创建ArrayAdapter<T>类实例　　157
9.4.2 　响应列表项的点击事件　　159
9.5 　定制列表项　　160
9.5.1 　创建列表项布局　　160
9.5.2 　创建adapter子类　　162
第10章　使用fragment argument　　165
10.1 　从fragment中启动activity　　165
10.1.1 　附加extra信息　　166
10.1.2 　获取extra信息　　167
10.1.3 　使用Crime数据更新CrimeFragment视图　　167
10.1.4 　直接获取extra信息方式的缺点　　169
10.2 　fragment argument　　169
10.2.1 　附加argument给fragment　　169
10.2.2 　获取argument　　170
10.3 　重新加载显示列表项　　171
10.4 　通过fragment获取返回结果　　172
第11章　使用ViewPager　　174
11.1 　创建CrimePagerActivity　　175
11.1.1 　以代码的方式定义并产生布局　　176
11.1.2 　ViewPager与Pager-Adapter　　177
11.1.3 　整合配置并使用CrimePagerActivity　　178
11.1.4 　FragmentStatePager-Adapter与Fragment-PagerAdapter　　180
11.2 　深入学习：ViewPager的工作原理　　182
第12章　对话框　　184
12.1 　创建DialogFragment　　186
12.1.1 　显示DialogFragment　　187
12.1.2 　设置对话框的显示内容　　188
12.2 　fragment间的数据传递　　190
12.2.1 　传递数据给DatePicker-Fragment　　191
12.2.2 　返回数据给CrimeFragment　　193
12.3 　挑战练习：更多对话框　　198
第13章　使用MediaPlayer播放音频　　199
13.1 　添加资源　　200
13.2 　定义HelloMoonFragment布局文件　　202
13.3 　创建HelloMoonFragment　　203
13.4 　使用布局fragment　　204
13.5 　音频播放　　205
13.6 　挑战练习：暂停音频播放　　208
13.7 　深入学习：播放视频　　208
13.8 　挑战练习：在HelloMoon应用中播放视频　　208
第14章　fragment的保留　　209
14.1 　保留fragment实例　　209
14.2 　设备旋转与保留的fragment　　210
14.3 　保留的fragment：一切都完美了吗　　212
14.4 　设备旋转处理与onSaveInstance-State(Bundle)方法　　212
14.5 　深入学习：fragment引入前的设备旋转问题　　214
第15章　应用本地化　　215
15.1 　本地化资源　　215
15.2 　配置修饰符　　216
15.2.1 　可用资源优先级排定　　217
15.2.2 　多重配置修饰符　　218
15.2.3 　寻找最匹配的资源　　219
15.3 　更多资源使用原则及控制　　220
15.3.1 　资源命名　　220
15.3.2 　资源目录结构　　220
15.4 　测试备选资源　　221
第16章　操作栏　　223
16.1 　选项菜单　　223
16.1.1 　在XML文件中定义选项菜单　　225
16.1.2 　创建选项菜单　　227
16.1.3 　响应菜单项选择　　230
16.2 　实现层级式导航　　232
16.2.1 　启用应用图标的导航功能　　232
16.2.2 　响应向上按钮　　233
16.3 　可选菜单项　　236
16.3.1 　创建可选菜单XML文件　　236
16.3.2 　切换菜单项标题　　237
16.3.3 　“还有个问题”　　238
16.4 　挑战练习：用于列表的空视图　　239
第17章　存储与加载本地文件　　241
17.1 　CriminalIntent应用的数据存取　　241
17.1.1 　保存crime数据到JSON文件　　242
17.1.2 　从文件中读取crime数据　　246
17.2 　挑战练习：使用外部存储　　248
17.3 　深入学习：Android文件系统与Java I/O　　248
第18章　上下文菜单与上下文操作模式　　250
18.1 　定义上下文菜单资源　　251
18.2 　实施浮动上下文菜单　　251
18.2.1 　创建上下文菜单　　251
18.2.2 　为上下文菜单登记视图　　252
18.2.3 　响应菜单项选择　　253
18.3 　实施上下文操作模式　　254
18.3.1 　实现列表视图的多选操作　　255
18.3.2 　列表视图中的操作模式回调方法　　256
18.3.3 　改变已激活视图的显示背景　　258
18.3.4 　实现其他视图的上下文操作模式　　259
18.4 　兼容性问题：回退还是复制　　260
18.5 　挑战练习：在CrimeFragment视图中删除crime记录　　261
18.6 　深入学习：ActionBarSherlock　　261
18.7 　挑战练习：使用ActionBarSherlock　　263
18.7.1 　CriminalIntent应用中ABS的基本整合　　264
18.7.2 　ABS的深度整合　　264
18.7.3 　ABS的完全整合　　265
第19章　相机I：取景器　　266
19.1 　创建Fragment布局　　267
19.2 　创建CrimeCameraFragment　　269
19.3 　创建CrimeCameraActivity　　269
19.4 　使用相机API　　271
19.4.1 　打开并释放相机　　271
19.4.2 　SurfaceView、Surface-Holder与Surface　　272
19.4.3 　确定预览界面大小　　276
19.4.4 　启动CrimeCamera-Activity　　277
19.5 　深入学习：以命令行的方式运行activity　　281
第20章　相机 II：拍摄并处理照片　　283
20.1 　拍摄照片　　283
20.1.1 　实现相机回调方法　　285
20.1.2 　设置图片尺寸大小　　288
20.2 　返回数据给CrimeFragment　　288
20.2.1 　以接收返回值的方式启动CrimeCameraActivity　　289
20.2.2 　在CrimeCameraFragment中设置返回值　　290
20.2.3 　在CrimeFragment中获取照片文件名　　290
20.3 　更新模型层　　291
20.3.1 　新增Photo类　　292
20.3.2 　为Crime添加photo属性　　293
20.3.3 　设置photo属性　　293
20.4 　更新CrimeFragment的视图　　294
20.4.1 　添加ImageView组件　　295
20.4.2 　图像处理　　296
20.5 　在DialogFragment中显示大图片　　300
20.6 　挑战练习：Crime照片的显示方向　　303
20.7 　挑战练习：删除照片　　303
20.8 　深入学习：Android代码的废弃处理　　303
第21章　隐式intent　　305
21.1 　添加按钮组件　　306
21.2 　添加嫌疑人信息至模型层　　307
21.3 　使用格式化字符串　　308
21.4 　使用隐式intent　　309
21.4.1 　典型隐式intent的组成　　310
21.4.2 　发送陋习报告　　311
21.4.3 　获取联系人信息　　313
21.4.4 　检查可以响应的activity　　316
21.5 　挑战练习：又一个隐式intent　　317
第22章　Master-Detail用户界面　　318
22.1 　增加布局灵活性　　319
22.1.1 　修改SingleFragment-Activity　　320
22.1.2 　创建包含两个fragment容器的布局　　320
22.1.3 　使用别名资源　　322
22.2 　Activity：fragment的托管者　　323
22.3 　深入学习：设备屏幕尺寸的确定　　331
第23章　深入学习intent和任务　　333
23.1 　创建NerdLauncher项目　　333
23.2 　解析隐式intent　　334
23.3 　在运行时创建显式intent　　337
23.4 　任务与后退栈　　338
23.5 　使用NerdLauncher应用作为设备主屏幕　　341
23.6 　挑战练习：应用图标与任务重排　　341
23.7 　进程与任务　　341
第24章　样式与include标签的使用　　343
24.1 　创建RemoteControl项目　　344
24.1.1 　编码实现RemoteControl-Activity　　344
24.1.2 　创建RemoteControl-Fragment　　345
24.2 　使用样式消除重复代码　　348
24.3 　完善布局定义　　350
24.4 　深入学习：使用include与merge标签　　353
24.5 　挑战练习：样式的继承　　354
第25章　XML Drawable与9-Patches　　355
25.1 　XML drawable　　356
25.2 　state list drawable　　358
25.3 　layer list与inset drawable　　360
25.4 　使用9-patch图像　　362
第26章　HTTP与后台任务　　368
26.1 　创建PhotoGallery应用　　369
26.2 　网络连接基本　　372
26.3 　使用AsyncTask在后台线程上运行代码　　373
26.4 　线程与主线程　　375
26.5 　获取Flickr XML数据　　377
26.6 　从AsyncTask回到主线程　　382
26.7 　深入学习：再探AsyncTask　　385
26.8 　挑战练习：分页　　386
第27章　Looper、Handler与HandlerThread　　387
27.1 　设置GridView以显示图片　　387
27.2 　批量下载缩略图　　390
27.3 　与主线程通信　　390
27.4 　创建并启动后台线程　　391
27.5 　Message与message Handler　　393
27.5.1 　消息的剖析　　393
27.5.2 　Handler的剖析　　393
27.5.3 　使用handler　　395
27.5.4 　传递handler　　397
27.6 　深入学习：AsyncTask与Thread　　401
27.7 　挑战练习：预加载以及缓存　　401
第28章　搜索　　402
28.1 　搜索Flickr网站　　402
28.2 　搜索对话框　　404
28.2.1 　创建搜索界面　　404
28.2.2 　可搜索的activity　　406
28.2.3 　物理搜索键　　408
28.2.4 　搜索的工作原理　　409
28.2.5 　启动模式与新的intent　　410
28.2.6 　使用shared preferences实现轻量级数据存储　　412
28.3 　在Android 3.0以后版本的设备上使用SearchView　　414
28.4 　挑战练习　　416
第29章　后台服务　　417
29.1 　创建IntentService　　417
29.2 　服务的作用　　419
29.3 　查找最新返回结果　　421
29.4 　使用AlarmManager延迟运行服务　　422
29.4.1 　PendingIntent　　424
29.4.2 　使用PendingIntent管理定时器　　424
29.5 　控制定时器　　425
29.6 　通知信息　　428
29.7 　深入学习：服务细节内容　　429
29.7.1 　服务的能与不能　　430
29.7.2 　服务的生命周期　　430
29.7.3 　non-sticky服务　　430
29.7.4 　sticky服务　　431
29.7.5 　绑定服务　　431
第30章　broadcast Intent　　433
30.1 　随设备重启而重启的定时器　　433
30.1.1 　配置文件中的broadcast receiver　　434
30.1.2 　如何使用receiver　　435
30.2 　过滤前台通知消息　　436
30.2.1 　发送broadcast intent　　437
30.2.2 　动态broadcast receiver　　437
30.2.3 　使用私有权限　　440
30.2.4 　使用ordered broadcast接收结果　　442
30.3 　receiver与长时运行任务　　446
第31章　网页浏览　　447
31.1 　最后一段Flickr数据　　447
31.2 　简单方式：使用隐式intent　　448
31.3 　较难方式：使用WebView　　449
31.3.1 　使用WebChromeClient优化WebView的显示　　453
31.3.2 　处理WebView的设备旋转问题　　455
31.4 　深入学习：注入JavaScript对象　　456
第32章　定制视图与触摸事件　　457
32.1 　创建DragAndDraw项目　　457
32.1.1 　创建DragAndDraw-Activity　　458
32.1.2 　创建DragAndDraw-Fragment　　459
32.2 　创建定制视图　　460
32.3 　处理触摸事件　　462
32.4 　onDraw(...)方法内的图形绘制　　465
32.5 　挑战练习：设备旋转问题　　467
第33章　跟踪设备的地理位置　　468
33.1 　启动RunTracker项目　　468
33.1.1 　创建RunActivity　　469
33.1.2 　创建RunFragment　　470
33.2 　地理位置与LocationManager　　472
33.3 　接收定位数据更新broadcast　　474
33.4 　使用定位数据刷新UI显示　　475
33.5 　快速定位：最近一次地理位置　　479
33.6 　在物理和虚拟设备上测试地理位置定位　　480
第34章　使用SQLite本地数据库　　482
34.1 　在数据库中存储旅程和地理位置信息　　482
34.2 　查询数据库中的旅程列表　　488
34.3 　使用CursorAdapter显示旅程列表　　490
34.4 　创建新旅程　　493
34.5 　管理现有旅程　　494
34.6 　挑战练习：识别当前跟踪的旅程　　500
第35章　使用Loader加载异步数据　　501
35.1 　Loader与LoaderManager　　501
35.2 　在RunTracker应用中使用Loader　　502
35.3 　加载旅程列表　　503
35.4 　加载单个旅程　　506
35.5 　加载旅程的最近一次地理位置　　509
第36章　使用地图　　511
36.1 　添加Maps API给RunTracker应用　　511
36.1.1 　使用物理设备测试地图　　511
36.1.2 　安装使用Google Play services SDK　　511
36.1.3 　获取Google Maps API key　　512
36.1.4 　更新RunTracker应用的manifest配置文件　　512
36.2 　在地图上显示用户的地理位置　　513
36.3 　显示旅程路线　　516
36.4 　为旅程添加开始和结束地图标注　　520
36.5 　挑战练习：实时数据更新　　521
第37章　编后语　　522
37.1 　终极挑战　　522
37.2 　关于我们　　523
37.3 　致谢　　523
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android编程权威指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入理解Android
第1章　阅读前的准备工作 / 1
1.1　系统架构 / 2
1.1.1　Android系统架构 / 2
1.1.2　本书的架构 / 3
1.2　搭建开发环境 / 4
1.2.1　下载源码 / 4
1.2.2　编译源码 / 6
1.3　工具介绍 / 8
1.3.1　Source Insight介绍 / 8
1.3.3　Busybox的使用 / 11
1.4　本章小结 / 12
第2章　深入理解JNI / 13
2.1　JNI概述 / 14
2.2　学习JNI的实例：MediaScanner / 15
2.3　Java层的MediaScanner分析 / 16
2.3.1　加载JNI库 / 16
2.3.2　Java的native函数和总结 / 17
2.4　JNI层MediaScanner的分析 / 17
2.4.1　注册JNI函数 / 18
2.4.2　数据类型转换 / 22
2.4.3　JNIEnv介绍 / 24
2.4.4　通过JNIEnv操作jobject / 25
2.4.5　jstring介绍 / 27
2.4.6　JNI类型签名介绍 / 28
2.4.7　垃圾回收 / 29
2.4.8　JNI中的异常处理 / 32
2.5　本章小结 / 32
第3章　深入理解init / 33
3.1　概述 / 34
3.2　init分析 / 34
3.2.1　解析配置文件 / 38
3.2.2　解析service / 42
3.2.3　init控制service / 48
3.2.4　属性服务 / 52
3.3　本章小结 / 60
第4章　深入理解zygote / 61
4.1　概述 / 62
4.2　zygote分析 / 62
4.2.1　AppRuntime分析 / 63
4.2.2　Welcome to Java World / 68
4.2.3　关于zygote的总结 / 74
4.3　SystemServer分析 / 74
4.3.1　SystemServer的诞生 / 74
4.3.2　SystemServer的重要使命 / 77
4.3.3　关于 SystemServer的总结 / 83
4.4　zygote的分裂  / 84
4.4.1　ActivityManagerService发送请求 / 84
4.4.2　有求必应之响应请求 / 86
4.4.3　 关于zygote分裂的总结 / 88
4.5　拓展思考 / 88
4.5.1　虚拟机heapsize的限制 / 88
4.5.2　开机速度优化 / 89
4.5.3　Watchdog分析 / 90
4.6　本章小结 / 93
第5章　深入理解常见类 / 95
5.1　概述 / 96
5.2　以“三板斧”揭秘RefBase、sp和wp / 96
5.2.1　第一板斧——初识影子对象 / 96
5.2.2　第二板斧——由弱生强 / 103
5.2.3　第三板斧——破解生死魔咒 / 106
5.2.4　轻量级的引用计数控制类LightRefBase / 108
5.2.5　题外话—三板斧的来历 / 109
5.3　Thread类及常用同步类分析 / 109
5.3.1　一个变量引发的思考 / 109
5.3.2　常用同步类 / 114
5.4　Looper和Handler类分析 / 121
5.4.1　Looper类分析 / 122
5.4.2　Handler分析 / 124
5.4.3　Looper和Handler的同步关系 / 127
5.4.4　HandlerThread介绍 / 129
5.5　本章小结 / 129
第6章　深入理解Binder / 130
6.1　概述 / 131
6.2　庖丁解MediaServer / 132
6.2.1　MediaServer的入口函数 / 132
6.2.2　独一无二的ProcessState / 133
6.2.3　时空穿越魔术—defaultServiceManager / 134
6.2.4　注册MediaPlayerService / 142
6.2.5　秋风扫落叶—StartThread Pool和join Thread Pool分析 / 149
6.2.6　你彻底明白了吗 / 152
6.3　服务总管ServiceManager / 152
6.3.1　ServiceManager的原理 / 152
6.3.2　服务的注册 / 155
6.3.3　ServiceManager存在的意义 / 158
6.4　MediaPlayerService和它的Client / 158
6.4.1　查询ServiceManager / 158
6.4.2　子承父业 / 159
6.5　拓展思考 / 162
6.5.1　Binder和线程的关系 / 162
6.5.2　有人情味的讣告 / 163
6.5.3　匿名Service / 165
6.6　学以致用 / 166
6.6.1　纯Native的Service / 166
6.6.2　扶得起的“阿斗”（aidl） / 169
6.7　本章小结 / 172
第7章　深入理解Audio系统 / 173
7.1　概述 / 174
7.2　AudioTrack的破解 / 174
7.2.1　用例介绍 / 174
7.2.2　AudioTrack（Java空间）分析 / 179
7.2.3　AudioTrack（Native空间）分析 / 188
7.2.4　关于AudioTrack的总结 / 200
7.3　AudioFlinger的破解 / 200
7.3.1　AudioFlinger的诞生 / 200
7.3.2　通过流程分析AudioFlinger / 204
7.3.3　audio_track_cblk_t分析 / 230
7.3.4　关于AudioFlinger的总结 / 234
7.4　AudioPolicyService的破解 / 234
7.4.1　AudioPolicyService的创建 / 235
7.4.2　重回AudioTrack / 245
7.4.3　声音路由切换实例分析 / 251
7.4.4　关于AudioPolicy的总结 / 262
7.5　拓展思考 / 262
7.5.1　DuplicatingThread破解 / 262
7.5.2　题外话 / 270
7.6　本章小结 / 272
第8章　深入理解Surface系统 / 273
8.1　概述 / 275
8.2　一个Activity的显示 / 275
8.2.1　Activity的创建 / 275
8.2.2　Activity的UI绘制 / 294
8.2.3　关于Activity的总结 / 296
8.3　初识Surface / 297
8.3.1　和Surface有关的流程总结 / 297
8.3.2　Surface之乾坤大挪移 / 298
8.3.3　乾坤大挪移的JNI层分析 / 303
8.3.4　Surface和画图 / 307
8.3.5　初识Surface小结 / 309
8.4　深入分析Surface / 310
8.4.1　与Surface相关的基础知识介绍 / 310
8.4.2　SurfaceComposerClient分析 / 315
8.4.3　SurfaceControl分析 / 320
8.4.4　writeToParcel和Surface对象的创建 / 331
8.4.5　lockCanvas和unlockCanvasAndPost分析 / 335
8.4.6　GraphicBuffer介绍 / 344
8.4.7　深入分析Surface的总结 / 353
8.5　SurfaceFlinger分析 / 353
8.5.1　SurfaceFlinger的诞生 / 354
8.5.2　SF工作线程分析 / 359
8.5.3　Transaction分析 / 368
8.5.4　关于SurfaceFlinger的总结 / 376
8.6　拓展思考 / 377
8.6.1　Surface系统的CB对象分析 / 377
8.6.2　ViewRoot的你问我答 / 384
8.6.3　LayerBuffer分析 / 385
8.7　本章小结 / 394
第9章　深入理解Vold和Rild / 395
9.1　概述 / 396
9.2　Vold的原理与机制分析 / 396
9.2.1　Netlink和Uevent介绍 / 397
9.2.2　初识Vold / 399
9.2.3　NetlinkManager模块分析 / 400
9.2.4　VolumeManager模块分析 / 408
9.2.5　CommandListener模块分析 / 414
9.2.6　Vold实例分析 / 417
9.2.7　关于Vold的总结 / 428
9.3　Rild的原理与机制分析 / 428
9.3.1　初识Rild / 430
9.3.2　RIL_startEventLoop分析 / 432
9.3.3　RIL_Init分析 / 437
9.3.4　RIL_register分析 / 444
9.3.5　关于Rild main函数的总结 / 447
9.3.6　Rild实例分析 / 447
9.3.7　关于Rild的总结 / 459
9.4　拓展思考 / 459
9.4.1　嵌入式系统的存储知识介绍 / 459
9.4.2　Rild和Phone的改进探讨 / 462
9.5　本章小结 / 463
第10章　深入理解MediaScanner / 464
10.1　概述 / 465
10.2　android.process.media分析 / 465
10.2.1　MSR模块分析 / 466
10.2.2　MSS模块分析 / 467
10.2.3　android.process.media媒体扫描工作的流程总结 / 471
10.3　MediaScanner分析 / 472
10.3.1　Java层分析 / 472
10.3.2　JNI层分析 / 476
10.3.3　PVMediaScanner分析 / 479
10.3.4　关于MediaScanner的总结 / 485
10.4　拓展思考 / 486
10.4.1　MediaScannerConnection介绍 / 486
10.4.2　我问你答 / 487
10.5　本章小结 / 488
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入理解Android
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入理解Android 卷III
推荐序
前　言
第1章　开发环境部署1
1.1获取Android源代码1
1.2Android的编译3
1.3在IDE中导入Android源代码4
1.3.1将Android源代码导入Eclipse4
1.3.2将Android源代码导入SourceInsight5
1.4调试Android源代码6
1.4.1使用Eclipse调试Android Java源代码6
1.4.2使用gdb调试Android C/C++源代码8
1.5本章小结9
第2章深入理解Java Binder和MessageQueue10
2.1概述11
2.2Java层中的Binder分析11
2.2.1Binder架构总览11
2.2.2初始化Java层Binder框架13
2.2.3窥一斑，可见全豹乎16
2.2.4理解AIDL25
2.2.5Java层Binder架构总结28
2.3心系两界的MessageQueue28
2.3.1MessageQueue的创建29
2.3.2提取消息29
2.3.3nativePollOnce函数分析32
2.3.4MessageQueue总结42
2.4本章小结44
第3章　深入理解AudioService45
3.1概述46
3.2音量管理47
3.2.1音量键的处理流程47
3.2.2通用的音量设置函数setStreamVolume()61
3.2.3静音控制63
3.2.4音量控制小结67
3.3音频外设的管理68
3.3.1　WiredAccessoryObserver 设备状态的监控68
3.3.2AudioService的外设状态管理73
3.3.3音频外设管理小结78
3.4AudioFocus机制的实现78
3.4.1AudioFocus最简单的例子79
3.4.2AudioFocus实现原理简介81
3.4.3申请AudioFocus82
3.4.4释放AudioFocus86
3.4.5AudioFocus小结87
3.5AudioService的其他功能88
3.6本章小结89
第4章　深入理解WindowManager-Service90
4.1初识WindowManagerService91
4.1.1一个从命令行启动的动画窗口91
4.1.2WMS的构成99
4.1.3初识WMS的小结103
4.2WMS的窗口管理结构104
4.2.1理解WindowToken107
4.2.2理解WindowState111
4.2.3理解DisplayContent112
4.3理解窗口的显示次序112
4.3.1主序、子序和窗口类型112
4.3.2通过主序与子序确定窗口的次序114
4.3.3更新显示次序到Surface119
4.3.4关于显示次序的小结119
4.4窗口的布局119
4.4.1从relayoutWindow()开始120
4.4.2布局操作的外围代码分析124
4.4.3初探performLayoutAndPlace-SurfacesLockedInner()127
4.4.4布局的前期处理128
4.4.5布局DisplayContent130
4.4.6布局的最终阶段150
4.5WMS的动画系统150
4.5.1Android动画原理简介151
4.5.2WMS的动画系统框架155
4.5.3WindowAnimator分析156
4.5.4深入理解窗口动画160
4.5.5交替运行的布局系统与动画系统173
4.5.6动画系统总结174
4.6本章小结174
第5章　深入理解Android输入系统176
5.1初识Android输入系统177
5.1.1getevent与sendevent工具178
5.1.2Android输入系统简介179
5.1.3IMS的构成181
5.2原始事件的读取与加工185
5.2.1基础知识：INotify与Epoll186
5.2.2　InputReader的总体流程189
5.2.3　深入理解EventHub191
5.2.4　深入理解InputReader205
5.2.5原始事件的读取与加工总结225
5.3输入事件的派发225
5.3.1通用事件派发流程226
5.3.2按键事件的派发237
5.3.3DispatcherPolicy与InputFilter247
5.3.4输入事件的派发总结250
5.4输入事件的发送、接收与反馈250
5.4.1深入理解InputChannel251
5.4.2连接InputDispatcher和窗口252
5.4.3事件的发送260
5.4.4事件的接收263
5.4.5事件的反馈与发送循环264
5.4.6输入事件的发送、接收与反馈总结267
5.5关于输入系统的其他重要话题267
5.5.1输入事件ANR的产生267
5.5.2 焦点窗口的确定270
5.5.3以软件方式模拟用户操作273
5.6本章小结273
第6章　深入理解控件系统275
6.1　初识Android的控件系统276
6.1.1　另一种创建窗口的方法277
6.1.2　控件系统的组成278
6.2　深入理解WindowManager279
6.2.1　WindowManager的创建与体系结构279
6.2.2　通过WindowManagerGlobal添加窗口282
6.2.3　更新窗口的布局284
6.2.4　删除窗口285
6.2.5　WindowManager的总结285
6.3　深入理解ViewRootImpl286
6.3.1　ViewRootImpl的创建及其重要的成员286
6.3.2　控件系统的心跳：performTraversals()290
6.3.3　ViewRootImpl总结317
6.4　深入理解控件树的绘制317
6.4.1　理解Canvas317
6.4.2　View.invalidate()与脏区域320
6.4.3　开始绘制321
6.4.4　软件绘制的原理323
6.4.5　硬件加速绘制的原理334
6.4.6　使用绘图缓存346
6.4.7　控件动画356
6.4.8　绘制控件树的总结360
6.5　深入理解输入事件的派发361
6.5.1　触摸模式361
6.5.2　控件焦点363
6.5.3　输入事件派发的综述376
6.5.4　按键事件的派发381
6.5.5　触摸事件的派发388
6.5.6　输入事件派发的总结404
6.6　Activity与控件系统405
6.6.1　理解PhoneWindow405
6.6.2　Activity窗口的创建与显示414
6.7　本章小结416
第7章　深入理解SystemUI418
7.1　初识SystemUI419
7.1.1　SystemUIService的启动420
7.1.2　状态栏与导航栏的创建422
7.1.3　理解IStatusBarService425
7.1.4　SystemUI的体系结构427
7.2　深入理解状态栏428
7.2.1　状态栏窗口的创建与控件树结构429
7.2.2　通知信息的管理与显示434
7.2.3　系统状态图标区的管理与显示448
7.2.4　状态栏总结452
7.3　深入理解导航栏452
7.3.1　导航栏的创建453
7.3.2　虚拟按键的工作原理459
7.3.3　SearchPanel462
7.3.4　关于导航栏的其他话题465
7.3.5　导航栏总结471
7.4　禁用状态栏与导航栏的功能472
7.4.1　如何禁用状态栏与导航栏的功能472
7.4.2　StatusBarManagerService对禁用标记的维护473
7.4.3　状态栏与导航栏对禁用标记的响应474
7.5　理解SystemUIVisibility475
7.5.1　SystemUIVisibility在系统中的漫游过程476
7.5.2　SystemUIVisibility发挥作用482
7.5.3　SystemUIVisibility总结494
7.6　本章小结495
第8章　深入理解Android壁纸496
8.1　初识Android壁纸497
8.2深入理解动态壁纸498
8.2.1启动动态壁纸的方法498
8.2.2壁纸服务的启动原理498
8.2.3　理解UpdateSurface()方法510
8.2.4　壁纸的销毁515
8.2.5　理解Engine的回调516
8.3　深入理解静态壁纸—ImageWallpaper519
8.3.1　获取用作静态壁纸的位图519
8.3.2　静态壁纸位图的设置522
8.3.3　连接静态壁纸的设置与获取—WallpaperObserver524
8.4　WMS对壁纸窗口的特殊处理526
8.4.1　壁纸窗口Z序的确定527
8.4.2　壁纸窗口的可见性533
8.4.3　壁纸窗口的动画535
8.4.4　壁纸窗口总结538
8.5　本章小结539
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入理解Android 卷III
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android系统源代码情景分析
目录
第1篇 初识Android系统
第1章 准备知识 2
1.1 Linux内核参考书籍 2
1.2 Android应用程序参考书籍 3
1.3 下载、编译和运行Android源代码 3
1.3.1 下载Android源代码 4
1.3.2 编译Android源代码 4
1.3.3 运行Android模拟器 5
1.4 下载、编译和运行Android内核源代码 6
1.4.1 下载Android内核源代码 6
1.4.2 编译Android内核源代码 7
1.4.3 运行Android模拟器  8
1.5 开发第一个Android应用程序 8
1.6 单独编译和打包Android应用程序模块 11
1.6.1 导入单独编译模块的mmm命令 11
1.6.2 单独编译Android应用程序模块 12
1.6.3 重新打包Android系统镜像文件 12
第２章 硬件抽象层 13
2.1 开发Android硬件驱动程序 4
2.1.1 实现内核驱动程序模块 14
2.1.2 修改内核Kconfig文件 21
2.1.3 修改内核Makefile文件 22
2.1.4 编译内核驱动程序模块 22
2.1.5 验证内核驱动程序模块 23
2.2 开发C可执行程序验证Android硬件驱动程序 24
2.3 开发Android硬件抽象层模块 26
2.3.1 硬件抽象层模块编写规范 26
2.3.2 编写硬件抽象层模块接口 29
2.3.3 硬件抽象层模块的加载过程 33
2.3.4 处理硬件设备访问权限问题 36
2.4 开发Android硬件访问服务 38
2.4.1 定义硬件访问服务接口 38
2.4.2 实现硬件访问服务 39
2.4.3 实现硬件访问服务的JNI方法 40
2.4.4 启动硬件访问服务 43
2.5 开发Android应用程序来使用硬件访问服务 44
第３章 智能指针 49
3.1 轻量级指针 50
3.1.1 实现原理分析 50
3.1.2 应用实例分析 53
3.2 强指针和弱指针 54
3.2.1 强指针的实现原理分析 55
3.2.2 弱指针的实现原理分析 61
3.2.3 应用实例分析 67
第2篇 Android专用驱动系统
第４章 Logger日志系统 74
4.1 Logger日志格式 75
4.2 Logger日志驱动程序 76
4.2.1 基础数据结构 77
4.2.2 日志设备的初始化过程 78
4.2.3 日志设备文件的打开过程 83
4.2.4 日志记录的读取过程 84
4.2.5 日志记录的写入过程 88
4.3 运行时库层日志库 93
4.4 C/C++日志写入接口 100
4.5 Java日志写入接口 104
4.6 Logcat工具分析 110
4.6.1 相关数据结构 111
4.6.2 初始化过程 115
4.6.3 日志记录的读取过程 127
4.6.4 日志记录的输出过程 132
第５章 Binder进程间通信系统 144
5.1 Binder驱动程序 145
5.1.1 基础数据结构 146
5.1.2 Binder设备的初始化过程 164
5.1.3 Binder设备文件的打开过程 165
5.1.4 Binder设备文件的内存映射过程 166
5.1.5 内核缓冲区管理 173
5.2 Binder进程间通信库 183
5.3 Binder进程间通信应用实例 188
5.4 Binder对象引用计数技术 196
5.4.1 Binder本地对象的生命周期 197
5.4.2 Binder实体对象的生命周期 201
5.4.3 Binder引用对象的生命周期 204
5.4.4 Binder代理对象的生命周期 209
5.5 Binder对象死亡通知机制 212
5.5.1 注册死亡接收通知 213
5.5.2 发送死亡接收通知 216
5.5.3 注销死亡接收通知 221
5.6 Service Manager的启动过程 224
5.6.1 打开和映射Binder设备文件 226
5.6.2 注册为Binder上下文管理者 227
5.6.3 循环等待Client进程请求 231
5.7 Service Manager代理对象的获取过程 238
5.8 Service组件的启动过程 244
5.8.1 注册Service组件 245
5.8.2 启动Binder线程池 289
5.9 Service代理对象的获取过程 291
5.10 Binder进程间通信机制的Java接口 300
5.10.1 Service Manager的Java代理对象的获取过程 300
5.10.2 Java服务接口的定义和解析 310
5.10.3 Java服务的启动过程 313
5.10.4 Java服务代理对象的获取过程 320
5.10.5 Java服务的调用过程 323
第６章 Ashmem匿名共享内存系统 327
6.1 Ashmem驱动程序 328
6.1.1 基础数据结构 328
6.1.2 匿名共享内存设备的初始化过程 330
6.1.3 匿名共享内存设备文件的打开过程 332
6.1.4 匿名共享内存设备文件的内存映射过程 334
6.1.5 匿名共享内存块的锁定和解锁过程 336
6.1.6 匿名共享内存块的回收过程 344
6.2 运行时库cutils的匿名共享内存访问接口 345
6.3 匿名共享内存的C++访问接口 349
6.3.1 MemoryHeapBase 349
6.3.2 MemoryBase 359
6.3.3 应用实例 364
6.4 匿名共享内存的Java访问接口 370
6.4.1 MemoryFile 370
6.4.2 应用实例 375
6.5 匿名共享内存的共享原理 386
第3篇 Android应用程序框架
第７章 Activity组件的启动过程 392
7.1 Activity组件应用实例 392
7.2 根Activity组件的启动过程 398
7.3 子Activity组件在进程内的启动过程 432
7.4 子Activity组件在新进程中的启动过程 440
第８章 Service组件的启动过程 443
8.1 Service组件应用实例 443
8.2 Service组件在新进程中的启动过程 451
8.3 Service组件在进程内的绑定过程 463
第９章 Android系统广播机制 486
9.1 广播机制应用实例 487
9.2 广播接收者的注册过程 493
9.3 广播的发送过程 501
第10章 Content Provider组件的实现原理 524
10.1 Content Provider组件应用实例 525
10.1.1 ArticlesProvider 525
10.1.2 Article 535
10.2 Content Provider组件的启动过程 550
10.3 Content Provider组件的数据共享原理 573
10.3.1 数据共享模型 573
10.3.2 数据传输过程 576
10.4 Content Provider组件的数据更新通知机制 596
10.4.1 注册内容观察者 597
10.4.2 发送数据更新通知 603
第11章 Zygote和System进程的启动过程 611
11.1 Zygote进程的启动脚本  611
11.2 Zygote进程的启动过程 614
11.3 System进程的启动过程 622
第12章 Android应用程序进程的启动过程 630
12.1 应用程序进程的创建过程 630
12.2 Binder线程池的启动过程 639
12.3 消息循环的创建过程 641
第13章 Android应用程序的消息处理机制 645
13.1 创建线程消息队列 645
13.2 线程消息循环过程 650
13.3 线程消息发送过程 655
13.4 线程消息处理过程 660
第14章 Android应用程序的键盘消息处理机制 667
14.1 键盘消息处理模型  667
14.2 InputManager的启动过程  670
14.2.1 创建InputManager 670
14.2.2 启动InputManager 673
14.2.3 启动InputDispatcher 675
14.2.4 启动InputReader 677
14.3 InputChannel的注册过程 688
14.3.1 创建InputChannel 689
14.3.2 注册Server端InputChannel 697
14.3.3 注册系统当前激活的应用程序窗口 701
14.3.4 注册Client端InputChannel 706
14.4 键盘消息的分发过程 709
14.4.1 InputReader获得键盘事件 710
14.4.2 InputDispatcher分发键盘事件 717
14.4.3 系统当前激活的应用程序窗口获得键盘消息 727
14.4.4 InputDispatcher获得键盘事件处理完成通知 743
14.5 InputChannel的注销过程 746
14.5.1 销毁应用程序窗口 747
14.5.2 注销Client端InputChannel 756
14.5.3 注销Server端InputChannel 758
第15章 Android应用程序线程的消息循环模型 764
15.1 应用程序主线程消息循环模型 765
15.2 与界面无关的应用程序子线程消息循环模型 766
15.3 与界面相关的应用程序子线程消息循环模型 769
第16章 Android应用程序的安装和显示过程 778
16.1 应用程序的安装过程 778
16.2 应用程序的显示过程 814
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android系统源代码情景分析
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入理解Android内核设计思想
第1篇　Android编译篇
第1章　Android系统简介　2
1．1　Android系统发展历程　2
1．2　Android系统特点　4
1．3　Android系统框架　8
第2章　Android源码下载及编译　10
2．1　Android源码下载指南　10
2．1．1　基于Repo和Git的版本管理　10
2．1．2　Android源码下载流程　11
2．2　原生态系统编译指南　12
2．2．1　建立编译环境　13
2．2．2　编译流程　15
2．3　定制产品的编译与烧录　17
2．3．1　定制新产品　17
2．3．2　Linux内核编译　21
2．3．3　烧录　22
2．4　Android系统映像文件　23
2．4．1　boot．img　23
2．4．2　ramdisk．img　25
2．4．3　system．img　26
2．5　OTA系统升级　26
2．5．1　生成升级包　27
2．5．2　获取升级包　28
2．5．3　OTA升级-RecoveryMode　29
2．6　Android反编译　31
第3章　Android编译系统　34
3．1　Makefile入门　34
3．2　Android编译系统　35
3．2．1　Makefile依赖树的概念　36
3．2．2　树根节点droid　36
3．2．3　main．mk解析　38
3．2．4　droidcore节点　39
3．2．5　dist_files　41
3．2．6　Android．mk的编写规则　42
第2篇　Android原理篇
第4章　操作系统基础　48
4．1　计算机体系结构(Computer Architecture)　48
4．1．1　冯·诺依曼结构　48
4．1．2　哈佛结构　48
4．2　什么是操作系统　49
4．3　进程间通信的经典实现　51
4．3．1　共享内存(Shared Memory)　52
4．3．2　管道(Pipe)　54
4．3．3　Unix Domain Socket　55
4．3．4　RPC(RemoteProcedure Calls)　58
4．4　同步机制的经典实现　58
4．4．1　信号量(Semaphore)　58
4．4．2　Mutex　59
4．4．3　管程(Monitor)　59
4．4．4　同步范例　60
4．5　Android中的同步机制　61
4．5．1　进程间同步——Mutex　61
4．5．2　条件判断——Condition　62
4．5．3　“栅栏、障碍”——Barrier　64
4．5．4　加解锁的自动化操作——Autolock　66
4．6　操作系统内存管理基础　66
4．6．1　虚拟内存(Virtual Memory)　66
4．6．2　内存保护(Memory Protection)　69
4．6．3　内存分配与回收　69
4．6．4　进程间通信——mmap　70
4．7　Android中的Low Memory Killer　71
4．8　Android匿名共享内存(Anonymous Shared Memory)　74
4．8．1　Ashmem设备　74
4．8．2　Ashmem应用实例　78
4．9　JNI　83
4．9．1　Java函数的本地实现　83
4．9．2　本地代码访问JVM　86
4．10　学习Android系统的两条线索　88
第5章　Android进程/线程管理　89
5．1　Android进程和线程　89
5．2　Handler， MessageQueue，Runnable与Looper　95
5．3　UI主线程——ActivityThread　102
5．4　Thread类　105
5．4．1　Thread类的内部原理　105
5．4．2　Thread休眠和唤醒　106
5．4．3　Thread实例　110
5．5　Android应用程序的典型启动流程　112
第6章　进程间通信——Binder　114
6．1　智能指针　117
6．1．1　智能指针的设计理念　117
6．1．2　强指针sp　120
6．1．3　弱指针wp　121
6．2　进程间的数据传递载体——Parcel　128
6．3　Binder驱动与协议　135
6．3．1　打开Binder驱动——binder_open　136
6．3．2　binder_mmap　137
6．3．3　binder_ioctl　140
6．4　“DNS”服务器——ServiceManager(Binder Server)　141
6．4．1　ServiceManager的启动　141
6．4．2　ServiceManager的构建　142
6．4．3　获取ServiceManager服务——设计思考　147
6．4．4　ServiceManagerProxy　151
6．4．5　IBinder和BpBinder　153
6．4．6　ProcessState和IPCThreadState　155
6．5　Binder客户端——Binder Client　185
6．6　Android接口描述语言——AIDL　190
6．7　匿名Binder Server　202
第7章　Android启动过程简析　205
7．1　第一个系统进程(init)　205
7．1．1　init．rc语法　205
7．1．2　init．rc实例分析　208
7．2　系统关键服务的启动简析　209
7．2．1　Android的“DNS服务器”——ServiceManager　209
7．2．2　“孕育”新的线程和进程——Zygote　209
7．2．3　Android的“系统服务”——SystemServer　211
第8章　管理Activity和组件运行状态的系统进程——Activity ManagerService (AMS)　213
8．1　AMS功能概述　213
8．2　管理当前系统中Activity状态——Activity Stack　215
8．3　startActivity流程　217
8．4　完成同一任务的“集合”——Activity Task　224
8．4．1　“后进先出”——Last In，First Out　225
8．4．2　管理Activity Task　226
第9章　GUI系统之SurfaceFlinger　229
9．1　OpenGL ES与EGL　229
9．2　Android的硬件接口——HAL　231
9．3　Android终端显示设备的“化身”——Gralloc与Framebuffer　233
9．4　Android中的本地窗口　237
9．4．1　FramebufferNativeWindow　239
9．4．2　应用程序端的本地窗口——Surface　245
9．5　BufferQueue详解　249
9．5．1　BufferQueue的内部原理　249
9．5．2　BufferQueue中的缓冲区分配　252
9．5．3　应用程序的典型绘图流程　258
9．5．4　应用程序与BufferQueue的关系　263
9．6　SurfaceFlinger　267
9．6．1　“黄油计划”——Project Butter　267
9．6．2　SurfaceFlinger的启动　271
9．6．3　接口的服务端——Client　275
9．7　VSync的产生和处理　279
9．7．1　VSync信号的产生和分发　279
9．7．2　VSync信号的处理　285
9．7．3　handleMessageTransaction　287
9．7．4　“界面已经过时/无效，需要重新绘制”——handleMessageInvalidate　291
9．7．5　合成前的准备工作——preComposition　293
9．7．6　可见区域——rebuildLayerStacks　295
9．7．7　为“Composition”搭建环境——setUpHWComposer　299
9．7．8　doDebugFlashRegions　301
9．7．9　doComposition　302
第10章　GUI系统之“窗口管理员”——WMS　309
10．1　“窗口管理员”——WMS综述　310
10．1．1　WMS的启动　312
10．1．2　WMS的基础功能　312
10．1．3　WMS的工作方式　313
10．1．4　WMS，AMS与Activity间的联系　314
10．2　窗口属性　316
10．2．1　窗口类型与层级　316
10．2．2　窗口策略(Window Policy)　320
10．2．3　窗口属性(LayoutParams)　322
10．3　窗口的添加过程　324
10．3．1　系统窗口的添加过程　324
10．3．2　Activity窗口的添加过程　333
10．3．3　窗口添加实例　337
10．4　Surface管理　340
10．4．1　Surface申请流程(relayout)　341
10．4．2　Surface的跨进程传递　344
10．4．3　Surface的业务操作　347
10．5　performLayoutAndPlaceSurfacesLockedInner　347
10．6　窗口大小的计算过程　349
10．7　启动窗口的添加与销毁　358
10．7．1　启动窗口的添加　358
10．7．2　启动窗口的销毁　362
10．8　窗口动画　363
10．8．1　窗口动画类型　364
10．8．2　动画流程跟踪——WindowStateAnimator　365
10．8．3　AppWindowAnimator　368
10．8．4　动画的执行过程　370
第11章　让你的界面炫彩起来的GUI系统之View体系　377
11．1　应用程序中的View框架　377
11．2　Activity中View Tree的创建过程　380
11．3　在WMS中注册窗口　386
11．4　ViewRoot的基本工作方式　388
11．5　View Tree的遍历时机　389
11．6　View Tree的遍历流程　393
11．7　View和ViewGroup属性　402
11．7．1　View的基本属性　402
11．7．2　ViewGroup的属性　408
11．7．3　View，ViewGroup和ViewParent　408
11．7．4　Callback接口　408
11．8　“作画“工具集——Canvas　411
11．8．1　“绘制UI”——Skia　412
11．8．2　数据中介——Surface．lockCanvas　413
11．8．3　解锁并提交结果——unlockCanvasAndPost　417
11．9　draw和onDraw　417
11．10　View中的消息传递　423
11．10．1　View中TouchEvent的投递流程　423
11．10．2　ViewGoup中TouchEvent的投递流程　427
11．11　View动画　430
第12章　“问渠哪得清如许，为有源头活水来”——InputManagerService与输入事件　436
12．1　事件的分类　436
12．2　事件的投递流程　439
12．2．1　InputManagerService　440
12．2．2　InputReaderThread　441
12．2．3　InputDispatcherThread　441
12．2．4　ViewRootImpl对事件的派发　445
第13章　应用不再同质化——音频系统　447
13．1　音频基础　448
13．1．1　声波　448
13．1．2　音频的录制、存储与回放　448
13．1．3　音频采样　449
13．1．4　Nyquist–Shannon采样定律　451
13．1．5　声道和立体声　451
13．1．6　声音定级——Weber–Fechner law　452
13．1．7　音频文件格式　453
13．2　音频框架　454
13．2．1　Linux中的音频框架　454
13．2．2　TinyAlsa　456
13．2．3　Android系统中的音频框架　457
13．3　音频系统的核心——AudioFlinger　459
13．3．1　AudioFlinger服务的启动和运行　460
13．3．2　AudioFlinger对音频设备的管理　461
13．3．3　PlaybackThread的循环主体　468
13．3．4　AudioMixer　473
13．4　策略的制定者——AudioPolicyService　475
13．4．1　AudioPolicyService概述　475
13．4．2　AudioPolicyService的启动过程　477
13．4．3　AudioPolicyService与音频设备　480
13．5　音频流的回放——AudioTrack　482
13．5．1　AudioTrack应用实例　482
13．5．2　AudioPolicyService的路由实现　489
13．6　音频数据流　494
13．6．1　AudioTrack中的音频流　495
13．6．2　AudioTrack和AudioFlinger间的数据交互　498
13．6．3　AudioMixer中的音频流　504
13．7　音量控制　506
13．8　音频系统的上层建筑　510
13．8．1　从功能入手　510
13．8．2　MediaPlayer　511
13．8．3　MediaRecorder　514
13．8．4　一个典型的多媒体录制程序　517
13．8．5　MediaRecorder源码解析　518
13．8．6　MediaPlayerService简析　520
13．9　Android支持的媒体格式　523
13．9．1　音频格式　523
13．9．2　视频格式　523
13．9．3　图片格式　524
13．9．4　网络流媒体　524
13．10　ID3信息简述　525
13．11　Android多媒体文件管理　528
13．11．1　MediaStore　529
13．11．2　多媒体文件信息的存储“仓库”——MediaProvider　530
13．11．3　多媒体文件管理中的“生产者”——MediaScanner　533
第3篇　应用原理篇
第14章　Intent的匹配规则　538
14．1　Intent属性　538
14．2　Intent的匹配规则　540
14．3　Intent匹配源码简析　546
第15章　APK应用程序的资源适配　551
15．1　资源类型　552
15．1．1　状态颜色资源　553
15．1．2　图形资源　554
15．1．3　布局资源　555
15．1．4　菜单资源　556
15．1．5　字符串资源　556
15．1．6　样式资源　557
15．1．7　其他资源　558
15．1．8　属性资源　558
15．2　提供可选资源　561
15．3　最佳资源的匹配流程　565
15．4　屏幕适配　567
15．4．1　屏幕适配的重要参数　567
15．4．2　如何适配多屏幕　569
第16章　Android字符编码格式　572
16．1　字符编码格式背景　572
16．2　ISO/IEC 8859　573
16．3　ISO/IEC 10646　573
16．4　Unicode　574
16．5　String类型　577
16．5．1　构建String　578
16．5．2　String对多种编码的兼容　579
第17章　Android和OpenGL ES　583
17．1　3D图形学基础　584
17．1．1　计算机3D图形　584
17．1．2　图形管线　585
17．2　Android中的OpenGL ES简介　587
17．3　图形渲染API—EGL　588
17．3．1　EGL与OpenGL ES　588
17．3．2　egl．cfg　588
17．3．3　EGL接口解析　590
17．3．4　EGL实例　593
17．4　简化OpenGL ES开发——GLSurfaceView　593
第18章　“系统的UI”——SystemUI　601
18．1　SystemUI的组成元素　601
18．2　SystemUI的实现　603
18．3　Android壁纸资源——WallpaperService　610
18．3．1　WallPaperManagerService　611
18．3．2　ImageWallpaper　613
第19章　Android常用的工具“小插件”——Widget机制　616
19．1　“功能的提供者”——AppWidgetProvider　616
19．2　AppWidgetHost　618
第20章　Android应用程序的编译和打包　624
20．1　“另辟蹊径”采用第三方工具——Ant　624
20．2　通过命令行编译和打包APK　625
20．3　APK编译过程详解　626
20．4　信息安全基础概述　628
20．5　应用程序签名　633
20．6　应用程序签名源码简析　636
第4篇　Android系统工具
第21章　软件版本管理　642
21．1　版本管理简述　642
21．2　Git的安装　643
21．2．1　Linux环境下安装Git　643
21．2．2　Windows环境下安装Git　644
21．3　Git的使用　644
21．3．1　基础配置　644
21．3．2　新建仓库　646
21．3．3　文件状态　647
21．3．4　忽略某些文件　649
21．3．5　提交更新　649
21．3．6　其他命令　650
21．4　Git原理简析　650
21．4．1　分布式版本系统的特点　651
21．4．2　安全散列算法——SHA-1　652
21．4．3　四个重要对象　653
21．4．4　三个区域　657
21．4．5　分支的概念与实例　658
第22章　系统调试辅助工具　662
22．1　万能模拟器——Emulator　662
22．1．1　QEMU　662
22．1．2　Android工程中的QEMU　667
22．1．3　模拟器控制台(Emulator Console)　670
22．1．4　实例：为Android模拟器添加串口功能　672
22．2　此Android非彼Android　674
22．3　快速建立与模拟器或真机的通信渠道——ADB　676
22．3．1　ADB的使用方法　676
22．3．2　ADB的组成元素　678
22．3．3　ADB源代码解析　679
22．3．4　ADB Protocol　684
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入理解Android内核设计思想
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>疯狂Android讲义
第1章  Android应用与开发环境	1
1.1  Android的发展和历史	2
1.1.1  Android的发展和简介	2
1.1.2  Android平台架构及特性	3
1.2  搭建Android开发环境	5
1.2.1  下载和安装Android SDK	5
1.2.2  安装运行、调试环境	7
1.2.3  安装Eclipse和ADT插件	10
1.3  Android常用开发工具的用法	13
1.3.1  在命令行创建、删除和浏览AVD	13
1.3.2  使用Android模拟器（Emulator）	14
1.3.3  使用DDMS进行调试	15
1.3.4  Android Debug Bridge（ADB）的用法	16
1.3.5  使用DX编译Android应用	18
1.3.6  使用Android Asset Packaging Tool（AAPT）打包资源	18
1.3.7  使用mksdcard管理虚拟SD卡	18
1.4  开始第一个Android应用	19
1.4.1  使用Eclipse开发第一个Android应用	19
1.4.2  通过ADT运行Android应用	23
1.5  Android应用结构分析	23
1.5.1  创建一个Android应用	24
1.5.2  自动生成的R.java	26
1.5.3  res目录说明	27
1.5.4  Android应用的清单文件：AndroidManifest.xml	28
1.5.5  应用程序权限说明	29
1.6  Android应用的基本组件介绍	30
1.6.1  Activity和View	30
1.6.2  Service	31
1.6.3  BroadcastReceiver	31
1.6.4  ContentProvider	32
1.6.5  Intent和IntentFilter	32
1.7  签名Android应用程序	33
1.7.1  在Eclipse中对Android应用签名	34
1.7.2  使用命令对APK包签名	35
1.8  本章小结	37
第2章  Android应用的界面编程	38
2.1  界面编程与视图（View）组件	39
2.1.1  视图组件与容器组件	39
2.1.2  使用XML布局文件控制UI界面	44
2.1.3  在代码中控制UI界面	45
2.1.4  使用XML布局文件和Java代码混合控制UI界面	46
2.1.5  开发自定义View	47
2.2  第1组UI组件：布局管理器	50
2.2.1  线性布局	50
2.2.2  表格布局	53
2.2.3  帧布局	56
2.2.4  相对布局	59
2.2.5  Android 4.0新增的网格布局	61
2.2.6  绝对布局	63
2.3  第2组UI组件：TextView及其子类	65
2.3.1  文本框（TextView）与编辑框（EditText）的功能和用法	65
2.3.2  EditText的功能与用法	72
2.3.3  按钮（Button）组件的功能和用法	74
2.3.4  使用9Patch图片作为按钮背景	76
2.3.5  单选按钮（RadioButton）与复选框（CheckBox）的功能与用法	77
2.3.6  状态开关按钮（ToggleButton）与开关（Switch）的功能与用法	79
2.3.7  时钟（AnalogClock和DigitalClock）的功能与用法	81
2.3.8  计时器（Chronometer）	83
2.4  第3组UI组件：ImageView及其子类	84
2.5  第4组UI组件：AdapterView及子类	91
2.5.1  列表视图（ListView）和ListActivity	91
2.5.2  Adapter接口及实现类	93
2.5.3  自动完成文本框（AutoCompleteTextView）的功能和用法	102
2.5.4  网格视图（GridView）功能和用法	104
2.5.5  可展开的列表组件（ExpandableListView）	107
2.5.6  Spinner的功能和用法	110
2.5.7  画廊视图（Gallery）的功能和用法	112
2.5.8  AdapterViewFlipper的功能与用法	114
2.5.9  StackView的功能与用法	117
2.6  第5组UI组件：ProgressBar及其子类	119
2.6.1  进度条（ProgressBar）的功能与用法	119
2.6.2  拖动条（SeekBar）的功能和用法	123
2.6.3  星级评分条（RatingBar）的功能和用法	125
2.7  第6组UI组件：ViewAnimator及其子类	126
2.7.1  ViewSwitcher的功能与用法	127
2.7.2  图像切换器（ImageSwitcher）的功能与用法	132
2.7.3  文本切换器（TextSwitcher）的功能与用法	134
2.7.4  ViewFlipper的功能与用法	136
2.8  各种杂项组件	138
2.8.1  使用Toast显示提示信息框	138
2.8.2  日历视图（CalendarView）组件的功能和用法	140
2.8.3  日期、时间选择器（DatePicker和TimePicker）的功能和用法	141
2.8.4  数值选择器（NumberPicker）的功能与用法	144
2.8.5  搜索框（SearchView）的功能与用法	146
2.8.6  选项卡（TabHost）的功能和用法	148
2.8.7  滚动视图（ScrollView）的功能和用法	150
2.8.8  Notification的功能与用法	151
2.9  对话框	154
2.9.1  使用AlertDialog创建对话框	154
2.9.2  对话框风格的窗口	161
2.9.3  使用PopupWindow	161
2.9.4  使用DatePickerDialog、TimePickerDialog	163
2.9.5  使用ProgressDialog创建进度对话框	164
2.10  菜单	167
2.10.1  选项菜单和子菜单（SubMenu）	167
2.10.2  使用监听器来监听菜单事件	171
2.10.3  创建复选菜单项和单选菜单项	171
2.10.4  设置与菜单项关联的Activity	171
2.10.5  上下文菜单	172
2.10.6  使用XML文件定义菜单	174
2.10.7  使用PopupMenu创建弹出式菜单	178
2.11  使用活动条（ActionBar）	179
2.11.1  启用ActionBar	180
2.11.2  使用ActionBar显示选项菜单	181
2.11.3  启用程序图标导航	183
2.11.4  添加Action View	184
2.11.5  使用ActionBar实现Tab导航	185
2.11.6  使用ActionBar实现下拉式导航	191
2.12  本章小结	192
第3章  Android的事件处理	193
3.1  Android事件处理概述	194
3.2  基于监听的事件处理	194
3.2.1  监听的处理模型	195
3.2.2  事件和事件监听器	197
3.2.3  内部类作为事件监听器类	200
3.2.4  外部类作为事件监听器类	200
3.2.5  Activity本身作为事件监听器	202
3.2.6  匿名内部类作为事件监听器类	203
3.2.7  直接绑定到标签	204
3.3  基于回调的事件处理	205
3.3.1  回调机制与监听机制	205
3.3.2  基于回调的事件传播	206
3.3.3  重写onTouchEvent方法响应触摸屏事件	208
3.4  响应的系统设置的事件	210
3.4.1  Configuration类简介	210
3.4.2  重写onConfigurationChanged响应系统设置更改	212
3.5  Handler消息传递机制	214
3.5.1  Handler类简介	214
3.5.2  Handler、Loop、MessageQueue的工作原理	216
3.6  异步任务（AsyncTask）	220
3.7  本章小结	223
第4章  深入理解Activity与Fragment	224
4.1  建立、配置和使用Activity	225
4.1.1  Activity	225
4.1.2  配置Activity	233
4.1.3  启动、关闭Activity	235
4.1.4  使用Bundle在Activity之间交换数据	237
4.1.5  启动其他Activity并返回结果	241
4.2  Activity的回调机制	245
4.3  Activity的生命周期与加载模式	246
4.3.1  Activity的生命周期演示	246
4.3.2  Activity与Servlet的相似性与区别	250
4.3.3  Activity的4种加载模式	251
4.4  Fragment详解	257
4.4.1  Fragment概述及其设计哲学	257
4.4.2  创建Fragment	258
4.4.3  Fragment与Activity通信	262
4.4.4  Fragment管理与Fragment事务	264
4.5  Fragment的生命周期	268
4.6  本章小结	272
第5章  使用Intent和IntentFilter进行通信	273
5.1  Intent对象详解	274
5.1.1  使用Intent启动系统组件	274
5.2  Intent的属性及intent-filter配置	275
5.2.1  Component属性	275
5.2.2  Action、Category属性与intent-filter配置	277
5.2.3  指定Action、Category调用系统Activity	282
5.2.4  Data、Type属性与intent-filter配置	287
5.2.5  Extra属性	295
5.2.6  Flag属性	295
5.3  使用Intent创建Tab页面	296
5.4  本章小结	297
第6章  Android应用的资源	298
6.1  资源的类型及存储方式	299
6.1.1  资源的类型以及存储方式	299
6.1.2  使用资源	301
6.2  使用字符串、颜色、尺寸资源	302
6.2.1  颜色值的定义	303
6.2.2  定义字符串、颜色、尺寸资源文件	303
6.2.3  使用字符串、颜色、尺寸资源	305
6.3  数组（Array）资源	307
6.4  使用（Drawable）资源	310
6.4.1  图片资源	310
6.4.2  StateListDrawable资源	311
6.4.3  LayerDrawable资源	312
6.4.4  ShapeDrawable资源	314
6.4.5  ClipDrawable资源	316
6.4.6  AnimationDrawable资源	318
6.5  属性动画（Property Animation）资源	320
6.6  使用原始XML资源	322
6.6.1  定义原始XML资源	322
6.6.2  使用原始XML文件	323
6.7  使用布局（Layout）资源	325
6.8  使用菜单（Menu）资源	325
6.9  样式（Style）和主题（Theme）资源	326
6.9.1  样式资源	326
6.9.2  主题资源	327
6.10  属性（Attribute）资源	329
6.11  使用原始资源	332
6.12  国际化和资源自适应	333
6.12.1  Java国际化的思路	334
6.12.2  Java支持的语言和国家	334
6.12.3  完成程序国际化	335
6.12.4  为Android应用提供国际化资源	337
6.12.5  国际化Android应用	338
6.13  自适应不同屏幕的资源	340
6.14  本章小结	343
第7章  图形与图像处理	344
7.1  使用简单图片	345
7.1.1  使用Drawable对象	345
7.1.2  Bitmap和BitmapFactory	345
7.2  绘图	348
7.2.1  Android绘图基础：Canvas、Paint等	348
7.2.2  Path类	352
7.2.3  绘制游戏动画	355
7.3  图形特效处理	362
7.3.1  使用Matrix控制变换	362
7.3.2  使用drawBitmapMesh扭曲图像	366
7.3.3  使用Shader填充图形	368
7.4  逐帧（Frame）动画	370
7.4.1  AnimationDrawable与逐帧动画	371
7.5  补间（Tween）动画	374
7.5.1  Tween动画与Interpolator	374
7.5.2  位置、大小、旋转度、透明度改变的补间动画	376
7.5.3  自定义补间动画	380
7.6  属性动画	383
7.6.1  属性动画的API	383
7.6.2  使用属性动画	385
7.7  使用SurfaceView实现动画	393
7.7.1  SurfaceView的绘图机制	394
7.8  本章小结	398
第8章  Android数据存储与IO	399
8.1  使用SharedPreferences	400
8.1.1  SharedPreferences与Editor简介	400
8.1.2  SharedPreferences的存储位置和格式	401
8.1.3  读、写其他应用SharedPreferences	403
8.2  File存储	404
8.2.1  openFileOutput和openFileInput	405
8.2.2  读写SD卡上的文件	407
8.3  SQLite数据库	414
8.3.1  SQLiteDatabase简介	414
8.3.2  创建数据库和表	415
8.3.3  使用SQL语句操作SQLite数据库	416
8.3.4  使用sqlite3工具	418
8.3.5  使用特定方法操作SQLite数据库	419
8.3.6  事务	422
8.3.7  SQLiteOpenHelper类	422
8.4  手势（Gesture）	427
8.4.1  手势检测	427
8.4.2  增加手势	434
8.4.3  识别用户的手势	437
8.5  自动朗读（TTS）	439
8.6  本章小结	441
第9章  使用ContentProvider实现数据共享	442
9.1  数据共享标准：ContentProvider简介	443
9.1.1  ContentProvider简介	443
9.1.2  Uri简介	444
9.1.3  使用ContentResolver操作数据	445
9.2  开发ContentProvider	446
9.2.1  ContentProvider与ContentResolver的关系	446
9.2.2  开发ContentProvider	447
9.2.3  配置ContentProvider	448
9.2.4  使用ContentResolver调用方法	449
9.2.5  创建ContentProvider的说明	451
9.3  操作系统的ContentProvider	457
9.3.1  使用ContentProvider管理联系人	457
9.3.2  使用ContentProvider管理多媒体内容	463
9.4  监听ContentProvider的数据改变	466
9.4.1  ContentObserver简介	466
9.5  本章小结	468
第10章  Service与BroadcastReceiver	469
10.1  Service简介	470
10.1.1  创建、配置Service	470
10.1.2  启动和停止Service	472
10.1.3  绑定本地Service并与之通信	473
10.1.4  Service的生命周期	477
10.1.5  使用IntentService	478
10.2  跨进程调用Service（AIDL Service）	481
10.2.1  AIDL Service简介	482
10.2.2  创建AIDL文件	482
10.2.3  将接口暴露给客户端	483
10.2.4  客户端访问AIDLService	484
10.3  电话管理器（TelephonyManager）	491
10.4  短信管理器（SmsManager）	498
10.5  音频管理器（AudioManager）	502
10.5.1  AudioManager简介	502
10.6  振动器（Vibrator）	504
10.6.1  Vibrator简介	504
10.6.2  使用Vibrator控制手机振动	505
10.7  手机闹钟服务（AlarmManager）	505
10.7.1  AlarmManager简介	505
10.7.2  设置闹钟	506
10.8  接收广播消息	510
10.8.1  BroadcastReceiver简介	510
10.8.2  发送广播	512
10.8.3  有序广播	513
10.9  接收系统广播消息	520
10.10  本章小结	523
第11章  多媒体应用开发	524
11.1  音频和视频的播放	525
11.1.1  使用MediaPlayer播放音频	525
11.1.2  音乐特效控制	528
11.1.3  使用SoundPool播放音效	536
11.1.4  使用VideoView播放视频	539
11.1.5  使用MediaPlayer和SurfaceView播放视频	540
11.2  使用MediaRecorder录制音频	543
11.3  控制摄像头拍照	546
11.3.1  通过Camera进行拍照	546
11.3.2  录制视频短片	551
11.4  本章小结	555
第12章  OpenGL与3D应用开发	556
12.1  3D图像与3D开发的基本知识	557
12.2  OpenGL和OpenGL ES简介	558
12.3  绘制2D图形	559
12.3.1  在Android应用中使用OpenGL ES	559
12.3.2  绘制平面上的多边形	562
12.3.3  旋转	567
12.4  绘制3D图形	569
12.4.1  构建3D图形	569
12.4.2  应用纹理贴图	573
12.5  本章小结	578
第13章  Android网络应用	579
13.1  基于TCP协议的网络通信	580
13.1.1  TCP协议基础	580
13.1.2  使用ServerSocket创建TCP服务器端	581
13.1.3  使用Socket进行通信	582
13.1.4  加入多线程	586
13.2  使用URL访问网络资源	592
13.2.1  使用URL读取网络资源	593
13.2.2  使用URLConnection提交请求	594
13.3  使用HTTP访问网络	599
13.3.1  使用HttpURLConnection	600
13.3.2  使用Apache HttpClient	605
13.4  使用WebView视图显示网页	609
13.4.1  使用WebView浏览网页	610
13.4.2  使用WebView加载HTML代码	611
13.4.3  使用WebView中的JavaScript调用Android方法	612
13.5  使用Web Service进行网络编程	615
13.5.1  Web Service平台概述	615
13.5.2  使用Android应用调用Web Service	617
13.6  本章小结	628
第14章  管理Android手机桌面	629
14.1  管理手机桌面	630
14.1.1  删除桌面组件	630
14.1.2  添加桌面组件	630
14.2  改变手机壁纸	631
14.2.1  开发动态壁纸（Live Wallpapers）	631
14.3  通过程序添加快捷方式	636
14.4  管理桌面控件	638
14.4.1  开发桌面控件	638
14.4.2  Android 4.0新增的显示数据集的桌面控件	642
14.5  本章小结	647
第15章  传感器应用开发	648
15.1  利用Android的传感器	649
15.1.1  开发传感器应用	649
15.2  Android的常用传感器	651
15.2.1  方向传感器Orientation	651
15.2.2  磁场传感器Magnetic Field	652
15.2.3  温度传感器Temperature	652
15.2.4  光传感器Light	652
15.2.5  压力传感器Pressure	653
15.3  传感器应用案例	655
15.4  本章小结	660
第16章  GPS应用开发	661
16.1  支持GPS的核心API	662
16.2  获取LocationProvider	664
16.2.1  获取所有可用的LocationProvider	664
16.2.2  通过名称获得指定LocationProvider	665
16.2.3  根据Criteria获得LocationProvider	665
16.3  获取定位信息	666
16.3.1  通过模拟器发送GPS信息	666
16.3.2  获取定位数据	667
16.4  临近警告	668
16.5  本章小结	670
第17章  使用Google Map服务	671
17.1. 	 调用Google Map的准备	672
17.1.1  获取Map API Key	672
17.1.2  创建支持Google Map API的AVD	674
17.2  根据GPS信息在地图上定位	676
17.3  GPS导航	681
17.4  根据地址定位	683
17.4.1  地址解析与反向地址解析	683
17.4.2  根据地址定位	688
17.5  本章小结	689
第18章  疯狂连连看	690
18.1  连连看游戏简介	691
18.2  开发游戏界面	691
18.2.1  开发界面布局	692
18.2.2  开发游戏界面组件	693
18.2.3  处理方块之间的连接线	696
18.3  连连看的状态数据模型	697
18.3.1  定义数据模型	697
18.3.2  初始化游戏状态数据	698
18.4  加载界面的图片	700
18.5  实现游戏Activity	703
18.6  实现游戏逻辑	708
18.6.1  定义GameService组件接口	708
18.6.2  实现GameService组件	709
18.6.3  获取触碰点的方块	710
18.6.4  判断两个方块是否可以相连	711
18.6.5  定义获取通道的工具方法	713
18.6.6  没有转折点的横向连接	715
18.6.7  没有转折点的纵向连接	715
18.6.8  一个转折点的连接	716
18.6.9  两个转折点的连接	718
18.6.10  找出最短距离	724
18.7  本章小结	726
第19章  电子拍卖系统	727
19.1  系统功能简介和架构设计	728
19.1.1  系统功能简介	728
19.1.2  系统架构设计	729
19.2  JSON简介	730
19.2.1  使用JSON语法创建对象	731
19.2.2  使用JSON语法创建数组	732
19.2.3  Java的JSON支持	733
19.3  发送请求的工具类	734
19.4  用户登录	735
19.4.1  处理登录的Servlet	736
19.4.2  用户登录	737
19.5  查看流拍物品	745
19.5.1  查看流拍物品的Servlet	745
19.5.2  查看流拍物品	746
19.6  管理物品种类	751
19.6.1  浏览物品种类的Servlet	752
19.6.2  查看物品种类	752
19.6.3  添加种类的Servlet	757
19.6.4  添加物品种类	758
19.7  管理拍卖物品	760
19.7.1  查看自己的拍卖物品的Servlet	760
19.7.2  查看自己的拍卖物品	761
19.7.3  添加拍卖物品的Servlet	764
19.7.4  添加拍卖物品	765
19.8  参与竞拍	771
19.8.1  选择物品种类	771
19.8.2  根据种类浏览物品的Servlet	772
19.8.3  根据种类浏览物品	773
19.8.4  参与竞价的Servlet	775
19.8.5  参与竞价	776
19.9  权限控制	781
19.10  本章小结	782
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>疯狂Android讲义
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android 源码设计模式解析与实战
第1章 走向灵活软件之路——面向对象的六大原则 1
1.1 优化代码的第一步——单一职责原则 1
1.2 让程序更稳定、更灵活——开闭原则 5
1.3 构建扩展性更好的系统——里氏替换原则 12
1.4 让项目拥有变化的能力——依赖倒置原则 13
1.5 系统有更高的灵活性——接口隔离原则 16
1.6 更好的可扩展性——迪米特原则 18
1.7 总结 22
第2章 应用最广的模式——单例模式 23
2.1 单例模式介绍 23
2.2 单例模式的定义 23
2.3 单例模式的使用场景 23
2.4 单例模式UML类图 23
2.5 单例模式的简单示例 24
2.6 单例模式的其他实现方式 26
2.6.1 懒汉模式 26
2.6.2 Double CheckLock ( DCL )
实现单例 26
2.6.3 静态内部类单例模式 27
2.6.4 枚举单例 28
2.6.5 使用容器实现单例模式 28
2.7 Android源码中的单例模式 29
2.8 无名英雄——深入理解LayoutInflater 33
2.9 运用单例模式 40
2.10 总结 42
第3章 自由扩展你的项目——Builder模式 43
3.1 Builder模式介绍 43
3.2 Builder模式的定义 43
3.3 Builder模式的使用场景 43
3.4 Builder模式的UML类图 43
3.5 Builder模式的简单实现 44
3.6 Android源码中的Builder模式实现 46
3.7 深入了解WindowManager 52
3.8 Builder模式实战 59
3.9 总结 64
第4章 使程序运行更高效——原型模式 66
4.1 原型模式介绍 66
4.2 原型模式的定义 66
4.3 原型模式的使用场景 66
4.4 原型模式的UML类图 66
4.5 原型模式的简单实现 67
4.6 浅拷贝和深拷贝 69
4.7 Android源码中的原型模式实现 72
4.8 Intent的查找与匹配 74
4.8.1 App信息表的构建 74
4.8.2 精确匹配 80
4.9 原型模式实战 83
4.10 总结 85
第5章 应用最广泛的模式——工厂方法模式 87
5.1 工厂方法模式介绍 87
5.2 工厂方法模式的定义 87
5.3 工厂方法模式的使用场景 87
5.4 工厂方法模式的UML类图 87
5.5 模式的简单实现 90
5.6 Android源码中的工厂方法模式实现 93
5.7 关于onCreate方法 95
5.8 工厂方法模式实战 102
5.9 总结 105
第6章 创建型设计模式——抽象工厂模式 106
6.1 抽象工厂模式介绍 106
6.2 抽象工厂模式的定义 106
6.3 抽象工厂模式的使用场景 106
6.4 抽象工厂模式的UML类图 106
6.5 抽象工厂方法模式的简单实现 109
6.6 Android源码中的抽象工厂方法模式实现 112
6.7 总结 116
第7章 时势造英雄——策略模式 117
7.1 策略模式介绍 117
7.2 策略模式的定义 117
7.3 策略模式的使用场景 117
7.4 策略模式的UML类图 118
7.5 策略模式的简单实现 118
7.6 Android源码中的策略模式实现 123
7.6.1 时间插值器 123
7.6.2 动画中的时间插值器 124
7.7 深入属性动画 128
7.7.1 属性动画体系的总体设计 128
7.7.2 属性动画的核心类介绍 128
7.7.3 基本使用 129
7.7.4 流程图 130
7.7.5 详细设计 131
7.7.6 核心原理分析 131
7.8 策略模式实战应用 142
7.9 总结 144
第8章 随遇而安——状态模式 145
8.1 状态模式介绍 145
8.2 状态模式的定义 145
8.3 状态模式的使用场景 145
8.4 状态模式的UML类图 145
8.5 状态模式的简单示例 146
8.6 Wi-Fi管理中的状态模式 150
8.7 状态模式实战 159
8.8 总结 164
第9章 使编程更有灵活性——责任链模式 165
9.1 责任链模式介绍 165
9.2 责任链模式的定义 165
9.3 责任链模式的使用场景 165
9.4 责任链模式的UML类图 165
9.5 责任链模式的简单实现 170
9.6 Android源码中的责任链模式实现 173
9.7 责任链模式实战 178
9.8 总结 181
第10章 化繁为简的翻译机——解释器模式 182
10.1 解释器模式介绍 182
10.2 解释器模式的定义 182
10.3 解释器模式的使用场景 183
10.4 解释器模式的UML类图 184
10.5 解释器模式的简单实现 185
10.6 Android源码中的解释器模式实现 189
10.7 关于PackageManagerService 195
10.8 总结 203
第11章 让程序畅通执行——命令模式 204
11.1 命令模式介绍 204
11.2 命令模式的定义 204
11.3 命令模式的使用场景 204
11.4 命令模式的UML类图 204
11.5 命令模式的简单实现 207
11.6 Android源码中的命令模式实现 211
11.7 Android事件输入系统介绍 214
11.8 命令模式实战 216
11.9 总结 223
第12章 解决、解耦的钥匙——观察者模式 224
12.1 观察者模式介绍 224
12.2 观察者模式的定义 224
12.3 观察者模式的使用场景 224
12.4 观察者模式的UML类图 224
12.5 观察者模式的简单实现 225
12.6 Android源码分析 227
12.7 观察者模式的深入拓展 230
12.8 实战 238
12.9 总结 245
第13章 编程中的“后悔药”——备忘录模式 247
13.1 备忘录模式介绍 247
13.2 备忘录模式的定义 247
13.3 备忘录模式的使用场景 247
13.4 备忘录模式的UML类图 247
13.5 备忘录模式的简单示例 248
13.6 Android源码中的备忘录模式 250
13.7 深度拓展 257
13.7.1 onSaveInstanceState调用的时机 257
13.7.2 使用V4包存储状态的bug 257
13.8 实战 260
13.9 总结 267
第14章 解决问题的“第三者”——迭代器模式 268
14.1 迭代器模式介绍 268
14.2 迭代器模式的定义 268
14.3 迭代器模式的使用场景 268
14.4 迭代器模式的UML类图 268
14.5 模式的简单实现 271
14.6 Android源码中的模式实现 275
14.7 总结 277
第15章 抓住问题核心——模板方法模式 278
15.1 模板方法模式介绍 278
15.2 模板方法模式的定义 278
15.3 模板方法模式的使用场景 278
15.4 模板方法模式的UML类图 278
15.5 模板方法模式的简单示例 279
15.6 Android源码中的模板方法模式 281
15.7 深度拓展 283
15.8 模板方法实战 296
15.9 总结 299
第16章 访问者模式 301
16.1 访问者模式介绍 301
16.2 访问者模式的定义 301
16.3 访问者模式的使用场景 301
16.4 访问者模式的UML类图 301
16.5 访问者模式的简单示例 302
16.6 Android源码中的模式 306
16.7 访问者模式实战 309
16.8 总结 316
第17章 “和事佬”——中介者模式 317
17.1 中介者模式介绍 317
17.2 中介者模式的定义 318
17.3 中介者模式的使用场景 318
17.4 中介者模式的UML类图 318
17.5 中介者模式的简单实现 320
17.6 Android源码中的中介者模式实现 324
17.7 中介者模式实战 326
17.8 总结 329
第18章 编程好帮手——代理模式 330
18.1 代理模式介绍 330
18.2 代理模式的定义 330
18.3 代理模式的使用场景 330
18.4 代理模式的UML类图 330
18.5 代理模式的简单实现 332
18.6 Android源码中的代理模式实现 336
18.7 Android中的Binder跨进程通信机制与AIDL 340
18.8 代理模式实战 351
18.9 总结 355
第19章 物以类聚——组合模式 356
19.1 组合模式介绍 356
19.2 组合模式的定义 357
19.3 组合模式的使用场景 357
19.4 组合模式的UML类图 357
19.5 组合模式的简单实现 363
19.6 Android源码中的模式实现 367
19.7 为什么ViewGroup有容器的功能 368
19.8 总结 370
第20章 得心应手的“粘合剂”——适配器模式 371
20.1 适配器模式介绍 371
20.2 适配器模式的定义 371
20.3 适配器模式的使用场景 371
20.4 适配器模式的UML类图 371
20.5 适配器模式应用的简单示例 372
20.5.1 类适配器模式 372
20.5.2 对象适配器模式 373
20.6 Android源码中的适配器模式 375
20.7 深度拓展 380
20.8 实战演示 393
20.9 总结 402
第21章 装饰模式 403
21.1 装饰模式介绍 403
21.2 装饰模式的定义 403
21.3 装饰模式的使用场景 403
21.4 装饰模式的UML类图 403
21.5 模式的简单实现 406
21.6 Android源码中的模式实现 408
21.7 Context与ContextImpl 410
21.8 模式实战 419
21.9 总结 419
第22章 对象共享，避免创建多对象——享元模式 420
22.1 享元模式介绍 420
22.2 享元模式定义 420
22.3 享元模式的使用场景 420
22.4 享元模式的UML类图 420
22.5 享元模式的简单示例 421
22.6 Android源码中的享元模式 424
22.7 深度拓展 429
22.7.1 深入了解Android的消息机制 429
22.7.2 子线程中创建Handler为何会抛出异常 438
22.8 总结 439
第23章 统一编程接口——外观模式 440
23.1 外观模式介绍 440
23.2 外观模式定义 440
23.3 外观模式的使用场景 440
23.4 外观模式的UML类图 440
23.5 外观模式的简单示例 441
23.6 Android源码中的外观模式 443
23.7 深度拓展 448
23.7.1 Android资源的加载与匹配 448
23.7.2 动态加载框架的实现 455
23.8 外观模式实战 461
23.9 总结 464
第24章 连接两地的交通枢钮——桥接模式 465
24.1 桥接模式介绍 465
24.2 桥接模式的定义 465
24.3 桥接模式的使用场景 465
24.4 桥接模式的UML类图 465
24.5 桥接模式的简单实现 467
24.6 Android源码中的桥接模式实现 470
24.7 关于WindowManagerService 471
24.8 桥接模式实战 479
24.9 总结 482
第25章 MVC的介绍与实战 483
25.1 MVC的起源与历史 483
25.2 MVC在Android中的实现 484
25.3 总结 486
第26章 MVP应用架构模式 487
26.1 MVP模式介绍 487
26.2 MVP模式的三个角色 488
26.3 与MVC、MVVM的区别 488
26.4 MVP的实现 489
26.5 MVP与Activity、Fragment的生命周期 493
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android 源码设计模式解析与实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入理解Android：Wi-Fi、NFC和GPS卷
前　言
第1章　准备工作  1
1.1?Android系统架构  2
1.2　工具使用  2
1.2.1　Source Insight的使用  3
1.2.2　Eclipse的使用  3
1.2.3　BusyBox的使用  7
1.3?本书资源下载说明  8
第2章　深入理解Netd  9
2.1?概述  10
2.2?Netd工作流程  10
2.2.1?main函数分析  11
2.2.2?NetlinkManager分析  12
2.2.3?CommandListener分析  16
2.2.4?DnsProxyListener分析  18
2.2.5?MDnsSdListener分析  21
2.3?CommandListener中的命令  26
2.3.1?iptables、tc和ip命令  27
2.3.2?CommandListener构造函数和测试工具ndc  31
2.3.3?InterfaceCmd命令  33
2.3.4?IpFwd和FirewallCmd命令  40
2.3.5?ListTtysCmd和PppdCmd命令  43
2.3.6?BandwidthControlCmd和IdletimerControlCmd命令  45
2.3.7?NatCmd命令  47
2.3.8?TetherCmd和SoftapCmd命令  49
2.3.9?ResolverCmd命令  54
2.4?NetworkManagementService介绍  55
2.4.1?create函数详解  55
2.4.2?systemReady函数详解  57
2.5?本章总结和参考资料说明  58
2.5.1?本章总结  58
2.5.2?参考资料说明  58
第3章　Wi-Fi基础知识  62
3.1?概述  63
3.2?无线电频谱和802.11协议的发展历程  63
3.2.1?无线电频谱知识  63
3.2.2?IEEE 802.11发展历程  64
3.3?802.11无线网络技术  66
3.3.1?OSI基本参考模型及相关基本概念  66
3.3.2?802.11知识点导读  73
3.3.3?802.11组件  74
3.3.4?802.11 Service介绍  77
3.3.5?802.11 MAC服务和帧  82
3.3.6?802.11 MAC管理实体  98
3.3.7?无线网络安全技术知识点  105
3.4　Linux Wi-Fi编程API介绍  121
3.4.1　Linux Wireless Extensions介绍  122
3.4.2　nl80211介绍  125
3.5　本章总结和参考资料说明  135
3.5.1　本章总结  135
3.5.2　参考资料说明  136
第4章　深入理解wpa_supplicant  140
4.1　概述  142
4.2　初识wpa_supplicant  144
4.2.1　wpa_supplicant架构  144
4.2.2　wpa_supplicant编译配置  145
4.2.3　wpa_supplicant命令和控制API  146
4.2.4　git的使用  149
4.3　wpa_supplicant初始化流程  149
4.3.1　main函数分析  150
4.3.2　wpa_supplicant_init函数分析  153
4.3.3　wpa_supplicant_add_iface函数分析  158
4.3.4　wpa_supplicant_init_iface函数分析  164
4.4　EAP和EAPOL模块  191
4.4.1　EAP模块分析  191
4.4.2　EAPOL模块分析  202
4.5　wpa_supplicant连接无线网络分析  212
4.5.1　ADD_NETWORK命令处理  214
4.5.2　SET_NETWORK命令处理  216
4.5.3　ENABLE_NETWORK命令处理  218
4.6　本章总结和参考资料说明  264
4.6.1　本章总结  264
4.6.2　参考资料说明  264
第5章　深入理解WifiService  267
5.1　概述  268
5.2　WifiService的创建及初始化  268
5.2.1　HSM和AsyncChannel介绍  269
5.2.2　WifiService构造函数分析  276
5.2.3　WifiStateMachine介绍  277
5.3　加入无线网络分析  287
5.3.1　Settings操作Wi-Fi分析  288
5.3.2　WifiService操作Wi-Fi分析  295
5.4　WifiWatchdogStateMachine介绍  312
5.5　Captive Portal Check介绍  316
5.6　本章总结和参考资料说明  320
5.6.1　本章总结  320
5.6.2　参考资料说明  320
第6章　深入理解Wi-Fi Simple Configuration  321
6.1　概述  322
6.2　WSC基础知识  322
6.2.1　WSC应用场景  323
6.2.2　WSC核心组件及接口  325
6.3　Registration Protocol详解  326
6.3.1　WSC IE和Attribute介绍  328
6.3.2　802.11管理帧WSC IE设置  331
6.3.3　EAP-WSC介绍  335
6.4　WSC代码分析  343
6.4.1　Settings中的WSC处理  343
6.4.2　 WifiStateMachine的处理  345
6.4.3　wpa_supplicant中的WSC处理  347
6.4.4　EAP-WSC处理流程分析  356
6.5　本章总结和参考资料说明  370
6.5.1　本章总结  370
6.5.2　参考资料说明  370
第7章　深入理解Wi-Fi P2P  371
7.1　概述  372
7.2　P2P基础知识  372
7.2.1　P2P架构  372
7.2.2　P2P Discovery技术  374
7.2.3　P2P工作流程  389
7.3　WifiP2pSettings和WifiP2pService介绍  392
7.3.1　WifiP2pSettings工作流程  392
7.3.2　WifiP2pService工作流程  397
7.4　wpa_supplicant中的P2P  408
7.4.1　P2P模块初始化  409
7.4.2　P2P Device Discovery流程分析  416
7.4.3　Provision Discovery流程分析  426
7.4.4　GO Negotiation流程分析  433
7.5　本章总结和参考资料说明  441
7.5.1　本章总结  441
7.5.2　参考资料说明  441
第8章　深入理解NFC  443
8.1　概述  444
8.2　NFC基础知识  444
8.2.1　NFC概述  445
8.2.2　NFC R/W运行模式  448
8.2.3　NFC P2P运行模式  453
8.2.4　NFC CE运行模式  459
8.2.5　NCI原理  462
8.2.6　NFC相关规范  464
8.3　Android中的NFC  464
8.3.1　NFC应用示例  465
8.3.2　NFC系统模块  478
8.4　NFC HAL层讨论  498
8.5　本章总结和参考资料说明  500
8.5.1　本章总结  500
8.5.2　参考资料说明  500
第9章　深入理解GPS  503
9.1　概述  504
9.2　GPS基础知识  504
9.2.1　卫星导航基本原理  505
9.2.2　GPS系统组成及原理  513
9.2.3　OMA-SUPL协议  532
9.3　Android中的位置管理  536
9.3.1　LocationManager架构  536
9.3.2　LocationManager应用示例  538
9.3.3　LocationManager系统模块  541
9.4　本章总结和参考资料说明  570
9.4.1　本章总结  570
9.4.2　参考资料说明  570
附录  574
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入理解Android：Wi-Fi、NFC和GPS卷
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android框架揭秘
第1章 Android Framework概要
1.1 Android源代码组成
1.2 通过启动过程分析Android Framework
第2章 搭建Android开发环境
2.1 主机环境构成
2.1.1 安装VirtualBox
2.1.2 安装Ubuntu
2.2 搭建Android平台编译环境
2.2.1 编译工具
2.2.2 安装Repo
2.2.3 下载Android源代码
2.2.4 编译Android源代码
2.3 搭建Android SDK开发环境
2.3.1 下载、安装Eclipse
2.3.2 下载Android SDK starter
2.3.3 安装ADT插件
2.3.4 设置Android SDK路径
2.3.5 安装Android SDK
2.4 开发Android应用程序
2.5 应用程序Framework源码级别调试
2.5.1 加载应用程序Framework源
2.5.2 调试HelloWorld Framework（源码级）
2.6 小结
第3章 init进程
3.1 init进程运行过程
3.2 init进程源码分析
3.3 init.rc脚本文件分析与执行
3.3.1 动作列表（Action List）
3.3.2 服务列表（Service List）
3.3.3 init.rc文件分析函数
3.3.4 动作列表与服务列表的运行
3.4 创建设备节点文件
3.4.1 创建静态设备节点
3.4.2 动态设备感知
3.5 进程的终止与再启动
3.6 属性服务
3.6.1 属性初始化
3.6.2 属性变更请求处理
3.7 小结
第4章 JNI与NDK
4.1 Android与JNI
4.2 JNI的基本原理
4.2.1 在Java中调用C库函数
4.2.2 小结
4.3 调用JNI函数
4.3.1 调用JNI函数的示例程序结构
4.3.2 Java层代码（JniFuncMain.java）
4.3.3 分析JNI本地函数代码
4.3.4 编译及运行结果
4.3.5 在Android中的应用举例
4.4 在C程序中运行Java类
4.4.1 Invocation API应用示例
4.4.2 编译及运行
4.4.3 Invocation API在Android中的应用举例：Zygote进程
4.5 直接注册JNI本地函数
4.5.1 加载本地库时，注册JNI本地函数
4.5.2 Android中的应用举例
4.6 使用Android NDK开发
4.6.1 安装Android NDK
4.6.2 使用Android NDK开发步骤
4.6.3 小结
第5章 Zygote
5.1 Zygote是什么
5.2 由app_process运行ZygoteInit class
5.2.1 生成AppRuntime对象
5.2.2 调用AppRuntime对象
5.2.3 创建Dalvik虚拟机
5.2.4 运行ZygoteInit类
5.3 ZygoteInit类的功能
5.3.1 绑定/dev/socket/zygote套接字
5.3.2 加载应用程序Framework中的类与平台资源
5.3.3 运行SystemServer
5.3.4 运行新Android应用程序
第6章 Android服务概要
6.1 示例程序：理解Android服务的运行
6.2 Android服务的种类
6.3 Android应用程序服务
6.4 Android系统服务
6.5 运行系统服务
6.5.1 分析媒体服务器（Media Server）的运行代码
6.5.2 分析系统服务器（System Server）的运行代码
6.6 Android Service Framework、Binder Driver概要及相关术语
第7章 Android Binder IPC
7.1 Linux内存空间与Binder Driver
7.2 Android Binder Model
7.2.1 Binder IPC数据传递
7.2.2 Binder IPC数据流
7.2.3 Binder协议（Binder Protocol）
7.2.4 RPC代码与RPC数据
7.2.5 Binder寻址（Binder Addressing）
7.3 Android Binder Driver分析
7.3.1 从进程的角度看服务的使用
7.3.2 从Binder Driver角度看服务的使用
7.3.3 Binder Driver函数分析
7.4 Context Manager
7.5 小结
第8章 Android Service Framework
8.1 服务框架（Service Framework）
8.2 服务框架（Service Framework）的构成
8.2.1 各层构成元素的配置
8.2.2 各层构成元素间的相互作用
8.2.3 类的结构
8.3 运行机制
8.3.1 服务接口
8.3.2 服务
8.3.3 服务代理（Service Proxy）
8.3.4 Binder IPC处理
8.4 本地服务管理器（Native Service Manager）
8.4.1 Service Manager概要
8.4.2 Service Manager类
8.4.3 Service Manager的运行
8.5 编写本地服务
8.5.1 设计HelloWorld系统服务
8.5.2 HelloWorld服务接口
8.5.3 HelloWorld服务
8.5.4 HelloWorld服务代理
8.5.5 运行HelloWorld服务
8.6 小结
第9章 本地系统服务（Native System Service）分析
9.1 相机服务（Cameral Service）
9.2 相机应用程序
9.3 相机服务框架（Camera Service Framework）
9.3.1 相机服务框架层次结构
9.3.2 相机服务框架类
9.4 相机服务框架的运行
9.4.1 初始化相机服务
9.4.2 连接相机服务
9.4.3 相机服务连接过程分析
9.4.4 相机设置与控制
9.4.5 相机设置与控制分析
9.4.6 相机事件处理
9.4.7 相机事件处理分析
9.5 小结
第10章 Java服务框架（Java Service Framework）
10.1 Java服务框架（Java Service Framework）
10.1.1 Java服务框架的层次结构
10.1.2 Java服务框架中各个类间的相互作用
10.2 运行机制
10.2.1 Java服务框架初始化
10.2.2 Binder
10.2.3 BinderProxy
10.2.4 Parcel
10.3 Java系统服务的实现
10.3.1 闹钟服务（Alarm Manager Service）分析
10.3.2 编写HelloWorldService系统服务
10.3.3 使用HelloWorldService系统服务
10.3.4 编译HelloWorldService系统服务
10.4 Java Service Manager
10.4.1 Java Service Manager简介
10.4.2 BinderInternal
10.4.3 Java Service Manager的运行实例
10.5 使用AIDL生成服务代理与服务Stub
10.5.1 在AIDL文件中定义服务接口
10.5.2 使用AIDL编译器，生成服务接口、服务Stub以及服务代理
10.5.3 继承Stub类创建服务
10.5.4 服务接口的调用
10.6 小结
第11章 Java系统服务运行分析
11.1 Activity Manager Service
11.2 Activity Manager Service创建服务分析
11.2.1 Controller Activity-调用startService（）方法
11.2.2 Activity Manager Service的startService（）方法的调用过程（使用Binder RPC）
11.2.3 Activity Manager Service--运行startService（） Stub方法
11.2.4 运行ActivityThread类的main（） 方法
11.2.5 Activity Manager Service--attachApplication（） Stub方法
11.3 小结
附录 AIDL语法
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android框架揭秘
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android进阶之光
第1章　Android新特性	1
1.1　Android 5.0新特性	1
1.1.1　Android 5.0主要新特性概述	1
1.1.2　替换ListView和GridView的RecyclerView	3
1.1.3　卡片CardView	13
1.1.4　3种Notification	18
1.1.5　Toolbar与Palette	23
1.2　Android 6.0新特性	29
1.2.1　Android 6.0主要新特性概述	29
1.2.2　运行时权限机制	30
1.3　Android 7.0新特性	43
1.3.1　Android 7.0主要新特性概述	43
1.3.2　多窗口模式	44
1.4　本章小结	47
第2章　Material Design	48
2.1　Material Design概述	48
2.1.1　核心思想	48
2.1.2　材质与空间	49
2.1.3　动画	49
2.1.4　样式	50
2.1.5　图标	51
2.1.6　图像	51
2.1.7　组件	51
2.2　Design Support Library常用控件详解	54
2.2.1　Snackbar的使用	54
2.2.2　用TextInputLayout实现登录界面	55
2.2.3　FloatingActionButton的使用	60
2.2.4　用TabLayout实现类似网易选项卡的动态滑动效果	61
2.2.5　用NavigationView实现抽屉菜单界面	68
2.2.6　用CoordinatorLayout实现Toolbar隐藏和折叠	74
2.3　本章小结	86
第3章　View体系与自定义View	87
3.1　View与ViewGroup	87
3.2　坐标系	89
3.2.1　Android坐标系	89
3.2.2　View坐标系	90
3.3　View的滑动	91
3.3.1　layout()方法	92
3.3.2　offsetLeftAndRight()与offsetTopAndBottom()	94
3.3.3　LayoutParams（改变布局参数）	95
3.3.4　动画	95
3.3.5　scrollTo与scollBy	96
3.3.6　Scroller	98
3.4　属性动画	99
3.5　解析Scroller	105
3.6　View的事件分发机制	108
3.6.1　源码解析Activity的构成	108
3.6.2　源码解析View的事件分发机制	112
3.7　View的工作流程	119
3.7.1　View的工作流程入口	119
3.7.2　理解MeasureSpec	122
3.7.3　View的measure流程	126
3.7.4　View的layout流程	132
3.7.5　View的draw流程	135
3.8　自定义View	139
3.8.1　继承系统控件的自定义View	140
3.8.2　继承View的自定义View	141
3.8.3　自定义组合控件	147
3.8.4　自定义ViewGroup	152
3.9　本章小结	164
第4章　多线程编程	165
4.1　线程基础	165
4.1.1　进程与线程	165
4.1.2　线程的状态	167
4.1.3　创建线程	168
4.1.4　理解中断	170
4.1.5　安全地终止线程	171
4.2　同步	173
4.2.1　重入锁与条件对象	173
4.2.2　同步方法	175
4.2.3　同步代码块	176
4.2.4　volatile	177
4.3　阻塞队列	183
4.3.1　阻塞队列简介	183
4.3.2　Java中的阻塞队列	184
4.3.3　阻塞队列的实现原理	186
4.3.4　阻塞队列的使用场景	188
4.4　线程池	190
4.4.1　ThreadPoolExecutor	190
4.4.2　线程池的处理流程和原理	192
4.4.3　线程池的种类	193
4.5　AsyncTask的原理	197
4.6　本章小结	203
第5章　网络编程与网络框架	204
5.1　网络分层	204
5.2　TCP的三次握手与四次挥手	205
5.3　HTTP协议原理	207
5.3.1　HTTP简介	207
5.3.2　HTTP请求报文	208
5.3.3　HTTP响应报文	209
5.3.4　HTTP的消息报头	210
5.3.5　抓包应用举例	211
5.4　HttpClient与HttpURLConnection	212
5.4.1　HttpClient	212
5.4.2　HttpURLConnection	216
5.5　解析Volley	218
5.5.1　Volley基本用法	218
5.5.2　源码解析Volley	223
5.6　解析OkHttp	231
5.6.1　OkHttp基本用法	232
5.6.2　源码解析OkHttp	240
5.7　解析Retrofit	255
5.7.1　Retrofit基本用法	255
5.7.2　源码解析Retrofit	261
5.8　本章小结	270
第6章　设计模式	271
6.1　设计模式六大原则	271
6.2　设计模式分类	273
6.3　创建型设计模式	273
6.3.1　单例模式	274
6.3.2　简单工厂模式	277
6.3.3　工厂方法模式	279
6.3.4　建造者模式	281
6.4　结构型设计模式	284
6.4.1　代理模式	285
6.4.2　装饰模式	288
6.4.3　外观模式	291
6.4.4　享元模式	295
6.5　行为型设计模式	298
6.5.1　策略模式	298
6.5.2　模板方法模式	301
6.5.3　观察者模式	304
6.6　本章小结	307
第7章　事件总线	308
7.1　解析EventBus	308
7.1.1　使用EventBus	308
7.1.2　源码解析EventBus	314
7.2　解析otto	324
7.2.1　使用otto	324
7.2.2　源码解析otto	327
第8章　函数响应式编程	333
8.1　RxJava基本用法	333
8.1.1　RxJava概述	333
8.1.2　RxJava基本实现	334
8.1.3　RxJava的不完整定义回调	336
8.2　RxJava的Subject	338
8.3　RxJava操作符入门	339
8.3.1　创建操作符	339
8.3.2　变换操作符	340
8.3.3　过滤操作符	344
8.3.4　组合操作符	349
8.3.5　辅助操作符	352
8.3.6　错误处理操作符	355
8.3.7　条件操作符和布尔操作符	357
8.3.8　转换操作符	360
8.4　RxJava的线程控制	362
8.5　RxJava的使用场景	362
8.5.1　RxJava结合OkHttp访问网络	362
8.5.2　RxJava结合Retrofit访问网络	364
8.5.3　用RxJava实现RxBus	368
8.6　RxJava源码解析	370
8.6.1  RxJava的订阅过程	371
8.6.2　RxJava的变换过程	372
8.6.3　RxJava的线程切换过程	376
8.7　本章小结	381
第9章　注解与依赖注入框架	382
9.1　注解	382
9.1.1　注解分类	382
9.1.2　定义注解	384
9.1.3　注解处理器	385
9.2　依赖注入的原理	392
9.2.1　控制反转与依赖注入	392
9.2.2　依赖注入的实现方式	393
9.3　依赖注入框架	395
9.3.1　为何使用依赖注入框架	395
9.3.2　解析ButterKnife	395
9.3.3　解析Dagger2	405
9.4　本章小结	421
第10章　应用架构设计	422
10.1  MVC模式	422
10.2　MVP模式	423
10.2.1　应用MVP模式	424
10.2.2　MVP结合RxJava和Dagger2	431
10.3　MVVM模式	438
10.3.1　解析Data Binding	439
10.3.2　应用Data Binding	457
10.4　本章小结	459
第11章　系统架构与MediaPlayer框架	460
11.1　Android系统架构	460
11.2　Android系统源码目录	463
11.2.1　整体结构	463
11.2.2　应用层部分	464
11.2.3　应用框架层部分	465
11.2.4　C/C++程序库部分	465
11.3　Source Insights使用	466
11.4　MediaPlayer框架	467
11.4.1　Java Framework层的MediaPlayer分析	467
11.4.2　JNI层的MediaPlayer分析	469
11.4.3　Native层的MediaPlayer分析	471
11.5　本章小结	478
后记	479
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android进阶之光
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android高级进阶
第1篇　基础篇
第1章　Android触摸事件传递机制  2
1.1　触摸事件的类型  2
1.2　事件传递的三个阶段  3
1.3　View的事件传递机制  4
1.4　ViewGroup的事件传递机制  10
第2章　Android View的绘制流程  16
2.1　绘制的整体流程  17
2.2　MeasureSpec  17
2.3　Measure  19
2.4　Layout  22
2.5　Draw  22
第3章　Android 动画机制  25
3.1　逐帧动画（Frame Animation）  25
3.1.1　XML 资源文件方式  25
3.1.2　代码方式  26
3.2　补间动画（Tween Animation）  27
3.2.1　插值器 Interpolator  27
3.2.2　AlphaAnimation  29
3.2.3　ScaleAnimation  30
3.2.4　TranslateAnimation  31
3.2.5　RotateAnimation  32
3.2.6　自定义补间动画  34
3.3　属性动画（Property Animation）  34
3.3.1　Evaluator  35
3.3.2　AnimatorSet  36
3.3.3　ValueAnimator  36
3.3.4　ObjectAnimator  38
3.4　过渡动画（Transition Animation）  40
第4章　Support Annotation Library 使用详解  46
4.1　Nullness 注解  47
4.2　资源类型注解  48
4.3　类型定义注解  50
4.4　线程注解  52
4.5　RGB 颜色值注解  52
4.6　值范围注解  53
4.7　权限注解  53
4.8　重写函数注解  54
4.9　返回值注解  55
4.10　@VisibleForTesting  55
4.11　@Keep  55
第5章　Percent Support Library使用详解  57
第6章　Design Support Library使用详解  62
6.1　Snackbar  62
6.2　TextInputLayout  63
6.3　TabLayout  64
6.4　NavigationView  65
6.4.1　导航菜单  66
6.4.2　导航头部  67
6.5　FloatingActionButton  70
6.5.1　使用浮动操作按钮  70
6.5.2　其他选项  71
6.5.3　点击事件  71
6.6　CoordinatorLayout  72
6.7　CollapsingToolbarLayout  73
6.8　BottomSheetBehavior  75
第7章　Android Studio中的NDK开发  77
7.1　ABI的基本概念  77
7.2　引入预编译的二进制 C/C++ 函数库  79
7.3　直接从 C/C++ 源码编译  79
7.3.1　配置 ndk.dir 变量  79
7.3.2　在 Gradle 中配置 NDK 模块  79
7.3.3　添加 C/C++ 文件到指定的目录  81
7.4　使用 .so 文件的注意事项  81
7.4.1　使用高平台版本编译的 .so 文件运行在低版本的设备上  81
7.4.2　混合使用不同的C++ 运行时编译的 .so 文件  82
7.4.3　没有为每个支持的 CPU 架构提供对应的 .so 文件  82
7.4.4　将 .so 文件放在错误的地方  82
7.4.5　只提供 armeabi 架构的 .so 文件而忽略其他 ABIs 的  83
第8章　Gradle 必知必会  85
8.1　共享变量的定义  85
8.2　通用配置  87
8.3　aar 函数库的引用  88
8.4　签名和混淆的配置  90
第9章　通过Gradle打包发布函数库到JCenter和Maven Central  92
9.1　Maven Central 和 JCenter  92
9.1.1　Maven Central  93
9.1.2　JCenter  93
9.2　Android Studio 获取函数库的原理  94
9.3　上传函数库到 JCenter  96
9.3.1　步骤一：在 Bintray 网站上注册一个账号  96
9.3.2　步骤二：创建一个 Sonatype 账号  96
9.3.3　步骤三：在 Bintray 网站使能自动签名  97
9.3.4　步骤四：生成 POM 相关的信息  100
9.3.5　步骤五：上传函数库到 Bintray  104
9.3.6　步骤六：发布 Bintray 用户仓库到 JCenter  107
9.3.7　步骤七：同步函数库到 Maven Central  109
第10章　Builder模式详解  110
10.1　经典的 Builder 模式  110
10.2　Builder 模式的变种  113
10.3　变种 Builder 模式的自动化生成  119
10.4　开源函数库的例子  122
第11章　注解在 Android 中的应用  124
11.1　注解的定义  124
11.2　标准注解  125
11.2.1　编译相关注解  125
11.2.2　资源相关注解  125
11.2.3　元注解  125
11.3　运行时注解  127
11.4　编译时注解  127
11.4.1　定义注解处理器  127
11.4.2　注册注解处理器  131
11.4.3　android-apt插件  132
第12章　ANR产生的原因及其定位分析  134
12.1　ANR 产生的原因  135
12.2　典型的 ANR 问题场景  135
12.3　ANR 的定位和分析  136
12.3.1　Logcat 日志信息  136
12.3.2　traces.txt 日志信息  138
12.4　ANR的避免和检测  141
12.4.1　StrictMode  141
12.4.2　BlockCanary  142
第13章　Android异步处理技术  144
13.1　Thread  144
13.2　HandlerThread  146
13.3　AsyncQueryHandler  149
13.4　IntentService  150
13.5　Executor Framework  153
13.6　AsyncTask  155
13.7　Loader  156
13.8　总结  159
第14章　Android数据序列化方案研究  160
14.1　Serializable  160
14.2　Parcelable  166
14.3　SQLiteDatabase  169
14.4　SharedPreferences  170
14.5　JSON  171
14.6　Protocol Buffers及Nano-Proto-Buffers  171
14.7　FlatBuffers  171
第15章　Android WebView Java 和 JavaScript 交互详解  173
15.1　Java 调用 JavaScript  173
15.2　JavaScript 调用 Java  174
第2篇　系统架构篇
第16章　MVP模式及其在Android中的实践  180
16.1　MVP 的基本概念  180
16.2　MVP 与 MVC 的区别  181
16.3　MVP 的开源实现  182
16.3.1　Android-Architecture  182
16.3.2　TODO-MVP  182
16.3.3　TODO-MVP-Loaders  183
16.3.4　TODO-MVP-Clean  183
16.3.5　TODO-Databinding  184
16.3.6　其他开源参考实现  184
16.4　MVP 的好处  185
16.5　MVP 存在的问题  185
第17章　MVVM模式及Android DataBinding实战  186
17.1　Data Binding 表达式  187
17.2　数据对象  188
17.3　数据绑定  188
17.4　事件绑定  189
第18章　观察者模式的拓展：事件总线  191
18.1　为何要使用  191
18.2　原理  192
18.3　开源实现  193
18.3.1　EventBus  193
18.3.2　otto  194
18.4　与观察者模式及 Android 广播的区别  196
第19章　书写简洁规范的代码  197
19.1　Java 编码规范  197
19.1.1　源代码文件的定义  197
19.1.2　源代码文件的结构  197
19.1.3　遵循的格式  198
19.1.4　命名约定  200
19.1.5　Javadoc  200
19.2　Android 命名规范  200
19.2.1　布局文件的命名  200
19.2.2　资源文件的命名  201
19.2.3　类的命名  201
19.3　CheckStyle 的使用  202
第20章　基于开源项目搭建属于自己的技术堆栈  203
20.1　APP 的整体架构  203
20.2　技术选型的考量点  205
20.3　日志记录能力  205
20.4　JSON 解析能力  207
20.4.1　gson  207
20.4.2　jackson  207
20.4.3　Fastjson  208
20.4.4　LoganSquare  208
20.5　数据库操作能力  210
20.5.1　ActiveAndroid  210
20.5.2　ormlite  211
20.5.3　greenDAO  211
20.5.4　Realm  212
20.6　网络通信能力  213
20.6.1　android-async-http  213
20.6.2　OkHttp  215
20.6.3　Volley  216
20.6.4　Retrofit  217
20.7　图片缓存和显示能力  217
20.7.1　BitmapFun  218
20.7.2　Picasso  218
20.7.3　Glide  218
20.7.4　Fresco  219
20.7.5　Android-Universal-Image-Loader  219
第3篇　经验总结篇
第21章　64K方法数限制原理与解决方案  222
21.1　64K 限制的原因  222
21.2　使用 MultiDex 解决 64K 限制的问题  223
21.2.1　Android 5.0 之前的版本  223
21.2.2　Android 5.0 及之后的版本  223
21.3　如何避免出现 64K 限制  223
21.4　配置 MultiDex  224
21.5　MultiDex Support Library 的局限性  226
21.6　在开发阶段优化 MultiDex 的构建  227
第22章　Android 插件框架机制研究与实践  230
22.1　基本概念  231
22.1.1　宿主和插件  231
22.1.2　ClassLoader 机制  231
22.2　开源框架  231
22.2.1　android-pluginmgr  232
22.2.2　dynamic-load-apk  232
22.2.3　DynamicAPK  232
22.2.4　DroidPlugin  233
22.2.5　Small  234
第23章　推送机制实现原理详解  235
23.1　推送的开源实现方案  236
23.1.1　基于 XMPP 协议  236
23.1.2　基于 MQTT 协议  236
23.2　推送的第三方平台  236
23.3　自己实现推送功能  237
23.3.1　长连接的建立（TCPConnectThread）  237
23.3.2　数据的发送（TCPSendThread）  237
23.3.3　数据的接收（TCPReceiveThread）  238
23.3.4　心跳包的实现（TCPHeartBeatThread）  240
第24章　APP 瘦身经验总结  241
24.1　APP 为什么变胖了  241
24.2　从 APK 文件的结构说起  242
24.3　优化图片资源占用的空间  245
24.3.1　无损压缩 [ImageOptim]  246
24.3.2　有损压缩 [ImageAlpha]  246
24.3.3　有损压缩 [TinyPNG]  246
24.3.4　PNG/JPEG 转换为 WebP  246
24.3.5　尽量使用 NinePatch 格式的 PNG 图  247
24.4　使用 Lint 删除无用资源  248
24.5　利用 Android Gradle 配置  248
24.5.1　minifyEnable  248
24.5.2　shrinkResources  249
24.5.3　resConfigs  249
24.5.4　ndk.abiFilters  250
24.6　重构和优化代码  250
24.7　资源混淆  251
24.8　插件化  251
第25章　Android Crash 日志收集原理与实践  252
25.1　Java 层 Crash 捕获机制  253
25.1.1　基本原理  253
25.1.2　线程信息  254
25.1.3　SharedPreference 信息  255
25.1.4　系统设置  257
21.1.5　Logcat 中的日志记录  261
25.1.6　自定义 Log 文件中的内容  264
25.1.7　MemInfo 信息  266
25.2　Native 层 Crash 捕获机制  267
25.3　Crash 的上报  269
第4篇　新技术篇
第26章　函数式编程思想及其在Android中的应用  272
26.1　代码的简化  274
26.2　Operators 简介  275
第27章　依赖注入及其在Android中的应用  277
27.1　基本概念  277
27.1.1　构造函数注入  278
27.1.2　Setter 函数注入  279
27.1.3　接口注入  279
27.2　为何需要框架  280
27.3　开源框架的选择  280
27.3.1　ButterKnife  280
27.3.2　RoboGuice  282
27.3.3　Dagger  285
27.3.4　Dagger2  288
27.3.5　框架的对比  289
第28章　Android世界的Swift：Kotlin在Android中的应用  290
28.1　选择 Kotlin 的原因  290
28.2　Kotlin 的安装和配置  291
28.3　Kotlin 语言的特性  292
28.3.1　可表达性  292
28.3.2　空类型安全  294
28.3.3　扩展函数  295
28.4　Kotlin 的 Gradle 配置  296
28.5　将 Java 类转换成 Kotlin 类  299
28.6　相关资料  302
第29章　React Native For Android入门指南  304
29.1　环境配置  304
29.1.1　Homebrew  304
29.1.2　nvm  305
29.1.3　Node.js  305
29.1.4　watchman  306
29.1.5　flow  306
29.2　Android 开发环境的要求  306
29.3　React Native 工程配置  307
29.3.1　安装react-native  307
29.3.2　生成工程  307
29.4　Android Studio 工程概览  308
29.5　React Native 依赖库修改为本地  314
29.5.1　下载 react-native.aar  314
29.5.2　react-native.aar 的文件内容  315
29.5.3　Gradle 本地依赖  316
29.5.4　将 node_modules 上传到 svn/git  318
29.6　React Native 学习建议  319
第30章　Android在线热修复方案研究  320
30.1　在线热修复的基本流程  320
30.2　Dexposed  321
30.2.1　如何集成  322
30.2.2　基本用法  323
30.2.3　在线热修复  325
30.2.4　平台的限制  328
30.3　AndFix  329
30.3.1　如何集成  329
30.3.2　补丁包生成工具  331
30.3.3　平台的限制  332
30.4　Nuwa  332
30.4.1　基本原理  332
30.4.2　如何集成  333
30.4.3　补丁生成工具  334
30.4.4　平台的限制  334
30.5　总结  334
第31章　面向切面编程及其在Android中的应用  335
31.1　AOP 的基本概念  335
31.2　代码织入的时机  336
31.3　基于 AspectJ 实现 Android 平台的 AOP  337
31.3.1　Hugo 的用法简介  337
31.3.2　Hugo 的实现原理  339
31.4　其他 AOP 开源框架  344
第32章　基于Facebook Buck改造Android构建系统  345
32.1　Buck环境配置  346
32.1.1　Homebrew 方式  346
32.1.2　手动构建方式  346
32.1.3　安装 Watchman  348
32.1.4　安装 Android SDK 和 Android NDK  348
32.2　快速创建基于 Buck 构建的 Android 工程  349
32.3　Buck 的基本概念  351
32.3.1　构建规则（Build Rule）  352
32.3.2　构建目标（Build Target）  354
32.3.3　构建文件（Build File）  355
32.3.4　构建目标模式（Build Target Pattern）  356
32.4　项目改造实战  357
32.4.1　步骤一：手动下载工程依赖的第三方 Jar包或者aar包  357
32.4.2　步骤二：将 R.* 常量修改为非 final 的  357
32.4.3　步骤三：创建 BUCK 文件  358
32.4.4　步骤四：编译 Buck 的 buck-android-support  363
32.4.5　步骤五：Exopackage 的使用  363
32.5　Buck 的自动化改造  366
第5篇　性能优化篇
第33章　代码优化  368
33.1　数据结构的选择  368
33.2　Handler 和内部类的正确用法  370
33.3　正确地使用 Context  373
33.3.1　Context 的种类  374
33.3.2　错误使用 Context 导致的内存泄漏  374
33.3.3　不同 Context 的对比  376
33.4　掌握 Java 的四种引用方式  376
33.5　其他代码微优化  377
33.5.1　避免创建非必要的对象  377
33.5.2　对常量使用 static final 修饰  378
33.5.3　避免内部的 Getters/Setters  378
33.5.4　代码的重构  378
第34章　图片优化  379
34.1　图片的格式  379
34.1.1　JPEG  380
34.1.2　PNG  380
34.1.3　GIF  380
34.1.4　WebP  380
34.2　图片的压缩  380
34.2.1　无损压缩 ImageOptim  381
34.2.2　有损压缩 ImageAlpha  381
34.2.3　有损压缩 TinyPNG  381
34.2.4　PNG/JPEG 转换为 WebP  381
34.2.5　尽量使用 NinePatch 格式的 PNG 图  382
34.3　图片的缓存  382
第35章　电量优化  383
35.1　BroadcastReceiver  383
35.2　数据传输  384
35.3　位置服务  384
35.4　AlarmManager  386
35.5　WakeLock  386
第36章　布局优化  388
36.1　include 标签共享布局  388
36.2　ViewStub 标签实现延迟加载  389
36.3　merge 标签减少布局层次  391
36.4　尽量使用 CompoundDrawable  392
36.5　使用 Lint  393
第37章　网络优化  395
37.1　避免 DNS 解析  395
37.2　合并网络请求  395
37.3　预先获取数据  396
37.4　避免轮询  396
37.5　优化重连机制  396
37.6　离线缓存  396
37.7　压缩数据大小  396
37.8　不同的网络环境使用不同的超时策略  397
37.9　CDN 的使用  397
第6篇　移动安全篇
第38章　Android混淆机制详解  400
38.1　Java 代码的混淆  400
38.1.1　Proguard 的特性  401
38.1.2　Proguard 的使能和配置  401
38.1.3　proguard-rules.pro 文件的编写  404
38.1.4　Proguard 生成的文件  407
38.1.5　Proguard 混淆规则汇总  409
38.2　Native（C/C++） 代码的混淆  409
38.3　资源文件的混淆  409
第39章　Android 反编译机制详解  411
39.1　资源文件的反编译  411
39.1.1　ApkTool 的安装  411
39.1.2　ApkTool 的使用  412
39.2　Java 代码的反编译  413
第40章　客户端敏感信息隐藏技术研究  414
40.1　敏感信息嵌套在 strings.xml 中  415
40.2　敏感信息隐藏在 Java 源代码中  415
40.3　敏感信息隐藏在 BuildConfig 中  417
40.4　使用 DexGuard  418
40.5　对敏感信息进行伪装或者加密  419
40.6　敏感信息隐藏在原生函数库中（.so文件）  419
40.7　对APK进行加固处理  419
第41章　Android 加固技术研究  421
41.1　爱加密的主要功能  421
41.1.1　漏洞分析  421
41.1.2　加密服务  422
41.1.3　渠道监测  423
41.2　常见 APP 漏洞及风险  423
41.2.1　静态破解  423
41.2.2　二次打包  424
41.2.3　本地储存数据窃取  424
41.2.4　界面截取  424
41.2.5　输入法攻击  424
41.2.6　协议抓取  424
41.3　Android 程序反破解技术  424
41.3.1　对抗反编译  424
41.3.2　对抗静态分析  425
41.3.3　对抗动态调试  425
41.3.4　防止重编译  425
41.4　加固技术研究知识储备  426
41.4.1　掌握常见的破解分析工具  426
41.4.2　掌握 Dalvik 指令集代码  428
41.4.3　掌握 Dex 和 Odex 文件格式  428
41.4.4　掌握 Smali 文件格式  428
41.4.5　掌握基于 Android 的 ARM 汇编语言基础  428
第42章　Android安全编码  429
42.1　WebView 远程代码执行  429
42.2　WebView 密码明文保存  430
42.3　Android 本地拒绝服务  431
42.3.1　非法序列化对象导致的 ClassNotFoundException  431
42.3.2　空 Action 导致的 NullPointerException  432
42.3.3　强制类型转换导致的 ClassCastException  433
42.3.4　数组越界导致的 IndexOutOfBoundsException  433
42.4　SharedPreference 全局任意读写  434
42.5　密钥硬编码  434
42.6　AES/DES/RSA 弱加密  434
42.7　随机函数使用错误  437
42.8　WebView 忽略 SSL 证书  438
42.9　HTTPS 证书弱校验  438
42.9.1　自定义 X509TrustManager 未实现安全校验  438
42.9.2　自定义 HostnameVerifier 默认接受所有域名  441
42.9.3　SSLSocketFactory 信任所有证书  442
42.10　PendingIntent 使用不当  443
第7篇　工具篇
第43章　Android调试工具Facebook Stetho  446
43.1　视图布局监视  447
43.2　数据库监视  447
43.3　网络监视  448
43.3.1　网络模块使用的是 HTTPUrlConnection  449
43.3.2　网络模块使用的是 OkHttp  452
43.4　dumpapp  454
43.4.1　插件的编写  454
43.4.2　插件的集成  456
43.4.3　插件的使用  456
43.5　Javascript 控制台  457
43.6　最佳实践  457
第44章　内存泄漏检测函数库 LeakCanary  460
44.1　基本概念  461
44.2　LeakCanary 的集成  461
44.3　LeakCanary 的原理  465
44.4　LeakCanary 的定制  469
44.4.1　RefWatcher 的自定义  469
44.4.2　通知页面样式的自定义  470
44.4.3　内存泄漏堆栈信息保存个数的自定义  471
44.4.4　Watcher 的延时  471
44.4.5　自定义内存泄漏堆栈信息和 heap dump 的处理方式  471
44.4.6　忽略特定的弱引用  472
44.4.7　不监视特定的 Activity 类  472
第45章　基于Facebook Redex实现Android APK的压缩和优化  474
45.1　转换的时机  474
45.2　管道的思想  475
45.3　减少字节码的意义  475
45.4　混淆和压缩  475
45.5　使用内联函数  476
45.6　无用代码的消除  477
45.7　Redex 的集成和使用  478
45.7.1　依赖的安装  478
45.7.2　下载，构建和安装  478
45.7.3　使用  478
第46章　Android Studio你所需要知道的功能  479
46.1　Annotate  479
46.2　.ignore 插件  480
46.3　Live Templates  481
46.4　集成 Bug 管理系统  482
第8篇　测试篇
第47章　Android单元测试框架简介  486
47.1　Java 单元测试框架 JUnit  486
47.2　Android 单元测试框架 Robolectric 3.0  488
47.3　Java 模拟测试框架 Mockito  490
47.3.1　行为的验证  490
47.3.2　Stub（桩函数）的使用  491
第48章　Android UI自动化测试框架简介  492
48.1　Monkey  492
48.2　MonkeyRunner  493
48.3　UIAutomator  493
48.4　Robotium  494
48.5　Espresso  494
48.6　Appium  494
第49章　Android静态代码分析实战  495
49.1　Java代码规范检查工具CheckStyle  495
49.1.1　Gradle方式  495
49.1.2　Android Studio插件方式  497
49.2　Java静态代码分析工具FindBugs  498
49.2.1　Gradle方式  498
49.2.2　Android Studio插件方式  499
49.3　Java静态代码分析工具PMD  500
49.3.1　Gradle方式  500
49.3.2　Android Studio插件方式  501
49.4　Android代码优化工具Lint  501
49.4.1　Gradle方式  501
49.4.2　Android Studio插件方式  502
第50章　基于Jenkins＋Gradle搭建Android持续集成编译环境  503
50.1　Tomcat的下载和启动  503
50.2　Jenkins的下载和运行  505
50.3　Jenkins插件的安装  506
50.4　Jenkins全局配置  507
50.4.1　配置 JDK 环境  507
50.4.2　配置 Android SDK 环境  507
50.4.3　配置 Git 环境  508
50.4.4　配置 SVN 环境  508
50.4.5　配置 Gradle 环境  508
50.5　JOB相关的操作  508
50.5.1　JOB 的创建  508
50.5.2　JOB 的配置  509
50.5.3　Gradle 的配置  510
50.5.4　构建触发器的配置  511
50.5.5　参数化构建  514
50.6　Jenkins预定义的环境变量  514
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android高级进阶
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android编程权威指南（第3版）
第1章　Android开发初体验　　1
1.1　Android开发基础　　2
1.2　创建Android项目　　2
1.3　Android Studio使用导航　　6
1.4　用户界面设计　　6
1.4.1　视图层级结构　　10
1.4.2　组件属性　　10
1.4.3　创建字符串资源　　11
1.4.4　预览布局　　12
1.5　从布局XML到视图对象　　13
1.6　组件的实际应用　　16
1.6.1　引用组件　　17
1.6.2　设置监听器　　17
1.7　创建提示消息　　19
1.8　使用模拟器运行应用　　21
1.9　深入学习：Android编译过程　　23
1.10　关于挑战练习　　25
1.11　挑战练习：定制toast消息　　25
第2章　Android与MVC设计模式　　26
2.1　创建新类　　26
2.2　Android与MVC设计模式　　29
2.3　更新视图层　　31
2.4　更新控制器层　　33
2.5　在物理设备上运行应用　　37
2.5.1　连接设备　　37
2.5.2　配置设备用于应用开发　　37
2.6　添加图标资源　　38
2.6.1　向项目中添加资源　　39
2.6.2　在XML文件中引用资源　　41
2.7　挑战练习：为TextView添加监听器　　42
2.8　挑战练习：添加后退按钮　　42
2.9　挑战练习：从按钮到图标按钮　　42
第3章　activity的生命周期　　45
3.1　日志跟踪理解activity生命周期　　46
3.1.1　输出日志信息　　46
3.1.2　使用LogCat　　48
3.1.3　activity生命周期实例解析　　50
3.2　设备旋转与activity生命周期　　52
3.3　保存数据以应对设备旋转　　56
3.4　再探activity生命周期　　58
3.5　深入学习：activity内存清理现状　　59
3.6　深入学习：日志记录的级别与方法　　60
3.7　挑战练习：禁止一题多答　　61
3.8　挑战练习：评分　　61
第4章　Android应用的调试　　62
4.1　异常与栈跟踪　　63
4.1.1　诊断应用异常　　64
4.1.2　记录栈跟踪日志　　65
4.1.3　设置断点　　66
4.1.4　使用异常断点　　68
4.2　Android特有的调试工具　　70
4.2.1　使用Android Lint　　70
4.2.2　R类的问题　　71
4.3　挑战练习：探索布局检查器　　72
4.4　挑战练习：探索内存分配跟踪　　72
第5章　第二个activity　　74
5.1　创建第二个activity　　75
5.1.1　创建新的activity　　75
5.1.2　创建新的activity子类　　78
5.1.3　在manifest配置文件中声明activity　　78
5.1.4　为QuizActivity添加CHEAT按钮　　79
5.2　启动activity　　81
5.3　activity间的数据传递　　83
5.3.1　使用intent extra　　83
5.3.2　从子activity获取返回结果　　86
5.4　activity的使用与管理　　91
5.5　挑战练习：堵住漏洞　　93
第6章　Android SDK版本与兼容　　94
6.1　Android SDK版本　　94
6.2　Android编程与兼容性问题　　95
6.2.1　比较合理的版本　　95
6.2.2　SDK最低版本　　96
6.2.3　SDK目标版本　　97
6.2.4　SDK编译版本　　97
6.2.5　安全添加新版本API中的代码　　97
6.3　使用Android开发者文档　　100
6.4　挑战练习：报告编译版本　　101
6.5　挑战练习：限制作弊次数　　102
第7章　UI fragment与fragment 管理器　　103
7.1　UI设计的灵活性需求　　104
7.2　引入fragment　　104
7.3　着手开发CriminalIntent　　105
7.3.1　创建新项目　　107
7.3.2　两类fragment　　108
7.3.3　在Android Studio中增加依赖关系　　108
7.3.4　创建Crime类　　111
7.4　托管UI fragment　　112
7.4.1　fragment的生命周期　　112
7.4.2　托管的两种方式　　113
7.4.3　定义容器视图　　113
7.5　创建UI fragment　　115
7.5.1　定义CrimeFragment的布局　　115
7.5.2　创建CrimeFragment类　　117
7.6　向FragmentManager添加UI fragment　　122
7.6.1　fragment事务　　123
7.6.2　FragmentManager与fragment生命周期　　125
7.7　采用fragment的应用架构　　126
7.8　深入学习：fragment与支持库　　127
7.9　深入学习：为什么优先使用支持库版fragment　　128
第8章　使用RecyclerView显示列表　　129
8.1　升级CriminalIntent应用的模型层　　130
8.2　使用抽象activity托管fragment　　132
8.2.1　通用型fragment托管布局　　133
8.2.2　抽象activity类　　133
8.3　RecyclerView、ViewHolder和Adapter　　137
8.3.1　ViewHolder和Adapter　　138
8.3.2　使用RecyclerView　　141
8.3.3　列表项视图　　142
8.3.4　实现ViewHolder和Adapter　　143
8.4　绑定列表项　　145
8.5　响应点击　　147
8.6　深入学习：ListView和GridView　　148
8.7　深入学习：单例　　148
8.8　挑战练习：RecyclerView ViewType　　149
第9章　使用布局与组件创建用户界面　　150
9.1　使用图形布局工具　　151
9.2　引入ConstraintLayout　　151
9.2.1　使用ConstraintLayout　　152
9.2.2　约束编辑器　　153
9.2.3　腾出空间　　155
9.2.4　添加组件　　157
9.2.5　约束的XML形式　　159
9.2.6　编辑属性　　160
9.2.7　动态设置列表项　　162
9.3　深入学习布局属性　　163
9.3.1　dp、sp以及屏幕像素密度　　163
9.3.2　边距与内边距　　165
9.3.3　样式、主题及主题属性　　166
9.3.4　Android应用的设计原则　　166
9.4　图形布局工具使用小结　　167
9.5　挑战练习：日期格式化　　167
第10章　使用fragment argument　　168
10.1　从fragment中启动activity　　168
10.1.1　附加extra信息　　169
10.1.2　获取extra信息　　170
10.1.3　使用Crime数据更新CrimeFragment视图　　171
10.1.4　直接获取extra信息的缺点　　172
10.2　fragment argument　　172
10.2.1　附加argument给fragment　　173
10.2.2　获取argument　　174
10.3　刷新显示列表项　　174
10.4　通过fragment获取返回结果　　176
10.5　深入学习：为何要用fragment argument　　177
10.6　挑战练习：实现高效的RecyclerView刷新　　178
10.7　挑战练习：优化CrimeLab的表现　　178第11章　使用ViewPager　　179
11.1　创建CrimePagerActivity　　180
11.1.1　ViewPager与PagerAdapter　　181
11.1.2　整合并配置使用CrimePagerActivity　　182
11.2　FragmentStatePagerAdapter与FragmentPagerAdapter　　184
11.3　深入学习：ViewPager的工作原理　　186
11.4　深入学习：以代码的方式创建视图　　187
11.5　挑战练习：恢复CrimeFragment的边距　　187
11.6　挑战练习：添加Jump to First按钮和Jump to Last按钮　　188
第12章　对话框　　189
12.1　创建DialogFragment　　190
12.1.1　显示DialogFragment　　192
12.1.2　设置对话框的显示内容　　194
12.2　fragment间的数据传递　　196
12.2.1　传递数据给DatePickerFragment　　197
12.2.2　返回数据给CrimeFragment　　199
12.3　挑战练习：更多对话框　　205
12.4　挑战练习：实现响应式DialogFragment　　205
第13章　工具栏　　207
13.1　AppCompat　　207
13.2　工具栏菜单　　209
13.2.1　在XML文件中定义菜单　　210
13.2.2　创建菜单　　214
13.2.3　响应菜单项选择　　217
13.3　实现层级式导航　　218
13.4　可选菜单项　　219
13.4.1　切换菜单项标题　　220
13.4.2　“还有个问题”　　222
13.5　深入学习：工具栏与操作栏　　224
13.6　挑战练习：删除crime记录　　224
13.7　挑战练习：复数字符串资源　　224
13.8　挑战练习：用于RecyclerView的空视图　　225
第14章　SQLite数据库　　226
14.1　定义schema　　226
14.2　创建初始数据库　　227
14.2.1　　使用Android Device Monitor查看文件　　230
14.2.2　处理数据库相关问题　　231
14.3　修改CrimeLab类　　232
14.4　写入数据库　　233
14.4.1　使用ContentValues　　233
14.4.2　插入和更新记录　　234
14.5　读取数据库　　235
14.5.1　使用CursorWrapper　　236
14.5.2　创建模型层对象　　238
14.6　深入学习：数据库高级主题介绍　　241
14.7　深入学习：应用上下文　　241
14.8　挑战练习：删除crime记录　　242
第15章　隐式intent　　243
15.1　添加按钮组件　　244
15.2　添加嫌疑人信息至模型层　　244
15.3　使用格式化字符串　　246
15.4　使用隐式intent　　248
15.4.1　隐式intent的组成　　248
15.4.2　发送消息　　249
15.4.3　获取联系人信息　　252
15.4.4　检查可响应任务的activity　　254
15.5　挑战练习：ShareCompat　　256
15.6　挑战练习：又一个隐式intent　　256
第16章　使用intent拍照　　258
16.1　布置照片　　258
16.2　文件存储　　260
16.2.1　使用FileProvider　　261
16.2.2　指定照片存放位置　　262
16.3　使用相机intent　　263
16.4　缩放和显示位图　　265
16.5　功能声明　　268
16.6　挑战练习：优化照片显示　　269
16.7　挑战练习：优化缩略图加载　　269
第17章　双版面主从用户界面　　270
17.1　增加布局灵活性　　271
17.1.1　修改SingleFragment-
Activity　　272
17.1.2　创建包含两个fragment容器的布局　　272
17.1.3　使用别名资源　　274
17.1.4　创建平板设备专用可选资源　　275
17.2　activity：fragment的托管者　　276
17.3　深入学习：设备屏幕尺寸的确定　　284
17.4　挑战练习：添加滑动删除功能　　285
第18章　应用本地化　　286
18.1　资源本地化　　286
18.1.1　默认资源　　289
18.1.2　检查资源本地化完成情况　　291
18.1.3　区域修饰符　　292
18.2　配置修饰符　　294
18.2.1　可用资源优先级排定　　295
18.2.2　多重配置修饰符　　296
18.2.3　寻找最匹配的资源　　297
18.3　测试备选资源　　298
18.4　挑战练习：日期本地化　　298
第19章　Android辅助功能　　299
19.1　TalkBack　　299
19.1.1　点击浏览　　301
19.1.2　线性浏览　　301
19.2　实现非文字型元素可读　　303
19.2.1　添加内容描述　　303
19.2.2　实现组件可聚焦　　305
19.3　提升辅助体验　　305
19.4　深入学习：使用辅助功能扫描器　　309
19.5　挑战练习：优化列表项　　311
19.6　挑战练习：补全上下文信息　　311
19.7　挑战练习：事件主动通知　　311
第20章　数据绑定与MVVM　　313
20.1　为何要用MVVM架构　　314
20.2　创建BeatBox应用　　314
20.3　导入assets　　319
20.4　处理assets　　321
20.5　使用assets　　323
20.6　绑定数据　　325
20.6.1　创建视图模型　　327
20.6.2　绑定至视图模型　　328
20.6.3　绑定数据观察　　330
20.7　访问assets　　332
20.8　深入学习：数据绑定再探　　333
20.8.1　lambda表达式　　333
20.8.2　更多语法糖　　333
20.8.3　BindingAdapter　　333
20.9　深入学习：为何使用assets　　334
20.10　深入学习：什么是non-assets　　334
第21章　音频播放与单元测试　　335
21.1　创建SoundPool　　335
21.2　加载音频文件　　336
21.3　播放音频　　337
21.4　添加测试依赖　　338
21.5　创建测试类　　339
21.6　实现测试类　　341
21.7　编写测试方法　　342
21.8　数据绑定回调　　346
21.9　释放音频　　346
21.10　设备旋转和对象保存　　347
21.10.1　保留fragment　　348
21.10.2　设备旋转和已保留的fragment　　349
21.11　深入学习：是否保留fragment　　351
21.12　深入学习：Espresso与整合测试　　351
21.13　深入学习：虚拟对象与测试　　352
21.14　挑战练习：播放进度控制　　353
第22章　样式与主题　　354
22.1　颜色资源　　354
22.2　样式　　355
22.3　主题　　357
22.4　添加主题颜色　　359
22.5　覆盖主题属性　　361
22.6　修改按钮属性　　364
22.7　深入学习：样式继承拾遗　　367
22.8　深入学习：引用主题属性　　367
第23章　XML drawable　　368
23.1　统一按钮样式　　368
23.2　shape drawable　　369
23.3　state list drawable　　371
23.4　layer list drawable　　372
23.5　深入学习：为什么要用XML drawable　　373
23.6　深入学习：使用mipmap图像　　374
23.7　深入学习：使用9-patch图像　　375
23.8　挑战练习：按钮主题　　379
第24章　深入学习intent和任务　　380
24.1　创建NerdLauncher项目　　380
24.2　解析隐式intent　　382
24.3　在运行时创建显式intent　　386
24.4　任务与回退栈　　388
24.4.1　在任务间切换　　389
24.4.2　启动新任务　　389
24.5　使用NerdLauncher应用作为设备主屏幕　　392
24.6　挑战练习：应用图标　　393
24.7　深入学习：进程与任务　　393
24.8　深入学习：并发文档　　395
第25章　HTTP与后台任务　　398
25.1　创建PhotoGallery应用　　399
25.2　网络连接基本　　401
25.3　使用AsyncTask在后台线程上运行代码　　403
25.4　线程与主线程　　405
25.5　从Flickr获取JSON数据　　407
25.6　从AsyncTask回到主线程　　413
25.7　清理AsyncTask　　416
25.8　深入学习：AsyncTask再探　　416
25.9　深入学习：AsyncTask的替代方案　　417
25.10　挑战练习：Gson　　418
25.11　挑战练习：分页　　418
25.12　挑战练习：动态调整网格列　　418
第26章　Looper、Handler和HandlerThread　　420
26.1　配置RecyclerView以显示图片　　420
26.2　批量下载缩略图　　422
26.3　与主线程通信　　423
26.4　创建并启动后台线程　　424
26.5　Message与message handler　　426
26.5.1　剖析Message　　426
26.5.2　剖析Handler　　427
26.5.3　使用handler　　428
26.5.4　传递handler　　431
26.6　深入学习：AsyncTask与线程　　436
26.7　深入学习：解决图片下载问题　　436
26.8　深入学习：StrictMode　　437
26.9　挑战练习：预加载以及缓存　　438
第27章　搜索　　439
27.1　搜索Flickr网站　　439
27.2　使用SearchView　　443
27.3　使用shared preferences实现轻量级数据存储　　447
27.4　优化应用　　451
27.5　挑战练习：深度优化PhotoGallery
应用　　451
第28章　后台服务　　452
28.1　创建IntentService　　452
28.2　服务的作用　　454
28.3　查找最新返回结果　　456
28.4　使用AlarmManager延迟运行服务　　458
28.4.1　合理控制服务启动的频度　　460
28.4.2　PendingIntent　　461
28.4.3　使用PendingIntent管理定时器　　461
28.5　控制定时器　　462
28.6　通知信息　　464
28.7　挑战练习：可穿戴设备上的通知　　466
28.8　深入学习：服务之细节　　467
28.8.1　服务的能与不能　　467
28.8.2　服务的生命周期　　467
28.8.3　non-sticky服务　　467
28.8.4　sticky服务　　468
28.8.5　绑定服务　　468
28.9　深入学习：JobScheduler和
JobService　　469
28.10　挑战练习：在Lollipop设备上使用JobService　　472
28.11　深入学习：sync adapter　　472
第29章　broadcast intent　　474
29.1　普通intent和broadcast intent　　474
29.2　接收系统broadcast：重启后唤醒　　475
29.2.1　创建并登记standalone receiver　　475
29.2.2　使用receiver　　477
29.3　过滤前台通知消息　　479
29.3.1　发送broadcast intent　　479
29.3.2　创建并登记动态receiver　　480
29.3.3　使用私有权限限制broadcast　　482
29.3.4　使用有序broadcast收发数据　　484
29.4　receiver与长时运行任务　　488
29.5　深入学习：本地事件　　488
29.5.1　使用EventBus　　489
29.5.2　使用RxJava　　490
29.6　深入学习：探测fragment的状态　　490
第30章　网页浏览　　492
30.1　最后一段Flickr数据　　492
30.2　简单方式：隐式intent　　494
30.3　较难方式：使用WebView　　496
30.4　处理WebView的设备旋转问题　　502
30.5　深入学习：注入JavaScript对象　　502
30.6　深入学习：WebView升级　　503
30.7　挑战练习：使用后退键浏览历史网页　　504
30.8　挑战练习：非HTTP链接支持　　504
第31章　定制视图与触摸事件　　505
31.1　创建DragAndDraw项目　　505
31.2　创建定制视图　　507
31.3　处理触摸事件　　509
31.4　onDraw(...)方法内的图形绘制　　513
31.5　挑战练习：设备旋转问题　　515
31.6　挑战练习：旋转矩形框　　515
第32章　属性动画　　516
32.1　建立场景　　516
32.2　简单属性动画　　519
32.2.1　视图属性转换　　521
32.2.2　使用不同的interpolator　　523
32.2.3　色彩渐变　　523
32.3　播放多个动画　　525
32.4　深入学习：其他动画API　　527
32.4.1　传统动画工具　　527
32.4.2　转场　　527
32.5　挑战练习　　527
第33章　地理位置和Play服务　　528
33.1　地理位置和定位类库　　528
33.2　创建Locatr项目　　529
33.3　Play服务定位和模拟器　　530
33.4　创建Locatr应用　　532
33.5　配置Google Play服务　　534
33.6　使用Google Play服务　　536
33.7　基于地理位置的Flickr搜索　　538
33.8　获取定位数据　　539
33.9　获取运行时权限　　542
33.10　寻找并显示图片　　546
33.11　挑战练习：权限使用理由　　548
33.12　挑战练习：进度指示器　　549
第34章　使用地图　　550
34.1　导入Play地图服务库　　550
34.2　Android上的地图服务　　550
34.3　获取Maps API key　　550
34.4　创建地图　　552
34.5　获取更多地理位置数据　　553
34.6　使用地图　　556
34.7　深入学习：团队开发和API key　　560
第35章　material design　　562
35.1　material surface　　562
35.1.1　elevation和Z值　　564
35.1.2　state list animator　　565
35.2　动画工具　　566
35.2.1　circular reveal　　567
35.2.2　shared element transition　　568
35.3　新的视图组件　　571
35.3.1　card　　571
35.3.2　floating action button　　572
35.3.3　snackbar　　573
35.4　深入学习material design　　574
第36章　编后语　　575
36.1　终极挑战　　575
36.2　关于我们　　575
36.3　致谢　　576
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android编程权威指南（第3版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入理解Android内核设计思想（第2版 套装上下册）
第1篇Android编译篇
第1章Android系统简介2
1.1Android系统发展历程2
1.2Android系统特点4
1.3Android系统框架8
第2章Android源码下载及编译11
2.1Android源码下载指南11
2.1.1基于Repo和Git的版本管理11
2.1.2Android源码下载流程12
2.2原生Android系统编译指南16
2.2.1建立编译环境16
2.2.2编译流程19
2.3定制产品的编译与烧录22
2.3.1定制新产品22
2.3.2Linux内核编译26
2.3.3烧录/升级系统27
2.4AndroidMultilibBuild28
2.5Android系统映像文件31
2.5.1boot.img32
2.5.2ramdisk.img34
2.5.3system.img35
2.5.4VerifiedBoot35
2.6ODEX流程37
2.7OTA系统升级39
2.7.1生成升级包39
2.7.2获取升级包40
2.7.3OTA升级—Recovery模式41
2.8Android反编译44
2.9NDKBuild46
2.10第三方ROM的移植48
第3章Android编译系统50
3.1Makefile入门50
3.2Android编译系统52
3.2.1Makefile依赖树的概念53
3.2.2Android编译系统抽象模型53
3.2.3树根节点droid54
3.2.4main.mk解析55
3.2.5droidcore节点59
3.2.6dist_files61
3.2.7Android.mk的编写规则61
3.3JackToolchain64
3.4SDK的编译过程68
3.4.1envsetup.sh68
3.4.2lunchsdk-eng70
3.4.3makesdk75
3.5Android系统GDB调试85
第2篇Android原理篇
第4章操作系统基础90
4.1计算机体系结构（ComputerArchitecture）90
4.1.1冯?诺依曼结构90
4.1.2哈佛结构90
4.2什么是操作系统91
4.3进程间通信的经典实现93
4.3.1共享内存（SharedMemory）94
4.3.2管道（Pipe）95
4.3.3UNIXDomainSocket97
4.3.4RPC（RemoteProcedureCalls）99
4.4同步机制的经典实现100
4.4.1信号量（Semaphore）100
4.4.2Mutex101
4.4.3管程（Monitor）101
4.4.4LinuxFutex102
4.4.5同步范例103
4.5Android中的同步机制104
4.5.1进程间同步——Mutex104
4.5.2条件判断——Condition105
4.5.3“栅栏、障碍”——Barrier107
4.5.4加解锁的自动化操作——Autolock108
4.5.5读写锁——ReaderWriterMutex109
4.6操作系统内存管理基础110
4.6.1虚拟内存（VirtualMemory）110
4.6.2内存保护（MemoryProtection）113
4.6.3内存分配与回收113
4.6.4进程间通信——mmap114
4.6.5写时拷贝技术（CopyonWrite）115
4.7Android中的LowMemoryKiller115
4.8Android匿名共享内存（AnonymousSharedMemory）118
4.8.1Ashmem设备118
4.8.2Ashmem应用实例122
4.9JNI127
4.9.1Java函数的本地实现127
4.9.2本地代码访问JVM130
4.10Java中的反射机制132
4.11学习Android系统的两条线索133
第5章Android进程/线程和程序内存优化134
5.1Android进程和线程134
5.2Handler,MessageQueue,Runnable与Looper140
5.3UI主线程——ActivityThread147
5.4Thread类150
5.4.1Thread类的内部原理150
5.4.2Thread休眠和唤醒151
5.4.3Thread实例155
5.5Android应用程序如何利用CPU的多核处理能力157
5.6Android应用程序的典型启动流程157
5.7Android程序的内存管理与优化159
5.7.1Android系统对内存使用的限制159
5.7.2Android中的内存泄露与内存监测160
第6章进程间通信—Binder166
6.1智能指针169
6.1.1智能指针的设计理念169
6.1.2强指针sp172
6.1.3弱指针wp173
6.2进程间的数据传递载体——Parcel179
6.3Binder驱动与协议187
6.3.1打开Binder驱动——binder_open188
6.3.2binder_mmap189
6.3.3binder_ioctl192
6.4“DNS”服务器——ServiceManager(BinderServer)193
6.4.1ServiceManager的启动193
6.4.2ServiceManager的构建194
6.4.3获取ServiceManager服务—设计思考199
6.4.4ServiceManagerProxy203
6.4.5IBinder和BpBinder205
6.4.6ProcessState和IPCThreadState207
6.5Binder客户端——BinderClient237
6.6Android接口描述语言——AIDL242
6.7匿名BinderServer254
第7章Android启动过程257
7.1第一个系统进程（init）257
7.1.1init.rc语法257
7.1.2init.rc实例分析260
7.2系统关键服务的启动简析261
7.2.1Android的“DNS服务器”——ServiceManager261
7.2.2“孕育”新的线程和进程——Zygote261
7.2.3Android的“系统服务”——SystemServer274
7.2.4Vold和ExternalStorage存储设备276
7.3多用户管理282
第8章管理Activity和组件运行状态的系统进程——ActivityManagerService（AMS）284
8.1AMS功能概述284
8.2管理当前系统中Activity状态——ActivityStack286
8.3startActivity流程288
8.4完成同一任务的“集合”——ActivityTask296
8.4.1“后进先出”——LastIn，FirstOut297
8.4.2管理ActivityTask298
8.5Instrumentation机制300
第9章GUI系统—SurfaceFlinger305
9.1OpenGLES与EGL305
9.2Android的硬件接口——HAL307
9.3Android终端显示设备的“化身”——Gralloc与Framebuffer309
9.4Android中的本地窗口313
9.4.1FramebufferNativeWindow315
9.4.2应用程序端的本地窗口——Surface321
9.5BufferQueue详解325
9.5.1BufferQueue的内部原理325
9.5.2BufferQueue中的缓冲区分配328
9.5.3应用程序的典型绘图流程333
9.5.4应用程序与BufferQueue的关系339
9.6SurfaceFlinger343
9.6.1“黄油计划”——ProjectButter343
9.6.2SurfaceFlinger的启动347
9.6.3接口的服务端——Client351
9.7VSync的产生和处理355
9.7.1VSync信号的产生和分发355
9.7.2VSync信号的处理361
9.7.3handleMessageTransaction363
9.7.4“界面已经过时/无效，需要重新绘制”——handleMessageInvalidate367
9.7.5合成前的准备工作——preComposition369
9.7.6可见区域——rebuildLayerStacks371
9.7.7为“Composition”搭建环境——setUpHWComposer375
9.7.8doDebugFlashRegions377
9.7.9doComposition377
第10章GUI系统之“窗口管理员”—WMS385
10.1“窗口管理员”——WMS综述386
10.1.1WMS的启动388
10.1.2WMS的基础功能388
10.1.3WMS的工作方式389
10.1.4WMS，AMS与Activity间的联系390
10.2窗口属性392
10.2.1窗口类型与层级392
10.2.2窗口策略（WindowPolicy）396
10.2.3窗口属性（LayoutParams）398
10.3窗口的添加过程400
10.3.1系统窗口的添加过程400
10.3.2Activity窗口的添加过程409
10.3.3窗口添加实例412
10.4Surface管理416
10.4.1Surface申请流程（relayout）416
10.4.2Surface的跨进程传递420
10.4.3Surface的业务操作422
10.5performLayoutAndPlaceSurfacesLockedInner423
10.6窗口大小的计算过程424
10.7启动窗口的添加与销毁433
10.7.1启动窗口的添加433
10.7.2启动窗口的销毁437
10.8窗口动画438
10.8.1窗口动画类型439
10.8.2动画流程跟踪——WindowStateAnimator440
10.8.3AppWindowAnimator444
10.8.4动画的执行过程446
第11章让你的界面炫彩起来的GUI系统—View体系452
第12章“问渠哪得清如许，为有源头活水来”—InputManagerService与输入事件514
12.1事件的分类514
12.2事件的投递流程517
12.2.1InputManagerService518
12.2.2InputReaderThread519
12.2.3InputDispatcherThread519
12.2.4ViewRootImpl对事件的派发523
12.3事件注入524
第13章应用不再同质化—音频系统526
13.1音频基础527
13.2音频框架532
13.3音频系统的核心——Audio-Flinger538
13.4策略的制定者——Audio-PolicyService553
13.5音频流的回放——AudioTrack560
13.6音频数据流572
13.7音量控制584
13.8音频系统的上层建筑588
13.9Android支持的媒体格式600
13.10ID3信息简述602
13.11Android多媒体文件管理606
第3篇应用原理篇
第14章Intent的匹配规则616
第15章APK应用程序的资源适配628
第16章Android字符编码格式650
第17章Android和OpenGLES660
第18章“系统的UI”——SystemUI685
第19章Android常用的工具
第20章Android应用程序的编译和打包707
第21章Android虚拟机725
21.1Android虚拟机基础知识725
21.1.1Java虚拟机核心概念725
21.1.2LLVM编译器框架734
21.1.3Android中的经典垃圾回收算法736
21.1.4Art和Dalvik之争738
21.1.5Art虚拟机整体框架741
21.1.6Android应用程序与虚拟机742
21.1.7ProcedureCallStandardforArmArchitecture（过程调用标准）744
21.1.8C++11标准中的新特性746
21.2Android虚拟机核心文件格式—Dex字节码749
21.3Android虚拟机核心文件格式—可执行文件的基石ELF756
21.3.1ELF文件格式756
21.3.2Linux平台下ELF文件的加载和动态链接过程764
21.3.3AndroidLinker和动态链接库771
21.3.4SignalHandler和FaultManager782
21.4Android虚拟机核心文件格式——“主宰者”OAT786
21.4.1OAT文件格式解析786
21.4.2OAT的两个编译时机793
21.5Android虚拟机的典型启动流程806
21.6堆管理器和堆空间释义815
21.7Android虚拟机中的线程管理823
21.7.1Java线程的创建过程823
21.7.2线程的挂起过程827
21.8Art虚拟机中的代码执行方式综述829
21.9Art虚拟机的“中枢系统”——执行引擎之Interpreter836
21.10Art虚拟机的“中枢系统”——执行引擎之JIT839
21.10.1JIT重出江湖的契机839
21.10.2AndroidN版本中JIT的设计目标及策略840
21.10.3ProfileGuidedCompilation（追踪技术）842
21.10.4AOTCompilationDaemon843
21.11Art虚拟机的“中枢系统”——执行引擎之本地代码844
21.12Androidx86版本兼容ARM二进制代码——NativeBridge864
21.13Android应用程序调试原理解析871
21.13.1Java代码调试与JDWP协议872
21.13.2Native代码调试879
21.13.3利用GDB调试AndroidArt虚拟机885
第22章Android安全机制透析887
22.1AndroidSecurity综述887
22.2SELinux889
22.2.1DAC889
22.2.2MAC890
22.2.3基于MAC的SELinux890
22.3Android系统安全保护的三重利剑892
22.3.1第一剑：Permission机制893
22.3.2加强剑：DAC（UGO）保护896
22.3.3终极剑：SEAndroid898
22.4SEAndroid剖析899
22.4.1SEAndroid的顶层模型899
22.4.2SEAndroid相关的核心源码900
22.4.3SEAndroid标签和规则901
22.4.4如何在Android系统中自定义SEAndroid903
22.4.5TE文件的语法规则905
22.4.6SEAndroid中的核心主体—init进程907
22.4.7SEAndroid中的客体912
22.5Android设备Root简析913
22.6APK的加固保护分析916
第4篇Android系统工具
第23章IDE和Gradle922
23.1Gradle的核心要点922
23.1.1Groovy与Gradle923
23.1.2Gradle的生命周期926
23.2Gradle的Console语法927
23.3GradleWrapper和Cache929
23.4AndroidStudio和Gradle931
23.4.1Gradle插件基础知识931
23.4.2AndroidStudio中的Gradle编译脚本932
第24章软件版本管理937
24.1版本管理简述937
24.2Git的安装937
24.2.1Linux环境下安装Git938
24.2.2Windows环境下安装Git939
24.3Git的使用939
24.3.1基础配置939
24.3.2新建仓库940
24.3.3文件状态942
24.3.4忽略某些文件943
24.3.5提交更新944
24.3.6其他命令944
24.4Git原理简析945
24.4.1分布式版本系统的特点946
24.4.2安全散列算法—SHA-1947
24.4.34个重要对象948
24.4.4三个区域953
24.4.5分支的概念与实例954
第25章系统调试辅助工具958
25.1万能模拟器——Emulator958
25.1.1QEMU958
25.1.2Android工程中的QEMU963
25.1.3模拟器控制台（EmulatorConsole）966
25.1.4实例：为Android模拟器添加串口功能969
25.2此Android非彼Android970
25.3快速建立与模拟器或真机的通信渠道——ADB972
25.3.1ADB的使用方法972
25.3.2ADB的组成元素975
25.3.3ADB源代码解析976
25.3.4ADBProtocol981
25.4SDKLayoutlib984
25.5TraceView和Dmtracedump985
25.6Systrace987
25.7代码覆盖率统计992
25.8模拟GPS位置995
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入理解Android内核设计思想（第2版 套装上下册）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android群英传
第1章  Android体系与系统架构	1
1.1  Google生态系统	2
1.2  Android系统架构	2
1.2.1  Linux	3
1.2.2  Dalvik与ART	3
1.2.3  Framework	3
1.2.4  Standard libraries	4
1.2.5  Application	4
1.3  Android App组件架构	4
1.3.1  Android四大组件如何协同工作	5
1.3.2  应用运行上下文对象	5
1.4  Android系统源代码目录与系统目录	6
1.4.1  Android系统源代码目录	6
1.4.2  Android系统目录	8
1.4.3  Android App文件目录	11
第2章  Android开发工具新接触	13
2.1  Android开发IDE介绍	14
2.1.1  Android Studio初体验	14
2.1.2  Android Studio配置	15
2.2  Android Studio高级使用技巧	19
2.2.1  更新SDK	20
2.2.2  Android Studio常用界面	21
2.2.3  导入Android Studio工程	23
2.3  ADB命令使用技巧	24
2.3.1  ADB基础	24
2.3.2  ADB常用命令	25
2.3.3  ADB命令来源	29
2.4  模拟器使用与配置	29
第3章  Android控件架构与自定义控件详解	32
3.1  Android控件架构	33
3.2  View的测量	34
3.3  View的绘制	37
3.4  ViewGroup的测量	38
3.5  ViewGroup的绘制	39
3.6  自定义View	39
3.6.1  对现有控件进行拓展	40
3.6.2  创建复合控件	43
3.6.3  重写View来实现全新的控件	51
3.7  自定义ViewGroup	54
3.8  事件拦截机制分析	59
第4章  ListView使用技巧	65
4.1  ListView常用优化技巧	66
4.1.1  使用ViewHolder模式提高效率	66
4.1.2  设置项目间分隔线	68
4.1.3  隐藏ListView的滚动条	68
4.1.4  取消ListView的Item点击效果	68
4.1.5  设置ListView需要显示在第几项	69
4.1.6  动态修改ListView	69
4.1.7  遍历ListView中的所有Item	71
4.1.8  处理空ListView	71
4.1.9  ListView滑动监听	72
4.2  ListView常用拓展	74
4.2.1  具有弹性的ListView	75
4.2.2  自动显示、隐藏布局的ListView	76
4.2.3  聊天ListView	79
4.2.4  动态改变ListView布局	85
第5章  Android Scroll分析	87
5.1  滑动效果是如何产生的	88
5.1.1  Android坐标系	88
5.1.2  视图坐标系	88
5.1.3  触控事件——MotionEvent	89
5.2  实现滑动的七种方法	91
5.2.1  layout方法	92
5.2.2  offsetLeftAndRight()与offsetTopAndBottom()	93
5.2.3  LayoutParams	93
5.2.4  scrollTo与scrollBy	94
5.2.5  Scroller	96
5.2.6  属性动画	98
5.2.7  ViewDragHelper	98
第6章  Android绘图机制与处理技巧	106
6.1  屏幕的尺寸信息	107
6.1.1  屏幕参数	107
6.1.2  系统屏幕密度	107
6.1.3  独立像素密度dp	107
6.1.4  单位转换	108
6.2  2D绘图基础	110
6.3  Android XML绘图	113
6.3.1  Bitmap	113
6.3.2  Shape	113
6.3.3  Layer	115
6.3.4  Selector	116
6.4  Android绘图技巧	117
6.4.1  Canvas	117
6.4.2  Layer图层	121
6.5  Android图像处理之色彩特效处理	122
6.5.1  色彩矩阵分析	122
6.5.2  Android颜色矩阵——ColorMatrix	128
6.5.3  常用图像颜色矩阵处理效果	131
6.5.4  像素点分析	134
6.5.5  常用图像像素点处理效果	135
6.6  Android图像处理之图形特效处理	137
6.6.1  Android变形矩阵——Matrix	137
6.6.2  像素块分析	142
6.7  Android图像处理之画笔特效处理	145
6.7.1  PorterDuffXfermode	145
6.7.2  Shader	149
6.7.3  PathEffect	153
6.8  View之孪生兄弟——SurfaceView	155
6.8.1  SurfaceView与View的区别	155
6.8.2  SurfaceView的使用	156
6.8.3  SurfaceView实例	159
第7章  Android动画机制与使用技巧	162
7.1  Android View动画框架	163
7.1.1  透明度动画	163
7.1.2  旋转动画	163
7.1.3  位移动画	164
7.1.4  缩放动画	164
7.1.5  动画集合	164
7.2  Android属性动画分析	165
7.2.1  ObjectAnimator	166
7.2.2  PropertyValuesHolder	168
7.2.3  ValueAnimator	168
7.2.4  动画事件的监听	168
7.2.5  AnimatorSet	169
7.2.6  在XML中使用属性动画	170
7.2.7  View的animate方法	170
7.3  Android布局动画	171
7.4  Interpolators（插值器）	171
7.5  自定义动画	172
7.6  Android 5.X SVG矢量动画机制	175
7.6.1  ＜path＞标签	175
7.6.2  SVG常用指令	176
7.6.3  SVG编辑器	177
7.6.4  Android中使用SVG	177
7.6.5  SVG动画实例	181
7.7  Android动画特效	188
7.7.1  灵动菜单	188
7.7.2  计时器动画	190
7.7.3  下拉展开动画	191
第8章  Activity与Activity调用栈分析	195
8.1  Activity	196
8.1.1  起源	196
8.1.2  Activity形态	196
8.1.3  生命周期	196
8.2  Android任务栈简介	200
8.3  AndroidMainifest启动模式	200
8.3.1  standard	201
8.3.2  singleTop	201
8.3.3  singleTask	201
8.3.4  singleInstance	202
8.4  Intent Flag启动模式	203
8.5  清空任务栈	203
8.6  Activity任务栈使用	204
第9章  Android系统信息与安全机制	205
9.1  Android系统信息获取	206
9.1.1  android.os.Build	206
9.1.2  SystemProperty	207
9.1.3  Android系统信息实例	208
9.2  Android Apk应用信息获取之PackageManager	209
9.2.1  PackageManager	210
9.3  Android Apk应用信息获取之ActivityManager	215
9.4  解析Packages.xml获取系统信息	218
9.5  Android安全机制	220
9.5.1  Android安全机制简介	220
9.5.2  Android系统安全隐患	222
9.5.3  Android Apk反编译	223
9.5.4  Android Apk加密	226
第10章  Android性能优化	227
10.1  布局优化	228
10.1.1  Android UI渲染机制	228
10.1.2  避免Overdraw	229
10.1.3  优化布局层级	229
10.1.4  避免嵌套过多无用布局	229
10.1.5  Hierarchy Viewer	234
10.2  内存优化	236
10.2.1  什么是内存	236
10.2.2  获取Android系统内存信息	237
10.2.3  内存回收	238
10.2.4  内存优化实例	238
10.3  Lint工具	240
10.4  使用Android Studio的Memory Monitor工具	240
10.5  使用TraceView工具优化App性能	241
10.5.1  生成TraceView日志的两种方法	241
10.5.2  打开TraceView日志	242
10.5.3  分析TraceView日志	242
10.6  使用MAT工具分析App内存状态	244
10.6.1  生成HPROF文件	244
10.6.2  分析HPROF文件	245
10.7  使用Dumpsys命令分析系统状态	247
第11章  搭建云端服务器	248
11.1  移动后端服务介绍	249
11.2  使用Bmob创建移动后端服务	250
11.2.1  数据服务	251
11.2.2  推送服务	254
第12章  Android 5.X新特性详解	257
12.1  Android 5.X UI设计初步	258
12.1.1  材料的形态模拟	258
12.1.2  更加真实的动画	258
12.1.3  大色块的使用	259
12.2  Material Design主题	260
12.3  Palette	261
12.4  视图与阴影	263
12.5  Tinting和Clipping	265
12.5.1  Tinting（着色）	265
12.5.2  Clipping（裁剪）	267
12.6  列表与卡片	269
12.6.1  RecyclerView	269
12.6.2  CardView	275
12.7  Activity过渡动画	276
12.8  Material Design 动画效果	283
12.8.1  Ripple效果	283
12.8.2  Circular Reveal	285
12.8.3  View state changes Animation	288
12.9  Toolbar	293
12.10  Notification	296
12.10.1  基本的Notification	297
12.10.2  折叠式Notification	298
12.10.3  悬挂式Notification	300
12.10.4  显示等级的Notification	301
第13章  Android实例提高	303
13.1  移动迷宫——拼图游戏	304
13.1.1  准备工作	305
13.1.2  初始界面	307
13.1.3  拼图界面	312
13.1.4  效果预览与功能进阶	324
13.2  魔幻矩阵——2048	325
13.2.1  2048概述	325
13.2.2  2048游戏分析	326
13.2.3  2048初始化工作	327
13.2.4  小方块设计	328
13.2.5  全局设置	330
13.2.6  游戏面板设计	332
13.2.7  主程序设计	340
13.2.8  功能进阶	341
13.3  实战经验总结	342
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android群英传
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android移动性能实战
第 1 部分　资源类性能
第 1 章　磁盘：最容易被忽略的性能洼地  2
1.1　原理  2
1.2　工具集  6
1.3　案例 A：手机 QQ 启动有 10 次重复读写 /proc/cpuinfo  16
1.4　案例 B：对于系统 API，只知其一造成重复写入  18
1.5　案例 C：手机 QQ 启动场景下主线程写文件  19
1.6　案例 D：Object Output Stream 4000 多次的写操作  20
1.7　案例 E：手机 QQ“健康中心”使用的 Buffer 太小  22
1.8　案例 F：手机 QQ 解压文件使用的 Buffer 太小  24
1.9　案例 G：刚创建好表，就做大量的查询操作  37
1.10 案例 H：重复打开数据库  39
1.11 案例 I：AUTOINCREMENT 可没有你想的那么简单  40
1.12 案例 J：Bitmap 解码，Google 没有告诉你的方面  45
1.13 专项标准：磁盘  48
第 2 章　内存：性能优化的终结者  50
2.1　原理  50
2.2　工具集  57
2.3　案例 A：内类是有危险的编码方式  103
2.4　案例 B：使用统一界面绘制服务的内存问题  106
2.5　案例 C：结构化消息点击通知产生的内存问题  109
2.6　案例 D：为了不卡，所以可能泄漏  110
2.7　案例 E：登录界面有内存问题吗  114
2.8　案例 F：使用 WifiManager 的内存问题  116
2.9　案例 G：把 WebView 类型泄漏装进垃圾桶进程  120
2.10 案例 H：定时器的内存问题  123
2.11 案例 I：FrameLayout.POSTDELAY 触发的内存问题  126
2.12 案例 J：关于图片解码配色设置的建议  129
2.13 案例 K：图片放错资源目录也会有内存问题  134
2.14 案例 L：寻找多余的内存——重复的头像  139
2.15 案例 M：大家伙要怎么才能进入小车库  144
2.16 Android 要纠正内存世界观了  149
2.17 专项标准：内存  152
第 3 章　网络：性能优化中的不可控因素  154
3.1　原理  154
3.2　工具集  157
3.3　案例 A：WebView 缓存使用中的坑  189
3.4　案例 B：离线包下载失败导致重复下载  196
3.5　案例 C：使用压缩策略优化资源流量  197
3.6　案例 D：手机 QQ 发图速度优化  202
3.7　案例 E：手机 QQ 在弱网下 PTT 重复发送  206
3.8　专项标准：网络  208
第 4 章　CPU：速度与负载的博弈  210
4.1　原理  210
4.2　工具集  211
4.3　案例 A：音乐播放后台的卡顿问题  215
4.4　案例 B：要注意 Android Java 中提供的低效 API  216
4.5　案例 C：用神器 renderscript 来减少你图像处理的 CPU 消耗  218
4.6　专项标准：CPU  220
第 5 章　电池：它只是结果不是原因221
5.1　原理  221
5.2　工具集  226
5.3　案例 A：QQWi-Fi 耗电  243
5.4　案例 B：QQ 数据上报逻辑优化  244
5.5　案例 C：动画没有及时释放  245
5.6　案例 D：间接调用 WakeLock 没有及时释放  246
5.7　案例 E：带兼容性属性的 WakeLock 释放的巨坑 251
5.8　专项标准：电池  253
第 2 部分　交互类性能
第 6 章　原理与工具集 255
6.1　原理  255
6.2　工具集  257
6.2.1　Perfbox 自研工具：Scrolltest  257
6.2.2　Systrace（分析）  260
6.2.3　Trace View（分析）  269
6.2.4　gfxinfo（分析）  271
6.2.5　Intel 的性能测试工具：UxTune（测评 + 分析）  273
6.2.6　Hierarchy Viewer（分析）  274
6.2.7　Slickr（测评 + 分析）  277
6.2.8　图形引擎分析神器——Adreno Profiler 工具使用说明  281
6.2.9　Chrome DevTool  286
第 7 章　流畅度：没有最流畅，只有更流畅 295
7.1　案例 A：红米手机 QQ 上的手机消息列表卡顿问题  295
7.2　案例 B：硬件加速中文字体渲染的坑  298
7.3　案例 C：圆角的前世今生  304
7.4　案例 D：让企鹅更优雅地传递火炬  312
7.5　案例 E：H5 页面卡顿，到底是谁闯的祸  314
7.6  专项标准：流畅度      320
第 8 章　响应时延：别让用户等待  322
8.1　案例 A：Android 应用发生黑屏的场景分析  322
8.2　案例 B：“首次打开聊天窗口”之痛  324
8.3　专项标准：响应时延  328
第 3 部分　其他事项
第 9 章　还应该知道的一些事儿  330
9.1　UI 自动化测试  330
9.2　专项竞品测试攻略  334
9.3　未来的未来  344
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android移动性能实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android基础教程
第一部分　Android简介
第1章　快速入门
1.1　安装工具
1.1.1　Java 5.0+
1.1.2　Eclipse
1.1.3　Android
1.1.4　Eclipse插件
1.2　创建第一个程序
1.3　在模拟器上运行程序
1.4　在手机上运行程序
1.5　快速阅读指南
第2章　基本概念
2.1　Android的系统架构
2.1.1　Linux内核
2.1.2　本机库
2.1.3　Android运行时
2.1.4　应用程序框架
2.1.5　应用程序
2.2　它还活着
2.2.1　进程不等于应用程序
2.2.2　应用程序生命周期
2.3　构建块
2.3.1　活动
2.3.2　意图
2.3.3　服务
2.3.4　内容提供者
2.4　使用资源
2.5　安全性
2.6　快速阅读指南
第二部分　Android基础知识
第3章　设计用户界面
3.1　数独游戏简介
3.2　声明性设计
3.3　创建启动界面
3.4　使用替代资源
3.5　实现About对话框
3.6　应用主题
3.7　添加菜单
3.8　添加设置
3.9　开始新游戏
3.10　利用日志消息调试程序
3.11　利用调试器调试程序
3.12　退出游戏
3.13　快速阅读指南
第4章　绘制2D图形
4.1　Android图形基础
4.1.1　Color类
4.1.2　Paint类
4.1.3　Canvas类
4.1.4　Path类
4.1.5　Drawable类
4.2　在Sudoku程序中添加图形
4.2.1　开始游戏
4.2.2　定义Game类
4.2.3　定义PuzzleView类
4.2.4　绘制游戏盘面
4.2.5　绘制数字
4.3　处理输入
4.3.1　定义和更新选定区域
4.3.2　输入数字
4.3.3　增加提示
4.3.4　抖动屏幕
4.4　其他问题
4.4.1　创建软键盘
4.4.2　实现游戏逻辑
4.4.3　其他功能
4.5　更多改进
4.6　快速阅读指南
第5章　多媒体
5.1　播放音频
5.2　播放视频
5.3　为数独游戏配上音乐
5.4　快速阅读指南
第6章　存储本地数据
6.1　为数独游戏添加选项
6.2　继续玩前一个游戏
6.3　记住当前位置
6.4　访问内部文件系统
6.5　访问SD卡
6.6　快速阅读指南
第三部分　高级主题
第7章　互联的世界
7.1　通过意图实现浏览
7.2　利用视图打开网页
7.3　JavaScript与Java通信
7.4　使用Web服务
7.5　快速阅读指南
第8章　定位与环境感知
8.1　位置，位置，位置
8.1.1　我在哪里
8.1.2　更新位置
8.1.3　模拟说明
8.2　充分利用传感器
8.2.1　了解传感器
8.2.2　解析传感器的读数
8.2.3　模拟说明
8.3　地图功能
8.3.1　嵌入MapView
8.3.2　准备就绪
8.3.3　模拟说明
8.4　快速阅读指南
第9章　SQL实战
9.1　SQLite简介
9.2　SQL基础
9.2.1　DDL语句
9.2.2　修改语句
9.2.3　查询语句
9.3　你好，数据库
9.3.1　使用SQliteOpenHelper
9.3.2　定义主程序
9.3.3　添加一行
9.3.4　运行一个查询
9.3.5　显示查询结果
9.4　数据绑定
9.5　使用ContentProvider
9.5.1　更改主程序
9.5.2　添加一行
9.5.3　运行一个查询
9.6　实现ContentProvider
9.7　快速阅读指南
第10章　利用OpenGL实现3D图形
10.1　理解3D图形
10.2　OpenGL简介
10.3　构建一个OpenGL程序
10.4　管理线程
10.5　构建一个模型
10.6　光线、相机
10.7　动作
10.8　应用纹理
10.9　透明效果
10.10　快速阅读指南
第四部分　附录
附录A　Java与Android语言及其API
附录B　参考书目
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android基础教程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android安全攻防权威指南
第1章　纵观Android生态圈　　1
1.1 了解Android的根源　　1
1.1.1 公司历史　　1
1.1.2 版本历史　　2
1.1.3 审视Android设备家族　　3
1.1.4 主体开源　　5
1.2 了解Android的利益相关者　　6
1.2.1 谷歌　　7
1.2.2 硬件厂商　　7
1.2.3 移动通信运营商　　9
1.2.4 开发者　　9
1.2.5 用户　　10
1.3 理解生态圈的复杂性　　11
1.3.1 碎片化问题　　12
1.3.2 兼容性　　13
1.3.3 更新问题　　13
1.3.4 安全性与开放性　　15
1.3.5 公开披露　　16
1.4 小结　　17
第2章　Android的安全设计与架构　　18
2.1 理解Android系统架构　　18
2.2 理解安全边界和安全策略执行　　19
2.2.1 Android沙箱　　19
2.2.2 Android权限　　22
2.3 深入理解各个层次　　25
2.3.1 Android应用层　　25
2.3.2 Android框架层　　28
2.3.3 DalvikVM　　29
2.3.4 用户空间原生代码层　　30
2.3.5 内核　　36
2.4 复杂的安全性，复杂的漏洞利用　　41
2.5 小结　　42
第3章　root Android设备　　43
3.1 理解分区布局　　43
3.2 理解引导过程　　45
3.3 引导加载程序的锁定与解锁　　47
3.4 对未加锁引导加载程序的设备进行root　　50
3.5 对锁定引导加载程序的设备进行root　　52
3.5.1 在已启动系统中获取root权限　　52
3.5.2 NAND 锁、临时性root与永久性root　　53
3.5.3 对软root 进行持久化　　55
3.6 历史上的一些已知攻击　　56
3.6.1 内核：Wunderbar/asroot　　56
3.6.2 恢复：Volez　　57
3.6.3 udev：Exploid　　57
3.6.4 adbd：RageAgainstTheCage　　58
3.6.5 Zygote：Zimperlich和Zysploit　　58
3.6.6 ashmem：KillingInTheName-
Of 和psneuter　　58
3.6.7 vold：GingerBreak　　59
3.6.8 PowerVR：levitator　　59
3.6.9 libsysutils：zergRush　　60
3.6.10 内核：mempodroid　　60
3.6.11 文件权限和符号链接相关的攻击　　61
3.6.12 adb 恢复过程竞争条件漏洞　　61
3.6.13 Exynos4：exynos-abuse　　62
3.6.14 Diag：lit/diaggetroot　　62
3.7 小结　　63
第4章　应用安全性评估　　64
4.1 普遍性安全问题　　64
4.1.1 应用权限问题　　64
4.1.2 敏感数据的不安全传输　　66
4.1.3 不安全的数据存储　　67
4.1.4 通过日志的信息泄露　　68
4.1.5 不安全的IPC端点　　69
4.2 案例分析：移动安全应用　　71
4.2.1 初步剖析　　71
4.2.2 静态分析　　72
4.2.3 动态分析　　87
4.2.4 攻击　　95
4.3 案例分析：SIP客户端　　97
4.3.1 了解Drozer　　97
4.3.2 发现漏洞　　98
4.3.3 snarfing　　99
4.3.4 注入　　102
4.4 小结　　104
第5章　理解Android的攻击面　　105
5.1 攻击基础术语　　105
5.1.1 攻击向量　　106
5.1.2 攻击面　　106
5.2 对攻击面进行分类　　107
5.2.1 攻击面属性　　108
5.2.2 分类决策　　108
5.3 远程攻击面　　108
5.3.1 网络概念　　109
5.3.2 网络协议栈　　112
5.3.3 暴露的网络服务　　113
5.3.4 移动技术　　114
5.3.5 客户端攻击面　　115
5.3.6 谷歌的基础设施　　119
5.4 物理相邻　　123
5.4.1 无线通信　　123
5.4.2 其他技术　　127
5.5 本地攻击面　　128
5.5.1 探索文件系统　　128
5.5.2 找到其他的本地攻击面　　129
5.6 物理攻击面　　133
5.6.1 拆解设备　　133
5.6.2 USB　　134
5.6.3 其他物理攻击面　　137
5.7 第三方修改　　137
5.8 小结　　137
第6章　使用模糊测试来挖掘漏洞　　139
6.1 模糊测试的背景　　139
6.1.1 选定目标　　140
6.1.2 构造畸形输入　　140
6.1.3 处理输入　　141
6.1.4 监控结果　　142
6.2 Android上的模糊测试　　142
6.3 对Broadcast Receiver进行模糊测试　　143
6.3.1 选定目标　　143
6.3.2 生成输入　　144
6.3.3 传递输入　　145
6.3.4 监控测试　　145
6.4 对Android上的Chrome进行模糊测试　　147
6.4.1 选择一种技术作为目标　　148
6.4.2 生成输入　　149
6.4.3 处理输入　　151
6.4.4 监控测试　　152
6.5 对USB攻击面进行模糊测试　　155
6.5.1 对USB进行模糊测试的挑战　　155
6.5.2 选定目标模式　　155
6.5.3 生成输入　　156
6.5.4 处理输入　　158
6.5.5 监控测试　　158
6.6 小结　　159
第7章　调试与分析安全漏洞　　161
7.1 获取所有信息　　161
7.2 选择一套工具链　　162
7.3 调试崩溃Dump　　163
7.3.1 系统日志　　163
7.3.2 Tombstone　　164
7.4 远程调试　　165
7.5 调试Dalvik代码　　166
7.5.1 调试示例应用　　167
7.5.2 显示框架层源代码　　168
7.5.3 调试现有代码　　170
7.6 调试原生代码　　173
7.6.1 使用NDK进行调试　　174
7.6.2 使用Eclipse进行调试　　177
7.6.3 使用AOSP进行调试　　179
7.6.4 提升自动化程度　　183
7.6.5 使用符号进行调试　　184
7.6.6 调试非AOSP设备　　189
7.7 调试混合代码　　190
7.8 其他调试技术　　191
7.8.1 调试语句　　191
7.8.2 在设备上进行调试　　191
7.8.3 动态二进制注入　　192
7.9 漏洞分析　　193
7.9.1 明确问题根源　　193
7.9.2 判断漏洞可利用性　　205
7.10 小结　　205
第8章　用户态软件的漏洞利用　　206
8.1 内存破坏漏洞基础　　206
8.1.1 栈缓冲区溢出　　206
8.1.2 堆的漏洞利用　　209
8.2 公开的漏洞利用　　215
8.2.1 GingerBreak　　215
8.2.2 zergRush　　218
8.2.3 Mempodroid　　221
8.3 Android浏览器漏洞利用　　222
8.3.1 理解漏洞　　222
8.3.2 控制堆　　224
8.4 小结　　227
第9章　ROP漏洞利用技术　　228
9.1 历史和动机　　228
9.2 ARM 架构下的ROP 基础　　230
9.2.1 ARM 子函数调用　　231
9.2.2 将gadget组成ROP链　　232
9.2.3 识别潜在的gadget　　234
9.3 案例分析：Android 4.0.1链接器　　235
9.3.1 迁移栈指针　　236
9.3.2 在新映射内存中执行任意代码　　237
9.4 小结　　240
第10章　攻击内核　　242
10.1 Android 的Linux内核　　242
10.2 内核提取　　242
10.2.1 从出厂固件中提取内核　　243
10.2.2 从设备中提取内核　　245
10.2.3 从启动镜像中提取内核　　246
10.2.4 解压内核　　247
10.3 运行自定义内核代码　　247
10.3.1 获取源代码　　247
10.3.2 搭建编译环境　　250
10.3.3 配置内核　　251
10.3.4 使用自定义内核模块　　252
10.3.5 编译自定义内核　　254
10.3.6 制作引导镜像　　257
10.3.7 引导自定义内核　　258
10.4 调试内核　　262
10.4.1 获取内核崩溃报告　　263
10.4.2 理解Oops信息　　264
10.4.3 使用KGDB进行Live调试　　267
10.5 内核漏洞利用　　271
10.5.1 典型Android内核　　271
10.5.2 获取地址　　273
10.5.3 案例分析　　274
10.6 小结　　283
第11章　攻击RIL无线接口层　　284
11.1 RIL简介　　284
11.1.1 RIL架构　　285
11.1.2 智能手机架构　　285
11.1.3 Android电话栈　　286
11.1.4 对电话栈的定制　　287
11.1.5 RIL 守护程序　　287
11.1.6 用于vendor-ril的API　　289
11.2 短信服务　　290
11.2.1 SMS消息的收发　　290
11.2.2 SMS消息格式　　291
11.3 与调制解调器进行交互　　293
11.3.1 模拟调制解调器用于模糊测试　　293
11.3.2 在Android中对SMS进行模糊测试　　295
11.4 小结　　302
第12章　漏洞利用缓解技术　　303
12.1 缓解技术的分类　　303
12.2 代码签名　　304
12.3 加固堆缓冲区　　305
12.4 防止整数溢出　　305
12.5 阻止数据执行　　306
12.6 地址空间布局随机化　　308
12.7 保护栈　　310
12.8 保护格式化字符串　　310
12.9 只读重定位表　　312
12.10 沙盒　　313
12.11 增强源代码　　313
12.12 访问控制机制　　315
12.13 保护内核　　316
12.13.1 指针和日志限制　　316
12.13.2 保护零地址页　　317
12.13.3 只读的内存区域　　318
12.14 其他加固措施　　318
12.15 漏洞利用缓解技术总结　　320
12.16 禁用缓解机制　　322
12.16.1 更改personality　　322
12.16.2 修改二进制文件　　323
12.16.3 调整内核　　323
12.17 对抗缓解技术　　323
12.17.1 对抗栈保护　　324
12.17.2 对抗ASLR　　324
12.17.3 对抗数据执行保护　　324
12.17.4 对抗内核级保护机制　　325
12.18 展望未来　　325
12.18.1 进行中的官方项目　　325
12.18.2 社区的内核加固工作　　326
12.18.3 一些预测　　326
12.19 小结　　327
第13章　硬件层的攻击　　328
13.1 设备的硬件接口　　328
13.1.1 UART 串行接口　　329
13.1.2 I2C、SPI 和单总线接口　　331
13.1.3 JTAG　　334
13.1.4 寻找调试接口　　343
13.2 识别组件　　353
13.2.1 获得规格说明书　　353
13.2.2 难以识别的组件　　354
13.3 拦截、监听和劫持数据　　355
13.3.1 USB　　355
13.3.2 I2C、SPI和UART串行端口　　359
13.4 窃取机密和固件　　364
13.4.1 无损地获得固件　　364
13.4.2 有损地获取固件　　365
13.4.3 拿到dump文件后怎么做　　368
13.5 陷阱　　371
13.5.1 定制的接口　　371
13.5.2 二进制私有数据格式　　371
13.5.3 熔断调试接口　　372
13.5.4 芯片密码　　372
13.5.5 bootloader密码、热键和哑终端　　372
13.5.6 已定制的引导过程　　373
13.5.7 未暴露的地址线　　373
13.5.8 防止逆向的环氧树脂　　373
13.5.9 镜像加密、混淆和反调试　　373
13.6 小结　　374
附录A　工具　　375
附录B　开源代码库　　386
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android安全攻防权威指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>大话移动APP测试：Android与 iOS应用测试指南
《大话移动app测试：android与 ios应用测试指南》
第1章 移动互联网面试 1
1.1 为什么要面试 2
1.2 面试的流程 2
1.3 面试的频率 3
1.4 面试实战 3
1.5 如何正确地招聘测试人员 8
1.6 移动互联网测试招聘现状 12
1.7 大公司和小公司 13
1.7.1 故事一 14
1.7.2 故事二 15
1.8 测试外包 16
1.9 小结 17
第2章 病态的现状 19
2.1 全民挖金 20
2.2 别人的嫁衣 22
2.2.1 talkbox 23
2.2.2 米聊 23
2.2.3 飞信 24
2.3 超越光速的迭代 25
2.4 可怜的测试团队 27
2.5 敏捷中毒 28
2.6 无力的测试 29
2.7 浮躁的测试工程师们 31
2.7.1 社交中毒 31
2.7.2 失去自理能力 32
2.7.3 不能正确认识自己的价值 33
2.8 测试沙龙和培训 34
2.9 学会自我尊重 35
2.10 小结 36
第3章 用户体验测试 37
3.1 移动互联网与传统互联网体验上的区别 38
3.1.1 区别一——用户关注点 38
3.1.2 区别二——场合复杂化 39
3.1.3 区别三——时间碎片化 39
3.1.4 区别四——输入困难化 39
3.2 android vs ios 40
3.2.1 桌面 40
3.2.2 联系人 41
3.2.3 短信 43
3.2.4 历史应用 43
3.2.5 相册 44
3.2.6 其他 46
3.3 “愚笨”的用户——用户引导 47
3.4 “捣乱”的用户——应用容错 52
3.4.1 注册与登录 52
3.4.2 断网引发的问题 54
3.5 专业精神——风格一致性 57
3.5.1 应用与系统风格一致 58
3.5.2 应用本身风格一致 59
3.6 “我”即最终用户：过程体验测试 60
3.7 使用更多的应用：对比体验测试 65
3.8 模拟场景体验测试 66
3.8.1 应用一：智能手机输入法 67
3.8.2 应用二：智能机顶盒 68
3.9 用户究竟关心什么？ 69
3.9.1 用户只关心应用能在自己手机上正常运行 69
3.9.2 用户隐私权限 70
3.9.3 简洁、方便 71
3.9.4 消耗 71
3.9.5 好不好用 72
3.10 用户体验的问题是bug吗？ 72
3.11 如何提升自身的用户体验经验？ 73
3.12 小结 74
第4章 功能测试要点 75
4.1 多分辨率测试 76
4.2 多系统测试 77
4.3 用户不同的使用习惯 80
4.3.1 android权限问题 80
4.3.2 android硬件问题 81
4.3.3 android操作习惯 83
4.3.4 android数据的移动或清空 84
4.3.5 ios操作习惯 85
4.3.6 ios越狱问题 86
4.4 网络的不稳定性 88
4.5 安装/卸载测试 92
4.6 升级测试 94
4.6.1 增量升级 95
4.6.2 内置应用升级 96
4.7 并发测试 96
4.7.1 弹出框提示 96
4.7.2 另一个应用启动 97
4.7.3 关机或待机 98
4.7.4 功能冲突 98
4.7.5 可存储设备 98
4.8 数据来源 98
4.9 推送 100
4.10 分享跳转 102
4.11 小结 104
第5章 常用工具介绍和实践 105
5.1 monkey 106
5.1.1 第一个简单的monkey测试命令 106
5.1.2 monkey测试工具实例 107
5.1.3 monkey测试日志查看 108
5.1.4 monkey测试注意点 112
5.1.5 monkey工具再探索 114
5.2 emulator 115
5.2.1 模拟器和真机的差异 115
5.2.2 genymotion 118
5.2.3 模拟器常用功能举例 119
5.3 monkeyrunner 121
5.4 hierarchy viewer 126
5.5 ddms 129
5.6 compatibility test suite 133
5.7 tcpdump/wireshark 136
5.8 findbugs 138
5.9 lint 140
5.10 反编译、重编译 142
5.11 ant 146
5.12 charles 148
5.13 instruments 150
5.14 小结 153
第6章 常用框架介绍和实践 155
6.1 instrumentation 156
6.1.1 技巧一 158
6.1.2 技巧三 160
6.1.3 技巧三 161
6.2 emma code coverage 163
6.3 robolectric 173
6.4 小结 185
第7章 移动应用测试案例实践分析 187
7.1 深入了解被测试对象 188
7.2 多种数据来源 190
7.3 在生活中使用产品 193
7.4 社交应用分层设计实践案例 195
7.5 联系人搜索案例测试设计实践 204
7.6 小结 212
第8章 性能测试介绍和实践 215
8.1 emmagee 216
8.2 instrumentation 217
8.3 hprof 220
8.4 gfxinfo 223
8.5 systrace 225
8.6 traceview 226
8.7 instruments——leaks 229
8.8 android多分辨率自动化实践 233
8.9 小结 239
附录a 测试人员的自我修养（吐槽篇） 241
a.1 学会提出和解决问题 242
a.2 正确地自我审视 243
a.3 不要被业界世俗的讨论蒙蔽 245
a.4 寻找测试的本质 247
a.5 主观能动 248
a.6 你真的会使用搜索引擎吗 250
a.7 每天都要学习 252
a.8 学会判断轻重缓急 254
a.9 小结 254
附录b 测试行业常见问题（q&a篇） 255
q1：没有做过测试的人怎么入门？ 256
q2：测试工程师要具备什么能力？ 257
q3：测试比开发技术含量低吗？ 258
q4：参加测试培训能有多少提升？ 259
q5：黑盒测试有价值吗？ 260
q6：手动测试有价值吗？ 261
q7：怎么做移动互联网应用的自动化测试？ 261
q8：测试人员选择进入大公司还是小公司？ 263
q9：中国高校有软件测试专业吗？ 264
q10：小结 266
附录c 博客摘录 267
c.1 我们需要专职的qa吗？ 268
c.2 学习让测试更精彩，测试让生命更精彩 271
c.3 中国人的纠结 278
c.4 黑盒不是白盒的绊脚石 283
c.5 测试需要反省 283
c.6 《钝感力》有感——测试中的钝感力 286
后记 289
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>大话移动APP测试：Android与 iOS应用测试指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>cocos2d-x手机游戏开发
第1 章  智能手机操作系统介绍　　 1
1.1  iOS　　 2
1.1.1  iOS 常见特性　　 2
1.1.2  App Store 　　 3
1.2  Android　　　 3
1.2.1  Android 常见特性　　 3
1.2.2  Android 应用商城　　 4
1.3  其他手机操作系统　　 4
1.3.1  OPhone 　　 4
1.3.2  沃Phone 　　 4
1.3.3  LEOS 　　 5
1.4  总结　　 5
第2 章  游戏及游戏引擎介绍　　 6
2.1  游戏介绍　　 6
2.2  游戏引擎介绍　　 7
2.2.1  渲染引擎　　 8
2.2.2  物理引擎　　 8
2.2.3  周边工具　　10
2.3  总结　　 10
第3 章  进入cocos2d 的世界　　 11
3.1  cocos2d 介绍　　 11
3.2  cocos2d-iphone 介绍　　 12
3.3  cocos2d-x 介绍　　13
3.4  cocos2d-x 游戏分享　　 13
3.5  其他cocos2d 版本介绍　　 14
3.6  总结　　 15
第4 章  搭建跨平台的开发环境　　 16
4.1  环境说明　　 16
4.2  环境搭建　　 16
4.2.1  安装Visual Studio　　 17
4.2.2  安装Cygwin　　 19
4.2.3  安装iOS 环境　　 23
4.2.4  安装Android 环境　　 26
4.2.5  安装沃Phone 环境　　 28
4.2.6  安装cocos2d-x 引擎　　 35
4.3  环境测试之Hello World 案例　　 35
4.3.1  Windows 运行　　 36
4.3.2  iOS 运行　　 37
4.3.3  Andriod 运行　　 38
4.3.4  沃Phone 运行　　 38
4.4  总结　　 40
第5 章  cocos2d-x 引擎基础使用　　 41
5.1  整体架构　　 41
5.1.1  导演　　 44
5.1.2  摄像机　　 46
5.1.3  场景　　 47
5.1.4  布景　　 48
5.1.5  人物角色　　 49
5.1.6  动作　　51
5.2  目录结构　　 51
5.3  坐标体系　　 53
5.4  跨平台常量　　54
5.5  图形　　 55
5.6  动作　　 56
5.7  菜单　　 59
5.8  事件　　 60
5.9  变量自动释放　　 61
5.10  总结　　 62
第6 章  cocos2d-x 之高级特性　　 63
6.1  物理引擎　　63
6.1.1  世界　　 63
6.1.2  刚体及刚体定义　　 65
6.1.3  形状　　 65
6.1.4  关联及关联定义　　 66
6.1.5  链接及链接定义　　 66
6.1.6  使用案例　　 66
6.2  粒子系统　　 67
6.2.1  重力式粒子系统　　 71
6.2.2  放射式粒子系统　　 72
6.3  声音模块　　 74
6.4  总结　　 76
第7 章  cocos2d-x 之周边工具　　 77
7.1  沃Phone 应用程序打包工具　　 77
7.1.1  软件包设置　　 78
7.1.2  应用配置　　 80
7.1.3  添加支持文件　　 83
7.1.4  保存编译　　 83
7.2  图片编辑器　　 84
7.3  地图编辑工具　　 85
7.4  粒子系统设计工具　　 88
7.5  总结　　 90
第8 章  cocos2d-x 之交叉编译　　 91
8.1  交叉编译到iOS 平台　　 91
8.1.1  新建iOS 项目　　 91
8.1.2  交叉编译　　 93
8.1.3  打包运行　　 93
8.2  交叉编译到Android 平台　　 93
8.2.1  新建Android 项目　　 94
8.2.2  生成编译脚本　　 94
8.2.3  交叉编译　　96
8.2.4  打包运行　　96
8.3  交叉编译到沃Phone 平台　　97
8.3.1  新建沃Phone 项目　　 97
8.3.2  生成编译脚本　　 99
8.3.3  交叉编译　　101
8.3.4  打包运行　　102
8.4  总结　　102
第9 章  cocos2d-x 之实用篇　　 103
9.1  游戏社交平台　　103
9.2  手机广告平台　　104
9.3  推广墙平台　　105
9.4  技术准备　　105
9.4.1 cocos2d-x 调用Objective-C　　 106
9.4.2  cocos2d-x 调用Java 　　 107
9.5  案例实现　　111
9.5.1  场景分析　　111
9.5.2  环境准备　　111
9.5.3  游戏设计　　111
9.5.4  游戏实现　　112
9.5.5  场景总结　　125
9.6  总结　　125
第10 章  “魔塔”案例之基础篇　　 126
10.1  先熟悉一下游戏　　126
10.2  准备工作　　 126
10.3  绘制最简单的游戏地图　　127
10.4  人物行走　　130
10.5  碰撞检测　　144
10.6  总结　　146
第11 章  “魔塔”案例之高级篇　　147
11.1  重构代码　　147
11.1.1  分离场景和图层　　 147
11.1.2  分离游戏对象　　 149
11.1.3  小结　　 163
11.2  添加更多游戏元素　　 165
11.2.1  添加怪物　　 166
11.2.2  添加物品和门　　 175
11.2.3  添加对象层　　 179
11.2.4  小结　　188
11.3  总结　　189
第12 章  未来展望　　190
12.1  智能手机系统的发展趋势　　 190
12.1.1  iOS 的发展趋势　　 190
12.1.2  Android 的发展趋势　　191
12.1.3  沃Phone 的发展趋势　　191
12.2  手机游戏的发展趋势　　 192
12.2.1  手机单机游戏　　192
12.2.2  手机网络游戏　　 193
12.3  cocos2d-x 引擎的发展趋势　　 194
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>cocos2d-x手机游戏开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>打造高质量Android应用
《打造高质量android应用：android开发必知的50个诀窍》
推荐序
序
致谢
关于本书
关于原书封面插图
第1章　活用布局	1
hack 1　使用weight属性实现视图的居中显示	1
1.1　合用weightsum属性和layout_weight属性	2
1.2　概要	4
1.3　外部链接	4
hack 2　使用延迟加载以及避免代码重复	4
2.1　使用[include /]标签避免代码重复	5
2.2　通过viewstub实现view的延迟加载	7
2.3　概要	9
2.4　外部链接	9
hack 3　创建定制的viewgroup	10
3.1　理解android绘制视图的方式	11
3.2　创建cascadelayout	12
3.3　为子视图添加自定义属性	15
.3.4　概要	17
3.5　外部链接	17
hack 4　偏好设置使用技巧	17
4.1　概要	20
4.2　外部链接	20
第2章　添加悦目的动画效果	21
hack 5　使用textswitcher和imageswitcher实现平滑过渡	21
5.1　概要	23
5.2　外部链接	23
hack 6　为viewgroup的子视图添加悦目的动画效果	24
6.1　概要	26
6.2　外部链接	26
hack 7　在canvas上显示动画	26
7.1　概要	28
7.2　外部链接	28
hack 8　附加ken burns特效的幻灯片	29
8.1　概要	31
8.2　外部链接	31
第3章　使用视图的技巧和窍门	33
hack 9　避免在edittext中验证日期	33
9.1　概要	34
9.2　外部链接	35
hack 10　格式化textview的文本	35
10.1　概要	36
10.2　外部链接	37
hack 11　为文本添加发亮的效果	37
11.1　概要	39
11.2　外部链接	39
hack 12　为背景添加圆角边框	39
12.1　概要	40
12.2　外部链接	40
hack 13　在oncreate()方法中获取view的宽度和高度	40
13.1　概要	42
13.2　外部链接	42
hack 14　videoview的转屏处理技巧	42
14.1　概要	46
14.2　外部链接	46
hack 15　移除背景以提升activity启动速度	46
15.1　概要	48
15.2　外部链接	48
hack 16　更改toast显示位置的技巧	48
16.1　概要	50
16.2　外部链接	50
hack 17　使用gallery创建向导表单	50
17.1　概要	55
17.2　外部链接	55
第4章　实用工具	56
hack 18　在发布正式版本前移除日志语句	56
18.1　概要	57
18.2　外部链接	58
hack 19　使用hierarchy viewer工具移除不必要的视图	58
19.1　概要	62
19.2　外部链接	62
第5章　模式	63
hack 20　模型–视图–主导器模式	63
20.1　概要	66
20.2　外部链接	66
hack 21　与activity生命周期绑定的broadcastreceiver	66
21.1　概要	68
21.2　外部链接	68
hack 22　使用android库项目时适用的架构模式	69
22.1　后台逻辑和模型	69
22.2　库项目	70
22.3　android应用程序	71
22.4　概要	71
22.5　外部链接	72
hack 23　同步适配器模式	72
23.1　一般方法	72
23.2　我的方法	74
23.3　概要	89
23.4　外部链接	89
第6章　活用列表和适配器	91
hack 24　处理空列表	91
24.1　概要	92
24.2　外部链接	92
hack 25　通过viewholder优化适配器	93
25.1　概要	95
25.2　外部链接	95
hack 26　为listview添加分段标头	95
26.1　创建列表布局	97
26.2　创建可视分段标头	98
26.3　最后一步	99
26.4　概要	100
26.5　外部链接	100
hack 27　使用activity和delegate与适配器交互	101
27.1　概要	103
27.2　外部链接	103
hack 28　充分利用listview的头视图	103
28.1　概要	106
28.2　外部链接	106
hack 29　在viewpager中处理转屏	106
29.1　概要	108
29.2　外部链接	108
hack 30　listview的选择模式	108
30.1　概要	112
30.2　外部链接	113
第7章　实用库	114
hack 31　android面向切面编程	114
31.1　概要	118
31.2　外部链接	118
hack 32　使用cocos2d-x美化应用程序	118
32.1　cocos2d-x是什么	119
32.2　使用cocos2d-x	119
32.3　概要	123
32.4　外部链接	123
第8章　与其他编程语言交互	125
hack 33　在android上运行objective-c	125
33.1　下载并编译itoa	126
33.2　划分模块	127
33.3　创建java层代码	131
33.4　概要	132
33.5　外部链接	133
hack 34　在android中使用scala	133
34.1　概要	136
34.2　外部链接	137
第9章　可复用的代码片段	138
hack 35　同时发起多个intent	138
35.1　拍照	139
35.2　从相册中选择照片	139
35.3　整合两种intent	139
35.4　概要	140
35.5　外部链接	140
hack 36　在用户反馈中收集信息	140
36.1　概要	143
36.2　外部链接	143
hack 37　向media contentprovider添加mp3文件	143
37.1　使用contentvalues添加mp3文件	144
37.2　使用mediascanner添加mp3文件	144
37.3　概要	145
37.4　外部链接	145
hack 38　为actionbar添加刷新动作	145
38.1　概要	149
38.2　外部链接	149
hack 39　从market中获取依赖功能	149
39.1　概要	151
39.2　外部链接	152
hack 40　以后进先出方式加载图片	152
40.1　起点：android示例程序	152
40.2　引入executor	153
40.3　ui线程—离开返回的无缝衔接	155
40.4　注意事项	155
40.5　概要	155
40.6　外部链接	156
第10章　数据库进阶	157
hack 41　使用ormlite构建数据库	157
41.1　一个简单的数据模型	158
41.2　开始	159
41.3　坚如磐石的数据库schema	160
41.4　sqliteopenhelper——数据库通道	163
41.5　用于数据库访问的单例模式	165
41.6　crud操作一点通	166
41.7　查询构建器	167
41.8　数据类型和棘手的外部类型	169
41.9　原生sql查询	172
41.10　事务	174
41.11　概要	175
41.12　外部链接	176
hack 42　为sqlite添加自定义功能	176
42.1　java代码	177
42.2　native代码	178
42.3　概要	180
42.4　外部链接	180
hack 43　数据库批处理	181
43.1　不使用批处理操作	182
43.2　使用批处理操作	183
43.3　使用sqlitecontentprovider执行批处理操作	184
43.4　概要	186
43.5　外部链接	186
第11章　避免代码碎片化	187
hack 44　处理熄灯模式	187
44.1　android 2.x	188
44.2　android 3.x	189
44.3　在一个activity中整合两种实现	190
44.4　概要	190
44.5　外部链接	191
hack 45　在旧版本上使用新api	191
45.1　使用apply()替代commit()	191
45.2　将应用程序安装到sd卡中	194
45.3　概要	195
45.4　外部链接	195
hack 46　向后兼容的通知	196
46.1　概要	200
46.2　外部链接	200
hack 47　使用fragment创建tab	201
47.1　创建自定义tab的ui界面	201
47.2　在activity中放置tab	202
47.3　概要	203
47.4　外部链接	203
第12章　构建工具	204
hack 48　使用apache maven处理依赖关系	204
48.1　概要	208
48.2　外部链接	208
hack 49　在root过的设备上安装依赖库	209
49.1　dex预处理	211
49.2　创建与权限相关的xml文件	211
49.3　修改androidmanifest.xml文件	212
49.4　概要	212
49.5　外部链接	212
hack 50　使用jenkins处理设备多样性	213
50.1　创建jenkins job	215
50.2　运行job	217
50.3　概要	218
50.4　外部链接	219
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>打造高质量Android应用
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android开发精要
前言
致谢
第1章　Android的系统架构/1
1.1　Android系统架构概况/2
1.1.1　应用层/4
1.1.2　框架层/5
1.1.3　运行时/5
1.1.4　核心类库/7
1.1.5　硬件抽象层和Linux内核/7
1.2　Android的核心功能模块/8
1.2.1　界面框架/8
1.2.2　数据存储/9
1.2.3　网络通信/10
1.2.4　地理信息/11
1.2.5　图形和多媒体处理/11
1.2.6　外部设备/12
1.2.7　特色功能模块/13
1.3　Android的架构特征和设计思想/13
1.3.1　平台开放性/14
1.3.2　基于组件的应用设计/14
1.3.3　基于网络服务的平台/15
1.4　小结/15
第2章　Android源代码的下载和编译/16
2.1　Android源代码的获取和编译/17
2.1.1　环境搭建/18
2.1.2　源代码获取/18
2.1.3　源代码的编译/21
2.2　Android源代码结构/22
2.2.1　框架层源代码目录frameworks/22
2.2.2　应用层源代码目录packages/24
2.2.3　其他源代码目录/24
2.3　Android源代码的阅读和编辑/25
2.3.1　用Eclipse阅读源代码/25
2.3.2　反馈Bug/26
2.3.3　提交修改/27
2.4　小结/27
第3章　Android组件模型解析/28
3.1　基于Mashup的应用设计/29
3.1.1　Android中的Mashup/29
3.1.2　基于Mashup的Android应用模型/30
3.1.3　基于Mashup的应用架构特征/32
3.2　界面组件Activity解析/34
3.2.1　界面组件的功能和特征/34
3.2.2　界面组件的开发/35
3.2.3　界面组件的数据结构/39
3.3　服务组件Service解析/40
3.3.1　服务组件的功能和特征/41
3.3.2　服务组件的开发和使用/43
3.3.3　服务组件的进程间通信模型/45
3.4　触发器组件Broadcast Receiver解析/49
3.4.1　触发器组件的功能和特征/49
3.4.2　触发器组件的使用/50
3.4.3　广播事件的发送/52
3.5　数据源组件Content Provider解析/52
3.5.1　数据源组件的定位和操作/53
3.5.2　数据源组件的开发/55
3.5.3　数据源组件的实现细节/57
3.6　应用配置文件解析/59
3.6.1　权限配置/61
3.6.2　环境配置/63
3.6.3　应用和组件配置/65
3.7　小结/66
第4章　Android的Intent机制/67
4.1　Intent对象的作用和构成/68
4.1.1　Intent对象的作用/69
4.1.2　Intent对象的构成/70
4.1.3　Intent对象解析/75
4.1.4　Intent Filter对象/76
4.2　意图匹配/78
4.2.1　意图匹配的算法流程/79
4.2.2　匹配组件的选择/84
4.2.3　意图匹配的优化/85
4.3　意图机制的应用/86
4.3.1　意图机制在界面组件中的应用/86
4.3.2　意图机制在服务组件中的应用/88
4.3.3　意图机制在触发器组件中的应用/89
4.4　小结/90
第5章　组件生命周期解析/91
5.1　应用进程模型/92
5.1.1　应用、组件和进程/92
5.1.2　组件的应用进程配置/94
5.2　应用进程托管/96
5.2.1　为什么需要进程托管/97
5.2.2　进程优先级/97
5.2.3　进程回收算法/100
5.2.4　进程的强行终止/103
5.2.5　掌控进程的优先级/105
5.3　组件的生命周期模型/106
5.3.1　界面组件的生命周期/107
5.3.2　服务组件的生命周期/115
5.3.3　触发器组件的生命周期/119
5.3.4　数据源组件的生命周期/120
5.3.5　应用环境的生命周期/120
5.4　任务和界面组件栈/120
5.4.1　界面组件的运行模式/122
5.4.2　组件的任务黏度/126
5.4.3　实际应用中的任务控制/127
5.5　小结/128
第6章　组件间的数据传输/129
6.1　利用Intent对象进行数据传输/130
6.1.1　利用Intent对象回传数据/131
6.1.2　利用Intent对象传递数据的优缺点/133
6.2　利用文件进行数据共享/134
6.2.1　利用文件进行数据共享的实现/134
6.2.2　利用文件进行数据共享的优缺点/135
6.3　利用应用环境的全局数据共享/136
6.3.1　利用应用环境对象共享数据的实现/137
6.3.2　利用应用环境对象共享数据的优缺点/138
6.4　利用组件共享数据/139
6.4.1　利用数据源组件共享数据/139
6.4.2　利用服务组件共享数据/140
6.5　小结/140
第7章　Android控件解析/141
7.1　Android的控件框架/142
7.1.1　Android控件构成/142
7.1.2　Android交互事件传输/143
7.1.3　Android控件属性/145
7.1.4　控件的丈量和绘制/150
7.2　Android的窗口机制/150
7.2.1　窗口机制的基本原理/151
7.2.2　界面组件和窗口/152
7.2.3　对话框/154
7.2.4　弹出窗口/156
7.3　Android的基本控件介绍/158
7.3.1　文本控件/159
7.3.2　图像控件/163
7.3.3　Surface控件/164
7.3.4　Layout控件/164
7.3.5　适配器控件/167
7.3.6　选项卡控件/172
7.3.7　浏览器控件/173
7.4　自定义控件/175
7.4.1　控件的定制/175
7.4.2 　复合控件/180
7.4.3　自绘控件/183
7.5　Android界面新发展/188
7.5.1　动作栏/188
7.5.2　界面片段/191
7.5.3　重新定制选项卡/197
7.5.4　交互界面的适配/200
7.6　小结/204
第8章　应用资源/205
8.1　Android应用资源体系/206
8.1.1　Android的应用资源构成/206
8.1.2　应用资源的适配/208
8.1.3　应用资源的动态匹配/209
8.2　应用资源的调用/213
8.2.1　应用资源的编译和R类/213
8.2.2　应用资源的管理/215
8.2.3　使用应用资源/216
8.3　应用资源的类型/217
8.3.1　界面和样式/217
8.3.2　字符串和常量/221
8.3.3　图像、图形和动画/223
8.3.4　其他资源文件/225
8.4　小结/225
第9章　数据存储/226
9.1　Android的文件系统/227
9.1.1　Android的目录结构/229
9.1.2　Android的应用数据存储/229
9.1.3　Android的文件操作/231
9.2　使用设置文件/233
9.2.1　设置文件的存储和使用/234
9.2.2　设置界面组件/235
9.3　使用数据库/238
9.3.1　Android数据库实现/238
9.3.2　Android数据库的使用/240
9.4　存储在云端/243
9.4.1　云端存储的架构/244
9.4.2　云端存储的使用/245
9.5　小结/247
第10章　网络通信/248
10.1　Web通信/249
10.1.1　基于HTTP的网络连接/249
10.1.2　联网方式的选择/252
10.1.3　WiFi的管理/254
10.2　蓝牙/256
10.2.1　Android的蓝牙实现/256
10.2.2　基于蓝牙的通信/257
10.3　近场通信/259
10.3.1　基于NFC的识别和通信/259
10.3.2　基于NFC的点对点通信/263
10.4　基于WiFi连接的P2P通信/263
10.4.1　Android 4.0的P2P连接实现/264
10.4.2　使用Socket进行数据传输/266
10.5　小结/268
第11章　地理信息服务/269
11.1　Android的定位服务/270
11.1.1　定位服务框架/270
11.1.2　位置信息源/272
11.1.3　定位选择/273
11.1.4　定位实例/274
11.2　Android的地址服务/277
11.2.1　地址服务的框架/277
11.2.2　使用地址服务/278
11.3　Android的地图服务/279
11.3.1　使用地图/279
11.3.2　其他使用地图服务的方式/282
11.4　小结/283
第12章　多媒体处理/284
12.1　Android的图像处理/285
12.1.1　图像的表示/285
12.1.2　图像的读取和输出/286
12.1.3　图像的呈现/288
12.1.4　图像的管理/290
12.2　Android的音视频处理/291
12.2.1　Android音视频的支持框架/291
12.2.2　Android音视频的播放/292
12.2.3　Android音视频的录制/294
12.3　Android中相机的使用/296
12.4　小结/300
第13章　其他重要模块/301
13.1　通话和短信/302
13.1.1　Android的通话和短信框架/302
13.1.2　通话的处理/303
13.1.3　短信的发送和接收/305
13.2　App Widget的使用和实现/308
13.2.1　Android的App Widget框架/309
13.2.2　App Widget的界面构造和Remote Views /311
13.2.3　App Widget的事件处理和Pending Intent /313
13.3　Android的应用内搜索/317
13.3.1　Android应用内搜索实现框架/317
13.3.2　为应用定制搜索功能/318
13.3.3　全局搜索功能/322
13.4　Android的全局通知机制/323
13.4.1　全局通知的类型和实现/324
13.4.2　Toast的使用/325
13.4.3　状态栏通知/327
13.5　Android联系人处理/331
13.5.1　Android联系人数据存储框架/331
13.5.2　Android联系人操作/332
13.6　小结/334
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android开发精要
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入剖析Android系统
第1章  智能指针	1
1.1  智能指针概述	1
1.2  引用计数基类RefBase	2
1.3  轻量级引用计数LightRefBase	3
1.4  强指针	3
1.4.1  强指针变量的初始化与生命周期	3
1.4.2  赋值操作与引用计数变化	5
1.5  弱指针	5
第2章  消息队列与线程处理	7
2.1  消息队列处理模型的设计	7
2.2  消息队列与线程处理的Java实现	9
2.2.1  Thread/Runnable	9
2.2.2  Message	10
2.2.3  MessageQueue概述	11
2.2.4  Handler	11
2.2.5  Looper	12
2.2.6  再论Handler	15
2.2.7  对同步消息的支持	16
2.3  native层的Looper与消息队列处理	19
2.3.1  Looper中的睡眠等待与唤醒机制	19
2.3.2  Looper对文件描述符的监控与处理	22
2.3.3  Looper中的消息队列处理机制	25
2.3.4  Looper与线程执行上下文	27
第3章  Binder IPC及其应用	29
3.1  Binder IPC	29
3.1.1  Binder IPC与系统服务	29
3.1.2  Binder类结构与调用关系	31
3.1.3  模板函数interface_cast的背后	33
3.1.4  例子AudioPolicyService	37
3.2  Java层对Binder的封装	40
3.2.1  例子IMediaPlaybackService	42
3.2.2  例子PhoneStateListener	47
3.3  大内存块的跨进程共享	52
3.3.1  概述	52
3.3.2  调用接口	53
3.3.3  设备空间的映射	55
3.3.4  Server侧的处理	57
第4章  HAL硬件抽象层	59
4.1  HAL概述	59
4.2  硬件模块库的通用写法	60
4.3  硬件模块库的装载与解析	63
4.4  例子Lights	65
4.5  例子Camera	68
4.6  例子Power和Vibrator	69
第5章  Android的启动过程	71
5.1  Android初始化语言及解析	71
5.1.1  Action	71
5.1.2  触发器trigger	72
5.1.3  命令Command	72
5.1.4  服务Service	74
5.1.5  .rc文件的解析	76
5.2  BootChart	82
5.3  ueventd守护进程	82
5.4  init进程的启动过程	87
5.5  init.rc文件中的服务进程	93
5.6  system_server进程	95
5.6.1  app_process程序	95
5.6.2  system_server进程	96
第6章  输入系统	99
6.1  输入系统概述	99
6.2  读线程	101
6.2.1  EventHub	101
6.2.2  InputReader	106
6.2.3  InputDevice	108
6.2.4  InputMapper	108
6.2.5  QueuedInputListener	111
6.3  分发线程	112
6.3.1  InputDispatcher	112
6.3.2  InputChannel	116
6.4  输入系统的开启	118
第7章  MassStorage	121
7.1  MassStorage概述	121
7.2  MountService	122
7.3  库libsysutils.so	123
7.3.1  SocketListener	123
7.3.2  FrameworkListener	126
7.3.3  NetlinkListener	127
7.4  守护进程vold	128
7.4.1  NetlinkManager	128
7.4.2  CommandListener	131
7.4.3  vold的main函数	135
第8章  Sensor	137
8.1  Sensor概述	137
8.2  SDK API概述	138
8.3  Sensor管理器	139
8.3.1  Sensor采样数据的获取与处理	141
8.3.2  SensorEventQueue	146
8.4  SensorService	147
8.4.1  逻辑传感器	149
8.4.2  物理传感器	150
8.4.3  Sensor HAL	150
第9章  RIL	153
9.1  RIL概述	153
9.2  rild守护进程	154
9.3  事件处理与分发线程	158
9.3.1  分发线程中的事件处理	158
9.3.2  RIL请求的接收与处理	161
9.3.3  RIL响应的回送	165
9.4  radiooptions工具程序	169
9.5  RILJ	169
9.5.1  RILJ概述	169
9.5.2  RILRequest的发送过程	171
9.5.3  Response的处理过程	174
第10章  com.android.phone进程	178
10.1  层次状态机StateMachine	178
10.2  GSMPhone	179
10.3  GsmCallTracker	184
10.3.1  GsmDataConnectionTracker	186
10.3.2  GsmServiceStateTracker	188
10.3.3  DefaultPhoneNotifier	188
10.3.4  其他	189
10.4  进程com.android.phone	190
第11章  Graphic	196
11.1  Graphic概述	196
11.2  Java层简介	197
11.2.1  SurfaceSession	198
11.2.2  Surface	198
11.2.3  SurfaceView	199
11.2.4  TextureView	200
11.3  JNI层简介	200
11.4  SKIA库简介	201
11.5  库libgui.so	202
11.5.1  概述	202
11.5.2  ComposerService	204
11.5.3  共享控制块surface_flinger_cblk_t	204
11.5.4  ISurfaceComposer	205
11.5.5  ScreenshotClient	207
11.5.6  SurfaceComposerClient	207
11.5.7  Surface	210
11.5.8  SurfaceControl	211
11.5.9  绘图操作的前后过程	213
11.5.10  SurfaceTexture Client	215
11.6  SurfaceFlinger进程	222
11.6.1  图层	223
11.6.2  DisplayHardware简介	228
11.6.3  HWComposer简介	228
11.6.4  VSync	229
11.7  库libui.so简介	247
11.7.1  GraphicBuffer	247
11.7.2  FramebufferNativeWindow	248
11.8  RenderScript简介	249
第12章  OpenGL ES软件层次栈	250
12.1  Android中的OpenGL ES简介	250
12.2  Android中OpenGL软件层次栈	251
12.3  包裹库与hook钩子	253
12.3.1  libGLESv1_CM.so包裹库	253
12.3.2  libGLESv2包裹库	257
12.3.3  libEGL包裹库	257
12.3.4  结构体egl_t和gl_hooks_t钩子	258
12.4  OpenGL实现库的加载和解析	260
12.4.1  加载和解析的发起	260
12.4.2  库装载器Loader	261
12.5  libGLES_android库和ETC1简介	265
第13章  Multimedia	267
13.1  Multimedia概述	267
13.2  API类简述	268
13.3  多媒体播放（playback）	270
13.3.1  播放流程	273
13.3.2  来自server侧的消息事件通知	277
13.4  多媒体录制（Recording）	279
13.5  元数据（MetaData）获取	281
13.6  Camera	284
13.6.1  Camera概述	284
13.6.2  CameraHardwareInterface与HAL层	287
13.7  Camera事件通知机制	289
第14章  Audio	293
14.1  Audio概述	293
14.2  Audio播放AudioTrack	295
14.2.1  共享控制块audio_track_cblk_t	296
14.2.2  数据的写入	298
14.2.3  事件的回送及处理	299
14.3  Auido录音Recording	301
14.3.1  录音的开始过程	303
14.3.2  录音的停止过程	306
14.4  AudioFlinger	307
14.4.1  AudioFlinger概述	307
14.4.2  Track相关类概述	308
14.4.3  AudioFlinger中的线程	311
14.5  音效AudioEffect	319
14.5.1  EffectHandle	320
14.5.2  音效引擎的封装EffectModule	320
14.5.3  音效链EffectChain	321
14.5.4  音效处理引擎接口effect_interface_s	322
14.5.5  音效引擎库audio_effect_library_s	323
14.5.6  音效引擎工厂EffectFactory	324
14.6  音频策略服务AudioPolicyService	326
第15章  Stagefright	331
15.1  Stagefright概述	331
15.2  节点子类	332
15.3  StagefrightPlayer	334
15.4  视频帧的渲染输出AwesomeRenderer	343
15.4.1  Renderer的创建	344
15.4.2  AwesomeLocalRenderer	345
15.4.3  AwesomeNativeWindowRenderer	347
15.5  AudioPlayer	347
15.6  A/V同步简介	350
15.7  StagefrightRecorder	351
第16章  OMXCodec	356
16.1  OpenMAX概述	356
16.1.1  组件（Component）与端口（Port）	357
16.1.2  组件的初始化	358
16.1.3  数据处理	359
16.1.4  组件命令OMX_Command	360
16.2  OMXCodec类	362
16.2.1  组件的创建	362
16.2.2  缓冲区的分配	364
16.2.3  数据处理流程	370
16.3  IOMX	374
16.4  OMX插件	376
16.4.1  平台厂家插件	377
16.4.2  软件OMX插件SoftOMXPlugin	379
16.5  组件消息的上报	383
第17章  GPS	386
17.1  GPS 简述	386
17.2  SDK API概述	386
17.3  LocationManagerService	388
17.4  GpsLocationProvider	390
17.4.1  初始化代码分析	391
17.4.2  消息处理与回调结构体	392
17.4.3  例子：位置信息的上报	394
17.5  HAL层简介	396
17.5.1  GPS的位置信息	396
17.5.2  GPS卫星信息	397
17.5.3  GPS回调函数	397
第18章  NFC	399
18.1  NFC概述	399
18.2  SDK API概述	400
18.2.1  NfcAdapter	401
18.2.2  NdefMessage	401
18.2.3  NFC Tag	402
18.2.4  NFC-extras	403
18.3  进程com.android.nfc	403
18.3.1  P2pEventManager	403
18.3.2  P2pLinkManager	405
18.3.3  Bluetooth Handover	408
18.3.4  SNEP	409
18.3.5  NDEF Push	413
18.3.6  其他类简介	414
18.4  JNI层	415
第19章  USB	418
19.1  SDK API概述	418
19.2  UsbService	420
19.2.1  UsbDeviceManager	421
19.2.2  UsbHostManager	422
19.3  uevent	424
第20章  Bluetooth和Wi-Fi简析	429
20.1  Bluetooth	429
20.1.1  Bluetooth概述	429
20.1.2  SDK API概述	430
20.1.3  Bluetooth服务	432
20.1.4  JNI层	433
20.2  Wi-Fi	436
20.2.1  Wi-Fi概述	436
20.2.2  SDK API概述	436
20.2.3  JNI和HAL层	439
20.2.4  WPA_supplicant	440
第21章  Debuggerd	441
21.1  预备知识	441
21.1.1  ptrace调用	441
21.1.2  waitpid	442
21.2  debuggerd守护进程	442
后记	450
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入剖析Android系统
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入理解Android网络编程
序
前言
第一篇　概述篇
第1章　Android网络编程概要2
1.1　Android简介2
1.1.1　Android的发展2
1.1.2　Android功能特性3
1.1.3　Android系统构架4
1.2　Android网络程序的功能6
1.2.1　通信功能6
1.2.2　及时分享6
1.2.3　个人管理6
1.2.4　娱乐游戏7
1.2.5　企业应用7
1.3　设置Android开发环境7
1.3.1　相关下载7
1.3.2　安装ADT9
1.3.3　Hello World！11
1.4　网络应用实战案例17
1.4.1　加载一个页面17
1.4.2　下载一个页面21
1.5　小结21
第二篇　实战篇
第2章　Android基本网络技术和编程实践24
2.1　计算机网络及其协议24
2.1.1　计算机网络概述24
2.1.2　网络协议概述25
2.1.3　IP、TCP和UDP协议26
2.2　在Android中使用TCP、UDP协议31
2.2.1　Socket基础31
2.2.2　使用TCP通信34
2.2.3　使用UDP通信36
2.3　Socket实战案例39
2.3.1　Socket聊天举例39
2.3.2　FTP客户端41
2.3.3　Telnet客户端44
2.4　小结46
第3章　Android基本Web技术和编程实践47
3.1　HTTP协议47
3.1.1　HTTP简介47
3.1.2　实战案例：基于HTTP协议的文件上传51
3.2　Android中的HTTP编程57
3.2.1　HttpClient和URLConnection57
3.2.2　Post和Get在HttpClient的使用58
3.2.3　实战案例：使用HttpClient和URLConnection访问维基百科60
3.3　Android处理JSON64
3.3.1　JSON简介64
3.3.2　JSON数据解析65
3.3.3　JSON打包67
3.3.4　实战案例：JSON解析wikipedia内容68
3.4　Android处理SOAP71
3.4.1　SOAP简介71
3.4.2　SOAP消息72
3.4.3　实战案例：SOAP解析天气服务74
3.5　Android对HTML的处理79
3.5.1　解析HTML79
3.5.2　HTML适配屏幕80
3.5.3　JavaScript混合编程81
3.5.4　实战案例：Android自定义打开HTML页面87
3.6小结91
第4章　Android常见网络接口编程92
4.1　Android解析和创建XML92
4.1.1　XML简介92
4.1.2　DOM解析XML97
4.1.3　SAX解析XML102
4.1.4　PULL解析XML108
4.1.5　实战案例：Android中创建XML110
4.2　Android订阅RSS113
4.2.1　RSS简介113
4.2.2　实战案例：简单RSS阅读器115
4.3　Android Email编程122
4.3.1　Android发送Email122
4.3.2　实战案例：Android下Email的Base64加密123
4.4　Android网络安全125
4.4.1　Android网络安全简介125
4.4.2　Android加密和解密127
4.4.3　实战案例：Android应用添加签名133
4.5　OAuth认证135
4.5.1　OAuth简介135
4.5.2　实战案例：使用OAuth接口137
4.6　小结139
第5章　Android网络模块编程141
5.1　Android地图和定位141
5.1.1　获取map-api密钥141
5.1.2　获取位置144
5.1.3　实战案例：利用MapView显示地图146
5.2　USB编程150
5.2.1　USB主从设备150
5.2.2　USB Accessory Mode151
5.2.3　USB Host Mode157
5.2.4　实战案例：Android和Arduino交互159
5.3　Wi-Fi编程168
5.3.1　Android Wi-Fi相关类168
5.3.2　Android Wi-Fi基本操作171
5.3.3　实战案例：使用Wi-Fi直连方式传输文件177
5.4　蓝牙编程185
5.4.1　蓝牙简介185
5.4.2　Android蓝牙API分析185
5.4.3　Android蓝牙基本操作187
5.4.4　实战案例：蓝牙连接192
5.5　NFC编程简介197
5.5.1　NFC技术简介197
5.5.2　NFC API简介198
5.5.3　NFC处理流程分析199
5.6　小结205
第6章　Android线程、数据存取、缓存和UI同步206
6.1　Android线程206
6.1.1　Android线程模型206
6.1.2　异步任务类211
6.1.3　实战案例：利用AsyncTask实现多线程下载213
6.2　数据存取214
6.2.1　Shared Preferences数据存储215
6.2.2　Internal Storage数据存储216
6.2.3　External Storage数据存储217
6.2.4　SQLite Databases数据存储219
6.2.5　实战案例：SQLite数据库操作220
6.3　网络判定227
6.3.1　判断用户是否连接228
6.3.2　判断网络连接的类型228
6.3.3　监控网络连接改变228
6.3.4　实战案例：根据广播消息判断网络连接情况228
6.4　消息缓存230
6.4.1　Android中的缓存机制230
6.4.2　实战案例：下载、缓存和显示图片231
6.5　界面更新236
6.5.1　刷新数据时的界面更新236
6.5.2　完成任务时的界面更新237
6.5.3　实战案例：自定义列表显示更新238
6.6　小结248
第7章　基于SIP协议的VoIP应用249
7.1　SIP协议简介249
7.2　SIP服务器搭建250
7.2.1　下载安装Brekeke SIP Server250
7.2.2　访问服务器251
7.2.3　启动服务器252
7.3　SIP程序设置253
7.3.1　Android SIP API中的类和接口253
7.3.2　Android极限列表253
7.3.3　完整的Manifest文件254
7.4　SIP初始化通话255
7.4.1　SipManager对象255
7.4.2　SipProfile对象256
7.5　监听SIP通话257
7.5.1　创建监听器258
7.5.2　拨打电话258
7.5.3　接收呼叫259
7.6　实战案例：SIP通话261
7.7　小结270
第8章　基于XMPP协议的即时通信应用271
8.1　XMPP协议简介271
8.2　使用Openfire搭建XMPP服务器272
8.3　登录XMPP服务器276
8.3.1　Asmack相关类276
8.3.2　登录XMPP服务器277
8.4　联系人相关操作279
8.4.1　获取联系人列表279
8.4.2　获取联系人状态280
8.4.3　添加和删除联系人280
8.4.4　监听联系人添加信息281
8.5　消息处理282
8.5.1　接收消息282
8.5.2　发送消息283
8.6　实战案例：XMPP多人聊天283
8.6.1　创建新多人聊天室284
8.6.2　加入聊天室286
8.6.3　发送和接收消息287
8.7　小结288
第三篇　源码分析篇
第9章　Android对HTML的处理290
9.1　Android HTML处理关键类290
9.2　HTMLViewer分析292
9.3　浏览器源代码解析296
9.3.1　WebView加载入口分析296
9.3.2　调用JavaScript接口299
9.4　WebKit简单分析300
9.4.1　HTTP Cache管理300
9.4.2　Cookie管理301
9.4.3　处理HTTP认证以及证书302
9.4.4　处理JavaScript的请求302
9.4.5　处理MIME类型305
9.4.6　访问WebView的历史306
9.4.7　保存网站图标306
9.4.8　WebStorage306
9.4.9　处理UI307
9.4.10　Web设置分析309
9.4.11　HTML5音视频处理309
9.4.12　缩放和下载311
9.4.13　插件管理311
9.5　小结313
第10章　Android网络处理分析314
10.1　Android网络处理关键类及其说明314
10.2　Android网络处理流程315
10.2.1　监控网络连接状态315
10.2.2　认证类316
10.2.3　DHCP状态机317
10.2.4　LocalServerSocket318
10.2.5　响应邮件请求320
10.2.6　提供网络信息323
10.2.7　Proxy类324
10.2.8　VPN服务325
10.3　Android封装的HTTP处理类326
10.3.1　AndroidHttpClient类和DefaultHttpClient类326
10.3.2　SSL认证信息处理类327
10.3.3　SSL错误信息处理328
10.3.4　AndroidHttpClient328
10.4　Android RTP协议329
10.4.1　传输音频码330
10.4.2　AudioGroup331
10.4.3　语音流RtpStream和AudioStream332
10.5　Android SIP协议333
10.5.1　SIP通话简介334
10.5.2　SIP初始化335
10.5.3　SipProfile336
10.5.4　SipSession337
10.5.5　SIP包错误处理338
10.6　小结339
第11章　Android网络应用分析340
11.1　Android中使用SAX解析XML340
11.1.1　几种XML解析方式讨论340
11.1.2　SAX解析XML的原理341
11.1.3　SAX发现XML的根元素342
11.1.4　SAX发现XML的子元素345
11.2　基于位置的服务348
11.2.1　位置服务的基本概念348
11.2.2　位置服务的基本类348
11.2.3　调用Google地图350
11.2.4　根据位置刷新地图显示351
11.3　媒体传输协议353
11.3.1　MTP和PTP简介353
11.3.2　定义MTP和PTP的类型354
11.3.3　封装MTP设备信息357
11.3.4　封装MTP对象的信息358
11.3.5　封装MTP设备上存储单元的信息360
11.4　小结362
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入理解Android网络编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>It's Android Time
第一篇 扬帆篇
第1章 Android Time是时候了吗 2
创作者 靳岩
eoeMobile.com和 eoeandroid.com创始人之一，曾编写过《Google Android 入门与实战》图书。
该作者还参与第16章的编写。
1.1 Android是什么，可以吃吗 2
1.1.1 一切都从Android开始 2
1.1.2 细说Android 2
1.1.3 Android的演变与现状 3
1.2 Android的发展 3
1.2.1 Android 成长之路 3
1.2.2 手机开放联盟 4
1.2.3 已面市的Android手机 5
1.2.4 OMS简介 5
1.2.5 Android用户简析 6
1.3 Android的前景 7
1.3.1 Android平台的发展与Android手机的前景 7
1.3.2 Android在其他平台的应用 7
1.3.3 Android应用开发的前景 8
1.4 小结 9
.第2章 Android项目赢利模式探讨 10
创作者 方翼
互联网实践者，昔日eoeAndroid论坛斑竹。
该作者还参与第15章的编写。
2.1 我是软件开发商 10
2.1.1 制作应用程序 10
2.1.2 选择应用软件类型 10
2.1.3 关于开发 10
2.2 Android Market平台销售 11
2.2.1 制作应用软件投放在Market上销售 11
2.2.2 收费应用一定要有价值 11
2.2.3 真正的用户 11
2.2.4 Android Market平台销售存在的弊端 15
2.2.5 本土化策略 15
2.3 是赢利而非广告 15
2.3.1 免费软件是大趋势 15
2.3.2 广告 16
2.3.3 Google Adsens 16
2.3.4 Admob 16
2.3.5 专业性广告 18
2.3.6 植入性广告 18
2.3.7 对广告创收的忠告 18
2.4 为互联网服务商定制客户端 19
2.4.1 术业有专攻 19
2.4.2 提供API的互联网服务商 19
2.4.3 没有开放API接口的网站 19
2.5 做项目的真谛：时间换金钱 20
2.6 做解决方案要注意的问题 20
2.7 小结 22
第二篇 起航篇
第3章 用户定义与UI设计 24
创作者 于健（ken）
摩托罗拉中国研发中心资深交互界面设计师，从事Google Android系统的手机交互界面设计。曾供职于Palm Source北京研发中心，首位交互界面设计师，交互界面设计主管。具有多年的手机交互设计经验，对交互界面设计有着深厚的理解，在Android平台有多款优秀的设计作品上市。
3.1 UI概述 24
3.1.1 UI定义 24
3.1.2 UI设计的重要性 26
3.2 用户定义与交互设计方法 28
3.2.1 了解自己和自己的技术 28
3.2.2 以UI设计师的身份思考问题 28
3.2.3 UI细节设计与开发 31
3.3 小结 33
第4章 Android 2.0技术 34
创作者一 张运芳
长期从事Android研究与应用开发，典型的Linux爱好者，开放源代码软件和 GNU/Linux 的狂热支持者。参与并管理过20余款Android、OMS项目管理及开发。Java狂热爱好者，善于Java ME、Android、BlackBerry等移动嵌入式开发。个性开朗、幽默、善交挚友、刚毅、自强。喜好电影、音乐，曾与摇滚乐队多次同台合作；爱好电吉他、架子鼓、电贝司；目前已经谱写6首完整的乐队曲目。
该作者还参与第7、13、14章的编写。
创作者二 赵学
从事Android相关产品的开发工作，专注于移动互联网应用的发布与分享。喜欢研究算法，热衷于人工智能。骨灰级的游戏玩家，曾在一家专注于Android游戏开发的公司就职。
该作者还参与第9章的编写。
4.1 Android 2.0来临的时代 34
4.1.1 Android 2.0发布 34
4.1.2 Android 2.0技术时代 34
4.1.3 Android 2.0手机前景展望 35
4.2 Android 2.0新特性 35
4.2.1 Android 2.0 UI新特性 36
4.2.2 Android 2.0新特性 41
4.2.3 Android 2.0 自带程序新特性 43
4.3 Android 2.0开发环境(SDK/开发环境/ADT) 45
4.3.1 Android 2.0 SDK下载 45
4.3.1.1 初见Android——新手入门 46
4.3.1.2 再聚Android——超级Fans 57
4.3.2 Android 2.0 SDK模式分析 60
4.3.2.1 组件模式下的目录结构 61
4.3.2.2 官方组件版本SDK 63
4.3.3 Android 2.0 SDK更新元素 64
4.3.4 Android 2.0开发环境深入与兼容性 65
4.3.4.1 Android 2.0 开发环境的深入 65
4.3.4.2 Android 2.0 兼容性 71
4.4 Android 2.0前沿技术实例解析——Gestures手势 73
4.5 小结 76
第5章 Android基础开发实例 78
创作者 王雪明Google粉丝，从事Android研究与应用开发。
该作者还参与第11章的编写。
5.1 Android体系结构介绍 78
5.1.1 应用程序 79
5.1.2 应用程序框架 79
5.1.3 各种库和Android 运行环境 79
5.1.4 Linux 内核 80
5.2 Android执行文件apk的组成结构 80
5.3 Android应用的逻辑组成 81
5.3.1 人机交互界面Activity介绍 81
5.3.2 广播接收者 84
5.3.3 服务 84
5.3.4 内容提供者 84
5.4 快速构建一个Android工程项目 85
5.5 创建Android虚拟设备 88
5.5.1 使用create avd命令创建Android avd 88
5.5.2 借助ADT创建Android avd 88
5.6 运行一个Android工程 90
5.7 调试一个Android工程 91
5.8 签名Android的执行文件 93
5.8.1 制作签名文件 93
5.8.2 使用签名文件给apk签名 96
5.9 发布应用到Android Market商店 97
5.9.1 注册Market账号 98
5.9.2 发布已签名的应用到Android Market商店 98
5.9.3 通过Android Market手机客户端下载应用到手机 100
5.10 发布应用到eoeMarket商店 101
5.11 小结 108
第6章 NDK底层开发与扩展 109
创作者一 姚尚朗（IceskYsl）
eoemobile.com和 eoeAndroid. com创始人之一，Google产品重度依赖者。在移动互联网领域从事个性化推荐与分享平台的搭建和实施，崇尚敏捷开发和快速交付可用软件模式。对电信行业创新商业模式、移动互联网和Web 2.0发展趋势有独特的见解，并以实践积极探索之。曾编著过《Google Android开发入门与实战》、《Google API大全 编程·开发·实例》，合译《The Rails Way》。他随性、自由、信缘，喜欢背包去陌生的地方旅行，乐交朋友。
该作者还参与第8、10、16章的编写。
创作者二 马万铮
计算机终端技术及无线终端软件技术探索者。2004年进入Motorola开发和设计软件平台及移动终端系统框架；2009年加入T3G，提供Android平台搭建及开发的技术支持。2010年，加入eoeMobile.com，担任PC终端及无线客户端软件技术总监(总工程师)。完美主义者，同时专注于应用层与中间件技术，通晓多种系统的上层与底层原理，对技术与产品要求精益求精，无限制地追求提升性能与用户体验。
创作者三 周波
一直从事手机应用软件的开发，曾做过的项目有诺基亚OVI Contacts客户端、中国移动快讯客户端，2009年加入eoe团队，主要做Android产品开发工作。
6.1 NDK概述 109
6.2 向底层开发进军 112
6.2.1 底层开发人员需要具备的素质 112
6.2.2 开发前的准备（环境搭建篇） 112
6.2.2.1 Windows下的环境搭建 112
6.2.2.2 Linux（ubuntu）下Android NDK配置与开发 117
6.2.2.3 macbook下Android NDK配置与开发 119
6.2.2.4 NDK项目hello-jni 121
6.2.2.5 进一步了解NDK 123
6.3 底层开发实例解析——实时放大镜 125
6.3.1 实例概述 125
6.3.2 编写程序代码 126
6.3.2.1 创建工程 126
6.3.2.2 编写Java代码 127
6.3.2.3 编写和编译C文件 139
6.3.2.4 运行程序并对比性能 150
6.3.2.5 程序的签名与打包 151
6.4 小结 152
第7章 占据手机桌面的应用——Widget 153
7.1 Widget简介 153
7.1.1 Widget概念 153
7.1.2 Widget市场地位 154
7.1.3 Widget市场容量 155
7.2 Widget的实现方式 157
7.2.1 Widget实现的必备元素 157
7.2.2 Widget实现的步骤 158
7.2.2.1 创建Demo工程项目 158
7.2.2.2 Widget 桌面布局设计 160
7.2.2.3 添加AppWidgetProviderInfo元数据 162
7.2.2.4 实现AppWidgetProvider 类 163
7.2.2.5 Manifest中注册receiver——AppWidgetProvider 165
7.2.2.6 添加桌面Widget插件 166
7.2.2.7 实现Widget配置Activity类 167
7.2.2.8 Manifest中注册配置Activity类 167
7.2.2.9 AppWidgetProviderInfo元数据中设置要启动的Widget配置Activity 168
7.2.2.10 设计Widget配置Activity布局 168
7.2.2.11 实现Widget配置Activity的逻辑框架、结构与功能 170
7.2.2.12 动态配置桌面Widget插件 173
7.3 Widget实例 174
7.3.1 Widget的构思和策划 174
7.3.2 Widget的架构和实现 181
7.3.2.1 总体框架设计 182
7.3.2.2 详细框架设计 184
7.3.2.3 代码实现 186
7.3.2.4 Widget测试 279
7.3.3 Widget的包装和产品化 283
7.3.3.1 Widget包装 283
7.3.3.2 Widget产品化 294
7.4 Widget底层框架分析 295
7.4.1 添加APP Widget到桌面 295
7.4.1.1 在Home空白处长按以及Menu中单击添加时发生的事件 296
7.4.1.2 ADD Dialog中选中Widgets后发生的事件 302
7.4.1.3 在AppWidget Picker中点击某项后发生的事件 307
7.4.1.4 添加APPWidget到桌面 309
7.4.2 AppWidget的更新 318
7.4.3 APP Widget的管理 324
7.4.4 APP Widget框架接收的
Action 335
7.4.5 APP Widget的回调方法 339
7.4.6 APP Widget的生命周期 341
7.5 Widget产品注意问题 350
7.6 小结 351
第三篇 搏击篇
第8章 传统应用软件——突围之道 353
8.1 传统应用软件——Android背后的支柱 353
8.1.1 应用的分类及统计 354
8.1.2 透过表象看本质，找准方向 354
8.1.3 立足优势和不足，寻找突破点 355
8.2 传统应用软件——突围前的准备 355
8.2.1 一个未被开发的新兴需求市场 355
8.2.2 一个竞争激烈但有机可乘的市场 356
8.2.3 换个角度思考出路 358
8.3 传统应用软件——开始突围 360
8.3.1 快速出击新兴的需求市场 360
8.3.2 站在先行者的肩膀上前进 365
8.3.3 绕过去也是一种成功 367
8.4 小结 367
第9章 成为游戏开发家族的一员 368
9.1 牵引Android发展的火车头
——Android游戏定位 368
9.2 市场前景分析 368
9.3 游戏开发实例《是男人就坚持20秒》 369
9.3.1 游戏策划 370
9.3.2 游戏构架的搭建 371
9.3.3 美工制作 375
9.3.4 编程实现 376
9.3.5 后续开发展望 395
9.3.6 开发流程总结 398
9.4 破卵成蝶，点石成金——进阶技巧 399
9.4.1 碰撞判断 399
9.4.2 内存管理 405
9.4.3 寻路算法 410
9.5 小结 411
第10章 移动互联网与平台化产品 412
10.1 移动互联网平台化的那点事 412
10.1.1 移动互联网概述及其发展趋势 412
10.1.2 平台化概述 413
10.1.3 平台化的诱惑 413
10.1.4 移动互联网平台化产品，你准备好了吗 414
10.2 移动互联网平台化产品方向的选择建议 414
10.2.1 移动互联网产品特点 414
10.2.2 移动互联网产品方向 415
10.3 移动互联网平台化产品实战 416
10.3.1 产品的选型、构思和策划 416
10.3.2 技术选型 417
10.3.3 产品技术架构 419
10.3.4 服务器端技术的实现 424
10.3.4.1 预备知识 424
10.3.4.2 创建DB 426
10.3.4.3 实现Web端 431
10.3.4.4 实现管理端 443
10.3.4.5 实现API 446
10.3.5 应用部署 453
10.3.6 接口文档撰写 457
10.3.7 客户端技术实现 463
10.4 移动互联平台化开发中需注意的问题 467
10.5 小结 468
第11章 传统互联网服务商迁移 469
11.1 传统互联网服务商的特征及其移动市场分析 469
11.2 手机壁纸服务需求分析和设计 469
11.2.1 壁纸服务的发展概况 469
11.2.2 Android壁纸服务的整体架构设计 470
11.3 技术实现 472
11.3.1 数据库实现存储 472
11.3.2 服务器端技术实现 474
11.3.3 客户端实现 478
11.4 运行效果 490
11.5 小结 491
第12章 位置服务——随时随地的生活助手 492
创作者一：飘信团队郑德舜
长期从事嵌入式平台的研发工作。近两年来关注于Android平台研发，参与过若干个大型的软件研发项目，有丰富的项目实战经历和软件产品化经验。
创作者二：飘信团队刘雪峰
从事嵌入式平台的研究和开发工作，对各嵌入式各操作系统平台及通信产品有较好的掌握。具有丰富的项目开发及产品策划经验。
创作者二：飘信团队吴婧婵
致力于营销推广领域的工作。现从事房地产策划工作，独立负责项目的推广、运作。
12.1 站在时代的壶口瀑布上——位置服务概述 492
12.2 观念就是生产力——位置服务的前景和市场分析 493
12.2.1 LBS行业发展概况 493
12.2.2 LBS技术发展现状 494
12.2.3 LBS技术发展趋势 495
12.2.4 LBS行业发展可参考性分析 496
12.3 做事，做市，做势——位置服务类应用实战 497
12.3.1 思路决定出路——选择一个好的方向 497
12.3.2 智慧与机遇的嫁接——架构和实施 500
12.3.3 内涵与表象的兼顾——产品和包装 515
12.4 慢工细磨，反复论证——产品过程需要注意的问题 516
12.4.1 产品的概念 516
12.4.2 产品的需求分析 518
12.4.3 产品的设计 518
12.4.4 找到产品的平衡点 518
12.5 小结 518
第13章 Android平台应用向OMS平台迁移 519
13.1 OMS概述 519
13.2 OMS特色 520
13.2.1 OMS UI特色 520
13.2.2 OMS业务与自带应用特色 527
13.2.3 OMS SDK特色 528
13.3 OMS和Android的关系 530
13.4 普通Android应用如何向OMS平台迁移 531
13.4.1 OMS开发平台搭建 531
13.4.2 OMS应用和Android应用的差异 540
13.4.3 普通Android应用向OMS平台迁移 541
13.5 小结 542
第14章 Android源码开发环境及源码编译 543
14.1 快速构建Android源码开发环境 543
14.1.1 快速安装Ubuntu 9.10或Ubuntu 10.04 543
14.1.2 快速构建基于Ubuntu下的Android源码开发环境 546
14.1.2.1 快速安装Android源码下载环境及编译环境 546
14.1.2.2 下载Android源码 548
14.2 Android源码编译技术 553
14.2.1 常用Android 核心编译命令 553
14.2.2 Android编译完成后的代码结构 555
14.3 添加自己的应用程序到Android源码中 558
14.3.1 添加自定义内置软件项目 558
14.3.2 关于Android系统级应用使用第三方Jar包 560
14.3.3 结合Eclipse编辑Android源码 561
14.4 构建自己的Android桌面 563
14.4.1 构建普通的HOME类型应用程序 564
14.4.2 定制自己的Android HOME桌面 565
14.5 小结 569
第四篇 瞭望篇
第15章 你真的准备好了吗 572
15.1 Android 战场上的人们 572
15.1.1 中国Android事业的发展 572
15.1.2 Android在中国 573
15.2 对于从业者的挑战与机遇 574
15.2.1 对于从业者的挑战 574
15.2.2 我们的机遇 575
15.3 观念的转变 576
15.4 小结 576
第16章 Android行动是时候了 577
16.1 智能手机系统的现况和发展趋势 577
16.1.1 智能手机系统群雄逐鹿 577
16.1.2 智能手机业发展趋势 581
16.2 Android应用商店现况和发展趋势 584
16.3 Android 从业者何去何从 587
16.4 小结 588
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>It's Android Time
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Google Android开发入门与实战
第1章　掀起你的盖头来——初识android　1
1.1　认识android　1
1.2　android的背景　2
1.2.1　android的历史　2
1.2.2　android的发展　2
1.3　我的android我做主　2
1.3.1　开发基于android平台的应用　3
1.3.2　参加android开发者大赛　3
1.3.3　个人英雄主义再现——得到更多人的认可和尊重　3
1.3.4　获得应有的收益——android market　3
1.4　真实体验——android模拟器　4
1.4.1　模拟器概述　4
1.4.2　模拟器和真机的区别　4
1.4.3　模拟器使用注意事项　4
1.5　更上一层楼——加入android开发社区　5
1.6　本章小结　6
第2章　工欲善其事　必先利其器——搭建android开发环境　7
2.1　开发android应用前的准备　7
2.1.1　android开发系统要求　7
2.1.2　android软件开发包　7
2.1.3　其他注意事项　8
2.2　windows开发环境搭建　8
2.2.1　jdk、eclipse、android sdk软件安装　8
2.2.2　sdk的家在哪里——设定android sdk home　14
2.2.3　真的准备好了吗——开发环境验证　14
2.2.4　创建android 虚拟设备(avd)　15
2.3　linux一族——ubuntu开发环境搭建　17
2.3.1　java、eclipse和adt插件安装　17
2.3.2　设定android sdk home　23
2.4　mac os一族——苹果开发环境搭建　24
2.5　本章小结　24
第3章　清点可用资本——android sdk介绍　25
3.1　android sdk 基础　25
3.2　深入探寻android sdk的密码　25
3.2.1　android sdk目录结构　25
3.2.2　android.jar及内部结构　27
3.2.3　sdk文档及阅读技巧　27
3.2.4　先来热热身——android sdk例子解析　28
3.2.5　sdk提供的工具介绍　31
3.3　android典型包分析　33
3.3.1　开发的基石——android api核心开发包介绍　33
3.3.2　拓展开发外延——android可选api介绍　34
3.4　本章小结　34
第4章　赚钱的市场——android market及应用发布　35
4.1　google market产生背景与目的　35
4.2　体验“选货”的乐趣——在g1上体验market的使用　35
4.3　android开发活动及特色应用　37
4.3.1　开发应用的领域　37
4.3.2　android market特色应用一览　38
4.4　你也可以做东家——申请market账号　43
4.4.1　卖东西要先入伙——准备工作　43
4.4.2　入伙过程——申请　44
4.5　开张了——在market上发布应用　45
4.5.1　发布时可能遇到的错误　45
4.5.2　卖东西也要签名——生成签名文件　46
4.5.3　打包、签名、发布应用　48
4.6　本章小结　51
第5章　千里之行 始于足下——第一个应用helloworld　52
5.1　helloworld应用分析　52
5.1.1　新建一个android工程　52
5.1.2　填写工程的信息　52
5.1.3　编程实现　53
5.1.4　运行项目　54
5.2　调试项目　54
5.2.1　设置断点　54
5.2.2　debug 项目　55
5.2.3　断点调试　55
5.3　本章小结　56
第6章　磨刀不误砍柴工——android应用程序结构介绍　57
6.1　android体系结构介绍　57
6.1.1　应用程序(application)　57
6.1.2　应用程序框架(application framework)　58
6.1.3　库(libraries)和运行环境(runtime)　58
6.2　android 应用程序组成　59
6.2.1　activity介绍　59
6.2.2　broadcast intent receiver介绍　60
6.2.3　service介绍　61
6.2.4　content provider介绍　61
6.3　android应用工程文件组成　61
6.4　本章小结　62
第7章　良好的学习开端——android基本组件介绍　63
7.1　第一印象很重要——界面ui元素介绍　63
7.1.1　视图组件(view)　63
7.1.2　视图容器组件(viewgroup)　63
7.1.3　布局组件(layout)　64
7.1.4　布局参数(layoutparams)　64
7.2　我的美丽我做主——android中应用界面布局　64
7.2.1　实例操作演示　65
7.2.2　实例编程实现　66
7.3　不积跬步 无以至千里——常用widget组件介绍　75
7.3.1　创建widget组件实例　75
7.3.2　按钮(button)介绍与应用　76
7.3.3　文本框(textview)介绍与应用　77
7.3.4　编辑框(edittext)介绍与应用　79
7.3.5　多项选择(checkbox)介绍与应用　81
7.3.6　单项选择(radiogroup )介绍与应用　83
7.3.7　下拉列表(spinner )介绍与应用　85
7.3.8　自动完成文本(autocompletetextview )　87
7.3.9　日期选择器(datepicker)介绍与应用　89
7.3.10　时间选择器(timepicker)介绍与应用　90
7.3.11　滚动视图(scrollview)介绍与应用　91
7.3.12　进度条(progressbar)介绍与应用　92
7.3.13　拖动条(seekbar)介绍与应用　93
7.3.14　评分组件(ratingbar)介绍与应用　94
7.3.15　图片视图(imageview)介绍与应用　95
7.3.16　图片按钮(imagebutton)介绍与应用　96
7.3.17　切换图片(imageswitcher&gallery)　96
7.3.18　网格视图(gridview)介绍与应用　99
7.3.19　标签(tab)介绍与应用　101
7.4　友好的菜单——menu介绍与实例　102
7.4.1　实例操作演示..　103
7.4.2　实例编程实现　103
7.5　android应用的灵魂——intent和activity介绍与实例　106
7.5.1　实例操作演示　106
7.5.2　实例编程实现　106
7.6　用好列表，做好程序——列表(listview)介绍与实例　111
7.6.1　实例程序演示　111
7.6.2　实例编程实现　112
7.7　友好地互动交流——对话框(dialog)介绍与实例　119
7.8　温馨的提醒——toast和notification应用　127
7.8.1　实例操作演示　128
7.8.2　实例编程实现　129
7.9　本章小结　135
第8章　移动信息仓库——android的数据存储操作　136
8.1　android数据存储概述　136
8.2　轻轻地我保护——sharedpreferences存储　136
8.3　谁的文件，谁主宰——文件存储　140
8.4　打造自己的数据库存储——sqlite存储方式　141
8.4.1　android中对数据库操作　141
8.4.2　完整地操作数据库——日记本实例　147
8.5　我的数据你来用——contentprovider介绍　155
8.5.1　初识contentprovider　155
8.5.2　使用contentprovider读取系统数据　156
8.5.3　使用contentprovider操作数据日记本实例　159
8.6　再学一招——网络存储　171
8.7　本章小结　173
第9章　我来“广播”你的“意图”——intent和broadcast面对面　174
9.1　android应用程序的核心——intent　174
9.1.1　intent基础　174
9.1.2　用intent启动一个新的activity　174
9.1.3　intent 详细讲解　177
9.1.4　android解析intent实现　179
9.2　用广播告诉你——利用intent来广播(broadcast)事件　180
9.2.1　实现android中的广播事件　180
9.2.2　broadcast receiver介绍　181
9.3　应用实例详解　181
9.3.1　程序操作演示　182
9.3.2　实例编程实现　182
9.4　本章小结　186
第10章　一切为用户服务——service应用实例　187
10.1　认识service　187
10.2　使用service　188
10.3　service的生命周期　194
10.4　实例学习service　194
10.4.1　精彩实例一——定时提醒　194
10.4.2　精彩实例二——音乐播放器　198
10.5　本章小结　201
第11章　循序渐进——开发android应用的基本步骤　202
11.1　兵马未动 粮草先行——应用规划及架构设计　202
11.2　应用开发步骤　202
11.2.1　界面设计始终是第一位——实现ui　203
11.2.2　必备的动力源泉——数据操作和存储　203
11.2.3　华丽转身——实现多页面跳转　203
11.2.4　始终为用户做好服务——增加service　203
11.2.5　细节决定成败——完善应用细节　203
11.3　成功就在眼前——应用测试和发布　204
11.3.1 只欠东风——应用测试　204
11.3.2　可以赚钱了——发布到android market　204
11.4　本章小结　204
第12章　android综合案例一——rss阅读器实例　205
12.1　rss介绍　205
12.1.1　rss基础　205
12.1.2　rss的历史　205
12.1.3　rss语法介绍　206
12.2　sax介绍　207
12.2.1　sax基础　207
12.2.2　使用sax的作用　207
12.2.3　怎样使用sax　207
12.3　rss阅读器设计　209
12.3.1　rss阅读器功能设计　209
12.3.2　rss阅读器ui和交互流程设计　209
12.4　rss阅读器的实现　210
12.4.1　程序实体解析　210
12.4.2　实现一个自己的contenthandler　214
12.4.3　activity的实现　217
12.5　本章小结　220
第13章　android综合案例二——基于google map开发个人移动地图　221
13.1　项目ui规划　221
13.2　数据存储实现　222
13.2.1　设计数据库及表结构　222
13.2.2　设计sharepreference 存储　223
13.3　项目实现流程　223
13.3.1　创建项目工程　223
13.3.2　项目各功能及界面实现　224
13.3.3　实现数据存取　247
13.3.4　实现service　252
13.3.5　应用流程整体实现　254
13.3.6　后续开发完善　255
13.4　项目程序演示　255
13.5　项目程序签名、打包和发布　257
13.6　本章小结　259
第14章　android综合案例三——基于android的豆瓣网(web 2.0)移动客户端开发　260
14.1　关于豆瓣网和豆瓣网api　260
14.1.1　豆瓣网介绍　260
14.1.2　豆瓣网api介绍　261
14.1.3　豆瓣网api认证　261
14.1.4　豆瓣网api快速入门　264
14.1.5　豆瓣网api java库介绍　265
14.2　豆瓣网(web 2.0)客户端设计　268
14.2.1　客户端功能规划设计　268
14.2.2　ui和交互流程设计　268
14.2.3　数据存储设计　270
14.3　豆瓣网(web 2.0)客户端实现　270
14.3.1　申请api key　270
14.3.2　activity实现　271
14.4　本章小结　282
第15章　android综合案例四——在线音乐播放器　283
15.1　关于yobo和yobo api　283
15.1.1　yobo简介　284
15.1.2　yobo功能特点　284
15.1.3　yobo api介绍　284
15.2　在线播放器架构设计　285
15.2.1　在线播放器功能规划设计　285
15.2.2　在线播放器ui设计　285
15.2.3　在线播放器数据存储设计　286
15.3　在线播放器的编程实现　286
15.3.1　申请api key　286
15.3.2　基础功能实现　287
15.3.3　实现activity　290
15.3.4　实现service　306
15.3.5　后续开发展望　310
15.4　在线音乐播放器应用演示　310
15.5　在线音乐播放器应用打包、签名和发布　311
15.6　本章小结　311
第16章　android综合案例五——手机信息查看助手　312
16.1　手机信息查看助手功能规划和可行性分析　312
16.1.1　手机信息查看助手功能规划　312
16.1.2　手机信息查看助手可行性分析　312
16.2　手机信息查看助手功能实现　313
16.2.1　手机信息查看助手主界面　313
16.2.2　查看系统信息实现　316
16.2.3　查看硬件信息　320
16.2.4　查看软件信息　324
16.2.5　获取运行时信息　326
16.2.6　文件浏览器　328
16.2.7　项目的细节完善　331
16.3　手机信息查看助手功能展望　332
16.4　项目的打包、签名和发布　332
16.5　本章小结　333
第17章　芝麻开门——android底层开发和移植概述　334
17.1　android原始码下载　334
17.2　实机测试　335
17.2.1　neo freerunner 介绍　335
17.2.2　烧录androidfs.jffs2　336
17.3　android移植技术概论　337
17.3.1　android底层技术的重要性　337
17.3.2　android移植项目介绍　338
17.3.3　android的技术优点　340
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Google Android开发入门与实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android应用开发揭秘
前言
第一部分 准备篇
第1章 android开发简介
1.1 android基本概念
1.1.1 android简介
1.1.2 android的系统构架
1.1.3 android应用程序框架
1.2 oms介绍
1.2.1 ophone介绍
1.2.2 widget介绍
1.3 小结
第2章 android开发环境搭建
2.1 android开发准备工作
2.2 开发包及其工具的安装和
配置
2.2.1 安装jdk和配置java开发
环境
2.2.2 eclipse的安装与汉化
2.2.3 sdk和adt的安装和
.配置
2.3 创建第一个android项目——heuoandroid
2.3.1 创建helloandroid项目
2.3.2 运行helloandroid及模拟器的使用
2.3.3 调试helloandroid
2.4 小结
第二部分 基础篇
第3章 android程序设计基础
3.1 android程序框架
3.1.1 android项目目录结构
3.1.2 android应用解析
3.2 android的生命周期
3.3 android程序u设计
3.4 小结
第4章 用户界面开发
4.1 用户界面开发详解
4.1.1 用户界面简介
4.1.2 事件处理
4.2 常用控件应用
4.2.1 文本框(textiew)
4.2.2 列表(listview)
4.2.3 提示(t0ast)
4.2.4 编辑框(edittext)
4.2.5 单项选择(radiogroup、radiobutton
4.2.6 多项选择(checkbox)
4.2.7 下拉列表(spinner)
4.2.8 自动提示(autocomplete.textⅵew)
4.2.9 日期和时间(datepicker、timepicker)
4.2.10 按钮(button)
4.2.1l 菜单(menu)
4.2.12 对话框(dialog)
4.2.13 图片视图(imageview)
4.2.14 带图标的按钮(imagebutton)
4.2.15 拖动效果(gallery)
4.2.16 切换图片(hmgeswilcher)
4.2.17 网格视图(gridview)
4.2.18 卷轴视图(scrollview)
4.2.19 进度条(progressbar)
4.2.20 拖动条(seekbar)
4.2.21 状态栏提示(notification、notificationmanager)
4.2.22 对话框中的进度条(progressdialog)
4.3 界面布局
4.3.1 垂直线性布局
4.3.2 水平线性布局
4.3.3.相对布局(relativelayout)
4.3.4 表单布局(tablelayout)
4.3.5 切换卡(tabwidget)
4,4 小结
第5章 android游戏开发
5.1 android游戏开发框架
5.1.1 view类开发框架
5.1.2 surfaceview类开发框架
5.2 graphics类开发
5.5.1 paint和color类介绍
5.2.2 canvas类介绍
5.2.3 几何图形绘制
5.2.4 字符串绘制
5.2.5 图像绘制
5.2.6 图像旋转
5.2.7 图像缩放
5.2.8 图像像素操作
5.2.9 shader类介绍
5.2.10 双缓冲技术
5.2.11 全屏显示
5.2.12 获得屏幕属性
5.3 动画实现
5.3.1 tween动画
5.3.2 frame动画
5.3.3 gif动画播放
5.4 小结
第6章 android数据存储
6.1 android数据存储初探
6.2 数据存储之shared preferences
6.3 数据存储之files
6.4 数据存储之network
6.5 android数据库编程
6.5.1 sqlite简介
6.5.2 sqlite编程详解
6.5.3 sqliteopenhelper应用
6.6 数据共享(contentproviders)
6.7 小结
第7 章多媒体开发
7.1 多媒体开发详解
7.1.1 open core
7.1.2 mediaplayer
7.1.3 mediarecorder
7.2 播放音乐
7.3 播放视频
7.4 录制歌曲
7.5 相机设置
7.6 闹钟设置
7.7 铃声设置
7.8 小结
第8章 网络与通信
8.1 网络通信基础
8.1.1 无线网络技术
8.1.2 android网络基础
8.2 http通信
8.2.1 httpurlconnection接口
8.2.2 httpclient接口
8.2.3 实时更新
8.3 socket通信
8.3.1 socket基础
8.3.2 socket应用(简易聊天室)
8.4 网络通信的中文乱码问题
8.5 webkit应用
8.5.1 webkjt概述
8.5.2 webview浏览网页
8.5.3 webview与javascript
8.6 wtfi介绍
8.7 蓝牙
8.8 小结
第9章 android特色开发
9.1 传感器
9.2 语音识别
9.3 googlemap
9.3.1 googlemap概述
9.3.2 准备工作
9.3.3 googlemapapi的使用
9.3.4 定位系统
9.4 桌面组件
9.4.1 快捷方式
9.4.2 实时文件夹
9.4.3 widget开发
9.5 账户管理
9.6 小结
第三部分 实例篇
第10章 android应用开发
实例
10.1 情境模式
10.2 文件管理器
10.3 通讯录
10.4 音乐播放器
10.5 天气预报
10.6 个人地图
10.7 widget日历
10.8 小结
第11 章android游戏开发实例
11.1 手机游戏开发简介
11.2 游戏框架设计
11.3 地图设计
11.4 主角设计
11.5 图层管理器
11.6 游戏音效
11.7 游戏存档
11.8 小结
第四部分 高级篇
第12章 androidopengl开发
基础
12.1 opengl简介
12.2 多边形
12.3 颜色
12.4 旋转
12.5 3d 空间
12.6 纹理映射
12.7 光照和事件
12.8 混合
12.9 小结
第13章 androidopengl综合
应用
13.1 移动图像
13.2.3d 世界
13.3 飘动的旗帜
13.4 显示列表
13.5 雾
13.6 粒子系统
13.7 蒙版
13.8 变形
13.9 小结
第14章 游戏引擎实现
14.1 游戏引擎介绍
14.1.1 什么是引擎
14.1.2 引擎的进化
14.1.3 常见的游戏引擎
14.1.4 android游戏引擎
14.2 游戏引擎结构
14.2.1 游戏引擎原理
14.2.2 游戏引擎定位
14.2.3 游戏引擎框架
14.3 游戏引擎设计
14.3.1 游戏引擎结构和功能
设计
14.3.2 游戏引擎设计注意事项
14.4 游戏引擎实现
14.4.1 activity类实现
14.4.2 流程控制和线程
14.4.3 游戏对象与对象管理
14.4.4 图形引擎
14.4.5 物理引擎
14.4.6 事件模块
14.4.7 工具模块
14.4.8 脚本引擎、音效模块、网络
模块
14.5 小结
第15章 优化技术
15.1 优化的基本知识
15.1.1 如何书写出优秀代码
15.1.2 编程规范
15.2 程序性能测试
15.2.1 计算性能测试
15.2.2 内存消耗测试
15.3 初级优化
15.4 高级优化
15.5 android高效开发
15.6 androidui优化
15.7 其他优化
15.7.1 zipalign
15.7.2 图片优化
15.8 小结
第五部分 扩展篇
第16章 android ndk开发
16.1 androidndk简介
16.2 安装和配置ndk开发环境
16.2.1 系统和软件需求
16.2.2 ndk开发环境搭建
16.2.3 编译第一个ndk程序
16.3 androidndk开发
16.3.1 jni接口设计
16.3.2 使用c\c++实现本地
方法
16.3.3 android.mk实现
16.3.4 application.mk实现
16.3.5 编译c\c++代码
16.4 androidndk中使用0pengl
16.5小结
第17章 android脚本环境
17.1 android脚本环境简介
17.2 android脚本环境安装
17.3如何编写android脚本程序
17.4小结
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android应用开发揭秘
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android内核剖析
第1部分 基础篇
第1章 linux基础	2
1.1 linux文件系统概述	2
1.2 linux启动过程	4
1.3 常用linux 命令	6
1.4 shell脚本备忘	9
1.4.1 获取输入	10
1.4.2 变量定义	10
1.4.3 条件判断	11
1.4.4 while []...do... done语句	12
1.4.5 for循环	13
1.4.6 函数	14
1.4.7 常用内置符号常量	15
1.5 make脚本备忘	15
1.5.1 一个简单的makefile文件	16
1.5.2 变量的定义与赋值	18
1.5.3 条件控制语句	18
1.5.4 宏（函数）定义	19
1.5.5 内置符号和变量	22
1.5.6 模板目标（pattern target）	23
1.5.7 目标特定的变量赋值（target-specific variable）	24
1.5.8 常用选项	25
第2章 java基础	26
2.1 类装载器dexclassloader	26
2.1.1 dexclassloader的调用方法	27
2.1.2 基于类装载器设计一种“插件”架构	29
2.2 jni调用机制	32
2.2.1 java访问c	33
2.2.2 c访问java	35
2.2.3 在c中使用持久对象	37
2.3 异步消息处理线程	37
2.3.1 实现异步线程的一般思路	38
2.3.2 android中异步线程的实现方法	38
第3章 android源码下载及开发环境配置	44
3.1 mac系统的配置	44
3.1.1 硬盘格式的配置	44
3.1.2 port的用法	46
3.2 在linux中配置usb连接	46
3.3 在eclipse中调试framework	46
3.3.1 一段防止下载异常的脚本	47
3.3.2 调试framework中的代码	47
第4章 使用git	51
4.1 安装git	52
4.2 git仓库管理	52
4.2.1 仓库的组成	52
4.2.2 创建仓库	54
4.2.3 分支管理	55
4.3 git merge用法	57
4.4 git rebase用法	58
4.5 git cherry-pick用法	61
4.6 git reset用法	62
4.7 恢复到无引用提交	63
4.8 git remote用法	65
4.9 git 配置	67
4.9.1 基本信息配置	68
4.9.2 merge、diff工具配置	68
4.9.3 .gitignore配置	70
4.10 同时使用git和svn	71
4.11 其他git常用命令示例	72
4.11.1 git branch	72
4.11.2 git checkout	72
4.11.3 git log	73
4.11.4 git commit --amend	73
4.11.5 git cherry-pick sha-1	73
4.11.6 git merge-base	74
4.11.7 git diff master…dev	74
4.11.8 git revert	75
4.11.9 git diff	75
4.11.10 git rm	75
4.11.11 git tag	76
第2部分 内核篇
第5章 binder	78
5.1 binder框架	78
5.2 设计servier端	80
5.3 binder客户端设计	81
5.4 使用service类	82
5.4.1 获取binder对象	82
5.4.2 保证包裹内参数顺序aidl工具的使用	83
5.5 系统服务中的binder对象	88
5.5.1 servicemanager管理的服务	88
5.5.2 理解manager	90
第6章 framework概述	92
6.1 framework框架	92
6.1.1 服务端	92
6.1.2 客户端	93
6.1.3 linux驱动	94
6.2 apk程序的运行过程	94
6.3 客户端中的线程	94
6.4 几个常见问题	95
6.4.1 acitivity之间如何传递消息（数据）	95
6.4.2 窗口相关的概念	96
第7章 理解context	98
7.1 context是什么	98
7.2 一个应用程序中包含多少个context对象	99
7.3 context相关类的继承关系	99
7.4 创建context	100
7.4.1 application对应的context	101
7.4.2 activity对应的context	102
7.4.3 service对应的context	103
7.4.4 context之间的关系	104
第8章 创建窗口的过程	106
8.1 窗口的类型	106
8.2 token变量的含义	108
8.2.1 activity中的mtoken	108
8.2.2 window中的mapptoken	109
8.2.3 windowmanager.layoutparams中的token	109
8.2.4 view中的token	110
8.3 创建应用窗口	111
8.4 创建子窗口	121
8.4.1 dialog的创建	122
8.4.2 popupwindow的创建	126
8.4.3 contextmenu的创建	127
8.4.4 optionmenu的创建	132
8.5 系统窗口toast的创建	136
8.5.1 toast调用流程	137
8.5.2 toast添加窗口	139
8.6 创建窗口示例	139
第9章 framework的启动过程	142
9.1 framework运行环境综述	142
9.2 dalvik虚拟机相关的可执行程序	143
9.2.1 dalvikvm	144
9.2.2 dvz	144
9.2.3 app_process	145
9.3 zygote的启动	147
9.3.1 在init.rc中配置zygote启动参数	147
9.3.2 启动socket服务端口	148
9.3.3 加载preload-classes	151
9.3.4 加载preload-resources	152
9.3.5 使用folk启动新的进程	152
9.4 systemserver进程的启动	155
9.4.1 启动各种系统服务线程	156
9.4.2 启动第一个activity	158
第10章 ams内部原理	160
10.1 activity调度机制	160
10.1.1 几个重要概念	161
10.1.2 ams中的一些重要调度相关变量	163
10.1.3 startactivity()的流程	165
10.1.4 stopactivitylocked()停止activity	183
10.1.5 按“home”键回到桌面的过程	186
10.1.6 按“back”键回到上一个activity	187
10.1.7 长按“home”键	189
10.1.8 activity生命期的代码含义	190
10.2 内存管理	192
10.2.1 关闭而不退出	192
10.2.2 android与linux的配合	194
10.2.3 各种关闭程序的过程	196
10.2.4 释放内存详解	197
10.3 对ams中数据对象的理解	211
10.3.1 常见的对象操作	212
10.3.2 理解activity	213
10.3.3 android多进程吗，是同时在运行多个应用程序吗	213
10.4 activitygroup的内部机制	214
10.4.1 tabactivity使用时的类关系结构	215
10.4.2 localactivitymanager的内部机制	217
10.4.3 activitygroup内部的activity生命期控制	220
第11章 从输入设备中获取消息	221
11.1 android消息获取过程概述	221
11.2 与消息处理相关的源码文件分布	223
11.3 创建inputdispatcher线程	226
11.4 把窗口信息传递给inputdispatcher线程	227
11.5 创建inputchannel	229
11.6 在wms中注册inputchannel	232
11.7 在客户进程中注册inputchannel	233
11.8 wms中处理消息的时机	234
11.9 客户窗口获取消息的时机	235
第12章 屏幕绘图基础	237
12.1 绘制屏幕的软件架构	237
12.2 java客户端绘制调用过程	239
12.3 c客户端绘制过程	241
12.4 java客户端绘制相关类的关系	244
第13章 view工作原理	247
13.1 导论	247
13.2 用户消息类型	249
13.2.1 按键消息	249
13.2.2 触摸消息	250
13.3 按键消息派发过程	252
13.3.1 keyevent.dispatcherstate中的长按监测	252
13.3.2 按键消息总体派发过程	254
13.3.3 根视图内部派发过程	256
13.3.4 activity内部派发过程	257
13.3.5 view类内部的onkeydown()和onkeyup()	260
13.3.6 activity中的onkeydown()和onkeyup()	261
13.3.7 phonewindow内部消息派发过程	262
13.4 按键消息在wms中的派发过程	263
13.5 触摸消息派发过程	266
13.5.1 触摸消息总体派发过程	266
13.5.2 根视图内部消息派发过程	267
13.5.3 viewgroup内部消息派发过程	268
13.5.4 各种消息监测的基本实现方法	271
13.5.5 view内默认消息派发过程	272
13.6 导致view树重新遍历的时机	274
13.6.1 状态的分类	274
13.6.2 导致view树重新遍历的总体诱因图	275
13.6.3 refreshdrawablelist()	276
13.6.4 onfocusedchanged()	278
13.6.5 ensuretouchmode()	279
13.6.6 setvisibility()	282
13.6.7 setenable()	284
13.6.8 setselected()	285
13.6.9 invalidate()	286
13.6.10 requestfocus()	290
13.6.11 requestlayout()	292
13.7 遍历view树performtraversals()的执行过程	293
13.8 计算视图大小（measure）的过程	296
13.8.1 measure内部设计思路	297
13.8.2 viewgroup中的measurechildwithmargins()	301
13.8.3 linearlayout中的onmeasure()过程举例	304
13.9 布局（layout）过程	308
13.9.1 layout过程的设计思路	308
13.9.2 linearlayout中onlayout()内部过程	309
13.9.3 textview中gravity与layout的关系	311
13.10 绘制（draw）过程	313
13.10.1 视图中可绘制的元素	313
13.10.2 绘制过程的设计思路	314
13.10.3 viewroot中draw()的内部流程	315
13.10.4 view类中draw()函数内部流程	318
13.10.5 viewgroup类中绘制子视图dispatchdraw()内部流程	322
13.10.6 viewgroup类中drawchild()过程	325
13.10.7 绘制滚动条	328
13.11 动画的绘制	331
13.11.1 动画的设计思路	332
13.11.2 viewgroup类中drawchild()函数中视图动画绘制过程	334
13.11.3 viewgroup中dipsatchdraw()中布局动画绘制流程	337
第14章 wms工作原理	340
14.1 概述	340
14.1.1 窗口的定义	340
14.1.2 窗口管理要解决的核心问题	341
14.1.3 解决核心问题所使用的相关的变量列表	343
14.1.4 几个操作的概念	346
14.1.5 什么是policy，以及其与wms的关系	346
14.1.6 wms接口结构	347
14.2 wms主要内部类	348
14.2.1 表示窗口的数据类	348
14.2.2 dimanimator	348
14.2.3 fadeinoutanimation	349
14.2.4 inputmonitor类	350
14.2.5 policythread	351
14.2.6 session	352
14.2.7 watermark	353
14.2.8 wmthread	354
14.3 窗口的创建和删除	355
14.3.1 创建窗口的时机和过程	355
14.3.2 assignlayerslocked()的执行过程	360
14.3.3 addwindowtolistinorderlocked()的执行过程	362
14.3.4 删除窗口的时机	364
14.3.5 删除窗口的过程	366
14.3.6 removewindowinnerlocked()	367
14.4 计算窗口的大小	371
14.4.1 描述窗口尺寸的变量	371
14.4.2 窗口大小的变化过程	372
14.4.3 policy中layoutwindowlw()的执行过程	375
14.4.4 输入法窗口如何影响应用窗口的大小	378
14.5 切换窗口	379
14.5.1 切换要解决的问题	379
14.5.2 inputmanager和wms的接口	381
14.5.3 ams与wms的接口	383
14.5.4 从a到b的切换	387
14.5.5 从b回到a的过程	390
14.5.6 a中长按“home”键切换到b	391
14.5.7 setappvisiblity()与销毁surface	393
14.5.8 computefocusedwindowlocked()	396
14.6 perforlayoutandplacesurfaceslockedinner()的执行过程	398
14.6.1 总体过程	399
14.6.2 第一大步骤：计算窗口的大小	401
14.6.3 第二大步骤：计算窗口的可视状态	401
14.6.4 第三大步骤：通知surfaceflinger进行窗口重绘	404
14.7 窗口动画	406
14.8 屏幕旋转及configuration的变化过程	409
第3部分 系统篇
第15章 资源访问机制	414
15.1 定义资源	414
15.2 存储资源	415
15.3 styleable、style、attr、theme的意义	417
15.4 attributeset与typedarray类	420
15.5 获取resources的过程	425
15.5.1 通过context获取	425
15.5.2 通过packagemanager获取	429
15.6 framework资源	431
15.6.1 加载和读取	432
15.6.2 添加	434
15.6.3 实现真正主题切换的两种思路	436
第16章 程序包管理（package manager service）	439
16.1 包管理概述	439
16.2 packages.xml文件格式	442
16.2.1 last-platform-version标签	443
16.2.2 permissions标签	443
16.2.3 cert标签	444
16.2.4 sigs标签	444
16.2.5 perms标签	444
16.2.6 package标签	444
16.2.7 shared-user标签	445
16.3 包管理服务的启动过程	446
16.3.1 各主要功能类的关系	446
16.3.2 pms主体启动过程	448
16.3.3 readpermission()内部过程	450
16.3.4 msettings.readlp()	452
16.3.5 scanpackageli()内部过程	454
16.3.6 msettings.writelp()	455
16.4 应用程序的安装和卸载	455
16.4.1 各主要功能类关系	456
16.4.2 应用程序安装过程	457
16.4.3 应用程序的卸载过程	461
16.5 intent匹配框架	463
16.5.1 主要功能类的关系	463
16.5.2 主体调用过程	465
第17章 输入法框架	467
17.1 输入法框架组成概述	468
17.2 输入法中各binder对象的创建过程	469
17.2.1 inputconnection	469
17.2.2 iinputmethodclient	471
17.2.3 inputmethodsession	472
17.2.4 inputmethod	475
17.3 输入法主要操作过程	477
17.3.1 输入法相关模块的启动过程	477
17.3.2 切换输入法	478
17.3.3 启动输入法	480
17.3.4 显示输入法	485
17.3.5 输入法操作过程中的重要变量总结	489
17.4 输入法窗口内部的显示过程	490
17.4.1 ims中的showwindow()的内部执行过程	491
17.4.2 标准布局的ims	496
17.4.3 自定义布局的ims	502
17.5 向编辑框传递字符	503
17.6 输入法相关源码清单	504
第4部分 编译篇
第18章 android编译系统	508
18.1 android源码文件结构	509
18.2 从调用make命令开始说起	509
18.2.1 编译命令	510
18.2.2 编译结构猜想	510
18.3 编译所需脚本文件之间的协同关系	512
18.3.1 编译系统内部功能模块图	512
18.3.2 脚本文件的包含关系	514
18.3.3 从子项目中提取编译目标	518
18.3.4 生成编译规则	519
18.3.5 设置编译输出目录	521
18.3.6 生成最终的image文件	522
18.4 如何增加一个product	523
18.4.1 什么是一个product	523
18.4.2 如何增加一个product	527
18.5 如何增加一个项目	528
18.5.1 项目类别和项目路径	529
18.5.2 添加一个c项目	530
18.5.3 添加一个apk项目	531
18.6 apk编译过程	533
18.6.1 总体编译过程概述	533
18.6.2 生成r.java	535
18.6.3 编译aidl文件	536
18.6.4 包含java静态库	536
18.6.5 编译java源文件生成jar包	538
18.6.6 将jar包转换为dex文件	539
18.6.7 编译资源文件生成apk包	540
18.6.8 将dex文件添加到apk包中	541
18.6.9 添加jni所需的动态库文件	541
18.6.10 对apk文件进行签名	543
18.6.11 使用zipalign优化apk内部存储	543
18.7 framework的编译	544
18.7.1 总体编译过程	544
18.7.2 framework/core/ext三个jar文件的区别	546
18.8 编译android.jar	547
18.8.1 资源文件	547
18.8.2 aidl文件	551
18.8.3 java文件	551
18.9 编译adt插件	553
18.10 总结	554
第19章 编译自己的rom	555
19.1 嵌入式系统的内存地址空间	555
19.2 各种映像（image）文件的作用	559
19.3 编译nexus s（ns）的image文件	562
19.3.1 编译linux kernel	562
19.3.2 提取ns的私有驱动文件	563
19.3.3 编译system.img文件	564
19.3.4 创建ramdisk.img	565
19.3.5 创建boot.img文件	566
19.4 使用fastboot写入image文件	566
19.5 最后验证	567
19.5.1 解决触摸按键问题	568
19.5.2 解决音量和电源键	568
19.5.3 wifi问题	570
19.5.4 安装google mobile service（gms）	571
第5部分 硬件驱动篇
第20章 基于ti omap处理器的 techshine 开发板介绍	573
20.1 techv-35xx开发板概述	574
20.2 交叉编译环境配置	575
20.3 x-loader编译	578
20.4 u-boot编译	578
20.5 techv-35xx linux驱动和内核配置及编译	579
20.5.1 touchscreen驱动配置	579
20.5.2 keyboard驱动配置	580
20.5.3 audio驱动配置	581
20.5.4 4mmc/sd驱动配置	582
20.5.5 nandflash驱动配置	582
20.5.6 lcd驱动配置	583
20.5.7 内核编译	583
20.6 techv-35xx android驱动编写	584
20.7 techv-35xx android开发环境建立	589
20.8 编译android donut	590
20.9 android根文件系统的制作	591
20.10 相关image文件的烧写	591
20.11 android 根文件系统安装	593
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android内核剖析
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Google Android开发入门指南
第1篇　入门篇
第1章　初探Android
1.1　Android是什么
1.2　Android简史
1.3　从创意开始
1.4　参考资料
第2章　安装Android开发工具
2.1　系统需求
2.1.1　操作系统
2.1.2　必要开发工具
2.1.3　其他开发环境工具（非必要安装）
2.2　安装流程
2.3　参考资料
第3章　打开现有项目
3.1　打开项目
3.2　删除项目
3.3　导入项目
3.4　修复项目
3.5　修改对应的目标版本
3.6　参考资料
第4章　操作Android模拟器（Emulator）
4.1　设置环境参数
4.2　设置Android模拟器
4.3　使用命令行工具管理模拟器
4.3.1　列出模拟器类型
4.3.2　创建模拟器
4.3.3　列出已创建的模拟器
4.4　使用运行（Run）模式运行
4.5　操作Android模拟器
4.5.1　切换模拟器布局
4.5.2　切换屏幕
4.5.3　添加模拟器外观设置
4.5.4　删除模拟器外观设置
4.5.5　移除程序
4.5.6　移除模拟器
4.6　参考资料
第5章　创建一个Android应用程序
5.1　创建新项目
5.2　程序项目架构
5.2.1　src/：源代码（source）目录
5.2.2　gen/：自动生成（Generate）目录
5.2.3　res/：资源（Resource）目录
5.2.4　Android功能列表
5.2.5　“Android版本号/”参考函数目录
5.3　参考资料
第2篇　基础篇
第6章　描述用户界面
6.1　身高体重指数（BMI）计算
6.2　表达用户界面
6.3　参考资源
第7章　设计用户界面
7.1　视图（View）
7.2　查阅文件
7.2.1　线上文件
7.2.2　脱机文件
7.3　开始设计
7.4　整合
7.5　指定输入类型（InputType）
7.6　视觉化的界面开发工具
7.7　参考资料
第8章　访问标识符号
8.1　android:id属性
8.2　XML说明文件与R.java资源文件
8.3　将字符串抽离XML
8.4　新增XML文件
8.5　参考资料
第9章　解读程序流程
9.1　基础程序逻辑结构
9.2　参考函数库
9.3　参考资料
第10章　完成BMI程序
10.1　完整的程序
10.2　程序解读
第3篇　提高篇
第11章　重构程序
11.1　什么是重构
11.2　重新查看BMI应用程序
11.3　MVC模式
11.4　重构BMI应用程序
11.5　完整的Bmi.java程序 代码
11.6　参考资料
第12章　添加对话框（Dialog）
12.1　设计对话框
12.2　定义调用点
12.3　实体对话框
12.4　重构
12.5　添加按钮
12.6　Toast界面组件
12.7　错误处理
12.7.1　讲解
12.7.2　提取字符串
12.8　参考资料
第13章　查看线上内容（Uri）
13.1　打开网页
13.1.1　讲解
13.1.2　使用Uri查看Google地图
13.2　再做好一点（重构）
13.2.1　提取字符串
13.2.2　避免出错
13.3　参考资料
第14章　添加菜单（Menu）
14.1　菜单功能
14.2　创建菜单
14.2.1　装饰选项
14.2.2　使用内置的菜单图标
14.3　处理选项动作
14.4　参考资料
第15章　定义Android列表（Manifest）
15.1　Android框架
15.2　预设的Activity列表
15.3　参考资料
第16章　添加新活动（Activity）
16.1　Activity的分类
16.2　独立的Activity
16.3　程序中创建新的Activity类文件
16.4　在列表中添加Activity代码
16.5　手动添加Activity标签
16.6　修改页面标题文字
16.7　原Activity类中添加startActivity函数
第17章　传送数据到新意图（Intent）
17.1　使用Intent传递数据
17.2　使用Intent接收信息
17.2.1　相关工作
17.2.2　在Activity中解开信息
17.2.3　讲解
17.3　不通过Bundle交换信息
第18章　信息提醒（Notification）
18.1　状态栏提醒
18.2　使用状态栏（Notification Bar）传递信息
18.3　使用内置的状态图标
18.4　参考资料
第19章　日志与调试（Log）
19.1　在程序中加上调试信息
19.2　导入Log函数
19.3　实际应用
19.3.1　讲解
19.3.2　其他的记录标记方式
19.3.3　延伸使用
19.4　在调试环境中查看除错信息
19.4.1　启动模拟器
19.4.2　切换到查错环境配置
19.4.3　添加信息日志过滤器（Log Filter）
19.5　模拟器上的调试设置
19.6　管理日志
19.7　在实机上调试
19.8　参考资料
第20章　活动的生命周期LifeCycle
20.1　生命周期
20.2　进程
20.3　为什么要了解生命周期?
20.4　Activity的状态
20.4.1　Active（活动）
20.4.2　Paused（暂停）
20.4.3　Stopped（停止）
20.4.4　Dead（已回收或未启动）
20.5　系统内存不足时的行为
20.6　观察Activity运行流程
20.7　Activity运行流程
20.7.1　一般启动
20.7.2　调用另一个Activity
20.7.3　返回原Activity
20.7.4　退出结束
20.7.5　回收后再启动
20.8　参考资料
第21章　优先级（Preference）
21.1　使用优先级设置
21.2　保存优先级设置
21.3　参考资料
第22章　开发不息
22.1　回顾BMI应用程序
22.2　BMI应用程序设计的缺陷
22.3　展望未来
第4篇　融会贯通篇
第23章　显性设计
23.1　做出容易使用的应用程序
23.2　设计的减法
23.3　规划应用程序的目标
23.4　创建新项目
23.4.1　XML说明文件
23.4.2　文字字符串文件
23.4.3　程序代码
第24章　支持多国语言
24.1　抽取文本文件
24.2　让中文、英文多个语言界面并存
24.3　切换语言
24.3.1　设置中切换语系
24.3.2　程序中切换语言
24.4　参考资料
第25章　针对特性配置（Orientation）
25.1　配置资料夹的命名规则
25.1.1　屏幕方向
25.1.2　触控类型（Touc-hscreen type）
25.1.3　文字输入方式（text input）
25.1.4　浏览方式（navig-ation method）
25.1.5　屏幕分辨率
25.2　Android手机配置实例
25.3　指定屏幕方向
25.3.1　配置文件中指定屏幕方向
25.3.2　程序中指定屏幕方向
25.4　参考资料
第26章　使用接口（Adapter）
26.1　接口的概念
26.2　数组接口（Array Adapter）与字符串数组
26.3　数组字符串资源文件
26.4　参考资料
第27章　添加下拉菜单组件（Spinner）
27.1　修改XML说明文件
27.2　添加程序
27.3　记录所选择的优先级
27.4　参考资料
第28章　签发应用程序密钥（Keytools）
28.1　检查列表
28.2　手动导出应用程序
28.3　产生密钥
28.4　签署密钥
28.5　验证密钥
28.6　安装到模拟器
28.7　发布应用程序
28.8　参考资料
第29章　发布到Android Market
29.1　Android Market的运作方式
29.2　注册Android Market
29.3　上传应用程序到Android Market
29.4　查看成果——查看管理界面
29.5　自行提供程序在线下载
29.6　发布到第三方Android应用程序下载网站
29.7　针对用户作设计
29.8　参考资料
第5篇　数据库应用
第30章　添加列表活动（ListActivity）
30.1　分析记事本程序
30.2　创建新项目
30.3　修改程序代码
30.3.1　讲解
30.3.2　自定义ListView组件
30.3.3　自定义空列表显示内容
30.4　参考内置范例
30.5　参考资料
第31章　使用数据库（SQLite）
31.1　SQLite数据库简介
31.2　查看模拟器目录
31.3　手动创建“SQLite”数据库
31.4　创建数据表（table）
31.5　验证
31.5.1　离开SQLite互动模式
31.5.2　重新打开SQLite数据库
31.6　让Android模拟器通过Proxy上网
31.6.1　查询数据
31.6.2　添加数据
31.6.3　确认数据
31.6.4　更新数据
31.6.5　删除数据
31.7　参考资料
第32章　访问数据表（SQLite OpenHelper）
32.1　SQLiteOpenHelper
32.2　对NotesDbAdapter类加工
32.3　使用NotesDb Adapter类
32.3.1　讲解
32.3.2　验证
32.4　添加查询
32.5　完整的程序
32.6　参考资料
第33章　添加增删改查操作（CRUD）
33.1　检索（Retrieve）
33.1.1　讲解
33.1.2　验证
33.2　添加（Create）
33.2.1　讲解
33.2.2　验证
33.3　删除
33.4　查询单条记录、修改
33.5　参考资料
第34章　添加相依的活动（Activity ForResult）
34.1　定义XML说明文件
34.2　添加编辑类
34.3　将新Activity添加列表
34.4　打开编辑页面
34.5　完整的程序
34.6　参考资料
第35章　添加长按菜单（ContextMenu）
35.1　添加长按菜单框架
35.2　填入菜单内容
35.3　后续改进
35.4　参考资料
第6篇　地图与定位应用
第36章　申请Google地图服务（API Key）
36.1　取得地点坐标
36.2　取得Google地图开发密钥（API Key）
36.2.1　调试用密钥（debug keystore）的位置
36.2.2　取得MD5指纹信息
36.3　参考资料
第37章　使用地图（MapView）
37.1　Google地图的组成元素
37.2　创建新项目
37.3　定义列表
37.4　定义XML资源文件
37.5　产生地图
37.6　直接用程序定义界面组件
37.7　控制地图
37.8　添加缩放图标
37.8.1　修改XML说明文件
37.8.2　加上缩放控制（Zoom Controls）
37.9　新版的改进
37.10　参考资料
第38章　添加按键控制（KeyEvent）
38.1　添加菜单
38.2　添加按键控制
38.3　控制缩放范围
38.4　参考文件
第39章　获取现在位置（GPS/基站三角定位）
39.1　创建新项目
39.2　添加使用权限（uses-permission）
39.3　定义LocationListener界面
39.4　使用定位服务管理器（locationManager）来获取现在位置
39.4.1　讲解
39.4.2　自动判断最佳定位服务来源
39.5　更新地点（Location Updates）
39.6　在模拟器中切换地点
39.7　完整的程序
39.8　参考资料
第40章　结合地图与定位功能（My LocationOverlay）
40.1　添加定位层（MyLocation Overlay）
40.2　参考资料
第41章　为地图标上地标（Itemized Overlay）
41.1　设置图标层（Itemized Overlay）
41.2　添加图标层
41.3　地图开发备忘列表
41.4　参考资料
后记
附录A　如何取得范例源代码
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Google Android开发入门指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>疯狂Android讲义
第1章 android应用与开发环境	1
1.1 android的发展和历史	2
1.1.1 android的发展和简介	2
1.1.2 android平台架构及特性	3
1.2 搭建android开发环境	5
1.2.1 下载和安装android sdk	5
1.2.2 安装eclipse和adt插件	7
1.3 android常用开发工具的用法	10
1.3.1 创建、删除和浏览avd	10
1.3.2 使用android模拟器
（emulator）	14
1.3.3 使用ddms进行调试	15
1.3.4 android debug bridge（adb）
的用法	16
1.3.5 使用dx编译android应用	18
1.3.6 使用android asset packaging
tool（aapt）打包资源	19
1.3.7 使用mksdcard管理虚拟sd卡	19
1.4 开始第一个android应用	20
1.4.1 使用eclipse开发第一个
android应用	20
1.4.2 通过adt运行android应用	23
1.5 android应用结构分析	24
1.5.1 创建一个android应用	24
1.5.2 自动生成的r.java	26
1.5.3 res目录说明	27
1.5.4 android应用的清单文件：
androidmanifest.xml	28
1.5.5 应用程序权限说明	29
1.6 android应用的基本组件
介绍	31
1.6.1 activity和view	31
1.6.2 service	32
1.6.3 broadcastreceiver	32
1.6.4 contentprovider	32
1.6.5 intent和intentfilter	33
1.7 本章小结	33
第2章 android应用的界面编程	35
2.1 界面编程与视图（view）组件	36
2.1.1 视图组件与容器组件	36
2.1.2 使用xml布局文件控制ui
界面	40
2.1.3 在代码中控制ui界面	41
2.1.4 使用xml布局文件和java
代码混合控制ui界面	42
2.1.5 开发自定义view	43
2.2 布局管理器	46
2.2.1 线性布局	47
2.2.2 表格布局	49
2.2.3 帧布局	52
2.2.4 相对布局	55
2.2.5 绝对布局	58
2.3 基本界面组件	60
2.3.1 文本框（textview）与编辑框
（edittext）的功能和用法	60
2.3.2 按钮（button）与图片按钮（imagebutton）组件的功能和
用法	66
2.3.3 使用9patch图片作为按钮背景	68
2.3.4 单选按钮（radiobutton）和复选
框（checkbox）介绍与应用	69
2.3.5 状态开关按钮（togglebutton）
的功能与用法	71
2.3.6 时钟（analogclock和digital
clock）的功能与功法	73
2.3.7 图像视图（imageview）的
功能和用法	75
2.4 高级界面组件	79
2.4.1 自动完成文本框（autocompletetextview）的
功能和用法	79
2.4.2 spinner的功能和用法	80
2.4.3 日期、时间选择器（datepicker
和timepicker）的功能和用法	83
2.4.4 进度条（progressbar）的
功能和用法	85
2.4.5 拖动条（seekbar）的功能和
用法	90
2.4.6 星级评分条（ratingbar）的
功能和用法	91
2.4.7 选项卡（tabhost）的功能和
用法	93
2.4.8 滚动视图（scrollview）的
功能和用法	95
2.4.9 列表视图（listview和
listactivity）	95
2.4.10 可展开的列表组件（expandablelistview）	101
2.4.11 网格视图（gridview）和
图像切换器（imageswitcher）
功能和用法	104
2.4.12 画廊视图（gallery）的功能和
用法	107
2.5 对话框	110
2.5.1 使用alertdialog创建简单
对话框	110
2.5.2 使用alertdialog创建列表
对话框	112
2.5.3 使用alertdialog创建自定义
对话框	116
2.5.4 使用popupwindow	121
2.5.5 使用datepickerdialog、timepickerdialog	123
2.5.6 使用progressdialog创建进度
对话框	125
2.6 消息提示	127
2.6.1 使用toast显示提示信息框	128
2.6.2 notification的功能与用法	129
2.7 菜单	132
2.7.1 选项菜单和子菜单
（submenu）	132
2.7.2 使用监听器来监听菜单事件	136
2.7.3 创建复选菜单项和单选菜单项	137
2.7.4 设置与菜单项关联的activity	140
2.7.5 上下文菜单	141
2.8 本章小结	143
第3章 事件处理	144
3.1 android的事件处理	145
3.2 基于监听的事件处理	145
3.2.1 事件监听的处理模型	145
3.2.2 事件和事件监听器	148
3.2.3 内部类作为事件监听器类	151
3.2.4 外部类作为事件监听器类	152
3.2.5 activity本身作为事件监听器	153
3.2.6 匿名内部类作为事件监听器类	154
3.2.7 直接绑定到标签	155
3.3 基于回调的事件处理	156
3.3.1 回调机制与监听机制	156
3.3.2 基于回调的事件传播	158
3.3.3 重写ontouchevent方法响应
触摸屏事件	160
3.4 响应的系统设置的事件	162
3.4.1 configuration类简介	162
3.4.2 重写onconfigurationchanged
响应系统设置更改	164
3.5 handler消息传递机制	166
3.5.1 handler类简介	166
3.5.2 handler使用案例	167
3.6 本章小结	168
第4章 深入理解activity	169
4.1 建立、配置和使用activity	170
4.1.1 建立activity	170
4.1.2 配置activity	177
4.1.3 启动、关闭activity	179
4.1.4 使用bundle在activity之间
交换数据	181
4.1.5 启动其他activity并返回结果	185
4.2 activity的回调机制	189
4.3 activity的生命周期	190
4.3.1 activity的生命周期演示	190
4.3.2 activity与servlet的相似性与
区别	194
4.4 本章小结	195
第5章 使用intent和intentfilter
第5章 进行通信	196
5.1 intent对象详解	197
5.1.1 使用intent启动系统组件	197
5.2 intent的属性及intent-filter
配置	198
5.2.1 component属性	198
5.2.2 action、category属性与
intent-filter配置	200
5.2.3 指定action、category调用
系统activity	204
5.2.4 data、type属性与intent-filter
配置	209
5.2.5 extra属性	211
5.3 使用intent创建tab页面	211
5.4 本章小结	212
第6章 android应用的资源	213
6.1 资源的类型及存储方式	214
6.1.1 资源的类型以及存储方式	214
6.1.2 使用资源	216
6.2 使用字符串、颜色、
尺寸资源	217
6.2.1 颜色值的定义	217
6.2.2 定义字符串、颜色、尺寸资源
文件	218
6.2.3 使用字符串、颜色、
尺寸资源	219
6.3 数组（array）资源	222
6.4 使用（drawable）资源	225
6.4.1 图片资源	225
6.4.2 statelistdrawable资源	225
6.4.3 layerdrawable资源	227
6.4.4 shapedrawable资源	229
6.4.5 clipdrawable资源	231
6.4.6 animationdrawable资源	233
6.5 使用原始xml资源	236
6.5.1 定义原始xml资源	236
6.5.2 使用原始xml文件	237
6.6 使用布局（layout）资源	239
6.7 使用菜单（menu）资源	239
6.7.1 定义菜单资源	239
6.7.2 使用菜单资源	240
6.8 样式（style）和主题（theme）
资源	243
6.8.1 样式资源	243
6.8.2 主题资源	245
6.9 属性（attribute）资源	247
6.10 使用原始资源	249
6.11 国际化和资源自适应	251
6.11.1 java国际化的思路	252
6.11.2 java支持的语言和国家	252
6.11.3 完成程序国际化	253
6.11.4 为android应用提供国际化
资源	255
6.11.5 国际化android应用	256
6.12 本章小结	258
第7章 图形与图像处理	259
7.1 使用简单图片	260
7.1.1 使用drawable对象	260
7.1.2 bitmap和bitmapfactory	260
7.2 绘图	263
7.2.1 android绘图基础：canvas、
paint等	263
7.2.2 path类	267
7.2.3 绘制游戏动画	270
7.3 图形特效处理	278
7.3.1 使用matrix控制变换	278
7.3.2 使用drawbitmapmesh扭曲
图像	282
7.3.3 使用shader填充图形	285
7.4 逐帧（frame）动画	288
7.4.1 animationdrawable与逐帧
动画	288
7.5 补间（tween）动画	292
7.5.1 tween动画与interpolator	292
7.5.2 位置、大小、旋转度、透明度
改变的补间动画	293
7.5.3 自定义补间动画	298
7.6 使用surfaceview实现动画	300
7.6.1 surfaceview的绘图机制	301
7.7 本章小结	305
第8章 android的数据存储和io	306
8.1 使用sharedpreferences	307
8.1.1 sharedpreferences与editor
简介	307
8.1.2 sharedpreferences的存储
位置和格式	308
8.1.3 读、写其他应用shared
preferences	310
8.2 file存储	311
8.2.1 openfileoutput和open
fileinput	312
8.2.2 读写sd卡上的文件	314
8.3 sqlite数据库	321
8.3.1 简介sqlitedatabase	321
8.3.2 创建数据库和表	323
8.3.3 使用sql语句操作sqlite
数据库	323
8.3.4 使用sqlite3工具	325
8.3.5 使用特定方法操作sqlite
数据库	327
8.3.6 事务	329
8.3.7 sqliteopenhelper类	330
8.4 手势（gesture）	335
8.4.1 手势检测	335
8.4.2 增加手势	342
8.4.3 识别用户的手势	346
8.5 自动朗读（tts）	347
8.6 本章小结	350
第9章 使用contentprovider实现
第9章 数据共享	351
9.1 数据共享标准：
contentprovider简介	352
9.1.1 contentprovider简介	352
9.1.2 uri简介	353
9.1.3 使用contentresolver操作
数据	354
9.2 操作系统的contentprovider	355
9.2.1 使用contentprovider管理
联系人	355
9.2.2 使用contentprovider管理
多媒体内容	360
9.3 实现contentprovider	364
9.3.1 创建contentprovider的步骤	364
9.4 监听contentprovider的数据
改变	370
9.4.1 contentobserver简介	370
9.5 本章小结	372
第10章 service与broadcast
第10章 receiver	373
10.1 service简介	374
10.1.1 创建、配置service	374
10.1.2 启动和停止service	376
10.1.3 绑定本地service并与之
通信	377
10.1.4 service的生命周期	381
10.2 跨进程调用service
（aidl服务）	382
10.2.1 aidl服务简介	382
10.2.2 创建aidl文件	383
10.2.3 将接口暴露给客户端	383
10.2.4 客户端访问aidlservice	385
10.3 电话管理器
（telephonymanager）	393
10.4 短信管理器（smsmanager）	400
10.5 音频管理器
（audiomanager）	404
10.5.1 audiomanager简介	404
10.6 振动器（vibrator）	407
10.6.1 vibrator简介	407
10.6.2 使用vibrator控制手机振动	407
10.7 手机闹钟服务
（alarmmanager）	408
10.7.1 alarmmanager简介	408
10.7.2 设置闹钟	409
10.8 接收广播消息	413
10.8.1 broadcastreceiver简介	413
10.8.2 发送广播	414
10.8.3 有序广播	416
10.9 接收系统广播消息	424
10.10 本章小结	427
第11章 多媒体应用开发	428
11.1 音频和视频的播放	429
11.1.1 使用mediaplayer播放音频	429
11.1.2 使用soundpool播放音效	432
11.1.3 使用videoview播放视频	435
11.1.4 使用mediaplayer和
surfaceview播放视频	436
11.2 使用mediarecorder录制
音频	439
11.3 控制摄像头拍照	442
11.3.1 通过camera进行拍照	442
11.3.2 录制视频短片	446
11.4 本章小结	450
第12章 opengl与3d应用开发	451
12.1 3d图像与3d开发的
基本知识	452
12.2 opengl和opengl es简介	453
12.3 绘制2d图形	454
12.3.1 在android应用中使用
opengl es	454
12.3.2 绘制平面上的多边形	457
12.3.3 旋转	463
12.4 绘制3d图形	465
12.4.1 构建3d图形	465
12.4.2 应用纹理贴图	469
12.5 本章小结	475
第13章 android的网络应用	476
13.1 基于tcp协议的网络通信	477
13.1.1 tcp协议基础	477
13.1.2 使用serversocket创建
tcp服务器端	478
13.1.3 使用socket进行通信	479
13.1.4 加入多线程	483
13.2 使用url访问网络资源	488
13.2.1 使用url读取网络资源	489
13.2.2 使用urlconnection
提交请求	490
13.3 使用http访问网络	496
13.3.1 使用httpurlconnection	496
13.3.2 使用apache httpclient	501
13.4 使用webview视图
显示网页	505
13.4.1 使用webview浏览网页	506
13.4.2 使用webview加载html
代码	507
13.5 使用web service进行
网络编程	508
13.5.1 web service简介	509
13.5.2 web service平台概述	510
13.5.3 使用android应用调用
web service	512
13.6 本章小结	524
第14章 管理android手机桌面	525
14.1 管理手机桌面	526
14.1.1 删除桌面组件	526
14.1.2 添加桌面组件	526
14.2 改变手机壁纸	527
14.2.1 开发实时壁纸
（live wallpapers）	528
14.3 桌面快捷方式	532
14.3.1 在桌面上创建快捷方式	532
14.3.2 向launcher添加快捷方式	534
14.4 管理桌面小控件	535
14.5 实时文件夹（livefolder）	539
14.5.1 使用实时文件夹显示
contentprovider的数据	540
14.6 本章小结	545
第15章 传感器应用开发	546
15.1 利用android的传感器	547
15.1.1 开发传感器应用	547
15.1.2 下载和安装sensorsimulator	549
15.1.3 利用sensorsimulator开发
传感器应用	551
15.2 android的常用传感器	553
15.2.1 方向传感器orientation	553
15.2.2 磁场传感器magnetic field	554
15.2.3 温度传感器temperature	554
15.2.4 光传感器light	554
15.2.5 压力传感器pressure	554
15.3 传感器应用案例	557
15.4 本章小结	564
第16章 gps应用开发	565
16.1 支持gps的核心api	566
16.2 获取locationprovider	568
16.2.1 获取所有可用的
locationprovider	568
16.2.2 通过名称获得指定
locationprovider	569
16.2.3 根据criteria获得
locationprovider	569
16.3 获取定位信息	570
16.3.1 通过模拟器发送gps信息	571
16.3.2 获取定位数据	571
16.4 临近警告	573
16.5 本章小结	575
第17章 使用google map服务	576
17.1 调用google map的准备	577
17.1.1 获取map api key	577
17.1.2 创建支持google map api的
avd	580
17.2 根据gps信息在地图上
定位	582
17.3 gps导航	588
17.4 根据地址定位	590
17.4.1 地址解析与反向地址解析	590
17.4.2 根据地址定位	595
17.5 本章小结	597
第18章 疯狂连连看	598
18.1 连连看游戏简介	599
18.2 开发游戏界面	600
18.2.1 开发界面布局	600
18.2.2 开发游戏界面组件	601
18.2.3 处理方块之间的连接线	605
18.3 连连看的状态数据模型	606
18.3.1 定义数据模型	606
18.3.2 初始化游戏状态数据	606
18.4 加载界面的图片	610
18.5 实现游戏activity	612
18.6 实现游戏逻辑	618
18.6.1 定义gameservice组件接口	618
18.6.2 实现gameservice组件	619
18.6.3 获取触碰点的方块	620
18.6.4 判断两个方块是否可以相连	622
18.6.5 定义获取通道的工具方法	623
18.6.6 没有转折点的横向连接	625
18.6.7 没有转折点的纵向连接	626
18.6.8 一个转折点的连接	626
18.6.9 两个转折点的连接	629
18.6.10 找出最短距离	636
18.7 本章小结	638
第19章 电子拍卖系统	639
19.1 系统功能简介和架构设计	640
19.1.1 系统功能简介	640
19.1.2 系统架构设计	641
19.2 json简介	643
19.2.1 使用json语法创建对象	643
19.2.2 使用json语法创建数组	644
19.2.3 java的json支持	645
19.3 发送请求的工具类	646
19.4 用户登录	647
19.4.1 处理登录的servlet	648
19.4.2 用户登录	649
19.5 查看流拍物品	655
19.5.1 查看流拍物品的servlet	655
19.5.2 查看流拍物品	656
19.6 管理物品种类	661
19.6.1 浏览物品种类的servlet	661
19.6.2 查看物品种类	662
19.6.3 添加种类的servlet	666
19.6.4 添加物品种类	666
19.7 管理拍卖物品	668
19.7.1 查看自己的拍卖物品的
servlet	668
19.7.2 查看自己的拍卖物品	669
19.7.3 添加拍卖物品的servlet	672
19.7.4 添加拍卖物品	673
19.8 参与竞拍	678
19.8.1 选择物品种类	678
19.8.2 根据种类浏览物品的servlet	680
19.8.3 根据种类浏览物品	680
19.8.4 参与竞价的servlet	682
19.8.5 参与竞价	683
19.9 权限控制	688
19.10 本章小结	689
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>疯狂Android讲义
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通Android游戏开发
第1章 欢迎进入Android游戏世界        1
1.1 必备技能        1
1.1.1 扎实的Android基础        1
1.1.2 Linux和Shell脚本的基本知识        3
1.2 需要哪些软件工具        3
1.3 建立环境        4
1.3.1 获得Android源文件        4
1.3.2 提取本地Android库        6
1.3.3 为ARM处理器安装GNU工具链        8
1.3.4 编写定制编译脚本        10
1.4 建立开发环境        17
1.5 已经成功迈出第一步        22
第2章 在Android中编译本地代码        23
2.1 第一个本地Android应用        23
2.1.1 创建AVD        23
2.1.2 创建Android项目        26
2.1.3 应用体系结构        27
2.2 编译和测试共享库        38
2.2.1 缺少符号时的调试        40
2.2.2 在设备上测试动态库        41
2.2.3 用strace调试        42
2.2.4 静态编译        43
2.3 测试本地应用        44
2.4 下一章内容        46
第3章 从头构建Java游戏        47
3.1 Android游戏与Java ME游戏        47
3.2 创建你的第一个Java游戏——Space Blaster        48
3.2.1 了解游戏的体系结构        49
3.2.2 创建项目        50
3.2.3 创建游戏的活动类        51
3.2.4 创建游戏布局        53
3.2.5 实现游戏        58
3.2.6 处理按键和触控事件        66
3.3 在模拟器上测试        69
3.4 下一章内容        70
第4章 Java游戏续篇：多边形的乐趣        71
4.1 关于本章安排        71
4.2 了解在Android中绘制多边形的问题        71
4.3 了解绘制矩形的问题        73
4.4 为Asteroids创建一个Polygon类        75
4.5 为Asteroids创建PolygonSprite类        80
4.6 游戏的体系结构        84
4.7 创建项目        84
4.7.1 创建游戏布局        85
4.7.2 查看资源        86
4.7.3 了解游戏生命期        87
4.7.4 响应按键和触控事件        97
4.8 在模拟器上测试Asteroids        100
4.9 下一章内容        101
第5章 OpenGL 3D图形与JNI混合        102
5.1 移动设备的强大能力        103
5.2 在Java中使用OpenGL        104
5.2.1 Java主活动        106
5.2.2 表面视图        108
5.2.3 GL线程        110
5.2.4 立方体渲染器        113
5.2.5 Cube类        116
5.3 以本地方式使用OpenGL        118
5.3.1 主活动        120
5.3.2 本地接口类        122
5.3.3 对原示例的修改        123
5.3.4 本地立方体渲染器        124
5.3.5 本地立方体        131
5.3.6 编译和运行示例        132
5.4 OpenGL游戏移植到Android的问题        137
5.5 大幕已经拉开        138
第6章 3D射击游戏Ⅰ：面向Android的Wolfenstein 3D        139
6.1 收集工具        139
6.2 Wolf 3D        140
6.3 游戏体系结构        143
6.4 Wolf 3D的Java类        144
6.4.1 创建主要的WolfLauncher类        145
6.4.2 创建Wolf 3D主菜单        149
6.4.3 处理按键和触控事件        150
6.4.4 创建游戏循环        152
6.4.5 建立本地回调        153
6.4.6 创建声音和音乐处理器        155
6.4.7 创建运动控制器处理程序        156
6.4.8 创建运动控制器        158
6.4.9 声音类        165
6.4.10 本地接口类        174
6.5 编写本地层        176
6.5.1 初始化游戏循环        177
6.5.2 用C到Java的回调级联传递消息        179
6.6 编译本地库        185
6.6.1 编写Makefile        186
6.6.2 生成JNI头文件        187
6.7 在模拟器中测试Wolf 3D        187
6.8 下一章内容        189
第7章 3D射击游戏Ⅱ：面向Android的Doom        191
7.1 Java/C组合的无限潜能        191
7.2 将Doom引入移动设备        192
7.3 Doom的游戏体系结构        194
7.4 Java主活动        195
7.4.1 创建处理器        196
7.4.2 游戏布局        197
7.4.3 菜单和选择处理器        199
7.4.4 按键和触控事件处理器        200
7.4.5 本地回调处理器        202
7.4.6 导航控件        205
7.5 音频类        207
7.6 本地接口类        208
7.6.1 回调监听器        208
7.6.2 本地方法        209
7.6.3 C到Java的回调        209
7.7 本地层        212
7.7.1 本地方法实现        212
7.7.2 对原游戏的修改        223
7.8 Doom库（DSO）编译        229
7.9 在模拟器中测试面向Android的Doom        230
7.10 大功告成        232
附录 部署与编译提示        234
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通Android游戏开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android应用性能优化
目 　 　录
第1章 　Java代码优化　　1
1.1 　Android如何执行代码　　1
1.2 　优化斐波纳契数列　　4
1.2.1 　从递归到迭代　　4
1.2.2 　BigInteger　　6
1.3 　缓存结果　　10
1.4 　API等级　　12
1.5 　数据结构　　14
1.6 　响应能力　　17
1.6.1 　推迟初始化　　19
1.6.2 　StrictMode　　19
1.7 　SQLite　　21
1.7.1 　SQLite语句　　21
1.7.2 　事务　　25
1.7.3 　查询　　26
1.8 　总结　　27
第2章 　NDK入门　　28
2.1 　NDK里有什么　　28
2.2 　混合使用Java和C/C++代码　　31
2.2.1 　声明本地方法　　31
2.2.2 　实现JNI粘合层　　32
2.2.3 　创建Makefile　　33
2.2.4 　实现本地函数　　35
2.2.5 　编译本地库　　36
2.2.6 　加载本地库　　37
2.3 　Application.mk　　37
2.3.1 　为（几乎）所有设备优化　　39
2.3.2 　支持所有设备　　40
2.4 　Android.mk　　43
2.5 　使用C/C++改进性能　　45
2.6 　本地Acitivity　　52
2.6.1 　构建缺失的库　　54
2.6.2 　替代方案　　59
2.7 　总结　　60
第3章 　NDK进阶　　61
3.1 　汇编　　61
3.1.1 　最大公约数　　62
3.1.2 　色彩转换　　66
3.1.3 　并行计算平均值　　70
3.1.4 　ARM指令　　74
3.1.5 　ARM NEON　　79
3.1.6 　CPU特性　　80
3.2 　C扩展　　81
3.2.1 　内置函数　　82
3.2.2 　向量指令　　82
3.3 　技巧　　86
3.3.1 　内联函数　　87
3.3.2 　循环展开　　87
3.3.3 　内存预读取　　87
3.3.4 　用LDM/STM替换LDR/STD　　89
3.4 　总结　　89
第4章 　高效使用内存　　90
4.1 　说说内存　　90
4.2 　数据类型　　91
4.2.1 　值的比较　　93
4.2.2 　其他算法　　95
4.2.3 　数组排序　　96
4.2.4 　定义自己的类　　97
4.3 　访问内存　　98
4.4 　排布数据　　100
4.5 　垃圾收集　　104
4.5.1 　内存泄漏　　105
4.5.2 　引用　　106
4.6 　API　　109
4.7 　内存少的时候　　110
4.8 　总结　　111
第5章 　多线程和同步　　112
5.1 　线程　　112
5.2 　AsyncTask　　115
5.3 　Handler和Looper　　118
5.3.1 　Handler　　118
5.3.2 　Looper　　120
5.4 　数据类型　　120
5.5 　并发　　124
5.6 　多核　　125
5.6.1 　为多核修改算法　　126
5.6.2 　使用并发缓存　　129
5.7 　Activity生命周期　　131
5.7.1 　传递信息　　132
5.7.2 　记住状态　　134
5.8 　总结　　137
第6章 　性能评测和剖析　　138
6.1 　时间测量　　138
6.1.1 　System.nanoTime()　　139
6.1.2 　Debug.threadCpuTimeNanos()　　140
6.2 　方法调用跟踪　　141
6.2.1 　Debug.startMethodTracing()　　141
6.2.2 　使用Traceview工具　　142
6.2.3 　DDMS中的Traceview　　144
6.2.4 　本地方法跟踪　　145
6.3 　日志　　147
6.4 　总结　　148
第7章 　延长电池续航时间　　150
7.1 　电池　　150
7.2 　禁用广播接收器　　155
7.3 　网络　　159
7.3.1 　后台数据　　159
7.3.2 　数据传输　　160
7.4 　位置　　162
7.4.1 　注销监听器　　163
7.4.2 　更新频率　　164
7.4.3 　多种位置服务　　164
7.4.4 　筛选定位服务　　166
7.4.5 　最后已知位置　　168
7.5 　传感器　　169
7.6 　图形　　170
7.7 　提醒　　171
7.8 　WakeLock　　173
7.9 　总结　　175
第8章 　图形　　176
8.1 　布局优化　　176
8.1.1 　相对布局　　178
8.1.2 　合并布局　　181
8.1.3 　重用布局　　183
8.1.4 　ViewStub　　184
8.2 　布局工具　　185
8.2.1 　层级视图　　186
8.2.2 　layoutopt　　186
8.3 　OpenGL ES　　186
8.3.1 　扩展　　187
8.3.2 　纹理压缩　　189
8.3.3 　Mipmap　　193
8.3.4 　多APK　　194
8.3.5 　着色　　195
8.3.6 　场景复杂性　　195
8.3.7 　消隐　　195
8.3.8 　渲染模式　　195
8.3.9 　功耗管理　　195
8.4 　总结　　196
第9章 　RenderScript　　197
9.1 　概览　　197
9.2 　Hello World　　199
9.3 　Hello Rendering　　202
9.3.1 　创建渲染脚本　　202
9.3.2 　创建RenderScriptGL Context　　203
9.3.3 　展开RSSurfaceView　　204
9.3.4 　设置内容视图　　204
9.4 　在脚本中添加变量　　205
9.5 　HelloCompute　　208
9.5.1 　Allocation　　209
9.5.2 　rsForEach　　210
9.5.3 　性能　　213
9.6 　自带的RenderScript API　　214
9.6.1 　rs_types.rsh　　215
9.6.2 　rs_core.rsh　　217
9.6.3 　rs_cl.rsh　　219
9.6.4 　rs_math.rsh　　222
9.6.5 　rs_graphics.rsh　　223
9.6.6 　rs_time.rsh　　224
9.6.7 　rs_atomic.rsh　　225
9.7 　RenderScript与NDK对比　　225
9.8 　总结　　226

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android应用性能优化
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android应用UI设计模式
第一部分　用户体验原则和Android特色
第1章　向Android迁移（案例）　　2
1.1 　启动图标　　2
1.2 　操作栏与信息架构　　3
1.2.1 　重新设计前　　3
1.2.2 　重新设计后　　5
1.3 　选项卡　　8
1.4 　专用选择页　　8
1.5 　选择控件　　9
1.5.1 　重新设计前　　9
1.5.2 　重新设计后　　10
1.6 　按钮　　10
1.7 　搜索结果屏幕　　11
1.7.1 　重新设计前　　11
1.7.2 　重新设计后　　12
1.8 　结果详情屏幕　　13
1.8.1 　重新设计前　　13
1.8.2 　重新设计后　　14
1.9 　最终结果　　16
第2章　Android的特色　　19
2.1 　这里是平面国　　19
2.2 　轻按任何地方　　21
2.3 　适合各种设备　　22
2.4 　摆脱空间限制　　24
2.5 　大局着眼，小处着手　　27
第3章　Android分散化　　31
3.1 　何谓分散化　　31
3.2 　花无百日红　　31
3.3 　Android设备类型　　32
3.3.1 　紧凑型手机　　32
3.3.2 　全尺寸移动手机　　33
3.3.3 　平板手机　　34
3.3.4 　小型平板　　35
3.3.5 　大型平板　　37
3.4 　为分散化而歌　　39
第4章　移动设计流程　　40
4.1 　现场观察用户如何与移动设备交互　　40
4.2 　原型设计方法必须考虑尺寸因素　　40
4.3 　用户测试必须涵盖运动、声音和多点触控等方面　　41
4.4 　触控界面必须既简约又精巧　　41
4.5 　愉悦不可或缺　　41
4.6 　讲述完整的故事——为跨界而设计　　42
4.7 　移动设计案例研究　　42
4.7.1 　第1步：范围、概念和规划　　42
4.7.2 　第2步：设计研讨会　　44
4.7.3 　第3步：使用便利贴做RITE调查　　45
4.7.4 　第4步：视觉设计　　48
第二部分　Android 设计模式与反模式
第5章　欢迎体验　　50
5.1 　最终用户许可协议（反模式）　　50
5.1.1 　出现的时间和场合　　50
5.1.2  　示例　　50
5.1.3  　为何要避免　　52
5.1.4  　其他考虑因素　　52
5.2 　联系障碍（反模式）　　52
5.2.1 　出现的时间和场合　　52
5.2.2 　示例　　53
5.2.3 　为何要避免　　54
5.2.4 　其他考虑因素　　54
5.3 　注册（反模式）　　55
5.3.1 　出现的时间和场合　　55
5.3.2 　示例　　55
5.3.3 　为何要避免　　56
5.3.4 　其他考虑因素　　56
5.4 　欢迎动画　　57
5.4.1 　工作原理　　57
5.4.2 　示例　　57
5.4.3 　使用的时机和场合　　58
5.4.4 　使用的原因　　58
5.4.5 　其他用途　　58
5.4.6 　Pet Shop应用　　58
5.4.7 　平板应用　　59
5.5 　使用说明　　59
5.5.1 　工作原理　　59
5.5.2 　示例　　59
5.5.3 　使用的时机和场合　　61
5.5.4 　使用的原因　　61
5.5.5 　其他用途　　61
5.5.6 　Pet Shop应用　　62
5.5.7 　平板应用　　62
第6章　主屏幕　　63
6.1 　链接列表　　63
6.1.1 　工作原理　　63
6.1.2 　示例　　63
6.1.3 　使用的时机和场合　　65
6.1.4 　使用的原因　　65
6.1.5 　其他用途　　65
6.1.6 　Pet Shop应用　　66
6.1.7 　平板应用　　66
6.2 　仪表板　　66
6.2.1 　工作原理　　67
6.2.2 　示例　　67
6.2.3 　使用的时机和场合　　67
6.2.4 　使用的原因　　68
6.2.5 　Pet Shop应用　　68
6.2.6 　平板应用　　69
6.3 　更新　　69
6.3.1 　工作原理　　69
6.3.2 　示例　　69
6.3.3 　使用的时机和场合　　70
6.3.4 　使用的原因　　70
6.3.5 　其他用途　　71
6.3.6 　Pet Shop应用　　71
6.3.7 　平板应用　　72
6.4 　浏览　　72
6.4.1 　工作原理　　72
6.4.2 　示例　　73
6.4.3 　使用的时机和场合　　74
6.4.4 　使用的原因　　74
6.4.5 　其他用途　　74
6.4.6 　Pet Shop应用　　75
6.4.7 　平板应用　　76
6.5 　地图　　76
6.5.1 　工作原理　　76
6.5.2 　示例　　76
6.5.3 　使用的时机和场合　　77
6.5.4 　使用的原因　　77
6.5.5 　其他用途　　77
6.5.6 　Pet Shop应用　　78
6.5.7 　平板应用　　79
6.6 　历史记录　　80
6.6.1 　工作原理　　80
6.6.2 　示例　　80
6.6.3 　使用的时机和场合　　80
6.6.4 　使用的原因　　81
6.6.5 　其他用途　　81
6.6.6 　Pet Shop应用　　82
6.6.7 　平板应用　　83
第7章　搜索　　84
7.1 　语音搜索　　84
7.1.1 　工作原理　　84
7.1.2 　示例　　84
7.1.3 　使用的时机和场合　　85
7.1.4 　使用的原因　　86
7.1.5 　其他用途　　86
7.1.6 　Pet Shop应用　　87
7.1.7 　平板应用　　87
7.2 　自动完成与自动建议　　89
7.2.1 　工作原理　　89
7.2.2 　示例　　89
7.2.3 　使用的时机和场合　　90
7.2.4 　使用的原因　　90
7.2.5 　其他用途　　91
7.2.6 　Pet Shop应用　　91
7.2.7 　平板应用　　92
7.3 　轻按优先　　93
7.3.1 　工作原理　　93
7.3.2 　示例　　94
7.3.3 　使用的时机和场合　　94
7.3.4 　使用的原因　　94
7.3.5 　其他用途　　95
7.3.6 　Pet Shop应用　　95
7.3.7 　平板应用　　95
7.4 　拖动刷新　　96
7.4.1 　工作原理　　96
7.4.2 　示例　　96
7.4.3 　使用的时机和场合　　97
7.4.4 　使用的原因　　97
7.4.5 　其他用途　　97
7.4.6 　Pet Shop应用　　97
7.4.7 　平板应用　　97
7.5 　从菜单搜索　　98
7.5.1 　工作原理　　98
7.5.2 　示例　　98
7.5.3 　使用的时机和场合　　99
7.5.4 　使用的原因　　99
7.5.5 　其他用途　　99
7.5.6 　Pet Shop应用　　99
7.5.7 　平板应用　　100
7.6 　从操作栏搜索　　100
7.6.1 　工作原理　　101
7.6.2 　示例　　101
7.6.3 　使用的时机和场合　　102
7.6.4 　使用的原因　　102
7.6.5 　其他用途　　102
7.6.6 　Pet Shop应用　　103
7.6.7 　平板应用　　103
7.7 　专用搜索　　104
7.7.1 　工作原理　　104
7.7.2 　示例　　104
7.7.3 　使用的时机和场合　　105
7.7.4 　使用的原因　　105
7.7.5 　其他用途　　105
7.7.6 　Pet Shop应用　　105
7.7.7 　平板应用　　106
7.8 　在内容页面中搜索　　106
7.8.1 　工作原理　　106
7.8.2 　示例　　106
7.8.3 　使用的时机和场合　　107
7.8.4 　使用的原因　　107
7.8.5 　其他用途　　107
7.8.6 　Pet Shop应用　　108
7.8.7 　平板应用　　108
7.9 　搜索与细化分离（反模式）　　109
7.9.1 　出现的时间和场合　　109
7.9.2 　示例　　109
7.9.3 　为何要避免　　110
7.9.4 　其他考虑因素　　110
第8章　排序和筛选　　112
8.1 　残缺的细化（反模式）　　112
8.1.1 　出现的时机和场合　　112
8.1.2 　示例　　112
8.1.3 　为何要避免　　114
8.2 　细化页面　　115
8.2.1 　工作原理　　115
8.2.2 　示例　　115
8.2.3 　使用的时机和场合　　118
8.2.4 　使用的原因　　118
8.2.5 　其他用途　　118
8.2.6 　Pet Shop应用　　119
8.2.7 　平板应用　　119
8.3 　筛选带　　120
8.3.1 　工作原理　　120
8.3.2 　示例　　120
8.3.3 　使用的时机和场合　　121
8.3.4 　使用的原因　　121
8.3.5 　其他用途　　121
8.3.6 　Pet Shop应用　　122
8.3.7 　平板应用　　123
8.4 　并行架构　　123
8.4.1 　工作原理　　124
8.4.2 　示例　　124
8.4.3 　使用的时机和场合　　125
8.4.4 　使用的原因　　125
8.4.5 　其他用途　　125
8.4.6 　Pet Shop应用　　125
8.4.7 　平板应用　　126
8.5 　选项卡　　129
8.5.1 　工作原理　　129
8.5.2 　示例　　129
8.5.3 　使用的时机和场合　　131
8.5.4 　使用的原因　　131
8.5.5 　其他用途　　131
8.5.6 　Pet Shop应用　　132
8.5.7 　平板应用　　133
第9章　避免无结果或无关结果　　136
9.1 　不指出系统状态（反模式）　　136
9.1.1 　出现的时机和场合　　136
9.1.2 　示例　　136
9.1.3 　为何要避免　　137
9.1.4 　其他考虑因素　　138
9.2 　低效界面（反模式）　　138
9.2.1 　出现的时机和场合　　138
9.2.2 　示例　　138
9.2.3 　其他考虑因素　　139
9.3 　无用控件（反模式）　　139
9.3.1 　出现的时机和场合　　139
9.3.2 　示例　　139
9.3.3 　为何要避免　　140
9.4 　你要找的是不是……　　140
9.4.1 　工作原理　　140
9.4.2 　示例　　141
9.4.3 　使用的时机和场合　　141
9.4.4 　使用的原因　　142
9.4.5 　其他用途　　142
9.4.6 　Pet Shop应用　　142
9.4.7 　平板应用　　142
9.5 　部分匹配　　143
9.5.1 　工作原理　　143
9.5.2 　示例　　143
9.5.3 　使用的时机和场合　　145
9.5.4 　使用的原因　　145
9.5.5 　其他用途　　145
9.5.6 　Pet Shop应用　　145
9.5.7 　平板应用　　145
9.6 　本地结果　　146
9.6.1 　工作原理　　146
9.6.2 　示例　　146
9.6.3 　使用的时机和场合　　147
9.6.4 　使用的原因　　147
9.6.5 　其他用途　　147
9.6.6 　Pet Shop应用　　148
9.6.7 　平板应用　　149
第10章　数据输入　　150
10.1 　滑块　　150
10.1.1 　工作原理　　150
10.1.2 　示例　　150
10.1.3 　使用的时机和场合　　151
10.1.4 　使用的原因　　151
10.1.5 　其他用途　　152
10.1.6 　Pet Shop应用　　152
10.1.7 　平板应用　　153
10.2 　步进器　　155
10.2.1 　工作原理　　155
10.2.2 　示例　　155
10.2.3 　使用的时机和场合　　156
10.2.4 　使用的原因　　156
10.2.5 　其他用途　　156
10.2.6 　Pet Shop应用　　157
10.2.7 　平板应用　　159
10.3 　可滚动的日历　　159
10.3.1 　工作原理　　159
10.3.2 　示例　　159
10.3.3 　使用的时机和场合　　160
10.3.4 　使用的原因　　160
10.3.5 　其他用途　　160
10.3.6 　Pet Shop应用　　161
10.3.7 　平板应用　　161
10.4 　日期与时间选择器　　163
10.4.1 　工作原理　　163
10.4.2 　示例　　163
10.4.3 　使用的时机和场合　　166
10.4.4 　使用的原因　　166
10.4.5 　其他用途　　166
10.4.6 　Pet Shop应用　　167
10.4.7 　平板应用　　168
10.5 　下拉列表　　170
10.5.1 　工作原理　　170
10.5.2 　示例　　170
10.5.3 　使用的时机和场合　　172
10.5.4 　使用的原因　　172
10.5.5 　其他用途　　172
10.5.6 　Pet Shop应用　　173
10.5.7 　平板应用　　173
10.6 　多选　　174
10.6.1 　工作原理　　174
10.6.2 　示例　　174
10.6.3 　使用的时机和场合　　175
10.6.4 　使用的原因　　175
10.6.5 　其他用途　　175
10.6.6 　Pet Shop应用　　176
10.6.7 　平板应用　　177
10.7 　自由文本输入与提取　　177
10.7.1 　工作原理　　178
10.7.2 　示例　　178
10.7.3 　使用的时机和场合　　179
10.7.4 　使用的原因　　179
10.7.5 　其他用途　　179
10.7.6 　Pet Shop应用　　179
10.7.7 　平板应用　　179
10.8 　带输入掩码的文本框　　182
10.8.1 　工作原理　　183
10.8.2 　示例　　183
10.8.3 　使用的时机和场合　　185
10.8.4 　使用的原因　　185
10.8.5 　其他用途　　185
10.8.6 　Pet Shop应用　　186
10.8.7 　平板应用　　186
10.9 　带原子实体的文本框　　189
10.9.1 　工作原理　　189
10.9.2 　示例　　189
10.9.3 　使用的时机和场合　　189
10.9.4 　使用的原因　　190
10.9.5 　其他用途　　191
10.9.6 　Pet Shop应用　　191
10.9.7 　平板应用　　192
第11章　表单　　193
11.1 　内嵌式错误消息　　193
11.1.1 　工作原理　　193
11.1.2 　示例　　193
11.1.3 　使用的时机和场合　　195
11.1.4 　使用的原因　　195
11.1.5 　其他用途　　195
11.1.6 　Pet Shop应用　　196
11.1.7 　平板应用　　197
11.2 　提示框　　198
11.2.1 　工作原理　　198
11.2.2 　示例　　198
11.2.3 　使用的时机和场合　　200
11.2.4 　使用的原因　　200
11.2.5 　其他用途　　200
11.2.6 　Pet Shop应用　　201
11.2.7 　平板应用　　201
11.3 　弹出框　　203
11.3.1 　工作原理　　203
11.3.2 　示例　　203
11.3.3 　使用的时机和场合　　205
11.3.4 　使用的原因　　205
11.3.5 　其他用途　　205
11.3.6 　Pet Shop应用　　206
11.3.7 　平板应用　　207
11.4 　回调验证　　210
11.4.1 　工作原理　　210
11.4.2 　示例　　210
11.4.3 　使用的时机和场合　　211
11.4.4 　使用的原因　　211
11.4.5 　其他用途　　211
11.4.6 　Pet Shop应用　　211
11.4.7 　平板应用　　212
11.5 　取消/确定　　212
11.5.1 　工作原理　　212
11.5.2 　示例　　212
11.5.3 　使用的时机和场合　　214
11.5.4 　使用的原因　　215
11.5.5 　其他用途　　215
11.5.6 　Pet Shop应用　　217
11.5.7 　平板应用　　217
11.6 　上方标签　　221
11.6.1 　工作原理　　221
11.6.2 　示例　　221
11.6.3 　使用的时机和场合　　222
11.6.4 　使用的原因　　222
11.6.5 　其他用途　　224
11.6.6 　Pet Shop应用　　224
11.6.7 　平板应用　　225
11.7 　从环境获取输入　　227
11.7.1 　工作原理　　227
11.7.2 　示例　　227
11.7.3 　使用的时机和场合　　231
11.7.4 　使用的原因　　231
11.7.5 　其他用途　　231
11.7.6 　Pet Shop应用　　233
11.7.7 　平板应用　　233
11.8 　输入加速　　234
11.8.1 　工作原理　　234
11.8.2 　示例　　234
11.8.3 　使用的时机和场合　　235
11.8.4 　使用的原因　　235
11.8.5 　其他用途　　235
11.8.6 　Pet Shop应用　　235
11.8.7 　平板应用　　236
第12章　移动银行　　238
12.1 　登录加速器　　238
12.1.1 　工作原理　　238
12.1.2 　示例　　238
12.1.3 　使用的时机和场合　　241
12.1.4 　使用的原因　　241
12.1.5 　其他用途　　242
12.1.6 　Pet Shop应用　　243
12.1.7 　平板应用　　244
12.2 　专用选择页面　　245
12.2.1 　工作原理　　245
12.2.2 　示例　　246
12.2.3 　使用的时机和场合　　246
12.2.4 　使用的原因　　246
12.2.5 　其他用途　　247
12.2.6 　Pet Shop应用　　247
12.2.7 　平板应用　　248
12.3 　表单至上　　249
12.3.1 　工作原理　　249
12.3.2 　示例　　249
12.3.3 　使用的时机和场合　　250
12.3.4 　使用的原因　　250
12.3.5 　其他用途　　250
12.3.6 　Pet Shop应用　　250
12.3.7 　平板应用　　251
12.4 　专用页面向导　　251
12.4.1 　工作原理　　251
12.4.2 　示例　　252
12.4.3 　使用的时机和场合　　253
12.4.4 　使用的原因　　253
12.4.5 　其他用途　　253
12.4.6 　Pet Shop应用　　254
12.4.7 　平板应用　　255
12.5 　以表单结尾的向导　　255
12.5.1 　工作原理　　255
12.5.2 　示例　　255
12.5.3 　使用的时机和场合　　256
12.5.4 　使用的原因　　256
12.5.5 　其他用途　　257
12.5.6 　Pet Shop应用　　257
12.5.7 　平板应用　　258
12.6 　核对?确认　　260
12.6.1 　工作原理　　260
12.6.2 　示例　　260
12.6.3 　使用的时机和场合　　261
12.6.4 　使用的原因　　261
12.6.5 　其他用途　　261
12.6.6 　Pet Shop应用　　262
12.6.7 　平板应用　　262
12.7 　近场通信　　263
12.7.1 　工作原理　　263
12.7.2 　示例　　263
12.7.3 　使用的时机和场合　　266
12.7.4 　使用的原因　　266
12.7.5 　其他用途　　267
12.7.6 　Pet Shop应用　　267
12.7.7 　平板应用　　268
第13章　导航　　270
13.1 　上窜下跳（反模式）　　270
13.1.1 　出现的时间和场合　　270
13.1.2 　示例　　270
13.1.3 　为何要避免　　271
13.1.4 　其他考虑因素　　271
13.1.5 　出现的时间和场合　　271
13.2 　多个推荐区域（反模式）　　272
13.2.1 　出现的时间和场合　　272
13.2.2 　示例　　272
13.2.3 　为何要避免　　273
13.2.4 　其他考虑因素　　273
13.3 　轮播　　274
13.3.1 　工作原理　　274
13.3.2 　示例　　274
13.3.3 　使用的时机和场合　　275
13.3.4 　使用的原因　　275
13.3.5 　其他用途　　275
13.3.6 　Pet Shop应用　　276
13.3.7 　平板应用　　276
13.4 　弹出式菜单　　279
13.4.1 　工作原理　　279
13.4.2 　示例　　279
13.4.3 　使用的时机和场合　　281
13.4.4 　使用的原因　　281
13.4.5 　其他用途　　281
13.4.6 　Pet Shop应用　　282
13.4.7 　平板应用　　283
13.5 　水印　　285
13.5.1 　工作原理　　285
13.5.2 　示例　　286
13.5.3 　使用的时机和场合　　287
13.5.4 　使用的原因　　287
13.5.5 　其他用途　　287
13.5.6 　Pet Shop应用　　287
13.5.7 　平板应用　　288
13.6 　瑞士军刀导航　　290
13.6.1 　工作原理　　290
13.6.2 　示例　　290
13.6.3 　使用的时机和场合　　293
13.6.4 　使用的原因　　293
13.6.5 　其他用途　　294
13.6.6 　Pet Shop应用　　297
13.6.7 　平板应用　　298
13.7 　集成　　299
13.7.1 　工作原理　　300
13.7.2 　示例　　300
13.7.3 　使用的时机和场合　　300
13.7.4 　使用的原因　　301
13.7.5 　其他用途　　301
13.7.6 　Pet Shop应用　　303
13.7.7 　平板应用　　303
第14章　平板模式　　306
14.1 　片段　　306
14.1.1 　工作原理　　306
14.1.2 　示例　　306
14.1.3 　使用的时机和场合　　307
14.1.4 　使用的原因　　308
14.1.5 　其他用途　　308
14.2 　复合视图　　308
14.2.1 　工作原理　　308
14.2.2 　示例　　308
14.2.3 　使用的时机和场合　　309
14.2.4 　使用的原因　　309
14.2.5 　其他用途　　309
14.3 　侧面导航（试验模式）　　310
14.3.1 　工作原理　　310
14.3.2 　示例　　311
14.3.3 　使用的时机和场合　　312
14.3.4 　使用的原因　　313
14.3.5 　其他用途　　313
14.4 　将内容用作导航元素　　314
14.4.1 　工作原理　　314
14.4.2 　示例　　314
14.4.3 　使用的时机和场合　　316
14.4.4 　使用的原因　　316
14.4.5 　其他用途　　316
14.5 　二维更多类似　　317
14.5.1 　工作原理　　317
14.5.2 　示例　　317
14.5.3 　使用的时机和场合　　318
14.5.4 　使用的原因　　318
14.5.5 　其他用途　　318
14.6 　C形轻扫（试验模式）　　319
14.6.1 　工作原理　　320
14.6.2 　示例　　320
14.6.3 　使用的时机和场合　　321
14.6.4 　使用的原因　　321
14.6.5 　其他用途　　321
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android应用UI设计模式
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android技术内幕
前言
第1章  准备工作 /1
1.1  深入认识Android /2
1.1.1  Android的系统构架 /2
1.1.2  Android的初始化流程 /5
1.1.3  各个层次之间的相互关系 /8
1.1.4  Android系统开发（移植）和应用开发 /11
1.2  获取和编译Android的源码 /13
1.2.1  环境配置 /13
1.2.2  获取Android源码 /14
1.2.3  编译Android的源码及其工具包 /16
1.2.4  运行Android系统 /21
1.3  开发环境搭建 /23
1.3.1  应用开发环境搭建 /23
1.3.2  源码开发环境搭建 /26
1.4  Android源码结构 /32
1.5  小结 /33
第2章  Android的内核机制和结构剖析 /34
2.1  Linux与Android的关系 /35
2.1.1  为什么会选择Linux /35
2.1.2  Android不是Linux /35
2.2  Android对Linux内核的改动 /37
2.2.1  Goldfish /37
2.2.2  YAFFS2 /38
2.2.3  蓝牙 /39
2.2.4  调度器（Scheduler）/39
2.2.5  Android新增的驱动 /40
2.2.6  电源管理 /41
2.2.7  杂项 /41
2.3  Android对Linux内核的增强 /42
2.3.1  Alarm（硬件时钟）/43
2.3.2  Ashmem（匿名内存共享）/46
2.3.3  Low Memory Killer（低内存管理）/52
2.3.4  Logger（日志设备）/56
2.3.5  Android PMEM /65
2.3.6  switch /79
2.3.7  Timed GPIO /88
2.3.8  Android Ram Console /94
2.4  小结 /99
第3章  Android的IPC机制--Binder /100
3.1  Binder概述 /101
3.1.1  为什么选择Binder /101
3.1.2  初识Binder /102
3.2  Binder驱动的原理和实现 /102
3.2.1  Binder驱动的原理 /102
3.2.2  Binder驱动的实现 /103
3.3  Binder的构架与实现 /132
3.3.1  Binder的系统构架 /132
3.3.2  Binder的机制和原理 /133
3.4  小结 /150
第4章  电源管理 /151
4.1  电源管理概述 /152
4.2  电源管理结构 /152
4.3  Android的电源管理机制 /153
4.4  Android电源管理机制的实现 /154
4.5  小结 /187
第5章  驱动的工作原理及实现机制 /188
5.1  显示驱动（Framebuffer）/189
5.1.1  Framebuffer的工作原理 /189
5.1.2  Framebuffer的构架 /190
5.1.3  Framebuffer驱动的实现机制 /190
5.2  视频驱动（V4L和V4L2）/201
5.2.1  V4L2介绍 /201
5.2.2  V4L2的原理和构架 /201
5.2.3  V4L2的实现 /202
5.3  音频驱动（OSS和ALSA）/208
5.3.1  OSS与ALSA介绍 /208
5.3.2  OSS的构架与实现 /209
5.3.3  ALSA的构架与实现 /213
5.4  MTD驱动 /214
5.4.1  MTD驱动的功能 /214
5.4.2  MTD驱动的构架 /215
5.4.3  MTD驱动的原理及实现 /215
5.5  Event输入设备驱动 /223
5.5.1  Input的系统构架 /223
5.5.2  Event输入驱动的构架 /224
5.5.3  Event输入驱动的原理 /224
5.5.4  Event输入驱动的实现 /225
5.6  蓝牙驱动（Bluetooth）/235
5.6.1  Bluetooth驱动的构架 /235
5.6.2  BlueZ的原理及实现 /237
5.7  WLAN驱动（Wi-Fi）/244
5.7.1  WLAN构架 /244
5.7.2  Wi-Fi驱动的实现原理 /245
5.8  小结 /245
第6章  原生库的原理及实现 /246
6.1  系统C库（Bionic Libc）/247
6.1.1  Bionic Libc功能概述 /247
6.1.2  Bionic Libc实现原理 /248
6.2  功能库 /258
6.2.1  WebKit构架与实现 /258
6.2.2  多媒体框架与实现 /275
6.2.3  Android SQLite框架及原理 /285
6.3  扩展库 /289
6.3.1  Skia底层库分析 /289
6.3.2  OpenGL底层库分析 /299
6.3.3  Android-OpenSSL实现及运用 /306
6.3.4  FreeType及Font Engine Manager /317
6.3.5  FreeType结构体系和渲染流程 /317
6.4  原生服务 /328
6.4.1  AudioFlinger实现 /328
6.4.2  SurfaceFlinger实现 /341
6.5  小结 /353
第7章  硬件抽象层的原理与实现 /354
7.1  硬件抽象层的实现原理 /355
7.1.1  Android HAL构架 /355
7.1.2  Android HAL的实现 /357
7.2  Android Overlay构架与实现 /361
7.2.1  Android Overlay系统构架 /361
7.2.2  Overlay HAL框架与实现 /362
7.2.3  Overlay与SurfaceFinger /369
7.3  Android Camera 构架与实现 /375
7.3.1  Android Camera系统构架 /375
7.3.2  Camera HAL框架与实现 /377
7.3.3  Camera本地实现 /385
7.4  Android Audio HAL实现 /394
7.4.1  Audio HAL框架 /395
7.4.2  Android默认的Audio HAL实现 /398
7.4.3  DUMP功能的Audio HAL实现 /400
7.4.4  基于A2dp的蓝牙音频设备HAL实现 /402
7.4.5  模拟器上的Audio HAL实现 /403
7.5  Android RIL实现 /404
7.5.1  Android RIL构架 /404
7.5.2  radiooptiongs实现 /407
7.5.3  libril库实现 /409
7.5.4  reference-ril库实现 /415
7.5.5  RILD守护进程实现 /418
7.5.6  request流程分析 /423
7.5.7  response流程分析 /427
7.6  Android Sensor HAL实现 /434
7.6.1  Android Sensor构建 /434
7.6.2  Sensor HAL接口 /435
7.6.3  Sensor HAL实现 /438
7.7  Android WIFI HAL实现 /441
7.7.1  Android WIFI系统构架 /441
7.7.2  wpa_supplicant框架 /442
7.7.3  WIFI HAL实现 /444
7.8  Android蓝牙本地实现 /447
7.8.1  Android蓝牙构架 /447
7.8.2  BlueZ结构体系 /448
7.8.3  BlueZ适配层 /452
7.9  Android 定位实现 /453
7.9.1  定位系统构架 /453
7.9.2  GPS HAL实现 /454
7.10  Android Power HAL实现 /459
7.11  Android Vibrator HAL实现 /461
7.12  小结 /462
第8章  Dalvik虚拟机的构架、原理与实现 /463
8.1  Dalvik虚拟机概述 /464
8.1.1  什么是Dalvik虚拟机 /464
8.1.2  Dalvik虚拟机的功能 /464
8.1.3  Dalvik虚拟机与Java虚拟机的区别 /465
8.2  Dalvik构架与实现 /466
8.2.1  Dalvik系统构架 /466
8.2.2  dx和dexdump工具 /468
8.2.3  .dex文件格式解析 /470
8.2.4  Dalvik内部机制 /487
8.2.5  Dalvik进程管理 /492
8.2.6  Dalvik内存管理 /501
8.2.7  Dalvik加载器 /509
8.2.8  Dalvik解释器 /517
8.2.9  Dalvik JIT /519
8.3  JNI的构架与实现 /523
8.3.1  JNI构架 /523
8.3.2  JNI实现 /524
8.4  小结 /526
第9章  Android 核心库 /527
9.1  Android核心库简介 /528
9.2  Android系统API /529
9.2.1  android包 /529
9.2.2  android资源包 /529
9.2.3  ApiCheck机制 /529
9.3  小结 /532
后记 /533
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android技术内幕
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android开发入门教程
第1章 Android开发概述	1
1.1 智能手机编程的挑战	1
1.2 Android由哪些部分构成	2
1.3 你能够控制什么	3
第2章 项目和目标	4
2.1 基本概念	4
2.2 创建项目	5
2.3 项目结构	5
2.3.1 根目录	5
2.3.2 主Activity	6
2.3.3 资源	6
2.3.4 编译结果	7
2.4 AndroidManifest.xml文件	7
2.4.1 一开始是根元素	8
2.4.2 权限、编排和应用程序	8
2.4.3 应用程序总要做点什么	9
2.4.4 确保最大兼容性	10
2.4.5 版本＝控制	10
2.5 模拟器和目标	11
2.5.1 虚拟设备	11
2.5.2 设定目标	13
第3章 简单的应用程序	14
3.1 创建项目	14
3.2 剖析Activity	15
3.3 构建和运行Activity	17
第4章 基于XML的布局	18
4.1 何谓基于XML的布局	18
4.2 为什么使用基于XML的布局	18
4.3 举个例子	19
4.4 什么时候加@符号	20
4.5 怎样在Java中使用布局文件	20
4.6 把故事讲完	20
第5章 使用基本的部件	22
5.1 标签	22
5.2 按钮	23
5.3 图像	23
5.4 字段	24
5.5 复选框	25
5.6 单选按钮	27
5.7 视图	28
5.7.1 特性	28
5.7.2 方法	29
5.7.3 颜色	29
第6章 使用容器	30
6.1 线性布局	30
6.1.1 LinearLayout的概念和特性	30
6.1.2 LinearLayout示例	33
6.2 相对布局	36
6.2.1 RelativeLayout的概念和属性	36
6.2.2 RelativeLayout示例	37
6.3 表格布局	40
6.3.1 TableLayout的概念和特性	40
6.3.2 TableLayout示例	42
6.4 滚动	42
第7章 使用选择部件	45
7.1 适配器	45
7.2 列表	46
7.3 微调控件	49
7.4 网格	51
7.5 自动完成字段（至少减少35%的输入）	53
7.6 画廊	55
第8章 使用列表	57
8.1 初步改进	57
8.2 动态列表	58
8.3 更好，更快，更强	60
8.3.1 使用convertView	61
8.3.2 使用持有者模式	62
8.4 交互式列表	64
8.5 可重用列表	68
8.6 选用其他适配器	74
第9章 高级部件和容器	75
9.1 选择日期和时间	75
9.2 时钟	78
9.3 进度条	79
9.4 滑动选择	79
9.5 选项卡	80
9.5.1 构建	80
9.5.2 规则	80
9.5.3 使用	81
9.5.4 增强	83
9.5.5 Intent和View	84
9.6 翻转	85
9.6.1 手工翻转	86
9.6.2 动态添加内容	87
9.6.3 自动翻转	88
9.7 滑动的抽屉	89
9.8 其他容器	91
第10章 输入法框架	92
10.1 键盘，硬还是软	92
10.2 按需定制	92
10.3 修改附属键	95
10.4 适应布局	96
10.5 释放创造力	97
第11章 使用菜单	98
11.1 选项菜单	98
11.1.1 创建选项菜单	98
11.1.2 添加菜单项和子菜单	99
11.2 上下文菜单	100
11.3 简单的示例	100
11.4 扩展的示例	104
11.4.1 菜单的XML结构	104
11.4.2 菜单项与XML	105
11.4.3 创建菜单	106
第12章 字体	107
12.1 珍惜已有字体	107
12.2 更多字体	108
12.3 字形介绍	109
第13章 嵌入WebKit浏览器	111
13.1 小型浏览器	111
13.2 加载内容	112
13.3 导航内容	113
13.4 扩展应用程序	114
13.5 设置、首选项和选项	115
第14章 显示弹出消息	116
14.1 弹出Toast	116
14.2 提醒框	117
14.3 检查效果	117
第15章 处理线程	120
15.1 了解处理程序	120
15.1.1 消息	120
15.1.2 Runnable	123
15.2 就地运行	123
15.3 我的UI线程到哪去了	123
15.4 异步观感	123
15.4.1 原理	124
15.4.2 AsyncTask、泛型和Vararg	124
15.4.3 AsyncTask的各个阶段	125
15.4.4 示例任务	125
15.5 附加说明	129
第16章 处理Activity生命周期事件	130
16.1 Activity的状态	130
16.2 Activity的生命周期	131
16.2.1 onCreate()和
onDestroy()	131
16.2.2 onStart()、onRestart()和onStop()	131
16.2.3 onPause()和onResume()	131
16.3 优美的状态	132
第17章 创建Intent过滤器	133
17.1 你有什么意图	133
17.1.1 Intent组成	133
17.1.2 Intent路由	134
17.2 叙述Intent	135
17.3 缩小接收器范围	136
17.4 暂停警告	137
第18章 启动活动和子活动	138
18.1 对等活动和子活动	138
18.2 启动	139
18.2.1 制作Intent	139
18.2.2 进行调用	139
18.3 多标签浏览	142
第19章 处理旋转	145
19.1 销毁问题	145
19.2 异同	145
19.3 更多保存	149
19.4 DIY旋转	151
19.5 强制解决问题	152
19.6 综述	154
第20章 处理资源	156
20.1 资源	156
20.2 字符串理论	156
20.2.1 纯文本字符串	157
20.2.2 字符串格式	157
20.2.3 样式文本	157
20.2.4 样式字符串格式	158
20.3 获取图片	160
20.4 XML：资源之路	162
20.5 杂项	164
20.5.1 维度	164
20.5.2 颜色	165
20.5.3 数组	165
20.5.4 因人而异	166
第21章 使用首选项	171
21.1 获取想要的内容	171
21.2 编辑首选项	172
21.3 目前的框架	172
21.4 让用户自己选择	173
21.5 添加“分层”结构	176
21.6 弹出对话框	177
第22章 管理和访问本地数据库	180
22.1 数据库示例	180
22.2 SQLite快速入门	181
22.3 从头开始	182
22.4 设置表	184
22.5 数据	184
22.6 有因必有果	185
22.6.1 Raw查询	186
22.6.2 常规查询	186
22.6.3 使用构造器进行构建	186
22.6.4 使用Cursor	187
22.7 无所不在的数据	188
第23章 访问文件	190
23.1 使用的数据	190
23.2 读取与写入	192
第24章 充分利用Java库	196
24.1 外部限制	196
24.2 Ant和JAR	197
24.3 参照脚本	197
24.4 滴酒不沾	200
24.5 评审脚本	200
第25章 通过Internet进行通信	201
25.1 REST和Relaxation	201
25.2 通过Apache HttpClient操作HTTP	201
25.3 解析响应	203
25.4 要考虑的问题	205
第26章 使用内容提供程序	206
26.1 数据片段	206
26.2 获得句柄	207
26.3 查询	207
26.4 适应环境	208
26.5 舍与得	209
26.6 感知BLOB	210
第27章 构建内容提供程序	211
27.1 剖析	211
27.2 类型	212
27.3 创建内容提供程序	212
27.3.1 第一步：创建提供程序类	212
27.3.2 第二步：提供URI	217
27.3.3 第三步：声明属性	218
27.3.4 第四步：更新清单文件	218
27.4 更改通知支持	219
第28章 请求和要求许可	220
28.1 请求许可	220
28.2 声明许可	221
28.2.1 通过清单文件强制实施
许可	222
28.2.2 在其他地方强制实施许可	222
28.3 别忘了文档	223
第29章 创建服务	224
29.1 通过类创建服务	224
29.2 单例	225
29.3 清单文件的作用	226
29.4 事件提醒	227
29.4.1 回调	227
29.4.2 广播Intent	228
29.5 远程服务与其他代码	229
第30章 调用服务	230
30.1 联系的纽带	230
30.2 接收广播内容	232
第31章 利用通知提醒用户	234
31.1 发布通知的类型	234
31.1.1 硬件通知	235
31.1.2 图标	235
31.2 查看运行中的通知发布	235
第32章 访问基于位置的服务	238
32.1 位置提供程序：它们知道你藏在哪里	238
32.2 自我定位	239
32.3 移动	240
32.4 我们到了吗	241
32.5 测试	241
第33章 使用MapView和MapActivity显示地图	242
33.1 条款无情	242
33.2 添加项问题	242
33.3 基本要素	243
33.4 练习控制	244
33.4.1 缩放	244
33.4.2 居中	245
33.5 地形起伏	245
33.6 层上加层	245
33.6.1 Overlay类	246
33.6.2 绘制ItemizedOverlay	246
33.6.3 处理屏幕单击	247
33.7 MyLocationOverlay	248
33.8 关键所在	249
第34章 呼叫处理	250
34.1 向管理者报告	250
34.2 亲自进行呼叫	250
第35章 开发工具	253
35.1 层次结构管理	253
35.2 令人愉快的Dalvik调试详细演示	257
35.2.1 日志记录	259
35.2.2 文件推拉	259
35.2.3 屏幕截图	260
35.2.4 位置更新	260
35.2.5 接入呼叫和消息	261
35.3 存储卡	262
35.3.1 创建卡的映像	262
35.3.2 插入卡	263
第36章 处理多种屏幕尺寸	264
36.1 默认设置	264
36.2 多合一	265
36.2.1 考虑规则，而不是位置	265
36.2.2 考虑物理尺寸	266
36.2.3 避免使用实际像素	266
36.2.4 选择可缩放的Drawable	266
36.3 量身定制	267
36.3.1 添加<supports-screens>	267
36.3.2 资源和资源集	268
36.3.3 查找尺寸	268
36.4 一切都是模拟的	269
36.4.1 密度不同	269
36.4.2 调整密度	270
36.4.3 访问实际设备	270
36.5 充分利用形势	271
36.5.1 用按钮代替菜单	271
36.5.2 使用简单的Activity代替选项卡	271
36.5.3 整合多个Activity	272
36.6 示例：EU4You	272
36.6.1 第一个版本	272
36.6.2 固定字体大小	277
36.6.3 固定大小的图标	278
36.6.4 使用空间	278
36.6.5 不是浏览器会怎样	279
36.7 合作伙伴的错误有哪些	280
第37章 手机的处理	281
37.1 该应用程序包含显式指令	281
37.2 按钮	282
37.3 有保障的市场	282
37.4 细枝末节	283
37.4.1 Archos 5 Android Internet Tablet	283
37.4.2 Motorola CLIQ/DEXT	284
37.4.3 Motorola DROID/Milestone	284
37.4.4 Google/HTC Nexus One	284
37.4.5 Motorola BACKFLIP	284
第38章 处理平台变更	285
38.1 品牌管理	285
38.2 让人头疼的更多问题	286
38.2.1 视图层次结构	286
38.2.2 变更资源	287
38.3 处理API变更	287
38.3.1 检测版本	287
38.3.2 包装API	287
第39章 未来何去何从	292
39.1 问题——部分答案	292
39.2 源代码	292
39.3 获得最新的信息	293
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android开发入门教程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>使用HTML、CSS和JavaScript开发Android程序
第1章 入门指南	1
网络应用程序与原生应用程序的对比	1
什么是网络应用程序	1
什么是原生应用程序	1
优势和劣势	2
哪种方法最合适你	2
网络编程速成	3
html入门	3
css入门	5
javascript入门	9
第2章 基本样式	13
还没网站	13
准备工作	14
准备独立的android样式表	17
控制页面缩放	18
添加android css	20
添加android视觉效果	23
使用jquery添加基本行为	24
内容回顾	30
.第3章 高级样式	31
添加一点ajax	31
交通警察	31
添加一些内容	34
javascript的路由请求	34
简单的点缀	36
进度指示器（process indicator）	36
设置页面标题	39
处理长标题	41
自动回到顶部	42
只拦截本地链接	43
编写自己的返回按钮	44
在主屏幕上添加图标	50
内容回顾	50
第4章 动画	51
来自朋友的帮助	51
让主页滑动起来	51
添加dates面板	54
添加date面板	56
添加new entry面板	57
添加settings面板	60
将所有代码放在一起	61
自定义jqtouch	64
内容回顾	65
第5章 客户端数据存储	67
web storage	67
将用户设置保存到本地	68
将选中的数据保存到session storage中	71
web sql database	74
创建数据库	74
插入行	77
检索行及处理结果集	80
删除行	84
内容回顾	88
web database错误编码参考	88
第6章 走向离线	89
离线应用程序缓存基础	89
在线whitelist（白名单）和fallback（备选）选项	92
创建动态manifest文件	95
调试	101
javascript控制台（javascript console）	101
内容回顾	104
第7章 走向原生	105
phonegap简介	105
下载android sdk	107
下载phonegap	110
配置环境	111
创建android virtual device（android虚拟设备）	113
创建kilogap	114
在模拟器中安装kilogap	118
使用屏幕的全部高度	121
自定义程序图标	122
在手机上安装kilogap	123
使用javascript来控制手机	123
beep（蜂鸣）、vibrate（振动）及alert（提醒）	123
地理位置	127
加速度传感器	133
内容回顾	136
第8章 将应用程序提交到android应用程序市场上	137
准备程序的发行版本	137
移除调试代码	137
应用程序版本管理	138
应用程序签名管理	138
将程序上传到android应用程序市场	141
直接分发程序	143
延伸阅读	145
附录 147
索引	151
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>使用HTML、CSS和JavaScript开发Android程序
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android群英传
第1章  程序员小窝——搭建高效的开发环境	1
1.1  搭建高效的开发环境之操作系统	1
1.2  搭建开发环境之高效配置	4
基本环境配置	5
基本开发工具	7
1.3  搭建程序员的博客平台	30
开发者为什么要写作	30
写作平台	31
第三方博客平台	31
自建博客平台	32
开发论坛	41
1.4  Geek PPT Presentation	43
impress.js	43
Strut	44
reveal.js	44
Slides	45
1.5  开发文档	46
Markdown	46
项目文档生成器	50
第2章  版本控制神器——Git	53
2.1  Git的前世今生	53
Git是什么	54
Git安装与配置	55
2.2  创建Git仓库	58
Git init	58
Git clone	58
2.3  提交修改	58
add && commit	59
追加修改	60
查看代码仓库状态	60
追溯版本历史	62
2.4  工作区与暂存区	64
Git操作区域	64
2.5  Git回退	65
checkout && reset	65
回退版本	67
2.6  操作历史	68
2.7  Git文件操作	69
git rm	69
文件暂存	70
2.8  远程仓库	70
身份认证	71
同步协作	73
Clone远程仓库	76
2.9  分支管理	77
创建分支	77
查看分支	78
合并分支	78
删除分支	79
查看远程分支	80
推送分支	80
分支管理思想	80
2.10  Git图解	81
2.11  Tag	82
创建Tag	82
创建带标签的Tag	82
查看Tag	82
删除标签	83
推送Tag到远程	83
删除远程Tag	83
2.12  Git图形化工具	84
Git for Windows	84
Github Desktop	84
SourceTree	85
Android Studio	85
2.13  Git学习资料	86
Git练习	87
第3章  Android Studio奇技淫巧	90
3.1  Android Studio使用初探	90
Project面板	91
Structure面板	92
Android Monitor	93
Keymap	93
Tip of the Day	94
快速查找	95
Search Action	96
演示模式	97
3.2  Android Studio使用进阶	98
操作与导航	98
快速重构	115
代码模板	122
内置模板	122
自定义代码注释模板	124
代码分析	132
在Android Studio中进行版本管理	135
3.3  Android Studio新功能	139
项目模板	139
ThemeEditor	140
Image Asset && Vector Asset	140
Android Monitor	143
Instant Run	144
Productivity Guide	145
3.4  Android Studio插件	146
Ignore	146
自动生成代码类插件	148
主题插件	149
3.5  Android Studio资源网站	151
Android Studio中文社区	151
Android Studio问答社区	151
第4章  与Gradle的爱恨情仇	153
4.1  如何学习Gradle	154
4.2  Gradle初探	154
项目全局build.gradle	156
Module build.gradle	157
local.properties	159
Gradle Task	160
4.3  Gradle进阶	162
更改项目结构	162
构建全局配置	165
构建defaultConfig	166
构建buildTypes	167
构建signingConfigs	170
生成签名	170
Android领域中的可选配置	174
构建Proguard	175
Gradle动态参数配置	176
System.properties方式	176
多渠道打包	179
脚本优化	180
生成重命名包	181
为不同版本添加不同代码	182
4.4  Gradle多项目依赖	185
jar包依赖	185
SO库依赖	188
本地库项目依赖	189
远程仓库依赖	193
本地aar依赖	196
使用Gradle上传aar到Maven库	198
4.5  Gradle依赖管理	199
Gradle依赖库缓存	199
利用Gradle的通知机制	199
利用Gradle的依赖检查	200
Gradle依赖传递	200
Gradle依赖统一管理	201
4.6  Gradle使用技巧	202
生成Gradle编译脚本	202
Gradle peer not authenticated	203
Gradle性能检测	203
Gradle加速	206
增加编译内存	207
Gradle调用终端指令	207
使用Gradle精简资源	207
清除Gradle缓存	208
使用Gradle本地缓存	209
Gradle版本问题导致的编译错误	209
Gradle资源冲突	210
4.7  Gradle自定义插件	211
构建默认插件	211
构建自定义插件	216
4.8  Gradle思考	219
Grovvy初探	219
Gradle项目架构	224
Gradle生命周期	225
4.9  使用Android Studio的图形化界面	228
第5章  深藏功与名的开发者工具	230
5.1  AAPT	230
AAPT初探	230
AAPT基本使用方法	231
查看AAPT命令格式	235
AAPT源代码	239
5.2  Lint	240
5.3  ADB指令	241
Help指令	242
无线调试	242
截图与录屏	243
帧率分析	244
dumpsys	245
Logcat	246
Bugreport	248
5.4  Android Device Monitor	250
5.5  9Patch工具	252
5.6  Hierarchy Viewer	255
在真机上使用Hierarchy Viewer	255
使用Hierarchy Viewer分析页面	256
5.7  UI Automator Viewer	257
5.8  DDMLib	258
其他SDK工具	258
5.9  开发者选项	259
Process Stats	259
Show Touches && Pointer Location	260
Show Layout Bounds	260
Animation Scale	261
Simulate Secondary Displays	262
Debug GPU Overdraw	262
Show CPU Usage	264
Profile GPU Rending	264
Strick Mode	265
不保留活动	266
第6章  App背后的故事——性能检测与分析工具	267
6.1  性能优化之前	267
6.2  Google的技术指导	269
6.3  UI性能分析	271
16ms黄金准则	271
Android系统对UI的提升	271
布局核心准则	271
RelativeLayout VS LinearLayout	272
HierarchyViewer	272
Merge与ViewStub	273
图形重绘Overdraw	273
Tracer for OpenGL	276
GPUProfiler	281
Profile GPU Rendering	281
Framestats	283
Logcat	283
traces.txt	284
Android Studio GPU Monitor	285
Systrace	285
CPU区域	290
SurfaceFlinger	291
应用区域	291
Alert	294
6.4  Traceview	294
In Source Code	295
In DDMS	296
Traceview分析	296
图形列表	297
详细列表	297
6.5  应用启动时间计算	300
启动时间定义	300
ADB计算启动时间	300
使用相机分析	301
6.6  内存探究	301
内存区分	302
系统内存分析工具	302
获取内存信息	306
GC系统	307
ActivityManager.MemoryInfo	308
Debug.MemoryInfo	310
Runtime	310
获取更多内存	312
6.7  系统内存警告	313
6.8  onLowMemory	313
ComponentCallbacks	313
onTrimMemory	314
6.9  内存泄漏检测	315
6.10  Logcat	315
6.11  Dump Heap	316
6.12  Allocation Tracker	318
In Android Studio	318
In DDMS	320
6.13  Android Studio Memory Monitor	321
6.14  内存泄漏分析	322
6.15  Memory Analysis Tool (MAT)	322
准备Dump Heap文件	324
分析	325
6.16  LeakCanary	333
引用LeakCanary	333
初始化LeakCanary	333
检测	333
6.17  CPU Performance	335
6.18  Top	336
总览	337
详细	337
6.19  Show CPU Usage	338
6.20  Android Studio CPU Monitor	338
6.21  Method Tracing	339
6.22  BatteryPerformance	340
电量消耗计算	340
耗电元凶	341
电量分析	341
6.23  综合测试工具	346
6.24  Android Device Monitor	347
Threads	348
System Information	349
6.25  高通性能工具	350
Trepn Profiler	350
App Tune-up Kit	354
6.26  云测平台	356
第7章  一个人的寂寞与一群人的狂欢	359
7.1  如何解决问题	360
Chrome	360
Google搜索	362
Github	363
Stackoverflow	364
代码检索工具	365
7.2  如何简化开发	371
移动后端服务	371
云存储服务	371
数据分析服务	372
云测试服务	372
Proguard自动生成工具	372
gitignore自动生成工具	373
7.3  如何学习	374
思维导图	374
explainshell	376
Tldr	377
vim-adventures	377
7.4  如何演示	378
手机投视工具	378
录制Gif	379
MP4转Gif	380
7.5  如何协作	381
Git	381
Code Review	381
Gitlab	383
Maven服务器	384
自动化测试	385
持续集成与自动化	387
Bug管理	388
新员工指南	390
7.6  如何设计	390
AndroidAssetStudio	391
Shape生成器	391
ICON资源	392
设计资源	394
AngryTools	394
MateriaPalette	396
Google Design Spec	396
附录A  AndroidStudio快捷键	398
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android群英传
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>腾讯Android自动化测试实战
Contents　目　　录
本书编委
序
前言
第1章　概述	1
1.1　Android自动化测试框架概述	1
1.2　本书内容概述	5
第2章　自动化测试框架及应用领域综述	8
2.1　自动化测试框架介绍	9
2.1.1　一个简单的Android App自动化测试过程	9
2.1.2　自动化测试框架基本原理	11
2.2　移动终端自动化测试应用场景	15
2.3　本章小结	17
第3章　Robotium框架工作原理及实践	18
3.1　Robotium常用功能	19
3.1.1　什么是Robotium	19
3.1.2　Robotium提供的类	20
3.1.3　环境搭建	21
3.1.4　Robotium的控件获取、操作及断言	26
3.2　Robotium原理简析	40
3.2.1　Robotium支持Native原理	40
3.2.2　Robotium支持WebView原理	46
3.3　Robotium实践运用	52
3.3.1　控件ID相同时获取控件	52
3.3.2　ListView列表遍历 	53
3.3.3　修改Robotium以支持X5WebView 	55
3.4　本章小结	58
第4章　Monkey基本原理及扩展应用	60
4.1　Monkey基础知识	61
4.1.1　Monkey概况	61
4.1.2　Monkey参数	61
4.1.3　Monkey事件	65
4.1.4　Monkey环境搭建	69
4.1.5　Monkey启动	70
4.2　Monkey测试方法	71
4.2.1　Monkey测试实例	71
4.2.2　Monkey日志分析	78
4.3　Monkey的基本原理	84
4.3.1　Monkey代码框架	85
4.3.2　Monkey代码逻辑详解	87
4.4　Monkey扩展应用示例	91
4.4.1　Monkey代码重编译执行方法	91
4.4.2　Monkey截图优化	96
4.4.3　Monkey Wi-Fi自动重连优化	102
4.4.4　Monkey扩展应用的优点和缺点	106
4.5　本章小结	106
第5章　UIAutomator框架及实践	107
5.1　UIAutomator简介	108
5.2　UIAutomator解读	109
5.2.1　UIAutomator框架解读	109
5.2.2　UIAutomator原理解读	114
5.2.3　UIAutomator API解读	120
5.3　UIAutomator实战	131
5.3.1　UIAutomator快速上手	132
5.3.2　UIAutomator设计思想	138
5.3.3　UIAutomator实践案例	141
5.4　UIAutomator总结	151
5.4.1　UIAutomator代码规范及建议	151
5.4.2　UIAutomator技巧及封装	152
5.5　本章小结	155
第6章　Appium框架解析及实践	156
6.1　Appium框架概况	157
6.1.1　Appium架构原理	157
6.1.2　Appium框架的优缺点	158
6.2　Appium框架工作解析	159
6.2.1　Appium环境搭建	159
6.2.2　HelloWorld测试示例	163
6.2.3　Desired Capabilities的说明	168
6.2.4　Appium API的解读	171
6.3　Appium框架在腾讯地图中的实践	175
6.3.1　Appium接口的封装	175
6.3.2　测试脚本设计思想	181
6.3.3　Appium在腾讯地图中的测试实践	182
6.3.4　Hybrid App的测试方法	189
6.3.5　Appium脚本常见问题及处理方法	191
6.4　本章小结	193
第7章　Android App速度测试	194
7.1　速度测试场景	195
7.2　速度测试的六大方法	196
7.2.1　掐表计时法	198
7.2.2　打印日志计时法	199
7.2.3　图像分析计时法	200
7.2.4　Hook方案计时法	203
7.2.5　网络包分析法	207
7.2.6　各种速度测试方法的优缺点	209
7.3　手机QQ浏览器网页打开速度测试实践案例	209
7.3.1　确定关键指标	209
7.3.2　选择测试方法	210
7.3.3　整体方案	211
7.3.4　解决关键问题	212
7.3.5　速度优化效果	228
7.4　手机QQ浏览器多窗口按钮速度实践案例	228
7.4.1　为什么要做多窗口按钮速度测试	229
7.4.2　什么是多窗口按钮速度测试	229
7.4.3　多窗口按钮速度测试影响因素和测试方法	230
7.4.4　如何进行多窗口按钮速度测试	231
7.5　本章小结	234
第8章　视频性能测试案例	235
8.1　视频性能测试需求分析	236
8.2　视频首帧性能测试方案的设计思路	237
8.2.1　视频播放流程	237
8.2.2　设计思路	238
8.3　视频首帧性能测试方案的具体实现	240
8.3.1　开发工具准备	240
8.3.2　测试环境准备	241
8.3.3　工程部署	242
8.3.4　关键代码和难点分析	244
8.3.5　编译环境配置	262
8.3.6　工具安装	264
8.4　方案优缺点	265
8.5　本章小结	265
第9章　应用宝BVT测试案例	267
9.1　测试工程	268
9.1.1　测试工程概览	268
9.2.1　测试工程签名	269
9.2　测试用例	271
9.2.1　测试用例生命周期	271
9.2.2　测试用例编写	273
9.2.3　测试用例执行	277
9.2.4　测试用例管理	279
9.3　测试报告	279
9.3.1　Spoon介绍	279
9.3.2　结合Spoon的出错重试与截图	282
9.3.3　结合Spoon生成汇总报告	287
9.4　Robotium跨应用	287
9.4.1　UIAutomator Dump方式跨应用	288
9.4.2　UIAutomator结合Instrumentation模式	289
9.5　代码覆盖率	292
9.5.1　覆盖率定义	292
9.5.2　覆盖率工具	293
9.5.3　JaCoCo介绍与实践	295
9.5.4　BVT测试与覆盖率结合	305
9.5.5　指导建议	309
9.6　本章小结	309
第10章　兼容性测试实践	311
10.1　兼容性测试概述	311
10.2　兼容性测试方法	313
10.2.1　手动测试	313
10.2.2　自动化测试	314
10.2.3　云平台测试	324
10.3　兼容性测试思考	336
10.4　本章小结	336
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>腾讯Android自动化测试实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通Android 2
第1章 Android计算平台简介	1
1.1 面向新PC的全新平台	1
1.2 Android的历史	2
1.3 Dalvik VM剖析	4
1.4 比较Android与Java ME	5
1.5 理解Android软件栈	8
1.6 使用Android SDK开发最终用户应用程序	9
1.6.1 Android模拟器	9
1.6.2 Android UI	10
1.6.3 Android基础组件	10
1.6.4 高级UI概念	11
1.6.5 Android Service组件	13
1.6.6 Android媒体和电话组件	13
1.6.7 Android Java包	15
1.7 利用Android源代码	18
1.8 小结	19
第2章 初识Android	20
2.1 安装环境	20
2.1.1 下载JDK 6	20
2.1.2 下载Eclipse 3.5	21
2.1.3 下载Android SDK	21
2.1.4 安装ADT	22
2.2 了解基本组件	24
2.2.1 View	24
2.2.2 Activity	24
2.2.3 Intent	25
2.2.4 ContentProvider	25
2.2.5 Service	25
2.2.6 AndroidManifest.xml	25
2.2.7 AVD	26
2.3 Hello World!	26
2.4 AVD	30
2.5 剖析Android应用程序的结构	32
2.6 分析Notepad应用程序	33
2.6.1 加载和运行Notepad应用程序	34
2.6.2 分解应用程序	35
2.7 了解应用程序生命周期	41
2.8 调试应用程序	43
2.9 小结	44
第3章 使用资源、ContentProvider和Intent	45
3.1 资源	46
3.1.1 字符串资源	46
3.1.2 布局资源	48
3.1.3 资源引用语法	49
3.1.4 定义资源ID供以后使用	50
3.1.5 已编译和未编译的Android资源	51
3.1.6 Android关键资源	52
3.1.7 使用任意XML资源文件	58
3.1.8 使用原始资源	59
3.1.9 使用资产	60
3.1.10 了解资源目录结构	60
3.2 ContentProvider	61
3.2.1 探索Android内置的ContentProvider	62
3.2.2 ContentProvider的架构	67
3.2.3 实现ContentProvider	78
3.3 Intent	88
3.3.1 Android中可用的Intent	89
3.3.2 Intent和数据URI	90
3.3.3 一般操作	91
3.3.4 使用extra信息	92
3.3.5 使用组件直接调用活动	93
3.3.6 组件设计人员最佳实践	94
3.3.7 Intent类别	95
3.3.8 将Intent解析为组件的规则	97
3.3.9 练习使用ACTION_PICK	97
3.3.10 练习使用GET_CONTENT操作	99
3.4 本章的更多资源	100
3.5 小结	101
第4章 构建用户界面和使用控件	102
4.1 Android中的UI开发	102
4.2 Android中的常见控件	107
4.2.1 文本控件	107
4.2.2 按钮控件	110
4.2.3 列表控件	116
4.2.4 网格控件	119
4.2.5 日期和时间控件	121
4.3 Android中其他有趣的控件	122
4.3.1 MapView控件	123
4.3.2 Gallery控件	123
4.3.3 Spinner控件	123
4.4 布局管理器	124
4.4.1 LinearLayout布局管理器	124
4.4.2 TableLayout布局管理器	127
4.4.3 RelativeLayout布局管理器	131
4.4.4 FrameLayout布局管理器	132
4.4.5 为各种设备配置自定义布局	134
4.5 适配器	136
4.5.1 SimpleCursorAdapter	137
4.5.2 了解ArrayAdapter	137
4.5.3 创建自定义适配器	138
4.6 使用Hierarchy Viewer调试和
优化布局	138
4.7 小结	141
第5章 使用菜单和对话框	142
5.1 Android菜单	142
5.1.1 创建菜单	143
5.1.2 使用菜单组	144
5.1.3 响应菜单项	145
5.1.4 创建测试工具来测试菜单	146
5.2 使用其他菜单类型	152
5.2.1 展开的菜单	152
5.2.2 使用图标菜单	152
5.2.3 使用子菜单	153
5.2.4 配置系统菜单	154
5.2.5 使用上下文菜单	154
5.2.6 使用交替菜单	157
5.2.7 使用菜单响应数据变化	160
5.3 通过XML文件加载菜单	160
5.3.1 XML菜单资源文件的结构	160
5.3.2 填充XML菜单资源文件	161
5.3.3 响应基于XML的菜单项	161
5.3.4 其他XML菜单标记简介	162
5.4 使用Android中的对话框	163
5.4.1 设计提醒对话框	164
5.4.2 设计提示对话框	166
5.4.3 Android对话框的特性	170
5.4.4 重新设计提示对话框	170
5.5 使用托管对话框	171
5.5.1 理解托管对话框协议	171
5.5.2 将非托管对话框转换为托管
对话框	172
5.5.3 简化托管对话框协议	173
5.6 小结	180
第6章 2D动画揭秘	181
6.1 逐帧动画	181
6.1.1 计划逐帧动画	182
6.1.2 创建活动	183
6.1.3 将动画添加到活动	184
6.2 布局动画	186
6.2.1 基本的补间动画类型	187
6.2.2 计划布局动画测试工具	188
6.2.3 创建活动和ListView	188
6.2.4 将ListView制作成动画	190
6.2.5 使用插值器	193
6.3 视图动画	195
6.3.1 理解视图动画	195
6.3.2 添加动画	197
6.3.3 使用Camera实现2D图像的
深度效果	200
6.3.4 探索AnimationListener类	201
6.3.5 关于变换矩阵的一些说明	202
6.4 小结	203
第7章 探索安全性和基于位置的服务	204
7.1 理解Android安全性模型	204
7.1.1 安全性概念概述	204
7.1.2 为部署签名应用程序	205
7.2 执行运行时安全性检查	209
7.2.1 进程边界上的安全性	209
7.2.2 声明和使用权限	209
7.2.3 理解和使用自定义权限	211
7.2.4 理解和使用URI权限	216
7.3 使用基于位置的服务	216
7.3.1 地图包	216
7.3.2 位置包	226
7.4 小结	241
第8章 构建和使用服务	242
8.1 使用HTTP服务	242
8.1.1 将HttpClient用于HTTP GET
请求	242
8.1.2 将HttpClient用于HTTP POST请求	244
8.1.3 处理异常	247
8.1.4 解决多线程问题	249
8.2 执行进程间通信	252
8.2.1 创建简单服务	252
8.2.2 Android中的服务	253
8.2.3 本地服务	254
8.2.4 AIDL服务	258
8.2.5 在AIDL中定义服务接口	258
8.2.6 实现AIDL接口	261
8.2.7 从客户端应用程序调用服务	262
8.2.8 向服务传递复杂的类型	266
8.3 小结	274
第9章 使用媒体框架和电话API	275
9.1 使用媒体API	275
9.1.1 了解和使用SD卡	275
9.1.2 播放音频内容	278
9.1.3 setDataSource方法	281
9.1.4 播放视频内容	282
9.1.5 MediaPlayer的一些注意事项	284
9.1.6 音频录制	284
9.1.7 视频录制	288
9.1.8 MediaStore类	293
9.1.9 将媒体内容添加到媒体存储	297
9.2 使用电话API	299
9.2.1 使用SMS	299
9.2.2 使用电话管理器	305
9.3 小结	306
第10章 使用OpenGL进行3D图形
编程	307
10.1 了解OpenGL的历史和背景	308
10.1.1 OpenGL ES	308
10.1.2 OpenGL ES与Java ME	309
10.1.3 M3G：另一种Java ME 3D
图形标准	310
10.2 OpenGL的基本原理	310
10.2.1 使用OpenGL ES进行基本
绘制	311
10.2.2 OpenGL照相机和坐标	315
10.3 在Android中使用OpenGL ES	318
10.3.1 使用GLSurfaceView和相关类	319
10.3.2 绘制三角形的简单测试框架	320
10.3.3 更改照相机设置	324
10.3.4 使用索引添加另一个三角形	325
10.3.5 为简单的OpenGL三角形
制作动画	326
10.4 OpenGL的运用：形状和纹理	329
10.4.1 演示中使用的简单菜单技巧	329
10.4.2 绘制矩形	333
10.4.3 使用形状	335
10.4.4 使用纹理	345
10.4.5 绘制多个图形	349
10.4.6 OpenGL资源	352
10.5 小结	353
第11章 管理和组织首选项	354
11.1 探索首选项框架	354
11.1.1 ListPreference	354
11.1.2 以编程方式操作首选项	361
11.1.3 CheckBoxPreference	361
11.1.4 EditTextPreference	363
11.1.5 RingtonePreference	365
11.2 组织首选项	366
11.3 小结	368
第12章 活动文件夹	369
12.1 探索活动文件夹	369
12.1.1 用户如何使用活动文件夹	370
12.1.2 构建活动文件夹	372
12.2 小结	382
第13章 主屏幕部件	383
13.1 主屏幕部件的架构	383
13.1.1 什么是主屏幕部件	383
13.1.2 主屏幕部件的用户体验	384
13.1.3 部件的生命周期	386
13.2 示例部件应用程序	390
13.2.1 定义部件提供程序	391
13.2.2 定义部件尺寸	392
13.2.3 与部件布局相关的文件	394
13.2.4 实现部件提供程序	395
13.2.5 实现部件模型	397
13.2.6  实现部件配置活动	403
13.3 部件局限性和扩展	407
13.4 资源	407
13.5 小结	408
第14章 Android搜索	409
14.1 Android搜索体验	409
14.1.1 探索Android全局搜索	410
14.1.2 为全局搜索启用建议提供
程序	413
14.1.3 QSB与建议提供程序交互	415
14.2 活动与搜索键交互	416
14.2.1 常规活动上的搜索键行为	417
14.2.2 禁用了搜索的活动的行为	422
14.2.3 通过菜单调用搜索	423
14.2.4 本地搜索和相关活动	425
14.2.5 启用键入搜索	429
14.3 实现简单建议提供程序	430
14.3.1 计划简单建议提供程序	431
14.3.2 简单建议提供程序实现文件	431
14.3.3 实现SimpleSuggestion- Provider类	431
14.3.4 简单建议提供程序搜索活动	434
14.3.5 搜索调用方活动	438
14.3.6 简单建议提供程序用户体验	439
14.4 实现自定义建议提供程序	441
14.4.1 计划自定义建议提供程序	442
14.4.2 SuggestURLProvider项目
实现文件	442
14.4.3 实现SuggestUrlProvider类	443
14.4.4 实现自定义建议提供程序
的搜索活动	450
14.4.5 自定义建议提供程序描述
文件	454
14.4.6 自定义建议用户体验	455
14.5 使用操作键和应用程序特有的搜索数据	458
14.5.1 在Android搜索中使用
操作键	458
14.5.2 使用应用程序特定的搜索
上下文	460
14.6 资源	461
14.7 小结	462
第15章 文本到语音转换和
翻译API	463
15.1 Android中的文本到语音转换	463
15.2 使用语段跟踪语音	467
15.3 使用音频文件代替话音	468
15.4 TTS引擎的高级功能	474
15.4.1 设置音频流	475
15.4.2 使用耳标	475
15.4.3 播放静音	476
15.4.4 使用语言方法	476
15.5 将文本翻译为不同语言	477
15.6 小结	486
第16章 触摸屏	487
16.1 了解MotionEvent	487
16.1.1 使用VelocityTracker	498
16.1.2 探索拖放操作	499
16.2 多点触摸	502
16.3 触摸地图	508
16.4 手势	510
16.5 小结	516
第17章 Titanium Mobile：基于WebKit
的Android开发方法	517
17.1 Titanium Mobile概述	518
17.1.1 架构	518
17.1.2 Titanium生态系统	521
17.1.3 下载和安装Titanium
Developer	521
17.2 熟悉规则：第一个项目	528
17.2.1 创建Titanium Mobile项目	528
17.2.2 设计“Hello World”	530
17.2.3 配置应用程序以供调试	531
17.2.4 封装应用程序	533
17.2.5 将.apk文件安装到自己的
模拟器上	535
17.3 规划真实的应用程序	536
17.3.1 JQuery必备知识	536
17.3.2 高级JavaScript的必备知识	539
17.3.3 理解微型模板引擎	541
17.3.4 其他Titanium Mobile API	544
17.4 小结	544
第18章 使用Android Market	546
18.1 成为发布者	546
18.1.1 遵守规则	547
18.1.2 开发人员控制台	548
18.2 准备销售应用程序	549
18.2.1 针对不同设备进行测试	549
18.2.2 支持不同的屏幕尺寸	549
18.2.3 准备上传
AndroidManifest.xml	550
18.2.4 本地化应用程序	550
18.2.5 准备应用程序图标	551
18.2.6 付费应用程序考虑因素	551
18.2.7 将用户引导至Market	552
18.2.8 准备上传.apk文件	552
18.3 上传应用程序	553
18.4 Android Market上的用户体验	554
18.5 小结	556
第19章 前景展望和资源	557
19.1 Android的最新状态	557
19.1.1 基于Android的移动设备
制造商	557
19.1.2 Android应用程序商店	559
19.2 Android前景展望	560
19.2.1 移动操作系统概览	560
19.2.2 对比Android与其他移动
操作系统	562
19.2.3 HTML 5支持及其意义	563
19.3 Android资源	564
19.3.1 核心Android资源	564
19.3.2 与Android新闻相关的资源	564
19.4 小结	565

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通Android 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android游戏开发大全
第一篇  Android游戏开发核心技术  第1章  Android平台简介  第2章  Android游戏开发之前台渲染  第3章  Android游戏开发之交互式通信  第4章  Android游戏开发之数据存储和传感器  第5章  Android游戏开发之网络编程  第6章  不一样的游戏，一样的精彩  第7章  游戏背后的数学与物理  第8章  游戏中的人工智能  第9章  游戏开发小秘技  第10章  游戏的心脏——物理引擎  第11章  OpenGL ES应用开发基础第二篇  Android游戏开发实战综合案例  第12章  滚屏动作游戏——太空保卫战  第13章  棋牌游戏——中国象棋人机对弈  第14章  物理传感器游戏——小球快跑(3D版)  第15章  塔防游戏——精灵塔防  第16章  策略游戏——回到战国  第17章  体育游戏——2D迷你桌球  第18章  益智游戏——3D版推箱子  第19章  物理引擎游戏——盛怒的老鼠
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android游戏开发大全
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android系统原理及开发要点详解
第1章  Android系统概述第2章  Android系统开发综述第3章  Android的Linux内核与驱动程序第4章  Android的底层库和程序第5章  Android的Java虚拟机和Java环境第6章  Android的GUI系统第7章  Android的Audio系统第8章  Android的Video输入输出系统第9章  Android的多媒体系统第10章  Android的电话部分第11章  Android的连接部分第12章  Android的传感器系统第13章  Android应用程序概述及框架第14章  Android应用程序的主要方面第15章  Android应用程序的设计思想
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android系统原理及开发要点详解
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入理解Android
前　言
第1章　搭建Android源码工作环境 / 1
1.1　Android系统架构 / 2
1.2　搭建开发环境 / 3
1.2.1　下载源码 / 3
1.2.2　编译源码 / 4
1.2.3　利用Eclipse调试system_process / 5
1.3　本章小结 / 11
第2章　深入理解Java Binder和MessageQueue / 12
2.1　概述 / 13
2.2　Java层中的Binder架构分析 / 13
2.2.1　Binder架构总览 / 13
2.2.2　初始化Java层Binder框架 / 14
2.2.3　addService实例分析 / 17
2.2.4　Java层Binder架构总结 / 26
2.3　心系两界的MessageQueue / 27
2.3.1　MessageQueue的创建 / 27
2.3.2　提取消息 / 28
2.3.3　nativePollOnce函数分析 / 31
2.3.4　MessageQueue总结 / 41
2.4　本章小结 / 42
第3章　深入理解SystemServer / 44
3.1  概述 / 45
3.2　SystemServer分析 / 45
3.2.1　main函数分析 / 45
3.2.2　Service群英会 / 48
3.3　EntropyService分析 / 49
3.4　DropBoxManagerService分析 / 50
3.4.1　DBMS构造函数分析 / 51
3.4.2　dropbox日志文件的添加 / 51
3.4.3　DBMS和settings数据库 / 56
3.5　DiskStatsService和DeviceStorageMonitorService分析 / 56
3.5.1　DiskStatsService分析 / 56
3.5.2　DeviceStorageManagerService分析 / 58
3.6　SamplingProfilerService分析 / 60
3.6.1　SamplingProfilerService构造函数分析 / 61
3.6.2　SamplingProfilerIntegration分析 / 62
3.7　ClipboardService分析 / 64
3.7.1　复制数据到剪贴板  / 64
3.7.2　从剪切板粘贴数据 / 67
3.7.3　CBS中的权限管理 / 69
3.8  本章小结 / 73
第4章　深入理解PackageManagerService / 74
4.1　概述 / 75
4.2　初识PackageManagerService / 76
4.3　PKMS的main函数分析 / 77
4.3.1　构造函数分析之前期准备工作 / 78
4.3.2　构造函数分析之扫描Package / 90
4.3.3　构造函数分析之扫尾工作 / 105
4.3.4　PKMS构造函数总结 / 105
4.4　APK Installation分析 / 105
4.4.1　adb install分析 / 105
4.4.2　pm分析 / 107
4.4.3　installPackageWithVerification函数分析 / 109
4.4.4　APK 安装流程总结 / 121
4.4.5　Verification介绍 / 122
4.5　queryIntentActivities分析 / 124
4.5.1　Intent及IntentFilter介绍 / 124
4.5.2　Activity信息的管理 / 125
4.5.3　Intent 匹配查询分析 / 128
4.5.4　queryIntentActivities总结 / 131
4.6　installd及UserManager介绍 / 131
4.6.1　installd介绍 / 131
4.6.2　UserManager介绍 / 136
4.7　本章学习指导 / 138
4.8　本章小结 / 138
第5章　深入理解PowerManagerService / 139
5.1　概述 / 140
5.2　初识PowerManagerService / 140
5.2.1　PMS构造函数分析 / 141
5.2.2　init分析 / 141
5.2.3　systemReady分析 / 147
5.2.4　BootComplete处理 / 148
5.2.5　初识PowerManagerService总结 / 149
5.3　PMS WakeLock分析 / 149
5.3.1　WakeLock客户端分析 / 149
5.3.2　PMS acquireWakeLock分析 / 151
5.3.3　Power类及LightService类介绍 / 160
5.3.4　WakeLock总结 / 163
5.4　userActivity及Power按键处理分析 / 164
5.4.1　userActivity分析 / 164
5.4.2　Power按键处理分析 / 167
5.5　BatteryService及BatteryStatsService分析 / 168
5.5.1　BatteryService分析 / 169
5.5.2　BatteryStatsService分析 / 172
5.5.3　BatteryService及BatteryStatsService总结 / 182
5.6　本章学习指导 / 183
5.7　本章小结 / 183
第6章　深入理解ActivityManagerService / 184
6.1　概述 / 185
6.2　初识ActivityManagerService / 186
6.2.1　ActivityManagerService的main函数分析 / 187
6.2.2　AMS的 setSystemProcess分析 / 197
6.2.3　AMS的 installSystemProviders函数分析 / 202
6.2.4　AMS的 systemReady分析 / 211
6.2.5　初识ActivityManagerService总结 / 218
6.3　startActivity分析 / 219
6.3.1　从am说起 / 219
6.3.2　AMS的startActivityAndWait函数分析 / 221
6.3.3　startActivityLocked分析 / 230
6.4　Broadcast和BroadcastReceiver分析 / 265
6.4.1　registerReceiver流程分析 / 267
6.4.2　sendBroadcast流程分析 / 272
6.4.3　BROADCAST_INTENT_MSG消息处理函数 / 276
6.4.4　应用进程处理广播分析 / 282
6.4.5　广播处理总结 / 284
6.5　startService之按图索骥 / 285
6.5.1　Service知识介绍 / 285
6.5.2　startService流程图 / 286
6.6　AMS中的进程管理 / 287
6.6.1　Linux进程管理介绍 / 287
6.6.2　关于Android中的进程管理的介绍 / 289
6.6.3　AMS进程管理函数分析 / 294
6.6.4　AMS进程管理总结 / 305
6.7　App的 Crash处理 / 305
6.7.1　应用进程的Crash处理 / 306
6.7.2　AMS的handleApplicationCrash分析 / 306
6.7.3　AppDeathRecipient binderDied分析 / 309
6.7.4　App的Crash处理总结 / 313
6.8　本章学习指导 / 314
6.9　本章小结 / 315
第7章　深入理解ContentProvider / 316
7.1　概述 / 317
7.2　MediaProvider的启动及创建 / 318
7.2.1　Context的getContentResolver函数分析 / 318
7.2.2　MediaStore.Image.Media的query函数分析 / 319
7.2.3　MediaProvider的启动及创建总结 / 329
7.3　SQLite创建数据库分析  / 330
7.3.1　SQLite及SQLiteDatabase家族 / 330
7.3.2　MediaProvider创建数据库分析 / 335
7.3.3　SQLiteDatabase创建数据库的分析总结 / 344
7.4　Cursor 的query函数的实现分析 / 345
7.4.1　提取query关键点 / 346
7.4.2　MediaProvider 的query分析 / 349
7.4.3　query关键点分析 / 356
7.4.4　Cursor query实现分析总结 / 368
7.5　Cursor close函数实现分析 / 368
7.5.1　客户端close的分析 / 369
7.5.2　服务端close的分析 / 371
7.5.3　finalize函数分析 / 372
7.5.4　Cursor close函数总结 / 373
7.6　ContentResolver openAssetFileDescriptor函数分析 / 373
7.6.1　openAssetFileDescriptor之客户端调用分析 / 374
7.6.2　ContentProvider的 openTypedAssetFile函数分析 / 376
7.6.3　跨进程传递文件描述符的探讨 / 379
7.6.4　openAssetFileDescriptor函数分析总结 / 384
7.7　本章学习指导 / 384
7.8　本章小结 / 385
第8章　深入理解ContentService和AccountManagerService / 386
8.1　概述 / 387
8.2　数据更新通知机制分析 / 387
8.2.1　初识ContentService / 388
8.2.2　ContentResovler 的registerContentObserver分析 / 389
8.2.3　ContentResolver的 notifyChange分析 / 391
8.2.4　数据更新通知机制总结和深入探讨 / 393
8.3　AccountManagerService分析 / 395
8.3.1　初识AccountManagerService / 396
8.3.2　AccountManager addAccount分析 / 402
8.3.3　AccountManagerService的分析总结 / 414
8.4　数据同步管理SyncManager分析 / 415
8.4.1　初识SyncManager / 415
8.4.2　ContentResolver 的requestSync分析 / 424
8.4.3　数据同步管理SyncManager分析总结 / 436
8.5　本章学习指导 / 437
8.6　本章小结 / 437
“深入理解Android”系列书籍的规划路线图 / 438
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入理解Android
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精彩绝伦的Android UI设计
译者序
前言
第一部分 Android设计简介
第1章 用户界面设计和易用性入门  2
1.1 考虑技术与设计  2
1.2 理解心智模型  3
1.3 为用户设计  6
1.4 没有应用无所不精，选择适合自己的领域  9
1.5 你是专家，用户不是设计师  9
1.6 了解用户，为普通人设计  9
1.7 总结  11
第2章 不要马上开始编程  12
2.1 原型设计  12
2.2 设计工具  14
2.3 用户测试  17
2.4 总结  20
第3章 考虑为移动和触摸设备设计  21
3.1 为移动而设计  21
3.2 为触摸界面设计  26
3.3 总结  29
第4章 探索Android平台  30
4.1 Android平台的挑战  30
4.2 Android的版本  36
4.3 Android应用的发布  38
4.4 开源的意义是什么  40
4.5 总结  41
第二部分 Android平台的特性和UI组件
第5章 Android应用架构和在线指南  44
5.1 Android应用程序结构概览  44
5.2 Android项目结构概览  47
5.3 官方Android指南  48
5.4 总结  49
第6章 Android的意图系统  50
6.1 意图让应用程序相互协作  50
6.2 使用社交网络并分享  51
6.3 和浏览器一起工作  52
6.4 Android意图系统的工作原理  53
6.5 创建自定义行为  58
6.6 意图无处不在  58
6.7 意图与第三方API  58
6.8 总结  59
第7章 Android应用的导航结构  60
7.1 Android导航系统的组件：活动和意图  60
7.2 Android导航控件  61
7.3 总结  70
第8章 主界面应用小部件  71
8.1 主界面应用小部件的使用  71
8.2 更新应用小部件数据  73
8.3 应用小部件布局和功能  75
8.4 实现应用小部件  78
8.5 总结  80
第9章 通知及告知用户  81
9.1 Android通知方法  81
9.2 何时通知用户  83
9.3 何时不要通知用户  86
9.4 避免使用弹出框  86
9.5 从状态栏通知中获得更多信息  87
9.6 总结  91
第10章 物理按键、输入法和传感器的设计  92
10.1 触摸屏的设计  92
10.2 手机物理按键的设计  93
10.3 软键盘的设计  94
10.4 物理键盘设计  99
10.5 方向键和轨迹球设计  99
10.6 触控笔设计  100
10.7 声控设计  101
10.8 外接键盘、鼠标和触摸板的设计  101
10.9 智能附件的设计  102
10.10 传感器的设计  102
10.11 第二块屏幕的设计  102
10.12 总结  103
第11章 平台用户界面组件的设计  104
11.1 使用用户界面小部件  104
11.2 自定义用户界面小部件  111
11.3 调整排版  113
11.4 使用图标  117
11.5 使用动画和过渡效果  121
11.6 总结  127
第三部分 可扩展的Android设计
第12章 管理Android资源  130
12.1 使用Android资源  130
12.2 屏幕密度设计  132
12.3 屏幕大小和形状的设计  135
12.4 语言和地区设置  137
12.5 设备控件的设计  137
12.6 平台版本的设计  138
12.7 设备模式的设计  138
12.8 总结  138
第13章 Android应用布局  139
13.1 Android布局策略  139
13.2 用XML文件和代码布局  140
13.3 布局的管理  141
13.4 定义布局的尺寸  149
13.5 滚动条  149
13.6 z轴的布局顺序  150
13.7 内边距和外边距  150
13.8 导入与合并布局文件  150
13.9 自定义布局  151
13.10 Android开发工具和用户界面生成器  151
13.11 调试布局  152
13.12 总结  153
第14章 可缩放的图形  154
14.1 九宫格图片  154
14.2 绘图XML  158
14.3 用代码绘制  163
14.4 总结  166
第15章 超越可缩放——响应式设计  167
15.1 Android设备不仅仅只是手机  167
15.2 了解响应式设计  169
15.3 制作响应式用户界面的常见方法  176
15.4 总结  178
第16章 实现响应式用户界面  179
16.1 片段简介  179
16.2 片段和活动结构  181
16.3 移植现存的应用  182
16.4 示例程序  183
16.5 总结  193
第四部分 Android UI设计模式
第17章 用户界面设计模式简介  196
17.1 用户界面设计模式  196
17.2 使用UI设计模式的好处  197
17.3 Android设计指南中的设计模式  198
17.4 本书介绍的用户界面设计模式  198
17.5 总结  199
第18章 用户操作设计模式  200
18.1 使用操作栏模式  200
18.2 使用快捷操作设计模式  206
18.3 使用操作抽屉设计模式  210
18.4 使用下拉刷新设计模式  212
18.5 使用滑动忽略的手势  215
18.6 总结  217
第19章 导航和布局设计模式  218
19.1 使用层叠图库  218
19.2 使用仪表盘  220
19.3 使用工作空间  223
19.4 使用分拆视图  226
19.5 根据上下文扩展的设计模式  228
19.6 使用侧边导航  230
19.7 总结  232
第20章 数据设计模式  233
20.1 使用动态列表  233
20.2 使用图片占位符设计模式  234
20.3 非强制登录模式  236
20.4 使用拖动重排手柄模式  238
20.5 总结  239
第21章 用户界面设计反模式  240
21.1 避免使用启动界面  240
21.2 避免使用引导界面  241
21.3 避免使用确认窗口  242
21.4 避免在界面上使用Back按钮  243
21.5 避免使用菜单按钮  244
21.6 避免隐藏状态栏  244
21.7 避免为快捷操作使用滑动覆盖层  245
21.8 避免使用非Android的设计  246
21.9 总结  247
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精彩绝伦的Android UI设计
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入浅出Google Android
第1章　千呼万唤始出来——android的前世今生	1
1.1　android的诞生	1
1.2　android的优点	3
1.2.1　开放性	3
1.2.2　应用程序平等	3
1.2.3　应用程序间无界限	4
1.2.4　快速方便的应用程序开发	5
1.3　android系统架构	6
1.3.1　应用程序	6
1.3.2　应用程序框架	7
1.3.3　android运行时	8
1.3.4　系统库	9
1.3.5　linux内核	10
1.4　android与移动因特网	10
1.4.1　诺基亚的“四大支柱”	10
1.4.2　苹果公司的“大超市”	11
1.4.3　google的“云”	12
1.5　android的发展	12
1.5.1　android开源应用	12
1.5.2　android设备	13
.1.5.3　android平台	14
1.6　小结	15
第2章　而今迈步从头越——构建android开发环境	16
2.1　系统需求	16
2.2　安装软件	17
2.2.1　安装jdk	17
2.2.2　安装android sdk	17
2.2.3　安装eclipse以及adt	18
2.2.4　创建avd	22
2.3　android sdk 1.5初体验	23
2.4　构建第一个android程序	26
2.5　解析hello android	29
2.5.1　应用程序构成	30
2.5.2　代码分析	31
2.6　调试程序	34
2.7　小结	38
第3章　一片冰心在玉壶——剖析android应用程序核心	39
3.1　应用程序的基本组件	39
3.1.1　activity简介	41
3.1.2　service简介	42
3.1.3　broadcastreceiver简介	43
3.1.4　contentprovider简介	43
3.1.5　intent——连接组件的纽带	44
3.2　应用程序的生命周期	44
3.3　近看activity及其生命周期	48
3.3.1　创建activity	48
3.3.2　activity的生命周期	49
3.4　资源	57
3.4.1　创建、管理资源	58
3.4.2　使用资源	58
3.5　androidmanifest.xml文件	61
3.5.1　androidmanifest.xml文件的结构	61
3.5.2　在androidmanifest.xml中声明权限	62
3.6　小结	64
第4章　淡汝浓抹总相宜——创建用户界面	65
4.1　android用户界面初体验	65
4.1.1　view与viewgroup	65
4.1.2　可视化控件	66
4.1.3　布局	69
4.1.4　音乐播放器用户界面（1）..	82
4.2　菜单和对话框	85
4.2.1　菜单	85
4.2.2　对话框	91
4.2.3　音乐播放器用户界面（2）	97
4.3　进阶	99
4.3.1　响应用户界面的事件	99
4.3.2　用户界面的数据绑定	104
4.3.3　更改控件外观	109
4.3.4　音乐播放器用户界面（3）	112
4.4　小结	114
第5章　青鸟殷勤为探看——电话与短信应用	115
5.1　什么是intent	115
5.2　解析intent	118
5.2.1　显式intent和隐式intent	119
5.2.2　intentfilter	119
5.3　用intent激活电话拨号程序	121
5.3.1　拨号程序雏形	121
5.3.2　可输入电话号码的拨号程序	125
5.3.3　使用intentfilter的拨号程序	128
5.4　用intent实现一个简单的短信程序	129
5.4.1　创建tinysms界面	129
5.4.2　设置权限	131
5.4.3　发送短信	131
5.5　android中电话和短信服务的包	133
5.6　小结	133
第6章　仙乐风飘处处闻——构建你的音乐播放器	134
6.1　service简介	134
6.2　使用broadcastreceiver	138
6.3　让tinyplayer播放音乐	140
6.3.1　service部分	140
6.3.2　activity部分	144
6.4　小结	146
第7章　乱花渐欲迷人眼——使用外部数据和服务	147
7.1　实例1：通过url获取网络资源	147
7.2　实例2：用http post提交表单	150
7.3　实例3：用sax解析xml文件	153
7.4　实例4：利用google api完成天气预报	162
7.4.1　用户界面设计与实现	163
7.4.2　解析天气信息	165
7.5　实例5：用dom解析xml文件——构建实时地震信息列表	170
7.5.1　xml解析器：dom和sax	170
7.5.2　通过dom构建实时地震信息列表	171
7.5.3　使用dom解析	176
7.6　小结	179
第8章　日暮乡关何处是——使用位置服务和地图api	180
8.1　位置服务	180
8.1.1　获取位置信息	180
8.1.2　构造locationprovider查询条件	183
8.1.3　跟踪位置变化	183
8.2　基于地图的应用	186
8.2.1　获取map api密钥	187
8.2.2　使用mapview下载显示地图	189
8.2.3　在地图上标记当前位置	191
8.3　用地图显示地震信息	197
8.4　小结	201
第9章　为有源头活水来——使用sqlite、contentprovider与
preferences处理数据	202
9.1　文件i/o	202
9.2　sqlite数据库	206
9.2.1　sqlite数据库介绍	206
9.2.2　创建/打开sqlite数据库	207
9.2.3　利用sqlitedatabase对象操作数据库	210
9.2.4　cursor的使用	216
9.3　contentprovider	220
9.3.1　定义contentprovider	220
9.3.2　使用contentresolver查询、更改数据	227
9.4　使用preferences存储应用程序数据	230
9.5　让tinyplayer播放本地音乐文件	233
9.6　小结	236
第10章　珠箔银屏迤逦开——桌面组件的开发	237
10.1　桌面组件简介	237
10.2　快捷方式	238
10.2.1　在应用程序中添加快捷方式	238
10.2.2　在launcher添加应用程序的快捷方式	242
10.3　实时文件夹	245
10.3.1　定义创建实时文件夹的activity	245
10.3.2　定义支持实时文件夹的contentprovider	248
10.4　桌面部件	251
10.5　小结	256
第11章　欲书花叶寄朝云——虚拟软键盘与输入法	257
11.1　软键盘输入法简介	257
11.2　创建软键盘输入法	259
11.2.1　软键盘输入法的androidmanifest.xml	259
11.2.2　输入法和软键盘的核心类	260
11.2.3　输入法	264
11.2.4　根据目标输入类型调整输入法布局	264
11.2.5　获取输入内容	266
11.2.6　截获硬键盘按键事件	267
11.2.7　输入候选view	267
11.3　小结	268
第12章　试借君王玉马鞭——准备发布应用程序	269
12.1　android应用程序发布概览	269
12.2　最终用户许可协议	269
12.3　应用程序签名	274
12.3.1　概述	274
12.3.2　签名策略	275
12.3.3　为应用程序签名	275
12.4　应用程序版本	277
12.4.1　版本管理	277
12.4.2　应用程序升级	278
12.5　小结	279
第13章　书中自有黄金屋——销售android应用程序	280
13.1　sun开发人员的苹果app store传奇	280
13.2　android market简介	280
13.2.1　android market是什么	281
13.2.2　android market的优势	281
13.2.3　在android market上发布应用程序	282
13.3　发布android应用程序的其他途径	284
13.4　小结	285
附录A 常用的android常量	286
附录B adb的使用	291
附录C 在模拟器中虚拟sd卡  293
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入浅出Google Android
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android基础教程 （第3版）
第一部分 Android简介
第1章 快速入门 2
1.1 安装工具 2
1.1.1 Java 5.0+ 2
1.1.2 Eclipse 3
1.1.3 Android SDK启动程序软件包 3
1.1.4 Android SDK组件 4
1.1.5 Eclipse插件 5
1.2 创建第一个程序 7
1.3 在模拟器上运行程序 8
1.3.1 创建一个AVD 8
1.3.2 再试一次 9
1.4 在手机上运行程序 11
1.5 快速阅读指南 11
第2章 基本概念 12
2.1 Android的系统架构 12
2.1.1 Linux内核 12
2.1.2 本机库 13
2.1.3 Android运行时 15
2.1.4 应用程序框架 15
.2.1.5 应用程序和小部件 15
2.2 它还活着 16
2.2.1 进程不等于应用程序 17
2.2.2 应用程序生命周期 18
2.3 构建块 20
2.3.1 活动 20
2.3.2 意图 20
2.3.3 服务 20
2.3.4 内容提供者 21
2.4 使用资源 21
2.5 安全性 21
2.6 快速阅读指南 22
第二部分 Android基础知识
第3章 设计用户界面 24
3.1 数独游戏简介 24
3.2 声明性设计 25
3.3 创建启动界面 26
3.4 使用替代资源 33
3.5 实现About对话框 36
3.6 应用主题 40
3.7 添加菜单 42
3.8 添加设置 44
3.9 开始新游戏 45
3.10 利用日志消息调试程序 47
3.11 利用调试器调试程序 49
3.12 退出游戏 49
3.13 快速阅读指南 49
第4章 绘制2D图形 51
4.1 Android图形基础 51
4.1.1 Color类 51
4.1.2 Paint类 52
4.1.3 Canvas类 53
4.1.4 Path类 53
4.1.5 Drawable类 54
4.2 在数独程序中添加图形 56
4.2.1 开始游戏 56
4.2.2 定义Game类 57
4.2.3 定义PuzzleView类 58
4.2.4 绘制游戏盘面 60
4.2.5 绘制数字 62
4.3 处理输入 63
4.3.1 定义和更新选定区域 64
4.3.2 输入数字 66
4.3.3 增加提示 67
4.3.4 抖动屏幕 68
4.4 其他问题 69
4.4.1 创建软键盘 69
4.4.2 实现游戏逻辑 74
4.4.3 其他功能 76
4.5 更多改进 78
4.6 快速阅读指南 79
第5章 多媒体 80
5.1 播放音频 80
5.2 播放视频 85
5.3 为数独游戏配上音乐 89
5.4 快速阅读指南 92
第6章 存储本地数据 93
6.1 为数独游戏添加选项 93
6.2 继续玩前一个游戏 95
6.3 记住当前位置 97
6.4 访问内部文件系统 98
6.5 访问SD卡 99
6.6 快速阅读指南 100
第三部分 高级主题
第7章 互联的世界 102
7.1 通过意图实现浏览 103
7.2 利用视图打开网页 106
7.3 JavaScript与Java通信 110
7.4 使用Web服务 116
7.5 快速阅读指南 126
第8章 定位与环境感知 127
8.1 位置，位置，位置 127
8.1.1 我在哪里 128
8.1.2 更新位置 130
8.1.3 模拟说明 132
8.2 充分利用传感器 132
8.2.1 了解传感器 133
8.2.2 解析传感器的读数 133
8.2.3 模拟说明 134
8.3 地图功能 135
8.3.1 嵌入MapView 136
8.3.2 准备就绪 138
8.3.3 模拟说明 140
8.4 快速阅读指南 140
第9章 SQL实战 142
9.1 SQLite简介 142
9.2 SQL基础 143
9.2.1 DDL语句 144
9.2.2 修改语句 144
9.2.3 查询语句 144
9.3 你好，数据库 145
9.3.1 使用SQliteOpenHelper 146
9.3.2 定义主程序 148
9.3.3 添加一行 149
9.3.4 运行一个查询 150
9.3.5 显示查询结果 151
9.4 数据绑定 152
9.5 使用ContentProvider 155
9.5.1 更改主程序 157
9.5.2 添加一行 157
9.5.3 运行一个查询 158
9.6 实现ContentProvider 158
9.7 快速阅读指南 159
第10章 利用OpenGL实现3D图形 161
10.1 理解3D图形 161
10.2 OpenGL简介 162
10.3 构建一个OpenGL程序 163
10.4 渲染场景 165
10.5 构建一个模型 168
10.6 光线、相机…… 171
10.7 动作 173
10.8 应用纹理 175
10.9 透明效果 176
10.10 测量平滑度 178
10.11 快速阅读指南 179
第四部分 附 录
附录A Java与Android：语言及其API 182
附录B Hello, Widget 186
附录C 发布到Android市场 195
附录D 参考书目 202
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android基础教程 （第3版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通Android 3
第1 章  Android计算平台简介　　1
1.1  面向新PC 的全新平台　　1
1.2  Android 的历史　　3
1.3  Dalvik VM 剖析　　4
1.4  理解Android 软件栈　　5
1.5  使用Android SDK 开发最终用户应用程序　　6
1.5.1  Android 模拟器　　6
1.5.2  Android UI　　7
1.5.3  Android 基础组件　　7
1.5.4  高级UI 概念　　8
1.5.5  Android Service 组件　　 10
1.5.6  Android 媒体和电话组件　　 10
1.5.7  Android Java 包　　11
1.6  利用Android 源代码　　13
1.7  本书的示例项目　　14
1.8  小结　　15
第2 章  设置开发环境　　16
2.1  设置环境　　16
2.1.1  下载JDK 6 　　16
2.1.2  下载Eclipse 3.6　　17
2.1.3  下载Android SDK 　　18
2.1.4  命令行窗口　　19
2.1.5  安装ADT 　　19
2.2  了解基本组件　　21
2.2.1  View　　21
2.2.2  Activity　　21
2.2.3  Intent　　22
2.2.4  ContentProvider　　22
2.2.5  Service　　22
2.2.6  AndroidManifest.xml　　 22
2.2.7  AVD 　　22
2.3  Hello World!　　23
2.4  AVD 　　27
2.5  剖析Android 应用程序的结构　　 28
2.6  分析Notepad 应用程序　　 30
2.6.1  加载和运行Notepad 应用程序　　30
2.6.2  分解应用程序　　31
2.7  了解应用程序生命周期　　37
2.8  调试应用程序　　40
2.8.1  启动模拟器　　 41
2.8.2  StrictMode 　　42
2.8.3  参考资料　　 46
2.9  小结　　 46
第3 章  使用Android 资源　　 47
3.1  资源　　47
3.1.1  字符串资源　　 47
3.1.2  布局资源　　49
3.1.3  资源引用语法　　51
3.1.4  定义资源ID 供以后使用　　 52
3.1.5  已编译和未编译的Android资源　　 52
3.2  Android 关键资源　　53
3.3  使用任意XML 资源文件　　 61
3.4  使用原始资源　　62
3.5  使用资产　　 63
3.6  了解资源目录结构　　63
3.7  资源和配置更改　　64
3.8  参考资料URL　　67
3.9  小结　　 67
第4 章  ContentProvider 　　68
4.1  探索Android 内置的ContentProvider 　　69
4.2  ContentProvider 的架构　　73
4.3  实现ContentProvider　　84
4.4  练习图书提供程序　　94
4.4.1  添加图书　　94
4.4.2  删除图书　　94
4.4.3  获取图书数量　　95
4.4.4  显示图书列表　　95
4.5  资源　　96
4.6  小结　　96
第5 章  Intent　　97
5.1  Android Intent 基础知识　　97
5.2  Android 中可用的Intent 　　98
5.3  Intent 的组成　　100
5.3.1  Intent 和数据URI　　100
5.3.2  一般操作　　101
5.3.3  使用extra 信息　　102
5.3.4  使用组件直接调用活动　　103
5.3.5  Intent 类别　　104
5.3.6  将Intent 解析为组件的规则　　106
5.4  练习使用ACTION_PICK　　108
5.5  练习使用GET_CONTENT 操作　　110
5.6  挂起的Intent　　111
5.7  资源　　112
5.8  小结　　113
第6 章  构建用户界面和使用控件　　 114
6.1  Android 中的UI 开发　　114
6.1.1  完全利用代码来构建UI　　115
6.1.2  完全使用XML 构建UI　　117
6.1.3  使用XML 结合代码构建UI 　　118
6.2  Android 中的常见控件　　120
6.2.1  文本控件　　120
6.2.2  按钮控件　　123
6.2.3  ImageView 控件　　131
6.2.4  日期和时间控件　　132
6.2.5  MapView 控件　　134
6.3  适配器　　134
6.3.1  SimpleCursorAdapter　　135
6.3.2  了解ArrayAdapter 　　136
6.4  结合使用适配器和AdapterView 　　138
6.4.1  基本的列表控件：ListView 　　138
6.4.2  GridView 控件　　145
6.4.3  Spinner 控件　　146
6.4.4  Gallery 控件　　148
6.4.5  创建自定义适配器　　148
6.4.6  Android 中的其他控件　　153
6.5  样式和主题　　154
6.5.1  使用样式　　154
6.5.2  使用主题　　156
6.6  布局管理器　　157
6.6.1  LinearLayout 布局管理器　　157
6.6.2  TableLayout 布局管理器　　160
6.6.3  RelativeLayout 布局管理器　　163
6.6.4  FrameLayout 布局管理器　　165
6.6.5  为各种设备配置自定义布局　　167
6.7  使用Hierarchy Viewer 调试和优化布局　　168
6.8  参考资料　　171
6.9  小结　　171
第7 章  使用菜单　　172
7.1  Android 菜单　　172
7.1.1  创建菜单　　173
7.1.2  使用菜单组　　174
7.2  响应菜单项　　175
7.3  创建测试工具来测试菜单　　176
7.4  使用其他菜单类型　　182
7.4.1  展开的菜单　　182
7.4.2  使用图标菜单　　182
7.4.3  使用子菜单　　183
7.4.4  配置系统菜单　　183
7.4.5  使用上下文菜单　　184
7.4.6  使用交替菜单　　186
7.4.7  使用菜单响应数据变化　　189
7.5  通过XML 文件加载菜单　　189
7.5.1  XML 菜单资源文件的结构　　189
7.5.2  填充XML 菜单资源文件　　190
7.5.3  响应基于XML 的菜单项　　190
7.5.4  其他XML 菜单标记简介　　191
7.6  资源　　192
7.7  小结　　192
第8 章  使用对话框　　193
8.1  使用Android 中的对话框　　193
8.1.1  设计提醒对话框　　193
8.1.2  设计提示对话框　　195
8.1.3  Android 对话框的特性　　199
8.1.4  重新设计提示对话框　　200
8.2  使用托管对话框　　200
8.2.1  理解托管对话框协议　　201
8.2.2  将非托管对话框重新转换为托管对话框　　201
8.2.3  简化托管对话框协议　　202
8.3  使用Toast 　　209
8.4  资源　　210
8.5  小结　　210
第9 章  管理和组织首选项　　211
9.1  探索首选项框架　　211
9.1.1  ListPreference　　211
9.1.2  CheckBoxPreference　　219
9.1.3  EditTextPreference　　220
9.1.4  RingtonePreference　　222
9.2  组织首选项　　223
9.3  以编程方式操作首选项　　226
9.4  使用首选项保存状态　　226
9.5  参考资料　　227
9.6  小结　　228
第10 章  探索安全性和权限　　229
10.1  理解Android 安全性模型　　229
10.1.1 安全性概念概述　　229
10.1.2  为部署签名应用程序　　230
10.2  执行运行时安全性检查　　234
10.2.1  进程边界上的安全性　　235
10.2.2  声明和使用权限　　235
10.2.3  理解和使用自定义权限　　237
10.2.4  理解和使用URI 权限　　241
10.3  参考资料　　 243
10.4  小结　　243
第11 章  构建和使用服务　　244
11.1  使用HTTP 服务　　 244
11.1.1  将HttpClient 用于HTTPGET 请求　　244
11.1.2  将HttpClient 用于HTTPPOST 请求（多部分POST
请求示例）　　 246
11.1.3  SOAP、JSON 和XML分析程序　　248
11.1.4  处理异常　　 249
11.1.5  解决多线程问题　　251
11.1.6  有趣的超时　　253
11.1.7  使用HttpURLConnection 　　 254
11.1.8  使用AndroidHttpClient 　　 254
11.1.9  使用后台线程（AsyncTask） 　　 255
11.1.10  使用AsyncTask 处理配置更改　　 260
11.1.11  使用DownloadManager获取文件　　 265
11.2  使用Android 服务　　 270
11.2.1  Android 中的服务　　 270
11.2.2  本地服务　　 271
11.2.3  AIDL 服务　　 277
11.2.4  在AIDL 中定义服务接口　　 278
11.2.5  实现AIDL 接口　　280
11.2.6  从客户端应用程序调用服务　　 282
11.2.7  向服务传递复杂的类型　　285
11.3  使用服务的真实示例　　 294
11.3.1  Google 翻译API　　 294
11.3.2  使用Google 翻译API 　　 295
11.4  参考资料　　303
11.5  小结　　303
第12 章  包　　304
12.1  包和进程　　304
12.1.1  包规范的细节　　 304
12.1.2  将包名称转换为进程名称　　304
12.1.3  列出安装的包　　305
12.1.4  通过包浏览器删除包　　305
12.2  包签名过程回顾　　306
12.2.1  理解数字签名：场景1 　　306
12.2.2  理解数字签名：场景2 　　306
12.2.3  一种理解数字签名的模式　　307
12.2.4  数字签名执行方式　　307
12.2.5  签名过程的影响　　307
12.3  在包之间共享数据　　308
12.3.1  共享用户ID 的性质　　308
12.3.2  共享数据的代码模式　　309
12.4  库项目　　309
12.4.1  库项目的概念　　310
12.4.2  库项目的性质　　310
12.4.3  创建库项目　　312
12.4.4  创建使用库的Android项目　　314
12.5  参考资料　　320
12.6  小结　　320
第13 章  处理程序　　 321
13.1  Android 组件和线程　　321
13.1.1  活动在主线程上运行　　322
13.1.2  广播接收程序在主线程上运行　　322
13.1.3  服务在主线程上运行　　322
13.1.4  ContentProvider 在主线程上运行　　322
13.1.5  单一主线程的影响　　323
13.1.6  线程池、ContentProvider、外部服务组件　　323
13.1.7  线程实用程序：发现线程　　323
13.2  处理程序　　324
13.2.1  持有主线程的影响　　325
13.2.2  使用处理程序延迟主线程上的工作　　325
13.2.3  延迟工作的处理程序源代码示例　　327
13.2.4  构造合适的Message 对象　　327
13.2.5  将Message 对象发送给队列　　328
13.2.6  响应handleMessage 回调　　328
13.3  使用工作线程　　328
13.3.1  从菜单调用工作线程　　329
13.3.2  在工作线程与主线程之间通信　　330
13.3.3  线程行为概述　　332
13.4  处理程序示例驱动程序类　　332
13.4.1  驱动程序活动文件　　333
13.4.2  布局文件　　336
13.4.3  菜单文件　　336
13.4.4  描述文件　　336
13.5  组件和进程寿命　　337
13.5.1  活动生命周期　　337
13.5.2  服务生命周期　　338
13.5.3  接收程序生命周期　　338
13.5.4  提供程序生命周期　　339
13.6  代码编译说明　　339
13.6.1  从ZIP 文件创建项目　　339
13.6.2  从代码清单创建项目　　340
13.7  参考资料　　340
13.8  小结　　341
第14 章  广播接收程序和长期运行的服务　　342
14.1  广播接收程序　　342
14.1.1  发送广播　　342
14.1.2  编写简单的接收程序：示例代码　　343
14.1.3  在描述文件中注册接收程序　　344
14.1.4  发送测试广播　　344
14.1.5  容纳多个接收程序　　348
14.1.6  进程外接收程序项目　　349
14.2  从接收程序使用通知　　350
14.2.1  通过通知管理器监控通知　　350
14.2.2  发送通知　　352
14.3  长期运行的接收程序和服务　　354
14.3.1  长期运行的广播接收程序协议　　355
14.3.2  IntentService 　　356
14.3.3  IntentService 源代码　　356
14.4  为广播接收程序扩展IntentService　　358
14.4.1  长期运行的广播服务抽象　　358
14.4.2  长期运行的接收程序　　360
14.4.3  使用LightedGreenRoom抽象唤醒锁　　362
14.5  长期运行的服务的实现　　367
14.5.1  非粘滞性服务的细节　　368
14.5.2  粘滞性服务的细节　　368
14.5.3  非粘滞性的变体：重传送（redeliver）Intent
368
14.5.4  在onStartCommand 中指定服务标志　　369
14.5.5  挑选合适的粘滞性　　369
14.5.6  从两个位置控制唤醒锁　　369
14.5.7  长期运行的服务的实现　　369
14.5.8  测试长期运行的服务　　371
14.6  代码编译说明　　372
14.6.1  从ZIP 文件创建项目　　372
14.6.2  通过代码清单创建项目　　372
14.7  参考资料　　374
14.8  小结　　374
第15 章  闹钟管理器　　375
15.1  闹钟管理器基本知识：设置一个简单的闹钟　　375
15.1.1  获取闹钟管理器　　375
15.1.2  设置闹钟时间　　375
15.1.3  设置闹钟接收程序　　376
15.1.4  创建适合闹钟的PendingIntent 　　377
15.1.5  设置闹钟　　377
15.1.6  测试项目　　378
15.2  探索其他闹钟管理器场景　　384
15.2.1  设置重复闹钟　　384
15.2.2  取消闹钟　　386
15.2.3  使用多个闹钟　　388
15.2.4  Intent 在设置闹钟时的首要职责　　391
15.2.5 闹钟的持久化　　 394
15.3  闹钟管理器事实　　 394
15.4  参考资料　　 394
15.5  小结　　 395
第16 章  2D 动画揭秘　　396
16.1  逐帧动画　　 396
16.1.1  计划逐帧动画　　 396
16.1.2  创建活动　　398
16.1.3  将动画添加到活动　　 399
16.2  布局动画　　 401
16.2.1  基本的补间动画类型　　 402
16.2.2  计划布局动画测试工具　　 402
16.2.3  创建活动和ListView　　 403
16.2.4  将ListView 制作成动画　　405
16.2.5  使用插值器　　 408
16.3  视图动画　　 409
16.3.1  理解视图动画　　 409
16.3.2  添加动画　　 412
16.3.3  使用Camera 实现2D 图像的深度效果　　 415
16.3.4  探索AnimationListener类　　 416
16.3.5  关于变换矩阵的一些说明　　 416
16.4  资源　　 417
16.5  小结　　 418
第17 章  地图和基于位置的服务　　419
17.1  地图包　　419
17.1.1  从Google 获取map-api密钥　　 419
17.1.2  MapView 和MapActivity 　　 421
17.1.3  使用覆盖图添加标记　　 426
17.2  位置包　　431
17.2.1  使用Android 进行地理编码　　431
17.2.2  使用后台线程进行地理编码　　 434
17.2.3  LocationManager 服务　　 437
17.2.4  使用MyLocationOverlay显示位置　　 443
17.2.5  使用接近提醒　　447
17.3  参考资料　　451
17.4  小结　　451
第18 章  电话API 　　 452
18.1  使用SMS　　452
18.1.1  发送SMS 消息　　452
18.1.2  监视传入的SMS 消息　　455
18.1.3  使用SMS 文件夹　　457
18.1.4  发送电子邮件　　459
18.2  使用电话管理器　　459
18.3  SIP 　　462
18.4  参考资料　　464
18.5  小结　　464
第19 章  媒体框架　　 465
19.1  使用媒体API　　465
19.2  播放媒体　　468
19.2.1  播放音频内容　　469
19.2.2  播放视频内容　　478
19.3  录制媒体　　481
19.3.1  使用MediaRecorder 录制音频　　481
19.3.2  使用AudioRecord 录制音频　　485
19.3.3  视频录制　　489
19.3.4  MediaStore 类　　497
19.3.5  使用Intnet 录制音频　　498
19.3.6  将媒体内容添加到媒体存储　　501
19.3.7  为整个SD 卡触发MediaScanner 　　503
19.3.8  参考资料　　503
19.4  小结　　503
第20 章  使用OpenGL 进行3D 图形编程　　 504
20.1  了解OpenGL 的历史和背景　　505
20.1.1  OpenGL ES 　　505
20.1.2  OpenGL ES 与Java ME　　506
20.1.3  M3G：另一种Java ME 3D图形标准　　506
20.2  OpenGL 的基本原理　　507
20.2.1  使用OpenGL ES 进行基本绘制　　507
20.2.2  OpenGL 照相机和坐标　　512
20.3  在Android 中使用OpenGL ES　　515
20.3.1  使用GLSurfaceView 和相关类　　515
20.3.2  实现Renderer　　515
20.3.3  通过Activity 使用GLSurfaceView 　　518
20.3.4  更改照相机设置　　523
20.3.5  使用索引添加另一个三角形　　524
20.3.6  为简单的OpenGL 三角形制作动画　　526
20.4  OpenGL 的运用：形状和纹理　　528
20.4.1  绘制矩形　　528
20.4.2  使用形状　　530
20.4.3  使用纹理　　541
20.4.4  绘制多个图形　　546
20.5  OpenGL ES 2.0 　　548
20.5.1  针对OpenGL ES 2.0 的Java 绑定　　549
20.5.2  呈现步骤　　552
20.5.3  着色器　　552
20.5.4  将着色器编译到程序中　　553
20.5.5  访问着色器程序变量　　555
20.5.6  简单的ES 2.0 三角形　　555
20.5.7  关于OpenGL ES 2.0 的更多阅读材料　　558
20.6  代码编译说明　　559
20.7  小结　　560
第21 章  活动文件夹　　 561
21.1  探索活动文件夹　　561
21.1.1  用户如何使用活动文件夹　　562
21.1.2  构建活动文件夹　　565
21.2  代码编译说明　　573
21.3  参考资料　　573
21.4  小结　　573
第22 章  主屏幕部件　　575
22.1  主屏幕部件的架构　　575
22.1.1  什么是主屏幕部件　　575
22.1.2  主屏幕部件的用户体验　　576
22.1.3  部件的生命周期　　578
22.2  示例部件应用程序　　582
22.2.1  定义部件提供程序　　583
22.2.2  定义部件尺寸　　584
22.2.3  与部件布局相关的文件　　586
22.2.4  实现部件提供程序　　586
22.2.5  实现部件模型　　589
22.2.6  实现部件配置活动　　595
22.3  部件局限性和扩展　　598
22.4  资源　　599
22.5  小结　　599
第23 章  Android 搜索　　600
23.1  Android 搜索体验　　600
23.1.1  探索Android 全局搜索　　601
23.1.2  为全局搜索启用建议提供程序　　606
23.2  活动与搜索键交互　　608
23.2.1  常规活动上的搜索键行为　　609
23.2.2  禁用了搜索的活动的行为　　615
23.2.3  通过菜单显式调用搜索　　617
23.2.4  本地搜索和相关活动　　620
23.2.5  启用键入搜索　　625
23.3  实现简单建议提供程序　　626
23.3.1  计划简单建议提供程序　　626
23.3.2  简单建议提供程序实现文件　　626
23.3.3  实现SimpleSuggestion-Provider 类　　627
23.3.4  简单建议提供程序搜索活动　　630
23.3.5  搜索调用方活动　　634
23.3.6  简单建议提供程序用户体验　　636
23.4  实现自定义建议提供程序　　638
23.4.1  计划自定义建议提供程序　　638
23.4.2  SuggestURLProvider 项目实现文件　　 639
23.4.3  实现SuggestUrlProvider类　　 639
23.4.4  实现自定义建议提供程序的搜索活动　　 647
23.4.5  自定义建议提供程序描述文件　　 652
23.4.6  自定义建议用户体验　　 653
23.5  使用操作键和应用程序特有的搜索数据　　 655
23.5.1  在Android 搜索中使用操作键　　 655
23.5.2  使用应用程序特定的搜索上下文　　 658
23.6  资源　　 659
23.7  对平板电脑的意义　　 659
23.8  小结　　 660
第24 章  文本到语音转换　　661
24.1  Android 中的文本到语音转换　　 661
24.2  使用语段跟踪语音　　 665
24.3  使用音频文件代替话音　　 666
24.4  TTS 引擎的高级功能　　 672
24.4.1  设置音频流　　 673
24.4.2  使用耳标　　 673
24.4.3  播放静音　　 674
24.4.4  选择不同的文本到语音转换引擎　　 674
24.4.5  使用语言方法　　 674
24.5  参考资料　　 675
24.6  小结　　 676
第25 章  触摸屏　　677
25.1  MotionEvent　　 677
25.1.1  MotionEvent 对象　　 677
25.1.2  回收MotionEvent 　　 687
25.1.3  使用VelocityTracker 　　 687
25.1.4  探索拖放操作　　689
25.2  多点触摸　　692
25.2.1  Android2.2 之前的多点触摸　　692
25.2.2  自Android 2.2 开始的多点触摸　　699
25.3  触摸地图　　699
25.4  手势　　702
25.4.1  捏合手势　　702
25.4.2  GestureDetector 和OnGestureListener 　　705
25.4.3  自定义手势　　707
25.4.4  Gestures Builder 应用程序　　708
25.5  参考资料　　713
25.6  小结　　714
第26 章  传感器　　 715
26.1  什么是传感器　　715
26.1.1  检测传感器　　716
26.1.2  可以了解的传感器信息　　716
26.2  获取传感器事件　　718
26.3  解释传感器数据　　727
26.3.1  光线传感器　　727
26.3.2  接近传感器　　727
26.3.3  温度传感器　　727
26.3.4  压力传感器　　728
26.3.5  陀螺仪传感器　　728
26.3.6  加速度计　　728
26.3.7  磁场传感器　　733
26.3.8  结合使用加速度计和磁场传感器　　734
26.3.9  方向传感器　　734
26.3.10  磁偏角和GeomagneticField 　　740
26.3.11  重力传感器　　740
26.3.12  直线加速度传感器　　740
26.3.13  旋转矢量传感器　　740
26.3.14  近场通信传感器　　741
26.4  参考资料　　749
26.5  小结　　749
第27 章  联系人API 　　 750
27.1  账户　　750
27.1.1  账户屏幕概览　　750
27.1.2  账户与联系人的相关性　　754
27.1.3  枚举账户　　754
27.2  联系人应用程序　　754
27.2.1  显示联系人　　755
27.2.2  显示联系人详细信息　　755
27.2.3  编辑联系人详细信息　　756
27.2.4  设置联系人的照片　　758
27.2.5  导出联系人　　758
27.2.6  各种联系人数据类型　　759
27.3  联系人　　760
27.3.1  内容SQLite 数据库　　760
27.3.2  原始联系人　　761
27.3.3  数据表　　762
27.3.4  聚合联系人　　763
27.3.5  view_contacts 　　765
27.3.6  contact_entities_view 　　765
27.4  联系人API 　　766
27.4.1  浏览账户　　766
27.4.2  浏览聚合联系人　　773
27.4.3  浏览原始联系人　　781
27.4.4  浏览原始联系人数据　　785
27.4.5  添加联系人和它的详细信息　　788
27.5  控制聚合　　790
27.6  同步的影响　　791
27.7  参考资料　　792
27.8  小结　　792
第28 章  使用Android Market　　 793
28.1  成为发布者　　793
28.1.1  遵守规则　　794
28.1.2  开发人员控制台　　795
28.2  准备销售应用程序　　798
28.2.1  针对不同设备进行测试　　798
28.2.2  支持不同的屏幕尺寸　　798
28.2.3  准备上传AndroidManifest.xml 　　799
28.2.4  本地化应用程序　　800
28.2.5  准备应用程序图标　　800
28.2.6  付费应用程序考虑因素　　801
28.2.7  将用户引导至Market 　　801
28.2.8  Android 授权服务　　802
28.2.9  准备上传.apk 文件　　802
28.3  上传应用程序　　803
28.4  Android Market 上的用户体验　　805
28.5  更多发布途径　　806
28.6  参考资料　　807
28.7  小结　　807
第29 章  多用途的碎片　　808
29.1  什么是碎片　　808
29.1.1  何时使用碎片　　809
29.1.2  碎片的结构　　809
29.1.3  碎片的生命周期　　810
29.1.4  展示生命周期的示例碎片应用程序　　814
29.2  FragmentTransactions 和碎片后退栈　　821
29.3  FragmentManager　　823
29.3.1  引用碎片时的注意事项　　824
29.3.2  ListFragments 和<fragment> 　　824
29.3.3  在需要时调用独立的活动　　828
29.3.4  碎片的持久化　　830
29.4  对话框碎片　　831
29.4.1  DialogFragment 基础知识　　831
29.4.2  DialogFragments 示例应用程序　　835
29.5  碎片之间的更多通信方式　　846
29.6  使用ObjectAnimator 自定义动画　　847
29.7  参考资料　　849
29.8  小结　　850
第30 章  ActionBar 　　851
30.1  ActionBar 剖析　　851
30.2  选项卡导航操作栏活动　　852
30.2.1  实现基础活动类　　 853
30.2.2  为ActionBar 分配统一的行为　　855
30.2.3  实现选项卡监听器　　 857
30.2.4  实现选项卡操作栏活动　　858
30.2.5  可滚动的调试文本视图布局　　 860
30.2.6  操作栏和菜单交互　　 861
30.2.7  Android 描述文件　　 863
30.2.8  测试选项卡操作栏活动　　 863
30.3  列表导航操作栏活动　　864
30.3.1  创建SpinnerAdapter 　　864
30.3.2  创建列表监听器　　865
30.3.3  设置列表操作栏　　865
30.3.4  更改BaseActionBar-Activity　　 866
30.3.5  更改AndroidManifest.xml 　　 866
30.3.6  测试列表操作栏活动　　 867
30.4  标准导航操作栏活动　　 868
30.4.1  标准导航操作栏活动　　 868
30.4.2  更改BaseActionBar-Activity 　　 869
30.4.3  更改AndroidManifest.xml 　　 870
30.4.4  测试标准操作栏活动　　 870
30.5  参考资料　　 871
30.6  小结　　 872
第31 章  3.0 版中的更多主题　　873
31.1  基于列表的主屏幕部件　　873
31.1.1  3.0 版中新的远程视图　　 873
31.1.2  在远程视图中使用列表　　875
31.1.3  应用示例：测试主屏幕列表部件　　 885
31.1.4  对测试列表部件进行测试　　 893
31.2  拖放　　 894
31.2.1  3.0 版中拖放的基础知识　　 894
31.2.2  拖放示例应用程序　　 895
31.2.3  测试示例拖放应用程序　　 905
31.3  参考资料　　 906
31.4  小结　　 907
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通Android 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android的设计与实现
前言
第一部分　基础篇
第1章　Android体系结构及源代码阅读环境搭建 / 2
1.1　Android发展过程 / 2
1.2　Android体系结构 / 3
1.2.1　静态视角的体系结构 / 3
1.2.2　动态视角的体系结构 / 7
1.3　Android源码下载和编译 / 8
1.3.1　搭建开发环境 / 8
1.3.2　下载Android上层系统源代码 / 9
1.3.3　下载指定模块源码 / 10
1.3.4　下载 Android Linux Kernel源码 / 11
1.3.5　编译Android上层系统源码 / 12
1.3.6　编译指定模块源码 / 12
1.4　Android源码结构 / 14
1.5　Android源码开发工具的配置和使用 / 15
1.5.1　配置Android SDK  / 15
1.5.2　用Eclipse开发和调试源代码 / 16
1.5.3　用Source Insight阅读源代码 / 19
1.6　NDK开发环境配置 / 20
1.7　本章小结 / 21
第2章　框架基础JNI / 22
2.1　JNI在Android系统中所处的位置 / 22
2.2　JNI框架层实例分析 / 23
2.2.1　Log系统Java层分析 / 24
2.2.2　Log系统的JNI层 / 24
2.2.3　Log系统的JNI方法注册 / 25
2.3　JNI总管：JNIEnv / 27
2.4　在Java中调用JNI实现方法 / 29
2.4.1　Java数据类型与JNI数据类型转换 / 29
2.4.2　JNI方法命名规则 / 30
2.4.3　JNI方法签名规则 / 31
2.5　JNI操作Java对象 / 32
2.5.1　访问Java对象 / 32
2.5.2　操作成员变量（域）和方法 / 33
2.5.3　全局引用、弱全局引用和局部引用 / 34
2.6　JNI异常处理 / 36
2.7　JNI应用层实例分析 / 38
2.7.1　Java层分析 / 38
2.7.2　JNI层代码和异常处理 / 39
2.8　本章小结 / 42
第二部分　启动篇
第3章　Android启动过程的底层实现 / 44
3.1　Android正常模式启动流程 / 44
3.2　Kernel启动过程 / 44
3.2.1　内核引导阶段 / 45
3.2.2　内核启动阶段 / 46
3.3　init进程的执行过程 / 49
3.4　init.rc文件解析过程 / 53
3.4.1　Android初始化语言 / 53
3.4.2　init.rc的内容 / 56
3.4.3　解析配置文件 / 57
3.4.4　解析Service / 60
3.4.5　解析Action / 63
3.5　触发并启动Action和Service / 65
3.5.1　触发Action / 65
3.5.2　执行Action / 66
3.5.3　启动Service / 70
3.5.4　init对属性服务的处理 / 71
3.6　init循环监听处理事件 / 75
3.7　本章小结 / 77
第4章　Android 启动过程的上层实现 / 78
4.1　第一个Dalvik虚拟机zygote / 79
4.1.1　zygote的配置 / 79
4.1.2　如何执行zygote服务程序 / 80
4.2　ZygoteInit的启动过程 / 82
4.2.1　创建Dalvik虚拟机 / 83
4.2.2　注册JNI方法 / 85
4.2.3　开启Java世界 / 88
4.3　ZygoteInit开启Java世界的五部分工作 / 89
4.3.1　注册zygote的Socket / 89
4.3.2　预加载Class资源和Resource资源 / 89
4.3.3　启动system_server进程 / 92
4.3.4　执行MethodAndArgsCaller的run方法 / 98
4.3.5　执行runSelectLoopMode方法 / 102
4.4　zygote处理Home启动请求 / 104
4.5　本章小结 / 112
第三部分　Binder篇
第5章 　Binder在Native框架层的实现 / 114
5.1　Binder与C/S体系结构概述 / 114
5.2　servicemanager进程的启动过程 / 115
5.2.1　初始化Binder通信环境 / 116
5.2.2　注册上下文管理者 / 118
5.2.3　等待接收并处理IPC通信请求 / 120
5.3　Server的启动和Service的注册过程 / 128
5.3.1　创建ProcessState对象 / 129
5.3.2　获取servicemanager的代理对象 / 131
5.3.3　注册Service / 139
5.3.4　Server进程开启线程池 / 145
5.4　Client端使用服务代理对象 / 146
5.5　服务代理与服务通信 / 149
5.6　本章小结 / 152
第6章　Binder在Java框架层的实现 / 153
6.1　Java系统服务的创建过程 / 153
6.1.1　创建JavaBBinderHolder对象 / 155
6.1.2　JavaBBinder的作用 / 156
6.1.3　gBinderOffsets结构体解析 / 156
6.2　Java系统服务的注册过程 / 159
6.2.1　调用BinderInternal.getContextObject方法 / 160
6.2.2　调用ServiceManagerNative.asInterface方法 / 165
6.2.3　调用ServiceManagerProxy. addService方法注册服务 / 167
6.3　Client端获取服务代理 / 169
6.3.1　获取服务的BinderProxy / 170
6.3.2　构造服务的Proxy对象 / 172
6.3.3  构造服务管理者对象 / 173
6.4  Client端调用Java系统服务的方法 / 174
6.5  统一的通信接口AIDL / 177
6.5.1  AIDL实例 / 177
6.5.2  AIDL语法 / 180
6.5.3  处理自定义数据类型的传递 / 181
6.6  本章小结 / 182
第四部分　消息通信篇
第7章  线程消息通信与异步处理 / 184
7.1  什么是Looper线程 / 184
7.2  第一步：Looper线程准备阶段 / 185
7.2.1  创建Java层的Looper对象 / 186
7.2.2  创建Java层的MessageQueue对象 / 186
7.2.3  创建Native层的NativeMessage-Queue和Looper对象 / 187
7.2.4  NativeMessageQueue关联到MessageQueue / 189
7.3  第二步：创建消息处理器并发送消息 / 190
7.3.1  Handler的创建和初始化 / 190
7.3.2  Message的创建和初始化 / 191
7.3.3  消息的发送过程 / 192
7.4  第三步：Looper线程循环阶段 / 198
7.4.1  记录并获取当前线程身份信息 / 198
7.4.2  循环监听消息 / 199
7.4.3  分发消息到处理器 / 205
7.4.4  回收消息并更新消息池 / 209
7.5  异步任务类AsyncTask / 210
7.5.1  AsyncTask的实现 / 211
7.5.2  AsyncTask的执行 / 214
7.6  本章小结 / 223
第五部分　Package Manager篇
第8章  Package Manager 的机制与实现 / 226
8.1　 Package Manager体系结构 / 227
8.1.1  三层体系结构 / 227
8.1.2  三层之间的关系 / 228
8.2  PackageManagerService的启动过程 / 231
8.2.1  创建并初始化Settings对象 / 232
8.2.2  获取系统默认配置 / 236
8.2.3  启动PackageHandler / 237
8.2.4  创建data目录并初始化UserManager / 239
8.2.5  解析系统permission和feature信息 / 242
8.2.6  解析packages文件 / 245
8.2.7  dexopt优化判定 / 247
8.2.8  启动FileObserver监控APK文件的目录 / 250
8.2.9  调用scanDirLI方法扫描并安装APK包 / 252
8.2.10  更新packages文件 / 253
8.3   PackageManagerService启动过程使用的核心组件 / 254
8.3.1  Java层的Installer / 255
8.3.2  Installd中的命令 / 258
8.4  本章小结 / 260
第9章　APK的安装过程 / 261
9.1　通过scanDirLI方法安装APK / 261
9.1.1　创建PackageParser / 262
9.1.2　解析AndroidManifest.xml文件 / 263
9.1.3　过滤PackageParser.Package类型的pkg对象 / 270
9.1.4　解析和安装pkg / 274
9.2　使用adb命令安装应用程序 / 282
9.2.1　通过消息机制安装指定的APK / 283
9.2.2　调用handleStartCopy方法处理安装操作 / 286
9.2.3　调用handleReturnCode方法处理返回结果 / 290
9.3　 本章小结 / 293
第六部分　Activity Manager篇
第10章　Activity Manager的机制与实现 / 296
10.1　Activity Manager概述 / 296
10.2　ActivityManagerService在系统启动阶段的主要工作 / 297
10.3　第一阶段：启动ActivityManagerService / 299
10.3.1　启动AThread线程 / 300
10.3.2　创建ActivityThread对象 / 302
10.3.3　创建ActivityStack类 / 309
10.3.4　调用startRunning方法 / 310
10.4　第二阶段：调用setSystemProcess方法 / 310
10.4.1　查询并处理ApplicationInfo / 312
10.4.2　创建并初始化ProcessRecord / 313
10.5　第三阶段：调用install-SystemProviders方法 / 315
10.5.1　查询Content Provider / 316
10.5.2　安装Content Provider / 317
10.6　第四阶段：调用systemReady方法 / 323
10.6.1　发送ACTION_PRE_BOOT_COMPLETED广播 / 323
10.6.2　清理预启动的非persistent进程 / 325
10.6.3　读取Settings配置 / 326
10.6.4　运行Runnable回调接口 / 327
10.6.5　启动persistent应用程序和Home    / 328
10.7　本章小结 / 329
第11章　应用程序Activity的启动和调度 / 330
11.1　启动应用程序Activity时在Client端的执行流程 / 330
11.2　启动应用程序Activity时在Server端的执行流程 / 334
11.2.1　预启动 / 334
11.2.2　暂停 / 348
11.2.3　启动应用程序进程 / 356
11.2.4　加载应用程序Activity / 362
11.2.5　显示Activity / 369
11.2.6　Activity Idle状态的处理过程 / 379
11.2.7　停止源Activity / 382
11.3　本章小结 / 387
第12章　Activity Manager进程管理 / 388
12.1　LRU weight机制 / 388
12.2　OOM adj机制 / 391
12.2.1　更新OOM adj值 / 392
12.2.2　OOM adj的计算过程 / 403
12.3　Low Memory Killer机制 / 414
12.3.1　OOM adj等级和最小内存阈值 / 414
12.3.2　LM Killer机制的实现 / 417
12.4　本章小结 / 419
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android的设计与实现
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android应用开发
第1部分：开发环境概览第1章  Android操作系统概述  1.1  为什么选择Android  1.2  开放式手机联盟  1.3  Android运行环境  1.4  Android应用程序的组成部分  1.5  Android活动的生命周期  1.6  Android服务的生命周期  1.7  本书的组织结构第2章  搭建Android开发环境  2.1  搭建开发环境  2.2  “Hello Android”程序    2.2.1  目标    2.2.2  创建一个新的Android应用程序：Hello World    2.2.3  Hello World程序代码    2.2.4  运行Hello World程序第3章  使用Android开发环境  3.1  MicroJobs：本书中最主要的程序示例  3.2  Androld和社交网络  3.3  下载MJAndroid源代码  3.4  简单浏览一下MJAndroid的代码结构    3.4.1  项目的主目录    3.4.2  源代码目录    3.4.3  资源文件目录  3.5  第一步：编译和运行MicroJobs程序    3.5.1  Eclipse和ADT插件    3.5.2  加载和启动Android应用程序    3.5.3  更进一步：哪里可能会出错    3.5.4  在Android手机上运行程序  3.6  小结第4章  MJAndroid程序的初始化过程  4.1  AndroidManifest.xml文件中的初始化参数  4.2  MicroJobs.Java中的初始化代码  4.3  MicroJobs.java中的更多初始化代码  4.4  小结第5章  Android应用程序的调试  5.1  工具  5.2  EclipseJava编辑器    5.2.1  Java语言错误    5.2.2  Eclipse调试器    5.2.3  Logcat    5.2.4  Android Debug Bridge(adb)    5.2.5  DDMS：Dalvik调试监控服务    5.2.6  Traceview  5.3  小结第6章  ApiDemos示例程序  6.1  ApiDemos的清单文件  6.2  查找某个范例的源代码    6.2.1  自定义标题范例    6.2.2  Linkify范例  6.3  向ApiDemos中添加范例第7章  应用程序的签名和发布  7.1  测试程序  7.2  添加最终用户许可协议  7.3  创建并使用程序的图标和标签  7.4  程序发布前的收尾工作  7.5  程序的版本管理  7.6  获取数字签名证书和API Key    7.6.1  为自己的应用程序创建一份数字签名证书    7.6.2  在程序的调试阶段获取数字签名证书  7.7  对程序进行数字签名  7.8  重新测试一遍签过名的应用程序  7.9  在Android电子市场上发布应用程序    7.9.1  注册成为Android开发者    7.9.2  上传应用程序    第2部分：Android程序设计第8章  SQLite数据库和内容提供器  8.1  数据库    8.1.1  MicroJobsDatabase类的基本结构    8.1.2  从数据库中读取数据    8.1.3  修改数据库  8.2  内容提供器    8.2.1  NotePad简介    8.2.2  内容提供器    8.2.3  使用内容提供器第9章  定位和地图  9.1  基于定位的服务  9.2  地图  9.3  Google Maps活动  9.4  MapView和MapActivity  9.5  MapView详解    9.5.1  MapVieW和MyLocationOvetlay的初始化    9.5.2  MapActivity的暂停和继续    9.5.3  通过菜单按钮控制地图    9.5.4  通过手机上的按键控制地图  9.6  不显示地图情况下的定位    9.6.1  清单和布局文件    9.6.2  连接到定位功能模块并且获取位置更新    9.6.3  设定虚拟位置信息第10章  创建用户界面  10.1  Android图形用户界面系统架构    10.1.1  模型    10.1.2  视图    10.1.3  控制器    10.1.4  将各部分组合起来  10.2  创建图形用户界面  10.3  连接到控制器    10.3.1  模型的监听    10.3.2  监听触摸屏事件    10.3.3  监听按键事件    10.3.4  事件处理的其他方法    10.3.5  更进一步：焦点和线程  10.4  菜单第11章  常用的用户界面组件  11.1  Android常用用户界面组件    11.1.1  TextView组件和EditView组件    11.1.2  Button和ImageButton    11.1.3  Adapters接口和AdaptarViews组件    11.1.4  复选框组件，单选框组件和下拉列表组件  11.2  容器组件    11.2.1  Gallery组件和GridView组件    11.2.2  ListView容器组件和ListActivity活动    11.2.3  ScrollView容器组件    11.2.4  TabHost组件  11.3  布局    11.3.1  框架布局    11.3.2  线性布局    11.3.3  表格布局    11.3.4  绝对位置布局    11.3.5  相对位置布局第12章  二维和三维绘图  12.1  编写用户自己的组件    12.1.1  布局    12.1.2  绘制画布    12.1.3  Drawables对象    12.1.4  位图  12.2  特效    12.2.1  阴影、渐变和滤镜    12.2.2  动画    12.2.3  OpenGL绘图第13章  进程间通信  13.1  意图：简单、低成本的进程间通信    13.1.1  进程问通信中使用的意图对象    13.1.2  Activity对象和用户界面导航    13.1.3  使用意图对象的一个例子    13.1.4  通过进程间通信机制获取结果  13.2  远程方法和AIDL    13.2.1  Android接口定义语言    13.2.2  AIDL所生成的代码    13.2.3  发布接口    13.2.4  Android进程间通信和JNI的比较    13.2.5  Binder不能完成的工作    13.2.6  Binder和Linux操作系统第14章  电话操作  14.1  发起通话的简便方式    14.1.1  创建使用call方法的应用程序    14.1.2  将call方法嵌入到程序中  14.2  通过Eclipse调试器考察代码    14.2.1  创建一个Intent对象实例    14.2.2  向Intent对象中添加数据    14.2.3  发起一个通话  14.3  意外的处理  14.4  Android系统中程序级别的模块化和电话功能第15章  通话状态和Android电话类  15.1  由android.telephony包提供的功能    15.1.1  android.telephony包概述    15.1.2  应用程序的访问限制    15.1.3  监控当前通话状态的一个示例  15.2  深入Android电话功能内部    15.2.1  android.internal.telephony包中的进程间通信和AIDL    15.2.2  android.internal.telephony包的概述    15.2.3  android.internal.telephony.gsm包概述    15.2.4  深入了解Android电话模块  15.3  Android和VoIP技术
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android应用开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android 4游戏编程入门经典
第1章  Android，后起之秀	1
1.1  Android简介	1
1.2  版本分裂	3
1.3  谷歌的角色	3
1.3.1  Android开源项目	3
1.3.2  Android Market	4
1.3.3  挑战赛、设备播种计划
和谷歌I/O	4
1.4  Android的功能和体系结构	5
1.4.1  内核	6
1.4.2  运行库和Dalvik虚拟机	6
1.4.3  系统库	7
1.4.4  应用程序框架	8
1.5  软件开发工具包	8
1.6  开发人员社区	9
1.7  设备，设备，设备	9
1.7.1  硬件	9
1.7.2  设备的范围	10
1.8  所有设备之间的兼容性	15
1.9  不同的手机游戏	15
1.9.1  人手一台游戏机	16
1.9.2  随时上网	16
1.9.3  普通用户与游戏迷	17
1.9.4  市场很大，开发人员很少	17
1.10  小结	18
第2章  从Android SDK开始	19
2.1  搭建开发环境	19
2.1.1  安装JDK	20
2.1.2  安装Android SDK	20
2.1.3  安装Eclipse	21
2.1.4  安装ADT Eclipse插件	22
2.1.5  Eclipse快速浏览	23
2.1.6  一些实用的Eclipse快捷键	24
2.2  Android环境下的Hello World	25
2.2.1  创建项目	25
2.2.2  进一步分析项目	26
2.2.3  编写应用程序代码	27
2.3  运行和调试Android应用
程序	29
2.3.1  连接设备	29
2.3.2  创建一个Android虚拟
设备	29
2.3.3  运行应用程序	30
2.3.4  调试应用程序	32
2.3.5  LogCat和DDMS	34
2.3.6  使用ADB	36
2.4  小结	37
第3章  游戏开发基础	39
3.1  游戏类型	39
3.1.1  休闲游戏	40
3.1.2  益智游戏	41
3.1.3  动作和街机游戏	42
3.1.4  塔防游戏	44
3.1.5  创新	45
3.2  游戏设计：笔比代码更强大	46
3.2.1  游戏的核心机制	46
3.2.2  一个故事和一种艺术风格	47
3.2.3  画面和切换	48
3.3  代码：具体细节	52
3.3.1  应用程序和窗口管理	52
3.3.2  输入	53
3.3.3  文件I/O	56
3.3.4  音频	57
3.3.5  图形	60
3.3.6  游戏框架	69
3.4  小结	75
第4章  面向游戏开发人员的Android	77
4.1  定义一个Android应用程序：
清单文件	77
4.1.1  <manifest>元素	78
4.1.2  <application>元素	79
4.1.3  <activity>元素	80
4.1.4  <uses-permission>元素	82
4.1.5  <uses-feature>元素	83
4.1.6  <uses-sdk>元素	84
4.1.7  10个简单步骤建立Android
游戏项目	84
4.1.8  市场过滤器	86
4.1.9  定义游戏图标	87
4.2  Android API基础	87
4.2.1  创建测试项目	88
4.2.2  活动的生命周期	91
4.2.3  处理输入设备	96
4.2.4  文件处理	110
4.2.5  音频编程	116
4.2.6  播放音效	116
4.2.7  音乐流	119
4.2.8  基本图形编程	122
4.3  最佳实践	143
4.4  小结	144
第5章  Android游戏开发框架	145
5.1  制定计划	145
5.2  AndroidFileIO类	146
5.3  AndroidAudio、AndroidSound
和AndroidMusic	147
5.4  AndroidInput和Accelerometer-
Handler	152
5.4.1  AccelerometerHandler：手机
哪一面朝上	152
5.4.2  CompassHandler	153
5.4.3  Pool类：重用相当有用	154
5.4.4  KeyboardHandler	156
5.4.5  触摸处理程序	160
5.4.6  AndroidInput：优秀的
协调者	167
5.5  AndroidGraphics和
AndroidPixmap	169
5.5.1  处理不同屏幕大小和
分辨率的问题	169
5.5.2  AndroidPixmap：人物的
像素	174
5.5.3  AndroidGraphics：满足
绘图需求	174
5.5.4  AndroidFastRenderView	178
5.6  AndroidGame：合并所有
内容	180
5.7  小结	184
第6章  Mr. Nom入侵Android	185
6.1  创建资源	185
6.2  建立项目	187
6.3  MrNomGame：主要活动	187
6.3.1  资源：便捷的资源存储	188
6.3.2  设置：跟踪用户的选项设置
和高分榜	189
6.3.3  LoadingScreen：从磁盘获取
资源	191
6.4  主菜单画面	192
6.5  HelpScreen类	195
6.6  高分榜画面显示	197
6.6.1  渲染数字	198
6.6.2  画面的实现	199
6.7  抽象	201
6.7.1  抽象Mr. Nom的世界：
模型、视图、控制器	201
6.7.2  GameScreen类	211
6.8  小结	218
第7章  OpenGL ES介绍	219
7.1  OpenGL ES概述以及关注它的
原因	219
7.1.1  编程模型：一个比喻	220
7.1.2  投影	221
7.1.3  规范化设备空间和视口	223
7.1.4  矩阵	223
7.1.5  渲染管道	224
7.2  开始之前	225
7.3  GLSurfaceView：从2008年开始，
事情变得简单了	225
7.4  GLGame：实现游戏接口	228
7.5  绘制一个红色的三角形	235
7.5.1  定义视口	235
7.5.2  定义投影矩阵	235
7.5.3  指定三角形	238
7.5.4  综合示例	241
7.6  指定每个顶点的颜色	243
7.7  纹理映射：轻松地创建
壁纸	246
7.7.1  纹理坐标	247
7.7.2  上传位图	248
7.7.3  纹理过滤	249
7.7.4  释放纹理	250
7.7.5  有用的代码片段	251
7.7.6  启用纹理	251
7.7.7  综合示例	251
7.7.8  Texture类	253
7.8  索引顶点：重用是有好处的	255
7.8.1  代码整合	256
7.8.2  Vertices类	258
7.9  半透明混合处理	260
7.10  更多图元：点、线、条
和扇	263
7.11  2D变换：操作模型视图
矩阵	264
7.11.1  世界空间和模型空间	264
7.11.2  再次讨论矩阵	265
7.11.3  第一个使用平移的
示例	266
7.11.4  更多的变换	270
7.12  性能优化	273
7.12.1  测量帧率	273
7.12.2  Android 1.5平台下Hero的
奇特案例	275
7.12.3  使OpenGL ES渲染如此
慢的原因	275
7.12.4  移除不必要的状态
改变	276
7.12.5  减小纹理大小意味着需要
获取更少的像素	278
7.12.6  减少OpenGL ES/JNI方法的
调用	278
7.12.7  绑定顶点的概念	279
7.12.8  写在结束之前	282
7.13  小结	283
第8章  2D游戏编程技巧	285
8.1  写在开始	285
8.2  向量	286
8.2.1  使用向量	286
8.2.2  一点三角学的知识	288
8.2.3  实现一个向量类	289
8.2.4  一个简单的用法示例	292
8.3  2D物理定律浅析	296
8.3.1  牛顿和欧拉，永远的
好朋友	296
8.3.2  力和质量	297
8.3.3  理论上的运动	298
8.3.4  运动的实现	299
8.4  2D碰撞检测和对象表示	302
8.4.1  边界形状	303
8.4.2  构造边界形状	304
8.4.3  游戏对象的属性	306
8.4.4  宽阶段和窄阶段碰撞检测	307
8.4.5  一个详细的示例	313
8.5  2D照相机	324
8.5.1  Camera2D类	327
8.5.2  示例	328
8.6  纹理图集	329
8.7  纹理区域、精灵和批处理：
隐藏OpenGL ES	334
8.7.1  TextureRegion类	334
8.7.2  SpriteBatcher类	335
8.8  精灵动画	343
8.8.1  Animation类	344
8.8.2  示例	345
8.9  小结	348
第9章  Super Jumper：一个2D
OpenGL ES游戏	351
9.1  核心游戏机制	351
9.2  背景故事和艺术风格	352
9.3  画面和切换	352
9.4  定义游戏世界	353
9.5  创建资源	355
9.5.1  UI元素	355
9.5.2  使用点阵字体处理文本	356
9.5.3  游戏元素	358
9.5.4  用于救援的纹理图集	359
9.5.5  音乐与音效	360
9.6  实现Super Jumper	361
9.6.1  Assets类	361
9.6.2  Settings类	364
9.6.3  主活动	366
9.6.4  Font类	367
9.6.5  GLScreen	369
9.6.6  主菜单画面	369
9.6.7  帮助画面	372
9.6.8  高分画面	374
9.6.9  模拟类	377
9.6.10  游戏画面	390
9.6.11  WorldRenderer类	397
9.7  是否需要优化	401
9.8  小结	402
第10章  OpenGL ES：进入3D
世界	403
10.1  准备工作	403
10.2  3D中的顶点	404
10.2.1  Vertices3：存储3D空间
位置	404
10.2.2  示例	406
10.3  透视投影：越近则越大	409
10.4  z-buffer：化混乱为有序	411
10.4.1  完善上一个例子	412
10.4.2  混合：身后空无一物	413
10.4.3  z-buffer精度与
z-fighting	416
10.5  定义3D网格	417
10.5.1  立方体：3D中的“Hello
World”	417
10.5.2  一个示例	419
10.6  矩阵和变换	422
10.6.1  矩阵堆栈	423
10.6.2  用矩阵堆栈实现分层
系统	425
10.6.3  木箱太阳系的简单
实例	425
10.7  小结	433
第11章  3D编程技巧	435
11.1  准备工作	435
11.2  3D中的向量	436
11.3  OpenGL ES中的光照	440
11.3.1  光照的工作机制	440
11.3.2  光源	441
11.3.3  材质	442
11.3.4  OpenGL ES中如何对光照
过程进行运算：顶点
法线	442
11.3.5  实践	443
11.3.6  关于OpenGL ES中光照
应用的一些建议	456
11.4  材质变换(Mipmapping)	456
11.5  简单的照相机	460
11.5.1  第一人称照相机或欧拉
照相机	460
11.5.2  一个欧拉照相机的示例	463
11.5.3  跟随照相机	468
11.6  加载模块	470
11.6.1  Wavefront OBJ格式	470
11.6.2  OBJ加载器的实现	471
11.6.3  使用OBJ加载器	475
11.6.4  关于加载模型的一些
建议	475
11.7  3D中的一些物理知识	476
11.8  碰撞检测与3D中的对象
表达法	477
11.8.1  3D中的边界形状	477
11.8.2  边界球重叠测试	477
11.8.3  GameObject3D与Dynamic-
GameObject3D	478
11.9  小结	479
第12章  Droid Invaders游戏	481
12.1  游戏的核心机制	481
12.2  游戏的故事背景与艺术
风格	483
12.3  屏幕与场景切换	483
12.4  定义游戏世界	484
12.5  创建资源	485
12.5.1  用户界面的资源	485
12.5.2  游戏资源	486
12.5.3  音效与音乐	488
12.6  开始编写代码	488
12.7  Assets类	489
12.8  Settings类	492
12.9  主活动	493
12.10  主菜单	494
12.11  游戏设置画面	496
12.12  模拟类	499
12.12.1  Shield类	499
12.12.2  Shot类	500
12.12.3  Ship类	500
12.12.4  Invader类	502
12.12.5  World类	505
12.13  GameScreen类	510
12.14  WorldRender类	516
12.15  游戏优化	521
12.16  小结	522
第13章  发布游戏	523
13.1  关于测试	523
13.2  成为注册开发人员	524
13.3  给游戏的APK包签名	524
13.4  将游戏发布至Market	527
13.4.1  上传资源	527
13.4.2  产品详情	528
13.4.3  发布选项	528
13.4.4  发布	529
13.4.5  市场推广	529
13.5  开发人员控制台	529
13.6  小结	530
第14章  进阶内容	531
14.1  社交网络	531
14.2  位置识别	531
14.3  多玩家功能	532
14.4  OpenGL ES 2.0以及更多
内容	532
14.5  框架及引擎	532
14.6  网络资源	534
14.7  结束语	534
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android 4游戏编程入门经典
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android开发实战经典
第一部分  价格与市场
第一章  价格中的奥妙与把戏
01．PS3为何亏着本卖 /3
02．饭店为何要收开瓶费 /6
03．大卖场与供应商为何纷争不休 /8
04．宜家是做家居还是做地产的 /10
05．为何广东的油价比江西贵 /12
第二章  疯狂的波动
06．芯片价格波动为何如此剧烈 /16
07．大蒜疯狂是操纵的结果吗 /19
08．资本家养猪是圈地抢钱吗 /21
09．石油减产是因为欧佩克合谋吗 /23
10．小企业为何难抗价格风险 /25
第三章  不想垄断的竞争者不是好竞争者
11．铁矿石议价机制为何会瓦解 /30
12．俄乌斗气斗些什么 /32
13．水务交易的买家是谁 /35
14．反垄断大刀会砍出什么 /38

15．垄断是竞争的同义词 /42
第二部分  产业与创新
第四章  创新，危险而伟大的游戏
16．UPS做金融凭什么 /48
17．耐克赞助青少年体育用意何在 /50
18．谷歌的创新机制有何不同 /52
19．山寨机为何屡打不倒 /55
20．赌球会鼓励还是遏制假球 /56
第五章  这年头队伍不好带啊
21．企业与团队，谁是铁打的营盘 /59
22．飞行员跳槽为啥这么难 /62
23．高管薪酬为啥这么高 /64
24．衰退期大裁员都是因为生意不好吗 /66
25．为何用工荒都出现在节后 /68
第六章  企业文化是把双刃剑
26．瓦格纳：忠诚者的悲剧 /72
27．电气业巨头为何都在重组 /74
28．摩托罗拉分拆：迟到的转型 /76
29．港企交班潮蕴含着哪些机遇 /78
30．药业巨头为何纷纷兼并 /79
第七章  失败者常常不知道自己是怎么死的
31．报业失去了什么 /83
32．丑闻迭出的奶业出路何在 /85
33．诺基亚该往哪里跳 /87
34．淘宝，集市还是市场 /89
35．内地游客如何改变港澳旅游业 /91
第三部分  行为与心理
第八章  我们消费的果真是物质吗
36．为何高档香烟软盒比硬盒贵 /98
37．时尚，另一种宗教 /101
38．捡到支象牙筷，配穷个人家 /102
39．为何年轻人都爱往大城市里挤 /106
第九章  饕餮经济学
40．为何美国穷人比富人胖 /110
41．肚皮收租法 /112
42．生存套餐与依附关系 /113
43．吸血蝙蝠与猎获物分享 /115
44．排他性互惠圈与身份符号 /117
45．互惠圈如何塑造人性 /119
第十章  婚姻与家庭：古老的博弈
46．择偶困难是因为性别失衡吗 /124
47．《非诚勿扰》“扰”了什么 /126
48．限制亲子鉴定会给婚姻带来什么影响 /128
49．同性恋会因为宽容而变得更普遍吗 /130
50．婚姻法新解释对婚姻关系有何影响 /132
第十一章  有时候你不知道保持理智是否明智
51．为何世界杯比冠军杯吸引更多观众 /136
52．韩国传教士为何这般狂热 /138
53．富士康工人接连跳楼是巧合吗 /140
54．圣元事件中的传播学 /143
55．网络会把我们带回乡村时代吗 /144
第四部分  制度与政策
第十二章  财产权是行为边界
56．禁售是不是保护濒危动物的好办法 /150
57．海洋也要“私有化” /152
58．小贩有占道摆摊的权利吗 /154
59．治堵：限行，牌照拍卖，还是拥堵费 /157
60．教室占座能构成财产权吗 /159
第十三章  规章条例常常是麻烦的起点
61．医院号贩子挣的是什么钱 /166
62．限制银行收费的成本将由谁负担 /168
63．钓鱼执法的机会来自哪里 /170
64．股东参与权太大还是太小 /173
65．医疗广告为何充斥着欺诈和蒙骗 /175
第十四章  当政府之手介入市场
66．收储能不能稳定市场 /180
67．是谁吹大了新能源泡沫 /182
68．行业工资标准意味着什么 /184
69．三控成本能否降低房价 /186
70．税收能调节收入差距吗 /188
第十五章  成功的变革实在不多见
71．英超腾飞的秘诀何在 /192
72．为何市场化改革常常伴随着通胀 /194
73．为何韩国总能率先走出危机 /196
74．南非是下一条龙吗 /198
75．欧盟统一红利还能吃多久 /200
第五部分  宏观经济
第十六章  吸血鬼如何造福社会
76．储蓄率为何居高不下 /206
77．重返金本位是个馊主意 /209
78．大刀向衍生品头上砍去 /212
79．金融对赌价值何在 /215
80．衍生品如何推动风险分工 /217
第十七章  不一样的泡沫
81．初级品涨价是因为短缺还是恐慌 /222
82．都在喊通胀，为何美国物价却没涨 /224
83．西进运动与地产泡沫 /226
84．迪拜，另一种泡沫 /229
85．博傻游戏伤害的是谁 /231
第十八章  人口，随时需要牢记的变量
86．考生减少意味着什么 /236
87．城市化下半场有何不同 /238
88．放松计划生育能挽回人口红利吗 /240
89．乡村注定会走向没落吗 /243
90．乡村复兴之路在何方 /244
第六部分  思想背景
第十九章  我眼中的世界
91．实在与经验 /250
92．决定论与自由意志 /252
93．范式与硬核：什么是科学 /255
94．结构与层次 /258
95．理想与路径：谬误的四个层次 /261
第二十章  我眼中的经济学
96．自私的皮球：论经济学的基本假设 /266
97．利率变动：一个基于流动性的考察 /273
98．谁做老板？这是个流动性问题 /277
99．“市场失灵”是什么意思 /279
100．经济学：治国术、伦理学还是经验科学 /281
后记


X

IX
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android开发实战经典
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android编程权威指南（第2版）
第1章 　Android开发初体验
1.1　应用开发基础
1.2　创建Android项目
1.3　Android Studio使用导航
1.4　用户界面设计
1.4.1　视图层级结构
1.4.2　组件属性
1.4.3　创建字符串资源
1.4.4　预览界面布局
1.5　从布局XML到视图对象
1.6　组件的实际应用
1.6.1　引用组件
1.6.2　设置监听器
1.7　创建提示消息
1.8　使用模拟器运行应用
1.9　深入学习：Android编译过程
第2章 　Android与MVC设计模式
2.1 　创建新类
2.2 　Android与MVC设计模式
2.3 　更新视图层
2.4 　更新控制层
2.5 　在设备上运行应用
2.6 　添加图标资源
2.7 　关于挑战练习
2.8 　挑战练习：为TextView添加监听器
2.9 　挑战练习：添加后退按钮
2.10 　挑战练习：从按钮到图标按钮
第3章 　Activity的生命周期
3.1 　日志跟踪理解Activity生命周期
3.2 　设备旋转与Activity生命周期
3.3 　设备旋转前保存数据
3.4 　再探Activity生命周期
3.5 　深入学习：测试onSaveInstance-State(Bundle)方法
3.6 　深入学习：日志记录的级别与方法
第4章 　Android应用的调试
4.1 　异常与栈跟踪
4.2 　Android特有的调试工具
第5章 　第二个activity
5.1 　创建第二个activity
5.2 　启动activity
5.3 　activity间的数据传递
5.4 　activity的使用与管理
5.5 　挑战练习
第6章 　Android SDK版本与兼容
6.1 　Android SDK版本
6.2 　Android编程与兼容性问题
6.3 　使用Android开发者文档
6.4 　挑战练习：报告编译版本
第7章 　UI fragment与fragment管理器
7.1 　UI设计的灵活性需求
7.2 　fragment的引入
7.3 　着手开发CriminalIntent
7.4 　托管UI fragment
7.5 　创建UI fragment
7.6 　添加UI fragment到Fragment-Manager
7.7 　采用fragment的应用架构
7.8 　深入学习：为什么应优先使用支持库版fragment
7.9 　深入学习：使用操作系统内置版fragment
第8章 　使用布局与组件创建用户界面
8.1 　升级Crime类
8.2 　更新布局
8.3 　生成并使用组件
8.4 　深入探讨XML布局属性
8.5 　使用图形布局工具
8.6 　挑战练习：日期格式化
第9章 　使用RecyclerView显示列表
9.1 　升级CriminalIntent应用的模型层
9.2 　使用抽象activity托管fragment
9.3 　RecyclerView、Adapter和ViewHolder
9.4 　定制列表项
9.5 　响应点击
9.6 　深入学习：ListView和GridView
9.7 　深入学习：单例
第10章 　使用fragment argument
10.1 　从fragment中启动activity
10.2 　fragment argument
10.3 　刷新显示列表项
10.4 　通过fragment获取返回结果
10.5 　挑战练习：实现高效的RecyclerView刷新
10.6 　深入学习：为何要用fragment argument
第11章 　使用ViewPager
11.1 　创建CrimePagerActivity
11.2 　FragmentStatePagerAdapter与FragmentPagerAdapter
11.3 　深入学习：ViewPager的工作原理
11.4 　深入学习：以代码的方式创建布局
第12章 　对话框
12.1 　使用AppCompat兼容库
12.2 　创建DialogFragment
12.3 　fragment间的数据传递
12.4 　挑战练习：更多对话框
12.5 　挑战练习：按设备类型展现DialogFragment
第13章 　工具栏
13.1 　AppCompat
13.2 　工具栏菜单
13.3 　实现层级式导航
13.4 　可选菜单项
13.5 　深入学习：工具栏与操作栏
13.6 　挑战练习：删除crime记录
13.7 　挑战练习：优化字符串资源显示
13.8 　挑战练习：用于RecyclerView的空视图
第14章 　SQLite数据库
14.1 　定义Schema
14.2 　创建初始数据库
14.3 　修改CrimeLab类
14.4 　写入数据库
14.5 　读取数据库
14.6 　深入学习：数据库高级主题介绍
14.7 　深入学习：应用上下文
14.8 　挑战练习：删除Crime记录
第15章 　隐式intent
15.1 　添加按钮组件
15.2 　添加嫌疑人信息至模型层
15.3 　使用格式化字符串
15.4 　使用隐式intent
15.5 　挑战练习：ShareCompat
15.6 　挑战练习：又一个隐式intent
第16章 　使用intent拍照
16.1 　布置照片
16.2 　外部存储
16.3 　使用相机intent
16.4 　缩放和显示位图
16.5 　功能声明
16.6 　深入学习：使用include标签
16.7 　挑战练习：优化照片显示
16.8 　挑战练习：优化缩略图加载
第17章 　Master-Detail用户界面
17.1 　增加布局灵活性
17.2 　Activity：fragment的托管者
17.3 　深入学习：设备屏幕尺寸的确定
第18章 　Assets
18.1 　为何使用assets
18.2 　创建BeatBox应用
18.3 　导入assets
18.4 　处理assets
18.5 　使用Assets
18.6 　访问Assets
18.7 　深入学习：什么是non-assets
第19章 　使用SoundPool播放音频
19.1 　创建SoundPool
19.2 　加载音频文件
19.3 　播放音频
19.4 　释放音频
19.5 　设备旋转和对象保存
19.6 　深入学习：是否要保留
19.7 　深入学习：设备旋转处理再探
第20章 　样式与主题
20.1 　颜色资源
20.2 　样式
20.3 　主题
20.4 　添加主题颜色
20.5 　覆盖主题属性
20.6 　修改按钮属性
20.7 　深入学习：样式继承拾遗
20.8 　深入学习：引用主题属性
20.9 　挑战练习：创建多版本主题
第21章 　XML drawable
21.1 　统一按钮样式
21.2 　shape drawable
21.3 　state list drawable
21.4 　layer list drawable
21.5 　深入学习：为什么要用XML drawable
21.6 　深入学习：使用9-patch图像
21.7 　深入学习：使用Mipmap图像
第22章 　深入学习intent和任务
22.1 　创建NerdLauncher项目
22.2 　解析隐式intent
22.3 　在运行时创建显式intent
22.4 　任务与后退栈
22.5 　使用NerdLauncher应用作为设备主屏幕
22.6 　挑战练习：应用图标
22.7 　深入学习：进程与任务
22.8 　深入学习：并发文档
第23章 　HTTP与后台任务
23.1 　创建PhotoGallery应用
23.2 　网络连接基本
23.3 　使用AsyncTask在后台线程上运行代码
23.4 　线程与主线程
23.5 　从Flickr获取JSON数据
23.6 　从AsyncTask回到主线程
23.7 　清理AsyncTask
23.8 　深入学习：AsyncTask再探
23.9 　深入学习：AsyncTask的替代方案
23.10 　挑战练习：Gson
23.11 　挑战练习：分页
23.12 　挑战练习：动态调整网格列
第24章 　Looper、Handler和HandlerThread
24.1 　配置RecyclerView以显示图片
24.2 　批量下载缩略图
24.3 　与主线程通信
24.4 　创建并启动后台线程
24.5 　Message与message handler
24.6 　深入学习：AsyncTask与线程
24.7 　挑战练习：预加载以及缓存
24.8 　深入学习：解决图片下载问题
第25章 　搜索
25.1 　搜索Flickr网站
25.2 　使用SearchView
25.3 　使用shared preferences实现轻量级数据存储
25.4 　优化应用
25.5 　挑战练习：深度优化PhotoGallery应用
第26章 　后台服务
26.1 　创建IntentService
26.2 　服务的作用
26.3 　查找最新返回结果
26.4 　使用AlarmManager延迟运行服务
26.5 　控制定时器
26.6 　通知信息
26.7 　挑战练习：可穿戴设备上的通知
26.8 　深入学习：服务细节内容
26.9 　深入学习：JobScheduler和JobService
26.10 　深入学习：Sync Adapter
26.11 　挑战练习：在Lollipop设备上使用JobService
第27章 　broadcast intent
27.1 　一般intent和broadcast intent
27.2 　接收系统broadcast：重启后唤醒
27.3 　过滤前台通知消息
27.4 　receiver与长时运行任务
27.5 　深入学习：本地事件
27.6 　深入学习：检测fragment的状态
第28章 　网页浏览
28.1 　最后一段Flickr数据
28.2 　简单方式：隐式intent
28.3 　较难方式：使用WebView
28.4 　处理WebView的设备旋转问题
28.5 　深入学习：注入JavaScript对象
28.6 　深入学习：KitKat的WebView
28.7 　挑战练习：使用后退键浏览历史网页
28.8 　挑战练习：非HTTP链接支持
第29章 　定制视图与触摸事件
29.1 　创建DragAndDraw项目
29.2 　创建定制视图
29.3 　处理触摸事件
29.4 　onDraw(...)方法内的图形绘制
29.5 　挑战练习：设备旋转问题
29.6 　挑战练习：旋转矩形框
第30章 　属性动画
30.1 　建立场景
30.2 　简单属性动画
30.3 　播放多个动画
30.4 　深入学习：其他动画API
30.5 　挑战练习
第31章 　地理位置和Play服务
31.1 　地理位置和定位类库
31.2 　创建Locatr项目
31.3 　Play服务和模拟器
31.4 　创建Locatr应用
31.5 　配置Google Play服务
31.6 　使用Google Play服务
31.7 　基于地理位置的Flickr搜索
31.8 　获取定位数据
31.9 　寻找并显示图片
31.10 　挑战练习：进度指示器
第32章 　使用地图
32.1 　导入Play地图服务库
32.2 　Android上的地图服务
32.3 　地图API设置
32.4 　创建地图
32.5 　获取更多地理位置数据
32.6 　使用地图
32.7 　深入学习：团队开发和API key
第33章 　material design
33.1 　material surface
33.2 　动画工具
33.3 　新的视图组件
33.4 　深入学习material design
第34章 　编后语
34.1 　终极挑战
34.2 　关于我们
34.3 　致谢
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android编程权威指南（第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android 开发范例代码大全（第2版）
1章  Android入门	1
1.1  Android简介	1
1.2  Android的发展史	2
1.3  Android架构	4
1.4  应用程序架构	7
1.4.1  组件	7
1.4.2  资源	25
1.4.3  Manifest文件	33
1.4.4  应用程序包	36
1.4.5  安装Android SDK	36
1.4.6  安装Android平台	39
1.4.7  创建Android虚拟设备	42
1.4.8  启动AVD	44
1.4.9  Univerter简介	48
1.4.10  创建Univerter	50
1.4.11  安装和运行Univerter	52
1.4.12  准备Univerter在Google Play
上发布	55
1.4.13  移植到Eclipse	60
1.4.14  用Eclipse创建和运行
Univerter	63
1.5  小结	66
第2章  用户界面范例	67
2.1  自定义窗口	67
2.1.1  问题	67
2.1.2  解决方案	67
2.1.3  实现机制	67
2.2  创建并显示视图	77
2.2.1  问题	77
2.2.2  解决方案	77
2.2.3  实现机制	78
2.3  监控单击动作	79
2.3.1  问题	79
2.3.2  解决方案	80
2.3.3  实现机制	80
2.4  适用于多种屏幕分辨率的
图形资源	81
2.4.1  问题	81
2.4.2  解决方案	81
2.4.3  实现机制	82
2.5  锁定Activity方向	83
2.5.1  问题	83
2.5.2  解决方案	83
2.5.3  实现机制	83
2.6  动态方向锁定	84
2.6.1  问题	84
2.6.2  解决方案	84
2.6.3  实现机制	84
2.7  手动处理旋转	86
2.7.1  问题	86
2.7.2  解决方案	86
2.7.3  实现机制	87
2.8  创建弹出菜单动作	88
2.8.1  问题	88
2.8.2  解决方案	88
2.8.3  实现机制	88
2.9  显示一个用户对话框	93
2.9.1  问题	93
2.9.2  解决方案	93
2.9.3  实现机制	94
2.10  自定义选项菜单	98
2.10.1  问题	98
2.10.2  解决方案	98
2.10.3  实现机制	98
2.11  自定义返回按键	101
2.11.1  问题	101
2.11.2  解决方案	101
2.11.3  实现机制	101
2.12  模拟Home按键	104
2.12.1  问题	104
2.12.2  解决方案	104
2.12.3  实现机制	104
2.13  监控TextView的变动	105
2.13.1  问题	105
2.13.2  解决方案	105
2.13.3  实现机制	105
2.14  自动滚动的TextView	107
2.14.1  问题	107
2.14.2  解决方案	108
2.14.3  实现机制	108
2.15  动画视图	109
2.15.1  问题	109
2.15.2  解决方案	109
2.15.3  实现机制	109
2.16  布局变化时的动画	119
2.16.1  问题	119
2.16.2  解决方案	119
2.16.3  实现机制	120
2.17  用Drawable做背景	122
2.17.1  问题	122
2.17.2  解决方案	123
2.17.3  实现机制	123
2.18  创建自定义状态的Drawable	128
2.18.1  问题	128
2.18.2  解决方案	128
2.18.3  实现机制	128
2.19  将遮罩应用到图片	130
2.19.1  问题	130
2.19.2  解决方案	130
2.19.3  实现机制	130
2.20  创建持久的对话框	134
2.20.1  问题	134
2.20.2  解决方案	134
2.20.3  实现机制	134
2.21  实现针对具体场景的布局	136
2.21.1  问题	136
2.21.2  解决方案	136
2.21.3  实现机制	136
2.22  自定义键盘动作	143
2.22.1  问题	143
2.22.2  解决方案	144
2.22.3  实现机制	144
2.23  隐藏软键盘	146
2.23.1  问题	146
2.23.2  解决方案	146
2.23.3  实现机制	147
2.24  自定义AdapterView的
空视图	147
2.24.1  问题	147
2.24.2  解决方案	147
2.24.3  实现机制	147
2.25  自定义ListView行	149
2.25.1  问题	149
2.25.2  解决方案	149
2.25.3  实现机制	149
2.26  制作ListView的节头部	153
2.26.1  问题	153
2.26.2  解决方案	153
2.26.3  实现机制	153
2.27  创建组合控件	156
2.27.1  问题	156
2.27.2  解决方案	156
2.27.3  实现机制	157
2.28  处理复杂的单击事件	160
2.28.1  问题	160
2.28.2  解决方案	160
2.28.3  实现机制	161
2.29  转发触摸事件	177
2.29.1  问题	177
2.29.2  解决方案	177
2.29.3  实现机制	177
2.30  创建拖放视图	181
2.30.1  问题	181
2.30.2  解决方案	181
2.30.3  实现机制	182
2.31  自定义过渡动画	188
2.31.1  问题	188
2.31.2  解决方案	188
2.31.3  实现机制	189
2.32  创建视图变换	198
2.32.1  问题	198
2.32.2  解决方案	198
2.32.3  实现机制	198
2.33  视图之间滑动	204
2.33.1  问题	204
2.33.2  解决方案	204
2.33.3  实现机制	204
2.34  创建模块化接口	214
2.34.1  问题	214
2.34.2  解决方案	214
2.34.3  实现机制	214
2.35  高性能绘制	223
2.35.1  问题	223
2.35.2  解决方案	224
2.35.3  实现机制	224
2.36  实用工具推荐：Hierarchy
Viewer和Lint	234
2.37  Hierarchy Viewer	234
2.38  浏览View Hierarchy窗口	236
2.39  Tree View中的单个视图	238
2.40  使用View Hierarchy进行
调试	238
2.41  浏览Pixel Perfect窗口	239
2.42  使用Pixel Perfect Overlays	241
2.43  Lint	241
2.44  运行Lint	242
2.45  小结	245
第3章  通信和联网	247
3.1  显示Web信息	247
3.1.1  问题	247
3.1.2  解决方案	247
3.1.3  实现机制	247
3.2  拦截WebView事件	251
3.2.1  问题	251
3.2.2  解决方案	251
3.2.3  实现机制	251
3.3  访问带JavaScript的WebView	253
3.3.1  问题	253
3.3.2  解决方案	253
3.3.3  实现机制	253
3.4  下载一个图片文件	255
3.4.1  问题	255
3.4.2  解决方案	256
3.4.3  实现机制	256
3.5  完全在后台下载	259
3.5.1  问题	259
3.5.2  解决方案	259
3.5.3  实现机制	259
3.6  访问REST API	262
3.6.1  问题	262
3.6.2  解决方案	262
3.6.3  实现机制	263
3.7  解析JSON	286
3.7.1  问题	286
3.7.2  解决方案	286
3.7.3  实现机制	286
3.8  解析XML	289
3.8.1  问题	289
3.8.2  解决方案	289
3.8.3  实现机制	289
3.9  接收短信	299
3.9.1  问题	299
3.9.2  解决方案	299
3.9.3  实现机制	299
3.10  发送短信	300
3.10.1  问题	300
3.10.2  解决方案	301
3.10.3  实现机制	301
3.11  蓝牙通信	303
3.11.1  问题	303
3.11.2  解决方案	303
3.11.3  实现机制	303
3.12  查询网络连接状态	312
3.12.1  问题	312
3.12.2  解决方案	312
3.12.3  实现机制	312
3.13  使用NFC传输数据	314
3.13.1  问题	314
3.13.2  解决方案	314
3.13.3  实现机制	314
3.14  USB连接	321
3.14.1  问题	321
3.14.2  解决方案	321
3.14.3  实现机制	322
3.15  小结	330
第4章  实现设备硬件交互与
媒体交互	331
4.1  整合设备位置	331
4.1.1  问题	331
4.1.2  解决方案	331
4.1.3  实现机制	332
4.2  地图位置	335
4.2.1  问题	335
4.2.2  解决方案	335
4.2.3  实现机制	336
4.3  在地图上标记位置	339
4.3.1  问题	339
4.3.2  解决方案	339
4.3.3  实现机制	339
4.4  拍摄照片和视频	344
4.4.1  问题	344
4.4.2  解决方案	344
4.4.3  实现机制	344
4.5  自定义摄像头覆盖层	349
4.5.1  问题	349
4.5.2  解决方案	349
4.5.3  实现机制	349
4.6  录制音频	356
4.6.1  问题	356
4.6.2  解决方案	356
4.6.3  实现机制	356
4.7  自定义视频采集	358
4.7.1  问题	358
4.7.2  解决方案	358
4.7.3  实现机制	358
输出格式方向	362
4.8  添加语音识别	362
4.8.1  问题	362
4.8.2  解决方案	362
4.8.3  实现机制	363
4.9  播放音频/视频	365
4.9.1  问题	365
4.9.2  解决方案	365
4.9.3  实现机制	365
4.10  播放音效	373
4.10.1  问题	373
4.10.2  解决方案	373
4.10.3  实现机制	373
4.11  创建倾斜监控器	376
4.11.1  问题	376
4.11.2  解决方案	376
4.11.3  实现机制	376
4.12  监控罗盘的方向	379
4.12.1  问题	379
4.12.2  解决方案	379
4.12.3  实现机制	380
4.13  在媒体内容中获取元数据	383
4.13.1  问题	383
4.13.2  解决方案	383
4.13.3  实现机制	383
4.14  实用工具推荐：
Sensor Simulator	386
4.15  获得Sensor Simulator	387
4.16  启动Sensor Simulator Settings
和Sensor Simulator	387
4.17  在自己的应用程序中访问
Sensor Simulator	391
4.18  小结	392
第5章  数据持久化	393
5.1  制作设置界面	393
5.1.1  问题	393
5.1.2  解决方案	393
5.1.3  实现机制	393
5.2  简单数据存储	398
5.2.1  问题	398
5.2.2  解决方案	399
5.2.3  实现机制	399
5.3  读写文件	403
5.3.1  问题	403
5.3.2  解决方案	403
5.3.3  实现机制	404
5.4  以资源的形式使用文件	409
5.4.1  问题	409
5.4.2  解决方案	409
5.4.3  实现机制	409
5.5  管理数据库	412
5.5.1  问题	412
5.5.2  解决方案	412
5.5.3  实现机制	412
5.6  查询数据库	417
5.6.1  问题	417
5.6.2  解决方案	417
5.6.3  实现机制	418
5.7  备份数据	419
5.7.1  问题	419
5.7.2  解决方案	419
5.7.3  实现机制	419
5.8  分享数据库	423
5.8.1  问题	423
5.8.2  解决方案	424
5.8.3  实现机制	424
5.9  分享SharedPreference	430
5.9.1  问题	430
5.9.2  解决方案	430
5.9.3  实现机制	431
5.10  分享其他数据	440
5.10.1  问题	440
5.10.2  解决方案	440
5.10.3  实现机制	440
5.11  实用工具推荐：SQLite3	446
5.12  Univerter和SQLite3	448
5.12.1  创建数据库	450
5.12.2  扩展Category和
Conversion类	451
5.12.3  DBHelper类简介	453
5.12.4  扩展Univerter类	457
5.12.5  运行改进后的Univerter
应用程序	458
5.13  小结	459
第6章  与系统交互	461
6.1  后台通知	461
6.1.1  问题	461
6.1.2  解决方案	461
6.1.3  实现机制	461
6.2  创建定时和周期任务	469
6.2.1  问题	469
6.2.2  解决方案	469
6.2.3  实现机制	469
6.3  定时执行周期任务	470
6.3.1  问题	470
6.3.2  解决方案	471
6.3.3  实现机制	471
6.4  创建粘性操作	474
6.4.1  问题	474
6.4.2  解决方案	474
6.4.3  实现机制	475
6.5  长时间运行的后台操作	479
6.5.1  问题	479
6.5.2  解决方案	479
6.5.3  实现机制	480
6.6  启动其他应用程序	485
6.6.1  问题	485
6.6.2  解决方案	485
6.6.3  实现机制	486
6.7  启动系统应用程序	489
6.7.1  问题	489
6.7.2  解决方案	489
6.7.3  实现机制	489
6.8  让其他应用程序启动你的
应用程序	493
6.8.1  问题	493
6.8.2  解决方案	494
6.8.3  实现机制	494
6.9  与联系人交互	496
6.9.1  问题	496
6.9.2  解决方案	496
6.9.3  实现机制	496
6.10  设备媒体文件选择器	503
6.10.1  问题	503
6.10.2  解决方案	503
6.10.3  实现机制	503
6.11  保存到MediaStore	505
6.11.1  问题	505
6.11.2  解决方案	505
6.11.3  实现机制	505
6.12  与日历的交互	508
6.12.1  问题	508
6.12.2  解决方案	508
6.12.3  实现机制	508
6.13  执行日志代码	514
6.13.1  问题	514
6.13.2  解决方案	515
6.13.3  实现机制	515
6.14  创建后台工作线程	517
6.14.1  问题	517
6.14.2  解决方案	517
6.14.3  实现机制	517
6.15  自定义任务栈	522
6.15.1  问题	522
6.15.2  解决方案	522
6.15.3  实现机制	522
6.16  实现APPWidget	529
6.16.1  问题	529
6.16.2  解决方案	529
6.16.3  实现机制	530
6.17  小结	550
第7章  使用库	551
7.1  创建Java库JAR	551
7.1.1  问题	551
7.1.2  解决方案	551
7.1.3  实现机制	552
7.2  使用Java库JAR	554
7.2.1  问题	554
7.2.2  解决方案	554
7.2.3  实现机制	554
7.3  创建Android库项目	557
7.3.1  问题	557
7.3.2  解决方案	557
7.3.3  实现机制	557
7.4  使用Android库项目	561
7.4.1  问题	561
7.4.2  解决方案	561
7.4.3  实现机制	561
7.5  绘图	565
7.5.1  问题	565
7.5.2  解决方案	565
7.5.3  实现机制	565
7.6  消息推送实战	577
7.6.1  问题	577
7.6.2  解决方案	577
7.6.3  实现机制	578
7.7  使用Google的支持包	585
7.7.1  问题	585
7.7.2  解决方案	585
7.7.3  实现机制	587
7.8  小结	590
第8章  使用Android NDK和
Renderscript	591
8.1  Android NDK	591
8.1.1  安装NDK	592
8.1.2  浏览NDK	595
8.1.3  来自NDK的问候	596
8.1.4  NDK示例	602
8.2  发现本地Activity	604
8.2.1  问题	604
8.2.2  解决方案	604
8.2.3  实现机制	605
8.3  开发Low-Level本地
Activity	605
8.3.1  问题	605
8.3.2  解决方案	605
8.3.3  实现机制	607
8.4  开发High-Level的本地
Activity	615
8.4.1  问题	615
8.4.2  解决方案	615
8.4.3  实现机制	616
8.5  Renderscript	621
8.5.1  浏览Renderscript架构	622
8.5.2  使用Renderscript对图像
进行灰度化处理	624
8.6  了解更多关于Renderscript的
知识	631
8.6.1  问题	631
8.6.2  解决方案	632
8.6.3  实现机制	632
8.7  小结	635
附录A  Android的脚本层	637
A.1  安装SL4A	637
A.2  浏览SL4A	638
A.2.1  添加Shell脚本	639
A.2.2  访问Linux Shell	641
A.3  安装Python解释器	641
A.4  编写Python脚本	644
附录B  Android工具一览	647
B.1  SDK工具	647
B.1.1  android	647
B.1.2  apkbuilder	652
B.1.3  ddms	652
B.1.4  dmtracedump	652
B.1.5  draw9patch	653
B.1.6  emulator	653
B.1.7  etc1tool	658
B.1.8  hierarchyviewer	658
B.1.9  hprof-conv	659
B.1.10  lint	659
B.1.11  mksdcard	660
B.1.12  monitor	661
B.1.13  monkeyrunner	661
B.1.14  sqlite3	662
B.1.15  systrace	663
B.1.16  traceview	665
B.1.17  OpenGL ES的Tracer
工具	665
B.1.18  zipalign	665
B.2  平台工具	666
B.2.1  aapt	666
B.2.2  adb	667
B.2.3  aidl	668
B.2.4  dexdump	668
B.2.5  dx	669
B.2.6  fastboot	669
B.2.7  llvm-rs-cc	670
附录C  应用程序设计指南	673
C.1  设计经过滤的应用程序	673
C.1.1  问题	673
C.1.2  解决方案	673
C.2  设计高性能的应用程序	675
C.2.1  问题	675
C.2.2  解决方案	675
C.3  设计快速响应的应用程序	676
C.3.1  问题	676
C.3.2  解决方案	677
C.4  设计无缝衔接的应用程序	677
C.4.1  问题	677
C.4.2  解决方案	678
C.5  设计安全的应用程序	679
C.5.1  问题	679
C.5.2  解决方案	679
附录D  Univerter的结构	681
D.1  源代码	681
D.1.1  Converter接口	681
D.1.2  Conversion类	682
D.1.3  Category类	683
D.1.4  Univerter类	685
D.1.5  Univerter中的变量	686
D.1.6  Univerter的方法	688
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android 开发范例代码大全（第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通Android
第1章 　Android计算平台简介　　1
1.1 　面向新PC的全新平台　　1
1.2 　Android的历史　　2
1.3 　Dalvik VM剖析　　4
1.4 　理解Android软件栈　　5
1.5 　使用Android SDK开发最终用户应用程序　　6
1.5.1 　Android模拟器　　6
1.5.2 　Android UI　　7
1.5.3 　Android基础组件　　7
1.5.4 　高级UI概念　　8
1.5.5 　Android Service组件　　10
1.5.6 　Android媒体和电话组件　　10
1.5.7 　Android Java包　　11
1.6 　利用Android源代码　　14
1.6.1 　在线浏览Android源代码　　14
1.6.2 　使用Git下载Android源代码　　15
1.7 　本书的示例项目　　16
1.8 　小结　　16
第2章 　设置开发环境　　17
2.1 　设置环境　　17
2.1.1 　下载JDK 6　　18
2.1.2 　下载Eclipse 3.6　　19
2.1.3 　下载Android SDK　　19
2.1.4 　命令行窗口　　20
2.1.5 　安装ADT　　21
2.2 　了解基本组件　　23
2.2.1 　View　　23
2.2.2 　Activity　　23
2.2.3 　Fragment　　24
2.2.4 　Intent　　24
2.2.5 　ContentProvider　　24
2.2.6 　Service　　24
2.2.7 　AndroidManifest.xml　　24
2.2.8 　AVD　　25
2.3 　Hello World!　　25
2.4 　AVD　　29
2.5 　在真实设备上运行　　30
2.6 　剖析Android应用程序的结构　　31
2.7 　了解应用程序生命周期　　33
2.8 　简单调试　　35
2.9 　参考资料　　37
2.10 　小结　　37
2.11 　面试问题　　37
第3章 　使用Android资源　　39
3.1 　资源　　39
3.1.1 　字符串资源　　39
3.1.2 　布局资源　　41
3.1.3 　资源引用语法　　43
3.1.4 　定义资源ID供以后使用　　44
3.1.5 　已编译和未编译的Android资源　　45
3.2 　Android关键资源　　46
3.3 　使用任意XML资源文件　　54
3.4 　使用原始资源　　55
3.5 　使用资产　　56
3.6 　了解资源目录结构　　56
3.7 　资源和配置更改　　56
3.8 　参考资料URL　　59
3.9 　小结　　60
3.10 　面试问题　　60
第4章 　ContentProvider　　62
4.1 　探索Android内置的ContentProvider　　63
4.1.1 　在模拟器和可用设备上利用数据库　　63
4.1.2 　快速了解SQLite　　66
4.2 　ContentProvider的架构　　66
4.2.1 　Android内容URI的结构　　68
4.2.2 　Android MIME类型的结构　　68
4.2.3 　使用URI读取数据　　70
4.2.4 　使用游标　　71
4.2.5 　使用where子句　　72
4.2.6 　插入记录　　74
4.2.7 　将文件添加到ContentProvider中　　75
4.2.8 　更新和删除　　76
4.3 　实现ContentProvider　　76
4.3.1 　计划数据库　　76
4.3.2 　扩展ContentProvider　　78
4.3.3 　履行MIME类型契约　　83
4.3.4 　实现query方法　　83
4.3.5 　实现insert方法　　83
4.3.6 　实现update方法　　84
4.3.7 　实现delete方法　　84
4.3.8 　使用UriMatcher来解析URI　　84
4.3.9 　使用投影映射　　85
4.3.10 　注册提供程序　　86
4.4 　练习图书提供程序　　86
4.4.1 　添加图书　　86
4.4.2 　删除图书　　87
4.4.3 　获取图书数量　　87
4.4.4 　显示图书列表　　87
4.5 　资源　　88
4.6 　小结　　89
4.7 　面试问题　　89
第5章 　Intent　　90
5.1 　Android Intent基础知识　　90
5.2 　Android中可用的Intent　　91
5.3 　Intent的组成　　93
5.3.1 　Intent和数据URI　　93
5.3.2 　一般操作　　94
5.3.3 　使用extra信息　　95
5.3.4 　使用组件直接调用活动　　96
5.3.5 　Intent类别　　97
5.3.6 　将Intent解析为组件的规则　　99
5.4 　练习使用ACTION_PICK　　101
5.5 　练习使用GET_CONTENT操作　　103
5.6 　挂起的Intent　　104
5.7 　资源　　105
5.8 　小结　　106
5.9 　面试问题　　106
第6章 　构建用户界面和使用控件　　107
6.1 　Android中的UI开发　　107
6.1.1 　完全利用代码来构建UI　　108
6.1.2 　完全使用XML构建UI　　110
6.1.3 　使用XML结合代码构建UI　　111
6.2 　Android中的常见控件　　113
6.2.1 　文本控件　　113
6.2.2 　按钮控件　　116
6.2.3 　ImageView控件　　123
6.2.4 　日期和时间控件　　124
6.2.5 　MapView控件　　127
6.3 　适配器　　127
6.3.1 　SimpleCursorAdapter　　128
6.3.2 　了解ArrayAdapter　　129
6.4 　结合使用适配器和AdapterView　　131
6.4.1 　基本的列表控件：ListView　　131
6.4.2 　GridView控件　　138
6.4.3 　Spinner控件　　140
6.4.4 　Gallery控件　　141
6.4.5 　创建自定义适配器　　142
6.4.6 　Android中的其他控件　　146
6.5 　样式和主题　　147
6.5.1 　使用样式　　147
6.5.2 　使用主题　　149
6.6 　布局管理器　　150
6.6.1 　LinearLayout布局管理器　　150
6.6.2 　TableLayout布局管理器　　153
6.6.3 　RelativeLayout布局管理器　　156
6.6.4 　FrameLayout布局管理器　　157
6.6.5 　GridLayout布局管理器　　159
6.6.6 　为各种设备配置自定义布局　　160
6.7 　参考资料　　161
6.8 　小结　　161
6.9 　面试问题　　161
第7章 　使用菜单　　163
7.1 　Android菜单　　163
7.1.1 　创建菜单　　164
7.1.2 　使用菜单组　　165
7.1.3 　响应菜单项　　166
7.2 　使用其他菜单类型　　168
7.2.1 　展开的菜单　　168
7.2.2 　使用图标菜单　　169
7.2.3 　使用子菜单　　169
7.2.4 　使用上下文菜单　　170
7.2.5 　使用交替菜单　　173
7.2.6 　动态菜单　　175
7.3 　通过XML文件加载菜单　　175
7.3.1 　XML菜单资源文件的结构　　176
7.3.2 　填充XML菜单资源文件　　177
7.3.3 　响应基于XML的菜单项　　177
7.3.4 　4.0版本中的弹出式菜单　　178
7.3.5 　其他XML菜单标记简介　　179
7.4 　资源　　181
7.5 　小结　　181
7.6 　面试问题　　181
第8章 　多用途的碎片　　183
8.1 　什么是碎片　　183
8.1.1 　何时使用碎片　　184
8.1.2 　碎片的结构　　185
8.1.3 　碎片的生命周期　　186
8.1.4 　展示生命周期的示例碎片应用程序　　189
8.2 　FragmentTransactions和碎片后退栈　　194
8.3 　FragmentManager　　196
8.3.1 　引用碎片时的注意事项　　197
8.3.2 　保存片段状态　　198
8.3.3 　ListFragments和<fragment>　　198
8.3.4 　在需要时调用独立的活动　　200
8.3.5 　碎片的持久化　　201
8.4 　碎片之间的通信方式　　202
8.5 　使用ObjectAnimator自定义动画　　203
8.6 　参考资料　　205
8.7 　小结　　205
8.8 　面试问题　　206
第9章 　对话框　　207
9.1 　使用Android对话框　　207
9.2 　对话框碎片　　207
9.2.1 　DialogFragment的基础知识　　208
9.2.2 　构建对话框碎片　　208
9.2.3 　DialogFragment示例应用程序　　212
9.3 　使用Toast　　220
9.4 　旧版本Android的对话框碎片　　221
9.5 　参考资料　　221
9.6 　小结　　222
9.7 　面试问题　　222
第10章 　ActionBar　　223
10.1 　ActionBar剖析　　223
10.2 　选项卡导航操作栏活动　　225
10.2.1 　实现基础活动类　　225
10.2.2 　为ActionBar分配统一的行为　　227
10.2.3 　实现选项卡监听器　　229
10.2.4 　实现选项卡操作栏活动　　230
10.2.5 　可滚动的调试文本视图布局　　232
10.2.6 　操作栏和菜单交互　　233
10.2.7 　Android描述文件　　235
10.2.8 　测试选项卡操作栏活动　　235
10.3 　列表导航操作栏活动　　236
10.3.1 　创建SpinnerAdapter　　236
10.3.2 　创建列表监听器　　237
10.3.3 　设置列表操作栏　　237
10.3.4 　更改BaseActionBar-Activity　　238
10.3.5 　更改AndroidManifest.xml　　238
10.3.6 　测试列表操作栏活动　　239
10.4 　标准导航操作栏活动　　240
10.4.1 　设置标准导航操作栏活动　　240
10.4.2 　更改BaseActionBar-Activity　　241
10.4.3 　更改AndroidManifest.xml　　242
10.4.4 　测试标准操作栏活动　　242
10.5 　工具栏与搜索视图　　243
10.5.1 　将搜索视图部件定义为菜单项　　244
10.5.2 　配置搜索结果活动　　244
10.5.3 　通过可搜索XML文件自定义搜索　　245
10.5.4 　在配置清单文件中定义搜索结果活动　　245
10.5.5 　确定搜索视图部件的搜索目标　　245
10.6 　操作栏和碎片　　246
10.7 　参考资料　　246
10.8 　小结　　247
10.9 　面试问题　　247
第11章 　高级调试与分析　　249
11.1 　启用高级调试　　249
11.2 　Debug透视图　　249
11.3 　DDMS透视图　　250
11.4 　Hierarchy View透视图　　252
11.5 　Traceview　　253
11.6 　adb命令　　254
11.7 　模拟器控制台　　255
11.8 　StrictMode　　255
11.8.1 　StrictMode策略　　255
11.8.2 　关闭StrictMode　　256
11.8.3 　在旧版本Android上使用StrictMode　　257
11.8.4 　StrictMode练习　　258
11.9 　参考资料　　259
11.10 　小结　　259
11.11 　面试问题　　259
第12章 　响应配置变化　　261
12.1 　配置变化过程　　261
12.1.1 　活动的销毁/创建过程　　262
12.1.2 　碎片的销毁/创建过程　　263
12.1.3 　使用FragmentManager保存碎片状态　　264
12.1.4 　使用碎片的setRetain-Instance　　264
12.2 　弃用的配置变化方法　　264
12.3 　参考资料　　265
12.4 　小结　　265
12.5 　面试问题　　265
第13章 　首选项及保存状态　　266
13.1 　探索首选项框架　　266
13.1.1 　ListPreference　　266
13.1.2 　CheckBoxPreference　　273
13.1.3 　EditTextPreference　　275
13.1.4 　RingtonePreference及MultiSelectListPreference　　276
13.2 　组织首选项　　276
13.2.1 　使用PreferenceCategory　　276
13.2.2 　创建依赖的子首选项　　279
13.2.3 　带标题的首选项　　279
13.3 　以编程方式操作首选项　　281
13.3.1 　使用首选项保存状态　　281
13.3.2 　使用DialogPreference　　282
13.4 　参考资料　　283
13.5 　小结　　283
13.6 　面试问题　　283
第14章 　探索安全性和权限　　284
14.1 　理解Android安全性模型　　284
14.1.1 　安全性概念概述　　284
14.1.2 　为部署签名应用程序　　285
14.2 　执行运行时安全性检查　　290
14.2.1 　进程边界上的安全性　　290
14.2.2 　声明和使用权限　　290
14.2.3 　理解和使用自定义权限　　292
14.2.4 　理解和使用URI权限　　297
14.3 　参考资料　　298
14.4 　小结　　298
14.5 　面试问题　　299
第15章 　构建和使用服务　　300
15.1 　使用HTTP服务　　300
15.1.1 　将HttpClient用于HTTP GET请求　　300
15.1.2 　将HttpClient用于HTTP POST请求（多部分POST请求示例）　　302
15.1.3 　SOAP、JSON和XML分析程序　　304
15.1.4 　处理异常　　305
15.1.5 　解决多线程问题　　307
15.1.6 　有趣的超时　　309
15.1.7 　使用HttpURLConnection　　310
15.1.8 　使用AndroidHttpClient　　310
15.1.9 　使用后台线程（AsyncTask）　　311
15.1.10 　使用DownloadManager获取文件　　316
15.2 　使用Android服务　　321
15.2.1 　Android中的服务　　322
15.2.2 　本地服务　　323
15.2.3 　AIDL服务　　329
15.2.4 　在AIDL中定义服务接口　　329
15.2.5 　实现AIDL接口　　331
15.2.6 　从客户端应用程序调用服务　　333
15.2.7 　向服务传递复杂的类型　　336
15.3 　参考资料　　345
15.4 　小结　　345
15.5 　面试问题　　346
第16章 　包　　347
16.1 　包和进程　　347
16.1.1 　包规范的细节　　347
16.1.2 　将包名称转换为进程名称　　347
16.1.3 　列出安装的包　　348
16.1.4 　通过包浏览器删除包　　348
16.2 　包签名过程回顾　　349
16.2.1 　理解数字签名：场景1　　349
16.2.2 　理解数字签名：场景2　　350
16.2.3 　一种理解数字签名的模式　　350
16.2.4 　数字签名执行方式　　350
16.2.5 　签名过程的影响　　350
16.3 　在包之间共享数据　　351
16.3.1 　共享用户ID的性质　　351
16.3.2 　共享数据的代码模式　　352
16.4 　库项目　　353
16.4.1 　库项目的概念　　353
16.4.2 　库项目的性质　　353
16.4.3 　创建库项目　　355
16.4.4 　创建使用库的Android项目　　358
16.4.5 　使用库项目的注意事项　　365
16.5 　参考资料　　365
16.6 　小结　　366
16.7 　面试问题　　366
第17章 　处理程序　　368
17.1 　Android组件和线程　　368
17.1.1 　活动在主线程上运行　　369
17.1.2 　广播接收程序在主线程上运行　　369
17.1.3 　服务在主线程上运行　　369
17.1.4 　ContentProvider在主线程上运行　　370
17.1.5 　单一主线程的影响　　370
17.1.6 　线程池、ContentProvider及外部服务组件　　370
17.1.7 　线程实用程序：发现线程　　370
17.2 　处理程序　　371
17.2.1 　持有主线程的影响　　372
17.2.2 　使用处理程序延迟主线程上的工作　　373
17.2.3 　延迟工作的处理程序源代码示例　　373
17.2.4 　构造合适的Message对象　　375
17.2.5 　将Message对象发送给队列　　375
17.2.6 　响应handleMessage回调　　376
17.3 　使用工作线程　　376
17.3.1 　从菜单调用工作线程　　376
17.3.2 　在工作线程与主线程之间通信　　377
17.4 　组件和进程寿命　　380
17.4.1 　活动生命周期　　380
17.4.2 　服务生命周期　　381
17.4.3 　接收程序生命周期　　381
17.4.4 　提供程序生命周期　　382
17.5 　参考资料　　382
17.6 　小结　　382
17.7 　面试问题　　383
第18章 　AsyncTask详解　　384
18.1 　实现一个简单的AsyncTask　　385
18.1.1 　实现AsyncTask的泛型　　385
18.1.2 　创建AsyncTask子类　　386
18.1.3 　实现第一个AsyncTask　　386
18.1.4 　调用一个AsyncTask　　388
18.1.5 　onPreExecute()回调方法和进度对话框　　388
18.1.6 　doInBackground()方法　　389
18.1.7 　触发onProgressUpdate()　　389
18.1.8 　onPostExecute()方法　　390
18.1.9 　升级为确定性进度对话框　　390
18.2 　AsyncTask的性质　　392
18.3 　设备旋转与AsyncTask　　393
18.4 　生命周期方法与AsyncTask　　393
18.5 　参考资料　　393
18.6 　小结　　394
18.7 　面试问题　　394
第19章 　广播接收程序和长期运行的服务　　395
19.1 　广播接收程序　　395
19.1.1 　发送广播　　395
19.1.2 　编写简单的接收程序：示例代码　　396
19.1.3 　在描述文件中注册接收程序　　396
19.1.4 　容纳多个接收程序　　397
19.1.5 　进程外接收程序项目　　399
19.2 　从接收程序使用通知　　399
19.2.1 　通过通知管理器监控通知　　400
19.2.2 　发送通知　　401
19.2.3 　在广播接收程序中启用活动　　404
19.3 　长期运行的接收程序和服务　　404
19.3.1 　长期运行的广播接收程序协议　　404
19.3.2 　IntentService　　405
19.3.3 　IntentService源代码　　406
19.4 　为广播接收程序扩展IntentService　　407
19.4.1 　长期运行的广播服务抽象　　408
19.4.2 　长期运行的接收程序　　409
19.4.3 　使用LightedGreenRoom抽象唤醒锁　　411
19.5 　长期运行的服务的实现　　416
19.5.1 　非粘滞性服务的细节　　417
19.5.2 　粘滞性服务的细节　　417
19.5.3 　非粘滞性的变体：重传送（redeliver）Intent　　418
19.5.4 　在onStartCommand中指定服务标志　　418
19.5.5 　挑选合适的粘滞性　　418
19.5.6 　从两个位置控制唤醒锁　　418
19.5.7 　长期运行的服务的实现　　419
19.5.8 　测试长期运行的服务　　420
19.5.9 　开发者的职责　　420
19.5.10 　框架的职责　　421
19.6 　关于项目下载文件的一些说明　　421
19.7 　参考资料　　422
19.8 　小结　　422
19.9 　面试问题　　422
第20章 　闹钟管理器　　424
20.1 　闹钟管理器基本知识：设置一个简单的闹钟　　424
20.1.1 　获取闹钟管理器人的访问权限　　424
20.1.2 　设置闹钟时间　　424
20.1.3 　创建闹钟接收程序　　425
20.1.4 　创建适合闹钟的PendingIntent　　426
20.1.5 　设置闹钟　　427
20.1.6 　测试项目　　427
20.2 　探索其他闹钟管理器场景　　428
20.2.1 　设置重复闹钟　　428
20.2.2 　取消闹钟　　429
20.2.3 　使用多个闹钟　　430
20.2.4 　Intent在设置闹钟时的首要职责　　432
20.2.5 　闹钟的持久化　　434
20.3 　闹钟管理器事实　　434
20.4 　参考资料　　434
20.5 　小结　　435
20.6 　面试问题　　435
第21章 　2D动画揭秘　　436
21.1 　逐帧动画　　436
21.1.1 　计划逐帧动画　　436
21.1.2 　创建活动　　438
21.1.3 　将动画添加到活动　　439
21.2 　布局动画　　441
21.2.1 　基本的补间动画类型　　442
21.2.2 　计划布局动画测试工具　　442
21.2.3 　创建活动和ListView　　443
21.2.4 　将ListView制作成动画　　445
21.2.5 　使用插值器　　447
21.3 　视图动画　　449
21.3.1 　理解视图动画　　449
21.3.2 　添加动画　　451
21.3.3 　使用Camera实现2D图像的深度效果　　454
21.3.4 　探索AnimationListener类　　455
21.3.5 　关于变换矩阵的一些说明　　456
21.4 　属性动画：新动画API　　457
21.4.1 　属性动画　　458
21.4.2 　计划一个属性动画的试验台　　459
21.4.3 　使用对象动画生成器创建基本视图动画　　461
21.4.4 　使用AnimatorSet实现顺序动画　　462
21.4.5 　用AnimatorSetBuilder设置动画关系　　463
21.4.6 　使用XML加载动画生成器　　463
21.4.7 　使用PropertyValuesHolder　　464
21.4.8 　视图属性动画　　466
21.4.9 　类型求值器　　466
21.4.10 　关键帧　　468
21.4.11 　布局转变　　469
21.5 　参考资料　　470
21.6 　小结　　470
21.7 　面试问题　　471
第22章 　地图和基于位置的服务　　472
22.1 　地图包　　472
22.1.1 　从谷歌获取map-api密钥　　473
22.1.2 　MapView和MapActivity　　474
22.1.3 　使用覆盖图添加标记　　479
22.2 　位置包　　484
22.2.1 　使用Android进行地理编码　　484
22.2.2 　使用后台线程进行地理编码　　487
22.2.3 　LocationManager服务　　489
22.2.4 　使用MyLocationOverlay显示位置　　495
22.2.5 　使用接近提醒　　498
22.3 　参考资料　　502
22.4 　小结　　502
22.5 　面试问题　　503
第23章 　电话API　　504
23.1 　使用SMS　　504
23.1.1 　发送SMS消息　　504
23.1.2 　监视传入的SMS消息　　507
23.1.3 　使用SMS文件夹　　509
23.1.4 　发送电子邮件　　511
23.2 　使用电话管理器　　511
23.3 　SIP　　514
23.3.1 　体验SipDemo　　514
23.3.2 　android.net.sip包　　515
23.4 　参考资料　　516
23.5 　小结　　517
23.6 　面试问题　　517
第24章 　媒体框架　　518
24.1 　使用媒体API　　518
24.2 　播放媒体　　522
24.2.1 　播放音频内容　　522
24.2.2 　播放视频内容　　532
24.3 　录制媒体　　534
24.3.1 　使用MediaRecorder录制音频　　535
24.3.2 　使用AudioRecord录制音频　　538
24.3.3 　视频录制　　542
24.3.4 　MediaStore类　　551
24.3.5 　使用Intnet录制音频　　551
24.3.6 　将媒体内容添加到媒体存储　　554
24.3.7 　为整个SD卡触发MediaScanner　　556
24.4 　参考资料　　557
24.5 　小结　　557
24.6 　面试问题　　558
第25章 　主屏幕部件　　559
25.1 　主屏幕部件的架构　　559
25.1.1 　什么是主屏幕部件　　559
25.1.2 　主屏幕部件的用户体验　　560
25.1.3 　部件的生命周期　　563
25.2 　示例部件应用程序　　567
25.2.1 　定义部件提供程序　　568
25.2.2 　定义部件尺寸　　569
25.2.3 　与部件布局相关的文件　　570
25.2.4 　实现部件提供程序　　571
25.2.5 　实现部件模型　　573
25.2.6 　实现部件配置活动　　579
25.3 　部件预览工具　　582
25.4 　部件局限性和扩展　　583
25.5 　基于容器的部件　　583
25.6 　资源　　583
25.7 　小结　　584
25.8 　面试问题　　584
第26章 　列表部件　　586
26.1 　远程视图概述　　586
26.2 　在远程视图中使用列表　　587
26.2.1 　准备远程布局　　588
26.2.2 　加载远程布局　　590
26.2.3 　创建RemoteViewsService　　591
26.2.4 　创建RemoteViewsFactory　　592
26.2.5 　创建onClick事件　　595
26.2.6 　响应onClick事件　　597
26.3 　工作样例：测试主屏幕列表部件　　598
26.3.1 　创建测试部件提供程序　　599
26.3.2 　创建远程视图工厂　　602
26.3.3 　编写远程视图服务的代码　　604
26.3.4 　部件主布局文件　　604
26.3.5 　部件提供程序元数据　　604
26.3.6 　AndroidManifest.xml　　605
26.4 　测试列表部件　　605
26.5 　参考资料　　607
26.6 　小结　　608
26.7 　面试问题　　608
第27章 　触摸屏　　609
27.1 　MotionEvent　　609
27.1.1 　MotionEvent对象　　609
27.1.2 　回收MotionEvent　　619
27.1.3 　使用VelocityTracker　　619
27.2 　多点触摸　　621
27.3 　触摸地图　　627
27.4 　手势　　629
27.4.1 　捏合手势　　629
27.4.2 　GestureDetector和OnGestureListener　　629
27.4.3 　自定义手势　　632
27.4.4 　Gestures Builder应用程序　　632
27.5 　参考资料　　638
27.6 　小结　　638
27.7 　面试问题　　638
第28章 　实现拖放操作　　640
28.1 　拖放操作简介　　640
28.2 　3.0及其以上版本的基本拖放操作　　644
28.3 　拖放操作示例应用程序　　645
28.3.1 　文件列表　　646
28.3.2 　示例拖放应用程序的布局　　646
28.3.3 　响应Dropzone的onDrag事件　　648
28.3.4 　创建拖动源视图　　650
28.4 　测试示例拖放应用程序　　653
28.5 　参考资料　　654
28.6 　小结　　654
28.7 　面试问题　　654
第29章 　传感器　　655
29.1 　什么是传感器　　655
29.1.1 　检测传感器　　656
29.1.2 　可以了解的传感器信息　　656
29.2 　获取传感器事件　　658
29.3 　解释传感器数据　　661
29.3.1 　光线传感器　　661
29.3.2 　接近传感器　　661
29.3.3 　温度传感器　　662
29.3.4 　压力传感器　　662
29.3.5 　陀螺仪传感器　　662
29.3.6 　加速度计　　663
29.3.7 　磁场传感器　　667
29.3.8 　结合使用加速度计和磁场传感器　　668
29.3.9 　方向传感器　　668
29.3.10 　磁偏角和Geomagnetic-Field　　673
29.3.11 　重力传感器　　673
29.3.12 　直线加速度传感器　　674
29.3.13 　旋转矢量传感器　　674
29.3.14 　近场通信传感器　　674
29.4 　参考资料　　683
29.5 　小结　　683
29.6 　面试问题　　684
第30章 　联系人API　　685
30.1 　账户　　685
30.1.1 　账户屏幕概览　　686
30.1.2 　账户与联系人的相关性　　688
30.1.3 　枚举账户　　689
30.2 　联系人应用程序　　689
30.2.1 　个人账号简介　　691
30.2.2 　显示联系人　　692
30.2.3 　显示联系人详细信息　　692
30.2.4 　编辑联系人详细信息　　693
30.2.5 　设置联系人的照片　　694
30.2.6 　导出联系人　　694
30.2.7 　各种联系人数据类型　　696
30.3 　联系人　　696
30.3.1 　联系人SQLite数据库　　697
30.3.2 　原始联系人　　697
30.3.3 　数据表　　699
30.3.4 　聚合联系人　　700
30.3.5 　view_contacts　　701
30.3.6 　contact_entities_view　　702
30.4 　联系人API　　703
30.4.1 　浏览账户　　703
30.4.2 　浏览聚合联系人　　705
30.4.3 　浏览原始联系人　　712
30.4.4 　浏览原始联系人数据　　715
30.4.5 　添加联系人和它的详细信息　　718
30.5 　控制聚合　　720
30.6 　同步的影响　　720
30.7 　个人账号　　721
30.7.1 　读取账号原始联系人　　722
30.7.2 　读取账号联系人数据　　722
30.7.3 　添加数据到个人账号　　723
30.8 　参考资料　　725
30.9 　小结　　725
30.10 　面试问题　　726
第31章 　部署应用程序Android Market　　727
31.1 　成为发布者　　727
31.1.1 　遵守规则　　728
31.1.2 　开发人员控制台　　729
31.2 　准备销售应用程序　　731
31.2.1 　针对不同设备进行测试　　732
31.2.2 　支持不同的屏幕尺寸　　732
31.2.3 　准备上传AndroidManifest.xml　　732
31.2.4 　本地化应用程序　　733
31.2.5 　准备应用程序图标　　734
31.2.6 　付费应用程序需要考虑的因素　　734
31.2.7 　将用户引导至Market　　735
31.2.8 　Android授权服务　　735
31.2.9 　使用ProGuard来优化及对抗盗版行为　　736
31.2.10 　准备上传.apk文件　　737
31.3 　上传应用程序　　738
31.3.1 　图表　　738
31.3.2 　列出详细信息　　739
31.3.3 　发布选项　　739
31.3.4 　联系信息　　740
31.3.5 　需遵守的规定　　740
31.4 　Android Market上的用户体验　　741
31.5 　更多发布途径　　742
31.6 　参考资料　　742
31.7 　小结　　743
31.8 　面试问题　　743
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通Android
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android高级编程
第1章 Android简介
1.1 一些背景信息
1.1.1 不远的过去
1.1.2 未来的前景
1.2 对Android的误解
1.3 开放的移动开发平台
1.4 自带的Android应用程序
1.5 Android SDK功能
1.5.1 对包括摄像头、GPS和加速计在内的硬件的访问
1.5.2 自带的Google地图、地理编码和基于位置的服务
1.5.3 后台服务
1.5.4 SQLite数据存储和检索数据库
1.5.5 共享数据和应用程序间通信
1.5.6 使用Google Talk的P2P服务
1.5.7 扩展的数据支持和2D／3D图形
1.5.8 优化的内存和进程管理
1.6 开放手机联盟简介
1.7 运行Android的环境
1.8 从事Android开发的原因
1.8.1 推动Android普及的因素
.1.8.2 Android的独到之处
1.8.3 改变移动开发格局
1.9 开发框架简介
1.9.1 开发包中的资源
1.9.2 理解Android软件栈
1.9.3 Dalvik虚拟机
1.9.4 Android应用程序架构
1.9.5 Android库
1.9.6 高级Android库
1.10 小结
第2章 开始入手
2.1 Android开发
2.1.1 开始前的准备工作
2.1.2 创建第一个Android活动
2.1.3 Android应用程序的类型
2.2 面向移动设备的开发
2.2.1 关于硬件设计的考虑事项
2.2.2 考虑用户环境
2.2.3 Android开发
2.3 To-Do List示例
2.4 Android开发工具
2.4.1 Android模拟器
2.4.2 Dalvik调试监控服务(DDMS)
2.4.3 Android调试桥(ADB)
2.5 小结
第3章 创建应用程序和活动
3.1 Android应用程序的组成部分
3.2 程序清单简介
3.3 使用清单编辑器
3.4 Android应用程序生命周期
3.5 理解应用程序的优先级和进程状态
3.6 分离资源
3.6.1 创建资源
3.6.2 使用资源
3.6.3 To-DoList资源示例
3.6.4 为不同的语言和硬件创建资源
3.6.5 运行时配置更改
3.7 深入探讨Android活动
3.7.1 创建一个活动
3.7.2 活动生命周期
3.7.3 Android活动类
3.8 小结
第4章 创建用户界面
4.1 Android UI基本设计
4.2 View简介
4.2.1 使用View创建Activity(活动)用户界面
4.2.2 Android Widget工具箱
4.3 布局简介
4.4 创建新的View
4.4.1 修改现有的View
4.4.2 创建复合控件
4.4.3 创建定制的Widget和控件
4.4.4 使用定制的控件
4.5 创建和使用菜单
4.5.1 Android菜单系统简介
4.5.2 定义活动的菜单
4.5.3 动态更新菜单项
4.5.4 处理菜单选择
4.5.5 子菜单和上下文菜单
4.5.6 To-Do List示例续
4.6 小结
第5章 Intent、广播接收器、
Adapter和Internet
5.1 Intent简介
5.1.1 使用Intent来启动活动
5.1.2 使用Intent Filter来为隐式Intent提供服务
5.1.3 使用Intent Filter作为插件和扩展
5.1.4 使用Intent来广播事件
5.2 Adapter简介
5.2.1 Android提供的部分Adapter简介
5.2.2 使用Adapter绑定数据
5.3 使用Internet资源
5.3.1 连接到Internet资源
5.3.2 利用Internet资源
5.4 Dialog简介
5.4.1 Dialog类简介
5.4.2 使用活动作为对话框
5.5 创建一个地震查看器
5.6 小结
第6章 数据存储、检索和共享
6.1 Android中的数据保存技术
6.2 保存简单的应用程序数据
6.2.1 创建和保存preference
6.2.2 检索共享的preference
6.2.3 保存活动状态
6.2.4 为地震查看器创建一个Preference页
6.3 保存和载入文件
6.3.1 将静态文件作为资源添加
6.3.2 文件管理工具
6.4 Android中的数据库
6.4.1 SQLite简介
6.4.2 Cursor和内容值
6.4.3 使用Android数据库
6.5 内容提供器简介
6.5.1 使用内容提供器
6.5.2 本地Android内容提供器
6.5.3 创建一个新的内容提供器
6.5.4 创建和使用地震内容提供器
6.6 小结
第7章 地图、地理编码和基于位置的服务
7.1 使用基于位置的服务
7.2 使用Test Proyider构建模拟器
7.2.1 更新模拟位置提供器中的位置
7.2.2 创建一个应用程序来管理Test Location Provider
7.3 选择——个Location Provider
7.3.1 查找可用的提供器
7.3.2 根据要求标准查找提供器
7.4 确定自己所在的位置
7.4.1 “Where Am I”示例
7.4.2 追踪移动
7.4.3 更新“WhereAmI”示例中的位置
7.5 使用邻近提醒
7.6 使用Geocoder
7.6.1 反向地理编码
7.6.2 前向地理编码
7.6.3 对“Where Am I”示例进行地理编码
7.7 创建基于地图的活动
7.7.1 MapView和MapActivity简介
7.7.2 创建一个基于地图的活动
7.7.3 配置和使用MapView
7.7.4 使用MapController
7.7.5 对“Where Am I”示例使用地图
7.7.6 创建和使用覆盖(Overlay)
7.7.7 MyLocationOverlay简介
7.7.8 ItemizedOverlay和Overlayltem简介
7.7.9 将View固定到地图和地图的某个位置上
7.8 对Earthquake示例添加地图功能
7.9 小结
第8章 后台工作
8.1 服务简介
8.1.1 创建和控制服务
8.1.2 将活动和服务绑定
8.2 使用后台工作线程
8.2.1 创建新的线程
8.2.2 为GUI操作同步线程
8.2.3 将Earthquake Service移动到后台线程
8.3 创建一个Toast
8.3.1 定制Toast
8.3.2 在工作(worker)线程中使用Toast
8.4 Notification简介
8.4.1 Notification Manager简介
8.4.2 创建Notification
8.4.3 触发Notification
8.4.4 向Earthquake Monitor中添加Notiflcation
8.4.5 高级Notification技术
8.4.6 持续的和连续的Notification
8.5 使用Alarm
8.6 使用Alarm更新Earthquake
8.7 小结
第9章 P2P通信
9.1 Android即时消息简介
9.1.1 使用GTalk服务
9.1.2 和GTalk服务绑定
9.1.3 建立GTalk连接，开始一个IM会话
9.1.4 在线状态和联系人列表简介
9.1.5 管理聊天会话
9.1.6 发送和接收数据信息
9.2 SMS简介
9.2.1 在应用程序中使用SMS
9.2.2 发送SMS信息
9.2.3 监听SMS消息
9.2.4 紧急响应的SMS示例
9.2.5 紧急响应自动化
9.3 小结
第10章 访问Android硬件
10.1 使用媒体API
10.1.1 播放媒体资源
10.1.2 录制多媒体
10.2 使用摄像头
10.2.1 控制摄像头设置
10.2.2 使用摄像头预览
10.2.3 照相
10.3 Sensor Manager简介
10.4 使用加速计和指南针
10.4.1 加速计介绍
10.4.2 检测加速度的改变
10.4.3 创建一个速度计
10.4.4 确定方向
10.4.5 创建指南针和地平仪
10.5 Android电话功能
10.5.1 打电话
10.5.2 监控电话状态和电话活动
10.5.3 监控数据连通性和活动
10.5.4 访问手机的属性和状态
10.5.5 控制电话
10.6 使用蓝牙
10.6.1 蓝牙服务介绍
10.6.2 控制本地蓝牙设备
10.6.3 发现并配对蓝牙设备
10.6.4 管理蓝牙连接
10.6.5 使用蓝牙进行通信
10.6.6 使用蓝牙耳机
10.7 管理网络和Wi-Fi连接
10.7.1 监控和管理Internet连接
10.7.2 管理活动的连接
10.7.3 管理你的Wi-Fi
10.8 控制设备震动
10.9 小结
第11章 Android高级开发
11.1 Android的安全性
11.1.1 Linux内核安全
11.1.2 权限简介
11.1.3 声明和实施权限
11.1.4 为广播Intent实施权限
11.2 使用AIDL来支持服务IPC
11.3 使用Internet服务
11.4 构建内容丰富的用户界面
11.4.1 使用动画
11.4.2 使用主题来为应用程序添加皮肤
11.4.3 高级画布绘图
11.4.4 SurfaceView简介
11.4.5 创建交互式控件
11.5 小结
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android高级编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android编程实战
第一部分　构建更好的基础
第1章　完善开发环境　　2
1.1 　可供选择的操作系统　　2
1.2 　Android SDK进阶　　2
1.2.1 　adb工具　　3
1.2.2 　用Monkey对应用UI做压力测试　　5
1.2.3 　在Android上使用Gradle构建系统　　6
1.2.4 　用ProGuard优化和混淆代码　　9
1.3 　Android库项目以及第三方库　　9
1.3.1 　使用JAR库　　9
1.3.2 　创建库项目　　10
1.4 　版本控制和源代码管理　　11
1.5 　熟练使用IDE　　13
1.5.1 　调试Android应用　　14
1.5.2 　使用lint做静态代码分析　　15
1.5.3 　重构代码　　18
1.6 　Android设备上的Developer选项　　20
1.7 　小结　　22
1.8 　延伸阅读　　22
第2章　在Android上编写高效的Java代码　　23
2.1 　比较Android上的Dalvik Java和
Java SE　　23
2.2 　优化Android上的Java代码　　25
2.2.1 　Android上的类型安全枚举　　26
2.2.2 　Android中增强版的for循环　　27
2.2.3 　队列、同步和锁　　28
2.3 　管理和分配内存　　30
2.4 　Android中的多线程　　33
2.4.1 　Thread类　　34
2.4.2 　AsyncTask　　35
2.4.3 　Handler类　　36
2.4.4 　选择合适的线程　　41
2.5 　小结　　41
2.6 　延伸阅读　　42
第二部分　充分利用组件
第3章　组件、清单及资源　　44
3.1 　Android组件　　44
3.1.1 　Activity　　44
3.1.2 　Service　　45
3.1.3 　BroadcastReceiver　　45
3.1.4 　ContentProvider　　46
3.1.5 　Application　　46
3.1.6 　应用架构　　48
3.2 　应用程序清单　　49
3.2.1 　manifest元素　　49
3.2.2 　Google Play过滤器和权限　　50
3.2.3 　application节点元素　　51
3.2.4 　组件元素和属性　　52
3.2.5 　Intent过滤　　53
3.3 　resources和assets　　55
3.3.1 　高级string资源　　55
3.3.2 　本地化　　57
3.3.3 　使用资源限定符　　58
3.3.4 　使用assets　　59
3.4 　小结　　59
3.5 　延伸阅读　　60
第4章　Android用户体验和界面设计　　61
4.1 　用户故事　　61
4.2 　Android UI设计　　62
4.2.1 　导航　　63
4.2.2 　用户界面原型　　63
4.3 　Android用户界面元素　　64
4.4 　Android应用程序文本　　65
4.4.1 　字体　　65
4.4.2 　文本布局　　65
4.5 　尺寸和大小　　66
4.5.1 　推荐尺寸　　66
4.5.2 　图标大小　　67
4.5.3 　字体大小　　67
4.6 　颜色　　68
4.7 　图像和图标　　69
4.7.1 　典型透视　　69
4.7.2 　几何离子　　70
4.7.3 　人脸识别　　70
4.8 　可用性　　71
4.9 　用户奖励机制　　71
4.10 　小结　　73
4.11 　延伸阅读　　73
第5章　Android用户界面操作　　75
5.1 　Activity和Fragment　　75
5.2 　使用多个屏幕　　77
5.3 　设计自定义视图　　79
5.3.1 　View的生命周期　　79
5.3.2 　钢琴键盘部件　　80
5.4 　多点触控　　85
5.4.1 　PointerCoordinates　　87
5.4.2 　旋转手势　　87
5.5 　OpenGL ES　　89
5.6 　小结　　90
5.7 　延伸阅读　　90
第6章　Service和后台任务　　91
6.1 　何时以及如何使用Service　　91
6.2 　理解Service生命周期　　92
6.2.1 　Service的创建和销毁　　92
6.2.2 　启动Service　　92
6.2.3 　绑定Service　　94
6.2.4 　保持活跃　　96
6.2.5 　停止Service　　97
6.3 　在后台运行　　99
6.3.1 　IntentService　　99
6.3.2 　并行执行　　100
6.4 　和Service通信　　103
6.4.1 　使用Intent进行异步消息传递　　103
6.4.2 　本地绑定的Servcie　　104
6.5 　小结　　107
6.6 　延伸阅读　　108
第7章　Android IPC　　109
7.1 　Binder简介　　109
7.1.1 　Binder地址　　110
7.1.2 　Binder事务　　111
7.1.3 　Parcel　　112
7.1.4 　link to death　　114
7.2 　设计API　　114
7.2.1 　AIDL　　115
7.2.2 　Messenger　　119
7.2.3 　使用库工程包装API　　122
7.3 　保护远程API　　125
7.4 　小结　　126
7.5 　延伸阅读　　126
第8章　掌握BroadcastReceiver以及配置更改　　127
8.1 　BroadcastReceiver　　128
8.1.1 　本地BroadcastReceiver　　129
8.1.2 　普通广播和有序广播　　130
8.1.3 　粘性广播　　132
8.1.4 　定向广播　　132
8.1.5 　启用和禁用广播接收器　　133
8.1.6 　系统广播Intent　　133
8.2 　设备配置更改　　137
8.3 　小结　　137
8.4 　延伸阅读　　138
第9章　数据存储和序列化技术　　139
9.1 　Android持久化选项　　139
9.2 　在偏好文件中存储数据　　140
9.3 　用户选项和设置用户界面　　142
9.4 　高性能ContentProvider　　144
9.4.1 　Android数据库设计　　144
9.4.2 　创建和升级数据库　　145
9.4.3 　实现查询方法　　147
9.4.4 　数据库事务　　149
9.4.5 　在ContentProvider中存储二进制数据　　150
9.5 　序列化数据　　152
9.5.1 　JSON　　152
9.5.2 　使用Gson进行高级JSON处理　　154
9.5.3 　Google Protocol Buffer　　156
9.6 　应用数据备份　　159
9.7 　小结　　160
9.8 　延伸阅读　　160
第10章　编写自动化测试　　162
10.1 　Android测试原则　　162
10.1.1 　测试内容　　163
10.1.2 　基本的单元测试　　163
10.1.3 　测试Activity　　165
10.1.4 　测试Service　　167
10.1.5 　测试ContentProvider　　168
10.1.6 　运行测试　　171
10.2 　持续集成　　172
10.3 　小结　　173
10.4 　延伸阅读　　173
第三部分　超越极限
第11章　高级音频、视频及相机应用　　176
11.1 　高级音频应用　　176
11.1.1 　低延迟音频　　176
11.1.2 　OpenSL ES　　179
11.1.3 　文字转语音　　183
11.1.4 　语音识别　　184
11.2 　使用OpenGL ES 2.0处理视频　　186
11.3 　使用OpenGL ES 2.0处理相机　　190
11.4 　多媒体编码　　192
11.5 　小结　　196
11.6 　延伸阅读　　196
第12章　Android应用安全问题　　197
12.1 　Android安全的概念　　197
12.1.1 　签名和密钥　　197
12.1.2 　Android权限　　198
12.1.3 　保护用户数据　　199
12.1.4 　验证调用应用　　200
12.2 　客户端数据加密　　201
12.2.1 　Android的加密API　　201
12.2.2 　生成密钥　　201
12.2.3 　加密数据　　202
12.2.4 　解密数据　　202
12.2.5 　处理加密数据　　203
12.3 　Android的钥匙链管理　　204
12.4 　设备管理API　　208
12.5 　小结　　211
12.6 　扩展阅读　　212
第13章　地图、位置和活动API　　213
13.1 　融合位置管理器　　213
13.2 　集成Google Maps v2　　214
13.3 　使用Google Maps　　216
13.3.1 　地图标记　　217
13.3.2 　绘制圆形区域　　218
13.3.3 　绘制多边形　　219
13.3.4 　有用的位置API工具　　220
13.3.5 　地理编码　　221
13.4 　使用LocationClient　　222
13.5 　地理围栏　　223
13.6 　活动识别　　225
13.7 　小结　　227
13.8 　延伸阅读　　228
第14章　本地代码和JNI　　229
14.1 　关于CPU体系结构　　229
14.2 　用C语言编写Android应用程序　　230
14.2.1 　Android NDK编译脚本　　230
14.2.2 　本地Activity　　231
14.3 　使用JNI　　232
14.3.1 　从Java调用本地函数　　232
14.3.2 　从本地调用Java方法　　235
14.4 　Android本地API　　238
14.4.1 　C语言库　　238
14.4.2 　本地Android日志　　238
14.4.3 　本地OpenGL ES 2.0　　238
14.4.4 　OpenSL ES中的本地音频　　239
14.5 　移植本地库到Android　　239
14.6 　小结　　245
14.7 　延伸阅读　　245
第15章　隐藏的Android API　　246
15.1 　官方API和隐藏API　　246
15.2 　发现隐藏API　　247
15.3 　安全地调用隐藏API　　249
15.3.1 　从设备中提取隐藏API　　249
15.3.2 　使用反射调用隐藏API　　252
15.4 　隐藏API示例　　252
15.4.1 　接收和阅读SMS　　252
15.4.2 　Wi-Fi网络共享　　254
15.4.3 　隐藏设置　　255
15.5 　小结　　256
15.6 　延伸阅读　　256
第16章　深入研究Android平台　　257
16.1 　解锁设备　　258
16.1.1 　刷新出厂映像　　259
16.1.2 　解锁非Nexus设备　　259
16.1.3 　社区支持的固件　　260
16.2 　Android源码　　260
16.2.1 　设置构建环境　　260
16.2.2 　构建并刷新固件　　261
16.3 　编写系统应用　　262
16.3.1 　平台证书　　262
16.3.2 　编写签名的应用　　263
16.4 　探索Android平台　　265
16.4.1 　设置IDE　　265
16.4.2 　Android项目　　265
16.4.3 　Android Linux Kernel　　267
16.4.4 　添加系统服务　　267
16.4.5 　加快平台开发周期　　270
16.5 　为AOSP贡献代码　　271
16.6 　小结　　273
16.7 　延伸阅读　　273
第17章　网络、Web服务和远程API　　274
17.1 　Android上的网络调用　　274
17.1.1 　HttpUrlConnection　　275
17.1.2 　Volley　　278
17.1.3 　OkHttp和SPDY　　280
17.1.4 　Web Socket　　281
17.2 　集成Web服务　　285
17.2.1 　Google Static Maps v2　　285
17.2.2 　使用OAuth2访问Foursquare API　　286
17.2.3 　在Android中使用Facebook SDK　　290
17.2.4 　寻找在线Web服务和API　　294
17.3 　网络和功耗　　294
17.3.1 　一般准则　　295
17.3.2 　高效的网络轮询　　296
17.3.3 　服务器端推送　　297
17.4 　小结　　299
17.5 　延伸阅读　　299
第18章　与远程设备通信　　300
18.1 　Android中的连接技术　　300
18.2 　Android USB　　301
18.3 　蓝牙低功耗　　303
18.4 　Android Wi-Fi　　306
18.4.1 　服务发现　　306
18.4.2 　Wi-Fi Direct　　308
18.5 　设备上的Web服务　　311
18.5.1 　使用Restlet创建RESTful API　　311
18.5.2 　Web Socket服务器　　315
18.6 　小结　　317
18.7 　延伸阅读　　317
第19章　Google Play Service　　318
19.1 　授权　　318
19.2 　Google Drive应用程序数据　　321
19.3 　Google Cloud Endpoint　　324
19.4 　谷歌云消息　　327
19.5 　Google Play Game Service　　331
19.5.1 　数据消息　　333
19.5.2 　消息策略　　334
19.6 　小结　　335
19.7 　延伸阅读　　336
第20章　在Google Play Store发布应用　　337
20.1 　应用内付费　　338
20.1.1 　消费产品　　340
20.1.2 　应用内订阅　　340
20.2 　在应用内添加广告　　341
20.2.1 　定位广告　　342
20.2.2 　广告颜色　　343
20.2.3 　插播式广告　　343
20.3 　应用程序许可　　344
20.4 　APK扩展文件　　345
20.4.1 　创建扩展文件　　346
20.4.2 　下载扩展文件　　346
20.5 　小结　　348
20.6 　延伸阅读　　348

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android编程实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android程序设计
第一部分 工具和基础
第1章 工具包	7
1.1 Android SDK的安装和系统需求	7
1.2 小试牛刀：确认安装是否能够正常工作	16
1.3 SDK的组件	24
1.4 保持版本最新	30
1.5 示例代码	32
1.6 关于代码阅读	34
第2章 Android开发之Java必备基础	35
2.1 Android正在重塑客户端Java	35
2.2 Java类型系统	36
2.3 作用域	57
2.4 Java编程惯例	61
第3章 Android应用的主要组件	75
3.1 Android平台和传统编程模型的对比	75
3.2 活动、意图和任务	76
3.3 其他Android组件	78
3.4 静态应用资源和上下文	82
3.5 Resources	87
3.6 Android应用的运行时环境	88
3.7 组件生命周期	89
3.8 Android应用打包：.apk文件	91
3.9 把软件移植到Android中	92
第4章 应用发布之前的准备工作	93
4.1 应用签名	93
4.2 把应用投放到Android市场	102
4.3 Google地图API密钥	104
4.4 指定API级别的兼容性	104
4.5 兼容不同的屏幕类型	105
第5章 Android软件开发工具Eclipse	107
5.1 Eclipse相关的概念和术语	108
5.2 Eclipse视图和透视图	113
5.3 Eclipse中的Java编程	115
5.4 Eclipse和Android	117
5.5 预防Bug并保持代码整洁	118
5.6 Eclipse特性和替代品	125
第6章 Android下的高效Java编程	126
6.1 Android框架	126
6.2 组织Java源代码	133
6.3 Android中的并发编程	135
6.4 序列化	148
第二部分 Android框架
第7章 构建视图	159
7.1 Android GUI架构	159
7.2 组装图形界面	163
7.3 控制器布局	168
7.4 菜单栏	184
第8章 Fragment和跨平台支持	187
8.1 创建Fragment	188
8.2 Fragment生命周期	190
8.3 Fragment管理器	192
8.4 Fragment事务	193
8.5 兼容包	198
第9章 二维和三维图形的绘制	199
9.1 自己动手开发部件	199
9.2 Bling	220
第10章 数据处理和数据持久化	232
10.1 关系数据库概览	232
10.2 SQLite	233
10.3 SQL语言	233
10.4 Android应用中的SQL和以数据库为中心的数据模型	243
10.5 Android数据库类	244
10.6 Android应用的数据库设计	245
10.7 使用数据库API：MJAndroid	248
第三部分 Android的框架应用
第11章 运行良好的应用框架	263
11.1 对生命周期进行可视化	263
11.2 Fragment生命周期可视化	274
11.3 Activity类和运行良好的应用	277
11.4 Application类的生命周期方法	278
11.5 活动之间流畅直观的用户体验	281
第12章 使用内容提供者	286
12.1 理解内容提供者	287
12.2 定义提供者的公用API	290
12.3 编写并集成内容提供者	295
12.4 文件管理和二进制数据	296
12.5 Android MVC和内容查看器	298
12.6 一个完整的内容提供者代码：SimpleFinchVideoContentProvider	299
12.7 声明自己的内容提供者	307
第13章 探讨内容提供者 	309
13.1 开发RESTful类型的Android应用	310
13.2 Network MVC	311
13.3 Network MVC方式的优点小结	312
13.4 代码实例：动态列出并缓存YouTube视频内容	314
13.5 Finch YouTube视频示例的源代码结构	315
13.6 视频搜索应用的各个步骤	316
第四部分 高级话题
第14章 多媒体	339
14.1 音频和视频	339
14.2 播放音频和视频	340
14.3 录制音频和视频	344
14.4 存储的媒体内容	350
第15章 地理位置和地图定位	351
15.1 基于地理位置的服务	352
15.2 地图定位	353
15.3 Google Maps Activity	353
15.4 MapView和MapActivity	354
15.5 使用MapView	355
15.6 MapView和MyLocationOverlay初始化	355
15.7 暂停和恢复MapActivity	358
15.8 通过菜单按钮控制地图	359
15.9 通过键盘操作地图	361
15.10 没有地图的地理位置	362
第16章 传感器、NFC、语音、手势和可访问性	371
16.1 传感器	371
16.2 近场通信	375
16.3 手势输入	386
16.4 可访问性	387
第17章 通信、身份认证、同步和社交媒体	390
17.1 账户信息	390
17.2 认证和同步	393
17.3 蓝牙	408
第18章 Android本地开发工具箱	424
18.1 本地方法和JNI调用	425
18.2 Android NDK	426
18.3 Android提供的本地库	430
18.4 编译自己定制的库模块	432
18.5 本地活动	435
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android程序设计
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android应用开发详解
第一篇  基础篇第1章  Android概述第2章  Android开发基础    第二篇  技术篇第3章  Android中的资源访问第4章  Android用户界面第5章  Android基本程序单元Activity第6章  Android组件之间的信使Intent第7章  Android Service组件第8章  Android广播事件处理 Broadcast Receiver第9章  Android中的数据存取第10章  Content Provider第11章  Android中的多媒体应用第12章  Android中的图形图像第13章  Android中的互联网应用第14章  Android中的GPS应用    第三篇  应用篇第15章  Android应用案例——移动警务通第16章  Android应用案例——雷电游戏第17章  Android应用案例——备忘录第18章  Android应用案例——无线点餐系统
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android应用开发详解
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android基础教程（第3版·修订版）
第一部  分Android简介第1章  快速入门  2  1.1  安装工具  2    1.1.1  Java 5.0+  2    1.1.2 Eclipse  3    1.1.3  AndroidSDK启动程序软件包  4    1.1.4  AndroidSDK组件  4    1.1.5  Eclipse插件  5  1.2  创建第一个程序  7  1.3  在模拟器上运行程序  8    1.3.1  创建一个AVD  8    1.3.2  再试一次  10  1.4  在手机上运行程序  10  1.5  快速阅读指南  11第2章  基本概念  12  2.1  Android的系统架构  12    2.1.1  Linux内核  13    2.1.2  本机库  13    2.1.3  Android运行时  14    2.1.4  应用程序框架  15    2.1.5  应用程序和小部件  15  2.2  它还活着  16    2.2.1  进程不等于应用程序  17    2.2.2  应用程序生命周期  17  2.3  构建块  19    2.3.1  活动  19    2.3.2  意图  19    2.3.3  服务  19    2.3.4  内容提供者  20  2.4  使用资源  20  2.5  安全性  20  2.6  快速阅读指南  21第二部分 Android基础知识第3章  设计用户界面  24  3.1  数独游戏简介  24  3.2  声明性设计  25  3.3  创建启动界面  26  3.4  使用替代资源  33  3.5  实现About对话框  35  3.6  应用主题  39  3.7  添加菜单  41  3.8  添加设置  42  3.9  开始新游戏  44  3.10  调试程序  45    3.10.1  利用日志消息调试程序  46    3.10.2  利用调试器调试程序  47  3.11  退出游戏  47  3.12  快速阅读指南  47第4章  绘制2D图形  49  4.1  Android图形基础  49    4.1.1  Color类  49    4.1.2  Paint类  50    4.1.3  Canvas类  50    4.1.4  Path类  51    4.1.5  Drawable类  52  4.2  在数独程序中添加图形  53    4.2.1  开始游戏  54    4.2.2  定义Game类  54    4.2.3  定义PuzzleView类  56    4.2.4  绘制游戏盘面  57    4.2.5  绘制数字  60  4.3  处理输入  61    4.3.1  定义和更新选定区域  61    4.3.2  输入数字  63    4.3.3  增加提示  64    4.3.4  抖动屏幕  65  4.4  其他问题  66    4.4.1  创建软键盘  66    4.4.2  实现游戏逻辑  71    4.4.3  其他功能  73  4.5  更多改进  74  4.6  快速阅读指南  75第5章  多媒体  76  5.1  播放音频  76  5.2  播放视频  81  5.3  为数独游戏配上音乐  85  5.4  快速阅读指南  88第6章  存储本地数据  89  6.1  为数独游戏添加选项  89  6.2  继续玩前一个游戏  91  6.3  记住当前位置  92  6.4  访问内部文件系统  94  6.5  访问SD卡  95  6.6  快速阅读指南  96第三部分  高级主题第7章  互联的世界  98  7.1  通过意图实现浏览  99  7.2  利用视图打开网页  102  7.3  JavaScript与Java通信  106  7.4  使用Web服务  112  7.5  快速阅读指南  122第8章  定位与环境感知  124  8.1  位置，位置，位置  124    8.1.1  我在哪里  125    8.1.2  更新位置  127    8.1.3  模拟说明  130  8.2  充分利用传感器  130    8.2.1  了解传感器  130    8.2.2  解析传感器的读数  131    8.2.3  模拟说明  132  8.3  地图功能  133    8.3.1  嵌入MapView  133    8.3.2  准备就绪  136    8.3.3  模拟说明  137  8.4  快速阅读指南  137第9章  SQL实战  138  9.1  SQLite简介  138  9.2  SQL基础  139    9.2.1  DDL语句  140    9.2.2  修改语句  140    9.2.3  查询语句  140  9.3  你好，数据库  141    9.3.1  使用SQLiteOpenHelper  142    9.3.2  定义主程序  143    9.3.3  添加一行  145    9.3.4  运行一个查询  145    9.3.5  显示查询结果  146  9.4  数据绑定  147  9.5  使用ContentProvider  150    9.5.1  更改主程序  152    9.5.2  添加一行  152    9.5.3  运行一个查询  152  9.6  实现ContentProvider  153  9.7  快速阅读指南  154第10 章  利用OpenGL实现3D图形  155  10.1  理解3D图形  155  10.2  OpenGL简介  156  10.3  构建一个OpenGL程序  157  10.4  渲染场景  158  10.5  构建一个模型  162  10.6  光线、相机  165  10.7  动作  166  10.8  应用纹理  167  10.9  透明效果  169  10.10  测量平滑度  170  10.11  快速阅读指南  171第四部分  下一代产品第11章  多点触控  174  11.1  多点触控概述  174  11.2  创建触控示例  176  11.3  了解触控事件  178  11.4  设置图像变换  180  11.5  实现拖动动作  181  11.6  实现捏压缩放动作  182    11.6.1  两个点之间的距离  183    11.6.2  两个点的中点  183  11.7  快速阅读指南  184第12章  主界面  185  12.1  Hello，Widget  185    12.1.1  创建第一个小部件程序  185    12.1.2  调用所有小部件  187    12.1.3  拉伸以适合屏幕尺寸  188    12.1.4  使用和扩展  189    12.1.5  运行小部件  189    12.1.6  最新进展  190    12.1.7  快乐之旅  192  12.2  动态壁纸  192    12.2.1  创建壁纸项目  193    12.2.2  服务简介  195    12.2.3  创建一个绘图引擎  196    12.2.4  重用OpenGL代码  197    12.2.5  创建和销毁引擎  198    12.2.6  管理Surface  199    12.2.7  可视化壁纸  201    12.2.8  响应用户的输入  201  12.3  快速阅读指南  203第13章  一次编写，到处测试  204  13.1  启动模拟器  204  13.2  创建适用于多个版本的程序  205  13.3  AndroidAPI的发展  206  13.4  大量错误  212  13.5  各种屏幕尺寸  213  13.6  在SD卡上安装程序  214  13.7  快速阅读指南  215第14章  发布到AndroidMarket  216  14.1  准备工作  216  14.2  签名  217  14.3  发布  218  14.4  更新  219  14.5  结语  220第五部分  附录附录A  Java与Android：语言及其API  222附录B  参考书目  226
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android基础教程（第3版·修订版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android系统级深入开发
第1章  Android系统移植开发概述第2章  Android源代码和开发环境第3章  Android系统移植的结构和方法第4章  Android的GoldFish内核和驱动第5章  Android的MSM内核和驱动第6章  Android的OMAP内核和驱动第7章  显示系统第8章  用户输入系统第9章  传感器系统第10章  音频系统第11章  视频输出系统第12章  照相机系统第13章  无线局域网系统第14章  蓝牙系统第15章  定位系统第16章  电话系统第17章  OpenGL 3D引擎第18章  OpenMax多媒体引擎第19章  多媒体系统的插件第20章  位块复制系统第21章  警报器——实时时钟系统第22章  光系统第23章  振动器系统第24章  电池系统
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android系统级深入开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android 4编程入门经典
目    录

第1章  Android编程入门	1
1.1  Android简介	2
1.1.1Android版本	2
1.1.2Android功能	3
1.1.3Android架构	3
1.1.4市场上的Android设备	4
1.1.5Android Market	7
1.1.6  Android开发社区	7
1.2  获得所需工具	8
1.2.1  Android SDK	8
1.2.2  安装Android SDK工具	9
1.2.3  配置Android SDK
Manager	10
1.2.4  Eclipse	11
1.2.5  Android开发工具	12
1.2.6  创建Android虚拟
设备(AVD)	14
1.3  创建第一个Android应用
程序	17
1.4  Android应用程序剖析	24
1.5  本章小结	28
第2章  活动、碎片和意图	31
2.1  理解活动	31
2.1.1  如何对活动应用样式
和主题	36
2.1.2  隐藏活动标题	37
2.1.3  显示对话框窗口	38
2.1.4  显示进度对话框	43
2.1.5  显示更复杂的进度对话框	46
2.2  使用意图链接活动	50
2.2.1  解决意图筛选器的冲突	54
2.2.2  从意图返回结果	56
2.2.3  使用意图对象传递数据	59
2.3  碎片	65
2.3.1  动态添加碎片	70
2.3.2  碎片的生命周期	72
2.3.3  碎片之间进行交互	76
2.4  使用意图调用内置应用程序	80
2.4.1  理解意图对象	85
2.4.2  使用意图筛选器	86
2.4.3  添加类别	91
2.5  显示通知	93
2.6  本章小结	98
第3章  Android用户界面	101
3.1  了解屏幕的构成	101
3.1.1  视图和视图组	102
3.1.2  LinearLayout	103
3.1.3  AbsoluteLayout	109
3.1.4  TableLayout	110
3.1.5  RelativeLayout	111
3.1.6  FrameLayout	113
3.1.7  ScrollView	115
3.2  适应显示方向	118
3.2.1  锚定视图	119
3.2.2  调整大小和重新定位	121
3.3  管理屏幕方向的变化	124
3.3.1  配置改变时保持状态
信息	127
3.3.2  检测方向改变	128
3.3.3  控制活动的方向	129
3.4  使用Action Bar	130
3.4.1  向Action Bar添加动作项	132
3.4.2  定制动作项和应用
程序图标	138
3.5  以编程方式创建用户界面	139
3.6  侦听用户界面通知	142
3.6.1  重写活动中定义的方法	142
3.6.2  为视图注册事件	146
3.7  本章小结	149
第4章  使用视图设计用户界面	151
4.1  基本视图	151
4.1.1  TextView视图	152
4.1.2  Button、ImageButton、EditText、
CheckBox、ToggleButton、
RadioButton和RadioGroup
视图	152
4.1.3  ProgressBar视图	163
4.1.4  AutoCompleteTextView
视图	169
4.2  选取器视图	171
4.2.1  TimePicker视图	171
4.2.2  DatePicker视图	176
4.3  使用列表视图显示长列表	183
4.3.1  ListView视图	183
4.3.2  使用Spinner视图	191
4.4  了解特殊碎片	194
4.4.1  使用ListFragment	194
4.4.2  使用DialogFragment	199
4.4.3  使用PreferenceFragment	202
4.5  本章小结	206
第5章  使用视图显示图片和菜单	209
5.1  使用图像视图显示图片	209
5.1.1  Gallery和ImageView
视图	209
5.1.2  ImageSwitcher	217
5.1.3  GridView	222
5.2  将菜单和视图一起使用	225
5.2.1  创建辅助方法	226
5.2.2  选项菜单	228
5.2.3  上下文菜单	230
5.3  其他一些视图	233
5.3.1  AnalogClock和DigitalClock
视图	233
5.3.2  WebView	234
5.4  本章小结	240
第6章  数据持久化	243
6.1  保存和加载用户首选项	243
6.1.1 使用活动访问首选项	244
6.1.2  通过编程检索和修改首
选项值	250
6.1.3  修改首选项文件的默认
名称	252
6.2  将数据持久化到文件中	254
6.2.1  保存到内部存储器	254
6.2.2  保存到外部存储器
(SD卡)	259
6.2.3  选择最佳存储选项	262
6.2.4  使用静态资源	263
6.3  创建和使用数据库	264
6.3.1  创建DBAdapter辅助类	265
6.3.2  以编程方式使用数据库	270
6.3.3  预创建数据库	277
6.4  本章小结	281
第7章  内容提供者	283
7.1  在Android中共享数据	283
7.2  使用内容提供者	284
7.2.1  预定义查询字符串常量	289
7.2.2  投影	292
7.2.3  筛选	293
7.2.4  排序	294
7.3  创建自己的内容提供者	295
7.4  使用内容提供者	304
7.5  本章小结	309
第8章  消息传递	311
8.1  SMS消息传递	311
8.1.1  以编程方式发送SMS
消息	312
8.1.2  发送消息后获取反馈	315
8.1.3  使用意图发送SMS消息	318
8.1.4  接收SMS消息	319
8.1.5  说明和警告	334
8.2  发送电子邮件	335
8.3  本章小结	338
第9章  基于位置的服务	339
9.1  显示地图	339
9.1.1  创建项目	340
9.1.2  获取Maps API密钥	340
9.1.3  显示地图	343
9.1.4  显示缩放控件	346
9.1.5  改变视图	349
9.1.6  导航到特定位置	350
9.1.7  添加标记	353
9.1.8  获取触摸的位置	356
9.1.9  地理编码和反向地理
编码	358
9.2  获取位置数据	362
9.3  监控一个位置	371
9.4  项目—创建一个位置跟踪
应用程序	372
9.5  本章小结	378
第10章  联网	381
10.1  通过HTTP使用Web服务	381
10.1.1  下载二进制数据	384
10.1.2  下载文本内容	390
10.1.3  通过GET方法访问Web
服务	392
10.2  使用JSON服务	397
10.3  套接字编程	405
10.4  本章小结	414
第11章  开发Android服务	417
11.1  创建自己的服务	417
11.1.1  在服务中执行长时间运行
的任务	421
11.1.2  在服务中执行重复的
任务	426
11.1.3  使用IntentService在单独的
线程上执行异步任务	430
11.2  在服务和活动之间通信	433
11.3  将活动绑定到服务	437
11.4  理解线程	442
11.5  本章小结	448
第12章  发布Android应用程序	451
12.1  为发布做准备	451
12.1.1  版本化	451
12.1.2  对Android应用程序进行
数字签名	454
12.2  部署APK文件	459
12.2.1  使用adb.exe工具	459
12.2.2  使用Web服务器	461
12.2.3  在Android Market上
发布	462
12.3  本章小结	467
附录A  使用Eclipse进行Android
开发	469
附录B  使用Android模拟器	483
附录C  练习答案	595

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android 4编程入门经典
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Google Android SDK开发范例大全
第1章  了解、深入、动手做  1.1  红透半边天的Android  1.2  本书目的及范例涵盖范围  1.3  如何阅读本书  1.4  使用本书范例  1.5  参考网站第2章  Android初体验  2.1  安装Android SDK与ADT/DDMS  2.2  创建第一个Android项目(Hello Android!)  2.3  Android应用程序架构——从此开始  2.4  可视化的界面开发工具  2.5  部署应用程序到Android手机第3章  用户人机界面  3.1  更改与显示文字标签  3.2  更改手机窗口画面底色  3.3  更改TextView文字颜色  3.4  置换TextView文字  3.5  取得手机屏幕大小  3.6  样式化的定型对象  3.7  简易的按钮事件  3.8  手机页面的转换  3.9  调用另一个Activity  3.10  不同Activity之间的数据传递  3.11  返回数据到前一个Activity  3.12  具有交互功能的对话框  3.13  置换文字颜色的机关  3.14  控制不同的文字字体  3.15  如iPhone拖动相片特效  3.16  自制计算器  3.17  关于(About)程序信息  3.18  程序加载中，请稍候  3.19  全屏幕以按钮重写  3.20  今晚到哪儿打牙祭  3.21  Android变脸  3.22  打勾显示输入的密码  3.23  Android多语系支持第4章  史上超豪华的手机控件  4.1  EditText与TextView共舞  4.2  设计具有背景图的按钮  4.3  给圣诞老人的信息  4.4  我同意条款  4.5  消费券采购列表  4.6  向左或向右  4.7  专业相框设计  4.8  自定义下拉菜单模式  4.9  动态添加/删除的Spinner菜单  4.10  心爱小宝贝相片集  4.11  快速地搜索手机文件引擎  4.12  按钮也能随单击变换  4.13  具自动提示功能的菜单  4.14  数字及模拟小时钟设计  4.15  动态输入日期与时间  4.16  猜猜红桃A在哪儿  4.17  后台程序运行进度提示  4.18  动态文字排版  4.19  在Activity里显示列表  4.20  以动态列表配置选项  4.21  查找程序根目录下所有文件  4.22  加载手机磁盘里的图片文件  4.23  动态放大缩小ImageView里的图片  4.24  动态旋转图片  4.25  猜猜我在想什么  4.26  离开与关闭程序的弹出窗口  4.27  隐藏式抽屉  4.28  手机桌面上的小玩意  4.29  手机图片搜索管理器  4.30  实时配置桌面上的AppWidget UI Layout第5章  交互式通信服务与手机控制  5.1  具有正则表达式的TextView  5.2  ACTION！CALL！拨打电话  5.3  自制发送短信程序  5.4  自制发送E-mail程序  5.5  自制日历手机数据库  5.6  手机震动的节奏  5.7  图文可视化提醒  5.8  状态栏的图标与文字提醒  5.9  搜索手机通讯录自动完成  5.10  取得联系人资料  5.11  制作有图标的文件资源管理器  5.12  还原手机默认桌面  5.13  置换手机背景图  5.14  获取手机现存桌面  5.15  文件资源管理器再进化  5.16  取得目前File与Cache的路径  5.17  打开/关闭WiFi服务  5.18  取得SIM卡内的信息  5.19  调用拨号按钮  5.20  DPAD按键处理  5.21  任务管理器正在运行的程序  5.22  动态更改屏幕方向  5.23  系统设置更改事件  5.24  取得电信网络与手机的相关信息  5.25  建立自己的手写笔画图案第6章  手机自动服务纪实  6.1  您有一条短信pop up提醒  6.2  手机电池计量还剩多少  6.3  群发拜年短信给联系人  6.4  开始与停止系统服务  6.5  通过短信发送E-mail通知  6.6  手机拨接状态  6.7  有来电，发送邮件通知  6.8  存储卡剩余多少容量  6.9  访问本机内存与存储卡  6.10  实现可定时响起的闹钟  6.11  黑名单来电自动静音  6.12  手机翻背面即静音震动  6.13  指定时间置换桌面背景  6.14  判断发送短信后的状态  6.15  后台服务送出广播信息  6.16  开机程序设计  6.17  双向短信常驻服务  6.18  测量电池温度  6.19  电池电量显示Widget小工具  6.20  取出通讯录数据及多组电话号码  6.21  电子精确罗盘  6.22  屏幕手写事件判断  6.23  画一颗心，打电话给HONEY第7章  娱乐多媒体  7.1  访问Drawable资源的宽和高  7.2  绘制几何图形  7.3  手机屏幕保护程序  7.4  用手指移动画面里的照片  7.5  加载存储卡的Gallery相簿  7.6  取得手机内置媒体中的图片文件  7.7  相片导航向导与设置背景桌面  7.8  调整音量大小  7.9  播放mp3资源文件  7.10  播放存储卡里的mp3音乐  7.11  自制录音/播放录音程序  7.12  通过收到短信开始秘密录音  7.13  内置影片播放器载入3gp电影  7.14  自制3gp影片播放器  7.15  相机预览及拍照临时文件  7.16  拍照瞬间启动相机自动对焦  7.17  制作开场动画  7.18  我的手机会说话  7.19  手势触控屏幕控制  7.20  多点触控屏幕事件捕捉第8章  当Android与Internet接轨  8.1  HTTP GET/POST传递参数  8.2  在程序里浏览网页  8.3  嵌入HTML标记的程序  8.4  设计前往打开网页功能  8.5  将网络图像网址放入Gallery中显示  8.6  即时访问网络图片文件展示  8.7  手机气象局，实时卫星云图  8.8  通过网络播放mp3  8.9  设置远程下载音乐为手机铃声  8.10  远程下载桌面背景图案  8.11  将手机文件上传至网站服务器  8.12  移动博客发布器  8.13  移动RSS阅读器  8.14  远程下载安装Android程序  8.15  手机下载看3gp影片  8.16  访问网站Login API  8.17  地震速报  8.18  通过Web API动态更改手机Spinner控件  8.19  网络语音搜索  8.20  网络下载过程中显示加载中  8.21  快照WebView加载的网页画面  8.22  网页的放大与缩小第9章  Google服务与Android完美整合  9.1  Google账号验证Token  9.2  Google搜索  9.3  前端产生QR Code二维条形码  9.4  以经纬度查找目的地位置  9.5  GPS Google地图  9.6  移动版Google Map  9.7  规划导航路径  9.8  移动设备上的Picasa相册  9.9  随身翻译机第10章  创意Android程序设计  10.1  手机手电筒  10.2  GPS轨迹记录器  10.3  女性贴身看护  10.4  手机QR Code二维条形码生成器  10.5  Android QR Code二维条形码扫描仪  10.6  上班族今天中午要吃什么  10.7  掷杯筊  10.8  电蚊香  10.9  转转轮盘——Lucky！  10.10  任务管理器  10.11  免费的云端发音字典  10.12  动起来！手机桌面上会动的动态桌布附录  如何发布程序到Android Market  A.1  支付Google Android Market注册费  A.2  生成签署凭证 .keystore金钥档案  A.3  上传*.apk程序到Android Market上
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Google Android SDK开发范例大全
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android APP开发入门
前言
目 录
第1章使用Android Studio开发Android App
1-1 创建第一个Android App项目
1-2在计算机的仿真器上执行App
创建Android仿真器
在仿真器上执行Android App
调整仿真器的语言、时区及删除App
在Android Studio中查看仿真器与App的执行情况
1-3 Android Studio快速上手
认识Android Studio的操作环境
打开最近使用过的项目
项目的移动、复制与删除
打开“移动或复制后”或“外来”的项目
1-4 Android项目的构成
Android资源文件的“多版本”特色
习题
第2章Android程序设计基础讲座
2-1 AndroidApp的主角：ActMty
Activity（活动）
Activity App的组成
2-2 Android程序的设计流程
视觉设计和程序逻辑
用图形化界面来做视觉设计
用Java来编写程序逻辑
把视觉设计与程序代码构建(Build)起来
第3章Android App界面设计
第4章与用户互动--事件处理
第5章用户界面的基本组件
第6章高级UI组件：Spinner与ListView
第7章即时消息与对话框
第8章用Intent启动程序中的其他Activity
第9章用Intent启动手机内的各种程序
第10章拍照与显示照片
第11章播放音乐与视频
第12章用传感器制作水平仪与体感控制
第13章WebView与SharedPreferences
第14章GPS定位、地图、菜单
第15章SQLite数据库
第16章Android互动设计--蓝牙遥控自走车iTank
附录A
附录B
附录C
附录D
附录E
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android APP开发入门
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>品味移动设计
目 　录
第 1 章　做好准备了吗——了解移动平台和移动应用　　1
1.1 　成为用户体验设计师　　1
1.1.1 　UI、ID、UE和GUI，这些都是什么　　2
1.1.2 　了解成功的用户体验设计案例　　3
1.2 　移动设备的三大主流平台　　7
1.2.1 　iOS 平台　　7
1.2.2 　Android 平台　　10
1.2.3 　Windows Phone 平台　　12
1.3 　用户体验设计的基本流程　　13
1.3.1 　创意和原型草图阶段　　14
1.3.2 　原型的中保真阶段　　 16
1.3.3 　高保真原型及设计的完成阶段　　17
第 2 章　一切从服务用户开始——市场定位和产品目标　　19
2.1 　是移动产品，不是电脑软件　　19
2.1.1 　不为外表华丽　　20
2.1.2 　不为功能强大　　21
2.1.3 　别让它“大而全”　　23
2.2 　做有价值的应用　　26
2.2.1 　它只是成千上万个应用中的一个　　26
2.2.2 　是前无古人还是出类拔萃　　29
2.2.3 　如何才能独树一帜　　30
2.3 　了解应用的使用者　　32
2.3.1 　用户细分　　32
2.3.2 　用户研究　　34
2.3.3 　用户测试　　36
第 3 章　讨论与初步设计——完成原型的草图设计 37
3.1 　会玩“头脑风暴”吗　　37
3.1.1 　一项既有益又有趣的游戏　　38
3.1.2 　有明确的目标　　39
3.1.3 　有合理的分工　　41
3.1.4 　安排好合理的环境和议程　　45
3.1.5 　畅所欲言和遵守规则　　49
3.1.6 　挑选出最有前途的想法　　50
3.2 　把想法和思路画成草图　　51
3.2.1 　手绘的原型草图　　51
3.2.2 　潦草但要认真　　53
3.2.3 　原型工具和原型设计软件　　57
3.3 　检验和分享你的思考结果　　60
3.3.1 　有连贯，有情节，画出应用的故事板　　61
3.3.2 　利用原型草图进行可用性测试　　62
3.3.3 　几种其他类型的草图　　63
第 4 章　移动应用的交互特点　　 67
4.1 　了解移动设备　　67
4.1.1 　移动设备的种类　　68
4.1.2 　移动设备的规格和像素尺寸　　69
4.1.3 　移动设备的使用方法　　70
4.2 　移动设备的人体工程学特点　　74
4.2.1 　了解你的拇指　　74
4.2.2 　单手操作还是双手操作　　77
4.2.3 　善待你的指尖　　80
4.3 　移动设备的视觉体验　　84
4.3.1 　视觉的运行轨迹　　85
4.3.2 　优化视觉结构　　86
4.3.3 　图片与文字的视觉关系　　90
4.4 　屏幕的旋转　　92
第 5 章 　应用程序导航　　 95
5.1 　iOS 应用的导航模式　　95
5.1.1 　平铺导航　　96
5.1.2 　iOS 的标签导航　　99
5.1.3 　iOS 的树形结构导航　　101
5.1.4 　模态视图　　104
5.1.5 　iOS 的组合导航　　105
5.2 　Android 应用导航模式　　106
5.2.1 　Android 的标签导航　　107
5.2.2 　Android 的树形结构导航　　109
5.2.3 　手机与平板电脑导航的不同　　110
5.2.4 　Android 的组合导航　　111
5.3 　Windows Phone 应用导航模式　　112
5.3.1 　Windows Phone 的标签导航　　112
5.3.2 　面板区域应用程序中心导航　　114
5.3.3 　主面板菜单应用程序中心导航　　114
第 6 章　标准控件与设计规范　　 116
6.1 　文本输入输出　　116
6.1.1 　文本输出控件　　116
6.1.2 　文本输入控件　　118
6.2 　按钮　　119
6.2.1 　iOS 平台按钮　　119
6.2.2 　Android 平台按钮　　120
6.2.3 　Windows Phone 平台按钮　　121
6.3 　各种“栏”　　122
6.3.1 　状态栏　　122
6.3.2 　iOS 中的工具栏、导航栏和标签栏　　123
6.3.3 　Android 中的菜单栏和操作栏　　125
6.3.4 　Windows Phone 中的菜单栏　　128
6.3.5 　搜索栏　　129
6.4 　滑块控件　　133
6.4.1 　iOS 平台滑块控件　　133
6.4.2 　Android 平台滑块控件　　134
6.4.3 　Windows Phone 平台滑块控件　　135
6.5 　选择控件　　136
6.5.1 　二选一　　136
6.5.2 　单选控件　　137
6.5.3 　多选控件　　138
6.5.4 　拾取器　　138
6.6 　对话框　　143
6.6.1 　iOS 平台中的对话框　　143
6.6.2 　Android 平台中的对话框　　 145
6.6.3 　Windows Phone 平台中的对话框　　147
6.7 　活动指示器和进度条　　148
6.7.1 　iOS 平台中的活动指示器和进度条　　148
6.7.2 　Android 平台的活动指示器和进度条　　150
6.7.3 　Windows Phone 平台中的活动指示器和进度条　　150
6.8 　列表和网格　　152
6.8.1 　iOS 平台列表和网格　　152
6.8.2 　Android 平台列表和网格　　154
6.8.3 　Windows Phone 平台中的列表和网格　　155
6.9 　原型的可用性测试　　157
第 7 章　视觉体验的个性化　　 159
7.1 　做有个性的应用　　159
7.1.1 　从细节替换入手　　160
7.1.2 　添加装饰、纹理和特效　　162
7.1.3 　纯个性化的用户体验设计　　164
7.2 　图形元素与构成理念　　165
7.2.1 　图形元素是界面视觉印象的根本　　166
7.2.2 　页面布局与构成理念　　169
7.2.3 　处理好图形元素和页面布局间的关系　　175
7.2.4 　同一款应用在不同的平台和设备上　　177
7.3 　应用界面的色彩因素　　179
7.3.1 　了解色彩的规律　　179
7.3.2 　善于把握色调　　181
7.3.3 　丰富的色彩，严谨的搭配　　183
7.3.4 　色彩的倾向性　　187
7.4 　严谨地把握文字　　188
7.4.1 　选择合适的字体　　189
7.4.2 　推敲文字的四个要素　　191
7.4.3 　处理好字群的位置关系　　193
7.5 　界面风格和特效　　194
7.5.1 　拟物化风格　　194
7.5.2 　扁平化设计　　195
7.5.3 　手绘体风格　　196
第 8 章　做好应用的图标设计　　 199
8.1 　图标设计的原则　　199
8.1.1 　图标设计的“识别性”原则　　201
8.1.2 　图标设计的“一致性”原则　　201
8.1.3 　图标设计的“兼容性”原则　　203
8.2 　启动图标　　206
8.2.1 　建立完美的第一印象　　206
8.2.2 　三大平台启动图标设计规范　　210
8.2.3 　几个简单的启动图标设计思路　　214
8.3 　工具栏图标　　217
8.3.1 　是符号，不是图案　　217
8.3.2 　三大平台工具栏图标的规范和含义　　218
8.3.3 　几个有效的简化图像的方法　　219
8.4 　启动画面和引导帮助　　221
8.4.1 　启动画面　　221
8.4.2 　引导帮助　　223
第 9 章　用户体验设计项目实战——“价格线”　　226
9.1 　项目概述及工作计划　　226
9.1.1 　项目描述　　226
9.1.2 　工作计划和流程　　227
9.2 　项目的准备阶段　　228
9.2.1 　市场定位及产品分析　　228
9.2.2 　项目的用户需求分析　　229
9.3 　项目的创作及草图阶段　　230
9.4 　项目的中保真原型及可用性测试　　232
9.4.1 　项目的中保真原型　　232
9.4.2 　原型的可用性测试及调整　　233
9.5 　完善界面的个性化设计　　235
9.5.1 　确定风格并收集素材　　235
9.5.2 　隐喻元素的添加及个性化调整　　236
9.6 　应用图标和启动画面设计　　237
9.6.1 　应用图标的创意和设计　　237
9.6.2 　应用的启动画面设计　　239
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>品味移动设计
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android多媒体开发技术实战详解
目　录
第1章　欢迎进入Android世界	1
1.1  最近几年的几件大事	1
1.2  来到智能手机世界	2
1.2.1  何谓智能手机	2
1.2.2  百家争鸣	2
1.3  搭建Android应用开发环境	3
1.3.1  安装Android SDK的系统要求	3
1.3.2  安装JDK、Eclipse、Android SDK	4
1.3.3  设置Android SDK Home	13
1.3.4  验证理论	14
1.3.5  创建Android虚拟设备	15
第2章  准备工作	18
2.1  简析Android安装文件	18
2.1.1  Android SDK目录结构	18
2.1.2  android.jar及内部结构	19
2.1.3  阅读SDK文档需要技巧	20
2.1.4  不简单的SDK工具	22
2.2  系统实例	23
2.3  Android系统架构剖析	26
2.3.1  Android体系结构介绍	26
2.3.2  Android应用工程文件组成	29
2.3.3  应用程序的生命周期	31
第3章　深入底层	34
3.1  为什么要深入底层	34
3.2  搭建Linux开发环境	34
3.2.1  在Linux下安装Android	34
3.2.2  设置环境变量	35
3.2.3  安装编译工具	36
3.3  获取Android源码	36
3.4  分析并编译Android源码	38
3.4.1  Android源码的结构	38
3.4.2  编译Android源码	44
3.4.3  运行Android源码	45
3.4.4  选择编译方法	46
3.5  运行模拟器不是昨日重现	50
3.5.1  在Linux环境下运行模拟器的方法	50
3.5.2  模拟器辅助工具——adb	51
3.6  Android的启动过程	52
3.6.1  Init初始化进程	52
3.6.2  ServiceManager进程	54
3.6.3  Zygote进程	54
3.6.4  SystemService进程	57
3.7  进程之间需要沟通	59
3.8  多核通信	60
3.8.1  内存共享	61
3.8.2  过程调用	69
第4章　多媒体框架	73
4.1  框架学习路线图	73
4.2  Android多媒体系统介绍	73
4.3  OpenMax框架	75
4.3.1  分析OpenMax框架构成	76
4.3.2  实现OpenMax IL接口	80
4.4  OpenCore框架	88
4.4.1  OpenCore层次结构	88
4.4.2  OpenCore代码结构	89
4.4.3  OpenCore编译结构	90
4.4.4  OpenCore OSCL	94
4.4.5  实现OpenCore中的OpenMax
部分	95
4.4.6  OpenCore扩展	107
4.5  StageFright框架是后来者	113
4.5.1  StageFright代码结构	113
4.5.2  StageFright实现OpenMax
接口	114
4.5.3  Video Buffer传输流程	117
第5章　音频系统框架	122
5.1  音频系统结构	122
5.2  分析音频系统的层次	123
5.2.1  层次说明	124
5.2.2  Media库中的Audio框架	124
5.2.3  本地代码	127
5.2.4  JNI代码	130
5.2.5  Java代码	131
5.3  硬件抽象层	131
5.4  分析编码/解码过程	133
5.4.1  AMR编码	133
5.4.2  AMR解码	137
5.4.3  解码MP3	141
第6章　视频系统框架	143
6.1  视频系统结构	143
6.2  分析Overlay抽象层	145
6.2.1  Overlay系统硬件抽象层的接口	145
6.2.2  实现Overlay系统抽象层	147
6.2.3  实现接口	148
6.3  实现Overlay框架	149
第7章　Camera（照相机）系统	152
7.1  Camera系统结构	152
7.2  分析Camera接口和驱动	155
7.2.1  Camera驱动接口	155
7.2.2  硬件抽象层	162
7.3  实现Camera硬件抽象层	166
7.3.1  Java程序部分	166
7.3.2  Camera的Java本地调用部分	167
7.3.3  Camera的本地库libui.so	168
7.3.4  Camera服务libcameraservice.so	169
第8章　振动器系统和警报器系统	174
8.1  振动器系统	174
8.1.1  硬件抽象层	175
8.1.2  JNI框架部分	177
8.1.3  实现硬件抽象层	178
8.2  Alarm警报器系统	179
8.2.1  Alarm系统结构	179
8.2.2  模拟器环境的具体实现	182
第9章　平面世界	183
9.1  强大的Graphics类	183
9.2  用Color类设置文本颜色	183
9.3  用Paint类绘制图像	185
9.4  Canvas类	188
9.5  Rect类	191
9.6  NinePatch类	195
9.7  Matrix类	195
9.8  Bitmap类	199
9.8.1  Bitmap类的功能	200
9.8.2  Bitmap类应用实例	201
9.9  BitmapFactory类	207
9.10  Typeface类	210
9.11  Shader类	210
第10章  二维动画应用	214
10.1  Drawable类	214
10.1.1  认识Drawable类	214
10.1.2  Drawable实现动画效果	215
10.2  实现Tween Animation效果	216
10.2.1  Tween动画基础	216
10.2.2  定义动画效果	221
10.2.3  用实例来体验Tween动画应用（一）	222
10.2.4  用实例来体验Tween动画应用（二）	224
10.3  实现Frame Animation效果	225
10.3.1  Frame动画基础	225
10.3.2  Frame动画应用实例	226
10.4  播放GIF动画	228
10.5  实现EditText动画特效	230
10.6  Property Animation	231
第11章  渲染二维图像	233
11.1  SurfaceFlinger渲染	233
11.1.1  SurfaceFinger基础	233
11.1.2  Surface和Canvas	234
11.1.3  Surface渲染	235
11.2  Skia渲染	238
11.2.1  Skia基础	238
11.2.2  Skia介绍	239
11.2.3  Skia中的类	241
11.2.4  Skia的最大用处是绘图	247
11.2.5  Skia的其他功能	251
第12章  OpenGL ES来了	253
12.1  认识OpenGL ES	253
12.1.1  使用点线法绘制三角形	254
12.1.2  使用索引法绘制三角形	259
12.1.3  使用顶点法绘制三角形	264
12.2  时光的影子	266
12.2.1  正交投影	266
12.2.2  透视投影	267
12.2.3  实现投影效果	267
12.3  体验阳光的魅力	271
12.3.1  何谓光照	271
12.3.2  实现定位光效果	273
12.3.3  开启/关闭光照	279
12.4  高深莫测的纹理映射	284
12.4.1  实现地月模型效果	284
12.4.2  实现三角形纹理贴图效果	292
12.4.3  实现纹理拉伸效果	296
第13章  OpenGL ES进阶	301
13.1  绘制三维图形	301
13.1.1  绘制圆柱体	301
13.1.2  绘制圆环	309
13.1.3  绘制抛物面	313
13.1.4  绘制螺旋面效果	316
13.2  坐标变换	320
13.2.1  缩放变换处理	320
13.2.2  平移变换处理	325
13.3  混合与透明	327
13.3.1  相关基本知识	328
13.3.2  实现混合效果	329
13.4  摄像机和雾特效	333
13.4.1  摄像机	333
13.4.2  雾特效	334
13.4.3  亲眼看一看雾特效和摄像机效果	334
第14章  音频开发应用	345
14.1  实现音频功能的接口类	345
14.2  AudioManager控制铃声	346
14.2.1  AudioManager中介	346
14.2.2  亲手试一试——设置短信提示铃声	349
14.2.3  调节手机音量的大小	352
14.3  录音处理	356
14.3.1  使用MediaRecorder接口录制音频	356
14.3.2  使用AudioRecord录制音频	359
14.3.3  使用AudioRecord接口录音	364
14.3.4  继续使用AudioRecord录制音频	364
14.4  插放音频	367
14.4.1  使用AudioTrack播放音频	367
14.4.2  使用MediaPlayer播放音频	370
14.4.3  不能没有SoundPool	384
14.4.4  使用Ringtone播放铃声	386
14.4.5  使用JetPlayer播放音频	389
14.4.6  使用AudioEffect处理音效	390
14.5  语音识别技术	393
14.5.1  Text-To-Speech技术	394
14.5.2  谷歌的Voice Recognition技术	397
14.6  振动	399
14.6.1  Vibrator类	399
14.6.2  使用Vibrator实现振动效果	401
14.7  闹钟	406
14.7.1  AlarmManager基础	406
14.7.2  闹钟程序	407
第15章  视频开发应用	412
15.1  MediaPlayer的秘密	412
15.2  VideoView就是这么简单	418
15.2.1  VideoView基础	419
15.2.2  使用VideoView实例	421
15.2.3  使用VideoView播放MP4视频	423
15.3  拍照留下美好的瞬间	425
15.3.1  Camera基础	425
15.3.2  小试牛刀	430
第16章  开发一个屏保系统	436
16.1  屏保程序介绍	436
16.2  分析开发屏保程序的原理	436
16.3  我的屏保程序	437
16.3.1  准备素材图片	438
16.3.2  编写布局文件	438
16.3.3  编写主程序文件	439
第17章  开发一个音乐播放器	451
17.1  项目介绍	451
17.2  系统需求分析	451
17.2.1  构成模块	451
17.2.2  系统流程	456
17.2.3  功能结构	457
17.2.4  系统功能说明	457
17.2.5  系统需求	458
17.3  数据库设计	459
17.3.1  字段设计	459
17.3.2  E-R图设计	459
17.3.3  数据库连接	460
17.3.4  创建数据库	460
17.3.5  操作数据库	461
17.3.6  数据显示	462
17.4  具体编码	463
17.4.1  设备服务信息	463
17.4.2  播放器主界面	464
17.4.3  播放列表功能	475
17.4.4  菜单功能模块	479
17.4.5  播放设置界面	482
17.4.6  设置显示歌词	485
17.4.7  文件浏览器模块	486
17.4.8  数据存储	489
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android多媒体开发技术实战详解
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android C++高级编程
第1章 Android平台上的C++入门	1
1.1 Microsoft Windows	1
1.1.1 在Windows平台上下载并安装JDK开发包	2
1.1.2 在Windows平台上下载并安装Apache ANT	5
1.1.3 在Windows平台上下载并安装Android SDK	7
1.1.4 在Windows平台上下载并安装Cygwin	8
1.1.5 在Windows平台上下载并安装Android NDK	11
1.1.6 在Windows平台上下载并安装Eclipse	13
1.2 Apple Mac OS X	14
1.2.1 在Mac平台上安装Xcode	14
1.2.2 验证Mac平台的Java开发包	15
1.2.3 验证Mac平台上的Apache ANT	15
1.2.4 验证GNU Make	16
1.2.5 在Mac平台上下载并安装Android SDK	16
1.2.6 在Mac平台上下载并安装Android NDK	18
1.2.7 在Mac平台上下载并安装Eclipse	19
1.3 Ubuntu Linux	20
1.3.1 检查GNU C库版本	20
1.3.2 激活在64位系统上支持32位的功能	21
1.3.3 在Linux平台上下载并安装Java开发工具包(JDK)	21
1.3.4 在Linux平台上下载并安装Apache ANT	22
1.3.5 在Linux平台上下载并安装GNU Make	22
1.3.6 在Linux平台上下载并安装Android SDK	23
1.3.7 在Linux平台上下载并安装Android NDK	24
1.3.8 在Linux平台上下载并安装Eclipse	25
1.4 下载并安装ADT	26
1.4.1 安装Android平台包	29
1.4.2 配置模拟器	30
1.5 小结	33
第2章 深入了解Android NDK	35
2.1 Android NDK提供的组件	35
2.2 Android NDK的结构	36
2.3 以一个示例开始	36
2.3.1 指定Android NDK的位置	37
2.3.2 导入示例项目	37
2.3.3 向项目中添加原生支持	39
2.3.4 运行项目	40
2.3.5 用命令行对项目进行构建	41
2.3.6 检测Android NDK项目的结构	42
2.4 构建系统	42
2.4.1 Android.mk	43
2.4.2 Application.mk	53
2.5 使用NDK-Build脚本	54
2.6 排除构建系统故障	55
2.7 小结	56
第3章 用JNI实现与原生代码通信	57
3.1 什么是JNI	57
3.2 以一个示例开始	57
3.2.1 原生方法的声明	58
3.2.2 加载共享库	58
3.2.3 实现原生方法	59
3.3 数据类型	64
3.3.1 基本数据类型	64
3.3.2 引用类型	64
3.4 对引用数据类型的操作	65
3.4.1 字符串操作	65
3.4.2 数组操作	67
3.4.3 NIO 操作	68
3.4.4 访问域	69
3.4.5 调用方法	71
3.4.6 域和方法描述符	72
3.5 异常处理	75
3.5.1 捕获异常	75
3.5.2 抛出异常	75
3.6 局部和全局引用	76
3.6.1 局部引用	76
3.6.2 全局引用	76
3.6.3 弱全局引用	77
3.7 线程	78
3.7.1 同步	78
3.7.2 原生线程	79
3.8 小结	79
第4章 使用SWIG自动生成JNI代码	81
4.1 什么是SWIG	81
4.2 安装	82
4.2.1 Windows平台上SWIG的安装	82
4.2.2 在Mac OS X下安装	83
4.2.3 在Ubuntu Linux下安装	85
4.3 通过示例程序试用SWIG	86
4.3.1 接口文件	86
4.3.2 在命令行方式下调用SWIG	89
4.3.3 将SWIG集成到Android构建过程中	90
4.3.4 更新Activity	92
4.3.5 执行应用程序	93
4.3.6 剖析生成的代码	93
4.4 封装C语言代码	94
4.4.1 全局变量	94
4.4.2 常量	95
4.4.3 只读变量	96
4.4.4 枚举	97
4.4.5 结构体	100
4.4.6 指针	101
4.5 封装C++代码	101
4.5.1 指针、引用和值	102
4.5.2 默认参数	103
4.5.3 重载函数	104
4.5.4 类	104
4.6 异常处理	106
4.7 内存管理	107
4.8 从原生代码中调用Java	108
4.8.1 异步通信	108
4.8.2 启用Directors	109
4.8.3 启用RTTI	109
4.8.4 重写回调方法	109
4.8.5 更新HelloJni Activity	110
4.9 小结	110
第5章 日志、调试及故障处理	111
5.1 日志	111
5.1.1 框架	111
5.1.2 原生日志API	112
5.1.3 受控制的日志	114
5.1.4 控制台日志	118
5.2 调试	119
5.2.1 预备知识	119
5.2.2 调试会话建立	120
5.2.3 建立调试示例	121
5.2.4 启动调试器	121
5.3 故障处理	126
5.3.1 堆栈跟踪分析	127
5.3.2 对JNI的扩展检查	128
5.3.3 内存问题	130
5.3.4 strace	133
5.4 小结	134
第6章 Bionic API入门	135
6.1 回顾标准库	135
6.2 还有另一个C库	136
6.2.1 二进制兼容性	136
6.2.2 提供了什么	136
6.2.3 缺什么	137
6.3 内存管理	137
6.3.1 内存分配	137
6.3.2 C语言的动态内存管理	138
6.3.3 C++的动态内存管理	139
6.4 标准文件I/O	141
6.4.1 标准流	141
6.4.2 使用流I/O	141
6.4.3 打开流	142
6.4.4 写入流	143
6.4.5 流的读取	145
6.4.6 搜索位置	148
6.4.7 错误检查	149
6.4.8 关闭流	149
6.5 与进程交互	150
6.5.1 执行shell命令	150
6.5.2 与子进程通信	150
6.6 系统配置	151
6.6.1 通过名称获取系统属性值	152
6.6.2 通过名称获取系统属性	152
6.7 用户和组	153
6.7.1 获取应用程序用户和组ID	153
6.7.2 获取应用程序用户名	154
6.8 进程间通信	154
6.9 小结	154
第7章 原生线程	155
7.1 创建线程示例项目	155
7.1.1 创建Android项目	155
7.1.2 添加原生支持	157
7.1.3 声明字符串资源	157
7.1.4 创建简单的用户界面	157
7.1.5 实现Main Activity	159
7.1.6 生成C/C++头文件	162
7.1.7 实现原生函数	163
7.1.8 更新Android.mk构建脚本	165
7.2 Java 线程	165
7.2.1 修改示例应用程序使之能够使用Java线程	165
7.2.2 执行Java Threads示例	166
7.2.3 原生代码使用Java线程的优缺点	167
7.3 POSIX线程	168
7.3.1 在原生代码中使用POSIX线程	168
7.3.2 用pthread_create创建线程	168
7.3.3 更新示例应用程序以使用POSIX线程	169
7.3.4 执行POSIX线程示例	174
7.4 从POSIX线程返回结果	174
7.5 POSIX线程同步	176
7.5.1 用互斥锁同步POSIX线程	176
7.5.2 使用信号量同步POSIX线程	180
7.6 POSIX线程的优先级和调度策略	180
7.6.1 POSIX的线程调度策略	181
7.6.2 POSIX Thread优先级	181
7.7 小结	181
第8章 POSIX Socket API：面向连接的通信	183
8.1 Echo Socket示例应用	183
8.1.1 Echo Android应用项目	184
8.1.2 抽象echo activity	184
8.1.3 echo应用程序字符串资源	188
8.1.4 原生echo模块	188
8.2 用TCP sockets实现面向连接的通信	191
8.2.1 Echo Server Activity的布局	192
8.2.2 Echo Server Activity	193
8.2.3 实现原生TCP Server	194
8.2.4 Echo客户端Activity布局	206
8.2.5 Echo客户端Activity	208
8.2.6 实现原生TCP客户端	210
8.2.7 更新Android Manifest	213
8.2.8 运行TCP Sockets示例	214
8.3 小结	217
第9章 POSIX Socket API：无连接的通信	219
9.1 将UDP Server方法添加到
Echo Server Activity中	219
9.2 实现原生UDP Server	220
9.2.1 创建UDP Socket：socket	220
9.2.2 从Socket接收数据报：recvfrom	221
9.2.3 向Socket发送数据报：sendto	223
9.2.4 原生UDP Server方法	224
9.3 将原生UDP Client方法加入
Echo Client Activity中	225
9.4 实现原生UDP Client	226
9.5 运行UDP Sockets示例	228
9.5.1 连通UDP的模拟器	228
9.5.2 启动Echo UDP Client	229
9.6 小结	229
第10章 POSIX Socket API：本地通信	231
10.1 Echo Local Activity布局	231
10.2 Echo Local Activity	232
10.3 实现原生本地Socket Server	237
10.3.1 创建本地Socket：socket	237
10.3.2 将本地socket与Name绑定：bind	238
10.3.3 接受本地Socket：accept	240
10.3.4 原生本地Socket Server	240
10.4 将本地Echo Activity添加到Manifest中	242
10.5 运行本地 Sockets示例	243
10.6 异步I/O	243
10.7 小结	244
第11章 支持C++	245
11.1 支持的C++运行库	245
11.1.1 GAbi++ C++运行库	246
11.1.2 STLport C++运行库	246
11.1.3 GNU STL C++运行库	246
11.2 指定C++运行库	246
11.3 静态运行库与动态运行库	247
11.4 C++异常支持	247
11.5 C++ RTTI支持	248
11.6 C++标准库入门	249
11.6.1 容器	249
11.6.2 迭代器	250
11.6.3 算法	251
11.7 C++运行库的线程安全	251
11.8 C++运行库调试模式	251
11.8.1 GNU STL调试模式	251
11.8.2 STLport调试模式	252
11.9 小结	253
第12章 原生图形API	255
12.1 原生图形API的可用性	255
12.2 创建一个AVI视频播放器	256
12.2.1 将AVILib作为NDK的一个导入模块	256
12.2.2 创建AVI播放器Android应用程序	258
12.2.3 创建AVI Player的Main Activity	258
12.2.4 创建Abstract Player Activity	262
12.3 使用JNI图形API进行渲染	269
12.3.1 启用JNI Graphics API	269
12.3.2 使用JNI Graphics API	270
12.3.3 用Bitmap渲染来更新AVI Player	271
12.3.4 运行使用Bitmap渲染的AVI Player	278
12.4 使用OpenGL ES渲染	279
12.4.1 使用OpenGL ES API	279
12.4.2 启用OpenGL ES 1.x API	279
12.4.3 启用OpenGL ES 2.0 API	280
12.4.4 用OpenGL ES渲染来更新AVI Player	280
12.5 使用原生Window API进行渲染	290
12.5.1 启用原生Window API	290
12.5.2 使用原生Window API	291
12.5.3 用原生window渲染器来更新AVI Player	293
12.5.4 EGL图形库	301
12.6 小结	301
第13章 原生音频API	303
13.1 使用OpenSL ES API	303
13.1.1 与OpenSL ES标准的兼容性	304
13.1.2 音频许可	304
13.2 创建WAVE音频播放器	304
13.2.1 将WAVELib作为NDK导入模块	304
13.2.2 创建WAVE播放器Android应用程序	306
13.2.3 创建WAVE播放器主Activity	306
13.2.4 实现WAVE Aduio播放	310
13.3 运行WAVE Audio Player	327
13.4 小结	328
第14章 程序概要分析和NEON优化	329
14.1 用GNU Profiler度量性能	329
14.1.1 安装Android NDK Profiler	329
14.1.2 启用Android NDK Profiler	330
14.1.3 使用GNU Profiler分析gmon.out文件	331
14.2 使用ARM NEON Intrinsics进行优化	332
14.2.1 ARM NEON技术概述	333
14.2.2 给AVI Player添加一个亮度过滤器	333
14.2.3 为AVI播放器启用Android NDK Profiler	336
14.2.4 AVI Player程序概要分析	337
14.2.5 使用NEON Intrinsics优化Brightness Filter	338
14.3 自动向量化	342
14.3.1 启用自动向量化	343
14.3.2 自动向量化问题的发现和排除	344
14.4 小结	344
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android C++高级编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android游戏编程之从零开始
第1章　Android 平台介绍与环境搭建  1.1　Android平台简介/2    1.1.1  Android操作系统平台的优势和趋势/2    1.1.2  Android SDK与Android NDK/2  1.2　Android开发环境的搭建/3    1.2.1  搭配环境前的准备工作/3    1.2.2  安装和配置环境/6    1.2.3  SDK版本更新/11  1.3　本章小节/13第2章　Hello，Android！  2.1　创建第一个Android项目/15  2.2　剖析Android Project 结构/16  2.3　AndroidManifest.xml与应用程序功能组件/20    2.3.1  AndroidManifest的xml语法层次/20    2.3.2  <activity> — Activity（活动）/21    2.3.3   <receiver>—Intent（意图）与Broacast Receiver（广播接收）/21    2.3.4  <service>—服务/22    2.3.5  <provider>—Content Provider（内容提供者）/22  2.4　运行Android项目（启动Android模拟器）/23  2.5　详解第一个Android项目源码/25  2.6　Activity生命周期/28    2.6.1  单个Activity的生命周期/28    2.6.2  多个Activity的生命周期/32    2.6.3  Android OS管理Activity的方式/34  2.7　Android开发常见问题/34    2.7.1  Android SDK与 Google APIs创建Emulator 的区别/34    2.7.2  将Android项目导入Eclipse/35    2.7.3  在Eclipse中显示Android开发环境下常用的View窗口/37    2.7.4  在Eclipse中利用打印语句（Log）调试Android程序/38    2.7.5  在Eclipse中真机运行Android项目/39    2.7.6  设置Android Emulator模拟器系统语言为中文/39    2.7.7  切换模拟器的输入法/39    2.7.8  模拟器中创建SD Card/40    2.7.9  模拟器横竖屏切换/40    2.7.10  打包Android 项目/40  2.8　本章小结/45第3章　Android游戏开发常用的系统控件  3.1　Button/47  3.2　Layout/52    3.2.1  线性布局/52    3.2.2  相对布局/57    3.2.3  表格布局/62    3.2.4  绝对布局/66    3.2.5  单帧布局/68    3.2.6  可视化编写布局/70  3.3　ImageButton/71  3.4　EditText/74  3.5　CheckBox/76  3.6　RadioButton/79  3.7　ProgressBar/82  3.8　SeekBar/85  3.9　TabSpec与TabHost/87  3.10　ListView/91    3.10.1  ListView使用ArrayAdapter适配器/91    3.10.2  ListView使用SimpleAdapter适配器的扩展列表/93    3.10.3  为ListView自定义适配器/96  3.11　Dialog/100  3.12　系统控件常见问题/105    3.12.1  Android中常用的计量单位/105    3.12.2  Context/106    3.12.3  Resources与getResources/107    3.12.4  findViewById与 LayoutInflater/107    3.12.5  多个Activity之间跳转/退出/传递数据操作/108    3.12.6  横竖屏切换处理的三种方式/112  3.13　本章小结/114第4章　游戏开发基础  4.1　如何快速的进入Android游戏开发/116  4.2　游戏的简单概括/118  4.3　Android游戏开发中常用的三种视图/118  4.4　View游戏框架/119    4.4.1  绘图函数onDraw/122    4.4.2  按键监听/124    4.4.3  触屏监听/128  4.5　SurfaceView游戏框架/130    4.5.1  SurfaceView游戏框架实例/130    4.5.2  刷屏的方式/135    4.5.3  SurfaceView视图添加线程/136  4.6　View 与 SurfaceView的区别/142  4.7　Canvas 画布/143  4.8　Paint 画笔/148  4.9　Bitmap位图的渲染与操作/151  4.10　剪切区域/162  4.11　动画/168    4.11.1  Animation动画/168    4.11.2  自定义动画/173  4.12　游戏适屏的简述与作用/179  4.13　让游戏主角动起来/181  4.14　碰撞检测/187    4.14.1  矩形碰撞/188    4.14.2  圆形碰撞/190    4.14.3  像素碰撞/192    4.14.4  多矩形碰撞/193    4.14.5  Region碰撞检测/196  4.15　游戏音乐与音效/198    4.15.1  MediaPlayer/198    4.15.2  SoundPool/203    4.15.3  MediaPlayer与SoundPool优劣分析/207  4.16　游戏数据存储/207    4.16.1  SharedPreference/208    4.16.2  流文件存储/212    4.16.3  SQLite/218  4.17　本章小结/219第5章　游戏开发实战演练  5.1　项目前的准备工作/221  5.2　划分游戏状态/222  5.3　游戏初始化（菜单界面）/224  5.4　游戏界面/229    5.4.1  实现滚动的背景图/230    5.4.2  实现主角以及与主角相关的元素/231    5.4.3  怪物（敌机）类的实现/236  5.5　游戏胜利与结束界面/260  5.6　游戏细节处理/261    5.6.1  游戏Back返回键处理/261    5.6.2  为游戏设置背景常亮/262  5.7　本章小结/262第6章　游戏开发提高篇  6.1　360°平滑游戏导航摇杆/264  6.2　多触点实现图片缩放/268  6.3　触屏手势识别/270  6.4　加速度传感器/274  6.5　9patch工具的使用/278  6.6　代码实现截屏功能/283  6.7　效率检视工具/285  6.8　游戏视图与系统组件共同显示/288  6.9　蓝牙对战游戏/290  6.10　网络游戏开发基础/307    6.10.1  Socket/308    6.10.2  Http/313  6.11　本地化与国际化/317  6.12　本章小结/320第7章　Box2D 物理引擎  7.1　Box2D概述/322  7.2　将Box2D类库导入Android项目中/322  7.3　物理世界与手机屏幕坐标系之间的关系/324  7.4　创建Box2D物理世界/325  7.5　创建矩形物体/327  7.6　让物体在屏幕中展现/329  7.7　创建自定义多边形物体/330  7.8　物理世界中的物体角度/331  7.9　创建圆形物体/332  7.10　多个Body的数据赋值/333    7.10.1  遍历Body/333    7.10.2  自定义类关联Body/335  7.11　设置Body坐标与给Body施加力/338    7.11.1  手动设置Body的坐标/338    7.11.2  给Body施加力/338  7.12　Body碰撞监听、筛选与Body传感器/341    7.12.1  Body碰撞接触点监听/341    7.12.2  Body碰撞筛选/342  7.13　关节/346    7.13.1  距离关节/346    7.13.2  旋转关节/348    7.13.3  齿轮关节/349    7.13.4  滑轮关节/351    7.13.5  移动关节/353    7.13.6  鼠标关节/356  7.14　通过AABB获取Body/358  7.15　物体与关节的销毁/360  7.16　本章小结/361第8章　Box2D物理游戏实战  8.1　迷宫小球游戏实战/363  8.2　堆房子游戏实战/382  8.3　本章小结/392
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android游戏编程之从零开始
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android移动开发一本就够
第一部分  Android概览    第1章  Android简介    第2章  搭建你的Android开发环境    第3章  编写    第一个Android应用程序 第二部分  Android应用程序设计精髓    第4章  剖析Android应用程序    第5章  使用Android Manifest文件定义应用程序    第6章  管理应用程序资源第三部分  Android用户界面设计精髓    第7章  探索用户界面屏幕元素    第8章  使用布局设计用户界面    第9章  绘图与动画第四部分  使用常用Android API    第10章  使用Android数据和存储API    第11章  使用内容提供器在应用程序间共享数据    第12章  使用Android网络API    第13章  使用Android Web API    第14章  使用位置服务API    第15章  使用Android多媒体API    第16章  使用Android电话API    第17章  通过OpenGL ES使用Android 3D图形    第18章  使用Android NDK    第19章  使用Android可选硬件API第五部分  更多Android应用程序设计原则    第20章  使用通知    第21章  使用服务    第22章  扩展Android应用程序    第23章  用户账户管理与数据同步    第24章  处理高级用户输入    第25章  面向不同设备配置和语言第六部分  对外发布你的Android应用程序    第26章  移动软件开发过程    第27章  设计和开发“防弹”Android应用程序    第28章  测试Android应用程序    第29章  销售你的Android应用程序第七部分  附录附录A  Android模拟器快速入门附录B  Android DDMS快速入门附录C  Android调试桥快速入门附录D  Eclipse技巧和诀窍附录E  SQLite快速入门
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android移动开发一本就够
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android应用测试与调试实战
前言
第1章Android自动化测试初探  1
1.1　快速入门  1
1.2　待测示例程序  2
1.3　第一个Android应用测试工程  6
1.4　搭建自动化开发环境  12
1.4.1　安装Eclipse和ADT开发包  12
1.4.2　创建模拟器  13
1.4.3　启动模拟器  21
1.4.4　连接模拟器  23
1.4.5　连接手机  24
1.5　本章小结  29
第2章　Android自动化测试基础  30
2.1　Java编程基础  30
2.2　JUnit简介  36
2.2.1　添加测试异常情况的测试用例  41
2.2.2　测试集合  43
2.2.3　测试准备与扫尾函数  45
2.2.4　自动化测试用例编写注意事项  47
2.3　Android应用程序基础  47
2.3.1　Android权限系统  47
2.3.2　应用的组成与激活  51
2.3.3　清单文件  54
2.3.4　Android应用程序的单UI线程模型  56
2.4　本章小结  57
第3章　Android界面自动化白盒测试  58
3.1　Instrumentation测试框架  58
3.1.1　Android仪表盘测试工程  58
3.1.2　仪表盘技术  60
3.1.3　Instrumentation.ActivityMonitor嵌套类  63
3.2　使用仪表盘技术编写测试用例  64
3.2.1　ActivityInstrumentationTest-Case2测试用例  66
3.2.2　sendKeys和sendRepeatedKeys函数  70
3.2.3　执行仪表盘测试用例  72
3.2.4　仪表盘测试技术的限制  74
3.3　使用robotium编写集成测试用例  77
3.3.1　为待测程序添加?robotium用例  77
3.3.2　测试第三方应用  80
3.3.3　robotium关键源码解释  84
3.4　Android自动化测试在多种屏幕下的注意事项  87
3.5　本章小结  90
第4章　Android界面自动化黑盒测试  91
4.1　monkey工具  91
4.1.1　运行monkey  93
4.1.2　monkey命令选项参考  97
4.1.3　monkey脚本  98
4.1.4　monkey服务器  105
4.2　编写monkeyrunner用例  109
4.2.1　为待测程序录制和回放用例  110
4.2.2　运行monkeyrunner  110
4.2.3　手工编写monkeyrunner代码  111
4.2.4　编写monkeyrunner插件  114
4.3　本章小结  118
第5章　测试Android服务组件  119
5.1　JUnit的模拟对象技术  119
5.2　测试服务对象  128
5.2.1　服务对象简介  128
5.2.2　在应用中添加服务  130
5.2.3　测试服务对象  136
5.3　本章小结  140
第6章　测试Android内容供应组件  142
6.1　控制反转  142
6.1.1　依赖注入  144
6.1.2　服务定位器  146
6.2　内容供应组件  147
6.2.1　统一资源标识符  150
6.2.2　MIME类型  152
6.2.3　内容供应组件的虚拟表视图  152
6.3　内容供应组件示例  154
6.4　测试内容供应组件  159
6.5　本章小结  163
第7章　测试Android HTML 5应用  164
7.1　构建Android HTML 5应用  164
7.1.1　WebView应用  164
7.1.2　使用视口适配Android设备的多种分辨率  170
7.1.3　使用CSS适配多种分辨率  175
7.1.4　使用Chrome浏览器模拟移动设备浏览器  176
7.2　使用QUnit测试HTML 5网页  177
7.2.1　QUnit基础  177
7.2.2　QUnit中的断言  179
7.2.3　测试回调函数  181
7.2.4　测试WebView应用  182
7.3　本章小结  185
第8章　使用Selenium测试HTML 5浏览器应用  186
8.1　Selenium组成部分  186
8.2　安装Selenium IDE  187
8.3　Selenium IDE界面  188
8.3.1　菜单栏  188
8.3.2　工具栏  189
8.4　使用Selenium  189
8.4.1　使用Selenium IDE录制测试用例  189
8.4.2　运行Selenium测试用例  194
8.4.3　等待操作完成  199
8.4.4　Selenium WebDriver命令  200
8.5　数据驱动测试  206
8.6　Selenium编程技巧  208
8.6.1　在测试代码中硬编码测试数据  208
8.6.2　重构Selenium IDE生成的代码  209
8.7　本章小结  212
第9章　Android NDK测试  213
9.1　安装NDK  213
9.2　NDK的基本用法  214
9.3　编译和部署NDK示例程序  214
9.4　Java与C/C++之间的交互  217
9.4.1　Makefiles  222
9.4.2　动态模块和静态模块  222
9.5　在Android设备上执行NDK单元测试  223
9.6　unittest++使用基础  228
9.6.1　添加新测试用例  228
9.6.2　测试用例集合  229
9.6.3　验证宏  229
9.6.4　数组相关的验证宏  230
9.6.5　设置超时  230
9.7　本章小结  231
第10章　Android其他测试  232
10.1　Android兼容性测试  232
10.1.1　运行Android兼容性测试用例集合  232
10.1.2　兼容性测试计划说明  237
10.1.3　添加一个新的测试计划  238
10.1.4　添加一个新的测试用例  239
10.1.5　调查CTS测试失败  241
10.2　Android脚本编程环境  243
10.2.1　Android脚本环境简介  243
10.2.2　安装SL4A  243
10.2.3　为SL4A安装脚本引擎  244
10.2.4　编写SL4A脚本程序  246
10.2.5　在PC上调试脚本程序  250
10.3　国际化测试  251
10.4　模拟来电中断测试  254
10.5　本章小结  255
第11章　持续集成自动化测试  257
11.1　在Ant中集成Android自动化测试  257
11.1.1　Ant使用简介  257
11.1.2　Android应用编译过程  262
11.1.3　使用Ant编译Android工程  263
11.2　在Maven中集成Android自动化测试  268
11.2.1　使用Android Maven Archetypes创建新Android工程  268
11.2.2　Android Maven工程介绍  270
11.2.3　与设备交互  271
11.2.4　与模拟器交互  272
11.2.5　集成自动化测试  274
11.3　收集代码覆盖率  276
11.4　本章小结  280
第12章　Android功能调试工具  281
12.1　使用Eclipse调试Android应用  281
12.1.1　Eclipse调试技巧  282
12.1.2　使用JDB调试  294
12.1.3　设置Java远程调试  296
12.1.4　调试器原理简介  301
12.2　查看Android的logcat日志  302
12.2.1　过滤logcat日志  303
12.2.2　查看其他logcat内存日志  304
12.3　Android调试桥接  304
12.3.1　adb命令参考  306
12.3.2　执行Android shell命令  309
12.3.3　dumpsys  312
12.4　调试Android设备上的程序  317
12.4.1　调试命令行程序  317
12.4.2　调试Android应用  318
12.4.3　调试Maven Android插件启动的应用  321
12.5　本章小结  322
第13章　Android性能测试之分析操作日志  323
13.1　使用Traceview分析操作日志  326
13.1.1　记录应用操作日志  326
13.1.2　Traceview界面说明  328
13.1.3　使用Traceview分析并优化性能瓶颈  329
13.2　使用DDMS  334
13.2.1　使用DDMS  335
13.2.2　DDMS与调试器交互的原理  336
13.2.3　三种启动操作日志记录功能的方法  338
13.3　使用dmtracedump分析函数调用树  339
13.4　本章小结  341
第14章　分析Android内存问题  343
14.1　Android内存管理原理  343
14.1.1　垃圾内存回收算法  343
14.1.2　GC发现对象引用的方法  351
14.1.3　Android内存管理源码分析  352
14.1.4　Logcat中的GC信息  361
14.2　调查内存泄露工具  362
14.2.1　Shallow size和Retained size  362
14.2.2　支配树  363
14.3　分析Android内存泄露实例  364
14.3.1　在DDMS中检查示例问题程序的内存情况  366
14.3.2　使用MAT分析内存泄露  368
14.3.3　弱引用  372
14.3.4　MAT的其他界面使用方法  373
14.3.5　对象查询语言OQL（Object Query Language）  376
14.3.6　使用jHat分析内存文件  381
14.4　显示图片  382
14.4.1　Android应用加载大图片的最佳实践  386
14.4.2　跟踪对象创建  388
14.5　频繁创建小对象的问题  390
14.6　Finalizer的问题  393
14.7　本章小结  394
第15章　调试多线程和HTML 5应用  395
15.1　调试应用无响应问题  395
15.2　Android中的多线程  397
15.3　调试线程死锁  400
15.3.1　资源争用问题  400
15.3.2　线程同步机制  405
15.3.3　解决线程死锁问题  406
15.4　StrictMode  410
15.4.1　在应用中启用StrictMode  413
15.4.2　暂时禁用StrictMode  415
15.5　调试Android上的浏览器应用  416
15.5.1　在Android系统自带的浏览器上调试  416
15.5.2　在Chrome浏览器上调试  418
15.6　本章小结  422
第16章 　调试NDK程序  423
16.1　使用Eclipse调试Android NDK程序  423
16.2　在命令行中调试NDK程序  426
16.3　Android的C/C++调试器的工作原理  431
16.3.1　调试符号  433
16.3.2　源码  433
16.3.3　多线程调试的问题  433
16.4　本章小结  434
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android应用测试与调试实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android从入门到精通
目　录
第1篇　基础篇
第1章　Android快速入门	3
教学录像：1小时19分钟
1.1　什么是Android	4
1.1.1　平台特性	4
1.1.2　平台架构	4
1.1.3　Android市场	5
1.2　搭建Android开发环境	6
1.2.1　系统需求	6
1.2.2　JDK的下载	6
1.2.3　JDK的安装	8
1.2.4　Android SDK的下载与安装	10
1.2.5　Eclipse的下载与安装	16
1.2.6　Eclipse的汉化	17
1.2.7　ADT插件的安装及配置	20
1.3　第一个Android程序	24
1.3.1　创建Android应用程序	25
1.3.2　Android项目结构说明	26
1.3.3　运行Android应用程序	29
1.3.4　调试Android应用程序	30
1.3.5　Android应用开发流程	32
1.4　小结	32
1.5　实践与练习	32
第2章　Android模拟器与常用命令	33
教学录像：47分钟
2.1　使用Android模拟器	34
2.1.1　模拟器概述	34
2.1.2　Android虚拟设备和模拟器	34
2.1.3　Android模拟器启动与停止	36
2.1.4　控制模拟器	36
2.1.5　模拟器与磁盘镜像	37
2.1.6　Android 4.0模拟器介绍	38
2.1.7　模拟器限制	38
2.1.8　范例1：设置模拟器语言	38
2.1.9　范例2：设置时区和时间	40
2.1.10　范例3：设置模拟器桌面背景	40
2.2　SDK中常用命令	41
2.2.1　adb命令	43
2.2.2　android命令	45
2.2.3　emulator命令	47
2.2.4　mksdcard命令	48
2.2.5　范例1：在SD卡上创建/删除文件夹	49
2.2.6　范例2：使用DDMS透视图管理SD卡	50
2.3　经典范例	52
2.3.1　安装搜狗拼音输入法	52
2.3.2　卸载搜狗拼音输入法	53
2.3.3　使用模拟器拨打电话	54
2.4　小结	54
2.5　实践与练习	55
第3章　用户界面设计	56
教学录像：4小时57分钟
3.1　控制UI界面	57
3.1.1　使用XML布局文件控制UI界面	57
3.1.2　在代码中控制UI界面	59
3.1.3　使用XML和Java代码混合控制UI
界面	61
3.1.4　开发自定义的View	63
3.2　布局管理器	65
3.2.1　线性布局	66
3.2.2　表格布局	69
3.2.3　帧布局	72
3.2.4　相对布局	74
3.2.5　范例1：使用表格布局与线性布局实现
分类工具栏	76
3.2.6　范例2：布局个性游戏开始界面	80
3.3　基本组件	82
3.3.1　文本框与编辑框	82
3.3.2　按钮	88
3.3.3　单选按钮和复选框	91
3.3.4　图像视图	97
3.3.5　列表选择框	99
3.3.6　列表视图	102
3.3.7　日期、时间拾取器	106
3.3.8　计时器	108
3.3.9　范例1：实现跟踪鼠标单击状态的图片
按钮	109
3.3.10　范例2：实现带图标的ListView	110
3.4　经典范例	112
3.4.1　我同意游戏条款	112
3.4.2　猜猜鸡蛋放在哪只鞋子里	115
3.5　小结	119
3.6　实践与练习	119
第4章　高级用户界面设计	120
教学录像：2小时46分钟
4.1　高级组件	121
4.1.1　自动完成文本框	121
4.1.2　进度条	123
4.1.3　拖动条和星级评分条	126
4.1.4　选项卡	130
4.1.5　图像切换器	132
4.1.6　网格视图	134
4.1.7　画廊视图	138
4.1.8　范例1：显示在标题上的进度条	141
4.1.9　范例2：幻灯片式图片浏览器	143
4.2　消息提示框与对话框	146
4.2.1　使用Toast显示消息提示框	146
4.2.2　使用Notification在状态栏上显示通知	147
4.2.3　使用AlertDialog创建对话框	150
4.2.4　范例1：询问是否退出的对话框	155
4.2.5　范例2：带图标的列表对话框	157
4.3　经典范例	159
4.3.1　实现仿Windows 7图片预览窗格效果	159
4.3.2　状态栏中显示代表登录状态的图标	161
4.4　小结	164
4.5　实践与练习	165
第5章　基本程序单元Activity	166
教学录像：2小时4分钟
5.1　Activity概述	167
5.2　创建、配置、启动和关闭Activity	168
5.2.1　创建Activity	168
5.2.2　配置Activity	169
5.2.3　启动和关闭Activity	170
5.2.4　范例1：实现启动和关闭Activity	171
5.2.5　范例2：实现应用对话框主题的关于
Activity	173
5.3　多个Activity的使用	175
5.3.1　使用Bundle在Activity之间交换数据	175
5.3.2　调用另一个Activity并返回结果	177
5.3.3　范例1：实现根据身高计算标准体重	179
5.3.4　范例2：带选择头像的用户注册页面	182
5.4　使用Fragment	185
5.4.1　创建Fragment	186
5.4.2　在Activity中添加Fragment	186
5.5　经典范例	191
5.5.1　仿QQ客户端登录界面	191
5.5.2　带查看原图功能的图像浏览器	195
5.6　小结	198
5.7　实践与练习	198
第6章　Android应用核心Intent	199
教学录像：39分钟
6.1　Intent对象	200
6.1.1　组件名称（Component Name）	200
6.1.2　动作（Action）	200
6.1.3　数据（Data）	202
6.1.4　种类（Category）	203
6.1.5　额外（Extras）	204
6.1.6　标记（Flags）	204
6.1.7　范例1：在Activity间使用Intent传递
信息	204
6.1.8　范例2：返回系统Home桌面	207
6.2　Intent使用	208
6.2.1　Intent过滤器	209
6.2.2　范例1：使用包含预定义动作的隐式
Intent	211
6.2.3　范例2：使用包含自定义动作的隐式
Intent	213
6.3　经典范例	215
6.3.1　使用Intent拨打电话	215
6.3.2　使用Intent打开网页	217
6.4　小结	218
6.5　实践与练习	218
第7章　Android事件处理	219
教学录像：37分钟
7.1　事件处理概述	220
7.2　处理键盘事件	220
7.2.1　物理按键简介	220
7.2.2　范例1：屏蔽后退键	221
7.2.3　范例2：提示音量增加事件	222
7.3　处理触摸事件	223
7.3.1　范例1：按钮触摸事件	223
7.3.2　范例2：检测触摸事件	224
7.4　手势的创建与识别	225
7.4.1　手势的创建	225
7.4.2　手势的导出	226
7.4.3　手势的识别	226
7.5　经典范例	228
7.5.1　查看手势对应分值	228
7.5.2　使用手势输入数字	230
7.6　小结	231
7.7　实践与练习	231
第8章　资源访问	232
教学录像：2小时56分钟
8.1　字符串（string）资源	233
8.1.1　定义字符串资源文件	233
8.1.2　使用字符串资源	233
8.2　颜色（color）资源	234
8.2.1　颜色值的定义	234
8.2.2　定义颜色资源文件	234
8.2.3　使用颜色资源	235
8.3　尺寸（dimen）资源	235
8.3.1　Android支持的尺寸单位	235
8.3.2　定义尺寸资源文件	236
8.3.3　使用尺寸资源	236
8.3.4　范例1：通过字符串、颜色和尺寸资源
改变文字及样式	237
8.3.5　范例2：逐渐加宽的彩虹桥背景	239
8.4　布局（Layout）资源	240
8.5　数组（array）资源	241
8.5.1　定义数组资源文件	241
8.5.2　使用数组资源	241
8.6　Drawable资源	242
8.6.1　图片资源	242
8.6.2　StateListDrawable资源	245
8.6.3　范例1：使用9-Patch图片实现不失真
按钮背景	246
8.6.4　范例2：控制按钮是否可用	247
8.7　样式（style）和主题（theme）资源	249
8.7.1　样式资源	249
8.7.2　主题资源	250
8.8　原始XML资源	252
8.9　菜单（menu）资源	253
8.9.1　定义菜单资源文件	254
8.9.2　使用菜单资源	255
8.9.3　范例1：创建上下文菜单	256
8.9.4　范例2：创建带子菜单的选项菜单	258
8.10　Android程序国际化	260
8.11　经典范例	261
8.11.1　背景半透明效果的Activity	261
8.11.2　实现了国际化的选项菜单	263
8.12　小结	265
8.13　实践与练习	266
第2篇　高级篇
第9章　图形图像处理技术	269
教学录像：2小时56分钟
9.1　常用绘图类	270
9.1.1　Paint类	270
9.1.2　Canvas类	272
9.1.3　Bitmap类	273
9.1.4　BitmapFactory类	274
9.2　绘制2D图像	274
9.2.1　绘制几何图形	274
9.2.2　绘制文本	277
9.2.3　绘制路径	279
9.2.4　绘制图片	281
9.2.5　范例1：绘制Android的机器人	284
9.2.6　范例2：实现简易涂鸦板	285
9.3　为图形添加特效	290
9.3.1　旋转图像	290
9.3.2　缩放图像	292
9.3.3　倾斜图像	294
9.3.4　平移图像	295
9.3.5　使用BitmapShader渲染图像	296
9.3.6　范例1：实现带描边的圆角图片	298
9.3.7　范例2：实现放大镜效果	299
9.4　Android中的动画	301
9.4.1　实现逐帧动画	301
9.4.2　实现补间动画	302
9.4.3　范例1：忐忑的精灵	306
9.4.4　范例2：旋转、平移、缩放和透明度
渐变的补间动画	308
9.5　经典范例	310
9.5.1　在GridView中显示SD卡上的全部
图片	310
9.5.2　迷途奔跑的野猪	313
9.6　小结	316
9.7　实践与练习	316
第10章　多媒体应用开发	317
教学录像：1小时36分钟
10.1　播放音频与视频	318
10.1.1　使用MediaPlayer播放音频	318
10.1.2　使用SoundPool播放音频	322
10.1.3　使用VideoView播放视频	325
10.1.4　使用MediaPlayer和SurfaceView
播放视频	327
10.1.5　范例1：播放SD卡上的全部音频
文件	331
10.1.6　范例2：带音量控制的音乐播放器	336
10.2　控制相机拍照	337
10.3　经典范例	342
10.3.1　为游戏界面添加背景音乐和按键音	342
10.3.2　制作开场动画	346
10.4　小结	348
10.5　实践与练习	348
第11章　ContentProvider实现数据共享	349
教学录像：42分钟
11.1　Content Provider概述	350
11.1.1　数据模型	350
11.1.2　URI的用法	351
11.2　预定义Content Provider	351
11.2.1　查询数据	352
11.2.2　增加记录	353
11.2.3　增加新值	353
11.2.4　批量更新记录	353
11.2.5　删除记录	353
11.2.6　范例1：系统内置联系人的使用	354
11.2.7　范例2：查询联系人ID和姓名	354
11.3　自定义Content Provider	356
11.3.1　继承ContentProvider类	356
11.3.2　声明Content Provider	358
11.4　经典范例	359
11.4.1　查询联系人姓名和电话	359
11.4.2　自动补全联系人姓名	360
11.5　小结	363
11.6　实践与练习	363
第12章　线程与消息处理	364
教学录像：50分钟
12.1　实现多线程	365
12.1.1　创建线程	365
12.1.2　开启线程	366
12.1.3　线程的休眠	366
12.1.4　中断线程	366
12.1.5　范例1：通过实现Runnable接口来
创建线程	367
12.1.6　范例2：开启一个新线程播放背景
音乐	369
12.2　Handler消息传递机制	371
12.2.1　循环者（Looper）简介	371
12.2.2　消息处理类（Handler）简介	373
12.2.3　消息类（Message）简介	374
12.2.4　范例1：开启新线程获取网络图片
并显示到ImageView中	374
12.2.5　范例2：开启新线程实现电子广告牌	376
12.3　经典范例	378
12.3.1　多彩的霓虹灯	378
12.3.2　简易打地鼠游戏	380
12.4　小结	382
12.5　实践与练习	382
第13章　Service应用	383
教学录像：48分钟
13.1　Service概述	384
13.1.1　Service的分类	384
13.1.2　Service类中的重要方法	384
13.1.3　Service的声明	386
13.2　创建Started Service	387
13.2.1　继承IntentService类	388
13.2.2　继承Service类	389
13.2.3　启动服务	390
13.2.4　停止服务	391
13.2.5　实例1：继承IntentService输出当前
时间	391
13.2.6　实例2：继承Service输出当前时间	393
13.3　创建Bound Service	396
13.3.1　继承Binder类	397
13.3.2　使用Messenger类	399
13.3.3　绑定到服务	400
13.3.4　实例1：继承Binder类绑定服务显示
时间	401
13.3.5　实例2：使用Messenger类绑定服务
显示时间	404
13.4　管理Service的生命周期	407
13.5　经典范例	408
13.5.1　视力保护程序	408
13.5.2　查看当前运行服务信息	410
13.6　小结	412
13.7　实践与练习	412
第14章　网络编程及Internet应用	413
教学录像：1小时36分钟
14.1　通过HTTP访问网络	414
14.1.1　使用HttpURLConnection访问网络	414
14.1.2　使用HttpClient访问网络	422
14.1.3　范例1：从指定网站下载文件	427
14.1.4　范例2：访问需要登录后才能访问的
页面	430
14.2　使用WebView显示网页	436
14.2.1　使用WebView组件浏览网页	436
14.2.2　使用WebView加载HTML代码	437
14.2.3　让WebView支持JavaScript	439
14.3　经典范例	440
14.3.1　打造功能实用的网页浏览器	440
14.3.2　获取天气预报	443
14.4　小结	445
14.5　实践与练习	446
第3篇　项目实战篇
第15章　基于Android的家庭理财通	449
教学录像：51分钟
15.1　系统分析	450
15.1.1　需求分析	450
15.1.2　可行性分析	450
15.1.3　编写项目计划书	451
15.2　系统设计	452
15.2.1　系统目标	452
15.2.2　系统功能结构	453
15.2.3　系统业务流程	453
15.2.4　系统编码规范	454
15.3　系统开发及运行环境	455
15.4　数据库与数据表设计	456
15.4.1　数据库分析	456
15.4.2　创建数据库	456
15.4.3　创建数据表	457
15.5　创建项目	458
15.6　系统文件夹组织结构	460
15.7　公共类设计	460
15.7.1　数据模型公共类	460
15.7.2　Dao公共类	462
15.8　登录模块设计	467
15.8.1　设计登录布局文件	467
15.8.2　登录功能的实现	468
15.8.3　退出登录窗口	469
15.9　系统主窗体设计	470
15.9.1　设计系统主窗体布局文件	470
15.9.2　显示各功能窗口	471
15.9.3　定义文本及图片组件	473
15.9.4　定义功能图标及说明文字	473
15.9.5　设置功能图标及说明文字	473
15.10　收入管理模块设计	475
15.10.1　设计新增收入布局文件	475
15.10.2　设置收入时间	479
15.10.3　添加收入信息	480
15.10.4　重置新增收入窗口中的各个控件	481
15.10.5　设计收入信息浏览布局文件	481
15.10.6　显示所有的收入信息	482
15.10.7　单击指定项时打开详细信息	483
15.10.8　设计修改/删除收入布局文件	484
15.10.9　显示指定编号的收入信息	487
15.10.10　修改收入信息	489
15.10.11　删除收入信息	489
15.11　便签管理模块设计	490
15.11.1　设计新增便签布局文件	490
15.11.2　添加便签信息	492
15.11.3　清空便签文本框	493
15.11.4　设计便签信息浏览布局文件	493
15.11.5　显示所有的便签信息	495
15.11.6　单击指定项时打开详细信息	496
15.11.7　设计修改/删除便签布局文件	497
15.11.8　显示指定编号的便签信息	499
15.11.9　修改便签信息	500
15.11.10　删除便签信息	500
15.12　系统设置模块设计	500
15.12.1　设计系统设置布局文件	501
15.12.2　设置登录密码	502
15.12.3　重置密码文本框	503
15.13　运行项目	503
15.14　将程序安装到Android手机上	504
15.15　开发中常见问题与解决方法	506
15.15.1　程序在装有Android系统的手机上
无法运行	506
15.15.2　无法将最新修改在Android模拟器
中体现	506
15.15.3　退出系统后还能使用记录的密码登录	506
15.16　小结	507
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android从入门到精通
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android 2.0游戏开发实战宝典
第1篇  Android游戏兵法——谋攻篇  第1章  Android平台简介    1.1  Android的来龙去脉    1.2  掀起Android的盖头来      1.2.1  选择Android的理由      1.2.2  Android的应用程序框架    1.3  Android开发环境的搭建      1.3.1  SDK的下载及安装      1.3.2  Eclipse集成开发环境的搭建      1.3.3  虚拟设备的创建与模拟器的运行      1.3.4  第一个Android程序      1.3.5  Android程序的监控与调试    1.4  小结  第2章  Android游戏开发之前台渲染    2.1  创建Android用户界面      2.1.1  布局管理      2.1.2  常用控件及其事件处理    2.2  图形与动画在Android中的实现      2.2.1  简单图形的绘制      2.2.2  贴图的艺术      2.2.3  自定义动画的播放    2.3  Android平台下的多媒体开发      2.3.1  音频的播放      2.3.2  视频的播放      2.3.3  Camera图像采集    2.4  小结  第3章  Android游戏开发之交互式通信    3.1  Android应用程序的基本组件      3.1.1  Activity组件      3.1.2  Service组件      3.1.3  Broadcast Receiver组件      3.1.4  Content Provider组件      3.1.5  AndroidManifest.xml文件简介    3.2  应用程序的内部通信      3.2.1  Handler类简介      3.2.2  使用Handler进行内部通信    3.3  应用程序组件之间的通信      3.3.1  Intent类简介      3.3.2  IntentFilter类简介      3.3.3  示例1：与Android系统组件通信      3.3.4  示例2：应用程序组件间通信示例Activity部分的开发      3.3.5  示例3：应用程序组件间通信示例Service部分的开发    3.4  小结  第4章  Android游戏开发之数据存储和传感器    4.1  数据存储在Android平台的实现      4.1.1  私有文件夹文件的写入与读取      4.1.2  读取Resources和Assets中的文件      4.1.3  轻量级数据库SQLite简介      4.1.4  SQLite的使用示例      4.1.5  Content Provider的使用      4.1.6  Preferences的使用    4.2  Android平台下传感器应用的开发      4.2.1  传感器应用的开发流程      4.2.2  常用传感器简介      4.2.3  传感器应用开发示例      4.2.4  使用SensorSimulator模拟传感器变化      4.2.5  使用新版本的API开发传感器应用    4.3  小结  第5章  Android游戏开发之网络编程  第6章  不一样的游戏，不一样的体验  第7章  游戏背后的数学与物理  第8章  游戏中的人工智能  第9章  游戏开发小秘技第2篇  Android游戏兵法——实战篇  第10章  体育游戏——疯狂足球  第11章  益智游戏——推箱子  第12章  滚屏动作游戏——太空保卫战  第13章  棋牌游戏——中国象棋人机对弈  第14章  D物理传感器游戏——小球快跑  第15章  冒险游戏——胜利大逃亡  第16章  策略游戏——回到战国
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android 2.0游戏开发实战宝典
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>疯狂Android讲义
第1章　Android应用和开发环境	1
1.1　Android的发展和历史	2
1.1.1　Android的发展和简介	2
1.1.2　Android 5.x平台架构及特性	3
1.2　搭建Android开发环境	5
1.2.1　安装Android Studio	5
1.2.2　下载和安装Android SDK	8
1.2.3　安装运行、调试环境	11
1.3　Android常用开发工具的用法	16
1.3.1　在命令行创建、删除和浏览AVD	16
1.3.2　使用Android模拟器（Emulator）	17
1.3.3　使用Monitor进行调试	18
1.3.4　Android Debug Bridge（ADB）的用法	19
1.3.5　使用mksdcard管理虚拟SD卡	20
1.4　开始第一个Android应用	21
1.4.1　使用Android Studio开发第一个Android应用	21
1.4.2　通过Andorid Studio运行Android应用	24
1.5　Android应用结构分析	25
1.5.1　创建一个Android应用	25
1.5.2　自动生成的R.java	28
1.5.3　res目录说明	29
1.5.4　Android应用的清单文件：AndroidManifest.xml	30
1.5.5　应用程序权限说明	31
1.6　Android应用的基本组件介绍	32
1.6.1　Activity和View	32
1.6.2　Service	33
1.6.3　BroadcastReceiver	33
1.6.4　ContentProvider	33
1.6.5　Intent和IntentFilter	34
1.7　签名Android应用程序	35
1.7.1　使用Android Studio对Android应用签名	35
1.7.2　使用命令对APK包签名	36
1.8　本章小结	37
第2章　Android应用的界面编程	38
2.1　界面编程与视图（View）组件	39
2.1.1　视图组件与容器组件	39
2.1.2　使用XML布局文件控制UI界面	44
2.1.3　在代码中控制UI界面	44
实例：用编程的方式开发UI界面	44
2.1.4　使用XML布局文件和Java代码
混合控制UI界面	46
实例：简单图片浏览器	46
2.1.5　开发自定义View	47
实例：跟随手指的小球	48
2.2　第1组UI组件：布局管理器	49
2.2.1　线性布局	50
2.2.2　表格布局	52
实例：丰富的表格布局	53
2.2.3　帧布局	55
实例：霓虹灯效果	57
2.2.4　相对布局	58
实例：梅花布局效果	59
2.2.5　网格布局	60
实例：计算器界面	61
2.2.6　绝对布局	62
实例：登录界面	63
2.3　第2组UI组件：TextView及其子类	64
2.3.1　文本框（TextView）与编辑框（EditText）的功能和用法	64
实例：不同颜色、字体、带链接的文本	67
实例：圆角边框、渐变背景的TextView	68
2.3.2　EditText的功能与用法	70
实例：用户友好的输入界面	70
2.3.3　按钮（Button）组件的功能与用法	72
实例：按钮、圆形按钮、带文字的图片按钮	72
2.3.4　使用9Patch图片作为背景	73
2.3.5　单选钮（RadioButton）和复选框（CheckBox）的功能与用法	74
实例：利用单选钮、复选框获取用户信息	75
2.3.6　状态开关按钮（ToggleButton）和开关（Switch）的功能与用法	77
实例：动态控制布局	77
2.3.7　时钟（AnalogClock和TextClock）的功能与用法	79
实例：手机里的“劳力士”	79
2.3.8　计时器（Chronometer）	80
2.4　第3组UI组件：ImageView及其子类	81
实例：图片浏览器	83
实例：强大的图片按钮	86
实例：使用QuickContactBadge关联联系人	87
2.5　第4组UI组件：AdapterView及子类	88
2.5.1　列表视图（ListView）和ListActivity	89
实例：改变分隔条、基于数组的ListView	90
2.5.2　Adapter接口及实现类	91
实例：使用ArrayAdapter创建ListView	91
实例：基于ListActivity实现列表	93
实例：使用SimpleAdapter创建ListView	94
实例：扩展BaseAdapter实现不存储列表项的ListView	97
2.5.3　自动完成文本框（AutoCompleteTextView）的功能与用法	98
2.5.4　网格视图（GridView）的功能与用法	100
实例：带预览的图片浏览器	101
2.5.5　可展开的列表组件（ExpandableListView）	103
2.5.6　Spinner的功能与用法	106
实例：让用户选择	106
2.5.7　AdapterViewFlipper的功能与用法	108
实例：自动播放的图片库	108
2.5.8　StackView的功能与用法	111
实例：叠在一起的图片	111
2.6　第5组UI组件：ProgressBar及其子类	112
2.6.1　进度条（ProgressBar）的功能与用法	113
实例：显示在标题上的进度条	116
2.6.2　拖动条（SeekBar）的功能与用法	117
实例：通过拖动滑块来改变图片的透明度	117
2.6.3　星级评分条（RatingBar）的功能与用法	118
实例：通过星级改变图片的透明度	119
2.7　第6组UI组件：ViewAnimator及其子类	120
2.7.1　ViewSwitcher的功能与用法	120
实例：仿Android系统Launcher界面	120
2.7.2　图像切换器（ImageSwitcher）的功能与用法	125
实例：支持动画的图片浏览器	125
2.7.3　文本切换器（TextSwitcher）的功能与用法	127
2.7.4　ViewFlipper的功能与用法	129
实例：自动播放的图片库	129
2.8　各种杂项组件	131
2.8.1　使用Toast显示提示信息框	131
实例：带图片的消息提示	131
2.8.2　日历视图（CalendarView）组件的功能和用法	133
实例：选择您的生日	133
2.8.3　日期、时间选择器（DatePicker和TimePicker）的功能和用法	134
实例：用户选择日期、时间	135
2.8.4　数值选择器（NumberPicker）的功能与用法	137
实例：选择您意向的价格范围	137
2.8.5　搜索框（SearchView）的功能与用法	139
实例：搜索	139
2.8.6　选项卡（TabHost）的功能和用法	141
实例：通话记录界面	141
2.8.7　滚动视图（ScrollView）的功能和用法	143
实例：可垂直和水平滚动的视图	144
2.8.8　Notification的功能与用法	144
实例：加薪通知	145
2.9　第7组UI组件：对话框	146
2.9.1　使用AlertDialog创建对话框	147
实例：显示提示消息的对话框	147
实例：简单列表项对话框	149
实例：单选列表项对话框	149
实例：多选列表项对话框	150
实例：自定义列表项对话框	151
实例：自定义View对话框	152
2.9.2　对话框风格的窗口	154
2.9.3　使用PopupWindow	155
2.9.4　使用DatePickerDialog、TimePickerDialog	156
2.9.5　使用ProgressDialog创建进度对话框	158
2.10　菜单	160
2.10.1　选项菜单和子菜单（SubMenu）	161
2.10.2　使用监听器来监听菜单事件	164
2.10.3　创建多选菜单项和单选菜单项	164
2.10.4　设置与菜单项关联的Activity	165
2.10.5　上下文菜单	166
2.10.6　使用XML文件定义菜单	167
实例：使用XML资源文件定义菜单	168
2.10.7　使用PopupMenu创建弹出式菜单	171
2.11　使用活动条（ActionBar）	173
2.11.1　启用ActionBar	173
2.11.2　使用ActionBar显示选项菜单项	174
2.11.3　启用程序图标导航	176
2.11.4　添加Action View	177
实例：“标题”上的时钟	177
2.11.5　使用ActionBar实现Tab导航	178
实例：ActionBar结合Fragment实现Tab导航	179
实例：Android 3.0以前的Fragment支持	182
2.11.6　使用ActionBar实现下拉式导航	185
实例：ActionBar结合Fragment实现下拉式导航	185
2.12　本章小结	187
第3章　Android的事件处理	188
3.1　Android事件处理概述	189
3.2　基于监听的事件处理	189
3.2.1　监听的处理模型	189
3.2.2　事件和事件监听器	192
实例：控制飞机移动	192
3.2.3　内部类作为事件监听器类	195
3.2.4　外部类作为事件监听器类	195
3.2.5　Activity本身作为事件监听器类	197
3.2.6　匿名内部类作为事件监听器类	197
3.2.7　直接绑定到标签	198
3.3　基于回调的事件处理	199
3.3.1　回调机制与监听机制	199
3.3.2　基于回调的事件传播	201
3.3.3　重写onTouchEvent方法响应触摸屏事件	202
实例：通过回调实现跟随手指的小球	203
3.4　响应系统设置的事件	204
3.4.1　Configuration类简介	204
实例：获取系统设备状态	205
3.4.2　重写onConfigurationChanged方法响应系统设置更改	206
实例：监听屏幕方向的改变	206
3.5　Handler消息传递机制	208
3.5.1　Handler类简介	208
实例：自动播放动画	209
3.5.2　Handler、Loop、MessageQueue的工作原理	210
实例：使用新线程计算质数	211
3.6　异步任务（AsyncTask）	213
实例：使用异步任务执行下载	214
3.7　本章小结	217
第4章　深入理解Activity与Fragment	218
4.1　建立、配置和使用Activity	219
4.1.1　Activity	219
实例：用LauncherActivity开发启动Activity的列表	220
实例：使用ExpandableListActivity
实现可展开的Activity	221
实例：PreferenceActivity结合PreferenceFragment实现参数设置界面	223
4.1.2　配置Activity	227
4.1.3　启动、关闭Activity	229
4.1.4　使用Bundle在Activity之间交换数据	231
实例：用第二个Activity处理注册信息	232
4.1.5　启动其他Activity并返回结果	235
实例：用第二个Activity让用户选择信息	235
4.2　Activity的回调机制	239
4.3　Activity的生命周期与加载模式	240
4.3.1　Activity的生命周期演示	240
4.3.2　Activity与Servlet的相似性和区别	243
4.3.3　Activity的4种加载模式	244
4.4　Fragment详解	249
4.4.1　Fragment概述及其设计初衷	249
4.4.2　创建Fragment	250
实例：开发显示图书详情的Fragment	251
实例：创建ListFragment	253
4.4.3　Fragment与Activity通信	254
4.4.4　Fragment管理与Fragment事务	256
实例：开发兼顾屏幕分辨率的应用	257
4.5　Fragment的生命周期	260
4.6　本章小结	264
第5章　使用Intent和IntentFilter进行通信	265
5.1　Intent对象简述	266
5.2　Intent的属性及intent-filter配置	267
5.2.1　Component属性	267
5.2.2　Action、Category属性与intent-filter配置	269
5.2.3　指定Action、Category调用系统Activity	273
实例：查看并获取联系人电话	274
实例：返回系统Home桌面	277
5.2.4　Data、Type属性与intent-filter配置	278
实例：使用Action、Data属性启动系统Activity	284
5.2.5　Extra属性	286
5.2.6　Flag属性	286
5.3　使用Intent创建Tab页	287
5.4　本章小结	288
第6章　Android应用的资源	289
6.1　应用资源概述	290
6.1.1　资源的类型以及存储方式	290
6.1.2　使用资源	291
6.2　字符串、颜色、尺寸资源	293
6.2.1　颜色值的定义	293
6.2.2　定义字符串、颜色、尺寸资源文件	294
6.2.3　使用字符串、颜色、尺寸资源	295
6.3　数组（Array）资源	298
6.4　使用Drawable资源	300
6.4.1　图片资源	300
6.4.2　StateListDrawable资源	301
实例：高亮显示正在输入的文本框	301
6.4.3　LayerDrawable资源	302
实例：定制拖动条的外观	303
6.4.4　ShapeDrawable资源	304
实例：椭圆形、渐变背景的文本框	305
6.4.5　ClipDrawable资源	306
实例：徐徐展开的风景	306
6.4.6　AnimationDrawable资源	308
6.5　属性动画（Property Animation）资源	310
实例：不断渐变的背景色	311
6.6　使用原始XML资源	312
6.6.1　定义原始XML资源	312
6.6.2　使用原始XML文件	313
6.7　使用布局（Layout）资源	314
6.8　使用菜单（Menu）资源	315
6.9　样式（Style）和主题（Theme）资源	315
6.9.1　样式资源	315
6.9.2　主题资源	316
实例：给所有窗口添加边框、背景	317
6.9.3　Android 5.0新增的Material主题	318
6.10　属性（Attribute）资源	318
6.11　使用原始资源	321
6.12　国际化和资源自适应	323
6.12.1　Java国际化的思路	323
6.12.2　Java支持的国家和语言	324
6.12.3　完成程序国际化	324
6.12.4　为Android应用提供国际化资源	326
6.12.5　国际化Android应用	327
6.13　自适应不同屏幕的资源	329
6.14　本章小结	332
第7章　图形与图像处理	333
7.1　使用简单图片	334
7.1.1　使用Drawable对象	334
7.1.2　Bitmap和BitmapFactory	334
7.2　绘图	337
7.2.1　Android绘图基础：Canvas、Paint等	337
7.2.2　Path类	341
7.2.3　绘制游戏动画	344
实例：采用双缓冲实现画图板	344
实例：弹球游戏	348
7.3　图形特效处理	351
7.3.1　使用Matrix控制变换	351
实例：移动游戏背景	353
7.3.2　使用drawBitmapMesh扭曲图像	355
实例：可揉动的图片	356
7.3.3　使用Shader填充图形	358
7.4　逐帧（Frame）动画	360
7.4.1　AnimationDrawable与逐帧动画	360
实例：在指定点爆炸	362
7.5　补间（Tween）动画	364
7.5.1　Tween动画与Interpolator	364
7.5.2　位置、大小、旋转度、透明度改变的补间动画	366
实例：蝴蝶飞舞	368
7.5.3　自定义补间动画	369
7.6　属性动画	373
7.6.1　属性动画的API	373
7.6.2　使用属性动画	375
实例：大珠小珠落玉盘	379
7.7　使用SurfaceView实现动画	383
7.7.1　SurfaceView的绘图机制	383
实例：基于SurfaceView开发示波器	386
7.8　本章小结	388
第8章　Android数据存储与IO	389
8.1　使用SharedPreferences	390
8.1.1　SharedPreferences与Editor简介	390
8.1.2　SharedPreferences的存储位置和格式	391
实例：记录应用程序的使用次数	393
8.2　File存储	393
8.2.1　openFileOutput和openFileInput	393
8.2.2　读写SD卡上的文件	396
实例：SD卡文件浏览器	399
8.3　SQLite数据库	402
8.3.1　SQLiteDatabase简介	402
8.3.2　创建数据库和表	404
8.3.3　使用SQL语句操作SQLite数据库	404
8.3.4　使用sqlite3工具	406
8.3.5　使用特定方法操作SQLite数据库	408
8.3.6　事务	410
8.3.7　SQLiteOpenHelper类	411
实例：英文生词本	412
8.4　手势（Gesture）	415
8.4.1　手势检测	415
实例：通过手势缩放图片	417
实例：通过手势实现翻页效果	419
8.4.2　增加手势	422
8.4.3　识别用户手势	425
8.5　自动朗读（TTS）	427
8.6　本章小结	429
第9章　使用ContentProvider实现数据共享	431
9.1　数据共享标准：ContentProvider	432
9.1.1　ContentProvider简介	432
9.1.2　Uri简介	433
9.1.3　使用ContentResolver操作数据	434
9.2　开发ContentProvider	435
9.2.1　ContentProvider与ContentResolver的关系	435
9.2.2　开发ContentProvider子类	436
9.2.3　配置ContentProvider	437
9.2.4　使用ContentResolver调用方法	438
9.2.5　创建ContentProvider的说明	440
实例：使用ContentProvider共享生词本数据	441
9.3　操作系统的ContentProvider	446
9.3.1　使用ContentProvider管理联系人	446
9.3.2　使用ContentProvider管理多媒体内容	452
9.4　监听ContentProvider的数据改变	455
9.4.1　ContentObserver简介	455
实例：监听用户发出的短信	456
9.5　本章小结	457
第10章　Service与BroadcastReceiver	458
10.1　Service简介	459
10.1.1　创建、配置Service	459
10.1.2　启动和停止Service	461
10.1.3　绑定本地Service并与之通信	462
10.1.4　Service的生命周期	466
10.1.5　使用IntentService	467
10.2　电话管理器（TelephonyManager）	470
实例：获取网络和SIM卡信息	470
实例：监听手机来电	472
10.3　短信管理器（SmsManager）	473
实例：发送短信	473
实例：短信群发	474
10.4　音频管理器（AudioManager）	477
10.4.1　AudioManager简介	477
实例：使用AudioManager控制手机音频	477
10.5　振动器（Vibrator）	479
10.5.1　Vibrator简介	479
10.5.2　使用Vibrator控制手机振动	479
10.6　手机闹钟服务（AlarmManager）	480
10.6.1　AlarmManager简介	480
10.6.2　设置闹钟	481
实例：定时更换壁纸	483
10.7　接收广播消息	485
10.7.1　BroadcastReceiver简介	485
10.7.2　发送广播	486
10.7.3　有序广播	488
实例：基于Service的音乐播放器	490
10.8　接收系统广播消息	495
实例：开机自动运行的Service	495
实例：短信提醒	496
实例：手机电量提示	497
10.9　本章小结	498
第11章　多媒体应用开发	499
11.1　音频和视频的播放	500
11.1.1　使用MediaPlayer播放音频	500
11.1.2　音乐特效控制	503
实例：音乐的示波器、均衡、重低音和音场	505
11.1.3　使用SoundPool播放音效	511
11.1.4　使用VideoView播放视频	513
11.1.5　使用MediaPlayer和SurfaceView播放视频	515
11.2　使用MediaRecorder录制音频	518
实例：录制音乐	519
11.3　控制摄像头拍照	521
11.3.1　使用Android 5.0的Camera v2拍照	521
实例：拍照时自动对焦	522
11.3.2　录制视频短片	530
实例：录制生活短片	530
11.4　Android 5.0新增的屏幕捕捉	533
11.5　本章小结	536
第12章　OpenGL与3D开发	537
12.1　3D图形与3D开发的基本知识	538
12.2　OpenGL和OpenGL ES简介	539
12.3　绘制2D图形	540
12.3.1　在Android应用中使用OpenGL ES	540
12.3.2　绘制平面上的多边形	542
12.3.3　旋转	548
12.4　绘制3D图形	550
12.4.1　构建3D图形	550
12.4.2　应用纹理贴图	554
12.5　本章小结	559
第13章　Android网络应用	560
13.1　基于TCP协议的网络通信	561
13.1.1　TCP协议基础	561
13.1.2　使用ServerSocket创建TCP服务器端	562
13.1.3　使用Socket进行通信	563
13.1.4　加入多线程	567
13.2　使用URL访问网络资源	573
13.2.1　使用URL读取网络资源	573
13.2.2　使用URLConnection提交请求	575
13.3　使用HTTP访问网络	580
13.3.1　使用HttpURLConnection	580
实例：多线程下载	580
13.3.2　使用Apache HttpClient	585
实例：访问被保护资源	586
13.4　Android 5.0增强的WebView	590
13.4.1　使用WebView浏览网页	590
实例：迷你浏览器	590
13.4.2　使用WebView加载HTML代码	591
13.4.3　使用WebView中的JavaScript调用Android方法	592
13.5　使用Web Service进行网络编程	595
13.5.1　Web Service平台概述	595
13.5.2　使用Android应用调用Web Service	597
实例：调用基于CXF的Web Service	598
13.6　本章小结	601
第14章　管理Android手机桌面	602
14.1　管理手机桌面	603
14.1.1　删除桌面组件	603
14.1.2　添加桌面组件	603
14.2　改变手机壁纸	604
14.2.1　开发动态壁纸（Live Wallpapers）	605
实例：蜿蜒壁纸	605
14.3　通过程序添加快捷方式	609
实例：让程序占领桌面	609
14.4　管理桌面控件	611
14.4.1　开发桌面控件	611
实例：液晶时钟	614
14.4.2　显示带数据集的桌面控件	616
14.5　本章小结	620
第15章　传感器应用开发	621
15.1　利用Android的传感器	622
15.2　Android的常用传感器	624
15.2.1　方向传感器	624
15.2.2　陀螺仪传感器	625
15.2.3　磁场传感器	625
15.2.4　重力传感器	625
15.2.5　线性加速度传感器	626
15.2.6　温度传感器	626
15.2.7　光传感器	626
15.2.8　压力传感器	626
15.2.9　Android 5.0新增的心率传感器	629
15.3　传感器应用案例	630
实例：指南针	630
实例：水平仪	631
15.4　本章小结	636
第16章　GPS应用开发	637
16.1　支持GPS的核心API	638
16.2　获取LocationProvider	640
16.2.1　获取所有可用的LocationProvider	640
16.2.2　通过名称获得指定LocationProvider	641
16.2.3　根据Criteria获得LocationProvider	641
16.3　获取定位信息	642
16.3.1　通过模拟器发送GPS信息	642
16.3.2　获取定位数据	642
16.4　临近警告	644
16.5　本章小结	646
第17章　整合高德Map服务	647
17.1　调用高德Map服务	648
17.1.1　获取Map API Key	648
17.1.2　高德地图入门	650
17.2　根据GPS信息在地图上定位	654
17.3　执行定位	660
17.3.1　地址解析与反向地址解析	660
17.3.2　执行定位	662
17.4　GPS导航	665
17.5　本章小结	669
第18章　合金弹头	670
18.1　合金弹头游戏简介	671
18.2　开发游戏界面组件	671
18.2.1　游戏界面分析	671
18.2.2　实现“怪物”类	672
18.2.3　实现怪物管理类	679
18.2.4　实现“子弹”类	683
18.2.5　实现“角色”类	686
18.3　实现绘图工具类	691
18.4　加载、管理游戏图片	696
18.5　实现游戏界面	699
18.5.1　实现游戏Activity	699
18.5.2　实现主视图	700
18.6　本章小结	710
第19章　电子拍卖系统	711
19.1　系统功能简介和架构设计	712
19.1.1　系统功能简介	712
19.1.2　系统架构设计	713
19.2　JSON简介	714
19.2.1　使用JSON语法创建对象	715
19.2.2　使用JSON语法创建数组	716
19.2.3　Java的JSON支持	717
19.3　发送请求的工具类	717
19.4　用户登录	719
19.4.1　处理登录的Servlet	719
19.4.2　用户登录客户端	720
19.5　查看流拍物品	728
19.5.1　查看流拍物品的Servlet	728
19.5.2　查看流拍物品客户端	729
19.6　管理物品种类	734
19.6.1　浏览物品种类的Servlet	734
19.6.2　查看物品种类	735
19.6.3　添加种类的Servlet	740
19.6.4　添加物品种类	740
19.7　管理拍卖物品	742
19.7.1　查看自己的拍卖物品的Servlet	743
19.7.2　查看自己的拍卖物品	743
19.7.3　添加拍卖物品的Servlet	747
19.7.4　添加拍卖物品	748
19.8　参与竞拍	753
19.8.1　选择物品种类	754
19.8.2　根据种类浏览物品的Servlet	755
19.8.3　根据种类浏览物品	756
19.8.4　参与竞价的Servlet	758
19.8.5　参与竞价	758
19.9　权限控制	763
19.10　本章小结	765
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>疯狂Android讲义
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android开发秘籍
第1 章  Android 概述　　 1
1.1  Android 演化史　　1
1.2  Android 的两面性　　2
1.3  运行Android 的设备　　 2
1.3.1  HTC 系列机型　　 4
1.3.2  摩托罗拉系列机型　　 4
1.3.3  三星系列机型　　 4
1.3.4  平板电脑　　 5
1.3.5  其他设备　　 5
1.4  Android 设备的硬件差异　　 5
1.4.1  屏幕　　5
1.4.2  用户输入方式　　 6
1.4.3  传感器　　 6
1.5  Android 的特点　　 8
1.5.1  多进程和应用程序微件　　 8
1.5.2  触摸、手势和多点触控　　 8
1.5.3  硬键盘和软键盘　　 8
1.6  Android 开发　　 8
1.6.1  如何使用本书中的秘诀　　 8
1.6.2  好好设计应用程序　　 9
1.6.3  保持向前兼容　　 9
1.6.4  健壮性　　10
1.7  软件开发工具包　　 10
1.7.1  安装与更新　　 10
1.7.2  软件特性和API 级别　　 11
1.7.3  利用模拟器或真机调试程序　　 12
1.7.4  使用Android 调试桥 　　13
1.7.5  签名和发布应用　　 14
1.8  Android Market 　　 14
1.8.1  最终用户许可协议　　 14
1.8.2  提升应用程序的曝光率　　 15
1.8.3  脱颖而出　　 15
1.8.4  为应用程序收费　　 15
1.8.5  管理评论和更新　　 16
1.8.6  Android Market 的候补之选　　 17
第2 章  应用程序基础知识：activity 和intent 　　 18
2.1  Android 应用程序预览　　 18
2.1.1  秘诀1：创建工程并新建activity 　　 19
2.1.2  工程目录结构及自动生成内容　　 20
2.1.3  Android 包和Manifest 清单文件　　 22
2.1.4  重命名应用程序中的部分文件 　　23
2.2  Activity 的生命周期　　 23
2.2.1  秘诀2：使用其他的生命周期方法　　24
2.2.2  秘诀3：强制执行单任务模式　　 26
2.2.3  秘诀4：强制屏幕方向 　　26
2.2.4  秘诀5：保存和恢复activity信息　　 27
2.3  多个activity 　　28
2.3.1  秘诀6：使用按钮和文本框　　 28
2.3.2  秘诀7：通过事件启动另外一个activity 　　 29
2.3.3  秘诀8：将语音转换成文本并启动activity 显示结果　　 32
2.3.4  秘诀9：实现选择列表 　　34
2.3.5  秘诀10：使用隐式intent 创建activity 　　 35
2.3.6  秘诀11：在activity 间传递基本数据类型　　 37
第3 章  线程、服务、receiver 以及alert 对话框　　 40
3.1  线程　　 40
3.1.1  秘诀12：启动一个辅助线程　　40
3.1.2  秘诀13：创建实现runnable接口的activity 　　 44
3.1.3  秘诀14：设置线程优先级　　 45
3.1.4  秘诀15：取消线程　　 45
3.1.5  秘诀16：在两个应用程序之间共享线程　　 46
3.2  线程之间的消息机制：handler　　 46
3.2.1  秘诀17：从主线程调度runnable 任务　　 46
3.2.2  秘诀18：使用倒数计时器 　　49
3.2.3  秘诀19：处理耗时的初始化工作　　50
3.3  服务　　51
3.4  添加broadcast receiver 　　 56
3.5  应用微件　　 58
3.6  alert 对话框　　 60
3.6.1  秘诀23：使用Toast 在屏幕上显示简短消息　　 61
3.6.2  秘诀24：使用alert 对话框 　　61
3.6.3  秘诀25：在状态栏中显示通知 　　62
第4 章  用户界面布局　　 65
4.1  资源目录及其基本属性　　 65
4.2  view 和viewGroup　　 67
4.2.1  秘诀27：利用Eclipse 编辑器生成布局　　 68
4.2.2  秘诀28：控制UI 元素的宽度和高度　　 71
4.2.3  秘诀29：设置相对布局和布局ID　　 73
4.2.4  秘诀30：通过编程声明布局　　 74
4.2.5  秘诀31：使用独立线程更新布局　　75
4.3  文本操作　　 78
4.3.1  秘诀32：设置和更改文本属性 　　79
4.3.2  秘诀33：提供文本输入　　 81
4.3.3  秘诀34：创建表单　　82
4.4  其他控件：从按钮到拖动条 　　83
4.4.1  秘诀35：在表格布局中使用图像按钮　　 83
4.4.2  秘诀36：使用复选框和开关按钮　　 86
4.4.3  秘诀37：使用单选按钮 　　90
4.4.4  秘诀38：创建下拉菜单 　　90
4.4.5  秘诀39：使用进度条　　 92
4.4.6  秘诀40：使用拖动条 　　94
第5 章  用户界面事件　　 97
5.1  事件处理器和事件监听器　　 97
5.1.1  秘诀41：截取物理按键事件　　97
5.1.2  秘诀42：创建菜单 　　100
5.1.3  秘诀43：在XML 文件中定义菜单　　 104
5.1.4  秘诀44：使用搜索键　　 105
5.1.5  秘诀45：响应触摸事件 　　107
5.1.6  秘诀46：监听滑动手势 　　109
5.1.7  秘诀47：使用多点触控 　　110
5.2  高级用户界面库　　113
5.2.1  秘诀48：使用手势 　　114
5.2.2  秘诀49：绘制3D 图像 　　117
第6 章  多媒体技术　　 122
6.1  图像　　 123
6.2  音频　　 128
6.2.1  秘诀51：选取和播放音频文件 　　128
6.2.2  秘诀52：录制音频文件　　 131
6.2.3  秘诀53：处理原始音频 　　132
6.2.4  秘诀54：有效使用音频资源　　 136
6.2.5  秘诀55：添加媒体资源并更新路径　　 137
6.3  视频　　138
第7 章  硬件接口　　 140
7.1  照相机　　 140
7.2  其他传感器　　 145
7.2.1  秘诀57：获取设备旋转姿态　　146
7.2.2  秘诀58：使用温度传感器和光传感器　　 149
7.3  电话　　150
7.3.1  秘诀59：使用电话管理器　　150
7.3.2  秘诀60：监听电话状态 　　152
7.3.3  秘诀61：拨打电话号码 　　154
7.4  蓝牙　　154
7.4.1  秘诀62：打开蓝牙 　　155
7.4.2  秘诀63：搜索蓝牙设备 　　155
7.4.3  秘诀64：与已绑定的蓝牙设备配对　　 156
7.4.4  秘诀65：打开蓝牙套接字　　156
7.4.5  秘诀66：使用设备振动功能　　 159
7.4.6  秘诀67：访问无线网络 　　159
第8 章  网络通信　　 161
8.1  使用短信息　　 161
8.2  使用Web 内容　　 169
8.2.1  秘诀69：定制Web 浏览器 　　169
8.2.2  秘诀70：使用HTTP GET请求　　170
8.2.3  秘诀71：使用HTTP POST请求　　174
8.3  社交网络　　174
第9 章  数据存储方法　　 184
9.1  shared preferences 　　184
9.1.1  秘诀73：创建和检索sharedpreferences 　　 184
9.1.2  秘诀74：使用preferences框架　　 185
9.1.3  秘诀75：基于Stored Data改变用户界面　　 187
9.1.4  秘诀76：添加最终用户许可协议　　 190
9.2  SQLite 数据库　　 194
9.2.1  秘诀77：创建一个独立的数据库包　　 194
9.2.2  秘诀78：使用独立的数据库包　　 197
9.2.3  秘诀79：创建个人日记 　　200
9.3  内容提供器　　204
9.4  保存和载入文件　　 209
第10 章  基于位置的服务　　 210
10.1  位置服务入门　　 210
10.1.1  秘诀81：获取最新位置 　　212
10.1.2  秘诀82：在位置改变时更新信息　　 212
10.1.3  秘诀83：列出所有可用的提供器　　 214
10.1.4  秘诀84：将位置解析为地址（反向地理编码）　　  216
10.1.5  秘诀85：将地址解析为位置（地理编码） 　　 218
10.2  使用谷歌地图　　 220
10.2.1  秘诀86：在应用程序中添加谷歌地图　　 222
10.2.2  秘诀87：在地图上添加标记 　　224
10.2.3  秘诀88：在地图上添加视图　　 228
10.2.4  秘诀89：在地图上标记设备的当前位置　　 230
10.2.5  秘诀90：设置临近警告　　 231
第11 章  Android 高级开发技术　　 232
11.1  Android 的自定义视图　　 232
11.2  Android 的原生组件　　 238
11.3  Android 的安全机制　　 241
11.4  Android 的进程间通信　　 242
11.5  Android 的备份管理器　　 247
11.5.1  秘诀95：备份运行时数据 　　247
11.5.2  秘诀96：备份文件到云端 　　248
11.5.3  秘诀97：触发备份与还原操作　　 249
11.6  Android 的动画功能　　 250
第12 章  调试　　 255
12.1  Eclipse 内置的调试工具　　 255
12.1.1  秘诀99：设置运行配置　　 255
12.1.2  秘诀100：使用DDMS  　　256
12.1.3  秘诀101：断点调试 　　257
12.2  Android SDK 中的调试工具 　　258
12.2.1  秘诀102：使用Android Debug Bridge 工具　　 258
12.2.2  秘诀103：使用LogCat 工具 　　259
12.2.3  秘诀104：使用HierarchyViewer 工具　　 261
12.2.4  秘诀105：使用TraceView工具　　 262
12.3  Android 系统调试工具　　 264
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android开发秘籍
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android开发权威指南
《android开发权威指南》
第一部分 准 备 篇
第1章 初识庐山真面目——android开发简介 2
1.1 android的基本概念 2
1.1.1 android简介 2
1.1.2 android的版本 4
1.1.3 android的系统构架 5
1.1.4 android的应用程序框架 6
1.2 jil widget介绍 7
1.3 小结 8
第2章 工欲善其事，必先利其器——搭建和使用android开发环境 9
2.1 开发包及工具的安装 9
2.1.1 开发android程序都需要些什么 9
2.1.2 安装jdk和配置java开发环境 10
2.1.3 eclipse的安装与汉化 11
2.1.4 安装androidsdk 12
2.1.5 安装eclipse插件adt 13
2.2 真实体验——编写第一个android程序（随机绘制圆饼） 15
2.2.1 创建android工程 15
2.2.2 在模拟器中运行android程序 17
.2.2.3 界面控件的布局 19
2.2.4 编写代码 20
2.2.5 调试程序 23
2.2.6 在手机上运行和调试程序 28
2.3 迁移android工程可能发生的错误 29
2.4 不需要写一行代码的开发工具：appinventor 31
2.4.1 appinventor简介 31
2.4.2 appintentor的下载和安装 31
2.4.3 用拖曳控件的方式设计界面 33
2.4.4 像拼图一样拼装代码 34
2.5 小结 37
第二部分 基 础 篇
第3章 千里之行始于足下——android程序设计基础 40
3.1 android应用程序框架 40
3.1.1 android项目的目录结构 40
3.1.2 androidmanifest.xml文件的结构 42
3.2 android应用程序中的资源 44
3.3 android的应用程序组件 44
3.3.1 activity（android的窗体） 45
3.3.2 service（服务） 45
3.3.3 broadcast receiver（广播接收器） 45
3.3.4 content provider（内容提供者） 46
3.4 android程序的ui设计 46
3.4.1 手工配置xml布局文件 46
3.4.2 adt自带的可视化ui设计器 47
3.4.3 使用droiddraw设计ui布局 47
3.5 小结 48
第4章 我的ui我做主——用户界面开发基础 49
4.1 activity的使用方法 49
4.1.1 创建activity 49
4.1.2 配置activity 50
4.1.3 显示其他的activity（intent与activity） 52
4.2 activity的生命周期 55
4.3 在不同activity之间传递数据 60
4.3.1 使用intent传递数据 60
4.3.2 使用静态变量传递数据 62
4.3.3 使用剪切板传递数据 63
4.3.4 使用全局对象传递数据 65
4.3.5 返回数据到前一个activity 67
4.4 视图（view） 68
4.4.1 视图简介 68
4.4.2 使用xml布局文件定义视图 69
4.4.3 在代码中控制视图 70
4.5 布局（layout） 72
4.5.1 框架布局（framelayout） 72
4.5.2 线性布局（linearlayout） 75
4.5.3 相对布局（relativelayout） 79
4.5.4 表格布局（tablelayout） 81
4.5.5 绝对布局（absolutelayout） 82
4.5.6 重用xml布局文件 82
4.5.7 优化xml布局文件 85
4.5.8 查看apk文件中的布局 86
4.6 小结 87
第5章 良好的学习开端—— 控件（widget）详解 88
5.1 常用xml属性解析 88
5.1.1 android:id属性 88
5.1.2 控件的宽度（android:layout_width）和高度（android:layout_height） 88
5.1.3 android:layout_margin属性 89
5.1.4 android:padding属性 89
5.1.5 android:layout_weight属性 90
5.1.6 android:layout_gravity和android: gravity属性 90
5.1.7 android:visibility属性 91
5.1.8 android:background属性 91
5.1.9 指定单击事件方法（android:onclick属性） 92
5.1.10 控件焦点属性（android:focusable和android:focusable-intouchmode） 92
5.2 textview（显示文本的控件） 93
5.2.1 显示富文本（url、不同大小、字体、颜色的文本） 93
5.2.2 在textview中显示表情图像和文字 97
5.2.3 单击链接弹出activity 100
5.2.4 为指定文本添加背景 103
5.2.5 带边框的textview 106
5.2.6 设置行间距 110
5.2.7 在未显示完的文本后面加省略号（…） 111
5.2.8 用textview实现走马灯效果 113
5.2.9 垂直滚动textview中的文本 114
5.3 edittext（编辑文本的控件） 115
5.3.1 像qq一样输入表情图像 115
5.3.2 在edittext中输入特定的字符 117
5.3.3 autocompletetext-view（自动完成输入内容的控件） 118
5.4 按钮和复选框控件 120
5.4.1 button（普通按钮控件） 120
5.4.2 图文混排的按钮 122
5.4.3 imagebutton（图像按钮控件） 124
5.4.4 radiobutton（选项按钮控件） 124
5.4.5 togglebutton（开关状态按钮控件） 125
5.4.6 checkbox（复选框控件） 126
5.5 imageview（显示图像的控件） 128
5.5.1 imageview控件的基本用法 128
5.5.2 显示指定区域的图像 129
5.5.3 缩放和旋转图像 132
5.6 时间与日期控件 133
5.6.1 datepicker（输入日期的控件） 133
5.6.2 timepicker（输入时间的控件） 134
5.6.3 datepicker、timepicker与textview同步显示日期和时间 134
5.6.4 analogclock和digitalclock（显示时钟的控件） 136
5.7 进度条控件 137
5.7.1 progressbar（进度条控件） 137
5.7.2 seekbar（拖动条控件） 139
5.7.3 设置progressbar和seekbar的颜色及背景图 140
5.7.4 ratingbar（评分控件） 143
5.8 列表控件 145
5.8.1 listview（普通列表控件） 145
5.8.2 为listview列表项添加复选框和选项按钮 147
5.8.3 对列表项进行增、删、改操作 149
5.8.4 改变列表项的背景色 153
5.8.5 listactivity（封装listview的activity） 154
5.8.6 expandablelistview（可扩展的列表控件） 155
5.8.7 spinner（下拉列表控件） 157
5.9 滚动控件 160
5.9.1 scrollview（垂直滚动控件） 160
5.9.2 horizontalscrollview（水平滚动控件） 161
5.9.3 可垂直和水平滚动的视图 162
5.9.4 gallery（画廊控件） 163
5.10 imageswitcher（图像切换控件） 164
5.11 gridview（网格控件） 166
5.12 tabhost（标签控件） 168
5.13 viewstub（惰性装载控件） 169
5.14 小结 171
第6章 友好的菜单——menu介绍与实例 172
6.1 菜单的基本用法 172
6.1.1 创建选项菜单（options menu） 172
6.1.2 带图像的选项菜单 173
6.1.3 关联activity 173
6.1.4 响应菜单的单击动作 174
6.1.5 动态添加、修改和删除选项菜单 175
6.1.6 带复选框和选项按钮的子菜单 176
6.1.7 上下文菜单 178
6.1.8 菜单事件 179
6.1.9 从菜单资源中装载菜单 180
6.2 菜单特效 181
6.2.1 自定义菜单 181
6.2.2 模拟ucweb效果菜单 184
6.2.3 quickcontactbadge与联系人菜单 189
6.3 小结 192
第7章 友好地互动交流——信息提醒（对话框、toast与notification） 193
7.1 对话框的基本用法 193
7.1.1 带2个按钮（确认/取消）的对话框 193
7.1.2 带3个按钮（覆盖/忽略/取消）的对话框 195
7.1.3 简单列表对话框 196
7.1.4 单选列表对话框 198
7.1.5 多选列表对话框 199
7.1.6 进度对话框 201
7.1.7 登录对话框 205
7.1.8 使用activity托管对话框 207
7.2 对话框的高级应用 209
7.2.1 阻止单击按钮关闭对话框 209
7.2.2 改变对话框的显示位置 213
7.2.3 在对话框按钮和内容文本中插入图像 215
7.2.4 改变对话框的透明度 216
7.3 toast 217
7.3.1 toast的基本用法 217
7.3.2 永不关闭的toast 218
7.3.3 用popupwindow模拟toast提示信息框 221
7.4 通知（notification） 221
7.4.1 在状态栏上显示通知信息 222
7.4.2 notification的清除动作 224
7.4.3 永久存在的notification 225
7.4.4 自定义notification 226
7.5 小结 227
第8章 移动的信息仓库——数据存储 228
8.1 读写key-value对：sharedpreferences 228
8.1.1 sharedpreferences的基本用法 228
8.1.2 数据的存储位置和格式 229
8.1.3 存取复杂类型的数据 230
8.1.4 设置数据文件的访问权限 233
8.1.5 可以保存设置的activity：preferenceactivity 234
8.2 文件存储 238
8.2.1 openfileoutput和openfileinput方法 238
8.2.2 读写sd卡中的文件 239
8.2.3 sax引擎读取xml文件的原理 241
8.2.4 将xml文件转换成java对象 242
8.2.5 文件压缩（jar、zip） 245
8.3 sqlite数据库 249
8.3.1 sqlite数据库管理工具 249
8.3.2 sqliteopenhelper类与自动升级数据库 251
8.3.3 数据绑定与simplecursoradapter类 252
8.3.4 操作sd卡上的数据库 255
8.3.5 将数据库与应用程序一起发布 256
8.3.6 内存数据库 257
8.4 小结 258
第9章 android中的窗口——activity 259
9.1 调用其他程序中的activity 259
9.1.1 直接拨号 259
9.1.2 将电话号传入拨号程序 259
9.1.3 调用拨号程序 260
9.1.4 浏览网页 261
9.1.5 向e-mail客户端传递e-mail地址 261
9.1.6 发送e-mail 261
9.1.7 查看联系人 262
9.1.8 显示系统设置界面（设置主界面、wifi设置界面） 263
9.1.9 启动处理音频的程序 264
9.2 自定义activity action 264
9.3 activity的高级应用 266
9.3.1 activitygroup 266
9.3.2 自定义半透明窗口 268
9.3.3 activity之间切换的动画效果 269
9.4 小结 270
第10章 全局事件——广播（broadcast） 271
10.1 什么是广播 271
10.2 接收系统广播 272
10.2.1 短信拦截 272
10.2.2 用代码注册广播接收器 274
10.2.3 广播接收器的优先级 275
10.2.4 来去电拦截 276
10.2.5 截获屏幕休眠与唤醒 280
10.2.6 开机自动运行 281
10.2.7 显示手机电池的当前电量 282
10.3 发送广播 284
10.4 验证广播接收器是否注册 285
10.5 小结 286
第11章 跨应用数据源——content provider 287
11.1 content provider的作用 287
11.2 获得系统数据 288
11.2.1 读取联系人信息 288
11.2.2 查看收到的短信 290
11.3 自定义contentprovider 291
11.3.1 查询城市信息 291
11.3.2 为content provider添加访问权限 297
11.4 小结 298
第12章 一切为用户服务——service基础与实例 299
12.1 service基础 299
12.1.1 service的生命周期 299
12.1.2 绑定activity和service 302
12.1.3 开机启动service 305
12.1.4 判断service是否已注册 306
12.1.5 判断service是否已开始 307
12.2 跨进程访问（aidl服务） 308
12.2.1 什么是aidl服务 308
12.2.2 建立aidl服务的步骤 308
12.2.3 建立aidl服务 308
12.2.4 传递复杂数据的aidl服务 312
12.2.5 aidl与来去电自动挂断 317
12.3 小结 319
第13章 做好应用桥梁——网络与通信 320
13.1 webview控件 320
13.1.1 用webview控件浏览网页 320
13.1.2 用webview控件装载html代码 322
13.2 访问http资源 324
13.2.1 提交http get和http post请求 324
13.2.2 httpurlconnection类 326
13.2.3 上传文件 327
13.3 客户端socket 330
13.3.1 连接服务器 331
13.3.2 扫描服务器打开的端口 331
13.3.3 发送和接收数据 333
13.3.4 获得无线路由分配给手机的ip地址 334
13.3.5 设置socket选项 335
13.4 服务端socket 339
13.4.1 手机服务器的实现 339
13.4.2 利用socket在应用程序之间通信 340
13.5 蓝牙通信 342
13.5.1 蓝牙简介 342
13.5.2 打开和关闭蓝牙设备 343
13.5.3 搜索蓝牙设备 344
13.5.4 蓝牙数据传输 346
13.6 小结 351
第14章 炫酷你的应用——多媒体开发 352
14.1 音乐 352
14.1.1 播放音乐 352
14.1.2 录音 353
14.2 视频 354
14.2.1 使用videoview播放视频 354
14.2.2 使用surfaceview播放视频 355
14.2.3 录制视频 357
14.3 相机 357
14.3.1 调用系统的拍照功能 358
14.3.2 自定义拍照功能 359
14.4 铃声 364
14.5 小结 366
第15章 2d游戏开发 367
15.1 绘制游戏的画布 367
15.1.1 在view上实现动画效果 367
15.1.2 在surfaceview上实现动画效果 371
15.2 图形绘制基础 374
15.2.1 绘制像素点 374
15.2.2 绘制直线 374
15.2.3 绘制圆形 375
15.2.4 绘制弧 375
15.2.5 绘制文本 376
15.2.6 综合绘制各种图形 376
15.3 高级图像处理技术 380
15.3.1 绘制位图 380
15.3.2 图像的透明度 382
15.3.3 旋转图像 383
15.3.4 路径 384
15.3.5 shader的渲染效果 388
15.4 帧（frame）动画 392
15.4.1 animationdrawable与帧动画 392
15.4.2 播放gif动画 394
15.5 补间（tween）动画 397
15.5.1 移动补间动画 397
15.5.2 缩放补间动画 399
15.5.3 旋转补间动画 402
15.5.4 透明度补间动画 403
15.6 小结 404
第16章 有趣的android应用 405
16.1 传感器 405
16.1.1 如何使用传感器 405
16.1.2 加速度传感器（accelerometer） 409
16.1.3 重力传感器（gravity） 409
16.1.4 光线传感器（light） 410
16.1.5 陀螺仪传感器（gyroscope） 411
16.1.6 方向传感器（orientation） 411
16.1.7 其他传感器 412
16.2 输入输出技术 413
16.2.1 语音识别 413
16.2.2 手势输入 415
16.2.3 语音朗读（tts） 417
16.3 google地图 419
16.4 gps定位 423
16.5 桌面上的小东西 425
16.5.1 窗口小部件（appwidget） 425
16.5.2 快捷方式 431
16.5.3 实时文件夹 433
16.6 应用更华丽——动态壁纸 435
16.7 小结 441
第三部分 高 级 篇
第17章 html5与移动web开发 444
17.1 html5简介 444
17.2 html5精彩效果演示 445
17.3 html5在android中的应用 447
17.4 html5的画布（canvas） 448
17.4.1 canvas概述 448
17.4.2 检测浏览器是否支持canvas 449
17.4.3 在web页面中使用canvas 450
17.4.4 使用路径（path） 452
17.4.5 设置线条风格 453
17.4.6 设置填充类型 453
17.4.7 填充矩形区域 454
17.4.8 使用渐变色（gradient） 454
17.4.9 拉伸画布对象 455
17.4.10 在canvas上绘制文本 456
17.4.11 使用阴影 457
17.5 调试javascript 458
17.6 小结 459
第18章 输入法开发 460
18.1 android输入法简介 460
18.2 控制输入法 461
18.3 输入法实战 462
18.3.1 实现输入法的步骤 463
18.3.2 编写输入法程序 463
18.3.3 输入法服务的生命周期 466
18.3.4 预输入文本 467
18.3.5 输入法设置 467
18.4 小结 468
第19章 android opengl es开发基础 469
19.1 opengl简介 469
19.2 什么是opengl es 469
19.3 多边形 470
19.4 颜色 474
19.5 旋转三角形 475
19.6 旋转立方体 477
19.7 小结 478
第20章 opengl es的超酷效果 479
20.1 保持平衡的旋转文本 479
20.2 左右摇摆的android机器人 482
20.3 纠缠在一起的旋转立方体 485
20.4 透明背景的旋转立方体 486
20.5 触摸旋转的立方体 487
20.6 2d和3d的综合旋转效果 489
20.7 旋转立体天空 491
20.8 小结 493
第21章 android ndk编程 494
21.1 android ndk简介 494
21.2 安装、配置和测试ndk开发环境 495
21.2.1 系统和软件要求 495
21.2.2 下载和安装android ndk 495
21.2.3 下载和安装cygwin 495
21.2.4 配置android ndk的开发环境 498
21.3 第一个ndk程序：世界你好 499
21.3.1 编写和调用ndk程序 499
21.3.2 用命令行方式编译ndk程序 501
21.3.3 在eclipse中集成android ndk 502
21.4 背景不断变化的三角形（ndk 版opengl es） 504
21.5 使用ndk opengl esapi实现千变万化的3d效果 507
21.6 使用ndk调用音频api 510
21.7 本地activity（native activity） 511
21.8 android ndk配置文件详解 513
21.8.1 android ndk定义的变量 513
21.8.2 android ndk定义的函数 514
21.8.3 描述模块的变量 515
21.8.4 配置application.mk文件 516
21.9 小结 516
第22章 测试驱动开发（tdd） 517
22.1 junit测试框架 517
22.2 测试activity 517
22.3 测试content provider 521
22.4 测试service 523
22.5 测试普通类 523
22.6 小结 525
第四部分 综合实例篇
第23章 android综合案例一——蓝牙聊天 528
23.1 蓝牙聊天主界面 528
23.2 添加选项菜单 530
23.3 搜索和连接蓝牙设备 530
23.4 使设备可被其他蓝牙设备发现 533
23.5 发送和接收聊天信息 533
23.6 小结 537
第24章 android综合案例二——月球登陆（游戏） 538
24.1 游戏的玩法 538
24.2 实现游戏界面 539
24.3 设置游戏难度 540
24.4 开始游戏 541
24.5 控制飞船喷火 544
24.6 控制飞船改变飞行方向 544
24.7 判断飞船是否成功 着陆 545
24.8 小结 546
第25章 android综合案例三——全键盘输入法（应用） 547
25.1 安装输入法 547
25.2 输入法的初始化工作 548
25.3 响应键盘操作 549
25.4 根据edittext控件的 属性显示不同的软键盘 551
25.5 小结 553
第26章 android综合案例四——贪吃蛇（游戏） 554
26.1 游戏玩法 554
26.2 游戏主界面设计 555
26.3 控制小蛇的移动 557
26.4 小结 560
第27章 android综合案例五—— 新浪微博客户端 （应用） 561
27.1 新浪微博简介 561
27.1.1 新浪微博客户端 561
27.1.2 新浪微博开放 api 563
27.2 使用新浪微博开发 api 563
27.3 创建和配置新浪微 博客户端工程 564
27.4 登录新浪微博 564
27.5 功能按钮 567
27.6 显示“我的首页”的微博 569
27.7 评论微博 572
27.8 转发微博 573
27.9 写微博 574
27.10 小结 576
第28章 android综合案例六—— 笑脸连连看 （游戏） 577
28.1 游戏玩法 577
28.2 准备图像素材 578
28.3 实现主界面 578
28.4 随机生成连连看 图像 580
28.5 选中两个相同图像 后消失 580
28.6 用定时器限制游戏 时间 581
28.7 小结 582
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android开发权威指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>拨云见日
目    录
上篇  内核
第1章  ARM多核处理器	2
1.1  SMP相关基础数据结构	3
1.2  Percpu内存管理	6
1.2.1  内核显式定义的处理器局部数据	6
1.2.2  Percpu内存管理的建立	8
1.2.3  Percpu动态分配内存空间	13
1.3  CpuFreq	15
1.3.1  初始化	15
1.3.2  CpuFreq策略的建立	16
1.3.3  Ondemand调频算法分析	18
1.4  CPU0 bootup CPU1	19
1.4.1  CPU0侧策略和动作	19
1.4.2  CPU1侧执行路线	21
1.5  CPU1的关闭	23
1.5.1  关闭时机	23
1.5.2  CPU1关闭操作	24
1.6  ARM处理器展望	26
1.6.1  ARM架构处理器的演进	26
1.6.2  TrustZone	27
1.6.3  ARM Virtualization	28
第2章  异常	33
2.1  异常向量表	33
2.1.1  异常进入	33
2.1.2  异常表的构建	35
2.2  中断体系	37
2.2.1  Cortex A9多核处理器的中断控制器GIC	37
2.2.2  MT6577的中断体系	38
2.2.3  Exynos4的中断体系	42
2.2.4  OMAP4的中断体系	46
2.3  中断处理	49
2.3.1  中断的基本结构	49
2.3.2  中断源识别	51
2.4  数据异常	54
2.5  处理器间通信	56
第3章  调度与实时性	62
3.1  Tick	62
3.1.1  Local timer	62
3.1.2  Tick挂载	63
3.1.3  Tick产生	66
3.2  Fair调度类	67
3.2.1  Fair调度类的负载均衡	67
3.2.2  Fair调度类的处理器选择	72
3.3  RT调度类	73
3.3.1  RT调度类的基本结构	73
3.3.2  Rt_Bandwidth	76
3.3.3  负载均衡与抢占	79
3.3.4  基础操作	80
3.4  调度器	82
3.4.1  调度域的构建	82
3.4.2  调度器	86
3.5  唤醒	89
3.5.1  唤醒与抢占	89
3.5.2  跨处理器分发线程	91
3.5.3  抢占	92
第4章  Signal	99
4.1  信号发送	99
4.2  信号执行	102
4.2.1  路径切换	102
4.2.2  ARM Linux下信号执行环境的搭建	103
4.2.3  Signal处理函数的返回	107
4.2.4  系统调用重入	109
第5章  进程与进程内存	111
5.1  Linux进程	111
5.1.1  Fork	111
5.1.2  Exec新进程创建	112
5.2  CPU与MMU	117
5.2.1  ARM Linux页表页目录结构	117
5.2.2  页表页目录的建立	120
5.3  进程虚拟内存	122
5.3.1  Android进程虚拟内存的继承	122
5.3.2  进程虚拟地址空间的获得	127
第6章  缺页请页与内存Shrink	129
6.1  缺页与请页	129
6.1.1  File backed虚拟内存段操作函数	130
6.1.2  File backed内存的请页	131
6.1.3  匿名内存的请页	134
6.1.4  COW访问	135
6.2  内存Shrink	137
6.2.1  Shrink操作shrink_page_list	137
6.2.2  Clean Page	142
6.2.3  脏页的监控	143
6.3  全景图	145
第7章  块设备	148
7.1  Bdev文件系统	148
7.2  块设备基础结构	150
7.3  块设备的创建与注册	152
7.4  分区检测生成	156
7.5  块设备的打开	157
7.6  块设备驱动的层次结构	159
7.7  虚拟块设备	161
第8章  VFS	163
8.1  根目录	163
8.1.1  根目录文件系统——initramfs	165
8.1.2  Android ramdisk.img	166
8.1.3  传统根目录文件系统加载方式	166
8.2  文件打开	166
8.2.1  目录的层级查找	167
8.2.2  各层次操作函数的安装	171
8.3  文件写	172
8.3.1  文件写框架	172
8.3.2  write_begin	174
8.3.3  write_end	176
8.4  脏页的提交与回写机制	177
8.4.1  脏页的提交	177
8.4.2  回写时机	179
8.4.3  回写机制的层次操作	183
8.4.4  节点层次的回写	183
第9章  EXT4文件系统	191
9.1  Android文件系统的选择	191
9.2  EXT4文件节点	191
9.2.1  EXT4 inode基础结构	191
9.2.2  EXt4 raw inode的定位	192
9.2.3  EXT4 inode的获取	193
9.3  Mount	195
9.4  EXT4文件写操作	197
9.5  EXT4 journal	199
9.6  Extent tree	202
9.6.1  基础结构	202
9.6.2  定位逻辑块的struct ext4_extent	203
9.6.3  定位逻辑块左右侧的struct ext4_extent项	205
9.7  块分配	208
9.7.1  块组的buddy算法	208
9.7.2  分配物理块	217
9.8  逻辑块到物理块的映射	225
第10章  RCU	229
10.1  RCU tree	229
10.1.1  RCU Tree结构	229
10.1.2  RCU tree的构建	230
10.2  Grace Period	232
10.2.1  Grace Period的检测	232
10.2.2  重新启动新一轮Grace Period	235
10.3  RCU函数的执行	237
第11章  MMC Driver	238
11.1  MMC Driver	238
11.1.1  MMC协议层	238
11.1.2  MMC块设备	239
11.2  开源手机U8836D（MT6577）分区的实现	242
第12章  内核配置系统及内核调试	246
12.1  Conf	246
12.1.1  Kconfig元素	246
12.1.2  Kconfig分析	247
12.2  内核调试	248
12.2.1  senix_printk	249
12.2.2  LOG_BUF	252
下篇  Dalvik与Android用户态源码分析
第13章  内存	258
13.1  Dalvik内存管理	258
13.1.1  虚拟内存分配	258
13.1.2  内存回收	263
13.2  Ashmem	265
13.3  GC	267
13.3.1  对象Mark	267
13.3.2  从Root对象集到普通对象	268
13.3.3  GC与线程实时性	270
第14章  进程与线程	272
14.1  Dalvik虚拟机的进程	272
14.2  Dalvik线程创建机制	273
14.3  Android线程模型	276
14.3.1  主线程的生成	276
14.3.2  线程池线程的生成	276
14.4  Java线程转换	278
14.4.1  从Java到JNI	278
14.4.2  从JNI到Java	279
第15章  Bionic的动态加载机制	283
15.1  Linker——用户态入口	283
15.2  Linker主体——link_image	284
第16章  Android系统初始	287
16.1  Android入口	287
16.2  Init——OS的入口	289
16.2.1  RC文件分析	289
16.2.2  RC动作执行	294
16.2.3  RC的逻辑分析	295
16.2.4  设备探测	295
16.2.5  property库的构建	297
16.2.6  Init的调试	299
第17章  Interpreter与JIT	301
17.1  解释器编译结构	301
17.2  Dalvik寄存器编译模型	301
17.2.1  Callee寄存器分配	301
17.2.2  Caller寄存器分配	303
17.2.3  outs的处理	304
17.3  Portable Interpreter结构	305
17.4  ASM Interpreter	306
17.4.1  基本结构	306
17.4.2  运行时模型与基本操作	308
17.4.3  ASM Interpreter入口	309
17.5  Interpreter的切换	311
17.6  Dalvik运行时帧结构	312
17.7  JIT	313
17.7.1  热点检测	313
17.7.2  Mode切换	315
17.7.3  JIT提交	316
17.8  Compile	317
17.8.1  基础数据结构	317
17.8.2  dalvik指令格式分析	319
17.8.3  TraceRun分析	319
17.8.4  MIR	323
17.8.5  基本块的逻辑关系	325
17.8.6  寄存器分配	327
17.8.7  LIR	332
17.8.8  Codecache	334
17.9  Dalvik ART	335
第18章  Binder	336
18.1  Parcel	336
18.1.1  C++层的Parcel	336
18.1.2  Java层的Parcel	337
18.2  Binder驱动	338
18.2.1  Binder写	339
18.2.2  Binder读	344
18.3  C++层面	346
18.3.1  本地与远端对象	346
18.3.2  服务的建立	349
18.4  Java层面	350
18.5  service_manager	351
第19章  Class	352
19.1  系统类库	352
19.1.1  Inital class	352
19.1.2  ODEX文件的加载	353
19.1.3  系统类库	354
19.1.4  preloaded-classes	355
19.2  类加载	357
19.2.1  类加载框架	357
19.2.2  类加载	359
19.3  对象实体生成	361
第20章  Android应用框架	363
20.1  线程池线程	363
20.1.1  C++层	363
20.1.2  Java层	365
20.2  系统侧Activity与Service的生成控制	366
20.3  class ActivityThread	368
20.3.1  MainLooper	368
20.3.2  activity与service的加载	370
第21章  Android UI体系	371
21.1  窗口体系的生成	371
21.2  ViewRoot与Surface	372
21.3  编辑框实例分析	373
21.3.1  ViewRoot获得系统侧代理对象	373
21.3.2  焦点切换事件——主要Android UI机制的互动	375
21.3.3  输入事件的处理	376
21.3.4  编辑框的生成	377
第22章  ADB	379
22.1  ADB基本结构	379
22.1.1  连接	379
22.1.2  主线程	381
22.1.3  主线程监测的文件句柄	382
22.2  Transport	382
22.2.1  初始化	382
22.2.2  transport传输线程	384
22.2.3  transport的管理	386
22.3  Local服务	389
22.3.1  Local服务的种类	389
22.3.2  Local服务的形态	391
22.3.3  SYNC服务	392
第23章  Android浏览器的Webkit分析	394
23.1  Webcore	394
23.1.1  DOM与Rendering树生成	394
23.1.2  事件的产生与分发	397
23.2  V8 parser源码分析	401
23.2.1  V8 parser处理脚本的层次	402
23.2.2  Scope	406
23.2.3  语法分析的入口 Parser::ParseStatement(…)	408
23.2.4  普通语句的分析	409
23.3  指令生成	415
??
??
??
??
VIII
拨云见日——基于Android的内核与系统架构源码分析
IX
目    录


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>拨云见日
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android和PHP开发最佳实践
前言
第一篇 　准　备　篇
第1章　学前必读	1
1.1　移动互联网时代的来临	1
1.2　为何选择Android和PHP	2
1.3　如何学习Android和PHP	3
1.3.1　如何学习Android	3
1.3.2　如何学习PHP	4
1.3.3　同时学好Android和PHP	4
1.4　小结	5
第2章　Android开发准备	6
2.1　Android背景知识	6
2.2　Android系统框架	8
2.3　Android应用框架	11
2.3.1　活动（Activity）	12
2.3.2　消息（Intent）	14
2.3.3　视图（View）	16
2.3.4　任务（Task）	17
2.4　Android系统四大组件	19
2.4.1　活动（Activity）	20
2.4.2　服务（Service）	21
2.4.3　广播接收器（Broadcast Receiver）	23
2.4.4　内容提供者（Content Provider）	24
2.5　Android上下文	25
2.5.1　界面上下文（Activity Context）	25
2.5.2　应用上下文（Application Context）	27
2.6　Android数据存储	28
2.6.1　应用配置（Shared Preferences）	28
2.6.2   本地文件（Files）	29
2.6.3　数据库（SQLite）	30
2.7　Android应用界面	31
2.7.1　控件属性	31
2.7.2　布局（Layout）	33
2.7.3　事件（Event）	37
2.7.4　菜单（Menu）	39
2.7.5　主题（Theme）	41
2.7.6　对话框（Dialog）	42
2.8　Android图形界面	43
2.8.1　画笔（Paint）	43
2.8.2　画布（Canvas）	44
2.8.3   基础几何图形	46
2.8.4　常见图形变换	47
2.9　Android动画效果	50
2.9.1　逐帧动画（Frame Animation）	50
2.9.2　补间动画（Tween Animation）	51
2.10　Android开发环境	52
2.10.1　开发环境的搭建	53
2.10.2　首个Android项目	58
2.10.3　使用DDMS调试工具	63
2.11　小结	64
第3章　PHP开发准备	65
3.1　PHP开发基础	65
3.1.1　PHP语言简介	65
3.1.2　PHP语法简介	66
3.1.3　PHP开发起步	68
3.1.4　PHP面向对象编程	75
3.1.5　PHP的会话	78
3.2　PHP开发环境	80
3.2.1　开发环境的搭建	80
3.2.2　安装配置Xampp	81
3.2.3　管理Apache	83
3.2.4　管理MySQL	84
3.3　使用JSON通信	87
3.4　常用PHP开发框架	88
3.5　认识Smarty模板引擎	90
3.6　开发框架简介	93
3.6.1　框架的特点和优势	94
3.6.2　框架的基础目录结构	94
3.6.3　框架MVC思路讲解	97
3.6.4　框架MVC实例分析	99
3.7　小结	108
第二篇　实　战　篇
第4章　实例产品设计	109
4.1　为何选择微博	109
4.2　开发前的准备	110
4.2.1　选择开发模式	110
4.2.2　了解项目策划	111
4.2.3　了解原型设计	112
4.3　功能模块设计	112
4.4　应用界面设计	114
4.5　应用架构设计	115
4.6　通信协议定义	116
4.7　数据库结构设计	118
4.8　小结	120
第5章　程序架构设计	121
5.1　服务端程序架构设计	121
5.1.1　基础框架设计	122
5.1.2　调试框架设计	127
5.1.3　核心类库设计	130
5.1.4　服务端的MVC与SOA	136
5.2　客户端程序架构设计	136
5.2.1　基础框架设计	137
5.2.2　核心类包设计	138
5.2.3　Android应用的MVC	142
5.3　客户端界面架构设计	142
5.3.1　界面框架设计	143
5.3.2　主要界面设计	144
5.4　小结	146
第6章　服务端开发	147
6.1　开发入门	147
6.1.1　接口程序开发	147
6.1.2　调试框架开发	151
6.1.3　生成接口文档	155
6.2　验证接口	156
6.2.1　用户登录接口	156
6.2.2　用户登出接口	160
6.3　用户接口	162
6.3.1　新建用户接口	162
6.3.2　更新用户信息接口	164
6.3.3　查看用户信息接口	165
6.3.4　添加粉丝接口	167
6.3.5　删除粉丝接口	171
6.4　微博接口	172
6.4.1　发表微博接口	172
6.4.2　查看微博接口	174
6.4.3　微博列表接口	176
6.5　评论接口	180
6.5.1　发表评论接口	180
6.5.2　评论列表接口	182
6.6　图片接口	184
6.6.1　用户头像接口	185
6.6.2　头像列表接口	188
6.7　通知接口	189
6.8　Web版接口	192
6.8.1　Web版UI界面（jQuery Mobile）	193
6.8.2　Web版地图接口	195
6.9　小结	196
第7章　客户端开发	198
7.1　开发入门	198
7.1.1　开发思路梳理	198
7.1.2　掌握应用配置文件	200
7.1.3　常规程序开发与调试	211
7.2　界面布局和行为控制	221
7.2.1　使用Layout布局	221
7.2.2　使用Merge整合界面	224
7.2.3　使用Event控制用户行为	226
7.2.4　使用Intent控制界面切换	228
7.3　网络通信模块	231
7.3.1　使用HttpClient进行网络通信	231
7.3.2　支持CMWAP网络接入方式	237
7.3.3　使用JSON库为消息解码	240
7.3.4　使用Toast消息提示	245
7.4　异步任务模块	247
7.4.1　进程和线程	247
7.4.2　任务创建Thread	249
7.4.3　任务处理Handler	255
7.4.4　使用异步任务AsyncTask	257
7.5　全局功能模块	259
7.5.1　全局UI基类	259
7.5.2　全局Menu菜单	264
7.5.3　全局Dialog窗口	265
7.5.4　使用Service获取通知	266
7.5.5　使用Notification显示通知	270
7.6　用户登录界面	273
7.6.1　界面程序逻辑	273
7.6.2　使用TextView	273
7.6.3　使用EditText	274
7.6.4　使用Button	276
7.6.5　使用Shape和Selector	277
7.6.6　使用CheckBox	279
7.6.7　使用SharedPreference	280
7.7　微博列表界面	281
7.7.1　界面程序逻辑	281
7.7.2　使用ListView	286
7.7.3　使用ImageView	290
7.7.4　使用draw9patch	292
7.7.5　异步获取远程图片	294
7.7.6　使用SdCard缓存图片	297
7.7.7　使用SQLite缓存数据	300
7.8　我的微博列表	303
7.8.1　界面程序逻辑	303
7.8.2　使用ScrollView	309
7.8.3　使用自定义微博列表	310
7.9　微博文章界面	313
7.9.1　界面程序逻辑	313
7.9.2　界面布局进阶（综合使用UI控件）	319
7.9.3　发表评论功能实现	322
7.9.4　发表微博功能实现	326
7.10　用户配置界面	328
7.10.1　界面程序逻辑	328
7.10.2　使用自定义选项列表	333
7.10.3　修改签名功能实现	334
7.10.4　更换头像功能实现	334
7.11　网页界面开发	340
7.11.1　界面程序逻辑	340
7.11.2　使用WebView	341
7.11.3　使用ProgressDialog	343
7.11.4　使用WebView的重写和回调	346
7.11.5　网页地图实例分析	348
7.12　小结	349
第三篇　优　化　篇
第8章　性能分析	351
8.1　关于性能测试	351
8.1.1　服务端压力测试	352
8.1.2　客户端性能测试	359
8.2　瓶颈	364
8.2.1　服务端瓶颈分析	365
8.2.2　客户端瓶颈分析	366
8.3　优化的思路	366
8.4　小结	367
第9章 　服务端优化	368
9.1　优化PHP程序	368
9.1.1　优化PHP代码	368
9.1.2　优化Session机制	371
9.1.3　使用缓存中间件	373
9.1.4　使用APC加速	376
9.2　优化数据传输	377
9.2.1　优化JSON协议	377
9.2.2　使用gzip压缩	379
9.3　其他优化	380
9.3.1　服务器优化	380
9.3.2　数据库优化	383
9.3.3　网络优化	386
9.4　小结	386
第10章　客户端优化	387
10.1　优化Android程序	387
10.1.1　优化Java代码	387
10.1.2　异步获取数据	391
10.1.3　文件资源缓存	391
10.1.4　数据库缓存	392
10.2　避免内存泄露	392
10.2.1　Android内存管理	392
10.2.2　如何判断内存泄露	393
10.2.3　常见内存泄露的处理	395
10.3　优化Android UI	396
10.3.1　模板代码优化	396
10.3.2　关于布局优化	397
10.3.3　使用Hierarchy Viewer工具	402
10.4　其他优化	403
10.4.1　优化图片	403
10.4.2　优化APK包	403
10.4.3　使用keytool和jarsigner签名	404
10.4.4　使用zipalign优化	407
10.5　小结	408
第四篇　进　阶　篇
第11章　Android特色功能开发	409
11.1　使用Google Map API	409
11.2　使用LBS功能	414
11.3　使用传感器	419
11.4　使用摄像头	422
11.5　多媒体开发	431
11.6　语音识别	439
11.7　小结	441
第12章　Android NDK开发	442
12.1　NDK开发基础	442
12.1.1　使用NDK的原因	442
12.1.2　使用NDK调用C或C++	443
12.1.3　Android.mk和Application.mk	445
12.2　NDK开发入门	448
12.2.1　开发环境搭建	448
12.2.2　首个NDK项目	449
12.3　小结	456
第13章　Android游戏开发	457
13.1　手游开发基础	457
13.1.1　手游开发思路解析	457
13.1.2　贪食蛇和飞船游戏实例	462
13.1.3　认识Android游戏引擎	464
13.1.4　使用OpenGL和OpenGL ES	466
13.1.5　使用RenderScript	472
13.2　手游开发进阶	474
13.2.1　认识Cocos2d-x	475
13.2.2　架设Cocos2d-x开发环境	475
13.2.3　首个Cocos2d-x项目	475
13.2.4　认识Unity 3D	487
13.3　小结	489
附录A　Hush Framework框架实例源码部署	490
附录B　微博应用实例源码部署	495
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android和PHP开发最佳实践
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>音视频开发进阶指南:基于Android与iOS平台的实践
推荐序一
推荐序二
前言
第1章　音视频基础概念 1
1.1　声音的物理性质 1
1.1.1　声音是波 1
1.1.2　声波的三要素 2
1.1.3　声音的传播介质 3
1.1.4　回声 3
1.1.5　共鸣 4
1.2　数字音频 4
1.3　音频编码 6
1.4　图像的物理现象 7
1.5　图像的数值表示 8
1.5.1　RGB表示方式 8
1.5.2　YUV表示方式 9
1.5.3　YUV和RGB的转化 10
1.6　视频的编码方式 10
1.6.1　视频编码 10
1.6.2　编码概念 11
1.7　本章小结 13
第2章　移动端环境搭建 14
2.1　在iOS上如何搭建一个基础项目 14
2.2　在Android上如何搭建一个基础项目 21
2.3　交叉编译的原理与实践 26
2.3.1　交叉编译的原理 26
2.3.2　iOS平台交叉编译的实践 27
2.3.3　Android平台交叉编译的实践 33
2.3.4　使用LAME编码MP3文件 38
2.4　本章小结 42
第3章　FFmpeg的介绍与使用 43
3.1　FFmpeg的编译与命令行工具的使用 43
3.1.1　FFmpeg的编译 43
3.1.2　FFmpeg命令行工具的使用 51
3.2　FFmpeg API的介绍与使用 60
3.3　FFmpeg源码结构 68
3.3.1　libavformat与libavcodec介绍 68
3.3.2　FFmpeg通用API分析 69
3.3.3　调用FFmpeg解码时用到的函数分析 70
3.3.4　调用FFmpeg编码时用到的函数分析 71
3.3.5　面向对象的C语言设计 72
3.4　本章小结 74
第4章　移动平台下的音视频渲染 75
4.1　AudioUnit介绍与实践 75
4.2　Android平台的音频渲染 84
4.2.1　AudioTrack的使用 85
4.2.2　OpenSL ES的使用 87
4.3　视频渲染 90
4.3.1　OpenGL ES介绍 90
4.3.2　OpenGL ES的实践 91
4.3.3　上下文环境搭建 98
4.3.4　OpenGL ES中的纹理 104
4.4　本章小结 109
第5章　实现一款视频播放器 110
5.1　架构设计 110
5.2　解码模块的实现 115
5.3　音频播放模块的实现 118
5.3.1　Android平台的音频渲染 118
5.3.2　iOS平台的音频渲染 119
5.4　画面播放模块的实现 121
5.4.1　Android平台的视频渲染 121
5.4.2　iOS平台的视频渲染 122
5.5　AVSync模块的实现 124
5.5.1　维护解码线程 124
5.5.2　音视频同步 125
5.6　中控系统串联起各个模块 127
5.6.1　初始化阶段 127
5.6.2　运行阶段 128
5.6.3　销毁阶段 129
5.7　本章小结 130
第6章　音视频的采集与编码 131
6.1　音频的采集 131
6.1.1　Android平台的音频采集 131
6.1.2　iOS平台的音频采集 134
6.2　视频画面的采集 137
6.2.1　Android平台的视频画面采集 137
6.2.2　iOS平台的视频画面采集 146
6.3　音频的编码 156
6.3.1　libfdk_aac编码AAC 156
6.3.2　Android平台的硬件编码器MediaCodec 158
6.3.3　iOS平台的硬件编码器AudioToolbox 161
6.4　视频画面的编码 166
6.4.1　libx264编码H264 166
6.4.2　Android平台的硬件编码器MediaCodec 172
6.4.3　iOS平台的硬件编码器 175
6.5　本章小结 184
第7章　实现一款视频录制应用 185
7.1　视频录制的架构设计 185
7.2　音频模块的实现 188
7.2.1　音频队列的实现 189
7.2.2　Android平台的实现 191
7.2.3　iOS平台的实现 194
7.3　音频编码模块的实现 198
7.3.1　改造编码器 198
7.3.2　编码器适配器 199
7.4　画面采集与编码模块的实现 202
7.4.1　视频队列的实现 202
7.4.2　Android平台画面编码后入队 203
7.4.3　iOS平台画面编码后入队 204
7.5　Mux模块 205
7.5.1　初始化 206
7.5.2　封装和输出 208
7.5.3　销毁资源 212
7.6　中控系统串联起各个模块 213
7.7　本章小结 214
第8章　音频效果器的介绍与实践 215
8.1　数字音频基础 215
8.1.1　波形图 215
8.1.2　频谱图 217
8.1.3　语谱图 219
8.1.4　深入理解时域与频域 219
8.2　数字音频处理：快速傅里叶变换 222
8.3　基本乐理知识 229
8.3.1　乐谱 229
8.3.2　音符的音高与十二平均律 231
8.3.3　音符的时值 233
8.3.4　节拍 233
8.3.5　MIDI格式 234
8.4　混音效果器 235
8.4.1　均衡效果器 236
8.4.2　压缩效果器 239
8.4.3　混响效果器 240
8.5　效果器实现 243
8.5.1　Android平台实现效果器 243
8.5.2　iOS平台实现效果器 252
8.6　本章小结 255
第9章　视频效果器的介绍与实践 256
9.1　图像处理的基本原理 256
9.1.1　亮度调节 257
9.1.2　对比度调节 258
9.1.3　饱和度调节 259
9.2　图像处理进阶 259
9.2.1　图像的卷积过程 260
9.2.2　锐化效果器 260
9.2.3　高斯模糊算法 262
9.2.4　双边滤波算法 263
9.2.5　图层混合介绍 264
9.3　使用FFmpeg内部的视频滤镜 266
9.3.1　FFmpeg视频滤镜介绍 266
9.3.2　滤镜图的构建 267
9.3.3　使用与销毁滤镜图 269
9.3.4　常用滤镜介绍 270
9.4　使用OpenGL ES实现视频滤镜 272
9.4.1　加水印 273
9.4.2　添加自定义文字 278
9.4.3　美颜效果器 282
9.4.4　动图贴纸效果器 284
9.4.5　主题效果器 288
9.5　本章小结 291
第10章　专业的视频录制应用实践 292
10.1　视频硬件解码器的使用 292
10.1.1　初始化信息准备 292
10.1.2　VideoToolbox解码H264 294
10.1.3　MediaCodec解码H264 298
10.2　音频效果器的集成 304
10.2.1　Android音效处理系统的实现 305
10.2.2　iOS音效处理系统的实现 308
10.3　一套跨平台的视频效果器的设计与实现 309
10.4　将特效处理库集成到视频录制项目中 315
10.4.1　Android平台特效集成 316
10.4.2　iOS平台特效集成 321
10.5　本章小结 325
第11章　直播应用的构建 327
11.1　直播场景分析 327
11.2　拉流播放器的构建 329
11.2.1　Android平台播放器增加后处理过程 329
11.2.2　iOS平台播放器增加后处理过程 332
11.3　推流器的构建 335
11.4　第三方云服务介绍 340
11.5　礼物系统的实现 341
11.5.1　Cocos2dX项目的运行原理 342
11.5.2　关键API详解 344
11.5.3　实现一款动画 348
11.6　聊天系统的实现 350
11.6.1　Android客户端的WebSocket实现 351
11.6.2　iOS客户端的WebSocket实现 352
11.7　本章小结 353
第12章　直播应用中的关键处理 354
12.1　直播应用的细节分析 354
12.1.1　推流端细节分析 354
12.1.2　拉流端细节分析 355
12.2　推流端的关键处理 355
12.2.1　自适应码率的实践 356
12.2.2　统计数据保证后续的应对策略 361
12.3　拉流端的关键处理 363
12.3.1　重试机制的实践 364
12.3.2　首屏时间的保证 366
12.3.3　统计数据保证后续的应对策略 370
12.4　本章小结 371
第13章　工欲善其事，必先利其器 372
13.1　Android平台工具详解 372
13.1.1　ADB工具的熟练使用 372
13.1.2　MAT工具检测Java端的内存泄漏 377
13.1.3　NDK工具详解 387
13.1.4　Native层的内存泄漏检测 389
13.1.5　breakpad收集线上Crash 396
13.2　iOS使用Instruments诊断应用 399
13.2.1　Debug Navigator 399
13.2.2　Time Profiler 400
13.2.3　Allocations 402
13.2.4　Leaks 403
13.3　本章小结 405
附录A　通过Ne10的交叉编译输入理解ndk-build 406
附录B　编码器的使用细节 415
附录C　视频的表示与编码 423
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>音视频开发进阶指南:基于Android与iOS平台的实践
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Google Android SDK开发范例大全
第1章  了解、深入、动手做    1.1  红透半边天的Android    1.2  本书目的及范例涵盖范围    1.3  如何阅读本书    1.4  使用本书范例    1.5  参考网站  第2章  Android初体验  第3章  用户人机界面  第4章  史上超豪华的手机控件  第5章  交互式通信服务与手机控制  第6章  手机自动服务纪实  第7章  娱乐多媒体  第8章  当Android与Internet接轨  第9章  Google服务与Android完美整合  第10章  创意Android程序设计  第11章  HTML5 Mobile应用程序开发  附录
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Google Android SDK开发范例大全
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android核心技术与实例详解
基础篇第1章  Android开发起步  1.1  Android平台简介    1.1.1  Android背景介绍    1.1.2  Android平台架构  1.2  Android开发环境的搭建    1.2.1  相关软件的下载与安装    1.2.2  虚拟设备的创建和使用    1.2.3  创建“Hello Android”    1.2.4  Android应用程序的调试  1.3  小结第2章  Android应用程序的构成  2.1  Android应用程序的解析    2.1.1  目录结构    2.1.2  资源的管理与使用    2.1.3  AndroidManifest.xml简介    2.1.4  应用程序的权限  2.2  Android基本组件的介绍    2.2.1  应用程序的生命周期    2.2.2  Activity简介    2.2.3  Service简介    2.2.4  BroadcastReceiver简介    2.2.5  ContentProvider简介    2.2.6  Intent和IntentFilter简介  2.3  小结第3章  Android布局管理器  3.1  控件类概述    3.1.1  View类简介    3.1.2  ViewGroup类简介  3.2  线性布局    3.2.1  LinearLayout类简介    3.2.2  线性布局案例  3.3  表格布局    3.3.1  TableLayout类简介    3.3.2  表格布局案例  3.4  相对布局    3.4.1  RelativeLayout类简介    3.4.2  相对布局案例  3.5  帧布局    3.5.1  FrameLayout类简介    3.5.2  帧布局案例  3.6  绝对布局    3.6.1  AbsoluteLayout类简介    3.6.2  绝对布局案例  3.7  小结第4章  Android常用基本控件  4.1  文本控件的介绍    4.1.1  TextView类简介    4.1.2  EditText类简介    4.1.3  文本框使用案例  4.2  按钮控件    4.2.1  Button类简介    4.2.2  ImageButton类简介    4.2.3  9Patch图片简介    4.2.3  9Patch图片使用案例  4.3  状态开关按钮    4.3.1  ToggleButton类简介    4.3.2  开关按钮的使用  4.4  单选按钮与复选按钮    4.4.1  CheckBox和RadioButton类简介    4.4.2  单选按钮和复选按钮使用案例  4.5  图片控件    4.5.1  ImageView类简介    4.5.2  图片查看器  4.6  时钟控件    4.6.1  AnalogClock和DigitalClock类简介    4.6.2  时钟控件使用案例  4.7  日期与时间选择控件    4.7.1  DatePicker类简介    4.7.2  TimePicker类简介    4.7.3  日期时间控件使用案例  4.8  动画播放技术    4.8.1  帧动画简介    4.8.2  帧动画使用案例    4.8.3  补间动画简介    4.8.4  补间动画使用案例  4.9  小结  ……第5章  Android常用高级控件第6章  菜单与对话框高 级 篇第7章  Android事件处理模型第8章  游戏与3D应用程序开发第9章  消息广播与服务第10章  网络与数据处理第11章  手机通信功能开发第12章  手机特有Feature开发第13章  桌面组件与多媒体数据采集第14章  传感器应用的开发第15章  Google服务第16章  Android游戏开发实践——快乐数独案例篇第17章  Android地图搜索应用——美食天下第18章  Android社交分享平台——口袋微博
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android核心技术与实例详解
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android 安全架构深究
引言 ................... XXV
第1 章 Android 安全模型 ........ 1
Android 体系结构  1
Linux 内核层  2
原生用户空间层 ............. 3
Dalvik 虚拟机.................. 3
Java 运行时库 ................. 4
系统服务 ...... 4
进程间通信 .. 4
Binder ........... 5
Android 框架库 ............... 9
应用程序 .... 10
Android 的安全模型介绍 ..... 11
应用程序沙箱 ............... 12
权限 ............ 14
IPC ............. 14
代码签名和平台密钥 ... 15
多用户支持  15
SELinux ...... 16
系统更新 .... 16
验证启动模式 ............... 17
总结  18
第2 章 权限 ........ 19
权限的本质 ........ 19
权限申请 ............ 20
权限管理 ............ 21
权限的保护级别  22
权限的赋予 ........ 24
权限执行 ............ 29
内核层的权限执行 ....... 29
原生守护进程级别的权限执行 ....... 30
框架层的权限执行 ....... 32
系统权限 ............ 36
signature 权限 ................ 37
development 权限 .......... 38
共享用户ID ....... 38
自定义权限 ........ 41
公开和私有组件  42
activity 和service 权限 ......... 43
广播权限 ............ 44
content provider 权限 ............ 45
静态provider 权限 ........ 46
动态provider 权限 ........ 47
pending intent ..... 48
总结  50
第3 章 包管理机制 ................ 51
Android 应用程序包文件的格式 ............ 51
代码签名 ............ 53
Java 代码签名 ............... 53
Android 代码签名 ......... 59
APK 的安装过程 .................. 61
应用程序包和数据的位置 ............... 62
活动组件 .... 63
安装一个本地包 ........... 66
更新包 ........ 72
安装加密的APK .......... 76
转发锁定 .... 79
Android 4.1 转发锁定实现 .............. 80
加密的App 和Google Play ............. 82
包验证 ............... 83
Android 对包验证的支持 ................ 84
Google Play 实现 ........... 85
总结  85
第4 章 用户管理 . 87
多用户支持概述  87
用户类型 ............ 89
主用户（持有者） ....... 89
次要用户 .... 90
受限用户 .... 91
访客用户 .... 93
用户管理 ............ 93
命令行工具  94
用户状态和相关广播 ... 94
用户元数据 ........ 95
用户清单文件 ............... 95
用户元数据文件 ........... 96
用户系统目录 ............... 97
每个用户的应用程序管理 ... 98
应用程序数据目录 ....... 98
应用共享 .. 100
外存 ................. 102
外存实现 .. 103
多用户外存 ................. 103
外存权限 .. 109
其他多用户特性 ................. 111
总结 ................. 111
第5 章 加密服务 .................. 112
JCA Provider 结构 ............... 112
加密服务Provider ....... 113
JCA 引擎类 ...... 115
获得引擎类实例 ......... 115
算法名称 .. 116
SecureRandom ............. 117
MessageDigest ............. 118
Signature ... 118
Cipher ....... 119
Mac ........... 123
Key ............ 124
SecretKey 和PBEKey . 124
PublicKey、PrivateKey 和KeyPair .................. 125
KeySpec .... 125
KeyFactory .................. 125
SecretKeyFactory ......... 126
KeyPairGenerator ........ 127
KeyGenerator ............... 127
KeyAgreement ............. 128
KeyStore ... 129
CertificateFactory 和CertPath........ 131
CertPathValidator 和CertPathBuilder ............... 132
Android 的JCA Provider .... 133
Harmony 加密Provider .................. 133
Android 的Bouncy Castle Provider .................. 133
AndroidOpenSSL Provider ............. 137
OpenSSL ... 139
使用定制的Provider ........... 140
Spongy Castle .............. 140
总结 ................. 141
第6 章 网络安全与PKI ....... 142
PKI 与SSL 概述 ................ 143
公钥证书 .. 143
直接信任和Private CA .................. 145
公钥基础设施 ............. 145
证书撤销 .. 147
JSSE 介绍 ........ 148
安全套接字 ................. 148
对等认证 .. 149
主机名认证 ................. 151
Android JSSE 的实现 .......... 152
证书管理与认证 ......... 152
证书黑名单 ................. 158
重新审视PKI 信任模型 ................ 161
总结 ................. 165
第7 章 凭据存储 .................. 166
VPN 和Wi-Fi EAP 凭据..... 167
认证密钥和证书 ......... 167
系统凭据库 ................. 168
凭据存储的具体实现 ......... 169
密钥库（keystore）服务 ............... 169
密钥blob 的版本和类型 ............... 171
访问限制 .. 171
keymaster 模块和密钥库服务的实现 .............. 172
Nexus 4 的基于硬件的实现 .......... 173
框架集成 .. 175
公开API ........... 175
密钥链（KeyChain）API .............. 176
密钥链API 的实现 ..... 180
控制对密钥库的访问 . 181
Android 密钥库Provider ............... 183
总结 ................. 184
第8 章 在线账户管理 ........... 186
Android 账户管理概述 ....... 186
账户管理在Android 中的具体实现 ..... 187
AccountManagerService 与AccountManager .. 188
认证模块 .. 189
认证模块缓存 ............. 189
账户管理服务的操作和权限 ......... 190
账户数据库 ................. 193
多用户支持 ................. 196
增加一个认证器模块 . 197
Google 账户支持 ................. 200
Google 登录服务 ......... 201
Google 服务认证和授权 ................ 203
Google Play 服务 ......... 206
总结 ................. 208
第9 章 企业安全 .................. 209
设备管理 .......... 209
实现方法 .. 211
添加设备管理员 ......... 217
企业账户集成 ............. 220
VPN 支持 ......... 223
PPTP ......... 223
L2TP/IPSec .................. 223
IPSec Xauth ................. 224
基于SSL 的VPN ........ 224
legacy VPN .................. 225
基于应用的VPN ........ 230
多用户支持 ................. 233
Wi-Fi EAP ........ 236
EAP 认证方法 ............. 237
Android Wi-Fi 架构 ..... 238
EAP 凭据管理 ............. 239
使用WifiManager 添加EAP 网络  242
总结 ................. 244
第10 章 设备安全 ................ 245
控制系统的启动和安装 ... 246
引导加载程序 .......... 246
恢复系统 .................. 247
验证启动 ........ 247
dm-verity 简介 ......... 248
Android 实现 ........... 249
打开验证启动 .......... 249
磁盘加密 ........ 251
密码模式 .................. 252
密钥生成 .................. 253
磁盘加密密码 .......... 254
修改磁盘加密密码 .. 255
启用磁盘加密 .......... 256
启动加密设备 .......... 259
屏幕安全 ........ 261
锁屏实现 .................. 261
KeyGuard 解锁方法  263
暴力破解保护 .......... 270
安全USB 调试 ................. 270
xxii Android 安全架构深究
ADB 简介 ................ 271
对安全ADB 的需求 .................. 273
安全ADB ................ 273
安全ADB 实现 ....... 274
ADB 认证密钥 ........ 275
验证宿主密钥指纹 .. 276
Android 备份 .. 277
Android 备份简介 ... 277
备份文件格式 .......... 278
备份加密 .................. 279
控制备份范围 .......... 281
总结 ............... 281
第11 章 NFC 和安全元件 .... 283
NFC 简介 ....... 283
Android 对NFC 的支持 ... 284
读/写模式 ................. 284
端对端模式 .............. 289
卡模拟模式 .............. 289
安全元件 ........ 290
移动设备中的SE 组件 .............. 290
访问内嵌SE ............ 293
Android SE 执行环境 ................. 296
使用UICC 作为安全元件 ......... 299
软件卡模拟 .... 303
Android 4.4 的HCE 架构 ........... 304
APDU 路由 .............. 304
编写HCE 服务 ........ 309
HCE 应用的安全 ..... 311
总结 ............... 312
第12 章 SELinux ................. 313
SELinux 介绍 . 313
SELinux 架构........... 314
强制访问控制 .......... 315
SELinux 模式........... 315
安全上下文 .............. 316
安全上下文的设定和保存 ......... 317
安全规则 .................. 318
策略声明 .................. 318
类型转换规则 .......... 321
域转换规则 .............. 322
访问向量规则 .......... 323
Android 实现 .. 324
内核修改 .................. 325
用户空间修改 .......... 326
设备规则文件 .......... 334
策略事件日志 .......... 334
Android 4.4 的SELinux 策略 .............. 335
策略概述 .................. 335
强制域 ... 337
无限制域 .................. 338
应用域 ... 340
总结 ............... 341
第13 章 系统更新和root 访问 ................ 342
引导加载程序  343
解锁引导加载程序 .. 343
快速启动模式 .......... 344
recovery .......... 347
原生恢复系统 .......... 347
定制恢复系统 .......... 357
root 权限 ........ 359
工程机上的root 访问 ................ 359
正式版本中的root 访问 ... 363
通过修改boot 和system 镜像获取root ...... 364
通过刷入一个OTA 更新包来获取root ....... 364
通过漏洞来获取root ................. 371
总结 ............... 372
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android 安全架构深究
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android开发入门与实战
第1章 掀起你的盖头来——Android开发扫盲
1.1 Android行业概述
1.1.1 Android缘起
1.1.2 Android市场发展轨迹
1.1.3 Android SDK发布里程碑
1.2 Android开发概述
1.2.1 Android开发生态链
1.2.2 Android国内开发者现况
1.3 Android开发资源
1.3.1 Android开发线上社区
1.3.2 Android学习资料
1.3.3 Android开发线下活动
1.4 本章小结
第2章 工欲善其事必先利其器——搭建环境Android
2.1 开发Android应用前的准备
2.1.1 操作系统要求
2.1.2 Android软件开发包
2.2 Windows开发环境搭建
2.2.1 安装JDK
2.2.2 安装Eclipse
2.2.3 安装Android SDK
2.2.4 安装ADT
2.2.5 真实体验——创建Android虚拟设备（AVD）
2.3 Linux一族——Ubuntu开发环境搭建
2.3.1 安装JDK
2.3.2 安装Eclipse
2.3.3 安装Android SDK
2.3.4 安装ADT
2.3.5 创建Android虚拟设备（AVD）
2.4 Mac OS一族——苹果开发环境搭建
2.5 本章小结
第3章 清点可用的资本——Android SDK介绍
3.1 Android SDK概要
3.2 深入探索Android SDK的密秘
3.2.1 Android SDK的目录结构
3.2.2 android.jar及其内部结构
3.2.3 SDK文档及阅读技巧
3.2.4 先来热身——Android SDK例子解析
3.2.5 SDK提供的工具介绍
3.3 Android典型包分析
3.3.1 开发基石——Android API核心开发包介绍
3.3.2 拓展开发外延——Android可选API介绍
3.4 本章小结
第4章 千里之行始于足下——Hello EoE
4.1 Hello EoE应用分析
4.1.1 新建一个Android项目
4.1.2 Android项目目录结构
4.1.3 运行项目
4.2 调试项目
4.2.1 设置断点
4.2.2 Debug项目
4.2.3 断点调试
4.3 本章小结
第5章 良好的学习开端——Android应用程序架构分析
5.1 Android系统架构
5.1.1 Applications（应用程序层）
5.1.2 Application Framework（应用程序框架层）
5.1.3 Libraries Android Runtime（库以及Android运行环境）
5.1.4 Linux Kernel（Linux 内核）
5.2 Android应用程序工程结构分析
5.2.1 应用程序工程结构组成分析
5.2.2 AndroidMainfest文件分析
5.3 本章小结
第6章 Android的核心——Activity
6.1 什么是Activity
6.2 Activity的生命周期
6.3 Activity的监控范围内的三个主要循环
6.4 Activity拥有四个基本的状态
6.5 Task、栈以及加载模式
6.6 配置改变
6.7 如何保存和恢复Activity状态
6.8 启动Activity并得到结果
6.9 Activity小实例
6.10 本章小结
第7章 我来“广播”你的意图——Intent & Intent Filters & Broadcast Receivers
7.1 什么是Intent
7.2 Intent结构
7.3 Intent的两种类型
7.3.1 显式Intent
7.3.2 隐式Intent
7.4 什么是Intent Filter
7.5 什么是Broadcast Receiver
7.6 如何创建BroadcastReceiver
7.7 BroadcastReceiver生命周期
7.8 广播类型
7.9 Intent&BroadcastReceiver
7.10 本章小结
第8章 一切为用户服务——Service
8.1 什么是Service
8.2 Service的两种形式
8.3 如何创建Service
8.3.1 创建启动形式Service
8.3.2 创建绑定形式Service
8.4 Service的生命周期
8.5 Service小实例
8.5.1 启动形式Service
8.5.2 绑定形式Service
8.6 本章小结
第9章 提供数据的引擎——Content Providers
9.1 什么是ContentProviders
9.2 什么是ContentResolver
9.3 如何调用系统的ContentProvider
9.4 如何使用ContentResolver访问自定义ContentProvider
9.5 本章小结
第10章 我的美丽我做主——用户界面（User Interface）
10.1 布局——Layout
10.1.1 线性布局——Linear Layout
10.1.2 相对布局——Relative Layout
10.2 列表视图
10.2.1 列视图——Listview
10.2.2 表视图——GridView
10.3 输入控件——Input Controls
10.3.1 基本输入控件
10.3.2 对话框控件——Dialog
10.4 菜单——Menu
10.5 活动栏——Action Bar
10.6 通知——Notifications
10.7 本章小结
第11章 循序渐进——线程&进程
11.1 线程（Thread）&进程（Process）概念
11.2 线程、进程与Android系统组件的关系
11.3 实现多线程的方式
11.3.1 Thread
11.3.2 AsyncTask
11.4 本章小结
第12章 信息百宝箱——全面数据存储
12.1 SharedPreferences（分享爱好）
12.1.1 相识SharedPreferences
12.1.2 保存数据
12.1.3 删除数据
12.1.4 修改数据
12.1.5 查询数据
12.1.6 监听数据变化
12.2 流文件存储
12.2.1 基本方法简介
12.2.2 存储流程图
12.2.3 数据保存和查询的实例
12.3 实战db4o数据库
12.4 SQLite数据库
12.4.1 什么是SQLite数据库
12.4.2 Android中的SQLite
12.4.3 SQLiteOpenHelper
12.4.4 创建或打开数据库
12.4.5 关闭数据库
12.4.6 创建数据表
12.4.7 删除数据表
12.4.8 增加数据
12.4.9 查询数据
12.4.10 修改数据
12.4.11 删除数据
12.4.12 事务
12.4.13 SQLite可视化管理工具
12.4.14 图片的保存和查询
12.5 记事本实例
12.5.1 创建主界面
12.5.2 添加内容界面的创建
12.5.3 保存数据
12.5.4 以列表的形式查询数据
12.5.5 选项的菜单
12.5.6 “查看”选项的事件
12.5.7 “修改”选项的事件
12.5.8 “删除”选项的事件
12.6 本章小结
第13章 不积跬步无以至千里——Widget
13.1 认识Widget
13.2 使用Widget
13.3 Widget生命周期
13.4 Widget设计向导
13.4.1 添加配置页面
13.4.2 Widget设计向导
13.5 Widget实例——eoeWikiRecent Widget
13.6 本章小结
第14章 更上一层楼——网络通信和XML解析
14.1 Android网络通信基础
14.1.1 Apache网络接口
14.1.2 标准Java网络接口
14.1.3 Android网络接口
14.2 基于HTTP协议的网络通信
14.2.1 HTTP介绍
14.2.2 使用Apache接口
14.2.3 使用标准Java接口
14.2.4 总结
14.3 基于Socket的网络通信
14.3.1 Socket介绍
14.3.2 Android Socket编程
14.4 XML解析技术介绍
14.4.1 DOM方式
14.4.2 SAX方式
14.4.3 PULL方式
14.5 本章小结
第15章 灵活的应用
15.1 Android自定义UI控件
15.1.1 Android UI结构
15.1.2 Android 绘制View的原理
15.1.3 Android 自定义控件分析
15.1.4 Android自定义控件小结
15.2 片段（Fragment）布局
15.2.1 Fragment简介
15.2.2 Fragment设计理念
15.2.3 创建一个Fragment
15.2.4 添加用户界面
15.2.5 向活动中添加一个片段
15.2.6 添加没有UI的片段
15.2.7 管理片段
15.2.8 执行片段事务（Fragment Transaction）
15.2.9 和活动进行通信
15.2.10 小结
15.3 画布和画笔
15.3.1 画布简介
15.3.2 画笔简介
15.3.3 例子
15.4 本章小结
第16章 万变不离其宗——多设备适配
16.1 多屏幕适配
16.1.1 屏幕适配概述
16.1.2 屏幕的分类
16.1.3 如何支持多屏幕
16.1.4 从项目中怎么适配多屏幕
16.2 多语言处理
16.2.1 多语言处理概述
16.2.2 多语言在程序中的实现
16.3 多版本处理
16.3.1 支持不同的版本
16.3.2 设备运行时检查系统的版本
第17章 开发好应用——省电、布局、快速响应、NFC、Android bean等好玩的应用
17.1 开发省电的应用
17.1.1 数据传输时避免浪费电量
17.1.2 电池续航时间优化
17.2 近距离无线通信——NFC
17.2.1 近距离无线通信——NFC概述
17.2.2 近距离无线通信——NFC基础
17.2.3 Android对NFC的支持
17.2.4 Android应用中实现NFC
17.3 本章小结
第18章 没有规矩不成方圆——Android UI设计规范
18.1 UI设计概述
18.1.1 Android UI设计概述
18.1.2 自成体系的风格设计
18.2 UI设计原则（Design Principles）
18.2.1 让我着迷-Enchant Me
18.2.2 简化我的生活-Simplify My Life
18.2.3 让我感到惊奇-Make Me Amazing
18.3 UI设计规范
18.3.1 应用结构规范
18.3.2 导航规范
18.3.3 通知规范
18.4 本章小结
第19章 综合案例一——图书信息查询
19.1 项目介绍
19.2 ZXing
19.2.1 ZXing介绍
19.2.2 ZXing调用流程
19.3 豆瓣图书API
19.3.1 豆瓣图书API介绍
19.3.2 豆瓣图书API调用流程
19.4 项目效果图
19.5 项目编码
19.5.1 实体类
19.5.2 欢迎界面
19.5.3 数据下载
19.5.4 数据解析
19.5.5 信息显示界面
19.6 本章小结
第20章 综合案例二——eoe Wiki客户端
20.1 背景与简介
20.1.1 eoe Wiki网站
20.1.2 eoe Wiki客户端
20.2 项目设计
20.2.1 原型图设计
20.2.2 流程图设计
20.3 功能模块
20.3.1 项目目录结构
20.3.2 滑块特效
20.3.3 网络交互
20.3.4 JSON数据解析
20.3.5 数据库与缓存
20.4 最终演示
20.5 本章小结
第21章 综合案例三——广告查查看看
21.1 产品开发背景
21.2 产品功能简介
21.3 本章小结
第22章 综合案例四——手机信息小助手
22.1 背景与简介
22.1.1 应用背景与简介
22.1.2 手机信息小助手功能规划
22.2 手机信息小助手编码实现
22.2.1 手机信息小助手主界面
22.2.2 系统信息
22.2.3 硬件信息
22.2.4 软件信息
22.2.5 运行时信息
22.2.6 文件浏览器
22.3 项目细节完善
22.4 手机信息小助手功能展望
22.5 本章小结
第23章 综合案例五——“土地浏览器”实例
23.1 土地浏览器简介
23.1.1 为什么要开发土地浏览器
23.1.2 土地浏览器的基本功能
23.2 土地浏览器的设计
23.3 土地浏览器的开发过程
23.3.1 启动界面的开发
23.3.2 网址输入栏的设计
23.3.3 网址输入栏的触屏弹出和收缩
23.3.4 网址的获取
23.3.5 如何在本程序中打开浏览器
23.3.6 网站标题的获取
23.3.7 网站图标的获取
23.3.8 网站打开进度的获得
23.3.9 网页网址的获得
23.3.10 网页的触屏滑动翻页
23.3.11 网页缩放
23.3.12 书签和历史记录
23.3.13 底部菜单
23.3.14 关于设置
23.3.15 皮肤
23.3.16 壁纸设置
23.3.17 主页设置
23.3.18 JavaScript设置
23.3.19 缓存设置
23.3.20 缓存删除
23.3.21 其他
23.4 本章小结
第24章 综合案例六——地图跟踪
24.1 百度地图示例应用分析
24.1.1 百度地图SDK开发准备
24.1.2 百度地图示例程序讲解
24.2 本章小结
后记
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android开发入门与实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android游戏开发实践指南
译者序
序
前言
第1章　手机游戏 / 1
1.1　手机游戏市场 / 2
1.2　电脑游戏的世界 / 3
1.2.1　游戏类型 / 3
1.2.2　适合于手机的游戏 / 5
1.2.3　典型的游戏组件 / 6
1.2.4　《少女大战吸血鬼》 / 8
1.2.5　v3的设计 / 9
1.3　andengine范例 / 11
1.4　总结 / 12
1.5　习题 / 12
第2章　游戏要素与工具 / 14
2.1　软件开发工具 / 15
2.1.1　android sdk / 15
2.1.2　andengine游戏引擎库 / 16
2.1.3　andengine游戏概念 / 17
.2.1.4　box2d物理引擎 / 19
2.2　图形工具 / 19
2.2.1　矢量图工具：inkscape / 20
2.2.2　位图工具：gimp / 21
2.2.3　动画捕捉：animget / 22
2.2.4　瓦片地图创建工具：tiled / 23
2.2.5　truetype字体创建与编辑工具：fontstruct / 23
2.3　声音工具 / 24
2.3.1　音效工具：audacity / 24
2.3.2　背景音乐工具：musescore / 25
2.4　初试身手：制作启动画面 / 26
2.4.1　创建游戏项目 / 27
2.4.2　加入andengine库 / 27
2.4.3　加入启动画面代码 / 28
2.4.4　用模拟器运行游戏 / 30
2.4.5　用android设备运行游戏 / 31
2.5　总结 / 31
2.6　习题 / 32
第3章　游戏循环与菜单 / 33
3.1　游戏循环概述 / 34
3.2　andengine的游戏循环 / 35
3.2.1　初始化engine对象 / 35
3.2.2　其他engine类 / 36
3.3　为v3增加菜单屏幕 / 37
3.3.1　andengine的菜单 / 37
3.3.2　构建v3的开始菜单 / 40
3.3.3　创建菜单 / 40
3.3.4　mainmenuactivity类 / 45
3.3.5　常数与字段 / 46
3.3.6　onloadresources()方法 / 46
3.3.7　onloadscene()方法 / 46
3.3.8　createstaticmenuscene()方法与createpopupscene()方法 / 46
3.3.9　onkeydown()方法与onmenuitemclicked()方法 / 47
3.3.10　从启动画面切换到菜单 / 47
3.4　内存使用 / 50
3.5　“退出”选项 / 50
3.6　总结 / 50
3.7　习题 / 51
第4章　场景、图层、场景切换与实体修改器 / 52
4.1　andengine的场景 / 53
4.1.1　实体/组件模型 / 53
4.1.2　entity类 / 54
4.1.3　构造器 / 54
4.1.4　entity类的位置相关方法 / 55
4.1.5　entity类的缩放相关方法 / 55
4.1.6　entity类的颜色相关方法 / 56
4.1.7　entity类的旋转相关方法 / 57
4.1.8　管理子对象 / 57
4.1.9　管理modifier / 58
4.1.10　其他有用的entity类方法 / 58
4.1.11　layer类 / 59
4.1.12　scene类 / 59
4.1.13　背景管理 / 60
4.1.14　子scene对象管理 / 60
4.1.15　layer对象管理 / 61
4.1.16　上级scene对象管理 / 61
4.1.17　触摸区域管理 / 61
4.1.18　特殊scene类 / 61
4.1.19　用于entity的modifier类 / 62
4.1.20　entitymodifier类的通用方法 / 63
4.1.21　位置相关的entitymodifier类 / 63
4.1.22　缩放相关的entitymodifier类 / 66
4.1.23　颜色相关的entitymodifier类 / 67
4.1.24　旋转相关的entitymodifier类 / 67
4.1.25　透明度相关的entitymodifier类 / 68
4.1.26　延迟相关的entitymodifier类 / 69
4.1.27　modifier的组合 / 69
4.1.28　easefunction / 71
4.2　创建游戏第1关的场景 / 79
4.3　总结 / 84
4.4　习题 / 85
第5章　绘制与精灵 / 86
5.1　快速回顾entity类 / 87
5.2　绘制线条与矩形 / 88
5.2.1　线条 / 88
5.2.2　矩形 / 88
5.3　精灵 / 88
5.3.1　贴图 / 89
5.3.2　效率问题 / 99
5.3.3　复合精灵 / 100
5.4　总结 / 104
5.5　习题 / 105
第6章　动画 / 106
6.1　动画所需素材 / 107
6.2　动画的瓦片贴图 / 108
6.3　andengine的动画 / 108
6.4　动画范例 / 110
6.5　将动画加入level1activity类 / 114
6.6　动画制作的问题 / 122
6.7　高级话题：从3d模型中制作2d动画 / 123
6.8　总结 / 123
6.9　习题 / 123
第7章　文本 / 125
7.1　字型与字体 / 126
7.2　载入字型 / 127
7.2.1　font类 / 127
7.2.2　strokefont类 / 127
7.2.3　fontfactory类 / 128
7.2.4　fontmanager类 / 128
7.2.5　typeface类 / 128
7.3　andengine中的文本 / 129
7.3.1　andengine中的文本api / 129
7.3.2　桌面通知 / 132
7.4　定制字型 / 133
7.5　将定制字型加入v3 / 135
7.6　总结 / 142
7.7　习题 / 142
第8章　用户输入 / 144
8.1　android与andengine的输入方式 / 145
8.1.1　字母键盘与袖珍键盘 / 146
8.1.2　触摸 / 146
8.1.3　自定义手势 / 152
8.1.4　屏幕游戏手柄 / 152
8.1.5　加速计 / 153
8.1.6　位置和方向 / 153
8.1.7　语音 / 158
8.2　将用户输入加入v3 / 161
8.3　总结 / 166
8.4　习题 / 166
第9章　瓦片地图 / 168
9.1　为何使用瓦片地图 / 169
9.2　瓦片地图的类型 / 169
9.2.1　正交瓦片地图 / 171
9.2.2　等距投影瓦片地图 / 171
9.3　瓦片地图的结构 / 172
9.4　andengine中的瓦片地图 / 172
9.4.1　tmx与tsx文件 / 172
9.4.2　tmxloader类 / 172
9.4.3　tmxtiledmap类 / 173
9.4.4　tmxlayer类 / 174
9.4.5　tmxtile类 / 174
9.5　瓦片编辑器：tiled / 175
9.6　tmx文件 / 176
9.7　正交瓦片地图游戏：《打吸血鬼》 / 177
9.7.1　wav的瓦片地图 / 177
9.7.2　创建wav的瓦片集 / 178
9.7.3　创建wav的瓦片地图 / 179
9.7.4　《打吸血鬼》游戏的代码 / 181
9.8　等距投影瓦片地图 / 191
9.9　总结 / 191
9.10　习题 / 192
第10章　粒子系统 / 193
10.1　粒子发射器是什么 / 194
10.2　粒子系统如何运作 / 195
10.3　andengine的粒子系统 / 195
10.3.1　particlesystem类 / 196
10.3.2　particleemitter类 / 197
10.3.3　particleinitializer类 / 198
10.3.4　particlemodifier类 / 199
10.3.5　有用的particlesystem类方法 / 200
10.4　创建粒子系统 / 201
10.4.1　以传统方式创建粒子系统 / 201
10.4.2　以xml文件创建粒子系统 / 202
10.5　将粒子发射器加入v3游戏中 / 206
10.5.1　以传统方式制作v3的爆炸效果 / 206
10.5.2　以xml文件方式制作v3的爆炸效果 / 210
10.6　总结 / 211
10.7　习题 / 211
第11章　声音 / 213
11.1　如何在游戏中使用声音 / 214
11.1.1　音乐 / 214
11.1.2　音效 / 214
11.2　音乐与音效的来源 / 215
11.3　音乐与音效制作工具 / 216
11.4　音频解码器 / 216
11.5　使用andengine播放声音 / 217
11.5.1　music类 / 218
11.5.2　sound类 / 218
11.5.3　musicfactory类 / 219
11.5.4　soundfactory类 / 219
11.6　将声音加入v3游戏 / 220
11.6.1　创建音效 / 220
11.6.2　创建背景音乐 / 223
11.6.3　修改v3游戏的代码 / 225
11.7　总结 / 235
11.8　习题 / 236
第12章　物理效果 / 237
12.1　box2d物理引擎 / 238
12.1.1　box2d概念 / 238
12.1.2　设定box2d / 240
12.2　构建物理学游戏的关卡 / 241
12.3　andengine与box2d / 242
12.3.1　下载andenginephysicsbox2dextension并将其加入游戏项目 / 242
12.3.2　box2d的api / 244
12.3.3　简单的物理效果范例 / 247
12.3.4　关卡加载 / 252
12.4　《愤怒的村民》：v3中的物理学小游戏 / 255
12.5　实现iv游戏 / 255
12.5.1　创建关卡 / 256
12.5.2　编写ivactivity.java / 260
12.6　总结 / 270
12.7　习题 / 270
第13章　人工智能 / 272
13.1　游戏ai相关话题 / 273
13.1.1　简单的脚本 / 273
13.1.2　决策树、minimax树与状态机 / 273
13.1.3　专家系统或基于规则的决策系统 / 276
13.1.4　神经网络 / 277
13.1.5　遗传算法 / 278
13.1.6　路径查找 / 279
13.1.7　动态困难度调节 / 280
13.1.8　程序化的音乐生成 / 280
13.2　实现v3游戏的ai / 281
13.3　总结 / 290
13.4　习题 / 290
第14章　计分与碰撞 / 291
14.1　计分系统设计 / 292
14.1.1　更新小游戏取得的分数 / 293
14.1.2　记录5个最高分 / 293
14.1.3　在小游戏场景中显示分数 / 294
14.1.4　分数页面的显示 / 295
14.2　andengine的碰撞 / 298
14.2.1　andengine的shape碰撞 / 298
14.2.2　box2d的碰撞 / 299
14.3　开始计算玩家的得分 / 300
14.4　《墓地》（第1关）场景 / 300
14.4.1　常量和字段 / 300
14.4.2　onloadengine方法与onloadresources方法 / 303
14.4.3　onloadscene方法 / 304
14.4.4　mstartvamp任务 / 306
14.5　《打吸血鬼》 / 307
14.5.1　常量和字段 / 307
14.5.2　onloadscene方法 / 308
14.5.3　opencoffin和closecoffin方法 / 309
14.6　《愤怒的村民》 / 310
14.6.1　常量和字段 / 310
14.6.2　onloadscene方法 / 311
14.6.3　onloadcomplete方法 / 312
14.6.4　addstake方法 / 313
14.7　总结 / 314
14.8　习题 / 314
第15章　多媒体扩展包 / 315
15.1　下载多媒体扩展包 / 316
15.2　动态壁纸 / 317
15.2.1　android动态壁纸 / 317
15.2.2　创建v3的android动态壁纸 / 318
15.3　mod格式音乐 / 322
15.3.1　搜寻mod格式的音乐 / 322
15.3.2　xmp mod播放器 / 323
15.4　多人游戏 / 324
15.5　andengine的多点触摸 / 326
15.6　增强现实游戏 / 328
15.7　总结 / 332
15.8　习题 / 332
第16章　游戏集成 / 334
16.1　困难度调节 / 336
16.1.1　困难度参数的保存 / 336
16.1.2　困难度参数的设定 / 337
16.2　游戏结束画面的代码 / 337
16.3　第1关：主游戏 / 340
16.4　《打吸血鬼》 / 345
16.5　《愤怒的村民》 / 347
16.6　选项菜单 / 350
16.7　总结 / 350
16.8　习题 / 350
第17章　测试与发行 / 352
17.1　应用程序商业模式 / 353
17.2　测试与发行准备工作 / 354
17.2.1　在实际设备上测试游戏 / 354
17.2.2　考虑加入终端用户许可协议 / 355
17.2.3　向manifest文件加入图标与标签 / 357
17.2.4　关闭记录与调试功能 / 357
17.2.5　在游戏中增加版本号 / 357
17.2.6　获取密钥 / 358
17.2.7　编译与签名最终的.apk文件 / 359
17.2.8　测试最终的.apk文件 / 359
17.3　发行游戏 / 360
17.3.1　android market / 360
17.3.2　amazon app store / 362
17.4　推广游戏 / 363
17.4.1　app store推广 / 364
17.4.2　游戏评论网站推广 / 366
17.4.3　手机广告 / 366
17.4.4　口碑营销 / 367
17.4.5　社交网络推广 / 367
17.5　总结 / 367
附录　习题解答 / 369
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android游戏开发实践指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入理解Android
推荐序
前言
第一部分　基础篇
第1章　初识Android / 2
1.1　智能手机的系统结构 / 2
1.2　Android系统架构 / 3
1.2.1　应用层 / 3
1.2.2　应用框架层 / 4
1.2.3　系统运行库层 / 5
1.2.4　核心层 / 6
1.3　Android Telephony框架结构 / 6
1.3.1　系统运行库层的HAL层 / 7
1.3.2　简析HAL结构 / 8
1.3.3　Android为什么引入HAL / 9
1.3.4　Android中HAL的运行结构 / 9
1.4　本章小结 / 10
第2章　搭建Android源代码编译环境 / 11
2.1　Ubuntu Linux操作系统及工具安装 / 11
2.1.1　PC配置建议 / 12
2.1.2　Ubuntu安装光盘的制作 / 12
2.1.3　Ubuntu安装过程 / 12
2.1.4　Ubuntu系统工具包更新升级 / 14
2.1.5　Java运行环境JDK安装及配置 / 15
2.1.6　Android SDK的下载和配置 / 16
2.1.7　使用Android SDK启动虚拟设备 / 17
2.2　Android源代码下载及编译过程 / 19
2.2.1　工作目录设置 / 19
2.2.2　源代码下载 / 19
2.2.3　整体编译Android 源代码 / 19
2.2.4　单个模块按需编译 / 20
2.2.5　编译生成本地Android SDK / 21
2.3　Android常用工具使用及相关技巧说明 / 21
2.3.1　使用本地编译成功的镜像文件启动Android模拟器 / 22
2.3.2　Android调试工具adb的使用方法 / 23
2.3.3　进入Android虚拟设备控制台模拟短信、来电等功能 / 23
2.4　Eclipse配置及使用 / 24
2.4.1　Android开发套件ADT下载及配置 / 24
2.4.2　建立Android源代码Java工程 / 25
2.4.3　格式化Android Java源代码 / 26
2.5　使用Source Insight方便阅读C/C++代码 / 26
2.5.1　安装Wine / 26
2.5.2　安装Source Insight / 26
2.5.3　配置Source Insight C/C++工程 / 27
2.6　本章小结 / 27
第3章　主要技术准备 / 29
3.1　何为同步和异步 / 29
3.2　Handler消息处理机制 / 30
3.2.1　Handler概念分析 / 30
3.2.2　Handler特性 / 30
3.2.3　常用Handler消息处理机制讲解 / 31
3.2.4　Handler的作用 / 34
3.3　AIDL跨应用服务 / 35
3.3.1　AIDL概念分析 / 35
3.3.2　AIDL服务提供方 / 36
3.3.3　AIDL服务调用方 / 37
3.4　广播 / 38
3.4.1　Android 系统中的广播 / 38
3.4.2　Broadcast接收 / 38
3.4.3　Broadcast发送 / 39
3.5　本章小结 / 39
第二部分　Telephony通话功能
第4章　深入解析通话流程 / 42
4.1　通话相关主要源代码汇总及简要说明 / 42
4.2　电话主动呼叫流程分析 / 44
4.2.1　运行Android虚拟设备 / 44
4.2.2　拨号界面DialtactsActivity的onCreate方法 / 45
4.2.3　DialpadFragment拨号盘Tab表单 / 45
4.2.4　寻找拨号统一入口OutgoingCallBroadcaster / 47
4.2.5　CallController拨号placeCall方法 / 47
4.2.6　Phone帮助类PhoneUtils静态placeCall方法 / 48
4.2.7　通话大管家CallManager / 50
4.2.8　Phone对象的dial拨号方法 / 50
4.2.9　Call状态跟踪者GsmCallTracker / 51
4.2.10　RIL消息的出入口RIL.java / 52
4.2.11　启动通话主界面InCallScreen / 53
4.2.12　拨号流程总结 / 53
4.3　电话被动接收来电流程分析 / 55
4.3.1　Android虚拟设备模拟接收来电 / 56
4.3.2　RegistrantList消息处理机制 / 57
4.3.3　GsmCallTracker响应RIL的Call状态变化通知 / 60
4.3.4　RIL.java的getCurrentCalls方法 / 60
4.3.5　GsmCallTracker响应消息通知 / 61
4.3.6　handlePollCalls发出来电通知 / 61
4.3.7　GSMPhone的通知方法notifyNewRingingConnection / 62
4.3.8　CallManager响应来电消息通知 / 62
4.3.9　CallNotifier响应来电通知 / 63
4.3.10　InCallScreen展现来电界面 / 64
4.3.11　来电流程总结 / 65
4.4　通话关键流程 / 66
4.4.1　建立Android通话模型 / 67
4.4.2　AT命令发送流程 / 68
4.4.3　通话状态变化流程 / 69
4.4.4　本地主动挂断通话流程 / 70
4.4.5　远端断开通话连接流程 / 72
4.5　本章小结 / 73
第5章　深入解析Telephony通话应用机制 / 74
5.1　Phone应用的关键代码解析 / 74
5.2　认识通话主界面InCallScreen / 75
5.2.1　InCallScreen中的主要方法 / 76
5.2.2　单例模式的Activity通话界面 / 76
5.2.3　Layout布局说明 / 77
5.3　通话主界面InCallScreen / 78
5.3.1　onCreate—运行Activity / 78
5.3.2　onNewIntent—单例InCallScreen加载入口 / 80
5.3.3　internalResolveIntent—进入InCallScreen处理Intent的唯一方法 / 81
5.3.4　onResume—显示InCallScreen通话界面 / 82
5.3.5　handleMessage—Handler消息响应方法 / 84
5.3.6　onSuppServiceFailed—显示通话服务失败提示信息 / 85
5.3.7　updateScreen—更新通话界面 / 86
5.3.8　onDisconnect—断开通话连接 / 88
5.3.9　handleOnscreenButtonClick—响应通话控制按钮点击事件 / 90
5.3.10　InCallScreen通话界面运行机制总结 / 91
5.4　通话信息展示CallCard / 92
5.4.1　两路通话布局View控件 / 92
5.4.2　updateState—更新CallCard / 93
5.4.3　displayMainCallStatus—显示/更新第一路通话信息 / 95
5.4.4　displayOnHoldCallStatus—显示/更新第二路通话信息 / 97
5.4.5　修改通话信息展示的思路及原则 / 98
5.5　 通话控制InCallTouchUi / 99
5.5.1　View布局控件 / 99
5.5.2　updateState—更新InCallTouchUi / 101
5.5.3　MultiWaveView—来电控制接听、拒接界面 / 102
5.5.4　HeadSet—响应免提事件 / 103
5.5.5　修改来电界面的思路及原则 / 104
5.6　通话功能中必不可少的DTMF / 105
5.6.1　什么是DTMF / 105
5.6.2　DTMFTwelveKeyDialer的布局 / 105
5.6.3　如何显示DTMF界面 / 106
5.6.4　Tone音发送流程 / 106
5.7　Phone应用的加载入口PhoneApp类 / 108
5.7.1　PhoneApp类属性及方法 / 108
5.7.2　onCreate—PhoneApp应用加载入口 / 109
5.7.3　PowerManager—PhoneApp电源管理 / 110
5.7.4　Sensor—PhoneApp感应器的应用 / 112
5.7.5　MediaButtonBroadcastReceiver—接收耳机HOOK键广播事件 / 115
5.7.6　PhoneAppBroadcastReceiver—接收Phone应用杂项广播事件 / 116
5.8　Handler消息处理的幕后工作者CallNotifier / 118
5.8.1　CallNotifier的本质 / 118
5.8.2　Handler消息注册和响应机制 / 119
5.8.3　onNewRingingConnection—接收到新来电的幕后处理 / 119
5.8.4　onPhoneStateChanged—通话状态变化的幕后处理 / 121
5.8.5　onDisconnect—通话连接断开的幕后处理 / 122
5.9　本章小结 / 124
第6章　手机通话功能框架层实现机制 / 125
6.1　Telephony Frameworks层解析 / 125
6.1.1　通话功能相关代码文件 / 125
6.1.2　通话功能关键类 / 126
6.1.3　Telephony通信能力模型 / 127
6.2　GSMPhone对象详解 / 128
6.2.1　GSMPhone类层次继承关系 / 128
6.2.2　GSMPhone类代码结构解析 / 129
6.2.3　PhoneFactory工厂方法实现类 / 130
6.2.4　PhoneProxy代理模式实现类 / 131
6.2.5　GSMPhone类的组合逻辑关系 / 132
6.2.6　GSMPhone类的Handler消息处理机制 / 133
6.2.7　GSMPhone类通话管理实现机制 / 136
6.3　CallTracker运行机制 / 137
6.3.1　GsmCallTracker类代码结构解析 / 137
6.3.2　GsmCallTracker的Handler消息处理机制 / 139
6.3.3　GsmCallTracker与RIL对象的交互机制 / 142
6.4　以GsmCall为核心的通话管理模型 / 145
6.4.1　GsmCall类代码结构解析 / 146
6.4.2　GsmConnection类代码结构解析 / 147
6.4.3　DriverCall与GsmCall、GsmConnection的关系 / 149
6.5　GsmCallTracker类的 handlePollCalls方法处理逻辑 / 153
6.5.1　初始化操作 / 153
6.5.2　更新通话相关信息 / 154
6.5.3　根据最新的通话状态发出通知 / 158
6.5.4　更新手机状态 / 158
6.6　GsmCallTracker通话连接断开的处理机制 / 160
6.6.1　本地主动挂断通话的处理机制 / 160
6.6.2　远端断开通话连接的处理机制 / 162
6.7　Android虚拟设备上验证GSM制式手机的通话模型 / 164
6.7.1　增加日志输出 / 164
6.7.2　运行Android虚拟设备并分析日志 / 166
6.8　通话大管家CallManager / 168
6.8.1　CallManager的本质 / 168
6.8.2　Handler消息注册及运行机制 / 169
6.8.3　如何获取通话基本信息 / 170
6.9　通话计时实例分析 / 171
6.9.1　记录通话的开始时间 / 171
6.9.2　记录通话的结束时间 / 171
6.9.3　Phone应用计算通话时长 / 171
6.10　 Handler消息处理机制 / 173
6.10.1　Handler消息的注册过程 / 173
6.10.2　Handler消息的接收和响应过程 / 174
6.11　实战—来电防火墙 / 175
6.11.1　应用原理分析 / 175
6.11.2　在onNewRingingConnection方法加入拦截请求 / 176
6.12　本章小结 / 176
第三部分　Telephony通信功能
第7章　网络服务状态运行机制 / 180
7.1　什么是ServiceState / 180
7.2　初识ServiceState实体类 / 180
7.2.1　ServiceState类的实质 / 181
7.2.2　ServiceState类关键常量及属性 / 181
7.2.3　ServiceState类关键方法 / 182
7.3　ServiceStateTracker运行机制详解 / 183
7.3.1　ServiceStateTracker抽象类为核心的类图 / 184
7.3.2　ServiceStateTracker代码结构 / 184
7.3.3　ServiceStateTracker的Handler消息处理机制 / 186
7.3.4　ServiceStateTracker与RIL对象的交互机制 / 189
7.4　handlePollStateResult方法处理逻辑 / 192
7.4.1　RIL返回查询结果的异常判断和处理 / 192
7.4.2　处理4个不同网络服务查询返回的结果 / 192
7.4.3　用pollStateDone方法完成收尾工作 / 195
7.5　ServiceState最佳实践 / 197
7.5.1　获取运营商信息 / 197
7.5.2　通知栏手机信号实时变化 / 198
7.6　实战—飞行模式的实现 / 200
7.6.1　飞行模式的设置入口 / 200
7.6.2　Radio无线通信模块的开启或关闭 / 202
7.7　本章小结 / 203
第8章　Android手机上网实现机制 / 204
8.1　Android网络整体结构 / 204
8.2　什么是DataConnection / 205
8.2.1　DataConnection类定义及子类 / 205
8.2.2　DataConnection类关键属性 / 206
8.2.3　DataConnection类的方法 / 207
8.2.4　5个数据连接对象的状态转换 / 207
8.3　StateMachine状态机 / 208
8.3.1　State设计模式 / 209
8.3.2　StateMachine核心类 / 209
8.3.3　StateMachine运行机制 / 210
8.3.4　DataConnection使用State模式的运行机制 / 211
8.4　什么是APN / 212
8.4.1　APN配置关键字段 / 212
8.4.2　Android支持的APN类型 / 213
8.4.3　如何在Android中新增APN配置 / 213
8.5　开机自动建立default默认数据连接 / 215
8.5.1　如何查看手机上网的基本参数配置 / 215
8.5.2　初始化ApnContext / 216
8.5.3　创建DataConnection数据连接 / 219
8.5.4　激活DataConnection数据连接 / 222
8.6　DataConnectionTracker运行机制 / 226
8.6.1　初始化ApnContext操作 / 227
8.6.2　开机建立default默认的数据连接 / 228
8.6.3　关闭数据连接 / 229
8.6.4　循环更新网络连接状态信息 / 230
8.6.5　APN数据库配置信息变化的观察者 / 231
8.7　获取Android手机上网数据包 / 232
8.7.1　使用tcpdump工具抓取TCP/IP数据包 / 232
8.7.2　使用Wireshark软件分析TCP/IP数据包 / 232
8.8　MMS彩信数据连接的实现 / 233
8.8.1　建立和关闭彩信数据连接 / 233
8.8.2　如何支持多种类型网络连接 / 234
8.9　实战—手机上网数据总开关的实现 / 235
8.10　本章小结 / 235
第9章　深入解析短信发送和接收流程 / 237
9.1　MMS应用主要源代码汇总及简要说明 / 237
9.2　主动发送短信流程分析 / 238
9.2.1　进入短信会话列表界面 / 238
9.2.2　短信编辑界面 / 239
9.2.3　SmsMessageSender短信发送处理逻辑 / 241
9.2.4　Telephony Frameworks层中的SmsManager类 / 243
9.2.5　IccSmsInterfaceManager服务发送短信 / 244
9.2.6　SMSDispatcher短信分发器 / 245
9.2.7　主动发送短信流程总结 / 246
9.3　短信发送状态相关处理机制 / 248
9.3.1　如何判断短信是否成功发送到短信中心 / 248
9.3.2　如何判断短信接收方已经成功收取短信 / 250
9.4　短信接收流程分析 / 252
9.4.1　短信接收的开始 / 252
9.4.2　进入短信分发器SMSDispatcher / 253
9.4.3　接收并处理新短信Broadcast广播 / 254
9.4.4　短信接收流程总结 / 254
9.5　彩信发送和接收关键流程 / 255
9.5.1　彩信传输过程中的关键类 / 255
9.5.2　TransactionService为核心的彩信传输机制 / 257
9.5.3　Transaction对象执行彩信传输 / 259
9.5.4　基于WAP PUSH的彩信接收与下载 / 260
9.6　本章小结 / 261
第四部分　深入解析Android RIL
第10章　Android RIL框架结构及RILJ运行机制 / 264
10.1　Android RIL关键处理流程 / 264
10.1.1　Android RIL框架结构 / 264
10.1.2　Android RIL的数据交互 / 265
10.2　认识RILJ / 265
10.2.1　RILJ核心类图 / 265
10.2.2　RILJ关键属性 / 266
10.2.3　RILJ关键方法 / 267
10.2.4　RILJ运行机制 / 268
10.3　认识RILRequest类 / 269
10.3.1　RILRequest类的关键属性 / 269
10.3.2　RILRequest类的方法 / 269
10.4　解析RILJ发出RIL请求流程 / 271
10.4.1　send方法发送Handler消息 / 271
10.4.2　RILSender接收和处理Handler消息 / 272
10.5　解析RILJ接收Response消息处理流程 / 273
10.5.1　RILReceiver内部类运行机制 / 273
10.5.2　Solicited Response消息处理方法processSolicited / 276
10.5.3　UnSolicited Response消息处理方法processUnsolicited / 279
10.6　本章小结 / 280
第11章　RILC系统结构及LibRIL运行机制 / 281
11.1　RILC主要代码目录结构 / 281
11.2　解析RILC运行机制 / 282
11.2.1　RILC启动过程 / 283
11.2.2　RILC运行过程 / 285
11.3　初识RILC中的运行环境LibRIL / 285
11.3.1　LibRIL主要文件及作用 / 285
11.3.2　重点结构体说明 / 286
11.4　LibRIL运行环境加载过程 / 288
11.4.1　开启ril_event事件监听入口RIL_startEventLoop / 288
11.4.2　RIL_register函数引入三方RIL_RadioFunctions / 290
11.5　运行状态中ril_event事件处理机制 / 291
11.5.1　认识ril_event结构体 / 291
11.5.2　RIL事件生命周期控制的处理函数 / 292
11.5.3　ril_event_loop处理机制 / 294
11.6　详解LibRIL运行机制 / 296
11.6.1　RILJ与LibRIL建立Socket连接过程 / 296
11.6.2　Solicited消息的交互流程和处理机制 / 297
11.7　本章小结 / 302
第12章　Reference-RIL运行框架 / 303
12.1　Reference-RIL运行机制 / 303
12.1.1　RIL_Init函数初始化Reference-RIL / 303
12.1.2　onRequest接收LibRIL的请求调用 / 304
12.1.3　UnSolicited消息处理逻辑 / 306
12.2　AT命令 / 310
12.2.1　如何新增AT命令 / 310
12.2.2　Android Telephony常用AT命令 / 310
12.3　Android RIL层运行框架和机制总结 / 311
12.3.1　总结Solicited消息处理流程 / 312
12.3.2　总结UnSolicited消息处理流程 / 313
12.4　本章小结 / 314
第五部分　系统服务
第13章　Telephony提供的系统服务 / 316
13.1　System Service系统服务类图 / 316
13.2　详解PhoneInterfaceManager实现机制 / 317
13.2.1　ITelephony.aidl接口定义 / 318
13.2.2　PhoneInterfaceManager服务创建过程 / 318
13.2.3　PhoneInterfaceManager服务使用实例分析 / 318
13.3　详解TelephonyRegistry实现机制 / 319
13.3.1　系统服务的创建入口 / 320
13.3.2　TelephonyRegistry关键方法 / 320
13.3.3　listen方法处理逻辑 / 320
13.3.4　notifyCallState方法发出通话状态变化通知 / 321
13.3.5　触发TelephonyRegistry发出通知机制 / 322
13.3.6　TelephonyRegistry系统服务使用实例分析 / 323
13.4　简述TelephonyManager实现机制 / 324
13.5　本章小结 / 326
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入理解Android
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android/OPhone开发完全讲义(china-pub首发)
前言
如何使用本书的例子
第一部分 准备篇——大军未动，粮草先行
第1章 Android入门 2
1.1 Android的基本概念 2
1.1.1 Android简介 2
1.1.2 Android的系统构架 4
1.2 Android开发环境的搭建 5
1.2.1 开发Android程序需要些什么 5
1.2.2 安装Android SDK 5
1.2.3 安装Eclipse插件ADT 6
1.2.4 测试ADT是否安装成功 6
1.3 Android SDK中的常用命令行工具 8
1.3.1 启动和关闭ADB服务（adb start-server
和adb kill-server） 8
1.3.2 查询当前模拟器/设备的实例
（adb devices） 8
1.3.3 安装、卸载和运行程序（adb install、
. adb uninstall和am） 8
1.3.4 PC与模拟器或真机交换文件（adb
pull和adb push） 9
1.3.5 Shell命令 9
1.3.6 创建、删除和浏览AVD设备
（android） 10
1.3.7 创建SD卡 10
1.4 PC上的Android 10
1.4.1 Android LiveCD 11
1.4.2 AndroidX86 11
1.5 Android的学习资源 12
1.6 应用程序商店 12
1.6.1 Android Market 12
1.6.2 Mobile Market（MM） 12
1.6.3 其他应用程序商店 13
1.7 本章小结 13
第2章 第一个Android程序 14
2.1 编写用于显示当前日期和时间的程序 14
2.1.1 新建一个Android工程 14
2.1.2 界面组件的布局 15
2.1.3 编写实际代码 15
2.2 调试程序 18
2.3 签名和发布应用程序 18
2.3.1 使用命令行方式进行签名 19
2.3.2 使用ADT插件方式进行签名 19
2.4 DDMS透视图 20
2.5 本章小结 21
第二部分 基础篇——Android世界的精彩之旅
第3章 Android应用程序架构 23
3.1 Android应用程序中的资源 23
3.1.1 资源存放在哪里 23
3.1.2 资源的种类 23
3.1.3 资源的基本使用方法 24
3.2 Android的应用程序组件 25
3.2.1 活动（Activity）组件 25
3.2.2 服务（Service）组件 25
3.2.3 广播接收者（Broadcast receivers）
组件 26
3.2.4 内容提供者（Content providers）
组件 26
3.3 AndroidManifest.xml文件的结构 26
3.4 本章小结 27
第4章 建立用户接口 28
4.1 建立、配置和使用Activity 28
4.1.1 建立和配置Activity 28
4.1.2 Activity的生命周期 30
实例1：演示Activity的生命周期 31
4.2 视图（View） 33
4.2.1 视图简介 34
4.2.2 使用XML布局文件控制视图 34
4.2.3 在代码中控制视图 35
实例2：混合使用XML布局文件和代码
来控制视图 37
4.2.4 定制组件（Widget）的三种方式 39
实例3：定制组件——带图像的TextView 39
实例4：定制组件——带文本标签的
EditText 42
实例5：定制组件——可更换表盘的指针
时钟 44
4.3 使用AlertDialog类创建对话框 49
4.3.1 AlertDialog类简介 49
4.3.2 【确认/取消】对话框 49
实例6：创建询问是否删除文件的
【确认/取消】对话框 50
4.3.3 带3个按钮的对话框 51
实例7：创建【覆盖/忽略/取消】对话框 51
4.3.4 简单列表对话框 52
4.3.5 单选列表对话框 53
4.3.6 多选列表对话框 53
实例8：创建3种选择省份的列表对话框 54
4.3.7 水平进度对话框和圆形进度对话框 58
实例9：水平进度对话框和圆形进度
对话框演示 58
4.3.8 自定义对话框 61
实例10：创建登录对话框 61
实例11：使用Activity托管对话框 63
实例12：创建悬浮对话框和触摸任何位置
都可以关闭的对话框 64
4.4 Toast和Notification 67
4.4.1 用Toast显示提示信息框 67
4.4.2 Notification与状态栏信息 68
4.5 菜单 70
4.5.1 创建选项菜单 70
4.5.2 设置与菜单项关联的图像和
Activity 71
4.5.3 响应选项菜单项单击事件的
3种方式 71
4.5.4 动态添加、修改和删除选项菜单 72
4.5.5 创建带复选框和选项按钮的子菜单 73
4.5.6 创建上下文菜单 74
4.5.7 菜单事件 75
实例13：Activity菜单、子菜单、上下文
菜单演示 75
4.6 布局 76
4.6.1 框架布局（FrameLayout） 76
实例14：霓虹灯效果的TextView 77
4.6.2 线性布局（LinearLayout） 78
实例15：利用LinearLayout将按钮放在屏幕
的四角和中心位置 80
4.6.3 相对布局（RelativeLayout） 81
实例16：利用RelativeLayout实现梅花效果
的布局 81
4.6.4 表格布局（TableLayout） 82
实例17：计算器按钮的布局 82
4.6.5 绝对布局（AbsoluteLayout） 83
4.7 本章小结 83
第5章 组件详解 84
5.1 显示和编辑文本的组件 84
5.1.1 显示文本的组件：TextView 85
实例18：在TextView中显示URL及不同
字体大小、不同颜色的文本 86
实例19：带边框的TextView 88
5.1.2 输入文本的组件：EditText 89
实例20：在EditText中输入特定的字符 90
实例21：按回车键显示EditText 91
5.1.3 自动完成输入内容的组件：
AutoCompleteTextView 92
5.2 按钮与复选框组件 93
5.2.1 普通按钮组件：Button 93
实例22：异形（圆形、五角星、螺旋形
和箭头）按钮 94
5.2.2 图像按钮组件：ImageButton 95
实例23：同时显示图像和文字的按钮 96
5.2.3 选项按钮组件：RadioButton 96
5.2.4 开关状态按钮组件：ToggleButton 97
5.2.5 复选框组件：CheckBox 97
实例24：利用XML布局文件动态创建
CheckBox 98
5.3 日期与时间组件 100
5.3.1 输入日期的组件：DatePicker 100
5.3.2 输入时间的组件：TimePicker 100
实例25：DatePicker、TimePicker与
TextView同步显示日期和时间 100
5.3.3 显示时钟的组件：AnalogClock和
DigitalClock 101
5.4 进度条组件 102
5.4.1 进度条组件：ProgressBar 102
5.4.2 拖动条组件：SeekBar 103
实例26：改变ProgressBar和SeekBar
的颜色 104
5.4.3 评分组件：RatingBar 105
5.5 其他重要组件 106
5.5.1 显示图像的组件：ImageView 106
实例27：可显示图像指定区域的ImageView
组件 107
实例28：动态缩放和旋转图像 108
5.5.2 列表组件：ListView 109
实例29：可以单选和多选的ListView 111
实例30：动态添加、删除ListView列表项 112
实例31：改变ListView列表项选中状态
的背景颜色 115
5.5.3 封装ListView的Activity：
ListActivity 116
实例32：使用SimpleAdapter建立复杂
的列表项 116
实例33：给应用程序评分 117
5.5.4 可展开的列表组件：
ExpandableListView 120
5.5.5 下拉列表组件：Spinner 121
5.5.6 垂直滚动视图组件：ScrollView 123
5.5.7 水平滚动视图组件：
HorizontalScrollView 123
实例34：可垂直和水平滚动的视图 124
5.5.8 网格视图组件：GridView 124
5.5.9 可循环显示和切换图像的组件：
Gallery和ImageSwitcher 125
5.5.10 标签组件：TabHost 127
5.6 本章小结 128
第6章 移动存储解决方案 129
6.1 最简单的数据存储方式：
SharedPreferences 129
6.1.1 使用SharedPreferences存取数据 129
6.1.2 数据的存储位置和格式 131
实例35：存取复杂类型的数据 131
6.1.3 设置数据文件的访问权限 133
6.1.4 可以保存设置的Activity：
PreferenceActivity 134
6.2 文件的存储 137
6.2.1 openFileOutput和openFileInput方法 137
实例36：SD卡文件浏览器 138
实例37：存取SD卡中的图像 142
6.2.2 SAX引擎读取XML文件的原理 143
实例38：将XML数据转换成Java对象 144
6.3 SQLite数据库 147
6.3.1 SQLite数据库管理工具 147
6.3.2 创建数据库和表 148
6.3.3 模糊查询 149
6.3.4 分页显示记录 149
6.3.5 事务 149
6.4 在Android中使用SQLite数据库 149
6.4.1 SQLiteOpenHelper类与自动
升级数据库 150
6.4.2 SimpleCursorAdapter类与数据绑定 150
实例39：带照片的联系人管理系统 153
6.4.3 将数据库与应用程序一起发布 156
实例40：英文词典 156
6.5 抽象的标准——内容提供者
（ContentProvider） 159
实例41：将联系人管理和英文字典集成
到自己的应用中 160
6.6 本章小结 165
第7章 应用程序之间的通讯 166
7.1 Intent与Activity 166
7.1.1 用Intent启动Activity，并在
Activity之间传递数据 166
7.1.2 调用其他应用程序中的Activity（拨打
电话、浏览网页、发Email等） 169
7.1.3 定制自己的Activity Action 172
实例42：将电子词典的查询功能共享成
一个Activity Action 174
7.2 接收和发送广播 175
7.2.1 接收系统广播 175
实例43：开机可自动运行的程序 176
实例44：收到短信了，该做点什么 176
实例45：显示手机电池的当前电量 178
7.2.2 在自己的应用程序中发送广播 179
实例46：接收联系人系统中发送的添加
联系人广播 180
7.3 本章小结 181
第8章 Android服务 182
8.1 Service起步 182
8.1.1 Service的生命周期 182
8.1.2 绑定Activity和Service 185
8.1.3 在BroadcastReceiver中启动Service 187
8.2 系统服务 188
8.2.1 获得系统服务 188
实例47：监听手机来电 189
实例48：来电黑名单 190
8.2.2 在模拟器上模拟重力感应 191
实例49：手机翻转静音 192
8.3 时间服务 194
8.3.1 计时器：Chronometer 194
8.3.2 预约时间Handler 196
8.3.3 定时器Timer 197
8.3.4 在线程中更新GUI组件 198
8.3.5 全局定时器AlarmManager 200
实例50：定时更换壁纸 201
实例51：多次定时提醒 203
8.4 跨进程访问（AIDL服务） 205
8.4.1 什么是AIDL服务 206
8.4.2 建立AIDL服务的步骤 206
实例52：建立AIDL服务 206
实例53：传递复杂数据的AIDL服务 209
8.5 本章小结 213
第9章 网络 214
9.1 可装载网络数据的组件 214
实例54：将网络图像装载到ListView
组件中 215
实例55：Google图像画廊（Gallery） 217
9.2 WebView组件 221
9.2.1 用WebView组件浏览网页 221
实例56：手机浏览器 221
9.2.2 用WebView组件装载HTML代码 222
实例57：将英文词典整合到Web页中
（JavaScript调用Java方法） 224
9.3 访问HTTP资源 225
9.3.1 提交HTTP GET和HTTP POST
请求 225
9.3.2 HttpURLConnection类 227
实例58：上传文件 228
实例59：远程Apk安装器 231
9.3.3 调用WebService 232
实例60：通过WebService查询产品信息 233
9.4 本章小结 236
第10章 多媒体 237
10.1 图形 237
10.1.1 图形绘制基础 237
实例61：绘制基本的图形和文本 239
10.1.2 绘制位图 243
实例62：用两种方式绘制位图 243
10.1.3 设置颜色的透明度 244
实例63：可任意改变透明度的位图 245
10.1.4 旋转图像 246
实例64：旋转动画 246
10.1.5 扭曲图像 247
实例65：按圆形轨迹扭曲图像 248
10.1.6 拉伸图像 251
实例66：拉伸图像演示 251
10.1.7 路径 253
实例67：沿着路径绘制文本 256
实例68：可在图像上绘制图形的画板 258
10.2 音频和视频 262
10.2.1 使用MediaPlayer播放MP3文件 262
10.2.2 使用MediaRecorder录音 263
10.2.3 使用VideoView播放视频 264
10.2.4 使用SurfaceView播放视频 264
10.3 本章小结 265
第三部分 进阶篇——深入Android世界的腹地
第11章 2D动画 267
11.1 帧（Frame）动画 267
AnimationDrawable与帧动画 267
实例69：通过帧动画方式播放Gif动画 269
实例70：播放帧动画的子集 271
11.2 补间（Tween）动画 273
11.2.1 移动补间动画 273
实例71：循环向右移动的EditText与
上下弹跳的球 275
11.2.2 缩放补间动画 277
实例72：跳动的心 277
11.2.3 旋转补间动画 279
实例73：旋转的星系 279
11.2.4 透明度补间动画 280
实例74：投掷炸弹 281
11.2.5 振动效果 283
11.2.6 自定义动画渲染器（Interceptor） 284
11.2.7 以动画方式切换View的组件
ViewFlipper 285
11.3 本章小结 287
第12章 OpenGL ES编程 288
12.1 OpenGL简介 288
12.2 构建OpenGL ES的基本开发框架 289
12.3 2D图形绘制 290
12.3.1 多边形 290
12.3.2 颜色 292
12.3.3 旋转 293
12.4 3D图形绘制 294
12.4.1 旋转立方体 294
12.4.2 在立方体上显示纹理 295
12.4.3 光照下的立方体 296
12.4.4 透明的立方体 298
12.5 本章小结 298
第13章 资源、国际化与自适应 299
13.1 Android中的资源 299
13.1.1 Android怎么存储资源 300
13.1.2 资源的种类 300
13.1.3 资源文件的命名 301
13.2 定义和使用资源 301
13.2.1 使用系统资源 301
13.2.2 字符串（String）资源 302
13.2.3 数组（Array）资源 303
13.2.4 颜色（Color）资源 305
13.2.5 尺寸（Dimension）资源 306
13.2.6 类型（Style）资源 307
13.2.7 主题（Theme）资源 308
13.2.8 绘画（Drawable）资源 309
13.2.9 动画（Animation）资源 310
13.2.10 菜单（Menu）资源 310
13.2.11 布局（Layout）资源 313
13.2.12 属性（Attribute）资源 313
实例75：改进可显示图标的IconTextView
组件 315
13.2.13 XML资源 316
13.2.14 RAW资源 317
13.2.15 ASSETS资源 317
13.3 国际化和资源自适应 318
13.3.1 对资源进行国际化 318
13.3.2 Locale与国际化 320
13.3.3 常用的资源配置 320
13.4 本章小结 321
第14章 访问Android手机的硬件 322
14.1 在手机上测试硬件 322
14.1.1 安装Android USB驱动 322
14.1.2 在手机上测试程序 324
14.1.3 在手机上调试程序 324
14.2 录音 325
14.3 控制手机摄像头（拍照） 326
14.3.1 调用系统的拍照功能 326
14.3.2 实现自己的拍照Activity 328
14.4 传感器在手机中的应用 332
实例76：电子罗盘 333
实例77：计步器 334
14.5 GPS与地图定位 335
14.5.1 Google地图 336
14.5.2 用GPS定位到当前位置 339
14.6 WIFI 340
14.7 本章小结 342
第15章 放在桌面上的小玩意 343
15.1 窗口小部件（App Widget） 343
15.1.1 在Android桌面上添加
App Widget 343
15.1.2 开发App Widget的步骤 344
实例78：数字时钟 346
15.1.3 AppWidgetProvider类 348
15.1.4 向App Widget添加配置Activity 349
实例79：可以选择风格的数字时钟 349
15.2 快捷方式 353
15.2.1 向快捷方式列表中添加快捷方式 353
15.2.2 直接将快捷方式放到桌面上 354
15.3 实时文件夹（LiveFolder） 354
15.4 本章小结 356
第16章 NDK编程 357
16.1 Android NDK简介 357
16.2 安装、配置和测试NDK开发环境 358
16.2.1 系统和软件要求 358
16.2.2 下载和安装Android NDK 358
16.2.3 下载和安装Cygwin 359
16.2.4 配置Android NDK的开发环境 361
16.2.5 编译和运行NDK自带的例子 362
16.3 Android NDK开发 364
16.3.1 JNI接口设计 364
16.3.2 编写Android NDK程序的步骤 365
实例80：将文件中的小写字母转换成
大写字母（NDK版本） 365
16.3.3 配置Android.mk文件 367
16.3.4 Android NDK定义的变量 368
16.3.5 Android NDK定义的函数 369
16.3.6 描述模块的变量 369
16.3.7 配置Application.mk文件 370
16.4 本章小结 371
第17章 整合Android与脚本语言 372
17.1 Android脚本环境简介 372
17.2 Android脚本环境安装 373
17.3 编写和运行Android脚本 374
17.4 本章小结 376
第18章 Android平台的新特性展示 377
18.1 Android平台的新特性 377
18.1.1 Android 1.6的新特性 377
18.1.2 Android 2.0的新特性 379
18.2 Android Framework API演变 379
18.2.1 Android 1.6 Framework API的变化 379
18.2.2 Android 2.x Framework API的变化 380
18.3 实时壁纸（Live Wallpapers，
Android 2.1） 380
18.4 补间动画渲染器（Android 1.6） 387
18.4.1 Anticipate渲染器 388
18.4.2 Overshoot渲染器 388
18.4.3 Anticipate/Overshoot渲染器 388
18.4.4 Bounce渲染器 388
18.5 本章小结 389
第19章 另类的输入输出 390
19.1 手势（Gesture） 390
19.1.1 创建手势文件 390
19.1.2 通过手势输入字符串 391
19.1.3 通过手势调用程序 393
19.1.4 编写自己的手势创建器 394
19.2 让手机说话（TTS） 395
19.3 本章小结 396
第20章 蓝牙 397
20.1 蓝牙简介 397
20.2 打开和关闭蓝牙设备 398
20.3 搜索蓝牙设备 398
20.4 蓝牙Socket 400
20.5 OBEX服务器 402
20.6 本章小结 403
第四部分 OPhone篇——进入OPhone世界
第21章 OPhone入门 405
21.1 OPhone平台概述 405
21.1.1 OPhone的系统架构 405
21.1.2 JIL Widget的运行环境 406
21.1.3 OPhone应用程序展示 406
21.2 OPhone开发环境搭建 407
21.2.1 安装ODT和WDT 407
21.2.2 测试一下ODT是否安装成功 407
21.2.3 测试一下WDT是否安装成功 407
21.3 在真机上调试程序 408
21.4 本章小结 410
第22章 OPhone的API扩展 411
22.1 视频电话 411
22.1.1 拨打视频电话 411
22.1.2 挂断视频电话 411
实例81：可拨打视频电话的程序 412
22.2 搜索API 413
22.3 本章小结 414
第23章 JIL Widget开发详解 415
23.1 编写第一个JIL Widget程序 415
23.2 多媒体 417
23.2.1 播放音频 417
23.2.2 播放视频 418
23.3 操作文件 418
23.3.1 获得与文件相关的信息 419
23.3.2 操作文件 419
23.3.3 操作文件夹 421
23.4 获得系统信息 422
23.4.1 获得电池信息 422
23.4.2 获得手机信号信息 423
23.4.3 获得设备信息 424
23.4.4 获得设备状态信息 424
23.5 控制硬件 425
23.5.1 拍照和摄像 426
23.5.2 打电话 426
23.5.3 手机振动 426
23.6 本章小结 427
第五部分 综合实例篇——实践是检验真理的唯一标准
第24章 万年历 429
24.1 主界面设计与实现 429
24.1.1 万年历的核心类：Calendar 429
24.1.2 日历内容元素的基类：
CalendarParent 431
24.1.3 绘制万年历边框：Border类 431
24.1.4 绘制周名称：Week类 432
24.1.5 绘制日期和网格：Grid类 433
24.1.6 日历视图：CalendarView类 440
24.1.7 生成万年历的主界面 442
24.2 选项菜单功能 443
24.2.1 切换到今天的日期 443
24.2.2 指定日期 443
24.3 可以写日记和提醒的万年历 444
24.3.1 显示所有的记录信息：
AllRecord类 444
24.3.2 添加和修改记录：Record类 446
24.3.3 设置提醒时间 447
24.3.4 启动服务 448
24.3.5 在广播接收器中显示提醒界面 449
24.3.6 访问数据库：DBService 450
24.4 本章小结 454
第25章 知道当前位置的Google GTalk
机器人 455
25.1 GTalk的通讯协议和技术 455
25.1.1 Jabber和XMPP 455
25.1.2 XMPP客户端库：Smack和
Asmack 456
25.2 登录GTalk：Login类 456
25.3 联系人信息 458
25.3.1 显示联系人列表 458
25.3.2 监听联系人是否上线 460
25.4 联系人之间的通讯 461
25.4.1 发送聊天信息 462
25.4.2 接收聊天信息 462
25.4.3 自动回复当前的位置
（GPS定位） 465
25.5 本章小结 466
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android/OPhone开发完全讲义(china-pub首发)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android用户界面设计（全彩）
第1部分　Android用户界面基础
第1章 Android用户界面概览 .................................................................1
Android设计简史 .................................................................................... 2
Android设计站点 .................................................................................... 2
核心原则 .................................................................................................. 3
标准组件 ................................................................................................ 12
支持多种设备 ........................................................................................ 14
值得注意的变化 .................................................................................... 16
小结 ........................................................................................................ 16
第2章 理解视图——用户界面的构架模块 ........................................ 17
什么是视图 ............................................................................................ 18
显示文本 ................................................................................................ 22
显示图片 ................................................................................................ 26
聚集用户输入的视图 ............................................................................ 29
其他值得关注的视图 ............................................................................ 32
事件的监听 ............................................................................................ 35
小结 ....................................................................................................... .36
第3章 用View Group与Fragment创建全布局 ..................................... 37
ViewGroup .............................................................................................. 38
Fragment .................................................................................................. 49
小结 ........................................................................................................ 52
第4章 添加应用的图形和资源 ............................................................ 53
Android中资源的介绍 .......................................................................... 54
资源限定符 ............................................................................................ 54
理解密度 ................................................................................................ 58
可支持的图片文件 ................................................................................ 59
9-patch图片 ............................................................................................ 60
XML可绘制对象 ................................................................................... 62
其他资源 ................................................................................................ 72
小结 ........................................................................................................ 76
第2部分　完整的设计和开发过程
第5章 开始一个新的应用 .......................................................................77
确定目标 ...................................................................................................78
概要流程图 ...............................................................................................81
线框图 .......................................................................................................82
小结 ...........................................................................................................95
第6章 开发应用的基础 ...........................................................................97
组织为Activity和Fragment .......................................................................98
把线框拆成视图 .....................................................................................106
创建主题和样式 .....................................................................................121
小结 .........................................................................................................122
第7章 定稿设计方案 ............................................................................. 123
线框和图形设计 .....................................................................................124
应用的视觉样式和个性 .........................................................................124
文本注意事项 .........................................................................................132
标准图标 .................................................................................................137
动态内容注意事项 .................................................................................138
导航和过渡 .............................................................................................139
错误情况 .................................................................................................139
小结 .........................................................................................................139
第8章 实现设计方案 ............................................................................. 141
和设计师一起工作 .................................................................................142
切出图形资产 .........................................................................................143
更新主题和样式 .....................................................................................147
把comps拆为多个视图 ..........................................................................148
提升效率 .................................................................................................153
多种设备上的基本测试 .........................................................................160
小结 .........................................................................................................162
第9章 进一步优化应用 ......................................................................... 163
层级查看器 .............................................................................................164
动画 .........................................................................................................170
自定义字体 .............................................................................................180
小结 .........................................................................................................184
第3部分　Android用户界面的高级话题
第10章 如何处理常用组件 ................................................................... 185
闪屏 ..........................................................................................................186
加载指示 ..................................................................................................196
复杂的TextView .......................................................................................198
自动加载的ListView ................................................................................203
小结 ..........................................................................................................208
第11章 为自定义组件而组合视图 ........................................................209
什么时候组合视图 ..................................................................................210
组合视图以实现其简单协作 ..................................................................210
完成一个多按钮切换开关 ......................................................................222
小结 ..........................................................................................................241
第12章 开发完全自定义的视图 ............................................................243
常用概念 ..................................................................................................244
开发自定义视图 ......................................................................................249
小结 ..........................................................................................................284
第13章 运用画布和高级绘图 .................................................................285
PorterDuff 图片合成 ................................................................................286
创建自定义的Drawable .............................................................................305
小结 ............................................................................................................310
第4部分　有益的指导和参考
附录A Google Play物料 .........................................................................311
应用描述 .................................................................................................312
修改记录 .................................................................................................313
应用图标 .................................................................................................313
屏幕截图 .................................................................................................314
主题图片 .................................................................................................315
推广图 .....................................................................................................320
视频（YouTube） ..................................................................................320
推广你的应用 .........................................................................................321
附录B 亚马逊应用商店物料 ................................................................ 323
概述 .........................................................................................................324
应用图标 .................................................................................................324
屏幕截图 .................................................................................................325
推广图 .....................................................................................................326
视频 .........................................................................................................327
附录C 常用任务参考 ............................................................................ 329
在操作栏中显示加载 .............................................................................330
撤销软键盘 .............................................................................................336
使用全屏模式 .........................................................................................337
让屏幕保持常亮 .....................................................................................338
确定设备物理屏幕尺寸 .........................................................................338
确定设备DPI ............................................................................................339
检查网络连接 ..........................................................................................340
检查当前线程是否是UI线程 .................................................................340
自定义视图属性 .....................................................................................341
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android用户界面设计（全彩）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>轻松学Android开发
Android基础篇
第1章  初识Android	2
1.1  什么是Android	2
1.1.1  Android的发展	2
1.1.2  Android的架构及特点	2
1.2  Android开发平台的搭建	3
1.2.1  下载JDK	3
1.2.2  安装JDK	4
1.2.3  配置Java环境变量	4
1.2.4  安装Eclipse	5
1.2.5  安装与配置Android SDK	6
1.2.6  安装Android ADT	6
1.2.7  虚拟设备的创建与模拟器的运行	8
1.3  HelloAndroid——我的第一个Android程序	9
1.3.1  创建第一个Android程序——HelloAndroid	9
1.3.2  基本文件及Android框架	11
1.4  小结	11
1.5  习题	12
第2章  Android程序界面布局设计	16
2.1  布局概述	16
2.1.1  什么是布局	16
2.1.2  布局的类型	17
2.1.3  布局文件的常用概念	18
2.2  相对布局	19
2.2.1  相对容器布局	19
2.2.2  相对控件布局	21
2.3  线性布局	23
2.3.1  什么是线性布局	23
2.3.2  线性布局的语法	24
2.3.3  创建线性布局	24
2.4  表格布局	26
2.4.1  什么是表格布局	26
2.4.2  表格布局的语法	26
2.4.3  创建表格布局	27
2.5  帧布局	28
2.5.1  什么是帧布局	28
2.5.2  帧布局的语法	28
2.5.3  创建帧布局	29
2.6  网格布局和布局控件	30
2.6.1  什么是网格布局	30
2.6.2  网格布局的语法	30
2.6.3  创建网格布局	31
2.6.4  什么是布局控件	32
2.7  小结	34
2.8  习题	34
第3章  基本控件	40
3.1  控件概述	40
3.1.1  控件的构成	40
3.1.2  属性的使用	40
3.1.3  方法和事件的使用	41
3.2  文本类控件	42
3.2.1  文本框	42
3.2.2  编辑框	44
3.3  按钮类控件	45
3.3.1  按钮	45
3.3.2  图片按钮	47
3.3.3  开关按钮	48
3.3.4  单选按钮	49
3.3.5  复选按钮	50
3.4  图片控件	52
3.5  动画播放技术	53
3.5.1  补间动画	54
3.5.2  帧动画	56
3.6  时钟控件	58
3.7  日期与时间控件	60
3.7.1  日期选择控件	60
3.7.2  时间选择控件	60
3.8  小结	61
3.9  习题	62
第4章  高级控件	71
4.1  自动完成文本类控件	71
4.1.1  自动完成文本控件	71
4.1.2  多文本自动完成输入控件	73
4.2  进度条与拖动条	75
4.2.1  进度条	75
4.2.2  拖动条	76
4.3  评分条	78
4.4  滚动视图	80
4.5  列表视图	81
4.6  下拉列表	83
4.7  选项卡	85
4.8  页面滑动切换控件	87
4.9  图片切换控件	89
4.10  网格视图	92
4.11  小结	94
4.12  习题	94
Android技术篇
第5章  消息提示	110
5.1  菜单	110
5.1.1  选项菜单和子菜单	110
5.1.2  上下文菜单	113
5.2  对话框	115
5.2.1  普通对话框	115
5.2.2  提示对话框	116
5.2.3  进度对话框	119
5.2.4  日期选择对话框	120
5.2.5  时间选择对话框	121
5.3  消息提示框	122
5.4  通知提示框	123
5.5  小结	125
5.6  习题	125
第6章  深入解析Activity	131
6.1  从一个单界面程序看Activity	131
6.1.1  启动单界面程序	131
6.1.2  了解Activity的状态变化	132
6.1.3  结束Activity	133
6.2  在两个Activity之间跳转	135
6.2.1  启动第一个Activity——主Activity	135
6.2.2  创建第二个Activity	136
6.2.3  启动第二个Activity	138
6.2.4  跳转回主Activity	139
6.2.5 “BACK”到第二个Activity	140
6.3  在两个Activity之间传递数据	142
6.3.1  传递数据到目标Activity	143
6.3.2  返回数据到主Activity	145
6.4  Intent和IntentFilter	148
6.4.1  Intent	148
6.4.2  IntentFilter	154
6.5  小结	155
6.6  习题	156
第7章  服务与消息广播	158
7.1  Service简介	158
7.1.1  开发Service	158
7.1.2  Service的生命周期	159
7.2  操作Service	160
7.2.1  调用context.startService() 方法启动Service	160
7.2.2  调用context.bindService() 方法启动Service	163
7.3  Service通信	165
7.3.1  本地服务通信	165
7.3.2  远程服务通信	168
7.4  系统提供的Service	171
7.4.1  电话管理器	171
7.4.2  短信管理器	175
7.4.3  音频管理器	177
7.4.4  振动器	180
7.5  广播接收者	182
7.5.1  开发广播接收者组件	182
7.5.2  接收系统广播	186
7.6  小结	188
7.7  习题	188
第8章  数据存储	192
8.1  SharedPreferences轻量级存储	192
8.1.1  SharedPreferences和Editor	192
8.1.2  使用SharedPreferences存储数据	193
8.2  文件存储	195
8.2.1  读写文件中的数据	195
8.2.2  读写SD卡中的数据	197
8.3  SQLite数据库存储	201
8.3.1  SQLiteDatabase和SQLiteOpenHelper	201
8.3.2  数据库的基本操作	205
8.4  内容提供者	209
8.4.1  ContentProvider简介	209
8.4.2  自定义ContentProvider	212
8.5  小结	216
8.6  习题	216
Android应用篇
第9章  网络应用	220
9.1  Socket通信	220
9.1.1  Socket的工作机制	220
9.1.2  Socket服务器端开发	221
9.1.3  Socket客户端开发	222
9.1.4  运行程序	224
9.2  HTTP通信	224
9.2.1  HTTP通信方式	224
9.2.2  使用HttpURLConnection接口进行开发	225
9.2.3  使用HttpClient接口进行开发	226
9.3  URL通信	232
9.3.1  URL简介	232
9.3.2  URL通信开发	233
9.4  WebView	235
9.4.1  WebView简介	236
9.4.2  WebView开发	236
9.5  小结	239
9.6  习题	239
第10章  地理位置应用	241
10.1  GPS定位服务	241
10.1.1  GPS的相关类	241
10.1.2  获取GPS信息	242
10.2  Google Maps	245
10.2.1  获取Map API Key	245
10.2.2  创建模拟器	247
10.2.3  Google Maps的相关类	248
10.2.4  Google Maps地图查询应用	249
10.3  Google StreetView	253
10.3.1  Google StreetView服务的原理	253
10.3.2  Google StreetView程序的开发	253
10.4  小结	255
10.5  习题	255
第11章  音频和视频应用	258
11.1  音频应用	258
11.1.1  MediaPlayer类简介	258
11.1.2  使用MediaPlayer播放本地音频文件	259
11.1.3  使用MediaPlayer播放标准音频文件	263
11.2  视频应用	265
11.2.1  视频相关类简介	265
11.2.2  使用VideoView播放视频文件	266
11.3  音频和视频的录制	267
11.3.1  录制音频	267
11.3.2  录制视频	271
11.4  小结	274
11.5  习题	274
第12章  传感器应用	277
12.1  传感器开发	277
12.1.1  系统传感器	277
12.1.2  传感器的开发过程	277
12.1.3  真机测试	278
12.2  常用传感器	280
12.2.1  加速度传感器	280
12.2.2  磁场传感器	282
12.2.3  方向传感器	283
12.2.4  重力传感器	285
12.2.5  亮度传感器	287
12.3  小结	288
12.4  习题	288
第13章  手势应用	292
13.1  输入法手势识别	292
13.1.1  Gesture相关类简介	292
13.1.2  输入法手势程序开发	292
13.2  触摸屏手势识别	295
13.2.1  GestureDetector简介	295
13.2.2  触摸屏手势程序的开发	296
13.3  小结	298
13.4  习题	299
第14章  图形应用	302
14.1  位图	302
14.1.1  AssetManager类	302
14.1.2  Bitmap对象和BitmapFactory类	302
14.1.3  对assets文件夹的访问	303
14.2  Canvas绘图	305
14.2.1  Canvas类和Paint类	305
14.2.2  绘制基本图形	306
14.3  小结	307
14.4  习题	307
Android开发篇
第15章  Android程序开发——音乐播放器	312
15.1  程序简介	312
15.1.1  功能概述	312
15.1.2  开发环境及目标平台	312
15.2  程序架构	313
15.3  登录界面的设计与实现	313
15.4  主界面的设计与实现	314
15.4.1  主界面布局	314
15.4.2  音乐播放列表	315
15.4.3  音乐播放控制	316
15.4.4  音乐音量调节	320
15.4.5  音乐播放进度控制	321
15.4.6  主界面菜单	322
15.5  录音界面的设计与实现	326
15.5.1  录音界面	326
15.5.2  实现录音功能	326
15.5.3  播放录音文件	328
15.6  设置界面的设计与实现	328
15.6.1  设置来电铃声	328
15.6.2  设置闹铃铃声	329
15.6.3  设置通知铃声	330
15.7  小结	331
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>轻松学Android开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android 2高级编程
第1章 android简介 1
1.1 一些背景信息 2
1.1.1 不远的过去 2
1.1.2 未来的前景 3
1.2 对android的误解 3
1.3 开放的移动开发平台 4
1.4 自带的android应用程序 4
1.5 android sdk的特征 5
1.5.1 访问硬件(包括摄像头、gps和加速计) 6
1.5.2 自带的google地图、地理编码和基于位置的服务 6
1.5.3 后台服务 6
1.5.4 sqlite 数据存储和检索数据库 7
1.5.5 共享数据和应用程序间通信 7
1.5.6 使用小组件、live folder和live wallpaper增强主屏幕 7
1.5.7 广泛的媒体支持和2d/3d图形 8
1.5.8 优化的内存和进程管理 8
1.6 开放手机联盟简介 8
1.7 运行android的环境 8
1.8 从事移动开发的原因 9
1.9 从事android开发的原因 9
.1.9.1 推动android普及的因素 10
1.9.2 android的独到之处 10
1.9.3 改变移动开发格局 11
1.10 开发框架简介 11
1.10.1 开发包中的资源 12
1.10.2 理解android软件栈 12
1.10.3 dalvik虚拟机 14
1.10.4 android应用程序架构 14
1.10.5 android库 15
1.11 小结 15
第2章 开始入手 17
2.1 android开发 18
2.1.1 开始前的准备工作 18
2.1.2 创建第一个android应用程序 22
2.1.3 android应用程序的类型 27
2.2 面向移动设备的开发 29
2.2.1 硬件限制带来的设计考虑事项 29
2.2.2 考虑用户环境 32
2.2.3 android开发 33
2.3 to-do list示例 36
2.4 android开发工具 40
2.4.1 android虚拟设备和sdk管理器 41
2.4.2 android模拟器 42
2.4.3 dalvik调试监控服务(ddms) 43
2.4.4 android调试桥(adb) 43
2.5 小结 44
第3章 创建应用程序和活动 45
3.1 android应用程序的组成部分 46
3.2 应用程序清单简介 47
3.3 使用清单编辑器 52
3.4 android应用程序生命周期 53
3.5 理解应用程序的优先级和进程状态 54
3.6 分离资源 55
3.6.1 创建资源 55
3.6.2 使用资源 62
3.6.3 to-do list资源示例 65
3.6.4 为不同的语言和硬件创建资源 66
3.6.5 运行时配置更改 67
3.7 application类简介 69
3.7.1 扩展和使用application类 69
3.7.2 重写应用程序的生命周期事件 70
3.8 深入探讨android活动 71
3.8.1 创建一个活动 71
3.8.2 活动生命周期 73
3.8.3 android活动类 78
3.9 小结 78
第4章 创建用户界面 79
4.1 android ui基本设计 80
4.2 视图简介 80
4.2.1 使用视图创建活动的用户界面 81
4.2.2 android widget工具箱 82
4.3 布局简介 83
4.3.1 使用布局 83
4.3.2 优化布局 85
4.4 创建新视图 85
4.4.1 修改现有的视图 86
4.4.2 创建复合控件 90
4.4.3 创建定制的视图 93
4.4.4 使用定制的控件 103
4.5 drawable资源 104
4.5.1 形状、颜色和渐变 104
4.5.2 复合drawable 107
4.5.3 ninepatch drawable 110
4.6 分辨率和像素密度无关性 110
4.6.1 资源框架和分辨率无关性 111
4.6.2 分辨率无关性的最佳实践 112
4.6.3 反复测试 114
4.7 创建和使用菜单 115
4.7.1 android菜单系统简介 115
4.7.2 定义活动的菜单 117
4.7.3 菜单项选项 118
4.7.4 动态更新菜单项 119
4.7.5 处理菜单选择 120
4.7.6 子菜单和上下文菜单 120
4.7.7 使用xml定义菜单 122
4.7.8 to-do list示例续 123
4.8 小结 128
第5章 意图、广播接收器、adapter和internet 131
5.1 意图简介 132
5.1.1 使用意图来启动活动 132
5.1.2 使用意图过滤器来为隐式意图提供服务 138
5.1.3 使用意图过滤器作为插件和扩展 146
5.1.4 linkify简介 148
5.1.5 使用意图来广播事件 151
5.2 待处理意图简介 155
5.3 adapter简介 156
5.2.1 部分本地adapter简介 156
5.2.2 定制arrayadapter 156
5.2.3 使用adapter绑定数据 157
5.4 使用internet资源 162
5.4.1 连接到internet资源 163
5.4.2 使用internet资源 164
5.5 对话框简介 164
5.5.1 dialog类简介 164
5.5.2 将活动用作对话框 166
5.5.3 管理和显示对话框 167
5.6 创建一个地震查看器 168
5.7 小结 176
第6章 文件、保存状态和首选项 179
6.1 保存简单的应用程序数据 180
6.2 创建并保存首选项 180
6.3 检索共享首选项 181
6.4 为地震查看器创建一个设置活动 181
6.5 首选项活动和首选项框架概述 189
6.5.1 在xml中定义一个首选项屏幕布局 190
6.5.2 首选项活动简介 192
6.5.3 查找并使用首选项屏幕共享首选项 193
6.5.4 共享首选项变更监听程序简介 193
6.6 为地震查看器创建一个标准的首选项活动 194
6.7 保存活动状态 195
6.7.1 保存并还原实例状态 195
6.7.2 保存to-do list活动状态 196
6.8 保存和加载文件 198
6.9 将静态文件作为资源添加 199
6.10 文件管理工具 200
6.11 小结 200
第7章 数据库和内容提供器 201
7.1 android数据库简介 201
7.1.1 sqlite数据库简介 202
7.1.2 内容提供器简介 202
7.2 sqlite简介 202
7.3 游标和内容值 203
7.4 使用sqlite数据库 203
7.4.1 使用sqliteopenhelper 206
7.4.2 在不使用sqlitehelper的情况下打开和创建数据库 207
7.4.3 android数据库设计注意事项 207
7.4.4 查询数据库 207
7.4.5 从cursor中提取结果 208
7.4.6 添加、更新和删除行 209
7.4.7 保存to-do list 210
7.5 创建一个新的内容提供器 216
7.5.1 提供对数据源的访问 217
7.5.2 注册提供器 219
7.6 使用内容提供器 219
7.6.1 内容解析器简介 219
7.6.2 查询内容 219
7.6.3 添加、更新和删除内容 220
7.6.4 在内容提供器中访问文件 221
7.7 创建和使用地震内容提供器 222
7.7.1 创建内容提供器 222
7.7.2 使用提供器 227
7.8 本地android内容提供器 229
7.8.1 使用媒体库提供器 230
7.8.2 使用联系人提供器 231
7.9 小结 235
第8章 地图、地理编码和基于位置的服务 237
8.1 使用基于位置的服务 238
8.2 配置模拟器来测试基于位置的服务 238
8.3 更新模拟位置提供器中的位置 238
8.4 选择一个位置提供器 239
8.4.1 查找可用的提供器 239
8.4.2 根据标准查找位置提供器 240
8.5 确定自己所在的位置 241
8.5.1 “where am i”示例 241
8.5.2 追踪移动 244
8.5.3 更新“where am i”示例中的位置 245
8.6 使用邻近提醒 247
8.7 使用地理编码器 248
8.7.1 反向地理编码 249
8.7.2 前向地理编码 249
8.7.3 对“where am i”示例进行地理编码 251
8.8 创建基于地图的活动 252
8.8.1 mapview和mapactivity简介 252
8.8.2 获得地图的api键 253
8.8.3 创建一个基于地图的活动 254
8.8.4 配置和使用mapview 255
8.8.5 使用mapcontroller 256
8.8.6 对“where am i”示例使用地图 256
8.8.7 创建和使用覆盖(overlay) 260
8.8.8 mylocationoverlay简介 267
8.8.9 itemizedoverlay和overlayitem简介 267
8.8.10 将视图固定到地图和地图的某个位置上 269
8.9 对earthquake示例添加地图功能 271
8.10 小结 276
第9章 后台工作 277
9.1 服务简介 278
9.1.1 创建和控制服务 279
9.1.2 将活动和服务绑定 289
9.1.3 后台服务的优先级 291
9.2 使用后台线程 292
9.2.1 使用asynctask运行异步任务 292
9.2.2 使用asynctask将earthquake service移动到后台线程 294
9.2.3 手动创建线程和gui线程同步 295
9.3 创建一个toast 297
9.3.1 定制toast 297
9.3.2 在工作线程中使用toast 299
9.4 通知简介 299
9.4.1 通知管理器简介 300
9.4.2 创建通知 300
9.4.3 触发通知 304
9.4.4 向地震监控器中添加通知 304
9.4.5 高级通知技术 307
9.4.6 持续的和连续的通知 310
9.5 使用警报 310
9.5.1 设置重复警报 312
9.5.2 使用重复警报更新earthquake 313
9.6 小结 315
第10章 个性化手机屏幕 317
10.1 主屏幕小组件简介 318
10.2 创建app widgets 318
10.2.1 创建小组件布局 319
10.2.2 定义小组件设置 321
10.2.3 创建小组件意图接收器并将其添加到应用程序清单中 321
10.2.4 remote views(远程视图)和app widget manager简介 322
10.2.5 刷新小组件 327
10.2.6 创建并使用小组件配置活动 329
10.3 创建地震小组件 330
10.4 live folder简介 335
10.4.1 创建live folder 336
10.4.2 创建earthquake live folder 338
10.5 将搜索添加到应用程序以及快速搜索框中 340
10.5.1 将搜索添加到应用程序中 341
10.5.2 在快速搜索框中显示搜索结果 344
10.5.3 将搜索添加到earthquake示例中 344
10.6 创建live wallpaper 348
10.6.1 创建live wallpaper定义资源 348
10.6.2 创建wallpaper服务 348
10.6.3 创建wallpaper服务引擎 349
10.7 小结 350
第11章 音频、视频以及摄像头的使用 351
11.1 播放音频和视频 352
11.1.1 media player简介 352
11.1.2 准备音频播放 353
11.1.3 准备视频播放 354
11.1.4 控制播放 357
11.1.5 管理媒体播放输出 358
11.2 录制音频和视频 358
11.2.1 使用意图录制视频 358
11.2.2 使用媒体刻录机 359
11.3 使用摄像头并拍摄照片 362
11.3.1 使用意图拍摄照片 362
11.3.2 控制摄像头并拍摄照片 364
11.3.3 读取并写入jpeg exif图像详细信息 368
11.4 向媒体库中添加新媒体 369
11.4.1 使用媒体扫描仪 369
11.4.2 向媒体库中插入媒体 370
11.5 原始音频操作 370
11.5.1 录制带有音频记录的声音 370
11.5.2 使用音频轨道播放声音 372
11.6 语音识别 373
11.7 小结 374
第12章 电话服务和sms 377
12.1 电话服务 378
12.1.1 启动拨号程序以初始化电话呼叫 378
12.1.2 替换本机拨号程序 378
12.1.3 访问电话和网络属性以及状态 379
12.1.4 监视电话状态、电话活动以及数据连接中的变化 382
12.2 sms和mms简介 386
12.2.1 在应用程序中使用sms和mms 386
12.2.2 使用意图和本机客户端从应用程序中发送sms和mms 387
12.2.3 手动发送sms消息 388
12.2.4 监听传入的sms消息 391
12.2.5 紧急响应程序sms示例 393
12.2.6 自动化紧急响应程序 402
12.3 小结 410
第13章 蓝牙、网络和wi-fi 411
13.1 使用蓝牙 411
13.1.1 访问本地蓝牙设备适配器 412
13.1.2 管理蓝牙属性和状态 413
13.1.3 可发现性和远程设备发现 415
13.1.4 蓝牙通信 418
13.1.5 蓝牙数据传输示例 424
13.2 管理网络连接 433
13.2.1 connectivity manager(连接管理器)简介 433
13.2.2 读取用户首选项用于后台数据传输 434
13.2.3 监视网络详细信息 435
13.2.4 查找并配置网络首选项以及控制硬件信号 435
13.2.5 监视网络连接 436
13.3 管理wi-fi 436
13.3.1 监视wi-fi连接 437
13.3.2 监视活动连接详细信息 437
13.3.3 扫描热点 438
13.3.4 管理wi-fi配置 438
13.3.5 创建wi-fi网络配置 439
13.4 小结 439
第14章 传感器 441
14.1 使用传感器和传感器管理器 442
14.2 解释传感器数值 445
14.3 使用指南针、加速计和方向传感器 445
14.3.1 加速计简介 446
14.3.2 检测加速度变化 447
14.3.3 创建一个g-forceometer(重力测力计) 448
14.3.4 确定设备方向 451
14.3.5 创建一个指南针和人工地平仪 454
14.4 控制设备振动 458
14.5 小结 459
第15章 android高级开发 461
15.1 android的安全性 462
15.1.1 linux内核安全 462
15.1.2 权限简介 462
15.1.3 声明和实施权限 463
15.1.4 为广播意图实施权限 464
15.2 使用wake lock 464
15.3 android text to speech简介 465
15.4 使用aidl来支持服务的ipc 467
15.4.1 实现aidl接口 467
15.4.2 将类对象作为parcelable传递 468
15.4.3 实现和提供ipc接口 470
15.5 使用internet服务 472
15.6 构建内容丰富的用户界面 473
15.6.1 使用动画 473
15.6.2 高级画布绘图 484
15.6.3 surfaceview简介 499
15.6.4 创建交互式控件 502
15.7 小结 508
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android 2高级编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Arduino+Android互动智作
Chapter 1 蓝牙自走车
制作
原理讲解
小结
Chapter 2 Android盖革计数器
Google开源附件
制作
原理讲解
小结
Chapter 3 Android彩灯板
制作Arduino USB Host加料扩展板
制作彩灯板
使用效果
原理讲解
小结
Chapter 4 电视遥控器
制作
使用效果
小结
Chapter 5 温度记录器
制作
使用效果
原理讲解
小结
Chapter 6 超声波距离探测器
制作
使用效果
原理讲解
小结
Chapter 7 家居自动化控制器
制作音频连接模块
Android APP
通过互联网访问
原理讲解
小结
Chapter 8 电源控制
电源控制模块的概貌
制作电源控制模块
整合到家居自动化控制器
使用效果
原理讲解
小结
Chapter 9 智能恒温器
制作
使用效果
原理讲解
小结
Chapter 10 RFID门锁
制作
使用效果
原理讲解
小结
Chapter 11 信号旗
制作
原理讲解
小结
Chapter 12 延时器
制作
原理讲解
小结
附录 Android开源附件开发入门
学习Android编程
学习Arduino编程
选择学习示例
Arduino端开发
Android端开发
总结
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Arduino+Android互动智作
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android开发进阶
第1章　Android的构成基石—四大组件　1
1．1　Activity　1
1．1．1　Activity的构成　3
1．1．2　Activity的4种启动模式　5
1．1．3　FragmentActivity与Fragment　7
1．2　Service与AIDL　8
1．2．1　普通Service　8
1．2．2　IntentService　9
1．2．3　运行在前台的Service　10
1．2．4　AIDL（Android接口描述语言）　11
1．3　Broadcast（广播）　17
1．3．1　普通广播　17
1．3．2　有序广播　18
1．3．3　本地广播　19
1．3．4　sticky广播　19
1．4　ContentProvider（外共享数据）　19
1．5　小结　26
第2章　创造出丰富多彩的UI—
View与动画　27
2．1　重要的View控件　27
2．1．1　ListView与GridView　27
2．1．2　数据展示更好的实现——
RecyclerView　32
2．1．3　让页面显示更流畅——ViewPager　33
2．2　必须掌握的最重要的技能—
自定义控件　35
2．2．1　最为自由的一种实现——自定义View　36
2．2．2　View的尺寸测量　38
2．2．3　Canvas与Paint（画布与画笔）　42
2．2．4　自定义ViewGroup　45
2．3　Scroller的使用　46
2．4　让应用更精彩—动画　56
2．4．1　帧动画　57
2．4．2　补间动画　58
2．4．3　属性动画　60
2．4．3．1　属性动画的核心类——
ValueAnimator　60
2．4．3．2　对任意属性进行动画操作——
Object　Animator　61
2．4．3．3　实现丰富多彩的动画效果——
AnimatorSet　62
2．4．3．4　动画执行时间——TypeEvaluator与TimeInterpolator　63
2．5　小结　66
第3章　保证App流畅的关键因素—
多线程　67
3．1　Android中的消息机制　67
3．1．1　处理消息的手段——Handler、Looper与MessageQueue　67
3．1．2　在子线程中创建Handler为何
会抛出异常　72
3．2　Android中的多线程　73
3．2．1　多线程的实现——Thread和Runnable　73
3．2．2　线程的wait、sleep、join和
yield　74
3．2．3　与多线程相关的方法——Callable、Future和FutureTask　78
3．2．4　构建服务器应用程序的有效
方法——线程池　81
3．2．4．1　启动指定数量的线程——
ThreadPoolExecutor　82
3．2．4．2　定时执行一些任务——Scheduled ThreadPoolExecutor　85
3．2．4．3　线程池的使用准则　86
3．2．5　同步集合　87
3．2．5．1　程序中的优化策略——
CopyOnWriteArrayList　87
3．2．5．2　提高并发效率——
ConcurrentHashMap　88
3．2．5．3　有效的方法——
BlockingQueue　88
3．2．6　同步锁　89
3．2．6．1　同步机制关键字——
synchronized　89
3．2．6．2　显示锁—— ReentrantLock与
Condition　90
3．2．6．3　信号量Semaphore　93
3．2．6．4　循环栅栏CyclicBarrier　94
3．2．6．5　闭锁CountDownLatch　95
3．2．7　创建异步任务更简单——
AysncTask的原理　97
3．2．7．1　AsyncTask的实现基本原理　97
3．2．7．2　实现一个简单的AsyncTask　105
3．3　小结　108
第4章　HTTP网络请求　109
4．1　HTTP网络请求原理　109
4．1．1　HTTP的请求方式　110
4．1．1．1　GET请求　110
4．1．1．2　POST请求　110
4．1．1．3　PUT请求　111
4．1．1．4　DELETE请求　111
4．1．1．5　HEAD请求　112
4．1．1．6　TRACE请求　112
4．1．1．7　OPTIONS请求　113
4．1．2　HTTP报文格式解析　113
4．1．2．1　响应报文　116
4．1．2．2　常见的请求头部　117
4．1．3　简单模拟HTTP服务器　117
4．2　Android中执行网络请求　126
4．2．1　全面支持HTTP协议——
HttpClient　126
4．2．2　最佳选择——HttpURLConnection　128
4．3　网络框架的设计与实现　130
4．3．1　SimpleNet的基本架构　130
4．3．2　Request类　131
4．3．3　Response类　135
4．3．4　请求队列　136
4．3．5　NetworkExecutor网络执行器　137
4．3．6　执行网络请求的接口——
HttpStack　139
4．3．7　将请求的回调执行到UI线程——
ResponseDelivery　142
4．3．8　手动实现文件上传　144
4．3．8．1　自定义实现MultipartEntity　144
4．3．8．2　SimpleNet中实现文件上传　149
4．4　小结　151
第5章　独特高效的数据存储—SQLite
数据库　152
5．1　SQLite3的基本介绍　152
5．1．1　SQLite前端解析系统　153
5．1．2　SQLite后端引擎　154
5．2　SQLite中的SQL语句　154
5．2．1　创建数据库　154
5．2．2　创建表　154
5．2．3　插入数据　159
5．2．4　select语句　161
5．2．5　update语句　168
5．2．6　delete语句　169
5．2．7　修改表　169
5．2．8　创建索引　170
5．2．9　创建视图　171
5．2．10　创建触发器　171
5．2．11　drop命令　172
5．3　Android中的数据库开发　173
5．3．1　数据库基本类型与接口　173
5．3．2　Android数据库使用示例　177
5．3．3　数据库升级　181
5．3．4　Android中数据库的异步操作　181
5．4　数据库框架ActiveAndroid的使用与
基本原理　184
5．4．1　使用ActiveAndroid　184
5．4．2　数据库升级　188
5．4．3　基本原理　189
5．5　小结　196
第6章　让程序更优秀的技术—性能
优化　197
6．1　布局优化　197
6．1．1　include布局　197
6．1．2　merge标签　201
6．1．3　ViewStub视图　204
6．1．4　减少视图树层级　209
6．2　内存优化　211
6．3　内存泄漏　216
6．3．1　使用 Memory Monitor　216
6．3．2　内存泄漏检测利器——
LeakCanary　218
6．4　性能优化　222
6．4．1　过度绘制　222
6．4．2　Android 图形渲染　223
6．4．3　数据采集和分析工具——
TraceView　227
6．5　小结　231
第7章　装点程序“门面”—代码规范　232
7．1　代码规范的第一个重点—排版　232
7．1．1　代码缩进　232
7．1．2　长句分割　233
7．1．3　一句一行　233
7．1．4　大括号　233
7．1．5　空行分隔　234
7．1．6　空行分隔　234
7．1．7　数据与函数的排布　235
7．1．8　修饰词顺序　235
7．2　注释　235
7．2．1　类注释　236
7．2．2　注释的位置　236
7．2．3　函数的注释　237
7．2．4　异常的注释　237
7．3　命名　238
7．3．1　包的命名　238
7．3．2　类与接口的命名　238
7．3．3　函数命名　238
7．3．4　setter和getter　238
7．3．5　字段名　239
7．3．6　字段名　239
7．4　编码建议　239
7．4．1　beak语句　239
7．4．2　覆写时添加@Override　239
7．4．3　指定集合中的元素类型　240
7．4．4　显示指明操作符优先级　240
7．5　小结　240
第8章　让不断升级的系统更好管理—
Git版本控制　241
8．1　Git起源　243
8．2　Git基本原理　243
8．2．1　直接记录快照，而非差异
比较　243
8．2．2　近乎所有操作都是本地执行　244
8．2．3　时刻保持数据完整性　245
8．2．4　多数操作仅添加数据　245
8．2．5　文件的3种状态　245
8．3　Git基本配置　246
8．4　Git基本命令　247
8．4．1　进行版本控制的第一步——
Git　init　248
8．4．2　常用的版本控制命令——
Git　status　248
8．4．3　添加到追踪列表中——Git add　248
8．4．4　提交——Git commit　249
8．4．5　查看项目历史记录——Git log　250
8．4．6　下载程序——Git clone　250
8．4．7　不同分支——Git branch　251
8．4．8　签出一个分支——Git checkout　251
8．4．9　合并分支——Git merge　253
8．4．10　解决冲突　254
8．4．11　为版本打一个标签——Git tag　255
8．4．12　帮助文档——Git help　256
8．5　项目协作—GitHub　256
8．5．1　SSH key配置　257
8．5．2　项目托管——it remote　258
8．5．3　将项目推送到远程仓库——
Git　push　259
8．5．4　更新最代码——Git pull　260
8．5．5　Giti gnore忽略文件　261
8．5．6　Fork 加Pull request多人协作
模式　262
第9章　开发人员必备的技能—
单元测试　267
9．1　什么是单元测试　267
9．2　为什么要做单元测试　267
9．3　不写单元测试的借口　268
9．4　如何写单元测试　269
9．4．1　第一个单元测试　269
9．4．2　Junit简介　272
9．4．2．1　Junit执行流程　273
9．4．2．2　Junit的断言和失败提示　273
9．4．2．3　运行多个测试类——
TestSuite　274
9．5　测试哪些内容　275
9．5．1　边界条件　275
9．5．2　覆盖执行路径　275
9．6　模拟所需的功能模块—Mock
对象　278
9．6．1　手动Mock对象　278
9．6．2　使用Mockito库　279
9．6．2．1　验证某些行为　280
9．6．2．2　如何做一些测试桩（Stub）　280
9．6．2．3　参数匹配器　281
9．6．2．4　验证函数的确切调用次数、
最少调用、从未调用　281
9．6．2．5　确保交互操作没有执行
在Mock对象上　282
9．6．2．6　简化Mock对象的创建　282
9．6．2．7　为连续的调用做测试
桩（stub）　283
9．6．2．8　为回调做测试桩　283
9．6．2．9　doReturn()、doThrow()、
doAnswer()、doNothing()
和doCallRealMethod()系列
方法的运用　283
9．6．2．10　监控真实对象　284
9．6．2．11　为下一步的断言捕获参数　285
9．6．2．12　综合示例演练　285
9．7　Android中的单元测试　288
9．7．1　第一个单元测试　288
9．7．2　使用Instrumentation测试　290
9．7．2．1　需要Context的测试用例　290
9．7．2．2　测试Activity　290
9．7．2．3　测试Service　293
9．7．2．4　测试ContentProvider　295
9．8　测试驱动开发（TDD）简介　298
9．9　小结　300
第10章　六大原则与设计模式　301
10．1　面向对象六大原则　301
10．1．1　单一职责原则　301
10．1．2　里氏替换原则　302
10．1．3　依赖倒置原则　304
10．1．4　开闭原则　304
10．1．5　接口隔离原则　306
10．1．6　迪米特原则　308
10．2　设计模式　309
10．3　避免掉进过度设计的怪圈　310
10．4　反模式　311
10．5　小结　311
第11章　使系统适应变化—重构　312
11．1　为什么要重构　312
11．2　什么时候重构　313
11．3　常用的重构手法　313
11．3．1　提取子函数　313
11．3．2　上移函数到父类　316
11．3．3　下移函数到子类　318
11．3．4　封装固定的调用逻辑　320
11．3．5　使用泛型去除重复逻辑　320
11．3．6　使用对象避免过多的参数　322
11．3．7　重构的支柱——转移函数　324
11．3．8　将类型码的转为状态模式　326
11．3．9　什么也不做的对象——NullObject
模式　329
11．3．10　使类保持“苗条身材”——分解“胖”类型　331
11．4　小结　334
第12章　从码农历练成工程师—
综合实战　335
12．1　项目需求　335
12．2　第一版实现　336
12．3　第一版存在的问题与重构　352
12．3．1　类型重命名　352
12．3．2　去除重复代码　353
12．3．3　简化复杂的函数　356
12．3．4　明确职责与降低耦合　358
12．4　降低复杂性—MVP架构　362
12．5　开启单元测试之路—
添加单元测试　367
12．5．1　创建测试工程　367
12．5．2　测试网络请求解析类　369
12．5．3　测试数据库操作类　371
12．5．4　测试业务逻辑Presenter　374
12．5．5　模拟对象　375
12．5．6　更多测试　377
12．6　小结　378
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android开发进阶
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android程序设计
理论篇1
第1章 android概述2
1.1 移动设备开发平台4
1.1.1 移动信息设备系统4
1.1.2 开放手机联盟6
1.1.3 oms简介8
1.2 android简介8
1.2.1 android的历史8
1.2.2 android的优缺点9
1.2.3 android平台的技术架构10
1.3 android应用程序构成12
1.3.1 活动（activity）13
1.3.2 意图（intent）13
1.3.3 服务（service）13
1.3.4 内容提供器（content provider）14
1.4 第一个android应用14
小结20
练习20
第2章 活动（activity）22
.2.1 activity概述24
2.1.1 activity生命周期24
2.1.2 activity示例27
2.2 android中的资源使用30
2.2.1 字符串资源31
2.2.2 图片资源34
小结35
练习36
第3章 用户界面37
3.1 用户界面元素分类39
3.1.1 视图组件（view）39
3.1.2 视图容器组件（viewgroup）40
3.1.3 布局管理（layout）40
3.2 事件处理机制41
3.3 布局管理（layout）45
3.3.1 线性布局（linearlayout）45
3.3.2 相对布局（relativelayout）47
3.3.3 表格布局（tablelayout）48
3.3.4 绝对布局（absolutelayout）50
3.4 常用widget组件52
3.4.1 widget组件通用属性52
3.4.2 文本框（textview）52
3.4.3 编辑框（edittext）53
3.4.4 复选框（checkbox）53
3.4.5 单选按钮组（radiogroup）54
3.4.6 下拉列表（spinner）54
3.4.7 图片视图（imageview）60
3.4.8 滚动视图（scrollview）61
3.4.9 网格视图（gridview）62
3.4.10 列表视图（listview）63
3.5 菜单64
3.5.1 选项菜单（option menu）64
3.5.2 上下文菜单（context menu）65
3.6 对话框和提示信息（toast）69
3.6.1 对话框69
3.6.2 提示信息（toast）71
小结73
练习73
第4章 意图（intent）74
4.1 intent概述76
4.1.1 intent组成属性76
4.1.2 intent启动79
4.2 intent消息传递83
4.3 intent filter87
4.3.1 [intent-filter]元素88
4.3.2 intentfilter类91
4.4 广播接收intent91
4.4.1 广播和接收intent机制91
4.4.2 广播intent示例94
4.5 设置activity许可96
小结99
练习99
第5章 android后台服务（service）101
5.1 service简介103
5.2 实现service103
5.2.1 创建service类104
5.2.2 启动和绑定service105
5.2.3 停止service107
5.2.4 service示例108
5.3 android系统服务112
小结117
练习117
第6章 数据存储119
6.1 数据存储简介121
6.2 preference存储数据121
6.2.1 访问preference的api121
6.2.2 preference应用123
6.3 file存储数据127
6.3.1 文件操作128
6.3.2 file应用128
6.4 sqlite存储数据131
6.4.1 sqlite简介132
6.4.2 sqlite数据库操作132
6.4.3 sqliteopenhelper138
6.5 数据共享content provider143
6.5.1 contentprovider144
6.5.2 contentresolver145
6.5.3 contentprovider应用147
小结150
练习150
第7章 网络通信151
7.1 网络通信简介153
7.2 socket通信153
7.2.1 socket和serversocket153
7.2.2 socket应用155
7.3 http网络编程161
7.3.1 httpurlconnection161
7.3.2 httpclient165
7.4 webkit167
7.4.1 webkit介绍167
7.4.2 webview视图组件169
小结171
练习171
第8章 android特色开发173
8.1 电话功能175
8.1.1 电话功能结构175
8.1.2 sms应用176
8.2 传感器183
8.2.1 传感器简介183
8.2.2 传感器应用185
8.3 地图与定位187
8.3.1 google map简介187
8.3.2 gps187
8.4 搜索194
8.4.1 android搜索引擎api195
8.4.2 搜索步骤196
8.4.3 搜索示例198
小结201
练习202
实践篇203
实践1 android概述204
实践指导204
实践1.g.1204
实践1.g.2211
实践1.g.3214
知识拓展215
1. android网上资源215
2. android与java me的区别216
拓展练习217
练习1.e.1217
实践2 活动（activity）218
实践指导218
实践2.g.1218
实践2.g.2219
实践2.g.3221
知识拓展222
1. 使用颜色和尺寸资源222
2. 使用xml资源225
拓展练习227
练习2.e.1227
练习2.e.2227
实践3 用户界面228
实践指导228
实践3.g.1228
实践3.g.2235
知识拓展239
1. 自动完成文本框239
2. 时间相关的控件241
3. 进度条243
4. 拖动条246
5. 图片切换效果249
6. 进度对话框252
拓展练习255
练习3.e.1255
练习3.e.2255
练习3.e.3255
实践4 意图（intent）256
实践指导256
实践4.g.1256
实践4.g.2258
实践4.g.3276
知识拓展287
使用intent访问android系统功能287
拓展练习288
练习4.e.1288
实践5 后台服务（service）289
实践指导289
实践5.g.1289
知识拓展295
1. 播放音频、视频295
2. 录制音频、视频300
3. 照相304
拓展练习307
练习5.e.1307
实践6 数据存储308
实践指导308
实践6.g.1308
实践6.g.2310
实践6.g.3313
实践6.g.4317
参考解决方案317
知识拓展323
1. 制作动画323
2. 绘制图形329
拓展练习332
练习6.e.1332
实践7 网络通信333
实践指导333
实践7.g.1333
实践7.g.2351
实践7.g.3353
实践7.g.4357
实践7.g.5358
实践7.g.6365
实践7.g.7368
知识拓展370
1. wi-fi简介370
2. 蓝牙371
拓展练习372
练习7.e.1372
附录a widget列表373
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android程序设计
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android可穿戴设备高级编程
目录
第Ⅰ部分概念
第1章Android可穿戴设备概述
1.1可穿戴革命
1.2拆解计算机：电子人之梦
1.3软件无处不在
1.4时尚比滑雪衫更重要
1.5健康
1.6时间
1.7眼镜
1.8小结
1.9推荐阅读
第2章物联网
2.1可穿戴设备与物联网的关系
2.2互联的未来
2.2.1思科公司的预想
2.2.2大数据
2.3家中的互联设备
2.4移动型互联设备
2.5无线传感器网络
2.5.1WSN的使用场景
2.5.2蓝牙与ZigBee
2.6智慧城市
2.7小结
2.8推荐阅读
第3章平台与技术
3.1Android Wear
3.2安装Wear SDK
3.3使用Android Wear模拟器
3.4使用支持Wear的真实设备
3.5开始Wear开发
3.6在Google Play上发布Wear App
3.7小结
第Ⅱ部分基础构建模块
第4章小屏幕上的通知
4.1关于通知
4.1.1Wear通知API的前身
4.1.2Wear通知
4.2构建通知
4.2.1简单通知
4.2.2添加大图标
4.2.3大图片通知
4.2.4更新通知
4.2.5为通知添加页面
4.2.6为通知添加动作
4.2.7额外选项
4.2.8删除通知
4.3叠放通知
4.4小结
4.5推荐阅读
第5章开发Wear App
5.1 Wear SDK
5.1.1设计上的考虑
5.1.2可穿戴UI库
5.2创建Wear项目
5.2.1编辑gradle文件
5.2.2加载布局
5.3构建用户界面
5.3.1在用户界面中添加文本
5.3.2显示图片
5.3.3在Wear中使用列表
5.4提供积极的反馈
5.4.1启动成功反馈
5.4.2启动“在手机上打开动画”
5.4.3启动失败反馈
5.5小结
5.6推荐阅读
第6章语音输入
6.1对着手腕讲话
6.2语音交互的类型
6.3使用系统提供的语音命令
6.3.1启动App
6.3.2借用已有Intent启动自己的App
6.3.3使用语音启动App的“正确”方法
6.4 Wear API
6.4.1数据API
6.4.2消息API
6.4.3节点API
6.5回应通知：在App中获取语音
6.5.1创建发送通知的简单App
6.5.2让App接收语音命令
6.6小结
6.7推荐阅读
第7章推送数据
7.1查看示例
7.1.1手机端的MyActivityPhone.j ava
7.1.2手机端的AndroidManifest.xml
7.1.3可穿戴设备端的MyActivityWear.java
7.1.4可穿戴设备端的AndroidMarufest.xml
7.1.5可穿戴设备端的监听器
7.2从头开始构建自己的Google API客户端
7.2.1从一个空的项目开始
7.2.2手机端的MyActivityPhone.j ava
7.2.3手机端的AndroidManifest.xml
7.2.4手机端的DataLayerListenerService
7.2.5 MyActivityWear.java
7.2.6Wear端的Android Manifest文件
7.2.7可穿戴设备端的监听器
7.2.8最终效果
7.3小结
7.4推荐阅读
第8章Android Wear上的基于位置的服务
8.1位置服务工作方式的改变
8.1.1访问当前位置
8.1.2显示你的街道地址
8.2小结
8.3推荐阅读
……
第Ⅲ部分项目
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android可穿戴设备高级编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>安卓工程师教你玩转Android
第1章 Android操作系统（1）
1.1 Android源起（2）
1.2 Android的特点（3）
1.2.1 开放（3）
1.2.2 多样化（3）
1.2.3 可玩性强（4）
1.3 Android系统版本演进（4）
第2章 Android选机攻略（15）
2.1 CPU（16）
2.1.1 芯片架构（16）
2.1.2 芯片厂商（19）
2.1.3 决选（23）
2.2 GPU（24）
2.2.1 GPU介绍（24）
2.2.2 决选（26）
2.3 显示屏幕（27）
2.3.1 显示屏幕介绍（27）
2.3.2 显示参数（30）
2.3.3 决选（31）
2.4 RAM（31）
2.5 其他（32）
2.5.1 触摸屏（32）
2.5.2 摄像头（32）
2.5.3 通信模块（33）
2.5.4 电池（34）
2.6 Android选机总决选（34）
第3章 应用为王 初级玩转（36）
3.1 玩转应用市场（37）
3.1.1 官方电子市场（37）
3.1.2 国内第三方应用市场（42）
3.2 PC端管理软件（42）
3.2.1 豌豆荚（43）
3.2.2 91手机助手（49）
3.3 不推荐的应用安装方式（54）
第4章 优化Android高级玩转（55）
4.1 优化前的准备（56）
4.1.1 刷机（56）
4.1.2 root权限（58）
4.2 精简系统（58）
4.2.1 为什么要精简（58）
4.2.2 初级精简（59）
4.2.3 高级精简（60）
4.3 省电技巧（62）
4.3.1 改进使用习惯（62）
4.3.2 合理优化（64）
4.3.3 任务管理（65）
第5章 常用应用推荐（67）
5.1 Android应用商店（68）
5.2 软件类应用（76）
5.2.1 网络工具（76）
5.2.2 生活实用工具（78）
5.2.3 商务学习工具（89）
5.2.4 社交娱乐工具（100）
5.2.5 其他（116）
5.3 游戏类应用（120）
5.3.1 益智策略类（120）
5.3.2 体育竞技类（129）
5.3.3 赛车类（132）
5.3.4 大型动作游戏（135）
5.3.5 忍者系列（137）
第6章 高级应用和新奇应用推荐（140）
6.1 工具应用（141）
6.1.1 Taskman（141）
6.1.2 海卓HIAPN（142）
6.1.3 快速重启（143）
6.1.4 Z Device Test（144）
6.2 新奇应用（146）
6.2.1 透明屏幕（146）
6.2.2 体感游戏（148）
6.2.3 AR应用（154）
6.2.4 HTML5应用（163）
6.2.5 声控应用（163）
6.2.6 Weird Voice（166）
6.2.7 丑脸评分（167）
6.2.8 广告免疫（168）
6.2.9 Java/J2ME Runner（168）
6.2.10 远程控制类应用（170）
6.2.11 LED Show（174）
6.3 极客应用（175）
6.3.1 终端模拟器Terminal（175）
6.3.2 SQLite Editor（177）
6.3.3 I-Jetty（178）
6.3.4 Root Explorer（179）
6.3.5 Dev Tools（180）
6.4 系统优化应用（181）
6.4.1 Autostarts（181）
6.4.2 SystemApp Remover（181）
6.4.3 “显示分辨率调整”（181）
6.4.4 色调调整（183）
6.5 评测应用（185）
6.5.1 综合评测应用（185）
6.5.2 CPU性能（186）
6.5.3 GPU性能（189）
6.5.4 浏览器性能（191）
6.6 其他应用（包括游戏）（192）
6.7 在PC端运行Android应用（195）
6.7.1 BlueStacks（195）
6.7.2 Android SDK（197）
6.8 召唤（197）
第7章 Android高频问题解答（199）
7.1 名词解释类（200）
7.2 系统功能类（200）
7.3 第三方应用类（202）
7.4 其他（202）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>安卓工程师教你玩转Android
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>OpenGL ES应用开发实践指南
《opengl es应用开发实践指南：android卷》
推荐序
致　谢
前　言
第1章　准备开始 1
1.1　安装工具 1
1.2　创建第一个程序 3
1.3　初始化opengl 5
1.4　创建renderer类 10
1.5　使用静态导入 12
1.6　小结 12
第一部分　一个简单的空气曲棍球游戏
第2章　定义顶点和着色器 14
2.1　为什么选择空气曲棍球 14
2.2　不要从头开始 15
2.3　定义空气曲棍球桌子的结构 16
2.4　使数据可以被opengl存取 18
2.5　引入opengl管道 20
2.6　opengl颜色模型 25
2.7　小结 26
第3章　编译着色器及在屏幕上绘图 27
3.1　加载着色器 27
3.2　编译着色器 29
3.3　把着色器一起链接进opengl的程序 33
3.4　做最后的拼接 35
3.5　在屏幕上绘制 39
3.6　小结 43
3.7　练习 43
第4章　增加颜色和着色 44
4.1　平滑着色 45
4.2　引入三角形扇 45
4.3　增加一个新的颜色属性 46
4.4　使用新的颜色属性渲染 52
4.5　小结 55
4.6　练习 55
第5章　调整屏幕的宽高比 56
5.1　宽高比的问题 57
5.2　使用虚拟坐标空间 58
5.3　线性代数基础 59
5.4　定义正交投影 62
5.5　加入正交投影 64
5.6　小结 67
5.7　练习 67
第6章　进入第三维 68
6.1　三维的艺术 68
6.2　从着色器到屏幕的坐标变换 69
6.3　添加w分量创建三维图 71
6.4　使用透视投影 72
6.5　定义透视投影 73
6.6　在代码中创建投影矩阵 75
6.7　开始使用投影矩阵 76
6.8　增加旋转 79
6.9　小结 81
6.10　练习 82
第7章　用纹理增加细节 83
7.1　理解纹理 84
7.2　把纹理加载进opengl中 85
7.3　创建新的着色器集合 90
7.4　为顶点数据创建新的类结构 91
7.5　为着色器程序添加类 95
7.6　绘制纹理 99
7.7　小结 101
7.8　练习 101
第8章　构建简单物体 102
8.1　合并三角形带和三角形扇 102
8.2　添加几何图形的类 104
8.3　添加物体构建器 105
8.4　更新物体 112
8.5　更新着色器 113
8.6　集成所有的变化 114
8.7　小结 119
8.8　练习 119
第9章　增加触控反馈：与空气曲棍球游戏交互 120
9.1　为activity增加触控支持 120
9.2　增加相交测试 122
9.3　通过拖动移动物体 130
9.4　增加碰撞检测 132
9.5　小结 136
9.6　练习 137
第二部分　构建三维世界
第10章　用粒子增添趣味 140
10.1　为一个简单的粒子系统创建一组着色器 141
10.2　添加粒子系统 144
10.3　绘制粒子系统 148
10.4　扩散粒子 150
10.5　添加重力 152
10.6　用累加混合技术混合粒子 153
10.7　自定义点的外形 153
10.8　把每个点绘制为一个精灵 154
10.9　小结 156
10.10　练习 156
第11章　增加天空盒 157
11.1　创建天空盒 157
11.2　把立方体贴图加载到opengl中 159
11.3　创建立方体 161
11.4　增加天空盒着色器程序 163
11.5　在场景中加入天空盒 165
11.6　围绕场景移动相机 167
11.7　小结 169
11.8　练习 169
第12章　增加地形 170
12.1　创建高度图 170
12.2　创建顶点和索引缓冲区对象 171
12.3　加载高度图 173
12.4　绘制高度图 176
12.5　遮罩被隐藏的物体 180
12.6　小结 183
12.7　练习 183
第13章　点亮世界 184
13.1　仿真光照的效果 184
13.2　用朗伯体反射实现方向光 186
13.3　添加点光 192
13.4　小结 199
13.5　练习 199
第14章　创建动态壁纸 200
14.1　实现动态壁纸的service组件 200
14.2　权衡系统的其余部分 207
14.3　小结 209
14.4　练习 209
第15章　采取下一步行动 211
15.1　展望其他平台 211
15.2　了解更高级的技术 213
15.3　与世界分享你的艺术视野 216
附录a　投影背后的矩阵数学 217
附录b　调试 223
参考文献 228
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>OpenGL ES应用开发实践指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android安全机制解析与应用实践
推荐序
前言
第一部分　准备篇
第1章　Android基础
1.1　Android 系统架构
1.1.1　Linux内核层
1.1.2　硬件抽象层
1.1.3　系统运行库层
1.1.4　应用程序框架层
1.1.5　应用层
1.2　应用程序组件
1.3　Android系统启动
1.3.1　Linux系统启动
1.3.2　Android应用系统启动
1.4　Android系统升级
1.4.1　Android数据线升级
1.4.2　Android SD卡升级
1.4.3　Android 在线升级
1.5　本章小结
第2章　Android安全模型
2.1　Linux安全模型
2.1.1　用户与权限
2.1.2　进程与内存空间
2.2　Android安全机制
2.2.1　进程沙箱
2.2.2　应用权限
2.2.3　进程通信
2.2.4　内存管理
2.2.5　Android系统分区及加载
2.2.6　应用程序签名
2.3　Android开发工具提供的安全性机制
2.4　本章小结
第二部分　原理篇
第3章　Android安全机制源代码分析
3.1　文件系统权限的代码实现
3.2　进程通信机制的代码实现
3.2.1　匿名共享内存
3.2.2　Binder机制
3.3　Android应用程序安全机制
3.3.1　Android应用程序权限机制的源代码分析
3.3.2　应用程序签名机制实现的源代码分析
3.4　本章小结
第4章　Android安全性分析
4.1　Android系统安全分析
4.1.1　Linux内核
4.1.2　系统库
4.1.3　Dalvik虚拟机
4.2　Android应用安全分析
4.2.1　应用程序权限
4.2.2　应用程序安装
4.2.3　网络浏览器
4.2.4　数据库与SQL注入
4.2.5　软件更新
4.3　硬件安全分析
4.4　恶意软件
4.4.1　Linux恶意软件
4.4.2　Android恶意软件
4.5　安全风险与漏洞
4.5.1　已知安全风险
4.5.2　潜在安全漏洞
4.6　本章小结
第5章　Android实用安全分析工具
5.1　实用分析方法
5.1.1　Linux系统信息分析
5.1.2　Android应用信息分析
5.2　实用分析工具
5.2.1　Android系统调试工具
5.2.2　dumpsys工具
5.2.3　应用程序分析工具
5.3　专业分析工具与技术
5.3.1　常用逻辑分析工具与技术
5.3.2　常用物理分析工具与技术
5.4　本章小结
第三部分　实践篇
第6章　SE Android-增强Android安全性
6.1　内核安全风险与增强策略
6.2　SE Android概述
6.3　SE Android编译与安装
6.3.1　源代码获取
6.3.2　源代码结构
6.3.3　源代码编译和安装
6.4　SE Android安全策略概述
6.4.1　seapp_contexts文件
6.4.2　property_contexts文件
6.4.3　mac_permissions.xml文件
6.5　SE Android兼容性测试工具
6.6　SE Android的权限限制策略
6.6.1　强制限制的权限模型
6.6.2　安装时MAC
6.6.3　权限取消
6.6.4　权限标签传播
6.6.5　SE Android的其他类与权限策略
6.7　本章小结
第7章　Android加密文件系统
7.1　加密文件系统概述
7.2　加密算法介绍
7.2.1　AES加密算法
7.2.2　加密模式
7.3　加密文件系统源代码分析
7.3.1　Linux内核的dm-crypt
7.3.2　Android的vold
7.3.3　工作流程分析
7.4　加密文件系统配置
7.4.1　块设备选取与配置
7.4.2　init.rc配置
7.5　本章小结
第8章　Android应用安全实用解决方案
8.1　安全风险控制策略
8.2　应用权限控制
8.2.1　权限控制策略
8.2.2　权限定义和运用
8.3　应用程序签名
8.3.1　数字签名基础知识
8.3.2　数字签名算法
8.3.3　数字签名使用方式
8.3.4　应用程序签名的实现
8.4　静态代码分析
8.5　防火墙
8.6　数据存储加密
8.7　应用程序组件开发的安全要点
8.7.1　私有组件与公有组件
8.7.2　Activity安全
8.7.3　Service安全
8.7.4　Content Provider安全
8.7.5　Broadcast Receiver安全
8.7.6　Intent安全
8.7.7　Binder安全
8.8　本章小结
第9章　Android的无线通信安全
9.1　无线移动通信的安全威胁与防范
9.1.1　语音通信的空口加密与明文传输
9.1.2　短信与彩信的存储转发机制
9.1.3　传统的搭线窃听与合法监控
9.1.4　端到端的通信安全机制
9.2　Android的无线移动电话系统
9.2.1　无线移动电话系统的结构
9.2.2　无线移动电话系统的RIL层实现
9.2.3　无线移动电话系统的应用层框架
9.3　加密短信和彩信收发
9.3.1　普通短信与彩信的收发流程
9.3.2　短信与彩信的数字加密处理
9.3.3　加密短信与彩信的传输处理
9.3.4　加密短信与彩信的存储与调阅
9.4　加密实时语音通信
9.4.1　AT命令与电话建立流程
9.4.2　Android音频系统的电话部分
9.4.3　电话状态下音频通道的设置
9.4.4　电话音频加密处理
9.5　本章小结
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android安全机制解析与应用实践
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入解析Android 5.0系统
第1章 建立Android系统开发环境 1
1.1 安装操作系统 1
1.1.1 安装方式的选择 1
1.1.2 下载和安装Ubuntu 1
1.1.3 使用Ubuntu遇到的问题 2
1.2 安装开发包 3
1.2.1 安装JDK 1.6 3
1.2.2 安装OpenJDK 1.7 4
1.2.3 安装编译需要的开发包 4
1.3 安装一些有用的工具 4
1.3.1 安装Android SDK 4
1.3.2 安装Android Studio 4
1.3.3 安装Source Insight 5
1.3.4 安装比较工具Meld 5
1.4 下载源码 5
1.4.1 Git and Repo简介 5
1.4.2 源码版本历史 6
1.4.3 下载Android源码 7
1.4.4 下载Kernel源码 8
第2章 Android的编译环境——
Build系统 10
2.1 Android Build系统核心 10
2.1.1 编译环境的建立 11
2.1.2 Build相关的环境变量 14
2.1.3 Build系统的层次关系 15
2.1.4 分析main.mk文件 17
2.1.5 Build系统的编译目标
介绍 20
2.1.6 分析config.mk文件 22
2.1.7 分析product_config.mk
文件 24
2.1.8 Android 5.0中的64位
编译 26
2.2 Android的产品配置文件 27
2.2.1 分析hammerhead的配置
文件 27
2.2.2 编译类型eng、user和
userdebug 31
2.2.3 产品的Image文件 32
2.2.4 如何加快编译速度 33
2.2.5 如何编译Android的
模拟器 34
2.3 编译Android的模块 34
2.3.1 模块编译变量简介 35
2.3.2 常用模块定义实例 36
2.3.3 预编译模块的目标定义 37
2.3.4 常用“LOCAL_”变量 39
2.4 Android中的签名 40
2.4.1 Android应用签名方法 41
2.4.2 Android系统签名介绍 43
2.4.3 Android签名漏洞分析 44
第3章 连接Android和Linu内核的
桥梁——Android的Bionic 46
3.1 Bionic简介 46
3.1.1 Bionic的特性 46
3.1.2 Bionic中的模块简介 49
3.2 Bionic C库中的系统调用 50
3.2.1 系统调用简介 50
3.2.2 系统调用的实现方法 51
3.3 Bionic中的内存管理函数 52
3.3.1 系统调用brk和mmap 52
3.3.2 内存分配器——dlmalloc
简介 53
3.3.3 dlmalloc函数用法指南 54
3.4 管道 57
3.4.1 匿名管道PIPE和命名
管道FIFO 57
3.4.2 匿名管道的使用方法 58
3.5 Bionic中的线程管理函数 59
3.5.1 Bionic线程函数的特性 59
3.5.2 创建线程和线程的属性 59
3.5.3 退出线程的方法 61
3.5.4 线程本地存储TLS 62
3.5.5 线程的互斥量（Mutex）
函数 63
3.5.6 线程的条件量（Condition）
函数 65
3.6 Futex同步机制 66
3.6.1 Futex的系统调用 66
3.6.2 Futex的用户态操作 67
3.6.3 Mutex类使用Futex
实现同步 68
3.7 Android的 Log模块 68
3.7.1 Android Log系统的架构 69
3.7.2 Log系统的接口和用法 70
3.7.3 Log系统的实现分析 71
3.8 可执行文件格式分析 75
3.8.1 ELF格式简介 75
3.8.2 ELF文件头格式 76
3.8.3 程序头部表 77
3.8.4 与重定位相关的“节区”的
信息——DYNAMIC段 79
3.8.5 函数的重定位过程 81
3.9 Bionic中的Linker模块 84
3.9.1 可执行程序的装载 84
3.9.2 可执行程序的初始化 85
3.9.3 Linker装载动态库 87
3.10 调试器——Ptrace和Hook API 91
3.10.1 ptrace函数简介 91
3.10.2 Hook API的原理 92
3.10.3 利用ptrace实现
Hook API 93
第4章 进程间通信——Android
的Binder 98
4.1 Binder简介 98
4.1.1 Binder对象定义 98
4.1.2 Binder的架构 99
4.1.3 组件Service和匿名
Binder服务 100
4.1.4 Binder的层次 101
4.2 如何使用Binder 102
4.2.1 使用Binder服务 102
4.2.2 Binder的混合调用 102
4.2.3 用Jave开发Binder服务 103
4.2.4 用C++开发Binder服务 104
4.3 Binder应用层的核心类 106
4.3.1 IInterface中的两个宏 106
4.3.2 Binder核心类的关系 107
4.3.3 函数asInterface的奥秘 109
4.3.4 Binder的“死亡通知” 110
4.3.5 Jave层的Binder类 111
4.4 Binder的实现原理 115
4.4.1 Binder的线程模型 115
4.4.2 Binder对象的传递 119
4.4.3 分析IPCThreadState类 122
4.5 Binder驱动 126
4.5.1 应用层和驱动的消息
协议 126
4.5.2 Binder驱动分析 129
4.5.3 Binder的内存共享机制 130
4.5.4 驱动的ioctl操作 131
4.5.5 Binder调用过程 133
4.5.6 处理传递的Binder对象 138
4.6 解析名称的模块——
ServiceManager的作用 140
4.6.1 ServiceManager的架构 141
4.6.2 ServiceManger提供
的服务 143
4.7 匿名共享内存ashmem 146
4.7.1 ashmem的作用和用法 146
4.7.2 ashmem驱动的实现原理 148
4.7.3 ashemem驱动的代码
分析 149
4.7.4 进程间传递文件描述符 152
第5章 连接Java和C/C++层的
关键——Android的JNI 154
5.1 JNI的作用 154
5.2 JNI用法介绍 154
5.2.1 从Java到C/C++ 154
5.2.2 从C/C++到Java的调用 158
5.3 JNI环境 160
5.3.1 结构体JNIEnv 160
5.3.2 JNIEnv的创建和初始化 162
5.3.3 JNI中的异常处理 163
5.3.4 JNI中的引用 164
5.3.5 指明错误位置——
“CheckJNI”的作用 165
5.4 ART带来的JNI变化 165
5.4.1 垃圾回收的影响 165
5.4.2 错误处理的变化 166
5.4.3 堆栈可能引发的问题 166
第6章 Android的同步和消息机制 167
6.1 原子操作 167
6.1.1 Android的原子操作函数 167
6.1.2 原子操作的实现原理 168
6.1.3 内存屏障和编译屏障 169
6.2 Android native层的同步方法 171
6.2.1 互斥体Mutex和自动锁
Autolock 171
6.2.2 解决线程同步——条件
类Condition 173
6.3 Android Java层的同步机制 174
6.3.1 同步关键字synchronized 174
6.3.2 Object类在同步中
的作用 175
6.4 Android的消息机制 176
6.4.1 消息模型 177
6.4.2 理解Looper类 178
6.4.3 理解Handler类 180
6.4.4 消息的同步——Message
类的setAsynchronous()
方法 181
6.4.5 分析MessageQueue类 182
6.5 进程间的消息传递 186
6.5.1 理解Messenger类 187
6.5.2 建立通信通道——
AsyncChannel类的作用 187
第7章 第一个用户进程——Android
的Init进程 192
7.1 Init进程的初始化过程 194
7.1.1 main函数的流程 194
7.1.2 启动
。。。。。。。
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入解析Android 5.0系统
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入浅出Android源代码
第一部分Android基础篇
第1章Android简介.2
1.1Android简介2
1.2阅读Android源代码6
第2章Android基础类.10
2.1Android基础类简介10
2.2Thread类原理11
2.3Mutex与Condition20
2.3.1Mutex（AutoMutex）分析20
2.3.2Condition代码分析24
2.4Android系统智能指针30
2.4.1轻量级指针（lp）30
2.4.2强指针（sp）32
第3章Android上下文环境Context37
3.1Context简介37
3.2Application运行上下文环境Context的创建过程40
3.2.1创建ApplicationContext41
3.2.2获得ApplicationContext47
3.3Activity运行上下文环境Context的创建过程48
3.4Service运行上下文环境Context的创建过程55
第4章Android消息机制59
4.1Android消息机制原理59
4.2创建消息队列和进入消息循环过程61
4.3消息的发送过程70
4.4消息的处理过程75
第二部分Android框架篇
第5章AndroidInit进程.78
5.1AndroidInit进程简介78
5.2klog_init()函数83
5.3process_kernel_cmdline()函数85
5.4signal_handler_init()函数86
5.5property_load_boot_defaults()函数.89
5.6属性服务90
5.6.1属性服务的初始化与启动90
5.6.2属性的设置91
5.6.3属性值的获取95
5.7解析init.rc配置文件和启动service进程96
5.7.1init.rc文件基础介绍96
5.7.2解析init.rc文件.100
5.7.3启动service进程104
第6章开机动画bootanimation108
6.1开机动画bootanimation原理108
6.2开机动画bootanimation的显示过程111
6.3开机动画bootanimation的退出过程127
第7章Zygote进程135
7.1Zygote进程基础介绍135
7.2Zygote进程的启动139
7.2.1调用startVM()函数启动虚拟机143
7.2.2调用startReg()函数注册JNI方法143
7.2.3调用ZygoteInit类的main()方法145
7.3启动system_server进程.150
7.4启动APP应用程序进程155
第8章SystemServer进程161
8.1SystemServer系统服务161
8.2SystemServer创建框架核心服务165
第9章Android系统的开机与关机175
9.1Android系统的开机175
9.2Android系统的关机185
9.3案例分析197
9.3.1Android系统开机时间标志197
9.3.2Android系统关机时间标志198
第10章Android系统异常问题.199
10.1addr2line工具.199
10.2Watchdog207
10.3Android系统异常问题217
10.3.1Android死机218
10.3.2Android系统重启220
10.3.3Android系统启动异常233
第11章ActivityManagerService236
11.1ActivityManagerService简介.236
11.2Activity的启动过程240
11.2.1LauncherActivity的onPause()过程241
11.2.2LauncherActivity的onStop()过程261
11.2.3新Activity的onCreate()、onStart()和onResume()过程264
11.3Service的启动过程273
11.4Broadcast.280
11.4.1广播的注册过程282
11.4.2广播的发送过程290
11.4.3广播的处理过程295
11.5	进程内存管理303
11.6	案例分析.320
11.6.1与Activity有关的例子320
11.6.2与BroadCast有关的例子323
11.6.3与进程内存有关的例子329
第12章Android国际化331
12.1CTS与GTS331
12.2全球紧急电话策略337
12.3Android多语言345
第三部分AndroidROMUI篇
第13章Android资源管理系统354
13.1资源管理简介354
13.2资源初始化过程361
13.2.1AssetManager的构造方法369
13.2.2AssetManager.java的addAssetPath()方法.374
13.2.3Resources的构造方法375
13.3资源查找、解析、创建View过程378
13.3.1查找资源ID对应的不是文件的过程380
13.3.2查找资源ID对应的是文件的过程382
13.4主题换肤实现396
第14章AndroidView系统411
14.1View系统简介411
14.2应用程序Activity的创建412
14.3Activity窗口对象PhoneWindow的创建424
14.4Activity根视图对象DecorView的创建432
14.5ViewRootImpl的创建和添加DecorView对象440
14.6View的measure、layout和draw过程453
14.6.1View的measure过程462
14.6.2View的layout过程473
14.6.3View的draw过程.478
14.7View事件分发493
14.8案例分析503
第15章Android控件.512
15.1Android系统控件分析512
15.1.1系统控件简介512
15.1.2系统控件TextView的属性.514
15.1.3系统控件TextView的onMeasure()517
15.1.4系统控件TextView的onLayout()523
15.1.5系统控件TextView的onDraw()523
15.2自定义控件524
15.2.1定义自定义控件属性525
15.2.2实现自定义控件525
15.2.3使用自定义控件527
15.3Android控件案例分析527
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入浅出Android源代码
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android安全攻防实战
第1章  Android开发工具	1
1.1  简介	1
1.2  安装Android开发工具（ADT）	2
1.3  安装Java开发包（JDK）	5
1.4  更新API资源	9
1.5  另一种安装ADT的方法	11
1.6  安装原生开发包（Native Development Kit，NDK）	15
1.7  虚拟Android设备	16
1.8  使用命令行创建Android虚拟设备（AVD）	19
1.9  使用Android调试桥（ADB）与AVD交互	21
1.10  从AVD上复制出/复制入文件	22
1.11  通过ADB在AVD中安装app	23
第2章实践app安全	24
2.1  简介	24
2.2  检查app的证书和签名	24
2.3  对Android app签名	33
2.4  验证app的签名	37
2.5  探索AndroidManifest.xml文件	37
2.6  通过ADB与activity管理器交互	47
2.7  通过ADB提取app里的资源	50
第3章  Android安全评估工具	56
3.1  简介	56
3.2  制作Santoku启动盘和安装Santoku	58
3.3  安装drozer	62
3.4  运行一个drozer会话	71
3.5  枚举已安装的包（package）	72
3.6  枚举activity	78
3.7  枚举content provider	80
3.8  枚举service	83
3.9  枚举broadcast receiver	85
3.10  确定app的受攻击面（attack surface）	87
3.11  运行activity	89
3.12  编写drozer模块——一个驱动枚举模块	91
3.13  编写一个app证书枚举器	94
第4章利用app中的漏洞	98
4.1  简介	98
4.2  收集logcat泄露的信息	101
4.3  检查网络流量	106
4.4  通过activity manager被动嗅探intent	111
4.5  攻击service	117
4.6  攻击broadcast receiver	121
4.7  枚举有漏洞的content provider	123
4.8  从有漏洞的content provider中提取数据	126
4.9  向content provider插入数据	129
4.10  枚举有SQL-注入漏洞的content provider	131
4.11  利用可调试的app	134
4.12  对app做中间人攻击	139
第5章保护app	146
5.1  简介	146
5.2  保护app的组件	147
5.3  通过定制权限保护组件	149
5.4  保护content provider的路径（path）	152
5.5  防御SQL注入攻击	155
5.6  验证app的签名（防篡改）	157
5.7  通过检测安装程序、模拟器、调试标志位反逆向工程	161
5.8  用ProGuad删除所有日志消息	164
5.9  用GexGuard进行高级代码混淆	168
第6章逆向app	173
6.1  简介	173
6.2  把Java源码编译成DEX文件	175
6.3  解析DEX文件的格式	177
6.4  解释Dalvik字节码	194
6.5  把DEX反编译回Java	202
6.6  反编译app的原生库	205
6.7  使用GDB server调试Android进程	207
第7章网络安全	211
7.1  简介	211
7.2  验证SSL自签名证书	212
7.3  使用OnionKit库中的StrongTrustManager	221
7.4  SSL pinning——限定受信SSL的范围	223
第8章原生代码中漏洞的利用与分析	231
8.1  简介	231
8.2  检查文件的权限	232
8.3  交叉编译原生可执行程序	241
8.4  利用竞争条件引发的漏洞	249
8.5  栈溢出漏洞的利用	254
8.6  自动fuzzing测试Android原生代码	261
第9章加密与在开发时使用设备管理策略	274
9.1  简介	274
9.2  使用加密库	275
9.3  生成对称加密密钥	277
9.4  保护SharedPreferences数据	281
9.5  基于口令的加密	283
9.6  用SQLCipher加密数据库	287
9.7  Android KeyStore provider	290
9.8  在开发时使用设备管理策略	293
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android安全攻防实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android移动应用开发从入门到精通
第一部分  Android概览  第1章  Android简介    1.1  移动软件开发简史      1.1.1  遥想当年      1.1.2  “砖头”      1.1.3  无线应用协议(WAP)      1.1.4  商用移动平台    1.2  开放手机联盟(OHA)      1.2.1  无线Google      1.2.2  开放手机联盟成立      1.2.3  制造商：设计Android手机      1.2.4  内容提供商：开发Android应用程序      1.2.5  移动操作系统：传播Android体验      1.2.6  充分发挥Android的优势    1.3  Android平台的不同之处      1.3.1  Android：下一代平台      1.3.2  免费开放源代码      1.3.3  熟悉和廉价的开发工具      1.3.4  合理的开发人员学习曲线      1.3.5  强大的应用程序开发支持      1.3.6  丰富、安全的应用集成      1.3.7  无障碍发布      1.3.8  为应用程序提供的“自由市场”      1.3.9  新生并逐渐成长的平台    1.4  Android平台      1.4.1  Android的基本体系结构      1.4.2  安全与许可权限      1.4.3  开发Android应用程序    小结    参考资料和更多信息  第2章  你的Android开发环境  第3章  编写第一个Android应用程序第二部分  Android应用程序设计精髓第三部分  Android用户界面设计精髓第四部分  常用Android API第五部分  更多Android应用程序设计原则第六部分  对外发布你的Android应用程序第七部分  附录附录A  Android模拟器快速入门附录B  Android DDMS快速入门附录C  Android调试桥快速入门附录D  SQLite快速入门
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android移动应用开发从入门到精通
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android应用开发攻略
前言	1
第1章 入门	9
1.1 导言：入门	9
1.2 学习Java语言	9
1.3 从命令行创建“Hello, World”应用程序	11
1.4 在Eclipse中创建“Hello, World”应用程序	14
1.5 在Windows上安装用于Android开发的IDE	21
1.6 理解Android生命周期	28
1.7 通过ADB在模拟器上安装.apk文件	29
1.8 通过SlideME将应用程序安装到模拟器上	30
1.9 共享来自其他Eclipse项目的Java类	31
1.10 引用程序库实现外部功能	34
1.11 使用SDK样例避免棘手的情况	37
1.12 保持Android SDK更新	40
1.13 从模拟器/Android设备获得屏幕截图	47
1.14 程序：简单的CountDownTimer示例	49
1.15 程序： Android OS下的小费计算器Tipster	52
第2章 设计成功的应用程序	69
2.1 导言：设计成功的Android应用程序	69
2.2 异常处理	72
2.3 作为“单例”访问Android应用程序对象	75
2.4 在用户旋转设备时保存数据	77
2.5 监控Android设备的电量	79
2.6 在Android中创建闪屏	80
2.7 设计会议/网络研讨/编程马拉松/机构用的应用程序	85
2.8 在Android应用中使用Google Analytics	86
2.9 简单的手电筒应用程序	88
2.10 将Android手机应用程序改编为平板电脑应用程序	91
2.11 设置首次运行的首选项	93
2.12 为显示格式化时间和日期	94
2.13 用KeyListener控制输入	96
2.14 备份Android应用程序数据	99
2.15 用提示代替工具提示	106
第3章 测试	108
3.1 导言：测试	108
3.2 在Android中进行TDD	108
3.3 为应用测试设置Android虚拟设备（AVD）	109
3.4 用基于云的测试在多种设备上进行测试	118
3.5 测试项目的创建和使用	119
3.6 应用程序崩溃排错	123
3.7 用Log.d和LogCat进行调试	126
3.8 用BugSense自动从用户那里得到缺陷报告	127
3.9 使用本地运行时应用程序日志分析现场错误情况	129
3.10 为测试重现活动生命周期场景	133
3.11 用StrictMode保持应用程序敏捷性	138
3.12 运行Monkey程序	139
3.13 发送文本消息以及AVD之间的通话	141
第4章 进程间/内通信	143
4.1 导言：进程间/内通信	143
4.2 用意图打开网页、电话号码或者其他内容	144
4.3 从视图中发送文本邮件	145
4.4 发送带有附件的电子邮件	148
4.5 用Intent.putExtra()推送字符串值	149
4.6 从子活动中获取数据到主活动中	151
4.7 保持服务运行同时显示其他应用	154
4.8 发送/接收广播消息	156
4.9 在设备重启之后启动服务	156
4.10 用线程创建响应式应用程序	157
4.11 用AsyncTask进行后台处理	159
4.12 用活动线程队列和处理器在线程之间发送消息	167
4.13 创建Android Epoch HTML/JavaScript日历	168
第5章 内容提供者	175
5.1 导言：内容提供者	175
5.2 从内容提供者获取数据	175
5.3 编写内容提供者	177
5.4 编写Android远程服务	179
第6章 图形	184
6.1 导言：图形	184
6.2 使用自定义字体	184
6.3 用OpenGL ES绘制旋转的方块	187
6.4 添加对OpenGL旋转方块的控制	191
6.5 徒手绘制平滑曲线	194
6.6 使用意图拍照	199
6.7 用android.media.Camera拍照	201
6.8 用Google ZXing条码扫描程序扫描条形码或QR代码	204
6.9 用AndroidPlot显示图表和图形	208
6.10 使用Inkscape创建Android启动器图标	210
6.11 从OpenClipArt.org用Paint.NET创建简易启动器图标	217
6.12 使用Nine Patch文件	223
6.13 用Android RGraph创建HTML5图表	227
6.14 添加简单的光栅动画	231
6.15 使用捏合缩放	234
第7章 GUI	237
7.1 导言：GUI	237
7.2 理解并遵循用户界面指南	238
7.3 通过解耦视图和模型处理配置更改	239
7.4 创建一个按钮及其单击事件监听器	242
7.5 以5种不同的方式连接事件处理器	243
7.6 使用CheckBox和RadioButton控件	248
7.7 用图形按钮改进UI设计	251
7.8 通过Spinner类提供下拉选择器	254
7.9 处理长按/长单击事件	256
7.10 用TextView和EditText显示文本字段	258
7.11 用属性和TextWatcher接口限制EditText值	259
7.12 实现AutoCompleteTextView	261
7.13 用SQLite数据库查询为AutoCompleteTextView提供数据	263
7.14 将编辑字段转换为密码字段	265
7.15 将软键盘上的Enter键改成Next键	266
7.16 在活动中处理按键事件	269
7.17 让他们看到星标：使用RatingBar	270
7.18 震动视图	274
7.19 提供触觉反馈	275
7.20 在TabView中浏览不同的活动	279
7.21 创建自定义标题栏	280
7.22 格式化数字	283
7.23 格式化正确的复数形式	287
7.24 从第一个屏幕启动第二个屏幕	290
7.25 创建出现在两个活动之间的“加载中”屏幕	299
7.26 使用SlidingDrawer覆盖其他组件	300
7.27  自定义SlidingDrawer组件，使动画/过渡的方向变为从上向下	303
7.28 为布局添加圆角边框	305
7.29 在Android中检测手势	306
7.30  在Android 1.6及更新版本中用Android 3.0片段构建UI	314
7.31 使用Android 3.0 Photo Gallery	318
7.32 创建简单的应用程序窗口部件	321
第8章 GUI警告：菜单、对话框、Toast和通知	326
8.1 导言：GUI警告	326
8.2 创建和显示菜单	327
8.3 处理菜单选择项	328
8.4 创建子菜单	330
8.5 创建弹出/警告对话框	333
8.6 使用Timepicker窗口小部件	334
8.7 创建类似iPhone的滚轮选择器	336
8.8 创建标签式对话框	340
8.9 创建ProgressDialog	342
8.10 创建带有按钮、图像和文本的自定义对话框	344
8.11 创建可重用的“关于”对话框类	346
8.12 自定义Toast显示	350
8.13 在状态栏中创建通知	352
第9章 GUI：ListView	358
9.1 导言：ListView	358
9.2 用ListView构建基于列表的应用程序	358
9.3 为ListView创建“无数据”视图	362
9.4 创建具有图像和文本的高级ListView	363
9.5 在ListView中使用段标题	368
9.6 使用户的注意力保持在ListView上	373
9.7 编写自定义列表适配器	374
9.8 处理方向变化：从ListView数据值到横向图表	377
第10章 多媒体	383
10.1 导言：多媒体	383
10.2 播放YouTube视频	383
10.3 使用Gallery和ImageSwitcher视图	384
10.4 用MediaRecorder捕捉视频	387
10.5 使用Android的面部检测功能	390
10.6 播放来自文件的音频	393
10.7 无交互播放音频	396
10.8 使用语音识别功能	397
10.9 使用设备的朗读功能	399
第11章 数据持久性	401
11.1 导言：数据持久性	401
11.2 获得文件信息	401
11.3 读取应用自带而非文件系统中的文件	405
11.4 列出目录	406
11.5 获得关于SD卡的总空间和可用空间的信息	408
11.6 花费最小的精力提供用户首选项设置活动	409
11.7 检查默认共享首选项的一致性	413
11.8 执行高级文本搜索	415
11.9  在Android应用程序中创建SQLite数据库	420
11.10 在SQLite数据库中插入数值	422
11.11 从现有的SQLite数据库加载数值	422
11.12 在SQLite中使用日期	423
11.13 用JSONObject解析JSON	426
11.14 用DOM API解析XML文档	427
11.15 用XmlPullParser解析XML文档	429
11.16 添加联系人	433
11.17 读取联系人数据	435
第12章 电话应用程序	439
12.1 导言：电话应用程序	439
12.2 在电话铃响的时候进行某些操作	439
12.3 处理呼出电话	443
12.4 电话自动拨号	447
12.5 发送单部分和多部分SMS消息	448
12.6 在Android应用程序中接收SMS消息	451
12.7 使用模拟器控制面板向模拟器发送SMS消息	453
12.8 使用Android的TelephonyManager获得设备信息	453
第13章 联网应用程序	464
13.1 导论：网络	464
13.2 使用REST风格的Web服务	465
13.3 用正则表达式从无结构文本中提取信息	467
13.4 用ROME解析RSS/Atom Feed	469
13.5 用MD5加密明文	473
13.6 将文本转换为超链接	474
13.7 用WebView访问网页	475
13.8 自定义WebView	476
第14章 游戏与动画	478
14.1 导论：游戏与动画	478
14.2 用flixel-android构建Android游戏	479
14.3 用AndEngine（Android-Engine）构建Android游戏	482
14.4 处理定时键盘输入	488
第15章 社交网络	490
15.1 导言：社交网络	490
15.2 用HTTP集成社交网络	490
15.3 用JSON加载用户的Twitter动态	493
第16章 位置和地图应用程序	496
16.1 导言：位置感知应用程序	496
16.2 获得位置信息	496
16.3 在应用程序中访问GPS信息	498
16.4 在设备上模拟GPS坐标	500
16.5 使用地理解析和反向地理解析	503
16.6 准备Google Maps开发	504
16.7 将设备当前位置添加到Google Maps	511
16.8 在Google MapView上绘制位置标志	512
16.9 在MapView上绘制多个位置标志	516
16.10 为Google MapView创建图层	521
16.11 改变Google MapView的模式	523
16.12 在不使用Drawble对象的情况下绘制图层图标	523
16.13 在Google Maps上实现位置搜索	529
16.14 在一个TabView中放置MapView	530
16.15 处理MapView的长按动作	533
16.16 使用OpenStreetMap	537
16.17 在OpenStreetMap地图上创建图层	540
16.18 在OpenStreetMap地图上使用比例尺	543
16.19 处理OpenStreetMap图层上的触摸事件	544
16.20 用OpenStreetMap地图获得位置的更新	546
第17章 加速计	551
17.1 导言：传感器	551
17.2 检查传感器是否存在	551
17.3 使用加速计检测设备的摇晃	552
17.4 用加速计根据屏幕方向检查设备是向上还是向下	556
17.5 用方向传感器发现Android设备的方向	557
17.6 读取温度传感器	559
第18章 蓝牙	560
18.1 导言：蓝牙	560
18.2 启用蓝牙并使设备处于可发现状态	560
18.3 连接启用蓝牙的设备	562
18.4 监听和接收蓝牙连接请求	565
18.5 实现蓝牙设备发现	566
第19章 系统与设备控制	568
19.1 导言：系统与设备控制	568
19.2 访问电话网络/连接性信息	568
19.3 从清单文件获取信息	569
19.4 将来电通知改为静音、振动或者普通	570
19.5 复制文本以及从剪贴板获取文本	572
19.6 使用基于LED的通知	573
19.7 使设备振动	573
19.8 从应用程序运行Shell命令	575
19.9 确定指定应用程序是否运行	576
第20章 其他编程语言和框架	578
20.1 导言：其他编程语言	578
20.2 运行外部/原生UNIX/Linux命令	579
20.3 在NDK上用JNI运行原生C/C++代码	580
20.4 从SL4A入手	585
20.5 用SL4A创建警告	588
20.6 使用SL4A读取Google文档并在ListView控件中显示	592
20.7 用QR码共享SL4A脚本	594
20.8 从WebView中通过JavaScript使用原生手机功能	597
20.9 用PhoneGap/Cordova创建平台无关的应用程序	599
第21章 字符串和国际化	602
21.1 导言：国际化	602
21.2 国际化应用程序文本	603
21.3 寻找和翻译字符串	607
21.4 处理Strings.xml的微妙之处	608
第22章 打包、部署和分发/销售应用程序	614
22.1 导言：打包、部署和分发	614
22.2 创建签名证书	614
22.3 签署应用程序	617
22.4 通过Android Play分发应用程序	618
22.5 将AdMob集成到应用中	620
22.6 用ProGuard进行代码混淆和优化	624
22.7 提供Google Play市场中发布的其他应用的链接	627
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android应用开发攻略
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android多媒体开发高级编程
目    录

第1章  Android图像概述	1
1.1  使用内置的Camera应用程序
捕获图像	1
1.1.1  从Camera应用程序返回
数据	2
1.1.2  捕获更大的图像	5
1.1.3  显示大图像	6
1.2  图像存储和元数据	10
1.2.1  获得图像的Uri	10
1.2.2  更新CameraActivity以
使用MediaStore存储图像
和关联元数据	12
1.2.3  使用MediaStore检索图像	17
1.2.4  创建图像查看应用程序	18
1.2.5  内部元数据	22
1.3  本章小结	22
第2章  构建定制的Camera
应用程序	25
2.1  使用Camera类	25
2.1.1  CAMERA权限	25
2.1.2  预览Surface	26
2.1.3  实现Camera对象	27
2.1.4  汇总	36
2.2  扩展定制的Camera应用
程序	39
2.2.1  构建基于定时器的Camera
应用程序	40
2.2.2  构建时间推移摄影应用
程序	45
2.3  本章小结	47
第3章  图像编辑和处理	49
3.1  使用内置Gallery应用程序
选择图像	49
3.2  在位图上绘制位图	53
3.3  基本的图像缩放和旋转	55
3.3.1  输入矩阵	55
3.3.2  Matrix类的方法	58
3.4  图像处理	62
3.4.1  ColorMatrix	62
3.4.2  改变对比度和亮度	64
3.4.3  改变饱和度	65
3.5  图像合成	66
3.6  本章小结	72
第4章  图形和触摸事件	73
4.1  画布绘图	73
4.1.1  位图创建	73
4.1.2  位图配置	74
4.1.3  创建Canvas对象	74
4.1.4  使用Paint对象	75
4.1.5  绘制形状	76
4.1.6  绘制文本	79
4.2  手指绘图	83
4.2.1  触摸事件	83
4.2.2  在现有图像上绘制	86
4.2.3  保存基于位图的画布绘图	90
4.3  本章小结	93
第5章  Android音频概述	95
5.1  音频播放	95
5.1.1  支持的音频格式	95
5.1.2  通过意图使用内置的
音频播放器	96
5.1.3  创建自定义的音频播放
应用程序	98
5.1.4  用于音频的MediaStore	104
5.2  本章小结	112
第6章  后台和网络音频	113
6.1  后台音频播放	113
6.1.1  服务	113
6.1.2  加上MediaPlayer的本地
服务	117
6.1.3  控制服务中的
MediaPlayer	121
6.2  网络音频	126
6.2.1  HTTP音频播放	127
6.2.2  通过HTTP的流式音频	132
6.2.3  RTSP音频流	140
6.3  本章小结	141
第7章  音频捕获	143
7.1  通过意图捕获音频	143
7.2  定制音频捕获	146
7.2.1  MediaRecorder音频源	147
7.2.2  MediaRecorder输出格式	147
7.2.3  MediaRecorder音频
编码器	148
7.2.4  MediaRecorder输出
和录制	148
7.2.5  MediaRecorder状态机	148
7.2.6  MediaRecorder示例	149
7.2.7  其他的MediaRecorder
方法	154
7.3  将音频插入MediaStore	160
7.4  使用AudioRecord录制原始
音频	160
7.5  使用AudioTrack播放原始
音频	163
7.6  捕获和播放原始音频的
示例	164
7.7  本章小结	170
第8章  音频合成与分析	171
8.1  数字音频合成	171
8.1.1  播放合成声音	171
8.1.2  生成样本	174
8.2  音频分析	180
8.2.1  捕获声音以进行分析	180
8.2.2  可视化频率	181
8.3  本章小结	186
第9章  视频概述	187
9.1  视频播放	187
9.1.1  支持的格式	187
9.1.2  使用意图播放	188
9.1.3  使用VideoView播放	189
9.1.4  使用MediaController添加
控制	190
9.1.5  使用MediaPlayer播放	191
9.2  本章小结	201
第10章  视频进阶	203
10.1  使用MediaStore检索
视频	203
10.1.1  来自MediaStore的
视频缩略图	204
10.1.2  完整的MediaStore
视频示例	204
10.2  网络视频	211
10.2.1  支持的网络视频类型	211
10.2.2  网络视频播放	213
10.3  本章小结	221
第11章  视频捕获	223
11.1  使用意图录制视频	223
11.2  添加视频元数据	226
11.3  定制视频捕获	229
11.3.1  将MediaRecorder用于
视频	230
11.3.2  定制视频捕获的完整
示例	239
11.4  本章小结	244
第12章  使用Web服务的媒体
消费和发布	245
12.1  Web服务	245
12.2  HTTP请求	246
12.3  JSON	248
12.3.1  使用JSON提取
Flickr图像	251
12.3.2  位置	259
12.3.3  使用JSON和位置提取
Flickr图像	262
12.4  REST	268
12.4.1  以XML表示数据	269
12.4.2  SAX分析	269
12.5  HTTP文件上传	274
12.5.1  生成HTTP请求	275
12.5.2  上传视频到Blip.TV	276
12.6  本章小结	288

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android多媒体开发高级编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android应用案例开发大全
第1章　初识庐山真面目——Android简介　1
1.1　Android的诞生　1
1.2　Android的特点　1
1.3　Android开发环境的搭建　2
1.3.1　Android SDK的安装及环境变量的配置　2
1.3.2　Eclipse集成开发环境的搭建　3
1.3.3　模拟器的创建和运行　4
1.4　DDMS的灵活应用　5
1.4.1　初识DDMS　6
1.4.2　强大的日志管理功能——LogCat的使用　7
1.4.3　Devices的管理　8
1.4.4　模拟器控制（EmulatorControl）详解　11
1.4.5　File Explorer——SD Card文件管理器　11
1.5　第一个Android程序——Hello Android　12
1.6　Android应用程序的项目结构　15
1.7　本章小结　16
第2章　移动查询系统——百纳铁路小助手　17
2.1　系统背景及功能概述　17
2.1.1　背景简介　17
2.1.2　功能概述　17
2.1.3　开发环境和目标平台　18
2.2　开发前的准备工作　18
2.2.1　数据库设计　18
2.2.2　图片资源的搜集和制作　20
2.3　系统功能预览　21
2.4　界面主类LCCXActivity　24
2.5　辅助界面相关类　43
2.5.1　欢迎界面WelcomeView类　43
2.5.2　自定义控件GGView类　45
2.5.3　适配器CityAdapter类　47
2.6　数据库操作相关类　53
2.6.1　数据库表的创建——CreatTable类　53
2.6.2　数据库操作LoadUtil类　54
2.7　知识点汇总　60
2.8　本章小结　60
第3章　数据库客户端应用——日程管理专家　61
3.1　开发背景及功能概述　61
3.1.1　开发背景　61
3.1.2　功能概述　61
3.1.3　开发环境和目标平台　62
3.2　软件预览及功能结构　62
3.2.1　软件预览　62
3.2.2　功能结构　64
3.3　开发前的准备工作　65
3.3.1　图片资源的准备　65
3.3.2　数据库设计　66
3.3.3　数据库表设计　66
3.4　欢迎界面　68
3.5　数据库的开发　69
3.6　工具类Schedule　78
3.7　常量类Constant　81
3.8　主控制类RcActivity　82
3.9　主界面的开发　86
3.10　新建日程界面的开发　90
3.11　类型管理界面的开发　94
3.12　日程查找界面的开发　95
3.13　查找结果界面的开发　98
3.14　帮助界面的开发　101
3.15　更新对话框内容方法的开发　101
3.16　本章小结　105
第4章　网络游戏开发——易扑克网络对战游戏　106
4.1　游戏的背景及功能概述　106
4.1.1　背景概述　106
4.1.2　功能简介　106
4.2　游戏的策划及准备工作　109
4.2.1　游戏的策划　109
4.2.2　Android平台下游戏开发的准备工作　109
4.3　游戏的框架　111
4.3.1　各个类的简要介绍　111
4.3.2　游戏的框架简介　112
4.4　共有类WLQPActivity的实现　113
4.5　辅助界面相关类的实现　119
4.5.1　欢迎界面类　120
4.5.2　主菜单界面类　121
4.6　游戏界面相关类的实现　124
4.6.1　游戏界面框架　124
4.6.2　界面刷帧线程类　130
4.6.3　牌图分割类　131
4.6.4　牌的控制类　133
4.6.5　出牌规则类　134
4.6.6　牌型规则　138
4.7　客户端代理线程　140
4.8　服务器相关类　142
4.8.1　服务器主类　142
4.8.2　服务器代理线程　144
4.8.3　发牌类　148
4.9　本章小结　149
第5章　动态壁纸游戏经典——坦克大战动态壁纸　150
5.1　动态壁纸的背景及功能概述　150
5.1.1　背景概述　150
5.1.2　功能简介　151
5.2　游戏的策划及准备工作　153
5.2.1　游戏的策划　153
5.2.2　Android平台下游戏开发的准备工作　153
5.3　游戏的架构　154
5.3.1　游戏的框架简介　155
5.3.2　游戏的类结构　155
5.4　地图设计器的开发　156
5.5　主控制类的实现　157
5.5.1　主控制类的代码框架　158
5.5.2　游戏引擎类的代码框架　159
5.5.3　游戏引擎类主要方法的开发　160
5.6　游戏工具类的开发　165
5.6.1　常量类的代码框架　165
5.6.2　常量类主要方法的实现　165
5.6.3　横屏的常量类的开发　167
5.6.4　屏幕尺寸结果类的开发　168
5.6.5　适应屏工具类的开发　168
5.7　游戏实体模块的开发　170
5.7.1　英雄类的代码框架　170
5.7.2　Hero类的部分成员方法的实现　171
5.7.3　英雄坦克子弹相关类的开发　176
5.7.4　敌方坦克相关类的开发　178
5.7.5　子弹类的开发　181
5.7.6　奖励物相关类的开发　182
5.7.7　障碍物相关类的开发　183
5.7.8　游戏大本营——（Home）类的开发　184
5.8　地图的设计与实现　185
5.8.1　地图类的代码框架　185
5.8.2　地图类中主要方法的开发　186
5.9　游戏后台逻辑模块的开发　189
5.9.1　英雄走的线程类的开发　189
5.9.2　英雄发射子弹线程类的开发　190
5.9.3　英雄发射子弹走的线程类的开发　190
5.9.4　产生坦克的线程类的开发　191
5.9.5　英雄走的线程类的开发　193
5.9.6　坦克改变方向的线程类的开发　193
5.9.7　坦克发射子弹的线程类的开发　194
5.9.8　修筑老窝线程类的开发　194
5.9.9　保护英雄线程类的开发　195
5.9.10　使坦克停止的线程类的开发　196
5.10　游戏的优化与改进　196
5.11　本章小结　197
第6章　移动管理系统——大学图书管理系统　198
6.1　系统分析　198
6.1.1　需求分析　198
6.1.2　可行性分析　199
6.2　系统设计　200
6.2.1　系统目标　200
6.2.2　系统功能结构　200
6.2.3　构建开发环境　200
6.2.4　学生端的系统预览　200
6.2.5　管理端的系统预览　204
6.3　数据库设计　207
6.3.1　数据库分析　207
6.3.2　数据库结构图　207
6.3.3　数据库表的设计　208
6.4　开发前的准备工作　212
6.5　欢迎界面的设计　212
6.6　学生端用户登录模块　214
6.6.1　登录界面的开发　214
6.6.2　登录界面功能的实现　218
6.6.3　数据库操纵方法的实现　219
6.7　学生端主页模块　219
6.7.1　学生端主界面的开发　219
6.7.2　界面跳转控制功能　222
6.8　学生端查询功能模块　223
6.8.1　查询主界面及功能开发　223
6.8.2　个人已借图书查询界面及功能开发　225
6.8.3　馆内图书查询界面及功能开发　227
6.8.4　数据库操作方法的实现　230
6.9　学生端图书挂失功能模块　231
6.9.1　挂失界面及功能开发　231
6.9.2　数据库操纵方法的实现　233
6.10　学生端图书预约功能模块　234
6.10.1　图书预约界面及功能开发　235
6.10.2　数据库操作方法的实现　237
6.11　管理端开发　238
6.11.1　管理员登录界面的开发　238
6.11.2　管理员登录验证模块　238
6.12　管理端主界面的开发　239
6.13　图书管理模块　239
6.13.1　图书管理界面的开发　239
6.13.2　其他图书管理界面的开发　241
6.13.3　图书管理界面监听方法　242
6.13.4　图书入库和图书删除方法的实现　244
6.13.5　图书查询和修改图书信息方法的实现　249
6.14　学生管理模块　251
6.14.1　学生管理界面简介　251
6.14.2　学生管理界面的开发　251
6.14.3　数据库操作方法的实现　253
6.15　管理员管理模块　255
6.15.1　管理员管理界面开发　255
6.15.2　管理员管理界面监听方法　256
6.15.3　数据库操作方法的实现　257
6.16　管理端图书查询模块　259
6.17　管理端图书挂失模块　259
6.18　管理端图书借阅预约模块　260
6.18.1　图书借阅功能按钮监听　260
6.18.2　数据库操作方法的实现　262
6.19　欠款缴纳模块　262
6.19.1　欠款缴纳界面的开发　262
6.19.2　数据操作方法的实现　262
6.20　本章小结　263
第7章　导航与地图开发（LBS）——北京地铁小助手　264
7.1　项目系统背景及功能介绍　264
7.1.1　项目背景简介　264
7.1.2　功能概述　264
7.1.3　构建项目开发环境　265
7.1.4　系统预览　265
7.2　数据库设计　268
7.2.1　数据库分析　268
7.2.2　数据库结构图　268
7.2.3　数据库表的设计　268
7.3　欢迎界面的设计　271
7.4　主界面的开发　274
7.4.1　界面主框架的开发　274
7.4.2　列表站点选择的界面开发　275
7.4.3　最近站点查询界面开发　277
7.5　列表站点选择模块的开发　280
7.5.1　列表站点选择界面的显示　280
7.5.2　控件中数据初始化　281
7.5.3　Intent消息机制的开发　283
7.6　最近站点查询模块的开发　284
7.6.1　最近站点查询界面显示　284
7.6.2　定位自己的当前位置　284
7.6.3　Intent消息机制的开发　286
7.6.4　最近站点对话框的开发　288
7.7　地图开发的前期准备　290
7.7.1　申请Android MapAPI Key　290
7.7.2　地图界面布局的开发　291
7.8　Map地图的初始化　293
7.8.1　Intent消息的接收　293
7.8.2　定位自己的当前位置　293
7.8.3　地图图层加载　294
7.9　信息图层MyBallonOverlay的开发　295
7.9.1　提示信息窗口的开发　295
7.9.2　站点提示图标和信息窗口的绘制　297
7.9.3　MyBallonOverlay事件触发　297
7.10　站点标志图层的开发　298
7.10.1　绘制站点图标　299
7.10.2　显示站点标志位的开发　300
7.10.3　图标显示的决定因素　301
7.10.4　图层开发的部分方法实现　302
7.11　地铁线路图层的开发　304
7.11.1　求两点间距离方法的开发　304
7.11.2　求路线方向角方法的开发　304
7.11.3　地铁路线图绘制思路　305
7.11.4　绘制路线的节点排序　306
7.11.5　地铁路线图层开发　307
7.11.6　地铁路线选择显示　308
7.12　捕捉触控事件MyMapOverlay的开发　309
7.12.1　地球上两点之间求距离　309
7.12.2　MyMapOverlay捕捉触控事件　310
7.13　用DOM解析XML文件　312
7.13.1　DOM解析器　312
7.13.2　网上获取行车路线信息的XML文档　313
7.13.3　从XML文档获取路径节点列表　314
7.14　地图线路导航的开发　315
7.14.1　导航中的线路绘制　315
7.14.2　和自己当前位置实现线路导航　315
7.15　地图汽车导航的开发　317
7.15.1　导航方向的开发　318
7.15.2　绘制导航图标——汽车　319
7.15.3　动态汽车行驶导航的实现　319
7.16　本章小结　322
第8章　Web端和移动客户端开发——酒店预订系统　323
8.1　系统背景及功能概述　323
8.1.1　背景简介　323
8.1.2　功能概述　323
8.1.3　开发环境和目标平台　325
8.2　开发前的准备工作　325
8.2.1　数据库设计　325
8.2.2　数据库表设计　326
8.2.3　表的创建和测试数据的插入　330
8.2.4　数据源的配置　331
8.2.5　服务器端的部署　332
8.3　系统功能预览及总体架构　333
8.3.1　服务器端预览　333
8.3.2　客户端功能预览　334
8.3.3　系统服务器端总框架　337
8.3.4　系统Android端目录结构　338
8.4　Web端的实现　339
8.4.1　管理员登录功能的开发　339
8.4.2　分组管理功能的开发　340
8.4.3　资源管理功能的开发　342
8.4.4　订单管理功能的开发　345
8.5　Android端的准备工作　347
8.5.1　图片资源的准备　347
8.5.2　xml资源文件的准备　348
8.6　客户端登录注册模块的实现　349
8.6.1　欢迎界面的开发　350
8.6.2　用户登录功能的开发　351
8.6.3　用户注册功能的开发　354
8.6.4　显示及修改用户信息功能的开发　357
8.6.5　用户注销功能的开发　363
8.7　客户端显示资源模块的实现　363
8.7.1　主界面布局的设计　363
8.7.2　主界面功能的开发　366
8.7.3　显示全部资源信息功能的开发　368
8.7.4　分组资源信息界面的设计开发　371
8.7.5　显示分组资源信息功能的开发　373
8.8　客户端订单模块的实现　379
8.8.1　订单列表功能的开发　380
8.8.2　订单明细功能的开发　383
8.8.3　订单删除功能的开发　386
8.9　本章小结　388
第9章　单机项目移动开发——百纳理财专家　389
9.1　系统背景及功能概述　389
9.1.1　背景简介　389
9.1.2　功能概述　390
9.1.3　开发环境和目标平台　390
9.2　开发前的准备工作　391
9.2.1　数据库设计　391
9.2.2　数据库操作类　394
9.3　系统功能预览　396
9.4　欢迎界面的设计　399
9.5　主界面的实现　401
9.6　辅助类的开发　403
9.6.1　日期工具类　403
9.6.2　数据转换类　405
9.6.3　广告插件类　405
9.7　主控制类框架及数据库部分方法的开发　406
9.7.1　主控制类的整体框架　406
9.7.2　数据库操纵方法的实现　408
9.8　主控制类部分方法实现　415
9.8.1　类别维护　416
9.8.2　日常收入　421
9.8.3　创建对话框方法的实现　423
9.8.4　日常支出　426
9.8.5　收入、支出统计　428
9.8.6　计算器　429
9.8.7　收入查询　431
9.8.8　支出查询　432
9.8.9　收入、支出数据显示界面　438
9.8.10　收入、支出详细数据界面　439
9.8.11　个人信息　441
9.9　知识点汇总　444
9.10　本章小结　444
第10章　3D游戏开发——国际象棋网络对战　445
10.1　游戏的背景及功能概述　445
10.1.1　背景概述　445
10.1.2　功能介绍　446
10.2　游戏的策划及准备工作　448
10.2.1　游戏的策划　449
10.2.2　Android平台下游戏的准备工作　449
10.3　游戏的架构　451
10.3.1　各个类简要介绍　451
10.3.2　游戏框架简介　452
10.4　公共类GJXQActivity　454
10.5　辅助界面相关类　460
10.5.1　欢迎界面WelcomeView类的介绍　460
10.5.2　菜单界面MenuView的介绍　462
10.6　游戏界面相关类　466
10.6.1　游戏界面绘制类MySurfaceView　466
10.6.2　颜色方格类ColorRect　478
10.6.3　纹理梯形类FoundationSquar　479
10.6.4　棋盘绘制类ChessboardForDraw　481
10.6.5　底座绘制类ChessFoundation　482
10.6.6　指示黑白方标志牌类TriangleS　483
10.6.7　指示下棋方标志牌类TriangleX　484
10.6.8　棋子模型类LoadedObjectVertexNormalTexture　485
10.6.9　棋子类ChessForControl　486
10.6.10　常量类Constant　487
10.7　国际象棋规则类　489
10.8　客户端代理线程类　495
10.8.1　服务器和客户端协议图　495
10.8.2　客户端代理线程类　496
10.9　服务器相关类　500
10.9.1　服务器主线程类　500
10.9.2　服务器代理线程类　502
10.10　本章小结　503
第11章　传感器和3D游戏开发——迷宫重力球游戏　505
11.1　游戏的背景及功能概述　505
11.1.1　背景概述　505
11.1.2　功能介绍　505
11.2　游戏的策划及准备工作　507
11.2.1　游戏的策划　507
11.2.2　Android平台下游戏开发的准备工作　508
11.3　游戏的架构　510
11.3.1　各个类简要介绍　510
11.3.2　游戏框架简介　512
11.4　公共类MapMasetActivity　512
11.5　辅助界面相关类　524
11.5.1　欢迎界面WelcomeView类的介绍　524
11.5.2　排行榜界面GameView的介绍　526
11.6　游戏界面相关类　531
11.6.1　游戏界面绘制类GameSurfaceView　531
11.6.2　迷宫地板类Floor　540
11.6.3　迷宫墙壁类Wall　542
11.6.4　金属球类BallTextureByVertex　552
11.6.5　纹理矩形类RectWall　557
11.6.6　绘制时间数字类TextureRect　558
11.6.7　时间标志牌类Number　559
11.6.8　数据库操作类SQLiteUtil　560
11.6.9　游戏引擎BallGDThread类　562
11.6.10　常量类Constant　575
11.7　迷宫地图设计器　576
11.7.1　设计器主界面类MapDesigner　577
11.7.2　输入行列对话框类MapColRowDialog　578
11.7.3　绘制表格面板类MapDesignPanel　579
11.7.4　生成代码框架类CodeFrame　583
11.8　本章小结　583
第12章　电子阅读器——酷读阅读器　584
12.1　酷读阅读器的背景及功能概述　584
12.1.1　背景概述　584
12.1.2　功能概述　584
12.1.3　开发环境和目标平台　584
12.2　软件预览及功能结构　585
12.2.1　软件预览　585
12.2.2　功能结构　588
12.3　开发前的准备工作　589
12.3.1　图片资源的准备　589
12.3.2　数据库设计　589
12.3.3　数据库表设计　590
12.3.4　服务器的架设　592
12.4　欢迎界面的实现　593
12.5　主控制类的实现　596
12.5.1　主控制类的整体框架　596
12.5.2　主控制类中相关方法的实现　598
12.6　工具类的开发　603
12.6.1　常量类的开发　603
12.6.2　加载文本的工具类的开发　605
12.7　绘制读书界面——ReaderView类的实现　607
12.7.1　阅读界面类的代码框架　607
12.7.2　阅读界面类的各成员变量的实现　608
12.8　找书功能的实现　615
12.8.1　在SDCARD中找书　616
12.8.2　在网络中找书　621
12.9　数据库——工具类的实现　624
12.9.1　数据库工具类的代码框架　624
12.9.2　数据库工具类各成员方法的具体实现　625
12.10　书签功能模块的实现　628
12.10.1　添加书签功能的实现　629
12.10.2　选择书签功能的实现　633
12.10.3　其他功能的实现　636
12.11　线程控制类的实现　638
12.11.1　广告线程类的实现　638
12.11.2　翻页线程类的实现　638
12.12　设置字体大小功能实现　640
12.12.1　字体大小对话框　640
12.12.2　字体大小变化后书签和HashMap的更新　641
12.12.3　书签和HashMap中的数据更新　645
12.13　更换背景图片以及设置字体颜色　646
12.13.1　自定义对话框配置文件的设置　647
12.13.2　更换背景图片功能的实现　647
12.13.3　设置字体颜色功能的实现　648
12.14　音乐播放功能的实现　650
12.14.1　创建对话框　650
12.14.2　音乐播放功能的实现　651
12.15　本章小结　652
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android应用案例开发大全
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>C#开发Android应用实战
目    录

第1章  Android、移动设备和
Marketplace简介	1
1.1  产品比较	1
1.1.1  .NET Framework	2
1.1.2  Mono	3
1.1.3  Mono for Android	4
1.1.4  开发工具	6
1.2  移动开发	6
1.2.1  解决支持问题	7
1.2.2  设计问题	7
1.3  Android	8
1.3.1  Android发展简史	8
1.3.2  为Android编写基于Web的
应用程序	9
1.3.3  为Android编写本机
应用程序	9
1.3.4  Android开发问题	9
1.3.5  Android SDK工具	11
1.3.6  Android开发成本	11
1.4  跨平台替代方案	12
1.4.1  其他跨平台工具	12
1.4.2  选择跨平台工具时的
注意事项	12
1.5  小结	15
第2章  Mono for Android简介	17
2.1  开始开发前的准备工作	17
2.1.1  Mono的含义	17
2.1.2  Mono for Android的含义	18
2.1.3  使用Mono for Android的
原因	18
2.1.4  在使用Mono for Android
时需要权衡的事项	20
2.1.5  Mono for Android开发
环境需要的其他工具	21
2.2  利用Mono for Android进行
Visual Studio开发	24
2.2.1  一般设置	24
2.2.2  生成Hello Android	25
2.2.3  日志记录	28
2.2.4  调试	29
2.2.5  测试	29
2.2.6  部署	30
2.3  使用MonoDevelop进行Mono
for Android开发	30
2.3.1  一般设置	30
2.3.2  构建Hello Android	31
2.3.3  日志记录	32
2.3.4  调试	33
2.3.5  测试	33
2.3.6  部署	33
2.4  小结	34
第3章  了解Android/Mono for Android
应用程序	35
3.1  Android应用程序的含义	36
3.1.1  Android应用程序的
构建基块	37
3.1.2  组件之间的通信：Android
意图	46
3.2  绑定组件：Android清单	48
3.2.1  Android清单的基础知识	48
3.2.2  通过Visual Studio为Mono for
Android编辑清单	51
3.3  小结	53
第4章  规划和构建应用程序
用户界面	55
4.1  成功构建移动UI的
指导原则	55
4.2  构建Android UI	56
4.2.1  视图	56
4.2.2  设计表面	57
4.3  选择控件布局	57
4.3.1  AbsoluteLayout	58
4.3.2  FrameLayout	59
4.3.3  LinearLayout	59
4.3.4  RelativeLayout	61
4.3.5  TableLayout	62
4.3.6  优化布局	64
4.4  设计自己的用户界面控件	64
4.4.1  TextView	66
4.4.2  EditText	66
4.4.3  AutoCompleteTextView	66
4.4.4  Spinner	67
4.4.5  Button	69
4.4.6  CheckBox	69
4.4.7  RadioButton和组	69
4.4.8  Clock	72
4.4.9  Picker	72
4.4.10  Image	75
4.4.11  虚拟键盘	80
4.5  控制菜单	82
4.5.1  菜单系统介绍	83
4.5.2  菜单	83
4.5.3  子菜单	85
4.5.4  上下文菜单	86
4.5.5  将菜单定义为资源	87
4.6  独立于分辨率的UI	90
4.6.1  支持各种屏幕资源	90
4.6.2  使用Android Market支持	92
4.6.3  多个屏幕分辨率的
最佳做法	92
4.7  构建用户界面：手机和
平板电脑示例	93
4.8  小结	98
第5章  使用数据	99
5.1  使用SQLite	99
5.1.1  建立数据库	100
5.1.2  建立表	101
5.1.3  使用SQL语句	102
5.2  升级策略	104
5.2.1  就地升级	104
5.2.2  复制数据	105
5.3  特定于Android的
数据库选项	105
5.4  使用远程数据	107
5.4.1  访问企业服务	108
5.4.2  使用SOAP	109
5.4.3  使用基于REST的Web
服务	113
5.4.4  使用JSON	114
5.4.5  利用POST发送数据	118
5.5  使用LINQ和XML检索
数据	119
5.6  以负责任的态度使用Web
服务	121
5.7  使用远程SQL Server数据库	122
5.8  小结	124
第6章  将数据绑定到控件	125
6.1  Mono for Android中的
数据绑定	126
6.1.1  数据适配器的含义	126
6.1.2  适配器视图的含义	127
6.1.3  这三项彼此之间的
关联方式	127
6.1.4  使用适配器视图和大型
数据集	128
6.1.5  进一步探究适配器	130
6.1.6  使用本机适配器	130
6.1.7  进一步探究适配器视图	131
6.1.8  使用本机适配器视图	132
6.2  使用光标	132
6.2.1  使用光标填充Spinner	132
6.2.2  使用带有Gallery的光标	140
6.3  使用列表	147
6.3.1  在列表中显示简单数据	148
6.3.2  使用Android的
ListAdapter	150
6.3.3  使用自定义列表适配器来
自定义ListView	152
6.3.4  处理ListView事件	158
6.3.5  首选项屏幕	160
6.3.6  嵌套导航	163
6.3.7  分组列表	165
6.3.8  在网格中显示数据	169
6.4  小结	174
第7章  使用文件系统和应用程序
首选项	175
7.1  使用文件系统	175
7.1.1  文件系统类型和结构	176
7.1.2  QuickEdit示例程序：
使用文件存储的例子	180
7.2  使用应用程序首选项	186
7.2.1  应用程序首选项类型	186
7.2.2  创建自己的应用程序
首选项	187
7.2.3  首选项程序	188
7.2.4  侦听首选项的更改	194
7.2.5  处理XML	195
7.3  小结	196
第8章  针对设备硬件编程	197
8.1  使用传感器	197
8.1.1  引用传感器管理器	198
8.1.2  传感器支持	198
8.1.3  访问传感器	198
8.1.4  使用传感器	199
8.1.5  了解传感器类型值	200
8.2  对加速度的响应	202
8.2.1  使用XYZ坐标系	202
8.2.2  对加速计进行编码	203
8.3  构建电子罗盘	203
8.4  振动	208
8.5  网络连接	209
8.5.1  ConnectivityManager	209
8.5.2  检查用户通信首选项	209
8.5.3  检查BackgroundDataSetting
的更改	210
8.5.4  检查当前网络配置	211
8.5.5  创建网络连接通知	211
8.5.6  WifiManager	211
8.6  Bluetooth管理器	216
8.7  在应用程序中启用
语音识别功能	218
8.8  获取建议路线规划指示	219
8.9  小结	225
第9章  使用多媒体——音频、
视频和照相机	227
9.1  Android媒体类	227
9.2  播放音频和视频	229
9.2.1  媒体播放器支持的格式	229
9.2.2  音频播放编程	230
9.2.3  视频播放编程	233
9.2.4  控制播放	237
9.2.5  管理播放输出	237
9.3  录制音频和视频	237
9.3.1  使用意图来录制视频	238
9.3.2  使用媒体记录器	241
9.4  图像和使用照相机	244
9.4.1  使用意图拍照	244
9.4.2  控制照相机	247
9.4.3  管理照相机设置和
图片选项	247
9.5  向媒体存储器添加新媒体	253
9.5.1  使用媒体扫描程序	254
9.5.2  向存储器添加新媒体	255
9.6  语音识别	255
9.7  小结	257
第10章  与其他应用程序和库通信	259
10.1  Android应用程序集成	259
10.1.1  打开浏览器	259
10.1.2  打开电子邮件	262
10.1.3  打电话	263
10.1.4  发送Text/SMS消息	264
10.1.5  在Maps应用程序中
打开位置	266
10.1.6  打开YouTube视频	267
10.1.7  开放市场	267
10.2  应用程序集成	268
10.2.1  与HootSuite以及其他
Twitter应用程序的简单
集成	268
10.2.2  配置意图过滤器	269
10.2.3  处理传入的意图请求	270
10.3  与联系人进行集成	270
10.3.1  显示联系人详细信息	273
10.3.2  选择联系人	274
10.3.3  创建新联系人	275
10.3.4  创建新联系人或者添加到
现有的联系人	276
10.4  小结	277
第11章  开发后台服务和异步代码	279
11.1  服务生命周期	280
11.1.1  创建第一个服务	280
11.1.2  服务的优先级排序	283
11.2  使用线程进行异步处理	284
11.2.1  手动线程	284
11.2.2  利用System.Threading.
Tasks	286
11.2.3  带有IntentService的隐式
线程	288
11.3  与UI进行通信	289
11.3.1  使用Binder和服务
连接方法	289
11.3.2  使用广播接收器方法	292
11.3.3  使用静态事件方法	295
11.4  通知用户	298
11.4.1  通过警报和IntentService
来调度意图	300
11.4.2  使用C2DM来推送消息	301
11.5  小结	310
第12章  画布和绘制资源类型：构建
自定义Android图形	311
12.1  在Mono for Android中
使用图形	312
12.2  使用Canvas对象	313
12.2.1  图形基元	314
12.2.2  Canvas对象	315
12.2.3  Paint对象	316
12.2.4  Bitmap对象	317
12.2.5  组合在一起	317
12.2.6  选择最佳方法	337
12.3  2D图形库	338
12.4  使用绘制资源类型	339
12.4.1  作为XML资源的绘制
资源类型	339
12.4.2  简单和复合的绘制
资源类型	340
12.4.3  绘制资源类型的
实际应用	340
12.5  小结	354
第13章  使用位置信息	357
13.1  理解位置的基本知识	358
13.1.1  确定位置	358
13.1.2  基于位置的数据中断	359
13.1.3  使用基于位置的服务	359
13.1.4  在模拟器上配置基于
位置的应用程序	359
13.2  选择一个位置提供程序	361
13.2.1  确定哪些提供程序可供
使用	361
13.2.2  根据标准查找位置
提供程序	361
13.3  地理编码	363
13.3.1  前向地理编码	363
13.3.2  反向地图编码	365
13.4  构建接近警报	366
13.5  使用Google Maps	368
13.5.1  获取开发/调试MD5
指纹	369
13.5.2  获取生产/发布MD5
指纹	369
13.5.3  创建基于地图的活动	369
13.5.4  在布局文件中创建地图	371
13.5.5  使用覆盖的MapView
控制器	372
13.6  小结	374
第14章  国际化和本地化	375
14.1  选择本地化策略	376
14.2  更新语言和区域设置	378
14.3  了解Android本地化机制	379
14.3.1  设置默认资源	380
14.3.2  添加本地化支持	380
14.3.3  选择资源的详细过程	381
14.4  支持多语言	382
14.4.1  利用Strings.xml文件	382
14.4.2  翻译文本	383
14.4.3  翻译控件文本	386
14.5  本地化其他资源	387
14.6  Strings.xml的高级用法	391
14.6.1  字符串数组	391
14.6.2  复数	391
14.6.3  字符串替换	392
14.7  使用格式转换	394
14.7.1  格式化日期	395
14.7.2  格式化数字和货币	395
14.8  小结	396
第15章  在Mono for Android、
MonoTouch和Windows
Phone7之间共享代码	397
15.1  三大平台概述	397
15.1.1  Mono for Android	397
15.1.2  MonoTouch	398
15.1.3  Windows Phone 7	399
15.2  使用类库来分离代码	400
15.2.1  使用预处理器指令	400
15.2.2  Mono for Android	401
15.2.3  Windows Phone 7	402
15.2.4  MonoTouch	402
15.3  每种平台上可用的程序集	402
15.4  一个通用的类库	405
15.4.1  Mono for Android	407
15.4.2  MonoTouch	408
15.4.3  Windows Phone 7	409
15.5  汇总：创建一个跨平台
应用程序	410
15.6  小结	422
第16章  准备并向Market
发布应用程序	423
16.1  准备应用程序	424
16.1.1  测试应用程序	424
16.1.2  找到关键的测试区域	425
16.1.3  用于测试的工具	426
16.1.4  与同事和用户一起
进行测试	433
16.2  向Android Market发布
应用程序	434
16.2.1  对应用程序进行
版本控制	434
16.2.2  创建最终版本	435
16.2.3  为应用程序签名	437
16.2.4  上传到Android Market	441
16.3  小结	442
第17章  Android平板电脑	445
17.1  分析Android平板
电脑市场	445
17.2  设计平板电脑UI	446
17.3  使用操作栏	447
17.3.1  删除操作栏	448
17.3.2  向操作栏添加项目	449
17.3.3  使用应用程序图标	452
17.3.4  向堆栈上方导航	453
17.3.5  添加并使用操作项	453
17.3.6  创建选项卡式界面	454
17.4  使用片段控制部分屏幕	455
17.4.1  创建片段	457
17.4.2  更多片段	461
17.5  小结	469
附录A  针对开发人员的一些提示
以及Mono for Android的
未来前景	471
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>C#开发Android应用实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android UI设计
前言
第1章　Android开发基础
1.1　Eclipse中的Android开发
1.1.1　创建项目
1.1.2　创建AVD
1.1.3　运行项目
1.2　Android项目架构
1.2.1　Java代码解析
1.2.2　项目资源解析
1.2.3　AndroidManifest.xml解析
1.3　Eclipse中的常用窗口
1.3.1　Console窗口
1.3.2　LogCat窗口
1.3.3　DDMS窗口
1.4　移动App的设计原则
1.5　移动App的设计风格
1.5.1　扁平化设计
1.5.2　卡片式设计
第2章　ADT中的UI设计
2.1　图形布局编辑器
2.2　几种常见的布局方式
2.2.1　创建布局
2.2.2　相对布局
2.2.3　线性布局
2.2.4　帧布局
2.3　优化布局
2.3.1　复用布局
2.3.2　多设备支持
2.3.3　使用Hierachy Viewer调试用户界面
2.4　界面布局技巧
2.4.1　布局设计原则
2.4.2　布局设计技巧
2.5　习题
第3章　Activity与UI管理
3.1　Activity基础
3.1.1　创建Activity
3.1.2　Activity的生命周期
3.1.3　退出Activity
3.2　Activity之间的调用
3.2.1　调用其他Activity
3.2.2　Activity的回调
3.3　Activity之间的数据传递
3.3.1　使用Intent传递数据
3.3.2　使用Bundle传递数据
3.3.3　使用Application共享数据
3.4　Activity栈与任务
3.4.1　Activity栈
3.4.2　任务管理
3.4.3　Activity的加载模式
3.4.4　保存Activity的状态
3.5　应用主页设计技巧
3.6　用户体验设计
3.7　习题
第4章　Android组件编程
4.1　Service与后台服务
4.1.1　创建Service
4.1.2　Service的生命周期
4.1.3　Started Service
4.1.4　Bound Service
4.2　ContentProvider与数据共享
4.2.1　系统中的ContentProvider
4.2.2　通用资源标志符
4.2.3　使用ContentProvider
4.3　BroadcastReceiver与广播意图
4.3.1　BroadcastReceiver的工作机制
4.3.2　广播的类型
4.3.3　接收广播
4.3.4　注册广播
4.4　Intent与组件通信
4.4.1　Intent处理机制
4.4.2　Intent对象
4.4.3　Intent的解析
4.5　基于组件的应用模型
4.6　习题
第5章　Widgets设计与事件处理
5.1　表单控件设计
5.1.1　文本控件
5.1.2　按钮控件
5.1.3　单选/复选按钮控件
5.1.4　进度条控件
5.2　适配器控件设计
5.2.1　适配器概述
5.2.2　Gallery
5.2.3　Spinner
5.2.4　ListView
5.2.5　GridView
5.2.6　适配器控件的大数据加载
5.3　Widgets事件处理
5.3.1　按键事件处理
5.3.2　触屏事件处理
5.3.3　手势事件处理
5.3.4　感应器事件处理
5.4　Widgets设计技巧
5.4.1　官方设计指引
5.4.2　表单控件设计技巧
5.4.3　数据加载模式设计
5.4.4　搜索设计技巧
5.5　习题
第6章　对话框、菜单与导航
6.1　对话框设计
6.1.1　Toast通知
6.1.2　Notif?ication提示
6.1.3　AlertDialog对话框
6.1.4　对话框的托管
6.2　菜单设计
6.2.1　Options Menu
6.2.2　Context Menu
6.3　动作栏与导航设计
6.3.1　动作栏设计
6.3.2　ActionMode设计
6.3.3　导航设计
6.3.4　导航设计技巧
6.4　用户通知设计技巧
6.4.1　Android中的消息提示
6.4.2　通知设计策略
6.4.3　通知设计原则
6.4.4　通知的导航机制
6.4.5　声音提醒
6.5　习题
第7章　容器UI设计
7.1　导航类容器设计
7.1.1　使用ViewPager设计导航页
7.1.2　使用ViewFlipper设计滑屏窗口
7.1.3　使用TabHost设计标签页
7.2　特定容器设计
7.2.1　使用WebView显示网页
7.2.2　使用MapView显示地图
7.2.3　使用VideoView播放视频
7.3　第三方容器控件设计
7.3.1　使用SlidingMenu设计菜单容器
7.3.2　使用TimesSquare设计日期
7.4　引导页设计技巧
7.5　习题
第8章　自定义控件设计
8.1　概述
8.2　定制控件
8.3　重载控件
8.3.1　重构AdapterView
8.3.2　应用控件
8.4　绘制UI
8.5　开源UI工具
8.6　习题
第9章　样式、主题与动画设计
9.1　样式与主题
9.1.1　Style
9.1.2　Theme
9.2　动画设计
9.2.1　帧动画
9.2.2　补间动画
9.2.3　属性动画
9.3　应用风格设计
9.4　动态效果设计
9.4.1　动态设计原则
9.4.2　动态设计技巧
9.5　习题
第10章　桌面UI设计
10.1　设计简单的桌面组件
10.1.1　RemoteViews
10.1.2　AppWidgetProviderInfo
10.1.3　AppWidgetProvider
10.1.4　声明App Widgets
10.2　配置和管理桌面组件
10.2.1　Confi?guration Activity
10.2.2　AppWidgetManager
10.3　设计集合桌面组件
10.3.1　Collection Views
10.3.2　RemoteViewsService
10.3.3　RemoteViewsFactory
10.3.4　子视图事件
10.4　桌面组件设计规范
10.4.1　桌面组件的种类
10.4.2　桌面组件的尺寸
10.4.3　桌面组件设计技巧
10.5　习题
第11章　平板UI设计
11.1　Fragment概述
11.1.1　Fragment布局特性
11.1.2　Fragment与Activity
11.2　创建Fragment
11.2.1　创建ListFragment
11.2.2　创建Fragment
11.2.3　添加Fragment到Activity
11.2.4　使用Support Library
11.3　管理Fragment
11.3.1　Fragment的生命周期
11.3.2　使用FragmentManager处理事务
11.3.3　Fragment之间的通信
11.4　PreferenceFragment
11.5　平板UI设计技巧
11.5.1　Google的准则
11.5.2　横竖屏布局设计
11.5.3　常见平板布局
11.6　习题
第12章　Android UI综合应用
12.1　项目概述
12.2　用户界面设计
12.2.1　结构设计
12.2.2　交互设计
12.2.3　视觉设计
12.3　用户界面功能实现
12.3.1　主界面设计
12.3.2　歌曲列表界面设计
12.3.3　系统设置界面设计
12.3.4　桌面应用组件设计
12.4　UI测试
参考文献
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android UI设计
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>大话企业级Android应用开发实战
第1话  大话Android  1  智能手机与3G  2  智能手机平台  3  智能手机与手机厂商  4  Android详解  5  Android的盈利方式  6  Android学习之道第2话  Android开发之道第3话  Android之UI（用户界面）开发第4话  “机器人”的核心组件第5话  数据，数据第6话  Android与网络第7话  Android之娱乐多媒体开发第8话  Android之硬件操作第9话  Android之GPS开发第10话  Android之图形图像处理第11话  Android之优化之道第12话  Android之项目开发附录A
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>大话企业级Android应用开发实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入Android应用开发
前言
第1章　深入解析Android核心组件和应用框架 / 1
1.1　核心组件详解 / 1
1.1.1　Activity组件 / 1
1.1.2　Service组件 / 19
1.1.3　Intent组件 / 25
1.1.4　BroadcastReceiver组件 / 31
1.2　应用框架解析 / 31
1.2.1　Service框架 / 32
1.2.2　Activity管理机制 / 38
1.2.3　Broadcast机制 / 41
1.2.4　对话框框架 / 42
1.2.5　标题栏框架 / 46
1.2.6　状态栏框架 / 48
1.2.7　通知机制 / 52
1.2.8　搜索框架 / 56
1.2.9　ActionBar框架 / 59
第2章　Android 资源框架详解/ 64
2.1　布局文件 / 64
2.2　值文件 / 67
2.3　创建菜单 / 75
2.3.1　选项菜单 / 75
2.3.2　上下文菜单 / 77
2.3.3　子菜单 / 79
2.3.4　弹出菜单 / 80
2.4　断言的处理 / 81
2.5　Jar包和共享库 / 83
2.6　系统资源 / 84
第3章　Android UI控件精要 / 89
3.1　布局控件 / 89
3.1.1　 LinearLayout / 89
3.1.2　RelativeLayout / 92
3.1.3　TableLayout / 93
3.1.4　FrameLayout / 94
3.2　显示控件 / 97
3.2.1　TextView / 97
3.2.2　ProgressBar / 99
3.2.3　WebView / 100
3.2.4　ViewSwitcher / 101
3.2.5　TextSwitcher / 102
3.2.6　ViewFlipper / 103
3.2.7　SeekBar / 104
3.2.8　ViewStub / 106
3.3　容器控件 / 106
3.3.1　SlidingDrawer / 106
3.3.2　ListView / 107
3.3.3　ExpandableListView / 111
3.3.4　GridView / 112
3.3.5　ScrollView / 113
3.3.6　TabHost / 114
3.4　输入控件 / 114
3.4.1　EditText / 114
3.4.2　Spinner / 116
3.4.3　AutoCompleteTextView / 117
3.5　控制控件 / 118
3.5.1　Button / 118
3.5.2　CheckBox / 119
3.5.3　RadioButton / 119
3.5.4　RatingBar / 120
3.5.5　ZoomControls / 121
3.6　多媒体控件 / 122
3.6.1　ImageView / 122
3.6.2　ImageSwitcher / 122
3.7　特殊控件 / 125
3.8　桌面部件 / 126
3.8.1　App Widgets的实现 / 126
3.8.2　Live folders的实现 / 128
3.9　自定义控件 / 129
3.10　数据适配 / 130
3.10.1　视图适配 / 130
3.10.2　标准化解析 / 133
3.11　Fragment / 135
3.11.1　Fragment 生命周期 / 135
3.11.2　ListFragment / 137
3.11.3　DialogFragment / 137
3.11.4　PreferenceFragment / 138
3.11.5　WebViewFragment / 138
第4章　深入解析Android数据存储与管理 / 139
4.1　XML文件管理 / 139
4.2　内部文件管理 / 140
4.2.1　写入数据 / 141
4.2.2　读取数据 / 141
4.3　外部文件管理 / 142
4.4　数据库管理 / 143
4.4.1　Android封装接口 / 144
4.4.2　原生方法处理 / 145
4.5　数据处理 / 145
4.5.1　Set类 / 146
4.5.2　Map类 / 148
4.5.3　list类 / 150
4.5.4　流类 / 150
4.5.5　正则表达式 / 153
4.5.6　I/O管理 / 153
4.5.7　JSON实现 / 155
第5章　深入解析Android通信机制 / 159
5.1　Intent通信 / 159
5.1.1　Intent的常见用法 / 159
5.1.2　Serializable接口 / 165
5.1.3　Parcelable接口 / 165
5.2　UI事件处理 / 166
5.2.1　事件监听器、事件句柄及焦点处理 / 167
5.2.2　触控事件处理 / 168
5.2.3　按键事件处理 / 170
5.2.4　轨迹球事件处理 / 171
5.3　任务调度 / 172
第6章　深入解析Android多线程编程 / 174
6.1　Java线程实现 / 174
6.2　Android线程封装 / 177
6.3　线程间的消息通信 / 180
6.3.1　消息队列 / 181
6.3.2　消息分发 / 183
6.3.3　消息接收 / 183
6.4　线程安全处理 / 184
6.4.1　synchronized同步 / 184
6.4.2　RPC通信 / 186
6.4.3　SQLite调用 / 186
第7章　深入解析Android网络编程 / 187
7.1　无线接入技术概述 / 187
7.2　基础协议封装 / 190
7.3　Java网络编程接口 / 194
7.4　Apache网络编程接口 / 195
7.5　Android网络编程接口 / 196
7.6　Web服务实现 / 199
7.6.1　Web服务概述 / 199
7.6.2　KSOAP2的实现 / 199
7.7　XML解析器 / 200
7.7.1　Pull解析器 / 201
7.7.2　DOM解析器 / 202
7.7.3　SAX解析器 / 203
7.8　套接字编程 / 203
7.9　Web应用实现 / 205
7.10　SIP服务 / 212
7.11　NFC通信 / 214
7.12　RIL层处理 / 216
7.13　报文分析 / 220
第8章　Android图形、图像与动画精要 / 222
8.1　2D图像处理 / 222
8.1.1　基本接口 / 222
8.1.2　缩略图 / 228
8.1.3　图像浏览 / 228
8.1.4　人脸检测 / 230
8.2　3D图像处理 / 233
8.2.1　OpenGL ES的实现 / 233
8.2.2　RenderScript的实现 / 236
8.3　图形处理 / 239
8.3.1　基本接口 / 239
8.3.2　Surface渲染系统 / 244
8.4　动画处理 / 247
8.4.1　补间动画 / 248
8.4.2　帧动画 / 249
8.4.3　属性动画 / 250
第9章　深入解析Android多媒体编程 / 257
9.1　音频处理 / 257
9.1.1　音频播放 / 258
9.1.2　音频录制 / 264
9.1.3　音频管理 / 265
9.1.4　音效处理 / 267
9.2　视频处理 / 269
9.2.1　视频播放 / 270
9.2.2　视频录制 / 273
9.3　Camera服务 / 274
9.4　TTS的实现 / 276
第10章　Android跨语言调用详解 / 279
10.1　C语言与汇编语言的相互调用 / 279
10.2　C++与C语言的相互调用 / 280
10.3　Java对C/C++的调用 / 282
10.4　C/C++对Java的调用 / 287
第11章　Android安全框架解析 / 292
11.1　Java混淆器 / 293
11.2　接入权限 / 294
11.2.1　创建接入权限 / 294
11.2.2　应用权限 / 294
11.2.3　权限验证 / 296
11.2.4　接入服务 / 297
11.2.5　框架层接入限制 / 298
11.3　数字证书 / 298
第12章　Android的调试、测试与性能优化 / 300
12.1　Android调试 / 300
12.1.1　Logcat日志调试 / 300
12.1.2　dmtracedump跟踪 / 300
12.1.3　Dev Tools调试 / 301
12.1.4　屏幕截图分析 / 301
12.1.5　内存调试 / 302
12.2　Android布局优化 / 305
12.2.1　Layoutopt优化 / 305
12.2.2　Hierarchyviewer优化 / 306
12.3　Android测试 / 307
12.3.1　Monkey压力测试 / 307
12.3.2　JUnit回归测试 / 308
12.3.3　CTS兼容性测试 / 312
12.3.4　目标环境测试 / 313
12.4　Android性能优化 / 314
12.4.1　优化资源读取 / 314
12.4.2　优化APK加载 / 315
12.4.3　Dalvik虚拟机 / 315
12.4.4　TraceView性能分析 / 315
12.4.5　运行效率的优化 / 317
第13章　深入解析Android编译系统 / 318
13.1　源代码编译 / 318
13.1.1　映像文件 / 318
13.1.2　编译方法 / 319
13.1.3　主要脚本 / 322
13.1.4　环境变量 / 332
13.1.5　目标环境 / 333
13.2　SDK编译 / 333
13.2.1　Linux下的SDK编译 / 334
13.2.2　Windows下的SDK编译 / 334
13.2.3　ADT插件的编译 / 334
13.3　NDK编译 / 335
13.3.1　编译脚本 / 336
13.3.2　配置脚本 / 337
13.3.3　GDB调试 / 340
13.3.4　NativeActivity实现 / 340
13.4　应用程序编译 / 342
13.4.1　本地环境变量 / 342
13.4.2　在Eclipse下编译 / 343
13.5　目标系统配置 / 343
13.5.1　自定义模拟器配置 / 343
13.5.2　目标板配置 / 348
13.5.3　目标环境配置 / 350
13.6　文件系统配置 / 350
13.7　编译工具	 / 350
13.8　fastboot模式  / 352
第14章　Android启动过程详解 / 353
14.1　系统的启动过程 / 353
14.1.1　系统属性配置 / 354
14.1.2　文件系统挂载 / 355
14.1.3　守护进程启动 / 356
14.2　应用的启动过程 / 362
14.2.1　应用的启动配置 / 362
14.2.2　应用的启动过程 / 364
第15章　深入解析Android系统管理 / 369
15.1　内存管理 / 369
15.1.1　对象引用 / 369
15.1.2　垃圾回收策略 / 370
15.2　应用管理 / 373
15.2.1　应用的配置 / 373
15.2.2　应用的启动 / 374
15.2.3　应用的销毁 / 375
15.3　电源管理 / 376
15.3.1　电源管理框架 / 376
15.3.2　应用层策略 / 379
15.4　下载管理 / 380
15.4.1　Gingerbread前的下载 / 380
15.4.2　Gingerbread后的下载 / 382
15.5　系统配置 / 383
15.5.1　系统数据库 / 383
15.5.2　系统属性 / 385
15.6　数据管理 / 386
15.6.1　数据备份 / 386
15.6.2　剪切板管理 / 387
15.7　设备管理 / 388
15.7.1　管理工具 / 388
15.7.2　传感器管理 / 395
15.7.3　USB管理 / 398
15.8　应用发布 / 399
15.8.1　应用商店概述 / 399
15.8.2　目标环境的适配 / 401
15.8.3　发布应用 / 410
附录A　Android开发环境搭建 / 413
附录B　常用Linux命令 / 436
附录C　编码规范 / 441
附录D　学习资源 / 447
参考文献 / 451
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入Android应用开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>AIR Android应用开发实战
前言
第一篇　准备篇
第1章　AIR Android开发简介 / 2
1.1　开发之前需要了解的信息 / 2
1.1.1　AIR Android开发的可行性 / 2
1.1.2　开发过程中常见的问题 / 4
1.1.3　优势和局限性 / 6
1.2　搭建开发环境 / 7
1.2.1　安装Android SDK / 7
1.2.2　使用Flash Professional CS5 / 9
1.2.3　使用Flash Builder 4.5 / 13
1.2.4　构建开源的开发环境 / 16
1.3　实战：一个简单的AIR项目 / 17
1.4　本章小结 / 20
第2章　第一个AIR Android程序：翻转黑白棋 / 21
2.1　游戏的设计思路 / 21
2.2　像往常一样编写ActionScript代码 / 23
2.2.1　创建棋子类Grid / 23
2.2.2　编写主类Main / 24
2.3　设置程序属性 / 31
2.3.1　了解应用程序描述文件 / 31
2.3.3　设置访问权限 / 32
2.4　打包APK文件 / 33
2.5　安装和运行程序 / 34
2.5.1　使用模拟器运行程序 / 34
2.5.2　在真机上运行程序 / 39
2.6　本章小结 / 40
第二篇　基础篇
第3章　处理用户交互 / 42
3.1　关于多点触摸 / 42
3.2　处理触摸事件 / 43
3.2.1　使用TouchEvent类 / 43
3.2.2　触摸事件与鼠标事件的区别 / 47
3.3　处理手势动作 / 48
3.3.1　放大与缩小手势 / 49
3.3.2　旋转手势 / 52
3.3.3　Swipe手势 / 53
3.4　本章小结 / 56
第4章　加速计 / 57
4.1　Accelerometer API用法 / 57
4.2　重力小球实例 / 59
4.2.1　如何模拟重力场 / 59
4.2.2　绘制小球 / 60
4.2.3　让小球总是掉到屏幕下方 / 61
4.2.4　为小球设置围墙 / 62
4.2.5　优化代码后运行程序 / 64
4.2.6　管理程序的状态 / 64
4.3　加速计实战：检测手机晃动 / 66
4.4　本章小结 / 68
第5章　地理定位 / 69
5.1　开启手机的地理定位功能 / 69
5.2　Geolocation API用法 / 70
5.3　地理定位实战：自动查询地址和天气 / 73
5.3.1　查询地址Geocoding / 74
5.3.2　查询本地天气Weather / 75
5.3.3　代码解析 / 76
5.3.4　测试运行 / 79
5.4　本章小结 / 83
第6章　整合系统程序 / 84
6.1　使用自定义URI调用系统程序 / 84
6.1.1　电话拨号tel / 84
6.1.2　发送短信sms / 88
6.1.3　发送邮件mailto / 90
6.2　使用Android系统自带的地图服务 / 92
6.3　使用StageWebView加载网页 / 95
6.4　本章小结 / 100
第7章　多媒体 / 101
7.1　使用摄像头 / 101
7.1.1　摄像头的传统用法 / 101
7.1.2　使用CameraUI类调用摄像程序 / 103
7.2　使用设备上的多媒体资源 / 108
7.2.1　使用CameraRoll类向系统相册添加照片 / 108
7.2.2　使用CameraRoll类选取照片 / 111
7.3　使用麦克风录音 / 115
7.4　播放视频 / 122
7.4.1　AIR支持的视频格式 / 122
7.4.2　播放视频实战：VideoPlayer / 123
7.5　本章小结 / 126
第8章　文件和数据库 / 127
8.1　文件系统API / 127
8.1.1　Android文件系统和程序目录结构 / 127
8.1.2　常用的文件操作 / 132
8.1.3　用异步方式操作文件 / 134
8.2　SQL数据库 / 136
8.2.1　SQLite简介 / 136
8.2.2　连接数据库 / 137
8.2.3　创建表 / 138
8.2.4　添加、查询、更新和删除 / 141
8.2.5　数据库实战：使用查询参数重用SQLStatement对象 / 146
8.3　本章小结 / 149
第9章　网络通信 / 150
9.1　网络通信知识简介 / 150
9.1.1　网络通信API / 150
9.1.2　AIR的安全机制 / 153
9.2　检测网络状态 / 154
9.3　Socket实战：开发即时聊天工具 / 157
9.3.1　Socket通信流程 / 157
9.3.2　在桌面建立服务器 / 158
9.3.3　构建简单的聊天服务器 / 160
9.3.4　制作聊天客户端 / 167
9.4　强大的P2P功能 / 173
9.4.1　P2P通信模型 / 173
9.4.2　P2P开发实战：视频直播 / 174
9.5　本章小结 / 179
第10章　调试和发布 / 180
10.1　调试程序 / 180
10.1.1　使用ADL在桌面上调试程序 / 180
10.1.2　远程连接Flash调试器 / 183
10.1.3　使用Android SDK的DDMS工具 / 186
10.2　发布程序前的准备工作 / 188
10.2.1　设置程序的基本属性 / 188
10.2.2　管理程序的版本号 / 189
10.2.3　针对Android设备的设置 / 190
10.3　发布APK文件 / 191
10.4　将程序发布到应用商店 / 192
10.4.1　发布到Google Play商店 / 192
10.4.2　发布到安卓市场 / 195
10.5　本章小结 / 196
第三篇　进阶篇
第11章　针对移动设备的程序设计 / 198
11.1　设计界面 / 198
11.1.1　自动适应不同型号的屏幕 / 198
11.1.2　友好的用户交互 / 202
11.1.3　有效的界面布局 / 204
11.2　管理程序的状态 / 207
11.2.1　监测程序状态 / 208
11.2.2　实战：自动保存播放位置 / 211
11.3　跨平台开发 / 215
11.3.1　跨平台开发时的注意事项 / 215
11.3.2　技巧：使用编译参数兼容多平台 / 217
11.4　本章小结 / 219
第12章　键盘交互 / 220
12.1　Android设备上的键盘交互 / 220
12.1.1　Android设备上的实体按键 / 220
12.1.2　监听键盘事件 / 222
12.2　实战：使用Menu键模拟Android的菜单和行为 / 224
12.2.1　创建菜单对象 / 224
12.2.2　关联按键动作 / 228
12.3　Back键的用法 / 232
12.3.1　实战：使用Back键进行页面导航 / 233
12.3.2　通过Back键自动关闭程序 / 238
12.4　本章小结 / 239
第13章　性能优化 / 240
13.1　了解ActionScript 3.0的运行机制 / 240
13.1.1　ActionScript 3.0的特点 / 240
13.1.2　关于垃圾回收机制 / 243
13.2　从编程细节处看优化 / 246
13.2.1　使用最合适的数据类型和API / 246
13.2.2　资源的回收和释放 / 249
13.2.3　实例：一段代码的优化历程 / 251
13.3　常用工具和代码库 / 253
13.3.1　使用FlexPMD优化代码 / 254
13.3.2　Flash Builder的性能调试工具Profiler / 255
13.3.3　第三方调试工具Monster Debugger / 258
13.4　优化技巧实战案例 / 260
13.4.1　运用render事件减少代码执行 / 260
13.4.2　构建对象池重用对象：动态小球实例 / 265
13.4.3　异步事件的使用：搜索SD卡 / 270
13.5　本章小结 / 274
第四篇　实战篇
第14章　迷宫游戏的准备阶段 / 276
14.1　需求分析 / 276
14.1.1　游戏规则 / 276
14.1.2　游戏功能的实现 / 277
14.2　技术要点分析 / 277
14.2.1　如何实现物理效果 / 278
14.2.2　如何生成地图 / 279
14.3　Box2D物理引擎 / 279
14.3.1　Box2D中的基本概念 / 280
14.3.2　示例程序HelloBox2D / 280
14.3.3　实现碰撞效果 / 285
14.4　迷宫地图算法 / 287
14.4.1　问题分析 / 287
14.4.2　回溯法详解 / 288
14.4.3　代码实现 / 290
14.5　本章小结 / 296
第15章　迷宫游戏的实现 / 297
15.1　制作迷宫地图 / 297
15.1.1　绘制带有物理属性的地图 / 297
15.1.2　添加随机障碍物 / 300
15.2　加入可“行走”的角色 / 302
15.2.1　创建小球 / 302
15.2.2　使用加速计控制小球的移动 / 303
15.2.3　碰撞检测 / 304
15.3　游戏状态控制 / 306
15.3.1　自动暂停和恢复 / 306
15.3.2　关卡设置 / 308
15.4　游戏代码分析 / 309
15.4.1　程序中的类 / 309
15.4.2　主程序Game类详解 / 310
15.5　本章小结 / 320
第五篇　高级篇
第16章　AIR本地扩展 / 322
16.1　ANE的特点 / 322
16.2　一个简单的本地扩展 / 323
16.2.1　搭建开发环境 / 323
16.2.2　编写本地代码 / 324
16.2.3　编写ActionScript代码 / 329
16.2.4　打包和发布 / 332
16.2.5　在程序中使用本地扩展 / 334
16.3　ANE进阶实战技术 / 337
16.3.1　Intent机制：分享信息到社交网站 / 337
16.3.2　在顶部状态栏显示系统通知 / 342
16.4　本章小结 / 347
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>AIR Android应用开发实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android应用安全防护和逆向分析
对本书的赞誉
前言
基础篇
第1章 Android中锁屏密码加密算法分析 2
1.1 锁屏密码方式 2
1.2 密码算法分析 2
1.2.1 输入密码算法分析 2
1.2.2 手势密码算法分析 7
1.3 本章小结 9
第2章 Android中NDK开发 10
2.1 搭建开发环境 10
2.1.1 Eclipse环境搭建 10
2.1.2 Android Studio环境搭建 12
2.2 第一行代码：HelloWorld 14
2.3 JNIEnv类型和jobject类型 18
2.3.1 JNIEnv类型 19
2.3.2 jobject参数obj 19
2.3.3 Java类型和native中的类型映射关系 19
2.3.4 jclass类型 19
2.3.5 native中访问Java层代码 20
2.4 JNIEnv类型中方法的使用 21
2.4.1 native中获取方法的Id 22
2.4.2 Java和C++中的多态机制 24
2.5 创建Java对象及字符串的操作方法 27
2.5.1 native中创建Java对象 27
2.5.2 native中操作Java字符串 28
2.6 C/C++中操作Java中的数组 32
2.6.1 操作基本类型数组 32
2.6.2 操作对象类型数组 33
2.7 C/C++中的引用类型和ID的缓存 36
2.7.1 引用类型 36
2.7.2 缓存方法 37
2.8 本章小结 38
第3章 Android中开发与逆向常用命令
总结 39
3.1 基础命令 39
3.2 非shell命令 40
3.3 shell命令 45
3.4 操作apk命令 49
3.5 进程命令 50
3.6 本章小结 52
第4章 so文件格式解析 53
4.1 ELF文件格式 53
4.2 解析工具 54
4.3 解析ELF文件 57
4.4 验证解析结果 60
4.5 本章小结 61
第5章 AndroidManifest.xml文件格式解析 62
5.1 格式分析 62
5.2 格式解析 63
5.2.1 解析头部信息 63
5.2.2 解析String Chunk 63
5.2.3 解析ResourceId Chunk 68
5.2.4 解析Start Namespace Chunk 70
5.2.5 解析Start Tag Chunk 72
5.3 本章小结 82
第6章 resource.arsc文件格式解析 83
6.1 Android中资源文件id格式 83
6.2 数据结构定义 85
6.2.1 头部信息 85
6.2.2 资源索引表的头部信息 85
6.2.3 资源项的值字符串资源池 86
6.2.4 Package数据块 87
6.2.5 类型规范数据块 88
6.2.6 资源类型项数据块 89
6.3 解析代码 93
6.3.1 解析头部信息 93
6.3.2 解析资源字符串内容 94
6.3.3 解析包信息 96
6.3.4 解析资源类型的字符串内容 97
6.3.5 解析资源值字符串内容 98
6.3.6 解析正文内容 99
6.4 本章小结 105
第7章 dex文件格式解析 106
7.1 dex文件格式 106
7.2 构造dex文件 107
7.3 解析数据结构 108
7.3.1 头部信息Header结构 108
7.3.2 string_ids数据结构 112
7.3.3 type_ids数据结构 115
7.3.4 proto_ids数据结构 116
7.3.5 field_ids数据结构 118
7.3.6 method_ids数据结构 119
7.3.7 class_defs数据结构 120
7.4 解析代码 128
7.4.1 解析头部信息 128
7.4.2 解析string_ids索引区 129
7.4.3 解析type_ids索引区 130
7.4.4 解析proto_ids索引区 130
7.4.5 解析field_ids索引区 131
7.4.6 解析method_ids索引区 132
7.4.7 解析class_def区域 132
7.5 本章小结 134
防护篇
第8章 Android应用安全防护的基本策略 136
8.1 混淆机制 136
8.1.1 代码混淆 136
8.1.2 资源混淆 136
8.2 签名保护 138
8.3 手动注册native方法 140
8.4 反调试检测 144
8.5 本章小结 145
第9章 Android中常用权限分析 147
9.1 辅助功能权限 147
9.2 设备管理权限 148
9.3 通知栏管理权限 149
9.4 VPN开发权限 149
9.5 本章小结 150
第10章 Android中的run-as命令 151
10.1 命令分析和使用 151
10.2 Linux中的setuid和setgid概念 159
10.3 Android中setuid和setgid的使用
场景 162
10.4 run-as命令的作用 165
10.5 调用系统受uid限制的API 166
10.6 本章小结 168
第11章 Android中的allowBackup属性 169
11.1 allowBackup属性介绍 169
11.2 如何获取应用隐私数据 170
11.3 如何恢复应用数据 175
11.4 本章小结 175
第12章 Android中的签名机制 176
12.1 基本概念 176
12.2 Android中签名流程 182
12.3 Android中为何采用这种签名机制 191
12.4 本章小结 192
第13章 Android应用加固原理 193
13.1 加固原理解析 193
13.2 案例分析 195
13.3 运行项目 206
13.4 本章小结 208
第14章 Android中的so加固原理 209
14.1 基于对so中的section加密实现so加固 209
14.1.1 技术原理 209
14.1.2 实现方案 210
14.1.3 代码实现 210
14.1.4 总结 220
14.2 基于对so中的函数加密实现so加固 221
14.2.1 技术原理 221
14.2.2 实现方案 223
14.2.3 代码实现 224
14.3 本章小结 230
工具篇
第15章 Android逆向分析基础 232
15.1 逆向工具 232
15.2 逆向基本知识 233
15.3 打开系统调试总开关 233
15.4 本章小结 237
第16章 反编译神器apktool和Jadx 238
16.1 逆向操作惯例 238
16.2 反编译常见的问题 238
16.3 分析apktool的源码 240
16.4 解决常见问题 249
16.5 apktool的回编译源码分析 254
16.6 Jadx源码分析 256
16.7 本章小结 258
第17章 Hook神器Xposed 259
17.1 安装教程 259
17.2 环境搭建 259
17.3 编写模块功能 260
17.4 运行模块 264
17.5 本章小结 265
第18章 脱壳神器ZjDroid 266
18.1 ZjDroid原理分析 266
18.2 工具命令分析 268
18.3 工具日志信息 272
18.4 工具用法总结 272
18.5 工具使用案例 273
18.6 本章小结 276
第19章 Native层Hook神器Cydia Substrate 277
19.1 环境搭建 277
19.2 Hook Java层功能 277
19.3 Hook Native层功能 279
19.4 框架使用事项说明 283
19.5 本章小结 283
操作篇
第20章 静态方式逆向应用 286
20.1 smali语法 286
20.2 手动注入smali语句 288
20.3 ARM指令 288
20.4 用IDA静态分析so文件 290
20.5 案例分析 292
20.5.1 静态分析smali代码 292
20.5.2 静态分析native代码 300
20.6 本章小结 303
第21章 动态调试smali源码 304
21.1 动态调试步骤 304
21.2 案例分析 305
21.3 本章小结 324
第22章 IDA工具调试so源码 325
22.1 IDA中的常用快捷键 325
22.2 构造so案例 331
22.3 逆向so文件 332
22.3.1 获取应用的so文件 332
22.3.2 用IDA进行调试设置 336
22.3.3 IDA调试的流程总结 343
22.4 用IDA解决反调试问题 343
22.5 本章小结 355
第23章 逆向加固应用 356
23.1 逆向加固应用的思路 356
23.2 获取解密之后的dex文件 359
23.3 分析解密之后的dex文件内容 364
23.4 逆向方法 369
23.5 逆向测试 373
23.6 逆向加固应用的方法总结 374
23.7 本章小结 376
第24章 逆向应用经典案例分析 377
24.1 加壳原理分析 377
24.2 脱壳过程 380
24.3 如何还原应用 393
24.4 脱壳经验总结 394
24.5 本章小结 395
第25章 Android中常见漏洞分析 396
25.1 解压文件漏洞分析 396
25.1.1 漏洞场景 396
25.1.2 漏洞原因分析 398
25.1.3 漏洞案例分析 398
25.1.4 漏洞修复 399
25.1.5 漏洞总结 400
25.2 录屏授权漏洞分析 400
25.2.1 漏洞场景 400
25.2.2 漏洞原因分析 402
25.2.3 漏洞修复 402
25.2.4 漏洞总结 403
25.3 本章小结 403
第26章 文件加密病毒Wannacry样本分析 404
26.1 病毒样本分析 404
26.2 获取密码 405
26.3 文件解密 409
26.4 病毒分析报告 414
26.5 本章小结 414
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android应用安全防护和逆向分析
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>高性能Android应用开发
译者序 xi
序 xiii
前言 xv
第1章　Android 的性能指标　　1
1.1　性能对用户很重要　　2
1.1.1　电子商务和性能　　2
1.1.2　电子商务之外的影响　　3
1.1.3　性能可以节省基础设备　　4
1.2　最恶劣的性能影响因素：宕机　　4
1.2.1　低性能就像持续的宕机　　5
1.2.2　消费者对性能bug 的态度　　7
1.2.3　智能手机电池寿命：矿井中的金丝雀　　8
1.3　App 性能问题的检测　　8
1.3.1　模拟测试　　9
1.3.2　真实用户监测　　9
1.4　总结　　9
第2章　构建Android 设备实验室　　10
2.1　你的用户都在使用什么设备　　11
2.2　设备特性分布　　11
2.2.1　屏幕　　11
2.2.2　SDK 版本　　12
2.2.3　CPU/ 内存和存储　　12
2.3　用户使用的网络　　12
2.4　你的设备不是用户的设备　　12
2.5　测试　　13
2.6　创建设备实验室　　14
2.6.1　你想要花很多钱买设备吗　　14
2.6.2　我应该购买什么样的设备　　15
2.6.3　除了手机之外　　17
2.6.4　Android Open Source Project 设备　　17
2.6.5　其他选择　　18
2.6.6　其他注意事项　　19
2.6.7　我的设备实验室　　20
2.7　总结　　20
第3章　硬件性能和电池寿命　　22
3.1　Android 的硬件特点　　22
3.2　少即是多　　23
3.3　耗电原因　　24
3.3.1　Android 能耗统计文件　　24
3.3.2　屏幕　　26
3.3.3　无线设备　　27
3.3.4　CPU　　27
3.3.5　其他传感器　　28
3.3.6　休眠　　29
3.3.7　WakeLock 和Alarm　　29
3.3.8　Doze 模式　　30
3.4　基本的电量消耗分析　　31
3.4.1　详细的App 电量消耗分析　　34
3.4.2　能耗数据和数据流量　　36
3.4.3　App 休眠　　38
3.5　高级电池监控　　38
3.5.1　电能统计　　38
3.5.2　Battery Historian　　42
3.5.3　Battery Historian　　2.0　　51
3.6　JobScheduler　　54
3.7　小结　　58
第4章　屏幕和UI 性能　　59
4.1　UI 性能基准　　59
4.2　Android 上的UI 和渲染性能改进　　60
4.3　创建视图　　61
4.4　资源缩减　　74
4.4.1　屏幕的过度绘制　　74
4.4.2　检测过度绘制　　74
4.4.3　Hierarchy Viewer 中的过度绘制　　77
4.4.4　过度绘制和KitKat（Overdraw Avoidance）　　78
4.5　分析卡顿（测量GPU 的渲染性能）　　79
4.6　丢帧　　83
4.6.1　Systrace　　84
4.6.2　Systrace Screen Painting　　86
4.6.3　Systrace 和CPU 阻塞渲染　　91
4.6.4　Systrace 更新——2015 年Google I/O 开发者大会　　93
4.6.5　第三方工具　　95
4.7　感知性能　　95
4.7.1　进度条：优缺点　　96
4.7.2　动画掩盖加载时间　　96
4.7.3　即时更新的善意谎言　　96
4.7.4　提高感知性能的建议　　97
4.8　小结　　97
第5章　内存性能　　98
5.1　Android 内存：它是如何工作的　　98
5.1.1　共享内存与私有内存　　98
5.1.2　脏内存与干净内存　　99
5.1.3　内存清理（垃圾回收）　　99
5.1.4　确定App 使用的内存大小　　102
5.1.5　procstats　　107
5.1.6　Android 内存警告　　111
5.2　Java 中的内存管理/ 泄露　　112
5.3　追踪内存泄露的工具　　112
5.3.1　Heap Dump　　113
5.3.2　Allocation Tracker　　115
5.3.3　增加一处内存泄露　　116
5.3.4　更加深层次的堆解析：MAT 和LeakCanary　　119
5.3.5　Eclipse 内存分析工具——MAT　　119
5.3.6　LeakCanary　　125
5.4　小结　　128
第6章　CPU 与CPU 性能　　129
6.1　检测CPU 占用率　　130
6.2　使用Systrace 分析CPU　　131
6.3　Traceview（遗留的监视器DDMS 工具）　　134
6.4　Traceview（Android Studio）　　137
6.5　其他优化工具　　140
6.6　小结　　141
第7章　网络性能　　142
7.1　Wi-Fi 与蜂窝无线电　　142
7.1.1　Wi-Fi　　143
7.1.2　蜂窝　　143
7.1.3　RRC 状态机　　144
7.2　测试工具　　147
7.2.1　Wireshark　　148
7.2.2　Fiddler　　149
7.2.3　MITMProxy　　150
7.2.4　AT&T ARO　　151
7.2.5　混合型App 和WebPageTest org　　154
7.3　Android 网络优化　　154
7.3.1　文件优化　　155
7.3.2　精简文本文件（Souders：精简JavaScript）　　156
7.3.3　图片　　157
7.3.4　文件缓存　　159
7.3.5　文件之外　　161
7.3.6　分组连接　　162
7.3.7　检测应用的无线电使用情况　　163
7.3.8　适时关闭连接　　164
7.3.9　定期执行重复的ping 命令　　166
7.3.10　网络安全技术的应用（HTTP 和HTTPS）　　167
7.4　全球移动网络覆盖范围　　167
7.4.1　CDN 服务器　　168
7.4.2　在慢速网络中测试App　　169
7.4.3　仿真慢速网络而不用倾家荡产　　169
7.4.4　构建网络感知App　　170
7.4.5　计算延迟　　173
7.4.6　最后一英里的延迟　　174
7.4.7　其他无线电　　174
7.4.8　GPS　　174
7.4.9　蓝牙　　174
7.5　小结　　176
第8章　真实用户监测　　177
8.1　启用RUM 工具　　178
8.2　RUM 分析：示例程序　　178
8.3　崩溃　　179
8.3.1　分析Crashlytics 的崩溃报告　　181
8.3.2　使用　　186
8.3.3　实时信息　　190
8.4　大数据的营救　　190
8.5　小结　　192
附录　组织性能　　193
关于作者　　198
封面介绍　　198
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>高性能Android应用开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android系统服务开发
第1 章　Android 系统服务开发　　1
1.1　Android 系统服务开发简介　　2
1.1.1　Android 的出现　　2
1.1.2　移动设备的硬件结构　　5
1.1.3　Android 硬件服务开发概要　　11
1.1.4　本书的叙述方向　　14
1.2　IPC　　16
1.2.1　Android 的进程　　16
1.2.2　进程的fork() 及exec() 函数　　17
1.2.3　Linux 内核的IPC　　19
1.2.4　Linux 管道　　20
1.2.5　网络套接字　　21
1.2.6　UNIX 套接字　　27
1.3　I/O 多路复用　　30
1.3.1　服务器端/ 客户端模型　　30
1.3.2　使用select() 函数的I/O 多路复用　　33
1.3.3　select() 函数示例　　34
1.4　ITC　　36
1.4.1　多线程　　36
1.4.2　Android 的ITC 模型　　39
1.4.3　消息　　42
1.4.4　Looper　　45
1.4.5　Handler　　49
1.4.6　HandlerThread　　54
1.5　守护进程服务分析　　56
1.5.1　普通守护进程程序的结构　　56
1.5.2　生成init 进程的守护进程服务　　58
1.5.3　守护进程与多客户端间的通信　　65
第2 章　RIL　　70
2.1　RIL 简介　　71
2.1.1　RIL 简介　　71
2.1.2　AP 与调制解调器间的相互作用　　72
2.1.3　AP 与调制解调器间的通信：RIL 命令　　73
2.2　RIL 结构　　75
2.2.1　Android 通信栈　　76
2.2.2　Android RIL 的调制解调器控制模型　　77
2.3　RIL 守护进程的结构　　78
2.3.1　RIL 守护进程的构成要素　　79
2.3.2　RIL 事件　　80
2.3.3　RIL 事件调度程序　　81
2.4　RIL 守护进程初始化　　87
2.4.1　守护进程的启动　　87
2.4.2　RIL 守护进程初始化过程　　90
2.4.3　动态加载Vendor RIL 库　　91
2.4.4　生成RIL 事件调度程序　　92
2.4.5　Vendor RIL 初始化　　97
2.4.6　注册Vendor RIL 的Radio控制函数及生成I/O 事件专用套接字　　100
2.5　RIL 事件处理机制　　103
2.5.1　RIL 事件调度程序的运行原理　　103
2.5.2　RIL 事件处理回调函数　　110
2.5.3　RIL req 处理机制　　119
2.5.4　RIL resp 处理机制　　124
2.5.5　RIL ind 处理机制　　129
第3 章　通信框架　　136
3.1　通信框架概要　　137
3.1.1　通信框架的功能　　137
3.1.2　通信框架提供的服务　　139
3.2　通信框架的结构　　140
3.2.1　通信框架的分层构成要素　　140
3.2.2　PhoneApp 类　　142
3.2.3　PhoneProxy 类　　142
3.2.4　Phone 接口　　144
3.2.5　Radio 接口　　146
3.2.6　state tracker 类　　148
3.2.7　CallManager 类　　149
3.2.8　不同版本中通信框架的变化（1.5~4.2）　　151
3.3　通信框架的初始化　　152
3.3.1　Phone 应用程序的生成　　153
3.3.2　通信框架的初始化　　155
3.3.3　RILJava 的初始化　　160
3.4　通信框架的服务模型　　164
3.4.1　通信框架的服务结构　　164
3.4.2　通信框架的服务req/resp 处理机制　　165
3.4.3　通信框架的服务ind 处理机制　　172
3.5　RILJava 的RIL req 处理示例　　186
3.5.1　Phone 应用程序的通信框架API 调用　　187
3.5.2　调用RILJava 的Radio API　　189
3.5.3　生成RILJava 的RILRequest对象　　191
3.5.4　向RILSender 线程传送RILRequest 对象　　193
3.5.5　发送RILSender 线程的RIL req　　194
3.6　RILJava 的RIL resp 处理示例　　197
3.6.1　从RIL 守护进程接收RIL resp　　198
3.6.2　发送RILReceiver 线程的服务resp 消息　　200
3.6.3　处理客户端对象handler 的服务resp 消息　　202
3.7　RILJava 的RIL ind 处理示例　　203
3.7.1　注册Subscriber 对象的服务ind　　204
3.7.2　接收RILReceive 线程的RIL ind　　205
3.7.3　调用RILReceive 线程的
notifyRegistrant() 方法　　206
3.7.4　处理Subscriber 对象handler的服务ind 消息　　209
第4 章　USIM　　211
4.1　USIM 简介　　212
4.1.1　智能卡的定义　　213
4.1.2　智能卡的启动过程　　213
4.1.3　使用APDU 的智能卡通信　　215
4.1.4　USIM 的由来　　215
4.1.5　USIM 的主要功能　　216
4.2　USIM 的数据结构及运行　　219
4.2.1　USIM 的数据结构　　219
4.2.2　USIM 的移动通信相关EF　　221
4.2.3　通过APDU 读取EF 的过程　　223
4.3　Android USIM 软件结构　　225
4.3.1　调制解调器　　225
4.3.2　RIL　　226
4.3.3　通信框架　　226
4.3.4　Android 应用程序　　229
4.4　Android USIM 初始化及运行　　230
4.4.1　UICC 初始化及UICC 相关对象的生成　　230
4.4.2　系统启动后调制解调器通电　　235
4.4.3　进入SIM_READY 状态　　240
4.4.4　查看USIM 状态及执行EF读取　　244
4.4.5　分析通信框架的EF 读取　　246
4.5　Android USAT 初始化及运行　　254
4.5.1　USAT 初始化　　254
4.5.2　通过Display Text 分析Proactive Command　　258
4.5.3　Android 的Proactive Command处理　　263
第5 章　Android 电源管理　　270
5.1　电源管理概述　　272
5.1.1　电功率　　273
5.1.2　了解电池　　273
5.1.3　默认电源状态　　274
5.1.4　Android 电源管理的作用　　275
5.2　Android 电源管理的结构　　276
5.2.1　Android 电源管理的层级结构　　277
5.2.2　Power Manager　　278
5.2.3　Power Manager Service　　279
5.2.4　本地空间　　280
5.2.5　内核空间　　282
5.2.6　Android 电源管理主要方法调用过程　　283
5.3　Power Manager Service 的初始化　　284
5.3.1　Power Manager Service 的类结构及方法　　285
5.3.2　生成并注册Power ManagerService　　286
5.3.3　Power Manager Service 初始化：init() 方法　　290
5.3.4　Power Manager Service 初始化：systemReady() 方法　　302
5.4　Power Manager Service 的主要操作　　304
5.4.1　Power Manager Service 状态　　304
5.4.2　决定Power Manager Service状态　　307
5.4.3　屏幕亮度时间的结构　　315
5.4.4　根据屏幕亮度时间控制屏幕亮度　　318
5.4.5　屏幕亮度转换的结构要素　　320
5.4.6　屏幕亮度转换操作　　321
5.4.7　Wake Lock 标记与标签　　328
5.4.8　生成Wake Lock　　330
5.4.9　获取Wake Lock　　334
5.4.10　解除Wake Lock　　344
5.5　间接应用电源管理服务　　344
5.5.1　Power Manager 类提供的方法　　345
5.5.2　Power Manager 类的实例化及获取　　345
5.5.3　获取Wake Lock：PARTIAL_WAKE_LOCK　　347
5.5.4　Wake Lock 获取示例：PARTIAL_WAKE_LOCK　　348
5.5.5　获取Wake Lock：屏幕亮度控制标记　　350
5.5.6　Wake Lock 获取示例：FULL_WAKE_LOCK　　352
5.5.7　获取Wake Lock：ACQUIRE_CAUSES_WAKEUP　　353
5.5.8　解除Wake Lock：PARTIAL_WAKE_LOCK　　357
5.5.9　解除Wake Lock：屏幕亮度控制标记　　358
5.5.10　解除Wake Lock：ON_AFTER_RELEASE　　360
5.6　直接应用Power Manager Service　　361
5.6.1　屏幕亮度设置　　362
5.6.2　Poke Lock　　363
5.7　不应用Power Manager Service的Wake Lock　　364
第6 章　Android 内核电源管理　　367
6.1　Linux 内核电源管理　　369
6.1.1　APM 与ACPI　　369
6.1.2　设备电源管理　　372
6.2　Android 内核电源管理　　372
6.2.1　Android 内核修订内容　　372
6.2.2　kobject 与sysfs 文件系统　　373
6.2.3　生成用于电源管理的sysfs文件　　376
6.3　电源管理初始化　　378
6.4　Early Suspend　　381
6.4.1　Early Suspend 结构体与注册　　382
6.4.2　Early Suspend 操作　　384
6.5　Wake Lock　　387
6.5.1　Wake Lock 结构　　387
6.5.2　生成Wake Lock　　389
6.5.3　激活Wake Lock　　390
6.5.4　禁用Wake Lock　　393
6.6　Suspend　　394
6.6.1　执行Suspend　　394
6.6.2　准备Suspend　　395
6.6.3　进入Suspend　　396
6.7　Resume　　399
6.7.1　Early Resume　　400
6.7.2　设备Resume　　401
6.7.3　Resume 完成　　402
6.8　Late Resume　　402
6.9　Surface Flinger 与内核之间的相互操作　　405
6.9.1　屏幕On（开）状态到Off
（关）状态的转换　　406
6.9.2　屏幕Off（关）状态到On（开）状态的转换　　409
索引　　412
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android系统服务开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android应用开发实战
前　言
第一部分　基础篇—Android开发基础
第1章　Android应用开发基础 / 2
1.1　Android的系统构架 / 2
1.2　Android开发环境搭建 / 3
1.2.1　安装JDK和配置Java开发环境 / 3
1.2.2　安装Android SDK / 4
1.2.3　安装Eclipse插件ADT / 6
1.3　Android应用程序中的资源 / 7
1.4　Android的应用程序组件 / 8
1.4.1　Activity（Android的窗体） / 8
1.4.2　Service（服务） / 9
1.4.3　Broadcast Receiver（广播接收器） / 9
1.4.4　Content Provider（内容提供者） / 10
1.5　小结 / 10
第2章　开发前的准备工作 / 11
2.1　建立Android工程 / 11
2.2　引用新浪微博SDK / 12
2.3　引用第三方类库 / 12
2.4　跨工程调试新浪微博SDK / 12
2.5　异步访问API / 13
2.5.1　使用SDK本身的异步功能 / 14
2.5.2　为SDK自定义异步功能 / 15
2.6　小结 / 18
第3章　实现一个简单的微博客户端 / 19
3.1　编写Android的服务 / 19
3.2　让任何拍照软件都成为微博客户端 / 19
3.2.1　可以监视目录文件的服务 / 20
3.2.2　发布带图像的微博 / 23
3.3　小结 / 25
第二部分　实例篇—微博客户端开发
第4章　微博客户端概况 / 28
4.1　参考客户端 / 28
4.1.1　新浪微博官方Android客户端 / 28
4.1.2　网易微博官方Android客户端 / 30
4.1.3　腾讯微博官方Android客户端 / 30
4.2　功能模块展示 / 31
4.2.1　登录 / 31
4.2.2　账户管理 / 31
4.2.3　微博列表 / 32
4.2.4　私信列表 / 32
4.2.5　撰写微博 / 32
4.2.6　图像渲染 / 33
4.2.7　转发、评论与收藏微博 / 33
4.2.8　搜索微博和用户 / 33
4.3　小结 / 34
第5章　新浪微博API详解 / 35
5.1　新浪微博API有哪些功能 / 35
5.2　使用新浪微博API开发前的准备工作 / 36
5.2.1　申请新浪微博应用程序 / 36
5.2.2　访问和测试API / 37
5.2.3　测试新浪微博SDK / 40
5.3　身份认证 / 43
5.3.1　Basic认证 / 43
5.3.2　OAuth认证 / 44
5.4　利用新浪微博SDK获取微博消息 / 46
5.4.1　获取公共微博消息 / 46
5.4.2　获取登录用户首页的微博消息 / 48
5.4.3　获取当前用户发布的微博消息 / 50
5.4.4　获取@提到我的微博消息 / 50
5.4.5　获取当前用户的评论列表 / 51
5.4.6　获取指定微博的评论列表 / 52
5.4.7　获取微博的评论数和转发数 / 53
5.4.8　获取用户相关消息 / 53
5.5　更新微博及其相关内容 / 54
5.5.1　发布文字微博 / 54
5.5.2　发布图像微博 / 55
5.5.3　评论微博 / 56
5.5.4　回复评论 / 56
5.5.5　转发微博 / 58
5.6　新浪微博API的搜索功能 / 59
5.6.1　搜索用户 / 59
5.6.2　搜索微博 / 59
5.7　小结 / 60
第6章　用户登录与用户注册 / 61
6.1　设计登录界面 / 61
6.1.1　登录界面的布局 / 61
6.1.2　登录界面的装载模式 / 63
6.2　事件处理机制 / 64
6.2.1　编写事件处理类 / 65
6.2.2　扩展微博事件处理 / 66
6.3　用户登录 / 69
6.3.1　响应用户登录事件 / 69
6.3.2　用户登录成功 / 70
6.3.3　用户登录失败 / 71
6.4　用户注册 / 72
6.5　关注作者微博 / 72
6.6　小结 / 72
第7章　首页微博列表 / 73
7.1　主界面设计 / 73
7.1.1　主界面布局 / 73
7.1.2　微博列表项布局 / 77
7.1.3　装载主界面 / 78
7.2　实现系统工具类 / 81
7.2.1　NotificationProcess类（处理通知列表） / 81
7.2.2　SystemDBService类（操作数据库） / 85
7.2.3　HappyBlogConfig类（读写配置文件） / 87
7.2.4　ProcessTasks类（处理返回数据） / 88
7.3　系统初始化 / 90
7.3.1　初始化SystemDBService对象 / 90
7.3.2　为每个账号创建MyMicroBlogAsync对象 / 92
7.3.3　初始化处理微博列表的对象 / 93
7.4　装载首页微博数据 / 94
7.4.1　显示微博数据 / 94
7.4.2　装载头像和微博图像 / 96
7.5　小结 / 99
第8章　切换微博列表 / 100
8.1　显示公共微博列表 / 100
8.2　显示我的微博列表 / 104
8.3　显示@提到我的微博列表 / 105
8.4　刷新当前的微博列表 / 106
8.5　小结 / 106
第9章　显示其他列表信息 / 107
9.1　显示我的所有评论列表 / 107
9.2　显示我发出的评论列表 / 109
9.3　显示我的收藏列表 / 110
9.4　显示私信列表 / 111
9.5　小结 / 113
第10章　账号管理 / 114
10.1　账号管理主界面 / 114
10.2　添加账号 / 116
10.3　删除账号 / 118
10.4　设置主账号 / 118
10.5　同步账号 / 119
10.6　注销 / 119
10.7　小结 / 121
第11章　撰写和发布微博 / 122
11.1　发布文字微博 / 122
11.2　发布带图像的微博 / 124
11.2.1　手机拍照 / 125
11.2.2　从相册中获得图像 / 126
11.2.3　删除图像 / 127
11.2.4　发布图像微博 / 127
11.3　微博的辅助输入工具 / 127
11.3.1　语音录入 / 127
11.3.2　插入表情 / 129
11.3.3　插入话题 / 130
11.4　小结 / 131
第12章　处理微博与评论 / 132
12.1　与微博相关的操作 / 132
12.1.1　评论微博 / 132
12.1.2　转发微博 / 135
12.1.3　删除微博 / 137
12.1.4　收藏微博 / 138
12.1.5　以大图方式浏览微博图像 / 139
12.1.6　图像另存为与图像分享 / 139
12.2　查看微博的详细内容 / 146
12.3　显示与回复评论 / 148
12.4　小结 / 149
第13章　图像特效 / 150
13.1　图像特效主界面 / 150
13.2　特效处理框架 / 150
13.2.1　处理图像的接口 / 151
13.2.2　如何处理图像 / 151
13.3　选择图像区域 / 153
13.4　图像特效详解 / 160
13.4.1　灰度 / 160
13.4.2　马赛克 / 165
13.4.3　截图 / 168
13.4.4　自由旋转 / 169
13.4.5　恢复原始图像 / 170
13.5　发布经过特效处理的图像微博 / 170
13.6　小结 / 171
第14章　搜索微博与搜索用户 / 173
14.1　搜索界面布局 / 173
14.2　实现JSON格式的搜索API / 174
14.3　搜索微博 / 177
14.4　搜索用户 / 178
14.5　小结 / 181
第15章　个性化设置 / 182
15.1　设置主题 / 182
15.1.1　主题目录列表 / 182
15.1.2　主题图像 / 186
15.1.3　设置主题背景图 / 192
15.2　设置背景颜色和透明度 / 194
15.3　设置文字颜色 / 198
15.4　小结 / 204
第16章　签名和发布微博客户端 / 205
16.1　签名应用程序 / 205
16.1.1　使用命令行方式进行签名 / 205
16.1.2　使用ADT插件进行签名 / 206
16.2　发布微博客户端 / 207
16.3　小结 / 208
第三部分　高级篇—Android SDK高级技术
第17章　Android资源详解 / 210
17.1　创建资源 / 210
17.2　访问资源 / 211
17.2.1　生成资源类文件 / 212
17.2.2　从代码中访问资源 / 214
17.2.3　从XML文件中访问资源 / 214
17.3　在代码中存取资源 / 216
17.3.1　存取简单资源 / 216
17.3.2　存取对象资源 / 219
17.3.3　处理配置变化 / 221
17.4　本地化 / 222
17.4.1　建立本地化的资源目录 / 222
17.4.2　资源目录的命名规则 / 225
17.4.3　建立别名资源 / 225
17.4.4　资源目录的优先级 / 227
17.5　资源类型 / 227
17.5.1　字符串（String）资源 / 227
17.5.2　布局（Layout）资源 / 230
17.5.3　图像（Drawable）资源 / 232
17.5.4　菜单（Menu）资源 / 242
17.5.5　动画（Animation）资源 / 243
17.5.6　风格（Style）资源 / 247
17.5.7　其他资源 / 248
17.6　小结 / 250
第18章　电话、短信与联系人 / 251
18.1　电话 / 251
18.1.1　显示拨号界面 / 251
18.1.2　直接拨打电话 / 251
18.1.3　控制呼叫转移 / 252
18.1.4　监听来/去电 / 254
18.1.5　用程序控制接听和挂断动作 / 257
18.1.6　获取通话记录 / 259
18.2　短信和彩信 / 261
18.2.1　通过系统程序发送短信 / 261
18.2.2　直接发送短信 / 261
18.2.3　保存短信发送记录 / 262
18.2.4　监听短信 / 264
18.2.5　发送彩信 / 265
18.2.6　监听彩信 / 266
18.2.7　显示视频缩略图 / 267
18.2.8　彩信内容与SMIL协议 / 270
18.3　联系人 / 280
18.3.1　查看联系人的内容 / 281
18.3.2　添加电话到联系人列表 / 282
18.3.3　修改联系人信息 / 283
18.3.4　删除联系人信息 / 284
18.4　小结 / 284
第19章　数据库 / 285
19.1　SQLite数据库 / 285
19.1.1　管理SQLite数据库 / 285
19.1.2　SQLite数据库基本操作 / 286
19.1.3　事务 / 288
19.1.4　核心函数 / 289
19.1.5　日期和时间函数 / 294
19.1.6　聚合函数 / 297
19.2　Android版的SQLite数据库 / 299
19.2.1　操作数据库 / 299
19.2.2　升级数据库 / 300
19.2.3　数据绑定 / 302
19.3　持久化数据库引擎db4o / 304
19.3.1　什么是db4o / 304
19.3.2　下载和安装db4o / 305
19.3.3　创建和打开数据库 / 305
19.3.4　操作Java对象 / 305
19.4　小结 / 308
第20章　蓝牙与Wi-Fi / 309
20.1　蓝牙编程 / 309
20.1.1　蓝牙简介 / 309
20.1.2　控制蓝牙设备 / 310
20.1.3　使蓝牙设备可被搜索到 / 311
20.1.4　搜索蓝牙设备 / 313
20.1.5　蓝牙设备之间的数据传输 / 316
20.2　Wi-Fi编程 / 320
20.2.1　控制Wi-Fi设备 / 320
20.2.2　获取Wi-Fi信息 / 321
20.2.3　客户端Socket / 323
20.2.4　服务端Socket / 324
20.2.5　移动版的Web服务器实例 / 324
20.2.6　在手机客户端访问Web服务器 / 329
20.3　小结 / 330
第21章　第三方程序库 / 331
21.1　GTalk客户端 / 331
21.1.1　XMPP协议简介 / 331
21.1.2　下载并安装asmack / 331
21.1.3　登录GTalk服务器 / 332
21.1.4　获取联系人信息 / 333
21.1.5　监听联系人是否在线 / 335
21.1.6　发送聊天消息 / 336
21.1.7　接收聊天消息 / 337
21.2　FTP客户端 / 337
21.2.1　连接与断开FTP服务器 / 338
21.2.2　获取与改变当前工作目录 / 339
21.2.3　列出所有的文件和目录 / 339
21.2.4　建立、重命名、删除指定目录 / 341
21.2.5　上传、重命名、下载、删除指定文件 / 341
21.3　绘制图表的程序库AChartEngine / 342
21.3.1　曲线图 / 342
21.3.2　条形图 / 346
21.3.3　离散点图 / 346
21.3.4　区域图 / 347
21.3.5　饼图 / 349
21.4　小结 / 349
第22章　编译在Android中的应用 / 350
22.1　JavaCC使用入门 / 350
22.1.1　JavaCC下载和安装 / 351
22.1.2　用JavaCC生成第一个分析器 / 351
22.2　JavaCC语法 / 354
22.3　JavaCC实战：计算器 / 355
22.3.1　生成计算表达式的分析器源代码 / 355
22.3.2　编写计算器的主程序 / 361
22.4　小结 / 365
第23章　Android SDK的2D绘图技术 / 366
23.1　绘图基础 / 366
23.1.1　绘制点 / 366
23.1.2　绘制直线 / 368
23.1.3　绘制三角形 / 368
23.1.4　绘制矩形和菱形 / 369
23.1.5　绘制圆、弧和椭圆 / 371
23.1.6　绘制文字 / 372
23.2　高级绘图技术 / 372
23.2.1 在画布上旋转图像 / 373
23.2.2　在EditText控件上绘制图像和文本 / 373
23.2.3　制作动画效果 / 375
23.3　绘图实战：电子罗盘 / 376
23.4　SurfaceView类 / 378
23.5　小结 / 380
第24章　OpenGL ES绘图技术 / 381
24.1　OpenGL ES简介 / 381
24.2　构建OpenGL ES框架 / 381
24.3　用OpenGL ES绘制2D图形 / 382
24.3.1　三角形 / 382
24.3.2　矩形 / 384
24.3.3　为图形上色 / 385
24.4　OpenGL ES实战：旋转立方体 / 387
24.4.1　绘制立方体 / 387
24.4.2　使立方体旋转起来 / 388
24.5　小结 / 389
第25章　性能优化 / 390
25.1　性能优化的基础知识 / 390
25.2　编写Java程序的最优化原则 / 391
25.2.1　用静态工厂方法代替构造方法 / 391
25.2.2　避免创建重复的对象 / 391
25.2.3　防止内存泄漏 / 393
25.2.4　接口只用于定义类型 / 394
25.2.5　返回零长度的集合而不是null / 394
25.2.6　通过接口引用对象 / 395
25.3　避免ANR / 395
25.4　性能检测 / 396
25.4.1　执行时间测试 / 396
25.4.2　内存消耗测试 / 398
25.4.3　测试性能的工具traceview / 399
25.5　小结 / 400
第26章　Android 4.0新技术探索 / 401
26.1　全新的Android，全新的体验 / 401
26.1.1　开发环境 / 401
26.1.2　模拟器 / 402
26.2　Activity中的容器Fragment / 405
26.2.1　Fragment的特点 / 405
26.2.2　Fragment的生命周期 / 406
26.2.3　显示对话框 / 410
26.2.4　隐藏和显示Fragment / 412
26.2.5　回退堆栈 / 415
26.3　Android 4.0的新特性 / 416
26.3.1　联系人提供者中的社会化API / 416
26.3.2　高分辨率的联系人照片 / 417
26.3.3　新的日历API / 417
26.3.4　语音信箱 / 417
26.3.5　多媒体API / 417
26.3.6　人脸识别 / 418
26.3.7　焦距和感光区域 / 418
26.3.8　摄像头自动对焦 / 419
26.3.9　Wi-Fi点对点连接 / 419
26.3.10　高级的网络应用 / 419
26.3.11　新增的设备传感器 / 420
26.3.12　WebKit浏览器引擎 / 420
26.4　Android 4.0实战：应用程序演示 / 420
26.5　小结 / 421
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android应用开发实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>NFC：Arduino、Android与PhoneGap近场通信
第1 章　简介 ................................................................. 1
本书面向哪些读者 .................................................................................................2
推荐阅读 ................................................................................................................2
本书有哪些内容 .....................................................................................................3
你需要什么 ............................................................................................................4
硬件 .................................................................................................................4
软件 .................................................................................................................6
其他不错的NFC 应用 .....................................................................................7
本书所使用的约定 .................................................................................................7
使用代码示例 ........................................................................................................8
Safari® 联机丛书 ....................................................................................................8
联系我们 ................................................................................................................9
致谢 .....................................................................................................................10
第2 章　NFC 和RFID .................................................. 11
什么是RFID ........................................................................................................ 11
什么是NFC .........................................................................................................12
RFID 如何工作 ....................................................................................................13
RFID 标准体系 ..............................................................................................13
NFC 如何运作 ......................................................................................................13
NFC 数据交换格式（NDEF） ........................................................................14
NFC 的体系结构 ..................................................................................................15
NFC 标签类型 ...............................................................................................16
从哪里买标签 ................................................................................................17
设备与标签类型匹配 ...........................................................................................18
能用NFC 做什么 .................................................................................................19
总结 .....................................................................................................................20
第3 章　从PhoneGap 和PhoneGap-NFC 库开始 ........ 21
为什么选择Android.............................................................................................21
你的第一个PhoneGap 应用：Hello, World ！ .....................................................22
设置开发环境 ................................................................................................22
创建PhoneGap 项目......................................................................................27
重要文件 .......................................................................................................30
一个简单的定位应用程序 ....................................................................................32
NFC 读取器 .........................................................................................................38
安装NFC 插件 ..............................................................................................39
编写NFC 读取器应用程序 ...........................................................................40
故障排除 .......................................................................................................43
总结 .....................................................................................................................44
第4 章　NDEF 介绍 .................................................... 45
NDEF 结构 ...........................................................................................................45
TNF（类型名称格式） ...................................................................................46
载荷类型 .......................................................................................................47
载荷ID ..........................................................................................................48
载荷 ...............................................................................................................49
记录结构 ..............................................................................................................49
记录头部 .......................................................................................................50
一个NDEF 消息可以有多大 .........................................................................50
记录组块 .......................................................................................................51
参考 ...............................................................................................................51
NDEF 实战 ...........................................................................................................52
一个标签写入应用：Foursquare 签到 ..................................................................56
把一条NDEF 记录写入标签 .........................................................................57
写不同的记录类型 ........................................................................................60
PhoneGap-NFC 的NDEF 辅助函数概述 .......................................................65
总结 .....................................................................................................................67
第5 章　监听NDEF 数据 ............................................. 69
PhoneGap-NFC 的事件监听 .................................................................................69
一个NDEF 读取器应用 .......................................................................................71
监听多个事件 ................................................................................................72
读取NDEF 消息 ...........................................................................................75
使用记录类型过滤标签 .................................................................................78
使用MIME 类型过滤 ....................................................................................79
Android 标签分发系统 .........................................................................................82
intent 类型 .....................................................................................................83
Android 应用记录 .........................................................................................86
总结 .....................................................................................................................87
第6 章　一个NFC 应用实践 ......................................... 89
用户交互 .............................................................................................................91
了解Hue ..............................................................................................................92
Hue 数据格式 ................................................................................................94
Hue 的REST API ..........................................................................................97
Android shell ........................................................................................................97
PhoneGap 媒体API ..............................................................................................98
用户接口（UI） ....................................................................................................99
应用程序代码 .................................................................................................... 101
通用功能 .................................................................................................... 102
全局事件处理程序 ..................................................................................... 104
Hub 通信功能 ............................................................................................. 106
用户界面控件事件处理程序 ....................................................................... 110
音乐界面事件处理程序 .............................................................................. 113
NFC 事件处理程序 ..................................................................................... 118
启用后台调度 ............................................................................................. 120
总结 ................................................................................................................... 121
第7 章　Arduino 和NFC 介绍 .................................... 123
数字化遇上物理：Arduino ................................................................................ 123
NFC 的硬件核心 ................................................................................................ 125
Arduino 开发环境 .............................................................................................. 125
串行通信 ..................................................................................................... 129
安装Arduino 库 .......................................................................................... 130
Arduino 的NDEF 库 .......................................................................................... 132
读取Arduino 中的NDEF ............................................................................ 134
在Arduino 中写入NDEF ............................................................................ 137
微型控制器NFC 应用：酒店钥匙卡 ................................................................. 138
交互和数据格式 .......................................................................................... 140
Arduino 的NDEF 写入器设备 .................................................................... 142
Arduino 的NDEF 读取器和门锁装置 ......................................................... 148
Arduino NDEF 写入器设备的浏览器接口 ......................................................... 156
Node.js 的应用规范：package.json ............................................................. 156
客户端代码 ................................................................................................. 157
服务器端代码 .............................................................................................. 158
总结 ................................................................................................................... 162
第8 章　点对点（P2P）交换 ...................................... 165
在PhoneGap 中发送P2P 消息 ........................................................................... 167
在PhoneGap 中接收P2P 消息 ........................................................................... 175
切换 ................................................................................................................... 177
静态切换 ..................................................................................................... 178
在PhoneGap 中发送切换消息 ........................................................................... 178
用Arduino 进行P2P .......................................................................................... 184
卡仿真 ................................................................................................................ 184
总结 ................................................................................................................... 185
第9 章　嵌入式系统里的NFC .................................... 187
嵌入式Linux 设备和包管理器介绍 ................................................................... 187
网络、USB 和NFC .................................................................................... 188
嵌入式Linux 上的NFC ：概览 .......................................................................... 190
通用功能 ............................................................................................................ 191
选择熟悉的编辑工具 ................................................................................... 191
了解包管理器 .............................................................................................. 191
设置日期和时间 ......................................................................................... 192
建一个下载目录 ......................................................................................... 193
BeagleBone 特性 ........................................................................................ 193
Raspberry Pi 特性 ....................................................................................... 193
安装NFC 工具 ................................................................................................... 194
安装libusb 兼容库 ..................................................................................... 195
安装libnfc .................................................................................................. 195
Raspberry Pi 或BeagleBone 安装测试 ....................................................... 196
安装libfreefare ........................................................................................... 196
libnfc 和libfreefare 的命令行工具 ..................................................................... 197
Node.js 的NDEF 读写 ....................................................................................... 199
标签写入器的Web 界面 .................................................................................... 203
标签控制物理输出 ............................................................................................. 205
BeagleBone 版本 ......................................................................................... 205
Raspberry Pi 版本 ....................................................................................... 207
总结 ................................................................................................................... 211
附录A　NFC 规范代码 ............................................... 213
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>NFC：Arduino、Android与PhoneGap近场通信
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android应用开发入门
第1章 　绪论　　1
1.1 　Android是什么　　1
1.2 　Android的优势　　2
1.3 　本书范围　　3
1.3.1 　本书所涉及的内容　　3
1.3.2 　本书未涉及的内容　　4
1.4 　下载SDK工具　　4
1.4.1 　Java　　5
1.4.2 　Eclipse　　6
1.4.3 　Android SDK　　7
1.5 　小结　　7
第2章 　本书内容梗概　　9
2.1 　Android集成开发环境　　9
2.2 　Java、XML以及Android的工作原理　　11
2.3 　Android应用程序框架　　11
2.4 　屏幕布局设计　　12
2.5 　用户界面设计　　12
2.6 　图像与动画设计　　13
2.7 　交互性　　13
2.8 　内容提供器　　13
2.9 　Intent和Intent过滤器　　14
2.10 　Android的未来　　14
2.11 　小结　　15
第3章 　配置Android开发环境　　16
3.1 　安装Java、Eclipse和Android　　16
3.1.1 　Java SE和JRE：应用程序开发的基础　　16
3.1.2 　Eclipse IDE：开发环境　　18
3.1.3 　Android SDK：用于Eclipse的Android工具包　　21
3.1.4 　Android开发工具：用于Eclipse的Android工具　　22
3.1.5 　Eclipse中的Android环境　　25
3.2 　升级Android SDK　　26
3.3 　配置AVD与智能手机连接　　29
3.3.1 　AVD：智能手机模拟器　　29
3.3.2 　USB智能手机驱动程序：外部设备　　31
3.4 　在64位平台上进行开发　　31
3.5 　小结　　33
第4章 　Android软件开发平台介绍　　34
4.1 　了解Java SE与Dalvik虚拟机　　34
4.2 　Android工程的目录结构　　35
4.2.1 　典型的默认资源目录　　36
4.2.2 　Values目录　　37
4.3 　用好Android XML（你的秘密武器）　　38
4.3.1 　屏幕尺寸　　39
4.3.2 　桌面时钟　　39
4.4 　使用Android应用程序资源　　40
4.4.1 　位图图片　　40
4.4.2 　可选资源目录　　40
4.5 　启动应用程序：AndroidManifest.xml文件　　41
4.6 　创建第一个Android应用　　42
4.6.1 　启动Eclipse　　42
4.6.2 　创建一个Android工程　　43
4.6.3 　查看并编辑应用程序文件　　45
4.6.4 　在strings.xml中设置一个变量的值　　49
4.6.5  　运行应用　　51
4.6.6 　添加应用程序图标　　52
4.7 　小结　　55
第5章 　Android框架概览　　56
5.1 　OOP的基础：对象　　56
5.1.1 　一些OOP术语　　58
5.1.2 　对象的设计图：类　　58
5.1.3 　为类赋予结构：继承　　62
5.1.4 　定义接口　　64
5.1.5 　将类组织起来：包　　65
5.2 　XML概览　　66
5.3 　剖析Android应用程序：APK文件　　66
5.4 　Android应用程序组件　　68
5.4.1 　Android活动：定义UI　　68
5.4.2 　Android服务：后台处理　　69
5.4.3 　广播接收器：消息和通知　　69
5.4.4 　内容提供器：数据管理　　70
5.5 　Android Intent对象：组件的通信　　71
5.6 　Android Manifest XML：组件的声明　　71
5.7 　小结　　73
第6章 　屏幕布局设计：视图与布局　　75
6.1 　Android视图结构　　75
6.1.1 　使用View类　　75
6.1.2 　嵌套视图：使用ViewGroup类　　76
6.2 　定义屏幕布局：使用XML　　77
6.2.1 　配置屏幕布局　　77
6.2.2 　使用线性布局　　78
6.2.3 　使用相对布局　　88
6.2.4 　滑动抽屉：扩展你的UI　　91
6.2.5 　在视图和布局中使用内外边距和外外边距　　94
6.2.6 　在View中设置内边距　　95
6.2.7 　在ViewGroup中设置外边距　　95
6.3 　小结　　95
第7章 　按钮、菜单与对话框　　97
7.1 　使用常见的UI元素　　97
7.1.1 　为布局添加图像按钮　　97
7.1.2 　为布局添加文本　　107
7.1.3 　添加图片　　108
7.2 　使用菜单　　110
7.2.1 　用XML创建菜单结构　　111
7.2.2 　定义菜单项文本　　112
7.2.3 　通过Java载入菜单结构　　115
7.2.4 　在Android模拟器中运行应用　　116
7.2.5 　让菜单发挥作用　　117
7.3 　添加对话框　　119
7.3.1 　使用自定义对话框子类　　120
7.3.2 　显示警告对话框　　120
7.4 　小结　　124
第8章 　Android图像资源介绍　　125
8.1 　图像资源简介　　125
8.1.1 　调用图片　　126
8.1.2 　核心图像资源子类　　126
8.2 　使用位图　　127
8.2.1 　PNG图片　　127
8.2.2 　JPEG和GIF图片　　128
8.3 　创建动画　　128
8.3.1 　基于帧的2D动画　　128
8.3.2 　补间动画　　136
8.4 　使用过渡　　141
8.5 　创建9-Patch自定义伸缩图片　　145
8.6 　播放视频　　150
8.6.1 　添加VideoView对象　　150
8.6.2 　为视频添加Java代码　　152
8.7 　小结　　154
第9章 　增加交互性：处理UI事件　　155
9.1 　UI事件概述　　155
9.1.1 　监听及处理事件　　155
9.1.2 　通过View类处理UI事件　　155
9.1.3 　事件回调方法　　156
9.2 　处理onClick事件　　157
9.2.1 　为UI元素实现onClick监听器　　157
9.2.2 　向活动添加onClick监听器　　158
9.3 　Android触摸屏事件：onTouch　　165
9.4 　触屏版右键点击：onLongClick　　166
9.5 　键盘事件监听器：onKeyUp和onKeyDown　　169
9.5.1 　添加用于键盘事件的XML代码　　169
9.5.2 　添加用于键盘事件的Java代码　　170
9.6 　上下文菜单：onCreateContextMenu　　171
9.6.1 　添加用于上下文菜单的XML代码　　172
9.6.2 　添加用于上下文菜单的Java代码　　173
9.7 　焦点控制　　178
9.7.1 　添加用于焦点控制的XML代码　　179
9.7.2 　添加用于焦点控制的Java代码　　182
9.7.3 　设置焦点可用性　　184
9.8 　小结　　185
第10章 　了解内容提供器　　186
10.1 　Android内容提供器概述　　186
10.1.1 　数据库和数据库管理系统　　186
10.1.2 　Android内置内容提供器　　188
10.2 　定义内容提供器　　190
10.2.1 　在Eclipse中创建内容提供器示例　　191
10.2.2 　定义安全权限　　192
10.2.3 　向联系人数据库添加数据　　195
10.3 　操作数据库　　197
10.3.1 　查询内容提供器　　197
10.3.2 　向内容提供器添加数据　　203
10.3.3 　修改内容提供器数据　　208
10.3.4 　删除内容提供器数据　　212
10.4 　小结　　217
第11章 　了解Intent和Intent过滤器　　218
11.1 　什么是Intent　　218
11.2 　通过Intent对象传递消息　　219
11.3 　Intent解析：显式Intent和隐式Intent　　221
11.3.1 　显式Intent　　221
11.3.2 　隐式Intent　　222
11.4 　在活动中使用Intent　　223
11.4.1 　编写数字时钟活动　　227
11.4.2 　连接到应用程序　　230
11.4.3 　发送Intent　　231
11.5 　Android服务：在自己的类中处理数据　　234
11.5.1 　在服务中使用Intent　　234
11.5.2 　创建服务　　237
11.5.3 　实现媒体播放功能　　241
11.5.4 　将按钮连接到服务　　241
11.5.5 　运行应用程序　　243
11.6 　在广播接收器中使用Intent　　244
11.6.1 　用XML创建定时器用户界面　　244
11.6.2 　创建一个定时广播接收器　　246
11.6.3 　配置AndroidManifest.xml文件的<receiver>标签　　247
11.6.4 　实现Intent　　248
11.6.5 　在Android 1.5模拟器中运行定时器应用程序　　252
11.7 　小结　　253
第12章 　探索未来　　254
12.1 　创建自定义部件　　254
12.2 　位置服务　　256
12.3 　Google地图　　256
12.4 　Google搜索　　259
12.5 　数据存储　　260
12.5.1 　共享配置选项　　260
12.5.2 　内部存储　　261
12.5.3 　外部存储　　261
12.5.4 　使用SQLite　　261
12.6 　设备管理：IT安全部署　　262
12.7 　用Camera类控制摄像头　　262
12.8 　3D图形：使用OpenGL ES 1.x　　262
12.9 　面部识别　　263
12.10 　音频池　　263
12.11 　媒体录制　　264
12.12 　小结　　265
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android应用开发入门
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android应用程序开发权威指南（第四版）
致谢 xxvii
作者简介 xxix
引言 1
I　 Android 平台概述 9
第1 章　 Android 简介 11
1.1　 移动软件开发简史 11
1.1.1　 遥想当年…… 11
1.1.2　“ 砖” 13
1.1.3　 无线应用协议（WAP） 15
1.1.4　 专有移动平台 17
1.2　 开放手机联盟 19
1.3　 Google 进入无线市场 19
1.3.1　 开放手机联盟的形成 20
1.3.2　 制造商：设计Android 设备 20
1.3.3　 移动运营商：提供Android 体验 21
1.3.4　 应用程序驱动设备的销售：开发Android 应用程序 22
1.3.5　 利用所有Android 设备的优势 23
1.3.6　 Android 市场：现在我们在哪里 23
1.4　 Android 平台的差异 24
1.4.1　 Android ：下一代的平台 25
1.4.2　 自由和开放的源码 26
1.4.3　 熟悉和廉价的开发工具 26
1.4.4　 合理的开发学习曲线 27
1.4.5　 功能强大的应用开发的支持 27
1.4.6　 丰富和安全的应用程序集成 28
1.4.7　 没有昂贵的开发费用 28
1.4.8　 应用程序的“自由市场” 28
1.4.9　 一个不断发展的平台 30
1.5　 Android 平台 30
1.5.1　 Android 的底层架构 31
1.5.2　 安全和权限 32
1.5.3　 探寻Android 应用程序 34
1.6　 总结 37
1.7　 小测验 38
1.8　 练习题 38
1.9　 参考内容和更多信息 38
第2 章　搭建你的Android 开发环境 39
2.1　 配置你的开发环境 39
2.1.1　 配置你的操作系统用于设备调试 42
2.1.2　 配置你的Android 进行调试 42
2.1.3　 更新Android SDK 44
2.1.4　 Android SDK 的问题 45
2.2　 探索Android SDK 45
2.2.1　 了解Android SDK 的许可协议 45
2.2.2　 阅读Android SDK 文档 47
2.2.3　 探索Android 应用框架核心部分 47
2.2.4　 探索Android 核心工具 50
2.2.5　 探索Android 示例应用程序 54
2.3　 总结 55
2.4　 小测验 56
2.5　 练习题 56
2.6　 参考资料和更多信息 56
第3 章　编写你的第一个Android 程序 57
3.1　 测试你的开发环境 57
3.1.1　 使用SDK 管理器加入Android 示例程序 58
3.1.2　 添加Snake 项目到你的Android IDE 工作区 60
3.1.3　 为你的Snake 项目创建一个AVD 63
3.1.4　 为你的Snake 项目创建一个启动配置 66
3.1.5　 在Android 模拟器中运行Snake 应用程序 68
3.2　 构建你的第一个Android 应用 70
3.2.1　 创建并配置一个新的Android 项目 71
3.2.2　 Android 应用的核心文件和目录 74
3.2.3　 为你的项目创建一个AVD 77
3.2.4　 为你的项目创建一个启动配置 77
3.2.5　 在模拟器中运行你的Android 应用 79
3.2.6　 在模拟器中调试你的Android 应用 82
3.2.7　 为你的Android 应用增加日志记录 85
3.2.8　 为你的应用程序增加媒体支持 87
3.2.9　 在你的程序中增加基于位置的服务 90
3.2.10　 在实体硬件上调试你的应用 93
3.3　 小结 95
3.4　 小测验 97
3.5　 练习题 97
3.6　 参考资料和更多信息 98
II　Android 应用程序基础 99
第4 章　了解Android 应用结构 101
4.1　 掌握重要的Android 术语 101
viii Android 应用程序开发权威指南（第四版）
4.2　 应用程序 Context 102
4.2.1　 获取应用程序Context 102
4.2.2　 使用应用程序Context 103
4.3　 使用Activity 执行应用程序任务 104
4.3.1　 Android Activity 的生命周期 105
4.4　 使用Fragment 来组织Activity 组件 110
4.5　 使用Intent 管理Activity 之间的切换 112
4.5.1　 通过Intent 切换Activity 112
4.5.2　 通过Activity 和Intent 来组织应用程序导航 115
4.6　 使用服务 116
4.7　 接收和广播Intent 117
4.8　 总结 117
4.9　 小测验 118
4.10　 练习题 118
4.11　 参考资料和更多信息 118
第5 章　使用Android 清单文件定义你的应用 119
5.1　 使用Android 清单文件配置Android 应用 119
5.1.1　 编辑Android 清单文件 120
5.2　 管理你的应用程序ID 126
5.2.1　 控制你的应用程序版本号 126
5.2.2　 设置应用程序的名称和图标 127
5.3　 设置应用程序的系统需求 127
5.3.1　 针对特定的SDK 版本 128
5.3.2　 设置应用的平台需求 131
5.3.3　 使用外部库 134
5.3.4　 其他应用程序配置和过滤器 135
5.4　 在Android 清单文件中注册Activity 135
5.4.1　 使用Intent 过滤器为你的应用指定一个主入口Activity 136
5.4.2　 配置其他的Intent 过滤器 136
5.4.3　 注册其他应用程序组件 137
5.5　 访问权限 138
5.5.1　 注册你的应用程序所需的权限 138
5.5.2　 注册你的应用其他的权限 139
5.6　 探索其他清单文件的设置 140
5.7　 总结 141
5.8　 小测验 141
5.9　 练习题 141
5.10　 参考资料和更多信息 142
第6 章　管理应用程序资源 143
6.1　 什么是资源 143
6.1.1　 存储应用程序资源 143
6.1.2　 资源类型 144
6.1.3　 以编程方式访问资源 148
6.2　 使用Android IDE 设置简单的资源值 149
6.3　 使用不同类型的资源 153
6.3.1　 使用字符串资源 153
6.3.2　 使用格式化的字符串资源 154
6.3.3　 使用带数量的字符串 156
6.3.4　 使用字符串数组 157
6.3.5　 使用布尔类型资源 158
6.3.6　 使用整型资源 159
6.3.7　 使用颜色资源 160
6.3.8　 使用尺寸资源 160
6.3.9　 可绘制资源 162
6.3.10　 使用图像 164
6.3.11　 使用颜色状态列表 166
6.3.12　 使用动画 168
6.3.13　 使用菜单 170
6.3.14　 使用XML 文件 172
6.3.15　 使用原始文件 173
6.3.16　 引用资源 174
6.3.17　 使用布局 175
6.3.18　 引用系统资源 182
6.4　 总结 183
6.5　 小测验 183
6.6　 练习题 183
6.7　 参考资料和更多信息 184
III　Android 用户界面设计要点 185
第7 章　探索用户界面构建模块 187
7.1　 Android 的视图和布局介绍 187
7.1.1　 Android 视图 187
7.1.2　 Android 控件 187
7.1.3　 Android 布局 188
7.2　 使用TextView 来显示文本给用户 189
7.2.1　 配置布局和大小 190
7.2.2　 在文本中创建上下文链接 191
7.3　 使用文本字段从用户获取数据 193
7.3.1　 使用EditText 控件获取输入文本 194
7.3.2　 使用输入过滤器限制用户的输入 195
7.3.3　 使用自动完成功能帮助用户 197
7.4　 使用Spinner 控件让用户选择 199
7.5　 使用Button 和Switch 允许用户进行简单的选择 201
7.5.1　 使用基本Button 202
7.5.2　 使用CheckBox 和ToggleButton 控件 205
7.5.3　 使用RadioGroup 和RadioButton 206
7.6　 使用Pickers 来获取用户的数据、时间和数字 209
7.7　 使用指示控件来给用户显示进度和活动 212
7.7.1　 使用ProgressBar 指示进度 212
7.7.2　 使用Activity Bars 和Activity Circles 来指示Activity 214
7.8　 使用SeekBar 调整进度 215
7.9　 其他有价值的用户界面控件 216
7.9.1　 使用RatingBar 显示评价数据 216
7.9.2　 使用Chronometer 显示时间的流逝 217
7.9.3　 显示时间 218
7.10　 总结 220
7.11　 小测验 220
7.12　 练习 220
7.13　 参考资料和更多信息 221
第8 章　布局设计 223
8.1　 在Android 中创建用户界面 223
8.1.1　 使用XML 资源文件创建布局 223
8.1.2　 使用编程方式创建布局 225
8.2　 组织你的用户界面 228
8.2.1　 使用ViewGroup 子类来设计布局 229
8.2.2　 使用ViewGroup 子类作为View 容器 229
8.3　 使用内置的布局类 230
8.3.1　 使用LinearLayout 232
8.3.2　 使用RelativeLayout 234
8.3.3　 使用FrameLayout 237
8.3.4　 使用TableLayout 240
8.3.5　 使用GridLayout 242
8.3.6　 在屏幕上使用多个布局 246
8.4　 使用容器控件类 247
8.4.1　 使用数据驱动的容器 247
8.4.2　 添加滚动支持 252
8.4.3　 探索其他View 容器 253
8.5　 总结 254
8.6　 小测验 254
8.7　 练习 255
8.8　 参考资料和更多信息 255
第9 章　用Fragment 分割用户界面 257
9.1　 理解Fragment 257
9.1.1　 了解Fragment 的生命周期 259
9.1.2　 使用特殊类型的Fragment 262
9.1.3　 设计基于Fragment 的应用 263
9.2　 使用Android 支持包 272
9.2.1　 为以前的应用添加Fragment 支持 272
9.2.2　 在新应用中使用Fragment 针对于旧平台 273
9.2.3　 将Android 支持包链接到你的项目 273
9.3　 探索嵌套的Fragment 274
9.4　 总结 275
9.5　 小测验 275
9.6　 练习 276
9.7　 参考资料和更多信息 276
第10 章　显示对话框 279
10.1　 选择你的Dialog 实现方式 279
10.2　 探索不同类型的Dialog 280
10.3　 使用Dialog 和Dialog Fragment 282
10.3.1　 跟踪Dialog 和DialogFragment 的生命周期 282
10.3.2　 使用自定义Dialog 285
10.4　 使用支持包中的Dialog Fragment 286
10.5　 总结 289
10.6　 小测验 290
10.7　 练习 290
10.8　 参考资料和更多信息 290
IV　Android 应用设计要点 293
第11 章　使用Android 首选项 295
11.1　 使用应用首选项 295
11.1.1　 确定首选项是否合适 295
11.1.2　 存储不同类型的首选项值 296
11.1.3　 创建一个Activity 私有的首选项设置 296
11.1.4　 创建多个Activity 共享的首选项设置 297
11.1.5　 搜索和读取首选项设置 297
11.1.6　 添加、更新和删除首选项设置 298
11.1.7　 首选项修改时的反应 300
11.2　 在Android 文件系统中查找首选项数据 300
11.3　 创建可管理的用户首选项 301
11.3.1　 创建一个首选项资源文件 301
11.3.2　 使用PreferenceActivity 类 304
11.3.3　 组织首选项设置的标头 308
11.4　 了解Android 应用的云存储 312
11.5　 总结 312
11.6　 小测验 312
11.7　 练习 313
11.8　 参考资料和更多信息 313
第12 章　使用文件和目录 315
12.1　 使用设备的应用程序数据 315
12.2　 实现良好的文件管理 316
12.3　 了解Android 系统的文件权限 317
12.4　 使用文件和目录 318
12.4.1　 探索Android 应用程序目录 319
12.4.2　 使用Android 文件系统上的其他目录和文件 325
12.5　 总结 327
12.6　 小测验 327
12.7　 练习 328
12.8　 参考资料和更多信息 328
第13 章　使用内容提供者 329
13.1　 探索Android 的内容提供者 329
13.1.1　 使用MediaStore 内容提供者 330
13.1.2　 使用CallLog 内容提供者 332
13.1.3　 使用浏览器内容提供者 334
13.1.4　 使用CalendarContract 内容提供者 336
13.1.5　 使用UserDictionary 内容提供者 336
13.1.6　 使用VoicemailContract 内容提供者 336
13.1.7　 使用Settings 内容提供者 337
13.1.8　 ContactsContract 内容提供者的介绍 337
13.2　 修改内容提供者数据 340
13.2.1　 添加记录 340
13.2.2　 更新记录 341
13.2.3　 删除记录 342
13.3　 使用第三方的内容提供者 343
13.4　 总结 344
13.5　 小测验 344
13.6　 练习 344
13.7　 参考资料和更多信息 345
第14 章　设计兼容的应用 347
14.1　 最大程度提供应用程序兼容性 347
14.2　 设计兼容的用户界面 350
14.2.1　 使用Fragment 351
14.2.2　 使用Android 支持库 351
14.2.3　 支持特定的屏幕类型 352
14.2.4　 使用Nine-Patch 可缩放图形 353
14.2.5　 使用“工作区块”原则 353
14.3　 提供替代应用程序资源 354
14.3.1　 了解资源是如何被解析的 355
14.3.2　 使用限定符组织替代资源 356
14.3.3　 为不同屏幕方向提供资源 361
14.3.4　 在程序中使用替代资源 363
14.3.5　 高效地组织应用程序资源 363
14.4　 针对平板、电视和其他新设备 364
14.4.1　 针对平板设备 364
14.4.2　 针对Google 电视设备 365
14.5　 针对Google Chromecast 设备 367
14.6　 总结 367
14.7　 小测验 367
14.8　 练习 368
14.9　 参考资料和更多信息 368
V　发布和部署Android 应用程序 371
第15 章　学习Android 软件开发流程 373
15.1　 移动端开发流程概述 373
15.2　 选择正确的软件方法论 374
15.2.1　 理解瀑布流（Waterfall）模式的危险性 374
15.2.2　 理解迭代的价值 375
15.3　 收集应用程序的需求 375
15.3.1　 明确项目需求 375
15.3.2　 为移动端应用程序编写用例 378
15.3.3　 结合第三方的需求和建议 379
15.3.4　 管理设备数据库 380
15.4　 评估项目风险 383
15.4.1　 确认目标设备 383
15.4.2　 获取目标设备 385
15.4.3　 判断应用程序需求的可行性 386
15.4.4　 理解质量保证（QA）的风险 387
15.5　 编写至关重要的项目文档 388
15.5.1　 为保证产品质量而制定测试计划 389
15.5.2　 为第三方提供需要的文档 389
15.5.3　 为维护和移植提供文档 390
15.6　 运用配置管理系统 390
15.6.1　 选择一个合适的源码控制系统 390
15.6.2　 实现一个可用的应用程序版本系统 390
15.7　 设计移动应用程序 391
15.7.1　 理解移动设备的资源限制 391
15.7.2　 研究通用的移动应用程序架构 391
15.7.3　 为可扩展性和可维护性而设计 392
15.7.4　 设计应用程序的互通性 394
15.8　 开发移动端应用程序 394
15.9　 测试移动端应用程序 395
15.9.1　 控制测试版的发布 395
15.10　 部署移动应用程序 396
15.10.1　 选取目标市场 397
15.11　 支持和维护移动应用程序 397
15.11.1　 跟踪并解决用户提交的宕机报告 398
15.11.2　 测试固件升级 398
15.11.3　 维护应用程序文档 398
15.11.4　 管理服务器的实时变化 398
15.11.5　 鉴别低风险的移植机会 398
15.11.6　 应用程序功能特性的选择 399
15.12　 总结 399
15.13　 小测验 399
15.14　 练习 399
15.15　 参考资料和更多信息 400
第16 章　设计和开发可靠的Andriod 应用程序 401
16.1　 设计可靠的移动应用程序的最佳实践 401
16.1.1　 满足移动端用户的需求 402
16.1.2　 为移动设备设计用户交互界面 402
16.1.3　 设计稳定并且响应迅速的移动应用程序 404
16.1.4　 设计安全的移动应用程序 405
16.1.5　 如何将应用程序利润最大化 406
16.1.6　 遵循Android 应用程序的质量指导方针 407
16.1.7　 利用第三方的质量标准 408
16.1.8　 开发易于维护和升级的移动应用程序 408
16.1.9　 利用应用程序诊断手段 409
16.1.10　 设计便于升级的应用程序 410
16.1.11　 利用Android 的工具辅助应用程序的设计 411
16.2　 避免在Android 应用程序设计中犯低级错误 411
16.3　 开发可靠移动应用程序的最佳实践 412
16.3.1　 设计适用于移动端的研发流程 412
16.3.2　 尽早并经常测试应用程序的可行性 412
16.3.3　 使用编码标准，审阅以及单元测试来改进代码质量 413
16.3.4　 处理单个设备中出现的缺陷 416
16.3.5　 利用Android 提供的工具来做开发 417
16.3.6　 避免在Android 应用程序开发中犯低级错误 417
16.4　 总结 418
16.5　 小测验 418
16.6　 练习 418
16.7　 参考资料和更多信息 419
第17 章　提升Android 应用程序的用户体验 421
17.1　 思考目标 421
17.1.1　 用户目标 422
17.1.2　 小组目标 422
17.1.3　 其他股东的目标 423
17.2　 集中研发精力的一些技巧 423
17.2.1　 人物角色 423
17.2.2　 发现和组织个体 424
17.2.3　 用例和用例图 425
17.3　 绘制应用程序的功能导航图 426
17.3.1　 Android 应用程序的导航场景 426
17.3.2　 执行任务（Tasks）以及在Back Stack 中导航 430
17.3.3　 在Fragments 间导航 430
17.3.4　 规划应用程序导航 431
17.3.5　 Android 的导航设计模式 433
17.4　 引导用户使用应用程序 438
17.4.1　 菜单 438
17.4.2　 操作栏 438
17.4.3　 对话框 443
17.4.4　 从应用程序内容中发起的操作 443
17.5　 塑造应用程序的个性 444
17.6　 针对不同屏幕的布局设计 445
17.7　 正确处理视觉反馈 446
17.8　 观察程序的可用性 446
17.8.1　 应用程序的仿制 447
17.8.2　 测试发布版本 448
17.9　 总结 448
17.10　 小测验 448
17.11　 练习 449
17.12　 参考和更多信息 449
第18 章　测试Android 应用程序 451
18.1　 测试移动应用程序的最佳实践 451
18.1.1　 设计移动应用程序的问题追踪系统 451
18.1.2　 管理测试环境 453
18.1.3　 让测试覆盖率最大化 456
18.1.4　 利用Android 的SDK 工具来做应用程序测试 464
18.1.5　 避免Android 应用程序测试中的一些低级错误 465
18.2　 Android 应用程序测试精要 466
18.2.1　 利用JUnit 进行单元测试 467
18.2.2　 PasswordMatcher 应用程序入门 468
18.2.3　 确认测试的预期结果 471
18.2.4　 创建一个Android 测试工程 472
18.2.5　 编写测试代码 479
18.2.6　 添加其他测试用例 485
18.3　 更多Android 自动化测试程序和API 488
18.4　 总结 488
18.5　 小测验 489
18.6　 练习 489
18.7　 参考资料和更多信息 489
第19 章　发布你的Android 应用程序 491
19.1　 选择正确的分发模型 491
19.1.1　 保护你的知识产权 492
19.1.2　 遵循Google Play 的政策 493
19.1.3　 向用户收费 493
19.2　 为即将发布的应用程序打包 494
19.2.1　 为打包工作准备好代码 495
19.2.2　 打包应用程序并签名 497
19.2.3　 测试用于发布的应用程序包 500
19.3　 在Google Play 中发布程序 501
19.3.1　 将你的应用程序上传到Google Play 中 505
19.3.2　 上传应用程序营销相关的资源 506
19.3.3　 配置定价和发布详情 508
19.3.4　 配置额外的应用程序选项 509
19.3.5　 管理其他开发者控制台选项 509
19.3.6　 将应用程序发布到Google Play 中 510
19.3.7　 在Google Play 中管理应用程序 510
19.4　 Google Play 平台上的“阶段性展示产品” 511
19.5　 通过Google Play 的私有渠道发布程序 512
19.6　 翻译你的应用程序 512
19.7　 通过其他方式发布应用程序 512
19.8　 自行发布应用程序 513
19.9　 总结 515
19.10　 小测验 515
19.11　 练习 516
19.12　 参考资料和更多信息 516
VI　附录 517
附录A　掌握Android 开发工具 519
A.1　 使用Android 文档 520
A.2　 利用Android 模拟器 523
A.3　 通过LogCat 查看应用程序日志 524
A.4　 利用DDMS 来调试应用程序 525
A.5　 使用Android 调试桥（ADB） 526
A.6　 使用资源编辑器和UI 设计器 527
A.7　 使用Android 的“层级浏览器” 529
A.7.1　 启动层级浏览器 531
A.7.2　 在布局视图模式下工作 531
A.7.3　 优化你的用户接口 533
A.7.4　 在“像素级”模式下工作 533
A.8　 利用Nine-Patch 可拉伸图像 534
A.9　 使用其他的Android 工具 537
A.10　 总结 540
A.11　 小测验 540
A.12　 练习 540
A.13　 参考资料和更多信息 541
附录B　快速入手指南：Android 模拟器 543
B.1　 模拟现实世界：模拟器的用途 543
B.2　 使用Android 虚拟设备 545
B.2.1　 使用Android 虚拟设备管理器 547
B.2.2　 创建一个AVD 547
B.2.3　 定制AVD 的硬件配置 549
B.3　 以特定的AVD 配置启动模拟器 550
B.3.1　 维护模拟器性能 551
B.3.2　 配置模拟器的启动参数 552
B.3.3　 启动模拟器来运行应用程序 552
B.3.4　 从Android 虚拟设备管理器中启动一个模拟器 555
B.4　 配置模拟器的GPS 位置 555
B.5　 在两个模拟器实例间互相通话 556
B.6　 在两个模拟器实例间发送短信 559
B.7　 通过控制台来与模拟器进行交互 560
B.7.1　 使用控制台来模拟来电 560
B.7.2　 使用控制台来模拟SMS 信息 560
B.7.3　 使用控制台来发送GPS 坐标 562
B.7.4　 使用控制台来监视网络状态 562
B.7.5　 使用控制台来操纵电源设置 563
B.7.6　 使用控制台的其他命令 564
B.8　 享受模拟器的功能 564
B.9　 理解模拟器的限制 565
B.10　 总结 566
B.11　 小测验 566
B.12　 练习 567
B.13　 参考资料和更多信息 567
附录C　快速入手指南：Android DDMS 569
C.1　 将DDMS 作为独立程序和Android IDE 配合使用 569
C.2　 使用DDMS 的核心功能 571
C.3　 与进程、线程和堆进行交互工作 571
C.3.1　 为Android 应用程序关联一个调试器 572
C.3.2　 终止进程 572
C.3.3　 监视Android 应用程序的线程活动 572
C.3.4　 监视堆的活动 573
C.3.5　 执行垃圾回收 574
C.3.6　 创建并使用一个HPROF 文件 575
C.4　 使用内存分配追踪器 576
C.5　 观察网络数据 577
C.6　 使用File Explorer 577
C.6.1　 浏览模拟器或者设备的文件系统 578
C.6.2　 从模拟器或者设备中复制文件 579
C.6.3　 将文件传送到模拟器或者设备中 580
C.6.4　 从模拟器或者设备中删除文件 580
C.7　 使用Emulator Control 580
C.7.1　 改变电话状态 581
C.7.2　 模拟语音来电 581
C.7.3　 模拟SMS 来信 582
C.7.4　 发送坐标修正信息 583
C.8　 使用System Information 583
C.9　 为模拟器和设备执行截屏操作 584
C.10　 使用应用程序的日志追踪功能 585
C.11　 总结 586
C.12　 小测验 586
C.13　 练习 586
C.14　 参考资料和更多信息 586
附录D　Android IDE 和Eclipse 使用技巧 589
D.1　 正确组织你的Android IDE 工作区 589
D.1.1　 集成源码控制服务 589
D.1.2　 重新调整各视图栏的位置 590
D.1.3　 最大化窗口 590
D.1.4　 最小化窗口 591
D.1.5　 并排浏览窗口 591
D.1.6　 查看同一个文件的两个不同区域 591
D.1.7　 关闭不需要的页面 593
D.1.8　 让窗口可控 593
D.1.9　 创建定制的日志过滤条件 593
D.1.10　 搜索你的工程 594
D.1.11　 组织Android IDE 任务 594
D.2　 使用Java 语言来编程 595
D.2.1　 使用自动完成功能 595
D.2.2　 创建新的类和方法 595
D.2.3　 导入（Imports）功能 596
D.2.4　 格式化代码 596
D.2.5　 为几乎所有事物重命名 597
D.2.6　 重构代码 597
D.2.7　 重新组织代码 599
D.2.8　 使用快速修正功能 599
D.2.9　 提供Javadoc 风格的文档 600
D.3　 解决某些诡异的编译错误 600
D.4　 总结 601
D.5　 小测验 601
D.6　 练习 601
D.7　 参考资料和更多信息 601
附录E　小测验答案 603
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android应用程序开发权威指南（第四版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android移动开发技术丛书 Android底层开发技术实战详解——内核、移植和驱动（第2版）
第1章　Android底层开发基础	1
1.1  什么是驱动	1
1.1.1  驱动程序的魅力	1
1.1.2  手机中的驱动程序	2
1.2  开源还是不开源的问题	2
1.2.1  雾里看花的开源	2
1.2.2  从为什么选择Java谈为什么不开源驱动程序	3
1.2.3  对驱动开发者来说是一把双刃剑	4
1.3  Android和Linux	4
1.3.1  Linux简介	4
1.3.2  Android和Linux的关系	5
1.4  简析Linux内核	7
1.4.1  内核的体系结构	7
1.4.2  和Android密切相关的Linux内核知识	9
1.5  分析Linux内核源代码很有必要	13
1.5.1  源代码目录结构	14
1.5.2  Linux 3.10的特性	16
1.5.3  浏览源代码的工具	17
1.5.4  为什么用汇编语言编写内核代码	17
1.5.5  Linux内核的显著特性	18
1.5.6  学习Linux内核的方法	26
第2章　分析Android源代码	31
2.1  搭建Linux开发环境和工具	31
2.1.1  搭建Linux开发环境	31
2.1.2  设置环境变量	32
2.1.3  安装编译工具	32
2.2  获取Android源代码	33
2.3  分析并编译Android源代码	35
2.3.1  Android源代码的结构	35
2.3.2  编译Android源代码	40
2.3.3  运行Android源代码	42
2.3.4  实践演练——演示编译Android程序的两种方法	43
2.4  编译Android Kernel	46
2.4.1  获取Goldfish内核代码	47
2.4.2  获取MSM内核代码	49
2.4.3  获取OMAP内核代码	49
2.4.4  编译Android的Linux内核	50
2.5  运行模拟器	51
2.5.1  Linux环境下运行模拟器的方法	52
2.5.2  模拟器辅助工具——adb	53
第3章　驱动需要移植	56
3.1  驱动开发需要做的工作	56
3.2  Android移植	58
3.2.1  移植的任务	59
3.2.2  移植的内容	59
3.2.3  驱动开发的任务	60
3.3  Android对Linux的改造	60
3.3.1  Android对Linux内核文件的改动	61
3.3.2  为Android构建Linux的操作系统	62
3.4  内核空间和用户空间接口是一个媒介	63
3.4.1  内核空间和用户空间的相互作用	63
3.4.2  系统和硬件之间的交互	63
3.4.3  使用Relay实现内核到用户空间的数据传输	65
3.5  三类驱动程序	68
3.5.1  字符设备驱动程序	68
3.5.2  块设备驱动程序	76
3.5.3  网络设备驱动程序	80
第4章　HAL层深入分析	81
4.1  认识HAL层	81
4.1.1  HAL层的发展	81
4.1.2  过去和现在的区别	83
4.2  分析HAL层源代码	83
4.2.1  分析HAL moudle	83
4.2.2  分析mokoid工程	87
4.3  总结HAL层的使用方法	95
4.4  传感器在HAL层的表现	97
4.4.1  HAL层的Sensor代码	98
4.4.2  总结Sensor编程的流程	99
4.4.3  分析Sensor源代码看Android API 与硬件平台的衔接	100
4.5  移植总结	110
4.5.1  移植各个Android部件的方式	110
4.5.2  移植技巧之一——不得不说的辅助工作	111
4.6  开发一个硬件驱动程序	117
4.6.1  源代码文件wuming.h和wuming.c	117
4.6.2  编译配置处理	123
4.6.3  修改配置文件	124
4.6.4  验证驱动程序	125
第5章　分析Goldfish内核系统	127
5.1  Android专有驱动介绍	127
5.2  Goldfish基础	128
5.3  Android专用驱动简介	130
5.3.1  Logger驱动介绍	130
5.3.2  Low Memory Killer组件介绍	130
5.3.3  Timed Output驱动介绍	131
5.3.4  Timed Gpio驱动介绍	131
5.3.5  Ram Console驱动介绍	132
5.4  Ashmem驱动介绍	133
5.5  Pmem驱动介绍	133
5.6  Alarm驱动程序	134
5.7  USB Gadget驱动程序	134
5.8  Paranoid驱动介绍	135
5.9  Goldfish的设备驱动	136
第6章　MSM内核和驱动解析	139
6.1  MSM基础	139
6.1.1  常见MSM处理器产品	139
6.1.2  Snapdragon内核介绍	140
6.2  移植MSM内核简介	141
6.3  移植MSM	143
6.3.1  Makefile文件	143
6.3.2  驱动和组件	144
6.3.3  设备驱动	146
6.3.4  高通特有的组件	148
第7章　OMAP内核和驱动解析	151
7.1  OMAP基础	151
7.1.1  OMAP简析	151
7.1.2  常见OMAP处理器产品	151
7.1.3  开发平台	152
7.2  OMAP内核	152
7.3  移植OMAP体系结构	154
7.3.1  移植OMAP平台	154
7.3.2  移植OMAP处理器	157
7.4  移植Android专用驱动和组件	161
7.5  OMAP的设备驱动	162
7.5.1  显示驱动程序	162
7.5.2  I2C总线驱动程序	162
7.5.3  摄像头和视频输出驱动程序	164
7.5.4  触摸屏和键盘驱动程序	165
7.5.5  实时时钟驱动程序	166
7.5.6  音频驱动程序	166
7.5.7  蓝牙驱动程序	166
第8章　显示系统驱动应用	167
8.1  显示系统介绍	167
8.2  分析内核层	168
8.2.1  分析接口文件fb.h	168
8.2.2  分析内核实现文件fbmem.c	171
8.3  分析硬件抽象层	195
8.3.1  分析头文件	195
8.3.2  分析硬件帧缓冲区	197
8.3.3  实现缓冲区的分配	199
8.3.4  显示缓冲映射	200
8.3.5  分析管理库文件LayerBuffer.cpp	201
8.4  分析显示系统的驱动程序	202
8.4.1  Goldfish中的FrameBuffer驱动程序	203
8.4.2  使用Gralloc模块的驱动程序	205
8.4.3  分析MSM高通处理器中的显示驱动实现	215
8.4.4  分析OMAP处理器中的显示驱动实现	225
第9章　输入系统驱动应用	228
9.1  输入系统介绍	228
9.1.1  Android输入系统结构元素介绍	228
9.1.2  移植Android输入系统时的工作	229
9.2  分析Input（输入）系统驱动	230
9.2.1  分析头文件	230
9.2.2  分析核心文件input.c	234
9.2.3  分析event机制	249
9.3  分析硬件抽象层	251
9.3.1  分析文件KeycodeLabels.h	252
9.3.2  分析文件KeyCharacterMap.h	256
9.3.3  分析Kl格式文件	257
9.3.4  分析kcm格式文件	258
9.3.5  分析文件EventHub.cpp	258
第10章　振动器系统驱动	263
10.1  振动器系统结构	263
10.2  分析硬件抽象层	265
10.3  分析JNI层部分	266
10.4  分析Java层部分	267
10.5  实现移植工作	271
10.5.1  移植振动器驱动程序	271
10.5.2  实现硬件抽象层	271
10.6  在MSM平台实现振动器驱动	272
第11章　音频系统驱动	276
11.1  音频系统结构	276
11.2  分析音频系统的层次	277
11.2.1  层次说明	277
11.2.2  Media库中的Audio框架	278
11.2.3  本地代码	280
11.2.4  分析JNI代码	283
11.2.5  Java层代码简介	284
11.3  移植Audio系统的工作	285
11.3.1  我们的工作	285
11.3.2  分析硬件抽象层	285
11.3.3  分析AudioFlinger中的Audio硬件抽象层的实现	287
11.3.4  真正实现Audio硬件抽象层	293
11.4  在MSM平台实现Audio驱动系统	293
11.4.1  实现Audio驱动程序	293
11.4.2  实现硬件抽象层	294
第12章　视频输出系统驱动	299
12.1  视频输出系统结构	299
12.2  需要移植的部分	301
12.3  分析硬件抽象层	301
12.3.1  Overlay系统硬件抽象层的接口	301
12.3.2  实现Overlay系统的硬件抽象层	304
12.3.3  实现接口	305
12.4  实现Overlay硬件抽象层	306
12.5  在OMAP平台实现Overlay系统	307
12.5.1  实现输出视频驱动程序	307
12.5.2  实现Overlay硬件抽象层	309
12.6  系统层调用Overlay HAL的架构	314
12.6.1  调用Overlay HAL的架构的流程	314
12.6.2  S3C6410 Android Overlay的测试代码	317
第13章　OpenMax多媒体框架	320
13.1  OpenMax基本层次结构	320
13.2  分析OpenMax框架构成	321
13.2.1  OpenMax总体层次结构	321
13.2.2  OpenMax IL层的结构	322
13.2.3  Android中的OpenMax	325
13.3  实现OpenMax IL层接口	325
13.3.1  OpenMax IL层的接口	325
13.3.2  在OpenMax IL层中需要做什么	331
13.3.3  研究Android中的OpenMax适配层	332
13.4  在OMAP平台实现OpenMax IL	334
13.4.1  实现文件	334
13.4.2  分析TI OpenMax IL的核心	335
13.4.3  实现TI OpenMax IL组件实例	338
第14章　多媒体插件框架	343
14.1  Android多媒体插件	343
14.2  需要移植的内容	344
14.3  OpenCore引擎	345
14.3.1  OpenCore层次结构	345
14.3.2  OpenCore代码结构	346
14.3.3  OpenCore编译结构	347
14.3.4  OpenCore OSCL	351
14.3.5  实现OpenCore中的OpenMax部分	353
14.3.6  OpenCore的扩展	366
14.4  Stagefright引擎	371
14.4.1  Stagefright代码结构	372
14.4.2  Stagefright实现OpenMax接口	372
14.4.3  Video Buffer传输流程	376
第15章　传感器系统	381
15.1  传感器系统的结构	381
15.2  分析需要移植的内容	383
15.2.1  移植驱动程序	383
15.2.2  移植硬件抽象层	384
15.2.3  实现上层部分	385
15.3  在模拟器中实现传感器驱动	389
第16章　照相机系统	395
16.1  Camera系统的结构	395
16.2  分析需要移植的内容	397
16.3  移植和调试	398
16.3.1  V4L2驱动程序	398
16.3.2  硬件抽象层	405
16.4  实现Camera系统的硬件抽象层	409
16.4.1  Java程序部分	409
16.4.2  Camera的Java本地调用部分	410
16.4.3  Camera的本地库libui.so	411
16.4.4  Camera服务libcameraservice.so	412
16.5  在MSM平台实现Camera驱动系统	416
16.6  在OMAP平台实现Camera驱动系统	419
第17章　Wi-Fi系统、蓝牙系统和GPS系统	421
17.1  Wi-Fi系统	421
17.1.1  Wi-Fi系统的结构	421
17.1.2  需要移植的内容	423
17.1.3  移植和调试	423
17.1.4  OMAP平台实现Wi-Fi	430
17.1.5  配置Wi-Fi的流程	432
17.1.6  具体演练——在Android下实现Ethernet	435
17.2  蓝牙系统	436
17.2.1  蓝牙系统的结构	437
17.2.2  需要移植的内容	438
17.2.3  具体移植	439
17.2.4  MSM平台的蓝牙驱动	441
17.3  定位系统	443
17.3.1  定位系统的结构	443
17.3.2  分析需要移植的内容	445
17.3.3  分析驱动程序	445
17.3.4  分析硬件抽象层	445
17.3.5  分析上层应用部分	448
第18章　电话系统	457
18.1  电话系统基础	457
18.1.1  电话系统简介	457
18.1.2  电话系统结构	459
18.2  需要移植的内容	460
18.3  移植和调试	460
18.3.1  驱动程序	461
18.3.2  RIL接口	462
18.4  电话系统实现流程分析	465
18.4.1  初始启动流程	465
18.4.2  request流程	467
18.4.3  response流程	470
第19章　分析时钟系统驱动	472
19.1  Alarm系统基础	472
19.1.1  Alarm层次结构介绍	472
19.1.2  我们需要移植的内容	474
19.2  分析RTC驱动程序	474
19.3  分析Alarm驱动程序	475
19.3.1  分析文件android_alarm.h	475
19.3.2  分析文件alarm.c	476
19.3.3  分析文件alarm-dev.c	488
19.4  分析JNI层	497
19.5  分析Java层	498
19.5.1  分析AlarmManagerService类	499
19.5.2  分析AlarmManager类	508
19.6  模拟器环境的具体实现	509
第20章　分析USB Gadget驱动	511
20.1  分析Linux内核的USB驱动程序	511
20.1.1  USB设备基础	511
20.1.2  分析USB 和sysfs的联系	516
20.1.3  分析urb通信方式	518
20.1.4  分析USB驱动的例程	524
20.2  分析USB Gadget驱动	536
20.2.1  分析软件结构	536
20.2.2  层次整合	546
20.2.3  USB设备枚举	557
第21章　其他系统	573
21.1  Lights光系统	573
21.1.1  Lights光系统的结构	573
21.1.2  需要移植的内容	574
21.1.3  移植和调试	575
21.1.4  MSM平台实现光系统	577
21.2  Battery电池系统	577
21.2.1  Battery系统的结构	578
21.2.2  需要移植的内容	579
21.2.3  移植和调试	579
21.2.4  在模拟器中实现电池系统	582
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android移动开发技术丛书 Android底层开发技术实战详解——内核、移植和驱动（第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android进阶解密
第1章  Android系统架构  1
1.1  Android系统架构  1
1.2  Android系统源码目录  4
1.2.1  整体结构  4
1.2.2  应用层部分  5
1.2.3  应用框架层部分  6
1.2.4  C/C++程序库部分  6
1.3  源码阅读  7
1.3.1  在线阅读  7
1.3.2  使用Source Insight  9
1.4  本章小结  12
第2章  Android系统启动  13
2.1  init进程启动过程  13
2.1.1  引入init进程  13
2.1.2  init进程的入口函数  14
2.1.3  解析init.rc  17
2.1.4  解析Service类型语句  19
2.1.5  init启动Zygote  20
2.1.6  属性服务  23
2.1.7  init进程启动总结  27
2.2  Zygote进程启动过程  27
2.2.1  Zygote概述  28
2.2.2  Zygote启动脚本  28
2.2.3  Zygote进程启动过程介绍  30
2.2.4  Zygote进程启动总结  38
2.3  SystemServer处理过程  39
2.3.1  Zygote处理SystemServer进程  39
2.3.2  解析SystemServer进程  44
2.3.3  SystemServer进程总结  48
2.4  Launcher启动过程  48
2.4.1  Launcher概述  48
2.4.2  Launcher启动过程介绍  49
2.4.3  Launcher中应用图标显示过程  54
2.5  Android系统启动流程  59
2.6  本章小结  60
第3章  应用程序进程启动过程  61
3.1  应用程序进程简介  61
3.2  应用程序进程启动过程介绍  62
3.2.1  AMS发送启动应用程序进程请求  62
3.2.2  Zygote接收请求并创建应用程序进程  68
3.3  Binder线程池启动过程  75
3.4  消息循环创建过程  78
3.5  本章小结  80
第4章  四大组件的工作过程  81
4.1  根Activity的启动过程  82
4.1.1  Launcher请求AMS过程  82
4.1.2  AMS到ApplicationThread的调用过程  85
4.1.3  ActivityThread启动Activity的过程  94
4.1.4  根Activity启动过程中涉及的进程  99
4.2  Service的启动过程  101
4.2.1  ContextImpl到AMS的调用过程  101
4.2.2  ActivityThread启动Service  103
4.3  Service的绑定过程  110
4.3.1  ContextImpl到AMS的调用过程  111
4.3.2  Service的绑定过程  112
4.4  广播的注册、发送和接收过程  122
4.4.1  广播的注册过程  122
4.4.2  广播的发送和接收过程  127
4.5  Content Provider的启动过程  137
4.5.1  query方法到AMS的调用过程  137
4.5.2  AMS启动Content Provider的过程  143
4.6  本章小结  148
第5章  理解上下文Context  149
5.1  Context的关联类  149
5.2  Application Context的创建过程  151
5.3  Application Context的获取过程  156
5.4  Activity的Context创建过程  156
5.5  Service的Context创建过程  161
5.6  本章小结  163
第6章  理解ActivityManagerService  164
6.1  AMS家族  164
6.1.1  Android 7.0的AMS家族  164
6.1.2  Android 8.0的AMS家族  170
6.2  AMS的启动过程  171
6.3  AMS与应用程序进程  174
6.4  AMS重要的数据结构  176
6.4.1  解析ActivityRecord  177
6.4.2  解析TaskRecord  177
6.4.3  解析ActivityStack  178
6.5  Activity栈管理  181
6.5.1  Activity任务栈模型  181
6.5.2  Launch Mode  182
6.5.3  Intent的FLAG  182
6.5.4  taskAffinity  185
6.6  本章小结  186
第7章  理解WindowManager  187
7.1  Window、WindowManager和WMS  187
7.2  WindowManager的关联类  188
7.3  Window的属性  193
7.3.1  Window的类型和显示次序  193
7.3.2  Window的标志  195
7.3.3  软键盘相关模式  196
7.4  Window的操作  196
7.4.1  系统窗口的添加过程  197
7.4.2  Activity的添加过程  202
7.4.3  Window的更新过程  203
7.5  本章小结  206
第8章  理解WindowManagerService  207
8.1  WMS的职责  207
8.2  WMS的创建过程  209
8.3  WMS的重要成员  217
8.4  Window的添加过程（WMS处理部分）  219
8.5  Window的删除过程  225
8.6  本章小结  230
第9章  JNI原理  231
9.1  系统源码中的JNI  232
9.2  MediaRecorder框架中的JNI  233
9.2.1  Java Framework层的MediaRecorder  233
9.2.2  JNI层的MediaRecorder  234
9.2.3  Native方法注册  235
9.3  数据类型的转换  239
9.3.1  基本数据类型的转换  240
9.3.2  引用数据类型的转换  240
9.4  方法签名  242
9.5  解析JNIEnv  244
9.5.1  jfieldID和jmethodID  245
9.5.2  使用jfieldID和jmethodID  247
9.6  引用类型  249
9.6.1  本地引用  249
9.6.2  全局引用  249
9.6.3  弱全局引用  250
9.7  本章小结  251
第10章  Java虚拟机  252
10.1  概述  252
10.1.1  Java虚拟机家族  253
10.1.2  Java虚拟机执行流程  253
10.2  Java虚拟机结构  254
10.2.1  Class文件格式  255
10.2.2  类的生命周期  256
10.2.3  类加载子系统  257
10.2.4  运行时数据区域  258
10.3  对象的创建  260
10.4  对象的堆内存布局  262
10.5  oop-klass模型  263
10.6  垃圾标记算法  266
10.6.1  Java中的引用  266
10.6.2  引用计数算法  267
10.6.3  根搜索算法  269
10.7  Java对象在虚拟机中的生命周期  270
10.8  垃圾收集算法  271
10.8.1  标记—清除算法  271
10.8.2  复制算法  272
10.8.3  标记—压缩算法  273
10.8.4  分代收集算法  274
10.9  本章小结  275
第11章  Dalvik和ART  276
11.1  Dalvik虚拟机  276
11.1.1  DVM与JVM的区别  276
11.1.2  DVM架构  278
11.1.3  DVM的运行时堆  280
11.1.4  DVM的GC日志  280
11.2  ART虚拟机  281
11.2.1  ART与DVM的区别  281
11.2.2  ART的运行时堆  282
11.2.3  ART的GC日志  283
11.3  DVM和ART的诞生  285
11.4  本章小结  288
第12章  理解ClassLoader  289
12.1  Java中的ClassLoader  289
12.1.1  ClassLoader的类型  289
12.1.2  ClassLoader的继承关系  291
12.1.3  双亲委托模式  292
12.1.4  自定义ClassLoader  295
12.2  Android中的ClassLoader  298
12.2.1  ClassLoader的类型  298
12.2.2  ClassLoader的继承关系  300
12.2.3  ClassLoader的加载过程  302
12.2.4  BootClassLoader的创建  306
12.2.5  PathClassLoader的创建  309
12.3  本章小结  311
第13章  热修复原理  312
13.1  热修复的产生  312
13.2  热修复框架的种类和对比  313
13.3  资源修复  314
13.3.1  Instant Run概述  314
13.3.2  Instant Run的资源修复  315
13.4  代码修复  318
13.4.1  类加载方案  319
13.4.2  底层替换方案  321
13.4.3  Instant Run方案  322
13.5  动态链接库的修复  323
13.5.1  System的load和loadLibarary方法  323
13.5.2  nativeLoad方法分析  327
13.6  本章小结  333
第14章  Hook技术  334
14.1  Hook技术概述  334
14.2  Hook技术分类  336
14.3  代理模式  336
14.3.1  代理模式简单实现  337
14.3.2  动态代理的简单实现  338
14.4  Hook startActivity方法  339
14.4.1  Hook Activity的startActivity方法  340
14.4.2  Hook Context的startActivity方法  343
14.4.3  Hook startActivity总结  344
14.5  本章小结  345
第15章  插件化原理  346
15.1  动态加载技术  346
15.2  插件化的产生  347
15.2.1  应用开发的痛点和瓶颈  347
15.2.2  插件化思想  348
15.2.3  插件化定义  350
15.3  插件化框架对比  351
15.4  Activity插件化  352
15.4.1  Activity的启动过程回顾  352
15.4.2  Hook IActivityManager方案实现  354
15.4.3  Hook Instrumentation方案实现  364
15.4.4  总结  367
15.5  Service插件化  368
15.5.1  插件化方面Service与Activity的不同  368
15.5.2  代理分发实现  370
15.6  ContentProvider插件化  376
15.6.1  ContentProvider的启动过程回顾  376
15.6.2  VirtualApk的实现  377
15.7  BroadcastReceiver的插件化  385
15.7.1  广播插件化思路  386
15.7.2  VirtualApk的实现  386
15.8  资源的插件化  387
15.8.1  系统资源加载  387
15.8.2  VirtualApk实现  389
15.9  so的插件化  390
15.10  本章小结  393
第16章  绘制优化  394
16.1  绘制性能分析  394
16.1.1  绘制原理  395
16.1.2  Profile GPU Rendering  396
16.1.3  Systrace  398
16.1.4  Traceview  404
16.2  布局优化  407
16.2.1  布局优化工具  407
16.2.2  布局优化方法  411
16.2.3  避免GPU过度绘制  419
16.3  本章小结  420
第17章  内存优化  421
17.1  避免可控的内存泄漏  421
17.1.1  什么是内存泄漏  421
17.1.2  内存泄漏的场景  422
17.2  Memory Monitor  428
17.2.1  使用Memory Monitor  429
17.2.2  大内存申请与GC  430
17.2.3  内存抖动  430
17.3  Allocation Tracker  430
17.3.1  使用Allocation Tracker  431
17.3.2  alloc文件分析  431
17.4  Heap Dump  434
17.4.1  使用Heap Dump  434
17.4.2  检测内存泄漏  436
17.5  内存分析工具MAT  438
17.5.1  生成hprof文件  438
17.5.2  MAT分析hprof文件  440
17.6  LeakCanary  448
17.6.1  使用LeakCanary  449
17.6.2  LeakCanary应用举例  449
17.7  本章小结  453
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android进阶解密
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android开发权威指南
第1章 初识Android平台 1
1.1 Android简介 1
1.2 Android的制胜法宝 2
1.3 Android的版本发展历程 3
1.3.1 Android1.5（纸杯蛋糕） 3
1.3.2 Android1.6（甜甜圈） 4
1.3.3 Android2.1（松饼） 4
1.3.4 Android2.2（冻酸奶） 5
1.3.5 Android2.3（姜饼） 5
1.3.6 Android3.0（蜂巢） 6
1.3.7 Android4.0（冰激凌三明治） 6
1.3.8 Android4.1/4.2（果冻豆） 7
1.4 Android的系统架构 8
1.5 小结 9
第2章 搭建Android开发和测试环境 10
2.1 搭建Android开发环境需要些什么 10
2.2 安装Java开发环境 10
2.2.1 安装JDK 11
2.2.2 安装和配置Eclipse 11
2.3 安装Android开发环境 12
2.3.1 下载和安装AndroidSDK 13
2.3.2 下载和安装AndroidNDK 13
2.3.3 安装和配置Eclipse插件：ADT 14
2.4 配置Android测试环境 15
2.4.1 建立Android虚拟设备（AVD） 15
2.4.2 启动Android模拟器 16
2.4.3 安装真机测试环境 17
2.5 小结 18
第3章 第一个Android应用程序 19
3.1 从第一个Android程序中可以学到什么 19
3.2 建立Android工程 19
3.3 Android工程的结构 21
3.4 在窗口上放两个按钮 22
3.5 编写窗口类 23
3.6 修改字符串资源 24
3.7 运行Android应用程序 25
3.8 调试Android应用程序 27
3.9 签名Android应用程序 27
3.10 小结 29
第4章 Android应用程序架构 30
4.1 Android应用程序中的资源 30
4.1.1 资源存放在哪里 30
4.1.2 资源的基本使用方法 30
4.2 Android的应用程序组件 32
4.2.1 窗口（Activity）组件 32
4.2.2 服务（Service）组件 32
4.2.3 广播接收者（Broadcastreceivers）组件 33
4.2.4 内容提供者（ContentProvider）组件 33
4.3 AndroidManifest.xml文件的结构 33
4.4 小结 34
第5章 窗口（Activity）与视图（View） 35
5.1 声明和使用Activity 35
5.1.1 Activity的基本用法 35
5.1.2 同时适合手机和平板电脑的窗口风格 38
5.2 Activity的生命周期 40
5.3 窗口的常用事件 43
5.3.1 设置窗口标题事件（onTitleChanged） 44
5.3.2 键盘按下和抬起事件（onKeyDown和onKeyUp） 45
5.3.3 任意情况下捕捉键盘事件（dispatchKeyEvent） 48
5.3.4 回退事件（onBackPressed） 49
5.3.5 按键长按事件（onKeyLongPress） 50
5.3.6 屏幕触摸事件（onTouchEvent） 50
5.3.7 窗口获得焦点事件（onWindowFocusChanged） 51
5.4 在不同Activity之间传递数据 52
5.4.1 使用Intent传递数据 53
5.4.2 使用静态变量传递数据 54
5.4.3 使用剪贴板传递数据 55
5.4.4 使用全局对象传递数据 57
5.5 从Activity返回数据 59
5.6 视图（View） 61
5.6.1 视图简介 61
5.6.2 使用XML布局文件定义视图 61
5.6.3 在代码中控制视图 62
5.7 显示系统窗口 64
5.7.1 直接拨号 65
5.7.2 将电话号传入拨号程序 65
5.7.3 调用拨号程序 65
5.7.4 浏览网页 65
5.7.5 查看联系人 66
5.7.6 显示系统设置界面（设置主界面、Wi—Fi设置界面） 66
5.7.7 启动处理音频的程序 66
5.7.8 回到Home窗口（相当于按Home键） 66
5.8 与Activity相关的技巧与特效 67
5.8.1 全屏显示（隐藏标题栏和状态栏） 67
5.8.2 定制窗口标题栏 71
5.8.3 为程序添加Splash 75
5.8.4 改变窗口大小、位置和透明度 76
5.8.5 按两次关闭窗口 79
5.8.6 关闭所有的窗口 79
5.8.7 窗口截屏 80
5.9 小结 82
第6章 Intent与IntentFilter 83
6.1 Android系统的信使：Intent 83
6.2 Intent对象 84
6.2.1 Intent对象可以封装和传递哪些信息 84
6.2.2 组件名（Componentname） 84
6.2.3 动作（Action） 85
6.2.4 种类（Category） 86
6.2.5 数据（Data） 87
6.2.6 附加数据（Extra） 88
6.2.7 标志（Flags） 89
6.3 显式和隐式访问窗口 89
6.4 跨应用程序访问窗口 90
6.5 Android系统的过滤机制大揭秘 96
6.5.1 过滤条件的设置 96
6.5.2 过滤器的筛选规则 97
6.5.3 示例：过滤机制应用演示 101
6.6 Android源代码与过滤器 104
6.6.1 系统内置程序有哪些窗口可以利用 104
6.6.2 显示计算器（Calculator） 105
6.6.3 用浏览器（Browser）显示网页 106
6.6.4 拨打电话（Phone）与授权 108
6.7 获取第三方程序中可调用的窗口 109
6.8 传递附加数据（Extra） 111
6.9 解析数据 113
6.10 小结 114
第7章 窗口（Activity）高级技术 115
7.1 ActivityXML属性详解 115
7.1.1 设置Activity的基本信息 115
7.1.2 屏幕方向切换（android：screenOrientation） 117
7.1.3 阻止Activity销毁和重建（android：configChanges） 119
7.1.4 允许Activity被实例化（android：enabled） 123
7.1.5 在最近应用列表中显示（android：excludeFromRecents） 124
7.1.6 允许其他程序访问当前窗口（android：exported） 124
7.1.7 硬件加速（android：hardwareAccelerated） 125
7.1.8 在多进程中创建窗口实例（android：multiprocess） 125
7.1.9 无法返回的Activity（android：noHistory） 125
7.1.10 指定要返回的窗口（android：parentActivityName） 126
7.1.11 使窗口受到权限的保护（android：permission） 126
7.1.12 改变窗口所在的进程（android：process） 127
7.1.13 不保存窗口的状态（android：stateNotNeeded） 129
7.1.14 窗口的主题（android：theme） 129
7.1.15 扩展窗口UI（android：uiOptions） 129
7.1.16 设置输入法显示模式（android：windowSoftInputMode） 130
7.2 深入探索Activity从创建到销毁的过程 130
7.2.1 任务（Task）与回退栈（BackStack） 131
7.2.2 保存窗口（Activity）状态 133
7.2.3 管理任务和回退栈 134
7.2.4 Activity的4种创建模式 135
7.2.5 用Java代码设置窗口创建模式 141
7.2.6 窗口的乾坤大挪移（affinity） 144
7.2.7 销毁不再使用的窗口 147
7.3 Activity的别名 149
7.4 小结 151
第8章 布局 152
8.1 Android的五大布局 152
8.1.1 框架布局（FrameLayout） 152
8.1.2 线性布局（LinearLayout） 154
8.1.3 相对布局（RelativeLayout） 158
8.1.4 表格布局（TableLayout） 159
8.1.5 绝对布局（AbsoluteLayout） 160
8.2 属性资源与Android命名空间 160
8.3 布局属性 162
8.4 布局高级技术 163
8.4.1 布局别名 163
8.4.2 重用布局 164
8.4.3 优化布局 166
8.4.4 动态装载布局 167
8.4.5 动态设置布局属性 169
8.4.6 从右到左布局（RTLLayout） 169
8.5 小结 170
第9章 菜单 171
9.1 菜单的基本用法 171
9.1.1 创建选项菜单（OptionsMenu） 171
9.1.2 关联Activity 173
9.1.3 响应菜单的单击动作 173
9.1.4 动态添加、修改和删除选项菜单 174
9.1.5 带复选框和选项按钮的子菜单 175
9.1.6 上下文菜单 176
9.1.7 菜单事件 177
9.1.8 从菜单资源中装载菜单 177
9.2 菜单特效 177
9.2.1 自定义菜单 178
9.2.2 模拟UCWeb菜单效果 180
9.3 小结 184
第10章 Android的资源详解（一） 185
10.1 创建资源 185
10.1.1 手工创建资源文件 185
10.1.2 用ADT模板创建本地化图标资源 186
10.1.3 用ADT模板创建XML文件资源 188
10.2 使用资源 188
10.2.1 生成资源类文件（R.java） 188
10.2.2 从XML文件中访问资源 190
10.2.3 使用Java代码访问资源 191
10.2.4 Java反射技术与枚举资源 192
10.3 字符串（String）资源 193
10.3.1 普通字符串 193
10.3.2 字符串数组 194
10.3.3 复数字符串 194
10.3.4 在字符串中使用引号 195
10.3.5 用占位符格式化字符串 195
10.3.6 用HTML标签格式化字符串资源 195
10.4 值（values）资源 196
10.4.1 整数（Integer）资源 196
10.4.2 尺寸（Dimension）资源 197
10.4.3 布尔（Boolean）资源 198
10.4.4 颜色（Color）资源 198
10.4.5 ID资源 199
10.4.6 整数数组（Integer—Array）资源 200
10.4.7 类型数组（Typed—Array）资源 200
10.5 菜单（menu）资源 200
10.6 图像（drawable）资源 203
10.6.1 普通图像资源 203
10.6.2 XML图像资源 204
10.6.3 Nine—Patch图像资源 204
10.6.4 XMLNine—Patch图像资源 205
10.6.5 图层（Layer）资源 205
10.6.6 图像状态（State）资源 206
10.6.7 图像级别（Level）资源 207
10.6.8 淡入淡出（Cross—fade）资源 208
10.6.9 嵌入（Inset）图像资源 210
10.6.10 剪切（Clip）图像资源 210
10.6.11 外形（Shape）资源 211
10.7 小结 212
第11章 Android的资源详解（二） 213
11.1 动画资源 213
11.1.1 属性（Property）动画 213
11.1.2 帧（Frame）动画 215
11.1.3 移动补间（TranslateTween）动画 217
11.1.4 循环向右移动的EditText与上下弹跳的球 218
11.1.5 缩放补间（ScaleTween）动画 220
11.1.6 跳动的心 221
11.1.7 旋转补间（RotateTween）动画 222
11.1.8 旋转的星系 222
11.1.9 透明度补间（AlphaTween）动画 223
11.1.10 投掷炸弹 224
11.1.11 震动渲染器（ShakeInterpolator） 226
11.1.12 自定义渲染器（Interpolator） 227
11.2 风格（Style）资源与主题（Theme） 229
11.3 小结 232
第12章 资源的本地化 233
12.1 建立本地化的资源目录 233
12.2 资源目录的命名规则 237
12.3 建立别名资源 237
12.3.1 图像别名资源 237
12.3.2 布局别名资源 238
12.3.3 字符串别名资源 238
12.3.4 其他简单值别名资源 238
12.4 资源目录的优先级 238
12.5屏幕适配 239
12.5.1 屏幕适配要考虑的因素 239
12.5.2 适配不同屏幕可以采用的规则 241
12.5.3 屏幕尺寸和屏幕密度 241
12.5.4 位置、尺寸和字体应使用屏幕密度单位 244
12.5.5 与屏幕适配有关的标识符 244
12.5.6 影响屏幕适配的重要因素：布局和图像 245
12.5.7 典型的屏幕适配案例 246
12.5.8 在GooglePlay上限制屏幕尺寸和屏幕密度 247
12.5.9 在Android模拟器上测试各种屏幕尺寸和密度 248
12.6 小结 248
第13章 Android的控件详解（一） 249
13.1 显示文本的控件（TextView） 249
13.1.1 显示富文本（URL、不同大小、字体、颜色的文本） 250
13.1.2 用标签在TextView控件上显示图像 252
13.1.3 单击链接弹出Activity 254
13.1.4 为指定文本添加背景 256
13.2 编辑文本的控件（EditText） 258
13.2.1 像QQ一样输入表情图像 259
13.2.2 在EditText中输入特定的字符 260
13.2.3 AutoCompleteTextView（自动完成输入内容的控件） 261
13.3 按钮（Button）和复选框（Checkbox）控件 263
13.3.1 Button（普通按钮控件） 263
13.3.2 图文混排的按钮 265
13.3.3 ImageButton（图像按钮控件） 266
13.3.4 RadioButton（选项按钮控件） 267
13.3.5 ToggleButton（开关状态按钮控件） 267
13.3.6 CheckBox（复选框控件） 268
13.4 图像控件（ImageView） 270
13.4.1 ImageView控件的基本用法 270
13.4.2 显示指定区域的图像 270
13.4.3 缩放和旋转图像 272
13.5 时间与日期控件 273
13.5.1 DatePicker（输入日期的控件） 273
13.5.2 TimePicker（输入时间的控件） 274
13.5.3 DatePicker、TimePicker与TextView同步显示日期和时间 274
13.5.4 AnalogClock和DigitalClock（显示时钟的控件） 275
13.6 小结 275
第14章 Android的控件详解（二） 276
14.1 进度条控件 276
14.1.1 ProgressBar（进度条控件） 276
14.1.2 SeekBar（拖动条控件） 278
14.1.3 设置ProgressBar和SeekBar的颜色及背景图 278
14.1.4 RatingBar（评分控件） 281
14.2 列表控件 282
14.2.1 ListView（普通列表控件） 282
14.2.2 为ListView列表项添加复选框和选项按钮 285
14.2.3 对列表项进行增、删、改操作 286
14.2.4 改变列表项的背景色 290
14.2.5 ListActivity（封装ListView的Activity） 290
14.2.6 ExpandableListView（可扩展的列表控件） 291
14.2.7 Spinner（下拉列表控件） 293
14.3 GridView（网格控件） 296
14.4 TabHost（标签控件） 298
14.5 ViewStub（惰性装载控件） 299
14.6 小结 300
第15章 可视化UI设计 301
15.1 拖放控件 301
15.2 设置视图属性 303
15.3 预览各种屏幕尺寸 303
15.4 语言和地区的本地化测试 304
15.5 其他可视化功能 304
15.6 小结 305
第16章 对话框、Toast与通知栏（Notification） 306
16.1 对话框 306
16.1.1 带2个按钮（确认／取消）的对话框 306
16.1.2 带3个按钮（覆盖／忽略／取消）的对话框 307
16.1.3 简单列表对话框 308
16.1.4 单选列表对话框 309
16.1.5 多选列表对话框 311
16.1.6 进度对话框 312
16.1.7 登录对话框 315
16.1.8 使用Activity托管对话框 316
16.2 Toast 318
16.3 通知（Notification） 319
16.3.1 在状态栏上显示通知信息 319
16.3.2 永久存在的Notification 322
16.3.3 自定义Notification 323
16.4 小结 324
第17章 封装UI和代码利器——Fragment 325
17.1 Fragment简介 325
17.2 什么时候使用Fragment 326
17.3 按照Fragment设计原则编写程序 328
17.4 Fragment的生命周期 332
17.5 创建Fragment 341
17.5.1 通过XML布局文件创建Fragment 341
17.5.2 通过Java代码创建Fragment 342
17.5.3 创建无UI的Fragment 344
17.5.4 在低版本Android中使用Fragment（SupportLibrary） 345
17.6 Activity与Fragment之间的交互 346
17.6.1 Fragment与Activity之间的交互 346
17.6.2 Fragment的回调机制 348
17.7 Fragment状态的持久化 351
17.8 Fragment与回退栈（导航） 355
17.9 FragmentManager与FragmentTransaction 357
17.9.1 管理Fragment事务 357
17.9.2 查找Fragment 357
17.9.3 跟踪回退栈状态 358
17.9.4 恢复历史状态 358
17.9.5 管理Fragment的状态 359
17.9.6 添加、删除和替换Fragment 359
17.9.7 分离（Detach）与附加（Attach）Fragment 360
17.9.8 显示和隐藏Fragment 361
17.10 Fragment扩展 361
17.10.1 ListFragment 361
17.10.2 DialogFragment 363
17.10.3 其他Fragment扩展类 366
17.11 Fragment模板源代码分析 366
17.12 小结 368
第18章 动作栏——ActionBar 369
18.1 ActionBar简介 369
18.2 ActionBar基础 370
18.2.1 隐藏／显示ActionBar 370
18.2.2 添加和响应Action按钮 372
18.3可上下两分的ActionBar 374
18.4 应用程序图标导航 376
18.5 收缩和展开ActionView 377
18.6 ActionProvider 380
18.6.1 分享信息（ShareActionProvider） 380
18.6.2 定制ActionProvider 382
18.7 导航标签 384
18.8 下拉导航列表 388
18.9 小结 390
第19章 Android的拖放技术 391
19.1 Android中的拖放操作 391
19.2 拖放状态与拖放处理 391
19.3 拖动阴影 392
19.4 示例：拖动复制图像 393
19.5 小结 395
第20章 数据存储解决方案 396
20.1 读写key—value对：SharedPreferences 396
20.2 文件流操作 397
20.2.1 openFileOutput和openFileInput方法 398
20.2.2 读写SD卡中的文件 399
20.3 读写JSON格式的数据 400
20.4 SQLite数据库 404
20.4.1 SQLite数据库管理工具 404
20.4.2 SQLiteOpenHelper类与自动升级数据库 405
20.4.3 数据绑定与SimpleCursorAdapter类 406
20.4.4 操作SD卡上的数据库 409
20.4.5 将数据库与应用程序一起发布 410
20.4.6 内存数据库 411
20.5 小结 412
第21章 内容提供者（ContentProvider） 413
21.1 ContentProvider的作用 413
21.2 获得系统数据 413
21.2.1 读取联系人信息 414
21.2.2 查看收件箱的短信 415
21.3 自定义ContentProvider 417
21.3.1 查询城市信息 417
21.3.2 为ContentProvider添加访问权限 422
21.4 如何查找系统提供的ContentProvider 423
21.5 小结 425
第22章 广播接收器（BroadcastReceiver） 426
22.1 什么是广播 426
22.2 接收系统广播 427
22.2.1 短信拦截 427
22.2.2 用代码注册广播接收器 429
22.2.3 广播接收器的优先级 429
22.2.4 来去电拦截 430
22.2.5 截获屏幕休眠与唤醒 432
22.2.6 开机自动运行 433
22.2.7 显示手机电池的当前电量 434
22.3 发送广播 434
22.4 小结 435
第23章 服务（Service） 436
23.1 Service基础 436
23.1.1 Service的生命周期 436
23.1.2 开机启动Service 438
23.2 跨进程访问（AIDL服务） 439
23.2.1 什么是AIDL服务 439
23.2.2 建立AIDL服务的步骤 439
23.2.3 创建和调用AIDL服务 440
23.2.4 传递复杂数据的AIDL服务 442
23.2.5 AIDL与来去电自动挂断 445
23.3 小结 447
第24章 Android的组件开发 448
24.1 Android支持哪些组件开发方式 448
24.2 引用jar文件 449
24.3 跨工程引用 450
24.4 引用NDKLibrary 451
24.5 动态引用APK文件 451
24.6 动静结合的组件 453
24.7 脚本类型组件（JavaScript）与WebView控件 453
24.8 如何确定动态组件是否安装 457
24.9 升级动态组件 459
24.10 小结 461
第25章 Android的蓝牙开发技术 462
25.1 蓝牙简介 462
25.2 打开和关闭蓝牙设备 462
25.3 搜索蓝牙设备 463
25.4 蓝牙数据传输 465
25.5 蓝牙通信一定需要UUID吗 467
25.6 小结 467
第26章 近距离天线通信——NFC技术 468
26.1 NFC简介 468
26.2 NFC、蓝牙和红外之间的差异 469
26.3 NFC技术的未来前景 470
26.4 Android中的NFC技术 471
26.4.1 NDEF与非NDEF数据 471
26.4.2 NFC的三重过滤机制 471
26.4.3 开启Android的NFC功能 472
26.4.4 编写NFC程序的基本步骤 473
26.5 测试NFC程序需要的设备 474
26.6 让Android手机自动运行程序 475
26.6.1 向NFC标签写入数据的基本步骤 475
26.6.2 向NFC标签写入启动Android应用程序的消息 476
26.7 让Android手机自动打开网页 483
26.8 读写NFC标签中的文本 485
26.8.1 实现读写文本数据应用的基本思路 485
26.8.2 如何将NFC标签变成NDEF文本格式 485
26.8.3 NDEF文本格式解析 486
26.8.4 实现读写文本数据的Android应用程序 490
26.9 读写NFC标签中的Uri 496
26.9.1 NDEFUri格式解析 496
26.9.2 实现读写Uri的Android应用程序 499
26.10 利用NFC标签支持的数据格式进行过滤 502
26.11 处理任意NFC标签 504
26.12 读写非NDEF格式的数据 505
26.13 AndroidBeam技术与数据交互 507
26.13.1 传递NDEF消息 507
26.13.2 传输文件 511
26.14 小结 513
第27章 Android的网络开发技术 514
27.1 提交HTTPGET和HTTPPOST请求 514
27.2 HttpURLConnection类 516
27.3 上传文件 517
27.4 下载管理（DownloadManager） 519
27.5 Wi—FiDirect 524
27.5.1 Wi—FiDirectAPI的核心部分 524
27.5.2 创建监听Wi—FiDirect动作的广播接收器 524
27.5.3 注册广播接收器 525
27.5.4 发现Wi—FiDirect设备 526
27.5.5 连接Wi—FiDirect设备 526
27.5.6 数据传输 527
27.6 Internet电话（SIP） 528
27.6.1 使用SIP的要求和限制 528
27.6.2 配置Android版SIP电话 528
27.6.3 创建SipManager 529
27.6.4 注册SIP服务器 529
27.6.5 开始打电话 530
27.6.6 接听电话 530
27.7 小结 531
第28章 并发与定时器 532
28.1 Handler 532
28.1.1 更新UI 532
28.1.2 延迟执行 535
28.2 定时器 537
28.2.1 单秒循环的定时器：Chronometer 537
28.2.2 任意时间间隔的定时器：Timer 538
28.2.3 全局定时器：AlarmManager 539
28.3 AsyncTask 541
28.4 小结 543
第29章 异步装载（Loader） 544
29.1 Loader简介 544
29.2 Loader的核心类／接口 544
29.3 如何使用Loader 545
29.3.1 创建／重用Loader 545
29.3.2 遗弃旧的数据 546
29.3.3 LoaderManager与方法回调 546
29.3.4 创建Loader对象（onCreateLoader） 547
29.3.5 完成数据装载（onLoadFinished） 547
29.3.6 Loader被重置（onLoaderReset） 548
29.4 异步装载联系人（CursorLoader的应用） 548
29.5 小结 552
第30章 Android推送技术 553
30.1 IOS的推送方案 553
30.2 WindowsPhone的推送方案 554
30.3 Android的推送方案 554
30.4 第三方推送服务：极光推送 556
30.5 自己搭建推送服务器：AndroidPN 557
30.6 小结 558
第31章 Android的多媒体开发技术 559
31.1 音频 559
31.1.1 音频播放 559
31.1.2 录制音频 561
31.2 视频 563
31.2.1 播放视频 563
31.2.2 录制视频 564
31.3 相机 565
31.3.1 调用系统的拍照功能 565
31.3.2 自定义拍照功能 566
31.4 铃声 570
31.5 小结 572
第32章 Android的2D绘图 573
32.1 绘制基本的图形 573
32.1.1 绘制像素点 573
32.1.2 绘制直线 574
32.1.3 绘制圆形 574
32.1.4 绘制圆弧 574
32.1.5 绘制文本 575
32.1.6 示例：绘制基本的图形和文本 575
32.2 绘制位图 578
32.2.1 绘制Bitmap对象 578
32.2.2 使用Drawable.draw方法绘制位图 579
32.2.3 示例：用两种方式绘制位图 579
32.3 设置图像的透明度 580
32.4 旋转图像 581
32.5 小结 583
第33章 3D绘图之OpenGLES 584
33.1 OpenGLES简介 584
33.2 在3D空间中绘图 585
33.2.1 要绘制3D图形了，第一步要做什么 585
33.2.2 定义顶点 587
33.2.3 绘制三角形 588
33.2.4 三角形合并法绘制矩形 590
33.2.5 顶点法绘制矩形 592
33.2.6 顶点的选取顺序 592
33.2.7 索引法绘制矩形 593
33.2.8 基于OpenGLES的动画原理 594
33.2.9 旋转的矩形 594
33.3 视图 595
33.3.1 有趣的比喻：照相机拍照 596
33.3.2 模型变换：立方体旋转 597
33.3.3 用gluLookAt方法变换视图 599
33.4 颜色 600
33.5 小结 602
第34章 Android的桌面上的“尤物” 603
34.1 窗口小部件（AppWidget） 603
34.1.1 在Android桌面上添加AppWidget 603
34.1.2 开发AppWidget的步骤 603
34.1.3 数字时钟 605
34.1.4 AppWidgetProvider类 607
34.1.5 向AppWidget添加配置窗口 608
34.1.6 可以选择风格的数字时钟 608
34.2 动态壁纸（随机变换的圆圈） 612
34.3 小结 618
第35章 Android中的短信（SMS）与彩信（MMS）开发技术 619
35.1 通过系统程序发短信 619
35.2 直接发送短信 619
35.3 保存短信发送记录 620
35.4 监听短信和彩信 621
35.5 显示视频缩略图 622
35.6 彩信内容与SMIL协议 624
35.7 小结 631
第36章 Android的传感器开发技术 632
36.1 如何使用传感器 632
36.2 加速度传感器（Accelerometer） 635
36.3 重力传感器（Gravity） 635
36.4 光线传感器（Light） 636
36.5 陀螺仪传感器（Gyroscope） 636
36.5 方向传感器（Orientation） 637
36.6 其他传感器 638
36.7 小结 638
第37章 Android的全球定位系统（GPS） 639
37.1 GPS的核心API 639
37.2 获取位置提供者（LocationProvider） 641
37.2.1 获取所有可用的LocationProvider 641
37.2.2 根据名称获取LocationProvider 642
37.2.3 根据条件（Criteria）获取LocationProvider 642
37.3 实时获取GPS定位数据 643
37.4 测量地球上任意两点之间的距离 645
37.5 邻近警告 646
37.6 小结 647
第38章 谷歌地图（GoogleMap）开发应用 648
38.1 GoogleMap的跨平台解决方案：MapsJavaScriptAPIv3 648
38.2 GoogleMap的显示与定位 648
38.3 在GoogleMap上插入图像标志 651
38.4 插入多个图像标志 653
38.5 带阴影的位置坐标信息 653
38.6 地图与Java交互 655
38.7 小结 657
第39章 Android中的人机交互设计 658
39.1 手势（Gesture） 658
39.1.1 创建手势文件 658
39.1.2 通过手势输入字符串 658
39.1.3 通过手势调用程序 660
39.1.4 编写自己的手势创建器 661
39.2 多点触摸与放大／缩小操作 662
39.3 语音识别 664
39.4 让手机说话（TTS） 665
39.5 小结 666
第40章 Android中的输入法开发 667
40.1 Android输入法简介 667
40.2 控制输入法 668
40.3 输入法实战 669
40.3.1 实现输入法的步骤 669
40.3.2 编写输入法程序 669
40.3.3 输入法服务的生命周期 672
40.3.4 预输入文本 672
40.3.5 输入法设置 673
40.4 小结 673
第41章 AndroidNDK开发 674
41.1 AndroidNDK简介 674
41.2 安装、配置和测试NDK开发环境 674
41.2.1 系统和软件要求 675
41.2.2 下载和安装AndroidNDK 675
41.2.3 下载和安装Cygwin 675
41.2.4 配置AndroidNDK的开发环境 677
41.3 利用NDKSamples学习NDK开发 678
41.3.1 编译NDKSamples 678
41.3.2 NDK程序的结构与命名规则 678
41.4 AndroidNDK配置文件详解 679
41.4.1 AndroidNDK定义的变量 680
41.4.2 AndroidNDK定义的函数 680
41.4.3 描述模块的变量 681
41.4.4 配置Application.mk文件 682
41.5 第一个NDK示例：字母的大小写转换 682
41.5.1 编写NDK程序 682
41.5.2 编写调用NDK函数的Java程序 684
41.5.3 在Eclipse中开发和编译NDK程序 684
41.6 NDK程序读取Java字段值 686
41.7 小结 687
第42章 Android的测试驱动开发（TDD） 688
42.1 JUnit测试框架 688
42.2 测试Activity 688
42.3 测试ContentProvider 691
42.4 测试Service 692
42.5 测试普通类 692
42.6 小结 693
第43章 Android应用的性能优化 694
43.1 性能优化的基础知识 694
43.2 编写Java程序的最优化原则 695
43.2.1 用静态工厂方法代替构造方法 695
43.2.2 避免创建重复的对象 695
43.2.3 防止内存泄漏 697
43.2.4 返回零长度的集合而不是null 697
43.2.5 通过接口引用对象 698
43.3 避免ANR 698
43.4 执行时间测试 699
43.5 内存消耗测试 700
43.6 测试性能的工具：traceview 701
43.7 小结 702
第44章 游戏项目实战：笑脸连连看 703
44.1 游戏玩法 703
44.2 准备图像素材 703
44.3 实现主界面 704
44.4 随机生成连连看图像 705
44.5 选中两个相同图像后消失 705
44.6 用定时器限制游戏时间 706
44.7 小结 707
第45章 开源项目实战：NFC侠（NFCMan） 708
45.1 什么是NFCMan 708
45.2 用Android模拟器和非NFC设备测试NFC应用 709
45.3 NFCMan的实现原理 711
45.4 实现服务端程序（NFCMan） 711
45.4.1 可视化SWT开发环境 712
45.4.2 创建NFC标签 712
45.4.3 描述虚拟NFC标签的NFCTag类 714
45.4.4 保证虚拟NFC标签的全局唯一 715
45.4.5 显示与保存虚拟NFC标签 716
45.4.6 装载已经存在的虚拟NFC标签 719
45.4.7 开启服务 720
45.4.8 处理客户端请求 721
45.4.9 保证虚拟Android设备全局唯一 723
45.4.10 描述虚拟Android设备 724
45.4.11 添加虚拟Android设备 725
45.4.12 异常处理机制 727
45.5 客户端与服务端之间的数据管道（NFCManService） 728
45.5.1 与NFCMan交互（Socket方式） 728
45.5.2 与ANFCMan交互（广播方式） 732
45.6 客户端Library（ANFCMan） 733
45.6.1 ANFCMan的数据结构和异常类 733
45.6.2 ANFCMan的入口类 734
45.6.3 模拟检测到NFC标签的广播接收器 734
45.6.4 同时处理物理NFC标签和虚拟NFC标签的窗口 735
45.7 测试ANFCMan（TestANFCMan） 738
45.8 小结 739
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android开发权威指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android插件化开发指南
目录  Contents
序一
序二
序三
前言
一部分 预备知识
1章 插件化技术的昨天、今天与明天2
1.1 插件化技术是什么2
1.2 为什么需要插件化3
1.3 插件化技术的历史3
1.4 插件化技术的用途到底是什么8
1.5 更好的替代品：React Native8
1.6 只有中国这么玩吗9
1.7 四大组件都需要插件化技术吗10
1.8 双开和虚拟机10
1.9 从原生页面到HTML 5的过渡11
1.10 本章小结12
2章 Android底层知识13
2.1 概述13
2.2 Binder原理14
2.3 AIDL原理16
2.4 AMS20
2.5 Activity工作原理21
2.5.1 App是怎么启动的21
2.5.2 启动App并非那么简单21
2.6 App内部的页面跳转32
2.7 Context家族史34
2.8 Service工作原理36
2.8.1 在新进程启动Service36
2.8.2 启动同一进程的Service39
2.8.3 在同一进程绑定Service39
2.9 BroadcastReceiver工作原理41
2.9.1 注册过程43
2.9.2 发送广播的流程44
2.9.3 广播的种类45
2.10 ContentProvider工作原理46
2.10.1 ContentProvider的本质49
2.10.2 匿名共享内存（ASM）49
2.10.3 ContentProvider与AMS的通信流程50
2.11 PMS及App安装过程52
2.11.1 PMS简介52
2.11.2 App的安装流程52
2.11.3 PackageParser53
2.11.4 ActivityThread与PackageManager54
2.12 ClassLoader家族史55
2.13 双亲委托57
2.14 MultiDex57
2.15 实现一个音乐播放器App59
2.15.1 基于两个Receiver的音乐播放器59
2.15.2 基于一个Receiver的音乐播放器63
2.16 本章小结68
3章 反射70
3.1 基本反射技术70
3.1.1 根据一个字符串得到一个类70
3.1.2 获取类的成员71
3.1.3 对泛型类的反射75
3.2 jOOR77
3.2.1 根据一个字符串得到一个类78
3.2.2 获取类的成员78
3.2.3 对泛型类的反射79
3.3 对基本反射语法的封装80
3.3.1 反射出一个构造函数81
3.3.2 调用实例方法81
3.3.3 调用静态方法82
3.3.4 获取并设置一个字段的值82
3.3.5 对泛型类的处理83
3.4 对反射的进一步封装84
3.5 本章小结88
4章 代理模式89
4.1 概述89
4.1.1 远程代理（AIDL）90
4.1.2 保护代理（权限控制）92
4.1.3 虚代理（图片占位）92
4.1.4 协作开发（Mock Class）92
4.1.5 给生活加点料（记日志）93
4.2 静态代理和动态代理94
4.3 对AMN的Hook95
4.4 对PMS的Hook97
4.5 本章小结98
5章 对startActivity方法进行Hook99
5.1 startActivity方法的两种形式99
5.2 对Activity的startActivity方法进行Hook100
5.2.1 方案1：重写Activity的startActivityForResult方法102
5.2.2 方案2：对Activity的mInstrumentation字段进行Hook102
5.2.3 方案3：对AMN的getDefault方法进行Hook104
5.2.4 方案4：对H类的mCallback字段进行Hook107
5.2.5 方案5：再次对Instrumentation字段进行Hook109
5.3 对Context的startActivity方法进行Hook111
5.3.1 方案6：对ActivityThread的mInstrumentation字段进行Hook111
5.3.2 对AMN的getDafault方法进行Hook是一劳永逸的113
5.4 启动没有在AndroidManifest中声明的Activity113
5.4.1 “欺骗AMS”的策略分析114
5.4.2 Hook的上半场115
5.4.3 Hook的下半场：对H类的mCallback字段进行Hook118
5.4.4 Hook的下半场：对ActivityThread的mInstrumentation字段进行Hook119
5.4.5 “欺骗AMS”的弊端121
5.5 本章小结121
二部分 解决方案
6章 插件化技术基础知识124
6.1 加载外部的dex124
6.2 面向接口编程126
6.3 插件的瘦身129
6.4 对插件进行代码调试131
6.5 Application的插件化解决方案133
6.6 本章小结134
7章 资源初探135
7.1 资源加载机制135
7.1.1 资源分类135
7.1.2 剪不断理还乱：Resources和AssetManager136
7.2 资源的插件化解决方案137
7.3 换肤141
7.4 殊途同归：另一种换肤方式149
7.5 本章小结149
8章 简单的插件化解决方案150
8.1 在AndroidManifest中声明插件中的组件150
8.2 宿主App加载插件中的类151
8.3 启动插件Service152
8.4 加载插件中的资源152
8.5 本章小结154
9章 Activity的插件化解决方案155
9.1 启动没有在AndroidManifest中声明的插件Activity155
9.2 基于动态替换的Activity插件化解决方案159
9.2.1 Android启动Activity的原理分析159
9.2.2 故意命中缓存160
9.2.3 加载插件中类的方案1：为每个插件创建一个ClassLoader164
9.2.4 为了圆一个谎言而编造更多的谎言164
9.3 加载插件中类的方案2：合并多个dex166
9.4 为Activity解决资源问题169
9.5 对LaunchMode的支持169
9.6 加载插件中类的方案3：修改App原生的ClassLoader172
9.7 本章小结174
10章 Service的插件化解决方案175
10.1 Android界的荀彧和荀攸：Service和Activity175
10.2 预先占位176
10.3 startService的解决方案178
10.4 bindService的解决方案183
10.5 本章小结185
11章 BroadcastReceiver的插件化解决方案186
11.1 Receiver概述186
11.2 动态广播的插件化解决方案187
11.3 静态广播的插件化解决方案187
11.4 静态广播的插件化解决方案189
11.5 本章小结193
12章 ContentProvider的插件化解决方案194
12.1 ContentProvider基本概念194
12.2 一个简单的ContentProvider例子195
12.3 ContentProvider插件化197
12.4 执行这段Hook代码的时机199
12.5 ContentProvider的转发机制200
12.6 本章小结201
13章 基于静态代理的插件化解决方案：that框架202
13.1 静态代理的思想202
13.2 一个简单的静态代理的例子203
13.2.1 从宿主Activity跳转到插件Activity203
13.2.2 ProxyActivity与插件Activity的通信204
13.2.3 插件Activity的逻辑206
13.3 插件内部的页面跳转206
13.4 从“肉体”上消灭that关键字207
13.5 插件向外跳转209
13.6 面向接口编程在静态代理中的应用211
13.7 对LaunchMode的支持216
13.8 本章小结221
14章 that框架对Service和BroadcastReceiver的支持222
14.1 静态代理的思想在Service的应用222
14.2 对BindService的支持227
14.3 Service的预先占位思想229
14.4 Service插件化的解决方案：动静结合231
14.4.1 解析插件中的Service231
14.4.2 通过反射创建一个Service对象232
14.4.3 ProxyService与ServiceManager234
14.4.4 bindService的插件化解决方案240
14.5 静态代理的思想在BroadcastReceiver的应用245
14.6 本章小结248
15章 再谈资源249
15.1 Android App的打包流程249
15.2 修改AAPT251
15.2.1 修改并生成新的aapt命令251
15.2.2 在插件化项目中使用新的aapt命令254
15.3 public.xml固定资源id值256
15.4 插件使用宿主的资源258
15.5 本章小结259
16章 基于Fragment的插件化框架261
16.1 AndroidDynamicLoader概述261
16.2 简单的Fragment插件化例子262
16.3 插件内部的Fragment跳转263
16.4 从插件的Fragment跳转到插件外部的Fragment264
16.5 本章小结266
三部分 相关技术
17章 降级268
17.1 从Activity到HTML 5269
17.2 从HTML 5到Activity273
17.3 对返回键的支持278
17.4 本章小结278
18章 插件的混淆279
18.1 插件的基本混淆279
18.2 方案1：不混淆公共库MyPluginLibrary280
18.3 方案2：混淆公共库MyPluginLibrary282
18.3.1 配置multidex283
18.3.2 配置proguard285
18.3.3 移除Plugin1.apk中的冗余dex286
18.4 本章小结287
19章 增量更新288
19.1 如何使用增量更新288
19.2 制作插件的增量包289
19.3 App下载增量包并解压到本地289
19.4 App合并增量包290
19.5 本章小结291
20章 so的插件化解决方案292
20.1 编写一个简单的so292
20.2 使用so296
20.3 so的加载原理298
20.4 基于System.load的插件化解决方案301
20.5 基于System.loadLibrary的插件化解决方案304
20.6 本章小结305
21章 对App的打包流程进行Hook306
21.1 自定义Gradle插件306
21.1.1 创建Gradle自定义插件项目306
21.1.2 Extension又是什么308
21.1.3 修改打包流程309
21.2 修改resources.arsc311
21.2.1 Android是怎么查找资源的311
21.2.2 aapt都干了什么312
21.2.3 gradle-small的工作原理313
21.2.4 怎么使用gradle-small313
21.2.5 gradle-small中的Plugin家族313
21.2.6 gradle-small中的Editor家族317
21.3 本章小结318
22章 插件化技术总结319
22.1 插件的工程化319
22.2 插件中类的加载319
22.3 哪些地方可以Hook320
22.4 Activity插件化的解决方案320
22.5 资源的解决方案321
22.6 Fragment是哪门哪派322
22.7 Service、ContentProvider、BroadcastReceiver插件化的通用解决方案322
22.8 特定于Service的插件化解决方案322
22.9 特定于BroadcastReceiver的插件化解决方案323
22.10 特定于ContentProvider的插件化解决方案323
22.11 本章小结323
附录
附录A 常用工具326
附录B 本书代码索引328

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android插件化开发指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android深度探索（卷2）
第1章	学习前的准备工作	1
1.1 安装和配置JDK	1
1.2 安装和配置Android开发环境	1
1.3 官方Android源代码	2
1.3.1  下载Android源代码	2
1.3.2  编译Android源代码	3
1.4 官方Linux内核源代码	5
1.4.1  Linux内核支持的Android设备	5
1.4.2  下载Linux内核源代码	5
1.4.3  查看Linux内核的分支	7
1.4.4 看看Google那帮家伙在做什么	8
1.4.5  获取Linux内核的配置文件	10
1.4.6  安装交叉编译器	11
1.4.7  编译Linux内核源代码	12
1.5Cyanogenmod(CM)源代码	12
1.5.1  什么是CM	12
1.5.2  CM支持哪些Android设备	13
1.5.3与Android设备对应的Codename和CM版本	14
1.5.4  下载CM Android源代码	15
1.5.5  下载经过CM适配的Linux内核源代码	17
1.5.6  编译Android源代码生成Recovery ROM	17
1.5.7  单独编译CM Linux内核源代码	21
1.5.8  刷机！刷机！	22
1.5.9  下载现成的CM ROM	23
1.6小结	24
第2章	提取ROOT权限	26
2.1 什么是ROM	26
2.2 ROM的种类	27
2.3刷官方的ROM	27
2.3.1  下载官方的ROM	28
2.3.2  用无人值守方式刷ROM	28
2.3.3  分别刷ROM包含的各种镜像文件	29
2.4 Android手机获取ROOT权限的必要性	31
2.5 提取ROOT权限的原理	32
2.6 用极客的方式提取ROOT权限	33
2.6.1  提取ROOT权限的步骤	33
2.6.2  需要一个很酷的recovery	34
2.6.3 su命令源代码分析	36
2.6.4  制作第一个Recovery刷机包（编写updater-script脚本文件）	39
2.6.5  首次通过DIY方式提取ROOT权限	43
2.6.6  上传Android应用到/system/app目录	43
2.7 小结	44
第3章	Root权限的安全屏障	45
3.1 通过su提取Root权限的安全隐患	45
3.2 Android应用申请Root权限	46
3.3 Superuser.apk为什么不见了	48
3.4 申请Root权限为什么失灵了	50
3.5CM ROM如何为Root权限增加安全屏障	52
3.6 ADB Shell动作管理命令（am）	55
3.6.1  显示窗口（Activity）	55
3.6.2发送广播（Broadcast）	56
3.6.3  开始服务（Service）	57
3.7su实现原理及源代码分析	57
3.7.1  su进行Root授权的处理流程	57
3.7.2  初始化调用者数据	64
3.7.3  初始化路径	66
3.7.4  动态宏定义	67
3.7.5  检测数据库	69
3.7.6  创建LocalSocket服务	70
3.7.7  显示“Root授权”窗口	72
3.7.8  等待Superuser连接LocalSocket服务	73
3.7.9  向Superuser传输调用者信息	74
3.7.10  接收用户选择的“Root授权”策略	75
3.7.11  允许和拒绝“Root授权”	75
3.8  Superuser的实现原理与源代码分析	77
3.8.1  “Root授权”警告窗口的处理流程	77
3.8.2  设置“Root授权”窗口的控件	80
3.8.3  获取“Root授权”持续时间	83
3.8.4  处理“Root授权”策略	85
3.8.5  读取Su协议数据	86
3.8.6获取和设置“调用者”信息	88
3.9 小结	90
第4章	ROM定制	91
4.1 刷机的那些事	91
4.1.1  Android刷机的本质	91
4.1.2  制作ROM的不同层次	93
4.1.3  为什么要刷机	94
4.1.4  刷机带来的风险及其预防措施	95
4.2在官方ROM的基础上定制各种镜像	96
4.2.1  修改系统镜像（system.img）	96
4.2.2  定制开机动画	99
4.2.3  用户数据镜像（userdata.img）	103
4.2.4  内存磁盘镜像（ramdisk.img）	106
4.2.5Linux内核镜像（boot.img）	108
4.2.6  制作已经有ROOT权限的ROM	109
4.2.7  Recovery镜像（recovery.img）	110
4.2.8  缓存镜像（cache.img）	111
4.2.9  制作完美的Bootloader ROM	112
4.3 直接从CM源代码制作ROM	114
4.3.1 制作Bootloader ROM	115
4.3.2制作Recovery ROM	116
4.4  Edify语言	120
4.4.1  Edify语言概述	120
4.4.2  测试Edity脚本（updater-script）	120
4.4.3  Edity函数详解	122
4.4.4  Edity语言的实现原理	131
4.5集成Google Services Framework和Google Play	134
4.6在CM ROM中集成第三方APK程序	135
4.6.1为什么不能直接复制APK和ODEX文件	135
4.6.2  校验odex文件需要依赖哪些Library	136
4.6.3  合并APK和ODEX文件	136
4.7 小结	139
第5章	Recovery深度分析与定制	140
5.1 什么是Recovery	140
5.2 Clockworkmod Recovery源代码解析	142
5.2.1如何分析Recovery源代码	142
5.2.2  显示主菜单	144
5.2.3  切换不同的菜单项	146
5.2.4  选择菜单项	148
5.3Recovery支持的各种操作	150
5.3.1  重启和关闭Android设备	150
5.3.2  从SD卡刷ROM	151
5.3.3  使用sideload模式刷ROM	157
5.3.4  清除指定文件系统中的数据	158
5.3.5  备份与恢复	161
5.3.6  挂载（mount）、卸载（umount）和格式化（format）文件系统	167
5.4添加自己的Recovery菜单项	170
5.5 汉化Recovery	172
5.5.1  汉化Recovery的原理和步骤	172
5.5.2  初始化字体	173
5.5.3  绘制中文字符	175
5.6小结	176
第6章Android系统应用的开发与测试	177
6.1 什么是Android系统应用	177
6.2为什么要研究Android系统应用	178
6.3如何编写Android系统应用	178
6.4 分析第一个Android系统应用：计算器	180
6.4.1  计算器应用（Calculator）的基本结构	181
6.4.2  编译、测试和调试Calculator	183
6.4.3  允许其他Android应用通过Calculator计算表达式	184
6.5 小结	186
第7章 安装与卸载应用程序（PackageInstaller）	187
7.1 分析源代码的第一步应该做什么	187
7.2 寻找PackageInstaller的突破口	190
7.3安装和卸载Android应用的全部方式	192
7.4 安装Android应用前的校验	193
7.4.1  安装Android应用的初始化工作	193
7.4.2  显示校验窗口	197
7.4.3  获取Android应用的权限列表	201
7.5开始安装应用程序	204
7.5.1  PackageInstaller的安装原理	204
7.5.2  静默安装Android应用	211
7.6 卸载Android应用	214
7.6.1  PackageInstaller卸载Android应用前的确认	214
7.6.2  卸载Android应用的原理	217
7.6.3  静默卸载Android应用	220
7.7小结	222
第8章	系统设置（一）	224
8.1 为系统设置添加新功能	224
8.1.1  系统设置的编译与权限	224
8.1.2修改开机动画	226
8.1.3  寻找Settings的入口点	231
8.1.4  为Settings添加新的功能项	233
8.1.5  迁移修改开机动画的窗口类	235
8.2Wi-Fi	236
8.2.1  如何为设置项添加Switch控件	237
8.2.2  为“修改开机动画”设置项添加Switch控件	242
8.2.3“关闭/打开”Wi-Fi	245
8.2.4  系统信息与SQLite的WAL模式	248
8.2.5禁止飞行模式下单独开启Wi-Fi
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android深度探索（卷2）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android系统源代码情景分析（修订版）（含CD光盘1张）
罗升阳:1984年出生，2007年毕业于浙江大学计算机系，取得学士学位，2010年毕业于上海交通大学计算机系，取得硕士学位。毕业后一直从事于互联网软件开发，并且致力于移动平台的研究，特别是对Android平台有深入的理解和研究。在国内知名IT技术社区CSDN上发表了数十篇高质量的Android系统原创性文章，并且开设博客专栏--《老罗的Android之旅》，积极与网友互动，深受大家喜爱，访问量一直居于前茅。
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android系统源代码情景分析（修订版）（含CD光盘1张）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android平台开发之旅
出版说明
前言
第1章 初识Android
1.1 Android平台简介
1.1.1 Android发展历史
1.1.2 平台内涵
1.2 Android平台架构
1.2.1 架构图
1.2.2 架构内容
1.2.3 Android应用程序内容
1.3 用户界面
1.3.1 视图层次结构
1.3.2 布局——设计图
1.3.3 视图——整体家居
1.3.4 显示部件——装饰品
1.3.5 用户界面事件
1.3.6 界面风格和主题
1.3.7数据绑定
1.4 程序资源和资产
1.4.1 程序资源和资产概述
1.4.2 资源类型及内容
1.5 数据存储
1.5.1 首选项
1.5.2 文件
1.5.3 数据库
1.6 平台安全和许可
1.6.1 Android平台安全结构体系
1.6.2 应用程序签名
1.6.3 用户ID和文件存取
1.6.4 许可
第2章 踏上Android平台开发之旅
2.1 搭建系统环境
2.1.1 安装配置J2SE开发环境
2.2 Android平台sDK
2.2.1 安装配置Android平台SDK
2.2.2 Android SDK内容介绍
2.2.3 Android SDK附带工具介绍
2.3 集成开发环境——Eclipse
2.4 应用程序调试工具插件——ADT
2.4.1 获取ADT
2.4.2 安装配置ADT
2.5 验证开发环境
2.5.1 创建虚拟设备
2.5.2 建立FirstActivity工程
2.5.3 运行和调试
2.6 应用程序的开发过程
2.6.1 开发流程回顾
2.6.2 新手上路遇到的常见问题
第3章 Android应用程序组件
3.1 应用程序组件
3.2 Android应用程序组件
3.2.1 Activity(活动)——形象大使
3.2.2 Service(服务)——老黄牛
3.2.3 BroadcastReceiver(广播接收器)——倾听者
3.2.4 ContentProvider(内容提供者)
3.2.5 Android应用程序组件小结
3.3 组件应用机制
3.3.1 组件与组件间的交互机制
3.3.2 未决意向对象
3.3.3 组件与线程间的交互机制
3.3.4 组件与服务间的交互机制
3.4 Android平台应用程序组件小结
……
第4章 高级用户界面设计
第5章 底层用户界面设计
第6章 文件系统管理
第7章 网络通信
第8章 无线通信
第9章 多媒体应用
第10章 个人信息管理
第11章 电话信息系统管理
第12章 数据库应用
第13章 XML应用
第14章 地图应用
第15章 系统信息管理
第16章 Android资源及SDK工具
第17章 Android组件属性及使用许可
附录 随书源代码说明
参考文献
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android平台开发之旅
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android恶意代码分析与渗透测试
第1章 Android的基本概念　　1
1.1 Android的架构　　1
1.1.1 Linux内核　　2
1.1.2 库　　2
1.1.3 Android运行时　　2
1.1.4 应用程序与框架　　4
1.1.5 设备文件目录结构　　5
1.2 Android 重要组件　　10
1.2.1 Activity　　10
1.2.2 Service　　11
1.2.3 Content Provider　　11
1.3 Android应用程序的基本结构　　11
1.4 小结　　18
第2章 Android应用程序诊断环境　　19
2.1 构建Android环境　　19
2.1.1 安装Android SDK　　19
2.1.2 安装ADK　　23
2.1.3 测试Android开发环境　　34
2.1.4 Linux 系统Android开发环境构建　　38
2.2 构建数据包分析及检测环境　　40
2.2.1 使用无线路由器收集信息　　40
2.2.2 利用支持USB类型的AP（支持网关）收集信息　　46
2.2.3 设置点对点网络以收集信息　　48
2.2.4 使用tcpdump二进制文件收集信息　　52
2.3 切换设备平台　　55
2.3.1 通过攻击代码了解Rooting 　　55
2.3.2 使用Tegrak内核　　66
2.3.3 使用CF-Auto-Root　　 69
2.4 Android诊断工具介绍　　 73
2.4.1 ADB基本命令　　 73
2.4.2 导出/导入设备中的apk文件　　 78
2.4.3 使用LogCat进行分析　　 80
2.4.4 使用pm命令获取设备信息　　 86
2.4.5 使用Busybox扩展Android系统命令　　 89
2.5 使用编辑器分析文件格式　　 91
2.6 小结　　 101
第3章 Android App分析方法　　 102
3.1 通过反编译进行静态分析　　 102
3.2 通过动态调试进行分析　　 107
3.3 通过代码修补绕过apk文件　　 115
3.4 使用AndroGuard进行分析　　 117
3.4.1 使用Androapkinfo查看信息　　 119
3.4.2 使用Androxml查看二进制XML 文件　　 120
3.4.3 使用Androlyze进行分析　　 121
3.4.4 使用Androdd查看apk文件结构　　 130
3.4.5 使用Androdiff和Androsim比较文件　　 133
3.5 使用DroidBox进行自动分析　　 135
3.5.1 path中添加adb命令　　 135
3.5.2 使用Android SDK Manager升级Packages　　 135
3.6 使用Sublime插件进行分析　　 144
3.7 使用APKInspector进行分析　　 147
3.8 使用dexplorer和dexdump进行分析　　 151
3.9 使用Santoku分析移动App　　152
3.9.1 诊断工具Santoku　　152
3.9.2 Santoku 安装与运行方法　　153
3.9.3 使用Santoku对移动App进行逆向分析　　158
3.10 小结　　159
第4章 恶意代码分析　　160
4.1 使用在线分析服务　　160
4.1.1 使用Anubis分析恶意App　　161
4.1.2 使用VirusTotal分析恶意App　　162
4.1.3 使用VirusTotal App进行诊断　　174
4.1.4 使用andrototal诊断　　176
4.1.5 使用apkscan App进行诊断　　179
4.1.6 使用Dexter进行诊断　　184
4.1.7 使用APK Analyzer进行诊断　　186
4.2 手动分析恶意代码App　　187
4.2.1 分析smartbiling.apk恶意代码（获取设备信息）.188
4.2.2 分析alyac.apk恶意代码（伪造杀毒App）　　199
4.2.3 分析miracle.apk恶意代码（发送设备信息）　　219
4.2.4 分析phone.apk恶意代码（修改金融App）　　224
4.2.5 apk-locker使用案例　　231
4.3 用户应对恶意代码威胁的方法　　235
4.3.1 禁止点击和下载可疑URL 　　236
4.3.2 安装手机杀毒软件并定期更新　　238
4.3.3 关闭不使用的无线接口　　239
4.3.4 禁止随意修改平台结构　　240
4.3.5 使用三星KNOX（基于SEAndroid）保障安全　　241
4.4 小结　　242
第5章 Android 移动服务诊断　　243
5.1 构建虚拟漏洞诊断测试环境　　243
5.2 OWASP TOP 10移动安全威胁　　248
5.3 保存不安全的数据　　250
5.3.1 虚拟程序实操　　252
5.3.2 查看/data/data/目录　　253
5.3.3 应对方案　　254
5.4 易受攻击的服务器端控制　　255
5.5 使用易受攻击的密码　　263
5.6 传输层保护不足（非加密通信） 　　264
5.7 源代码信息泄漏　　270
5.8 泄漏重要信息　　272
5.8.1 泄漏内存中的重要信息　　273
5.8.2 虚拟程序实操　　276
5.9 泄漏日志信息　　280
5.10 Web服务漏洞项目诊断　　281
5.11 App应对方案：加密源代码　　283
5.11.1 ProGuard　　283
5.11.2 用ProGaurd生成密钥　　284
5.11.3 设置ProGuard　　286
5.11.4 ProGuard生成文件简介　　289
5.11.5 ProGuard的结果文件　　291
5.12 小结　　293
第6章 使用Android诊断工具　　294
6.1 PacketShark：网络数据包截获工具　　294
6.2 Drozer：移动诊断框架　　298
6.3 ASEF：移动设备漏洞工具　　307
6.3.1 通过安装apk文件进行检测　　308
6.3.2 检测设备apk文件　　312
6.4 DroidSheep：Web会话截取工具　　319
6.5 dSploit：网络诊断工具　　325
6.5.1 端口扫描　　328
6.5.2 获取信息　　329
6.5.3 破解账号　　329
6.5.4 中间人攻击　　330
6.6 AFLogical：移动设备取证工具　　332
6.7 小结　　333
第7章 Android黑客大赛App试题　　334
7.1 Android App试题 1　　334
7.1.1 试题描述与出题目的　　334
7.1.2 解题　　334
7.2 Android App试题2　　341
7.2.1 试题描述与出题目的　　341
7.2.2 解题　　341
7.3 Android App试题3　　344
7.3.1 试题描述与出题目的　　344
7.3.2 解题　　 345
7.4 Android App试题4　　 352
7.5 小结　　 361
参考网站　　 362
后记　　 363
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android恶意代码分析与渗透测试
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android移动开发案例详解
第1章　Android移动平台发展概述　1.1　Android诞生背景　1.2　Android开发框架　1.3　Android最新进展第2章　图片浏览器　2.1　案例背景　2.2　案例设计与实现　2.3　案例演示　2.4　本章小结第3章　文件浏览器　3.1　案例背景　3.2　案例设计与实现　3.3　案例演示　3.4　本章小结第4章　通讯录　4.1　案例背景　4.2　案例设计与实现　4.3　案例演示　4.4　本章小结第5章　任务管理器　5.1　案例背景　5.2　案例设计与实现　5.3　案例演示　5.4　本章小结第6章　音乐播放器　6.1　案例背景　6.2　案例设计与实现　6.3　案例演示　6.4　本章小结第7章　天气预报　7.1　案例背景　7.2　案例设计与实现　7.3　案例演示　7.4　本章小结第8章　多媒体播放器　8.1　案例背景　8.2　案例设计与实现　8.3　案例演示　8.4　本章小结第9章　短信语音播报　9.1　案例背景　9.2　案例设计与实现　9.3　案例演示　9.4　本章小结第10章　手机远程监控器　10.1　案例背景　10.2　案例设计与实现　10.3　案例演示　10.4　本章小结第11章　JET BOY游戏　11.1　案例背景　11.2　案例设计与实现　11.3　案例演示　11.4　本章小结第12章　“连连看”小游戏　12.1　案例背景　12.2　案例设计与实现　12.3　案例演示　12.4　本章小结第13章　“贪吃蛇”游戏　13.1　案例背景　13.2　案例设计与实现　13.3　本章小结第14章　GPS和Google Map API的使用　14.1　案例背景　14.2　案例设计与实现　14.3　案例详解　14.4　知识点扩展　14.5　本章小结第15章　AppWidgets原理和应用　15.1　AppWidgets相关知识　15.2　BatteryWidget范例　15.3　RSS Widget范例　15.4　本章小结参考文献
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android移动开发案例详解
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android攻略
目　 录
第1章　 Android入门　　1
1.1　 Android简介　　　 1
1.2　 Android演化史　　2
1.3　 Android系统架构　　3
1.4　 应用架构　　6
1.5　 剖析Activity　　　 11
1.6　 剖析Service　　16
1.7　 剖析BroadcastReceiver　　22
1.8　 剖析ContentProvider　　23
1.9　 小结　　　 58
第2章　 用户界面攻略　　　 60
2.1　 攻略2-1:自定义窗口　　60
2.2　 攻略2-2:创建并显示视图　　　 67
2.3　 攻略2-3:监控点击动作　　　 69
2.4　 攻略2-4:适用于多种屏幕分辨率的图形资源　　70
2.5　 攻略2-5:锁定活动方向　　　 71
2.6　 攻略2-6:动态方向锁定　　　 72
2.7　 攻略2-7:手动处理旋转　　　 74
2.8　 攻略2-8:创建弹出菜单动作　　76
2.9　 攻略2-9:自定义选项菜单　　　 81
2.10　 攻略2-10:自定义返回按键　　84
2.11　 攻略2-11:Home按键仿真　　85
2.12　 攻略2-12:监控TextView　 的变动　　86
2.13　 攻略2-13:自动滚动的TextView　　　 89
2.14　 攻略2-14:动画视图　　90
2.15　 攻略2-15:用可绘制资源做背景　　　 97
2.16　 攻略2-16:创建自定义状态的可绘制资源　　　 100
2.17　 攻略2-17:将遮罩应用到图片　　　 102
2.18　 攻略2-18:创建持久的对话框　　　 106
2.19　 攻略2-19:实现针对具体场景的布局　　108
2.20　 攻略2-20:自定义键盘动作　　112
2.21　 攻略2-21:隐藏软键盘　　　 115
2.22　 攻略2-22:自定义AdapterView的空视图　　116
2.23　 攻略2-23:自定义ListView　 行　　117
2.24　 攻略2-24:制作ListView　 的节头部　　122
2.25　 攻略2-25:创建组合部件　　125
2.26　 好工具推荐:DroidDraw　　　 128
2.27　 小结　　132
第3章　 通信和联网　　133
3.1　 攻略3-1:显示Web信息　　　 133
3.2　 攻略3-2:截获WebView　 事件　　137
3.3　 攻略3-3:访问带JavaScript的WebView　　138
3.4　 攻略3-4:下载图片文件　　　 141
3.5　 攻略3-5:完全在后台下载　　143
3.6　 攻略3-6:访问RESTAPI　　　 147
3.7　 攻略3-7:解析JSON　　153
3.8　 攻略3-8:解析XML　　156
3.9　 攻略3-9:接收短信　　160
3.10　 攻略3-10:发送短信　　162
3.11　 攻略3-11:蓝牙通信　　164
3.12　 攻略3-12:查询网络连接状态　　　 173
3.13　 小结　　174
第4章　 实现设备硬件交互　　175
4.1　 攻略4-1:整合设备位置　　　 175
4.2　 攻略4-2:在地图上显示位置　　178
4.3　 攻略4-3:在地图上标记位置　　182
4.4　 攻略4-4:拍摄照片和录制视频　　　 188
4.5　 攻略4-5:自定义摄像头覆盖层　　　 192
4.6　 攻略4-6:录音　　　 198
4.7　 攻略4-7:语音识别　　201
4.8　 攻略4-8:播放音频视频　　　 203
4.9　 攻略4-9:倾斜监控器　　211
4.10　 攻略4-10:监控罗盘方向　　214
4.11　 好工具推荐:SensorSimulator　　218
4.12　 小结　　223
第5章　 数据持久化　　224
5.1　 攻略5-1:制作设置界面　　　 224
5.2　 攻略5-2:简单数据存储　　　 228
5.3　 攻略5-3:读写文件　　233
5.4　 攻略5-4:以资源的形式使用文件　　238
5.5　 攻略5-5:管理数据库　　240
5.6　 攻略5-6:查询数据库　　245
5.7　 攻略5-7:备份数据　　247
5.8　 攻略5-8:分享数据库　　251
5.9　 攻略5-9:分享其他数据　　　 258
5.10　 好工具推荐:SQLite3　　264
5.11　 小结　　272
第6章　 与系统交互　　273
6.1　 攻略6-1:从后台发送通知　　273
6.2　 攻略6-2:创建定时和周期任务　　　 276
6.3　 攻略6-3:规划周期任务　　　 277
6.4　 攻略6-4:创建粘性操作　　　 281
6.5　 攻略6-5:长时间运行的后台操作　　286
6.6　 攻略6-6:启动其他应用　　　 292
6.7　 攻略6-7:启动系统应用　　　 294
6.8　 攻略6-8:让其他应用启动你的应用　　　 298
6.9　 攻略6-9:与联系人交互　　　 300
6.10　 攻略6-10:使用多媒体播放器　　　 307
6.11　 攻略6-11:保存到MediaStore　　309
6.12　 小结　　311
第7章　 使用库　　312
7.1　 攻略7-1:创建Java库JAR　　312
7.2　 攻略7-2:使用Java库JAR　　314
7.3　 攻略7-3:创建Android库项目　　　 316
7.4　 攻略7-4:使用Android库项目　　　 319
7.5　 攻略7-5:绘图　　　 321
7.6　 攻略7-6:消息推送实战　　　 330
7.7　 小结　　　 338
附录A　 Android的脚本层　　339
附录B　 AndroidNDK　　345
附录C　 App设计指南　　　 355
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android攻略
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Qt on Android 核心编程
第1章  Qt概览	1
欢迎来到Qt的世界，让我们看看Qt是什么，能给我们带来什么，又有谁在使用Qt。我们要约会的Qt on Android，它缘起何处，有着怎样曲折婉转的历史，如今的小模样能否让我们爱之如狂……
1.1  什么是Qt	1
1.2  我们能用Qt做什么	1
1.3  谁在使用Qt	1
1.4  什么是Qt on Android	2
1.5  Qt on Android的前世今生	2
第2章  Qt开发环境快速上手	6
当你遇见了合适的人，开始筹划第一次约会，又是兴奋又是惆怅，要不要买花，去哪里买礼物，穿什么衣服，洒什么香水，带什么应对意外的小物件，该不该了解可能要去的地方环境如何……一切都为了顺利地完成这事关紧要的第一次。我精心准备了Qt入门的一切，微笑着欢迎你的来访。
2.1  Qt Creator简介	6
2.2  Qt Creator下载与安装	7
2.2.1  下载	7
2.2.2  安装	7
2.3  创建第一个项目：Hello World	9
2.4  Qt Creator集成开发环境介绍	13
2.4.1  欢迎界面	13
2.4.2  编辑界面	16
2.4.3  调试界面	17
2.4.4  项目选项设置	18
2.4.5  菜单简介	19
2.4.6  Qt Creator的选项配置	21
2.4.7  项目模板介绍	22
2.5  Qt开发工具介绍	25
2.5.1  Assistant	25
2.5.2  Designer	29
2.5.3  Linguist	30
2.5.4  命令行环境	30
第3章  Qt on Android快速上手	32
风，起于青萍之末，升降于云际本土，志高远而固磐。Qt跨界牵手Android，带给我们一种新的可能与希冀，这种欣欣然还需落到实处，从准备环境开始，从第一声Hello开始，学会必要的调试手段，向着部署向着发布而去……
3.1  开发环境搭建	32
3.1.1  JDK安装	32
3.1.2  环境变量设置	34
3.1.3  Android SDK安装	36
3.1.4  Android NDK安装	41
3.1.5  Apache Ant安装	41
3.1.6  Qt Creator的Android环境配置	42
3.1.7  AVD创建	44
3.1.8  连接你的手机	46
3.2  Hello Qt on Android	47
3.2.1  创建项目	47
3.2.2  项目选项	50
3.2.3  创建密钥文件和证书	53
3.2.4  创建AndroidManifest.xml	55
3.2.5  添加代码	53
3.2.6  运行程序	55
3.3  Qt库的部署策略	57
3.3.1  Use Ministro service to install Qt	58
3.3.2  Bundle Qt libs in APK	59
3.3.3  Deploy local Qt libraries to temporary directory	60
3.4  日志	62
3.4.1  为什么要有日志	63
3.4.2  在Qt中如何使用日志	63
3.4.3  如何把日志输出到Android日志系统中	64
第4章  Qt项目文件介绍	67
有些顶顶重要的，却总被忽视，pro文件就是那个悲催的备胎啊，满含深情一路追随着你，你却只在受伤时想起它值得珍惜。噢，没关系，你看我十八般武艺万种风情，只默默地在你身边伫立，期待着你书到用时回眸一笑。
4.1  pro文件介绍	67
4.1.1  注释	68
4.1.2  组件选择	68
4.1.3  目标文件名	68
4.1.4  模板	69
4.1.5  指定源文件	69
4.1.6  指定头文件	70
4.1.7  设置头文件路径	70
4.1.8  指定库与库文件路径	70
4.1.9  定义宏	70
4.1.10  配置信息	71
4.1.11  代码块与条件测试	72
4.1.12  变量	74
4.2  pro.user文件	75
4.3  pri文件	75
4.4  Makefile	75
第5章  Qt入门	76
我们扔掉了纸尿裤，走出了Qt的第一步，兴奋地挥舞着小手颠颠儿着跑起来了，身边那些花儿，招呼一声吧。你好，QWidget；你好，QLabel；你好，QPushButton；你好，亲的信号与槽；你好，布局管理器……你看，它们回应你了，仿佛在说，你若安好，便是晴天。
5.1  Hello World再分析	76
5.2  QuitApp：带交互的小程序	77
5.3  初识信号与槽	79
5.4  构建复杂界面	80
5.4.1  盖洛普Q12测评程序	80
5.4.2  创建自己的槽	85
5.4.3  布局管理器介绍	85
5.4.4  控件回顾	88
5.5  追随Qt的代码风格	91
第6章  元对象系统	92
Qt的根基就在元对象系统，唯有修好内功，各种招式方可如臂使指，信手拈来。就让我们抽丝剥茧，以无刃入有间，看看signals、slots、emit、SLOT、SIGNAL这些Qt的繁花，就让我们跟着moc走上一遭，就让我们看看信号如何唤起阿槽，就让我们练练事件与过滤器的绝招……
6.1  牡丹花示例	93
6.2  再论编译过程	95
6.3  Q_OBJECT宏	96
6.4  QMetaObject	97
6.5  关键字signals、slots、emit、SIGNALS、SLOTS	97
6.5.1  signals	97
6.5.2  emit	98
6.5.3  slots	98
6.5.4  SIGNALS	98
6.5.5  SLOTS	98
6.6  moc的魔法	99
6.6.1  moc_peony.cpp的源码	99
6.6.2  moc的工作清单	101
6.6.3  信号的真容	101
6.6.4  信号与槽的约会	102
6.7  深入理解信号与槽	107
6.7.1  信号与槽原理	107
6.7.2  如何使用信号与槽	108
6.7.3  信号与槽的连接类型	109
6.7.4  信号与槽经验谈	110
6.7.5  跨线程使用信号与槽	110
6.8  属性系统	114
6.8.1  静态属性	114
6.8.2  动态（运行时）属性	117
6.9  事件和事件过滤器	118
6.9.1  重写event()	119
6.9.2  重写特定事件处理器	120
6.9.3  事件过滤器	120
6.9.4  自定义事件	122
6.10  定时器事件	124
6.10.1  使用QTimer	125
6.10.2  使用QObject::startTimer	125
6.11  对象树与生命周期	126
6.12  智能指针	131
6.12.1  QPointer	131
6.12.2  QSharedPointer	132
6.12.3  QWeakPointer	133
6.12.4  QScopedPointer	134
6.12.5  QObjectCleanupHandler	135
6.13  动态类型转换	136
6.14  国际化	136
6.14.1  字符串国际化方法	137
6.14.2  创建译本	138
6.14.3  装载译文文件	138
6.14.4  运行时改变语言	138
第7章  Qt模板库介绍	140
你离不开的，不只有空气、网络、微信、智能手机，还有接纳千言万语的QString，还有环环相扣的QList，还有你侬我侬的QMap，以及那些胸有千千壑可容万万对象的容器们。
7.1  使用QString	140
7.1.1  初始化一个字符串	141
7.1.2  操作字符串数据	141
7.1.3  字符串查询	142
7.1.4  编码转换	142
7.1.5  格式化输出	143
7.2  容器类	143
7.2.1  QList示例	144
7.2.2  QMap示例	146
第8章  Qt GUI编程	148
阿里巴巴进入了四十大盗的山洞，里面都有什么宝贝呢？单选按钮复选框，行编辑与分组框，列表和表格，文本框携手选项卡……你总是说，我要更多还要更美，QPainter会给你画笔，给你颜色，给你想不到的美好。
8.1  智能手机GUI特点	148
8.2  内建窗口控件介绍	149
8.2.1  QRadioButton	149
8.2.2  QCheckBox	150
8.2.3  QGroupBox	150
8.2.4  QLineEdit	152
8.2.5  QTextEdit	153
8.2.6  QTabWidget	154
8.2.7  QListWidget	155
8.2.8  Qt资源文件系统	158
8.2.9  QTableWidget	160
8.3  自定义窗口部件	166
8.3.1  使用QPainter绘图	166
8.3.2  为Android实现的ImageButton	167
8.3.3  文字渐变标签	169
第9章  多线程	174
上路吧，线程，请引领我们进入并行世界，那骑着单车看夕阳的时代已只堪怀念。低阶的QThread赐予我们强大的控制力，它的事件循环会开启潘多拉的盒子，跨线程的通信如此美丽。QThreadPool省却了我们繁重的手工，而QtConcurrent则在高屋建瓴，势必让我们使用并发不费吹灰之力。
9.1  上路吧，线程	174
9.2  线程自己的事件循环	176
9.3  岂能老死不相往来——线程间通信	177
9.3.1  跨线程的信号与槽	177
9.3.2  跨线程的事件	178
9.3.3  门铃示例程序	178
9.4  线程同步	182
9.5  使用QThread的注意事项	184
9.6  QThreadPool	184
9.7  高阶多线程API：QtConcurrent	185
第10章  网络编程	189
互联网的蓬勃发展从1995年开始，距今已有将近20年。2008年6月，iPhone 3G发布，开启移动互联网新纪元，距今已有7年。网络已经成为我们感知世界的重要神经元。在Qt的世界里，QNetworkAccessManager让网络连接与访问变得一致而简单，而QTcpSocket与QUdpSocket则为你扫清了socket的纷繁复杂，让你可以优雅地打造你的专属服务。
10.1  QNetworkAccessManager	189
10.1.1  http编程	190
10.1.2  ftp编程	198
10.2  QTcpSocket/QTcpServer	201
10.2.1  服务器	203
10.2.2  客户端	205
10.3  QUdpSocket	207
10.3.1  服务器	207
10.3.2  客户端	209
第11章  文件IO	211
我想要有个家，一个不需要华丽的地方，在我疲倦的时候我会想到它。在计算机的虚拟世界，那些在内存中运行的应用软件，它们有一个不变的根，就是文件。原始的文件操作艰涩难懂，而Qt提供的QFile、QTextStream、QDataStream这IO三剑客，化复杂为简单优雅。
11.1  QFile	211
11.2  QTextStream	214
11.3  QDataStream	215
第12章  XML	217
1998年2月，XML标准正式出炉，从此我们可以用它对文档和数据进行结构化处理，各种文件格式方言鱼龙混杂浮云蔽日的时代渐行渐远。多么美好的时代，Qt提供了DOM、SAX、StAX三种常见的XML处理模式，热情地支持我们说同一种语言。
12.1  XML读取与解析	217
12.1.1  DOM	218
12.1.2  SAX	219
12.1.3  StAX	223
12.2  XML文档生成与保存	226
12.2.1  QXmlStreamWriter	226
12.2.2  QDomNode::save()	227
12.2.3  疯狂原始人的方式	228
第13章  Qt on Android揭秘	229
也许你已经寻寻觅觅寻不到，Qt on Android的讯息。其实我一直在灯火阑珊处等你，现在就让我们点燃火把，做一回武陵捕鱼人，去寻桃花源。我们不仅要亲历Qt on Android应用的诞生过程，还要陪着它穿越JNI的逼仄入口，来到豁然开朗、美池桑竹各有其属的Qt王国。
13.1  APK是怎样炼成的	229
13.1.1  当你“运行”时	230
13.1.2  Android项目目录结构	232
13.1.3  string.xml介绍	233
13.1.4  AndroidManifest.xml介绍	233
13.1.5  libs.xml介绍	238
13.1.6  Androiddeployqt.exe都干了什么	239
13.2  Java与Qt的结合过程	242
13.2.1  应用入口	242
13.2.2  通信代理	245
13.2.3  QPA插件	248
13.3  Qt应用的状态	252
第14章  Android移动开发主题	253
江湖之远，庙堂之高，各有其运行规则。移动开发这片新天地，让我们不得不重新审视自己：怎么处理BACK键，如何回应纤纤玉指多情的触摸，怎样在传感器的迷宫中穿梭，面对拍照的需求能否响应，在水一方的伊人想玉笛暗飞声我们要不要十二万分热情地支持……
14.1  按键处理	253
14.1.1  重写keyPressEvent/keyReleaseEvent	254
14.1.2  给子控件安装事件过滤器	255
14.1.3  应用级别的事件过滤器	256
14.2  触摸与手势	258
14.2.1  触摸	258
14.2.2  手势	263
14.3  传感器与手势	264
14.3.1  常见传感器介绍	264
14.3.2  Qt传感器手势类库介绍	268
14.3.3  摇动手势	268
14.3.4  覆盖手势	269
14.3.5  自由落体	269
14.3.6  缠绕手势	269
14.3.7  翻转手势	269
14.3.8  扇动手势	270
14.3.9  传感器手势的使用	270
14.4  拍照	271
14.4.1  QCamera和它的小伙伴	271
14.4.2  QCameraViewFinder	273
14.4.3  QCameraImageCapture	273
14.4.4  使用相机拍照	274
14.4.5  在QML应用中使用相机	277
14.5  录音与回放	278
14.5.1  录音类库	278
14.5.2  播放类库	279
14.5.3  录音与回放小示例	279
第15章  使用JNI扩展你的应用	286
Qt强则强矣，雅则雅矣，毕竟也有力不能及之时，所谓天长地久有时尽，不应有恨月常圆。Qt为Android准备了QAndoidJniObject和QAndroidJniEnviroment两枚神器，借助它们，你就可以提升你的念力，请来Android平台的诸位神仙样人物帮你完成看似不可能的任务。
15.1  使用JNI Environment	286
15.2  调用Java代码	287
15.2.1  Java方法签名	288
15.2.2  调用Java方法	289
15.2.3  extendsQtWithJava实例	291
15.2.4  QtAndroid名字空间	298
15.2.5  使用手机外部存储	298
15.3  Java调用C++	299
第16章  纸上得来终觉浅，绝知此事要躬行	305
历15章之漫长，终于可以携剑下天山，就让我们红尘作伴，活得潇潇洒洒，策马奔腾，共享人世繁华。音乐，图片，笔记，拍照与美图，天气，查IP剖Json，这些，所有这些应用的出生与成长，我们将共同经历，一路上有你，苦一点也愿意……
16.1  笔记qnotepad	306
16.1.1  首页设计与实现	308
16.1.2  笔记对象	316
16.1.3  笔记浏览与编辑	318
16.2  图片浏览器	324
16.2.1  文件选择控件	324
16.2.2  图片加载器	335
16.2.3  图片显示	344
16.3  IP地址查询	351
16.3.1  Json数据格式简介	352
16.3.2  Qt中的Json类库	352
16.3.3  程序详解	353
16.4  音乐播放器	358
16.4.1  云想衣裳花想容——Qt样式表	359
16.4.2  多媒体类库介绍	361
16.4.3  音乐播放器详解	362
16.5  天气预报	380
16.5.1  云中谁寄锦书来——GPS定位	382
16.5.2  天气查询与显示	387
16.6  拍照与后期处理	396
16.6.1  方寸天地纳缱绻，楚楚蕴秀薄纸间	398
16.6.2  图像处理算法	401
16.6.3  图片加载与显示	410
16.6.4  组织部长	413
附录A  常见问题	420
参考文献	427
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Qt on Android 核心编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Gradle for Android 中文版
1 Gradle和Android Studio入门  1
1.1 Android Studio  1
1.2 理解Gradle基础  3
1.2.1 项目和任务  3
1.2.2 构建生命周期  4
1.2.3 构建配置文件  4
1.2.4 项目结构  5
1.3 创建新项目  6
1.4 Gradle Wrapper入门  10
1.4.1 获取Gradle Wrapper  10
1.4.2 运行基本构建任务  12
1.5 迁移出Eclipse  13
1.5.1 导入向导  13
1.5.2 手动迁移  15
1.6 总结  17
2 基本自定义构建  19
2.1 理解Gradle文件  19
2.1.1 settings 文件  20
2.1.2 顶层构建文件  20
2.1.3 模块的构建文件  21
2.2 任务入门  23
2.2.1 基础任务  24
2.2.2 Android 任务  24
2.2.3 Android Studio  25
2.3 自定义构建  27
2.3.1 操控manifest 条目  28
2.3.2 BuildConfig 和资源  29
2.3.3 项目范围的设置  30
2.3.4 项目属性  30
2.3.5 默认的任务  32
2.4 总结  32
3 依赖管理  33
3.1 依赖仓库  33
3.1.1 预定义依赖仓库  34
3.1.2 远程仓库  35
3.1.3 本地仓库  36
3.2 本地依赖  37
3.2.1 文件依赖  37
3.2.2 原生依赖库  37
3.2.3 依赖项目  38
3.3 依赖概念  39
3.3.1 配置  39
3.3.2 语义化版本  40
3.3.3 动态化版本  40
3.4 Android Studio  41
3.5 总结  43
4 创建构建Variant  44
4.1 构建类型  45
4.1.1 创建构建类型  45
4.1.2 源集  47
4.1.3 依赖  49
4.2 product flavor  49
4.2.1 创建product flavor  49
4.2.2 源集  50
4.2.3 多种定制的版本  50
4.3 构建variant  51
4.3.1 任务  52
4.3.2 源集  52
4.3.3 源集合并资源和manifest  52
4.3.4 创建构建variant  53
4.3.5 variant 过滤器  55
4.4 签名配置  56
4.5 总结  58
5 管理多模块构建  59
5.1 解剖多模块构建  59
5.1.1 重访构建生命周期  61
5.1.2 模块任务  62
5.2 将模块添加到项目  62
5.2.1 添加一个Java 依赖库  63
5.2.2 添加一个Android 依赖库  64
5.2.3 融合Android Wear  64
5.2.4 使用Google App Engine  65
5.3 提示和最佳实践  69
5.3.1 在Android Studio 中运行模块任务  69
5.3.2 加速多模块构建  70
5.3.3 模块耦合  70
5.4 总结  71
6 运行测试  72
6.1 单元测试  72
6.1.1 JUnit  72
6.1.2 Robolectric  76
6.2 功能测试  77
6.3 测试覆盖率  81
6.4 总结  82
7 创建任务和插件  83
7.1 理解Groovy  83
7.1.1 简介  84
7.1.2 类和成员变量  85
7.1.3 方法  85
7.1.4 Closures  86
7.1.5 集合  87
7.1.6 Gradle 中的Groovy  88
7.2 任务入门  89
7.2.1 定义任务  89
7.2.2 任务剖析  91
7.2.3 使用任务来简化release 过程  94
7.3 Hook到Android插件  97
7.3.1 自动重命名APK  97
7.3.2 动态创建新的任务  98
7.4 创建自己的插件  100
7.4.1 创建一个简单的插件  100
7.4.2 分发插件  101
7.4.3 使用自定义插件  103
7.5 总结  104
8 设置持续集成  105
8.1 Jenkins  105
8.1.1 设置Jenkins  106
8.1.2 配置构建  107
8.2 TeamCity  109
8.2.1 设置TeamCity  110
8.2.2 配置构建  110
8.3 Travis CI  111
8.4 自动化进阶  113
8.4.1 SDK mananger 插件  114
8.4.2 运行测试  114
8.4.3 持续部署  115
8.4.4 Beta 分发包  116
8.5 总结  117
9 高级自定义构建  118
9.1 减少APK文件大小  118
9.1.1 ProGuard  119
9.1.2 缩减资源  120
9.2 加速构建  121
9.2.1 Gradle 参数  122
9.2.2 Android Studio  123
9.2.3 Profiling  124
9.2.4 Jack 和Jill  125
9.3 忽略Lint  126
9.4 在Gradle中使用Ant  126
9.4.1 在Gradle 中运行Ant 任务  126
9.4.2 导入整个Ant 脚本  127
9.4.3 属性  129
9.5 高级应用部署  129
9.6 总结  131
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Gradle for Android 中文版
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Learning Android中文版
前言 ............................................................................. xv
第1 章 Android 概述 ..................................................... 1
1.1 Android 基本特点 ............................................................................................1
全面 .................................................................................................................1
开源平台 .........................................................................................................2
专为移动设备设计 ..........................................................................................2
1.2 历史 .................................................................................................................3
谷歌的动机 .....................................................................................................3
Android 的兼容性 ............................................................................................4
开放手机联盟 ..................................................................................................4
1.3 Android 的版本 ...............................................................................................5
1.4 Android 的风格 ...............................................................................................7
Android 开源项目 ............................................................................................7
制造商的加载项 ..............................................................................................7
1.5 总结 .................................................................................................................8
第2 章 Java 综述 .......................................................... 9
2.1 注释 ...............................................................................................................12
2.2 数据类型：基本数据类型和对象 ..................................................................13
2.3 修饰符 ...........................................................................................................14
2.4 数组 ...............................................................................................................15
2.5 运算符 ...........................................................................................................16
2.6 控制流语句 ...................................................................................................16
2.7 错误/ 异常处理 .............................................................................................19
2.8 复杂的示例 ...................................................................................................22
2.9 接口和继承 ...................................................................................................26
2.10 集合 .............................................................................................................27
2.11 泛型 .............................................................................................................28
2.12 线程 .............................................................................................................28
2.13 总结 .............................................................................................................29
第3 章 Android 套件 .................................................... 31
3.1 套件概述 .......................................................................................................31
3.2 Linux .............................................................................................................31
Android 不等于Linux ...................................................................................33
3.3 本地层 ...........................................................................................................33
HAL...............................................................................................................34
本地库 ...........................................................................................................34
本地守护进程 ................................................................................................35
本地工具 .......................................................................................................36
3.4 Dalvik ............................................................................................................36
Android 和Java .............................................................................................37
3.5 应用程序框架 ................................................................................................39
3.6 应用程序 .......................................................................................................40
Android 应用程序包（APK） .........................................................................40
应用程序签名 ................................................................................................41
应用程序分发 ................................................................................................41
3.7 总结 ...............................................................................................................42
第4 章 安装和开始使用Android 工具 ........................... 43
4.1 安装Java 开发工具包 ...................................................................................43
4.2 安装Android SDK ........................................................................................45
为工具设置PATH 环境变量 ..........................................................................45
安装Eclipse ..................................................................................................46
Eclipse 工作区 ...............................................................................................46
设置Android 开发工具 .................................................................................46
4.3 Hello World! ..................................................................................................48
创建新项目 ...................................................................................................48
4.4 剖析一个Android 项目 .................................................................................51
Android 的清单文件 ......................................................................................51
字符串资源 ...................................................................................................54
布局XML 代码 .............................................................................................55
4.5 可绘制资源 ...................................................................................................56
R 文件 ...........................................................................................................56
Java 源代码 ...................................................................................................57
4.6 构建项目 .......................................................................................................58
4.7 Android 仿真器 .............................................................................................59
仿真器与真实手机对比 .................................................................................59
4.8 总结 ...............................................................................................................62
第5 章 主要构件 .......................................................... 63
5.1 一个实际的例子 ............................................................................................63
5.2 活动 ...............................................................................................................64
活动的生命周期 ............................................................................................64
5.3 意图 ...............................................................................................................68
5.4 服务 ...............................................................................................................69
5.5 内容提供器 ...................................................................................................70
5.6 广播接收器 ...................................................................................................72
5.7 应用程序上下文 ............................................................................................72
5.8 总结 ...............................................................................................................74
第6 章 Yamba 项目概况 .............................................. 75
6.1 Yamba 应用程序 ............................................................................................75
6.2 设计理念 .......................................................................................................79
6.3 项目设计 .......................................................................................................80
6.4 第1 部分：Android 用户界面 .......................................................................81
6.5 第2 部分：意图、活动条及其他 ..................................................................82
6.6 第3 部分：Android 服务 ..............................................................................82
6.7 第4 部分：内容提供器 .................................................................................83
6.8 第5 部分：列表和适配器 .............................................................................83
6.9 第6 部分：广播接收器 .................................................................................84
6.10 第7 部分：应用程序控件 ...........................................................................84
6.11 第8 部分：联网和Web（HTTP） ................................................................85
6.12 第9 部分：动态壁纸和处理程序 ................................................................85
6.13 总结 .............................................................................................................85
第7 章 Android 的用户界面 ......................................... 87
7.1 创建用户界面的两种方法 .............................................................................87
声明式用户界面 ............................................................................................87
编程式用户界面 ............................................................................................88
各取所长 .......................................................................................................88
7.2 视图和布局 ...................................................................................................88
LinearLayout（线性布局） .............................................................................89
TableLayout（表格布局） ..............................................................................90
FrameLayout（帧布局） .................................................................................91
RelativeLayout（相对布局） ..........................................................................92
7.3 启动Yamba 项目 ...........................................................................................93
7.4 StatusActivity 布局 ........................................................................................97
重要的控件属性 .......................................................................................... 101
字符串资源 ................................................................................................. 103
7.5 StatusActivity Java 类 ................................................................................. 104
释放XML 到Java ....................................................................................... 104
初始化对象 ................................................................................................. 106
处理用户事件 .............................................................................................. 107
7.6 在Android 中记录消息日志 ........................................................................ 108
LogCat ......................................................................................................... 108
编译代码并构建项目：保存文件 ................................................................ 109
添加Twitter API 库 ..................................................................................... 112
更新清单文件以获取Internet 权限 ............................................................. 113
7.7 Android 中的线程机制 ................................................................................ 114
单线程 ......................................................................................................... 114
多线程的执行 .............................................................................................. 115
AsyncTask（异步任务） ............................................................................... 116
7.8 其他UI 事件 ............................................................................................... 119
7.9 备用资源 ..................................................................................................... 124
7.10 总结 ........................................................................................................... 127
第8 章 片段 .............................................................. 129
8.1 片段示例 ..................................................................................................... 129
8.2 片段的生命周期 .......................................................................................... 136
8.3 动态添加片段 .............................................................................................. 137
8.4 总结 ............................................................................................................. 139
第9 章 意图、活动条及其他 ....................................... 141
9.1 首选项 ......................................................................................................... 141
首选项资源 ................................................................................................. 142
SettingsActivity ........................................................................................... 145
更新清单文件 .............................................................................................. 147
9.2 活动条 ......................................................................................................... 148
创建一个空白主活动 ................................................................................... 149
菜单资源 ..................................................................................................... 150
Android 的系统资源 .................................................................................... 152
加载菜单 ..................................................................................................... 153
更新StatusActivity 来处理菜单事件 ........................................................... 154
9.3 共享首选项及更新消息片段 ....................................................................... 155
9.4 文件系统简介 .............................................................................................. 157
访问文件系统 .............................................................................................. 158
文件系统分区 .............................................................................................. 158
系统分区 ..................................................................................................... 158
SD 卡分区 ................................................................................................... 158
用户数据分区 .............................................................................................. 160
文件系统安全 .............................................................................................. 161
9.5 总结 ............................................................................................................. 161
第10 章 服务 ............................................................ 163
10.1 示例服务：RefreshService ........................................................................ 164
创建RefreshService Java 类 ........................................................................ 164
介绍IntentService ....................................................................................... 166
更新清单文件 .............................................................................................. 167
添加菜单项 ................................................................................................. 168
更新选项菜单处理 ...................................................................................... 168
测试服务 ..................................................................................................... 169
10.2 从Yamba 提取数据 ................................................................................... 169
测试服务 ..................................................................................................... 172
10.3 总结 ...............................................................................................172
第11 章 内容提供器 .................................................. 175
11.1 Android 上的数据库 .................................................................................. 175
关于SQLite ................................................................................................. 176
DbHelper ..................................................................................................... 176
数据库模式及其创建 ................................................................................... 177
四个主要操作 .............................................................................................. 177
游标 ............................................................................................................. 178
11.2 消息合同类 ................................................................................................ 179
11.3 更新RefreshService .................................................................................. 181
测试服务 ..................................................................................................... 184
11.4 内容提供器 ................................................................................................ 186
11.5 创建一个内容提供器 ................................................................................. 187
定义URI ..................................................................................................... 187
获取数据类型 .............................................................................................. 189
插入数据 ..................................................................................................... 191
更新数据 ..................................................................................................... 192
删除数据 ..................................................................................................... 193
查询数据 ..................................................................................................... 194
更新Android 清单文件 ............................................................................... 199
更新RefreshService .................................................................................... 200
11.6 总结 ........................................................................................................... 201
第12 章 列表和适配器 ............................................... 203
12.1 主活动 ....................................................................................................... 203
12.2 基本的主活动 ............................................................................................ 203
12.3 时间表片段 ............................................................................................... 205
创建列表项布局 .......................................................................................... 206
12.4 关于适配器 ............................................................................................... 207
12.5 加载数据 ................................................................................................... 208
12.6 通过ViewBinder 定制逻辑 ....................................................................... 211
12.7 详情视图 ................................................................................................... 213
详情片段 ..................................................................................................... 214
详情活动 ..................................................................................................... 216
注册到清单文件 .......................................................................................... 217
主活动，横向视图 ...................................................................................... 217
更新时间表片段 .......................................................................................... 218
12.8 总结 ........................................................................................................... 221
第13 章 广播接收器 .................................................. 223
13.1 关于广播接收器 ........................................................................................ 223
13.2 开机接收器 ............................................................................................... 224
将BootReceiver 注册到Android 清单文件 ................................................. 224
测试开机接收器 .......................................................................................... 225
13.3 警报和系统服务 ........................................................................................ 225
13.4 广播意图 ................................................................................................... 227
通知接收器 ................................................................................................. 230
13.5 总结 ........................................................................................................... 231
第14 章 应用程序控件 ............................................... 233
14.1 通过控件使用内容提供器 ......................................................................... 233
实现YambaWidget 类 ................................................................................. 234
创建XML 布局 ........................................................................................... 236
创建AppWidgetProviderInfo 文件 .............................................................. 238
更新清单文件 .............................................................................................. 238
测试控件 ..................................................................................................... 239
14.2 总结 ........................................................................................................... 239
第15 章 联网和Web 概述 .......................................... 241
15.1 简单的例子 ............................................................................................... 241
15.2 联网基础 ................................................................................................... 242
15.3 HTTP API .................................................................................................. 244
15.4 Apache HTTP 客户端 ................................................................................ 245
15.5 HttpUrlConnection .................................................................................... 248
15.6 使用AsyncTask 和AsyncTaskLoader 在后台联网 .................................... 251
15.7 总结 ........................................................................................................... 251
第16 章 互动与动画：动态壁纸和处理程序 ................ 253
16.1 动态壁纸 ................................................................................................... 253
16.2 处理程序 ................................................................................................... 260
16.3 总结 ........................................................................................................... 262
索引 ........................................................................... 263
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Learning Android中文版
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>OpenGL ES 2.0游戏与图形编程——适用于iOS 和 Android
目    录
第1章  入门	1
1.1  软件需求	1
1.1.1  针对iOS开发人员	1
1.1.2  针对Android开发人员	2
1.2  下载本书的SDK	3
1.3  导入项目	4
1.3.1  针对iOS开发人员	5
1.3.2  针对Android开发人员	5
1.4  模板	6
1.5  小结	7
第2章  设置图形投影	9
2.1  三种基本的投影类型	9
2.2  正射2D投影	11
2.2.1  程序和项目初始化	12
2.2.2  顶点和片段着色器	14
2.2.3  链接着色器程序	16
2.2.4  绘图代码	18
2.3  正交投影	23
2.4  透视投影	26
2.5  小结	27
第3章  处理复杂几何图形	29
3.1  Wavefront文件格式	29
3.1.1  cube.obj	30
3.1.2  cube.mtl	31
3.2  准备OBJ浏览器代码	31
3.3  加载OBJ	32
3.4  构建着色器	35
3.4.1  顶点着色器	35
3.4.2  片段着色器	36
3.4.3  顶点缓冲区对象	36
3.4.4  存储顶点数据	36
3.4.5  构建顶点数据数组(VBO)	38
3.4.6  构建元素数组VBO	39
3.5  构建VAO	40
3.6  渲染Momo	42
3.7  处理Touche事件	44
3.8  逐顶点光照	45
3.8.1  顶点着色器的光照计算	46
3.8.2  修改片段着色器	47
3.8.3  更多uniform变量	48
3.9  对Momo进行美化	49
3.9.1  加载纹理	49
3.9.2  调整顶点数据	50
3.9.3  向顶点着色器添加UV
支持	52
3.9.4  向片段着色器添加纹理支持	52
3.9.5  绑定纹理	53
3.10  小结	54
第4章  构建场景	55
4.1  处理多个对象	55
4.2  代码结构	56
4.3  加载和绘制场景	57
4.4  着色器代码	61
4.5  不同的对象类型	62
4.6  绘制顺序	62
4.7  修复场景	63
4.7.1  Uber Shader	63
4.7.2  使用Uber Shader	64
4.7.3  渲染循环对象分类	67
4.7.4  双面	69
4.8  逐像素光照	71
4.8.1  使顶点着色器更加丰富	71
4.8.2  获取使用了更多Uber的片段着色器	72
4.8.3  封装实现代码	74
4.9  小结	77
第5章  优化	79
5.1  基本应用程序	79
5.2  从三角形到三角形带	80
5.3  构建三角形带	81
5.4  纹理优化	82
5.5  添加16位纹理转换	83
5.6  PVR纹理压缩	84
5.7  仿造细节	85
5.7.1  凸凹贴图的实现	85
5.7.2  精度限定符优化	86
5.7.3  法线贴图光照计算	88
5.7.4  添加反射	90
5.8  几何图形和着色器LOD	91
5.9  纹理地图集	91
5.10  在软件中管理状态	92
5.11  自动着色器优化	93
5.12  小结	94
第6章  实时物理	95
6.1  物理对象类型	95
6.2  物理形状	96
6.3  使用Bullet	97
6.4  Hello Physics	97
6.5  碰撞回调、触发器和接触点	102
6.5.1  Contact-Added回调	103
6.5.2  Near回调	105
6.5.3  接触点	106
6.6  2D物理	107
6.6.1  更多形状！	108
6.6.2  构建物理对象	111
6.6.3  摄像头跟踪	112
6.6.4  用户交互	114
6.6.5  游戏逻辑	114
6.7  3D物理	118
6.7.1  Bullet文件格式	118
6.7.2  3D弹珠游戏	119
6.8  小结	125
第7章  摄像头	127
7.1  一触即发	128
7.2  摄像头视锥	130
7.2.1  视锥构建方式	131
7.2.2  视锥剪切的实现	132
7.2.3  更多剪切函数	133
7.3  摄像头飞行模式	134
7.4  带有碰撞检测的第一人称
摄像头	139
7.5  3D摄像头跟踪	141
7.6  带有碰撞的第三人称摄像头	143
7.7  小结	148
第8章  路径发现	149
8.1  Recast和Detour	149
8.2  导航	150
8.3  创建导航网格	151
8.4  3D物理拾取	153
8.5  玩家的自动驱动	157
8.6  使路径点可见	159
8.7  游戏“如果能就抓住我！”	161
8.8  了解你的敌人	164
8.9  游戏状态逻辑	165
8.10  小结	168
第9章  音频及其他极佳的游戏编程资料	171
9.1  OpenAL	172
9.2  OGG Vorbis	173
9.3  Hello World OpenAL样式	173
9.4  初始化OpenAL	174
9.5  播放静态内存声音	174
9.6  定位声源	176
9.7  钢琴游戏	177
9.7.1  加载静态的流式声音	178
9.7.2  颜色提取	182
9.7.3  钢琴游戏逻辑	185
9.7.4  最后的调整	188
9.8  滚球游戏	190
9.8.1  GFX着色器	191
9.8.2  链接定位声源	192
9.8.3  加速计驱动摄像头	196
9.8.4  廉价的FX	199
9.8.5  游戏逻辑和调整	200
9.9  小结	206
第10章  高级光照	207
10.1  灯的类型	207
10.2  使用光源	208
10.2.1  定向灯着色器	211
10.2.2  使用Struct作为Uniform	214
10.3  点灯	217
10.3.1  点光源着色器代码	218
10.3.2  光的衰减	221
10.3.3  带有衰减代码的点光源	222
10.3.4  衰减Uniform变量	223
10.3.5  球体点光源	224
10.3.6  调整点光源代码	225
10.3.7  聚光灯	227
10.3.8  聚光灯着色器代码	229
10.4  多个光源	231
10.5  使着色器程序动态化	234
10.6  小结	235
第11章  高级FX	237
11.1  渲染到纹理	238
11.2  后处理效果	238
11.2.1  第一渲染通道	241
11.2.2  第二渲染通道	242
11.2.3  全屏通道和模糊着色器	243
11.3  投影纹理	246
11.4  投影着色器	249
11.5  投影实时阴影	250
11.6  使用深度纹理投射阴影	254
11.7  关于帧缓冲对象的其他内容	255
11.8  粒子	255
11.9  小结	257
第12章  骨骼动画	259
12.1  传统的动画系统与最新的动画系统	259
12.2  MD5文件格式	261
12.3  加载MD5网格	261
12.4  对网格进行动画处理	264
12.4.1  LERP	266
12.4.2  SLERP	266
12.5  混合动画	267
12.6  相加混合	269
12.7  小结	271
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>OpenGL ES 2.0游戏与图形编程——适用于iOS 和 Android
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android程序设计基础
第1章  认识一下Android第2章  搭建Android应用开发环境第3章  Activity组件第4章  界面布局第5章  资源管理第6章  Intent组件第7章  Service第8章  Broadcastreceiver第9章  Contentprovider第10章  Fragment第11章  基本UI组件第12章  高级UI组件第13章  Menu第14章  Actionbar第15章  通知第16章  Dialog第17章  Alarm第18章  触摸处理第19章  深入View第20章  线程与进程第21章  Preferences第22章  文件操作第23章  数据库第24章  综合示例
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android程序设计基础
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android应用程序安全
第1章　Android架构	1
1.1　Android架构的组件	3
1.1.1　内核	4
1.1.2　类库	5
1.1.3　Dalvik虚拟机	5
1.1.4　应用程序框架	6
1.1.5　应用程序	8
1.2　这本书是关于什么的	9
1.3　安全	9
1.3.1　保护用户	10
1.3.2　安全风险	10
1.4　Android安全架构	12
1.4.1　特权分离	12
1.4.2　权限	13
1.4.3　应用程序代码签名	14
1.5　总结	14
第2章　信息：应用的基础	16
2.1　保护你的应用免受攻击	17
2.1.1　间接攻击	17
2.1.2　直接攻击	19
2.2　项目1：“Proxim”和数据存储	19
2.3　信息分类	27
2.3.1　什么是个人信息	29
2.3.2　什么是敏感信息	29
2.4　代码分析	29
2.4.1　实施加密	30
2.4.2　加密结果	32
2.5　重构项目1	33
2.6　练习	35
2.7　总结	36
第3章　Android安全架构	37
3.1　重温系统架构	38
3.2　理解权限架构	40
3.2.1　Content Provider	41
3.2.2　Intent	46
3.3　权限检查	47
3.3.1　使用自定义权限	48
3.3.2　保护级别	49
3.3.3　自定义权限的示例代码	50
3.4　总结	53
第4章　动手实践（第一部分）	55
4.1　Proxim应用	56
4.2　总结	64
第5章　数据存储和密码学	65
5.1　公钥基础设施（PKI）	67
5.2　密码学中用到的术语	70
5.3  手机应用中的密码学	71
5.3.1　对称加密算法	72
5.3.2　密钥生成	73
5.3.3　数据填充	74
5.3.4　分组密码的几种模式	75
5.4　Android系统中的数据存储	80
5.4.1　用户数据共享	81
5.4.2　内部存储	84
5.4.3　SQLite数据库	87
5.5　加密的数据存储	93
5.6　总结	101
第6章　对话Web应用	103
6.1　搭建环境	105
6.2　HTML、Web应用和Web服务	113
6.2.1  Web应用的组成	115
6.2.2　Web应用用到的技术	117
6.3  OWASP与Web攻击	124
6.4　认证技术	126
6.4.1　自签名证书	131
6.4.2　中间人攻击	132
6.4.3　OAuth	134
6.4.4　加密的挑战/应答	143
6.5　总结	143
第7章　企业级应用开发安全	144
7.1　安全的连接	145
7.2　企业应用程序	147
7.3　手机中间件	147
7.3.1  数据库访问	149
7.3.2  数据表示	155
7.4　总结	162
第8章　动手实践（第二部分）	163
8.1  OAuth	164
8.1.1  获得令牌	165
8.1.2  处理授权	166
8.2　挑战与应答	178
8.3　总结	193
第9章　发布和出售你的应用	194
9.1  开发人员注册	195
9.2  你的应用处在暴露中	197
9.2.1  可供下载的资源	198
9.2.2  逆向工程	202
9.3  应该进行许可验证吗	208
9.4  Android许可验证库	208
9.4.1  下载Google API Add-On	215
9.4.2  复制LVL文件至单独目录	217
9.4.3  导入LVL源文件作为一个Library项目	217
9.4.4  在应用中构建和引入LVL	222
9.5  许可策略	229
9.6  有效利用LVL	231
9.7  模糊处理	233
9.8  总结	236
第10章　恶意软件和间谍软件	238
10.1  恶意软件的四个阶段	240
10.1.1  感染	240
10.1.2  破坏	240
10.1.3  传播	241
10.1.4  泄露	241
10.2  案例学习1：政府批准的恶意软件	241
10.2.1  感染	242
10.2.2  破坏	243
10.2.3  传播	243
10.2.4  泄露	243
10.2.5  检测	244
10.3  案例学习2: 零售恶意软件——FlexiSPY	246
10.4  反取证	248
10.5  总结	250
附录A　Android权限常量	252
附录B　如何使用Apache Wink创建RESTful Web Services	262
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android应用程序安全
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android 超级用户工具箱
序	IX
前言	1
什么是XDA	1
面临的难题	3
本书读者对象	8
本书的内容	8
本书的结构	8
阅前准备	9
第1部分  基础知识
第1章  Android OS内部机制——了解设备如何启动	13
企鹅——Linux内核	14
Android设备如何启动	16
定制Recovery程序：制胜法宝	22
第2章  获取Android设备的超级权限	27
为什么要获取超级权限	28
备份数据	34
如何获取超级权限以摆脱OEM的控制	36
获取两种设备的超级权限	42
获取超级权限不止如此	46
第3章  工作所需的工具	49
破解工作所需的工具	50
USB电缆	52
USB调试	53
驱动程序	55
使用ADB	56
Fastboot的功能	66
利用ADB shell赋予强大的Linux内核功能	68
BusyBox：赋予更多Linux内核功能	82
第4章  获取超级权限和安装定制Recovery程序	87
如何使用Exploit程序	88
破解实用工具	94
Recovery模式	96
使用ClockworkMod Recovery	99
备份和意外故障恢复	111
第5章  更换主题：数码整容外科手术	117
更改Android外观	118
更换主题用到的工具	120
编辑过程	124
第6章  超级用户工作	135
通用的多设备定制ROM	136
内核调整	138
超级权限应用程序	141
第2部分  制造商指南及专用设备指南
第7章  HTC EVO 3D：一个锁定的设备	149
临时获取超级权限	150
设置S-OFF和永久获得超级权限的要求	152
第8章  Nexus One：一个可解锁的设备	163
获取超级权限的方法	164
攻略所需的资源	165
攻略	166
第9章  HTC ThunderBolt：一个紧锁的设备	175
获取超级权限的方法	176
攻略所需的资源	177
攻略	178
第10章  Droid Charge：用ODIN刷写	189
攻略所需的资源	190
攻略	191
故障排除	194
第11章  Nexus S：一个解锁的设备	197
将设备连接至PC	198
攻略所需的资源	198
攻略	199
第12章  Motorola Xoom：一个解锁的
Honeycomb平板设备	203
攻略所需的资源	204
攻略	204
第13章  Nook Color：用可引导的SD卡获取超级权限	211
攻略所需的资源	212
攻略	213
附录A  设置Android SDK和ADB工具	217
安装Java Development Kit	218
安装Android SDK	219
安装平台工具	220
设置Windows环境变量	223
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android 超级用户工具箱
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android 2.3应用开发实战
第1章 拓展Android市场的Java应用
1.1 Android来了.................................. 2
1.2 Android操作系统结构................... 3
1.2.1 Android应用程序........... 4
1.2.2 Android应用程序开发平台.................. 4
1.2.3 Android的各类链接库 ... 5
1.2.4 Android运行时环境....... 6
1.2.5 Linux操作系统核心 ....... 7
1.3 OESF扩增功能............................. 7
1.3.1 OESF EM嵌入式项目.... 7
1.3.2 OESF针对的相关产业和设备.............. 8
1.3.3 OESF工作小组.............. 9
1.4 Android—Windows开发环境..................... 10
1.5 在 Android Market销售你的应用软件............... 12
1.5.1如何上传应用软件到 Android Market集市网站........ 13
1.5.2 如何从 Android Market集市网站下载应用软件........ 14
第2章 安装Android SDK开发环境
2.1 Android SDK开发环境................ 16
2.1.1 安装 Android SDK开发环境.............. 16
2.1.2快速了解安装 Android SDK开发环境程序............... 17
2.1.3符合安装Android SDK的必要条件... 17
2.2 安装 Android SDK开发环境........ 18
2.2.1 安装 Android SDK软件开发包 .......... 18
2.2.2 安装 Android开发工具 ADT............... 20
2.2.3 设置 Android开发工具 ADT............... 24
2.2.4 创建 Android虚拟设备 AVD .............. 25
2.2.5 验证 Android SDK软件开发环境....... 28
2.2.6 安装 Windows USB驱动程序............ 30
2.3 安装 Android SDK前必要的软件 32
2.3.1 安装 Java开发包 JDK . 33
2.3.2 安装 Eclipse集成开发环境 ................ 34
2.4更新到新版本 Android开发工具 ADT ............... 35
2.5 删除 Android开发工具 ADT ........ 36
2.6 Android—“Hello World !”验证.................... 36
2.6.1 生成 Android应用程序代码............... 36
2.6.2 执行 Android应用程序. 39
第3章 Android SDK开发平台应用
3.1 Android SDK开发平台应用 ........ 43
3.2 Android仿真器............................ 43
3.2.1 控制 Android仿真器.... 45
3.2.2 Android仿真器启动选项.................... 46
3.3 Android仿真器专用 SD存储卡... 47
3.4 Android系统调试工具—ADB .................... 48
3.4.1 adb命令的标准格式 .... 49
3.4.2 侦测 adb服务器的信息 49
3.4.3安装与移除应用程序 apk套件........... 50
3.4.4 Android操作系统命令行模式............. 51
3.4.5上传文件到 /sdcard或自 /sdcard下载文件............. 51
3.4.6 变更 TCP通信端口...... 52
3.4.7启动和关掉 adb服务器 52
3.4.8 Android仿真器的调试监控报告......... 52
3.5 Android调试监控服务系统 DDMS.................... 53
3.5.1 Eclipse开发环境提供 DDMS............. 53
3.5.2 ddms批处理文件......... 55
第4章 认识Android基本单元—活动程序Activity
4.1 Android应用程序组成................. 59
4.1.1活动程序—Activity ..................... 59
4.1.2活动程序—Activity范例............. 59
4.2执行状态迁移的生命周期（Lifecycle）............. 63
4.2.1 Android操作系统执行状态迁移的生命周期.............. 64
4.2.2活动程序—Activity执行状态迁移的生命周期范例..................... 66
4.3精通活动程序—Activity的控制功能.......... 69
4.3.1 finish() 方法................. 70
4.3.2 isfinishing() 方法.......... 70
4.3.3 onLowMemory() 方法.. 70
第5章 活动程序Activity的切换—意图方法Intent
5.1活动程序 Activity和意图方法 Intent ................. 72
5.1.1 Android如何切换显示窗体................ 72
5.1.2 Chat Activities应用程序.................... 73
5.2 建立 Chat Activities应用程序..... 74
5.2.1 Chat Activities应用程序—窗体布局................. 74
5.2.2 Chat Activities应用程序—资源.. 75
5.2.3 Chat Activities应用程序—Manifest.................. 76
5.3 Chat Activities应用程序实现...... 77
5.4 标准意图方法 Intent.................... 80
第6章 Android应用程序的Widget创作套件
6.1 Android应用程序的人机接口...... 84
6.1.1 视图（View）.............. 84
6.1.2 视图组（ViewGroup）....... 84
6.2 Android应用程序窗体布局.......... 85
6.2.1 布局编辑器—Android Layout Editor.................. 85
6.2.2 资源编辑器—Android Resource Editor.............. 86
6.3 视图（View）范例...................... 86
6.3.1 按钮事件处理—Button............... 89
6.3.2 编辑框事件处理—EditText......... 93
6.3.3 时钟事件处理—AnalogClock/DigitalClock ....... 96
6.3.4 进度条事件处理—ProgressBar .. 98
6.3.5 日期和时间事件处理—DatePicker/TimePicker....................... 101
6.3.6 计时表事件处理—Chronometer ...................... 104
6.3.7 对话框事件处理—AlertDialog/Toast .............. 105
6.3.8 下拉列表事件处理—SpinnerSelect ................. 110
6.3.9 网格视图事件处理—GridView.. 112
6.3.10 视频播放事件处理 —Video ..... 114
6.3.11 相册事件处理 —Gallery .......... 116
6.3.12 拖动条事件处理 —RatingBar/SeekBar ......... 118
第7章 Android应用程序的Layout窗体布局
7.1 Android应用程序的窗体布局.... 122
7.1.1 表格布局—Table Layout........... 123
7.1.2 线性布局—Linear Layout ......... 124
7.1.3 相对布局—Relative Layout ...... 126
7.1.4 绝对布局—Absolute Layout ..... 127
7.1.5 框架布局—Frame Layout ......... 129
7.2 建立窗体布局 Layout文件........ 130
7.2.1 建立显示窗体 XML文件.................. 130
7.2.2 设计显示窗体上的布局.................... 130
7.3 显示窗体布局 Layout范例........ 131
7.3.1 表格布局范例—Table Layout ... 134
7.3.2 线性布局范例—Linear Layout .. 136
7.3.3 相对布局范例—Relative Layout ...................... 138
7.3.4 绝对布局范例—Absolute Layout..................... 140
7.3.5 窗体布局 Layout的范例程序........... 142
第8章 Android应用程序的Menu菜单
8.1 Android应用程序的 Menu菜单. 145
8.1.1 选项菜单—Option Menu .......... 145
8.1.2 上下文菜单—Context Menu..... 146
8.1.3 子菜单—Submenu.................... 146
8.2 规划选项菜单............................ 146
8.2.1 如何规划选项菜单 ..... 146
8.2.2 如何处理选项菜单的选项 ................ 147
8.2.3 处理选项菜单范例 ..... 148
8.3 规划上下文菜单 ........................ 150
8.3.1 如何规划上下文菜单.. 151
8.3.2 如何处理上下文菜单的选项............. 151
8.3.3 处理上下文菜单范例.. 152
8.4 规划子菜单................................ 154
8.4.1 如何规划子菜单......... 155
8.4.2 如何处理子菜单的选项.................... 155
8.4.3 处理子菜单范例......... 155
第9章 Android数据存储和数据公开—SQLite
9.1 Android数据存储和共享 ........... 159
9.2 实现共享优先数据方法—Shared Preferences ............... 159
9.2.1 共享优先数据存取方法.................... 160
9.2.2 应用程序范例—离开时存储优先数据.............. 165
9.3 数据库存储方法—SQLite Databases ...... 167
9.3.1 SQLite数据库添加、更新、删除、检索方法......... 170
9.3.2 SQLite数据库关联操作方法............ 176
9.4 内容提供器方法—Content Providers....... 182
9.4.1 内容提供器公开数据方法 ................ 185
9.4.2 SQLite应用程序改用 Content Provider来公开数据 ........................ 190
9.5 文件存储方法—Files.......... 198
9.5.1 文件写入、读出和拷贝方法 .............. 199
9.5.2 SQLite数据库和应用程序一起发布 .. 204
9.6 网络存储方法—Networks.. 206
第10章 认识Service服务程序
10.1 Android应用程序组成............. 219
10.1.1 服务程序 Service角色................... 219
10.1.2 广播接收器 Broadcast Receiver角色 ................... 219
10.2 服务程序 Service..................... 220
10.2.1 启动服务程序 Service.................... 221
10.2.2 服务程序 Service的执行状态迁移. 221
10.2.3 创建一个服务程序 Service............. 223
10.3 广播接收器 BroadcastReceiver..................... 223
10.3.1 实现广播事件 ........... 223
10.3.2 使用 BroadcastReceiver广播接收器 .................... 224
10.4 服务程序和广播接收器整合.... 225
第11章 Android应用程序国际化
11.1 Android国际化........................ 235
11.2 Android资源规划.................... 236
11.2.1 创建 Android资源.... 237
11.2.2 创建 Android多语言资源............... 237
11.3 Android多语言范例................. 238
第12章 Android的Web视图—WebView
12.1 Android的 Web视图............... 241
12.1.1 Android浏览器 WebView .............. 241
12.1.2 Android应用程序和 JavaScript互动.................... 241
12.2 浏览网页 WebView.loadUrl实现方法 ........... 241
12.3 浏览网页 WebView范例......... 243
12.3.1 直接下载 Yahoo或 Google网页 .... 246
12.3.2 输入网址再下载网页 249
12.3.3 WebView网页向前和向后浏览历史管理—Back/Forward ................... 251
12.3.4 WebView网页放大和缩小—Zoom in/Zoom out .......................... 255
12.4 触控网页 Motion Gesture........ 258
12.5 Android应用程序和 JavaScript脚本代码互操作方法.......... 261
12.5.1 JavaScript脚本代码调用 Android应用程序......... 262
12.5.2 JavaScript脚本代码的警告信息.... 263
12.5.3 Android应用程序调用 JavaScript脚本代码......... 264
12.6 JavaScript脚本代码互联范例. 266
12.6.1 JavaScript脚本代码调用 Android应用程序范例.. 268
12.6.2 JavaScript脚本代码的警告信息范例.................... 271
12.6.3 JavaScript脚本代码的语言翻译范例.................... 273
12.6.4 Android应用程序调用 JavaScript脚本代码范例.. 276
第13章 Android常驻程序—App Widget
13.1 Android的常驻程序 App Widget体验........... 280
13.1.1 调用常驻程序 App Widget............. 280
13.1.2 一般系统常驻程序和 Android系统常驻程序......... 281
13.2 Android常驻程序的可用功能.. 281
13.3 常驻程序的生命周期............... 282
13.4 建立 Android常驻程序方法..... 283
13.4.1 Android配置文件..... 284
13.4.2 常驻程序信息文件 ... 285
13.4.3 Layout窗体布局文件..................... 285
13.4.4 AppWidgetProvider常驻程序........ 286
13.4.5 常驻程序配置 Activity.................... 287
13.4.6 实现常驻程序生命周期—AppWidgetProvider ....................... 288
13.5 Android常驻程序范例............. 289
13.5.1 常驻程序生命周期—LifeCycle范例 .............. 291
13.5.2 指定间隔时间执行—SlideShow常驻程序范例............................. 295
13.5.3 指定间隔时间执行—WhatTimeIsItNow常驻程序范例 ........................ 296
13.5.4 指定时刻时执行—AlarmManagerSample常驻程序范例........................ 298
13.5.5 单击按钮时执行—ClickSample常驻程序范例....................... 301
13.6 采用自定义的 thread 来处理常驻程序范例... 304
13.7 采用 timer task方式来处理常驻程序范例..... 306
第14章 Android应用程序GPS位置和GoogleMaps
14.1 GPS位置和 GoogleMaps........ 309
14.1.1 GPS定位服务.......... 309
14.1.2 Google地图外部库.. 309
14.2 取得 GPS位置信息................. 309
14.2.1 LocationManager类  310
14.2.2 LocationListener接口.................... 310
14.2.3 Location类............... 311
14.2.4 LocationProvider类. 311
14.2.5 LocationGPS应用程序范例—GPS位置信息 311
14.2.6 在仿真器测试 LocationGPS应用程序范例........... 314
14.3 取得 Google地图外部库 ......... 316
14.3.1 开发 Google地图应用程序前的工作..................... 316
14.3.2 Google地图应用程序范例—从 Google地图服务系统获得地图................ 318
14.4 使用 MapView前先取得 Maps API Key ........ 320
14.4.1 使用 Maps API Key的重点 ............ 320
14.4.2 产生 keystore并取得认证指纹（MD5）码 .......... 320
14.4.3 经 Google网站的签署取得 Maps API Key............ 321
14.5 Google地图上贴上标记 .......... 323
14.5.1 Google地图应用程序范例—实现一个 ItemizedOverlay类...................... 323
14.5.2 Google地图应用程序范例—Google地图上贴上标记............................... 325
14.6 按 GPS位置来显示 Google地图................... 327
第15章 Android音频和视频
15.1 Android音频和视频................. 331
15.2 播放视频在窗体布局上—VideoView...... 332
15.3 播放音频和视频—MediaPlayer.............. 334
15.3.1 播放媒体来自本地资源.................. 334
15.3.2 播放媒体来自系统文件和数据流.... 335
15.4 播放媒体应用程序范例 MediaPlayer............. 335
15.4.1 MediaPlayerAudio应用程序范例... 338
15.4.2 MediaPlayerVideo应用程序范例... 342
15.5 播放 JET内容.......................... 349
15.6 捕捉音频内容—MediaRecorder............. 350
15.7 Android文字到语音转换—TextToSpeech..................... 351
第16章 Android 2D绘图和3D OpenGL绘图
16.1 Android操作系统的绘图 ......... 355
16.1.1 二维绘图.................. 355
16.1.2 三维绘图.................. 355
16.2 绘制二维图形的方法............... 355
16.3 图像显示对象—Drawable ........ 356
16.3.1 从项目资源来创建图像 .................. 356
16.3.2 从项目资源来创建图像的范例....... 358
16.3.3 从 XML文件来定义图像 ................ 359
16.3.4 从 XML文件定义图像—TransitionDrawable范例................... 361
16.3.5 形状图像绘制对象—ShapeDrawable ............ 362
16.4 创建二维动画—Animation ..................... 364
16.4.1 补间动画绘制对象—Tween Animation .......... 364
16.4.2 补间动画绘制对象—Tween Animation范例.. 367
16.4.3 帧动画绘制对象—Frame Animation .............. 371
16.4.4 帧动画绘制对象—Frame Animation范例...... 372
16.5 直接在画布描绘图形—Canvas .............. 376
16.5.1 画布描绘图形—View.............. 376
16.5.2 画布描绘图形—View范例...... 377
16.5.3 画布高速描绘—SurfaceView.. 379
16.6 3D OpenGL绘图..................... 380
第17章 Android高速描绘—SurfaceView
17.1 Android高速描绘 SurfaceView ..................... 382
17.1.1 高速描绘画布 SurfaceView方法—SurfaceView.getHolder............................ 382
17.1.2 高速描绘画布 SurfaceView方法—SurfaceHolder.Callback ............................ 382
17.1.3 SurfaceView类和方法................... 383
17.1.4 各类描绘方式和方法 ....... 384
17.1.5 SurfaceView类的按键输入事件 .... 386
17.2 高速描绘 SurfaceView范例 .... 386
17.2.1 高速描绘画布 SurfaceView方法—SurfaceView.getHolder范例....................... 388
17.2.2 高速描绘画布 SurfaceView方法—SurfaceHolder.Callback范例...................... 390
17.2.3 平滑锯齿方法—AntiAlias范例 ...................... 392
17.2.4 描绘方式和方法的范例—简单 Game............. 395
17.2.5 描绘画布的保存和回复范例—Canvas方法... 405
17.2.6 按键事件处理范例—Key ........ 408
17.2.7 触控和轨迹球事件处理范例—Touch & Trackball ................... 410
17.2.8 透明事件范例—Transparent... 412
17.2.9 半透明事件范例—Translucent 415
第18章 Android动态壁纸—Live Wallpaper
18.1 Android动态壁纸 Live Wallpaper.................. 421
18.1.1 动态壁纸 Live Wallpaper架构....... 421
18.1.2 WallpaperService和 WallpaperService.Engine方法 ........................ 421
18.2 Android动态壁纸设置............. 422
18.2.1 简单动态壁纸 Live Wallpaper设置 422
18.2.2 调整参数的动态壁纸 Live Wallpaper设置............ 424
18.3 Android动态壁纸应用程序设计 .................... 428
18.3.1 简单动态壁纸 Live Wallpaper应用程序设计 ........ 428
18.3.2 调整参数的动态壁纸 Live Wallpaper应用程序设计..................... 430
18.4 Android动态壁纸应用程序范例—火焰之舞 .................. 430
18.5 Android动态壁纸应用程序范例—动画参数设置........... 434
18.6 Android动态壁纸应用程序范例—照片自动切换........... 439
18.7 Android动态壁纸应用程序范例—触控切换照片........... 444
第19章 Android蓝牙通信—Bluetooth
19.1 Android蓝牙通信 Bluetooth.... 450
19.1.1 Android蓝牙通信 Bluetooth基本架构.................. 450
19.1.2 定义蓝牙通信 Bluetooth权限—Permission... 451
19.2 建立蓝牙通信 Bluetooth.......... 451
19.2.1 设置蓝牙通信—Setting up Bluetooth............ 452
19.2.2 发现蓝牙设备—Finding Devices.................... 453
19.2.3 连接蓝牙设备—Connecting Devices............. 455
19.2.4 管理蓝牙连接—Managing a Connection ....... 459
第20章 Android触控屏幕—Gesture
20.1 Android触控屏幕 Gesture....... 463
20.2 Android触控屏幕 Gesture处理顺序............. 464
20.3 Android触控屏幕 Gesture范例..................... 465
第21章 Android感应检测—Sensor
21.1 Android感应检测 Sensor ........ 469
21.2 Android感应检测管理—SensorManager...................... 469
21.3 Android加速度感应检测—Accelerometer .................... 471
21.4 Android磁场感应检测—Magnetic ......... 472
21.5 Android方位感应检测—Orientation ...... 472
21.6 Android温度感应检测—Temperature.... 473
21.7 Android感应检测 Sensor范例 .... 473
21.7.1 做一个指北针—Compass范例...................... 475
21.7.2 Android方位感应检测—Orientation范例...... 478
21.7.3 Android加速度感应检测—Accelerometer范例....................... 483
21.7.4 Android磁场感应检测—Magnetic范例......... 487
21.7.5 Android温度感应检测—Temperature范例... 490
第22章 Android OS 2.3姜饼报到
22.1 Android OS 2.3姜饼 Gingerbread 版本 ........ 495
22.1.1 更简单的接口与更容易的操作....... 495
22.1.2 更直觉的文字输入与更快的操作速度................... 495
22.1.3 多点触控输入........... 496
22.1.4 强化文字复制与剪贴 .........496
22.1.5 增强的电源管理功能 497
22.1.6 对应用程序的控制 ... 497
22.1.7 内建网络电话 VOIP 的 SIP stack... 498
22.1.8 支持近距离无线通信 NFC ............. 498
22.1.9 下载应用程序管理 ... 499
22.1.10 提供多个相机，可选择前后相机拍摄 ................. 499
22.1.11 加强手机执行游戏的性能 ............ 499
22.1.12 加入陀螺仪和数种新传感器的 API...................... 499
22.1.13 加强多媒体音场效果.................... 500
22.1.14 支持新的媒体格式 .......... 500
22.2 Android OS 2.3提供给开发人员的新功能..... 500
22.2.1 加强开发游戏软件的功能 .............. 501
22.2.2 提供丰富的多媒体功能.................. 502
22.2.3 提供通信的新方法和格式 .............. 502
22.3 Android OS 2.3版本新的类包.......... 503
第23章 Android手机必备的照相机
23.1 Android照相机原理................. 505
23.1.1 信息配置文件“Androidmanifest.xml” .................... 505
23.1.2 相机应用程序拍摄的步骤 .............. 505
23.2 设计一个照相机软件............... 507
23.2.1 预览相机所拍摄影像 .........507
23.2.2 相机自动焦聚和拍摄照片 .............. 509
23.2.3 配置相机特性的参数 .........511
23.2.4 贴图在拍摄的影像上 .........511
23.3 Android OS 2.3 所增加照相机新功能............ 512
23.3.1 读取实体相机的号码 .........512
23.3.2 读取实体相机的信息 ......... 513
23.3.3 开启指定的实体相机 .........513
23.4 照相机软件基本操作范例........ 513
23.4.1 Camera 应用程序范例—Camera Preview..... 515
23.4.2 Camera应用程序范例—Camera Auto Focus 522
23.4.3 Camera应用程序范例—Camera Parameters Setting.................. 526
23.4.4 Camera应用程序范例—Over on Photo ........ 535
23.5 设计自己的相机应用软件范例. .........537
第24章 设计Android网络电话VoIP-SIP
24.1 网络电话 VoIP......................... 544
24.1.1 第三方开发公司提供的网络电话 VoIP.................. 544
24.1.2 网络电话 VoIP基本概念 ................ 544
24.1.3 网络电话 VoIP 的运作方式............ 546
24.2 采用 SIP 设计 Android 网络电话 VoIP .......... 547
24.2.1 信息设置文件 “Androidmanifest.xml” .................... 548
24.2.2 采用 SIP 设计网络电话 VoIP 的方法 .................... 548
24.3采用 SIP开发 Android无线电对讲机应用程序范例 ............. 549
附录A  Android应用程序范例光盘使用说明
A.1 范例光盘 ................................... 565
A.2 Android SDK开发环境............. 565
A.3 进入 Eclipse集成开发环境 ....... 565
A.4 Android应用程序范例............... 566
A.4.1 生成 Android应用程序的项目......... 566
A.4.2 编译和执行 Android应用程序范例.. 568
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android 2.3应用开发实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android 4游戏高级编程
目 录
第1 章 欢迎来到Android 世界.............1
1.1 配置开发机...................................1
1.2 下载并安装SDK..........................2
1.3 配置Eclipse ..................................2
1.4 安装原生开发工具包...................5
1.4.1 安装NDK .................................. 6
1.4.2 安装Cygwin .............................. 6
1.5 创建Android 模拟器....................6
1.6 配置真实设备...............................9
1.7 本章小结.....................................10
第2 章 针对手机或平板电脑的
游戏技巧................................. 11
2.1 在Android 中编译原生代码...... 11
2.1.1 创建支持原生代码的Android
项目..........................................13
2.1.2 应用程序的体系结构..............14
2.2 编译共享库.................................25
2.3 调试模拟器.................................26
2.4 Java 对C/C++事件处理的
封装.............................................27
2.4.1 独立处理音频..........................27
2.4.2 级联视频事件..........................32
2.5 多点触摸.....................................37
2.5.1 MultiTouchGesture...................37
2.5.2 MultiTouchScreen ....................39
2.5.3 TestActivity ..............................41
2.6 蓝牙控制器(Zeemote) ................42
2.7 本章小结.....................................46
第3 章 更多OpenGL 与JNI
游戏技巧................................ 49
3.1 移动设备的动力.........................50
3.2 Java 方式的OpenGL..................51
3.2.1 创建项目..................................51
3.2.2 Java 版本的主Activity ............54
3.2.3 surface 视图..............................55
3.2.4 GL 线程....................................58
3.2.5 立方体渲染器..........................61
3.2.6 Cube 类.....................................64
3.3 原生方式的OpenGL ..................66
3.3.1 主Activity ................................68
3.3.2 原生接口类..............................70
3.3.3 修改原示例..............................71
3.3.4 原生立方体渲染器..................72
3.3.5 原生立方体类..........................78
3.3.6 编译和运行示例......................79
3.4 通过OpenGL ES 混合模式
缩放视频缓冲区.........................82
3.4.1 为什么使用混合缩放..............83
3.4.2 初始化surface..........................85
3.4.3 绘制到纹理..............................86
3.4.4 当图像的尺寸不是2 的幂时
会发生什么..............................89
3.5 本章小结.....................................94
第4 章 OpenGL ES 2.0 的高效图形... 95
4.1 OpenGL ES 2.0 与Android ........95
4.1.1 着色器......................................96
4.1.2 GLSL ........................................96
4.1.3 剖析着色器..............................98
Android 4 游戏高级编程(第2 版)
XVI
4.2 在Android 中调用
OpenGL ES 2.0 .........................101
4.3 二十面体项目...........................102
4.3.1 定义形状............................... 102
4.3.2 处理项目............................... 104
4.3.3 原生二十面体........................112
4.4 添加“滑动”和多点触摸的“捏”
缩放功能................................... 119
4.5 编译与运行...............................122
4.6 本章小节...................................123
第5 章 3D 射击游戏：Doom............125
5.1 组合使用Java/C，功能
无极限.......................................126
5.2 将Doom 移植到移动设备.......127
5.3 Doom 游戏的体系结构............129
5.4 Java 层的主Activity.................130
5.4.1 创建处理程序....................... 131
5.4.2 游戏布局............................... 132
5.4.3 菜单和选择项处理程序....... 134
5.4.4 按键和触摸事件处理程序... 135
5.4.5 原生回调处理程序............... 137
5.4.6 导航控件............................... 140
5.5 独立处理音频格式...................142
5.6 原生接口类...............................143
5.6.1 回调监听器........................... 143
5.6.2 原生方法............................... 144
5.6.3 C 到Java 的回调.................. 144
5.7 原生层.......................................147
5.7.1 原生方法的实现................... 147
5.7.2 对原始游戏进行修改........... 159
5.8 使用NDK 编译Doom .............165
5.9 在模拟器中测试Doom............167
5.10 本章小结.................................169
第6 章 3D 射击游戏：Quake...........171
6.1 一些关于Quake 的术语...........171
6.2 代码重用的威力：Quake 中的
新代码少于500 行...................172
6.3 软件渲染是合理解决方案吗...174
6.4 Quake 的Android 架构............179
6.4.1 Java OpenGL 渲染器架构.... 180
6.4.2 独立处理音频格式............... 185
6.4.3 处理键盘事件....................... 187
6.4.4 处理触摸事件....................... 189
6.4.5 游戏的启动Activity ............. 192
6.5 原生Quake 引擎必需的改动....193
6.5.1 视频处理程序的改动........... 194
6.5.2 处理X 轴旋转(pitch)和Y 轴
旋转(yaw).............................. 196
6.5.3 处理前进和横向运动........... 197
6.5.4 音频处理程序的改动........... 197
6.5.5 修复游戏循环....................... 200
6.6 在设备上运行Quake................202
6.7 本章小结...................................208
第7 章 3D 射击游戏：QuakeⅡ....... 209
7.1 代码回顾...................................209
7.2 逃离Java 堆的束缚..................210
7.3 让QuakeⅡ引擎在Android 中
工作...........................................211
7.3.1 代码的可重用性.................. 211
7.3.2 当发生致命错误时如何
处理...................................... 221
7.3.3 OpenGL 立即模式问题....... 223
7.3.4 视频处理程序...................... 224
7.4 使用NDK 编译QuakeⅡ .........228
7.5 在设备或模拟器中运行游戏...231
7.6 QuakeⅡ在多种设备中的性能
表现...........................................234
7.7 本章小结...................................234
附录 部署和编译技巧....................... 237
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android 4游戏高级编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android平板电脑编程基础教程
目　　录

第1章　Android入门	1
1.1　我的便携式编程之路	1
1.2　Android横空出世	3
1.3　准备好计算机	4
1.3.1　搭建开发环境	4
1.3.2　创建模拟器实例	5
1.3.3　设置路径	5
1.4　编写第一个Android程序	6
1.5　如果你害怕Java	9
1.6　Java简介	10
1.6.1　Java的基本结构	10
1.6.2　基本数据类型	11
1.6.3　流程控制	12
1.6.4　对象	13
1.6.5　构造函数、初始化块和重载	16
1.6.6　何时释放对象	18
1.6.7　字符串处理	18
1.6.8　包	19
1.6.9　列表和映射	20
1.6.10　泛型	21
1.6.11　继承和接口	22
1.6.12　注解	23
1.6.13　其他内容	24
1.7　总结	24
第2章　Android的工作原理	25
2.1　Android程序的基本结构	25
2.2　意图简介	38
2.2.1　意图过滤器	43
2.2.2　常见意图	44
2.2.3　结束活动	44
2.3　Android与Linux	44
2.4　总结	46
第3章　Android平板电脑的功能	47
3.1　大量传感器	48
3.2　光线、相机和操作	55
3.3　浏览网页	57
3.3.1　管理资产	58
3.3.2　WebView的强大功能	59
3.4　你的个人通讯录：管理联系人	61
3.4.1　访问联系人	62
3.4.2　列表简介	63
3.4.3　访问联系人信息的其他方式	65
3.5　个人经验分享：收发数据	66
3.5.1　补充内容：选项菜单	67
3.5.2　发送电子邮件	67
3.6　喧闹的音画世界：管理多媒体文件	68
3.7　总结	69
第4章　超越Java：Python编程	70
4.1　为何使用另一种语言	71
4.2　准备	71
4.3　管理脚本	71
4.3.1　Help! I Need Somebody	72
4.3.2　Python帮助	72
4.3.3　Facade是什么	73
4.3.4　再谈意图	73
4.3.5　使用意图的不同方式	75
4.3.6　用户交互	76
4.3.7　事件	78
4.3.8　多媒体文件	80
4.3.9　控制手机	83
4.3.10　我身处何方	84
4.3.11　电池	86
4.3.12　让设备处于唤醒状态	87
4.3.13　编辑技巧	88
4.3.14　联系人和电话号码	89
4.3.15　SQL	90
4.3.16　其他接口	91
4.4　总结	91
第5章　多媒体播放器	92
5.1　片段	92
5.1.1　片段是什么	92
5.1.2　研究示例	93
5.1.3　操作栏	96
5.1.4　片段管理器	98
5.2　多媒体播放器	98
5.2.1　以列表方式显示游标的内容	100
5.2.2　查询多媒体文件	101
5.2.3　响应单击	101
5.2.4　再谈操作栏	102
5.2.5　菜单	102
5.2.6　获取多媒体文件的URI	103
5.2.7　播放多媒体文件	103
5.2.8　各种多媒体	104
5.2.9　对话框	104
5.2.10　修改文件列表的游标	106
5.2.11　高级多媒体播放	106
5.2.12　显示进度	107
5.2.13　控制进度	108
5.3　总结	108
第6章　资源管理器	109
6.1　文件资源管理器剖析	109
6.1.1　使用ListActivity	110
6.1.2　资源	111
6.1.3　创建自定义列表适配器	112
6.1.4　填充	113
6.1.5　填充列表	114
6.1.6　获取有关文件的信息	115
6.1.7　MIME类型	118
6.1.8　获悉文件的日期信息	118
6.1.9　入乡随俗	118
6.1.10　设置首选项	122
6.1.11　读取首选项	124
6.1.12　排序技巧	125
6.1.13　活动本身	126
6.1.14　对用户选择列表项做出响应	127
6.1.15　OnCreate方法	127
6.1.16　另一个菜单	128
6.1.17　响应上下文菜单	128
6.1.18　对话框	129
6.1.19　一些清理工作	131
6.1.20　改进	132
6.2　总结	132
第7章　联系人管理器	133
7.1　完全不同的领域	134
7.1.1　最终创建的应用程序	134
7.1.2　指示牌剖析	134
7.1.3　获悉视图何时可用	137
7.1.4　改进空间	138
7.1.5　向后兼容性	138
7.1.6　列表处理	139
7.1.7　保存列表	139
7.1.8　重用库	140
7.1.9　导入和导出	140
7.1.10　有关对话框的最后说明	141
7.2　管理联系人	142
7.2.1　Loader	142
7.2.2　启动Loader	143
7.2.3　Loader的工作原理	143
7.2.4　为何使用Loader	144
7.2.5　搜索栏	144
7.2.6　联系人详细信息	146
7.2.7　编辑数据	148
7.2.8　添加电话号码	150
7.2.9　修改电话号码类型	151
7.2.10　删除数据	151
7.3　总结	152
第8章　定位	153
8.1　位置管理器	153
8.1.1　位置提供器	154
8.1.2　BAT3PGps	154
8.1.3　一个操作位置管理器的类	155
8.1.4　位置	158
8.2　应用程序本身	159
8.2.1　指南针	159
8.2.2　方位和距离	161
8.3　到达目的地了吗	162
8.3.1　叫醒服务	162
8.3.2　服务	162
8.3.3　通知	163
8.3.4　接近提醒	166
8.3.5　“接近提醒”的优点和缺点	167
8.4　目的地列表	168
8.4.1　这是什么地方	172
8.4.2　接下来怎么办	172
8.5　总结	173
第9章　游戏编程	174
9.1　线程	174
9.1.1　Java线程	175
9.1.2　Android线程	178
9.2　移动的点	178
9.2.1　SurfaceView	179
9.2.2　使用SurfaceHolder	181
9.2.3　Handler	181
9.2.4　使用Handler	182
9.2.5　运行游戏	182
9.2.6　处理输入	183
9.2.7　自定义字体	183
9.2.8　资产是什么	184
9.2.9　字体示例	185
9.2.10　另一种创建菜单的方式	186
9.3　进入三维领域	187
9.3.1　一个盒子	187
9.3.2　其他进程间通信方式	192
9.4　总结	193
第10章　提醒	194
10.1　闹钟	194
10.1.1　PendingIntent	195
10.1.2　停止闹钟	195
10.1.3　匹配的PendingIntent	196
10.2　发送短信	196
10.3　语音合成	198
10.4　SQLite	200
10.4.1　创建SQLite数据库	200
10.4.2　获取数据库	201
10.4.3　使用数据库	201
10.5　示例应用程序	202
10.5.1　使用该应用程序	204
10.5.2　联系人	205
10.5.3　设置闹钟	205
10.5.4　闹钟列表	208
10.5.5　检查TTS	211
10.5.6　改进该应用程序	212
10.6　总结	212
第11章　其他	213
11.1　定时器	213
11.2　在后台执行任务	217
11.3　下载管理器	223
11.4　动画	227
11.4.1　定义动画	228
11.4.2　竟然明目张胆地插值	228
11.4.3　加载动画	229
11.5　USB	229
11.5.1　USB编程	230
11.5.2　响应USB事件	232
11.6　总结	233

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android平板电脑编程基础教程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android经典应用程序开发
第1章 Android应用开发基础	1
1.1  Android应用开发基础概述	1
1.1.1  Android应用开发的结构	1
1.1.2  Android应用程序
开发的目的	2
1.2  基于Android SDK的IDE
开发环境	2
1.2.1  Android IDE开发环境的
组成和结构	2
1.2.2  Windows中的Android SDK
开发环境安装	3
1.2.3  Linux环境中的Android SDK
开发环境安装	10
1.2.4  Android中运行仿真器
环境	11
1.2.5  Android中建立工程	13
1.2.6  在IDE中使用各种Android
工具	20
1.2.7  其他Android工具	26
1.3  Android应用程序的结构	27
1.3.1  Android应用程序的代码
组成	27
1.3.2  Android应用示例	28
1.3.3  应用程序生成运行过程	31
1.4  Android 应用开发的方法	33
1.4.1  API参考文档的使用	33
1.4.2  Android应用开发模式	37
第2章  UI程序的结构	39
2.1  Android中的界面组成	39
2.1.1  屏幕（活动Activity）	40
2.1.2  屏幕中的内容
（视图View）	41
2.1.3  二者的结合	41
2.2  屏幕中内容的控制和响应	42
2.2.1  基本响应方法	43
2.2.2  变化的响应方法	45
2.2.3  控件响应方法比较	47
2.3  设备事件的响应	48
2.3.1  键盘事件的响应	48
2.3.2  运动事件的处理	51
2.4  屏幕切换	56
2.4.1  启动活动的方法	57
2.4.2  带有返回结果的启动活动	58
2.5  菜单、对话框和标题栏	61
2.5.1  菜单的使用	61
2.5.2  对话框的使用	65
2.5.3  标题栏的使用	73
2.6  样式和主题的使用	74
2.6.1  控件中的样式	75
2.6.2  全局性质的主题	75
第3章  控件和布局	81
3.1  控件	81
3.1.1  Android中的控件	81
3.1.2  文本类控件	84
3.1.3  图像类控件	88
3.1.4  进度条类控件	91
3.1.5  继承View实现自定义控件	96
3.1.6  继承控件实现自定义控件	101
3.2  视图组和屏幕的布局	104
3.2.1  Android中的视图组	104
3.2.2  独立使用的视图组	108
3.2.3  作为简单容器使用的
视图组	113
3.2.4  几种布局类的使用	116
3.2.5  自适应视图AdapterView	131
3.2.6  Tab的使用	147
第4章  图形接口	158
4.1  2D图形接口的使用	158
4.1.1  使用2D图形接口的程序
结构	158
4.1.2  画布和画笔结合的基本
绘制	159
4.1.3  路径（Path）	164
4.1.4  文本（Text）	166
4.1.5  位图（Bitmap）	171
4.1.6  颜色效果	174
4.1.7  画布状态和区域操作	177
4.1.8  记录	182
4.2  OpenGL 3D图形接口的
使用	184
4.2.1  使用OpenGL图形接口的
程序结构	184
4.2.2  单纯实现的渲染器动画	185
4.2.3  具有交互的OpenGL绘制
程序	189
4.2.4  背景和透明效果	192
4.2.5  另一种OpenGL的接口
方式	196
4.3  可绘制内容	198
4.3.1  可绘制内容的概念	198
4.3.2  使用XML文件表示基本的
可绘制内容	199
4.3.3  使用XML文件表示扩展的
可绘制内容	202
4.3.4  使用代码构建的可绘制
内容	207
4.4  动画	210
4.4.1  动画的概念和分类	210
4.4.2  补间动画	210
4.4.3  帧动画	215
4.4.4  屏幕切换的动画	216
第5章  非UI组件和结构	219
5.1  服务	219
5.1.1  服务综述	219
5.1.2  本地服务的调用者	222
5.1.3  远程服务的使用	228
5.1.4  服务的应用场景	236
5.2  广播接收器	238
5.2.1  广播接收器综述	238
5.2.2  不同形态的广播接收器	239
5.2.3  结合PendingIntent使用广播
接收器	241
5.3  内容提供者	244
5.3.1  内容提供者综述	244
5.3.2  简单内容提供者的实现	248
5.3.3  URI的处理	251
5.3.4  内容提供者的打开文件
功能	252
5.4  工程描述文件、资源和资产	255
5.4.1  Android中的工程描述
文件	255
5.4.2  Android中的资源	259
5.4.3  Android中的资产	265
第6章  Android应用开发的细节	268
6.1  Android API层次结构	268
6.1.1  Android API层次结构	268
6.1.2  Android的API级别	268
6.1.3  Android 的各个基本的
核心包	270
6.1.4  Android 1.5增加的内容	274
6.1.5  Android 1.6增加的内容	275
6.1.6  Android 2.0-2.1增加的
内容	276
6.1.7  Android 2.2增加的内容	277
6.1.8  Android 2.3.x增加的内容	278
6.2  安全性和权限	280
6.2.1  进程的用户id级别的权限	280
6.2.2  许可	281
6.3  数据存储	283
6.3.1  Android数据存储的方式	283
6.3.2  文件和网络	284
6.3.3  数据库的使用	285
6.3.4  参数选项的使用	292
6.4  硬件相关的程序	300
6.4.1  硬件相关的类	301
6.4.2  硬件相关的特性	301
6.4.3  电源管理器	303
6.4.4  警报器的使用	304
6.4.5  音频系统的使用	304
6.4.6  定位系统的使用	305
6.4.7  电话系统的使用	307
6.4.8  传感器的使用	310
6.4.9  振动器的使用	312
6.4.10  无线局域网的使用	313
6.4.11  蓝牙的使用	314
6.4.12  照相机的使用	316
6.4.13  电池和电源信息的获取	318
6.5  用户通知方法	318
6.5.1  Toast通知	318
6.5.2  Status Bar通知	321
第7章  Android应用的设计思想	325
7.1  程序的组件模式	325
7.2  系统的脉络：Intent	327
7.2.1  Intent的作用	327
7.2.2  代码中Intent的使用	328
7.3  远程调用：Binder和AIDL	332
7.3.1  应用层IPC的实现方式	332
7.3.2  AIDL文件的使用	333
7.4  进程、线程和任务	334
7.4.1  进程	335
7.4.2  线程	337
7.4.3  Android中的任务	342
7.5  UI设计	348
7.5.1  布局的组合	348
7.5.2  组合型控件	352
7.5.3  布局的动态使用	355
7.5.4  不同屏幕的适应性	357
7.6  Android的应用程序设计
实现理念	359
7.6.1  Android程序的设计和实现
的通用方法	359
7.6.2  Android程序的要点	361
7.6.3  Android中几种典型的程序
结构	363
第8章  Android应用程序层插件	366
8.1  Android应用层插件的功能
与作用	366
8.1.1  应用层插件的特点	366
8.1.2  应用层插件的结构	367
8.1.3  主要应用层插件	368
8.2  快捷方式（Shortcut）	368
8.2.1  Shortcut的概念和用途	368
8.2.2  Shortcut的程序组成	369
8.2.3  Shortcut的实现	370
8.3  活动目录（LiveFolder）	372
8.3.1  LiveFolder的概念和用途	372
8.3.2  LiveFolder的程序组成	373
8.3.3  LiveFolder的实现	374
8.4  应用小部件（App Widget）	377
8.4.1  App Widget的概念和用途	377
8.4.2  App Widget程序的组成	378
8.4.3  App Widget的实现	380
8.5  输入法（InputMethod）	383
8.5.1  InputMethod的概念和
用途	383
8.5.2  InputMethod的程序组成	384
8.5.3  InputMethod的实现	388
8.6  活动墙纸（Live Wallpaper）	393
8.6.1  Live Wallpaper的概念和
用途	393
8.6.2  Live Wallpaper的程序
组成	393
8.6.3  Live Wallpaper的实现	395
8.7  可搜索程序（Searchable）	397
8.7.1  Searchable的概念和用途	397
8.7.2  Searchable的程序组成	399
8.7.3  Searchable的实现	400
8.8  账户和同步（Account和
Sync）	405
8.8.1  Account和Sync的概念和
用途	405
8.8.2  Account和Sync的程序
组成	405
8.8.3  Account和Sync的实现	408
8.9  语音识别器
（SpeechRecognizer）	412
8.9.1  SpeechRecognizer的概念
和用途	412
8.9.2  SpeechRecognizer的程序
组成	413
8.9.3  语音识别器实现	414
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android经典应用程序开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android应用程序开发
第1章 Android简介　1.1 手机操作系统　1.2 Android起源　　1.2.1 开放手机联盟　　1.2.2 Android发展史　1.3 Android特征　1.4 Android体系结构　习题第2章 Android开发环境　2.1 安装Android开发环境　　2.1.1 安装JDK和Eclipse　　2.1.2 安装Android SDK　　2.1.3 安装ADT插件　2.2 Android SDK　　2.2.1 目录结构　　2.2.2 示例程序　　2.2.3 开发工具　习题第3章 Android应用程序　3.1 第一个Android程序　3.2 Android程序结构　3.3 使用命令行工具创建程序　习题第4章 Android生命周期　4.1 程序生命周期　4.2 Android组件　4.3 Activity生命周期　4.4 程序调试　　4.4.1 LogCat　　4.4.2 DevTools　习题第5章 Android用户界面　5.1 用户界面基础　5.2 界面控件　　5.2.1 TextView和EditText 　　5.2.2 Button和ImageButton　　5.2.3 CheckBox和RadioButton　　5.2.4 Spinner 　　5.2.5 ListView　　5.2.6 TabHost　5.3 界面布局　　5.3.1 线性布局　　5.3.2 框架布局　　5.3.3 表格布局　　5.3.4 相对布局　　5.3.5 绝对布局　5.4 菜单　　5.4.1 选项菜单　　5.4.2 子菜单　　5.4.3 快捷菜单　5.5 界面事件　　5.5.1 按键事件　　5.5.2 触摸事件　习题第6章 组件通信与广播消息  6.1 Intent    6.1.1 启动Activity    6.1.2 获取Activity返回值  6.2 Intent过滤器  6.3 广播消息  习题第7章 后台服务  7.1 Service简介  7.2 进程内服务    7.2.1 服务管理    7.2.2 使用线程    7.2.3 服务绑定  7.3 跨进程服务    7.3.1 进程间通信    7.3.2 服务创建与调用    7.3.3 数据传递  习题第8章 数据存储与访问  8.1 简单存储    8.1.1 SharedPreferences    8.1.2 示例  8.2 文件存储    8.2.1 内部存储    8.2.2 外部存储    8.2.3 资源文件  8.3 数据库存储    8.3.1 SQLite数据库    8.3.2 手动建库    8.3.3 代码建库    8.3.4 数据操作  8.4 数据共享    8.4.1 ContentProvider    8.4.2 创建数据提供者    8.4.3 使用数据提供者    8.4.4 示例  习题第9章 位置服务与地图应用  9.1 位置服务  9.2 Google地图应用    9.2.1 申请地图密钥    9.2.2 使用Google地图    9.2.3 使用Overlay  习题第10章 Android NDK开发  10.1 NDK简介  10.2 NDK编译环境  10.3 NDK开发示例  习题第11章 综合示例设计与开发  11.1 需求分析  11.2 程序设计    11.2.1 用户界面设计    11.2.2 数据库设计    11.2.3 程序模块设计  11.3 程序开发    11.3.1 文件结构与用途    11.3.2 数据库适配器    11.3.3 短信监听器    11.3.4 后台服务    11.3.5 用户界面附录A Android虚拟设备附录B Android API简介附录C ADB命令附录D AndroidManifest文件
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android应用程序开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android高级开发实战:UI、NDK与安全
第一篇Android开发准备篇
第1章构建开发环境及Android程序执行流程／2
1.1构建开发环境／2
1.1.1Android开发需要的工具／2
1.1.2安装所需软件／3
1.2Android程序的执行流程／6
1.2.1Android系统启动过程／6
1.2.2Android应用程序启动过程／9
第2章AndroidSDK命令行工具／11
2.1SDK命令行／11
2.2shell命令／14
2.2.1文件目录操作指令／14
2.2.2系统管理命令／16
2.2.3备份压缩命令／17
2.2.4查看日志／18
2.3使用HierarchyViewer查看层级视图／18
2.4DDMS透视图／20
第二篇AndroidUI篇
第3章基础UI／30
3.1UI概述／30
3.2布局（Layout）／32
3.3菜单（Menu）／42
3.4常用UI（Widgets）／48
3.5详解UI中的常用布局属性／190
第4章Android高级UI／193
4.1抽象布局／193
4.1.1＜include＞标签／193
4.1.2＜merge＞标签／196
4.1.3＜viewStub＞标签／198
4.2Android样式和主题（style与theme）／198
4.2.1为HelloWord应用指定样式／199
4.2.2为应用指定主题／201
4.3自定义窗口标题／202
4.4泡泡窗口（PopuWindow）／205
4.4.1泡泡窗口概述／205
4.4.2泡泡窗口应用举例／206
4.5ViewFlipper（视图容器）／210
4.5.1ViewFlipper常用方法及属性／210
4.5.2使用ViewFlipper实现播放幻灯片效果／211
4.6Fragment框架／215
4.6.1Fragment应用举例／216
4.6.2Fragment的生命周期／219
4.7动画／220
4.7.1动画特效之帧动画／220
4.7.2动画特效之Tween补间动画／226
4.8自定义UI控件／235
第三篇AndroidNDK揭秘与实战篇
第5章揭秘NDK／240
5.1初识JNI／240
5.2NDK开发／243
5.2.1Cygwin、NDK、CDT工具的安装／244
5.2.2NDK开发之HelloWorld1／247
5.2.3NDK开发之HelloWorld2／254
5.2.4在C代码中使用LogCat打印日志信息／259
5.2.5NDK开发中常见的错误／261
5.2.6Java与C语言之间如何传递数据／262
5.2.7企业中JNI开发的流程／274
5.2.8C语言如何调用Java语言／275
5.2.9对中文乱码的处理／284
5.2.10Java语言如何调用C++，C和C++在开发中的区别／288
第6章NDK开发案例／295
6.1锅炉压力值测试案例／295
6.1.1创建应用与逻辑代码的实现／296
6.1.2测试运行／301
6.2Lame编码器的移植案例／304
6.2.1创建应用与逻辑代码的实现／306
6.2.2测试运行／333
第四篇Android安全分析与反编译
第7章Android安全分析／338
7.1Android系统的安全沙箱与权限模型／338
7.2手机重启的过程分析／340
7.30权限重启手机／345
7.4谁动了我的日志／347
7.5ROOT权限／354
7.6ROOT后的安全案例一——禁止开机启动项／364
7.7ROOT后的安全隐患案例二——KungFu病毒／369
第8章反编译／377
8.1反编译的概念及工具／377
8.2反编译流程详解／378
8.2.1使用apktool工具将apk文件反编译成原始的目录文件／379
8.2.2使用dex2jar.bat工具将classes.dex文件转换为classes.jar文件／381
8.2.3使用jd—gui工具将classes.jar转换.java的源代码／383
附录ALinux简介／384
附录BC语言基础知识／386
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android高级开发实战:UI、NDK与安全
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>移动应用UI设计模式（第2版）
序　　X
前言　　XII
第1章　导航　　1
主导航模式—全局导航　　2
跳板式　　6
卡片式　　10
列表菜单式　　12
仪表盘式　　15
陈列馆式　　16
选项卡菜单式　　17
隐喻式　　25
主导航模式—瞬时导航　　28
侧边抽屉式　　28
下拉菜单式　　37
转盘菜单式　　40
次级导航模式　　41
翻页式　　43
滚动选项卡式　　46
折叠菜单式　　46
第2章　表单　　49
登录表单　　51
注册表单　　56
个性化注册表单　　64
多步骤表单　　66
结账表单　　72
技巧1：同时提供登录、注册和客人用户选项　　73
技巧2：简化流程　　74
技巧3：提供省时的快捷方式　　74
技巧4：提供快速结账方式　　76
技巧5：忘掉网页端　　77
计算表单　　80
搜索表单　　82
长表单　　84
第3章　表格　　87
基本表格　　89
无表头表格　　89
固定列表格　　91
概览加数据型表格　　93
行分组表格　　94
带有视觉指示器的表格　　95
可编辑表格　　97
第4章　搜索、排序和筛选　　100
搜索模式　　101
隐式搜索　　102
显式搜索　　105
自动完成搜索　　110
动态搜索　　112
限定范围的搜索　　113
保存的搜索、最近搜索记录和热门搜索　　114
搜索表单　　116
搜索结果/ 查看结果　　117
排序模式　　121
单页排序　　122
排序浮层　　124
排序表单　　125
筛选模式　　128
单页筛选　　129
筛选浮层　　131
筛选表单　　133
筛选抽屉　　135
基于手势的筛选　　137
第5章　工具　　138
工具栏　　140
iOS　　140
安卓　　142
Windows Phone　　143
与操作系统无关的模式：上下文工具栏　　144
工具箱　　145
行为召唤按钮　　147
行内操作　　152
多状态按钮　　154
上下文工具　　155
批量操作　　159
锁屏控件　　162
第6章　图表　　163
带有筛选器的图表　　168
交互式时间线　　171
数据点详情　　173
逐级深入　　176
概览加数据　　177
交互式预览　　179
仪表盘　　181
缩放　　183
迷你图　　185
嵌入式图例　　187
阈值　　187
透视表格　　189
整合　　190
第7章　引导和视觉吸引　　193
引导原则　　194
原则1：少用文字　　196
原则2：不要前置引导　　201
原则3：给予用户成就感　　205
原则4：在使用中强化学习　　209
原则5：倾听用户的心声　　211
视觉吸引模式　　212
提示　　212
持续的视觉吸引　　214
可发现的视觉吸引　　216
番外篇：视觉吸引—铺上欢迎毯　　217
迭代欢迎体验　　218
总结　　224
第8章　社交模式　　225
社交注册　　225
连接　　227
关注　　230
个人资料　　232
群组　　234
游戏化　　237
第9章　反馈与功能可见性　　242
反馈模式　　242
错误提示　　243
确认　　244
系统状态　　252
功能可见性　　256
点击　　256
滑动/ 轻扫　　258
拖拽　　262
第10章　帮助　　266
入门介绍　　271
用户指南/ 帮助系统　　272
常见问题解答　　275
功能使用向导　　276
新手引导　　279
上下文帮助　　281
收集反馈　　283
第11 章　反模式　　286
标新立异　　287
不必要的复杂　　292
隐喻错位　　296
控件错位　　296
图标错位　　298
手势错位　　298
心理模型错位　　299
愚蠢的对话框　　300
图表垃圾　　303
按钮海　　306
格格不入　　310
番外篇：避免移动应用中的注册/ 登录反模式　　312
附　录　　314
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>移动应用UI设计模式（第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android网络开发从入门到精通
第1章 Android系统介绍
1.1 Android是一款智能手机
1.1.1 什么是智能手机
1.1.2 当前主流的智能手机系统
1.2 Android的巨大优势
1.3 搭建Android开发环境
1.3.1 安装Android系统的要求
1.3.2 安装Android插件
1.3.3 设定Android SDK主目录
1.4 创建Android虚拟设备
1.4.1 Android模拟器简介
1.4.2 模拟器和真机的区别
1.4.3 创建Android虚拟设备
1.4.4 启动AVD模拟器
1.4.5 快速安装SDK的方法
1.5 搭建环境过程中的常见问题
第2章 Android网络开发基础
2.1 Android安装文件介绍
2.1.1 Android SDK目录结构
2.1.2 android.jar及内部结构
2.1.3 SDK帮助文档
2.1.4 解析Android SDK实例
2.2 分析Android的系统架构
2.2.1 Android体系结构介绍
2.2.2 Android工程文件结构
2.2.3 应用程序的生命周期
2.3 网页开发基础
2.3.1 HTML简介
2.3.2 XML技术
2.3.3 CSS技术
2.3.4 JavaScript技术
2.4 简析Android内核
2.4.1 Android继承于Linux
2.4.2 Android内核和Linux内核的区别
2.5 简要分析Android源码
2.5.1 获取并编译Android源码
2.5.2 Android对Linux的改造
2.5.3 为Android构建Linux的操作系统
2.6 总结和网络应用有关的包
第3章 HTTP通信处理
3.1 Java中的网络通信基础
3.1.1 Java刚络通信概述
3.1.2 Socket和Server Socket
3.1.3 网络通信的综合应用
3.2 HTTP协议
3.2.1 HTTP概述
3.2.2 协议功能
3.2.3 Android中的HTTP
3.3 使用Apache接口
3.3.1 Apache接口基础
3.3.2 Apache应用基础
3.3.3 Apache应用要点
3.4 使用标准Java接口
3.4.1 IP地址
3.4.2 套接字Socket类
3.5 使用Android网络接口
3.5.1 android.net.http中的类
3.5.2 在手机屏幕中传递HTTP参数
第4章 URL处理
4.1 使用URL类
4.1.1 URL类基础
4.1.2 URI和URL的使用
4.2 使用URL Connection类
4.3 使用Http URL Connection类
4.3.1 Http URL Connection的主要用法
4.3.2 在Android中使用
Http URL Connection类
第5章 为Android开发网页
5.1 准备T作
5.1.1 搭建开发环境
5.1.2 简单网页开发
5.1.3 控制页面的缩放
5.2 为Android中的网页添加CSS样式
5.2.1 编写基本样式
5.2.2 添加视觉效果
5.3 为Android网页添加JavaScript特效
5.3.1 jQuery框架介绍
5.3.2 具体实践
5.4 在Android网页中使用Ajax特效
5.5 让Android网页充满灵动活力
5.5.1 开源框架JQTouch
5.5.2 JQTouch简单应用
5.6 为网页增加数据存储功能
5.6.1 在Android网页中使用Web Storage
5.6.2 在Android网页中使用Web SQL Database
第6章 WebKit浏览器详解
6.1 WebKit的目录结构
6.2 WebKit框架介绍
6.2.1 Java层框架
6.2.2 C层框架
6.3 WebKit操作
6.3.1 WebKit初始化
6.3.2 载入数据
6.3.3 刷新绘制
6.4 WebView类详解
6.4.1 WebView概述
6.4.2 实现WebView的两种方式
6.4.3 WebView的常见功能
6.4.4 使用WebView类浏览网页
6.4.5 使用WebView类加载HTML程序
6.4.6 使用WebView加载JavaScript程序
6.4.7 使用WebView的注意事项
第7章 在Android中开发蓝牙应用
7.1 蓝牙系统的结构
7.1.1 蓝牙概述
7.1.2 蓝牙层次结构
7.1.3 蓝牙在Android和Linux中的差异
7.2 分析蓝牙源码
7.2.1 初始化蓝牙芯片
7.2.2 蓝牙服务
7.2.3 管理蓝牙电源
7.3 和蓝牙相关的类
7.3.1 BluetoothSocket类
7.3.2 BluetoothServerSocket类
7.3.3 BluetoothAdapter类
7.3.4 BluetoothClass.Service类
7.3.5 BluetoothClass.Device.Major类
7.3.6 BluetoothClass.Device类
7.3.7 BluetoothClass类
7.4 Android蓝牙的基本应用
7.4.1 使用BluetoothAdapter类
7.4.2 使用BluetoothSocket类
7.4.3 在Android平台开发蓝牙应用的基本步骤
……
第8章 在Android中开发Wi-Fi应用
第9章 在Android中开发RSS应用
第10章 在Android中开发电子邮件应用
第11章 让网络和多媒体接轨
第12章 在Android中开发移动微博应用
第13章 流量统计系统
第14章 流量监控系统
第15章 Android网络典型应用实践
第16章 开发一个邮件系统
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android网络开发从入门到精通
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android编程入门经典
第1章  Android编程入门  1.1  Android简介    1.1.1  Android版本    1.1.2  Android功能    1.1.3  Android架构    1.1.4  市场上的Android设备    1.1.5  Android Market  1.2  获得所需工具    1.2.1  Eclipse    1.2.2  Android SDK    1.2.3  Android开发工具    1.2.4  创建Android虚拟设备(AVD)    1.2.5  创建第一个Android应用程序    1.2.6  Android应用程序剖析  1.3  本章小结第2章  活动和意图  2.1  理解活动    2.1.1  如何对活动应用样式和主题    2.1.2  隐藏活动标题    2.1.3  显示对话框窗口    2.1.4  显示进度对话框  2.2  使用意图链接活动    2.2.1  解决意图筛选器的冲突    2.2.2  从意图返回结果    2.2.3  使用意图对象传递数据  2.3  使用意图调用内置应用程序    2.3.1  理解意图对象    2.3.2  使用意图筛选器    2.3.3  添加类别  2.4  显示通知  2.5  本章小结第3章  Android用户界面  3.1  了解屏幕的构成    3.1.1  视图和视图组    3.1.2  LinearLayout    3.1.3  AbsoluteLayout    3.1.4  TableLayout    3.1.5  RelativeLayout    3.1.6  FrameLayout    3.1.7  ScrollView  3.2  适应显示方向    3.2.1  锚定视图    3.2.2  调整大小和重新定位  3.3  管理屏幕方向的变化    3.3.1  配置改变时保持状态信息    3.3.2  检测方向改变    3.3.3  控制活动的方向  3.4  以编程方式创建用户界面  3.5  侦听用户界面通知    3.5.1  重写活动中定义的方法    3.5.2  为视图注册事件  3.6  本章小结第4章  使用视图设计用户界面  4.1  基本视图    4.1.1  TextView视图    4.1.2  Button、ImageButton、EditText、CheckBox、ToggleButton、RadioButton和RadioGroup视图    4.1.3  ProgressBar视图    4.1.4  AutoCompleteTextView视图  4.2  选取器视图    4.2.1  TimePicker视图    4.2.2  DatePicker视图  4.3  列表视图    4.3.1  List View视图    4.3.2  使用Spinner视图  4.4  本章小结第5章  使用视图显示图片和菜单  5.1  使用图像视图显示图片    5.1.1  Gallery并ImageView视图    5.1.2  ImageSwitcher    5.1.3  GridView  5.2  将菜单和视图一起使用    5.2.1  创建辅助方法    5.2.2  选项菜单    5.2.3  上下文菜单  5.3  其他一些视图    5.3.1  AnalogClock和DigitalClock视图    5.3.2  WebView  5.4  本章小结第6章  数据持久化  6.1  保存和加载用户首选项    6.1.1  使用getSharedPreferences()方法    6.1.2  使用getPreferences()方法  6.2  将数据持久化到文件中    6.2.1  保存到内部存储器    6.2.2  保存到外部存储器(SD卡)    6.2.3  选择最佳存储选项    6.2.4  使用静态资源  6.3  创建和使用数据库    6.3.1  创建DBAdapter辅助类    6.3.2  以编程方式使用数据库    6.3.3  预创建数据库  6.4  本章小结第7章  内容提供者  7.1  在Android中共享数据  7.2  使用内容提供者    7.2.1  预定义查询字符串常量    7.2.2  投影    7.2.3  筛选    7.2.4  排序  7.3  创建自己的内容提供者  7.4  本章小结第8章  消息传递和联网  8.1  SMS消息传递    8.1.1  以编程方式发送SMS消息    8.1.2  发送消息后获取反馈    8.1.3  使用意图发送SMS消息    8.1.4  接收SMS消息    8.1.5  说明和警告  8.2  发送电子邮件  8.3  联网    8.3.1  下载二进制数据    8.3.2  下载文本文件    8.3.3  访问Web服务    8.3.4  执行异步调用  8.4  本章小结第9章  基于位置的服务  9.1  显示地图    9.1.1  创建项目    9.1.2  获取Maps API密钥    9.1.3  显示地图    9.1.4  显示缩放控件    9.1.5  改变视图    9.1.6  导航到特定位置    9.1.7  添加标记    9.1.8  获取触摸的位置    9.1.9  地理编码和反向地理编码  9.2  获取位置数据  9.3  本章小结第10章  开发Android服务  10.1  创建自己的服务    10.1.1  在服务中执行长时间运行的任务    10.1.2  在服务中执行重复的任务    10.1.3  使用IntentService在单独的线程上执行异步任务  10.2  在服务和活动之间通信  10.3  将活动绑定到服务  10.4  本章小结第11章  发布Android应用程序  11.1  为发布做准备    11.1.1  版本化    11.1.2  对Android应用程序进行数字签名  11.2  部署APK文件    11.2.1  使用adb.exe工具    11.2.2  使用Web服务器    11.2.3  在Android Market上发布  11.3  本章小结附录A  使用Eclipse进行Android开发附录B  使用Android模拟器附录C  练习答案
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android编程入门经典
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android Gradle权威指南
目　录
第 1章　Gradle入门　1
1.1　配置Gradle环境　1
1.1.1　Linux下搭建Gradle构建环境　2
1.1.2　Windows下搭建Gradle构建环境　3
1.2　Gradle版Hello World　3
1.3　Gradle Wrapper　5
1.3.1　生成Wrapper　5
1.3.2　Wrapper配置　6
1.3.3　gradle-wrapper.properties　6
1.3.4　自定义Wrapper Task　7
1.4　Gradle日志　8
1.4.1　日志级别　8
1.4.2　输出错误堆栈信息　9
1.4.3　自己使用日志信息调试　9
1.5　Gradle命令行　10
1.5.1　记得使用帮助　10
1.5.2　查看所有可执行的Tasks　10
1.5.3　Gradle Help任务　11
1.5.4　强制刷新依赖　12
1.5.5　多任务调用　13
1.5.6　通过任务名字缩写执行　13
第 2章　Groovy基础　14
2.1　字符串　14
2.2　集合　15
2.2.1　List　16
2.2.2　Map　17
2.3　方法　18
2.3.1　括号是可以省略的　18
2.3.2　return是可以不写的　18
2.3.3　代码块是可以作为参数传递的　19
2.4　JavaBean　20
2.5　闭包　21
2.5.1　初识闭包　21
2.5.2　向闭包传递参数　22
2.5.3　闭包委托　22
2.6　DSL　24
第3章　Gradle构建脚本基础　25
3.1　Settings文件　25
3.2　Build文件　26
3.3　Projects以及tasks　27
3.4　创建一个任务　28
3.5　任务依赖　29
3.6　任务间通过API控制、交互　30
3.7　自定义属性　31
3.8　脚本即代码，代码也是脚本　33
第4章　Gradle任务　34
4.1　多种方式创建任务　34
4.2　多种方式访问任务　36
4.3　任务分组和描述　38
4.4　<<操作符　39
4.5　任务的执行分析　41
4.6　任务排序　43
4.7　任务的启用和禁用　44
4.8　任务的onlyIf断言　45
4.9　任务规则　48
4.10　小结　49
第5章　Gradle插件　50
5.1　插件的作用　50
5.2　如何应用一个插件　51
5.2.1　应用二进制插件　51
5.2.2　应用脚本插件　51
5.2.3　apply方法的其他用法　52
5.2.4　应用第三方发布的插件　53
5.2.5　使用plugins DSL应用插件　53
5.2.6　更多好用的插件　54
5.3　自定义插件　54
5.4　小结　56
第6章　Java Gradle插件　57
6.1　如何应用　57
6.2　Java插件约定的项目结构　58
6.3　如何配置第三方依赖　59
6.4　如何构建一个Java项目　62
6.5　源码集合(SourceSet)概念　63
6.6　Java插件添加的任务　65
6.7　Java插件添加的属性　66
6.8　多项目构建　66
6.9　如何发布构件　69
6.10　生成Idea和Eclipse配置　71
6.11　小结　72
第7章　Android Gradle插件　73
7.1　Android Gradle插件简介　73
7.2　Android Gradle插件分类　74
7.3　应用Android Gradle插件　74
7.4　Android Gradle工程示例　75
7.4.1　compileSdkVersion　77
7.4.2　buildToolsVersion　78
7.4.3　defaultConfig　79
7.4.4　buildTypes　79
7.5　Android Gradle任务　80
7.6　从Eclipse迁移到Android Gradle工程　81
7.6.1　使用Android Studio导入　81
7.6.2　从Eclipse+ADT中导出　82
7.7　小结　85
第8章　自定义Android Gradle工程　86
8.1　defaultConfig默认配置　86
8.1.1　applicationId　87
8.1.2　minSdkVersion　87
8.1.3　targetSdkVersion　88
8.1.4　versionCode　89
8.1.5　versionName　89
8.1.6　testApplicationId　90
8.1.7　testInstrumentationRunner　91
8.1.8　signingConfig　91
8.1.9　proguardFile　92
8.1.10　proguardFiles　93
8.2　配置签名信息　93
8.3　构建的应用类型　97
8.3.1　applicationIdSuffix　97
8.3.2　debuggable　98
8.3.3　jniDebuggable　98
8.3.4　minifyEnabled　99
8.3.5　multiDexEnabled　99
8.3.6　proguardFile　100
8.3.7　proguardFiles　100
8.3.8　shrinkResources　101
8.3.9　signingConfig　101
8.4　使用混淆　102
8.5　启用zipalign优化　104
8.6　小结　105
第9章　Android Gradle高 级自定义　106
9.1　使用共享库　106
9.2　批量修改生成的apk文件名　108
9.3　动态生成版本信息　111
9.3.1　**原始的方式　111
9.3.2　分模块的方式　112
9.3.3　从git的tag中获取　113
9.3.4　从属性文件中动态获取和递增　117
9.4　隐藏签名文件信息　118
9.5　动态配置AndroidManifest文件　120
9.6　自定义你的BuildConfig　123
9.7　动态添加自定义的资源　126
9.8　Java编译选项　128
9.9　adb操作选项配置　130
9.10　DEX选项配置　133
9.11　突破65535方法限制　138
9.12　自动清理未使用的资源　142
第 10章　Android Gradle多项目构建　147
10.1　Android项目区别　147
10.2　Android多项目设置　148
10.3　库项目引用和配置　149
10.4　库项目单独发布　151
10.5　小结　154
第 11章　Android Gradle多渠道构建　156
11.1　多渠道构建的基本原理　156
11.2　Flurry多渠道和友盟多渠道构建　157
11.3　多渠道构建定制　159
11.3.1　applicationId　159
11.3.2　consumerProguardFiles　160
11.3.3　manifestPlaceholders　161
11.3.4　multiDexEnabled　161
11.3.5　proguardFiles　161
11.3.6　signingConfig　162
11.3.7　testApplicationId　162
11.3.8　testFunctionalTest和testHandleProfiling　163
11.3.9　testInstrumentationRunner　164
11.3.10　testInstrumentationRunnerArguments　164
11.3.11　versionCode和versionName　165
11.3.12　useJack　165
11.3.13　dimension　166
11.4　提高多渠道构建的效率　169
11.5　小结　170
第 12章　Android Gradle测试　172
12.1　基本概念　172
12.2　本地单元测试　175
12.3　Instrument测试　179
12.4　测试选项配置　181
12.5　代码覆盖率　184
12.6　Lint支持　187
12.6.1　abortOnError　188
12.6.2　absolutePaths　189
12.6.3　check　189
12.6.4　checkAllWarnings　196
12.6.5　checkReleaseBuilds　196
12.6.6　disable　197
12.6.7　enable　198
12.6.8　explainIssues　198
12.6.9　htmlOutput　198
12.6.10　htmlReport　199
12.6.11　ignoreWarnings　199
12.6.12　lintConfig　199
12.6.13　noLines　199
12.6.14　quiet　200
12.6.15　severityOverrides　200
12.6.16　showAll　201
12.6.17　textOutput　202
12.6.18　textReport　202
12.6.19　warningsAsErrors　202
12.6.20　xmlOutput　203
12.6.21　xmlReport　203
12.6.22　error、fatal、ignore、warning、informational　203
第 13章　Android Gradle NDK支持　206
13.1　环境配置　206
13.2　编译C/C++源代码　208
13.3　多平台编译　212
13.4　使用第三方的so库　214
13.5　使用NDK提供的库　214
13.6　C++库支持　216
第 14章　Android Gradle持续集成　219
14.1　什么是持续集成　219
14.2　持续集成的价值　219
14.3　Android Gradle持续集成　220
14.4　怎样更好地做持续集成　222
14.5　人才是关键　223
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android Gradle权威指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android全埋点解决方案
目　　录
推荐序
前言
第1章　全埋点概述1
1.1　Android View 类型3
1.2　View 绑定listener 方式7
第2章　$AppViewScreen全埋点
方案10
2.1　关键技术Application.Activity
LifecycleCallbacks10
2.2原理概述11
2.3　案例12
2.4　完善方案24
2.5　扩展采集能力30
第3章　$AppStart、$AppEnd
全埋点方案33
3.1　原理概述34
3.2　案例35
3.3　缺点46
第4章　$AppClick全埋点方案1：代理
View.OnClickListener47
4.1　关键技术47
4.2　原理概述48
4.3　案例49
4.4　引入DecorView62
4.5　引入ViewTreeObserver.
OnGlobalLayoutListener64
4.6　扩展采集能力67
4.7　缺点91
第5章　$AppClick 全埋点方案2：代理
Window.Callback92
5.1　关键技术92
5.2　原理概述93
5.3　案例93
5.4　扩展采集能力101
5.5　缺点111
第6章　$AppClick 全埋点方案3：代理
View.AccessibilityDelegate112
6.1　关键技术112
6.1.1　Accessibility112
6.1.2　View.AccessibilityDelegate113
6.2　原理概述114
6.3　案例114
6.4　扩展采集能力122
6.5　缺点129
第7章　$AppClick全埋点方案4：
透明层130
7.1　原理概述130
7.1.1　View onTouchEvent130
7.1.2　原理概述130
7.2　案例131
7.3　扩展采集能力139
7.4　缺点145
第8章　$AppClick全埋点方案5:
AspectJ146
8.1　关键技术146
8.1.1　AOP146
8.1.2　AspectJ148
8.1.3　AspectJ 注解148
8.1.4　切点表达式151
8.1.5　JoinPoint153
8.1.6　call与execution区别155
8.1.7　AspectJ 使用方法157
8.1.8　通过Gradle 配置使用 AspectJ157
8.1.9　自定义Gradle Plugin162
8.1.10　发布 Gradle 插件165
8.1.11　使用 Gradle Plugin167
8.1.12　Plugin Project168
8.2　原理概述171
8.3　案例171
8.4　完善方案193
8.5　扩展采集能力196
8.6　缺点202
第9章　$AppClick全埋点方案6：
ASM203
9.1　关键技术203
9.1.1　Gradle Transform203
9.1.2　Gradle Transform 实例207
9.1.3　ASM213
9.2　原理概述220
9.3　案例220
9.4　完善240
9.5　扩展采集能力241
9.6　缺点250
第10章　$AppClick全埋点方案7：
Javassist251
10.1　关键技术251
10.1.1　Javassist251
10.1.2　Javassist基础251
10.2　原理概述255
10.3　案例255
10.4　扩展采集能力272
第11章　$AppClick全埋点方案8：
AST280
11.1　关键技术280
11.1.1　APT280
11.1.2　Element280
11.1.3　APT实例282
11.1.4　javapoet293
11.1.5　AST295
11.2　原理概述295
11.3　案例295
11.4　完善方案306
11.5　扩展采集能力308
11.6　缺点317
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android全埋点解决方案
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android开发应用从入门到精通
第1篇  基础知识与环境搭建篇  第1章  神秘的Android    1.1  新时代的智能手机      1.1.1  智能手机的定义      1.1.2  智能手机的特点      1.1.3  主流智能手机系统    1.2  初识Android      1.2.1  历史背景      1.2.2  Android手机介绍      1.2.3  Android团队    1.3  Android基础      1.3.1  Android特性      1.3.2  Android组件结构      1.3.3  Android应用程序框架    1.4  Android的竞争优势    1.5  Android模拟器      1.5.1  Android模拟器介绍      1.5.2  模拟器和真机的区别      1.5.3  创建和启动Android模拟器      1.5.4  Android模拟器工具介绍      1.5.5  模拟器总结    1.6  未来发展和市场前景      1.6.1  Android未来发展      1.6.2  Android市场前景    1.7  小结    ……  第2章  搭建Android开发环境  第3章  Android sdk简要介绍  第4章  Android程序剖析第2篇  核心技术篇  第5章  Android程序核心  第6章  Android基础组件详解  第7章  剖析widget组件  第8章  菜单、列表和对话框组件  第9章  Android组件进阶  第10章  剖析Intent、Broadcast和Adapter第3篇  典型应用篇  第11章  数据存储操作  第12章  电话与短信  第13章  Service服务  第14章  位置服务和地图API第4篇   综合实例篇  第15章  Google Map  第16章  手机秘书  第17章  RSS阅读器
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android开发应用从入门到精通
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入淺出 Android 系統移植與開發測試
01 Android 系統移植開發概述
02 Android 原始程式碼和開發環境
03 Android 系統移植的結構和方法
04 Android 的GoldFish內核和驅動
05 Android 的MSM內核和驅動
06 Android 的OMAP內核和驅動
07 顯示系統
08 使用者輸入系統
09 感測器系統
10 音訊系統
11 視訊輸出系統
12 照相機系統
13 無線區域網系統
14 藍牙系統
15 定位系統
16 電話系統
17 OpenGL 3D引擎
18 OpenMax多媒體引擎
19 多媒體系統的外掛程式
20 Copybit系統
21 警報器——即時時鐘系統
22 光系統
23 振動器系統
24 電池系統
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入淺出 Android 系統移植與開發測試
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android编程入门很简单
第1篇 入门必备
第1章 初识Android（ 教学视频：6分钟）	2
1.1 手机发展简史	2
1.1.1 手机发展的里程碑	2
1.1.2 Android的各个版本	3
1.2 开放手机联盟	4
1.2.1 开放手机联盟的目的	5
1.2.2 分工合作	5
1.3 Android中的个人英雄主义	5
1.3.1 第一届挑战赛冠军介绍	6
1.3.2 第二届挑战赛冠军介绍	7
1.3.3 Android Market	8
1.4 Android平台	8
1.4.1 Android体系结构	8
1.4.2 熟悉的开发工具	11
1.4.3 合理的学习曲线	12
1.5 小结	13
第2章 搭建你的开发环境（ 教学视频：21分钟）	14
2.1 配置前的准备工作	14
2.1.1 Android支持的操作系统	14
2.1.2 准备“四大法宝”	14
2.2 安装并配置JDK	16
2.2.1 安装JDK	16
2.2.2 配置JDK	17
2.3 安装并配置Eclipse	19
2.3.1 运行Eclipse	19
2.3.2 了解Eclipse	20
2.4 安装并配置Android SDK	21
2.4.1 下载Android SDK	21
2.4.2 配置SDK	22
2.5 下载ADT	23
2.5.1 下载ADT	23
2.5.2 为Eclipse设置SDK路径	24
2.6 新建模拟器	25
2.6.1 新建AVD	25
2.6.2 运行模拟器	26
2.7 真机测试	27
2.7.1 安装手机驱动	27
2.7.2 设置手机	27
2.8 小结	28
第3章 创建第一个程序——HelloWorld（ 教学视频：21分钟）	29
3.1 新建第一个程序	29
3.1.1 新建工程	29
3.1.2 运行程序	31
3.2 认识HelloWorld	32
3.2.1 首识Android工程	32
3.2.2 认识布局文件	34
3.2.3 认识值文件	35
3.2.4 认识R文件	36
3.2.5 认识注册文件	37
3.3 调试程序	38
3.3.1 增加断点	39
3.3.2 开始调试	39
3.3.3 单步调试	40
3.4 更多示例程序	41
3.4.1 导入Samples	41
3.4.2 经典范例	42
3.5 小结	45
第4章 使用Android工具（ 教学视频：15分钟）	46
4.1 使用DDMS	46
4.1.1 认识DDMS	46
4.1.2 使用进程	47
4.1.3 使用文件浏览器	50
4.1.4 使用模拟器控制	52
4.1.5 使用日志	53
4.1.6 使用Screen Capture捕捉设备屏幕	57
4.2 使用Android调试桥	58
4.2.1 使用ADB	58
4.2.2 显示连接到计算机的设备	58
4.2.3 针对特定设备操作	59
4.2.4 启动和停止ADB	59
4.2.5 使用ADB操作文件和apk	60
4.2.6 使用ADB shell	62
4.3 使用AAPT	62
4.3.1 使用ADT导出签名程序	63
4.3.2 使用命令行生成签名apk文件	64
4.4 小结	67
第2篇 界面开发
第5章 探索界面UI元素（ 教学视频：73分钟）	70
5.1 认识Android视图、Widget以及布局	70
5.2 必须了解的Widget组件	71
5.2.1 使用可滚动的文本控件——TextView	72
5.2.2 TextView中的一些功能	73
5.2.3 使用可滚动的视图——ScrollView	75
5.2.4 文字的编辑	77
5.2.5 使用按钮——Button	78
5.2.6 实例——计算器	79
5.2.7 使用图片按钮——ImageButton	81
5.2.8 使用复选框——CheckBox	84
5.2.9 实例——请同意本协议	84
5.2.10 使用单选框——RadioGroup	89
5.2.11 实例——请选择性别	89
5.2.12 使用下拉列表框——Spinner	92
5.2.13 实例——请选择工作年限	93
5.2.14 实例——动态修改Spinner项	96
5.2.15 使用进度条——ProgressBar	97
5.2.16 实例——动态修改进度条	99
5.2.17 使用拖动条——SeekBar	102
5.2.18 实例——简单使用SeekBar	103
5.2.19 使用图片视图——ImageView	105
5.2.20 实例——ImageView的重叠效果	105
5.2.21 使用网格视图——GridView	109
5.2.22 实例——通过宫格视图展示相应的应用	110
5.2.23 使用消息提醒——Toast	114
5.2.24 实例——Toast的4种实现	116
5.3 使用列表视图（ListView&ExpandableListView）	119
5.3.1 使用列表——ListView	119
5.3.2 通过实例学习列表	120
5.3.3 使用可扩展列表——ExpandableListView	123
5.3.4 实例——简单使用ExpandableListView	124
5.3.5 实例——深入使用可扩展列表	128
5.4 使用菜单——Menu	136
5.4.1 Menu的使用	136
5.4.2 通过实例学习使用Menu	137
5.5 小结	139
第6章 使用程序资源（ 教学视频：40分钟）	140
6.1 资源的意义	140
6.1.1 什么是资源	140
6.1.2 怎样存储资源	140
6.1.3 怎样添加资源	141
6.1.4 资源的种类	142
6.1.5 怎样访问资源	143
6.2 使用资源	144
6.2.1 使用资源管理器	144
6.2.2 使用String资源	146
6.2.3 实例——彩虹和太极	147
6.2.4 使用String数组资源	149
6.2.5 使用Color资源	150
6.2.6 使用Dimension资源	152
6.2.7 使用Drawble资源	155
6.2.8 使用样式	160
6.2.9 使用主题	164
6.3 小结	165
第7章 设计界面布局（ 教学视频：63分钟）	166
7.1 创建界面	166
7.1.1 使用xml资源创建布局	166
7.1.2 使用代码创建布局	167
7.2 使用布局类	168
7.2.1 使用绝对布局	168
7.2.2 使用线性布局	171
7.2.3 使用框架布局	175
7.2.4 使用表格布局	178
7.2.5 使用关系布局	182
7.3 使用其他布局容器	187
7.3.1 使用TabActivity	187
7.3.2 自定义TabHost	191
7.3.3 使用对话框	195
7.3.4 使用滑动抽屉	202
7.4 小结	206
第3篇 功能实现
第8章 Android应用程序组成（ 教学视频：43分钟）	208
8.1 深入理解Activity	208
8.1.1 使用Intent连接Activity	208
8.1.2 Activity的生命周期	218
8.2 使用广播接收器	224
8.2.1 发送广播	224
8.2.2 接收广播	226
8.2.3 广播实例	227
8.3 使用服务	230
8.3.1 新建服务	230
8.3.2 使用Service	233
8.3.3 Service的生命周期	237
8.4 使用ContentProvider	241
8.5 小结	242
第9章 Android中的数据存储（ 教学视频：58分钟）	243
9.1 使用SharedPreferences	243
9.1.1 什么是SharedPreferences	243
9.1.2 使用SharedPreferences保存数据	244
9.1.3 使用SharedPreferences读取数据	246
9.1.4 通过实例学习SharedPreferences	247
9.2 使用文件存储	250
9.2.1 文件保存概述	250
9.2.2 在程序默认位置创建和写入文件	251
9.2.3 在默认位置读取文件	251
9.2.4 通过实例学习文件存储	252
9.3 使用SQLite数据库	255
9.3.1 创建和删除数据库	255
9.3.2 创建和删除表	256
9.3.3 操作记录	257
9.3.4 查询记录	260
9.3.5 使用数据库帮助类	264
9.4 实例——通过数据库验证登录	266
9.4.1 整体设计	266
9.4.2 数据库设计	267
9.4.3 登录界面设计	268
9.4.4 注册界面设计	270
9.4.5 登录成功界面设计	272
9.5 使用ContentProvider共享数据	275
9.5.1 了解ContentProvider	275
9.5.2 使用ContentProvider	276
9.5.3 使用ContentResolver	280
9.6 自定义ContentProvider	283
9.6.1 ContentProvider需要实现的接口	283
9.6.2 实现ContentProvider	284
9.6.3 更新AndroidManifest文件	289
9.7 小结	290
第10章 绚丽的多媒体技术（ 教学视频：55分钟）	291
10.1 简单处理音频	291
10.1.1 使用MediaRecoder录制音频	291
10.1.2 通过实例学习使用MediaRecoder录制音频	293
10.1.3 使用MediaPlayer播放音频	295
10.1.4 通过实例学习MediaPlayer	297
10.2 深度处理音频	300
10.2.1 使用AudioRecod录制音频	300
10.2.2 通过实例学习使用AudioRecod录制音频	302
10.2.3 使用AudioTrack播放音频	305
10.2.4 通过实例学习使用AudioTrack录制音频	307
10.3 学会拍照	310
10.3.1 通过Camera类完成拍照	310
10.3.2 实例——简易摄像机	313
10.4 学习视频处理	318
10.4.1 学习录制视频	319
10.4.2 实例——录制视频	320
10.4.3 学习播放视频	323
10.4.4 实例——自制视频播放器	324
10.5 小结	327
第11章 Android网上冲浪（ 教学视频：30分钟）	328
11.1 使用HttpUrlConnection	328
11.1.1 使用GET方法	328
11.1.2 使用POST方法	329
11.1.3 通过实例学习HttpUrlConnection	330
11.2 使用HttpClient	334
11.2.1 使用HttpClient进行GET连接	334
11.2.2 使用HttpClient进行POST连接	335
11.2.3 通过实例学习HttpClient	336
11.3 自制Web浏览器	340
11.3.1 使用WebView	340
11.3.2 通过实例学习WebView	341
11.4 小结	347
第12章 Android地图服务（ 教学视频：31分钟）	348
12.1 Google地图显示	348
12.1.1 申请Google Maps API金钥	348
12.1.2 使用MapView显示地图	351
12.1.3 通过实例使用MapView	353
12.2 使用GPS	359
12.2.1 获得我的位置	359
12.2.2 通过实例完成GPS的使用	362
12.3 使用地理位置编码	365
12.3.1 转换地址信息	366
12.3.2 通过实例使用地理位置编码	367
12.4 使用Overlay	372
12.4.1 实现Overlay类	372
12.4.2 通过实例学习Overlay	374
12.5 小结	379
第4篇 项目案例开发
第13章 联系人助手（ 教学视频：45分钟）	382
13.1 Jxl简介	382
13.1.1 使用导入jxl.jar	382
13.1.2 使用jxl读取Excel文件	383
13.1.3 使用jxl创建Excel文件	385
13.2 界面规划	386
13.2.1 主界面实现	386
13.2.2 导出文件、导入文件界面的实现	388
13.3 功能实现	390
13.3.1 实现导出联系人	391
13.3.2 实现导入联系人功能	396
13.3.3 实现文件浏览功能	397
13.3.4 实现主界面跳转功能	401
13.3.5 修改注册表	403
13.5 小结	404
第14章 个人轨迹跟踪器（ 教学视频：21分钟）	405
14.1 界面UI实现	405
14.1.1 界面规划	405
14.1.2 实现新建跟踪界面	406
14.1.3 实现已有跟踪界面	407
14.1.4 实现地图显示界面	408
14.2 数据库实现	409
14.2.1 设计表结构	409
14.2.2 实现DatabaseHelper	410
14.3 功能实现	411
14.3.1 实现TrackService	412
14.3.2 实现OldTrackActivity	415
14.3.3 实现TrackerActivity	417
14.3.4 实现Overlay	423
14.3.5 修改注册文件	425
14.4 小结	427
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android编程入门很简单
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Google Android手机游戏设计达人讲座
Chapter 1魅力无穷的Android平台  1—1  Android平台初探  1—2  搭建Android开发环境  1．安装ADT  2．安装SDK  3．定制模拟器  1—3  编写第一个Android程序  1—4  Android程序的修改版本和调试  1．切换程序版本  2．调试程序  1—5  Android程序的签名和发布Chapter 2　从java开始Chapter 3　从一个简单范例开始Android编程Chapter 4　Activity及其生命周期Chapter 5　指令IntentChapter 6　用户界面ViewChapter 7　问题处理程序HandlerChapter 8　基本图像绘制Chapter 9　事件处理Chapter 10　音频播放Chapter 11　后台服务Chapter 12　制作动画Chapter 13　菜单与对话框Chapter 14　存储游戏数据Chapter 15　游戏中的物理和数学应用Chapter 16　获取Android源代码Chapter 17　游戏测试Chapter 18　方块游戏Chapter 19　连连看游戏Chapter 20　斗地主游戏Chapter 21　RPG游戏初探附录
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Google Android手机游戏设计达人讲座
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Powenko新车间 Android 手机/平板电脑开发新挑战（含DVD光盘1张）
第1章简介	1
1.1  Android的诞生	1
1.2  Android是什么	3
1.3  Android操作系统概论	3
第2章开发环境的设定	5
2.1  安装Android开发工具	5
2.1.1  Windows上的安装	6
2.1.2  MAC上的安装	9
2.2  Android SDK相关设定	11
2.2.1  修改Android SDK的路径	11
2.2.2  安装和移除不同版本的Android SDK	13
2.2.3  设定Android模拟器	14
2.3  将项目导入Eclipse	18
2.4  常见的Android项目范例使用问题	22
2.4.1  调整Android项目的版本问题	22
2.4.2  清除编程暂存的记录	23
2.4.3  如何执行Android SDK 1.5以前的程序	24
2.4.4  如何在Eclipse编程中显示中文	25
2.4.5  已开启一个Android模拟器，但是Eclipse还是打开新的Android模拟器	25
2.5  安装Android Studio开发工具	27
第3章开发环境介绍	30
3.1  Eclipse	30
3.1.1  Hello World第一个程序	30
3.1.2  编程项目架构	39
3.1.3  调试模式	41
3.2  Android Studio的介绍与使用	44
3.2.1  使用Android Studio开发工具编写Hello World程序	44
3.2.2  编程项目架构	52
3.2.3  调试模式	53
第4章Android常用的组件	56
4.1  TextView组件——文字显示	56
4.2  EditText组件——文本输入	59
4.3  Button组件——按钮	64
4.3.1  按钮处理事件方法之一	65
4.3.2  按钮处理事件方法之二	67
4.3.3  按钮处理事件方法之三	68
4.4  ImageView组件——显示图片	70
4.5  ImageButton组件——图片式按钮	74
4.6  CheckBox组件——复选框	77
4.7  RadioGroup和RadioButton组件——单选组合/单选按钮	80
4.8  Spinner组件——下拉式选项	83
4.9  NumberPicker组件——选择数字	85
第5章切换画面	89
5.1  startActivity——换页	89
5.2  Bundle——传递数据到下一页	96
5.3  startActivityForResult——回到上一页并把数据传回去	99
第6章界面设计	105
6.1  RelativeLayout——相对布局	105
6.2  LinearLayout——线性布局	107
6.3  AbsoluteLayout——绝对位置布局	109
6.4  FrameLayout——框架布局	110
6.5  TableLayout——表格布局	112
6.6  GridLayout——网格布局	113
6.7  Insert Layout——加入其他布局	115
6.8  动态加入——加入其他布局	117
第7章触发	122
7.1  触发事件方法一——通过class的方式	122
7.2  触发事件方法二——通过implements的方式	126
7.3  触发事件方法三——直接写在setOnTouchListener函数中的方式	128
7.4  触发事件方法四——使用触发变量的方式	129
第8章消息	132
8.1  Log函数——日志	132
8.2  Toast函数——显示消息	134
8.3  AlertDialog——提示对话框	135
8.4  PopupWindow——弹出窗口	146
8.5  ListPopupWindow——列表弹出窗口	150
8.6  ProgressDialog——进度对话框+多线程执行	153
8.7  NotificationManager——消息提示管理器	159
8.8  Menu——菜单	162
8.9  PopupMenu——弹出式菜单	166
8.10  Status bar notifications——状态栏提示	171
第9章列表组件	181
9.1  ListActivity组件——列表方法1	181
9.2  在Activity中ListActivity——列表方法2	184
9.3  ScrollView组件——上下滚动画面	192
9.4  HorizontalScrollView组件——左右滚动画面	195
第10章动画	198
10.1  Tween Animation UI组件	198
10.2  Frame Animation UI组件	206
10.3  换页动画效果——方法一	212
10.4  换页动画效果——方法二	217
第11章高级组件	223
11.1  Tab——选项卡组件	223
11.2  ActionBarTab——活动栏标签	227
11.3  SlidingDrawer——展开、关闭	233
11.4  style换肤功能	243
11.5  Fragment UI组件——画面切换	248
11.6  ActionBar组件——活动栏组件	252
11.7  SearchView搜索框	261
11.8  ActionBar返回上一页	264
11.9  SearchView	266
11.10  StackView组件——图片显示	266
11.11  ExpandableListView组件——展开列表	273
11.12  Content Loaders的范例程序	279
第12章网络	285
12.1  WebKit组件——显示网页	285
12.2  HTTPGet组件的范例程序	289
12.3  HTTPPost组件的范例程序	293
12.4  通过HTTP Download Image下载图片	297
12.5  网络下载限时	301
第13章数据	305
13.1  Preferences的范例程序	305
13.2  File的范例程序	308
13.3  SQLite的范例程序	314
13.4  XML	326
13.5  JSON	337
第14章控制硬件	343
14.1  Android拨打电话的方法	343
14.2  发短信	345
14.3  位置服务GPS	350
14.4  GPS获取经纬度转换为地址范例程序	356
14.5  Map地图	361
14.6  Bluetooth API	366
14.7  蓝牙聊天室 BluetoothChat	372
14.8  WiFi Direct	386
14.9  NFC	401
第15章多媒体	415
15.1  MediaPlayer音乐播放mp3——音乐封装在项目程序中	415
15.2  MediaPlayer音乐播放mp3——音乐文件放在SD卡	422
15.3  VideoView——播放影片	428
15.4  MediaRecorder——录音	432
第16章系统篇	440
16.1  ScreenOrientation——画面翻转	440
16.2  ScreenOrientation——横竖画面的处理	444
16.3  System clipboard系统剪贴板	449
16.4  Widget——桌面组件程序	453
第17章多线程	464
17.1  Timer——计时器	464
17.2  Thread线程程序Runnable	467
17.3  建立自己的implement触发事件	470
17.4  Service常驻程序	475
17.5  Service进阶版	481
第18章Android开发相关技巧	485
18.1  签名和出售应用程序	485
18.1.1  做认证文件keystore	485
18.1.2  在Google Play上销售应用程序	490
18.2  获取设备或模拟器的截图	493
18.3  Android使用第三方jar包的方法	494
18.4  创建与使用Lib	496
18.4.1  如何创建Lib	496
18.4.2  如何使用Lib	500
第19章2D图形图像	504
19.1  精通图形图像——onDraw组件	504
19.2  Drawable多种绘图方法	509
19.2.1  Drawable UI组件的程序范例——绘制一个红色的长方形	510
19.2.2  Drawable UI组件的程序范例——绘制一个绿色的椭圆形	512
19.2.3  Drawable UI组件的程序范例——绘制一个蓝色的圆角长方形	513
19.2.4  Drawable UI组件的程序范例——绘制一个多颜色的手绘空心长方形	513
19.2.5  Drawable UI组件的程序范例——绘制一个多颜色的圆角空心长方形	516
19.2.6  Drawable UI组件的程序范例——绘制一个蓝色条纹的菱形	516
19.2.7  Drawable UI组件的程序范例——绘制有缺口的圆形	518
19.3  DrawableImageView UI组件的程序范例——绘图板	520
19.4  Image Process组件——改变图像颜色	526
19.4.1  Image Process的范例程序	526
19.4.2  ImageProcess的画面设定资源	526
19.4.3  ImageProcess的范例程序——改变图像颜色	527
第20章3D图形图像	531
20.1  OpenGL ES组件	531
20.2  OpenGL ES组件的程序范例一—OpenGL ES的基本架构，设定一个OpenGL ES View	531
20.3  OpenGL ES组件的程序范例二——全画面	535
20.4  OpenGL ES组件的程序范例三——绘制正方形	536
20.5  OpenGL ES组件的程序范例四——物件移动	547
20.5.1  Coordinate System坐标系统	547
20.5.2  移动Translate	547
20.5.3  Translate & Rotate移动和旋转	550
20.5.4  Load Identity, push and pop matrix初始矩阵、放入矩阵和取出矩阵	552
20.5.5  物件转换三个方块移动和旋转的基本架构	552
20.5.6  进阶学习	554
20.6  OpenGL ES组件的程序范例五——物件的画法glDrawElements	555
20.7  OpenGL ES组件的程序范例六——颜色	557
20.7.1  Flat coloring平面颜色	558
20.7.2  基本架构	558
20.8  OpenGL ES组件的程序范例七——Smooth coloring渐变色	559
20.8.1  编程一——渐变色的正方形	561
20.8.2  编程二——用按钮改变正方形的颜色	562
20.9  OpenGL ES组件的程序范例八——Meshes网格	565
20.9.1  Meshes网格——方块	568
20.9.2  Meshes网格——Plane平面class	569
20.9.3  Meshes网格——Group	572
20.10  TextureView纹理视图	574
后记柯博文经验谈	579
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Powenko新车间 Android 手机/平板电脑开发新挑战（含DVD光盘1张）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Google Android 2.X应用开发实战
第1章　拓展Android市场的Java应用第2章　安装Android SDK开发环境第3章　Android SDK开发平台应用第4章　认识Android基本单元——活动程序Activity第5章　活动程序Activity的切换——意图方法Intent第6章　Android应用程序的Widget创作套件第7章　Android应用程序的Layout窗体布局第8章　Android应用程序的Menu菜单第9章　Android数据存储和数据公开——SQLite第10章　认识Service服务程序第11章　Android应用程序国际化第12章　Android的Web视图——WebView第13章　Android常驻程序——App Widget第14章　Android应用程序GPS位置和GoogleMaps第15章　Android音频和视频第16章　Android 2D绘图和3D OpenGL绘图第17章　Android高速描绘——SurfaceView第18章　Android动态壁纸——Live Wallpaper第19章　Android蓝牙通信——Bluetooth第20章　Android触控屏幕——Gesture第21章　Android感应检测——Sensor附录A　 Android应用程序范例光盘使用说明
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Google Android 2.X应用开发实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android应用开发全程实录
第1章　步入Android的世界　1
1.1　Android平台简介　1
1.2　Android架构　3
1.3　万丈高楼平地起——Android开发环境的搭建　5
1.3.1　Java环境的搭建　5
1.3.2　安装Eclipse开发工具　6
1.3.3　下载Android SDK　6
1.3.4　安装ADT插件　8
1.4　Android模拟器等工具的使用　9
1.4.1　Android模拟器的创建　9
1.4.2　Android调试桥ADB的使用　10
1.4.3　DDMS的使用　11
1.5　创建Hello Android　13
1.6　Android应用程序的调试方法　14
1.6.1　日志输出　14
1.6.2　Debug调试　16
1.6.3　让程序定行更顺畅——单元测试　18
1.7　如何发布Android应用程序　20
1.8　Android金矿离你不会太远——Android生财之道　21
1.9　本章小结　22
第2章　Android应用程序的构成　23
2.1　Android应用程序的目录结构　23
2.2　资源的管理与使用　26
2.2.1　资源存放的位置和种类　27
2.3　Android组件介绍　28
2.3.1　屏幕组件——Activity　28
2.3.2　服务组件——Service　28
2.3.3　广播接收组件——Broadcast Receiver　28
2.3.4　内容提供者——Content Provider　29
2.4　本章小结　29
第3章　我的界面我作主——Activity和布局管理器　30
3.1　Activity应用详解与实例　30
3.1.1　Activity中的任务和历史栈　30
3.1.2　Activity的创建　30
3.1.3　Activity的生命周期　32
3.2　用户界面的构成　36
3.3　界面布局　37
3.3.1　布局的配置方法　37
3.3.2　布局的属性　38
3.4　Android中使用的尺寸单位　40
3.5　线性布局(LinearLayout)　41
3.6　相对布局(RelativeLayout)　43
3.7　表格布局(TableLayout)　45
3.8　框架布局(FrameLayout)　48
3.9　绝对布局(AbsoluteLayout)　49
3.10　层级观察器(Hierarchy Viewer )　50
3.11　布局优化分析工具layoutopt　52
3.12　Android界面布局的优化:、和 标签的使用　52
3.13　本章小结　56
第4章　Android用户界面　57
4.1　文本控件TextView　57
4.2　文本编辑框EditText　61
4.3　按钮控件Button和事件处理　63
4.4　按钮控件Button和显示效果　66
4.5　按钮控件Button和可延伸的图像　68
4.6　图片按钮控件ImageButton　73
4.7　单选按钮(RadioGroup和RadioButton)　75
4.8　多选按钮(CheckBox)　77
4.9　开关按钮(ToggleButton)　80
4.10　日期时间控件(DatePicker和TimePicker)　81
4.11　图像显示控件ImageView　84
4.12　列表(ListView)控件和适配器(Adapter)　87
4.12.1　ListView使用ArrayAdapter　88
4.12.2　ListView使用SimpleAdapter　90
4.12.3　ListView使用BaseAdapter与ListView的优化　93
4.13　ListActivity　97
4.14　ListView的美化　100
4.15　下拉列表(Spinner)　100
4.16　网格视图GridView与应用实例　103
4.17　Gallery　107
4.18　抽屉(SlidingDrawer)　115
4.19　进度条(ProgressBar)　118
4.19.1　不确定进度条　119
4.19.2　确定进度条　120
4.20　可拖动进度条(SeekBar)　123
4.21　格式化界面：style和theme　125
4.22　对话框(AlertDialog)　126
4.23　进度条对话框(ProgressDialog)　136
4.24　弹出窗口(PopupWindow)　138
4.25　弹出消息(Toast)　141
4.26　状态栏提醒(Notification)　142
4.27　菜单(menu)　146
4.27.1　常用的菜单Options Menu与实例　146
4.27.2　子菜单SubMenu与实例　149
4.27.3　上下文菜单Context Menu与实例　150
4.28　标签控件TabWidget与实例　151
4.29　使用handler异步更新UI　154
4.30　本章小结　156
第5章　图形与动画　157
5.1　Android中的图形　157
5.1.1　View类和自定义控件与实例　157
5.1.2　画笔Paint和画布Canvas类与实例　159
5.1.3　几何图形的绘制与实例　160
5.1.4　贴图的绘制与实例　162
5.2　动画与实例　170
5.2.1　Animation动画　170
5.2.2　Frame动画　175
5.2.3　Gif动画　177
5.3　本章小结　178
第6章　组件通信与广播消息　179
6.1　Intent对象　179
6.2　显式启动Activity并传递数据　180
6.3　隐式启动Activity和Intent过滤器IntentFilter　183
6.4　获取Activity的返回值　187
6.5　广播和广播接收者(Broadcast Receiver)　191
6.6　本章小结　197
第7章　多媒体　198
7.1　多媒体开发　198
7.1.1　多媒体核心OpenCore　199
7.1.2　媒体播放器(MediaPlayer)　200
7.1.3　媒体录制MediaRecorder　206
7.1.4　播放视频VideoView　213
7.2　相机设置　215
7.3　本章小结　219
第8章　服务Service　220
8.1　Service基本知识　220
8.1.1　Service简介　220
8.1.2　生命周期　220
8.1.3　绑定Context　223
8.2　AIDL远程服务　225
8.2.1　AIDL简介　225
8.2.2　程序间的通信　225
8.3　系统服务　228
8.3.1　获取系统服务　228
8.4　本章小结　229
第9章　数据存储　230
9.1　轻量级的存储SharedPreferences　230
9.2　文件存储　233
9.3　数据库SQLite　237
9.3.1　SQLite简介　237
9.3.2　SQLite管理工具　237
9.3.3　用SQLiteDatebase进行数据库操作　238
9.3.4　管理数据库SQLiteOpenHelper　241
9.4　数据交换ContentProvider　254
9.4.1　ContentProvider的创建　254
9.4.2　使用ContentProvider　256
9.4.3　ContentProvider实例　258
9.5　本章小结　264
第10章　Android网络　265
10.1　基本网络概念　265
10.1.1　网络　265
10.1.2　网络的分层　266
10.1.3　IP、TCP和UDP　268
10.1.4　Internet　269
10.2　HTTP基础　269
10.2.1　什么是HTTP　269
10.2.2　Java标准网络接口　271
10.2.3　Apache网络接口　277
10.2.4　Android网络接口　281
10.2.5　补充讲解：网络中得到JSON字符串的解析　283
10.2.6　补充讲解：处理中文乱码和中文部分乱码　285
10.2.7　实战：异步下载网络图片　288
10.3　Socket技术与实例　291
10.3.1　什么是Socket　292
10.3.2　TCP协议的Socket应用　292
10.3.3　UDP协议的Socket　295
10.3.4　实战Socket实现移动cmwap和cmnet　298
10.4　网页浏览及用户交互接口WebView　300
10.4.1　WebView加载HTML　301
10.4.2　扩展JavaScript API　303
10.5　WiFi的基本介绍及实现　311
10.6　蓝牙的基本介绍与实现　316
10.7　XML解析　320
10.7.1　SAX解析　321
10.7.2　PULL解析　324
10.7.3　实战：天气预报实例　326
10.8　本章小结　333
第11章　国际化和自适应　334
11.1　国际化基础　334
11.1.1　语言国际化　334
11.2　资源自适应　335
11.2.1　自适应屏幕　335
11.3　本章小结　336
第12章　Android专属　337
12.1　Google Maps　337
12.1.1　Google Maps API Key　337
12.1.2　Geopoint与MapView　339
12.1.3　Google Maps实战：漂亮的气泡地图　340
12.2　传感器(Sensor)　344
12.2.1　什么是传感器(Sensor)　344
12.2.2　传感器(Sensor)关联的类(Class)和接口(Interface)　345
12.2.3　传感器(Sensor)实战案例　346
12.2.4　传感器(Sensor)实战2：手势电话　350
12.3　AppWidget　353
12.3.1　AppWidget 框架　353
12.3.2　AppWidget 实战让自己的应用支持AppWidget　354
第13章　Android综合案例一：权限管理工具　358
13.1　软件背景　358
13.2　总体设计　359
13.2.1　软件概述　359
13.2.2　技术分析　359
13.3　详细设计与实现　360
13.3.1　前期准备　360
13.3.2　代码结构　361
13.3.3　布局结构　362
13.3.4　本机程序　365
13.3.5　APK扫描　369
13.3.6　信任程序　371
13.3.7　扫描结果　373
13.4　本章小结　374
第14章　Android综合案例：条形码扫描器　375
14.1　需求分析　375
14.1.1　背景概述　375
14.1.2　Zxing介绍　375
14.2　总体设计　376
14.2.1　系统功能整理　376
14.2.2　系统流程设计　376
14.3　详细设计与实现　377
14.3.1　导入Zxing源码　377
14.3.2　实现UI布局　378
14.3.3　数据存储机制　393
14.3.4　GPRS数据上传服务器　411
14.3.5　相机接口调用及数据处理　415
14.4　本章小结　425
第15章　Android综合案例：物流信息系统终端　426
15.1　需求分析　426
15.2　总体设计　426
15.2.1　功能需求及协议整理　426
15.2.2　程序流程图　427
15.3　详细设计与实现　427
15.3.1　UI布局实现　427
15.3.2　数据存储　432
15.3.3　服务器设置　437
15.3.4　定位获取经纬信息　438
15.3.5　心跳获取任务信息　440
15.3.6　GPRS上传实现　442
15.4　本章小结　445
第16章　Android开发中的常见问题和面试题　446
16.1　Android开发中常见问题　446
16.2　常见Android面试题　452
附录A　Android权限大全　459
附录B　Android图标资源　466
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android应用开发全程实录
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android系统安全和反编译实战
第1章 Android技术概述	1
1.1 智能手机系统介绍	1
1.2 搭建Android应用开发环境	2
1.2.1 安装Android SDK的
系统要求	2
1.2.2 安装JDK	2
1.2.3 获取并安装Eclipse和
Android SDK	5
1.2.4 安装ADT	7
1.2.5 设定Android SDK Home	8
1.2.6 验证开发环境	9
1.2.7 创建Android虚拟设备（AVD）	9
1.2.8 启动AVD模拟器	10
1.2.9 解决搭建环境过程中
的常见问题	12
第2章 Android技术核心框架分析	15
2.1 简析Android安装文件	15
2.1.1 Android SDK目录结构	15
2.1.2 android.jar及内部结构	16
2.1.3 阅读SDK帮助文档	16
2.1.4 常用的SDK工具	17
2.2 演示官方实例	19
2.3 剖析Android系统架构	23
2.3.1 Android体系结构介绍	23
2.3.2 Android应用工程
文件组成	25
2.4 简述五大组件	27
2.4.1 用Activity来表现界面	27
2.4.2 用Intent和Intent Filters
实现切换	28
2.4.3 Service为你服务	28
2.4.4 用Broadcast Intent/Receiver发送广播	29
2.4.5 用Content Provider
存储数据	29
2.5 进程和线程	29
2.5.1 先看进程	29
2.5.2 再看线程	30
2.5.3 应用程序的生命周期	30
第3章 获取并编译源码	33
3.1 在Linux系统中获取
Android源码	33
3.2 在Windows平台获取
Android源码	34
3.3 分析Android源码结构	36
3.3.1 应用程序	38
3.3.2 应用程序框架	39
3.3.3 系统服务	39
3.3.4 系统程序库	41
3.3.5 系统运行库	44
3.3.6 硬件抽象层	44
3.4 编译源码	45
3.4.1 搭建编译环境	46
3.4.2 开始编译	46
3.4.3 在模拟器中运行	47
3.4.4 常见的错误分析	48
3.4.5 实践演练——演示两种编译
Android程序的方法	49
3.5 编译Android Kernel	52
3.5.1 获取Goldfish内核代码	52
3.5.2 获取MSM内核代码	55
3.5.3 获取OMAP内核代码	55
3.5.4 编译Android的Linux
内核	55
3.6 编译源码生成SDK	57
第4章 Android系统的安全机制	61
4.1 Android安全机制概述	61
4.1.1 Android的安全机制模型	61
4.1.2 Android的安全框架概述	62
4.2 分析Linux系统的安全机制	63
4.2.1 Linux用户权限基础	63
4.2.2 进程	68
4.3 分析Android系统的安全机制	70
4.3.1 沙箱模型介绍	70
4.3.2 应用程序的安全机制	72
4.3.3 分区加载机制	73
第5章 内存安全机制——匿名共享
内存系统	74
5.1 分析Ashmem驱动程序	74
5.1.1 基础数据结构	74
5.1.2 初始化处理	75
5.1.3 打开匿名共享内存
设备文件	76
5.1.4 内存映射	78
5.1.5 实现读写操作	79
5.1.6 锁定和解锁	81
5.1.7 回收内存块	86
5.2 分析C++访问接口层	87
5.2.1 接口MemoryBase	87
5.2.2 客户端实现	90
5.2.3 接口MemoryBase	94
5.3 分析Java访问接口层	97
5.4 内存优化机制	100
5.4.1 sp和wp简析	100
5.4.2 详解智能指针	102
5.5 Android内存系统的安全
机制分析	118
5.5.1 Ashmem匿名共享内存
的机理	119
5.5.2 使用Low Memory Killer
机制实现安全和高效	119
第6章 Binder通信安全机制（上）	121
6.1 Binder机制基础	121
6.1.1 选择Binder机制的
原因——简洁快速、
低耗内存、更加安全	121
6.1.2 Binder安全机制的
必要性	122
6.1.3 Android的进程间通信
（IPC）机制Binder	122
6.1.4 Service Manager是Binder
机制的上下文管理者	123
6.1.5 Service Manager服务	137
6.2 分析Binder驱动程序	140
6.2.1 分析数据结构	140
6.2.2 分析设备初始化	150
6.2.3 打开Binder设备文件	151
6.2.4 内存映射	152
6.2.5 释放物理页面	156
6.2.6 分配内核缓冲区	157
6.2.7 释放内核缓冲区	158
6.2.8 查询内核缓冲区	160
第7章 Binder通信安全机制（下）	162
7.1 Binder封装库	162
7.1.1 类BBinder	163
7.1.2 类BpRefBase	165
7.1.3 类IPCThreadState	166
7.2 初始化Java层Binder框架	168
7.3 分析MediaServer的通信机制	170
7.3.1 MediaServer的入口函数	170
7.3.2 ProcessState	171
7.3.3 defaultServiceManager	173
7.3.4 注册MediaPlayerService	179
7.3.5 分析StartThread Pool和
join Thread Pool	188
7.4 总结进程通信机制的安全性	190
7.4.1 进程先线程安全	190
7.4.2 远程过程调用机制
（RPC）	191
7.4.3 实现线程安全方法	192
7.4.4 Binder中的安全策略	193
第8章 Android虚拟机基础	194
8.1 Dalvik VM和JVM的差异	194
8.2 Dalvik虚拟机的主要特征	195
8.3 Dalvik VM架构	196
8.3.1 Dalvik虚拟机的代码结构	196
8.3.2 dx工具	198
8.3.3 Dalvik VM的进程管理	198
8.3.4 Android的初始化流程	198
8.4 Dalvik VM控制VM命令详解	199
8.4.1 基本命令	199
8.4.2 扩展的JNI检测	199
8.4.3 断言	200
8.4.4 字节码校验和优化	200
8.4.5 Dalvik VM的运行模式	201
8.4.6 死锁预测	201
8.4.7 dump堆栈追踪	202
8.4.8 dex文件和校验	202
8.4.9 产生标志位	202
8.5 Dalvik VM进程管理	202
8.5.1 Zygote基础	202
8.5.2 Dalvik的进程模型	211
8.5.3 Dalvik的进程通信	215
8.6 Zygote（孕育）进程	218
8.6.1 Zygote基础	218
8.6.2 分析Zygote的启动过程	219
第9章 Dalvik VM的运作流程	233
9.1 Dalvik VM相关的可执行程序	233
9.1.1 dalvikvm、dvz和
app_process简介	233
9.1.2 对比app_process和
dalvikvm的执行过程	234
9.2 初始化Dalvik VM	236
9.2.1 开始虚拟机的准备工作	236
9.2.2 初始化跟踪显示系统	237
9.2.3 初始化垃圾回收器	237
9.2.4 初始化线程列表和
主线程环境参数	237
9.2.5 分配内部操作方法的
表格内存	238
9.2.6 初始化虚拟机的指令码
相关的内容	238
9.2.7 分配指令寄存器状态
的内存	239
9.2.8 分配指令寄存器状态
的内存和最基本用的
Java库	239
9.2.9 初始化使用的Java类库
线程类	240
9.2.10 初始化虚拟机使用的
异常Java类库	241
9.2.11 初始化其他对象	242
9.3 启动Zygote	250
9.3.1 在init.rc中配置zygote
启动参数	250
9.3.2 启动Socket服务端口	250
9.3.3 加载preload-classes	251
9.3.4 加载preload-resources	252
……
第10章 DEX文件详解
第11章 编写安全的应用程序
第12章 应用安全策略
第13章 文件加密
第14章 电话系统的安全机制
第15章 短信系统的安全机制
第16章 网络防火墙系统实现
第17章 文件加密系统实现
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android系统安全和反编译实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android编程经典200例
第1章  Android简介	1
1.1  Android的诞生	1
1.2  Android的特点	1
1.3  Android开发环境的搭建	2
1.4  第一个Android程序——HelloAndroid	4
1.5  Android应用程序的调试	6
1.6  Android应用程序的项目结构	8
1.7  Android的系统架构	9
1.8  小结	12
第2章  Android简单控件的开发及应用	13
实例1   按钮的使用技巧	13
难度指数 ★☆☆☆☆☆  占用时间 ○○
实例2   最常用的线性布局	14
难度指数 ★☆☆☆☆☆  占用时间 ○○
实例3   相对性布局的方法	19
难度指数 ★★☆☆☆☆  占用时间 ○○
实例4   帧布局结构的学习	23
难度指数 ★★★☆☆☆  占用时间 ○
实例5   结构紧凑的表格布局	25
难度指数 ★★★★☆☆  占用时间 ○
实例6   用坐标精确布局	28
难度指数 ★★★★★☆  占用时间 ○
实例7   文字显示的技巧	30
难度指数 ★★☆☆☆☆  占用时间
实例8   文字颜色的设置	32
难度指数 ★★★☆☆☆  占用时间
实例9   使你的文字显得更独特	33
难度指数 ★★★★☆☆  占用时间
实例10  简单的本地验证	35
难度指数 ★★★★★★  占用时间 ○
实例11  性别的选择	38
难度指数 ★★★★★★  占用时间
实例12  选择喜欢的玩家	41
难度指数 ★★★★★★  占用时间
实例13  确认提交	43
难度指数 ★★★★★★  占用时间 ○
实例14  个人爱好选择	45
难度指数 ★★★★★★  占用时间
实例15  灯泡开关	47
难度指数 ★★★★★★  占用时间 ○
实例16  最亲和的提示	50
难度指数 ★★★★☆☆  占用时间 ○
实例17  有背景图片的按钮	52
难度指数 ★★★★★☆  占用时间
实例18  图片按钮的单击变换	54
难度指数 ★★★★☆☆  占用时间
实例19  音乐播放的进度提示	56
难度指数 ★★★★★★  占用时间
实例20  音量大小的调节	58
难度指数 ★★★★★★  占用时间
实例21  为你喜欢的作品打分	60
难度指数 ★★★★★☆  占用时间
实例22  自定义绘制画布	62
实例23  自定义绘制字符串	63
实例24  自定义绘制几何图形	65
实例25  图片绘制的控制技巧	67
第3章  Android高级控件的开发及应用	71
实例1   单击查看名人信息	71
难度指数 ★☆☆☆☆☆  占用时间 ○○
实例2   动态图片排版	74
难度指数 ★★☆☆☆☆  占用时间 ○○
实例3   选择喜欢的体育运动	77
难度指数 ★★★★☆☆  占用时间 ○○
实例4   向菜单中添加选项	79
难度指数 ★★★☆☆☆  占用时间 ○
实例5   单击改变图片透明度	82
难度指数 ★★☆☆☆☆  占用时间 ○
实例6   动态改变图片大小	84
难度指数 ★★★★★★  占用时间
实例7   旋转图片的技巧	86
难度指数 ★★★☆☆☆  占用时间 ○
实例8   制作自己的相片集	89
难度指数 ★★★☆☆☆  占用时间 ○○
实例9   重要消息提醒	91
难度指数 ★★★★☆☆  占用时间 ○
实例10  后台程序安装进度提示	93
难度指数 ★★★★☆☆  占用时间 ○
实例11  用单选框实现选择个人特长	96
难度指数 ★★★★☆☆  占用时间 ○
实例12  用复选框实现选择喜欢的城市	98
难度指数 ★★★★☆☆  占用时间 ○
实例13  单击“确定”按钮弹出对话框	101
难度指数 ★★★★★☆  占用时间
实例14  查看时间日期的应用	102
难度指数 ★★★★★☆  占用时间
实例15  时钟模拟设计的应用	105
难度指数 ★★★★★★  占用时间
实例16  动态列表配置选项	108
难度指数 ★★☆☆☆☆  占用时间 ○○
实例17  在安卓中浏览网页	110
难度指数 ★★☆☆☆☆  占用时间 ○○
实例18  切换列表显示	112
难度指数 ★★★★★☆  占用时间 ○
小结	114
第4章  手机用户界面	115
实例1   获取手机屏幕的分辨率	115
难度指数 ★☆☆☆☆☆  占用时间 ○○
实例2   实现按钮的界面响应	117
难度指数 ★★☆☆☆☆  占用时间 ○○
实例3   给控件做背景图的小技巧	120
难度指数 ★★★☆☆☆  占用时间 ○
实例4   定时改变提示信息	122
难度指数 ★★★★☆☆  占用时间
实例5   手机桌面心情	125
难度指数 ★★★★★☆  占用时间
实例6   应用选项菜单的综合技巧	132
难度指数 ★★★☆☆☆  占用时间 ○
实例7   上下文菜单的应用	135
难度指数 ★★★☆☆☆  占用时间 ○
实例8   手机背景颜色的设置	138
难度指数 ★★☆☆☆☆  占用时间 ○
实例9   字体颜色的变换	140
难度指数 ★★☆☆☆☆  占用时间 ○
实例10  实现手机界面的置换	141
难度指数 ★★★☆☆☆  占用时间 ○
实例11  活用信使启动新界面	145
难度指数 ★★★☆☆☆  占用时间 ○
实例12  界面间的数据传送技巧	148
难度指数 ★★★★★★  占用时间
实例13  实现数据的返回接收	153
难度指数 ★★★★★☆  占用时间 ○
实例14  设置自己的手机显示模式	158
难度指数 ★★★★☆☆  占用时间 ○○
实例15  更改手机屏幕显示方向	160
难度指数 ★★★★☆☆  占用时间 ○○
小结	163
第5章  手机通信服务及手机控制	164
实例1   自动调用系统的拨号、上网和发送E-mail的功能	164
难度指数 ★☆☆☆☆☆  占用时间 ○○
实例2   电话拨号软件	166
难度指数 ★☆☆☆☆☆  占用时间 ○○
实例3   自制电话拨号系统	168
难度指数 ★★★★☆☆  占用时间 ○
实例4   手机发送短信	171
难度指数 ★★☆☆☆☆  占用时间 ○
实例5   简易电子邮件	175
难度指数 ★★☆☆☆☆  占用时间
实例6   自制手机通讯录搜索	177
难度指数 ★★☆☆☆☆  占用时间 ○
实例7   一键查询联系人资料	181
难度指数 ★★★★☆☆  占用时间
实例8   有图标的爱好选择系统	183
难度指数 ★★★☆☆☆  占用时间 ○
实例9   界面切换时的震动提醒	185
难度指数 ★★★☆☆☆  占用时间 ○
实例10  带图片的小提醒	187
难度指数 ★★★★★☆  占用时间 ○
实例11  音乐播放器在状态栏上图标提示	189
难度指数 ★★★★★☆  占用时间
实例12  自制打开或关闭Wi-Fi	192
难度指数 ★★☆☆☆☆  占用时间 ○
实例13  还原手机桌面背景	195
难度指数 ★★☆☆☆☆  占用时间 ○○
实例14  设置手机桌面背景	196
难度指数 ★★☆☆☆☆  占用时间 ○○
实例15  轻松获取手机桌面背景	198
难度指数 ★★★★★☆  占用时间 ○
实例16  轻松查看手机的相关信息	199
难度指数 ★★★★★★  占用时间
实例17  查看SIM卡的详细信息	202
难度指数 ★★★☆☆☆  占用时间 ○
实例18  按键移动图片——方向键的应用	205
难度指数 ★★★★★★  占用时间
实例19  查看正在运行的程序	208
难度指数 ★★★★☆☆  占用时间 ○
实例20  手机屏幕更改时信息的捕捉和提醒	210
难度指数 ★★★☆☆☆  占用时间 ○○
小结	213
第6章  手机的自动服务功能	214
实例1   自动服务的主要功能	214
难度指数 ★★★☆☆☆  占用时间 ○
实例2   系统服务的开始与停止	218
难度指数 ★★★☆☆☆  占用时间 ○
实例3   提醒用户收到短信	221
难度指数 ★☆☆☆☆☆  占用时间
实例4   查看手机电池剩余电量	223
难度指数 ★★☆☆☆☆  占用时间 ○○
实例5   接收到短信时界面切换显示短信消息	225
难度指数 ★★★★☆☆  占用时间 ○
实例6   通过后台定时发送提示	229
难度指数 ★★★★★☆  占用时间
实例7   短信群发功能的实现	233
难度指数 ★★★☆☆☆  占用时间 ○
实例8   开机程序自启动	235
难度指数 ★★★☆☆☆  占用时间 ○
实例9   手机状态提醒	240
难度指数 ★★☆☆☆☆  占用时间 ○○
实例10  有来电时，发送短信回复	242
难度指数 ★★★★☆☆  占用时间
实例11  手机存储卡容量的查询	246
难度指数 ★☆☆☆☆☆  占用时间 ○○
实例12  备忘录的定时提醒	249
难度指数 ★★★★☆☆  占用时间 ○
实例13  设置手机静音和固定号码来电时手机震动	253
难度指数 ★★★★★☆  占用时间 ○
实例14  根据手机姿态改变手机模式	258
难度指数 ★★★★★★  占用时间 ○○
实例15  定时更改手机模式	262
难度指数 ★★★★★★  占用时间
小结	266
第7章  手机文件I/O与数据库的应用	267
实例1   手机SD卡文本阅读器	267
难度指数 ★★☆☆☆☆  占用时间 ○○
实例2   修改手机中的文件	269
难度指数 ★★☆☆☆☆  占用时间 ○
实例3   删除手机中的文件	275
难度指数 ★★★☆☆☆  占用时间 ○
实例4   访问APK包中的文件	278
难度指数 ★★★☆☆☆  占用时间 ○○
实例5   简单的学生信息管理	281
难度指数 ★★★★★★  占用时间
实例6   查看手机里面的相片	288
难度指数 ★★★★☆☆  占用时间 ○○
实例7   对数据库的简单操作	291
难度指数 ★★★★★☆  占用时间
实例8   记录访问程序的时间	294
难度指数 ★☆☆☆☆☆  占用时间 ○
小结	296
第8章  手机网络应用	297
实例1   网络连接检测软件	297
难度指数 ★☆☆☆☆☆  占用时间 ○○
实例2   制作简单网页浏览器	300
难度指数 ★★★☆☆☆  占用时间 ○
实例3   自定义网页浏览器	303
难度指数 ★★☆☆☆☆  占用时间 ○○
实例4   网络图片浏览软件	305
难度指数 ★★★☆☆☆  占用时间 ○
实例5   网络图片相册集	308
难度指数 ★★★★☆☆  占用时间
实例6   手机查看实时卫星云图	316
难度指数 ★★★☆☆☆  占用时间
实例7   Google天气客户端	319
难度指数 ★★★★☆☆  占用时间
实例8   旅游城市的介绍	325
难度指数 ★★★★☆☆  占用时间
实例9   网络音乐播放	330
难度指数 ★★☆☆☆☆  占用时间 ○○
实例10  网络歌曲下载软件	333
难度指数 ★★★☆☆☆  占用时间 ○
实例11  下载网络歌曲制作手机铃声	338
难度指数 ★★★☆☆☆  占用时间 ○
实例12  下载网络图片制作手机背景	342
难度指数 ★★★☆☆☆  占用时间 ○
实例13  制作RSS阅读器	345
难度指数 ★★★★☆☆  占用时间
实例14  远程下载与安装Android程序	352
难度指数 ★★★★★☆  占用时间
实例15  手机下载看3gp影片	357
难度指数 ★★★★★★  占用时间 ○
实例16  常用网站登录界面的制作	362
难度指数 ★★★★★★  占用时间
小结	366
第9章  手机的Google服务功能	368
实例1   手机客户端Google账号登录	368
难度指数 ★☆☆☆☆☆  占用时间 ○○
实例2   使用手机进行Google搜索	373
难度指数 ★★☆☆☆☆  占用时间 ○○
实例3   制作成绩柱状图	376
难度指数 ★★★☆☆☆  占用时间 ○
实例4   实现Google地图	380
难度指数 ★★★★☆☆  占用时间
实例5   Google地图地点查询功能	387
难度指数 ★★★★★☆  占用时间 ○
实例6   随身小词典	393
难度指数 ★★★★★★  占用时间
小结	398
第10章  手机多媒体服务功能	399
实例1   获取图片的宽高	399
难度指数 ★☆☆☆☆☆  占用时间 ○○
实例2   绘制简单图形	400
难度指数 ★★☆☆☆☆  占用时间 ○
实例3   实现平面贴图	402
难度指数 ★★☆☆☆☆  占用时间 ○
实例4   简单淡入淡出效果	404
难度指数 ★★★☆☆☆  占用时间 ○
实例5   虚拟键的设计与实现	407
难度指数 ★★★☆☆☆  占用时间 ○○
实例6   获取手机内置媒体图片	410
难度指数 ★★★★☆☆  占用时间 ○
实例7   手机音量大小的调节	413
难度指数 ★★★☆☆☆  占用时间 ○○
实例8   采集音频数据	417
难度指数 ★★★★☆☆  占用时间 ○
实例9   采集图像数据	421
难度指数 ★★★☆☆☆  占用时间 ○○
实例10  采集视频数据	426
难度指数 ★★★★★☆  占用时间 ○
实例11  视频播放器	431
难度指数 ★★★★★☆  占用时间 ○
实例12  自定义动画效果	436
难度指数 ★★★★★★  占用时间
实例13  小球游戏	439
难度指数 ★★★★★★  占用时间
实例14  音乐播放器	448
难度指数 ★★★★★★  占用时间
小结	453
第11章  Android手机的3D世界	454
实例1   三角形的绘制	454
难度指数 ★☆☆☆☆☆  占用时间 ○○
实例2   立方体的绘制	458
难度指数 ★★☆☆☆☆  占用时间 ○○
实例3   球体的绘制	461
难度指数 ★★☆☆☆☆  占用时间 ○
实例4   丰富多彩的光照世界	465
难度指数 ★★★☆☆☆  占用时间 ○
实例5   制作简易小木箱	468
难度指数 ★★★☆☆☆  占用时间 ○
实例6   朦胧世界的雾景特效	472
难度指数 ★★★★☆☆  占用时间
实例7   透过玻璃看风景	474
难度指数 ★★★★★☆  占用时间
实例8   3D相册的制作	478
难度指数 ★★★★★★  占用时间
小结	487
第12章  手机特效开发	488
实例1   虚线特效的开发	488
难度指数 ★☆☆☆☆☆  占用时间 ○○
实例2   切屏动画特效	492
难度指数 ★★☆☆☆☆  占用时间 ○
实例3   控件的抖动特效	496
难度指数 ★★☆☆☆☆  占用时间 ○○
实例4   多点触控	499
难度指数 ★★☆☆☆☆  占用时间 ○○
实例5   传感器探测者	504
难度指数 ★★★☆☆☆  占用时间 ○
实例6   小球游戏动态壁纸	507
难度指数 ★★★★☆☆  占用时间
实例7   自动完成输入框	513
难度指数 ★★★☆☆☆  占用时间 ○
实例8   对你的图片进行简单编辑	518
难度指数 ★★★☆☆☆  占用时间 ○
实例9   左右拖拉你的界面	521
难度指数 ★★★★☆☆  占用时间 ○
实例10  灵活的桌面小工具	527
难度指数 ★★☆☆☆☆  占用时间 ○
实例11  JDBC客户端的开发	533
难度指数 ★★★★★☆  占用时间
实例12  新浪微博客户端的开发	537
难度指数 ★★★★★★  占用时间
小结	543
第13章  休闲游戏——Q版疯狂大炮	544
实例1   游戏背景及功能介绍	544
实例2   游戏实际预览效果	544
实例3   游戏策划及准备工作	546
实例4   游戏的架构	547
难度指数 ★☆☆☆☆☆  占用时间 ○○
实例5   游戏的主类代码框架	549
难度指数 ★★☆☆☆☆  占用时间 ○○
实例6   主类中部分成员变量及方法的实现	551
实例7   按键响应线程类的实现	556
难度指数 ★☆☆☆☆☆  占用时间 ○○
实例8   游戏常量类的设计与实现	557
实例9   欢迎动画界面的设计与实现	559
难度指数 ★★★☆☆☆  占用时间 ○
实例10  主菜单界面的设计与实现	561
难度指数 ★★★★☆☆  占用时间 ○
实例11  积分榜界面的代码框架	562
难度指数 ★★★☆☆☆  占用时间
实例12  积分榜界面中部分方法的实现	564
实例13  游戏界面显示类的代码框架	566
实例14  游戏界面显示类中部分方法的实现	567
实例15  目标路径类的实现	570
难度指数 ★★★★★☆  占用时间
实例16  产生目标线程类的实现	571
实例17  英雄大炮类的代码框架	572
实例18  英雄大炮类成员方法的实现	574
难度指数 ★★★★★☆  占用时间
实例19  炮弹的实现	576
实例20  目标的实现	577
实例21  爆炸效果的实现	579
实例22  飞行器及其子类的实现	579
实例23  飞行物的实现	581
实例24  力度条的实现	581
实例25  定时器的实现	583
实例26  得分榜的实现	584
实例27  滚屏背景的实现	585
实例28  主菜单按钮的实现	586
实例29  获取系统日期的方法	587
实例30  游戏的优化与改进	588
难度指数 ★★★★★★  占用时间
第14章  娱乐游戏——3D迷宫	589
实例1   游戏背景及功能介绍	589
实例2   游戏实际预览效果	589
实例3   游戏策划及准备工作	592
实例4   游戏的架构	593
难度指数 ★☆☆☆☆☆  占用时间 ○○
实例5   游戏主类的设计与实现	594
实例6   游戏常量类的设计与实现	598
难度指数 ★☆☆☆☆☆  占用时间 ○○
实例7   游戏主菜单类的设计与实现	599
难度指数 ★★☆☆☆☆  占用时间 ○○
实例8   游戏界面的设计与实现	602
难度指数 ★★★☆☆☆  占用时间 ○
实例9   游戏界面中主要场景的绘制	607
难度指数 ★★★★☆☆  占用时间
实例10  游戏中的逻辑实现与线程操控	617
难度指数 ★★★★★☆  占用时间
实例11  游戏地图设计器的界面效果与使用方法	621
难度指数 ★★★★★★  占用时间
实例12  游戏地图设计器的开发实现	623
实例13  游戏的优化与改进	629
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android编程经典200例
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android 5.0开发范例代码大全：第4版
目    录
第1章  布局和视图	1
1.1  样式化常见组件	1
1.1.1  问题	1
1.1.1  解决方案	1
1.1.3  实现机制	2
1.2  切换系统UI元素	10
1.2.1  问题	10
1.2.2  解决方案	10
1.2.3  实现机制	11
1.3  创建并显示视图	14
1.3.1  问题	14
1.3.2  解决方案	14
1.3.3  实现机制	14
1.4  动画视图	20
1.4.1  问题	20
1.4.2  解决方案	21
1.4.3  实现机制	21
1.5  布局变化时的动画	26
1.5.1  问题	26
1.5.2  解决方案	26
1.5.3  实现机制	27
1.6  实现针对具体场景的布局	30
1.6.1  问题	30
1.6.2  解决方案	30
1.6.3  实现机制	30
1.7  自定义AdapterView的空视图	38
1.7.1  问题	38
1.7.2  解决方案	38
1.7.3  实现机制	38
1.8  自定义ListView中的行	40
1.8.1  问题	40
1.8.2  解决方案	40
1.8.3  实现机制	40
1.9  制作ListView的节头部	44
1.9.1  问题	44
1.9.2  解决方案	44
1.9.3  实现机制	44
1.10  创建组合控件	52
1.10.1  问题	52
1.10.2  解决方案	52
1.10.3  实现机制	52
1.11  自定义过渡动画	56
1.11.1  问题	56
1.11.2  解决方案	56
1.11.3  实现机制	56
1.12  创建视图变换	65
1.12.1  问题	65
1.12.2  解决方案	65
1.12.3  实现机制	65
1.13  建立可扩展的集合视图	71
1.13.1  问题	71
1.13.2  解决方案	72
1.13.3  实现机制	72
1.14  小结	82
第2章  用户交互	83
2.1  利用Action Bar	83
2.1.1  问题	83
2.1.2  解决方案	83
2.1.3  实现机制	84
2.2  锁定Activity方向	91
2.2.1  问题	91
2.2.2  解决方案	91
2.2.3  实现机制	91
2.3  动态方向锁定	92
2.3.1  问题	92
2.3.2  解决方案	92
2.3.3  实现机制	92
2.4  手动处理旋转	94
2.4.1  问题	94
2.4.2  解决方案	94
2.4.3  实现机制	95
2.5  创建上下文动作	98
2.5.1  问题	98
2.5.2  解决方案	98
2.5.3  实现机制	98
2.6  显示一个用户对话框	103
2.6.1  问题	103
2.6.2  解决方案	103
2.6.3  实现机制	103
2.7  自定义菜单和动作	108
2.7.1  问题	108
2.7.2  解决方案	108
2.7.3  实现机制	109
2.8  自定义BACK按键	114
2.8.1  问题	114
2.8.2  解决方案	114
2.8.3  实现机制	114
2.9  模拟HOME按键	117
2.9.1  问题	117
2.9.2  解决方案	117
2.9.3  实现机制	118
2.10  监控TextView的变动	118
2.10.1  问题	118
2.10.2  解决方案	118
2.10.3  实现机制	119
2.11  自定义键盘动作	121
2.11.1  问题	121
2.11.2  解决方案	121
2.11.3  实现机制	121
2.12  消除软键盘	124
2.12.1  问题	124
2.12.2  解决方案	124
2.12.3  实现机制	124
2.13  处理复杂的触摸事件	125
2.13.1  问题	125
2.13.2  解决方案	125
2.13.3  实现机制	126
2.14  转发触摸事件	142
2.14.1  问题	142
2.14.2  解决方案	142
2.14.3  实现机制	142
2.15  阻止触摸窃贼	146
2.15.1  问题	146
2.15.2  解决方案	146
2.15.3  实现机制	146
2.16  创建拖放视图	149
2.16.1  问题	149
2.16.2  解决方案	150
2.16.3  实现机制	151
2.17  构建导航Drawer	157
2.17.1  问题	157
2.17.2  解决方案	157
2.17.3  实现机制	157
2.18  在视图之间滑动	167
2.18.1  问题	167
2.18.2  解决方案	167
2.18.3  实现机制	168
2.19  使用选项卡导航	177
2.19.1  问题	177
2.19.2  解决方案	177
2.19.3  实现机制	178
2.20  小结	185
第3章  通信和联网	187
3.1  显示Web信息	187
3.1.1  问题	187
3.1.2  解决方案	187
3.1.3  实现机制	187
3.2  拦截WebView事件	192
3.2.1  问题	192
3.2.2  解决方案	192
3.2.3  实现机制	192
3.3  访问带JavaScript的WebView	193
3.3.1  问题	193
3.3.2  解决方案	194
3.3.3  实现机制	194
3.4  下载图片文件	196
3.4.1  问题	196
3.4.2  解决方案	197
3.4.3  实现机制	197
3.5  完全在后台下载	200
3.5.1  问题	200
3.5.2  解决方案	200
3.5.3  实现机制	200
3.6  访问REST API	203
3.6.1  问题	203
3.6.2  解决方案	204
3.6.3  实现机制	204
3.7  解析JSON	222
3.7.1  问题	222
3.7.2  解决方案	222
3.7.3  实现机制	222
3.8  解析XML	225
3.8.1  问题	225
3.8.2  解决方案	225
3.8.3  实现机制	226
3.9  接收短信	235
3.9.1  问题	235
3.9.2  解决方案	235
3.9.3  实现机制	236
3.10  发送短信	238
3.10.1  问题	238
3.10.2  解决方案	238
3.10.3  实现机制	239
3.11  蓝牙通信	241
3.11.1  问题	241
3.11.2  解决方案	241
3.11.3  实现机制	241
3.12  查询网络连接状态	250
3.12.1  问题	250
3.12.2  解决方案	250
3.12.3  实现机制	250
3.13  使用NFC传输数据	253
3.13.1  问题	253
3.13.2  解决方案	253
3.13.3  实现机制	253
3.14  USB连接	260
3.14.1  问题	260
3.14.2  解决方案	261
3.14.3  实现机制	261
3.15  小结	270
第4章  实现设备硬件交互与媒体交互	271
4.1  整合设备位置	271
4.1.1  问题	271
4.1.2  解决方案	271
4.1.3  实现机制	272
4.2  地图位置	277
4.2.1  问题	277
4.2.2  解决方案	277
4.2.3  实现机制	280
4.3  在地图上标记位置	285
4.3.1  问题	285
4.3.2  解决方案	285
4.3.3  实现机制	286
4.4  监控位置地区	301
4.4.1  问题	301
4.4.2  解决方案	301
4.4.3  实现机制	302
4.5  拍摄照片和视频	311
4.5.1  问题	311
4.5.2  解决方案	311
4.5.3  实现机制	311
4.6  自定义摄像头覆盖层	316
4.6.1  问题	316
4.6.2  解决方案	316
4.6.3  实现机制	317
4.7  录制音频	323
4.7.1  问题	323
4.7.2  解决方案	323
4.7.3  实现机制	323
4.8  自定义视频采集	325
4.8.1  问题	325
4.8.2  解决方案	325
4.8.3  实现机制	326
4.9  添加语音识别	330
4.9.1  问题	330
4.9.2  解决方案	330
4.9.3  实现机制	330
4.10  播放音频/视频	332
4.10.1  问题	332
4.10.2  解决方案	332
4.10.3  实现机制	332
4.11  播放音效	341
4.11.1  问题	341
4.11.2  解决方案	341
4.11.3  实现机制	341
4.12  创建倾斜监控器	344
4.12.1  问题	344
4.12.2  解决方案	344
4.12.3  实现机制	344
4.13  监控罗盘的方向	347
4.13.1  问题	347
4.13.2  解决方案	348
4.13.3  实现机制	348
4.14  从媒体内容中获取元数据	351
4.14.1  问题	351
4.14.2  解决方案	351
4.14.3  实现机制	352
4.15  检测用户移动	355
4.15.1  问题	355
4.15.2  解决方案	355
4.15.3  实现机制	356
4.16  小结	366
第5章  数据持久化	367
5.1  制作首选项界面	367
5.1.1  问题	367
5.1.2  解决方案	367
5.1.3  实现机制	367
5.2  显示自定义首选项	373
5.2.1  问题	373
5.2.2  解决方案	373
5.2.3  实现机制	374
5.3  简单数据存储	378
5.3.1  问题	378
5.3.2  解决方案	379
5.3.3  实现机制	379
5.4  读写文件	383
5.4.1  问题	383
5.4.2  解决方案	383
5.4.3  实现机制	383
5.5  以资源的形式使用文件	390
5.5.1  问题	390
5.5.2  解决方案	390
5.5.3  实现机制	391
5.6  管理数据库	393
5.6.1  问题	393
5.6.2  解决方案	393
5.6.3  实现机制	393
5.7  查询数据库	398
5.7.1  问题	398
5.7.2  解决方案	398
5.7.3  实现机制	399
5.8  备份数据	400
5.8.1  问题	400
5.8.2  解决方案	400
5.8.3  实现机制	400
5.9  分享数据库	405
5.9.1  问题	405
5.9.2  解决方案	405
5.9.3  实现机制	405
5.10  分享SharedPreference	412
5.10.1  问题	412
5.10.2  解决方案	412
5.10.3  实现机制	412
5.11  分享其他数据	421
5.11.1  问题	421
5.11.2  解决方案	421
5.11.3  实现机制	422
5.12  集成系统文档	428
5.12.1  问题	428
5.12.2  解决方案	428
5.12.3  实现机制	429
5.13  小结	442
第6章  与系统交互	443
6.1  后台通知	443
6.1.1  问题	443
6.1.2  解决方案	443
6.1.3  实现机制	443
6.2  创建定时和周期任务	459
6.2.1  问题	459
6.2.2  解决方案	460
6.2.3  实现机制	460
6.3  定时执行周期任务	461
6.3.1  问题	461
6.3.2  解决方案	461
6.3.3  实现机制	462
6.4  创建粘性操作	469
6.4.1  问题	469
6.4.2  解决方案	469
6.4.3  实现机制	470
6.5  长时间运行的后台操作	474
6.5.1  问题	474
6.5.2  解决方案	474
6.5.3  实现机制	475
6.6  启动其他应用程序	480
6.6.1  问题	480
6.6.2  解决方案	480
6.6.3  实现机制	481
6.7  启动系统应用程序	484
6.7.1  问题	484
6.7.2  解决方案	484
6.7.3  实现机制	485
6.8  让其他应用程序启动你的应用程序	489
6.8.1  问题	489
6.8.2  解决方案	489
6.8.3  实现机制	489
6.9  与联系人交互	491
6.9.1  问题	491
6.9.2  解决方案	491
6.9.3  实现机制	492
6.10  读取设备媒体和文档	500
6.10.1  问题	500
6.10.2  解决方案	500
6.10.3  实现机制	500
6.11  保存设备媒体和文档	504
6.11.1  问题	504
6.11.2  解决方案	504
6.11.3  实现机制	504
6.12  读取消息数据	509
6.12.1  问题	509
6.12.2  解决方案	509
6.12.3  实现机制	510
6.13  与日历交互	521
6.13.1  问题	521
6.13.2  解决方案	521
6.13.3  实现机制	521
6.14  执行日志代码	527
6.14.1  问题	527
6.14.2  解决方案	528
6.14.3  实现机制	528
6.15  创建后台工作线程	530
6.15.1  问题	530
6.15.2  解决方案	530
6.15.3  实现机制	530
6.16  自定义任务栈	535
6.16.1  问题	535
6.16.2  解决方案	535
6.16.3  实现机制	535
6.17  实现AppWidget	543
6.17.1  问题	543
6.17.2  解决方案	543
6.17.3  实现机制	544
6.18  支持受限制的配置文件	564
6.18.1  问题	564
6.18.2  解决方案	564
6.18.3  实现机制	565
6.19  小结	577
第7章  图形和绘图	579
7.1  用Drawable做背景	579
7.1.1  问题	579
7.1.2  解决方案	579
7.1.3  实现机制	580
7.2  创建自定义状态的Drawable	586
7.2.1  问题	586
7.2.2  解决方案	586
7.2.3  实现机制	586
7.3  将遮罩应用于图片	591
7.3.1  问题	591
7.3.2  解决方案	591
7.3.3  实现机制	592
7.4  在视图内容上绘制	601
7.4.1  问题	601
7.4.2  解决方案	601
7.4.3  实现机制	601
7.5  高性能绘制	617
7.5.1  问题	617
7.5.2  解决方案	617
7.5.3  实现机制	617
7.6  提取图片调色板	628
7.6.1  问题	628
7.6.2  解决方案	628
7.6.3  实现机制	629
7.7  平铺Drawable元素	633
7.7.1  问题	633
7.7.2  解决方案	633
7.7.3  实现机制	634
7.8  使用可缩放的向量资源	639
7.8.1  问题	639
7.8.2  解决方案	639
7.8.3  实现机制	639
7.9  小结	648
第8章  使用Android NDK和
RenderScript	649
8.1  Android NDK	649
8.2  使用JNI添加原生位	651
8.2.1  问题	651
8.2.2  解决方案	651
8.2.3  实现机制	652
8.3  构建纯原生Activity	660
8.3.1  问题	660
8.3.2  解决方案	660
8.3.3  实现机制	660
8.4  RenderScript	670
8.5  使用RenderScript过滤图片	671
8.5.1  问题	671
8.5.2  解决方案	672
8.5.3  实现机制	672
8.6  使用RenderScript操作图片	677
8.6.1  问题	677
8.6.2  解决方案	677
8.6.3  实现机制	677
8.7  使用模糊滤镜仿造透明覆盖层	683
8.7.1  问题	683
8.7.2  解决方案	683
8.7.3  实现机制	683
8.8  小结	693
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android 5.0开发范例代码大全：第4版
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入理解Android：WebKit卷
序
前　言
第1章　搭建源代码编译环境	1
1.1　Android全源码开发环境	1
1.1.1　PC配置建议	1
1.1.2　Ubuntu系统安装	2
1.1.3　Ubuntu下Android编译环境搭建	2
1.1.4　工作目录设置	3
1.1.5　源代码下载	3
1.1.6　整体编译Android源代码	4
1.1.7　单个模块按需编译	5
1.1.8　编译生成本地Android SDK 5
1.2　Android常用工具使用及相关技巧说明	6
1.2.1　启动Android模拟器	10
1.2.2　Android调试工具adb的使用方法	10
1.3　WebKit源代码目录结构	13
1.4　WebKit代码调试	15
1.5　本章小结	17
第2章　浏览器工作原理及WebKit概览	18
2.1　浏览器工作原理概述	18
2.1.1　页面	19
2.1.2　内核	19
2.1.3　外壳	24
2.2　浏览器和WebKit简史	27
2.3　WebKit架构概览	29
2.3.1　整体组成架构	30
2.3.2　核心工作流程	34
2.3.3　代码设计风格	36
2.4　本章小结	38
第3章　WTF的实现及使用	39
3.1　WTF库概述	39
3.2　智能指针	40
3.2.1　OwnPtr的实现及使用	41
3.2.2　RefPtr的实现及使用	44
3.2.3　线程安全性	45
3.3　Assert与crash dump	46
3.3.1　Assert的实现及使用	46
3.3.2　crash dump的实现及使用	47
3.4　内存管理与容器	50
3.4.1　FastAllocator的实现及使用	50
3.4.2　容器类概述	51
3.5　原子操作	57
3.6　WebKit运行时线程结构	57
3.6.1　MessageQueue实现分析	57
3.6.2　Task传递	59
3.6.3　MainThread运行原理	60
3.7　本章小结	61
第4章　Loader与网络库	62
4.1　Loader概述	63
4.2　Loader的设计与实现架构	63
4.2.1　Loader模块的设计	63
4.2.2　Loader中的类结构及作用	65
4.3　MainResourceLoader资源加载流程	67
4.3.1　主资源	67
4.3.2　主资源加载示例	67
4.4　SubResourceLoader资源加载流程	73
4.4.1　派生资源	73
4.4.2　派生资源加载示例	73
4.5　WebKit网络库chrome-net介绍	80
4.5.1　chrome-net实现结构	80
4.5.2　chrome-net与WebKit的接口	81
4.6　WebKit中的 Cache	81
4.6.1　Memory Cache内存缓存	82
4.6.2　Page Cache页面缓存	84
4.6.3　Disk Cache磁盘缓存	86
4.7　本章小结	87
第5章　网页解析	88
5.1　WebKit网页解析概述	88
5.2　DOM模型简介	89
5.3　HTML解析过程	90
5.3.1　DOM树的构建	90
5.3.2　Render树的构建	94
5.3.3　RenderLayer树的构建	96
5.4　CSS样式表处理	97
5.4.1　CSS文档结构	97
5.4.2　CSS解析过程	99
5.4.3　CSS规则匹配	100
5.5　JavaScript脚本执行	101
5.6　本章小结	103
第6章　排版布局	104
6.1　CSS盒模型	104
6.2　定位与包含块	106
6.3　Render类的核心对象	111
6.4　Render树创建流程代码分析	121
6.5　Layout流程代码分析	123
6.5.1　计算大小	123
6.5.2　确定位置	127
6.5.3　简单例子	130
6.6　绘制流程分析	131
6.7　本章小结	136
第7章　渲染与硬件加速	137
7.1　Android SurfaceFlinger系统介绍	137
7.2　WebKit 的三棵树	138
7.3　Android WebKit渲染过程	139
7.3.1　Android WebKit记录网页绘制命令过程分析	140
7.3.2　Android WebKit软件渲染流程分析	145
7.3.3　Android WebKit硬件渲染流程分析	147
7.4　软件渲染与硬件渲染的优缺点	156
7.5　本章小结	156
第8章　Android WebKit框架	157
8.1　Android系统中的WebKit框架介绍	157
8.1.1　Android Framework介绍	158
8.1.2　Java Native Interface简介	160
8.1.3　Android WebKit相关API简介	161
8.2　Android WebKit框架实现解析	163
8.2.1　架构简述	164
8.2.2　初始化流程	165
8.2.3　网页加载流程	167
8.2.4　绘制调用流程	168
8.3　基于Android WebKit的浏览器实现	169
8.3.1　浏览器App的基本功能	169
8.3.2　Android系统浏览器实现解析	170
8.3.3　Android系统WebKit内核定制开发	174
8.4　本章小结	175
第9章　JavaScript扩展接口	176
9.1　V8原理及接口	176
9.1.1　V8设计元素	176
9.1.2　V8运行实例分析	181
9.1.3　V8 接口及使用	183
9.2　WebKit JavaScript接口	191
9.2.1　V8 binding作用及结构	191
9.2.2　WebKit接口扩展	191
9.3　HTML 5扩展实例	196
9.3.1　WebSocket概述	196
9.3.2　WebSocket实现分析	198
9.4　本章小结	200
第10章　WebKit的插件系统	201
10.1　NPAPI插件概述	202
10.1.1　浏览器插件功能作用	202
10.1.2　NPAPI插件规范	202
10.2　WebKit的插件系统	204
10.2.1　WebKit插件基础组件	205
10.2.2　插件加载流程	205
10.2.3　插件与脚本的交互	210
10.3　Android平台插件开发	213
10.3.1　新增特有接口	213
10.3.2　插件APK化及参考范例	214
10.4　本章小结	217
第11章　浏览器调试工具	218
11.1　Inspector概述	218
11.2　WebKit Inspector协议	219
11.3　Remote Inspector实现结构	223
11.3.1　协议信道	224
11.3.2　Inspector后端	225
11.3.3　Inspector前端	229
11.4　JavaScript调试	233
11.5　本章小结	235
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入理解Android：WebKit卷
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android程序设计 第二版
前言 1
第一部分 工具和基础
第1章 Android SDK的安装和系统需求 7
Android SDK的安装和系统需求 7
小试牛刀：确认安装是否能够正常工作 16
SDK的组件 24
保持版本最新 30
示例代码 32
关于代码阅读 34
第2章 Android开发之Java必备基础 35
Android正在重塑客户端Java 35
Java类型系统 36
作用域 57
Java编程惯例 61
第3章 Android应用的主要组件 76
活动、意图和任务 77
其他Android组件 79
组件生命周期 83
静态应用资源和上下文 86
Android应用时运行的环境 94
扩展Android 97
Android中的并发编程 102
序列化 116
Parcelable 118
第4章 应用发布之前的准备工作 124
应用签名 124
把应用投放到Android市场 132
其他发布 134
Google地图API密钥 138
指定API级别的兼容性 139
兼容不同的屏幕类型 139
第5章 Android软件开发工具Eclipse 141
Eclipse相关的概念和术语 142
Eclipse视图和透视图 146
Eclipse中的Java编程 149
Eclipse和Android 151
预防Bug并保持代码整洁 151
Eclipse特性和替代品 159
第二部分 Android框架
第6章 构建视图 163
Android GUI架构 163
组装图形界面 167
控制器布局 172
菜单栏和活动栏 190
视图调试和优化 193
第7章 Fragment和跨平台支持 195
创建Fragment 196
Fragment生命周期 199
Fragment管理器 200
Fragment事务 201
Support Package 206
Fragment和布局 207
第8章 二维和三维图形的绘制 214
自己动手开发部件 214
Bling 235
第9章 数据处理和数据持久化 249
关系数据库概览 249
SQLite 250
SQL语言 250
Android应用中的SQL和数据库为中心的数据模型 260
Android数据库类 261
Android应用的数据库设计 262
使用数据库API：MJAndroid 265
第三部分 Android的框架应用
第10章 运行良好的应用框架 279
对生命周期进行可视化 279
Fragment生命周期可视化 290
Activity类和运行良好的应用 293
Application类的生命周期方法 294
第11章 构建用户界面 297
Top-Level设计 298
用户界面的可视化编辑 300
从白板开始 301
Fragment布局 305
折叠和展开可扩展的UI界面 307
使得Activity、Fragment、Action Bar和多布局能够一起工作 314
其他活动 317
第12章 使用内容提供者 321
理解内容提供者 322
定义提供者的公用API 325
编写并集成内容提供者 330
文件管理和二进制数据 331
Android MVC和内容查看器 333
一个完整的内容提供者代码：SimpleFinchVideoContentProvider 334
声明自己的内容提供者 342
第13章 内容提供者作为RESTful Web服务的Facade 343
开发RESTful类型的Android应用 344
Network MVC 345
Network MVC方式的优点小结 346
代码实例：动态列出并缓存YouTube视频内容 348
Finch YouTube视频示例的源代码结构 348
视频搜索应用的各个步骤 349
步骤1：UI获取用户输入 350
步骤2：控制器监听事件 350
步骤3：控制器调用内容提供者（即模型）的managedQuery 351
步骤4：实现RESTful请求 351
第四部分 高级话题
第14章 搜索 373
搜索界面 373
查询建议 382
第15章 地理位置和地图定位 389
基于地理位置的服务 390
地图定位 391
Google Maps Activity 391
MapView和MapActivity 392
使用MapView 392
MapView和MyLocationOverlay初始化 393
暂停和恢复MapActivity 396
通过菜单按钮控制地图 397
通过键盘操作地图 399
没有地图的地理位置 400
街景（StreetView） 408
第16章 多媒体 410
音频和视频 410
播放音频和视频 411
录制音频和视频 415
存储的媒体内容 421
第17章 传感器、NFC、语音、手势和可访问性 422
传感器 422
近场通信 427
手势输入 438
可访问性 440
第18章 通信、身份认证、同步和社交媒体 442
账户信息 442
认证和同步 445
蓝牙 460
第19章 Android本地开发工具箱 476
本地方法和JNI调用 477
Android NDK 478
NDK提供的本地库文件和头文件 482
编译自己定制的库模块 484
本地Activity 487
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android程序设计 第二版
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android热门应用开发详解
第一篇  Android开发基础
第1章  Android开发环境与开发工具	2
1.1　Java开发工具包的安装和配置	3
1.1.1　安装Java开发工具包	4
1.1.2　配置Java开发工具包	4
1.2　Android软件开发工具包的下载和安装	5
1.2.1　下载Android软件开发工具包	6
1.2.2　安装Android 软件开发工具包	6
1.3　使用Android SDK开发Android应用	7
1.3.1　Android SDK目录结构	7
1.3.2　使用Android SDK文档	8
1.3.3　Android SDK中的示例	9
1.3.4　使用Android SDK命令行	10
1.3.5　使用Android模拟器	11
1.4　Eclipse的下载和安装	13
1.4.1　下载Eclipse	13
1.4.2　安装Eclipse	14
1.4.3　安装和配置Android插件（ADT）	15
1.5　使用Eclipse开发Android应用	18
1.5.1　使用Eclipse创建Android工程	18
1.5.2　Eclipse中的Android工程架构	19
1.5.3　Eclipse中Android工程的调试和运行	21
1.5.4　创建一个Android应用：Welcome Android	21
1.6　常用的Android开发工具	24
1.6.1　配置工具（AVD）	24
1.6.2　Android模拟器（Emulator）	25
1.6.3　图形化调试工具（DDMS）	26
1.6.4　命令行调试工具（ADB）	29
1.6.5　资源打包工具（AAPT）	32
1.6.6　获取日志工具（LogCat）	34
1.6.7　视图层次工具（Hierarchy Viewer）	35
第2章  Android代码风格	37
2.1　注释规范	37
2.1.1　类注释规范	39
2.1.2　函数注释规范	40
2.1.3  Java文档（Javadoc）注释规范	41
2.2  编程风格规范	44
2.2.1  命名规范	44
2.2.2  修饰符规范	48
2.2.3  缩进和空行规范	48
2.2.4  导入Google标准代码格式	50
2.3　异常处理规范	51
第二篇  Android多媒体应用实例开发
第3章  Android网络视频点播系统	54
3.1  NVOD系统描述与设计	54
3.1.1  NVOD系统功能描述	54
3.1.2  NVOD系统框架设计	55
3.1.3  NVOD系统客户端UI设计	56
3.1.4  NVOD系统客户端功能设计	57
3.2  NVOD关键技术与知识点	58
3.2.1  异步处理技术	58
3.2.2  SurfaceView与MediaPlayer	60
3.2.3  流媒体技术	63
3.3  NVOD系统实现	63
3.3.1  搭建流媒体服务器	63
3.3.2  主界面UI实现	66
3.3.3  主程序实现	69
3.3.4  播放界面UI实现	79
3.3.5  播放控制功能实现	82
3.3.6  数据源导入功能实现	90
3.4  NVOD系统演示	92
3.5  小结	96
第4章  超强图片管理器	97
4.1　图片管理器描述与设计	97
4.1.1  图片管理器功能描述	97
4.1.2  图片管理器UI设计	98
4.2　图片管理器的关键技术与知识点	100
4.2.1　视图组件	100
4.2.2　Bitmap	102
4.2.3  Animation	104
4.3　图片管理器实现	105
4.3.1  主程序功能实现	106
4.3.2　图片目录功能实现	112
4.3.3　图片浏览功能实现	122
4.3.4　图片编辑功能实现	128
4.4　图片管理器系统演示	133
4.5　小结	135
第三篇  Android游戏开发
第5章  俄罗斯方块游戏	138
5.1　俄罗斯方块游戏描述与设计	139
5.1.1　俄罗斯方块游戏功能描述	139
5.1.2  俄罗斯方块游戏算法	140
5.2　俄罗斯方块游戏关键技术和知识点	141
5.2.1　资源与资源国际化	142
5.2.2　资源动态适应	143
5.2.3　SQLite概述	144
5.3　俄罗斯方块游戏功能实现	146
5.3.1　游戏主界面UI实现	146
5.3.2　游戏、帮助及评分UI实现	150
5.3.3　游戏主程序实现	154
5.3.4　游戏处理	158
5.4　俄罗斯方块游戏演示	172
5.5　小结	176
第6章  五子棋对战游戏	177
6.1　五子棋对战游戏描述与设计	177
6.1.1　五子棋游戏功能描述	178
6.1.2　五子棋游戏UI设计	178
6.1.3　五子棋游戏数据处理	184
6.2　五子棋对战游戏知识点	184
6.2.1　Bluetooth介绍	184
6.2.2　Bluetooth 连接实现	186
6.3　五子棋对战游戏功能实现	192
6.3.1　主界面UI实现	192
6.3.2　人机对弈功能实现	193
6.3.3　人人对弈功能实现	207
6.4　五子棋对战游戏演示	209
6.5　小结	211
第四篇  Android Web应用开发
第7章  微博（Weibo）	214
7.1　Weibo功能需求	214
7.2　Weibo关键技术和知识点	217
7.2.1　OAuth认证	217
7.2.2　SharedPreferences	218
7.3　Weibo功能实现	219
7.3.1　OAuth认证实现	219
7.3.2　核心控制类实现（MainService）	230
7.3.3　主页面实现	238
7.3.4　子页面实现	246
7.4　Weibo功能演示	252
7.5　小结	255
第8章  手机浏览器（MiniExplorer）	256
8.1　MiniExplorer描述与设计	256
8.1.1　MiniExplorer功能描述	257
8.1.2　MiniExplorer UI设计	258
8.2　MiniExplorer知识点	262
8.2.1　WebView	262
8.2.2　HttpComponents	265
8.3　MiniExplorer实现	267
8.3.1　MiniExplorer UI实现	267
8.3.2　标签功能实现	268
8.4　MiniExplorer功能演示	282
8.5　小结	284
第五篇  Android手机应用开发
第9章  Android手机通话管理器（PhoneManager）	286
9.1　PhoneManager工具描述与设计	286
9.1.1　手机通话管理工具描述	287
9.1.2　手机通话管理工具设计	288
9.2　PhoneManager工具关键技术和知识点	298
9.2.1　ContentProvider数据存储	298
9.2.2　Intent通信	304
9.3　PhoneManager工具实现	310
9.3.1　黑名单与白名单功能实现	310
9.3.2　情景模式功能实现	314
9.3.3　个性铃声功能实现	321
9.3.4　通信录功能实现	321
9.4　PhoneManager工具功能演示	322
9.5　小结	325
第10章  二维码生成和扫描工具	326
10.1　二维码生成和扫描工具描述与设计	327
10.1.1　二维码生成和扫描工具描述	327
10.1.2　二维码生成和扫描工具设计	328
10.2　iCode工具关键技术和知识点	330
10.2.1　zxing工具	330
10.2.2　条形码	330
10.3　iCode工具实现	331
10.3.1　配置zxing开发库	331
10.3.2　主程序实现	338
10.3.3　信息输入程序	344
10.3.4　二维码生成	348
10.3.5　二维码扫描	355
10.4　iCode扫描和生成工具演示	358
10.5　小结	360
第11章  带有位置定位的GTalk应用	361
11.1　带有位置定位的GTalk应用功能描述	362
11.2　GTalk应用关键技术和知识点	362
11.2.1　GTalk介绍	362
11.2.2　GTalk通信协议和接口	363
11.2.3　XMPP客户端：Smack和Asmack	365
11.2.4　LocationManager	367
11.3　GTalk应用功能实现	368
11.3.1　登录功能实现	368
11.3.2　管理联系人功能实现	371
11.3.3　联系人之间的通信	377
11.3.4　位置定位功能实现	380
11.4　小结	381
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android热门应用开发详解
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android程序设计
第1章  Android架构  本章问题  1.1  Android系统框架  1.2  Android开发的分类  1.3  Android应用程序开发环境的建立  本章问题答案第2章  Android应用程序的组成第3章  Java语法在Android中的使用第4章  图形用户接口第5章  Intent与Intent Filter第6章  使用Activity第7章  使用Service第8章  使用Broadcast Receiver第9章  使用Content Provider第10章  资源文件第11章  Android本地存储系统第12章  多线程设计第13章  系统安全第14章  AndroidManifest.xml第15章  多媒体与网络开发基础第16章  Android常用调试工具的使用附录参考文献
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android程序设计
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android江湖
《android江湖(含cd光盘1张) 》
第一篇 天下风云出我辈（基础篇） 1
第1章 android来袭 2
1.1 江湖恩怨3
1.1.1 何谓智能手机 3
1.1.2 智能手机的特点 4
1.1.3 当前主流的智能手机系统 4
1.2 android来袭.6
1.2.1 系出名门 6
1.2.2 android开发团队6
1.3 一统天下是夙愿7
1.3.1 奖励机制 8
1.3.2 光明的前景 9
1.3.3 看市场纷争 9
1.4 不得不提前说android模拟器10
1.4.1 android模拟器简介 10
1.4.2 模拟器和真机究竟有何区别 11
1.4.3 模拟器简单总结 11
1.5 小结.14
第2章 绝世好剑——android sdk 15
.2.1 工欲善其事，必先利其器16
2.1.1 安装android sdk的系统要求 17
2.1.2 android软件开发包 17
2.2 常规方法装备自己.18
2.2.1 安装jdk、eclipse、android sdk 18
2.2.2 设定android sdk home30
2.2.3 验证开发环境30
2.2.4 创建android虚拟设备（avd） 32
2.3 常见的几个问题34
2.4 小结.39
第3章 人生的第一次 40
3.1 android体系结构介绍41
3.1.1 目录结构41
3.1.2 sdk文档中的帮助信息 42
3.1.3 sdk中的工具43
3.2 看前辈们的杰作45
3.3 第一次练习49
3.3.1 新建android工程 50
3.3.2 编写代码和代码分析 51
3.3.3 调试 52
3.3.4 运行项目54
3.4 小结.56
第4章 内功修行是基础 57
4.1 纵览体系结构58
4.1.1 根基 59
4.1.2 成功的中间层59
4.1.3 何谓根本60
4.1.4 招式 60
4.2 五大组件61
4.2.1 用activity表现界面 61
4.2.2 用intent 和 intent filters实现切换 61
4.2.3 service为你服务 62
4.2.4 用broadcastintentreceiver发送广播63
4.2.5 用contentprovider存储数据 64
4.3 分析工程文件64
4.3.1 文件androidmanfest.xml 65
4.3.2 不完全一样的src目录 66
4.3.3 常量值文件和布局文件 67
4.4 生命周期的意义68
4.4.1 android周期 69
4.4.2 android进程 69
4.4.3 activity的生命周期 70
4.5 进程和线程的心有灵犀72
4.5.1 先看进程72
4.5.2 再看线程73
4.6 小结.74
第二篇 一入江湖岁月催（核心技术篇） 75
第5章 系出名门 76
5.1 用ui来装备自己77
5.1.1 view视图组件77
5.1.2 viewgroup容器 78
5.1.3 layout规划布局78
5.1.4 layoutparams参数的意义 80
5.1.5 练习 81
5.2 继续布局90
5.2.1 线性布局linearlayout91
5.2.2 框架布局framelayout 95
5.2.3 绝对布局absolutelayout 96
5.2.4 相对布局relativelayout97
5.2.5 表格布局tablelayout 99
5.2.6 练习表单布局 100
5.2.7 练习切换卡 102
5.3 友好界面menu106
5.4 intent和activity情深意浓.110
5.4.1 intent调用另一个activity 110
5.4.2 联合使用intent和activity 113
5.4.3 将数据返回到前一个activity 117
5.5 列表控件listview.123
5.5.1 通过arrayadapter接收一个数组或通过list作为参数来构建 124
5.5.2 使用simpleadapter125
5.6 对话框控件dialog.127
5.7 toast和notification控件实现提醒.134
5.7.1 toast提醒你 135
5.7.2 notification提醒你 135
5.7.3 练习toast和notification 137
5.8 小结146
第6章 人外有人，山外有山 147
6.1 在对话框中使用进度条148
6.2 使用spinner和setdropdownviewresource152
6.3 gallery和baseadapter容器155
6.4 用analogclock和digitalclock实现模拟小时钟.159
6.5 filesearch文件搜索引擎.163
6.6 小结166
第7章 琅嬛福地167
7.1 5种存储168
7.2 最简单的存储sharedpreferences168
7.2.1 sharedpreferences简介 169
7.2.2 练习sharedpreferences 169
7.3 文件存储.171
7.4 最常用的sqlite172
7.5 contentprovider存储181
7.5.1 contentprovider介绍 181
7.5.2 使用contentprovider 182
7.6 网络存储.186
7.7 数据存储的综合演练189
7.7.1 用sqlite实现日记本功能189
7.7.2 contentprovider实现对日记本数据的操作 198
7.8 小结214
第8章 电话短信双剑合璧215
8.1 再探intent216
8.2 实现拨打电话220
8.2.1 基本的拨号程序 220
8.2.2 可输入电话号码的拨号程序 222
8.2.3 intentfilter实现拨号处理224
8.3 实现短信发送226
8.4 相关包229
8.5 小结230
第9章 gps伴你走天涯 231
9.1 位置服务.232
9.1.1 android.location功能类 232
9.1.2 实现android定位233
9.1.3 练习gps定位 237
9.2 及时获取位置信息240
9.2.1 maps库类240
9.2.2 locationmanager能及时监听你 241
9.3 在android中使用地图.243
9.3.1 准备工作 243
9.3.2 使用map api密钥的基本流程246
9.3.3 应用map api密钥实例 249
9.4 小结255
第10章 虚拟与现实 256
10.1 opengl介绍.257
10.2 实战应用android opengl259
10.2.1 实现星星划过的效果 259
10.2.2 实现一个3d场景 264
10.2.3 飘动的旗帜267
10.2.4 列表显示多个3d物体270
10.2.5 粒子发射系统 273
10.3 小结278
第11章 程序也需要优化279
11.1 实现高效java编程9条基础规则.280
11.2 编写优秀代码的技巧283
11.3 java命名规范286
11.4 java程序优化287
11.4.1 基本优化 288
11.4.2 程序性能优化 298
11.4.3 高效的android程序 304
11.4.4 android的单元测试 308
11.5 小结312
第三篇 皇图霸业笑谈中（提高篇） 313
第12章 在通信领域一展身手 314
12.1 textview和edittext交互315
12.2 拨打电话317
12.3 e-mail邮件处理320
12.4 震动你的心扉324
12.5 实现图文提醒功能.328
12.6 状态栏提醒331
12.7 实现文件管理器功能335
12.8 使用wifi服务342
12.9 使用sim卡.351
12.10 触摸拨号按钮356
12.11 查看并显示手机中当前正在运行的程序.358
12.12 改变屏幕方向362
12.13 小结366
第13章 在自动服务领域游刃有余 367
13.1 实现短信自动提醒.368
13.2 获取手机电池容量.372
13.3 实现短信群发功能.375
13.4 获取存储卡容量.379
13.5 对内存和存储卡中的文件进行操作.383
13.6 闹钟提醒391
13.7 设置黑名单399
13.8 动态更换手机屏幕背景403
13.9 设置开机显示414
13.10 小结416
第14章 在多媒体领域大放光芒417
14.1 绘制各种几何图形.418
14.2 设置一个屏保程序.422
14.3 图片的触摸移动.435
14.4 获取并显示存储卡中的图片440
14.5 调节手机音量446
14.6 播放mp3文件450
14.7 实现录音功能456
14.8 设计一个影片播放器463
14.9 设置手机铃声467
14.10 小结472
第15章 internet更加给力473
15.1 在手机中使用html程序.474
15.2 浏览网页475
15.3 使用内置浏览器打开网页477
15.4 通过网络下载mp3并播放481
15.5 调用qq空间照片并显示490
15.6 将文件上传至服务器495
15.7 网络下载手机铃声.499
15.8 下载并安装apk506
15.9 小结513
第16章 google api是独有的优势 514
16.1 google search api实现检索处理515
16.2 验证官方账号522
16.3 实现地址查询531
16.4 实现路途导航536
16.5 实现gps实时更新的处理545
16.6 手机随身翻译551
16.7 实现二维条码扫描功能554
16.8 更改手机屏幕的颜色565
16.9 小结572
第四篇 不胜人生一场醉（综合实战篇）573
第17章 风云再起之rss 574
17.1 rss开发必备575
17.1.1 rss技术介绍575
17.1.2 sax技术介绍 577
17.2 实现一个rss订阅系统582
17.2.1 主程序example.java 582
17.2.2 文件example_1.java 584
17.2.3 文件example_2.java 587
17.2.4 文件news.java 588
17.2.5 文件myadapter.java589
17.2.6 文件myhandler.java591
17.3 小结596
第18章 尘埃落定之足球游戏 597
18.1 蓬勃发展的手机游戏598
18.1.1 1.2亿手机游戏用户 598
18.1.2 淘金的时代599
18.1.3 现实还需努力 599
18.2 java游戏开发面面观.600
18.3 足球游戏介绍603
18.3.1 手机足球游戏 603
18.3.2 策划游戏 604
18.3.3 准备工作 604
18.4 项目架构605
18.4.1 总体架构 606
18.4.2 规划类606
18.5 具体编码608
18.5.1 activity类开发 608
18.5.2 欢迎界面 614
18.5.3 加载节目 622
18.5.4 运动控制 624
18.5.5 奖品模块 636
18.6 小结640
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android江湖
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入剖析Android开发
第一篇　Android开发起航
第1章　环境搭建　　2
1.1　搭建Android开发环境的需求　　2
1.2　Android开发环境配置　　3
1.2.1　JDK的下载、安装及配置　　3
1.2.2　下载并安装Eclipse　　6
1.2.3　Android SDK的安装和配置　　6
1.2.4　ADT的安装和配置　　9
1.2.5　创建并运行模拟器　　12
第2章　测试方法及工具　　16
2.1　向世界问好——HelloWorld项目　　16
2.1.1　两种创建HelloWorld项目的方法　　16
2.1.2　HelloWorld项目中的默认配置解读　　23
2.2　HelloWorld项目运行及调试信息　　26
2.2.1　运行HelloWorld应用程序　　26
2.2.2　HelloWorld运行过程的调试信息　　29
2.3　DDMS工具介绍　　30
2.3.1　DDMS工具及其打开方式　　30
2.3.2　使用DDMS工具调测HelloWorld项目　　31
2.3.3　详解DDMS工具界面　　36
2.3.4　DDMS工具菜单中的重要工具　　41
2.4　Android的主要工具介绍　　62
2.4.1　ADB工具　　63
2.4.2　android工具　　64
2.4.3　sdcard相关命令　　65
2.4.4　模拟器的操作　　65
2.4.5　LogCat工具　　67
2.4.6　数据库工具　　68
2.5　Android其他小工具简介　　68
2.5.1　截屏工具　　69
2.5.2　Monkey工具　　69
2.6　下载谷歌播放器源代码　　72
第二篇　Android组件及其配置
第3章　应用的五脏六腑——AndroidManifest.xml　　78
3.1　Android Manifest.xml文件　　78
3.2　一切从<manifest>节点开始　　82
3.2.1　xmlns:android属性——定义命名空间　　82
3.2.2　package属性——应用程序的身份证　　84
3.2.3　android:sharedUserId属性——共享数据　　85
3.2.4　android:versionCode属性——内部版本号　　86
3.2.5　android:versionName属性——显示给用户的版本号　　86
3.2.6　android:installLocation属性——安装位置　　87
3.2.7　HelloWorld示例——再向世界打个招呼　　89
3.2.8　动动手，验证知识　　90
3.3　应用程序权限的声明　　93
3.3.1　<uses-permission>——应用程序的权限申请　　93
3.3.2　<permission>节点——自定义应用程序的访问权限　　100
3.3.3　<uses-sdk>节点——SDK版本限定　　103
3.3.4　<instrumentation>节点——应用的监控器　　105
3.3.5　动动手，验证知识　　107
3.3.6　<instrumentation>节点的另一种使用方法　　114
3.4　应用程序的根节点——<application>　　117
3.4.1　<application>节点配置　　117
3.4.2　音乐播放器的<application>节点　　118
3.4.3　如何实现Application类　　119
3.4.4　Application提供的函数及其用法　　123
3.5　backupAgent的用法　　134
3.5.1　backupAgent简介　　134
3.5.2　如何使用backupAgent来实现备份　　134
3.5.3　从备份中实现恢复　　141
3.5.4　如何使用bmgr工具　　144
3.6　<application>的属性详解　　150
3.6.1　android:allowBackup　　151
3.6.2　allowTaskReparenting　　152
3.6.3　android:killAfterRestore　　152
3.6.4　android:restoreAnyVersion　　153
3.6.5　android:debuggable　　156
3.6.6　android:description　　158
3.6.7　android:enabled　　159
3.6.8　android:hasCode　　160
3.6.9　android:hardwareAccele-rated　　161
3.6.10　android: label / android:icon　　162
3.6.11　android:logo　　164
3.6.12　android:manageSpace-Activity　　165
3.6.13　android:permission　　165
3.6.14　android:persistent　　165
3.6.15　android:process　　166
3.6.16　android:taskAffinity　　167
3.6.17　android:theme　　168
3.6.18　android:uiOptions　　171
3.6.19　android:vmSafeMode　　174
3.6.20　android:largeHeap　　174
第4章　让程序活动起来——Activity　　176
4.1　什么是Activity　　176
4.1.1　简介　　176
4.1.2　解读音乐播放器中的Activity　　177
4.2　定义Activity　　179
4.2.1　定义Activity的回调方法　　179
4.2.2　在AndroidManifest.xml中声明Activity　　181
4.3　管理Activity的生命周期　　182
4.3.1　Activity的3种状态　　182
4.3.2　实现Activity的生命周期回调　　182
4.3.3　回调方法在音乐播放器中的应用　　186
4.4　保存和协调Activity　　189
4.4.1　保存Activity状态　　189
4.4.2　协调Activity　　191
4.5　解读关于生命周期的一个实例　　192
4.6　<activity>节点的属性　　195
4.6.1　android:allowTaskRepa-renting　　195
4.6.2　android:alwaysRetain-TaskState　　195
4.6.3　android:clearTaskOn-Launch　　196
4.6.4　android:configChanges　　196
4.6.5　android:enabled　　197
4.6.6　android:excludeFrom-Recents　　197
4.6.7　android:exported　　197
4.6.8　android:finishOnTask-Launch　　197
4.6.9　android:hardwareAccele-rated　　198
4.6.10　android:icon　　198
4.6.11　android:label　　198
4.6.12　android:launchMode　　198
4.6.13　android:multiprocess　　199
4.6.14　android:name　　199
4.6.15　android:noHistory　　199
4.6.16　android:permission　　200
4.6.17　android:process　　200
4.6.18　android:screenOrienta-tion　　200
4.6.19　android:stateNotNeeded　　200
4.6.20　android:taskAffinity　　201
4.6.21　android:theme　　201
4.6.22　android:windowSoft-InputMode　　201
第5章　我会默默地为你服务——service　　202
5.1　服务　　202
5.1.1　何为服务　　202
5.1.2　服务可采用的方法　　202
5.1.3　<service>节点的属性　　203
5.2　创建并使用服务　　204
5.2.1　创建Service子类的重要回调方法　　204
5.2.2　在manifest文件中声明服务　　205
5.3　创建一个启动的服务　　206
5.3.1　继承IntentService类　　206
5.3.2　继承Service类　　207
5.3.3　启动服务　　208
5.3.4　停止服务　　208
5.3.5　TuringService实例　　209
5.4　创建一个被绑定的服务　　212
5.4.1　基本介绍　　212
5.4.2　TuringBoundService实例　　213
第6章　我可以更漂亮——布局　　217
6.1　最简单的布局类——FrameLayout　　217
6.1.1　FrameLayout简介　　217
6.1.2　FrameLayout特有的属性　　218
6.1.3　FrameLayout内子视图的特色布局参数　　220
6.2　线性布局——LinearLayout　　222
6.2.1　LinearLayout简介　　222
6.2.2　LinearLayout的特有属性　　225
6.2.3　LinearLayout特有的布局参数　　231
6.3　相对布局——RelativeLayout　　231
6.3.1　RelativeLayout简介　　231
6.3.2　RelativeLayout的特色属性及其参数　　233
第三篇　核心服务解析篇
第7章　Android系统的启动　　244
7.1　初始化流程　　244
7.1.1　应用的初始化流程　　244
7.1.2　init.rc的用法　　246
7.1.3　用init解析整个init.rc文件　　251
7.2　创建system_service进程　　254
7.2.1　创建流程　　254
7.2.2　system_service简介　　256
第8章　备份管理服务　　258
8.1　备份管理服务的启动方式和流程　　258
8.1.1　备份管理服务的启动　　258
8.1.2　详解备份管理服务的流程　　258
8.2　使用备份管理服务　　263
8.2.1　bmgr工具简介　　263
8.2.2　使用bmgr工具实现备份与恢复　　264
8.2.3　用编程的方式实现备份与恢复　　272
8.3　应用程序在被重新安装过程中的备份和还原　　274
第9章　Activity管理服务　　276
9.1　ActivityManagerService简介　　276
9.2　ActivityManagerService的使用　　276
9.2.1　孵化进程　　276
9.2.2　ActivityManagerService启动的3个阶段　　277
9.2.3　ActivityManagerService的工作原理　　289
9.2.4　ActivityManagerService依赖的两个类　　294
9.3　Activity的启动流程　　295
9.3.1　启动Activity的方式　　295
9.3.2　Activity启动的4个阶段　　297
9.4　结束Activity　　306
9.4.1　结束Activity的3种主要方法　　306
9.4.2　结束Activity的4个阶段　　308
9.5　广播接收器　　315
9.5.1　注册广播接收器　　315
9.5.2　ActivityManagerService的行为　　316
9.6　服务　　318
9.6.1　服务的数据结构　　318
9.6.2　启动服务　　320
9.6.3　停止服务　　327
9.6.4　以绑定的方式启动/停止服务　　331
9.7　发布ContentProvider　　339
9.7.1　启动ContentProvider发布工作时的操作　　339
9.7.2　解读发布流程中Activity-ManagerService的行为　　342
9.8　ActivityManagerService如何应付异常　　345
第10章　包管理服务　　349
10.1　PackageManagerService概述　　349
10.2　PackageManagerService的组成和应用　　349
10.2.1　PackageManagerService的重要组成部分　　350
10.2.2　解读PackageManager-Service如何关注目录　　351
10.2.3　PackageManagerService定义的PackageParser类　　354
10.3　启动PackageManagerService　　355
10.3.1　PackageManagerService的启动流程　　355
10.3.2　PackageManagerService构造函数的流程　　356
10.3.3　scanDirLI()方法　　361
10.4　解析AndroidManifest.xml文件　　366
10.4.1　解析流程　　366
10.4.2　解析音乐播放器的AndroidManifest.xml文件　　368
10.5　安装应用程序　　377
10.5.1　用ADB的install命令安装应用程序　　377
10.5.2　解析installPackageWith-Verification()的行为　　379
10.6　卸载应用程序　　383
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入剖析Android开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>基于Material Design的Android用户界面设计
前言 XIII
致谢 XIV
序言 XV
第1 部分 Android 用户界面基础
第1章 Android界面和Material Design 1
Android设计简史 2
Material Design 4
基本概念 4
交互和动画 7
字体 8
测量和对齐 9
Android设计站点 10
核心原则 10
做一件事并把它做好 10
与其他应用友好相处 12
视觉、视觉、重要的视觉 13
简单但强大 14
平台一致性 15
适应用户 16
标准组件 17
系统栏 17
通知系统 18
应用栏 19
Tab 和侧边式抽屉导航 20
FAB 20
支持多种设备 21
避免让人痛苦的错误 22
菜单键 22
长按 22
通知图标 22
来自其他平台的样式 23
小结 23
第2章 理解view——用户界面的构架模块 25
什么是view 26
View ID 28
理解view 尺寸 29
显示文本 33
显示图片 38
背景 38
聚集用户输入的view 40
其他值得关注的view 44
事件的监听 47
其他监听器 48
小结 48
第3章 用ViewGroup与Fragment创建全布局 49
理解ViewGroup以及常见的实现方式 50
其他值得关注的ViewGroup 61
用Fragment封装view逻辑 63
Fragment 的生命周期 64
给予 Fragment 数据 65
与Activity 进行通讯 66
执行Fragment 的事务 69
争议 70
支持库 70
CardView 库 72
Design 库 72
GridLayout 库 73
Leanback 库 73
MediaRouter 库 73
Palette 库 73
RecyclerView 库 73
注解支持库 74
小结 74
第4章 添加应用的图形和资源 75
Android中资源的介绍 76
资源限定符 76
理解密度 81
可支持的图片文件 82
栅格图片 83
矢量图片 84
9-patch图片 84
XML可绘制对象 86
Layer List 87
State List 88
Level List 91
其他资源 101
Strings 102
数组（Array） 103
颜色（Color） 104
尺寸（Dimension） 105
动画（Animation） 105
ID 105
菜单 106
小结 107
第2 部分 完整的设计和开发过程
第5章 开始一个新的应用 109
设计方法 110
常用方法 110
以用户为中心的设计 110
确定目标 113
用户目标 114
用户模型 115
产品目标 116
设备和配置支持 116
概要流程图 117
线框图 120
从导航开始 123
接着进入内容模块 126
详情页面的线框图 128
支持多种设备 130
命名惯例 130
原始资源 132
小结 133
第6章 原型和开发应用基础 135
组织为Activity和Fragment 136
创建第1个原型 137
Tab 138
抽屉导航（Navigation Drawer） 140
Tool 展示 143
Tab Fragment 149
Tool Details 163
评估第1个原型 168
与用户一起工作 169
完全开放 169
明确目标 170
动态目标 170
真实的用户反馈 170
下一步 173
小结 174
第7章 设计视觉效果 175
线框和图形设计 176
工具 176
风格 177
拟物设计 177
极简设计 178
扁平化设计 178
Material Design 179
光源 179
颜色 180
相关科学 180
选择颜色 183
木工应用 187
文本注意事项 187
文本对比 188
文本尺寸、样式和大写 189
文本间距 189
文本阴影 190
自定义字体 190
易懂的用语 192
其他注意事项 192
变化的文本长度 192
图片的有效性和尺寸 193
透明度和3× 规则 193
标准图标 194
导航和过渡 194
错误情况 194
设计步骤 195
小结 199
第8章 实现设计方案 201
和设计师一起工作 202
切出图形资产 203
简单切图 203
9-patch 图片 205
生成可替代尺寸 208
主题和样式 209
把comp拆分为多个view 210
开发木工应用 211
主屏幕 212
工具列表 222
工具详情 236
多种设备上的基本测试 240
小结 241
第9章 用动画出彩 243
动画的目的 244
view动画（View Animation ） 244
属性动画（Property Animation） 245
控制Property Animation 247
监听器 247
类型Evaluator 248
Time Interpolator 251
关键帧 253
ViewPropertyAnimator 254
错误提示动画 254
动画图标 259
制作矢量图标动画 259
动画化栅格图标 264
简单的转场 265
屏幕转场 266
Activity 转场 270
圆形显现过渡 274
小结 277
第3 部分 Android 用户界面的高级应用篇
第10章 使用高级技巧 279
识别Jank 280
用Systrace理解Jank 281
优化图片 288
目录XI
压缩图片 288
正确使用图片的大小 290
使用图片缓存 294
额外的性能提高 300
控制垃圾回收 300
View Holder 模式 301
消除过度绘制 304
Hierarchy Viewer 307
找到丢失的view 310
消除不必要的view 310
导出为PSD 文件 310
自定义字体 311
复杂的TextView 314
存在的Span 314
复杂文本的Span 使用 316
RecyclerView 318
布局管理器 319
适配器 319
条目Animator 320
条目装饰 320
小结 320
第11章 处理Canvas和高级绘制 323
创作自定义Drawable 324
基本概念 324
其他的重要方法 325
Paint 325
Canvas 326
处理文本 326
一个简单的文本Drawable 326
更好的Text Drawable 329
处理图片 331
色彩过滤器 334
Lighting Color Filter 334
色彩矩阵 335
PorterDuff 图片合成 336
着色器 347
圆形图片 347
渐变淡化 350
小结 353
第12章 开发自定义view 355
基本概念 356
测量 356
布局 357
绘制 358
保存和恢复状态 358
创建一个自定义View 359
测量 361
处理布局Layout 362
建立Bitmap 363
保存和恢复状态 365
小结 373
第13章 处理输入和滚动 375
触碰输入 376
其他形式的输入 377
创建一个自定义View 378
创建初始自定义View 文件 378
测量 384
绘制 388
准备触碰输入 393
处理触碰输入 397
其他注意事项 414
小结 415
附录A Google Play资源文件 417
附录B 常用任务参考 433
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>基于Material Design的Android用户界面设计
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android系统移植和驱动开发
第1章  Android系统的编译和移植实例	1
1.1  移植背景与目标	1
1.2  移植涉及的主要过程	1
1.3  下载Android Linux 内核	1
1.4  安装交叉工具链	3
1.5  移植Android Linux 内核支持EZ6410平台	4
1.5.1  CS8900a驱动移植	4
1.5.2  键盘驱动编写	4
1.5.3  液晶驱动	5
1.5.4  触摸屏驱动	6
1.5.5  USB驱动修改	7
1.5.6  安装Android SDK	8
1.5.7  提取Android 根文件系统	9
1.5.8  系统环境设置	11
1.6  小结	12
1.7  思考题	12
第2章  Android系统与嵌入式开发	13
2.1  Android与传统嵌入式Linux系统	13
2.2  嵌入式系统概述	13
2.2.1  嵌入式系统简介	13
2.2.2  嵌入式系统的特点	14
2.2.3  嵌入式系统的发展	15
2.3  嵌入式系统的组成	17
2.3.1  嵌入式系统的硬件组成	18
2.3.2  嵌入式系统的软件组成	19
2.4  嵌入式系统开发概述	19
2.5  Android系统概述	26
2.6  Android系统架构	28
2.6.1  Linux内核（Linux Kernel）	28
2.6.2  Android核心库（Libraries）	29
2.6.3  Android运行时环境（Android Runtime）	29
2.6.4  Android应用程序框架（Application Framework）	29
2.6.5  Android应用程序和小部件	30
2.7  小结	30
2.8  思考题	30
第3章  Android移植平台工具介绍	31
3.1  开发板外观	31
3.2  开发板硬件资源	32
3.3  功能展示	33
3.4  目标板与主机之间的连接	35
3.5  文件传输	37
3.6  网络文件系统	38
3.7  设备安装	39
3.8  工具软件的设置	39
3.9  U-Boot镜像的下载与烧写	42
3.10  内核镜像的下载与烧写	48
3.11  烧写文件系统镜像	50
3.12  U-Boot启动参数设置	51
3.13  小结	52
3.14  思考题	52
第4章  Android移植环境搭建	53
4.1  构建Android移植交叉开发环境	53
4.1.1  嵌入式交叉编译环境搭建	53
4.1.2  主机交叉开发环境配置	55
4.2  Bootloader	59
4.2.1  Bootloader的种类	60
4.2.2  U-Boot编译与使用	61
4.2.3  U-Boot移植	73
4.3  Android内核与移植	74
4.3.1  Android移植简介	76
4.3.2  FS_S5PC100开发平台移植环境搭建	76
4.4  U-Boot、内核、文件系统编译	78
4.4.1  U-Boot的编译	78
4.4.2  内核镜像的编译	78
4.4.3  Android文件系统的编译	79
4.5  小结	81
4.6  思考题	81
第5章  Android移植与驱动	82
5.1  Android移植和驱动的关系	82
5.2  设备驱动程序	82
5.2.1  设备驱动概念	82
5.2.2  内核驱动程序	83
5.2.3  用户空间驱动程序	83
5.2.4  Linux设备驱动概述	83
5.3  Linux核心与Android驱动	85
5.3.1  Android专用驱动	86
5.3.2  Android使用的设备驱动	87
5.4  Android驱动的HelloWorld	92
5.5  小结	95
5.6  思考题	95
第6章  Android驱动编程	96
6.1  Android内核内核模块编程	96
6.2  字符设备驱动编程	105
6.2.1  字符设备驱动编写流程	105
6.2.2  重要数据结构	106
6.2.3  设备驱动程序主要组成	107
6.3  LCD控制器	114
6.3.1  LCD控制器介绍	114
6.3.2  S5PC100 LCD控制器介绍	114
6.3.3  S5PC100 LCD控制器操作	116
6.3.4  LCD控制器寄存器	117
6.4  驱动程序	123
6.4.1  驱动程序初始化和退出	124
6.4.2  驱动程序Open and release 函数	126
6.4.3  驱动程序ioctl函数	127
6.4.4  驱动测试程序main.c	128
6.5  小结	128
6.6  思考题	129
第7章  Android HAL实例解析	130
7.1  概述	130
7.2  HAL介绍	130
7.3  HAL内容	131
7.3.1  知识准备：HAL 主要的存储目录	131
7.3.2  知识准备：两种 HAL 架构比较	131
7.4  mokoid 工程代码下载与结构分析	132
7.4.1  知识准备：mokid项目概述	132
7.4.2  知识准备：结构分析	132
7.4.3  知识准备：第一种方法 直接调用service方法的实现过程	135
7.4.4  知识准备：第二种方法—经过Manager调用service	140
7.4.5  FS-S5PC100实验平台LED灯实验	143
7.4.6  FS-S5PC100实验平台Sensor实验	144
7.5  实验中需要注意的问题	145
7.6  小结	146
7.7  思考题	147
第8章  Android 4.0系统的下载与编译	148
8.1  准备Android下载与编译环境	148
8.1.1  硬件环境	148
8.1.2  软件环境	148
8.2  下载Android 4.0及Goldfish源码	149
8.2.1  下载并初始化repo工具	149
8.2.2  下载Android源码	150
8.2.3  其他源码下载源	150
8.2.4  下载模拟器Goldfish内核源码	150
8.3  编译Android及Goldfish内核源码	152
8.3.1  编译Android源码	152
8.3.2  编译goldfish内核源码	154
8.4  Android编译过程分析	154
8.4.1  source build/envsetup.sh	155
8.4.2  执行lunch full-eng	156
8.4.3  执行make命令	156
8.5  创建目标产品编译项	157
8.6  编译并运行Android 4.0系统模拟器	158
8.6.1  编译Android模拟器	158
8.6.2  Android启动流程	161
8.7  定制手机模拟器ROM	162
8.7.1  定制手机开机界面	162
8.7.2  定制Android启动字样	165
8.7.3  定制Android动画	166
8.8  为Android启动加速	168
8.8.1  定制本地服务	168
8.8.2  定制Android系统服务	169
8.9  Android系统企业级定制	170
8.10  小结	172
8.11  思考题	172
第9章  Android系统蜂鸣器与按键	173
9.1  蜂鸣器驱动的实现	173
9.1.1  PWM定时器概述	173
9.1.2  PWM定时器特点	174
9.1.3  PWM定时器的寄存器	175
9.1.4  PWM定时器操作示例	180
9.1.5  蜂鸣器的种类和工作原理	181
9.1.6  开发板上的蜂鸣器原理图分析	181
9.2  蜂鸣器HAL层的实现	182
9.3  Android按键检测程序流程	184
9.4  驱动层实现	185
9.4.1  HAL层实现	186
9.4.2  HAL使用	187
9.4.3  HAL stub实现	188
9.4.4  JNI层实现	189
9.4.5  Framework层实现	189
9.4.6  应用层实现	190
9.5  小结	190
9.6  思考题	190
第10章  Android与传感器设计与实现	191
10.1  Android Sensor实现原理概述	191
10.2  JNI原理	191
10.3  Android HAL	192
10.4  Sensor传感器系统	193
10.4.1  Sensor Stub分析	194
10.4.2  Sensor Stub 实现细节	202
10.5  Logcat调试	202
10.6  一些开发环境的问题	203
10.7  小结	203
10.8  思考题	203
第11章  Android与摄像头	204
11.1  OV9650介绍	204
11.1.1  芯片功能描述	204
11.1.2  OV9650寄存器详解	205
11.2  SCCB总线	206
11.2.1  SCCB协议介绍	206
11.2.2  SCCB的总线编程	207
11.3  CAMIF接口详解	209
11.3.1  基于S5PC100的CAMIF接口介绍	209
11.3.2  S5PC100 CAMIF寄存器详解	210
11.4  摄像头驱动	213
11.4.1  摄像头工作原理	213
11.4.2  驱动开发思路	214
11.5  Android Camera架构分析	228
11.5.1  CameraService介绍	229
11.5.2  Camera-HAL介绍	229
11.5.3  CameraService与Camera-HAL的联系	230
11.6  小结	232
11.7  思考题	232
第12章  Android下综合项目介绍——智能家居	233
12.1  项目概述	233
12.1.1  项目背景	233
12.1.2  术语定义	234
12.1.3  系统描述	234
12.1.4  功能描述	235
12.1.5  项目功能图	235
12.1.6  所涉及的系统与工具	235
12.2  前端数据中心（A8）总体设计	236
12.2.1  程序设计流程图	236
12.2.2  线程定义	236
12.2.3  所用类定义	236
12.3  前端A8模块设计	237
12.3.1  A8-Android Application层设计	237
12.3.2  A8-数据传递架构模块	245
12.3.3  传输协议模块设计	257
12.4  终端M0模块设计	259
12.4.1  终端设备方案描述	259
12.4.2  终端设备工作流程	259
12.4.3  功能模块描述	260
12.5  系统测试	267
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android系统移植和驱动开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android游戏编程入门经典
第1部分　简介
第1章　android 4简介
1.1 android 4简介
1.2 android sdk简介
1.3 android ndk简介
1.4 android开发系统要求
1.5 android平台的历史
1.6 android硬件规格
1.7 小结
1.8 问与答
1.9 测验
1.9.1 问题
1.9.2 答案
1.9.3 作业

第2章　安装开发工具
2.1 安装jdk
2.2 下载netbeans软件包
2.3 安装软件包
2.4 安装android sdk
2.5 下载sdk
2.6 安装sdk
2.7 运行android sdk manager
2.8 安装eclipse的adt插件
2.9 小结
2.10 问与答
2.11 测验
2.11.1 问题
2.11.2 答案
2.11.3 作业

第3章　使用android sdk配置netbeans和eclipse
3.1 创建android模拟器设备
3.2 创建新模拟器设备
3.3 运行模拟器
3.4 将android sdk添加到netbeans中
3.5 为eclipse添加android sdk支持
3.5.1 在eclipse中创建新android项目
3.5.2 选择android构建目标
3.6 小结
3.7 问与答
3.8 测验
3.8.1 问题
3.8.2 答案
3.8.3 作业

第4章　创建第一个android程序
4.1 创建新的android项目
4.1.1 配置nbandroid插件
4.1.2 完成新项目设置
4.2 构建新项目
4.2.1 打开输出窗口
4.2.2 在模拟器中运行程序
4.3 编辑hello，android!程序
4.4 对比模拟器和android设备
4.4.1 avd限制
4.4.2 安装android debug bridge device driver
4.4.3 在android设备上运行代码
4.5 小结
4.6 问与答
4.7 测验
4.7.1 问题
4.7.2 答案
4.7.3 作业

第2部分　android硬件

第5章　开始使用图形
5.1 了解activity类
5.1.1 程序生命周期
5.1.2 可视生命周期
5.1.3 前台生命周期
5.2 测试activity状态
5.2.1 创建新项目
5.2.2 源代码
5.3 世界上最简单的android图形演示
5.3.1 取消选中第一个图形演示
5.3.2 画布和视图简介
5.4 小结
5.5 问与答
5.6 测验
5.6.1 问题
5.6.2 答案
5.6.3 作业

第6章　绘制基本形状和文本
6.1 绘制基本矢量形状
6.1.1 绘制圆形
6.1.2 绘制线条
6.1.3 绘制方框
6.1.4 绘制圆角矩形
6.1.5 绘制三角形
6.1.6 更改样式：描边和填充
6.1.7 基本图形演示
6.2 绘制文本
6.3 编写javadoc的代码
6.4 android屏幕密度和分辨率
6.5 小结
6.6 问与答
6.7 测验
6.7.1 问题
6.7.2 答案
6.7.3 作业

第7章　加载和绘制图像
7.1 双缓冲绘图
7.1.1 创建内存位图
7.1.2 创建绘图画布
7.1.3 使用后台缓冲
7.2 加载位图文件
7.2.1 添加位图资产
7.2.2 使用assetmanager
7.2.3 使用inputstream
7.2.4 使用bitmapfactory
7.2.5 关闭输入流
7.2.6 完整的位图加载代码
7.3 绘制位图
7.3.1 为透明度创建aplha通道
7.3.2 完成的示例
7.4 小结
7.5 问与答
7.6 测验
7.6.1 问题
7.6.2 答案
7.6.3 作业

第8章　使用循环赋予游戏活力
8.1　创建线程游戏循环
8.1.1　查看非线程代码
8.1.2　编写线程代码
8.2　不使用ondraw()进行绘制
8.3　runnable animation demo
8.3.1　为行走的角色制作动画
8.3.2　项目源代码
8.4　小结
8.5　问与答
8.6　测验
8.6.1　问题
8.6.2　答案
8.6.3　作业

第9章　多点触摸用户输入
9.1　单点触摸输入
9.1.1　监听触摸事件
9.1.2　单点触摸输入演示
9.2　多点触摸输入
9.2.1　简单示例
9.2.2　封装多点触摸输入
9.2.3　多点触摸演示
9.3　小结
9.4　问与答
9.5　测验
9.5.1　问题
9.5.2　答案
9.5.3　作业

第10章　使用加速度计
10.1　android传感器
10.1.1　访问传感器
10.1.2　禁用屏幕方向改变
10.1.3　加速度计初始化
10.1.4　加速度计运动
10.1.5　获取可用传感器列表
10.1.6　完整示例
10.2　小结
10.3　问与答
10.4　测验
10.4.1　问题
10.4.2　答案
10.4.3　作业

第11章　使用线性加速度传感器和近距离传感器
11.1　访问线性加速度传感器
11.1.1　初始化线性加速度传感器
11.1.2　关于暂停和恢复
11.1.3　读取传感器
11.1.4　线性加速度演示
11.2　访问近距离传感器
11.3　小结
11.4　问与答
11.5　测验
11.5.1　问题
11.5.2　答案
11.5.3　作业

第12章　使用重力传感器和压力传感器
12.1　使用重力传感器
12.1.1　初始化重力传感器
12.1.2　读取重力传感器
12.1.3　测试重力传感器
12.2　使用压力传感器
12.2.1　初始化压力传感器
12.2.2　读取压力传感器
12.3　小结
12.4　问与答
12.5　测验
12.5.1　问题
12.5.2　答案
12.5.3　作业

第13章　创建自己的“手机传感器”
13.1　封装android传感器
13.1.1　basesensor
13.1.2　加速度计
13.1.3　线性加速度
13.1.4　近距离传感器
13.1.5　重力传感器
13.1.6　压力传感器
13.1.7　陀螺仪传感器
13.1.8　指南针
13.1.9　光检测器
13.2　创建手机传感器项目
13.2.1　包和导入
13.2.2　主要类
13.2.3　drawview
13.2.4　暂停和恢复
13.2.5　线程进程
13.2.6　创建面板
13.2.7　更新传感器
13.2.8　绘制传感器面板
13.2.9　辅助方法
13.2.10　sensorpanel类
13.2.11　输出文本行
13.2.12　sensors类
13.2.13　捕捉传感器事件
13.2.14　未使用的准确性事件
13.2.15　暂停和恢复应用程序
13.2.16　basesensor类
13.2.17　各种传感器类
13.3　小结
13.4　问与答
13.5　测验
13.5.1　问题
13.5.2　答案
13.5.3　作业

第14章　使用音频系统
14.1 使用mediaplayer播放音频
14.1.1 受支持的音频格式
14.1.2 初始化mediaplayer
14.1.3 将音频文件添加到项目中
14.1.4 播放音频剪辑
14.2 使用soundpool播放音频
14.2.1 初始化soundpool
14.2.2 加载音频资源
14.2.3 播放音频资源
14.2.4 audio demo程序
14.3 小结
14.4 问与答
14.5 测验
14.5.1 问题
14.5.2 答案
14.5.3 作业

第3部分　android gameplay

第15章　构建android游戏引擎
15.1 设计android游戏引擎
15.1.1 设计目标
15.1.2 引擎组件
15.2 创建android库项目
15.3 编写核心引擎类
15.3.1 engine类
15.3.2 timer类
15.3.3 textprinter类
15.3.4 texture类
15.4 引擎测试演示项目
15.4.1 引擎演示源代码
15.4.2 记录引擎演示的日志
15.5 小结
15.6 问与答
15.7 测验
15.7.1 问题
15.7.2 答案
15.7.3 作业

第16章　创建sprite/actor类
16.1 静态子画面为道具
16.2 动态子画面为角色
16.3 封装基本子画面功能
16.3.1 拟定计划和设计
16.3.2 新sprite类的简介
16.3.3 回顾texture
16.4 测试sprite类
16.4.1 子画面演示源代码
16.4.2 测试sprite类
16.5 小结
16.6 问与答
16.7 测验
16.7.1 问题
16.7.2 答案
16.7.3 作业

第17章　使用子画面表单/地图集制作帧动画
17.1 使用一张图像制作动画
17.1.1 排列动画帧
17.1.2 从连续图像绘制帧
17.2 使用子画面表单(纹理地图集)制作动画
17.3 动画演示
17.4 小结
17.5 问与答
17.6 测验
17.6.1 问题
17.6.2 答案
17.6.3 作业

第18章　高级多动画技术
18.1 创建动画系统
18.1.1 编写动画基类
18.1.2 sprite类改进
18.1.3 alpha动画
18.1.4 帧动画
18.1.5 旋转动画
18.1.6 跳动动画
18.1.7 圆周运动动画
18.2 动画系统演示
18.3 小结
18.4 问与答
18.5 测验
18.5.1 问题
18.5.2 答案
18.5.3 作业

第19章　使用矩阵变换处理子画面
19.1 矩阵平移
19.1.1 坐标系
19.1.2 矩阵平移选项
19.2 矩阵旋转
19.3 矩阵缩放
19.4 矩阵变换演示
19.4.1 结合使用三个矩阵
19.4.2 将帧渲染到划痕位图
19.4.3 获得屏幕分辨率(precanvas)
19.4.4　“扭曲”行为
19.4.5 更新的sprite类
19.4.6 子画面变换演示
19.5 小结
19.6 问与答
19.7 测验
19.7.1 问题
19.7.2 答案
19.7.3 作业

第20章　实体分组
20.1 实体分组
20.1.1 引擎改进
20.1.2 跳动动画更新
20.1.3 扭曲行为更新
20.1.4 围栏行为
20.1.5 实体分组演示
20.2 小结
20.3 问与答
20.4 测验
20.4.1 问题
20.4.2 答案
20.4.3 作业

第21章　碰撞检测
21.1 碰撞检测技术
21.1.1 边界矩形(框碰撞)
21.1.2 边界圆形(径向碰撞)
21.2 演示碰撞
21.2.1 引擎改进
21.2.2 子画面改进
21.2.3 碰撞演示源代码
21.3 小结
21.4 问与答
21.5 测验
21.5.1 问题
21.5.2 答案
21.5.3 作业

第22章　使用线性速度实现实际运动
22.1 从一个方向计算速度
22.2 在移动方向上“定位”子画面
22.3 改进引擎
22.3.1 sprite类的变化
22.3.2 改进动画类
22.3.3 对速度行为进行分类
22.3.4 更新圆周运动类
22.3.5 更新围栏行为
22.3.6 更新扭曲行为
22.3.7 引擎改进
22.4 小结
22.5 问与答
22.6 测验
22.6.1 问题
22.6.2 答案
22.6.3 作业

第23章　滚动背景
23.1 背景滚动概述
23.1.1 翻转滚动矩形
23.1.2 创建滚动纹理
23.2 射击游戏
23.3 小结
23.4 问与答
23.5 测验
23.5.1 问题
23.5.2 答案
23.5.3 作业

第24章　球类游戏
24.1 创建球类游戏
24.1.1 自动移动球
24.1.2 自动限制球拍
24.1.3 球类游戏源代码
24.2 小结
24.3 问与答
24.4 测验
24.4.1 问题
24.4.2 答案
24.4.3 作业
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android游戏编程入门经典
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入理解Android
推荐序
前言
第1章　本书必读1
1.1　概述1
1.2　准备环境和工具2
1.2.1　准备源代码2
1.2.2　准备Source Insight2
1.2.3　准备模拟器和自制系统镜像5
1.2.4　小结8
1.3　本书的内容9
1.4　本书资源下载说明12
第2章　深入理解Class文件格式13
2.1　Class文件格式总览13
2.2　常量池及相关内容14
2.2.1　常量项的类型和关系14
2.2.2　信息描述规则18
2.2.3　常量池实例剖析19
2.3　field_info和method_info19
2.4　access_flags介绍21
2.5　属性介绍22
2.5.1　属性概貌22
2.5.2　Code属性23
2.5.3　LineNumberTable属性25
2.5.4　LocalVariableTable属性26
2.6　Java指令码介绍27
2.6.1　指令码和助记符27
2.6.2　如何阅读规范28
2.7　学习路线推荐30
2.8　参考资料30
第3章　深入理解Dex文件格式31
3.1　Dex文件格式总览31
3.1.1　Dex和Class文件格式的区别31
3.1.2　Dex文件格式的概貌35
3.2　认识Dex文件36
3.2.1　header_item36
3.2.2　string_id_item等37
3.2.3　class_def38
3.2.4　code_item40
3.3　Dex指令码介绍41
3.3.1　insns的组织形式41
3.3.2　指令码描述规则42
3.4　学习路线推荐44
3.5　参考资料45
第4章　深入理解ELF文件格式46
4.1　概述46
4.2　ELF文件格式介绍46
4.2.1　ELF文件头结构介绍47
4.2.2　Linking View下的ELF52
4.2.3　Execution View下的ELF61
4.2.4　实例分析：调用动态库中的函数65
4.2.5　ELF总结72
4.3　学习路线推荐73
4.4　参考资料73
第5章　认识C++1174
5.1　数据类型76
5.1.1　基本内置数据类型介绍76
5.1.2　指针、引用和void类型77
5.1.3　字符和字符串81
5.1.4　数组82
5.2　C++源码构成及编译83
5.2.1　头文件示例83
5.2.2　源文件示例85
5.2.3　编译86
5.3　Class介绍88
5.3.1　构造、赋值和析构函数89
5.3.2　类的派生和继承97
5.3.3　友元和类的前向声明103
5.3.4　explicit构造函数105
5.3.5　C++中的struct106
5.4　操作符重载106
5.4.1　操作符重载的实现方式107
5.4.2　输出和输入操作符重载108
5.4.3　->和*操作符重载110
5.4.4　new和delete操作符重载111
5.4.5　函数调用运算符重载117
5.5　函数模板与类模板118
5.5.1　函数模板119
5.5.2　类模板122
5.6　lambda表达式125
5.7　STL介绍127
5.7.1　string类128
5.7.2　容器类129
5.7.3　算法和函数对象介绍134
5.7.4　智能指针类138
5.7.5　探讨STL的学习140
5.8　其他常用知识141
5.8.1　initializer_list141
5.8.2　带作用域的enum141
5.8.3　constexpr142
5.8.4　static_assert143
5.9　参考资料143
第6章　编译dex字节码为机器码145
6.1　编译器全貌介绍147
6.2　编译器前端介绍150
6.2.1　词法分析和lex151
6.2.2　语法分析和yacc160
6.2.3　语义分析和IR生成介绍171
6.3　优化器介绍175
6.3.1　构造CFG176
6.3.2　分析和处理CFG181
6.3.3　数据流分析与SSA191
6.3.4　IR优化204
6.4　ART中的IR—HInstruction222
6.4.1　ART中的IR222
6.4.2　IR之间的关系225
6.4.3　ART IR对象的初始化231
6.5　寄存器分配233
6.5.1　LSRA介绍235
6.5.2　LSRA相关代码介绍247
6.6　机器码生成相关代码介绍271
6.6.1　GenerateFrameEntry272
6.6.2　VisitAdd和VisitInstance-FieldGet273
6.6.3　GenerateSlowPaths275
6.7　总结277
6.8　参考资料280
第7章　虚拟机的创建283
7.1　概述284
7.1.1　JniInvocation Init函数介绍286
7.1.2　AndroidRuntime startVm函数介绍287
7.2　Runtime Create介绍288
7.2.1　Create函数介绍288
7.2.2　Init函数介绍290
7.3　MemMap与OatFileManager293
7.3.1　MemMap介绍293
7.3.2　OatFileManager介绍298
7.4　FaultManager介绍302
7.4.1　信号处理和SignalAction介绍302
7.4.2　FaultManager介绍307
7.5　Thread介绍311
7.5.1　Startup函数介绍311
7.5.2　Attach函数介绍312
7.6　Heap学习之一325
7.6.1　初识Heap中的关键类326
7.6.2　Heap构造函数第一部分337
7.7　JavaVMExt和JNIEnvExt340
7.7.1　JavaVMExt341
7.7.2　JNIEnvExt343
7.7.3　总结344
7.8　ClassLinker345
7.8.1　关键类介绍345
7.8.2　ClassLinker构造函数352
7.8.3　InitFromBootImage353
7.8.4　ClassLinker总结360
7.9　总结和阅读指导362
第8章　虚拟机的启动363
8.1　Runtime Start364
8.2　初识JNI365
8.2.1　JNI中的数据类型365
8.2.2　ScopedObjectAccess等辅助类367
8.2.3　常用JNI函数介绍369
8.3　Jit LoadCompilerLibrary373
8.4　Runtime InitNativeMethods374
8.4.1　JniConstants Init374
8.4.2　RegisterRuntimeNative Methods375
8.4.3　WellKnownClasses Init和LastInit376
8.5　Thread相关376
8.5.1　Runtime InitThreadGroups377
8.5.2　Thread FinishSetup377
8.5.3　Runtime StartDaemonThreads380
8.6　Runtime CreateSystemClassLoader381
8.7　类的加载、链接和初始化383
8.7.1　关键类介绍383
8.7.2　SetupClass392
8.7.3　LoadClass相关函数393
8.7.4　LinkClass相关函数398
8.7.5　DefineClass414
8.7.6　Verify相关函数416
8.7.7　Initialize相关函数424
8.7.8　ClassLinker中其他常用函数426
8.7.9　ClassLoader介绍437
8.8　虚拟机创建和启动关键内容梳理445
第9章　深入理解dex2oat447
9.1　概述448
9.2　ParseArgs介绍452
9.2.1　CompilerOptions类介绍453
9.2.2　ProcessOptions函数介绍454
9.2.3　InsertCompileOptions函数介绍455
9.3　OpenFile介绍456
9.4　Setup介绍458
9.4.1　Setup代码分析之一458
9.4.2　Setup代码分析之二464
9.4.3　Setup代码分析之三474
9.4.4　Setup代码分析之四484
9.5　CompileImage484
9.5.1　Compile485
9.5.2　ArtCompileDEX496
9.5.3　OptimizingCompiler JniCompile499
9.5.4　OptimizingCompiler Compile527
9.6　OAT和ART文件格式介绍544
9.6.1　OAT文件格式544
9.6.2　ART文件格式550
9.6.3　oatdump介绍554
9.7　总结561
第10章　解释执行和JIT562
10.1　基础知识564
10.1.1　LinkCode564
10.1.2　Runtime ArtMethod566
10.1.3　栈和参数传递572
10.2　解释执行580
10.2.1　art_quick_to_interpreter_bridge580
10.2.2　artQuickToInterpreter-Bridge582
10.2.3　EnterInterpreterFromEntry-Point584
10.2.4　调用栈的管理和遍历593
10.3　ART中的JIT599
10.3.1　Jit、JitCodeCache等600
10.3.2　JIT阈值控制与处理609
10.3.3　OSR的处理612
10.4　HDeoptimize的处理615
10.4.1　VisitDeoptimize相关616
10.4.2　QuickExceptionHandler相关618
10.4.3　解释执行中关于Deoptimize的处理621
10.5　Instrumentation介绍623
10.5.1　MethodEnterEvent和MethodExitEvent624
10.5.2　DexPcMovedEvent625
10.6　异常投递和处理625
10.6.1　抛异常626
10.6.2　异常处理629
10.7　总结635
第11章　ART中的JNI636
11.1　JavaVM和JNIEnv637
11.1.1　JavaVMExt相关介绍638
11.1.2　JNIEnvExt介绍642
11.2　Java native方法的调用644
11.2.1　art_jni_dlsym_lookup_stub644
11.2.2　art_quick_generic_jni_trampoline646
11.3　CallStaticVoidMethod651
11.4　JNI中引用型对象的管理653
11.4.1　关键类介绍653
11.4.2　JniMethodStart和JniMethod-End657
11.4.3　IndirectReferenceTable相关函数658
11.4.4　NewObject和jobject的含义660
11.4.5　JNI中引用对象相关662
11.4.6　PushLocalFrame和PopLocalFrame663
11.4.7　回收引用对象664
11.5　总结666
第12章　CheckPoints、线程同步及信号处理668
12.1　CheckPoints介绍669
12.1.1　设置Check Point标志位670
12.1.2　Check Points的设置672
12.1.3　执行检查点处的任务676
12.2　ThreadList和ThreadState681
12.2.1　线程ID683
12.2.2　RunCheckpoint和Dump684
12.2.3　SuspendAll和ResumeAll687
12.2.4　Thread状态切换690
12.3　线程同步相关知识691
12.3.1　关键类介绍692
12.3.2　synchronized的处理697
12.3.3　Object wait、notifyAll等705
12.4　volatile成员的读写707
12.4.1　基础知识707
12.4.2　解释执行模式下的处理711
12.4.3　机器码执行模式的处理712
12.5　信号处理714
12.5.1　zygote进程的处理714
12.5.2　非zygote进程的处理716
12.6　总结719
第13章　内存分配与释放720
13.1　Space等关键类介绍722
13.2　ZygoteSpace723
13.3　BumpPointerSpace和RegionSpace725
13.3.1　BumpPointerSpace726
13.3.2　RegionSpace733
13.4　DlMallocSpace和RosAlloc-Space740
13.4.1　DlMallocSpace741
13.4.2　RosAllocSpace745
13.4.3　rosalloc介绍748
13.5　LargeObjectMapSpace760
13.6　new-instance/array指令的处理762
13.6.1　设置内存分配器762
13.6.2　解释执行模式下的处理767
13.6.3　机器码执行模式下的处理770
13.6.4　Heap AllocObjectWith-Allocator773
13.7　细观Space779
13.7.1　Space类779
13.7.2　ContinuousSpace和Discon-tinuousSpace类781
13.7.3　MemMapSpace和Continuous MemMapAllocSpace类782
13.7.4　MallocSpace类783
13.8　Heap学习之二784
13.8.1　Heap构造函数784
13.8.2　关键类介绍792
13.8.3　ObjectVisitReferences806
13.9　总结812
第14章　ART中的GC813
14.1　GC基础知识814
14.1.1　Mark-Sweep Collection原理介绍815
14.1.2　Copying Collection原理介绍817
14.1.3　Mark-Compact Collection原理介绍818
14.1.4　其他概念819
14.2　Runtime VisitRoots819
14.2.1　关键数据结构821
14.2.2　Thread VisitRoots824
14.3　ART GC概览827
14.3.1　关键数据结构827
14.3.2　ART GC选项830
14.3.3　创建回收器和设置回收策略832
14.4　MarkSweep835
14.4.1　Heap相关成员变量取值情况835
14.4.2　MarkSweep概貌837
14.4.3　MarkingPhase840
14.4.4　PausePhase848
14.4.5　ReclaimPhase851
14.4.6　FinishPhase857
14.4.7　PartialMarkSweep857
14.4.8　StickyMarkSweep858
14.4.9　Concurrent MarkSweep864
14.4.10　Parallel GC868
14.4.11　MarkSweep小结869
14.5　ConcurrentCopying870
14.5.1　InitalizePhase871
14.5.2　FlipThreadRoots873
14.5.3　MarkingPhase881
14.5.4　ReclaimPhase883
14.5.5ConcurrentCopying小结885
14.6　MarkCompact885
14.6.1　MarkingPhase886
14.6.2　ReclaimPhase889
14.6.3　MarkCompact小结891
14.7　SemiSpace892
14.7.1　InitializePhase893
14.7.2　MarkingPhase894
14.7.3　SemiSpace小结898
14.8　Java Reference对象的处理899
14.8.1　基础知识899
14.8.2　MarkSweep中Reference对象的处理903
14.8.3ReferenceProcessor904
14.8.4　PhantomReference的处理912
14.8.5　finalize函数的调用913
14.8.6　Reference处理小结917
14.9　Heap学习之三917
14.9.1　Heap Trim917
14.9.2　CollectGarbageInternal919
14.9.3　PreZygoteFork924
14.9.4　内存碎片的解决926
14.10　总结927
14.11　参考资料928
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入理解Android
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>构建嵌入式Android系统
前言
第1章概述
历史
特点和特征
开发模型
生态系统
获取“Android”
法律框架
硬件与合规性要求
开发工具及其环境搭建
第2章内部结构入门
应用程序开发者的观点
整体架构
Linux内核
硬件支持
原生用户空间程序
Dalvik以及Android上的Java
系统服务
常见的AOSP包
第3章AOSP入门
开发主机设置
下载AOSP
AOSP的内部
构建的基础知识
运行Android
使用Android调试工具（ADB）
掌握模拟器的使用
第4章构建系统
与其他构建系统的比较
体系结构
构建脚本
基本的AOSP修改技巧
第5章硬件基础
典型的系统架构
片上系统中有什么？
内存布局与映射
评估板
第6章本地用户空间
文件系统
Android的命令行
初始化
第7章Android框架
Framework入门
工具和命令
支持守护进程
硬件抽象层
附录A传统的用户空间
附录B为新硬件增加支持
附录C默认包列表的定制
附录D默认的init.rc文件
附录E资源
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>构建嵌入式Android系统
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android开发秘籍 第2版
目录
第1章 Android概览 1
1.1 Android的演化 1
1.2 Android的两面性 2
1.3 运行Android的设备 2
1.3.1 HTC系列机型 4
1.3.2 摩托罗拉系列机型 5
1.3.3 三星系列机型 5
1.3.4 平板电脑 5
1.3.5 其他设备 6
1.4 Android设备间的硬件差异 7
1.4.1 屏幕 7
1.4.2 用户输入法 7
1.4.3 传感器 8
1.5 Android的特性 9
1.5.1 多线程应用微件 9
1.5.2 触摸、手势和多点触摸 9
1.5.3 硬键盘和软键盘 10
1.6 Android开发 10
1.6.1 良好的应用设计 10
1.6.2 保持向前兼容 10
1.6.3 确保健壮性 11
1.7 软件开发工具包(SDK) 11
1.7.1 安装和升级 11
1.7.2 软件特性和API级别 12
1.7.3 用模拟器或Android设备进行调试 13
1.7.4 使用Android调试桥 14
1.7.5 签名和发布 15
1.8 Google Play 15
1.8.1 最终用户许可协议 15
1.8.2 提升应用的曝光度 16
1.8.3 让应用脱颖而出 16
1.8.4 为应用收费 16
1.8.5 管理评价和更新 18
1.8.6 Google Play以外的其他选择 18
第2章 应用程序基础：Activity和Intent 19
2.1 Android应用程序概览 19
技巧1：创建项目和Activity 20
2.1.1 项目目录结构及自动生成的内容 22
2.1.2 Android包和manifest文件 24
技巧2：重命名应用程序的某些部分 25
技巧3：使用库项目 26
2.2 Activity的生命周期 27
技巧4：使用Activity生命周期函数 28
技巧5：强制采用单任务模式 30
技巧6：强制规定屏幕方向 30
技巧7：保存和恢复Activity信息 31
技巧8：使用Fragment 32
2.3 多个Activity 33
技巧9：使用按钮和文本视图 33
技巧10：通过事件启动另外一个Activity 34
技巧11：通过使用语音转文本功能启动一个Activity 37
技巧12：实现选择列表 39
技巧13：使用隐式Intent创建Activity 40
技巧14：在Activity间传递基本数据类型 41
第3章 线程、服务、接收器和警报 44
3.1 线程 44
技巧15：启动一个辅助线程 44
技巧16：创建实现Runnable接口的Activity 47
技巧17：设置线程的优先级 48
技巧18：取消线程 49
技巧19：在两个应用程序间共享线程 49
3.2 线程间的消息机制：Handler 50
技巧20：从主线程调度Runnable型的任务 50
技巧21：使用倒数计时器 52
技巧22：处理耗时的初始化工作 53
3.3 警报 54
技巧23：利用Toast在屏幕上显示一条简单的信息 54
技巧24：使用AlertDialog对话框 55
技巧25：在状态栏中显示通知 56
3.4 服务 60
技巧26：创建自足式服务 61
技巧27：添加唤醒锁 64
技巧28：使用前台服务 66
技巧29：使用IntentService 68
3.5 广播接收器 70
技巧30：当按下拍照按钮时启动一个服务 71
3.6 应用微件 72
技巧31：创建应用微件 73
第4章 高级线程技术 75
4.1 装载器 75
技巧32：使用CursorLoader 75
4.2 AsyncTask 77
技巧33：使用AsyncTask 77
4.3 Android进程间通信 79
技巧34：实现远程过程调用 79
技巧35：使用Messenger 83
技巧36：使用ResultReceiver 89
第5章 用户界面布局 91
5.1 资源目录和常规属性 91
技巧37：指定替代资源 93
5.2 View和ViewGroup 94
技巧38：用Eclipse编辑器生成布局 94
技巧39：控制UI元素的宽度和高度 97
技巧40：设置相对布局和布局ID 99
技巧41：通过编程声明布局 101
技巧42：通过独立线程更新布局 102
5.3 文本操作 104
技巧43：设置和改变文本属性 105
技巧44：提供文本输入 107
技巧45：创建表单 108
5.4 其他微件：从按钮到拖动条 109
技巧46：在表格布局中使用图像按钮 109
技巧47：使用复选框和开关按钮 112
技巧48：使用单选按钮 115
技巧49：创建下拉菜单 115
技巧50：使用进度条 117
技巧51：使用拖动条 119
第6章 用户界面事件 121
6.1 事件处理器和事件监听器 121
技巧52：截取物理按键事件 121
技巧53：构建菜单 124
技巧54：在XML文件中定义菜单 128
技巧55：创建操作栏 129
技巧56：使用ActionBarSherlock 132
技巧57：使用搜索键 134
技巧58：响应触摸事件 135
技巧59：监听滑动手势 137
技巧60：使用多点触控 138
6.2 高级用户界面库 141
技巧61：使用手势 141
技巧62：绘制3D图像 144
第7章 高级用户界面技术 148
7.1 Android自定义视图 148
技巧63：自定义按钮 148
7.2 Android动画 153
技巧64：创建动画 154
技巧65：使用属性动画 157
7.3 辅助功能 159
技巧66：使用辅助功能特性 159
7.4 Fragment 161
技巧67：同时显示多个Fragment 161
技巧68：使用对话框Fragment 165
第8章 多媒体技术 167
8.1 图像 169
技巧69：装载和显示一幅可供操作的图像 170
8.2 音频 174
技巧70：选择和播放音频文件 174
技巧71：录制音频文件 177
技巧72：操作原始音频 178
技巧73：有效利用声音资源 182
技巧74：添加媒体并更新路径 183
8.3 视频 184
技巧75：使用VideoView 184
技巧76：使用MediaPlayer播放视频 185
第9章 硬件接口 187
9.1 摄像头 187
技巧77：自定义摄像头 187
9.2 其他传感器 192
技巧78：获取设备的旋转姿态 192
技巧79：使用温度传感器和光传感器 195
9.3 电话 196
技巧80：使用电话管理器 196
技巧81：监听电话状态 198
技巧82：拨叫一个号码 200
9.4 蓝牙 200
技巧83：开启蓝牙 201
技巧84：发现蓝牙设备 201
技巧85：与已绑定的蓝牙设备配对 202
技巧86：打开蓝牙套接字 202
技巧87：使用设备振动功能 204
技巧88：访问无线网络 205
9.5 近场通信(NFC) 206
技巧89：读取NFC标签 207
技巧90：写入NFC标签 208
9.6 通用串行总线(USB) 210
第10章 网络 212
10.1 响应网络状态 212
技巧91：检查网络连接 212
技巧92：接收连接变化信息 214
10.2 使用短消息 215
技巧93：收到短消息后自动回复 217
10.3 使用Web内容 222
技巧94：自定义Web浏览器 223
技巧95：使用HTTP GET请求 223
技巧96：使用HTTP POST请求 227
技巧97：使用WebView 227
技巧98：解析JSON 229
技巧99：解析XML 231
10.4 社交网络 232
技巧100：读取所有者设定档 233
技巧101：与Twitter集成 233
技巧102：与Facebook集成 240
第11章 数据存储方法 242
11.1 shared preference 242
技巧103：创建和检索shared preference 243
技巧104：使用preference框架 243
技巧105：基于存储的数据改变用户界面 245
技巧106：添加最终用户许可协议 248
11.2 SQLite数据库 250
技巧107：创建一个独立的数据库包 251
技巧108：使用独立的数据库包 253
技巧109：创建个人日记 256
11.3 内容提供器 259
技巧110：创建自定义的内容提供器 260
11.4 文件的保存和载入 264
技巧111：使用AsyncTask进行异步处理 264
第12章 基于位置的服务 267
12.1 位置服务基础 267
技巧112：检索最近保存的位置 269
技巧113：在位置改变时更新信息 269
技巧114：列出所有可用的提供器 271
技巧115：将位置转化为地址(逆向地理编码) 273
技巧116：将地址转化为位置(地理编码) 274
12.2 使用Google地图 276
技巧117：向应用程序中添加Google地图 278
技巧118：为地图添加标记 280
技巧119：向地图上添加视图 283
技巧120：设置临近警告 285
12.3 使用Little Fluffy位置库 286
技巧121：使用Little Fluffy位置库添加通知 287
第13章 应用内计费 290
Google Play应用内计费 290
技巧122：安装Google的应用内计费服务 291
技巧123：为Activity添加应用内计费机制 292
技巧124：列出应用内可购买的项目清单 293
第14章 推送消息 295
14.1 Google云消息设置 295
技巧125：准备Google云消息 295
14.2 发送和接收推送信息 297
技巧126：准备manifest 297
14.3 接收消息 298
技巧127：添加BroadcastReceiver类 299
技巧128：添加IntentService类 299
技巧129：注册设备 301
14.4 发送消息 301
技巧130：发送文本消息 302
技巧131：通过AsyncTask发送消息 303
第15章 原生Android开发 305
Android原生组件 305
技巧132：使用Java原生接口 306
技巧133：使用NativeActivity 308
第16章 测试和调试 313
16.1 Android测试项目 313
技巧134：创建测试项目 313
技巧135：在Android上加入单元测试 316
技巧136：使用Robotium 316
16.2 Eclipse内建测试工具 317
技巧137：指定运行配置 317
技巧138：使用DDMS 318
技巧139：借助断点进行调试 320
16.3 Android SDK调试工具 322
技巧140：开启和终止Android调试桥 322
技巧141：使用LogCat 322
技巧142：使用Hierachy Viewer 324
技巧143：使用TraceView 326
技巧144：使用lint 327
16.4 Android系统调试工具 329
技巧145：设置GDB调试 331
附录A 使用OpenIntents Sensor Simulator 333
附录B 使用兼容包 337
附录C 使用持续集成系统 344
附录D Android操作系统发布版本一览 346
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android开发秘籍 第2版
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通Android UI设计
第1部分 Android UI设计的核心类介绍：开发工具、布局容器和Widgets
第1章   Android UI 设计工具：配置Android开发系统
第2章   Android UI 布局：布局容器和ViewGroup类
第3章   Android UI Widgets：用户界面Widgets 和View类
第2部分  Android UI 设计Menu类介绍：OptionsMenu、ContextMenu、PopupMenu和ActionBar
第4章   Android UI 选项菜单：OptionsMenu类和操作栏
第5章   Android UI 本地菜单：ContextMenu类和PopupMenu类
第6章   Android UI 操作栏：高级操作栏设计和ActionBar类
第3部分  Android UI 设计:UI布局考虑、Android操作系统设计概念和Android UI设计指南
第7章  Android UI设计考虑：样式、目标屏幕密度和新媒体格式
第8章  Android UI设计概念：线框图和UI布局模式
第9章   Android UI布局规范、差异和方法
第10章  Android UI主题设计和数字媒体概念
第4部分   基础  Android UI设计：基本布局容器——FrameLayout、LinearLayout、RelativeLayout 和GridLayout
第11章   Android FrameLayout类：在UI设计中使用数字视频
第12章   Android LinearLayout 类：水平和垂直UI设计
第13章  Android RelativeLayout 类：使用一个布局容器进行UI设计
第14章  Android GridLayout 类：利用网格布局进行UI设计
第5部分 高级Android UI 设计：高级布局容器——DrawerLayout、SlidingPane、ViewPager、PagerTitleStrip 和PageTabStrip
第15章  Android DrawerLayout 类：在UI设计中使用UI抽屉
第16章  Android SlidingPane 类：在UI设计中使用滑动画板
第17章  Android ViewPager 类：利用ViewPager实现水平导航
第18章  Android PagerTitleStrip 和PagerTabStri:ViewPager导航UI
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通Android UI设计
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android应用性能优化最佳实践
前　言
第1章　Android Studio使用指南 1
1.1　Android Studio的优势 1
1.2　Android Studio使用入门 2
1.2.1　Android Studio安装 2
1.2.2　创建一个Android Studio工程 3
1.2.3　从Eclipse项目迁移到Android Studio 5
1.3　Android Studio实用技巧 7
1.3.1　代码管理 7
1.3.2　代码编辑技巧 8
1.3.3　调试技巧 10
1.4　本章小结 11
第2章　绘制优化 12
2.1　Android系统显示原理 13
2.1.1　绘制原理 13
2.1.2　刷新机制 16
2.1.3　卡顿的根本原因 20
2.2　性能分析工具 21
2.2.1　卡顿检测工具 22
2.2.2　TraceView 23
2.2.3　Systrace UI性能分析 26
2.3　布局优化 29
2.3.1　常用布局优化工具 30
2.3.2　布局优化方法 34
2.4　避免过度绘制 43
2.4.1　过度绘制检测工具 44
2.4.2　如何避免过度绘制 44
2.4.3　案例：无过度绘制View的实现 45
2.5　启动优化 49
2.5.1　应用启动流程 49
2.5.2　启动耗时监测 52
2.5.3　启动优化方案 56
2.6　合理的刷新机制 58
2.6.1　减少刷新次数 58
2.6.2　避免后台线程影响 59
2.6.3　缩小刷新区域 59
2.7　提升动画性能 60
2.7.1　帧动画 60
2.7.2　补间动画 60
2.7.3　属性动画 62
2.7.4　硬件加速 63
2.8　卡顿监控方案与实现 66
2.8.1　监控原理 67
2.8.2　代码实现 68
2.9　本章小结 79
第3章　内存优化 80
3.1　Android内存管理机制 81
3.1.1　Java对象生命周期 81
3.1.2　内存分配 82
3.1.3　内存回收机制 84
3.1.4　GC类型 86
3.2　优化内存的意义 87
3.3　内存分析工具 90
3.3.1　Memory Monitor 90
3.3.2　Heap Viewer 91
3.3.3　Allocation Tracker 94
3.4　避免内存泄漏 96
3.4.1　内存泄漏定义 97
3.4.2　使用MAT查找内存泄漏 97
3.4.3　常见内存泄漏场景 103
3.4.4　内存泄漏监控 106
3.5　优化内存空间 109
3.5.1　对象引用 109
3.5.2　减少不必要的内存开销 110
3.5.3　使用最优的数据类型 112
3.5.4　图片内存优化 117
3.6　图片管理模块设计与实现 120
3.6.1　实现异步加载功能 121
3.6.2　实现三重缓存 130
3.6.3　开源图片组件 140
3.7　本章小结 142
第4章　存储优化 144
4.1　存储方式 144
4.1.1　SharedPreferences 145
4.1.2　文件存储 145
4.1.3　SQLite（需要扩展） 146
4.1.4　ContentProvider 147
4.2　序列化 147
4.2.1　Serializable与Parcelable 148
4.2.2　Gson实现JSON的序列化和反序列化 148
4.2.3　Nano Proto Buffers 149
4.2.4　FlatBuffers 149
4.2.5　小结 150
4.3　SharedPreferences优化 150
4.4　数据库使用及优化 151
4.4.1　数据库实现 152
4.4.2　数据库优化 157
4.5　本章小结 161
第5章　稳定性优化 162
5.1　提高代码质量 162
5.1.1　代码审查 163
5.1.2　代码静态扫描工具 166
5.2　Crash监控 168
5.2.1　Java层Crash监控 168
5.2.2　Native层Crash监控 171
5.2.3　Crash上报机制 173
5.3　ANR剖析 173
5.3.1　ANR介绍 173
5.3.2　ANR分析 174
5.3.3　ANR监控 176
5.4　提高后台进程存活率 178
5.4.1　应用进程优先级 178
5.4.2　利用SyncAdapter提高进程优先级 180
5.5　本章小结 183
第6章　耗电优化 184
6.1　耗电检测工具 184
6.2　三大模块省电优化 187
6.2.1　显示 187
6.2.2　网络 188
6.2.3　CPU 189
6.3　应用常用优化方案 191
6.3.1　计算优化 191
6.3.2　避免WakeLock使用不当 192
6.3.3　使用Job Scheduler 193
6.4　Doze模式 197
6.4.1　Doze模式介绍 197
6.4.2　Doze模式应用策略 198
6.4.3　测试Doze模式应用工作状态 199
6.5　本章小结 199
第7章　安装包大小优化 200
7.1　应用装包的构成 200
7.2　减少安装包大小的常用方案 203
7.2.1　代码混淆 203
7.2.2　资源优化 204
7.2.3　其他优化 206
7.3　本章小结 207
结束语 208
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android应用性能优化最佳实践
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android游戏开发案例与关键技术
第1章  初识Android的游戏世界	1
1.1  主流手机游戏开发平台	1
1.1.1  Java ME	1
1.1.2  Symbian OS	2
1.1.3  Windows Mobile	3
1.1.4  Android	3
1.2  手机游戏概述	4
1.2.1  智能手机系统	4
1.2.2  手机游戏的发展与繁荣	5
1.2.3  手机游戏类型	5
1.2.4  手机游戏特点	6
1.3  掀开Android的面纱	7
1.3.1  选择Android的理由	7
1.3.2  Android的应用程序框架	8
1.3.3  Android应用程序组件	9
1.4  Android 开发环境的安装与配置	10
1.4.1  安装JDK和配置Java开发环境	10
1.4.2  Eclipse的安装	11
1.4.3  SDK和ADT的安装和配置	11
1.5  第一个Android应用	13
1.5.1  创建第一个Android应用	13
1.5.2  在模拟器上运行程序	15
1.5.3  在手机上运行程序	17
1.6  本章小结	18
第2章  图层	19
2.1  图层结构	19
2.1.1  图层的组成元素	19
2.1.2  图层的组织	20
2.2  图层调用	22
2.2.1  界面的视图——SurfaceView类	22
2.2.2  创建MainSurface	23
2.2.3  绘制MainSurface	23
2.3  图层示例	28
2.4  本章小结	32
第3章  游戏中的多线程	33
3.1  多线程的使用	33
3.1.1  游戏逻辑的实现	33
3.1.2  创建多个线程	34
3.2  多线程的注意事项	34
3.2.1  同步问题	34
3.2.2  数据安全问题——线程锁	38
3.3  本章小结	40
第4章  游戏素材	41
4.1  素材的标准	41
4.1.1  图片素材的标准	41
4.1.2  音乐素材的标准	43
4.2  图片素材的裁剪	43
4.2.1  裁剪原理	44
4.2.2  裁剪实现	44
4.3  让素材动起来	49
4.4  本章小结	50
第5章  矩阵	51
5.1  数学中的矩阵	51
5.1.1  矩阵相加及相减	52
5.1.2  乘法	52
5.1.3  单位矩阵	53
5.1.4  逆矩阵	54
5.1.5  转置矩阵	54
5.2  Android矩阵应用	55
5.2.1  Matrix基本操作	55
5.2.2  Matrix应用	57
5.3  本章小结	60
第6章  OpenGL ES 2.0入门教程	61
6.1  Android系统下OpenGL ES 2.0学习的先决条件	61
6.2  OpenGL ES 2.0简介	61
6.3  Android系统下OpenGL ES 2.0学习入门	63
6.3.1  可视化3D世界	64
6.3.2  了解缓冲区	66
6.3.3  了解矩阵的用法	66
6.3.4  定义顶点和片段渲染器	67
6.3.5  加载渲染器到OpenGL中	68
6.3.6  把顶点和片段渲染器链接到一个程序	69
6.3.7  设置视角投影	70
6.3.8  在屏幕上绘制	71
6.4  标准漫射照明	72
6.4.1  什么是光	72
6.4.2  不同类型的光	73
6.4.3  模拟光	74
6.5  在每像素基础上应用相同照明技术	80
6.5.1  什么是每像素照明	80
6.5.2  从每个顶点移动到每个片段照明	80
6.5.3  每像素照明的概观	82
6.6  如何添加纹理	83
6.6.1  纹理的基本知识	83
6.6.2  纹理坐标	84
6.6.3  纹理映射的基本知识	84
6.6.4  顶点渲染器	85
6.6.5  片段渲染器	85
6.6.6  从图像文件中载入纹理	86
6.6.7  在场景中应用纹理	88
6.7  本章小结	90
第7章  游戏开发实例“小鱼快跑”	91
7.1  游戏策划	91
7.2  游戏资源	92
7.3  游戏开发	92
7.3.1  游戏框架设计	92
7.3.2  背景设计	100
7.3.3  精灵设计	100
7.3.4  游戏特效	112
7.3.5  游戏音效	117
7.4  本章小结	118
第8章  末日游戏一	119
8.1  游戏开发动机	119
8.2  游戏创意	120
8.3  设立项目	121
8.4  游戏的基本架构	124
8.4.1  Android手机上的游戏架构	125
8.4.2  用户输入	125
8.4.3  游戏逻辑	125
8.5  基本的游戏循环	126
8.6  显示图像	134
8.7  移动图像 Moving Images on the Screen with Android	140
8.8  游戏循环	144
8.9  测量的FPS Measuring FPS	148
8.10  本章小结	151
第9章  末日游戏二	152
9.1  精灵动画	152
9.2  粒子爆炸	156
9.3  游戏实体——策略模式	161
9.4  位图字体	173
9.5  设计游戏中的实体、对象的组合策略	178
9.6  Android 3D编程——透视投影	188
9.7  在游戏中使用MVC模式	192
9.8  本章小结	206
第10章  项目介绍与需求规格说明	207
10.1  项目描述	207
10.2  项目目标	207
10.3  项目特点	208
10.4  项目的目标受众	208
10.5  项目的团队介绍	208
10.6  团队成员角色	209
10.7  项目开发的过程模型	209
10.8  需求规格说明	209
10.8.1  游戏描述	209
10.8.2  功能需求	210
10.9  本章小结	215
第11章  项目设计阶段	216
11.1  开始应用程序	216
11.2  开始游戏	217
11.3  游戏循环	218
11.4  更新世界	219
11.5  场景图	220
11.6  绘制世界	220
11.7  HUD	223
11.7.1  移动	223
11.7.2  动作	224
11.7.3  生命条和法力条	224
11.8  玩家动画	224
11.9  施加法术	225
11.10  碰撞处理	226
11.11  加载世界和游戏对象	228
11.12  玩家旋转	229
11.13  法力再生	230
11.14  客户端连接	230
11.15  游戏服务器	230
11.16  优化	231
11.16.1  内存分配	231
11.16.2  线程	231
11.17  动作系统	231
11.18  更新管理器与事件处理器/进程管理器	231
11.19  游戏服务器	233
11.20  客户端网络	234
11.21  输入	234
11.21.1  移动	234
11.21.2  手势/动作	235
11.22  绘制	235
11.23  游戏循环	236
11.24  碰撞	237
11.25  本章小结	237
第12章  实现和测试	238
12.1  命名规则	238
12.2  原始代码结构	238
12.3  单件设计模式	239
12.4  NO.HIG.RAG.UpdateManager	240
12.5  NO.HIG.RAG.Controllers	241
12.5.1  控制器	241
12.5.2  TranslateController	241
12.5.3  RotateController	243
12.5.4  AnimationController	243
12.5.5  动作控制器	244
12.5.6  REGENCONTROLLER状态控制器	244
12.6  NO.HIG.RAG.ACTIONS	244
12.6.1  动作	245
12.6.2  SpellDefault	246
12.7  NO.HIG.RAG.GUI	247
12.7.1  手势	247
12.7.2  移动	247
12.8  NO.HIG.RAG.NETWORK	248
12.8.1  网络发送者	248
12.8.2  网络接收者	248
12.8.3  结合	248
12.9  NO.HIG.RAG.COLLISION	248
12.9.1  CollisionManager	248
12.9.2  单元	248
12.10  NO.HIG.RAG.HUMAN	249
12.10.1  Human	249
12.10.2  Player	249
12.10.3  NetworkPlayer	250
12.11  NO.HIG.RAG.SCENEGRAPH	250
12.11.1  SCENEGRAPH 	250
12.11.2  Node	250
12.11.3  TranslateNode	251
12.11.4  RotateNode	251
12.11.5  GeometryNode	252
12.11.6  TextureNode	252
12.11.7  GroupNode	253
12.11.8  SwitchNode	253
12.11.9  节点初始化 	254
12.11.10  序列化	254
12.12  NO.HIG.RAG.DATASTRUCTURES	254
12.13  工具	255
12.13.1  分析游戏对象和创建场景图形文件	255
12.13.2  要点	255
12.13.3  BuildInitialSceneGraph	255
12.13.4  COLLADAPARSE	256
12.13.5  GAMEOBJECT	256
12.14  服务器	256
12.14.1  通信	256
12.14.2  组件	256
12.14.3  数据库表	257
12.15  测试的方法与战略	257
12.15.1  测试战略	257
12.15.2  测试的工具/方法	258
12.15.3  游戏服务	258
12.16  成果的讨论	258
12.16.1  成果	258
12.16.2  讨论	259
12.17  角色	260
12.18  工作方法Scrum	260
12.19  游戏完成后的总结	262
12.19.1  独立开发还是使用中间件	262
12.19.2  合并系统	262
12.19.3  关于OpenGL / Android 的问题	262
12.19.4  动作系统	262
12.19.5  Collada与.obj	263
12.20  本章小结	263
第13章  项目相关文档与项目计划	265
13.1  项目会议日记	265
13.2  工作日志	271
13.3  状态报告	275
13.4  Scrum会议	276
13.5  日常Scrum	280
13.6  首要技术描述	282
13.7  项目目标和边界	283
13.7.1  背景	283
13.7.2  目标	283
13.7.3  边界	283
13.8  项目范围	284
13.8.1  项目描述	284
13.8.2  范围	284
13.9  项目组织	284
13.9.1  雇主和咨询师	284
13.9.2  职责和角色	284
13.10  团队规定和例程	285
13.10.1  团队规定	285
13.10.2  例程	285
13.11  资源	285
13.12  计划、会议和报告	285
13.12.1  系统开发模型	285
13.12.2  会议	286
13.12.3  状态报告	286
13.13  质量保证	287
13.13.1  测试	287
13.13.2  代码会议	287
13.14  甘特图	287
13.15  本章小结	288
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android游戏开发案例与关键技术
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android数据库应用编程——为企业开发数据驱动Android应用
目    录
第1章  Android平板和智能手机开发	1
1.1  Android是一个Java操作系统	2
1.2  工具和第一个Android应用程序	2
1.2.1  前提条件和准备工作	2
1.2.2  工具链测试驱动	4
1.3  一个代码库适应所有设备类型	4
1.3.1  以代码框架示例为起点	5
1.3.2  自动适应屏幕尺寸	10
1.4  组件、视图和生命周期	10
1.4.1  销毁并重建组件	11
1.4.2  MainActivity类	11
1.4.3  活动：用户交互的基本单元	11
1.4.4  Fragment：组织代码和UI的工具	16
1.4.5  PickFragment类	17
1.4.6  ItemFragment类	21
1.4.7  ItemDetailFragment类	24
1.5  整合Activity、Fragment和Action Bar	24
1.5.1  TabbedActivity类	25
1.5.2  针对大平板电脑的Main.xml文件	27
1.5.3  针对较小屏幕的main.xml和Subsidiary活动	28
1.5.4  TabActivity类	29
1.6  Android任务和进程模型	33
1.6.1  启动Dalvik实例	33
1.6.2  死亡，但没有变形	34
1.6.3  跨应用程序和进程的任务	35
1.7  多处理、安全性以及生命周期	35
1.8  声明应用程序属性	36
1.9  本章小结	37
第2章  关系模型和SQLite	39
2.1  数据库和关系模型	40
2.1.1  RDBMS的历史	40
2.1.2  关系模型	41
2.1.3  DBMS的其他功能	43
2.1.4  SQL语言	44
2.2  SQLite入门	48
2.2.1  SQLite命令行	48
2.2.2  SQLite数据库示例	53
2.3  本章小结	57
第3章  Android数据库支持	59
3.1  Java中的SQL：SQLiteDatabase类	59
3.1.1  基本的SQL嵌入	60
3.1.2  SQL语法	61
3.1.3  创建数据库：SQLiteOpenHelper类	67
3.1.4  管理数据库	71
3.2  游标、加载器和适配器	73
3.2.1  游标	73
3.2.2  适配器和视图绑定器	75
3.2.3  加载器	78
3.3  本章小结	81
第4章  内容提供器	83
4.1  使用内容提供器	84
4.1.1  名为URI的虚拟数据集	84
4.1.2  内容解析器：客户和提供器之间的联系	85
4.1.3  内容观察者：完成循环	86
4.1.4  IPC：系统范围可访问性	89
4.2  合约：URI和类型	89
4.2.1  授权	91
4.2.2  虚拟表的URI	92
4.2.3  返回值的MIME类型	93
4.2.4  权限	94
4.2.5  发布合约	94
4.3  实现内容提供器	94
4.3.1  创建内容提供器	95
4.3.2  返回类型和URI匹配器	96
4.3.3  写数据库	97
4.3.4  数据库查询	100
4.3.5  再论内容观察者	104
4.4  权限和注册	105
4.5  内容提供器和文件	107
4.6  本章小结	112
第5章  REST、内容提供器、并发性、网络和同步适配器	113
5.1  REST基础	114
5.1.1  使用REST的理由	114
5.1.2  HTTP协议中REST的应用	116
5.1.3  REST API示例	118
5.1.4  联系人表示方式	118
5.1.5  联系方法和URI	119
5.1.6  联系人事务	120
5.2  Android网络	123
5.2.1  Apache库	123
5.2.2  java.net库	124
5.2.3  权限	125
5.3  考虑并发性和生命周期	126
5.3.1  Android并发性架构	126
5.3.2  原生请求	127
5.4  健壮网络的架构	128
5.4.1  方法1：以服务为中心	129
5.4.2  方法2：以内容提供器为中心	131
5.4.3  方法3：以同步适配器为中心	132
5.4.4  Android内部的REST	133
5.4.5  restfulCachingProviderContacts项目：一个客户端示例	133
5.4.6  添加联系人	135
5.5  使用同步适配器	140
5.5.1  Android账户管理	140
5.5.2  创建同步适配器	151
5.6  本章小结	160
第6章  服务开发	163
6.1  服务开发的选择	164
6.1.1  请求的生命周期	164
6.1.2  三层服务架构	165
6.1.3  服务开发背景	166
6.2  为contacts构建REST风格的服务	168
6.2.1  一个传统的软件架构	168
6.2.2  编写示例：Spring Contacts服务及其同步变体	170
6.2.3  示例代码：Spring同步联系人服务	191
6.3  本章小结	198
第7章  移动和云计算	201
7.1  云性能和可伸缩性	202
7.1.1  移动的规模	202
7.1.2  云计算的持久性：从SQL到NoSQL	204
7.1.3  数据库文件格式	206
7.1.4  NoSQL的持久性	208
7.2  可扩展持久性的设计考虑事项	210
7.3  查看主流的云服务供应商	213
7.3.1  Amazon AWS	213
7.3.2  谷歌应用程序引擎	214
7.3.3  Joyent：托管MongoDB + node.js	214
7.3.4  Red Hat OpenShift	214
7.4  探讨代码示例	215
7.4.1  再论联系人DAO接口	215
7.4.2  编写代码：Amazon Contacts Service	216
7.4.3  编写代码：Google App Engine联系人	230
7.5  本章小结	238
第8章  基于设备的复杂数据：Android Contacts	241
8.1  PIM数据库：史前智能手机的化石	242
8.2  Android的Contacts提供器	242
8.3  ContactsContract API	242
8.4  Contacts提供器浏览器	243
8.4.1  用于浏览数据库的代码	245
8.4.2  Contacts提供器浏览器的源代码	245
8.5  本章小结	258
第9章  通用数据同步：Migrate项目和WebData API	259
9.1  WebData和Migrate项目介绍	260
9.1.1  Migrate项目的工作原理	260
9.1.2  Migrate项目如何简化移动端连接到企业的过程	261
9.1.3  详述 WebData API	262
9.1.4  WebData API REST风格的协议	262
9.2  Migrate项目的细节	272
9.2.1  Migrate项目Android WebData客户端	272
9.2.2  Android Migrate项目特性	273
9.3  WebData内容提供器Android API	274
9.3.1  Android内置提供器API	274
9.3.2  Migrate提供器API	275
9.4  本章小结	275
第10章  WebData应用程序	277
10.1  Migrate客户端	278
10.2  创建一个Migrate项目	279
10.2.1  步骤1：导入项目	279
10.2.2  步骤2：启用该项目作为一个Migrate客户端	279
10.2.3  步骤3：定义由Migrate管理的信息	280
10.2.4  步骤4：生成联系人合约	281
10.3  与Migrate REST代理交互	285
10.3.1  第5步：启动一个本地Migrate服务	290
10.3.2  第6步：发布应用程序的模式	290
10.4  配置设备	292
10.4.1  第1步：安装Migrate客户端	292
10.4.2  第2步：添加WebData账户	293
10.4.3  第3步：开启同步	294
10.4.4  第4步：运行应用程序	294
10.4.5  第5步：在Migrate Contacts中配置一个账户(可选)	294
10.5  未来的发展方向：MigrateClinic	295
10.6  本章小结	298
第11章  为数据构建人性化界面	301
11.1  相对于“菜谱”方式的模块化和灵活性	302
11.1.1  模块的概述	302
11.1.2  布局的改变	302
11.2  直接操作	304
11.2.1  TabbedActivity类	304
11.2.2  TabbedPagedFragment类	315
11.3  导航	316
11.3.1  小屏幕环境中的多任务	316
11.3.2  Android任务模型	316
11.3.3  任务和传统的进程模型	317
11.3.4  修改任务行为	317
11.3.5  在平板电脑中的导航	319
11.4  选择使用Support Package	319
11.5  本章小结	320
第12章  安全	321
12.1  平台安全	322
12.2  保持手机安全	322
12.2.1  避免恶意应用程序	323
12.2.2  了解恶意软件机制：Malware Genome	326
12.3  编写安全应用程序	327
12.3.1  黑客攻击目标	327
12.3.2  安全应用程序的要素	328
12.3.3  示例代码：保护REST风格调用	347
12.3.4  防止盗版	360
12.4  本章小结	361
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android数据库应用编程——为企业开发数据驱动Android应用
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入OpenCV Android应用开发
1 为图像添加效果 1
入门  1
部署OpenCV 2
在OpenCV 中存储图像  4
OpenCV 中的线性滤波器  5
均值模糊方法  7
高斯模糊方法  13
中值模糊方法  14
创建自定义核  16
形态学运算  17
阈值化  2
自适应阈值 21
小结  22
2 检测图像的基本特征  23
创建应用  23
边缘和角点检测  28
高斯差分技术  28
Canny 边缘检测器  31
Sobel 算子  33
Harris 角点检测  36
霍夫变换 37
霍夫直线  38
霍夫圆  40
轮廓  41
项目——检测图像中的数独  43
小结  45
3 检测目标  47
特征是什么？  47
尺度不变特征变换 48
理解SIFT 的原理  49
OpenCV 中的SIFT  57
匹配特征与检测目标 59
暴力匹配器  60
基于FLANN 的匹配器  60
匹配点  61
检测目标 65
加速稳健特征 65
SURF 检测器  66
SURF 描述子  67
OpenCV 中的SURF  69
ORB 70
oFAST：FAST 关键点定向  71
rBRIEF：旋转可知的BRIEF  72
OpenCV 中的ORB 74
BRISK  74
尺度空间关键点检测 75
关键点描述  76
OpenCV 中的BRISK  78
FREAK  79
视网膜采样模式 79
由粗到精的描述子 79
跳视搜索  80
方向 80
OpenCV 中的FREAK  80
小结  81
4 深入目标检测：级联分类器 83
级联分类器简介  83
Haar 级联分类器  84
LBP 级联分类器  85
用级联分类器检测人脸 86
HOG 描述子  94
项目——快乐相机 97
小结 98
5 追踪视频中的目标  99
光流法  99
Horn–Schunck 方法  101
Lucas–Kanade 方法  101
在Android 上查看光流场  104
图像金字塔  110
高斯金字塔  111
拉普拉斯金字塔  113
基本的二维变换  120
全局运动估计  121
Kanade-Lucas-Tomasi 追踪器  124
查看OpenCV 中的KLT 追踪器  124
小结  126
6 利用图像对齐和拼接  127
图像拼接  127
特征检测和匹配  128
图像匹配  130
光束法平差  131
自动全景校直  132
增益补偿  133
多频段融合  134
用OpenCV 进行图像拼接  135
小结  145
7 OpenCV 机器学习使应用焕发生机 147
光学字符辨识  147
k-最近邻算法用于OCR  148
支持向量机用于OCR 158
求解数独  160
识别数独中的数字  160
小结  162
8 疑难解答和最佳实践 163
错误排除  163
权限错误  163
用Logcat 调试代码  166
最佳实践  167
在Android 中操纵图像  168
在多个Activity 之间操纵数据 170
小结  172
9 开发一个文档扫描应用   173
让我们开始吧  174
算法  176
在Android 上的实现   177
小结  188
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入OpenCV Android应用开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android物联网开发从入门到实战（附光盘）
第1篇 基础知识篇
第1章 Android系统介绍
第2章 搭建Android开发环境
第2篇 数据传输篇
第3章 基本数据通信
第4章 蓝牙技术详解
第5章 Android蓝牙系统详解
第3篇 信息识别篇
第6章 语音识别技术详解
第7章 手势识别实战
第8章 在物联网设备中处理多媒体数据
第9章 GPS地图定位
第4篇 传感器应用篇
第10章 Android传感器系统架构详解
第11章 光线传感器和磁场传感器
第12章 加速度传感器、方向传感器和陀螺仪传感器
第13章 旋转向量传感器、距离传感器和气压传感器
第14章 温度传感器和湿度传感器
第5篇 技术提高篇
第15章 条形码解析技术详解
第16章 NFC近场通信技术详解
第17章 Google Now和Android Wear详解
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android物联网开发从入门到实战（附光盘）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android物联网开发：基于Android Studio环境
第一部分  基础知识
第1章  Android开发简介	1
1.1  Android介绍	2
1.2  Android系统构架	2
1.3  Android应用程序框架	5
1.4  本章小结	7
第2章  Android开发环境的搭建	8
2.1  获取Android源码	9
2.1.1  在Linux系统中获取Android源码	9
2.1.2  在Windows平台获取Android源码	10
2.1.3  编译源码	12
2.2　Android Studio应用开发	14
2.2.1　搭建Android Studio应用开发环境	15
2.2.2  创建第一个Android项目：HelloWorld	18
2.2.3  启动模拟器	19
2.2.4  运行到模拟器	21
2.2.5  下载到真机	22
2.2.6  详解项目中的资源	22
2.2.7　详解build.gradle文件	25
2.2.8  导入外部项目和Eclipse开发的Android项目	29
2.2.9  添加外部库	31
2.2.10  应用程序的调试	32
2.2.11  项目实战：下载Android的各个版本	34
2.3  本章小结	35
第3章  Android界面设计	36
3.1  用户界面基础	37
3.2  Android的Activity	38
3.2.1  Activity的介绍	38
3.2.2  Activity的生命周期	40
3.2.3  创建一个Activity	42
3.2.4  创建和加载布局	43
3.2.5  销毁一个Activity	46
3.2.6  使用Intent在Activity之间穿梭	46
3.2.7  Intent调用常见系统组件	51
3.3  常用控件的使用方法	53
3.3.1  TextView和EditText	53
3.3.2  Button、ToggleButton 和ImageView	54
3.3.3  Spinner	56
3.3.4  ListView	58
3.3.5  AlertDialog	64
3.3.6  ProgressBar	65
3.4  Android布局	67
3.4.1  线性布局	69
3.4.2  相对布局	71
3.4.3  表格布局	73
3.4.4  百分比布局	77
3.4.5  嵌套布局实现计算器界面	79
3.5  样式和主题	85
3.5.1  定义样式	86
3.5.2  使用样式	87
3.5.3  主题	87
3.6  新控件RecyclerView、CardView和Palette的使用	88
3.6.1　新控件的使用	90
3.6.2  实现纵向滚动和横向滚动	95
3.6.3  RecyclerView的点击事件	96
3.7  Android新控件	97
3.8　综合项目实战：WebView实现监控界面	99
3.9  本章小结	102
第4章  创建Android应用程序	103
4.1  概述	104
4.2  事件处理机制	105
4.2.1  基于监听器的事件处理	106
4.2.2　基于回调的事件处理	107
4.2.3　事件响应的实现	107
4.2.4　项目实战：获取屏幕触点坐标	107
4.3　Android多线程	110
4.3.1  线程的基本用法	110
4.3.2  在子线程更新UI	111
4.3.3  Android线程池	114
4.3.4  Android四种线程池实例	115
4.4  Android广播组件	119
4.4.1  动态注册广播	120
4.4.2  静态注册广播	122
4.4.3  自定义本地广播	123
4.5  后台服务（Service）	125
4.5.1  定义一个服务	125
4.5.2  启动和停止服务	128
4.5.3  Service和Activity通信	130
4.6  Android实现多任务	132
4.6.1  多任务实现原理	133
4.6.2  用Handler实现多任务	134
4.6.3  项目实战：Handler实现模拟下载	135
4.6.4  AsyncTask实现多任务	137
4.6.5  项目实战：AsyncTask实现计时	138
4.7  本章小结	139
第5章  Android中数据的存储和访问	140
5.1  简介	141
5.2  使用共同偏好的存取数据	141
5.2.1  存取共享偏好	141
5.2.2  Preference框架	145
5.3  文件读取和保存	149
5.3.1  内部存储	149
5.3.2  扩展存储	150
5.4  存取结构化数据	150
5.4.1  SQLite简介	151
5.4.2  创建SQLite数据库	152
5.4.3  操作数据库	153
5.5  使用LitePal操作数据库	156
5.5.1  LitePal简介	156
5.5.2  配置LitePal	156
5.5.3  创建和升级数据库	158
5.5.4  SQLite命令调试	162
5.5.5  数据库操作	163
5.6　网络存储	168
5.7　本章小结	169
第6章  ContentProvider	170
6.1　查询记录	171
6.2  修改记录	172
6.3  添加记录	172
6.4  删除记录	173
6.5  创建Content Provider	173
6.6  本章小结	177
第二部分  物联网应用
第7章  移动智能终端访问网络摄像机	178
7.1  简介	179
7.2  网络摄像机	179
7.3　系统实现	180
7.3.1　介绍	181
7.3.2　网络摄像机参数设置	182
7.3.3　智能手机端视频监控软件	183
7.4  本章小结	192
第8章  物联网语音识别开发	193
8.1  语音识别技术概述	194
8.2  TTS语音识别技术	194
8.2.1  TTS基础	194
8.2.2  TTS开发流程	196
8.2.3  项目实战：TTS文字识别实例	197
8.3  Voice Recognition语言识别	201
8.3.1  Voice Recognition技术基础	201
8.3.2  项目实战：Voice Recognition语音识别	203
8.4  本章小结	206
第9章  在物联网中媒体动画的实现	207
9.1  Android多媒体系统架构基础	208
9.2  Graphics类详解	208
9.2.1  Graphics类基础	209
9.2.2  Android图形绘制类	209
9.2.3  绘制基本图形	210
9.3  二维动画	212
9.3.1  类Drawable	213
9.3.2  实现Tween动画效果	214
9.3.3  Tween动画的四种动画效果	215
9.3.4  实现Frame动画效果	219
9.4  项目实战：物联网环境控制动画	221
9.5  OpenGL ES详解	224
9.5.1  OpenGL ES基础	224
9.5.2  Android中的OpenGL ES	226
9.5.3  Open GL的基本操作	226
9.5.4　项目实战：利用OpenGL实现旋转的立方体	227
9.6　音频实现	232
9.6.1  音频接口类	232
9.6.2  AudioManager控制铃声	232
9.6.3  录音详解	233
9.6.4  项目实战：使用MediaPlay播放音乐	235
9.7  二维码的识别	238
9.7.1  二维码介绍	238
9.7.2  项目实战：Android实现二维码识别	241
9.8  本章小结	247
第10章  Android网络开发	248
10.1  Android Socket网络传输	249
10.1.1  什么是Socket	249
10.1.2  Socket的分类	249
10.1.3  Socket基本实现原理	249
10.1.4  Android实现Socket简单通信	250
10.1.5  Android客户端和PC服务器端通信	253
10.2  Android HTTP网络传输	258
10.2.1  HttpURLConnection接口	258
10.2.2  项目实战：HttpURLConnection获取信息	260
10.2.3  使用OkHttp	263
10.2.4  项目实战：OkHttp获取信息	265
10.3  Android应用程序的权限	267
10.3.1  Android权限机制详解	267
10.3.2　在程序运行时申请权限	270
10.4  解析XML格式数据	274
10.4.1  Pull解析方式	274
10.4.2  SAX解析方式	276
10.5  解析JSON格式数据	279
10.5.1  使用JSONObject	280
10.5.2  使用GSON	281
10.6  本章小结	284
第11章  Android无线通信	285
11.1  Android蓝牙传输数据	286
11.1.1  蓝牙介绍	286
11.1.2  蓝牙体系结构	287
11.1.3  蓝牙软件的实现	289
11.1.4  Android的蓝牙接口类	292
11.1.5　Android蓝牙开发步骤	295
11.1.6  项目实战：查找蓝牙设备	300
11.1.7  项目实战：Android手机蓝牙控制智能小车	308
11.2  Android系统中的NFC	321
11.2.1  近场通信技术基础	322
11.2.2  在Android系统中使用NFC	322
11.2.3  项目实战：在Android中使用NFC读取MifareClassic卡	326
11.3  本章小结	331
第12章  Android访问智能电表或智能插座	332
12.1  简介	333
12.1.1  RS-485接口智能插座	335
12.1.2  无线智能插座	339
12.1.3  智能电表	340
12.2  使用智能手机访问智能电表或智能插座	344
12.2.1  使用智能手机访问智能电表或智能插座的方案	344
12.2.2  使用智能手机访问Wi-Fi型智能插座或智能电表的方案	345
12.3  使用Android访问智能电表或智能插座	346
12.3.1  智能手机和Pad之间的数据通信	347
12.3.2  蓝牙通信实现	349
12.3.3  访问智能电表或智能插座的命令格式	354
12.4  本章小结	354
第三部分  综合实战
第13章  UI新体验——Material Design	355
13.1　什么是Material Design	356
13.2  Design Support库的使用	356
13.3　DrawerLayout和Navigation View	357
13.4　Material Design开源项目	363
13.5　本章小结	366
第14章  综合项目：Cool Weather	367
14.1  项目分析	368
14.2　创建数据库和表	369
14.3  遍历全国省、市、县数据	371
14.4  设计天气信息界面	374
14.5  省、市、县数据界面处理	374
14.6  处理返回的JSON数据	379
14.7  将天气信息显示到界面上	381
14.8　后台自动更新天气	384
第15章  Android应用程序托管和发布	387
15.1  Git版本控制工具	388
15.1.1  安装Git	388
15.1.2  创建代码仓库	389
15.1.3  提交本地代码	391
15.2  GitHub	392
15.2.1  在GitHub注册创建版本库	392
15.2.2  将代码托管到GitHub	395
15.3  将应用程序发布到360应用商店	398
15.3.1  生成正式签名的APK文件	398
15.3.2  申请360开发账号	400
15.3.3  发布应用程序	401
15.3.4  嵌入广告	403
15.4  本章小结	407
参考文献	408
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android物联网开发：基于Android Studio环境
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android 面试宝典
"第1章 面试准备 ................................................. 1
1.1 面试流程 ............................................................................. 1
1.2 简历制作 ............................................................................. 2
1.3 简历投递 ............................................................................. 7
1.4 面试过程 ............................................................................. 8
1.5 合同签订 ........................................................................... 12
第2章 Java基础 .............................................. 16
2.1 面向对象的热点问题 ....................................................... 16
2.2 集合框架的热点问题 ....................................................... 20
2.3 I/O流的热点问题 .............................................................. 23
2.4 多线程的热点问题 ........................................................... 28
2.5 Java数据结构的热点问题 ................................................32
2.6 设计模式的热点问题 ....................................................... 36
第3章 Android菜鸟 ......................................... 41
3.1 系统架构的热点问题 ....................................................... 41
3.2 Android新特性的热点问题 .............................................. 43
文前.indd 7 2016-12-1 9:17:50
目 录
3.3 四大组件的热点问题 ...............................................................47
3.4 Fragment的热点问题 ................................................................63
3.5 常用控件的热点问题 ...............................................................65
3.6 数据处理的热点问题 ...............................................................69
3.7 网络交互的热点问题 ...............................................................77
第4章 Android大神 .............................................. 87
4.1 线程的热点问题 .......................................................................87
4.2 多媒体的热点问题 ...................................................................89
4.3 机制的热点问题 .......................................................................94
4.4 优化的热点问题 .....................................................................107
4.5 JNI的热点问题 .......................................................................116
4.6 异常的热点问题 ....................................................................118
4.7 第三方框架的热点问题 .........................................................121
4.8 屏幕适配的热点问题 .............................................................135
4.9 程序打包的热点问题 .............................................................137"
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android 面试宝典
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android移动网站开发详解
第1篇　基  础  篇

第1章  Android技术概述	2
1.1  来到智能手机世界	2
1.1.1  何谓智能手机	2
1.1.2  当前主流的智能手机系统	3
1.2  蓬勃发展的手机上网产业	6
1.2.1  WAP技术介绍	6
1.2.2  手机上网的商机	7
1.2.3  移动平台应用开发	7
1.3  Android的巨大优势	8
1.3.1  系出名门	8
1.3.2  强大的开发团队	8
1.3.3  诱人的奖励机制	9
1.3.4  开源	10
1.4  搭建Android应用开发环境	10
1.4.1  安装Android SDK的系统要求	10
1.4.2  安装JDK、Eclipse、Android SDK	11
1.4.3  设定Android SDK Home	19
1.4.4  验证理论	19
1.4.5  创建Android虚拟设备（AVD）	21
1.4.6  启动AVD模拟器	22
第2章  Android网络开发技术基础	25
2.1  HTML简介	25
2.1.1  HTML初步认识	25
2.1.2  字体格式设置	26
2.1.3  使用标示标记	28
2.1.4  使用区域和段落标记	29
2.1.5  使用表格标记	31
2.1.6  使用表单标记	33
2.2  XML技术	36
2.2.1  XML的概述	37
2.2.2  XML的语法	37
2.2.3  获取XML文档	38
2.3  CSS技术基础	39
2.3.1  基本语法	40
2.3.2  CSS属性介绍	40
2.3.3  CSS编码规范	42
2.4  JavaScript技术基础	43
2.4.1  JavaScript概述	44
2.4.2  JavaScript运算符	44
2.4.3  JavaScript循环语句	46
2.4.4  JavaScript函数	48
2.4.5  JavaScript事件	49
2.4.6  常用的Web页面脚本	51
2.5  在Android设备测试网页	53
2.6  编写第一个网页	56
2.6.1  编写HTML文件	56
2.6.2  设置页面的缩放	60
2.6.3  使用CSS进行修饰	60
第3章  创建移动Web	64
3.1  创建能在通用设备上运行的网站	64
3.1.1  确定应用程序类型	64
3.1.2  使用CSS改善HTML外观	65
3.1.3  加入移动meta标签	67
3.1.4  优化网站	68
3.2  将站点升级至HTML 5	68
3.2.1  确定何时升级和升级的具体方式	68
3.2.2  升级到HTML 5的步骤	70
3.2.3  将HTML 5特性作为额外内容添加至
网站	70
3.2.4  HTML 5为移动Web提供的服务	71
3.3  将Web程序迁移到移动设备	71
3.3.1  选择Web编辑器	72
3.3.2  测试应用程序	72
3.3.3  移动网站内容的特点	73
3.3.4  为移动设备调整可视化设计	73
3.3.5  HTML 5及CSS 3检测	74

第2篇　HTML 5篇

第4章  HTML 5在移动设备中	78
4.1  把握未来的风向标	78
4.1.1  漫漫发展历程	78
4.1.2  无与伦比的体验	78
4.2  在Android设备中使用HTML 5	79
4.2.1  使用HTML 5设计移动网站时需要考虑的
问题	80
4.2.2  主流的移动设备屏幕的分辨率	80
4.2.3  使用标准的HTML、CSS和JavaScript
技术	81
4.3  用HTML 5设计移动网站前的准备	81
4.3.1  为移动网站准备专用的域名	82
4.3.2  准备测试环境	82
第5章  HTML 5的整体架构	83
5.1  设置网页头部元素	83
5.1.1  设置文档类型	83
5.1.2  设置所有链接规定默认地址或默认目标	84
5.1.3  链接标签	85
5.1.4  设置有关页面的元信息	86
5.1.5  定义客户端脚本	87
5.1.6  定义HTML文档的样式信息	87
5.1.7  设置页面标题	88
5.2  设置页面正文	89
5.3  注释	90
5.4  和页面结构相关的新元素	91
5.4.1  定义区段的标签	91
5.4.2  定义独立内容的标签	92
5.4.3  定义导航链接标签	92
5.4.4  定义其所处内容之外的内容	93
5.4.5  定义页脚内容的标签	94
第6章  体验基本元素	95
6.1  在页面中输出一段文字	95
6.2  对页面进行分栏设计	96
6.3  使用<details>标记元素实现交互	97
6.3.1  常用属性	97
6.3.2  实现下拉弹出效果	98
6.4  使用<summary>标记元素实现交互	99
6.5  使用<menu>标记元素	100
6.5.1  属性介绍	100
6.5.2  实现右键菜单功能	101
6.6  使用<command>标记元素	102
6.7  使用<progress>标记元素	104
6.8  使用<meter>标记元素	106
6.9  使用树节点标记元素	107
6.9.1  <section>元素	108
6.9.2  <nav>元素	108
6.9.3  <hgroup>元素	110
6.10  使用分组标记元素	110
6.10.1  <ul>元素	110
6.10.2  <ol>元素	111
6.11  使用文本层次语义标记	112
6.11.1  <time>元素	112
6.11.2  <mark>元素	112
6.11.3  <cite>元素	113
6.12  使用<img>标记元素	113
6.13  使用<iframe>标记元素	114
6.14  使用<object>标记元素	115
第7章  使用表单元素	117
7.1  表单元素的类型	117
7.1.1  email类型	117
7.1.2  url类型	118
7.1.3  number类型	119
7.1.4  range类型	120
7.1.5  Date Pickers（数据检出器）	122
7.1.6  search类型	123
7.2  表单元素中的属性	125
7.2.1  记住表单中的数据	125
7.2.2  验证表单中输入的数据是否合法	127
7.2.3  在文本框中显示提示信息	128
7.2.4  验证文本框中的内容是否为空	129
7.2.5  开启表单的自动完成功能	130
7.2.6  重写表单中的某些属性	131
7.2.7  自动设置表单中传递数字	132
7.2.8  在表单中选择多个上传文件	133
7.3  新的表单元素	133
7.3.1  在表单中自动提示输入文本	134
7.3.2  一个简单的乘法计算器	135
7.3.3  在网页中生成一个密钥	136
第8章  音频和视频应用	137
8.1  处理视频	137
8.1.1  <video>标记	137
8.1.2  <video>标记的属性	138
8.2  处理音频	141
8.2.1  <audio>标记	141
8.2.2  <audio>标记的属性	142
8.3  高级应用	144
8.3.1  为播放的视频准备一幅素材图片	144
8.3.2  显示加载视频的状态	145
8.3.3  出错时在播放屏幕中显示出错信息	146
8.3.4  检测浏览器是否支持媒体文件类型	147
8.3.5  显示视频的播放状态	149
8.3.6  显示播放视频的时间信息	151
第9章  绘图实战	153
9.1  使用<canvas>标记	153
9.2  HTML DOM Canvas对象	154
9.3  HTML 5绘图实践	155
9.3.1  在指定位置绘制指定角度的相交线	156
9.3.2  绘制一个圆	156
9.3.3  在画布中显示一幅指定的图片	157
9.3.4  绘制一个指定大小的正方形	157
9.3.5  绘制一个带边框的矩形	159
9.3.6  绘制一个渐变图形	160
9.3.7  绘制不同的圆形	162
9.3.8  绘制一个渐变圆形	165
9.3.9  移动、缩放和旋转网页中的正方形	167
9.3.10  使用组合的方式显示图形	168
9.3.11  使用不同的方式平铺指定的图像	170
9.3.12  切割指定的图像	172
第10章  数据存储	174
10.1  Web存储	174
10.1.1  什么是Web存储	174
10.1.2  Web存储的影响	174
10.2  HTML 5中的两种存储方法	175
10.2.1  使用localStorage方法	175
10.2.2  使用sessionStorage方法	176
10.3  数据存储对象	177
10.3.1  使用sessionStorage对象	177
10.3.2  使用localStorage对象	179
10.3.3  使用localStorage对象中的clear()方法	182
10.3.4  使用localStorage对象中的属性	183
10.4  WebDB存储方式	185
10.4.1  WebDB存储基础	185
10.4.2  执行事务操作	186
10.4.3  调用执行SQL语句	187
10.5  实现一个日记式事务提醒系统	189
第11章  使用Web Sockets API	191
11.1  安装jWebSocket服务器	191
11.2  实现跨文档传输数据	192
11.3  使用WebSocket传送数据	194
11.3.1  使用Web Sockets API的方法	194
11.3.2  实战演练	195
11.4  处理JSON对象	196
11.5  jWebSocket框架	197
11.5.1  使用jWebSocketTest框架进行通信	197
11.5.2  使用jWebSocketTest开发一个聊天系统	200
第12章  使用Geolocation API	206
12.1  Geolocation API介绍	206
12.1.1  对浏览器的支持情况	206
12.1.2  使用API	207
12.2  获取当前地理位置	208
12.3  使用getCurrentPosition()方法	211
12.4  在网页中使用地图	212
12.4.1  在网页中调用地图	212
12.4.2  在地图中显示当前的位置	213
12.4.3  在网页中居中显示定位地图	215
12.4.4  利用百度地图实现定位处理	216
第13章  使用Web Workers API	219
13.1  Web Workers API基础	219
13.1.1  使用HTML 5 Web Workers API	219
13.1.2  需要使用.js文件	220
13.1.3  与Web Worker进行双向通信	220
13.2  Worker线程处理	222
13.2.1  使用Worker处理线程	222
13.2.2  使用线程传递JSON对象	224
13.2.3  使用线程嵌套交互数据	226
13.2.4  通过JSON发送消息	228
13.3  执行大计算量任务	230

第3篇　jQuery Mobile篇

第14章  jQuery Mobile基础	238
14.1  jQuery Mobile简介	238
14.1.1  jQuery介绍	238
14.1.2  jQuery Mobile的特点	239
14.1.3  对浏览器的支持	239
14.2  jQuery Mobile的4个突出特性	240
14.2.1  跨所有移动平台的统一UI	240
14.2.2  简化标记的驱动开发	240
14.2.3  渐进式增强	241
14.2.4  响应式设计	241
14.3  实战演练——在Android中使用jQuery
设计网页	242
第15章  jQuery Mobile语法基础	246
15.1  页面模板	246
15.2  多页面模板	249
15.2.1  一个多页面模板实例	249
15.2.2  设置内部页面的页面标题	250
15.3  使用Ajax修饰导航	251
15.3.1  使用Ajax	251
15.3.2  使用changePage()函数	254
15.3.3  配置Ajax导航	255
15.4  对话框	260
15.4.1  实现基本对话框效果	261
15.4.2  使用操作表	262
15.4.3  实现警告框	265
15.5  有媒体查询的响应式布局	267
第16章  实现导航功能	269
16.1  页眉栏	269
16.1.1  页眉基础	269
16.1.2  实现页眉定位	269
16.1.3  在页眉中使用按钮	272
16.1.4  在页眉中使用分段控件	275
16.1.5  实现回退按钮效果	279
16.2  页脚栏	281
16.2.1  页脚基础知识	281
16.2.2  页脚定位	285
16.2.3  页脚按钮	285
16.3  工具栏	286
16.3.1  带有图标的工具栏	286
16.3.2  带有分段控件的工具栏	288
16.4  标签栏	289
16.4.1  带有标准图标的标签栏	290
16.4.2  永久标签栏	292
16.4.3  有自定义图标的标签栏	292
16.4.4  带有分段控件的标签栏	294
第17章  按钮	298
17.1  链接按钮	298
17.2  表单按钮	299
17.3  图像按钮	300
17.4  有图标的按钮	301
17.5  只带有图标的按钮	303
17.6  实现按钮定位	305
17.7  自定义按钮图标	306
17.8  使用分组按钮	309
17.9  使用主题按钮	311
17.10  使用动态按钮	312
17.10.1  按钮选项	312
17.10.2  按钮方法	313
17.10.3  按钮事件	313
17.10.4  动态按钮演练	314
第18章  表单	317
18.1  表单基础	317
18.2  在表单中输入文本	319
18.2.1  动态输入文本	321
18.2.2  文本输入选项	321
18.2.3  文本输入方法	322
18.2.4  文本输入事件	322
18.3  选择菜单	324
18.3.1  自定义选择菜单	326
18.3.2  占位符选项	327
18.3.3  动态选择菜单	328
18.3.4  选择菜单选项	328
18.3.5  选择菜单的方法	330
18.3.6  选择菜单的事件	330
18.4  单选按钮	332
18.4.1  复选框和单选按钮的选项	334
18.4.2  复选框和单选按钮的方法	335
18.4.3  复选框和单选按钮的事件	335
18.5  复选框	337
18.5.1  动态复选框	337
18.5.2  使用复选框	337
18.6  滑动条	340
18.6.1  滑动条基础	341
18.6.2  滑动条的选项	342
18.6.3  滑动条的方法	343
18.6.4  滑动条的事件	343
18.7  开关控件	345
18.7.1  开关控件基础	345
18.7.2  动态开关事件	347
18.8  使用本地表单元素	348
18.9  使用Mobiscroll日期选择器	352
第19章  列表	355
19.1  列表基础	355
19.2  内置列表	356
19.3  列表分割线	358
19.4  带有缩略图和图标的列表	360
19.5  使用拆分按钮列表	365
19.6  使用编号列表	368
19.7  使用只读列表	369
19.8  使用列表徽章	372
19.9  使用搜索栏过滤列表	374
19.10  实现动态列表效果	378
19.10.1  列表选项	378
19.10.2  列表方法	380
19.10.3  列表事件	381
第20章  内容格式化	383
20.1  使用基本的HTML样式	383
20.2  使用表格进行布局	383
20.2.1  表格模板	383
20.2.2  两列表格	384
20.2.3  三列表格	386
20.2.4  带有app图标的四列表格	387
20.2.5  使用五列表格	388
20.2.6  多行表格	388
20.2.7  不规则的表格	390
20.2.8  Springboard（苹果iDevice的桌面）	391
20.3  可折叠的内容块	395
20.3.1  嵌套折叠和折叠组	396
20.3.2  创建可折叠的内容块	396
20.4  折叠组标记	398
20.4.1  折叠组标记（Collapsible set markup）
基础	399
20.4.2  实战演练	399
20.5  使用CSS设置样式	402
20.5.1  实现背景渐变	402
20.5.2  在Mozilla浏览器实现背景渐变	404
20.5.3  实现页眉渐变效果	406
第21章  主题化设计	409
21.1  主题设计基础	409
21.2  主题和调色板	411
21.2.1  主题设置	412
21.2.2  调色板（swatch）	413
21.2.3  全局主题设置（global theme settings）	413
21.2.4  结构（structure）	414
21.3  主题的默认值	414
21.4  主题的继承	416
21.5  主题的自定义	420
21.6  ThemeRoller	426
21.6.1  调色板和全局设置	427
21.6.2  Preview Inspector和QuickSwatch Bar	428
21.6.3  使用Adobe Kuler集成工具	429
21.6.4  使用ThemeRoller	429
第22章  jQuery Mobile的API	434
22.1  配置jQuery Mobile	434
22.1.1  mobileinit事件	434
22.1.2  可配置的jQuery Mobile选项	435
22.2  方法	437
22.3  事件	446
22.3.1  触摸事件Touch events	446
22.3.2  虚拟鼠标事件 Virtual mouse events	447
22.3.3  设备方向变化事件
Orientationchange events	448
22.3.4  滚屏事件Scroll events	449
22.3.5  页面加载事件Page load events	451
22.3.6  页面显示/隐藏事件Page show/
hide events	456
22.3.7  页面初始化事件Page
initialization events	457
22.3.8  动画事件Animation events	459
22.3.9  触发事件	460
22.4  3个属性	461
22.5  数据属性	461
22.6  有响应的布局助手	464
22.6.1  方向类Orientation Classes	464
22.6.2  最小/最大宽度折断点类Min/Max Width
Breakpoint Classes	465
22.6.3  添加宽度折断点 Adding Width
Breakpoints	465
22.6.4  运行媒介查询Running Media
Queries	465

第4篇　综合实战篇

第23章  使用PhoneGap	468
23.1  PhoneGap简介	468
23.1.1  产生背景	468
23.1.2  什么是PhoneGap	469
23.1.3  PhoneGap的发展历程	469
23.1.4  全新的功能	470
23.1.5  PhoneGap移动Web开发的步骤	470
23.2  搭建PhoneGap开发环境	471
23.2.1  准备工作	471
23.2.2  获得PhoneGap开发包	471
23.2.3  创建基于PhoneGap的HeIIoWorld
程序	473
23.3  PhoneGap API详解	479
23.3.1  应用API	480
23.3.2  通知API	482
23.3.3  设备API	483
23.3.4  网络连接API	484
23.3.5  加速计API	486
23.3.6  地理位置API	489
23.3.7  指南针API	491
23.3.8  照相机API	493
23.3.9  采集API	496
23.3.10  媒体API	498
第24章  开发一个电话本管理系统	502
24.1  需求分析	502
24.1.1  产生背景	502
24.1.2  功能分析	502
24.2  创建Android工程	503
24.3  实现系统主界面	504
24.4  实现信息查询模块	506
24.5  实现系统管理模块	508
24.6  实现信息添加模块	511
24.7  实现信息修改模块	514
24.8  实现信息删除模块和更新模块	516

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android移动网站开发详解
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android平板电脑开发秘籍
第1章 Android平板电脑应用程序概述 1
1.1 技巧：Android平板电脑介绍 1
1.2 技巧：了解Android手机和Android平板电脑的差别 2
1.3 技巧：让应用程序兼容Android手机和Android平板电脑 3
1.4 技巧：创建Android虚拟设备 4
1.5 技巧：理解Andoroid项目的目录结构 6
1.6 技巧：将Andoroid手机应用程序转换为Andoroid平板电脑应用程序 10
1.7 技巧：强制让应用程序仅能运行于平板电脑 18
1.8 技巧：理解Activity 18
1.9 技巧：理解Android Activity的生命周期 18
1.10 技巧：用Intent启动Activity 22
1.11 技巧：在Activity之间传递数据 26
1.12 小结 30
第2章 Fragment 31
2.1 技巧：介绍Fragment 32
2.2 技巧：理解Fragment的生命周期 32
2.3 技巧：创建前台 Fragment，了解前台 Fragment 和后台Fragment的区别 33
2.4 技巧：根据设备的方向添加或移除Fragment 40
2.5 技巧：理解FragmentManager和FragmentTransaction在处理
Fragment时的作用 45
2.6 技巧：在运行时动态创建Fragment 47
2.7 技巧：实现Fragment间的通信 52
2.8 技巧：利用ListFragment显示可选项 56
2.9 技巧：通过DialogFragment显示对话框 59
2.10 技巧：用PreferenceFragment进行用户设置 64
2.11 小结 71
第3章 Action中的ActionBar 72
3.1 技巧：理解菜单和ActionBar之间的区别 72
3.2 技巧：显示或隐藏ActionBar 73
3.3 技巧：理解ActionBar组件 73
3.4 技巧：在ActionBar中显示Action项 74
3.5 技巧：点击应用程序图标后跳转至应用程序首页 77
3.6 技巧：在ActionBar中显示Action View 78
3.7 技巧：在ActionBar中显示子菜单 81
3.8 技巧：创建一个Tab页式的ActionBar 86
3.9 技巧：创建一个下拉列表式的ActionBar 90
3.10 小结 93
第4章 新引入的Widget 94
4.1 技巧：在Android应用程序中显示日历 94
4.2 技巧：通过NumberPicker显示并选择数字 98
4.3 技巧：利用StackView创建一叠图片 101
4.4 技巧：利用ListPopupWindow显示选项列表 105
4.5 技巧：利用PopupMenu给出建议项 109
4.6 小结 111
第5章 系统剪贴板和拖放操作 112
5.1 技巧：理解拖放操作 112
5.2 技巧：拖放文本 113
5.3 技巧：拖放图片 120
5.4 技巧：利用系统剪贴板剪切、复制和粘贴文本 127
5.5 小结 131
第6章 Notification和Pending Intent 132
6.1 技巧：理解Pending Intent 132
6.2 技巧：广播Intent 133
6.3 技巧：理解Android的通知系统 139
6.4 技巧：创建通知 140
6.5 技巧：使用Notification.Builder 140
6.6 技巧：获取NotificationManager对象 142
6.7 技巧：创建Notification并用Pending Intent启动Activity 142
6.8 小结 145
第7章 Loader 146
7.1 技巧：理解Loader 146
7.2 技巧：理解Content Provider 147
7.3 技巧：使用CursorLoader访问Contacts Content Provider中的信息 148
7.4 技巧：创建一个自定义的Content Provider 152
7.5 技巧：列出自定义Content Provider中的信息 160
7.6 技巧：更新和删除Content Provider中的信息 163
7.7 小结 168
第8章 动画 169
8.1 技巧：理解动画的类型 169
8.2 技巧：使用ValueAnimator 170
8.3 技巧：使用ObjectAnimator动画显示View 176
8.4 技巧：使用AnimatorSet实现多重动画 181
8.5 技巧：理解逐帧动画 185
8.6 技巧：使用补间动画 189
8.7 技巧：实现布局动画 197
8.8 技巧：用AnimationSet归集并编排动画 201
8.9 小结 206
第9章 硬件加速二维图像 207
9.1 技巧：理解硬件加速 207
9.2 技巧：使用View Layer 210
9.3 技巧：使用SurfaceView改善图形应用的性能 212
9.4 技巧：使用TextureView进行图像变形 218
9.5 小结 220
第10章 建立并渲染图形 221
10.1 技巧：理解绘图所需的API 221
10.2 技巧：用OpenGL建立并渲染一个矩形 222
10.3 技巧：应用渐变色 226
10.4 技巧：旋转图形 229
10.5 技巧：缩放图形 233
10.6 技巧：平移图形 235
10.7 小结 237
第11章 录音、录像和拍照 238
11.1 技巧：使用内建Intent拍摄照片 238
11.2 技巧：使用Java代码拍摄照片 241
11.3 技巧：使用内建Intent录制音频 246
11.4 技巧：理解CamcorderProfile 249
11.5 技巧：理解MediaRecorder及其方法 253
11.6 技巧：使用Java代码录制音频 254
11.7 技巧：使用内建Intent录制视频 259
11.8 技巧：使用Java代码录制视频 261
11.9 小结 266
第12章 无线连接 267
12.1 技巧：配对两个已开启蓝牙的设备 267
12.2 技巧：利用蓝牙在设备间手动传输文件 269
12.3 技巧：将蓝牙设备与Windows PC配对 270
12.4 技巧：启用本地蓝牙设备 272
12.5 技巧：显示已配对设备列表 275
12.6 技巧：通过蓝牙传递文件 277
12.7 技巧：理解Wi-Fi 280
12.8 技巧：启用和禁用Wi-Fi 281
12.9 技巧：理解Wi-Fi Direct 284
12.10 小结 287
第13章 核心和线程 288
13.1 技巧：理解多核处理器架构的作用 288
13.2 技巧：理解垃圾回收的作用 289
13.3 技巧：理解线程 291
13.4 技巧：使用多线程 294
13.5 技巧：使用AsyncTask类 297
13.6 小结 300
第14章 键盘和传感器 301
14.1 技巧：改变Android键盘或输入法 301
14.2 技巧：理解传感器 302
14.3 技巧：获知设备支持的传感器列表 304
14.4 技巧：使用加速度传感器 306
14.5 技巧：使用接近度传感器 309
14.6 技巧：使用陀螺仪传感器 312
14.7 小结 314
第15章 JSON 315
15.1 技巧：理解JSON 315
15.2 技巧：使用JSONObject保存信息 318
15.3 技巧：嵌套JSONObject 319
15.4 技巧：使用JSONArray 321
15.5 技巧：使用JsonReader和JsonWriter 325
15.6 技巧：在Android应用程序中调用JSON Web Service 329
15.7 小结 333
第16章 WebView 334
16.1 理解WebView及其方法 334
16.2 使用WebView显示Web页面 335
16.3 使用WebViewClient类 340
16.4 使用WebViewFragment类 343
16.5 小结 348
第17章 增加对小屏幕的支持 349
17.1 技巧：支持各种屏幕和像素密度所要考虑的因素 349
17.2 技巧：支持各个版本的系统 351
17.3 技巧：利用Android Support Library支持低版本系统 354
17.4 技巧：通过锚定控件适应屏幕方向 359
17.5 技巧：定义替代Layout适应屏幕方向 362
17.6 小结 366
第18章 主屏幕Widget 367
18.1 技巧：理解App Widget和主屏幕Widget 367
18.2 技巧：了解App Widget的生命周期方法 369
18.3 技巧：创建一个主屏幕Widget 369
18.4 技巧：通过按钮控件更新主屏幕Widget 376
18.5 技巧：利用AlarmManager定期更新主屏幕Widget 380
18.6 小结 382
第19章 Android Beam 383
19.1 技巧：理解近场通信（NFC） 383
19.2 技巧：理解NFC电子标签 384
19.3 技巧：了解用于NFC电子标签交换信息的数据结构 384
19.4 技巧：从NFC电子标签读取数据 386
19.5 技巧：将数据写入NFC电子标签 392
19.6 技巧：使用Android Beam 395
19.7 技巧：使用Android Beam传递数据 396
19.8 小结 399
第20章 应用程序的分析和跟踪 400
20.1 理解应用程序的分析和跟踪 400
20.2 使用EasyTracker库跟踪Android应用程序 401
20.3 使用GoogleAnalytics单例跟踪Android应用程序 407
20.4 小结 410
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android平板电脑开发秘籍
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android BSP與系統移植開發
第1章 Android的BSP和子系統開發
說明Android系統，如何基於Android的開放原始碼，加入針對特定硬體的BSP部分，由此來建構各種系統，並可以運行在任何支援的硬體平台上。
第2章 Android系統BSP移植工作
說明Android BSP移植工作的目的，包含如何讓Android系統能啟動基本Linux系統（CPU、內部記憶體、定時器）及序列埠、RAM等基本裝置。
第3章 Android的Linux核心和驅動程式
Android系統的Linux核心與硬體平台相關，每個硬體平台具有各自獨立的程式碼儲存庫。每個程式碼儲存庫的Linux核心主要不同的地方是目標板移植和驅動程式部分，並且會隨著Linux核心的版本升級。本章將以Goldfish平台、高通MSM平台、三星平台、德州儀器OMAP平台為例做核心和驅動程式的介紹。
第4章 顯示系統
顯示系統是系統與使用者交互介面部分最基本的功能，其功能是將矩陣形式圖形資料顯示到使用者可見螢幕上。本章將協助使用者熟悉Android的顯示子系統結構、顯示BSP的結構，以及顯示BSP的實作。
第5章 使用者輸入系統
Android的使用者輸入系統的職責是取得使用者行為，主要功能是取得使用者使用輸入裝置進行操作的資訊，並將其交由系統的相關部分進行處理。本章將協助使用者熟悉輸入系統BSP的結構和實作。
第6章 傳感器系統
Android的傳感器系統是系統取得資訊的手段，從各種不同類型的傳感器硬體中取得，並交由Android系統的相關部分進行處理。本章將協助使用者熟悉傳感器子系統的結構以及傳感器BSP的結構和實作。
第7章 聲音系統
Android的聲音系統提供聲音系統對聲音硬體的裝置進行操作，其主要功能是聲音資料的輸入/輸出和控制功能。本章將協助使用者熟悉聲音子系統的結構以及聲音BSP的結構和實作。
第8章 影像疊加輸出系統
Android的影像疊加輸出系統提供影像畫面資料的輸出功能，並利用特殊的影像輸出裝置將影像資料數據單獨進行輸出。本章將協助使用者熟悉影像輸出子系統的結構以及影像疊加輸出BSP結構和實作。
第9章 相機系統
Android的相機系統提供照相機相關的功能。相機系統的硬體裝置就是鏡頭硬體，為系統提供影片畫面的輸入和拍攝照片的功能。本章將協助使用者相機子系統的結構以及相機BSP結構和實作。
第10章 OpenGL 3D引擎
OpenGL（Open Graphics Library）是一個標準化的圖形渲染（Render）引擎，在Android中使用標準的OpenGL介面作為3D部分的介面。本章將會介紹OpenGL系統的結構以及OpenGL BSP的結構和在各硬體平台上的實作。
第11章 OpenMax引擎
OpenMax是一個多媒體應用程式的框架標準。其中，OpenMax IL（集成層）技術規格定義了媒體元件介面，以便在嵌入式元件的串流媒體框架中快速集成加速編解碼器。本章將會針對OpenMax引擎的子系統結構，以及OpenMax BSP的結構和實作做介紹。
第12章 位元複製
本章主要介紹位元複製。位元複製（copybit）是Android中一個提供了可以加速記憶體圖形處理的加速模組。主要包括區塊複製和圖像拉伸兩部分功能。根據其參數的不同，也可以實作旋轉、透明度混疊、顏色格式轉換等方面的功能。
第13章 無線網路系統
WiFi（Wireless Fidelity）使用了IEEE的802.11協定的技術，目前在智慧手機中使用WiFi已經成為智慧手機的核心功能之一。本章將會針對無線網路系統的子系統結構，以及BSP結構和實作提出說明。
第14章 藍牙系統
在Android中，藍牙系統的底層硬體是藍牙硬體，通常可以使用UART、SDIO或USB介面作為連接。本章將會針對藍牙子系統的結構，以及BSP的結構和實作提出說明。
第15章 定位系統
Android的定位系統具有完整架構，並採用不同的手段來定位。GPS（基於全球定位系統）屬於衛星導航系統，需要特定的硬體接收來自衛星的資料，Android的定位系統主要使用GPS裝置。AGPS的含義為Assisted GPS（輔助GPS），可以透過行動電話、IP網路等手段實現定位。本章將會針對定位子系統的結構，以及BSP的結構和實作提出說明。
第16章 電話系統
Android系統主要是作為智慧型手機的作業系統來使用，因此電話部分是Android的核心子系統之一。Android的電話系統圍繞底層使用的Modem硬體來搭建。Android主要提供呼叫（Calling）、簡訊（SMS）等業務，此外透過電話系統還可以實現資料連接（Data Connection），實現網路功能。本章將會針對電話子系統的結構，以及BSP的結構和實作提出說明。
第17章 警報器 — 即時時鐘系統
Android的警報器（Alarm）系統提供了警報和時間設定方面的支援，其實作的硬體基礎通常是即時時鐘（RTC）。在Linux核心程式碼中，需要有即時時鐘裝置驅動程式和Android的Alarm驅動程式。本章將會針對警報器 — 即時時鐘子系統的結構，以及BSP部分的結構和部分的實作提出說明。
第18章 光系統
背光和指示燈系統部分在Android中歸為光系統統一實作。 Android的光系統負責控制系統中的各個光源，例如螢幕背光、鍵盤按鍵光、電池光等。光系統基本上是一個用於輸出控制的系統。本章將會針對背光和指示燈子系統的結構，以及BSP部分的結構和部分的實作提出說明。
第19章 震動器系統
震動器負責控制電話來電時的振動功能，Android中的震動器系統是一個專提供這方面功能的小系統，提供根據時間振動的功能。本章將會針對震動器子系統的結構，以及振動器BSP部分的結構和部分的實作提出說明。
第20章 電池訊息部分
Android系統考慮了多種供電方式，包括AC、USB、Battery等。在應用程式層次，通常包括了電池狀態顯示的功能。因此，從Android系統的軟體方面（包括驅動程式和使用者空間內容），需要在一定程度上獲得電池的狀態。在Android系統中，電池系統主要負責電池訊息統計方面的功能。本章將會針對電池訊息子系統的結構，以及電池訊息的BSP部分的結構和部分的實作提出說明。
第21章 Android 4.x的聲音、影像系統
Android 4.x的聲音系統、相機系統在硬體抽象層之下皆產生了一些變化，由原本固定鏈接的動態函式庫，變成了Android中固定的硬體模組，本章將會針對Android 4.x的聲音系統、相機系統、影像組合的結構以及這些系統的BSP實作提出說明。
第22章 Android 4.x近距離通訊系統(NFC)
近距離通訊（NFC，Near Field Communication）也稱為近距離無線通訊，是一種短距離的高頻無線通訊技術，允許電子裝置之間進行非接觸式點對點資料傳輸，在10cm內交換資料。而這也是目前蠻夯的議題之一，可惜目前市面上的Android書籍中鮮少對這個部份有所說明，希望這章所提供的內容，能幫助讀者更進一步的了解NFC。
第23章 Android 4.2的電源控制
電源控制是Android 4.2增加的一個輔助功能的模組，可以對電源控制進行一部分干涉和控制。本章將會針對電源控制的結構以及電源控制BSP的結構和實作提出說明。
第24章 系統時間
系統時間是Android 4.2新增的一個輔助功能的硬體抽象層模組，用於得到系統的時間和頻率。本章將會針對系統時間的結構以及系統時間的BSP的結構和實作提出說明。
第25章 Android 4.2金鑰
金鑰是Android 4.2新增的一個硬體抽象層模組，用於支援Android安全系統的運行。金鑰部分本身包括了產生金鑰對（公鑰和私鑰）、使用金鑰簽名資料、使用金鑰驗證資料等功能。本章將會針對安全和金鑰子系統的結構以及金鑰的BSP部分的結構和實作提出說明。
第26章 電源管理
Android的電源管理結合了Linux核心和使用者空間控制。主要包括了核心中的核心機制和使用者空間規則方面的控制。本章將會幫助讀者了解Android在核心空間以及使用者空間的電源管理以及電源管理的相關規則。
第27章 還原和升級
還原（Recovery）和升級（Update）是系統改變自身軟體的手段：還原通常是指將系統的軟體還原到某個出廠的版本；升級是指將系統的軟體改變成某個比較新的版本，其中可能包括增量的升級。Android系統的還原和升級在軟體上使用了相似的結構和流程，並且在實作上統稱為Recovery。而這將會是本章介紹的重點。
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android BSP與系統移植開發
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android系统原理和实战应用
第1章  Android系统简述  1.1  什么是Android  1.2  Android的发展史  1.3  Android版本变更情况    1.3.1  Android 1.5 API变更概要    1.3.2  Android 1.6 API变更概要    1.3.3  Android 2.0 API变更概要    1.3.4  Android 2.0.1 API变更概要    1.3.5  Android 2.1 API变更概要    1.3.6  Android 2.2 API变更概要    1.3.7  Android 2.3 API变更概要第2章  编译环境搭建  2.1  配置Android的开发环境    2.1.1  Eclipse+ADT    2.1.2  NetBeans+NBAdroid第3章  Hello World例子  3.1  新建一个工程  3.2  Hello World工程结构分析    3.2.1  AndroidManifest. xml    3.2.2  参考函数库    3.2.3  文件夹  3.3  Hello World代码分析    3.3.1  包的声明    3.3.2  导入包的声明    3.3.3  程序的主体部分  3.4  Hello world UI实现方法  3.5  图形Hello world第4章  Android应用程序架构  4.1  架构简述    4.1.1  Linux Kernel    4.1.2  Android Runtime    4.1.3  Libraries    4.1.4  Application Framework    4.1.5  Applications  4.2  应用程序的结构    4.2.1  Activity    4.2.2  Broadcast Intent Receiver    4.2.3  Service    4.2.4   Content Provider  4.3  AndroidManifest. xml详解    4.3.1  AndroidManifest. xml文件的作用    4.3.2  AndroidManifest. xml的结构大纲    4.3.3  AndroidManifest的一些规则    4.3.4  application属性介绍第5章  Android的UI系统  5.1  Android的布局格式    5.1.1  FrameLayout    5.1.2  LinearLayout    5.1.3  AbsoluteLayout    5.1.4  RelativeLayout    5.1.5  TableLayout    5.2  Android界面控件    5.2.1  button按钮    5.2.2  带图片的按钮    5.2.3  TextView标签(不可编辑的文本框)    5.2.4  EditText文本框(可编辑的)    5.2.5  CheckBox多选框    5.2.6  RadioGroup单选    5.2.7  Spinner下拉列表    5.2.8  AutoC0mpleteTextview自动完成文本    5.2.9  DatePicker 13期选择器    5.2.10  ScrollView滚动视图    5.2.11  ProgressBar进度条    5.2.12  SeekBar拖动条    5.2.13  ImageView图片视图    5.2.14  ImageSwitcher & Gallery(画廊)切换图片    5.2.15  TabHost切换面板第6章  Android的基本组件  6.1  Activity详解    6.1.1  Activity的声明周期    6.1.2  Activity的四种加载模式    6.1.3  如何使用Activity  6.2  Android的Service    6.2.1  简介    6.2.2  如何使用Service    6.2.3  Service的声明周期  6.3  Broadcast Receiver    6.3.1  Broadcast Receiver介绍    6.3.2  实现一个Broadcast Receiver    6.3.3  Broadcast的发送和接收过程    6.3.4  Broadcast Receiver的例子第7章  Android的数据存储  7.1  SharedPreferences的使用    7.1.1  SharedPreferences的介绍和使用方法    7.1.2  SharedPreferences示例程序  7.2  SQLite的使用    7.2.1  SQLite简介    7.2.2  SQLite的CURD    7.2.3  SQLite创建、更新数据表    7.2.4  SQLite示例程序  7.3  ContentProvider的使用    7.3.1  ContentProvider简介    7.3.2  ContentResolver    7.3.3  数据模型和URI    7.3.4  ContentProvider的查询    7.3.5  示例程序  7.4  文件存储  7.5  网络存储第8章  Android的GPS系统  8.1  简述  8.2  获取NMEA文件  8.3  使用Android位置基础API读取GPS  8.4  编写Activity部分代码  8.5  传递坐标到Google地图  8.6  增加缩放控制  8.7  三种视图模式参考文献
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android系统原理和实战应用
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android应用开发从入门到精通
第1章 揭开神秘面纱——Android系统简介	1
1．1 认识Android系统	2
1．1．1 Android成长历程	2
1．1．2 发行版本	3
1．1．3 得到大家的认可——Android系统的市场份额	3
1．2 Android架构解析	4
1．2．1 Android系统架构图	4
1．2．2 应用程序（Applications）	5
1．2．3 应用程序框架层（Framework）	6
1．2．4 系统运行库（Libraries）	7
1．2．5 Linux内核	11
1．3 小结	11
第2章 工欲善其事，必先利其器——Android开发初识	12
2．1 开发准备工作	13
2．2 开发环境搭建	13
2．3 创建第一个Android项目	16
2．3．1 创建新项目	16
2．3．2 程序工程架构图	18
2．3．3 HelloWorld程序架构解析	19
2．4 Android开发工具	22
2．4．1 Android开发工具Adb	22
2．4．2 Android开发工具DDMS	23
2．5 小结	25
第3章 亲密接触——Android入门程序开发	26
3．1 水果的营养成分分析器	27
3．2 手把手教你开发项目	27
3．2．1 手动创建Activity	28
3．2．2 创建和加载布局	28
3．2．3 在Activity中使用Toast	32
3．2．4 在Activity中加入菜单（Menu）	32
3．2．5 在Activity中使用Dialog	35
3．2．6 Spinner控件的使用	35
3．2．7 界面切换	38
3．3 Intent的使用	40
3．3．1 使用显式Intent	40
3．3．2 使用隐式Intent	41
3．3．3 隐式Intent的多种用法	42
3．3．4 向Activity传递数据	44
3．3．5 返回数据给Activity	46
3．4 Android日志	48
3．4．1 添加LogCat到Eclipse	48
3．4．2 使用Android的日志工具Log	48
3．5 小结	51
第4章 美丽由我掌控——UI的开发	52
4．1 常用控件	53
4．1．1 EditText	53
4．1．2 TextSwitcher	55
4．1．3 ImageView	56
4．1．4 ImageSwitcher	57
4．1．5 ListView的使用	58
4．1．6 提升ListView的运行效率	60
4．1．7 RecyclerView	63
4．1．8 ViewStub	69
4．2 Android七种常见布局	72
4．2．1 LinearLayout	72
4．2．2 elativeLayout	75
4．2．3 FrameLayout	77
4．2．4 TableLayout	78
4．2．5 GridLayout	79
4．2．6 AbsoluteLayout	81
4．2．7 CardView	82
4．3 自定义控件	86
4．3．1 加载布局	87
4．3．2 自定义控件	89
4．4 Android View详解	90
4．5 Android Surface详解	93
4．6 小结	98
第5章 组件之一——活动（Activity）	99
5．1 活动的生命周期	100
5．2 活动的启动模式详解	105
5．2．1 standard模式	106
5．2．2 singleTop模式	107
5．2．3 singleTask模式	109
5．2．4 singleInstance模式	110
5．3 平板手机都兼顾——碎片（Fragments）	112
5．3．1 概述	112
5．3．2 设计思想	112
5．3．3 Activity添加Fragment界面	113
5．3．4 动态替换Fragment	115
5．3．5 Fragment生命周期	117
5．3．6 一个简单的阅读器	120
5．4 Android中的多线程	127
5．4．1 Android Handler	129
5．4．2 使用AsyncTask	131
5．5 小结	134
第6章 默默无闻的后台——服务（Service）	135
6．1 Java层服务	136
6．2 服务的生命周期	137
6．3 服务的启动	140
6．3．1 startService()启动Service	140
6．3．2 bindService()启动Service	144
6．4 Android AIDL	148
6．4．1 创建一个AIDL文件	150
6．4．2 实现接口	150
6．4．3 使用parcelables进行参数的值传递	152
6．4．4 客户端获取接口	153
6．4．5 IInterface接口类	156
6．5 提高手机电池续航能力——JobScheduler技术	157
6．6 小结	162
第7章 广播机制——Android广播接收器	163
7．1 静态注册监听广播	164
7．2 动态注册接收Broadcast广播	166
7．3 本地广播	167
7．4 小结	169
第8章 数据仓库——Android数据存储	170
8．1 轻量级存储类——SharedPreferences	171
8．1．1 使用SharedPreferences存取数据	171
8．1．2 存取复杂（图像、音频）类型的数据	173
8．2 PreferenceActivity的使用	174
8．2．1 PreferenceActivity实现	174
8．2．2 PreferenceFragement实现	177
8．3 SQLite Databases	178
8．3．1 SQLite在Windows系统中的使用	179
8．3．2 SQLite基本操作	180
8．3．3 SQLite事务	180
8．4 Android中使用SQLite数据库	180
8．4．1 SQLite常用的操作方法	181
8．4．2 SQLiteOpenHelper类	182
8．4．3 在SQLite中执行查询	185
8．4．4 在Activity中显示和操作SQLite数据库	187
8．5 Android文件的使用	189
8．5．1 将数据保存到文件	189
8．5．2 存取SD卡中的文件	190
8．5．3 读取XML文件	192
8．6 小结	194
第9章 跨程序共享数据——内容提供器（ContentProvider）	195
9．1 获取用于通信录的电话及电话内容	197
9．1．1 从通信录中获取好友数据	197
9．1．2 通信录中添加好友	198
9．2 创建共享数据	199
9．2．1 创建共享数据	200
9．2．2 外部应用访问	204
9．3 小结	206
第10章 美图秀秀——开发2D绘图	207
10．1 屏幕绘图基础	208
10．1．1 Canvas类	208
10．1．2 Paint类	210
10．1．3 Color类	212
10．1．4 Path类	213
10．1．5 Drawable类	216
10．2 使用文字	217
10．3 使用位图	219
10．4 Frame动画	222
10．5 Tween动画	224
10．6 小结	227
第11章 多媒体开发	228
11．1 音频播放	229
11．1．1 支持的音频格式	229
11．1．2 MediaPlayer播放MP3文件	230
11．1．3 AudioTrack播放原始音频文件	230
11．1．4 SoundPool播放音频文件	231
11．2 视频播放	232
11．2．1 SurfaceView播放视频	232
11．2．2 VideoView视频播放器	234
11．3 多媒体存储	235
11．4 小结	237
第12章 Android手机特色开发	238
12．1 使用手机Camera	239
12．1．1 调用摄像头拍照	239
12．1．2 使用摄像头拍照	240
12．2 使用百度地图	242
12．2．1 申请API Key	243
12．2．2 显示百度地图	245
12．2．3 标注覆盖物	247
12．3 定位服务	248
12．3．1 LocationManager的基本用法	249
12．3．2 确定自己的位置	250
12．4 使用手机中的Sensor	252
12．5 使用手机录音	255
12．5．1 AudioManager	256
12．5．2 音频处理	259
12．6 手机Wifi的使用	261
12．7 小结	267
第13章 三维游戏的基础——OpenGL ES 3．0	268
13．1 OpenGL常识普及	269
13．2 GLSurfaceView的使用	272
13．3 绘图概念	274
13．4 平面图形	277
13．5 三维图形	279
13．6 平面纹理	286
13．7 三维纹理	289
13．8 小结	294
第14章 C++的魅力——Android本地编程	295
14．1 Android NDK简介	296
14．2 使用命令行编译Native部分	296
14．3 C++（HelloWorld）项目	297
14．4 Eclipse编译C++（HelloWorld）项目	299
14．5 HelloJNI实例解析	301
14．6 Android．mk文件语法规范	304
14．7 Application．mk文件语法规范	308
14．8 Android JNI简介	309
14．9 Android Native Activity	312
14．9．1 NativeActivity	313
14．9．2 Android Native生命周期	314
14．10 使用C/C++编写OpenGL ES程序入门	315
14．10．1 初始化OpenGL	316
14．10．2 创建自己的Renderer	316
14．11 小结	318
第15章 Android网络编程	319
15．1 WebView控件用法	320
15．2 使用HTTP协议访问资源	321
15．2．1 HttpURLConnection的使用	321
15．2．2 HttpClient的使用	324
15．3 Android Socket	325
15．3．1 Android TCP通信	326
15．3．2 Android UDP通信	330
15．3．3 Native TCP/UDP通信	334
15．4 小结	338
第16章 Android的灵魂——底层服务	339
16．1 Android进程间通信	340
16．2 Android IPC binders	344
16．2．1 Binders概述	344
16．2．2 面向对象的Binder IPC	345
16．2．3 Binder通信模型	345
16．3 Binder的Native实现（libbinder）	347
16．4 Android Native Service	349
16．4．1 Native Service接口介绍	351
16．4．2 简单的Native Service项目	354
16．5 Android Parcel	364
16．6 小结	367
第17章 综合实例解析——音乐播放器	368
17．1 音乐播放器	369
17．2 设计原则	369
17．3 框架分析	370
17．4 Application	371
17．5 程序主界面	372
17．6 音乐播放界面	374
17．7 Music Service的编写	385
17．8 FavroiteActivity的编写	394
17．9 MusicOnlineActivity的编写	394
17．10 发布App	397
17．10．1 生成正是签名的APK文件	397
17．10．2 申请Google Play账号	399
17．10．3 上传和发布应用程序	401
17．11 小结	404
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android应用开发从入门到精通
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android网络游戏开发实战
前言
第1章  Android项目需求分析与设计——以英雄诀游戏项目为例
1.1  项目概述
1.1.1  项目产生背景
1.1.2  英雄诀游戏背景
1.1.3  项目任务
1.2  需求分析
1.2.1  确定需求
1.2.2  用例图
1.3  系统设计
1.4  环境搭建
1.4.1  Android SDK安装
1.4.2  Eclipse和ADT插件安装
1.4.3  Android开发模拟器
1.4.4  测试环境
本章小结
第2章  网络通信和线程——用户登录实现
2.1  网络通信技术介绍
2.1.1  java.net.URL类实现方式
2.1.2  Apache HttpClient实现方式
2.1.3  HttpClient案例
2.2  Android中的线程
2.2.1  Android线程中的问题
2.2.2  Handler和Message
2.2.3  重构HttpClient案例
2.3  数据交换格式
2.3.1  纯文本格式
2.3.2  XML格式
2.3.3  JSON格式
2.4  Android客户端用户登录实现
2.4.1  Android客户端登录类图
2.4.2  Android客户端骨架实现
2.4.3  Android客户端网络通信实现
2.5  优化重构Android客户端登录
2.5.1  网络通信处理的封装
2.5.2  改善用户体验
本章小结
第3章  Android 2D绘图——城堡初始化实现
3.1  Android 2D绘图
3.1.1  Android图形系统结构
3.1.2  位图、几何图形和文本的绘制
3.2  Surface和SurfaceView
3.2.1  Surface
3.2.2  SurfaceView
3.3  2D游戏开发设计模式
3.3.1  基本的SurfaceView模式
3.3.2  带有触摸或键盘事件的SurfaceView模式
3.3.3  带有精灵的SurfaceView模式
3.3.4  优化SurfaceView设计模式
3.4  绘制城堡画面
3.4.1  绘制城堡画面骨架代码
3.4.2  网络通信与数据解析
3.4.3  绘制城堡上的建筑
本章小结
第4章  Activity、Intent和菜单——战争雷达实现
4.1  Activity
4.1.1  创建Activity
4.1.2  Activity生命周期
4.2  Intent
4.2.1  显式Intent（Explicit Intent）
4.2.2  隐式Intent（Implicit Intent）
4.3  多Activity之间跳转
4.3.1  多个Activity之间数据传递
4.3.2  跳转与返回
4.4  菜单
4.4.1  文本菜单
4.4.2  文本+图片菜单
4.5  战争雷达实现
4.5.1  添加菜单
4.5.2  初始化战争雷达画面
4.5.3  单击查询按钮
4.5.4  跳转到军机处画面
本章小结
第5章  UI布局管理——宗派实现
5.1  UI布局管理介绍
5.1.1  框架布局
5.1.2  线性布局
5.1.3  相对布局
5.1.4  绝对布局
5.1.5  表格布局
5.2  宗派画面实现
5.2.1  画面布局
5.2.2  画面数据请求
5.2.3  画面初始化
5.3  宗派挑战画面实现
5.3.1  画面布局
5.3.2  画面数据请求
5.3.3  画面初始化
5.3.4  单击挑战按钮的处理
5.4  其他模块中的画面实现
5.4.1  用户登录画面布局
5.4.2  战争雷达画面布局
本章小结
第6章  触摸事件与手势、键盘事件——作战地图实现
6.1  触摸事件与手势
6.1.1  触摸事件
6.1.2  视图触摸事件
6.1.3  手势
6.2  键盘事件
6.3  作战地图实现
6.3.1  地图布局
6.3.2  地图初始化
6.3.3  键盘移动地图
6.3.4  触摸移动地图
本章小结
第7章  对话框和Toast使用——建筑升级实现
7.1  对话框
7.1.1  文本信息对话框
7.1.2  简单列表项对话框
7.1.3  单选项列表项对话框
7.1.4  复选框列表项对话框
7.1.5  自定义布局对话框
7.2  Toast 2.3
7.2.1  文本类型
7.2.2  图片类型
7.2.3  复合类型
7.2.4  自定义显示位置Toast
7.3  建筑升级
7.3.1  请求服务器
7.3.2  建筑升级对话框布局
7.3.3  普通建筑升级对话框
7.3.4  处理升级请求
7.3.5  带有招兵建筑升级对话框
本章小结
第8章  列表控件——箭塔升级和士兵招募实现
8.1  列表控件
8.1.1  Adapter（适配器）
8.1.2  ListView控件
8.1.3  Spinner控件
8.2  空箭塔升级
8.2.1  空箭塔对话框布局
8.2.2  空箭塔对话框实现
8.2.3  空箭塔升级对话框实现
8.3  招募士兵实现
8.3.1  招募对话框1实现
8.3.2  招募对话框2初始化实现
8.3.3  招募对话框2中单击列表项目事件处理
8.3.4  招募对话框3初始化实现
8.3.5  招募对话框3中单击招募按钮事件处理
8.4  其他模块中的列表控件实现
8.4.1  用户登录画面Spinner控件
8.4.2  战争雷达列表控件
本章小结
第9章  碎片和ActionBar ——空地建房实现
9.1  碎片和ActionBar
9.1.1  碎片
9.1.2  ActionBar
9.2  空地建房实现
9.2.1  从城堡游戏场景跳转到空地建房画面
9.2.2  基础建筑碎片
9.2.3  军事建筑碎片
9.2.4  画面初始化显示
9.2.5  建造处理
本章小结
第10章  嵌套UI布局——构建军机处实现
10.1  军机处画面初始化
10.1.1  从城堡游戏场景跳转到军机处画面
10.1.2  画面初始化服务器请求处理
10.1.3  总览画面的初始化
10.1.4  出兵画面的初始化
10.1.5  军情画面的初始化
10.2  军机处模块的业务处理
10.2.1  总览画面单击侦察按钮
10.2.2  总览画面单击运输按钮
10.2.3  出兵画面单击发兵按钮
10.2.4  军机处单击升级按钮
本章小结
附录  英雄诀游戏基本操作说明
参考文献
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android网络游戏开发实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android数据库程序设计
第1章  在Android系统中存储数据	1
1.1  使用SharedPreferences	1
1.2  SharedPreferences的常见使用案例	3
1.2.1  检查用户是不是第一次访问应用程序	3
1.2.2  应用程序最后一次更新时进行检查	4
1.2.3  保存用户登录用户名	5
1.2.4  保存应用程序的状态	5
1.2.5  缓存用户的位置信息	6
1.3  内部存储方法	7
1.4  外部存储方法	9
1.5  SQLite数据库	13
1.6  总结	17
第2章  使用SQLite数据库	18
2.1  创建高级的SQLite模式	18
2.2  SQLite数据库封装器	21
2.3  调试SQLite数据库	31
2.4  总结	33
第3章  SQLite查询	34
3.1  创建SQLite查询的方法	34
3.2  SELECT语句	35
3.3  WHERE筛选器和SQL操作符	40
3.4  DISTINCT子句和LIMIT子句	42
3.5  ORDER BY子句和GROUP BY子句	45
3.6  HAVING筛选器和聚合函数	50
3.7  SQL及Java间的性能比较	56
3.8  总结	61

第4章  使用Content Providers	63
4.1  ContentProvider	63
4.1.1  实现查询方法	68
4.1.2  实现delete()和update()方法	71
4.1.3  实现insert()和getType()方法	75
4.1.4  与ContentProvider进行交互	78
4.2  实际应用案例	81
4.3  总结	82
第5章  表查询操作	83
5.1  Contacts content provider结构介绍	83
5.2  查询Contacts	85
5.3  修改Contacts	89
5.4  设置权限	93
5.5  总结	94
第6章  UI关联	96
6.1  SimpleCursorAdapter与ListView	96
6.2  自定义CursorAdapter	100
6.3  BaseAdapter与自定义BaseAdapter	103
6.4  处理列表交互	109
6.5  对比CursorAdapters与BaseAdapters	110
6.6  总结	111
第7章  Android数据库应用	113
7.1  本地数据库应用案例	113
7.2  数据库缓存	117
7.3  典型应用程序设计	119
7.4  总结	120
第8章  外部数据库	122
8.1  外部数据库的分类	122
8.2  谷歌应用程序引擎GAE与Java数据对象数据库JDO	124
8.3  GAE：一个视频游戏应用的开发案例	125
8.4  PersistenceManager与查询	128
8.5  总结	136
第9章  数据的收集与存储	137
9.1  数据收集方法	137
9.2  web抓取入门	139
9.3  扩展HTTP servlet GET/POST方法	150
9.4  调度CRON计划任务	153
9.5  总结	154
第10章  综合示例	156
10.1  实现HTTP GET请求	156
10.2  返回至Android系统：解析响应	160
10.3  最后一步：再次关联到用户界面	166
10.4  总结	169
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android数据库程序设计
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入理解Android 5 源代码
第1章 Android系统介绍	1
1．1 Android系统成功的秘诀	1
1．1．1 获取了业界的广泛支持	1
1．1．2 研发阵容强大	1
1．1．3 为开发人员“精心定制”	1
1．1．4 开源	2
1．2 剖析Android系统架构	2
1．2．1 底层操作系统层（OS）	3
1．2．2 各种库（Libraries）和Android
运行环境（RunTime）	3
1．2．3 Application Framework（应用
程序框架）	3
1．2．4 顶层应用程序（Application）	4
1．3 五大组件	4
1．3．1 Activity界面	4
1．3．2 Intent和Intent Filters切换	4
1．3．3 Service（服务）	5
1．3．4 Broadcast Receiver发送广播	5
1．3．5 用Content Provider存储数据	6
1．4 进程和线程	6
1．4．1 什么是进程	6
1．4．2 什么是线程	6
第2章 获取并编译Android源代码	7
2．1 获取Android源代码	7
2．1．1 在Linux系统中获取Android
源代码	7
2．1．2 在Windows平台获取Android
源代码	8
2．2 分析Android源代码结构	10
2．2．1 总体结构	11
2．2．2 应用程序部分	12
2．2．3 应用程序框架部分	13
2．2．4 系统服务部分	13
2．2．5 系统程序库部分	15
2．2．6 硬件抽象层部分	17
2．3 Android源代码提供的接口	18
2．3．1 暴露接口和隐藏接口	18
2．3．2 调用隐藏接口	23
2．4 编译源代码	25
2．4．1 搭建编译环境	25
2．4．2 在模拟器中运行	27
2．5 编译源代码生成SDK	27
第3章 分析Java Native Interface
系统	30
3．1 JNI基础	30
3．1．1 JNI的功能结构	30
3．1．2 JNI的调用层次	30
3．1．3 分析JNI的本质	31
3．2 分析MediaScanner	32
3．2．1 分析Java层	32
3．2．2 分析JNI层	37
3．2．3 分析Native（本地）层	38
3．3 分析Camera系统的JNI	44
3．3．1 Java层预览接口	45
3．3．2 注册预览的JNI函数	46
3．3．3 C/C++层的预览函数	48
第4章 分析HAL系统	49
4．1 HAL基础	49
4．1．1 推出HAL的背景	49
4．1．2 HAL的基本结构	50
4．2 分析HAL module架构	51
4．2．1 hw_module_t	52
4．2．2 结构hw_module_methods_t
的定义	52
4．2．3 hw_device_t结构	53
4．3 分析文件hardware．c	53
4．3．1 寻找动态链接库的地址	53
4．3．2 数组variant_keys	54
4．3．3 载入相应的库	54
4．3．4 获得hw_module_t结构体	54
4．4 分析硬件抽象层的加载过程	55
4．5 分析硬件访问服务	58
4．5．1 定义硬件访问服务接口	58
4．5．2 具体实现	59
4．6 分析Android官方实例	60
4．6．1 获取实例工程源代码	60
4．6．2 直接调用Service方法的
实现代码	61
4．6．3 通过Manager调用Service
的实现代码	64
4．7 HAL和系统移植	66
4．7．1 移植各个Android部件
的方式	66
4．7．2 设置设备权限	67
4．7．3 init．rc初始化	70
4．7．4 文件系统的属性	70
第5章 分析IPC通信机制	72
5．1 Binder机制概述	72
5．2 分析Binder驱动程序	73
5．2．1 分析数据结构	73
5．2．2 分析设备初始化	82
5．2．3 打开Binder设备文件	83
5．2．4 内存映射	85
5．2．5 释放物理页面	89
5．2．6 分配内核缓冲区	89
5．2．7 释放内核缓冲区	91
5．2．8 查询内核缓冲区	93
5．3 Binder封装库	93
5．3．1 类BBinder	94
5．3．2 类BpRefBase	96
5．3．3 类IPCThreadState	97
5．4 初始化Java层Binder框架	99
5．5 分析MediaServer的通信机制	101
5．5．1 MediaServer的入口函数	101
5．5．2 ProcessState	102
5．5．3 defaultServiceManager	103
5．5．4 注册MediaPlayerService	108
5．5．5 分析StartThread Pool和
join Thread Pool	117
第6章 分析Binder对象和Java接口	119
6．1 分析实体对象（binder_node）	119
6．2 分析本地对象（BBinder）	121
6．3 分析引用对象（binder_ref）	129
6．4 分析代理对象（BpBinder）	131
6．5 分析Java接口	134
6．5．1 获取Service Manager	134
6．5．2 分析ActivityManagerService
的Java层	138
第7章 分析ServiceManager和
MessageQueue	151
7．1 分析ServiceManager	151
7．1．1 分析主入口函数	151
7．1．2 打开Binder设备文件	152
7．1．3 注册处理	154
7．1．4 创建Binder实体对象	156
7．1．5 尽职的循环	157
7．1．6 将信息注册到
ServiceManager	162
7．1．7 分析MediaPlayerService
和Client	164
7．2 获得Service Manager接口	169
7．3 分析MessageQueue	171
7．3．1 创建MessageQueue	171
7．3．2 提取消息	171
7．3．3 分析函数nativePollOnce	174
第8章 init进程和Zygote进程	182
8．1 分析init进程	182
8．1．1 分析入口函数	182
8．1．2 分析配置文件	185
8．1．3 分析Service	190
8．1．4 解析on字段的内容	195
8．1．5 init控制Service	197
8．1．6 控制属性服务	204
8．2 分析Zygote（孕育）进程	210
8．2．1 Zygote基础	211
8．2．2 分析Zygote的启动过程	211
第9章 System进程和应用程序进程	224
9．1 分析System进程	224
9．1．1 启动System进程前
的准备工作	224
9．1．2 分析SystemServer	225
9．1．3 分析EntropyService	227
9．1．4 分析DropBoxManager
Service	229
9．1．5 分析DiskStatsService	234
9．1．6 分析DeviceStorageManager
Service（监测系统内存存储
空间的状态）	237
9．1．7 分析SamplingProfiler
Service	239
9．2 分析应用程序进程	246
9．2．1 创建应用程序	246
9．2．2 启动线程池	254
9．2．3 创建信息循环	255
第10章 分析Activity组件	258
10．1 Activity基础	258
10．1．1 Activity状态	258
10．1．2 剖析Activity中的
主要函数	259
10．2 分析Activity的启动源代码	260
10．2．1 Launcher启动应用程序	261
10．2．2 返回ActivityManagerService
的远程接口	262
10．2．3 解析intent的内容	263
10．2．4 分析检查机制	265
10．2．5 执行Activity组件的操作	274
10．2．6 将Launcher推入Paused
状态	279
10．2．7 处理消息	281
10．2．8 暂停完毕	282
10．2．9 建立双向连接	285
10．2．10 启动新的Activity	289
10．2．11 通知机制	291
10．2．12 发送消息	292
第11章 应用程序管理服务——PackageManagerService分析	295
11．1 PackageManagerService概述	295
11．2 系统进程启动	296
11．3 开始运行	296
11．4 扫描APK文件	306
11．5 解析并安装文件	307
11．6 启动系统默认Home应用程序
Launcher	323
11．6．1 设置系统进程	323
11．6．2 启动Home应用程序	324
11．6．3 启动com．android．launcher2． Launcher	330
11．6．4 加载应用程序	333
11．6．5 获得Activity	336
第12章 Content Provider存储机制	341
12．1 Content Provider基础	341
12．1．1 Content Provider在应用
程序中的架构	341
12．1．2 Content Provider的常用
接口	342
12．2 启动Content Provider	343
12．2．1 获得对象接口	343
12．2．2 存在校验	344
12．2．3 启动Android应用程序	348
12．2．4 根据进程启动Content
Provider	348
12．2．5 处理消息	352
12．2．6 具体启动	354
12．3 Content Provider数据共享	356
12．3．1 获取接口	356
12．3．2 创建CursorWindow对象	358
12．3．3 数据传递	361
12．3．4 处理进程通信的请求	362
12．3．5 数据操作	367
第13章 分析广播机制源代码	370
13．1 Broadcast基础	370
13．2 发送广播信息	371
13．2．1 intent描述指示	371
13．2．2 传递广播信息	371
13．2．3 封装传递	372
13．2．4 处理发送请求	372
13．2．5 查找广播接收者	373
13．2．6 处理广播信息	375
13．2．7 检查权限	382
13．2．8 处理的进程通信请求	384
13．3 分析BroadCastReceiver	386
13．3．1 MainActivity的调用	386
13．3．2 注册广播接收者	387
13．3．3 获取接口对象	388
13．3．4 处理进程间的通信请求	390
第14章 分析电源管理系统	392
14．1 Power Management架构基础	392
14．2 分析Framework层	392
14．2．1 文件PowerManager．java	393
14．2．2 提供PowerManager功能	393
14．3 JNI层架构分析	410
14．3．1 定义了两层之间的
接口函数	410
14．3．2 与Linux Kernel层
进行交互	411
14．4 Kernel（内核）层架构分析	411
14．4．1 文件power．c	412
14．4．2 文件earlysuspend．c	414
14．4．3 文件wakelock．c	414
14．4．4 文件resume．c	416
14．4．5 文件suspend．c	416
14．4．6 文件main．c	417
14．4．7 proc文件	417
14．5 wakelock和early_suspend	418
14．5．1 wakelock的原理	418
14．5．2 early_suspend的原理	419
14．5．3 Android休眠	419
14．5．4 Android唤醒	421
14．6 Battery电池系统架构和管理	421
14．6．1 实现驱动程序	422
14．6．2 实现JNI本地代码	422
14．6．3 Java层代码	423
14．6．4 实现Uevent部分	424
14．7 JobScheduler节能调度机制	428
14．7．1 JobScheduler机制的
推出背景	428
14．7．2 JobScheduler的实现	428
14．7．3 实现操作调度	429
14．7．4 封装调度任务	431
第15章 分析WindowManagerService
系统	434
15．1 WindowManagerService基础	434
15．2 计算Activity窗口的大小	435
15．2．1 实现View遍历	436
15．2．2 函数relayoutWindow	446
15．2．3 函数relayoutWindow	447
15．2．4 拦截消息的处理类	466
15．2．5 判断是否计算过	477
第16章 分析电话系统	482
16．1 Android电话系统详解	482
16．1．1 电话系统简介	482
16．1．2 电话系统结构	483
16．1．3 驱动程序介绍	485
16．1．4 RIL接口	486
16．1．5 分析电话系统的实现流程	488
16．2 电话系统中的音频模块	493
16．2．1 音频系统结构	493
16．2．2 分析音频系统的层次	494
16．3 分析拨号流程	501
16．3．1 拨号界面	501
16．3．2 实现Phone应用	504
16．3．3 Call通话控制	507
16．3．4 静态方法调用	510
16．3．5 通话管理	512
16．3．6 dial拨号	514
16．3．7 状态跟踪	515
16．3．8 RIL消息“出/入”口	516
16．3．9 显示通话主界面	517
第17章 分析短信系统	518
17．1 短信系统的主界面	518
17．2 发送普通短信	520
17．3 发送彩信	530
17．4 接收短信	537
17．4．1 Java应用层的接收流程	538
17．4．2 Framework层的处理过程	540
第18章 Sensor传感器系统详解	542
18．1 Android传感器系统概述	542
18．2 Java层详解	543
18．3 Frameworks层详解	548
18．3．1 监听传感器的变化	548
18．3．2 注册监听	548
18．4 JNI层详解	556
18．4．1 实现Native（本地）函数	557
18．4．2 处理客户端数据	561
18．4．3 处理服务端数据	563
18．4．4 封装HAL层的代码	572
18．4．5 处理消息队列	576
18．5 HAL层详解	578
第19章 分析SEAndroid系统	585
19．1 SEAndroid概述	585
19．1．1 内核空间	587
19．1．2 用户空间	588
19．2 文件安全上下文	596
19．2．1 设置打包在ROM里面
的文件的安全上下文	597
19．2．2 设置虚拟文件系统的
安全上下文	600
19．2．3 设置应用程序数据文件的
安全上下文	601
19．3 进程安全上下文	612
19．3．1 为独立进程静态地设置
安全上下文	612
19．3．2 为应用程序进程设置
安全上下文	615
第20章 分析ART系统	621
20．1 对比Dalvik VM和ART	621
20．2 启动ART	623
20．2．1 运行app_process进程	624
20．2．2 准备启动	627
20．2．3 创建运行实例	632
20．2．4 注册本地JNI函数	633
20．2．5 启动守护进程	634
20．2．6 解析参数	635
20．2．7 初始化类、方法和域	641
20．3 分析主函数main	647
20．4 查找目标类	648
20．4．1 函数LookupClass()	648
20．4．2 函数DefineClass()	650
20．4．3 函数InsertClass()	653
20．4．4 函数LinkClass()	653
20．5 类操作	655
20．6 实现托管操作	656
20．7 加载OAT文件	660
20．7．1 产生OAT	660
20．7．2 创建ART虚拟机	661
20．7．3 解析启动参数并创建堆	663
20．7．4 生成指定目录文件	665
20．7．5 加载OAT文件	666
20．7．6 解析字段	668
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入理解Android 5 源代码
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Construct 2 遊戲程式設計
CHAPTER 1 軟體介紹
CHAPTER 2 介面基礎認識
CHAPTER 3 專案進階操作
CHAPTER 4 邏輯與流程控制
CHAPTER 5 基礎應用練習
CHAPTER 6 進階應用範例
CHAPTER 7 遊戲製作範例
CHAPTER 8 專案輸出
附錄A 插件手冊（收錄於光碟中）
附錄B 行為特性手冊（收錄於光碟中）
附錄C 經典範例 - 卡牌配對遊戲（收錄於光碟中）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Construct 2 遊戲程式設計
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android开发与应用
第1章Android简介1．1手机操作系统 1．2Android起源1．3Android特征 1．4Android体系结构1．4．1应用层 1．4．2应用框架层 1．4．3系统库层 1．4．4内核层 1．5小结练习第2章Android开发环境2．1Java开发环境安装2．1．1安装JDK2．1．2安装Eclipse2．1．3Eclipse中文包的安装2．2AndroidSDK2．2．1安装ADT2．2．2安装AndroidSDK2．3Android模拟器2．3．1创建AVD2．3．2开发环境测试2．3．3模拟器的使用2．4SDK中的常用命令2．4．1adb命令2．4．2Android命令2．5小结练习第3章Android应用程序框架3．1第一个Android应用程序3．2Android项目结构3．3APK文件结构3．4Android应用程序权限3．5Activity及其生命周期 3．5．1什么是Activity3．5．2Activity生命周期 3．6Intent简介3．6．1Intent属性与过滤器3．6．2Intent启动系统Activity3．7小结练习第4章视图组件4．1视图组件的使用模式4．1．1视图组件的定义4．1．2资源的访问4．1．3生成视图组件资源标识4．1．4视图组件的引用4．1．5视图组件的事件响应4．1．6组件的常用属性4．2常用组件4．2．1文本框4．2．2编辑框4．2．3图片按钮4．2．4图片视图4．2．5单选按钮4．2．6复选按钮4．2．7下拉列表4．2．8自动完成文本框4．2．9日期、时间选择器4．3高级组件4．3．1进度条4．3．2拖动条4．3．3评分条4．3．4选项卡4．4提示框与警告对话框4．4．1消息提示框4．4．2警告对话框4．5小结练习第5章视图界面布局 5．1界面布局设计5．1．1线性布局 5．1．2表格布局 5．1．3帧布局 5．1．4相对布局 5．1．5绝对布局 5．1．6复用XML布局文件5．2控制视图界面的其他方法5．2．1代码控制视图界面5．2．2代码和XML联合控制视图界面5．3多界面的使用5．3．1使用Intent封装数据5．3．2使用Bundle封装数据5．3．3获取另一个界面返回结果5．4小结练习第6章Android数据存储与共享6．1数据存储与共享方式概述6．2首选项信息6．2．1私有数据存储6．2．2公有数据存储与共享6．3数据文件6．3．1内存数据文件6．3．2SD卡数据文件6．4SQLite数据库6．4．1SQLite基本操作6．4．2SQLiteOpenHelper6．5ContentProvider6．5．1使用ContentProvider发布数据6．5．2使用ContentResolver获取数据6．6小结练习第7章多线程及消息处理7．1Android多线程概述7．1．1创建线程7．1．2操作线程7．2UI线程与非UI线程7．3多线程中的常用类7．3．1Handler类7．3．2AsyncTask类7．3．3Timer定时器7．4Android多线程通信机制7．5小结练习第8章网络通信8．1通过HTTP访问网络8．1．1测试用Web服务器8．1．2WebView组件8．1．3HttpURLConnection8．2Socket编程8．3数据的解析8．3．1JSON数据解析8．3．2XML数据解析8．4WebService访问8．5小结练习第9章多媒体应用9．1音频与视频的播放9．1．1MediaPlayer9．1．2SoundPool9．1．3VideoView9．1．4SurfaceView9．2摄像头的使用9．2．1摄像头意图Intent9．2．2Camera类9．3小结练习实验一 Android开发环境搭建实验二界面设计：基本组件实验三界面设计：布局管理器实验四多线程应用实验五基于文件的日程安排实验六基于SQLite的通信录实验七天气预报应用实验八音乐播放器及相机拍摄参考文献
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android开发与应用
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>程序员藏经阁
第1章  见龙在田：ANDROID平台简介	1
1.1  ANDROID介绍	2
1.1.1  ANDROID的发展	2
1.1.2  ANDROID优势	3
1.2  平台架构及特性	4
1.3  开发环境搭建	6
1.3.1  JAVA下载安装	7
1.3.2  ANDROID SDK下载	9
1.3.3  ECLIPSE下载安装	9
1.3.4  ECLIPSE配置	10
1.3.5  模拟器的创建	13
1.4  第一个ANDROID应用	15
1.4.1  创建ANDROID项目	15
1.4.2  运行调试ANDROID项目	18
1.5  总结	22
1.6  习题	22
第2章  飞龙在天：ANDROID 应用程序的构成	23
2.1  ANDROID工程目录分析	24
2.2  资源的管理与使用	28
2.2.1  布局资源的使用	28
2.2.2  颜色资源的使用	30
2.2.3  图片资源的使用	32
2.3  权限控制	33
2.4  ANDROID基本组件的介绍	37
2.4.1  应用程序的生命周期	37
2.4.2  ACTIVITY简介	38
2.4.3  SERVICE简介	39
2.4.4  BROADCASTRECEIVER简介	39
2.4.5  CONTENTPROVIDER简介	40
2.4.6  Intent和IntentFilter简介	41
2.5  总结	43
2.6  习题	43
第3章运  转乾坤：Android布局管理器	44
3.1  帧布局	45
3.1.1  FrameLayout类简介	45
3.1.2  帧布局使用	45
3.2  线性布局	48
3.2.1  LinearLayout类简介	48
3.2.2  线性布局使用	49
3.3  表格布局	52
3.3.1  TableLayout类简介	52
3.3.2  表格布局使用	53
3.4  相对布局	58
3.4.1  RelativeLayout类简介	58
3.4.2  相对布局使用	59
3.5  绝对布局	61
3.5.1  AbsoluteLayout类简介	61
3.5.2  绝对布局使用	61
3.6  切换卡（TabWidget）	65
3.6.1  TabWidget类简介	65
3.6.2  切换卡使用	66
3.7  总结	69
3.8  习题	69
第4章  仙人指路：Android 常用基本控件	70
4.1  控件类概述	71
4.1.1  View类简介	71
4.1.2  ViewGroup类简介	71
4.2  基本文本控件	72
4.2.1  TextView类简介	72
4.2.2  EditText类简介	73
4.2.3  文本框使用	73
4.3  自动提示文本框	78
4.3.1  AutoCompleteTextView类简介	78
4.3.2  自动提示文本使用	79
4.4  滚动视图	80
4.4.1  SCROLLVIEW类简介	80
4.4.2  滚动视图使用	80
4.5  按钮控件	82
4.5.1  BUTTON控件的使用	82
4.5.2  IMAGEBUTTON控件的使用	84
4.5.3  9PATCH图片的创建	86
4.5.4  9PATCH图片的使用	87
4.6  选择按钮	89
4.6.1  CHECKBOX和RADIOBUTTON类简介	89
4.6.2  选择按钮使用	90
4.7  状态开关按钮	93
4.7.1  TOGGLEBUTTON类简介	93
4.7.2  开关按钮的使用	93
4.8  图片控件	96
4.8.1  IMAGEVIEW类简介	96
4.8.2  图片查看器	96
4.9  时钟控件	100
4.9.1  ANALOGCLOCK类和DIGITALCLOCK类简介	100
4.9.2  时钟控件使用案例	101
4.10  日期与时间选择控件	102
4.10.1  DATEPICKER类简介	102
4.10.2  TIMEPICKER类简介	103
4.10.3  日期时间控件使用案例	103
4.11  综合案例	106
4.11.1  体重计算器	106
4.11.2  登录界面	108
4.12  总结	116
4.13  习题	116
第5章  渔樵问路：ANDROID 常用高级控件和事件处理	117
5.1  下拉列表控件	118
5.1.1  SPINNER类简介	118
5.1.2  下拉列表使用	118
5.2  滑块与进度条	122
5.2.1  PROGRESSBAR类简介	122
5.2.2  SEEKBAR类简介	122
5.2.3  滑块和进度条使用	122
5.3  星级滑块	124
5.3.1  RatingBar类简介	124
5.3.2  星级滑块使用	124
5.4  菜单功能	126
5.4.1  选项菜单简介	126
5.4.2  选项菜单使用	129
5.4.3  上下文菜单	134
5.5  对话框功能的开发	138
5.5.1  对话框简介	138
5.5.2  普通对话框	139
5.5.3  列表对话框	142
5.5.4  单选按钮对话框	145
5.6  事件处理	147
5.6.1  Android的事件处理模型	147
5.6.2  OnClickListener接口简介	148
5.6.3  OnLongClickListener接口简介	151
5.6.4  OnFocusChangeListener接口简介	153
5.6.5  OnKeyListener接口简介	157
5.6.6  OnTouchListener接口简介	160
5.7  综合案例	163
5.7.1  人物评分	164
5.7.2  爱好调查	168
5.8  总结	174
5.9  习题	175
第6章  推窗望月：高级视图与动画	176
6.1  列表视图	177
6.1.1  ListView类简介	177
6.1.2  列表视图使用	177
6.2  网格视图	181
6.2.1  GridView类简介	181
6.2.2  网格视图使用	181
6.3  画廊视图	186
6.3.1  Gallery类简介	186
6.3.2  画廊使用	187
6.4  HorizontalScrollView控件	189
6.4.1  HorizontalScrollView类简介	189
6.4.2  HorizontalScrollView控件使用案例	190
6.5  多页视图	192
6.5.1  ViewPager类简介	192
6.5.2  ViewPager使用	192
6.6  动画播放技术	195
6.6.1  帧动画（Frame Animation）简介	195
6.6.2  帧动画的使用	196
6.6.3  补间动画（Tween Animation）简介	198
6.6.4  补间动画的使用	199
6.7  消息提示	202
6.7.1  Toast的使用	202
6.7.2  Notification的使用	204
6.8  综合案例	208
6.8.1  四宫格	208
6.8.2  镜像特效	213
6.9  总结	218
6.10  习题	218
第7章  大鹏展翅：应用程序组件	219
7.1  Activity——活动	220
7.1.1  Activity简介	220
7.1.2  Activity跳转	226
7.2  Service——服务	235
7.2.1  创建服务	235
7.2.2  开始服务方式	239
7.2.3  绑定服务方式	242
7.2.4  服务总结	245
7.3  BroadcastReceiver——广播	246
7.3.1  自定义广播	246
7.3.2  系统广播——短信广播	252
7.4  消息处理	257
7.4.1  Handler类简介	257
7.4.2  进度条更新	257
7.4.3  搜索SD卡文件	261
7.4.4  异步处理总结	267
7.5  综合案例	267
7.5.1  开机欢迎	267
7.5.2  组件通信	270
7.6  总结	274
7.7  习题	275
第8章  凌波微步：Android数据存储	276
8.1  Android文件结构	277
8.1.1  系统文件	277
8.1.2  数据文件	278
8.1.3  外部储存文件	279
8.2  数据存储的方式	279
8.3  SharedPreferences存储	280
8.4  程序私有文件	284
8.5  读/写SD卡文件	288
8.6  SQLite数据库的使用	297
8.6.1  数据库的创建	298
8.6.2  表的创建	300
8.6.3  表中数据的增、删、改操作	302
8.6.4  表中数据的查询操作	305
8.7  SQLiteOpenHelper的使用	307
8.8  数据共享	311
8.8.1  共享的图书信息	311
8.8.2  内容提供者（ContentProvider）	313
8.8.3  内容解析器（ContentResolver）	319
8.8.4  运行分析总结	321
8.9  综合案例	322
8.9.1  文件浏览器	322
8.9.2  个人通讯录	327
8.10  总结	335
8.11  习题	336
第9章  斗转星移：网络通信	337
9.1  网络通信方式	338
9.2  TCP通信	338
9.2.1  PC服务器端	339
9.2.2  Android控制端	342
9.3  UDP通信	344
9.3.1  UDP简介	344
9.3.2  UDP的使用	346
9.3.3  运行测试	349
9.4  HTTP通信	351
9.4.1  GET请求方式	351
9.4.2  POST请求方式	353
9.4.3  XML解析	356
9.5  WebView	360
9.5.1  WebView简介	360
9.5.2  简易浏览器	361
9.6  综合案例	366
9.6.1  Android鼠标	366
9.6.2  在线查询	379
9.7  总结	383
9.8  习题	383
第10章  弄玉吹箫:多媒体	384
10.1  音频播放	385
10.1.1  从资源文件中播放	385
10.1.2  从外部文件中播放	391
10.1.3  从网络中播放	393
10.2  录制多媒体	395
10.3  使用摄像头	403
10.3.1  控制摄像头拍照	403
10.3.2  控制摄像头摄像	413
10.4  综合案例	423
10.4.1  音乐播放器	423
10.4.2  手电	434
10.5  总结	436
10.6  习题	437
第11章  盘龙吐信：通信开发	438
11.1  语音通话	439
11.1.1  呼出电话	439
11.1.2  来电防火墙	442
11.1.3  自动接通电话	447
11.2  短信导出	448
11.2.1  系统短信的保存	449
11.2.2  导出短信	450
11.3  短信收发软件	458
11.3.1  短信防火墙	458
11.3.2  系统发送短信	461
11.3.3  直接发送短信	463
11.4  综合案例	468
11.4.1  电话免打扰	468
11.4.2  手机信息获取	473
11.5  总结	475
11.6  习题	476
第12章  天柱云气：感应器的使用	477
12.1  GPS信息	478
12.2  谷歌地图	482
12.2.1  Map使用	483
12.2.2  位置显示	488
12.2.3  位置标记	492
12.2.4  测量MapView上两点间的距离	500
12.3  谷歌街景	511
12.4  传感器介绍	514
12.4.1  世界坐标系	515
12.4.2  旋转坐标系	516
12.4.3  传感器模拟器的使用	516
12.5  传感器的获取	520
12.5.1  传感器列表	520
12.5.2  传感器的值	522
12.6  综合案例	525
12.6.1  计步器应用	525
12.6.2  小球游戏	530
12.7  总结	536
12.8  习题	536
第13章  帘下梳妆：天气预报	537
13.1  天气信息获取	538
13.2  天气信息显示	546
13.3  温度变化趋势	550
13.4  城市管理	558
13.5  运行调试	563
13.6  总结	564
13.7  习题	564
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>程序员藏经阁
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>App研发录：架构设计、Crash分析和竞品技术分析
Contents?目    录
序一
序二
序三
前言
第一部分  高效App框架设计与重构
第1章  重构，夜未眠  3
1.1  重新规划Android项目结构  3
1.2  为Activity定义新的生命周期  5
1.3  统一事件编程模型  7
1.4  实体化编程  9
1.4.1  在网络请求中使用实体  9
1.4.2  实体生成器  11
1.4.3  在页面跳转中使用实体  12
1.5  Adapter模板  14
1.6  类型安全转换函数  16
1.7  本章小结  17
第2章  Android网络底层框架设计  19
2.1  网络低层封装  19
2.1.1  网络请求的格式  19
2.1.2  AsyncTask的使用和缺点  21
2.1.3  使用原生的ThreadPoolExecutor + Runnable + Handler  24
2.1.4  网络底层的一些优化工作  28
2.2  App数据缓存设计  32
2.2.1  数据缓存策略  32
2.2.2  强制更新  35
2.3  MockService  36
2.4  用户登录  38
2.4.1  登录成功后的各种场景  39
2.4.2  自动登录  41
2.4.3  Cookie过期的统一处理  44
2.4.4  防止黑客刷库  45
2.5  HTTP头中的奥妙  46
2.5.1  HTTP请求  46
2.5.2  时间校准  48
2.5.3  开启gzip压缩  51
2.6  本章小结  52
第3章  Android经典场景设计  53
3.1  App图片缓存设计  53
3.1.1  ImageLoader设计原理  53
3.1.2  ImageLoader的使用  54
3.1.3  ImageLoader优化  55
3.1.4  图片加载利器Fresco  56
3.2  对网络流量进行优化  58
3.2.1  通信层面的优化  58
3.2.2  图片策略优化  59
3.3  城市列表的设计  61
3.3.1  城市列表数据  61
3.3.2  城市列表数据的增量更新机制  63
3.4  App与HTML5的交互  64
3.4.1  App操作HTML5页面的方法  64
3.4.2  HTML5页面操作App页面的方法  65
3.4.3  App和HTML5之间定义跳转协议  66
3.4.4  在App中内置HTML5页面  67
3.4.5  灵活切换Native和HTML5页面的策略  68
3.4.6  页面分发器  68
3.5  消灭全局变量  70
3.5.1  问题的发现  70
3.5.2  把数据作为Intent的参数传递  71
3.5.3  把全局变量序列化到本地  71
3.5.4  序列化的缺点  75
3.5.5  如果Activity也被销毁了呢  79
3.5.6  如何看待SharedPreferences  80
3.5.7  User是唯一例外的全局变量  80
3.6  本章小结  81
第4章  Android命名规范和编码规范  83
4.1  Android命名规范  83
4.2  Android编码规范  86
4.3  统一代码格式  89
4.4  本章小结  90
第二部分  App开发中的高级技巧
第5章  Crash异常收集与统计  93
5.1  异常收集  93
5.2  异常收集与统计  96
5.2.1  人工统计线上Crash数据  96
5.2.2  第一个线上Crash报表：Crash分类  97
5.2.3  第二个线上Crash报表：Crash去重  99
5.2.4  线上Crash的其他分析工作  104
5.3  本章小结  105
第6章  Crash异常分析  107
6.1  Java语法相关的异常  108
6.1.1  空指针  108
6.1.2  角标越界  109
6.1.3  试图调用一个空对象的方法  110
6.1.4  类型转换异常  110
6.1.5  数字转换错误  111
6.1.6  声明数组时长度为-1  111
6.1.7  遍历集合同时删除其中元素  112
6.1.8  比较器使用不当  114
6.1.9  当除数为0  115
6.1.10  不能随便使用的asList  116
6.1.11  又有类找不到了（一）：ClassNotFoundException  116
6.1.12  又有类找不到了（二）：NoClassDefFoundError  117
6.2  Activity相关的异常  117
6.2.1  找不到Activity  117
6.2.2  不能实例化Activity  118
6.2.3  找不到Service  118
6.2.4  不能启动BroadcastReceiver  119
6.2.5  startActivityForResult不能回传  119
6.2.6  猴急的Fragment  120
6.3  序列化相关的异常  120
6.3.1  实体对象不支持序列化  121
6.3.2  序列化时未指定ClassLoader  121
6.3.3  反序列化时发现类找不到：被ProGuard混淆导致的崩溃  122
6.3.4  反序列化时发现类找不到：传入畸形数据  123
6.3.5  反序列化时出错  123
6.4  列表相关的异常  123
6.4.1  Adapter数据源变化但是没通知ListView  124
6.4.2  ListView滚动时点击刷新按钮后崩溃  125
6.4.3  AbsListView的obtainView返回空指针  125
6.4.4  Adapter数据源变化但是没调用notifyDataSetChanged  126
6.5  窗体相关的异常  126
6.5.1  窗口句柄泄露  126
6.5.2  View not attached to window manager  128
6.5.3  窗体在不恰当的时候获取了焦点  129
6.5.4  token null is not for an application  130
6.5.5  permission denied for this window type  131
6.5.6  is your activity running  131
6.5.7  添加窗体失败  133
6.5.8  AlertDialog.resolveDialogTheme  134
6.5.9  The specif?ied child already has a parent  136
6.5.10  子线程不能修改UI  137
6.5.11  不能在子线程操作AlertDialog和Toast  141
6.6  资源相关的异常  143
6.6.1  Resources$NotFoundException  143
6.6.2  StackOverf?iowError  144
6.6.3  Unsatisf?iedLinkError  144
6.6.4  Inf?iateException之FileNotFoundException  145
6.6.5  Inf?iateException之缺少构造器  145
6.6.6  Inf?iateException之style与android:textStyle的区别  146
6.6.7  TransactionTooLargeException  147
6.7  系统碎片化相关的异常  147
6.7.1  NoSuchMethodError  147
6.7.2  RemoteViews  148
6.7.3  pointerIndex out of range  149
6.7.4  SecurityException之一：Intent中图片太大  150
6.7.5  SecurityException之二：动态加载其他apk的activity  151
6.7.6  SecurityException之三：No permission to modify thread  151
6.7.7  view的getDrawingCache()返回null  152
6.7.8  DeadObjectException  153
6.7.9  Android 2.1不支持SSL  153
6.7.10  ViewFlipper引发的血案  153
6.7.11  ActivityNotFoundException  154
6.7.12  Android 2.2不支持xlargeScreens  154
6.7.13  Package manager has died  155
6.7.14  SpannableString与富文本字符串  155
6.7.15  Can not perform this action after onSaveInstanceState  156
6.7.16  Service Intent must be explicit  157
6.8  SQLite相关的异常  157
6.8.1  No transaction is active  158
6.8.2  忘记关闭Cursor  158
6.8.3  数据库被锁定  159
6.8.4  试图再打开已经关闭的对象  159
6.8.5  文件加密了或无数据库  159
6.8.6  WebView中SQLLite缓存导致的崩溃  160
6.8.7  磁盘读写错误  161
6.8.8  android_metadata表不存在  161
6.8.9  android_metadata表中的locale字段  162
6.8.10  数据库或磁盘满了  162
6.9  不明觉厉的异常  162
6.9.1  内存溢出  163
6.9.2  Verify Failed  163
6.10  其他情况的异常  163
6.10.1  TimeoutException  164
6.10.2  JSON解析异常  164
6.10.3  JSONArray在初始化时为空  164
6.10.4  第三方SDK抛出的Crash  165
6.10.5  两个不同类型的View有相同的id  165
6.10.6  LayoutInf?iater.from().inf?iate()使用不当导致的崩溃  166
6.10.7  ViewGroup中的玄机  166
6.10.8  Monkey点击过快导致的崩溃  167
6.10.9  图片缩放很多倍  168
6.10.10  图片宽高为0  168
6.10.11  不能重复添加组件  168
6.11  本章小结  169
第7章  ProGuard技术详解  171
7.1  ProGuard简介  171
7.2  ProGuard工作原理  172
7.3  如何写一个ProGuard文件  172
7.3.1  基本混淆  172
7.3.2  针对App的量身定制  175
7.3.3  针对第三方jar包的解决方案  177
7.4  其他注意事项  178
7.5  本章小结  179
第8章  持续集成  181
8.1  版本管理策略  181
8.1.1  三种版本管理策略  181
8.1.2  特殊情况的版本管理策略  183
8.2  使用Ant脚本打包  184
8.2.1  Android打包流程  184
8.2.2  打包时的注意事项  189
8.3  Monkey包的生成  190
8.4  自动打包  191
8.4.1  安装和配置各种软件  192
8.4.2  准备Ant打包脚本  193
8.4.3  配置CCNET  193
8.4.4  搭建IIS站点下载apk包  193
8.4.5  自动打包流程小结  193
8.5  批量打渠道包  194
8.5.1  基于apk包批量生成渠道包  194
8.5.2  基于代码批量生成渠道包  195
8.6  Android发版流程  197
8.7  分类打渠道包  198
8.7.1  分门别类生成渠道包  198
8.7.2  批量上传apk的两种方式  199
8.8  灵活切换服务器  199
8.9  单元测试  201
8.10  本章小结  203
第9章  App竞品技术分析  205
9.1  竞品分析概述  205
9.1.1  App竞品定义  205
9.1.2  竞品分析要研究的几个方向  206
9.1.3  竞品分析与拿来主义  206
9.2  App安装包的结构  207
9.2.1  Android安装包的结构  207
9.2.2  iOS安装包的结构  208
9.3  竞品技术一瞥：开机速度  208
9.4  竞品技术二瞥：HTML5页面的打开速度  209
9.4.1  把HTML5页面嵌入到Zip包中  209
9.4.2  Zip包的增量更新机制  209
9.4.3  制作Zip增量包  210
9.4.4  使用WebView预先加载HTML5并缓存到本地  211
9.5  竞品技术三瞥：安装包的大小  211
9.5.1  从几件小事说起  211
9.5.2  安装包为什么那么大  212
9.5.3  png和jpg的区别及使用场景  212
9.5.4  Splash、引导图和背景图  213
9.5.5  iOS的1倍图、2倍图和3倍图  213
9.5.6  在iOS中进行图片拉伸和旋转  214
9.5.7  使用XML配置动画  214
9.5.8  iOS使用storyboard还是xib  215
9.5.9  字体文件的学问  215
9.5.10  表情图片打包下载  217
9.5.11  清除未使用图片  218
9.5.12  Proguard不只是用来混淆的  218
9.5.13  在iOS中使用pdf格式的图片  218
9.5.14  iOS的包永远比Android包体积大吗  219
9.5.15  从代码层面减少iOS包的体积  220
9.6  竞品技术四瞥：性能优化  220
9.6.1  App自动选取最佳服务器的策略  220
9.6.2  使用TCP+Protobuf  222
9.7  竞品技术五瞥：数据采集工具  223
9.7.1  页面跳转器  223
9.7.2  打点统计  226
9.7.3  ABTest  230
9.8  竞品技术六瞥：热修补  232
9.8.1  Native页面和HTML5页面的相互切换  232
9.8.2  在iOS中使用脚本编程  233
9.9  竞品技术七瞥：曲径通幽  237
9.9.1  一切皆可配置  237
9.9.2  App后门  238
9.9.3  Android包中META-INF目录的妙用  239
9.9.4  classes.dex的拆与合  241
9.10  竞品技术八瞥：模块化拆分  242
9.10.1  iOS资源拆分与模块化  242
9.10.2  Android模块化拆分  243
9.11  竞品技术九瞥：第三方SDK  244
9.11.1  HTML5篇  244
9.11.2  iOS篇  245
9.11.3  Android篇  245
9.11.4  其他  246
9.12  竞品技术十瞥：版本策略与App彩蛋  246
9.12.1  版本策略  246
9.12.2  App彩蛋  246
9.13  本章小结  247
第三部分  项目管理和团队建设
第10章  项目管理决定了开发速度  251
10.1  项目管理中的三驾马车  251
10.1.1  为什么不能没有测试团队  252
10.1.2  产品经理应做的事  253
10.1.3  开发人员的喜怒哀乐  254
10.1.4  项目经理的职责  254
10.2  优化团队结构，让敏捷流程跑得更快  255
10.2.1  平行模式还是垂直模式  255
10.2.2  让HTML5站点和MobileAPI的进度提前一个迭代  256
10.2.3  如何进行模块化分工  256
10.3  App敏捷开发流程  257
10.3.1  四周时间的开发流程  257
10.3.2  两周时间的开发流程  261
10.3.3  一周时间的开发流程  262
10.3.4  即时更新策略  263
10.4  项目经理的百宝箱  263
10.4.1  项目经理的任务评估表  263
10.4.2  贴小纸条的艺术  264
10.4.3  敏捷迭代中的会议纪要  265
10.4.4  开站例会的技巧  266
10.4.5  如何确保项目不延期  268
10.4.6  迭代风险管理  268
10.5  迭代中的测试工作  269
10.5.1  冒烟测试  269
10.5.2  探索性测试  271
10.5.3  Monkey测试  271
10.6  高层对敏捷流程的干预  272
10.6.1  重构与产品需求的平衡  272
10.6.2  提高效率，拒绝6×12  273
10.6.3  无线部门的座位安排  274
10.6.4  静时  276
10.7  本章小结  277
第11章  日常工作中的问题解决  279
11.1  使用二分法排查问题  279
11.2  找到能稳定重现问题的人  281
11.3  小流量包  282
11.4  建立全国范围的测试群  283
11.5  如何与用户沟通  284
11.6  日志与App性能  286
11.7  从新人入职作业入手  286
11.8  本章小结  287
第12章  无线团队的组建和管理  289
12.1  从面试谈起  289
12.1.1  如今是卖方市场  289
12.1.2  名校论不适用无线开发  290
12.1.3  如何搞到更多的简历  290
12.1.4  面试时需要考察的几个点  291
12.2  无线团队必备的10份文档  292
12.2.1  新员工入职文档  292
12.2.2  加强版新员工入职文档  292
12.2.3  测试机清单  293
12.2.4  模块分工表  293
12.2.5  页面逻辑流程文档  293
12.2.6  MobileAPI接口分布图  295
12.2.7  版本管理策略文档  295
12.2.8  框架设计文档  295
12.2.9  发版流程文档  296
12.2.10  App启动流程图  296
12.3  一对一沟通  297
12.4  每周技术分享  298
12.5  代码评审  299
12.6  对Android团队Leader的定位  300
12.7  Android应用开发所需技能自我评测  301
12.8  App开发人员的学习路线  302
12.9  本章小结  303
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>App研发录：架构设计、Crash分析和竞品技术分析
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android、iPhone、Windows Phone手机网页及网站设计
第一篇 手机版专用网站设计和开发入门篇
第二篇 HTML5在iPhone、Android、Windows Phone的实战篇
第三篇 基于HTML、CSS和Javascript设计网站和开发移动Web应用
第四篇 基于HTML、CSS和Javascript开发手机应用程序
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android、iPhone、Windows Phone手机网页及网站设计
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android App 视觉与体验设计指南
引言
第一部分  Android Design的特别之处
Android Design并不只有Holo Theme
Android Design并不是教条
第二部分  Android Design核心
从雅虎天气和果酱说设计的一致性
一个有趣而又有迷惑性的问题——跨平台开发的注意事项
你真的要给用户提供“自定义主题”功能吗
第三部分  循序渐进
如何制作一个漂亮的Android应用图标
让Android Design成为衡量界面的标尺
一起来吃KitKat
初期体验
“编”与“集”
Android Design趋势——NaVigation Drawer
Android Design in Action——MuItiolexed Action Bar
那些正在失宠的Android控件交互方式门32
第四部分  精雕细琢
一个像素细节的胜利
Timer Press＆Eye in Sky
十大常见UX错误
Android Design的不足及其解决方案
再谈Press
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android App 视觉与体验设计指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>玩转Android手机
第01章 Android风暴已经登陆
1.1 Android就在你身边 .......................2
1.1.1 Android家谱.........................2
1.1.2 Android进化论 .....................3
1.1.3 拥有Android系统的
手机 .....................................4
1.2 Android手机入手常识 ...................5
1.2.1 认识行货与水货 ...................5
1.2.2 水货版本全解析 ...................5
1.2.3 理性消费拒绝翻新机............7
1.3 二维码的识别及使用.....................8
1.4 Android刷机不求人 .....................10
1.4.1 刷机的用途 ........................10
1.4.2 刷机前必做的准备 .............10
1.4.3 ROM刷机DIY ....................12
第02章设定属于自己的Android
2.1 个性化设置 .................................16
2.1.1 场景的切换 ........................16
2.1.2 更换壁纸............................17
2.1.3 多变的皮肤 ........................18
2.1.4 添加小插件 ........................19
2.1.5 添加应用程序 ....................21
2.1.6 添加快捷方式 ....................22
2.1.7 声音设置............................23
2.1.8 铃声设置............................24
2.1.9 通知音更改 ........................24
2.1.10 闹钟声音..........................25
2.2 无线与网络 .................................26
2.2.1 飞行模式开关 ....................26
2.2.2 WLAN开关及设置..............27
2.2.3 蓝牙开关及设置 .................28
2.2.4 便携式WLAN热点开关及
设置 ..................................30
2.2.5 移动网络的设置及开关 ......30
2.2.6 Internet共享开关、设置和
传输 ...................................31
2.3 呼叫设置.....................................32
2.3.1 语音信箱服务及设置..........32
2.3.2 手机设置及本国漫游设置 ...33
2.3.3 国内拨号设置 ....................33
2.3.4 呼叫转移设置 ....................34
2.3.5 呼叫限制设置 ....................35
2.3.6 小区广播设置 ....................36
2.3.7 互联网电话及设置 .............37
2.4 声音设置.....................................37
2.4.1 声音情景模式切换 .............37
2.4.2 音量调节及振动开关..........38
2.4.3 手机铃声设置 ....................39
2.4.4 来电手机动作综合设置 ......40
2.4.5 通知音及屏幕反馈设置 ......41
2.5 显示设置.....................................41
2.5.1 屏幕自动旋转开关 .............41
2.5.2 动画级别设置 ....................42
2.5.3 亮度调节............................43
2.5.4 屏幕待机设置 ....................43
2.5.5 通知指示灯设置 .................44
2.5.6 G-Sensor校准 ...................45
2.6 账户与同步 .................................45
2.6.1 数据同步............................45
2.6.2 建立Google账户 ................46
2.6.3 进行账户同步 ....................48
2.7 位置设置.....................................49
2.7.1 无线网络与GPS卫星定位
开关 ...................................49
2.7.2 寻回手机功能开关 .............50
2.8 搜索设置.....................................50
2.8.1 Google搜索设置 ................50
2.8.2 电话搜索项设置 .................51
2.9 隐私权及USB连接PC设置 ..........52
2.9.1 设置锁屏信息开关 .............52
2.9.2 设置备份............................53
2.9.3 默认连接方式及连接询问
设置 ...................................53
2.10 电源管理...................................54
2.10.1 节能程序开关 ..................54
2.10.2 节能程序设置 ..................55
2.11 应用程序管理............................55
2.11.1 未知源安装开关及开发
选项 .................................55
2.11.2 管理应用程序 ...................56
2.11.3 正在运行的服务 ...............57
2.11.4 查看应用程序的存储空间 ...58
2.12 存储卡及手机存储 ....................59
2.12.1 安装/卸载存储卡 ..............59
2.12.2 创建更多空间 ..................59
2.12.3 恢复出厂设置 ..................61
2.13 日期与时间设定 ........................62
2.13.1 设定时间..........................62
2.13.2 设定日期..........................63
第03章 Android手机基本功能使用
3.1 电话拨打与接听 ..........................66
3.2 联系人的添加与管理...................67
3.2.1 如何添加联系人 .................67
3.2.2 如何管理联系人 .................68
3.2.3 如何删除联系人 .................69
3.3 通话记录.....................................71
3.3.1 查看和删除通话记录..........71
3.3.2 来电防火墙设置 .................71
3.4 信息功能.....................................73
3.4.1 短信的编写及发送 .............73
3.4.2 彩信的编写及发送 .............74
3.5 手机工程模式解析 ......................76
3.5.1 进入工程模式的方法..........76
3.5.2 工程模式菜单信息 .............77
第04章 Android带你畅游网络
4.1 不同网络环境Android统统应对...80
4.1.1 主流无线网络解析 .............80
4.1.2 架设家庭WiFi无线网络 ......80
4.1.3 将手机“挂”到WiFi上 ......82
4.1.4 用蓝牙发送文件 .................83
4.1.5 接收蓝牙文件 ....................85
4.2 Android内置浏览器 .....................86
4.2.1 浏览器的各项操作 .............86
4.2.2 浏览器设置 ........................88
4.3 电子市场的应用 ..........................91
4.3.1 电子市场简介 ....................91
4.3.2 应用的下载与安装 .............92
4.3.3 应用的卸载 ........................93
4.4 Gmail与邮件 ...............................94
4.4.1 Gmail查看与回复邮件 .......94
4.4.2 Gmail菜单讲解 ..................96
4.5 91手机助手.................................98
4.5.1 91手机助手PC端安装 ........98
4.5.2 如何联机到91手机助手....100
4.5.3 通过91手机助手进行资料
同步 .................................101
4.5.4 利用91手机助手安装程序...103
4.6 豌豆荚手机精灵 ........................106
4.6.1 豌豆荚PC端安装 .............106
4.6.2 手机通过豌豆荚连接PC ...107
4.6.3 使用豌豆荚管理应用
程序 .................................110
第05章 Android媒体工作室
5.1 影视随身看——Android影片
播放器 ......................................114
5.1.1 影片播放器的使用方法 ....114
5.1.2 拍摄自己的视频 ...............115
5.2 hold住你的耳朵——Android
音乐播放器................................117
5.2.1 音乐播放操作 ..................117
5.2.2 编辑播放列表 ..................118
5.2.3 播放模式的切换 ...............120
5.2.4 音乐菜单详解 ..................121
5.3 定格精彩片段——Android
拍照 ..........................................123
5.3.1 照相机的拍照方法 ...........123
5.3.2 探秘照相机菜单 ...............123
5.4 翻阅美好回忆——Android图片
浏览 ..........................................125
5.4.1 图片浏览方式 ..................126
5.4.2 分享我的图片 ..................127
第06章随时随地即时通信
6.1 即时通信软件 ...........................130
6.1.1 手机QQ ...........................130
6.1.2 微信 .................................132
6.1.3 飞信 .................................134
6.1.4 MSN ................................135
6.1.5 米聊 .................................137
6.1.6 手机YY ............................140
6.2 广而告之发微博 ........................144
6.2.1 新浪微博客户端 ...............144
6.2.2 腾讯微博客户端 ...............148
6.2.3 搜狐微博客户端 ...............152
6.3 社区交友及时看 ........................155
6.3.1 人人网手机客户端 ...........155
6.3.2 开心网手机客户端 ...........159
6.3.3 QQ空间手机客户端 .........162
6.3.4 掌中天涯客户端 ...............166
6.3.5 世纪佳缘客户端 ................170
第07章 Android应用丰富生活
7.1 衣食住行好帮手 ........................176
7.1.1 大众点评..........................176
7.1.2 赶集生活..........................177
7.1.3 58同城 .............................179
7.1.4 支付宝 .............................181
7.1.5 布丁优惠券 ......................182
7.1.6 手机内置导航 ..................184
7.2 影音播放...................................188
7.2.1 UC浏览器也能看视频——
UC影音............................188
7.2.2 用MoboPlayer播放高质
量视频 .............................189
7.2.3 豆瓣电台猜出你的好
音乐 .................................191
7.2.4 手机电视——你随身的
mini TV ...........................193
7.3 系统应用...................................195
7.3.1 ES文件浏览器 .................195
7.3.2 手机优化大师 ..................197
7.3.3 QQ手机管家 ....................199
7.3.4 任务杀手..........................203
第08章 Android手机娱乐神器
8.1 动作类 ......................................206
8.1.1 Kung Pow——功夫之王 ...206
8.1.2 BackStab——背刺 ..........206
8.1.3 Samurai II: Vengeance——
武士II复仇........................207
8.1.4 Devil Ninja2——魔界
忍者2 ...............................208
8.2 竞速类游戏 ...............................209
8.2.1 Speedx 3D——超炫3D
隧道 .................................209
8.2.2 GT Racing Motor Academy
HD——GT 赛车 ..............210
8.2.3 Trial Xtreme——极限
摩托 .................................210
8.2.4 Voice Race——声控赛车 ...211
8.2.5 Turbo Grannies——摩托
奶奶..................................212
8.3 音乐类游戏 ...............................212
8.3.1 xPiano——全键盘模拟
钢琴 .................................213
8.3.2 MrMixit——音乐台拼图 ...213
8.3.3 Tap Sonic——DJMAX音乐
游戏 .................................214
8.3.4 太鼓の达人之AR妖怪
对战 .................................215
8.3.5 Beats，Advanced Rhythm
Game——音乐节奏
跳舞机 .............................215
8.3.6 Lyric Legend——歌词
达人 .................................216
8.4 角色扮演类 ...............................217
8.4.1 Order and Chaos——混沌
与秩序 .............................217
8.4.2 ZENONIA 3——泽诺尼
亚传奇3 ............................218
8.4.3 Roman Empire——罗马
帝国 .................................219
8.4.4 ETERNITY WARRIORS——
永恒勇士..........................220
8.5 射击类游戏 ...............................220
8.5.1 Star Battalion——皇牌
飞虎队 .............................221
8.5.2 Aliens Invasion——异形
入侵 .................................221
8.5.3 Gravity Wars——重力
战争 .................................222
8.5.4 Gun Bros——勇猛二
兄弟 .................................223
8.6 策略类游戏 ...............................223
8.6.1 Equilibrium——平衡
世界 .................................224
8.6.2 Crystallight Defence——
水晶塔防..........................224
8.6.3 HexDefense——炫光
塔防 .................................225
8.6.4 Armada Arcade——舰队
危机 .................................226
8.7 棋牌类游戏 ...............................226
8.7.1 三国杀OL手机版..............226
8.7.2 Fantastic 4 In A Row
Free——四子棋...............227
8.7.3 OmokHD——涂鸦
五子棋 ..............................228
8.7.4 Go Free——GO围棋 .......228
8.7.5 QQ欢乐斗地主 ................229
8.8 体育类游戏 ...............................230
8.8.1 Crazy PingPong——疯狂
乒乓球 ..............................230
8.8.2 Stardunk——星际灌篮 ....231
8.8.3 Bocce Ball——掷地球 .....231
8.8.4 Wave Blazer——急速
赛艇 .................................232
8.9 休闲娱乐类 ...............................233
8.9.1 Angry Birds Rio——愤怒的
小鸟里约版 .......................233
8.9.2 Plants vs Zombies——植物
大战僵尸 ..........................234
8.9.3 Fire Ball——火球切割 .....234
8.9.4 Bubbles Touch——泡泡
触摸 .................................235
8.9.5 Talking Tom 2——会说话的
汤姆猫2 ...........................236
8.9.6 Fruit Ninja——水果
忍者 .................................236
8.9.7 Fishing Joy——捕鱼
达人 .................................237
8.9.8 Cut the Rope——割
绳子 .................................238
附录A Android系统名词解释汇总
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>玩转Android手机
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android高性能编程
第1 章 引言：为什么需要高性能 .................................................................. 1
为什么应用程序的性能意味着这么多 ....................................................................... 2
手动测试和自动测试 ................................................................................................... 3
ANR 和软件中的延迟 ................................................................................................. 3
什么会触发ANR，我该如何避免它们 .............................................................. 4
Android 架构 ................................................................................................................ 4
Dalvik 虚拟机 ............................................................................................................... 5
内存管理 ....................................................................................................................... 5
电量消耗 ....................................................................................................................... 6
Java 语言 ....................................................................................................................... 7
NDK/在需要时进行原生开发 ..................................................................................... 7
程序响应相关的3 个临界值 ....................................................................................... 8
软件质量的商业价值 ................................................................................................... 8
总结 ............................................................................................................................... 9
第2 章 高效调试 ......................................................................................... 11
ADB ............................................................................................................................ 11
DDMS ......................................................................................................................... 12
采集和分析线程信息 ................................................................................................. 14
堆分析和可视化 ......................................................................................................... 16
Android 高性能编程
Allocation Tracker ....................................................................................................... 19
网络使用 ..................................................................................................................... 20
Emulator Control ......................................................................................................... 22
系统状态 ..................................................................................................................... 23
调试UI ....................................................................................................................... 23
使用Hierarchy Viewer ............................................................................................... 25
Systrace ....................................................................................................................... 27
Android 设备调试选项 .............................................................................................. 29
Android 即时运行 ...................................................................................................... 38
GPU 分析器 ................................................................................................................ 40
使用GPU 分析器进行调试 ....................................................................................... 41
ClassyShark ................................................................................................................. 42
开始使用 ..................................................................................................................... 43
总结 ............................................................................................................................. 46
第3 章 打造布局 ......................................................................................... 47
预览 ............................................................................................................................. 47
渲染性能 ............................................................................................................. 47
屏幕撕裂和垂直同步 ......................................................................................... 50
多窗口模式 ......................................................................................................... 57
最佳实践 ..................................................................................................................... 63
布局概述 ............................................................................................................. 64
布局层级管理 ..................................................................................................... 64
布局复用 ............................................................................................................. 70
ViewStub ............................................................................................................. 73
AdapterView 和视图回收 ................................................................................... 74
自定义视图和布局 ............................................................................................. 78
屏幕缩放 ............................................................................................................. 83
调试工具 ..................................................................................................................... 84
Design 窗口 ........................................................................................................ 84
Hierarchy Viewer ................................................................................................ 86
设备上的调试工具 ............................................................................................. 90
Systrace ............................................................................................................... 97
总结 ........................................................................................................................... 101
第4 章 内存 .............................................................................................. 103
预览 ........................................................................................................................... 103
内存如何工作 ................................................................................................... 104
垃圾回收 ........................................................................................................... 104
内存共享 ........................................................................................................... 104
运行时 ............................................................................................................... 105
Android N 即时编译器 .................................................................................... 106
内存泄露 ........................................................................................................... 107
内存抖动 ........................................................................................................... 108
引用 ................................................................................................................... 108
内存相关的项目 ............................................................................................... 109
最佳实践 ................................................................................................................... 111
数据类型 ........................................................................................................... 111
语法 ................................................................................................................... 117
常量 ................................................................................................................... 123
对象管理 ........................................................................................................... 124
内存设计模式 ................................................................................................... 128
Android 组件泄露 ............................................................................................ 137
进程 ................................................................................................................... 150
内存API ........................................................................................................... 151
主要组件和内存管理 ....................................................................................... 154
调试工具 ................................................................................................................... 156
LogCat ............................................................................................................... 157
ActivityManager API ........................................................................................ 159
StrictMode ......................................................................................................... 160
Dumpsys ............................................................................................................ 162
总结 ........................................................................................................................... 168
第5 章 多线程 .......................................................................................... 171
预览 ........................................................................................................................... 171
线程基础 ........................................................................................................... 172
Android 多线程环境 ........................................................................................ 176
Android 应用程序线程 .................................................................................... 177
Android 线程消息 ............................................................................................ 178
最佳实践 ................................................................................................................... 181
线程 ................................................................................................................... 181
HandlerThread ................................................................................................... 181
AsyncTask ......................................................................................................... 183
Loader ............................................................................................................... 187
Service ............................................................................................................... 190
进程间通信 ....................................................................................................... 199
先进的技术 ....................................................................................................... 205
调试工具 ................................................................................................................... 212
StrictMode ......................................................................................................... 212
总结 ........................................................................................................................... 213
第6 章 网络 .............................................................................................. 215
预览 ........................................................................................................................... 215
协议 ................................................................................................................... 217
方法 ................................................................................................................... 218
头部 ................................................................................................................... 218
超时 ................................................................................................................... 219
内容 ................................................................................................................... 219
响应码 ............................................................................................................... 220
连接类型 ........................................................................................................... 220
最佳实践 ................................................................................................................... 221
延迟测定 ........................................................................................................... 221
批量连接 ........................................................................................................... 223
对响应进行缓存 ............................................................................................... 224
指数退避算法 ................................................................................................... 228
轮询VS 推送 .................................................................................................... 230
所提供的API ................................................................................................... 231
Android N 带来的新变化 ................................................................................. 236
调试工具 ................................................................................................................... 245
Android N 网络ADB 工具 .............................................................................. 245
Fiddler ............................................................................................................... 246
Wireshark .......................................................................................................... 247
Application Resource Optimizer ....................................................................... 248
网络衰减 ........................................................................................................... 250
模拟网络加速和延迟 ....................................................................................... 250
总结 ........................................................................................................................... 254
第7 章 安全 .............................................................................................. 257
WhatsApp – 连续出现问题 ..................................................................................... 258
深入代码 ................................................................................................................... 260
捕获APK 文件 ......................................................................................................... 261
从设备上拉取APK 文件 ................................................................................. 261
利用Wireshark 捕获APK 文件 ...................................................................... 262
利用外部网站 ................................................................................................... 263
剖析APK 文件 ......................................................................................................... 264
代码注入 ................................................................................................................... 269
操作码 ............................................................................................................... 272
注入新代码 ....................................................................................................... 272
签名并重新构建应用程序 ............................................................................... 275
保护应用程序 ................................................................................................... 276
非安全存储 ............................................................................................................... 279
SharedPreferences ............................................................................................. 279
内部存储 ........................................................................................................... 280
外部存储 ........................................................................................................... 282
删除文件 ........................................................................................................... 284
使用外部存储还是内部存储 ........................................................................... 284
数据库 ............................................................................................................... 285
数据库中的性能 ............................................................................................... 286
SQL 注入 .......................................................................................................... 286
ORM 框架 ......................................................................................................... 288
OrmLite ............................................................................................................. 288
SugarORM ........................................................................................................ 289
GreenDAO ........................................................................................................ 290
Realm ................................................................................................................ 291
网络 ................................................................................................................... 291
通信加密 ................................................................................................................... 292
嗅探 ................................................................................................................... 292
总结 ........................................................................................................................... 294
第8 章 优化电量消耗 ................................................................................ 297
分析 ........................................................................................................................... 297
监测电池电量和充电状态 ............................................................................... 300
识别充电状态的变化 ....................................................................................... 301
确定及响应电池电量的变化 ........................................................................... 302
Doze 和App Standby ............................................................................................... 303
理解Doze ......................................................................................................... 303
避免无用的网络请求 ............................................................................................... 304
按需对待BroadcastReceiver .................................................................................... 306
网络 ........................................................................................................................... 307
总结 ........................................................................................................................... 309
第9 章 Android 中的原生代码................................................................... 311
入门——在我们的系统中配置NDK ..................................................................... 312
JNI ............................................................................................................................. 313
基本概念 ................................................................................................................... 314
创建首个JNI 程序HelloWorld-JNI ........................................................................ 315
使用Android NDK 创建一个原生Activity ............................................................ 320
调试NDK ................................................................................................................. 323
Android.mk ............................................................................................................... 326
NDK 定义的变量 ..................................................................................................... 327
TARGET_PLATFORM .................................................................................... 327
TARGET_ARCH .............................................................................................. 327
TARGET_ABI .................................................................................................. 328
NDK 提供的宏 ......................................................................................................... 328
Application.mk .......................................................................................................... 329
引入已存在的库 ....................................................................................................... 331
导出头文件 ............................................................................................................... 332
总结 ........................................................................................................................... 333
第10 章 提高性能的小技巧 ....................................................................... 335
位图 ........................................................................................................................... 335
加载 ................................................................................................................... 336
处理 ................................................................................................................... 342
缓存 ................................................................................................................... 343
显示 ................................................................................................................... 348
管理内存 ........................................................................................................... 350
图像优化 ................................................................................................................... 354
分辨率 ............................................................................................................... 355
压缩 ................................................................................................................... 356
序列化 ....................................................................................................................... 356
JSON 的改进 .................................................................................................... 356
JSON 的替代品 ................................................................................................ 358
本地序列化 ....................................................................................................... 365
代码改进 ................................................................................................................... 365
Getter 和Setter ................................................................................................. 366
内部类 ............................................................................................................... 367
Android N 中的Java 8 ............................................................................................. 370
设置 ................................................................................................................... 370
Jack 工具链 ....................................................................................................... 374
APK 优化 .................................................................................................................. 375
移除未使用的代码 ........................................................................................... 376
移除未使用的资源 ........................................................................................... 376
总结 ........................................................................................................................... 378
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android高性能编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>玩家必备
第1章　Android快速入门	1
1.1　安卓基础知识	2
1.1.1　Android入门介绍	2
1.1.2　Android发展历史	2
1.1.3　Android系统分类	3
1.2　Android智能手机	8
1.2.1　HTC	9
1.2.2　Motorola	9
1.2.3　三星	11
1.2.4　国内厂商	12
1.3　选购Android智能手机	13
1.3.1　购买Android手机注意事项	13
1.3.2　购买Android手机十大要素	17
1.3.3　Android智能手机购买指南	18
1.4　注册Google Gmail账户	20
1.4.1　了解Google Gmail	21
1.4.2　注册Google Gmail账户	21
第2章　Android基本操作	23
2.1　了解Android界面	24
2.1.1　熟悉Android主界面	24
2.1.2　更换快捷栏图标	25
2.1.3　切换Android桌面	27
2.1.4　添加/删除插件和快捷方式	27
2.2　设置Android桌面工具	30
2.2.1　更换Android桌面画面	30
2.2.2　在桌面上建立文件夹	32
2.2.3　在桌面上建立Widget	33
2.3　了解Android手机按键	34
2.3.1　了解Android手机外观	34
2.3.2　了解Android按键功能	35
2.4　使用Android通讯设备	36
2.4.1　接听/拨打电话	36
2.4.2　接收/发送短信	40
第3章　安装与管理软件	43
3.1　通过软件商店安装/卸载Android
软件	44
3.2　通过91手机助手安装/卸载Android
软件	44
3.2.1　下载91手机助手	45
3.2.2　安装91手机助手	46
3.2.3　设置连接Android	48
3.2.4　安装软件和游戏	50
3.2.5　卸载软件和游戏	51
3.2.6　管理手机内存卡	52
3.3　通过豌豆荚安装/卸载Android
软件	53
3.3.1　下载安装豌豆荚	53
3.3.2　连接豌豆荚精灵	53
3.3.3　安装软件、游戏	55
3.3.4　更新软件、游戏	56
3.3.5　卸载软件、游戏	57
3.3.6　管理手机SD卡	58
3.4　在手机端安装/卸载Android软件	58
3.4.1　使用91手机助手手机版	58
3.4.2　使用手机下载软件和游戏	60
3.4.3　在文件管理器中安装软件	61
3.4.4　删除手机中不需要的软件	63
第4章　Android同步与通讯	65
4.1　Android自带的同步功能	66
4.1.1　账户与同步功能	66
4.1.2　导入/导出联系人	67
4.2　使用豌豆荚同步管理	68
4.2.1　备份用户的资料	68
4.2.2　管理手机联系人	69
4.2.3　在电脑上收发短信	71
4.2.4　管理音乐与铃声	72
4.2.5　管理手机的视频	73
4.3　通讯信息管理	74
4.3.1　名片全能王	74
4.3.2　友录通讯录	75
4.3.3　GO联系人	77
4.3.4　来电智能应答	80
4.3.5　通话录音器	81
4.4　通讯安全管理	82
4.4.1　QQ安全助手	82
4.4.2　360手机卫士	84
第5章　Android主题设置	87
5.1　设置Android桌面主题	88
5.1.1　设置动态壁纸	88
5.1.2　91熊猫桌面	89
5.1.3　Windows 7桌面	91
5.2　设置Android手机铃声	92
5.2.1　设置手机来电铃声	92
5.2.2　铃声管理专家	94
5.2.3　小米分享	95
5.2.4　设置音量与类型	96
5.3　管理Android屏幕设置	97
5.3.1　设置锁屏与解锁	97
5.3.2　WP7屏幕锁	98
5.3.3　动态锁屏软件	99
5.4　设置桌面天气和时间	99
5.4.1　设置系统时间	99
5.4.2　设置系统天气	101
5.4.3　365日历	102
5.5　管理Android输入法	103
5.5.1　搜狗输入法	103
5.5.2　QQ输入法	105
5.5.3　触宝输入法	106
第6章　Android系统优化	109
6.1　Android文件优化	110
6.1.1　文件管理软件	110
6.1.2　ES文件浏览器	110
6.1.3　astro文件管理器	112
6.2　Android系统监管	113
6.2.1　系统信息 PRO	113
6.2.2　eRay-系统状态	115
6.3　Android硬件测试	117
6.3.1　性能测试高级版	117
6.3.2　Android CPU Benchmark	120
6.4　Android系统插件	121
6.4.1　电量显示器专用版	121
6.4.2　Extended Controls	121
6.4.3　7插件主页增强版	123
6.5　Android系统优化	125
6.5.1　安卓优化大师	125
6.5.2　一键优化软件	128
第7章　Android快速网上
冲浪	129
7.1　设置Android网络连接方式	130
7.1.1　WLAN无线网络设置	130
7.1.2　电脑通过手机连接网络	131
7.1.3　设置手机3G移动网络	134
7.1.4　配置手机蓝牙传输文件	136
7.2　管理Android上网流量	138
7.3　使用浏览器网上冲浪	142
7.3.1　熟悉UCWeb浏览器界面	142
7.3.2　使用UCWeb浏览网页	144
7.4　体验网络在线生活	145
7.4.1　Android手机QQ	145
7.4.2　玩转手机微博	149
7.4.3　观看RSS新闻	151
第8章　Android掌上移动
办公	153
8.1   管理日程与日历	154
8.1.1　添加和删除日程	154
8.1.2　与PC版365日历同步	156
8.1.3　365日历的其他功能	159
8.2　进行Office掌上办公	159
8.2.1　新建与保存Word文档	160
8.2.2　打开与编辑Word文档	161
8.2.3　编辑Excel文档	163
8.2.4　演示PPT文档	164
8.3　管理小米便签	165
8.3.1　新建便签	165
8.3.2　创建文件夹	168
第9章　Android轻松手机
理财	171
9.1   Android网上购物	172
9.1.1　淘宝购物	172
9.1.2　凡客诚品	174
9.1.3　团购大全	176
9.1.4　赶集生活	178
9.1.5　快递查询	180
9.2   Android投资理财	182
9.2.1　91彩票专家	182
9.2.2　同花顺证券	183
9.2.3　天天基金	188
9.2.4　黄金价格实时查看器	189
第10章　Android畅快娱乐
休闲	191
10.1　Android播放音乐	192
10.1.1　Android音乐播放器	192
10.1.2　酷狗音乐	193
10.1.3　麦田广播	194
10.2   Android电子阅读	196
10.2.1　91熊猫看书	196
10.2.2　布卡漫画	198
10.3   Android掌上影院	199
10.3.1　暴风影音	199
10.3.2　优酷视频	201
10.3.3　熊猫影音	202
10.4   Android游戏娱乐	203
10.4.1　QQ斗地主	203
10.4.2　QQ聊斋	204
10.4.3　水果忍者	205
10.4.4　愤怒的小鸟	206
10.4.5　FC模拟器游戏	207
第11章　Android贴心生活
服务	209
11.1   Android旅游出行	210
11.1.1　谷歌地图	210
11.1.2　盛名列车时刻表	213
11.1.3　8684公交查询	214
11.1.4　携程无线	216
11.2   Android生活资讯	218
11.2.1　大众点评网	219
11.2.2　家庭医生	220
11.2.3　烹饪天堂	222
11.2.4　麦当劳优惠券	223
11.2.5　减肥小秘书	224
11.3   Android学习应用	224
11.3.1　有道词典	224
11.3.2　驾照考试通	226
11.3.3　海词词典	228
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>玩家必备
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>玩家必备
目录
第1章　Android新手入门	1
1.1	安卓基本介绍	2
1.2	注册Google Gmail账户	5
1.3	了解Android界面	6
1.4	设置Android网络连接方式	8
第2章　Android软件安装	13
2.1	通过软件商店安装Android软件	14
2.2	通过“豌豆荚手机精灵”安装
Android软件	14
2.3	使用“91手机助手”安装Android
软件	19
2.4	在手机端下载、安装Android软件	20
2.5	使用电脑下载、安装Android软件	23
第3章　Android窗口工具	27
001	腾讯桌面	28
002	企鹅时钟	29
003	天气时钟	29
004	Win 7桌面	30
005	高级时钟	30
006	桌面管家	31
007	信息桌面	31
008	联络人插件	32
009	桌面便笺	32
010	墨迹天气	33
011	365日历	33
012	七键开关	34
013	微博插件	34
第４章　Android输入工具	35
014	搜狗输入法	36
015	QQ输入法	37
016	百度输入法	37
017	讯飞输入法	38
018	GO输入法	38
019	谷歌拼音	39
020	触宝输入法	39
021	滑行输入法	40
022	Moto手写	40
023	汉王手写	41
024	行天输入法	41
025	符号键盘	42
026	火星文插件	42
第５章　Android辅助工具	43
027	Android工具箱	44
028	蓝牙助手	45
029	电池优化	45
030	音量调整器	46
031	钛备份	46
032	省电宝	47
033	Unrar Pro	47
034	ES文件浏览器	48
035	安兔兔评测	48
036	一键清理	49
037	固件管理器	49
038	放松睡眠	50
039	信用卡提醒	50
第６章　Android常用工具	51
040	N多市场	52
041	时尚手电筒	53
042	iReader	53
043	GO天气	54
044	Flick Note	54
045	Zip压缩工具	55
046	工资计算工具	55
047	SD卡清理器	56
048	定制锁屏	56
049	超级闹钟	57
050	Adobe Photoshop Express	57
051	截图大师	58
052	系统面板	58
第７章　Android词典翻译	59
053	有道词典	60
054	金山词霸	61
055	云词	61
056	成语词典	62
057	顺口溜大全	62
058	新华字典	63
059	法语助手	63
060	惜墨成语	64
061	天天英语	64
062	魔王日语	65
063	成语接龙	65
064	海词词典	66
065	英汉词典	66
第８章　Android摄影图库	67
066	魔幻时刻相机	68
067	手机摄影大师	69
068	POCO相机	69
069	猫眼图博	70
070	照片风格处理	70
071	趣味绘图	71
072	美图秀秀	71
073	魔图精灵	72
074	影像中国	72
075	图兜	73
076	迷尚美图	73
077	胶片摄影	74
078	印象杂志	74
第９章　Android影音播放	75
079	熊猫影音	76
080	QQ影音	77
081	暴风影音	77
082	UC影音	78
083	PPS影音	78
084	百度视频	79
085	迅雷看看	79
086	土豆	80
087	优酷	80
088	酷狗音乐	81
089	百度ting	81
090	天天动听	82
091	多米音乐	82
第10章　Android生活购物	83
092	淘宝	84
093	美团团购	85
094	京东商城	85
095	当当网	86
096	阿里旺旺	86
097	乐淘鞋城	87
098	闪购	87
099	丁丁生活	88
100	百货查价助手	88
101	悦乐优惠	89
102	购物清单	89
103	乐呵消费指南	90
104	一淘	90
第11章　Android交通旅游	91
105	携程无线	92
106	谷歌地图	93
107	高铁时代	93
108	航班管家	94
109	小米司机	94
110	爱帮公交	95
111	公交巴士	95
112	大众点评	96
113	旅行助理	96
114	超级火车票	97
115	旅游攻略	97
116	导航犬	98
117	去哪儿旅游搜索	98
第12章　Android单机游戏	99
118	会说话的汤姆猫2	100
119	跑跑卡丁车	101
120	植物大战僵尸	101
121	单机三国杀	102
122	愤怒的小鸟	102
123	实况足球2012	103
124	极限3D摩托车	103
125	极品飞车	104
126	反恐奇兵	104
127	僵尸冲击	105
128	水果忍者	105
129	棒球英豪	106
130	狙击大战	106
第13章　Android网页浏览	107
131	UC浏览器	108
132	QQ浏览器	109
133	百度浏览器	109
134	火狐浏览器	110
135	GO浏览器	110
136	360浏览器	111
137	海豚浏览器	111
138	傲游浏览器	112
139	冲浪浏览器	112
140	天天浏览器	113
141	兔子浏览器	113
142	草莓浏览器	114
143	九天浏览器	114
第14章　Android来电通信	115
144	来电通	116
145	通通免费电话	117
146	通话记录	117
147	i366视频电话	118
148	智能拨号	118
149	触宝拨号	119
150	火种通讯录	119
151	iUU语音短信	120
152	GO 短信	120
153	飞信	121
154	超级短信	121
155	柳丁来电	122
156	Youni短信	122
第15章　Android网络通信	123
157	手机QQ	124
158	Skype通话	125
159	微信	125
160	手机MSN	126
161	微博Call	126
162	手机YY	127
163	米聊	127
164	KK聊天	128
165	飞聊	128
166	阿里通	129
167	爱聊	129
168	飘信	130
169	翼聊	130
第16章　Android网络游戏	131
170	91农场	132
171	QQ斗地主	133
172	忍者无极	133
173	上海1930	134
174	摩天轮	134
175	迷你岛	135
176	恶魔猎手	135
177	飘渺三界OL	136
178	AIWI体感游戏	136
179	灵兽世界OL	137
180	点点水族馆	137
181	王国物语	138
182	公主vs美食	138
183	军临城下	139
184	英雄之战	139
第17章　Android网络社区	141
185	新浪微博	142
186	世纪佳缘	143
187	糗事百科	143
188	掌中天涯	144
189	人人网	144
190	腾讯微博	145
191	开心网	145
192	QQ空间	146
193	掌上猫扑	146
194	朋友网	147
195	51空间	147
196	网易微博	148
197	街旁	148
第18章　Android体育赛事	149
198	GO比分	150
199	中国体育	151
200	英超直播	151
201	体坛周报	152
202	体坛快讯	152
203	欧冠赛事	153
204	F1赛事新闻	153
205	NBA赛事查询	154
206	板球新闻直播	154
207	百视通NBA	155
208	足球即时比分	155
209	移动体育信息平台	156
210	国际摩托车赛事直播	156
第19章　Android新闻资讯	157
211	蘑菇新闻	158
212	网易新闻	159
213	新闻阅读器	159
214	3G门户新闻	160
215	掌中新浪	160
216	大牛新闻	161
217	蜜蜂新闻	161
218	搜狐新闻	162
219	环球资讯	162
220	金融时报	163
221	凤凰新闻	163
222	腾讯新闻	164
223	房产资讯	164
第20章　Android健康医疗	165
224	现场急救指南	166
225	深度睡眠（5倍）	167
226	中医体质测试	167
227	催眠大师	168
228	气功大师	168
229	快乐减肥	169
230	超级营养师	169
231	快乐戒烟	170
232	育婴指南	170
233	大病预警	171
234	午间小睡	171
235	芳香治疗音乐之迷迭香	172
第21章　Android移动办公	173
236	文档编辑	174
237	Kingsoft Office	175
238	快捷办公	175
239	e掌管	176
240	手机梵讯	176
241	金山快盘	177
242	Google 文档	177
243	麦库记事	178
244	万能记事本	178
245	智能办公套件	179
246	网灵远程控制	179
247	移动办公	180
248	GNotes笔记本	180
第22章　Android电子阅读	181
249	云中书城	182
250	开卷有益	183
251	91熊猫看书	183
252	掌上书院	184
253	安卓读书	184
254	静读天下	185
255	百阅	185
256	书旗免费小说	186
257	百秀漫画	186
258	盛大听书	187
259	漫画魔屏	187
260	幼儿睡前故事	188
261	天翼阅读	188
第23章　Android金融理财	189
262	同花顺	190
263	招商银行掌上生活	191
264	ATM位置通	191
265	挖财	192
266	91记账	192
267	投资堂	193
268	华股财经	193
269	金时代	194
270	纸白银精灵	194
271	彩票查询	195
272	和讯基金	195
273	支付宝	196
274	货币汇率转换计算	196
第24章　Android系统优化	197
275	安卓优化大师	198
276	QQ手机管家	199
277	一键安全root	199
278	360优化大师	200
279	流量监测仪	200
280	ET优化大师	201
281	eRay系统大师	201
282	一键连接VPN	202
283	快速卸载	202
284	Android助手	203
285	启动控制	203
286	SD卡速度增强器	204
287	定时开关机	204
第25章　Android安全防护	205
288	360手机卫士	206
289	安全管家	207
290	瑞星杀毒	207
291	超级兔子	208
292	诺顿安全卫士	208
293	摩贝密盾	209
294	金山手机卫士	209
295	手机辐射卫士	210
296	蜜蜂管家	210
297	按键救星	211
298	病毒终结者	211
299	隐私保护	212
300	寻回犬	212
附　　录	213
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>玩家必备
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android音视频开发
第1章  音视频基础知识  1
1.1  视频编码  1
1.2  音频编码  2
1.3  多媒体播放组件（Android、iOS）  2
1.4  常见的多媒体框架及解决方案  3
1.5  相关知识点  4
1.5.1  帧率  4
1.5.2  分辨率  4
1.5.3  刷新率  4
1.5.4  编码格式  4
1.5.5  封装格式  4
1.5.6  码率  5
1.5.7  画质与码率  5
1.5.8  DTS与PTS  5
1.5.9  YUV与RGB  5
1.5.10  视频帧及音频帧  5
1.5.11  量化精度  6
1.5.12  采样率  6
1.5.13  声道  6
第2章  常用的系统播放器MediaPlayer  8
2.1  状态图及生命周期  8
2.2  从创建到setDataSource过程  12
2.2.1  从创建到setDisplay过程  12
2.2.2  创建过程  13
2.2.3  setDataSource过程  16
2.2.4  setDisplay过程  20
2.3  开始prepare后的流程  22
2.4  C++中MediaPlayer的C/S架构  31
第3章  管理调度的服务者MediaPlayerService  40
3.1  Client/Server通过IPC的通信流程图  40
3.2  相关联的类图  42
3.3  产生过程  43
3.4  添加服务的过程  48
3.5  通过BinderDriver和MediaPlayer通信的过程  50
3.6  创建播放器  55
3.7  建立StageFright层交互  58
第4章  StagefrightPlayer（AwesomePlayer）  60
4.1  AwesomePlayer构造过程  60
4.2  AwesomePlayer使用MediaExtractor进行数据解析的过程  66
4.3  AwesomePlayer解码过程  69
4.3.1  AwesomePlayer中的prepare过程  69
4.3.2  初始化音视频解码器过程  73
4.3.3  使用OMXCodec的解码过程  75
4.4  AwesomePlayer的渲染输出过程  80
4.4.1  用一张图回顾数据处理过程  80
4.4.2  视频渲染器构建过程  81
4.4.3  将音频数据放到Buffer的过程  87
4.4.4  AudioPlayer在AwesomePlayer中的运行过程  91
4.4.5  音视频同步  93
4.4.6  音视频输出  96
4.5  概要总结  97
第5章  流媒体播放的新生力量NuPlayer  98
5.1  NuPlayer整体结构  98
5.2  NuPlayer的构建过程  100
5.3  NuPlayer的数据解析模块  102
5.4  NuPlayer的解码模块  107
5.5  NuPlayer的渲染模块  109
第6章  OpenMAX（OMX）框架  118
6.1  Codec部分中的AwesomePlayer到OMX服务  118
6.1.1  OpenMAX与StageFright框架层级的关系  118
6.1.2  OMX的初始化流程  120
6.1.3  OMX中NodeInstance列表的管理  127
6.1.4  OMX中NodeInstance节点的操作  127
6.1.5  总结AwesomePlayer到OMX服务过程  130
6.2  Codec部分中的OMXCodec与OMX事件回调流程  131
6.2.1  OMXCodec与OMX callback事件的处理时序图  132
6.2.2  如何从OMX中分发事件到OMXCodec  133
6.2.3  缓冲区更新过程  135
6.2.4  消息回调  137
6.3  MediaCodec相关知识  139
6.3.1  MediaCodec的基本认识  139
6.3.2  从创建到Start过程  148
6.3.3  MediaCodec到OMX框架过程  154
6.3.4  MediaCodec硬解码  158
第7章  FFmpeg项目  161
7.1  FFmpeg简介  161
7.2  在Windows下编译FFmpeg  163
7.2.1  MSYS2  164
7.2.2  Yasm  164
7.2.3  开始编译FFmpeg-3.1.3  166
7.2.4  创建shell编译脚本  167
7.2.5  编译动态库.so  169
7.2.6  编译静态库.a  171
7.3  在Linux下编译FFmpeg  172
7.3.1  在/etc/profile.d下配置环境变量  172
7.3.2  开始编译FFmpeg-3.1.3  174
7.3.3  编写shell脚本  175
7.3.4  编译动态库.so  176
7.3.5  编译静态库.a  178
7.4  在Mac OS下编译FFmpeg  179
7.4.1  下载源码及配置环境变量  179
7.4.2  开始编译FFmpeg-3.1.3  183
7.4.3  编写shell脚本  183
7.4.4  编译动态库.so  185
7.4.5  编译静态库.a  187
7.5  FFmpeg常用命令  189
7.5.1  改变帧率、码率和文件大小  189
7.5.2  调整视频分辨率  190
7.5.3  裁剪/填充视频  191
7.5.4  翻转和旋转视频  193
7.5.5  模糊和锐化视频  196
7.5.6  画中画  197
7.5.7  在视频上添加文字  201
7.5.8  文件格式转换  205
7.5.9  时间操作  207
第8章  FFmpeg源码分析及实战  208
8.1  FFmpeg常用结构体分析  208
8.1.1  AVFormatConext  209
8.1.2  AVInputFormat  211
8.1.3  AVStream  212
8.1.4  AVCodecContext  215
8.1.5  AVPacket  216
8.1.6  AVCodec  218
8.1.7  AVFrame  219
8.1.8  AVIOContext  222
8.1.9  URLProtocol  223
8.1.10  URLContext  224
8.2  FFmpeg关键函数介绍  225
8.2.1  av_register_all函数  225
8.2.2  avformat_alloc_context函数  226
8.2.3  avio_open函数  226
8.2.4  avformat_open_input函数  229
8.2.5  avformat_find_stream_info函数  232
8.2.6  av_read_frame函数  246
8.2.7  av_write_frame函数  252
8.2.8  avcodec_decode_video2函数  256
8.3  FFmpeg案例（代码实现）  264
8.3.1  利用FFmpeg转换格式  264
8.3.2  在实时流中抓取图像  269
8.3.3  在视频中加入水印  277
8.3.4  FFmpeg音频解码  288
8.3.5  FFmpeg视频解码  300
8.4  FFPlay原理  308
8.4.1  注册所有容器格式和Codec  309
8.4.2  打开流文件  309
8.4.3  读取数据  311
8.4.4  保存数据  318
8.4.5  音视频同步  322
8.4.6  音视频输出  326
第9章  直播技术  328
9.1  直播原理  328
9.2  直播架构  328
9.3  直播过程  329
9.3.1  采集数据  329
9.3.2  渲染处理  332
9.3.3  编码数据  333
9.3.4  推流  335
9.3.5  CDN分发  338
9.3.6  拉流  341
9.3.7  播放流数据  341
9.3.8  直播推流完整案例  343
9.4  流媒体服务器搭建  377
9.5  FFmpeg推流到流媒体服务器的过程  384
9.6  直播优化那些事  387
9.6.1  卡顿优化  387
9.6.2  延时优化  388
9.6.3  数据代理优化  389
9.6.4  首屏秒开优化  390
9.6.5  弱网优化  391
9.6.6  运营商劫持优化  391
9.6.7  CDN节点优化  393
第10章  H.264编码及H.265编码  395
10.1  H.264编码框架  395
10.2  H.264编码原理  395
10.3  H.264码流分析  397
10.3.1  H.264编码格式  397
10.3.2  NAL Header  397
10.3.3  H.264的传输  399
10.3.4  H.264码流结构  399
10.3.5  H.264的Level和Profile说明  406
10.4  H.265编码框架  408
10.4.1  背景知识  408
10.4.2  H.265码流结构  409
第11章  视频格式分析  414
11.1  MP4格式分析  414
11.1.1  Box结构  415
11.1.2  MP4总体结构  416
11.1.3  movie（moov）box  416
11.1.4  media box  418
11.1.5  sample table（stbl）box  420
11.2  FLV格式分析  422
11.2.1  FLV文件结构  422
11.2.2  File Header（文件头）  422
11.2.3  Body  423
11.2.4  Tag  423
11.3  F4V格式分析  428
11.3.1  file type box  429
11.3.2  movie box  430
11.3.3  movie header box  430
11.3.4  track box  430
11.3.5  media box  431
11.3.6  media information box  433
11.3.7  sample table box  433
11.4  TS格式分析  437
11.4.1  TS格式介绍  437
11.4.2  TS流包含的内容  438
11.4.3  TS包头解析  438
11.4.4  TS包传输部分  440
11.4.5  节目专用信息PSI（Program Specific Information）  440
11.5  AVI格式分析  444
11.5.1  AVI整体结构  445
11.5.2  AVI信息块（'hdrl' LIST块）  446
11.5.3  AVI数据块（'movi' LIST块）  447
11.5.4  AVI索引块（'idxl'子块）  448
11.6  ASF格式分析  448
11.6.1  认识ASF  448
11.6.2  ASF文件整体结构  449
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android音视频开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入探索Android热修复技术原理
第1 章  热修复技术介绍  01
1.1  什么是热修复  02
1.2  基本概念  03
1.3  技术积淀  06
1.4  技术概览  08
1.5  本章小结  14
第2 章  热替换代码修复  15
2.1  底层热替换原理  16
2.2  突破底层差异的方法  25
2.3  编译期与语言特性的影响  36
2.4  本章小结  75
第3 章  冷启动代码修复  77
3.1  冷启动类加载原理  78
3.2  多态对冷启动类加载的影响  91
3.3  Dalvik 下完整dex 方案的新探索  99
3.4  入口类与初始化时机的选择  110
3.5  本章小结  119
第4 章  资源热修复技术  121
4.1  普遍的实现方式  122
4.2  资源文件的格式  128
4.3  运行时资源的解析  130
4.4  另辟蹊径的资源修复方案  134
4.5  更优雅地替换AssetManager  139
4.6  一个意料之外的资源问题  143
4.7  本章小结  158
第5 章  so 库热修复技术  159
5.1  so 库加载原理  160
5.2  so 库热部署实时生效的可行性分析  162
5.3  so 库冷部署重启生效实现方案  169
5.4  如何正确复制补丁so 库  173
5.5  本章小结  174
第6 章  其他优秀的热修复方案  175
6.1  Dexposed 浅析  176
6.2  AndFix 探索历程  185
6.3  Amigo 核心解读  193
6.4  腾讯系热修复方案简介  202
第7 章  热修复技术的未来展望  209
7.1  热修复的专业性  210
7.2  对Android 生态的影响  211
7.3  Android 与iOS 热修复的不同  212
7.4  未来，无限可能  213
附录A  Sophix 方案比较  215
A.1  Sophix 方案纵向比较  216
A.2  Sophix 方案横向比较  217
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入探索Android热修复技术原理
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>零成本实现Android/iOS自动化测试
第1章  移动应用测试基础	1
1.1  移动应用测试十大要领	1
1.2  移动应用测试框架	4
1.3  如何选择适合自己的框架	9
第2章  Appium基础知识	11
2.1  Appium简介	11
2.1.1  为什么选择Appium	12
2.1.2  Appium基本概念	12
2.2  Appium原理架构	14
2.2.1  Appium Android原理架构	15
2.2.2  Appium iOS原理架构	15
2.3  Appium运行环境准备	16
2.3.1  在Mac OS X上运行Appium	18
2.3.2  在Linux上运行Appium	19
2.3.3  在Windows上运行Appium	19
2.3.4  Android测试环境准备	20
2.4  Appium安装	21
2.4.1  通过命令行安装Appium	21
2.4.2  通过应用程序安装Appium	22
2.5  Appium发展历史	24
第3章  Appium自动化测试入门	27
3.1  第一个iOS自动化测试	27
3.1.1  准备待测应用（iOS）	27
3.1.2  创建iOS测试脚本	31
3.2  第一个Android自动化测试	39
3.2.1  准备待测应用（Android）	39
3.2.2  创建Android测试脚本	39
3.3  Appium server capabilities	48
3.3.1  设置Appium server capabilities（iOS）	53
3.3.2  设置Appium server capabilities（Android）	54
第4章  Appium自动化测试进阶	58
4.1  测试对象识别	58
4.1.1  定位策略	58
4.1.2  使用Appium Inspector定位元素	59
4.1.3  Appium Inspector实战	60
4.1.4  通过命令行定位元素	74
4.2  模拟用户基本操作	83
4.3  移动手势的自动化	84
4.3.1  触摸操作/多点触控 API的概述	84
4.3.2  缺陷和解决方法	86
4.3.3  移动手势自动化实战	87
4.4  混血应用的自动化	93
4.4.1  混血iOS应用	93
4.4.2  混血Android应用	96
4.4.3  混血iOS应用自动化实战	98
4.4.4  混血Android应用自动化实战	102
4.5  移动浏览器的自动化	105
4.5.1  Appium驱动移动浏览器	105
4.5.2  移动浏览器（Safari）自动化实战	107
4.5.3  移动浏览器（Chrome）自动化实战	110
4.6  Appium真机测试	113
4.6.1  Appium iOS真机测试	113
4.6.2  Appium Android真机测试	114
4.6.3  Appium iOS真机测试实战	114
4.6.4  Appium Android真机测试实战	118
4.7  Appium 故障排除	120
第5章  Appium与Cucumber	125
5.1  Cucumber基础	125
5.1.1  下载安装Cucumber	125
5.1.2  五分钟入门	126
5.2  Cucumber与Appium结合	128
5.3  采用中文描述的自动化测试	133
第6章  Test Perfect基础知识	137
6.1  Test Perfect简介	137
6.2  为什么选择Test Perfect	138
6.3  Test Perfect原理架构	140
6.4  Test Perfect安装	142
6.4.1  在Mac上安装Test Perfect	142
6.4.2  在Windows上安装Test Perfect	148
6.5  Test Perfect成功案例	151
第7章  Test Perfect自动化测试入门	153
7.1  系统预定义命令	153
7.2  测试用例管理	156
7.3  测试用例集管理	161
第8章  Test Perfect自动化测试进阶	166
8.1  测试项目管理	166
8.2  用户自定义步骤	173
8.3  系统设置	175
8.4  查看历史记录	180
8.5  Test Perfect并行测试	181
8.6  Test Perfect iOS 8 支持	183
第9章  Test Perfect & Appium实战	185
9.1  Test Perfect iOS自动化测试实战	185
9.2  Test Perfect Android自动化测试实战	196
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>零成本实现Android/iOS自动化测试
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>智能手机跨平台开发高级教程
第1章  智能手机是新式个人电脑	1
1.1  应用程序市场前景	1
1.2  智能手机简介	3
1.2.1  智能手机前景	3
1.2.2  跨平台框架	4
1.2.3  移动应用程序的品牌经验	4
1.3  Web技术	8
1.4  跨平台框架	8
1.5  关于本书	11
第Ⅰ部分  跨平台开发与发布
第2章  iPhone	15
2.1  Xcode介绍	15
2.2  iPhone开发标准实践	16
2.3  构建简单的iPhone应用程序	16
2.3.1  创建Xcode项目	17
2.3.2  创建界面	18
2.4  在设备上安装应用程序	25
2.4.1  使用开发配置助手	25
2.4.2  手动构建iPhone配置	26
2.4.3  查找设备ID	26
2.4.4  创建配置文件	27
2.4.5  安装配置文件	27
2.4.6  在设备上安装和运行
应用程序	28
第3章  Android	29
3.1  Android开发	30
3.1.1  搭建Eclipse开发环境	30
3.1.2  构建简单的Android应用
程序	32
3.1.3  使用Android WebView的
简单应用程序	38
3.2  为Android设备构建应用程序	40
3.3  在Web上发布	41
3.4  Android Market	41
第4章  BlackBerry	43
4.1  BlackBerry平台	43
4.2  搭建典型Java开发环境	44
4.3  构建简单的BlackBerry
应用程序	45
4.3.1  创建Eclipse项目	45
4.3.2  创建界面	47
4.3.3  代码解释	49
4.3.4  构建和测试应用程序	49
4.3.5  使用Label、Text Field和Button
的简单用户界面应用程序	50
4.3.6  代码解释	52
4.3.7  使用BlackBerry Browser
Field的简单应用程序	52
第5章  Windows Mobile	57
5.1  为Windows Mobile 6.5开发
搭建环境	58
5.2  构建简单的Windows Mobile
应用程序	58
5.2.1  创建Smart Device项目	58
5.2.2  构建基本功能	60
5.2.3  部署和测试应用程序	62
5.2.4  充实应用程序	63
5.3  打包和发布应用程序	66
5.3.1  将CAB Project添加到
Solution	66
5.3.2  定制产品名称	67
5.3.3  把应用程序添加到CAB
项目中	67
5.3.4  创建应用程序快捷方式	68
5.3.5  添加注册表项	68
5.3.6  构建和部署CAB文件	68
5.3.7  安装CAB文件	69
5.4  发布应用程序	69
第Ⅱ部分  跨平台的原生框架
第6章  Rhodes	73
6.1  开发架构	74
6.2  运行时架构	75
6.3  数据库(Rhom)	76
6.4  多线程	77
6.5  Rhodes和Rails的区别	77
6.6  创建Rhodes应用程序	77
6.7  构建Rhodes应用程序	78
6.8  运行应用程序	80
6.8.1  运行在iPhone上	81
6.8.2  运行在Android上	82
6.8.3  运行在BlackBerry上	82
6.8.4  运行在Windows
Mobile 6上	83
6.9  生成模型	83
6.10  调试技巧	87
6.10.1  iPhone	87
6.10.2  BlackBerry	88
6.10.3  Android	88
6.11  Rhodes设备功能	88
6.12  联系人示例	89
6.13  照相机示例	93
6.14  地理定位和地图示例	94
第7章  RhoSync	99
7.1  同步服务器的工作原理	100
7.2  RhoSync源适配器	100
7.3  初始化	101
7.4  通过Web服务进行身份认证：
登录和注销	102
7.5  检索数据：查询和同步	102
7.5.1  查询	103
7.5.2  同步	104
7.6  提交数据：创建、更新和
删除	105
7.6.1  创建	105
7.6.2  更新	106
7.6.3  删除	106
7.7  用户身份验证	106
7.8  产品库存示例	108
7.8.1  在RhoHub上创建
应用程序	108
7.8.2  在本地RhoSync服务器上
创建应用程序	112
7.9  调试RhoSync源适配器	115
第8章  PhoneGap	117
8.1  PhoneGap入门	119
8.1.1  示例应用程序	119
8.1.2  Android	121
8.1.3  BlackBerry	122
8.1.4  PhoneGap模拟器	123
8.2  用PhoneGap编写Hello
World	124
8.3  编写一个PhoneGap应用
程序	125
8.4  联系人示例	130
8.5  照相机示例	134
第9章  Titanium Mobile	137
9.1  入门	137
9.1.1  编写Hello World应用程序	139
9.1.2  针对设备构建应用程序	140
9.1.3  Titanium Mobile设备功能	140
9.1.4  照相机示例	141
第Ⅲ部分  HTML 界 面
第10章  移动HTML和CSS	147
10.1  平台概览	147
10.1.1  iPhone、iPad、iPod Touch
的iOS	147
10.1.2  Android	148
10.1.3  BlackBerry	148
10.1.4  Windows Mobile	149
10.2  常用模式	149
10.2.1  基于屏幕的方法	149
10.2.2  导航	149
10.2.3  UI小部件	151
10.2.4  复选框	152
10.2.5  选择框	154
10.2.6  文本框	155
10.2.7  文本域	156
10.2.8  单选按钮	157
10.2.9  其他组件	159
10.2.10  WebKit Web视图	159
第11章  iWebKit	165
11.1  使用iWebKit 框架	165
11.1.1  注意事项	167
11.1.2  所需头文件	167
11.1.3  <body>标记	168
11.1.4  采用列表组织数据	168
11.2  导航	175
11.3  表单	176
11.4  横向模式	180
11.5  手机集成	180
11.6  在移动应用程序中集成
iWebKit	181
11.6.1  通过Object C在iWebKit
中创建原生iPhone应用
程序	181
11.6.2  创建应用程序	183
11.6.3  添加iWebKit框架到应用
程序布局模板	183
11.6.4  为iWebKit构建
PhoneGap	184
第12章  使用jQTouch实现动画UI	187
12.1  jQTouch入门	188
12.1.1  运行示例代码	188
12.1.2  创建简单的jQTouch
应用程序	188
12.2  添加屏幕	191
12.2.1  通过Ajax加载其他屏幕	193
12.2.2  取消、回退和浏览器
历史	194
12.2.3  其他按钮	195
12.3  jQTouch初始选项	195
12.3.1  基本视图	197
12.3.2  定制jQTouch应用程序	198
12.3.3  导航栏(又称工具栏)	198
12.3.4  通过主题定制视图	201
12.3.5  与Rhodes集成	201
12.3.6  与PhoneGap集成	201
第13章  Sencha Touch	203
13.1  入门	203
13.2  添加带面板的HTML文本	206
13.3  添加组件	209
13.4  实现交互	210
第14章  BlackBerry HTML UI	215
14.1  BlackBerry浏览器的UI
控件	216
14.2  BlackBerry 4.2版浏览器
控件	216
14.2.1  CSS	216
14.2.2  字体	219
14.2.3  窗体	220
14.2.4  JavaScript	221
14.3  用于动态布局的Rhodes
技巧	221
14.4  BlackBerry 4.6版浏览器
控件	223
14.5  显示与用户交互	223
14.6  开发环境	224
附录A  级联样式表	225
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>智能手机跨平台开发高级教程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android自学视频教程
本书光盘"自主学习系统"内容索引...XI
第1篇  入  门  篇
第1章  Android入门	2
（ 视频讲解：22分钟）
1.1  Android概述	3
1.1.1  Android的定义	3
1.1.2  Android成功案例	5
1.1.3  Android的版本	6
1.1.4  Android市场	8
1.2  Android特性	8
1.2.1  开放性	8
1.2.2  挣脱束缚	9
1.2.3  丰富的硬件	9
1.2.4  开发商	9
1.2.5  Google应用	9
1.3  Android 4.3新增特性	9
1.3.1  用户体验	10
1.3.2  多用户切换与受限账户	10
1.3.3  蓝牙	10
1.3.4  WiFi后台自动搜索功能	10
1.3.5  图形	10
1.3.6  音频	11
1.3.7  流媒体加密	11
1.3.8  通知栏	11
1.3.9  相机	11
1.3.10  拨号面板	11
1.3.11  键盘与输入	12
1.3.12  设置	12
1.3.13  支持国际用户	12
1.3.14  新增多国语言支持	12
1.3.15  谷歌套件	12
1.3.16  其他新增特性	12
1.4  如何学习Android	13
1.4.1  如何学好Android	13
1.4.2  Android API文档的使用	13
1.5  本章小结	14
第2章  搭建Android开发环境	15
（ 视频讲解：1小时26分钟）
2.1  搭建Android开发环境	16
2.1.1  Android开发准备	16
2.1.2  JDK的下载	17
2.1.3  JDK的安装与配置	19
2.1.4  ADT Bundle的下载	22
2.2  第一个Android程序	25
2.2.1  创建Android应用程序	25
2.2.2  创建AVD模拟器	29
2.2.3  运行Android程序	31
2.2.4  调试Android应用程序	31
2.2.5  Android应用开发流程	33
2.3  综合应用	33
2.3.1  创建一个可以运行在所有Android
版本上的程序	33
2.3.2  在Android窗口中输出"你好"
中文字符串	33
2.4  本章常见错误	35
2.5  本章小结	35
2.6  跟我上机	36
第3章  认识Android模拟器	37
（ 视频讲解：21分钟）
3.1  启动和删除Android模拟器	38
3.1.1  启动Android模拟器	38
3.1.2  删除Android模拟器	39
3.2  Android模拟器常用设置	39
3.2.1  设置语言	40
3.2.2  设置输入法	41
3.2.3  设置日期时间	42
3.3  安装和卸载程序	44
3.3.1  使用adb命令安装和卸载
Android程序	44
3.3.2  通过DDMS管理器安装Android
程序	46
3.3.3  在Android模拟器中卸载程序	47
3.4  综合应用	48
3.4.1  设置模拟器桌面背景	48
3.4.2  在Android模拟器中安装搜狗
拼音输入法	49
3.5  本章常见错误	50
3.6  本章小结	50
3.7  跟我上机	51
第4章  剖析Android程序	52
（ 视频讲解：58分钟）
4.1  Android程序的组成	53
4.1.1  src目录	53
4.1.2  res目录	54
4.1.3  gen目录及R.java文件	56
4.1.4  AndroidManifest.xml文件	58
4.2  Android程序的生命周期	59
4.3  Android程序的基本组件	60
4.3.1  Activity（活动窗口）	60
4.3.2  BroadcastReceiver
（广播接收器）	62
4.3.3  Content Provider（数据共享）	63
4.3.4  Service（服务）	65
4.4  综合应用	66
4.4.1  在Android程序中添加
Activity	66
4.4.2  在Android程序中添加Service	67
4.5  本章常见错误	68
4.6  本章小结	68
4.7  跟我上机	68
第5章  Android常用组件的使用	69
（ 视频讲解：2小时42分钟）
5.1  Android的UI界面	70
5.1.1  Android UI界面概述	70
5.1.2  使用XML布局文件控制UI
界面	70
5.1.3  在Java代码中控制UI界面	72
5.1.4  使用XML和Java代码混合
控制UI界面	74
5.1.5  开发自定义的View	76
5.2  文本类组件	78
5.2.1  TextView组件	78
5.2.2  EditText组件	81
5.2.3  AutoCompleteTextView组件	83
5.3  按钮类组件	86
5.3.1  Button组件	86
5.3.2  ImageButton组件	88
5.3.3  ToggleButton组件	89
5.4  选择类组件	91
5.4.1  RadioButton组件	91
5.4.2  CheckBox组件	94
5.5  列表类组件	97
5.5.1  ListView组件	97
5.5.2  Spinner组件	102
5.6  图像类组件	104
5.6.1  ImageView组件	104
5.6.2  Gallery组件	106
5.6.3  ImageSwitcher组件	109
5.7  综合应用	111
5.7.1  实现带图标的ListView列表	111
5.7.2  猜猜鸡蛋放在哪只鞋子里	114
5.8  本章常见错误	117
5.9  本章小结	118
5.10  跟我上机	118
第6章  掌握布局管理器	119
（ 视频讲解：58分钟）
6.1  线性布局管理器	120
6.2  绝对布局管理器	124
6.3  框架布局管理器	125
6.4  相对布局管理器	127
6.5  表格布局管理器	129
6.6  综合应用	132
6.6.1  我同意游戏条款	132
6.6.2  应用相对布局管理器显示软件更新
提示	135
6.7  本章常见错误	136
6.8  本章小结	137
6.9  跟我上机	137
第7章  Android程序调试与错误处理	139
（ 视频讲解：48分钟）
7.1  输出日志信息的几种方法	140
7.1.1  Log.d方法--输出故障日志
信息	140
7.1.2  Log.e方法--输出错误日志
信息	141
7.1.3  Log.i方法--输出程序日志
信息	142
7.1.4  Log.v方法--输出冗余日志
信息	143
7.1.5  Log.w方法--输出警告日志
信息	144
7.2  Android程序调试	146
7.3  程序异常处理	147
7.3.1  Android程序出现异常怎么办	147
7.3.2  如何捕捉Android程序异常	148
7.3.3  抛出异常的两种方法	149
7.3.4  何时使用异常处理	152
7.4  综合应用	152
7.4.1  向LogCat视图中输出用户
登录时间	152
7.4.2  使用throw关键字在方法中
抛出异常	152
7.5  本章常见错误	153
7.6  本章小结	154
7.7  跟我上机	154

第8章  Activity的使用	155
（ 视频讲解：1小时44分钟）
8.1  Activity入门	156
8.1.1  Activity概述	156
8.1.2  Activity的4种状态	156
8.1.3  Activity的属性	157
8.2  Activity的生命周期	159
8.2.1  Activity生命周期概述	159
8.2.2  Activity的方法	160
8.3  Activity常用操作	164
8.3.1  创建Activity	164
8.3.2  启动一个或多个Activity	165
8.3.3  多个Activity之间的传值	169
8.3.4  关闭Activity	172
8.4  综合应用	172
8.4.1  根据输入的生日判断星座	172
8.4.2  带选择头像的用户注册界面	176
8.4.3  仿QQ客户端登录界面	180
8.5  本章常见错误	183
8.6  本章小结	184
8.7  跟我上机	184
第9章  使用Intent进行通信	186
（ 视频讲解：56分钟）
9.1  Intent对象简介	187
9.1.1  Intent对象概述	187
9.1.2  3种不同的Intent传输机制	187
9.2  Intent对象的组成	188
9.2.1  组件名称	188
9.2.2  动作	189
9.2.3  数据	190
9.2.4  种类	193
9.2.5  附加信息	194
9.2.6  标志	197
9.3  解析Intent对象	199
9.3.1  Intent过滤器	199
9.3.2  通用情况	202
9.3.3  使用Intent匹配	203
9.4  使用Intent传递数据	203

9.4.1  无参数Activity跳转	203
9.4.2  向下一个Activity传递数据	203
9.5  综合应用	209
9.5.1  使用Intent实现直接发送短信	209

9.5.2  使用Intent打开网页	212
9.6  本章常见错误	214
9.7  本章小结	214
9.8  跟我上机	214
第2篇  提  高  篇
第10章  Android高级组件的使用	218
（ 视频讲解：1小时2分钟）
10.1  日期时间类组件	219
10.1.1  AnalogClock组件	219
10.1.2  DigitalClock组件	220
10.2  进度条组件	221
10.2.1  ProgressBar组件	221
10.2.2  SeekBar组件	224
10.2.3  RatingBar组件	227
10.3  对话框及消息提示组件	229
10.3.1  Toast组件	229
10.3.2  Notification组件	231
10.3.3  AlertDialog组件	233
10.4  综合应用	238
10.4.1  显示在标题上的进度条	238
10.4.2  仿手机QQ登录状态显示
功能	241
10.5  本章常见错误	244
10.6  本章小结	244
10.7  跟我上机	244
第11章  Android中的事件处理	246
（ 视频讲解：20分钟）
11.1  事件处理概述	247
11.2  处理键盘事件	247
11.3  处理触摸事件	248
11.4  手势的创建与识别	250
11.4.1  手势的创建	251
11.4.2  手势的导出	252
11.4.3  手势的识别	252
11.5  综合应用	254
11.5.1  查看手势对应分值	254
11.5.2  使用手势输入数字	255
11.6  本章常见错误	257
11.7  本章小结	257
11.8  跟我上机	257
第12章  数据存储技术	259
（ 视频讲解：44分钟）
12.1  使用SharedPreferences对象
存储数据	260
12.2  使用Files对象存储数据	268
12.2.1  openFileOutput()和
openFileInput()方法	268
12.2.2  对Android模拟器中的SD卡
进行操作	271
12.3  SQLite数据库编程	273
12.4  综合应用	277
12.4.1  遍历Android模拟器的
SD卡	277
12.4.2  在SQLite数据库中批量
添加数据	278
12.4.3  使用列表显示数据表中
全部数据	281
12.5  本章常见错误	282
12.6  本章小结	283
12.7  跟我上机	283
第13章  Content Provider实现数据
共享	285
（ 视频讲解：44分钟）
13.1  Content Provider概述	286
13.1.1  数据模型	286
13.1.2  URI的用法	287
13.2  Content Provider的常用
操作	287
13.2.1  查询数据	288
13.2.2  增加记录	289
13.2.3  增加新值	289
13.2.4  批量更新记录	289
13.2.5  删除记录	289
13.3  自定义Content Provider	290
13.3.1  继承ContentProvider类	290
13.3.2  声明Content Provider	292
13.4  综合应用	293
13.4.1  查询联系人ID和姓名	293
13.4.2  自动补全联系人姓名	294
13.5  本章常见错误	295
13.6  本章小结	296
13.7  跟我上机	296
第14章  图形图像处理技术	298
（ 视频讲解：2小时8分钟）
14.1  Android中的常用绘图类	299
14.1.1  Paint类	299
14.1.2  Canvas类	301
14.1.3  Bitmap类	302
14.1.4  BitmapFactory类	303
14.2  绘制2D图像	303
14.2.1  绘制几何图形	304
14.2.2  绘制文本	306
14.2.3  绘制路径	308
14.2.4  绘制图片	311
14.3  常见的图像特效	313
14.3.1  旋转图像	313
14.3.2  缩放图像	315
14.3.3  倾斜图像	317
14.3.4  平移图像	318
14.3.5  使用BitmapShader渲染
图像	320
14.4  Android中的动画	321
14.4.1  实现逐帧动画	321
14.4.2  实现补间动画	322
14.5  综合应用	329
14.5.1  实现带描边的圆角图片	329
14.5.2  实现放大镜效果	330
14.5.3  忐忑的精灵	332
14.6  本章常见错误	333
14.7  本章小结	334
14.8  跟我上机	334
第15章  利用OpenGL实现3D图形	337
（ 视频讲解：56分钟）
15.1  OpenGL概述	338
15.2  绘制3D图形	339
15.2.1  构建3D开发的基本框架	339
15.2.2  绘制一个模型	341
15.3  添加效果	345
15.3.1  应用纹理贴图	346
15.3.2  旋转	347
15.3.3  光照效果	349
15.3.4  透明效果	351
15.4  综合应用	352
15.4.1  绘制一个不断旋转的
金字塔	352
15.4.2  使用Android机器人对立方体
进行纹理贴图	354
15.5  本章常见错误	356
15.6  本章小结	356
15.7  跟我上机	356
第16章  多媒体应用开发	359
（ 视频讲解：50分钟）
16.1  音频的播放	360
16.1.1  使用MediaPlayer播放音频	360
16.1.2  使用SoundPool播放音频	365
16.2  视频的播放	368
16.2.1  使用VideoView组件播放
视频	368
16.2.2  使用MediaPlayer和SurfaceView
播放视频	370
16.3  综合应用	374
16.3.1  为游戏界面添加背景音乐和
按键音	374
16.3.2  制作开场动画	379
16.4  本章常见错误	380
16.5  本章小结	381
16.6  跟我上机	381
第17章  线程与消息处理	383
（ 视频讲解：35分钟）
17.1  多线程的基本操作	384
17.1.1  创建线程	384
17.1.2  开启线程	385
17.1.3  线程的休眠	385
17.1.4  中断线程	385
17.2  Handler消息传递机制	388
17.2.1  循环者--Looper	388
17.2.2  消息处理类--Handler	390
17.2.3  消息类--Message	391
17.3  综合应用	392
17.3.1  开启新线程实现电子
广告牌	392
17.3.2  多彩的霓虹灯	394
17.3.3  简易打地鼠游戏	396
17.4  本章常见错误	398
17.5  本章小结	399
17.6  跟我上机	399
第18章  网络编程技术	401
（ 视频讲解：1小时6分钟）
18.1  通过HTTP访问网络	402
18.1.1  使用HttpURLConnection
访问网络	402
18.1.2  使用HttpClient访问网络	410
18.2  使用WebView显示网页	416
18.2.1  使用WebView组件浏览
网页	416
18.2.2  使用WebView组件加载HTML
代码	418
18.2.3  让WebView组件支持
JavaScript	419
18.3  综合应用	421
18.3.1  打造功能实用的网页
浏览器	421
18.3.2  获取天气预报	424
18.4  本章常见错误	426
18.5  本章小结	426
18.6  跟我上机	427
第19章  Service服务的使用	429
（ 视频讲解：40分钟）
19.1  Service概述	430
19.1.1  Service的分类	430
19.1.2  Service类的重要方法	430
19.1.3  Service的声明	432
19.2  Started Service的使用	433
19.2.1  继承IntentService类	434
19.2.2  继承Service类	435
19.2.3  启动服务	436
19.2.4  停止服务	437
19.3  Bound Service的使用	437
19.3.1  继承Binder类	438
19.3.2  使用Messenger类	440
19.3.3  绑定到服务	442
19.4  管理Service的生命周期	443
19.5  综合应用	443
19.5.1  继承IntentService输出
当前时间	443
19.5.2  继承Service输出当前
时间	446
19.5.3  继承Binder类绑定服务显示
时间	447
19.5.4  使用Messenger类绑定服务
显示时间	450
19.6  本章常见错误	453
19.7  本章小结	453
19.8  跟我上机	453
第3篇  实  战  篇
第20章  Android游戏--数独游戏	456
（ 视频讲解：28分钟）
20.1  需求分析	457
20.2  程序开发及运行环境	457
20.3  程序文件夹组织结构	457
20.4  公共资源文件	458
20.4.1  字符串资源文件	458
20.4.2  数组资源文件	458
20.4.3  颜色资源文件	459
20.5  游戏主窗体设计	459
20.5.1  设计系统主窗体布局文件	460
20.5.2  为界面中的按钮添加
监听事件	462
20.5.3  绘制数独游戏界面	463
20.5.4  数独游戏的实现算法	468
20.6  虚拟键盘模块设计	472
20.6.1  设计虚拟键盘布局文件	473
20.6.2  在虚拟键盘中显示可以
输入的数字	473
20.7  游戏设置模块设计	475
20.7.1  设计游戏设置布局文件	476
20.7.2  设置是否播放背景音乐和
显示提示	476
20.7.3  控制背景音乐的播放与停止	477
20.8  关于模块设计	477
20.8.1  设计关于窗体布局文件	478
20.8.2  显示关于信息	478
20.9  将程序安装到Android
手机上	479
20.10  本章小结	480
第21章  Android应用--家庭
理财通	481
（ 视频讲解：46分钟）
21.1  需求分析	482
21.2  系统设计	482
21.2.1  系统目标	482
21.2.2  系统功能结构	482
21.2.3  系统业务流程图	482
21.2.4  系统编码规范	483
21.3  系统开发及运行环境	484
21.4  数据库与数据表设计	485
21.4.1  数据库分析	485
21.4.2  创建数据库	485
21.4.3  创建数据表	486
21.5  系统文件夹组织结构	487
21.6  公共类设计	488
21.6.1  数据模型公共类	488
21.6.2  Dao公共类	490
21.7  登录模块设计	495
21.7.1  设计登录布局文件	495
21.7.2  登录功能的实现	496
21.7.3  退出登录窗口	497
21.8  系统主窗体设计	497
21.8.1  设计系统主窗体布局文件	498
21.8.2  显示各功能窗口	499
21.8.3  定义文本及图片组件	500
21.8.4  定义功能图标及说明文字	501
21.8.5  设置功能图标及说明文字	501
21.9  收入管理模块设计	503
21.9.1  设计新增收入布局文件	503
21.9.2  设置收入时间	507
21.9.3  添加收入信息	508
21.9.4  重置新增收入窗体中的
各个控件	509
21.9.5  设计收入信息浏览布局
文件	509
21.9.6  显示所有的收入信息	510
21.9.7  单击指定项时打开详细信息	511
21.9.8  设计修改/删除收入布局
文件	512
21.9.9  显示指定编号的收入信息	515
21.9.10  修改收入信息	517
21.9.11  删除收入信息	518
21.10  便签管理模块设计	518
21.10.1  设计新增便签布局文件	519
21.10.2  添加便签信息	520
21.10.3  清空便签文本框	521
21.10.4  设计便签信息浏览布局
文件	521
21.10.5  显示所有的便签信息	523
21.10.6  单击指定项时打开详细
信息	525
21.10.7  设计修改/删除便签布局
文件	526

21.10.8  显示指定编号的便签信息	528
21.10.9  修改便签信息	528
21.10.10  删除便签信息	529
21.11  系统设置模块设计	529
21.11.1  设计系统设置布局文件	530
21.11.2  设置登录密码	531
21.11.3  重置密码文本框	531
21.12  开发常见问题与解决	532
21.12.1  程序在装有Android系统的
手机上无法运行	532
21.12.2  无法将最新修改在Android
模拟器中体现	532
21.12.3  退出系统后还能使用记录的
密码登录	532
21.13  本章小结	533



>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android自学视频教程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>使用HTML、CSS和JavaScript开发Android程序（第2版）
前言 .............................................................................. xi
第1 章 入门指南 ............................................................ 1
1.1 网络应用程序对比原生应用程序 ....................................................................1
1.1.1 什么是网络应用程序 .............................................................................1
1.1.2 什么是原生应用程序 .............................................................................1
1.1.3 优势和劣势 ............................................................................................2
1.1.4 哪种方法最适合你 .................................................................................2
1.2 网络编程速成 ..................................................................................................3
1.2.1 HTML 入门 ...........................................................................................3
1.2.2 CSS 入门 ...............................................................................................6
1.2.3 JavaScript 入门 ......................................................................................9
第2 章 基本样式 .......................................................... 13
2.1 还没网站 .......................................................................................................13
2.2 第一步 ...........................................................................................................15
2.2.1 准备单独的Android 样式表 ................................................................18
2.2.2 控制页面缩放 ......................................................................................20
2.3 添加Android CSS .........................................................................................22
2.4 添加Android 感观效果 .................................................................................25
2.5 使用jQuery 添加基本行为 ............................................................................28
2.6 内容回顾 .......................................................................................................34
第3 章 高级样式 .......................................................... 35
3.1 添加一点Ajax ...............................................................................................35
3.2 交通警察 .......................................................................................................35
3.2.1 添加一些内容 ......................................................................................38
3.2.2 JavaScript 的路由请求 .........................................................................39
3.3 简单的点缀 ...................................................................................................40
3.3.1 进度指示器 ..........................................................................................40
3.3.2 设置页面标题 ......................................................................................44
3.3.3 处理长标题 ..........................................................................................46
3.3.4 自动回到顶部 ......................................................................................47
3.3.5 只拦截本地链接 ..................................................................................49
3.3.6 编写自己的返回按钮 ...........................................................................49
3.4 在主屏幕上添加图标 ....................................................................................56
3.5 内容回顾 .......................................................................................................57
第4 章 动画 ................................................................ 59
4.1 来自朋友的帮助 ............................................................................................59
4.2 让主页滑动起来 ............................................................................................59
4.3 添加Dates 面板 .............................................................................................62
4.4 添加Date 面板 ..............................................................................................67
4.5 添加New Entry 面板 .....................................................................................68
4.6 添加Settings 面板 .........................................................................................71
4.7 将所有代码放在一起 ....................................................................................75
4.8 自定义jQTouch .............................................................................................77
4.9 内容回顾 .......................................................................................................79
第5 章 客户端数据存储 ............................................... 81
5.1 Web Storage ..................................................................................................81
5.1.1 将用户设置保存到本地 .......................................................................82
5.1.2 将选中的数据保存到Session Storage 中 .............................................86
5.2 Web SQL Database ........................................................................................90
5.2.1 创建数据库 ..........................................................................................90
5.2.2 插入行 .................................................................................................93
5.2.3 检索行及处理结果集 ...........................................................................96
5.2.4 删除行 ............................................................................................... 101
5.3 Web Database 错误编码参考 ....................................................................... 104
5.4 内容回顾 ..................................................................................................... 105
第6 章 走向离线 ........................................................ 107
6.1 离线应用程序缓存基础 ............................................................................... 107
6.2 在线Whitelist（白名单）和Fallback（备选）选项 .................................. 111
6.3 创建动态Manifest 文件 .............................................................................. 118
6.4 调试 ............................................................................................................. 122
6.4.1 JavaScript 控制台（JavaScript Console） ........................................... 123
6.5 内容回顾 ..................................................................................................... 125
第7 章 走向原生 ........................................................ 127
7.1 PhoneGap 简介 ............................................................................................ 127
7.2 使用Eclipse 和Android SDK 在本地构建应用程序 ................................... 128
7.2.1 下载并安装Eclipse............................................................................ 128
7.2.2 下载并安装Android SDK .................................................................. 129
7.2.3 在Eclipse 中安装ADT 插件 ............................................................. 129
7.2.4 添加Android 平台和其他组件 .......................................................... 130
7.2.5 安装最新版的PhoneGap ................................................................... 131
7.2.6 建立一个新的Android 项目 .............................................................. 131
7.2.7 以Android 应用方式运行Kilo .......................................................... 132
7.3 使用JavaScript 来控制手机 ........................................................................ 135
7.3.1 Beep（蜂鸣）、Vibrate（振动）及Alert（提醒） .............................. 135
7.3.2 地理位置 ........................................................................................... 139
7.3.3 加速度传感器 .................................................................................... 146
7.4 内容回顾 ..................................................................................................... 149
第8 章 将应用程序提交到Android 应用程序市场 ........ 151
8.1 准备程序的发行版本 .................................................................................. 151
8.1.1 移除调试代码 .................................................................................... 151
8.1.2 应用程序版本管理 ............................................................................. 152
8.1.3 编译并签名你的应用程序 ................................................................. 153
8.2 将程序上传到Android 应用程序市场 ......................................................... 153
8.3 直接发布程序 .............................................................................................. 155
8.4 延伸阅读 ..................................................................................................... 158
附录A 通过WURFL 检测浏览器 ................................ 161
A.1 安装 ............................................................................................................ 161
A.2 配置 ............................................................................................................ 162
A.3 测试wurfl-php ........................................................................................... 163
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>使用HTML、CSS和JavaScript开发Android程序（第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android 平板电脑应用开发入门经典
目    录
第Ⅰ部分  Android 3平板系统概览
第1章  Android平板编程入门	3
1.1  什么是Android	4
1.1.1  Android版本	4
1.1.2  市场上的Android设备	5
1.1.3  Android Market	6
1.2  获取所需工具	7
1.2.1  Java JDK	7
1.2.2  Eclipse	7
1.2.3  下载Android SDK	7
1.2.4  安装包	9
1.2.5  创建Android虚拟设备(AVD)	10
1.2.6  Android开发工具(ADT)	13
1.3  创建第一个Android应用	16
1.4  Android应用剖析	22
1.5  小结	25
第2章  Android平板应用的组件	27
2.1  活动	27
2.2  Fragment	33
2.2.1  动态添加Fragment	38
2.2.2  理解Fragment的生命周期	41
2.2.3  Fragment之间的交互	45
2.3  使用Action Bar	48
2.3.1  向Action Bar添加动作条目	50
2.3.2  自定义动作条目和应用的图标	55
2.4  小结	58
第3章  Android用户界面	61
3.1  视图与视图组	61
3.1.1  LinearLayout	62
3.1.2  AbsoluteLayout	66
3.1.3  TableLayout	68
3.1.4  RelativeLayout	70
3.1.5  FrameLayout	71
3.1.6  ScrollView	74
3.2  基本视图	75
3.2.1  TextView视图	76
3.2.2  常见视图	76
3.3  再论Fragment	85
3.3.1  ListFragment	85
3.3.2  DialogFragment	89
3.3.3  PreferenceFragment	93
3.4  小结	98
第Ⅱ部分  项    目
第4章  创建基于位置的服务应用	103
4.1  显示Google Maps	103
4.1.1  创建项目	104
4.1.2  获取Maps API密钥	105
4.1.3  显示地图	107
4.1.4  显示缩放控件	114
4.1.5  改变视图	116
4.1.6  导航到特定位置	117
4.1.7  添加标记	119
4.1.8  获得触摸位置	122
4.1.9  地理编码与反向地理编码	124
4.2  获取位置数据	126
4.3  小结	138
第5章  SMS消息传递与联网	141
5.1  SMS消息传递	141
5.1.1  以编程的方式发送SMS消息	142
5.1.2  发送消息后获得反馈	145
5.1.3  使用意图发送SMS消息	147
5.1.4  接收SMS消息	148
5.1.5  说明与警告	158
5.1.6  项目：构建位置追踪器应用	159
5.2  发送电子邮件	174
5.3  联网	176
5.3.1  下载二进制数据	179
5.3.2  下载文本文件	181
5.3.3  使用GET方法访问Web服务	184
5.3.4  执行异步调用	189
5.4  小结	190
第6章  发布Android应用	193
6.1  为发布做准备	193
6.1.1  版本化	193
6.1.2  对Android应用进行数字签名	196
6.2  部署APK文件	200
6.2.1  使用adb.exe工具	200
6.2.2  使用Web服务器	202
6.2.3  在Android Market上发布应用	204
6.3  小结	209
第Ⅲ部分  附    录
附录A  使用Eclipse进行Android开发	213
附录B  使用Android模拟器	225
附录C  练习答案	239
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android 平板电脑应用开发入门经典
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android开发入门与实战体验
前言第一篇  基础篇  第1章  揭开Android的神秘面纱    1.1  了解智能手机      1.1.1  智能手机的定义      1.1.2  智能手机的特点      1.1.3  主流智能手机操作系统    1.2  初识Android      1.2.1  Android手机      1.2.2  开放手机联盟    1.3  Android特性    1.4  Android组件结构应用程序框架      1.4.1  Android组件结构      1.4.2  Android应用程序框架    1.5  Android何以脱颖而出    1.6  Android模拟器      1.6.1  什么是模拟器      1.6.2  获取Android模拟器  第2章  搭建Android开发环境    2.1  开发Android应用前的准备      2.1.1  基本系统要求      2.1.2  Android软件开发工具    2.2  全新的Android2.3    2.3  Windows开发环境搭建      2.3.1  JDK、Eclipse、AndroidSDK软件安装      2.3.2  设定AndroidSDKHome      2.3.3  开发环境验证      2.3.4  创建Android虚拟设备（AVD）    2.4  常见的一些问题  第3章  AndroidSDK简要介绍    3.1  AndroidSDK基础    3.2  初步探寻AndroidSDK体系      3.2.1  AndroidSDK目录结构      3.2.2  android.jar及内部结构      3.2.3  SDK文档及阅读技巧      3.2.4  SDK工具集    3.3  解析AndroidSDK实例  第4章  看第一个应用程序    4.1  HelloWorld应用程序分析      4.1.1  新建一个Android工程      4.1.2  设置工程的信息      4.1.3  编写代码和代码分析      4.1.4  运行项目    4.2  调试项目      4.2.1  设置断点      4.2.2  Debug项目      4.2.3  断点调试    4.3  Dialog（对话框）简介      4.3.1  Android对话框      4.3.2  Dialog类详解  第5章  分解Android应用程序核心    5.1  Android体系结构介绍      5.1.1  操作系统层      5.1.2  各种库和Android运行环境      5.1.3  应用程序      5.1.4  应用程序框架    5.2  Android应用程序组成      5.2.1  Activity介绍      5.2.2  BroadcastIntentReceiver介绍      5.2.3  Service（服务）介绍      5.2.4  ContentProvider介绍      5.2.5  Intent和IntentFilter    5.3  Android应用工程文件组成      5.3.1  SEe目录      5.3.2  AndmidManfest.xml文件      5.3.3  常量的定义文件    5.4  应用程序的生命周期    5.5  Activity的生命周期      5.5.1  Activity的几种状态      5.5.2  分解剖析Activity    5.6  Android进程与线程      5.6.1  进程      5.6.2  线程      5.6.3  线程安伞的方法  第6章  Android常用组件    6.1  UI（界面）组件      6.1.1  视图组件——View      6.1.2  视图容器组件——Viewgroup      6.1.3  布局组件——Layout      6.1.4  布局参数——LayoutParams    6.2  绚丽多彩——应用界面布局实例      6.2.1  编程实现      6.2.2  效果演示    6.3  Widget组件详解      6.3.1  创建一个Widget组件      6.3.2  使用按钮Button      6.3.3  使用文本框TextView      6.3.4  使用编辑框EditText      6.3.5  使用多项选择控件CheckBox      6.3.6  使用单项选择控件RadioGroup      6.3.7  使用F拉列表控件Spinner      6.3.8  使用自动完成文本控件AutoCompleteTextView      6.3.9  使用日期选择器控件DatePicker      6.3.10  使用时间选择器TimePicker控件      6.3.11  联合应用DatePicker和TimePicker      6.3.12  使用滚动视图控件ScrollView      6.3.13  使用进度条控件ProgressBar      6.3.14  使用拖动条控件SeekBar      6.3.15  使用评分组件RatingBar      6.3.16  使用图片视图控件lmageView      6.3.17  使用图片按钮控件lmageButton      6.3.18  使用切换图片控件ImageSwitcher和Gallery      6.3.19  使用网格视图控件GridView      6.3.20  使用标签控件Tab    6.4  使用友好菜单控件Menu      6.4.1  Menu基础知识介绍      6.4.2  使用Menu实例    6.5  Intent和Activity    6.6  使用列表控件ListView      6.6.1  ArrayAdapter接受一个数组或者列表（List）作为参数来构建      6.6.2  使用SimpleAdapter    6.7  使用互动对话框控件Dialog    6.8  使用Toast和Notification      6.8.1  Toast简介      6.8.2  Notification简介      6.8.3  联合使用Toast和Notification  第7章  Android组件高级应用    7.1  对话框中的进度条    7.2  再看布局组件      7.2.1  Android的五大布局对象      7.2.2  垂直线性布局      7.2.3  水甲线性布局      7.2.4  相对布局      7.2.5  表单布局      7.2.6  切换卡    7.3  联合使用Spinner和setDropDownViewResource    7.4  Gallery和衍生BaseAdapter容器    7.5  文件搜索引擎FileSearch    7.6  用AnalogClock和DigitalClock控件实现模拟小时钟    7.7  使用ListActivity（活动列表）      7.7.1  ListActivity介绍      7.7.2  ListActivity使用实例    7.8  绘图处理      7.8.1  graphics类基础      7.8.2  使用Matrix实现图片缩放      7.8.3  使用Bitmap和Matrix实现图片旋转    7.9  动态添加/删除Spinner菜单第二篇  典型应用篇  第8章  Intent、Broadcast和Adapter详解    8.1  Android体系核心之“Intent”      8.1.1  Intent的构成      8.1.2  Intent的解析      8.1.3  Intent的基本用法      8.1.4  Intent和Activity      8.1.5  Linkify简介    8.2  Activity的返回值和本地动作      8.2.1  Activity返回值      8.2.2  Android本地动作      8.2.3  IntentFilter响应隐式Intent      8.2.4  Android解析IntentFilter      8.2.5  隐式Intent响应与责任传递    8.3  用Intent来广播一个事件      8.3.1  广播事件      8.3.2  BroadcastReceiver监听广播      8.3.3  Android本地广播    8.4  Adapter详解      8.4.1  Android提供的Adapter      8.4.2  用Adapter进行绑定      8.4.3  使用ArrayAdapter和SimpleCursorAdapter    8.5  Intemet资源      8.5.1  连接Intemet资源      8.5.2  利用Intemet资源  第9章  Android的数据存储操作    9.1  什么是Android数据存储    9.2  SharedPrefererlces存储      9.2.1  SharedPreferences存储类效率分析      9.2.2  应用实例    9.3  文件存储    9.4  再看SQLite存储方式    9.5  ContentPlroyider存储      9.5.1  ContentProvider基础      9.5.2  使用ContentProvider    9.6  网络存储    9.7  数据存储演练      9.7.1  SQLite实现一个日记小      9.7.2  ContentProvider操作一个数据日记本  第1O章  电话与短信应用开发    10.1  IntentFilter解析      10.1.1  动作测试      10.1.2  类另测试      10.1.3  数据测试    10.2  Intent电话拨号处理    10.3  Intent短信处理      10.3.1  创建TinySMS界面      10.3.2  设置权限      1O.3.3  发送短信处理    10.4  Android中电话和短信服务的包  第11章  SOPtiCe的全新服务    11.1  Service深入剖析      11.1.1  Service策略      11.1.2  创建Service      11.1.3  使用Service      11.1.4  与远程Service通信      11.1.5  设置权限      11.1.6  使用Service实例    11.2  Service生命周期    11.3  提高Service优先级    11.4  Service综合实例  第12章  使用位置服务和地图API    12.1  位置服务      12.1.1  android.1  0cation的功能类      12.1.2  Android定位的基本流程      12.1.3  GPS定位实例      12.1.4  构造LocationProvider查询条件    12.2  及时监听位置变化      12.2.1  Maps库类介绍      12.2.2  LocationManager及时监听为遏制位置信息    12.3  应用地图      12.3.1  使用前的设置      12.3.2  使用MapAPI密钥的基本流程      12.3.3  应用实例：使用MaDAPI密钥  第13章  程序优化    13.1  实现高效Java编程规范的十条基础规则    13.2  命名规范    13.3  编写优秀代码的技巧    13.4  性能测试      13.4.1  背景      13.4.2  Java代理      13.4.3  性能测试的步骤      13.4.4  计算机性能测试      13.4.5  内存性能测试    13.5  程序优化      13.5.1  Java程序的基本优化      13.5.2  程序性能优化      13.5.3  何谓高效的Android      13.5.4  Android上的单元测试    13.6  UI界面优化  第14章  网络RSS阅读器    14.1  基础知识介绍      14.1.1  RSS的用途      14.1.2  RSS阅读器      14.1.3  RSS语法    14.2  SAX技术介绍      14.2.1  SAX的原理      14.2.2  基于对象和基于事件的接口      14.2.3  常用的接口和类    14.3  实现流程    14.4  具体实现      14.4.1  建立实体类      14.4.2  主程序文件ActivityMain.java      14.4.3  实现ContentHandler      14.4.4  主程序文件ActivityShowDescdption.jiavaIl      14.4.5  主布局文件main.xml      14.4.6  详情主布局文件showdescription.xml    14.5  打包、签名和发布      14.5.1  申请会员      14.5.2  生成签名文件      14.5.3  使用签名文件      14.5.4  发布  第15章  通用手机助手    15.1  项目分析      15.1.1  构成模块      15.1.2  流程规划    15.2  具体实现      15.2.1  系统主界面      15.2.2  系统信息      15.2.3  硬件信息      15.2.4  软件信息      15.2.5  运行时信息      15.2.6  文件浏览器信息      15.2.7  AndroidManifest.xml获取权限  第16章  Map地图综合应用    16.1  项目分析      16.1.1  规划UI界面      16.1.2  数据存储设计    16.2  具体实现      16.2.1  新建工程      16.2.2  主界面      16.2.3  新建界面      16.2.4  设置界面      16.2.5  帮助界面      16.2.6  地图界面      16.2.7  数据存取      16.2.8  实现Service服务
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android开发入门与实战体验
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Head First Android开发
1入门
欢迎来到Android村
Android平台剖析
你的开发环境
安装Java
构建一个基本应用
活动和布局概览
构建一个基本应用（续）
构建一个基本应用（续）
你已经创建了你的第一个Android应用
Android Studio会为你创建一个完整的文件夹结构
工程中的有用文件
用Android Studio编辑器编辑代码
在Android模拟器上运行应用
创建Android虚拟设备
在模拟器中运行应用
可以在控制台上查看进度
试一试
发生了什么？
调整应用
布局里有什么？
activity_main.xml包含两个元素
布局文件包含字符串的引用，而不是字符串本身
分析strings.xml文件
试一试我们的应用
你的Android工具箱
2构建交互式应用
构建一个啤酒荐酒师应用
创建工程
我们已经创建了默认活动和布局
用设计编辑器增加组件
activity_find_beer.xml有一个新按钮
对XML的修改……
……会反映到设计编辑器
使用字符串资源而不是硬编码文本
修改布局使用字符串资源
试一试这个应用
向spinner增加值
让spinner引用字符串数组
试一试spinner
需要让按钮做些事情
让按钮调用一个方法
活动代码
为活动增加onClickFindBeer（）方法
onClickFindBeer（）需要做些什么
一旦有了View，就能访问它的方法
更新活动代码
活动的第一个版本
试一试
构建定制Java类
改进活动调用定制Java类来得到真正的建议
活动代码版本2
运行代码时发生了什么
试一试你的应用
你的Android工具箱
3多个活动和意图
应用可以包含多个活动
应用结构
创建工程
创建第二个活动和布局
欢迎查看Android清单文件
使用意图启动第二个活动
运行应用时会发生什么
试一试应用
向第二个活动传递文本
更新文本视图属性
putExtra（）在意图中增加额外的信息
更新CreateMessageActivity代码
让ReceiveMessageActivity使用意图中的信息
用户单击Send Message按钮时发生了什么
试一试应用
Android应用如何工作
代码运行时发生了什么
Android如何使用意图过滤器
需要在一个真正的设备上运行你的应用
试一试应用
修改代码创建一个选择器
试一试应用
你的Android工具箱
4活动生命周期
活动到底如何工作？
秒表应用
秒表布局代码
为按钮增加代码
runTimer（）方法
Handler允许调度代码
完整的runTimer0代码
完整的StopwatchActivity代码
旋转屏幕会改变设备配置
从生到死：活动的状态
活动生命周期：从创建到撤销
如何处理配置变化？
运行应用时发生了什么
活动的生命周期不只是有创建和撤销
活动生命周期：可见生命期
更新的StopwatchActivity代码
运行应用时会发生什么
试一试应用
不过如果应用只是部分可见会怎么样？
活动生命周期：前台生命期
如果活动暂停就停止秒表
完整的活动代码
生命周期方法快速指南
你的Android工具箱
……
5用户界面
6列表视图和适配器
7片段
8嵌套片段
9动作条
10导航抽屉
11SQLite数据库
12游标与AsyncTask
13服务
14材料设计
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Head First Android开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android系统安全与攻防
译者序
原书序
原书前言
作者简介
原书致谢
第1章引言
1.1选择Android系统的原因
1.2移动设备的威胁演化
1.3Android概述
1.4Android应用软件市场
1.5小结
第2章Android体系结构
2.1Android体系结构概述
2.1.1Linux内核层
2.1.2标准库层
2.1.3Android运行时环境
2.1.4应用程序框架层
2.1.5应用程序层
2.2Android系统启动与Zygote
2.3Android SDK及开发工具
2.3.1Android SDK下载与安装
2.3.2Eclipse和ADT开发环境
2.3.3Android工具
2.3.4DDMS
2.3.5adb
2.3.6ProGuard
2.4“Hello World”应用程序详解
2.4.1认识“Hello World”程序
2.5小结
第3章Android应用程序体系结构
3.1应用程序组件
3.1.1Activity
3.1.2Intent
3.1.3Broadcast Receiver
3.1.4Service
3.1.5Content Provider
3.2Activity生命周期
3.3小结
第4章Android安全机制
4.1Android安全模型
4.2Linux权限机制
4.3Android Manifest权限
4.3.1权限请求
4.3.2权限组合使用
4.4移动设备安全问题
4.4.1设备
4.4.2漏洞修补
4.4.3外部存储
4.4.4键盘
4.4.5数据隐私
4.4.6应用程序安全
4.4.7遗留代码
4.5近期主要的Android系统攻击事件
4.5.1DroidDream变种程序分析
4.5.2Zsone手机木马程序分析
4.5.3Zitmo手机木马程序分析
4.6小结
第5章Android渗透测试
5.1渗透测试
5.1.1外部渗透测试
5.1.2内部渗透测试
5.1.3渗透测试方法
5.1.4静态分析
5.1.5Android系统和设备渗透测试步骤
5.2Android渗透测试工具
5.2.1Nmap
5.2.2BusyBox
5.2.3Wireshark
5.2.4Android操作系统的漏洞
5.3Android应用程序渗透测试
5.3.1Android应用程序
5.3.2应用程序安全
5.4其他问题
5.4.1内部、外部以及云端的数据存储
5.5小结
第6章Android应用程序逆向工程
6.1逆向工程
6.2恶意软件
6.3识别Android恶意软件
6.4Android应用程序逆向工程方法
6.5小结
第7章无需源码修改Android应用程序行为
7.1概述
7.1.1添加恶意的行为
7.1.2清除恶意的行为
7.1.3绕过特定的功能
7.2DEX文件格式
7.3案例研究：修改应用程序行为
7.4实例1：Google Wallet漏洞
7.5实例2：Skype漏洞（CVE20111717）
7.6防范策略
7.6.1代码混淆
7.6.2服务器端处理
7.6.3迭代散列与使用盐值
7.6.4选择恰当位置存储敏感信息
7.6.5加密技术
7.6.6结论
7.7小结
第8章入侵Android
8.1概述
8.2Android文件系统
8.2.1挂载点
8.2.2文件系统
8.2.3目录结构
8.3Android应用程序数据
8.3.1存储方式
8.3.2/data/data
8.4Android设备的root处理
8.5制作Android系统镜像
8.6访问应用程序数据库
8.7从Android设备上提取数据
8.8小结
第9章企业环境Android系统的安全问题
9.1企业的Android系统
9.1.1企业Android系统的安全问题
9.1.2终端用户的安全意识
9.1.3合规/审查事项
9.1.4移动设备安全措施推荐
9.2强化Android安全性
9.2.1安全部署Android设备
9.2.2设备管理
9.3小结
第10章浏览器安全与未来威胁格局
10.1移动HTML安全
10.1.1跨站点脚本攻击
10.1.2SQL注入攻击
10.1.3跨站点伪造请求攻击
10.1.4网络钓鱼
10.2移动浏览器安全
10.2.1浏览器漏洞
10.3未来移动设备威胁发展格局
10.3.1手机变身间谍/跟踪装置
10.3.2通过移动设备操纵企业网络与设备
10.3.3移动钱包与NFC
10.4小结
附录
附录AManifest权限
附录BJEB反汇编器和反编译器简介
附录C破解应用程序SecureApp.apk
附录D英文缩略语
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android系统安全与攻防
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>终极极客——“Android之父”安迪•鲁宾
目 录
Contents
前言 / III
第一章 科技“精灵”在天才指尖游荡 / 1
玩出来的天才 / 2
小补丁 乔布斯与鲁宾的“拼爹记 / 4
不用钥匙开门 / 6
小补丁 两位极客大佬的座驾 / 8
痴迷的“极客” / 11
小补丁 匪夷所思的极客比尔•盖茨 / 14
传奇的就业经历 / 17
小补丁 制作《大话西游》的极客吴渔夫 / 21
第一次创业 / 24
小补丁 网易丁磊的创业经历 / 27
VIII 终极极客——Android 之父安迪•鲁宾
幸运的“疯子” / 30
小补丁 谷歌接手之后的Android 发展 / 33
两个关键人物 / 35
小补丁 小心“极客综合征” / 38
打开“潘多拉盒子” / 40
小补丁 三年不来公司上班的极客黄章 / 44
捕捉碎片化小精灵 / 47
小补丁 Android 碎片化问题的最新情况 / 51
觊觎苹果加减法一块上 / 53
小补丁 沃兹眼中的Android 手机 / 57
第二章 越模糊，事情就越有趣 / 59
被激怒的乔布斯 / 59
小补丁 iPhone 的技术是偷来的吗？ / 63
两大商业理念的竞争 / 66
小补丁 单线程与多线程生活 / 69
邻居打架受伤的是Android / 73
小补丁 小米公司——极客公司 / 76
“双面胶”施密特 / 78
小补丁 极客的脾气 / 82
目 录 IX
小心谨慎的带头大哥 / 84
小补丁 极客的开源情结 / 86
如鲠在喉的吞摩行动 / 89
小补丁 中国互联网史上的最大收购 / 93
滑头的桑杰•贾 / 95
小补丁 极客史蒂芬•埃洛普：微软的间谍？ / 99
专利：诱人的胡萝卜和大棒 / 101
小补丁 Android 应用对抗iOS / 104
第三章 世界不需要另外一个平台 / 107
“Android”是条鲇鱼 / 108
小补丁 为什么互联网公司要做手机？ / 111
让愿意接纳的人使用 / 114
小补丁 谈谈智能手机的大屏幕时代 / 117
英特尔与谷歌“攀亲” / 119
小补丁 是谁设计了Android 标志？ / 122
携手上游高通 / 124
小补丁 极客蔡宗建的网游情结 / 126
力挺HTC 反击苹果 / 128
小补丁 极客的关键词和三大信念 / 130
X 终极极客——Android 之父安迪•鲁宾
三星亦敌亦友 / 133
小补丁 为什么柔性屏手机如此受关注？ / 136
“三阿哥”为老子“代工” / 139
小补丁 极客精神是什么？ / 141
领头大哥的麻烦 / 144
小补丁 基友情深的鲍尔默和盖茨 / 146
不会把精灵装进盒子 / 149
小补丁 极客陈一舟的一封信 / 152
第四章 赶上前去，杀它个干干净净 / 155
与微软频频交火 / 156
小补丁 看起来越来越平庸的谷歌应用 / 160
野心勃勃的亚马逊 / 163
小补丁 亚马逊找上HTC 合作 / 165
甲骨文索要10 亿美元 / 168
小补丁 谈一谈极客必备的技能 / 171
诺微联手倒谷歌 / 174
小补丁 王微与乔布斯的会面 / 176
阿里“八公子”发飚 / 180
小补丁 互联网极客的偶像 / 183
目 录 XI
龟兔对决社交媒体 / 188
小补丁 在Facebook 工作会怎样？ / 190
第五章 请给我们带来更多登月般的惊喜 / 193
佩奇与鲁宾的独白 / 193
小补丁 鲍尔默声泪俱下别微软 / 197
一个独奏的艺术家 / 200
小补丁 盘点那些 “不务正业” 的极客大佬们 / 203
冲出重围做最开心的事 / 206
小补丁 极客族 / 209
在谷歌的那些年 / 211
小补丁 一个在清华附近蹲了十七年的极客 / 212
新掌门皮采的建树 / 215
小补丁 一日极客，终生极客 / 218
后鲁宾时代的猜想 / 220
小补丁 安迪•鲁宾今何在？ / 223
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>终极极客——“Android之父”安迪•鲁宾
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android 4.X开发完全上手—— 手把手构建完整Android App范例\
目    录
第1章  Android开发简介	1
1.1  了解Android的优势	1
1.2  构建本地应用程序	2
1.3  Android的历史	2
1.4  Android用户界面	7
1.5  Android应用程序	8
1.6  Google Play简介	8
1.7  小结	10
第2章  搭建开发环境	11
2.1  在Windows上安装Java JDK和JRE	11
2.2  在Windows上安装Eclipse集成开发环境	13
2.2.1  安装Eclipse	13
2.2.2  在Eclipse中配置Java JRE	14
2.2.3  熟悉Eclipse	14
2.3  在Windows上安装Android SDK	16
2.4  Mac系统上安装和使用Java	19
2.4.1  在Mac电脑上下载并安装JDK	20
2.4.2  在Mac上下载并安装Eclipse IDE	20
2.4.3  在Mac上下载并安装Android SDK	20
2.4.4  在Mac上安装Android Developer Tools插件	21
2.5  小结	22
第3章  创建第一个Android应用程序	23
3.1  创建Android应用程序	23
3.2  运行Android项目	25
3.2.1  创建Android虚拟设备	25
3.2.2  在AVD中运行应用程序	26
3.2.3  使用Android虚拟设备的最佳实践	28
3.2.4  在实际设备上安装Android应用程序	28
3.3  在Android项目中使用Lint	29
3.4  Android项目文件	29
3.4.1  XML布局文件	29
3.4.2  XML资源文件	31
3.4.3  XML文件中的ID属性及其在生成的文件中的作用	32
3.4.4  Activity文件	33
3.4.5  Activity的生命周期	35
3.4.6  访问Activity中的TextView	35
3.4.7  应用程序日志	37
3.4.8  Android清单文件	39
3.5  小结	40
第4章  创建Android用户界面	41
4.1  重构代码	41
4.2  实施Strict模式	43
4.3  创建一个简单的用户界面	44
4.3.1  线性布局的用法	45
4.3.2  创建按钮事件处理程序	48
4.3.3  更新计时器显示	51
4.3.4  显示正在运行的计时器	53
4.4  Activity生命周期	55
4.4.1  Android Activity生命周期	57
4.4.2  修复Activity生命周期问题	59
4.5  实现Android设备的振动	59
4.6  保存用户首选项	61
4.6.1  创建新的Activity	61
4.6.2  显示新的Activity	62
4.6.3  保存应用程序的状态	63
4.6.4  使用Shared Preferences	65
4.7  小结	67
第5章  提高Android应用程序可用性	69
5.1  重构代码	69
5.2  改善Setting Activity	75
5.2.1  显示Toast弹出窗口	75
5.2.2  使用后退按钮从Settings Activity返回	78
5.3  操作栏和菜单	80
5.3.1  创建菜单	80
5.3.2  创建一个操作栏	82
5.3.3  返回Home画面	84
5.4  使用通知	86
5.4.1  创建通知	86
5.4.2  显示或替换一个新的通知	89
5.4.3  定期显示通知	89
5.5  创建数据库	92
5.5.1  创建数据模型	93
5.5.2  创建数据库及其表	93
5.5.3  检查表的创建	96
5.5.4  创建表间的关系	97
5.5.5  创建路线列表视图	101
5.6  小结	106
第6章  自定义Android应用程序	107
6.1  重构应用程序	107
6.2  了解屏幕的差异	108
6.2.1  屏幕尺寸和屏幕密度	108
6.2.2  了解设备	109
6.3  使应用程序与分辨率无关	110
6.4  使用配置限定符	112
6.4.1  创建启动图标	114
6.4.2  创建通知图标	115
6.4.3  让应用程序适合不同的屏幕尺寸	116
6.4.4  使用资源尺寸	118
6.4.5  在Java代码中改变文字的大小	120
6.4.6  修改横屏模式的布局	122
6.4.7  修改平板电脑的布局	123
6.4.8  创建并排的视图	124
6.5  使用样式和主题	126
6.5.1  启用夜间模式	128
6.5.2  切换主题	130
6.5.3  检测亮度级别	134
6.5.4  处理不稳定的传感器值	136
6.6  小结	138
第7章  使应用程序支持位置感知	139
7.1  重构代码	139
7.2  定位设备的位置	143
7.2.1  在虚拟设备中测试GPS	148
7.2.2  GPS定位的精度	149
7.2.3  提高GPS定位的用户体验	150
7.2.4  显示Google Maps	153
7.3  处理不精确的位置数据	161
7.4  保存GPS数据	167
7.4.1  插入、更新和删除数据	167
7.4.2  更新模型	170
7.4.3  在应用程序中使用数据库	176
7.5  显示GPS数据	179
7.5.1  使用ListActivity	179
7.5.2  在Google地图中显示GPS数据	184
7.6  小结	189
第8章  集成社交网络	191
8.1  重构代码	191
8.2  将照片整合到Android应用程序中	191
8.2.1  拍照	192
8.2.2  检查是否可以拍照	194
8.2.3  在应用程序中显示相片	198
8.2.4  获得Activity的结果	203
8.3  与朋友分享内容	207
8.3.1  显示选择器	207
8.3.2  分享文本和图片	210
8.4  小结	212
第9章  优化性能、内存和电源管理	213
9.1  重构代码	213
9.2  让应用程序以服务形式运行	213
9.2.1  处理方向改变	214
9.2.2  创建服务	217
9.3  延长电池寿命	229
9.3.1  确定用电量	230
9.3.2  根据电量水平进行响应	231
9.3.3  定期检查电池	237
9.4  加快数据库运行速度	239
9.4.1  通过索引加速数据库	239
9.4.2  使用异步方式加速数据库	241
9.5  小结	244
第10章  测试应用程序	247
10.1  重构代码	247
10.2  使用JUnit进行测试	247
10.2.1  创建一个新的测试应用程序	248
10.2.2  提高测试覆盖率	253
10.2.3  加快测试速度	254
10.2.4  通过重构使测试更容易	258
10.3  使用Android JUnit 扩展来测试	259
10.3.1  测试Android Activity	260
10.3.2  创建Mock应用程序	263
10.3.3  测试Activity生命周期	265
10.3.4  进一步测试Activity	267
10.3.5  通过与UI的交互来测试	269
10.4  测试服务	270
10.5  使用Monkey测试	272
10.6  自动运行测试	275
10.6.1  从命令行运行测试	275
10.6.2  安装Jenkins	277
10.6.3  使用Git版本控制	278
10.6.4  Git Bash命令概述	280
10.6.5  使用Jenkins	280
10.7  在多种设备上测试	281
10.8  小结	283
第11章  针对不同设备和国家进行优化	285
11.1  重构代码	285
11.2  国际化	287
11.2.1  支持多语言	287
11.2.2  从简单的机器翻译开始	288
11.2.3  在用户的帮助下改善翻译结果	292
11.2.4  添加更多语言版本	294
11.3  适应各种方言	298
11.3.1  添加区域码	298
11.3.2  处理单词的变化：Route、Path、Trail和Track	299
11.4  处理各种语言格式	300
11.4.1  支持从右至左布局	300
11.4.2  处理日期、数字和货币的变体	301
11.5  支持向后兼容	303
11.5.1  使用Android支持库	303
11.5.2  Android版本检查	303
11.6  为各种屏幕尺寸进行构建	306
11.7  使用Fragment	309
11.8  小结	314
第12章  使用Google Play和Amazon Appstore来销售应用程序	317
12.1  建立媒体策略	317
12.1.1  使用Google Play	317
12.1.2  使用服务和API实现Google许可	321
12.2  在应用程序中使用广告	322
12.3  使用Amazon Appstore	325
12.4  小结	327
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android 4.X开发完全上手—— 手把手构建完整Android App范例\
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android 機器人‧安娜
人物介紹
第一部：天空爆響
第二部：謝爾巴茨基一家人的星航之旅
第三部：深藏於內的祕密
第四部：一個男人的靈魂鬥爭
第五部：米哈伊洛夫離奇之死
第六部：報銷機女王
第七部：空洞
尾聲一：新的過去
尾聲二：舊的未來
讀者討論引導
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android 機器人‧安娜
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android进阶实践
第1部分  理论基础——初识Android
第1章  领略Android概貌	2
1.1  走近Android王国	2
1.1.1  认识Android	2
1.1.2  Android定义	3
1.2  Android的版本	3
1.2.1  Android版本更新	3
1.2.2  Android版本详细介绍	3
1.3  Android基础知识	6
1.3.1  Android丰富的特性	6
1.3.2  Android组织结构及应用框架	6
1.3.3  学习Android必备知识	8
第2章  Android环境搭建	10
2.1  Android工具清单	10
2.1.1  JDK、Eclipse、Android SDK、Android ADT介绍	10
2.1.2  JDK的下载、安装、配置	11
2.1.3  Eclipse的下载、安装	13
2.1.4  SDK、ADT的Eclipse集成	14
2.2  Android核心解析——Android SDK	19
2.2.1  Android SDK目录结构	20
2.2.2  android.jar包内部结构	21
2.2.3  Android SDK常用工具	21
2.3  Android利器的适用场地	28
2.3.1  Linux操作系统	28
2.3.2  Mac OS操作系统	31
第3章  应用结构框架	36
3.1  Android框架	36
3.1.1  Android框架原理	36
3.1.2  Android应用组件	36
3.2  Android应用程序设计剖析	40
3.2.1  创建一个Android应用程序	40
3.2.2  gen资源管理文件R.java	41
3.2.3  AndroidManifest.xml文件	41
3.2.4  资源及res目录	43
3.3  Android APK	50
3.3.1  下载Android APK	50
3.3.2  安装Android APK	50
3.3.3  移除Android APK	52
第2部分  应用实践——简单应用
第4章  颐和园景点查询	54
4.1  项目演示	54
4.1.1  项目首页	54
4.1.2  颐和园景点概貌	54
4.1.3  选择查询景点	55
4.2  分析阶段	56
4.2.1  关于项目	56
4.2.2  景点查询功能分析	56
4.3  开发阶段	57
4.3.1  界面的设计与编码实现	58
4.3.2  项目逻辑功能编码实现	64
4.4  知识点详解	70
4.4.1  TextView	71
4.4.2  Button	75
4.4.3  ScrollView	77
4.4.4  Android Layout布局	79
4.4.5  Intent的用法	87
4.4.6  Spinner	104
4.4.7  CheckBox	105
4.4.8  RadioGroup和RadioButton	107
4.4.9  AutoCompleteTextView和MultiAutoCompleteTextView	108
4.4.10  ProgressBar、SeekBar和RatingBar	112
4.4.11  ToggleButton	115
4.4.12  AnalogClock和DigitalClock	116
4.4.13  DatePicker和TimePicker	117
4.4.14  ImageSwitcher和Gallery	118
4.4.15  GridView	122
4.4.16  ExpandableListView	124
4.4.17  ZoomButton和ZoomControls	126
4.4.18  TextSwitcher	128
4.4.19  TabHost和TabActivity	129
第5章  Android健康测试系统	137
5.1  项目演示	137
5.1.1  项目首页	137
5.1.2  健康测试界面	137
5.1.3  选择查询项	138
5.2  分析阶段	138
5.2.1  关于项目	138
5.2.2  Android健康测试系统功能分析	139
5.2.3  Android健康测试系统设计	144
5.3  开发阶段	145
5.3.1  界面的设计与编码实现	146
5.3.2  项目逻辑功能编码实现	156
5.4  知识点详解	170
5.4.1  ImageView	170
5.4.2  Adapter	171
5.4.3  Toast	179
5.4.4  Dialog	184
第6章  娱乐王国中心——音乐地带	192
6.1  项目演示	192
6.1.1  项目首页	192
6.1.2  音乐播放界面	192
6.1.3  音乐播放列表	193
6.2  分析阶段	193
6.2.1  关于项目	193
6.2.2  音乐地带功能分析	194
6.3  开发阶段	195
6.3.1  界面的设计与编码实现	195
6.3.2  项目逻辑功能编码实现	200
6.4  知识点详解	209
6.4.1  ListView和ListActivity	209
6.4.2  Service	214
6.4.3  Broadcast广播	220
6.4.4  事件监听处理	225
6.4.5  多媒体	233
第7章  娱乐王国中心——扎金花	242
7.1  项目演示	242
7.1.1  项目首页	242
7.1.2  扎金花界面设置	242
7.1.3  玩家游戏界面	243
7.2  分析阶段	243
7.2.1  关于项目	244
7.2.2  扎金花功能分析	244
7.2.3  扎金花系统设计	245
7.3  开发阶段	245
7.3.1  界面的设计与编码实现	247
7.3.2  项目逻辑功能编码实现	254
7.4  知识点详解	269
7.4.1  数据存储方式	269
7.4.2  数据存储——SharedPreferences	270
7.4.3  数据存储——File	275
7.4.4  数据存储——SQLite数据库	280
7.4.5  数据存储——数据共享ContentProvider	289
7.4.6  数据存储——网络存储	303
7.4.7  数据存储——Menu	307
第3部分  应用实践——综合应用
第8章  Android天气查询	314
8.1  项目演示	314
8.1.1  项目首页	314
8.1.2  查看天气页面	314
8.1.3  选择查询界面	315
8.2  分析阶段	315
8.2.1  关于项目	315
8.2.2  Android天气查询系统功能分析	316
8.3  开发阶段	317
8.3.1  界面的设计与编码实现	318
8.3.2  项目逻辑功能编码实现	323
8.4  知识点详解	337
8.4.1  XML文件解析	337
8.4.2  示例：DOM解析	339
第9章  Android无敌斗地主	342
9.1  项目演示	342
9.1.1  项目首页	342
9.1.2  游戏界面	342
9.2  分析阶段	344
9.3  开发阶段	345
9.3.1  界面的设计与编码实现	346
9.3.2  项目逻辑功能编码实现	356
9.4  知识点详解	373
9.4.1  Handler/Message	373
9.4.2  图形图像处理	377
9.4.3  网络通信编程	389
第10章  Android无线定位服务	405
10.1  项目演示	405
10.1.1  项目首页	405
10.1.2  地图缩放界面	405
10.1.3  精确定位	406
10.2  分析阶段	407
10.2.1  关于项目	407
10.2.2  Android Google地图功能实现分析	407
10.3  开发阶段	411
第4部分  创新世界——Android案例
第11章  Android创新应用	418
11.1  个人计算器	418
11.2  是男人就下100层	419
11.3  健康小护士	419
11.4  3D版雷电	420
11.5  VClub新浪微博客户端	421
11.5.1  简介	421
11.5.2  对比篇	422
11.5.3  如何创建属于自己的新浪微博应用	424
11.5.4  Vclub功能篇	425
11.5.5  布局UI介绍	427
11.5.6  数据保存	430
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android进阶实践
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android基础教程（第4版）
第一部分　Android简介
第1章　快速入门　　2
1.1　安装工具　　2
1.1.1　Java开发包7.0+　　2
1.1.2　Android Studio　　3
1.2　创建第一个程序　　5
1.3　在Android模拟器中运行　　8
1.4　在实际设备上运行　　9
1.5　其他步骤　　10
1.5.1　检查更新　　10
1.5.2　添加SDK包　　10
1.6　快速阅读指南　　12
第2章　重要概念　　13
2.1　总览　　13
2.1.1　Linux内核　　14
2.1.2　原生库　　14
2.1.3　Android运行时　　15
2.1.4　应用框架　　15
2.1.5　应用和服务　　16
2.2　构件　　16
2.2.1　活动　　16
2.2.2　片段　　16
2.2.3　视图　　17
2.2.4　意图　　17
2.2.5　服务　　17
2.2.6　内容提供器　　18
2.2.7　使用资源　　18
2.3　前台只能有一个应用　　18
2.3.1　进程不等于应用　　19
2.3.2　活动的生命周期　　19
2.3.3　使用片段简化工作　　21
2.4　安全保障　　22
2.5　快速阅读指南　　22
第二部分　开发一个游戏
第3章　开局走法　　24
3.1　创建井字游戏示例　　24
3.2　使用XML 进行设计　　25
3.2.1　创建主屏幕　　25
3.2.2　创建主片段　　28
3.3　编写代码　　31
3.3.1　定义主活动　　31
3.3.2　定义主活动使用的片段　　32
3.4　添加About框　　33
3.5　定义资源　　34
3.5.1　字符串　　34
3.5.2　尺寸　　35
3.5.3　drawable　　35
3.5.4　颜色　　36
3.5.5　样式和主题　　37
3.5.6　dp和sp　　37
3.5.7　运行游戏　　38
3.6　调试　　38
3.6.1　使用日志消息进行调试　　39
3.6.2　使用调试器进行调试　　40
3.6.3　测试　　40
3.7　快速阅读指南　　41
第4章　定义游戏界面　　42
4.1　棋盘　　42
4.1.1　从小处着手　　42
4.1.2　小棋盘　　44
4.1.3　背景信息　　45
4.1.4　大棋盘　　47
4.1.5　组合在一起　　48
4.2　开始游戏　　49
4.2.1　使用快捷键Alt+Enter 　　49
4.2.2　编写GameActivity类　　50
4.2.3　编写GameFragment类　　53
4.2.4　定义Tile类　　59
4.3　控制游戏　　63
4.4　支持横向模式　　65
4.5　快速阅读指南　　67
第5章　机器幽灵　　68
5.1　AI 简介　　68
5.1.1　AI 的工作原理　　68
5.1.2　形势判断　　69
5.2　模拟思考过程　　70
5.2.1　使用Handler和postDelayed　　70
5.2.2　在思考期间阻断输入　　71
5.3　下棋　　73
5.3.1　选择正确的走法　　73
5.3.2　颜色和尺寸　　74
5.4　快速阅读指南　　75
第6章　添加声音　　76
6.1　音乐之声　　76
6.2　更换音乐　　78
6.3　播放下棋声　　79
6.4　快速阅读指南　　81
第7章　添加动画　　82
7.1　不断滚动的画卷　　82
7.1.1　添加视图　　83
7.1.2　定义自定义属性　　83
7.1.3　背景信息　　83
7.1.4　创建滚动视图　　84
7.2　跳跃的棋盘格　　86
7.2.1　动画原则　　86
7.2.2　走起　　87
7.2.3　观看跳跃的棋盘格　　88
7.2.4　现状　　88
7.3　快速阅读指南　　89
第三部分　创造性思维
第8章　编写一次，到处测试　　92
8.1　启动模拟器　　93
8.1.1　模拟器反斗城　　93
8.1.2　测试策略　　95
8.2　测试程序　　96
8.3　大小屏幕通吃　　98
8.3.1　指定替代资源　　99
8.3.2　调整游戏界面的大小　　100
8.3.3　预览　　101
8.3.4　使用样式　　101
8.4　快速阅读指南　　102
第9章　发布到Google Play Store　　103
9.1　准备工作　　103
9.2　签名　　104
9.3　测试　　106
9.4　发布　　107
9.5　更新　　108
9.6　小贴士　　109
9.7　快速阅读指南　　109
第四部分　进阶
第10章　联网　　112
10.1　使用意图浏览网页　　112
10.2　使用WebView来浏览网页　　117
10.3　在JavaScript和Java之间交互　　120
10.4　快速阅读指南　　127
第11章　调用Web服务　　128
11.1　使用Web服务　　128
11.2　Suggest示例　　129
11.3　穿针引线　　134
11.4　细枝末节　　135
11.5　建议获取任务　　137
11.6　快速阅读指南　　139
第12章　使用Google Play服务　　140
12.1　工作原理　　140
12.2　使用位置服务　　141
12.2.1　起步　　142
12.2.2　创建用户界面　　143
12.2.3　连接到位置提供器　　146
12.2.4　获取更新　　148
12.2.5　处理错误　　148
12.2.6　请求权限　　150
12.2.7　运行　　151
12.3　快速阅读指南　　151
第13章　使用SQL 　　152
13.1　SQLite简介　　152
13.2　SQL基础知识　　153
13.2.1　DDL语句　　153
13.2.2　修改语句　　154
13.2.3　查询语句　　154
13.3　一个简单的数据库程序　　154
13.3.1　使用SQLiteOpenHelper　　155
13.3.2　定义主程序　　156
13.3.3　添加记录　　158
13.3.4　运行查询　　159
13.3.5　显示查询结果　　160
13.4　数据绑定　　161
13.5　使用内容提供器　　164
13.5.1　修改主程序　　165
13.5.2　添加记录　　166
13.5.3　运行查询　　166
13.6　实现内容提供器　　166
13.7　使用加载器　　168
13.8　快速阅读指南　　170
第五部分　附录
附录　Java和Android在语言和API方面的异同　　172
参考文献　　176
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android基础教程（第4版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android 6开发秘籍(第5版)
第Ⅰ部分  Android平台概述
第1章  Android概述 3
1.1 Android开源项目(AOSP) 3
1.2  开放手机联盟 4
1.2.1 Google进入移动市场 4
1.2.2 开放手机联盟介绍 4
1.2.3 加入开放手机联盟 5
1.2.4 制造商：设计Android
设备 5
1.2.5 移动运营商：提供Android
体验 5
1.2.6 应用驱动设备的销售：
开发Android应用 6
1.2.7 利用所有Android设备的
优势 6
1.2.8 Android：我们现在取得的
进展 7
1.3 Android平台的独特性 7
1.3.1 Android的由来 8
1.3.2 自由和开放源代码 8
1.3.3 熟悉且廉价的开发工具 9
1.3.4 合理的开发学习曲线 9
1.3.5 功能强大的应用开发支持 9
1.3.6 丰富和安全的应用集成 10
1.3.7 没有昂贵的开发费用 10
1.3.8 应用的“自由市场” 10
1.3.9 一个不断发展的平台 11
1.4 Android 平台 11
1.4.1 Android 的底层架构 11
1.4.2 安全和权限 13
1.4.3 探索Android应用 14
1.5 OHA和GMS 之外的Android
版本 17
1.5.1 Amazon Fire OS 17
1.5.2 Cyanogen OS和
CyanogenMod 17
1.5.3 Maker Movement和开源
硬件 18
1.5.4 保持警觉 18
1.6  本章小结 18
1.7  小测验 18
1.8  练习题 19
1.9  参考资料和更多信息 19
第2章  设置开发环境 21
2.1  配置你的开发环境 21
2.1.1 配置操作系统以便进行
设备调试 24
2.1.2 配置Android硬件以便
进行调试 24
2.1.3 更新Android Studio 26
2.1.4 更新Android SDK 26
2.1.5 Android Studio存在的
问题 27
2.1.6 Android SDK存在的问题 27
2.1.7 Android Studio的替代者：
IntelliJ IDEA 27

2.2  探索Android SDK28
2.2.1 了解Android SDK许可
协议 28
2.2.2 阅读Android SDK文档 29
2.2.3 探索Android应用框架
核心 30
2.2.4 探索Android核心工具 31
2.2.5 探索Android示例应用 35
2.3  本章小结 36
2.4  小测验 37
2.5  练习题 37
2.6  参考资料和更多信息 37
第3章  创建第一个Android应用 39
3.1  测试开发环境 39
3.1.1 在Android Studio中导入
BorderlessButtons示例 40
3.1.2 使用预装的AVD运行
BorderlessButtons项目 42
3.1.3 在Android模拟器中运行
BorderlessButtons应用 42
3.2  构建第一个Android应用 44
3.2.1 创建并配置一个新的
Android 项目 44
3.2.2 了解Android符号视图和
传统Project视图 48
3.2.3 Android 应用的核心文件和
目录 49
3.2.4 在模拟器中运行Android
应用 50
3.2.5 在模拟器中调试Android
应用 52
3.2.6 为Android 应用增加日志
记录 55
3.2.7 在硬件设备上调试应用 57
3.3  本章小结 58
3.4  小测验 59
3.5  练习题 59
3.6  参考资料和更多信息 59
第Ⅱ部分  应用基础
第4章  理解应用组件 63
4.1  掌握重要的Android术语 63
4.2  应用Context 64
4.2.1 获取应用Context 64
4.2.2 使用应用Context 64
4.3  使用Activity执行应用任务 65
4.4  使用Fragment组织Activity
组件 71
4.5  使用Intent管理Activity之间的
切换 72
4.5.1 通过Intent切换Activity 73
4.5.2 通过Activity、Fragment
和Intent来组织应用导航 75
4.6  使用服务 75
4.7  接收和广播Intent76
4.8  本章小结 77
4.9  小测验 77
4.10 练习题 77
4.11 参考资料和更多信息 78
第5章  定义清单文件 79
5.1  使用Android清单文件配置
Android应用 79
5.2  管理应用ID 82
5.3  设置应用的系统需求 83
5.3.1 设置应用的平台需求 84
5.3.2 其他应用配置设置和
过滤器 86
5.4  在Android清单文件注册
Activity 86
5.4.1 使用Intent过滤器为应用
指定主入口Activity 87
5.4.2 配置其他Intent过滤器 87
5.4.3 注册其他应用组件 88
5.5  访问权限 88
5.5.1 注册应用所需的权限 89
5.5.2 注册应用强制的权限 91
5.6  探索清单文件的其他设置92
5.7  本章小结 93
5.8  小测验 93
5.9  练习题 93
5.10 参考资料和更多信息 94
第6章  管理应用的资源 95
6.1  资源的含义 95
6.1.1 存储应用资源 95
6.1.2 资源类型 96
6.1.3 以编程方式访问资源 99
6.2  在AndroidStudio中添加简单
的资源值 100
6.3  使用不同类型的资源 103
6.3.1 使用字符串资源 103
6.3.2 使用格式化的字符串
资源 104
6.3.3 使用带数量的字符串 105
6.3.4 使用字符串数组 106
6.3.5 使用布尔类型资源 107
6.3.6 使用整型资源 108
6.3.7 使用颜色资源 108
6.3.8 使用尺寸资源 109
6.3.9 以编程方式使用尺寸
资源 110
6.3.10 可绘制资源 110
6.3.11 使用图像 112
6.3.12 使用颜色状态列表 114
6.3.13 使用动画 115
6.3.14 使用菜单 117
6.3.15 使用XML文件 119
6.3.16 使用原始文件 119
6.3.17 引用资源 120
6.4  使用布局 122
6.4.1 在Android Studio中设计
布局 123
6.4.2 以编程方式使用布局
资源 125
6.5  引用系统资源 126
6.6  本章小结 127
6.7  小测验 127
6.8  练习题 127
6.9  参考资料和更多信息 128
第7章  探讨构建块 129
7.1 Android视图和布局介绍 129
7.1.1 Android视图 129
7.1.2 Android控件 129
7.1.3 Android布局 130
7.2  使用TextView向用户显示
文本 130
7.2.1 配置布局和大小 131
7.2.2 在文本中创建上下文
链接 132
7.3  使用文本字段从用户端获取
数据 134
7.3.1 使用EditText控件获取
输入文本 134
7.3.2 使用输入过滤器限制用户
输入 135
7.3.3 使用自动完成功能帮助
用户 136
7.4  使用Spinner控件让用户
选择 138
7.5  使用Button和Switch允许
用户简单选择 139
7.5.1 使用基本Button 140
7.5.2 使用CheckBox和
ToggleButton控件 142
7.5.3 使用RadioGroup和
RadioButton 143
7.6  使用Picker获取日期、时间
和数字 145
7.7  使用Indicator为用户显示
进度和活动 148
7.7.1 使用ProgressBar指示
进度 148
7.7.2 向ActionBar添加进度
指示器 149
7.7.3 使用Activity Bar和Activity
Circle指示Activity 150
7.8  使用SeekBar调整进度 151
7.9  其他有价值的用户界面
控件 152
7.9.1 使用RatingBar显示评分
数据 152
7.9.2 使用Chronometer显示
时间的流逝 153
7.9.3 显示时间 154
7.9.4 使用VideoView播放
视频 155
7.10 本章小结 156
7.11 小测验 156
7.12 练习题 156
7.13 参考资料和更多信息 157
第8章  布局设计 159
8.1  在Android中创建用户界面 159
8.1.1 使用XML资源文件创建
布局 159
8.1.2 以编程方式创建布局 161
8.2  组织用户界面 164
8.2.1 使用ViewGroup子类来
设计布局  164
8.2.2 使用ViewGroup子类作为
View容器  164
8.3  使用内置的布局类 165
8.3.1 使用LinearLayout 167
8.3.2 使用RelativeLayout 168
8.3.3 使用FrameLayout 171
8.3.4 使用TableLayout 173
8.3.5 使用GridLayout 176
8.3.6 在屏幕上使用多个布局 179
8.4  使用容器控件类 180
8.4.1 使用数据驱动的容器 180
8.4.2 添加滚动支持 184
8.4.3 探索其他View容器 185
8.5  本章小结 186
8.6  小测验 186
8.7  练习题 187
8.8  参考资料和更多信息 187
第9章  用Fragment拆分用户
界面 189
9.1  理解Fragment189
9.1.1 了解Fragment的生命
周期 191
9.1.2 管理Fragment修改 191
9.1.3 使用特殊类型的
Fragment 192
9.1.4 设计基于Fragment的
应用 193
9.2  使用Android 支持库包 202
9.2.1 为旧应用添加Fragment
支持 202
9.2.2 在新应用中针对旧平台
使用Fragment 203
9.2.3 将Android支持包链接到
项目 203
9.3  使用Fragment的其他方式 204
9.3.1 没有用户界面的行为
Fragment 205
9.3.2 探索嵌套的Fragment 205
9.4  本章小结 205
9.5  小测验 205
9.6  练习题 206
9.7  参考资料和更多信息 206
第Ⅲ部分  应用设计基础
第10章  架构设计模式 211
10.1 应用的导航架构 211
10.1.1  Android应用导航场景 212
10.1.2 启动任务和导航回
退栈 214
10.1.3 Fragment导航 215
10.1.4 屏幕之间的关系 215
10.1.5 Android导航设计模式 216
10.2 引导操作 223
10.2.1 菜单 223
10.2.2 操作栏 223
10.2.3 浮动操作按钮 227
10.2.4 来自应用上下文的
操作 229
10.2.5 对话框 229
10.3 本章小结 237
10.4 小测验 237
10.5 练习题 237
10.6 参考资料和更多信息 237
第11章  使用样式 239
11.1 样式支持 239
11.2 主题和样式 240
11.2.1 定义默认应用主题 240
11.2.2 主题和样式继承 241
11.3 颜色 242
11.4 布局 243
11.4.1 合并与包含 244
11.4.2 TextInputLayout 245
11.4.3 FloatingActionButton 245
11.4.4 工具栏作为底部栏 246
11.5 应用个性化 247
11.6 运用后的效果 249
11.7 排版 250
11.8 本章小结 251
11.9 小测验 252
11.10 练习题 252
11.11 参考资料和更多信息 252
第12章  材质设计 255
12.1 理解材质 255
12.2 默认材质主题 256
12.3 SampleMaterial应用 256
12.4 实现SampleMaterial应用 257
12.4.1 依赖 257
12.4.2 材质支持样式 257
12.4.3 显示List中的数据集 257
12.5 本章小结 282
12.6 小测验 282
12.7 练习题 283
12.8 参考资料和更多信息 283
第13章  设计兼容的应用 285
13.1 最大化应用的兼容性 285
13.2 设计兼容的用户界面 287
13.2.1 使用Fragments 288
13.2.2 使用各种Android支持库
API 288
13.2.3 支持特定的屏幕类型 289
13.2.4 使用九宫格可拉伸
图形 289
13.3 提供替代应用资源 290
13.3.1 了解资源是如何被
解析的 290
13.3.2 使用限定符组织替代
资源 291
13.3.3 为不同屏幕方向提供
资源 296
13.3.4 以编程方式使用替代
资源 298
13.3.5 高效组织应用的资源 299
13.4 平板、电视设备 299
13.4.1 针对平板设备 300
13.4.2 针对电视设备 300
13.5 让应用兼容手表和汽车 302
13.6 使用SafetyNet保证兼容性 302
13.7 本章小结 303
13.8 小测验 304
13.9 练习题 304
13.10 参考资料和更多信息 304
第Ⅳ部分  应用开发基础
第14章  使用Android首选项 309
14.1 使用应用首选项 309
14.1.1 确定首选项是否合适 309
14.1.2 保存不同类型的首选
项值 310
14.1.3 创建Activity私有的
首选项 310
14.1.4 创建多个Activity使用的
共享首选项 310
14.1.5 查找和读取首选项 311
14.1.6 添加、更新和删除
首选项311
14.1.7 监听首选项的变化 312
14.2 在文件系统中定位首选项
数据 312
14.3 创建可管理的用户首选项 313
14.3.1 创建首选项资源文件 314
14.3.2 使用PreferenceActivity
类 316
14.3.3 通过标头管理首选项 318
14.4 自动备份Android应用 321
14.5 本章小结 322
14.6 小测验 322
14.7 练习题 323
14.8 参考资料和更多信息 323
第15章  访问文件和目录 325
15.1 使用设备上的应用数据 325
15.2 实现良好的文件管理 326
15.3 了解Android系统中的文件
权限 326
15.4 使用文件和目录 327
15.4.1 探索Android应用的
目录 328
15.4.2 使用Android文件系统
中的其他目录和文件 332
15.5 本章小结 335
15.6 小测验 335
15.7 练习题 335
15.8 参考资料和更多信息 336
第16章  使用SQLite保存数据 337
16.1 使用SQLite升级
SampleMaterial应用 337
16.2 使用数据库 337
16.2.1 提供数据访问 339
16.2.2 更新SampleMaterialActivity
类 340
16.2.3 更新SampleMaterialAdapter
构造函数 341
16.2.4 在主UI线程以外执行
数据库操作 342
16.2.5 在数据库中创建卡片 343
16.2.6 获取所有卡片 344
16.2.7 添加新卡片 345
16.2.8 更新卡片 346
16.2.9 删除卡片 347
16.3 本章小结 348
16.4 小测验 349
16.5 练习题 349
16.6 参考资料和更多信息 349
第17章  使用内容提供者 351
17.1 探索Android的内容
提供者 351
17.1.1 使用Mediastore内容
提供者 352
17.1.2 使用CallLog内容
提供者 355
17.1.3 使用CalendarContract
内容提供者 356
17.1.4 使用UserDictionary
内容提供者 357
17.1.5 使用VoicemaillContract
内容提供者 357
17.1.6 使用Settings内容
提供者 357
17.1.7 介绍ContactsContract
内容提供者 357
17.2 修改内容提供者数据 360
17.2.1 添加记录 360
17.2.2 更新记录 361
17.2.3 删除记录 362
17.3 使用第三方内容提供者 363
17.4 本章小结 363
17.5 小测验 364
17.6 练习 364
17.7 参考资料和更多信息 364
第Ⅴ部分  应用交付基础
第18章  学习开发工作流 369
18.1 Android开发流程概览 369
18.2 选择正确的软件方法论 370
18.2.1 理解瀑布开发模式的
危险性 370
18.2.2 理解迭代的价值 370
18.3 收集应用的需求 371
18.3.1 明确项目需求 371
18.3.2 为Android应用编写
用例 373
18.3.3 结合第三方的需求和
建议 374
18.3.4 维护一个设备数据库 374
18.4 评估项目风险 377
18.4.1 确定目标设备 377
18.4.2 获取目标设备 379
18.4.3 确定应用需求的
可行性 379
18.4.4 理解QA的风险 380
18.5 编写重要的项目文档 381
18.5.1 为保证产品质量制定
测试计划 381
18.5.2 为第三方提供需要的
文档 382
18.5.3 为维护和移植提供
文档 382
18.6 使用配置管理系统 382
18.6.1 选择源码管理系统 382
18.6.2 实现一个可用的应用
版本系统 382
18.7 设计Android应用 383
18.7.1 理解设备的资源限制 383

18.7.2 探讨通用的Android
应用架构 383
18.7.3 设计应用的可扩展性和
易维护性 384
18.7.4 设计应用间的通信
方式 385
18.8 开发Android应用 385
18.9 测试Android应用 386
18.10 部署Android应用 387
18.11 支持和维护Android应用 387
18.11.1 跟踪并解决用户提交的
崩溃报告 388
18.11.2 测试固件升级 388
18.11.3 维护详细的应用
文档 388
18.11.4 管理服务端的在线
变化 388
18.11.5 识别低风险的移植
机会 388
18.11.6 应用功能的选择 389
18.12 本章小结 389
18.13 小测验 389
18.14 练习题 389
18.15 参考资料和更多信息 389
第19章  规划用户体验 391
19.1 思考目标 391
19.1.1 用户目标 391
19.1.2 团队目标 392
19.1.3 其他利益相关者的
目标 392
19.2 集中研发精力的一些技巧 392
19.2.1 人物角色 393
19.2.2 用户故事图谱 393
19.2.3 发现和组织实体 394
19.2.4 规划用户交互 394
19.3 传递应用标识 395
19.4 设计屏幕的布局 396
19.4.1 草稿图 396
19.4.2 线框图 397
19.4.3 综合设计图 397
19.5 正确处理视觉反馈 397
19.6 观察目标用户 398
19.6.1 应用仿真模型 398
19.6.2 测试发布版本 399
19.7 本章小结 399
19.8 小测验 399
19.9 练习题 400
19.10 参考资料和更多信息 400
第20章  交付质量可靠的应用 401
20.1 设计可靠应用的最佳实践 401
20.1.1 满足Android用户的
需求 402
20.1.2 为Android设备设计
用户界面 402
20.1.3 设计稳定并即时响应的
Android应用 403
20.1.4 设计安全的Android
应用 404
20.1.5 将应用利润最大化 405
20.1.6 遵循Android应用的
质量指导方针 405
20.1.7 采用第三方质量标准 407
20.1.8 开发易于维护和升级的
Android应用 407
20.1.9 利用Android的工具
辅助应用的设计 409
20.2 避免在Android应用中犯
低级错误 409
20.3 开发可靠Android应用的
最佳实践 409
20.3.1 设计适用于Android开发的研发流程 410
20.3.2 尽早并经常测试应用的
可行性410
20.3.3 使用编码标准、审阅及
单元测试来改进代码
质量 410
20.3.4 处理单个设备中出现的
缺陷 412
20.3.5 利用Android工具来
开发 413
20.3.6 避免在Android应用
开发中犯低级错误 413
20.4 本章小结 414
20.5 小测验 414
20.6 练习 414
20.7 参考资料和更多信息 414
第21章  测试应用 417
21.1 测试移动应用的最佳实践 417
21.1.1 设计移动应用的缺陷追
踪系统 417
21.1.2 管理测试环境 419
21.1.3 让测试覆盖率最大化 421
21.1.4 利用Android的SDK
工具来测试应用 427
21.1.5 避免Android应用测试
中的一些低级错误 428
21.2 Android应用测试精要 428
21.2.1 利用JUnit进行单元
测试 429
21.2.2 PasswordMatcher应用
简介 430
21.2.3 确认测试的预期结果 433
21.2.4 为测试代码创建一个
运行配置 433
21.2.5 编写测试代码 436
21.2.6 在Android Studio中
运行你的第一个测试 438
21.2.7 分析测试结果 438
21.2.8 添加其他测试 439
21.3 更多Android自动化测试
程序和API 442
21.4 本章小结 442
21.5 小测验 443
21.6 练习题 443
21.7 参考资料和更多信息 443
第22章  分发应用 445
22.1 选择正确的分发模型 445
22.1.1 保护你的知识产权 446
22.1.2 遵循Google Play的
政策 446
22.1.3 向用户收费 447
22.2 为即将发布的应用打包 448
22.2.1 为打包工作准备好
代码 448
22.2.2 打包应用并签名 450
22.2.3 测试用于发布的
应用包 453
22.2.4 包含所有需要的资源 453
22.2.5 准备好你的服务器或者
服务 453
22.2.6 发布应用 453
22.3 在Google Play中发布应用 453
22.3.1 登录Google Play 454
22.3.2 将应用上传到Google
Play 457
22.3.3 上传应用营销相关的
资源 458
22.3.4 配置定价和发布详情 458
22.3.5 配置额外的应用选项 459
22.3.6 管理其他开发人员控制台
选项 460
22.3.7 将应用发布到Google
Play 460
22.3.8 在Google Play中管理
应用 461
22.4 Google Play上的阶段性
展示产品 462
22.5 通过Google Play私有渠道
发布应用 462
22.6 翻译应用 462
22.7 通过其他方式发布应用 463
22.8 自行发布应用 464
22.9 本章小结 465
22.10 小测验 465
22.11 练习题 465
22.12 参考资料和更多信息 466
第Ⅵ部分  附录
附录A  提示与技巧：Android
Studio 469
附录B  快速入门指南：Android
模拟器 481
附录C  快速入门指南：Android设备
监视器 507
附录D  精通Android SDK工具 523
附录E  快速入门：Gradle构建
系统 539
附录F  小测验答案 557
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android 6开发秘籍(第5版)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>疯狂Android讲义（第4版）
第1章  Android应用和开发环境  1
1.1  Android的发展和历史  2
1.1.1  Android的发展和简介  2
1.1.2  Android 9.x平台架构及特性  2
1.2  使用Gradle自动化构建项目  5
1.2.1  下载和安装Gradle  5
1.2.2  Gradle构建文件和创建任务  6
1.2.3  Gradle的属性定义  11
1.2.4  增量式构建  13
1.2.5  Gradle插件和java、application等插件  14
1.2.6  依赖管理  16
1.2.7  自定义任务  19
1.2.8  自定义插件  21
1.3  搭建Android开发环境  23
1.3.1  安装Android Studio  23
1.3.2  下载和安装Android SDK  28
1.3.3  在安装过程中常见的错误  30
1.3.4  安装运行、调试环境  31
1.4  Android常用开发工具的用法  38
1.4.1  使用Monitor进行调试  38
1.4.2  Android Debug Bridge（ADB）的用法  40
1.4.3  使用mksdcard管理虚拟SD卡  41
1.5  开始第一个Android应用  41
1.5.1  使用Android Studio开发第一个Android应用  41
1.5.2  通过Andorid Studio运行Android应用  44
1.6  Android应用结构分析  45
1.6.1  Android项目结构分析  45
1.6.2  自动生成的R.java  48
1.6.3  res目录说明  48
1.6.4  Android应用的清单文件：AndroidManifest.xml  49
1.6.5  应用程序权限说明  50
1.7  Android应用的基本组件介绍  51
1.7.1  Activity和View  51
1.7.2  Service  52
1.7.3  BroadcastReceiver  52
1.7.4  ContentProvider  53
1.7.5  Intent和IntentFilter  53
1.8  使用Android 9来签名APK  54
1.8.1  使用Android Studio对Android应用签名  54
1.8.2  使用Android 9的命令对APK签名  56
1.9  本章小结  57
第2章  Android应用的界面编程  58
2.1  界面编程与视图（View）组件  59
2.1.1  视图组件与容器组件  59
2.1.2  使用XML布局文件控制UI界面  65
2.1.3  在代码中控制UI界面  65
实例：用编程的方式开发UI界面  65
2.1.4  使用XML布局文件和代码混合控制UI界面  67
实例：简单图片浏览器  67
2.1.5  开发自定义View  69
实例：跟随手指的小球  69
2.2  第1组UI组件：布局管理器  71
2.2.1  线性布局  72
2.2.2  表格布局  74
实例：丰富的表格布局  74
2.2.3  帧布局  76
实例：霓虹灯效果  78
2.2.4  绝对布局  79
2.2.5  约束布局  80
2.3  第2组UI组件：TextView及其子类  84
2.3.1  文本框（TextView）和编辑框（EditText）的功能与用法  84
实例：功能丰富的文本框  88
2.3.2  EditText的功能与用法  90
2.3.3  按钮（Button）组件的功能与用法  91
实例：按钮、圆形按钮、带文字的图片按钮  91
2.3.4  使用9Patch图片作为背景  92
2.3.5  单选钮（RadioButton）和复选框（CheckBox）的功能与用法  94
实例：利用单选钮、复选框获取用户信息  94
2.3.6  状态开关按钮（ToggleButton）和开关（Switch）的功能与用法  96
实例：动态控制布局  97
2.3.7  时钟（AnalogClock和TextClock）的功能与用法  98
实例：手机里的“劳力士”  98
2.3.8  计时器（Chronometer）  99
2.4  第3组UI组件：ImageView及其子类  100
实例：图片浏览器  101
实例：强大的图片按钮  104
实例：使用QuickContactBadge关联联系人  105
实例：可折叠的悬浮按钮  107
2.5  第4组UI组件：AdapterView及子类  108
2.5.1  Adapter接口及实现类  109
实例：使用ArrayAdapter创建ListView  110
实例：使用SimpleAdapter创建ListView  112
2.5.2  自动完成文本框（AutoCompleteTextView）的功能与用法  114
2.5.3  可展开的列表组件（ExpandableListView）  116
2.5.4  Spinner的功能与用法  120
2.5.5  AdapterViewFlipper的功能与用法  121
实例：自动播放的图片库  122
2.5.6  StackView的功能与用法  124
实例：叠在一起的图片  125
2.5.7  优秀的RecyclerView组件  126
实例：使用RecyclerView实现列表  127
2.6  第5组UI组件：ProgressBar及其子类  130
2.6.1  进度条（ProgressBar）的功能与用法  130
2.6.2  拖动条（SeekBar）的功能与用法  133
实例：通过拖动滑块来改变图片的透明度  134
2.6.3  星级评分条（RatingBar）的功能与用法  135
实例：通过星级改变图片的透明度  136
2.7  第6组UI组件：ViewAnimator及其子类  136
2.7.1  ViewSwitcher的功能与用法  137
实例：仿Android系统的Launcher界面  137
2.7.2  图像切换器（ImageSwitcher）的功能与用法  142
实例：支持动画的图片浏览器  142
2.7.3  文本切换器（TextSwitcher）的功能与用法  144
2.7.4  ViewFlipper的功能与用法  145
实例：自动播放的图片库  145
2.8  各种杂项组件  147
2.8.1  使用Toast显示提示信息框  147
实例：带图片的消息提示  147
2.8.2  日历视图（CalendarView）组件的功能与用法  149
实例：选择您的生日  149
2.8.3  日期、时间选择器（DatePicker和TimePicker）的功能与用法  151
实例：用户选择日期、时间  151
2.8.4  数值选择器（NumberPicker）的功能与用法  153
实例：选择您意向的价格范围  153
2.8.5  搜索框（SearchView）的功能与用法  155
实例：搜索  155
2.8.6  滚动视图（ScrollView）的功能与用法  157
实例：可垂直和水平滚动的视图  157
2.8.7  Android 9 改进的通知和通知Channel  158
实例：加薪通知  159
2.9  第7组UI组件：对话框  161
2.9.1  使用AlertDialog创建对话框  162
实例：显示提示消息的对话框  162
实例：简单列表项对话框  163
实例：单选列表项对话框  164
实例：多选列表项对话框  165
实例：自定义列表项对话框  166
实例：自定义View对话框  166
2.9.2  对话框风格的窗口  168
2.9.3  使用PopupWindow  168
2.9.4  使用DatePickerDialog、TimePickerDialog  169
2.9.5  使用ProgressDialog创建进度对话框  171
2.10  菜单  171
2.10.1  选项菜单和子菜单（SubMenu）  171
2.10.2  使用监听器来监听菜单事件  175
2.10.3  创建多选菜单项和单选菜单项  175
2.10.4  设置与菜单项关联的Activity  175
2.10.5  上下文菜单  176
2.10.6  使用XML文件定义菜单  177
实例：使用XML资源文件定义菜单  178
2.10.7  使用PopupMenu创建弹出式菜单  181
2.11  使用活动条（ActionBar）  182
2.11.1  启用ActionBar  182
2.11.2  使用ActionBar显示选项菜单项  183
2.11.3  启用程序图标导航  185
2.11.4  添加Action View  186
实例：“标题”上的时钟  187
2.12  本章小结  187
第3章  Android事件机制  188
3.1  Android事件处理概述  189
3.2  基于监听的事件处理  189
3.2.1  监听的处理模型  189
3.2.2  事件和事件监听器  192
实例：控制飞机移动  192
3.2.3  内部类作为事件监听器类  194
3.2.4  外部类作为事件监听器类  194
3.2.5  Activity本身作为事件监听器类  196
3.2.6  Lambda表达式作为事件监听器类  196
3.2.7  直接绑定到标签  197
3.3  基于回调的事件处理  198
3.3.1  回调机制与监听机制  198
3.3.2  基于回调的事件传播  199
3.4  响应系统设置的事件  201
3.4.1  Configuration类简介  201
实例：获取系统设备状态  202
3.4.2  重写onConfigurationChanged方法响应系统设置更改  203
实例：监听屏幕方向的改变  203
3.5  Handler消息传递机制  205
3.5.1  Handler类简介  205
实例：自动播放动画  206
3.5.2  Handler、Loop、MessageQueue的工作原理  207
实例：使用新线程计算质数  208
3.6  异步任务（AsyncTask）  210
实例：使用异步任务执行下载  211
3.7  本章小结  213
第4章  深入理解Activity与Fragment  214
4.1  建立、配置和使用Activity  215
4.1.1  高级Activity  215
实例：用LauncherActivity开发启动Activity的列表  216
实例：使用ExpandableListActivity实现可展开的Activity  217
实例：PreferenceActivity结合PreferenceFragment实现参数设置界面  217
4.1.2  配置Activity  222
4.1.3  启动、关闭Activity  224
4.1.4  使用Bundle在Activity之间交换数据  226
实例：用第二个Activity处理注册信息  226
4.1.5  启动其他Activity并返回结果  229
实例：用第二个Activity让用户选择信息  230
4.2  Activity的回调机制  232
4.3  Activity的生命周期  233
4.3.1  Activity的生命周期演示  233
4.3.2  Activity与Servlet的相似性和区别  236
4.4  Activity的4种加载模式  237
4.4.1  standard模式  237
4.4.2  singleTop模式  238
4.4.3  singleTask模式  239
4.4.4  singleInstance模式  240
4.5  Android 9升级的Fragment  242
4.5.1  Fragment概述及其设计初衷  242
4.5.2  创建Fragment  243
实例：开发显示图书详情的Fragment  244
实例：创建ListFragment  246
4.5.3  Fragment与Activity通信  247
4.5.4  Fragment管理与Fragment事务  249
实例：开发兼顾屏幕分辨率的应用  250
4.6  Fragment的生命周期  253
4.7  管理Fragment导航  257
实例：结合ViewPager实现分页导航  257
实例：结合TabLayout实现Tab导航  259
4.7  本章小结  261
第5章  使用Intent和IntentFilter通信  262
5.1  Intent对象简述  263
5.2  Intent的属性及intent-filter配置  264
5.2.1  Component属性  264
5.2.2  Action、Category属性与intent-filter配置  266
5.2.3  指定Action、Category调用系统Activity  270
实例：查看并获取联系人电话  271
实例：返回系统Home桌面  274
5.2.4  Data、Type属性与intent-filter配置  274
实例：使用Action、Data属性启动系统Activity  280
5.2.5  Extra属性  282
5.2.6  Flag属性  282
5.3  本章小结  283
第6章  Android应用资源  284
6.1  应用资源概述  285
6.1.1  资源的类型及存储方式  285
6.1.2  使用资源  286
6.2  字符串、颜色、尺寸资源  288
6.2.1  颜色值的定义  288
6.2.2  定义字符串、颜色、尺寸资源文件  288
6.2.3  使用字符串、颜色、尺寸资源  290
6.3  数组（Array）资源  292
6.4  使用Drawable资源  295
6.4.1  图片资源  295
6.4.2  StateListDrawable资源  295
实例：高亮显示正在输入的文本框  296
6.4.3  LayerDrawable资源  297
实例：定制拖动条的外观  297
6.4.4  ShapeDrawable资源  299
实例：椭圆形、渐变背景的文本框  299
6.4.5  ClipDrawable资源  301
实例：徐徐展开的风景  301
6.4.6  AnimationDrawable资源  302
6.5  属性动画（Property Animation）资源  305
实例：不断渐变的背景色  306
6.6  使用原始XML资源  306
6.6.1  定义原始XML资源  307
6.6.2  使用原始XML文件  307
6.7  使用布局（Layout）资源  309
6.8  使用菜单（Menu）资源  309
6.9  样式（Style）和主题（Theme）资源  309
6.9.1  样式资源  310
6.9.2  主题资源  311
实例：给所有窗口添加边框、背景  311
6.10  属性（Attribute）资源  313
6.11  使用原始资源  315
6.12  国际化  316
6.12.1  为Android应用提供国际化资源  317
6.12.2  国际化Android应用  317
6.13  自适应不同屏幕的资源  319
6.14  本章小结  322
第7章  图形与图像处理  323
7.1  使用简单图片  324
7.1.1  使用Drawable对象  324
7.1.2  Bitmap和BitmapFactory  324
7.1.3  Android 9新增的ImageDecoder  326
7.2  绘图  328
7.2.1  Android绘图基础：Canvas、Paint等  328
7.2.2  Path类  332
7.2.3  绘制游戏动画  335
实例：采用双缓冲实现画图板  335
实例：弹球游戏  339
7.3  图形特效处理  342
7.3.1  使用Matrix控制变换  342
7.3.2  使用drawBitmapMesh扭曲图像  344
实例：可揉动的图片  345
7.3.3  使用Shader填充图形  347
7.4  逐帧（Frame）动画  349
7.4.1  AnimationDrawable与逐帧动画  349
7.4.2  实例：在指定点爆炸  350
7.5  补间（Tween）动画  352
7.5.1  Tween动画与Interpolator  352
7.5.2  位置、大小、旋转度、透明度改变的补间动画  354
实例：蝴蝶飞舞  356
7.5.3  自定义补间动画  358
7.6  Android 8增强的属性动画  360
7.6.1  属性动画的API  361
7.6.2  使用属性动画  362
实例：大珠小珠落玉盘  366
7.7  使用SurfaceView实现动画  371
7.7.1  SurfaceView的绘图机制  371
7.7.2  实例：基于SurfaceView开发示波器  374
7.8  本章小结  376
第8章  Android数据存储与IO  377
8.1  使用SharedPreferences  378
8.1.1  SharedPreferences与Editor简介  378
8.1.2  SharedPreferences的存储位置和格式  379
实例：记录应用程序的使用次数  380
8.2  File存储  381
8.2.1  openFileOutput和openFileInput  381
8.2.2  读写SD卡上的文件  383
实例：SD卡文件浏览器  386
8.3  SQLite数据库  389
8.3.1  SQLiteDatabase简介  390
8.3.2  创建数据库和表  391
8.3.3  SQLiteOpenHelper类  391
8.3.4  使用SQL语句操作SQLite数据库  393
8.3.5  使用sqlite3工具  396
8.3.6  使用特定方法操作SQLite数据库  397
8.3.7  事务  400
8.3.8  SQLite数据库最佳实践建议  400
8.4  手势（Gesture）  401
8.4.1  手势检测  401
实例：通过手势缩放图片  403
实例：通过多点触碰缩放TextView  404
实例：通过多点触碰缩放图片  406
实例：通过手势实现翻页效果  408
8.4.2  增加手势  410
8.4.3  识别用户手势  413
8.5  让应用说话（TTS）  415
8.6  本章小结  418
第9章  使用ContentProvider实现数据共享  419
9.1  数据共享标准：ContentProvider  420
9.1.1  ContentProvider简介  420
9.1.2  Uri简介  421
9.1.3  使用ContentResolver操作数据  422
9.2  开发ContentProvider  423
9.2.1  ContentProvider与ContentResolver的关系  423
9.2.2  开发ContentProvider子类  424
9.2.3  配置ContentProvider  425
9.2.4  使用ContentResolver调用方法  426
9.2.5  创建ContentProvider的说明  428
实例：使用ContentProvider共享单词数据  429
9.3  操作系统的ContentProvider  434
9.3.1  使用ContentProvider管理联系人  434
9.3.2  使用ContentProvider管理多媒体内容  440
9.4  监听ContentProvider的数据改变  443
9.4.1  ContentObserver简介  443
9.4.2  实例：监听用户发出的短信  444
9.5  本章小结  446
第10章  Service和BroadcastReceiver  447
10.1  Service简介  448
10.1.1  创建、配置Service  448
10.1.2  启动和停止Service  450
10.1.3  绑定本地Service并与之通信  451
10.1.4  Service的生命周期  454
10.1.5  使用IntentService  455
10.2  跨进程调用Service（AIDL Service）  458
10.2.1  AIDL Service简介  458
10.2.2  创建AIDL文件  459
10.2.3  将接口暴露给客户端  459
10.2.4  客户端访问AIDL Service  461
实例：传递复杂数据的AIDL Service  462
10.3  电话管理器（TelephonyManager）  467
实例：获取网络和SIM卡信息  467
实例：监听手机来电  469
10.4  短信管理器（SmsManager）  470
实例：发送短信  470
实例：短信群发  471
10.5  音频管理器（AudioManager）  474
10.5.1  AudioManager简介  474
10.5.2  实例：使用AudioManager控制手机音频  474
10.6  振动器（Vibrator）  476
10.6.1  Vibrator简介  476
10.6.2  使用Vibrator控制手机振动  476
10.7  手机闹钟服务（AlarmManager）  477
10.7.1  AlarmManager简介  477
10.7.2  设置闹钟  478
10.8  广播接收器  480
10.8.1  BroadcastReceiver简介  480
10.8.2  发送广播  481
10.8.3  有序广播  483
实例：基于Service的音乐播放器  485
10.9  接收系统广播消息  489
实例：开机自动运行的Activity  490
实例：手机电量提示  490
10.10  本章小结  492
第11章  多媒体应用开发  493
11.1  音频和视频的播放  494
11.1.1  Android 9增强的MediaPlayer  494
11.1.2  音乐特效控制  498
实例：音乐的示波器、均衡、重低音和音场  499
11.1.3  使用VolumeShaper控制声音效果  505
11.1.4  使用SoundPool播放音效  507
11.1.5  使用VideoView播放视频  509
11.1.6  使用MediaPlayer和SurfaceView播放视频  511
11.2  使用MediaRecorder录制音频  514
实例：录制音乐  515
11.3  控制摄像头拍照  517
11.3.1  Android 9改进的Camera v2  517
实例：拍照时自动对焦  518
11.3.2  录制视频短片  526
实例：录制生活短片  527
11.4  屏幕捕捉  530
11.5  本章小结  532
第12章  OpenGL与3D开发  533
12.1  3D图形与3D开发的基本知识  534
12.2  OpenGL和OpenGL ES简介  535
12.3  绘制2D图形  536
12.3.1  在Android应用中使用OpenGL ES  536
12.3.2  绘制平面上的多边形  538
12.3.3  旋转  543
12.4  绘制3D图形  546
12.4.1  构建3D图形  546
12.4.2  应用纹理贴图  550
12.5  本章小结  555
第13章  Android网络应用  556
13.1  基于TCP协议的网络通信  557
13.1.1  TCP协议基础  557
13.1.2  使用ServerSocket创建TCP服务器端  558
13.1.3  使用Socket进行通信  559
13.1.4  加入多线程  562
13.2  使用URL访问网络资源  567
13.2.1  Android 9安全增强的URL  568
13.2.2  使用URLConnection提交请求  570
13.3  使用HTTP访问网络  575
13.3.1  使用HttpURLConnection  575
实例：多线程下载  576
13.3.2  使用OkHttp  580
实例：访问被保护资源  581
13.4  使用WebView进行混合开发  585
13.4.1  使用WebView浏览网页  586
实例：迷你浏览器  586
13.4.2  使用WebView加载HTML代码  587
13.4.3  使用WebView中的JavaScript调用Android方法  588
13.5  本章小结  591
第14章  管理Android系统桌面  592
14.1  改变壁纸  593
14.1.1  开发动态壁纸（Live Wallpapers）  593
14.1.2  实例：蜿蜒壁纸  594
14.2  快捷方式  597
14.2.1  静态快捷方式  598
14.2.2  动态快捷方式  599
14.2.3  桌面快捷方式（Pinned Shortcut）  601
实例：让程序占领桌面  601
14.3  管理桌面控件  602
14.3.1  开发桌面控件  602
实例：液晶时钟  604
14.3.2  显示带数据集的桌面控件  606
14.4  本章小结  610
第15章  传感器应用开发  611
15.1  利用Android的传感器  612
15.2  Android的常用传感器  614
15.2.1  方向传感器  614
15.2.2  陀螺仪传感器  615
15.2.3  磁场传感器  615
15.2.4  重力传感器  615
15.2.5  线性加速度传感器  615
15.2.6  温度传感器  616
15.2.7  光传感器  616
15.2.8  湿度传感器  616
15.2.9  压力传感器  616
15.2.10  心率传感器  616
15.2.11  离身检查传感器  616
15.3  传感器应用案例  620
实例：指南针  620
实例：水平仪  621
15.4  本章小结  625
第16章  GPS应用开发  626
16.1  支持GPS的核心API  627
16.2  获取LocationProvider  628
16.2.1  获取所有可用的LocationProvider  629
16.2.2  通过名称获得指定LocationProvider  629
16.3  获取定位信息  630
16.3.1  通过模拟器发送GPS信息  630
16.3.2  获取定位数据  630
16.3.3  Android 9新增的室内Wi-Fi定位  632
16.4  临近警告  634
16.5  本章小结  636
第17章  整合高德Map服务  637
17.1  调用高德Map服务  638
17.1.1  获取Map API Key  638
17.1.2  高德地图入门  640
17.2  根据GPS信息在地图上定位  643
17.3  实际定位  649
17.3.1  地址解析与反向地址解析  649
17.3.2  根据地址执行定位  652
17.4  GPS导航  654
17.5  本章小结  659
第18章  合金弹头  660
18.1  合金弹头游戏简介  661
18.2  开发游戏界面组件  661
18.2.1  游戏界面分析  662
18.2.2  实现“怪物”类  662
18.2.3  实现怪物管理类  669
18.2.4  实现“子弹”类  673
18.2.5  实现“角色”类  676
18.3  实现绘图工具类  681
18.4  加载、管理游戏图片  686
18.5  实现游戏界面  689
18.5.1  实现游戏Activity  689
18.5.2  实现主视图  691
18.6  本章小结  699
第19章  电子拍卖系统  700
19.1  系统功能简介和架构设计  701
19.1.1  系统功能简介  701
19.1.2  系统架构设计  702
19.2  JSON简介  703
19.2.1  使用JSON语法创建对象  704
19.2.2  使用JSON语法创建数组  705
19.2.3  Android的JSON支持  706
19.3  发送请求的工具类  706
19.4  用户登录  708
19.4.1  处理登录的接口  708
19.4.2  用户登录客户端  708
19.5  查看流拍物品  716
19.5.1  查看流拍物品的接口  716
19.5.2  查看流拍物品客户端  717
19.6  管理物品种类  722
19.6.1  浏览物品种类的接口  722
19.6.2  查看物品种类  723
19.6.3  添加物品种类的接口  727
19.6.4  添加物品种类  727
19.7  管理拍卖物品  729
19.7.1  查看自己的拍卖物品的接口  729
19.7.2  查看自己的拍卖物品  729
19.7.3  添加拍卖物品的接口  733
19.7.4  添加拍卖物品  733
19.8  参与竞拍  738
19.8.1  选择物品种类  738
19.8.2  根据种类浏览物品的服务器端接口  740
19.8.3  根据种类浏览物品  740
19.8.4  参与竞价的服务器端接口  742
19.8.5  参与竞价  742
19.9  权限控制  747
19.10  本章小结  748
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>疯狂Android讲义（第4版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android 4.X从入门到精通
第1章 Android系统概述
1.1 智能手机
1.1.1 什么是智能手机
1.1.2 智能手机操作系统
1.2 什么是Android
1.2.1 Android的历史
1.2.2 Android的发展
1.2.3 Android的优点
1.3 Android系统架构
1.3.1 应用程序层(Applications)
1.3.2 应用程序框架层(ApplicationFramework)
1.3.3 系统库(Libraries)
1.3.4 Android运行环境(AndroidRuntime)
1.3.5 Linux内核(LinuxKernel)
1.4 小结
1.5 思考题
第2章 搭建Androld开发环境
2.1 系统需求
2.2 软件安装
2.2.1 JDK的安装
2.2.2 AndrOjdSDK
2.2.3 Eclipse和ADT
2.2.4 创建AVD
2.2.5 AVD与真机的区别
2.3 AndroidSDK介绍
2.3.1 AndroidSDK目录结构
2.3.2 Android.jar
2.3.3 AndroidAPI核心包
2.3.4 AndroidAPI扩展包
2.4 创建第一个Android应用程序
2.4.1 创建HeIIoAndroid工程
2.4.2 编写代码，
2.4.3 运行应用程序
2.4.4 工程文件结构解析
2.5 调试程序
2.5.1 设置断点
2.5.2 调试
2.6 小结
2.7 思考题
第3章 Android应用程序结构
3.1 应用程序基本组成
3.1.1 ACljVity
3.1.2 Senrvece
3.1.3 BroadcastReceiver
3.1.4 ContentProvider
3.1.5 lntenl
3.2 ACtiVity
3.2.1 Activity的生命周期
3.2.2 Activity的创建
3.2.3 启动ActMty
3.2.4 关闭Activity
3.2.5 Activity数据传递
3.3 资源
3.4 AndroidManifest.xml
3.5 小结
3.6 思考题
第4章 开户界面开发
第5章 电话和短信应用程序开发
第6章 多媒体开发
第7章 数据存储
第8章 网络编程
第9章 位置服务
第10章 绘图
第11章 Android的国际化与本地化
第12章 应用程序发布
第13章 Android4.1 来了，4.2 也来了
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android 4.X从入门到精通
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>巧用Gradle构建Android应用
序 vii
前言 ix
第1 章 Android 开发Gradle 基础 1
1.1 Android 中的Gradle 构建文件 1
1.2 配置SDK 版本以及其他的默认值 6
1.3 在命令行执行Gradle 构建 9
1.4 在Android Studio 中执行Gradle 构建 15
1.5 添加Java 库的依赖17
1.6 使用Android Studio 添加库的依赖22
1.7 配置仓库25
第2 章 从项目导入到发布29
2.1 设置项目属性 29
2.2 从Eclipse ADT 中迁移应用程序到Android Studio 32
2.3 使用Gradle 从Eclipse ADT 中迁移应用程序37
2.4 升级到新版本Gradle 39
2.5 在项目之间分享设置 42
2.6 为发布APK 签名 44
2.7 使用Android Studio 为发布版本APK 签名48
第3 章 构建类型和定制 51
3.1 处理构建类型 51
3.2 产品定制和变种 54
3.3 合并资源58
3.4 定制维度65
3.5 合并不同定制间的Java 源代码 69
第4 章 自定义任务75
4.1 编写自定义任务 75
4.2 添加自定义任务到构建过程78
4.3 排除任务81
4.4 自定义代码集 83
4.5 使用Android 库 86
第5 章 测试95
5.1 单元测试95
5.2 使用Android 测试支持库测试  101
5.3 Robotium 用于功能测试 106
5.4 使用Espresso 进行Activity 测试  110
第6 章 性能和文档117
6.1 性能推荐 117
6.2 DSL 文档. 123
附录A 刚好够用的Groovy 知识 127
附录B Gradle 基础 137
索引 145
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>巧用Gradle构建Android应用
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>玩转我的Android手机
前言第1层  修炼  知以往，识利器—Android从何来  1.1  Android操作系统的演变    1.1.1  Android的诞生    1.1.2  Android的版本发展与独特优势  1.2  时尚Android手机推介第2层  修炼  简单处，鉴修行—不可不知的基础操作  2.1  灵动物理键  2.2  Android手机基本动作  2.3  主屏由您自定义  2.4  换张壁纸更精彩  2.5  在主屏上添加常用功能  2.6  移动和删除快捷方式  2.7  通知栏  2.8  锁屏和解锁功能  2.9  转换情景模式  2.10  近期任务第3层  修炼  广交友，积人脉—联系人尽在掌握中  3.1  打开联系人界面  3.2  联系人的导入与导出  3.3  添加联系人  3.4  删除联系人  3.5  查看联系人  3.6  长按联系人  3.7  打开联系人详细信息第4层  修炼  谋隆中，晓通途—任务记录员和出行好参谋  4.1  日程安排小管家  4.2  谷歌在手，出门不愁  4.3  我的时间  4.4  我的天气第5层  修炼  千番言，万般语—Android手机通话  5.1  简单通话轻松打  5.2  其他通话设置与操作    5.2.1  呼叫设置    5.2.2  呼叫等待    5.2.3  短信拒接  5.3  铃声设置与个性化制作    5.3.1  铃音存储    5.3.2  设定来电铃音    5.3.3  个性化铃音裁剪  5.4  精彩视频通话第6层  修炼  飞鸽劲，鸿雁来—短信与彩信  6.1  “信息”程序概述    6.1.1  “所有消息”界面的组成    6.1.2  菜单操作项  6.2  短信纷飞    6.2.1  发送短信    6.2.2  查看收到的短信    6.2.3  管理短信息  6.3  彩信翩翩    6.3.1  彩信接入点APN的设置    6.3.2  如何收发彩信  6.4  短信和彩信的设置选项    6.4.1  已接收信息    6.4.2  已发送信息    6.4.3  存储设置    6.4.4  短信设置    6.4.5  彩信设置第7层  修炼  不羁马，随手牵—驾驭第三方软件  7.1  用安卓电子市场下载和安装软件  7.2  软件的转移和卸载  7.3  用91手机助手来管理应用程序  7.4  手动安装软件第8层  修炼  网世界，联神州—Android手机串联无尽头  8.1  蓝牙文件自在传    8.1.1  蓝牙设置    8.1.2  蓝牙传输与连接  8.2  WLAN连接无线网    8.2.1  手机经由无线路由上互联网    8.2.2  电脑通过手机上网  8.3  3G移动网络设置    8.3.1  配置APN的方法    8.3.2  APN参数的设置  8.4  浏览器探秘    8.4.1  UCWeb浏览器介绍    8.4.2  UCWeb的使用    8.4.3  下载网页中的文件  8.5  流量控制的3点技巧第9层  修炼  肆意邮，指尖走—Android掌上邮局  9.1  Gmail安卓客户端  9.2  管理邮件  9.3  Gmail同步  9.4  变更Gmail设置  9.5  邮件程序第10层  修炼  乐交流，捕资讯—Android线上新生活  10.1  Android手机QQ    10.1.1  QQ程序界面    10.1.2  聊天及应用    10.1.3  相关设置  10.2  免费从电脑上发短信和飞信  10.3  RSS阅读  10.4  手机微博，妙语您我他  10.5  在线视频，轻松自如第11层  修炼  声色形，皆自由—炫翻多媒体和娱乐  11.1  酷图酷照    11.1.1  照片、录像的拍摄    11.1.2  图片处理—Gallery  11.2  音乐任我行    11.2.1  音乐播放器    11.2.2  创建播放列表  11.3  视频、影片抢先看  11.4  录音功能  11.5  游戏随心换—玩家推介    11.5.1  流行类    11.5.2  棋牌类    11.5.3  策略类    11.5.4  智慧类    11.5.5  竞速类第12层  修炼  雪花银，自来投—Android手机理财  12.1  逍遥同花顺    12.1.1  进入我的“同花顺”    12.1.2  查看股票详情    12.1.3  其他功能  12.2  用Android手机来料理基金  12.3  手机淘宝，玩转掌上购物    12.3.1  登录手机淘宝    12.3.2  查看和购买商品第13层  修炼  绝五毒，精神旺—搞定Android系统管理  13.1  隐私保护之屏幕锁定  13.2  手机防盗有妙招  13.3  强大的安全屏障—QQ安全助手  13.4  后台管理  13.5  电源管理  13.6  系统的备份和修复
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>玩转我的Android手机
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Java和Android开发学习指南(第二版)
目录

第1章 Java基础............................................. 1
1.1 下载和安装Java....................................... 1
1.1.1 在Windows上的安装................... 1
1.1.2 在Linux系统上的安装................. 2
1.1.3 在Mac OS X系统上的安装......... 2
1.1.4 设置系统环境变量........................ 2
1.1.5 测试安装........................................ 3
1.1.6 下载Java API文档........................ 3
1.2 第一个Java程序...................................... 3
1.2.1 编写Java程序............................... 3
1.2.2 编译Java程序............................... 4
1.2.3 运行Java程序............................... 4
1.3 Java编码惯例........................................... 5
1.4 集成开发环境........................................... 5
1.5 本章小结................................................... 6
第2章 语言基础.............................................. 7
2.1 ASCII和Unicode ..................................... 7
2.2 分隔符....................................................... 8
2.3 基本类型................................................... 8
2.4 变量........................................................... 9
2.5 常量..........................................................11
2.6 字面值......................................................11
2.6.1 整数字面值...................................11
2.6.2 浮点数字面值...............................12
2.6.3 布尔字面值...................................13
2.6.4 字符字面值...................................13
2.7 基本类型转换..........................................14
2.7.1 加宽转换.......................................14
2.7.2 收窄转换.......................................14
2.8 操作符......................................................15
2.8.1 一元操作符...................................16
2.8.2 算术操作符...................................17
2.8.3 相等操作符...................................18
2.8.4 关系操作符...................................18
2.8.5 条件操作符...................................19
2.8.6 位移操作符...................................19
2.8.7 赋值操作符...................................20
2.8.8 整数按位操作符& | ^ ...................20
2.8.9 逻辑操作符 & | ^ .........................21
2.8.10 操作符优先级 .............................21
2.8.11 提升 ............................................ 22
2.9 注释......................................................... 22
2.10 本章小结............................................... 23
第3章 语句...................................................... 24
3.1 概览......................................................... 24
3.2 if语句...................................................... 25
3.3 while语句............................................... 26
3.4 do-while循环.......................................... 28
3.5 for语句.................................................... 28
3.6 break语句............................................... 31
3.7 continue语句........................................... 32
3.8 switch语句.............................................. 32
3.9 本章小结................................................. 33
第4章 对象和类............................................. 34
4.1 什么是对象............................................. 34
4.2 Java类..................................................... 34
4.2.1 字段.............................................. 36
4.2.2 方法.............................................. 36
4.2.3 Main方法..................................... 36
4.2.4 构造方法...................................... 37
4.2.5 Varargs .......................................... 37
4.2.6 UML类图中的类成员................. 38
4.3 创建对象................................................. 38
4.4 null关键字.............................................. 38
4.5 对象的内存分配..................................... 39
4.6 Java包..................................................... 40
4.7 封装和访问控制..................................... 41
4.7.1 类访问控制修饰符....................... 41
4.7.2 类成员访问控制修饰符............... 42
4.8 this关键字............................................... 44
4.9 使用其他的类......................................... 45
4.10 final变量............................................... 46
4.11 静态成员............................................... 47
4.12 静态final变量...................................... 49
4.13 静态导入............................................... 50
4.14 变量作用域........................................... 50
4.15 方法重载............................................... 51
4.16 静态工厂方法....................................... 52
4.17 传值或传引用....................................... 53
4.18 加载、连接和初始化............................ 53

4.18.1 加载.............................................54
4.18.2 连接.............................................54
4.18.3 初始化.........................................54
4.19 对象创建初始化....................................55
4.20 垃圾收集................................................57
4.21 本章小结................................................57
第5章 核心类..................................................58
5.1 java.lang.Object........................................58
5.2 java.lang.String.........................................59
5.2.1 比较两个字符串...........................59
5.2.2 字符串字面值...............................60
5.2.3 转义特定字符...............................60
5.2.4 字符串上的switch........................61
5.2.5 String类的构造方法.....................61
5.2.6 String类的方法............................62
5.3 java.lang.StringBuffer和java.lang.StringBuilder.............................64
5.3.1 StringBuilder类的构造方法.........64
5.3.2 StringBuilder类的方法.................64
5.4 基本类型包装器......................................65
5.4.1 java.lang.Boolean ..........................66
5.4.2 java.lang.Character ........................66
5.5 java.lang.Class..........................................66
5.6 java.lang.System.......................................67
5.7 java.util.Scanner .......................................70
5.8 本章小结..................................................70
第6章 数组.......................................................71
6.1 概览..........................................................71
6.2 遍历数组..................................................72
6.3 java.util.Arrays类....................................73
6.4 修改数组的大小......................................73
6.5 查找一个数组..........................................74
6.6 给main方法传入一个字符串数组........75
6.7 多维数组..................................................76
6.8 本章小结..................................................76
第7章 继承.......................................................77
7.1 概览..........................................................77
7.1.1 extends关键字..............................77
7.1.2 is-a关系........................................78
7.2 可访问性..................................................79
7.3 方法覆盖..................................................80
7.4 调用超类的构造方法..............................81
7.5 调用超类的隐藏方法.............................. 82
7.6 类型强制转换......................................... 83
7.7 final类..................................................... 83
7.8 instanceof操作符.................................... 84
7.9 本章小结................................................. 84
第8章 错误处理............................................. 85
8.1 捕获异常................................................. 85
8.2 没有catch的try...................................... 86
8.3 捕获多个异常......................................... 87
8.4 try-with-resource语句............................. 87
8.5 java.lang.Exception类............................. 88
8.6 从方法中抛出一个异常.......................... 89
8.7 用户定义的异常..................................... 90
8.8 异常处理的注意事项.............................. 91
8.9 本章小结................................................. 91
第9章 操作数字............................................. 92
9.1 装箱和拆箱............................................. 92
9.2 数字解析................................................. 92
9.3 数字格式化............................................. 93
9.4 使用java.text.NumberFormat进行数字解析 ................................................. 94
9.5 java.lang.Math类.................................... 94
9.6 计算货币................................................. 95
9.7 生成随机数............................................. 95
9.8 本章小结................................................. 96
第10章 接口和抽象类................................. 97
10.1 接口的概念........................................... 97
10.2 技术上的接口....................................... 98
10.2.1 接口中的字段............................. 99
10.2.2 抽象方法 .................................... 99
10.2.3 扩展一个接口............................. 99
10.3 默认方法............................................. 100
10.4 静态方法............................................. 100
10.5 基类..................................................... 100
10.6 抽象类................................................. 102
10.7 本章小结............................................. 102
第11章 多态.................................................. 103
11.1 概览..................................................... 103
11.2 多态的应用......................................... 105
11.3 多态和反射......................................... 106
11.4 本章小结............................................. 107

第12章 枚举..................................................108
12.1 概览......................................................108
12.2 类中的enum........................................109
12.3 java.lang.Enum类................................109
12.4 遍历枚举值..........................................110
12.5 enum上的switch.................................110
12.6 枚举成员..............................................110
12.7 本章小结..............................................112
第13章 操作日期和时间...........................113
13.1 概述......................................................113
13.2 Instant类..............................................113
13.3 LocalDate .............................................114
13.4 Period ...................................................116
13.5 LocalDateTime .....................................117
13.6 时区......................................................118
13.7 ZonedDateTime ....................................119
13.8 Duration................................................120
13.9 格式化日期时间..................................123
13.10 解析一个日期时间............................124
13.11 使用旧的日期和时间API .................125
13.11.1 java.util.Date类.......................125
13.11.2 java.util.Calendar类................125
13.11.3 使用DateFormat解析和格式化.....................................126
13.12 本章小结............................................128
第14章 集合框架.........................................129
14.1 集合框架概览......................................129
14.2 Collection接口....................................130
14.3 List和ArrayList ..................................130
14.4 使用Iterator和for遍历一个集合......132
14.5 Set和HashSet......................................133
14.6 Queue和LinkedList ............................133
14.7 集合转换..............................................134
14.8 Map和HashMap .................................135
14.9 使得对象可比较和可排序..................136
14.9.1 使用java.lang.Comparable .......136
14.9.2 使用Comparator .......................138
14.10 本章小结............................................141
第15章 泛型..................................................142
15.1 没有泛型的日子..................................142
15.2 泛型类型..............................................142
15.3 使用不带类型参数的泛型类型.......... 145
15.4 使用?通配符........................................ 145
15.5 在方法中使用界限通配符.................. 147
15.6 泛型方法............................................. 148
15.7 编写泛型类型..................................... 148
15.8 本章小结............................................. 149
第16章 输入/输出....................................... 150
16.1 文件系统和路径................................. 150
16.2 文件和目录的处理和操作.................. 152
16.2.1 创建和删除文件和目录........... 152
16.2.2 获取一个目录对象................... 152
16.2.3 复制和移动文件....................... 153
16.2.4 从文件读取和写入到文件....... 153
16.3 输入/输出流........................................ 155
16.4 读二进制数据..................................... 155
16.5 写二进制数据..................................... 158
16.6 写文本（字符） ................................. 161
16.6.1 Writer ........................................ 161
16.6.2 OutputStreamWriter .................. 162
16.6.3 PrintWriter ................................ 163
16.7 读文本（字符） ................................. 164
16.7.1 Reader ....................................... 164
16.7.2 InputStreamReader.................... 165
16.7.3 BufferedReader ......................... 166
16.8 使用PrintStream记录日志................. 167
16.9 随机访问文件..................................... 168
16.10 对象序列化....................................... 171
16.11 本章小结........................................... 173
第17章 注解.................................................. 174
17.1 概览..................................................... 174
17.1.1 注解和注解类型....................... 174
17.1.2 注解语法.................................. 174
17.1.3 Annotation接口........................ 175
17.2 标准注解............................................. 175
17.2.1 Override .................................... 175
17.2.2 Deprecated ................................ 176
17.2.3 SuppressWarnings ..................... 177
17.3 常用注解............................................. 178
17.4 标准元-注解........................................ 178
17.4.1 Documented .............................. 178
17.4.2 Retention................................... 179
17.4.3 Retention................................... 179
17.4.4 Target ........................................ 179

17.5 定制注解类型......................................179
17.5.1 编写自己的定制注解类型.......180
17.5.2 使用定制注解类型...................180
17.5.3 使用反射来查询注解...............180
17.6 本章小结..............................................181
第18章 嵌套类和内部类...........................182
18.1 嵌套类概览..........................................182
18.2 静态嵌套类..........................................183
18.3 成员内部类..........................................184
18.4 局部内部类..........................................185
18.5 匿名内部类..........................................187
18.6 嵌套类和内部类的背后......................188
18.7 本章小结..............................................189
第19章 线程..................................................190
19.1 Java线程简介......................................190
19.2 创建一个线程......................................190
19.2.1 扩展线程...................................191
19.2.2 实现Runnable...........................192
19.3 使用多线程..........................................193
19.4 线程优先级..........................................194
19.5 停止线程..............................................196
19.6 同步......................................................198
19.6.1 线程干扰...................................198
19.6.2 原子操作...................................199
19.6.3 方法同步...................................199
19.6.4 块同步.......................................200
19.7 可见性..................................................200
19.8 线程协调..............................................202
19.9 使用定时器..........................................206
19.10 本章小结............................................208
第20章 并发工具.........................................209
20.1 原子变量..............................................209
20.2 Executor和ExecutorService ...............210
20.3 Callable和Future ................................213
20.4 锁..........................................................216
20.5 本章小结..............................................217
第21章 国际化..............................................218
21.1 本地化..................................................218
21.2 国际化应用程序..................................219
21.2.1 将文本性部分隔离到属性文件中.......................................220
21.2.2 使用ResourceBundle读取属性文件 .................................. 221
21.3 一个国际化的Swing应用程序.......... 221
21.4 本章小结............................................. 223
第22章 网络.................................................. 224
22.1 网络概览............................................. 224
22.2 超文本传输协议（HTTP）................ 224
22.2.1 HTTP请求............................... 225
22.2.2 HTTP响应............................... 225
22.3 java.net.URL........................................ 226
22.3.1 解析URL ................................. 227
22.3.2 读取Web资源......................... 227
22.4 java.net.URLConnection...................... 228
22.4.1 读Web资源............................. 229
22.4.2 写到一个Web服务器............. 230
22.5 java.net.Socket ..................................... 231
22.6 java.net.ServerSocket........................... 232
22.7 一个Web服务器应用程序................ 233
22.7.1 HttpServer类............................ 233
22.7.2 Request类................................. 236
22.7.3 Response类.............................. 238
22.7.4 运行应用程序........................... 239
22.8 本章小结............................................. 240
第23章 Android简介................................ 241
23.1 概览..................................................... 241
23.2 应用程序开发简介.............................. 241
23.3 Android版本....................................... 243
23.4 在线资源............................................. 244
23.5 应该使用哪个版本的Java.................. 244
第24章 初识Android................................ 245
24.1 下载和安装Android Studio ................ 245
24.1.1 在Windows系统上安装.......... 245
24.1.2 在Mac OS X系统上安装........ 249
24.1.3 在Linux系统上安装............... 250
24.2 创建应用程序..................................... 250
24.3 在模拟器上运行应用程序.................. 253
24.4 应用程序结构..................................... 254
24.4.1 Android清单............................ 255
24.4.2 apk文件.................................... 256
24.5 调试应用程序..................................... 256
24.5.1 日志.......................................... 256
24.5.2 设置断点.................................. 257

24.6 Android SDK Manager.........................258
24.7 创建一个Android虚拟设备...............258
24.8 在物理设备上运行应用程序..............261
24.9 在Android Studio中打开一个项目....261
24.10 使用Java 8.........................................262
24.11 删除支持的库....................................262
24.12 本章小结............................................263
第25章 活动..................................................264
25.1 活动的生命周期..................................264
25.2 ActivityDemo示例..............................265
25.3 修改应用程序图标..............................267
25.4 使用Android资源...............................268
25.5 启动另一个活动..................................268
25.6 活动相关的意图..................................271
25.7 本章小结..............................................273
第26章 UI组件............................................274
26.1 概览......................................................274
26.2 使用Android Studio UI工具..............274
26.3 使用基本组件......................................275
26.4 Toast .....................................................278
26.5 通知......................................................280
26.6 本章小结..............................................284
第27章 布局..................................................285
27.1 概览......................................................285
27.2 LinearLayout ........................................285
27.3 RelativeLayout .....................................287
27.4 FrameLayout ........................................290
27.5 TableLayout ..........................................291
27.6 GridLayout ...........................................292
27.7 通过编程来创建布局..........................293
27.8 本章小结..............................................294
第28章 监听器..............................................295
28.1 概览......................................................295
28.2 使用onClick属性...............................296
28.3 实现一个监听器..................................299
28.4 本章小结..............................................303
第29章 操作栏..............................................304
29.1 概览......................................................304
29.2 添加操作项......................................... 305
29.3 添加下拉式导航................................. 308
29.4 回退一步............................................. 311
29.5 本章小结............................................. 311
第30章 菜单.................................................. 312
30.1 概览..................................................... 312
30.2 菜单文件............................................. 312
30.3 选项菜单............................................. 313
30.4 上下文菜单......................................... 315
30.5 弹出式菜单......................................... 318
30.6 本章小结............................................. 320
第31章 ListView......................................... 321
31.1 概览..................................................... 321
31.2 创建一个ListAdapter ......................... 322
31.3 使用一个ListView.............................. 323
31.4 扩展ListActivity并编写一个定制的 适配器................................................. 325
31.5 样式化选取的项................................. 328
31.6 本章小结............................................. 330
第32章 GridView ....................................... 331
32.1 概览..................................................... 331
32.2 使用GridView..................................... 331
32.3 本章小结............................................. 335
第33章 样式和主题.................................... 336
33.1 概览..................................................... 336
33.2 使用样式............................................. 337
33.3 使用主题............................................. 339
33.4 本章小结............................................. 340
第34章 位图处理........................................ 341
34.1 概览..................................................... 341
34.2 位图处理............................................. 342
34.3 本章小结............................................. 346
第35章 图形和定制视图........................... 347
35.1 概览..................................................... 347
35.2 硬件加速............................................. 347
35.3 创建一个定制视图.............................. 348
35.4 绘制基本形状..................................... 348
35.5 绘制文本............................................. 349
35.6 透明度................................................. 349

35.7 Shader...................................................350
35.8 裁剪......................................................350
35.9 使用路径..............................................351
35.10 CanvasDemo应用程序......................352
35.11 本章小结............................................355
第36章 片段..................................................356
36.1 片段的生命周期..................................356
36.2 片段管理..............................................358
36.3 使用片段..............................................358
36.4 扩展ListFragment并使用FragmentManager ................................363
36.5 本章小结..............................................366
第37章 多面板布局....................................367
37.1 概览......................................................367
37.2 多面板示例..........................................369
37.2.1 布局和活动...............................371
37.2.2 片段类.......................................373
37.2.3 运行应用程序...........................377
37.3 本章小结..............................................377
第38章 动画..................................................378
38.1 概览......................................................378
38.2 属性动画..............................................378
38.2.1 Animator....................................378
38.2.2 ValueAnimator...........................378
38.2.3 ObjectAnimator .........................379
38.2.4 AnimatorSet...............................379
38.3 动画项目..............................................380
38.4 本章小结..............................................383
第39章 偏好..................................................384
39.1 SharedPreference..................................384
39.2 Preference API......................................384
39.3 使用Preference....................................385
39.4 本章小结..............................................389
第40章 操作文件.........................................390
40.1 概览......................................................390
40.1.1 内部存储...................................390
40.1.2 外部存储...................................391
40.2 创建一个Notes应用程序...................392
40.3 访问公共存储......................................397
40.4 本章小结..............................................400
第41章 操作数据库.................................... 401
41.1 概览..................................................... 401
41.2 Database API ....................................... 401
41.2.1 SQLiteOpenHelper类............... 401
41.2.2 SQLiteDatabase类................... 402
41.2.3 Cursor接口............................... 403
41.3 示例..................................................... 403
41.4 本章小结............................................. 410
第42章 获取图片........................................ 411
42.1 概览..................................................... 411
42.2 使用相机............................................. 412
42.3 Camera API.......................................... 415
42.3.1 管理相机.................................. 415
42.3.2 管理SurfaceHolder .................. 416
42.4 使用Camera API................................. 417
42.5 本章小结............................................. 421
第43章 制作视频........................................ 422
43.1 使用内建意图..................................... 422
43.2 MediaRecorder..................................... 426
43.3 使用MediaRecorder............................ 427
43.4 本章小结............................................. 430
第44章 声音录制........................................ 431
44.1 MediaRecorder类................................ 431
44.2 示例..................................................... 431
44.3 本章小结............................................. 435
第45章 处理Handler................................ 436
45.1 概览..................................................... 436
45.2 示例..................................................... 436
45.3 本章小结............................................. 439
第46章 异步工具........................................ 440
46.1 概览..................................................... 440
46.2 示例..................................................... 440
46.3 本章小结............................................. 444
第47章 服务.................................................. 445
47.1 概览..................................................... 445
47.2 服务API.............................................. 445
47.3 声明服务............................................. 446
47.4 服务示例............................................. 446
47.5 本章小结..............................................451
第48章 广播接收器....................................452
48.1 概览......................................................452
48.2 基于时钟的广播接收器......................452
48.3 取消通知..............................................454
48.4 本章小结..............................................457
第49章 闹钟服务.........................................458
49.1 概览......................................................458
49.2 示例......................................................459
49.3 本章小结..............................................463
第50章 内容提供者....................................464
50.1 概览......................................................464
50.2 ContentProvider类...............................465
50.2.1 query方法.................................465
50.2.2 insert方法.................................465
50.2.3 update方法...............................465
50.2.4 delete方法.................................466
50.3 创建一个内容提供者..........................466
50.4 消费内容提供者..................................475
50.5 本章小结..............................................476
附录A javac ....................................................477
A.1 选项.......................................................477
A.1.1 标准选项....................................477
A.1.2 非标准选项................................479
A.1.3 -J选项........................................480
A.2 命令行参数文件...................................480
附录B java ......................................................481
B.1 选项.......................................................481
B.1.1 标准选项.................................... 481
B.1.2 非标准选项................................ 483
附录C jar ........................................................ 485
C.1 语法....................................................... 485
C.2 选项....................................................... 486
C.3 示例....................................................... 487
C.3.1 创建............................................ 487
C.3.2 更新............................................ 487
C.3.3 列出............................................ 487
C.3.4 提取............................................ 487
C.3.5 索引............................................ 487
C.4 设置应用程序入口点........................... 488
附录D NetBeans .......................................... 489
D.1 下载和安装.......................................... 489
D.2 创建一个项目....................................... 489
D.3 创建一个类.......................................... 491
D.4 运行一个Java类................................. 491
D.5 添加库.................................................. 491
D.6 调试代码.............................................. 492
附录E Eclipse ............................................... 493
E.1 下载和安装........................................... 493
E.2 添加一个JRE ....................................... 494
E.3 创建一个Java项目.............................. 495
E.4 创建一个类........................................... 496
E.5 运行一个Java类.................................. 497
E.6 添加库................................................... 497
E.7 调试代码............................................... 497
E.8 有用的快捷方式................................... 498
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Java和Android开发学习指南(第二版)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android移动开发技术丛书 Android开发实例大全（第2版）
第1章　UI布局实例集锦	1
实例001：使用线性布局（LinearLayout）来布局屏幕	1
实例002：使用相对布局（RelativeLayout）来布局屏幕	3
实例003：使用表格布局（TableLayout）来布局屏幕	5
实例004：使用绝对布局（AbsoluteLayout）来布局屏幕	6
实例005：使用标签布局（TabLayout）来布局屏幕	7
实例006：使用层布局（FrameLayout）	9
实例007：创建一个桌面组件Widget	10
实例008：在屏幕中实现一个按钮效果	11
实例009：在屏幕中显示文字	12
实例010：在屏幕中显示编辑框	15
实例011：在屏幕中显示复选框	17
实例012：在屏幕中显示单选框	19
实例013：在屏幕中显示下拉列表框	20
实例014：在屏幕中实现自动输入文本效果	23
实例015：使用日期选择器控件DatePicker	26
实例016：自动选择一个输入时间	27
实例017：实现屏幕自动滚动	29
实例018：实现一个进度条效果	29
实例019：开发一个评分程序	31
实例020：在屏幕中显示一幅指定的图片	33
实例021：设置一幅图片作为按钮来使用	34
实例022：实现QQ空间中的显示照片效果	36
实例023：实现书架展示排列布局效果	38
实例024：实现树形菜单布局效果	40
第2章　控件实例集锦	42
实例025：显示在文本框中输入的信息	42
实例026：使用RadioGroup控件实现选项选择功能	44
实例027：使用CheckBox控件实现同意条款效果	45
实例028：使用Spinner控件实现选项选择	48
实例029：使用Gallery控件实现个人相簿功能	51
实例030：开发一个文件搜索程序	54
实例031：单击按钮后实现按钮置换	56
实例032：模拟实现一个时钟界面效果	58
实例033：联合使用DatePicker和TimePicker来选择日期和时间	60
实例034：动态分隔手机屏幕	62
实例035：使用ListActivity实现动态菜单列表	65
实例036：加载手机磁盘中的文件	67
实例037：实现抽屉样式效果	69
实例038：在屏幕中动态显示多种对话框	74
实例039：手机秘书——重要事情提醒	79
实例040：动态添加或删除菜单	85
实例041：自定义Android控件实现单选按钮	89
实例042：使用自定义控件在屏幕中绘制一条虚线	93
实例043：在屏幕中实现手风琴效果	94
实例044：在屏幕中实现有秒针的时钟	96
实例045：修饰屏幕中的Button按钮	98
实例046：在屏幕中实现定时器效果	99
实例047：设置屏幕中控件的样式	101
第3章　自动化服务实例集锦	102
实例048：自动获取手机屏幕的分辨率	102
实例049：自动获取手机电池的剩余电量	105
实例050：来电时自动发送信息提醒	107
实例051：获取手机存储卡的容量	111
实例052：操作存储卡和内存卡中的数据	114
实例053：设置闹钟	120
实例054：实现黑名单来电自动静音处理	126
实例055：设置一个自动开机界面	128
实例056：更换手机屏幕背景图片系统	130
实例057：设置自动更换手机桌面背景	133
实例058：自动控制后台系统服务	143
实例059：在屏幕中拖动一个按钮	145
实例060：启动和关闭AlarmManager服务	149
实例061：自动拦截黑名单	151
第4章　数据存储实例集锦	155
实例062：在屏幕中显示SharedPreferences中存储的信息	155
实例063：演示数据添加、删除等操作	156
实例064：编写一个手机日记本程序	161
实例065：使用ContentProvider开发一个手机日记本	167
实例066：使用文件保存数据	177
实例067：将网上的图片保存到SD卡并在手机中显示出来	179
实例068：保存联系人信息	182
实例069：使用文件方式保存信息	184
实例070：读取上次开机时保存的信息	186
第5章　电话和短信实例集锦	188
实例071：编写一个拨号程序	188
实例072：发送一条短信	190
实例073：单击按钮实现拨号功能	192
实例074：一个通用发短信程序	195
实例075：收到短信后用E-mail邮件进行通知	199
实例076：实现触屏拨号功能	202
实例077：一个短信群发程序	204
实例078：来电后自动发送邮件通知	206
实例079：监听手机拨接状态	208
实例080：检查短信是否发送成功	211
第6章　图形图像实例集锦	215
实例081：在屏幕中绘制一个矩形	215
实例082：在屏幕中绘制一个画布	218
实例083：实现水纹的透明效果	220
实例084：渲染几何图形	223
实例085：用图片为背景实现动画效果	226
实例086：在手机屏幕中实现Frame动画效果	228
实例087：对图片进行缩放处理	230
实例088：旋转屏幕中的图片	233
实例089：实现旗帜飞扬的效果	236
实例090：模拟构建一个3D场景效果	240
实例091：模拟实现粒子系统效果	243
实例092：在Canvas中写文字	246
实例093：移动屏幕中的图片	253
实例094：在屏幕中绘制一个三维圆柱体	256
实例095：获取并显示图片的宽和高	264
实例096：编写一个手机屏保程序	266
实例097：以触摸方式移动图片	273
实例098：显示存储卡中的图片信息	276
实例099：在手机屏幕中显示系统内的图片信息	278
第7章　和网络有关的实例集锦	281
实例100：传递HTTP参数	281
实例101：在屏幕中使用HTML程序	284
实例102：在手机中浏览网页	285
实例103：使用内置浏览器打开网页	286
实例104：显示QQ空间中的照片	288
实例105：通过RSS系统在线浏览新闻	290
实例106：下载网络图片作为手机背景	300
实例107：将文件上传至服务器	302
实例108：开发一个移动博客发布器	305
实例109：远程下载并安装一个软件	309
实例110：控制蓝牙系统	313
实例111：解析并生成XML文件	321
实例112：获取某个指定网页的HTML源码	322
实例113：使用PULL解析XML数据	324
实例114：采用POST方式向服务器传递数据	327
第8章　多媒体实例集锦	330
实例115：播放一个指定的MP3文件	330
实例116：调节手机音量的大小	333
实例117：实现相机预览和拍照功能	336
实例118：在手机中播放影片	342
实例119：手机录音系统	345
实例120：设置手机中的铃声	350
实例121：在线播放网络中的MP3	353
实例122：在线下载音乐作为手机铃声	359
实例123：播放GIF格式的动画	365
实例124：在手机中播放MP4视频	370
实例125：在线观看3GP视频	373
第9章　Google地图实例集锦	381
实例126：定位当前位置的坐标	381
实例127：在手机中使用Google地图	384
实例128：在地图中定位输入的坐标	389
实例129：在地图中快速查询某个位置	392
实例130：随着手机的移动自动更新位置	394
实例131：在手机地图中描绘线路并计算线路距离	398
实例132：在Google地图中显示指定的位置	404
实例133：在手机地图中查询一个地址	406
实例134：在手机中实现地址查询	407
实例135：开发一个路径导航系统	411
第10章　Google API实例集锦	418
实例136：模拟验证官方账号	418
实例137：在手机中开发一个Google搜索程序	424
实例138：在手机中编写一个翻译软件	429
实例139：生成一个二维码	431
实例140：使用Google Chart API生成二维码	434
第11章　平板应用	439
实例141：开发一个音乐播放器	439
实例142：开发一个在线天气播报系统	445
实例143：开发一个网页浏览程序	454
实例144：使用文件来保存音乐状态	459
实例145：在屏幕中显示不同的进度条效果	462
实例146：勇敢派递员游戏	465
第12章　游戏应用	467
实例147：一个简单的贪吃蛇游戏	467
实例148：开发一个魔塔游戏	472
实例149：疯狂足球游戏	491
实例150：21点游戏	512
实例151：俄罗斯方块游戏	515
第13章　Android程序优化	519
实例152：测试计算机的性能	519
实例153：测试内存性能	521
实例154：优化Android模拟器	524
实例155：使用merge标签优化UI界面	527
实例156：优化Android Layout	529
实例157：优化Bitmap图片	531
第14章　可穿戴设备开发精粹	533
实例158：使用SensorSimulator传感器	533
实例159：使用磁场传感器	537
实例160：使用加速度传感器	538
实例161：使用姿态传感器	540
实例162：使用温度传感器	543
第15章　综合实例——手机地图系统	546
实例163：使用Google地图开发一个综合地图系统	546
15.1  项目分析	546
15.1.1  规划UI界面	546
15.1.2  数据存储设计	547
15.2  具体实现	548
15.2.1  新建工程	548
15.2.2  主界面	548
15.2.3  新建界面	550
15.2.4  设置界面	552
15.2.5  帮助界面	557
15.2.6  地图界面	559
15.2.7  数据存取	569
15.2.8  实现Service服务	574
15.3  发布自己的作品来赢利	576
15.3.1  申请成为会员	576
15.3.2  生成签名文件	578
15.3.3  使用签名文件	583
15.3.4  发布	585
第16章　综合实例——音乐播放器系统	586
实例164：开发一个音乐播放器	586
16.1  项目介绍	586
16.1.1  项目背景介绍	586
16.1.2  项目目的	587
16.1.3  对读者的意义	587
16.2  需求分析	587
16.2.1  构成模块	587
16.2.2  功能结构图	590
16.2.3  系统功能说明	591
16.2.4  总体目标	591
16.3  设计数据库	592
16.3.1  字段设计	592
16.3.2  数据库连接	592
16.3.3  创建数据库	593
16.3.4  操作数据库	594
16.3.5  数据显示	595
16.4  具体编码	595
16.4.1  服务信息主界面	595
16.4.2  播放器主界面	597
16.4.3  播放列表功能	606
16.4.4  菜单功能模块	609
16.4.5  播放设置界面	611
16.4.6  设置显示歌词	614
16.4.7  文件浏览器模块	616
第17章　体育类游戏——NBA激情投篮	620
实例165：NBA激情投篮	620
17.1  项目介绍	620
17.1.1  意义和技术分析	620
17.1.2  策划游戏	621
17.1.3  准备工作	621
17.2  项目架构	622
17.2.1  总体架构	622
17.2.2  规划类	622
17.3  具体编码	624
17.3.1  编写主类LanqiuActivity	624
17.3.2  编写常量类	627
17.3.3  设计游戏试玩界面	632
17.3.4  绘制游戏场景	637
第18章　综合邮件系统	645
实例166：开发一个综合邮件系统	645
18.1  项目介绍	645
18.1.1  项目背景介绍	645
18.1.2  项目目的	645
18.2  系统需求分析	646
18.2.1  构成模块	646
18.2.2  系统流程	649
18.2.3  功能结构图	649
18.2.4  系统功能说明	650
18.2.5  系统需求	650
18.3  数据存储设计	650
18.3.1  用户信息类	651
18.3.2  SharedPreferences	654
18.4  具体编码	656
18.4.1  欢迎界面	657
18.4.2  系统主界面	659
18.4.3  邮箱类型设置	666
18.4.4  邮箱收取设置	669
18.4.5  邮箱发送设置	673
18.4.6  邮箱用户检查	678
18.4.7  设置用户别名	682
18.4.8  用户邮件编辑	685
18.5  总结 691
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android移动开发技术丛书 Android开发实例大全（第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>轻松玩转Android手机
第1章  Android世界  1.1  Android的前世今生    1.1.1  Android简介    1.1.2  Android版本演变史  1.2  Android智能手机导购第2章  刷刷更健康  2.1  为何要刷机  2.2  刷机前的准备    2.2.1  Android系统常用名词    2.2.2  刷机的材料准备  2.3  开始刷机    2.3.1  刷Recovery和无痛ROOT    2.3.2  刷Radio    2.3.3  刷ROM第3章  Android基本操作  3.1  按键基本操作    3.1.1  Android手机硬按键介绍    3.1.2  手指触控操作  3.2  反馈模式    3.2.1  视觉反馈    3.2.2  声音反馈    3.2.3  触感反馈C132  3.3  界面基本操作    3.3.1  主屏幕    3.3.2  全部应用程序界面    3.3.3  状态栏通知第4章  Android软件安装  4.1  安装官方软件    4.1.1  AndroidMarket介绍    4.1.2  安装Android应用程序    4.1.3  卸载Android应用程序  4.2  安装非官方软件    4.2.1  借助91手机助手安装    4.2.2  在手机文件管理器中安装    4.2.3  手机端APK安装器安装  4.3  其它第3方市场    4.3.1  简介    4.3.2  进阶体验第5章  打造个性的Alldroid  5.1  Android基本设置    5.1.1  语言设置    5.1.2  手机彩信和GPRS上网设置    5.1.3  Wi-Fi和蓝牙设置  5.2  自定义桌面    5.2.1  桌面功能介绍    5.2.2  利用主题个性化手机    5.2.3  Go桌面  5.3  自定义壁纸    5.3.1  设置壁纸    5.3.2  动态壁纸设置  5.4  铃声设定    5.4.1  铃声的基本设置    5.4.2  Ringo Lite软件    5.4.3  铃声剪辑第6章  Android同步和备份  6.1  91手机助手    6.1.1  备份数据    6.1.2  还原数据    6.1.3  网络备份还原  6.2  钛备份第7章  Android通信  7.1  使用Android发短信    7.1.1  Android自带短信软件    7.1.2  HandcentSMS软件    7.1.3  手机飞信forAndroid  7.2  使用Android打电话    7.2.1  Android自带通话功能    7.2.2  连云助手    7.2.3  来电通CallMaster    7.2.4  SkypeforAndroid第8章  Android商务办公  8.1  Android通讯录管理    8.1.1  Android系统自带通讯录    8.1.2  友录通讯录  8.2  Android记事本    8.2.1  新建记事    8.2.2  选择文件夹    8.2.3  搜索    8.2.4  备份与还原  8.3  Android日历    8.3.1  Android系统自带日历    8.3.2  365日历软件  8.4  Android收发电子邮件  8.5  Android掌上办公Office    8.5.1  文档基本操作    8.5.2  Office个性操作第9章  Android轻松娱乐  9.1  掌上阅读    9.1.1  iReader阅读软件Android版    9.1.2  RepligoPDF阅读器    9.1.3  掌上书院  9.2  聆听音乐    9.2.1  手机自带的音乐功能    9.2.2  多米音乐    9.2.3  在线搜歌软件MusicOnline  9.3  拍照和摄影    9.3.1  拍照和分享    9.3.2  摄影和编辑  9.4  电视电影随身看    9.4.1  Android支持的视频格式    9.4.2  Androld视频格式转换    9.4.3  Android观看网络视频  9.5  游戏随身玩    9.5.1  精彩游戏推荐    9.5.2  玩模拟器    9.5.3  玩网络游戏第10章  Android生活帮手  10.1  闹钟设定    10.2  网上购物    10.2.1  团购    10.2.2  淘宝  10.3  餐馆查询  10.4  酒店预订  10.5  出行查询    10.5.1  公交线路——BusLine    10.5.2  列车时刻——盛名火车时刻表    10.5.3  航班订票——航班管家    1O.5.4  自驾必备——Google地图第11章  Android网络生泛雪  11.1  UCweb浏览器  11.2  网上社交——让大家来关注你    11.2.1  人人网    11.2.2  我是微博控  11.3  聊天工具——和好友打个招呼    11.3.1  MSN    11.3.2  QQ  11.4  新闻早知道第12章  Android其他应用  12.1  进程管理  12.2  监控你的网络流量  12.3  其它软件    12.3.1  掌中英语    12.3.2  趣味拍照    12.3.3  看译全能王
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>轻松玩转Android手机
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android Launcher应用开发
第一部分 　Launcher开发基础
第1章　Launcher简介　　2
1.1 　总体结构　　2
1.2 　Launcher3的交叉编译　　5
1.2.1 　Launcher3的主体编译　　7
1.2.2 　Protocol Buffer的Debug工具依赖库编译　　8
1.2.3 　生成Protocol Buffer的测试工具　　9
1.2.4 　Launcher3的编译　　9
1.3 　Launcher3的应用程序体系　　10
1.3.1 　Launcher3的基础信息　　10
1.3.2 　Launcher3的权限设置　　10
1.3.3 　Launcher3的应用程序根节点配置　　11
1.3.4 　Launcher3的应用程序组件配置　　13
1.4 　Protocol Buffer设计　　16
第2章　LauncherApplication　　17
2.1 　创建Launcher应用程序　　17
2.2 　Launcher应用程序终止　　18
2.3 　注意事项　　18
第二部分 　Launcher的控制中心
第3章　Launcher的状态保存与恢复　　22
3.1 　Android的状态保存机制　　22
3.2 　Android的状态恢复机制　　29
3.2.1 　onRestoreInstanceState的调用　　29
3.2.2 　onRestoreInstanceState的调用条件　　32
3.2.3 　Activity中的状态恢复　　34
3.2.4 　Launcher中的状态恢复　　35
第4章　初始化桌面　　36
4.1 　初始化Launcher运行环境　　37
4.2 　为生成Launcher的动态网格进行必要的准备　　37
4.3 　生成动态网格　　39
4.4 　获取共享数据对象以及建立Launcher与LauncherModel的联系　　39
4.5 　根据动态网格刷新图标缓冲区　　40
4.6 　初始化拖曳控制器　　40
4.7 　获取应用程序运行状态　　41
4.8 　创建并启动Widget Host　　42
4.9 　检查配置是否有更新　　42
4.10 　装载Launcher布局以及实例化相关控件　　46
4.11 　根据动态网格的属性部署桌面　　48
4.12 　Launcher的状态恢复　　49
4.13 　监听Widget配置变化　　51
4.14 　加载桌面数据　　52
4.15 　更新必要的图标　　52
4.16 　解锁Launcher的方向设定　　53
4.17 　首次使用时显示桌面的帮助界面　　54
第5章　Home键：Launcher的另一种启动方式　　56
5.1 　Launcher的重要配置　　56
5.2 　Home键的框架行为　　57
5.2.1 　导航栏的实现　　57
5.2.2 　窗口管理器的处理　　58
5.2.3 　Launcher的相关处理　　59
第6章　Launcher的显示　　63
6.1 　关于Activity的onResume　　63
6.2 　Activity类的onResume方法实现　　63
6.3 　Launcher的onResume实现　　64
第7章　Launcher的状态　　68
7.1 　Activity的暂停状态　　68
7.1.1 　Activity暂停状态发生的场景　　68
7.1.2 　Activity中暂停的实现　　73
7.1.3 　Launcher的暂停过程　　74
7.2 　Activity的启动状态　　75
7.2.1 　Activity中onStart的实现　　75
7.2.2 　Launcher的onStart实现　　76
7.3 　Activity的停止状态　　76
7.3.1 　Activity中onStop的实现　　77
7.3.2 　Launcher的onStop实现　　77
7.4 　Launcher的销毁状态　　78
7.4.1 　销毁状态简介　　78
7.4.2 　什么时候会被销毁　　78
7.4.3 　销毁状态的处理　　81
第8章　Launcher的启动应用及等待结果　　85
8.1 　在Launcher中启动应用　　85
8.1.1 　安全启动应用程序的通用方法　　86
8.1.2 　真正启动应用程序的方法　　86
8.2 　启动应用并等待结果　　89
8.3 　Launcher的应用场景　　90
8.3.1 　场景1：往桌面上添加桌面小部件时　　90
8.3.2 　场景2：往桌面上添加应用程序的快捷方式时　　92
8.3.3 　场景3：用户启动选择壁纸时　　93
8.3.4 　场景4：创建桌面小部件时　　93
8.3.5 　场景5：桌面小部件的视图未能完全恢复时　　95
8.4 　应用程序处理端如何设置必要的返回　　96
8.5 　处理返回结果　　97
第9章　Launcher的返回键处理　　99
9.1 　Activity的onKeyDown方法的实现　　99
9.2 　Activity的onKeyUp方法的实现　　100
9.3 　Activity的onBackPressed方法的实现　　101
9.4 　Launcher的onBackPressed方法　　101
第10章　Launcher的按键处理　　104
10.1 　onKeyDown和onKeyUp方法　　104
10.1.1 　Activity中的onKeyDown方法　　104
10.1.2 　Launcher的onKeyDown方法　　110
10.2 　自主分发按键事件　　112
10.2.1 　Activity的dispatchKey-Event实现　　112
10.2.2 　Launcher中的按键分发　　113
第11章　Launcher的窗口周期　　115
11.1 　应用程序中Activity的创建　　115
11.2 　应用程序窗口的创建　　119
11.3 　窗口中设置UI　　121
11.3.1 　在窗口中设置布局　　121
11.3.2 　安装窗口容器　　123
11.3.3 　初始化应用程序的ActionBar　　124
11.4 　Launcher中实现的窗口状态变化接口　　124
11.4.1 　应用程序添加到窗口中　　124
11.4.2 　应用程序从窗口中拆离　　128
11.4.3 　窗口焦点变化　　131
第12章　Launcher实现的框架接口　　132
12.1 　控件点击事件监听接口　　132
12.1.1 　设置点击监听器方法　　132
12.1.2 　点击事件的处理机制　　133
12.1.3 　Launcher的点击事件处理　　134
12.2 　控件长按事件监听接口　　142
12.2.1 　什么条件下被认为是长按事件　　142
12.2.2 　Launcher的控件长按事件处理　　146
12.3 　Launcher的Touch事件　　148
12.3.1 　创建应用程序窗口与底层输入设备之间的关联　　148
12.3.2 　ViewRootImpl中Window- InputEventReceiver类的实例化　　152
12.3.3 　基于窗口管理服务的消息分发　　153
12.3.4 　Touch事件的应用程序之旅　　156
第13章　Launcher控制接口的实现　　162
13.1 　LauncherModel的Callbacks接口的定义　　162
13.2 　指示Launcher显示时需要重新加载数据　　164
13.3 　获取当前正在显示的桌面页索引　　164
13.4 　加载Workspace的预处理　　165
13.5 　批量添加快捷方式或者文件夹　　166
13.6 　绑定并且添加桌面页　　169
13.7 　绑定文件夹　　170
13.8 　指示加载过程完成　　170
13.9 　绑定桌面小部件　　172
13.10 　绑定应用程序菜单界面数据　　175
13.11 　批量添加应用程序一体化操作　　175
13.12 　更新应用程序　　177
13.13 　应用程序已经被恢复　　177
13.14 　更新应用程序状态　　178
13.15 　更新应用程序信息　　178
13.16 　应用程序被删除　　178
13.17 　更新应用程序菜单快捷方式与桌面小部件信息　　179
13.18 　更新搜索相关信息　　179
13.19 　是否在应用程序菜单按钮范围内　　180
13.20 　保存同步加载页面　　180
第14章　Launcher的内部工具　　181
14.1 　客户定制页面　　181
14.1.1 　组装定制化页面内容　　181
14.1.2 　定制化页面的变化信号处理　　182
14.1.3 　添加定制化页面接口　　182
14.1.4 　定制化页面的属性及控制　　184
14.1.5 　默认的定制化页面　　184
14.2 　Launcher3的搜索　　184
14.2.1 　发现搜索提供者　　185
14.2.2 　将搜索信息转变为可填充的视图　　185
14.3 　Launcher的一些工具　　187
14.3.1 　桌面组件的ID分配　　187
14.3.2 　生成应用程序快捷方式的方法　　188
14.3.3 　添加桌面组件　　189
14.4 　桌面和应用程序菜单之间的切换　　195
14.4.1 　桌面的显示　　195
14.4.2 　显示应用程序菜单界面　　196
14.4.3 　进入预览模式　　196
第三部分 　Lauhcher开发进阶
第15章　Launcher的数据库　　198
15.1 　关于ContentProvider　　198
15.2 　Launcher数据库组件的配置　　199
15.2.1 　Launcher数据库组件的访问权限定义及其使用方法　　199
15.2.2 　Launcher数据库组件的配置　　200
15.2.3 　读写权限的使用　　201
15.3 　Launcher的数据库详解　　201
15.3.1 　Launcher的数据库实现　　201
15.3.2 　Launcher的ContentProvider　　211
15.4 　Launcher数据库工具　　216
15.4.1 　Launcher数据库删除工具　　217
15.4.2 　Launcher数据库合并工具　　217
15.4.3 　必要时导入默认桌面配置　　222
15.4.4 　获取默认配置文件解析器实例　　224
15.4.5 　Launcher数据标志清理工具　　224
15.5 　Android数据库实战　　225
15.5.1 　关于数据的约定　　225
15.5.2 　定义并使用TulingDBDemo的读写权限　　225
15.5.3 　数据库框架搭建　　226
15.5.4 　数据库文件以及表的定义　　226
15.5.5 　定义访问数据库的访问接口　　228
15.5.6 　ContentProvider的实现　　229
15.5.7 　操作数据库　　232
第16章　Launcher的广播接收器　　234
16.1 　Launcher中的广播概述　　234
16.1.1 　壁纸变更广播接收器　　234
16.1.2 　桌面小部件容器的重置广播接收器　　235
16.1.3 　安装快捷方式的接口　　235
16.1.4 　卸载快捷方式的接口　　235
16.1.5 　管理应用程序的广播接收器　　236
16.1.6 　Launcher的中枢神经：LauncherModel　　236
16.2 　壁纸变更广播接收器　　237
16.3 　桌面小部件容器的重置广播接收器　　237
16.3.1 　概况　　237
16.3.2 　注意事项　　238
16.3.3 　容器重置处理的流程　　239
16.4 　快捷方式的安装接口　　242
16.4.1 　安装快捷方式接口的使用实例　　242
16.4.2 　添加快捷方式的入口实现　　243
16.4.3 　Launcher2与Launcher3的区别　　247
16.5 　快捷方式的卸载接口　　247
16.5.1 　卸载快捷方式接口的使用　　248
16.5.2 　卸载快捷方式入口实现　　248
16.6 　管理应用程序的广播接收器　　251
第17章　Launcher的数据中心：LauncherModel　　252
17.1 　LauncherModel的创建　　252
17.2 　LauncherModel的构造函数　　253
17.3 　与LauncherModel的沟通方式　　255
17.3.1 　LauncherModel操作的回调接口　　255
17.3.2 　广播接口　　257
17.3.3 　LauncherModel的应用程序级别接口　　258
17.4 　LauncherModel的加载任务LoaderTask　　267
17.4.1 　LoaderTask的定义、属性及构造　　268
17.4.2 　LoaderTask状态查询接口　　269
17.4.3 　指定页面加载接口　　270
17.4.4 　停止加载接口　　270
17.4.5 　获取Launcher的通知接口　　271
17.4.6 　LoaderTask的run接口实现　　272
17.4.7 　LoaderTask的桌面数据加载及绑定工具　　274
17.4.8 　加载过程工具　　287
17.5 　桌面空间的处理　　293
第18章　Launcher的壁纸配置　　295
18.1 　如何通过Launcher设置壁纸　　295
18.2 　Launcher3壁纸代码结构与使用简介　　296
18.3 　壁纸资源的来源　　298
18.3.1 　来源一：指定系统应用的某些资源　　299
18.3.2 　来源二：指定系统应用中所定制的路径下的图片资源　　300
18.3.3 　来源三：Launcher自带的壁纸资源　　301
18.3.4 　来源四：Android系统默认壁纸　　302
18.4 　Launcher3壁纸的内部分类　　305
18.4.1 　功能性选项：PickImage-Info　　305
18.4.2 　URI类型壁纸项：URIWallpaperInfo　　307
18.4.3 　文件类型的壁纸项：FileWallpaperInfo　　311
18.4.4 　资源类型的壁纸项：ResourceWallpaperInfo　　312
18.4.5 　默认壁纸项：DefaultWallpaperInfo　　313
18.5 　关于壁纸的工具　　315
18.5.1 　设置系统壁纸的可见性　　315
18.5.2 　设置壁纸尺寸工具　　316
18.5.3 　设置壁纸的方法　　317
18.6 　利用Launcher设置壁纸　　318
第19章　Launcher的上下文　　319
19.1 　LauncherAppState的使用　　319
19.1.1 　LauncherAppState初始化的前提　　319
19.1.2 　LauncherAppState的初始化　　320
19.2 　Launcher应用程序被终止的必要清理　　321
19.3 　监听数据库变化的观察者　　321
19.4 　获取屏幕方向的工具　　322
19.5 　关于弱引用　　322
19.6 　其他接口的应用　　323
第20章　Launcher中的备份与还原　　325
20.1 　应用程序备份代理器的配置　　325
20.2 　备份与管理服务的开启与关闭　　326
20.3 　实现数据备份与还原代理的帮助类　　327
20.3.1 　LauncherBackupHelper的performBackup方法　　327
20.3.2 　initializeIconCache方法　　330
20.3.3 　LauncherBackupHelper的restoreEntity方法　　336
20.4 　Launcher数据备份与还原的代理　　338
20.4.1 　创建数据备份与还原代理　　338
20.4.2 　应用程序的数据还原　　339
第21章　基于Google的Protocol Buffer协议开发　　341
21.1 　实际应用场景概述　　341
21.1.1 　备份流程　　341
21.1.2 　还原流程　　341
21.2 　Protocol Buffer简介　　342
21.3 　PB消息的定义　　344
21.3.1 　指定字段的类型　　344
21.3.2 　为消息字段指定TAG　　345
21.3.3 　为消息字段指定规则　　345
21.3.4 　增加消息定义　　346
21.3.5 　为消息添加注释　　347
21.3.6 　编译.proto文件概况　　347
21.4 　简单PB消息的配置　　348
21.4.1 　PB的基础数据类型　　348
21.4.2 　基础数据类型的默认配置　　349
21.4.3 　PB的枚举类型　　350
21.5 　复合PB消息的定义　　351
21.5.1 　在消息中使用其他消息　　351
21.5.2 　PB中的内嵌消息　　353
21.6 　PB消息的高级用法　　354
21.6.1 　升级一则消息　　354
21.6.2 　PB的map类型　　355
21.6.3 　PB的包　　355
21.6.4 　PB的其他选项　　356
21.7 　生成代码　　358
21.7.1 　创建ProtocolBuffDemo工程　　358
21.7.2 　编写第一个proto文件　　360
21.7.3 　使用protoc工具编译TulingMessage.proto　　361
21.7.4 　使用生成TulingMessages类　　362
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android Launcher应用开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android开发实战
目    录
第1篇  新 手 入 门
第1章  走进Android	2
视频讲解：78分钟
1.1  认识Android	3
1.1.1  Android的体系结构	3
1.1.2  Android的特性	5
1.1.3  Android的版本	5
1.1.4  Android市场	6
1.2  搭建Android的开发环境	6
1.2.1  系统需求	6
1.2.2  JDK的下载	7
1.2.3  JDK的安装与配置	8
1.2.4  Android SDK的下载与安装	10
1.2.5  Eclipse的下载与安装	15
1.2.6  Eclipse的汉化	17
1.2.7  ADT插件的下载与安装	18
1.3  开发第一个Android程序	20
1.3.1  了解Android应用程序的开发流程	20
1.3.2  创建Android应用程序	21
1.3.3  创建AVD模拟器	23
1.3.4  运行Android程序	25
1.3.5  调试Android应用程序	25
1.4  实战	26
1.4.1  使用ADT Bundle搭建开发环境	26
1.4.2  创建平板电脑式的模拟器	27
1.5  本章小结	28
1.6  学习成果检验	28
第2章  Android模拟器	29
视频讲解：27分钟
2.1  模拟器概述	30
2.1.1  Android虚拟设备和模拟器	30
2.1.2  模拟器限制	31
2.1.3  控制模拟器的按键	31
2.2  创建和删除Android模拟器	32
2.2.1  创建并启动Android模拟器	32
2.2.2  删除Android模拟器	33
2.3  Android模拟器基本设置	33
2.3.1  设置语言	33
2.3.2  设置输入法	35
2.3.3  设置日期时间	35
2.4  在Android模拟器上安装和卸载程序	37
2.4.1  使用adb命令安装和卸载Android程序	37
2.4.2  通过DDMS管理器安装Android程序	39
2.4.3  在Android模拟器中卸载程序	40
2.5  实战	41
2.5.1  设置模拟器桌面背景	41
2.5.2  使用模拟器拨打电话	42
2.5.3  设置使用24小时格式的时间	42
2.6  本章小结	43
2.7  学习成果检验	43
第3章  用户界面设计	44
视频讲解：136分钟
3.1  控制UI界面	45
3.1.1  使用XML布局文件控制UI界面	45
3.1.2  在Java代码中控制UI界面	47
3.1.3  使用XML和Java代码混合控制UI
界面	49
3.1.4  开发自定义的View	50
3.2  布局管理器	52
3.2.1  线性布局管理器	53
3.2.2  表格布局管理器	55
3.2.3  帧布局管理器	57
3.2.4  相对布局管理器	59
3.3  实战	62
3.3.1  简易的图片浏览器	62
3.3.2  应用相对布局显示软件更新提示	63
3.3.3  使用表格布局与线性布局实现分类
工具栏	64
3.3.4  开发自定义的View在窗体上绘制
一只地鼠	68
3.4  本章小结	69
3.5  学习成果检验	69
第4章  Android常用组件	70
视频讲解：125分钟
4.1  文本类组件	71
4.1.1  文本框	71
4.1.2  编辑框	73
4.1.3  自动完成文本框	76
4.2  按钮类组件	78
4.2.1  普通按钮	78
4.2.2  图片按钮	80
4.2.3  单选按钮	82
4.2.4  复选框	85
4.3  日期、时间类组件	87
4.3.1  日期、时间选择器	87
4.3.2  计时器	89
4.4  进度条类组件	90
4.4.1  进度条	91
4.4.2  拖动条	93
4.4.3  星级评分条	95
4.5  列表类组件	97
4.5.1  列表选择框	97
4.5.2  列表视图	99

4.6  图像类组件	103
4.6.1  图像视图	103
4.6.2  网格视图	105
4.6.3  图像切换器	108
4.6.4  画廊视图	111
4.7  其他组件	114
4.7.1  滚动视图	114
4.7.2  选项卡	116
4.8  实战	118
4.8.1  实现我同意游戏条款	118
4.8.2  显示在标题上的进度条	121
4.8.3  实现带图标的ListView列表	123
4.8.4  实现仿Windows 7图片预览窗格效果	124
4.9  本章小结	127
4.10  学习成果检验	127
第5章  综合实验（一）——猜猜鸡蛋放在
哪只鞋子里	128
视频讲解：12分钟
5.1  概述	129
5.1.1  功能描述	129
5.1.2  系统流程	129
5.1.3  主界面预览	129
5.2  关键技术	130
5.3  实现过程	130
5.3.1  搭建开发环境	130
5.3.2  准备资源	131
5.3.3  布局页面	132
5.3.4  实现游戏规则代码	133
5.4  运行项目	135
5.5  本章小结	136
第2篇  进 阶 提 高
第6章  基本程序单元Activity	138
视频讲解：124分钟
6.1  Activity概述	139
6.1.1  Activity的4种状态	139
6.1.2  Activity的生命周期	140
6.1.3  Activity的属性	141
6.2  创建、启动和关闭Activity	142
6.2.1  创建Activity	142
6.2.2  配置Activity	144
6.2.3  启动和关闭Activity	145
6.3  多个Activity的使用	146
6.3.1  使用Bundle在Activity之间交换数据	146
6.3.2  调用另一个Activity并返回结果	154
6.4  使用Fragment	156
6.4.1  创建Fragment	156
6.4.2  在Activity中添加Fragment	156
6.5  实战	162
6.5.1  应用对话框主题的关于Activity	162
6.5.2  根据输入的生日判断星座	163
6.5.3  带选择头像的用户注册界面	167
6.5.4  仿QQ客户端登录界面	170
6.5.5  带查看原图功能的图像浏览器	173
6.6  本章小结	176
6.7  学习成果检验	176
第7章  Intent和BroadcastReceiver的
应用	177
视频讲解：55分钟
7.1  Intent对象简介	178
7.1.1  Intent对象概述	178
7.1.2  3种不同的Intent传输机制	178
7.2  Intent对象的组成	179
7.2.1  组件名称	179
7.2.2  动作	180
7.2.3  数据	182
7.2.4  种类	184
7.2.5  附加信息	186
7.2.6  标志	189
7.3  解析Intent对象	191
7.3.1  Intent过滤器	191
7.3.2  通用情况	193
7.3.3  使用Intent匹配	194
7.4  BroadcastReceiver使用	194
7.4.1  了解BroadcastReceiver	194
7.4.2  应用BroadcastReceiver	195
7.5  实战	197
7.5.1  使用Intent实现发送短信	197
7.5.2  使用包含预定义动作的隐式Intent	199
7.5.3  使用包含自定义动作的隐式Intent	201
7.5.4  使用BroadcastReceiver查看电池
剩余电量	204
7.6  本章小结	205
7.7  学习成果检验	205
第8章  使用资源	206
视频讲解：176分钟
8.1  字符串资源	207
8.1.1  定义字符串资源文件	207
8.1.2  使用字符串资源	207
8.2  颜色资源	209
8.2.1  颜色值的定义	209
8.2.2  定义颜色资源文件	209
8.2.3  使用颜色资源	210
8.3  尺寸资源	211
8.3.1  Android支持的尺寸单位	211
8.3.2  定义尺寸资源文件	212
8.3.3  使用尺寸资源	212
8.4  数组资源	215
8.4.1  定义数组资源文件	215
8.4.2  使用数组资源	216
8.5  Drawable资源	216
8.5.1  图片资源	217
8.5.2  StateListDrawable资源	219
8.6  使用布局资源	222
8.7  样式和主题资源	223
8.7.1  样式资源	223
8.7.2  主题资源	224
8.8  使用原始XML资源	227
8.9  使用菜单资源	228
8.9.1  定义菜单资源文件	228
8.9.2  使用菜单资源	230
8.10  Android程序国际化	234
8.11  实战	235
8.11.1  通过字符串资源显示游戏对白	235
8.11.2  使用数组资源和ListView显示
联系人列表	236
8.11.3  实现自定义复选框的样式	237
8.11.4  创建一组只能单选的选项菜单	238
8.11.5  实现国际化的上下文菜单	240
8.12  本章小结	242
8.13  学习成果检验	242
第9章  Android事件处理	243
视频讲解：36分钟
9.1  事件处理概述	244
9.2  处理键盘事件	244
9.3  处理触摸事件	246
9.4  手势的创建与识别	247
9.4.1  手势的创建	247
9.4.2  手势的导出	248
9.4.3  手势的识别	249
9.5  实战	250
9.5.1  提示音量增加事件	250
9.5.2  使用手势输入数字	251
9.5.3  查看手势对应的分值	252
9.6  本章小结	254
9.7  学习成果检验	254
第10章  对话框、通知与闹钟	255
视频讲解：50分钟
10.1  通过Toast显示消息提示框	256
10.2  使用AlertDialog实现对话框	257
10.3  使用Notification在状态栏上显示
通知	262
10.4  使用AlarmManager设置闹钟	264
10.4.1  AlarmManager简介	265
10.4.2  设置一个简单的闹钟	265
10.5  实战	268
10.5.1  弹出询问是否退出的对话框	268
10.5.2  弹出带图标的列表对话框	269
10.5.3  仿手机QQ登录状态显示功能	270
10.6  本章小结	273
10.7  学习成果检验	273
第11章  Action Bar	274
视频讲解：26分钟
11.1  Action Bar概述	275
11.2  Action Bar的使用	275
11.2.1  添加Action Bar	275
11.2.2  移除Action Bar	276
11.2.3  添加Action Item选项	277
11.2.4  Action Bar显示选项	279
11.2.5  Action Bar与Tab	281
11.2.6  添加 Action View	285
11.2.7  添加Action Provider	287

11.3  实战	289
11.3.1  禁止Action Bar的使用	289
11.3.2  显示自定义视图	290
11.3.3  重新设置icon图标	291
11.3.4  不同的选项卡显示不同时区的时间	292
11.4  本章小结	294
11.5  学习成果检验	294
第12章  Android程序的调试	295
视频讲解：48分钟
12.1  输出日志信息的几种方法	296
12.1.1  Log.d方法——输出故障日志	296
12.1.2  Log.e方法——输出错误日志	297
12.1.3  Log.i方法——输出程序日志	298
12.1.4  Log.v方法——输出冗余日志	299
12.1.5  Log.w方法——输出警告日志	300
12.2  Android程序调试	301
12.3  程序异常处理	302
12.3.1  Android程序出现异常怎么办	302
12.3.2  如何捕捉Android程序异常	303
12.3.3  抛出异常的两种方法	304
12.3.4  何时使用异常处理	306
12.4  实战	306
12.4.1  向LogCat视图中输出程序Info日志	306
12.4.2  使用throw关键字在方法中抛出异常	307
12.5  本章小结	308
12.6  学习成果检验	308
第13章  综合实验（二）——迷途奔跑的
野猪	309
视频讲解：10分钟
13.1  功能概述	310
13.2  关键技术	310
13.3  实现过程	310
13.3.1  搭建开发环境	311
13.3.2  准备资源	311
13.3.3  布局页面	311
13.3.4  实现代码	312
13.4  运行项目	314
13.5  本章小结	314

第3篇  中 级 开 发
第14章  数据存储技术	316
视频讲解：43分钟
14.1  使用SharedPreferences对象存储
数据	317
14.2  使用Files对象存储数据	324
14.2.1  openFileOutput()和openFileInput()
方法	324
14.2.2  对Android模拟器中的SD卡
进行操作	327
14.3  Android数据库编程——SQLite	328
14.4  实战	332
14.4.1  遍历Android模拟器的SD卡	332
14.4.2  将图片复制到SD卡上	333
14.4.3  判断获得的SD卡内容是否是文件夹	335
14.4.4  在SQLite数据库中批量添加数据	336
14.4.5  使用列表显示数据表中全部数据	338
14.5  本章小结	339
14.6  学习成果检验	339
第15章  Content Provider实现数据共享	340
视频讲解：42分钟
15.1  Content Provider概述	341
15.1.1  数据模型	341
15.1.2  URI的用法	341
15.2  预定义Content Provider	342
15.2.1  查询数据	343
15.2.2  增加记录	343
15.2.3  增加新值	344
15.2.4  批量更新记录	344
15.2.5  删除记录	344
15.3  自定义Content Provider	344
15.3.1  继承ContentProvider类	345
15.3.2  声明Content Provider	346
15.4  实战	347
15.4.1  系统内置联系人的使用	347
15.4.2  查询联系人ID和姓名	347
15.4.3  查询联系人姓名和电话	348
15.4.4  自动补全联系人姓名	350
15.5  本章小结	352
15.6  学习成果检验	352
第16章  线程与消息处理	353
视频讲解：50分钟
16.1  多线程的常见操作	354
16.1.1  创建线程	354
16.1.2  开启线程	356
16.1.3  线程的休眠	356
16.1.4  中断线程	357
16.2  Handler消息传递机制	357
16.2.1  循环者Looper类	358
16.2.2  消息处理类Handler	359
16.2.3  消息类Message	360
16.3  实战	361
16.3.1  开启一个新线程播放背景音乐	361
16.3.2  开启新线程获取网络图片
并显示到ImageView中	362
16.3.3  开启新线程实现电子广告牌	364
16.3.4  多彩的霓虹灯	366
16.3.5  在屏幕上来回移动的气球	368
16.4  本章小结	370
16.5  学习成果检验	370
第17章  Service应用	371
视频讲解：48分钟
17.1  Service概述	372
17.1.1  Service的分类	372
17.1.2  Service类中重要方法	372
17.1.3  Service的声明	373
17.2  创建Started Service	374
17.2.1  继承IntentService类	375
17.2.2  继承Service类	376
17.2.3  启动服务	377
17.2.4  停止服务	378
17.3  创建Bound Service	378
17.3.1  继承Binder类	379
17.3.2  使用Messenger类	381
17.3.3  绑定到服务	383
17.4  管理Service的生命周期	383
17.5  实战	384
17.5.1  继承IntentService输出当前时间	384
17.5.2  继承Service输出当前时间	385
17.5.3  继承Binder类绑定服务显示时间	387
17.5.4  使用Messenger类绑定服务显示时间	390
17.5.5  视力保护程序	392
17.5.6  查看当前运行服务信息	394
17.6  本章小结	396
17.7  学习成果检验	396

第18章  综合实验（三）——简易
打地鼠游戏	397
视频讲解：15分钟
18.1  功能概述	398
18.2  关键技术	398
18.3  实现过程	399
18.3.1  搭建开发环境	399
18.3.2  准备资源	399
18.3.3  布局页面	400
18.3.4  实现代码	400
18.4  运行项目	401
18.5  本章小结	402
第4篇  高 级 应 用
第19章  图像与动画处理技术	404
视频讲解：176分钟
19.1  常用绘图类	405
19.1.1  Paint类	405
19.1.2  Canvas类	406
19.1.3  Bitmap类	408
19.1.4  BitmapFactory类	408
19.2  绘制2D图像	409
19.2.1  绘制几何图形	409
19.2.2  绘制文本	411
19.2.3  绘制路径	413
19.2.4  绘制图片	415
19.3  为图形添加特效	417
19.3.1  旋转图像	417
19.3.2  缩放图像	419
19.3.3  倾斜图像	420
19.3.4  平移图像	421
19.3.5  使用BitmapShader渲染图像	422
19.4  Android中的动画	423
19.4.1  实现逐帧动画	424
19.4.2  实现补间动画	424
19.4.3  Android动画的应用	428
19.5  实战	431
19.5.1  绘制Android的机器人	431
19.5.2  实现带描边的圆角图片	432
19.5.3  实现放大镜效果	432
19.5.4  在GridView中显示SD卡上的
全部图片	434
19.5.5  忐忑的精灵	436
19.6  本章小结	438
19.7  学习成果检验	438
第20章  利用OpenGL实现3D图形	439
视频讲解：56分钟
20.1  OpenGL简介	440
20.2  绘制3D图形	440
20.2.1  构建3D开发的基本框架	440
20.2.2  绘制一个模型	442
20.3  添加效果	446
20.3.1  应用纹理贴图	447
20.3.2  旋转	448
20.3.3  光照效果	449
20.3.4  透明效果	450
20.4  实战	451
20.4.1  绘制一个三棱锥	451
20.4.2  为三棱锥添加旋转效果	453
20.4.3  绘制一个不断旋转的金字塔	455
20.4.4  使用Android机器人对立方体进行
纹理贴图	457
20.5  本章小结	458
20.6  学习成果检验	458
第21章  多媒体技术	459
视频讲解：96分钟
21.1  播放音频与视频	460
21.1.1  使用MediaPlayer播放音频	460
21.1.2  使用SoundPool播放音频	464
21.1.3  使用VideoView播放视频	467
21.1.4  使用MediaPlayer和SurfaceView
播放视频	468
21.2  控制相机拍照	472
21.3  实战	476
21.3.1  播放SD卡上的全部音频文件	476
21.3.2  带音量控制的音乐播放器	480
21.3.3  为游戏界面添加背景音乐和按键音	482
21.3.4  制作开场动画	486
21.4  本章小结	487
21.5  学习成果检验	488
第22章  定位服务	489
视频讲解：20分钟
22.1  定位基础	490
22.1.1  获得位置源	490
22.1.2  查看位置源属性	491
22.1.3  监听位置变化事件	493
22.2  谷歌地图服务	496
22.2.1  安装谷歌API插件	496
22.2.2  使用谷歌API的Android项目	497
22.2.3  使用谷歌API的Android虚拟设备	497
22.2.4  获得地图API密钥	497
22.3  实战	501
22.3.1  显示海拔信息	501

22.3.2  显示方向信息	502
22.3.3  在地图上标记天府广场的位置	502
22.4  本章小结	505
22.5  学习成果检验	505
第23章  网络通信技术	506
视频讲解：96分钟
23.1  通过HTTP访问网络	507
23.1.1  使用HttpURLConnection访问网络	507
23.1.2  使用HttpClient访问网络	514
23.2  使用WebView显示网页	519
23.2.1  使用WebView组件浏览网页	520
23.2.2  使用WebView加载HTML代码	521
23.2.3  让WebView支持JavaScript	522
23.3  实战	524
23.3.1  从指定网站下载文件	524
23.3.2  访问需要登录后才能访问的页面	526
23.3.3  打造功能实用的网页浏览器	531
23.3.4  获取天气预报	534
23.4  本章小结	536
23.5  学习成果检验	536
第24章  综合实验（四）——简易涂
鸦板	537
视频讲解：12分钟
24.1  功能概述	538
24.2  关键技术	538
24.3  实现过程	539
24.3.1  搭建开发环境	539
24.3.2  布局页面	539
24.3.3  实现代码	540
24.4  运行项目	544
24.5  本章小结	544

第5篇  项 目 实 战
第25章  基于Android的数独游戏	546
视频讲解：27分钟
25.1  需求分析	547
25.2  程序开发及运行环境	547
25.3  程序文件夹组织结构	547
25.4  公共资源文件	548
25.4.1  字符串资源文件	548
25.4.2  数组资源文件	548
25.4.3  颜色资源文件	549
25.5  游戏主窗体设计	549
25.5.1  设计系统主窗体布局文件	549
25.5.2  为界面中的按钮添加监听事件	551
25.5.3  绘制数独游戏界面	553
25.5.4  数独游戏的实现算法	557
25.6  虚拟键盘模块设计	562
25.6.1  设计模拟键盘布局文件	562
25.6.2  在虚拟键盘中显示可以输入的数字	563
25.7  游戏设置模块设计	565
25.7.1  设计游戏设置布局文件	565
25.7.2  设置是否播放背景音乐和显示提示	566
25.7.3  控制背景音乐的播放与停止	566
25.8  关于模块设计	567
25.8.1  设计关于窗体布局文件	567
25.8.2  显示关于信息	567
25.9  将程序安装到Android手机上	568
25.10  本章小结	568
第26章  基于Android的家庭理财通	569
视频讲解：48分钟
26.1  需求分析	570
26.2  系统设计	570
26.2.1  系统目标	570
26.2.2  系统功能结构	570
26.2.3  系统业务流程图	570
26.2.4  系统编码规范	571
26.3  系统开发及运行环境	572
26.4  数据库与数据表设计	573
26.4.1  数据库分析	573
26.4.2  创建数据库	573
26.4.3  创建数据表	574
26.5  系统文件夹组织结构	575
26.6  公共类设计	575
26.6.1  数据模型公共类	575
26.6.2  Dao公共类	577
26.7  登录模块设计	582
26.7.1  设计登录布局文件	582
26.7.2  登录功能的实现	583
26.7.3  退出登录窗口	584
26.8  系统主窗体设计	584
26.8.1  设计系统主窗体布局文件	584
26.8.2  显示各功能窗口	585
26.8.3  定义文本及图片组件	587
26.8.4  定义功能图标及说明文字	587
26.8.5  设置功能图标及说明文字	588
26.9  收入管理模块设计	589
26.9.1  设计新增收入布局文件	589
26.9.2  设置收入时间	592
26.9.3  添加收入信息	594
26.9.4  重置新增收入窗口中的各个控件	594
26.9.5  设计收入信息浏览布局文件	595
26.9.6  显示所有的收入信息	596
26.9.7  单击指定项时打开详细信息	597
26.9.8  设计修改/删除收入布局文件	597
26.9.9  显示指定编号的收入信息	601
26.9.10  修改收入信息	602
26.9.11  删除收入信息	603
26.10  便签管理模块设计	603
26.10.1  设计新增便签布局文件	603
26.10.2  添加便签信息	605
26.10.3  清空“便签”文本框	606
26.10.4  设计便签信息浏览布局文件	606
26.10.5  显示所有的便签信息	608
26.10.6  单击指定项时打开详细信息	609
26.10.7  设计修改/删除便签布局文件	610
26.10.8  显示指定编号的便签信息	612
26.10.9  修改便签信息	612
26.10.10  删除便签信息	612
26.11  系统设置模块设计	613
26.11.1  设计系统设置布局文件	613
26.11.2  设置登录密码	614
26.11.3  重置“密码”文本框	615
26.12  将程序安装到Android手机上	615
26.13  开发常见问题与解决	616
26.13.1  程序在装有Android系统的手机上
无法运行	616
26.13.2  无法将最新修改在Android模拟器中
体现	616
26.13.3  退出系统后还能使用记录的密码
登录	616
26.14  本章小结	616


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android开发实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android驱动开发权威指南
前言
第一篇 Android的前世今生——Android概述篇
第1章 Android的前世今生2
1.1 Android的起源2
1.2 开放手机联盟2
1.3 开源与相关协议3
1.4 系统的升级与发展3
第2章 Android体系结构4
2.1 四层空间基本结构4
2.1.1 Android系统底层开发6
2.1.2 应用程序开发7
2.2 Android代码目录结构7
2.3 Android开发环境搭建8
第二篇 勿于浮砂筑高台——Linux驱动基础篇
第3章 Linux内核综述14
3.1 OS基本概念14
3.1.1 多用户系统15
3.1.2 用户和组15
3.1.3 进程16
3.1.4 Linux单核架构16
3.2 Linux内核综述18
3.2.1 进程/内核模型综述18
3.2.2 内存管理综述26
3.2.3 文件系统综述29
3.2.4 设备驱动简述34
第4章 Linux内核编程与内核模块35
4.1 Linux内核源代码目录结构35
4.2 Linux内核的编译与启动36
4.3 Linux内核的C编程37
4.4 Linux内核模块基础与骨架43
4.5 Linux模块的加载与卸载46
4.6 Linux模块的参数与导出符号46
4.7 Linux模块的使用计数48
第5章 Linux文件系统50
5.1 Linux文件系统概述50
5.1.1 Linux文件系统的目录结构50
5.1.2 设备驱动与Linux文件系统的关联51
5.2 Linux设备文件系统55
5.2.1 devfs设备文件系统55
5.2.2 udev设备文件系统56
5.2.3 sysfs文件系统与Linux设备57
5.2.4 udev的组成67
5.2.5 udev规则文件68
第6章 Linux字符设备驱动70
6.1 Linux字符设备驱动结构70
6.1.1 cdev结构体70
6.1.2 分配和释放设备号71
6.1.3 file_operations结构体72
6.1.4 Linux字符设备驱动的组成74
6.2 一个字符设备驱动例子——virtualchar77
6.2.1 头文件、宏及设备结构体77
6.2.2 加载与卸载设备驱动78
6.2.3 驱动函数实现79
6.2.4 驱动设备私有数据83
6.3 对virtualchar设备的访问90
第7章 Linux设备驱动中的内存与I/O访问92
7.1 CPU与内存和I/O之间的故事92
7.1.1内存空间与I/O空间92
7.1.2 内存管理单元MMU93
7.2 Linux内存管理97
7.3 Linux内存访问99
7.4 LinuxI/O访问102
7.4.1 访问I/O102
7.4.2 申请与释放I/O资源105
7.4.3 I/O访问流程107
7.4.4 设备地址与用户空间的映射107
7.5 DMA114
7.5.1 DMA与Cache的一致性114
7.5.2 Linux下的DMA编程114
第8章 Linux设备驱动中的中断125
8.1 Linux中断及中断处理架构125
8.2 Linux中断编程126
8.2.1 申请和释放中断126
8.2.2 使能与屏蔽中断127
8.2.3 底半部机制127
8.2.4 中断共享130
8.3 Linux定时器132
8.4 Linux延时处理134
8.4.1 短延时135
8.4.2 长延时135
8.4.3 睡眠延时136
第9章 Linux设备驱动中的并发138
9.1 Linux中的并发与竞争138
9.2 Linux中常用的同步访问技术139
9.2.1 中断屏蔽139
9.2.2 原子操作140
9.2.3 自旋锁142
9.2.4 信号量147
9.2.5 互斥灯152
9.3 增加并发控制的virtualchar驱动153
第10章 Linux设备的阻塞式与非阻塞式访问157
10.1 阻塞式与非阻塞式访问157
10.1.1 等待队列158
10.1.2 支持阻塞操作的virtualfifo设备驱动162
10.2 Linux的轮询访问167
10.2.1 应用程序中的轮询编程167
10.2.2 设备驱动中的轮询编程168
10.2.3 支持轮询操作的virtualfifo驱动169
第11章 Linux设备驱动中的异步访问171
11.1 Linux2.6中的异步访问171
11.1.1 异步访问概念与GNUC库函数171
11.1.2 使用信号作为异步访问的通知175
11.1.3 使用回调函数作为异步访问的通知177
11.1.4 异步访问与设备驱动178
11.2 异步Fifo驱动例子180
11.2.1 在virtualfifo驱动中增加异步通知180
11.2.2 在用户空间验证virtualfifo的异步通知182
第12章 Linux块设备驱动184
12.1 块设备的I/O操作特点184
12.2 Linux块设备驱动结构184
12.2.1 block_device_operations结构体184
12.2.2 gendisk结构体186
12.2.3 request与bio结构体188
12.2.4 块设备驱动注册与注销197
12.3 Linux块设备驱动的模块加载与卸载198
12.4 块设备的打开/释放/IOCTL200
第13章 Linux网络设备驱动202
13.1 Linux网络设备驱动体系结构202
13.2 Linux网络设备驱动结构203
13.3 Linux网络设备驱动I/O实现204
13.3.1 网络设备初始化204
13.3.2 网络数据包的收发205
第三篇 实践出真知——Android驱动实践篇
第14章 AndroidHAL层的设计208
14.1 AndroidHAL概述208
14.2 为Android开发虚拟驱动virtualio209
14.3 Android集成C程序访问virtualio220
14.4 Android通过HAL访问virtualio222
14.4.1 virtualioHAL模块实现222
14.4.2 实现访问virtualioHAL模块JNI226
14.4.3 在Framework层增加virtualio服务229
第15章 Framebuffer子系统231
15.1 LinuxFramebuffer一般子系统231
15.1.1 Framebuffer数据结构231
15.1.2 Framebuffer驱动237
15.2 AndroidFramebuffer子系统实践238
15.2.1 硬件基础238
15.2.2 CPU侧显示驱动模块240
15.2.3 LCM驱动模块242
15.3 Android系统对Framebuffer的使用247
第16章 Input子系统249
16.1 LinuxInput一般子系统249
16.1.1 Input数据结构250
16.1.2 Input内核模块252
16.2 AndroidInput子系统实践257
16.2.1 硬件基础258
16.2.2 Input驱动模块258
16.3 Android系统对Input的使用263
第17章 V4L2子系统266
17.1 LinuxV4L2一般子系统266
17.1.1 V4L2数据结构266
17.1.2 V4L2接口268
17.1.3 V4L2虚拟驱动vivi273
17.2 AndroidV4L2实践279
17.2.1 硬件基础280
17.2.2 CPU侧CCIC驱动模块281
17.2.3 OV5642模组驱动模块283
17.3 Android系统对V4L2的使用286
第18章 BinderIPC通信子系统288
18.1 Binder驱动概述288
18.2 Binder通信模型288
18.3 Binder驱动291
18.3.1 Binder相关的结构体292
18.3.2 AndroidBinder子系统的架构设计292
18.4 Binder的工作流程293
第19章 USB子系统295
19.1 USB协议基础知识295
19.1.1 USB物理连接295
19.1.2 USB通信协议297
19.2 USB子系统底层299
19.2.1 USBCore299
19.2.2 LinuxUSBgadget三层架构303
19.3 AndroidUSB子系统实践305
19.3.1 AndroidIPC通信补充305
19.3.2 AndroidUSBMassStorage流程分析309
第20章 Bootloader引导子系统312
20.1 Bootloader流程分析312
20.1.1 Bootloader概述312
20.1.2 U—Boot启动流程分析314
20.2 Bootloader修改指南317
20.2.1 开机第一帧图的修改317
20.2.2 开机模式的定制318
参考文献321
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android驱动开发权威指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>乐享Arduino+Android+PC创意制作
第1部分 准备工作
第1章 入门指南
1．1 “家庭自动化”概述？
1．2 商业化解决方案
1．3 DIY（自己动手）解决方案
1．4 投资的合理性
1．5 设置工作台
1．6 草拟创意
1．7 编写、布线和测试
1．8 用文件记录工作
第2章 要求
2．1 硬件
2．2 软件
2．3 注意安全，玩得开心
第2部分 项目
第3章 水位通知器
3．1 所需物品
3．2 构建解决方案
3．3 布线
3．4 用品草拟
3．5 编写Web邮件程序
3．6 添加以太网盾
3．7 整体组装测试
3．8 下一步规划
第4章 电动看门狗
4．1 所需物品
4．2 方案构建
4．3 组装“看门狗”
4．4 训练“看门狗”
4．5 测试“看门狗”
4．6 释放“看门狗”
4．7 下一步的规划
第5章 发信息喂鸟器
5．1 所需物品
5．2 构建解决方案
5．3 传感器
5．4 鸟食传感器
5．5 无线化
5．6 用PyIhon语言发信息
5．7 整体组装
5．8 下一步规划
第6章 包裹递送探测器
6．1 所需物品
6．2 构建解决方案
6．3 硬件组装
6．4 编写代码
6．5 包裹递送代码
6．6 测试递送程序
6．7 递送处理程序
6．8 创建递送数据库
6．9 安装软件包附属套件
6．10 编写脚本
6．11 测试递送处理程序
6．12 创建包裹递送探测器
6．13 下一步规划
第7章 网络驱动照明开关
7．1 所需物品
7．2 构建解决方案
7．3 绑定
7．4 编写网络客户端代码
7．5 测试网络客户端
7．6 编写安卓客户端代码
7．7 测试安卓客户端
7．8 下一步规划
第8章 自动化窗帘
8．1 所需物品
8．2 构建解决方案
8．3 控制步进电机
8．4 步进电机编程
8．5 添加传感器
8．6 编写程序
8．7 安装硬件
8．8 下一步规划
第9章 安卓操作系统门锁
9．1 所需物品
9．2 构建解决方案
9．3 控制安卓系统门锁
9．4 编写安卓服务器
9．5 编写安卓客户端
9．6 测试和安装
9．7 下一步规划
第10章 让你的家发出声音
10．1 所需物品
10．2 扬声器设置
10．3 为Lion配置声音
10．4 无线麦克风校准
10．5 对具有对话功能的Lion进行编程”
10．6 与你的家对话
10．7 下一步规划
第3部分 未来
第11章 关于未来的设计
11．1 近期的生活
11．2 长远发展
11．3 未来的智能家居
第12章 更多项目创意
12．1 杂物探测器
12．2 电量使用监控器
12．3 电动稻草人
12．4 远程遥控娱乐系统
12．5 睡眠定时器
12．6 由湿度传感器驱动的自动喷水灭火系统
12．7 网络化烟雾探测器
12．8 车库开门器
12．9智能暖通空调控制器
12．1 0智能邮箱
12．1 1智能照明设备
12．1 2太阳能及风能监控器
第4部分 附录
附录1 安装Arduin0程序库
附录2 参考书目
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>乐享Arduino+Android+PC创意制作
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iP ad / Android 互動電子雜誌超簡單輕鬆做
目錄：
第一部分：數位出版與電子雜誌
第二部分：版面設計與版型分析
第三部分：製作電子雜誌的必備知識與互動功能介紹
第四部分：製作素材小工具
第五部分：完整範例實作
第六部分：Adobe Digital Publishing Suite 出版流程與方式
第七部分：Apple 開發人員申請與建立憑證流程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iP ad / Android 互動電子雜誌超簡單輕鬆做
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>仿人机器人原理与实战
译者序
前言
第1章 反射弧1
1.1 反射弧生物学基础1
1.2 反射弧与仿人机器人设计6
1.3 反射弧实验入门7
1.4 反射弧实验进阶12
1.5 反射弧“小魔怪”31
1.6 反射弧搜索关键词32
第2章 行为链33
2.1 行为链生物学基础33
2.2 行为链与仿人机器人设计36
2.3 行为链实验入门37
2.4 行为链实验进阶46
2.5 行为链“小魔怪”53
2.6 行为链搜索关键词54
第3章 动态平衡55
3.1 动态平衡生物学基础55
3.2 动态平衡与仿人机器人设计58
3.3 热平衡模拟器65
3.4 热平衡实验进阶72
3.5 附加项目：电加热板的PID控制77
3.6 热平衡“小魔怪”79
3.7 动态平衡搜索关键词80
第4章 光与视觉81
4.1 生物学基础与瞳孔光反射81
4.2 光反射实验入门82
4.3 创建动态的眼睛86
4.4 一双活生生的眼睛89
4.5 对光有反应的生动的眼睛91
4.6 项目：Mark54瞳孔检查模拟器92
4.7 光线跟踪与目标检测95
4.8 光线跟踪检查95
4.9 小结99
第5章 耳朵102
5.1 耳朵生物学基础102
5.2 耳朵与仿人机器人设计107
5.3 声音定位实验入门107
5.4 声音定位实验进阶115
5.5 声音定位“小魔怪”149
5.6 声音定位搜索关键词149
第6章 心肺功能150
6.1 心肺功能生物学基础150
6.2 心肺功能与仿人机器人设计153
6.3 心音模拟器153
6.4 肺音模拟器164
6.5 心音与肺音联合模拟器168
6.6 心肺功能“小魔怪”173
6.7 心肺功能搜索关键词173
第7章 如果仿人机器人流血了，我们能止血吗175
7.1 循环系统生物学基础175
7.2 循环系统与仿人机器人设计180
7.3 心脏脉冲模拟器180
7.4 心脏脉冲模拟器进阶186
7.5 与心音和肺音模拟器集成190
7.6 循环系统“小魔怪”193
7.7 循环系统搜索关键词194
第8章 只是时间问题195
8.1 肌肉力量与衰老问题195
8.2 心跳恢复率与健康程度205
8.3 年龄“小魔怪”213
8.4 年龄搜索关键词213
第9章 情感与表达215
9.1 仿人机器人高仿真方法215
9.2 仿人机器人低仿真方法217
9.3 机器人的微笑217
9.4 声音合成222
9.5 EMIC—2指令集224
9.6 语音验证实验入门225
9.7 利用Epson解析器表达声音227
9.8 利用DECTalk解析器表达声音228
9.9 构建会表达的仿人机器人231
9.10 Tatrick如何表达236
9.11 实例1：利用多彩眼睛打招呼239
9.12 实例2：做坏事的机器人240
9.13 实例3：困惑的小孩240
9.14 实例4：喝醉的机器人241
9.15 实例5：聪明的智者242
9.16 实例6：耐心的病人242
9.17 小结243
附录 相关资源245
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>仿人机器人原理与实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android开发实战体验
第1章　Android系统架构与初始化流程
1.1　Android发展历史回顾
1.2　系统架构
1.3　初始化流程
1.4　权限安全机制
第2章　Activity简介
2.1　Activity的架构设计
2.2　Activity的生命周期
2.3　旋转屏幕重新加载Activity
第3章　常用UI界面以及实现
3.1　缓冲界面
3.2　宫格界面
3.3　Tab界面
3.4　二级列表
3.5　抽屉效果
3.6　左右滑动效果
3.6.1　系统提供ViewFlipper
3.6.2　自定义ViewFlow
3.7　Gallery
3.8　悬浮框
第4章　ListView使用详解
4.1　ListView与Adapter的关系
4.2　ListView绑定EmptyView
4.3　自定义Adapter
4.4　ListView的使用技巧
第5章　定制控件
5.1　扩展系统控件
5.2　自绘控件
5.3　触屏事件处理
5.4　扩展ViewGroup类
5.5　定义控件属性
5.6　定制控件的style和theme
第6章　Drawable分类汇总
6.1　ColorDrawable
6.2　GradientDrawable
6.3　BitmapDrawable6
6.4　NinePatchDrawable
6.5　InsetDrawable
6.6　ClipDrawable
6.7　ScaleDrawable
6.8　RotateDrawable
6.9　AnimationDrawable
6.10　LayerDrawable
6.11　LevelListDrawable
6.12　StateListDrawable
6.13　TransitionDrawable
第7章　图像操作技巧
7.1　位图资源
7.1.1　加载位图资源
7.1.2　创建位图资源
7.1.3　保存位图资源
7.2　常用的位图操作
7.2.1　View转换为Bitmap
7.2.2　图片圆角处理
7.2.3　图片灰化处理
7.2.4　提取图像Alpha位图
7.2.5　图像变换
7.3　内存溢出（OOM）问题
第8章　布局优化
8.1　复用布局文件
8.2　布局的层次结构
8.2.1　Hierachy Viewer
8.2.2　创建高效的布局
8.2.3　合并布局
8.2.4　提高控件查找效率
8.3　布局文件延迟加载
第9章　消息模型
9.1　UI线程
9.2　消息系统与消息模型
9.2.1　消息系统构成要素和基本原理
9.2.2　消息模型基本原理
9.2.3　消息模型使用方法
9.2.4　Handler常见用法
第10章　网络通信
10.1　使用HttpURLConnection发送Post/Get请求
10.2　设置Proxy访问网络
10.3　实现文件下载断点续传
10.3.1　设计下载任务进度类DownloadBean
10.3.2　创建下载线程并可随时中断线程
10.3.3　设置网络链接读取资源的有效范围
10.3.4　使用RandomAccessFile随机读写文件
第11章　桌面组件AppWidget
11.1　AppWidget框架结构
11.1.1　AppWidget框架类
11.1.2　AppWidget框架相关类
11.2　AppWidget开发
11.2.1　AppWidgetProvider类的使用
11.2.2　AppWidget开发实例
11.2.3　实例改进
第12章　系统服务
12.1　系统服务简介
12.2　系统服务开发
12.2.1　电源服务开发
12.2.2　窗口管理服务开发
12.2.3　Layout扩展服务开发
12.2.4　Activity服务开发
12.2.5　Notification服务开发
12.2.6　闹钟服务开发
12.2.7　KeyGuard服务开发
12.2.8　位置服务开发
12.2.9　Vibrator服务开发
第13章　多媒体开发
13.1　Android多媒体系统简介
13.1.1　系统架构
13.1.2　系统功能
13.1.3　OpenCore简介
13.1.4　OpenMAX简介
13.2　MediaPlayer的使用
13.2.1　初始化和准备播放
13.2.2　播放控制
13.2.3　释放播放资源
13.2.4　视频播放
13.3　音频视频录制
13.3.1　使用Intent录制音频和视频
13.3.2　使用MediaRecorder录制音频和视频
13.3.3　原始音频录制与播放
13.4　Camera使用
13.4.1　运用Intent捕获照片
13.4.2　调用Camera组件捕获照片
13.5　SoundPool类的使用
13.5.1　SoundPool类简介与适用场合
13.5.2　使用SoundPool播放声音
第14章　图片异步加载及缓存
14.1　异步加载与缓存的重要性
14.2　垃圾回收机制与引用类型
14.2.1　Java的垃圾回收机制
14.2.2　Java引用类型
14.2.3　使用软引用构建缓存
第15章　移动广告平台
15.1　移动应用平台发展现状
15.2　移动广告平台发展趋势
15.3　移动广告平台的盈利模式
15.4　选择广告平台
15.4.1　国内移动广告平台简介
15.4.2　平台选择参考标准
15.5　嵌入广告插件
第16章　代码优化技术
16.1　编译前的代码优化技术
16.1.1　尽可能避免创建不必要的对象
16.1.2　方法调用代码优化
16.1.3　代码变量优化
16.1.4　代码过程优化
16.2　内存泄漏代码优化及检测
16.2.1　内存泄漏检测工具——Memory Analyser Tool（MAT）
16.2.2　MAT使用示例
16.3　代码混淆技术
16.3.1　ProGuard简介
16.3.2　ProGuard使用
第17章　加解密
17.1　使用HASH算法（MD5/SHA1）保护应用程序的安全
17.2　使用对称加密算法（BASE 64）隐藏关键信息
17.3　非对称加密算法（RSA）的使用
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android开发实战体验
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android OpenCV应用程序设计
第1章 构建OpenCV 1
1.1 系统需求 2
1.2 构建开发环境 2
1.3 获取现有的开发环境--Tegra Android开发包（TADP） 2
1.4 逐个整合安装环境 4
1.5 获取预制版本的OpenCV4Android 6
1.6 构建源OpenCV 7
1.7 基于Eclipse构建OpenCV示例 8
1.8 查看文档和帮助文件 18
1.9 本章小结 19
第2章 与相机帧协同工作 20
2.1 设计Second Sight应用程序 20
2.2 创建Eclipse项目 22
2.3 开启相机和磁盘访问功能 25
2.4 创建菜单和字符串资源 27
2.5 在CameraActivity中预览和保存照片 29
2.6 删除、编辑和共享LabActivity中的照片 40
2.7 本章小结 44
第3章 添加图像效果 45
3.1 向当前项目中添加文件 45
3.2 定义滤镜接口 47
3.3 混合颜色通道 47
3.4 曲线色移 50
3.5 使用卷积过滤处理邻接像素 56
3.6 向CameraActivity中加入滤镜 58
3.7 本章小结 64

第4章 图像识别和跟踪 65
4.1 向当前项目中添加文件 65
4.2 理解图像追踪 66
4.3 编写图像跟踪滤镜 67
4.4 向CameraActivity中加入跟踪滤镜 74
4.5 本章小结 80
第5章 图像跟踪与3D渲染之间的整合操作 81
5.1 向项目中添加文件 81
5.2 定义ARFilter接口 82
5.3 在CameraProjectionAdapter中构建投影矩阵 83
5.4 针对3D跟踪调整ImageDetectionFilter 87
5.5 在ARCubeRenderer中绘制立方体 92
5.6 将3D跟踪和渲染添加至CameraActivity中 97
5.7 Android图形学的更多内容 101
5.8 本章小结 102
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android OpenCV应用程序设计
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>App Inventor 2 Android应用开发实战
01 App Inventor 2 介绍  1
1.1 App Inventor 2 的发展与沿革  2
1.2 App Inventor 2 的整体架构 2
1.3 构建App Inventor 2 的开发环境 4
1.3.1 申请Gmail 账号  4
1.3.2 安装App Inventor 2 组件 6
1.3.3 安装MIT AI2 Companion App 7
1.4 App Inventor 2 项目操作接口  9
1.4.1 App Inventor 2 项目管理接口 10
1.4.2 App Inventor 2 项目设计接口 11
1.4.3 App Inventor 2 项目拼块界面 13
1.4.4 在仿真器中执行 14
1.5 项目维护 15
1.5.1 储存项目 16
1.5.2 另存项目 16
1.5.3 下载.apk 文件  17
02 认识常用组件与运算原则 18
2.1 常用基本组件  19
2.2 拼块功能与事件 23
2.3 基本运算原则  26
2.3.1 常量  26
2.3.2 变量  27
2.3.3 算术运算 27
2.3.4 字符串运算  28
2.3.5 范例练习——求面积  29
2.3.6 关系（比较）运算  30
2.3.7 逻辑运算 31
2.3.8 范例练习——求面积（改良版） 32
03 循环与列表  34
3.1 条件判断 35
3.1.1 单向  35
3.1.2 双向  36
3.1.3 嵌套  37
3.2 循环  39
3.2.1 For 循环  39
3.2.2 嵌套循环 40
3.2.3 while 循环  42
3.3 列表Lists  43
3.3.1 建立列表 44
3.3.2 foreach 循环  44
3.3.3 列表选择器组件 45
3.3.4 管理列表 48
3.4 乐透彩实战  49
04 自定义程序  52
4.1 对话框组件  53
4.1.1 组件特性 53
4.1.2 显示信息 54
4.1.3 交互式对话信息 55
4.2 内置程序 58
4.2.1 文字  58
4.2.2 算术运算 59
4.2.3 随机数  60
4.3 内置程序实战  60
4.3.1 大小写转换  61
4.3.2 电话号码检查  62
4.3.3 简易抽签功能  63
05 绘图与多媒体应用  66
5.1 绘图组件 67
5.2 多媒体元素  73
5.3 小画家实战  76
06 动画应用  85
6.1 图片精灵组件  86
6.2 球形精灵组件  89
6.3 打砖块实例  95
07 整合网络资源  102
7.1 地图组件  103
7.1.1 Activity 启动器 103
7.1.2 调用Google Map 105
7.2 位置传感器 113
7.3 Web 浏览器组件 115
7.4 公司App 实战 117
08 数据库与网络数据库  125
8.1 数据储存方式  126
8.2 启动Google Application Engine 130
8.3 范例练习——备忘录 139
09 手机传感器 144
9.1 加速度传感器  145
9.2 方向传感器 150
9.3 电流急急棒实战  152
10 App 案例——计时器  156
10.1 案例功能说明 157
10.2 重点技术介绍 158
10.3 外观编排设计 160
10.4 程序设计介绍 163
11 App 案例——相片通讯录  169
11.1 案例功能说明 170
11.2 重点技术介绍 172
11.3 外观编排设计 177
11.4 程序设计介绍 187
12 App 案例——打恶魔  201
12.1 案例功能说明 202
12.2 重点技术介绍 203
12.3 外观编排设计 207
12.4 程序设计介绍 211
13 App 案例——猜牌游戏 220
13.1 案例功能说明 221
13.2 重点技术介绍 223
13.3 外观编排设计 224
13.4 程序设计介绍 229
14 App 项目——拼图  237
14.1 项目功能说明 238
14.2 重点技术介绍 240
14.3 屏幕设计介绍 245
14.4 程序设计介绍 249
15 App 项目——电子布告栏  259
15.1 项目功能说明 260
15.2 重点技术介绍 261
15.3 屏幕设计介绍 263
15.4 程序设计介绍 265
16 App 项目——接苹果  270
16.1 项目功能说明 271
16.2 重点技术介绍 273
16.3 项目功能说明 275
16.4 程序设计介绍 279
17 上架到 Google Play  287
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>App Inventor 2 Android应用开发实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>爱上Android
第1章　初识Android 1
1.1　Android是什么 1
1.2　Android体系架构 1
1.3　Android发展史 4
第2章　选择您的开发工具 5
2.1　准备软件，认识Android Studio 5
2.1.1　什么是Android Studio 5
2.1.2　为什么使用Android Studio 6
2.2　安装Android Studio 6
2.2.1　安装配置要求 6
2.2.2　下载地址 6
2.2.3　安装JDK 7
2.2.4　安装Android Studio 7
2.2.5　设置JDK和Android SDK
目录 14
2.3　项目的创建 16
2.3.1　创建项目的步骤 16
2.3.2　解决错误（没有错误最好） 19
2.4　Android Studio界面预览 21
2.5　常用设置 22
2.5.1　设置主题 22
2.5.2　设置字体和格式 22
2.5.3　设置文件编码 24
2.5.4　设置快捷键 24
2.5.5　其他设置 26
2.6　常用快捷键 26
2.7　Android工程目录 27
2.7.1　工程目录介绍 27
2.7.2　Gradle使用详解 28
2.7.3　app/build.gradle 28
2.8　SDK目录介绍 30
2.9　调试程序 31
2.9.1　创建模拟器 31
2.9.2　连接真实手机 33
2.9.3　Genymotion模拟器 34
2.10　程序启动分析 34
2.11　日志和注释 36
2.11.1　注释 37
2.11.2　日志 37
2.11.3　设置Android Studio日志
显示颜色 38
2.11.4　实际开发中控制日志 39
2.11.5　Logger的使用 41
总结 42
第3章　界面的搭建 43
3.1　眼见皆View 43
3.2　布局的搭建方式 43
3.3　常用的控件和属性 44
3.3.1　TextView 44
3.3.2　Button 45
3.3.3　EditText 46
3.3.4　ImageView 47
3.3.5　ProgressBar 49
3.4　布局的介绍 50
3.4.1　LinearLayout（线性布局） 50
3.4.2　RelativeLayout（相对布局） 52
3.4.3　FrameLayout（帧布局） 55
3.4.4　GridLayout（网格布局） 56
3.4.5　CoordinatorLayout 58
3.4.6　ConstraintLayout（约束
布局） 61
3.5　提示信息Toast和Snackbar 61
3.5.1　Toast使用详解 61
3.5.2　修改Toast位置 63
3.5.3　自定义Toast布局 63
3.5.4　避免内存泄露 65
3.5.5　Snackbar 65
3.6　点击事件三种写法 68
3.6.1　通过匿名内部类或内部类
实现 68
3.6.2　让类实现接口 69
3.6.3　在布局文件中注册事件 70
3.7　使用Lambda表达式代替匿名
内部类 70
3.7.1　什么是lambda呢 70
3.7.2　使用Lambda表达式 71
3.8　AlertDialog提示对话框 73
3.8.1　一般对话框 75
3.8.2　Material Design风格的
对话框 76
3.8.3　列表对话框 78
3.8.4　单选按钮对话框 79
3.8.5　多选按钮对话框 79
3.8.6　自定义AlertDialog 80
3.9　ProgressDialog 81
总结 83
第4章　Activity介绍 84
4.1　Activity之间的跳转 84
4.1.1　显示意图 84
4.1.2　隐式意图 86
4.1.3　隐式意图的常见操作 88
4.1.4　IntentFilter匹配规则 89
4.2　Activity之间传递数据 92
4.2.1　通过Intent传递数据 92
4.2.2　静态工厂设计模式传递
数据 93
4.2.3　返回数据给之前的Activity 93
4.3　Android 6.0权限的管理 95
4.3.1　Android 6.0新的权限机制 96
4.3.2　申请权限 96
4.3.3　第三方库RxPermissions 100
4.4　Activity生命周期 101
4.4.1　生命周期的方法 101
4.4.2　Activity销毁时保存数据 102
4.4.3　锁定横竖屏 103
4.4.4　开发时注意事项 104
4.5　Activity任务栈 104
4.6　Activity启动模式 105
4.6.1　standard 105
4.6.2　singleTop 106
4.6.3　singleTask 106
4.6.4　singleInstance 107
4.6.5　统一管理Activity 108
4.7　Toolbar和Navigation Drawer 109
4.7.1　AppBar的简介 109
4.7.2　创建菜单 111
4.7.3　Toolbar 112
4.7.4　Toolbar遇上Navigation
Drawer 114
4.8　主题样式设置 118
总结 120
第5章　数据存储 121
5.1　SharedPreference 121
5.2　MD5加密 123
5.3　文件存储数据 124
5.3.1　保存到手机内存（Internal
Storage） 124
5.3.2　SD卡存储（External
Storage） 127
5.4　SQLite存储 132
5.4.1　创建数据库 132
5.4.2　升级数据库 135
5.4.3　数据库增删改查（CURD） 137
5.4.4　SQLite数据库的事务操作 144
5.5　常见的数据库框架 146
总结 146
第6章　网络编程 148
6.1　HTTP协议 148
6.1.1　URL简介 148
6.1.2　HTTP简介 149
6.1.3　GET和POST对比 151
6.2　HttpURLConnection 151
6.2.1　为什么废弃HttpClient 151
6.2.2　使用HttpURLConnection
联网 152
6.3　多线程编程 154
6.3.1　线程的同步和异步 154
6.3.2　AsycTask 158
6.3.3　RxJava 161
6.4　网络请求实例 164
6.5　JSON解析 168
6.5.1　使用Android原生方式解析
JSON 169
6.5.2　Gson的使用 170
6.5.3　插件GsonFormat快速实现
JavaBean 174
6.5.4　完成请求实例 176
6.6　网络请求框架——Retrofit 179
6.6.1　使用Retrofit 179
6.6.2　常用的注解 181
6.6.3　完成请求案例 181
6.6.4　RxJava和Retrofit结合 183
6.7　WebView 184
6.7.1　WebView配置 186
6.7.2　WebViewClient方法 187
6.7.3　设置WebChromeClient 189
6.7.4　WebView常用的方法 190
6.7.5　WebView模板代码 191
总结 196
第7章　图片的处理 197
7.1　Bitmap和Drawable 197
7.2　大图的加载 199
7.3　图片加水印 202
7.4　图片特效，Matrix 205
7.4.1　缩放 205
7.4.2　倒影、镜面 207
7.4.3　旋转 208
7.4.4　位移 208
7.5　图片颜色处理——打造自己的美图
秀秀 209
7.5.1　颜色过滤器
ColorMatrixColorFilter 209
7.5.2　实现图片美化功能 210
7.6　案例——随手涂鸦 214
7.7　加载网络图片 217
7.7.1　网络图片的缓存策略 217
7.7.2　图片加载库Picasso的使用 218
总结 219
第8章　复杂控件的使用 220
8.1　ListView 220
8.1.1　初识ListView 221
8.1.2　定制ListView条目的界面 222
8.1.3　优化ListView 225
8.1.4　ListView的点击事件 226
8.1.5　ListView常用的属性 228
8.2　GridView 229
8.3　RecyclerView 231
8.3.1　初识RecyclerView 231
8.3.2　使用RecyclerView 232
8.3.3　不同的布局排列方式 234
8.3.4　RecyclerView添加点击
事件 236
8.3.5　RecyclerView添加删除
数据 237
8.3.6　下拉刷新
SwipeRefreshLayout 237
8.4　CardView 239
8.5　ViewPager 241
8.6　BottomNavigationView（底部
导航） 243
8.7　TabLayout 246
8.7.1　TabLayout使用 246
8.7.2　TabLayout自定义条目
样式 249
总结 250
第9章　探索Fragment 251
9.1　使用Fragment 252
9.1.1　Fragment的生命周期 252
9.1.2　创建Fragment 252
9.1.3　向Activity添加Fragment 254
9.1.4　管理片段 256
9.1.5　Fragment的向下兼容 257
9.2　FragmentTabHost实现底部标签 257
9.3　ViewPager和Fragment结合 259
总结 273
第10章　广播接收者 274
10.1　广播简介 274
10.2　实现一个BroadcastReceiver 275
10.3　发送自定义广播 279
10.4　桌面快捷方式 283
总结 285
第11章　Service介绍 286
11.1　服务的基本用法 286
11.1.1　创建服务 286
11.1.2　启动和停止服务 287
11.1.3　绑定服务 289
11.1.4　服务的生命周期 292
11.2　IntentService 292
11.3　Service和BroadCastReceiver结合
使用的案例（兼容Android 7.0） 294
11.3.1　Android 7.0错误原因 297
11.3.2　使用FileProvider 298
总结 300
第12章　动画 301
12.1　补间动画（Tween Animation） 301
12.2.1　AlphaAnimation（透明度
动画） 302
12.2.2　ScaleAnimation（缩放
动画） 304
12.2.3　TranslateAnimation（平移
动画） 305
12.2.4　RotateAnimation（旋转
动画） 306
12.2　逐帧动画（Frame Animation） 308
12.3　属性动画 310
总结 313
第13章　新特性 314
13.1　Android 7.0分屏开发 314
13.1.1　如何分屏呢 315
13.1.2　多窗口生命周期 315
13.1.3　针对多窗口进行配置 316
13.1.4　多窗口模式中运行应用
注意事项 316
13.1.5　在多窗口模式中启动新
Activity 317
13.1.6　支持拖放 318
13.2　Android 7.0快速设定 318
13.3　约束布局ConstraintLayout 321
13.3.1　ConstraintLayout简介 321
13.3.2　添加约束布局 322
13.3.3　使用约束布局 322
13.3.4　添加约束 323
13.3.5　使用自动连接和约束推断 325
13.3.6　快速对齐Align 326
13.4　使用Kotlin语言开发Android 326
总结 330
第14章　性能优化 331
14.1　性能检测 331
14.1.1　检测内存泄露 331
14.1.2　LeakCanary 334
14.1.3　追踪内存分配 335
14.1.4　查询方法执行的时间 335
14.2　过度绘制（OverDraw） 336
14.2.1　过度绘制概念 336
14.2.2　追踪过度绘制 336
14.2.3　去掉不合理背景 337
14.2.4　不合理的XML布局对
绘制的影响 338
14.3　避免ANR 338
14.3.1　ANR分析 339
14.3.2　ANR解决方式 341
总结 341
第15章　屏幕适配 342
15.1　Android屏幕适配出现的原因 342
15.2　相关重要概念 344
15.2.1　屏幕尺寸 344
15.2.2　屏幕分辨率 344
15.2.3　屏幕像素密度 344
15.2.4　屏幕尺寸、分辨率、像素
密度三者关系 344
15.2.5　dip 345
15.2.6　sp 345
15.3　尺寸适配解决方案 346
15.3.1 “布局”适配 346
15.3.2　尺寸（size）限定符 347
15.3.3　最小宽度（Smallest-width）
限定符 348
15.3.4　使用布局别名 349
15.3.5　屏幕方向（Orientation）
限定符 350
15.3.6 “布局组件”匹配 352
15.3.7　Layout_weight详解 352
15.3.8 “图片资源”匹配 355
15.3.9　.9的制作 355
15.3.10 “用户界面流程”匹配 357
15.4　屏幕密度适配 359
15.4.1 “布局控件”适配 359
15.4.2　百分比布局 360
15.4.3　约束布局 362
总结 362
第16章　自定义控件 363
16.1　自定义控件简介 363
16.2　View的生命周期 364
16.2.1　构造函数 365
16.2.2　onAttachedToWindow 369
16.2.3　onMeasure 370
16.2.4　onLayout 372
16.2.5　onDraw 372
16.2.6　View更新 373
16.2.7　动画 374
总结 374
第17章　JNI/NDK开发 375
17.1　NDK配置（最新的CMake
方式） 375
17.1.1　下载 376
17.1.2　创建项目 376
17.1.3　运行项目 378
17.1.4　手动添加native方法 379
总结 380
第18章　开发一个真实的项目 381
18.1　项目需求分析 381
18.2　创建项目 382
18.3　界面实现 383
18.3.1　启动界面 383
18.3.2　引导页面 385
18.3.3　主界面 388
18.3.4　列表界面 390
18.4　请求网络 395
18.5　新闻列表和详情 400
18.6　完成整个项目 409
总结 412
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>爱上Android
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通Android Studio
第1章  初识AndroidStudio 1
1.1  什么是AndroidStudio 1
1.1.1 Android Studio简介 1
1.1.2 系统要求 2
1.1.3 下载地址 2
1.1.4 为什么要用Android Studio 2
1.2 Android Studio的特点 3
1.3 macOS环境配置 7
1.3.1 配置JDK 7
1.3.2 下载Android Studio 8
1.3.3 配置Android的环境变量 8
1.4 Windows环境配置 9
1.4.1 配置JDK 9
1.4.2 配置Android Studio 10
1.4.3 配置Android的环境变量 11
1.5 Linux 环境配置 12
1.5.1 配置JDK 12
1.5.2 配置Android Studio 12
1.5.3 配置Android的环境变量 13
1.6  认识欢迎界面 13
1.6.1 最近打开的项目 14
1.6.2 开始一个项目 14
1.7  认识配置界面 15
1.8  帮助和教程 19
1.9  更新AndroidStudio版本 22
1.10 配置Android Studio更新通道 23
1.10.1 在偏好设置中配置更新通道 23
1.10.2 在检测结果对话框中配置更新通道 23
1.10.3 单独下载最近更新的版本 23
1.10.4 四种版本的区别 24
1.11 在Android Studio中使用代理 25
1.12 认识偏好设置 26
1.12.1 基础配置 27
1.12.2 个性化配置 28
1.13 认识工作台 30
1.14 认识工具窗口 33
第2章  项目与模块 37
2.1 Android Studio的项目结构 37
2.1.1 项目和模块 37
2.1.2 基本的项目结构 38
2.2  导入项目和模块 40
2.2.1 导入Android Studio项目 40
2.2.2 导入Eclipse项目 40
2.2.3 导入Android示例代码 44
2.2.4 导入模块 44
2.2.5 导入.JAR/.AAR 46
2.2.6 从VCS检出项目 47
2.3  创建项目和模块 49
2.3.1 创建项目 49
2.3.2 创建应用程序模块 53
2.3.3 创建Android公共库模块 55
2.4  删除模块 57
2.5  添加so文件 58
2.6  创建类和文件 59
2.7  创建Activity 61
2.7.1 Activity模板列表 61
2.7.2 Activity Gallery 61
2.7.3 新建一个Activity 62
2.8  创建Fragment文件 64
2.9  创建Service文件 65
2.9.1 创建Service文件 66
2.9.2 创建Intent Service文件 66
2.10 创建自定义组件 67
2.11 创建App Widget 69
2.12 创建可编译的资源文件 70
2.12.1 可编译的资源文件 70
2.12.2 创建可编译的资源文件 72
2.12.3 资源限定符 74
2.13 创建不同分辨率的图标 77
2.13.1 启动图标 78
2.13.2 活动栏和选项卡图标 79
2.13.3 通知图标 80
2.14 创建矢量图 81
2.14.1 使用定义好的素材图标 81
2.14.2 使用本地的SVG文件 81
2.15 创建AIDL文件 82
2.16 创建Android文件夹 83
2.17 创建Resource Bundle文件 84
第3章  布局 86
3.1  认识布局 86
3.1.1 Android中定义布局的方法 86
3.1.2 快速开始 87
3.2  设计布局 88
3.2.1 文本编辑器 88
3.2.2 可视化布局编辑器 89
3.3  组件列表 90
3.4  预览 94
3.4.1 设置控件属性 94
3.4.2 警告和错误提示 94
3.4.3 界面缩放 96
3.4.4 控件操作 96
3.5  结构树 96
3.5.1 快速转换布局属性 97
3.5.2 选择控件 97
3.5.3 跳到源码 97
3.6  属性 97
3.7  工具栏 99
第4章  管理 103
4.1  项目窗口 103
4.1.1 视图模式 103
4.1.2 常用设置和操作 105
4.2  项目管理 110
4.2.1 打开和关闭项目 110
4.2.2 管理最近打开的项目 111
4.3  文件管理 112
4.3.1 文件同步 112
4.3.2 导出到HTML 112
4.3.3 切换文件编码方式 113
4.3.4 切换行分隔符 113
4.3.5 使文件只读 114
4.3.6 使用省电模式 114
4.3.7 打开文件/文件夹所在磁盘目录 114
4.4 Android Studio管理 115
4.4.1 隐藏/显示/退出Android Studio 115
4.4.2 清除缓存/重启Android Studio 116
4.5  收藏夹 116
4.5.1 添加到收藏夹 116
4.5.2 管理收藏夹 118
4.6 TODO 119
4.6.1 添加TODO任务 119
4.6.2 查看TODO任务 120
4.6.3 TODO工具窗口常用操作 120
4.6.4 设置TODO 122
4.6.5 使用TODO分配代码Review任务 123
第5章  编辑 126
5.1  撤消/重做/剪切/复制/粘贴 126
5.2  复制技巧 127
5.2.1 复制为纯文本 127
5.2.2 复制引用 127
5.2.3 从复制历史中选择粘贴 127
5.2.4 设置粘贴历史记录的个数 128
5.2.5 复制行 128
5.3  合并两行内容 129
5.4  选择技巧 129
5.4.1 扩大选择范围 129
5.4.2 缩小选择范围 130
5.4.3 使用列选择模式 130
5.5  缩进设置 131
5.6  自动补全当前的语句 131
5.7  一键切换大小写字母 132
5.8  查找工具栏 132
5.8.1 打开查找工具栏 132
5.8.2 快速查找 133
5.8.3 查找范围设置 133
5.9  在查找结果中跳转 134
5.10 选择查找结果 134
5.11 指定查找路径 135
5.12 替换 136
5.13 指定替换路径 137
5.14 在结构中查找和替换 139
5.15 查找用法 141
5.16 设置查找用法的过程和范围 141
5.17 显示用法 144
5.18 查看在当前文件中的用法 144
5.19 在文件中高亮显示字符 145
5.20 最近查找 145
5.21 Macros （宏） 146
第6章  视图 148
6.1  工具窗口 148
6.1.1 显示/隐藏工具窗口 148
6.1.2 快速切换工具窗口 149
6.2  工作台管理 150
6.3  查看定义 151
6.4  查看同胞元素 152
6.5  查看文档 152
6.6  查看方法的参数信息 154
6.7  查看表达式的类型 155
6.8  查看上下文信息 155
6.9  查看源码 156
6.10 查看最近打开过的文件 156
6.11 查看最近改动过的文件 156
6.12 查看最近的改动 156
6.13 对比任意文件 158
6.14 将选中的文件和正在编辑的文件进行对比 160
6.15 将选中的文件和剪切板上的内容进行对比 160
6.16 切换编辑器配色方案 161
6.16.1 快速切换编辑器配色方案 161
6.16.2 切换编辑器配色方案 161
6.17 切换代码风格 161
6.18 切换键盘映射 162
6.19 快速切换视图模式 163
6.20 快速切换主题 164
6.21 设置编辑器是否显示空格 164
6.22 设置编辑器是否显示行号 165
6.23 设置编辑器是否显示缩进向导 166
6.24 设置编辑器是否使用自动换行 167
6.25 设置编辑器是否弹出导入提示 168
6.26 使用演示模式 169
6.27 使用免打扰模式 170
6.28 使用全屏模式 171
第7章  导航 172
7.1  搜索并打开类文件 172
7.2  搜索并打开某个文件 173
7.3  搜索并打开某个文件或方法174
7.4  使用自定义代码块 174
7.5  快速跳转到某一行代码176
7.6  快速跳转到光标的历史位置177
7.7  快速跳转到编辑过的历史位置178
7.8  标记书签 178
7.9  使用助记符标记书签 179
7.10 管理书签 179
7.10.1 在书签管理界面管理书签 180
7.10.2 在收藏夹中管理书签 181
7.11 快速跳转到导航栏 181
7.12 快速跳转到声明 181
7.13 快速跳转到实现 182
7.14 快速跳转到类型声明 182
7.15 快速跳转到父类 183
7.16 类和测试类之间快速跳转 184
7.17 查看相关联的文件 186
7.18 查看文件结构 187
7.19 查看类的层次结构图 188
7.20 查看方法类型的层次结构 189
7.21 查看方法调用层次结构 190
7.22 快速跳转到错误代码的位置 190
7.23 在方法间前后跳转 191
7.24 使用翻页功能 191
7.25 选择当前文件在哪里显示 192
7.26 光标快速跳转到编辑器 192
7.27 光标快速跳转到页首/页尾 193
第8章  编码 194
8.1  覆写或实现方法 194
8.2  实现接口方法 196
8.3  实现代理方法 196
8.4  生成构造函数 199
8.5  生成Getter和Setter方法 200
8.6  覆写equals和hashcode方法 200
8.7  覆写toString方法 201
8.8  插入版权信息 203
8.8.1 插入版权信息 203
8.8.2 配置版权信息 204
8.8.3 共享版权信息配置 207
8.9  提取或删除代码 208
8.10 自动补全提示 209
8.11 代码补全 210
8.12 补全循环扩展词 212
8.13 展开或折叠代码 213
8.13.1 展开或折叠当前代码块 213
8.13.2 展开或折叠当前代码块中的所有子模块 213
8.13.3 展开和折叠全部代码块 214
8.13.4 展开和折叠当前文件中的所有注释 214
8.13.5 指定展开层级 214
8.13.6 展开和折叠选中区域 215
8.13.7 折叠代码片段 215
8.14 插入代码模板 215
8.14.1 类中常用的缩写 215
8.14.2 方法中常用的缩写 216
8.15 使用代码模板包裹代码 218
8.16 查看和编辑代码模板 219
8.17 使用常用代码模板包裹代码 220
8.18 注释代码 222
8.19 格式化代码 222
8.20 自动缩进行 224
8.21 优化导入 224
8.22 重新排列代码 225
8.23 移动一段代码 225
8.24 移动一行代码 226
8.25 操作意图提示 227
8.26 正则表达式操作意图提示 228
第9章  检查 229
9.1  代码检查工具 229
9.2  全面了解Lint 230
9.2.1 Lint是什么 230
9.2.2 为什么要用Lint 230
9.2.3 Lint会检查哪些错误 230
9.2.4 Lint工作流程 231
9.2.5 报告中的Issue和Category 232
9.2.6 Lint使用场景 232
9.2.7 如何配置Lint检查 233
9.2.8 Lint命令行用法介绍 233
9.2.9 Lint命令行用法举例 235
9.3  执行一次代码检查 237
9.4  指定检查范围 239
9.4.1 先执行检查再指定范围 239
9.4.2 选定范围再执行检查 239
9.5  代码检查结果及辅助工具240
9.6  详解代码检查结果辅助工具242
9.6.1 重新执行代码检查 242
9.6.2 全部展开或折叠检查结果 242
9.6.3 在检查结果中快速上下跳转 243
9.6.4 自动定位到问题的源码 243
9.6.5 导出代码检查结果 243
9.6.6 按严重程度分组排查问题 244
9.6.7 按目录分组排查问题 244
9.6.8 过滤已解决的问题 244
9.6.9 高亮显示不同和仅显示不同 244
9.6.10 快速设置245
9.6.11 快速解决问题 245
9.6.12 对检查出的问题进行操作 246
9.7  禁用和启用某项检查 247
9.7.1 在检查结果中禁用和启用某项检查 247
9.7.2 在偏好设置中禁用和启用某项检查 248
9.8  忽略检查 249
9.9  在指定范围内执行某项检查252
9.10 解决检查出的问题 252
9.11 管理代码检查配置文件 253
9.12 配置代码检查规则 255
9.13 Android类目的所有检查项 259
9.14 Android Lint类目的检查项 260
9.15 在lint.xml文件中配置Lint检查 264
9.16 在Gradle中配置Lint检查 264
9.17 使用Gradle执行Lint检查 267
9.17.1 命令行执行Lint检查 267
9.17.2 Gradle工具窗口执行Lint检查 267
9.18 在Java和XML源码中配置Lint检查 267
9.18.1 在Java源码中配置Lint检查 267
9.18.2 在XML源码中配置Lint检查 268
9.19 代码清理 269
9.20 通过名字来指定代码检查项 271
9.21 配置当前文件自动检查的规则 272
9.22 导入并查看离线检查结果 274
9.23 自动添加是否可为空注解 275
9.24 分析依赖 276
9.25 分析反向依赖 277
9.26 分析模块依赖 278
9.27 分析循环依赖 279
9.28 分析数据流 279
9.29 分析堆栈信息 280
第10章  重构 282
10.1 重命名 282
10.1.1 重命名类 282
10.1.2 重命名变量 283
10.1.3 重命名文件 283
10.2 更改方法签名 284
10.3 迁移变量类型 284
10.4 转成静态方法 286
10.5 静态方法转为实例方法 287
10.6 移动类 288
10.7 移动静态方法 289
10.8 移动静态字段 290
10.9 复制 291
10.10 安全删除 291
10.11 提取变量 294
10.12 提取常量 295
10.13 提取字段 296
10.14 提取参数 298
10.15 提取函数式参数 300
10.16 提取参数对象 301
10.17 提取方法 303
10.18 提取方法对象 304
10.19 提取委托 304
10.20 提取接口 306
10.21 提取父类 307
10.22 内联方法 309
10.23 内联临时变量 310
10.24 查找并替换重复代码 311
10.25 反转布尔值 312
10.26 把成员拉到父类 313
10.27 把成员推到子类 314
10.28 尽可能使用接口 316
10.29 使用委托替换继承 318
10.30 移除中间人 321
10.31 包装方法返回值 323
10.32 将匿名类转成内部类 325
10.33 封装字段 326
10.34 使用查询替换临时变量 327
10.35 使用工厂方法替换构造方法 329
10.36 使用构建器替换构造方法 330
10.37 泛型化 332
10.38 国际化 333
第11章  构建 335
11.1 认识Gradle 335
11.1.1 Gradle是什么 335
11.1.2 Gradle中依赖的仓库 336
11.2 配置Gradle环境 338
11.3 Gradle Wrapper 339
11.4 查看和执行Gradle任务 340
11.4.1 查看当前项目支持的Gradle任务 340
11.4.2 执行Gradle任务 342
11.4.3 常用Gradle任务 342
11.4.4 Gradle工具窗口 343
11.5 构建项目和模块 345
11.5.1 编译项目 345
11.5.2 编译模块 346
11.5.3 设置自动编译项目 347
11.5.4 重新构建项目 347
11.5.5 Make Project与Rebuild Project的区别 348
11.5.6 清理项目 348
11.6 Gradle Script 348
11.6.1 Gradlew配置文件gradle-wrapper.properties 349
11.6.2 项目全局配置文件settings.gradle 350
11.6.3 本地属性配置文件local.properties 350
11.6.4 Gradle配置文件gradle.properties 351
11.6.5 代码混淆规则配置文件proguard-rules.pro 351
11.6.6 项目构建配置文件build.gradle 354
11.6.7 模块构建配置文件build.gradle 355
11.7 在项目结构中配置模块构建 357
11.7.1 配置应用程序属性 357
11.7.2 配置应用程序签名 358
11.7.3 配置应用程序特性 359
11.7.4 配置应用程序构建类型 361
11.7.5 配置应用程序依赖 364
11.8 签名和打包 365
11.8.1 创建签名证书 365
11.8.2 生成签名的APK 366
11.8.3 自动打包和签名 370
11.8.4 混淆打包 371
11.8.5 多渠道打包 372
11.9 配置开发者服务 377
第12章  运行和调试 378
12.1 运行和调试配置 378
12.1.1 运行和调试配置 378
12.1.2 Android应用程序配置 379
12.2 运行应用程序 383
12.3 调试应用程序 384
12.4 断点 388
12.4.1 行断点 388
12.4.2 方法断点 388
12.4.3 字段观察点 389
12.4.4 条件断点 390
12.4.5 临时断点 390
12.4.6 异常断点 391
12.4.7 日志断点 391
12.4.8 禁用断点 392
12.4.9 断点设置 392
12.5 帧调试窗口 393
12.6 变量调试窗口 394
12.7 监视窗口 397
12.7.1 添加变量或表达式到监视窗口 398
12.7.2 快捷工具 399
12.8 调试控制工具 399
12.9 步进调试工具 403
12.10 计算表达式 405
12.10.1 在堆栈帧中计算表达式或代码片段 405
12.10.2 计算任意表达式 407
12.10.3 快速计算表达式的值 407
12.10.4 选中表达式立即显示表达式的值 408
12.11 关联调试到Android进程 408
12.12 配置和运行单元测试 409
12.12.1 配置和运行本地单元测试 409
12.12.2 使用命令行运行单元测试 412
12.12.3 配置Android单元测试 412
第13章  工具 414
13.1 任务 414
13.1.1 任务介绍和配置 414
13.1.2 打开任务 417
13.1.3 创建新任务 418
13.1.4 任务变更列表 419
13.1.5 切换/关闭任务 420
13.1.6 管理上下文 420
13.2 JavaDoc 421
13.2.1 配置JavaDoc 421
13.2.2 生成JavaDoc 422
13.3 将当前文件保存为模板 424
13.4 IDE Scripting Console 425
13.5 管理Android SDK 425
13.5.1 管理Android SDK平台 426
13.5.2 管理SDK开发工具和更新站点 428
13.6 管理Android模拟器 429
13.6.1 认识模拟器 429
13.6.2 创建模拟器 430
13.6.3 启动模拟器 431
13.7 即时运行 433
13.8 Android监视器 436
13.9 截图 440
13.10 录像 440
13.11 捕获系统信息 441
13.12 布局解析 443
13.13 Logcat监视器 445
13.14 内存监视器 450
13.14.1 Dump Java Heap 452
13.14.2 Allocation Tracking 456
13.15 CPU监视器 458
13.16 网络监视器 460
13.17 GPU监视器 460
13.18 APK分析器 461
13.19 主题编辑器 462
第14章  版本控制 466
14.1 版本控制系统 466
14.2 Git偏好设置 469
14.3 配置GitHub账户信息 470
14.4 从GitHub克隆代码 470
14.5 将本地项目共享到GitHub 471
14.6 查看本地变更历史 472
14.7 Git添加文件 474
14.8 Git提交变更 475
14.9 Git文件逐行追溯 476
14.10 显示当前修订版本 477
14.11 Git文件比较 478
14.12 Git撤销操作 479
14.13 Git版本回退 480
14.14 Git查看提交历史 481
14.15 Git分支管理 483
14.16 Git创建标签 486
14.17 Git合并分支 487
14.18 解决Git合并中的冲突 488
14.19 Git使用Rebase合并分支 489
14.20 Git暂存/恢复暂存变更 494
14.21 Git获取最新内容 496
14.22 Git合并最新内容 497
14.23 Git更新项目 497
14.24 刷新文件状态 499
14.25 Git补丁 500
14.26 Git搁置变更 501
14.27 查看Git项目的提交信息 502
第15章  窗口 504
15.1 最小化和最大化窗口 504
15.2 保存和恢复窗口布局 504
15.3 工具窗口的显示和隐藏 505
15.4 工具窗口的隐藏技巧 506
15.5 工具窗口调整技巧 507
15.6 移动工具窗口的位置 508
15.7 工具窗口的查看模式 509
15.8 编辑器标签设置 512
15.9 快速切换编辑器标签 513
15.10 关闭编辑器标签 514
15.11 管理编辑器标签 514
15.12 标签显示位置 515
15.13 拆分编辑器窗口 516
15.14 多个项目之间切换 517
第16章  偏好设置 518
16.1 外观与行为 518
16.1.1 设置工具提示的延迟时间 518
16.1.2 设置在状态栏显示内存状态 519
16.1.3 对菜单选项和工具栏的工具进行增/删改 519
16.2 系统设置 519
16.3 键盘映射 522
16.4 编辑器常规设置 523
16.4.1 设置单击编辑器光标定位在一行的结尾或定位在单击的位置 523
16.4.2 设置鼠标悬停在元素上会显示文档提示 523
16.4.3 设置是否自动换行 524
16.4.4 设置使用command 鼠标控制代码的缩放 526
16.4.5 开启使用驼峰单词 526
16.4.6 关闭单词拼写检查 527
16.4.7 设置代码折叠规则 527
16.5 设置自动导入 528
16.5.1 设置粘贴时自动导入包 528
16.5.2 设置自动导入需要的包 528
16.5.3 设置是否弹出导入提示 529
16.6 编辑器外观 530
16.6.1 设置编辑器一直显示行号 530
16.6.2 设置编辑器显示方法分隔符 530
16.6.3 设置编辑器显示空格 530
16.6.4 设置编辑器显示缩进向导 531
16.7 代码补全 531
16.7.1 设置自动补全时是否区分大小写 531
16.7.2 加快自动弹出代码补全提示的速度 532
16.7.3 关闭自动弹出代码补全提示 533
16.7.4 设置查看方法参数信息的时候显示方法签名 533
16.8 文件标签 534
16.8.1 设置用星号标记修改过的文件标签 534
16.8.2 设置打开的文件标签可以多行显示 534
16.8.3 设置文件标签的显示位置 535
16.8.4 设置文件标签超过一定数量时的关闭规则 535
16.9 编辑器颜色 536
16.9.1 设置是否显示条标和条标的显示颜色 536
16.9.2 设置控制台的颜色 537
16.9.3 设置控制台的字体 538
16.9.4 自定义代码的颜色 539
16.10 代码风格 541
16.10.1 设置Java注释按缩进显示 541
16.10.2 设置语句不要都显示在一行 541
16.10.3 设置Java简单的类合并为一行 542
16.10.4 设置Java字段和变量列对齐 542
16.10.5 设置自动生成字段名称时添加前缀 542
16.11 文件和代码模板 543
16.11.1 设置新建文件的注释模板 543
16.11.2 模板中内置的变量 544
16.11.3 设置新建类文件模板 544
16.11.4 设置IDE和项目的编码 545
16.11.5 对动态模板进行增删改查 545
16.11.6 设置展开代码的按键 547
16.11.7 给一个文件类型添加匹配规则 547
16.11.8 添加一个自定义的文件类型 547
16.11.9 设置忽略某类文件或文件夹 548
16.12 插件 549
16.12.1 安装插件 550
16.12.2 禁用插件 553
16.12.3 卸载插件 554
16.12.4 常用插件 555
16.13 编译和构建 556
16.13.1 设置Android Studio的内存参数 556
16.13.2 设置自动编译项目 556
16.13.3 设置并行编译 557
16.13.4 调整编译内存大小 557
附录  Android Studio重要版本发布时间线 559
参考资料 560
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通Android Studio
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android项目开发实战入门（全彩版）
Android开发之旅
第1章欢乐写数字（嵌套布局+OnTouchListener触摸事件+逐帧动画实现）
预备知识视频讲解：3小时44分
项目开发视频讲解：1小时37分
代码解释（在线扩展讲解）：24段
1.1开发背景
1.2系统功能设计
1.2.1系统功能结构
1.2.2系统业务流程
1.3创建项目
1.3.1系统开发环境要求
1.3.2系统文件夹组织结构
1.3.3创建新项目
1.4启动界面设计
1.4.1启动界面布局
1.4.2实现启动界面的全屏显示
1.4.3启动界面向游戏主界面的跳转
1.5游戏主界面设计
1.5.1游戏主界面布局
1.5.2实现游戏主界面全屏显示
1.5.3游戏主界面向选择数字界面的跳转
1.5.4游戏主界面向关于界面的跳转
1.5.5启动后自动播放背景音乐
1.5.6游戏背景音乐的开启与静音
1.5.7跳转界面时自动停止音乐
1.5.8返回当前界面时自动播放音乐
1.6选择数字界面设计
1.6.1选择数字界面布局
1.6.2实现选择数字界面全屏显示
1.6.3设置背景音乐
1.7数字1书写界面设计
1.7.1书写界面布局
1.7.2打开数字1的书写界面
1.7.3设置背景及默认图片
1.7.4实现数字1的书写功能
1.7.5实现书写未完成图片倒退显示
1.7.6播放数字儿歌
1.8演示动画对话框设计
1.8.1创建演示动画布局文件
1.8.2创建演示逐帧动画文件
1.8.3创建自定义对话框
1.8.4播放演示动画
1.9关于界面设计
1.9.1完成关于界面按钮和Logo的布局
1.9.2布局联系方式和版权
1.9.3实现关于界面全屏显示
1.9.4返回上一级界面
1.10本章总结
攻占Android大陆
Android大咖实战训练营
第2章魔镜（Camera对象+Canvas+BrokenView插件+声音播放实现）
预备知识视频讲解：3小时10分
项目开发视频讲解：3小时26分
代码解释（在线扩展讲解）：53段
2.1开发背景
2.2系统功能设计
2.2.1系统功能结构
2.2.2系统设计导图
2.3创建项目
2.3.1系统开发环境要求
2.3.2创建新项目
2.4启动页设计
2.4.1启动页概述
2.4.2资源准备
2.4.3创建启动页Activity
2.4.4代码输入错误处理
2.4.5启动页布局
2.4.6修改全局配置文件
2.5主窗体模块设计
2.5.1主窗体布局说明
2.5.2项目资源准备
2.5.3窗体底层布局
2.5.4底部焦距调节按钮布局
2.5.5镜框显示控件布局
2.5.6自定义顶部功能栏布局
2.5.7自定义画布控件布局
2.6摄像头设置
2.6.1模块概述
2.6.2规范类文件目录
2.6.3初始化操作
2.6.4获取摄像头
2.6.5打开前置摄像头
2.6.6设置摄像头方向
2.6.7显示摄像头图像
2.6.8主界面调取摄像头
2.6.9设置App访问权限
2.6.10连接手机执行程序
2.7焦距调节
2.7.1模块概述
2.7.2获取当前焦距
2.7.3调节焦距
2.7.4实现调节焦距按钮单击事件
2.8顶部功能栏的功能实现
2.8.1模块概述
2.8.2实现系统帮助
2.8.3实现功能栏按钮单击事件
2.8.4选择镜框
2.8.5亮度调节
2.9吹气起雾
2.9.1模块概述
2.9.2增加话筒管理类
2.9.3绘制起雾图层
2.9.4增加起雾显示效果
2.9.5实现吹气起雾
2.9.6擦除屏幕雾气
2.10碎屏
2.10.1碎屏概述
2.10.2使用第三方碎屏控件
2.10.3设置碎屏生命周期
2.10.4设置碎屏控件属性
2.10.5碎屏手势识别
2.10.6碎屏功能实现
2.11本章总结
攻占Android大陆
Android大咖实战训练营
第3章锁屏背单词（greendao+Spinner+sharePreference轻量级数据库实现）
预备知识视频讲解：2小时17分
项目开发视频讲解：2小时03分
代码解释（在线扩展讲解）：30段
3.1开发背景
3.2系统功能设计
3.2.1系统功能结构
3.2.2系统业务流程
3.3创建项目
3.3.1系统开发环境需求
3.3.2创建新项目
3.3.3导入图片资源
3.3.4导入数据库与语音资源
3.3.5创建数据库
3.3.6创建数据库解析单词的工具类
3.4锁屏界面设计
3.4.1绘制锁屏界面
3.4.2声明控件
3.4.3初始化控件
3.4.4同步手机系统时间
3.4.5选择词义时的操作
3.4.6获取数据库文件
3.4.7手势滑动事件的监听
3.4.8配置Manifest权限
3.5复习界面设计
3.5.1复习界面布局
3.5.2实现复习界面功能
3.6设置界面设计
3.6.1绘制开关按钮
3.6.2实现开关按钮的功能
3.6.3设置界面布局
3.6.4实现设置界面功能
3.7主界面设计
3.7.1自定义按钮样式
3.7.2绘制主界面布局
3.7.3创建BaseApplication对象
3.7.4声明BaseApplication
3.7.5锁屏状态监听
3.7.6实现主界面功能
3.8本章总结
攻占Android大陆
Android大咖实战训练营
第4章工具箱（Canvas+多线程+Camera+BroadcastReceiver广播实现）
预备知识视频讲解：3小时
项目开发视频讲解：2小时50分
代码解释（在线扩展讲解）：22段
4.1开发背景
4.2系统功能设计
4.2.1系统功能结构
4.2.2系统业务流程
4.3创建项目
4.3.1系统开发环境需求
4.3.2创建新项目
4.3.3导入资源
4.4项目首页设计
4.4.1首页圆盘菜单的布局
4.4.2首页圆盘菜单的调用
4.4.3运行项目到手机
4.4.4添加项目权限
4.5指南针功能设计
4.5.1使用传感器完成指南针功能
4.5.2取消传感器
4.6显示电池信息功能设计
4.6.1创建电池信息接收器
4.6.2电池信息布局
4.6.3实现显示电池信息功能
4.6.4实现电池图标单击功能
4.7放大镜功能设计
4.7.1布局放大镜界面
4.7.2实现相机预览功能
4.7.3实现焦距调节功能
4.7.4注册CamerActivity类
4.7.5实现主界面向放大镜界面的跳转
4.8工具尺功能设计
4.8.1自定义工具尺控件
4.8.2工具尺布局
4.8.3调用自定义工具尺控件
4.8.4注册RulerActivity类
4.8.5实现主界面向工具尺界面的跳转
4.9分贝测试仪功能设计
4.9.1分贝测试仪布局设计
4.9.2开启麦克风录制声音
4.9.3将声音转换成分贝值
4.9.4发送消息更新页面
4.9.5实现主界面向分贝测试仪界面的
跳转
4.10手电筒功能设计
4.10.1创建闪光灯工具类
4.10.2闪光灯充当手电筒功能
4.10.3闪光灯的销毁与启用
4.10.4手电筒菜单按钮添加单击事件
4.11本章总结
第5章静待花开（逐帧动画+属性动画+SQLite+自定义控件实现）
代码解释（在线扩展讲解）：12段
5.1开发背景
5.2系统功能设计
5.2.1系统功能结构
5.2.2系统业务流程
5.3本章目标
5.4资源准备
5.4.1导入工具类等资源文件
5.4.2创建MyDataHelper数据帮助类
5.5实现大雁飞翔的效果
5.5.1设置大雁的逐帧动画
5.5.2实现大雁飞翔的效果
5.6实现蒲公英飘落的效果
5.6.1创建数据模型DandelionModel类
5.6.2创建DandelionView类
5.6.3初始化绘制数据
5.6.4重写SurfaceHolder的回调方法
5.6.5绘制降落的蒲公英
5.6.6实现飘落的效果
5.7实现花开的效果
5.7.1创建Plant类
5.7.2添加子控件
5.7.3测量控件并设置宽高
5.7.4摆放Plant中的子控件
5.7.5设置组合动画
5.7.6设置接口回调
5.7.7设置用于控制动画效果的方法
5.7.8静待花开
5.8实现背景颜色渐变的效果
5.8.1创建属性动画xml文件
5.8.2设置背景渐变动画
5.9其他主要功能的展示
5.9.1名人名言列表
5.9.2说明界面
5.9.3选择要分享的花
5.9.4种花界面花枯萎的效果
5.10本章总结
第6章健康计步器（Fragment+Service+Receiver+传感器实现）
代码解释(在线扩展讲解)：12段
6.1开发背景
6.2系统功能结构
6.2.1系统功能结构
6.2.2系统业务流程
6.3开发准备
6.4计步功能的设计
6.4.1运动界面概述
6.4.2运动界面布局
6.4.3创建SportFragment类
6.4.4创建SportFragment的视图
6.4.5初始化数据
6.4.6初始化控件和设置控件
6.4.7获取天气预报网络资源
6.4.8获取计步步数
6.4.9显示数据
6.5计步服务功能的设计
6.5.1声明变量
6.5.2初始化计步服务
6.5.3管理服务的生命周期
6.6测试计步功能的设计
6.6.1测试界面的创建和布局的设置
6.6.2实现计步的功能
6.7食物热量对照表设计
6.7.1食物热量对照表概述
6.7.2界面布局
6.7.3显示数据
6.8其他主要功能的展示
6.8.1更改个人信息
6.8.2播放热身动画
6.8.3设置我的计划
6.8.4心率测试功能
6.9本章总结
第7章瞬间日记（SQLite数据库+MediaPlayer+自定义ScrollView控件实现）
代码解释（在线扩展讲解）：20段
7.1开发背景
7.2系统功能设计
7.2.1系统功能结构
7.2.2系统业务流程
7.3创建项目
7.3.1新建项目
7.3.2导入项目资源
7.4数据库与数据库表设计
7.4.1数据表结构
7.4.2创建数据库
7.4.3编写数据库实体类
7.5首页日记列表功能
7.5.1实现首页显示日记列表
7.5.2实现列表长按编辑/删除功能
7.6搜索功能设计
7.6.1按关键字搜索
7.6.2按日期搜索
7.7新增日记功能设计
7.7.1新增日记布局设计
7.7.2保存日记信息功能
7.7.3加载底部菜单
7.8日记分享功能设计
7.8.1实现获取日记内容生成图片
7.8.2分享图片
7.9设置/取消日记锁功能
7.9.1密码输入框设计
7.9.2设置取消日记锁
7.10手写保存功能
7.10.1自定义手写页面
7.10.2保存手写图片
7.11照片保存功能设计
7.11.1选择本地图片保存到日记
7.11.2调用相机拍照图片保存到日记
7.12语音保存功能设计
7.12.1开启语音录制
7.12.2返回录音的音频文件路径
7.13到时提醒功能设计
7.13.1自定义时间选择弹窗
7.13.2设置提醒时间
7.14本章总结
第8章外勤助手（百度地图+Vollry框架+录音+JSON数据解析实现）
代码解释（在线扩展讲解）：11段
界面预览
项目功能应用技术预览
攻占Android大陆
武林荣誉称号榜
特别提醒：
亲爱的读者朋友，为了使您更好地学习编程，在随书附赠的光盘中提供了一章拓展内容《外勤助手》，如果您学有余力，可以进一步进行学习。
（以下拓展内容在配书光盘中）
8.1开发背景
8.2系统功能设计
8.2.1系统功能结构
8.2.2系统业务流程
8.3系统开发必备
8.3.1系统开发环境要求
8.3.2后台服务器要求
8.3.3与后台Java服务器交互的主要接口
8.4导航的定位与路线规划设计
8.4.1申请密钥
8.4.2下载Android地图SDK
8.4.3导入Jar包
8.4.4绘制地图
8.4.5实现定位服务
8.4.6实现用户定位及路线规划
8.5考勤签到模块设计
8.5.1自定义签到日历控件
8.5.2初始化签到数据
8.5.3实现签到功能
8.5.4查询签到记录
8.6任务上报模块设计
8.6.1任务上报模块概述
8.6.2任务上报功能的实现
8.6.3查询历史数据
8.7业务分析模块设计
8.7.1使用饼状图分析订单数据
8.7.2使用线形图分析业绩排名
8.8其他功能展示
8.8.1客户界面拨打电话功能
8.8.2添加计划功能
8.8.3录音功能
8.8.4记录损耗费用支出明细
8.9本章总结
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android项目开发实战入门（全彩版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>零基础学Android（全彩版）
第1篇基础知识
第1章走进Android.2
视频讲解：46分
e学码：30个
1.1Android简介
1.1.1智能手机操作系统
1.1.2Android发展史
1.1.3Android系统架构
1.1.4Android应用领域
1.2搭建Android开发环境
1.2.1开发环境概述
1.2.2集成Android开发环境的下载
1.2.3集成Android开发环境的安装
1.3难点解答
1.3.1AndroidStudio为什么找不到AndroidSDK的位置
1.3.2如何查看AndroidSDK的官方API文档
1.4小结
第2章第一个Android应用
视频讲解：54分
精彩实例：1个
e学码：25个
2.1创建Android应用程序
2.2Android项目结构
2.3使用Android模拟器
2.4运行Android应用
2.4.1使用模拟器运行Android应用
2.4.2连接手机运行Android应用
2.5难点解答
2.5.1解决创建项目时出现Gradle同步失败的问题
2.5.2改变AVD的默认保存位置
2.6小结
第3章用户界面设计基础
视频讲解：4小时11分
精彩实例：8个
e学码：42个
3.1UI设计相关的概念
3.1.1View
3.1.2ViewGroup
3.2控制UI界面
3.2.1使用XML布局文件控制UI界面
3.2.2开发自定义的View类
3.3布局管理器
3.3.1相对布局管理器
3.3.2线性布局管理器
3.3.3帧布局管理器
3.3.4表格布局管理器
3.3.5网格布局管理器
3.3.6布局管理器的嵌套
3.4难点解答
3.4.1网格布局管理器和表格布局管理器的区别
3.4.2Padding和Margins的区别
3.5小结
3.6动手纠错
第4章常用UI组件
视频讲解：6小时34分
精彩实例：13个
e学码：34个
4.1文本类组件
4.1.1文本框
4.1.2编辑框
4.2按钮类组件
4.2.1普通按钮
4.2.2图片按钮
4.2.3单选按钮
4.2.4复选框
4.3进度条类组件
4.3.1进度条
4.3.2拖动条
4.3.3星级评分条
4.4图像类组件
4.4.1图像视图
4.4.2网格视图
4.5列表类组件
4.5.1下拉列表框
4.5.2列表视图
4.6难点解答
4.6.1如何设置图片按钮背景透明
4.6.2普通按钮与图片按钮的区别
4.7小结
4.8动手纠错
第2篇核心技术
第5章基本程序单元Activity
视频讲解：2小时09分
精彩实例：4个
e学码：17个
5.1Activity概述
5.2创建、配置、启动和关闭Activity
5.2.1创建Activity
5.2.2配置Activity
5.2.3启动和关闭Activity
5.3多个Activity的使用
5.3.1使用Bundle在Activity之间交换数据
5.3.2调用另一个Activity并返回结果
5.4使用Fragment
5.4.1Fragment的生命周期
5.4.2创建Fragment
5.4.3在Activity中添加Fragment
5.5难点解答
5.5.1如何让Activity的标题带图标
5.5.2Activity和Fragment的区别
5.6小结
5.7动手纠错
第6章Android应用核心Intent
视频讲解：42分
精彩实例：2个
e学码：4个
6.1初识Intent
6.1.1Intent概述
6.1.2Intent的基本应用
6.2Intent种类
6.2.1显式Intent
6.2.2隐式Intent
6.3Intent过滤器
6.3.1配置标记
6.3.2配置标记
6.3.3配置标记
6.4难点解答
6.4.1显式Intent与隐式Intent的区别
6.4.2Intent常用属性之间的联系
6.5小结
6.6动手纠错
第7章Android事件处理和手势
视频讲解：1小时43分
精彩实例：4个
e学码：5个
7.1事件处理概述
7.1.1基于监听的事件处理
7.1.2基于回调的事件处理
7.2物理按键事件处理
7.3触摸屏事件处理
7.3.1单击事件
7.3.2长按事件
7.3.3触摸事件
7.4手势检测
7.5难点解答
7.5.1单击事件与触摸事件的区别
7.5.2如何识别双指缩放手势
7.6小结
7.7动手纠错
第8章资源访问
视频讲解：2小时46分
精彩实例：7个
e学码：7个
8.1字符串（string）资源
8.1.1定义字符串资源文件
8.1.2使用字符串资源
8.2颜色（color）资源
8.2.1颜色值的定义
8.2.2定义颜色资源文件
8.2.3使用颜色资源
8.3尺寸（dimen）资源
8.3.1Android支持的尺寸单位
8.3.2使用尺寸资源
8.4布局（layout）资源
8.5数组（array）资源
8.5.1定义数组资源文件
8.5.2使用数组资源
8.6图像资源
8.6.1Drawable资源
8.6.2mipmap资源
8.7样式（style）资源
8.8菜单（menu）资源
8.8.1定义菜单资源文件
8.8.2使用菜单资源
8.9Android程序国际化
8.10难点解答
8.10.1dp与px的换算
8.10.2Drawable资源与mipmap资源的区别
8.11小结
8.12动手纠错
第9章消息、通知、广播与闹钟
视频讲解：2小时36分
精彩实例：4个
e学码：7个
9.1通过Toast类显示消息提示框
9.2使用AlertDialog类实现对话框
9.3使用Notification类在状态栏上显示通知
9.4BroadcastReceiver类的使用
9.4.1BroadcastReceiver类简介
9.4.2BroadcastReceiver类应用
9.5使用AlarmManager类设置闹钟
9.5.1AlarmManager简介
9.5.2设置一个简单的闹钟
9.6难点解答
9.6.1如何让AlertDialog类只有单击响应按钮时才关闭
9.6.2如何选择Toast类和AlertDialog类
9.7小结
9.8动手纠错
第10章动画与多媒体
视频讲解：2小时04分
精彩实例：6个
e学码：17个
10.1Android中的动画
10.1.1实现逐帧动画
10.1.2实现补间动画
10.2播放音频与视频
10.2.1使用MediaPlayer类播放音频
10.2.2使用SoundPool类播放音频
10.2.3使用VideoView组件播放视频
10.3控制摄像头拍照
10.4难点解答
10.4.1MediaPlayer与SoundPool的区别
10.4.2MediaController的作用
10.5小结
10.6动手纠错
第3篇高级应用
第11章数据存储技术
视频讲解：2小时57分
精彩实例：5个
e学码：26个
11.1SharedPreferences存储
11.1.1获得SharedPreferences对象
11.1.2向SharedPreferences文件存储数据
11.1.3读取SharedPreferences文件中存储的数据
11.2文件存储
11.2.1内部存储
11.2.2外部存储
11.3数据库存储
11.3.1创建数据库
11.3.2数据操作
11.4使用ContentProvider实现数据共享
11.4.1ContentProvider概述
11.4.2创建ContentProvider
11.4.3使用ContentProvider
11.5难点解答
11.5.1内部存储与外部存储的区别
11.5.2SharedPreferences存储与文件存储的区别
11.6小结
11.7动手纠错
第12章Handler消息处理
视频讲解：53分
精彩实例：2个
e学码：8个
12.1Handler消息传递机制
12.1.1Handler类简介
12.1.2Handler类中的常用方法
12.2Handler与Looper、MessageQueue的关系
12.3消息类（Message）
12.4循环者（Looper）
12.5难点解答
12.5.1Thread与Handler的区别
12.5.2Message常用属性的区别
12.6小结
12.7动手纠错
第13章Service应用
视频讲解：1小时05分
精彩实例：2个
e学码：12个
13.1Service概述
13.1.1Service的分类
13.1.2Service的生命周期
13.2Service的基本用法
13.2.1创建与配置Service
13.2.2启动和停止Service
13.3BoundService
13.4使用IntentService
13.5难点解答
13.5.1stopService()方法与stopSelf()方法的区别
13.5.2不同类型Service之间的区别
13.6小结
13.7动手纠错
第14章传感器与定位服务
视频讲解：3小时50分
精彩实例：7个
e学码：11个
14.1Android传感器概述
14.1.1Android的常用传感器
14.1.2开发步骤
14.2磁场传感器
14.3加速度传感器
14.4位置服务
14.4.1获取LocationProvider
14.4.2获取定位信息
14.5百度地图服务
14.5.1获得地图API密钥
14.5.2下载SDK开发包
14.5.3创建使用百度地图API的项目
14.5.4定位到我的位置
14.6难点解答
14.6.1如何使用百度地图AndroidSDK的开发指南
14.6.2如何使用百度定位AndroidSDK
14.7小结
14.8动手纠错
第15章网络编程及Internet应用
视频讲解：2小时32分
精彩实例：5个
e学码：14个
15.1通过HTTP访问网络
15.1.1发送GET请求
15.1.2发送POST请求
15.2解析JSON格式数据
15.2.1JSON简介
15.2.2解析JSON数据
15.3使用WebView显示网页
15.3.1使用WebView组件浏览网页
15.3.2让WebView支持JavaScript
15.4难点解答
15.4.1GET和POST请求的区别
15.4.2WebView支持JavaScript与不支持的区别
15.5小结
15.6动手纠错
第4篇项目实战
第16章51商城App——模拟手机京东
视频讲解：2小时10分
e学码：10个
16.1开发背景
16.2系统开发环境要求
16.3系统功能设计
16.3.1系统功能结构
16.3.2系统业务流程
16.4系统预览
16.4.1项目包结构预览
16.4.2界面预览
16.5公共类设计
16.5.1网络访问类
16.5.2Activity基类
16.5.3带标题栏的Activity基类
16.5.4Fragment基类
16.6商城首页设计
16.6.1商城首页概述
16.6.2服务器端接口
16.6.3文件关系图
16.6.4布局商城首页
16.6.5实现底部Fragment切换
16.6.6实现下拉刷新和上拉加载商品列表功能
16.6.7实现广告轮播效果
16.7购物车模块设计
16.7.1购物车模块概述
16.7.2服务器端接口
16.7.3文件关系图
16.7.4实现显示商品详细信息功能
16.7.5实现添加商品到购物车功能
16.7.6实现查看购物车功能
16.7.7角标显示购物车商品数量
16.7.8实现结算功能
16.8小结
附录1常用快捷键
附录2实例索引
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>零基础学Android（全彩版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>玩转Android平板电脑
第1章  Android平板电脑初体验
第2章  Android软件安装和管理
第3章  Android平板电脑系统管理
第4章  平板电脑数据同步和备份
第5章  Android谷歌应用专区
第6章  Android平板电脑屏幕美化
第7章  Android平板电脑商务办公
第8章  Android平板电脑网络生活
第9章  Android平板电脑轻松娱乐
第10章  Android平板电脑生活帮手
第11章  Android平板电脑游游戏随身玩
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>玩转Android平板电脑
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android开发模式与最佳实践
1 开发工具1
Android Studio 1
安装Android Studio 2
使用Android Studio 4
启动一个新项目 6
独立的SDK工具 9
安卓设备模拟 10
安卓虚拟设备 11
GenyMotion 12
Xamarin安卓播放器 13
版本控制系统 14
Subversion 14
Git 15
Mercurial 15
总结 16
2 测试和调试17
单元测试 17
集成测试 20
调试 25
Profiling 25
Tracing  28
Messaging  29
总结  32
3 应用结构 33
Manifest  34
Java  37
Res（Resources）  37
Drawable  37
Layout  39
Menu  40
Values  40
其他Resource  41
Gradle  42
总结  43
4 组件 45
Intent  45
Intent Filter  46
Broadcast Receiver  47
Activity  48
创建一个Activity  49
Activity 生命周期  50
Fragment  52
创建一个Fragment  53
与Fragment 通信  56
Loader  57
总结  59
5 View 61
View 类  61
AnalogClock 子类  62
ImageView 子类  62
KeyboardView 子类  63
MediaRouteButton 子类  64
ProgressBar 子类  65
Space 子类  66
SurfaceView 子类  67
TextView 子类  68
TextureView 子类  68
ViewGroup 子类  69
ViewStub 子类  71
创建一个定制的View  71
总结  74
6 Layout 75
Layout 基础  75
Layout Measurement  76
Layout 坐标  77
Layout Container  78
Linear Layout  79
Relative Layout  80
Table Layout  83
Frame Layout  86
WebView  87
总结  88
7 App Widget 89
App Widget Layout  90
AppWidgetProviderInfo 对象  93
App Widget 尺寸  94
更新频率  94
预览图片  95
Widget Category  96
Widget Category 布局  97
Resizable 模式  97
AppWidgetProviderInfo 对象实例  98
AppWidgetProvider 类  98
应用Manifest 条目  101
总结  102
8 应用设计：使用MVC  103
Model  104
View 105
Controller  106
异步处理  108
AsyncTask  109
总结  110
9 绘图和动画 111
图形  111
Bitmap  111
NinePatch  113
Drawable  115
OpenGL ES  118
动画  122
View 动画  122
Property 动画  123
Drawable 动画  127
Transition 框架  128
总结  131
10 网络 133
访问Internet  133
网络检测  133
使用HTTP 客户端  135
解析XML  137
网络操作异步处理  139
Volley  141
总结  145
11 Location 数据处理 147
权限  147
Google Play Service Location API  157
总结  163
12 多媒体 165
Audio 处理  165
Audio Playback  166
Audio 录制  170
Video 处理  172
Video Playback  172
总结  176
13 可选Hardware API 177
蓝牙  177
开启蓝牙  178
使用蓝牙发现设备  179
使用传统的蓝牙连接  181
使用BLE 通信  184
近场通信（NFC）  188
ACTION_NDEF_DISCOVERED  189
ACTION_TECH_DISCOVERED  190
ACTION_TAG_DISCOVERED  191
设备传感器  194
检测可用的传感器  195
读传感器数据  197
总结  199
14 管理账户数据 201
获取账户  201
安卓备份服务  203
使用Google Drive 安卓API  205
使用Google Play Game 服务  210
保存游戏  211
总结  215
15 Google Play Service 217
添加Google Play Service  217
使用Google API 客户端  219
Google Fit  223
开启API 和鉴权  224
App 配置和连接  225
Nearby Message API  226
开启Nearby Message  226
发送和接收消息  227
总结  232
16 Android Wear 233
Android Wear 基础  233
屏幕处理  234
调试  237
连接模拟器  237
连接穿戴式设备  239
与安卓可穿戴式设备通信  240
Notification  241
发送数据  243
总结  245
17 Google Analytics 247
添加Google Analytics  247
Google Analytics 基础  250
事件  251
目标  252
电子商务  253
定制时序  254
定制维度  254
定制度量  255
总结  255
18 优化 257
应用优化  257
应用首次启动  257
应用日志  259
应用配置  260
内存管理  262
垃圾回收监控  263
检查内存使用  264
性能  265
处理对象  266
静态函数和变量  266
For 循环增强  266
Float、double 和int  267
优化数据容器  267
总结  268
19 Android TV 269
概况  269
十英尺视图  270
TV 能力  272
文字、颜色和图片  274
创建一个App  277
模拟和测试  280
总结  282
20 应用部署 283
准备部署  283
物件清单  284
认证密钥  284
联系邮箱  284
应用网站  285
外部服务或服务器  285
应用图标  285
许可证  286
合适的包名  286
验证权限和需求  287
去掉Log 和调试信息  288
去掉多余无用的东西  288
Google Play 相关准备  288
应用截图  289
推广视频  289
高分辨率图标  289
功能图  290
推广图  290
安卓电视条幅  290
付费  291
生成APK  291
总结  292
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android开发模式与最佳实践
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android 移动应用基础教程
第一章　Android基础入门
1.1  Android简介
1.1.1  通信技术
1.1.2  Android起源
1.1.3  Android体系结构
1.1.4  Dalvik虚拟机
1.2  Android开发环境搭建
1.2.1  ADT Bundle
开发工具集合
1.2.2  Android调试桥(ADB)
1.2.3  DDMS的使用
1.3  开发第一个Android程序
1.3.1  案伊卜——HelloWorld程序
1.3.2  Android程序结构
1.3.3  Android程序打包过程
小结
习题
第二章　Android UI开发
2.1  UI概述
2.2  布局文件的创建
2.3  布局的类型
2.3.1  相对布局
(RelativeLayout)
2.3.2  线性布局
(LinearLayout)
2.3.3  表格布局
(TableLayout)
2.3.4  网格布局(GfidLayout)
2.3.5  帧布局(FrameLayout)
2.3.6  绝对布局
(AbsoluteLayout)
2.3.7  案例——用户注册
2.4样式和主题
2.4.1  样式和主题的使用
2.4.2  案例——自定义样式和
主题
2.5  国际化
2.6  程序调试
2.6.1  JUnit单元测试
2.6.2  LogCat的使用
2.6.3  Toast的使用
小结
习题
第三章　Activity
3.1  Activity入门
3.1.1  Activity简介
3.1.2  Activity的创建
3.1.3 Activity 生命周期
3.1.4  案例——Activity的
存活
3.2  Activity的启动模式
3.2.1  Android下的任务栈
3.2.2  Activity的4种
启动模式
3.3  在Activity中使用Intent
3.3.1  Intent介绍
3.3.2  显式意图和隐式意图
3.3.3  案例——打开
系统照相机
3.4  Activity中的数据传递
3.4.1  数据传递方式
3.4.2  案例——用户注册
3.4.3  回传数据
3.4.4  案例——装备选择
小结
习题
第四章　数据存储
第五章　SQLite数据库
第六章　内容提供者
第七章　广播接收者
第八章　服务
第九章　网络编程
第十章　高级编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android 移动应用基础教程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android核心技术与实例详解
基  础  篇
第1章  Android开发起步	1
本章将要介绍的是Android开发起步的相关知识，首先对Android平台进行简单的介绍，其中包括Android的背景及其应用程序的框架。然后会向读者讲解如何搭建Android的开发环境、如何在Eclipse中创建一个项目，以及如何使用Android平台提供的工具调试和监控应用程序。

1.1  Android平台简介	1
1.1.1  Android背景介绍	1
1.1.2  Android平台架构	2
1.2  Android开发环境的搭建	4
1.2.1  相关软件的下载与安装	4
1.2.2  虚拟设备的创建和使用	10
1.2.3  创建“Hello Android”	12
1.2.4  Android应用程序的调试	16
1.3  小结	18

第2章  Android应用程序的构成	19
本章将对Android应用程序的生命周期进行分析，主要目的是让读者了解Android应用程序的构成，掌握Android基本组件的特性及使用方法。

2.1  Android应用程序的解析	19
2.1.1  目录结构	19
2.1.2  资源的管理与使用	20
2.1.3  AndroidManifest.xml简介	23
2.1.4  应用程序的权限	24
2.2  Android基本组件的介绍	25
2.2.1  应用程序的生命周期	25
2.2.2  Activity简介	26
2.2.3  Service简介	28
2.2.4  BroadcastReceiver简介	32
2.2.5  ContentProvider简介	33
2.2.6  Intent和IntentFilter简介	34
2.3  小结	38

第3章  Android布局管理器	39
本章要介绍的内容为Android平台下的布局管理器。Android中的布局包括线性布局、表格布局、相对布局、帧布局和绝对布局。下面将分别对每个布局管理器进行详细的介绍。

3.1  控件类概述	39
3.1.1  View类简介	39
3.1.2  ViewGroup类简介	40
3.2  线性布局	40
3.2.1  LinearLayout类简介	40
3.2.2  线性布局案例	41
3.3  表格布局	43
3.3.1  TableLayout类简介	43
3.3.2  表格布局案例	44
3.4  相对布局	48
3.4.1  RelativeLayout类简介	49
3.4.2  相对布局案例	50
3.5  帧布局	51
3.5.1  FrameLayout类简介	51
3.5.2  帧布局案例	52
3.6  绝对布局	54
3.6.1  AbsoluteLayout类简介	54
3.6.2  绝对布局案例	54
3.7  小结	57

第4章  Android常用基本控件	58
本章将对进行用户界面开发时常用到的Android基本控件进行介绍，主要包括文本框、按钮、单选按钮和复选按钮、状态开关按钮和日期时间控件等。了解这些基本控件的工作方式有助于学习后面要介绍的Android中的高级控件。

4.1  文本控件的介绍	58
4.1.1  TextView类简介	58
4.1.2  EditText类简介	59
4.1.3  文本框使用案例	59
4.2  按钮控件	63
4.2.1  Button类简介	63
4.2.2  ImageButton类简介	66
4.2.3  9Patch图片简介	67
4.2.4  9Patch图片使用案例	68
4.3  状态开关按钮	70
4.3.1  ToggleButton类简介	70
4.3.2  开关按钮的使用	71
4.4  单选按钮与复选框	73
4.4.1  CheckBox和RadioButton类简介	73
4.4.2  单选按钮和复选框使用案例	74
4.5  图片控件	76
4.5.1  ImageView类简介	76
4.5.2  图片查看器	77
4.6  时钟控件	81
4.6.1  AnalogClock和DigitalClock类简介	81
4.6.2  时钟控件使用案例	81
4.7  日期与时间选择控件	82
4.7.1  DatePicker类简介	82
4.7.2  TimePicker类简介	82
4.7.3  日期时间控件使用案例	83
4.8  动画播放技术	85
4.8.1  帧动画简介	85
4.8.2  帧动画使用案例	85
4.8.3  补间动画简介	88
4.8.4  补间动画使用案例	89
4.9  小结	91

第5章  Android常用高级控件	92
上一章已经介绍了Android中的一些基本控件，本章将继续上一章的思路，对Android中常用的高级控件进行逐一介绍。

5.1  自动完成文本框	92
5.1.1  AutoCompleteTextView类简介	92
5.1.2  自动完成文本使用案例	92
5.2  滚动视图	94
5.2.1  ScrollView类简介	94
5.2.2  滚动视图使用案例	94
5.3  网格视图	95
5.3.1  GridView类简介	95
5.3.2  网格视图使用案例	95
5.4  列表视图	100
5.4.1  ListView类简介	100
5.4.2  列表视图使用案例	100
5.5  滑块与进度条	103
5.5.1  ProgressBar类简介	104
5.5.2  SeekBar类简介	104
5.5.3  滑块和进度条案例	104
5.6  星级滑块	105
5.6.1  RatingBar类简介	105
5.6.2  星级滑块使用案例	106
5.7  选项卡	107
5.7.1  TabHost类简介	107
5.7.2  选项卡使用案例	107
5.8  画廊控件	111
5.8.1  Gallery类简介	111
5.8.2  画廊控件使用案例	112
5.9  HorizontalScrollView控件	113
5.9.1  HorizontalScrollView类简介	114
5.9.2  HorizontalScrollView控件使用案例	114
5.10  下拉列表控件	116
5.10.1  Spinner类简介	116
5.10.2  下拉列表使用案例	116
5.11  小结	119

第6章  菜单与对话框	120
在前面的章节中介绍了Android平台开发用户界面时常用的基本控件与高级控件，但在实际开发中只运用这些控件是不够的。本章将介绍用户界面中菜单与对话框的开发，同时还会对Android平台下的Toast和Notification进行介绍。

6.1  菜单功能的开发	120
6.1.1  选项菜单和子菜单简介	120
6.1.2  选项菜单和子菜单使用案例	122
6.1.3  上下文菜单	127
6.2  对话框功能的开发	130
6.2.1  对话框简介	131
6.2.2  普通对话框	131
6.2.3  列表对话框	134
6.2.4  单选按钮对话框	136
6.2.5  复选框对话框	139
6.2.6  日期及时间选择对话框	141
6.2.7  进度对话框	145
6.3  消息提示	148
6.3.1  Toast的使用	148
6.3.2  Notification的使用	150
6.4  小结	153

第7章  Android事件处理模型	154
本章将对Android平台用户界面的各种事件响应进行详细介绍，以加深读者对Android平台的事件处理模型的理解，熟练掌握控件的各种事件处理方法。
Android平台的事件处理机制有两种，一种是基于回调机制的，一种是基于监听接口的，接下来会分别对其进行介绍。

7.1  基于回调机制的事件处理	154
7.1.1  onKeyDown方法简介	154
7.1.2  onKeyUp方法简介	156
7.1.3  onTouchEvent方法简介	157
7.1.4  onTrackBallEvent方法简介	159
7.1.5  onFocusChanged方法简介	160
7.2  基于监听接口的事件处理	162
7.2.1  Android的事件处理模型	162
7.2.2  OnClickListener接口简介	163
7.2.3  OnLongClickListener接口简介	165
7.2.4  OnFocusChangeListener接口简介	168
7.2.5  OnKeyListener接口简介	171
7.2.6  OnTouchListener接口简介	174
7.2.7  OnCreateContextMenuListener接口简介	176
7.3  Handler消息传递机制	177
7.3.1  Handler类简介	177
7.3.2  Handler使用案例	177
7.4  小结	180

高 级 篇
第8章  游戏与3D应用程序开发	181
Android平台下的应用开发，一般来说主要分为商业应用和游戏两种，在开发商业应用时主要会用到本书前面章节曾介绍过的控件和菜单对话框等知识，而开发游戏时就只能自己定义各种控件和界面了。本章将要介绍如何在Android平台下使用View和SurfaceView开发游戏，在本章的最后还将对Android平台下进行3D场景的开发进行简单的介绍。

8.1  自定义View的使用	181
8.1.1  MyView类的开发	181
8.1.2  MyThread类的开发	184
8.1.3  Activity部分代码的开发	185
8.2  SurfaceView的使用	186
8.2.1  GameView类的开发	187
8.2.2  BallGoThread类的开发	191
8.2.3  TimeThread类的开发	194
8.2.4  GameViewDrawThread类的开发	195
8.2.5  Sample_8_2类的开发	196
8.3  GLSurfaceView与3D	196
8.3.1  OpenGL ES简介	197
8.3.2  3D开发的基本知识	197
8.3.3  第一个3D图形示例	198
8.3.4  3D谷仓的开发	203
8.4  小结	208

第9章  消息广播与服务	209
本章将对Android的消息广播机制及服务组件进行详细介绍。在很多应用程序中，都会通过广播形式来发送和接收消息。当应用程序接收到消息后，一般启动一个Activity或者一个Service进行处理。本章将对之前介绍过的服务组件Service进行详细介绍，章末通过对一个单机版的音乐播放盒的介绍帮助读者掌握服务组件的使用方法。

9.1  BroadcastReceiver组件	209
9.1.1  BroadcastReceiver类简介	209
9.1.2  基于广播的案例	210
9.2  Service组件	213
9.2.1  Service类简介	213
9.2.2  基于服务的案例	213
9.3  单机版音乐盒的实现	217
9.4  小结	225

第10章  网络与数据处理	226
本章要介绍的内容是Android平台下进行网络编程及数据处理的相关知识，内容包括网络通信的几种方式（如使用Socket、URL、Socket等）、如何使用WebView浏览网页，以及文件的上传和下载。最后介绍访问手机存储卡的方法及如何在程序中使用SQLite数据库。

10.1  使用Socket进行通信	226
10.1.1  Socket服务端的开发	226
10.1.2  Socket客户端的开发	227
10.2  通过URL和HTTP请求获取网络资源	228
10.2.1  通过URL获取网络资源	228
10.2.2  通过HTTP请求网络资源	232
10.3  使用WebView进行网络开发	237
10.3.1  使用WebView浏览网页	237
10.3.2  使用WebView执行HTML代码	241
10.4  SQLite数据库	244
10.4.1  数据库的基本操作	244
10.4.2  个人通信录的实现之资源文件的组织和开发	245
10.4.3  个人通信录的实现之功能代码的开发	248
10.5  访问存储卡	253
10.5.1  获取存储卡容量	253
10.5.2  读取存储卡信息	256
10.6  小结	257

第11章  手机通信功能开发	258
本章将对Android手机通信功能的开发进行介绍，其中包括短信的收发及状态查询、电话的拨打与接听、来电的过滤和E-mail邮件的收发等，通过本章的学习，读者应该能够对Android平台手机通信功能有一定的了解。

11.1  短信控制	258
11.1.1  短信的发送	258
11.1.2  短消息提示	262
11.1.3  短消息群发	265
11.1.4  查询发送状态	270
11.2  电话控制	272
11.2.1  拨打电话	272
11.2.2  过滤电话	277
11.2.3  查询当前状态	278
11.3  E-mail相关功能开发	279
11.3.1  SMTP协议简介	280
11.3.2  发送E-mail	280
11.4  小结	280

第12章  手机特有Feature开发	281
本章将要介绍的是Android手机特有Feature的开发，主要包括响应系统设置更改事件、设置手机外观和其他的特性。同时还将介绍如何在程序中获取SIM卡和电池电量等信息，最后将以手机闹钟为例讲述如何自己开发特定功能的手机应用。

12.1  系统设置更改的事件	281
12.1.1  Configuration类简介	281
12.1.2  响应Configuration的变化	282
12.2  手机外观更改和提醒设置	284
12.2.1  手机壁纸的改变	285
12.2.2  手机振动的设置	288
12.2.3  音量调节	292
12.3  TelephonyManager的使用	296
12.3.1  TelephonyManager类简介	296
12.3.2  TelephonyManager的使用案例	296
12.4  手机电池电量	300
12.4.1  原理概述	300
12.4.2  电量提示案例	300
12.5  手机闹钟	302
12.5.1  AlarmManager简介	302
12.5.2  开发闹钟应用	302
12.6  小结	306

第13章  桌面组件与多媒体数据采集	307
本章将介绍Android中桌面组件及多媒体相关程序的开发，其中包括桌面快捷方式、桌面控件、声音及图像的采集等。

13.1  桌面组件的介绍	307
13.2  桌面快捷方式	307
13.2.1  通过应用程序创建快捷方式	307
13.2.2  向Launcher添加快捷方式	310
13.3  桌面控件	311
13.3.1  桌面控件概述	311
13.3.2  开发简单的桌面控件	312
13.4  多媒体数据采集	314
13.4.1  录音	314
13.4.2  图像采集	317
13.5  小结	321

第14章  传感器应用的开发	322
Android系统的一大亮点之一就是对传感器的应用，利用传感器可以开发出很多新奇有趣的程序，小到水平仪、计步器，大到传感器游戏，本章将详细介绍各种传感器的原理及使用方法，并通过一个水平仪的开发向读者介绍传感器应用的开发方法，以及如何在模拟器中模拟各种传感器。

14.1  Android平台下传感器简介	322
14.1.1  加速度传感器Accelerometer	322
14.1.2  姿态传感器Orientation	327
14.1.3  磁场传感器Magnetic Field	330
14.1.4  温度传感器Temperature	332
14.1.5  光传感器Light	335
14.2  传感器应用案例	336
14.2.1  开发前的准备工作	336
14.2.2  自定义View的开发	336
14.2.3  开发主逻辑代码	337
14.2.4  运行与调试	340
14.3  小结	341

第15章  Google服务	342
本章将介绍如何在Android平台下开发基于Google服务的应用程序。Google提供了诸如GPS定位、Google Map、天气预报、网络相册和在线翻译等多种服务，将这些服务融合到应用程序中将会带来非常好的用户体验。

15.1  使用GPS获取位置	342
15.1.1  LocationManager及相关类简介	342
15.1.2  获取位置信息案例	343
15.2  Google Map的使用	346
15.2.1  获取Map API Key	346
15.2.2  创建模拟器	348
15.2.3  Google Map地图查询应用	350
15.2.4  Google Map导航应用	355
15.3  Google街景	360
15.3.1  Android整合Google街景服务的原理	360
15.3.2  在程序中调用Google街景	361
15.4  小结	363

案 例 篇
第16章  Android游戏开发实践——快乐数独	364
益智类游戏是一种比较流行的游戏，其画面大都比较简单，很少有很复杂的游戏特效，但是通常用到人工智能的算法来控制游戏的难度。而算法的优化是开发该类游戏的难点。这类游戏主要包括棋牌类游戏和智力测试类游戏，例如麻将、扫雷、五子棋、扑克牌等。
数独就是益智游戏的一种，玩法简单但数字的排列方式千变万化，很多人认为数独是训练头脑的绝佳方式。本章通过讲解数独游戏在Android平台上的设计与实现，使读者了解此类游戏的开发过程，掌握实用的开发技巧，学会此类游戏的开发。

16.1  游戏的背景及功能概述	364
16.1.1  背景概述	364
16.1.2  功能简介	365
16.2  游戏的策划及准备工作	366
16.2.1  游戏的策划	366
16.2.2  Android平台下游戏的准备工作	366
16.3  游戏的架构	367
16.3.1  各类的简要介绍	367
16.3.2  游戏的框架简介	368
16.4  欢迎界面的设计与实现	369
16.4.1  主类KLSDActivity实现	369
16.4.2  欢迎界面WelcomeView类的实现	371
16.4.3  刷帧线程WelcomeViewDrawThread类的实现	374
16.4.4  动画生成线程WelcomeViewGo- Thread类的实现	375
16.5 “帮助”与“关于”界面的设计与实现	376
16.5.1 “帮助”界面HelpView类的实现	376
16.5.2 “关于”界面AboutView的实现	377
16.6  游戏界面的框架搭建	379
16.7  计时线程与数字键盘线程的开发	381
16.7.1  计时线程的开发	381
16.7.2  数字键盘线程的开发	382
16.8  数独生成器的开发	383
16.9  游戏界面逻辑方法的实现	385
16.9.1  初始化方法的完善	385
16.9.2  简单逻辑方法的完善	387
16.9.3  屏幕事件处理方法的完善	388
16.10  游戏界面绘画方法的完善	392
16.10.1  数字键盘的绘制方法drawKey ()的完善	392
16.10.2  绘画方法onDraw()的完善	393
16.11  游戏界面刷帧线程的实现	396
16.12  游戏的优化与改进	397

第17章  Android地图搜索应用——美食天下	398
第15章已经介绍了Google Map的简单使用，本章将通过之前介绍过的知识实现一个美食共享软件，其中包括服务端和手机端，希望通过本章的学习，读者能够掌握Android系统与Tomcat服务器的通信、Google地图的使用及各种控件的综合应用。

17.1  系统背景及功能概述	398
17.1.1  背景简介	398
17.1.2  功能概述	398
17.1.3  开发环境及目标平台	399
17.2  开发前的准备工作	400
17.2.1  数据库的设计	400
17.2.2  表的创建与记录插入	405
17.2.3  数据源的配置	406
17.3  Web端总体架构及功能预览	406
17.3.1  目录结构及系统框架	407
17.3.2  功能预览	408
17.4  Web端登录注册模块的实现	409
17.4.1  首页的搭建	409
17.4.2  用户注册功能的开发	415
17.4.3  用户登录功能的开发	420
17.4.4  用户注销功能的开发	422
17.5  Web端美食上传模块的实现	423
17.5.1  页面的搭建	423
17.5.2  图片上传组件FileUploadServlet的开发	426
17.5.3  DBUtil中相关方法的开发	428
17.6  Android端总体架构及功能预览	430
17.6.1  功能预览	430
17.6.2  总体架构	432
17.7  服务器的设计与实现	433
17.8  Android端登录界面的实现	436
17.8.1  开发前的准备工作	436
17.8.2  框架的搭建	437
17.8.3  监听方法的完善	440
17.8.4  记住密码功能的实现	442
17.8.5  服务器端的完善	443
17.9  Android端注册界面的实现	444
17.9.1  框架的搭建	444
17.9.2  监听方法的完善	446
17.9.3  服务器端的完善	447
17.10  Android端主界面MainActivity的实现	449
17.10.1  布局文件的开发	449
17.10.2  界面框架的搭建	450
17.10.3  初始化方法的完善	452
17.10.4  监听方法的完善	453
17.10.5  网络处理线程的实现	455
17.10.6  服务器端的完善	457
17.11  Android端地图界面的实现	460
17.11.1  布局文件的开发	461
17.11.2  地图界面的开发	461
17.12  美食信息界面的实现	464
17.13  系统的优化与改进	466

第18章  Android社交分享平台——口袋微博	467
本章将介绍社交分享平台——口袋微博的实现，该社交分享平台包括Web端和Android手机端两个部分。在介绍了整个系统的背景及功能架构之后，本书将对该系统在Web端和Android手机端的实现进行介绍。

18.1  系统背景及功能概述	467
18.1.1  背景简介	467
18.1.2  功能概述	467
18.1.3  开发环境和目标平台	468
18.2  开发前的准备工作	469
18.2.1  数据库设计	469
18.2.2  表的创建和测试数据的插入	474
18.2.3  数据源的配置	475
18.3  Web端功能预览及总体架构	476
18.3.1  Web端系统功能预览	476
18.3.2  系统目录结构	477
18.3.3  系统总架构	478
18.4  Web端主页的搭建	478
18.5  Web端登录注册模块的实现	480
18.5.1  用户登录功能的开发	480
18.5.2  用户注册功能的开发	483
18.5.3  用户注销功能的开发	486
18.6  查看和管理日志模块的实现	486
18.6.1  发布日志功能的开发	486
18.6.2  显示日志及评论功能的开发	488
18.6.3  编辑和删除日志功能的开发	490
18.7  查看和管理相册模块的实现	491
18.7.1  查看相册功能的开发	492
18.7.2  查看相册相片功能的实现	493
18.7.3  显示照片功能的实现	494
18.8  Android端功能预览及总体架构	495
18.8.1  Android端功能预览	495
18.8.2  Android端总架构	497
18.9  服务器的设计与实现	498
18.9.1  服务器的设计	498
18.9.2  服务器的实现	498
18.10  Android端的准备工作	501
18.10.1  图片资源的准备	501
18.10.2  XML资源文件的准备	501
18.11  登录注册模块的实现	503
18.11.1  登录模块的开发	503
18.11.2  记录账号密码功能的开发	508
18.11.3  服务器验证登录功能的实现	509
18.11.4  注册模块的开发	509
18.12  个人中心模块的实现	513
18.12.1  个人中心界面的开发	513
18.12.2  个人中心界面菜单功能的开发	515
18.13  快速发布模块的实现	516
18.13.1  发布日志和更新心情功能的实现	516
18.13.2  拍照上传界面的开发	518
18.13.3  UploadActivity通信功能的开发	522
18.14  查看联系人模块的实现	526
18.14.1  ContactsActivity界面的开发	526
18.14.2  ContactsActivity通信功能的开发	528
18.15  日志管理模块的实现	528
18.15.1  查看日志功能的开发	529
18.15.2  编辑日志功能的开发	531
18.16  相册管理模块的实现	531
18.16.1  相册查看和修改功能的实现	531
18.16.2  相片查看功能的实现	534
18.17  系统的优化与改进	536
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android核心技术与实例详解
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android系统源代码情景分析（第三版）
第1篇 初识Android系统
第1章　准备知识2
1.1　Linux内核参考书籍2
1.2　Android应用程序参考书籍3
1.3　下载、编译和运行Android源代码3
1.3.1　下载Android源代码5
1.3.2　编译Android源代码6
1.3.3　运行Android模拟器7
1.4　下载、编译和运行Android内核源代码8
1.4.1　下载Android内核源代码8
1.4.2　编译Android内核源代码8
1.4.3　运行Android模拟器9
1.5　开发第一个Android应用程序10
1.6　单独编译和打包Android应用程序模块12
1.6.1　导入单独编译模块的mmm命令12
1.6.2　单独编译Android应用程序模块13
1.6.3　重新打包Android系统镜像文件13
1.7　为真机编译ROM14
1.7.1　下载LineageOS16
1.7.2　下载设备开源代码16
1.7.3　下载设备私有文件17
1.7.4　编译ROM17
1.7.5　刷入TWRP17
1.7.6　刷入ROM19
第2章　硬件抽象层21
2.1　开发Android硬件驱动程序22
2.1.1　实现内核驱动程序模块22
2.1.2　修改内核Kconfig文件29
2.1.3　修改内核Makefile文件30
2.1.4　编译内核驱动程序模块30
2.1.5　验证内核驱动程序模块31
2.2　开发C可执行程序验证Android硬件驱动程序32
2.3　开发Android硬件抽象层模块34
2.3.1　硬件抽象层模块编写规范34
2.3.2　编写硬件抽象层模块接口37
2.3.3　硬件抽象层模块的加载过程41
2.3.4　处理硬件设备访问权限问题44
2.4　开发Android硬件访问服务46
2.4.1　定义硬件访问服务接口46
2.4.2　实现硬件访问服务47
2.4.3　实现硬件访问服务的JNI方法48
2.4.4　启动硬件访问服务51
2.5　开发Android应用程序来使用硬件访问服务52
第3章　智能指针57
3.1　轻量级指针58
3.1.1　实现原理分析58
3.1.2　应用实例分析61
3.2　强指针和弱指针62
3.2.1　强指针的实现原理分析63
3.2.2　弱指针的实现原理分析69
3.2.3　应用实例分析75
第2篇　Android专用驱动系统
第4章　Logger日志系统82
4.1　Logger日志格式83
4.2　Logger日志驱动程序84
4.2.1　基础数据结构85
4.2.2　日志设备的初始化过程86
4.2.3　日志设备文件的打开过程91
4.2.4　日志记录的读取过程92
4.2.5　日志记录的写入过程96
4.3　运行时库层日志库101
4.4　C/C++日志写入接口108
4.5　Java日志写入接口112
4.6　Logcat工具分析118
4.6.1　基础数据结构119
4.6.2　初始化过程123
4.6.3　日志记录的读取过程135
4.6.4　日志记录的输出过程140
第5章　Binder进程间通信系统152
5.1　Binder驱动程序153
5.1.1　基础数据结构154
5.1.2　Binder设备的初始化过程172
5.1.3　Binder设备文件的打开过程173
5.1.4　Binder设备文件的内存映射过程174
5.1.5　内核缓冲区管理181
5.2　Binder进程间通信库191
5.3　Binder进程间通信应用实例196
5.4　Binder对象引用计数技术204
5.4.1　Binder本地对象的生命周期205
5.4.2　Binder实体对象的生命周期209
5.4.3　Binder引用对象的生命周期212
5.4.4　Binder代理对象的生命周期217
5.5　Binder对象死亡通知机制220
5.5.1　注册死亡接收通知221
5.5.2　发送死亡接收通知224
5.5.3　注销死亡接收通知229
5.6　Service Manager的启动过程232
5.6.1　打开和映射Binder设备文件234
5.6.2　注册为Binder上下文管理者235
5.6.3　循环等待Client进程请求239
5.7　Service Manager代理对象的获取过程246
5.8　Service组件的启动过程252
5.8.1　注册Service组件253
5.8.2　启动Binder线程池297
5.9　Service代理对象的获取过程299
5.10　Binder进程间通信机制的Java接口308
5.10.1　Service Manager的Java代理对象的获取过程308
5.10.2　Java服务接口的定义和解析318
5.10.3　Java服务的启动过程321
5.10.4　Java服务代理对象的获取过程328
5.10.5　Java服务的调用过程331
第6章　Ashmem匿名共享内存系统335
6.1　Ashmem驱动程序336
6.1.1　基础数据结构336
6.1.2　匿名共享内存设备的初始化过程338
6.1.3　匿名共享内存设备文件的打开过程340
6.1.4　匿名共享内存设备文件的内存映射过程342
6.1.5　匿名共享内存块的锁定和解锁过程344
6.1.6　匿名共享内存块的回收过程352
6.2　运行时库cutils的匿名共享内存访问接口353
6.3　匿名共享内存的C++访问接口357
6.3.1　MemoryHeapBase357
6.3.2　MemoryBase367
6.3.3　应用实例372
6.4　匿名共享内存的Java访问接口378
6.4.1　MemoryFile378
6.4.2　应用实例383
6.5　匿名共享内存的共享原理394
第3篇　Android应用程序框架
第7章　Activity组件的启动过程400
7.1　Activity组件应用实例400
7.2　根Activity组件的启动过程406
7.3　子Activity组件在进程内的启动过程440
7.4　子Activity组件在新进程中的启动过程448
第8章　Service组件的启动过程451
8.1　Service组件应用实例451
8.2 Service组件在新进程中的启动过程459
8.3　Service组件在进程内的绑定过程471
第9章　Android系统广播机制494
9.1　广播机制应用实例495
9.2　广播接收者的注册过程501
9.3　广播的发送过程509
第10章　Content Provider组件的实现原理532
10.1　Content Provider组件应用实例533
10.1.1　ArticlesProvider533
10.1.2　Article543
10.2　Content Provider组件的启动过程558
10.3　Content Provider组件的数据共享原理581
10.3.1　数据共享模型581
10.3.2　数据传输过程584
10.4　Content Provider组件的数据更新通知机制604
10.4.1　注册内容观察者605
10.4.2　发送数据更新通知611
第11章　Zygote和System进程的启动过程619
11.1　Zygote进程的启动脚本619
11.2　Zygote进程的启动过程622
11.3　System进程的启动过程630
第12章　Android应用程序进程的启动过程638
12.1　应用程序进程的创建过程638
12.2　Binder线程池的启动过程647
12.3　消息循环的创建过程649
第13章　Android应用程序的消息处理机制653
13.1　创建线程消息队列653
13.2　线程消息循环过程658
13.3　线程消息发送过程663
13.4　线程消息处理过程668
第14章　Android应用程序的键盘消息处理机制675
14.1　键盘消息处理模型675
14.2　InputManager的启动过程678
14.2.1　创建InputManager678
14.2.2　启动InputManager681
14.2.3　启动InputDispatcher683
14.2.4　启动InputReader685
14.3　InputChannel的注册过程696
14.3.1　创建InputChannel697
14.3.2　注册Server端InputChannel705
14.3.3　注册系统当前激活的应用程序窗口709
14.3.4　注册Client端InputChannel714
14.4　键盘消息的分发过程717
14.4.1　InputReader获得键盘事件718
14.4.2　InputDispatcher分发键盘事件725
14.4.3　系统当前激活的应用程序窗口获得键盘消息735
14.4.4　InputDispatcher获得键盘事件处理完成通知751
14.5　InputChannel的注销过程754
14.5.1　销毁应用程序窗口755
14.5.2　注销Client端InputChannel764
14.5.3　注销Server端InputChannel766
第15章　Android应用程序线程的消息循环模型772
15.1　应用程序主线程消息循环模型773
15.2　与界面无关的应用程序子线程消息循环模型774
15.3　与界面相关的应用程序子线程消息循环模型777
第16章　Android应用程序的安装和显示过程786
16.1　应用程序的安装过程 786
16.2　应用程序的显示过程822
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android系统源代码情景分析（第三版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android软件安全权威指南
第1章  搭建Android程序分析环境
1.1  搭建Windows分析环境  1
1.1.1  安装JDK  1
1.1.2  安装Android SDK  2
1.1.3  安装Android NDK  5
1.1.4  Android Studio集成开发环境  6
1.1.5  创建Android模拟器  7
1.1.6  CygWin  9
1.1.7  Bash on Ubuntu on
Windows  11
1.2  搭建macOS分析环境  12
1.2.1  安装JDK  12
1.2.2  安装Android SDK  14
1.2.3  安装Android NDK  14
1.2.4  Android Studio集成开发环境  15
1.3  搭建Ubuntu分析环境  15
1.3.1  安装JDK  16
1.3.2  安装Android SDK  17
1.3.3  安装Android NDK  17
1.3.4  Android Studio集成开发环境  18
1.4  常用逆向分析工具  19
1.5  常用Linux Shell命令  19
1.6  搭建源码分析环境  20
1.6.1  在macOS中编译Android源码  20
1.6.2  在Ubuntu中编译Android源码  26
1.6.3  在Windows中编译Android源码  26
1.7  本章小结  27

第2章  如何分析Android程序
2.1  编写第一个Android程序  28
2.1.1  创建Android工程  28
2.1.2  编译生成APK文件  31
2.2  破解第一个Android程序  35
2.2.1  破解入手  35
2.2.2  反编译APK文件  35
2.2.3  分析APK文件  36
2.2.4  修改smali文件的代码  44
2.2.5  重新编译APK文件并签名  45
2.2.6  安装和测试  47
2.2.7  小结  48
2.3  本章小结  48

第3章  Dalvik可执行格式与字节码规范
3.1  Dalvik虚拟机  49
3.1.1  Dalvik虚拟机的特点  49
3.1.2  Dalvik虚拟机与Java虚拟机的区别  49
3.1.3  虚拟机的执行流程  54
3.1.4  虚拟机的执行方式  56
3.2  Dalvik语言基础  56
3.2.1  Dalvik指令格式  57
3.2.2  DEX反汇编工具  58
3.2.3  Dalvik寄存器  59
3.2.4  寄存器命名法  61
3.2.5  Dalvik字节码  61
3.3  Dalvik指令集  63
3.3.1  指令类型  63
3.3.2  空操作指令  64
3.3.3  数据操作指令  64
3.3.4  返回指令  65
3.3.5  数据定义指令  65
3.3.6  锁指令  66
3.3.7  实例操作指令  66
3.3.8  数组操作指令  66
3.3.9  异常指令  67
3.3.10  跳转指令  67
3.3.11  比较指令  68
3.3.12  字段操作指令  69
3.3.13  方法调用指令  69
3.3.14  数据转换指令  70
3.3.15  数据运算指令  70
3.4  Dalvik指令练习  71
3.4.1  编写smali文件  71
3.4.2  编译smali文件  73
3.4.3  测试运行  73
3.5  本章小结  73

第4章  常见Android文件格式
4.1  库文件  74
4.1.1  jar包  74
4.1.2  aar包  75
4.2  APK  78
4.2.1  APK文件结构  78
4.2.2  APK文件的生成流程  79
4.2.3  APK的安装流程  84
4.3  classes.dex  90
4.3.1  DEX文件结构  90
4.3.2  DEX文件的验证与优化过程  104
4.3.3  DEX文件的修改  108
4.3.4  MultiDex  111
4.4  AndroidManifest.xml  113
4.4.1  AndroidManifest.xml文件的格式  113
4.4.2  AXML文件格式  114
4.4.3  AXML文件的修改  121
4.5  resources.arsc  121
4.5.1  ARSC文件格式  122
4.5.2  ARSC文件的修改  128
4.6  META-INF目录  128
4.6.1  CERT.RSA  128
4.6.2  MANIFEST.MF  129
4.6.3  CERT.SF  130
4.7  ODEX  132
4.7.1  生成ODEX文件  132
4.7.2  ODEX文件格式  132
4.7.3  将ODEX文件转换成DEX文件  136
4.8  OAT  137
4.8.1  ART虚拟机  137
4.8.2  生成OAT文件  137
4.8.3  OAT文件格式  138
4.8.4  将OAT文件转换成DEX文件  141
4.9  本章小结  143

第5章  静态分析Android程序

5.1  静态分析简介  145
5.2  阅读smali代码  145
5.2.1  smali文件结构  145
5.2.2  循环语句  148
5.2.3  switch分支语句  153
5.2.4  try/catch语句  158
5.3  阅读Java代码  163
5.3.1  将DEX文件转换成jar包  163
5.3.2  jar分析工具  163
5.4  代码定位技巧  164
5.4.1  入口分析法  164
5.4.2  信息反馈法  165
5.4.3  特征函数法  165
5.5  使用JEB进行静态分析  165
5.5.1  安装JEB  165
5.5.2  JEB的静态分析功能  166
5.5.3  JEB的脚本化与插件  169
5.6  使用IDA Pro进行静态分析  170
5.6.1  IDA Pro对Android的支持  170
5.6.2  分析DEX文件  170
5.6.3  定位关键代码  172
5.7  使用Androguard进行静态分析  174
5.7.1  安装Androguard  175
5.7.2  Androguard的使用方法  175
5.7.3  使用androlyze.py进行分析  179
5.8  本章小结  182

第6章  动态分析Android程序
6.1  动态分析框架  183
6.2  动态分析技巧  189
6.2.1  代码注入法  189
6.2.2  栈跟踪法  192
6.2.3  Ｍethod Profiling  193
6.2.4  UI检查  196
6.3  使用JDB动态调试APK  198
6.4  使用JEB动态调试APK  200
6.5  使用IDA Pro动态调试APK  201
6.6  本章小结  203

第7章  ARM反汇编基础  204
7.1  Android与ARM处理器  204
7.1.1  ARM处理器架构概述  204
7.1.2  Android支持的处理器架构  205
7.2  Android ARM EABI  206
7.2.1  armeabi  206
7.2.2  armeabi-v7a  207
7.2.3  arm64-v8a  208
7.3  ARM原生程序的生成过程  208
7.3.1  预处理  210
7.3.2  编译  211
7.3.3  汇编  215
7.3.4  链接  215
7.4  ARM汇编语言  216
7.4.1  ARM汇编程序结构  216
7.4.2  汇编指令  221
7.4.3  寄存器  223
7.4.4  处理器寻址方式  224
7.4.5  子程序参数传递  227
7.5  ARM汇编指令集  230
7.5.1  ARM指令集分类  230
7.5.2  ARM指令编码  231
7.5.3  ARM指令格式解析  233
7.5.4  常见ARM指令  234
7.6  Thumb汇编指令集  240
7.6.1  16位Thumb指令编码  240
7.6.2  16位Thumb指令格式解析  241
7.6.3  32位Thumb指令编码  242
7.6.4  32位Thumb指令格式解析  244
7.7  AArch64汇编指令集  246
7.7.1  AArch64指令编码  246
7.7.2  AArch64指令格式解析  247
7.8  本章小结  250

第8章  Android原生程序开发与逆向分析
8.1  原生程序开发  251
8.1.1  原生程序工程  252
8.1.2  STL的选择  253
8.1.3  JNI接口  254
8.1.4  编译选项与配置  256
8.2  原生程序移植  256
8.2.1  ADT项目的移植  257
8.2.2  UNIX开源项目的移植  258
8.2.3  CMake项目的移植  262
8.2.4  其他类型项目的移植  264
8.3  原生程序入口函数  264
8.3.1  原生程序入口函数  264
8.3.2  so入口函数  269
8.4  原生程序文件格式  271
8.4.1  原生程序的文件类型  271
8.4.2  AArch64 ELF文件格式  274
8.4.3  Program Header Table  278
8.4.4  Section Header Table  281
8.4.5  .dynamic节区  283
8.4.6  字符串表  285
8.4.7  符号表  286
8.4.8  got表与plt表  287
8.4.9  地址重定位表  291
8.5  原生程序逆向分析工具  295
8.5.1  NDK Toolchain  295
8.5.2  IDA Pro  297
8.5.3  Hopper  301
8.6  原生C程序逆向分析  302
8.6.1  编译原生C程序  303
8.6.2  for循环分支结构  305
8.6.3  while循环分支结构  309
8.6.4  if……else分支结构  312
8.6.5  switch循环分支结构  316
8.6.6  优化后的C程序  319
8.7  原生C 程序逆向分析  321
8.7.1  C STL的逆向分析  322
8.7.2  C 类的逆向分析  327
8.7.3  C 程序的RTTI  332
8.8  原生so动态库逆向分析  336
8.9  本章小结  337

第9章  Android原生程序动态调试
9.1  gdb调试器  338
9.1.1  ndk-gdb脚本  338
9.1.2  配置gdb调试器  339
9.1.3  gdb调试器的常用命令  340
9.1.4  使用gdb调试Android原生程序  342
9.1.5  gdb调试器的GUI前端  344
9.2  lldb调试器  346
9.2.1  配置lldb调试器  346
9.2.2  lldb调试器的常用命令  348
9.2.3  使用lldb调试Android原生程序  350
9.2.4  lldb调试器的GUI前端  353
9.3  使用IDA Pro调试Android原生程序  353
9.4  本章小结  358

第10章  Hook与注入
10.1  Hook的类型  359
10.1.1  Dalvik Hook  359
10.1.2  ART Hook  362
10.1.3  LD_PRELOAD Hook  364
10.1.4  GOT Hook  366
10.1.5  Inline Hook  367
10.2  Xposed Hook框架  368
10.3  Hook场景与应用  372
10.3.1  开启日志调试输出  372
10.3.2  APK插件  373
10.3.3  绕过SSL Pinning  373
10.4  动态注入  374
10.4.1  so动态库注入  374
10.4.2  DEX注入  376
10.5  注入框架Frida  377
10.5.1  安装配置Frida  377
10.5.2  执行注入与Hook  378
10.5.3  跟踪Native方法  384
10.6  本章小结  386

第11章  软件保护技术
11.1  软件保护技术简介  387
11.2  软件混淆技术  388
11.2.1  源码混淆  389
11.2.2  模板混淆  389
11.2.3  AST混淆  391
11.2.4  IR混淆  397
11.2.5  DEX混淆  397
11.2.6  DEX二次混淆  399
11.3  资源保护  401
11.4  完整性校验  403
11.5  反调试技术  404
11.5.1  调试器状态检测  404
11.5.2  调试器端口检测  404
11.5.3  进程状态检测  406
11.6  运行环境检测  407
11.6.1  模拟器检测  407
11.6.2  Root检测  409
11.6.3  Hook检测  409
11.7  本章小结  411

第12章  软件壳
12.1  Android软件壳  412
12.2  软件壳的特征与侦察  413
12.2.1  编译器指纹  413
12.2.2  软件壳的特征  416
12.2.3  查壳工具  418
12.3  动态加载型壳  418
12.3.1  缓存脱壳法  418
12.3.2  内存Dump脱壳法  419
12.3.3  动态调试脱壳法  420
12.3.4  Hook脱壳法  423
12.3.5  系统定制脱壳法  424
12.4  代码抽取型壳  425
12.4.1  内存重组脱壳法  425
12.4.2  Hook脱壳法  427
12.4.3  系统定制脱壳法  427
12.5  代码混淆壳  429
12.5.1  LLVM基础  430
12.5.2  编写Pass  434
12.5.3  Obfuscator-LLVM  440
12.5.4  代码混淆壳的脱壳  443
12.6  本章小结  451
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android软件安全权威指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android开发详解（全彩版）
第1章 Android 旅程之起点
1.1 走近Android
1.1.1 智能手机操作系统
1.1.2 Android发展史
1.1.3 Android应用领域
1.2 搭建Android开发环境
1.2.1 开发环境概述
1.2.2 集成Android开发环境的下载
1.2.3 集成Android开发环境的安装
1.3 与Android应用初次相见
1.3.1 创建Android应用程序
1.3.2 Android项目结构类型
1.3.3 使用Android模拟器
1.3.4 运行Android应用
1.4 知识回顾
第2章 Android Studio 的常用技巧
2.1 Android Studio的基本了解
2.1.1 了解配置界面
2.1.2 外观设置
2.1.3 Android Studio的主窗口
2.1.4 常用的工具窗口
2.2 导入项目与模块
2.2.1 导入Android Studio项目
2.2.2 导入Eclipse项目
2.2.3 导入模块
2.2.4 创建与导入.AAR包
2.3 自定义图标
2.4 Android Studio快捷键的使用
2.4.1 编辑类
2.4.2 视图类
2.4.3 编码类
2.5 知识回顾
第3章 App UI 设计
3.1 UI设计相关的概念
3.1.1 View
3.1.2 ViewGroup
3.2 设计UI界面
3.2.1 使用XML布局文件设计UI界面
3.2.2 在Java代码中设计UI界面
3.2.3 使用XML和Java代码混合设计UI界面
3.2.4 开发自定义的View类
3.3 布局管理器
3.3.1 相对布局管理器
3.3.2 线性布局管理器
3.3.3 帧布局管理器
3.3.4 表格布局管理器
3.3.5 网格布局管理器
3.3.6 布局管理器的嵌套
3.4 常用App UI界面设计
3.5 知识回顾
第4章 初级UI 控件
4.1 文本类控件（初级）
4.1.1 文本框
4.1.2 编辑框
4.2 按钮类控件（初级）
4.2.1 普通按钮
4.2.2 图片按钮
4.3 图像类控件
4.3.1 图像视图
4.3.2 网格视图
4.4 知识回顾
第5章 中级UI 控件
5.1 文本类控件（中级）
5.1.1 自动完成文本框
5.1.2 文本切换器
5.2 按钮类控件（中级）
5.2.1 状态开关按钮
5.2.2 单选按钮
5.2.3 复选框
5.3 进度条类控件
5.3.1 进度条
5.3.2 拖动条
5.3.3 星级评分条
5.4 知识回顾
第6章 高级UI 控件
6.1 图像类控件（高级）
6.1.1 图像切换器（ImageSwitcher）
6.1.2 画廊视图（Gallery）
6.2 列表类控件
6.2.1 下拉列表框（Spinner）
6.2.2 列表视图（ListView）
6.3 切换类控件
6.3.1 控件的切换（ViewFlipper）
6.3.2 翻页控件（ViewPager）
6.3.3 翻页的标题栏（PagerTabStrip）
6.4 通用控件
6.4.1 滚动视图
6.4.2 选项卡
6.4.3 搜索框(SearchView)
6.5 知识回顾
第7章 Android 权限机制与支持库的应用
7.1 Android权限机制
7.2 Android支持库的常用控件
7.2.1 工具栏（ToolBar）
7.2.2 折叠标题栏
（CollapsingToolbarLayout）
7.2.3 卡片式布局（CardView）
7.2.4 滑动菜单（DrawerLayout）
7.2.5 下拉刷新（SwipeRefreshLayout）
7.3 增强型滚动控件
7.3.1 RecyclerView的基础用法
7.3.2 RecyclerView的网格布局
7.3.3 RecyclerView的瀑布流网格布局
7.4 知识回顾
第8章 自定义控件
8.1 自定义控件实现流程
8.1.1 自定义属性
8.1.2 测量尺寸
8.1.3 绘制View
8.2 自定义控件
8.2.1 嵌套在ScrollView中的列表
8.2.2 外星人手机时钟
8.3 知识回顾
第9章 主角（Activity）与配角（Intent）
9.1 主角的作用
9.2 主角的艰辛历程
9.2.1 创建Activity
9.2.2 配置Activity
9.2.3 启动和关闭Activity
9.3 主角之间的交流
9.3.1 配角很重要
9.3.2 显式Intent
9.3.3 隐式Intent
9.3.4 Intent过滤器
9.3.5 多个Activity之间交换数据
9.3.6 调用另一个Activity并返回结果
9.4 使用碎片（Fragment）
9.4.1 Fragment的生命周期
9.4.2 创建Fragment
9.4.3 在Activity中添加Fragment
9.5 知识回顾
第10章 Android 程序的修理工
10.1 DDMS工具的使用
10.1.1 在Android Studio中打开DDMS
10.1.2 DDMS常用功能详解
10.2 输出日志信息
10.2.1 Log.e()方法
10.2.2 Log.w()方法
10.2.3 Log.i()方法
10.2.4 Log.d()方法
10.2.5 Log.v()方法
10.3 程序调试
10.3.1 Android Studio编辑器调试
10.3.2 Android Studio调试器调试
10.4 知识回顾
第11章 事件与手势
11.1 互动规则
11.1.1 基于监听的事件处理
11.1.2 基于回调的事件处理
11.2 物理按键互动
11.3 触摸屏互动
11.3.1 单击事件
11.3.2 长按事件
11.3.3 触摸事件
11.3.4 单击事件与触摸事件的区别
11.3.5 事件的综合应用
11.4 手势检测
11.5 知识回顾
第12章 Android 基本资源访问
12.1 字符串（string）资源
12.1.1 定义字符串资源文件
12.1.2 使用字符串资源
12.2 颜色（color）资源
12.2.1 颜色值的定义
12.2.2 定义颜色资源文件
12.2.3 使用颜色资源
12.3 尺寸（dimen）资源
12.3.1 Android支持的尺寸单位
12.3.2 使用尺寸资源
12.4 布局（layout）资源
12.5 数组（array）资源
12.5.1 定义数组资源文件
12.5.2 使用数组资源
12.6 样式（style）资源
12.7 Android程序国际化
12.8 知识回顾
第13章 Android 高级资源的调用
13.1 菜单（menu）资源
13.1.1 定义菜单资源文件
13.1.2 使用菜单资源
13.2 图像资源
13.2.1 图片资源
13.2.2 StateListDrawable资源
13.2.3 ShapeDrawable资源
13.2.4 LevelListDrawable资源
13.2.5 ClipDrawable资源
13.2.6 LayerDrawable资源
13.2.7 mipmap资源
13.3 知识回顾
第14章 Action Bar 的使用
14.1 Action Bar概述
14.2 Action Bar基本应用
14.2.1 显示和隐藏Action Bar
14.2.2 添加Action Item选项
14.2.3 添加 Action View
14.2.4 Action Bar与Tab
14.3 实现层级式导航
14.3.1 启用程序图标导航
14.3.2 配置父Activity
14.3.3 控制导航图标的显示
14.4 知识回顾
第15章 消息、通知、广播与闹钟
15.1 通过Toast类显示消息提示框
15.2 对话框与弹出窗口的使用
15.2.1 使用AlertDialog类实现对话框
15.2.2 TimePickerDialog与DatePickerDialog的使用
15.2.3 进度对话框(ProgressDialog)
15.2.4 弹出窗口（PopupWindow）
15.3 使用Notification在状态栏上显示通知
15.4 BroadcastReceiver使用
15.4.1 BroadcastReceiver简介
15.4.2 BroadcastReceiver应用
15.5 使用AlarmManager设置闹钟
15.5.1 AlarmManager简介
15.5.2 设置一个简单的闹钟
15.6 知识回顾
第16章 图形图像处理技术
16.1 常用绘图类
16.1.1 Paint类
16.1.2 Canvas类
16.1.3 Path类
16.1.4 Bitmap类
16.1.5 BitmapFactory类
16.2 绘制2D图像
16.2.1 绘制几何图形
16.2.2 绘制文本
16.2.3 绘制图片
16.2.4 绘制路径
16.3 知识回顾
第17章 Android 中的动画
17.1 逐帧动画
17.2 补间动画
17.2.1 旋转动画（RotateAnimation）
17.2.2 缩放动画（ScaleAnimation）
17.2.3 平移动画（Translate Animation）
17.2.4 透明度渐变动画（AlphaAnimation）
17.3 属性动画
17.3.1 属性动画的使用
17.3.2 属性动画组合
17.4 知识回顾
第18章 播放音频与视频
18.1 播放音频
18.1.1 使用MediaPlayer播放音频
18.1.2 使用SoundPool类播放音频
18.1.3 动态显示歌词的音乐播放器
18.2 播放视频
18.2.1 使用VideoView播放视频
18.2.2 使用MediaPlayer和SurfaceView播放视频
18.2.3 添加视频弹幕
18.3 知识回顾
第19章 拍照与显示图片
19.1 控制摄像头
19.1.1 拍照
19.1.2 使用Camera2进行拍照
19.1.3 录制视频
19.2 调用系统相机与图库
19.2.1 使用Intent启动系统相机
19.2.2 使用Intent浏览图库并选取图片
19.3 知识回顾
第20章 利用OpenGL 实现3D图形
20.1 OpenGL简介
20.2 绘制3D图形
20.2.1 构建3D开发的基本框架
20.2.2 绘制一个模型
20.3 添加效果
20.3.1 应用纹理贴图
20.3.2 旋转
20.3.3 光照效果
20.3.4 透明效果
20.4 知识回顾
第21章 数据存储技术
21.1 SharedPreferences存储
21.1.1 获取SharedPreferences类
21.1.2 向SharedPreferences文件中存储数据
21.1.3 读取SharedPreferences文件中存储的数据
21.2 文件存储
21.2.1 内部存储
21.2.2 外部存储
21.3 数据库存储
21.3.1 创建数据库
21.3.2 数据操作
21.4 使用Content Provider实现数据共享
21.4.1 Content Provider概述
21.4.2 创建Content Provider
21.4.3 使用Content Provider
21.5 知识回顾
第22章 默默付出的后台工作者
22.1 多线程
22.1.1 创建线程
22.1.2 开启线程
22.1.3 线程的休眠
22.1.4 中断线程
22.2 Handler消息传递机制
22.2.1 Handler类简介
22.2.2 Handler类中的常用方法
22.2.3 Handler与Looper、MessageQueue的关系
22.2.4 消息类（Message）
22.3 Service的应用
22.3.1 Service的分类
22.3.2 Service的生命周期
22.3.3 创建与配置Service
22.3.4 启动和停止Service
22.3.5 Bound Service
22.3.6 IntentService
22.4 知识回顾
第23章 传感器应用
23.1 Android传感器概述
23.1.1 Android的常用传感器
23.1.2 开发步骤
23.2 方向传感器
23.3 磁场传感器
23.4 加速度传感器
23.5 知识回顾
第24章 位置服务与地图应用
24.1 位置服务
24.1.1 获取LocationProvider
24.1.2 获取定位信息
24.2 百度地图服务
24.2.1 获取地图API密钥
24.2.2 下载SDK开发包
24.2.3 创建使用百度地图API的项目
24.2.4 定位到我的位置
24.3 知识回顾
第25章 网络编程及Internet应用
25.1 通过HTTP访问网络
25.1.1 发送GET请求
25.1.2 发送POST请求
25.2 通过OkHttp3访问网络
25.2.1 OkHttp3简介
25.2.2 OkHttp3的基本用法
25.3 解析JSON格式数据
25.3.1 JSON简介
25.3.2 解析JSON数据
25.3.3 使用GSON解析数据
25.4 使用WebView显示网页
25.4.1 使用WebView控件浏览网页
25.4.2 使用WebView加载HTML代码
25.4.3 让WebView支持JavaScript
25.5 知识回顾
第26章 Android 中的小部件
26.1 Widget简介
26.2 Widget基础
26.2.1 设计原则
26.2.2 开发步骤
26.2.3 安装及删除
26.3 Widget配置
26.3.1 在Widget元数据文件中声明Activity
26.3.2 创建配置Widget的Activity
26.3.3 获取Widget的ID
26.3.4 更新Widget
26.3.5 设置返回信息并关闭Activity
26.4 Widget与Service
26.5 知识回顾
第27章 常用的第三方技术
27.1 第三方登录
27.1.1 申请第三方账号
27.1.2 实现第三方登录
27.2 社会化分享
27.2.1 QQ分享
27.3 微信分享
27.4 第三方支付
27.4.1 微信支付
27.4.2 支付宝支付
27.5 知识回顾
第28章 发布你的App
28.1 导出APK安装包
28.2 发布App
28.2.1 开发者实名认证
28.2.2 上传应用
28.3 知识回顾
附附录1 快捷键介绍
附附录2 Android 代码编写规范
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android开发详解（全彩版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android精彩编程200例（全彩版）
第1章 菜单与对话框
视频讲解：3小时51分
实例001 微信右上角弹出的菜单
实例002 明日学院抽屉式公告
实例003 仿QQ侧滑菜单
实例004 可以收放的旋转菜单
实例005 仿58同城的退出动画
实例006 明日学院消息通知
实例007 退出当前账号对话框
实例008 圆盘式工具箱菜单
实例009 彩虹式菜单
实例010 滑动删除聊天记录
实例011 带图标的消息提示弹窗
实例012 使用PopWindow实现选择菜单
第2章 Android常用控件应用
视频讲解：20分
实例013 三种进度条样式
实例014 仿支付密码输入框
实例015 带字母检索的全国城市列表
实例016 下拉顶部图片放大效果
实例017 可以每日签到的日历表
实例018 使用时间选择器设置提醒时间
实例019 弹出智能提示信息的搜索框
实例020 页面中垂直滚动的公告条
实例021 外星人手机时钟
实例022 加载大量文字时关键字变色
实例023 返回顶部按钮
第3章 数据储存操作
视频讲解：42分
实例024 使用SharePreferences保存用户信息
实例025 保存信息到SD卡
实例026 记事本
实例027 查看手机中的图片
实例028 家庭账务记录
实例029 课程表
实例030 查看手机SD卡中所有文件
实例031 创建与删除文件
实例032 搜索应用程序
实例033 文件的复制和粘贴
第4章 第三方支持
实例034 使用Bmob第三方后台数据
实例035 第三方登录
实例036 极光推送
实例037 第三方分享
实例038 微信支付
实例039 支付宝支付
实例040 银联支付
第5章 手势交互
视频讲解：15分
实例041 仿QQ删除消息提示
实例042 九点锁屏
实例043 看着我
实例044 手势打电话
实例045 手势翻书
实例046 图片的放大
实例047 长按碎屏效果
实例048 抓不到我
实例049 转动的地球
第6章 图像处理
视频讲解：1小时29分
实例050 浏览朋友圈图片
实例051 仿大街网选择图片
实例052 仿微博发表动态
实例053 毛玻璃效果
实例054 拼接图片
实例055 扭曲变形效果
实例056 为图片添加特殊效果
实例057 图片圆角处理
实例058 滑动浏览图片
实例059 ViewPager实现画廊效果
第7章 图表处理
视频讲解：30分
实例060 书籍销量柱状统计图
实例061 家庭支出分析饼状图
实例062 月支出麻点统计图
实例063 心电图
实例064 房价走势折线图
实例065 人物能力分析雷达图
第8章 摄像头
实例066 调用系统相机获取图像
实例067 Camera与SurfaceView
实例068 Camera2与TextureView
实例069 为摄像机增加滤镜效果
实例070 扫描与生成二维码
实例071 人脸识别
实例072 识别银行卡信息
实例073 相机挂件
第9章 动画
视频讲解：42分
实例074 飘落的雪花
实例075 种一朵花
实例076 用刷子画外星人
实例077 会旋转的明日Logo
实例078 会变色的花
实例079 以动画的方式浏览照片
实例080 拍立得打印照片的动画效果
实例081 两只会飞的鸟
实例082 仿小米手机卸载应用动画效果
实例083 圆形扩散效果
实例084 明日学院唱片式音乐播放器
实例085 点赞效果
实例086 仿支付宝咻一咻
实例087 数字滚动效果
第10章 多媒体
视频讲解：38分
实例088 带音效的火山爆发效果
实例089 显示歌词的音乐播放器
实例090 录音机
实例091 分贝测试仪
实例092 调用本地播放器播放视频
实例093 带弹幕的视频播放器
实例094 手机屏幕录制
实例095 仿微信录制视频
实例096 播放视频对话框
第11章 语音识别
视频讲解：3小时48分
实例097 会聊天的机器人
实例098 语音打电话
实例099 语音电子书
实例100 语音发短信
实例101 语音唤醒
实例102 仿微信输入
第12章 传感器
视频讲解：6小时18分
实例103 计步器
实例104 仿微信摇一摇
实例105 水平仪
实例106 磁场指南针
实例107 光线控制页面背景
实例108 不要靠近听筒
实例109 话筒吹雾小游戏
实例110 弹力球碰撞
实例111 使用陀螺仪控制全景视图
实例112 摇晃手机更换图片
第13章 网络编程
视频讲解：4小时50分
实例113 多线程下载腾讯新闻客户端
实例114 使用WebView访问明日学院
实例115 明日学院课程详情页面
实例116 获取网络菜谱
实例117 下载网络图片
实例118 调用系统下载文件
实例119 天气预报
实例120 国内新闻
实例121 从本地获取并上传图片
第14章 与手机系统交互
视频讲解：2小时36分
实例122 吹蜡烛锁屏
实例123 短信发送状态
实例124 短信作弊器
实例125 获取系统相关信息
实例126 风车闹钟
实例127 群发拜年短信
实例128 设置黑名单
实例129 设置免打扰
实例130 一键截屏
实例131 设置手机屏幕亮度
实例132 通讯录
实例133 网速监控
实例134 悬浮窗
实例135 监控电池状态
实例136 手机应用管理
实例137 可以吸附在屏幕两侧的悬浮物
第15章 位置服务与地图应用
实例138 获取百度地图
实例139 使用百度地图定位自己的位置
实例140 百度地图公交查询
实例141 百度全景地图
实例142 下载百度离线地图
实例143 百度地图路线规划
实例144 高德3D地图
实例145 高德地图旋转方向定位
实例146 高德地图驾车导航
实例147 高德地图实时显示移动轨迹
实例148 高德地图实时天气
第16章 物联网开发
视频讲解：3小时58分
实例149 智能摄像头
实例150 智能家居
实例151 手表消息通知
实例152 手机与手表间的消息传递
实例153 手表动作通知
实例154 单对单蓝牙聊天
实例155 检测Wi-Fi信号强度
实例156 Wi-Fi共享
实例157 周围Wi-Fi检测连接
实例158 触碰NFC标签打开设置的应用
第17章 游戏开发
视频讲解：2小时10分
实例159 俄罗斯方块
实例160 疯狂单击小游戏
实例161 五子棋游戏
实例162 仿像素鸟游戏
实例163 仿别踩白块儿游戏
实例164 猜牌小游戏
实例165 拼图小游戏
实例166 仿关灯游戏
实例167 连连看游戏
实例168 2048游戏
实例169 抓住大公鸡游戏
实例170 仿飞机大战
第18章 5.0+效果（MaterialDesign）
实例171 仿小米联系人折叠动画效果
实例172 主题切换
实例173 切换多个选项卡
实例174 浮动按钮和消息显示
实例175 过场动画
实例176 切换列表效果
实例177 弹出底部弹窗
实例178 根据图片调节风格
实例179 特殊提示信息效果
实例180 展开与收起菜单栏
第19章 商城常用
视频讲解：1小时40分
实例181 转盘大抽奖
实例182 刮刮乐大抽奖
实例183 随机抽奖
实例184 订餐类购物车
实例185 仿淘宝购物发表评价页
实例186 弹出小广告
实例187 广告闪屏页
实例188 收货地址管理
实例189 使用瀑布流展示明日图书
实例190 带时间轴效果的物流信息
第20章 验证码合集
视频讲解：3小时10分
实例191 仿12306售票网验证码
实例192 成语验证码
实例193 文字过滤验证码
实例194 汉字转拼音验证码
实例195 汉字验证码
实例196 图片选择验证码
实例197 拖动形式的验证码
实例198 生成本地验证码
第21章 启动页合集
视频讲解：58分
实例199 闪屏页
实例200 新手引导
实例201 炫酷引导页
实例202 滑动隐藏引导页
实例203 滑动旋转引导页
第22章 加载等待合集
实例204 加载等待条
实例205 小球加载等待
实例206 图形变换加载等待
实例207 加载等待弹窗
实例208 加载、错误和完成三种动画
第23章 抢红包服务
实例209 微信抢红包
实例210 QQ抢红包
第24章 App应用开发必备模块
视频讲解：2小时43分
实例211 登录注册
实例212 视频登录
实例213 设置界面
实例214 上拉加载、下拉刷新
实例215 动态显示或隐藏标题栏
实例216 仿今日头条TAB效果
实例217 选择头像的注册
实例218 明日首页轮播图
实例219 微信底部选项卡
实例220 退出高德地图的提示
附录 搭建Android开发环境
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android精彩编程200例（全彩版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通Android 实例开发
第1章 正式开发前的准备 1
1.1 Windows下安装Java环境JDK 1
1.1.1 实例说明 1
1.1.2 具体实现 2
1.1.3 特别提醒――检测是否
安装成功 3
1.2 在Windows环境下安装Eclipse 4
1.2.1 实例说明 4
1.2.2 具体实现 4
1.2.3 特别提醒――为Eclipse
建立快捷方式 5
1.3 在Windows环境下集成安装
Eclipse和Android SDK 6
1.3.1 实例说明 6
1.3.2 具体实现 6
1.3.3 特别提醒――不同的
SDK版本 8
1.4 在Windows环境下安装ADT 8
1.4.1 实例说明 8
1.4.2 具体实现 8
1.4.3 特别提醒――不用担心
安装过程慢 9
1.5 将Android SDK和Eclipse相关联 9
1.5.1 实例说明 10
1.5.2 具体实现 10
1.5.3 特别提醒――不关联启动
SDK的方法 10
1.6 验证Android开发环境 10
1.6.1 实例说明 11
1.6.2 具体实现 11
1.6.3 特别提醒――快速运行
Android的诀窍 11
1.7 使用CMD方式创建Android
虚拟设备 12
1.7.1 实例说明 12
1.7.2 具体实现 12
1.7.3 特别提醒 13
1.8 使用图形界面方式创建AVD
模拟器 14
1.8.1 实例说明 14
1.8.2 具体实现 14
1.8.3 特别提醒――删除/修改AVD 15
1.9 手动更新Android SDK 16
1.9.1 实例说明 16
1.9.2 具体实现 16
1.9.3 特别提醒――自定义选择
安装的SDK 18
1.10 单独下载的方式来更新
Android SDK 18
1.10.1 实例说明 19
1.10.2 具体实现 19
1.10.3 特别提醒――快速安装
Android SDK的诀窍 19
1.11 在Linux环境下搭建Android平台 19
1.11.1 实例说明 19
1.11.2 具体实现 20
1.11.3 特别提醒 20
1.12 苹果Mac环境下搭建Android平台 21
1.12.1 实例说明 21
1.12.2 具体实现 21
1.12.3 特别提醒――都是一个原理 22
1.13 搭建过程中的常见错误 22
1.13.1 实例说明 23
1.13.2 *常见的3个错误 23
1.13.3 特别提醒――其他错误 24
1.14 **个Android程序 25
1.14.1 实例说明 26
1.14.2 具体实现 26
1.14.3 特别提醒――解决模拟器运行
时间长而引发的错误 27
1.15 向Eclipse中导入Android程 28
1.15.1 实例说明 28
1.15.2 具体实现 28
1.15.3 特别提醒――一次向Eclipse
中导入多个Android程序 29
1.16 断点调试Android程序 30
1.16.1 实例说明 30
1.16.2 具体实现 30
1.16.3 特别提醒――其他调试方法 31
第2章 界面布局 32
2.1 使用线性布局（LinearLayout） 32
2.1.1 实例说明 32
2.1.2 具体实现 32
2.1.3 特别提醒――布局类型
的继承 33
2.2 使用相对布局（Relative Layout） 34
2.2.1 实例说明 34
2.2.2 具体实现 34
2.2.3 特别提醒――RelativeLayout
效果结构 35
2.3 使用表格布局（Table Layout） 36
2.3.1 实例说明 36
2.3.2 具体实现 36
2.3.3 特别提醒――使用表格布局
的注意事项 37
2.4 使用**布局（AbsoluteLayout） 37
2.4.1 实例说明 37
2.4.2 具体实现 37
2.4.3 特别提醒――为什么不推荐
使用AbsoluteLayout 37
2.5 使用标签布局（TabLayout） 38
2.5.1 实例说明 38
2.5.2 具体实现 38
2.5.3 特别提醒――计算器的
升级理念 39
2.6 使用层布局（FrameLayout） 39
2.6.1 实例说明 39
2.6.2 具体实现 39
2.6.3 特别提醒――层与层的覆盖 40
2.7 演示Layout布局的综合应用 40
2.7.1 实例说明 40
2.7.2 具体实现 40
2.7.3 特别提醒――设置的图片
不能太大 44
2.8 创建一个桌面组件Widget 45
2.8.1 实例说明 45
2.8.2 具体实现 45
2.8.3 特别提醒――其他的实例 45
2.9 在屏幕中实现一个按钮效果 45
2.9.1 实例说明 45
2.9.2 具体实现 46
2.9.3 特别提醒――更加漂亮
的按钮 46
2.10 在屏幕中显示文字 47
2.10.1 实例说明 47
2.10.2 具体实现 47
2.10.3 特别提醒――Color属性
代表的颜色 49
2.11 设置手机屏幕中的字体 49
2.11.1 实例说明 49
2.11.2 具体实现 50
2.11.3 特别提醒――更改TextView
文字的颜色 51
2.12 在屏幕中显示编辑框 51
2.12.1 实例说明 51
2.12.2 具体实现 51
2.12.3 特别提醒――限制文本框
中文字字数 52
2.13 在屏幕中显示复选框 53
2.13.1 实例说明 54
2.13.2 具体实现 54
2.14.3 特别提醒――RadioButton
（单选框）控件 54
2.14 在屏幕中显示单选框 55
2.14.1 实例说明 55
2.14.2 具体实现 55
2.14.3 特别提醒――按钮的
不同状态 55
2.15 在屏幕中显示下拉列表框 56
2.15.1 实例说明 56
2.15.2 具体实现 56
2.15.3 特别提醒――Spinner的
属性和方法 58
2.16 在屏幕中实现自动输入文本效果 58
2.16.1 实例说明 58
2.16.2 具体实现 58
2.16.3 特别提醒――下拉框的
雾化效果 59
2.17 使用日期选择器控件DatePicker 59
2.17.1 实例说明 59
2.17.2 具体实现 60
2.17.3 特别提醒――控件
DatePicker中的方法 60
2.18 使用时间选择器控件TimePicker 61
2.18.1 实例说明 61
2.18.2 具体实现 61
2.18.3 特别提醒――在屏幕中
同时显示日期和时间 61
2.19 在屏幕内实现滚动效果 64
2.19.1 实例说明 64
2.19.2 具体实现 64
2.19.3 特别提醒――解决ScrollView
控件中的内容不能完整显示
的问题 64
2.20 在屏幕内实现进度条效果 65
2.20.1 实例说明 65
2.20.2 具体实现 65
2.20.3 特别提醒――为控件
Progressbar设置样式 66
2.21 在屏幕内使用拖动条功能 67
2.21.1 实例说明 67
2.21.2 具体实现 67
2.21.3 特别提醒――在拖动条中
显示提示文字 67
2.22 在屏幕内使用评分组件 67
2.22.1 实例说明 68
2.22.2 具体实现 68
2.22.3 特别提醒――使用RatingBar
控件的流程 68
2.23 在屏幕内显示一幅图片 69
2.23.1 实例说明 69
2.23.2 具体实现 69
2.23.3 特别提醒――制作一个相框 70
2.24 设置一幅图片当作按钮 71
2.24.1 实例说明 71
2.24.2 具体实现 71
2.24.3 特别提醒――图片按钮控件
的事件响应 72
2.25 实现类似QQ空间的照片效果 73
2.25.1 实例说明 73
2.25.2 具体实现 73
2.25.3 特别提醒――ImageSwitcher
控件的3种方法 74
2.26 使用网格视图控件布局屏幕 74
2.26.1 实例说明 74
2.26.2 具体实现 75
2.26.3 特别提醒――升级实例 76
2.27 在屏幕内实现多个标签栏样式
的效果 76
2.27.1 实例说明 76
2.27.2 具体实现 76
2.27.3 特别提醒――TabView的
标准用法格式 77
2.28 实现一个3行布局 77
2.28.1 实例说明 77
2.28.2 具体实现 77
2.28.3 特别提醒――升级实例 78
2.29 实现书架展示效果 79
2.29.1 实例说明 79
2.29.2 具体实现 79
2.29.3 特别提醒――升级实例 80
2.30 实现树形菜单效果 80
2.30.1 实例说明 80
2.30.2 具体实现 81
2.30.3 特别提醒――其他控件
的功能 82
2.31 实现一个精美的登录界面 82
2.31.1 实例说明 82
2.31.2 具体实现 82
2.31.3 特别提醒――实例升级 84
第3章 基本控件应用 85
3.1 使用EditText控件和setOnKeyListener
事件实现文本处理 85
3.1.1 实例说明 85
3.1.2 具体实现 85
3.1.3 特别提醒――实现文字过滤 86
3.2 在屏幕中实现一个背景图片按钮 86
3.2.1 实例说明 86
3.2.2 具体实现 87
3.2.3 特别提醒――“res/drawable”
目录的作用 88
3.3 使用Toast实现提醒 88
3.3.1 实例说明 88
3.3.2 具体实现 88
3.3.3 特别提醒――Toast的优势 90
3.4 用RadioGroup控件实现选择处理 91
3.4.1 实例说明 91
3.4.2 具体实现 91
3.4.3 特别提醒――RadioGroup
控件的特殊作用 92
3.5 使用CheckBox实现一个购物清单 92
3.5.1 实例说明 92
3.5.2 具体实现 92
3.5.3 特别提醒――应用触摸屏
技术 94
3.6 使用CheckBox实现同意条款效果 94
3.6.1 实例说明 94
3.6.2 具体实现 95
3.6.3 特别提醒――处理CheckBox
的状态 96
3.7 使用ImageView控件实现相框效果 96
3.7.1 实例说明 96
3.7.2 具体实现 97
3.7.3 特别提醒――ImageButton
的按钮切换 98
3.8 使用Spinner实现选择处理 98
3.8.1 实例说明 98
3.8.2 具体实现 99
3.8.3 特别提醒――设置下拉菜单
中的TextView 100
3.9 使用Gallery控件实现个人
相簿功能 101
3.9.1 实例说明 101
3.9.2 具体实现 101
3.9.3 特别提醒――设置Gallery
图片的宽高 102
3.10 在手机中实现文件搜索功能 103
3.10.1 实例说明 103
3.10.2 具体实现 103
3.10.3 特别提醒――搜索子目录 104
3.11 使用ImageButton控件实现按钮
置换功能 104
3.11.1 实例说明 104
3.11.2 具体实现 105
3.11.3 特别提醒――操作显示
的默认图片 105
3.12 使用AnalogClock实现一个
时钟效果 106
3.12.1 实例说明 106
3.12.2 具体实现 106
3.12.3 特别提醒――3种常用的
System Clock 107
3.13 在手机屏幕中实现不同的
进度条效果 108
3.13.1 实例说明 108
3.13.2 具体实现 108
3.13.3 特别提醒――在进度条中
的4种不同风格 110
3.14 在屏幕中手动选择日期和时间 110
3.14.1 实例说明 111
3.14.2 具体实现 111
3.14.3 特别提醒――控件
TimePicker中的主要方法 112
3.15 动态排版手机屏幕 113
3.15.1 实例说明 113
3.15.2 具体实现 113
3.15.3 特别提醒――总结UI
界面布局 114
3.16 使用ListActivity实现界面布局 115
3.16.1 实例说明 115
3.16.2 具体实现 116
3.16.3 特别提醒――ListActivity
的用法总结 117
3.17 加载手机磁盘中的文件 118
3.17.1 实例说明 118
3.17.2 具体实现 118
3.17.3 特别提醒――解析Android
中的图片素材目录 119
3.18 使用菜单控件MENU 119
3.18.1 实例说明 119
3.18.2 具体实现 119
3.18.3 特别提醒――Android系统
中的3种菜单类型 121
3.19 使用SimpleAdapter实现ListView
效果 122
3.19.1 实例说明 122
3.19.2 具体实现 122
3.19.3 特别提醒――ArrayAdapter
接受一个数组或者List
作为参数 123
3.20 在屏幕中实现抽屉样式效果 123
3.20.1 实例说明 123
3.20.2 具体实现 123
3.20.3 特别提醒――实现可拖拉
的抽屉效果 126
3.21 在屏幕中演示使用多种对话框 129
3.21.1 实例说明 129
3.21.2 具体实现 130
3.21.3 特别提醒――自定义消除AlertDialog的黑、白边框 133
3.22 联合使用Toast和Notification
实现提醒 134
3.22.1 实例说明 134
3.22.2 具体实现 135
3.22.3 特别提醒――更新
通知信息 139
3.23 动态添加/删除Spinner菜单 139
3.23.1 实例说明 139
3.23.2 具体实现 139
3.23.3 特别提醒――改变
TextView内容 141
3.24 自定义一个Android控件 142
3.24.1 实例说明 142
3.24.2 具体实现 142
3.24.3 特别提醒――将属性值绑定
到控件的基本步骤 144
3.25 设置控件的外观样式 145
3.25.1 实例说明 145
3.25.2 具体实现 145
3.25.3 特别提醒――查看Android
开源代码 146
3.26 使用自定义控件在屏幕中绘制
一条虚线 147
3.26.1 实例说明 148
3.26.2 具体实现 148
3.26.3 特别提醒――总结实现
自定义控件的流程 148
3.27 实现自定义组合控件和
自定义对话框 149
3.27.1 实例说明 149
3.27.2 具体实现 149
3.27.3 特别提醒――读者们
汲取笔者的教训 152
3.28 使用OptionsMenu在屏幕中
自定义自己的菜单 152
3.28.1 实例说明 152
3.28.2 具体实现 153
3.28.3 特别提醒――编写
自定义样式 154
3.29 使用ExpandableListView实现
手风琴效果 155
3.29.1 实例说明 155
3.29.2 具体实现 155
3.29.3 特别提醒――ExpandableListAdapter接口 156
3.30 基于自定义适配器的ExpandableListView 156
3.30.1 实例说明 157
3.30.2 具体实现 157
3.30.3 特别提醒――实现规整
的布局 158
3.31 使用Chronometer在屏幕中
实现定时器效果 160
3.31.1 实例说明 160
3.31.2 具体实现 160
3.31.3 特别提醒――进一步
设置时间 161
3.32 使用控件SlidingDrawer在屏幕中
实现滑动式抽屉的效果 161
3.32.1 实例说明 161
3.32.2 具体实现 162
3.32.3 特别提醒――布局
SlidingDrawer里面的控件 163
3.33 在EditText插入QQ表情 163
3.33.1 实例说明 163
3.33.2 具体实现 163
3.33.3 特别提醒――删除
表情图片的思路 163
3.34 为Button设计样式 164
3.34.1 实例说明 164
3.34.2 具体实现 164
3.34.3 特别提醒――Android
如何设置控件的样式 164
3.35 为控件自定义样式 164
3.35.1 实例说明 164
3.35.2 具体实现 165
3.35.3 特别提醒――和样式
设置相关的属性和文件 165
3.36 制作一个有秒针的时钟 165
3.36.1 实例说明 165
3.36.2 具体实现 165
3.36.3 特别提醒――要如何
随时都知道时间的改变 167
第4章 屏幕显示应用 168
4.1 在屏幕中输出显示一段文字 168
4.1.1 实例说明 168
4.1.2 具体实现 168
4.1.3 特别提醒――处理超出
屏幕宽度的文字 169
4.2 更改屏幕背景颜色 169
4.2.1 实例说明 169
4.2.2 具体实现 169
4.2.3 特别提醒――“res/values”
目录保存设置颜色 171
4.3 更改屏幕中的文字颜色 171
4.3.1 实例说明 171
4.3.2 具体实现 171
4.3.3 特别提醒――遵循MVC
开发模式 172
4.4 置换屏幕中TextView文字的颜色 172
4.4.1 实例说明 172
4.4.2 具体实现 173
4.4.3 特别提醒――使用转义字符 173
4.5 获取手机屏幕的分辨率 173
4.5.1 实例说明 173
4.5.2 具体实现 174
4.5.3 特别提醒――DisplayMetrics
的用法 174
4.6 设置屏幕中的文字样式 175
4.6.1 实例说明 175
4.6.2 具体实现 175
4.6.3 特别提醒――更改Layout
中对象的外观 176
4.7 响应按钮事件 176
4.7.1 实例说明 177
4.7.2 具体实现 177
4.7.3 特别提醒――两个注意事项 177
4.8 实现屏幕界面的转换 178
4.8.1 实例说明 178
4.8.2 具体实现 178
4.8.3 特别提醒――setContentView
转换屏幕界面 179
4.9 在一个Activity中调用另一个
Activity 179
4.9.1 实例说明 179
4.9.2 具体实现 180
4.9.3 特别提醒――Intent的作用 181
4.10 计算标准体重 181
4.10.1 实例说明 181
4.10.2 具体实现 182
4.10.3 特别提醒――Activity
的原理 184
4.11 将数据返回到前一个Activity 184
4.11.1 实例说明 184
4.11.2 具体实现 184
4.11.3 特别提醒――重新返回
给主Activity1 187
4.12 单击按钮后改变文字颜色 187
4.12.1 实例说明 188
4.12.2 具体实现 188
4.12.3 特别提醒――使用HTML
控制颜色 188
4.13 设置手机屏幕中文本的字体 189
4.13.1 实例说明 189
4.13.2 具体实现 189
4.13.3 特别提醒――使用字体
的问题 190
4.14 在手机屏幕中实现拖动图片特效 190
4.14.1 实例说明 190
4.14.2 具体实现 190
4.14.3 特别提醒――导入外部图片
作为内置图 191
4.15 制作一个简单的计算器 191
4.15.1 实例说明 192
4.15.2 具体实现 192
4.15.3 特别提醒――计算小数 193
4.16 在屏幕中实现一个About（关于）
信息效果 193
4.16.1 实例说明 193
4.16.2 具体实现 193
4.16.3 特别提醒――实现一个
确认对话框 194
4.17 在手机屏幕中实现程序加载效果 195
4.17.1 实例说明 195
4.17.2 具体实现 195
4.17.3 特别提醒――ProgressDialog
类 196
4.18 创建一个有选择项的对话框 196
4.18.1 实例说明 196
4.18.2 具体实现 197
4.18.3 特别提醒――AlertDialog.
Builder的内部组成 197
4.19 改变手机的主题 198
4.19.1 实例说明 198
4.19.2 具体实现 198
4.19.3 特别提醒――设置Style 199
4.20 在屏幕中自动显示输入的数据 199
4.20.1 实例说明 199
4.20.2 具体实现 199
4.20.3 特别提醒――链接字符串
的妙用 200
4.21 实现手机振动效果 200
4.21.1 实例说明 200
4.21.2 具体实现 201
4.21.3 特别提醒――Vibrator对象
实现振动 203
4.22 实现图文提醒效果 203
4.22.1 实例说明 203
4.22.2 具体实现 203
4.22.3 特别提醒――带图提醒
的妙用 205
4.23 实现类似于MSN/QQ的状态效果 205
4.23.1 实例说明 205
4.23.2 具体实现 206
4.23.3 特别提醒――使用
NotificationManager的
基本步骤 207
4.24 检索手机中的通讯录 208
4.24.1 实例说明 209
4.24.2 具体实现 209
4.24.3 特别提醒――URI介绍和
ContentResolver的用法
剖析 211
4.25 管理手机系统中的文件 212
4.25.1 实例说明 213
4.25.2 具体实现 213
4.25.3 特别提醒――同时显示
文件名、图标和文件夹名 216
4.26 清除、还原手机桌面 216
4.26.1 实例说明 216
4.26.2 具体实现 216
4.26.3 特别提醒――类
ContextWrapper的根类 217
4.27 “修改/删除”手机中的文件 217
4.27.1 实例说明 218
4.27.2 具体实现 218
4.27.3 特别提醒――I/O类的
操作流程 223
4.28 获取当前运行程序的路径 224
4.28.1 实例说明 224
4.28.2 具体实现 225
4.28.3 特别提醒――两种表示
目录的方式 227
4.29 获取手机内SIM卡的信息 227
4.29.1 实例说明 227
4.29.2 具体实现 228
4.29.3 特别提醒――SIM卡
的意义 230
4.30 查看当前系统中正在运行的程序 231
4.30.1 实例说明 231
4.30.2 具体实现 231
4.30.3 特别提醒――AndroidManifest.xml中
的权限 233
4.31 修改手机屏幕的显示方向 236
4.31.1 实例说明 236
4.31.2 具体实现 236
4.31.3 特别提醒――切换和不
切换的实现方法 239
第5章 自动为您服务 240
5.1 获取手机屏幕的分辨率 240
5.1.1 实例说明 240
5.1.2 具体实现 240
5.1.3 特别提醒――一个模拟器
模拟短信操作 242
5.2 获取手机剩余的电池容量 243
5.2.1 实例说明 243
5.2.2 具体实现 243
5.2.3 特别提醒――Reseiver
的作用 244
5.3 来电时自动发送信息提醒 245
5.3.1 实例说明 245
5.3.2 具体实现 245
5.3.3 特别提醒――TelephonyManager
和PhoneStateListener 247
5.4 获取手机中存储卡的容量 248
5.4.1 实例说明 248
5.4.2 具体实现 248
5.4.3 特别提醒――使用FAT32
格式的磁盘镜像作为SD
卡的模拟 249
5.5 操作存储卡和内存卡中的信息 250
5.5.1 实例说明 250
5.5.2 具体实现 250
5.5.3 特别提醒――管理SD卡
中的内容 255
5.6 设置闹钟 255
5.6.1 实例说明 255
5.6.2 具体实现 255
5.6.3 特别提醒――类
AlarmManager的作用 259
5.7 设置黑名单来电自动静音 259
5.7.1 实例说明 260
5.7.2 具体实现 260
5.7.3 特别提醒――检测Android
系统是否静音 262
5.8 定时更换手机桌面背景 262
5.8.1 实例说明 262
5.8.2 具体实现 262
5.8.3 特别提醒――AlarmManager
的原理 268
5.9 开机后自动显示一个界面 269
5.9.1 实例说明 269
5.9.2 具体实现 269
5.9.3 特别提醒――开机发送
BOOT_COMPLETED
广播信息 270
5.10 替换手机屏幕的背景图片 270
5.10.1 实例说明 270
5.10.2 具体实现 270
5.10.3 特别提醒――维持图片
的宽高比 272
5.11 在手机屏幕中拖动一个按钮 272
5.11.1 实例说明 273
5.11.2 具体实现 273
5.11.3 特别提醒――通过keyCode
来判断A～Z的按键 275
5.12 自动控制系统服务 276
5.12.1 实例说明 276
5.12.2 具体实现 276
5.12.3 特别提醒――Service
的作用 278
5.13 手机背面朝上时自动启动
震动模式 278
5.13.1 实例说明 278
5.13.2 具体实现 278
5.13.3 特别提醒――
registerListener()的参数 282
5.14 AlarmManager的启动和关闭 283
5.14.1 实例说明 283
5.14.2 具体实现 283
5.14.3 特别提醒――闹钟服务 284
5.15 黑名单拦截机制 284
5.15.1 实例说明 284
5.15.2 具体实现 285
5.15.3 特别提醒――Android
的通话机制 287
5.16 开机后启动一个服务 288
5.16.1 实例说明 288
5.16.2 具体实现 288
5.16.3 特别提醒――开机自动
启动的原理 288
第6章 数据存储服务 289
6.1 在屏幕中显示SharedPreferences
存储的信息 289
6.1.1 实例说明 289
6.1.2 具体实现 289
6.1.3 特别提醒――存放数据
的路径 290
6.2 数据的添加和删除 290
6.2.1 实例说明 290
6.2.2 具体实现 290
6.2.3 特别提醒――Android支持
5种打印输出级别 294
6.3 演示ContentProvider的用法 294
6.3.1 实例说明 294
6.3.2 具体实现 294
6.3.3 特别提醒――ContentResolver
提供的接口 295
6.4 使用SQLite编写一个日记本 296
6.4.1 实例说明 296
6.4.2 具体实现 296
6.4.3 特别提醒――SimpleCursor
Adapter和ArrayAdapter
的对比 301
6.5 使用Content Provider实现
日记本功能 301
6.5.1 实例说明 301
6.5.2 具体实现 301
6.5.3 特别提醒――Content Provider
和ContentResolver中的Uri 310
6.6 保存用户的信息 310
6.6.1 实例说明 310
6.6.2 具体实现 310
6.6.3 特别提醒――XML文件
的形式保存数据 312
6.7 使用文件保存数据 312
6.7.1 实例说明 312
6.7.2 具体实现 313
6.7.3 特别提醒――方法
openFileOutput() 314
6.8 将网上图片保存在SD卡中
并显示出来 315
6.8.1 实例说明 315
6.8.2 具体实现 316
6.8.3 特别提醒――总结数据
存储方式 317
6.9 读取上次保存的信息 319
6.9.1 实例说明 319
6.9.2 具体实现 319
6.9.3 特别提醒――使用
SharedPreferences保存
key-value对的步骤 320
6.10 使用Content Provider存储信息 320
6.10.1 实例说明 320
6.10.2 具体实现 320
6.10.3 特别提醒――框架内部
的操作 322
6.11 使用SQLite操作数据 322
6.11.1 实例说明 322
6.11.2 具体实现 322
6.11.3 特别提醒――使用SQLiteDatabase操作
SQLite数据库 324
6.12 一个SQLite管理程序 324
6.12.1 实例说明 324
6.12.2 具体实现 325
第7章 电话和短信应用 327
7.1 实现一个简单的拨号程序 327
7.1.1 实例说明 327
7.1.2 具体实现 327
7.1.3 特别提醒――IntentFilter
实现拨号 329
7.2 实现发送短信功能 330
7.2.1 实例说明 330
7.2.2 具体实现 330
7.2.3 特别提醒――包android.
telephony简介 331
7.3 实现一个按钮拨号程序 332
7.3.1 实例说明 332
7.3.2 具体实现 332
7.3.3 特别提醒――一段通用的
验证电话号码的代码 334
7.4 一个发送短信系统 334
7.4.1 实例说明 334
7.4.2 具体实现 334
7.4.3 特别提醒――SmsManager类 337
7.5 实现屏幕触控拨号程序 338
7.5.1 实例说明 338
7.5.2 具体实现 338
7.5.3 特别提醒――将Action
动作定义成常数 338
7.6 实现短信群发功能 339
7.6.1 实例说明 339
7.6.2 具体实现 339
7.6.3 特别提醒――Android的
群组功能 341
7.7 在发送短信时实现E-mail邮件通知 341
7.7.1 实例说明 342
7.7.2 具体实现 342
7.7.3 特别提醒――通过Intent机制
协助应用间的交互与通讯 345
7.8 来电后自动发送邮件通知 345
7.8.1 实例说明 345
7.8.2 具体实现 345
7.8.3 特别提醒――模拟器的问题 347
7.9 监听短信是否发送成功 347
7.9.1 实例说明 347
7.9.2 具体实现 347
7.9.3 特别提醒――发送短信
的状态 350
7.10 监控手机拨接状态 350
7.10.1 实例说明 351
7.10.2 具体实现 351
7.10.3 特别提醒――getSystemService
的返回对象 353
7.11 监控收取的短信中是否含有
某关键字 353
7.11.1 实例说明 353
7.11.2 具体实现 354
7.11.3 特别提醒――不可以直接
唤醒原来的主Activity 359
第8章 图形图像处理 361
8.1 在手机屏幕中绘制一个矩形 361
8.1.1 实例说明 361
8.1.2 具体实现 361
8.1.3 特别提醒――类Paint中
的方法 363
8.2 在手机屏幕中绘制一个画布 363
8.2.1 实例说明 364
8.2.2 具体实现 364
8.2.3 特别提醒――生成图片
水印效果 365
8.3 在手机屏幕中绘制各种图形 365
8.3.1 实例说明 366
8.3.2 具体实现 366
8.3.3 特别提醒――save方法
和restore方法 368
8.4 在手机屏幕中模拟实现水纹效果 368
8.4.1 实例说明 368
8.4.2 实例说明 369
8.4.3 特别提醒――缩放位图 371
8.5 在手机屏幕中渲染一个几何图形 371
8.5.1 实例说明 371
8.5.2 具体实现 371
8.5.3 特别提醒――类Shader中
的子类 373
8.6 在手机屏幕中实现动画效果 373
8.6.1 实例说明 373
8.6.2 具体实现 373
8.6.3 特别提醒――Tween动画的
4种动画效果 375
8.7 在手机屏幕中实现Frame动画效果 375
8.7.1 实例说明 375
8.7.2 具体实现 375
8.7.3 特别提醒――实现Frame
动画的方法 376
8.8 使用Matrix实现图片缩放 376
8.8.1 实例说明 376
8.8.2 具体实现 377
8.8.3 特别提醒――4种缩放位图
的基本方法 379
8.9 旋转屏幕中的图片 380
8.9.1 实例说明 380
8.9.2 具体实现 380
8.9.3 特别提醒――用Matrix或
Canvas旋转位图 382
8.10 实现天上移动星星的效果 382
8.10.1 实例说明 382
8.10.2 具体实现 382
8.10.3 特别提醒――OpenGL技术 385
8.11 构建一个模拟3D场景 385
8.11.1 实例说明 385
8.11.2 具体实现 385
8.11.3 特别提醒――分析相关
的底层代码 387
8.12 实现浮动的旗帜效果 388
8.12.1 实例说明 388
8.12.2 具体实现 388
8.12.3 特别提醒――用OpenGL ES
绘图的基本流程 389
8.13 在屏幕中显示多个物体 390
8.13.1 实例说明 390
8.13.2 具体实现 390
8.13.3 特别提醒――
类FloatBuffer 392
8.14 模拟实现粒子系统效果 392
8.14.1 实例说明 392
8.14.2 具体实现 392
8.14.3 特别提醒――粒子系统的
实现过程 394
8.15 移动手机屏幕中的图片 394
8.15.1 实例说明 395
8.15.2 具体实现 395
8.15.3 特别提醒――配对使用
save和restore 397
8.16 在Canvas画布中绘制字符串 398
8.16.1 实例说明 398
8.16.2 具体实现 398
8.16.3 特别提醒――设置画布
的属性 403
8.17 在手机屏幕中移动一个不断
变换颜色的图形 403
8.17.1 实例说明 403
8.17.2 具体实现 404
8.17.3 特别提醒――SurfaceView
的用法 406
8.18 在手机屏幕中实现一个图片移动
的动画效果 406
8.18.1 实例说明 406
8.18.2 具体实现 406
8.18.3 特别提醒――在SurfaceHolder.Callback回调
接口中的常用方法 408
8.19 绘制一个三维圆柱体 409
8.19.1 实例说明 409
8.19.2 具体实现 409
8.19.3 特别提醒――展开后的
圆柱体 415
8.20 在手机屏幕中混合图像 415
8.20.1 实例说明 416
8.20.2 具体实现 416
8.20.3 特别提醒――常用的
混合方式 419
8.21 显示图片的宽和高 419
8.21.1 实例说明 420
8.21.2 具体实现 420
8.21.3 特别提醒――使用BitmapDrawable或BitmapFactory获取资源
中的位图 421
8.22 绘制各种空心图形、实心图形
和渐变图形 422
8.22.1 实例说明 422
8.22.2 具体实现 422
8.22.3 特别提醒――Canvas与
ImageView对比 424
8.23 编写一个屏保程序 424
8.23.1 实例说明 425
8.23.2 具体实现 425
8.23.3 特别提醒――
4个Runnable 430
8.24 在屏幕中通过单击的方式
移动图片 430
8.24.1 实例说明 430
8.24.2 具体实现 430
8.24.3 特别提醒――Bitmap的
两点重要应用 433
8.25 显示存储卡中的图片 433
8.25.1 实例说明 433
8.25.2 具体实现 433
8.25.3 特别提醒――测试存储卡 435
8.26 显示系统内的图片信息 436
8.26.1 实例说明 436
8.26.2 具体实现 436
8.26.3 特别提醒――BitmapDrawable
操作位图 437
8.27 实现图片阴影效果和影子效果 438
8.27.1 实例说明 438
8.27.2 具体实现 438
8.27.3 特别提醒――设置字体
的阴影 439
第9章 互联网应用 441
9.1 传递HTTP参数 441
9.1.1 实例说明 441
9.1.2 具体实现 441
9.1.3 特别提醒――在Android
系统中打开链接 444
9.2 在手机中浏览网页 444
9.2.1 实例说明 444
9.2.2 具体实现 444
9.2.3 特别提醒――loadUrl方法
访问网页 445
9.3 在手机中使用HTML程序 445
9.3.1 实例说明 445
9.3.2 具体实现 445
9.3.3 特别提醒――开发Android
网络项的注意事项 446
9.4 使用内置浏览器打开网页 446
9.4.1 实例说明 446
9.4.2 具体实现 446
9.4.3 特别提醒――WebSettings
设置WebView属性 448
9.5 在屏幕中显示QQ空间中的图片 448
9.5.1 实例说明 448
9.5.2 具体实现 448
9.5.3 特别提醒――Gallery控件
在游戏中的应用 450
9.6 从网络中下载图片作为屏幕背景 450
9.6.1 实例说明 450
9.6.2 具体实现 450
9.6.3 特别提醒――将InputStream
转换为String 452
9.7 将文件上传至服务器 452
9.7.1 实例说明 452
9.7.2 具体实现 453
9.7.3 特别提醒――表单上传
程序实现文件上传 454
9.8 实现一个RSS系统 455
9.8.1 实例说明 455
9.8.2 具体实现 455
9.8.3 特别提醒――RSS2.0的
语法规则 461
9.9 远程下载并安装一个软件 462
9.9.1 实例说明 462
9.9.2 具体实现 463
9.9.3 特别提醒――APK
文件介绍 466
9.10 开发一个移动微博发布器 469
9.10.1 实例说明 469
9.10.2 具体实现 470
9.10.3 特别提醒――乐多博客
的接口 473
9.11 解析和生成XML 474
9.11.1 实例说明 474
9.11.2 具体实现 474
9.11.3 特别提醒――SAX解析器 475
9.12 获取网络中的图片 476
9.12.1 实例说明 476
9.12.2 具体实现 476
9.12.3 特别提醒――Android中
获取网络图片的3种方法 477
9.13 获取网页的代码 477
9.13.1 实例说明 478
9.13.2 具体实现 478
9.13.3 特别提醒――Android获取
网页数据的方法总结 478
9.14 获取JSON数据 480
9.14.1 实例说明 480
9.14.2 具体实现 480
9.14.3 特别提醒――Android获取
JSON并输出显示的方法 480
9.15 多线程下载 481
9.15.1 实例说明 481
9.15.2 具体实现 481
9.15.3 特别提醒――多线程
下载文件的过程 484
9.16 get方式传递数据 485
9.16.1 实例说明 485
9.16.2 具体实现 485
9.16.3 特别提醒――解决
乱码问题 486
9.17 post方式传递数据 486
9.17.1 实例说明 486
9.17.2 具体实现 486
9.17.3 特别提醒――get方式和
post方式的区别 487
9.18 调用WebService的数据 487
9.18.1 实例说明 487
9.18.2 具体实现 487
9.18.3 特别提醒――WebService
介绍 488
第10章 多媒体应用 489
10.1 调节手机音量的大小 489
10.1.1 实例说明 489
10.1.2 具体实现 489
10.1.3 特别提醒――AudioManager
管理手机声音 492
10.2 在手机中播放MP3文件 492
10.2.1 实例说明 492
10.2.2 具体实现 492
10.2.3 特别提醒――播放手机
卡里的音乐或者网络中
的流媒体 495
10.3 编写一个录音程序 495
10.3.1 实例说明 495
10.3.2 具体实现 496
10.3.3 特别提醒――Android的
开源多媒体框架 500
10.4 在手机中实现相机预览和
拍照功能 500
10.4.1 实例说明 500
10.4.2 具体实现 500
10.4.3 特别提醒――使用摄像头
的方法 505
10.5 在手机中播放影片 507
10.5.1 实例说明 507
10.5.2 具体实现 507
10.5.3 特别提醒――VideoView类
的构造函数 509
10.6 编程的方式设置手机中的铃声 509
10.6.1 实例说明 509
10.6.2 具体实现 510
10.6.3 特别提醒――设置
3种声音 512
10.7 播放远程网络中的MP3 512
10.7.1 实例说明 512
10.7.2 具体实现 512
10.7.3 特别提醒――Runnable并
不一定是新开一个线程 517
10.8 从网络中远程下载手机铃声 517
10.8.1 实例说明 517
10.8.2 具体实现 518
10.8.3 特别提醒――使用
Notification的注意事项 522
10.9 远程观看网络中的3GP视频 522
10.9.1 实例说明 522
10.9.2 具体实现 522
10.9.3 特别提醒――Gallery调用
MediaProvider的数据 527
10.10 在屏幕中播放GIF动画 528
10.10.1 实例说明 528
10.10.2 具体实现 528
10.10.3 特别提醒――GIF动画
和帧播放 532
10.11 编写一个简单的音乐播放器 533
10.11.1 实例说明 533
10.11.2 具体实现 533
10.11.3 特别提醒――SD卡支持
ContentProvider接口 536
10.12 在手机中播放MP4视频 536
10.12.1 实例说明 536
10.12.2 具体实现 536
10.12.3 特别提醒――VideoView
中的常用方法 537
第11章 地图服务 538
11.1 获取当前位置的坐标 538
11.1.1 实例说明 538
11.1.2 具体实现 538
11.1.3 特别提醒――android.location
的定位功能 540
11.2 使用谷歌地图 540
11.2.1 实例说明 540
11.2.2 具体实现 542
11.2.3 特别提醒――使用Map API
密钥的基本流程 544
11.3 输入一个坐标后在地图中
实现定位 546
11.3.1 实例说明 546
11.3.2 具体实现 546
11.3.3 特别提醒――类GeoPoint
的方法 548
11.4 在手机中实现地址查询 548
11.4.1 实例说明 548
11.4.2 具体实现 548
11.4.3 特别提醒――Google Map
API解密 551
11.5 实现路径导航 551
11.5.1 实例说明 551
11.5.2 具体实现 551
11.5.3 特别提醒――起点和
终点的设置 555
11.6 移动手机时自动实现位置更新 556
11.6.1 实例说明 556
11.6.2 具体实现 556
11.6.3 特别提醒――判断GPS模块
是否存在或开启 559
11.7 在地图中绘制线路并计算距离 559
11.7.1 实例说明 559
11.7.2 具体实现 560
11.7.3 特别提醒――JavaScript
overlay类型 564
11.8 在谷歌地图中显示指定的位置 564
11.8.1 实例说明 564
11.8.2 具体实现 564
11.8.3 特别提醒――Android的
位置访问 566
11.9 在屏幕中显示当前位置的
详细信息 566
11.9.1 实例说明 566
11.9.2 具体实现 566
11.9.3 特别提醒――Android中
实现定位的地图 569
11.10 快速查询某个位置 569
11.10.1 实例说明 569
11.10.2 具体实现 569
11.10.3 特别提醒――谷歌地图
的3种视图模式 570
11.11 在手机地图中查询一个地址 571
11.11.1 实例说明 571
11.11.2 具体实现 571
11.11.3 特别提醒――选择
中文输入法 572
第12章 Google API应用 573
12.1 模拟验证官方账号 573
12.1.1 实例说明 573
12.1.2 具体实现 573
12.1.3 特别提醒――Google Account
的组成 578
12.2 实现谷歌搜索功能 578
12.2.1 实例说明 578
12.2.2 具体实现 579
12.2.3 特别提醒――使用
Google Search API的流程 582
12.3 使用Google Chart API
生成二维条码 582
12.3.1 实例说明 582
12.3.2 具体实现 582
12.3.3 特别提醒――Google Chart
API的用法详解 585
12.4 在手机中编写一个翻译软件 586
12.4.1 实例说明 586
12.4.2 具体实现 586
12.4.3 特别提醒――Ajax语言
的API 587
12.5 在手机屏幕中生成二维条码 588
12.5.1 实例说明 588
12.5.2 具体实现 588
12.5.3 特别提醒――DisplayMetircs
处理分辨率问题 591
12.6 引用qrcode项目实现二维条码 591
12.6.1 实例说明 591
12.6.2 具体实现 591
12.6.3 特别提醒――Android拍照
的两种方式 598
第13章 游戏应用 599
13.1 五子棋游戏 599
13.1.1 实例说明 599
13.1.2 具体实现 599
13.2 益智类游戏――魔塔 605
13.2.1 实例说明 605
13.2.2 具体实现 605
13.2.3 特别提醒――一款游戏
产品受到的限制 620
13.3 一个简单的贪吃蛇游戏 620
13.3.1 实例说明 620
13.3.2 具体实现 621
13.3.3 特别提醒――贪吃蛇
游戏的基本思路 624
13.4 扑克游戏 625
13.4.1 实例说明 625
13.4.2 具体实现 625
13.4.3 特别提醒――游戏的
大纲策划 628
13.5 扫雷游戏 629
13.5.1 实例说明 629
13.5.2 具体实现 630
13.5.3 特别提醒――用“？”
标记空白 635
13.6 体育竞技类游戏――疯狂足球 635
13.6.1 实例说明 635
13.6.2 具体实现 636
13.6.3 特别提醒――做好
准备工作 638
13.7 象棋游戏 639
13.7.1 实例说明 639
13.7.2 具体实现 639
13.8 21点游戏 641
13.8.1 实例说明 642
13.8.2 具体实现 642
13.8.3 特别提醒――棋牌游戏
发展现状 644
13.9 俄罗斯方块游戏 644
13.9.1 实例说明 644
13.9.2 具体实现 644
13.9.3 特别提醒――经典
棋牌类游戏 646
13.10 蚂蚁迷呀 647
13.10.1 实例说明 647
13.10.2 具体实现 647
13.11 推箱子游戏 650
13.11.1 实例说明 650
13.11.2 具体实现 650
13.11.3 特别提醒――SurfaceView
的作用 653
13.12 更复杂的扫雷游戏 653
13.12.1 实例说明 653
13.12.2 具体实现 653
13.12.3 特别提醒――关于扫雷
游戏的一点说明 658
第14章 程序优化 659
14.1 标签在UI界面中
的优化作用 659
14.1.1 实例说明 659
14.1.2 具体实现 659
14.1.3 特别提醒――使用
标签的注意事项 661
14.2 测试计算机的性能 661
14.2.1 实例说明 661
14.2.2 具体实现 661
14.2.3 特别提醒――使用
动态代理 664
14.3 测试内存性能 664
14.3.1 实例说明 664
14.3.2 具体实现 664
14.3.3 特别提醒――命名问题 665
14.4 Android Layout优化 666
14.4.1 实例说明 666
14.4.2 具体实现 666
14.4.3 特别提醒――Layout布局
的注意事项 667
14.5 优化Bitmap图片 667
14.5.1 实例说明 667
14.5.2 具体实现 667
14.5.3 特别提醒――Options
中的属性 669
14.6 优化Android模拟器 669
14.6.1 实例说明 669
14.6.2 具体实现 669
14.6.3 特别提醒――开启动画
效果选项 671
第15章 平板电脑应用开发 672
15.1 设置平板程序开发环境 672
15.1.1 实例说明 672
15.1.2 具体实现 672
15.1.3 特别提醒――平板电脑
的分辨率 673
15.2 在平板电脑中开发一个
音乐播放器 674
15.2.1 实例说明 674
15.2.2 具体实现 674
15.2.3 特别提醒――在平板电脑中
开发一个视频播放程序 678
15.3 浏览指定的网页 679
15.3.1 实例说明 679
15.3.2 具体实现 679
15.3.3 特别提醒――设置样式
自适应 682
15.4 开发一个天气预报系统 683
15.4.1 实例说明 683
15.4.2 具体实现 683
15.4.3 特别提醒――XML
实现方式 689
15.5 使用文件存储数据的方法
保存音乐状态 689
15.5.1 实例说明 690
15.5.2 具体实现 690
15.5.3 特别提醒――修改
平板电脑程序 692
15.6 勇敢派递员游戏 692
15.6.1 实例说明 692
15.6.2 具体实现 692
15.6.3 特别提醒――解读
AndEngine框架 693
15.7 愤怒的小鸟游戏 694
15.7.1 实例说明 694
15.7.2 具体实现 694
15.7.3 特别提醒――AndEngine
的基本运行流程 698
15.8 仓库管理系统 698
15.8.1 实例说明 698
15.8.2 具体实现 698
15.8.3 特别提醒――删除供应商
信息步骤及处理流程 702
第16章 移动Web应用 704
16.1 在Android模拟器测试网页 704
16.1.1 实例说明 704
16.1.2 具体实现 704
16.1.3 特别提醒――移动设备
将占据未来计算机市场 705
16.2 编写**个网页 705
16.2.1 实例说明 705
16.2.2 具体实现 705
16.2.3 特别提醒――格式化一级
和二级导航的
元素 709
16.3 使用jQuery设计网页 709
16.3.1 实例说明 709
16.3.2 具体实现 709
16.3.3 特别提醒――jQuery介绍 711
16.4 使用页面模板 711
16.4.1 实例说明 711
16.4.2 具体实现 711
16.4.3 特别提醒――组件的
增强样式 712
16.5 使用多页面模板 712
16.5.1 实例说明 713
16.5.2 具体实现 713
16.5.3 特别提醒――设置内部
页面的页面标题 713
16.6 使用Ajax驱动导航 714
16.6.1 实例说明 714
16.6.2 具体实现 714
16.6.3 特别提醒――分析jQuery
Mobile的处理流程 715
16.7 开发一个Ajax网页 716
16.7.1 实例说明 716
16.7.2 具体实现 716
16.7.3 特别提醒――智能手机
数量猛增 719
16.8 实现基本对话框效果 720
16.8.1 实例说明 720
16.8.2 具体实现 720
16.8.3 特别提醒――使用操作表 721
16.9 实现警告框 721
16.9.1 实例说明 721
16.9.2 具体实现 722
16.9.3 特别提醒――使用
多选项操作表 723
16.10 实现竖屏和横屏自适应效果 723
16.10.1 实例说明 723
16.10.2 具体实现 723
16.10.3 特别提醒――Webkit
的媒体扩展 724
16.11 实现全屏显示效果 724
16.11.1 实例说明 724
16.11.2 具体实现 724
16.11.3 特别提醒――可以用于
定位页眉的3种样式 725
16.12 实现只有图标的按钮效果 725
16.12.1 实例说明 726
16.12.2 具体实现 726
16.12.3 特别提醒――在页眉中
使用分段控件 727
16.13 实现回退按钮效果 727
16.13.1 实例说明 727
16.13.2 具体实现 727
16.13.3 特别提醒――在页眉中
添加回退链接 728
16.14 在表单中输入文本 728
16.14.1 实例说明 729
16.14.2 具体实现 729
16.14.3 特别提醒――将输入
字段与其语义类型关联 730
16.15 动态输入文本 731
16.15.1 实例说明 731
16.15.2 具体实现 731
16.15.3 特别提醒――使用
选择菜单 732
16.16 实现一个自定义选择菜单效果 732
16.16.1 实例说明 732
16.16.2 具体实现 732
16.16.3 特别提醒――占位符选项 734
16.17 使用内置列表 734
16.17.1 实例说明 734
16.17.2 具体实现 734
16.17.3 特别提醒――使用
列表分割线 735
16.18 实现缩略图列表效果 735
16.18.1 实例说明 735
16.18.2 具体实现 735
16.18.3 特别提醒――使用拆分
按钮列表 737
16.19 实现可折叠设置效果 737
16.19.1 实例说明 737
16.19.2 具体实现 737
16.19.3 特别提醒――使用CSS
设置样式 739
16.20 使用网络连接API 739
16.20.1 实例说明 739
16.20.2 具体实现 739
16.20.3 特别提醒――使用
指南针API 740
16.21 预加载一个网页 740
16.21.1 实例说明 740
16.21.2 具体实现 741
16.21.3 特别提醒――
Pagebeforechange事件 741
16.22 开发一个Web版的电话簿系统 741
16.22.1 实例说明 742
16.22.2 具体实现 742
16.22.3 特别提醒――使用
页面初始化事件 Page
initialization events 746
16.23 搭建PhoneGap开发环境 746
16.23.1 实例说明 746
16.23.2 具体实现 747
16.23.3 特别提醒――PhoneGap
移动Web开发的步骤 748
16.24 创建基于PhoneGap的
HeIIoWorld程序 748
16.24.1 实例说明 748
16.24.2 具体实现 748
16.24.3 特别提醒――
使用PhoneGap API 752
第17章 创意开发 753
17.1 开发一个蓝牙遥控器 753
17.1.1 实例说明 753
17.1.2 具体实现 753
17.1.3 特别提醒――蓝牙在模拟
器上发生问题 758
17.2 手机模拟实现跋杯仪式 758
17.2.1 实例说明 758
17.2.2 具体实现 759
17.2.3 特别提醒――使用
传感器技术 763
17.3 随时检测我们当前的加速度 763
17.3.1 实例说明 763
17.3.2 具体实现 763
17.3.3 特别提醒――安装SensorSimulator工具 765
17.4 语音识别系统 767
17.4.1 实例说明 767
17.4.2 具体实现 767
17.4.3 特别提醒――谷歌的语音
识别技术 768
17.5 在Android中使用JavaScript 769
17.5.1 实例说明 769
17.5.2 具体实现 769
17.5.3 特别提醒――在Android
中做网页 771
17.6 动态更换壁纸 771
17.6.1 实例说明 771
17.6.2 具体实现 771
17.6.3 特别提醒――Service
BroadcastReceiver与
AlarmManager 772
17.7 二维扫描码程序 772
17.7.1 实例说明 772
17.7.2 具体实现 773
17.7.3 特别提醒――Zxing
开源项目 775
17.8 随身日记本 775
17.8.1 实例说明 775
17.8.2 具体实现 775
17.8.3 特别提醒――Cursor对象
的常用方法 777
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通Android 实例开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android应用程序设计
第1章  Android概述	1
1.1  Android简介	1
1.2  Android发展历史	2
1.3  Android平台框架	4
1.4  Android基本组件	6
1.5  习题	8
第2章  Android开发平台的搭建与设置	9
2.1  Android开发工具	9
2.2  搭建与设置Android开发平台	12
2.3  创建Hello Android项目	15
2.4  Android 应用程序构成	16
2.5  习题	19
第3章  Activity组件	20
3.1  Activity简介	20
3.2  调用其他的Activity	21
3.3  不同Activity之间的数据传送	24
3.4  返回数据到前一个Activity	26
3.5  Activity的生命周期与管理	28
3.6  习题	33
第4章  Android布局管理	34
4.1  View布局概述	34
4.2  线性布局	36
4.3  表格布局	40
4.4  相对布局	43
4.5  帧布局	47
4.6  绝对布局	49
4.7  布局的嵌套	51
4.8  习题	54
第5章  常用基本控件	55
5.1  文本控件	55
5.2  按钮控件	59
5.3  单选按钮	63
5.4  复选框	67
5.5  图片控件	70
5.6  时钟控件	73
5.7  日期与时间控件	75
5.8  习题	78
第6章  高级控件	80
6.1  自动完成文本框	80
6.2  下拉列表控件	83
6.3  滚动视图	90
6.4  列表视图	92
6.5  网格视图	102
6.6  进度条与滑块	106
6.7  选项卡	110
6.8  画廊控件	117
6.9  习题	121
第7章  菜单与消息提示	123
7.1  选项菜单	123
7.2  上下文菜单	128
7.3  对话框	131
7.4  消息提示	139
7.5  状态栏通知	143
7.6  习题	147
第8章  Android程序调试	149
8.1  DDMS介绍	149
8.2  启动DDMS	150
8.3  使用DDMS进行进程管理	151
8.4  使用DDMS进行文件操作	154
8.5  使用模拟器控制	155
8.6  使用程序日志LogCat	157
8.7  在模拟器或者目标设备上截屏	159
8.8  使用手机调试Android程序	159
8.9  习题	160
第9章  Android数据存储与处理	161
9.1  首选项	161
9.2  文件	170
9.3  数据库	187
9.4  ContentProvider类	200
9.5  习题	211
第10章  网络通信与服务	213
10.1  HTTP通信	213
10.2  WebView	220
10.3  发送E-mail	227
10.4  消息广播	231
10.5  Service组件	236
10.6  习题	244
第11章  手机通信与设置	245
11.1  拨打电话与电话过滤	245
11.2  收发短信	250
11.3  手机系统设置	256
11.4  手机声音设置	262
11.5  手机闹钟设置	268
11.6  习题	274
第12章  Android游戏制作	275
12.1  Android 游戏的基础技术	275
12.2  贪吃蛇游戏的解析	281
12.3  贪吃蛇游戏的功能拓展	300
12.4  本章小结	303
12.5  习题	304
参考文献	305
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android应用程序设计
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通Android网络开发
第一篇 基础知识篇
第1章 Android技术概述	2
1．1 智能手机系统介绍	2
1．1．1 何谓智能手机	2
1．1．2 Android 5．0的突出变化	2
1．2 搭建Android应用开发环境	3
1．2．1 安装Android SDK的系
统要求	4
1．2．2 安装JDK	4
1．2．3 获取并安装Eclipse和Android
SDK	7
1．2．4 安装ADT	8
1．2．5 设定Android SDK Home	9
1．2．6 验证开发环境	10
1．2．7 创建Android虚拟设备
（AVD）	10
1．2．8 启动AVD模拟器	12
1．2．9 解决搭建环境过程中的
常见问题	14
第2章 Android技术核心框架分析	17
2．1 简析Android安装文件	17
2．1．1 Android SDK结构	17
2．1．2 android．jar及内部结构	18
2．1．3 阅读SDK帮助文档	18
2．1．4 常用的SDK工具	19
2．2 演示官方实例	20
2．3 剖析Android系统架构	21
2．3．1 Android体系结构介绍	21
2．3．2 Android应用工程文件组成	23
2．4 简述五大组件	25
2．4．1 用Activity来表现界面	25
2．4．2 用Intent和Intent Filter
实现切换	26
2．4．3 Service为你服务	26
2．4．4 用Broadcast Intent Receiver
发送广播	27
2．4．5 用Content Provider存储
数据	27
2．5 进程和线程	27
2．5．1 先看进程	27
2．5．2 再看线程	28
2．5．3 应用程序的生命周期	28
2．6 第一段Android程序	30
第3章 网络开发技术基础	34
3．1 HTML简介	34
3．1．1 HTML初步	34
3．1．2 字体格式设置	35
3．1．3 使用标示标记	37
3．1．4 使用区域和段落标记	37
3．1．5 使用表格标记	38
3．1．6 使用表单标记	41
3．2 CSS技术基础	43
3．2．1 基本语法	43
3．2．2 CSS属性介绍	44
3．2．3 CSS编码规范	46
3．3 JavaScript技术基础	46
3．3．1 JavaScript概述	47
3．3．2 JavaScript运算符	47
3．3．3 JavaScript循环语句	48
3．3．4 JavaScript函数	50
3．3．5 JavaScript事件	52
第2篇 网络数据通信篇
第4章 HTTP数据通信	56
4．1 HTTP基础	56
4．1．1 HTTP概述	56
4．1．2 HTTP协议的功能	56
4．1．3 Android中的HTTP	57
4．2 使用Apache接口	58
4．2．1 Apache接口基础	58
4．2．2 Apache应用要点（1）	58
4．2．3 Apache应用要点（2）	61
4．3 使用标准的Java接口	68
4．3．1 IP地址	68
4．3．2 URL地址	69
4．3．3 套接字Socket类	69
4．3．4 URLConncetion类	70
4．3．5 在Android中使用java．net	70
4．4 使用Android网络接口	72
4．5 实战演练	72
4．5．1 实战演练——在手机屏幕中
传递HTTP参数	72
4．5．2 实战演练——在Android手机
中通过Apache HTTP访问
HTTP资源	76
第5章 URL处理数据	79
5．1 URL和URLConnection	79
5．1．1 URL类详解	79
5．1．2 实战演练——在手机屏幕中
显示QQ空间中的照片	84
5．1．3 实战演练——从网络中下载
图片作为屏幕背景	86
5．2 HttpURLConnection详解	89
5．2．1 HttpURLConnection的主要
用法	89
5．2．2 实战演练——在Android手机
屏幕中显示网络中的图片	91
5．2．3 在手机屏幕中显示网页	93
第6章 处理XML数据	96
6．1 XML技术基础	96
6．1．1 XML的概述	96
6．1．2 XML的语法	96
6．1．3 获取XML文档	97
6．2 使用SAX解析XML数据	98
6．2．1 SAX的原理	98
6．2．2 基于对象和基于事件的接口	99
6．2．3 常用的接口和类	100
6．2．4 实战演练——在Android系统
中使用SAX解析XML数据	103
6．3 使用DOM解析XML 105
6．3．1 DOM概述	105
6．3．2 DOM的结构	105
6．3．3 实战演练——在Android系统
中使用DOM解析XML
数据	107
6．4 Pull解析技术	109
6．4．1 Pull解析原理	109
6．4．2 实战演练——在Android
系统中使用Pull解析
XML数据	110
6．5 实战演练——3种解析方式的
综合演练	112
第7章 下载远程数据	119
7．1 下载网络中的图片数据	119
7．2 下载网络中的JSON数据	121
7．2．1 JSON基础	121
7．2．2 实战演练——远程下载
服务器中的JSON数据	122
7．3 下载某个网页的源码	125
7．4 远程获取多媒体文件	127
7．4．1 实战演练——下载并播放
网络中的MP3	127
7．4．2 实战演练——下载在线铃声	133
7．5 多线程下载	137
7．5．1 多线程下载文件的过程	137
7．5．2 实战演练——在Android
系统中实现多线程下载	138
7．6 远程下载并安装APK文件	150
7．6．1 APK基础	150
7．6．2 实战演练——在Android系统
中下载并安装APK文件	152
第8章 上传数据	157
8．1 实战演练——上传文件到远程
服务器	157
8．2 使用Get方式上传数据	159
8．3 使用Post方式上传数据	163
8．4 使用HTTP协议实现上传	166
8．4．1 一段演示代码	166
8．4．2 实战演练——HTTP协议
实现文件上传	171
第9章 使用Socket实现数据通信	176
9．1 Socket编程初步	176
9．1．1 TCP/IP协议基础	176
9．1．2 UDP协议	177
9．1．3 基于Socket的Java网络
编程	177
9．2 TCP编程详解	178
9．2．1 使用ServerSocket	179
9．2．2 使用Socket	179
9．2．3 TCP中的多线程	181
9．2．4 实现非阻塞Socket通信	184
9．3 UDP编程	188
9．3．1 使用DatagramSocket	188
9．3．2 使用MulticastSocket	192
9．4 实战演练——在Android中使用
Socket实现数据传输	195
第10章 使用WebKit浏览网页数据	198
10．1 WebKit源码分析	198
10．1．1 Java层框架	198
10．1．2 C/C++层框架	202
10．2 分析WebKit的操作过程	205
10．2．1 WebKit初始化	205
10．2．2 载入数据	206
10．2．3 刷新绘制	207
10．3 WebView详解	208
10．3．1 WebView介绍	208
10．3．2 实现WebView的两种方式	210
10．3．3 WebView的几个常见功能	212
10．4 实战演练	217
10．4．1 实战演练——在手机屏幕
中浏览网页	217
10．4．2 实战演练——加载一个指定
的HTML程序	219
10．4．3 实战演练——使用WebView
加载JavaScript程序	220
10．5 使用WebView的注意事项	223
第3篇 移动Web应用篇
第11章 HTML5技术初步	226
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通Android网络开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android安全攻防实践
第1章　实验环境搭建　　1
1.1　安装工具　　1
1.2　Android Studio　　4
1.3　安装安卓虚拟机　　13
1.3.1　真实设备　　15
1.3.2　Apktool　　16
1.3.3　Dex2jar/JD-GUI　　17
1.3.4　Burp Suite　　18
1.4　配置安卓虚拟机　　19
1.4.1　Drozer　　20
1.4.2　QARK（不支持Windows）　　24
1.4.3　Chrome浏览器的Advanced REST Client扩展程序　　25
1.4.4　Droid Explorer　　26
1.4.5　Cydia Substrate和Introspy　　27
1.4.6　SQLite browser　　28
1.4.7　Frida　　30
1.4.8　易受攻击的应用　　32
1.4.9　Kali Linux　　33
1.5　adb入门　　33
1.5.1　检查已连接的设备　　33
1.5.2　启动shell　　34
1.5.3　列出软件包　　34
1.5.4　推送文件到设备　　35
1.5.5　从设备中拉取文件　　35
1.5.6　通过adb安装应用　　35
1.5.7　adb连接故障排除　　36
1.6　小结　　36
第2章　安卓ROOT　　37
2.1　什么是ROOT　　37
2.1.1　为什么要ROOT设备　　38
2.1.2　ROOT的好处　　38
2.1.3　ROOT的坏处　　39
2.2　锁定的和已解锁的boot loader　　41
2.2.1　确定索尼设备是否已解锁boot loader　　41
2.2.2　按照供应商提供的方法解锁索尼设备的boot loader　　43
2.2.3　ROOT已解锁boot loader的三星设备　　46
2.3　官方recovery和第三方recovery　　46
2.4　ROOT流程和安装第三方ROM　　49
2.5　ROOT三星Note 2手机　　53
2.6　向手机刷入第三方ROM　　55
2.7　小结　　60
第3章　安卓应用的基本构造　　61
3.1　安卓应用的基础知识　　61
3.1.1　安卓应用的结构　　61
3.1.2　APK文件的存储位置　　63
3.2　安卓应用的组件　　67
3.2.1　activity　　67
3.2.2　服务　　68
3.2.3　广播接收器　　69
3.2.4　内容提供程序　　69
3.2.5　安卓应用的构建过程　　69
3.3　从命令行编译DEX文件　　72
3.4　应用运行时发生了什么　　74
3.5　理解应用沙盒　　75
3.5.1　一个应用对应一个UID　　75
3.5.2　应用沙盒　　78
3.5.3　是否有方法打破沙盒限制　　80
3.6　小结　　80
第4章　安卓应用攻击概览　　81
4.1　安卓应用简介　　81
4.1.1　Web应用　　81
4.1.2　原生应用　　82
4.1.3　混合应用　　82
4.2　理解应用攻击面　　82
4.3　客户端存在的威胁　　84
4.4　后端存在的威胁　　84
4.5　移动应用测试与安全指南　　85
4.5.1　OWASP移动应用十大风险（2014）　　85
4.5.2　M1：弱服务器端控制　　86
4.5.3　M2：不安全的数据存储　　86
4.5.4　M3：传输层保护不足　　87
4.5.5　M4：意外的数据泄漏　　87
4.5.6　M5：糟糕的授权和身份认证　　87
4.5.7　M6：被破解的加密技术　　88
4.5.8　M7：客户端注入　　88
4.5.9　M8：通过不受信任的输入进行安全决策　　88
4.5.10　M9：会话处理不当　　88
4.5.11　M10：缺乏二进制文件保护　　89
4.6　自动化工具　　89
4.6.1　Drozer　　89
4.6.2　使用Drozer进行安卓安全评估　　90
4.7　识别攻击面　　92
4.8　QARK　　94
4.8.1　以交互模式运行QARK　　94
4.8.2　以无缝模式运行QARK　　100
4.9　小结　　102
第5章　数据存储与数据安全　　103
5.1　什么是数据存储　　103
5.2　共享首选项　　107
5.3　SQLite数据库　　110
5.4　内部存储　　111
5.5　外部存储　　113
5.6　用户字典缓存　　115
5.7　不安全的数据存储——NoSQL数据库　　115
5.8　备份技术　　118
5.8.1　使用adb backup命令备份应用数据　　119
5.8.2　使用Android Backup Extractor将.ab格式转换为.tar格式　　120
5.8.3　使用pax或star工具解压TAR文件　　122
5.8.4　分析解压内容并查找安全问题　　122
5.9　确保数据安全　　125
5.10　小结　　125
第6章　服务器端攻击　　126
6.1　不同类型的移动应用及其威胁模型　　127
6.2　移动应用服务器端的攻击面　　127
6.3　移动后端测试方法　　128
6.3.1　设置用于测试的Burp Suite代理　　128
6.3.2　绕过证书锁定　　136
6.3.3　使用AndroidSSLTrustKiller绕过证书锁定　　137
6.3.4　后端威胁　　139
6.4　小结　　145
第7章　客户端攻击——静态分析技术　　146
7.1　攻击应用组件　　146
7.1.1　针对activity的攻击　　146
7.1.2　针对服务的攻击　　151
7.1.3　针对广播接收器的攻击　　153
7.1.4　对内容提供程序的攻击　　155
7.1.5　注入测试　　160
7.2　使用QARK进行静态分析　　164
7.3　小结　　166
第8章　客户端攻击——动态分析技术　　167
8.1　使用Drozer进行安卓应用自动化测试　　167
8.1.1　列出全部模块　　168
8.1.2　检索包信息　　169
8.1.3　查找目标应用的包名　　170
8.1.4　获取包信息　　170
8.1.5　转储AndroidManifes.xml文件　　171
8.1.6　查找攻击面　　172
8.1.7　针对activity的攻击　　173
8.1.8　针对服务的攻击　　175
8.1.9　广播接收器　　176
8.1.10　使用Drozer引起内容提供程序泄漏和进行SQL注入　　177
8.1.11　使用Drozer进行SQL注入攻击　　179
8.1.12　内容提供程序目录遍历攻击　　182
8.1.13　利用可调试的应用　　184
8.2　Cydia Substrate简介　　186
8.3　使用Introspy进行运行时监控与分析　　187
8.4　使用Xposed框架进行hook　　191
8.5　使用Frida进行动态插桩　　198
8.6　基于日志的漏洞　　201
8.7　WebView攻击　　203
8.7.1　通过file scheme访问本地敏感资源　　203
8.7.2　其他WebView问题　　206
8.8　小结　　207
第9章　安卓恶意软件　　208
9.1　编写安卓恶意软件　　209
9.2　注册权限　　216
9.3　恶意应用分析　　226
9.3.1　静态分析　　226
9.3.2　动态分析　　232
9.4　自动化分析工具　　236
9.5　小结　　236
第10章　针对安卓设备的攻击　　237
10.1　中间人攻击　　237
10.2　来自提供网络层访问的应用的威胁　　239
10.3　利用现有漏洞　　243
10.4　恶意软件　　246
10.5　绕过锁屏　　247
10.5.1　利用adb绕过图案锁　　247
10.5.2　使用adb绕过密码或PIN码　　249
10.5.3　利用CVE-2013-6271漏洞绕过锁屏　　252
10.6　从SD卡拉取数据　　252
10.7　小结　　253

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android安全攻防实践
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入解析Android虚拟机
第1章　获取并编译Android源码　1
1.1　获取Android源码　1
1.1.1　在Linux系统获取Android
源码　1
1.1.2　在Windows平台获取Android
源码　2
1.1.3　Windows获取Android L源码　4
1.2　分析Android源码结构　6
1.3　编译Android源码　8
1.3.1　搭建编译环境　8
1.3.2　开始编译　9
1.3.3　在模拟器中运行　10
1.3.4　常见的错误分析　10
1.3.5　实践演练—演示两种编译Android程序的方法　11
1.4　编译Android Kernel　14
1.4.1　获取Goldfish内核代码　14
1.4.2　获取MSM内核代码　17
1.4.3　获取OMAP内核代码　17
1.4.4　编译Android的Linux内核　17
第2章　Java虚拟机基础　19
2.1　虚拟机的作用　19
2.2　Java虚拟机概述　20
2.2.1　JVM的数据类型　20
2.2.2　Java虚拟机体系结构　21
2.2.3　JVM的生命周期　25
2.3　JVM的安全性　26
2.3.1　JVM的安全模型　26
2.3.2　沙箱模型的4种组件　27
2.3.3　分析Java的策略机制　28
2.4　网络移动性　29
2.4.1　现实需要网络移动性　29
2.4.2　网络移动性　30
2.5　内存异常和垃圾处理　31
2.5.1　内存分配中的栈和堆　31
2.5.2　运行时的数据区域　33
2.5.3　对象访问　34
2.5.4　内存泄露　35
2.5.5　JVM的垃圾收集策略　36
2.5.6　垃圾收集器　37
2.6　Java内存模型　37
2.6.1　Java内存模型概述　38
2.6.2　主内存与工作内存　38
2.6.3　内存间交互操作　39
第3章　Dalvik和ART基础　40
3.1　Dalvik VM和JVM的差异　40
3.2　Dalvik虚拟机的主要特征　41
3.3　Dalvik VM架构　42
3.3.1　Dalvik虚拟机的代码结构　42
3.3.2　dx工具　44
3.3.3　Dalvik VM的进程管理　44
3.3.4　Android的初始化流程　44
3.4　Dalvik VM控制VM命令详解　45
3.4.1　基本命令　45
3.4.2　扩展的JNI检测　45
3.4.3　断言　46
3.4.4　字节码校验和优化　46
3.4.5　Dalvik VM的运行模式　47
3.4.6　死锁预测　47
3.4.7　dump堆栈追踪　48
3.4.8　dex文件和校验　48
3.4.9　产生标志位　48
3.5　ART机制基础　48
3.5.1　什么是ART模式　48
3.5.2　ART优化机制基础　50
第4章　分析JNI　52
4.1　JNI的本质　52
4.2　分析Java层　54
4.2.1　加载JNI库　54
4.2.2　实现扫描工作　55
4.2.3　读取并保存信息　56
4.2.4　删除SD卡外的信息　58
4.2.5　直接转向JNI　58
4.2.6　扫描函数scanFile　59
4.2.7　JNI中的异常处理　59
4.3　分析JNI层　60
4.3.1　将Native对象的指针保存到
Java对象　60
4.3.2　创建Native层的MediaScanner
对象　60
4.4　Native（本地）层　61
4.4.1　注册JNI函数　61
4.4.2　完成注册工作　63
4.4.3　动态注册　64
4.4.4　处理路径参数　65
4.4.5　扫描文件　66
4.4.6　添加TAG信息　66
4.4.7　总结函数JNI_OnLoad()与函数JNI_OnUnload()的用途　67
4.4.8　Java与JNI基本数据类型
转换　67
4.4.9　JNIEnv接口　69
4.4.10　JNI中的环境变量　70
第5章　分析内存系统　71
5.1　分析Android的进程通信机制　71
5.1.1　Android的进程间通信（IPC）
机制Binder　71
5.1.2　Service Manager是Binder
机制的上下文管理者　72
5.1.3　Service Manager服务　86
5.2　匿名共享内存子系统详解　89
5.2.1　基础数据结构　89
5.2.2　初始化处理　90
5.2.3　打开匿名共享内存设备文件　91
5.2.4　内存映射　93
5.2.5　读写操作　94
5.2.6　锁定和解锁　95
5.2.7　回收内存块　100
5.3　C++访问接口层详解　101
5.3.1　接口MemoryBase　101
5.3.2　接口MemoryBase　108
5.4　Java访问接口层详解　111
第6章　Android程序的生命周期管理　115
6.1　Android程序的生命周期　115
6.1.1　进程和线程　115
6.1.2　进程的类型　116
6.2　Activity的生命周期　116
6.2.1　Activity的几种状态　117
6.2.2　分解剖析Activity　117
6.2.3　几个典型的场景　119
6.2.4　管理Activity的生命周期　119
6.2.5　Activity的实例化与启动　120
6.2.6　Activity的暂停与继续　120
6.2.7　Activity的关闭/销毁与
重新运行　121
6.2.8　Activity的启动模式　121
6.3　进程与线程　122
6.3.1　进程　122
6.3.2　线程　123
6.3.3　线程安全的方法　123
6.3.4　Android的线程模型　123
6.4　测试生命周期　125
6.5　Service的生命周期　129
6.5.1　Service的基本概念和用途　129
6.5.2　Service的生命周期详解　129
6.5.3　Service与Activity通信　129
6.6　Android广播的生命周期　133
6.6.1　Android 的广播机制　133
6.6.2　编写广播程序　133
6.7　ART进程管理　135
第7章　IPC进程通信机制　147
7.1　Binder机制概述　147
7.2　Service Manager是Binder机制的
上下文管理者　148
7.2.1　入口函数　148
7.2.2　打开Binder设备文件　149
7.2.3　创建设备文件　149
7.2.4　管理内存映射地址空间　154
7.2.5　发生通知　156
7.2.6　循环等待　161
7.3　内存映射　162
7.3.1　实现内存分配功能　162
7.3.2　分配物理内存　164
7.3.3　释放物理页面　166
7.3.4　分配内核缓冲区　167
7.3.5　释放内核缓冲区　168
7.3.6　查询内核缓冲区　170
第8章　init进程详解　171
8.1　init基础　171
8.2　分析入口函数　172
8.3　配置文件详解　174
8.3.1　init.rc简介　174
8.3.2　分析init.rc的过程　176
8.4　解析service　179
8.4.1　Zygote对应的service action　179
8.4.2　init组织service　180
8.4.3　函数parse_service和parse_line_service　181
8.5　字段on　184
8.5.1　Zygote对应的on action　184
8.5.2　init组织on　185
8.5.3　解析on用到的函数　186
8.6　在init控制service　186
8.6.1　启动Zygote　186
8.6.2　启动service　187
8.6.3　4种启动service的方式　191
8.7　控制属性服务　194
8.7.1　引入属性　194
8.7.2　初始化属性服务　197
8.7.3　启动属性服务　197
8.7.4　处理设置属性的请求　200
第9章　Dalvik VM的进程系统　202
9.1　Zygote（孕育）进程详解　202
9.1.1　Zygote基础　202
9.1.2　分析Zygote的启动过程　203
9.2　System进程详解　216
9.2.1　启动System进程前的准备
工作　216
9.2.2　分析SystemServer　217
9.2.3　分析EntropyService　220
9.2.4　分析DropBoxManagerService　222
9.2.5　分析DiskStatsService　227
9.2.6　分析DeviceStorageManager Service　231
9.2.7　分析SamplingProfilerService　233
9.2.8　分析ClipboardService　241
9.3　应用程序进程详解　247
9.3.1　创建应用程序　247
9.3.2　启动线程池　256
9.3.3　创建信息循环　257
第10章　Dalvik VM运作流程详解　259
10.1　Dalvik VM相关的可执行程序　259
10.1.1　dalvikvm、dvz和app_process
简介　259
10.1.2　对比app_process和dalvikvm的
执行过程　260
10.2　初始化Dalvik虚拟机　262
10.2.1　开始虚拟机的准备工作　262
10.2.2　初始化跟踪显示系统　262
10.2.3　初始化垃圾回收器　263
10.2.4　初始化线程列表和主线程
环境参数　263
10.2.5　分配内部操作方法的表格
内存　264
10.2.6　初始化虚拟机的指令码相关
的内容　264
10.2.7　分配指令寄存器状态的
内存　264
10.2.8　分配指令寄存器状态的内存
和最基本用的Java库　265
10.2.9　初始化使用的Java类库
线程类　266
10.2.10　初始化虚拟机使用的异常
Java类库　267
10.2.11　初始化其他对象　268
10.3　启动Zygote　276
10.3.1　在init.rc中配置Zygote启动
参数　276
10.3.2　启动Socket服务端口　276
10.3.3　加载preload-classes　277
10.3.4　加载preload-resources　277
10.3.5　使用folk启动新进程　278
10.4　启动SystemServer进程　278
10.4.1　启动各种系统服务线程　279
10.4.2　启动第一个Activity　280
10.5　加载class类文件　281
10.5.1　DexFile在内存中的映射　281
10.5.2　ClassObject—Class在
加载后的表现形式　283
10.5.3　加载Class并生成相应
ClassObject的函数　283
10.5.4　加载基本类库文件　284
10.5.5　加载用户类文件　284
第11章　DEX文件详解　285
11.1　DEX文件介绍　285
11.2　DEX文件的格式　285
11.2.1　map_list　286
11.2.2　string_id_item　288
11.2.3　type_id_item　291
11.2.4　proto_id_item　292
11.2.5　ield_id_item　293
11.2.6　method_id_item　293
11.2.7　class_def_item　294
11.3　DEX文件结构　297
11.3.1　文件头（File Header）　297
11.3.2　魔数字段　298
11.3.3　检验码字段　298
11.3.4　SHA-1签名字段　300
11.3.5　map_off字段　300
11.3.6　string_ids_size和off字段　301
11.4　DEXFile接口详解　303
11.4.1　构造函数　303
11.4.2　公共方法　304
11.5　DEX和动态加载类机制　306
11.5.1　类加载机制　306
11.5.2　具体加载　306
11.5.3　代码加密　308
11.6　动态加载jar和DEX　309
第12章　Dvlik VM内存系统详解　310
12.1　如何分配内存　310
12.2　内存管理机制详解　312
12.3　优化Dalvik虚拟机的堆内存分配　326
第13章　Dalvik VM垃圾收集机制　328
13.1　引用计数算法　328
13.2　Mark Sweep算法　328
13.3　和垃圾收集算法有关的函数　330
13.4　垃圾回收的时机　346
13.5　调试信息　347
13.6　Dalvik VM和JVM垃圾收集机制的
区别　348
第14章　Dalvik VM内存优化机制详解　350
14.1　sp和wp简介　350
14.1.1　sp基础　350
14.1.2　wp基础　351
14.2　智能指针详解　351
14.2.1　智能指针基础　352
14.2.2　轻量级指针　353
14.2.3　强指针　355
14.2.4　弱指针　365
第15章　分析Dalvik VM的启动过程　369
15.1　Dalvik VM启动流程概览　369
15.2　Dalvik VM启动过程详解　370
15.2.1　创建Dalvik VM实例　370
15.2.2　指定一系列控制选项　371
15.2.3　创建并初始化Dalvik VM
实例　376
15.2.4　创建JNIEnvExt对象　378
15.2.5　设置当前进程和进程组ID　382
15.2.6　注册Android核心类的JNI
方法　382
15.2.7　创建javaCreateThreadEtc
钩子　385
第16章　注册Dalvik VM并创建线程　387
16.1　注册Dalvik VM的JNI方法　387
16.1.1　设置加载程序　387
16.1.2　加载so文件并验证　387
16.1.3　获取描述类　392
16.1.4　注册JNI方法　392
16.1.5　实现JNI操作　394
16.2　创建Dalvik VM进程　395
16.2.1　分析底层启动过程　395
16.2.2　创建Dalvik VM进程　395
16.2.3　初始化运行的Dalvik VM　398
16.3　创建Dalvik VM线程　399
16.3.1　检查状态值　399
16.3.2　创建线程　399
16.3.3　分析启动过程　402
16.3.4　清理线程　404
第17章　Dalvik VM异常处理详解　407
17.1　Java异常处理机制　407
17.1.1　方法调用栈　407
17.1.2　Java提供的异常处理类　409
17.2　Java VM异常处理机制详解　409
17.2.1　Java语言及虚拟机的异常
处理机制　410
17.2.2　COSIX虚拟机异常处理的
设计与实现　410
17.3　分析Dalvik虚拟机异常处理的
源码　414
17.3.1　初始化虚拟机使用的异常
Java类库　414
17.3.2　抛出一个线程异常　415
17.3.3　持续抛出进程　415
17.3.4　找出异常原因　416
17.3.5　找出异常原因　417
17.3.6　清除挂起的异常和等待
初始化的异常　420
17.3.7　包装“现在等待”异常的
不同例外　420
17.3.8　输出跟踪当前异常的错误
信息　421
17.3.9　搜索和当前异常相匹配的
方法　421
17.3.10　获取匹配的捕获块　423
17.3.11　进行堆栈跟踪　424
17.3.12　生成堆栈跟踪元素　425
17.3.13　将内容添加到堆栈跟踪
日志中　426
17.3.14　将内容添加到堆栈跟踪
日志中　427
17.4　常见异常的类型与原因　428
17.4.1　SQLException：操作数据库
异常类　428
17.4.2　ClassCastException：数据
类型转换异常　428
17.4.3　NumberFormatException：
字符串转换为数字类型时
抛出的异常　428
17.5　调用堆栈跟踪分析异常　429
17.5.1　解决段错误　429
17.5.2　跟踪Android Callback调用
堆栈　431
第18章　JIT编译　434
18.1　JIT简介　434
18.1.1　JIT概述　434
18.1.2　Java虚拟机主要的优化
技术　436
18.1.3　Dalvik中JIT的实现　436
18.2　Dalvik VM对JIT的支持　436
18.3　汇编代码和改动　438
18.3.1　汇编部分代码　438
18.3.2　对C文件的改动　438
18.4　Dalvik VM中的JIT源码　439
18.4.1　入口文件　439
18.4.2　核心函数　447
18.4.3　编译文件　450
18.4.4　BasicBlock处理　458
18.4.5　内存初始化　459
18.4.6　对JIT源码的总结　462
第19章　Dalvik VM内存优化　463
19.1　Android内存优化的作用　463
19.2　查看Android内存和CPU使用情况　464
19.2.1　利用Android API函数查看　464
19.2.2　直接对Android文件进行
解析查询　464
19.2.3　通过Runtime类实现　465
19.2.4　使用DDMS工具获取　465
19.2.5　其他方法　469
19.3　Android的内存泄露　472
19.3.1　什么是内存泄漏　472
19.3.2　为什么会发生内存泄露　473
19.3.3　shallow size、retained size　474
19.3.4　查看Android内存泄露的
工具——MAT　475
19.3.5　查看Android内存泄露的
方法　478
19.3.6　Android（Java）中常见的容易
引起内存泄漏的不良代码　480
19.4　常见的引起内存泄露的坏习惯　480
19.4.1　查询数据库时忘记
关闭游标　481
19.4.2　构造Adapter时不习惯使用
缓存的convertView　481
19.4.3　没有及时释放对象的引用　482
19.4.4　不在使用Bitmap对象时调用
recycle()释放内存　482
19.5　解决内存泄露实践　483
19.5.1　使用MAT根据heap dump分析Java代码内存泄漏的根源　483
19.5.2　演练Android中内存泄露
代码优化及检测　489
第20章　Dalvik VM性能优化　491
20.1　加载APK/DEX文件优化　491
20.1.1　APK文件介绍　492
20.1.2　DEX文件优化　493
20.1.3　使用类动态加载技术实现
加密优化　493
20.2　SD卡优化　496
20.3　虚拟机优化详解　497
20.3.1　平台优化—ARM的流水线
技术　497
20.3.2　Android对C库优化　501
20.3.3　优化创建的进程　504
20.3.4　渲染优化　504
第21章　分析ART的启动过程　508
21.1　运行环境的转换　508
21.2　运行 app_process 进程　509
21.3　准备启动　512
21.4　创建运行实例　518
21.5　注册本地JNI函数　519
21.6　启动守护进程　520
21.7　解析参数　521
21.8　初始化类、方法和域　528
第22章　执行ART主程序　534
22.1　进入main主函数　534
22.2　查找目标类　535
22.2.1　函数LookupClass()　535
22.2.2　函数DefineClass()　537
22.2.3　函数InsertClass()　540
22.2.4　函数LinkClass()　541
22.3　类操作　543
22.4　实现托管操作　544
第23章　安装APK应用程序　549
23.1　PackageManagerService概述　549
23.2　主函数main　549
23.3　调用初始化函数　550
23.4　创建PackageManagerService服务　553
23.5　扫描并解析　554
23.6　保存解析信息　570
第24章　ART环境安装APK应用程序　572
24.1　Android安装APK概述　572
24.2　启动时安装　572
24.3　ART安装　581
24.4　实现dex2oat转换　586
24.4.1　参数解析　586
24.4.2　创建 OAT文件指针　588
24.4.3　dex2oat准备工作　588
24.4.4　提取classes.dex文件　589
24.4.5　创建OAT文件　594
24.5　APK文件的转换　595
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入解析Android虚拟机
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android 源码设计模式解析与实战（第2版）
内容提要
前言
第二版自序
自序一
自序二
致谢
第1章 走向灵活软件之路——面向对象的六大原则
第2章 应用最广的模式——单例模式
第3章 自由扩展你的项目——Builder模式
第4章 使程序运行更高效——原型模式
第5章 应用最广泛的模式——工厂方法模式
第6章 创建型设计模式——抽象工厂模式
第7章 时势造英雄——策略模式
第8章 随遇而安——状态模式
第9章 使编程更有灵活性——责任链模式
第10章 化繁为简的翻译机——解释器模式
第11章 让程序畅通执行——命令模式
第12章 解决解耦的钥匙——观察者模式
第13章 编程中的“后悔药”——备忘录模式
第14章 解决问题的“第三者”——迭代器模式
第15章 抓住问题核心——模板方法模式
第16章 访问者模式
第17章 “和事佬”——中介者模式
第18章 编程好帮手——代理模式
第19章 物以类聚——组合模式
第20章 得心应手的“粘合剂”——适配器模式
第21章 装饰模式
第22章 对象共享，避免创建多对象——享元模式
第23章 统一编程接口——外观模式
第24章 连接两地的交通枢钮——桥接模式
第25章 MVC的介绍与实战
第26章 MVP应用架构模式
第27章 MVVM应用浅析
第28章 易混淆的设计模式
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android 源码设计模式解析与实战（第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android Studio高级编程
第1章  新手入门 1
1.1  Windows、Mac OS X及Linux
平台的系统要求 1
1.2  安装Java 3
1.2.1  为Windows操作系统安装
Java 4
1.2.2  为Mac OS X安装Java 6
1.2.3  为Linux安装Java 7
1.3  安装Android Studio 8
1.3.1  为Microsoft Windows 10
安装Android Studio 9
1.3.2  为Mac OS X安装Android
Studio 11
1.3.3  为Linux安装Android
Studio 13
1.4  首次启动Android Studio 15
1.5  独立SDK的安装 16
1.6  小结 17
第2章  Android Studio基础知识 19
2.1  创建新的示例项目 19
2.1.1  使用不同的SDK版本 23
2.1.2  Android项目结构 23
2.1.3  构建并运行项目 30
2.2  Android模拟器 31
2.2.1  安装HAXM 31
2.2.2  创建Android虚拟设备 32
2.2.3  使用ADB 35
2.3  导入Eclipse项目 36
2.4  小结 38
第3章  使用Android Studio开发
Android应用 39
3.1  Android项目 40
3.1.1  创建新的Android项目 40
3.1.2  创建一个多目标设备的项目 44
3.1.3  启动Android应用 47
3.2  Android Activity 49
3.2.1  Intent事件处理 50
3.2.2  将模板Activity添加到
Android项目 51
3.2.3  添加Blank Activity 51
3.2.4  Android Fragment 55
3.2.5  添加Tabbed Activity 57
3.3  Android Service 61
3.4  为Android项目添加Asset 64
3.4.1  添加Images Asset 65
3.4.2  添加Sound Asset 67
3.4.3  添加Video Asset 67
3.5  将XML文件添加到Android
项目 68
3.6  Android Manifest文件 68
3.7  Android Module 70
3.8  小结 71
第4章  深入Android Studio 73
4.1  Android Studio菜单项 73
4.1.1  Android Studio菜单 74
4.1.2  File菜单 75
4.1.3  Edit菜单 76
4.1.4  View菜单 77
4.1.5  Navigate菜单 78
4.1.6  Code菜单 79
4.1.7  Analyze菜单 80
4.1.8  Refactor菜单 80
4.1.9  Build菜单 81
4.1.10  Run菜单 82
4.1.11  Tools菜单 82
4.1.12  Version Control System
菜单 82
4.1.13  Window菜单和Help
菜单 83
4.2  Android Studio快捷键 83
4.3  Android Studio工具视图 84
4.3.1  Messages工具 86
4.3.2  Android Studio项目结构
视图 86
4.3.3  Favorites工具 88
4.3.4  Android Monitor工具 88
4.3.5  Structure窗口 89
4.3.6  Android Model视图 90
4.3.7  Gradle和Gradle Console
窗口工具 90
4.3.8  Run窗口 91
4.3.9  Debug窗口 91
4.3.10  Event Logs工具 91
4.3.11  Terminal窗口 92
4.4  Android Studio编辑器 92
4.4.1  代码辅助 92
4.4.2  注释掉代码块 92
4.4.3  移动代码块 93
4.4.4  编辑器中的导航 93
4.4.5  重构 93
4.5  Android Studio LiveTemplates 94
4.5.1  插入Live Template 95
4.5.2  创建Live Templates 96
4.6  Android Studio的代码重构 98
4.7  在Android Studio中为
Android应用创建一个
签名密钥 102
4.8  在Android Studio中构建
APK 104
4.9  小结 104
第5章  使用Android Studio创建
布局 107
5.1  使用Android Studio创建
布局 108
5.1.1  添加新的布局文件 108
5.1.2  Android Studio中的布局
设计结构 110
5.2  布局预览 112
5.2.1  布局渲染选项 112
5.2.2  预览虚拟设备视图 113
5.2.3  在不同的Android SDK版本
上预览 114
5.2.4  选择主题 114
5.3  使用Android Studio设计
布局 115
5.4  管理资源 119
5.4.1  使用String 119
5.4.2  使用Style 120
5.4.3  使用Dimen 121
5.4.4  使用Color 122
5.4.5  使用Drawable 122
5.5  使用布局工具 123
5.5.1  翻译 123
5.5.2  Activity Association 125
5.6  Asset管理 126
5.7  小结 131
第6章  Android构建系统 133
6.1  使用Gradle 134
6.2  使用Gradle管理依赖关系 136
6.2.1  外部依赖 137
6.2.2  本地依赖 138
6.2.3  遗留Maven依赖 139
6.3  Gradle 的Android插件 140
6.3.1  为Gradle配置Android
插件 140
6.3.2  构建配置 140
6.3.3  构建任务 141
6.3.4  flavor 141
6.3.5  ProGuard 142
6.3.6  自动化测试 144
6.4  Gradle插件 144
6.4.1  编写自己的Gradle插件 144
6.4.2  扩展Gradle的Android
插件 145
6.5  小结 146
第7章  多模块项目 147
7.1  将模块添加到Android项目 148
7.2  Phone&Tablet模块 149
7.3  Android Library模块 151
7.4  Java Library模块 154
7.5  Android Wear模块 156
7.5.1  运行及调试Android Wear
模块 157
7.5.2  构建支持Android Wear
的APK 159
7.6  Android TV模块 159
7.6.1  运行和调试Android TV
模块 162
7.6.2  构建Android TV模块的
APK 164
7.7  Glass模块 165
7.7.1  运行和调试Glass模块 166
7.7.2  构建Glass模块的APK 167
7.8  Android Auto模块 167
7.9  Google Cloud模块 169
7.9.1  添加New Google Cloud
模块 169
7.9.2  运行和调试Google Cloud
模块 172
7.10  导入模块 173
7.10.1  导入Gradle项目 173
7.10.2  导入Eclipse ADT项目 174
7.10.3  导入JAR/AAR包 176
7.11  从项目里删除模块 176
7.12  小结 177
第8章  调试和测试 179
8.1  调试Android代码 180
8.1.1  Android Debug Bridge 180
8.1.2  无线调试 181
8.1.3  开始调试 182
8.2  Android监视器 189
8.2.1  使用logcat 192
8.2.2  使用内存监视器 193
8.2.3  使用CPU监视器 196
8.2.4  使用GPU监视器 197
8.2.5  使用网络监视器 197
8.3  Android设备监视器 198
8.4  Android虚拟设备扩展控件 203
8.5  使用Lint 206
8.6  测试Android代码和应用UI 207
8.6.1  单元测试 212
8.6.2  集成测试 214
8.6.3  UI测试 217
8.6.4  性能测试 223
8.6.5  性能测试任务 224
8.7  小结 226
第9章  使用版本控制系统：Git 227
9.1  Git介绍 228
9.1.1  理解Git 228
9.1.2  安装Git 230
9.2  使用Git 231
9.3  使用GitHub客户端 232
9.4  在Android Studio中使用Git 240
9.5  Git流 247
9.6  小结 257
第10章  持续集成 259
10.1  是持续集成介绍 259
10.2  使用持续集成服务器集成
Android项目 260
10.3  安装Jenkins 261
10.4  创建构建作业 267
10.5  发布管理 273
10.6  小结 280
第11章  在Android Studio中使用
Android NDK 281
11.1  Android NDK介绍 282
11.2  Android Studio中的NDK
集成 282
11.2.1  在Linux上安装Android
NDK 283
11.2.2  在Windows 10上安装
Android NDK 284
11.2.3  在Mac OS X上安装Android
NDK 285
11.3  Android Studio中的Android
NDK项目 286
11.3.1  导入NDK示例项目 287
11.3.2  迁移现有的NDK项目 292
11.3.3  构建Android NDK项目 296
11.4  Android NDK项目的发布与
部署 297
11.5  小结 300
第12章  编写自己的插件 301
12.1  IntelliJ IDEA插件架构 302
12.1.1  Action 302
12.1.2  线程 309
12.1.3  文件系统 310
12.1.4  项目和组件 311
12.1.5  编辑器 320
12.1.6  向导 323
12.2  打包和分发 328
12.3  小结 329
第13章  第三方工具 331
13.1  Android Studio插件 331
13.2  Intel的Android软件工具 340
13.2.1  Intel System Studio 340
13.2.2  Intel C++ Compiler 343
13.2.3  Intel IPP 345
13.2.4  Intel TBB 346
13.2.5  Intel VTune Amplifier 346
13.2.6  Intel GPA 348
13.3  Intel INDE 348
13.3.1  Intel Tamper Protection
Toolkit 349
13.3.2  Intel Multi-OS Engine 349
13.3.3  Intel Context Sensing
SDK 351
13.4  Qualcomm Android软件
工具 353
13.4.1  适用于Android 的
Snapdragon LLVM
Compiler 354
13.4.2  Qualcomm Adreno GPU
SDK 354
13.4.3  Qualcomm FastCV Computer
Vision SDK 355
13.4.4  适用于Android的
Snapdragon SDK 359
13.4.5  Qualcomm AllPlay Click
SDK 362
13.4.6  Qualcomm Profilers 364
13.5  NVIDIA软件工具 366
13.6  小结 369
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android Studio高级编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入剖析Android新特性
第１章  预备知识  1
1.1  Android系统架构  1
1.2  关于AOSP  3
1.3  理解Android Binder机制  3
1.3.1  Binder机制简介  3
1.3.2  整体架构  4
1.3.3  驱动层  7
1.3.4  Binder Framework C++部分  26
1.3.5  Binder Framework Java部分  54
1.3.6  参考资料与推荐读物  70
第2章  Android系统中的进程管理  72
2.1  关于进程  72
2.2  系统进程与应用进程  73
2.2.1  init进程与init语言  75
2.2.2  Zygote进程  81
2.2.3  system_server进程  84
2.3  应用进程的创建  87
2.3.1  关于应用组件  87
2.3.2  进程与线程  88
2.3.3  ActivityManagerService  89
2.3.4  Activity与进程创建  92
2.3.5  Service与进程创建  94
2.3.6  ContentProvider与进程创建  96
2.3.7  BroadcastReceiver与进程创建  97
2.3.8  参考资料与推荐读物  99
2.4  进程的优先级管理  100
2.4.1  优先级的依据  100
2.4.2  优先级的基础  102
2.4.3  优先级的更新  105
2.4.4  优先级的算法  108
2.4.5  优先级的生效  119
2.4.6  结束语  119
2.4.7  参考资料与推荐读物  120
2.5  进程与内存的回收  120
2.5.1  开发者API  121
2.5.2  虚拟机的垃圾回收  122
2.5.3  开发者的内存回收  122
2.5.4  Linux OOM Killer  123
2.5.5  LowMemoryKiller  125
2.5.6  进程的死亡处理  126
2.5.7  参考资料与推荐读物  127
2.6  结束语  127
第3章  Android系统上的虚拟机  129
3.1  Java语言与Java虚拟机  130
3.1.1  Java语言  130
3.1.2  Java虚拟机  130
3.1.3  Java虚拟机实现架构  130
3.1.4  类加载器（Class loader）  132
3.1.5  垃圾回收  132
3.1.6  结束语  135
3.1.7  参考资料与推荐读物  135
3.2  Dalvik虚拟机  135
3.2.1  Stack-based VS. Register-based  136
3.2.2  Dalvik Executable(dex)文件  137
3.2.3  Dalvik指令  139
3.2.4  Dalvik启动过程  144
3.2.5  程序的执行：解释与编译  153
3.2.6  Dalvik上的垃圾回收  156
3.2.7  参考资料与推荐读物  159
3.3  Android Runtime（ART）  159
3.3.1  ART VS.Dalvik  159
3.3.2  OAT文件格式  162
3.3.3  boot.oat与boot.art  165
3.3.4  Dalvik到ART的切换  166
3.3.5  ART虚拟机的启动过程  169
3.3.6  内存分配  173
3.3.7  垃圾回收  178
3.3.8  JIT的回归  182
3.3.9  ART虚拟机的演进与配置  185
3.3.10  参考资料与推荐读物  186
第4章  用户界面改进  187
4.1  多窗口功能  187
4.1.1  概述  188
4.1.2  开发者相关  189
4.1.3  内部实现  191
4.1.4  参考资料与推荐读物  205
4.2  App Shortcuts  206
4.2.1  开发者API  206
4.2.2  内部实现  209
第5章  系统界面改进  215
5.1  SystemUI整体介绍  215
5.1.1  SystemUI简介  215
5.1.2  SystemUI的初始化  216
5.1.3  System Bar的初始化  221
5.1.4  参考资料与推荐读物  224
5.2  System Bar  224
5.3  Notification  234
5.3.1  开发者API  234
5.3.2  通知栏与通知窗口  240
5.3.3  Notification从发送到显示  243
5.4  Quick Settings  256
5.4.1  开发者API  256
5.4.2  系统实现  260
5.4.3  参考资料与推荐读物  265
第6章  功耗的改进  266
6.1  Project Volta  266
6.1.1  JobScheduler API  267
6.1.2  电量消耗分析工具  277
6.1.3  在虚拟机层面减少电池消耗  279
6.1.4  省电模式  280
6.1.5  结束语  281
6.1.6  参考资料与推荐读物  281
6.2  Doze模式与App StandBy  282
6.2.1  概述  282
6.2.2  了解Doze模式  282
6.2.3  了解App StandBy  284
6.2.4  对其他用例的支持  284
6.2.5  在Doze模式和App StandBy下进行测试  285
6.2.6  Doze模式的实现  287
6.2.7  App StandBy的实现  293
6.2.8  参考资料与推荐读物  297
6.3  Android 8.0上的后台限制  297
6.3.1  概览  298
6.3.2  后台服务限制  299
6.3.3  广播限制  300
6.3.4  系统实现  301
6.3.5  结束语  308
第7章  面向设备管理的改进  310
7.1  多用户的支持  310
7.1.1  术语  311
7.1.2  支持多用户  312
7.1.3  多用户的实现  313
7.1.4  参考资料与推荐读物  333
7.2  设备管理  334
7.2.1  Device Administration API介绍  334
7.2.2  开发设备管理程序  335
7.3  面向企业环境的Android  339
7.3.1  企业环境解决方案  340
7.3.2  受管理资料（Managed Profiles）  340
7.3.3  受管理资料的内部实现  342
7.3.4  参考资料与推荐读物  349
第8章  Android系统安全改进  350
8.1  Android系统安全概览  350
8.2  运行时权限  351
8.2.1  功能介绍  351
8.2.2  新增API  354
8.2.3  参考资料与推荐读物  370
第9章  图形系统改进  371
9.1  整体架构  371
9.1.1  Android图形组件  371
9.1.2  组件  373
9.1.3  Android如何绘制视图  374
9.1.4  关于硬件加速  376
9.1.5  参考资料与推荐读物  377
9.2  图形系统组件  377
9.2.1  Activity与Surface  377
9.2.2  Gralloc  379
9.2.3  BufferQueue  382
9.2.4  Surface  384
9.2.5  参考资料与推荐读物  388
9.3  Project Butter  388
9.3.1  FPS  389
9.3.2  VSYNC  391
9.3.3  Choreographer与VSYNC  392
9.3.4  Triple Buffer  398
9.3.5  参考资料与推荐读物  400
9.4  SurfaceFlinger  400
9.4.1  SurfaceFlinger 介绍  401
9.4.2  Hardware Composer  402
9.4.3  SurfaceFlinger的启动  403
9.4.4  SurfaceFlinger的对外接口  405
9.4.5  VSYNC的传递  407
9.4.6  SurfaceFlinger的事件  409
9.4.7  图层的合成  411
9.4.8  刷新  412
9.4.9  参考资料与推荐读物  413
9.5  Vulkan简介  414
9.5.1  Vulkan组件  414
9.5.2  修改的组件  415
9.5.3  Vulkan API  415
9.5.4  参考资料与推荐读物  415
第１0章  系统架构改进  416
10.1  Project Treble整体介绍  417
10.2  HIDL  420
10.2.1  语法介绍  421
10.2.2  HIDL 与 Binder  422
10.3  ConfigStore HAL  423
10.3.1  概述  423
10.3.2  内部实现  424
10.4  Vendor Native Development Kit  426
10.5  Vendor Interface Object  427
10.5.1  概述  427
10.5.2  Manifest  429
10.5.3  内部实现  429
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入剖析Android新特性
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android组件化架构
第1章  组件化基础
1.1  你知道组件化吗
1.2  基础组件化架构介绍
1.2.1  依赖
1.2.2  聚合和解耦
1.3  重新认识AndroidManifest
1.3.1  AndroidManifest属性汇总
1.3.2  AndroidManifest属性变更
1.4  你所不知道的Application
1.4.1  Applicaton的基础和作用
1.4.2  组件化Application
1.5  小结
第2章  组件化编程
2.1  本地广播
2.1.1  本地广播基础介绍
2.1.2  使用方法
2.1.3  本地广播源码分析
2.2  组件间通信机制
2.2.1  组件化层级障碍
2.2.2  事件总线
2.2.3  组件化事件总线的考量
2.3  组件间跳转
2.3.1  隐式跳转
2.3.2  ARouter路由跳转
2.3.3  Android路由原理
2.3.4  组件化最佳路由
2.3.5  空类索引
2.4  动态创建
2.4.1  反射基础
2.4.2  反射进阶
2.4.3  反射简化jOOR
2.4.4  动态创建Fragment
2.4.5  动态配置Application
2.5  数据存储
2.5.1  数据的存储方式
2.5.2  组件化存储
2.5.3  组件化数据库
2.6  权限管理
2.6.1  权限机制
2.6.2  组件化权限
2.6.3  动态权限框架
2.6.4  路由拦截
2.7  静态常量
2.7.1  资源限制
2.7.2  组件化的静态变量
2.7.3  R2.java的秘密
2.8  资源冲突
2.8.1  组件化的资源汇合
2.8.2  组件化资源冲突
2.9  组件化混淆
2.9.1  混淆基础
2.9.2  资源混淆
2.9.3  组件化混淆
2.10  多渠道模块
2.10.1  多渠道基础
2.10.2  批量打包
2.10.3  多渠道模块配置
2.11  小结
第3章  组件化优化
3.1  Gradle优化
3.1.1  Gradle基础
3.1.2  版本参数优化
3.1.3  调试优化
3.1.4  资源引用配置
3.1.5  Gradle 4.1依赖特性
3.2  Git组件化部署
3.2.1  submodule子模块
3.2.2  subtree
3.3  小结
第4章  组件化编译
4.1  Gradle编译
4.1.1  Android基础编译流程
4.1.2  Instant Run
4.1.3  更优的Gradle构建策略
4.2  极速增量编译
4.2.1  Freeline的使用
4.2.2  Freeline运行介绍
4.3  小结
第5章  组件化分发
5.1  Activity分发
5.1.1  Activity的生命周期
5.1.2  Acitity分发技术
5.2  Fragment分发
5.2.1  Fragment的生命周期
5.2.2  Fragment分发技术
5.3  View分发
5.3.1  View的生命周期
5.3.2  View分发技术
5.4  依赖倒置
5.4.1  依赖倒置原则
5.4.2  依赖倒置分发
5.5 组件化列表配置
5.5.1  Javapoet语法基础
5.5.2  编译时注解配置
5.5.3  集成配置列表
5.6 加载优化
5.6.1  线程加载
5.6.2  模块懒加载
5.7  层级限制
5.8  多模板设计
5.8.1  多模板注解
5.8.2  脚本配置
5.8.3  动态配置
5.9  小结
第6章  组件化流通
6.1  内部流通
6.1.1  Maven基础
6.1.2  本地缓存
6.1.3  远程仓库
6.2  组件化SDK
6.2.1  SDK基础知识
6.2.2  Python脚本合并
6.2.3  fat-aar脚本合并
6.3  JCenter共享
6.4  小结
第7章  架构模板
7.1  组件化模板
7.1.1  模板基础
7.1.2  模板制作
7.1.3  实时模板
7.1.4  头部注释模板
7.2  注解检测
7.3  小结
第8章  架构演化
8.1  基础架构
8.2  基础组件化
8.3  模块化
8.4  多模板化
8.5  插件化
8.6  进程化
8.7  小结
附录A  思维与架构
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android组件化架构
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android应用开发进阶
第1章  自定义控件
1.1  View的绘制流程
1.1.1  View和ViewGroup
1.1.2  View的绘制流程
1.1.3  ViewGroup的绘制流程
1.1.4  View绘制流程深入解析
1.2  View的触摸事件
1.2.1  触摸事件的类型
1.2.2  触摸事件的传递过程
1.2.3  事件传递细节
1.3  自定义控件常用方法总结
1.3.1  绘制流程相关
1.3.2  事件处理相关
1.3.3  其他
1.4  自定义控件案例
1.4.1  柱状图
1.4.2  折线图
1.4.3  曲线图
1.4.4  渐变圆弧进度条
1.4.5  卡片滑动切换
1.4.6  ViewPager圆形指示器
1.5  自定义控件性能优化
第2章  轮子
2.1  AppBrain平台
2.2  Butter Knife
2.2.1  编译时注解
2.2.2  Element
2.2.3  编译时注解案例
2.2.4  Butter Knife源码分析
2.2.5  Butter Knife Zelezny插件的实现
2.3  EventBus
2.3.1  EventBus的使用
2.3.2  EventBus源码分析
2.3.3  EventBus 3.0索引加速
2.4  Dagger2
2.4.1  Dagger2的使用
2.4.2  Dagger2源码分析
2.4.3  Dagger2进阶
2.4.4  Component之间的关系
2.4.5  Dagger.Android
2.5  OkHttp
2.5.1  OkHttp的使用
2.5.2  OkHttp源码分析
2.6  Retrofit
2.6.1  Retrofit的使用
2.6.2  Retrofit源码分析
2.7  Volley
2.7.1  Volley的工作流程
2.7.2  Volley的使用
2.7.3  Volley的封装
2.7.4  Volley源码分析
2.8  RxJava
2.8.1  RxJava的使用
2.8.2  RxJava的源码分析
第3章  Android应用架构
3.1  todo-mvp
3.1.1  MVP
3.1.2  todo-mvp的实现
3.2  todo-mvp-clean
3.2.1  Clean架构
3.2.2  Clean架构的Android实现
3.2.3  todo-mvp-clean的实现
3.3  todo-mvp-dagger
3.3.1  AppComponent
3.3.2  依赖注入
3.4  todo-mvp-rxjava
3.5  todo-mvvm-databinding
3.5.1  MVVM
3.5.2  Data Binding Library
3.5.3  todo-mvvm-databinding的实现
3.6  todo-mvvm-live
3.6.1  Architecture Components
3.6.2  todo-mvvm-live的实现
第4章  AndroidPlus项目实战
4.1  需求分析
4.2  产品设计
4.2.1  Material Design
4.2.2  思维导图
4.2.3  架构设计
4.3  Java实现
4.3.1  项目准备
4.3.2  Dagger集成
4.3.3  欢迎界面
4.3.4  登录注册
4.3.5  主界面
4.3.6  首页
4.3.7  问题详情
4.3.8  回答详情
4.3.9  评论
4.3.10  分享文章
4.3.11  文章
4.3.12  个人中心
4.3.13  用户详情
4.3.14  异常上报、运营统计和应用升级
4.3.15  代码混淆
4.4  Kotlin实现
第5章  开发实践
5.1  Android Studio中的Git实践
5.1.1  创建远程仓库
5.1.2  .gitignore
5.1.3  提交和推送
5.1.4  分支
5.1.5  获取（Fetch）
5.1.6  拉取（Pull）
5.1.7  衍合（Rebase）
5.1.8  Git Flow
5.1.9  分支合并
5.1.10  移动HEAD
5.1.11  贮藏（Stash）
5.1.12  重置（Reset）
5.1.13  遴选（Cherry Pick）
5.2  Android屏幕适配
5.2.1  屏幕相关概念
5.2.2  图片适配
5.2.3  dimen
5.2.4  weight
5.2.5  百分比布局
5.2.6  ConstraintLayout
5.2.7  平板适配
5.2.8  RTL布局
5.3  Android视频播放器
5.3.1  ijkPlayer
5.3.2  Vitamio
5.3.3  PLDroidPlayer
5.3.4  测试开发
5.4  声网直播实践
5.4.1  频道列表
5.4.2  视频群聊
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android应用开发进阶
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android并发开发
版权
版权声明
内容提要
前言
资源与支持
致谢
第1章　了解并发
第2章　Java并发
第3章　Android应用程序模型
第4章　AsyncTask和Loader
第5章　Looper/Handler
第6章　Service、进程和Binder IPC
第7章　定时任务
第8章　并发工具
参考文献
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android并发开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Kotlin从零到精通Android开发
第1章  搭建Kotlin开发环境 1
1.1  Kotlin与Android开发的关系 1
1.1.1  Kotlin语言简介 1
1.1.2  Android Studio的官方开发语言 2
1.2  Kotlin开发工具 2
1.2.1  安装Android Studio 2
1.2.2  启动Android Studio 4
1.2.3  创建Kotlin工程 5
1.2.4  新建Kotlin文件 8
1.3  SDK安装与插件升级 10
1.3.1  安装*版SDK 10
1.3.2  升级Gradle插件 11
1.3.3  升级Kotlin插件 12
1.4  Kotlin简单配置 14
1.4.1  调整Kotlin编译配置 14
1.4.2  修改编译配置文件 15
1.4.3  Java代码转Kotlin代码 16
1.5  Kotlin相关技术 18
1.5.1  Kotlin代码与Java代码PK 18
1.5.2  Anko库 21
1.5.3  Lambda表达式 22
1.6  小结 23
第2章  数据类型 24
2.1  基本数据类型 24
2.1.1  基本类型的变量声明 24
2.1.2  简单变量之间的转换 25
2.2  数组 26
2.2.1  数组变量的声明 27
2.2.2  数组元素的操作 28
2.3  字符串 29
2.3.1  字符串与基本类型的转换 29
2.3.2  字符串的常用方法 29
2.3.3  字符串模板及其拼接 30
2.4  容器 31
2.4.1  容器的基本操作 31
2.4.2  集合Set/MutableSet 32
2.4.3  队列List/MutableList 34
2.4.4  映射Map/MutableMap 36
2.5  小结 38
第3章  控制语句 39
3.1  条件分支 39
3.1.1  简单分支 39
3.1.2  多路分支 40
3.1.3  类型判断 42
3.2  循环处理 43
3.2.1  遍历循环 44
3.2.2  条件循环 45
3.2.3  跳出多重循环 46
3.3  空安全 48
3.3.1  字符串的有效性判断 48
3.3.2  声明可空变量 49
3.3.3  校验空值的运算符 50
3.4  等式判断 52
3.4.1  结构相等 52
3.4.2  引用相等 53
3.4.3  s和in 55
3.5  小结 57
第4章  函数运用 58
4.1  函数的基本用法 58
4.1.1  与Java声明方式的区别 58
4.1.2  输入参数的格式 59
4.1.3  输出参数的格式 60
4.2  输入参数的变化 62
4.2.1  默认参数 62
4.2.2  命名参数 63
4.2.3  可变参数 64
4.3  几种特殊函数 66
4.3.1  泛型函数 66
4.3.2  内联函数 67
4.3.3  简化函数 68
4.3.4  尾递归函数 69
4.3.5  高阶函数 69
4.4  增强系统函数 71
4.4.1  扩展函数 71
4.4.2  扩展高阶函数 72
4.4.3  日期时间函数 73
4.4.4  单例对象 75
4.5  小结 77
第5章  类和对象 78
5.1  类的构造 78
5.1.1  类的简单定义 78
5.1.2  类的构造函数 79
5.1.3  带默认参数的构造函数 81
5.2  类的成员 83
5.2.1  成员属性 83
5.2.2  成员方法 86
5.2.3  伴生对象 87
5.2.4  静态属性 88
5.3  类的继承 89
5.3.1  开放性修饰符 89
5.3.2  普通类继承 91
5.3.3  抽象类 93
5.3.4  接口 94
5.3.5  接口代理 96
5.4  几种特殊类 99
5.4.1  嵌套类 100
5.4.2  内部类 100
5.4.3  枚举类 101
5.4.4  密封类 103
5.4.5  数据类 104
5.4.6  模板类 105
5.5  小结 107
第6章  Kotlin使用简单控件 108
6.1  使用按钮控件 108
6.1.1  按钮Button 108
6.1.2  复选框CheckBox 111
6.1.3  单选按钮RadioButton 112
6.2  使用页面布局 114
6.2.1  线性布局LinearLayout 114
6.2.2  相对布局RelativeLayout 118
6.2.3  约束布局ConstraintLayout 119
6.3  使用图文控件 124
6.3.1  文本视图TextView 124
6.3.2  图像视图ImageView 127
6.3.3  文本编辑框EditText 128
6.4  Activity活动跳转 130
6.4.1  传送配对字段数据 130
6.4.2  传送序列化数据 132
6.4.3  跳转时指定启动模式 134
6.4.4  处理返回数据 137
6.5  实战项目：电商App的登录页面 138
6.5.1  需求描述 138
6.5.2  开始热身：提醒对话框AlertDialog 139
6.5.3  控件设计 141
6.5.4  关键代码 141
6.6  小结 144
第7章  Kotlin操纵复杂控件 145
7.1  使用视图排列 145
7.1.1  下拉框Spinner 145
7.1.2  列表视图ListView 149
7.1.3  网格视图GridView 154
7.1.4  循环视图RecyclerView 156
7.2  使用材质设计MaterialDesign 165
7.2.1  协调布局CoordinatorLayout 165
7.2.2  工具栏Toolbar 167
7.2.3  应用栏布局AppBarLayout 169
7.2.4  可折叠工具栏布局CollapsingToolbarLayout 173
7.2.5  仿支付宝shou页的头部伸缩特*效 177
7.3  实现页面切换 181
7.3.1  翻页视图ViewPager 182
7.3.2  碎片Fragment 184
7.3.3  标签布局TabLayout 187
7.4  广播收发Broadcast 190
7.4.1  收发临时广播 191
7.4.2  接收系统广播 194
7.5  实战项目：电商App的商品频道 196
7.5.1  需求描述 196
7.5.2  开始热身：下拉刷新布局SwipeRefreshLayout 197
7.5.3  控件设计 201
7.5.4  关键代码 201
7.6  小结 203
第8章  Kotlin进行数据存储 205
8.1  使用共享参数SharedPreferences 205
8.1.1  共享参数读写模板Preference 205
8.1.2  属性代理等黑科技 208
8.1.3  实现记住密码功能 210
8.2  使用数据库SQLite 211
8.2.1  数据库帮助器SQLiteOpenHelper 211
8.2.2  更安全的ManagedSQLiteOpenHelper 213
8.2.3  优化记住密码功能 220
8.3  文件I/O操作 222
8.3.1  文件保存空间 222
8.3.2  读写文本文件 224
8.3.3  读写图片文件 225
8.3.4  遍历文件目录 227
8.4  Application全局变量 228
8.4.1  Application单例化 228
8.4.2  利用Application实现全局变量 231
8.5  实战项目：电商App的购物车 232
8.5.1  需求描述 232
8.5.2  开始热身：选项菜单OptionsMenu 233
8.5.3  控件设计 235
8.5.4  关键代码 236
8.6  小结 240
第9章  Kotlin自定义控件 242
9.1  自定义普通视图 242
9.1.1  构造对象 242
9.1.2  测量尺寸 245
9.1.3  绘制部件 249
9.2  自定义简单动画 252
9.2.1  任务Runnable 252
9.2.2  进度条ProgressBar 255
9.2.3  自定义文本进度条 257
9.2.4  实现进度条动画 258
9.3  自定义通知栏 259
9.3.1  通知推送Notification 260
9.3.2  大视图通知 262
9.3.3  三种特殊的通知类型 265
9.3.4  远程视图RemoteViews 269
9.3.5  自定义折叠式通知 272
9.4  Service服务启停 274
9.4.1  普通方式启动服务 274
9.4.2  绑定方式启动服务 277
9.4.3  推送服务到前台 279
9.5  实战项目：电商App的生鲜团购 283
9.5.1  需求描述 283
9.5.2  开始热身：震动器Vibrator 284
9.5.3  控件设计 287
9.5.4  关键代码 287
9.6  小结 289
第10章  Kotlin实现网络通信 291
10.1  多线程技术 291
10.1.1  大线程Thread与消息传递 291
10.1.2  进度对话框ProgressDialog 295
10.1.3  异步任务doAsync和doAsyncResult 297
10.2  访问HTTP接口 300
10.2.1  移动数据格式JSON 301
10.2.2  JSON串转数据类 303
10.2.3  HTTP接口调用 304
10.2.4  HTTP图片获取 306
10.3  文件下载操作 308
10.3.1  下载管理器DownloadManager 308
10.3.2  自定义文本进度圈 313
10.3.3  在页面上动态显示下载进度 316
10.4  ContentProvider内容提供 319
10.4.1  内容提供器ContentProvider 319
10.4.2  内容解析器ContentResolver 322
10.4.3  内容观察器ContentObserver 325
10.5  实战项目：电商App的自动升级 329
10.5.1  需求描述 329
10.5.2  开始热身：可变字符串SpannableString 330
10.5.3  控件设计 333
10.5.4  关键代码 334
10.6  小结 337
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Kotlin从零到精通Android开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android App开发从入门到精通
本书共有10章，主要内容如下：
第1章学习开发工具Android Studio的使用，一个好的开发工具可以大大提高开发人员的工作效率。
第2章讲解Android控件相关知识，一个UI界面由多个控件组成，只有熟练使用各种控件才能设计出好看的App，达到UI设计师想要的效果。
第3章学习Android中四大组件的使用。在企业的项目开发中，四大组件中的Activity（活动）、Service（服务）、Broadcast Receiver（广播接收器）使用很频繁，ContentProvider（内容提供者）使用频率相对少一些，只有某些特定需求时才会用到。
第4章学习Fragment（碎片）的使用方法，从Fragment简单使用到最后的案例开发，一步步深入地学习Fragment。使用Fragment会让App模块化，还能解决手机与平板电脑的适配问题。
第5章学习多线程开发。从多线程的创建，到子线程如何更新UI，通过阅读源码分析Handle的实现原理，最后介绍线程池的使用方法。
第6章首先学习Android的网络编程，通过Get/Post方式向服务器发送HTTP请求。现在市面上大部分App与服务器交互都是返回Json数据，所以介绍Gson框架，以及OkHttp开源项目的使用和封装。最后是数据存储的三种方式。
第7章学习Android的高级应用，主要介绍Notification使用、多媒体开发、WebView使用、定位的三种方式、NDK和JNI开发、Git管理项目等。
第8章学习Android中各大版本的更新，让我们的App解决版本适配问题，完美兼容5.0以上的各个版本。
第9章学习常用功能模板的使用。这些功能是企业开发中可能会碰到的需求，通过模板的学习，知道如何对一个App进行功能划分以及如何封装模块。
第10章通过模仿一个商业App，从零开始搭建项目，使用前面9章所学的内容，将所学知识点融会贯通，并进一步熟练掌握。有了项目开发的经验，你在今后的企业开发中就能快速成为一名合格的开发人员。
本书特色
本书定位为基础类图书，对每一个知识点的讲解都很详细，从基础入门逐步进入高级应用，让读者能系统全面地学习Android开发，更深入地了解Android开发体系。本书的内容是我多年Android开发经验的总结，也是一个合格的Android开发者必须掌握的内容，简单来说，就是企业开发中经常用到的技术。
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android App开发从入门到精通
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>最强Android书：架构大剖析
关于本书  XIV
第1 章 Android 体系结构的变革之路  1
1.1 Android 系统版本的历史变迁  2
Froyo（冻酸奶）  3
Gingerbread（姜饼人）  3
Honeycomb（蜂巢）  4
Ice Cream Sandwich（冰激凌三明治）  5
JellyBean（果冻豆）  5
KitKat（奇巧）  6
Lollipop（棒棒糖）  7
Marshmallow（棉花糖）  8
Nougat（牛轧糖）  9
1.2 Android 与Linux  11
并非另一个Linux 发布版本  11
然后Android 就登场了  12
与Linux 的异同  13
Android 的框架  15
Dalvik 虚拟机  18
JNI  19
原生二进制可执行文件  20
Bionic  22
Android 的原生库  25
源自其他项目的原生库  27
硬件抽象层  28
Linux 内核  29
1.3 Android 的衍生产品  30
谷歌官方的衍生产品  30
非谷歌官方的衍生品  33
1.4 对前方道路的思考  36
兼容64 位  36
ART（Android 运行时）  37
多画面  38
把Android 用作台式机操作系统  38
Android 和ARA 项目  39
Brillo  40
本章小结  40
参考文献  41
第2 章 Android 的分区和文件系统  43
2.1 分区架构  43
需要许多单独分区的原因  44
GUID 分区表  45
闪存（Flash Storage）系统  46
文件系统  46
Android 设备中的分区  49
2.2 Android 文件系统中存储的内容  53
root 文件系统  53
/system 分区  54
/data 分区  65
/cache 分区  71
/vendor 目录  72
SD 卡  73
2.3 受保护的文件系统  74
OBB：Opaque Binary Blobs  74
ASec：Android 安全存储（Android Secure Storage）  76
2.4 Linux 伪文件系统  78
cgroupfs  78
debugfs  79
functionfs(/dev/usb-ffs/adb)  80
procfs(/proc)  81
pstore(/sys/fs/pstore)  81
selinuxfs(/sys/fs/selinux)  82
sysfs(/sys)  83
本章小结  84
参考文献  84
第3 章 Android 的启动、备份和重置  86
3.1 Android 系统镜像  87
Boot Loader  89
Boot 镜像  93
内核  95
RAM disk  97
/System 和/Data 分区镜像  99
3.2 启动过程  101
固件启动过程  101
内核启动过程  105
3.3 关机和重启  109
3.4 应用的备份和恢复  112
命令行工具  113
本地备份  114
监视备份操作  117
3.5 系统重置（recovery）和升级  119
OTA（Over-The-Air）升级包  121
制作你自己的ROM  124
制作ROM 时可用的网上资源  128
本章小结  130
参考文献  130
第4 章 init  132
4.1 init 的角色和任务  132
系统属性  134
.rc 文件  140
总结：init 的执行流程  146
4.2 init 和USB  150
4.3 init 的其他角色  152
ueventd  153
watchdogd  154
本章小结  154
XIV ┃ 最强Android 书：架构大剖析
本章讨论所涉及的文件  155
第5 章 Android 的守护进程  156
5.1 core 类中的服务  156
adbd  156
servicemanager  160
healthd  161
lmkd（Android L）  165
logd（Android L）  168
vold  173
5.2 网络相关服务  182
netd  182
mdnsd  187
mtpd  187
racoon  188
rild  189
5.3 图形及多媒体服务  190
surfaceflinger  190
bootanimation  192
mediaserver  194
drmserver  196
5.4 其他服务  197
installd  197
keystore  200
debuggerd[64]  204
gatekeeper（Android M）  207
sdcard  208
Zygote[64]  211
本章小结  214
本章讨论涉及的文件  214
参考文献  215
第6 章 框架服务的架构  216
6.1 再探servicemanager  217
6.2 服务调用的模式  222
优点和缺点  224
序列化和Android 接口定义语言（AIDL）  225
6.3 Binder  228
简明历史  228
那么，Binder 究竟是什么  229
使用Binder  230
分析Binder 的当前使用情况  231
6.4 system_server  232
启动及执行流程  232
修改启动时的行为  234
本章小结  237
本章讨论涉及的文件  237
参考文献  237
第７章 从Linux 角度看Android  238
7.1 重温/proc  239
符号链接：cwd、exe 和root  240
fd  243
fdinfo  245
status  247
7.2 用户模式内存管理  254
虚拟内存的分类和生命周期  254
内存的相关术语  258
内存不足时的应对方案  266
7.3 跟踪系统调用  269
toolbox ps 工具  269
wchan 和syscall 文件  270
strace 工具  271
本章小结  272
参考文献  272
第8 章 Android 安全性  274
8.1 移动安全威胁建模  275
攻击向量  275
攻击之道  278
8.2 Linux 层上的安全措施  281
Android 使用Linux 权限的方式  281
Linux 权能  289
SELinux  294
其他值得注意的特性  301
8.3 Dalvik 层上的安全措施  305
Dalvik 层上的权限  305
Dalvik 代码签名  310
8.4 用户层上的安全措施  312
锁屏机制  312
支持多用户  316
密钥管理  318
证书管理  318
密钥和私钥管理  322
8.5 存储安全  323
加密/data 分区  323
基于文件的加密（Nougat 7.1）  326
Direct Boot （Nougat 的新特性）  326
启动过程中加强验证  327
8.6 Root Android 设备  328
在设备启动环节中root  329
利用安全漏洞root  331
Root 对安全的影响  332
本章小结  334
参考文献  334
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>最强Android书：架构大剖析
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android自定义控件开发入门与实战
开    篇
第1章  绘图基础  2
1.1  基本图形绘制  2
1.1.1  概述  2
1.1.2  画笔的基本设置  4
1.1.3  Canvas使用基础  6
1.1.4  Color  10
1.2  路径  11
1.2.1  概述  11
1.2.2  直线路径  12
1.2.3  弧线路径  12
1.3  Region  14
1.3.1  构造Region  14
1.3.2  区域相交  16
1.4  Canvas（画布）  19
1.4.1  Canvas变换  19
1.4.2  画布的保存与恢复  23
动 画 篇
第2章  视图动画  26
2.1  视图动画标签  26
2.1.1  概述  26
2.1.2  scale标签  28
2.1.3  alpha标签  34
2.1.4  rotate标签  35
2.1.5  translate标签  36
2.1.6  set标签  37
2.2  视图动画的代码实现  38
2.2.1  概述  38
2.2.2  ScaleAnimation  38
2.2.3  AlphaAnimation  40
2.2.4  RotateAnimation  40
2.2.5  TranslateAnimation  41
2.2.6  AnimationSet  42
2.2.7  Animation  43
2.3  插值器初探  44
2.3.1  AccelerateDecelerateInterpolator  45
2.3.2  AccelerateInterpolator  47
2.3.3  DecelerateInterpolator  48
2.3.4  LinearInterpolator  49
2.3.5  BounceInterpolator  49
2.3.6  AnticipateInterpolator  50
2.3.7  OvershootInterpolator  51
2.3.8  AnticipateOvershootInterpolator  53
2.3.9  CycleInterpolator  54
2.4  动画示例  55
2.4.1  镜头由远及近效果  55
2.4.2  加载框效果  56
2.4.3  扫描动画  57
2.5  逐帧动画  60
2.5.1  XML实现  61
2.5.2  代码实现  66
第3章  属性动画  68
3.1  ValueAnimator的基本使用  68
3.1.1  概述  68
3.1.2  ValueAnimator的简单使用  71
3.1.3  常用函数  74
3.1.4  示例：弹跳加载中效果  83
3.2  自定义插值器与Evaluator  86
3.2.1  自定义插值器  87
3.2.2  Evaluator  90
3.3  ValueAnimator进阶——ofObject  96
3.3.1  概述  96
3.3.2  示例：抛物动画  98
3.4  ObjectAnimator  101
3.4.1  概述  101
3.4.2  ObjectAnimator动画原理  106
3.4.3  自定义ObjectAnimator属性  107
3.4.4  何时需要实现对应属性的get函数  110
3.4.5  常用函数  112
3.5  组合动画——AnimatorSet  113
3.5.1  playSequentially()与playTogether()函数  113
3.5.2  AnimatorSet.Builder  118
3.5.3  AnimatorSet监听器  119
3.5.4  常用函数  122
3.5.5  示例：路径动画  126
3.6  Animator动画的XML实现  132
3.6.1  animator标签  132
3.6.2  objectAnimator标签  134
第4章  属性动画进阶  136
4.1  PropertyValuesHolder与Keyframe  136
4.1.1  PropertyValuesHolder  137
4.1.2  Keyframe  140
4.1.3  PropertyValuesHolder之其他函数  148
4.1.4  示例：电话响铃效果  148
4.2  ViewPropertyAnimator  150
4.2.1  概述  150
4.2.2  常用函数  150
4.2.3  性能考量  153
4.3  为ViewGroup内的组件添加动画  153
4.3.1  animateLayoutChanges属性  154
4.3.2  LayoutTransition  157
4.3.3  其他函数  161
4.4  开源动画库NineOldAndroids  163
4.4.1  NineOldAndroids中的ViewPropertyAnimator  164
4.4.2  NineOldAndroids中的ViewHelper  164
第5章  动画进阶  168
5.1  利用PathMeasure实现路径动画  168
5.1.1  初始化  168
5.1.2  简单函数使用  169
5.1.3  getSegment()函数  171
5.1.4  getPosTan()函数  177
5.1.5  getMatrix()函数  181
5.1.6  示例：支付宝支付成功动画  182
5.2  SVG动画  184
5.2.1  概述  184
5.2.2  vector标签与图像显示  186
5.2.3  动态Vector  197
5.2.4  示例：输入搜索动画  198
绘 图 篇
第6章  Paint基本使用  204
6.1  硬件加速  204
6.1.1  概述  204
6.1.2  软件绘制与硬件加速的区别  204
6.1.3  禁用GPU硬件加速的方法  206
6.2  文字  207
6.2.1  概述  207
6.2.2  绘图四线格与FontMetrics  210
6.2.3  常用函数  214
6.2.4  示例：定点写字  216
6.3  Paint常用函数  218
6.3.1  基本设置函数  218
6.3.2  字体相关函数  221
第7章  绘图进阶  223
7.1  贝济埃曲线  223
7.1.1  概述  223
7.1.2  贝济埃曲线之quadTo  227
7.1.3  贝济埃曲线之rQuadTo  234
7.1.4  示例：波浪效果  235
7.2  setShadowLayer与阴影效果  238
7.2.1  setShadowLayer()构造函数  238
7.2.2  清除阴影  240
7.2.3  示例：给文字添加阴影  242
7.3  BlurMaskFilter发光效果与图片阴影  243
7.3.1  概述  243
7.3.2  给图片添加纯色阴影  245
7.4  Shader与BitmapShader  248
7.4.1  Shader概述  248
7.4.2  BitmapShader的基本用法  249
7.4.3  示例一：望远镜效果  254
7.4.4  示例二：生成不规则头像  256
7.5  Shader之LinearGradient  257
7.5.1  概述  257
7.5.2  示例：闪光文字效果  261
7.6  Shader之RadialGradient  264
7.6.1  双色渐变  264
7.6.2  多色渐变  266
7.6.3  TileMode填充模式  267
第8章  混合模式  269
8.1  混合模式之AvoidXfermode  269
8.1.1  混合模式概述  269
8.1.2  AvoidXfermode  270
8.1.3  AvoidXfermode绘制原理  274
8.1.4  AvoidXfermode之Mode.AVOID  275
8.2  混合模式之PorterDuffXfermode  276
8.2.1  PorterDuffXfermode概述  276
8.2.2  颜色叠加相关模式  279
8.3  PorterDuffXfermode之源图像模式  285
8.3.1  Mode.SRC  285
8.3.2  Mode.SRC_IN  285
8.3.3  Mode.SRC_OUT  288
8.3.4  Mode.SRC_OVER  293
8.3.5  Mode.SRC_ATOP  293
8.4  目标图像模式与其他模式  294
8.4.1  目标图像模式  294
8.4.2  其他模式——Mode.CLEAR  303
8.4.3  模式总结  303
第9章  Canvas与图层  305
9.1  获取Canvas对象的方法  305
9.1.1  方法一：重写onDraw()、dispatchDraw()函数  305
9.1.2  方法二：使用Bitmap创建  306
9.1.3  方法三：调用SurfaceHolder.lockCanvas()函数  307
9.2  图层与画布  307
9.2.1  saveLayer()函数  307
9.2.2  画布与图层  312
9.2.3  saveLayer()和saveLayerAlpha()函数的用法  312
9.3  Flag的具体含义  316
9.3.1  Flag之MATRIX_SAVE_FLAG  316
9.3.2  Flag之CLIP_SAVE_FLAG  318
9.3.3  Flag之FULL_COLOR_LAYER_SAVE_FLAG和HAS_ALPHA_
LAYER_SAVE_FLAG  320
9.3.4  Flag之CLIP_TO_LAYER_SAVE_FLAG  323
9.3.5  Flag之ALL_SAVE_FLAG  325
9.4  恢复画布  325
9.4.1  restoreToCount(int count)  325
9.4.2  restore()与restoreToCount(int count)的关系  328
第10章  Android画布  330
10.1  ShapeDrawable  331
10.1.1  shape标签与GradientDrawable  331
10.1.2  ShapeDrawable的构造函数  333
10.1.3  常用函数  345
10.1.4  自定义Drawable  351
10.1.5  Drawable与Bitmap对比  357
10.2  Bitmap  359
10.2.1  概述  360
10.2.2  创建Bitmap方法之一：BitmapFactory  362
10.2.3  BitmapFactory.Options  369
10.2.4  创建Bitmap方法之二：Bitmap静态方法  377
10.2.5  常用函数  384
10.2.6  常见问题  401
10.3  SurfaceView  408
10.3.1  概述  408
10.3.2  SurfaceView的基本用法  409
10.3.3  SurfaceView双缓冲技术  421
第11章  Matrix与坐标变换  442
视 图 篇
第12章  封装控件  444
12.1  自定义属性与自定义Style  444
12.1.1  概述  444
12.1.2  declare-styleable标签的使用方法  444
12.1.3  在XML中使用自定义的属性  446
12.1.4  在代码中获取自定义属性的值  447
12.1.5  declare-styleable标签其他属性的用法  448
12.2  测量与布局  452
12.2.1  ViewGroup绘制流程  452
12.2.2  onMeasure()函数与MeasureSpec  452
12.2.3  onLayout()函数  455
12.2.4  获取子控件margin值的方法  460
12.3  实现FlowLayout容器  466
12.3.1  XML布局  466
12.3.2  提取margin值与重写onMeasure()函数  468
第13章  控件高级属性  475
13.1  GestureDetector手势检测  475
13.1.1  概述  475
13.1.2  GestureDetector.OnGestureListener接口  475
13.1.3  GestureDetector.OnDoubleTapListener接口  479
13.1.4  GestureDetector.SimpleOnGestureListener类  483
13.1.5  onFling()函数的应用——识别是向左滑还是向右滑  485
13.2  Window与WindowManager  486
13.2.1  Window与WindowManager的关系  486
13.2.2  示例：腾讯手机管家悬浮窗的小火箭效果  487
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android自定义控件开发入门与实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>疯狂Android讲义（Kotlin版）
第1章  Android应用和开发环境  1
1.1  Android的发展和历史  2
1.1.1  Android的发展和简介  2
1.1.2  Android 8.x平台架构及特性  3
1.2  使用Gradle自动化构建项目  5
1.2.1  下载和安装Gradle  5
1.2.2  Gradle构建文件和创建任务  6
1.2.3  Gradle的属性定义  11
1.2.4  增量式构建  14
1.2.5  Gradle插件和java、application等插件  15
1.2.6  依赖管理  17
1.2.7  自定义任务  20
1.2.8  自定义插件  22
1.3  搭建Android开发环境  24
1.3.1  安装Android Studio  24
1.3.2  下载和安装Android SDK  29
1.3.3  安装过程中常见的错误  31
1.3.4  安装运行、调试环境  32
1.4  Android常用开发工具的用法  39
1.4.1  使用Monitor进行调试  39
1.4.2  Android Debug Bridge的用法  41
1.4.3  使用mksdcard管理虚拟SD卡  42
1.5  开始第一个Android应用  42
1.5.1  使用Android Studio开发第一个Android应用  42
1.5.2  通过Android Studio运行Android应用  45
1.6  Android应用结构分析  46
1.6.1  Android项目结构分析  47
1.6.2  自动生成的R.java  49
1.6.3  res目录说明  50
1.6.4  Android应用的清单文件：AndroidManifest.xml  51
1.6.5  应用程序权限说明  52
1.7  Android应用的基本组件介绍  53
1.7.1  Activity和View  53
1.7.2  Service  53
1.7.3  BroadcastReceiver  54
1.7.4  ContentProvider  54
1.7.5  Intent和IntentFilter  54
1.8  使用Android 8的签名APK  55
1.8.1  使用Android Studio对Android应用签名  56
1.8.2  使用Android 8的命令对APK签名  57
1.9  本章小结  58
第2章  Android应用的界面编程  59
2.1  界面编程与视图（View）组件  60
2.1.1  视图组件与容器组件  60
2.1.2  使用XML布局文件控制UI界面  66
2.1.3  在代码中控制UI界面  66
实例：用编程的方式开发UI界面  66
2.1.4  使用XML布局文件和代码混合控制UI界面  67
实例：简单图片浏览器  68
2.1.5  开发自定义View  69
实例：跟随手指的小球  70
2.2  第1组UI组件：布局管理器  72
2.2.1  线性布局  73
2.2.2  表格布局  74
实例：丰富的表格布局  75
2.2.3  帧布局  77
实例：霓虹灯效果  79
2.2.4  相对布局  80
实例：梅花布局效果  81
2.2.5  网格布局  82
实例：计算器界面  83
2.2.6  绝对布局  84
2.2.7  Android 8的约束布局  85
2.3  第2组UI组件：TextView及其子类  89
2.3.1  文本框（TextView）和编辑框（EditText）的功能与用法  89
实例：功能丰富的文本框  93
2.3.2  EditText的功能与用法  95
2.3.3  按钮（Button）组件的功能与用法  95
实例：按钮、圆形按钮、带文字的图片按钮  96
2.3.4  使用9Patch图片作为背景  97
2.3.5  单选钮（RadioButton）和复选框（CheckBox）的功能与用法  98
实例：利用单选钮、复选框获取用户信息  98
2.3.6  状态开关按钮（ToggleButton）和开关（Switch）的功能与用法  100
实例：动态控制布局  101
2.3.7  时钟（AnalogClock和TextClock）的功能与用法  102
实例：手机里的“劳力士”  103
2.3.8  计时器（Chronometer）  104
2.4  第3组UI组件：ImageView及其子类  104
实例：图片浏览器  106
实例：强大的图片按钮  108
实例：使用QuickContactBadge关联联系人  109
2.5  第4组UI组件：AdapterView及子类  111
2.5.1  列表视图（ListView）和ListActivity  111
实例：改变分隔条、基于数组的ListView  112
2.5.2  Adapter接口及实现类  113
实例：使用ArrayAdapter创建ListView  114
实例：使用SimpleAdapter创建ListView  116
实例：扩展BaseAdapter实现不存储列表项的ListView  119
2.5.3  自动完成文本框（AutoCompleteTextView）的功能与用法  120
2.5.4  网格视图（GridView）的功能与用法  122
实例：带预览的图片浏览器  123
2.5.5  可展开的列表组件（ExpandableListView）  125
2.5.6  Spinner的功能与用法  128
2.5.7  AdapterViewFlipper的功能与用法  129
实例：自动播放的图片库  129
2.5.8  StackView的功能与用法  132
实例：叠在一起的图片  132
2.6  第5组UI组件：ProgressBar及其子类  134
2.6.1  进度条（ProgressBar）的功能与用法  134
2.6.2  拖动条（SeekBar）的功能与用法  137
实例：通过拖动滑块来改变图片的透明度  138
2.6.3  星级评分条（RatingBar）的功能与用法  139
实例：通过星级改变图片的透明度  139
2.7  第6组UI组件：ViewAnimator及其子类  140
2.7.1  ViewSwitcher的功能与用法  141
实例：仿Android系统的Launcher界面  141
2.7.2  图像切换器（ImageSwitcher）的功能与用法  145
实例：支持动画的图片浏览器  145
2.7.3  文本切换器（TextSwitcher）的功能与用法  147
2.7.4  ViewFlipper的功能与用法  147
实例：自动播放的图片库  148
2.8  各种杂项组件  149
2.8.1  使用Toast显示提示信息框  150
实例：带图片的消息提示  150
2.8.2  日历视图（CalendarView）组件的功能与用法  151
实例：选择您的生日  152
2.8.3  日期、时间选择器（DatePicker和TimePicker）的功能与用法  153
实例：用户选择日期、时间  154
2.8.4  数值选择器（NumberPicker）的功能与用法  156
实例：选择您意向的价格范围  156
2.8.5  搜索框（SearchView）的功能与用法  157
实例：搜索  158
2.8.6  选项卡（TabHost）的功能和用法  159
2.8.7  滚动视图（ScrollView）的功能与用法  160
实例：可垂直和水平滚动的视图  160
2.8.8  Android 8的通知和通知Channel  161
实例：加薪通知  162
2.9  第7组UI组件：对话框  164
2.9.1  使用AlertDialog创建对话框  164
实例：显示提示消息的对话框  165
实例：简单列表项对话框  166
实例：单选列表项对话框  166
实例：多选列表项对话框  167
实例：自定义列表项对话框  168
实例：自定义View对话框  168
2.9.2  对话框风格的窗口  169
2.9.3  使用PopupWindow  170
2.9.4  使用DatePickerDialog、TimePickerDialog  171
2.9.5  使用ProgressDialog创建进度对话框  172
2.10  菜单  173
2.10.1  选项菜单和子菜单（SubMenu）  173
2.10.2  使用监听器来监听菜单事件  176
2.10.3  创建多选菜单项和单选菜单项  176
2.10.4  设置与菜单项关联的Activity  177
2.10.5  上下文菜单  178
2.10.6  使用XML文件定义菜单  179
实例：使用XML资源文件定义菜单  180
2.10.7  使用PopupMenu创建弹出式菜单  183
2.11  使用活动条（ActionBar）  184
2.11.1  启用ActionBar  184
2.11.2  使用ActionBar显示选项菜单项  185
2.11.3  启用程序图标导航  187
2.11.4  添加Action View  189
实例：“标题”上的时钟  189
2.11.5  使用ActionBar实现Tab导航  189
实例：ActionBar结合Fragment实现Tab导航  190
2.11.6  使用ActionBar实现下拉式导航  192
实例：ActionBar结合Fragment实现下拉式导航  192
2.12  本章小结  194
第3章  Android的事件机制  195
3.1  Android事件处理概述  196
3.2  基于监听的事件处理  196
3.2.1  监听的处理模型  196
3.2.2  事件和事件监听器  199
实例：控制飞机移动  199
3.2.3  内部类作为事件监听器类  202
3.2.4  外部类作为事件监听器类  202
3.2.5  Activity本身作为事件监听器类  203
3.2.6  Lambda表达式作为事件监听器类  204
3.2.7  直接绑定到标签  204
3.3  基于回调的事件处理  205
3.3.1  回调机制与监听机制  205
3.3.2  基于回调的事件传播  207
3.4  响应系统设置的事件  208
3.4.1  Configuration类简介  209
实例：获取系统设备状态  209
3.4.2  重写onConfigurationChanged方法响应系统设置更改  210
实例：监听屏幕方向的改变  211
3.5  Handler消息传递机制  212
3.5.1  Handler类简介  213
实例：自动播放动画  213
3.5.2  Handler、Loop、MessageQueue的工作原理  214
实例：使用新线程计算质数  216
3.6  异步任务（AsyncTask）  218
实例：使用异步任务执行下载  219
3.7  本章小结  220
第4章  深入理解Activity与Fragment  221
4.1  建立、配置和使用Activity  222
4.1.1  高级Activity  222
实例：用LauncherActivity开发启动Activity的列表  223
实例：使用ExpandableListActivity实现可展开的Activity  224
实例：PreferenceActivity结合PreferenceFragment实现参数设置界面  224
4.1.2  配置Activity  228
4.1.3  启动、关闭Activity  230
4.1.4  使用Bundle在Activity之间交换数据  232
实例：用第二个Activity处理注册信息  233
4.1.5  启动其他Activity并返回结果  235
实例：用第二个Activity让用户选择信息  236
4.2  Activity的回调机制  238
4.3  Activity的生命周期  239
4.3.1  Activity的生命周期演示  239
4.3.2  Activity与Servlet的相似性和区别  242
4.4  Activity的4种加载模式  243
4.4.1  standard模式  243
4.4.2  singleTop模式  244
4.4.3  singleTask模式  245
4.4.4  singleInstance模式  246
4.5  Fragment详解  248
4.5.1  Fragment概述及其设计初衷  248
4.5.2  创建Fragment  249
实例：开发显示图书详情的Fragment  250
实例：创建ListFragment  251
4.5.3  Fragment与Activity通信  253
4.5.4  Fragment管理与Fragment事务  254
实例：开发兼顾屏幕分辨率的应用  255
4.6  Fragment的生命周期  258
4.7  本章小结  262
第5章  使用Intent和IntentFilter通信  263
5.1  Intent对象简述  264
5.2  Intent的属性及intent-filter配置  265
5.2.1  Component属性  265
5.2.2  Action、Category属性与intent-filter配置  267
5.2.3  指定Action、Category调用系统Activity  271
实例：查看并获取联系人电话  272
实例：返回系统Home桌面  275
5.2.4  Data、Type属性与intent-filter配置  275
实例：使用Action、Data属性启动系统Activity  281
5.2.5  Extra属性  283
5.2.6  Flag属性  283
5.3  本章小结  284
第6章  Android应用资源  285
6.1  应用资源概述  286
6.1.1  资源的类型及存储方式  286
6.1.2  使用资源  287
6.2  字符串、颜色、尺寸资源  289
6.2.1  颜色值的定义  289
6.2.2  定义字符串、颜色、尺寸资源文件  290
6.2.3  使用字符串、颜色、尺寸资源  291
6.3  数组（Array）资源  293
6.4  使用Drawable资源  295
6.4.1  图片资源  296
6.4.2  StateListDrawable资源  296
实例：高亮显示正在输入的文本框  297
6.4.3  LayerDrawable资源  298
实例：定制拖动条的外观  298
6.4.4  ShapeDrawable资源  299
实例：椭圆形、渐变背景的文本框  300
6.4.5  ClipDrawable资源  301
实例：徐徐展开的风景  302
6.4.6  AnimationDrawable资源  303
6.5  属性动画（Property Animation）资源  305
实例：不断渐变的背景色  306
6.6  使用原始XML资源  307
6.6.1  定义原始XML资源  307
6.6.2  使用原始XML文件  308
6.7  使用布局（Layout）资源  309
6.8  使用菜单（Menu）资源  310
6.9  样式（Style）和主题（Theme）资源  310
6.9.1  样式资源  310
6.9.2  主题资源  312
实例：给所有窗口添加边框、背景  312
6.10  属性（Attribute）资源  313
6.11  使用原始资源  316
6.12  国际化  317
6.12.1  为Android应用提供国际化资源  317
6.12.2  国际化Android应用  318
6.13  自适应不同屏幕的资源  320
6.14  本章小结  323
第7章  图形与图像处理  324
7.1  使用简单图片  325
7.1.1  使用Drawable对象  325
7.1.2  Bitmap和BitmapFactory  325
7.2  绘图  327
7.2.1  Android绘图基础：Canvas、Paint等  327
7.2.2  Path类  331
7.2.3  绘制游戏动画  334
实例：采用双缓冲实现画图板  334
实例：弹球游戏  338
7.3  图形特效处理  341
7.3.1  使用Matrix控制变换  341
7.3.2  使用drawBitmapMesh扭曲图像  343
实例：可揉动的图片  344
7.3.3  使用Shader填充图形  346
7.4  逐帧（Frame）动画  347
7.4.1  AnimationDrawable与逐帧动画  347
7.4.2  实例：在指定点爆炸  349
7.5  补间（Tween）动画  351
7.5.1  Tween动画与Interpolator  351
7.5.2  位置、大小、旋转度、透明度改变的补间动画  352
实例：蝴蝶飞舞  354
7.5.3  自定义补间动画  356
7.6  Android 8增强的属性动画  359
7.6.1  属性动画的API  359
7.6.2  使用属性动画  361
实例：大珠小珠落玉盘  365
7.7  使用SurfaceView实现动画  369
7.7.1  SurfaceView的绘图机制  369
7.7.2  实例：基于SurfaceView开发示波器  372
7.8  本章小结  374
第8章  Android数据存储与IO  375
8.1  使用SharedPreferences  376
8.1.1  SharedPreferences与Editor简介  376
8.1.2  SharedPreferences的存储位置和格式  377
实例：记录应用程序的使用次数  378
8.2  File存储  379
8.2.1  openFileOutput和openFileInput  379
8.2.2  读写SD卡上的文件  381
实例：SD卡文件浏览器  384
8.3  SQLite数据库  387
8.3.1  SQLiteDatabase简介  387
8.3.2  创建数据库和表  388
8.3.3  SQLiteOpenHelper类  389
8.3.4  使用SQL语句操作SQLite数据库  390
8.3.5  使用sqlite3工具  392
8.3.6  使用特定方法操作SQLite数据库  393
8.3.7  事务  396
8.3.8  SQLite数据库最佳实践建议  396
8.4  手势（Gesture）  397
8.4.1  手势检测  397
实例：通过手势缩放图片  399
实例：通过手势实现翻页效果  400
8.4.2  增加手势  402
8.4.3  识别用户手势  405
8.5  让应用说话（TTS）  407
8.6  本章小结  410
第9章  使用ContentProvider实现数据共享  411
9.1  数据共享标准：ContentProvider  412
9.1.1  ContentProvider简介  412
9.1.2  Uri简介  413
9.1.3  使用ContentResolver操作数据  414
9.2  开发ContentProvider  415
9.2.1  ContentProvider与ContentResolver的关系  415
9.2.2  开发ContentProvider子类  416
9.2.3  配置ContentProvider  417
9.2.4  使用ContentResolver调用方法  418
9.2.5  创建ContentProvider的说明  420
实例：使用ContentProvider共享单词数据  421
9.3  操作系统的ContentProvider  426
9.3.1  使用ContentProvider管理联系人  426
9.3.2  使用ContentProvider管理多媒体内容  431
9.4  监听ContentProvider的数据改变  434
9.4.1  ContentObserver简介  434
9.4.2  实例：监听用户发出的短信  435
9.5  本章小结  437
第10章  Service与BroadcastReceiver  438
10.1  Service简介  439
10.1.1  创建、配置Service  439
10.1.2  启动和停止Service  441
10.1.3  绑定本地Service并与之通信  442
10.1.4  Service的生命周期  446
10.1.5  使用IntentService  447
10.2  跨进程调用Service（AIDL Service）  449
10.2.1  AIDL Service简介  450
10.2.2  创建AIDL文件  450
10.2.3  将接口暴露给客户端  451
10.2.4  客户端访问AIDL Service  452
实例：传递复杂数据的AIDL Service  453
10.3  电话管理器（TelephonyManager）  458
实例：获取网络和SIM卡信息  458
实例：监听手机来电  460
10.4  短信管理器（SmsManager）  461
实例：发送短信  461
实例：短信群发  462
10.5  音频管理器（AudioManager）  465
10.5.1  AudioManager简介  465
10.5.2  实例：使用AudioManager控制手机音频  465
10.6  振动器（Vibrator）  466
10.6.1  Vibrator简介  466
10.6.2  使用Vibrator控制手机振动  467
10.7  手机闹钟服务（AlarmManager）  468
10.7.1  AlarmManager简介  468
10.7.2  设置闹钟  468
实例：定时更换壁纸  470
10.8  Android 8的广播接收器  472
10.8.1  BroadcastReceiver简介  472
10.8.2  发送广播  474
10.8.3  有序广播  475
实例：基于Service的音乐播放器  477
10.9  接收系统广播消息  481
实例：Android 8中开机自动运行的限制  482
实例：手机电量提示  483
10.10  本章小结  484
第11章  多媒体应用开发  485
11.1  音频和视频的播放  486
11.1.1  Android 8增强的MediaPlayer  486
11.1.2  音乐特效控制  490
实例：音乐的示波器、均衡、重低音和音场  491
11.1.3  Android 8新增的VolumeShaper  498
11.1.4  使用SoundPool播放音效  499
11.1.5  使用VideoView播放视频  501
11.1.6  使用MediaPlayer和SurfaceView播放视频  503
11.2  使用MediaRecorder录制音频  506
实例：录制音乐  507
11.3  控制摄像头拍照  509
11.3.1  使用Camera v2拍照  509
实例：拍照时自动对焦  510
11.3.2  录制视频短片  516
实例：录制生活短片  516
11.4  屏幕捕捉  520
11.5  本章小结  522
第12章  OpenGL与3D开发  523
12.1  3D图形与3D开发的基本知识  524
12.2  OpenGL和OpenGL ES简介  525
12.3  绘制2D图形  526
12.3.1  在Android应用中使用OpenGL ES  526
12.3.2  绘制平面上的多边形  528
12.3.3  旋转  534
12.4  绘制3D图形  537
12.4.1  构建3D图形  537
12.4.2  应用纹理贴图  541
12.5  本章小结  546
第13章  Android网络应用  547
13.1  基于TCP协议的网络通信  548
13.1.1  TCP协议基础  548
13.1.2  使用ServerSocket创建TCP服务器端  549
13.1.3  使用Socket进行通信  550
13.1.4  加入多线程  553
13.2  使用URL访问网络资源  558
13.2.1  使用URL读取网络资源  559
13.2.2  使用URLConnection提交请求  560
13.3  使用HTTP访问网络  565
13.3.1  使用HttpURLConnection  565
实例：多线程下载  565
13.3.2  使用OkHttp  570
实例：访问被保护资源  571
13.4  使用WebView进行混合开发  575
13.4.1  使用WebView浏览网页  575
实例：迷你浏览器  575
13.4.2  使用WebView加载HTML代码  577
13.4.3  使用WebView中的JavaScript调用Android方法  578
13.5  本章小结  580
第14章  管理Android系统桌面  581
14.1  改变壁纸  582
14.1.1  开发动态壁纸（Live Wallpapers）  582
14.1.2  实例：蜿蜒壁纸  583
14.2  Android 8的快捷方式  587
14.2.1  静态快捷方式  587
14.2.2  动态快捷方式  588
14.2.3  Android 8的桌面快捷方式（Pinned Shortcut）  590
实例：让程序占领桌面  591
14.3  管理桌面控件  592
14.3.1  开发桌面控件  592
实例：液晶时钟  594
14.3.2  显示带数据集的桌面控件  596
14.4  本章小结  599
第15章  传感器应用开发  600
15.1  利用Android的传感器  601
15.2  Android的常用传感器  603
15.2.1  方向传感器  603
15.2.2  陀螺仪传感器  604
15.2.3  磁场传感器  604
15.2.4  重力传感器  604
15.2.5  线性加速度传感器  605
15.2.6  温度传感器  605
15.2.7  光传感器  605
15.2.8  湿度传感器  605
15.2.9  压力传感器  605
15.2.10  心率传感器  605
15.2.11  Android 8的离身检查传感器  605
15.3  传感器应用案例  609
实例：指南针  609
实例：水平仪  611
15.4  本章小结  614
第16章  GPS应用开发  615
16.1  支持GPS的核心API  616
16.2  获取LocationProvider  618
16.2.1  获取所有可用的LocationProvider  618
16.2.2  通过名称获得指定LocationProvider  619
16.2.3  根据Criteria获得LocationProvider  619
16.3  获取定位信息  620
16.3.1  通过模拟器发送GPS信息  620
16.3.2  获取定位数据  620
16.4  临近警告  622
16.5  本章小结  624
第17章  整合高德Map服务  625
17.1  调用高德Map服务  626
17.1.1  获取Map API Key  626
17.1.2  高德地图入门  628
17.2  根据GPS信息在地图上定位  632
17.3  执行定位  638
17.3.1  地址解析与反向地址解析  638
17.3.2  根据地址执行定位  641
17.4  GPS导航  643
17.5  本章小结  647
第18章  合金弹头  648
18.1  合金弹头游戏简介  649
18.2  开发游戏界面组件  649
18.2.1  游戏界面分析  649
18.2.2  实现“怪物”类  650
18.2.3  实现怪物管理类  657
18.2.4  实现“子弹”类  661
18.2.5  实现“角色”类  663
18.3  实现绘图工具类  668
18.4  加载、管理游戏图片  673
18.5  实现游戏界面  676
18.5.1  实现游戏Activity  676
18.5.2  实现主视图  678
18.6  本章小结  686
第19章  电子拍卖系统  687
19.1  系统功能简介和架构设计  688
19.1.1  系统功能简介  688
19.1.2  系统架构设计  689
19.2  JSON简介  690
19.2.1  使用JSON语法创建对象  691
19.2.2  使用JSON语法创建数组  692
19.2.3  Android的JSON支持  693
19.3  发送请求的工具类  693
19.4  用户登录  695
19.4.1  处理登录的接口  695
19.4.2  用户登录客户端  696
19.5  查看流拍物品  704
19.5.1  查看流拍物品的接口  704
19.5.2  查看流拍物品客户端  705
19.6  管理物品种类  709
19.6.1  浏览物品种类的接口  710
19.6.2  查看物品种类  710
19.6.3  添加种类的接口  714
19.6.4  添加物品种类  715
19.7  管理拍卖物品  716
19.7.1  查看自己的拍卖物品的接口  717
19.7.2  查看自己的拍卖物品  717
19.7.3  添加拍卖物品的接口  721
19.7.4  添加拍卖物品  721
19.8  参与竞拍  727
19.8.1  选择物品种类  727
19.8.2  根据种类浏览物品的服务器端接口  728
19.8.3  根据种类浏览物品  729
19.8.4  参与竞价的服务器端接口  730
19.8.5  参与竞价  731
19.9  权限控制  736
19.10  本章小结  737
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>疯狂Android讲义（Kotlin版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>高级Android开发强化实战
第1章  进阶基础  1
1.1  深入剖析 Activity 的生命周期  1
1.1.1  Activity的生命周期的各种状态  2
1.1.2  实例：准备  4
1.1.3  实例：因硬件导致的生命周期变化  6
1.1.4  实例：页面切换时的生命周期变化  11
1.1.5  实例：由系统原因导致的生命周期变化  16
1.2  深入剖析Activity的启动模式  20
1.2.1  ADB命令  20
1.2.2  标准模式  21
1.2.3  栈顶复用模式  25
1.2.4  栈内复用模式  27
1.2.5  单实例模式  32
1.2.6  startActivity  34
1.3  深入剖析View的工作流程  36
1.3.1  装饰视图和MeasureSpec  38
1.3.2  测量  39
1.3.3  布局  44
1.3.4  绘制  45
1.4  深入剖析View的动画原理  47
1.4.1  默认视图动画  48
1.4.2  自定义视图动画  51
1.4.3  帧动画  54
1.4.4  属性动画  54
1.4.5  列表控件  58
第2章  高阶控件  62
2.1  熟练掌握AppBarLayout的开发技术  62
2.1.1  搭建项目框架  63
2.1.2  页面设置ViewPager布局  67
2.1.3  页面添加AppBarLayout布局  73
2.1.4  页面添加AppBarLayout逻辑  76
2.1.5  页面添加AppBarLayout动画  81
2.2  熟练掌握 CoordinatorLayout的开发技术  85
2.2.1  项目框架  86
2.2.2  布局设计  86
2.2.3  联动逻辑  90
2.2.4  图片交互  93
2.3  熟练掌握 ConstraintLayout 的开发技术  96
2.3.1  工程配置  97
2.3.2  约束布局  99
2.3.3  链式结构  107
第3章  项目架构  110
3.1  顶层设计 Android 的工程架构  110
3.1.1  MVC架构  111
3.1.2  MVP架构  116
3.1.3  MVVM架构  120
3.2  顶层设计基于Flux的流式架构  124
3.2.1  视图  125
3.2.2  行为创建器  129
3.2.3  调度器  131
3.2.4  存储器  133
第4章  响应式编程  141
4.1  全面解析响应式库RxJava的使用方式  141
4.1.1  项目框架  142
4.1.2  链式表达式  144
4.1.3  流的加工函数  148
4.1.4  Ambda表达式  151
4.1.5  网络请求  152
4.1.6  控件的异步事件  159
4.1.7  线程安全  161
4.2  全面解析依赖注入库 Dagger 的使用方式  164
4.2.1  工程配置  165
4.2.2  主页逻辑  166
4.2.3  详情逻辑  169
4.3  基于响应式编程的网络数据同步及缓存框架  173
4.3.1  工程配置  174
4.3.2  首页  175
4.3.3  数据源  177
4.3.4  依赖注入  179
4.3.5  无缓存模式  181
4.3.6  缓存模式  183
第5章  炫酷功能  186
5.1  设计与实现朋友圈视频的滚动播放功能  186
5.1.1  项目框架  187
5.1.2  视频列表  189
5.1.3  视频项的适配器  193
5.1.4  视频列表项  196
5.2  设计与实现基于 DialogFragment 的底部弹窗布局  200
5.2.1  首页逻辑  201
5.2.2  弹窗样式  202
5.2.3  弹窗逻辑  204
第6章  精美动画  208
6.1  实现页面切换中元素分享的动画效果  208
6.1.1  项目框架  208
6.1.2  效果显示动画  210
6.1.3  预留位置动画  214
6.2  实现页面展开中圆形爆炸的动画效果  220
6.2.1  首页逻辑  221
6.2.2  新页逻辑  223
6.2.3  显示动画  226
6.2.4  退出动画  229
第7章  Kotlin与SVG  231
7.1  Kotlin基础教程  231
7.1.1  基础部分  232
7.1.2  进阶部分  237
7.2  SVG基础教程  241
7.2.1  Vector图像  242
7.2.2  Vector动画  245
7.2.3  第三方Sharp库  249
第8章  测试与优化  254
8.1  基于Espresso和Dagger的自动化测试框架  254
8.1.1  工程配置  255
8.1.2  业务逻辑  257
8.1.3  功能测试  265
8.2  优化内存泄漏与电量消耗的技术框架  272
8.2.1  内存泄漏  272
8.2.2  电量优化  282
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>高级Android开发强化实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>移动开发丛书·Android Studio开发实战：从零基础到App上线(第2版)
第1章  Android Studio环境搭建	1
1.1  Android Studio简介	1
1.2  Android Studio的安装	2
1.2.1  开发机配置要求	2
1.2.2  安装依赖的软件	2
1.2.3  安装Android Studio	3
1.2.4  下载Android的SDK	5
1.3  运行小应用Hello World	6
1.3.1  创建新项目	6
1.3.2  编译项目/模块	8
1.3.3  创建模拟器	9
1.3.4  在模拟器上运行App	9
1.4  App的工程结构	11
1.4.1  工程目录说明	11
1.4.2  编译配置文件build.gradle	12
1.4.3  App运行配置AndroidManifest.xml	13
1.4.4  在代码中操纵控件	14
1.5  准备开始	15
1.5.1  使用快捷键	15
1.5.2  安装SVN工具	16
1.5.3  安装常用插件	17
1.5.4  导入已经存在的工程	19
1.5.5  新建一个Activity页面	20
1.6  小结	22
第2章  初级控件	23
2.1  屏幕显示	23
2.1.1  像素	23
2.1.2  颜色	25
2.1.3  屏幕分辨率	26
2.2  简单布局	27
2.2.1  视图View的基本属性	27
2.2.2  线性布局LinearLayout	30
2.2.3  滚动视图ScrollView	32
2.3  简单控件	34
2.3.1  文本视图TextView	34
2.3.2  按钮Button	37
2.3.3  图像视图ImageView	39
2.3.4  图像按钮ImageButton	43
2.4  图形基础	45
2.4.1  图形Drawable	45
2.4.2  状态列表图形	46
2.4.3  形状图形	47
2.4.4  九宫格图片	50
2.5  实战项目：简单计算器	53
2.5.1  设计思路	53
2.5.2  小知识：日志Log/提示Toast	55
2.5.3  代码示例	56
2.6  小结	57
第3章  中级控件	59
3.1  其他布局	59
3.1.1  相对布局RelativeLayout	59
3.1.2  框架布局FrameLayout	63
3.2  特殊按钮	64
3.2.1  复选框CheckBox	64
3.2.2  开关按钮Switch	65
3.2.3  单选按钮RadioButton	66
3.3  适配视图基础	68
3.3.1  下拉框Spinner	68
3.3.2  数组适配器ArrayAdapter	69
3.3.3  简单适配器SimpleAdapter	70
3.4  编辑框	72
3.4.1  文本编辑框EditText	72
3.4.2  自动完成编辑框AutoCompleteTextView	77
3.5  活动Activity基础	78
3.5.1  Activity的生命周期	78
3.5.2  使用Intent传递消息	83
3.5.3  向下一个Activity传递参数	85
3.5.4  向上一个Activity返回参数	86
3.6  实战项目：房贷计算器	89
3.6.1  设计思路	89
3.6.2  小知识：文本工具TextUtils	90
3.6.3  代码示例	91
3.7  实战项目：登录App	93
3.7.1  设计思路	93
3.7.2  小知识：提醒对话框AlertDialog	94
3.7.3  代码示例	96
3.8  小结	98
第4章  数据存储	100
4.1  共享参数SharedPreferences	100
4.1.1  共享参数的基本用法	100
4.1.2  实现记住密码功能	102
4.2  数据库SQLite	103
4.2.1  SQLite的基本用法	103
4.2.2  数据库帮助器SQLiteOpenHelper	104
4.2.3  优化记住密码功能	110
4.3  SD卡文件操作	112
4.3.1  SD卡的基本操作	112
4.3.2  公有存储空间与私有存储空间	114
4.3.3  文本文件读写	115
4.3.4  图片文件读写	116
4.4  应用Application基础	118
4.4.1  Application的生命周期	118
4.4.2  利用Application操作全局变量	119
4.5  内容提供与处理	121
4.5.1  内容提供器ContentProvider	121
4.5.2  内容解析器ContentResolver	123
4.5.3  内容观察器ContentObserver	128
4.6  实战项目：购物车	131
4.6.1  设计思路	131
4.6.2  小知识：菜单Menu	132
4.6.3  代码示例	136
4.7  小结	139
第5章  高级控件	140
5.1  日期时间控件	140
5.1.1  日期选择器DatePicker	140
5.1.2  时间选择器TimePicker	142
5.2  列表类视图	144
5.2.1  基本适配器BaseAdapter	144
5.2.2  列表视图ListView	148
5.2.3  网格视图GridView	154
5.3  翻页类视图	158
5.3.1  翻页视图ViewPager	158
5.3.2  翻页标题栏PagerTitleStrip/PagerTabStrip	161
5.3.3  简单的启动引导页	163
5.4  碎片Fragment	166
5.4.1  静态注册	166
5.4.2  动态注册/碎片适配器FragmentStatePagerAdapter	170
5.4.3  改进的启动引导页	173
5.5  广播Broadcast基础	175
5.5.1  发送/接收临时广播	176
5.5.2  定时器AlarmManager	178
5.6  实战项目：万年历	180
5.6.1  设计思路	180
5.6.2  小知识：月份选择器MonthPicker	181
5.6.3  代码示例	183
5.7  实战项目：日程表	184
5.7.1  设计思路	184
5.7.2  小知识：震动器Vibrator	185
5.7.3  代码示例	185
5.8  小结	187
第6章  自定义控件	188
6.1  自定义视图	188
6.1.1  声明属性	188
6.1.2  构造对象	191
6.1.3  测量尺寸	192
6.1.4  宽高尺寸的动态调整	195
6.1.5  绘制视图	198
6.2  自定义动画	204
6.2.1  任务Runnable	204
6.2.2  下拉刷新动画	205
6.2.3  圆弧进度动画	207
6.3  自定义对话框	208
6.3.1  对话框Dialog	208
6.3.2  改进的日期对话框	209
6.3.3  自定义多级对话框	213
6.4  自定义通知栏	214
6.4.1  通知推送Notification	214
6.4.2  进度条ProgressBar	218
6.4.3  远程视图RemoteViews	220
6.4.4  自定义通知的文本颜色设定	223
6.5  服务Service基础	225
6.5.1  Service的生命周期	225
6.5.2  推送服务到前台	229
6.6  实战项目：手机安全助手	230
6.6.1  设计思路	230
6.6.2  小知识：应用包管理器PackageManager	232
6.6.3  代码示例	234
6.7  小结	235
第7章  组合控件	236
7.1  标签栏	236
7.1.1  标签按钮	236
7.1.2  实现底部标签栏	238
7.2  导航栏	246
7.2.1  工具栏Toolbar	246
7.2.2  溢出菜单OverflowMenu	248
7.2.3  搜索框SearchView	250
7.2.4  标签布局TabLayout	253
7.3  横幅条	260
7.3.1  自定义指示器	260
7.3.2  实现横幅轮播Banner	263
7.3.3  仿京东顶到状态栏的Banner	267
7.4  增强型列表	271
7.4.1  循环视图RecyclerView	271
7.4.2  布局管理器LayoutManager	275
7.4.3  动态更新循环视图	280
7.5  材质设计库	282
7.5.1  协调布局CoordinatorLayout	282
7.5.2  应用栏布局AppBarLayout	285
7.5.3  可折叠工具栏布局CollapsingToolbarLayout	287
7.6  实战项目：仿支付宝的头部伸缩特效	290
7.6.1  设计思路	291
7.6.2  小知识：导航栏的滚动标志	292
7.6.3  代码示例	293
7.7  实战项目：仿淘宝主页	298
7.7.1  设计思路	298
7.7.2  小知识：下拉刷新布局SwipeRefreshLayout	299
7.7.3  代码示例	303
7.8  小结	305
第8章  调试与上线	306
8.1  调试工作	306
8.1.1  模拟器调试	306
8.1.2  真机调试	311
8.1.3  导出APK安装包	313
8.2  准备上线	315
8.2.1  版本设置	315
8.2.2  上线模式	316
8.2.3  数据加密	320
8.3  安全加固	325
8.3.1  反编译	325
8.3.2  代码混淆	327
8.3.3  第三方加固及重签名	329
8.4  发布到应用商店	331
8.4.1  注册开发者账号	331
8.4.2  创建并提交应用	332
8.5  小结	334
第9章  设备操作	335
9.1  摄像头	335
9.1.1  表面视图SurfaceView	335
9.1.2  使用Camera拍照	337
9.1.3  纹理视图TextureView	343
9.1.4  使用Camera 2拍照	344
9.1.5  运行时动态授权管理	346
9.2  麦克风	349
9.2.1  拖动条SeekBar	349
9.2.2  音量控制	350
9.2.3  录音与播音	352
9.2.4  录像与放映	360
9.3  传感器	362
9.3.1  传感器的种类	362
9.3.2  摇一摇——加速度传感器	364
9.3.3  指南针——磁场传感器	365
9.3.4  计步器、感光器和陀螺仪	368
9.4  手机定位	370
9.4.1  开启定位功能	371
9.4.2  获取定位信息	373
9.5  短距离通信	378
9.5.1  NFC近场通信	378
9.5.2  红外遥控	384
9.5.3  蓝牙BlueTooth	388
9.6  实战项目：仿微信的发现功能	395
9.6.1  设计思路	395
9.6.2  小知识：全球卫星导航系统	397
9.6.3  代码示例	399
9.7  小结	406
第10章  网络通信	407
10.1  多线程	407
10.1.1  消息传递Message	407
10.1.2  进度对话框ProgressDialog	411
10.1.3  异步任务AsyncTask	414
10.1.4  异步服务IntentService	420
10.2  HTTP接口访问	423
10.2.1  网络连接检查	423
10.2.2  移动数据格式JSON	425
10.2.3  JSON串与实体类自动转换	427
10.2.4  HTTP接口调用	428
10.2.5  HTTP图片获取	432
10.3  上传和下载	434
10.3.1  下载管理器DownloadManager	435
10.3.2  文件对话框	441
10.3.3  文件上传	442
10.4  套接字Socket	445
10.4.1  网络地址InetAddress	445
10.4.2  Socket通信	446
10.5  实战项目：仿应用宝的应用更新功能	451
10.5.1  设计思路	451
10.5.2  小知识：查看APK文件的包信息	452
10.5.3  代码示例	454
10.6  实战项目：仿手机QQ的聊天功能	457
10.6.1  设计思路	457
10.6.2  小知识：可折叠列表视图ExpandableListView	459
10.6.3  代码示例	464
10.7  小结	468
第11章  事件	469
11.1  按键事件	469
11.1.1  检测软键盘	469
11.1.2  检测物理按键	472
11.1.3  音量调节对话框	474
11.2  触摸事件	479
11.2.1  手势事件的分发流程	479
11.2.2  手势事件处理MotionEvent	483
11.2.3  手写签名	486
11.3  手势检测	488
11.3.1  手势检测器GestureDetector	488
11.3.2  飞掠视图ViewFlipper	491
11.3.3  手势控制横幅轮播	494
11.4  手势冲突处理	498
11.4.1  上下滚动与左右滑动的冲突处理	498
11.4.2  内部滑动与翻页滑动的冲突处理	501
11.4.3  正常下拉与下拉刷新的冲突处理	506
11.5  实战项目：抠图神器——美图变变	510
11.5.1  设计思路	510
11.5.2  小知识：二维图像的基本加工	511
11.5.3  代码示例	512
11.6  实战项目：虚拟现实的全景图库	514
11.6.1  设计思路	514
11.6.2  小知识：三维图形接口OpenGL	516
11.6.3  代码示例	529
11.7  小结	532
第12章  动画	534
12.1  帧动画	534
12.1.1  帧动画的实现	534
12.1.2  显示GIF动画	536
12.1.3  淡入淡出动画	538
12.2  补间动画	539
12.2.1  补间动画的种类	539
12.2.2  补间动画的原理	544
12.2.3  集合动画	547
12.2.4  在飞掠横幅中使用补间动画	549
12.3  属性动画	551
12.3.1  属性动画的用法	551
12.3.2  属性动画组合	555
12.3.3  插值器和估值器	557
12.4  矢量动画	561
12.4.1  矢量图形	561
12.4.2  可缩放矢量图形SVG标记	563
12.4.3  利用属性动画实现矢量动画	565
12.4.4  仿支付宝的支付成功动画	568
12.5  动画的实现手段	572
12.5.1  使用延时重绘	572
12.5.2  设置状态参数	574
12.5.3  滚动器Scroller	575
12.6  实战项目：仿QQ空间的动感影集	577
12.6.1  设计思路	577
12.6.2  小知识：画布的绘图层次	578
12.6.3  代码示例	583
12.7  小结	584
第13章  多媒体	585
13.1  相册	585
13.1.1  画廊Gallery	585
13.1.2  图像切换器ImageSwitcher	589
13.1.3  图片查看器——青青相册	592
13.2  音频播放	596
13.2.1  铃声Ringtone	596
13.2.2  声音池SoundPool	599
13.2.3  音轨录播AudioTrack	602
13.3  视频播放	605
13.3.1  视频视图VideoView	606
13.3.2  媒体控制条MediaController	609
13.3.3  自定义播放控制条	611
13.4  多窗口	613
13.4.1  分屏——多窗口模式	614
13.4.2  画中画——特殊的多窗口	617
13.4.3  自定义悬浮窗	619
13.4.4  截图和录屏	624
13.5  实战项目：影视播放器——爱看剧场	626
13.5.1  设计思路	626
13.5.2  小知识：竖屏与横屏切换	627
13.5.3  代码示例	630
13.6  实战项目：音乐播放器——浪花音乐	634
13.6.1  设计思路	634
13.6.2  小知识：可变字符串SpannableString	636
13.6.3  代码示例	639
13.7  小结	644
第14章  融合技术	646
14.1  网页集成	646
14.1.1  资产管理器AssetManager	646
14.1.2  网页视图WebView	648
14.1.3  简单浏览器	651
14.2  JNI开发	658
14.2.1  NDK环境搭建	658
14.2.2  创建JNI接口	661
14.2.3  JNI实现加解密	666
14.3  局域网共享	669
14.3.1  无线网络管理器WifiManager	670
14.3.2  连接指定WiFi	671
14.3.3  开关热点	672
14.3.4  点对点蓝牙传输	674
14.4  实战项目：共享经济弄潮儿——WiFi共享器	683
14.4.1  设计思路	683
14.4.2  小知识：NetBIOS协议	684
14.4.3  代码示例	688
14.5  实战项目：笔墨飘香之电子书架	693
14.5.1  设计思路	693
14.5.2  小知识： PDF文件渲染器PdfRenderer	694
14.5.3  代码示例	696
14.6  小结	701
第15章  第三方开发包	702
15.1  地图SDK	702
15.1.1  查看签名信息	702
15.1.2  百度地图	704
15.1.3  高德地图	710
15.2  分享SDK	714
15.2.1  QQ分享	715
15.2.2  微信分享	716
15.3  支付SDK	721
15.3.1  支付宝支付	721
15.3.2  微信支付	723
15.4  语音SDK	724
15.4.1  文字转语音TextToSpeech	724
15.4.2  语音识别	729
15.4.3  语音合成	733
15.5  实战项目：仿滴滴打车	734
15.5.1  设计思路	734
15.5.2  小知识：评分条RatingBar	735
15.5.3  代码示例	738
15.6  小结	739
第16章  性能优化	741
16.1  布局文件优化	741
16.1.1  减少重复布局	741
16.1.2  自适应调整布局	744
16.1.3  自定义窗口主题	746
16.2  内存泄漏处理	748
16.2.1  内存泄漏的检测	748
16.2.2  内存泄漏的发生	749
16.2.3  内存泄漏的预防	755
16.3  线程池管理	758
16.3.1  普通线程池	758
16.3.2  定时器线程池	760
16.4  省电模式	761
16.4.1  检测当前电量	761
16.4.2  检测屏幕开关	763
16.4.3  休眠模式对App的影响	765
16.5  实战项目：网络图片缓存框架	768
16.5.1  设计思路	768
16.5.2  小知识：LRU缓存策略	769
16.5.3  代码示例	772
16.6  小结	780
附录	781
附录一  仿流行App的常用功能	781
附录二  Android各版本的新增功能说明	782
附录三  手机硬件与App开发的关联	784
附录四  专业术语索引	785
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>移动开发丛书·Android Studio开发实战：从零基础到App上线(第2版)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android从入门到精通
目录
第1章  Android应用和开发环境    1
1.1  Android的历史和发展    1
1.1.1  Android的起源    1
1.1.2  Android的发展与前景    1
1.1.3  Android的系统架构    2
1.2  搭建Android开发环境    4
1.2.1  需要的工具    4
1.2.2  搭建开发环境    5
1.2.3  Android Studio的安装    9
1.3  开始第一个安卓应用    12
1.3.1  创建HelloWorld项目    12
1.3.2  启动Android模拟器    14
1.3.3  运行第一个Android应用    17
1.3.4  Android应用结构分析    18
1.4  Android应用的基本组件介绍    25
1.4.1  Activity和View    26
1.4.2  Service    26
1.4.3  BroadcastReceiver    26
1.4.4  ContentProvider    27
1.4.5  Intent和IntentFilter    27
1.5  本章小结    27
1.6  习题    28
第2章  Android应用的界面编程    29
2.1  界面编程和视图    29
2.1.1  视图组件和容器组件    29
2.1.2  使用XML布局文件
控制UI界面    30
2.1.3  在代码中控制UI界面    30
2.1.4  自定义UI组件    32
2.2  布局管理器    35
2.2.1  什么是布局    35
2.2.2  线性布局    36
2.2.3  表格布局    39
2.2.4  帧布局    43
2.2.5  相对布局    44
2.2.6  网格布局    46
2.2.7  绝对布局    49
2.3  几组重要的UI组件    49
2.3.1  TextView及其子类    49
2.3.2  ImageView及其子类    56
2.3.3  AdapterView及其子类    60
2.3.4  Adapter接口及其实现类    62
2.4  本章小结    67
2.5  习题    68
第3章  常用的UI组件介绍    69
3.1  菜单    69
3.1.1  选项菜单    69
3.1.2  上下文菜单    71
3.1.3  弹出式菜单    74
3.1.4  设置与菜单项关联的Activity    76
3.2  对话框的使用    77
3.2.1  使用AlertDialog建立对话框    77
3.2.2  创建DatePickerDialog与TimePickerDialog对话框    85
3.2.3  创建ProgressDialog进度对话框    86
3.2.4  关于PopupWindow及DialogTheme窗口    88
3.3  ProgressBar及其子类    90
3.3.1  进度条的功能和用法    91
3.3.2  拖动条的功能和用法    93
3.3.3  星级评分条的功能和用法    96
3.4  本章小结    97
3.5  习题    98
第4章  Android事件处理    99
4.1  基于监听的事件处理    99
4.1.1  事件监听的处理模型    99
4.1.2  创建监听器的几种形式举例    102
4.1.3  在标签中绑定事件处理器    104
4.2  基于回调的事件处理    105
4.2.1  回调机制    105
4.2.2  基于回调的事件传播    106
4.2.3  与监听机制对比    107
4.3  响应系统设置的事件    108
4.3.1  Configuration类简介    108
4.3.2  onConfigurationChanged方法    110
4.4  Handler消息传递机制    111
4.4.1  Handler类简介    112
4.4.2  Handler、Loop及MessageQueue三者的关系    113
4.5  本章小结    117
4.6  习题    117
第5章  深入理解Activity与Fragment    119
5.1  建立、配置和使用Activity    119
5.1.1  Activity介绍    119
5.1.2  配置Activity    121
5.1.3  Activity的启动与关闭    122
5.1.4  使用Bundle在Activity之间交换数据    125
5.2  Activity的生命周期和启动模式    130
5.2.1  Activity的生命周期演示    130
5.2.2  Activity的4种启动模式    135
5.3  Fragment详解    138
5.3.1  Fragment的生命周期    138
5.3.2  创建Fragment    143
5.3.3  Fragment与Activity通信    145
5.3.4  Fragment管理与Fragment事务    146
5.4  本章小结    146
5.5  习题    147
第6章  使用Intent和IntentFilter进行通信    148
6.1  Intent对象简述    148
6.2  Intent属性及intent-filter配置    149
6.2.1  Component属性    149
6.2.2  Action、Category属性与intent-filter配置    150
6.2.3  Data、Type属性与intent-filter配置    152
6.2.4  Flag属性    154
6.3  本章小结    154
6.4  习题    155
第7章  Android应用的资源    156
7.1  Android应用资源概述    156
7.1.1  资源的类型以及存储方式    156
7.1.2  使用资源    157
7.2  字符串、颜色与样式资源    159
7.2.1  颜色值的定义    160
7.2.2  定义字符串、颜色与样式资源文件    160
7.3  数组资源    161
7.4  使用Drawable资源    165
7.4.1  图片资源    165
7.4.2  StateListDrawable资源    165
7.4.3  AnimationDrawable资源    167
7.5  使用原始XML资源    168
7.5.1  定义使用原始XML资源    168
7.5.2  使用原始XML文件    169
7.6  样式和主题资源    171
7.6.1  样式资源    171
7.6.2  主题资源    172
7.7  本章小结    172
7.8  习题    173
第8章  图形与图像处理    174
8.1  使用简单图片    174
8.2  绘图    177
8.2.1  Android绘图基础：Canvas、Paint等    178
8.2.2  Path类    180
8.3  图形特效处理    183
8.3.1  使用Matrix控制变换    183
8.3.2  使用drawBitmapMesh扭曲图像    186
8.4  逐帧动画    188
8.5  补间动画    190
8.5.1  补间动画与插值器Interpolator    190
8.5.2  位置、大小、旋转度与透明度改变的补间动画    191
8.6  属性动画    194
8.6.1  属性动画API    194
8.6.2  使用属性动画    196
8.7  使用SurfaceView实现动画    201
8.8  本章小结    206
8.9  习题    206
第9章  Android数据存储与IO    208
9.1  使用SharedPreferences    208
9.1.1  SharedPreferences简介    208
9.1.2  SP的存储位置和格式    209
9.2  File存储    211
9.2.1  打开应用中数据文件的IO流    211
9.2.2  读写SD卡上的文件    214
9.3  SQLite数据库    216
9.3.1  SQLiteDatabase简介    216
9.3.2  创建数据库和表    218
9.3.3  使用SQL语句操作SQLite数据库    218
9.3.4  使用特定方法操作SQLite数据库    222
9.3.5  事务    223
9.3.6  SQLiteOpenHelper类    224
9.4  手势    227
9.4.1  手势检测    228
9.4.2  增加手势    232
9.5  本章小结    235
9.6  习题    235
第10章  使用ContentProvider实现数据共享    237
10.1  数据共享标准：ContentProvider    237
10.1.1  ContentProvider简介    237
10.1.2  URI简介    239
10.1.3  使用ContentResolver操作数据    239
10.2  开发ContentProvider    240
10.2.1  开发ContentProvider的子类    240
10.2.2  使用ContentResolver调用方法    242
10.3  操作系统的ContentProvider    244
10.3.1  使用ContentProvider管理联系人    244
10.3.2  使用ContentProvider管理多媒体    246
10.4  监听ContentProvider的数据改变    250
10.5  本章小结    252
10.6  习题    252
第11章  Service与BroadcastReceiver    254
11.1  Service简介    254
11.1.1  创建和配置Service    254
11.1.2  启动和停止Service    256
11.1.3  绑定本地Service    257
11.1.4  Service的生命周期    260
11.1.5  IntentService简介    261
11.2  电话管理器    264
11.3  短信管理器    269
11.4  音频管理器    270
11.5  手机闹钟服务    272
11.6  接收广播消息    275
11.6.1  BroadcastReceiver简介    276
11.6.2  发送广播    276
11.6.3  有序广播    278
11.7  本章小结    280
11.8  习题    281
第12章  Android网络应用    282
12.1  基于TCP协议的网络通信    282
12.1.1  TCP协议基础    282
12.1.2  使用Socket进行通信    284
12.1.3  加入多线程    288
12.2  使用URL访问网络资源    292
12.2.1  使用URL读取网络资源    292
12.2.2  使用URLConnection提交请求    293
12.3  使用HTTP访问网络    295
12.4  使用WebService进行网络编程    301
12.4.1  WebService平台概述    301
12.4.2  使用Android应用调用WebService    303
12.5  本章小结    307
12.6  习题    307
第13章  多媒体应用开发    309
13.1  音频和视频的播放    309
13.1.1  使用MediaPlayer播放音频    309
13.1.2  音乐特效控制    311
13.1.3  使用VideoView播放视频    316
13.2  使用MediaRecorder录制音频    319
13.3  控制摄像头拍照    322
13.4  本章小结    329
13.5  习题    329
第14章  文字控实战项目（一）    331
14.1  项目概述    331
14.1.1  项目分析    331
14.1.2  项目功能展示    332
14.2  启动界面    334
14.2.1  启动页面流程图    334
14.2.2  开发启动页面    335
14.3  MVP架构简介    341
14.4  获取网络数据的工具类    341
14.5  MVP之Model层开发    344
14.5.1  bean类    345
14.5.2  IModel接口的开发    347
14.5.3  Model实现类的开发    349
14.6  MVP之Presenter层开发    354
14.6.1  监听接口开发    355
14.6.2  IPresenter接口的开发    356
14.6.3  Presenter实现类的开发    356
14.7  本章小结    360
14.8  习题    360
第15章  文字控实战项目（二）    361
15.1  MVP之View层开发    361
15.1.1  IView接口开发    361
15.1.2  项目界面开发    362
15.1.3  View实现类开发    370
15.2  自定义适配器    375
15.3  数据转换工具    378
15.4  权限控制    381
15.5  本章小结    381
15.6  习题    382
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android从入门到精通
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android工程化最佳实践
第1章  探寻高效易用的反射API
1.1  反射的能力
1.1.1  得到Class对象
1.1.2  操作Field
1.1.3  调用Method
1.1.4  动态代理
1.2  反射封装库——JOOR
1.2.1  反射的流程
1.2.2  VirtualApp中的反射
1.2.3  一行代码建立对象
1.2.4  简化Field的相关操作
1.2.5  简化方法调用
1.2.6  封装动态代理
1.3  注意事项
1.3.1  反射的性能问题
1.3.2  反射的使用时机
1.3.3  如何降低反射的性能损耗
1.3.4  反射的危险性
1.3.5  反射和混淆的关系
1.4  总结
第2章  打造高扩展性的Log系统
2.1  基本概念
2.2  命令行操作Log
2.2.1  输出日志
2.2.2  过滤日志
2.3  Android Studio中的Log
2.3.1  设置模板
2.3.2  正则过滤
2.3.3  热部署Log
2.4  微信的Xlog
2.4.1  设计和开发目标
2.4.2  编译、引入和使用
2.4.3  对Log文件进行优化
2.5  美团的Logan
2.6  扩展Log的功能
2.6.1  TAG的自动化
2.6.2  文本内容的设计
2.6.3  开关的设计
2.7  封装Log库
2.7.1  Timber
2.7.2  LogDelegate
2.7.3  Logger
2.7.4  扩展Timber的功能
2.7.5  分发日志
2.8  实用日志
2.8.1  操作耗时日志
2.8.2  页面跳转日志
2.8.3  网络请求日志
2.9  总结
第3章  万变不离其宗的Intent
3.1  源码分析
3.1.1  静态变量的写法
3.1.2  Intent的深拷贝
3.1.3  makeMainActivity
3.1.4  Intent的Chooser
3.1.5  用URI代替Intent
3.1.6  存取值的底层实现
3.1.7  区分显式和隐式Intent
3.1.8  抛弃Bundle的传值策略
3.2  序列化方案
3.2.1  Serializable/Externalizable
3.2.2  Android中的Parcelable
3.2.3  Google的Protocol Buffer
3.2.4  Twitter的Serial
3.3  常见问题
3.3.1  父类的序列化
3.3.2  类型转换异常
3.3.3  重复启动的问题
3.3.4  传递大对象
3.4  简单的传值库——Parceler
3.4.1  降低Key的维护成本
3.4.2  自动维护Intent的Key
3.4.3  Jetpack中的自动化
3.4.4  自动保存状态
3.4.5  处理ClassCastException
3.4.6  IntentLauncher
3.4.7  统一存取的API
3.5  总结
第4章  SharedPrefrences的再封装
4.1  源码分析
4.1.1  缓存机制
4.1.2  SharedPreferencesImpl
4.1.3  值操作
4.1.4  提交操作
4.2  异常处理
4.2.1  name为null
4.2.2  管理好Key的取名
4.2.3  清空操作失效
4.2.4  磁盘写入异常
4.2.5  出现ANR
4.2.6  存序列化对象
4.2.7  多App和多进程访问异常
4.3  性能优化
4.3.1  避免储存大量数据
4.3.2  尽可能提前初始化
4.3.3  避免Key过长
4.3.4  多次操作，批量提交
4.3.5  缓存Editor对象
4.3.6  不存放HTML和JSON
4.3.7  拆分高频和低频操作
4.4  封装SharedPreferences
4.4.1  PreferenceDataStore
4.4.2  通过接口提高内聚
4.4.3  得到SharedPreferences
4.4.4  多用户存储设计
4.4.5  统一管理Key
4.4.6  自动判断返回值类型
4.4.7  决定是否使用Apply
4.4.8  存放序列化对象
4.4.9  支持数据格式转换器
4.5  思维扩展
4.5.1  偏好界面的实现方案
4.5.2  监听数据的改变
4.5.3  利用Tray实现多进程访问
4.5.4  React Native中的使用
4.6  总结
第5章  寻找Fragment的继任者
5.1  使用场景
5.1.1  日夜间模式
5.1.2  缓存界面数据
5.1.3  作为搜索页
5.1.4  作为Presenter
5.2  源码分析
5.2.1  Transaction简介
5.2.2  提交操作
5.2.3  commitAllowingStateLoss
5.2.4  Add操作的原理
5.2.5  Replace操作的本质
5.2.6  Fragment的可见性监听
5.2.7  ViewPager中的懒加载
5.3  常见问题
5.3.1  Activity为空
5.3.2  startActivityForResult
5.3.3  ViewPager的getItem
5.3.4  FragmentPagerAdapter
5.3.5  显示一个对话框
5.3.6  重叠显示的问题
5.3.7  Fragment的StateLoss
5.4  Fragment的替代品
5.4.1  Jetpack的Navigation
5.4.2  Square的Flow
5.4.3  简化版的Fragment
5.5  Shatter库
5.5.1  建立Shatter类
5.5.2  设计ShatterManager
5.5.3  分发生命周期
5.5.4  使用方式
5.6  总结
第6章  让alertDialog为我所用
6.1  Dialog
6.1.1  Dialog和Window
6.1.2  Show和Dismiss方法
6.2  alertDialog
6.2.1  alertController
6.2.2  alertDialog.Bulder
6.3  dialogFragment
6.3.1  Fragment和Dialog
6.3.2  Show和Dismiss方法
6.4  实际问题
6.4.1  无法弹出输入法
6.4.2  如何支持层叠弹窗
6.4.3  容易引起内存泄露
6.4.4  修改尺寸、背景和动画
6.4.5  点击后会自动关闭
6.4.6  在关闭或开启时出现崩溃
6.5  封装dialogFragment
6.5.1  用现成的alertParams
6.5.2  让Builder类支持继承
6.5.3  建立dialogFragment框架
6.6  easyDialog
6.6.1  基本用法
6.6.2  自定义一个Dialog
6.6.3  BottomSheetDialog
6.6.4  设置全局样式
6.6.5  支持动态样式
6.6.6  避免丢失监听器
6.7  可全局弹出的Dialog
6.8  总结
第7章  Gradle的使用技巧
7.1  全局配置
7.1.1  设定UTF-8
7.1.2  依赖Google仓库
7.1.3  支持Groovy
7.1.4  定义全局变量
7.1.5  配置Lint选项
7.2  操控Task
7.2.1  更改输出的APK的名字
7.2.2  更改AAR输出的位置
7.2.3  跳过AndroidTest
7.2.4  找出耗时的Task
7.2.5  抽离Task脚本
7.3  动态化
7.3.1  动态设置buildConfig
7.3.2  填充Manifest中的值
7.3.3  让buildType支持继承
7.3.4  让Flavor支持继承
7.3.5  内测版本用特定的Icon
7.3.6  不同渠道不同包名
7.3.7  自动填充版本信息
7.4  远程依赖
7.4.1  配置Maven仓库
7.4.2  依赖相关的API
7.4.3  组合依赖
7.4.4  依赖传递
7.4.5  动态版本号
7.4.6  强制版本号
7.4.7  exclude关键字
7.4.8  依赖管理
7.5  本地依赖
7.5.1  引用AAR
7.5.2  依赖Module/Jar
7.5.3  自建本地仓库
7.5.4  本地依赖React Native
7.5.5  重新打包第三方Jar
7.6  资源管理
7.7  总结
第8章  缩减APK的编译时间
8.1  分析项目现状
8.1.1  Gradle Profile
8.1.2  BuildTimeTracker
8.1.3  Dexcount GradlePlugin
8.1.4  经验小结
8.2  编译环境优化
8.2.1  升级硬件设备
8.2.2  升级软件
8.2.3  优化工程配置
8.2.4  配置Studio的可用内存
8.2.5  提升JVM的堆内存
8.2.6  开启并行编译
8.2.7  启用Demand模式
8.2.8  配置DexOptions
8.3  善用缓存
8.3.1  减少动态方法
8.3.2  硬编码BuildConfig和Res
8.3.3  拆分脚本
8.3.4  拆分代码
8.3.5  写死库的版本号
8.4  精简工程
8.4.1  差异化加载Plugin
8.4.2  使用WebP和SVG
8.4.3  精简语言和图片资源
8.4.4  善用no-op
8.4.5  Exclude无用库
8.4.6  删减Module
8.4.7  去掉MultiDex
8.4.8  删除无用的资源
8.5  综合技巧
8.5.1  构建开发时的Flavor
8.5.2  优化MultiDex
8.5.3  跳过无用的Task
8.5.4  关闭AAPT的图片优化
8.5.5  调试时关闭Crashlytics
8.5.6  谨慎使用AspectJ
8.6  多渠道打包工具
8.6.1  MultiChannelPackageTool
8.6.2  美团的Walle
8.6.3  腾讯的VasDolly
8.7  总结
第9章  APP终极瘦身实践
9.1  安装包的构成
9.1.1  Assets
9.1.2  Lib
9.1.3  Resources.arsc
9.1.4  META-INF
9.1.5  Res
9.1.6  Dex
9.2  优化Assets目录
9.2.1  删除无用的字体
9.2.2  减少IconFont的使用
9.2.3  动态下载资源
9.2.4  压缩资源文件
9.3  优化Lib目录
9.3.1  配置ABI Filters
9.3.2  根据CPU引入so
9.3.3  动态加载so
9.3.4  避免复制so
9.3.5  谨慎处理so
9.4  优化Resources.arsc
9.4.1  删除无用的映射
9.4.2  进行资源混淆
9.5  优化META-INF
9.5.1  MANIFEST.MF
9.5.2  CERT.SF
9.5.3  CERT.RSA
9.5.4  优化建议
9.6  优化Res目录
9.6.1  通过IDE删除无用资源
9.6.2  打包时剔除无用资源
9.6.3  删除无用的语言
9.6.4  控制Raw中的资源大小
9.6.5  减少Shape文件
9.6.6  减少Menu文件
9.6.7  减少Layout文件
9.6.8  动态下载图片
9.6.9  分目录放置图片
9.6.10  合理使用图片资源
9.6.11  丢弃特定的资源
9.6.12  开启严格模式
9.6.13  移除Lib库中的配置文件
9.7  优化图片资源
9.7.1  使用VectorDrawable
9.7.2  使用WebP
9.7.3  替换support库中的图
9.7.4  精简动画图片
9.7.5  复用相同的Icon
9.7.6  使用Tint
9.7.7  复用按压效果
9.7.8  通过旋转复用
9.8  优化Dex
9.8.1  分析Dex
9.8.2  利用Lint分析无用代码
9.8.3  删除R文件
9.8.4  启用ProGuard
9.8.5  使用拆分后的support库
9.8.6  尽量不用Mulitdex
9.8.7  使用更小库或合并现有库
9.8.8  根据环境依赖库
9.9  总结
第10章  编写针对性的TestCase
10.1  基础概念
10.1.1  什么代码应被测试
10.1.2  编写易于被测试的代码
10.1.3  测试框架的选型
10.2  逻辑测试
10.2.1  Junit测试
10.2.2  Mockito
10.2.3  Robolectric的使用
10.2.4  Espresso
10.3  集成测试网络层
10.3.1  编写网络层逻辑
10.3.2  建立测试对象
10.3.3  测试HTTP的异常情况
10.3.4  测试业务代码的正确性
10.3.5  用Interceptor模拟返回值
10.4  总结
第11章  Android Studio使用经验
11.1  调试篇
11.2  插件篇
11.2.1  统计相关
11.2.2  工具相关
11.3  总结
第12章  抓包工具Whistle实践
12.1  抓包工具
12.1.1  Charles
12.1.2  Fiddler
12.1.3  AnyProxy
12.1.4  Whistle
12.2  Whistle的安装和使用
12.2.1  安装和更新
12.2.2  查看Request和Response
12.2.3  代理技巧
12.2.4  过滤规则
12.3  Whistle的各项功能
12.3.1  替换域名
12.3.2  修改请求参数
12.3.3  修改返回值
12.3.4  模拟低网速的情形
12.3.5  查看WebView的Console
12.4  总结
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android工程化最佳实践
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>零基础学Kotlin之Android项目开发实战
第1章  了解Kotlin	1
1.1  Kotlin是什么	1
1.2  Kotlin的特点	2
1.2.1  简洁	2
1.2.2  安全	2
1.2.3  与Java互操作	3
1.2.4  自带IDE支持	3
1.3  用Kotlin能开发什么	3
1.3.1  服务器端程序	4
1.3.2  网页应用	4
1.3.3  本地执行程序	5
1.3.4  Android应用	5
1.4  为什么选择Kotlin	5
1.4.1  Java程序员的选择	5
1.4.2  新手的选择	6
1.5  发展趋势展望	7
第2章  准备工作	8
2.1  开发工具介绍	8
2.1.1  IntelliJ IDEA	8
2.1.2  Android Studio	21
2.1.3  Eclipse	28
2.2  构建工具	30
2.2.1  Gradle	30
2.2.2  Maven	34
2.3  编程规范	39
2.3.1  软件UI规范和人机交互规范	39
2.3.2  编码风格	44
2.4  本书阅读指导	53
第3章  基本语法	55
3.1  基本类型	55
3.1.1  数值	55
3.1.2  字符	58
3.1.3  布尔	58
3.1.4  数组	58
3.1.5  字符串	62
3.2  集合	65
3.2.1  Set	65
3.2.2  List	66
3.2.3  Map	67
3.2.4  集合常用函数	68
3.2.5  扩展阅读	75
3.3  变量	75
3.3.1  变量声明	75
3.3.2  Any类型和null	76
3.3.3  智能转换和is运算符	77
3.3.4  可空变量和不可空变量	77
3.4  运算符	78
3.4.1  赋值运算符	78
3.4.2  算术运算符	79
3.4.3  关系运算符	79
3.4.4  区间运算符	80
3.4.5  逻辑运算符	81
3.4.6  位运算符	81
3.4.7  其他运算符	81
3.4.8  优先级	84
3.4.9  运算符重载	84
3.5  表达式	84
3.5.1  if表达式	84
3.5.2  when表达式	86
3.5.3  throw、try…catch表达式	87
3.5.4  正则表达式	88
3.5.5  return表达式	91
3.6  语句	91
3.6.1  异常处理	91
3.6.2  判断语句	93
3.6.3  循环语句	95
3.7  自定义函数	98
3.7.1  函数声明	98
3.7.2  函数调用	101
3.7.3  函数的范围	102
3.7.4  函数分类	105
3.8  程序组织及可见性修饰符	112
3.8.1  包	112
3.8.2  可见性修饰符	114
第4章  接口、类和对象	116
4.1  综述	116
4.1.1  定义接口	117
4.1.2  定义类	117
4.1.3  关于对象	118
4.1.4  编程示例	119
4.2  类	119
4.2.1  类的声明	119
4.2.2  构造函数	120
4.2.3  类的继承	123
4.2.4  类的实例化	126
4.3  类的成员	126
4.3.1  属性	126
4.3.2  函数	131
4.3.3  嵌套类	132
4.3.4  内部类	132
4.3.5  匿名内部类	133
4.3.6  初始化模块	133
4.3.7  对象声明	134
4.4  特殊的类	137
4.4.1  抽象类	137
4.4.2  枚举类	138
4.4.3  密封类	140
4.4.4  数据类	142
4.5  类的扩展	145
4.5.1  扩展函数	145
4.5.2  扩展属性	148
4.5.3  扩展伴生对象	148
4.6  类委托	148
4.7  对象	149
4.7.1  对象声明	150
4.7.2  匿名对象	151
4.8  类的设计	153
4.8.1  设计原则	153
4.8.2  常用图标	158
4.8.3  PowerDesigner设计类图	160
4.9  标准类库	162
第5章  Kotlin开发Android应用	164
5.1  再次开发HelloWorld程序	164
5.1.1  配置Android开发环境	164
5.1.2  开发HelloWorld	165
5.1.3  Android开发步骤	169
5.2  了解Android开发	172
5.2.1  Android系统的技术架构	172
5.2.2  Android应用程序的构成	174
5.3  Activity和Intent	177
5.3.1  Toast提示	177
5.3.2  打开多个Activity	179
5.3.3  关闭Activity	186
5.3.4  Activity生命周期	189
5.4  关于控件	191
5.4.1  概述	191
5.4.2  关于布局	194
5.4.3  控件大全	194
5.5  布局	198
5.5.1  线性布局	198
5.5.2  相对布局	206
5.5.3  帧布局	208
5.5.4  表格布局	208
5.5.5  网格布局	210
5.6  常用控件	212
5.6.1  TextView	212
5.6.2  EditText	220
5.6.3  Button	229
5.6.4  ImageView	230
5.6.5  选择用途的控件	235
5.7  关于事件	243
5.7.1  事件机制	243
5.7.2  监听事件机制	243
5.7.3  回调事件机制	247
5.8  对话框	252
5.8.1  简单对话框	252
5.8.2  单选对话框	253
5.8.3  多选对话框	254
5.8.4  进度对话框	254
5.8.5  自定义对话框	257
5.9  菜单	259
5.9.1  选项菜单	260
5.9.2  上下文菜单	262
5.9.3  弹出菜单	265
第6章  数据操作	267
6.1  综述	267
6.1.1  SharedPreferences	267
6.1.2  文件	268
6.1.3  数据库和数据库框架（SQLite数据库）	268
6.1.4  ContentProvider	269
6.1.5  网络	269
6.2  SharedPreferences	269
6.2.1  获取SharedPreferences对象	270
6.2.2  读取信息	271
6.2.3  写入信息	271
6.2.4  其他知识点	273
6.3  文件	274
6.3.1  资源文件读取	274
6.3.2  内部数据文件的读写	277
6.3.3  外部数据文件的读写	281
6.4  SQLite数据库	284
6.4.1  概述	284
6.4.2  使用SQLiteOpenHelper类	286
6.4.3  使用SQLiteDatabase类	291
6.5  ContentProvider	298
6.5.1  综述	299
6.5.2  开发ContentProvider	303
6.5.3  开发ConvertResolver	308
6.5.4  监听ContentProvider数据改变	310
6.6  网络	311
6.6.1  开发步骤	312
6.6.2  代码示例	314
后记	317
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>零基础学Kotlin之Android项目开发实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android APP应用程序开发完全学习教程
目录
前言
CHAPTER 1 Android基础知识，第一个应用程序： HelloAndroid
1.1 智能手机及其操作系统
1.1.1 智能手机
1.1.2 Android手机
1.1.3 App和Google Play
1.2 Android应用开发环境
1.3 第一个应用程序： HelloAndroid
1.3.1 框架应用
1.3.2 GUI预览
1.3.3 XML文件： activity_main.xml、 colors.xml、 styles.xml、 strings.xml、 dimens.xml
1.3.4 MainActivity类
1.4 在模拟器中运行App
1.5 使用Logcat调试App
1.6 调试器的使用
1.7 在实际设备上测试App
1.8 App Manifest和Gradle构建系统
1.8.1 AndroidManifest.xml文件： App图标与面向安卓的设备
1.8.2 Gradle构建系统
CHAPTER 2 模型视图控制器、 GUI组件和事件
2.1 模型视图控制器（MVC）框架
2.2 模型
2.3 GUI组件
2.4 RelativeLayout、 TextView、 EditText和Button: Tip Calculator应用程序,版本0
2.5 GUI组件和多XML属性： Tip Calculator应用程序，版本1
2.6 风格和主题： Tip Calculator应用程序，版本2
2.7 事件和简单事件处理：编写控制器， Tip Calculator应用程序，版本3
2.8 多事件处理： Tip Calculator应用程序，版本4
CHAPTER 3 GUI、布局管理器编程
3.1 MVC框架
3.2 模型
3.3 以编程方式创建GUI， TicTacToe应用程序，版本0
3.4 事件处理： TicTacToe应用程序，版本1
3.5 整合模型以支持游戏玩法： TicTacToe应用程序，版本2
3.6 内部类
3.7 布局参数： TicTacToe应用程序，版本3
3.8 提醒对话框： TicTacToe应用程序，版本4
3.9 拆分视图和控制器： TicTacToe应用程序，版本5
CHAPTER 4 多个Activity，在Activity之间传递数据，转换，持久性数据
4.1 模型： Mortgage类
4.2 使用TableLayout作为GUI前端： Mortgage Calculator应用程序，版本0
4.3 使用RelativeLayout作为第二屏幕GUI
4.4 连接两个activity： Mortgage Calculator应用程序，版本1
4.5 activity的生命周期
4.6 多个activity之间共享数据： Mortgage Calculator应用程序，版本2
4.7 activity之间的转换： Mortgage Calculator应用程序，版本3
4.8 处理持久性数据： Mortgage Calculator应用程序，版本4
CHAPTER 5 菜单和SQLite
5.1 菜单和菜单项： Candy Store应用程序，版本0
5.2 图标： Candy Store应用程序，版本1
5.3 SQLite：创建数据库、表和插入数据， Candy Store应用程序，版本2
5.4 删除数据： Candy Store应用程序，版本3
5.5 更新数据： Candy Store应用程序，版本4
5.6 运行收银机： Candy Store应用程序，版本5
CHAPTER 6 设备方向管理
6.1 Configuration类
6.2 捕获设备旋转事件
6.3 策略1：为每个方向设置一个Layout XML文件
6.4 策略2：为两个方向应用一个layout XML文件，用代码修改布局
6.5 策略3：完全用代码管理布局和方向
CHAPTER 7 触摸与滑动
7.1 检测触摸事件
7.2 处理滑动事件：移动TextView
7.3 模型
7.4 视图：设置GUI， Puzzle应用程序，版本0
7.5 移动拼图， Puzzle应用程序，版本1
7.6 解决难题， Puzzle应用程序，版本2
7.7 手势、点击检测和处理
7.8 检测双击， Puzzle应用程序，版本3
7.9 独立的应用程序设备， Puzzle应用程序，版本4
CHAPTER 8 图形、动画、声音和游戏
8.1 图形
8.2 制作自定义视图，绘图， Duck Hunting应用程序，版本0
8.3 模型
8.4 动画对象：飞鸭， Duck Hunting应用程序，版本1
8.5 处理触摸事件：移动大炮和射击， Duck Hunting应用程序，版本2
8.6 播放声音：射击、碰撞检测， Duck Hunting应用程序，版本3
CHAPTER 9 片段
9.1 模型
9.2 片段
9.3 使用布局XML文件为activity定义和添加片段，猜字游戏应用程序，版本0
9.4 添加GUI组件、样式、字符串和颜色，猜字游戏应用程序，版本1
9.5 使用布局XML文件定义片段并通过代码将片段添加到activity，猜字游戏应用程序，本2
9.6 通过代码定义activity并为其添加一个片段，猜字游戏应用程序，版本3
9.7 片段与其activity之间的通信：启用Play，猜字游戏应用程序，版本 4
9.8 使用隐形片段，猜字游戏应用程序，版本5
9.9 使片段可重用，猜字游戏应用程序，版本6
9.10 改进GUI：直接处理键盘输入，猜字游戏应用程序，版本7
CHAPTER 10 使用库及其API：语音识别和地图
10.1 语音识别
10.2 语音识别A部分，应用程序版本0
10.3 使用谷歌地图活动模板，应用程序版本1
10.4 在地图中添加注释，应用程序版本2
10.5 模型
10.6 基于语音输入显示地图，应用程序版本3
10.7 控制语音输入，应用程序版本4
10.8 语音识别B部分，使用语音移动地图一次，应用程序版本5
10.9 语音识别C部分，连续使用语音移动地图，应用程序版本6
CHAPTER 11 使用GPS和定位服务
11.1 访问Google Play服务， GPS应用程序，版本0
11.2 使用GPS检索我们的位置， GPS应用程序，版本1
11.3 到达目的地的距离和时间的模型
11.4 到达目的地的距离和时间， GPS应用程序，版本2
11.5 更新到达目的地的距离和时间， GPS应用程序，版本3
CHAPTER 12 在一款应用程序中使用其他应用程序：
拍照、调为灰度模式和发送邮件
12.1 调用相机应用程序并拍摄照片，照片应用程序，版本0
12.2 模型：将照片调为灰度模式，照片应用程序，版本1
12.3 使用SeekBars定义灰度阴影，照片应用程序，版本2
12.4 改进用户界面，照片应用程序，版本3
12.5 存储图片，照片应用程序，版本4
12.6 使用电子邮件应用程序：将灰度图片发送给朋友，照片应用程序，版本5
CHAPTER 13 XML和内容型应用程序
13.1 解析XML、 DOM和SAX解析器， Web Content应用程序，版本0
13.2 将XML解析为列表， Web Content应用程序，版本1
13.3 解析远程XML文档， Web Content应用程序，版本2
13.4 Web Content应用程序在ListView中显示结果，版本3
13.5 在应用程序内部打开Web浏览器， Web Content应用程序，版本4
CHAPTER 14 制作Android小部件
14.1 制作小部件的操作步骤：温度小部件，版本0
14.2 设置小部件样式：温度小部件，版本1
14.3 更新小部件的数据：温度小部件，版本2
14.4 通过单击更新小部件的数据：温度小部件，版本3
14.5 检索远程源中的温度数据：温度小部件，版本4
14.6 使用Activity自定义小部件：温度小部件，版本5
14.7 在锁屏屏幕上托管小部件：温度小部件，版本6
CHAPTER 15 在应用程序中添加广告
15.1 视图： Stopwatch应用程序，版本0
15.2 控制器：运行Stopwatch应用程序，版本1
15.3 改进Stopwatch应用程序，版本2
15.4 植入广告Stopwatch应用程序，版本3
15.5 把广告嵌入碎片中： Stopwatch应用程序，版本4
15.6 AdView生命周期的管理： Stopwatch应用程序，版本5
CHAPTER 16 安全和加密
16.1 对称和非对称加密
16.2 对称加密：模型（AES）， Encryption应用程序，版本0
16.3 对称加密：添加视图， Encryption应用程序，版本1
16.4 非对称加密：将RSA添加到模型， Encryption应用程序，版本2
16.5 对称和非对称加密：修改视图， Encryption应用程序，版本3
附录 a 动态检索状态栏和操作栏的高度
附录 B 动态设置TextView的字体大小
附录 c 下载、安装Google Play服务和使用地图
附录 D AsyncTask类
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android APP应用程序开发完全学习教程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android高效进阶：从数据到AI
第1章　Android数据技术	1
1.1　数据采集	1
1.1.1　数据格式	1
1.1.2　多端协同技巧	3
1.1.3　数据分级方案	5
1.1.4　多进程解决方案	7
1.2　数据绑定	8
1.2.1　控件数据绑定	8
1.2.2　内容曝光框架	9
1.3　数据存储和上报	10
1.3.1　数据加密方案	11
1.3.2　数据存储策略	11
1.3.3　数据上报策略	14
1.4　前端埋点	15
1.4.1　代码埋点	16
1.4.2　声明式埋点	17
1.4.3　无痕埋点	18
第2章　Android下的工具基建进阶	30
2.1　带有反劫持功能的下载SDK	30
2.1.1　分段式多线程网络通信	30
2.1.2　常见的下载劫持	32
2.1.3　下载劫持监控	32
2.1.4　在下载中实现反劫持	33
2.1.5　下载SDK的应用	34
2.2　沉浸式交互组件	34
2.2.1　碎片化导致沉浸式适配困难	34
2.2.2　Android官方沉浸式状态栏方式	35
2.2.3　主流厂商的沉浸式方式简介	36
2.3　基于信息流的图片加载框架	38
2.3.1　图片加载	38
2.3.2　图片缓存机制	39
2.3.3　图片加载过程中遇到的问题	40
2.3.4　基于信息流的图片加载设计	47
2.3.5　基于信息流的图片加载实现	48
2.4　进程保活	49
2.4.1　常规的保活技术	49
2.4.2　保活的悖论	52
2.4.3　系统发展对保活的影响	53
2.5　Android文件系统扫描	53
2.5.1　什么是文件系统	54
2.5.2　文件系统挂载	54
2.5.3　虚拟文件系统层	56
2.5.4　超级块	57
2.5.5　文件扫描算法	58
2.5.6　结合系统机制进行进阶扫描设计	61
2.5.7　扫描实现设计	62
2.5.8　C语言实现的扫描逻辑	63
2.6　高可用前置通道	64
2.6.1　前置通道简介	64
2.6.2　常驻通知栏	64
2.6.3　Android推送能力介绍	65
2.6.4　主流厂商推送SDK适配	65
2.6.5　Android统一推送联盟	67
2.6.6　桌面悬浮窗	67
第3章　Android下的效能进阶	68
3.1　App性能监测实现	68
3.1.1　App性能监测背景	68
3.1.2　App性能监测总体设计	68
3.1.3　启动速度框架	69
3.1.4　内存监测系统	69
3.1.5　页面卡顿解决方案	70
3.1.6　处理App性能问题的经验	72
3.2　App真机检测系统	75
3.2.1　为什么需要真机检测	75
3.2.2　真机检测整体设计	75
3.2.3　Monkey稳定性检测	76
3.2.4　自动化敏感权限检测	77
3.2.5　面向游戏的真机检测	77
3.3　APK信息一站式修改	79
3.3.1　APK文件构成	79
3.3.2　APK签名校验流程	80
3.3.3　V1与V2签名	82
3.3.4　如何打造渠道包	82
第4章　Android工具应用进阶	86
4.1　游戏加速器	86
4.1.1　游戏加速器的使用场景	86
4.1.2　基于性能的加速实现	86
4.1.3　基于流量劫持（VPN）的加速实现	91
4.1.4　基于VPN加速器的整体设计	93
4.2　近场传输	94
4.2.1　近场传输场景	95
4.2.2　近场传输设计	95
4.2.3　Wi-Fi创建	97
4.2.4　Wi-Fi扫描	99
4.2.5　Wi-Fi连接	100
4.2.6　数据传输逻辑处理	102
4.3　微信清理	103
4.3.1　微信清理背景	103
4.3.2　微信清理设计	103
4.3.3　微信清理实现	103
4.4　Google安装器	105
4.4.1　Google安装器背景	105
4.4.2　Google服务框架	106
4.4.3　Google服务框架安装器GSI实现	108
第5章　Android工程构建进阶	111
5.1　工程构建基础	111
5.1.1　应用基本信息	111
5.1.2　编译过程	112
5.2　工程构建进阶	115
5.2.1　多渠道打包	115
5.2.2　渠道信息批量写入	116
5.2.3　资源混淆	116
5.2.4　发布到Maven仓库	118
5.2.5　搭建私有Maven仓库	120
5.3　工程构建定制	123
5.3.1　认识Gradle DSL	123
5.3.2　自定义打包逻辑	125
5.3.3　Freeline秒级编译浅析及接入	129
第6章　移动场景下的容器技术	133
6.1　MoveToDex方案	134
6.1.1　Dalvik虚拟机dex加载机制	134
6.1.2　方法数超过65 536B问题	136
6.1.3　DexOpt LinearAlloc大小限制问题	139
6.1.4　MoveToDex按需加载方案	140
6.2　MultiDex方案优化	141
6.2.1　如何使用MultiDex	141
6.2.2　MultiDex痛点剖析	142
6.2.3　MultiDex方案回归	143
6.2.4　如何优化MultiDex	144
6.3　插件化与组件化	145
6.3.1　插件化与组件化的区别	145
6.3.2　为什么要做容器化	147
6.3.3　容器化技术演进	147
6.3.4　容器化框架的弊端	150
6.3.5　Android P下的容器化技术前进方向	150
6.3.6　App Bundle解析	151
第7章　移动混合前端技术	153
7.1　H5方案	153
7.1.1　轻量化方案——H5应用	153
7.1.2　H5交互与接口实现	154
7.1.3　H5的缺点	155
7.2　Weex和React Native	155
7.2.1　Weex和React Native简介	156
7.2.2　Weex和React Native的对比	156
7.2.3　如何使用	159
7.3　Flutter	164
7.3.1　Flutter简介	165
7.3.2　Dark语言简介	165
7.3.3　Flutter原理浅析	167
第8章　移动场景下的AI技术	170
8.1　移动AI现状	170
8.1.1　背景	170
8.1.2　移动AI落地方案	172
8.2　AI的应用场景	173
8.2.1　图像处理	173
8.2.2　语音处理	175
8.2.3　模式识别	177
8.3　移动AI框架	177
8.3.1　Caffe2	178
8.3.2　TensorFlow Lite	180
8.3.3　Caffe2与TensorFlow Lite的对比	191
8.4　移动AI业务实践	192
8.4.1　接入成本	192
8.4.2　模型的动态更新	192
8.4.3　兼容性与局限性	194
第9章　移动场景下的安全攻防技术	195
9.1　静态分析Android应用	195
9.1.1　使用ShakaApktool反编译APK	196
9.1.2　使用JEB分析Java代码	197
9.1.3　使用IDA Pro静态分析so文件	203
9.2　动态分析Android应用	207
9.2.1　使用IDA Pro动态调试APK	207
9.2.2　使用Xposed Hook Java代码	211
9.2.3　使用Cydia Substrate Hook Java和Native	219
9.2.4　使用Frida Hook Java和Native代码	228
第10章　Android平台下的设计模式进阶	237
10.1　SOLID设计原则	237
10.1.1　单一职责原则	237
10.1.2　开闭原则	239
10.1.3　里氏替换原则	244
10.1.4　接口隔离原则	246
10.1.5　依赖倒置原则	248
10.2　并行程序设计模式	253
10.2.1　Amdahl定律	253
10.2.2　Future模式	255
10.2.3　Master-Worker模式	256
10.2.4　Guarded Suspension模式	259
10.2.5　不变模式	260
10.3　设计模式在Android源码中的应用	261
10.3.1　策略模式	262
10.3.2　适配器模式	262
10.3.3　命令模式	263
10.3.4　建造者模式	263
10.3.5　享元模式	264
10.3.6　备忘录模式	267
10.3.7　观察者模式	269
10.3.8　原型模式	270
10.3.9　代理模式	271
10.3.10  状态模式	274
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android高效进阶：从数据到AI
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android大学教程（第二版）
第1章 Android简介
1．1 简介
1．2 Android――世界领先的移动操作系统
1．3 Android的特点
1．4 Android操作系统
1．4．1 Android 2．2(Froyo)
1．4．2 Android 2．3(Gingerbread)
1．4．3 Android 3．0~3．2(Honeycomb)
1．4．4 Android 4．0~4．0．4(Ice Cream Sandwich)
1．4．5 Android 4．1~4．3(Jelly Bean)
1．4．6 Android 4．4(KitKat)
1．5 从Google Play下载应用
1．6 包
1．7 Android软件开发工具集(SDK)
1．8 面向对象编程： 简短回顾
1．8．1 汽车作为对象
1．8．2 方法与类
1．8．3 实例化
1．8．4 复用
1．8．5 消息与方法调用
1．8．6 属性与实例变量
1．8．7 封装
1．8．8 继承
1．8．9 面向对象的分析与设计(OOAD)
1．9 在AVD中测试Doodlz应用
1．9．1 在Nexus 4 AVD中运行Doodlz应用
1．9．2 在Tablet AVD中运行Doodlz应用
1．9．3 在Android设备上运行Doodlz应用
1．10 创建好的Android应用
1．11 Android开发资源
1．1 2小结
自测题
自测题答案
练习题
第2章 Welcome应用
2．1 简介
2．2 技术概览
2．2．1 Android开发人员工具IDE
2．2．2 文本视图和图像视图
2．2．3 应用的资源
2．2．4 辅助性
2．2．5 国际化
2．3 创建应用
2．3．1 启动Android开发人员工具IDE
2．3．2 创建新工程
2．3．3 New Android Application对话框
2．3．4 配置工程
2．3．5 配置启动图标
2．3．6 Create Activity步骤
2．3．7 Blank Activity步骤
2．4 Android Developer Tools窗口
2．4．1 Package Explorer窗口
2．4．2 编辑器窗口
2．4．3 Outline窗口
2．4．4 应用的资源文件
2．4．5 Graphical Layout编辑器
2．4．6 默认GUI
2．5 用Graphical Layout编辑器构建应用的GUI
2．5．1 给工程添加图像
2．5．2 更改RelativeLayout和TextView的Id属性
2．5．3 配置TextView
2．5．4 添加ImageView， 显示图像
2．6 运行Welcome应用
2．7 为应用增加辅助功能
2．8 使应用国际化
2．9 小结
自测题
自测题答案
练习题
第3章 Tip Calculator应用
3．1 简介
3．2 测试驱动的Tip Calculator应用
3．3 技术概览
3．3．1 Activity类
3．3．2 Activity类的生命周期方法
3．3．3 利用GridLayout和LinearLayout安排视图
3．3．4 利用Graphical Layout编辑器和
Outline、 Properties窗口创建并定制GUI
3．3．5 格式化数字， 表示本地货币和百分比字符串
3．3．6 实现TextWatcher接口， 处理EditText中的文本变化
3．3．7 实现OnSeekBarChangeListener接口， 处理SeekBar中的滑块位置变化
3．3．8 AndroidManifest．xml
3．4 构建应用的GUI
3．4．1 GridLayout简介
3．4．2 创建TipCalculator工程
3．4．3 改成GridLayout布局
3．4．4 添加TextView、 EditText、 SeekBar和LinearLayout
3．4．5 定制视图， 完成设计
3．5 为应用增加功能性
3．6 AndroidManifest．xml
3．7 小结
自测题
自测题答案
练习题
第4章 Twitter Searches应用
4．1 简介
4．2 测试驱动的应用
4．2．1 导入应用并运行
4．2．2 添加一个搜索
4．2．3 查看Twitter搜索的结果
4．2．4 编辑搜索
4．2．5 共享搜索结果
4．2．6 删除搜索记录
4．2．7 滚动浏览保存的搜索记录
4．3 技术概览
4．3．1 ListView
4．3．2 ListActivity
4．3．3 定制ListActivity的布局
4．3．4 ImageButton
4．3．5 SharedPreferences
4．3．6 启动其他Activity的Intent
4．3．7 AlertDialog
4．3．8 AndroidManifest．xml
4．4 构建应用的GUI
4．4．1 创建工程
4．4．2 activity_main．xml概览
4．4．3 添加GridLayout和组件
4．4．4 Graphical Layout编辑器工具栏
4．4．5 ListView项的布局： list_item．xml
4．5 构建MainActivity类
4．5．1 package声明和import声明
4．5．2 扩展ListActivity
4．5．3 MainActivity类的字段
4．5．4 重写Activity方法onCreate
4．5．5 实现saveButton的OnClickListener接口， 保存新搜索或更新后的搜索的匿名内部类
4．5．6 addTaggedSearch方法
4．5．7 实现ListView的OnItemClickListener
接口， 显示搜索结果的匿名内部类
4．5．8 实现ListView的OnItemLongClickListener接口， 共享、 编辑或删除搜索的匿名内部类
4．5．9 shareSearch方法
4．5．10deleteSearch方法
4．6 AndroidManifest．xml
4．7 小结
自测题
自测题答案
练习题
工程练习题
高级工程练习题
第5章 Flag Quiz应用
5．1 简介
5．2 测试驱动的Flag Quiz应用
5．2．1 导入应用并运行
5．2．2 配置Flag Quiz应用
5．2．3 运行Flag Quiz应用
5．3 技术概览
5．3．1 菜单
5．3．2 Fragment
5．3．3 Fragment生命周期方法
5．3．4 管理Fragment
5．3．5 首选项
5．3．6 assets文件夹
5．3．7 资源文件夹
5．3．8 支持不同屏幕尺寸和分辨率
5．3．9 确定屏幕尺寸
5．3．10用于显示消息的Toast
5．3．11使用Handler在未来执行一个Runnable对象
5．3．12将动画用于View
5．3．13为异常消息做日志
5．3．14使用显式Intent启动同一个应用中的另一个Activity
5．3．15 Java数据结构
5．4 构建应用的GUI和资源文件
5．4．1 创建工程
5．4．2 strings．xml与格式化字符串资源
5．4．3 arrays．xml
5．4．4 colors．xml
5．4．5 dimens．xml
5．4．6 activity_settings．xml布局
5．4．7 用于纵向设备的activity_main．xml布局
5．4．8 fragment_quiz．xml布局
5．4．9 用于横向设备的activity_main．xml布局
5．4．10确定应用设置的preferences．xml
5．4．11创建国旗飘扬动画
5．5 MainActivity类
5．5．1 package声明、 import声明与字段
5．5．2 重写Activity方法onCreate
5．5．3 重写Activity方法onStart
5．5．4 重写Activity方法onCreateOptionsMenu
5．5．5 重写Activity方法onOptionsItemSelected
5．5．6 实现OnSharedPreferenceChangeListener的匿名内部类
5．6 QuizFragment类
5．6．1 package声明和import声明
5．6．2 字段
5．6．3 重写Fragment方法onCreateView
5．6．4 updateGuessRows方法
5．6．5 updateRegions方法
5．6．6 resetQuiz方法
5．6．7 loadNextFlag方法
5．6．8 getCountryName方法
5．6．9 实现OnClickListener的匿名内部类
5．6．10disableButtons方法
5．7 SettingsFragment类
5．8 SettingsActivity类
5．9 AndroidManifest．xml
5．10小结
自测题
自测题答案
练习题
工程练习题
第6章 Cannon Game应用
6．1 简介
6．2 测试驱动的Cannon Game应用
6．3 技术概览
6．3．1 将定制的View与布局绑定
6．3．2 使用raw资源文件夹
6．3．3 Activity和Fragment的生命周期方法
6．3．4 重写View方法onTouchEvent
6．3．5 用SoundPool和AudioManager添加声音
6．3．6 用Thread、 SurfaceView和
SurfaceHolder实现逐帧动画
6．3．7 简单的冲突检测
6．3．8 用Paint和Canvas绘制图形
6．4 构建应用的GUI和资源文件
6．4．1 创建工程
6．4．2 strings．xml
6．4．3 fragment_game．xml
6．4．4 activity_main．xml
6．4．5 为应用添加声音
6．5 管理线端点的Line类
6．6 Activity的MainActivity子类
6．7 Fragment的CannonGameFragment子类
6．8 View的CannonView子类
6．8．1 package声明和import声明
6．8．2 常量与实例变量
6．8．3 构造方法
6．8．4 重写View方法onSizeChanged
6．8．5 newGame方法
6．8．6 updatePositions方法
6．8．7 fireCannonball方法
6．8．8 alignCannon方法
6．8．9 drawGameElements方法
6．8．10showGameOverDialog方法
6．8．11stopGame方法和releaseResources方法
6．8．12实现SurfaceHolder．Callback方法
6．8．13重写View方法onTouchEvent
6．8．14CannonThread： 使用Thread实现游戏的循环
6．9 小结
自测题
自测题答案
练习题
第7章 Doodlz应用
7．1 简介
7．2 技术概览
7．2．1 使用SensorManager监听加速计事件
7．2．2 定制的DialogFragment
7．2．3 用Canvas和Bitmap画图
7．2．4 处理多点触事件并在Path中保存线信息
7．2．5 Android 4．4的沉浸模式
7．2．6 GestureDetector与SimpleOnGestureListener
7．2．7 将绘制的图像保存到设备的图片库中
7．2．8 Android 4．4的打印功能及Android Support Library的PrintHelper类
7．3 构建应用的GUI和资源文件
7．3．1 创建工程
7．3．2 strings．xml
7．3．3 dimens．xml
7．3．4 DoodleFragment的菜单
7．3．5 MainActivity的activity_main．xml布局
7．3．6 DoodleFragment的fragment_doodle．xml布局
7．3．7 ColorDialogFragment的fragment_color．xml布局
7．3．8 LineWidthDialogFragment的fragment_line_width．xml布局
7．3．9 增加EraseImageDialogFragment类
7．4 MainActivity类
7．5 DoodleFragment类
7．6 DoodleView类
7．7 ColorDialogFragment类
7．8 LineWidthDialogFragment类
7．9 EraseImageDialogFragment类
7．10小结
自测题
自测题答案
练习题
第8章 Address Book应用
8．1 简介
8．2 测试驱动的Address Book应用
8．3 技术概览
8．3．1 用FragmentTransaction显示Fragment
8．3．2 在Fragment与宿主Activity之间交换数据
8．3．3 onSaveInstanceState方法
8．3．4 定义样式并将它们应用于GUI组件
8．3．5 为TextView指定背景
8．3．6 扩展ListFragment类， 创建包含ListView的Fragment
8．3．7 操作SQLite数据库
8．3．8 在GUI线程之外用AsyncTask执行数据库操作
8．4 构建应用的GUI和资源文件
8．4．1 创建工程
8．4．2 创建应用的类
8．4．3 strings．xml
8．4．4 styles．xml
8．4．5 textview_border．xml
8．4．6 MainActivity的布局： activity_main．xml
8．4．7 DetailsFragment的布局： fragment_details．xml
8．4．8 AddEditFragment的布局： fragment_add_edit．xml
8．4．9 定义Fragment的菜单
8．5 MainActivity类
8．6 ContactListFragment类
8．7 AddEditFragment类
8．8 DetailsFragment类
8．9 DatabaseConnector实用工具类
8．10小结
自测题
自测题答案
练习题
第9章 Google Play及应用的商业问题
9．1 简介
9．2 为发布应用做准备
9．2．1 测试应用
9．2．2 最终用户许可协议
9．2．3 图标与标签
9．2．4 为应用定义版本
9．2．5 为已付费应用提供访问控制授权
9．2．6 弄乱源代码
9．2．7 获取密钥， 对应用进行数字签名
9．2．8 屏幕截图
9．2．9 用于推广应用的视频
9．3 为应用定价： 免费或收费
9．3．1 付费应用
9．3．2 免费应用
9．4 通过应用内广告使应用货币化
9．5 货币化应用： 通过应用内计费功能销售虚拟商品
9．6 注册Google Play
9．7 设置Google Wallet商家账号
9．8 将应用上载到Google Play
9．9 在应用里启动Play Store
9．10管理Google Play中的应用
9．11其他的Android应用市场
9．12其他流行的移动应用平台
9．13应用的市场推广
9．14小结
与Deitel ＆ Associates公司保持联系
自测题
自测题答案
练习题
附录A Java程序入门
附录B 类、 对象、 方法和字符串简介
附录C 控制语句
附录D 方法： 深入探究
附录E 数组和ArrayList
附录F 类与对象： 深入探究
附录G 面向对象编程： 继承与多态
附录H 异常处理： 深入探究
附录I GUI组件与事件处理
附录J 其他的Java主题
附录K 运算符优先级表
附录L 基本类型
索引
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android大学教程（第二版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>SQLite权威指南
译者序 iv
推荐序1 vi
推荐序2 viii
推荐序3 ix
关于作者 xx
关于技术评审 xxi
致谢 xxii
简介 xxiii
第1章 sqlite介绍 1
嵌入式数据库 1
开发者的数据库 2
管理员的数据库 4
sqlite历史 4
谁在使用sqlite 5
体系结构 6
接口 6
编译器 7
虚拟机 7
后端 9
.工具和测试代码 9
sqlite的特性和设计理念 10
零配置 10
移植性 10
紧凑性 11
简单性 11
灵活性 12
自由授权 12
可靠性 12
易用性 12
性能和限制 13
本书面向的读者 16
本书的组织结构 17
附加说明 18
总结 19
第2章 入门 21
何处获取sqlite 21
windows上的sqlite 22
获得命令行程序 22
获取sqlite动态链接库（dll) 25
在windows上编译sqlite源代码 26
使用微软visual c++构建sqlite dll 29
用visual c++构建动态链接sqlite的客户端 31
用mingw构建sqlite 32
linux、苹果mac os x以及其他posix系统上的sqlite 34
二进制和包 34
从源代码编译 35
命令行程序 37
shell模式下的clp 37
命令行模式的clp 39
数据库管理 40
创建数据库 40
获得数据库的schema信息 42
导出数据 43
导入数据 44
格式化 45
导出带分隔符的数据 46
执行无人值守维护 46
备份数据库 47
获得数据库文件的信息 48
其他sqlite工具 50
总结 51
第3章 sqlite中的sql 53
数据库示例 53
安装 55
运行示例 55
语法 56
命令 58
常量 58
关键字和标识符 59
注释 59
创建数据库 59
创建表 60
修改表 61
数据库查询 62
关系操作 62
select命令与操作管道 63
过滤 66
限定和排序 71
函数（function)和聚合（aggregate) 73
分组（grouping) 74
去掉重复 79
多表连接 80
名称和别名 85
子查询 87
复合查询 89
条件结果 91
处理sqlite中的null 93
总结 95
第4章 sqlite中的高级sql 97
修改数据 97
插入记录 97
更新记录 101
删除记录 102
数据完整性 102
实体完整性 103
域完整性 108
存储类 113
视图 116
索引 118
触发器 120
事务 124
事务的范围 124
冲突解决 125
数据库锁 128
死锁 129
事务的类型 130
数据库管理 131
附加数据库 131
数据库清理 133
数据库配置 133
系统目录 137
查看查询计划 137
总结 138
第5章 sqlite设计与概念 139
api 140
主要数据结构 140
连接和语句 141
核心api 142
可操作的控制 150
使用线程 151
扩展api 151
创建用户自定义函数 151
创建用户自定义聚合 152
创建用户自定义排序 153
事务 153
事务生命周期 154
锁状态 154
读事务 156
写事务 157
调整页面缓存 160
过渡到独占状态 161
调整页面缓存 161
等待锁 162
繁忙处理 162
使用恰当的事务 164
代码 165
使用多个连接 165
finalize()函数的重要性 167
共享缓存模式 168
总结 168
第6章 核心c api 171
查询封装 171
连接与断开连接 172
执行查询 174
获取表查询 178
查询准备 179
编译 180
执行 181
完成与重置 182
获取记录 184
获取字段信息 184
获取字段值 186
一个实例 187
查询参数化 189
参数编号 192
参数命名 192
tcl参数 193
错误与异常 194
错误处理 194
繁忙情况处理 196
模式改变处理 197
操作控制 198
提交钩子 198
回滚钩子 199
更新钩子 199
授权函数 200
线程 210
共享缓存模型 210
线程与内存管理 213
总结 214
第7章 扩展c api 215
api 216
注册函数 217
步骤函数 218
返回值 219
函数 220
返回值 222
数组与内存清理器 223
错误处理 224
返回输入值 224
聚合 225
注册函数 226
实例 226
排序规则 230
排序法定义 231
简单例子 234
按需排序 237
总结 238
第8章 语言扩展 239
选择一种扩展语言 240
perl 242
安装 242
连接 243
查询处理 243
参数绑定 245
用户自定义函数 246
聚合 247
python 248
安装 248
连接 249
查询处理 249
参数绑定 251
用户自定义函数 253
聚合 253
apsw（另一种python接口） 254
ruby 255
安装 255
连接 256
查询处理 256
参数绑定 257
用户自定义函数 259
java 260
安装 260
连接 261
查询处理 262
自定义函数和聚合 264
jdbc 266
tcl 268
安装 268
连接 268
查询处理 269
用户自定义函数 272
php 272
安装 273
连接 273
查询 274
用户自定义函数和聚合 276
总结 278
第9章 ios开发中的sqlite 279
sqlite ios开发的先决条件 279
注册成为apple软件开发者 280
下载并安装xcode和ios sdk 280
其他开发环境 283
建立iseinfeld ios sqlite应用 284
第一步：创建一个新的xcode工程 285
第二步：将sqlite框架添加到工程 285
第三步：准备foods数据库 287
第四步：为食品数据创建类 289
第五步：访问和查询sqlite数据库 293
第六步：最后包装和配置iseinfeld应用程序 297
运行iseinfeld 297
ios中处理大型sqlite数据库 299
总结 300
第10章 android开发中的sqlite 301
sqlite android开发的先决条件 301
检查先决条件和jdk 302
下载和安装android sdk starter包 302
下载和安装android开发工具 303
添加android平台和组件 304
android sqlite类和接口 306
使用基础帮助类：sqliteopenhelper 307
sqlitedatabase类 308
在实际中应用sqliteopenhelper和sqlitedatabase 312
使用sqlitequerybuilder类查询sqlite数据库 315
搭建seinfeld android sqlite应用程序 317
创建新的android工程 318
将seinfeld sqlite数据库添加到工程 319
查询food数据库表 319
定义用户接口 320
连接数据和用户接口 321
查看完成的seinfeld应用程序 322
sqlite android应用程序的注意事项 322
android数据库的备份 323
android系统处理大型sqlite数据库 324
总结 324
第11章 sqlite内部机制及新特性 325
b-tree和pager模块 325
数据库文件格式 325
b-tree api 330
显示类型、存储类以及亲缘性介绍 332
显示类型 333
类型亲缘性 335
亲缘性和存储 336
执行中的亲缘性 336
预写日志 340
wal工作原理 341
激活和配置wal 342
wal的优缺点 343
启用wal时sqlite数据库的操作问题 343
总结 345
索引 347
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>SQLite权威指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>App 后台开发运维和架构实践
推荐序 .. 3
前言  5
致谢  7
目录  8
第1 章 App 后台入门 .. 16
1.1 App 后台的功能  16
1.2 App 后台架构 . 17
1.3 App 和App 后台的通信 .. 19
1.4 App 后台和Web 后端的区别 .. 22
1.5 选择服务器 . 23
1.6 选择编程语言  24
1.7 快速入门新技术 .. 25
1.7.1 思维模式  25
1.7.2 4 种快速入门新技术的方法 .. 25
1.8 App 是怎样炼成的 .. 26
1.8.1 项目启动阶段 . 26
1.8.2 研发阶段  28
1.8.3 测试阶段  29
1.8.4 正式推出阶段 . 29
1.9 最适合App 的开发模式——敏捷开发 .. 30
1.9.1 Sprint 计划会议 . 31
1.9.2 日常开发  32
1.9.3 每日例会  33
1.9.4 测试和修复Bug  33
1.9.5 评审会议  34
1.9.6 回顾会议  34
1.9.7 及时反馈  34
1.9.8 总结.. 34
第2 章 App 后台基础技术 . 35
2.1 从App 业务逻辑中提炼API 接口 . 35
2.1.1 业务逻辑思维导图 .. 36
2.1.2 功能—业务逻辑思维导图 .. 37
2.1.3 基本功能模块关系 .. 40
2.1.4 功能模块接口UML（设计出API）  41
2.1.5 编写在线API 测试文档 42
2.1.6 设计稿标注API  45
2.2 设计API 的要点 .. 46
2.3 如何选择合适的数据库产品 . 50
2.3.1 Redis，MongoDB，MySQL 读写数据的区别  50
2.3.2 Redis，MongoDB，MySQL 查找数据的区别  50
2.3.3 Redis，MongoDB，MySQL 适用场景  51
2.4 如何选择消息队列软件 .. 52
2.4.1 为什么要用消息队列？  52
2.4.2 消息队列的工作流程 . 53
2.4.3 常见的一些消息队列产品 .. 54
2.5 使用分布式服务实现业务的复用 .. 54
2.5.1 巨无霸系统的危害 .. 55
2.5.2 远程服务的优点  56
2.5.3 远程服务的实现  56
2.6 搜索技术入门  59
2.6.1 一个简单的搜索例子 . 59
2.6.2 搜索技术的基本原理 . 60
2.6.3 常见的开源搜索软件介绍 .. 62
2.7 定时任务 .. 65
2.7.1 Linux 定时任务Crontab  65
2.7.2 在后台轻松管理各种各样的定时任务  66
第3 章 App 后台核心技术 . 68
3.1 用户验证方案  68
3.1.1 使用HTTPS 协议 . 68
3.1.2 基本的用户登录方案 . 69
3.2 App 通信安全 . 72
3.2.1 URL 签名 .. 72
3.2.2 AES 对称加密  74
3.2.3 更进一步的通信安全 . 77
3.3 短信服务 .. 78
3.3.1 App 后台发送短信简介  78
3.3.2 选择短信平台 . 78
3.3.3 建立可靠的短信服务 . 79
3.4 处理表情的一些技巧  80
3.4.1 表情在MySQL 的存储 . 80
3.4.2 当文字中夹带表情的处理 .. 80
3.4.3 Openfire 中发送表情引起连接断开的问题 .. 81
3.5 高效更新数据  82
3.5.1 内容的推拉 .. 83
3.5.2 数据增量更新策略 .. 84
3.6 图片处理 .. 90
3.7 视频处理 .. 91
3.7.1 FFmpeg 简介 .. 91
3.7.2 后台调用FFmpeg 的功能  92
3.8 获取APK 和IPA 文件里的资源 . 94
3.8.1 Android 的APK 文件 . 94
3.8.2 iOS 的IPA 文件  96
3.9 文件系统 .. 98
3.9.1 文件云存储服务  99
3.9.2 架设文件系统 . 99
3.10 ELK 日志分析平台  101
3.10.1 基本模块 .. 101
3.10.2 日志分析流程  102
3.11 Docker 构建一致的开发环境 .. 103
3.11.1 Docker 原理  103
3.11.2 搭建一致的开发环境  104
第4 章 Linux——App 后台应用最广泛的系统 .. 107
4.1 基本的系统优化  107
4.1.1 开机自启动服务优化 .. 107
4.1.2 增大文件描述符 . 109
4.2 常用的命令 .. 110
4.2.1 全面了解系统资源情况——top  110
4.2.2 显示进程状态——ps .. 115
4.2.3 查看网络相关信息——netstat .. 116
4.2.4 查看某个进程打开的所有文件——lsof .. 118
4.2.5 跟踪数据到达主机所经路由——traceroute .. 119
4.2.6 文件下载/上传工具——“ssh secure shell client”和“lrzsz” . 119
4.2.7 查看程序的依赖库——LD_DEBUG . 121
4.2.8 进程管理利器——superivisor  122
4.3 故障案例分析 . 125
第5 章 Nginx——App 后台HTTP 服务的利器 . 126
5.1 简介 . 126
5.2 基本原理  127
5.2.1 工作模型 . 127
5.2.2 进程解析 . 128
5.3 常用配置  129
5.3.1 Nginx 的全局配置 . 130
5.3.2 event 配置 .. 130
5.3.3 http 配置 .. 131
5.3.4 负载均衡配置 .. 133
5.3.5 server 虚拟主机配置  134
5.3.6 location 配置 . 134
5.3.7 HTTPS 的配置 . 135
5.3.8 下载App 的配置  136
5.3.9 生产环境中修改配置的良好习惯  136
5.4 性能统计  136
5.5 实现负载均衡的方案 . 137
5.6 用Nginx 处理业务逻辑 . 139
第6 章 MySQL——App 后台最常用的数据库 .. 140
6.1 基本架构  140
6.2 选择版本  141
6.3 配置文件详解 . 142
6.4 软件优化  144
6.4.1 正确使用MyISAM和InnoDB 存储引擎  144
6.4.2 正确使用索引 .. 145
6.4.3 避免使用select *  146
6.4.4 字段尽可能地设置为NOT NULL .. 146
6.5 硬件优化  147
6.5.1 增加物理内存 .. 147
6.5.2 增加应用缓存 .. 147
6.5.3 用固态硬盘代替机械硬盘  148
6.5.4 SSD 硬盘+SATA 硬盘混合存储方案  149
6.6 架构优化  149
6.6.1 分表 150
6.6.2 读写分离 . 151
6.6.3 分库 153
6.7 SQL 慢查询分析  156
6.8 云数据库简介 . 157
6.9 灵活的存储结构  158
6.10 故障排除案例 .. 159
第7 章 Redis——App 后台高性能的缓存系统 . 160
7.1 Redis 简介 . 160
7.2 Redis 的常用数据结构及应用场景 . 161
7.2.1 string——存储简单的数据 .. 162
7.2.2 hash——存储对象的数据  163
7.2.3 list——模拟队列操作 . 165
7.2.4 set——无序且不重复的元素集合 .. 167
7.2.5 sorted set——有序且不重复的元素集合 . 168
7.3 内存优化  170
7.3.1 监控内存使用的状况 .. 170
7.3.2 优化存储结构 .. 170
7.3.3 限制使用的最大内存 .. 172
7.3.4 设置过期时间 .. 172
7.4 集群 . 174
7.4.1 客户端分片  174
7.4.2 Twemproxy  175
7.4.3 Codis . 176
7.4.4 Redis 3.0 集群 .. 179
7.4.5 云服务器上的集群服务 . 180
7.5 持久化 . 180
7.5.1 RDB .. 181
7.5.2 AOF 182
7.6 故障排除案例 . 184
第8 章 MongoDB——App 后台新兴的数据库 .. 185
8.1 简介 . 185
8.2 核心机制解析 . 186
8.2.1 MMAP（内存文件映射）  186
8.2.2 Journal 日志 .. 187
8.3 入门 . 187
8.3.1 基本操作 . 188
8.3.2 数组操作 . 190
8.3.3 实例演示MySQL 和MongoDB 设计数据库的区别  191
8.4 高可用集群 .. 195
8.4.1 主从 195
8.4.2 副本集 .. 196
8.4.3 分片 198
8.5 LBS——地理位置查询 . 200
8.6 MongoDB 3.0 版本的改进  205
8.6.1 灵活的存储架构 . 206
8.6.2 性能提升7~10 倍 .. 206
8.6.3 存储空间最多减少80%  207
8.6.4 运维成本最多降低95%  207
第9 章 App 后台架构剖析 .. 208
9.1 聊天App 后台架构 .. 208
9.1.1 移动互联网的网络特性 . 209
9.1.2 协议 212
9.1.3 整体架构 . 218
9.2 社交App 后台架构 .. 221
9.2.1 基本表结构  222
9.2.2 推拉模式 . 223
9.2.3 数据库架构的演进  225
9.2.4 缓存架构的演进 . 229
9.3 LBS App 后台架构 . 234
9.3.1 地理坐标详解 .. 235
9.3.2 查找附近的人 .. 236
9.3.3 基于MongoDB 的LBS 后台架构演进 . 240
9.4 推送服务器后台架构 . 242
9.4.1 Android 推送  242
9.4.2 iOS 推送 .. 248
9.5 获得更多App 后台架构资料 . 252
第10 章 App 后台架构的演进  255
10.1 架构的核心要素 . 255
10.1.1 高性能  256
10.1.2 高可用  258
10.1.3 可伸缩  261
10.1.4 可扩展  262
10.1.5 安全性  262
10.2 架构选型的要点 . 262
10.2.1 用成熟稳定的开源软件 .. 263
10.2.2 尽可能使用云服务 . 264
10.3 架构的演进  268
10.3.1 单机部署 .. 269
10.3.2 分布式部署 . 275
10.3.3 服务化  277
10.4 架构的特点  279
10.4.1 每个App 的后台架构不会完全一样 .. 279
10.4.2 架构的演进是由业务驱动的  279
10.4.3 架构不是为了炫耀技术 .. 280
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>App 后台开发运维和架构实践
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>人人都玩开心网
第一篇 搭建开心网的基本框架
第1章 开发梦缘起开心网 2
1.1 异军突起：开心网 2
1.2 风靡网络的开心网是如何炼制的 3
1.2.1 开心网的引爆点 3
1.2.2 开心网的主要功能 3
1.3 编程高手的预言：人人都有开心网 5
1.3.1 自己搭建开心网：绚丽页面先睹为快 5
1.3.2 万丈高楼平地起：技术储备 6
1.3.3 开心网的安装和运行 7
1.4 本章小结 10
第2章 SSH整合铸就进入开心网的钥匙：用户注册 11
2.1 MVC框架的王者：Struts 2 11
2.1.1 Struts 2与MVC模式 11
2.1.2 Struts 2最新版的下载与安装 13
2.1.3 通过一个计算加减法的Web程序来体验MVC模式的好处 13
2.2 绝不重造轮子：Spring 17
2.2.1 Spring与IOC模式 17
2.2.2 Spring最新版的下载与安装 18
2.2.3 Struts 2和Spring整合的原理 19
.2.2.4 用整合Struts 2和Spring的方式重新实现计算加减法的Web程序 21
2.3 数据持久化的最佳利器：Hibernate 25
2.3.1 Hibernate最新版的下载与安装 25
2.3.2 做一个程序来试一下Hibernate 26
2.4 三位一体：SSH整合 29
2.4.1 整合方法一：直接获得ApplicationContext对象 29
2.4.2 整合方法二：由Spring创建Action类的对象实例 32
2.4.3 整合方法三：自动装配Action类的属性 34
2.5 利用SSH整合技术实现基于四层结构的用户注册系统 34
2.5.1 编写映射用户表的实体Bean 34
2.5.2 编写数据访问层（DAO）组件 35
2.5.3 编写业务逻辑层（Service）组件 36
2.5.4 编写RegisterAction类 37
2.5.5 使用Struts 2标签生成用户注册页面 37
2.6 本章小结 38
第3章 在用户注册和登录功能中引入Ext JS技术 39
3.1 用户注册登录系统的页面及所使用的Ext JS组件 39
3.1.1 经过Ext JS渲染的用户注册页面 39
3.1.2 经过Ext JS渲染的用户登录页面 40
3.1.3 注册和登录页面中所使用的Ext JS组件 40
3.1.4 注册和登录页面中的对话框和布局 41
3.2 用Ext JS框架实现的绚丽页面 42
3.3 揭开Ext JS的神秘面纱 43
3.3.1 下载和安装Ext JS框架 43
3.3.2 编写第一个Ext JS程序 44
3.3.3 页面文字的国际化 45
3.3.4 查看Ext JS API 46
3.3.5 查看本地的Ext JS官方文档和例子 46
3.4 Ext JS的事件 47
3.4.1 注册和删除浏览器事件 47
3.4.2 Ext JS的基类：Ext.util.Observable 48
3.5 Ext JS中的核心组件 51
3.5.1 所有可视化组件的基类：Ext.Component 51
3.5.2 可设置大小和位置的基类：Ext.BoxComponent 53
3.5.3 容器组件：Ext.Container 54
3.5.4 按钮组件：Ext.Button 55
3.5.5 面板组件：Ext.Panel 56
3.5.6 承载注册和登录页面的组件：Ext.Window 57
3.6 对话框 58
3.6.1 提醒（Alert）对话框 59
3.6.2 确认（Confirm）对话框 59
3.6.3 输入（Prompt）对话框 60
3.6.4 等待（Wait）对话框 60
3.6.5 进度（Progress）对话框 61
3.6.6 多行输入对话框 62
3.6.7 “是（Yes）/否（No）/取消（Cancel）”对话框 62
3.6.8 显示带图像的对话框 63
3.7 表单组件 64
3.7.1 一切表单组件的载体：Ext.form.FormPanel 64
3.7.2 文本输入组件：Ext.form.TextField 65
3.7.3 多行文本输入组件：Ext.form.TextArea 66
3.7.4 提交信息编码的隐藏域组件：Ext.form.Hidden 66
3.7.5 显示年、月、日的组件：Ext.form.DateField 67
3.7.6 显示时、分的组件：Ext.form.TimeField 68
3.7.7 下拉列表框组件：Ext.form.ComboBox 68
3.7.8 下拉输入框组件：Ext.form.TriggerField 69
3.8 让组件按照自己的意志进行排列：组件布局 70
3.8.1 垂直表单布局：FormLayout 71
3.8.2 水平列布局：ColumnLayout 72
3.8.3 Ext.form.FieldSet在布局中的应用 73
3.9 项目实战：设计注册系统的页面 74
3.9.1 对基本信息布局 74
3.9.2 对输入个人信息的组件布局 75
3.9.3 对进行校验码验证的组件布局 77
3.10 项目实战：重新设计服务端组件 78
3.10.1 修改User类 78
3.10.2 重新实现数据访问层 79
3.10.3 重新实现业务逻辑层 80
3.11 项目实战：与服务端通信 82
3.11.1 与服务端同步：远程装载数据 82
3.11.2 在用户注册系统中动态装载更复杂的数据 83
3.11.3 在用户注册系统中提交表单 87
3.12 项目实战：用户登录系统的实现 87
3.13 本章小结 88
第4章 更完美的改进：扩展用户注册和登录系统 89
4.1 先睹为快：改进后的用户注册和登录页面 89
4.1.1 增加了用户校验功能的用户注册页面 89
4.1.2 新的用户登录页面：用4种方式保存登录状态 90
4.2 防患于未然：客户端校验 90
4.2.1 无论如何要有一个值：非空校验 90
4.2.2 控制输入的字符串：最大长度和最小长度校验 91
4.2.3 只能输入数字：NumberField组件 92
4.2.4 使用统一的标准：Ext JS中的内嵌校验规则 93
4.2.5 更灵活的校验：正则表达式校验 95
4.2.6 随心所欲的校验：自定义校验器 95
4.3 项目实战：为用户注册和登录系统添加客户端校验功能 96
4.4 项目实战：为用户注册系统增加服务端校验 98
4.4.1 复制客户端的校验 98
4.4.2 定义校验未通过的错误信息格式 98
4.4.3 编写删除回车换行符的JSP标签 99
4.5 项目实战：为用户登录系统增加保存登录状态的功能 100
4.5.1 在用户登录页面添加选择登录状态的ComboBox 101
4.5.2 保存用户登录状态 101
4.5.3 动态生成显示登录页面的JavaScript脚本 102
4.6 本章小结 103
第5章 开心桌面：完全模拟Windows桌面的开心网 104
5.1 模拟Windows XP桌面效果的开心网 104
5.2 似曾相识：模拟Windows桌面 104
5.2.1 Ext JS自带的模拟桌面的例子 105
5.2.2 工欲善其事，必先利其器：Ext JS的桌面组件 106
5.2.3 项目实战：实现类似Windows桌面的开心网 110
5.3 项目实战：将图标摆放在桌面上 111
5.3.1 编写描述动态图标的Java类 111
5.3.2 写入默认的桌面图标设置信息 112
5.3.3 动态生成图标HTML代码 115
5.3.4 已登录用户的桌面图标 118
5.3.5 Ext JS中的拖动技术 121
5.4 项目实战：控制面板 123
5.4.1 锁定与解锁图标 123
5.4.2 重新排列桌面图标 125
5.4.3 保存桌面图标状态 125
5.5 项目实战：控制桌面图标 127
5.6 本章小结 130
第二篇 资源与共享
第6章 电子相册：留住美好瞬间 132
6.1 将美丽留在人间：电子相册的完美展现 132
6.2 抽象的艺术：Struts 2的文件上传 133
6.2.1 重要的文件上传组件：Commons-FileUpload 133
6.2.2 实例：使用Commons-FileUpload组件上传多个文件 133
6.2.3 抽象和统一：文件上传的Struts 2沙盒（SandBox） 136
6.2.4 实例：使用Struts 2上传多个文件 137
6.3 绚丽多彩的Ext JS文件上传组件 140
6.3.1 简洁的文件上传组件 140
6.3.2 实例：使用FileUploadField组件上传多个文件 140
6.3.3 实例：更完美的文件上传组件 143
6.4 项目实战：电子相册中的图像上传功能 145
6.4.1 处理相册的数据访问层组件 145
6.4.2 用于创建相册的业务逻辑层组件 147
6.4.3 保存上传图像记录的数据访问层组件 148
6.4.4 处理上传图像数据的业务逻辑层组件 151
6.4.5 添加相册的Action类 152
6.4.6 获得指定用户的所有相册的Action类 153
6.4.7 处理上传图像的Action类 154
6.4.8 电子相册在开心桌面上的图标和菜单 157
6.4.9 使用Ext JS技术实现图像上传页面 159
6.5 项目实战：电子相册的照片浏览功能 162
6.5.1 获得相册中照片列表的Action类 162
6.5.2 传输照片数据的Action类 164
6.5.3 用于删除指定照片的Action类 165
6.5.4 我的照片我做主：照片列表 166
6.6 本章小结 171
第7章 好友管理：让我们成为朋友吧 172
7.1 信息共享的第一步：成为朋友 172
7.2 数据的二维表示法：表格组件 172
7.2.1 创建第一个表格 173
7.2.2 阻止移动列和改变列的宽度 175
7.2.3 自定义Grid的列宽度 176
7.2.4 按列进行排序 177
7.2.5 在单元格中显示彩色的文字、图、按钮及其他组件 177
7.2.6 显示复选框 180
7.2.7 自动显示行号 181
7.3 表格分页 182
7.3.1 为表格组件添加分页工具栏 183
7.3.2 从服务端获得分页数据 184
7.3.3 将分页工具栏显示在网格组件的顶部 186
7.3.4 滑动风格的分页工具栏 187
7.3.5 带进度条的分页工具栏 189
7.4 可编辑的表格 190
7.4.1 第一个可编辑的表格 190
7.4.2 向表格添加新行 191
7.4.3 保存数据 193
7.5 属性表格组件：PropertyGrid 194
7.5.1 第一个属性表格组件 194
7.5.2 不对属性列排序 195
7.5.3 自定义编辑器 196
7.6 表格分组 197
7.6.1 对记录进行分组 197
7.6.2 使用代码控制分组的展开和折叠 198
7.7 项目实战：编写服务端代码 200
7.7.1 设计数据表 200
7.7.2 表示好友的实体Bean 200
7.7.3 数据访问层：添加、删除和获得好友 201
7.7.4 业务逻辑层：添加、删除和获得好友 202
7.7.5 数据访问层和业务访问层组件：获得好友的照片 204
7.7.6 添加好友的Action类 204
7.7.7 删除好友的Action类 206
7.7.8 获得好友E-mail的Action类 207
7.7.9 获得好友照片的Action类 208
7.8 项目实战：编写客户端代码 209
7.8.1 添加桌面图标和开心菜单项 209
7.8.2 创建好友列表窗口 210
7.8.3 添加好友 212
7.8.4 删除好友 213
7.8.5 显示好友的照片 213
7.9 本章小结 215
第8章 日记管理：记录每天发生的点点滴滴 216
8.1 每天都会有新鲜事发生：写日记吧！ 216
8.2 Ext JS中的窗口 216
8.2.1 建立第一个窗口 217
8.2.2 为窗口增加最大化和最小化按钮 219
8.2.3 隐藏和销毁窗口 221
8.2.4 阻止窗口移出边界 222
8.2.5 向窗口添加按钮 223
8.2.6 窗口分组 224
8.2.7 窗口布局 225
8.3 布局 227
8.3.1 从最简单的布局开始：FitLayout 228
8.3.2 边框布局：BorderLayout 231
8.3.3 拖动和限制BorderLayout布局的区域 233
8.3.4 折叠和展开子区域 234
8.3.5 伸缩菜单布局：Accordion 237
8.3.6 操作向导布局：CardLayout 238
8.3.7 操作位置和大小比例的布局：AnchorLayout 241
8.3.8 用于绝对定位的布局：AbsoluteLayout 243
8.3.9 表单布局：FormLayout 244
8.3.10 列布局：ColumnLayout 245
8.3.11 表格布局：TableLayout 247
8.4 项目实战：编写服务端代码 248
8.4.1 设计数据库 249
8.4.2 表示每一篇日记的实体Bean 249
8.4.3 数据访问层组件 250
8.4.4 业务逻辑层组件 253
8.4.5 添加日记的AddDiaryAction类 256
8.4.6 删除日记的DeleteDiaryAction类 258
8.4.7 修改日记的EditDiaryAction类 258
8.4.8 获得日记内容的GetDiaryAction类 259
8.4.9 获得日记列表的GetDiariesAction类 260
8.5 项目实战：编写客户端代码 262
8.5.1 添加桌面图标和开心菜单项 262
8.5.2 创建日记主页面 263
8.5.3 获得当前用户的日记列表 264
8.5.4 添加增加日记的动作 267
8.5.5 编辑和删除日记 269
8.5.6 查看好友的日记 270
8.6 本章小结 271
第9章 网络硬盘：重要资料的保险柜 272
9.1 不怕一万，就怕万一：备份重要文件 272
9.2 TreePanel组件的基本应用 272
9.2.1 创建一棵简单的树 272
9.2.2 为树添加子结点 274
9.2.3 读取服务端的JSON数据 275
9.2.4 读取本地的JSON数据 277
9.2.5 从Servlet中获得JSON数据 279
9.2.6 树的事件 281
9.2.7 右键菜单 283
9.2.8 修改结点的默认图标 284
9.2.9 用对话框显示结点文本 285
9.2.10 在结点上显示提示信息 286
9.2.11 将结点设置成超链接 287
9.2.12 修改树结点的名称 288
9.3 拖放树结点 289
9.3.1 结点拖放的位置 289
9.3.2 使叶子结点可以追加 291
9.3.3 在树之间拖放结点 292
9.4 过滤树中的结点 293
9.5 对树结点进行排序 294
9.6 工具栏和菜单 295
9.6.1 简单菜单 295
9.6.2 添加下拉菜单 296
9.6.3 多级菜单 298
9.6.4 向菜单中添加分隔线 299
9.7 高级菜单 301
9.7.1 多选和单选菜单 301
9.7.2 日期和颜色菜单 303
9.7.3 多级的右键菜单 304
9.8 工具栏组件 306
9.8.1 Ext.Toolbar.Button组件 306
9.8.2 Ext.Toolbar.TextMenu组件 307
9.8.3 Ext.Toolbar.Spacer组件 307
9.8.4 Ext.Toolbar.Separator组件 307
9.8.5 Ext.Toolbar.Fill组件 308
9.8.6 Ext.Toolbar.SplitButton组件 309
9.8.7 在工具栏上添加HTML标签 310
9.8.8 在工具栏上添加输入组件 311
9.9 项目实战：编写网络硬盘服务端程序 312
9.9.1 设计数据库 312
9.9.2 表示目录的实体Bean 313
9.9.3 表示文件的实体Bean 313
9.9.4 数据访问层组件：DirDAO 314
9.9.5 数据访问层组件：FileDAO 316
9.9.6 业务逻辑层组件：DirService 317
9.9.7 业务逻辑层组件：FileService 319
9.9.8 创建目录的CreateDirAction类 321
9.9.9 删除目录的DeleteNetDiskDirAction类 322
9.9.10 获得子目录的GetSubDirsAction类 323
9.9.11 获得目录中文件列表的GetNetDiskFilesAction类 325
9.9.12 上传网络硬盘文件的NetDiskUploadFilesAction类 326
9.9.13 下载指定文件的GetNetDiskFileAction类 328
9.10 项目实战：编写网络硬盘客户端代码 330
9.10.1 添加桌面图标和开心菜单项 330
9.10.2 创建网络硬盘主页面 332
9.10.3 创建显示目录和文件的树形组件 333
9.10.4 向网络硬盘主页面添加菜单 333
9.10.5 向网络硬盘主页面添加按钮 334
9.10.6 创建文件夹 335
9.10.7 上传文件 338
9.10.8 删除目录和文件 340
9.11 本章小结 340
第三篇 开心时刻
第10章 动他一下：向朋友打招呼 342
10.1 与朋友建立交往的第一步：动他一下 342
10.2 Ext JS中的拖放技术 343
10.2.1 什么是拖放技术 343
10.2.2 拖放的基本应用 343
10.2.3 拖动到指定的区域 344
10.2.4 拖放事件 346
10.2.5 Ext.dd.DD 347
10.2.6 增加拖动把手（Handle） 347
10.2.7 将拖动块置顶 349
10.2.8 拖放代理（Proxy） 350
10.2.9 设置拖动步长 351
10.2.10 拖动到指定的区域 352
10.2.11 限制拖动的区域 353
10.3 项目实战：编写“动他一下”服务端代码 355
10.3.1 设计数据库 355
10.3.2 表示“动作”的实体Bean 355
10.3.3 数据访问层组件：TouchDAO 356
10.3.4 业务逻辑层组件：TouchService 357
10.3.5 保存“动作”信息的TouchAction类 358
10.3.6 获得“动作”信息的GetMessageAction类 360
10.4 项目实战：编写“动他一下”客户端代码 362
10.4.1 添加桌面图标和开心菜单项 362
10.4.2 显示“动他一下”页面 364
10.4.3 显示“动他一下”图标和选择好友输入组件 365
10.4.4 选择好友 368
10.4.5 登录或刷新时显示接收到的“动作” 369
10.5 本章小结 371
第11章 赠送礼物：进一步增进朋友间的感情 372
11.1 最省钱的送礼方式：电子礼物 372
11.2 Ext JS中的数据操作组件 372
11.2.1 异步通信：Ext.data.Connection 373
11.2.2 客户端的记录：Ext.data.Record 375
11.2.3 客户端的二维表：Ext.data.Store 376
11.2.4 对Store对象中的数据进行排序 377
11.2.5 从Store对象中获得数据 377
11.2.6 更新Store对象中的数据 379
11.2.7 装载数据 380
11.3 常用代理（Proxy） 381
11.3.1 MemoryProxy 381
11.3.2 HttpProxy 381
11.3.3 ScriptTagProxy 382
11.4 常用Reader 382
11.4.1 ArrayReader 382
11.4.2 JsonReader 383
11.4.3 XmlReader对象 384
11.5 项目实战：编写“赠送礼物”服务端代码 385
11.5.1 数据库设计 385
11.5.2 表示礼物的实体Bean 385
11.5.3 数据访问层组件：GiftDAO 386
11.5.4 业务逻辑层组件：GiftService 389
11.5.5 获得动作信息的GetMessageAction类 390
11.5.6 获得当前用户所有礼物信息的GetGiftsAction类 390
11.5.7 送礼物的SendGiftAction类 392
11.6 项目实战：编写“赠送礼物”的客户端代码 393
11.6.1 添加桌面图标和开心菜单项 393
11.6.2 显示赠送礼物页面 396
11.6.3 显示礼物图像和好友、附言输入组件 397
11.6.4 选择好友 399
11.6.5 查看当前用户收到的所有礼物 400
11.7 本章小结 402
第12章 Ext JS中的常用技术 403
12.1 Ext JS中的常用方法 403
12.1.1 onReady方法 403
12.1.2 get方法 404
12.1.3 getCmp方法 405
12.1.4 getDom方法 405
12.1.5 getBody方法 406
12.1.6 encode方法和decode方法 406
12.1.7 apply方法和applyIf方法 407
12.1.8 Ext.each方法 408
12.2 动态生成HTML 408
12.2.1 使用DomHelper生成代码片段 408
12.2.2 使用模板（Template） 411
12.2.3 使用更复杂的模板（XTemplate） 414
12.3 本章小结 415
第四篇 手机上的开心网
第13章 Android基础 418
13.1 Android的基本概念 418
13.1.1 Android简介 418
13.1.2 Android的系统构架 419
13.2 Android开发环境的搭建 420
13.2.1 安装Android SDK 420
13.2.2 安装ADT插件 421
13.2.3 建立和运行Android工程 422
13.3 在真实环境中测试Android程序 423
13.3.1 通过USB数据线进行联机测试 424
13.3.2 Android LiveCD 426
13.3.3 Android X86 427
13.4 编写一个移动浏览器程序 427
13.5 本章小结 429
第14章 登录移动开心网 430
14.1 Web Service 430
14.1.1 下载和安装Axis 2 430
14.1.2 用POJO实现零配置的Web Service 431
14.1.3 使用services.xml文件发布Web Service 433
14.2 在Android中访问Web Service 436
14.2.1 下载和安装KSOAP2 436
14.2.2 使用KSOAP2调用Web Service的步骤 436
14.2.3 使用KSOAP2调用零配置的Web Service 437
14.3 实现移动开心网的登录功能 439
14.3.1 编写打开数据库的Database类 440
14.3.2 编写为登录服务的LoginService类 440
14.3.3 配置LoginService类 442
14.3.4 设计登录界面 442
14.3.5 将SoapObject转换成User对象 444
14.3.6 编写登录界面的主类：Login 445
14.4 本章小结 447
第15章 移动电子相册：捕捉精彩瞬间 448
15.1 先睹为快：移动电子相册 448
15.2 移动电子相册中使用的组件 449
15.2.1 Button组件 449
15.2.2 TextView组件 449
15.2.3 EditText组件 451
15.2.4 ImageView组件 451
15.2.5 Spinner组件 452
15.2.6 使用Gallery组件循环显示图像 454
15.2.7 TabHost组件 455
15.3 访问网络 457
15.3.1 HttpGet类和HttpPost类 457
15.3.2 HttpURLConnection类 458
15.4 项目实战：浏览照片 459
15.4.1 编写CommonServlet类 460
15.4.2 获取当前用户的所有相册 462
15.4.3 设置移动电子相册的主界面 464
15.4.4 在客户端显示相册列表 464
15.4.5 获取指定相册的照片路径 467
15.4.6 获取指定的照片数据 468
15.4.7 在客户端分页显示照片缩略图 469
15.4.8 显示照片大图 471
15.5 项目实战：建立相册 472
15.5.1 编写建立相册的服务 472
15.5.2 在客户端提交相册信息 473
15.6 项目实战：上传图像 474
15.6.1 服务端接收客户端上传的图像 475
15.6.2 拍摄照片 477
15.6.3 从本地选择图像 478
15.6.4 向服务端上传图像 479
15.7 本章小结 480
第16章 移动日记：随时随地记录生活点滴 481
16.1 先睹为快：移动日记 481
16.2 移动日记中使用的组件 481
16.2.1 ListView组件 482
16.2.2 菜单组件 483
16.2.3 WebView组件 484
16.3 项目实战：写日记 485
16.3.1 编写提交日记内容的服务 485
16.3.2 编写“写日记”功能的Android客户端 487
16.4 项目实战：浏览日记列表和日记内容 489
16.4.1 从服务端获取日记标题列表 489
16.4.2 从服务端获取日记内容 491
16.4.3 在手机客户端显示日记标题列表 492
16.4.4 利用WebView组件浏览日记内容 493
16.5 本章小结 494
第17章 会移动的礼物 495
17.1 先睹为快：随时随地赠送好友礼物 495
17.2 GridView组件 495
17.3 项目实战：赠送礼物 496
17.3.1 获取好友列表 496
17.3.2 在Android客户端显示好友列表 497
17.3.3 编写“赠送礼物”服务 499
17.3.4 向好友赠送礼物 500
17.3.5 编写“赠送礼物”的主界面 501
17.4 项目实战：显示当前用户获得的礼物 503
17.4.1 编写获得好友赠送的礼物的服务 503
17.4.2 在Android客户端显示好友赠送的礼物 505
17.5 本章小结 505
第18章 无处不在的问候 506
18.1 先睹为快：随时随地与好友打招呼 506
18.2 ListActivity类 506
18.3 项目实战：与好友打招呼 508
18.3.1 显示好友列表 508
18.3.2 编写打招呼服务 509
18.3.3 编写打招呼的客户端 510
18.4 本章小结 513
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>人人都玩开心网
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>移动App性能评测与优化
Contents　目　　录
序
前言
第1章　越用越卡为哪般—降低待机内存	1
1.1　新手入门	1
1.2　规范测试流程及常见等问题	6
1.2.1　测试流程	7
1.2.2　Dalvik Heap的常见问题	8
1.2.3　示例	9
1.2.4　新的问题	10
1.3　新问题的进一步挖掘	12
1.3.1　Dalvik Heap内部机制	13
1.3.2　问题所在	15
1.3.3　优化Dalvik内存碎片	17
1.4　进阶：内存原理	19
1.4.1　从物理内存到应用	20
1.4.2　smaps	22
1.4.3　zygote共享内存机制	25
1.4.4　多进程应用	25
1.5　案例：优化dex相关内存	26
1.5.1　从class对象说起	27
1.5.2　一个类的内存消耗	28
1.5.3　dex mmap	29
1.5.4　dex文件优化	30
1.6　本章小结	33
第2章　手机发烫是为何—降低耗电量	35
2.1　电量测试方法	36
2.1.1　硬件测试	37
2.1.2　软件测试	42
2.2　电量优化方法	55
2.2.1　优化方法一：CPU时间片	55
2.2.2　优化方法二：wake lock	55
2.2.3　优化方法三：传感器	56
2.2.4　优化方法四：云省电策略	56
2.3　本章小结	56
第3章　怎样才能如丝般顺滑—流畅度评测	57
3.1　流畅度评测方法介绍	57
3.2　流畅度	59
3.3　真的？用SM就够了吗	65
3.4　流畅度优化案例	69
3.4.1　通过SM评估App的流畅度	70
3.4.2　从最简单的UI层优化入手	71
3.4.3　Lint扫描，发现代码中的流畅度性能问题	79
3.4.4　优化App的逻辑层	84
3.4.5　优化App的IO层	88
3.4.6　流畅度优化经验	89
3.5　本章小结	91
第4章　坑爹的路线如何破—导航评测	93
4.1　路线规划评测	93
4.1.1　路测，人工评测，还是自动化	94
4.1.2　选择测试用例	95
4.1.3　寻找bad case的判断准则	96
4.1.4　判断路线是否相似	97
4.1.5　自动化评测方案—无路况版	97
4.1.6　自动化评测方案—路况版	101
4.1.7　特殊情况	104
4.1.8　展望	106
4.2　播报诱导评测	106
4.2.1　播报诱导常用测试方法：路测	106
4.2.2　室内评测是否能代替路测	107
4.2.3　耳听为虚，眼见为实	109
4.2.4　找到更多不好的用例	110
4.2.5　评测平台的建成	113
4.2.6　评测用例的优化	113
4.2.7　让评测更快，更好，更准	116
4.3　本章小结	117
第5章　修一条时刻畅通的高速路—网络优化	119
5.1　上传速度和成功率的优化	119
5.1.1　任务背景及方案雏形	120
5.1.2　鱼翅的要点	124
5.1.3　探索过程中的经验与思考	131
5.2　流量优化	135
5.2.1　摸清现状	136
5.2.2　优化精简	148
5.2.3　持续监控	153
5.2.4　优化过程中的经验与思考	153
5.3　本章小结	154
第6章　苗条才是美—应用安装包瘦身	155
6.1　瘦身的方向选择	155
6.2　案例：瘦成一道闪电	156
6.2.1　代码部分	157
6.2.2　资源部分	168
6.2.3　极限压缩zip	175
6.3　本章小结	181
第7章　工欲善其事必先利其器—打造趁手的测试工具GT	183
7.1　初心	184
7.1.1　选择恰当的时机	184
7.1.2　需要解决的问题	185
7.1.3　决定工具的形态	186
7.2　在实践中发挥作用	186
7.2.1　CPU	186
7.2.2　Jiffies	188
7.2.3　电量	189
7.2.4　流畅度和FPS	191
7.2.5　内存	191
7.2.6　流量	192
7.3　工具的获取	193
7.4　GT使用	193
7.4.1　GT在场测中	194
7.4.2　GT在自动化测试中	203
7.5　本章小结	205
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>移动App性能评测与优化
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Sencha Touch权威指南
前　言
第一部分　准　备　篇
第1章　Sencha Touch 2.0概述 / 2
1.1　认识Sencha Touch   / 2
1.1.1　Sencha Touch框架的特性 / 2
1.1.2　Sencha Touch 2.0中的新特性 / 3
1.2　Sencha Touch 2.0框架 / 4
1.2.1　搭建学习环境 / 4
1.2.2　开发包中的内容 / 10
1.2.3　第一个Sencha Touch 2.0示例页面 / 11
1.3　构建及发布应用程序 / 13
1.3.1　Sencha Touch 2.0中的动态加载技术 / 13
1.3.2　几种核心脚本文件之间的区别 / 14
1.3.3　构建应用程序时执行的处理 / 14
1.3.4　发布应用程序 / 16
1.4　本章小结 / 17
第2章　Sencha Touch 2.0基础知识 / 18
2.1　一个简单的示例页面 / 18
2.2　配置对象与配置选项 / 19
2.3　应用程序的命名与启动 / 21
2.4　Sencha Touch 2.0中的面板组件 / 22
2.4.1　如何创建面板组件 / 22
2.4.2　Viewport组件 / 23
2.5　对DOM的访问及控制 / 23
2.5.1　Ext.get方法的使用 / 24
2.5.2　Ext.ComponentManager.get方法的使用 / 24
2.5.3　Ext.fly方法的使用 / 25
2.6　本章小结 / 26
第二部分　基　础　篇
第3章　面板与布局 / 28
3.1　在面板组件中放置图片 / 28
3.1.1　示例代码及配置选项 / 28
3.1.2　Sencha Touch 2.0中的图片组件 / 30
3.1.3　Sencha Touch 2.0中的事件监听器及事件处理函数 / 30
3.1.4　Sencha Touch 2.0中的动态加载技术 / 31
3.2　Tab面板组件 / 33
3.2.1　Tab面板组件的使用及示例 / 33
3.2.2　Tab面板组件的配置选项 / 35
3.2.3　Sencha Touch 2.0中的内置图标 / 36
3.3　Sencha Touch 2.0中的常用布局 / 38
3.3.1　盒布局 / 38
3.3.2　Fit布局 / 42
3.3.3　Card布局 / 44
3.3.4　容器内部组件的停靠 / 47
3.4　Carousel组件 / 49
3.4.1　Carousel组件的使用及示例 / 49
3.4.2　容器组件的defaults配置选项 / 51
3.4.3　Carousel组件的常用方法 / 52
3.5　NavigationView组件 / 53
3.5.1　NavigationView组件的使用及示例 / 53
3.5.2　配置NavigationView组件的标题栏 / 55
3.6　xtype配置选项 / 56
3.6.1　xtype配置选项的使用及示例 / 56
3.6.2　使用getComponent方法获取容器中的子组件 / 58
3.6.3　重要组件的xtype值及作用 / 59
3.7　本章小结 / 60
第4章　表单及表单域组件 / 61
4.1　一个最简单的表单示例 / 61
4.1.1　表单的核心组件 / 61
4.1.2　第一个表单使用示例 / 62
4.1.3　表单所用配置选项 / 63
4.1.4　Sencha Touch 2.0中的滚动 / 67
4.2　Sencha Touch 2.0中的特殊输入组件 / 69
4.2.1　密码输入组件 / 69
4.2.2　数值输入组件 / 70
4.2.3　Spinner组件 / 71
4.2.4　Email输入组件 / 72
4.2.5　Url输入组件 / 73
4.2.6　TextArea组件 / 74
4.2.7　Search组件 / 75
4.3　单选框与复选框组件 / 76
4.3.1　单选框组件 / 76
4.3.2　复选框组件 / 80
4.4　选取框组件 / 81
4.4.1　选取框组件的使用示例 / 81
4.4.2　选取框组件所用配置选项 / 83
4.5　使用数据仓库装载选取框 / 84
4.5.1　什么是数据仓库 / 84
4.5.2　使用本地数据装载选取框 / 86
4.5.3　代理与阅读器 / 88
4.5.4　使用服务器端数据装载选取框 / 89
4.6　日期选择组件 / 91
4.6.1　日期选择组件使用示例 / 91
4.6.2　日期选择组件所用配置选项 / 92
4.7　滑动条组件 / 94
4.7.1　滑动条组件使用示例 / 94
4.7.2　滑动条组件所用配置选项 / 95
4.7.3　setValue方法与getValue方法 / 95
4.8　Toggle组件 / 95
4.9　Hidden组件 / 96
4.10　本章小结 / 97
第5章　表单验证及提交 / 98
5.1　Sencha Touch 2.0中的按钮 / 98
5.1.1　按钮的使用及示例 / 98
5.1.2　修改按钮的样式 / 99
5.1.3　定义按钮的功能 / 102
5.2　表单验证 / 103
5.2.1　实现表单的AJAX异步提交 / 103
5.2.2　使用Sencha Touch 2.0中的内置验证 / 108
5.2.3　服务器端验证及验证成功后数据的追加 / 114
5.3装载表单数据 / 115
5.3.1装载本地数据 / 115
5.3.2装载服务器端数据 / 117
5.3.3修改服务器端数据 / 120
5.3.4　删除服务器端数据 / 123
5.4　将表单设定为无效状态 / 125
5.5　本章小结 / 126
第6章工具条 / 127
6.1　工具条组件的使用及示例 / 127
6.2　segmentedButton组件 / 128
6.2.1在工具条中放置segmentedButton组件示例 / 129
6.2.2segmentedButton组件的配置选项 / 130
6.3工具条的对齐方式与分隔符 / 131
6.3.1工具条右对齐示例 / 131
6.3.2在子组件中插入间隔距离示例 / 132
6.4　在工具条中使用图标按钮 / 133
6.4.1使用自定义图标按钮 / 133
6.4.2使用Sencha Touch 2.0中的内置图标按钮 / 135
6.5　在工具条中使用表单域组件 / 135
6.6　标题条组件 / 138
6.6.1标题条组件与工具条组件的区别 / 138
6.6.2　标题条组件的使用示例 / 139
6.7本章小结 / 139
第7章　XTemplate模板与DomHelper组件 / 141
7.1　XTemplate模板 / 141
7.1.1　定义XTemplate模板 / 141
7.1.2在模板中使用数组 / 144
7.1.3　在模板中使用操作符 / 148
7.1.4　在模板中使用内置变量 / 149
7.1.5在模板中使用自定义函数 / 151
7.2　DomHelper组件 / 153
7.2.1使用append方法追加元素 / 153
7.2.2　使用overwrite方法重写元素 / 155
7.2.3　在指定位置处追加与删除元素 / 156
7.3　本章小结 / 162
第8章DataView组件 / 163
8.1DataView组件的基本功能 / 163
8.1.1DataView组件的使用及示例 / 163
8.1.2对DataView组件使用样式 / 166
8.1.3　将DataView组件中的数据进行排序 / 168
8.1.4　DataView组件的选取方式 / 171
8.2　DataView组件的常用事件 / 171
8.2.1　itemsingletap事件、itemdoubletab事件与itemtap事件 / 171
8.2.2　itemswipe事件 / 173
8.2.3　refresh事件 / 175
8.2.4　selectionchange事件与deselect事件 / 177
8.3使用DataView组件制作一览表 / 183
8.3.1制作一览表的步骤 / 183
8.3.2为一览表添加排序功能 / 185
8.3.3为一览表添加搜索功能 / 189
8.4使用DataView组件显示服务器端数据 / 193
8.4.1显示XML文件中的数据 / 193
8.4.2显示JSON文件中的数据 / 197
8.4.3显示服务器端数据库中的数据 / 198
8.4.4对服务器端的数据进行分页 / 200
8.4.5在服务器端对数据进行排序 / 206
8.4.6对数据库中的数据进行搜索 / 212
8.5使用代理管理数据 / 223
8.5.1Memory代理 / 223
8.5.2SessionStorage代理 / 235
8.5.3LocalStorage代理 / 240
8.5.4Ajax代理 / 241
8.5.5Rest代理 / 247
8.6　Operation对象的使用方法 / 253
8.6.1通过Operation对象插入url参数 / 253
8.6.2获取分页数据 / 255
8.6.3　对服务器端数据进行排序与过滤 / 260
8.7获取异域数据 / 263
8.7.1通过JsonP代理获取异域数据 / 264
8.7.2利用Ext.data.JsonP对象获取异域数据 / 268
8.8　本章小结 / 275
第9章List组件 / 276
9.1List组件的基本功能 / 276
9.1.1使用List组件在页面上显示列表 / 276
9.1.2itemDisclosure事件 / 277
9.1.3在List组件中使用索引栏 / 279
9.1.4ListPagingView插件 / 280
9.2将List组件中的数据进行分组 / 282
9.2.1使用grouper配置选项进行分组 / 283
9.2.2动态设置List组件的分组方式 / 286
9.2.3动态更新数据时List组件的自动分组 / 287
9.3nestedList组件 / 289
9.3.1nestedList组件的使用及示例 / 290
9.3.2显示服务器端文件夹及文件列表 / 297
9.3.3显示服务器端数据库中的数据 / 302
9.4本章小结 / 307
第10章地图与多媒体 / 308
10.1　利用Map组件在页面中显示Google地图 / 308
10.1.1　Map组件的使用及示例     / 308
10.1.2　Ext.util.Geolocation类的使用及示例 / 309
10.2利用Video组件播放视频文件 / 313
10.2.1　Video组件的使用及示例 / 313
10.2.2　控制视频的主要的方法 / 315
10.3利用Audio组件播放音频文件 / 317
10.3.1　Audio组件的使用及示例 / 317
10.3.2　控制音频的主要方法 / 318
10.4本章小结 / 320
第11章使用具有关联关系的模型 / 321
11.1定义具有关联关系的模型 / 321
11.2定义具有一对多关系的模型 / 322
11.2.1　一对多关系模型的使用示例 / 323
11.2.2使用子模型的数据仓库存取数据 / 326
11.2.3　定制父模型的过滤器 / 337
11.3　定义具有多对一关系的模型 / 343
11.3.1　多对一关系的模型的使用示例 / 343
11.3.2　通过子模型的getter方法获取父模型的记录 / 346
11.3.3　通过子模型的setter方法设置关联id / 351
11.4　定义具有一对一关系的模型 / 361
11.4.1　通过模型的getter方法获取其关联模型的记录 / 361
11.4.2　通过模型的setter方法设置关联id / 363
11.5　在同一个模型内部建立关联关系 / 364
11.6　本章小结 / 369
第12章Sencha Touch 2.0中的Ext Direct API / 370
12.1　服务器端提供的组件  / 370
12.1.1　配置 / 370
12.1.2　API / 372
12.1.3　路由 / 372
12.2　Sencha Touch 2.0中的Provider / 374
12.2.1　PollingProvider方法的使用及示例 / 374
12.2.2　RemotingProvider方法的使用及示例 / 377
12.3　 Direct代理 / 387
12.3.1　Direct代理的使用示例 / 388
12.3.2　在Direct代理所使用的方法中提交命名参数 / 391
12.4　DirectStore数据仓库  / 394
12.5　本章小结 / 402
第13章　自适应尺寸的Sheet组件 / 403
13.1　Sheet组件简介 / 403
13.2　ActionSheet组件的使用及示例 / 403
13.3　Sencha Touch 2.0中的提示信息框 / 406
13.3.1　提示信息框 / 406
13.3.2　确认信息框 / 408
13.3.3　Ext.Msg.show方法 / 409
13.4　Picker组件的使用及示例 / 411
13.5　使用DatePicker组件选取日期 / 417
13.6　本章小结 / 419
第14章　Sencha Touch 2.0中的样式与主题 / 420
14.1　利用配置选项设置单个组件的样式 / 420
14.2　Sencha Touch 2.0中的内置主题 / 421
14.2.1　重载默认主题中组件的样式 / 421
14.2.2　修改Sencha Touch 2.0中的内置主题 / 422
14.3　利用SASS定制Sencha Touch 2.0的主题 / 423
14.3.1　安装SASS和Compass / 423
14.3.2　在Sencha Touch 2.0中使用SASS  / 424
14.3.3　修改Sencha Touch 2.0默认主题中的变量 / 425
14.4　SCSS样式表文件 / 426
14.4.1　SCSS提供的高级特性 / 426
14.4.2　Sencha Touch 2.0提供的mixin / 431
14.4.3　编译SCSS样式表文件 / 432
14.4.4　应用SCSS样式表文件定制主题示例 / 433
14.4.5　SCSS样式表文件中自定义组件样式的示例 / 434
14.5　本章小结 / 436
第15章　创建自定义组件与MVC模式的应用程序 / 437
15.1　实现自定义组件 / 437
15.1.1　Sencha Touch 2.0中的包与命名空间 / 437
15.1.2　创建自定义组件 / 438
15.1.3　为自定义组件添加自定义方法 / 441
15.2　使用命令行工具创建及部署MVC模式的应用程序 / 443
15.2.1　命令行工具的安装及使用 / 443
15.2.2　创建MVC模式的应用程序 / 444
15.2.3　部署MVC模式的应用程序 / 446
15.2.4　页面文件与脚本文件分析 / 447
15.2.5　应用程序中的默认命名约定 / 450
15.2.6　应用程序启动时的函数调用顺序 / 451
15.3　创建视图与控制器 / 452
15.3.1创建应用程序的主视图 / 452
15.3.2创建应用程序的主控制器 / 453
15.3.3通过控制器实现用户与应用程序之间的交互 / 454
15.4　在控制器中指定路由 / 457
15.4.1　通过routes配置选项指定路由 / 458
15.4.2　在路由中使用参数 / 464
15.4.3　通过before配置选项拦截路由方法的执行 / 467
15.5　设备配置文件 / 474
15.5.1　检测应用程序当前所用的设备配置文件 / 474
15.5.2　为应用程序编制设备配置文件 / 475
15.5.3　在设备配置文件中使用launch函数 / 476
15.5.4　为设备单独编写视图 / 477
15.5.5　将各种视图在不同的设备中以不同的方式进行结合 / 480
15.5.6　为设备单独编写控制器 / 487
15.6　本章小结 / 491
第三部分　综 合 案 例
第16章　综合应用案例 / 494
16.1　应用程序的所有文件及其路径 / 494
16.2　应用程序的页面文件与脚本文件 / 496
16.3　利用SASS定制样式主题 / 498
16.4　设备配置文件 / 500
16.5　模型与数据仓库 / 501
16.6　视图与控制器 / 508
16.6.1　应用程序的主视图 / 508
16.6.2　用户注册/登录视图与控制器 / 510
16.6.3　展示视图及其控制器 / 516
16.6.4　书籍列表展示视图与控制器 / 524
16.6.5　书籍信息编辑视图与控制器 / 534
16.7　本章小结 / 540
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Sencha Touch权威指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>App Store创赢艺术
第1章　App Store简史 …………………………… 1
1.1　App Store发展历程表  2
1.2　早期的App Store  5
1.2.1　触摸屏的新奇用法  6
1.2.2　简单取得成功，而复杂遭遇失败  9
1.3　与时俱进的App Store  9
1.3.1　朝着复杂应用步步为营  11
1.3.2　自早期App Store以来，应用环境发生了什么变化  12
1.4　本章小结  13
第2章　设定目标、成本和期望  15
2.1　克服“英雄发明综合症”  16
2.1.1　亲力亲为的优势  17
2.1.2　外包  18
2.1.3　避开单枪匹马的陷阱  25
2.2　考量基础成本  30
2.2.1　编程  32
2.2.2　游戏/应用设计的UI/UX中的要素  33
2.2.3　美工设计的要素  34
2.3　考虑可选成本  34
2.3.1　音频成本  35
2.3.2　特效成本  35
2.3.3　针对国外市场的本地化  37
2.3.4 　质量保证/测试  37
2.3.5　公共关系和市场营销  39
2.3.6 　广告成本  41
2.4　管理你的期望  41
2.4.1　App Store就像个拥挤的动物园  42
XX
App Store创赢艺术——Apple开发的赚钱机密
2.4.2　计划好成本超支的对策  43
2.4.3　制定日程时的铁腕政策  43
2.5　本章小结  44
第3章　App Store市场研究  45
3.1　数字和趋势分析  46
3.2　先研究后决策  49
3.2.1　机会大小：市场上有漏洞吗  51
3.2.2　选择应用环境  52
3.2.3　先下手为强  53
3.2.4　总结决策  55
3.3　分析成功应用  56
3.3.1　探寻流行的特性  65
3.3.2　探寻视觉风格  66
3.3.3　探寻社交网络集成  68
3.3.4　探寻iPhone的名品堂  69
3.3.5　避开挥之不去的自尊陷阱  69
3.3.6　游戏概念：新旧对抗  72
3.4　分析不成功的应用  76
3.4.1　从别人的错误中学习  80
3.4.2　从别人的意见中学习  81
3.5　混合与搭配  82
3.5.1　从主流应用程序/游戏中借鉴风格和功能  82
3.5.2　提炼成功的功能特性，换个角度  84
3.6　本章小结  84
第4章　了解你的客户  87
4.1　理解App Store的人口统计学  88
4.1.1　休闲和传统游戏的核心  91
4.1.2　iPhone休闲游戏与传统休闲游戏的比较  95
4.2　迎合客户的期望  96
4.2.1　视觉和画面  96
4.2.2　游戏玩法和功能特性  97
4.2.3　竞争性反馈研究  127
4.3　本章小结  127
XXI
目 录
第5章　策划开发的各个阶段  129
5.1　领导与团队  131
5.1.1　角色的假设  132
5.1.2　首发阵容  133
5.1.3　初期的控制概念  137
5.2　从概念到发布  139
5.2.1　通过敏捷开发完善应用  141
5.2.2　计划——构思你的设想  146
5.2.3　进度安排  150
5.2.4　制作和开发阶段  160
5.2.5　协调市场营销  168
5.3　本章小结  171
第6章　应用开发的准则和期望  173
6.1　潜在的风险和收获  174
6.1.1　付费应用都应所见即所得  174
6.1.2　当销量缩水时，你能提供哪些激励措施  175
6.1.3　你计划采用应用内购功能吗  175
6.1.4　你能够走免费这条路吗  175
6.1.5　就像中彩票  176
6.1.6　收益就像过山车  178
6.2　App Store的商业模式  179
6.2.1　免费应用  179
6.2.2　付费应用的收益模式和价格预期  182
6.3　创建适应多任务世界的应用  186
6.3.1　理解多任务处理对大脑的影响  187
6.3.2　将手机当作终极多任务处理工具  187
6.4　半秒窗口  188
6.4.1　理解典型用户对触摸屏应用的倾向  188
6.4.2　让初次交互充分利用“半秒窗口”  190
6.5　描绘实物世界  191
6.5.1　使用实物隐喻来取悦用户  192
6.5.2　策划/品牌建设练习：为应用创作隐喻  197
6.5.3　利用物理的力量：重力、天气、物体  203
6.5.4　在实物隐喻中，声音的重要性  204
6.6　本章小结  204
XXII
App Store创赢艺术——Apple开发的赚钱机密
第7章　创作免费和免费增值应用  207
7.1　应用收入术语  208
7.1.1　微交易  208
7.1.2　可下载内容(DLC)  210
7.1.3　免费应用  211
7.1.4　免费增值应用  211
7.1.5　应用内购  212
7.1.6　免费试玩应用(F2P)  212
7.1.7　轻量级应用  213
7.1.8　长尾策略  213
7.2　收入模式背后的商业动机  214
7.2.1　免费应用的考量  214
7.2.2　免费增值应用的考量  215
7.2.3　轻量级应用的考量  219
7.3　考量风险和收获  222
7.3.1　免费应用  222
7.3.2　免费增值应用  223
7.3.3　轻量级应用  224
7.3.4　将应用的风险降至最低  224
7.4　免费应用如何取得成功  225
7.4.1　免费应用  225
7.4.2　轻量级应用  231
7.4.3　用广告支持应用  236
7.5　免费增值应用如何取得成功  241
7.5.1　微交易和长尾效应  242
7.5.2　实现收入的可靠方法  244
7.5.3　运用虚拟货币系统  246
7.5.4　免费增值模式的成功  251
7.6　本章小结  252
第8章　创建付费和高级应用  253
8.1　收入模式背后的商业原因  254
8.1.1　付费应用的两种类型  255
8.1.2　在确定价位时，娱乐性与实用性或教育性的对比  256
8.1.3　对非高级付费应用的考量  257
8.1.4　高级付费应用的考量  260
XXIII
目 录
8.2　考量风险和回报  262
8.2.1　非高级付费应用  263
8.2.2　高级付费应用  264
8.3　付费应用如何取得成功  264
8.3.1　付费应用思维方式  264
8.3.2　集成轻量级版本  269
8.3.3　添加应用内购功能  275
8.4　本章小结  278
第9章　学习苹果公司的方法  279
9.1　全身心地关注  281
9.1.1　用户体验为王  282
9.1.2　细微之处见真章，而且比你想的更重要  286
9.1.3　增值的好处(不要止步于自己的期望)  289
9.1.4　顾客就是上帝  291
9.2　让应用适应iPad平台  294
9.3　案例研究：Tapbots  296
9.3.1　高对比度的呈现方式  297
9.3.2　制作精细、反应迅速、简单易懂的界面  298
9.3.3　无需过渡  299
9.3.4　标准惯例  299
9.4　本章小结  301
第10章　搭上社交网络的风潮 303
10.1　打造终极的病毒式市场营销：社交网络  304
10.1.1　集成应用内的社交网络  305
10.1.2　制作成就、奖章、徽章以及其他奖励  311
10.2　向Facebook取经  313
10.2.1　有了好友更有趣  314
10.2.2　跟着规律数据走——及时而频繁地调整价值  315
10.3　打破Facebook的惯例  318
10.3.1　等待一点都不有趣  319
10.3.2　千万不要强制添加好友  320
10.4　当用户帮助推广应用时，要奖励他们  321
10.4.1　赠送虚拟物品、免费道具  322
10.4.2　为用户提供社区感  325
XXIV
App Store创赢艺术——Apple开发的赚钱机密
10.5　提供社交互动功能  326
10.5.1　功能与额外功能的比较  326
10.5.2　设置用户竞争的舞台  327
10.6　为用户提供连接的工具  333
10.6.1　运用Facebook Connect和Twitter  333
10.6.2　打造应用内的用户社区  335
10.6.3　尽最大可能利用病毒式传播渠道  336
10.7　本章小结  345
第11章　反馈、维护与扩充  347
11.1　评估反馈  348
11.1.1　软发布前的准备  348
11.1.2　主要版本发布的反馈  350
11.1.3　取其精华，去其糟粕  351
11.1.4　将数据转化成行动  353
11.2　维护并不只是修复错误，而是市场营销  358
11.2.1　客户支持是关键  358
11.2.2　定期更新  361
11.3　扩充  362
11.3.1　发布新的内容  362
11.3.2　制作其他平台的版本  363
11.3.3　应用的未来  364
11.4　本章小结  366
附录A　推荐书目  367
附录B　在线资源  371
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>App Store创赢艺术
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Cocos2d-x游戏开发之旅
第1章 开学典礼
1.1 出场人物介绍
1.2 入学要求——本书适合人群
1.3 这内容有点糟糕——本书风格
1.4 你需要这些技能——学Cocos2d-x需要什么知识
1.5 我们为什么要学Cocos2d-x
1.6 先给我们的代码找个温馨的家——环境搭建
1.6.1 紫色风暴之VS2010
1.6.2 我的Cocos2d-x版本
1.6.3 看看前辈们的毕业设计——运行官方Demo
1.7 广告时间——提供一些学习资源
第2章 不离不弃的HelloWorld
2.1 简单到无法想象——直接运行HelloCpp项目
2.2 新建Cocos2d-x项目遇到的麻烦——成功新建一个HelloWorld
2.2.1 创建Cocos2d-x项目
2.2.2 解决编译报错的方案1——直接复制源文件
2.2.3 解决编译报错的方案2——修改项目配置
2.3 HelloWorld，没有想象中的简单——简单解析HelloWorld
2.3.1 HelloWorld是如何显示到窗口的
2.3.2 场景其实不是真正的场景
2.4 实例来了
第3章 我们来学习怎么爬行
3.1 环游世界——场景
3.2 一切的主宰——导演
3.2.1 加载第一个场景
3.2.2 简单的切换场景
3.2.3 包含特效的切换场景
3.2.4 赠送的——推进和弹出场景
3.3 你走你的，我走我的——层
3.4 比对象还要可爱的对象——精灵来了
3.5 我得下命令——菜单
3.6 当个背包客——节点
第4章 我们来学习怎么走路
4.1 吉他独奏《天空之城》——播放声音
4.2 控件篇1——我最爱的九妹和按钮事件
4.2.1 你好，九妹——可拉伸图片
4.2.2 解决使用extensions库时编译报错的问题
4.2.3 九妹和按钮搭配
4.2.4 丰富多彩的按钮事件
4.2.5 啰嗦一下——CCControlButton特别的小功能
4.3 控件篇2——我不是DJ之圆形音量按钮
4.3.1 圆形音量按钮
4.4 控件篇3——我要战斗之血量条
4.4.1 又是一个音量控制按钮
4.4.2 我要的血量条
4.5 动作篇1——简简单单的运动
4.5.1 你想去哪，你想走多远——CCMoveTo和CCMoveBy
4.5.2 我要减肥——CCScaleTo和CCScaleBy
4.5.3 卡牌翻转特效——用CCScaleTo就可以实现
4.5.4 闪亮登场——CCBlink
4.6 动作讲解2——更复杂的运动
4.6.1 我要你按照我的路线走——CCBezierTo和CCBezierBy
4.6.2 我没让你停，重复动作——CCRepeatForever
4.6.3 动作一起做，一边走一边转一边跳——CCSequence
4.7 动作讲解3——动作监听
4.7.1 小若，到家了告诉我一声——动作结束监听
4.7.2 动作家族族谱
4.8 屏幕触摸事件
4.8.1 屏幕事件初探
4.8.2 复数形式的函数——每个CCLayer都能获取屏幕事件
4.8.3 单数形式的函数——截断事件，一个CCLayer的垄断
第5章 是时候跑起来了——《LittleRunner》
5.1 这是一个什么游戏
5.2 找个主角回来——创建主角精灵
5.2.1 创建筛选器
5.2.2 创建实体基类
5.2.3 创建主角类
5.2.4 创建游戏场景
5.2.5 修改游戏窗口大小
5.3 其实她不想跑——创建无限滚动地图
5.3.1 每一帧都可以操作——scheduleUpdate初探
5.3.2 翻滚吧，地图——地图无限滚动
5.4 开心的时候——让主角跳起来
5.4.1 CCControlButton的应用——创建跳跃按钮
5.4.2 CCJumpBy的应用——给主角添加跳跃动作
5.5 金钱诱惑——加入怪物
5.5.1 怪物诞生
5.5.2 怪物巢穴——创建怪物管理器
5.5.3 贪婪的主角——怪物碰撞检测
5.5.4 疼了就退后——增加主角受伤时的动作
5.6 监控一切——创建分数标签、血量条等属性对象
第6章 精灵来了第二季
6.1 一大波精灵来袭——大量精灵单独绘制的缺陷
6.2 把相同的精灵装上车——使用CCSpriteBatchNode优化绘制
6.2.1 一次渲染——CCSpriteBatchNode的特别之处
6.2.2 什么是纹理——CCTexture简单解说
6.3 遇到不同的精灵怎么办——TexturePacker工具使用
6.3.1 同一张图片，同一个纹理
6.3.2 将多张图片打包到一起
6.3.3 加载打包后的图片
6.4 是动画，不是动作——CCAnimation
6.4.1 用打包前的图片创建动画
6.4.2 用打包后的图片创建动画
6.4.3 额外赠送——动画创建辅助类
第7章 游戏实例之《跑跑跑》
7.1 更丰富的世界——使用Tiled地图
7.1.1 世界诞生——创建跑步场景
7.1.2 Tiled地图来了——使用Tiled Map Editor创建地图文件
7.1.3 你报错了吗——Tiled Editor常见路径错误
7.2 嘿，培养新人——创建新的主角
7.2.1 主角诞生——创建实体类和主角类
7.2.2 固定主角出生点——对象层的使用
7.2.3 让主角跑——添加主角动画
7.3 更智能的主角——添加角色控制器
7.3.1 创建控制器基类
7.3.2 带着它就能跑——主角移动控制器
7.3.3 焦点是主角——让地图随着主角滚动
7.4 更多的内容
7.4.1 让主角上下移动——三方移动控制器
7.4.2 添加障碍物——Tiled障碍层的使用
7.4.3 添加能吃的物品以及胜利条件
第8章 用多线程做定时器？你疯了——schedule很强大
8.1 我爱单线程——schedule介绍
8.2 每一帧都有我——scheduleUpdate和update
8.3 定时器可以这么做——schedule和回调函数
8.3.1 不调用update函数，调用自己的函数
8.3.2 真正的定时器
8.4 让一切都停下来——unSchedule
8.5 触发器可以这么做——scheduleOnce和回调函数
8.6 额外赠送，我总是很关注我暗恋的女孩——观察者模式
8.6.1 你喜欢谁？我帮你留意——观察者模式扫盲
8.6.2 Cocos2d-x提供的观察者模式工具类——CCNotificationCenter
8.6.3 addObserver和postNotification函数传递数据的区别
8.6.4 额外赠送——自己实现简单的观察者
第9章 野外生存训练
9.1 师父走了，你怎么办——学会查看官方Demo
9.2 迟早都要学会——学习查看Demo源代码
9.3 别忘了开源——学习查看Cocos2d-x源代码
9.3.1 为什么addObserver和postNotification不能同时传递数据
9.4 物竞天择，没用的就要被淘汰——retain和release
9.4.1 为什么会有retain
9.4.2 真正的凶手autoRelease
9.4.3 看代码实际点
9.4.4 原理来了
9.4.5 实际情况
9.4.6 倒底什么时候要retain
9.5 再传授几招
9.5.1 在调试项目时，跟踪并进入Cocos2d-x的源码
9.5.2 什么？你忘了保存记忆？我们一起十年了啊——保存数据
9.6 我能摆脱编译的噩梦——读取Csv配置文件
9.6.1 什么是Csv文件——Csv格式文件扫盲
9.6.2 如何创建一个Csv文件
9.6.3 预热——编写字符串工具类
9.6.4 辅助工具——编写文本读取工具类
9.6.5 进入主题——编写Csv文件读取工具类
……
第10章 睡觉的时候不要吃东西——有限状态机
第11章 我比Csv更厉害——强大的Lua
第12章 额外奉献，状态机代码生成工具——SMC
第13章 自力更生——自己写一个UI模块
第14章 倾情奉献——因为偷懒而诞生的《卡牌塔防》游戏（上篇）
第15章 倾情奉献——因为偷懒而诞生的《卡牌塔防》游戏（下篇）
第16章 倾情奉献——因为偷懒而诞生的《卡牌塔防》游戏（终结篇）
第17章 额外的一些东西
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Cocos2d-x游戏开发之旅
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>数据库系统概念（本科教学版）
改编者序前言第1章  引言  1.1  数据库系统的应用  1.2  数据库系统的目标  1.3  数据视图    1.3.1  数据抽象    1.3.2 实例和模式    1.3.3  数据模型  1.4  数据库语言    1.4.1  数据操纵语言    1.4.2  数据定义语言  1.5  关系数据库    1.5.1  表    1.5.2  数据操纵语言    1.5.3  数据定义语言    1.5.4  来自应用程序的数据库访问  1.6  数据库设计    1.6.1  设计过程    1.6.2  银行企业的数据库设计    1.6.3  实体-联系模型    1.6.4  规范化  1.7  基于对象数据库和半结构化数据库    1.7.1  基于对象数据模型    1.7.2  半结构化数据模型  1.8  数据存储和查询    1.8.1  存储管理器    1.8.2  查询处理器  1.9  事务管理  1.10  数据挖掘与分析  1.11  数据库体系结构  1.12  数据库用户和管理员    1.12.1  数据库用户和用户界面    1.12.2  数据库管理员  1.1  3数据库系统的历史  1.14  小结  术语回顾  实践习题  习题  文献注解  工具    第一部分  关系数据库第2章  关系模型第3章　SQL第4章　高级SQL第5章　其他关系语言    第二部分  数据库设计第6章　数据库设计和E-R模型第7章　关系数据库设计第8章　应用设计和开发    第三部分  基于对象的数据库和XML第9章　基于对象的数据库第10章　XML    第四部分  数据存储、查询和事务管理第11章  数据存储和数据存取第12章  查询处理和查询优化第13章  事务管理    第五部分  高级话题第14章  高级话题第15章  高级应用开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>数据库系统概念（本科教学版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Qt Quick核心编程
第1章  Qt Quick概览	1
1.1  什么是Qt Quick	1
1.2  我们能用Qt Quick做什么	2
第2章  Qt开发环境快速上手	3
2.1  Qt Creator简介	3
2.2  Qt Creator下载与安装	3
2.2.1  下载	3
2.2.2  安装	4
2.3  Hello Qt Quick App	8
2.3.1  创建项目	8
2.3.2  运行项目	11
2.3.3  在手机上运行	12
2.4  Qt Creator集成开发环境	15
2.4.1  欢迎界面	15
2.4.2  编辑界面	18
2.4.3  调试界面	19
2.4.4  项目选项设置	20
2.5  善用佳软之Qt Quick开发工具	21
2.5.1  Qt帮助	21
2.5.2  Qt Quick Designer	24
2.5.3  命令行环境	25
2.5.4  qmlscene	26
第3章  QML语言基础	28
3.1  对象	28
3.2  表达式	29
3.3  注释	30
3.4  属性	31
3.4.1  属性命名	31
3.4.2  属性的类型	31
第4章  Qt Quick入门	35
4.1  Hello Qt Quick App再分析	35
4.1.1  基本程序结构	35
4.1.2  使用Item作为QML根对象	37
4.2  闲话Window	38
4.2.1  Window细说	38
4.2.2  ApplicationWindow	40
4.3  基本元素初体验	40
4.3.1  Rectangle	40
4.3.2  颜色	41
4.3.3  渐变色	41
4.3.4  Item	42
4.3.5  使用锚布局	44
4.3.6  响应按键	46
4.3.7  Text	47
4.3.8  Button	50
4.3.9  ButtonStyle	51
4.3.10  Image	52
4.3.11  BusyIndicator	55
4.4  图片浏览器的第一个版本	55
4.4.1  QML代码	56
4.4.2  FileDialog	58
第5章  ECMAScript初探	59
5.1  语法	60
5.1.1  区分大小写	60
5.1.2  弱类型	60
5.1.3  语句后的分号可有可无	61
5.1.4  注释	61
5.1.5  代码块	61
5.2  变量	61
5.2.1  变量声明	61
5.2.2  变量命名规则	62
5.2.3  关键字	62
5.2.4  保留字	63
5.2.5  原始值与引用值	64
5.3  原始类型	64
5.3.1  typeof运算符	64
5.3.2  Undefined类型	65
5.3.3  Null类型	65
5.3.4  Boolean类型	66
5.3.5  Number类型	66
5.3.6  String类型	67
5.4  类型转换	67
5.4.1  转换成字符串	68
5.4.2  转换成数字	68
5.4.3  强制类型转换	69
5.5  对象	70
5.5.1  Object	70
5.5.2  String	72
5.5.3  RegExp	75
5.5.4  Array	78
5.5.5  Math	80
5.5.6  Date	81
5.5.7  你不可不知的对象碎碎念	83
5.6  函数	84
5.6.1  函数语法	84
5.6.2  函数的返回值	85
5.7  表达式和运算符	85
5.7.1  表达式	85
5.7.2  算术运算符	86
5.7.3  赋值运算符	86
5.7.4  比较和逻辑运算符	87
5.7.5  条件运算符	88
5.7.6  位运算符	88
5.7.7  关键字运算符	88
5.7.8  逗号运算符	89
5.7.9  数组和对象存取运算符	89
5.7.10  优先级	89
5.8  程序控制语句	90
5.8.1  if-else语句	90
5.8.2  switch语句	90
5.8.3  for语句	91
5.8.4  while语句	92
5.8.5  do-while语句	92
5.8.6  break、continue和return	92
5.9  使用console	93
5.9.1  输出日志信息	93
5.9.2  断言		94
5.9.3  计时器	94
5.10  内置对象	94
5.10.1  Global对象	94
5.10.2  JSON对象	96
5.11  来自QML的基本类型	98
5.11.1  url	99
5.11.2  list	99
5.11.3  enumeration	100
5.11.4  font	100
5.12  宿主对象Qt	101
5.12.1  Qt对象的属性	101
5.12.2  Qt对象的枚举类型	102
5.12.3  Qt对象的方法	102
第6章  Qt Quick事件处理	105
6.1  Qt Quick中的信号与槽	105
6.1.1  连接QML类型的已知信号	105
6.1.2  如何寻找感兴趣的信号	109
6.1.3  定义自己的信号	115
6.1.4  信号与槽的连接	117
6.2  鼠标	119
6.2.1  变色矩形示例	119
6.2.2  MouseArea	120
6.3  键盘	121
6.3.1  会动的文本实例	121
6.3.2  Keys与信号处理器	123
6.4  定时器	124
6.4.1  定时器对象介绍	124
6.4.2  倒计时程序	124
6.5  触摸事件	126
6.5.1  PinchArea	127
6.5.2  缩放与旋转实例	128
6.5.3  多点触摸	130
第7章  组件与动态对象	133
7.1  Component（组件）	133
7.1.1  嵌入式定义组件	133
7.1.2  在单独文件中定义组件	134
7.2  使用Loader	137
7.2.1  Loader详细介绍	137
7.2.2  从文件加载组件	142
7.2.3  利用Loader动态创建与销毁组件	143
7.3  在ECMAScript中动态创建对象	146
7.3.1  从组件文件动态创建Component	146
7.3.2  从QML字符串动态创建Component	148
7.3.3  销毁动态创建的对象	149
第8章  Qt Quick元素布局	152
8.1  定位器	152
8.1.1  Row	152
8.1.2  Colomun	154
8.1.3  Grid	155
8.1.4  Flow	158
8.1.5  定位器嵌套	160
8.2  布局管理器	162
8.2.1  GridLayout	163
8.2.2  RowLayout	166
8.2.3  ColumnLayout	168
8.3  其他的布局方式	169
第9章  Qt Quick常用元素介绍	170
9.1  行编辑（TextInput与TextField）	170
9.1.1  TextInput	170
9.1.2  TextField	172
9.2  文本块（TextEdit与TextArea）	172
9.2.1  TextEdit	173
9.2.2  TextArea	173
9.3  ExclusiveGroup	174
9.4  RaidoButton	174
9.4.1  RadioButtonStyle	174
9.4.2  实例：选择你喜欢的手机操作系统	175
9.5  CheckBox	177
9.5.1  CheckBoxStyle	178
9.5.2  实例：那些你喜欢的爱情电影	178
9.6  GroupBox	180
9.7  ComboBox	182
9.7.1  ComboBoxStyle	183
9.7.2  ComboBox综合演示	183
9.8  ProgressBar	187
9.8.1  ProgressBarStyle	187
9.8.2  进度条综合演示	188
9.9  TabView	191
9.9.1  标签控件简单示例	192
9.9.2  使用TabViewStyle	193
9.10  Slider	196
9.10.1  SliderStyle	197
9.10.2  滑块简单示例	197
9.11  Flickable	199
9.12  Screen对象	200
第10章  Canvas（画布）	202
10.1  开始之前	202
10.1.1  画布	202
10.1.2  画师	203
10.1.3  画笔	203
10.1.4  画刷	203
10.1.5  坐标系	203
10.1.6  图元	204
10.2  基本绘图模式	204
10.3  绘制路径	206
10.4  绘制文本	209
10.5  绘制图片	211
10.6  变换	215
10.7  裁切	219
10.8  图像合成	220
10.9  挖头像实例	221
10.9.1  项目创建	221
10.9.2  C++代码	222
10.9.3  QML代码分析	223
第11章  C++与QML混合编程	228
11.1  在QML中使用C++类和对象	229
11.1.1  定义可以导出的C++类	229
11.1.2  注册一个QML可用的类型	235
11.1.3  完整的ColorMaker实例	237
11.1.4  将一个C++对象导出为QML属性	239
11.2  在C++中使用QML对象	242
11.2.1  查找一个对象的孩子	243
11.2.2  使用元对象调用QML对象的方法	243
11.2.3  callQml示例	244
11.3  美图实例	248
11.3.1  美图实例效果	248
11.3.2  图像处理算法	250
11.3.3  源码情景分析	256
第12章  动画	264
12.1  动画元素分类	264
12.2  基本动画元素	265
12.2.1  Animation	265
12.2.2  PropertyAnimation	266
12.2.3  NumberAnimation	270
12.2.4  ColorAnimation	273
12.2.5  RotationAnimation	273
12.2.6  PathAnimation	275
12.2.7  SmoothedAnimation	278
12.2.8  SpringAnimation	279
12.3  组合动画	280
12.3.1  ParallelAnimation	280
12.3.2  SequentialAnimation	281
12.4  State	283
12.4.1  使用State变换文本的小示例	283
12.4.2  State详解	284
12.4.3  PropertyChanges	286
12.4.4  ParentChange	289
12.4.5  AnchorChanges	292
12.4.6  StateChangeScript	294
12.5  Transition	296
12.6  协同动画元素	302
12.6.1  Behavior	303
12.6.2  ParentAnimation	304
12.6.3  AnchorAnimation	305
12.7  实例：射泡泡游戏	306
12.7.1  游戏介绍	307
12.7.2  源码情景分析	310
第13章  Model/View	318
13.1  ListView	319
13.1.1  ListView的简单使用	319
13.1.2  header	323
13.1.3  footer	326
13.1.4  访问与修改Model	330
13.1.5  动画效果	336
13.1.6  section	343
13.2  XmlListModel的用法	347
13.2.1  XPath简介	347
13.2.2  XmlRole	349
13.2.3  XmlListModel的属性与方法	349
13.3  使用C++ Model	354
13.3.1  C++实现QML可用的Model	354
13.3.2  将Model导出到QML中	359
13.3.3  QML代码的变化	360
13.4  TableView	362
13.4.1  一个简单的TableView实例	362
13.4.2  定制表格外观	364
13.4.3  动态修改TableView	368
13.5  实例：股票跟踪	368
13.5.1  你的样子	369
13.5.2  项目创建	370
13.5.3  main.cpp分析	372
13.5.4  TableView外观定制	373
13.5.5  QML与C++混合应用的国际化	375
13.5.6  Qt on Android应用国际化	376
13.6  GridView	377
13.7  PathView	379
13.7.1  Path简介	380
13.7.2  PathAttribute	385
13.7.3  PathPercent	386
13.7.4  使用PathView	386
13.8  找图看实例	390
13.8.1  功能与界面	390
13.8.2  QML多界面切换	392
13.8.3  创建自己的QML按钮	394
13.8.4  本地浏览	395
13.8.5  网络图片搜索	399
13.9  Repeater	400
13.9.1  model为数字	400
13.9.2  model为字符串列表	401
13.9.3  model为对象列表	402
13.9.4  model为ListModel	403
13.10  ListView的下拉刷新效果	405
13.10.1  C++ Model	405
13.10.2  QML代码分析	408
第14章  多媒体	410
14.1  MediaPlayer	410
14.1.1  播放音乐	410
14.1.2  视频	413
14.1.3  多媒体元信息	414
14.2  拍照	415
14.2.1  配置Camera	415
14.2.2  设置取景器VideoOutput	418
14.2.3  捕获静态图片	419
14.2.4  简单的拍照实例	419
第15章  网络	426
15.1  大珠小珠落玉盘——支持网络的对象	426
15.1.1  Image	426
15.1.2  Qt.createComponent	426
15.1.3  Loader对象	427
15.1.4  QQmlApplicationEngine	427
15.1.5  QQuickView	427
15.1.6  MediaPlayer	428
15.2  QML里的HTTP	428
15.2.1  XMLHttpRequest类介绍	428
15.2.2  GET小示例	430
15.2.3  POST数据	433
15.3  使用C++代码完成复杂的网络操作	433
第16章  定位	435
16.1  类库介绍	435
16.1.1  coordinate	435
16.1.2  QtPositioning	436
16.1.3  Position	436
16.1.4  PositionSource	436
16.2  团购查询实例	437
16.2.1  百度API说明	437
16.2.2  手机运行效果	438
16.2.3  源码分析	439
第17章  综合实例之文件查看器	443
17.1  文件查看器的运行效果	444
17.2  再论ApplicationWindow	445
17.3  MenuBar	447
17.3.1  Menu	447
17.3.2  MenuItem	448
17.3.3  Action	448
17.4  ToolBar	449
17.5  使用XMLHttpRequest加载本地文件	450
17.6  使用标准对话框	450
17.6.1  ColorDialog	451
17.6.2  MessageDialog	452
17.7  源码分析	453
17.7.1  QML代码	453
17.7.2  C++代码	461
17.7.3  项目文件	461
第18章  综合实例之聊哈	462
18.1  界面效果	462
18.2  分析	465
18.2.1  适应多种分辨率	465
18.2.2  聊天界面实现分析	469
18.2.3  录音与回放	471
18.2.4  聊天协议	475
18.2.5  MessengerManager	485
18.2.6  AccessPointModel	486
附录A  常见问题	487
该怎么学习Qt Quick	487
如何发布Qt Quick应用	487
怎样保持Android手机屏幕常亮	489
我想创建可扩展的UI来适应各种屏幕	489
Qt Quick应用如何国际化	490
Qt Quick应用体积太大了啊	490
有没有静态库版本的Qt	490
我不想让别人看见我的QML文档	490
Android上的Qt Quick控件看起来和系统风格不一样	490
自己做一些Qt Quick控件怎么样	491
Qt Quick不支持文件操作吗	491
想用数据库来着……	491
说真的，本书示例代码在哪儿可以下载	491
参考文献	492
聊聊写作期间听的音乐	493
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Qt Quick核心编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>谷歌之神
第1章 是天才，还是幸运的执行官？
1 有艾瑞克•施密特，投资者就能放心 / 003
In 谷歌搜索 01 硅谷的神奇之处 / 010
2 和其他成功企业的战争 / 012
谷歌搜索 02 硅谷神话 / 021
3 黄金经营法则 / 024
谷歌搜索 03 硅谷的过渡期 / 028
4 艾瑞克•施密特的四个成功DNA / 030
谷歌搜索 04 隐藏在硅谷里的“一等功臣”/ 037
第2章 艾瑞克•施密特的独家成功法则
1 重信息，更重人才 / 041
谷歌搜索 05 硅谷的风向标作用 / 049
2 消除“革新缺乏症” / 051
谷歌搜索 06 造就硅谷神话的车库和仓库 / 057
3 关闭电脑，环顾四周 / 059
谷歌搜索 07 年轻人梦想来硅谷的原因 / 063
第3章 书写高速发展的历史
1 从数据看谷歌的发展 / 067
谷歌搜索 08 硅谷的新发展引擎 / 071
2 保持自信的七条原则 / 073
谷歌搜索 09 硅谷中的点子之家/ 078
3 一切为员工着想 / 080
谷歌搜索 10 硅谷独特的文化 / 0846
4 年轻人最想工作的企业 / 086
谷歌搜索 11 在谷歌工作的十个理由 / 090
5 创业初期就秉承的理念 / 092
谷歌搜索 12 艾瑞克•施密特经营谷歌的智慧 / 097
第4章 得智能手机者得天下
1 是朋友，还是敌人？ / 101
谷歌搜索 13 谷歌与苹果背后的故事 / 106
2 产业革新的引擎——智能手机 / 109
谷歌搜索 14 苹果、谷歌、微软三足鼎立 / 113
3 智能手机战争的序幕——iPhone / 115
谷歌搜索 15 苹果、谷歌的高低分野 / 121
4 智能手机改变生活 / 124
谷歌搜索 16 苹果、谷歌、微软三国争霸 / 129
第5章 谁是智能手机最后的赢家？
1 IT强国——韩国动摇的智能手机产业 / 133
谷歌搜索 17 谷歌与韩国的搜索引擎 / 139
2 智能手机时代的智能软件竞争 / 140
谷歌搜索 18 李明博与艾瑞克•施密特 / 144
3 苹果应用程序军团和抵抗军 / 146
谷歌搜索 19 谷歌的安卓 / 152
4 网页和应用程序无休止的战争 / 154
谷歌搜索 20 安卓的独家强力武器 / 160
5 谷歌的移动哲学 / 162
谷歌搜索 21 谷歌和谷歌联合军应该解决的课题 / 169
第6章 回首IT历史，
展望艾瑞克•施密特和谷歌的未来
1 养虎为患的IT历史 / 173
谷歌搜索 22 艾瑞克•施密特与云计算 / 178
2 失败的Windows Vista的教训 / 180
谷歌搜索 23 云计算的概念与作用 / 1844
3 网络电脑和云计算 / 186
谷歌搜索 24 云计算的主要服务形式和典型应用 / 191
4 设计谷歌未来的艾瑞克•施密特 / 193
谷歌搜索 25 艾瑞克•施密特今后去向 / 198
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>谷歌之神
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>写给大家看的安卓应用开发书
序　　xv
前言　　xvii
第一部分　App Inventor 2 教程
第1章　你好猫咪　　2
1.1　学习要点　　2
1.2　App Inventor的开发环境　　3
1.3　设计组件　　4
1.3.1　创建一个标签　　6
1.3.2　添加按钮组件　　7
1.3.3　添加猫叫声　　8
1.4　实时测试　　8
1.5　为组件添加行为　　9
1.5.1　让猫发出叫声 　　10
1.5.2　添加振动效果 　　12
1.5.3　摇晃设备　　14
1.6　将应用下载到安卓设备中　　14
1.7　应用的分享　　15
1.8　改进建议　　16
1.9　小结　　16
第2章　油漆桶　　17
2.1　学习要点　　18
2.2　准备开始　　18
2.3　设计组件　　18
2.3.1　创建颜色按钮 　　19
2.3.2　使用布局组件改善布局　　19
2.3.3　添加画布　　20
2.3.4　添加底部按钮及照相机组件　　21
2.4　为组件添加行为 　　22
2.4.1　在触摸事件中画圆　　23
2.4.2　在拖动事件中画线　　25
2.4.3　改变颜色　　26
2.4.4　让用户拍照片 　　27
2.4.5　改变画笔的大小　　28
2.4.6　使用变量　　29
2.4.7　修改变量的值 　　29
2.5　完整的“油漆桶”应用　　30
2.6　改进　　31
2.7　小结　　31
第3章　打地鼠　　32
3.1　作品描述　　33
3.2　学习要点　　33
3.3　准备开始　　33
3.4　设计组件　　33
3.4.1　设置行为组件 　　34
3.4.2　设置标签组件 　　35
3.5　为组件添加行为 　　36
3.5.1　移动地鼠　　36
3.5.2　创建移动地鼠过程　　37
3.6　在应用启动时调用移动地鼠过程　　38
3.6.1　每秒钟调用一次移动地鼠过程　　39
3.6.2　记录成绩　　39
3.6.3　过程抽象　　40
3.6.4　重置分数　　40
3.6.5　碰到地鼠引起振动　　41
3.7　完整的“打地鼠”应用　　41
3.8　改进　　42
3.9　小结　　42
第4章　开车不发短信　　44
4.1　学习要点　　45
4.2　准备开始　　45
4.3　设计组件　　45
4.4　为组件添加行为 　　47
4.4.1　短信的自动回复　　47
4.4.2　编写自定义回复内容　　48
4.4.3　永久保存自定义回复内容　　49
4.4.4　应用启动时读取自定义短信　　50
4.4.5　大声读出收到的短信　　51
4.4.6　在自动回复中加入位置信息　　53
4.4.7　发送带有位置信息的回复短信　　54
4.5　完整的“开车不发短信”应用　　55
4.6　改进　　55
4.7　小结　　56
第5章　瓢虫快跑　　57
5.1　作品描述　　57
5.2　学习要点　　58
5.3　设计组件　　58
5.3.1　准备开始　　58
5.3.2　设置第一批组件　　59
5.4　为组件添加行为 　　60
5.4.1　移动瓢虫　　60
5.4.2　显示生命值 　　61
5.4.3　瓢虫因饥饿而死　　64
5.4.4　添加蚜虫　　64
5.4.5　让瓢虫吃掉蚜虫　　65
5.4.6　瓢虫与蚜虫之间的碰撞检测　　66
5.4.7　蚜虫的回归 　　67
5.4.8　添加重新开始按钮　　67
5.4.9　添加青蛙　　68
5.4.10　瓢虫的回归　　69
5.4.11　添加音效　　70
5.5　完整的“瓢虫快跑”应用　　70
5.6　改进　　72
5.7　小结　　72
第6章　巴黎地图旅游　　73
6.1　学习要点　　73
6.2　设计组件　　74
6.3　设置活动启动器组件的属性　　75
6.4　为组件添加行为 　　75
6.4.1　创建目的地列表　　76
6.4.2　让用户选择一个目的地　　76
6.4.3　使用搜索网址打开地图　　77
6.5　完整的应用：用活动启动器实现的地图旅游　　78
6.5.1　用Web 浏览框实现的虚拟旅游　　78
6.5.2　找到特定地图的URL　　79
6.5.3　定义网址列表 　　79
6.5.4　修改列表选择框的完成选择行为　　80
6.6　完整的“巴黎地图旅游”应用（Web 浏览框版）　　81
6.7　改进　　81
6.8　小结　　82
第7章　安卓，我的车在哪儿　　83
7.1　学习要点　　83
7.2　准备开始　　84
7.3　设计组件　　84
7.4　为组件添加行为 　　85
7.4.1　显示当前位置 　　86
7.4.2　记录当前位置 　　87
7.4.3　指示记录位置的方向　　88
7.4.4　永久保存已记录的位置信息　　89
7.4.5　启动应用时提取已记录的位置信息　　90
7.5　完整的“安卓，我的车在哪儿？”应用　　92
7.6　改进　　93
7.7　小结　　93
第8章　总统问答　　94
8.1　学习要点　　94
8.2　准备开始　　95
8.3　设计组件　　95
8.4　为组件添加行为 　　96
8.4.1　定义问题及答案列表　　96
8.4.2　定义索引值变量　　97
8.4.3　显示第一个问题　　97
8.4.4　遍历所有问题 　　98
8.4.5　让程序易于修改　　100
8.4.6　为问题匹配图片　　101
8.4.7　判断答案对错 　　103
8.5　完整的“总统问答”应用　　105
8.6　改进　　106
8.7　小结　　107
第9章　木琴　　108
9.1　作品描述　　108
9.2　学习要点　　108
9.3　准备开始　　109
9.4　设计组件　　109
9.5　创建键盘　　109
9.5.1　创建两个音符按钮　　109
9.5.2　添加音效播放器组件　　110
9.5.3　在按钮与声音之间建立关联　　110
9.5.4　命令安卓加载声音　　112
9.5.5　实现其余的音符　　113
9.6　记录并回放音符　　114
9.6.1　添加组件　　115
9.6.2　记录音符及时间　　115
9.6.3　回放音符　　117
9.6.4　回放适当延迟的音符　　118
9.7　完整的“木琴”应用 　　119
9.8　改进　　120
9.9　小结　　121
第10章　出题与答题　　123
10.1　学习要点　　124
10.2　准备开始　　124
10.3　设计组件　　124
10.4　为组件添加行为 　　126
10.4.1　创建空列表 　　126
10.4.2　记录用户的输入　　127
10.4.3　清空问题及答案　　127
10.4.4　用多行文本显示问题及答案　　128
10.4.5　调用显示问题及答案过程　　129
10.4.6　将数据永久保存到网络数据库中　　130
10.4.7　从数据库加载数据　　131
10.5　完整的“出题”应用　　132
10.6　“答题”应用：从数据库中读取试题　　134
10.7　完整的“答题”应用　　135
10.8　改进　　137
10.9　小结　　137
第11章　广播中心　　138
11.1　学习要点　　139
11.2　准备开始　　139
11.3　设计组件　　139
11.4　为组件添加行为 　　140
11.4.1　回应收到的短信　　141
11.4.2　接纳申请人加入广播列表　　142
11.4.3　广播消息　　143
11.4.4　美化列表的显示　　145
11.4.5　记录广播过的短信　　146
11.4.6　将广播列表保存到数据库中　　147
11.4.7　从数据库中加载广播列表　　148
11.5　完整的“广播中心”应用　　149
11.6　改进　　150
11.7　小结　　151
第12章　遥控机器人　　152
12.1　学习要点　　153
12.2　准备开始　　153
12.3　设计组件　　154
12.3.1　非可视组件　　154
12.3.2　可视组件　　155
12.4　为组件添加行为 　　156
12.4.1　连接到机器人　　156
12.4.2　显示机器人列表　　156
12.4.3　建立蓝牙连接　　157
12.4.4　与机器人断开连接　　158
12.4.5　操控机器人 　　159
12.4.6　用超声波传感器探测障碍物　　161
12.5　改进　　162
12.6　小结　　162
第13章　亚马逊掌上书店 　　163
13.1　学习要点　　164
13.2　什么是API　　164
13.3　准备开始　　166
13.4　设计组件　　166
13.5　设计行为　　168
13.5.1　搜索关键字 　　168
13.5.2　按ISBN 搜索　　169
13.5.3　消除用户的困惑　　170
13.5.4　扫描条码　　170
13.5.5　改进信息的呈现方式　　171
13.6　完整的“亚马逊掌上书店”应用　　173
13.7　定制化API　　174
13.8　改进　　175
13.9　小结　　175
第二部分　Inventor 指南
第14章　理解应用的结构 　　178
14.1　组件　　179
14.2　行为　　179
14.3　应用如食谱　　179
14.4　应用是一组事件处理程序　　180
14.5　事件类型　　181
14.5.1　用户引发的事件　　181
14.5.2　初始化事件 　　182
14.5.3　计时器事件 　　182
14.5.4　动画事件　　182
14.5.5　外部事件　　183
14.6　在事件处理程序中设置问题　　183
14.7　在事件处理程中重复执行指令　　184
14.8　事件处理程序可以实现存储功能　　184
14.9　事件处理程序可以与网络对话　　185
14.10　小结　　185
第15章　软件工程与应用测试　　186
15.1　软件工程原则 　　186
15.2　解决真实的问题 　　187
15.3　向用户展示原型产品　　187
15.4　渐进式开发　　187
15.5　先设计，后编码 　　188
15.6　对代码进行注释 　　188
15.7　切割，分解，各个击破　　189
15.8　理解编程语言：用纸笔跟踪记录　　189
15.9　应用的调试　　192
15.9.1　监视变量　　192
15.9.2　测试单一代码块　　193
15.9.3　单步执行支持渐进式开发　　193
15.9.4　启用与禁用块　　194
15.10　小结　　194
第16章　应用的存储　　195
16.1　被命名的存储空间　　195
16.2　属性　　195
16.3　定义变量　　196
16.4　变量的设置与读取　　197
16.5　设变量为表达式 　　198
16.6　变量的递增　　198
16.7　构造复杂的表达式　　199
16.8　显示变量　　199
16.9　局部变量　　200
16.10　小结　　200
第17章　创建动画应用　　201
17.1　在应用中添加画布组件　　201
17.2　画布的坐标系统 　　201
17.3　用计时事件制作动画　　203
17.4　产生运动　　203
17.5　控制速度　　204
17.6　碰撞检测　　204
17.7　碰到边界　　204
17.8　碰撞事件与分离事件　　205
17.9　交互动画　　206
17.10　设置精灵的非计时器动画　　207
17.11　小结　　208
第18章　程序中的决策　　209
18.1　条件判断　　210
18.2　非此即彼的条件判断　　211
18.3　多重条件判断 　　212
18.4　复杂条件判断 　　212
18.5　小结　　215
第19章　数据列表编程　　216
19.1　创建列表变量 　　217
19.2　选择列表项　　217
19.3　使用索引值遍历列表　　218
19.4　举例：遍历颜色列表　　218
19.5　创建输入表单及动态数据　　220
19.5.1　定义动态列表　　220
19.5.2　添加数据项 　　220
19.5.3　显示列表　　221
19.5.4　删除列表项 　　222
19.6　列表中的列表 　　223
19.7　小结　　225
第20章　循环　　226
20.1　控制程序的执行：分支及循环　　226
20.2　遍历列表循环 　　227
20.3　近距离观察循环 　　228
20.4　代码的可维护性 　　228
20.5　显示列表　　229
20.6　条件循环　　230
20.7　条件循环应用举例：公式计算　　231
20.8　小结　　232
第21章　定义过程与代码复用　　233
21.1　消除冗余　　234
21.2　定义过程　　236
21.3　调用过程　　236
21.4　程序计数器　　237
21.5　为过程添加参数 　　237
21.6　过程的返回值 　　239
21.7　跨应用的代码复用　　241
21.8　求两点间距离 　　241
21.9　小结　　243
第22章　数据库　　244
22.1　数据在本地的永久保存　　245
22.2　从本地数据库提取数据　　246
22.3　网络数据库及数据共享　　246
22.3.1　用网络数据库组件保存数据　　247
22.3.2　请求数据及数据处理　　248
22.3.3　请求- 获得联动机制　　249
22.3.4　复杂的请求- 获得联动举例　　250
22.4　多标记同时请求数据　　252
22.5　设置专属的网络数据库　　253
22.6　小结　　254
第23章　传感器　　255
23.1　创建位置感知应用　　255
23.1.1　GPS　　256
23.1.2　App Inventor 与位置感知　　257
23.1.3　边界检查　　258
23.1.4　位置信息的来源：GPS、Wi-Fi 以及基站标识　　259
23.2　方向传感器　　259
23.2.1　用翻转角移动物体　　260
23.2.2　控制运动的方向及速度　　261
23.2.3　手机用作指南针　　262
23.3　加速度传感器 　　262
23.3.1　响应设备的摇晃　　263
23.3.2　使用加速度传感器的读数　　263
23.3.3　检测自由落体　　263
23.4　小结　　264
第24章　网络通信　　265
24.1　Web 浏览框组件 　　267
24.2　Web 客户端组件 　　268
24.3　网络数据库组件及其兼容API　　270
24.4　小结　　270
关于作者　　271
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>写给大家看的安卓应用开发书
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>触控设计观念与创意应用
目  录
第1篇  触控屏幕与嵌入式系统、人机接口、相关硬件
第1章  嵌入式系统概论	3
1.1  简介	3
1.2  嵌入式系统结构	4
1.3  嵌入式系统设计	7
1.4  嵌入式系统的程序语言	9
1.4.1  以中断技术实现并发	10
1.4.2  多线程的并发机制	12
1. 5  重点问题	14
第2章  传感器与致动器	15
2.1  基本型软硬件装置介绍	15
2.1.1  软硬件开发流程	16
2.1.2  Keil软件的安裝	17
2.2  范例项目系统	23
2.2.1  项目起源与描述	24
2.2.2  系统规格	24
2.2.3  软件设计	25
2.2.4  系统安装	27
2.3  高级驱动装置介绍	30
2.3.1  液晶显示器的驱动范例	30
2.3.2  温度传感器的驱动范例	32
2.3.3  温度传感器的数字转换	33
2.4  重点问题	35
第3章  人机接口	37
3.1  微软开发环境的使用介绍	38
3.1.1  微软开发环境的安装	38
3.1.2  微软开发环境的测试	39
3.1.3  真机与模拟器的环境比较	42
3.2  RFID的卡片接口	43
3.2.1  RFID的项目范例规格	44
3.2.2  项目范例的驱动流程探讨	46
3.3  直流电动机的震动界面	47
3.3.1  电动机运作原理	47
3.3.2  手机震动的微型电动机	49
3.4  触控屏幕的实时接口	49
3.4.1  触控屏幕的历史回顾	49
3.4.2  从项目说明触控应用	50
3.4.3  范例项目的PC端功能与操作	52
3.4.4  范例项目的WinCE端功能与操作	55
3.5  重点问题	57
第4章  触控屏幕与鼠标	59
4.1  从点击的角度做比较	59
4.1.1  从点击的事件处理函数观察	59
4.1.2  从点击的按钮设计范例观察	61
4.2  从MVC的角度作比较	61
4.3  从鼠标的功能作比较	63
4.4  综合讨论	65
4.5  Hello MFC!!项目的触控接口设计	66
4.6  重点问题	70
第5章  学习案例： 基于软件工程的8051项目教程	72
5.1  需求分析	72
5.2  系统分析与设计	74
5.3  系统实施	76
5.4  重点问题	77
第2篇  触控设计的概念与实现
第6章  基础GUI触控组件	81
6.1  Android的安装与使用	82
6.2  Android的基础范例组件	82
6.2.1  xml资源设置文件	84
6.2.2  新增模式与控制	86
6.2.3  新增资源按钮	88
6.3  程序代码直接声明资源	91
6.3.1  程序代码声明资源的优点	91
6.3.2  程序代码声明资源的用法	91
6.3.3  xml文件管理资源的优点	94
6.4  重点问题	97
第7章  高级GUI触控组件	98
7.1  高级触控项目设计与实现	98
7.1.1  手动建立项目	98
7.1.2  触控感测设计	101
7.1.3  触控感测实现	105
7.1.4  五向导航实现	108
7.1.5  滑动应用实现	110
7.2  高级触控组件介绍	113
7.2.1  组件范例一：Gallery	113
7.2.2  组件范例二：List	115
7.3  重点问题	116
第8章  再谈高级GUI触控	118
8.1  高级触控组件补充	118
8.1.1  List组件如何回馈	118
8.1.2  Gallery组件如何应用	120
8.2  高级触控设计补充	123
8.2.1  五向导航的问题与解法	123
8.2.2  滑动速度的侦测与应用	124
8.3  重点问题	126
第9章  点击式转盘的概念与实现	127
9.1  简介	127
9.2  点击式转盘的点击设计	128
9.2.1  点击视图设计	128
9.2.2  点击控制器设计	131
9.2.3  点击模式设计	132
9.3  点击式转盘的转盘设计	135
9.3.1  转盘视图设计	135
9.3.2  转盘控制器的设计	137
9.3.3  转盘模式设计	139
9.4  重点问题	144
第10章  学习案例：声光震动的展示技巧	146
10.1  声音的展示案例	146
10.1.1  声音文件的取得与播放	147
10.1.2  程序的安排与设计	148
10.2  光影的展示案例	150
10.3  震动的展示案例	155
10.4  运用TextToSpeech类展示声音	158
10.5  重点问题	159
第3篇  触控输入法与手势的设计
第11章  基础键盘的设计与实现	163
11.1  名词定义	164
11.2  QWERTY键盘的点击设计	166
11.2.1  点击视图设计	166
11.2.2  点击控制器设计	170
11.2.3  点击模式设计	173
11.3  Multitap键盘的点击设计	181
11.3.1  点击视图设计	182
11.3.2  点击控制器设计	185
11.3.3  点击模式设计	189
11.4  ObjectAid UML软件	192
11.5  重点问题	194
第12章  高级键盘的设计与实现	195
12.1  名词定义	196
12.2  RollPad键盘的滑控设计	196
12.2.1  滑控视图设计	197
12.2.2  滑控控制器设计	201
12.2.3  滑控模式设计	204
12.3  HamilPad键盘滑控设计	207
12.3.1  滑控视图设计	208
12.3.2  滑控控制器设计	212
12.3.3  滑控模式设计	217
12.4  Total Commander文件管理软件	219
12.5  重点问题	222
第13章  手势键盘的设计与实现	224
13.1  新手势语言：CSOW简介	225
13.2  实现C与S手势语言	226
13.3  以JavaCC工具辅助手势语言	233
13.4  以JavaCC实现O手势语言	238
13.5  以Jar函数库运用W手势语言	244
13.6  JavaCC安装与使用	248
13.7  重点问题	253
第14章  学习案例：CSOW音乐盒	254
14.1  CSOW八音盒规格	255
14.2  静态画面的CSOW接口设计	256
14.2.1  静态画面中的C手势设计	261
14.2.2  静态画面中的S手势设计	263
14.2.3  静态画面中的W手势设计	265
14.3  动态画面的CSOW接口设计	267
14.3.1  动态画面中的C手势设计	268
14.3.2  动态画面中的S手势设计	269
14.3.3  动态画面中的W手势设计	270
14.4  重点问题	271
第4篇  触控手势的创意应用
第15章  手势应用的创意基础	275
15.1  传统点击的视图应用	275
15.2  五向导航与点击式转盘的视图应用	279
15.2.1  五向导航的视图应用	279
15.2.2  点击式转盘的视图应用	281
15.3  CSOW与HamilPad的视图应用	282
15.3.1  CSOW的视图应用	282
15.3.2  HamilPad的视图应用	284
15.4  以GestureDetector实现五向导航	286
15.5  多点触控实现的视图应用	287
15.5.1  以多点触控实现五向导航	288
15.5.2  以多点触控实现转盘动作	290
15.6  以App Inventor实现的视图应用	292
15.7  重点问题	296
第16章  社群应用的创意手势	297
16.1  同步双向的Socket机制简介	298
16.2  同步双向的社群应用	302
16.2.1  PK游戏Java版	302
16.2.2  PK游戏Android Client版（含五向导航手势）	305
16.2.3  PK游戏Android版（含CSOW的S手势）	308
16.3  异步双向的社群实时通应用	312
16.3.1  实时通Java版	313
16.3.2  实时通Android Client版（含五向导航手势）	315
16.3.3  实时通Android Client版（含HamilPad手势）	317
16.4  重点问题	321
第17章  拼图游戏的创意手势	322
17.1  拼图游戏的功能介绍	322
17.1.1  菜单设计与拼图制作	324
17.1.2  排行数据库与最爱设置	329
17.2  拼图游戏的基本C手势应用	334
17.3  拼图游戏的高级S手势应用	336
17.4  重点问题	337
第18章  地图应用的创意手势	339
18.1  Google Map程序设计简介	339
18.2  两阶段触控接口的设计理念	342
18.3  地图应用的S手势设计	344
18.4  地图应用的W手势设计	346
18.5  重点问题	348
第19章  媒体应用的创意手势	349
19.1  MediaPlayer媒体播放设计简介	350
19.2  媒体应用的C/S手势设计	354
19.3  媒体应用的W手势设计	355
19.4  重点问题	356
第20章  创意触控乐高机器人	358
20.1  乐高机器人程序设计简介	358
20.2  以Android面板模拟遥控器	360
20.2.1  程序架构	361
20.2.2  切换到ControlPanel类连接到NXT	365
20.3  NXT端程序	369
20.4  总结	370
附录A  Keil’s μVISION4 集成开发环境指南	371
附录B  MVC原始报告	377
附录C  Java JDK安装与使用	391
附录D  Eclipse与Android集成开发环境指南	398
附录E  App Inventor应用开发环境指南	406
附录F  leJOS NXT与 NXT韧体的安装与使用	409
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>触控设计观念与创意应用
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS应用开发详解
第1章  Mac操作系统和开发环境	1
1.1  Mac操作系统简介	1
1.2  Windows操作习惯的改变	2
1.3  Mac系统配置	3
1.4  使用Finder	3
1.5  Dock启动菜单	4
1.6  使用Terminal终端	5
1.7  使用App Store	5
1.8  Mac常用快捷键	6
1.9  下载并安装Xcode	9
第2章  Xcode的使用	11
2.1  Xcode简介	11
2.2  使用Xcode创建项目	11
2.3  Xcode界面纵览	14
2.4  使用Xcode中的Interface Builder构建界面	15
2.5  Xcode快捷键	16
2.6  Organizer组织中心	17
第3章  Hello World Objective-C	18
3.1  使用Xcode 编辑、编译和运行Hello World	18
3.2  使用命令行编辑、编译并运行Hello World	21
3.3  Objective-C中的注释	22
3.4  使用NSLog输出变量	22
3.5  NSLog的格式化输出	23
第4章  Objective-C中的面向对象	25
4.1  对象和类简介	25
4.2  Objective-C中类的定义	25
4.3  实例变量、实例方法、类方法	26
4.4  类的实例化及方法的调用	27
4.5  类的初始化	29
4.6  属性	30
第5章  Objective-C中的数据类型	32
5.1  整型	32
5.2  浮点类型	33
5.3  字符型（char）	34
5.4  布尔类型	35
5.5  整型修饰符（short, long, signed, unsigned）	36
5.6  特殊类型（id）	36
第6章  Objective-C中的运算符	38
6.1  赋值运算	38
6.2  算术运算	39
6.3  自增自减	40
6.4  关系运算	41
6.5  逻辑运算	42
6.6  位运算	43
第7章  Objective-C流程控制、数据结构	44
7.1  选择（if else、switch、三元运算）	44
7.2  循环（for、while、do while、break、continue）	46
7.3  常用的数据结构：数组、栈	49
第8章  Objective-C分类和协议	52
8.1  分类的概念	52
8.2  分类的用法	52
8.3  协议的概念	56
8.4  协议的用法	56
第9章  Objective-C继承和多态	60
9.1  继承和组合	60
9.2  OCP设计原则及多态	64
第10章  C语言特性在Objective-C中的应用	70
10.1  预处理	70
10.2  数组	72
10.3  指针	73
10.4  结构体	74
第11章  Objective-C内存管理	76
11.1  对象的引用计数	76
11.2  Autorelease Pool	77
11.3  属性的内存管理	78
11.4  内存的自动引用计数（ARC）	79
11.5  内存管理的其他注意事项	81
第12章  NSNumber和NSString	83
12.1  NSNumber	83
12.2  NSString（字符串）	87
12.3  NSMutableString（可变字符串）	89
第13章  Foundation中的集合框架	91
13.1  数组NSArray和NSMutableArray	91
13.2  集合NSSet和NSMutableSet	93
13.3  字典NSDictionary和NSMutableDictionary	95
第14章  Foundation框架中的文件和目录	97
14.1  使用NSFileManager管理文件	97
14.2  使用NSFileManager管理目录	102
14.3  使用NSFileHandler读写文件	103
第15章  Objective-C中的对象复制	105
15.1  概述	105
15.2  对象的浅复制和深复制	107
15.3  NSCopying和NSMutableCopying协议	108
第16章  Objective-C中的文件归档	110
16.1  概述	110
16.2  使用属性列表（plist）保存数据	110
16.3  使用NSKeyedArchiver归档	112
16.4  归档自定义类型	113
16.5  利用归档实现深复制	114
第17章  iOS编程中常用的设计模式	115
17.1  MVC	115
17.2  Target-Action	119
17.3 代理	120
第18章  iOS用户界面	122
18.1  UIResponder	123
18.2  UIView	125
18.2.1  UIView的创建	125
18.2.2  UIView的核心属性	126
18.3  UILabel	128
18.4  UITextView	130
18.5  UIButton	132
18.6  UITextField	133
18.7  UISwitch	134
18.8  UISlider	135
18.9  UISegmentedControl	137
18.10  UIProgressView	138
18.11  UIActivityIndicatorView	139
18.12  UIAlertView	140
18.13  UIActionSheet	143
18.14  UIImageView	145
18.15  UIScrollView	146
18.16  UIWebView	147
18.17  UIDatePicker	151
18.18  UIPickerView	153
第19章  iOS控制器	155
19.1  UIViewController	155
19.2  UITabBarController	156
19.3  UINavigationController	161
19.4  UISplitViewController	164
19.5  UIPopoverController	166
19.6  UITableViewController	167
19.6.1  UITableViewController基本用法	168
19.6.2  分区表	171
19.6.3  自定义表格单元格	173
19.6.4  编辑表格数据	175
第20章  图形图像和动画	177
20.1  字体和颜色	177
20.2  绘制文本	181
20.3  绘制图片	182
20.4  画线	183
20.5  绘制矩形	185
20.6  移动动画	186
20.7  缩放动画	188
20.8  旋转动画	189
第21章  iOS多媒体	191
21.1  为多媒体开发做准备	191
21.2  使用AVAudioPlayer播放音乐	192
21.3  使用AVAudioPlayerDelegate处理播放中断及续播	194
21.4  使用AVAudioRecorder实现录音	196
21.5  使用AVAudioRecorderDelegate处理录音中断和续录	198
21.6  使用MPMoviePlayerController播放视频	201
21.7  捕获视频缩略图	202
21.8  使用MPMediaPickerController选择系统音乐	204
21.9  使用UIImagePickerController进行拍照和录像	205
第22章  iOS SQLite数据库	209
22.1  SQLite简介	209
22.2  在命令行使用SQLite	209
22.3  使用SQLite实现表的增、删、查、改	211
22.4  SQLite和UITableView结合使用	217
第23章  iOS Core Data编程	221
23.1  Core Data简介	221
23.2  使用Xcode模板创建Core Data项目	223
23.3  使用Core Data实现数据的增、删、查、改	226
23.4  Core Data数据在UITableView中展现	230
第24章  iOS网络编程	234
24.1  检测网络状态	234
24.2  使用NSURLConnection从网络获取数据	236
24.3  使用NSMutableURLRequest向服务器发送数据	237
24.4  JSON数据解析	239
24.5  XML数据解析	242
24.6  使用开源框架ASIHttpRequest实现网络编程	245
第25章  iOS多线程	247
25.1  NSThread	247
25.2  Block基础	248
25.2.1  Block的声明与调用	248
25.2.2  有返回值和参数的Block	249
25.3  Grand Central Dispatch（GCD）	249
25.4  操作对象（Operation Object）	251
第26章  iOS GPS定位应用	255
26.1  为项目添加必要的框架	255
26.2  使用MKMapView显示地图	256
26.2.1  使用MapView组件直接显示地图	256
26.2.2  使用代码显示地图	257
26.3  使用MKMapView的代理MKMapViewDelegate	258
26.4  使用CLLocationManager获得设备当前经纬度信息	260
26.5  在地图上标注位置	261
26.6  使用CLGeocoder将位置描述转换为经纬度信息	262
26.7  使用CLGeocoder将经纬度信息转换为位置描述	264
26.8  使用Google Place API 查询周边位置信息	265
第27章  iOS手势处理	267
27.1  点击手势处理UITapGestureRecognizer	267
27.2  捏合手势处理UIPinchGestureRecognizer	269
27.3  旋转手势处理UIRotationGestureRecognizer	270
27.4  滑动手势处理UISwipeGestureRecognizer	271
27.5  拖动手势处理UIPanGestureRecognizer	273
27.6  长按手势处理UILongPressGestureRecognizer	274
第28章  iOS传感器编程	276
28.1  传感器编程的准备工作	277
28.2  加速度传感器（Accelerometer）	278
28.3  陀螺仪传感器（Gyroscope）	280
28.4  磁力传感器（Magnetometer）	282
28.5  设备移动传感器（Device motion）	284
28.6  通过加速度传感器控制小球运动	285
第29章  AddressBook联系人管理	287
29.1  概述	287
29.2  读取所有联系人	289
29.3  添加联系人	293
第30章  在App Store掘金	296
30.1  注册开发者账号	296
30.2  申请成为开发者	298
30.3  证书申请	302
30.4  真机调试	312
30.5  应用提交	313
第31章  iOS项目实战——新浪微博客户端	319
31.1  项目准备工作	319
31.2  搭建项目基础框架	323
31.3  项目功能概述	327
31.4  项目界面结构	332
31.5  获得最新微博信息	335
31.6  发布微博	340
31.7  获得微博详细信息	342
31.8  获得微博评论和转发	344
31.9  发表评论	351
31.10  转发微博	353
31.11  收藏微博	355
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS应用开发详解
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>PhoneGap 3.0移动应用开发实战详解
第Ⅰ篇  PhoneGap基础入门篇
第1章  PhoneGap3.x开发基础入门
1.1  了解基于PhoneGap框架的开发
1.2  下载和安装PhoneGap框架
1.2.1  在Windows上安装PhoneGap
1.2.2  在Mac上安装PhoneGap
1.3  关于手机操作系统的知识
第2章  建立PhoneGap for Android开发和测试环境
2.1  建立开发和测试环境
2.1.1 配置Java环境
2.1.2 安装ANT和配置环境
2.1.3 配置Android环境
2.1.4  安装Android SDK用于编译和测试
2.1.5  创建和配置Android模拟器
2.2  创建PhoneGap工程
2.2.1  为PhoneGap工程添加Android平台
2.2.2  编译、安装和运行
2.3  使用ADT进行PhoneGap开发
2.3.1  在模拟器中测试程序
2.3.2  实战第一个Android原生应用程序
2.3.3  部署到设备测试
2.3.4  怎样选择一台合适的设备进行测试
2.3.5  编译、提交和安装
第3章  建立PhoneGap for iOS开发和测试环境
3.1  创建PhoneGap工程
3.1.1  为PhoneGap工程添加iOS平台
3.1.2  编译、安装和运行
3.2  使用Xcode进行PhoneGap开发
3.2.1  在模拟器中测试程序
3.2.2  实战第一个iOS原生应用程序
3.2.3  部署到设备测试
3.2.4  编译、提交和安装
第Ⅱ篇  PhoneGap原生插件实战篇
第4章  内核事件处理和PhoneGap 基本使用方法
4.1  PhoneGap基本开发方法
4.2  处理事件
4.2.1  内核事件
4.2.2  侦测设备按键
第5章  PhoneGap原生插件的管理和程序调试
5.1  安装和管理原生插件
5.1.1  在开发环境中查看安装的插件
5.1.2  查看和删除插件
5.1.3  PhoneGap3.x原生插件功能目录
5.2  使用插件侦测电量变化
5.3  使用控制台调试
5.3.1  使用Android控制台
5.3.2  使用Xcode控制台
5.4  程序内置浏览器窗口
5.4.1  打开一个浏览器窗口
5.4.2  关闭窗口
5.4.3  事件处理
5.4.4  显示隐藏的网页
5.4.5  执行脚本注入
5.4.6  执行CSS样式注入
第6章  设备信息和系统消息提示
6.1  获取设备相关信息
6.2  系统消息提示对话框
6.2.1  提示警告框
6.2.2  确认对话框
6.2.3  提示输入消息对话框
6.3  系统震动和蜂鸣提示
6.3.1  触发设备蜂鸣
6.3.2  触发设备震动
第7章  Android和iOS文件系统处理
7.1  关于文件系统操作和操作权限
7.1.1  Android文件系统操作权限
7.1.2  了解Android系统的文件夹
7.1.3  iOS文件系统操作权限
..................
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>PhoneGap 3.0移动应用开发实战详解
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>OMAP3原理及系统设计
前言第1章  概述  1.1 OMAP3芒台  1.2 OMAP3530开发套件第2章  示例演示  2.1 硬件连接  2.2 操作系统演示第3章  硬件系统  3.1 OMAP3530芯片  3.2 存储器  3.3 系统电源  3.4 系统时钟  3.5 外围接口第4章  OMAP3530系统设计  4.1 系统框图  4.2 电气特性  4.3 电源设计  4.4 系统时钟设计  4.5 存储电路设计  4.6 外围电路设计第5章  基于OMAP3530的PCB设计  5.1 基本概念  5.2 PCB设计  5.3 电路调试第6章  KIT-OMAP3530软件系统  6.1 KIT-OMAP3530开发环境  6.2 KIT-OMAP3530启动方式  6.3 X-loader简介  6.4 U-boot简介  6.5 Linux Kernel简介  6.6 开源文件系统第7章  Android软件系统  7.1 Android系统结构  7.2 Android SDK开发环境  7.3 创建Android应用程序第8章  Android系统移植  8.1 Git Android源代码下载  8.2 Android内核修改及编译  8.3 Android文件系统编译  8.4 Android文件系统启动脚本及流程第9章  运行Android系统  9.1 在SD卡上运行Android系统  9.2 NandFlash上运行Android系统第10章  Android移植及实例  10.1 Android HAL简介  10.2 Android HAL技术  10.3 Camera的HAL及移植实例参考文献附录A  搭建TFTP服务器附录B  制作双分区SD卡
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>OMAP3原理及系统设计
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android7编程入门经典(第4版)/移动开发经典丛书
第1章  Android编程入门 1
1.1  Android的定义 1
1.1.1  Android版本 2
1.1.2  Android功能 3
1.1.3  Android构架 3
1.1.4  市场中的Android设备 4
1.1.5  Android Market 6
1.2  准备开发所需的工具 6
1.2.1  Android Studio 6
1.2.2  Android SDK 12
1.2.3  创建Android虚拟机 13
1.2.4  Android开发者社区 20
1.3  运行你的第一个Android应用 20
1.4  小结 22
第2章  使用Android Studio进行Android开发 23
2.1  探讨IDE 23
2.2  使用代码自动补全功能 30
2.3  调试应用 31
2.3.1  设置断点 31
2.3.2  导航暂停的代码 35
2.4  发布应用 36
2.5  小结 38
第3章  Activity、Fragment和Intent 39
3.1  理解Activity 40
3.1.1  在Activity上应用样式和主题 45
3.1.2  隐藏Activity的标题 46
3.1.3  显示对话框 48
3.1.4  显示进度对话框 50
3.2  使用Intent链接Activity 53
3.2.1  使用Intent对象返回结果 57
3.2.2  使用Intent对象传递数据 62
3.3  Fragment 67
3.3.1  动态添加fragment 73
3.3.2  fragment的生命周期 76
3.3.3  fragment之间的交互 80
3.3.4  理解Intent对象的概念 83
3.3.5  使用Intent过滤器 85
3.4  显示Notification 85
3.5  小结 89
第4章  了解Android用户界面 91
4.1  屏幕组件介绍 91
4.1.1  视图和ViewGroup 93
4.1.2  FrameLayout 93
4.1.3  LinearLayout(水平)和LinearLayout(垂直) 94
4.1.4  TableLayout 103
4.1.5  RelativeLayout 105
4.1.6  FrameLayout 106
4.1.7  ScrollView 109
4.2  适配显示方向 111
4.3  管理屏幕的方向变化 114
4.3.1  在配置发生变化时保存状态信息 118
4.3.2  检测方向变化 119
4.3.3  控制Activity的方向 119
4.4  使用Action Bar 120
4.5  通过编程创建用户界面 129
4.6  监听UI通知 132
4.7  小结 132
第5章  基于视图的用户界面设计 135
5.1  使用基础视图 136
5.1.1  TextView视图 136
5.1.2  Button、ImageButton、EditText、CheckBox、ToggleButton、RadioButton、
RadioGroup视图 136
5.1.3  ProgressBar视图 145
5.1.4  AutoCompleteTextView视图 152
5.2  使用选择器视图 154
5.2.1  TimePicker视图 154
5.2.2  DatePicker视图 159
5.3  使用列表视图显示长列表 162
5.3.1  ListView视图 162
5.3.2  使用Spinner视图 171
5.4  理解专用fragment 173
5.4.1  使用ListFragment 173
5.4.2  使用DialogFragment 178
5.4.3  使用PreferenceFragment 181
5.5  小结 185
第6章  使用视图显示图片和菜单 189
6.1  使用Image视图显示图片 189
6.1.1  ImageView视图 190
6.1.2  ImageSwitcher 192
6.1.3  GridView 196
6.2  菜单与视图 200
6.2.1  创建辅助方法 200
6.2.2  选项菜单 202
6.2.3  上下文菜单 205
6.3  使用WebView 209
6.4  小结 212
第7章  数据持久化存储 215
7.1  保存和读取用户偏好 215
7.1.1  使用Activity访问偏好数据 216
7.1.2  编程获取和修改偏好数据 224
7.2  使用文件持久保存数据 227
7.2.1  保存到内部存储 227
7.2.2  保存到外部存储(SD卡) 232
7.2.3  正确选择最佳存储方式 234
7.3  创建和使用数据库 235
7.3.1  创建DBAdapter辅助类 235
7.3.2  通过编程使用数据库 241
7.4  小结 247
第8章  Content Provider 249
8.1  在Android中共享数据 249
8.2  使用content provider 250
8.2.1  预定义查询字符串常量 256
8.2.2  指定查询字段 258
8.2.3  筛选 259
8.2.4  排序 259
8.3  创建自定义content provider 260
8.4  使用自定义content provider 268
8.5  小结 274
第9章  消息传送服务 277
9.1  短信服务 277
9.1.1  通过编程发送短信 278
9.1.2  使用Intent发送短信 282
9.1.3  接收短信 282
9.1.4  警告 299
9.2  发送电子邮件 299
9.3  小结 302
第10章  基于位置的服务 303
10.1  显示地图 304
10.1.1  创建项目 304
10.1.2  获取地图API密钥 304
10.1.3  显示地图 305
10.1.4  显示缩放控件 306
10.1.5  切换视图 309
10.1.6  导航至指定位置 310
10.1.7  获取单击位置 312
10.1.8  地址编码与反向地址编码 313
10.2  获取位置数据 316
10.3  位置监控 324
10.4  小结 325
第11章  网络 327
11.1  使用HTTP访问Web服务 328
11.1.1  下载二进制数据 330
11.1.2  下载文本内容 337
11.1.3  使用GET方法访问Web服务 340
11.2  访问JSON服务 346
11.3  小结 354
第12章  开发Android服务 357
12.1  创建自己的服务 357
12.1.1  在服务中执行长时间运行的任务 362
12.1.2  在服务中执行重复任务 367
12.1.3  使用IntentService在独立线程中执行异步任务 370
12.2  在服务和Activity之间建立通信 373
12.3  将Activity与服务绑定 377
12.4  线程的概念 383
12.5  小结 388
附录A  练习答案 391
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android7编程入门经典(第4版)/移动开发经典丛书
