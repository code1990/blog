>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Objective-C高级编程
第1章 自动引用计数　　1
1.1 　什么是自动引用计数　　2
1.2 　内存管理/引用计数　　2
1.2.1 　概要　　2
1.2.2 　内存管理的思考方式　　5
1.2.3 　alloc/retain/release/dealloc实现　　13
1.2.4 　苹果的实现　　17
1.2.5 　autorelease　　20
1.2.6 　autorelease实现　　24
1.2.7 　苹果的实现　　26
1.3 　ARC规则　　29
1.3.1 　概要　　29
1.3.2 　内存管理的思考方式　　30
1.3.3 　所有权修饰符　　30
1.3.4 　规则　　50
1.3.5 　属性　　62
1.3.6 　数组　　63
1.4 　ARC的实现　　65
1.4.1 　__strong修饰符　　65
1.4.2 　__weak修饰符　　67
1.4.3 　__autoreleasing修饰符　　75
1.4.4 　引用计数　　76
第2章 Blocks　　79
2.1 　Blocks概要　　80
2.1.1 　什么是Blocks　　80
2.2 　Blocks模式　　83
2.2.1 　Block语法　　83
2.2.2 　Block类型变量　　85
2.2.3 　截获自动变量值　　88
2.2.4 　__block说明符　　88
2.2.5 　截获的自动变量　　89
2.3 　Blocks的实现　　91
2.3.1 　Block的实质　　91
2.3.2 　截获自动变量值　　99
2.3.3 　__block说明符　　102
2.3.4 　Block存储域　　108
2.3.5 　__block变量存储域　　117
2.3.6 　截获对象　　121
2.3.7 　__block变量和对象　　126
2.3.8 　Block循环引用　　128
2.3.9 　copy/release　　134
第3章 Grand Central Dispatch　　137
3.1 　Grand Central Dispatch（GCD）概要　　138
3.1.1 　什么是GCD　　138
3.1.2 　多线程编程　　140
3.2 　GCD的API　　144
3.2.1 　Dispatch Queue　　144
3.2.2 　dispatch_queue_create　　147
3.2.3 　Main Dispatch Queue/Global Dispatch Queue　　150
3.2.4 　dispatch_set_target_queue　　153
3.2.5 　dispatch_after　　154
3.2.6 　Dispatch Group　　155
3.2.7 　dispatch_barrier_async　　157
3.2.8 　dispatch_sync　　160
3.2.9 　dispatch_apply　　161
3.2.10 　dispatch_suspend / dispatch_resume　　163
3.2.11 　Dispatch Semaphore　　164
3.2.12 　dispatch_once　　166
3.2.13 　Dispatch I/O　　167
3.3 　GCD实现　　169
3.3.1 　Dispatch Queue　　169
3.3.2 　Dispatch Source　　171
附录A 　ARC、Blocks、GCD使用范例　　176
附录B 　参考资料　　182
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Objective-C高级编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS编程（第4版）
前言 xiii
本书适合哪些读者 xiii
第4版有哪些更新 xiii
教学理念 xiv
如何使用本书 xv
本书是如何组织的 xv
代码风格 xvii
版式说明 xvii
开发所需的硬件与软件 xviii
第1章  第一个简单的iOS应用 1
1.1  创建Xcode项目 2
1.2  模型-视图-控制器 4
1.3  设计Quiz 5
1.4  创建视图控制器 6
1.5  创建界面 8
1.6  创建关联 14
1.7  创建模型对象 18
1.8  大功告成 21
1.7  在模拟器上运行应用 22
1.9  安装应用 23
1.9  应用图标 25
1.10  启动图片 27
第2章  Objective-C 29
2.1  对象 29
2.2  使用对象 30
2.3  编写命令行工具RandomItems 33
2.4  创建Objective-C类的子类 38
2.5  深入学习NSArray与NSMutableArray 58
2.6  异常与未知选择器 60
2.7  练习 62
2.8  初级练习：查找问题 62
2.9  中级练习：另一个初始化方法 62
2.10  高级练习：另一个类 63
2.11  关于深入学习部分 63
2.12  深入学习：如何为类命名 63
2.13  深入学习：#import和@import 64
第3章  通过ARC管理内存 65
3.1  栈 65
3.2  堆 66
3.3  指针变量与对象所有权 66
3.4  强引用与弱引用 70
3.5  属性 75
3.6  深入学习：属性合成 81
3.7  深入学习：Autorelease池与ARC历史 83
第4章  视图与视图层次结构 85
4.1  视图基础 86
4.2  视图层次结构 86
4.3  创建UIView子类 88
4.4  在drawRect:方法中自定义绘图 94
4.5  关于开发者文档 105
4.6  初级练习：绘制图像 106
4.7  深入学习：Core Graphics 106
4.8  高级练习：阴影和渐变 108
第5章  视图：重绘与UIScrollView 111
5.1  运行循环和重绘视图 112
5.2  类扩展 114
5.3  使用UIScrollView 115
第6章  视图控制器 119
6.1  创建UIViewController子类 120
6.2  另一个视图控制器 123
6.3  UITabBarController 130
6.4  视图控制器的初始化方法 134
6.5  添加本地通知 135
6.6  加载和显示视图 136
6.7  与视图控制器及其视图进行交互 138
6.8  初级练习：增加一个标签项 139
6.9  中级练习：控制逻辑 139
6.10  深入学习：键值编码 139
6.11  深入学习：Retina显示屏 140
第7章  委托与文本输入 143
7.1  文本框（UITextField） 143
7.2  委托 146
7.3  协议 148
7.4  向屏幕中添加UILabel对象 150
7.5  运动效果 152
7.6  使用调试器 153
7.7  深入学习：main()与UIApplication 157
7.8  中级练习：捏合-缩放 157
第8章  UITableView与UITableViewController 159
8.1  编写Homepwner应用 159
8.2  UITableViewController 160
8.3  UITableView数据源 164
8.4  UITableViewCell对象 170
8.5  代码片段库 175
8.6  初级练习：表格段 178
8.7  中级练习：固定行 178
8.8  高级练习：修改UITableView对象的外观 178
第9章  编辑UITableView 179
9.1  编辑模式 179
9.2  增加行 185
9.3  删除行 187
9.4  移动行 188
9.5  初级练习：更改“删除”按钮的标题 190
9.6  中级练习：禁止移动某个表格行 190
9.7  高级练习：彻底禁止移动某个表格行 190
第10章  UINavigationController 191
10.1  UINavigationController对象 192
10.2  额外的视图控制器 196
10.3  UINavigationController的导航功能 201
10.4  UINavigationBar 205
10.5  初级练习：显示数字键盘 210
10.6  中级练习：关闭数字键盘 210
10.7  高级练习：压入更多视图控制器 210
第11章  相机 211
11.1  通过UIImageView对象显示照片 212
11.2  通过UIImagePickerController拍摄照片 216
11.3  创建BNRImageStore 220
11.4  NSDictionary 222
11.5  创建并使用键 225
11.6  使用BNRImageStore 227
11.7  关闭键盘 228
11.8  初级练习：编辑照片 230
11.9  中级练习：删除照片 230
11.10  高级练习：Camera Overlay 230
11.11  深入学习：导航实现文件 230
11.12  深入学习：摄像 233
第12章  触摸事件与UIResponder 235
12.1  触摸事件 235
12.2  创建TouchTracker应用 237
12.3  实现BNRDrawView，完成绘图功能 239
12.4  处理触摸事件并创建线条对象 240
12.5  初级练习：保存与读取 245
12.6  中级练习：颜色 245
12.7  高级练习：圆圈 246
12.8  深入学习：响应对象链 246
12.9  深入学习：UIControl 247
第13章  UIGestureRecognizer与UIMenuController 249
13.1  UIGestureRecognizer子类 250
13.2  用UITapGestureRecognizer对象识别“按下”手势 250
13.3  同时添加多种触摸手势 252
13.4  UIMenuController 254
13.5  UILongPressGestureRecognizer 256
13.6  UIPanGestureRecognizer以及同时识别多个手势 257
13.7  深入学习：UIMenuController与UIResponderStandardEditActions 260
13.8  深入学习：再谈UIGestureRecognizer 261
13.9  中级练习：修正错误 262
13.10  高级练习：速度与宽度 262
13.11  高级练习：颜色 262
第14章  调试工具 263
14.1  仪表 263
14.2  Instruments 265
14.3  静态分析器 275
14.4  项目、目标和构建设置 277
第15章  自动布局入门 283
15.1  通用化Homepwner 283
15.2  自动布局系统 285
15.3  在Interface Builder中添加约束 289
15.4  调试约束问题 298
15.5  初级练习：打造完美界面 306
15.6  中级练习：通用化Quiz 307
15.7  深入学习：使用_autolayoutTrace方法调试约束问题 307
15.8  深入学习：使用多个XIB文件 308
第16章  在代码中使用自动布局 309
16.1  视觉化格式语言 310
16.2  创建约束 311
16.3  添加约束 312
16.4  固有内容大小 315
16.5  另一种添加方式 316
16.6  深入学习：NSAutoresizingMaskLayoutConstraint 318
第17章  自动转屏，UIPopoverController与模态视图控制器 321
17.1  自动转屏 321
17.2  自动转屏通告机制 324
17.3  UIPopoverController 326
17.4  更多的模态视图控制器 329
17.5  线程安全的单例 337
17.6  初级练习：为另一个类添加线程安全的单例 339
17.7  高级练习：UIPopoverController对象的外观 339
17.8  深入学习：位掩码 339
17.9  深入学习：视图控制器之间的关系 340
第18章  保存、读取与应用状态 345
18.1  固化 345
18.2  应用沙盒 348
18.3  NSKeyedArchiver与NSKeyedUnarchiver 350
18.4  应用状态与状态切换 353
18.5  通过NSData将数据写入文件 356
18.6  NSNotificationCenter和内存过低警告 358
18.7  模型-视图-控制器-存储设计模式 361
18.8  初级练习：PNG 361
18.9  深入学习：应用的状态切换 362
18.10  深入学习：文件系统的读取和写入 363
18.11  深入学习：应用程序包 366
第19章  创建UITableViewCell子类 369
19.1  创建BNRItemCell 369
19.2  处理图片 377
19.3  由UITableViewCell对象转发动作消息 380
19.4  捕获变量 385
19.5  初级练习：设置颜色 386
19.6  高级练习：缩放 387
19.7  深入练习：UICollectionView 387
第20章  动态字体 389
20.1  使用用户首选字体 390
20.2  响应用户首选字体的改变 392
20.3  修改自动布局约束 393
20.4  确定用户首选字体大小 395
20.5  修改BNRItemCell 397
第21章  Web服务与UIWebView 403
21.1  Web服务 404
21.2  UIWebView 414
21.3  认证信息 416
25.4  中级练习：加强UIWebView 418
21.5  高级练习：课程预告 418
21.6  深入学习：HTTP请求主体 419
第23章  Core Data 431
23.1  对象-关系映射 431
23.2  用Core Data重写BNRItemStore的数据保存功能 432
23.3  再谈SQL 450
23.4  Faults 451
23.5  各种存取机制的优缺点 453
23.6  初级练习：Asset的iPad界面 454
23.7  中级练习：增加BNRAssetType对象 454
23.8  高级练习：显示某种类型的BNRItem对象 454
第24章  状态恢复 455
24.1  状态恢复的工作原理 455
24.2  启用状态恢复 456
24.3  恢复标识和恢复类 457
24.4  状态恢复与应用生命周期 459
24.5  恢复视图控制器 461
24.6  编码状态数据 464
24.7  保存视图状态 465
24.8  中级练习：为另一个应用启用状态恢复 467
24.9  深入学习：设置快照 467
第25章  本地化 469
25.1  通过NSNumberFormatter实施国际化 470
25.2  资源的本地化 473
25.3  NSLocalizedString()与字符串对照表 477
25.4  初级练习：再添加一套本地化资源 480
25.5  深入学习：NSBundle在国际化过程中的作用 480
25.6  深入学习：不通过基础国际化对XIB文件实施本地化 481
第26章  NSUserDefaults 483
26.1  NSUserDefaults 483
26.2  设置束 487
第27章  控制动画 491
27.1  基础动画 491
27.2  关键帧动画 494
27.3  在动画完成后执行特定的代码 496
27.4  弹簧动画 497
27.5  中级练习：提升Quiz的用户体验 498
第28章  UIStoryboard 499
28.1  创建Storyboard文件 499
28.2  Storyboard文件中的UITableViewController 503
28.3  Segue 506
28.4  改变颜色 512
28.5  传递数据 513
28.6  Storyboards的优缺点 520
28.7  深入学习：状态恢复 521
第29章  后记 523
29.1  接下来做什么 523
29.2  结束语 524
第22章  UISplitViewController 421
22.1  在Nerdfeed中使用UISplitViewController 422
22.2  在竖排模式下显示主视图控制器 425
22.3  将Nerdfeed改为通用应用 428
索引 525
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS编程（第4版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Effective Objective-C 2.0
译者序
前言
致谢
第1章　熟悉objective-c 1
第1条：了解objective-c语言的起源 1
第2条：在类的头文件中尽量少引入其他头文件 4
第3条：多用字面量语法，少用与之等价的方法 7
第4条：多用类型常量，少用#define预处理指令 11
第5条：用枚举表示状态、选项、状态码 14
第2章　对象、消息、运行期 21
第6条：理解“属性”这一概念 21
第7条：在对象内部尽量直接访问实例变量 28
第8条：理解“对象等同性”这一概念 30
第9条：以“类族模式”隐藏实现细节 35
第10条：在既有类中使用关联对象存放自定义数据 39
第11条：理解objc_msgsend的作用 42
第12条：理解消息转发机制 46
第13条：用“方法调配技术”调试“黑盒方法” 52
第14条：理解“类对象”的用意 56
.第3章　接口与api设计 60
第15条：用前缀避免命名空间冲突 60
第16条：提供“全能初始化方法” 64
第17条：实现description方法 69
第18条：尽量使用不可变对象 73
第19条：使用清晰而协调的命名方式 78
第20条：为私有方法名加前缀 83
第21条：理解objective-c错误模型 85
第22条：理解nscopying协议 89
第4章　协议与分类 94
第23条：通过委托与数据源协议进行对象间通信 94
第24条：将类的实现代码分散到便于管理的数个分类之中 101
第25条：总是为第三方类的分类名称加前缀 104
第26条：勿在分类中声明属性 106
第27条：使用“class-continuation分类”隐藏实现细节 108
第28条：通过协议提供匿名对象 114
第5章　内存管理 117
第29条：理解引用计数 117
第30条：以arc简化引用计数 122
第31条：在dealloc方法中只释放引用并解除监听 130
第32条：编写“异常安全代码”时留意内存管理问题 132
第33条：以弱引用避免保留环 134
第34条：以“自动释放池块”降低内存峰值 137
第35条：用“僵尸对象”调试内存管理问题 141
第36条：不要使用retaincount 146
第6章　块与大中枢派发 149
第37条：理解“块”这一概念 149
第38条：为常用的块类型创建typedef 154
第39条：用handler块降低代码分散程度 156
第40条：用块引用其所属对象时不要出现保留环 162
第41条：多用派发队列，少用同步锁 165
第42条：多用gcd，少用performselector系列方法 169
第43条：掌握gcd及操作队列的使用时机 173
第44条：通过dispatch group机制，根据系统资源状况来执行任务 175
第45条：使用dispatch_once来执行只需运行一次的线程安全代码 179
第46条：不要使用dispatch_get_current_queue 180
第7章　系统框架 185
第47条：熟悉系统框架 185
第48条：多用块枚举，少用for循环 187
第49条：对自定义其内存管理语义的collection使用无缝桥接 193
第50条：构建缓存时选用nscache而非nsdictionary 197
第51条：精简initialize与load的实现代码 200
第52条：别忘了nstimer会保留其目标对象 205
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Effective Objective-C 2.0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Objective-C编程之道
第一部分　设计模式初体验
第1章　你好，设计模式 2
1.1　这是一本什么书 2
1.2　开始前的准备 2
1.3　预备知识 3
1.4　似曾相识的设计 3
1.5　设计模式的起源——模型、视图和 控制器 4
1.5.1　在模型对象中封装数据和基 本行为 4
1.5.2　使用视图对象向用户展示信息 5
1.5.3　用控制器对象联系起模型和 视图 5
1.5.4　作为复合设计模式的MVC 5
1.6　影响设计的几个问题 6
1.6.1　针对接口编程，而不是针对实现编程 7
1.6.2　@protocol与抽象基类 7
1.6.3　对象组合与类继承 8
1.7　本书用到的对象和类 9
1.7.1　类图 9
1.7.2　对象图 12
1.8　本书如何安排模式的讲解 13
1.9　总结 13
第2章　案例分析：设计一个应用程序 14
2.1　想法的概念化 14
2.2　界面外观的设计 15
2.3　架构设计 17
2.3.1　视图管理 18
2.3.2　如何表现涂鸦 20
2.3.3　如何表现保存的涂鸦图 24
2.3.4　用户操作 27
2.4　所用设计模式的回顾 32
2.5　总结 33
第二部分　对象创建
第3章　原型 36
3.1　何为原型模式 36
3.2　何时使用原型模式 37
3.3　浅复制与深复制 38
3.4　使用Cocoa Touch框架中的对象 复制 39
3.5　为Mark聚合体实现复制方法 39
3.6　将复制的Mark用作“图样模板” 47
3.7　总结 49
第4章　工厂方法 50
4.1　何为工厂方法模式 50
4.2　何时使用工厂方法 51
4.3　为何这是创建对象的安全方法 51
4.4　在TouchPainter中生成不同画布 51
4.5　在Cocoa Touch框架中应用工厂 方法 57
4.6　总结 58
第5章　抽象工厂 59
5.1　把抽象工厂应用到TouchPainter 应用程序 60
5.2　在Cocoa Touch框架中使用抽象 工厂 66
5.3　总结 68
第6章　生成器 69
6.1　何为生成器模式 69
6.2　何时使用生成器模式 70
6.3　构建追逐游戏中的角色 71
6.4　总结 79
第7章　单例 80
7.1　何为单例模式 80
7.2　何时使用单例模式 81
7.3　在Objective-C中实现单例模式 81
7.4　子类化Singleton 85
7.5　线程安全 85
7.6　在Cocoa Touch框架中使用单例 模式 86
7.6.1　使用UIApplication类 86
7.6.2　使用UIAccelerometer类 86
7.6.3　使用NSFileManager类 86
7.7　总结 87
第三部分　接口适配
第8章　适配器 90
8.1　何为适配器模式 90
8.2　何时使用适配器模式 92
8.3　委托 92
8.4　用Objective-C协议实现适配器模式 93
8.5　用Objective-C的块在iOS 4中实现 适配器模式 99
8.5.1　块引用的声明 99
8.5.2　块的创建 100
8.5.3　把块用作适配器 100
8.6　总结 104
第9章　桥接 105
9.1　何为桥接模式 105
9.2　何时使用桥接模式 106
9.3　创建iOS版虚拟仿真器 106
9.4　总结 112
第10章　外观 113
10.1　何为外观模式 113
10.2　何时使用外观模式 114
10.3　为子系统的一组接口提供简化的 接口 114
10.4　在TouchPainter应用程序中使用外 观模式 117
10.5　总结 119
第四部分　对象去耦
第11章　中介者 122
11.1　何为中介者模式 122
11.2　何时使用中介者模式 124
11.3　管理TouchPainter应用程序中的 视图迁移 124
11.3.1　修改迁移逻辑的困难 126
11.3.2　集中管理UI交通 127
11.3.3　在Interface Builder中使用CoordinatingController 132
11.4　总结 135
第12章　观察者 136
12.1　何为观察者模式 136
12.2　何时使用观察者模式 138
12.3　在模型-视图-控制器中使用观察 者模式 138
12.4　在Cocoa Touch框架中使用观察者 模式 138
12.4.1　通知 139
12.4.2　键-值观察 139
12.5　在TouchPainter中更新CanvasView 上的线条 140
12.6　总结 149
第五部分　抽象集合
第13章　组合 152
13.1　何为组合模式 152
13.2　何时使用组合模式 154
13.3　理解TouchPainter中Mark的使用 154
13.4　在Cocoa Touch框架中使用组合 模式 163
13.5　总结 164
第14章　迭代器 165
14.1　何为迭代器模式 165
14.2　何时使用迭代器模式 167
14.3　在Cocoa Touch框架中使用迭代器 模式 167
14.3.1　NSEnumerator 167
14.3.2　基于块的枚举 168
14.3.3　快速枚举 169
14.3.4　内部枚举 170
14.4　遍历Scribble的顶点 170
14.5　总结 178
第六部分　行为扩展
第15章　访问者 180
15.1　何为访问者模式 180
15.2　何时应用访问者模式 182
15.3　用访问者绘制TouchPainter中的 Mark 182
15.4　访问者的其他用途 189
15.5　能不能用范畴代替访问者模式 189
15.6　总结 189
第16章　装饰 190
16.1　何为装饰模式 190
16.2　何时使用装饰模式 191
16.3　改变对象的“外表”和“内容” 192
16.4　为UIImage创建图像滤镜 192
16.4.1　通过真正的子类实现装饰 193
16.4.2　通过范畴实现装饰 201
16.5　总结 206
第17章　责任链 207
17.1　何为责任链模式 207
17.2　何时使用责任链模式 208
17.3　在RPG游戏中使用责任链模式 209
17.4　总结 214
第七部分　算法封装
第18章　模板方法 216
18.1　何为模板方法模式 216
18.2　何时使用模板方法 217
18.3　利用模板方法制作三明治 217
18.4　保证模板方法正常工作 224
18.5　向模板方法增加额外的步骤 225
18.6　在Cocoa Touch框架中使用模板 方法 228
18.6.1　UIView类中的定制绘图 228
18.6.2　Cocoa Touch框架中的其他 模板方法实现 228
18.7　总结 229
第19章　策略 230
19.1　何为策略模式 230
19.2　何时使用策略模式 231
19.3　在UITextField中应用验证策略 231
19.4　总结 239
第20章　命令 240
20.1　何为命令模式 240
20.2　何时使用命令模式 241
20.3　在Cocoa Touch框架中使用命令 模式 241
20.3.1　NSInvocation对象 242
20.3.2　NSUndoManager 243
20.4　在TouchPainter中实现撤销与恢 复 243
20.4.1　使用NSUndoManager实 现绘图与撤销绘图 244
20.4.2　自制绘图与撤销绘图的 基础设施 248
20.4.3　允许用户触发撤销与恢复 255
20.5　命令还能做什么 256
20.6　总结 257
第八部分　性能与对象访问
第21章　享元 260
21.1　何为享元模式 260
21.2　何时使用享元模式 262
21.3　创建百花池 262
21.4　总结 269
第22章　代理 270
22.1　何为代理模式 270
22.2　何时使用代理模式 271
22.3　用虚拟代理懒加载图像 272
22.4　在Cocoa Touch框架中使用代理 模式 277
22.5　总结 279
第九部分　对象状态
第23章　备忘录 282
23.1　何为备忘录模式 282
23.2　何时使用备忘录模式 283
23.3　在TouchPainter中使用备忘录模式 284
23.3.1　涂鸦图的保存 284
23.3.2　涂鸦图的恢复 285
23.3.3　ScribbleMemento的 设计与实现 286
23.4　Cocoa Touch框架中的备忘录模式 295
23.5　总结 297
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Objective-C编程之道
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>cocos2d-x手机游戏开发
第1 章  智能手机操作系统介绍　　 1
1.1  iOS　　 2
1.1.1  iOS 常见特性　　 2
1.1.2  App Store 　　 3
1.2  Android　　　 3
1.2.1  Android 常见特性　　 3
1.2.2  Android 应用商城　　 4
1.3  其他手机操作系统　　 4
1.3.1  OPhone 　　 4
1.3.2  沃Phone 　　 4
1.3.3  LEOS 　　 5
1.4  总结　　 5
第2 章  游戏及游戏引擎介绍　　 6
2.1  游戏介绍　　 6
2.2  游戏引擎介绍　　 7
2.2.1  渲染引擎　　 8
2.2.2  物理引擎　　 8
2.2.3  周边工具　　10
2.3  总结　　 10
第3 章  进入cocos2d 的世界　　 11
3.1  cocos2d 介绍　　 11
3.2  cocos2d-iphone 介绍　　 12
3.3  cocos2d-x 介绍　　13
3.4  cocos2d-x 游戏分享　　 13
3.5  其他cocos2d 版本介绍　　 14
3.6  总结　　 15
第4 章  搭建跨平台的开发环境　　 16
4.1  环境说明　　 16
4.2  环境搭建　　 16
4.2.1  安装Visual Studio　　 17
4.2.2  安装Cygwin　　 19
4.2.3  安装iOS 环境　　 23
4.2.4  安装Android 环境　　 26
4.2.5  安装沃Phone 环境　　 28
4.2.6  安装cocos2d-x 引擎　　 35
4.3  环境测试之Hello World 案例　　 35
4.3.1  Windows 运行　　 36
4.3.2  iOS 运行　　 37
4.3.3  Andriod 运行　　 38
4.3.4  沃Phone 运行　　 38
4.4  总结　　 40
第5 章  cocos2d-x 引擎基础使用　　 41
5.1  整体架构　　 41
5.1.1  导演　　 44
5.1.2  摄像机　　 46
5.1.3  场景　　 47
5.1.4  布景　　 48
5.1.5  人物角色　　 49
5.1.6  动作　　51
5.2  目录结构　　 51
5.3  坐标体系　　 53
5.4  跨平台常量　　54
5.5  图形　　 55
5.6  动作　　 56
5.7  菜单　　 59
5.8  事件　　 60
5.9  变量自动释放　　 61
5.10  总结　　 62
第6 章  cocos2d-x 之高级特性　　 63
6.1  物理引擎　　63
6.1.1  世界　　 63
6.1.2  刚体及刚体定义　　 65
6.1.3  形状　　 65
6.1.4  关联及关联定义　　 66
6.1.5  链接及链接定义　　 66
6.1.6  使用案例　　 66
6.2  粒子系统　　 67
6.2.1  重力式粒子系统　　 71
6.2.2  放射式粒子系统　　 72
6.3  声音模块　　 74
6.4  总结　　 76
第7 章  cocos2d-x 之周边工具　　 77
7.1  沃Phone 应用程序打包工具　　 77
7.1.1  软件包设置　　 78
7.1.2  应用配置　　 80
7.1.3  添加支持文件　　 83
7.1.4  保存编译　　 83
7.2  图片编辑器　　 84
7.3  地图编辑工具　　 85
7.4  粒子系统设计工具　　 88
7.5  总结　　 90
第8 章  cocos2d-x 之交叉编译　　 91
8.1  交叉编译到iOS 平台　　 91
8.1.1  新建iOS 项目　　 91
8.1.2  交叉编译　　 93
8.1.3  打包运行　　 93
8.2  交叉编译到Android 平台　　 93
8.2.1  新建Android 项目　　 94
8.2.2  生成编译脚本　　 94
8.2.3  交叉编译　　96
8.2.4  打包运行　　96
8.3  交叉编译到沃Phone 平台　　97
8.3.1  新建沃Phone 项目　　 97
8.3.2  生成编译脚本　　 99
8.3.3  交叉编译　　101
8.3.4  打包运行　　102
8.4  总结　　102
第9 章  cocos2d-x 之实用篇　　 103
9.1  游戏社交平台　　103
9.2  手机广告平台　　104
9.3  推广墙平台　　105
9.4  技术准备　　105
9.4.1 cocos2d-x 调用Objective-C　　 106
9.4.2  cocos2d-x 调用Java 　　 107
9.5  案例实现　　111
9.5.1  场景分析　　111
9.5.2  环境准备　　111
9.5.3  游戏设计　　111
9.5.4  游戏实现　　112
9.5.5  场景总结　　125
9.6  总结　　125
第10 章  “魔塔”案例之基础篇　　 126
10.1  先熟悉一下游戏　　126
10.2  准备工作　　 126
10.3  绘制最简单的游戏地图　　127
10.4  人物行走　　130
10.5  碰撞检测　　144
10.6  总结　　146
第11 章  “魔塔”案例之高级篇　　147
11.1  重构代码　　147
11.1.1  分离场景和图层　　 147
11.1.2  分离游戏对象　　 149
11.1.3  小结　　 163
11.2  添加更多游戏元素　　 165
11.2.1  添加怪物　　 166
11.2.2  添加物品和门　　 175
11.2.3  添加对象层　　 179
11.2.4  小结　　188
11.3  总结　　189
第12 章  未来展望　　190
12.1  智能手机系统的发展趋势　　 190
12.1.1  iOS 的发展趋势　　 190
12.1.2  Android 的发展趋势　　191
12.1.3  沃Phone 的发展趋势　　191
12.2  手机游戏的发展趋势　　 192
12.2.1  手机单机游戏　　192
12.2.2  手机网络游戏　　 193
12.3  cocos2d-x 引擎的发展趋势　　 194
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>cocos2d-x手机游戏开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>黑客攻防技术宝典
目 录

第1章　iOS安全基础知识　　1
1.1 　iOS硬件/设备的类型　　1
1.2 　苹果公司如何保护App Store　　2
1.3 　理解安全威胁　　3
1.4 　理解iOS的安全架构　　4
1.4.1 　更小的受攻击面　　4
1.4.2 　精简过的iOS　　5
1.4.3 　权限分离　　5
1.4.4 　代码签名　　5
1.4.5 　数据执行保护　　6
1.4.6 　地址空间布局随机化　　6
1.4.7 　沙盒　　6
1.5 　iOS攻击简史　　7
1.5.1 　Libtiff　　7
1.5.2 　短信攻击　　8
1.5.3 　Ikee蠕虫　　8
1.5.4 　Storm8　　9
1.5.5 　SpyPhone　　10
1.5.6 　Pwn2Own 2010　　10
1.5.7 　Jailbreakme.com 2（“Star”）　　10
1.5.8 　Jailbreakme.com 3（“Saffron”）　　11
1.6 　小结　　11
第2章　企业中的iOS　　12
2.1 　iOS配置管理　　12
2.1.1 　移动配置描述文件　　13
2.1.2 　iPhone配置实用工具　　14
2.2 　移动设备管理　　21
2.2.1 　MDM网络通信　　21
2.2.2 　Lion Server描述文件管理器　　22
2.3 　小结　　36
第3章　加密　　37
3.1 　数据保护　　37
3.2 　对数据保护的攻击　　40
3.2.1 　对用户密码的攻击　　40
3.2.2 　iPhone Data Protection Tools　　43
3.3 　小结　　54
第4章　代码签名和内存保护　　55
4.1 　强制访问控制　　56
4.1.1 　AMFI钩子　　56
4.1.2 　AMFI和execv　　57
4.2 　授权的工作原理　　59
4.2.1 　理解授权描述文件　　59
4.2.2 　如何验证授权文件的有效性　　62
4.3 　理解应用签名　　62
4.4 　深入了解特权　　64
4.5 　代码签名的实施方法　　65
4.5.1 　收集和验证签名信息　　65
4.5.2 　如何在进程上实施签名　　68
4.5.3 　iOS如何确保已签名页不发生改变　　72
4.6 　探索动态代码签名　　73
4.6.1 　MobileSafari的特殊性　　73
4.6.2 　内核如何处理即时编译　　75
4.6.3 　MobileSafari内部的攻击　　77
4.7 　破坏代码签名机制　　78
4.7.1 　修改iOS shellcode　　79
4.7.2 　在iOS上使用Meterpreter　　83
4.7.3 　取得App Store的批准　　85
4.8 　小结　　86
第5章　沙盒　　87
5.1 　理解沙盒　　87
5.2 　在应用开发中使用沙盒　　89
5.3 　理解沙盒的实现　　95
5.3.1 　理解用户空间库的实现　　95
5.3.2 　深入内核　　98
5.3.3 　沙盒机制对App Store应用和平台应用的影响　　109
5.4 　小结　　113
第6章　对iOS应用进行模糊测试　　114
6.1 　模糊测试的原理　　114
6.2 　如何进行模糊测试　　115
6.2.1 　基于变异的模糊测试　　116
6.2.2 　基于生成的模糊测试　　116
6.2.3 　提交和监测测试用例　　117
6.3 　对Safari进行模糊测试　　118
6.3.1 　选择接口　　118
6.3.2 　生成测试用例　　118
6.3.3 　测试和监测应用　　119
6.4 　PDF模糊测试中的冒险　　122
6.5 　对快速查看（Quick Look）的模糊测试　　126
6.6 　用模拟器进行模糊测试　　127
6.7 　对MobileSafari进行模糊测试　　130
6.7.1 　选择进行模糊测试的接口　　130
6.7.2 　生成测试用例　　130
6.7.3 　MobileSafari的模糊测试与监测　　131
6.8 　PPT模糊测试　　133
6.9 　对SMS的模糊测试　　134
6.9.1 　SMS基础知识　　135
6.9.2 　聚焦协议数据单元模式　　136
6.9.3 　PDUspy的使用　　138
6.9.4 　用户数据头信息的使用　　139
6.9.5 　拼接消息的处理　　139
6.9.6 　其他类型UDH数据的使用　　139
6.9.7 　用Sulley进行基于生成的模糊测试　　141
6.9.8 　SMS iOS注入　　145
6.9.9 　SMS的监测　　146
6.9.10 　SMS bug　　151
6.10 　小结　　153
第7章　漏洞攻击　　154
7.1 　针对bug类的漏洞攻击　　154
7.2 　理解iOS系统自带的分配程序　　156
7.2.1 　区域　　156
7.2.2 　内存分配　　157
7.2.3 　内存释放　　157
7.3 　驯服iOS的分配程序　　158
7.3.1 　所需工具　　158
7.3.2 　与分配/释放有关的基础知识　　159
7.4 　理解TCMalloc　　167
7.4.1 　大对象的分配和释放　　167
7.4.2 　小对象的分配　　168
7.4.3 　小对象的释放　　168
7.5 　驯服TCMalloc　　168
7.5.1 　获得可预知的堆布局　　168
7.5.2 　用于调试堆操作代码的工具　　170
7.5.3 　堆风水：以TCMalloc对算术漏洞进行攻击　　172
7.5.4 　以TCMalloc就对象生存期问题进行漏洞攻击　　175
7.6 　对ASLR的挑战　　176
7.7 　案例研究：Pwn2Own 2010　　177
7.8 　测试基础设施　　181
7.9 　小结　　181
第8章　面向返回的程序设计　　182
8.1 　ARM基础知识　　182
8.1.1 　iOS的调用约定　　183
8.1.2 　系统调用的调用约定　　183
8.2 　ROP简介　　185
8.2.1 　ROP与堆bug　　186
8.2.2 　手工构造ROP有效载荷　　187
8.2.3 　ROP有效载荷构造过程的自动化　　191
8.3 　在iOS中使用ROP　　193
8.4 　iOS中ROP shellcode的示例　　195
8.4.1 　用于盗取文件内容的有效载荷　　196
8.4.2 　利用ROP结合两种漏洞攻击程序（JailBreakMe v3）　　202
8.5 　小结　　206
第9章　内核的调试与漏洞攻击　　207
9.1 　内核的结构　　207
9.2 　内核的调试　　208
9.3 　内核扩展与IOKit驱动程序　　213
9.3.1 　对IOKit驱动程序对象树的逆向处理　　213
9.3.2 　在内核扩展中寻找漏洞　　216
9.3.3 　在IOKit驱动程序中寻找漏洞　　219
9.4 　内核漏洞攻击　　222
9.4.1 　任意内存的重写　　223
9.4.2 　未初始化的内核变量　　227
9.4.3 　内核栈缓冲区溢出　　231
9.4.4 　内核堆缓冲区溢出　　236
9.5 　小结　　245
第10章　越狱　　246
10.1 　为何越狱　　246
10.2 　越狱的类型　　247
10.2.1 　越狱的持久性　　247
10.2.2 　漏洞攻击程序的类型　　248
10.3 　理解越狱过程　　249
10.3.1 　对bootrom进行漏洞攻击　　250
10.3.2 　引导ramdisk　　250
10.3.3 　为文件系统越狱　　250
10.3.4 　安装完美越狱漏洞攻击程序　　251
10.3.5 　安装AFC2服务　　251
10.3.6 　安装基本实用工具　　252
10.3.7 　应用转存　　253
10.3.8 　应用包安装　　254
10.3.9 　安装后的过程　　255
10.4 　执行内核有效载荷和补丁　　255
10.4.1 　内核状态修复　　255
10.4.2 　权限提升　　256
10.4.3 　为内核打补丁　　257
10.4.4 　安全返回　　267
10.5 　小结　　268
第11章　基带攻击　　269
11.1 　GSM基础知识　　270
11.2 　建立OpenBTS　　272
11.2.1 　硬件要求　　272
11.2.2 　OpenBTS的安装和配置　　273
11.3 　协议栈之下的RTOS　　276
11.3.1 　Nucleus PLUS　　276
11.3.2 　ThreadX　　277
11.3.3 　REX/OKL4/Iguana　　277
11.3.4 　堆的实现　　278
11.4 　漏洞分析　　281
11.4.1 　获得并提取基带固件　　281
11.4.2 　将固件镜像载入IDA Pro　　283
11.4.3 　应用/基带处理器接口　　283
11.4.4 　栈跟踪与基带核心转储　　283
11.4.5 　受攻击面　　284
11.4.6 　二进制代码的静态分析　　285
11.4.7 　由规范引路的模糊测试　　285
11.5 　对基带的漏洞攻击　　286
11.5.1 　本地栈缓冲区溢出：AT+XAPP　　286
11.5.2 　ultrasn0w解锁工具　　287
11.5.3 　空中接口可利用的溢出　　293
11.6 　小结　　299
附录 　参考资料　　300

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>黑客攻防技术宝典
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS编程
简介	i
本书适合哪些读者	i
第二版有哪些更新？	i
教学理念	ii
如何使用本书	iii
本书是如何组织的	iii
代码风格	v
版式说明	vi
开发所需的硬件与软件	vi
第1章  第一个简单的iOS应用	1
1.1  创建Xcode项目	2
1.2  创建界面	5
1.3  模型-视图-控制器	10
1.4  声明	13
声明实例变量	13
声明方法	14
1.5  创建关联	15
设置指针	15
设置目标（target）和动作（action）	17
关联小结	19
1.6  实现方法	20
1.7  针对模拟器构建并运行应用	21
1.8  安装应用	23
1.9  应用图标	24
1.10  启动图片	27
第2章  Objective-C	31
2.1  对象	31
2.2  使用实例	32
创建对象	32
发送消息	33
释放对象	34
2.3  编写命令行工具RandomPossessions	35
NSString	38
NSArray与NSMutableArray	39
2.4  子类化Objective-C类	40
实例变量	44
存取方法	45
实例方法	48
初始化方法	49
其他初始化方法与初始化方法链	52
类方法	53
测试子类	55
2.5  异常与控制台窗口	56
2.6  快速枚举	57
2.7  练习	58
第3章  内存管理	59
3.1  内存管理基础	59
C语言的内存管理	59
通过对象管理内存	61
3.2  引用计数	61
使用retain计数	61
使用autorelease	64
存取方法和内存管理	67
实现dealloc	69
通过属性机制简化存取方法	70
copy和mutableCopy	72
Retain计数规则	73
3.3  深入学习：再谈内存管理	74
第4章  委托机制与Core Location	77
4.1  项目、目标和框架	77
4.2  Core Location	79
通过CLLocationManager获取更新数据	81
4.3  委托机制	82
协议	83
协议方法	84
委托机制、控制器对象和内存管理	85
4.4  使用调试器	86
4.5  练习：方位	91
4.6  深入学习：构建阶段、编译器错误和连接器错误	91
预处理（Preprocessing）	92
编译	93
连接	94
第5章  MapKit与文本输入	97
5.1  对象图	97
5.2  MapKit框架	99
5.3  界面属性	99
5.4  设置MapView对象的委托对象	102
使用文档	103
创建MKAnnotation子类	108
标记位置	112
完成Whereami	113
5.5  练习：扩充标注	114
5.6  练习：根据地理位置获取城市信息	114
第6章  创建UIView子类	115
6.1  创建自定义视图	116
drawRect:方法	116
创建UIView实例	118
6.2  绘制文字和阴影	120
6.3  使用UIScrollView	121
6.4  实现缩放功能	122
6.5  隐藏状态条	123
6.6  练习：颜色	125
6.7  深入学习：Retain循环	125
6.8  深入学习：重画视图	125
第7章  视图控制对象	127
7.1  视图控制对象与XIB文件	127
7.2  使用视图控制对象	129
创建UITabBarController对象	130
创建视图控制对象和标签项	131
为视图控制对象创建视图	135
深入浅出XIB：介绍文件所有者	137
7.3  视图的显示和消失	142
7.4  视图控制对象的生命周期与内存过低警告	142
7.5  UIViewController子类与模板	146
7.6  练习：地图标签	147
第8章  方向感应器	149
8.1  设置方向感应器	149
8.2  获取方向感应器数据	151
8.3  加速方向与加速数值	151
8.4  使用加速感应器数据	151
8.5  使加速感应器数据更“平滑”	152
8.6  侦测摇动	153
8.7  练习：改变颜色	155
8.8  深入学习：滤波与频率	155
8.9  深入学习：Retina显示屏	156
第9章  通告机制与设备转动	159
9.1  通告中心	159
9.2  UIDevice通告	160
9.3  自动转屏	161
用代码设置自动缩放掩码与按位运算符	167
9.4  强制使用横排模式	169
9.5  练习：设备近身通告	170
深入学习：覆盖自动转屏	170
第10章  UITableView与UITableViewController	171
10.1  编写Homepwner应用	171
10.2  UITableViewController	172
创建UITableViewController子类	173
10.3  UITableView数据源	176
PossessionStore：单实例对象	177
实现数据源方法	180
10.4  UITableViewCell对象	182
创建并获取UITableViewCell对象	183
重用UITableViewCell对象	185
10.5  代码片段库	186
10.6  练习：表格段	189
第11章  编辑UITableView	191
11.1  编辑模式	191
11.2  增加行	197
11.3  删除行	198
11.4  移动行	199
第12章  UINavigationController	203
12.1  UINavigationController	204
UINavigationBar	207
12.2  加入额外的UIViewController	211
12.3  UINavigationController的导航功能	217
将视图控制对象压入栈	217
视图控制对象之间的数据传递	219
视图的显示和消失	221
12.4  练习：数字键盘（Number Pad）	221
第13章  相机	223
13.1  通过UIImageView显示图片	223
通过UIImagePickerController拍摄照片	226
ImageStore	231
NSDictionary	232
创建并使用键	234
隐藏键盘	237
13.2  练习：删除图片	238
13.2  深入：摄像	238
第14章  UIPopoverController与模态视图控制对象	241
14.1  将Homepwner改写为通用应用	242
14.2  UIPopoverController	244
14.3  模态视图控制对象	246
关闭模态视图控制对象	249
模式视图控制对象的样式	250
编写视图控制对象的委托协议	252
模态视图控制对象的过渡动画	254
第15章  保存、读取与多任务处理	257
15.1  应用沙盒	257
获取文件路径	258
15.2  固化	260
对象的固化	260
对象的解固	262
15.3  应用状态、状态切换与多任务处理	265
15.4  通过NSData保存数据	269
15.5  再谈内存过低警告	271
15.6  “模型-视图-控制器-存储”设计模式	272
15.7  练习：为Whereami增加固化功能	272
15.8  深入：应用状态的切换	272
15.9  深入：文件系统的读取和写入	273
15.10  深入：程序包	276
第16章  创建UITableViewCell子类	279
16.1  创建HomepwnerItemCell	280
创建子视图	281
子视图的布局	282
使用UITableViewCell子类对象	283
16.2  处理图片	284
16.3  练习：辅助指示视图	289
16.4  练习：缩小原图	289
第17章  Core Data	291
17.1  对象-关系映射	291
17.2  用Core Data重写PossessionStore的数据保存功能	291
模型文件	292
NSManagedObject与NSManagedObject子类	297
更新PossessionStore	301
为Homepwner增加AssetType功能	307
17.3  再谈SQL	311
17.4  各种保存机制的优缺点	314
17.5  练习：增加AssetType对象	315
17.6  练习：AssetType对象的iPad界面	315
第18章  本地化	317
18.1  通过NSLocale实现国际化	318
18.2  资源的本地化	319
18.3  NSLocalizedString与字符串对照表	322
18.4  练习：增加一套本地化资源	325
18.5  深入：NSBundle在国际化中的作用	325
第19章  设置	327
19.1  更新Whereami	327
19.2  NSUserDefaults	329
19.3  深入：“设置”应用	331
第20章  触摸事件与UIResponder	333
20.1  触摸事件	334
20.2  创建TouchTracker应用	335
20.3  处理触摸事件并创建线条对象	337
20.4  响应对象链	340
20.5  练习：保存和读取	341
20.6  练习：圆圈	341
20.7  深入学习：UIControl	341
第21章  Instruments	343
21.1  静态分析器	343
21.2  Instruments	345
21.3  Allocations组件	345
Allocations组件的设置选项	350
内存堆快照分析	352
Time Profiler组件	353
21.3  Xcode方案	355
创建新方案	357
21.4  构建设置	359
第22章  Core Animation Layer	363
22.1  层与视图的关系	363
22.2  创建CALayer对象	364
22.3  层的显示内容	367
22.4  隐式可动画属性	369
22.5  深入：通过代码生成显示内容	371
22.6  深入：层、位图与上下文	372
22.7  练习：动态生成层的显示内容	374
第23章  通过CAAnimation控制动画	375
23.1  动画对象	375
23.2  通过CABasicAnimation实现旋转动画	378
速度控制函数	381
动画结束后的处理	382
23.3  通过CAKeyframeAnimation实现弹跳动画	383
23.4  练习：更多动画效果	384
23.5  深入：外观层和模型层	384
第24章  Block对象与范畴	387
24.1  为TouchDrawView上色	387
24.2  Block对象	389
Block对象与变量	389
捕获变量	393
通过其他内建的方法使用Block对象	396
通过Block对象保持代码的短小精练	396
24.3  范畴	397
24.4  深入学习：内存管理与Block对象	400
24.5  深入学习：比较多种回调机制实现途径的优缺点	403
第15章  Web服务与UIWebView	405
25.1  Web服务	406
编写Nerdfeed	407
从指定的URL获取数据	408
使用NSURLConnection	410
解析XML数据	412
日志输出技巧	423
25.2  UIWebView	424
25.3  深入学习：NSXMLParser	426
25.4  深入学习：HTTP请求主体	427
25.5  深入学习：认证信息	429
25.6  练习：解析并显示更多数据	430
25.7  练习：加强UIWebView	430
第26章  UISplitViewController	431
26.1  在Nerdfeed中使用UISplitViewController	432
26.2  主、从视图控制对象间的通信	436
26.3  在竖排模式下显示主视图控制对象	442
26.4  将Nerdfeed改写为通用应用	445
第27章  多媒体播放与后台运行	449
27.1  创建MediaPlayer应用	449
27.2  系统声音	452
注册系统声音	452
播放系统声音	453
27.3  播放压缩格式的音频文件	454
27.4  播放视频文件	455
MPMoviePlayerViewController	457
视频文件的预读	458
27.5  后台运行	458
后台运行规则	459
其他形式的后台运行	460
27.6  底层API	462
27.7  练习：录音	462
第15章  Bonjour与Web服务端	463
28.1  Bonjour	463
创建CocoaServer	464
发布Bonjour服务	467
通过Bonjour查找服务	469
28.2  HTTP通信	473
用Objective-C编写Web服务端	473
获取服务端的网络地址信息	474
字节序	475
创建服务请求	475
接收Web请求	477
28.3  深入学习：TXTRecords	479
第29章  推送通知与网络编程	481
29.1  设置客户端，为接收推送通知做准备	482
注册客户端	482
创建并设置针对推送通知的provisioning profile	483
29.2  投递推送通知	486
向provider发送设备token	486
29.3  发送推送通知	488
通过NSStream和Apple服务器创建网络连接	488
通过NSStream建立网络连接	489
为Apple服务器提供数据	493
处理投递错误	497
再谈针对流连接的数据读取	498
29.4  几种额外的客户端通知处理机制	498
声音和图标标记	499
通过推送通知传送自定义数据	500
29.5  正式的通知服务器以及其他发布事宜	502
29.6  深入学习：反馈服务	502
第30章  后记	503
30.1  接下来做什么	503
30.2  结束语	503
索引	505
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS编程
前言
第1章  第一个简单的iOS应用 1
1.1  创建Xcode项目 2
1.2  创建界面 5
1.3  模型-视图-控制器 9
1.4  声明 11
1.5  创建关联 13
1.6  实现方法 17
1.7  针对模拟器构建并运行应用 20
1.8  安装应用 22
1.9  应用图标 23
1.10  启动图片 25
第2章  Objective-C 29
2.1  对象 29
2.2  使用实例 30
2.3  编写命令行工具RandomPossessions 33
2.4  创建Objective-C类的子类 39
2.5  异常与未知选择器 56
2.6  快速枚举 58
第3章  通过ARC管理内存 61
3.1  堆 61
3.2  栈 62
3.2  指针变量与对象所有权 63
3.4  内存管理 64
3.5  Strong引用与Weak引用 67
3.6  属性 72
3.7  copy特性 77
3.8  用点号调用存取方法 78
第4章  委托与Core Location 81
4.1  项目、目标与框架 82
4.2  Core Location 83
4.3  委托 87
4.4  使用调试器 91
第5章  MapKit与文本输入 103
5.1  对象图 103
5.2  MapKit框架 104
5.3  界面属性 105
5.4  设置MapView对象的委托对象 108
第6章  UIView子类与UIScrollView 121
6.1  视图与视图层次结构 122
6.2  创建自定义视图 124
6.3  UIView的drawRect:方法 128
6.4  Core Graphics 131
6.5  UIKit中的绘图扩展 132
6.6  重画视图 134
6.7  运动事件 136
6.8  使用UIScrollView 138
6.9  隐藏状态条 142
第7章  视图控制对象 145
7.1  UIViewController 145
7.2  UITabBarController 155
7.3  视图控制对象的生命周期 159
7.4  UIViewController子类与模板 168
第8章  通告机制与自动转屏 173
8.1  通告中心 173
8.2  UIDevice通告 175
8.3  自动转屏 176
8.4  强制使用横排模式 184
第9章  UITableView与UITableViewController 187
9.1  编写Homepwner应用 187
9.2  UITableViewController 189
9.3  UITableView数据源 192
9.4  UITableViewCell对象 198
9.5  代码片段库 203
第10章  编辑UITableView 207
10.1  编辑模式 207
10.2  增加行 213
10.3  删除行 215
10.4  移动行 216
第11章  UINavigationController 219
11.1  UINavigationController 219
11.2  额外的视图控制对象 223
11.3  UINavigationController的导航功能 228
11.4  UINavigationBar 233
第12章  相机 239
12.1  通过UIImageView对象显示图片 239
第13章  UIPopoverController与模态视图控制对象 261
13.1  将Homepwner改为通用应用 261
13.2  UIPopoverController 263
13.3  更多的模态视图控制对象 266
第14章  保存、读取与应用状态 279
14.1  固化 279
14.2  应用沙盒 281
14.3  NSKeyedArchiver与NSKeyedUnarchiver 283
14.4  应用状态与状态切换 286
14.5  通过NSData将数据写入文件 289
14.7  再谈内存过低警告 291
14.8  模型-视图-控制器-存储设计模式 292
第15章  创建UITableViewCell子类 299
15.1  创建HomepwnerItemCell 299
15.2  处理图片 305
15.3  由UITableViewCell对象转发动作消息 308
第16章  Core Data 317
16.1  对象-关系映射 317
16.2  用Core Data重写BNRItemStore的数据保存功能 318
16.3  再谈SQL 336
16.4  Faults 337
16.5  各种存取机制的优缺点 339
第17章  本地化 341
17.1  通过NSLocale实施国际化 342
17.2  资源的本地化 343
17.3  NSLocalizedString与字符串对照表 347
第18章  NSUserDefaults 351
18.1  更新Whereami 351
18.2  使用NSUserDefaults 353
第19章  触摸事件与UIResponder 357
19.1  触摸事件 357
19.2  创建TouchTracker应用 359
19.3  实现TouchDrawView，完成绘图功能 360
19.4  处理触摸事件并创建线条对象 361
19.5  响应对象链 364
第20章  UIGestureRecognizer与UIMenuController 367
20.1  UIGestureRecognizer子类 367
20.2  用UITapGestureRecognizer对象识别“按下”手势 368
20.3  UIMenuController 371
20.4  UILongPressGestureRecognizer 372
20.5  UIPanGestureRecognizer以及同时识别多个手势 374
第21章  Instruments 380
21.1  静态分析器 380
21.2  Instruments 382
21.3  Xcode方案 392
21.9  创建新方案 394
21.4  构建设置 396
第22章  Core Animation Layer 399
22.1  层与视图的关系 399
22.2  创建CALayer对象 400
22.3  层的显示内容 403
22.4  隐式可动画属性 405
第23章  通过CAAnimation控制动画 411
23.1  动画对象 411
23.2  通过CABasicAnimation实现旋转动画 414
23.3  通过CAKeyframeAnimation实现弹跳动画 419
第24章  UIStoryboard 423
24.1  创建Storyboard文件 423
24.2  Storyboard文件中的UITableViewController 427
24.3  Segue 430
24.4  Storyboards的优缺点 434
第25章  Web服务与UIWebView 437
25.1  Web服务 438
25.2  UIWebView 456
第26章  UISplitViewController与NSRegularExpression 463
26.1  在Nerdfeed中使用UISplitViewController 464
26.2  主、从视图控制对象间的通信 468
26.3  在竖排模式下显示主视图控制对象 475
26.4  将Nerdfeed改为通用应用 477
26.5  NSRegularExpression 478
第27章  Block对象 485
27.1  Block对象及其语法 485
27.2  浅谈如何使用Block对象 490
27.3  捕获变量 493
27.4  Block对象的常见用途 496
第28章  模型-视图-控制器-存储 503
28.1  为什么需要存储对象 503
28.2  创建BNRFeedStore 506
28.3  使用BNRFeedStore对象 508
28.5  通过JSON格式传输数据 521
28.6  再谈存储对象 526
第29章  再谈MVCS 529
29.1  缓存RSS数据 529
29.2  高级缓存 535
29.3  已读RSSItem对象与未读RSSItem对象 545
29.4  使用存储对象的其他益处 550
第30章  iCloud 555
30.1  使用iCloud前的准备工作 556
30.2  Ubiquity Container 556
30.3  支持iCloud的provisioning profile 558
30.4  Core Data与iCloud 561
第31章  后记 569
31.1  接下来做什么 569
31.2  结束语 570
索引 571
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入解析Mac OS X & iOS操作系统
第Ⅰ部分  高级用户指南
第1章  达尔文主义：OS X的进化史	3
1.1  前达尔文时代：Mac OS
Classic	3
1.2  浪子回头：NeXTSTEP	4
1.3  走进新时代：OS X操作系统	4
1.4  迄今为止的所有OS X版本	5
1.4.1  10.0——Cheetah，初出茅庐	5
1.4.2  10.1——Puma，更强大	5
1.4.3  10.2——Jaguar，渐入佳境	6
1.4.4  10.3——Panther和Safari	6
1.4.5  10.4——Tiger，转投Intel的
怀抱	6
1.4.6  10.5——Leopard和UNIX	6
1.4.7  10.6——Snow Leopard	7
1.4.8  10.7——Lion	7
1.4.9  10.8——Mountain Lion	8
1.5  iOS——走向移动平台的
OS X	9
1.5.1  1.x——Heavenly，
第一代iPhone	9
1.5.2  2.x——App Store、3G和
企业级的特性	10
1.5.3  3.x——告别第一代，
迎来iPad	10
1.5.4  4.x——iPhone 4、Apple TV和
iPad 2	10
1.5.5  5.x——iPhone 4S和
更新的硬件	11
1.5.6  iOS和OS X对比	11
1.6  OS X的未来	13
1.7  本章小结	14
参考文献	15
第2章  合众为一：OS X和iOS的架构	17
2.1  OS X架构概述	17
2.2  用户体验层	19
2.2.1  Aqua	19
2.2.2  QuickLook	20
2.2.3　Spotlight	21
2.3　Darwin——UNIX核心	22
2.3.1　Shell	22
2.3.2　文件系统	23
2.4  UNIX的系统目录	23
2.4.1  OS X特有的目录	24
2.4.2  iOS文件系统的区别	25
2.5  bundle	25
2.6  应用程序和app	26
2.6.1  Info.plist	27
2.6.2  Resources目录	29
2.6.3  NIB文件	29
2.6.4  通过.lproj文件实现国际化	30
2.6.5  图标文件(.icns)	30
2.6.6  CodeResources	30
2.7  框架	33
2.7.1  框架bundle格式	33
2.7.2  OS X和iOS公共框架列表	35
2.8  库	41
2.9  其他应用程序类型	43
2.9.1  Java(仅限于OS X)	43
2.9.2  Widget	43
2.9.3  BSD/Mach原生程序	44
2.10  系统调用	44
2.10.1  POSIX	44
2.10.2  Mach系统调用	45
2.11  XNU概述	47
2.11.1  Mach	47
2.11.2  BSD层	48
2.11.3  libkern	48
2.11.4  I/O Kit	48
2.12  本章小结	48
参考文献	49
第3章  站在巨人的肩膀上：OS X和
iOS使用的技术	51
3.1  BSD相关的特性	51
3.1.1  sysctl	51
3.1.2  kqueue	53
3.1.3  审计(OS X)	54
3.1.4  强制访问控制	57
3.2  OS X和iOS特有的技术	60
3.2.1  用户和组的管理(OS X)	60
3.2.2  系统配置	62
3.2.3  记录日志	64
3.2.4  Apple事件和AppleScript	66
3.2.5  FSEvents	68
3.2.6  通知	73
3.2.7  其他重要的API	73
3.3  OS X和iOS的安全机制	73
3.3.1  代码签名	74
3.3.2  隔离机制(沙盒化)	75
3.3.3  Entitlement：更严格的沙盒	77
3.3.4  沙盒机制的实施	82
3.4  本章小结	83
参考文献	84
第4章  庖丁解进程：Mach-O格式、
进程以及线程内幕	85
4.1  关键概念回顾	85
4.1.1  进程和线程	85
4.1.2  进程生命周期	86
4.1.3  UNIX信号	89
4.2  可执行文件	91
4.3  通用二进制格式	92
4.3.1  Mach-O二进制格式	95
4.3.2  加载命令	98
4.4  动态库	104
4.4.1  启动时库的加载	105
4.4.2  库的运行时加载	113
4.4.3  dyld的特性	115
4.5  进程地址空间	120
4.5.1  进程入口点	120
4.5.2  地址空间布局随机化	121
4.5.3  32位地址空间(Intel)	122
4.5.4  64位地址空间	123
4.5.5  32位地址空间(iOS)	123
4.6  进程内存分配(用户态)	128
4.6.1  alloca()	128
4.6.2  堆分配	128
4.6.3  虚拟内存——系统
管理员的角度	130
4.7  线程	132
参考文献	134
第5章  进程跟踪和调试	135
5.1  DTrace	135
5.1.1  D语言	135
5.1.2  dtruss	138
5.1.3  DTrace工作原理	139
5.2  其他剖析机制	142
5.2.1  CHUD的衰落	142
5.2.2  继任者AppleProfileFamily	142
5.3  进程信息	143
5.3.1  sysctl	143
5.3.2  proc_info	144
5.4  进程和系统快照	146
5.4.1  system_profiler(8)	146
5.4.2  sysdiagnose(1)	146
5.4.3  allmemory(1)	147
5.4.4  stackshot(1)	148
5.4.5  stack_snapshot系统调用	149
5.5  kdebug	152
5.5.1  基于kdebug的工具	152
5.5.2  kdebug代码	152
5.5.3  写入kdebug消息	154
5.5.4  读取kdebug消息	155
5.6  应用程序崩溃	156
5.6.1  应用程序挂起和采样	159
5.6.2  内存破坏的bug	160
5.7  内存泄漏	161
5.7.1  heap(1)	162
5.7.2  leaks(1)	162
5.7.3  malloc_history(1)	163
5.8  标准UNIX工具	163
5.8.1  通过ps(1)列出进程列表	164
5.8.2  top(1)：系统全局视图	164
5.8.3  通过lsof(1)和fuser(1)
进行文件诊断	165
5.9  使用GDB	165
5.9.1  GDB的Darwin扩展	166
5.9.2  GDB用于iOS	166
5.9.3  LLDB	166
5.10  本章小结	167
参考文献和深入阅读	167
第6章  引导过程：EFI和iBoot	169
6.1  传统形式的引导	169
6.2  揭秘EFI	171
6.2.1  EFI的基本概念	171
6.2.2  EFI服务	173
6.2.3  NVRAM变量	177
6.3  OS X和boot.efi	178
6.3.1  boot.efi的执行流程	179
6.3.2  引导内核	185
6.3.3  内核对EFI的回调	187
6.3.4  Lion中boot.efi的变化	187
6.3.5  Boot Camp	187
6.3.6  bless(8)	188
6.4  iOS和iBoot	192
6.4.1  初期：引导ROM	193
6.4.2  普通引导	194
6.4.3  恢复模式引导	195
6.4.4  设备固件更新(DFU)模式	195
6.4.5  降级和回放攻击	196
6.5  安装镜像	196
6.5.1  OS X安装过程	196
6.5.2  iOS文件系统镜像
(.ipsw文件)	201
6.6  本章小结	206
参考文献和深入阅读	206
第7章  贯穿始终——launchd	207
7.1  launchd	207
7.1.1  启动launchd	207
7.1.2  系统范围和用户范围的
launchd	208
7.1.3  守护程序和代理程序	208
7.1.4  多面手launchd	209
7.2  LaunchDaemon列表	220
7.3  GUI shell程序	224
7.3.1  Finder(OS X)	224
7.3.2  SpringBoard(iOS)	225
7.4  XPC(Lion和iOS)	230
7.5  本章小结	234
参考文献和深入阅读	235
第Ⅱ部分  内核
第8章  内核架构	239
8.1  内核基础知识	239
8.2  用户态和内核态	243
8.2.1  Intel架构——ring	243
8.2.2  ARM架构——CPSR	244
8.3  内核态/用户态转换机制	245
8.3.1  Intel上的陷阱处理程序	246
8.3.2  自愿的内核转换	254
8.4  系统调用的处理	259
8.4.1  POSIX/BSD系统调用	260
8.4.2  Mach陷阱	263
8.4.3  机器相关的调用	267
8.4.4  诊断调用	268
8.5  XNU和硬件抽象	270
8.6  本章小结	272
参考文献	272
第9章  由生到死——内核引导和
内核崩溃	273
9.1  XNU源代码	273
9.1.1  获得源代码	273
9.1.2  make XNU	274
9.1.3  一个内核，多种架构支持	276
9.1.4  XNU源代码树	278
9.2  引导XNU	281
9.2.1  引导过程概览	281
9.2.2  OS X：vstart	282
9.2.3  iOS：start	283
9.2.4  [i386|arm]_init	283
9.2.5  i386_init_slave()	285
9.2.6  machine_startup	285
9.2.7  kernel_bootstrap	286
9.2.8  kernel_bootstrap_thread	289
9.2.9  bsd_init	291
9.2.10  bsdinit_task	296
9.2.11  睡眠和唤醒	299
9.3  引导参数	300
9.4  内核调试	302
9.4.1  “不要害怕”——
避免panic	303
9.4.2  panic的实现	304
9.4.3  panic报告	306
9.5  本章小结	310
参考文献	310
第10章  Mach原语：一切以消息为
媒介	311
10.1  Mach概述	311
10.1.1  Mach设计原则	312
10.1.2  Mach设计目标	313
10.2  Mach消息	313
10.2.1  简单消息	313
10.2.2  复杂消息	314
10.2.3  发送消息	315
10.2.4  端口	316
10.2.5  Mach接口生成器(MIG)	318
10.3  深入IPC	323
10.4  同步原语	326
10.4.1  锁组对象	326
10.4.2  互斥体对象	327
10.4.3  读写锁对象	328
10.4.4  自旋锁对象	329
10.4.5  信号量对象	329
10.4.6  锁集对象	331
10.5  机器原语	332
10.5.1  主机对象	332
10.5.2  时钟对象	341
10.5.3  处理器对象	343
10.5.4  处理器集对象	346
10.6  本章小结	350
参考文献	350
第11章  刹那之间——Mach调度	351
11.1  调度原语	351
11.1.1  线程	351
11.1.2  任务	356
11.1.3  任务和线程相关的API	360
11.1.4  任务相关的API	361
11.1.5  线程相关的API	365
11.2  调度	369
11.2.1  概述	369
11.2.2  优先级	370
11.2.3  运行队列	373
11.3  Mach调度器的独特特性	376
11.3.1  控制权转交	376
11.3.2  续体	376
11.3.3  抢占模式	378
11.3.4  异步软件陷阱(AST)	383
11.3.5  调度算法	386
11.4  定时器中断	389
11.4.1  中断驱动的调度	389
11.4.2  XNU中的定时器
中断处理	390
11.5  异常	394
11.5.1  Mach异常模型	394
11.5.2  实现细节	395
11.6  本章小结	403
参考文献	403
第12章  Mach虚拟内存	405
12.1  虚拟内存架构	405
12.1.1  虚拟内存全貌	405
12.1.2  虚拟内存概述	406
12.1.3  用户态视角	410
12.2  物理内存管理	419
12.2.1  pmap的API	420
12.2.2  API在Intel架构上的
实现示例	421
12.3  Mach Zone	423
12.3.1  Mach Zone的结构	424
12.3.2  引导期间的zone设置	426
12.3.3  zone垃圾回收	427
12.3.4  zone调试	428
12.4  内核内存分配器	429
12.4.1  kernel_memory_
allocate()	429
12.4.2  kmem_alloc()系列函数	431
12.4.3  kalloc	432
12.4.4  OSMalloc	433
12.5  Mach分页器	434
12.5.1  Mach分页器接口	435
12.5.2  Universal Page List	438
12.5.3  分页器类型	440
12.6  分页策略管理	447
12.6.1  Pageout守护程序	448
12.6.2  处理页错误	450
12.6.3  dynamic_pager(8)
(OS X)	451
12.7  本章小结	452
参考文献	452
第13章  BSD层	453
13.1  BSD简介	453
13.1.1  一统天下	454
13.1.2  POSIX标准中的内容	454
13.1.3  实现BSD	455
13.1.4  XNU不是完整的BSD	455
13.2  进程和线程	455
13.2.1  BSD进程结构	456
13.2.2  进程列表和进程组	458
13.2.3  线程	459
13.2.4  对应到Mach	461
13.3  进程创建	463
13.3.1  用户态的角度	463
13.3.2  内核态的角度	464
13.3.3  加载和执行二进制文件	467
13.3.4  Mach-O二进制文件	472
13.4  进程控制和跟踪	475
13.4.1  ptrace (#26)	475
13.4.2  proc_info (#336)	476
13.4.3  策略	476
13.4.4  进程挂起和恢复	477
13.5  信号	478
13.5.1  UNIX异常处理程序	478
13.5.2  硬件产生的信号	483
13.5.3  软件产生的信号	484
13.5.4  受害者的信号处理	484
13.6  本章小结	485
参考文献	485
第14章  有新有旧：BSD高级功能	487
14.1  内存管理	487
14.1.1  POSIX内存和页面
管理系统调用	487
14.1.2  BSD内部的内存函数	489
14.1.3  内存压力	492
14.1.4  Jetsam(iOS)	493
14.1.5  内核地址空间布局
随机化	495
14.2  工作队列	496
14.3  换个角度看BSD层	499
14.3.1  sysctl	499
14.3.2  kqueue	501
14.3.3  审计(OS X)	503
14.3.4  强制访问控制(MAC)	504
14.4  苹果的策略模块	506
14.5  本章小结	509
参考文献	509
第15章  文件系统和虚拟文件
系统交换	511
15.1  磁盘设备和分区	511
15.2  通用文件系统的概念	522
15.2.1  文件	522
15.2.2  扩展属性	522
15.2.3  权限	522
15.2.4  时间戳	522
15.2.5  快捷方式和连接	523
15.3  苹果生态圈中的文件系统	524
15.3.1  苹果原生的文件系统	524
15.3.2  DOS/Windows文件系统	524
15.3.3  CD/DVD文件系统	525
15.3.4  基于网络的文件系统	526
15.3.5  伪文件系统	528
15.4  挂载文件系统(仅限于OS X)	531
15.4.1  automount	531
15.4.2  磁盘仲裁	531
15.5  磁盘镜像文件	533
15.5.1  原始DMG文件	533
15.5.2  从磁盘镜像引导(Lion)	534
15.6  虚拟文件系统交换	534
15.6.1  文件系统条目	535
15.6.2  挂载条目	535
15.6.3  vnode对象	538
15.7  FUSE——用户空间的
文件系统	541
15.8  进程的文件I/O操作	543
15.9  本章小结	547
参考文献和深入阅读	547
第16章  基于B树的HFS+文件系统	549
16.1  HFS+文件系统概念	549
16.1.1  时间戳	549
16.1.2  访问控制表	550
16.1.3  扩展属性	550
16.1.4  fork	552
16.1.5  压缩	553
16.1.6  Unicode支持	558
16.1.7  Finder集成	558
16.1.8  大小写敏感(HFSX)	559
16.1.9  日志	560
16.1.10  动态大小调节	561
16.1.11  元数据区域	561
16.1.12  热文件	562
16.1.13  动态碎片整理	562
16.2  HFS+的设计概念	564
16.3  组件	570
16.3.1  HFS+宗卷头	571
16.3.2  编录文件	572
16.3.3  extent溢出文件	579
16.3.4  属性B树	579
16.3.5  热文件B树	580
16.3.6  分配文件	581
16.3.7  HFS日志	581
16.4  VFS和内核的整合	584
16.4.1  fsctl(2)的整合	584
16.4.2  sysctl(2)的整合	585
16.4.3  文件系统状态通知	585
16.5  本章小结	586
参考文献	586
第17章  遵守协议：网络协议栈	587
17.1  用户态接口回顾	588
17.1.1  UNIX Domain套接字	589
17.1.2  IPv4网络协议	589
17.1.3  路由套接字	590
17.1.4  网络驱动程序套接字	590
17.1.5  IPSec Key Management
套接字	592
17.1.6  IPv6网络协议	592
17.1.7  系统套接字	593
17.2  套接字和协议统计信息	595
17.3  第5层：套接字	597
17.3.1  套接字描述符	597
17.3.2  mbuf	598
17.3.3  内核态中的套接字	603
17.4  第4层：传输层协议	604
17.4.1  域和protosw	605
17.4.2  初始化域	609
17.5  第3层：网络层协议	610
17.6  第2层：网络接口层	613
17.6.1  OS X和iOS中的
网络接口	613
17.6.2  数据链路接口层	614
17.6.3  ifnet结构体	614
17.6.4  案例研究：utun	616
17.7  整合所有层：网络协议栈	620
17.7.1  接收数据	620
17.7.2  发送数据	623
17.8  数据包过滤	626
17.8.1  套接字过滤器	627
17.8.2  ipfw(8)	628
17.8.3  PF包过滤器(Lion和iOS)	629
17.8.4  IP过滤器	630
17.8.5  接口过滤器	632
17.8.6  伯克利数据包过滤器	633
17.9  流量整形和QoS	637
17.9.1  综合服务模型	637
17.9.2  区分服务模型	637
17.9.3  实现dummynet	638
17.9.4  在用户态控制参数	638
17.10  本章小结	639
参考文献和深入阅读	639
第18章  内核扩展模块	641
18.1  扩展内核的功能	641
18.2  内核扩展(kext)	643
18.2.1  kext结构	645
18.2.2  kext安全需求	647
18.2.3  内核扩展的相关操作	647
18.2.4  kernelcache	647
18.2.5  multi-kext	651
18.2.6  从程序员的视角看kext	651
18.2.7  kext的内核支持	652
18.3  本章小结	661
参考文献	662
第19章  驱动力——I/O Kit驱动
程序框架	663
19.1  I/O Kit简介	664
19.1.1  设备驱动程序的
编程约束	664
19.1.2  I/O Kit是什么	664
19.1.3  I/O Kit不是什么	666
19.2  libkern：I/O Kit的基类	667
19.2.1  OSObject	668
19.2.2  OSMetaClass	668
19.3  I/O Registry	669
19.3.1  IORegistryEntry	671
19.3.2  IOService	671
19.4  用户态的I/O Kit	671
19.4.1  访问I/O Registry	672
19.4.2  获得/设置驱动程序属性	674
19.4.3  即插即用(通知端口)	675
19.4.4  I/O Kit电源管理	676
19.4.5  其他I/O Kit子系统	677
19.4.6  I/O Kit诊断	678
19.5  I/O Kit内核驱动程序	680
19.5.1  驱动程序匹配	680
19.5.2  I/O Kit族	682
19.5.3  I/O Kit驱动程序模型	685
19.5.4  IOWorkLoop	687
19.5.5  中断处理	689
19.5.6  I/O Kit内存管理	691
19.6  整合BSD	693
19.7  本章小结	694
参考文献和深入阅读	695
附录A  了解机器架构	697
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入解析Mac OS X & iOS操作系统
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS软件开发揭密
第1章  iPhone开发环境设置	1
1.1  安装雪豹操作系统	2
1.2  安装iPhone SDK	5
1.3  无证书开发环境Xcode设置	7
1.4  有证书开发环境Xcode设置	11
1.5  安装源代码版本管理工具	12
1.6  安装Wine	12
1.7  使用Wine安装Source Insight	13
1.8  相关网络资源	14
第2章  Objective-C编程基础	15
2.1  Objective-C介绍	16
2.2  第一个iPhone程序	16
2.3  Objective-C基本类型	17
2.3.1  id	17
2.3.2  SEL	17
2.3.3  BOOL	18
2.3.4  nil、NULL和NSNull	18
2.4  常量声明和预处理宏	20
2.5  使用#import包含头文件	22
2.6  使用#pragma mark分隔代码块	22
2.7  Objective-C内存管理：retain和release	22
2.8  字符串操作	26
2.8.1  字符串常量	26
2.8.2  获取子字符串	27
2.8.3  合并和格式化字符串	28
2.8.4  分隔字符串	28
2.8.5  NSString和char*之间的转换	29
2.8.6  字符串比较	29
2.9  处理数值对象	30
2.10  处理日期时间NSDate	31
2.11  处理NSData类型	32
2.12  集合操作	32
2.12.1  数组操作：NSArray和NSMutableArray	32
2.12.2  字典操作：NSDictionary和NSMutableDictionary	42
2.12.3  集合操作：NSSet和NSMutableSet	47
2.12.4  堆栈操作	49
2.13  面向对象编程：类、实例和消息	50
2.13.1  类定义	50
2.13.2  类构造和构析函数	51
2.13.3  Singleton模式	53
2.13.4  @class、@protocol前向声明	53
2.13.5  self和super	54
2.13.6  实例方法和类方法	54
2.13.7  对象属性（@property）	55
2.13.8  静态属性（static attributes）	58
2.14  类扩展（Class Categories）	59
2.15  Objective-C接口编程	60
2.15.1  接口编程之@protocol	60
2.15.2  接口编程之后台线程	63
2.15.3  接口编程之Notifications	65
2.15.4  接口编程之NSOperationQueue	68
2.15.5  接口编程之私有方法	69
2.15.6  接口编程之静态库隐藏类	70
2.15.7  接口编程之@protocol封装类	72
2.15.8  接口稳定性和接口继承	73
2.16  定时器（NSTimer）编程	77
2.17  序列化和反序列化	78
2.17.1  序列化方法之Property List	78
2.17.2  序列化方法之NSKeyedArchiver	78
2.17.3  序列化方法之Core Data	79
2.18  Objective-C和C、C++混合编程	80
2.19  消息和NSInvocation	87
2.20  方法混合（Method Swizzling）	90
2.21  使用NSAssert进行代码调试	93
2.22  本章总结	93
2.23  参考书籍	93
第3章  iPhone SDK开发基础	95
3.1  iPhone SDK介绍	96
3.2  第一个iPhone 界面程序	99
3.3  iPhone程序启动过程	105
3.4  iPhone程序生命周期	107
3.5  掌握iPhone程序通信中心UIApplication和UIApplicationDelegate	110
3.6  iPhone坐标系统	111
3.7  UIView层次管理	116
3.8  触控（Touch）测试	120
3.9  多点触控（MultiTouch）和物体移动	122
3.10  UIView旋转和缩放	125
3.11  UIScrollView编程	127
3.12  iPhone程序框架	129
3.12.1  使用UINavigationController组织和管理UIView	130
3.12.2  使用UITabBarController组织和管理UIView	130
3.12.3  使用UISplitViewController组织和管理UIView	133
3.13  旋转屏幕（Screen Rotations）	135
3.14  掌握UIButton编程	138
3.15  管理界面字体	139
3.16  使用UILabel管理界面文本	141
3.17  管理界面颜色	143
3.18  界面风格（TRANSITIONING STYLES）	148
3.19  单词排序表格编程	149
3.20  NSUserDefaults和Property List文件	150
3.21  文件系统和外部资源管理	152
3.22  简单动画制作	155
3.23  闪屏制作——程序启动动画	157
3.24  多行文本输入控件制作	159
3.25  图片处理	162
3.26  Core Audio编程	163
3.27  UITableView编程	165
3.28  UISegmentedControl编程	167
3.29  OpenFlow编程	169
3.30  UIPageControl编程	172
3.31  自定义仪表控件	175
3.32  本章总结	180
第4章  iPhone SDK高级编程	181
4.1  Base64编解码	182
4.2  Web Service和XML数据解析	183
4.3  JSON数据解析	184
4.4  掌握SQLite管理用户数据	187
4.5  缓存（Caching）及Core Data数据管理	191
4.6  使用AES算法进行数据加解密	207
4.7  电子商务安全基础——RSA算法和数据加密	210
4.7.1  开发.NET版本RSA算法库	210
4.7.2  建立iPhone版本RSA算法库	217
4.8  自定义用户界面控件制作	220
4.8.1  ComboBox控件和UIPikerView设计	220
4.8.2  自定义UIDatePicker制作	224
4.9  UIWebView和JavaScript高级编程	229
4.10  本章总结	236
第5章  iPhone企业应用实例分析	237
5.1  综合应用概述	238
5.2  系统介绍	238
5.3  系统需求和主要用例	239
5.4  程序处理流程	241
5.5  主要实现类和相互关系	242
5.6  程序框架分析	244
5.7  技术要点分析	249
5.7.1  异步网络通信	249
5.7.2  Core Data缓存数据	252
5.7.3  RSA算法加解密	258
5.7.4  自定义控件制作	258
5.7.5  表格控件定制	260
5.7.6  自定义UIToolbar	266
5.7.7  目录浏览器制作	268
5.7.8  文件上传和下载	273
5.8  本章总结	277
第6章  iPad软件开发基础	279
6.1  iPad软件开发介绍	280
6.2  UISplitViewController编程	280
6.3  UIPopoverController编程	287
6.4  定制MPMoviePlayerController进行视频播放	290
6.5  开发调色板（Palette）控件	294
6.6  发送邮件	296
6.7  Google地图编程	297
6.8  本章总结	314
第7章  iPad商业软件实例分析	317
7.1  综合应用概述	318
7.2  系统介绍	318
7.3  系统需求和主要用例	319
7.4  程序处理流程	321
7.5  主要实现类和相互关系	321
7.6  程序框架	323
7.7  技术要点分析	335
7.7.1  图片分页和滚动显示	335
7.7.2  动态管理多国语言界面	340
7.7.3  播放网络视频	341
7.8  本章总结	344
第8章  iOS游戏开发基础	345
8.1  概述	346
8.2  cocos2d系统介绍	346
8.3  cocos2d编程基础	349
8.3.1  第一个cocos2d程序	349
8.3.2  基本动画	353
8.4  Box2D物理引擎	356
8.4.1  核心概念	356
8.4.2  碰撞检测	357
8.5  Chipmuck物理引擎	361
8.5.1  重要概念	361
8.5.2  物理模拟和碰撞检测	363
8.6  粒子系统	365
8.6.1  轨道卫星（Orbit Satellite）	366
8.6.2  太空陨石（Space Rocks）	367
8.7  本章总结	369
第9章  iOS商业游戏实例分析	371
9.1  概述	372
9.2  闪回（Flash Back）	372
9.3  法术的释放（Ghost Castle）	376
9.3.1  GhostCastle中的Tile Map管理	378
9.3.2  cocos2d中的Tile Map管理	381
9.4  甜蜜的梦（Sweet Dreams）	384
9.5  毁灭之战（RavagedByWar）	391
9.5.1  A*算法	392
9.5.2  毁灭之战中的A*算法实现	397
9.6  吹吹鱼（PuffPuff）	399
9.7  本章总结	403
第10章  iPhone软件发布	405
10.1  App Store概述	406
10.2  iPhone软件发布步骤	406
10.3  ipa安装包制作	410
10.4  iOS配置文件和Settings系统编程	411
10.5  本章总结	415
附录	417
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS软件开发揭密
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS测试指南
第1章 软件测试与iOS测试
1.1 什么是软件测试
1.1.1 测试活动何时展开
1.1.2 软件测试与软件缺陷
1.1.3 软件测试与软件质量
1.2 软件测试的类型
1.2.1 单元测试
1.2.2 集成测试
1.2.3 系统测试
1.3 iOS平台的一些性
1.4 iOS测试需要做么
第2章 iOS环境准备
2.1 开发测试设备
2.2 安装和设置Xcode
2.3 iOS开发者书
2.4 知识的准备
第3章 iOS单元测试
3.1 单元测试工具
3.1.1 OCUnit
3.1.2 GHUnit
3.1.3 GTM
3.2 单元测试实践
3.2.1 实践项目介绍
3.2.2 Model的单元测试
3.2.3 Controller和View的单元测试
3.3 单元测试的扩展工具
3.3.1 OCHamcrest
3.3.2 OCMockito
￼第4章 iOS的UI自动化测试
4.1 UI Automation的运行
4.2 Instruments工具的简要介绍
4.3 UI Automation入门
4.3.1 UI Automation脚本开发之前
4.3.2 UI Automation脚本编辑
4.3.3 UI Automation实践
4.3.4 UI Automation脚本的录制
4.3.5 UI Automation在真实设备上的运行
4.4 深入了解UI Automation API
4.4.1 Logger日志输出
4.4.2 Element和ElementArray
4.4.3 手势动作的模拟
4.4.4 延时处理
4.4.5 Target对象的一些系统级别的操作
4.5 测试用例的组织
4.6 第三方测试工具介绍
4.6.1 TuneupJs的使用
4.6.2 ynm3k的使用
第5章 iOS Web应用程序的自动化测试
5.1 使用Selenium进行iOS Web自动化测试
5.1.1 WebDriver原理结构
5.1.2 iPhoneDriver实践
5.1.3 iPhoneDriver的缺陷
5.2 使用Appium进行iOS Web自动化测试
5.2.1 Appium初窥
5.2.2 Appium实践
5.3 Appium常用方法介绍
5.3.1 Appium控件定位方法
5.3.2 Appium控件操作方法
￼第6章 iOS的持续集成
6.1 持续集成工具
6.1.1 Jenkins和Hudson
6.1.2 Jenkins的安装和使用
6.1.3 Jenkins相关插件介绍
6.2 iOS持续集成实践
6.2.1 iOS Web自动化测试的持续集成
6.2.2 iOS UI自动化测试的持续集成
6.2.3 iOS单元测试的持续集成
第7章 iOS测试策略及测试方法
7.1 iOS测试策略
7.2 兼容性测试
7.3 网络流量测试
7.4 升级测试
7.5 性能测试
7.6 稳定性测试
第8章 iOS测试框架实践
8.1 iOS测试框架总览
8.2 UI Automation扩展工具实践
8.3 UI Automation驱动测试框架介绍
8.3.1 UI Automation驱动类测试框架介绍
8.3.2 Appium测试实践
8.4 非UI Automation测试框架实践
8.5 BDD测试框架介绍
8.5.1 Frank测试实践
8.5.2 再谈BDD
8.6 自动化测试框架剖析
￼第9章 Xcode 5测试的新特性
9.1 Xcode 5中的单元测试
9.1.1 XCTest测试框架
9.1.2 便捷的单元测试管理
9.1.3 XCTest Refactoring Tool
9.1.4 新版本的命令和持续集成
9.2 iOS持续集成工具OS X Server
9.2.1 安装配置OS X Server
9.2.2 Web端的Bots设置和持续集成
9.2.3 Xcode 5和OS X Server的双剑合璧
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS测试指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS 6编程实战
目 　 　录
第一部分 　全新功能
第1章 　全新的系统　　2
1.1 　新功能　　2
1.1.1 　集合视图　　3
1.1.2 　自动布局　　3
1.1.3 　自动引用计数　　3
1.1.4 　应用内购买的托管内容　　4
1.1.5 　社交框架　　4
1.1.6 　UI状态保留　　4
1.1.7 　其他新功能　　4
1.2 　小结　　6
1.3 　扩展阅读　　6
第2章 　熟悉Xcode 4和LLVM编译器　　7
2.1 　了解用户界面　　8
2.1.1 　标签式编辑器　　9
2.1.2 　按键绑定的变化　　9
2.1.3 　工程设置编辑器　　10
2.1.4 　内置的版本控制系统　　10
2.1.5 　工作区　　10
2.2 　单窗口工作方式　　10
2.3 　导航面板　　11
2.3.1 　工程导航面板　　12
2.3.2 　符号导航面板　　12
2.3.3 　搜索导航面板　　12
2.3.4 　问题导航面板　　12
2.3.5 　调试导航面板　　12
2.3.6 　断点导航面板　　12
2.3.7 　日志导航面板　　13
2.4 　辅助功能　　13
2.5 　内置的Interface Builder　　13
2.6 　Xcode之核心：LLVM编译器　　14
2.6.1 　Clang编译器前端　　15
2.6.2 　我是一个Bug！修复我　　15
2.7 　LLVM 　4的新功能　　15
2.7.1 　字面量　　15
2.7.2 　字面量和可用性检查　　18
2.7.3 　实例变量的自动合成　　18
2.8 　使用Git进行版本控制　　19
2.8.1 　内置的Git版本控制系统　　19
2.8.2 　版本编辑器　　19
2.8.3 　Git最佳实践　　19
2.9 　Scheme　　20
2.9.1 　为什么使用Scheme　　20
2.9.2 　建议用Scheme实现你的意图　　21
2.9.3 　创建一个Scheme　　21
2.9.4 　共享你的Scheme　　22
2.10 　为编译配置添加注释　　22
2.10.1 　创建xcconfig文件　　22
2.10.2 　重构编译配置文件　　23
2.11 　将代码转换为支持ARC的Objective-C代码　　23
2.12 　Xcode 4 Organizer　　25
2.12.1 　Automatic Device Provisioning　　25
2.12.2 　查看崩溃日志和控制台输出　　25
2.12.3 　查看应用沙盒数据　　26
2.12.4 　管理版本库　　26
2.12.5 　管理应用程序归档　　26
2.12.6 　查看Objective-C和SDK文档　　26
2.13 　小结　　26
2.14 　扩展阅读　　26
2.14.1 　苹果文档　　26
2.14.2 　WWDC讲座　　27
2.14.3 　博客　　27
2.14.4 　网上资源　　27
2.14.5 　图书　　27
第二部分 　熟能生巧
第3章 　Objective-C基础知识　　30
3.1 　命名约定　　30
3.2 　自动引用计数　　32
3.3 　属性　　35
3.3.1 　属性修饰关键字　　36
3.3.2 　属性最佳实践　　37
3.3.3 　私有实例变量　　37
3.4 　存取器　　37
3.5 　分类和扩展　　38
3.5.1 　+load方法　　40
3.5.2 　使用关联引用为分类添加数据　　40
3.5.3 　类扩展　　42
3.6 　正式协议和非正式协议　　42
3.7 　小结　　43
3.8 　扩展阅读　　44
3.8.1 　苹果文档　　44
3.8.2 　其他资源　　44
第4章 　Cocoa设计模式　　45
4.1 　理解模型?视图?控制器　　45
4.1.1 　使用模型类　　46
4.1.2 　使用视图类　　46
4.1.3 　使用控制器类　　47
4.2 　理解委托和数据源　　47
4.3 　使用命令模式　　48
4.3.1 　使用目标?动作　　48
4.3.2 　使用方法签名和调用　　49
4.3.3 　使用蹦床　　52
4.3.4 　撤销　　55
4.4 　使用观察者模式　　55
4.5 　使用单例模式　　58
4.6 　小结　　60
4.7 　扩展阅读　　60
4.7.1 　苹果文档　　60
4.7.2 　其他资源　　61
第5章 　通过Objective-C的ARC管理内存　　62
5.1 　Objective-C的ARC基础入门　　62
5.1.1 　历史简介　　62
5.1.2 　手动引用计数与自动引用计数　　63
5.2 　什么是ARC　　63
5.2.1 　在ARC工程中集成非ARC的第三方代码　　64
5.2.2 　在非ARC工程中集成ARC代码　　64
5.2.3 　框架中的ARC代码　　64
5.2.4 　ARC空声明变量　　67
5.2.5 　Objective-C命名约定　　67
5.2.6 　覆盖默认行为　　67
5.2.7 　自由桥接　　68
5.2.8 　ARC内部原理　　68
5.3 　常见的ARC移植错误　　69
5.4 　小结　　72
5.5 　扩展阅读　　72
5.5.1 　苹果文档　　72
5.5.2 　WWDC讲座　　72
5.5.3 　博客　　73
第6章 　熟练使用表视图　　74
6.1 　UITableView类的继承关系　　74
6.2 　熟悉表视图　　75
6.2.1 　UITableViewController　　75
6.2.2 　UITableViewCell　　75
6.2.3 　提高表视图的滚动速度　　75
6.2.4 　自定义非重复表单元　　82
6.2.5 　表视图最佳方案：编写简洁代码，简化控制器内容　　83
6.3 　小结　　87
6.4 　扩展阅读　　87
6.4.1 　苹果文档　　87
6.4.2 　其他资源　　87
第7章 　集合视图与自动布局　　88
7.1 　集合视图　　88
7.1.1 　类与协议　　88
7.1.2 　示例　　89
7.2 　自动布局　　97
7.2.1 　使用自动布局　　98
7.2.2 　了解自动布局　　98
7.2.3 　相对布局约束　　98
7.2.4 　视觉化格式语言　　101
7.2.5 　调试布局错误　　102
7.3 　小结　　103
7.4 　扩展阅读　　104
7.14.1 　苹果文档　　104
7.14.2 　WWDC讲座　　104
第8章 　绘图功能　　105
8.1 　iOS的不同绘图系统　　105
8.2 　UIKit和视图绘图周期　　106
8.3 　视图绘制与视图布局　　108
8.4 　自定义视图绘制　　108
8.4.1 　通过UIKit绘图　　109
8.4.2 　路径　　109
8.4.3 　理解坐标系　　111
8.4.4 　重新调整大小以及内容模式　　114
8.4.5 　变形　　115
8.4.6 　通过Core Graphics进行绘制　　117
8.4.7 　混用UIKit与Core Graphics　　120
8.4.8 　管理图形上下文　　121
8.5 　优化UIView绘制　　123
8.5.1 　避免绘图　　123
8.5.2 　缓存与后台绘制　　123
8.5.3 　自定义绘图与预渲染　　123
8.5.4 　像素对齐与模糊文本　　124
8.5.5 　透明、不透明与隐藏　　125
8.6 　CGLayer　　125
8.7 　小结　　127
8.8 　扩展阅读　　127
8.8.1 　苹果文档　　127
8.8.2 　其他资源　　128
第9章 　Core Animation 　　129
9.1 　视图动画　　129
9.2 　管理用户交互　　131
9.3 　图层绘制　　132
9.3.1 　直接设置内容　　134
9.3.2 　实现display方法　　134
9.3.3 　自定义绘图　　135
9.3.4 　在自己的上下文中绘图　　136
9.4 　移动对象　　136
9.4.1 　隐式动画　　137
9.4.2 　显式动画　　137
9.4.3 　模型与表示　　138
9.4.4 　关于定时　　140
9.5 　三维动画　　142
9.6 　美化图层　　145
9.7 　用动作实现自动动画　　146
9.8 　为自定义属性添加动画　　147
9.9 　Core Animation与线程　　148
9.10 　小结　　149
9.11 　扩展阅读　　149
9.11.1 　苹果文档　　149
9.11.2 　其他资源　　149
第10章 　错误处理　　150
10.1 　错误处理模式　　150
10.2 　断言　　151
10.3 　异常　　153
10.4 　捕获与报告程序崩溃　　153
10.5 　错误和NSError　　154
10.6 　错误处理块　　156
10.7 　日志　　157
10.7.1 　记录敏感信息　　158
10.7.2 　获取日志文件　　159
10.8 　小结　　159
10.9 　扩展阅读　　159
10.9.1 　苹果文档　　159
10.9.2 　其他资源　　159
第11章 　位置服务　　161
11.1 　Core Location框架　　161
11.1.1 　获取用户位置　　162
11.1.2 　使用内置的罗盘获取用户前进方向　　162
11.1.3 　位置服务和用户隐私　　163
11.2 　后台位置服务　　165
11.2.1 　后台获取位置更新　　165
11.2.2 　显著位置变更通知　　165
11.2.3 　区域监控（地理围栏）　　167
11.3 　位置模拟　　167
11.4 　时刻关注电量消耗　　168
11.5 　小结　　168
11.6 　扩展阅读　　168
第三部分 　选择工具
第12章 　表视图常用UI范例　　170
12.1 　下拉刷新　　170
12.2 　无限滚动　　173
12.3 　行内编辑与键盘　　175
12.4 　UITableView的动画效果　　177
12.5 　表视图动画的实际应用　　178
12.5.1 　实现折叠列表　　178
12.5.2 　实现选项抽屉　　180
12.5.3 　在表视图单元格中使用手势识别器　　181
12.6 　小结　　181
12.7 　扩展阅读　　182
第13章 　多任务　　183
13.1 　后台运行最佳实践：能力越大责任越大　　183
13.2 　状态恢复系统　　185
13.2.1 　测试状态恢复系统　　186
13.2.2 　选择性加入　　186
13.2.3 　应用启动过程的变化　　187
13.2.4 　状态恢复标识符　　187
13.2.5 　状态编码器与状态解码器　　188
13.2.6 　表视图和集合视图　　191
13.2.7 　状态恢复系统的高级应用　　192
13.3 　多任务和运行循环简介　　192
13.4 　以操作为中心的多任务开发　　193
13.5 　用GCD实现多任务　　197
13.5.1 　GCD和ARC　　198
13.5.2 　源和定时器　　198
13.5.3 　用分派屏障创建同步点　　199
13.5.4 　队列目标和优先级　　200
13.5.5 　分派组　　201
13.5.6 　队列关联数据　　202
13.5.7 　分派数据　　202
13.6 　小结　　203
13.7 　扩展阅读　　203
13.7.1 　苹果文档　　203
13.7.2 　WWDC讲座　　203
13.7.3 　其他资源　　203
第14章 　REST解惑　　204
14.1 　REST简介　　205
14.2 　选择数据交换格式　　205
14.2.1 　在iOS中解析XML　　205
14.2.2 　在iOS中解析JSON　　206
14.2.3 　XML与JSON　　207
14.2.4 　模型版本化　　208
14.3 　假想的Web服务　　208
14.4 　重要提醒　　209
14.5 　RESTfulEngine架构（iHotelApp示例代码）　　209
14.5.1 　NSURLConnection与第三方框架　　209
14.5.2 　创建RESTfulEngine　　210
14.5.3 　使用访问令牌对API调用进行认证　　213
14.5.4 　在RESTfulEngine.m中覆盖相关方法以添加自定义认证头部　　213
14.5.5 　取消请求　　214
14.5.6 　请求响应　　214
14.5.7 　对JSON数据进行键值编码　　215
14.5.8 　列表页面的JSON对象与详细页面的JSON对象　　217
14.5.9 　嵌套JSON对象　　217
14.5.10 　少即是多　　219
14.5.11 　错误处理　　219
14.5.12 　本地化　　221
14.5.13 　使用分类处理其他格式　　221
14.5.14 　在iOS中提升性能的小技巧　　222
14.6 　小结　　222
14.7 　扩展阅读　　222
14.7.1 　苹果文档　　222
14.7.2 　其他资源　　223
第15章 　通过安全服务巩固系统安全　　224
15.1 　理解iOS沙盒　　224
15.2 　保证网络通信的安全　　225
15.2.1 　证书工作原理　　226
15.2.2 　检验证书的有效性　　228
15.2.3 　判断证书的可信度　　231
15.3 　使用文件保护　　233
15.4 　使用钥匙串　　234
15.5 　使用加密　　236
15.5.1 　AES概要　　237
15.5.2 　使用PBKDF2将密码转换成密钥　　237
15.5.3 　AES模式和填充　　239
15.5.4 　初始化向量　　240
15.5.5 　使用HMAC进行认证　　241
15.5.6 　错误的密码　　241
15.5.7 　进行单槽加密　　242
15.5.8 　提高CommonCrypto的性能　　244
15.5.9 　组合使用加密和压缩　　247
15.6 　小结　　247
15.7 　扩展阅读　　248
15.7.1 　苹果文档　　248
15.7.2 　WWDC讲座　　248
15.7.3 　其他资源　　248
第16章 　在多个苹果平台和苹果设备上运行应用　　249
16.1 　开发多平台应用　　249
16.1.1 　可配置的目标设置：Base SDK和Deployment Target　　250
16.1.2 　支持多个SDK时的注意事项：框架、类和方法　　250
16.1.3 　检查框架、类和方法的可用性　　252
16.2 　检测设备的功能　　253
16.2.1 　检测设备及判断功能　　253
16.2.2 　检测硬件和传感器　　254
16.3 　应用内发送Email和短信　　258
16.4 　检查多任务支持　　258
16.5 　支持iPhone 5　　259
16.6 　UIRequiredDeviceCapabilities　　260
16.7 　小结　　261
16.8 　扩展阅读　　262
16.8.1 　苹果文档　　262
16.8.2 　其他资源　　262
第17章 　国际化和本地化　　263
17.1 　什么是本地化　　263
17.2 　本地化字符串　　264
17.3 　对未本地化的字符串进行审查　　265
17.4 　格式化数字和日期　　266
17.5 　nib文件和Base Internationalization　　269
17.6 　本地化复杂字符串　　270
17.7 　小结　　272
17.8 　扩展阅读　　272
17.8.1 　苹果文档　　272
17.8.2 　WWDC讲座　　272
第18章 　通过应用内购买提高销售业绩　　273
18.1 　开始之前　　273
18.2 　应用内购买什么　　273
18.2.1 　禁止通过应用内购买出售的产品　　274
18.2.2 　重新思考你的商业模式　　275
18.3 　在iTunes Connect上设置产品配置　　275
18.3.1 　第一步：为你的应用创建一个新的App ID　　276
18.3.2 　第二步：生成配置文件　　277
18.3.3 　第三步：创建应用的产品项　　277
18.3.4 　第四步：创建应用内购买产品项　　278
18.3.5 　第五步：生成共享密钥　　279
18.3.6 　第六步：创建测试账户　　279
18.3.7 　第七步：创建托管内容　　279
18.4 　实现应用内购买　　281
18.5 　MKStoreKit简介　　281
18.5.1 　为什么要用MKStoreKit　　281
18.5.2 　MKStoreKit的设计　　282
18.5.3 　定制MKStoreKit　　283
18.6 　实现购买　　285
18.7 　下载托管内容　　285
18.8 　测试代码　　286
18.9 　排错　　286
18.9.1 　无效的产品ID　　286
18.9.2 　无法连接iTunes Store　　286
18.9.3 　你已经购买了该产品，但它尚未下载　　287
18.10 　小结　　287
18.11 　扩展阅读　　287
18.11.1 　苹果文档　　287
18.11.2 　博客　　287
18.11.3 　其他资源　　287
第19章 　调试　　288
19.1 　LLDB　　288
19.2 　使用LLDB进行调试　　288
19.2.1 　dSYM文件　　289
19.2.2 　符号化　　290
19.3 　断点　　291
19.4 　观察点　　294
19.5 　LLDB控制台　　295
19.6 　NSZombieEnabled标志　　298
19.7 　不同的崩溃类型　　299
19.7.1 　EXC_BAD_ACCESS　　299
19.7.2 　SIGSEGV　　300
19.7.3 　SIGBUS　　300
19.7.4 　SIGTRAP　　300
19.7.5 　EXC_ARITHMETIC　　300
19.7.6 　SIGILL　　300
19.7.7 　SIGABRT　　301
19.7.8 　看门狗超时　　301
19.7.9 　自定义错误信号处理程序　　301
19.8 　收集崩溃报告　　302
19.9 　第三方崩溃报告服务　　303
19.10 　小结　　303
19.11 　扩展阅读　　304
19.11.1 　苹果文档　　304
19.11.2 　WWDC讲座　　304
19.11.3 　其他资源　　304
第20章 　性能调优　　305
20.1 　性能思维模式　　305
20.1.1 　指导方针一：产品是为了取悦用户才存在的　　305
20.1.2 　指导方针二：设备是为了方便用户而存在的　　305
20.1.3 　指导方针三：做到极致　　305
20.1.4 　指导方针四：用户的感知才是实际的　　306
20.1.5 　指导方针五：关注能带来大收益的方面　　306
20.2 　欢迎走入Instruments的世界　　306
20.3 　查找内存问题　　308
20.4 　查找CPU问题　　311
20.4.1 　Accelerate框架　　314
20.4.2 　GLKit　　315
20.5 　绘图性能　　315
20.6 　优化磁盘访问和网络访问　　317
20.7 　小结　　318
20.8 　扩展阅读　　318
20.8.1 　苹果文档　　318
20.8.2 　其他资源　　318
第四部分 　超越极限
第21章 　故事板及自定义切换效果　　320
21.1 　初识故事板　　320
21.1.1 　实例化故事板　　321
21.1.2 　加载故事板中的视图控制器　　321
21.1.3 　联线　　321
21.1.4 　使用故事板来实现表视图　　323
21.2 　自定义切换效果　　324
21.2.1 　还有一个优点　　325
21.2.2 　白璧微瑕　　326
21.3 　使用UIAppearance协议自定义视图　　326
21.4 　小结　　327
21.5 　扩展阅读　　327
21.5.1 　苹果文档　　327
21.5.2 　WWDC讲座　　327
21.5.3 　其他资源　　327
第22章 　Cocoa的大招：键值编码和观察　　328
22.1 　键值编码　　328
22.1.1 　用KVC赋值　　330
22.1.2 　用键路径遍历属性　　331
22.1.3 　KVC和容器类　　331
22.1.4 　KVC和字典　　335
22.1.5 　KVC和非对象　　336
22.1.6 　用KVC实现高阶消息传递　　336
22.1.7 　容器操作符　　336
22.2 　键值观察　　337
22.2.1 　KVO和容器类　　339
22.2.2 　KVO是如何实现的　　340
22.3 　KVO的权衡　　340
22.4 　小结　　342
22.5 　扩展阅读　　342
22.5.1 　苹果文档　　342
22.5.2 　其他资源　　342
第23章 　不同凡想：块和函数式编程　　343
23.1 　什么是块　　343
23.1.1 　为什么要用函数式编程　　343
23.1.2  “函数式”UIAlertView　　344
23.2 　声明块　　345
23.2.1 　变量作用域　　346
23.2.2 　栈与堆　　346
23.3 　实现块　　347
23.4 　块和并发　　349
23.4.1 　GCD中的分派队列　　349
23.4.2 　NSOperationQueue与GCD分派队列　　350
23.5 　基于块的Cocoa方法　　351
23.5.1 　UIView的动画使用块　　351
23.5.2 　展示和移除视图控制器　　352
23.5.3 　TweetComposer 与应用程序中发送邮件（短信）　　352
23.5.4 　用NSDictionary的enum erationWithBlock遍历字典　　352
23.5.5 　寻找基于块的方法　　353
23.6 　支持情况　　353
23.7 　小结　　353
23.8 　扩展阅读　　354
23.8.1 　苹果文档　　354
23.8.2 　博客　　354
23.8.3 　其他资源　　354
第24章 　离线支持　　355
24.1 　需要离线支持的原因　　355
24.2 　缓存策略　　356
24.2.1 　存储缓存　　356
24.2.2 　缓存版本和失效　　359
24.3 　数据模型缓存　　359
24.4 　缓存版本控制　　363
24.5 　创建内存缓存　　364
24.5.1 　为AppCache设计内存缓存　　365
24.5.2 　处理内存警告　　366
24.5.3 　处理结束和进入后台通知　　367
24.6 　创建URL缓存　　367
24.6.1 　过期模型　　368
24.6.2 　验证模型　　368
24.6.3 　示例　　368
24.6.4 　用URL缓存来缓存图片　　369
24.7 　小结　　369
24.8 　扩展阅读　　369
24.8.1 　苹果文档　　369
24.8.2 　书籍　　369
24.8.3 　其他资源　　369
第25章 　云端数据　　370
25.1 　iCloud　　370
25.2 　第三方云服务提供商　　372
25.3 　Parse　　373
25.3.1 　Parse入门　　373
25.3.2 　Parse的顶层对象　　374
25.3.3 　代码　　374
25.4 　StackMob　　376
25.4.1 　设置StackMob　　376
25.4.2 　登录、上传和获取数据　　377
25.4.3 　StackMob自定义代码　　377
25.5 　后端即服务的缺点　　378
25.6 　小结　　378
25.7 　扩展阅读　　378
25.7.1 　苹果文档　　378
25.7.2 　WWDC讲座　　378
25.7.3 　其他资源　　379
第26章 　精妙的文本布局　　380
26.1 　基本控件：字段、视图和标签　　380
26.2 　UIKit中的富文本　　381
26.2.1 　理解粗体、斜体和下划线　　381
26.2.2 　属性化字符串　　382
26.2.3 　段落样式　　384
26.2.4 　属性化字符串和HTML　　384
26.3 　用Web视图显示富文本　　385
26.3.1 　在Web视图中显示和访问HTML　　385
26.3.2 　响应用户交互　　386
26.3.3 　在滚动视图和表格视图中绘制Web视图　　386
26.4 　Core Text　　387
26.4.1 　用CTFramesetter进行简单的布局　　387
26.4.2 　为非连续路径创建框架　　388
26.4.3 　排版器、文本行、连续文本和字形　　390
26.4.4 　沿着曲线绘制文本　　391
26.5 　小结　　395
26.6 　扩展阅读　　395
26.6.1 　苹果文档　　395
26.6.2 　WWDC讲座　　395
26.6.3 　其他资源　　396
第27章 　创建Core Foundation应用　　397
27.1 　Core Foundation类型　　397
27.2 　命名和内存管理　　398
27.3 　分配器　　399
27.4 　内省　　400
27.5 　字符串和数据　　400
27.5.1 　常量字符串　　401
27.5.2 　创建字符串　　401
27.5.3 　转换为C字符串　　402
27.5.4 　其他字符串操作符　　404
27.5.5 　字符串的支持存储　　404
27.5.6 　CFData　　405
27.6 　容器类型　　405
27.6.1 　CFArray　　406
27.6.2 　CFDictionary　　406
27.6.3 　CFSet和CFBag　　406
27.6.4 　其他容器类型　　407
27.6.5 　回调函数　　407
27.7 　自由桥接　　408
27.8 　小结　　411
27.9 　扩展阅读　　411
27.9.1 　苹果文档　　411
27.9.2 　其他资源　　411
第28章 　深度解析Objective-C 　　412
28.1 　理解类和对象　　412
28.2 　使用方法和属性　　414
28.3 　消息传递如何工作　　416
28.3.1 　动态实现　　417
28.3.2 　快速转发　　419
28.3.3 　普通转发　　422
28.3.4 　转发失败　　422
28.3.5 　各种版本的objc_msgSend　　423
28.4 　方法混写　　423
28.5 　ISA混写　　426
28.6 　方法混写与ISA混写　　427
28.7 　小结　　427
28.8 　扩展阅读　　427
28.8.1 　苹果文档　　427
28.8.2 　其他资源　　428
索引　　429
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS 6编程实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS 5基础教程
目 　录

第1章 　欢迎来到iOS世界　　1
1.1 　关于本书　　1
1.2 　必要条件　　1
1.2.1 　开发者的选择　　3
1.2.2 　必备知识　　4
1.3 　编写iOS应用程序有何不同　　5
1.3.1 　只有一个应用程序正在运行　　5
1.3.2 　只有一个窗口　　5
1.3.3 　访问受限　　5
1.3.4 　有限的响应时间　　6
1.3.5 　有限的屏幕大小　　6
1.3.6 　有限的系统资源　　6
1.3.7 　不支持垃圾收集　　7
1.3.8 　新功能　　7
1.3.9 　与众不同的方法　　7
1.4 　本书内容　　7
1.5 　本次更新的内容　　9
1.6 　准备开始吧　　9
第2章 　创建基本项目　　10
2.1 　在Xcode中设置项目　　10
2.1.1 　Xcode工作区窗口　　14
2.1.2 　深入研究项目　　21
2.2 　Interface Builder简介　　23
2.2.1 　nib文件的构成　　24
2.2.2 　库　　25
2.2.3 　在视图中添加标签　　26
2.2.4 　属性修改　　29
2.3 　美化iPhone应用　　30
2.4 　小结　　34
第3章 　处理基本交互　　35
3.1 　MVC范型　　35
3.2 　创建项目　　36
3.3 　查看视图控制器　　37
3.3.1 　理解输出口和操作　　38
3.3.2 　清理视图控制器　　41
3.3.3 　设计用户界面　　41
3.3.4 　测试项目　　51
3.4 　理解应用程序委托　　51
3.5 　小结　　55
第4章 　更丰富的用户界面　　56
4.1 　满是控件的屏幕　　56
4.2 　活动、静态和被动控件　　58
4.3 　创建应用程序　　59
4.4 　实现图像视图和文本字段　　59
4.4.1 　添加图像视图　　59
4.4.2 　调整图像视图　　61
4.4.3 　设置视图属性　　62
4.4.4 　添加文本字段　　65
4.4.5 　创建和连接输出口　　70
4.5 　关闭键盘　　71
4.5.1 　完成输入后关闭键盘　　72
4.5.2 　通过触摸背景关闭键盘　　73
4.5.3 　添加滑块和标签　　75
4.5.4 　连接操作和输出口　　77
4.5.5 　实现操作方法　　77
4.6 　实现开关、按钮和分段控件　　78
4.6.1 　添加两个带标签的开关　　79
4.6.2 　连接开关输出口和操作　　80
4.6.3 　实现开关的操作方法　　80
4.6.4 　添加按钮　　81
4.6.5 　为按钮创建并关联输出口和操作　　82
4.6.6 　实现分段控件的操作方法　　82
4.7 　实现操作表和警报　　82
4.7.1 　遵从操作表委托方法　　83
4.7.2 　显示操作表　　83
4.8 　美化按钮　　86
4.8.1 　viewDidLoad方法　　87
4.8.2 　控件状态　　87
4.8.3 　可拉伸图像　　88
4.9 　小结　　88
第5章 　自动旋转和自动调整大小　　89
5.1 　自动旋转机制　　89
5.1.1 　点、像素和Retina显示屏　　90
5.1.2 　自动转屏方法　　91
5.2 　使用自动调整属性处理旋转　　91
5.2.1 　配置应用支持的方向　　91
5.2.2 　指定旋转支持　　92
5.2.3 　使用自动调整属性设计界面　　93
5.2.4 　大小检查器的自动调整属性　　94
5.2.5 　设置按钮的自动调整属性　　96
5.3 　在旋转时重构视图　　97
5.3.1 　创建和连接输出口　　98
5.3.2 　在旋转时移动按钮　　99
5.4 　切换视图　　100
5.4.1 　设计两个视图　　101
5.4.2 　实现交换　　102
5.4.3 　修改输出口集合　　104
5.5 　小结　　104
第6章 　多视图应用程序　　106
6.1 　多视图应用程序的常见类型　　106
6.2 　多视图应用程序的体系结构　　109
6.2.1 　根控制器　　110
6.2.2 　内容视图剖析　　111
6.3 　构建View Switcher　　111
6.3.1 　创建视图控制器和nib文件　　112
6.3.2 　修改应用程序委托　　114
6.3.3 　修改BIDSwitchView Controller.h　　116
6.3.4 　添加视图控制器　　116
6.3.5 　构建包含工具栏的视图　　117
6.3.6 　编写根视图控制器　　119
6.3.7 　实现内容视图　　123
6.3.8 　制作转换动画　　126
6.4 　小结　　128
第7章 　标签栏与选取器　　129
7.1 　Pickers应用程序　　130
7.2 　委托和数据源　　132
7.3 　建立标签栏框架　　132
7.3.1 　创建文件　　133
7.3.2 　添加根视图控制器　　134
7.3.3 　创建TabBarController.xib　　135
7.3.4 　连接输出口，然后运行　　140
7.4 　实现日期选取器　　141
7.5 　实现单组件选取器　　144
7.5.1 　声明输出口和操作　　144
7.5.2 　构建视图　　145
7.5.3 　将控制器实现为数据源和委托　　146
7.6 　实现多组件选取器　　149
7.6.1 　声明输出口和操作　　150
7.6.2 　构建视图　　150
7.6.3 　实现控制器　　150
7.7 　实现依赖组件　　153
7.8 　使用自定义选取器创建简单游戏　　160
7.8.1 　编写控制器头文件　　160
7.8.2 　构建视图　　160
7.8.3 　添加图像资源　　161
7.8.4 　实现控制器　　161
7.8.5 　最后的细节　　166
7.8.6 　链接Audio Toolbox框架　　170
7.9 　小结　　171
第8章 　表视图简介　　172
8.1 　表视图基础　　172
8.1.1 　表视图和表视图单元　　173
8.1.2 　分组表和无格式表　　174
8.2 　实现一个简单的表　　175
8.2.1 　设计视图　　175
8.2.2 　编写控制器　　176
8.2.3 　添加一个图像　　179
8.2.4 　表视图单元样式　　181
8.2.5 　设置缩进级别　　182
8.2.6 　处理行的选择　　183
8.2.7 　更改字体大小和行高　　185
8.3 　定制表视图单元　　186
8.3.1 　向表视图单元添加子视图　　186
8.3.2 　创建UITableViewCell子类　　187
8.3.3 　从nib文件加载UITableViewCell　　192
8.4 　分组分区和索引分区　　197
8.4.1 　构建视图　　197
8.4.2 　导入数据　　197
8.4.3 　实现控制器　　198
8.4.4 　添加索引　　201
8.5 　实现搜索栏　　202
8.5.1 　重新考虑设计　　203
8.5.2 　深层可变副本　　203
8.5.3 　更新控制器头文件　　205
8.5.4 　修改视图　　206
8.5.5 　修改控制器实现　　210
8.6 　小结　　221
第9章 　导航控制器和表视图　　222
9.1 　导航控制器　　222
9.1.1 　栈的性质　　222
9.1.2 　控制器栈　　223
9.2 　由6个部分组成的分层应用程序：Nav　　224
9.2.1 　子控制器　　225
9.2.2 　Nav应用程序的骨架　　228
9.2.3 　向项目中添加图形　　234
9.2.4 　第一个子控制器：展示按钮视图　　235
9.2.5 　第二个子控制器：校验表　　242
9.2.6 　第三个子控制器：表行上的控件　　246
9.2.7 　第四个子控制器：可移动的行　　252
9.2.8 　第五个子控制器：可删除的行　　257
9.2.9 　第六个子控制器：可编辑的详细窗格　　262
9.2.10 　其他内容　　280
9.3 　小结　　282
第10章 　storyboard　　284
10.1 　创建一个简单的storyboard　　285
10.2 　动态原型单元　　287
10.2.1 　使用storyboard的动态表内容　　288
10.2.2 　编辑原型单元　　289
10.2.3 　实现表视图数据源　　290
10.2.4 　它会加载吗　　292
10.3 　静态单元　　293
10.3.1 　实现静态单元　　293
10.3.2 　实现表视图数据源　　294
10.4 　大话segue　　296
10.4.1 　创建segue导航　　296
10.4.2 　设计storyboard　　297
10.4.3 　第一个segue　　299
10.4.4 　更为实用的任务列表　　299
10.4.5 　查看任务详情　　300
10.4.6 　设置更多segue　　301
10.4.7 　从列表中传递任务　　301
10.4.8 　处理任务细节　　303
10.4.9 　回传详细信息　　304
10.4.10 　让列表获取详细信息　　305
10.4.11 　小结　　306
第11章 　iPad开发注意事项　　307
11.1 　分割视图和浮动窗口　　307
11.1.1 　创建SplitView项目　　309
11.1.2 　在storyboard中定义结构　　310
11.1.3 　代码定义功能　　311
11.2 　显示总统信息　　318
11.3 　创建浮动窗口　　324
11.4 　小结　　329
第12章 　应用程序设置和用户默认设置　　330
12.1 　设置束　　330
12.2 　AppSettings应用程序　　331
12.2.1 　创建项目　　333
12.2.2 　使用设置束　　334
12.2.3 　读取应用程序中的设置　　346
12.2.4 　注册默认值　　350
12.2.5 　更改应用程序中的默认设置　　351
12.2.6 　实现逼真效果　　354
12.3 　小结　　357
第13章 　保存数据　　358
13.1 　应用程序的沙盒　　358
13.1.1 　获取Documents目录　　360
13.1.2 　获取tmp目录　　360
13.2 　文件保存策略　　361
13.2.1 　单个文件持久性　　361
13.2.2 　多个文件持久性　　361
13.3 　属性列表　　361
13.3.1 　属性列表序列化　　362
13.3.2 　持久性应用程序的第一个版本　　363
13.4 　对模型对象进行归档　　368
13.4.1 　符合NSCoding　　368
13.4.2 　实现NSCopying　　369
13.4.3 　对数据对象进行归档和取消归档　　370
13.4.4 　归档应用程序　　371
13.5 　使用iOS的嵌入式SQLite3　　374
13.5.1 　创建或打开数据库　　375
13.5.2 　绑定变量　　376
13.5.3 　SQLite3应用程序　　377
13.6 　使用Core Data　　383
13.6.1 　实体和托管对象　　385
13.6.2 　Core Data应用程序　　388
13.7 　小结　　398
第14章 　iCloud之旅　　399
14.1 　使用UIDocument管理文档存储　　399
14.1.1 　构建TinyPix　　400
14.1.2 　创建BIDTinyPixDocument　　401
14.1.3 　主代码　　404
14.1.4 　初始化storyboard　　410
14.1.5 　创建BIDTinyPixView　　412
14.1.6 　storyboard设计　　416
14.2 　添加iCloud支持　　419
14.2.1 　创建provisioning profile　　420
14.2.2 　启用iCloud授权　　420
14.2.3 　如何查询　　421
14.2.4 　保存在哪里　　423
14.2.5 　在iCloud上存储首选项　　423
14.3 　小结　　424
第15章 　Grand Central Dispatch、后台处理及其应用　　426
15.1 　Grand Central Dispatch　　426
15.2 　SlowWorker简介　　427
15.3 　线程基础知识　　430
15.4 　工作单元　　430
15.5 　GCD：低级队列　　431
15.5.1 　傻瓜式操作　　431
15.5.2 　改进SlowWorker　　432
15.6 　后台处理　　438
15.6.1 　应用程序生命周期　　439
15.6.2 　状态更改通知　　439
15.6.3 　创建State Lab　　441
15.6.4 　执行状态　　442
15.6.5 　利用执行状态更改　　444
15.6.6 　处理不活动状态　　444
15.6.7 　处理后台状态　　449
15.7 　小结　　457
第16章 　使用Quartz和OpenGL绘图　　458
16.1 　图形世界的两个视图　　458
16.2 　Quart 2D绘图方法　　459
16.2.1 　Quartz 2D的图形上下文　　459
16.2.2 　坐标系　　460
16.2.3 　指定颜色　　461
16.2.4 　在上下文中绘制图像　　463
16.2.5 　绘制形状：多边形、直线和曲线　　463
16.2.6 　Quartz 2D工具采样器：模式、梯度、虚线模式　　464
16.3 　QuartzFun应用程序　　465
16.3.1 　构建QuartzFun应用程序　　465
16.3.2 　添加Quartz Drawing代码　　474
16.3.3 　优化QuartzFun应用程序　　478
16.4 　GLFun应用程序　　481
16.4.1 　构建GLFun应用程序　　482
16.4.2 　创建BIDGLFunView　　482
16.4.3 　更新BIDViewController　　489
16.4.4 　更新nib　　490
16.4.5 　完成GLFun　　490
16.5 　小结　　490
第17章 　轻击、触摸和手势　　491
17.1 　多点触控术语　　491
17.2 　响应者链　　492
17.2.1 　响应事件　　492
17.2.2 　转发事件：保持响应者链的活动状态　　493
17.3 　多点触控体系结构　　494
17.4 　4个手势通知方法　　494
17.5 　检测触摸　　495
17.6 　检测轻扫　　498
17.6.1 　使用自动手势识别　　502
17.6.2 　实现多个轻扫动作　　503
17.7 　检测多次轻击　　505
17.8 　检测捏合操作　　509
17.9 　创建和使用自定义手势　　512
17.9.1 　CheckPlease应用程序　　512
17.9.2 　CheckPlease触摸方法　　514
17.10 　小结　　516
第18章 　Core Location定位功能　　517
18.1 　位置管理器　　517
18.1.1 　设置所需的精度　　518
18.1.2 　设置距离筛选器　　518
18.1.3 　启动位置管理器　　519
18.1.4 　更明智地使用位置管理器　　519
18.2 　位置管理器委托　　519
18.2.1 　获取位置更新　　519
18.2.2 　使用CLLocation获取纬度和经度　　519
18.2.3 　错误通知　　521
18.3 　尝试使用Core Location　　522
18.3.1 　更新位置管理器　　525
18.3.2 　确定移动距离　　526
18.4 　小结　　527
第19章 　陀螺仪和加速计　　528
19.1 　加速计物理学　　528
19.2 　不要忘记旋转　　529
19.3 　Core Motion和动作管理器　　529
19.3.1 　基于事件的动作　　530
19.3.2 　主动动作访问　　535
19.3.3 　加速计结果　　537
19.4 　检测摇动　　537
19.4.1 　Baked-In摇动　　538
19.4.2 　摇动与击碎　　539
19.5 　将加速计用做方向控制器　　544
19.5.1 　滚弹珠程序　　545
19.5.2 　编写Ball View　　547
19.5.3 　计算小球运动　　549
19.6 　小结　　552
第20章 　iPhone照相机和照片库　　553
20.1 　使用图像选取器和UIImagePickerController　　553
20.2 　实现图像选取器控制器委托　　555
20.3 　实际测试照相机和库　　556
20.3.1 　设计界面　　557
20.3.2 　实现照相机视图控制器　　558
20.4 　小结　　562
第21章 　应用程序本地化　　563
21.1 　本地化体系结构　　563
21.2 　字符串文件　　564
21.2.1 　字符串文件里面是什么　　565
21.2.2 　本地化的字符串宏　　565
21.3 　现实中的iOS：本地化应用程序　　566
21.3.1 　创建LocalizeMe　　567
21.3.2 　测试LocalizeMe　　569
21.3.3 　本地化nib文件　　570
21.3.4 　本地化图像　　573
21.3.5 　生成和本地化字符串文件　　575
21.3.6 　本地化应用程序显示名称　　577
21.4 　小结　　578
第22章 　未来之路　　579
22.1 　苹果公司的文档　　579
22.2 　邮件列表　　579
22.3 　论坛　　580
22.4 　网站　　580
22.5 　博客　　581
22.6 　会议　　582
22.7 　作者　　582
22.8 　再会　　583

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS 5基础教程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>AV Foundation 开发秘籍
目录
第Ⅰ部分 AV Foundation基础
第1章 AV Foundation入门 3
1.1 AV Foundation的含义 3
1.2 AV Foundation的适用范围 4
1.3 解析AV Foundation 5
1.3.1 音频播放和记录 5
1.3.2 媒体文件检查 6
1.3.3 视频播放 6
1.3.4 媒体捕捉 6
1.3.5 媒体编辑 6
1.3.6 媒体处理 6
1.4 了解数字媒体 6
1.4.1 数字媒体采样 7
1.4.2 音频采样介绍 7
1.5 数字媒体压缩 11
1.5.1 色彩二次抽样 11
1.5.2 编解码器压缩 13
1.5.3 视频编解码器 13
1.5.4 音频编解码器 15
1.6 容器格式 16
1.7 初识AV Foundation 16
1.8 小结 20
1.9 挑战 20
第2章 播放和录制音频 21
2.1 Mac和iOS的音频环境 21
2.2 理解音频会话 22
2.2.1 音频会话分类 22
2.2.2 配置音频会话 23
2.3 使用AVAudioPlayer播放音频 23
2.3.1 创建AVAudioPlayer 23
2.3.2 对播放进行控制 24
2.4 创建Audio Looper 25
2.5 配置音频会话 29
2.6 处理中断事件 30
2.7 对线路改变的响应 33
2.8 使用AVAudioRecorder录制音频 35
2.8.1 创建AVAudioRecorder 36
2.8.2 控制录音过程 37
2.9 创建Voice Memo应用程序 38
2.9.1 配置音频会话 38
2.9.2 实现录音功能 39
2.10 使用Audio Metering 44
2.11 小结 48
第3章 资源和元数据 49
3.1 理解资源的含义 49
3.2 创建资源 50
3.2.1 iOS Assets库 50
3.2.2 iOS iPod库 51
3.2.3 Mac iTunes库 52
3.3 异步载入 52
3.4 媒体元数据 54
3.5 使用元数据 58
3.5.1 查找元数据 59
3.5.2 使用AVMetadataItem 60
3.6 创建MetaManager应用程序 63
3.6.1 THMediaItem 63
3.6.2 THMetadata的实现 67
3.6.3 数据转换器 69
3.6.4 简单转换 70
3.6.5 转换Artwork 71
3.6.6 转换注释 72
3.6.7 转换音轨数据 73
3.6.8 转换唱片数据 75
3.6.9 转换风格数据 76
3.6.10 完成THMetadata 79
3.7 保存元数据 81
3.8 小结 82
3.9 挑战 83
第4章 视频播放 85
4.1 播放功能综述 85
4.1.1 AVPlayer 86
4.1.2 AVPlayerLayer 86
4.1.3 AVPlayerItem 88
4.2 播放秘籍 88
4.3 处理时间 90
4.4 创建视频播放器 91
4.4.1 创建视频视图 91
4.4.2 创建视频控制器 93
4.4.3 监听状态改变 96
4.5 时间监听 97
4.5.1 定期监听 98
4.5.2 边界时间监听 98
4.5.3 条目结束监听 99
4.5.4 播放栏委托回调 100
4.6 创建可视搓擦条 102
4.7 显示字幕 106
4.8 Airplay 110
4.9 小结 111
4.10 挑战 112
第5章 AV Kit用法 113
5.1 针对iOS平台的AV Kit框架 113
5.2 针对Mac OS X平台的AV Kit框架 115
5.3 迈出第一步 115
5.4 控件类型 119
5.4.1 内嵌类型 119
5.4.2 浮动类型 120
5.4.3 最小化类型 120
5.4.4 None类型 121
5.5 拓展学习 121
5.6 章的处理 124
5.7 启用修剪 129
5.8 导出 130
5.9 传统资源的兼容 132
5.10 小结 135
5.11 挑战 136
第Ⅱ部分 媒 体 捕 捉
第6章 捕捉媒体 139
6.1 捕捉功能综述 139
6.1.1 捕捉会话 140
6.1.2 捕捉设备 140
6.1.3 捕捉设备的输入 140
6.1.4 捕捉的输出 141
6.1.5 捕捉连接 141
6.1.6 捕捉预览 141
6.2 简单的秘籍 143
6.3 创建相机应用程序 144
6.3.1 创建预览视图 145
6.3.2 创建捕捉控制器 148
6.3.3 设置捕捉会话 149
6.3.4 启动和停止会话 151
6.3.5 处理隐私需求 152
6.3.6 切换摄像头 153
6.3.7 配置捕捉设备 155
6.3.8 调整焦距和曝光 156
6.3.9 调整闪光灯和手电筒模式 160
6.3.10 拍摄静态图片 161
6.3.11 使用Assets Library框架 163
6.3.12 视频捕捉 165
6.4 小结 170
6.5 挑战 170
第7章 高级捕捉功能 171
7.1 视频缩放 171
7.2 人脸检测 176
7.3 机器可读代码识别 186
7.3.1 一维条码 186
7.3.2 创建条码扫描器 188
7.3.3 创建条码识别的委托 191
7.4 使用高帧率捕捉 196
7.4.1 高帧率捕捉综述 197
7.4.2 支持高帧率捕捉 197
7.5 视频处理 201
7.6 学习CMSampleBuffer 202
7.6.1 样本数据 202
7.6.2 格式描述 203
7.6.3 时间信息 204
7.6.4 附加的元数据 204
7.6.5 AVCaptureVideoData- Output 205
7.7 小结 209
7.8 挑战 209
第8章 读取和写入媒体 211
8.1 综述 211
8.1.1 AVAssetReader 212
8.1.2 AVAssetWriter 212
8.1.3 读写示例 213
8.2 创建音频波形视图 215
8.2.1 读取音频样本 216
8.2.2 缩减音频样本 220
8.2.3 渲染音频样本 222
8.3 捕捉录制的高级方法 224
8.4 小结 237
8.5 挑战 238
第Ⅲ部分 媒体创建和编辑
第9章 媒体的组合和编辑 241
9.1 组合媒体 241
9.2 时间的处理 243
9.2.1 CMTime 243
9.2.2 CMTimeRange 245
9.3 基础方法 246
9.4 15 Seconds示例应用程序 249
9.5 创建一个组合 251
9.6 导出组合 256
9.7 小结 260
9.8 挑战 260
第10章 混合音频 261
10.1 混合音频 261
10.2 15 Seconds应用程序中的音频混合 264
10.3 小结 269
10.4 挑战 269
第11章 创建视频过渡效果 271
11.1 综述 271
11.1.1 AVVideoComposition 272
11.1.2 AVVideoComposition- Instruction 272
11.1.3 AVVideoCompositionLayer-Instruction 272
11.2 概念阶段 272
11.2.1 部署视频布局 273
11.2.2 定义重叠区域 274
11.2.3 计算通过和过渡的时间范围 276
11.2.4 创建组合和层指令 278
11.2.5 创建和配置AVVideo- Composition 279
11.2.6 创建视频组合的捷径 280
11.3 为15 Seconds应用程序添加视频过渡 281
11.4 小结 290
11.5 挑战 290
第12章 动画图层内容 291
12.1 Core Animation应用 291
12.2 在AV Foundation中使用Core Animation 293
12.2.1 使用AVSynchronizedLayer播放 294
12.2.2 使用AVVideoComposition-CoreAnimationTool导出 295
12.3 15 Seconds应用程序：添加动画标题 296
12.4 准备组合 304
12.4.1 播放时应用Core Animation 305
12.4.2 导出时应用Core Animation 306
12.5 小结 307
12.6 挑战 308
↑折 叠
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>AV Foundation 开发秘籍
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS开发进阶
推荐序
第1章引言
1.1 我为什么要写本书
1.1.1 我的构思
1.1.2 内容导读
1.1.3 目标读者
1.1.4 随书示例代码和勘误
1.1.5 致谢
1.2 如何提高iOS 开发技能
1.2.1 阅读博客
1.2.2 读书
1.2.3 看WWDC 视频
1.2.4 看苹果的官方文档
1.2.5 看开源项目的代码
1.2.6 多写代码，多思考
1.2.7 多和同行交流
1.2.8 分享
第一部分：iOS 开发工具
第2章使用CocoaPods 做依赖管理
2.1 CocoaPods 简介
2.2 CocoaPods 的安装和使用
2.2.1 CocoaPods 的安装
2.2.2 使用CocoaPods 的镜像索引
2.2.3 使用CocoaPods
2.2.4 查找第三方库
2.3 注意事项
2.3.1 关于.gitignore
2.3.2 为自己的项目创建podspec 文件
2.3.3 使用私有的pods
2.3.4 不更新podspec
2.3.5 生成第三方库的帮助文档
2.3.6 原理
第3章网络封包分析工具Charles
3.1 Charles 简介
3.2 Charles 的安装和使用
3.2.1 安装Charles
3.2.2 安装SSL 证书
3.2.3 将Charles 设置成系统代理
3.2.4 Charles 主界面介绍
3.2.5 过滤网络请求
3.3 使用Charles 协助iOS 开发
3.3.1 截取iPhone 上的网络封包
3.3.2 模拟慢速网络
3.4 高级功能
3.4.1 截取SSL 信息
3.4.2 修改网络请求内容
3.4.3 修改服务器返回内容
3.5 Map 功能
3.6 Rewrite 功能
3.7 Breakpoints 功能
3.8 总结
3.9 参考链接
第4章界面调试工具Reveal
4.1 Reveal 简介
4.2 Reveal 的使用
4.2.1 用Reveal 连接模拟器调试
4.2.2 用Reveal 连接真机调试
4.2.3 用Reveal 调试其他应用界面
4.2.4 总结
4.2.5 参考资料
第5章移动统计工具Flurry
5.1 Flurry 简介
5.2 Flurry 的基本使用
5.2.1 注册和下载对应SDK
5.2.2 集成SDK
5.2.3 自定义统计项
5.2.4 查看统计结果
5.2.5 统计Crashlog
5.3 对比和总结
5.3.1 和其他统计分析平台的对比
5.3.2 总结
第6章崩溃日志记录工具Crashlytics
6.1 Crashlytics 简介
6.2 Crashlytics 的使用
6.3 实现原理和使用体会
第7章App Store 统计工具App Annie
7.1 App Annie 简介
7.2 App Annie 的使用
7.3 App Annie 账号的注册及配置
7.4 和其他工具的对比
7.4.1 官方的命令行工具
7.4.2 其他类似服务
7.4.3 功能对比
第8章Xcode 插件
8.1 Xcode 插件管理工具Alcatraz
8.1.1 简介
8.1.2 安装和删除
8.1.3 使用
8.1.4 插件路径
8.2 关于Xcode 的插件机制
8.3 常用Xcode 插件
8.3.1 KSImageNamed
8.3.2 XVim
8.3.3 FuzzyAutocompletePlugin
8.3.4 XToDo
8.3.5 BBUDebuggerTuckAway
8.3.6 SCXcodeSwitchExpander
8.3.7 deriveddata-exterminator
8.3.8 VVDocumenter
8.3.9 ClangFormat
8.3.10 ColorSense
8.3.11 XcodeBoost
第9章其他工具介绍
9.1 取色工具：数码测色计（DigitalColor Meter）
9.1.1 前言
9.1.2 使用介绍
9.1.3 其他类似工具：xScope
9.2 其他图形工具
9.2.1 ImageOptim
9.2.2 马克鳗
9.2.3 Dash
9.2.4 蒲公英
9.3 命令行工具
9.3.1 nomad
9.3.2 xctool
9.3.3 appledoc
第二部分：iOS 开发实践
......
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS开发进阶
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>交互设计的艺术
第1章 为iOS平台做用户体验设计
1.1 成为用户体验设计师
1.1.1 UI、ID、UE和GUI
1.1.2 了解iOS平台
1.1.3 了解成功的iOS应用设计案例
1.2 用户体验设计的基本流程
1.2.1 设计的前期工作
1.2.2 创意和原型草图
1.2.3 计算机原型的制作及可用性测试
1.2.4 高保真原型及设计的完成阶段
1.3 iOS7的全新用户体验

第2章 iOS平台的交互特点
2.1 了解iOS平台的移动设备
2.1.1 移动设备的种类
2.1.2 iOS移动设备的规格和像素尺寸
2.1.3 iOS移动设备的使用方法
2.2 移动设备的人体工程学特点
2.2.1 从拇指谈起
2.2.2 单手操作还是双手操作
2.2.3 用指尖来触摸
2.2.4 视觉的运行轨迹
2.2.5 优化视觉结构
2.2.6 图片与文字的视觉关系
2.2.7 屏幕的旋转
2.3 iOS平台的视觉体验
2.3.1 拟物化和扁平化
2.3.2.iOS7的视觉新体验

第3章 做好设计的前期工作
3.1 移动应用的市场定位：
3.1.1 是移动产品，不是计算机软件
3.1.2 外表华丽还是功能强大
3.1.3 别让它“大而全
3.1.4 它只是成千上万个应用中的一个
3.2 确定产品目标
3.2.1 做有价值的应用
3.2.2 做与众不同的应用
3.2.3 如何才能独树一帜
3.3 为用户而设计
3.3.1 了解应用的使用者
3.3.2 用户细分
3.3.3 用户研究
3.3.4 用户测试

第4章 产品创意与原型草图
4.1 得到完美的创意
4.1.1 玩玩“头脑风暴”吧
4.1.2 是娱乐不是工作
4.1.3 有明确的目标
4.1.4 有合理的分工
4.1.5 安排好议程和环境
4.1.6 畅所欲言但要遵守规则
4.1.7 挑选出最有前途的想法
4.2 原型草图
4.2.1 手绘的原型草图
4.2.2 潦草但要认真
4.2.3 原型工具和原型设计软件
4.3 检验、分享你的思考结果
4.3.1 有连贯，有情节，画出应用的故事板
4.3.2 利用原型草图进行可用性测试
4.3.3 几种其他类型的草图
……
第5章 使用Xcode工具进行原型设计
第6章 使用标准控件
第7章 应用程序导航
第8章 ios应用的个性化设计
第9章 图标设计与启动画面
第10章 iOS应用设计项目实践
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>交互设计的艺术
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>OpenGL ES应用开发实践指南
《opengl es应用开发实践指南：ios卷》
译者序
前言
第1章使用现代移动图形硬件 / 1
1.1 3d渲染 / 1
1.2为图形处理器提供数据 / 3
1.2.1缓存：提供数据的最好方式 / 4
1.2.2帧缓存 / 5
1.3 opengl es的上下文 / 6
1.4一个3d场景的几何数据 / 7
1.4.1坐标系 / 7
1.4.2矢量 / 9
1.4.3点、线、三角形 / 11
1.5小结 / 11
第2章让硬件为你工作 / 12
2.1使用opengl es绘制一个core animation层 / 12
2.2结合cocoa touch和opengl es / 14
2.2.1 cocoa touch / 14
2.2.2使用苹果开发者工具 / 15
2.2.3 cocoa touch应用架构 / 15
.2.3 opengles_ch2_1示例 / 18
2.3.1 opengles_ch2_1appdelegate类 / 18
2.3.2 storyboards / 19
2.3.3 opengles_ch2_1viewcontroller类的interface / 19
2.3.4 opengles_ch2_1viewcontroller类的实现 / 20
2.3.5支持文件 / 30
2.4深入探讨glkview是怎么工作的 / 31
2.5对于glkit的推断 / 40
2.6小结 / 46
第3章纹理 / 48
3.1 什么是纹理 / 48
3.1.1对齐纹理和几何图形 / 49
3.1.2纹理的取样模式 / 50
3.1.3 mip 贴图 / 52
3.2 opengles_ch3_1示例 / 52
3.3深入探讨glktextureloader是怎么工作的 / 56
3.4 opengles_ch3_3示例 / 62
3.5透明度、混合和多重纹理 / 63
3.5.1在opengles_ch3_4示例中混合片元颜色 / 64
3.5.2示例opengles_ch3_5中的多重纹理 / 66
3.5.3在opengles_ch3_6示例中自定义纹理 / 68
3.6纹理压缩 / 70
3.7小结 / 71
第4章散发一些光线 / 72
4.1环境光、漫反射光、镜面反射光 / 73
4.2计算有多少光线照向每个三角形 / 74
4.3使用glkit灯光 / 79
4.4 opengles_ch4_1示例 / 80
4.5把灯光烘焙进纹理中 / 86
4.6片元计算 / 87
4.7小结 / 88
第5章改变你的视点 / 89
5.1深度渲染缓存（depth render buffer） / 89
5.2例子opengles_ch5_1和例子opengles_ch5_2 / 91
5.3深入探讨不用glkit添加深度缓存 / 96
5.4变换 / 98
5.4.1基本变换 / 98
5.4.2顺序很重要 / 101
5.4.3 projectionmatrix和modelviewmatrix / 102
5.4.4 texturematrix / 105
5.5复合变换手册 / 107
5.5.1倾斜 / 107
5.5.2围着一个点旋转 / 107
5.5.3围着一个点缩放 / 107
5.6透视和平截头体 / 108
5.7小结 / 109
第6章动画 / 110
6.1场景内移动：例子opengles_ch6_1 / 111
6.1.1看向一个特定的3d位置 / 111
6.1.2使用时间 / 113
6.2动画化顶点数据 / 116
6.2.1使用索引顶点 / 118
6.2.2 opengles_ch6_2示例 / 119
6.3动画化颜色和灯光：例子opengles_ch6_3 / 122
6.4动画化纹理 / 126
6.4.1 opengles_ch6_4示例 / 126
6.4.2 opengles_ch6_5示例 / 128
6.5小结 / 130
第7章加载和使用模型 / 131
7.1建模工具和格式 / 132
7.2读取modelplist文件 / 136
7.3 opengles_ch7_1示例 / 138
7.4高级模型 / 142
7.4.1骨骼动画 / 142
7.4.2蒙皮 / 147
7.4.3 逆动力学和物理模拟 / 150
7.5小结 / 150
第8章特效 / 151
8.1天空盒 / 151
8.2深入探讨glkskyboxeffect是怎么工作的 / 154
8.3 粒子 / 164
8.4公告牌 / 170
8.5小结 / 177
第9章优化 / 178
9.1尽可能减少渲染 / 178
9.1.1基于视平截体的剔除 / 179
9.1.2简化 / 189
9.2不要猜：解析（profile） / 189
9.2.1工具opengl es performance detective / 190
9.2.2工具instruments / 191
9.3尽量减少缓存复制 / 192
9.4尽量减少状态变化 / 192
9.5小结 / 193
第10章地形和拾取 / 195
10.1地形的实现 / 195
10.1.1高度图 / 196
10.1.2地形瓦片 / 197
10.1.3地形效果 / 200
10.2添加模型 / 205
10.2.1模型放置 / 206
10.2.2模型效果 / 206
10.3 opengl es摄像机 / 208
10.4拾取 / 213
10.5优化 / 221
10.6小结 / 228
第11章数学速查 / 229
11.1概述 / 229
11.2解码矩阵 / 230
11.2.1从平截体获取矩阵 / 233
11.2.2透视 / 236
11.2.3矢量的坐标轴分量 / 237
11.2.4点变换 / 238
11.2.5 转置矩阵和逆矩阵 / 240
11.3四元法 / 241
11.4常用的图形数学 / 242
11.4.1简单矢量运算 / 242
11.4.2矢量标量积 / 243
11.4.3矢量的矢量积 / 243
11.4.4 model-view矩阵 / 244
11.4.5投影矩阵 / 245
11.5小结 / 245
第12章理清整体思路 / 246
12.1概述 / 246
12.2一切如故 / 248
12.2.1控制器子系统 / 249
12.2.2模型子系统 / 250
12.2.3 视图子系统 / 255
12.3设备动作 / 263
12.4小结 / 265
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>OpenGL ES应用开发实践指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>OpenGL ES 2.0游戏与图形编程——适用于iOS 和 Android
目    录
第1章  入门	1
1.1  软件需求	1
1.1.1  针对iOS开发人员	1
1.1.2  针对Android开发人员	2
1.2  下载本书的SDK	3
1.3  导入项目	4
1.3.1  针对iOS开发人员	5
1.3.2  针对Android开发人员	5
1.4  模板	6
1.5  小结	7
第2章  设置图形投影	9
2.1  三种基本的投影类型	9
2.2  正射2D投影	11
2.2.1  程序和项目初始化	12
2.2.2  顶点和片段着色器	14
2.2.3  链接着色器程序	16
2.2.4  绘图代码	18
2.3  正交投影	23
2.4  透视投影	26
2.5  小结	27
第3章  处理复杂几何图形	29
3.1  Wavefront文件格式	29
3.1.1  cube.obj	30
3.1.2  cube.mtl	31
3.2  准备OBJ浏览器代码	31
3.3  加载OBJ	32
3.4  构建着色器	35
3.4.1  顶点着色器	35
3.4.2  片段着色器	36
3.4.3  顶点缓冲区对象	36
3.4.4  存储顶点数据	36
3.4.5  构建顶点数据数组(VBO)	38
3.4.6  构建元素数组VBO	39
3.5  构建VAO	40
3.6  渲染Momo	42
3.7  处理Touche事件	44
3.8  逐顶点光照	45
3.8.1  顶点着色器的光照计算	46
3.8.2  修改片段着色器	47
3.8.3  更多uniform变量	48
3.9  对Momo进行美化	49
3.9.1  加载纹理	49
3.9.2  调整顶点数据	50
3.9.3  向顶点着色器添加UV
支持	52
3.9.4  向片段着色器添加纹理支持	52
3.9.5  绑定纹理	53
3.10  小结	54
第4章  构建场景	55
4.1  处理多个对象	55
4.2  代码结构	56
4.3  加载和绘制场景	57
4.4  着色器代码	61
4.5  不同的对象类型	62
4.6  绘制顺序	62
4.7  修复场景	63
4.7.1  Uber Shader	63
4.7.2  使用Uber Shader	64
4.7.3  渲染循环对象分类	67
4.7.4  双面	69
4.8  逐像素光照	71
4.8.1  使顶点着色器更加丰富	71
4.8.2  获取使用了更多Uber的片段着色器	72
4.8.3  封装实现代码	74
4.9  小结	77
第5章  优化	79
5.1  基本应用程序	79
5.2  从三角形到三角形带	80
5.3  构建三角形带	81
5.4  纹理优化	82
5.5  添加16位纹理转换	83
5.6  PVR纹理压缩	84
5.7  仿造细节	85
5.7.1  凸凹贴图的实现	85
5.7.2  精度限定符优化	86
5.7.3  法线贴图光照计算	88
5.7.4  添加反射	90
5.8  几何图形和着色器LOD	91
5.9  纹理地图集	91
5.10  在软件中管理状态	92
5.11  自动着色器优化	93
5.12  小结	94
第6章  实时物理	95
6.1  物理对象类型	95
6.2  物理形状	96
6.3  使用Bullet	97
6.4  Hello Physics	97
6.5  碰撞回调、触发器和接触点	102
6.5.1  Contact-Added回调	103
6.5.2  Near回调	105
6.5.3  接触点	106
6.6  2D物理	107
6.6.1  更多形状！	108
6.6.2  构建物理对象	111
6.6.3  摄像头跟踪	112
6.6.4  用户交互	114
6.6.5  游戏逻辑	114
6.7  3D物理	118
6.7.1  Bullet文件格式	118
6.7.2  3D弹珠游戏	119
6.8  小结	125
第7章  摄像头	127
7.1  一触即发	128
7.2  摄像头视锥	130
7.2.1  视锥构建方式	131
7.2.2  视锥剪切的实现	132
7.2.3  更多剪切函数	133
7.3  摄像头飞行模式	134
7.4  带有碰撞检测的第一人称
摄像头	139
7.5  3D摄像头跟踪	141
7.6  带有碰撞的第三人称摄像头	143
7.7  小结	148
第8章  路径发现	149
8.1  Recast和Detour	149
8.2  导航	150
8.3  创建导航网格	151
8.4  3D物理拾取	153
8.5  玩家的自动驱动	157
8.6  使路径点可见	159
8.7  游戏“如果能就抓住我！”	161
8.8  了解你的敌人	164
8.9  游戏状态逻辑	165
8.10  小结	168
第9章  音频及其他极佳的游戏编程资料	171
9.1  OpenAL	172
9.2  OGG Vorbis	173
9.3  Hello World OpenAL样式	173
9.4  初始化OpenAL	174
9.5  播放静态内存声音	174
9.6  定位声源	176
9.7  钢琴游戏	177
9.7.1  加载静态的流式声音	178
9.7.2  颜色提取	182
9.7.3  钢琴游戏逻辑	185
9.7.4  最后的调整	188
9.8  滚球游戏	190
9.8.1  GFX着色器	191
9.8.2  链接定位声源	192
9.8.3  加速计驱动摄像头	196
9.8.4  廉价的FX	199
9.8.5  游戏逻辑和调整	200
9.9  小结	206
第10章  高级光照	207
10.1  灯的类型	207
10.2  使用光源	208
10.2.1  定向灯着色器	211
10.2.2  使用Struct作为Uniform	214
10.3  点灯	217
10.3.1  点光源着色器代码	218
10.3.2  光的衰减	221
10.3.3  带有衰减代码的点光源	222
10.3.4  衰减Uniform变量	223
10.3.5  球体点光源	224
10.3.6  调整点光源代码	225
10.3.7  聚光灯	227
10.3.8  聚光灯着色器代码	229
10.4  多个光源	231
10.5  使着色器程序动态化	234
10.6  小结	235
第11章  高级FX	237
11.1  渲染到纹理	238
11.2  后处理效果	238
11.2.1  第一渲染通道	241
11.2.2  第二渲染通道	242
11.2.3  全屏通道和模糊着色器	243
11.3  投影纹理	246
11.4  投影着色器	249
11.5  投影实时阴影	250
11.6  使用深度纹理投射阴影	254
11.7  关于帧缓冲对象的其他内容	255
11.8  粒子	255
11.9  小结	257
第12章  骨骼动画	259
12.1  传统的动画系统与最新的动画系统	259
12.2  MD5文件格式	261
12.3  加载MD5网格	261
12.4  对网格进行动画处理	264
12.4.1  LERP	266
12.4.2  SLERP	266
12.5  混合动画	267
12.6  相加混合	269
12.7  小结	271
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>OpenGL ES 2.0游戏与图形编程——适用于iOS 和 Android
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS应用逆向工程
《ios应用逆向工程：分析与实战》
推荐序一
推荐序二
自序
前言
第一部分　概念篇
第1 章　 ios 逆向工程简介 2
1.1　 ios 软件逆向工程的要求 2
1.2　 ios 软件逆向工程的作用 2
1.2.1　 与安全相关的ios 逆向工程 4
1.2.2　 与开发相关的ios 逆向工程 5
1.3　 ios 软件逆向工程的一般过程 6
1.3.1　 系统分析 7
1.3.2　 代码分析 7
1.4　 ios 软件逆向工程用到的工具 8
1.4.1　 监测工具 8
1.4.2　 开发工具 9
1.4.3　 反编译器 9
1.4.4　 调试器 10
1.5　 小结 11
.第2 章　越狱ios 平台简介 12
2.1　 ios 系统架构 12
2.1.1　 ios 目录结构 13
2.1.2　 ios 文件权限 15
2.2　 ios 程序类型 16
2.2.1　 application 16
2.2.2　 dynamic library 19
2.2.3　 daemon 19
2.3　 小结 20
第二部分　工具篇
第3 章　mac 工具集 22
3.1　 class-dump 22
3.1.1　 class-dump 介绍及下载 22
3.1.2　 class-dump 使用演示 23
3.1.3　 关于class-dump 的补充说明 25
3.2　 theos 25
3.2.1　 theos 简介 25
3.2.2　 theos 安装及编译 26
3.2.3　 theos 用法简介 28
3.2.4　 theos 开发tweak 示例 47
3.3　 reveal 49
3.3.1　 reveal 简介 49
3.3.2　 reveal 安装及功能扩展 50
3.4　 ida 55
3.4.1　 ida 简介 55
3.4.2　 ida 使用说明 56
3.4.3　 ida 分析示例 65
3.5　 其他工具 68
3.5.1　 itools 68
3.5.2　 dyld_decache 69
3.5.3　 mesasqlite 69
3.6　 小结 70
第4 章　ios 工具集 71
4.1　 sbsettings 71
4.2　 mobilesubstrate 72
4.3　 openssh 73
4.4　 gdb 74
4.4.1　 gdb 简介 74
4.4.2　 gdb 的使用说明 74
4.5　 cycript 85
4.6　 其他常用工具 88
4.6.1　 bigboss recommendedtools 88
4.6.2　 appcrackr 88
4.6.3　 ifile 89
4.6.4　 mobileterminal 89
4.6.5　 vi improved 90
4.6.6　 sqlite 90
4.6.7　 top 91
4.6.8　 syslogd 92
4.7　 小结 92
第三部分　理论篇
第5 章　 objective-c 相关的ios逆向理论基础 94
5.1　 tweak 的作用原理 94
5.1.1　 objective-c 语言的特性 94
5.1.2　 mobilesubstrate 96
5.2　 tweak 的编写套路 97
5.2.1　 灵感的来源 98
5.2.2　 分析文件，寻找切入点 99
5.2.3　 定位目标函数 102
5.2.4　 测试函数功能 104
5.2.5　 解析函数参数 105
5.2.6　 class-dump 的局限性 108
5.3　 实例演示 108
5.3.1　 得到灵感 108
5.3.2　 分析文件 109
5.3.3　 定位函数 115
5.3.4　 测试函数 117
5.3.5　 编写实例代码 117
5.4　 小结 119
第6 章　 arm 汇编相关的ios逆向理论基础 120
6.1　 arm 汇编基础 120
6.1.1　 基本概念 121
6.1.2　 arm/thumb 指令解读 123
6.1.3　 arm 调用规则 129
6.2　 在ida 中分析目标文件 131
6.2.1　 分析函数实现细节 132
6.2.2　 验证分析结果 139
6.3　 在gdb 中分析目标文件 142
6.3.1　 跟踪代码执行流程 142
6.3.2　 动态更改代码 147
6.4　 小结 157
第四部分　实战篇
第7 章　 实战1：去除oplayerlite 的广告 160
7.1　 oplayer lite 简介 160
7.2　 分析源代码结构，并定位广告横幅的代码 161
7.2.1　 class-dump 获取.h 文件 161
7.2.2　 猜测广告横幅的出现位置 161
7.2.3　 分析playviewcontroller.h 162
7.3　 去除广告横幅，节省流量 167
7.3.1　 找到“准备”广告的位置 167
7.3.2　 追溯到网络连接的起点 173
7.4　 编写调试代码 175
7.4.1　 编写tweak_oplayerlite.xm 175
7.4.2　 编辑control 176
7.4.3　 编辑removeoplayerads.plist 176
7.4.4　 编辑makefile 177
7.4.5　 编译+ 打包 177
7.4.6　 安装 177
7.5　 调试去广告插件 177
7.6　 代码结果整理 178
7.7　 小结 179
第8 章　 实战2：whatsapp消息拦截 180
8.1　 whatsapp 简介 180
8.2　 分析源代码结构，并定位监听点 180
8.2.1　 class-dump 获取.h 文件 180
8.2.2　 导入xcode 182
8.2.3　 找到whatsappappdelegate 182
8.2.4　 找到chatmanager 183
8.3　 编写调试代码 184
8.3.1　 分析函数列表 184
8.3.2　 编写tweak_whatsapp.xm 185
8.3.3　 编辑control 186
8.3.4　 编辑monitor.plist 186
8.3.5　 编辑makefile 186
8.3.6　 编译+打包 187
8.3.7　 安装 187
8.4　 调试运行监听插件 187
8.4.1　 运行whatsapp，ssh 连接 187
8.4.2　 发送/ 接收消息，监控日志 188
8.4.3　 保存数据 189
8.5　 代码结果整理 194
8.6　 小结 195
第9 章　 实战3：instagram 图片保存 196
9.1　 instagram 简介 196
9.2　 分析源代码结构，并定位图片展示点 196
9.2.1　 用class-dump获取.h 文件 196
9.2.2　 导入xcode 198
9.2.3　 找到appdelegate 198
9.2.4　 注入reveal 199
9.2.5　 寻找图片页相关class 200
9.3　 保存图片 205
9.3.1　 尝试保存图片 205
9.3.2　 对.h 文件进行瘦身 206
9.3.3　 编译测试 208
9.4　 弹出提示菜单 208
9.4.1　 弹出菜单代码 208
9.4.2　 使用theos 新增函数 210
9.4.3　 使用runtime 新增函数 211
9.5　 代码结果整理 214
9.6　 小结 215
第10 章　实战4：ios 电话操作 216
10.1　 常用电话操作 216
10.2　 分析源代码结构，并定位电话操作的代码 216
10.2.1　 class-dump 获取.h 文件 216
10.2.2　 寻找拨打电话的函数 217
10.2.3　 寻找接听电话的函数 229
10.2.4　 寻找挂断电话的函数 234
10.2.5　 寻找删除通话记录的函数 236
10.2.6　 寻找拦截电话的方法 238
10.3　 编写调试代码 250
10.3.1　 编写tweak_phoneoperation.xm 250
10.3.2　 编辑control 254
10.3.3　 编辑phoneoperation.plist 255
10.3.4　 编辑makefile 255
10.3.5　 编译+ 打包+ 安装 255
10.4　 调试电话操作插件 255
10.5　 代码结果整理 257
10.6　 小结 257
越狱开发一览 258
沙箱逃脱 263
编写tweak——新时代的hacking 265
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS应用逆向工程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iPhone 4与iPad开发基础教程
第1 章  欢迎来到iPhone 世界　　 1
1.1  关于本书　　1
1.2  必要条件　　 1
1.2.1  开发者的选择　　3
1.2.2  必备知识　　4
1.3  编写iOS 应用程序有何不同　　 4
1.3.1  只有一个应用程序正在运行　　 5
1.3.2  只有一个窗口　　5
1.3.3  受限访问　　5
1.3.4  有限的响应时间　　5
1.3.5  有限的屏幕大小　　5
1.3.6  有限的系统资源　　　6
1.3.7  不支持垃圾收集　　　6
1.3.8  新功能　　 6
1.3.9  与众不同的方法　　7
1.4  本书内容　　7
1.5  本次更新的内容　　8
1.6  准备开始吧　　8
第2 章  创建基本项目　　9
2.1  在Xcode 中设置项目　　 9
2.2  Interface Builder 简介　　14
2.2.1  nib 文件的构成　　15
2.2.2  在视图中添加标签　　16
2.2.3  改变属性　　18
2.3  美化iPhone 应用程序　　19
2.4  小结　　　22
第3 章  处理基本交互　　23
3.1  MVC 范型　　 23
3.2  创建项目　　24
3.3  创建视图控制器　　24
3.3.1  输出口　　25
3.3.2  操作　　26
3.3.3  将操作和输出口添加到视图控制器　　27
3.3.4  将操作和输出口添加到实现文件　　30
3.4  使用应用程序委托　　34
3.5  编辑MainWindow.xib 　　36
3.6  编辑Button_FunViewController.xib　　 37
3.6.1  在Interface Builder 中创建视图　　37
3.6.2  连接所有元素　　　40
3.6.3  测试　　 43
3.7  小结　　43
第4 章  更丰富的用户界面　　44
4.1  满是控件的屏幕　　　 44
4.2  活动和被动控件　　　46
4.3  创建应用程序　　46
4.4  实现图像视图和文本字段　　47
4.4.1  确定输出口　　47
4.4.2  确定操作　　 48
4.4.3  添加图像视图　　49
4.4.4  添加文本字段　　52
4.4.5  设置第二个文本字段的属性　　55
4.4.6  连接输出口　　 55
4.5  关闭键盘　　 55
4.5.1  完成输入后关闭键盘　　56
4.5.2  通过触摸背景关闭键盘　　57
4.6  实现滑块和标签　　59
4.6.1  确定输出口和操作　　 59
4.6.2  添加输出口和操作　　 60
4.6.3  添加滑块和标签　　61
4.6.4  连接操作和输出口　　 62
4.7  实现开关、按钮和分段控件　　 62
4.7.1  添加输出口和操作　　 62
4.7.2  添加开关、按钮和分段控件　　65
4.7.3  连接开关输出口和操作　　66
4.7.4  添加按钮　　 66
4.8  实现操作表和警报　　67
4.8.1  遵从操作表委托方法　　 67
4.8.2  显示操作表　　68
4.8.3  使用操作表委托　　70
4.9  美化按钮　　 71
4.9.1  viewDidLoad 方法　　 71
4.9.2  控件状态　　72
4.9.3  可拉伸图像　　 72
4.10  成为出色的内存使用者　　73
4.11  小结　　 74
第5 章  自动旋转和自动调整大小　　 75
5.1  自动旋转机制　　75
5.2  使用自动调整属性处理旋转　　77
5.2.1  指定旋转支持　　 77
5.2.2  使用自动调整属性设计界面　　 79
5.2.3  大小检查器的自动调整属性　　 80
5.2.4  设置按钮的自动调整属性　　81
5.3  在旋转时重构视图　　 82
5.3.1  声明和连接输出口　　 83
5.3.2  在旋转时移动按钮　　 84
5.4  切换视图　　85
5.4.1  确定输出口和操作　　 86
5.4.2  声明操作和输出口　　 87
5.4.3  设计两个视图　　88
5.4.4  实现交换和操作　　 88
5.5  小结　　91
第6 章  多视图应用程序　　 92
6.1  多视图应用程序的常见类型　　92
6.2  多视图应用程序的体系结构　　94
6.2.1  根控制器　　95
6.2.2  内容视图剖析　　96
6.3  构建View Switcher　　96
6.3.1  创建视图控制器和nib 文件　　 97
6.3.2  修改应用程序委托　　 99
6.3.3  SwitchViewController.h 　　101
6.3.4  添加视图控制器　　101
6.3.5  构建包含工具栏的视图　　103
6.3.6  编写根视图控制器　　104
6.3.7  实现内容视图　　108
6.3.8  制作转换动画　　110
6.4  小结　　113
第7 章  标签栏与选取器　　114
7.1  Pickers 应用程序　　114
7.2  委托和数据源　　117
7.3  建立工具栏框架　　117
7.3.1  创建文件　　117
7.3.2  添加根视图控制器　　118
7.3.3  编辑MainWindow.xib 　　120
7.3.4  连接输出口，然后运行　　123
7.4  实现日期选取器　　124
7.5  实现单个组件选取器　　126
7.5.1  声明输出口和操作　　126
7.5.2  构建视图　　127
7.5.3  将控制器实现为数据源和委托　　127
7.6  实现多组件选取器　　131
7.6.1  声明输出口和操作　　131
7.6.2  构建视图　　132
7.6.3  实现控制器　　132
7.7  实现独立组件　　135
7.8  使用自定义选取器创建简单游戏　　 141
7.8.1  编写控制器头文件　　141
7.8.2  构建视图　　142
7.8.3  添加图像资源　　 143
7.8.4  实现控制器　　143
7.8.5  最后的细节　　149
7.8.6  链接Audio Toolbox 框架　　153
7.9  小结　　　154
第8 章  表视图简介　　155
8.1  表视图基础　　156
8.1.1  表视图和表视图单元　　 156
8.1.2  分组表和无格式表　　157
8.2  实现一个简单的表　　　　 158
8.2.1  设计视图　　158
8.2.2  编写控制器　　158
8.2.3  添加一个图像　　161
8.2.4  表视图单元样式　　 163
8.2.5  设置缩进级别　　165
8.2.6  处理行的选择　　165
8.2.7  更改字体大小和行高　　 167
8.3  定制表视图单元　　 168
8.3.1  单元应用程序　      168
8.3.2  使用UITableViewCell 的自定义子类　　 172
8.4  分组分区和索引分区　　 176
8.4.1  构建视图　　176
8.4.2  导入数据　　177
8.4.3  实现控制器　　177
8.4.4  添加索引　　181
8.5  实现搜索栏　　181
8.5.1  重新考虑设计　　181
8.5.2  深层可变副本　　182
8.5.3  更新控制器头文件　　184
8.5.4  修改视图　　185
8.5.5  修改控制器实现　　186
8.6  小结　　197
第9 章  导航控制器和表视图　　198
9.1  导航控制器　　198
9.1.1  栈的性质　　198
9.1.2  控制器栈　　 199
9.2  由6 个部分组成的分层应用程序：Nav 　　200
9.2.1  子控制器　　200
9.2.2  Nav 应用程序的骨架　　203
9.2.3  第一个子控制器：展示按钮视图　　209
9.2.4  第二个子控制器：校验表　　 217
9.2.5  第三个子控制器：表行上的控件　　221
9.2.6  第四个子控制器：可移动的行　　227
9.2.7  第五个子控制器：可删除的行　　233
9.2.8  第六个子控制器：可编辑的详细窗格　　239
9.2.9  其他内容　　257
9.3  小结　　260
第10 章  iPad 开发注意事项　　 261
10.1  分割视图和浮动窗口　　261
10.2  创建SplitView 项目　　263
10.3  xib 定义结构　　 264
10.4  代码定义功能　　265
10.5  显示总统信息　　 272
10.6  创建浮动窗口　　276
10.7  小结　　 282
第11 章  应用程序设置和用户默认设置　　283
11.1  设置束　　283
11.2  AppSettings 应用程序　　 284
11.2.1  创建项目　　 286
11.2.2  使用设置束　　286
11.2.3  读取应用程序中的设置　　 297
11.2.4  更改应用程序中的默认设置　　302
11.2.5  实现逼真效果　　 305
11.3  小结　　307
第12 章  保存数据　　308
12.1  应用程序的沙盒　　308
12.1.1  获取Documents 目录　　309
12.1.2  获取tmp 目录　　310
12.2  文件保存策略　　310
12.2.1  单个文件持久性　　310
12.2.2  多个文件持久性　　311
12.3  属性列表　　311
12.3.1  属性列表序列化　　311
12.3.2  持久性应用程序的第一个版本　　312
12.4  对模型对象进行归档　　317
12.4.1  符合NSCoding　　318
12.4.2  实现NSCopying　　 319
12.4.3  对数据对象进行归档和取消归档　　319
12.4.4  归档应用程序　　 320
12.5  使用iPhone 的嵌入式SQLite3　　 324
12.5.1  创建或打开数据库　　 325
12.5.2  绑定变量　　327
12.5.3  SQLite3 应用程序　　 327
12.6  使用Core Data　　334
12.6.1  实体和托管对象　　 335
12.6.2  Core Data 应用程序　　 339
12.7  小结　　　 348
第13 章  Grand Central Dispatch、后台处理及其应用　　 349
13.1  Grand Central Dispatch 　　349
13.2  SlowWorker 简介　　350
13.3  线程基础知识　　　352
13.4  工作单元　　 353
13.5  GCD：低级队列　　354
13.5.1  傻瓜式操作　　354
13.5.2  改进SlowWorker　　 355
13.6  后台处理　　　360
13.6.1  应用程序生命周期　　361
13.6.2  状态更改通知　　361
13.6.3  创建State Lab　　363
13.6.4  执行状态　　364
13.6.5  利用执行状态更改　　365
13.6.6  处理不活动状态　　366
13.6.7  处理后台状态　　370
13.7  小结　　378
第14 章  使用Quartz 和OpenGL 绘图　　379
14.1  图形世界的两个视图　　 379
14.2  Quart 绘图方法　　380
14.2.1  Quartz 2D 的图形上下文　　 380
14.2.2  坐标系　　 381
14.2.3  指定颜色　　　382
14.2.4  在上下文中绘制图像　　383
14.2.5  绘制形状：多边形、直线和曲线　　383
14.2.6  Quartz 2D 工具示例：模式、梯度、虚线模式　　384
14.3  QuartzFun 应用程序　　 384
14.3.1  构建QuartzFun 应用程序　　 384
14.3.2  添加Quartz Drawing 代码　　394
14.3.3  优化QuartzFun 应用程序　　 398
14.4  GLFun 应用程序　　401
14.4.1  构建GLFun 应用程序　　402
14.4.2  使用OpenGL 绘图　　404
14.4.3  完成GLFun 　　411
14.5  小结　　411
第15 章  轻击、触摸和手势　　 412
15.1  多触摸术语　　 412
15.2  响应者链　　413
15.2.1  响应者链中的对象　　 413
15.2.2  转发事件：保持响应者链的活动状态　　 414
15.3  多触摸体系结构　　　 415
15.3.1  将触摸相关代码放在何处　　415
15.3.2  4 个手势通知方法　　415
15.4  检测触摸　　416
15.4.1  构建一个Touch Explorer 应用程序　　417
15.4.2  运行Touch Explorer 　　 419
15.5  检测轻扫　　　 419
15.5.1  构建Swipes 应用程序　　 420
15.5.2  使用自动手势识别　　423
15.5.3  实现多个轻扫动作　　424
15.6  检测多次轻击　　425
15.7  检测捏合操作　　430
15.8  创建和使用自定义手势　　 433
15.8.1  定义选中标记手势　　 433
15.8.2  将勾选标记手势附加到视图　　435
15.9  小结　　437
第16 章  Core Location 定位功能　　438
16.1  位置管理器　　438
16.1.1  设置所需的精度　　439
16.1.2  设置距离筛选器　　439
16.1.3  启动位置管理器　　439
16.1.4  更明智地使用位置管理器　　 440
16.2  位置管理器委托　　440
16.2.1  获取位置更新　　440
16.2.2  使用CLLocation 获取纬度和经度　　 440
16.2.3  错误通知　　　442
16.3  尝试使用Core Location 　　442
16.3.1  更新位置管理器　　446
16.3.2  确定移动距离　　447
16.4  小结　　447
第17 章  加速计　　448
17.1  加速计物理学　　　448
17.2  不要忘记旋转　　　449
17.3  Core Motion 和动作管理器　　 449
17.3.1  基于事件的动作　　450
17.3.2  主动动作访问　　455
17.3.3  加速计结果　　457
17.4  检测摇动　　 458
17.4.1  Baked-In 摇动　　459
17.4.2  摇动与击碎　　459
17.5  将加速计用作方向控制器　　464
17.5.1  滚弹珠程序　　464
17.5.2  编写Ball View　　466
17.5.3  计算小球运动　　469
17.6  小结　　472
第18 章  iPhone 照相机和照片库　　473
18.1  使用图像选取器和UIImagePicker-Controller 　　474
18.2  实现图像选取器控制器委托　　 475
18.3  实际测试照相机和库　　476
18.3.1  设计界面　　 477
18.3.2  实现照相机视图控制器　　 477
18.4  小结　　481
第19 章  应用程序本地化　　482
19.1  本地化体系结构　　482
19.2  字符串文件　　483
19.2.1  字符串文件里面是什么　　 484
19.2.2  本地化的字符串宏　　 484
19.3  现实中的iPhone：本地化应用程序　　485
19.3.1  创建LocalizeMe 　　485
19.3.2  测试LocalizeMe 　　489
19.3.3  本地化nib 文件　　489
19.3.4  本地化图像　　492
19.3.5  生成和本地化字符串文件　　493
19.3.6  本地化应用程序显示名称　　495
19.4  小结　　496
第20 章 未来之路　　497
20.1  别陷进单一的思路里　　497
20.1.1  苹果公司的文档　　 497
20.1.2  邮件列表　　498
20.1.3  论坛　　498
20.1.4  网站　　499
20.1.5  博客　　499
20.2  参考资料　　 500
20.3  作者　　501
20.4  再会　　501
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iPhone 4与iPad开发基础教程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS开发指南
目　录

第一部分　基础篇
第1章　开篇综述　　2
1.1 　iOS概述　　2
1.1.1 　iOS介绍　　2
1.1.2 　iOS 6新特性　　2
1.2 　开发环境及开发工具　　3
1.3 　本书中的约定　　4
1.3.1 　案例代码约定　　4
1.3.2 　图示的约定　　5
第2章　第一个iOS应用程序　　7
2.1 　创建基于nib的HelloWorld工程　　7
2.1.1 　创建工程　　7
2.1.2 　Xcode中的iOS工程模板　　10
2.1.3 　应用剖析　　11
2.2 　基于故事板的HelloWorld工程　　13
2.2.1 　使用故事板重构HelloWorld　　14
2.2.2 　nib、xib与故事板　　15
2.2.3 　故事板中的Scene和Segue　　16
2.3 　应用生命周期　　17
2.3.1 　非运行状态——应用启动场景　　18
2.3.2 　点击Home键——应用退出场景　　19
2.3.3 　挂起重新运行场景　　20
2.3.4 　内存清除——应用终止场景　　21
2.4 　视图生命周期　　21
2.4.1 　视图生命周期与视图控制器关系　　22
2.4.2 　iOS 6 UI状态保持和恢复　　23
2.5 　设置产品属性　　25
2.5.1 　Xcode中的Project和Target　　25
2.5.2 　设置常用的产品属性　　27
2.6 　iOS API简介　　29
2.6.1 　API概述　　29
2.6.2 　如何使用API帮助　　31
2.7 　小结　　33
第3章　iOS常用设计模式　　34
3.1 　单例模式　　34
3.1.1 　问题提出　　34
3.1.2 　实现原理　　34
3.1.3 　应用案例　　35
3.2 　委托模式　　37
3.2.1 　问题提出　　37
3.2.2 　实现原理　　39
3.2.3 　应用案例　　41
3.3 　观察者模式　　44
3.3.1 　问题提出　　44
3.3.2 　实现原理　　45
3.3.3 　通知机制和KVO机制　　47
3.4 　MVC模式　　53
3.4.1 　MVC模式概述　　53
3.4.2 　Cocoa Touch中的MVC模式　　54
3.5 　小结　　56
第4章　UIView与控件　　57
4.1 　视图“始祖”——UIView　　57
4.1.1 　UIView“家族”　　57
4.1.2 　应用界面的构建层次　　59
4.1.3 　视图分类　　60
4.2 　标签控件和按钮控件　　60
4.2.1 　标签控件　　61
4.2.2 　按钮控件　　61
4.2.3 　动作和输出口　　63
4.3 　TextField控件和TextView控件　　66
4.3.1 　TextField控件　　66
4.3.2 　TextView控件　　67
4.3.3 　键盘的打开和关闭　　67
4.3.4 　关闭和打开键盘的通知　　68
4.3.5 　键盘的种类　　69
4.4 　开关控件、滑块控件和分段控件　　70
4.4.1 　开关控件　　71
4.4.2 　滑块控件　　71
4.4.3 　分段控件　　71
4.5 　网页控件WebView　　72
4.5.1 　WebView介绍　　72
4.5.2 　使用WebView构建Hybrid应用　　75
4.6 　屏幕滚动控件ScrollView　　80
4.6.1 　ScrollView属性的设置　　80
4.6.2 　键盘与其他控件的协同　　84
4.7 　等待相关的控件与进度条　　86
4.7.1 　活动指示器ActivityIndicatorView　　87
4.7.2 　进度条ProgressView　　88
4.8 　警告框和操作表　　88
4.8.1 　警告框AlertView　　89
4.8.2 　操作表ActionSheet　　90
4.9 　工具栏和导航栏　　92
4.9.1 　工具栏　　92
4.9.2 　导航栏　　94
4.10 　屏幕布局　　98
4.10.1 　iPad与iPhone屏幕布局　　98
4.10.2 　绝对布局和相对布局　　99
4.10.3 　使用AutoLayout布局　　102
4.10.4 　旋转你的屏幕　　103
4.11 　选择器　　108
4.11.1 　日期选择器　　108
4.11.2 　普通选择器　　110
4.11.3 　数据源协议与委托协议　　112
4.12 　iOS 6中的集合视图　　113
4.12.1 　集合视图介绍　　114
4.12.2 　集合视图单元格　　116
4.12.3 　数据源协议与委托协议　　118
4.13 　小结　　119
第5章　表视图　　120
5.1 　概述　　120
5.1.1 　表视图的组成　　120
5.1.2 　表视图的相关类　　121
5.1.3 　表视图分类　　122
5.1.4 　单元格的组成和样式　　123
5.1.5 　数据源协议与委托协议　　124
5.2 　简单表视图　　125
5.2.1 　创建简单表视图　　125
5.2.2 　自定义单元格　　129
5.2.3 　添加搜索栏　　133
5.3 　分节表视图　　138
5.3.1 　添加索引　　138
5.3.2 　分组与静态表　　141
5.4 　修改单元格　　144
5.4.1 　删除和插入单元格　　144
5.4.2 　移动单元格　　150
5.5 　表视图UI设计模式　　152
5.5.1 　分页模式　　152
5.5.2 　下拉刷新模式　　152
5.5.3 　iOS 6下拉刷新控件　　153
5.6 　小结　　155
第6章　视图控制器与导航模式　　156
6.1 　概述　　156
6.1.1 　视图控制器的种类　　156
6.1.2 　导航模式　　156
6.1.3 　模态视图　　157
6.2 　平铺导航　　163
6.2.1 　应用场景　　163
6.2.2 　基于分屏导航的实现　　165
6.2.3 　基于分页导航的实现　　168
6.3 　标签导航　　173
6.3.1 　应用场景　　174
6.3.2 　nib实现　　174
6.3.3 　故事板实现　　179
6.4 　树形结构导航　　182
6.4.1 　应用场景　　182
6.4.2 　nib实现　　183
6.4.3 　故事板实现　　189
6.5 　组合使用导航模式　　193
6.5.1 　应用场景　　193
6.5.2 　故事板实现　　194
6.6 　小结　　200
第7章　iPhone与iPad应用开发的差异　　201
7.1 　概述　　201
7.1.1 　应用场景差异　　201
7.1.2 　设计和开发需注意的问题　　201
7.1.3 　构建自适应的iPhone和iPad工程　　204
7.2 　iPad专用API　　206
7.2.1 　UIPopoverController控制器　　206
7.2.2 　UISplitViewController控制器　　209
7.2.3 　模态视图专用属性　　215
7.3 　Master-Detail应用程序模板　　219
7.3.1 　nib实现　　220
7.3.2 　故事板实现　　225
7.4 　Utility应用程序模板　　228
7.4.1 　nib实现　　229
7.4.2 　故事板实现　　232
7.5 　移动平台的分层架构设计　　234
7.5.1 　低耦合企业级系统架构设计　　234
7.5.2 　移动平台的分层架构设计　　235
7.5.3 　基于同一工程的分层　　235
7.5.4 　基于一个工作空间不同工程的分层　　241
7.6 　小结　　244
第8章　应用程序设置　　245
8.1 　概述　　245
8.1.1 　设置　　245
8.1.2 　配置　　246
8.2 　应用程序设置包　　247
8.3 　设置项目种类　　248
8.3.1 　文本字段　　251
8.3.2 　开关　　253
8.3.3 　滑块　　254
8.3.4 　值列表　　256
8.3.5 　子界面　　257
8.4 　读取设置　　259
8.5 　小结　　260
第9章　应用程序本地化　　261
9.1 　概述　　261
9.1.1 　本地化内容　　261
9.1.2 　本地化目录结构　　263
9.2 　文本信息本地化　　263
9.2.1 　系统按钮和信息本地化　　263
9.2.2 　应用名称本地化　　265
9.2.3 　程序代码输出的静态文本本地化　　266
9.2.4 　使用genstring工具　　268
9.3 　nib和故事板文件本地化　　268
9.3.1 　添加本地化　　269
9.3.2 　开关使用ibtool工具　　270
9.4 　资源文件本地化　　271
9.5 　小结　　273
第10章　数据持久化　　274
10.1 　概述　　274
10.1.1 　沙箱目录　　274
10.1.2 　持久化方式　　275
10.2 　属性列表　　275
10.3 　对象归档　　280
10.4 　使用SQLite数据库　　285
10.4.1 　SQLite数据类型　　285
10.4.2 　创建数据库　　285
10.4.3 　查询数据　　287
10.4.4 　修改数据　　290
10.5 　Core Data　　292
10.5.1 　ORM　　292
10.5.2 　Core Data堆栈　　293
10.5.3 　建模和生成实体　　296
10.5.4 　采用Core Data分层架构设计　　299
10.5.5 　查询数据　　301
10.5.6 　修改数据　　302
10.6 　小结　　304
第11章　访问通讯录　　305
11.1 　概述　　305
11.2 　读取联系人信息　　306
11.2.1 　查询联系人记录　　307
11.2.2 　读取单值属性　　309
11.2.3 　读取多值属性　　311
11.2.4 　读取图片属性　　313
11.3 　写入联系人信息　　313
11.3.1 　创建联系人　　315
11.3.2 　修改联系人　　317
11.3.3 　删除联系人　　318
11.4 　高级API　　319
11.4.1 　选择联系人　　319
11.4.2 　显示和修改联系人　　322
11.4.3 　创建联系人　　324
11.5 　小结　　328
第二部分　网络篇
第12章　访问Web Service　　330
12.1 　概述　　330
12.2 　数据交换格式　　330
12.2.1 　XML文档结构　　332
12.2.2 　解析XML文档　　333
12.2.3 　JSON文档结构　　340
12.2.4 　JSON数据解码　　341
12.3 　REST Web Service　　343
12.3.1 　HTTP和HTTPS协议　　343
12.3.2 　同步GET请求方法　　344
12.3.3 　异步GET请求方法　　348
12.3.4 　POST请求方式　　349
12.3.5 　调用REST Web Service的插入、修改和删除方法　　350
12.4 　使用ASIHTTPRequest框架　　355
12.4.1 　安装和配置ASIHTTPRequest框架　　355
12.4.2 　同步请求　　356
12.4.3 　异步请求　　358
12.4.4 　使用请求队列　　359
12.4.5 　上传数据　　362
12.5 　反馈网络信息改善用户体验　　364
12.5.1 　iOS 6表视图刷新控件的使用　　364
12.5.2 　使用等待指示器控件　　367
12.5.3 　使用网络等待指示器　　369
12.6 　小结　　370
第13章　定位服务与地图应用　　371
13.1 　定位服务　　371
13.1.1 　定位服务编程　　371
13.1.2 　地理信息反编码　　376
13.1.3 　地理信息编码查询　　377
13.1.4 　关于定位服务的测试　　379
13.2 　使用iOS 6苹果地图　　382
13.2.1 　显示地图　　382
13.2.2 　添加标注　　384
13.2.3 　跟踪用户位置变化　　387
13.3 　使用程序外地图　　388
13.3.1 　调用iOS 6苹果地图　　388
13.3.2 　调用谷歌Web地图　　391
13.4 　小结　　392
第三部分　进阶篇
第14章　iOS中的商业模式　　394
14.1 　收费策略　　394
14.1.1 　iOS如何赚钱　　394
14.1.2 　避免定价策略误区　　395
14.1.3 　免费软件的艺术　　395
14.1.4 　在适当的时间、适当的地点植入广告　　395
14.1.5 　尝试不同的盈利模式　　395
14.2 　使用苹果iAd广告　　396
14.2.1 　横幅广告　　396
14.2.2 　插页广告　　401
14.2.3 　查看你的收入　　406
14.3 　使用谷歌AdMob广告　　408
14.3.1 　注册AdMob账号和管理应用　　408
14.3.2 　下载谷歌AdMob Ads SDK和示例代码　　412
14.3.3 　添加AdMob横幅广告　　414
14.3.4 　添加AdMob插页广告　　418
14.3.5 　为广告提交用户和位置信息　　421
14.3.6 　搜索广告　　422
14.3.7 　查看你的收入　　424
14.4 　应用内购买　　425
14.4.1 　概述　　425
14.4.2 　测试环境搭建　　426
14.4.3 　在程序中实现应用内购买　　431
14.4.4 　测试应用内购买　　437
14.5 　小结　　439
第15章　找出程序中的bug——调试　　440
15.1 　Xcode调试工具　　440
15.1.1 　定位编译错误　　440
15.1.2 　查看和显示日志　　441
15.1.3 　设置和查看断点　　442
15.1.4 　调试工具栏　　446
15.1.5 　输出窗口　　447
15.1.6 　变量查看窗口　　448
15.1.7 　查看线程　　449
15.2 　日志与断言输出　　450
15.2.1 　使用NSLog函数　　450
15.2.2 　使用NSAssert宏　　451
15.2.3 　移除NSLog和NSAssert　　452
15.3 　LLDB调试工具　　455
15.3.1 　断点命令　　455
15.3.2 　观察点命令　　457
15.3.3 　查看变量和计算表达式命令　　458
15.4 　异常堆栈报告分析　　461
15.4.1 　跟踪异常堆栈　　461
15.4.2 　分析堆栈报告　　463
15.5 　在iOS设备上调试　　464
15.5.1 　创建开发者证书　　465
15.5.2 　设备注册　　468
15.5.3 　创建App ID　　470
15.5.4 　创建配置概要文件　　471
15.5.5 　设备调试　　473
15.6 　Xcode设备管理工具　　474
15.6.1 　管理设备配置概要文件　　474
15.6.2 　查看设备上的应用程序　　475
15.6.3 　设备控制台　　477
15.6.4 　设备日志　　477
15.7 　小结　　479
第16章　基于测试驱动的iOS开发　　480
16.1 　测试驱动的软件开发概述　　480
16.1.1 　测试驱动的软件开发流程　　480
16.1.2 　测试驱动的软件开发案例　　481
16.1.3 　iOS单元测试框架　　486
16.2 　使用OCUnit测试框架　　486
16.2.1 　添加OCUnit到工程中　　486
16.2.2 　应用测试和逻辑测试　　489
16.2.3 　编写OCUnit测试方法　　489
16.2.4 　分析测试报告　　494
16.3 　使用GHUnit测试框架　　495
16.3.1 　添加GHUnit到工程　　496
16.3.2 　编写GHUnit测试用例　　498
16.3.3 　分析测试报告　　500
16.4 　使用伪对象　　502
16.4.1 　添加OCMock到工程　　503
16.4.2 　使用OCMock对象　　505
16.5 　iOS单元测试最佳实践　　507
16.5.1 　iOS单元测试策略　　507
16.5.2 　测试数据持久层　　507
16.5.3 　测试业务逻辑层　　512
16.5.4 　测试表示层　　515
16.6 　小结　　522
第17章　让你的程序“飞”起来——性能优化　　523
17.1 　内存优化　　523
17.1.1 　内存泄漏问题的解决　　523
17.1.2 　查找和解决僵尸对象　　531
17.1.3 　autorelease的使用问题　　534
17.1.4 　响应内存警告　　534
17.1.5 　选择nib还是故事板　　536
17.2 　优化资源文件　　537
17.2.1 　图片文件优化　　537
17.2.2 　音频文件优化　　538
17.3 　延迟加载　　539
17.3.1 　资源文件的延迟加载　　540
17.3.2 　故事板和nib文件的延迟加载　　543
17.4 　数据持久化的优化　　546
17.4.1 　使用文件　　546
17.4.2 　使用SQLite数据库　　549
17.4.3 　使用Core Data　　550
17.5 　可重用对象的使用　　552
17.5.1 　表视图中的可重用对象　　553
17.5.2 　集合视图中的可重用对象　　554
17.5.3 　地图视图中的可重用对象　　555
17.6 　并发处理与多核CPU　　556
17.6.1 　主线程阻塞问题　　556
17.6.2 　选择NSThread还是GCD　　557
17.7 　编译器和编译参数　　558
17.7.1 　GCC、LLVM GCC与Apple LLVM比较　　558
17.7.2 　ARM架构　　559
17.7.3 　Optimization Level　　561
17.8 　小结　　562
第18章　管理好你的程序代码——代码版本控制　　563
18.1 　概述　　563
18.1.1 　版本控制历史　　563
18.1.2 　基本概念　　564
18.2 　Git代码版本控制　　564
18.2.1 　服务器搭建　　564
18.2.2 　Gitolite服务器管理　　566
18.2.3 　Git常用命令　　568
18.2.4 　Git分支　　570
18.2.5 　Git协同开发　　574
18.2.6 　Xcode中Git的配置与使用　　576
18.3 　GitHub代码托管服务　　583
18.3.1 　创建和配置GitHub账号　　584
18.3.2 　创建代码库　　586
18.3.3 　派生代码库　　589
18.3.4 　使用GitHub协同开发　　591
18.3.5 　管理组织　　596
18.4 　小结　　599
第19章　把你的应用放到App Store上　　600
19.1 　收官　　600
19.1.1 　添加图标　　600
19.1.2 　添加启动界面　　602
19.1.3 　调整Application Target属性　　604
19.1.4 　为发布进行编译　　605
19.1.5 　应用打包　　609
19.2 　发布流程　　610
19.2.1 　创建应用及基本信息　　611
19.2.2 　应用定价信息　　612
19.2.3 　最后信息输入　　613
19.2.4 　上传应用　　616
19.3 　常见审核不通过的原因　　618
19.4 　小结　　619
第四部分　实战篇
第20章　重构MyNotes应用——iOS网络通信中的设计模式与架构设计　　622
20.1 　移动网络通信应用的分层架构设计　　622
20.2 　基于委托模式实现　　623
20.2.1 　网络通信与委托模式　　623
20.2.2 　在异步网络通信中使用委托模式实现分层架构设计　　623
20.2.3 　类图　　624
20.2.4 　时序图　　626
20.2.5 　数据持久层的代码实现　　629
20.2.6 　业务逻辑层的代码实现　　631
20.2.7 　表示层的代码实现　　632
20.3 　基于观察者模式的通知机制实现　　637
20.3.1 　观察者模式的通知机制回顾　　637
20.3.2 　异步网络通信中通知机制的分层架构设计　　638
20.3.3 　类图　　638
20.3.4 　时序图　　639
20.3.5 　数据持久层的代码实现　　642
20.3.6 　业务逻辑层的代码实现　　643
20.3.7 　表示层的代码实现　　644
20.4 　小结　　649
第21章　iOS敏捷开发项目实战——2016里约热内卢奥运会应用开发及App Store发布　　650
21.1 　应用分析与设计　　650
21.1.1 　应用概述　　650
21.1.2 　需求分析　　650
21.1.3 　原型设计　　651
21.1.4 　数据库设计　　652
21.1.5 　架构设计　　652
21.2 　iOS敏捷开发　　653
21.2.1 　敏捷开发宣言　　653
21.2.2 　iOS适合敏捷开发？　　654
21.2.3 　iOS敏捷开发最佳实践　　654
21.3 　任务1：创建应用基本工作空间　　656
21.4 　任务2：信息系统层与持久层开发　　657
21.4.1 　迭代2.1：编写数据库DDL脚本　　657
21.4.2 　迭代2.2：插入初始数据到数据库　　658
21.4.3 　迭代2.3：编写实体类　　658
21.4.4 　迭代2.4：DAO类GHUnit单元测试　　659
21.4.5 　迭代2.5：编写DAO类　　663
21.4.6 　迭代2.6：发布到GitHub　　666
21.5 　任务3：业务逻辑层开发　　667
21.5.1 　迭代3.1：比赛项目业务逻辑类GHUnit单元测试　　667
21.5.2 　迭代3.2：编写比赛项目业务逻辑类　　668
21.5.3 　迭代3.3：比赛日程业务逻辑类GHUnit单元测试　　669
21.5.4 　迭代3.4：编写比赛日程业务逻辑类　　670
21.5.5 　迭代3.5：发布到GitHub　　672
21.6 　任务4：表示层开发　　672
21.6.1 　迭代4.1：根据原型设计初步设计iPad故事板　　673
21.6.2 　迭代4.2：根据原型设计初步设计iPhone故事板　　674
21.6.3 　迭代4.3：首页模块　　674
21.6.4 　迭代4.4：比赛项目模块　　675
21.6.5 　迭代4.5：比赛日程模块　　679
21.6.6 　迭代4.6：倒计时模块表示层　　681
21.6.7 　迭代4.7：关于我们模块表示层　　683
21.6.8 　迭代4.8：发布到GitHub　　683
21.7 　任务5：收工　　684
21.7.1 　迭代5.1：添加图标　　684
21.7.2 　迭代5.2：设计和添加启动界面　　684
21.7.3 　迭代5.3：植入谷歌AdMob横幅广告　　685
21.7.4 　迭代5.4：性能测试与改善　　686
21.7.5 　迭代5.5：发布到GitHub　　687
21.7.6 　迭代5.6：在App Store上发布应用　　687
21.8 　小结　　690
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS开发指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS编程实战
第一部分　全新功能
第1章　全新的系统　　2
1.1 　新的UI　　2
1.2 　UIKit Dynamics和Motion Effects　　3
1.3 　自定义过渡效果　　4
1.4 　新的多任务模式　　4
1.5 　Text Kit　　5
1.6 　动态字体　　5
1.7 　MapKit集成　　5
1.8 　SpriteKit　　5
1.9 　LLVM 5　　5
1.10 　Xcode 5　　7
1.10.1 　nib文件格式的变化　　7
1.10.2 　源代码控制集成　　7
1.10.3 　自动配置　　7
1.10.4 　对调试导航面板的改进　　8
1.10.5 　文档浏览器　　8
1.10.6 　Asset Catalog　　9
1.10.7 　测试导航面板　　9
1.10.8 　持续集成　　10
1.10.9 　Auto Layout改进　　10
1.10.10 　iOS模拟器　　10
1.11 　其他　　10
1.12 　小结　　11
1.13 　扩展阅读　　11
第2章　世界是平的：新的UI范式　　12
2.1 　清晰、依从和层次　　12
2.2 　动画、动画、动画　　12
2.2.1 　UIKit Dynamics　　13
2.2.2 　UIMotionEffect　　13
2.3 　着色　　14
2.4 　用半透明实现层次和上下文　　14
2.5 　动态字体　　15
2.6 　自定义过渡效果　　16
2.7 　把应用过渡（迁移）到iOS 7　　17
2.7.1 　UIKit变化　　17
2.7.2 　自定义设计　　17
2.7.3 　支持iOS 6　　17
2.8 　小结　　20
2.9 　扩展阅读　　20
第二部分　充分利用日常工具
第3章　你可能不知道的　　22
3.1 　命名最佳实践　　22
3.1.1 　自动变量　　22
3.1.2 　方法　　22
3.2 　属性和实例变量最佳实践　　23
3.3 　分类　　24
3.4 　关联引用　　26
3.5 　弱引用容器　　27
3.6 　NSCache　　28
3.7 　NSURLComponents　　28
3.8 　CFStringTransform　　29
3.9 　instancetype　　30
3.10 　Base64和百分号编码　　31
3.11 　-[NSArray firstObject]　　31
3.12 　小结　　31
3.13 　扩展阅读　　32
第4章　故事板及自定义切换效果　　33
4.1 　初识故事板　　33
4.1.1 　实例化故事板　　34
4.1.2 　加载故事板中的视图控制器　　34
4.1.3 　联线　　34
4.1.4 　使用故事板来实现表视图　　36
4.2 　自定义切换效果　　37
4.2.1 　优点　　39
4.2.2 　白璧微瑕——合并冲突　　39
4.3 　小结　　39
4.4 　扩展阅读　　39
第5章　掌握集合视图　　41
5.1 　集合视图　　41
5.1.1 　类与协议　　41
5.1.2 　示例　　42
5.2 　用集合视图自定义布局实现高级定制　　49
5.2.1 　石工布局　　50
5.2.2 　封面浏览布局　　55
5.3 　小结　　56
5.4 　扩展阅读　　56
第6章　使用自动布局　　58
6.1 　Xcode 4的自动布局　　58
6.2 　了解自动布局　　59
6.3 　Xcode 5中自动布局的新特性　　59
6.3.1 　在Xcode 5中使用自动布局　　61
6.3.2 　固有尺寸　　62
6.3.3 　固有尺寸和本地化　　63
6.3.4 　设计时和运行时布局　　63
6.3.5 　自动更新边框　　64
6.3.6 　顶部和底部布局引导　　65
6.3.7 　辅助编辑器中的布局预览　　65
6.3.8 　在设计时调试自动布局　　65
6.3.9 　在自动布局中使用滚动视图　　66
6.3.10 　使用自动布局和边框　　66
6.3.11 　可视格式化语言　　66
6.3.12 　可视格式化语言的缺点　　67
6.3.13 　调试布局错误　　68
6.4 　小结　　69
6.5 　扩展阅读　　69
第7章　更完善的自定义绘图　　71
7.1 　iOS的不同绘图系统　　71
7.2 　UIKit和视图绘图周期　　72
7.3 　视图绘制与视图布局　　73
7.4 　自定义视图绘制　　74
7.4.1 　通过UIKit绘图　　74
7.4.2 　路径　　75
7.4.3 　理解坐标系　　77
7.4.4 　重新调整大小以及内容模式　　79
7.4.5 　变形　　80
7.4.6 　通过Core Graphics进行绘制　　82
7.4.7 　混用UIKit与Core Graphics　　85
7.4.8 　管理图形上下文　　85
7.5 　优化UIView绘制　　87
7.5.1 　避免绘图　　87
7.5.2 　缓存与后台绘制　　88
7.5.3 　自定义绘图与预渲染　　88
7.5.4 　像素对齐与模糊文本　　89
7.5.5 　透明、不透明与隐藏　　90
7.6 　小结　　90
7.7 　扩展阅读　　91
第8章　Core Animation　　92
8.1 　视图动画　　92
8.2 　管理用户交互　　94
8.3 　图层绘制　　94
8.3.1 　直接设置内容　　96
8.3.2 　实现display方法　　97
8.3.3 　自定义绘图　　97
8.3.4 　在自己的上下文中绘图　　99
8.4 　移动对象　　99
8.4.1 　隐式动画　　100
8.4.2 　显式动画　　101
8.4.3 　模型与表示　　101
8.4.4 　关于定时　　103
8.5 　三维动画　　105
8.6 　美化图层　　108
8.7 　用动作实现自动动画　　108
8.8 　为自定义属性添加动画　　110
8.9 　Core Animation与线程　　111
8.10 　小结　　111
8.11 　扩展阅读　　111
第9章　多任务　　113
9.1 　多任务和运行循环简介　　113
9.2 　以操作为中心的多任务开发　　114
9.3 　用GCD实现多任务　　118
9.3.1 　分派队列简介　　119
9.3.2 　用分派屏障创建同步点　　120
9.3.3 　分派组　　121
9.4 　小结　　121
9.5 　扩展阅读　　121
第三部分　选择工具
第10章　创建（Core）Foundation
框架　　124
10.1 　Core Foundation类型　　124
10.2 　命名和内存管理　　125
10.3 　分配器　　126
10.4 　内省　　126
10.5 　字符串和数据　　127
10.5.1 　常量字符串　　127
10.5.2 　创建字符串　　128
10.5.3 　转换为C字符串　　129
10.5.4 　其他字符串操作符　　131
10.5.5 　字符串的支持存储　　131
10.5.6 　CFData　　132
10.6 　容器类型　　132
10.6.1 　CFArray　　133
10.6.2 　CFDictionary　　133
10.6.3 　CFSet和CFBag　　134
10.6.4 　其他容器类型　　134
10.6.5 　回调函数　　134
10.7 　自由桥接　　136
10.8 　小结　　139
10.9 　扩展阅读　　139
第11章　幕后制作：后台处理　　140
11.1 　后台运行最佳实践：能力越大责任
越大　　140
11.2 　iOS 7中后台运行的重要变化　　142
11.3 　用NSURLSession访问网络　　142
11.3.1 　会话配置　　143
11.3.2 　任务　　143
11.3.3 　后台传输　　144
11.4 　周期性拉取和自适应多任务　　146
11.5 　后台唤醒　　146
11.6 　状态恢复系统　　147
11.6.1 　测试状态恢复系统　　147
11.6.2 　选择性加入　　148
11.6.3 　应用启动过程的变化　　149
11.6.4 　状态恢复标识符　　149
11.6.5 　状态编码器与状态解码器　　149
11.6.6 　表视图和集合视图　　153
11.7 　小结　　154
11.8 　扩展阅读　　154
第12章　使用REST服务　　156
12.1 　REST简介　　157
12.2 　选择数据交换格式　　157
12.2.1 　在iOS中解析XML　　157
12.2.2 　在iOS中解析JSON　　158
12.2.3 　XML与JSON　　159
12.2.4 　模型版本化　　160
12.3 　假想的Web服务　　160
12.4 　重要提醒　　161
12.5 　RESTfulEngine架构（iHotelApp
示例代码）　　161
12.5.1 　NSURLConnection与第三
方框架　　161
12.5.2 　创建RESTfulEngine　　162
12.5.3 　使用访问令牌对API调用
进行认证　　165
12.5.4 　在RESTfulEngine.m中覆
盖相关方法以添加自定义
认证头部　　165
12.5.5 　取消请求　　166
12.5.6 　请求响应　　166
12.5.7 　对JSON数据进行键值编码　　167
12.5.8 　列表页面的JSON对象与详细页面的JSON对象　　169
12.5.9 　嵌套JSON对象　　169
12.5.10 　少即是多　　171
12.5.11 　错误处理　　171
12.5.12 　本地化　　173
12.5.13 　使用分类处理其他格式　　173
12.5.14 　在iOS中提升性能的小技
巧　　174
12.6 　缓存　　174
12.7 　需要离线支持的原因　　174
12.8 　缓存策略　　175
12.8.1 　存储缓存　　175
12.8.2 　缓存版本和失效　　178
12.9 　数据模型缓存　　178
12.10 　缓存版本控制　　182
12.11 　创建内存缓存　　183
12.11.1 　为AppCache设计内存
缓存　　184
12.11.2 　处理内存警告　　185
12.11.3 　处理结束和进入后台通
知　　186
12.12 　创建URL缓存　　186
12.12.1 　过期模型　　187
12.12.2 　验证模型　　187
12.12.3 　示例　　187
12.12.4 　用URL缓存来缓存图片　　188
12.13 　小结　　188
12.14 　扩展阅读　　188
第13章　充分利用蓝牙设备　　190
13.1 　蓝牙历史　　190
13.2 　为什么选择低功耗蓝牙　　191
13.3 　蓝牙SDK　　191
13.3.1 　服务器　　191
13.3.2 　客户端　　191
13.4 　类和协议　　191
13.5 　使用蓝牙设备　　192
13.5.1 　通过扫描寻找服务　　192
13.5.2 　连接设备　　194
13.5.3 　直接获取外围设备　　194
13.5.4 　发现服务　　194
13.5.5 　发现特性　　195
13.6 　创建自己的外围设备　　197
13.6.1 　广播服务　　197
13.6.2 　常见场景　　200
13.7 　在后台运行　　200
13.7.1 　后台模式　　200
13.7.2 　电量考虑　　200
13.7.3 　状态保存和恢复　　200
13.8 　小结　　201
13.9 　扩展阅读　　201
第14章　通过安全服务巩固系统安全　　203
14.1 　理解iOS沙盒　　203
14.2 　保证网络通信的安全　　204
14.2.1 　证书工作原理　　205
14.2.2 　检验证书的有效性　　207
14.2.3 　判断证书的可信度　　210
14.3 　使用文件保护　　211
14.4 　使用钥匙串　　213
14.5 　使用加密　　216
14.5.1 　AES概要　　217
14.5.2 　使用PBKDF2将密码转换
成密钥　　217
14.5.3 　AES模式和填充　　219
14.5.4 　初始化向量　　220
14.5.5 　使用HMAC进行认证　　221
14.5.6 　错误的密码　　222
14.5.7 　组合使用加密和压缩　　222
14.6 　小结　　222
14.7 　扩展阅读　　222
第15章　在多个苹果平台和设备及64
位体系结构上运行应用　　224
15.1 　开发多平台应用　　225
15.1.1 　可配置的目标设置：Base
SDK和Deployment Target　　225
15.1.2 　支持多个SDK时的注意事项：框架、类和方法　　225
15.1.3 　检查框架、类和方法的可
用性　　227
15.2 　检测设备的功能　　228
15.2.1 　检测设备及判断功能　　228
15.2.2 　检测硬件和传感器　　229
15.3 　应用内发送Email和短信　　233
15.4 　支持新的4英寸设备族系　　233
15.4.1 　Cocoa自动布局　　235
15.4.2 　代码中固化屏幕尺寸　　235
15.4.3 　iPhone 5s和新的64位指令集　　235
15.5 　向iOS 7迁移　　236
15.5.1 　自动布局　　236
15.5.2 　支持iOS 6　　236
15.5.3 　应用图标　　237
15.5.4 　无边界按钮　　237
15.5.5 　着色　　237
15.5.6 　图片更新　　237
15.6 　向64位体系结构迁移　　238
15.6.1 　数据溢出　　238
15.6.2 　序列化数据　　239
15.6.3 　针对64位体系结构的条件
编译　　239
15.7 　UIRequiredDeviceCapabilities　　239
15.8 　小结　　240
15.9 　扩展阅读　　240
第16章　国际化和本地化　　242
16.1 　什么是本地化　　242
16.2 　本地化字符串　　243
16.3 　对未本地化的字符串进行审查　　244
16.4 　格式化数字和日期　　245
16.5 　nib文件和Base Internationalization　　248
16.6 　本地化复杂字符串　　248
16.7 　小结　　250
16.8 　扩展阅读　　251
第17章　调试　　252
17.1 　LLDB　　252
17.2 　使用LLDB进行调试　　252
17.2.1 　dSYM文件　　253
17.2.2 　符号化　　254
17.3 　断点　　255
17.4 　观察点　　258
17.5 　LLDB控制台　　259
17.6 　NSZombieEnabled标志　　262
17.7 　不同的崩溃类型　　263
17.7.1 　EXC_BAD_ACCESS　　263
17.7.2 　SIGSEGV　　263
17.7.3 　SIGBUS　　264
17.7.4 　SIGTRAP　　264
17.7.5 　EXC_ARITHMETIC　　264
17.7.6 　SIGILL　　264
17.7.7 　SIGABRT　　264
17.7.8 　看门狗超时　　265
17.7.9 　自定义错误信号处理程序　　265
17.8 　断言　　265
17.9 　异常　　267
17.10 　收集崩溃报告　　268
17.11 　第三方崩溃报告服务　　269
17.12 　小结　　270
17.13 　扩展阅读　　270
第18章　性能调优　　272
18.1 　性能思维模式　　272
18.1.1 　指导方针一：产品是为了
取悦用户才存在的　　272
18.1.2 　指导方针二：设备是为了
方便用户而存在的　　272
18.1.3 　指导方针三：做到极致　　272
18.1.4 　指导方针四：用户的感知
才是实际的　　273
18.1.5 　指导方针五：关注能带来
大收益的方面　　273
18.2 　欢迎走入Instruments的世界　　273
18.3 　查找内存问题　　275
18.4 　查找CPU问题　　279
18.4.1 　Accelerate框架　　282
18.4.2 　GLKit　　283
18.4.3 　编译器优化　　283
18.4.4 　链接器优化　　284
18.5 　绘图性能　　284
18.6 　优化磁盘访问和网络访问　　286
18.7 　小结　　286
18.8 　扩展阅读　　286
第四部分　超越极限
第19章　近乎物理效果：UIKit动力学　　290
19.1 　动画类、行为和动力项　　290
19.2 　UIKit“物理”　　291
19.3 　内置行为　　292
19.3.1 　迅速移动　　292
19.3.2 　附着　　292
19.3.3 　推力　　293
19.3.4 　重力　　294
19.3.5 　碰撞　　294
19.3.6 　动力项　　295
19.4 　行为层次结构　　295
19.5 　自定义操作　　295
19.6 　实战：一个“撕开”视图　　296
19.6.1 　拖拽视图　　296
19.6.2 　撕开该视图　　297
19.6.3 　添加额外效果　　300
19.7 　多个动力学动画类　　301
19.8 　与UICollectionView交互　　302
19.9 　小结　　305
19.10 　扩展阅读　　305
第20章　魔幻的自定义过渡　　306
20.1 　iOS 7中的自定义过渡　　306
20.2 　过渡协调器　　307
20.3 　集合视图和布局过渡　　308
20.4 　使用故事板和自定义联线的自定义
视图控制器过渡　　308
20.5 　自定义视图控制器过渡：iOS 7风格　　308
20.6 　使用iOS 7 SDK的交互式自定义
过渡　　310
20.7 　小结　　312
20.8 　扩展阅读　　313
第21章　精妙的文本布局　　314
21.1 　理解富文本　　314
21.1.1 　字符与字形　　314
21.1.2 　理解字体　　316
21.1.3 　段落样式　　316
21.2 　属性化字符串　　317
21.2.1 　用字体描述符选择字体　　318
21.2.2 　设置段落样式　　319
21.2.3 　HTML　　319
21.2.4 　简化属性化字符串的使用　　320
21.3 　动态字体　　321
21.4 　Text Kit　　322
21.4.1 　Text Kit的组件　　323
21.4.2 　多容器布局　　324
21.4.3 　排除路径　　325
21.4.4 　继承文本容器　　326
21.4.5 　继承文本存储　　327
21.4.6 　继承布局管理器　　331
21.4.7 　针对字形的布局　　334
21.5 　Core Text　　337
21.5.1 　用CTFramesetter进行
简单的布局　　337
21.5.2 　为非连续路径创建框架　　338
21.5.3 　排版器、文本行、连续文本和字形　　340
21.6 　小结　　340
21.7 　扩展阅读　　341
第22章　Cocoa的大招：键值编码
和观察　　342
22.1 　键值编码　　342
22.1.1 　用KVC赋值　　344
22.1.2 　用键路径遍历属性　　345
22.1.3 　KVC和容器类　　345
22.1.4 　KVC和字典　　347
22.1.5 　KVC和非对象　　347
22.1.6 　用KVC实现高阶消息传递　　347
22.1.7 　容器操作符　　347
22.2 　键值观察　　348
22.2.1 　KVO和容器类　　350
22.2.2 　KVO是如何实现的　　351
22.3 　KVO的权衡　　351
22.4 　小结　　352
22.5 　扩展阅读　　353
第23章　超越队列：GCD高级功能　　354
23.1 　信号量　　354
23.2 　分派源　　356
23.3 　定时器源　　358
23.4 　单次分派　　358
23.5 　队列关联数据　　359
23.6 　分派数据和分派I/O　　362
23.7 　小结　　367
23.8 　扩展阅读　　367
第24章　深度解析Objective-C　　368
24.1 　理解类和对象　　368
24.2 　使用方法和属性　　370
24.3 　使用方法签名和调用　　372
24.4 　消息传递如何工作　　378
24.4.1 　动态实现　　378
24.4.2 　快速转发　　380
24.4.3 　普通转发　　383
24.4.4 　转发失败　　384
24.4.5 　各种版本的objc_msgSend　　384
24.5 　方法混写　　385
24.6 　ISA混写　　387
24.7 　方法混写与ISA混写　　388
24.8 　小结　　389
24.9 　扩展阅读　　389

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS编程实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>大话移动APP测试：Android与 iOS应用测试指南
《大话移动app测试：android与 ios应用测试指南》
第1章 移动互联网面试 1
1.1 为什么要面试 2
1.2 面试的流程 2
1.3 面试的频率 3
1.4 面试实战 3
1.5 如何正确地招聘测试人员 8
1.6 移动互联网测试招聘现状 12
1.7 大公司和小公司 13
1.7.1 故事一 14
1.7.2 故事二 15
1.8 测试外包 16
1.9 小结 17
第2章 病态的现状 19
2.1 全民挖金 20
2.2 别人的嫁衣 22
2.2.1 talkbox 23
2.2.2 米聊 23
2.2.3 飞信 24
2.3 超越光速的迭代 25
2.4 可怜的测试团队 27
2.5 敏捷中毒 28
2.6 无力的测试 29
2.7 浮躁的测试工程师们 31
2.7.1 社交中毒 31
2.7.2 失去自理能力 32
2.7.3 不能正确认识自己的价值 33
2.8 测试沙龙和培训 34
2.9 学会自我尊重 35
2.10 小结 36
第3章 用户体验测试 37
3.1 移动互联网与传统互联网体验上的区别 38
3.1.1 区别一——用户关注点 38
3.1.2 区别二——场合复杂化 39
3.1.3 区别三——时间碎片化 39
3.1.4 区别四——输入困难化 39
3.2 android vs ios 40
3.2.1 桌面 40
3.2.2 联系人 41
3.2.3 短信 43
3.2.4 历史应用 43
3.2.5 相册 44
3.2.6 其他 46
3.3 “愚笨”的用户——用户引导 47
3.4 “捣乱”的用户——应用容错 52
3.4.1 注册与登录 52
3.4.2 断网引发的问题 54
3.5 专业精神——风格一致性 57
3.5.1 应用与系统风格一致 58
3.5.2 应用本身风格一致 59
3.6 “我”即最终用户：过程体验测试 60
3.7 使用更多的应用：对比体验测试 65
3.8 模拟场景体验测试 66
3.8.1 应用一：智能手机输入法 67
3.8.2 应用二：智能机顶盒 68
3.9 用户究竟关心什么？ 69
3.9.1 用户只关心应用能在自己手机上正常运行 69
3.9.2 用户隐私权限 70
3.9.3 简洁、方便 71
3.9.4 消耗 71
3.9.5 好不好用 72
3.10 用户体验的问题是bug吗？ 72
3.11 如何提升自身的用户体验经验？ 73
3.12 小结 74
第4章 功能测试要点 75
4.1 多分辨率测试 76
4.2 多系统测试 77
4.3 用户不同的使用习惯 80
4.3.1 android权限问题 80
4.3.2 android硬件问题 81
4.3.3 android操作习惯 83
4.3.4 android数据的移动或清空 84
4.3.5 ios操作习惯 85
4.3.6 ios越狱问题 86
4.4 网络的不稳定性 88
4.5 安装/卸载测试 92
4.6 升级测试 94
4.6.1 增量升级 95
4.6.2 内置应用升级 96
4.7 并发测试 96
4.7.1 弹出框提示 96
4.7.2 另一个应用启动 97
4.7.3 关机或待机 98
4.7.4 功能冲突 98
4.7.5 可存储设备 98
4.8 数据来源 98
4.9 推送 100
4.10 分享跳转 102
4.11 小结 104
第5章 常用工具介绍和实践 105
5.1 monkey 106
5.1.1 第一个简单的monkey测试命令 106
5.1.2 monkey测试工具实例 107
5.1.3 monkey测试日志查看 108
5.1.4 monkey测试注意点 112
5.1.5 monkey工具再探索 114
5.2 emulator 115
5.2.1 模拟器和真机的差异 115
5.2.2 genymotion 118
5.2.3 模拟器常用功能举例 119
5.3 monkeyrunner 121
5.4 hierarchy viewer 126
5.5 ddms 129
5.6 compatibility test suite 133
5.7 tcpdump/wireshark 136
5.8 findbugs 138
5.9 lint 140
5.10 反编译、重编译 142
5.11 ant 146
5.12 charles 148
5.13 instruments 150
5.14 小结 153
第6章 常用框架介绍和实践 155
6.1 instrumentation 156
6.1.1 技巧一 158
6.1.2 技巧三 160
6.1.3 技巧三 161
6.2 emma code coverage 163
6.3 robolectric 173
6.4 小结 185
第7章 移动应用测试案例实践分析 187
7.1 深入了解被测试对象 188
7.2 多种数据来源 190
7.3 在生活中使用产品 193
7.4 社交应用分层设计实践案例 195
7.5 联系人搜索案例测试设计实践 204
7.6 小结 212
第8章 性能测试介绍和实践 215
8.1 emmagee 216
8.2 instrumentation 217
8.3 hprof 220
8.4 gfxinfo 223
8.5 systrace 225
8.6 traceview 226
8.7 instruments——leaks 229
8.8 android多分辨率自动化实践 233
8.9 小结 239
附录a 测试人员的自我修养（吐槽篇） 241
a.1 学会提出和解决问题 242
a.2 正确地自我审视 243
a.3 不要被业界世俗的讨论蒙蔽 245
a.4 寻找测试的本质 247
a.5 主观能动 248
a.6 你真的会使用搜索引擎吗 250
a.7 每天都要学习 252
a.8 学会判断轻重缓急 254
a.9 小结 254
附录b 测试行业常见问题（q&a篇） 255
q1：没有做过测试的人怎么入门？ 256
q2：测试工程师要具备什么能力？ 257
q3：测试比开发技术含量低吗？ 258
q4：参加测试培训能有多少提升？ 259
q5：黑盒测试有价值吗？ 260
q6：手动测试有价值吗？ 261
q7：怎么做移动互联网应用的自动化测试？ 261
q8：测试人员选择进入大公司还是小公司？ 263
q9：中国高校有软件测试专业吗？ 264
q10：小结 266
附录c 博客摘录 267
c.1 我们需要专职的qa吗？ 268
c.2 学习让测试更精彩，测试让生命更精彩 271
c.3 中国人的纠结 278
c.4 黑盒不是白盒的绊脚石 283
c.5 测试需要反省 283
c.6 《钝感力》有感——测试中的钝感力 286
后记 289
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>大话移动APP测试：Android与 iOS应用测试指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通iOS开发
目　录

第1章　欢迎来到iOS世界　　1
1.1 　关于本书　　1
1.2 　必要条件　　1
1.2.1 　开发者选项　　3
1.2.2 　必备知识　　3
1.3 　编写iOS应用程序有何不同　　4
1.3.1 　只能激活一个应用　　4
1.3.2 　只有一个窗口　　5
1.3.3 　有限的访问权限　　5
1.3.4 　有限的响应时间　　5
1.3.5 　有限的屏幕大小　　5
1.3.6 　有限的系统资源　　6
1.3.7 　不支持垃圾回收　　6
1.3.8 　新功能　　6
1.3.9 　与众不同的交互方法　　7
1.4 　本书内容　　7
1.5 　这一版的新内容　　8
1.6 　准备开始吧　　9
第2章　创建项目　　10
2.1 　在Xcode中创建项目　　10
2.1.1 　Xcode工作区窗口　　14
2.1.2 　深入研究项目　　21
2.2 　Interface Builder简介　　23
2.2.1 　nib文件的构成　　24
2.2.2 　库　　25
2.2.3 　在视图中添加标签　　26
2.2.4 　属性修改　　29
2.3 　画龙点睛——美化iPhone应用　　30
2.4 　小结　　34
第3章　实现基本交互　　35
3.1 　MVC方法　　36
3.2 　创建项目　　36
3.3 　视图控制器　　37
3.3.1 　输出口和动作　　38
3.3.2 　清理视图控制器　　41
3.3.3 　设计用户界面　　41
3.3.4 　运行应用　　50
3.3.5 　样式文本　　50
3.4 　应用程序委托　　52
3.5 　小结　　55
第4章　更丰富的用户界面　　56
4.1 　满是控件的屏幕　　56
4.2 　活动控件、静态控件和被动控件　　58
4.3 　创建应用程序　　59
4.4 　实现图像视图和文本字段　　59
4.4.1 　添加图像视图　　59
4.4.2 　调整图像视图的大小　　62
4.4.3 　设置视图属性　　63
4.4.4 　添加文本字段　　65
4.4.5 　创建和关联输出口　　70
4.5 　关闭键盘　　72
4.5.1 　输入完成后关闭键盘　　73
4.5.2 　通过触摸背景关闭键盘　　74
4.5.3 　添加滑块和标签　　76
4.5.4 　添加顶部约束　　78
4.5.5 　创建并关联动作方法和输出口　　78
4.5.6 　实现动作方法　　79
4.6 　实现开关、按钮和分段控件　　80
4.7 　实现分段控件的动作方法　　84
4.8 　实现操作表单和警告视图　　85
4.8.1 　遵从操作表单委托方法　　85
4.8.2 　显示操作表单　　85
4.9 　美化按钮　　88
4.9.1 　viewDidLoad方法　　89
4.9.2 　控件状态　　90
4.9.3 　可拉伸图像　　90
4.10 　小结　　91
第5章　自动旋转和自动调整大小　　92
5.1 　自动旋转机制　　93
5.1.1 　点、像素和Retina显示屏　　93
5.1.2 　自动旋转的实现方式　　94
5.2 　选择视图支持的方向　　95
5.2.1 　应用级支持的方向　　95
5.2.2 　单个控制器的旋转支持　　96
5.3 　使用约束设计界面　　98
5.3.1 　覆盖默认的约束　　100
5.3.2 　与屏幕等宽的按钮　　101
5.4 　旋转时重构视图　　103
5.4.1 　创建并关联输出口　　104
5.4.2 　旋转时移动按钮　　105
5.5 　切换视图　　106
5.5.1 　设计两个视图　　108
5.5.2 　实现视图切换　　109
5.5.3 　修改输出口集合　　111
5.6 　小结　　112
第6章　多视图应用程序　　113
6.1 　多视图应用程序的常见类型　　113
6.2 　多视图应用程序的体系结构　　117
6.2.1 　根控制器　　119
6.2.2 　内容视图剖析　　119
6.3 　UINavigationController　　120
6.3.1 　创建视图控制器和nib文件　　121
6.3.2 　修改应用程序委托　　123
6.3.3 　修改BIDSwitchView- Controller.h　　124
6.3.4 　添加视图控制器　　124
6.3.5 　构建带有工具栏的视图　　126
6.3.6 　编写根视图控制器　　128
6.3.7 　实现内容视图　　131
6.3.8 　转换过程的动画效果　　134
6.4 　小结　　136
第7章　标签栏与选取器　　137
7.1 　Pickers应用程序　　138
7.2 　委托和数据源　　140
7.3 　建立标签栏框架　　141
7.3.1 　创建文件　　141
7.3.2 　添加根视图控制器　　142
7.3.3 　创建TabBarController.xib　　143
7.3.4 　初次运行　　149
7.4 　实现日期选取器　　150
7.5 　实现单组件选取器　　153
7.5.1 　声明输出口和动作方法　　153
7.5.2 　构建视图　　153
7.5.3 　将控制器实现为数据源和委托　　155
7.6 　实现多组件选取器　　158
7.6.1 　声明输出口和动作方法　　158
7.6.2 　构建视图　　159
7.6.3 　实现控制器　　159
7.7 　实现依赖组件　　162
7.8 　使用自定义选取器创建一个简单游戏　　168
7.8.1 　编写控制器头文件　　168
7.8.2 　构建视图　　169
7.8.3 　添加图像资源　　170
7.8.4 　实现控制器　　170
7.8.5 　最后的细节　　173
7.8.6 　链接Audio Toolbox框架　　177
7.9 　小结　　178
第8章　表视图简介　　179
8.1 　表视图基础　　179
8.1.1 　表视图和表视图单元　　180
8.1.2 　分组表和无格式表　　180
8.2 　实现一个简单表　　181
8.2.1 　设计视图　　182
8.2.2 　编写控制器　　182
8.2.3 　添加一个图像　　186
8.2.4 　表视图单元样式　　187
8.2.5 　设置缩进级别　　189
8.2.6 　处理行的选择　　190
8.2.7 　更改字体大小和行高　　192
8.3 　定制表视图单元　　193
8.3.1 　向表视图单元添加子视图　　193
8.3.2 　创建UITableViewCell子类　　194
8.3.3 　从nib文件加载UITableViewCell　　199
8.4 　分组分区和索引分区　　202
8.4.1 　构建视图　　202
8.4.2 　导入数据　　203
8.4.3 　实现控制器　　204
8.4.4 　添加索引　　207
8.5 　实现搜索栏　　208
8.6 　小结　　215
第9章　导航控制器和表视图　　216
9.1 　导航控制器　　216
9.1.1 　栈的性质　　216
9.1.2 　控制器栈　　217
9.2 　由6个部分组成的分层应用程序：Nav　　218
9.2.1 　子控制器　　219
9.2.2 　Nav应用程序骨架　　223
9.2.3 　向项目中添加图像　　229
9.2.4 　第一个子控制器：展开按钮视图　　229
9.2.5 　第二个子控制器：检查表　　237
9.2.6 　第三个子控制器：表行上的控件　　242
9.2.7 　第四个子控制器：可移动的行　　248
9.2.8 　第五个子控制器：可删除的行　　252
9.2.9 　第六个子控制器：可编辑的详细面板　　257
9.2.10 　其他内容　　272
9.3 　小结　　273
第10章　故事板　　274
10.1 　创建一个简单的故事板　　274
10.2 　动态原型单元　　277
10.2.1 　使用故事板的动态表内容　　277
10.2.2 　编辑原型单元　　278
10.2.3 　实现表视图数据源　　279
10.2.4 　它会加载吗　　281
10.3 　静态单元　　282
10.3.1 　实现静态单元　　282
10.3.2 　实现表视图数据源　　283
10.4 　联线　　285
10.4.1 　创建联线导航　　285
10.4.2 　设计故事板　　286
10.4.3 　第一个视图转换　　287
10.4.4 　更为实用的任务列表　　288
10.4.5 　查看任务详情　　289
10.4.6 　设置更多联线　　290
10.4.7 　从列表中传递任务　　291
10.4.8 　处理任务细节　　292
10.4.9 　回传详细信息　　293
10.4.10 　让列表获取详细信息　　294
10.4.11 　小结　　295
第11章　iPad开发注意事项　　296
11.1 　分割视图和浮动窗口　　296
11.1.1 　创建SplitView项目　　298
11.1.2 　在故事板中定义结构　　300
11.1.3 　使用代码定义功能　　301
11.2 　显示总统信息　　307
11.3 　创建浮动窗口　　313
11.4 　小结　　319
第12章　应用程序设置及用户默认设置　　320
12.1 　设置捆绑包入门　　320
12.2 　AppSettings应用程序　　321
12.2.1 　创建项目　　324
12.2.2 　使用设置捆绑包　　325
12.2.3 　读取应用程序中的设置　　338
12.2.4 　在应用程序中修改默认设置　　342
12.2.5 　注册默认值　　344
12.2.6 　保证设置有效　　345
12.3 　小结　　348
第13章　数据持久化基础知识　　349
13.1 　应用程序的沙盒　　349
13.1.1 　获取Documents目录　　350
13.1.2 　获取tmp目录　　351
13.2 　文件保存策略　　351
13.2.1 　单文件持久化　　352
13.2.2 　多文件持久化　　352
13.3 　属性列表　　352
13.3.1 　属性列表序列化　　352
13.3.2 　Persistence应用程序的第一个版本　　353
13.4 　对模型对象进行归档　　358
13.4.1 　遵循NSCoding协议　　358
13.4.2 　实现NSCopying协议　　360
13.4.3 　对数据对象进行归档和取消归档　　360
13.4.4 　归档应用程序　　361
13.5 　使用iOS内嵌的SQLite3　　364
13.5.1 　创建或打开数据库　　365
13.5.2 　绑定变量　　366
13.5.3 　SQLite3应用程序　　367
13.6 　使用Core Data　　373
13.6.1 　实体和托管对象　　374
13.6.2 　Core Data应用程序　　378
13.7 　小结　　386
第14章　iCloud之旅　　387
14.1 　使用UIDocument管理文档存储　　387
14.1.1 　构建TinyPix　　388
14.1.2 　创建BIDTinyPix-Document类　　388
14.1.3 　主代码　　391
14.1.4 　初始故事板　　397
14.1.5 　创建BIDTinyPixView类　　400
14.1.6 　设计详细视图　　403
14.2 　添加iCloud支持　　407
14.2.1 　创建provisioning profile　　408
14.2.2 　启用iCloud授权　　409
14.2.3 　如何查询　　409
14.2.4 　保存在哪里　　411
14.2.5 　将首选项保存到iCloud　　411
14.3 　小结　　412
第15章　Grand Central Dispatch和后台处理　　414
15.1 　Grand Central Dispatch　　414
15.2 　SlowWorker简介　　415
15.3 　线程基础知识　　418
15.4 　工作单元　　419
15.5 　GCD：低级队列　　419
15.5.1 　傻瓜式操作　　420
15.5.2 　改进SlowWorker　　421
15.6 　后台处理　　426
15.6.1 　应用程序生命周期　　427
15.6.2 　状态更改通知　　427
15.6.3 　创建State Lab项目　　428
15.6.4 　执行状态的变化　　430
15.6.5 　利用执行状态更改　　431
15.6.6 　处理不活动状态　　432
15.6.7 　处理后台状态　　436
15.7 　小结　　443
第16章　使用Quartz和OpenGL绘图　　444
16.1 　图形世界的两个视图　　444
16.2 　Quartz 2D绘图方法　　445
16.2.1 　Quartz 2D的图形上下文　　445
16.2.2 　坐标系　　446
16.2.3 　指定颜色　　447
16.2.4 　在上下文中绘制图像　　449
16.2.5 　绘制形状：多边形、直线和曲线　　449
16.2.6 　Quartz 2D工具采样器：模式、梯度、虚线模式　　450
16.3 　QuartzFun应用程序　　451
16.3.1 　建立QuartzFun应用程序　　451
16.3.2 　添加Quartz 2D的绘图代码　　460
16.3.3 　优化QuartzFun应用程序　　465
16.4 　GLFun应用程序　　468
16.4.1 　建立GLFun应用程序　　468
16.4.2 　创建BIDGLFunView类　　469
16.4.3 　更新BIDView-Controller类　　475
16.4.4 　更新nib文件　　476
16.4.5 　完成GLFun应用程序　　476
16.5 　小结　　476
第17章　轻击、触摸和手势　　477
17.1 　多点触控术语　　477
17.2 　响应者链　　478
17.2.1 　响应事件　　478
17.2.2 　转发事件：保持响应者链的活动状态　　479
17.3 　多点触控体系结构　　480
17.4 　4个手势通知方法　　480
17.5 　TouchExplorer应用程序　　481
17.6 　Swipes应用程序　　485
17.6.1 　自动手势识别　　488
17.6.2 　实现多指滑动　　489
17.7 　检测多次轻击　　491
17.8 　检测捏合和旋转　　496
17.9 　自定义手势　　500
17.9.1 　CheckPlease应用程序　　501
17.9.2 　CheckPlease的触摸方法　　503
17.10 　小结　　505
第18章　Core Location和Map Kit　　506
18.1 　位置管理器　　506
18.1.1 　设置精度　　507
18.1.2 　设置距离筛选器　　507
18.1.3 　启动位置管理器　　508
18.1.4 　合理使用位置管理器　　508
18.2 　位置管理器委托　　508
18.2.1 　获取位置更新　　508
18.2.2 　使用CLLocation获取纬度和经度　　508
18.2.3 　错误通知　　510
18.3 　试用Core Location　　511
18.4 　将移动路线展现在地图上　　516
18.5 　小结　　519
第19章　陀螺仪和加速计　　520
19.1 　加速计物理学　　520
19.2 　不要忘记旋转　　521
19.3 　Core Motion和动作管理器　　521
19.3.1 　基于事件的动作　　522
19.3.2 　主动动作访问　　527
19.3.3 　加速计结果　　529
19.4 　检测摇动　　530
19.4.1 　内嵌的摇动检测　　531
19.4.2 　摇动与击碎　　531
19.5 　将加速计用做方向控制器　　536
19.5.1 　滚弹珠程序　　537
19.5.2 　实现BIDBallView类　　539
19.5.3 　计算弹珠运动　　542
19.6 　小结　　544
第20章　照相机和照片库　　545
20.1 　图像选取器和UIImagePicker-
Controller　　545
20.2 　实现图像选取器控制器委托　　547
20.3 　实际测试照相机和照片库　　548
20.3.1 　设计界面　　549
20.3.2 　实现照相机视图控制器　　550
20.4 　小结　　553
第21章　集合视图　　554
21.1 　创建DialogViewer项目　　554
21.2 　视图控制器类　　555
21.3 　自定义单元　　555
21.4 　配置视图控制器　　558
21.5 　内容单元　　559
21.6 　实现流式布局　　560
21.7 　分区标题视图　　562
21.8 　小结　　563
第22章　应用程序本地化　　564
22.1 　本地化体系结构　　564
22.2 　字符串文件　　565
22.2.1 　字符串文件　　566
22.2.2 　本地化的字符串宏　　566
22.3 　现实中的iOS：本地化应用程序　　567
22.3.1 　创建LocalizeMe　　568
22.3.2 　测试LocalizeMe　　570
22.3.3 　本地化nib文件　　571
22.3.4 　本地化图像　　575
22.3.5 　生成并本地化字符串文件　　577
22.3.6 　Base Internationalization　　579
22.3.7 　应用显示名称的本地化　　582
22.4 　小结　　583
附录A 　未来之路　　584

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通iOS开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS 5 cocos2d 游戏开发实战
目 录
第1章 简介 ........................................... 1
1.1 本书第2版的新增内容 ............... 2
1.2 选择iOS版cocos2d的理由 ........ 3
1.2.1 免费 ........................................... 3
1.2.2 开源 ........................................... 3
1.2.3 Objective-C ............................... 3
1.2.4 2D游戏引擎 ............................. 3
1.2.5 物理引擎 ................................... 4
1.2.6 技术难度较低 ........................... 4
1.2.7 依然需要编程 ........................... 4
1.2.8 超棒的cocos2d社区 ................ 5
1.3 cocos2d-iphone项目的未来 ......... 5
1.4 其他cocos2d游戏引擎 ................ 6
1.5 本书读者对象 ............................... 7
1.6 阅读前提 ....................................... 7
1.6.1 编程经验 ................................... 7
1.6.2 Objective-C ............................... 7
1.7 本书内容 ....................................... 8
1.7.1 iOS游戏开发新手将学会 什么 ........................................... 8
1.7.2 iOS应用程序开发者将学会 什么 ........................................... 9
1.7.3 cocos2d开发者将学会什么 ..... 9
1.8 章节介绍 ....................................... 9
1.9 本书的源代码 ............................. 10
1.10 问题和反馈 ............................... 11
第2章 入门 ......................................... 13
2.1 准备工作 ..................................... 13
2.1.1 系统要求 ................................. 13
2.1.2 注册成为iOS开发者 ............. 14
2.1.3 证书和授权文件 ..................... 14
2.1.4 下载并安装iOS SDK ............. 14
2.1.5 下载并安装cocos2d ............... 15
2.2 HelloWorld应用程序 ................. 18
2.2.1 HelloWorld文件在项目中 的位置 ..................................... 19
2.2.2 资源 ......................................... 19
2.2.3 支持文件 ................................. 19
2.2.4 HelloWorld类 ......................... 21
2.3 cocos2d中的内存管理问题 ....... 24
2.4 改变世界 ..................................... 27
2.5 你还应该知道的 ......................... 29
2.5.1 iOS设备 .................................. 29
2.5.2 关于内存的使用 ..................... 30
2.5.3 iOS模拟器 .............................. 31
2.5.4 关于日志 ................................. 32
2.6 本章小结 ..................................... 33
第3章 基础知识 ................................. 35
3.1 场景图 ......................................... 35
3.2 CCNode类层次结构 .................. 38
3.3 CCNode类 .................................. 39
3.3.1 节点的处理方式 ..................... 39
3.3.2 动作的处理方式 ..................... 40
3.3.3 消息调度 ................................. 41
3.4 Director类、场景和层 ............... 44
3.4.1 Director类 ............................... 44
3.4.2 CCScene类 ............................. 46
3.4.3 场景和内存 ............................. 47
3.4.4 推进和弹出场景 ..................... 48
3.4.5 CCTransitionScene类 ............. 49
3.4.6 CCLayer类 ............................. 51
3.5 CCSprite类 ................................. 56
iOS 5 cocos2d 游戏开发实战(第 2 版)
X
3.5.1 定位点揭秘 ............................. 57
3.5.2 纹理大小 ................................. 57
3.6 CCLabelTTF类 .......................... 58
3.7 菜单 ............................................. 59
3.8 动作 ............................................. 61
3.8.1 间隔动作 ................................. 62
3.8.2 瞬时动作 ................................. 67
3.9 cocos2d中的单件类 ................... 69
3.10 cocos2d测试案例 ..................... 71
3.11 本章小结 ................................... 71
第4章 你的第一个游戏 ...................... 73
4.1 按部就班地创建项目 ................. 73
4.2 添加Player Sprite ....................... 78
4.3 加速计输入 ................................. 80
4.4 首次测试运行 ............................. 81
4.5 玩家速度 ..................................... 81
4.6 添加障碍物 ................................. 84
4.7 碰撞检测 ..................................... 91
4.8 标签和位图字体 ......................... 92
4.8.1 添加得分标签 ......................... 92
4.8.2 CCLabelBMFont简介 ............ 93
4.8.3 使用Glyph Designer创建 位图字体 ................................. 94
4.9 播放音频 ..................................... 95
4.10 移植到iPad ............................... 97
4.10.1 单个通用的应用程序还是 两个单独的应用程序 ......... 97
4.10.2 使用Xcode 3移植 到iPad ................................. 98
4.10.3 使用Xcode 4移植 到iPad ................................. 99
4.11 本章小结 ................................. 100
第5章 游戏组件 ...............................101
5.1 使用多个场景 ........................... 101
5.1.1 添加多个场景 ...................... 101
5.1.2 正在加载下一段，请做好 准备 ...................................... 104
5.2 使用多个层 ............................... 106
5.2.1 实现关卡的最佳方法 .......... 112
5.2.2 CCLayerColor ...................... 113
5.3 从CCSprite类继承游戏 对象 ........................................... 114
5.4 使用CCSprite复合游戏 对象 ........................................... 115
5.5 奇妙的CCNode派生类 ........... 119
5.5.1 CCProgressTimer ................. 119
5.5.2 CCParallaxNode ................... 120
5.5.3 CCRibbon ............................. 122
5.5.4 CCMotionStreak ................... 124
5.6 本章小结 ................................... 125
第6章 深入了解精灵 ........................ 127
6.1 Retina显示屏幕 ........................ 127
6.2 CCSpriteBatchNode .................. 129
6.2.1 何时使用 CCSpriteBatchNode ............. 131
6.2.2 示例项目 .............................. 131
6.3 精灵动画初体验 ....................... 137
6.4 用于创建动画的辅助类别 ....... 139
6.5 使用纹理图册 ........................... 141
6.5.1 何为纹理图册 ...................... 141
6.5.2 TexturePacker工具介绍 ...... 141
6.5.3 为TexturePacker准备项目 ... 142
6.5.4 使用TexturePacker创建纹理 图册 ...................................... 143
6.5.5 在cocos2d中使用纹理 图册 ...................................... 146
6.5.6 改进CCAnimation辅助 类别 ...................................... 147
6.5.7 将所有图像都放入一个 纹理图册中 .......................... 149
6.6 本章小结 ................................... 150
第7章 滚屏射击游戏(上) .................. 151
7.1 高级视差滚屏 ........................... 151
7.1.1 将背景创建为条纹 .............. 151
7.1.2 在代码中重建背景 .............. 153
7.1.3 移动ParallaxBackground ..... 155
目 录
XI
7.1.4 视差滚动的速度因素 .......... 156
7.1.5 实现背景的无限滚动 .......... 158
7.1.6 消除闪烁 .............................. 160
7.1.7 重复贴图 .............................. 161
7.2 虚拟手柄 ................................... 162
7.2.1 引入SneakyInput ................. 162
7.2.2 集成SneakyInput ................. 163
7.2.3 触摸按钮产生射击 .............. 165
7.2.4 为按钮添加皮肤 .................. 166
7.2.5 控制动作 .............................. 169
7.2.6 数字控制 .............................. 171
7.3 本章小结 ................................... 172
第8章 滚屏射击游戏(下) ..................173
8.1 添加BulletCache类 ................. 173
8.2 关于敌人 ................................... 177
8.3 Entity类的继承体系 ................ 178
8.3.1 EnemyEntity类 .................... 179
8.3.2 EnemyCache类 .................... 183
8.3.3 组件类 .................................. 186
8.4 射击开火 ................................... 189
8.5 大怪物的生命条 ....................... 190
8.6 本章小结 ................................... 193
第9章 粒子效果 ............................... 195
9.1 粒子效果实例 ........................... 195
9.2 用复杂方法创建粒子效果 ....... 198
9.2.1 继承CCParticleSystem： 点粒子还是方形粒子 .......... 199
9.2.2 CCParticleSystem属性 ........ 202
9.3 Particle Designer ....................... 210
9.3.1 Particle Designer介绍 ......... 210
9.3.2 使用Particle Designer生成 的粒子效果 .......................... 213
9.3.3 分享粒子效果 ...................... 214
9.4 在射击游戏中添加粒子 效果 ........................................... 216
9.5 本章小结 ................................... 217
第10章 瓦片地图 .............................219
10.1 瓦片地图简介 ......................... 219
10.2 使用TexturePacker处理 图像 ......................................... 222
10.3 Tiled(Qt)地图编辑器 .............. 223
10.3.1 创建新的瓦片地图 .......... 223
10.3.2 设计瓦片地图 .................. 224
10.4 在cocos2d中使用直角瓦片 地图 ......................................... 227
10.4.1 定位被触摸的瓦片 .......... 230
10.4.2 提高性能和可读性 .......... 232
10.4.3 使用对象层 ...................... 233
10.4.4 绘制对象层矩形 .............. 234
10.4.5 滚动瓦片地图 .................. 237
10.5 本章小结 ................................. 238
第11章 斜角瓦片地图 ...................... 241
11.1 设计斜角瓦片地图图形 ......... 242
11.2 使用Tiled编辑斜角瓦片 地图 ......................................... 244
11.2.1 新建斜角瓦片地图 .......... 245
11.2.2 创建新的斜角瓦片集 ...... 246
11.2.3 设计斜角瓦片地图的基本 规则 .................................. 246
11.3 将斜角瓦片地图应用到游戏 编程中 ..................................... 248
11.3.1 在cocos2d中加载斜角 瓦片地图 .......................... 248
11.3.2 在cocos2d中设置斜角 瓦片地图 .......................... 248
11.3.3 定位斜角瓦片 .................. 250
11.3.4 滚动斜角瓦片地图 .......... 252
11.3.5 斜角瓦片地图的边界 问题 .................................. 253
11.3.6 增加可移动的玩家角色 ... 255
11.4 在游戏中加入更多内容 ......... 262
11.5 本章小结 ................................. 263
第12章 物理引擎 ............................. 265
12.1 物理引擎的基本概念 ............. 265
12.2 物理引擎的局限性 ................. 266
12.3 Box2D与Chipmunk ............... 266
iOS 5 cocos2d 游戏开发实战(第 2 版)
XII
12.4 Box2D ..................................... 267
12.4.1 Box2D眼中的世界 ......... 268
12.4.2 把移动范围限制在 屏幕内 .............................. 269
12.4.3 转换点 .............................. 271
12.4.4 在Box2D世界中添加 盒子 .................................. 272
12.4.5 连接精灵和刚体 .............. 273
12.4.6 碰撞检测 .......................... 275
12.4.7 连接刚体 .......................... 277
12.5 Chipmunk ................................ 278
12.5.1 面向对象的Chipmunk .... 278
12.5.2 构建Chipmunk物理 空间 .................................. 279
12.5.3 将盒子添加到物理 空间中 .............................. 280
12.5.4 添加小盒子 ...................... 281
12.5.5 更新盒子的精灵 .............. 283
12.5.6 Chipmunk碰撞实践 ........ 284
12.5.7 Chipmunk中的关节 ........ 285
12.6 本章小结 ................................. 287
第13章 弹球游戏 .............................289
13.1 图形：凸多边形和逆时针 方式......................................... 289
13.2 使用PhysicsEditor .................. 290
13.2.1 定义发射器形状 .............. 292
13.2.2 定义弹球桌形状 .............. 293
13.2.3 定义挡板 .......................... 296
13.2.4 定义反弹器和球 .............. 297
13.2.5 保存并发布 ...................... 297
13.3 编写弹球游戏 ......................... 298
13.3.1 BodyNode类 ................... 298
13.3.2 创建弹球桌 ...................... 302
13.3.3 Box2D调试绘制 ............. 307
13.3.4 添加球 .............................. 308
13.3.5 使球动起来 ...................... 310
13.3.6 添加反弹器 ...................... 313
13.3.7 发射器 .............................. 314
13.3.8 挡板 .................................. 323
13.4 本章小结 ................................. 326
第14章 Game Center ...................... 329
14.1 激活Game Center ................... 329
14.1.1 在iTunes Connect中创建 应用程序 .......................... 330
14.1.2 建立排行榜和成就 .......... 330
14.1.3 创建cocos2d Xcode 项目 .................................. 331
14.1.4 配置Xcode项目.............. 331
14.1.5 小结 .................................. 334
14.2 Game Kit编程 ........................ 335
14.2.1 GameKitHelper委托 ....... 335
14.2.2 检查Game Center是否 可用 .................................. 336
14.2.3 验证本地玩家身份 .......... 337
14.2.4 block对象 ........................ 340
14.2.5 接收本地玩家的好友 列表 .................................. 341
14.2.6 排行榜 .............................. 343
14.2.7 成就 .................................. 348
14.2.8 联机 .................................. 352
14.2.9 收发数据 .......................... 356
14.3 本章小结 ................................. 360
第15章 cocos2d与UIKit视图 ......... 361
15.1 Cocoa Touch是什么 ............... 361
15.2 同时使用Cocoa Touch和 cocos2d.................................... 362
15.2.1 为什么将Cocoa Touch和 cocos2d混合在一起 ........ 362
15.2.2 混合Cocoa Touch和 cocos2d的局限性 ............ 362
15.2.3 Cocoa Touch和cocos2d 的区别 .............................. 363
15.3 注意：你在cocos2d中的第 一个UIKit视图 ..................... 364
15.4 在cocos2d应用程序中嵌入 UIKit视图 .............................. 367
目 录
XIII
15.4.1 在cocos2d视图的前面添加 视图 .................................. 367
15.4.2 使用UIImage改变 UITextField的皮肤 ......... 369
15.4.3 在cocos2d视图的后面 添加视图 .......................... 371
15.4.4 添加利用Interface Builder 的视图设计 ...................... 377
15.4.5 自动旋转中的方向问题 .. 380
15.5 在Cocoa Touch应用程序中 嵌入cocos2d视图 ................. 384
15.5.1 用cocos2d创建基于视图 的应用程序项目 .............. 384
15.5.2 设计混合应用程序的用户 界面 .................................. 387
15.5.3 启动cocos2d引擎 ........... 388
15.5.4 停止和重启cocos2d 引擎 .................................. 390
15.5.5 改变场景 .......................... 392
15.6 本章小结 ................................. 393
第16章 Kobold2D入门 ....................395
16.1 使用Kobold2D的好处 .......... 396
16.1.1 准备使用Kobold2D ........ 396
16.1.2 免费使用Kobold2D ........ 396
16.1.3 Kobold2D升级简单 ........ 396
16.1.4 提供类库服务 .................. 397
16.1.5 Kobold2D的跨平台性 .... 397
16.2 Kobold2D的工作空间 ........... 398
16.3 Hello-Kobold2D模板项目 ..... 399
16.3.1 HelloWorld项目文件 ...... 399
16.3.2 Kobold2D 如何启动应用 程序 .................................. 401
16.3.3 用iSimulate运行 HelloWorld ....................... 408
16.4 使用KKInput编写的针对 Mac的DoodleDrop ............... 409
16.5 使用cocos3d进入3D 世界......................................... 411
16.5.1 AppDelegate类的变化 .... 411
16.5.2 cocos3d世界 .................... 415
16.5.3 将cocos3d添加到现有 的Kobold2D项目中 ....... 417
16.6 本章小结 ................................. 418
第17章 番外篇 ................................. 419
17.1 其他学习和工作资源 ............. 419
17.1.1 寻求帮助 .......................... 420
17.1.2 从源码项目中受益 .......... 422
17.1.3 Cocos2D Podcast .............. 427
17.1.4 工具介绍 .......................... 427
17.1.5 cocos2d参考应用程序 .... 428
17.2 游戏行业 ................................. 430
17.2.1 与出版商合作 .................. 431
17.2.2 寻找自由职业者 .............. 432
17.2.3 寻找免费的艺术品 和音频 .............................. 432
17.2.4 寻找相关工具 .................. 433
17.2.5 市场 .................................. 433
17.2.6 使用更多技术获得更多 收入 .................................. 436
17.3 本章小结 ................................. 440
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS 5 cocos2d 游戏开发实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Objective-C基础教程
目 　 　录
第1章 　启程　　1
1.1 　预备知识　　1
1.2 　历史　　1
1.3 　内容简介　　2
1.4 　准备工作　　3
1.5 　小结　　5
第2章 　对C的扩展　　6
2.1 　最简单的Objective-C程序　　6
2.2 　解构Hello Objective-C程序　　10
2.2.1 　#import语句　　10
2.2.2 　框架　　11
2.2.3 　NSLog()和@"字符串"　　11
2.3 　布尔类型　　14
2.4 　小结　　18
第3章 　面向对象编程的基础知识　　19
3.1 　间接　　19
3.1.1 　变量与间接　　20
3.1.2 　使用文件名的间接　　22
3.2 　在面向对象编程中使用间接　　28
3.2.1 　过程式编程　　28
3.2.2 　实现面向对象编程　　34
3.3 　有关术语　　37
3.4 　Objective-C语言中的OOP　　38
3.4.1 　@interface部分　　38
3.4.2 　@implementation部分　　41
3.4.3 　实例化对象　　43
3.4.4 　扩展Shapes-Object程序　　45
3.5 　小结　　47
第4章 　继承　　48
4.1 　为何使用继承　　48
4.2 　继承的语法格式　　51
4.3 　继承的工作机制　　53
4.3.1 　方法调度　　54
4.3.2 　实例变量　　55
4.4 　重写方法　　57
4.5 　小结　　59
第5章 　复合　　61
5.1 　什么是复合　　61
5.2 　自定义NSLog()　　62
5.3 　存取方法　　65
5.3.1 　设置engine属性的存取方法　　66
5.3.2 　设置tires属性的存取方法　　67
5.3.3 　Car类代码的其他变化　　68
5.4 　扩展CarParts程序　　69
5.5 　复合还是继承　　70
5.6 　小结　　71
第6章 　源文件组织　　72
6.1 　拆分接口和实现　　72
6.2 　拆分Car程序　　75
6.3 　使用跨文件依赖关系　　77
6.3.1 　重新编译须知　　78
6.3.2 　让汽车跑一会儿　　79
6.3.3 　导入和继承　　81
6.4 　小结　　82
第7章 　深入了解Xcode　　84
7.1 　窗口布局一览　　84
7.2 　改变公司名称　　85
7.3 　使用编辑器的技巧　　86
7.4 　在Xcode的帮助下编写代码　　87
7.4.1 　首行缩进（美观排版）　　88
7.4.2 　代码自动完成　　88
7.4.3 　括号配对　　90
7.4.4 　批量编辑　　91
7.4.5 　代码导航　　94
7.4.6 　集中精力　　96
7.4.7 　使用导航条　　97
7.4.8 　获取信息　　98
7.5 　调试　　101
7.5.1 　暴力测试　　101
7.5.2 　Xcode的调试器　　101
7.5.3 　精巧的调试符号　　101
7.5.4 　开始调试　　101
7.5.5 　检查程序　　104
7.6 　备忘表　　105
7.7 　小结　　106
第8章 　Foundation Kit介绍　　107
8.1 　稳固的Foundation　　107
8.2 　使用项目样本代码　　107
8.3 　一些有用的数据类型　　108
8.3.1 　范围　　108
8.3.2 　几何数据类型　　109
8.4 　字符串　　109
8.4.1 　创建字符串　　110
8.4.2 　类方法　　110
8.4.3 　关于大小　　111
8.4.4 　字符串比较　　111
8.4.5 　不区分大小写的比较　　112
8.4.6 　字符串内是否还包含别的字符串　　113
8.4.7 　可变性　　114
8.5 　集合大家族　　115
8.5.1 　NSArray　　115
8.5.2 　可变数组　　119
8.5.3 　枚举　　120
8.5.4 　快速枚举　　121
8.5.5 　NSDictionary　　122
8.5.6 　请不要乱来　　124
8.6 　其他数值　　124
8.6.1 　NSNumber　　124
8.6.2 　NSValue　　125
8.6.3 　NSNull　　126
8.7 　示例：查找文件　　126
8.8 　小结　　130
第9章 　内存管理　　131
9.1 　对象生命周期　　131
9.1.1 　引用计数　　132
9.1.2 　对象所有权　　134
9.1.3 　访问方法中的保留和释放　　134
9.1.4 　自动释放　　136
9.1.5 　所有对象放入池中　　136
9.1.6 　自动释放池的销毁时间　　137
9.1.7 　自动释放池的工作流程　　138
9.2 　Cocoa的内存管理规则　　140
9.2.1 　临时对象　　141
9.2.2 　拥有对象　　141
9.2.3 　垃圾回收　　143
9.2.4 　自动引用计数　　144
9.3 　异常　　154
9.3.1 　与异常有关的关键字　　155
9.3.2 　捕捉不同类型的异常　　156
9.3.3 　抛出异常　　156
9.3.4 　异常也需要内存管理　　157
9.3.5 　异常和自动释放池　　158
9.4 　小结　　159
第10章 　对象初始化　　160
10.1 　分配对象　　160
10.1.1 　初始化对象　　160
10.1.2 　编写初始化方法　　161
10.1.3 　初始化时要做些什么　　162
10.2 　便利初始化函数　　163
10.3 　更多部件改进　　164
10.3.1 　Tire类的初始化　　165
10.3.2 　更新main()函数　　166
10.3.3 　清理Car类　　168
10.4 　Car类的内存清理（垃圾回收方式和ARC方式）　　171
10.5 　指定初始化函数　　172
10.5.1 　子类化问题　　173
10.5.2 　Tire类的初始化函数改进 后的版本　　175
10.5.3 　添加AllWeatherRadial类 的初始化函数　　175
10.6 　初始化函数规则　　176
10.7 　小结　　176
第11章 　属性　　177
11.1 　使用属性值　　177
11.1.1 　简化接口代码　　178
11.1.2 　简化实现代码　　179
11.1.3 　点表达式的妙用　　182
11.2 　属性扩展　　183
11.2.1 　名称的使用　　186
11.2.2 　只读属性　　188
11.2.3 　自己动手有时更好　　189
11.2.4 　特性不是万能的　　189
11.3 　小结　　189
第12章 　类别　　191
12.1 　创建类别　　191
12.1.1 　开始创建类别　　192
12.1.2 　@interface部分　　193
12.1.3 　@implementation部分　　194
12.1.4 　类别的缺陷　　195
12.1.5 　类别的优势　　196
12.1.6 　类扩展　　196
12.2 　利用类别分散实现代码　　197
12.3 　通过类别创建前向引用　　200
12.4 　非正式协议和委托类别　　201
12.4.1 　ITunesFinder项目　　202
12.4.2 　委托和类别　　204
12.4.3 　响应选择器　　205
12.4.4 　选择器的其他应用　　206
12.5 　小结　　206
第13章 　协议　　207
13.1 　正式协议　　207
13.1.1 　声明协议　　207
13.1.2 　采用协议　　208
13.1.3 　实现协议　　209
13.2 　复制　　209
13.2.1 　复制Engine　　210
13.2.2 　复制Tire　　211
13.2.3 　复制Car　　212
13.2.4 　协议和数据类型　　215
13.3 　Objective-C 2.0的新特性　　215
13.4 　委托方法　　216
13.5 　小结　　218
第14章 　代码块和并发性　　219
14.1 　代码块　　219
14.1.1 　代码块和函数指针　　219
14.1.2 　Objective-C变量　　223
14.2 　并发性　　224
14.2.1 　同步　　224
14.2.2 　队列也要内存管理　　227
14.2.3 　操作队列　　229
14.3 　小结　　231
第15章 　AppKit简介　　232
15.1 　构建项目　　232
15.2 　创建委托文件的@interface部分　　234
15.3 　Interface Builder　　235
15.4 　设计用户界面　　236
15.5 　创建连接　　239
15.5.1 　连接输出口（IBOutlet）　　239
15.5.2 　连接操作（IBAction）　　240
15.6 　应用程序委托的实现　　242
15.7 　小结　　244
第16章 　UIKit简介　　245
16.1 　视图控制器　　249
16.2 　小结　　263
第17章 　文件加载与保存　　264
17.1 　属性列表　　264
17.1.1 　NSDate　　264
17.1.2 　NSData　　265
17.1.3 　写入和读取属性列表　　266
17.1.4 　修改对象类型　　267
17.2 　编码对象　　268
17.3 　小结　　273
第18章 　键/值编码　　274
18.1 　入门项目　　274
18.2 　KVC简介　　276
18.3 　键路径　　277
18.4 　整体操作　　278
18.4.1 　休息一下　　279
18.4.2 　快速运算　　282
18.5 　批处理　　284
18.6 　nil仍然可用　　285
18.7 　处理未定义的键　　286
18.8 　小结　　287
第19章 　使用静态分析器　　288
19.1 　静态工作　　288
19.1.1 　开始分析　　288
19.1.2 　协助分析器　　292
19.1.3 　了解更多　　293
19.2 　小结　　295
第20章 　NSPredicate　　296
20.1 　创建谓词　　296
20.2 　计算谓词　　297
20.3 　数组过滤器　　298
20.4 　格式说明符　　299
20.5 　运算符　　300
20.5.1 　比较和逻辑运算符　　300
20.5.2 　数组运算符　　301
20.6 　有SELF就足够了　　302
20.7 　字符串运算符　　304
20.8 　LIKE运算符　　304
20.9 　结语　　305
附录 　从其他语言转向Objective-C　　306
索引　　314
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Objective-C基础教程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>OS X与iOS内核编程
目 录
第1章　操作系统原理　　1
1.1 　操作系统的作用　　3
1.2 　进程管理　　3
1.3 　进程地址空间　　4
1.4 　操作系统服务　　5
1.5 　虚拟内存　　6
1.6 　调度　　8
1.7 　硬件和驱动程序　　9
1.8 　小结　　11
第2章　Mac OS X和iOS　　12
2.1 　XNU内核　　17
2.1.1 　内核扩展（KEXT）　　18
2.1.2 　Mach　　18
2.1.3 　BSD层　　27
2.1.4 　I/O Kit　　29
2.2 　小结　　31
第3章　Xcode和内核开发环境　　32
3.1 　语言的选择：C++　　32
3.2 　Xcode　　33
3.3 　“Hello World”内核扩展　　34
3.4 　加载和卸载内核扩展　　37
3.5 　使用控制台查看输出　　39
3.6 　小结　　40
第4章　I/O Kit框架　　41
4.1 　I/O Kit 模型　　41
4.2 　对象关系　　43
4.3 　Info.plist文件　　43
4.3.1 　驱动程序类　　46
4.3.2 　IORegistryExplorer　　50
4.4 　内核库：libkern　　52
4.4.1 　OSObject　　52
4.4.2 　容器类　　54
4.5 　小结　　56
第5章　应用程序与驱动程序的交互　　57
5.1 　I/O Kit框架　　58
5.2 　查找驱动程序　　58
5.3 　观察设备移除　　63
5.4 　修改设备驱动程序属性　　65
5.5 　基于状态的交互　　68
5.6 　驱动程序的通知　　79
5.7 　小结　　83
第6章　内存管理　　84
6.1 　内存类型　　84
6.1.1 　CPU物理地址　　85
6.1.2 　总线物理地址　　85
6.1.3 　用户和内核虚拟地址　　85
6.1.4 　内存顺序：大端序和小端序　　86
6.1.5 　32位和64位内存寻址　　87
6.2 　内存分配　　88
6.2.1 　底层分配机制　　89
6.2.2 　Mach内存域分配器　　89
6.2.3 　kalloc家族　　89
6.2.4 　BSD中的内存分配　　90
6.2.5 　I/O Kit内存分配　　91
6.2.6 　使用C++的new操作符分配内存　　92
6.3 　内存描述符　　92
6.3.1 　IOBufferMemoryDescriptor　　94
6.3.2 　其他的内存描述符　　95
6.4 　映射内存　　95
6.4.1 　用户空间任务到内核空间的内存映射　　95
6.4.2 　IOMemoryMap类　　97
6.4.3 　内核到用户空间任务的内存映射　　98
6.4.4 　将内存映射到指定的用户空间任务　　99
6.4.5 　物理地址映射　　100
6.5 　小结　　101
第7章　同步和线程　　102
7.1 　同步原语　　102
7.2 　原子操作　　104
7.3 　锁　　107
7.3.1 　自旋锁　　107
7.3.2 　互斥　　109
7.3.3 　条件变量　　110
7.3.4 　读/写互斥　　112
7.4 　同步异步事件：工作环　　113
7.4.1 　IOCommandGate　　115
7.4.2 　定时器　　116
7.4.3 　释放工作环　　117
7.5 　内核线程　　118
7.6 　小结　　119
第8章　USB　　120
8.1 　USB体系结构　　120
8.1.1 　USB传输速度　　122
8.1.2 　主机控制器　　123
8.1.3 　USB协议　　124
8.1.4 　端点　　126
8.1.5 　USB描述符　　126
8.1.6 　USB设备类　　127
8.2 　I/O Kit USB支持　　128
8.2.1 　USB设备和驱动程序处理　　129
8.2.2 　加载USB驱动程序　　130
8.2.3 　USB Prober　　132
8.2.4 　驱动程序示例：USB大容量存储器设备驱动程序　　133
8.2.5 　驱动程序启动　　138
8.2.6 　处理设备移除　　138
8.2.7 　枚举接口　　139
8.2.8 　枚举端点　　140
8.2.9 　执行设备请求　　141
8.2.10 　执行批量端点和中断端点的I/O　　144
8.3 　小结　　147
第9章　PCI Express和Thunderbolt　　148
9.1 　I/O Kit中的PCI　　150
9.1.1 　匹配和加载驱动程序　　151
9.1.2 　驱动程序示例：一个简单的PCI驱动程序　　154
9.1.3 　访问配置空间寄存器　　156
9.1.4 　PCI I/O内存区　　158
9.1.5 　处理设备移除　　161
9.2 　中断　　162
9.2.1 　I/O Kit中断机制　　163
9.2.2 　注册接收中断　　164
9.2.3 　启用MSI　　166
9.2.4 　处理主中断　　166
9.2.5 　处理二级中断　　168
9.3 　直接内存访问　　168
9.3.1 　将物理地址转换为总线地址　　170
9.3.2 　为DMA准备内存　　171
9.3.3 　建立分散/聚集列表　　172
9.3.4 　IODMACommand类　　173
9.4 　小结　　175
第10章　电源管理　　177
10.1 　响应电源状态改变　　179
10.2 　请求电源状态改变　　184
10.3 　处理设备空闲　　185
10.4 　观察设备电源状态改变　　186
10.5 　汇总　　187
10.6 　小结　　191
第11章　串行端口驱动程序　　192
11.1 　Mac OS X串行端口体系结构概览　　192
11.2 　串行端口驱动程序　　194
11.3 　实现IOSerialDriverSync类　　197
11.4 　串行端口状态　　200
11.5 　串行端口事件　　204
11.6 　串行数据传输　　207
11.7 　从用户空间访问串行端口　　211
11.8 　小结　　214
第12章　音频驱动程序　　215
12.1 　数字音频和音频设备简介　　215
12.2 　Core Audio　　217
12.3 　I/O Kit音频支持　　218
12.4 　实现一个音频驱动程序　　219
12.4.1 　驱动程序和硬件初始化　　221
12.4.2 　注册音频控制　　223
12.4.3 　实现音频引擎　　225
12.4.4 　 I/O引擎初始化　　226
12.4.5 　其他的音频引擎功能　　235
12.5 　小结　　236
第13章　网络　　238
13.1 　网络内核扩展　　242
13.1.1 　内核控制KPI　　242
13.1.2 　套接字过滤器　　242
13.1.3 　因特网协议过滤器　　250
13.1.4 　接口过滤器　　255
13.2 　调试和测试网络扩展　　258
13.3 　I/O Kit中的网络　　259
13.3.1 　构建简单以太网控制器驱动程序　　261
13.3.2 　MyEthernetDriver设计　　262
13.3.3 　驱动程序初始化和启动　　264
13.3.4 　介质和状态选择　　266
13.3.5 　配置设备硬件地址　　268
13.3.6 　启用和禁用设备　　268
13.3.7 　传输网络分组　　270
13.3.8 　接收分组　　271
13.3.9 　对MyEthernetDriver进行测试　　274
13.4 　小结　　276
第14章　存储系统　　277
14.1 　传输层驱动程序　　278
14.2 　IOBlockStorageDevice接口　　279
14.3 　构建RAM磁盘设备　　282
14.4 　分区规则　　292
14.4.1 　实现一个示例分区规则　　293
14.4.2 　媒介内容线索属性　　300
14.5 　媒介过滤器驱动程序　　300
14.5.1 　加密过滤器规则示例　　302
14.5.2 　创建一个自定义GUID分区表　　306
14.6 　小结　　308
第15章　用户空间USB驱动程序　　310
15.1 　背景　　310
15.2 　IOUSBLib框架　　311
15.3 　处理异步操作　　315
15.4 　IOUSBDeviceInterface类　　316
15.5 　IOUSBInterfaceInterface类　　320
15.5.1 　属性方法　　321
15.5.2 　端点数据传输方法　　322
15.5.3 　低延迟同步传输　　328
15.6 　小结　　330
第16章　调试　　331
16.1 　常见的问题类型　　331
16.2 　内核恐慌　　332
16.3 　调试机制　　333
16.3.1 　启动时修复崩溃　　335
16.3.2 　采用IOLog()追踪　　335
16.3.3 　输出栈跟踪　　336
16.3.4 　通过FireWire远程跟踪　　337
16.3.5 　远程内核核心转储　　339
16.3.6 　KDB　　340
16.3.7 　通过以太网或FireWire使用GDB远程调试　　340
16.3.8 　实时调试运行的内核　　344
16.3.9 　使用虚拟机调试　　344
16.3.10 　在内核中使用GDB调试　　344
16.3.11 　使用Activity Monitor诊断挂起进程　　354
16.3.12 　查找内存和资源泄漏　　355
16.4 　小结　　356
第17章　高级内核编程　　357
17.1 　内核中的SSE和浮点　　357
17.2 　多功能驱动程序　　358
17.3 　编写I/O Kit族　　358
17.4 　内核控制KPI　　359
17.4.1 　内核控制注册　　361
17.4.2 　客户端连接　　362
17.4.3 　获取和设置选项　　363
17.4.4 　从用户空间访问内核控制　　364
17.5 　内核中的进程处理　　365
17.6 　加载资源　　366
17.7 　KEXT资源之外的内容　　367
17.8 　内核驱动程序通知　　368
17.9 　小结　　371
第18章　部署　　372
18.1 　安装和加载内核扩展　　372
18.2 　加载首选项和设置　　374
18.3 　内核扩展的版本管理　　375
18.4 　测试和品质保证　　375
18.5 　打包KEXT和软件　　376
18.5.1 　构建Hello World内核扩展安装包　　378
18.5.2 　将内容添加至安装包　　378
18.5.3 　配置安装包　　379
18.5.4 　构建安装包　　382
18.5.5 　卸载安装包　　383
18.6 　小结　　383
索引　　385

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>OS X与iOS内核编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>MonoTouch应用开发实践指南
译者序
序
前言
第1章　Hello，MonoTouch / 1
1.1　搭建开发环境 / 2
1.1.1　安装iOS SDK和苹果开发工具 / 2
1.1.2　安装MonoTouch / 5
1.2　创建MonoTouch应用程序 / 9
1.2.1　创建用户界面 / 9
1.2.2　添加outlet / 10
1.3　在设备上进行开发 / 15
1.4　使用MonoTouch调试器 / 20
1.5　小结 / 21
第2章　iOS SDK与MonoTouch / 22
2.1　iOS SDK概述 / 23
2.2　通过示例将Object-C与MonoTouch进行对比 / 24
2.2.1　从Xcode开始编写应用程序 / 25
2.2.2　在MonoTouch中实现相同的功能 / 29
2.2.3　AppDelegate实现的比较 / 30
2.2.4　通过Xcode实现UIActionSheet / 33
2.2.5　在MonoTouch中实现UIActionSheet / 35
2.3　MonoTouch的工作原理 / 38
2.4　小结 / 41
第3章　视图和视图控制器 / 42
3.1　构建MonoTouch MVC应用程序 / 43
3.2　在IB中使用视图和控制器 / 44
3.3　为视图控制器及其视图添加功能 / 50
3.4　使用多个视图和控制器 / 53
3.5　实现自定义UIView / 57
3.6　小结 / 61
第4章　常用的iOS类 / 62
4.1　用户界面视图和控件 / 63
4.1.1　UISegmentedControl / 63
4.1.2　UISlider / 66
4.1.3　UISwitch / 68
4.1.4　UIPageControl和UIScrollView / 69
4.1.5　UIActivityIndicatorView / 71
4.1.6　UIProgressView / 73
4.1.7　UIImageView / 74
4.1.8　UIWebView / 75
4.1.9　ADBannerView / 77
4.2　设备功能 / 80
4.2.1　MFMailComposeViewController / 80
4.2.2　MPMediaPickerController和MPMusicPlayerController / 81
4.2.3　地址簿 / 84
4.2.4　UIImagePickerController / 87
4.3　小结 / 91
第5章　表格和导航 / 92
5.1　UITableView和UITableViewController的概述 / 93
5.1.1　表格有什么用 / 93
5.1.2　在UITableView中显示数据 / 94
5.1.3　UITableViewCell部件与样式 / 99
5.1.4　使用表格和导航 / 102
5.2　其他的UITableView自定义功能 / 115
5.2.1　自定义表格及其单元格 / 115
5.2.2　增加多个区域 / 119
5.2.3　MonoTouch.Dialog / 123
5.3　小结 / 124
第6章　图形和动画 / 125
6.1　核心图形 / 126
6.1.1　核心图形基础 / 126
6.1.2　绘制图像 / 131
6.1.3　绘制PDF / 134
6.2　动画 / 143
6.2.1　UIView动画 / 143
6.2.2　核心动画 / 147
6.3　小结 / 155
第7章　核心定位 / 156
7.1　核心定位概述 / 157
7.2　标准定位服务 / 158
7.3　检索方向变更 / 166
7.4　显著位置变更服务 / 168
7.5　区域监测 / 170
7.6　后台定位 / 172
7.7　小结 / 175
第8章　MapKit / 176
8.1　MapKit概述 / 177
8.2　添加标注 / 181
8.3　地图叠加 / 188
8.4　小结 / 193
第9章　连接Web服务 / 194
9.1　连接基于REST的Web服务 / 195
9.1.1　通过HTTP连接 / 195
9.1.2　解析XML结果 / 197
9.1.3　解析JSON结果 / 200
9.2　使用基于SOAP的Web服务 / 201
9.2.1　使用.NET 2.0客户端代理 / 201
9.2.2　MonoTouch下的WCF / 203
9.3　使用CocoaTouch的HTTP类 / 204
9.4　小结 / 206
第10章　联网 / 207
10.1　GameKit联网功能 / 208
10.1.1　GameKit联网核心类 / 208
10.1.2　使用GKPeerPickerController / 216
10.1.3　GameKit语音聊天 / 219
10.2　Bonjour / 223
10.3　小结 / 231
第11章　保存应用程序的数据 / 232
11.1　记事本示例应用程序 / 233
11.2　SQLite / 238
11.3　序列化 / 243
11.4　Settings Bundle和NSUserDefaults / 245
11.5　小结 / 252
第12章　iPad开发 / 253
12.1　移植到iPad / 254
12.1.1　在iPhone应用程序使用像素倍增技术 / 254
12.1.2　通用应用程序 / 255
12.2　基于iPad的设计 / 258
12.2.1　UISplitViewController / 258
12.2.2　UIPopoverController / 267
12.3　小结 / 270
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>MonoTouch应用开发实践指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS应用开发攻略
目 　录
第1章 　UI攻略　　1
攻略1 　添加基本的启动画面切换　　1
攻略2 　让启动画面的切换更有吸引力　　7
攻略3 　为定制的通知视图添加动画　　12
攻略4 　创建可重用的开关按钮　　15
攻略5 　形成带彩色纹理的圆角视图　　19
攻略6 　组装可重用的网页视图　　22
攻略7 　定制滑动条与进度条　　25
攻略8 　打造自己的手势识别器　　27
攻略9 　创建独立的警告视图　　30
攻略10 　表示带属性字符串的标签　　35
攻略11 　滚动无止境的专辑封面墙　　39
攻略12 　从专辑封面墙播放乐曲　　42
攻略13 　享受自动滚动的文本视图　　47
攻略14 　创建个性化的数值控件　　50
第2章 　表格与滚动视图攻略　　56
攻略15 　简化表格单元格的生成　　56
攻略16 　在Nib中使用智能表格单元格　　59
攻略17 　定位单元格子视图　　63
攻略18 　组织复杂的表格视图　　65
攻略19 　生成双色表格视图　　70
攻略20 　给表格视图添加边框阴影　　73
攻略21 　在滚动视图中使用静态内容　　79
攻略22 　创建旋转翻页的滚动视图　　82
第3章 　绘图攻略　　86
攻略23 　绘制梯度填充的贝塞尔轨迹　　87
攻略24 　创建多个动画的动态图像　　91
攻略25 　创建组合与变换的视图　　93
攻略26 　对梯度图层实施动画　　95
攻略27 　重新打造阴影　　98
攻略28 　显示带动画的视图　　100
攻略29 　构造简单的发射器　　102
攻略30 　翻卷页面显示新视图　　106
第4章 　网络攻略　　111
攻略31 　改进网络活动指示器　　111
攻略32 　简化Web服务的连接　　113
攻略33 　格式化简单的HTTP　　POST　　116
攻略34 　通过HTTP上传文件　　120
第5章 　运行库攻略　　127
攻略35 　使用新式的Objective-C类设计　　127
攻略36 　生成智能调试输出　　130
攻略37 　设计智能化的User　　Defaults访问　　133
攻略38 　扫描与遍历视图层次结构　　136
攻略39 　初始化基本数据模型　　142
攻略40 　在范畴中存储数据　　146
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS应用开发攻略
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS 6开发进阶与实战
第1章　踏上新征程
1．1　本书讲什么
1．2　你需要具备的基础
1．3　启程前的准备
1．4　本书主要内容
第2章　Core Data剖析
2．1　Core Data简史
2．2　创建Core Data应用程序
2．3　Core Data概念和术语
2．4　数据模型
2．5　Managed Object
2．6　键-值(Key-Value)编程
2．7　Managed Object上下文
2．8　小结
第3章　完美的开端：添加、显示和删除数据
3．1　建立Xcode项目
3．1．1　添加场景
3．1．2　场景和导引线
3．1．3　Storyboard文档大纲
3．2　应用程序架构
3．3　设计视图控制器界面
3．4　创建HeroListController
3．4．1　创建Connection和Outlets
3．4．2　导航栏按钮
3．4．3　标签栏User Defaults
3．5　设计数据模型
3．5．1　添加一个实体
3．5．2　编辑新实体
3．5．3　为Hero实体添加属性
3．6　声明Fetched Results Controller
3．7　实现Fetched Results Controller
3．8　Fetched Results Controller的Delegate方法
3．9　一切就绪
3．9．1　错误处理
3．9．2　实现Edit和Add
3．9．3　为表格视图数据源和Delegate编写代码
3．9．4　表格视图排序
3．9．5　运行时载入Fetch Request
3．10　跑起来吧
3．11　完成，但还要继续
第4章　隐藏在详情视图中的“怪兽”
4．1　视图实现方案选择
4．2　创建详情视图控制器
4．2．1　接通导引线
4．2．2　HeroDetailController
4．3　详情视图中的挑战
4．4　使用Property列表控制表格结构
4．5　使用Property列表搭建表格结构模型
4．6　通过Property列表定义表格视图
4．7　解析Property列表
4．8　显示详情
4．9　编辑详情
4．10　详情视图的编辑模式
4．11　创建自定义UITableViewCell子类
4．12　保存修改
4．13　专门的输入视图
4．13．1　DatePicker SuperDBEditCell子类
4．13．2　使用DatePicker SuperDBEditCell子类
4．13．3　实现一个选择器
4．14　“怪兽”的终结
第5章　为变化做准备：迁移和版本控制
5．1　关于数据模型
5．1．1　数据模型会被编译
5．1．2　数据模型可以拥有多个版本
5．1．3　创建新版数据模型
5．1．4　当前数据模型版本
5．1．5　数据模型版本标识符
5．2　迁移
5．2．1　轻量VS标准
5．2．2　标准迁移
5．3　为轻量迁移设置应用
5．4　让我们迁移吧
第6章　自定义管理对象
6．1　更新数据模型
6．1．1　添加Age属性
6．1．2　添加“最喜爱颜色”属性
6．1．3　为name属性指定最小长度
6．2　创建Hero类
6．2．1　修改Hero的Header
6．2．2　设置默认值
6．3　校验
6．3．1　单属性校验
6．3．2　nil vs． NULL
6．3．3　多属性校验
6．4　虚拟Accessor
6．5　添加校验反馈
6．6　更新详情视图
6．7　重构SuperDBEditCell
6．7．1　Xcode重构选项
6．7．2　搬移代码
6．7．3　可编辑Property
6．8　创建Color表格视图单元格
6．8．1　自定义颜色编辑器
6．8．2　自定义Color表格视图单元格
6．9　清除选择器
6．10　还有一件事
6．11　前路更多彩
第7章　关系、属性获取和表达式
7．1　扩展你的应用程序：“超能力”和“英雄榜”
7．2　关系
7．2．1　对一关系
7．2．2　对多关系
7．2．3　逆关系
7．2．4　Fetched Properties
7．2．5　在数据模型编辑器中创建关系和Fetched Properties
7．2．6　删除规则
7．3　表达式和融合
7．4　添加“超能力”实体
7．5　创建Power关系
7．6　创建逆关系
7．7　创建olderHeros Fetched Property
7．8　创建youngerHeros Fetched Property
7．9　创建sameSexHeroes Fetched Property
7．10　创建oppositeSexHeroes Fetched Property
7．11　向Hero类添加关系和Fetched Properties
7．12　修改详情视图
7．12．1　重新思考配置
7．12．2　封装和信息隐藏
7．12．3　数据驱动配置
7．12．4　添加“超能力”
7．13　重构详情视图控制器
7．13．1　重命名Configuration类
7．13．2　重构详情控制器
7．13．3　重构Hero实例变量
7．13．4　再抽象一点
7．13．5　新的HeroDetailController
7．14　“超能力”视图控制器
7．15　Fetch Properties
7．16　和Core说再见
第8章　在云端
8．1　使用iCloud进行数据存储
8．2　iCloud基础
8．3　iCloud Backup
8．4　在应用程序中启用iCloud
8．5　键-值数据存储
8．6　文档存储
8．6．1　UIDocument
8．6．2　支持iCloud的UIDocument
8．6．3　NSMetadataQuery
8．7　支持iCloud的Core Data
8．8　升级SuperDB
8．8．1　Entitlements
8．8．2　创建启用iCloud的Provisioning Profile
8．8．3　修改Persistent Store
8．8．4　修改Managed Object上下文
8．8．5　收到DataChanged通知时更新UI
8．8．6　测试数据存储
8．8．7　“脚踏实地”
第9章　使用Game Kit进行蓝牙点对点通信
9．1　Game Center
9．2　点对点连接
9．3　In Game Voice
9．4　本章的应用程序
9．5　网络通信模型
9．5．1　客户端-服务器模型
9．5．2　点对点模型
9．5．3　客户端-服务器与点对点混合
9．6　Game Kit中的Session
9．6．1　创建Session
9．6．2　查找并连接到其他Session
9．6．3　监听其他的Session
9．6．4　向连接点发送数据
9．6．5　信息打包发送
9．6．6　从连接点接收数据
9．6．7　关闭连接
9．7　Peer Picker
9．7．1　创建Peer Picker
9．7．2　处理连接
9．7．3　创建Session
9．8　创建项目
9．8．1　关闭待机计时器
9．8．2　导入Game Kit框架
9．8．3　设计界面
9．8．4　定义应用程序常量
9．8．5　设计棋盘
9．8．6　创建数据包对象
9．8．7　搭建视图控制器头
9．9　内测
9．10　游戏开始
第10章　Map Kit
10．1　本章的应用程序
10．2　概览和术语
10．3　地图视图
10．3．1　地图类型
10．3．2　用户所在位置
10．3．3　坐标区域
10．3．4　设定显示区域
10．3．5　地图视图Deleate
10．4　标注
10．4．1　标注对象
10．4．2　标注视图
10．4．3　添加和移除标注
10．4．4　选中标注
10．4．5　提供带有标注视图的地图视图
10．5　地理编码和反向地理编码
10．6　搭建MapMe应用程序
10．6．1　链接Map Kit和Core Location框架
10．6．2　构建界面
10．6．3　实现视图控制器接口
10．6．4　实现标注对象类
10．6．5　实现MapMe的ViewController
10．7　升级啦，年轻人
第11章　消息：邮件、短信和社交媒体
11．1　本章的应用程序
11．2　MessageUI框架
11．2．1　创建邮件编写视图控制器
11．2．2　填写标题行
11．2．3　填写收件人
11．2．4　设置邮件正文
11．2．5　添加附件
11．2．6　显示邮件编写视图
11．2．7　邮件编写视图控制器的Delegate方法
11．2．8　消息编写视图控制器
11．3　Social框架
11．3．1　SLComposeViewController
11．3．2　SLRequest
11．4　活动视图控制器
11．5　构建MessageImage应用程序
11．5．1　构建用户界面
11．5．2　拍照
11．5．3　调用照相机
11．5．4　选择消息发送器
11．6　寄往：下一章
第12章　媒体库访问和播放
12．1　MediaPlayer框架
12．1．1　媒体项
12．1．2　媒体项集合
12．1．3　媒体查询和媒体属性Predicate
12．1．4　媒体选择控制器
12．1．5　音乐播放控制器
12．2　简单的音乐播放器
12．2．1　构建SimplePlayer应用程序
12．2．2　构造用户界面
12．2．3　声明Outlet和Action
12．3　MPMoviePlayerController
12．4　MPMediaPlayer
12．5　AVFoundation
12．6　AVMediaPlayer
12．7　小心！前方有洪水
第13章　加把锁：iOS安全
13．1　安全性考量
13．2　安全性技术
13．2．1　加密
13．2．2　散列
13．2．3　证书和签名
13．2．4　身份
13．3　iOS安全性
13．3．1　随机Keychain
13．3．2　证书、密钥和受信服务
13．4　Keychain Viewer
13．4．1　创建Certificate Authority
13．4．2　创建Keychain应用
13．5　安全不打烊
第14章　保持界面响应
14．1　探索并发问题
14．2　创建Stalled应用程序
14．2．1　设计界面
14．2．2　实现Stalled视图控制器
14．3　Timer
14．3．1　创建Timer
14．3．2　停止Timer
14．3．3　Timer的局限性
14．4　使用Timer修改Stalled应用程序
14．4．1　创建Batch对象
14．4．2　修改nib
14．4．3　修改视图控制器头文件
14．4．4　修改视图控制器的实现文件
14．5　操作队列和并发
14．5．1　线程
14．5．2　操作
14．5．3　操作队列
14．6　使用操作队列优化Stalled应用程序
14．6．1　创建SquareRootApplication
14．6．2　自定义ProgressCell
14．6．3　调整用户界面
14．6．4　修改ViewController．h
14．6．5　修改ViewController．m
14．7　排队站好
第15章　单元测试、调试和相关工具
15．1　单元测试
15．2　调试
15．2．1　断点
15．2．2　Debug Navigator
15．2．3　Debug Area
15．2．4　尝试Debug Control
15．2．5　Breakpoint Navigator和Symbolic断点
15．2．6　条件断点
15．2．7　断点行为
15．2．8　静态分析
15．2．9　有关调试的补充
15．3　使用Instruments进行性能分析
15．4　胜利的终点线
第16章　路在脚下
16．1　逃离困境
16．2　苹果提供的文档
16．3　邮件列表
16．4　论坛
16．5　网站
16．6　博客
16．7　如果一切都失败了……
16．8　再见
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS 6开发进阶与实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS应用逆向工程 第2版
推荐序一
推荐序二
第2版序
第1版序
前言
第一部分　概　念　篇
第1章　iOS逆向工程简介  3
1.1　iOS逆向工程的要求  3
1.2　iOS应用逆向工程的作用  4
1.2.1　安全相关的iOS逆向工程  5
1.2.2　开发相关的iOS逆向工程  6
1.3　iOS应用逆向工程的过程  7
1.3.1　系统分析  7
1.3.2　代码分析  8
1.4　iOS应用逆向工程的工具  8
1.4.1　监测工具  9
1.4.2　反汇编工具  9
1.4.3　调试工具  10
1.4.4　开发工具  11
1.5　小结  11
第2章　越狱iOS平台简介  12
2.1　iOS系统结构  12
2.1.1　iOS目录结构简介  13
2.1.2　iOS文件权限简介  16
2.2　iOS二进制文件类型  17
2.2.1　Application  17
2.2.2　Dynamic Library  20
2.2.3　Daemon  20
2.3　小结  22
第二部分　工　具　篇
第3章　OSX工具集  25
3.1　class-dump  25
3.2　Theos  27
3.2.1　Theos简介  27
3.2.2　安装Theos  28
3.2.3　Theos用法介绍  30
3.2.4　Theos开发tweak示例  51
3.3　Reveal  53
3.4　IDA  57
3.4.1　IDA简介  57
3.4.2　IDA使用说明  58
3.4.3　IDA分析示例  68
3.5　iFunBox  71
3.6　dyld_decache  72
3.7　小结  73
第4章　iOS工具集  74
4.1　CydiaSubstrate  74
4.1.1　MobileHooker  74
4.1.2　MobileLoader  84
4.1.3　Safe mode  84
4.2　Cycript  85
4.3　LLDB与debugserver  89
4.3.1　LLDB简介  89
4.3.2　debugserver简介  90
4.3.3　配置debugserver  90
4.3.4　用debugserver启动或附加进程  91
4.3.5　LLDB的使用说明  92
4.3.6　LLDB使用小提示  107
4.4　dumpdecrypted  107
4.5　OpenSSH  111
4.6　usbmuxd  112
4.7　iFile  113
4.8　MTerminal  114
4.9　syslogd to /var/log/syslog  115
4.10　小结  115
第三部分　理　论　篇
第5章　Objective-C相关的iOS逆向理论基础  119
5.1　tweak在Objective-C中的工作方式  119
5.2　tweak 的编写套路  121
5.2.1　寻找灵感   121
5.2.2　定位目标文件  123
5.2.3　定位目标函数   127
5.2.4　测试函数功能   129
5.2.5　解析函数参数  130
5.2.6　class-dump的局限性  133
5.3　实例演示  133
5.3.1　得到灵感  134
5.3.2　定位文件  135
5.3.3　定位函数   143
5.3.4　测试函数   145
5.3.5　编写实例代码   145
5.4　小结  147
第6章　ARM汇编相关的iOS逆向理论基础  148
6.1　ARM汇编基础  148
6.1.1　基本概念  149
6.1.2　ARM/THUMB指令解读  152
6.1.3　ARM调用规则  159
6.2　tweak的编写套路  161
6.2.1　从现象切入App，找出UI函数  162
6.2.2　以UI函数为起点，寻找目标函数  173
6.3　LLDB的使用技巧  203
6.3.1　寻找函数调用者  203
6.3.2　更改进程执行逻辑  208
6.4　小结  211
第四部分　实　战　篇
第7章　实战1：Characount for Notes 8  215
7.1　备忘录  215
7.2　搭建tweak原型  216
7.2.1　定位Notes的可执行文件  217
7.2.2　class-dump出MobileNotes的头文件  218
7.2.3　用Cycript找到阅览界面及其controller  218
7.2.4　从NoteDisplayController找到当前note对象  220
7.2.5　找到实时监测note内容变化的方法  223
7.3　逆向结果整理  227
7.4　编写tweak  228
7.4.1　用Theos新建tweak工程“CharacountForNotes8”  228
7.4.2　构造CharacountForNotes8.h  229
7.4.3　编辑Tweak.xm  229
7.4.4　编辑Makefile及control  230
7.4.5　测试  230
7.5　小结  233
第8章　实战2：自动将指定电子邮件标记为已读  234
8.1　电子邮件  234
8.2　搭建tweak原型  235
8.2.1　定位Mail的可执行文件并class-dump它  237
8.2.2　把头文件导入Xcode  238
8.2.3　用Cycript找到Mailboxes界面的controller  239
8.2.4　用Reveal和Cycript找到All Inboxes界面的delegate  240
8.2.5　在MailboxContentViewController中定位“刷新完成”的响应函数  242
8.2.6　从MessageMegaMall中拿到所有邮件  246
8.2.7　从MFLibraryMessage中提取发件人地址，用MessageMegaMall标记
已读  248
8.3　逆向结果整理  254
8.4　编写tweak  255
8.4.1　用Theos新建tweak工程“iOSREMailMarker”  255
8.4.2　构造iOSREMailMarker.h  255
8.4.3　编辑Tweak.xm  256
8.4.4　编辑Makefile及control  257
8.4.5　测试  258
8.5　小结  259
第9章　实战3：保存与分享微信小视频  260
9.1　微信  260
9.2　搭建tweak原型  261
9.2.1　观察小视频播放窗口，寻找逆向切入点  261
9.2.2　class-dump获取头文件  262
9.2.3　把头文件导入Xcode  263
9.2.4　用Reveal找到小视频播放窗口  264
9.2.5　找到长按手势响应函数  265
9.2.6　用Cycript定位小视频的controller  270
9.2.7　从WCTimeLineViewController找到小视频对象  272
9.2.8　从WCContentItemViewTemplateNewSight中提取WCDataItem对象  276
9.2.9　从WCDataItem中提取目标信息  278
9.3　逆向结果整理  288
9.4　编写tweak  289
9.4.1　用Theos新建tweak工程“iOSREWCVideoDownloader”  289
9.4.2　构造iOSREWCVideoDownloader.h  289
9.4.3　编辑Tweak.xm  290
9.4.4　编辑Makefile及control  292
9.4.5　测试  293
9.5　彩蛋放送  294
9.5.1　从UIMenuItem切入，找到小视频对象  294
9.5.2　微信历史版本头文件个数变迁  295
9.6　小结  298
第10章　实战4：检测与发送iMessage  299
10.1　iMessage  299
10.2　检测一个号码或邮箱地址是否支持iMessage  299
10.2.1　观察MobileSMS界面元素的变化，寻找逆向切入点  299
10.2.2　用Cycript找出placeholder  302
10.2.3　用IDA和LLDB找出placeholderText的一重数据源  308
10.2.4　用IDA和LLDB找出placeholderText的N重数据源  311
10.2.5　还原原始数据源生成placeholderText的过程  340
10.3　发送iMessage  341
10.3.1　从MobileSMS界面元素寻找逆向切入点  341
10.3.2　用Cycript找出“Send”按钮的响应函数  342
10.3.3　在响应函数中寻找可疑的发送操作  344
10.4　逆向结果整理  369
10.5　编写tweak  370
10.5.1　用Theos新建tweak工程“iOSREMadridMessenger”  370
10.5.2　构造iOSREMadridMessenger.h  371
10.5.3　编辑Tweak.xm  372
10.5.4　编辑Makefile及control  372
10.5.5　用Cycript测试  373
10.6　小结  373
越狱开发一览  375
沙箱逃脱  380
编写tweak——新时代的hacking  382
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS应用逆向工程 第2版
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>品味移动设计
目 　录
第 1 章　做好准备了吗——了解移动平台和移动应用　　1
1.1 　成为用户体验设计师　　1
1.1.1 　UI、ID、UE和GUI，这些都是什么　　2
1.1.2 　了解成功的用户体验设计案例　　3
1.2 　移动设备的三大主流平台　　7
1.2.1 　iOS 平台　　7
1.2.2 　Android 平台　　10
1.2.3 　Windows Phone 平台　　12
1.3 　用户体验设计的基本流程　　13
1.3.1 　创意和原型草图阶段　　14
1.3.2 　原型的中保真阶段　　 16
1.3.3 　高保真原型及设计的完成阶段　　17
第 2 章　一切从服务用户开始——市场定位和产品目标　　19
2.1 　是移动产品，不是电脑软件　　19
2.1.1 　不为外表华丽　　20
2.1.2 　不为功能强大　　21
2.1.3 　别让它“大而全”　　23
2.2 　做有价值的应用　　26
2.2.1 　它只是成千上万个应用中的一个　　26
2.2.2 　是前无古人还是出类拔萃　　29
2.2.3 　如何才能独树一帜　　30
2.3 　了解应用的使用者　　32
2.3.1 　用户细分　　32
2.3.2 　用户研究　　34
2.3.3 　用户测试　　36
第 3 章　讨论与初步设计——完成原型的草图设计 37
3.1 　会玩“头脑风暴”吗　　37
3.1.1 　一项既有益又有趣的游戏　　38
3.1.2 　有明确的目标　　39
3.1.3 　有合理的分工　　41
3.1.4 　安排好合理的环境和议程　　45
3.1.5 　畅所欲言和遵守规则　　49
3.1.6 　挑选出最有前途的想法　　50
3.2 　把想法和思路画成草图　　51
3.2.1 　手绘的原型草图　　51
3.2.2 　潦草但要认真　　53
3.2.3 　原型工具和原型设计软件　　57
3.3 　检验和分享你的思考结果　　60
3.3.1 　有连贯，有情节，画出应用的故事板　　61
3.3.2 　利用原型草图进行可用性测试　　62
3.3.3 　几种其他类型的草图　　63
第 4 章　移动应用的交互特点　　 67
4.1 　了解移动设备　　67
4.1.1 　移动设备的种类　　68
4.1.2 　移动设备的规格和像素尺寸　　69
4.1.3 　移动设备的使用方法　　70
4.2 　移动设备的人体工程学特点　　74
4.2.1 　了解你的拇指　　74
4.2.2 　单手操作还是双手操作　　77
4.2.3 　善待你的指尖　　80
4.3 　移动设备的视觉体验　　84
4.3.1 　视觉的运行轨迹　　85
4.3.2 　优化视觉结构　　86
4.3.3 　图片与文字的视觉关系　　90
4.4 　屏幕的旋转　　92
第 5 章 　应用程序导航　　 95
5.1 　iOS 应用的导航模式　　95
5.1.1 　平铺导航　　96
5.1.2 　iOS 的标签导航　　99
5.1.3 　iOS 的树形结构导航　　101
5.1.4 　模态视图　　104
5.1.5 　iOS 的组合导航　　105
5.2 　Android 应用导航模式　　106
5.2.1 　Android 的标签导航　　107
5.2.2 　Android 的树形结构导航　　109
5.2.3 　手机与平板电脑导航的不同　　110
5.2.4 　Android 的组合导航　　111
5.3 　Windows Phone 应用导航模式　　112
5.3.1 　Windows Phone 的标签导航　　112
5.3.2 　面板区域应用程序中心导航　　114
5.3.3 　主面板菜单应用程序中心导航　　114
第 6 章　标准控件与设计规范　　 116
6.1 　文本输入输出　　116
6.1.1 　文本输出控件　　116
6.1.2 　文本输入控件　　118
6.2 　按钮　　119
6.2.1 　iOS 平台按钮　　119
6.2.2 　Android 平台按钮　　120
6.2.3 　Windows Phone 平台按钮　　121
6.3 　各种“栏”　　122
6.3.1 　状态栏　　122
6.3.2 　iOS 中的工具栏、导航栏和标签栏　　123
6.3.3 　Android 中的菜单栏和操作栏　　125
6.3.4 　Windows Phone 中的菜单栏　　128
6.3.5 　搜索栏　　129
6.4 　滑块控件　　133
6.4.1 　iOS 平台滑块控件　　133
6.4.2 　Android 平台滑块控件　　134
6.4.3 　Windows Phone 平台滑块控件　　135
6.5 　选择控件　　136
6.5.1 　二选一　　136
6.5.2 　单选控件　　137
6.5.3 　多选控件　　138
6.5.4 　拾取器　　138
6.6 　对话框　　143
6.6.1 　iOS 平台中的对话框　　143
6.6.2 　Android 平台中的对话框　　 145
6.6.3 　Windows Phone 平台中的对话框　　147
6.7 　活动指示器和进度条　　148
6.7.1 　iOS 平台中的活动指示器和进度条　　148
6.7.2 　Android 平台的活动指示器和进度条　　150
6.7.3 　Windows Phone 平台中的活动指示器和进度条　　150
6.8 　列表和网格　　152
6.8.1 　iOS 平台列表和网格　　152
6.8.2 　Android 平台列表和网格　　154
6.8.3 　Windows Phone 平台中的列表和网格　　155
6.9 　原型的可用性测试　　157
第 7 章　视觉体验的个性化　　 159
7.1 　做有个性的应用　　159
7.1.1 　从细节替换入手　　160
7.1.2 　添加装饰、纹理和特效　　162
7.1.3 　纯个性化的用户体验设计　　164
7.2 　图形元素与构成理念　　165
7.2.1 　图形元素是界面视觉印象的根本　　166
7.2.2 　页面布局与构成理念　　169
7.2.3 　处理好图形元素和页面布局间的关系　　175
7.2.4 　同一款应用在不同的平台和设备上　　177
7.3 　应用界面的色彩因素　　179
7.3.1 　了解色彩的规律　　179
7.3.2 　善于把握色调　　181
7.3.3 　丰富的色彩，严谨的搭配　　183
7.3.4 　色彩的倾向性　　187
7.4 　严谨地把握文字　　188
7.4.1 　选择合适的字体　　189
7.4.2 　推敲文字的四个要素　　191
7.4.3 　处理好字群的位置关系　　193
7.5 　界面风格和特效　　194
7.5.1 　拟物化风格　　194
7.5.2 　扁平化设计　　195
7.5.3 　手绘体风格　　196
第 8 章　做好应用的图标设计　　 199
8.1 　图标设计的原则　　199
8.1.1 　图标设计的“识别性”原则　　201
8.1.2 　图标设计的“一致性”原则　　201
8.1.3 　图标设计的“兼容性”原则　　203
8.2 　启动图标　　206
8.2.1 　建立完美的第一印象　　206
8.2.2 　三大平台启动图标设计规范　　210
8.2.3 　几个简单的启动图标设计思路　　214
8.3 　工具栏图标　　217
8.3.1 　是符号，不是图案　　217
8.3.2 　三大平台工具栏图标的规范和含义　　218
8.3.3 　几个有效的简化图像的方法　　219
8.4 　启动画面和引导帮助　　221
8.4.1 　启动画面　　221
8.4.2 　引导帮助　　223
第 9 章　用户体验设计项目实战——“价格线”　　226
9.1 　项目概述及工作计划　　226
9.1.1 　项目描述　　226
9.1.2 　工作计划和流程　　227
9.2 　项目的准备阶段　　228
9.2.1 　市场定位及产品分析　　228
9.2.2 　项目的用户需求分析　　229
9.3 　项目的创作及草图阶段　　230
9.4 　项目的中保真原型及可用性测试　　232
9.4.1 　项目的中保真原型　　232
9.4.2 　原型的可用性测试及调整　　233
9.5 　完善界面的个性化设计　　235
9.5.1 　确定风格并收集素材　　235
9.5.2 　隐喻元素的添加及个性化调整　　236
9.6 　应用图标和启动画面设计　　237
9.6.1 　应用图标的创意和设计　　237
9.6.2 　应用的启动画面设计　　239
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>品味移动设计
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iPhone游戏开发实践指南
对本书的赞誉
译者序
前言
第1章　游戏设计1
1.1　游戏的开始2
1.2　主导思想3
1.2.1　适合iPhone的游戏3
1.2.2　故事情节4
1.2.3　名字的内涵4
1.2.4　游戏的目标5
1.3　游戏的元素5
1.3.1　时间6
1.3.2　生命6
1.3.3　健康值6
1.3.4　物品7
1.3.5　羊皮碎片7
1.3.6　门8
1.3.7　武器8
1.3.8　实体8
1.3.9　玩家9
1.4　小结9
第2章　术语、技术和工具10
2.1　术语10
2.1.1　精灵11
2.1.2　精灵表12
2.1.3　动画14
2.1.4　点阵字15
2.1.5　贴图地图16
2.1.6　粒子系统16
2.2　碰撞检测18
2.2.1　人工智能18
2.2.2　游戏循环19
2.3　技术21
2.3.1　Objective-C21
2.3.2　Cocoa Touch21
2.3.3　OpenGL ES22
2.3.4　OpenAL24
2.4　工具25
2.5　小结30
第3章　开始探索旅程32
3.1　在Xcode中创建项目32
3.2　程序的运行34
3.3　准备就绪34
3.4　程序代理35
3.4.1　查看头文件36
3.4.2　查看实现文件37
3.5　EAGLView40
3.5.1　EAGLView.h40
3.5.2　EAGLView.m41
3.6　ES1Renderer48
3.6.1　审查ES1Renderer.h48
3.6.2　查看ES1Renderer.m49
3.6.3　创建帧缓冲区和渲染缓冲区50
3.6.4　render方法52
3.6.5　定义颜色值54
3.6.6　定位55
3.7　OpenGL的工作原理56
3.7.1　对模型应用变换56
3.7.2　在屏幕上渲染57
3.8　小结59
第4章　游戏循环61
4.1　时间控制就是一切61
4.2　冲突检测62
4.3　游戏循环62
4.3.1　基于帧的循环体63
4.3.2　基于时间的固定间隔循环体64
4.4　开始65
4.4.1　EAGLView类的修改65
4.4.2　EAGLView.m文件的修改66
4.4.3　ES1Renderer类68
4.4.4　配置视图端口71
4.5　游戏场景和游戏控制器72
4.5.1　创建游戏控制器72
4.5.2　GameController类72
4.5.3　创建单态类74
4.5.4　GameController.m文件内部74
4.5.5　AbstractScene类76
4.5.6　GameScene类77
4.6　小结79
4.7　练习79
第5章　图像渲染81
5.1　渲染入门81
5.2　四边形的渲染82
5.3　纹理映射84
5.4　交错顶点数组86
5.5　结构体88
5.6　图像渲染类89
5.6.1　Texture2D类89
5.6.2　TextureManager类96
5.6.3　ImageRenderManager类98
5.7　Image类104
5.7.1　初始化105
5.7.2　获取子图像107
5.7.3　复制图像108
5.7.4　渲染图像108
5.7.5　getter和setter111
5.8　小结112
5.9　练习112
第6章　精灵表113
6.1　精灵表简介113
6.1.1　简单精灵表113
6.1.2　复杂精灵表114
6.2　使用Zwoptex116
6.3　SpriteSheet类117
6.3.1　初始化117
6.3.2　提取精灵120
6.4　PackedSpriteSheet类121
6.4.1　初始化121
6.4.2　解析控制文件122
6.4.3　提取精灵123
6.5　小结123
6.6　练习124
第7章　动画125
7.1　动画篇的项目125
7.2　动画简介125
7.2.1　帧126
7.2.2　状态126
7.2.3　类型126
7.2.4　方向126
7.2.5　跳动帧126
7.3　Animation类127
7.3.1　初始化127
7.3.2　添加帧128
7.3.3　更新动画128
7.3.4　渲染动画130
7.3.5　完成131
7.4　小结133
7.5　练习133
第8章　点阵字134
8.1　点阵字项目134
8.2　点阵字简介134
8.3　创建点阵字精灵表135
8.4　BitmapFont类137
8.5　与C语言的关系138
8.5.1　初始化方法138
8.5.2　解析控制文件139
8.6　渲染文本142
8.6.1　渲染合理的文本143
8.6.2　文本宽度和高度145
8.6.3　重新分配146
8.7　小结146
8.8　练习147
第9章　贴图地图148
9.1　贴图地图入门148
9.2　贴图地图简介148
9.3　贴图地图编辑器150
9.3.1　贴图调色板151
9.3.2　图层151
9.4　创建贴图地图152
9.4.1　新建一个贴图集合152
9.4.2　创建地图图层153
9.4.3　创建对象图层154
9.4.4　绘制地图154
9.4.5　放置对象154
9.5　认识Tiled配置文件155
9.5.1　map元素155
9.5.2　tileset元素155
9.5.3　layer元素156
9.5.4　objectgroup元素157
9.6　地图类157
9.6.1　Layer类158
9.6.2　TileSet类162
9.6.3　TiledMap类163
9.6.4　初始化165
9.6.5　解析地图文件166
9.6.6　创建图层图像174
9.6.7　图层渲染175
9.6.8　获取贴图信息177
9.7　小结178
9.8　练习178
第10章　粒子发射器179
10.1　粒子发射项目179
10.1.1　粒子系统简介180
10.1.2　粒子系统参数181
10.2　粒子的生命周期182
10.2.1 　粒子的诞生182
10.2.2　粒子生存183
10.2.3　粒子消亡183
10.2.4　粒子重生184
10.3　粒子发射器的配置184
10.4　粒子发射器类185
10.4.1　TBXMLParticleAdditions类185
10.4.2　ParticleEmitter类187
10.5　开始游戏198
10.6　小结199
第11章　声音200
11.1　声音项目200
11.2　iPhone的声音简介200
11.2.1　音频会话200
11.2.2　播放音乐202
11.2.3　播放音效202
11.2.4　创建音效204
11.2.5　立体声与单声道205
11.3　声音管理器类205
11.4　音效管理219
11.4.1　载入音效220
11.4.2　播放音效223
11.4.3　停止播放音效225
11.4.4　设置音效和监听器位置226
11.5　处理声音播放干扰227
11.6　小结228
第12章　用户输入230
12.1　用户输入项目230
12.2　用户输入简介 231
12.3　处理触控事件232
12.3.1　touchesBegan阶段234
12.3.2　touchesMoved阶段235
12.3.3　touchesEnded阶段236
12.4　处理敲击237
12.5　加速器事件238
12.6　小结240
第13章　游戏界面241
13.1　游戏界面项目241
13.2　OpenGL ES界面242
13.2.1　界面渲染242
13.2.2　按钮边界定义245
13.2.3　点击处理245
13.2.4　可视化边界246
13.2.5　转换处理248
13.2.6　OpenGL ES定向249
13.3　UIKit界面251
13.3.1　创建界面252
13.3.2　界面连接254
13.3.3　UIKit定向257
13.3.4　显示或隐藏UIKit界面259
13.4　小结261
第14章　游戏对象和实体262
14.1　游戏对象和实体项目262
14.2　游戏对象263
14.2.1　AbstractObject类263
14.2.2　EnergyObject类265
14.3　游戏实体272
14.3.1　AbstractEntity类273
14.3.2　人工智能275
14.3.3　Player实体类276
14.4　保存游戏对象或实体284
14.5　小结286
第15章　碰撞检测287
15.1　碰撞检测简介287
15.2　基于帧与基于时间289
15.3　轴对齐边界框289
15.4　检测碰撞290
15.5　碰撞地图291
15.6　实体与地图间的碰撞检测293
15.7　实体与实体间的碰撞检测294
15.8　小结296
第16章　组装起来297
16.1　摄像机297
16.2　保存游戏状态和设置299
16.2.1　保存游戏状态299
16.2.2　载入游戏状态300
16.2.3　保存游戏设置302
16.2.4　载入游戏设置303
16.3　保存高分304
16.3.1　添加分数306
16.3.2　保存高分307
16.3.3　载入高分307
16.4　性能和测试308
16.4.1　使用仪表309
16.4.2　Leaks仪表310
16.4.3　使用OpenGL ES仪表312
16.4.4　用Thumb编译314
16.5　β测试314
16.5.1　多种设备类型315
16.5.2　反馈316
16.6　小结316
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iPhone游戏开发实践指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS编程（第5版）
第1章  第一个简单的iOS应用 1
1.1  创建Xcode项目 2
1.2  模型-视图-控制器 5
1.3  设计Quiz 6
1.4  Interface Builder 7
1.5  创建界面 8
1.6  创建模型对象 21
1.7  编译完成的应用 23
1.8  应用图标 24
1.9  启动画面 26
第2章  Swift语言 27
2.1  Swift的数据类型 27
2.2  使用标准类型 28
2.3  可选 35
2.4  循环和字符串补全 37
2.5  枚举和Switch 39
2.6  查阅Apple的Swift文档 40
第3章  视图与视图层次结构 41
3.1  视图基础 42
3.2  视图层次结构 42
3.3  创建新项目 44
3.4  视图及Frame 45
3.5  自动布局系统 55
3.6  初级练习：更多自动布局练习 64
第4章  文本输入与委托 65
4.1  文本编辑 65
4.2  实现温度转换 73
4.3  委托 76
4.3  初级练习：禁止输入字母 79
第5章  视图控制器 81
5.1  视图控制器的视图 82
5.2  设置初始视图控制器 82
5.3  UITabBarController 85
5.4  加载以及展示视图 90
5.5  与视图控制器及其视图交互 92
5.6  中级练习：夜间模式 93
5.7  深入学习：高清显示 93
第6章  用代码实现视图 95
6.1  使用代码创建视图 96
6.2  代码实现约束 97
6.3  代码实现事件 104
6.4  初级练习：再添加一个Tab 106
6.5  中级练习：显示用户位置 106
6.6  高级练习：显示地图大头针 106
6.7  深入学习：NSAutoresizingMaskLayoutConstraint 106
第7章  本地化 109
7.1  国际化 110
7.2  本地化 120
7.3  初级练习：另外一种本地化 126
7.4  深入学习：NSBundle在国际化中扮演的角色 126
7.5  深入学习：导入以及导出XLIFF 128
第8章  控制动画 129
8.1  基础动画 130
8.2  另一个标签 132
8.3  动画完成 135
8.4  对约束作动画 135
8.5  时间方法 139
8.6  初级练习：spring动画 141
8.7  中级练习：Layout Guides 141
第9章  UITableView与UITableViewController 143
9.1  编写Homepwner应用 144
9.2  UITableViewController 145
9.3  创建Item类 147
9.4  UITableView数据源 149
9.5  UITableViewCells 153
9.6  内容缩进 158
9.7  初级练习：多个分组 159
9.8  中级练习：固定的行 160
9.9  高级练习：自定义UITableView 160
第10章  编辑UITableView 161
10.1  编辑模式 161
10.2  添加行 166
10.3  删除行 168
10.4  移动行 169
10.5  显示提示窗口 170
10.6  设计模式 173
10.7  初级练习：修改删除按钮的标题 174
10.8  中级练习：禁止调整顺序 174
10.9  高级练习：真正地禁止调整顺序 174
第11章  创建UITableViewCell子类 175
11.1  创建ItemCell 176
11.2  添加并关联ItemCell的属性 178
11.3  使用ItemCell 179
11.4  动态计算高度 180
11.5  动态类型 181
11.6  初级练习：UITableViewCell的颜色 184
第12章  UIStackView 185
12.1  使用UIStackView 186
12.2  Segues 194
12.3  绑定内容 195
12.4  传递数据 200
12.5  初级练习：更多的UIStackView 201
第13章  UINavigationController 203
13.1  UINavigationController 204
13.2  使用UINavigationController导航 209
13.3  视图的出现和消失 210
13.4  隐藏键盘 211
13.5  UINavigationBar 215
13.6  初级练习：显示数字键盘 220
13.7  中级练习：自定义UITextField 220
13.8  高级练习：添加更多UIViewController 220
第14章  相机 221
14.1  通过UIImageView对象显示图片 222
14.2  通过UIImagePickerController拍摄照片 226
14.3  创建ImageStore 231
14.4  让UIViewController可以访问ImageStore 232
14.5  创建并使用键 233
14.6  使用ImageStore 235
14.7  初级练习：编辑图片 236
14.8  中级练习：删除图片 237
14.9  高级练习：Camera Overlay 237
14.10  深入学习：导航实现文件 237
第15章  保存、读取与应用状态 241
15.1  固化 242
15.2  应用沙盒 245
15.3  NSKeyedArchiver与NSKeyedUnarchiver 248
15.4  应用状态与状态切换 251
15.5  通过NSData将数据写入文件 254
15.6  错误处理 257
15.7  初级练习：PNG 259
15.8  深入学习：应用状态切换 259
15.9  深入学习：文件系统读/写 261
15.10  深入学习：应用程序包 263
第16章  Size Classes 265
16.1  定制Size Classes 266
16.2  初级练习：垂直排列UITextField和UILabel 272
第17章  触摸事件和UIResponder 273
17.1  触摸事件 274
17.2  创建TouchTracker应用 275
17.3  创建Line结构体 276
17.4  创建DrawView 278
17.5  使用DrawView画图 279
17.6  处理触摸事件并创建线条对象 280
17.7  @IBInspectable 285
17.8  中级练习：颜色 287
17.9  高级练习：圆圈 287
17.10  深入学习：响应对象链 287
17.11  深入学习：UIControl 289
第18章  UIGestureRecognizer与UIMenuController 291
18.1  UIGestureRecognizer子类 292
18.2  使用UITapGestureRecognizer检测点击 292
18.3  多个UIGestureRecognizer 294
18.4  UIMenuController 297
18.5  更多UIGestureRecognizer 299
18.6  深入学习UIGestureRecognizer 304
18.7  中级练习：神奇的线条 305
18.8  高级练习：速度和大小 305
18.9  铂金挑战：颜色 305
18.10  深入学习：UIMenuController与UIResponderStandardEditActions 306
第19章  网络服务 307
19.1  开始Photorama应用 308
19.2  创建URL 309
19.3  发送请求 314
19.4  Photo模型 317
19.5  JSON数据 318
19.6  下载并显示图片数据 326
19.7  主线程 329
19.8  初级练习：打印返回信息 331
19.9  深入学习：HTTP 331
第20章  UICollectionView 333
20.1  显示网格 334
20.2  UICollection数据源 336
20.3  自定义布局 339
20.4  创建自定义的UICollectionViewCell 341
20.5  下载图片数据 345
20.6  查看照片 349
20.7  中级练习：改变Item的尺寸 352
20.8  高级练习：自定义布局 352

第21章  Core Data 353
21.1  对象图 353
21.2  实体 354
21.3  创建Core Data Stack 358
21.4  更新数据 361
21.5  更新数据源 364
21.6  在硬盘上保存图片 367
21.7  初级练习：照片查看次数 368
第22章  Core Data关系 369
22.1  关系 370
22.2  在界面中添加标签 372
22.3  父子NSManagedObjectContext 382
22.4  中级练习：收藏 384
第23章  后记 385
23.1  接下来做什么 385
23.2  关注我们 386
索引 387
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS编程（第5版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Effective Objective-C 2.0
前言
致谢
关于作者
Chapter 1: Accustoming Yourself to Objective-C
Item 1: Familiarize Yourself with Objective-C’s Roots
Item 2: Minimize Importing Headers in Headers
Item 3: Prefer Literal Syntax over the Equivalent Methods
Item 4: Prefer Typed Constants to Preprocessor  #define
Item 5: Use Enumerations for States, Options, and Status Codes
Chapter 2: Objects, Messaging, and the Runtime
Item 6: Understand Properties
Item 7: Access Instance Variables Primarily Directly When
Accessing Them Internally
Item 8: Understand Object Equality
Item 9: Use the Class Cluster Pattern to Hide Implementation Detail
Item 10: Use Associated Objects to Attach Custom Data to Existing Classes
Item 11: Understand the Role of  objc_msgSend
Item 12: Understand Message Forwarding
Item 13: Consider Method Swizzling to Debug Opaque Methods
Item 14: Understand What a Class Object Is
Chapter 3: Interface and API Design
Item 15: Use Prefix Names to Avoid Namespace Clashes
Item 16: Have a Designated Initializer
Item 17: Implement the  description Method
Item 18: Prefer Immutable Objects
Item 19: Use Clear and Consistent Naming
Item 20: Prefix Private Method Names
Item 21: Understand the Objective-C Error Model
Item 22: Understand the  NSCopying Protocol
Chapter 4: Protocols and Categories
Item 23: Use Delegate and Data Source Protocols for Interobject Communication
Item 24: Use Categories to Break Class Implementations into Manageable Segments
Item 25: Always Prefix Category Names on Third-Party Classes
Item 26: Avoid Properties in Categories
Item 27: Use the Class-Continuation Category to Hide Implementation Detail
Item 28: Use a Protocol to Provide Anonymous Objects
Chapter 5: Memory Management
Item 29: Understand Reference Counting
Item 30: Use ARC to Make Reference Counting Easier
Item 31: Release References and Clean Up Observation State Only in  dealloc
Item 32: Beware of Memory Management with Exception-Safe Code
Item 33: Use Weak References to Avoid Retain Cycles
Item 34: Use Autorelease Pool Blocks to Reduce High-Memory Waterline
Item 35: Use Zombies to Help Debug Memory-Management Problems
Item 36: Avoid Using  retainCount
Chapter 6: Blocks and Grand Central Dispatch
Item 37: Understand Blocks
Item 38: Create  typedefs for Common Block Types
Item 39: Use Handler Blocks to Reduce Code Separation
Item 40: Avoid Retain Cycles Introduced by Blocks Referencing the Object Owning Them
Item 41: Prefer Dispatch Queues to Locks for Synchronization
Item 42: Prefer GCD to  performSelector and Friends
Item 43: Know When to Use GCD and When to Use Operation Queues
Item 44: Use Dispatch Groups to Take Advantage of Platform Scaling
Item 45: Use  dispatch_once for Thread-Safe Single-Time Code Execution
Item 46: Avoid  dispatch_get_current_queue
Chapter 7: The System Frameworks
Item 47: Familiarize Yourself with the System Frameworks
Item 48: Prefer Block Enumeration to  for Loops
Item 49: Use Toll-Free Bridging for Collections with Custom Memory-Management Semantics
Item 50: Use  NSCache Instead of  NSDictionary for Caches
Item 51: Keep  initialize and  load Implementations Lean
Item 52: Remember that  NSTimer Retains Its Target
Index
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Effective Objective-C 2.0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>测试驱动的iOS开发
译者序
前言
第1章　软件测试与单元测试简介1
1.1　软件测试的目标1
1.2　软件测试由谁来做2
1.3　何时进行软件测试5
1.4　测试实践举例6
1.5　单元测试的适用范围7
1.6　测试驱动开发对ios开发者的意义10
第2章　测试驱动开发技巧11
2.1　测试先行11
2.2　“失败、成功、重构”三部曲13
2.3　设计易于测试的应用程序15
2.4　更多有关重构的知识16
2.5　不要实现目前用不到的功能17
2.6　在编码前、编码中及编码后进行测试19
第3章　如何写单元测试21
3.1　需求21
3.2　使用已知的输入数据来运行代码22
.3.3　查看运行结果是否符合预期24
3.4　验证结果24
3.5　使测试代码更具可读性26
3.6　将多个测试用例组织起来27
3.7　重构30
3.8　总结32
第4章　测试工具33
4.1　xcode附带的ocunit测试框架33
4.2　ocunit的替代方案43
4.2.1　gtm43
4.2.2　ghunit44
4.2.3　catch45
4.2.4　ocmock46
4.3　持续集成工具49
4.3.1　hudson50
4.3.2　cruisecontrol53
4.4　总结54
第5章　针对ios应用程序的测试驱动开发55
5.1　产品目标55
5.2　用例56
5.3　执行方案58
5.4　开始制作程序59
第6章　数据模型61
6.1　topic类61
6.2　question类67
6.3　person类69
6.4　将question类与其他类关联起来70
6.5　answer类74
第7章　应用程序逻辑79
7.1　执行方案79
7.2　建立question对象80
7.3　用json数据构建question对象93
第8章　网络相关代码103
8.1　nsurlconnection类的设计103
8.2　实现stackoverflowcommunicator类105
8.3　总结115
第9章　视图控制器116
9.1　类结构116
9.2　视图控制器类117
9.3　topictabledatasource类与topictabledelegate类121
9.4　通过已有的视图控制器建立新的控制器对象137
9.5　提问列表的数据源146
9.6　接下来的任务157
第10章　整合所有部件158
10.1　完成应用程序的工作流程158
10.2　显示用户头像172
10.3　收尾与清理176
10.4　发布应用186
第11章　为测试驱动开发进行软件设计187
11.1　针对接口进行设计，而不要针对实现187
11.2　用命令代替查询189
11.3　简洁而专注的类与方法190
11.4　封装191
11.5　使用比重用更好191
11.6　测试并发代码192
11.7　别耍没有必要的小聪明193
11.8　优先选择宽而浅的继承体系194
11.9　综述194
第12章　在既有项目中运用测试驱动开发195
12.1　第一个测试用例是最重要的195
12.2　通过重构使得代码更易于测试196
12.3　编写测试使得代码更易于重构198
12.4　真的需要写这么多测试用例吗199
第13章　测试驱动开发展望201
13.1　使用一系列输入输出值构建测试用例201
13.2　行为驱动开发202
13.3　自动生成测试用例203
13.4　自动生成能够通过测试的代码205
13.5　综述206
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>测试驱动的iOS开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS开发指南 从零基础到App Store上架（第3版）
第一部分　基础篇
第1章 开篇综述　　2
1.1　iOS概述　　2
1.1.1　iOS介绍　　2
1.1.2　iOS 8的新特性　　2
1.2　开发环境及开发工具　　3
1.3　本书中的约定　　4
1.3.1　案例代码约定　　4
1.3.2　图示的约定　　5
1.3.3　方法命名约定　　6
1.3.4　构造器命名约定　　7
第2章　第一个iOS应用程序　　9
2.1　创建HelloWorld工程　　9
2.1.1　创建工程　　9
2.1.2　Xcode中的iOS工程模板　　14
2.1.3　应用剖析　　15
2.2　HelloWorld工程中的故事板文件　　17
2.2.1　故事板的导航特点　　17
2.2.2　故事板中的Scene和Segue　　19
2.3　应用生命周期　　19
2.3.1　非运行状态——应用启动场景　　21
2.3.2　点击Home键——应用退出场景　　22
2.3.3　挂起重新运行场景　　24
2.3.4　内存清除——应用终止场景　　25
2.4　视图生命周期　　25
2.5　设置产品属性　　27
2.5.1　Xcode中的PROJECT和TARGET　　27
2.5.2　设置常用的产品属性　　29
2.6　iOS API简介　　30
2.6.1　API概述　　31
2.6.2　如何使用API帮助　　33
2.7　小结　　36
第3章　UIView与视图　　37
3.1　视图“始祖”——UIView　　37
3.1.1　UIView“家族”　　37
3.1.2　应用界面的构建层次　　39
3.1.3　视图分类　　40
3.2　标签与按钮　　40
3.2.1　标签控件　　41
3.2.2　按钮控件　　42
3.3　动作与输出口　　44
3.4　TextField和TextView　　48
3.4.1　TextField控件　　48
3.4.2　TextView控件　　49
3.4.3　键盘的打开和关闭　　50
3.4.4　关闭和打开键盘的通知　　50
3.4.5　键盘的种类　　51
3.5　开关控件、滑块控件和分段控件　　52
3.5.1　开关控件　　53
3.5.2　滑块控件　　53
3.5.3　分段控件　　54
3.6　网页视图WebView　　54
3.7　等待相关的控件与进度条　　57
3.7.1　活动指示器ActivityIndicatorView　　58
3.7.2　进度条ProgressView　　59
3.8　警告框和操作表　　60
3.8.1　警告框　　60
3.8.2　操作表ActionSheet　　62
3.8.3　使用iOS 8 UIAlertController实现　　63
3.9　工具栏和导航栏　　64
3.9.1　工具栏　　64
3.9.2　导航栏　　67
3.10　小结　　70
第4章　iOS 8多分辨率屏幕适配　　71
4.1 iOS 8屏幕的多样性　　71
4.1.1　iOS 8屏幕介绍　　71
4.1.2　iOS 8的三种分辨率　　72
4.1.3　获得iOS设备屏幕信息　　73
4.2 iOS屏幕布局　　74
4.2.1　iOS中的“栏”　　74
4.2.2　传统布局　　75
4.3　Auto Layout布局　　77
4.3.1　在Interface Builder中管理Auto Layout约束　　77
4.3.2　实例：Auto Layout布局　　78
4.4　Size Class与iOS 8多屏幕适配　　83
4.4.1　在Interface Builder中使用Size Class　　83
4.4.2　Size Class的九宫格　　84
4.4.3　实例：使用Size Class　　85
4.5　在屏幕滚动视图中使用Auto Layout和Size Class　　90
4.5.1　屏幕滚动视图的重要属性　　90
4.5.2　屏幕滚动视图实例　　92
4.6　使用资源目录（asset catalog）管理图片　　97
4.7　小结　　100
第5章　委托协议、数据源协议与高级视图　　101
5.1　视图中的委托协议和数据源协议　　101
5.2　选择器　　101
5.2.1　日期选择器　　101
5.2.2　普通选择器　　103
5.2.3　数据源协议与委托协议　　106
5.3　集合视图　　108
5.3.1　集合视图介绍　　108
5.3.2　实例：奥运会比赛项目　　109
5.3.3　添加集合视图控制器　　110
5.3.4　添加集合视图单元格　　113
5.3.5　数据源协议与委托协议　　116
5.4　小结　　117
第6章　表视图　　118
6.1　概述　　118
6.1.1　表视图的组成　　118
6.1.2　表视图的相关类　　119
6.1.3　表视图分类　　119
6.1.4　单元格的组成和样式　　121
6.1.5　数据源协议与委托协议　　123
6.2　简单表视图　　123
6.2.1　创建简单表视图　　123
6.2.2　自定义单元格　　128
6.2.3　添加搜索栏　　131
6.3　分节表视图　　137
6.3.1　添加索引　　137
6.3.2　分组　　140
6.3.3　静态表与控制界面布局　　141
6.4　修改单元格　　144
6.4.1　删除和插入单元格　　144
6.4.2　移动单元格　　151
6.5　表视图UI设计模式　　153
6.5.1　分页模式　　153
6.5.2　下拉刷新模式　　154
6.5.3　下拉刷新控件　　154
6.6　小结　　157
第7章　视图控制器与导航模式　　158
7.1　概述　　158
7.1.1　视图控制器的种类　　158
7.1.2　导航模式　　158
7.1.3　模态视图　　160
7.2　平铺导航　　166
7.2.1　应用场景　　166
7.2.2　基于分屏导航的实现　　168
7.2.3　基于电子书导航的实现　　173
7.3　标签导航　　178
7.3.1　应用场景　　178
7.3.2　实现　　179
7.4　树形结构导航　　182
7.4.1　应用场景　　182
7.4.2　实现　　183
7.5　组合使用导航模式　　190
7.5.1　应用场景　　190
7.5.2　实现　　191
7.6　小结　　198
第8章　iOS常用设计模式　　199
8.1　单例模式　　199
8.1.1　问题提出　　199
8.1.2　Objective-C实现原理　　199
8.1.3　Swift实现原理　　200
8.1.4　应用案例　　201
8.2　委托模式　　202
8.2.1　问题提出　　202
8.2.2　实现原理　　204
8.2.3　应用案例　　207
8.3　观察者模式　　211
8.3.1　问题提出　　211
8.3.2　实现原理　　211
8.3.3　通知机制和KVO机制　　212
8.4　MVC 模式　　218
8.4.1　MVC模式概述　　218
8.4.2　Cocoa Touch中的MVC模式　　219
8.5　小结　　221
第9章　iPhone与iPad应用开发的差异　　222
9.1　概述　　222
9.1.1　应用场景差异　　222
9.1.2　设计和开发需注意的问题　　222
9.2　iPad专用API　　225
9.2.1　UIPopoverController控制器　　225
9.2.2　UISplitViewController控制器　　229
9.3　小结　　234
第10章　iOS分层架构设计　　235
10.1　低耦合企业级系统架构设计　　235
10.2　iOS分层架构设计　　236
10.2.1　工程与工作空间　　236
10.2.2　静态链接库　　237
10.2.3　框架　　237
10.2.4　10种分层模式　　238
10.3　实例：MyNotes应用　　238
10.4　基于同一工程的分层　　240
10.4.1　采用纯Swift语言实现——PSSS模式　　240
10.4.2　采用纯Objective-C语言实现——POOO模式　　243
10.4.3　采用Swift与Objective-C混合搭配实现——PSOO模式　　247
10.5　基于同一工作空间静态链接库实现的WLSOO模式　　247
10.5.1　使用工作空间　　247
10.5.2　添加数据持久层工程　　248
10.5.3　建立业务逻辑层与数据持久层的依赖关系　　249
10.5.4　建立表示层与业务逻辑层的依赖关系　　251
10.6　基于同一工作空间框架实现的WFSSS模式　　251
10.6.1　创建框架工程　　251
10.6.2　依赖关系建立　　253
10.6.3　代码重构　　254
10.7　基于同一工作空间框架实现的WFOOO模式　　255
10.7.1　设置Public头文件　　255
10.7.2　建立表示层与业务逻辑层的依赖关系　　256
10.7.3　代码重构　　256
10.8　基于同一工作空间框架实现的WFSOO模式　　256
10.8.1　设置Public头文件　　256
10.8.2　建立表示层与业务逻辑层的依赖关系　　257
10.8.3　代码重构　　257
10.9　基于同一工作空间框架实现的WFOSS模式　　258
10.9.1　设置Public头文件　　258
10.9.2　代码重构　　258
10.10　小结　　258
第11章　数据持久化　　259
11.1　概述　　259
11.1.1　沙箱目录　　259
11.1.2　持久化方式　　260
11.2　属性列表　　260
11.3　对象归档　　264
11.4　使用SQLite数据库　　268
11.4.1　SQLite数据类型　　268
11.4.2　创建数据库　　269
11.4.3　查询数据　　271
11.4.4　修改数据　　273
11.5　Core Data　　276
11.5.1　ORM　　276
11.5.2　Core Data堆栈　　276
11.5.3　建模和生成实体　　280
11.5.4　采用Core Data分层架构设计　　283
11.5.5　查询数据　　285
11.5.6　修改数据　　286
11.6　小结　　288
第12章　应用程序设置　　289
12.1　概述　　289
12.1.1　设置　　289
12.1.2　配置　　290
12.2　应用程序设置包　　291
12.3　设置项目种类　　293
12.3.1　文本字段　　295
12.3.2　开关　　298
12.3.3　滑块　　299
12.3.4　值列表　　300
12.3.5　子界面　　301
12.4　读取设置　　303
12.5　小结　　304
第13章　国际化　　305
13.1　概述　　305
13.1.1　需要国际化的内容　　305
13.1.2　国际化目录结构　　307
13.2　文本信息国际化　　308
13.2.1　系统按钮和信息国际化　　308
13.2.2　应用名称国际化　　309
13.2.3　程序代码输出的静态文本国际化　　311
13.2.4　使用genstring工具　　312
13.3　xib和故事板文件国际化　　313
13.3.1　使用Base国际化技术　　313
13.3.2　Auto Layout与国际化　　315
13.4　资源文件国际化　　317
13.4.1　图片资源文件国际化　　317
13.4.2　声音资源文件国际化　　318
13.5　小结　　318
第14章　访问联系人　　319
14.1　概述　　319
14.2　读取联系人信息　　320
14.2.1　查询联系人记录　　321
14.2.2　读取单值属性　　324
14.2.3　读取多值属性　　326
14.2.4　读取图片属性　　328
14.3　写入联系人信息　　329
14.3.1　创建联系人　　330
14.3.2　修改联系人　　332
14.3.3　删除联系人　　333
14.4　高级API　　335
14.4.1　选择联系人　　335
14.4.2　显示和修改联系人　　336
14.4.3　创建联系人　　339
14.5　小结　　342
第二部分　网络篇
第15章　访问Web Service　　344
15.1　概述　　344
15.2　数据交换格式　　344
15.2.1　XML文档结构　　346
15.2.2　解析XML文档　　347
15.2.3　JSON文档结构　　355
15.2.4　JSON数据解码　　356
15.3　REST Web Service　　357
15.3.1　HTTP和HTTPS协议　　358
15.3.2　同步GET请求方法　　358
15.3.3　异步GET请求方法　　361
15.3.4　POST请求方法　　362
15.3.5　调用REST Web Service的插入、修改和删除方法　　363
15.4　使用轻量级网络请求框架MKNetworkKit　　368
15.4.1　ASIHTTPRequest、AFNetworking和MKNetworkKit比较　　368
15.4.2　安装和配置MKNetworkKit框架　　369
15.4.3　网络请求　　370
15.4.4　下载数据　　371
15.4.5　上传数据　　373
15.5　反馈网络信息改善用户体验　　375
15.5.1　使用下拉刷新控件改善用户体验　　375
15.5.2　使用活动指示器控件　　378
15.5.3　使用网络活动指示器　　380
15.6　小结　　380
第16章　定位服务与地图应用　　381
16.1　定位服务　　381
16.1.1　定位服务编程　　382
16.1.2　地理信息反编码　　386
16.1.3　地理信息编码查询　　388
16.1.4　关于定位服务的测试　　390
16.2　使用iOS苹果地图　　393
16.2.1　显示地图　　393
16.2.2　添加标注　　395
16.2.3　跟踪用户位置变化　　398
16.3　使用程序外地图　　399
16.3.1　调用iOS苹果地图　　400
16.3.2　调用谷歌Web地图　　402
16.4　小结　　404
第三部分　进阶篇
第17章　iOS中的商业模式　　406
17.1　收费策略　　406
17.1.1　iOS如何赚钱　　406
17.1.2　避免定价策略误区　　406
17.1.3　免费软件的艺术　　407
17.1.4　在适当的时间、适当的地点植入广告　　407
17.1.5　尝试不同的盈利模式　　407
17.2　使用苹果iAd　广告　　408
17.2.1　横幅广告　　408
17.2.2　插页广告　　411
17.2.3　查看你的收入　　417
17.3　使用谷歌AdMob广告　　419
17.3.1　注册AdMob账号　　419
17.3.2　管理AdMob广告　　419
17.3.3　AdMob广告类型　　422
17.3.4　下载AdMob Ads SDK　　423
17.3.5　配置AdMob开发环境　　424
17.3.6　AdMob横幅广告　　426
17.3.7　添加AdMob插页广告　　428
17.3.8　为广告提交用户和位置信息　　431
17.3.9　搜索广告　　431
17.4　小结　　433
第18章　找出程序中的bug——调试　　434
18.1　Xcode调试工具　　434
18.1.1　定位编译错误　　434
18.1.2　查看和显示日志　　435
18.1.3　设置和查看断点　　437
18.1.4　调试工具　　442
18.1.5　输出窗口　　443
18.1.6　变量查看窗口　　444
18.1.7　查看线程　　445
18.2　日志与断言输出　　446
18.2.1　使用NSLog函数　　446
18.2.2　使用断言　　447
18.3　异常堆栈报告分析　　448
18.3.1　跟踪异常堆栈　　448
18.3.2　分析堆栈报告　　450
18.4　在iOS设备上调试　　450
18.4.1　创建开发者证书　　451
18.4.2　设备注册　　455
18.4.3　创建App ID　　456
18.4.4　创建配置概要文件　　459
18.4.5　设备调试　　460
18.5　Xcode设备管理工具　　461
18.5.1　查看设备上的应用程序　　462
18.5.2　设备日志　　464
18.6　小结　　464
第19章　测试驱动下的iOS应用开发　　465
19.1　测试驱动的软件开发概述　　465
19.1.1　测试驱动的软件开发流程　　465
19.1.2　测试驱动的软件开发案例　　466
19.1.3　iOS单元测试框架　　467
19.2　使用XCTest测试框架　　468
19.2.1　添加XCTest到工程　　468
19.2.2　编写XCTest测试方法　　469
19.2.3　运行测试程序　　472
19.2.4　分析测试报告　　473
19.3　异步单元测试　　475
19.4　性能测试　　478
19.4.1　配置测试环境　　478
19.4.2　测试代码　　479
19.4.3　分析测试结果　　480
19.5　iOS单元测试最佳实践　　481
19.5.1　测试数据持久层　　481
19.5.2　测试业务逻辑层　　485
19.6　小结　　486
第20章　让你的程序“飞”起来——性能优化　　487
20.1　内存优化　　487
20.1.1　内存管理　　487
20.1.2　使用Analyze和Instruments工具解决内存泄漏问题　　487
20.1.3　查找和解决僵尸对象　　494
20.1.4　autorelease的使用问题　　497
20.1.5　响应内存警告　　497
20.2　优化资源文件　　499
20.2.1　图片文件优化　　499
20.2.2　音频文件优化　　500
20.3　延迟加载　　501
20.3.1　资源文件的延迟加载　　501
20.3.2　故事板文件的延迟加载　　505
20.3.3　xib文件的延迟加载　　507
20.4　数据持久化的优化　　509
20.4.1　使用文件　　509
20.4.2　使用SQLite数据库　　513
20.4.3　使用Core Data　　514
20.5　可重用对象的使用　　516
20.5.1　表视图中的可重用对象　　516
20.5.2　集合视图中的可重用对象　　518
20.5.3　地图视图中的可重用对象　　519
20.6　并发处理与多核CPU　　520
20.6.1　主线程阻塞问题　　520
20.6.2　选择NSThread还是GCD　　521
20.7　小结　　521
第21章　管理好你的程序代码——代码版本控制　　522
21.1　概述　　522
21.1.1　版本控制历史　　522
21.1.2　基本概念　　523
21.2　Git代码版本控制　　523
21.2.1　服务器搭建　　523
21.2.2　Gitolite服务器管理　　525
21.2.3　Git常用命令　　527
21.2.4　Git分支　　529
21.2.5　Git协同开发　　533
21.2.6　Xcode中Git的配置与使用　　535
21.3　GitHub代码托管服务　　542
21.3.1　创建和配置GitHub账号　　542
21.3.2　创建代码库　　544
21.3.3　删除代码库　　546
21.3.4　派生代码库　　546
21.3.5　使用GitHub协同开发　　549
21.3.6　管理组织　　555
21.4　小结　　558
第22章　把你的应用放到App Store上　　559
22.1　收官　　559
22.1.1　在Xcode 6中添加图标　　559
22.1.2　在Xcode 6中添加启动界面　　562
22.1.3　调整Identity和Deployment Info属性　　564
22.1.4　为发布进行编译　　567
22.2　发布流程　　571
22.2.1　创建应用　　572
22.2.2　基本信息输入　　574
22.2.3　应用定价　　577
22.2.4　上传应用　　577
22.2.5　提交审核　　579
22.3　常见审核不通过的原因　　581
22.3.1　功能问题　　581
22.3.2　用户界面问题　　581
22.3.3　商业问题　　581
22.3.4　不当内容　　581
22.3.5　其他问题　　582
22.4　小结　　582
第四部分　实战篇
第23章　重构MyNotes应用——iOS网络通信中的设计模式与架构设计　　584
23.1　移动网络通信应用的分层架构设计　　584
23.2　Objective-C版本：在工作空间中添加和配置MKNetworkKit　　585
23.3　基于委托模式实现　　587
23.3.1　网络通信与委托模式　　587
23.3.2　在异步网络通信中使用委托模式实现分层架构设计　　587
23.3.3　类图　　588
23.3.4　时序图　　591
23.3.5　数据持久层重构　　593
23.3.6　业务逻辑层的代码实现　　597
23.3.7　表示层的代码实现　　599
23.4　基于观察者模式的通知机制实现　　603
23.4.1　观察者模式的通知机制回顾　　603
23.4.2　异步网络通信中通知机制的分层架构设计　　604
23.4.3　类图　　605
23.4.4　时序图　　606
23.4.5　数据持久层的重构　　609
23.4.6　业务逻辑层的代码实现　　611
23.4.7　表示层的代码实现　　612
23.5　小结　　616
第24章　iOS敏捷开发项目实战——2016里约热内卢奥运会应用开发及App　Store发布　　617
24.1　应用分析与设计　　617
24.1.1　应用概述　　617
24.1.2　需求分析　　617
24.1.3　原型设计　　618
24.1.4　数据库设计　　619
24.1.5　架构设计　　619
24.2　iOS敏捷开发　　620
24.2.1　敏捷开发宣言　　620
24.2.2　iOS适合敏捷开发？　　621
24.2.3　iOS敏捷开发最佳实践　　621
24.3　任务1：创建应用工作空间和工程　　623
24.3.1　迭代1.1：创建Swift版本的工程　　623
24.3.2　迭代1.2：创建Objective-C版本工作空间　　623
24.3.3　迭代1.3：发布到GitHub　　623
24.4　任务2：信息系统层与持久层开发　　624
24.4.1　迭代2.1：编写数据库DDL脚本　　624
24.4.2　迭代2.2：插入初始数据到数据库　　625
24.4.3　迭代2.3：编写实体类　　625
24.4.4　迭代2.4：DAO类XCTest单元测试　　626
24.4.5　迭代2.5：数据库帮助类DBHelper　　629
24.4.6　迭代2.5：编写DAO类　　632
24.4.7　迭代2.6：发布到GitHub　　635
24.5　任务3：业务逻辑层开发　　636
24.5.1　迭代3.1：对比赛项目业务逻辑类进行XCTest单元测试　　636
24.5.2　迭代3.2：编写比赛项目业务逻辑类　　637
24.5.3　迭代3.3：对比赛日程业务逻辑类进行XCTest单元测试　　638
24.5.4　迭代3.4：编写比赛日程业务逻辑类　　639
24.5.5　迭代3.5：发布到GitHub　　640
24.6　任务4：表示层开发　　641
24.6.1　迭代4.1：使用资源目录管理图片和图标资源　　641
24.6.2　迭代4.2：根据原型设计初步设计iPad故事板　　642
24.6.3　迭代4.3：根据原型设计初步设计iPhone故事板　　644
24.6.4　迭代4.4：首页模块　　644
24.6.5　迭代4.5：比赛项目模块　　645
24.6.6　迭代4.6：比赛日程模块　　649
24.6.7　迭代4.7：倒计时模块表示层　　652
24.6.8　迭代4.8：关于我们模块表示层　　653
24.6.9　迭代4.9：发布到GitHub　　654
24.7　任务5：收工　　654
24.7.1　迭代5.1：添加图标　　654
24.7.2　迭代5.2：设计和添加启动界面　　654
24.7.3　迭代5.3：植入谷歌AdMob横幅广告　　655
24.7.4　迭代5.4：性能测试与改善　　657
24.7.5　迭代5.5：发布到GitHub上　　658
24.7.6　迭代5.6：在App Store上发布应用　　658
24.8　小结　　658
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS开发指南 从零基础到App Store上架（第3版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Objective-C 2.0 Mac和iOS开发实践指南(Objective-C 2.0最佳入门指南)
对本书的赞誉
译者序
前言
致谢
第一部分   Objective-C简介
第1章　C，Objective-C的基础	2
1.1　C程序的结构	3
1.1.1　main函数	3
1.1.2　格式化	3
1.1.3　注释	4
1.1.4　变量和函数名	4
1.1.5　命名惯例	5
1.1.6　文件	5
1.2　变量	6
1.2.1　整数类型	6
1.2.2　浮点类型	7
1.2.3　真值	7
1.2.4　初始化	7
1.2.5　指针	8
1.2.6　数组	9
1.2.7　字符串	10
1.2.8　结构	10
1.2.9　typedef	12
1.2.10　枚举常量	12
1.3　运算符	12
1.3.1　算术运算符	12
1.3.2　余数运算符	13
1.3.3　自增和自减运算符	13
1.3.4　优先级	13
1.3.5　取反	14
1.3.6　比较	14
1.3.7　逻辑运算符	14
1.3.8　逻辑取反	15
1.3.9　赋值运算符	15
1.3.10　转换和强制类型转换	16
1.3.11　其他赋值运算符	16
1.4　表达式和语句	17
1.4.1　表达式	17
1.4.2　计算表达式	17
1.4.3　语句	18
1.4.4　复合语句	18
1.5　程序流程	18
1.5.1　if	18
1.5.2　条件表达式	19
1.5.3　while	20
1.5.4　do-while	20
1.5.5　for	20
1.5.6　break	21
1.5.7　continue	22
1.5.8　逗号表达式	22
1.5.9　switch	22
1.5.10　goto	23
1.5.11　函数	24
1.5.12　声明函数	25
1.6　预处理器	26
1.6.1　包含文件	26
1.6.2　#define	26
1.6.3　条件编译	27
1.7　printf	28
1.8　使用gcc和gdb	29
1.9　小结	30
1.10　练习	30
第2章　C变量	33
2.1　Objective-C程序的内存布局	33
2.2　自动变量	34
2.3　外部变量	35
2.4　声明关键字	35
2.4.1　auto	35
2.4.2　extern	36
2.4.3　static	36
2.4.4　register	37
2.4.5　const	37
2.4.6　volatile	37
2.5　作用域	38
2.5.1　自动变量的作用域	38
2.5.2　复合语句和作用域	38
2.5.3　外部变量的作用域	39
2.6　动态分配	39
2.7　小结	41
2.8　练习	42
第3章　面向对象编程简介	43
3.1　面向对象编程	43
3.1.1　类和实例	43
3.1.2　方法	44
3.1.3　封装	44
3.1.4　继承	44
3.1.5　多态	45
3.1.6　面向对象语言的主要特点是什么	45
3.2　Objective-C简介	45
3.2.1　定义类	46
3.2.2　类名作为类型	48
3.2.3　消息（调用方法）	48
3.2.4　类对象和对象创建	50
3.2.5　内存管理	51
3.3　Objective-C添加	51
3.3.1　运行时	51
3.3.2　名称	52
3.3.3　消息表达式	52
3.3.4　编译器指令	52
3.3.5　直接量字符串	52
3.3.6　Objective-C关键字	53
3.3.7　Cocoa数字类型	55
3.4　小结	56
第4章　第一个Objective-C程序	57
4.1　使用Xcode构建	57
4.2　Objective-C程序结构	59
4.3　面向对象的Hello World	61
4.3.1　Greeter.h	63
4.3.2　Greeter.m	65
4.4　HelloObjectiveC.m	68
4.5　小结	69
4.6　练习	70
第二部分　语言基础
第5章　消息	72
5.1　方法	72
5.1.1　一个简单的方法	72
5.1.2　带有参数的方法	73
5.2　消息	74
5.3　消息细节	76
5.3.1　嵌套	76
5.3.2　向nil发送消息	77
5.3.3　向self发送消息	78
5.3.4　覆盖并向super发送消息	78
5.3.5　选择器	80
5.3.6　具有相同名称的方法	81
5.3.7　动态类型和静态类型	82
5.4　幕后工作	83
5.5　消息转发	84
5.6　效率	85
5.7　内省和其他运行时乐趣	87
5.8　小结	88
5.9　练习	88
第6章　类和对象	90
6.1　定义类	90
6.1.1　接口部分	90
6.1.2　@class指令	91
6.1.3　实现部分	92
6.1.4　导入	92
6.2　子类化一个类	93
6.2.1　定义一个子类	93
6.2.2　子类示例	94
6.2.3　类继承	97
6.2.4　类层级示例	97
6.2.5　抽象类	98
6.3　创建对象	99
6.3.1　对象分配	99
6.3.2　对象初始化	100
6.4　销毁对象	106
6.5　复制对象	107
6.5.1　浅复制和深复制	108
6.5.2　可变复制和不可变复制	108
6.5.3　在自己的类中实现复制	109
6.6　小结	111
6.7　练习	112
第7章　类对象	113
7.1　类对象	113
7.1.1　类类型	114
7.1.2　类方法	115
7.2　其他类方法	116
7.2.1　简便构造函数	116
7.2.2　单体	118
7.2.3　初始化类	118
7.3　模拟类变量	120
7.4　小结	124
7.5　练习	125
第8章　框架	127
8.1　什么是框架	127
8.2　Cocoa框架	128
8.3　AppKit	129
8.4　Core Foundation	130
8.4.1　Core Foundation对象的内存管理	131
8.4.2　自由转换	132
8.5　Core Graphics	133
8.6　Core Animation	133
8.7　其他Apple提供的框架	134
8.8　第三方框架	134
8.9　幕后揭秘	135
8.10　小结	135
第9章　常用Foundation类	136
9.1　可变类和不可变类	136
9.2　类簇	136
9.3　NSString	137
9.3.1　NSString示例	138
9.3.2　C字符串和NSString之间的转换	140
9.3.3　直接量字符串	141
9.4　集合类	141
9.4.1　NSArray	141
9.4.2　NSDictionary	144
9.4.3　NSSet	145
9.5　NSNumber	146
9.6　NSNull	147
9.7　NSData	148
9.7.1　访问NSData的字节	149
9.7.2　文件和NSData之间的转换	149
9.8　NSURL	149
9.9　结构	150
9.10　小结	151
9.11　练习	151
第10章　Objective-C中的控制结构	153
10.1　if语句	153
10.2　for语句和隐式循环	156
10.2.1　for语句	156
10.2.2　隐式循环	156
10.2.3　带有块的隐式循环	157
10.3　while语句和NSEnumerator	157
10.4　快速枚举	159
10.5　一个使用快速枚举的示例	161
10.6　异常	164
10.6.1　抛出自己的异常	165
10.6.2　多个@catch语句块	166
10.6.3　嵌套异常处理	167
10.6.4　使用异常	168
10.6.5　应该使用异常吗	168
10.7　小结	170
10.8　练习	170
第11章　分类、扩展和安全	172
11.1　分类	172
11.1.1　使用分类覆盖方法	174
11.1.2　分类的其他用法	175
11.2　扩展	176
11.3　实例变量作用域（访问控制）	177
11.4　对方法的访问控制	178
11.5　命名空间	179
11.6　安全	179
11.7　从Objective-C调用C函数	181
11.7.1　技术上	181
11.7.2　实践上	182
11.7.3　哲学上	182
11.8　小结	182
11.9　练习	182
第12章　特性	184
12.1　在对象之外访问实例变量（不要这么做）	184
12.2　声明和实现访问器	185
12.3　使用特性的访问器	187
12.4　@property语句	189
12.4.1　assign、retain和copy	189
12.4.2　readwrite和readonly	190
12.4.3　nonatomic	190
12.4.4　setter=nam和getter=name	191
12.4.5　attributes和@dynamic	191
12.5　关于@dynamic的更多内容	191
12.6　特性和内存管理	193
12.7　子类化和特性	194
12.8　对readonly特性隐藏setter	195
12.9　特性作为文档	195
12.10　点语法	196
12.10.1　点语法和特性	197
12.10.2　点语法和C结构	198
12.11　小结	199
12.12　练习	199
第13章　协议	201
13.1　协议	201
13.2　使用协议	202
13.2.1　声明一个协议	202
13.2.2　采用协议	203
13.2.3　协议作为类型	203
13.2.4　特性和协议	203
13.3　TablePrinter示例	204
13.3.1　TablePrinterDataSource	205
13.3.2　TablePrinter	205
13.3.3　FruitBasket	207
13.3.4　main	209
13.3.5　一个问题	210
13.3.6　实现可选的方法	210
13.4　协议对象和一致性测试	211
13.5　非正式协议	212
13.6　小结	212
13.7　练习	213
第三部分　高级概念
第14章　引用计数	216
14.1　问题	216
14.2　引用计数	217
14.3　接受对象	219
14.4　所有权	221
14.5　dealloc	222
14.6　返回对象	223
14.6.1　autorelease	224
14.6.2　自动释放池	224
14.6.3　管理自动释放池	225
14.6.4　回顾简便构造函数	226
14.6.5　自动释放和iPhone	226
14.6.6　使用额外的自动释放池来控制内存使用	226
14.7　retainCount	227
14.8　多线程	228
14.9　何时引用计数不好	229
14.10　保留循环	230
14.11　最后说再见：曲终人散时	233
14.12　小结	233
14.13　练习	234
第15章　垃圾收集	236
15.1　垃圾收集：理论	236
15.2　垃圾收集：实践	237
15.3　使用垃圾收集器	238
15.4　终结器	240
15.5　malloc和垃圾收集	241
15.6　Core　Foundation对象和垃圾收集	241
15.7　过程中的一些难点	242
15.7.1　AppKit中的透明指针问题	242
15.7.2　内部指针	245
15.7.3　错误的根对象	246
15.8　垃圾收集的优点和缺点	246
15.8.1　积极方面	246
15.8.2　消极方面	246
15.8.3　应该使用垃圾收集吗	246
15.9　小结	247
15.10　练习	247
第16章　块	251
16.1　函数指针	251
16.1.1　用函数指针调用一个函数	253
16.1.2　使用函数指针	253
16.2　使用函数指针的问题	255
16.3　NSInvocation	256
16.4　块	258
16.4.1　块指针	258
16.4.2　访问变量	259
16.4.3　块变量	261
16.4.4　块是基于栈的	261
16.4.5　全局块	262
16.4.6　块是Objective-C对象	262
16.4.7　复制块	262
16.4.8　块的内存管理	263
16.4.9　陷阱	265
16.4.10　Cocoa中的块	266
16.4.11　样式问题	269
16.5　一些原理上的限制	270
16.6　小结	270
16.7　练习	270
第四部分　附录
附录A　保留字和编译器指令	274
附录B　自由转换类	275
附录C　32位和64位	276
附录D　运行时，旧的和新的	279
附录E　Objective-C的资源	282
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Objective-C 2.0 Mac和iOS开发实践指南(Objective-C 2.0最佳入门指南)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS开发指南
第一部分 　基 　础 　篇
第1章　开篇综述　　2
1.1 　iOS概述　　2
1.1.1 　iOS介绍　　2
1.1.2 　iOS 7新特性　　2
1.2 　开发环境及开发工具　　3
1.3 　本书中的约定　　4
1.3.1 　案例代码约定　　5
1.3.2 　图示的约定　　5
第2章　第一个iOS应用程序　　7
2.1 　创建HelloWorld工程　　7
2.1.1 　创建工程　　7
2.1.2 　Xcode中的iOS工程模板　　12
2.1.3 　应用剖析　　13
2.2 　HelloWorld工程中故事板文件Main.storyboard　　16
2.2.1 　故事板的导航特点　　16
2.2.2 　故事板中的Scene和Segue　　17
2.3 　应用生命周期　　17
2.3.1 　非运行状态——应用启动场景　　19
2.3.2 　点击Home键——应用退出场景　　20
2.3.3 　挂起重新运行场景　　21
2.3.4 　内存清除——应用终止场景　　22
2.4 　视图生命周期　　22
2.4.1 　视图生命周期与视图控制器关系　　23
2.4.2 　iOS  UI状态保持和恢复　　24
2.5 　设置产品属性　　26
2.5.1 　Xcode中的Project和Target　　26
2.5.2 　设置常用的产品属性　　28
2.6 　iOS API简介　　30
2.6.1 　API概述　　30
2.6.2 　如何使用API帮助　　32
2.7 　小结　　34
第3章　UIView与控件　　35
3.1 　视图“始祖”——UIView　　35
3.1.1 　UIView“家族”　　35
3.1.2 　应用界面的构建层次　　37
3.1.3 　视图分类　　38
3.2 　标签控件和按钮控件　　38
3.2.1 　标签控件　　39
3.2.2 　按钮控件　　39
3.2.3 　动作和输出口　　41
3.3 　TextField控件和TextView控件　　43
3.3.1 　TextField控件　　44
3.3.2 　TextView控件　　44
3.3.3 　键盘的打开和关闭　　45
3.3.4 　关闭和打开键盘的通知　　46
3.3.5 　键盘的种类　　47
3.4 　开关控件、滑块控件和分段控件　　48
3.4.1 　开关控件　　49
3.4.2 　滑块控件　　49
3.4.3 　分段控件　　49
3.5 　网页控件WebView　　50
3.5.1 　WebView介绍　　50
3.5.2 　使用WebView构建Hybrid应用　　53
3.6 　屏幕滚动控件ScrollView　　58
3.6.1 　ScrollView属性的设置　　58
3.6.2 　键盘与其他控件的协同　　63
3.7 　等待相关的控件与进度条　　65
3.7.1 　活动指示器ActivityIndicatorView　　66
3.7.2 　进度条ProgressView　　66
3.8 　警告框和操作表　　67
3.8.1 　警告框AlertView　　67
3.8.2 　操作表ActionSheet　　69
3.9 　工具栏和导航栏　　70
3.9.1 　工具栏　　70
3.9.2 　导航栏　　73
3.10 　屏幕布局　　77
3.10.1 　iPad、iPhone和iPhone 5屏幕布局　　77
3.10.2 　绝对布局和相对布局　　78
3.10.3 　使用AutoLayout布局　　80
3.10.4 　旋转你的屏幕　　82
3.11 　选择器　　86
3.11.1 　日期选择器　　86
3.11.2 　普通选择器　　88
3.11.3 　数据源协议与委托协议　　90
3.12 　集合视图　　92
3.12.1 　集合视图介绍　　92
3.12.2 　集合视图单元格　　94
3.12.3 　数据源协议与委托协议　　97
3.13 　小结　　97
第4章　表视图　　98
4.1 　概述　　98
4.1.1 　表视图的组成　　98
4.1.2 　表视图的相关类　　99
4.1.3 　表视图分类　　100
4.1.4 　单元格的组成和样式　　103
4.1.5 　数据源协议与委托协议　　105
4.2 　简单表视图　　106
4.2.1 　创建简单表视图　　106
4.2.2 　自定义单元格　　110
4.2.3 　添加搜索栏　　114
4.3 　分节表视图　　119
4.3.1 　添加索引　　119
4.3.2 　分组与静态表　　122
4.4 　修改单元格　　126
4.4.1 　删除和插入单元格　　126
4.4.2 　移动单元格　　132
4.5 　表视图UI设计模式　　134
4.5.1 　分页模式　　134
4.5.2 　下拉刷新模式　　134
4.5.3 　iOS 7下拉刷新控件　　135
4.6 　小结　　137
第5章　视图控制器与导航模式　　138
5.1 　概述　　138
5.1.1 　视图控制器的种类　　138
5.1.2 　导航模式　　138
5.1.3 　模态视图　　139
5.2 　平铺导航　　145
5.2.1 　应用场景　　145
5.2.2 　基于分屏导航的实现　　147
5.2.3 　基于分页导航的实现　　150
5.3 　标签导航　　156
5.3.1 　应用场景　　157
5.3.2 　实现　　157
5.4 　树形结构导航　　159
5.4.1 　应用场景　　160
5.4.2 　实现　　161
5.5 　组合使用导航模式　　165
5.5.1 　应用场景　　166
5.5.2 　实现　　166
5.6 　小结　　173
第6章　iOS常用设计模式　　174
6.1 　单例模式　　174
6.1.1 　问题提出　　174
6.1.2 　实现原理　　174
6.1.3 　应用案例　　175
6.2 　委托模式　　177
6.2.1 　问题提出　　177
6.2.2 　实现原理　　178
6.2.3 　应用案例　　181
6.3 　观察者模式　　184
6.3.1 　问题提出　　184
6.3.2 　实现原理　　185
6.3.3 　通知机制和KVO机制　　187
6.4 　MVC模式　　193
6.4.1 　MVC模式概述　　193
6.4.2 　Cocoa Touch中的MVC模式　　194
6.5 　小结　　196
第7章　iPhone与iPad应用开发的差异　　197
7.1 　概述　　197
7.1.1 　应用场景差异　　197
7.1.2 　设计和开发需注意的问题　　197
7.1.3 　构建自适应的iPhone和iPad工程　　200
7.2 　iPad专用API　　202
7.2.1 　UIPopoverController控制器　　202
7.2.2 　UISplitViewController控制器　　205
7.2.3 　模态视图专用属性　　211
7.3 　小结　　215
第8章　iOS分层架构设计　　216
8.1 　低耦合企业级系统架构设计　　216
8.2 　 iOS分层架构设计　　217
8.2.1 　基于同一工程的分层　　217
8.2.2 　基于一个工作空间不同工程的分层　　222
8.3 　小结　　227
第9章　iOS 7中文字排版和渲染引擎——Text Kit　　228
9.1 　Text Kit基础　　228
9.1.1 　文字的排版和渲染　　228
9.1.2 　Text Kit架构　　228
9.1.3 　Text Kit中的核心类　　229
9.1.3 　实例：凸版印刷效果　　231
9.2 　文字图片混合排版　　233
9.3 　动态字体　　236
9.4 　小结　　239
第10章　应用程序设置　　240
10.1 　概述　　240
10.1.1 　设置　　240
10.1.2 　配置　　241
10.2 　应用程序设置包　　243
10.3 　设置项目种类　　244
10.3.1 　文本字段　　247
10.3.2 　开关　　249
10.3.3 　滑块　　250
10.3.4 　值列表　　252
10.3.5 　子界面　　253
10.4 　读取设置　　255
10.5 　小结　　256
第11章　国际化　　257
11.1 　概述　　257
11.1.1 　需要国际化的内容　　257
11.1.2 　国际化目录结构　　259
11.2 　文本信息国际化　　260
11.2.1 　系统按钮和信息国际化　　260
11.2.2 　应用名称国际化　　261
11.2.3 　程序代码输出的静态文本国际化　　263
11.2.4 　使用genstring工具　　265
11.3 　xib和故事板文件国际化　　266
11.3.1 　使用Base国际化技术　　266
11.3.2 　AutoLayout与国际化　　268
11.4 　资源文件国际化　　270
11.4.1 　图片资源文件国际化　　270
11.4.2 　声音资源文件国际化　　271
11.5 　小结　　271
第12章　数据持久化　　272
12.1 　概述　　272
12.1.1 　沙箱目录　　272
12.1.2 　持久化方式　　273
12.2 　属性列表　　273
12.3 　对象归档　　278
12.4 　使用SQLite数据库　　282
12.4.1 　SQLite数据类型　　283
12.4.2 　创建数据库　　283
12.4.3 　查询数据　　285
12.4.4 　修改数据　　288
12.5 　Core Data　　290
12.5.1 　ORM　　290
12.5.2 　Core Data堆栈　　290
12.5.3 　建模和生成实体　　294
12.5.4 　采用Core Data分层架构设计　　297
12.5.5 　查询数据　　298
12.5.6 　修改数据　　300
12.6 　小结　　301
第13章　访问通讯录　　302
13.1 　概述　　303
13.2 　读取联系人信息　　303
13.2.1 　查询联系人记录　　304
13.2.2 　读取单值属性　　306
13.2.3 　读取多值属性　　308
13.2.4 　读取图片属性　　310
13.3 　写入联系人信息　　310
13.3.1 　创建联系人　　312
13.3.2 　修改联系人　　314
13.3.3 　删除联系人　　315
13.4 　高级API　　316
13.4.1 　选择联系人　　316
13.4.2 　显示和修改联系人　　319
13.4.3 　创建联系人　　322
13.5 　小结　　325
第二部分 　网 　络 　篇
第14章　访问Web Service　　328
14.1 　概述　　328
14.2 　数据交换格式　　328
14.2.1 　XML文档结构　　330
14.2.2 　解析XML文档　　331
14.2.3 　JSON文档结构　　338
14.2.4 　JSON数据解码　　339
14.3 　REST Web Service　　341
14.3.1 　HTTP和HTTPS协议　　341
14.3.2 　同步GET请求方法　　342
14.3.3 　异步GET请求方法　　346
14.3.4 　POST请求方式　　347
14.3.5 　调用REST Web Service的插入、修改和删除方法　　348
14.4 　使用轻量级网络请求框架MKNetworkKit　　352
14.4.1 　ASIHTTPRequest、AFNetworking和MKNetworkKit比较　　353
14.4.2 　安装和配置MKNetworkKit框架　　353
14.4.3 　网络请求　　354
14.4.4 　下载数据　　356
14.4.5 　上传数据　　358
14.5 　反馈网络信息改善用户体验　　359
14.5.1 　使用下拉刷新控件改善用户体验　　359
14.5.2 　使用等待指示器控件　　362
14.5.3 　使用网络等待指示器　　365
14.6 　小结　　366
第15章　定位服务与地图应用　　367
15.1 　定位服务　　367
15.1.1 　定位服务编程　　368
15.1.2 　地理信息反编码　　372
15.1.3 　地理信息编码查询　　373
15.1.4 　关于定位服务的测试　　375
15.2 　使用iOS苹果地图　　378
15.2.1 　显示地图　　378
15.2.2 　添加标注　　380
15.2.3 　跟踪用户位置变化　　383
15.3 　使用程序外地图　　384
15.3.1 　调用iOS苹果地图　　384
15.3.2 　调用谷歌Web地图　　387
15.4 　小结　　388
第三部分 　进 　阶 　篇
第16章　升级?　　390
16.1 　从iOS 6到iOS 7的升级　　390
16.1.1 　iOS 7全新的扁平化设计　　391
16.1.2 　屏幕适配问题　　394
16.1.3 　iOS 7状态栏隐藏　　396
16.1.4 　iOS 7状态栏样式设置　　397
16.2 　从Xcode 4到Xcode 5的升级　　399
16.2.1 　ARC与MRC之争　　399
16.2.2 　故事板与xib之争　　402
16.2.3 　找回普通显示屏的模拟器　　407
16.2.4 　找回老版本的Interface Builder　　408
16.2.5 　使用资源目录管理图片　　409
16.3 　从iPhone 4到iPhone 5的升级　　412
16.3.1 　屏幕适配问题　　413
16.3.2 　从32位到64位的升级　　416
16.4 　小结　　417
第17章　iOS中的商业模式　　418
17.1 　收费策略　　418
17.1.1 　iOS如何赚钱　　418
17.1.2 　避免定价策略误区　　419
17.1.3 　免费软件的艺术　　419
17.1.4 　在适当的时间、适当的地点植入广告　　419
17.1.5 　尝试不同的盈利模式　　419
17.2 　使用苹果iAd广告　　420
17.2.1 　横幅广告　　420
17.2.2 　插页广告　　425
17.2.3 　查看你的收入　　430
17.3 　使用谷歌AdMob广告　　432
17.3.1 　注册AdMob账号和管理应用　　432
17.3.2 　下载谷歌AdMob Ads SDK和示例代码　　435
17.3.3 　添加AdMob横幅广告　　437
17.3.4 　添加AdMob插页广告　　442
17.3.5 　为广告提交用户和位置信息　　445
17.3.6 　搜索广告　　446
17.3.7 　查看你的收入　　448
17.4 　应用内购买　　449
17.4.1 　概述　　449
17.4.2 　测试环境搭建　　450
17.4.3 　在程序中实现应用内购买　　455
17.4.4 　测试应用内购买　　461
17.5 　小结　　463
第18章　找出程序中的bug——调试　　464
18.1 　Xcode调试工具　　464
18.1.1 　定位编译错误　　464
18.1.2 　查看和显示日志　　465
18.1.3 　设置和查看断点　　466
18.1.4 　调试工具栏　　470
18.1.5 　输出窗口　　471
18.1.6 　变量查看窗口　　473
18.1.7 　查看线程　　474
18.2 　日志与断言输出　　475
18.2.1 　使用NSLog函数　　475
18.2.2 　使用NSAssert宏　　476
18.2.3 　移除NSLog和NSAssert　　477
18.3 　LLDB调试工具　　479
18.3.1 　断点命令　　480
18.3.2 　观察点命令　　482
18.3.3 　查看变量和计算表达式命令　　483
18.4 　异常堆栈报告分析　　485
18.4.1 　跟踪异常堆栈　　485
18.4.2 　分析堆栈报告　　488
18.5 　在iOS设备上调试　　488
18.5.1 　创建开发者证书　　489
18.5.2 　设备注册　　493
18.5.3 　创建App ID　　495
18.5.4 　创建配置概要文件　　497
18.5.5 　设备调试　　501
18.6 　Xcode设备管理工具　　502
18.6.1 　管理设备配置概要文件　　503
18.6.2 　查看设备上的应用程序　　504
18.6.3 　设备控制台　　505
18.6.4 　设备日志　　505
18.7 　小结　　506
第19章　测试驱动下的iOS应用开发　　507
19.1 　测试驱动的软件开发概述　　507
19.1.1 　测试驱动的软件开发流程　　507
19.1.2 　测试驱动的软件开发案例　　508
19.1.3 　iOS 7单元测试框架　　513
19.2 　使用XCTest测试框架　　513
19.2.1 　添加XCTest到工程　　514
19.2.2 　编写XCTest测试方法　　515
19.2.3 　运行测试程序　　521
19.2.4 　分析测试报告　　521
19.3 　iOS单元测试最佳实践　　523
19.3.1 　测试数据持久层　　523
19.3.2 　测试业务逻辑层　　527
19.3.3 　测试表示层　　529
19.4 　小结　　531
第20章　让你的程序“飞”起来——性能优化　　532
20.1 　内存优化　　532
20.1.1 　内存泄漏问题的解决　　532
20.1.2 　查找和解决僵尸对象　　540
20.1.3　　autorelease的使用问题　　543
20.1.4 　响应内存警告　　543
20.1.5 　选择xib还是故事板　　545
20.2 　优化资源文件　　545
20.2.1 　图片文件优化　　546
20.2.2 　音频文件优化　　548
20.3 　延迟加载　　549
20.3.1 　资源文件的延迟加载　　549
20.3.2 　故事板和xib文件的延迟加载　　553
20.4 　数据持久化的优化　　555
20.4.1 　使用文件　　555
20.4.2 　使用SQLite数据库　　559
20.4.3 　使用Core Data　　560
20.5 　可重用对象的使用　　562
20.5.1 　表视图中的可重用对象　　562
20.5.2 　集合视图中的可重用对象　　564
20.5.3 　地图视图中的可重用对象　　565
20.6 　并发处理与多核CPU　　565
20.6.1 　主线程阻塞问题　　566
20.6.2 　选择NSThread还是GCD　　566
20.7 　编译参数　　568
20.8 　小结　　569
第21章　管理好你的程序代码——代码版本控制　　570
21.1 　概述　　570
21.1.1 　版本控制历史　　570
21.1.2 　基本概念　　571
21.2 　Git代码版本控制　　571
21.2.1 　服务器搭建　　571
21.2.2 　Gitolite服务器管理　　573
21.2.3 　Git常用命令　　575
21.2.4 　Git分支　　577
21.2.5 　Git协同开发　　581
21.2.6 　Xcode 5中Git的配置与使用　　583
21.3 　GitHub代码托管服务　　590
21.3.1 　创建和配置GitHub账号　　590
21.3.2 　创建代码库　　592
21.3.3 　派生代码库　　595
21.3.4 　使用GitHub协同开发　　597
21.3.5 　管理组织　　601
21.4 　小结　　605
第22章　把你的应用放到App Store上　　606
22.1 　收官　　606
22.1.1 　在Xcode 5下添加图标　　606
22.1.2 　Xcode 5添加启动界面　　608
22.1.3 　调整Identity和Deployment Info属性　　611
22.1.4 　为发布进行编译　　612
22.1.5 　应用打包　　618
22.2 　发布流程　　619
22.2.1 　创建应用及基本信息　　620
22.2.2 　应用定价信息　　621
22.2.3 　最后的信息输入　　622
22.2.4 　上传应用　　625
22.3 　审核不通过的常见原因　　627
22.4 　小结　　628
第四部分 　实 　战 　篇
第23章　重构MyNotes应用——iOS网络通信中的设计模式与架构设计　　630
23.1 　移动网络通信应用的分层架构设计　　630
23.2 　基于委托模式实现　　631
23.2.1 　网络通信与委托模式　　631
23.2.2 　在异步网络通信中使用委托模式实现分层架构设计　　631
23.2.3 　类图　　632
23.2.4 　时序图　　634
23.2.5 　数据持久层重构　　637
23.2.6 　业务逻辑层的代码实现　　640
23.2.7 　表示层的代码实现　　642
23.3 　基于观察者模式的通知机制实现　　646
23.3.1 　观察者模式的通知机制回顾　　646
23.3.2 　异步网络通信中通知机制的分层架构设计　　647
23.3.3 　类图　　647
23.3.4 　时序图　　648
23.3.5 　数据持久层的重构　　651
23.3.6 　业务逻辑层的代码实现　　653
23.3.7 　表示层的代码实现　　653
23.4 　小结　　658
第24章　iOS敏捷开发项目实战——2016里约热内卢奥运会应用开发及App
Store发布　　659
24.1 　应用分析与设计　　659
24.1.1 　应用概述　　659
24.1.2 　需求分析　　659
24.1.3 　原型设计　　660
24.1.4 　数据库设计　　660
24.1.5 　架构设计　　662
24.2 　iOS敏捷开发　　662
24.2.1 　敏捷开发宣言　　662
24.2.2 　iOS适合敏捷开发吗　　663
24.2.3 　iOS敏捷开发最佳实践　　663
24.3 　任务1：创建应用基本工作空间　　665
24.4 　任务2：信息系统层与持久层开发　　666
24.4.1 　迭代2.1：编写数据库DDL脚本　　666
24.4.2 　迭代2.2：插入初始数据到数据库　　667
24.4.3 　迭代2.3：编写实体类　　667
24.4.4 　迭代2.4：DAO类XCTest单元测试　　668
24.4.5 　迭代2.5：编写DAO类　　672
24.4.6 　迭代2.6：发布到GitHub　　676
24.5 　任务3：业务逻辑层开发　　676
24.5.1 　迭代3.1：比赛项目业务逻辑类XCTest单元测试　　676
24.5.2 　迭代3.2：编写比赛项目业务逻辑类　　677
24.5.3 　迭代3.3：比赛日程业务逻辑类XCTest单元测试　　678
24.5.4 　迭代3.4：编写比赛日程业务逻辑类　　679
24.5.5 　迭代3.5：发布到GitHub　　681
24.6 　任务4：表示层开发　　681
24.6.1 　迭代4.1：使用资源目录管理图片和图标资源　　682
24.6.2 　迭代4.3：根据原型设计初步设计iPad故事板　　683
24.6.3 　迭代4.3：根据原型设计初步设计iPhone故事板　　684
24.6.4 　迭代4.4：首页模块　　684
24.6.5 　迭代4.5：比赛项目模块　　685
24.6.6 　迭代4.6：比赛日程模块　　690
24.6.7 　迭代4.7：倒计时模块表示层　　692
24.6.8 　迭代4.8：关于我们模块表示层　　694
24.6.9 　迭代4.9：发布到GitHub　　694
24.7 　任务5：收工　　694
24.7.1 　迭代5.1：添加图标　　695
24.7.2 　迭代5.2：设计和添加启动界面　　695
24.7.3 　迭代5.3：植入谷歌AdMob横幅广告　　695
24.7.4 　迭代5.4：性能测试与改善　　696
24.7.5 　迭代5.5：发布到GitHub　　697
24.7.6 　迭代5.6：在App Store上发布应用　　697
24.8 　小结　　699
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS开发指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通iOS开发
第1章　欢迎来到iOS 和Swift 世界　　1
1.1　关于本书　　1
1.2　必备条件　　1
1.2.1　选择开发者计划　　2
1.2.2　必备知识　　3
1.3　iOS应用程序的特点　　4
1.3.1　只能运行一个应用　　4
1.3.2　只能使用一个窗口　　4
1.3.3　有限的访问权限　　4
1.3.4　有限的响应时间　　4
1.3.5　有限的屏幕尺寸　　5
1.3.6　有限的系统资源　　5
1.3.7　不支持垃圾回收　　6
1.3.8　一些新功能　　6
1.3.9　与众不同的交互方法　　6
1.4　本书内容　　6
1.5　新版增加内容　　8
1.6　Swift和Xcode版本　　8
1.7　准备好了吗　　8
第2章　创建第一个项目　　9
2.1　在Xcode中创建项目　　9
2.1.1　Xcode项目窗口　　12
2.1.2　深入了解项目　　18
2.2　Interface Builder简介　　19
2.2.1　文件格式　　20
2.2.2　storyboard　　21
2.2.3　资源库　　22
2.2.4　在视图中添加标签　　23
2.2.5　属性修改　　27
2.3　画龙点睛——美化iPhone 应用程序　　28
2.4　启动界面　　30
2.5　小结　　31
第3章　实现基本交互　　32
3.1　MVC模式　　32
3.2　创建项目　　33
3.3　视图控制器　　34
3.3.1　输出接口和操作方法　　35
3.3.2　精简视图控制器代码　　37
3.3.3　设计用户界面　　38
3.3.4　运行应用　　47
3.3.5　布局预览　　52
3.3.6　添加字体类型　　54
3.4　应用程序委托　　55
3.5　小结　　58
第4章　更丰富的用户界面　　59
4.1　满是控件的屏幕　　59
4.2　动态控件、静态控件和被动控件　　61
4.3　创建应用程序　　62
4.4　实现图像视图和文本框　　62
4.4.1　添加图像视图　　62
4.4.2　调整图像视图的大小　　64
4.4.3　设置视图属性　　65
4.4.4　添加文本框　　67
4.4.5　添加约束　　71
4.4.6　创建并关联输出接口　　72
4.5　关闭键盘　　74
4.5.1　按下Done按钮关闭键盘　　74
4.5.2　触摸背景关闭键盘　　75
4.5.3　添加滑动条和标签　　76
4.5.4　添加更多约束　　78
4.5.5　创建并关联操作方法和输出接口　　78
4.5.6　实现操作方法　　78
4.6　实现开关、按钮和分段控件　　79
4.6.1　添加两个带标签的开关　　80
4.6.2　为开关创建并关联输出接口和操作方法　　81
4.6.3　实现开关的操作方法　　81
4.7　美化按钮　　83
4.7.1　可拉伸图像　　83
4.7.2　控件状态　　84
4.7.3　为按钮创建并关联输出接口和操作方法　　84
4.8　实现分段控件的操作方法　　85
4.9　实现操作表单和警告视图　　85
4.9.1　显示操作表单　　86
4.9.2　显示警告视图　　88
4.10　小结　　90
第5章　自动旋转和自动调整大小　　91
5.1　自动旋转机制　　91
5.1.1　点、像素和Retina 显示屏　　92
5.1.2　控制旋转　　92
5.2　选择视图支持的方向　　93
5.2.1　应用级支持的方向　　93
5.2.2　独立控制器的旋转支持　　94
5.3　使用约束设计界面　　95
5.3.1　覆盖默认的约束　　98
5.3.2　与屏幕等宽的标签　　99
5.4　创建自适应布局　　101
5.4.1　创建Restructure应用程序　　101
5.4.2　尺寸分类　　105
5.4.3　尺寸分类和storyboard　　106
5.4.4　创建iPhone横屏布局　　108
5.4.5　创建iPad布局　　112
5.5　小结　　114
第6章　多视图应用　　115
6.1　多视图应用的常见类型　　115
6.2　多视图应用的体系结构　　118
6.2.1　根控制器　　119
6.2.2　内容视图剖析　　119
6.3　构建View Switcher项目　　120
6.3.1　重命名视图控制器　　120
6.3.2　添加内容视图控制器　　123
6.3.3　修改SwitchingViewController实现文件　　123
6.3.4　创建拥有工具栏的视图　　124
6.3.5　连接工具栏按钮和视图控制器　　126
6.3.6　编写根视图控制器　　127
6.3.7　实现内容视图　　130
6.3.8　转场过程的动画效果　　133
6.4　小结　　135
第7章　分页栏与选取器　　136
7.1　Pickers应用程序　　136
7.2　委托和数据源　　139
7.3　创建Pickers应用程序　　139
7.3.1　创建视图控制器　　140
7.3.2　创建分页栏控制器　　140
7.3.3　首次运行　　143
7.4　实现日期选取器　　143
7.5　实现单滚轮选取器　　146
7.5.1　构建视图　　146
7.5.2　将控制器实现为数据源和委托　　147
7.6　实现多滚轮选取器　　150
7.6.1　声明输出接口和操作方法　　150
7.6.2　构建视图　　150
7.6.3　实现控制器　　151
7.7　滚轮内容根据环境变化　　153
7.8　使用自定义选取器创建一个简单游戏　　159
7.8.1　编写控制器头文件　　159
7.8.2　构建视图　　159
7.8.3　实现控制器　　160
7.8.4　最后的细节　　163
7.9　小结　　165
第8章　表视图简介　　166
8.1　表视图基础　　166
8.1.1　表视图和表视图单元　　167
8.1.2　分组表和无格式表　　167
8.2　实现一个简单表　　168
8.2.1　设计视图　　168
8.2.2　编写控制器　　170
8.2.3　添加一个图像　　174
8.2.4　表视图单元样式　　175
8.2.5　设置缩进级别　　177
8.2.6　处理行的选择　　178
8.2.7　更改字体大小和行高　　179
8.3　定制表视图单元　　181
8.3.1　向表视图单元添加子视图　　181
8.3.2　创建UITableViewCell子类　　182
8.3.3　从nib文件加载UITableViewCell　　186
8.4　分组分区和索引分区　　190
8.4.1　构建视图　　190
8.4.2　导入数据　　191
8.4.3　实现控制器　　191
8.4.4　添加索引　　195
8.5　实现搜索栏　　195
8.6　视图调试器　　202
8.7　小结　　204
第9章　导航控制器和表视图　　205
9.1　导航控制器　　205
9.1.1　栈的概念　　205
9.1.2　控制器栈　　206
9.2　简单的字体浏览器：Fonts　　207
9.2.1　子控制器　　207
9.2.2　Font应用的基础框架　　209
9.3　创建根视图控制器　　214
9.4　初始化storyboard　　217
9.5　第一个子控制器：字体列表视图　　218
9.5.1　设定字体列表的storyboard　　219
9.5.2　对根视图控制器的转场进行设置　　220
9.6　创建字体尺寸视图控制器　　221
9.6.1　设计字体尺寸视图控制器的storyboard　　223
9.6.2　对字体列表视图控制器的转场进行设置　　223
9.7　创建字体信息视图控制器　　223
9.7.1　设计字体信息视图控制器的storyboard　　225
9.7.2　设置约束　　226
9.7.3　调整字体列表视图控制器的转场　　227
9.7.4　我的收藏字体　　227
9.8　改善表视图　　228
9.8.1　实现轻扫删除　　228
9.8.2　实现拖动排序　　230
9.9　小结　　232
第10章　集合视图　　233
10.1　创建DialogViewer项目　　233
10.2　修补视图控制器类　　234
10.3　自定义单元　　234
10.4　配置视图控制器　　237
10.5　内容单元　　238
10.6　实现流式布局　　239
10.7　分区标题视图　　241
10.8　小结　　242
第11章　分割视图和浮动窗口　　243
11.1　创建分割视图项目　　245
11.1.1　在storyboard中定义结构　　247
11.1.2　使用代码定义功能　　248
11.1.3　Master-Detail模板应用程序的工作原理　　253
11.2　显示总统信息　　255
11.3　创建浮动窗口　　261
11.4　iPhone上的分割视图　　266
11.4.1　iPhone 6 Plus上的分割视图　　267
11.4.2　在所有iPhone上支持iPhone 6 Plus的行为　　268
11.5　自定义分割视图　　271
11.6　小结　　273
第12章　应用设置和用户默认设置　　274
12.1　设置捆绑包入门　　274
12.2　应用：Bridge Control　　275
12.2.1　创建项目　　278
12.2.2　使用设置捆绑包　　279
12.2.3　读取应用中的设置　　291
12.2.4　在应用中修改默认设置　　294
12.2.5　注册默认值　　296
12.2.6　保证设置有效　　297
12.3　切换到“设置”应用程序　　299
12.4　小结　　300
第13章　数据持久化基础知识　　301
13.1　应用的沙盒　　301
13.1.1　获取Documents目录　　303
13.1.2　获取tmp目录　　304
13.2　文件保存方案　　304
13.2.1　单文件持久化　　304
13.2.2　多文件持久化　　304
13.3　属性列表　　304
13.3.1　属性列表序列化　　305
13.3.2　Persistence应用的第一个版本　　306
13.4　对模型对象进行归档　　310
13.4.1　遵循NSCoding协议　　310
13.4.2　实现NSCopying协议　　312
13.4.3　对数据对象进行归档和取消归档　　313
13.4.4　归档应用　　314
13.5　使用iOS内嵌的SQLite3　　317
13.5.1　创建或打开数据库　　317
13.5.2　绑定变量　　319
13.5.3　SQLite3 应用　　319
13.6　使用Core Data　　324
13.6.1　实体和托管对象　　326
13.6.2　Core Data应用　　328
13.7　小结　　335
第14章　文档和iCloud　　336
14.1　使用UIDocument管理文档存储　　336
14.1.1　构建TinyPix　　336
14.1.2　创建TinyPixDocument类　　337
14.1.3　主控制器代码　　340
14.1.4　初始storyboard　　346
14.1.5　创建TinyPixView类　　348
14.1.6　设计storyboard　　352
14.2　添加iCloud支持　　356
14.2.1　创建授权文件　　356
14.2.2　如何查询　　357
14.2.3　保存在哪里　　359
14.2.4　将首选项保存到iCloud　　360
14.3　小结　　362
第15章　Grand Central Dispatch和后台处理　　363
15.1　Grand Central Dispatch　　363
15.2　SlowWorker简介　　363
15.3　线程基础知识　　367
15.4　工作单元　　367
15.5　GCD：底层队列　　368
15.5.1　傻瓜式操作　　368
15.5.2　改进SlowWorker　　369
15.6　后台处理　　374
15.6.1　应用生命周期　　375
15.6.2　状态更改通知　　375
15.6.3　创建State Lab项目　　376
15.6.4　执行状态的变化　　377
15.6.5　利用执行状态更改　　379
15.6.6　处理不活跃状态　　379
15.6.7　处理后台状态　　382
15.7　小结　　388
第16章　使用Core Graphics绘图　　389
16.1　Quartz 2D基础概念　　389
16.2　Quartz 2D绘图方法　　389
16.2.1　Quartz 2D图形环境　　389
16.2.2　坐标系统　　390
16.2.3　指定颜色　　391
16.2.4　在环境中绘制图像　　393
16.2.5　绘制形状：多边形、直线和曲线　　 393
16.2.6　Quartz 2D样例：图案、渐变色、虚线图　　394
16.3　QuartzFun应用程序　　395
16.3.1　构建QuartzFun应用程序　　395
16.3.2　添加Quartz 2D绘制代码　　403
16.3.3　优化QuartzFun应用程序　　408
16.4　小结　　410
第17章　Sprite Kit游戏框架　　411
17.1　基础入门　　411
17.2　玩家动作　　420
17.2.1　向场景中插入玩家　　421
17.2.2　触摸处理：玩家移动　　421
17.2.3　几何运算　　422
17.2.4　轻微摆动　　423
17.3　创建敌人　　424
17.4　在场景中放入敌人　　425
17.5　开始射击　　426
17.5.1　定义物理类别　　426
17.5.2　创建BulletNode类　　427
17.5.3　应用物理知识　　428
17.5.4　在场景中添加导弹　　429
17.6　利用物理引擎攻击敌人　　430
17.7　实现关卡　　431
17.7.1　注意敌人　　432
17.7.2　进入下一关卡　　432
17.8　自定义碰撞　　433
17.8.1　为SKNode添加类扩展/类别　　434
17.8.2　向敌人添加自定义碰撞行为　　436
17.8.3　显示玩家正确的生命值　　436
17.9　粒子系统　　438
17.9.1　第一个粒子　　438
17.9.2　向场景中加入粒子　　440
17.10　游戏结束　　441
17.11　创建开始场景　　443
17.12　播放音乐　　445
17.13　添加力场　　446
17.14　小结　　449
第18章　轻点、触摸和手势　　450
18.1　多点触控术语　　450
18.2　响应者链　　451
18.2.1　响应事件　　451
18.2.2　转发事件：保持响应者链的活动状态　　452
18.3　多点触控体系结构　　452
18.4　4 个手势通知方法　　452
18.5　TouchExplorer应用　　453
18.6　Swipes应用　　456
18.6.1　使用触摸事件检测轻扫　　457
18.6.2　自动手势识别　　459
18.6.3　实现多指轻扫　　460
18.7　检测多次轻点　　462
18.8　检测捏合和旋转　　466
18.9　自定义手势　　469
18.9.1　CheckPlease应用　　470
18.9.2　CheckPlease的触摸方法　　471
18.10　小结　　473
第19章　Core Location和Map Kit　　474
19.1　位置管理器　　474
19.1.1　设置精度　　475
19.1.2　设置距离筛选器　　475
19.1.3　获取使用定位服务的权限　　475
19.1.4　启动位置管理器　　475
19.1.5　合理使用位置管理器　　476
19.2　位置管理器委托　　476
19.2.1　获取位置更新　　476
19.2.2　使用CLLocation获取纬度和经度　　476
19.2.3　错误通知　　478
19.3　开始构建Core Location　　478
19.4　将移动路线展现在地图上　　484
19.5　小结　　488
第20章　陀螺仪和加速计　　489
20.1　加速计物理特性　　489
20.2　陀螺仪旋转特性　　489
20.3　Core Motion和动作管理器　　490
20.3.1　基于事件的动作　　490
20.3.2　主动动作访问　　494
20.3.3　陀螺仪和方位结果　　496
20.3.4　加速计结果　　497
20.4　检测摇动　　497
20.4.1　内嵌的摇动检测　　498
20.4.2　摇动与击碎　　498
20.5　将加速计用作方向控制器　　500
20.5.1　滚弹珠程序　　501
20.5.2　实现BallView类　　503
20.5.3　计算弹珠运动　　506
20.6　小结　　508
第21章　摄像头和照片库　　509
21.1　图像选取器和UIImagePickerController　　509
21.2　图像选取器控制器　　509
21.3　实际测试摄像头和照片库　　511
21.3.1　设计界面　　512
21.3.2　实现摄像头视图控制器　　515
21.4　小结　　518
第22章　应用本地化　　519
22.1　本地化体系结构　　519
22.2　字符串文件　　520
22.2.1　字符串文件的格式　　520
22.2.2　本地化的字符串函数　　521
22.3　现实中的iOS本地化应用　　521
22.3.1　创建LocalizeMe　　522
22.3.2　测试LocalizeMe　　525
22.3.3　本地化项目　　525
22.3.4　本地化storyboard　　527
22.3.5　创建并本地化字符串文件　　529
22.4　在Xcode中预览本地化　　533
22.5　添加其他本地化　　534
22.6　小结　　535
附录 Swift简介　　536
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通iOS开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>疯狂iOS 讲义（上） Objective-C 2.0与iPhone/iPad应用开发基础
第1章　iOS应用与开发环境	1
1.1  Objective-C与iOS简介	2
1.1.1  Objective-C简介	2
1.1.2  iOS简介	3
1.2  搭建iOS开发环境	3
1.2.1  下载并安装Xcode和SDK	4
1.2.2  安装辅助工具和文档	6
1.3  第一个Objective-C程序	6
1.3.1  使用文本编辑器开发Objective-C程序	7
1.3.2  使用Xcode工具开发Objective-C程序	9
1.4  熟悉Xcode	10
1.4.1  创建iOS项目	11
1.4.2  熟悉导航面板	12
1.4.3  熟悉检查器面板	14
1.4.4  熟悉库面板	15
1.4.5  使用Xcode的帮助系统	17
1.5  小结	20
第2章　数据类型和运算符	21
2.1  注释	22
2.2  标识符和变量	23
2.2.1  分隔符	23
2.2.2  标识符规则	25
2.2.3  Objective-C关键字	25
2.3  数据类型分类	25
2.4  基本数据类型	26
2.4.1  整型	26
2.4.2  NSLog输出函数及格式字符	27
2.4.3  字符型	29
2.4.4  浮点型	30
2.4.5  枚举型	31
2.4.6  BOOL类型	32
2.5  类型转换	34
2.5.1  自动类型转换	34
2.5.2  强制类型转化	36
2.5.3  表达式类型的自动提升	36
2.6  运算符	37
2.6.1  算术运算符	37
2.6.2  赋值运算符	39
2.6.3  位运算符	40
2.6.4  扩展后的赋值运算符	42
2.6.5  比较运算符	42
2.6.6  逻辑运算符	43
2.6.7  逗号运算符	43
2.6.8 三目运算符	44
2.6.9  运算符的结合性和优先级	45
2.7  小结	46
第3章　流程控制与数组	47
3.1  顺序结构	48
3.2  分支结构	48
3.2.1  if条件语句	48
3.2.2  switch分支语句	52
3.3  循环结构	54
3.3.1  while循环语句	54
3.3.2  do while循环语句	56
3.3.3  for循环	56
3.3.4  嵌套循环	59
3.4  控制循环结构	60
3.4.1  使用break结束循环	61
3.4.2  使用continue结束本次循环	61
3.4.3  使用return结束函数	62
3.5  goto语句	62
3.6  数组	64
3.6.1  定义数组	64
3.6.2  数组的初始化	65
3.6.3  使用数组	66
3.6.4  多维数组	67
3.6.5  多维数组的初始化	68
3.6.6  字符数组、字符串与结束标志	73
3.6.7  输出字符串和字符串函数	74
3.6.8  数组的应用举例	76
3.7  小结	78
第4章　C语言特性	79
4.1  函数	80
4.1.1  定义函数	80
4.1.2  函数声明	83
4.1.3  函数的参数传递机制	84
4.1.4  递归函数	88
4.1.5  数组作为函数参数	89
4.1.6  内部函数与外部函数	93
4.2  局部变量与全局变量	94
4.2.1  局部变量	95
4.2.2  全局变量	96
4.2.3  外部全局变量与内部全局变量	97
4.2.4  动态存储与静态存储	99
4.3  预处理	101
4.3.1  使用#define、#undef执行宏定义	101
4.3.2  带参数的宏定义	103
4.3.3  使用#ifdef、#ifndef、#else、#endif执行条件编译	104
4.3.4  使用#if、#elif、#else、#endif执行条件编译	106
4.3.5  #include与#import	107
4.4  指针	108
4.4.1  指针的概念	108
4.4.2  指针变量及其基本用法	109
4.4.3  指针变量作为函数参数	111
4.5  指针与数组	113
4.5.1  指向数组的指针变量	113
4.5.2  指针运算	114
4.5.3  数组变量作为函数参数	116
4.5.4  指向多维数组的指针变量	118
4.6  字符串与指针	121
4.6.1  使用字符指针表示字符串	121
4.6.2  字符指针作为函数参数	122
4.7  函数与指针	123
4.7.1  用函数指针变量调用函数	123
4.7.2  用函数指针变量作为函数参数	124
4.7.3  返回指针的函数	126
4.8  指针数组和指向指针的指针	127
4.8.1  指针数组与main()函数形参	127
4.8.2  指向指针变量的指针	130
4.9  结构体	130
4.9.1  定义结构体	131
4.9.2  typedef语句	133
4.9.3  初始化结构体变量	134
4.9.4  结构体数组	135
4.10  块	136
4.10.1  块的基本语法	136
4.10.2  块与局部变量	137
4.10.3  直接使用块作为参数	139
4.10.4  使用typedef定义块变量类型	139
4.11  小结	140
第5章　面向对象（上）	141
5.1  类和对象	142
5.1.1  定义类	142
5.1.2  对象的产生和使用	146
5.1.3  对象和指针	148
5.1.4  self关键字	150
5.1.5  id类型	153
5.2  方法详解	154
5.2.1  方法的所属性	154
5.2.2  形参个数可变的方法	155
5.3  成员变量	156
5.3.1  成员变量及其运行机制	156
5.3.2  模拟类变量	158
5.3.3  单例（Singleton）模式	159
5.4  隐藏和封装	160
5.4.1  理解封装	161
5.4.2  使用访问控制符	161
5.4.3  理解@package访问控制符	165
5.4.4  合成存取方法	166
5.4.5  使用点语法访问属性	171
5.5  键值编码（KVC）与键值监听（KVO）172
5.5.1  简单的KVC	172
5.5.2  处理不存在的key	175
5.5.3  处理nil值	176
5.5.4  Key路径	178
5.5.5  键值监听（KVO）	179
5.6  对象初始化	182
5.6.1  为对象分配空间	182
5.6.2  初始化方法与对象初始化	183
5.6.3  便利的初始化方法	185
5.7  类的继承	187
5.7.1  继承的特点	187
5.7.2  重写父类的方法	189
5.7.3  super关键字	190
5.8  多态	193
5.8.1  多态性	193
5.8.2  指针变量的强制类型转换	196
5.8.3  判断指针变量的实际类型	197
5.9  小结	198
第6章　面向对象（下）	199
6.1  Objective-C的包装类	200
6.1.1  它们不是包装类	200
6.1.2  NSValue和NSNumber	201
6.2  处理对象	202
6.2.1  打印对象和description方法	202
6.2.2  ==和isEqual方法	205
6.3  类别与扩展	209
6.3.1  类别（category）	210
6.3.2  利用类别对类进行模块化设计	212
6.3.3  使用类别来调用私有方法	212
6.3.4  扩展（extension）	214
6.4  协议（protocol）与委托	216
6.4.1  规范、协议与接口	216
6.4.2  使用类别实现非正式协议	217
6.4.3  正式协议的定义	218
6.4.4  遵守（实现）协议	219
6.4.5  协议与委托（delegate）	222
6.5  使用@try处理异常	225
6.5.1  使用@try...@catch...@finally捕捉异常	226
6.5.2  访问异常信息	228
6.5.3  使用@finally回收资源	229
6.5.4  抛出异常与自定义异常类	230
6.6  Objective-C反射机制	232
6.6.1  获得Class	232
6.6.2  检查继承关系	233
6.6.3  动态调用方法	235
6.7  手动内存管理	237
6.7.1  对象的引用计数	239
6.7.2  对象所属权	241
6.7.3  方法中的保留和释放	243
6.7.4  使用自动释放池	245
6.7.5  自动释放池的销毁时机与工作过程	246
6.7.6  临时对象与事件循环中的自动释放池 	248
6.7.7  手动内存管理的规则总结	249
6.8  自动引用计数	250
6.8.1  自动引用计数概述	250
6.8.2  @autoreleasepool块	251
6.9  小结	251
第7章　Foundation框架详解	252
7.1  字符串（NSString与NSMutableString）	253
7.1.1  创建字符串	253
7.1.2  NSString的常用功能	254
7.1.3  可变字符串（NSMutableString） 	255
7.2  日期与时间	256
7.2.1  日期与时间（NSDate）	256
7.2.2  日期格式器（NSDateFormatter）	258
7.2.3  日历（NSCalendar）与日期组件（NSDateComponents）	260
7.2.4  定时器（NSTimer）	261
7.3  对象复制	263
7.3.1  copy与mutableCopy方法	263
7.3.2  NSCopying与NSMutableCopy协议	264
7.3.3  浅复制与深复制	266
7.3.4  setter方法的复制选项	268
7.4  Objective-C集合概述	269
7.5  数组（NSArray与NSMutableArray）	270
7.5.1  NSArray的功能与用法	270
7.5.2  对集合元素整体调用方法	275
7.5.3  对NSArray进行排序	276
7.5.4  使用枚举器遍历NSArray集合元素	278
7.5.5  快速枚举（for…in）	279
7.5.6  可变数组（NSMutableArray）	279
7.5.7  NSArray的KVC与KVO	281
7.6  集合（NSSet与NSMutableSet）	282
7.6.1  NSSet的功能与用法	282
7.6.2  NSSet判断集合元素重复的标准	285
7.6.3  NSMutableSet的功能与用法	288
7.6.4  NSCountedSet的功能与用法	289
7.7  有序集合（NSOrderedSet与NSMutableOrderedSet）	290
7.8  字典（NSDictionary与NSMutableDictionary）	291
7.8.1  NSDictionary的功能与用法	292
7.8.2  对NSDictionary的key排序	295
7.8.3  对NSDictionary的key进行过滤	297
7.8.4  使用自定义类作为NSDictionary的key	298
7.8.5  NSMutableDictionary的功能与用法	299
7.9  谓词	301
7.9.1  定义谓词	301
7.9.2  使用谓词过滤集合	302
7.9.3  在谓词中使用占位符参数	303
7.9.4  谓词表达式语法	305
7.9  小结	307
第8章　文件I/O	308
8.1  使用NSData与NSMutableData	309
8.2  使用NSFileManager管理文件和
8.2.1  访问文件属性和内容	311
8.2.2  创建、删除、移动、复制	312
8.2.3  查看目录包含的内容	313
8.3  使用NSPathUtilities.h管理路径	314
8.4  使用ProcessInfo获取进程信息	316
8.5  使用NSFileHandle处理文件IO	317
8.6  使用NSURL读取网络资源	319
8.7  使用NSBundle处理项目相关资源	320
8.8  对象归档	322
8.8.1  使用NSKeyedArchiver归档	322
8.8.2  实现NSCoding协议	323
8.8.3  使用NSData完成自定义归档	326
8.8.4  使用归档实现深复制	329
8.9  小结	330
第9章　iOS应用开发入门	331
9.1  从iOS项目开始	332
9.1.1  iOS项目包含的文件	332
9.1.2  Interface Builder简介	333
9.1.3  向nib文件添加控件	336
9.1.4  修改控件属性	338
9.1.5  UIView支持的属性	339
9.1.6  UILabel支持的属性	340
9.2  MVC	342
9.2.1  从程序入口开始	342
9.2.2  应用程序委托	343
9.2.3  理解iOS的MVC	346
9.2.4  掌握UIViewController控制器	347
9.3  事件机制	349
9.3.1  程序获取控件的两种方式	349
9.3.2  事件处理的方式	353
9.4  Storyboard的改进之处	358
9.5  代码控制UI界面	360
9.5.1  不使用界面布局文件开发UI界面	360
实例：无界面布局文件开发iOS应用	360
9.5.2  使用代码创建UI界面	362
实例：动态添加、删除标签	362
9.4.3  自定义UI控件	364
实例：跟随手指运动的小球	365
9.6  美化iOS应用	367
9.5.1  定制iOS应用图标	367
9.5.2  设置iOS应用的启动画面	367
9.6  小结	369
第10章　iOS应用的界面编程	370
10.1  UI控件概述	371
10.1.1  活动、静态和被动控件	371
10.1.2  UIControl基类介绍	372
10.2  按钮（UIButton）	373
实例：丰富多彩的按钮	376
10.3  文本框（UITextField）	377
实例：用户登录界面	379
10.3.1  完成输入后关闭键盘	380
10.3.2  触碰背景关闭键盘	381
10.4  多行文本控件（UITextView）	382
10.4.1  UIScrollView支持的属性	383
10.4.2  使用委托对象处理UITextView事件	385
实例：导航按钮关闭虚拟键盘	385
实例：自定义键盘附件关闭虚拟键盘	387
10.4.3  自定义选择内容后的菜单	389
10.5  开关按钮（UISwitch）	390
实例：使用开关控制“手电筒”	390
10.6  分段控件（UISegmentedControl）	391
实例1：通过分段控件控制背景颜色	393
实例2：动态增加、删除分段	394
10.7  图像控件（UIImageView）	395
实例1：图片浏览器	396
实例2：“幻灯片”播放器	398
10.8  进度条	399
10.8.1  UIProgressView	399
实例：定制进度条	400
10.8.2  UIActivityIndicatorView	401
10.9  拖动条（UISlider）	403
实例：通过拖动滑块改变图片透明度	404
10.10  警告框（UIAlertView）与UIActionSheet	405
10.10.1  UIAlertView的基本用法	405
10.10.2  带输入框的UIAlertView	407
10.10.3  使用UIActionSheet	409
10.11  日期选择器（UIDatePicker）	411
实例：倒计时器	413
10.12  选择器（UIPickerView）	415
10.12.1  单列选择器	416
10.12.2  多列选择器	417
10.12.3  相互依赖的多列选择器	419
10.12.4  自定义选择器视图	421
实例：“老虎机”游戏	421
10.13  微调器（UIStepper）	426
10.14  网页控件（UIWebView）	428
实例：迷你浏览器	430
10.15  工具条（UIToolbar）	431
实例：自定义工具条控件	433
10.16  表格（UITableView）与表格控制器　（UITableViewController）	435
10.16.1  简单表格 437
10.16.2  处理单元格的选中	440
实例：编辑选中行	441
10.16.3  定制表格行	446
实例1：继承UITableViewCell定制表格行	446
实例2：使用动态单元格原型定制表格行	449
实例3：利用xib文件定制表格行	451
10.16.4  编辑表格	454
10.16.5  多分区表格以及分区索引	459
10.16.6  直接使用	UITableViewController	461
10.16.7  静态单元格	464
10.16.8  使用iOS 6新增的UIRefresh Controller刷新表格	465
10.17  搜索条（UISearchBar）	467
10.17.1  使用搜索条	468
10.17.2  使用UISearchDisplayController  471
实例：下拉列表显示搜索结果	471
10.18  导航条（UINavigationBar）与导航 条控制器（UINavigationController）	475
10.18.1  使用导航条	475
10.18.2  使用UINavigationController	477
实例：查看、编辑图书信息	479
10.18.3  使用segue控制过渡	484
10.18.4  使用segue控制导航	487
10.19  网格（UICollectionView）与网格控制器（UICollectionViewController）	490
10.19.1  UICollectionView的功能与用法	492
10.19.2  使用UICollectionViewDelegate FlowLayout定制布局	497
实例：单元格大小不同的网格	497
10.19.3  扩展UICollectionViewLayout定制布局	498
实例：环形布局的UICollectionView	499
10.19.4  多分区网格	502
实例：带页眉、页脚的多分区网格	502
10.19.5  直接使用UICollectionViewController	505
10.20  标签条（UITabBar）与标签页控制器（UITabBarController）	509
10.20.1  使用UITabBar	509
10.20.2  使用UITabBarController 511
10.20.3  在Storyboard中使用UITabBarController	514
10.21  页控件（UIPageControl）与页控制器（UIPageViewController）	515
10.21.1  UIPageControl与UIScrollView结合使用	515
10.21.2  使用UIPageViewController	519
10.22  iPad应用开发	523
10.22.1  使用iPad专用控件：UISplitViewController 523
10.22.2  使用UIPopoverController实现浮动窗口	530
10.22.3  开发同时兼容iPhone与iPad 的应用	532
10.23  小结	535
第11章　管理iOS应用的运行	537
11.1  自动旋转机制	538
11.1.1  配置应用支持的方向	538
11.1.2  指定视图控制器支持的方向	540
11.2  旋转时重构用户界面	541
11.3  旋转时切换视图	543
11.4  iOS应用的生命周期	546
11.4.1  应用程序的状态	547
11.4.2  应用程序启动过程	548
11.4.3  程序入口：main函数	549
11.4.4  响应中断	550
11.4.5  进入后台	552
11.4.6  返回前台运行	553
11.4.7  应用程序终止	554
11.4.8  Main Run Loop	554
11.5  小结	555
第12章　图形、图像与动画	556
12.1  使用UIImage和CGImage处理位图	557
12.1.1  显示动画	557
实例：蝴蝶飞舞	559
12.1.2  CGImage与CGImageRef	559
12.2  Quartz 2D绘图	560
12.2.1  Quartz 2D绘图基础：CGContextRef	560
12.2.2  绘制几何图形	563
12.2.3  点线模式	565
12.2.4  绘制文本	569
12.2.5  设置阴影	572
12.2.6  使用路径	573
实例：绘制任意多角星	577
12.2.7  绘制曲线	578
实例：使用曲线绘制多瓣花朵	579
12.2.8  在内存中绘图	580
实例：绘图板	583
12.2.9  绘制位图	587
实例：扩展UIImage的功能	588
12.3  图形变换	593
12.3.1  使用坐标变换	593
12.3.2  坐标变换与路径结合使用	594
实例：雪花飘飘	594
12.3.3  使用矩阵变换	596
12.4  控制叠加模式	599
12.5  处理填充	604
12.5.1  渐变填充	605
12.5.2  模式填充	609
12.6  使用Core Image滤镜	614
12.7  动画	621
12.7.1  Core Animation动画基础	621
12.7.2  使用CALayer	622
12.7.3  使用CATransition控制过渡动画	625
12.7.4  使用属性动画	629
12.7.5  控制移动路径	634
实例：绕圈游动的小鱼	634
12.8  小结	636
第13章　疯狂连连看	637
13.1  游戏简介	638
13.2  开发游戏界面	639
13.2.1  开发界面布局	639
13.2.2  开发游戏界面控件	639
13.2.3  处理方块之间的连接线	644
13.3  游戏的状态数据模型	646
13.3.1  定义数据模型	646
13.3.2  初始化游戏状态数据	647
13.4  加载界面的图片	651
13.5  实现游戏视图控制器	653
13.6  实现游戏逻辑	655
13.6.1  定义FKGameService的接口代码	655
13.6.2  实现FKGameService	656
13.6.3  获取触碰点的方块	657
13.6.4  判断两个方块是否可以相连	658
13.6.5  定义获取通道的工具方法	659
13.6.6  没有转折点的横向连接	661
13.6.7  没有转折点的纵向连接	661
13.6.8  一个转折点的连接	662
13.6.9  两个转折点的连接	665
13.6.10  找出最短距离	671
13.7  小结	673
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>疯狂iOS 讲义（上） Objective-C 2.0与iPhone/iPad应用开发基础
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS网络高级编程：iPhone和iPad的企业应用开发
目    录
第Ⅰ部分  理解iOS与企业网络
第1章  iOS网络功能介绍	3
1.1  理解网络框架	3
1.2  iOS网络API	4
1.2.1  NSURLConnection	4
1.2.2  Game Kit	5
1.2.3  Bonjour	5
1.2.4  NSStream	5
1.2.5  CFNetwork	6
1.2.6  BSD socket	6
1.3  运行循环	6
1.4  小结	8
第2章  设计服务架构	9
2.1  远程门面模式	10
2.1.1  门面服务示例	12
2.1.2  门面客户端示例	14
2.2  服务版本化	17
2.2.1  版本化服务示例	18
2.2.2  使用版本化服务的客户端示例	18
2.3  服务定位器	20
2.4  小结	24
第Ⅱ部分  HTTP请求：iOS网络功能
第3章  构建请求	27
3.1  HTTP介绍	28
3.2  理解HTTP请求与响应	29
3.2.1  URL结构	30
3.2.2  请求内容	31
3.2.3  响应内容	33
3.3  高层iOS HTTP API	34
3.3.1  所有请求类型共用的对象	34
3.3.2  同步请求	38
3.3.3  队列式异步请求	41
3.3.4  异步请求	43
3.4  高级HTTP操作	51
3.4.1  使用请求方法	51
3.4.2  操纵Cookie	53
3.4.3  头信息操作进阶	58
3.5  小结	61
第4章  生成与解析负载	63
4.1  Web Service协议与风格	64
4.1.1  简单对象访问协议	64
4.1.2  表述性状态转移	65
4.1.3  选择一种方式	66
4.2  负载	67
4.2.1  负载数据格式简介	67
4.2.2  解析响应负载	70
4.2.3  生成请求负载	83
4.3  小结	90
第5章  错误处理	91
5.1  理解错误源	91
5.1.1  操作系统错误	93
5.1.2  HTTP错误	98
5.1.3  应用错误	99
5.2  错误处理的经验法则	101
5.2.1  在接口契约中处理错误	101
5.2.2  错误状态可能不正确	101
5.2.3  验证负载	101
5.2.4  分离错误与正常的业务状况	102
5.2.5  总是检查HTTP状态	102
5.2.6  总是检查NSError值	102
5.2.7  使用一致的方法来处理错误	102
5.2.8  总是设置超时时间	102
5.3  优雅地处理网络错误	102
5.3.1  设计模式介绍	103
5.3.2  指挥调度模式示例	107
5.4  小结	112
第Ⅲ部分  高级网络技术
第6章  保护网络传输	115
6.1  验证服务器通信	116
6.2  HTTP认证	120
6.2.1  HTTP Basic、HTTP Digest与NTLM认证	120
6.2.2  客户端证书认证	122
6.3  使用哈希与加密确保消息完整性	126
6.3.1  哈希	127
6.3.2  消息认证码	130
6.3.3  加密	134
6.4  在设备上安全地存储认证信息	145
6.5  小结	148
第7章  优化请求性能	149
7.1  度量网络性能	149
7.1.1  网络带宽	150
7.1.2  网络延迟	151
7.1.3  设备电量	152
7.2  优化网络操作	153
7.2.1  减少请求带宽	153
7.2.2  降低请求延迟	159
7.2.3  避免网络请求	160
7.3  小结	163
第8章  底层网络	165
8.1  BSD Socket	165
8.1.1  配置Socket服务器	167
8.1.2  Socket客户端连接	167
8.2  CFNetwork	172
8.3  NSStream	176
8.4  小结	180
第9章  测试与操纵网络流量	181
9.1  观测网络流量	182
9.1.1  嗅探硬件	182
9.1.2  嗅探软件	183
9.2  操纵网络流量	190
9.2.1  配置Charles	192
9.2.2  HTTP断点	194
9.2.3  重写规则	196
9.3  模拟实际的网络状况	198
9.4  小结	200
第10章  使用推送通知	201
10.1  调度本地通知	202
10.1.1  创建本地通知	202
10.1.2  取消本地通知	205
10.1.3  处理本地通知的到达	207
10.2  注册并响应远程通知	210
10.2.1  配置远程通知	211
10.2.2  注册远程通知	217
10.2.3  远程通知负载	222
10.2.4  发送远程通知	223
10.2.5  响应远程通知	227
10.3  理解通知最佳实践	231
10.4  小结	232
第Ⅳ部分  应用间网络通信
第11章  应用间通信	235
11.1  URL方案	235
11.1.1  实现自定义的URL方案	236
11.1.2  感知其他应用的存在	239
11.1.3  高级通信	240
11.2  共享钥匙串	244
11.2.1  企业SSO	244
11.2.2  检测应用之前的安装	250
11.3  小结	252
第12章  使用Game Kit实现设备间通信	253
12.1  Game Kit基础	254
12.2  点对点网络	257
12.2.1  连接到会话	257
12.2.2  向端点发送数据	260
12.3  客户端-服务器通信	264
12.4  小结	266
第13章  使用Bonjour实现自组织网络	267
13.1  zeroconf概览	268
13.1.1  寻址	268
13.1.2  解析	268
13.1.3  探测	269
13.2  Bonjour概览	270
13.2.1  发布服务	270
13.2.2  浏览服务	275
13.2.3  解析服务	278
13.2.4  与服务进行通信	280
13.3  实现基于Bonjour的应用	284
13.3.1  员工应用	285
13.3.2  顾客应用	293
13.4  小结	302
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS网络高级编程：iPhone和iPad的企业应用开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>養成 iOS 7 App 程式設計實力的30堂課
Chapter 01　Hello World！開始你的第一個iPhone App
Chapter 02　Hello World App 是如何運作的？
Chapter 03　建立一個簡單的表格App
Chapter 04　使用Prototype Cell 自訂表格視圖
Chapter 05　處理表格視圖列的點選
Chapter 06　表格列刪除與模型－視圖－控制器
Chapter 07　使用Property List 來加強你的表格App
Chapter 08　幫你的iOS App 加上啟動畫面
Chapter 09　建立導覽控制器
Chapter 10　在不同視圖控制器間傳遞資料
Chapter 11　學習如何使用標籤欄控制器與網頁視圖
Chapter 12　物件導向程式語言介紹
Chapter 13　以更棒的視圖控制器來改善你的食譜App
Chapter 14　幫表格視圖加上搜尋欄
Chapter 15　使用UICollectionView建立網格佈局（Grid Layout）
Chapter 16　幫UICollectionView加上標頭及註腳視圖
Chapter 17　處理集合視圖的選取動作
Chapter 18　Core DataⅠ：Core Data 介紹
Chapter 19　Core Data Ⅱ：更新與刪除託管物件
Chapter 20　App 本地化－支援多國語系
Chapter 21　使用Storyboard 建立靜態表格視圖
Chapter 22　建立一個簡單的RSS閱讀器
Chapter 23　使用UIImagePickerController建構一個簡單相機App
Chapter 24　影片錄製與播放
Chapter 25　幫你的iOS App 加入本地通知
Chapter 26　要如何使用UIPageViewController來建立導引畫面
Chapter 27　加入側邊滑動選單到你的App
Chapter 28　運用Parse 為你的iOS App 加上雲端後台Ⅰ
Chapter 29　運用Parse 為你的iOS App 加上雲端後台Ⅱ
Chapter 30　AirDrop
Appendix A　Objective-C基礎
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>養成 iOS 7 App 程式設計實力的30堂課
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通iOS开发（第6版）
第1章　欢迎来到iOS世界　　1
1.1　关于本书　　1
1.2　必要条件　　1
1.2.1　开发者选项　　3
1.2.2　必备知识　　3
1.3　编写iOS应用程序有何不同　　4
1.3.1　只能同时运行一个应用　　4
1.3.2　只有一个窗口　　4
1.3.3　有限的访问权限　　5
1.3.4　有限的响应时间　　5
1.3.5　有限的屏幕大小　　5
1.3.6　有限的系统资源　　5
1.3.7　不支持垃圾回收　　6
1.3.8　新功能　　6
1.3.9　与众不同的交互方法　　6
1.4　本书内容　　7
1.5　这一版的新内容　　8
1.6　准备开始吧　　9
第2章　创建项目　　10
2.1　在Xcode中创建项目　　10
2.1.1　Xcode项目窗口　　14
2.1.2　深入研究项目　　22
2.2　界面构建器简介　　23
2.2.1　文件格式　　24
2.2.2　分镜　　25
2.2.3　库　　26
2.2.4　在视图中添加标签　　27
2.2.5　属性修改　　29
2.3　画龙点睛——美化iPhone应用　　31
2.4　小结　　33
第3章　实现基本交互　　34
3.1　MVC方法　　34
3.2　创建项目　　35
3.3　视图控制器　　36
3.3.1　输出接口和操作方法　　37
3.3.2　清理视图控制器　　40
3.3.3　设计用户界面　　40
3.3.4　运行应用　　50
3.3.5　样式文本　　50
3.4　应用程序委托　　51
3.5　小结　　54
第4章　更丰富的用户界面　　55
4.1　满是控件的屏幕　　55
4.2　活跃控件、静态控件和被动控件　　57
4.3　创建应用程序　　58
4.4　实现图像视图和文本框　　59
4.4.1　添加图像视图　　59
4.4.2　调整图像视图的大小　　62
4.4.3　设置视图属性　　63
4.4.4　添加文本框　　65
4.4.5　创建并关联输出接口　　71
4.5　关闭键盘　　73
4.5.1　输入完成后关闭键盘　　73
4.5.2　通过触摸背景关闭键盘　　74
4.5.3　添加滑动条和标签　　77
4.5.4　添加顶部约束　　78
4.5.5　创建并关联操作方法和输出接口　　79
4.5.6　实现操作方法　　79
4.6　实现开关、按钮和分段控件　　80
4.6.1　添加两个带标签的开关　　81
4.6.2　为开关创建并关联输出接口和操作方法　　83
4.6.3　实现开关的操作方法　　83
4.7　美化按钮　　85
4.7.1　可拉伸图像　　85
4.7.2　控件状态　　86
4.7.3　为按钮创建并关联输出接口和操作方法　　87
4.8　实现分段控件的操作方法　　87
4.9　实现操作表单和警告视图　　88
4.9.1　遵从操作表单委托方法　　88
4.9.2　显示操作表单　　89
4.9.3　最终调整　　92
4.10　小结　　92
第5章　自动旋转和自动调整大小　　93
5.1　自动旋转机制　　93
5.1.1　点、像素和Retina显示屏　　94
5.1.2　自动旋转的实现方式　　95
5.2　选择视图支持的方向　　95
5.2.1　应用级支持的方向　　96
5.2.2　单个控制器的旋转支持　　97
5.3　使用约束设计界面　　99
5.3.1　覆盖默认的约束　　101
5.3.2　与屏幕等宽的标签　　102
5.4　旋转时重构视图　　104
5.4.1　创建并关联输出接口　　106
5.4.2　旋转时移动按钮　　106
5.5　小结　　109
第6章　多视图应用　　110
6.1　多视图应用的常见类型　　110
6.2　多视图应用的体系结构　　113
6.2.1　根控制器　　115
6.2.2　内容视图剖析　　116
6.3　构建View Switcher项目　　116
6.3.1　创建视图控制器和分镜　　117
6.3.2　修改应用委托　　119
6.3.3　修改BIDSwitchView Controller.m　　120
6.3.4　添加视图控制器　　120
6.3.5　构建带有工具栏的视图　　122
6.3.6　编写根视图控制器　　124
6.3.7　实现内容视图　　127
6.3.8　转换过程的动画效果　　130
6.4　小结　　132
第7章　分页栏与选取器　　133
7.1　Pickers应用程序　　134
7.2　委托和数据源　　136
7.3　创建Pickers应用程序　　136
7.3.1　创建视图控制器　　136
7.3.2　添加分镜　　137
7.3.3　创建分页栏控制器　　138
7.3.4　初次运行　　140
7.4　实现日期选取器　　141
7.5　实现单滚轮选取器　　144
7.5.1　构建视图　　144
7.5.2　将控制器实现为数据源和委托　　145
7.6　实现多滚轮取器　　149
7.6.1　声明输出接口和操作方法　　149
7.6.2　构建视图　　149
7.6.3　实现控制器　　150
7.7　实现内容取决于滚轮　　152
7.8　使用自定义选取器创建一个简单游戏　　158
7.8.1　编写控制器头文件　　158
7.8.2　构建视图　　159
7.8.3　添加图像资源　　160
7.8.4　实现控制器　　160
7.8.5　最后的细节　　163
7.9　小结　　166
第8章　表视图简介　　167
8.1　表视图基础　　167
8.1.1　表视图和表视图单元　　168
8.1.2　分组表和无格式表　　168
8.2　实现一个简单表　　170
8.2.1　设计视图　　170
8.2.2　编写控制器　　171
8.2.3　添加一个图像　　175
8.2.4　表视图单元样式　　176
8.2.5　设置缩进级别　　178
8.2.6　处理行的选择　　179
8.2.7　更改字体大小和行高　　180
8.3　定制表视图单元　　182
8.3.1　向表视图单元添加子视图　　182
8.3.2　创建UITableViewCell子类　　183
8.3.3　从nib文件加载UITableViewCell　　187
8.4　分组分区和索引分区　　191
8.4.1　构建视图　　191
8.4.2　导入数据　　191
8.4.3　实现控制器　　192
8.4.4　添加索引　　196
8.5　解决状态栏干扰　　197
8.6　实现搜索栏　　198
8.7　小结　　203
第9章　导航控制器和表视图　　204
9.1　导航控制器　　204
9.1.1　栈的概念　　204
9.1.2　控制器栈　　205
9.2　一个简单的字体浏览器：Fonts　　206
9.2.1　子控制器　　207
9.2.2　Font应用的基础框架　　209
9.3　创建根视图控制器　　213
9.4　初始化分镜　　216
9.5　第一个子控制器：字体列表视图　　218
9.5.1　设定字体列表的分镜　　220
9.5.2　对根视图控制器的转场进行设置　　221
9.6　创建字体尺寸视图控制器　　222
9.6.1　设计字体尺寸视图控制器的分镜　　224
9.6.2　对字体列表视图控制器的转场进行设置　　224
9.7　创建字体信息视图控制器　　225
9.7.1　设计字体信息视图控制器的分镜　　226
9.7.2　设置约束　　227
9.7.3　调整字体列表视图控制器的转场　　228
9.7.4　我的收藏字体　　229
9.8　改善表视图　　229
9.8.1　实现轻扫删除　　230
9.8.2　实现拖动排序　　231
9.9　小结　　232
第10章　集合视图　　233
10.1　创建DialogViewer项目　　233
10.2　修补视图控制器类　　234
10.3　自定义单元　　235
10.4　配置视图控制器　　237
10.5　内容单元　　239
10.6　实现流式布局　　240
10.7　分区标题视图　　241
10.8　小结　　243
第11章　iPad开发注意事项　　244
11.1　分割视图和浮动窗口　　244
11.1.1　创建SplitView项目　　246
11.1.2　在分镜中定义结构　　248
11.1.3　使用代码定义功能　　250
11.2　显示总统信息　　256
11.3　创建浮动窗口　　261
11.4　小结　　267
第12章　应用设置及用户默认设置　　268
12.1　设置捆绑包入门　　268
12.2　应用：Bridge Control　　269
12.2.1　创建项目　　272
12.2.2　使用设置捆绑包　　273
12.2.3　读取应用中的设置　　286
12.2.4　在应用中修改默认设置　　289
12.2.5　注册默认值　　292
12.2.6　保证设置有效　　293
12.3　小结　　295
第13章　数据持久化基础知识　　296
13.1　应用的沙盒　　296
13.1.1　获取Documents目录　　297
13.1.2　获取tmp目录　　298
13.2　文件保存方案　　298
13.2.1　单文件持久化　　299
13.2.2　多文件持久化　　299
13.3　属性列表　　299
13.3.1　属性列表序列化　　299
13.3.2　Persistence应用的第一个版本　　300
13.4　对模型对象进行归档　　305
13.4.1　遵循NSCoding协议　　305
13.4.2　实现NSCopying协议　　306
13.4.3　对数据对象进行归档和取消归档　　307
13.4.4　归档应用　　308
13.5　使用iOS内嵌的SQLite3　　311
13.5.1　创建或打开数据库　　312
13.5.2　绑定变量　　313
13.5.3　SQLite3应用　　314
13.6　使用Core Data　　320
13.6.1　实体和托管对象　　321
13.6.2　Core Data应用　　324
13.7　小结　　333
第14章　iCloud之旅　　334
14.1　使用UIDocument管理文档存储　　334
14.1.1　构建TinyPix　　335
14.1.2　创建BIDTinyPixDocument类　　336
14.1.3　主控制器代码　　338
14.1.4　初始分镜　　345
14.1.5　创建BIDTinyPixView类　　347
14.1.6　设计分镜　　351
14.2　添加iCloud支持　　353
14.2.1　创建授权文件　　353
14.2.2　如何查询　　354
14.2.3　保存在哪里　　356
14.2.4　将首选项保存到iCloud　　357
14.3　小结　　358
第15章　Grand Central Dispatch和后台处理　　359
15.1　Grand Central Dispatch　　359
15.2　SlowWorker简介　　360
15.3　线程基础知识　　362
15.4　工作单元　　363
15.5　GCD：底层队列　　364
15.5.1　傻瓜式操作　　364
15.5.2　改进SlowWorker　　365
15.6　后台处理　　370
15.6.1　应用生命周期　　371
15.6.2　状态更改通知　　372
15.6.3　创建State Lab项目　　373
15.6.4　执行状态的变化　　374
15.6.5　利用执行状态更改　　376
15.6.6　处理不活跃状态　　377
15.6.7　处理后台状态　　380
15.7　小结　　387
第16章　使用Core Graphics绘图　　388
16.1　Quartz 2D基础概念　　388
16.2　Quartz 2D绘图方法　　388
16.2.1　Quartz 2D图形环境　　389
16.2.2　坐标系统　　390
16.2.3　指定颜色　　391
16.2.4　在环境中绘制图像　　393
16.2.5　绘制形状：多边形、直线和曲线　　393
16.2.6　Quartz 2D样例：图案、渐变色、虚线图　　394
16.3　QuartzFun应用程序　　394
16.3.1　构建QuartzFun应用程序　　395
16.3.2　添加Quartz 2D绘制代码　　404
16.3.3　优化QuartzFun应用程序　　409
16.4　小结　　412
第17章　Sprite Kit游戏框架　　413
17.1　基础入门　　413
17.1.1　自定义初始场景　　414
17.1.2　隐藏状态栏　　415
17.2　场景设置　　415
17.3　玩家动作　　418
17.3.1　向场景中插入玩家　　418
17.3.2　触摸处理　　419
17.3.3　玩家移动　　420
17.3.4　几何运算　　421
17.3.5　轻微摆动　　421
17.4　创建你的敌人　　422
17.5　在场景中放入敌人　　423
17.6　开始射击　　425
17.6.1　定义物理类别　　425
17.6.2　创建BIDBulletNode类　　425
17.6.3　应用物理知识　　427
17.6.4　在场景中添加导弹　　427
17.7　利用物理引擎攻击敌人　　429
17.8　实现关卡　　431
17.8.1　注意敌人　　431
17.8.2　进入下一关卡　　431
17.9　自定义碰撞　　433
17.9.1　为SKNode添加类别　　434
17.9.2　向敌人添加自定义碰撞行为　　435
17.9.3　准确显示玩家生命　　436
17.10　粒子系统　　437
17.10.1　第一个粒子　　437
17.10.2　向场景中加入粒子　　440
17.11　游戏结束　　441
17.12　开始场景　　443
17.13　播放音乐　　445
17.14　小结　　446
第18章　轻点、触摸和手势　　447
18.1　多点触控术语　　447
18.2　响应者链　　448
18.2.1　响应事件　　448
18.2.2　转发事件：保持响应者链的活动状态　　449
18.3　多点触控体系结构　　450
18.4　4个手势通知方法　　450
18.5　TouchExplorer应用　　451
18.6　Swipes应用　　454
18.6.1　自动手势识别　　457
18.6.2　实现多指轻扫　　459
18.7　检测多次轻点　　460
18.8　检测捏合和旋转　　465
18.9　自定义手势　　469
18.9.1　CheckPlease应用　　470
18.9.2　CheckPlease的触摸方法　　472
18.10　小结　　474
第19章　Core Location和Map Kit　　475
19.1　位置管理器　　476
19.1.1　设置精度　　476
19.1.2　设置距离筛选器　　476
19.1.3　启动位置管理器　　477
19.1.4　合理使用位置管理器　　477
19.2　位置管理器委托　　477
19.2.1　获取位置更新　　477
19.2.2　使用CLLocation获取纬度和经度　　477
19.2.3　错误通知　　479
19.3　开始构建Core Location　　480
19.4　将移动路线展现在地图上　　484
19.5　小结　　488
第20章　陀螺仪和加速计　　489
20.1　加速计物理特性　　489
20.2　陀螺仪旋转特性　　490
20.3　Core Motion和动作管理器　　490
20.3.1　基于事件的动作　　491
20.3.2　主动动作访问　　496
20.3.3　加速计结果　　498
20.4　检测摇动　　498
20.4.1　内嵌的摇动检测　　499
20.4.2　摇动与击碎　　500
20.5　将加速计用做方向控制器　　502
20.5.1　滚弹珠程序　　503
20.5.2　实现BIDBallView类　　505
20.5.3　计算弹珠运动　　508
20.6　小结　　510
第21章　摄像头和照片库　　511
21.1　图像选取器和UIImagePicker-
Controller　　511
21.2　实现图像选取器控制器委托　　513
21.3　实际测试摄像头和照片库　　514
21.3.1　设计界面　　515
21.3.2　实现摄像头视图控制器　　515
21.4　小结　　519
第22章　应用本地化　　520
22.1　本地化体系结构　　520
22.2　字符串文件　　521
22.2.1　字符串文件　　522
22.2.2　本地化的字符串宏　　522
22.3　现实中的iOS本地化应用　　523
22.3.1　创建LocalizeMe　　523
22.3.2　测试LocalizeMe　　526
22.3.3　本地化项目　　527
22.3.4　初始化分镜　　530
22.3.5　创建并本地化字符串文件　　532
22.3.6　应用显示名称的本地化　　535
22.4　小结　　536

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通iOS开发（第6版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS Web应用开发
目 录

第1章 　移动触摸设备的新思路　　1
1.1 　为什么要选择移动互联网　　1
1.1.1 　从桌面端到移动端　　1
1.1.2 　移动市场　　3
1.1.3 　为何现在就进军移动领域　　4
1.1.4 　面向移动的做法　　4
1.1.5 　面向移动的指南　　5
1.2 　Apple的移动设备硬件　　6
1.3 　小结　　6
第2章 　为iOS设备打造的敏捷项目　　7
2.1 　实现移动信息架构　　7
2.1.1 　信息架构及其重要性　　8
2.1.2 　遵循移动策略的黄金法则　　16
2.1.3 　纯内容标注法　　17
2.1.4 　使用站点导航图来表现信息
架构　　18
2.1.5 　使用线框图草拟信息架构　　21
2.1.6 　通过原型将交互可视化　　22
2.2 　移动设计的系统方法　　24
2.2.1 　 苹果设备的可访问性　　25
2.2.2 　 iOS设备的可用性　　28
2.2.3 　 iPhone页面模型　　32
2.2.4 　 iPhone用户界面　　33
2.2.5 　 iPad块模型　　35
2.2.6 　 iPad用户界面　　37
2.2.7 　用于苹果移动设计的工具　　39
2.3 　小结　　39
第3章 　针对iOS设备的Web开发　　41
3.1 　Web开发工具　　41
3.1.1 　开发框架　　42
3.1.2 　移动网站　　48
3.2 　移动应用　　49
3.3 　Web开发模型　　50
3.3.1 　Web开发模型的优缺点　　50
3.3.2 　开发Web应用的四种方法　　54
3.3.3 　Web应用和原生应用在用户眼中的区别　　56
3.3.4 　Web标准：HTML、CSS及JavaScript　　59
3.3.5 　浏览器对标准的支持情况：WebKit和Safari　　86
3.4 　SDK开发模型　　92
3.4.1 　苹果的Objective-C、Cocoa Touch以及Xtools模型　　93
3.4.2 　我是一台Mac电脑　　95
3.4.3 　用于苹果移动开发的工具和框架　　96
3.5 　小结　　96
第4章 　针对iOS设备的用户界面设计　　97
4.1 　用户界面设计　　97
4.1.1 　什么是界面　　98
4.1.2 　万物皆界面　　100
4.1.3 　负空间　　105
4.1.4 　色彩心理学　　110
4.1.5 　界面层次　　117
4.1.6 　阅读模式　　118
4.1.7 　用户界面设计流程　　125
4.2 　兼容iPhone和iPad的用户界面设计　　127
4.2.1 　调研　　128
4.2.2 　结构　　130
4.2.3 　美工　　133
4.2.4 　交互　　133
4.2.5 　可交付结果　　134
4.3 　iPad类原生用户界面设计　　135
4.3.1 　调研　　135
4.3.2 　结构　　135
4.3.3 　美工　　136
4.3.4 　交互　　137
4.3.5 　可交付结果　　138
4.4 　iPhone类原生用户界面设计　　138
4.4.1 　调研　　138
4.4.2 　结构　　138
4.4.3 　美工　　139
4.4.4 　交互　　140
4.4.5 　可交付结果　　141
4.4.6 　用于用户界面设计的工具　　141
4.5 　小结　　142
第5章 　iPhone用户界面设计：简化思维　　143
5.1 　草绘用户界面　　143
5.2 　简化思维　　143
5.2.1 　iPhone是随身携带的设备　　144
5.2.2 　iPhone页面模型的本质　　144
5.2.3 　iPhone的局限性　　144
5.2.4 　用户认知资源的本质　　144
5.3 　草绘剖析　　145
5.4 　使用工具来设计　　147
5.4.1 　探索Balsamiq Mockups界面　　148
5.4.2 　描绘关联性　　149
5.5 　使用Adobe Fireworks来设计　　150
5.5.1 　创建画布　　151
5.5.2 　整理图层　　152
5.5.3 　布局设计　　152
5.5.4 　界面设计　　153
5.5.5 　复用设计　　158
5.5.6 　用于用户界面设计的工具　　160
5.6 　小结　　160
第6章 　iPad用户界面设计：逆向思维　　161
6.1 　草绘用户界面　　161
6.2 　逆向思维　　161
6.2.1 　逆向简化　　162
6.2.2 　删减与优选　　163
6.2.3 　隐藏与改造　　164
6.2.4 　收缩与分组　　165
6.2.5 　“简单?复杂”悖论的关键点　　166
6.2.6 　草绘用户界面　　166
6.3 　使用工具进行设计　　168
6.4 　使用Adobe Fireworks来设计　　174
6.4.1 　iPad兼容版　　174
6.4.2 　iPad类原生版　　183
6.4.3 　用于用户界面设计的工具　　190
6.5 　小结　　191
第7章 　WebKit所支持的Web标准：充分发挥Mobile Safari的能力　　192
7.1 　iPhone和iPad的Web表现对比　　192
7.2 　HTML5　　192
7.2.1 　HTML5标记语法　　193
7.2.2 　HTML5重新定义过的标签　　194
7.2.3 　HTML5语义　　195
7.2.4 　HTML5媒体　　197
7.3 　CSS3　　217
7.3.1 　前缀　　217
7.3.2 　圆角边框　　218
7.3.3 　边框图片　　218
7.3.4 　渐变　　219
7.3.5 　盒子尺寸标准　　219
7.3.6 　盒子阴影　　220
7.3.7 　轮廓　　220
7.3.8 　背景尺寸　　221
7.3.9 　背景起点　　221
7.3.10 　多重背景　　222
7.3.11 　文字阴影　　222
7.3.12 　文本溢出　　223
7.3.13 　单词换行　　223
7.3.14 　线上字体　　224
7.3.15 　轻触高亮　　224
7.3.16 　多列布局　　225
7.3.17 　横跨多列　　225
7.3.18 　过渡　　226
7.3.19 　变换　　226
7.3.20 　动画　　228
7.3.21 　关键帧　　230
7.3.22 　倒影　　230
7.4 　JavaScript　　231
7.4.1 　在网页上添加JavaScript　　232
7.4.2 　JavaScript结构　　233
7.4.3 　数据类型分类　　234
7.4.4 　保留字　　235
7.4.5 　变量　　236
7.4.6 　运算符　　238
7.4.7 　条件语句　　239
7.4.8 　循环语句　　241
7.4.9 　函数　　242
7.4.10 　变量作用域　　243
7.4.11 　数组　　244
7.4.12 　字符串　　245
7.4.13 　对象　　246
7.4.14 　浏览器对象模型　　247
7.4.15 　文档对象模型　　248
7.4.16 　对比DOM和HTML结构　　249
7.4.17 　操作DOM　　250
7.4.18 　一些JavaScript的最佳实践　　253
7.4.19 　与Web标准有关的资源　　253
7.5 　小结　　254
第8章 　原生iOS环境开发　　255
8.1 　配置环境　　255
8.2 　视口的定义　　256
8.3 　全屏模式应用　　258
8.4 　添加主屏幕图标　　259
8.5 　应用启动图片　　260
8.6 　应用重定向　　261
8.7 　配置Head标签部分　　262
8.8 　原生链接模拟　　263
8.9 　原生文本模拟　　263
8.10 　原生元素模拟　　264
8.11 　原生滚动模拟　　265
8.12 　原生iOS服务交互　　265
8.12.1 　电话应用　　265
8.12.2 　邮件应用　　266
8.12.3 　短信应用　　267
8.12.4 　地图应用　　267
8.13 　触摸事件和手势交互　　268
8.13.1 　触摸事件模式：触摸并不是点击　　269
8.13.2 　原生及自定义的触摸事件处理　　272
8.13.3 　创建可触摸的设计元素　　273
8.13.4 　设备朝向变更事件　　274
8.13.5 　屏幕朝向变更的媒体查询　　275
8.14 　扩展iOS开发框架　　276
8.15 　用于编写代码的资源　　278
8.16 　小结　　278
第9章 　原生iOS设计实现　　279
9.1 　iPhone页面模型的实现　　279
9.2 　实现类原生的页面结构　　279
9.3 　iPhone原生界面模拟　　280
9.3.1 　顶部栏部分　　280
9.3.2 　页面标题元素　　282
9.3.3 　面包屑导航栏　　284
9.3.4 　宣传内容区　　285
9.3.5 　菜单区　　288
9.3.6 　页脚部分　　290
9.4 　小结　　292
第10章 　优化iOS Web应用　　293
10.1 　iPad和iPhone兼容性　　293
10.2 　性能优化　　293
10.2.1 　代码优化　　294
10.2.2 　图片优化　　297
10.2.3 　应用压缩　　300
10.2.4 　可用性优化　　301
10.3 　离线可用的Web应用　　305
10.4 　移动SEO　　308
10.4.1 　搜索引擎的结构　　309
10.4.2 　面向搜索引擎的设计　　309
10.4.3 　可用于优化和SEO的工具　　315
10.5 　小结　　316
第11章 　测试iOS Web应用　　317
11.1 　Web开发生命周期　　317
11.2 　Web应用测试　　318
11.3 　敏捷测试　　318
11.4 　热图测试　　320
11.5 　组织一次测试　　321
11.5.1 　创建用例　　321
11.5.2 　创建物料　　324
11.6 　执行测试　　325
11.6.1 　纸面原型图　　326
11.6.2 　电子原型　　328
11.7 　评估测试　　328
11.8 　评估的变量和反馈　　329
11.8.1 　点触次数　　330
11.8.2 　错误次数　　330
11.8.3 　预计完成时间　　331
11.8.4 　收集反馈　　332
11.8.5 　评估技术　　333
11.9 　测试所需资源　　335
11.10 　小结　　335
第12章 　深入挖掘iOS Web应用市场　　337
12.1 　利用你的移动策略　　337
12.2 　如何推广你的Web应用　　337
12.2.1 　利用Beta测试邀请测试者　　338
12.2.2 　利用新闻发布　　339
12.2.3 　创建Web应用的宣传网站　　339
12.2.4 　使用邮件营销　　340
12.2.5 　创建YouTube视频教程　　341
12.2.6 　提交到苹果Web应用门户　　341
12.2.7 　提交到其他Web应用门户网站　　342
12.2.8 　利用社交网络的传播力　　344
12.3 　让Web应用创造收益　　345
12.4 　Web应用市场上的资源　　346
12.5 　小结　　347
第13章 　从移动互联网展望普适计算　　348
13.1 　移动设备、无线网络及蜂窝通信的爆发　　348
13.2 　下一代触屏和多点触控技术的用户体验　　349
13.3 　新技术、新用途以及新机遇　　349
13.4 　多点触控屏幕革命会为下一代计算机带来怎样的改变　　350
13.4.1 　从家用到普适计算与环境智能　　351
13.4.2 　通信与普适计算资源　　353
13.5 　小结　　354
索引　　355

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS Web应用开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS应用安全攻防实战
前言 .................................... xv
第1 章 你所知道的一切都是错的 ................................... 1
单一化方案的误解 ...............2
iOS 安全模型 ......................4
iOS 安全模型的组件 .....4
钥匙和锁存在一起 ...............7
密码等于弱安全 ..................8
数字取证击败加密 ...............9
外部数据同样也有风险 ......10
劫持流量 ............................10
数据可能很快就被偷走 ........................................ 11
谁都不要信，包括你的应用软件 ................................12
物理访问并非必需的 .........13
总结 ...................................14
第1 篇 攻击
第2 章 iOS 攻击基础 ......... 17
为什么要学习如何破解一台设备 ................................17
越狱解析 ............................18
开发者工具 .................18
终端用户越狱 ....................20
越狱一台iPhone .........21
DFU 模式 ....................22
不完美越狱和完美越狱 ........................................24
攻破设备并注入代码 .........24
构建定制代码 ..............25
分析你的二进制程序 .........27
测试你的二进制程序 .........29
代码守护化 .................31
以tar 归档包的形式部署恶意代码 .......................35
以RAM 磁盘形式部署恶意代码 ..........................36
练习 ...................................50
总结 ...................................50
第3 章 窃取文件系统 ......... 53
全盘加密 ............................53
固态NAND .................53
磁盘加密 .....................54
iOS 硬盘加密会让你在哪里失败 ..........................55
复制实时文件系统 .............56
DataTheft 载荷 ............56
定制launchd ................66
准备RAM 磁盘 ...........72
创建文件系统镜像 ......73
复制原始文件系统 .............75
RawTheft 载荷.............75
定制launchd ................80
准备RAM 磁盘 ...........81
创建文件系统镜像 ......82
练习 ...................................83
社会工程学的作用 .............83
无法正常使用的诱饵设备 ....................................84
未激活的诱饵设备 ......85
包含恶意代码的诱饵 ...86
密码工程学软件 ..........86
总结 ...................................87
第4 章 取证跟踪和数据泄露 ........................................ 89
提取照片的地理标签 .........90
被合并到一起的GPS 缓存 ...................................91
SQLite 数据库 ....................93
连接到一个数据库 ......93
SQLite 内建命令 .........94
执行SQL 查询 ............95
重要的数据库文件 ......95
联系人地址簿 ..............95
地址簿头像 .................97
Google 地图数据 .........99
日历事件 ................... 105
通话记录 ................... 105
电子邮件数据库 ........ 106
笔记 ........................... 107
照片元数据 ............... 108
短信 ........................... 108
Safari 书签 ................. 109
短信spotlight 缓存 .... 109
Safari Web 缓存 ......... 110
Web 应用缓存 ........... 110
WebKit 存储 .............. 110
语音邮件 ................... 110
对残余的数据库记录进行逆向 ................................. 111
短信草稿 .......................... 113
属性列表 .......................... 113
重要的属性列表文件 . 114
其他重要的文件 ............... 119
总结 ................................. 121
第5 章 对抗加密 .............. 123
Sogeti 数据保护工具 ........ 123
安装数据保护工具 .... 124
构建暴力破解器 ........ 125
构建需要的Python 库 ........................................ 126
提取加密密钥 .................. 126
KeyTheft 载荷 ........... 126
定制launchd .............. 127
准备RAM 磁盘 ......... 128
准备内核 ................... 129
执行暴力破解 ............ 130
解密钥匙链 ...................... 133
解密原始磁盘 .................. 135
解密iTunes 备份文件 ...... 137
通过间谍件对抗加密 ....... 137
SpyTheft 载荷............ 138
将spyd 守护化 .......... 143
定制launchd .............. 144
准备RAM 磁盘 ......... 145
执行载荷 ................... 145
练习 ................................. 146
总结 ................................. 146
第6 章 无法销毁的文件 ... 147
刮取HFS 日志 ................. 148
还原闲置空间 .................. 150
常被还原出来的数据 ....... 150
应用软件屏幕截图 .... 150
已删除的属性列表 .... 152
已删除的语音邮件和录音 .................................. 152
以删除的键盘缓存 .... 152
照片和其他个人信息 . 152
总结 ................................. 153
第7 章 操作运行时环境 ... 155
分析二进制软件 ............... 156
Mach-O 文件格式 ...... 156
class-dump-z 简介 ..... 160
符号表 ....................... 161
加密的二进制文件 ........... 163
计算偏移值 ............... 164
转储内存 ................... 165
将解密的代码复制回文件 .................................. 167
重置cryptid ............... 168
利用Cycript 操作运行时 . 170
安装Cycript .............. 171
使用Cycript .............. 171
破解简单的锁 ............ 173
替换方法 ................... 180
撒网搜寻数据 ............ 182
记录数据 ................... 185
更多严重的隐含问题 . 186
练习 ................................. 194
SpringBoard 动画 ...... 194
接听来电 ................... 195
屏幕截图 ................... 195
总结 ................................. 195
第8 章 操纵运行时库 ....... 197
Objective-C 程序解析 ...... 197
类实例变量 ............... 199
类方法 ....................... 200
类方法缓存 ............... 200
反汇编与调试 .................. 201
监视 ........................... 206
底层Objective-C 框架 ........................................ 208
Objective-C 接口 ....... 210
恶意代码注入 .................. 212
CodeTheft 载荷 ......... 212
使用调试器注入 ........ 213
使用动态连接攻击注入 .... 215
全设备感染 ............... 216
总结 ................................. 217
第9 章 劫持流量 .............. 219
APN 劫持 ......................... 219
交付载荷 ................... 222
清除 ........................... 224
简单的代理设置 ............... 225
攻击SSL .......................... 225
SSLStrip .................... 225
Paros Proxy ............... 227
浏览器警告 ............... 228
攻击应用软件级别的SSL 验证 ................................ 231
SSLTheft 载荷 ........... 233
劫持基础HTTP 类 ........... 238
POSTTheft 载荷 ........ 238
分析数据 .......................... 241
Driftnet ............................. 243
构建 ........................... 243
运行 ........................... 244
练习 ................................. 246
总结 ................................. 246
第2 篇 防护
第10 章 加密实现 ............ 249
密码强度 .......................... 249
当心随机密码生成器 . 252
Common Crypto 介绍 ....... 253
无状态操作 ............... 253
有状态加密 ............... 258
主密钥加密 ...................... 261
地理加密 .......................... 266
使用口令的地理加密 . 269
拆分服务器端密钥 ........... 271
安全内存 .......................... 273
清除内存 ................... 274
公钥加密体系 .................. 275
练习 ................................. 280
第11 章 反取证 ............... 281
安全的文件擦除 ............... 281
美国国防部 5220.22-M 标准擦除 ....................... 282
Objective-C ............... 284
擦除SQL 记录 ................. 286
键盘缓存 .......................... 292
随机化PIN 码 .................. 292
应用程序屏幕快照 ........... 294
第12 章 运行时库安全 ..... 297
篡改响应 .......................... 297
擦除用户数据 ............ 298
禁止网络访问 ............ 298
报告机制 ................... 299
启用日志记录 ............ 299
暗桩和自杀分支 ........ 299
进程调试检测 .................. 300
阻挡调试器 ...................... 302
运行时库类完整性检查 .... 304
检查内存地址空间 .... 304
内联函数 .......................... 316
反汇编复杂化 .................. 324
优化标记 ................... 324
去除符号 ................... 329
循环展开-funroll-loops ...................................... 336
练习 ................................. 339
第13 章 越狱检测 ............ 341
沙盒完整性检测 ............... 341
文件系统检测 .................. 343
越狱文件是否存在 .... 343
/etc/fstab 文件大小 .... 344
符号链接检测 ............ 345
分页执行检查 .................. 345
第14 章 下一步 ............... 347
像攻击者一样思考 ........... 347
其他逆向攻击 .................. 347
安全对抗代码管理 ........... 348
灵活的方式实现安全 ....... 349
其他不错的书籍 ............... 349
附录A 新的起点 ............... 351
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS应用安全攻防实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>高性能iOS应用开发
译者序　　xv
前言　　xvii
第一部分 　开始
第1章　移动应用的性能　　3
1.1　定义性能　　3
1.2　性能指标　　4
1.2.1　内存　　4
1.2.2　电量消耗　　4
1.2.3　初始化时间　　4
1.2.4　执行速度　　5
1.2.5　响应速度　　5
1.2.6　本地存储　　5
1.2.7　互操作性　　6
1.2.8　网络环境　　7
1.2.9　带宽　　7
1.2.10　数据刷新　　8
1.2.11　多用户支持　　8
1.2.12　单点登录　　9
1.2.13　安全　　9
1.2.14　崩溃　　10
1.3 　应用性能分析　　10
1.3.1 　采样　　10
1.3.2 　埋点　　10
1.4 　测量　　11
1.4.1 　设置工程与代码　　11
1.4.2 　设置崩溃报告　　12
1.4.3 　对应用埋点　　13
1.4.4 　日志　　17
1.5 　小结　　19
第二部分　核心优化
第2章　内存管理　　23
2.1 　内存消耗　　23
2.1.1 　栈大小　　24
2.1.2 　堆大小　　25
2.2 　内存管理模型　　27
2.3 　自动释放对象　　28
2.4 　自动释放池块　　30
2.5 　自动引用计数　　32
2.6 　引用类型　　35
2.6.1 　变量限定符　　36
2.6.2 　属性限定符　　37
2.7 　实践环节　　38
2.7.1 　照片模型　　38
2.7.2 　更新故事板　　38
2.7.3 　方法实现　　39
2.7.4 　输出分析　　41
2.8 　僵尸对象　　42
2.9 　内存管理规则　　43
2.10 　循环引用　　43
2.10.1 　避免循环引用的规则　　45
2.10.2 　循环引用的常见场景　　46
2.10.3 　观察者　　56
2.10.4 　返回错误　　59
2.11 　弱类型：id　　59
2.12 　对象寿命与泄漏　　61
2.13 　单例　　62
2.14 　找到神秘的持有者　　64
2.15 　最佳实践　　65
2.16 　生产环境的内存使用情况　　66
2.17 　小结　　67
第3章　能耗　　68
3.1 　CPU　　68
3.2 　网络　　70
3.3 　定位管理器和GPS　　73
3.3.1 　最佳的初始化　　74
3.3.2 　关闭无关紧要的特性　　75
3.3.3 　只在必要时使用网络　　76
3.3.4 　后台定位服务　　77
3.3.5 　NSTimer、NSThread 和定位服务　　77
3.3.6 　在应用关闭后重启　　78
3.4 　屏幕　　78
3.4.1 　动画　　78
3.4.2 　视频播放　　78
3.4.3 　多屏幕　　79
3.5 　其他硬件　　83
3.6 　电池电量与代码感知　　83
3.7 　分析电量使用　　85
3.8 　最佳实践　　86
3.9 　小结　　88
第4章　并发编程　　89
4.1 　线程　　89
4.2 　线程开销　　90
4.2.1 　内核数据结构　　90
4.2.2 　栈空间　　90
4.2.3 　创建耗时　　90
4.3 　GCD　　91
4.4 　操作与队列　　92
4.5 　线程安全的代码　　93
4.5.1 　原子属性　　93
4.5.2 　同步块　　94
4.5.3 　锁　　96
4.5.4 　将读写锁应用于并发读写　　100
4.5.5 　使用不可变实体　　102
4.5.6 　使用集中的状态更新服务　　106
4.5.7 　状态观察者与通知　　110
4.5.8 　异步优于同步　　114
4.6 　小结　　116
第三部分　iOS 性能
第5章　应用的生命周期　　119
5.1 　应用委托　　119
5.2 　应用启动　　121
5.2.1 　首次启动　　123
5.2.2 　冷启动　　129
5.2.3 　热启动　　135
5.2.4 　升级后启动　　137
5.3 　推送通知　　138
5.3.1 　远程通知　　138
5.3.2 　本地通知　　141
5.4 　后台拉取　　142
5.5 　小结　　144
第6章　用户界面　　145
6.1 　视图控制器　　146
6.1.1 　视图加载　　149
6.1.2 　视图层级　　150
6.1.3 　视图可见性　　152
6.2 　视图　　154
6.2.1 　UILabel　　155
6.2.2 　UIButton　　156
6.2.3 　UIImageView　　157
6.2.4 　UITableView　　158
6.2.5 　UIWebView　　161
6.2.6 　自定义视图　　164
6.3 　自动布局　　170
6.4 　尺寸类别　　171
6.5 　iOS　　8 中新的交互特性　　175
6.5.1 　交互式通知　　175
6.5.2 　应用扩展　　176
6.6 　小结　　179
第7章　网络　　180
7.1 　指标和测量　　180
7.1.1 　DNS 查找时间　　181
7.1.2 　SSL 握手时间　　182
7.1.3 　网络类型　　183
7.1.4 　延迟　　188
7.1.5 　网络API　　190
7.2 　应用部署　　190
7.2.1 　服务器　　191
7.2.2 　请求　　191
7.2.3 　数据格式　　192
7.3 　工具　　193
7.3.1 　网络链接调节器　　193
7.3.2 　AT ＆ T 应用资源优化器　　194
7.3.3 　Charles　　196
7.4 　小结　　199
第8章　数据共享　　200
8.1 　深层链接　　200
8.2 　剪贴板　　205
8.3 　共享内容　　208
8.3.1 　文档交互　　209
8.3.2 　活动　　215
8.4 　iOS　　8 扩展　　217
8.4.1 　配置操作扩展和共享扩展　　219
8.4.2 　操作扩展　　220
8.4.3 　共享扩展　　221
8.4. ４　文档提供者扩展　　223
8.4.5 　应用群组　　228
8.5 　小结　　230
第9章　安全　　231
9.1 　应用访问　　232
9.1.1 　匿名访问　　232
9.1.2 　认证访问　　234
9.2 　网络安全　　237
9.2.1 　使用HTTPS　　237
9.2.2 　使用证书锁定　　238
9.3 　本地存储　　242
9.4 　数据共享　　248
9.5 　安全和应用性能　　248
9.6 　清单　　248
9.7 　小结　　250
第四部分　代码之外
第10章　测试及发布　　253
10.1 　测试类型　　253
10.2 　定义　　254
10.3 　单元测试　　255
10.3.1 　设置　　255
10.3.2 　编写单元测试　　256
10.3.3 　代码覆盖率　　258
10.3.4 　异步操作　　262
10.3.5 　Xcode　　6 福利：性能单元测试　　263
10.3.6 　模拟依赖　　265
10.3.7 　其他框架　　268
10.4 　功能测试　　268
10.4.1 　设置　　269
10.4.2 　编写功能测试　　271
10.4.3 　工程结构　　273
10.5 　隔离依赖　　274
10.6 　测试及组件设计　　275
10.7 　持续集成与自动化　　277
10.8 　最佳实践　　278
10.9 　小结　　282
第11章　工具　　283
11.1 　Accessibility Inspector　　283
11.1.1 　Xcode Accessibility Inspector　　284
11.1.2 　iOS Accessibility Inspector　　285
11.2 　Instruments　　288
11.2.1 　使用Instruments　　289
11.2.2 　活动监视器　　291
11.2.3 　内存分配　　292
11.2.4 　内存泄漏　　295
11.2.5 　网络　　296
11.2.6 　时间分析器　　297
11.3 　Xcode 视图调试器　　298
11.4 　PonyDebugger　　300
11.5 　Charles　　304
11.6 　小结　　309
第12章　埋点与分析　　310
12.1 　词汇　　310
12.2 　埋点　　312
12.2.1 　规划　　312
12.2.2 　实现　　314
12.2.3 　部署　　316
12.3 　分析　　317
12.4 　真实用户监控　　317
12.4.1 　分析与真实用户监控对比　　317
12.4.2 　使用真实用户监控　　318
12.5 　小结　　318
第五部分　iOS　　9
第13章　iOS　　9　　321
13.1 　应用的生命周期　　321
13.1.1 　通用链接　　322
13.1.2 　搜索　　324
13.1.3 　搜索最佳实践　　328
13.2 　用户界面　　329
13.2.1 　UIKit 框架　　330
13.2.2 　Safari 服务框架　　332
13.3 　扩展　　335
13.3.1 　内容拦截扩展　　336
13.3.2 　Spotlight 索引扩展　　338
13.4 　应用瘦身　　339
13.4.1 　分割　　339
13.4.2 　按需加载资源　　340
13.4.3 　bitcode　　343
13.5 　小结　　344
第14章　iOS　　10　　345
14.1 　Siri 扩展　　346
14.2 　改进的通知　　348
14.2.1 　申请权限　　348
14.2.2 　触发器　　348
14.2.3 　为通知添加交互　　349
14.2.4 　完全自定义展示通知　　350
14.2.5 　通知服务扩展　　352
14.3 　iMessage 扩展　　354
14.4 　VoIP 支持　　357
作者介绍　　359
封面介绍　　359

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>高性能iOS应用开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>自己动手做iOS App
设计  1
Sketch 介绍  2
- 模板Template -  6
- Artboard -  8
- 导航栏Navigation Bar -  10
- Craft -  12
- 字体font -  14
- 对齐alignment -  16
- 用Profile 和Me 界面来练习-  18
- 同一界面的多种不同状态-  22
- 导出export -  31
- 在“真机”上看到自己的设计Mirror -  33
有用的Sketch 知识和技巧  34
- 图形的“组合加减”-  34
- 文字操作-  35
- Alpha Mask -  36
- 插件plugin -  37
用inVision 来制作原型和管理设计（Bonus）  38
原型  42
Xcode 介绍  43
第一次Build  44
Storyboard  49
- 组件Component -  49
- Table View Controller -  51
- Navigation Bar -  53
- Table View Cell -  55
- Preview -  57
- Visual Effect View 和Web View -  60
- Collection View -  62
- Container View -  65
- Stack View -  66
Auto Layout  69
- 对齐& 间距Alignment& Spacing -  69
- Table View 的Auto Layout -  72
- 多个元素的居中-  74
- 用Photo 界面练习-  77
- 连接 Storyboard -  79
编程  83
Swift 介绍  84
用代码控制界面  85
- 关联Storyboard 和代码文件-  85
- 连接组件到代码中-  87
- Protocol -  89
- 自适应高度-  91
- Collection View -  93
- 定义组件事件-  95
- 触发Segue -  97
- Delegate -  98
- xib-  101
- App Security -  104
- UIActivity -  107
- @IBInspectable -  107
网络  110
- Client & Server -  110
- 通信-  111
- HTTP Request Methods -  112
- API -  112
- JSON -  115
- 储存API 信息-  116
- 建立网络层-  117
- MVC -  121
- Grand Central Dispatch & OperationQueue -  126
- 缓存-  127
- 下拉刷新& 划动加载-  129
- 用Segue 传输数据-  132
- 更新xib 信息-  137
- OAuth 2 与登录-  141
- UserDefaults -  146
- POST -  147
- 用delegate 来传输数据-  149
其他  157
- 动画-  157
- 本地化语言-  161
- 提交TestFlight 测试-  165
- 提交到App Store 审核-  170
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>自己动手做iOS App
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS 7应用开发入门经典
第1章　为开发准备好系统和iOS设备　1
1.1　欢迎进入iOS平台　1
1.1.1　iOS设备　1
1.1.2　显示屏和图形　2
1.1.3　应用程序资源约束　3
1.1.4　连接性　4
1.1.5　输入和反馈　4
1.2　成为iOS开发人员　5
1.2.1　加入Apple开发人员计划　5
1.2.2　安装Xcode　8
1.3　创建并安装开发供应配置文件　9
1.3.1　什么是开发供应配置文件　10
1.3.2　配置用于开发的设备　10
1.4　运行第一个iOS应用程序　13
1.5　开发技术概述　15
1.5.1　Apple开发工具　15
1.5.2　Objective-C　15
1.5.3　CoCoa Touch　16
1.5.4　模型-视图-控制器　16
1.6　进一步探索　16
1.7　小结　16
1.8　问与答　16
1.9　作业　17
1.9.1　测验　17
1.9.2　答案　17
1.9.3　练习　17
第2章 Xcode和iOS模拟器简介　18
2.1　使用Xcode　18
2.1.1　创建和管理项目　19
2.1.2　编辑和导航代码　28
2.1.3　生成应用程序　36
2.1.4　管理项目属性　40
2.1.5　设置支持的设备朝向　41
2.1.6　设置状态栏(iOS 6)　41
2.1.7　应用程序图标和启动图像　42
2.2　使用iOS模拟器　44
2.2.1　启动应用程序　45
2.2.2　模拟多点触摸事件　46
2.2.3　旋转模拟的设备　47
2.2.4　模拟其他情况　47
2.3　进一步探索　48
2.4　小结　49
2.5　问与答　49
2.6　作业　49
2.6.1　测验　49
2.6.2　答案　49
2.6.3　练习　50
第3章 探索Apple平台语言Objective-C　51
3.1　面向对象编程和Objective-C　51
3.1.1　什么是面向对象编程　52
3.1.2　面向对象编程术语　53
3.1.3　什么是Objective-C　54
3.2　探索Objective-C文件结构　54
3.2.1　头文件/接口文件　55
3.2.2　实现文件　61
3.2.3　自动生成的结构　62
3.2.4　分类和协议　63
3.3　Objective-C编程基础　64
3.3.1　声明变量　64
3.3.2　分配和初始化对象　65
3.3.3　使用方法及发送消息　67
3.3.4　表达式和决策　69
3.4　内存管理和自动引用计数(ARC)　72
3.4.1　旧方式：保留并释放对象　72
3.4.2　新方式：自动引用计数　73
3.5　进一步探索　73
3.6　小结　74
3.7　问与答　74
3.8　作业　75
3.8.1　测验　75
3.8.2　答案　75
3.8.3　练习　75
第4章 Cocoa Touch内幕　76
4.1　Cocoa Touch是什么　76
4.1.1　冷静面对大量的功能　77
4.1.2　年轻而成熟　77
4.2　探索iPhone技术层　78
4.2.1　Cocoa Touch层　78
4.2.2　多媒体层　79
4.2.3　核心服务层　80
4.2.4　核心OS层　82
4.3　跟踪iOS应用程序的生命周期　82
4.4　Cocoa基础　83
4.4.1　核心应用程序类　84
4.4.2　数据类型类　85
4.4.3　界面类　88
4.5　使用Xcode探索iOS框架　91
4.5.1　Xcode文档　91
4.5.2　快速帮助　95
4.6　进一步探索　97
4.7　小结　97
4.8　问与答　98
4.9　作业　98
4.9.1　测验　98
4.9.2　答案　98
4.9.3　练习　98
第5章 探索Xcode Interface Builder　99
5.1　了解Interface Builder　99
5.1.1　IB采用的方法　100
5.1.2　剖析IB故事板　100
5.2　创建用户界面　104
5.2.1　对象库　105
5.2.2　将对象加入到视图中　106
5.2.3　使用IB编辑工具　107
5.2.4　自动布局系统　110
5.3　定制界面外观　112
5.3.1　使用属性检查器　113
5.3.2　设置辅助功能属性　114
5.3.3　预览界面　115
5.4　连接到代码　117
5.4.1　打开项目　117
5.4.2　实现概述　118
5.4.3　输出口和操作　119
5.4.4　对象身份　123
5.5　进一步探索　124
5.6　小结　124
5.7　问与答　124
5.8　作业　125
5.8.1　测验　125
5.8.2　答案　125
5.8.3　练习　125
第6章 模型-视图-控制器应用程序设计　126
6.1　了解设计模式模型-视图-控制器　126
6.1.1　制作意大利面条　127
6.1.2　使用MVC将应用程序设计结构化　127
6.2　Xcode如何实现MVC　128
6.2.1　视图　128
6.2.2　视图控制器　128
6.2.3　数据模型　130
6.3　使用模板Single View Application　131
6.3.1　实现概述　131
6.3.2　创建项目　131
6.3.3　规划属性和连接　135
6.3.4　设计界面　137
6.3.5　创建并连接输出口和操作　139
6.3.6　实现应用程序逻辑　143
6.3.7　生成应用程序　143
6.4　进一步探索　144
6.5　小结　144
6.6　问与答　145
6.7　作业　145
6.7.1　测验　145
6.7.2　答案　145
6.7.3　练习　145
第7章 使用文本、键盘和按钮　147
7.1　基本用户输入和输出　147
7.1.1　按钮　147
7.1.2　文本框和文本视图　148
7.1.3　标签　148
7.2　使用文本框、文本视图和按钮　148
7.2.1　实现概述　149
7.2.2　创建项目　149
7.2.3　使用切割技术制作按钮模板　150
7.2.4　设计界面　153
7.2.5　创建并连接输出口和操作　164
7.2.6　隐藏键盘　165
7.2.7　实现应用程序逻辑　168
7.2.8　生成应用程序　169
7.3　进一步探索　170
7.4　小结　170
7.5　问与答　171
7.6　作业　171
7.6.1　测验　171
7.6.2　答案　171
7.6.3　练习　171
第8章 处理图像、动画、滑块和步进控件　172
8.1　用户输入和输出　172
8.1.1　滑块　172
8.1.2　步进控件　173
8.1.3　图像视图　173
8.2　创建并管理图像动画、滑块和步进控件　174
8.2.1　实现概述　174
8.2.2　创建项目　175
8.2.3　设计界面　176
8.2.4　创建并连接到输出口和操作　182
8.2.5　实现应用程序逻辑　185
8.2.6　生成应用程序　189
8.3　进一步探索　190
8.4　小结　190
8.5　问与答　191
8.6　作业　191
8.6.1　测验　191
8.6.2　答案　191
8.6.3　练习　191
第9章 使用高级界面对象和视图　192
9.1　再谈用户输入和输出　192
9.1.1　开关　193
9.1.2　分段控件　193
9.1.3　Web视图　194
9.1.4　可滚动的视图　195
9.2　使用开关、分段控件和Web视图　195
9.2.1　实现概述　196
9.2.2　创建项目　196
9.2.3　设计界面　197
9.2.4　创建并连接输出口和操作　202
9.2.5　实现应用程序逻辑　205
9.2.6　生成应用程序　209
9.3　使用可滚动视图　209
9.3.1　实现概述　209
9.3.2　创建项目　210
9.3.3　设计界面　210
9.3.4　创建并连接输出口和操作　214
9.3.5　实现应用程序逻辑　214
9.3.6　生成应用程序　215
9.4　进一步探索　216
9.5　小结　216
9.6　问与答　216
9.7　作业　217
9.7.1　测验　217
9.7.2　答案　217
9.7.3　练习　217
第10章 引起用户注意　218
10.1　提醒用户　218
10.1.1　提醒视图　219
10.1.2　操作表　221
10.1.3　系统声音服务　223
10.2　探索提醒用户的方法　225
10.2.1　实现概述　225
10.2.2　创建项目　225
10.2.3　设计界面　226
10.2.4　创建并连接输出口和操作　227
10.2.5　实现提醒视图　229
10.2.6　实现操作表　234
10.2.7　实现提醒音和震动　237
10.3　进一步探索　238
10.4　小结　239
10.5　问与答　239
10.6　作业　239
10.6.1　测验　239
10.6.2　答案　240
10.6.3　练习　240
第11章 实现多场景和弹出框　241
11.1　多场景故事板简介　241
11.1.1　术语　242
11.1.2　创建多场景项目　243
11.1.3　创建切换　247
11.1.4　手工控制模态切换　250
11.1.5　使用出口和回退切换　251
11.1.6　以编程方式创建模态场景切换　252
11.1.7　在场景之间传递数据　254
11.2　理解iPad弹出框　256
11.2.1　创建弹出框　257
11.2.2　创建弹出切换　257
11.2.3　手工显示弹出框　260
11.2.4　响应用户关闭弹出框　260
11.2.5　以编程方式创建并显示弹出框　262
11.3　使用模态切换　265
11.3.1　实现概述　265
11.3.2　创建项目　265
11.3.3　设计界面　268
11.3.4　创建模态切换　270
11.3.5　回退到初始场景　271
11.3.6　创建并连接输出口和操作　271
11.3.7　实现应用程序逻辑　272
11.3.8　生成应用程序　274
11.4　使用弹出框　274
11.4.1　创建项目　275
11.4.2　设计界面　275
11.4.3　创建弹出切换　276
11.4.4　创建并连接输出口　277
11.4.5　实现应用程序逻辑　277
11.4.6　生成应用程序　279
11.5　进一步探索　279
11.6　小结　280
11.7　问与答　280
11.8　作业　280
11.8.1　测验　280
11.8.2　答案　280
11.8.3　练习　280
第12章 使用工具栏和选择器做出选择　281
12.1　了解工具栏　281
12.2　探索选择器　284
12.2.1　日期选择器　285
12.2.2　选择器视图　286
12.3　使用日期选择器　290
12.3.1　实现概述　291
12.3.2　创建项目　291
12.3.3　设计界面　293
12.3.4　创建切换　294
12.3.5　创建并连接输出口和操作　295
12.3.6　实现场景切换逻辑　296
12.3.7　实现日期计算逻辑　299
12.3.8　生成应用程序　302
12.4　实现自定义选择器　303
12.4.1　实现概述　303
12.4.2　创建项目　303
12.4.3　设计界面　305
12.4.4　创建切换　307
12.4.5　创建并连接输出口和操作　307
12.4.6　实现场景切换逻辑　308
12.4.7　实现自定义选择器视图　309
12.4.8　生成应用程序　315
12.5　进一步探索　315
12.6　小结　316
12.7　问与答　316
12.8　作业　317
12.8.1　测验　317
12.8.2　答案　317
12.8.3　练习　317
第13章 使用导航控制器和选项卡栏控制器　318
13.1　高级视图控制器　318
13.2　探索导航控制器　320
13.2.1　导航栏、导航项和栏按钮项　320
13.2.2　在故事板中使用导航控 制器　321
13.2.3　在导航场景之间共享数据　323
13.3　了解选项卡栏控制器　324
13.3.1　选项卡栏和选项卡栏项　324
13.3.2　在故事板中使用选项卡栏控制器　325
13.3.3　在选项卡栏控制器管理的场景之间共享数据　328
13.4　使用导航控制器　328
13.4.1　实现概述　329
13.4.2　创建项目　329
13.4.3　创建压入切换　332
13.4.4　设计界面　333
13.4.5　创建并连接输出口和操作　334
13.4.6　实现应用程序逻辑　335
13.4.7　生成应用程序　337
13.5　使用选项卡栏控制器　337
13.5.1　实现概述　337
13.5.2　创建项目　337
13.5.3　创建选项卡栏关系　339
13.5.4　设计界面　340
13.5.5　创建并连接输出口和操作　341
13.5.6　实现应用程序逻辑　342
13.5.7　生成应用程序　344
13.6　进一步探索　345
13.7　小结　345
13.8　问与答　346
13.9　作业　346
13.9.1　测验　346
13.9.2　答案　346
13.9.3　练习　347
第14章 使用表视图和分割视图控制器导航数据　348
14.1　了解表视图　348
14.1.1　表视图的外观　349
14.1.2　表单元格　349
14.1.3　添加表视图　350
14.2　探索分割视图控制器(仅适用于iPad)　355
14.2.1　实现分割视图控制器　356
14.2.2　模板Master-Detail Application　357
14.3　一个简单的表视图应用程序　358
14.3.1　实现概述　358
14.3.2　创建项目　358
14.3.3　设计界面　359
14.3.4　连接输出口delegate和dataSource　360
14.3.5　实现应用程序逻辑　361
14.3.6　生成应用程序　365
14.4　创建基于主-从视图的应用程序　365
14.4.1　实现概述　366
14.4.2　创建项目　366
14.4.3　调整iPad界面　367
14.4.4　调整iPhone界面　369
14.4.5　实现应用程序数据源　371
14.4.6　实现主视图控制器　374
14.4.7　实现细节视图控制器　377
14.4.8　修复细节视图控制器引用问题　378
14.4.9　生成应用程序　379
14.5　进一步探索　379
14.6　小结　379
14.7　问与答　380
14.8　作业　380
14.8.1　测验　380
14.8.2　答案　380
14.8.3　练习　380
第15章 读写应用程序数据　381
15.1　iOS应用程序和数据存储　381
15.2　数据存储方式　383
15.2.1　用户默认设置　384
15.2.2　设置束　385
15.2.3　直接访问文件系统　387
15.3　创建隐式首选项　389
15.3.1　实现概述　390
15.3.2　创建项目　390
15.3.3　创建界面　390
15.3.4　创建并连接输出口和操作　391
15.3.5　实现应用程序逻辑　392
15.3.6　生成应用程序　395
15.4　实现系统设置　396
15.4.1　实现概述　396
15.4.2　创建项目　396
15.4.3　设计界面　397
15.4.4　创建并连接输出口　398
15.4.5　创建设置束　398
15.4.6　实现应用程序逻辑　404
15.4.7　生成应用程序　405
15.5　实现文件系统存储　406
15.5.1　实现概述　406
15.5.2　创建项目　406
15.5.3　设计界面　406
15.5.4　创建并连接输出口和操作　407
15.5.5　实现应用程序逻辑　409
15.6　进一步探索　412
15.7　小结　413
15.8　问与答　413
15.9　作业　413
15.9.1　测验　413
15.9.2　答案　414
15.9.3　练习　414
第16章 创建自适应和向后兼容的用户界面　415
16.1　自适应界面　415
16.1.1　启用界面旋转　416
16.1.2　设计可旋转和调整大小的界面　417
16.2　使用自动布局　418
16.2.1　自动布局的语言和工具　419
16.2.2　在约束对象中导航　421
16.2.3　示例1：居中约束　427
16.2.4　示例2：增大控件　430
16.2.5　示例3：统一调整大小　433
16.3　以编程方式定义界面　436
16.3.1　实现概述　436
16.3.2　创建项目　437
16.3.3　界面编程　438
16.3.4　生成应用程序　442
16.4　旋转时切换视图　442
16.4.1　实现概述　442
16.4.2　创建项目　442
16.4.3　设计界面　443
16.4.4　创建并连接输出口　444
16.4.5　实现应用程序逻辑　445
16.4.6　生成应用程序　447
16.5　进一步探索　447
16.6　小结　447
16.7　问与答　447
16.8　作业　448
16.8.1　测验　448
16.8.2　答案　448
16.8.3　练习　448
第17章 使用复杂的触摸和手势　449
17.1　多点触摸手势识别　449
17.2　添加手势识别器　450
17.3　使用手势识别器　451
17.3.1　实现概述　451
17.3.2　创建项目　452
17.3.3　设计界面　453
17.3.4　给视图添加手势识别器　455
17.3.5　创建并连接输出口和操作　458
17.3.6　实现应用程序逻辑　460
17.3.7　生成应用程序　467
17.4　进一步探索　467
17.5　小结　467
17.6　问与答　468
17.7　作业　468
17.7.1　测验　468
17.7.2　答案　468
17.7.3　练习　468
第18章 检测朝向和移动　469
18.1　理解运动硬件　469
18.1.1　加速计　470
18.1.2　陀螺仪　471
18.2　访问朝向和运动数据　472
18.2.1　通过UIDevice请求朝向通知　472
18.2.2　使用Core Motion读取加速度、旋转速度和姿态　473
18.3　检测朝向　475
18.3.1　实现概述　475
18.3.2　创建项目　475
18.3.3　设计界面　475
18.3.4　创建并连接输出口　476
18.3.5　实现应用程序逻辑　476
18.3.6　生成应用程序　478
18.4　检测加速、倾斜和旋转　479
18.4.1　实现概述　479
18.4.2　创建项目　480
18.4.3　设计界面　480
18.4.4　创建并连接输出口和操作　481
18.4.5　实现应用程序逻辑　482
18.4.6　生成应用程序　488
18.5　进一步探索　488
18.6　小结　489
18.7　问与答　489
18.8　作业　489
18.8.1　测验　489
18.8.2　答案　490
18.8.3　练习　490
第19章 使用多媒体　491
19.1　探索多媒体　491
19.1.1　Media Player框架　492
19.1.2　AV Foundation框架　497
19.1.3　图像选择器　499
19.1.4　Core Image框架　501
19.2　创建用于练习使用多媒体的应用程序　503
19.2.1　实现概述　503
19.2.2　创建项目　503
19.2.3　设计界面　504
19.2.4　创建并连接输出口和操作　505
19.2.5　实现电影播放器　507
19.2.6　实现音频录制和播放　510
19.2.7　使用照片库和相机　514
19.2.8　实现Core Image滤镜　517
19.2.9　访问并播放音乐库　518
19.3　进一步探索　523
19.4　小结　524
19.5　问与答　524
19.6　作业　525
19.6.1　测验　525
19.6.2　答案　525
19.6.3　练习　525
第20章 与其他应用程序交互　526
20.1　集成iOS服务　526
20.1.1　地址簿　526
20.1.2　电子邮件　530
20.1.3　在社交网站上发表信息　531
20.1.4　地图功能　533
20.2　使用地址簿、电子邮件、社交网络和地图　537
20.2.1　实现概述　538
20.2.2　创建项目　538
20.2.3　设计界面　538
20.2.4　创建并连接输出口和操作　540
20.2.5　实现地址簿逻辑　541
20.2.6　实现地图逻辑　544
20.2.7　实现电子邮件逻辑　547
20.2.8　实现社交网络逻辑　548
20.2.9　将状态栏设置为白色(可选)　549
20.2.10　生成应用程序　549
20.3　进一步探索　550
20.4　小结　551
20.5　问与答　551
20.6　作业　551
20.6.1　测验　551
20.6.2　答案　551
20.6.3　练习　551
第21章 实现定位服务　552
21.1　理解Core Location　552
21.1.1　获取位置　552
21.1.2　获取航向　556
21.2　创建支持定位的应用程序　558
21.2.1　实现概述　558
21.2.2　创建项目　558
21.2.3　设计视图　559
21.2.4　创建并连接输出口　560
21.2.5　实现应用程序逻辑　560
21.2.6　将状态栏设置为白色　564
21.2.7　生成应用程序　564
21.3　理解磁性指南针　565
21.3.1　实现概述　565
21.3.2　创建项目　565
21.3.3　修改用户界面　566
21.3.4　创建并连接输出口　567
21.3.5　修改应用程序逻辑　567
21.3.6　生成应用程序　572
21.4　进一步探索　573
21.5　小结　573
21.6　问与答　573
21.7　作业　574
21.7.1　测验　574
21.7.2　答案　574
21.7.3　练习　574
第22章 创建支持后台处理的应用程序　575
22.1　理解iOS后台处理　575
22.1.1　后台处理类型　576
22.1.2　支持后台处理的应用程序的生命周期　578
22.2　禁用后台处理　579
22.3　处理后台挂起　580
22.4　实现本地通知　581
22.4.1　常用的通知属性　582
22.4.2　创建和调度通知　582
22.5　使用任务特定的后台处理　583
22.5.1　修改应用程序Cupertion以支持在后台播放音频　584
22.5.2　使用声音指示前往库珀蒂诺的方向　585
22.5.3　添加后台模式　587
22.6　完成长时间运行的后台 任务　588
22.6.1　实现概述　588
22.6.2　创建项目　589
22.6.3　设计界面　589
22.6.4　创建并连接输出口　590
22.6.5　实现应用程序逻辑　590
22.6.6　启用后台任务处理　591
22.6.7　生成应用程序　592
22.7　执行后台获取　592
22.7.1　实现概述　593
22.7.2　创建项目　593
22.7.3　设计界面　593
22.7.4　创建并连接输出口　594
22.7.5　实现应用程序逻辑　594
22.7.6　添加后台获取模式　595
22.7.7　生成应用程序　596
22.8　进一步探索　596
22.9　小结　596
22.10　问与答　597
22.11　作业　597
22.11.1　测验　597
22.11.2　答案　597
22.11.3　练习　597
第23章 创建通用应用程序　598
23.1　开发通用应用程序　598
23.1.1　理解通用模板　599
23.1.2　通用应用程序设置方面的不同　600
23.2　创建通用应用程序：方法1　602
23.2.1　实现概述　602
23.2.2　创建项目　603
23.2.3　设计界面　603
23.2.4　创建并连接输出口　604
23.2.5　实现应用程序逻辑　604
23.2.6　生成应用程序　605
23.3　创建通用应用程序：方法2　605
23.3.1　创建项目　605
23.3.2　设计界面　607
23.3.3　创建并连接输出口　607
23.3.4　实现应用程序逻辑　607
23.3.5　生成应用程序　608
23.4　使用多个目标　608
23.4.1　将iPhone目标转换为iPad目标　609
23.4.2　将iPad目标转换为iPhone目标　609
23.5　进一步探索　610
23.6　小结　611
23.7　问与答　611
23.8　作业　611
23.8.1　测验　611
23.8.2　答案　611
23.8.3　练习　611
第24章 应用程序跟踪、监视和调试　612
24.1　使用NSLog提供即时反馈　612
使用NSLog　613
24.2　使用Xcode调试器　615
24.2.1　设置断点及单步执行代码　616
24.2.2　使用调试导航器　624
24.3　进一步探索　627
24.4　小结　627
24.5　问与答　628
24.6　作业　628
24.6.1　测验　628
24.6.2　答案　628
24.6.3　练习　628
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS 7应用开发入门经典
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>疯狂iOS讲义（下）——iPhone/iPad高级应用与手游开发(含CD光盘1张)
第1章　多点触摸与手势检测	1
1.1　响应者链	2
1.2　响应触碰方法	3
1.3　使用手势处理器（UIGESTURERECOGNIZER）	3
1.3.1　使用UITAPGESTURERECOGNIZER处理点击手势	4
1.3.2　使用UIPINCHGESTURERECOGNIZER处理捏合手势	6
实例：通过捏合手势缩放图片	7
1.3.3　使用UIROTATIONGESTURERECOGNIZER处理旋转手势	9
实例：通过旋转手势旋转图片	9
1.3.4　使用UISWIPEGESTURERECOGNIZER处理轻扫手势	10
实例：贪食蛇	12
1.3.5　使用UIPANGESTURERECOGNIZER处理拖动手势	18
1.3.6　使用UILONGPRESSGESTURERECOGNIZER处理长按手势	19
实例：长按添加按钮	20
1.4　创建和使用自定义手势处理器	21
1.4.1　开发自定义手势处理器	21
1.4.2　使用自定义手势处理器	23
1.5  本章小结	24
第2章　国际化	25
2.1  IOS应用国际化的基础	26
2.1.1　IOS应用的国际化思路	26
2.1.2　OBJECTIVE-C国际化支持的语言和国家	28
2.2　国际化界面设计文件	29
2.3  国际化应用程序的显示名称	32
2.4  国际化图片	34
2.5  国际化文本	35
2.6  本章小结	38
第3章　IOS的数据存储与IO	39
3.1  应用程序沙盒	40
3.1.1  获取DOCUMENTS目录	41
3.1.2  获取TMP目录	41
3.1.3  文件保存策略思考	41
3.2  应用程序参数与用户默认设置	42
3.2.1  使用SETTINGS BUNDLE	42
3.2.2  使用NSUSERDEFAULTS读取、保存应用程序参数	50
3.3  属性列表	54
实例：备忘录	55
3.4  对象归档和原生I/O API	58
3.5  使用SQLITE 3数据库	58
3.5.1  IOS的SQLITE编程	58
3.5.2  创建数据库和表	63
3.5.3  使用SQL语句执行查询	63
实例：英文生词本	64
3.5.4  使用SQLITE3工具	67
3.5.5  使用SQLITE MANAGER管理数据库	69
3.6  使用CORE DATA框架	71
3.6.1  CORE DATA简介	71
3.6.2  初始化CORE DATA项目	73
3.6.3  设计实体模型	76
3.6.4  使用CORE DATA实现数据的增、删、改、查	78
3.6.5  管理实体的关联关系	84
实例：图书管理系统	84
3.7  本章小结	95
第4章　多媒体应用开发	96
4.1  音频和视频的播放	97
4.1.1  使用SYSTEM SOUND SERVICES播放音效	97
4.1.2  使用AVAUDIOPLAYER播放音乐	98
4.1.3  使用MPMEDIAPICKERCONTROLLER选择系统音乐	102
实例：简单音乐播放器	103
4.1.4  使用MPMOVIEPLAYERCONTROLLER播放视频	106
4.2  使用AVAUDIORECORDER录制音频	108
4.3  拍照和录制视频	112
4.3.1  使用UIIMAGEPICKERCONTROLLER拍照和录制视频	112
4.3.2  使用AVFOUNDATION拍照和录制视频	116
实例：完全自定义的相机	118
4.4  使用AVFOUNDATION生成视频缩略图	135
4.5  本章小结	137
第5章　管理手机	138
5.1  使用ADDRESSBOOK管理联系人	139
5.1.1  删除联系人	142
5.1.2  添加联系人	144
5.1.3  修改联系人	147
5.2  使用ADDRESSBOOKUI管理联系人	151
5.2.1  使用ABNEWPERSONVIEWCONTROLLER添加联系人	153
5.2.2  使用ABUNKNOWNPERSONVIEWCONTROLLER显示未知联系人	154
5.2.3  使用ABPEOPLEPICKERNAVIGATIONCONTROLLER选择联系人	156
5.2.4  使用ABPERSONVIEWCONTROLLER显示指定联系人	157
5.3  使用UIAPPLICATION打电话、发短信	159
5.4  使用MFMESSAGECOMPOSEVIEWCONTROLLER发短信	160
5.5  使用MFMAILCOMPOSEVIEWCONTROLLER发送邮件	162
5.6  本章小结	165
第6章　加速计与陀螺仪	166
6.1  IOS支持的加速计和陀螺仪	167
6.1.1  IOS加速计和陀螺仪的理论基础	167
6.1.2  基于代码块方式获取加速度数据、陀螺仪数据、磁场数据	168
6.1.3  主动请求获取加速度数据、陀螺仪数据、磁场数据	172
实例：怪物足球	173
6.2  感知设备移动	178
实例：水平仪	181
6.3  IOS 7新增的计步器	184
6.4  IOS 7新增的CMMOTIONACTIVITYMANAGER	186
6.5  本章小结	188
第7章　多线程	189
7.1  线程概述	190
7.1.1  线程和进程	190
7.1.2  多线程的优势	191
7.2  使用NSTHREAD实现多线程	192
7.2.1  创建和启动线程	192
7.2.2  线程的状态	194
7.2.3  终止子线程	194
7.2.4  线程睡眠	195
实例：使用线程下载网络图片	196
7.2.5  改变线程优先级	197
7.3  线程同步与线程通信	199
7.3.1  线程安全问题	199
7.3.2  使用@SYNCHRONIZED实现同步	201
7.3.3  释放对同步监视器的锁定	203
7.3.4  同步锁（NSLOCK）	203
7.3.5  使用NSCONDITION控制线程通信	205
实例：生产者-消费者	205
7.4  使用GCD实现多线程	208
7.4.1  创建队列	209
7.4.2  异步提交任务	210
实例：使用GCD下载图片	212
7.4.3  同步提交任务	213
7.4.4  多次执行的任务	214
7.4.5  只执行一次的任务	215
7.5  后台运行	216
7.5.1  进入后台时释放内存	216
实例：疯狂飞机大战	216
7.5.2  进入后台时保存状态	223
7.5.3  请求更多的后台时间	223
7.6  使用NSOPERATION与NSOPERATIONQUEUE实现多线程	225
7.6.1  使用NSINVOCATIONOPERATION和NSBLOCKOPERATION	226
实例：使用NSBLOCKOPERATION下载图片	226
7.6.2  定义NSOPERATION子类	227
7.7  本章小结	229
第8章　IOS网络应用编程	230
8.1  检测网络状态	231
8.1.1  检查网络状态	231
8.1.2  监听网络状态改变	234
8.2  使用CFNETWORK实现TCP协议的通信	235
8.2.1  IP地址与端口号	236
8.2.2  TCP协议基础	236
8.2.3  使用CFSOCKET实现TCP服务器端	237
8.2.4  使用CFSOCKET实现TCP客户端	241
实例：网络聊天程序	244
8.2.5  使用COCOAASYNCSOCKET实现TCP客户端	247
8.3  使用NSURLCONNECTION	250
8.3.1  使用NSURLCONNECTION从网络获取数据	250
8.3.2  使用NSMUTABLEURLREQUEST向服务器发送数据	253
8.4  XML解析	255
8.4.1  DOM与SAX	255
8.4.2  使用NSXMLPARSER解析XML文档	257
8.4.3  使用LIBXML2解析XML文档	262
8.4.4  使用GDATAXML解析XML文档	266
8.4.5  使用GDATAXML生成、修改XML文档	268
8.5  JSON解析	271
8.5.1  JSON的基本知识	271
8.5.2  使用NSJSONSERIALIZATION处理JSON数据	274
8.5.3  使用SBJSON解析JSON数据	274
8.5.4  使用JSONKIT解析JSON数据	275
8.6  使用AFNETWORKING实现网络通信	280
8.6.1  提交GET请求与提交POST请求	280
实例：访问被保护资源	281
8.6.2  处理JSON或PLIST响应	284
8.6.3  处理XML响应	288
8.6.4  上传文件	290
8.7  使用ASIHTTPREQUEST框架实现网络编程	293
8.7.1  发送同步或异步的GET请求	293
8.7.2  使用代码块	296
8.7.3  使用NSOPERATIONQUEUE管理请求	297
8.7.4  发送请求参数和文件上传	299
实例：天气预报	300
8.8  本章小结	311
第9章　使用CORELOCATION定位	312
9.1  IOS的定位支持	313
9.1.1  GPS卫星定位	313
9.1.2  基站定位	314
9.1.3  WIFI定位	314
9.2  获取定位信息 	314
9.2.1  获取位置信息	315
9.2.2  使用IOS模拟器模拟位置	318
9.2.3  监控行车速度和行车距离	318
9.3  方向监测	320
实例：指南针	322
9.4  区域监测	323
9.5  本章小结	325
第10章　使用MAPKIT开发地图服务	326
10.1  使用MAPKIT框架	327
10.1.1  使用MKMAPVIEW控件	328
10.1.2  指定地图显示中心和显示区域	329
10.1.3  使用IOS 7新增的MKMAPCAMERA	332
10.2  根据地址定位	333
10.2.1  地址解析与反向地址解析	333
10.2.2  根据地址定位	337
10.3  在地图上添加锚点	340
10.3.1  添加简单的锚点	340
10.3.2  添加自定义锚点	343
10.4  在地图上添加覆盖层	345
10.4.1  添加几何覆盖层	346
10.4.2  使用IOS 7新增的MKTILEOVERLAY覆盖层	348
10.5  使用IOS 7新增的MKDIRECTIONS获取导航路线	350
实例：行车导航仪	351
10.6  本章小结	354
第11章　推送机制	355
11.1  使用NSNOTIFICATIONCENTER通信	356
11.1.1  使用NSNOTIFICATIONCENTER监听系统组件的通知	358
11.1.2  使用NSNOTIFICATIONCENTER监听自定义通知	359
11.2  IOS本地通知	361
11.3  IOS远程推送通知	364
11.3.1  开发PUSH客户端应用	366
11.3.2  开发PUSH服务端程序	377
11.4  本章小结	381
第12章　ICLOUD服务与应用	382
12.1  ICLOUD入门	383
12.1.1  为应用开启ICLOUD服务	384
12.1.2  使用NSMETADATAQUERY查询文档	389
12.1.3  添加文档	393
12.1.4  编辑文档	395
12.1.5  删除文档	397
12.2  使用ICLOUD保存云端首选项	398
12.3  本章小结	401
第13章　使用COCOS2D开发2D游戏	402
13.1  COCOS2D简介	403
13.1.1  COCOS2D的特点	403
13.1.2  COCOS2D的主要功能	403
13.2  COCOS2D的下载与安装	404
13.2.1 下载COCOS2D	404
13.2.2  安装COCOS2D	405
13.2.3  使用COCOS2D-IPHONE的帮助文档	405
13.2.4  COCOS2D中内置的项	406
13.3  创建COCOS2D项目	407
13.3.1  HELLOWORLD COCOS2D项目	407
13.3.2  COCOS2D项目如何支持ARC	408
13.3.3  COCOS2D项目结构和代码分析	413
13.4  CCNODE节点类	419
13.4.1  CCNODE类的属性	419
13.4.2  CCNode类的方法	420
13.5  CCScene场景类	423
13.5.1  CCTransitionScene 场景切换	423
13.5.2  cocos2d支持的场景过渡效果	424
13.6  CCLayer类	424
13.6.1  CCLayer类的属性	425
13.6.2  CCLayer类的常用方法	425
13.6.3  CCLayer类的作用	425
13.6.4  CCLayerColor类的属性和方法	425
13.6.5  CCLayerGradient渐变色层类	426
13.6.6  CCMenu菜单类	426
13.7  CCDirector导演类	429
13.7.1  CCDirector导演类的属性	430
13.7.2  CCDirector导演类的方法	430
13.8  CCTexture纹理类	431
13.8.1  纹理的相关概念	431
13.8.2  纹理相关的类	431
13.9  CCSprite精灵类	432
13.9.1  CCSprite精灵类的属性	432
13.9.2  CCSprite精灵类的方法	432
13.9.3  CCSpriteFrame精灵帧	435
13.9.4  CCSpriteFrameCache精灵帧缓存	436
13.9.5  CCSpriteBatchNode精灵表单	436
13.9.6  制作精灵表单	438
13.9.7  精灵表单示例	440
13.10  cocos2d中的动作	442
13.10.1  cocos2d中的动作类	443
13.10.2  基本动作	444
13.10.3  组合动作	453
13.10.4  Ease动作	454
13.10.5  延迟动作	456
13.10.6  方法回调动作	456
13.10.7  代码块调用动作	460
13.11  cocos2d中的动画	462
13.11.1  cocos2d中动画相关的类	462
13.11.2  简单动画效果	463
13.11.3  使用精灵表单实现动画效果	464
13.12  cocos2d中的文本	466
13.12.1  CCLabelTTF类	466
13.12.2  CCLabelBMFont类	467
13.13  cocos2d中的声音	470
13.13.1  SimpleAudioEngine	470
13.13.2  游戏中的声音设置选项功能实现	474
13.14  疯狂打飞机游戏	477
13.14.1  开始前的准备工作	477
13.14.2  添加游戏菜单项功能	478
13.14.3  预加载游戏资源	480
13.14.4  玩家飞机飞行效果	485
13.14.5  玩家飞机Touch实现	487
13.14.6  背景滚动效果	488
13.14.7  添加敌机	491
13.14.8  玩家飞机添加子弹并射击	494
13.14.9  添加背景音乐	498
13.14.10 添加游戏积分统计	498
13.14.11 添加游戏大Boss	500
13.15  本章小结	504
第14章　粒子效果、瓦片地图和物理引擎	505
14.1  粒子系统相关的类	506
14.1.1  CCParticleSystem类	506
14.1.2  CCParticleSystemQuad类	511
14.1.3  CCParticleBatchNode类	512
14.2  cocos2d中内置的粒子系统	512
14.2.1  使用cocos2d内置的粒子系统	513
14.2.2  手动创建粒子系统类	514
14.3  使用Particle Designer生成粒子效果	517
14.3.1  Particle Designer粒子工具的使用	518
14.3.2  使用plist文件创建粒子系统	520
14.4  瓦片地图	520
14.4.1  下载和安装Tiled地图编辑器	521
14.4.2  使用Tiled绘制地图	522
14.5  Tiled地图相关的类	527
14.5.1  CCTMXTiledMap类	527
14.5.2  CCTMXLayer类	529
14.5.3  CCTMXObjectGroup类	530
14.6  在项目中使用Tiled地图	530
14.7  真实手游：萌仙	535
14.7.1  设计地图场景	535
14.7.2  载入地图	535
14.7.3  地图的移动	537
14.7.4  物体遮挡效果	539
14.7.5  设置障碍物	542
14.7.6  寻路算法	544
14.7.7  随机出现怪物	549
14.7.8  玩家和怪物进行战斗	552
14.8  Box2D物理引擎	559
14.8.1  物理引擎概述	559
14.8.2  Box2D的核心概念	559
14.8.3  Box2D常用的属性和方法	562
14.8.4  Box2D模板项目HelloBox2D	563
14.8.5  HelloBox2D模板项目代码分析	565
14.8.6  cocos2d和Box2D	573
14.8.7  Box2D开发步骤	575
14.9  开发Box2D项目	575
14.10  愤怒的小鸟	581
14.10.1  开始前的准备工作	581
14.10.2  制作游戏启动画面	581
14.10.3  进度条制作	582
14.10.4  游戏中的粒子效果	585
14.10.5  游戏选关操作	590
14.10.6  设计关卡数据	594
14.10.7  设计精灵类	596
14.10.8  游戏主界面	601
14.10.9  弹弓发射小鸟	604
14.10.10 整合Box2D物理引擎	609
14.10.11 游戏过关设计	613
14.11  本章小结	616
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>疯狂iOS讲义（下）——iPhone/iPad高级应用与手游开发(含CD光盘1张)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS核心开发手册（原书第5版）
译者序
前　言
致　谢
第1章　手势与触摸 1
1.1　触摸 1
1.1.1　触摸操作所处的阶段 2
1.1.2　UIResponder类中的触摸事件响应方法 3
1.1.3　对视图的触摸 4
1.1.4　多点触摸 4
1.1.5　手势识别器 5
1.2　解决方案：添加简单的直接操纵界面 5
1.3　解决方案：添加拖动手势识别器 7
1.4　解决方案：同时使用多个手势识别器 9
1.5　解决方案：限制移动 14
1.6　解决方案：测试触摸 15
1.7　解决方案：针对位图的触摸测试 17
1.8　解决方案：根据触摸情况在屏幕上绘制内容 19
1.9　解决方案：令绘制效果变得平滑 21
1.10　解决方案：启用多点触摸 24
1.11　解决方案：检测圆圈手势 27
1.12　解决方案：创建自定义手势识别器 32
1.13　解决方案：把滚动视图中的内容拖曳到外面 34
1.14　解决方案：实时的触摸反馈 37
1.14.1　启用触摸反馈效果 38
1.14.2　拦截并转发触摸事件 38
1.14.3　实现TOUCHkit的TOUCHkitView类 40
1.15　解决方案：向视图中添加菜单 42
1.16　小结 43
第2章　构建并使用控件 45
2.1　UIControl类 45
2.1.1　目标-动作模式 46
2.1.2　控件的种类 46
2.1.3　控件事件 46
2.2　按钮 48
2.3　Interface Builder中的按钮 50
2.4　解决方案：构建按钮 51
2.4.1　多行按钮文本 54
2.4.2　为按钮添加动画元件 54
2.4.3　为按钮添加额外状态 55
2.5　解决方案：使按钮以动画效果来响应用户 55
2.6　解决方案：为滑杆控件添加自定义的滑块 57
2.6.1　定制UISlider控件 57
2.6.2　添加优化代码 58
2.7　解决方案：创建可以连续点击两次的分段选择控件 61
2.7.1　实现第二次点击时的反馈效果 62
2.7.2　控件及带属性的字符串 63
2.8　开关控件与步进控件 64
2.9　解决方案：编写UIControl的子类 65
2.9.1　创建控件 68
2.9.2　追踪触摸事件 68
2.9.3　派发控件事件 69
2.10　解决方案：构建评分所用的Star Slider控件 69
2.11　解决方案：构建触摸转盘控件 72
2.12　解决方案：创建拉曳控件 75
2.12.1　为控件添加提示效果 75
2.12.2　测试触摸 77
2.13　解决方案：构建自定义的锁定控件 80
2.14　解决方案：图片库查看器 83
2.15　构建工具栏 85
2.16　小结 88
第3章　提醒用户 89
3.1　直接向用户弹出警告视图 89
3.1.1　构建简单的警告视图 89
3.1.2　设置UIAlertView的委托 91
3.1.3　显示UIAlertView 92
3.1.4　各种UIAlertView 92
3.2　解决方案：构建支持块的警告视图 93
3.2.1　块简介 93
3.2.2　使用块时避免保留循环 95
3.3　解决方案：将变长参数列表与UIAlertView结合起来使用 98
3.4　展示选项列表 99
3.4.1　滚动菜单 101
3.4.2　在动作表中显示文本 101
3.5　将操作进度告知用户并提示其稍等片刻 102
3.5.1　使用UIActivity-IndicatorView 103
3.5.2　使用UIProgressView 103
3.6　解决方案：在屏幕上绘制模态的进度指示器 104
3.7　解决方案：自制的模态警告视图 106
3.8　解决方案：基本的popover 110
3.9　解决方案：本机通知 111
3.10　用网络活动指示器提醒用户 113
3.11　解决方案：播放简单的提示音 114
3.11.1　System Sound 114
3.11.2　为使用系统框架而引入模块 115
3.11.3　震动 115
3.11.4　警示音 116
3.11.5　延迟 117
3.11.6　释放系统音 117
3.12　小结 117
第4章　编排视图及其动画效果 119
4.1　视图层级 119
4.2　解决方案：用树状图来描述视图层级 121
4.3　解决方案：查询子视图 123
4.4　管理子视图 125
4.4.1　添加子视图 125
4.4.2　重排及删除子视图 125
4.4.3　UIView的回调方法 125
4.5　为视图设定标签并查找视图 126
4.6　解决方案：通过对象关联机制为视图设定名称 127
4.7　视图的几何特征 129
4.7.1　框架 130
4.7.2　与CGRect有关的工具函数 130
4.7.3　CGPoint与CGSize 131
4.7.4　CGAffineTransform 132
4.7.5　坐标系统 133
4.8　解决方案：操控视图的框架 133
4.8.1　调整视图的尺寸 134
4.8.2　CGRect与中心点 136
4.8.3　视图的其他几何特征 137
4.9　解决方案：获取与坐标变换有关的信息 141
4.9.1　获取与变换有关的属性 141
4.9.2　判断两个视图是否相交 142
4.10　与显示和交互有关的特征 147
4.11　UIView的动画效果 148
4.12　解决方案：视图的淡入与淡出 150
4.13　解决方案：交换两个视图的前后顺序 151
4.14　解决方案：翻转视图 151
4.15　解决方案：采用Core Animation API来制作切换效果 153
4.16　解决方案：使视图在出现之后回弹 155
4.17　解决方案：关键帧动画 156
4.18　解决方案：UIImageView的动画效果 157
4.19　小结 158
第5章　视图的约束系统 160
5.1　什么是约束 161
5.2　约束系统所用的属性 161
5.3　约束系统的运作规律 163
5.4　约束规则与框架属性 165
5.4.1　固有内容的尺寸 165
5.4.2　对齐矩形 166
5.5　创建约束规则 167
5.5.1　基本约束规则声明 167
5.5.2　用可视化格式字符串声明约束规则 168
5.5.3　变量绑定 169
5.6　格式字符串 169
5.6.1　方向 169
5.6.2　连接 171
5.7　谓词 173
5.7.1　指标 173
5.7.2　描述两个视图关系的谓词 174
5.7.3　优先级 174
5.8　格式字符串总结 174
5.9　用格式字符串将视图对齐并灵活调整其尺寸 176
5.10　处理约束规则的流程 176
5.11　管理约束规则 177
5.12　解决方案：实现约束规则之间的对比 178
5.13　解决方案：创建尺寸固定且受规则约束的视图 181
5.13.1　禁用translatesAutoresizing-MaskIntoConstraints 181
5.13.2　令视图出现在上级视图范围内 182
5.13.3　限定视图的尺寸 183
5.13.4　把前面各节内容拼装起来 183
5.14　解决方案：将两个视图居中对齐 185
5.15　解决方案：设定宽高比 186
5.16　解决方案：响应屏幕方向的变更 188
5.17　调试约束规则 190
5.18　解决方案：描述约束规则 191
5.19　用宏来创建约束规则 194
5.20　小结 197
第6章　文本输入 198
6.1　解决方案：隐藏UITextField的键盘 199
6.1.1　阻止系统把键盘隐藏起来 200
6.1.2　UITextInputTraits协议中的属性 200
6.1.3　文本框的其他属性 201
6.2　解决方案：把带有自定义辅助视图的键盘隐藏起来 203
6.3　解决方案：根据键盘来调整文本视图 205
6.4　解决方案：创建自定义的输入视图 209
6.5　解决方案：使视图具备文本输入功能 213
6.6　解决方案：为非文本视图添加自定义的输入视图 216
6.7　解决方案：创建更好的文本编辑器（第一部分） 218
6.8　解决方案：创建更好的文本编辑器（第二部分） 221
6.8.1　启用Attributed Text 221
6.8.2　控制文本的样式 221
6.8.3　可供UIResponder使用的其他功能 223
6.9　解决方案：过滤用户所输入的文本 224
6.10　解决方案：检测文本模式 226
6.10.1　构建自己的正则表达式 227
6.10.2　枚举正则表达式 227
6.10.3　数据探测器 228
6.10.4　使用内置类型的探测器 229
6.10.5　有用的网站 229
6.11　解决方案：检测UITextView中的拼写错误 231
6.12　搜寻文本中的字符串 232
6.13　小结 233
第7章　使用视图控制器 234
7.1　视图控制器 234
7.1.1　UIViewController类 235
7.1.2　导航控制器 235
7.1.3　标签栏控制器 235
7.1.4　分栏视图控制器 236
7.1.5　页面视图控制器 236
7.1.6　popover控制器 236
7.2　使用导航控制器与分栏视图控制器来开发程序 237
7.2.1　使用导航控制器与导航栈 238
7.2.2　推入与弹出视图控制器 239
7.2.3　导航栏上的按钮 239
7.2.4　延伸至屏幕边缘的布局形式 240
7.3　解决方案：UINavigationItem类 241
7.3.1　标题与后退按钮 242
7.3.2　宏 242
7.4　解决方案：模态界面 244
7.5　解决方案：构建分栏视图控制器 248
7.6　解决方案：用分栏视图及导航控制器创建通用的程序 253
7.7　解决方案：标签栏 255
7.8　记住标签的状态 259
7.9　解决方案：页面视图控制器 262
7.9.1　与书籍展示风格有关的属性 262
7.9.2　封装实现细节 263
7.9.3　范例代码详解 269
7.9.4　构建界面索引 270
7.10　解决方案：自定义的容器 271
7.10.1　添加与移除子视图控制器 274
7.10.2　视图控制器之间的切换效果 275
7.11　解决方案：segue 276
7.12　小结 282
第8章　常用的控制器 284
8.1　图像选取器控制器 284
8.1.1　图像来源 284
8.1.2　在iPhone和iPad中显示选取器 285
8.2　解决方案：选取图像 286
8.2.1　向模拟器中添加图片 286
8.2.2　AssetsLibrary模块 286
8.2.3　展示选取器 287
8.2.4　处理delegate的回调 288
8.3　解决方案：拍摄照片 293
8.3.1　配置选取器 293
8.3.2　显示图像 295
8.3.3　把图像保存到相册 295
8.4　解决方案：录制视频 297
8.4.1　创建录制视频用的选取器 298
8.4.2　保存视频 299
8.5　解决方案：用媒体播放器播放视频 299
8.6　解决方案：编辑视频 302
8.7　解决方案：选取并编辑视频 304
8.8　解决方案：通过电子邮件发送图片 306
8.9　解决方案：发送文本消息 309
8.10　解决方案：在社交网站发布消息 311
8.11　小结 313
第9章　创建并管理表格视图 314
9.1　iOS的表格 314
9.2　委托 315
9.3　创建表格 316
9.3.1　表格的样式 316
9.3.2　排布表格视图 316
9.3.3　设置数据源 317
9.3.4　提供单元格 317
9.3.5　注册单元格类 317
9.3.6　从队列中取出单元格 318
9.3.7　设置delegate 318
9.4　解决方案：实现简单的表格 319
9.4.1　数据源方法 319
9.4.2　响应用户的触摸 322
9.5　UITableViewCell类 322
9.5.1　单元格的selectionStyle属性 323
9.5.2　添加自定义的单元格受选效果 323
9.6　解决方案：创建带有选取标记的单元格 323
9.7　给单元格添加详情展示控件 325
9.8　解决方案：编辑表格 327
9.8.1　添加撤销功能 331
9.8.2　实现撤销功能 332
9.8.3　显示移除单元格所用的控件 332
9.8.4　处理删除请求 332
9.8.5　通过滑动手势删除单元格 333
9.8.6　调整单元格的顺序 333
9.8.7　添加单元格 333
9.9　解决方案：操控表格的区段 334
9.9.1　构建区段 334
9.9.2　区段数量与区段内的行数 335
9.9.3　返回单元格 335
9.9.4　创建每个区段的头部标题 337
9.9.5　定制表格与区段的头部及尾部 338
9.9.6　创建区段索引 338
9.9.7　处理索引与区段不匹配的问题 339
9.9.8　为分区表格实现委托方法 339
9.10　解决方案：在表格中搜索 339
9.10.1　创建搜索显示控制器 341
9.10.2　为搜索显示控制器注册单元格 341
9.10.3　构建支持搜索功能的数据源方法 342
9.10.4　委托方法 343
9.10.5　使用与搜索功能相配套的索引 344
9.11　解决方案：给表格添加下拉刷新功能 345
9.12　解决方案：添加指令行 348
9.13　制作自定义的分组表格 351
9.14　解决方案：构建含有多个滚轮的表格 352
9.14.1　创建UIPickerView 353
9.14.2　数据源方法与委托方法 353
9.14.3　使用带有选取器的视图 354
9.15　使用UIDatePicker 356
9.16　小结 357
第10章　集合视图 358
10.1　集合视图与表格的异同 358
10.2　建立集合视图 360
10.2.1　通过控制器使用集合视图 361
10.2.2　直接使用集合视图 361
10.2.3　数据源与委托 362
10.3　流式布局 362
10.3.1　滚动方向 362
10.3.2　条目的尺寸以及行间距 362
10.3.3　头部与尾部的尺寸 364
10.3.4　内边距 365
10.4　解决方案：采用流式布局的简单集合视图 366
10.5　解决方案：自定义单元格 370
10.6　解决方案：水平滚动的列表 372
10.7　解决方案：创建交互式的布局效果 375
10.8　解决方案：滚动之后自动调整位置 377
10.9　解决方案：创建圆形布局 378
10.9.1　实现创建条目与删除条目时的动画效果 381
10.9.2　增强圆形布局的实用性 382
10.9.3　布局对象 383
10.10　解决方案：用手势调整布局 383
10.11　解决方案：创建真正的网格状布局 385
10.12　解决方案：为集合视图中的条目添加自定义菜单 391
10.13　小结 393
第11章　分享文档与数据 394
11.1　解决方案：使用统一类型标识符 394
11.1.1　根据文件扩展名来决定UTI 395
11.1.2　把UTI转换成扩展名或MIME类型 396
11.1.3　判断两个UTI之间是否有依从关系 397
11.1.4　获取依从关系列表 398
11.2　解决方案：访问系统剪贴板 400
11.2.1　存储数据 401
11.2.2　存储常见类型的数据 401
11.2.3　获取数据 402
11.2.4　自动更新剪贴板 402
11.3　解决方案：监控Documents文件夹 403
11.3.1　启用文件分享功能 403
11.3.2　用户对Documents文件夹的控制能力 403
11.3.3　在Xcode里访问应用程序沙盒 405
11.3.4　扫描新的文档 405
11.4　解决方案：活动视图控制器 408
11.4.1　展示活动视图控制器 409
11.4.2　UIActivityItemSource协议 409
11.4.3　UIActivityItemProvider类 411
11.4.4　实现UIActivityItemSource协议中的回调方法 411
11.4.5　添加分享服务 412
11.4.6　与各种数据类型相对应的操作 416
11.4.7　排除某些操作 417
11.5　解决方案：Quick Look预览控制器 417
11.6　解决方案：使用文档交互控制器 420
11.6.1　创建UIDocumentInteraction-Controller实例 420
11.6.2　UIDocumentInteraction-Controller的属性 424
11.6.3　提供快速查看文档的功能 424
11.6.4　判断是否应启用“Open in…”操作 425
11.7　解决方案：声明程序所支持的文档类型 426
11.7.1　创建自定义的文档类型 427
11.7.2　实现对文档的支持 428
11.8　解决方案：创建基于URL的服务 431
11.8.1　声明模式 432
11.8.2　测试URL 433
11.8.3　添加处理程序方法 433
11.9　小结 434
第12章　浅谈Core Data 435
12.1　Core Data简介 435
12.2　实体与模型 436
12.2.1　构建模型文件 436
12.2.2　属性与关系 437
12.2.3　构建NSManagedObject的子类 437
12.3　创建上下文 438
12.4　添加数据 439
12.5　查询数据库 441
12.5.1　配置NSFetchRequest 442
12.5.2　执行数据获取操作 443
12.6　移除对象 444
12.7　解决方案：用Core Data来充当表格的数据源 445
12.7.1　访问索引路径 445
12.7.2　sectionNameKeyPath属性 445
12.7.3　获取每个区段内的对象 445
12.7.4　sectionIndexTitles属性 446
12.7.5　Core Data与表格之间的紧密结合 446
12.8　解决方案：用Core Data实现表格的搜索功能 448
12.9　解决方案：为Core Data表格视图添加编辑功能 450
12.9.1　添加撤销/重做功能 451
12.9.2　创建撤销事务 452
12.9.3　重新思考编辑功能 452
12.10　解决方案：由Core Data所驱动的集合视图 456
12.11　小结 461
第13章　网络编程基础 462
13.1　解决方案：判断网络状态 462
13.2　监测联网状况是否发生变化 465
13.3　URL加载系统 467
13.3.1　配置 467
13.3.2　任务 468
13.3.3　NSURLSession 468
13.4　解决方案：简单的下载 469
13.5　解决方案：在下载过程中提供反馈 473
13.6　解决方案：后台传输 482
13.6.1　测试后台传输 484
13.6.2　Web服务 484
13.7　解决方案：使用NSJSONSeriali-zation类 485
13.8　解决方案：将XML转换为树状结构 487
13.8.1　树 489
13.8.2　构建解析树 489
13.9　小结 492
第14章　针对特定设备的开发 493
14.1　访问基本的设备信息 493
14.2　添加设备能力限制 494
14.2.1　提供描述信息以征求用户同意 496
14.2.2　Info.plist文件中其他常用的键 496
14.3　解决方案：检查设备距离与电池状态 496
14.3.1　启用与禁用距离感应器 497
14.3.2　监控电池状态 497
14.3.3　判断设备是否具有Retina显示屏 499
14.4　解决方案：获取设备的其他信息 500
14.5　Core Motion基础知识 502
14.5.1　判断设备是否支持某种感应器 502
14.5.2　获取感应器数据 503
14.6　解决方案：通过加速度来判断“上”方向 503
14.7　使用基本的方向值 504
14.7.1　根据加速计来判断方向 505
14.7.2　计算相对角度 506
14.8　解决方案：使用加速计来移动屏幕上的物体 507
14.9　解决方案：基于加速计的滚动视图 511
14.10　解决方案：获取并使用设备的姿态 513
14.11　用Motion Event来检测晃动 514
14.12　使用外接屏幕 515
14.12.1　检测屏幕 516
14.12.2　获取屏幕分辨率 517
14.12.3　配置视频输出 517
14.12.4　添加CADisplayLink 518
14.12.5　对过扫描进行补偿 518
14.12.6　VIDEOkit 518
14.13　追踪用户 521
14.14　查询可用的磁盘空间 522
14.15　小结 523
第15章　辅助功能 524
15.1　辅助功能基础知识 524
15.2　启用辅助功能 526
15.3　特征 526
15.4　标签 528
15.5　提示语 528
15.6　用模拟器测试辅助功能 529
15.7　把变化情况传播出去 531
15.8　在iOS上面测试辅助功能 531
15.9　语音合成 533
15.10　动态字体 534
15.11　小结 535
附录A　Objective-C字面量 536
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS核心开发手册（原书第5版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>企业级iOS应用开发实战
前言
基础篇
第1章  企业应用的话题／2
1.1  什么是企业应用／2
1.1.1  传统意义的企业应用／2
1.1.2  iOS 企业应用／3
1.2  iOS企业应用程序的架构／3
1.2.1  服务端／4
1.2.2  iOS 客户端／4
1.3  iOS企业应用程序的发布／5
1.3.1  iOS应用程序发布与App Store／5
1.3.2  Ad-Hoc与In-House发布／6
1.3.3  OTA无线部署／21
第2章  iOS开发框架简介／24
2.1  苹果iOS 简介／24
2.2  iOS框架介绍／25
2.3  Cocoa Touch 框架简介／25
2.4  搭建iOS开发环境／27
2.4.1  安装Mac OS X操作系统／27
2.4.2  下载安装SDK／33
2.5  写一个iPhone程序／33
2.6  在模拟器上运行应用程序／39
2.7  在 iPhone 上运行应用程序／39
第3章  Objective-C 语法简介／42
3.1  Objective-C的C语言特性／42
3.1.1  一个简单的 Hello World／42
3.1.2  Objetive-C是另一种C／43
3.1.3  数据类型／44
3.1.4  常量、变量和宏／50
3.1.5  #include和#import／51
3.1.6  函数／51
3.1.7  分支和循环／51
3.2  面向对象的C／51
3.2.1  类和对象／51
3.2.2  消息机制／54
3.2.3  Objective-C 的内存管理／55
3.2.4  类别和协议／57
3.2.5  反射机制／59
3.2.6  谓词／62
3.3  MVC模式／65
3.4  KVO模型／65
3.4.1  注册KVO／66
3.4.2  接收变更通知／67
3.4.3  发送变更通知／67
3.5  块编程／68
3.5.1  块的特点／68
3.5.2  Objective-C 中的块／69
3.6  可变参数／71
3.7  本章小结／73
第4章  Xcode集成开发环境／74
4.1  创建第一个Xcode应用程序／74
4.2  构成应用程序的那些东西／76
4.2.1  Info.plist 和 pch 文件／76
4.2.2  Xib 文件／77
4.2.3  资源文件／77
4.2.4  源代码文件／77
4.2.5  项目和目标／77
4.2.6  Frameworks／80
4.2.7  应用程序的文档目录和临时文件夹／81
4.3  了解Xcode为我们做了些什么／83
4.3.1  main.m／83
4.3.2  应用程序委托／84
4.4  在Xcode中添加View Controller／84
4.5  在Xcode中添加框架／89
4.6  Xcode 使用技巧／90
4.6.1  自动完成／90
4.6.2  查找和替换／91
4.6.3  快速帮助／91
4.6.4  快照／91
4.6.5  书签／91
4.6.6  使用导航条／92
4.7  本章小结／92
第5章  Interface Builder／93
5.1  IB和xib、nib文件／93
5.2  初识IB／94
5.3  使用IB创建图形界面／95
5.3.1  控制器和视图／95
5.3.2  基本控件介绍／99
5.4  连接／100
5.4.1  IBOutlet 连接／100
5.4.2  IBAction 连接／102
5.4.3  委托连接／103
5.4.4  使用Assistant Editor创建连接／105
5.5  本章小结／106
第6章  高级图形界面／107
6.1  应用程序多视图的导航／107
6.1.1  UITabBarController／107
6.1.2  UINavigationController／110
6.1.3  窗体导航应用实例／114
6.2  表视图UITableViewController的应用及其扩展／116
6.2.1  简单的表视图控制器／116
6.2.2  UITableView的数据源和委托／117
6.2.3  分组表视图／119
6.2.4  可折叠的分组表视图／121
6.3  扩展UIKit／131
6.3.1  扩展日期挑选控件／131
6.3.2  扩展单选按钮和复选按钮／133
6.3.3  扩展下拉列表框／135
6.3.4  封装自己的控件库／137
6.4  翻页控件和翻页控制器／142
6.4.1  UIPageControl／143
6.4.2  UIPageViewController／147
6.5  本章小结／152
企业应用篇
第7章  网络／154
7.1  使用NSURLConnection获得网络数据／154
7.2  使用NSOperation进行异步请求／158
7.3  与网络相关的示例／163
7.4  ASIHTTPRequest框架介绍／166
7.4.1  发送同步请求／167
7.4.2  发送异步请求／168
7.4.3  文件上传／169
7.4.4  文件下载／172
7.4.5  Cookies和Sessions／176
7.5  编写自己的网络模块类／179
7.5.1  PostRequest类／179
7.5.2  NetworkModule类／181
7.5.3  测试NetworkModule／185
7.6  本章小结／186
第8章  XML和Json／188
8.1  Cocoa与XML解析／188
8.1.1  NSXMLParser／188
8.1.2  NSXMLParserDelegate／189
8.2  TBXML／190
8.3  libxml／191
8.3.1  在项目中使用libxml／192
8.3.2  libxml应用实例／192
8.4  GDataXML／202
8.5  Json和SBJson／218
8.5.1  在项目使用SBJson／218
8.5.2  SBJson使用示例／218
8.6  本章小结／219
第9章  保存用户数据／220
9.1  文件的持久化／220
9.1.1  保存到plist文件／220
9.1.2  NSUserDefaults／221
9.1.3  归档／224
9.2  数据库／226
9.2.1  嵌入式数据库SQLite3／226
9.2.2  使用 Core Data／228
9.2.3  使用PLDatabase访问数据库／232
9.3  本章小结／236
第10章  安全／237
10.1  iOS安全框架简介／237
10.1.1  证书、密钥和信任服务／237
10.1.2  在iPhone中使用X.509证书／238
10.2  使用SSL和服务器通信／244
10.3  OpenSSL／245
10.3.1  在iOS中使用OpenSSL库／245
10.3.2  OpenSSL应用实例--使用OpenSSL进行MD5加密／248
10.4  CommonCrypto／250
10.5  本章小结／252
第11章  多媒体、绘图及动画／253
11.1  播放视频／253
11.2  播放音频／254
11.3  Quartz 2D／255
11.3.1  图形上下文／255
11.3.2  路径／256
11.3.3  变换／257
11.3.4  图案／261
11.3.5  阴影／262
11.3.6  渐变／263
11.3.7  透明图层／264
11.3.8  位图及遮罩／264
11.4  Core Animation／267
11.4.1  隐式动画／267
11.4.2  显式动画／268
11.5  本章小结／269
第12章  多点触摸及手势／270
12.1  手势识别器：UIGestureRecognizer 类／270
12.2  创建手势识别器／272
12.3  实现图片的拖动及缩放／276
12.4  本章小结／279
第13章  本地化／280
13.1  iPhone的本地化支持／280
13.1.1  国家代码和语言代码／280
13.1.2  本地化文件夹的匹配／281
13.2  本地化应用程序／281
13.2.1  使用NSLocaledString本地化字符串／281
13.2.2  本地化图像／285
13.2.3  本地化xib文件／285
13.2.4  本地化应用程序名称／285
13.3  示例／285
13.4  本章小结／289
第14章  iOS多线程和并行编程／290
14.1  多线程／290
14.1.1  NSThread／291
14.1.2  RunLoop／293
14.2  并行编程／296
14.2.1  Dispatch Queue／296
14.2.2  将任务加入Dispatch Queue／297
14.2.3  Dispatch源／298
14.3  后台任务／301
14.4  本章小结／303
第15章  通知、本地通知和远程通知／304
15.1  通知／304
15.2  本地通知／307
15.3  远程通知／315
15.3.1  Apple Push 简介／316
15.3.2  准备使用APNs／316
15.3.3  准备接收推送通知／320
15.3.4  创建 Push Notification Provider／322
15.4  本章小结／325
第16章  开源框架Core Plot／327
16.1  编译Core Plot框架／327
16.2  使用Core Plot SDK／327
16.3  安装Core Plot帮助文档／328
16.4  图表的构成／329
16.5  类图／330
16.6  使用 Core Plot 绘制折线图／331
16.7  使用Core Plot绘制柱状图／335
16.7.1  绘制基本的柱状图／335
16.7.2  固定坐标轴／336
16.7.3  显示数据点的值／338
16.7.4  显示网格线／339
16.8  使用Core Plot绘制饼图／339
16.8.1  饼图的绘制／340
16.8.2  显示每个扇形的比例／341
16.8.3  剥离扇形／341
16.8.4  显示图例／342
16.8.5  响应事件／343
16.9  自定义Core Plot主题／343
16.10  本章小结／346
第17章  通讯簿、GPS和重力感应／347
17.1  通讯簿／347
17.1.1  Address Book UI／347
17.1.2  Address Book／348
17.1.3  联系人中文姓氏排序／350
17.2  GPS 和CoreLocation／351
17.3  重力感应／353
17.4  地理编码／355
17.5  本章小结／356
实战篇
第18章  企业APN／358
18.1  企业APN的建设／358
18.2  iPhone 与APN／359
18.3  配置描述文件／360
18.4  在iPhone上实现一个HTTP服务器／362
18.5  后台任务与无限后台任务／365
18.6  实现APN 切换／368
18.7  检测网络状况／369
18.8  Safari阻塞／373
18.9  本章小结／377
第19章  iOS企业应用实战／378
19.1  应用场景与功能概述／378
19.2  应用程序架构／378
19.3  服务器端／378
19.3.1  环境搭建／378
19.3.2  实现登录接口／379
19.3.3  实现企业通讯簿接口／379
19.3.4  实现收件箱接口／380
19.3.5  实现附件上传接口／380
19.3.6  实现附件下载接口／380
19.4  iPhone 客户端／381
19.4.1  实现登录／381
19.4.2  查看收件箱／383
19.4.3  邮件浏览／387
19.4.4  新建邮件／389
19.4.5  正文输入界面／391
19.4.6  通讯簿／392
19.4.7  附件文件的上传／397
19.5  本章小结／399
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>企业级iOS应用开发实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Lua实战：iOS游戏开发
《lua实战：ios游戏开发》
第1章　lua入门　1
1.1　什么是lua　1
1.2　lua历史　1
1.3　lua大事记　2
1.4　上手lua　3
1.5　配置lua　4
1.5.1　线上lua shell　4
1.5.2　windows、max os x和*nix　4
1.5.3　ios　4
1.6　lua特性　4
1.6.1　变量　4
1.6.2　用变量实现hello world　5
1.6.3　字符串　6
1.6.4　数字　7
1.6.5　值和类型　8
1.6.6　块和作用域　9
1.7　lua运算符　10
1.7.1　算术运算符　10
1.7.2　关系运算符　10
.1.7.3　逻辑运算符　10
1.7.4　其他运算符　11
1.8　总结　11
第2章　lua库　12
2.1　基础函数　12
2.1.1　assert(v[,message])　12
2.1.2　collectgarbage([opt[,arg]])　12
2.1.3　dofile([filename])　13
2.1.4　error(message[,level])　13
2.1.5　_g　13
2.1.6　getfenv([f])　13
2.1.7　getmetatable(object)　13
2.1.8　ipairs(t)　13
2.1.9　load(func[,chunkname])　14
2.1.10　loadstring(string[,chunkname])　14
2.1.11　next(table[,index])　14
2.1.12　pairs(t)　14
2.1.13　pcall(f,arg1,…)　14
2.1.14　print(…)　14
2.1.15　rawequal(v1,v2)　15
2.1.16　rawget(table,index)　15
2.1.17　rawest(table,index,value)　15
2.1.18　select(index,…)　15
2.1.19　setfenv(f,table)　15
2.1.20　setmetatable(table,metatable)　15
2.1.21　tonumber(e[,base])　15
2.1.22　tostring(e)　15
2.1.23　type(v)　16
2.1.24　unpack(list[,i[,j]])　16
2.1.25　_version　16
2.1.26　xpcall(f,err)　16
2.2　系统函数库　17
2.2.1　表函数　17
2.2.2　系统函数　19
2.3　表(tables)概述　21
2.3.1　数组表　21
2.3.2　关联数组表　21
2.4　函数：进阶　21
2.4.1　对象表　22
2.4.2　.和:的区别　23
2.5　小结　25
第3章　文件操作　26
3.1　隐式函数　26
3.1.1　io.close([file])　26
3.1.2　io.flush()　26
3.1.3　io.input([file])　27
3.1.4　io.lines([filename])　27
3.1.5　io.open(filename[,mode])　27
3.1.6　io.output([file])　27
3.1.7　io.read(…)　28
3.1.8　io.tmpfile()　28
3.1.9　io.type(obj)　28
3.1.10　io.write(…)　28
3.2　显式函数　28
3.2.1　file:close()　28
3.2.2　file:flush()　29
3.2.3　file:lines()　29
3.2.4　file:read([format])　29
3.2.5　file:seek([whence][,offset])　29
3.2.6　file:setvbuf(mode[,size])　30
3.2.7　file:write(…)　30
3.3　在游戏中使用文件i/o　30
3.4　保存变量　31
3.5　获取数据　31
3.5.1　代码分析　32
3.5.2　潜在问题　32
3.6　变量存储数据　33
3.6.1　代码分析　33
3.6.2　潜在问题　34
3.7　数据写入文件　35
3.8　存储表　35
3.9　动态变量　36
3.10　小结　37
第4章　lua数学函数　38
4.1　lua数学函数简介　38
4.1.1　math.abs(x)　38
4.1.2　math.acos(x)　38
4.1.3　math.asin(x)　38
4.1.4　math.atan(x)　39
4.1.5　math.atan2(y,x)　39
4.1.6　math.ceil(x)　39
4.1.7　math.cos(x)　39
4.1.8　math.cosh(x)　39
4.1.9　math.deg(x)　39
4.1.10　math.exp(x)　39
4.1.11　math.floor(x)　40
4.1.12　math.fmod(x,y)　40
4.1.13　math.frexp(x)　40
4.1.14　math.huge　40
4.1.15　math.ldexp(m,e)　40
4.1.16　math.log(x)　40
4.1.17　math.log10(x)　41
4.1.18　math.max(x,...)　41
4.1.19　math.min(x,...)　41
4.1.20　math.modf(x)　41
4.1.21　math.pi　41
4.1.22　math.pow(x,y)　41
4.1.23　math.rad(x)　41
4.1.24　math.random([m[,n]])　41
4.1.25　math.randomseed(x)　42
4.1.26　math.sin(x)　42
4.1.27　math.sinh(x)　42
4.1.28　math.sqrt(x)　42
4.1.29　math.tan(x)　42
4.1.30　math.tanh(x)　42
4.2　在游戏中应用数学函数的实例　42
4.2.1　赋值　43
4.2.2　递增与递减　43
4.2.3　引入坐标点　44
4.2.4　条件分支　44
4.2.5　抛硬币　45
4.2.6　掷骰子　45
4.2.7　使用标记位(flag)　46
4.2.8　多种标记位　47
4.2.9　利用数学函数实现循环　48
4.2.10　在游戏中引入网格　48
4.2.11　移动角色　56
4.3　逻辑运算函数　59
4.4　小结　61
第5章　字符串　62
5.1　什么是字符串　62
5.1.1　string.byte(s[,i[,j]])　62
5.1.2　string.char(...)　63
5.1.3　string.dump(funtion)　63
5.1.4　string.find(s,pattern[,init[,plain]])　63
5.1.5　string.format(formatstring,...)　63
5.1.6　string.gmatch(s,pattern)　64
5.1.7　string.gsub(s,pattern,repl[,n])　64
5.1.8　string.len(s)　64
5.1.9　string.lower(s)　64
5.1.10　string.match(s,patterns[,init])　64
5.1.11　string.rep(s,n)　64
5.1.12　string.reverse(s)　65
5.1.13　string.sub(s,i[,j])　65
5.1.14　string.upper(s)　65
5.2　模式　65
5.2.1　字符类　65
5.2.2　模式项　66
5.2.3　模式　66
5.2.4　捕获　66
5.3　使用字符串函数　66
5.3.1　将字符串转化为大写　67
5.3.2　将字符串转化为小写　67
5.3.3　将字符串转化为首字母大写　67
5.3.4　填充字符串　67
5.3.5　csv功能　68
5.3.6　用千位分隔符规范数字的格式　69
5.3.7　字母频率　69
5.3.8　判断回文字符串　70
5.3.9　分割字符串　70
5.4　关卡管理　70
5.5　小结　72
第6章　线程　73
6.1　协同线程　73
6.1.1　协同线程函数　73
6.1.2　创建协同线程　74
6.2　表　77
6.2.1　自定义元表　78
6.2.2　实际例子　83
6.3　lua面向对象　83
6.4　什么是对象　87
6.5　小结　90
第7章　技巧提示　91
7.1　通用lua函数　91
7.1.1　使用printf函数　91
7.1.2　计算表中元素的数量　92
7.1.3　使用isempty　92
7.1.4　获取元素索引　92
7.1.5　判断一个表是否是数组　93
7.1.6　设置默认值　93
7.1.7　复制表　94
7.1.8　深度复制　94
7.1.9　复制数组部分　95
7.1.10　复制非数组部分　95
7.1.11　合并两个表　95
7.1.12　判断表是否包含特定值　95
7.1.13　找出table之间的差异　96
7.1.14　表作为返回值　96
7.1.15　表内元素排序　96
7.1.16　判断表中特定项的频度　97
7.1.17　转换数字为罗马数字　97
7.1.18　创建链表　98
7.1.19　扩展标记变量　99
7.1.20　字符串补零　100
7.1.21　获取字符类型的月份　100
7.1.22　像数组一样访问字符串　101
7.1.23　测量一维或二维中两点间距　101
7.1.24　判断两点的夹角　101
7.1.25　限定数字范围　101
7.1.26　线性插值法　102
7.1.27　获取值的标识符　102
7.2　碰撞　103
7.2.1　使用ispointlnrect　103
7.2.2　使用pointlncircle　103
7.2.3　判断一个矩形是否包含另一个矩形　104
7.2.4　判断一个圆形是否包含另一个圆形　104
7.2.5　识别重叠矩形　104
7.2.6　识别重叠圆形　105
7.2.7　判断一个圆形和一个矩形是否重叠　105
7.2.8　使用pointlntriangle　106
7.2.9　使用pointlnpolygon　106
7.3　其他通用函数　107
7.3.1　布尔值比较　107
7.3.2　将c/java循环代码转换为lua　107
7.3.3　应用物体摩擦力　108
7.3.4　模拟一个玩偶盒　108
7.3.5　正弦滚动条　109
7.3.6　在面板的单行或单列放置唯一图块　109
7.3.7　利用数组输出大规模模板文本　110
7.4　参数处理　111
7.4.1　固定参数　111
7.4.2　动态参数　112
7.4.3　动态名称参数　112
7.4.4　使用可变参数　112
7.4.5　解析传入参数列表　113
7.4.6　生成只读table　115
7.4.7　实现堆栈　116
7.4.8　参数和表之间的转换　117
7.5　二维矢量　118
7.6　小结　120
第8章　corona sdk　121
8.1　配置corona sdk　121
8.2　corona sdk工作原理　121
8.3　corona sdk helloworld　122
8.3.1　图像版本　123
8.3.2　hello world　124
8.3.3　设备显示hello world　125
8.4　不仅仅是hello world：在屏幕上创建一个矩形　126
8.4.1　群组　128
8.4.2　图像　130
8.4.3　事件驱动　130
8.4.4　触屏输入　131
8.4.5　物理特性　132
8.5　一切都是计时　134
8.5.1　帧　135
8.5.2　实现生命条　136
8.6　利用enterframe实现动画　138
8.6.1　再说生命条　139
8.6.2　使用transition函数　140
8.6.3　移除屏幕中的对象　145
8.7　制作音效　145
8.7.1　发出声音　145
8.7.2　加工声音　146
8.8　视频处理　148
8.9　实现一个电梯　149
8.9.1　放大视图　150
8.9.2　其他事件　153
8.9.3　使用地图　155
8.10　浏览器　156
8.11　对象回收　157
8.12　企业版本　158
8.13　小结　158
第9章　gideros studio　159
9.1　许可　159
9.2　安装gideros studio　159
9.2.1　包含内容　160
9.2.2　设置许可　160
9.2.3　第一步　161
9.2.4　运行代码　162
9.2.5　配置项目　163
9.3　架构　165
9.4　gideros引擎　165
9.4.1　hello小鸟　166
9.4.2　对齐图像　166
9.4.3　群组　167
9.4.4　显示文字　168
9.4.5　绘制形状　170
9.4.6　应用程序对象　174
9.4.7　添加音效　176
9.4.8　事件　176
9.4.9　动画　181
9.4.10　局域网和网络　182
9.4.11　gps和指南针　183
9.4.12　加速计　184
9.4.13　陀螺仪　184
9.4.14　物理效果　185
9.5　插件　186
9.6　小结　188
第10章　moai　190
10.1　什么是moai　190
10.2　获取moai　190
10.3　moai sdk　191
10.4　hello moai　191
10.5　显示文字　194
10.5.1　truetype字体　194
10.5.2　位图字体　195
10.5.3　文本属性　196
10.6　绘制矢量图元　197
10.6.1　绘制直线　197
10.6.2　绘制矩形　197
10.6.3　绘制填充矩形　199
10.6.4　绘制圆　200
10.6.5　绘制填充圆　200
10.6.6　绘制椭圆　200
10.6.7　绘制填充椭圆　200
10.6.8　绘制多边形　201
10.6.9　绘制点　201
10.6.10　绘制属性　202
10.7　绘制图像　202
10.7.1　绘制自定义图像　203
10.7.2　载入图像　203
10.7.3　copying images　204
10.7.4　保存图像　204
10.7.5　修改图像尺寸　204
10.7.6　图像的像素提取　204
10.8　动画　205
10.9　栅格deck　206
10.10　线程　209
10.11　组　210
10.12　处理输入　212
10.12.1　键盘事件　212
10.12.2　鼠标事件　213
10.12.3　触控事件　216
10.13　声音　217
10.14　显示对话框　217
10.15　播放视频　218
10.16　设备旋转　218
10.17　通知　218
10.18　网络　219
10.19　使用json　221
10.20　使用base64　221
10.21　压缩数据　222
10.22　物理特性　223
10.22.1　box2d物理功能　223
10.22.2　chipmunk物理功能　226
10.23　moai云　228
10.23.1　创建web服务　228
10.23.2　使用web服务　230
10.24　小结　231
第11章　l?ve　232
11.1　架构　232
11.2　安装l?ve　233
11.3　运行l?ve　233
11.4　回调函数　234
11.4.1　love.load()　234
11.4.2　love.update(dt)　234
11.4.3　love.draw()　234
11.4.4　love.mousepressed(x,y,button)　234
11.4.5　love.mousereleased(x,y,button)　234
11.4.6　love.keypressed(key,unicode)　234
11.4.7　love.keyreleased(key)　235
11.4.8　love.focus()　235
11.4.9　love.quit()　235
11.5　l?ve命名空间　235
11.5.1　love.audio　235
11.5.2　love.event　235
11.5.3　love.filesystem　236
11.5.4　love.font　236
11.5.5　love.graphics　236
11.5.6　love.image　236
11.5.7　love.joystick　236
11.5.8　love.mouse　237
11.5.9　love.physics　237
11.5.10　love.sound　237
11.5.11　love.thread　237
11.5.12　love.timer　237
11.6　图形模块　237
11.6.1　图像　237
11.6.2　移动　240
11.6.3　活动窗口　241
11.6.4　使用键盘控制移动　241
11.6.5　旋转对象　245
11.6.6　绘制图元　246
11.7　应用程序设置——conf.lua　251
11.8　创建特效　252
11.9　物理　254
11.10　显示文本　256
11.11　着色器　257
11.12　制造声音　259
11.13　示例游戏代码　260
11.14　小结　265
第12章　codea　266
12.1　获取codea　266
12.2　codea的架构　267
12.3　hello world　267
12.4　参数　268
12.5　使用codea进行绘制　269
12.5.1　设备旋转　269
12.5.2　系统键盘　270
12.5.3　绘制模式　270
12.5.4　背景颜色　270
12.5.5　画笔颜色　271
12.5.6　填充色　271
12.5.7　线宽　271
12.5.8　绘制直线　271
12.5.9　抗锯齿　271
12.5.10　绘制圆和椭圆　272
12.5.11　绘制矩形　273
12.5.12　绘制文本　273
12.6　显示图片　274
12.6.1　屏幕外绘制　275
12.6.2　在图片中载入精灵　275
12.6.3　保存图片　275
12.6.4　保存数据　275
12.6.5　“无色”绘制　276
12.6.6　变换函数　276
12.7　录制视频　277
12.8　触控　277
12.8.1　使用触控进行绘制　278
12.8.2　多点触控　279
12.9　制造声音　280
12.10　ios硬件　281
12.11　下载数据　283
12.12　显示网页　284
12.13　物理特性　284
12.14　矢量计算　286
12.14.1　anglebetween　286
12.14.2　cross　286
12.14.3　dist　286
12.14.4　distsqr　286
12.14.5　dot　286
12.14.6　len　286
12.14.7　lensqr　287
12.14.8　normalize　287
12.14.9　rotate　287
12.14.10　rotate90　287
12.15　小结　287
第13章　库　288
13.1　particle candy　288
示例代码　289
13.2　text candy　290
示例代码　291
13.3　widget candy　291
示例代码　292
13.4　corona autolan　293
13.5　corona profiler　293
示例代码　294
13.6　director　294
示例代码　295
13.7　lime　295
示例代码　295
13.8　rapanui　295
示例代码　296
13.9　gideros illustrator(svg library)　296
示例代码　297
13.10　tnt particles library　297
示例代码　297
13.11　busted　297
示例代码　298
13.12　moses　298
示例代码　298
13.13　allen　299
示例代码　299
13.14　bhwax　299
示例代码　299
13.15　小结　301
第14章　第三方应用程序　302
14.1　ide　302
14.1.1　glider　302
14.1.2　coronacomplete　303
14.1.3　lua studio　304
14.1.4　zerobrane studio　305
14.2　文本编辑器　306
14.2.1　notepad++　306
14.2.2　textmate　307
14.2.3　textwrangler　308
14.2.4　bbedit　308
14.2.5　sublime text 2　309
14.2.6　textastic代码编辑器　310
14.3　片段收集器　311
14.3.1　codebox　312
14.3.2　code collector pro　312
14.4　版本控制　313
14.5　位图编辑器　314
14.5.1　pixen　314
14.5.2　graphicsgale　315
14.5.3　pixelmator　316
14.5.4　axialis iconworkshop　317
14.5.5　inkscape　317
14.5.6　paint.net　318
14.5.7　iconify　319
14.6　精灵动画和层级创建工具　320
14.6.1　spritehelper　320
14.6.2　levelhelper　320
14.6.3　tiled　321
14.6.4　texturepacker　322
14.6.5　physicseditor　323
14.6.6　particle designer　324
14.6.7　glyph designer　325
14.6.8　spriteloq　326
14.6.9　zo?　327
14.6.10　tnt animator studio　328
14.7　音频工具　328
14.7.1　audacity　328
14.7.2　bfxr　329
14.7.3　nodebeat　330
14.8　小结　331
第15章　　　示例代码　332
15.1　图形　332
15.2　搭建环境　333
15.3　让直升机飞起来　334
15.4　使用加速度仪　336
15.5　移动直升机　336
15.6　发出声音　338
15.7　开枪　339
15.8　让子弹飞　340
15.9　敌军降临　341
15.10　移动场景物品　344
15.11　挂了　345
15.12　上点颜色　347
15.13　显示信息　348
15.14　game over，再来一遍　350
15.15　碰撞　352
15.15.1　射击飞机和气球　354
15.15.2　营救与加油　356
15.16　放到一起　357
15.17　小结　358
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Lua实战：iOS游戏开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS取证实战:调查、分析与移动安全
译者序
前言
第1章 概述1
1.1 介绍1
1.1.1 策略1
1.1.2 开发者社区2
1.2 iPhone型号4
1.3 取证审查方法8
1.3.1 iPhone取证技术分级9
1.3.2 取证获取类型11
1.3.3 使用Linux取证13
1.4 小结27
1.5 参考文献28
第2章 设备特性和功能29
2.1 介绍29
2.2 Apple设备概述29
2.3 操作模式30
2.3.1 基本模式31
2.3.2 恢复模式31
2.3.3 DFU模式31
2.3.4 退出恢复/DFU模式34
2.4 安全35
2.4.1 设备设置35
2.4.2 安全擦除36
2.4.3 应用程序安全36
2.5 与iTunes的交互37
2.5.1 设备同步37
2.5.2 iPhone备份37
2.5.3 iPhone还原38
2.5.4 iPhone iOS更新38
2.5.5 应用商店43
2.5.6 MobileMe43
2.6 小结43
2.7 参考资料43
第3章 文件系统和数据存储45
3.1 介绍45
3.2 可恢复的数据45
3.3 数据存储位置46
3.4 数据存储方式48
3.4.1 内部存储49
3.4.2 SQLite 数据库文件50
3.4.3 属性列表51
3.4.4 网络54
3.5 存储器类型54
3.5.1 RAM54
3.5.2 NAND闪存55
3.6 iPhone操作系统58
3.7 文件系统59
3.7.1 卷61
3.7.2 日志62
3.7.3 iPhone磁盘分区62
3.8 小结63
3.9 参考文献63
第4章 iPhone和iPad的数据安全65
4.1 介绍65
4.2 数据安全和测试65
4.2.1 美国计算机犯罪法66
4.2.2 由管理员负责的数据保护67
4.2.3 安全测试过程70
4.3 应用程序安全76
4.3.1 移动应用程序的企业或个人客户77
4.3.2 公司或个人移动应用开发者79
4.3.3 应用开发者的安全策略79
4.4 对设备和应用的安全建议84
4.5 小结85
4.6 参考文献85
第5章 取证获取87
5.1 介绍87
5.2 iPhone取证概述87
5.2.1 调查类型87
5.2.2 逻辑技术和物理技术的区别88
5.2.3 目标设备的修改88
5.3 处理证据90
5.3.1 密码处理90
5.3.2 网络隔离91
5.3.3 关闭的设备91
5.4 映像iPhone/iPad91
5.4.1 备份获取91
5.4.2 逻辑获取97
5.4.3 物理获取97
5.5 映像其他Apple设备108
5.5.1 iPad108
5.5.2 iPod Touch109
5.5.3 Apple TV109
5.6 小结109
5.7 参考文献109
第6章 数据和应用程序分析111
6.1 介绍111
6.2 分析技术111
6.2.1 挂载磁盘映像111
6.2.2 文件雕复112
6.2.3 strings117
6.2.4 时间表创建及分析119
6.2.5 取证分析125
6.3 iPhone数据存储位置130
6.3.1 默认应用程序131
6.3.2 下载的应用程序137
6.3.3 其他相关数据140
6.4 iPhone应用程序分析和参考147
6.4.1 默认应用程序147
6.4.2 下载的第三方应用程序167
6.5 小结175
6.6 参考文献175
第7章 商用工具测试176
7.1 介绍176
7.2 数据构造176
7.3 分析方法179
7.4 CelleBrite UFED181
7.4.1 安装182
7.4.2 取证获取182
7.4.3 结果和报告183
7.5 iXAM188
7.5.1 安装189
7.5.2 取证获取189
7.5.3 结果和报告191
7.6 Oxygen Forgensic Suite2010193
7.6.1 安装195
7.6.2 取证获取195
7.6.3 结果和报告196
7.7 XRY199
7.7.1 安装200
7.7.2 取证获取200
7.7.3 结果和报告200
7.8 Lantern204
7.8.1 安装205
7.8.2 取证获取205
7.8.3 结果和报告206
7.9 MacLock Pick208
7.9.1 安装209
7.9.2 取证获取210
7.9.3 结果和报告210
7.10 Mobilyze211
7.10.1 安装212
7.10.2 取证获取212
7.10.3 结果和报告213
7.11 Zdziarski技术215
7.11.1 安装217
7.11.2 取证获取218
7.11.3 结果和报告218
7.12 Paraben Device Seizure220
7.12.1 安装222
7.12.2 取证获取222
7.12.3 结果和报告223
7.13 MobileSyncBrowser226
7.13.1 安装226
7.13.2 取证获取226
7.13.3 结果和报告226
7.14 CellDEK228
7.14.1 安装229
7.14.2 取证获取229
7.14.3 结果和报告229
7.15 EnCase Neutrino232
7.15.1 安装232
7.15.2 取证获取232
7.15.3 结果和报告233
7.16 iPhone Analyzer235
7.16.1 安装236
7.16.2 取证获得237
7.16.3 结果和报告237
7.17 小结239
7.18 参考文献240
附录A iTunes备份位置241
附录B 分析常规文件和数据类型的工具242
附录C iPhone文件系统243
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS取证实战:调查、分析与移动安全
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS 5核心框架
第1章　iOS框架　0
1.1　开始之前　2
1.1.1　阅读本书的前提条件　2
1.1.2　我期望本书达到的目标　4
1.2　iOS框架快速入门　5
1.3　了解多核处理器带来的冲击　8
1.3.1　对并发性的需求　9
1.3.2　操作队列与分发队列的对比　10
1.3.3　代码块　11
1.3.4　在iOS框架中使用代码块　13
1.4　iOS 5中的十大技术　14
1.5　小结　15
第1部分　数据与云　17
第2章　Core Data　18
2.1　Core Data入门　20
2.1.1　Core Data是什么　20
2.1.2　Core Data栈　21
2.2　在Xcode中设置Core Data　28
2.2.1　创建受控对象模型　29
2.2.2　创建新的持久化存储调度器　31
2.2.3　添加新的持久化存储　31
2.2.4　创建新的受控对象上下文　32
2.3　与Core Data互动　33
2.3.1　添加新对象　34
2.3.2　获取并修改对象　35
2.3.3　删除对象　36
2.3.4　撤销、重做、回滚和复位　37
2.4　小结　40
第3章　iCloud　42
3.1　iCloud入门　44
3.1.1　iCloud是如何工作的　44
3.1.2　开始之前　47
3.1.3　iCloud存储容器　51
3.1.4　使用iCloud的注意事项　52
3.2　键值对存储　53
3.2.1　使用键值对泛存　54
3.2.2　添加与删除对象　55
3.2.3　对变更通知做出响应　57
3.3　对Core Data进行同步　58
3.3.1　确认iCloud是否可用　59
3.3.2　设置iCloud对持久化存储进行同步　60
3.3.3　Core Data持久化存储的变更通知　61
3.4　iCloud文档存储　63
3.5　小结　64
第2部分　位置与账号服务　67
第4章　Core Location与地图开发包　68
4.1　Core Location与地图开发包入门　70
4.1.1　位置是如何确定的　71
4.1.2　定位权限　74
4.2　核心定位管理器　77
4.2.1　标准定位服务　78
4.2.2　显著位置变化监视功能　80
4.2.3　方向监测　81
4.2.4　区域监测　83
4.2.5　响应核心来自定位管理器的新信息　85
4.3　正、反向地理编码　86
4.3.1　地理编码的益处　86
4.3.2　地理编码的不足之处　87
4.3.3　正向地理编码　87
4.3.4　反向地理编码解析　90
4.4　使用地图开发包　91
4.5　小结　92
第5章　系统账号和原生Twitter API　94
5.1　系统账号和Twitter入门　96
5.1.1　理解OAuth服务　96
5.1.2　账号工作流　97
5.2　使用Accounts框架　99
5.2.1　新应用和Accounts框架　99
5.2.2　访问Accounts框架中的账号　101
5.2.3　将用户从现有应用迁移到Accounts框架中　103
5.2.4　特别关注　105
5.3　轻松Twitter：推文编写视图控制器　107
5.4　使用Twitter API　110
5.4.1　创建一个TWRequest对象　111
5.4.2　执行一个TWRequest　112
5.4.3　处理TWRequest的回应　114
5.5　小结　116
第3部分　图形、图像以及动画　117
第6章　Core Graphics　118
6.1　Core Graphics入门　120
6.1.1　Core Graphics与Quartz 2D　121
6.1.2　点与像素之对比　122
6.1.3　图形上下文　123
6.1.4　为什么使用Core Graphics　124
6.2　理解Core Graphics　125
6.2.1　绘制自定义UIView　125
6.2.2　图形上下文栈　127
6.3　路径、渐变、文字与图像　129
6.3.1　路径　130
6.3.2　渐变　132
6.3.3　文字　133
6.3.4　图像　134
6.4　小结　135
第7章　Core Image　136
7.1　Core Image入门　138
7.2　理解Core Image框架　141
7.2.1　Core Image处理静止图像与视频帧　143
7.2.2　Core Image滤镜　146
7.2.3　Core Image上下文　150
7.2.4　CPU渲染与GPU渲染的对比　151
7.2.5　分析图像　153
7.2.6　别阻塞了主线程　156
7.3　例子：Core Image编辑器　157
7.4　小结　160
第8章　Core Animation　162
8.1　Core Animation入门　164
8.2　通过UIKit使用Core Animation　166
8.2.1　通过动画上下文使用UIKit动画　166
8.2.2　通过动画代码块使用UIKit动画　167
8.3　理解自定义Core Animation效果　169
8.3.1　Core Animation图层　169
8.3.2　隐式动画和显式动画　170
8.3.3　Core Animation对象　171
8.3.4　我的第一个自定义动画　172
8.4　Core Animation示例　173
8.4.1　关键帧动画　173
8.4.2　3D变换　176
8.4.3　粒子发生器　179
8.5　小结　183
第4部分　多媒体：音频与视频　185
第9章　Core Audio　186
9.1　多媒体框架　188
9.2　音频入门　189
9.3　使用iPod音乐库　191
9.3.1　媒体选取控制器　192
9.3.2　音乐播放控制器　194
9.3.3　音乐播放器通知　195
9.4　使用其他来源的音频　196
9.4.1　AV Foundation音频会话　197
9.4.2　AV音频播放器　200
9.5　小结　203
第10章　AV Foundation　204
10.1　AV Foundation入门　206
10.1.1　为什么要用AV Foundation　206
10.1.2　AV Foundation及其他媒体相关框架　208
10.2　使用一揽子解决方案　209
10.2.1　UIImagePickerController　210
10.2.2　使用MPMoviePlayerController　215
10.3　创建自定义媒体捕捉解决方案　221
10.3.1　AVCaptureSession　221
10.3.2　AVCaptureVideoPreviewLayer　222
10.3.3　自定义图像捕捉方案　222
10.4　小结　228
第5部分　iOS 5书报栏应用　231
第11章　Newsstand Kit　232
11.1　Newsstand Kit入门　234
11.2　了解书报栏应用　238
11.3　用Newsstand Kit下载内容　240
11.3.1　启动新下载　241
11.3.2　处理下载进度和下载结束事件　243
11.3.3　更新书报栏应用的外观以反映新内容　245
11.4　给书报栏应用发通知　246
11.4.1　使用苹果公司推送通知服务　246
11.4.2　注册接收书报栏更新通知　247
11.4.3　书报栏推送通知的格式　248
11.4.4　响应远程通知　249
11.5　书报栏应用的特殊之处　250
11.5.1　从后台唤醒书报栏应用　250
11.5.2　重新连接弃置的下载项　251
11.6　小结　252
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS 5核心框架
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS开发之美
第1篇 ObjectiveC语法篇
第1章 iOS开发环境的搭建
1.1 硬件环境
1.2 软件环境
1.2.1 注册Apple ID
1.2.2 XCode下载与安装
1.2.3 iOS开发语言： ObjectiveC
1.3 分享一个小故事
1.4 总结与启发
第2章 ObjectiveC编程语言特性
2.1 ObjectiveC有什么奇特的地方
2.2 如何声明实例变量（浅谈@property的使用）
2.3 NSString的应用
2.4 如果判断两个字符串是否相等
2.5 对象类型与基本数据类型的混合使用
2.6 对象类型与基本数据类型的转换（NSNumber与NSInteger）
2.7 不可变数组（NSArray）与可变数组（NSMutableArray）
2.7.1 不可变数组（NSArray）的特征
2.7.2 可变数组（NSMutableArray）的特征
2.7.3 如何遍历数组中的对象
2.8 不可变字典（NSDictionary）与可变字典（NSMutableDictionary）的应用
2.8.1 不可变字典（NSDictionary）
2.8.2 可变字典（NSMutableDictionary）
2.8.3 如何遍历字典中的对象
2.9 一种最简单的永久数据存储方式（NSUserDefaults的应用）
2.10 创建类的对象的两种方法
2.11 一种最简单的调试方法（NSLog的使用）
2.12 忍不住也来说说iOS的设计模式（MVC的使用）
2.13 总结与启发
第2篇 Storyboard技术篇
第3章 iOS常用开发控件
3.1 XIB App与Storyboard App之争
3.2 Storyboard开发环境
3.3 创建一个新的工程
3.4 熟悉XCode开发环境
3.5 运行HelloWorld
3.6 按钮（UIButton）与标签（UILabel）
3.6.1 创建UIButton的IBAction
3.6.2 创建UILabel的IBOutlet
3.6.3 实现Button被触发后的方法
3.7 如何删除对象的IBOutlet或IBAction
3.8 让键盘消失的四种方法
3.8.1 键盘消失方法一： Delegate应用三步法
3.8.2 键盘消失方法二： 事件响应的调用
3.8.3 键盘消失方法三： 将UIView改为UIControl
3.8.4 键盘消失方法四： 巧用UIButton
3.9 UITextField更多用法
3.10 getter与setter的应用场景
3.11 总结与启发
第4章 视图（UIView）与视图控制器（UIViewController）
4.1 如何创建一个基本的视图
4.2 透过UIAlterView看Delegate的应用
4.3 视图与视图控制器的生命周期
4.4 滚动视图（UIScrollView）的应用
4.5 总结与启发
第5章 Storyboard知多少
5.1 Storyboard编辑页面
5.2 Storyboard利器： Segue（连线）
5.3 创建和触发Segue的两种方法
5.4 Segue对象的属性设置
5.5 触发Segue的两种方法
5.6 Segue触发瞬间都要做些什么
5.7 巧用Segue
5.8 Segue的创建
5.9 嵌入Navigation Controller
5.10 活用prepareForSegue:sender:
5.11 重写对象的setter和getter
5.12 UIScrollView应用三步法
5.13 如何实现图片的缩放
5.14 通过异步加载获取网络图片
5.15 如何实现一个等待提示
5.16 总结与启发
第3篇 Delegate应用篇
第6章 Storyboard场景跳转方法
6.1 场景之间的正向跳转
6.1.1 直接跳转法（控件直接拖拽）
6.1.2 条件跳转法（performSegueWithIdentifier）
6.1.3 手动代码跳转法
6.1.4 三种方法的比较
6.2 场景之间的逆向跳转
6.2.1 Unwind Segue连线法
6.2.2 关于Unwind Segue的更多用法
6.2.3 通过编码方式实现逆向跳转
6.3 总结与启发
第7章 Delegate应用五步曲
7.1 学习Delegate的困惑
7.2 从一道经典的面试题说起
7.3 学习Delegate常出现的几个误区
7.4 Delegate技术难点在哪里
7.5 数据逆向传送一定要通过Delegate吗
7.6 Delegate应用五步曲
7.7 总结与启发
第4篇 表视图（TableView）应用篇
第8章 创建一个简单的表视图
8.1 表视图与表视图单元格（TableView与TableViewCell）
8.2 UITableView的代理机制（Data Source和Delegate）
8.2.1 UITableViewDataSource的应用
8.2.2 UITableViewDelegate的应用
8.3 创建一个表视图工程
8.4 视图控制器添加三步法
8.5 为表视图填充数据
8.6 如何确定列表的行数
8.7 如何显示列表每一行对应的内容
8.8 如何在表视图中添加缩略图
8.9 总结与启发
第9章 如何实现表视图的定制化单元格
9.1 如何让每一行显示特定的缩略图
9.2 如何定制化单元格（UITableViewCell）
9.3 为定制化单元格创建一个类
9.4 总结与启发
第10章 如何判断TableView选择了哪一行
10.1 如何理解UITableViewDelegate
10.2 UITableViewDelegate知多少
10.3 当某行被选中时， 弹出一个提示框
10.4 如何获取行的内容
10.5 如何对被选中的行做标记
10.6 总结与启发
第11章 如何管理表视图的数据
11.1 如何让数据更便于维护
11.2 如何理解Property List
11.3 将表数据存储为Property List格式
11.4 如何读取Property List文件的内容
11.5 如何从UITableView中删除一行
11.6 如何重载表视图的数据
11.7 如何永久性删除表视图的行数据
11.8 如何实现TableView的上拉或下拉刷新
11.9 基于UIViewController创建表视图
11.10 关于UITableViewCell重用的理解与应用
11.11 总结与启发
后记 关于iOS下一代编程语言——Swift
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS开发之美
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS 应用安全权威指南
推荐序 V
译者序 VII
作者简介 IX
前言 XI
致谢 XXI
第一部分 iOS 基础
第1 章 iOS 安全模型 2
安全启动 3
沙盒机制 3
数据保护和全盘加密 4
加密密钥的层级 5
钥匙串API 7
数据保护API 7
防御代码漏洞：ASLR、XN 和其他机制 8
越狱检测 9
苹果商店的审查是否有用 10
WebKit 桥接 11
动态修复 11
故意植入不安全的代码 12
内嵌解释器 12
小结 12
第2 章 Objective-C 简明教程 13
关键的iOS 编程技术 14
消息传递 14
剖析Objective-C 程序 15
声明一个接口 15
具体实现 16
使用block 指定回调 18
Objective-C 如何管理内存 19
自动引用计数 19
委托和协议 20
should 消息 20
will 消息 21
did 消息 21
声明并遵守协议 21
category 的潜在问题 23
方法swizzling 24
小结 26
第3 章 iOS 应用剖析 27
对plist 文件进行处理 29
设备目录 32
Bundle 目录 34
Data 目录 35
Documents 和Inbox 目录 35
Library 目录 36
tmp 目录 38
Shared 目录 38
小结 39
第二部分 安全性测试
第4 章 构建测试平台 42
拆掉辅助轮 42
推荐几个测试设备 43
使用设备测试与使用模拟器测试 44
网络和代理设置 45
绕过TLS 验证 45
用stunnel 绕过SSL 47
设备上的证书管理 49
在设备上设置代理 50
Xcode 和构建设置 53
为生活增加点挑战 53
启用完整的ASLR 55
Clang 和静态分析 56
Address Sanitizer 和动态分析 57
使用Instruments 监控程序 58
激活工具 59
用Watchdog 监视系统活动 61
小结 62
第5 章 使用lldb 和其他工具进行调试 63
lldb 中有用的特性 64
操作断点 64
查看帧和变量 66
可视化查看对象 70
操作变量和属性 71
断点行为 73
使用lldb 进行安全分析 75
错误注入 75
追踪数据 77
查看核心框架 77
小结 78
第6 章 黑盒测试 79
安装第三方应用程序 80
使用.app 目录安装 80
使用.ipa 程序包安装 82
解密二进制文件 82
启动设备上的debugserver 83
定位加密字段 86
转储应用程序内存 90
逆向解密后的二进制文件 93
使用otool 检查二进制文件 93
使用class-dump 获得类信息 95
使用Cycript 从运行程序中提取数据 96
使用Hopper 反汇编 97
绕过证书锁定 99
使用Cydia Substrate 工具 100
使用Introspy 自动拦截 104
小结 107
第三部分 Cocoa API 的安全怪癖
第7 章 iOS 网络通信 110
使用iOS 自带的URL 加载系统 110
正确使用传输层安全协议 111
NSURLConnection 的基本身份验证策略 113
在NSURLConnection 中实现TLS 认证 115
修改重定向行为 117
TLS 证书锁定 117
使用NSURLSession 120
NSURLSession 配置 120
执行NSURLSession 任务 121
如何绕过NSURLSession 的TLS 验证 122
NSURLSession 中的基本身份验证 123
管理已存储的URL 凭证 125
使用第三方网络API 的风险 126
如何正确使用AFNetworking 126
ASIHTTPRequest 的错误使用方式 128
多点连接 129
使用NSStream 操作底层网络 131
使用CFStream 操作更加底层的网络 133
小结 134
第8 章 进程间通信 135
URL scheme 和openURL 方法 135
定义URL scheme 136
发送和接收URL/IPC 请求 137
验证URL 和发送者 138
劫持URL scheme 140
通用链接 141
使用UIActivity 共享数据 143
应用程序扩展 145
检查应用程序是否实现了扩展 146
限制和验证可共享的数据 147
禁止应用和扩展交互 148
失败的IPC 技巧：剪贴板 149
小结 150
第9 章 适用于iOS 的Web 应用 151
使用（并滥用）UIWebView 151
UIWebView 的使用方式 152
在UIWebView 中执行JavaScript 代码 153
桥接JavaScript-Cocoa 的收益和风险 154
应用与JavaScriptCore 交互 155
使用Cordova 执行JavaScript 代码 159
使用WKWebView 163
WKWebView 的使用方式 163
WKWebViews 的安全性优势 164
小结 166
第10 章 数据泄漏 167
揭秘NSLog 和苹果系统日志 167
在发布版本中禁用NSLog 169
使用断点行为来记录日志 170
敏感数据如何通过剪贴板泄漏 171
不受限制的系统剪贴板 171
命名剪贴板的风险 172
剪贴板数据保护策略 174
查找并修复HTTP 缓存泄漏 176
缓存管理 177
如何删除缓存数据 179
HTTP 本地存储和数据库中的数据泄漏 182
按键记录及自动纠错数据库 183
用户偏好设置的错误用法 185
处理截屏中的敏感数据 186
屏幕遮挡策略 187
遮挡原理解析 190
隐藏视图的常见问题 191
阻止应用挂起，从而避免截屏 191
状态保存导致的泄漏 192
安全的状态保存 194
远离iCloud 196
小结 197
第11 章 C 语言的遗留问题 198
格式化字符串 199
预防传统的C 格式化字符串攻击 200
预防Objective-C 格式化字符串攻击 201
缓冲区溢出及栈空间 202
strcpy 缓冲区溢出 203
预防缓冲区溢出 204
整数溢出和堆 206
malloc 引发的整数溢出 206
预防整数溢出 208
小结 208
第12 章 注入攻击 209
客户端的跨站脚本攻击 209
输入审查 210
输出编码 212
SQL 注入攻击 213
断言注入攻击 214
XML 注入攻击 216
通过XML 外部实体实现注入攻击 216
第三方XML 库的问题 217
小结 218
第四部分 保证数据安全
第13 章 加密与认证 220
使用钥匙串 220
用户备份中的钥匙串 221
钥匙串保护属性 221
钥匙串基础用法 223
封装钥匙串 226
共享钥匙串 227
iCloud 同步 228
数据保护API 228
保护等级 229
DataProtectionClass 权限 232
检查保护数据是否可用 233
使用CommonCrypto 加密 235
避免弱算法 236
正确使用初始化向量 236
破碎的熵 237
弱密钥 237
执行散列操作 238
使用HMAC 确保消息的可靠性 239
使用RNCryptor 封装CommonCrypto 240
使用TouchID 进行本地验证 241
指纹是否足够安全 242
小结 242
第14 章 移动端隐私问题 243
唯一设备标识符隐患 243
官方解决方案 244
使用唯一标识符的规则 246
移动端Safari 及请勿追踪header 标签 246
Cookie 接受策略 247
位置和行动监控 249
地理位置定位的工作原理 249
存储位置数据的风险 250
限制定位精度 250
请求位置数据 251
健康与运动信息管理 252
通过HealthKit 读写数据 252
M7 协处理器 254
申请收集数据 254
使用iBeacon 追踪距离 255
iBeacon 监测功能 256
将iOS 设备变为iBeacon 258
iBeacon 注意事项 259
建立隐私策略 259
小结 260
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS 应用安全权威指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS 7
前言
第一部分　准备篇
第1章　初识iOS、Objective-C和Xcode
1.1　认识iOS
1.1.1　iOS的发展历程
1.1.2　iOS的设计和功能特性
1.1.3　iOS 7的新特性
1.1.4　iOS架构
1.1.5　iOS框架
1.1.6　iOS系统框架的变迁
1.1.7　Mac OS X和iOS平台不同框架的差异性
1.1.8　初步了解iOS开发者工具
1.2　认识Objective-C
1.2.1　发展历程及版本变化
1.2.2　语言性能与分析
1.2.3　框架和代码的关系
1.3　基于非苹果机平台搭建开发环境
1.3.1　前期准备
1.3.2　创建用于安装Mac OS X的VMWare虚拟机
1.3.3　安装Mac OS X
1.3.4　安装Xcode SDK
1.4　小结
第2章　创建你的
第一个iOS应用程序
2.1　应用程序的实现目标
2.2　入门的开始
2.2.1　新建一个Xcode项目
2.2.2　在模拟器中查看应用程序的效果
2.3　启动一个应用程序
2.3.1　探究main.m源文件
2.3.2　分析属性列表文件
2.3.3　查看串联图
2.4　检查视图控制器及其视图
2.4.1　如何使用检查器
2.4.2　更改视图的背景颜色
2.5　对视图进行配置和管理
2.5.1　新增用户界面元素
2.5.2　为按钮增添一个动作
2.5.3　为文本框和标签创建插座
2.5.4　打开Connections检查器验证连接
2.5.5　对文本框进行委托处理
2.5.6　让应用程序具有辅助功能
2.6　使用视图控制器完成应用程序
2.6.1　给用户的名称添加属性
2.6.2　实现changeGreeting： 方法
2.6.3　把视图控制器作为输入文本框的委托
2.7　测试应用程序
2.7.1　排查和检测代码
2.7.2　程序代码清单
2.8　小结
第二部分　语法篇
第3章　Objective-C--构建iOS应用程序的基石
3.1　探窥Objective-C语言
3.1.1　面向对象语言Objective-C是C语言的超集
3.1.2　类和对象
3.1.3　方法和发消息
3.1.4　属性和存取方法
3.1.5　块
3.1.6　协议和类别
3.1.7　类型和编码策略
3.1.8　import语句
3.2　Objective-C 2.0新增特性
3.2.1　关联引用
3.2.2　快速枚举
3.2.3　选择器
3.2.4　静态类型的使用
3.3　进一步认识块
3.3.1　块可以带参数和返回值
3.3.2　块可以捕获封闭范围内的值
3.3.3　在块内捕获变量值的变化
3.3.4　块可以作为函数或者方法的参数
3.3.5　用类型定义可以简化块语法
3.3.6　使用属性可跟踪块
3.4　小结
第4章　类--构建应用程序的类型对象原型
4.1　认识根类
4.1.1　NSObject简介
4.1.2　根类和协议
4.1.3　根类方法
4.1.4　根类接口规范
4.1.5　根类实例方法和类方法
4.2　如何设计类
4.2.1　设计接口
4.2.2　设计实现
4.2.3　如何使用类名
4.2.4　如何比较类
4.3　类的类型
4.3.1　如何指定静态类型
4.3.2　类型的自查处理机制
4.4　变量
4.4.1　局部变量
4.4.2　全局变量
4.4.3　实例变量
4.4.4　静态变量
4.4.5　变量的存储类别
4.5　属性
4.5.1　属性的声明
4.5.2　属性的实现
4.5.3　属性类型和相关函数
4.5.4　属性的类型编码
4.5.5　属性重声明
4.5.6　修改父类的属性
4.5.7　新旧版本属性运行时的区别
4.6　方法
4.6.1　方法通用格式
4.6.2　方法的调用
4.7　继承
4.7.1　类的继承关系
4.7.2　继承父类的实例变量
4.7.3　继承父类的方法
4.7.4　哪些类需要被继承
4.7.5　对象的合成
4.8　方法重写
4.8.1　方法重写的规则
4.8.2　方法重写的使用
4.9　方法重载
4.9.1　方法重载的规则
4.9.2　方法重载的使用
4.9.3　调用还是重载
4.9.4　重载的类型
4.10　类的扩展
4.10.1　类别的用法
4.10.2　延伸的用法
4.11　异常处理
4.11.1　如何启用异常处理
4.11.2　如何捕捉不同类型的异常
4.11.3　如何抛出异常
4.12　小结
第5章　对象--构建应用程序的重要“活体”
5.1　理解对象
5.1.1　对象和根类的关系
5.1.2　对象如何构建程序
5.1.3　对象动态类型
5.1.4　对象的生命周期
5.2　创建对象
5.2.1　对象分配处理的机制
5.2.2　对象初始化方法的原型init
5.2.3　初始化方法的返回值
5.2.4　init方法的实现
5.2.5　多个初始化方法和指定初始化方法
5.2.6　使用dealloc方法
5.2.7　类工厂方法
5.3　对象的所有权
5.3.1　对象所有权策略有哪些
5.3.2　保留计数的处理机制
5.3.3　自动释放所有权
5.3.4　共享对象的有效性
5.3.5　如何获取所有权
5.4　回收对象
5.4.1　dealloc方法的实现
5.4.2　通过引用返回的对象
5.4.3　保留循环的处理机制
5.4.4　对象的弱引用
5.4.5　资源的有效管理
5.5　应用对象
5.5.1　验证对象的功能
5.5.2　比较对象
5.5.3　复制对象
5.6　小结
第6章　消息和协议--对象之间的通信方式
6.1　认识消息
6.1.1　消息的基本语法
6.1.2　消息处理机制
6.1.3　获得方法地址
6.1.4　使用隐藏的参数
6.2　消息发送
6.2.1　向nil发送消息
6.2.2　向自己发送消息
6.2.3　通过发送消息调用父类方法
6.3　消息转发
6.3.1　消息转发处理机制
6.3.2　与多重继承关系
6.3.3　与类继承关系
6.3.4　与消息代理对象关系
6.4　认识协议
6.4.1　协议的分类
6.4.2　协议对象
6.4.3　预定义接口
6.4.4　如何使用预定义方法
6.4.5　为匿名对象声明方法
6.5　应用协议
6.5.1　如何采用一个协议
6.5.2　如何服从一个协议
6.5.3　协议类型校验处理机制
6.5.4　如何实现协议嵌套协议
6.5.5　如何引用其他协议
6.6　小结
第7章　Foundation框架--提供基本的系统服务
7.1　认识Foundation框架
7.1.1　Foundation类层次结构
7.1.2　与Core Foundation框架的区别
7.1.3　如何引用及查询Foundation框架信息
7.1.4　对象的可变性和不变性
7.2　创建和使用值对象
7.2.1　创建值对象
7.2.2　字符串和NSString字面常量
7.2.3　NSNumber字面常量
7.2.4　日期和时间
7.3　创建和使用集
7.3.1　将对象按某种顺序储存在数组中
7.3.2　将键值对储存在字典中
7.3.3　将无序对象储存在集合中
7.4　Foundation框架常用类的使用方法详解
7.4.1　数字类型
7.4.2　字符串类型
7.4.3　数组类型
7.4.4　字典类型
7.4.5　日期类型
7.5　小结
第8章　内存管理--应用程序高效运行的基础
8.1　内存管理基础知识
8.1.1　Cocoa的引用计数机制
8.1.2　内存管理规则
8.1.3　内存管理应用实例
8.1.4　内存管理混乱的原因及解决方法
8.2　存取方法
8.2.1　声明存取方法
8.2.2　实现存取方法
8.2.3　存取方法的使用
8.2.4　实现重置方法
8.2.5　应用存取方法常见错误
8.3　自动释放池
8.3.1　自动释放池工作原理
8.3.2　非Application Kit程序中的自动释放池
8.3.3　自动释放池和线程
8.3.4　作用域和嵌套自动释放池的关系
8.3.5　所有权策略
8.3.6　如何实现垃圾回收
8.4　内存中复制的处理机制
8.4.1　深复制和浅复制
8.4.2　独立副本
8.4.3　使用alloc和init方式复制
8.4.4　使用NSCopyObject函数复制
8.4.5　可变对象和不可变对象的复制
8.4.6　值对象和复制
8.5　Nib对象的内存管理
8.5.1　插座对象实现的内存管理机制
8.5.2　Nib文件实现的内存管理机制
8.6　小结
第三部分　基础篇
第9章　探究iOS应用程序的核心
9.1　iOS应用程序核心架构
9.1.1　iOS应用程序的生命周期
9.1.2　iOS应用程序的主函数
9.1.3　应用程序的委托
9.1.4　主Nib文件
9.1.5　事件处理周期
9.1.6　应用程序的基本设置模式
9.2　iOS应用程序的核心对象
9.2.1　iOS应用程序的常见对象
9.2.2　数据模型的定义
9.2.3　构建用户界面
9.3　iOS应用程序包
9.3.1　典型的iOS应用程序捆绑包
9.3.2　信息属性列表
9.3.3　程序图标和启动图像
9.3.4　Nib文件
9.4　iOS应用程序关键任务的处理机制
9.4.1　初始化和终止
9.4.2　响应中断
9.4.3　低内存警告
9.5　iOS应用程序的行为定制
9.5.1　以景观模式启动
9.5.2　和其他应用程序的通信
9.5.3　定制的URL模式
9.5.4　应用程序的偏好设置
9.5.5　关闭屏幕锁定
9.6　小结
第10章　多状态和多任务--iOS功能日趋增强的表现
10.1　应用程序的状态
10.1.1　状态切换遵循的原则
10.1.2　应用程序的状态及切换路径
10.2　应用程序启动周期
10.2.1　加载进入前台
10.2.2　加载进入后台
10.2.3　主函数
10.2.4　启动处理的机制
10.3　响应中断
10.3.1　基于警告的中断处理机制
10.3.2　中断应激处理
10.3.3　通话时用户界面的调整处理
10.4　前台与后台之间的切换机制
10.4.1　从前台切换到后台的流程
10.4.2　转换后台时应激处理
10.4.3　后台运行时的内存情况
10.4.4　从后台回转到前台的流程
10.4.5　在唤醒时处理排队的通知
10.4.6　应用程序的终止条件
10.5　主运行循环
10.5.1　主运行循环的运行机制
10.5.2　iOS应用程序中的事件
10.6　后台执行和多任务处理
10.6.1　判断设备系统多任务是否可用
10.6.2　在后台执行有限长度的任务
10.6.3　调度本地通知的递送
10.6.4　允许在后台运行的任务
10.6.5　选择退出后台的执行
10.7　小结
第11章　视图--iOS应用程序交互的基础
11.1　窗口、视图、视图控制器
11.1.1　三者之间的关系
11.1.2　窗口
11.1.3　视图
11.1.4　视图控制器
11.2　视图的几何属性特征
11.2.1　视图坐标系统
11.2.2　边框、边界和中心的关系
11.2.3　坐标系统变换
11.3　视图架构处理
11.3.1　视图交互模型
11.3.2　视图渲染架构
11.3.3　改变视图的层
11.3.4　内容模式与比例缩放
11.3.5　自动尺寸调整行为
11.4　视图的创建和管理
11.4.1　创建视图对象
11.4.2　视图的标识和命名
11.4.3　子视图的添加和移除
11.4.4　视图层次中的坐标转换
11.4.5　视图的查询
11.5　在运行时修改视图
11.5.1　实现视图动画
11.5.2　配置动画的参数
11.5.3　配置动画的委托
11.5.4　响应布局的变化
11.5.5　重画视图的内容
11.5.6　隐藏视图
11.6　定制视图对象
11.6.1　初始化定制视图
11.6.2　绘制视图内容
11.6.3　响应事件
11.6.4　视图对象的清理
11.7　小结
第12章　UIKit框架--创建基于触摸的用户界面
12.1　UIKit标准视图的分类
12.2　显示视图
12.2.1　标签
12.2.2　图片视图
12.2.3　进度条视图
12.2.4　等待视图
12.3　控件
12.3.1　按钮
12.3.2　文本框
12.3.3　滑块
12.3.4　切换开关
12.4　导航视图
12.4.1　导航栏
12.4.2　标签栏
12.5　警告视图和动作表单
12.5.1　警告视图
12.5.2　动作表单
12.6　文本和Web视图
12.6.1　文本视图
12.6.2　Web视图
12.7　容器视图
12.7.1　表视图
12.7.2　滚动视图
12.7.3　工具栏
12.8　其他常用类型
12.8.1　分页控件
12.8.2　搜索栏
12.9　小结
第13章　视图控制器--视图的幕后操纵者
13.1　视图控制器基础知识
13.1.1　视图控制器的功能
13.1.2　视图控制器的管理机制
13.1.3　视图控制器的分类
13.1.4　视图控制器的内容多种展示方式
13.1.5　多种视图控制器混合应用
13.2　视图控制器的生命周期
13.2.1　视图控制器的初始化
13.2.2　视图的加载和卸载
13.3　标准视图控制器
13.3.1　标准视图控制器的功能及使用方法
13.3.2　标准视图控制器的应用
13.4　分割视图控制器
13.4.1　分割视图控制器构建原理及功能
13.4.2　分割视图控制器的应用
13.5　导航视图控制器
13.5.1　导航视图控制器构建原理及功能
13.5.2　导航视图控制器的应用
13.6　选项卡视图控制器
13.6.1　选项卡视图控制器构建原理及功能
13.6.2　选项卡视图控制器的应用
13.7　翻页视图控制器
13.7.1　翻页视图控制器构建原理及功能
13.7.2　翻页视图控制器的应用
13.8　小结
第14章　事件--应用程序的驱动动力
14.1　iOS系统中的事件
14.1.1　事件是如何驱动应用程序的
14.1.2　什么是触摸事件
14.1.3　什么是运动事件
14.1.4　事件和触摸
14.1.5　事件的传递
14.1.6　响应者对象和响应者链
14.1.7　调整事件的传递
14.2　常见手势的处理实例
14.2.1　触摸事件处理方法
14.2.2　单个和多个触碰手势处理方法
14.2.3　检测碰擦手势
14.2.4　处理复杂的多点触摸序列
14.2.5　触摸事件处理技巧
14.3　键盘管理
14.3.1　接收键盘通告
14.3.2　显示键盘
14.3.3　取消键盘
14.3.4　移动键盘下面的内容
14.4　小结
第15章　通知--消息的多样化展示
15.1　通知的实现原理
15.1.1　本地通知
15.1.2　推送通知
15.1.3　通知的应用场景
15.2　通知的相关事务
15.2.1　自定义警告声音
15.2.2　创建和调度本地通知
15.2.3　接收远程通知
15.2.4　如何处理通知
15.3　推送通知服务
15.3.1　推送通知和路径
15.3.2　服务的反馈和质量
15.3.3　推送通知的安全处理机制
15.3.4　通知的负载处理
15.4　推送通知的配置和开发
15.4.1　沙箱环境和产品环境
15.4.2　配置处理流程
15.5　实现推送通知服务的通信功能
15.5.1　普通提供的通信功能
15.5.2　二进制接口和通知的格式
15.5.3　服务的反馈
15.6　小结
第16章　Core Data框架--管理应用程序的数据模型
16.1　认识Core Data
16.1.1　初窥Core Data特性
16.1.2　Core Data数据管理机制
16.1.3　探究Core Data的本质
16.2　Core Data堆栈配置
16.2.1　托管对象和上下文
16.2.2　读取请求
16.2.3　持久化存储协调者
16.2.4　持久化存储
16.2.5　持久化文档
16.2.6　托管对象模型
16.3　Core Data模块的运作机制及基础类
16.3.1　NSManagedObject-Context类
16.3.2　NSManaged-Object类
16.3.3　NSManagedObject-Context类
16.3.4　NSPersistentStore-Coordinator类
16.3.5　NSPersistent-Document类
16.3.6　NSFetch-Request类
16.4　Core Data堆栈访问技术
16.4.1　创建一个新的托管对象上下文
16.4.2　读取托管对象模型和实体
16.4.3　添加持久化存储
16.5　托管对象的管理
16.5.1　读取托管对象
16.5.2　读取特定的属性值
16.5.3　创建托管对象
16.5.4　保存托管对象
16.5.5　删除托管对象
16.6　小结
第17章　音频和视频--强大的多媒体功能支持
17.1　初识iOS多媒体框架
17.1.1　iOS声音处理工具
17.1.2　Core Audio框架
17.1.3　音频硬件编解码
17.1.4　iOS支持的音频回放和录制格式
17.1.5　Core Audio音频会话接口
17.1.6　iOS系统支持的音频单元
17.2　录制音频
17.2.1　使用AVAudioRecorder类进行录制
17.2.2　用音频队列服务进行录制
17.2.3　音频中断处理
17.3　播放音频
17.3.1　通过iPod媒体库访问接口播放媒体项
17.3.2　使用系统声音服务播放短声音及触发振动
17.3.3　通过AVAudioPlayer类轻松播放声音
17.3.4　用音频队列服务播放和控制声音
17.3.5　使用OpenAL播放和定位声音
17.3.6　解析音频流
17.4　iPhoneiPad音频的最佳实践
17.4.1　操作音频的贴士
17.4.2　iOS中偏好的音频格式
17.5　iOS中的视频
17.5.1　录制视频
17.5.2　播放视频
17.6　小结
第18章　设备特性--支持多种功能的应用
18.1　识别可用的硬件特性
18.2　External Accessory框架的管道机制
18.2.1　声明应用程序支持的协议
18.2.2　在运行时连接配件
18.2.3　处理和流相关的数据
18.2.4　监控与配件有关的事件
18.3　访问加速计事件
18.3.1　配置加速计
18.3.2　选择恰当的更新频率
18.3.3　从加速计数据中分离重力成分
18.3.4　从加速计数据中分离实时运动成分
18.3.5　取得当前设备的方向
18.4　Core Location框架提供定位服务
18.4.1　获取用户的当前位置
18.4.2　获取方向相关的事件
18.5　Map Kit框架提供地图服务
18.5.1　在用户界面中加入地图视图
18.5.2　缩放和移动地图内容
18.5.3　显示用户的当前位置
18.5.4　坐标和像素之间的转换
18.5.5　通过反向地理编码器获取地标信息
18.6　地图上注解的实现
18.6.1　在地图视图上显示注解
18.6.2　添加和移除注解对象
18.6.3　定义注解视图
18.6.4　创建注解视图
18.6.5　处理注解视图中的事件
18.7　UIKit框架的应用
18.7.1　显示照相机界面
18.7.2　关闭照相机界面
18.7.3　显示照片选取器界面
18.8　使用邮件编辑界面
18.9　小结
第四部分　实战篇
第19章　iPad应用开发实战--精灵小书柜
19.1　系统的总体设计方案
19.1.1　系统模块组成
19.1.2　启动项目
19.2　组装书柜
19.2.1　书柜的实现
19.2.2　书柜的框架及组装
19.2.3　设置书柜的显示效果
19.3　在小书柜上展示书的封面
19.3.1　构建书的封面
19.3.2　将书的封面展示在书柜中
19.3.3　构建多面书柜
19.3.4　通过手势展示多面书柜
19.4　阅读书的内容
19.4.1　设计内容显示的模板
19.4.2　书的封面与内容关联
19.4.3　动画效果翻页
19.4.4　返回书柜主界面
19.5　小结
第20章　iPhone应用开发实战--弹球游戏
20.1　认识游戏引擎
20.1.1　Cocos2D游戏引擎
20.1.2　Box2D物理引擎
20.1.3　Chipmunk物理引擎
20.1.4　游戏引擎组成结构
20.1.5　物理引擎中的刚体
20.2　Cocos2D框架中的常用类
20.2.1　节点类CCNode
20.2.2　场景类CCScene
20.2.3　层类CCLayer
20.2.4　标签类CCLabel
20.2.5　动作类CCAction
20.2.6　导演类CCDirector
20.2.7　精灵类CCSprite
20.3　弹球游戏的准备工作
20.3.1　弹球游戏实现目标
20.3.2　安装Cocos2D-iPhone
20.3.3　启动项目的创建
20.3.4　程序控制权的转交
20.4　实现场景及其互动对象
20.4.1　添加自定义的游戏场景
20.4.2　创建场景类GameScene
20.4.3　创建World对象和边界框
20.5　制作弹球
20.5.1　添加弹球精灵
20.5.2　创建弹球body并添加冲力
20.5.3　使用tick方法刷新对象
20.6　设计球拍
20.6.1　增加球拍
20.6.2　移动球拍
20.6.3　限制球拍
20.6.4　球反弹的优化处理
20.7　方块的实现
20.7.1　增加方块
20.7.2　销毁方块
20.8　游戏逻辑处理
20.8.1　碰撞检测机制
20.8.2　球碰到屏幕底部
20.8.3　游戏结束的条件
20.8.4　添加游戏结束场景
20.9　添加游戏音乐
20.10　小结
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS 7
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS 4编程入门经典
目 录
XI
目 录
第Ⅰ部分 入 门
第1章 iOS 4编程快速入门 ························3
1.1 获取iPhone SDK ································ 3
1.2 iPhone SDK的组件 ···························· 5
1.2.1 Xcode ········································· 5
1.2.2 iPhone Simulator ······················· 7
1.2.3 Interface Builder ······················ 10
1.2.4 Instruments ······························ 11
1.3 iPhone OS架构概述 ························· 11
1.4 起步前需要了解的一些信息 ·········· 13
1.4.1 iPhone OS的版本 ···················· 13
1.4.2 在真实设备上进行测试 ········ 14
1.4.3 屏幕分辨率 ····························· 14
1.5 小结 ·················································· 15
第2章 编写第一个“Hello World！”
应用程序 ·········································16
2.1 Xcode快速起步 ······························· 16
2.1.1 使用Interface Builder ·············· 18
2.1.2 编写代码 ································· 22
2.2 定制应用程序图标 ·························· 23
2.3 显示启动画面 ·································· 25
2.4 小结 ·················································· 27
第3章 视图、插座变量与动作 ················28
3.1 插座变量和动作 ······························ 28
3.2 使用视图 ·········································· 34
3.2.1 使用警告视图 ························· 35
3.2.2 使用动作表单 ························· 37
3.2.3 页面控件与图像视图 ············· 39
3.2.4 使用Web视图 ························· 46
3.3 使用代码动态添加视图 ·················· 48
3.4 理解视图层次结构 ·························· 51
3.5 小结 ·················································· 52
第4章 视图控制器 ·····································54
4.1 View-based Application模板 ··········· 54
4.2 Window-based Application模板 ······ 64
4.2.1 以编程的方式添加视图
控制器和视图 ························· 69
4.2.2 创建并连接动作 ····················· 72
4.2.3 切换视图窗口 ························· 75
4.2.4 为视图窗口切换添加动画 ······ 77
4.3 Split View-based Application模板 ······ 79
4.4 Tab Bar Application模板 ················· 96
4.5 小结 ················································ 101
第5章 iPhone和iPad的多平台支持 ······· 103
5.1 方法1：修改设备目标设置··········· 103
5.2 方法2：创建Universal应用程序 ··· 110
5.3 方法3：维护两个代码库 ··············· 116
5.4 选择方法 ········································ 118
5.5 小结 ················································ 119
第6章 键盘输入 ······································ 120
6.1 使用键盘 ········································ 120
6.2 定制输入类型 ································ 121
6.2.1 隐藏键盘 ······························· 122
6.2.2 当视图加载完毕后自动
显示键盘 ······························· 127
6.3 检测键盘是否可见 ························ 127
6.3.1 使用Scroll View ···················· 128
6.3.2 显示键盘时滚动视图 ··········· 131
6.4 小结 ················································ 136
第7章 屏幕旋转 ······································ 138
7.1 响应设备旋转 ································ 138
7.1.1 不同类型的屏幕方向 ··········· 140
7.1.2 处理旋转 ······························· 141
iOS 4编程入门经典
XII
7.2 以编程的方式旋转屏幕 ················ 145
7.2.1 在运行期间旋转屏幕 ··········· 145
7.2.2 当加载时在指定的方向
上显示Vi ew窗口 ··············· 146
7.3 小结 ················································ 146
第Ⅱ部分 显示和持久化数据
第8章 使用表视图 ·································· 151
8.1　简单的表视图 ································ 151
8.1.1　添加Header与Footer ············· 156
8.1.2　添加图像 ······························· 157
8.1.3　显示所选项 ··························· 158
8.1.4　缩进 ······································· 160
8.1.5　修改行高 ······························· 161
8.2　 在Navigation-based Application中
使用表视图 ···································· 162
8.3　分节显示 ········································ 162
8.3.1　添加索引 ······························· 169
8.3.2　添加搜索功能 ······················· 169
8.3.3　详情显示与选取标记 ··········· 180
8.3.4　导航到另外一个View窗口 ······ 181
8.4　小结 ················································ 187
第9章 应用程序首选项 ························· 188
9.1　创建应用程序首选项 ···················· 188
9.2　以编程的方式访问设置值 ············ 194
9.2.1　加载设置值 ··························· 198
9.2.2　重置首选项设置值 ··············· 200
9.2.3　保存设置值 ··························· 201
9.3　小结 ················································ 202
第10章 文件处理 ··································· 204
10.1　理解应用程序文件夹 ················· 204
10.1.1　使用Documents与Library
文件夹 ······························· 205
10.1.2　将文件存储到临时
文件夹中 ··························· 209
10.2　使用属性列表 ····························· 209
10.3　复制打包的资源 ························· 216
10.4　小结 ············································· 217
第11章 使用SQLite3进行数据库
存储 ············································ 219
11.1 使用SQLite3 ································ 219
11.2 创建并打开数据库 ····················· 221
11.2.1 检查创建的数据库 ··········· 223
11.2.2 创建表 ······························· 223
11.2.3 插入记录 ··························· 224
11.2.4 绑定变量 ··························· 226
11.2.5 检索记录 ··························· 228
11.3 在应用程序中打包SQLite
数据库 ········································· 230
11.4 小结 ············································· 232
第Ⅲ部分 iOS 4高级编程技术
第12章 简单动画和视频播放 ·············· 235
12.1　使用NSTimer类 ·························· 235
12.2　变换视图 ····································· 241
12.2.1　平移 ··································· 242
12.2.2　旋转 ··································· 244
12.2.3　缩放 ··································· 246
12.3　为一系列图像增加动画效果 ······ 246
12.4　在iPhone中播放视频 ·················· 248
12.5　小结 ············································· 251
第13章 访问内置应用程序 ··················· 253
13.1　发送e-mail ··································· 253
13.1.1　调用Safari ························· 258
13.1.2　调用拨号程序 ··················· 259
13.1.3　调用SMS ··························· 259
13.2　访问照相机与照片库 ················· 261
13.2.1　访问照片库 ······················· 261
13.2.2　访问照相机 ······················· 270
13.3　小结 ············································· 273
第14章 手势识别 ··································· 275
14.1　识别手势 ····································· 275
14.1.1　轻拍 ··································· 276
14.1.2　捏拉 ··································· 280
14.1.3　旋转 ··································· 282
14.1.4　摇动或拖曳 ······················· 285
目 录
XIII
14.1.5　滑动 ··································· 287
14.1.6　长按 ··································· 292
14.2　检测触摸 ····································· 295
14.2.1　检测单点触摸 ··················· 296
14.2.2　检测多点触摸 ··················· 300
14.2.3　实现捏拉手势 ··················· 302
14.2.4　实现拖曳手势 ··················· 308
14.3　小结 ············································· 310
第15章 访问加速计 ······························· 312
15.1　使用加速计 ································· 312
15.2　可视化加速计数据 ····················· 315
15.3　使用Shake API检测摇动 ············ 318
15.4　小结 ············································· 324
第Ⅳ部分 网络编程技术
第16章 Web 服务 ·································· 327
16.1 使用XML Web服务的基础
知识 ············································· 327
16.1.1 使用SOAP 1.1 ·················· 329
16.1.2 使用SOAP 1.2 ·················· 330
16.2 在iPhone应用程序中使用Web
服务 ············································· 331
16.3 解析XML响应 ···························· 337
16.4 小结 ············································· 341
第17章 蓝牙编程 ··································· 343
17.1 使用Game Kit框架 ······················ 343
17.1.1 搜索对等设备 ··················· 343
17.1.2 发送和接收数据 ··············· 350
17.2 实现语音聊天 ····························· 352
17.3 小结 ············································· 359
第18章 Bonjour编程 ····························· 361
18.1 创建应用程序 ····························· 361
18.2 发布服务 ····································· 362
18.3 搜索服务 ····································· 365
18.4 小结 ············································· 371
第19章 Apple推送通知服务 ················ 373
19.1 生成证书请求 ····························· 374
19.2 生成开发证书 ····························· 375
19.3 创建应用程序ID ························· 378
19.3.1 针对推送通知
配置App ID······················· 380
19.3.2 创建Provisioning Profile ··· 382
19.3.3 在设备上安装
Provisioning Profile ·········· 384
19.4 创建iPhone应用程序 ·················· 384
19.5 创建推送通知提供者 ················· 388
19.6 小结 ············································· 391
第20章 显示地图 ··································· 392
20.1 使用Map Kit框架显示地图和
监视变化 ····································· 392
20.2 获得位置数据 ····························· 397
20.2.1 使用地图显示位置 ··········· 402
20.2.2 获取方向信息 ··················· 405
20.2.3 旋转地图 ··························· 409
20.2.4 显示注记 ··························· 414
20.2.5 逆地理编码 ······················· 418
20.2.6 显示箭头按钮 ··················· 422
20.3 小结 ············································· 424
第21章 后台应用程序 ··························· 426
21.1 理解iPhone中的后台执行 ·········· 426
21.1.1 检查不同的应用程序
状态 ··································· 427
21.1.2 禁用后台模式 ··················· 429
21.1.3 检测多任务支持 ··············· 431
21.1.4 在后台跟踪位置 ··············· 431
21.1.5 使位置应用程序更加
节能 ··································· 435
21.2 本地通知 ····································· 437
21.3 小结 ············································· 443
第Ⅴ部分 附 录
附录A 在实际设备上进行测试 ············ 447
A.1 注册iPhone开发人员计划 ··········· 447
A.2 获得设备的UDID ························ 447
iOS 4编程入门经典
XIV
A.3 登录到iPhone Provisioning
Portal ············································· 448
A.4 生成证书 ······································ 449
A.5 注册设备 ······································ 452
A.6 创建应用程序ID ·························· 454
A.7 创建Provisioning Profile ·············· 455
A.8 理解应用程序ID和通配符 ·········· 458
A.9 准备提交到App Store ·················· 461
A.10 小结 ············································ 466
附录B Xcode快速入门 ························· 467
B.1 启动XCODE ································· 467
B.1.1 Xcode支持的项目类型 ······· 467
B.1.2 定制工具栏 ························ 470
B.1.3 代码感知 ···························· 470
B.1.4 运行应用程序 ···················· 471
B.2 调试应用程序 ······························· 471
B.2.1 错误 ···································· 472
B.2.2 警告 ···································· 472
B.2.3 设置断点 ···························· 473
B.2.4 使用NSLog()方法 ·············· 475
B.2.5 文档 ···································· 475
附录C Interface Builder快速入门 ······ 476
C.1 .XIB窗口 ······································· 476
C.2 设计视图 ······································· 477
C.3 Inspector窗口 ································ 478
C.3.1 Attributes Inspector窗口 ··· 478
C.3.2 Connections Inspector
窗口 ····································· 479
C.3.3 Size Inspector窗口 ············· 479
C.3.4 Identity Inspector窗口 ········ 479
C.4 Library窗口 ··································· 479
C.5 插座变量与动作 ··························· 480
C.5.1 创建插座变量与动作 ········ 480
C.5.2 连接-插座变量与动作 ······ 483
附录D Objective-C快速教程 ··············· 487
D.1 指令 ·············································· 487
D.2 类 ·················································· 488
D.2.1 @interface ·························· 488
D.2.2 @implementation ··············· 488
D.2.3 @class ································ 489
D.2.4 类的实例化 ························ 490
D.2.5 字段 ···································· 491
D.2.6 访问权限 ···························· 491
D.2.7 方法 ···································· 492
D.2.8 消息发送(调用方法) ········· 494
D.2.9 属性 ···································· 495
D.2.10 初始化器 ·························· 498
D.3 内存管理 ······································ 500
D.4 协议 ·············································· 506
D.5 选择器 ·········································· 508
D.6 类别 ·············································· 509
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS 4编程入门经典
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS取证分析
第1章 苹果移动设备的历史	1
1.1 iPod	2
1.2 iPhone的演变	2
1.2.1 ROCKR	2
1.2.2 苹果iPhone 2G简介	3
1.2.3 3G的iPhone	4
1.2.4 iPhone 3G[S]	5
1.2.5 iPhone 4	6
1.3 苹果iPad	6
1.4 内部构造：iPhone和iPad的硬件	7
1.4.1 2G版iPhone的内部构造	7
1.4.2 iPhone 3G的内部构造	9
1.4.3 iPhone 3GS内部构造	11
1.4.4 iPhone 4的内部构造	12
1.4.5 iPad 内部构件	13
1.5 苹果App Store应用程序商店	15
1.6 iPhone黑客的兴起	18
1.7 小结	18
第2章 iOS操作系统和文件系统分析	19
2.1 iOS特性的演变	19
2.1.1 iOS 1	19
2.1.2 iOS 2	21
2.1.3 iOS 3	22
2.1.4 iOS 4	23
2.2 应用软件的发展	25
2.3 iOS文件系统	26
2.3.1 HFS+ 文件系统	26
2.3.2 HFSX	28
2.4 iPhone分区和卷信息	28
2.4.1 OS分区	31
2.4.2 iOS系统分区	32
2.4.3 iOS数据分区	35
2.5 SQLite数据库	37
2.5.1 通讯录数据库	37
2.5.2 短信数据库	37
2.5.3 通话记录数据库	38
2.6 分析数据库	38
2.6.1 提取SQLite 数据库中的数据	39
2.6.2 Plist 属性列表文件	45
2.6.3 查看Plist属性列表文件	45
2.7 小结	48
第3章 搜索、获取和事件响应	49
3.1 美国宪法第四修正案	50
3.2 通过手机追踪	51
3.3 逮捕中的手机搜查	51
3.4 技术进步和苹果iPhone	52
3.5 如何搜查苹果设备	53
3.6 隔离设备	56
3.7 开机口令	57
3.8 识别越狱的iPhone	58
3.9 收集iPhone中的信息	59
3.10 对iPhone连接过的Mac/Windows计算机进行响应	61
3.11 小结	62
3.12 参考文献	62
第4章 iPhone逻辑获取	64
4.1 从iPhone、iPod Touch、iPad中获取数据	64
4.1.1 使用mdhelper软件获取数据	65
4.2 可用的工具和软件	68
4.2.1 Lantern	68
4.2.2 Susteen Secure View 2	82
4.2.3 Paraben Device Seizure	89
4.2.4 Oxygen Forensic Suite 2010	91
4.2.5 Cellebrite	98
4.3 比较工具和结果	101
4.3.1 购买软件需要考虑的因素	102
4.3.2 Paraben Device Seizure软件的结果	102
4.3.3 Oxygen Forensic Suite 2010软件的结果	102
4.3.4 Cellebrite的结果	103
4.3.5 Susteen Secure View 2软件的结果	103
4.3.6 Katana Forensics Lantern软件的结果	103
4.3.7 有关支持的问题	104
4.4 小结	104
第5章 逻辑数据分析	105
5.1 搭建一个取证工作站	105
5.2 资源库（Library）域	110
5.2.1 通讯录	111
5.2.2 缓存（Caches）	114
5.2.3 通话记录	116
5.2.4 配置概要	117
5.2.5 Cookie	117
5.2.6 键盘	118
5.2.7 日志	120
5.2.8 地图	122
5.2.9 地图历史记录	122
5.2.10 备忘录	123
5.2.11 系统偏好设置	123
5.2.12 Safari 浏览器	124
5.2.13 记忆休眠状态	125
5.2.14 短信和彩信	126
5.2.15 语音信箱	128
5.2.16 网络应用程序	129
5.2.17 WebKit	129
5.3 系统配置数据	132
5.4 媒体域（Media Domain）	134
5.4.1 媒体文件目录	134
5.4.2 Photos.sqlite数据库	139
5.4.3 PhotosAux.sqlite 数据库	139
5.4.4 语音备忘	139
5.4.5 iPhoto相片	140
5.4.6 多媒体	141
5.5 第三方软件	142
5.5.1 社交网络分析	142
5.5.2 Skype	143
5.5.3 Facebook	145
5.5.4 AOL AIM	146
5.5.5 LinkedIn	146
5.5.6 Twitter	147
5.5.7 MySpace	147
5.5.8 Google Voice	148
5.5.9 Craigslist	151
5.5.10 具备分析和挖掘功能的软件	152
5.5.11 iDisk	152
5.5.12 Google Mobile	153
5.5.13 Opera	154
5.5.14 Bing	154
5.5.15 文档和文档恢复	155
5.6 反取证软件和过程	157
5.6.1 图片储藏库	159
5.6.2 Picture Safe	159
5.6.3 Picture Vault	160
5.6.4 Incognito Web Browser	161
5.6.5 Invisible Browser	162
5.6.6 tigertext	162
5.7 越狱	166
5.8 小结	166
第6章 Mac和Windows计算机中的证据	167
6.1 Mac计算机中的证据	167
6.1.1 属性列表文件	167
6.1.2 MobileSync数据库	168
6.1.3 苹果备份文件的演变	168
6.1.4 密码锁定证书	170
6.2 Windows计算机中的证据	170
6.2.1 iPodDevices.xml	170
6.2.2 MobileSync备份	171
6.2.3 密码锁定证书	172
6.3 苹果移动设备备份文件分析	172
6.3.1 iPhone Backup Extractor	172
6.3.2 JuicePhone	173
6.3.3 mdhelper	175
6.3.4 Oxygen Forensics Suite 2010手机取证套件	176
6.4 Windows的取证工具和备份文件	177
6.4.1 FTK Imager	178
6.4.2 FTK 1.8	178
6.4.3 技巧和诀窍	180
6.5 小结	181
第7章 地理位置信息分析	182
7.1 地图应用程序	182
7.2 图片和视频的地理标记	189
7.3 基站数据	198
7.3.1 GeoHunter	202
7.4 导航应用程序	205
7.4.1 Navigon	206
7.4.2 Tom Tom	209
7.5 小结	210
第8章 媒体注入	211
8.1 什么是数字版权管理（DRM）	211
8.1.1 数字版权管理的法律要素	212
8.1.2 案例分析：手机越狱	214
8.1.3 案例分析：苹果与Psystar	215
8.1.4 案例分析：在线音乐下载	217
8.1.5 案件分析：索尼BMG案件	217
8.1.6 DRM的未来	218
8.2 媒体注入	219
8.2.1 媒体注入工具	219
8.3 验证镜像	225
8.4 小结	227
8.5 参考文献	229
第9章 媒体注入分析	231
9.1 使用Mac分析注入媒体	231
9.2 邮件	234
9.2.1 IMAP	234
9.2.2 POP邮件	235
9.2.3 Exchange	236
9.3 数据恢复（碎片重组）	238
9.3.1 MacForensicsLab	238
9.3.2 Access Data取证分析套件	241
9.3.3 FTK和图片	244
9.3.4 EnCase	249
9.4 间谍软件	252
9.4.1 Mobile Spy	252
9.4.2 FlexiSpy	255
9.5 小结	256
第10章 网络分析	257
10.1 关于证据链的考虑	257
10.2 网络101：基础知识	258
10.3 网络201：高级部分	264
10.3.1 DHCP	264
10.3.2 无线加密和身份认证	265
10.3.3 取证分析	266
10.3.4 网络流量分析	268
10.4 小结	272
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS取证分析
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS编程指南
第1章 为何选择本地化应用
1.1 优点和缺点
为何要开发本地化应用？
1.2 发行周期
1.3 做好了用户自然会来
第2章 成为一名开发者
2.1 注册成为iOS开发者
2.2 加入iOS开发者计划
2.3 Mac开发者计划
2.4 安装iOS SDK
关于Beta版本
2.5 准备你的iOS设备
2.5.1 创建开发证书
2.5.2 获取开发设备的UDID
2.5.3 创建App ID
2.5.4 创建移动描述文件
2.5.5 让你的设备支持开发
第3章 你的第一个iOS应用
3.1 Objective—C基础
3.1.1 面向对象编程
3.1.2 Objective—C的对象模型
3.1.3 Objective—C的基本语法
3.2 创建工程
3.2.1 浏览Xcode工程
3.2.2 Interface Builder
3.2.3 设计用户界面
3.2.4 关联UI控件和代码
3.2.5 在模拟器上运行
3.2.6 在iPhone上运行
第4章 Objective—C编程
4.1 声明和定义类
4.1.1 声明类的接口
4.1.2 定义类的实现
4.1.3 强类型与弱类型
4.1.4 属性
4.1.5 合成（Synthesizing）属性
4.1.6 点句式（Dot Syntax）
4.1.7 方法声明
4.1.8 方法调用
4.1.9 调用nil对象的方法
4.2 内存管理
4.2.1 创建对象
4.2.2 自动回收池（Autorelease Pool）
4.2.3 alloc，retain，copy和release周期
4.2.4 自动引用计数
4.2.5 dealloc方法
4.2.6 处理内存警告（Memory Warnings）
4.3 常用iOS设计模式
4.3.1 MVC模式
4.3.2 视图和视图控制器
4.3.3 委托和数据源模式
4.4 总结
第5章 基于表视图应用
5.1 创建工程
5.2 创建表视图
运行代码
5.3 为表视图填充内容
5.4 创建模型
5.4.1 添加城市
5.4.2 添加图片
5.5 关联控制器和模型
用Alert窗口测试功能
5.6 添加导航控制器（Navigation Control）
5.7 添加城市视图
5.8 编辑模式
5.8.1 删除城市
5.8.2 添加城市
5.8.3 添加新城市的界面
5.8.4 保存城市数据
第6章 其他视图控制器
6.1 工具类应用（Utility Application）
电量监控应用
6.2 标签栏应用（Tab Bar Application）
添加标签视图
6.3 联合使用多种视图控制器
6.4 模态视图控制器
修改City Guide应用
6.5 图片选择视图控制器
在City Guide应用中加入图片选择器
6.6 主从视图（Master—Detail）应用
创建一个通用（Universal）应用
6.7 Popover控制器
第7章 访问网络
7.1 监测网络状态
Reachability类
7.2 在应用中嵌入浏览器
7.2.1 网页视图控制器
7.2.2 显示静态HTML文件
7.2.3 从UIWebView中获取数据
7.3 发送邮件
7.4 从互联网获取数据
7.4.1 同步请求
7.4.2 异步请求
7.4.3 使用Web服务
第8章 处理数据
8.1 数据输入
8.1.1 UITextField及其委托
8.1.2 UITextView及其委托
8.2 解析XML
8.2.1 使用libxml2解析XML
8.2.2 使用NSXMLParser解析XML
8.3 解析JSON
8.3.1 NSJSONSerialization
8.3.2 JSON Framework
8.3.3 抓取Twitter热门话题（Trending）
8.3.4 使用Social 框架
8.3.5 Twitter Trends应用
8.4 正则表达式
8.5 存储数据
8.5.1 使用纯文本文件保存数据
8.5.2 使用SQL数据库保存信息
8.5.3 Core Data框架
第9章 使用传感器
9.1 硬件支持
9.1.1 网络可用性
9.1.2 相机可用性
9.1.3 音频输入可用性
9.1.4 GPS可用性
9.1.5 磁力计可用性
9.2 设置应用的硬件需求
9.2.1 WiFi长连接
9.2.2 后台运行模式
9.3 iPhone和iPad的不同
9.4 使用Camera
9.5 Core Motion框架
9.5.1 轮询运动数据
9.5.2 订阅运动数据
9.5.3 加速度计
9.5.4 陀螺仪
9.5.5 磁力计
9.6 使用近距离感应器
9.7 使用震动器
第10章 地图和定位
10.1 Core Location框架
设备的朝向
10.2 基于位置的天气
10.2.1 反向地理编码
10.2.2 正向地理编码
10.2.3 CLPlacemark对象
10.2.4 完善天气应用
10.3 定位与MapKit
10.4 地图标记
第11章 iCloud介绍
11.1 怎样使用iCloud？
11.1.1 iCloud备份
11.1.2 获取授权描述文件
11.2 使用键值对存储
11.3 总结
第12章 与系统应用集成
12.1 应用选项
12.2 Accounts框架
12.3 Social框架
12.3.1 发送Twitter信息
12.3.2 发送Facebook信息
12.4 自定义URL Scheme
12.4.1 使用自定义URL Scheme
12.4.2 注册自定义URL Scheme
12.5 媒体播放
12.6 使用地址簿
12.6.1 使用交互方式选择联系人
12.6.2 使用编程方式选择联系人
12.7 发送短信
第13章 发布你的应用
13.1 添加还缺少的功能
13.1.1 添加图标
13.1.2 添加启动图片
13.1.3 修改显示名称
13.1.4 启用自动旋转
13.2 编译与签名
13.2.1 Ad hoc发布
13.2.2 Developer—to—Developer发布
13.2.3 App Store 发布
13.3 提交到App Store
13.3.1 为App Store发布构建你的应用
13.3.2 App Store资源中心
13.4 审核被拒的原因
第14章 未来之路 367
14.1 Cocoa和Objective—C
14.2 Web应用
14.3 PhoneGap
14.4 Core Data
14.5 应用内购买
14.6 Core Animation
14.7 Game Kit
14.8 编写游戏
14.9 界面和交互
14.10 配件
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS编程指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS应用软件设计之道
目录
译者序
序
前言
第一部分　将灵感转换成软件
第1章　列出提纲 2
1.1　过程：非线性但有序 2
1.2　编写软件说明 3
1.3　厘清头绪 4
1.4　列出提纲时的更多输入 5
1.5　列出需求提纲 6
1.6　需求禁忌 7
1.7　定义纲领 8
1.8　列出分歧 8
1.9　iOS与特色 9
1.10　减少问题 9
1.11　列出架构提纲 10
1.12　提纲即待办事项清单 11
1.13　小结 11
1.14　练习 11
第2章　画草图 12
2.1　边画边思考 12
2.2　谈话中论设计 13
2.3　绘制草图的工具 14
2.4　草图毕竟是草图 15
2.5　何时画草图 16
2.6　利用先例 17
2.7　应对唱反调 17
2.8　绘制界面草图 18
2.9　画交互过程草图 19
2.10　画工作流程草图 20
2.11　小结 22
2.12　练习 23
第3章　熟悉iOS 24
3.1　流向：从一个画面到另一个画面 24
3.2　对标准组件的建议 32
3.3　定制控件 41
3.4　小结 42
3.5　练习 42
第4章　线框图 43
4.1　以画面考虑 44
4.2　以点考虑 45
4.3　视觉度量 46
4.4　画线框图的工具 48
4.5　布局原则 49
4.6　排版 56
4.7　布局图：放置所有东西的地方 57
4.8　小结 62
4.9　练习 62
第5章　实体模型 63
5.1　何时进行实体模型设计 63
5.2　式样：显见的设计规矩 64
5.3　实体模型工具 66
5.4　色彩：用“色调–饱和度–亮度”思考 67
5.5　严格数值 69
5.6　对比度：考虑图片与背景的关系 69
5.7　好的对比度与视觉分量 70
5.8　恰当的背景 71
5.9　透明度 73
5.10　1+1 = 3 73
5.11　呈现图片内容 74
5.12　评估对比度：色调分离 74
5.13　对比度示例 76
5.14　按钮的生成 78
5.15　组装实体模型 83
5.16　尺寸可调的图片 84
5.17　视网膜资源 84
5.18　图层设计 85
5.19　小结 85
5.20　练习 86
第6章　原型软件 87
6.1　在设备上测试 87
6.2　原型的种类 88
6.3　纸质原型 88
6.4　纸上原型指导 90
6.5　动作草图 90
6.6　预制的演示视频 92
6.7　交互式原型 93
6.8　概念证明性软件 95
6.9　为何要做可用性测试 97
6.10　如何进行可用性测试 98
6.11　小结 99
6.12　练习 99
第7章　跨平台行动 100
7.1　平台分类 100
7.2　独立、迷你和伴随性的应用软件 102
7.3　从头开始 102
7.4　回到提纲 103
7.5　案例研究：苹果公司的Mail 103
7.6　小结 112
7.7　练习 112
第二部分　原则
第8章　优雅的界面 114
8.1　暂停怀疑 114
8.2　疑惑时刻 115
8.3　即时反馈 116
8.4　通过布局实现优雅 117
8.5　六种可靠的手势 118
8.6　三明治问题 120
8.7　用奇异的手势作为快捷方式 120
8.8　手势的逼真度 121
8.9　黏滞效应 121
8.10　阈值 123
8.11　宽大的触击 124
8.12　有意味的动画 126
8.13　让SnackLog得体 127
8.14　小结 128
8.15　练习 128
第9章　得体的界面 129
9.1　指示与内涵 129
9.2　暗示 130
9.3　比喻 132
9.4　文字 133
9.5　写作：秘而不宣的设计约束 134
9.6　冗余消息 136
9.7　对码混乱 137
9.8　用户需要的时候给予指导 137
9.9　状态可视 138
9.10　情景状态 139
9.11　看不见的状态 140
9.12　探险的感觉 143
9.13　才能 144
9.14　预防性设计 144
9.15　体谅 145
9.16　让SnackLog彬彬有礼 149
9.17　小结 150
9.18　练习 151
第10章　整体体验 152
10.1　服务于精神 153
10.2　传达才能 154
10.3　文档说明 160
10.4　支持 164
10.5　本地化 165
10.6　可访问性 167
10.7　气质 168
10.8　尊敬 168
10.9　小结 171
10.10　练习 172
第三部分　寻求平衡
第11章　专注与多能 174
11.1　揭示“简单”与“复杂” 174
11.2　专注型设计 175
11.3　专注SnackLog：标记 179
11.4　多能型设计 180
11.5　小结 184
11.6　练习 185
第12章　宁静与张扬 186
12.1　空间上邻近 187
12.2　时间上叠加 188
12.3　渐进式的显露 189
12.4　按含义分类，按重要性排列 190
12.5　升级与降级 191
12.6　划分差异 193
12.7　iOS喜欢情景 193
12.8　隐藏而非禁用 194
12.9　消失 195
12.10　触击不费事 196
12.11　响亮而清晰地说出 197
12.12　让SnackLog宁静 197
12.13　让SnackLog张扬 198
12.14　小结 199
12.15　练习 199
第13章　阻挠与引导 200
13.1　难度曲线 200
13.2　体验分量 201
13.3　为什么要添加阻挠度 202
13.4　怎样增加阻挠度 203
13.5　非本意的阻挠 204
13.6　引导 206
13.7　合理的默认设置 209
13.8　小结 212
13.9　练习 212
第14章　常规与出格 213
14.1　这是如何做到的 213
14.2　掌握《iOS人机界面指导原则》 214
14.3　常规性设计 215
14.4　专注化的设计 219
14.5　小结 223
14.6　练习 224
第15章　奢华与简约 225
15.1　彩色与单色 226
15.2　深度与平整 229
15.3　现实主义与数码形式 233
15.4　小结 238
15.5　练习 238
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS应用软件设计之道
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS 6应用开发入门经典（第4版）
第1章 为开发准备好系统和iOS设备
1.1 欢迎进入iOS平台
1.1.1 iOS设备
1.1.2 显示屏和图形
1.1.3 应用程序资源约束
1.1.4 连接性
1.1.5 输入和反馈
1.2 成为iOS开发人员
1.2.1 加入Apple开发人员计划
1.2.2 安装Xcode
1.2.3 添加设备支持组件
1.3 创建并安装开发供应配置文件
1.3.1 什么是开发供应配置文件
1.3.2 配置用于开发的设备
1.4 运行第一个iOS应用程序
1.5 开发技术概述
1.5.1 Apple开发工具
1.5.2 Objective-C
1.5.3 CoCoa Touch
1.5.4 模型-视图-控制器
1.6 进一步探索
1.7 小结
1.8 问与答
1.9 作业
1.9.1 测验
1.9.2 答案
1.9.3 练习
第2章 Xcode和iOS模拟器简介
2.1 使用Xcode
2.1.1 创建和管理项目
2.1.2 编辑和导航代码
2.1.3 生成应用程序
2.1.4 管理项目属性
2.2 使用iOS模拟器
2.2.1 启动应用程序
2.2.2 模拟多点触摸事件
2.2.3 旋转模拟的设备
2.2.4 模拟其他情况
2.3 进一步探索
2.4 小结
2.5 问与答
2.6 作业
2.6.1 测验
2.6.2 答案
2.6.3 练习
第3章 探索Apple平台语言Objective-C
3.1 面向对象编程和Objective-C
3.1.1 什么是面向对象编程
3.1.2 面向对象编程术语
3.1.3 什么是Objective-C
3.2 探索Objective-C文件结构
3.2.1 头文件/接口文件
3.2.2 实现文件
3.2.3 自动生成的结构
3.2.4 分类和协议
3.3 Objective-C编程基础
3.3.1 声明变量
3.3.2 分配和初始化对象
3.3.3 使用方法及发送消息
3.3.4 表达式和决策
3.4 内存管理和自动引用计数（ARC）
3.4.1 旧方式：保留并释放对象
3.4.2 新方式：自动引用计数
3.5 进一步探索
3.6 小结
3.7 问与答
3.8 作业
3.8.1 测验
3.8.2 答案
3.8.3 练习
第4章 Cocoa Touch内幕
4.1 Cocoa Touch是什么
4.1.1 冷静面对大量的功能
4.1.2 年轻而成熟
4.2 探索iPhone技术层
4.2.1 Cocoa Touch层
4.2.2 多媒体层
4.2.3 核心服务层
4.2.4 核心OS层
4.3 跟踪iOS应用程序的生命周期
4.4 Cocoa基础
4.4.1 核心应用程序类
4.4.2 数据类型类
4.4.3 界面类
4.5 使用Xcode探索iOS框架
4.5.1 Xcode文档
4.5.2 快速帮助
4.6 进一步探索
4.7 小结
4.8 问与答
4.9 作业
4.9.1 测验
4.9.2 答案
4.9.3 练习
第5章 探索Xcode Interface Builder
5.1 了解Interface Builder
5.1.1 IB采用的方法
5.1.2 剖析IB故事板
5.2 创建用户界面
5.2.1 对象库
5.2.2 将对象加入到视图中
5.2.3 使用IB编辑工具
5.2.4 自动布局系统
5.3 定制界面外观
5.3.1 使用属性检查器
5.3.2 设置辅助功能属性
5.3.3 测试界面
5.4 连接到代码
5.4.1 打开项目
5.4.2 实现概述
5.4.3 输出口和操作
5.4.4 对象身份
5.5 进一步探索
5.6 小结
5.7 问与答
5.8 作业
5.8.1 测验
5.8.2 答案
5.8.3 练习
第6章 模型-视图-控制器应用程序设计
6.1 了解设计模式模型-视图-控制器
6.1.1 制作意大利面条
6.1.2 使用MVC将应用程序设计结构化
6.2 Xcode如何实现MVC
6.2.1 视图
6.2.2 视图控制器
6.2.3 数据模型
6.3 使用模板Single View Application
6.3.1 实现概述
6.3.2 创建项目
6.3.3 规划属性和连接
6.3.4 设计界面
6.3.5 创建并连接输出口和操作
6.3.6 实现应用程序逻辑
6.3.6 生成应用程序
6.4 进一步探索
6.5 小结
6.6 问与答
6.7 作业
6.7.1 测验
6.7.2 答案
6.7.3 练习
第7章 使用文本、键盘和按钮
7.1 基本用户输入和输出
7.1.1 按钮
7.1.2 文本框和文本视图
7.1.3 标签
7.2 使用文本框、文本视图和按钮
7.2.1 实现概述
7.2.2 创建项目
7.2.3 设计界面
7.2.4 创建并连接输出口和操作
7.2.5 实现按钮模板
7.2.6 隐藏键盘
7.2.7 实现应用程序逻辑
7.2.8 生成应用程序
7.3 进一步探索
7.4 小结
7.5 问与答
7.6 作业
7.6.1 测验
7.6.2 答案
7.6.3 练习
第8章 处理图像、动画、滑块和步进控件
8.1 用户输入和输出
8.1.1 滑块
8.1.2 步进控件
8.1.3 图像视图
8.2 创建并管理图像动画、滑块和步进控件
8.2.1 实现概述
8.2.2 创建项目
8.2.3 设计界面
8.2.4 创建并连接到输出口和操作
8.2.5 实现应用程序逻辑
8.2.6 生成应用程序
8.3 进一步探索
8.4 小结
8.5 问与答
8.6 作业
8.6.1 测验
8.6.2 答案
8.6.3 练习
第9章 使用高级界面对象和视图
9.1 再谈用户输入和输出
9.1.1 开关
9.1.2 分段控件
9.1.3 Web视图
9.1.4 可滚动的视图
9.2 使用开关、分段控件和Web视图
9.2.1 实现概述
9.2.2 创建项目
9.2.3 设计界面
9.2.4 创建并连接输出口和操作
9.2.5 实现应用程序逻辑
9.2.6 生成应用程序
9.3 使用可滚动视图
9.3.1 实现概述
9.3.2 创建项目
9.3.3 设计界面
9.3.4 创建并连接输出口和操作
9.3.5 实现应用程序逻辑
9.3.6 生成应用程序
9.4 进一步探索
9.5 小结
9.6 问与答
9.7 作业
9.7.1 测验
9.7.2 答案
9.7.3 练习
第10章 引起用户注意
10.1 提醒用户
10.1.1 提醒视图
10.1.2 操作表
10.1.3 系统声音服务
10.2 探索提醒用户的方法
10.2.1 实现概述
10.2.2 创建项目
10.2.3 设计界面
10.2.4 创建并连接输出口和操作
10.2.5 实现提醒视图
10.2.6 实现操作表
10.2.7 实现提醒音和震动
10.3 进一步探索
10.4 小结
10.5 问与答
10.6 作业
10.6.1 测验
10.6.2 答案
10.6.3 练习
第11章 实现多场景和弹出框
11.1 多场景故事板简介
11.1.1 术语
11.1.2 创建多场景项目
11.1.3 创建切换
11.1.4 手工控制模态切换
11.1.5 使用出口和回退切换
11.1.6 以编程方式创建模态场景切换
11.1.7 在场景之间传递数据
11.2 理解iPad弹出框
11.2.1 创建弹出框
11.2.2 创建弹出切换
11.2.3 手工显示弹出框
11.2.4 响应用户关闭弹出框
11.2.5 以编程方式创建并显示弹出框
11.3 使用模态切换
11.3.1 实现概述
11.3.2 创建项目
11.3.4 设计界面
11.3.5 创建模态切换
11.3.6 回退到初始场景
11.3.7 创建并连接输出口和操作
11.3.8 实现应用程序逻辑
11.3.9 生成应用程序
11.4 使用弹出框
11.4.1 创建项目
11.4.2 设计界面
11.4.3 创建弹出切换
11.4.4 创建并连接输出口
11.4.5 实现应用程序逻辑
11.4.6 生成应用程序
11.5 进一步探索
11.6 小结
11.7 问与答
11.8 作业
11.8.1 测验
11.8.2 答案
11.8.3 练习
第12章 使用工具栏和选择器做出选择
12.1 了解工具栏
12.1.1 栏按钮项
12.2 探索选择器
12.2.1 日期选择器
12.2.2 选择器视图
12.3 使用日期选择器
12.3.1 实现概述
12.3.2 创建项目
12.3.3 设计界面
12.3.4 创建切换
12.3.5 创建并连接输出口和操作
12.3.6 实现场景切换逻辑
12.3.7 实现日期计算逻辑
12.3.8 生成应用程序
12.4 实现自定义选择器
12.4.1 实现概述
12.4.2 创建项目
12.4.3 设计界面
12.4.4 创建切换
12.4.5 创建并连接输出口和操作
12.4.6 实现场景切换逻辑
12.4.7 实现自定义选择器视图
12.4.8 生成应用程序
12.5 进一步探索
12.6 小结
12.7 问与答
12.8 作业
12.8.1 测验
12.8.2 答案
12.8.3 练习
第13章 使用导航控制器和选项卡栏控制器
13.1 高级视图控制器
13.1.1 多场景开发
13.2 探索导航控制器
13.2.1 导航栏、导航项和栏按钮项
13.2.2 在故事板中使用导航控制器
13.2.3 在导航场景之间共享数据
13.3 了解选项卡栏控制器
13.3.1 选项卡栏和选项卡栏项
13.3.2 在故事板中使用选项卡栏控制器
13.3.3 在选项卡栏控制器管理的场景之间共享数据
13.4 使用导航控制器
13.4.1 实现概述
13.4.2 创建项目
13.4.3 创建压入切换
13.4.4 设计界面
13.4.5 创建并连接输出口和操作
13.4.6 实现应用程序逻辑
13.4.7 生成应用程序
13.5 使用选项卡栏控制器
13.5.1 实现概述
13.5.2 创建项目
13.5.3 创建选项卡栏关系
13.5.4 设计界面
13.5.5 创建并连接输出口和操作
13.5.6 实现应用程序逻辑
13.5.7 生成应用程序
13.6 进一步探索
13.7 小结
13.8 问与答
13.9 作业
13.9.1 测验
13.9.2 答案
13.9.3 练习
第14章 使用表视图和分割视图控制器导航数据
14.1 了解表视图
14.1.1 表视图的外观
14.1.2 表单元格
14.1.3 添加表视图
14.2 探索分割视图控制器（仅适用于iPad）
14.2.1 实现分割视图控制器
14.2.2 模板Master-Detail Application
14.3 一个简单的表视图应用程序
14.3.1 实现概述
14.3.2 创建项目
14.3.3 设计界面
14.3.4 连接输出口delegate和dataSource
14.3.5 实现应用程序逻辑
14.3.6 生成应用程序
14.4 创建基于主-从视图的应用程序
14.4.1 实现概述
14.4.2 创建项目
14.4.3 调整iPad界面
14.4.4 调整iPhone界面
14.4.5 实现应用程序数据源
14.4.6 实现主视图控制器
14.4.7 实现细节视图控制器
14.4.8 修复细节视图控制器引用问题
14.4.9 生成应用程序
14.5 进一步探索
14.6 小结
14.7 问与答
14.8 作业
14.8.1 测验
14.8.2 答案
14.8.3 练习
第15章 读写应用程序数据
15.1 iOS应用程序和数据存储
15.2 数据存储方式
15.2.1 用户默认设置
15.2.2 设置束
15.2.3 直接访问文件系统
15.3 创建隐式首选项
15.3.1 实现概述
15.3.2 创建项目
15.3.3 创建界面
15.3.4 创建并连接输出口和操作
15.3.5 实现应用程序逻辑
15.3.6 生成应用程序
15.4 实现系统设置
15.4.1 实现概述
15.4.2 创建项目
15.4.3 设计界面
15.4.4 创建并连接输出口
15.4.5 创建设置束
15.4.6 实现应用程序逻辑
15.4.7 生成应用程序
15.5 实现文件系统存储
15.5.1 实现概述
15.5.2 创建项目
15.5.3 设计界面
15.5.4 创建并连接输出口和操作
15.5.5 实现应用程序逻辑
15.6 进一步探索
15.7 小结
15.8 问与答
15.9 作业
15.9.1 测验
15.9.2 答案
15.9.3 练习
第16章 创建自适应的用户界面
16.1 自适应界面
16.1.1 启用界面旋转
16.1.2 设计可旋转和调整大小的界面
16.2 使用自动布局
16.2.1 自动布局的语言和工具
16.2.2 示例1：居中约束
16.2.3 示例2：增大控件
16.2.4 示例3：统一调整大小及自动布局的怪异行为
16.3 以编程方式定义界面
16.3.1 实现概述
16.3.2 创建项目
16.3.3 界面编程
16.3.4 生成应用程序
16.4 旋转时切换视图
16.4.1 实现概述
16.4.2 创建项目
16.4.3 设计界面
16.4.4 创建并连接输出口
16.4.5 实现应用程序逻辑
16.4.6 生成应用程序
16.5 进一步探索
16.6 小结
16.7 问与答
16.8 作业
16.8.1 测验
16.8.2 答案
16.8.3 练习
第17章 使用复杂的触摸和手势
17.1 多点触摸手势识别
17.2 添加手势识别器
17.3 使用手势识别器
17.3.1 实现概述
17.3.2 创建项目
17.3.3 设计界面
17.3.4 给视图添加手势识别器
17.3.5 创建并连接输出口和操作
17.3.6 实现应用程序逻辑
17.3.7 生成应用程序
17.4 进一步探索
17.5 小结
17.6 问与答
17.7 作业
17.7.1 测验
17.7.2 答案
17.7.3 练习
第18章 检测朝向和移动
18.1 理解运动硬件
18.1.1 加速计
18.1.2 陀螺仪
18.2 访问朝向和运动数据
18.2.1 通过UIDevice请求朝向通知
18.2.2 使用Core Motion读取加速计和陀螺仪数据
18.3 检测朝向
18.3.1 实现概述
18.3.2 创建项目
18.3.3 设计界面
18.3.4 创建并连接输出口
18.3.5 实现应用程序逻辑
18.3.6 生成应用程序
18.4 检测倾斜和旋转
18.4.1 实现概述
18.4.2 创建项目
18.4.3 设计界面
18.4.4 创建并连接输出口和操作
18.4.5 实现应用程序逻辑
18.4.6 生成应用程序
18.5 进一步探索
18.6 小结
18.7 问与答
18.8 作业
18.8.1 测验
18.8.2 答案
18.8.3 练习
第19章 使用多媒体
19.1 探索多媒体
19.1.1 Media Player框架
19.1.2 AV Foundation框架
19.1.3 图像选择器
19.1.4 Core Image框架
19.2 创建用于练习使用多媒体的应用程序
19.2.1 实现概述
19.2.2 创建项目
19.2.3 设计界面
19.2.4 创建并连接输出口和操作
19.2.5 实现电影播放器
19.2.6 实现音频录制和播放
19.2.7 使用照片库和相机
19.2.8 实现Core Image滤镜
19.2.9 访问并播放音乐库
19.3 进一步探索
19.4 小结
19.5 问与答
19.6 作业
19.6.1 测验
19.6.2 答案
19.6.3 练习
第20章 与其他应用程序交互
20.1 应用程序集成
20.1.1 地址簿
20.1.2 电子邮件
20.1.3 在社交网站上发表信息
20.1.4 地图功能
20.2 使用地址簿、电子邮件、社交网络和地图
20.2.1 实现概述
20.2.2 创建项目
20.2.3 设计界面
20.2.4 创建并连接输出口和操作
20.2.5 实现地址簿逻辑
20.2.6 实现地图逻辑
20.2.7 实现电子邮件逻辑
20.2.8 实现社交网络逻辑
20.2.9 生成应用程序
20.3 进一步探索
20.4 小结
20.5 问与答
20.6 作业
20.6.1 测验
20.6.2 答案
20.6.3 练习
第21章 实现定位服务
21.1 理解Core Location
21.1.1 获取位置
21.1.2 获取航向
21.2 创建支持定位的应用程序
21.2.1 实现概述
21.2.2 创建项目
21.2.3 设计视图
21.2.4 创建并连接输出口
21.2.5 实现应用程序逻辑
21.2.6 生成应用程序
21.3 理解磁性指南针
21.3.1 实现概述
21.3.2 创建项目
21.3.3 修改用户界面
21.3.4 创建并连接输出口
21.3.5 修改应用程序逻辑
21.3.6 生成应用程序
21.4 进一步探索
21.5 小结
21.6 问与答
21.7 作业
21.7.1 测验
21.7.2 答案
21.7.3 练习
第22章 创建支持后台处理的应用程序
22.1 理解iOS后台处理
22.1.1 后台处理类型
22.1.2 支持后台处理的应用程序的生命周期
22.2 禁用后台处理
22.3 处理后台挂起
22.4 实现本地通知
22.4.1 常用的通知属性
22.4.2 创建和调度通知
22.5 使用任务特定的后台处理
22.5.1 修改应用程序Cupertion以支持在后台播放音频
22.5.2 使用声音指示前往库珀蒂诺的方向
22.5.3 添加后台模式键
22.6 完成长时间运行的后台任务
22.6.1 实现概述
22.6.2 创建项目
22.6.3 设计界面
22.6.4 创建并连接输出口
22.6.5 实现应用程序逻辑
22.6.6 启用后台任务处理
22.6.7 生成应用程序
22.7 进一步探索
22.8 小结
22.9 问与答
22.10 作业
22.10.1 测验
22.10.2 答案
22.10.3 练习
第23章 创建通用应用程序
23.1 开发通用应用程序
23.1.1 理解通用模板
23.1.2 通用应用程序设置方面的不同
23.2 创建通用应用程序：方法1
23.2.1 实现概述
23.2.2 创建项目
23.2.3 设计界面
23.2.4 创建并连接输出口
23.2.5 实现应用程序逻辑
23.2.6 生成应用程序
23.3 创建通用应用程序：方法2
23.3.1 创建项目
23.3.2 设计界面
23.3.3 创建并连接输出口
23.3.4 实现应用程序逻辑
23.3.5 生成应用程序
23.4 使用多个目标
23.4.1 将iPhone目标转换为iPad目标
23.4.2 将iPad目标转换为iPhone目标
23.5 进一步探索
23.6 小结
23.7 问与答
23.8 作业
23.8.1 测验
23.8.2 答案
23.8.3 练习
第24章 应用程序跟踪和调试
24.1 使用NSLog提供即时反馈
24.2 使用Xcode调试器
24.2.1 设置断点及单步执行代码
24.2.2 使用调试导航器
24.3 进一步探索
24.4 小结
24.5 问与答
24.6 作业
24.6.1 测验
24.6.2 答案
24.6.3 练习
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS 6应用开发入门经典（第4版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS 8应用开发入门经典（第6版）
第1章 为开发准备好系统和iOS设备	1
1.1 欢迎进入iOS平台	1
1.1.1 iOS设备	1
1.1.2 显示屏和图形	2
1.1.3 应用程序资源约束	4
1.1.4 连接性	4
1.1.5 输入和反馈	4
1.2 成为iOS开发人员	5
1.2.1 加入Apple开发人员计划	5
1.2.2 安装Xcode	8
1.3 运行iOS应用	9
1.3.1 什么是开发供应配置文件	10
1.3.2 配置用于开发的设备	10
1.3.3 启动应用	12
1.4 开发技术概述	15
1.4.1 Apple开发工具	15
1.4.2 Swift	15
1.4.3 CoCoa Touch	15
1.4.4 模型-视图-控制器	16
1.5 进一步探索	16
1.6 小结	16
1.7 问与答	16
1.8 作业	17
第2章 Xcode和iOS模拟器简介	20
2.1 使用Xcode	20
2.1.1 创建和管理项目	21
2.1.2 编辑和导航代码	30
2.1.3 生成应用程序	37
2.1.4 管理项目属性	42
2.1.5 设置支持的设备朝向	43
2.1.6 应用程序图标、启动图像和启动屏幕	43
2.2 使用iOS模拟器	46
2.2.1 启动应用程序	47
2.2.2 模拟多点触摸事件	48
2.2.3 旋转模拟的设备	49
2.2.4 模拟其他情况	50
2.2.5 添加其他要模拟的设备	51
2.3 进一步探索	52
2.4 小结	52
2.5 问与答	52
2.6 作业	53
第3章 探索Swift和iOS试验场	56
3.1 面向对象编程和Swift	56
3.2 面向对象编程术语	58
3.3 探索Swift文件结构	59
3.3.1 类文件	60
3.3.2 自动生成的结构	64
3.4 Swift编程基础	65
3.4.1 声明变量和常量	65
3.4.2 使用方法	73
3.4.3 表达式和决策	76
3.5 内存管理和自动引用计数	80
3.6 iOS试验场简介	80
3.6.1 新建试验场	81
3.6.2 使用试验场	82
3.6.3 生成并查看输出	83
3.7 进一步探索	84
3.8 小结	84
3.9 问与答	84
3.10 作业	85
第4章 Cocoa Touch内幕	88
4.1 Cocoa Touch是什么	88
4.1.1 冷静面对大量的功能	89
4.1.2 少年老成	90
4.2 探索iOS技术层	90
4.2.1 Cocoa Touch层	90
4.2.2 多媒体层	91
4.2.3 核心服务层	93
4.2.4 核心OS层	94
4.3 跟踪iOS应用程序的生命周期	95
4.4 Cocoa基础	96
4.4.1 核心应用程序类	96
4.4.2 数据类型类	98
4.4.3 界面类	100
4.5 使用Xcode探索iOS框架	102
4.5.1 Xcode文档	103
4.5.2 快速帮助	106
4.6 进一步探索	108
4.7 小结	108
4.8 问与答	109
4.9 作业	109
第5章 探索Xcode Interface Builder	112
5.1 了解Interface Builder	112
5.1.1 IB采用的方法	113
5.1.2 剖析IB故事板	113
5.2 创建用户界面	117
5.2.1 对象库	118
5.2.2 将对象加入到视图中	119
5.2.3 使用IB编辑工具	120
5.2.4 自动布局系统	123
5.3 定制界面外观	125
5.3.1 使用属性检查器	125
5.3.2 设置辅助功能属性	126
5.3.3 预览界面	128
5.4 连接到代码	130
5.4.1 打开项目	130
5.4.2 实现概述	131
5.4.3 输出口和操作	132
5.4.4 对象身份	136
5.5 进一步探索	137
5.6 小结	137
5.7 问与答	138
5.8 作业	138
第6章 模型-视图-控制器应用程序设计	141
6.1 了解设计模式MVC	141
6.1.1 制作意大利面条式代码	142
6.1.2 使用MVC将应用程序设计结构化	142
6.2 Xcode如何实现MVC	143
6.2.1 视图	143
6.2.2 视图控制器	143
6.2.3 数据模型	145
6.3 使用模板Single View Application	146
6.3.1 实现概述	146
6.3.2 创建项目	147
6.3.3 规划变量和连接	150
6.3.4 设计界面	152
6.3.5 创建并连接输出口和操作	155
6.3.6 实现应用程序逻辑	159
6.3.7 生成应用程序	159
6.4 进一步探索	160
6.5 小结	160
6.6 问与答	160
6.7 作业	161
第7章 使用文本、键盘和按钮	164
7.1 基本用户输入和输出	164
7.1.1 按钮	164
7.1.2 文本框和文本视图	165
7.1.3 标签	165
7.2 使用文本框、文本视图和按钮	166
7.2.1 实现概述	166
7.2.2 创建项目	167
7.2.3 使用切割技术制作按钮模板	167
7.2.4 设计界面	171
7.2.5 创建并连接输出口和操作	181
7.2.6 隐藏键盘	183
7.2.7 实现应用程序逻辑	186
7.2.8 生成应用程序	187
7.3 进一步探索	188
7.4 小结	188
7.5 问与答	188
7.6 作业	189
第8章 处理图像、动画、滑块和步进控件	192
8.1 用户输入和输出	192
8.1.1 滑块	192
8.1.2 步进控件	193
8.1.3 图像视图	193
8.2 创建并管理图像动画、滑块和步进控件	194
8.2.1 实现概述	194
8.2.2 创建项目	195
8.2.3 设计界面	196
8.2.4 创建并连接到输出口和操作	202
8.2.5 实现应用程序逻辑	205
8.2.6 生成应用程序	211
8.3 进一步探索	211
8.4 小结	212
8.5 问与答	212
8.6 作业	212
第9章 使用高级界面对象和视图	215
9.1 再谈用户输入和输出	215
9.1.1 开关	216
9.1.2 分段控件	216
9.1.3 Web视图	217
9.1.4 可滚动的视图	219
9.2 使用开关、分段控件和Web视图	220
9.2.1 实现概述	220
9.2.2 创建项目	221
9.2.3 设计界面	221
9.2.4 创建并连接输出口和操作	226
9.2.5 实现应用程序逻辑	229
9.2.6 生成应用程序	233
9.3 使用可滚动视图	233
9.3.1 实现概述	233
9.3.2 创建项目	234
9.3.3 设计界面	234
9.3.4 创建并连接输出口和操作	238
9.3.5 实现应用程序逻辑	238
9.3.6 生成应用程序	239
9.4 进一步探索	239
9.5 小结	240
9.6 问与答	240
9.7 作业	241
第10章 引起用户注意	244
10.1 提醒用户	244
10.1.1 提醒控制器	245
10.1.2 系统声音服务	251
10.2 探索提醒用户的方法	253
10.2.1 实现概述	253
10.2.2 创建项目	253
10.2.3 设计界面	254
10.2.4 创建并连接输出口和操作	255
10.2.5 实现提醒	257
10.2.6 实现操作表	262
10.2.7 实现提醒音和震动	264
10.3 进一步探索	265
10.4 小结	266
10.5 问与答	266
10.6 作业	266
第11章 实现多场景和弹出框	269
11.1 多场景故事板简介	269
11.1.1 术语	270
11.1.2 创建多场景项目	271
11.1.3 添加提供支持的视图控制器子类	273
11.1.4 创建切换	275
11.1.5 配置模态切换	277
11.1.6 配置弹出切换	278
11.1.7 手工控制模态切换	281
11.1.8 使用出口和回退切换	282
11.1.9 以编程方式创建切换	284
11.1.10 弹出切换的独特之处	286
11.1.11 在场景之间传递数据	288
11.2 使用切换	290
11.2.1 实现概述	290
11.2.2 创建项目	290
11.2.3 设计界面	293
...
第12章 使用工具栏和选择器做出选择
第13章 使用导航控制器和选项卡栏控制器
第14章 使用表视图和分割视图控制器导航数据
第15章 读写应用程序数据
第16章 创建自适应用户界面
第17章 使用复杂的触摸和手势
第18章 检测朝向和移动
第19章 使用多媒体
第20章 与其他iOS服务交互
第21章 实现定位服务
第22章 创建支持后台处理的应用程序
第23章 创建通用应用程序
第24章 应用程序跟踪、监视和调试
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS 8应用开发入门经典（第6版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS游戏开发
第1章 　Xcode简介　　1
1.1 　开发者注册　　1
1.2 　安装　　1
1.3 　Xcode　　3
1.3.1 　项目类型　　3
1.3.2 　Xcode界面　　5
1.3.3 　构建和运行　　10
1.3.4 　代码结构　　12
1.3.5 　应用程序状态　　13
1.4 　Interface Builder　　16
1.5 　连接　　20
1.6 　游戏逻辑　　22
第2章 　Hello Pong　　26
2.1 　项目创建　　26
2.1.1 　目标设置　　27
2.1.2 　App Info　　28
2.2 　设计游戏组件　　29
2.2.1 　Interface Builder　　29
2.2.2 　连接　　31
2.3 　多点触控　　33
2.3.1 　处理触摸的4个方法　　33
2.3.2 　开启多点触控　　34
2.3.3 　移动球拍　　35
2.3.4 　多点触控的问题：在游戏桌上的第三根手指　　36
2.3.5 　正确的触摸方式　　37
2.4 　动画　　39
2.5 　碰撞　　41
2.6 　计分　　43
2.7 　最后的修饰　　46
2.7.1 　显示消息　　46
2.7.2 　游戏结束　　47
2.7.3 　增加难度　　49
2.7.4 　暂停和恢复　　50
2.7.5 　摇动手势　　51
2.8 　声音　　53
第3章 　图像　　58
3.1 　简介　　59
3.2 　位图和矢量图　　59
3.3 　图像格式　　60
3.4 　Retina显示　　61
3.5 　为Air Hockey游戏创建图像　　62
3.5.1 　制作冰球图像　　63
3.5.2 　制作球拍图像　　66
3.5.3 　制作冰球桌　　69
3.5.4 　按钮　　72
3.5.5 　检查游戏图像　　73
3.5.6 　应用程序图标　　74
3.6 　应用程序整合　　76
3.6.1 　项目创建　　76
3.6.2 　Interface Builder和图像　　77
3.7 　构建和运行　　80
第4章 　物理学　　81
4.1 　球拍物理学　　81
4.2 　冰球物理学　　92
第5章 　声音　　106
5.1 　什么是声音　　106
5.1.1 　数字录音　　106
5.1.2 　文件格式　　108
5.2 　创建声音　　109
5.3 　下载声音　　109
5.4 　录制声音　　109
5.5 　编辑声音　　111
第6章 　电脑AI　　115
6.1 　电脑玩家菜单　　115
6.2 　电脑玩家　　122
6.2.1 　基础　　122
6.2.2 　人类模型　　124
6.2.3 　防守　　126
6.2.4 　进攻　　129
6.3 　电脑难度　　137
第7章 　App Store　　142
7.1 　屏幕截图　　142
7.2 　创建应用程序简介和关键字　　143
7.3 　向iTunes Connect提交元数据　　145
7.4 　归档和提交　　148
7.5 　应用审核　　150
7.6 　应用市场营销　　155
7.6.1 　社交网络　　156
7.6.2 　iTunes推荐　　157
7.6.3 　免费的网络评论　　158
7.6.4 　精简版　　158
7.6.5 　付费广告　　159
7.6.6 　追踪销售和排名　　161
7.7 　总结　　161
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS游戏开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Core Data应用开发实践指南
《Core Data应用开发实践指南》
译者序
前　言
第1章初次尝试Core Data应用程序1
1.1　Core Data是什么1
1.2　Core Data的适用场合4
1.3　创建Grocery Dude项目5
1.4　为现有的应用程序添加Core Data支持6
1.5　小结15
1.6　习题15
第2章托管对象模型的基础知识17
2.1　托管对象模型是什么17
2.2　添加托管对象模型18
2.3　实体18
2.4　属性20
2.5　Integer 16、Integer 32与Integer 6421
2.6　单精度浮点数与双精度浮点数22
2.7　属性的各种设置选项25
2.8　创建NSManagedObject的子类27
2.9　Scalar Properties for Primitive Data Types选项28
2.10　代码片段：demo方法29
2.11　创建托管对象29
2.12　后端SQL的可见性31
2.13　获取托管对象34
2.14　删除托管对象39
2.15　小结40
2.16　习题40
第3章托管对象模型的迁移42
3.1　修改托管对象模型42
3.2　添加模型版本43
3.3　轻量级的迁移方式45
3.4　默认的迁移方式48
3.5　通过迁移管理器来迁移数据52
3.6　小结62
3.7　习题63
第4章托管对象模型的扩展64
4.1　关系64
4.2　Delete规则69
4.3　数据验证错误73
4.4　实体继承77
4.5　小结81
4.6　习题81
第5章表格视图82
5.1　表格视图基础82
5.2　由Core Data所驱动的表格视图83
5.3　创建CoreDataTVC84
5.4　DELEGATE:NSFetchedResultsController88
5.5　AppDelegate的CoreDataHelper实例93
5.6　创建PrepareTVC94
5.7　创建ShopTVC105
5.8　小结110
5.9　习题110
第6章视图111
6.1　概述111
6.2　范例程序所需的视图层级112
6.3　创建ItemVC113
6.4　DELEGATE: UITextField 121
6.5　货品的计量单位、在家中的位置以及在商店中的位置127
6.6　小结141
6.7　习题141
第7章选取器视图143
7.1　概述143
7.2　创建CoreDataPickerTF144
7.3　DELEGATE+DATASOURCE:UIPickerView146
7.4　创建UnitPickerTF151
7.5　创建LocationAtHomePickerTF158
7.6　创建LocationAtShopPickerTF160
7.7　使选取器不遮住文本框167
7.8　小结170
7.9　习题170
第8章预先加载数据171
8.1　默认的数据171
8.2　判断应用程序是否需要导入数据172
8.3　从XML中导入数据174
8.4　创建导入默认数据所需的上下文177
8.5　防止重复导入默认数据178
8.6　触发导入默认数据的操作178
8.7　创建CoreDataImporter180
8.8　选定各实体的Unique 属性185
8.9　把XML中的数据映射到实体的属性186
8.10　从持久化存储区中导入数据189
8.11　小结192
8.12　习题193
第9章深拷贝194
9.1　概述194
9.2　配置拷贝源数据所用的Core Data栈197
9.3　增强CoreDataImporter类200
9.4　触发深拷贝210
9.5　小结214
9.6　习题214
第10章性能216
10.1　发现性能问题216
10.2　实现拍照功能217
10.3　生成测试数据222
10.4　用SQLDebug测量性能225
10.5　用Instruments测量性能227
10.6　改善程序性能229
10.7　清理237
10.8　小结237
10.9　习题237
第11章后台处理239
11.1　后台保存239
11.2　后台处理244
11.3　建立Faulter类245
11.4　建立Thumbnailer类249
11.5　小结254
11.6　习题254
第12章搜索256
12.1　修改CoreDataTVC类257
12.2　修改PrepareTVC类264
12.3　小结268
12.4　习题268
第13章与Dropbox相结合的备份与恢复270
13.1　与Dropbox相集成271
13.2　在CoreDataHelper类中准备相关代码279
13.3　构建DropboxHelper类280
13.4　构建DropboxTVC类287
13.5　小结297
13.6　习题298
第14章 iCloud300
14.1　概述300
14.2　启用iCloud302
14.3　为CoreDataHelper类添加iCloud功能303
14.4　Debug Navigator310
14.5　禁用iCloud310
14.6　小结316
14.7　习题316
第15章 iCloud高级使用技巧318
15.1　去除重复数据318
15.2　散播数据327
15.3　打造干净的开发环境333
15.4　Core Data程序的配置335
15.5　收尾工作336
15.6　小结337
15.7　习题337
第16章与Web服务相集成343
16.1　StackMob简介343
16.2　StackMob SDK345
16.3　创建StackMob应用程序346
16.4　准备托管对象模型347
16.5　配置StackMob客户端349
16.6　SAVING 351
16.7　响应底层数据的变更353
16.8　自动生成Schema354
16.9　Schema的权限356
16.10　认证358
16.11　使程序保持响应369
16.12　小结370
16.13　习题371
附录A 为第1章的Grocery Dude程序所做的准备工作372
附录B 为第16章的Grocery Cloud程序所做的准备工作377
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Core Data应用开发实践指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS 8 Swift编程指南
第一部分　Swift语言编程指南
第1章　Swift初见/2
1.1　什么是Swift/2
1.2  为什么要学习Swift/3
1.3　Objective-C程序员学习Swift需要特别关注的地方/3
1.3.1　类型推断与类型安全/4
1.3.2　泛型/5
1.3.3　数组和字典/6
1.3.4　字符串/7
1.3.5　switch语句/8
1.4  关于Swift初学者的一些问题/9
1.4.1　从哪里获得Swift/9
1.4.2　是否需要先学Objective-C，再学Swift/9
1.4.3　“老鸟”们学习Swift是否会更轻松/10
1.4.4　开发iOS 8和OS X Yosemite程序只能用Swift吗/10
1.4.5　Swift是否能在当前的iOS和OS X版本上工作/10
1.4.6　什么是Playground/11
1.4.7　关于NDA/11
1.4.8　有Swift能做到而Objective-C无法做到的吗？反过来说呢/11
1.4.9　某些API是否无法被Swift调用/11
1.4.10　在Playground中，如何以图表方式查看变量值/12
1.4.11　如何打开REPL/13
1.4.12　Swift如何调用Objective-C代码或第三方库/14
1.4.13　Swift数组只能存储同一种类型的数据吗/15
1.4.14　字典是否也和数组一样是强类型的/15
1.4.15　Swift中有类似于Objective-C中的id吗/15
1.4.16　在 Swift中，如何自省/15
1.4.17　在Swift中如何使用GCD/16
1.4.18　Objective-C中提供的Internationalization宏是否仍然可用/16
1.4.19　仍然需要注意持有循环吗/17
1.4.20　何时使用strong、weak以及unowned/17
第2章　Swift语法基础/18
2.1　Playground/18
2.2　常量、变量、字符串/21
2.2.1　常量/21
2.2.2　变量/21
2.2.3  分号/22
2.2.4　字符串/22
2.2.5　字符串插值和运算/23
2.3　简单类型和类型推断/23
2.3.1　数值类型/23
2.3.2　类型转换/25
2.3.3　布尔类型/26
2.3.4　区间/26
2.3.5　元组/27
2.4　流程控制/28
2.4.1　for循环/28
2.4.2　while语句/31
2.4.3　if语句/31
2.4.4　switch语句/33
第3章　结构和类/38
3.1  可空类型/38
3.1.1  认识可空/38
3.1.2  声明可空/40
3.1.3  可空类型与非可空类型的转换/42
3.2  集合/44
3.2.1  数组/45
3.2.2  字典/47
3.3  枚举/50
3.3.1  定义枚举时填充原始值/50
3.3.2  使用其他类型/51
3.3.3  不填充原始值/52
3.3.4  联合/53
3.4  结构和类综述/54
3.4.1  属性/54
3.4.2  构造器/55
3.4.3  实例方法/56
3.4.4  类方法/56
3.4.5  下标方法/57
3.4.6  继承/59
第4章　Swift函数式编程/61
4.1  函数/61
4.1.1  函数的定义/61
4.1.2  外部参数名/62
4.1.3  简化外部参数名/62
4.1.4  默认值/63
4.1.5  可变参数/64
4.1.6  变量参数和输出参数/64
4.1.7  用函数作为参数/65
4.1.8  函数作为返回值/66
4.1.9  嵌套函数/67
4.2  闭包/68
4.2.1  声明闭包/69
4.2.2  匿名闭包/69
4.2.3  尾末闭包/70
4.2.4  值捕获/70
4.3  协议/71
4.3.1  协议的声明/71
4.3.2  实现协议/72
4.3.3  协议是一种类型/72
4.3.4  组合协议/73
4.4  扩展/74
4.4.1  声明扩展/74
4.4.2  扩展和协议/75
4.5  泛型/75
4.5.1  泛型函数/76
4.5.2  泛型和协议/76
4.5.3  泛型约束/77
4.5.4  泛型类型/78
4.6  可空链/79
4.6.1  ?操作符/79
4.6.2  ??操作符/82
第二部分　iOS 8 SDK
第5章　故事板与自适应布局/86
5.1  自适应布局入门/86
5.1.1  自适应布局的4个概念/87
5.1.2  Universal故事板/87
5.1.3  Size类/96
5.1.4  自适应字体/100
5.1.5  设备相关图片/101
5.2  自适应布局进阶/102
5.2.1  自适应单元格/102
5.2.2  自动安装视图/108
5.2.3  UITraitCollection类/119
5.2.4  覆盖Size类/121
5.2.5  Size相关图片/125
5.2.6  显示/隐藏导航栏/127
5.2.7  UIAppearance和Size类/128
第6章　UISplitViewController及旋屏/130
6.1  创建UISplitViewController应用/131
6.2  在iPhone App中使用UISplitViewController/140
6.2.1  创建Detail默认视图/140
6.2.2  在iPhone中展开UISplitViewController/143
6.2.3  记住用户选择/151
6.2.4  单元格指示器/154
6.2.5  对iPad进行适应/159
6.3  旋屏/162
6.3.1  旧的旋屏方法被废弃/162
6.3.2  自定义旋屏效果/165
6.3.3  单元格自适应大小/167
6.3.4  iPad旋屏/169
6.3.5  自适应的UILabel/176
第7章　视图控制器的呈现/180
7.1  初始项目/181
7.2  内置的Presentation Controller/182
7.2.1  UIAlertController/183
7.2.2  UIPopoverPresentationController/186
7.2.3  UISearchController/191
7.3  自定义UIPresentationController/196
7.3.1  Presented控制器和Presenting控制器/196
7.3.2  创建基本的PresentationController/197
7.3.3  自定义转换动画/200
7.3.4  高级定制/206
第8章　今日扩展/215
8.1  App扩展介绍/215
8.1.1  App扩展的类型/216
8.1.2  理解App扩展/219
8.2  今日扩展综述/223
8.2.1  介绍今日扩展/223
8.2.2  WeatherWidget示例/223
8.2.3  讨论/240
第9章　分享扩展/242
9.1  案例项目：SinaWeiboShare/242
9.1.1  实现容器App/243
9.1.2  创建分享扩展/257
9.2  讨论/267
9.2.1  配置SLComposeSheetConfigurationItem/268
9.2.2  分享其他文件/268
第10章　动作扩展/269
10.1  案例项目：SearchInICIBA/269
10.1.1  实现容器App/270
10.1.2  创建动作扩展/272
10.2  讨论/280
第11章　照片编辑扩展/281
11.1  案例项目：PhotoVintage/281
11.1.1  实现容器App/282
11.1.2  实现照片编辑扩展/282
11.2  讨论/292
第12章　文档提供者扩展/294
12.1   准备/295
12.1.1  工作机制/295
12.1.2  文档提供者扩展支持的4种操作/296
12.2  Bmob云服务/297
12.2.1  注册Bmob/297
12.2.2  创建应用/297
12.2.3  获取App Key/298
12.2.4  Bmob SDK/299
12.3  开始/299
12.3.1  添加扩展App/299
12.3.2  配置Info.plist和entitlements/300
12.4  加入Bmob SDK框架/301
12.4.1  添加CocoaPods框架/301
12.4.2  桥接头文件/304
12.4.3  上传图片到Bmob/305
12.4.4  实现Document Picker/308
12.4.5  实现宿主App/314
12.4.6  实现File Provider/319
12.5  讨论/322
第13章　键盘扩展/323
13.1  准备/323
13.2  键盘扩展的限制/323
13.3  值得信任/324
13.4  网络访问/325
13.5  开始/326
13.5.1  创建键盘扩展/326
13.5.2  显示键盘/327
13.5.3  设计按钮及布局/329
13.6  实现KeyboardViewController/331
13.6.1  创建连接/331
13.6.2  实现按键处理/332
13.6.3  大小写转换/334
13.6.4  切换符号集/335
13.6.5  按键动画/336
13.6.6  键盘最终运行效果/336
13.7  讨论/337
第14章　CloudKit/338
14.1  准备/339
14.1.1  用户授权/339
14.1.2  iCloud容器/340
14.1.3  数据库/340
14.1.4  Zone/340
14.1.5  记录/341
14.1.6  订阅/341
14.2  开始/342
14.2.1  打开iCloud/342
14.2.2  程序主界面/343
14.2.3  全局对象/344
14.2.4  获取用户ID及姓名/345
14.2.5  将数据封装为CKRecord/350
14.2.6  上传照片/353
14.2.7  查看已经上传的图片/359
14.3  高级API/361
14.3.1  不完全抓取/362
14.3.2  分页抓取/363
14.3.3  抓取并缓存图片/367
14.3.4  错误处理及网络重试/371
14.3.5  CloudKit Dashboard/372
14.4  讨论/373
第15章　Photos框架/375
15.1  Photos初步/375
15.1.1  模型对象/376
15.1.2  抓取概述/376
15.1.3  检索内容/377
15.1.4  初始项目/377
15.1.5  获取用户授权/378
15.1.6  抓取/379
15.1.7  显示图片/384
15.1.8  缓存/387
15.1.9  标记用户选择/390
15.2  Photos进阶/392
15.2.1  API介绍/393
15.2.2  初始项目/394
15.2.3  创建新的拼接图/396
15.2.4  显示拼接图/400
15.2.5  收藏和删除/403
15.2.6  增加修订记录/405
15.2.7  读取修订记录/406
15.2.8  注册变更通知/409
15.2.9  监听变更通知/409
15.2.10  让SpliceListVC处理变更通知/411
15.2.11  让PhotoPicker处理变更通知/413
15.3  讨论/414
第16章　Handoff/415
16.1  Handoff基础/416
16.2  开始/416
16.2.1  Handoff兼容性/417
16.2.2  测试Handoff/418
16.2.3  初始项目/419
16.2.4  设置Team ID/420
16.2.5  添加活动类型/421
16.3  view活动/422
16.3.1  创建活动并开始广播/422
16.3.2  更新用户活动/423
16.3.3  停止广播/423
16.4  edit活动/424
16.4.1  创建活动并开始广播/424
16.4.2  更新用户活动/425
16.4.3  停止广播/425
16.5  恢复用户活动/426
16.5.1  在应用程序委托中接收Handoff广播/426
16.5.2  恢复view活动/428
16.5.3  恢复edit活动/429
16.6  讨论/430
第17章　WebKit/432
17.1  开始/433
17.1.1  初始项目/433
17.1.2  创建WKWebView实例/433
17.1.3  加载Web页/434
17.1.4  监视页面加载进度/434
17.1.5  页面导航/436
17.1.6  WKNavigationDelegate协议/436
17.2  WebKit进阶/439
17.2.1  脚本调试工具/439
17.2.2  隐藏网页内容/440
17.2.3  抓取页面内容/444
17.2.4  显示PopoverController/448
17.3  讨论/450
第18章　Living Rendering/452
18.1  Living Rendering初步/453
18.1.1  开启Living Redering特性/453
18.1.2  暴露@IBInspectable属性/454
18.1.3  绘制boxLayer层/456
18.1.4  绘制markLayer层/457
18.1.5  绘制文本图层/459
18.2  Living Rendering进阶/461
18.2.1  使用位图/461
18.2.2  响应事件/462
18.3  讨论/463
第19章　Visual Effects/464
19.1  Visual Effects初步/464
19.1.1  初始项目/465
19.1.2  使用Visual Effect View实现模糊特效/465
19.1.3  使用Visual Effect View实现Vibrancy效果/467
19.2  Visual Effects进阶/469
19.2.1  使用UIBlurEffect实现模糊效果/469
19.2.2  使用UIVibrancyEffect实现Vibrancy效果/471
……
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS 8 Swift编程指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iPad应用开发实践指南
译者序
序
前言
第一部分  入门
第1章  你的第一个应用程序	1
1.1  创建“Hello World”项目	1
1.2  在屏幕上显示文字	5
1.3  说“Hello"	6
1.4  小结	10
第2章  Xcode入门	11
2.1  集成开发环境	11
2.2  工作区窗口	12
2.2.1  工具栏	12
2.2.2  导航区	12
2.2.3  编辑区	13
2.2.4  工具区	14
2.2.5  调试区	15
2.3  首选项	15
2.3.1  字体与颜色	16
2.3.2  文本编辑	16
2.3.3  按键绑定首选项	18
2.3.4  代码补全	19
2.4  开发者文档	20
2.5  编辑器	21
2.6  项目设置	22
2.7  方案	23
2.8  组织者	24
2.9  其他Xcode工具	25
2.10  小结	25
第3章  Interface Builder入门	26
3.1  Interface Builder	26
3.2  IB怎样工作	27
3.3  着手使用IB	27
3.3.1  选取与复制对象	29
3.3.2  对齐对象	29
3.3.3  布局矩形框	31
3.3.4  修改状态	31
3.4  将NIB与代码关联起来	33
3.4.1  在代码中定义插座变量	33
3.4.2  使用辅助编辑器	36
3.5  故事板	37
3.6  小结	37
第4章  Objective-C入门	38
4.1  什么是Objective-C	38
4.2  玩转Objective-C	39
4.2.1  动手写代码	40
4.2.2  对象	41
4.2.3  类	42
4.2.4  NSObject	43
4.2.5  接口	43
4.2.6  实例变量	44
4.2.7  声明属性	45
4.2.8  方法	47
4.2.9  实现	47
4.2.10  合成	48
4.2.11  init	49
4.2.12  super	49
4.2.13  flip	49
4.2.14  选择器	50
4.2.15  点语法	51
4.3  CoinTosser类的用法	51
4.4  内存管理	52
4.5  小结	53
第5章  Cocoa入门	54
5.1  Cocoa栈	54
5.2  Foundation	55
5.2.1  数据类型	56
5.2.2  集合类	60
5.2.3  工具类与函数	61
5.3  UIKit	65
5.3.1  UIApplication	65
5.3.2  UIWindow	65
5.3.3  UIScreen	65
5.3.4  UIView	65
5.3.5  UIViewController	65
5.3.6  UIWebView	65
5.3.7  UILabel	66
5.3.8  UITextField	66
5.3.9  UITextView	66
5.3.10  UIButton	66
5.3.11  UITableView与
UITableViewCell	67
5.3.12  UIScrollView	67
5.3.13  UIPageControl	67
5.3.14  UIPickerView	67
5.3.15  UIDatePicker	67
5.3.16  UISwitch	67
5.3.17  UISlider	68
5.3.18  UIMenuController和
UIMenuItem	68
5.3.19  UIImage	68
5.3.20  UIImageView	68
5.3.21  UINavigationBar	68
5.3.22  UINavigationController	69
5.3.23  UIToolbar	69
5.3.24  UITabBar	69
5.3.25  UIBarButtonItem	69
5.3.26  UISegmentedControl	70
5.4  Cocoa中常见的设计模式	70
5.4.1  模型-视图-控制器模式	70
5.4.2  目标-动作模式	71
5.5  小结	71
第6章  为iPad配置信息	72
6.1  关于iOS配置门户	72
6.2  提供信息的过程：概括说明	73
6.2.1  设备ID是什么	73
6.2.2  什么是应用程序ID	74
6.2.3  什么是开发信息提供概述	75
6.3  设立开发用的机器	76
6.3.1  请求开发许可证	76
6.3.2  提交CSR以求批准	78
6.3.3  下载并安装许可证	79
6.4  配置设备	80
6.5  使用iOS配置门户	81
6.5.1  添加设备ID	82
6.5.2  添加应用程序ID	83
6.5.3  创建开发信息提供概述	84
6.5.4  下载开发信息提供概述	85
6.5.5  安装开发信息提供概述	86
6.6  小结	86
第7章  应用程序设计	87
7.1  定义应用程序	87
7.1.1  应用程序名称	88
7.1.2  应用程序概述	88
7.1.3  功能清单	88
7.1.4  目标用户	89
7.1.5  再度审视功能清单	90
7.1.6  有竞争关系的产品	90
7.1.7  App Charter示例	90
7.2  用户界面构思	92
7.2.1  阅读HIG（iOS人机
界面指南）	92
7.2.2  使你的应用程序
“令人心动”	92
7.2.3  为设备设计	93
7.2.4  人们使用iOS设备与使用
网页或桌面计算机的方式
不一样	93
7.2.5  戴上工业设计师的帽子	94
7.2.6  比喻	94
7.2.7  声音效果	94
7.2.8  定制现有的控件	95
7.2.9  聘请设计师	96
7.3  原型图	96
7.3.1  什么是原型图	96
7.3.2  要对什么设计原型图	97
7.3.3  使用的工具	97
7.4  建立原型	100
7.4.1  什么是原型	100
7.4.2  怎样创建原型应用程序	101
7.5  小结	101
第二部分  构建PhotoWheel
第8章  创建主从复合应用程序	103
8.1  构建原型应用程序	103
8.1.1  什么是分割视图控制器	104
8.1.2  创建新的项目	105
8.1.3  使用模拟器	105
8.2  更进一步的观察	106
8.2.1  项目结构	107
8.2.2  应用程序委派	107
8.2.3  启动选项	111
8.2.4  其他UIApplicationDelegate
方法	112
8.3  UISplitViewController详解	112
8.3.1  指定分割视图控制器的委派	115
8.3.2  细节视图控制器	116
8.3.3  主视图控制器	116
8.4  小结	117
8.5  习题	117
第9章  使用表格视图	118
9.1  首要的事情	118
9.2  深层剖析	120
9.2.1  UITableView	120
9.2.2  UITableViewCell	121
9.2.3  UITableViewDelegate	121
9.2.4  UITableViewDataSource	121
9.2.5  UITableViewController	121
9.3  操作表格视图	121
9.3.1  一个简单的模型	121
9.3.2  显示数据	123
9.3.3  添加数据	127
9.3.4  编辑数据	139
9.3.5  删除数据	143
9.3.6  重排数据	144
9.3.7  选取数据	145
9.4  小结	147
9.5  习题	148
第10章  用视图工作	149
10.1  定制视图	149
10.2  轮状视图	150
10.3  旋转木马视图	156
10.4  Photo Wheel视图单元	161
10.5  小结	164
10.6  习题	164
第11章  使用触屏手势	165
11.1  触摸手势简介	165
11.1.1  预定义的触屏手势	166
11.1.2  手势种类	166
11.1.3  怎样使用手势识别类	166
11.2  定制触屏手势	169
11.2.1  创建拨动手势识别类	170
11.2.2  拨动手势识别类的用法	172
11.3  小结	176
11.4  习题	176
第12章  添加照片	177
12.1  两种途径	177
12.1.1  Assets Library	177
12.1.2  图片捡拾控制器	178
12.2  图片捡拾控制器的用法	179
12.2.1  使用动作单	181
12.2.2  UIImagePickerController的
用法	184
12.2.3  保存至摄像头胶卷	187
12.3  小结	188
12.4  习题	188
第13章  数据持久化	189
13.1  数据模型	189
13.1.1  照片	189
13.1.2  相册	189
13.1.3  前瞻性考虑	189
13.2  使用属性清单来构建模型	190
13.2.1  什么是属性清单	190
13.2.2  建立数据模型	190
13.2.3  读取和保存相册	191
13.2.4  向相册添加新照片	195
13.2.5  显示相册中的照片	198
13.3  使用Core Data构建模型	200
13.3.1  什么是Core Data	200
13.3.2  托管对象和实体描述	200
13.3.3  托管对象语境	201
13.3.4  持久存储和持久存储
协调器	202
13.3.5  向PhotoWheelPrototype
添加Core Data	202
13.3.6  添加Core Data框架	202
13.3.7  建立Core Data栈	203
13.4  在PhotoWheel中
使用Core Data	206
13.4.1  Core Data的模型编辑器	206
13.4.2  添加实体	206
13.4.3  创建NSManagedObject
子类	209
13.5  向模型对象添加定制代码	211
13.5.1  用Core Data读取和保存
相册	215
13.5.2  使用Core Data向相册
添加新照片	218
13.5.3  用Core Data显示相册中
的照片	220
13.6  直接使用SQLite	221
13.7  小结	221
13.8  习题	221
第14章  Xcode中的故事板	222
14.1  什么是故事板	222
14.1.1  故事板的用法	223
14.1.2  场景	224
14.1.3  过渡	224
14.2  对PhotoWheel创作故事板	225
14.2.1  工作区	225
14.2.2  添加主故事板	226
14.2.3  设置UIMainStoryboardFile	227
14.2.4  更新AppDelegate	228
14.2.5  添加图片	228
14.2.6  应用程序图标	229
14.2.7  初始的视图控制器	229
14.2.8  另一个场景	230
14.2.9  创建过渡	232
14.3  小结	233
14.4  习题	233
第15章  视图控制器详解	234
15.1  实现视图控制器	234
15.2  过渡	236
15.2.1  创建定制过渡	237
15.2.2  设置过渡	237
15.2.3  实现定制过渡	239
15.2.4  编译之前的工作	241
15.3  定制弹出转换	243
15.4  容器视图控制器	245
15.4.1  创建容器视图控制器	246
15.4.2  添加子场景	246
15.4.3  添加子视图控制器	248
15.4.4  修正定制的推式过渡	251
15.5  小结	251
15.6  习题	252
第16章  构造主屏幕	253
16.1  重用原型代码	253
16.1.1  复制文件	254
16.1.2  Core Data模型	255
16.1.3  WheelView要做的修改	260
16.2  显示相册	270
16.2.1  实现相册集视图控制器	271
16.2.2  设置托管对象语境	277
16.2.3  添加相册	278
16.3  管理相册	279
16.3.1  选取相册	279
16.3.2  对相册起名	283
16.3.3  修正工具栏的显示	288
16.3.4  删除相册	289
16.4  更美观的相册缩略图	291
16.5  添加照片	294
16.6  显示照片	299
16.6.1  使用GridView类	308
16.6.2  构建图片栅格视图单元	312
16.7  小结	315
16.8  习题	315
第17章  创建照片浏览器	316
17.1  使用滚动视图	316
17.2  启动照片浏览器	324
17.3  添加Chrome效果	332
17.4  放大缩小	336
17.5  删除照片	342
17.6  小结	348
17.7  习题	348
第18章  支持设备旋转	349
18.1  怎样支持旋转功能	349
18.1.1  所支持的设备放置模式	350
18.1.2  使用自动尺寸调整功能	350
18.2  自定义旋转	351
18.2.1  支持旋转相册	355
18.2.2  旋转相册场景	355
18.2.3  调整WheelView类的代码	356
18.2.4  旋转About视图	358
18.2.5  旋转照片浏览器	358
18.3  修正麻烦点	358
18.3.1  修正照片浏览器	358
18.3.2  修正主屏幕	363
18.4  启动画面	365
18.5  小结	367
18.6  习题	367
第19章  用AirPrint打印	368
19.1  打印功能如何工作	368
19.1.1  打印中心Print Center	368
19.1.2  能打印的前提	369
19.1.3  打印API	369
19.2  向PhotoWheel添加打印功能	369
19.3  小结	372
19.4  习题	372
第20章  发送电子邮件	373
20.1  工作原理	373
20.2  SendEmailController类	374
20.2.1  引入SendEmailController类	375
20.2.2  SendEmailController的
用法	378
20.3  小结	383
20.4  习题	383
第21章  Web服务	384
21.1  基础知识	384
21.2  Flickr	385
21.2.1  向PhotoWheel加入Flickr
支持	386
21.2.2  更新Flickr View Controller
Scene	388
21.2.3  显示Flickr场景	389
21.2.4  包装Flickr应用编程接口	391
21.2.5  异步下载照片	397
21.2.6  FlickrViewController的
实现	402
21.3  其他事宜	410
21.4  还缺什么	411
21.5  小结	411
21.6  习题	411
第22章  与iCloud同步	412
22.1  同步使事情变得简单	412
22.2  iCloud的各种概念	412
22.2.1  文件协调器和表现器	413
22.2.2  UIDocument与UIManagedDocument	413
22.2.3  无所不在持久存储	414
22.3  为设备提供信息的回顾	414
22.3.1  配置应用程序ID	414
22.3.2  为iCloud提供信息	415
22.3.3  配置iCloud权利	416
22.4  对PhotoWheel的iCloud考虑	418
22.4.1  同步要做得恰到好处	418
22.4.2  使用瞬态Core Data特性	419
22.5  更新PhotoWheel以支持
iCloud	419
22.6  用iCloud来同步照片	423
22.6.1  使持久存储协调器
无所不在	423
22.6.2  从iCloud接收变更	427
22.7  小结	430
22.8  习题	431
第23章  用AirPlay放映幻灯片	432
23.1  外部显示选项	432
23.2  应用程序对外部显示器的
要求	432
23.3  外部显示器的应用编程接口	433
23.4  向PhotoWheel添加幻灯片
放映	434
23.4.1  更新故事板	434
23.4.2  添加幻灯片放映显示器	435
23.5  管理外部显示器	437
23.6  推进到下一张照片	440
23.7  添加幻灯片放映的用户界面
控件	442
23.8  更新照片浏览器	444
23.9  测试和调试时的注意事项	445
23.10  添加对AirPlay设备的支持	446
23.11  AirPlay的运用	447
23.12  小结	448
23.13  习题	448
第24章  Core Image的视觉特效	449
24.1  Core Image的概念	449
24.2  CIFilter	450
24.2.1  滤镜类型	451
24.2.2  CIFilter的使用	451
24.3  图片分析	452
24.3.1  自动增强	453
24.3.2  脸部识别	454
24.4  为PhotoWheel添加Core Image
特效	454
24.4.1  新建委派方法	455
24.4.2  滤镜管理的实例变量	456
24.4.3  用户界面的添加	456
24.4.4  创建CIFilter特效	461
24.4.5  滤镜的运用	465
24.4.6  图片自动增强功能的实现	466
24.4.7  实现脸部缩放	466
24.4.8  其他必要的方法	468
24.5  小结	469
24.6  习题	469
第三部分  最后的润色
第25章  调试	471
25.1  了解问题所在	471
25.1.1  问题出在哪里	471
25.1.2  重现缺陷	471
25.2  调试的概念	472
25.3  在Xcode中调试	472
25.3.1  设置和管理断点	473
25.3.2  定制断点	473
25.3.3  到达断点	474
25.3.4  检查变量	475
25.4  调试示例：外部显示器代码	477
25.5  什么时候真的需要NSLog	480
25.6  使用Instruments剖析代码	481
25.7  小结	485
第26章  发布应用程序	486
26.1  发布方法	486
26.2  构建非正式的发布	486
26.2.1  设置非正式发布的配置
信息	487
26.2.2  准备构建非正式发布的
版本	487
26.3  构建App Store的发布版本	488
26.3.1  设置App Store条款	489
26.3.2  准备为App Store发布的
版本	489
26.3.3  接下来怎么做	490
26.4  App Store流程	490
26.5  为App Store提供应用程序
信息	491
26.6  App Store媒体材料	493
26.7  iTunes Connect的运用	493
26.7.1  用户角色	493
26.7.2  管理应用程序	494
26.8  发送应用程序	494
26.9  更进一步	495
26.10  小结	495
第27章  结语	496
附录A  安装开发工具	498
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iPad应用开发实践指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS 编程 第三版
前言
第一部分 语言
第1章 C语言的必备知识
编译、语句和注释
选择编译器
变量声明、初始化和数据类型
现代的枚举语法
结构体
指针
数组
运算符
程序流控制和条件语句
函数
指针参数和地址运算符
文件
现代Objective-C语言的函数声明
标准库
更多的预处理指令
数据类型限定符
第2章 面向对象的编程
对象
消息和方法
类和实例
类的方法
实例变量
面向对象的基本原理
第3章 Objective-C语言对象与消息
实例引用即为指针
实例的引用、初始化以及ni1
实例引用和赋值
实例引用和内存管理
消息和方法
发送消息
方法声明
嵌套方法调用
不重载
参数列表
无法识别的选择器
类型转换和id类型
消息的数据类型
C语言函数
CFTypeRefs
块对象
第4章 Objective-C类
类和父类
接口和实现
头文件和实现文件
Cocoa自己的头文件
类方法
悄然产生的类对象
第5章 Objective-C实例
实例的创建
……
第二部分 集成开发环境
第三部分 Cocoa
第四部分 视图
第五部分 界面
第七部分 其他主题
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS 编程 第三版
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>与你们交谈的我
我认识了普里莫·莱维
星期一，1月12日
星期一，1月26日
星期日，2月8日
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>与你们交谈的我
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Xcode实战:Apple平台开发实用技术、技巧及最佳流程
译者序
前 言
第一部分 起步
第1章 获取Xcode 2
1.1 开始之前 2
1.2 安装Xcode 3
1.3 移除Xcode 4
1.4 Apple开发者计划 5
1.5 下载Xcode 6
1.6 额外需要下载的内容 7
1.7 小结 8
第2章 初识Xcode 9
2.1 启动Xcode 9
2.2 Hello World 11
2.2.1 新建项目 11
2.2.2 让Xcode安静下来 13
2.2.3 构建和运行 14
2.2.4 货真价实的程序 15
2.3 删除项目 15
2.4 小结 15
第3章 简单的工作流程和被动调试 16
3.1 创建项目 16
3.2 构建 19
3.3 运行 21
3.4 简单调试 22
3.5 小结 23
第4章 主动调试 24
4.1 一个简单的测试用例 24
4.2 开始主动调试 24
4.2.1 设置断点 25
4.2.2 变量窗格 26
4.2.3?单步调试 27
4.3 解决这个问题 28
4.3.1 行为 28
4.3.2 解决方法 31
4.4 小结 31
第5章 编译 32
5.1 编译 32
5.2 动态载入 38
5.3 Xcode和Clang 38
5.3.1 本地分析 39
5.3.2 跨函数分析 41
5.3.3 索引 42
5.4 Swift 43
5.5 编译产品 47
5.5.1 中间产品 47
5.5.2 预编译 49
5.6 小结 51
第6章 添加库target 52
6.1 添加target 52
6.2 target关系 54
6.2.1 添加文件到target中 54
6.2.2 target中的头文件 56
6.3 从属target 56
6.3.1 添加库 57
6.3.2 调试依赖target 59
6.4 小结 59
第7章 版本控制 60
7.1 采取控制 61
7.2 文件状态 63
7.3 首次提交 65
7.4 使用远程版本库 66
7.4.1 本地建立一个“远程”版本库 68
7.4.2 将文件推送到远程服务器 69
7.5 合并与冲突 70
7.5.1 User A 70
7.5.2 User B 73
7.5.3 返回User A 75
7.6 版本编辑器 78
7.6.1 Comparison 78
7.6.2 Blame 80
7.6.3 Log 81
7.7 分支 81
7.8 小结 83
第二部分 iOS应用程序的生命周期
第8章 开始制作iOS应用程序 86
8.1 规划应用程序 86
8.1.1 模型–视图–控制器 86
8.1.2 模型 87
8.1.3?视图 87
8.1.4 控制器 88
8.2 开始制作一个全新的iOS项目 89
8.3 项目中都包含什么 91
8.4 小结 93
第9章 iOS应用程序：模型 94
9.1 实现模型 94
9.1.1 实体 95
9.1.2 属性 95
9.1.3 关系 97
9.2 托管对象类 100
9.2.1 创建类——错误的方法 100
9.2.2 为什么按照Xcode的方式做是个错误 102
9.2.3 正确的方法——使用mogenerator 102
9.3 准备 105
9.3.1 Utilities 105
9.3.2 扩展类 105
9.3.3 passer_rating 107
9.4 定制Core Data类 108
9.4.1 在项目中添加Game数据 108
9.4.2 在项目中添加Passer数据 109
9.4.3 一些测试数据 110
9.4.4 源代码控制和产品文件 112
9.5 让模型更容易调试 114
9.6 小结 115
第10章 iOS应用程序：控制器 116
10.1 Objective-C中的符号重命名 116
10.1.1 重构Objective-C方法名 117
10.1.2 重构类名 117
10.2 在Swift中重命名类 118
10.3 编辑View Controller 119
10.3.1 表视图 120
10.3.2 构建Passer List 121
10.3.3 新建Passer 121
10.4 生命周期问题及处理方法 122
10.5 真正的Passer Rating 123
10.5.1 另外一个bug 123
10.5.2 运行Passer Rating 127
10.6 小结 128
第11章 构建新视图 129
11.1 下一个视图控制器 129
11.1.1 如果想要添加新视图控制器 129
11.1.2 storyboard、scene和segue 130
11.2 创建视图 133
11.2.1 Passing中的Outlet和Assistant 134
11.2.2 Billboard视图 136
11.2.3 链接视图与视图控制器 137
11.2.4?特定场合下的自动布局 138
11.2.5?各种标签 140
11.2.6 清理 142
11.3 表视图 144
11.4 outlet 145
11.4.1 连接outlet 146
11.4.2 检查连接 147
11.4.3 连接GameListController 148
11.4.4 代码补全和片段 149
11.4.5 代码片段 150
11.5 测试Billboard View 152
11.6 小结 153
第12章 新视图的自动布局 154
12.1 为什么选择自动布局 154
12.1.1 Autoresizing的局限 155
12.1.2 Auto Layout 155
12.1.3 需要牢记的问题 155
12.2 重新制作Player Billboard 156
12.3 重构子视图布局 157
12.3.1 Playground 158
12.3.2 StatView 160
12.3.3 安装StatView 164
12.4 设计约束 165
12.5 两行、两个标签 167
12.6 实际的约束 169
12.6.1 默认（Any/Any） 170
12.6.2 Any Height（非Compact） 170
12.6.3 Landscape（wAny/hCompact） 171
12.6.4 解决问题 171
12.6.5 细节修改 171
12.7 小结 172
第13章 添加表格单元格 173
13.1 Game表 173
13.1.1 Table View中的outlet 173
13.1.2 添加所需的Protocol方法 174
13.1.3 添加Model-to-View的支持 175
13.1.4 原型元素 176
13.2 Game Table：第一次运行 177
13.3 自定义表格单元格 179
13.4 添加一些图形 182
13.4.1 带有图片的单元格 182
13.4.2 将Image视图与图片联系在一起 182
13.4.3?Assets目录 183
13.4.4 向Assets Catalog中添加图片 184
13.4.5 图标和启动图片 186
13.5 小结 188
第14章 添加编辑器 189
14.1 计划 189
14.2 添加模型场景 189
14.2.1 嵌入的View Controller 191
14.2.2 将Passer List与Editor相连 193
14.2.3 Static Table Cells 194
14.3 编辑器视图控制器 195
14.3.1 编辑器表 195
14.3.2 将数据传递给编辑器 197
14.3.3 从编辑器中获得数据 198
14.4 segue 200
14.5 小结 201
第15章 单元测试 202
15.1 Test Navigator 203
15.2 测试CSV Reader 204
15.2.1 CSV 测试代码 205
15.2.2 测试数据 209
15.2.3 运行测试程序 210
15.3 测试和调试器 211
15.4 添加测试类 213
15.5 异步测试 216
15.5.1 测试异步代码 217
15.5.2 文档 217
15.6 XCTest断言 218
15.6.1 简单测试 218
15.6.2 等价 219
15.6.3 异常 219
15.7 小结 220
第16章 度量和分析 221
16.1 速度 221
16.1.1 Debug 调试器 222
16.1.2 Instruments 224
16.2 XCTest和性能 231
16.3 内存 232
16.4 小结 233
第17章 iOS扩展 234
17.1 添加Today Target 235
17.2 设计挂件 235
17.3 框架内的共享库 239
17.4 Today扩展 244
17.5 构建依赖 247
17.6 结果 248
17.7 小结 248
第18章 配置 249
18.1 Apple开发者计划 249
18.1.1 通用（App Store）计划 250
18.1.2 企业计划 250
18.2 iOS的配置 251
18.2.1 你会看到什么 251
18.2.2 注册你的App 253
18.2.3 保护资源 254
18.2.4 提交iOS应用程序 255
18.3?功能编辑器 257
18.3.1 OS X独有的功能 257
18.3.2 iOS和OS X中都有的功能 257
18.3.3 iOS功能 258
18.4 OS X沙箱 259
18.4.1 为什么要选择沙箱 261
18.4.2?沙箱的缺点 261
18.5 Gatekeeper 和Developer ID 262
18.5.1 获取Developer ID 262
18.5.2 使用 Developer ID 263
18.5.3 限制 264
18.6 发布构建 264
18.6.1 基本的构建设置 265
18.6.2 调整构建设置 265
18.6.3 构建 267
18.7 小结 268
第三部分 Mac OSX开发中的Xcode
第19章 开始制作OS X应用程序 270
19.1 目标 270
19.2 开始 271
19.3 模型 274
19.3.1 从iOS移植 274
19.3.2 添加实体 275
19.4 制作菜单 278
19.4.1 Target/Action 279
19.4.2 First Responder 280
19.4.3 将数据载入LeagueDocument 281
19.4.4 适应托管文档 281
19.4.5 测试命令 283
19.4.6 为League 数据确定一个类型 284
19.4.7 确定App如何处理League文件 285
19.4.8 应用程序和文档图标 286
19.5 小结 287
第20章 绑定：连接OS X 应用程序 288
20.1 OS X中的Storyboard Segue 288
20.2 构建文档窗口 290
20.2.1 载入窗口 290
20.2.2 表视图 291
20.3 填充表——绑定 294
20.3.1 对象控制器 294
20.3.2 将表绑定到Team 296
20.3.3 将列绑定到Team属性 297
20.4 League文档数据的结构 299
20.4.1 从League表到Source List 299
20.4.2 捕获Team的选择 301
20.4.3 从Team到表 303
20.4.4 Passer部分 304
20.5 小结 311
第21章 本地化 312
21.1 本地化的工作原理 312
21.2 添加本地化 313
21.2.1 Base Localization 313
21.2.2 为什么需要 Base Localization 314
21.3 哪些需要本地化 315
21.3.1 游戏细节视图：布局 315
21.3.2 游戏细节视图：代码 317
21.3.3 模块和命名空间 319
21.4 法语本地化 320
21.4.1 添加语言环境 320
21.4.2 由简入繁：Credits.rtf 323
21.4.3 本地化Main.storyboard 325
21.4.4 本地化资源 328
21.4.5 本地化程序字符串 329
21.4.6 genstrings 330
21.4.7 xliff文件 331
21.4.8 其他 332
21.5 本地化系统字符串 332
21.6 小结 334
第22章 程序包 335
22.1 简单的包：RTFD 335
22.2 bundle 336
22.3 应用程序的bundle 337
22.4 Info.plist File 338
22.5 Info.plist中用于应用程序的键 340
22.5.1 用于iOS和OS X的键 340
22.5.2 OS X中使用的键 342
22.5.3 iOS中使用的键 345
22.6 小结 347
第23章 属性列表 348
23.1 属性列表数据类型 348
23.2 编辑属性列表 350
23.2.1 属性列表编辑器 352
23.2.2 为什么不使用属性列表编辑器 356
23.3 其他格式 358
23.3.1 文本属性列表 358
23.3.2 二进制属性列表 359
23.3.3 JSON 360
23.4 特殊的属性列表 361
23.5 小结 362
第四部分 Xcode任务集
第24章 Xcode中的文档 364
24.1 Quick Help 364
24.1.1 Inspector 364
24.1.2 弹出窗口 365
24.2 快速打开 366
24.3 帮助 367
24.4 文档窗口 368
24.4.1 侧边导航栏 368
24.4.2 侧边栏的内容表 368
24.4.3 类信息 368
24.4.4 查找和导航 369
24.5 保持同步 371
24.6 自定义的Quick Help 373
24.6.1 C语言系列的文档 373
24.6.2 Doxygen 375
24.6.3 运行Doxygen 380
24.6.4 安装文档集合 380
24.7 Swift和reStructuredText 381
24.8 小结 383
第25章 Xcode构建系统 384
25.1 Xcode如何组织构建过程 384
25.2 构建变量 387
25.3 设置的层级 388
25.4 编辑构建变量 389
25.5 配置 390
25.6 配置文件 392
25.6.1 创建配置文件 392
25.6.2 SDK和指定的架构设置 393
25.6.3 预处理xcconfig文件 393
25.7 命令行工具 394
25.7.1 xcodebuild 394
25.7.2 xcode-select 395
25.7.3 xcrun 396
25.8 自定义构建规则 397
25.9 构建日志 398
25.10 简单的构建记录 400
25.11 小结 408
第26章 Instruments 409
26.1 Instruments是什么 409
26.2 运行Instruments 410
26.3 记录文档窗口 411
26.3.1 工具栏 412
26.3.2 记录区域 414
26.3.3 Detail区域 415
26.3.4 Extended Detail区域 415
26.3.5 库 418
26.4 追踪 419
26.4.1 记录 419
26.4.2 保存和重新打开 422
26.4.3 不启动instrument记录 422
26.5 Instruments 422
26.5.1 Behavior 423
26.5.2 Core Data 423
26.5.3 Dispatch 423
26.5.4 Filesystem 423
26.5.5 Graphics 424
26.5.6 Input/Output 424
26.5.7 Master Tracks 424
26.5.8 Memory 425
26.5.9 系统 425
26.5.10 System-iOS Energy Instruments 427
26.5.11 线程/锁 427
26.5.12 记录 428
26.5.13 UI Automation 428
26.5.14 用户界面 428
26.6 自定义Instruments 429
26.7 模板 430
26.7.1 全部平台 430
26.7.2 仅限iOS 430
26.7.3 仅限Mac 431
26.8 小结 431
第27章 调试 432
27.1 Scheme选项 432
27.1.1 Info 432
27.1.2 参数 433
27.1.3 选项 433
27.1.4 诊断 435
27.2 使用断点做更多的工作 435
27.3 视图层级 437
27.4 lldb命令行 439
27.5 小技巧 441
27.6 小结 444
第28章 零散的知识 445
28.1 技巧 445
28.1.1 一般技巧 445
28.1.2 代码折叠 449
28.1.3 Assistant编辑器 450
28.1.4 Instruments和调试 452
28.1.5 构建 452
28.2 陷阱 454
第五部分 附录
附录A 一些构建变量 460
附录B 资源 474
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Xcode实战:Apple平台开发实用技术、技巧及最佳流程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>斯大林：未经修改的档案
有可能猜破斯大林之谜吗？（代序）
第一部　格鲁吉亚的儿子
第一章　斯大林是否隐瞒了他早年生活的真实情况
第二章　幼年从哥里得到的遗产
第三章　“我们的父亲从前是一个格鲁吉亚人”
第二部　在生活的十字路口
第四章　宗教活动领域
第五章　通向诗坛的小道
第六章　离开神殿，走革命道路
第七章　科技工作
第八章　“实现既定目标的不可战胜的志向”
第三部　革命的大学
第九章　学习的开始
第十章　“基督履海”
第十一章　第一件独立的工作
第十二章　无自由生活的考验
第十三章　斯大林是沙皇警察机构的奸细吗？
第十四章　斯大林的导师
第十五章　在第一次革命风暴年代
第十六章　斯大林与“没收行动”
第十七章　革命事业中的帮工
第十八章　无产阶级政党内“巴库人”的无产阶级革命
第十九章　毕业论文
第二十章　穷乡僻壤的传说和故事
第二十一章　革命事业中的师傅
第二十二章　如何拯救党于危亡
第四部　国内战争的“军事学院”
第二十三章　革命政权的负担
第二十四章　在察里津前线
第二十五章　在混乱的国内战争中整顿秩序
第二十六章　保卫彼得格勒
第二十七章　歼灭邓尼金的军队
第二十八章　进军波兰
第二十九章　在国内战争“军事学院”里学到的东西
第五部　在苏维埃的奥林波斯山上
第三十章　斯大林如何“掌握了无限的权力”
第三十一章　列宁的“遗嘱”
第三十二章　同列夫•托洛茨基的搏斗
第三十三章　斯大林接受列宁的遗产
第三十四章　同列夫•托洛茨基的第二次搏斗
第三十五章　反对格里戈里•季诺维也夫和列夫•加米涅夫
第三十六章　反对两个列夫和一个格里戈里
第三十七章　在“从张伯伦到托洛茨基”的战线上
第三十八章　对国家进行革命改造的方针
第三十九章　“谁在那里迈右腿”
为什么斯大林取得了胜利（代结束语）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>斯大林：未经修改的档案
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS传感器应用开发最佳实践
第1章  开篇综述
1.1  本书结构
1.2  本书中的约定
1.2.1  实例代码约定
1.2.2  图示的约定
第2章  手势识别
2.1  手势种类
2.2  使用手势识别器
2.2.1  视图对象与手势识别
2.2.2  手势识别状态
2.2.3  检测Tap
2.2.4  检测Long Press
2.2.5  检测Pan
2.2.6  检测Swipe
2.2.7  检测Rotation
2.2.8  检测Pinch
2.3  触摸事件与手势识别
2.3.1  事件处理机制
2.3.2  响应者对象与响应链
2.3.3  触摸事件
2.3.4  手势识别
本章小结
第3章  加速度计与陀螺仪
3.1  加速度计
3.1.1  访问加速度计
3.1.2  实例：通过Accelerometer访问加速度计
3.1.3  实例：通过CMMotionManager访问加速度计
3.1.4  数据的“滤波”
3.1.5  实例：数据的“滤波”
3.1.6  感知设备方向
3.1.7  实例：感知设备方向
3.2  陀螺仪
3.2.1  访问陀螺仪
3.2.2  检测晃动设备
3.2.3  实例：检测晃动设备
本章小结
第4章  指南针与磁力计
4.1  访问磁力计
4.1.1  访问导航方面的API
4.1.2  磁力计与设备方向
4.1.3  实例：指南针应用
4.2  检测磁场
4.2.1  检测磁场API
4.2.2  实例：特斯拉计应用
本章小结
第5章  照相机与摄像头
5.1  iOS设备摄像头
5.2  图像抓取
5.2.1  图像选择器
5.2.2  实例：照相机抓取图片
5.2.3  编辑图片
5.2.4  保存图片
5.2.5  添加照相机图层
5.3  视频捕获
5.3.1  实例：视频捕获
5.3.2  使用UIImagePickerController捕获
5.3.3  使用AVFoundation捕获
本章小结
第6章  音频设备访问
6.1  音频API介绍
6.2  AVFoundation框架实现音频录制与播放
6.2.1  音频播放
6.2.2  实例：音频播放
6.2.3  音频录制
6.2.4  实例：音频录制
本章小结
第7章  使用蓝牙
7.1  Game Kit应用开发
7.1.1  对等结构网络
7.1.2  Game Kit API
7.1.3  实例：基于蓝牙对等网络通信
7.2  低功耗蓝牙
7.2.1  Core Bluetooth API
7.2.2  中心角色
7.2.3  外设角色
7.3  实例：低功耗蓝牙通信
7.3.1  中心角色编程实现
7.3.2  外设角色编程实现
7.4  使用SensorTag开发蓝牙低功耗应用
7.4.1  SensorTag开发套件
7.4.2  实例：我的温度计
本章小结
第8章  定位
8.1  获得用户的位置
8.1.1  定位服务编程
8.1.2  实例：定位服务
8.1.3  距离过滤器和精度
8.1.4  启动和停止定位服务
8.1.5  获得位置信息
8.1.6  关于定位服务的测试
8.2  地理信息编码与反编码
8.2.1  地理信息反编码
8.2.2  实例：地理信息反编码
8.2.3  地理信息编码查询
8.2.4  实例：地理信息编码查询
8.3  微定位技术
8.3.1  地理围栏
8.3.2  iOS 7中的iBeacon技术
8.3.3  实例：iBeacon技术实现微定位
8.4  接近传感器
本章小结
第9章  iOS敏捷开发项目实战——增强现实版本铅锤应用
9.1  应用分析与设计
9.1.1  应用概述
9.1.2  需求分析
9.1.3  原型设计
9.2  iOS敏捷开发
9.2.1  敏捷开发宣言
9.2.2  iOS可以敏捷开发
9.2.3  iOS敏捷开发一般过程
9.3  任务1：创建应用并初始化工程
9.3.1  任务1.1：创建PlumbBob工程
9.3.2  任务1.2：设置状态栏
9.3.3  任务1.3：设置设备支持方向
9.3.4  任务1.4：添加铅锤图片
9.4  任务2：铅锤功能
9.4.1  任务2.1：添加铅锤ImageView到主视图
9.4.2  任务2.2：通过加速度计传感器控制铅锤
9.5  任务3：增强现实功能
9.6  任务4：关于我们
本章小结
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS传感器应用开发最佳实践
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS开发指南 从Hello World到App Store上架 第4版
第一部分 　基础篇
第1章　开篇综述　　2
1.1 　iOS概述　　2
1.1.1 　iOS介绍　　2
1.1.2 　iOS 9新特性　　2
1.2 　开发环境及开发工具　　3
1.3 　本书约定　　4
1.3.1 　案例代码约定　　4
1.3.2 　图示的约定　　5
1.3.3 　方法命名约定　　6
1.3.4 　构造函数命名约定　　7
1.3.5 　错误处理约定　　8
第2章　第一个iOS应用程序　　10
2.1 　创建HelloWorld工程　　10
2.1.1 　创建工程　　10
2.1.2 　Xcode中的iOS工程模板　　14
2.1.3 　应用剖析　　15
2.2 　应用生命周期　　17
2.2.1 　非运行状态——应用启动场景　　19
2.2.2 　点击Home键——应用退出场景　　20
2.2.3 　挂起重新运行场景　　22
2.2.4 　内存清除：应用终止场景　　23
2.3 　设置产品属性　　23
2.3.1 　Xcode中的工程和目标　　23
2.3.2 　设置常用的产品属性　　26
2.4 　iOS API简介　　27
2.4.1 　API概述　　27
2.4.2 　如何使用API帮助　　29
2.5 　小结　　32
第3章　Cocoa Touch框架与构建应用界面　　33
3.1 　视图控制器　　33
3.1.1 　视图控制器种类　　33
3.1.2 　视图的生命周期　　33
3.2 　视图　　35
3.2.1 　UIView继承层次结构　　35
3.2.2 　视图分类　　37
3.2.3 　应用界面构建层次　　37
3.3 　使用故事板构建界面　　38
3.3.1 　什么是故事板　　39
3.3.2 　场景和过渡　　41
3.4 　使用XIB文件构建界面　　42
3.4.1 　重构HelloWorld　　42
3.4.2 　XIB与故事板比较　　45
3.5 　使用纯代码构建界面　　45
3.5.1 　重构HelloWorld　　46
3.5.2 　视图的几个重要属性　　47
3.6 　3种构建界面技术讨论　　49
3.6.1 　所见即所得　　49
3.6.2 　原型驱动开发　　49
3.6.3 　团队协同开发　　49
3.7 　小结　　50
第4章　UIView与视图　　51
4.1 　标签与按钮　　51
4.1.1 　Interface Builder实现　　51
4.1.2 　代码实现　　55
4.2 　事件处理　　56
4.2.1 　Interface Builder实现　　56
4.2.2 　代码实现　　59
4.3 　访问视图　　60
4.3.1 　Interface Builder实现　　60
4.3.2 　代码实现　　62
4.4 　TextField和TextView　　63
4.4.1 　Interface Builder实现　　64
4.4.2 　代码实现　　65
4.4.3 　键盘的打开和关闭　　67
4.4.4 　关闭和打开键盘的通知　　68
4.4.5 　键盘的种类　　69
4.5 　开关控件、分段控件和滑块控件　　70
4.5.1 　开关控件　　71
4.5.2 　分段控件　　72
4.5.3 　滑块控件　　74
4.6 　Web视图：WKWebView类　　76
4.7 　警告框和操作表　　80
4.7.1 　UIAlertController实现警告框　　81
4.7.2 　UIAlertController实现操作表　　83
4.8 　等待相关的控件与进度条　　84
4.8.1 　活动指示器ActivityIndicatorView　　85
4.8.2 　进度条ProgressView　　87
4.9 　工具栏和导航栏　　90
4.9.1 　工具栏　　90
4.9.2 　导航栏　　94
4.10 　小结　　98
第5章　委托协议、数据源协议与高级视图　　99
5.1 　视图中的委托协议和数据源协议　　99
5.2 　选择器　　99
5.2.1 　日期选择器　　99
5.2.2 　普通选择器　　104
5.2.3 　数据源协议与委托协议　　109
5.3 　集合视图　　111
5.4 　实例：Interface Builder实现奥运会比赛项目　　112
5.4.1 　添加集合视图　　113
5.4.2 　添加集合视图单元格　　114
5.4.3 　数据源协议与委托协议　　118
5.5 　实例：代码实现奥运会比赛项目　　120
5.5.1 　添加集合视图　　120
5.5.2 　自定义集合视图单元格　　122
5.6 　小结　　123
第6章　表视图　　124
6.1 　概述　　124
6.1.1 　表视图的组成　　124
6.1.2 　表视图的相关类　　125
6.1.3 　表视图分类　　125
6.1.4 　单元格的组成和样式　　127
6.1.5 　数据源协议与委托协议　　129
6.2 　简单表视图　　129
6.2.1 　实现协议方法　　130
6.2.2 　UIViewController根视图控制器　　130
6.2.3 　UITableViewController根视图控制器　　137
6.3 　自定义表视图单元格　　140
6.3.1 　Interface Builder实现　　141
6.3.2 　代码实现　　145
6.4 　添加搜索栏　　146
6.5 　分节表视图　　150
6.5.1 　添加索引　　150
6.5.2 　分组　　153
6.6 　静态表与界面布局　　154
6.7 　插入和删除单元格　　160
6.7.1 　Interface Builder实现　　162
6.7.2 　代码实现　　167
6.8 　移动单元格　　169
6.9 　表视图UI设计模式　　171
6.9.1 　分页模式　　171
6.9.2 　下拉刷新模式　　171
6.9.3 　下拉刷新控件　　172
6.10 　小结　　174
第7章　界面布局与屏幕适配　　175
7.1 　界面布局概述　　175
7.2 　iOS界面布局设计模式　　176
7.2.1 　表单布局模式　　176
7.2.2 　列表布局模式　　176
7.2.3 　网格布局模式　　177
7.3 　传统布局技术　　177
7.4 　Auto Layout布局技术　　179
7.4.1 　Interface Builder中管理Auto Layout约束　　179
7.4.2 　实例：Auto Layout布局　　180
7.5 　iOS 9堆视图StackView　　185
7.5.1 　堆视图与布局　　185
7.5.2 　实例：堆视图布局　　186
7.6 　iOS 屏幕的多样性　　191
7.6.1 　iOS屏幕介绍　　191
7.6.2 　iOS的3种分辨率　　192
7.6.3 　获得iOS设备屏幕信息　　193
7.7 　Size Class与iOS多屏幕适配　　194
7.7.1 　Interface Builder中使用Size Class　　195
7.7.2 　Size Class的九宫格　　195
7.7.3 　实例：使用Size Class　　196
7.8 　资源目录与图片资源适配　　201
7.9 　小结　　204
第8章　视图控制器与导航模式　　205
8.1 　概述　　205
8.1.1 　视图控制器的种类　　205
8.1.2 　导航模式　　205
8.2 　模态视图　　207
8.2.1 　Interface Builder实现　　208
8.2.2 　代码实现　　214
8.3 　平铺导航　　215
8.3.1 　应用场景　　215
8.3.2 　基于分屏导航的实现　　217
8.3.3 　基于电子书导航的实现　　223
8.4 　标签导航　　228
8.4.1 　应用场景　　229
8.4.2 　Interface Builder实现　　230
8.4.3 　代码实现　　234
8.5 　树形结构导航　　235
8.5.1 　应用场景　　235
8.5.2 　Interface Builder实现　　236
8.5.3 　代码实现　　244
8.6 　组合使用导航模式　　245
8.6.1 　应用场景　　246
8.6.2 　Interface Builder实现　　246
8.6.3 　代码实现　　254
8.7 　小结　　257
第9章　iPad应用开发　　258
9.1 　iPad与iPhone应用开发的差异　　258
9.1.1 　应用场景不同　　258
9.1.2 　导航模式不同　　258
9.1.3 　API不同　　258
9.2 　iPad树形结构导航　　259
9.2.1 　邮件应用中的树形结构导航　　259
9.2.2 　Master-Detail应用程序模板　　260
9.2.3 　Interface Builder实现SplitViewSample案例　　266
9.2.4 　代码实现SplitViewSample案例　　270
9.3 　iPad模态视图　　273
9.3.1 　邮件应用中的模态导航　　273
9.3.2 　iPad模态导航相关API　　275
9.3.3 　Interface Builder实现ModalView-Sample案例　　277
9.3.4 　代码实现ModalViewSample案例　　281
9.4 　Popover（浮动层）视图　　284
9.4.1 　Popover相关API　　284
9.4.2 　PopoverViewSample案例　　285
9.5 　iOS 9分屏多任务　　289
9.5.1 　Slide Over多任务　　289
9.5.2 　分屏视图多任务　　290
9.5.3 　画中画多任务　　293
9.6 　iPad分屏多任务适配开发　　293
9.6.1 　分屏多任务前提条件　　293
9.6.2 　分屏多任务适配　　294
9.7 　小结　　295
第二部分 　设计与架构篇
第10章　iOS常用设计模式　　298
10.1 　单例模式　　298
10.1.1 　问题提出　　298
10.1.2 　Objective-C实现原理　　298
10.1.3 　Swift实现原理　　299
10.1.4 　应用案例　　300
10.2 　委托模式　　301
10.2.1 　问题提出　　301
10.2.2 　实现原理　　303
10.2.3 　应用案例　　306
10.3 　观察者模式　　309
10.3.1 　问题提出　　309
10.3.2 　实现原理　　310
10.3.3 　通知机制和KVO机制　　311
10.4 　再谈MVC模式　　317
10.4.1 　MVC模式概述　　317
10.4.2 　Cocoa Touch中的MVC模式　　318
10.5 　小结　　320
第11章　iOS分层架构设计　　321
11.1 　低耦合企业级系统架构设计　　321
11.2 　iOS分层架构设计　　322
11.2.1 　工程与工作空间　　322
11.2.2 　静态链接库　　323
11.2.3 　框架　　323
11.2.4 　16种分层模式　　324
11.3 　实例：MyNotes应用　　325
11.4 　基于同一工程的分层　　327
11.4.1 　采用纯Swift语言实现：PSSS模式　　327
11.4.2 　采用纯Objective-C语言实现：POOO模式　　330
11.4.3 　采用Swift调用Objective-C的混合搭配实现：PSOO模式　　334
11.5 　基于同一工作空间静态链接库实现的WLSOO模式　　335
11.5.1 　使用工作空间　　335
11.5.2 　添加数据持久层工程　　336
11.5.3 　建立业务逻辑层与数据持久层依赖关系　　337
11.5.4 　建立表示层与业务逻辑层依赖关系　　339
11.6 　基于同一工作空间框架实现的WFSSS模式　　339
11.6.1 　创建框架工程　　340
11.6.2 　建立依赖关系　　341
11.6.3 　代码重构　　342
11.7 　基于同一工作空间框架实现的WFOOO模式　　344
11.7.1 　设置Public头文件　　344
11.7.2 　设置保护伞头文件　　345
11.7.3 　代码重构　　345
11.8 　基于同一工作空间框架实现的WFSOO模式　　346
11.8.1 　设置Public头文件　　346
11.8.2 　设置保护伞头文件　　346
11.8.3 　建立表示层与业务逻辑层依赖关系　　346
11.8.4 　代码重构　　346
11.9 　基于同一工作空间框架实现的WFOSS模式　　346
11.9.1 　设置Public头文件　　346
11.9.2 　设置Swift代码嵌入应用　　347
11.9.3 　代码重构　　347
11.10 　基于同一个工程不同目标框架实现的TFSOO模式　　348
11.10.1 　使用目标　　348
11.10.2 　添加框架目标　　348
11.11 　小结　　349
第12章　数据持久化　　350
12.1 　概述　　350
12.1.1 　沙箱目录　　350
12.1.2 　持久化方式　　351
12.2 　属性列表　　351
12.3 　对象归档　　357
12.4 　使用SQLite数据库　　361
12.4.1 　SQLite数据类型　　361
12.4.2 　配置Objective-C框架工程环境　　362
12.4.3 　配置Swift框架工程环境　　362
12.4.4 　创建数据库　　364
12.4.5 　查询数据　　365
12.4.6 　修改数据　　368
12.5 　Core Data　　370
12.5.1 　ORM　　370
12.5.2 　Core Data栈　　371
12.5.3 　建模和生成实体　　374
12.5.4 　采用Core Data分层架构设计　　380
12.5.5 　查询数据　　382
12.5.6 　修改数据　　384
12.6 　小结　　385
第三部分 　进 　阶 　篇
第13章　应用程序设置　　388
13.1 　概述　　388
13.1.1 　设置　　388
13.1.2 　配置　　389
13.2 　应用程序设置包　　390
13.3 　设置项目种类　　392
13.3.1 　文本字段　　395
13.3.2 　开关　　398
13.3.3 　滑块　　399
13.3.4 　值列表　　400
13.3.5 　子界面　　401
13.4 　读取设置　　403
13.5 　小结　　405
第14章　本地化　　406
14.1 　概述　　406
14.1.1 　需要本地化的内容　　406
14.1.2 　本地化目录结构　　409
14.2 　文本信息本地化　　410
14.2.1 　系统按钮和信息本地化　　410
14.2.2 　应用名称本地化　　411
14.2.3 　程序代码输出的静态文本本地化　　413
14.2.4 　使用genstring工具　　414
14.3 　故事板和XIB文件本地化　　415
14.3.1 　使用Base Internationalization技术　　415
14.3.2 　Auto Layout与本地化　　417
14.4 　资源文件本地化　　419
14.4.1 　图片资源文件本地化　　419
14.4.2 　声音资源文件本地化　　420
14.5 　小结　　421
第15章　iOS 9中访问通讯录　　422
15.1 　通讯录的安全访问设置　　422
15.2 　使用Contacts框架读取联系人信息　　423
15.2.1 　查询联系人　　423
15.2.2 　读取单值属性　　426
15.2.3 　读取多值属性　　428
15.2.4 　读取图片属性　　430
15.3 　使用Contacts框架写入联系人信息　　430
15.3.1 　创建联系人　　431
15.3.2 　修改联系人　　433
15.3.3 　删除联系人　　434
15.4 　使用系统提供界面　　435
15.4.1 　选择联系人　　435
15.4.2 　显示和修改联系人　　438
15.4.3 　创建联系人　　441
15.5 　小结　　444
第16章　数据交换格式　　445
16.1 　XML数据交换格式　　446
16.1.1 　XML文档结构　　446
16.1.2 　解析XML文档　　447
16.2 　实例：MyNotes应用XML　　448
16.2.1 　使用NSXML解析　　450
16.2.2 　使用TBXML解析　　453
16.3 　JSON数据交换格式　　459
16.3.1 　JSON文档结构　　459
16.3.2 　JSON数据编码/解码　　460
16.4 　实例：MyNotes应用JSON解码　　461
16.5 　小结　　462
第17章　REST Web Service　　463
17.1 　概述　　463
17.2 　使用NSURLSession　　464
17.2.1 　NSURLSession API　　464
17.2.2 　简单会话实现GET请求　　465
17.2.3 　默认会话实现GET请求　　468
17.2.4 　实现POST请求　　469
17.2.5 　下载数据　　470
17.3 　实例：使用NSURLSession重构MyNotes案例　　473
17.3.1 　插入方法调用　　473
17.3.2 　修改方法调用　　474
17.3.3 　删除方法调用　　475
17.4 　使用AFNetworking框架　　477
17.4.1 　比较ASIHTTPRequest、AFNetworking和MKNetworkKit　　477
17.4.2 　安装和配置AFNetworking框架　　478
17.4.3 　实现GET请求　　479
17.4.4 　实现POST请求　　480
17.4.5 　下载数据　　481
17.4.6 　上传数据　　482
17.5 　使用为Swift设计的网络框架：Alamofire　　484
17.5.1 　安装和配置Alamofire框架　　484
17.5.2 　实现GET请求　　485
17.5.3 　实现POST请求　　486
17.5.4 　下载数据　　487
17.5.5 　上传数据　　488
17.6 　反馈网络信息改善用户体验　　489
17.6.1 　使用下拉刷新控件改善用户体验　　489
17.6.2 　使用活动指示器控件　　492
17.6.3 　使用网络活动指示器　　494
17.7 　小结　　494
第18章　定位服务　　495
18.1 　定位服务概述　　495
18.1.1 　定位服务编程　　496
18.1.2 　测试定位服务　　499
18.2 　管理定位服务　　503
18.2.1 　应用启动与停止下的定位服务管理　　504
18.2.2 　视图切换下的定位服务管理　　504
18.2.3 　应用前后台切换下的定位服务管理　　505
18.2.4 　设置自动暂停位置服务　　507
18.2.5 　iOS 9后台位置服务管理　　507
18.3 　地理信息编码与反编码　　508
18.3.1 　地理信息反编码　　508
18.3.2 　实例：地理信息反编码　　509
18.3.3 　地理信息编码查询　　510
18.3.4 　实例：地理信息编码查询　　510
18.4 　微定位技术iBeacon　　512
18.4.1 　微定位与地理围栏　　512
18.4.2 　iBeacon技术概述　　512
18.4.3 　实例：使用iBeacon技术实现微定位　　513
18.5 　小结　　519
第19章　苹果地图应用　　520
19.1 　使用iOS苹果地图　　520
19.1.1 　显示地图　　520
19.1.2 　显示3D地图　　524
19.2 　添加标注　　525
19.2.1 　实现查询　　526
19.2.2 　在地图上添加标注　　528
19.3 　跟踪用户位置变化　　529
19.4 　使用程序外地图　　530
19.5 　小结　　533
第四部分 　测试、调试和优化篇
第20章　找出程序中的bug——调试　　536
20.1 　Xcode调试工具　　536
20.1.1 　定位编译错误　　536
20.1.2 　查看和显示日志　　537
20.1.3 　设置和查看断点　　539
20.1.4 　调试工具　　544
20.1.5 　输出窗口　　545
20.1.6 　变量查看窗口　　546
20.1.7 　查看线程　　547
20.2 　LLDB调试工具　　548
20.2.1 　断点命令　　548
20.2.2 　观察点命令　　550
20.2.3 　查看变量和计算表达式命令　　552
20.3 　日志与断言输出　　554
20.3.1 　使用NSLog函数　　554
20.3.2 　使用断言　　555
20.4 　异常栈报告分析　　556
20.4.1 　跟踪异常栈　　556
20.4.2 　分析栈报告　　558
20.5 　在iOS设备上调试　　559
20.5.1 　Xcode设置　　559
20.5.2 　设备设置　　560
20.6 　Xcode设备管理工具　　562
20.6.1 　查看设备上的应用程序　　562
20.6.2 　设备日志　　564
20.7 　小结　　564
第21章　iOS测试驱动与单元测试　　565
21.1 　测试驱动的软件开发概述　　565
21.1.1 　测试驱动的软件开发流程　　565
21.1.2 　测试驱动的软件开发案例　　566
21.1.3 　iOS单元测试框架　　567
21.2 　使用XCTest测试框架　　568
21.2.1 　添加XCTest到工程　　568
21.2.2 　Swift版本中设置编译目标成员　　570
21.2.3 　编写XCTest测试方法　　570
21.2.4 　运行测试用例目标　　573
21.2.5 　分析测试报告　　575
21.3 　异步单元测试　　576
21.4 　性能测试　　580
21.4.1 　Swift版本中配置测试环境　　580
21.4.2 　测试用例代码　　580
21.4.3 　分析测试结果　　581
21.5 　iOS单元测试最佳实践　　583
21.5.1 　配置测试数据持久层　　583
21.5.2 　编写数据持久层测试用例　　584
21.5.3 　运行测试数据持久层测试用例　　587
21.5.4 　配置测试业务逻辑层　　588
21.5.5 　编写业务逻辑层测试用例　　588
21.6 　小结　　589
第22章　iOS应用UI测试　　590
22.1 　UI测试概述　　590
22.2 　添加UI测试到工程　　590
22.2.1 　创建工程时添加UI测试框架　　590
22.2.2 　在现有工程中添加UI测试用例目标　　591
22.3 　录制脚本　　593
22.3.1 　录制之前的准备　　593
22.3.2 　录制过程　　593
22.3.3 　修改录制脚本　　595
22.4 　访问UI元素　　595
22.4.1 　UI元素层次结构树　　595
22.4.2 　UI测试中相关API　　597
22.5 　表示层测试最佳实践　　598
22.5.1 　配置UI测试用例目标　　598
22.5.2 　编写UI测试用例　　599
22.6 　小结　　602
第23章　让你的程序“飞”起来——性能优化　　603
23.1 　内存优化　　603
23.1.1 　内存管理　　603
23.1.2 　使用Analyze工具检查内存泄漏　　603
23.1.3 　使用Instruments工具检查内存泄漏　　608
23.1.4 　使用Instruments工具检查僵尸对象　　612
23.1.5 　autorelease的使用问题　　615
23.1.6 　响应内存警告　　616
23.2 　优化资源文件　　617
23.2.1 　图片文件优化　　618
23.2.2 　音频文件优化　　619
23.3 　延迟加载　　620
23.3.1 　资源文件的延迟加载　　620
23.3.2 　故事板文件的延迟加载　　624
23.3.3 　XIB文件的延迟加载　　626
23.4 　数据持久化的优化　　628
23.4.1 　使用文件　　628
23.4.2 　使用SQLite数据库　　631
23.4.3 　使用Core Data　　632
23.5 　可重用对象的使用　　634
23.5.1 　表视图中的可重用对象　　635
23.5.2 　集合视图中的可重用对象　　636
23.5.3 　地图视图中的可重用对象　　638
23.6 　并发处理与多核CPU　　638
23.6.1 　主线程阻塞问题　　638
23.6.2 　选择NSThread还是GCD　　639
23.7 　小结　　640
第五部分 　实 　战 　篇
第24章　管理好你的程序代码——代码版本控制　　642
24.1 　概述　　642
24.1.1 　版本控制历史　　642
24.1.2 　基本概念　　643
24.2 　Git代码版本控制　　643
24.2.1 　服务器搭建　　643
24.2.2 　Gitolite服务器管理　　645
24.2.3 　Git常用命令　　647
24.2.4 　Git分支　　649
24.2.5 　Git协同开发　　653
24.2.6 　Xcode中Git的配置与使用　　656
24.3 　GitHub代码托管服务　　663
24.3.1 　创建和配置GitHub账号　　663
24.3.2 　创建代码库　　666
24.3.3 　删除代码库　　668
24.3.4 　派生代码库　　669
24.3.5 　使用GitHub协同开发　　671
24.3.6 　管理组织　　677
24.4 　小结　　680
第25章　项目依赖管理　　681
25.1 　使用CocoaPods工具管理依赖　　681
25.1.1 　安装CocoaPods　　681
25.1.2 　搜索库　　682
25.1.3 　项目与第三方库搭配形式　　683
25.1.4 　示例：静态链接库形式管理依赖　　684
25.1.5 　示例：框架形式管理依赖　　686
25.2 　使用Carthage工具管理依赖　　687
25.2.1 　安装Carthage　　688
25.2.2 　项目与第三方库搭配形式　　688
25.2.3 　Cartfile文件　　688
25.2.4 　示例：重构MyNotes依赖关系　　689
25.3 　小结　　691
第26章　重构MyNotes应用——iOS网络通信中的设计模式与架构设计　　692
26.1 　移动网络通信应用的分层架构设计　　692
26.2 　Objective-C版本：在数据持久层中添加和配置AFNetworking　　693
26.2.1 　用CocoaPods工具管理依赖　　693
26.2.2 　测试依赖　　693
26.3 　Swift版本：在数据持久层中添加和配置Alamofire　　694
26.3.1 　用Carthage工具管理依赖　　694
26.3.2 　测试依赖　　695
26.4 　基于委托模式实现　　695
26.4.1 　网络通信与委托模式　　696
26.4.2 　在异步网络通信中使用委托模式实现分层架构设计　　696
26.4.3 　类图　　697
26.4.4 　时序图　　699
26.4.5 　数据持久层重构（Objective-C版本）　　702
26.4.6 　数据持久层重构（Swift版本）　　705
26.4.7 　业务逻辑层的代码实现　　707
26.4.8 　表示层的代码实现　　710
26.5 　基于观察者模式的通知机制实现　　716
26.5.1 　观察者模式的通知机制回顾　　716
26.5.2 　异步网络通信中通知机制的分层架构设计　　716
26.5.3 　类图　　717
26.5.4 　时序图　　719
26.5.5 　数据持久层重构（Objective-C版本）　　722
26.5.6 　数据持久层重构（Swift版本）　　723
26.5.7 　业务逻辑层的代码实现　　725
26.5.8 　表示层的代码实现　　726
26.6 　小结　　731
第27章　把你的应用放到App Store上　　732
27.1 　收官　　732
27.1.1 　在Xcode 中添加图标　　732
27.1.2 　在Xcode中添加启动界面　　734
27.1.3 　调整Identity和Deployment Info属性　　738
27.2 　为发布进行编译　　739
27.2.1 　创建开发者证书　　739
27.2.2 　创建App ID　　744
27.2.3 　创建描述文件　　745
27.2.4 　发布编译　　748
27.3 　发布上架　　750
27.3.1 　创建应用　　750
27.3.2 　应用定价　　753
27.3.3 　基本信息输入　　754
27.3.4 　上传应用　　757
27.3.5 　提交审核　　759
27.4 　常见审核不通过的原因　　761
27.4.1 　功能问题　　761
27.4.2 　用户界面问题　　761
27.4.3 　商业问题　　761
27.4.4 　不当内容　　761
27.4.5 　其他问题　　762
27.5 　小结　　762
第28章　iOS敏捷开发项目实战——2016里约热内卢奥运会应用开发及App Store发布　　763
28.1 　应用分析与设计　　763
28.1.1 　应用概述　　763
28.1.2 　需求分析　　763
28.1.3 　原型设计　　764
28.1.4 　数据库设计　　765
28.1.5 　架构设计　　766
28.2 　iOS敏捷开发　　766
28.2.1 　敏捷开发宣言　　766
28.2.2 　iOS适合敏捷开发？　　767
28.2.3 　iOS敏捷开发最佳实践　　767
28.3 　任务1：创建应用工作空间和工程　　769
28.3.1 　迭代1.1：创建工作空间　　769
28.3.2 　迭代1.2：发布到GitHub　　769
28.4 　任务2：信息系统层与持久层开发　　770
28.4.1 　迭代2.1：编写数据库DDL脚本　　770
28.4.2 　迭代2.2：插入初始数据到数据库　　770
28.4.3 　迭代2.3：数据库版本控制　　771
28.4.4 　迭代2.4：配置持久层工程PersistenceLayer　　771
28.4.5 　迭代2.5：编写实体类　　772
28.4.6 　迭代2.6：编写DAO类单元测试用例类　　773
28.4.7 　迭代2.7：编写DAO类　　775
28.4.8 　迭代2.8：数据库帮助类DBHelper　　779
28.4.9 　迭代2.9：配置及运行持久层测试用例目标　　781
28.4.10 　迭代2.10：发布到GitHub　　782
28.5 　任务3：业务逻辑层开发　　782
28.5.1 　迭代3.1：比赛项目业务逻辑类XCTest单元测试　　783
28.5.2 　迭代3.2：编写比赛项目业务逻辑类　　784
28.5.3 　迭代3.3：比赛日程业务逻辑类XCTest单元测试　　785
28.5.4 　迭代3.4：编写比赛日程业务逻辑类　　786
28.5.5 　迭代3.5：发布到GitHub　　787
28.6 　任务4：表示层开发　　788
28.6.1 　迭代4.1：使用资源目录管理图片和图标资源　　788
28.6.2 　迭代4.2：根据原型设计初步设计故事板　　789
28.6.3 　迭代4.3：“首页”模块　　790
28.6.4 　迭代4.4：“比赛项目”模块　　791
28.6.5 　迭代4.5：“比赛日程”模块　　795
28.6.6 　迭代4.6：“倒计时”模块表示层　　797
28.6.7 　迭代4.7：“关于我们”模块表示层　　800
28.6.8 　迭代4.8：发布到GitHub　　800
28.7 　任务5：收工　　800
28.7.1 　迭代5.1：添加图标　　800
28.7.2 　迭代5.2：设计和添加启动界面　　801
28.7.3 　迭代5.3：性能测试与改善　　801
28.7.4 　迭代5.4：发布到GitHub上　　802
28.7.5 　迭代5.5：在App Store上发布应用　　802
28.8 　小结　　802
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS开发指南 从Hello World到App Store上架 第4版
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>疯狂iOS讲义（上）（第2版）——Objective-C 2.0与iPhone/iPad应用开发基础
第1章　iOS应用与开发环境	1
1.1  Objective-C与iOS简介	2
1.1.1  Objective-C简介	2
1.1.2  iOS简介	3
1.2  搭建iOS开发环境	3
1.2.1 下载并安装Xcode和SDK	4
1.2.2  安装辅助工具和文档	6
1.3  第一个Objective-C程序	7
1.3.1  使用文本编辑器开发Objective-C程序	7
1.3.2  使用Xcode工具开发Objective-C程序	9
1.4　熟悉Xcode	11
1.4.1  创建iOS项目	11
1.4.2  熟悉导航面板	13
1.4.3  熟悉检查器面板	16
1.4.4  熟悉库面板	17
1.4.5  使用Xcode的帮助系统	19
1.5  本章小结	22
第2章　数据类型和运算符	23
2.1  注释	24
2.2  标识符和变量	25
2.2.1  分隔符	25
2.2.2  标识符规则	27
2.2.3  Objective-C关键字	27
2.3  数据类型分类	27
2.4  基本数据类型	28
2.4.1  整型	28
2.4.2  NSLog输出函数及格式字符	29
2.4.3  字符型	31
2.4.4  浮点型	32
2.4.5  枚举型	33
2.4.6  BOOL类型	35
2.5  类型转换	36
2.5.1  自动类型转换	36
2.5.2  强制类型转换	38
2.5.3  表达式类型的自动提升	38
2.6  运算符	39
2.6.1  算术运算符	39
2.6.2  赋值运算符	42
2.6.3  位运算符	42
2.6.4  扩展后的赋值运算符	44
2.6.5  比较运算符	45
2.6.6  逻辑运算符	45
2.6.7  逗号运算符	46
2.6.8  三目运算符	46
2.6.9  运算符的结合性和优先级	47
2.7  本章小结	48
第3章　流程控制与数组	49
3.1  顺序结构	50
3.2  分支结构	50
3.2.1  if条件语句	50
3.2.2  switch分支语句	54
3.3  循环结构	56
3.3.1  while循环语句	56
3.3.2  do while循环语句	58
3.3.3  for循环	59
3.3.4  嵌套循环	62
3.4  控制循环结构	63
3.4.1  使用break结束循环	63
3.4.2  使用continue结束本次循环	64
3.4.3  使用return结束函数	64
3.5  goto语句	65
3.6  数组	67
3.6.1  定义数组	67
3.6.2  数组的显式初始化	68
3.6.3  使用数组	69
3.6.4  多维数组	70
3.6.5  多维数组的初始化	71
3.6.6  字符数组、字符串与结束标志	77
3.6.7  输出字符串和字符串函数	78
3.6.8  数组的应用举例	80
3.7  本章小结	81
第4章　C语言特性	82
4.1  函数	83
4.1.1  定义函数	83
4.1.2  函数声明	86
4.1.3  函数的参数传递机制	87
4.1.4  递归函数	91
4.1.5  数组作为函数参数	92
4.1.6  内部函数与外部函数	96
4.2  局部变量与全局变量	97
4.2.1  局部变量	98
4.2.2  全局变量	99
4.2.3  外部全局变量与内部全局变量	100
4.2.4  动态存储与静态存储	102
4.3  预处理	104
4.3.1  使用#define、#undef执行宏定义	105
4.3.2  带参数的宏定义	106
4.3.3  使用#ifdef、#ifndef、#else、#endif执行条件编译	107
4.3.4  使用#if、#elif、#else、#endif执行条件编译	109
4.3.5  #include与#import	110
4.4  指针	111
4.4.1  指针的概念	111
4.4.2  指针变量及其基本用法	113
4.4.3  指针变量作为函数参数	114
4.5  指针与数组	117
4.5.1  指向数组的指针变量	117
4.5.2  指针运算	117
4.5.3  数组变量作为函数参数	120
4.5.4  指向多维数组的指针变量	122
4.6  字符串与指针	124
4.6.1  使用字符指针表示字符串	124
4.6.2  字符指针作为函数参数	125
4.7  函数与指针	126
4.7.1  用函数指针变量调用函数	126
4.7.2  用函数指针变量作为函数参数	128
4.7.3  返回指针的函数	129
4.8  指针数组和指向指针变量的指针	130
4.8.1  指针数组与main()函数形参	131
4.8.2  指向指针变量的指针	133
4.9  结构体	134
4.9.1  定义结构体	134
4.9.2  typedef语句	136
4.9.3  初始化结构体变量	137
4.9.4  结构体数组	139
4.10  块	139
4.10.1  块的基本语法	140
4.10.2  块与局部变量	141
4.10.3  直接使用块作为参数	142
4.10.4  使用typedef定义块类型	142
4.11  本章小结	144
第5章　面向对象（上）	145
5.1  类和对象	146
5.1.1  定义类	146
5.1.2  对象的产生和使用	150
5.1.3  对象和指针	152
5.1.4  self关键字	154
5.1.5  id类型	157
5.2  方法详解	158
5.2.1  方法的所属性	158
5.2.2  形参个数可变的方法	159
5.3  成员变量	160
5.3.1  成员变量及其运行机制	160
5.3.2  模拟类变量	163
5.3.3  单例（Singleton）模式	164
5.4  隐藏和封装	165
5.4.1  理解封装	165
5.4.2  使用访问控制符	165
5.4.3  理解@package访问控制符	169
5.4.4  合成存取方法	170
5.4.5  使用点语法访问属性	175
5.5  键值编码（KVC）与键值监听（KVO）	176
5.5.1  简单的KVC	176
5.5.2  处理不存在的key	179
5.5.3  处理nil值	181
5.5.4  key路径	182
5.5.5  键值监听（KVO）	183
5.6  对象初始化	186
5.6.1  为对象分配空间	187
5.6.2  初始化方法与对象初始化	187
5.6.3  便利的初始化方法	189
5.7  类的继承	191
5.7.1  继承的特点	191
5.7.2  重写父类的方法	193
5.7.3  super关键字	194
5.8  多态	197
5.8.1  多态性	197
5.8.2  指针变量的强制类型转换	200
5.8.3  判断指针变量的实际类型	201
5.9  本章小结	202
第6章　面向对象（下）	203
6.1  Objective-C的包装类	204
6.1.1  它们不是包装类	204
6.1.2  NSValue和NSNumber	205
6.2  处理对象	206
6.2.1  打印对象和description方法	206
6.2.2  ==和isEqual:方法	208
6.3  类别与扩展	212
6.3.1  类别（category）	213
6.3.2  利用类别对类进行模块化设计	215
6.3.3  使用类别来调用私有方法	215
6.3.4  扩展（extension）	217
6.4  协议（protocol）与委托	219
6.4.1  规范、协议与接口	219
6.4.2  使用类别实现非正式协议	220
6.4.3  正式协议的定义	221
6.4.4  遵守（实现）协议	222
6.4.5  协议与委托（delegate）	225
6.5  使用@try处理异常	228
6.5.1  使用@try...@catch...@finally捕获异常	229
6.5.2  访问异常信息	231
6.5.3  使用@finally回收资源	232
6.5.4  抛出异常与自定义异常类	233
6.6  Objective-C反射机制	235
6.6.1  获得Class	235
6.6.2  检查继承关系	236
6.6.3  动态调用方法	237
6.7  手动内存管理	240
6.7.1  对象的引用计数	242
6.7.2  对象所属权	244
6.7.3  方法中的保留和释放	247
6.7.4  使用自动释放池	248
6.7.5  自动释放池的销毁时机与工作过程	250
6.7.6  临时对象与事件循环中的自动释放池	251
6.7.7  手动内存管理的规则总结	252
6.8  自动引用计数	253
6.8.1  自动引用计数概述	253
6.8.2  @autoreleasepool块	254
6.9  本章小结	254
第7章　Foundation框架详解	256
7.1  字符串（NSString与NSMutableString）	257
7.1.1  创建字符串	257
7.1.2  NSString的常用功能	258
7.1.3  可变字符串（NSMutableString）	259
7.2  日期与时间	260
7.2.1  日期与时间（NSDate）	261
7.2.2  日期格式器（NSDateFormatter）	262
7.2.3  日历（NSCalendar）与日期组件（NSDateComponents）	264
7.2.4  定时器（NSTimer）	265
7.3  对象复制	267
7.3.1  copy与mutableCopy方法	267
7.3.2  NSCopying与NSMutableCopying协议	268
7.3.3  浅复制与深复制	270
7.3.4  setter方法的复制选项	272
7.4  Objective-C集合概述	273
7.5  数组（NSArray与NSMutableArray）	274
7.5.1  NSArray的功能与用法	274
7.5.2  对集合元素整体调用方法	279
7.5.3  对NSArray进行排序	280
7.5.4  使用枚举器遍历NSArray集合元素	282
7.5.5  快速枚举（for-in）	283
7.5.6  可变数组（NSMutableArray）	283
7.5.7  NSArray的KVC与KVO	285
7.6  集合（NSSet与NSMutableSet）	286
7.6.1  NSSet的功能与用法	286
7.6.2  NSSet判断集合元素重复的标准	289
7.6.3  NSMutableSet的功能与用法	292
7.6.4  NSCountedSet的功能与用法	293
7.7  有序集合（NSOrderedSet与NSMutableOrderedSet）	294
7.8  字典（NSDictionary与NSMutableDictionary）	296
7.8.1  NSDictionary的功能与用法	296
7.8.2  对NSDictionary的key排序	299
7.8.3  对NSDictionary的key进行过滤	301
7.8.4  使用自定义类作为NSDictionary的key	302
7.8.5  NSMutableDictionary的功能与用法	304
7.9  谓词	305
7.9.1  定义谓词	305
7.9.2  使用谓词过滤集合	306
7.9.3  在谓词中使用占位符参数	308
7.9.4  谓词表达式语法	309
7.10  本章小结	311
第8章　文件I/O	312
8.1  使用NSData与NSMutableData	313
8.2  使用NSFileManager管理文件和目录	314
8.2.1  访问文件属性和内容	315
8.2.2  创建、删除、移动、复制	316
8.2.3  查看目录包含的内容	317
8.3  使用NSPathUtilities.h管理路径	318
8.4  使用NSProcessInfo获取进程信息	320
8.5  使用NSFileHandle处理文件IO	321
8.6  使用NSURL读取网络资源	324
8.7  使用NSBundle处理项目相关资源	325
8.8  对象归档	326
8.8.1  使用NSKeyedArchiver归档	326
8.8.2  实现NSCoding协议	328
8.8.3  使用NSData完成自定义归档	331
8.8.4  使用归档实现深复制	333
8.9  本章小结	334
第9章　iOS应用开发入门	335
9.1  从iOS项目开始	336
9.1.1  iOS项目包含的文件	336
9.1.2  Interface Builder简介	337
9.1.3  添加控件	339
9.1.4  修改控件属性	340
9.1.5  UIView支持的属性	342
9.1.6  UILabel支持的属性	344
9.2  MVC	346
9.2.1  程序入口	346
9.2.2  应用程序代理	347
9.2.3  理解iOS的MVC	349
9.2.4  掌握UIViewController控制器	350
9.3  事件机制	352
9.3.1  程序获取控件的两种方式	352
9.3.2  事件处理的三种方式	358
9.4  代码控制UI界面	364
9.4.1  不使用界面设计文件开发UI界面	364
实例：无界面设计文件开发iOS应用	364
9.4.2  使用代码创建UI界面	366
实例：动态添加、删除标签	367
9.4.3  自定义UI控件	369
实例：跟随手指运动的小球	369
9.5  美化iOS应用	372
9.5.1  定制iOS应用图标	372
9.5.2  定制iOS应用的启动画面	373
9.6  本章小结	375
第10章　iOS应用的界面编程	335
10.1  UI控件概述	377
10.1.1  活动、静态和被动控件	377
10.1.2  UIControl基类介绍	377
10.2  按钮（UIButton）	379
实例：丰富多彩的按钮	381
10.3  文本框控件（UITextField）	383
实例：用户登录界面	385
10.3.1  完成输入后关闭键盘	386
10.3.2  触碰背景关闭键盘	387
10.4  多行文本控件（UITextView）	389
10.4.1  UIScrollView支持的属性	390
10.4.2  使用委托对象处理UITextView事件	392
实例1：通过导航按钮关闭虚拟键盘	392
实例2：通过自定义键盘附件关闭虚拟键盘	394
10.4.3  自定义选择内容后的菜单	396
10.5  开关按钮（UISwitch）	397
实例：使用开关控制“手电筒”	398
10.6  分段控件（UISegmentedControl）	399
实例1：通过分段控件控制背景颜色	400
实例2：动态增加、删除分段	401
10.7  图像控件（UIImageView）	402
实例1：图片浏览器	404
实例2：“幻灯片”播放器	406
10.8  进度条	407
10.8.1  UIProgressView	407
实例：定制进度条	409
10.8.2  UIActivityIndicatorView	410
10.9  拖动条（UISlider）	412
实例：通过拖动滑块改变图片透明度	413
10.10  警告框（UIAlertView）与UIActionSheet	415
10.10.1  UIAlertView的基本用法	415
10.10.2  带输入框的UIAlertView	417
10.10.3  使用UIActionSheet	419
10.11  日期选择器（UIDatePicker）	421
实例：倒计时器	423
10.12  选择器（UIPickerView）	425
10.12.1  单列选择器	426
10.12.2  多列选择器	427
10.12.3  相互依赖的多列选择器	429
10.12.4  自定义选择器视图	432
实例：“老虎机”游戏	432
10.13  iOS 8新增的UIVisualEffectView	435
10.14  微调器（UIStepper）	438
10.15  网页控件（UIWebView）	440
实例：迷你浏览器	442
10.16  工具条（UIToolBar）	444
实例：自定义工具条控件	446
10.17 表格（UITableView）与表格控制器（UITableViewController）	448
10.17.1  简单表格	450
10.17.2  处理单元格的选中	454
实例：编辑选中行	454
10.17.3  定制表格行	459
实例1：继承UITableViewCell定制表格行	459
实例2：使用动态单元格原型定制表格行	462
10.17.4  编辑表格	464
10.17.5  多分区表格以及分区索引	470
10.17.6  直接使用UITableViewController	472
10.17.7  静态单元格	474
10.17.8  使用UIRefreshController刷新表格	477
10.18  搜索条（UISearchBar）	479
10.18.1  使用搜索条	480
10.18.2  使用UISearchDisplayController	483
实例：下拉列表显示搜索结果	483
10.19  导航条（UINavigationBar）与导航控制器（UINavigationController）	487
10.19.1  使用导航条	487
10.19.2  使用UINavigationController	489
实例：查看、编辑图书信息	491
10.19.3  使用segue控制过渡	497
10.19.4  使用segue控制导航	501
10.20  网格（UICollectionView）与网格控制器（UICollectionViewController）	505
10.20.1  UICollectionView的功能与用法	508
10.20.2  使用UICollectionViewDelegateFlowLayout定制布局	512
实例：单元格大小不同的网格	513
10.20.3  扩展UICollectionViewLayout定制布局 514
实例：环形布局的UICollectionView	515
10.20.4  多分区网格	518
实例：带页眉、页脚的多分区网格	519
10.20.5  直接使用UICollectionViewController	523
10.21  标签条（UITabBar）与标签页控制器（UITabBarController）	526
10.21.1  使用UITabBar	527
10.21.2  使用UITabBarController	528
10.21.3  在Storyboard中使用UITabBarController	531
10.22  页控件（UIPageControl）与页控制器（UIPageViewController）	533
10.22.1  UIPageControl与UIScrollView结合使用	533
10.22.2  使用UIPageViewController	537
10.23  iPad应用开发	541
10.23.1  使用iPad专用控件：UISplitViewController	542
10.23.2  使用UIPopoverController实现浮动窗口	549
10.23.3  开发同时兼容iPhone与iPad的应用	551
10.24  本章小结	555
第11章　管理iOS应用的运行	556
11.1  iOS设备尺寸和自动旋转机制	557
11.1.1  配置应用支持的方向	557
11.1.2  指定视图控制器支持的方向	559
11.2  iOS 8增强的自动布局功能	560
11.2.1  自动布局的添加方式	560
11.2.2  使用自动布局适应不同尺寸的屏幕	566
11.2.3  使用Size Class适应屏幕旋转	570
11.3  iOS应用的生命周期	574
11.3.1  应用程序的状态	575
11.3.2  应用程序启动过程	576
11.3.3  程序入口：main函数	578
11.3.4  响应中断	578
11.3.5  进入后台	580
11.3.6  返回前台运行	581
11.3.7  应用程序终止	582
11.3.8  Main Run Loop	582
11.4  本章小结	583
第12章　图形、图像与动画	584
12.1  使用UIImage和CGImage处理位图	585
12.1.1  显示动画	585
实例：蝴蝶飞舞	587
12.1.2  CGImage与CGImageRef	588
12.2  Quartz 2D绘图	588
12.2.1  Quartz 2D绘图基础：CGContextRef	588
12.2.2  绘制几何图形	591
12.2.3  点线模式	593
12.2.4  绘制文本	597
12.2.5  设置阴影	601
12.2.6  使用路径	602
实例：绘制任意多角星	606
12.2.7  绘制曲线	607
实例：使用曲线绘制多瓣花朵	608
12.2.8  在内存中绘图	609
实例：绘图板	612
12.2.9  绘制位图	617
实例：扩展UIImage的功能	617
12.3  图形变换	622
12.3.1  使用坐标变换	622
12.3.2  坐标变换与路径结合使用	623
实例：雪花飘飘	624
12.3.3  使用矩阵变换	625
12.4  控制叠加模式	628
12.5  处理填充	634
12.5.1  渐变填充	634
12.5.2  模式填充	639
12.6  使用Core Image滤镜	644
12.7  动画	652
12.7.1  Core Animation动画基础	652
12.7.2  使用CALayer	653
12.7.3  使用CATransition控制过渡动画	656
12.7.4  使用属性动画	660
12.7.5  控制移动路径	665
实例：绕圈游动的小鱼	665
12.8  本章小结	667
第13章　疯狂连连看	668
13.1  游戏简介	669
13.2  开发游戏界面	670
13.2.1  开发界面布局	670
13.2.2  开发游戏界面控件	671
13.2.3  处理方块之间的连接线	676
13.3  游戏的状态数据模型	677
13.3.1  定义数据模型	677
13.3.2  初始化游戏状态数据	678
13.4  加载界面的图片	682
13.5  实现游戏视图控制器	684
13.6  实现游戏逻辑	686
13.6.1  定义FKGameService的接口代码	686
13.6.2  实现FKGameService	687
13.6.3  获取触碰点的方块	688
13.6.4  判断两个方块是否可以相连	689
13.6.5  定义获取通道的工具方法	691
13.6.6  没有转折点的横向连接	  692
13.6.7  没有转折点的纵向连接	  693
13.6.8  有一个转折点的连接	693
13.6.9  有两个转折点的连接	696
13.6.10  找出最短距离	    702
13.7  本章小结	704
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>疯狂iOS讲义（上）（第2版）——Objective-C 2.0与iPhone/iPad应用开发基础
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS应用开发最佳实践
第1章  创建第1个iPhone应用	1
1.1  iPhone应用开发的背景	1
1.2  做好准备工作	5
1.3  下载开发工具	7
1.4  了解iOS运行环境	8
1.5  iOS应用开发的注意点	9
1.6  创建第1个Hello World iPhone应用	10
1.6.1  通过Xcode创建并运行iPhone项目	10
1.6.2  了解iPhone应用的基本运行机理	15
1.6.3  丰富你的iPhone应用	18
1.6.4  为应用添加桌面图标	21
1.6.5  关于iPhone 5应用的补充说明	24
1.6.6  老版本应用的兼容性问题	24
1.7  小结	24
第2章  Objective-C语言开发基础	25
2.1  Objective-C的Hello World程序	26
2.2  创建一个Objective-C类	29
2.2.1  通过Xcode创建Person类	29
2.2.2  对Person类的解读	32
2.2.3  类的构造方法	36
2.2.4  继承和多态	38
2.2.5  选择器（selector）	43
2.3  常用类介绍	45
2.3.1  NSString类	45
2.3.2  NSArray类	48
2.3.3  NSDictionary类	51
2.4  属性（Property）	53
2.4.1  设置属性	53
2.4.2  以Person类为例	53
2.4.3  @synthesize指令	54
2.4.4  Xcode 4.5以后版本对@synthesize指令的处理	56
2.4.5  属性特性	56
2.5  内存管理	58
2.6  类别（class category）	59
2.7  类扩展（class extension）	62
2.8  协议	63
2.8.1  声明协议	63
2.8.2  使用协议	63
2.8.3  更多协议的特性	64
2.9  小结	64
第3章  设计iPhone应用——从零开始	65
3.1  MVC架构	65
3.2  基于nib文件开发单视图交互性的应用	67
3.1.1  创建交互性应用视图	67
3.1.2  连接视图和视图控制器	72
3.1.3  创建事件处理代码	76
3.3  创建多视图交互应用	78
3.2.1  创建空应用	79
3.2.2  添加主视图	81
3.2.3  添加子视图	85
3.2.4  进一步完善应用	86
3.4  小结	91
第4章  设计iPhone应用——使用故事板	92
4.1  故事板和Segue	92
4.2  完整的MVC应用	94
4.2.1  创建视图框架	94
4.2.2  添加Unwind Segue	98
4.2.3  通过Unwind Segue传递数据	100
4.2.4  准备武侠故事模型	103
4.2.5  通过Segue传递数据	105
4.2.6  完善详情视图并运行应用	106
4.2.7  继续完善应用——动态创建控件	110
4.2.8  创建自适应文字长度的标签控件	112
4.3  容器视图（Container View）	113
4.3.1  容器视图的基本知识	113
4.3.2  容器视图的简单例子	114
4.3.3  实现子视图控制器之间的互动（一）	120
4.3.4  实现子视图控制器之间的互动（二）	122
4.4  小结	125
第5章  导航栏视图控制器和标签栏视图控制器	126
5.1  导航栏视图控制器介绍	127
5.1.1  认识导航栏视图控制器	127
5.1.2  认识Master-Detail项目模板	128
5.1.3  搭建导航栏视图控制器项目	131
5.1.4  通过代码创建导航栏视图控制器	134
5.2  标签栏视图控制器介绍	135
5.2.1  认识标签栏视图控制器	135
5.2.2  认识Tabbed Application项目模板	136
5.2.3  搭建标签栏视图控制器项目	141
5.2.4  通过代码创建标签栏视图控制器	144
5.3  集成导航栏视图控制器与标签栏视图控制器	145
5.4  小结	147
第6章  属性字符串	148
6.1  通过属性字符串格式化文本	148
6.1.1  通过属性格式配置标签文本	150
6.1.2  属性文本支持的控件	151
6.2  通过代码设置属性字符串	151
6.2.1  了解NSAttributedString类	152
6.2.2  设置字间距和字体背景色	154
6.2.3  设置阴影以及下画线效果	155
6.2.4  为字符串不同部分设置不同效果	156
6.2.5  设置段落效果	157
6.2.6  可以设置的属性字符串样式列表	160
6.3  小结	161
第7章  iOS控件
应用入门	162
7.1  iOS控件简介	162
7.2  分段控件、文本框控件、滑块控件	163
7.2.1  分段控件介绍	164
7.2.2  文本框控件介绍	166
7.2.3  滑块控件介绍	169
7.2.4  创建展示项目	171
7.2.5  在输入完成后关闭键盘（一）	176
7.2.6  在输入完成后关闭键盘（二）	177
7.2.7  点击视图退出键盘	179
7.3  Web视图和活动指示器控件	180
7.3.1  Web视图控件介绍	180
7.3.2  活动指示器控件介绍	182
7.3.3  创建展示项目	184
7.4  图像视图控件	189
7.4.1  图像视图控件介绍	190
7.4.2  创建展示项目	190
7.5  小结	193
第8章  iOS控件
应用进阶	195
8.1  进度视图、开关和计步器控件	195
8.1.1  进度视图控件介绍	195
8.1.2  开关控件介绍	197
8.1.3  计步器控件介绍	198
8.1.4  创建展示项目	199
8.2  警告视图、动作表单、活动视图控制器	202
8.2.1  警告视图介绍	203
8.2.2  警告视图示例	204
8.2.3  动作表单介绍（邮件视图控制器）	208
8.2.4  动作表单示例	210
8.2.5  活动视图控制器介绍	215
8.2.6  活动视图控制器示例	216
8.3  日期选择器（工具栏控件）	218
8.3.1  日期选择器控件介绍	218
8.3.2  创建展示项目	219
8.4  自定义选择器	226
8.5  自定义选择器控件介绍	226
8.5.1  数据源协议——UIPicker-ViewDataSource	227
8.5.2  代理协议——UIPicker-ViewDelegate	228
8.5.3  创建plist文件数据源	229
8.5.4  读取plist文件的方法	233
8.5.5  单轮选择器示例	233
8.5.6  多轮选择器示例	237
8.6  小结	241
第9章  应用及视图生命周期	242
9.1  应用的生命周期	242
9.1.1  应用的不同状态	243
9.1.2  通过代码模拟观察应用生命周期	245
9.1.3  应用程序的加载	247
9.1.4  响应中断	248
9.1.5  进入后台运行	249
9.1.6  返回前台运行	250
9.1.7  关于main函数	251
9.2  视图生命周期	252
9.2.1  视图生命周期简介	252
9.2.2  视图生命周期中的主要方法	253
9.2.3  loadView方法	253
9.2.4  与应用生命周期的互动	254
9.3  小结	256
第10章  iOS绘图和自动旋转	257
10.1  iOS绘图	257
10.1.1  视图和坐标体系	258
10.1.2  图形颜色处理	260
10.1.3  在上下文中绘制图形	261
10.1.4  手工绘图应用示例	264
10.2  自动旋转	270
10.2.1  旋转屏幕	271
10.2.2  使用自动尺寸处理旋转	273
10.2.3  通过代码方式处理旋转	276
10.3  小结	280
第11章  iOS自动布局	281
11.1  通过约束处理屏幕旋转	282
11.1.1  约束应用示例	282
11.1.2  约束应用详解	285
11.1.3  不同的约束类型——Pin	286
11.1.4  不同的约束类型——Align	290
11.1.5  视图之间约束的互相作用	293
11.2  通过代码创建约束	293
11.2.1  NSLayoutConstraint类	293
11.2.2  通过代码创建约束：指定控件位置	295
11.2.3  为控件指定高度、宽度	297
11.2.4  处理多个控件	299
11.3  可视化格式语言	302
11.3.1  constraintsWithVisual- Format:方法	302
11.3.2  可视化格式语言的具体例子	303
11.3.3  可视化格式语言的深入	304
11.4  小结	306
第12章  手势识别技术	307
12.1  自定义手势识别	307
12.2  使用自动手势识别器	309
12.2.1  自动手势识别开发原理	309
12.2.2  离散性手势与连续性手势	313
12.2.3  如何在模拟器中测试手势	315
12.2.4  识别轻扫手势	316
12.2.5  识别轻击手势	319
12.2.6  识别捏合手势	320
12.2.7  创建自定义手势识别器	323
12.3  小结	323
第13章  iOS高级控件	324
13.1  滚动视图控件	324
13.1.1  使用滚动视图示例	325
13.1.2  在滚动视图中支持图片放大和缩小	328
13.1.3  滚动查看多个图片	330
13.1.4  关于滚动视图控件的更多知识	333
13.2  页面指示器控件	334
13.2.1  页面指示器控件示例	335
13.2.2  完善代码：允许用户点击页面指示器翻页	339
13.3  表格视图	340
13.3.1  表格样式	341
13.3.2  单元格样式	342
13.3.3  表格视图元素	344
13.3.4  数据源协议UITable- ViewDataSource	346
13.3.5  代理协议UITable- ViewDelegate	348
13.3.6  表格视图示例	348
13.3.7  创建自定义的表格单元格	355
13.3.8  分段示例	364
13.3.9  索引示例	368
13.3.10  实现搜索栏	369
13.4  小结	376
第14章  Passbook	377
14.1  Passbook初览	378
14.2  通过passsource.com创建凭证	379
14.3  凭证的工作原理	382
14.4  创建第1个凭证	383
14.4.1  找到开发者团队标识（teamIdentifier）	383
14.4.2  创建凭证类型标识（passType-Identifier）	383
14.4.3  创建Hello World凭证	388
14.5  凭证文件包的构成	395
14.6  pass.json文件	396
14.6.1  顶级键的说明	397
14.6.2  次级键的说明	398
14.7  打折券凭证详解	400
14.8  登机牌凭证详解	402
14.9  通过PassKit框架操作凭证	406
14.9.1  PassKit库介绍	406
14.9.2  PassKit示例	407
14.10  小结	410
第15章  集合视图 （UICollection-View）	411
15.1  集合视图基础	412
15.1.1  数据源协议（UICollectionView-DataSource）	413
15.1.2  代理协议（UICollectionView-Delegate）	414
15.1.3  创建第1个集合视图应用	414
15.1.4  集合视图布局（UICollectionView-Layout）	422
15.1.5  认识补充视图（Supplementary View）	427
15.2  自定义集合视图单元格	429
15.3  小结	431
第16章  iOS多线程编程	432
16.1  什么是多线程	432
16.2  iOS的多线程知识	433
16.2.1  派遣队列Dispatch Queue	434
16.2.2  程序块Block	440
16.2.3  在视图中通过GCD实现异步操作	444
16.3  异步执行代码的其他方法	447
16.3.1  通过performSelector来异步执行	447
16.3.2  通过NSTimer来异步执行	449
16.4  后台运行应用	449
16.5  小结	452
第17章  数据持久化	453
17.1  通过NSUserDefaults进行数据持久化	453
17.1.1  创建持久化联系人信息应用	454
17.1.2  保存用户输入的数据	456
17.1.3  读取用户保存的数据	458
17.2  应用程序沙盒	460
17.3  通过属性列表持久化数据	463
17.4  归档对象	465
17.4.1  实现NSCoding协议	466
17.4.2  归档对象或取消归档	467
17.5  使用SQLite数据库	469
17.5.1  操作数据库的SQLite函数	469
17.5.2  使用SQLite 3的视图应用	473
17.6  使用Core Data	480
17.6.1  使用Core Data	480
17.6.2  通过代码访问数据模型	486
17.6.3  获得NSManaged- ObjectContext对象	489
17.6.4  如何插入、查询、更新以及删除数据	490
17.7  小结	493
第18章  Core Location定位和Map Kit	494
18.1  Core Location框架	494
18.1.1  位置管理器监控位置变化	496
18.1.2  位置管理器监控方向变化	497
18.1.3  使用位置管理器监控位置的例子	498
18.2  Map Kit	502
18.2.1  创建一个地图应用	502
18.2.2  自定义地图显示位置及范围	503
18.2.3  使用大头针标注地理位置	506
18.2.4  了解和使用MKAnnotationView	509
18.3  小结	513
第19章  Core Motion动作管理器	514
19.1  动作管理器类	515
19.1.1  检测加速计数据	517
19.1.2  检测旋转数据	522
19.1.3  检测组合信息	523
19.2  捕获动作事件	524
19.3  小结	524
第20章  iCloud云服务	526
20.1  了解iCloud云服务	526
20.2  云存储键/值对	529
20.3  云存储文档	532
20.3.1  子类化UIDocument	532
20.3.2  如何定位Ubiquity Container	534
20.3.3  如何通过NSMetadataQuery查询数据	535
20.3.4  文档的生命周期	536
20.4  小结	537
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS应用开发最佳实践
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS动画——核心技术与案例实战
第一卷　显示层动画
第1章　动画之旅启航：登录按钮动画效果  2
1.1　动画分析方法  3
1.2　登录按钮移动动画效果：闭包形式  5
1.3　登录按钮移动动画效果：方法形式  8
1.4　UIView视图中常见动画的属性分析  9
1.5　本章小结  11
第2章　显示层初级动画效果合集  12
2.1　UIView显示层初级动画属性一览  12
2.2　初级动画效果合集  13
2.2.1　位置动画  13
2.2.2　几何形状动画  14
2.2.3　位置+形状动画  15
2.2.4　淡入淡出动画  16
2.2.5　颜色渐变动画  17
2.2.6　缩放动画：基于UIView的transform属性  18
2.2.7　旋转动画：基于UIView的transform属性  19
2.2.8　位移动画：基于UIView的transform属性  19
2.2.9　组合动画效果  21
2.3　动画常用属性及回调方法的使用  24
2.3.1　动画常用属性的使用  24
2.3.2　动画回调方法的使用  26
2.3.3　案例：抽奖转盘旋转动画效果的简单实现  28
2.4　本章小结  30
第3章　显示层关键帧动画  31
3.1　关键帧动画实现原理  31
3.2　案例：关键帧动画之飞机降落  32
3.3　案例：关键帧动画之抽奖转盘滚动  38
3.4　本章小结  39
第4章　显示层逐帧动画  41
4.1　逐帧动画实现原理  41
4.2　基于NSTimer的逐帧动画效果  42
4.3　基于CADisplayLink的逐帧动画效果  44
4.4　基于draw方法的逐帧动画效果  45
4.5　本章小结  48
第5章　GIF动画效果  50
5.1　GIF图片初识  50
5.2　GIF有什么特点  51
5.3　GIF在iOS中的使用场景  51
5.4　GIF分解单帧图片  52
5.4.1　GIF图片分解过程  52
5.4.2　GIF图片分解代码实现  53
5.4.3　GIF图片分解最终实现效果  56
5.5　序列图像合成GIF图像  57
5.5.1　GIF图片合成思路  57
5.5.2　GIF图片合成代码实现  58
5.6　Gif图像展示  61
5.6.1　GIF图片展示思路  61
5.6.2　GIF图片展示：基于UIImageView  62
5.7　本章小结  64
第二卷　内容层动画
第6章　Core Animation:CABasicAnimation动画效果  66
6.1　UIView和CALayer的区别  66
6.2　Core Animation核心动画  67
6.3　CALayer层动画合集  68
6.3.1　位置动画  68
6.3.2　缩放动画  71
6.3.3　旋转动画  73
6.3.4　位移动画  74
6.3.5　圆角动画  74
6.3.6　边框动画  75
6.3.7　颜色渐变动画  76
6.3.8　淡入淡出动画  78
6.3.9　阴影渐变动画  79
6.4　本章小结  80
第7章　Core Animation: CAKeyframeAnimation、CAAnimation Group动画  82
7.1　CAKeyframeAnimation动画属性要点  83
7.2　CAKeyframeAnimation淡出动画效果  83
7.3　CAKeyframeAnimation任意路径动画  85
7.4　CAAnimationGroup组合动画效果  88
7.5　本章小结  90
第8章　综合案例：登录按钮动画效果  91
8.1　综合案例1：水纹按钮动画效果实现原理  91
8.2　水纹按钮动画效果具体代码实现  94
8.3　综合案例2：登录按钮动画效果实现原理  98
8.4　登录按钮动画效果代码实现  100
8.4.1　第一阶段动画  100
8.4.2　第二阶段动画  106
8.4.3　第三阶段动画  110
8.5　本章小结  112
第9章　CAEmitterCell粒子动画效果  114
9.1　iOS粒子系统概述  114
9.2　案例：粒子火焰效果  115
9.3　案例：“鬼火”火焰效果代码实现  116
9.4　案例：霓虹效果代码实现  118
9.5　本章小结  120
第10章　CoreAnimation: CAGradientLayer光波扫描动画效果  122
10.1　CAGradientLayer追本溯源  123
10.2　光波效果实现原理分析  124
10.2.1　光波方向  124
10.2.2　光波颜色梯度  126
10.2.3　光波“彗星拖尾”效果  127
10.2.4　光波扫描效果  129
10.3　案例：指纹扫描效果  130
10.4　案例：音响音量跳动效果  131
10.5　本章小结  136
第11章　CoreAnimation: CAShapeLayer打造“动态”图表效果  138
11.1　CAShapeLayer追本溯源  139
11.2　贝济埃曲线  139
11.2.1　初识贝济埃曲线  139
11.2.2　贝济埃曲线在iOS中的应用  140
11.3　绘制动态图表  145
11.3.1　动态折线动画  145
11.3.2　动态柱状图动画  147
11.4　本章小结  151
第12章　CAReplicatorLayer：图层复制效果  152
12.1　CAReplicatorLayer追本溯源  153
12.2　恒星旋转动画实现  153
12.3　音量跳动动画效果  155
12.4　本章小结  157
第三卷　3D动画
第13章  3D动画初识  159
13.1  锚点的基本概念  160
13.2  矩阵变换的基本原理  160
13.3  3D旋转效果  162
13.4  本章小结  166
第14章  Cover Flow 3D效果  167
14.1  案例：Cover Flow效果实现原理  167
14.2  案例：Cover Flow效果代码实现  168
14.3  本章小结  172
第四卷　转场动画
第15章  CoreAnimation: CATransition转场动画  174
15.1  CATransition初识  174
15.2  案例：基于CATransition的图片查看器  176
15.3  CATransition转场动画key-effect一览  179
15.4  本章小结  184
第16章  视图过渡动画  185
16.1  视图控制器过渡动画相关协议  185
16.2  视图控制器过渡动画代码实现  187
16.3  侧滑栏动画实现  190
16.4  本章小结  195
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS动画——核心技术与案例实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>ios6开发范例代码大全
第1章 应用程序攻略
1.1 设置单视图应用程序
1.2 攻略1-2：链接一个框架
1.3 攻略1-3：添加用户界面控件视图
1.4 攻略1-4：创建outlet
1.5 攻略1-5：创建动作
1.6 攻略1-6：创建类
1.7 攻略1-7：添加Info.plist属性
1.8 攻略1-8：添加资源文件
1.9 攻略1-9：使用故事板
1.9.1 故事板中包含的内容
1.9.2 设置使用故事板的应用程序
1.9.3 在故事板中添加新场景
1.9.4 添加一个表视图场景
1.9.5 添加一个详细视图
1.9.6 设置一个自定义视图控制器
1.9.7 使用单元格原型
1.10 攻略1-10：错误处理
1.10.1 创建一个错误处理框架
1.10.2 通知用户
1.10.3 实现恢复选项
1.11 攻略1-11：处理异常
1.11.1 处理异常的策略
1.11.2 搭建一个测试应用程序
1.11.3 截获未捕捉的异常
1.11.4 报告错误
1.11.5 添加按钮
1.11.6 通过电子邮件发送报告
1.11.7 最后一点完善
1.12 攻略1-12：添加简化版的应用程序
1.12.1Adding a Build Target
1.12.2 编写某个版本的代码
1.13 攻略1-13：加载启动画面
1.13.1 加载图像文件
1.13.2 设计加载画面
1.14 本章小结
第2章 布局攻略
2.1 攻略2-1使用自动布局
2.1.1 自动布局的约束
2.1.2 约束的优先级
2.1.3 添加尾随按钮
2.2 攻略2-2：自动布局编程
2.2.1 设置应用程序
2.2.2 Visual Format Language
2.2.3 添加图像视图
2.2.4 定义图像视图的约束
2.3 攻略2-3：调试自动布局
2,3.1 处理二义性的布局
2.3.2 处理不可满足性的问题
2.4 本章小结
第3章 表视图和集合视图攻略
3.1 攻略3.1 ：创建未分组的表格
3.1.1 构建一个应用程序
3.1.2 添加表示国家的模型
3.1.3 在表视图中显示数据
3.1.4 有关缓存单元格的说明
3.1.5 配置单元格
3.1.6 有关圆角的说明
3.1.7 实现辅助视图
3.1.8 增强用户交互体验
3.1.9 有关单元格视图自定义的一点说明
3.2 攻略3-2：编辑UITable View
3.2.1 UITable View的行动画
3.2.2 还有其他操作
3.3 攻略3-3： UITable View的重排序
3.4 攻略3-4：创建分组的UITable View
3.5 攻略3-5：注册自定义单元格类
3.5.1 创建一个自定义表视图单元格类
3.5.2 注册单元格类
3.6 攻略3-6：创建国旗挑选器Collection View
3.6.1 设置应用程序
3.6.2 创建数据模型
3.6.3 构建Fklg Picker
3.6.4 定义Collection View界面
3.6.5 显示国旗挑选器
3.6.6 通过自动布局将题头居中显示
3.7 本章小结
第4章 位置服务攻略
4.1 关于Core Location
4.1.1 标准与显著变化服务
4.1.2 iOS 6的新特性
4.1.3 位置服务的需求
4.2 攻略4-1：获得基本的位置信息
4.2.1 创建应用程序
4.2.2 开始与停止位置更新
4.2.3 接收位置更新
4.2.4 测试位置更新
4.3 攻略4-2：显著位置变化
4.3.1 创建应用程序
4.3.2 启用后台更新
4.3.3 添加本地通知
4.4 攻略4-3：追踪磁力计的朝向
4.4.1 关于朝向追踪
4.4.2 创建应用程序
4.4.3 开始与停止朝向更新
4.4.4 实现委托方法
4.5 攻略4-4：追踪真实的朝向
4.6 攻略4-5：区域监测
4.6.1 关于区域
4.6.2 欢迎来到巴尔的摩
4.7 攻略4-6：实现地理编码
4.7.1 实现反向地理信息编码
4.7.2 实现正向地理信息编码
4.7.3 最佳实践
4.8 本章小结
第5章 Motion攻略
5.1 攻略5-1：识别摇晃事件
5.1.1 拦截摇晃事件
5.1.2 子类化窗口
5.1.3 实现摇晃通知
5.1.4 测试摇晃事件
5.2 攻略5-2：访问原始的Core Motion数据
5.2.1 Core Motion传感器
5.2.2 创建项目
5.2.3 访问传感器数据
5.2.4 推送还是拉取
5.2.5 选择更新间隔
5.2.6 原始Motion数据的本质
5.3 攻略5-3：访问设备的Motion数据
5.3.1 设备移动类
5.3.2 创建项目
5.3.3 访问设备的Motion数据
5.3.4 设置参考帧
……
第6章 Map攻略
第7章 社交网络攻略
第8章 相机攻略
第9章 多媒体攻略
第10章 图像攻略
第11章 用户数据攻略
第12章 数据存储攻略
第13章 数据传输攻略
第13章 Game Kit攻略
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>ios6开发范例代码大全
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS 8案例开发大全
第1章 搭建开发环境实战	1
实例001 下载并安装Xcode	1
实例002 改变Xcode工程的公司名称	4
实例003 通过搜索框缩小文件范围并格式化代码	5
实例004 代码缩进和提示处理	6
实例005 设置项目快照以及恢复到快照	7
实例006 实现复杂的查找和替代工作	8
实例007 使用书签	10
实例008 实现断点调试	11
实例009 启动模拟器	12
实例010 使用第三方工具iPhone Simulator	15
第2章 界面布局实战	16
实例011 使用Interface Builder的故事板	16
实例012 设置UIView的位置和尺寸	22
实例013 隐藏指定的UIView区域	24
实例014 改变背景颜色	25
实例015 实现背景透明	27
实例016 定位屏幕中的图片	29
实例017 旋转和缩放视图	31
实例018 伸缩屏幕中的视图	34
实例019 实现视图的大小自适应	36
实例020 实现视图嵌套	38
实例021 插入或删除视图中的子元素	41
实例022 设置视图位置互换显示	42
实例023 设置视图位置互换显示	44
实例024 获得屏幕内视图的坐标	46
实例025 实现视图外观的自动调整	48
实例026 自动调整视图中的子元素	51
实例027 实现不同界面之间的跳转处理	54
实例028 通过列表实现不同界面之间的跳转	56
实例029 通过UITabBarController选项卡实现不同界面之间的跳转	58
实例030 在布局中实现一个模态对话框	60
实例031 实现仿iPhone的底部选项卡	61
实例032 实现导航条效果	64
实例033 在导航条中添加一个滑动条	65
实例034 在屏幕中显示一个工具条	66
实例035 在工具条中添加系统按钮	68
实例036 在工具条中自定义按钮（1）	70
实例037 在工具条中自定义按钮（2）	71
实例038 改变状态栏的颜色	72
第3章 iOS控件应用实战	74
实例039 使用文本、键盘和按钮	74
实例040 使用文本、键盘和按钮	77
实例041 在屏幕中显示一个指定的文本	79
实例042 设置屏幕中文本的对齐方式	79
实例043 设置屏幕中标签的颜色和文本的颜色	80
实例044 设置屏幕中显示不同字体的文本	81
实例045 自动调整屏幕中的文本大小	83
实例046 在一个UILabel控件中显示多行文本	84
实例047 设置文本的换行和省略模式	85
实例048 实现文本的阴影效果	86
实例049 高亮显示屏幕中的文本	87
实例050 定制一个文本绘制方法	88
实例051 按下按钮后触发一个事件	89
实例052 在屏幕中显示不同的按钮	90
实例053 点击按钮后改变按钮的文字	92
实例054 点击按钮后实现阴影反转	93
实例055 点击按钮时实现闪烁效果	94
实例056 在按钮中添加图像	95
实例057 调整屏幕中按钮的边间距	97
实例058 设置按钮中文本的换行和
省略格式	99
实例059 在屏幕中显示一个文本
输入框	99
实例060 设置文本输入框的边框
线样式	100
实例061 设置文本输入框的字体和
颜色	101
实例062 在文本输入框中设置一个
清空按钮	102
实例063 为文本输入框设置背景
图片	103
实例064 在文本输入框中添加
UIView元素	104
实例065 监视文本输入框的状态	105
实例066 实现一个开关效果	106
实例067 改变UISWitch文本和
颜色	108
实例068 显示具有开关状态的开关	110
实例069 在屏幕中显示一个分段
选项	112
实例070 选择一个分段卡后可以
改变屏幕的背景颜色	114
实例071 设置分段卡的显示样式	115
实例072 设置不显示分段卡的选择
状态	116
实例073 改变分段卡的显示颜色	117
实例074 选择某个选项时在此分段
卡中显示一幅图片	118
实例075 设置指定图片作为分段卡
的选项	119
实例076 修改分段卡标题的位置	119
实例077 设置某个选项不可用	120
实例078 插入\删除分段卡中的选项	121
实例079 插入\删除分段卡中的选项	122
实例080 滑动滑块时显示对应的值	128
实例081 滑动滑块控制文字的大小	129
实例082 自定义一个滑块	131
实例083 实现一个日期选择器	131
实例084 获取当前的时间	138
实例085 设置日期选择器中的时间
间隔	139
实例086 设置日期选择器框的显示
样式	140
实例087 设置日期选择器框的显示
样式	141
实例088 实现自动倒计时功能	142
实例089 使用选择器视图	143
实例090 自定义一个选择器	146
实例091 实现一个数字选择器	153
实例092 突出显示选择器中的
某一行	154
实例093 向选择器中添加UIView
子类	155
实例094 设置选择器框行和列尺寸	157
实例095 实现一个播放器的活动
指示器	158
实例096 实现一个蓝色进度条效果	160
实例097 在进度条中显示进度
百分比	162
实例098 在屏幕中实现一个检索框
效果	163
实例099 实现一个实时显示检索框
效果	165
实例100 设置检索框的背景颜色	166
实例101 在检索框中添加一个书签
按钮	167
实例102 在检索框中添加一个
范围条	169
实例103 添加或删除屏幕中的翻页
数目	170
实例104 使用滚动的方式查看屏幕
中的内容	172
实例105 使用滚动的方式查看图片	175
实例106 设置滚动条的颜色	177
实例107 将滚动条设置为分页的
形式	178
第4章 文本和表格处理实战	180
实例108 在屏幕中换行显示文本	180
实例109 在屏幕中显示可编辑的
文本	181
实例110 将屏幕中的文本实现编辑
状态和非编辑状态之间的
切换	182
实例111 设置屏幕中文本的对齐方式，
确定文本的选择范围	184
实例112 自动处理屏幕中文本的URL
地址和电话号码	187
实例113 在屏幕文本中显示密码
黑点“.”	187
实例114 自定义UITableViewCell	188
实例115 拆分表视图	192
实例116 列表显示18条数据	194
实例117 分段显示列表中的数据	195
实例118 删除单元格	197
实例119 添加新的单元格	198
实例120 移动单元格的位置	200
实例121 实现单元格的编辑模式和
非编辑模式的切换	201
实例122 编辑分组单元格（1）	202
实例123 编辑分组单元格（2）	204
实例124 设置单元格的尺寸和颜色	205
实例125 在单元格中添加图片	206
实例126 为单元格中的图片
添加注释	207
实例127 在单元格中添加附件	208
实例128 在单元格中添加
自定义附件	209
实例129 设置只在编辑模式下
显示附件	210
实例130 向单元格中添加其他控件	211
实例131 自定义单元格的背景	213
实例132 设置被选中单元格的
背景颜色	214
实例133 自动滚动到被选中
单元格	215
实例134 在单元格中自动排列指定的
数据	216
实例135 为每行单元格设置展开
子项	218
实例136 实现气泡样式的聊天对话
框效果	220
实例137 在搜索框中实现下
拉列表效果	222
实例138 实现一个高度自动适应
性的输入框	223
第5章 屏幕显示实战	226
实例139 在屏幕中显示一段文本	226
实例140 绘制字符串	227
实例141 设置屏幕中文本的横向
对齐方式	228
实例142 缩小文本并设置纵向对齐
方式	229
实例143 设置屏幕中的字符串
自动缩小	231
实例144 获取绘制文本所需要的
空间范围	232
实例145 显示系统中的字体	233
实例146 列表显示系统中所有的
字体	234
实例147 在屏幕中显示不同的
颜色	236
实例148 使用系统颜色	238
实例149 在屏幕中自定义颜色	239
实例150 使用背景图片创建
特殊背景	240
实例151 在屏幕中绘制指定颜色的
文字	241
实例152 在屏幕中显示图像	242
实例153 在屏幕中绘制一幅图像	243
实例154 在屏幕中绘图时设置
透明度	244
实例155 限制图像的缩放区域	246
实例156 使用UIImageView实现动
画效果	246
实例157 在屏幕中实现日历效果	248
实例158 在屏幕中自定义一个
导航条	254
实例159 在屏幕中实现仿iPhone
锁定界面效果	255
第6章 图形、图像和动画实战	257
实例160 在屏幕中实现一个简单的
动画效果	257
实例161 设置在屏幕中的动画
延迟	258
实例162 设置在屏幕中动画的
透明度	258
实例163 设置屏幕中的动画实现
放大/缩小/旋转效果	260
实例164 检测屏幕中动画的状态	261
实例165 在屏幕中实现过渡动画
效果	262
实例166 联合使用滑块和步进控件
实现动画效果	264
实例167 实现全屏显示效果	268
实例168 实现渐变样式的全屏
效果切换	270
实例169 设置屏幕中的元素随着
设备旋转而自动适应	271
实例170 设置界面旋转时自动调整
图像尺寸	272
实例171 定制屏幕中的旋转图像	273
实例172 同时实现屏幕自适应功能
和全屏功能	275
实例173 创建可旋转和调整大小的
界面	276
实例174 屏幕旋转时调整控件的
框架	279
实例175 屏幕旋转时切换视图	284
实例176 实现一个图片浏览工具	287
实例177 实现“烟花烟花满天飞”
效果	289
实例178 实现“漫天飞雪”效果	291
实例179 在屏幕中绘制一个三角形	293
实例180 在屏幕中实现颜色选择器/
调色板功能	295
实例181 在屏幕中实现滑动颜色
选择器/调色板功能	297
实例182 在屏幕中实现网格化视图
效果	300
第7章 多媒体应用实战	304
实例183 使用MediaPlayer Framework
框架播放视频	304
实例184 使用Core Image框架
处理照片	306
实例185 创建一个多功能播放器	308
实例186 使用系统内的相册	320
实例187 实现录制视频功能	322
实例188 设置屏幕中视频的画面	324
实例189 剪辑系统内的视频	326
实例190 开发一个音频播放器	328
实例191 在屏幕中实现一个电子琴
效果	329
实例192 在屏幕中实现一个DJ
混音器	331
实例193 在屏幕中实现一个音乐
选择器	333
实例194 在屏幕中听声音	336
实例195 播放本地的视频文件	337
实例196 在播放界面中叠加视频	339
第8章 互联网应用实战	342
实例197 使用Web视图获取网络
信息	342
实例198 在屏幕中显示指定的
网页	350
实例199 控制屏幕中的网页	351
实例200 在网页中加载显示PDF、Word和JPEG图片	353
实例201 在网页中加载HTML
代码	355
实例202 在网页中实现触摸处理	356
实例203 在屏幕中显示CSDN
主页	359
实例204 一个简单的网页浏览器	361
实例205 下载并显示远程URL地址
的JPEG图片	364
实例206 解析指定的XML文件	365
实例207 实时检测Wi-Fi状况	368
实例208 断点续传下载后实现
播放	372
第9章 地图定位应用实战	379
实例209 获得当前所在位置和苹果
公司总部的距离	379
实例210 使用磁性指南针	383
实例211 在屏幕中实现一个定位
系统	388
实例212 在屏幕中使用谷歌地图	391
实例213 在收集地图中实现定位和
位置标示	396
实例214 在地图中实现标注	399
实例215 在地图中灵活标注	404
实例216 实现复杂的地图标注	407
第10章 传感器、触摸和交互	416
实例217 实现一个可触摸识别
程序	416
实例218 触摸按钮	423
实例219 同时滑动两个滑块	424
实例220 触摸屏幕检测	425
实例221 触摸屏幕中的文字标签	426
实例222 演示一次触摸和两次
触摸	427
实例223 演示3次触摸	428
实例224 拖曳方式移动屏幕中的
图片	429
实例225 可以检测上、下、左、右
4个方向的触摸	431
实例226 检测触摸滑动的方向	433
实例227 实现屏幕的多点触摸	434
实例228 检测双指滑动	435
实例229 通过触摸方式放大或缩小
屏幕中的图片	436
实例230 通过触摸方式放大或缩小
屏幕中的图片	437
实例231 使用加速传感器	438
实例232 触摸屏幕后插入一幅
图片	441
实例233 触摸后实现开花效果	442
实例234 使用轻扫手势触摸	443
实例235 双指触摸放大或缩小屏幕
中图片	444
实例236 自定义触摸手势删除屏幕
中的图片	445
实例237 触摸屏幕时发出声音	447
第11章 和设备之间的操作实战	449
实例238 在屏幕中添加标记	449
实例239 调用外部程序	450
实例240 使用接近传感器	451
实例241 获取电池的状态	453
实例242 获取系统信息	454
实例243 获取设备的终端识别符	455
实例244 设置一个复制菜单	456
实例245 复制/剪切/粘贴屏幕中的
图片	458
实例246 在粘贴板中保存自定
义类	459
实例247 获取电池的详细信息	460
实例248 获取iPhone的硬件版本
以及系统信息	464
第12章 游戏应用实战	467
实例249 实现一个连连看游戏	467
实例250 实现一个移动老虎机
游戏	485
实例251 实现一个移动打砖块
游戏	488
第13章 移动Web实战	495
实例252 实现页眉定位	495
实例253 在页眉中使用按钮	497
实例254 在页眉中使用分段控件	498
实例255 在iOS网页中使用页脚	500
实例256 在iOS系统中使用工
具栏	501
实例257 使用带有标准图标的标
签栏	503
实例258 在iOS中使用链接按钮	504
实例259 在iOS中使用分组按钮	505
实例260 在iOS中创建并使用动态
按钮	507
实例261 在iOS中使用表单	510
实例262 在iOS中使用选择菜单	511
实例263 在iOS中使用单选按钮	512
实例264 在iOS中水平放置复
选框	513
实例265 在iOS中使用列表	515
实例266 在iOS中使用两列表格	516
实例267 在iOS中实现可折叠内容
块效果	517
实例268 搭建PhoneGap开发
环境	519
实例269 在iOS平台创建基于
PhoneGap的程序	521
实例270 使用通知API	522
实例271 使用确认API	524
第14章 Swift实战	526
实例272 使用Xcode创建Swift
程序	526
实例273 在界面中实现按钮的
交互	528
实例274 使用UITextField控件	531
实例275 使用文本视图控件	533
实例276 使用UILabel控件	534
实例277 开发一个方块游戏	537
实例278 使用滑块（UISlider）
控件	550
实例279 使用图像视图（UIImage
View）控件	551
实例280 使用开关（UISwitch）
控件	553
实例281 使用分段控件	555
实例282 动态控制表视图中的列表
条目	556
实例283 动态添加列表	559
实例284 实现一个新闻阅读器	562
实例285 实现一个MP3播放器	566
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS 8案例开发大全
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS编程基础：Swift、Xcode和Cocoa入门指南
前言 1
第一部分 语言
第1章 Swift架构纵览 11
1.1 基础 11
1.2 万物皆对象 12
1.3 对象类型的3种风格 14
1.4 变量 14
1.5 函数 15
1.6 Swift文件的结构 16
1.7 作用域与生命周期 19
1.8 对象成员 20
1.9 命名空间 20
1.10 模块 21
1.11 实例 22
1.12 为何使用实例 24
1.13 self 26
1.14 隐私 27
1.15 设计 29
1.15.1 对象类型与API 29
1.15.2 实例创建、作用域与生命周期 31
1.15.3 小结 32
第2章 函数 34
2.1 函数参数与返回值 34
2.1.1 Void返回类型与参数 37
2.1.2 函数签名 38
2.2 外部参数名 38
2.3 重载 41
2.4 默认参数值 42
2.5 可变参数 43
2.6 可忽略参数 44
2.7 可修改参数 44
2.8 函数中的函数 48
2.9 递归 49
2.10 将函数作为值 50
2.11 匿名函数 53
2.12 定义与调用 57
2.13 闭包 58
2.13.1 闭包是如何改善代码的 59
2.13.2 返回函数的函数 61
2.13.3 使用闭包设置捕获变量 64
2.13.4 使用闭包保存捕获的环境 64
2.14 柯里化函数 66
第3章 变量与简单类型 68
3.1 变量作用域与生命周期 68
3.2 变量声明 69
3.3 计算初始化器 72
3.4 计算变量 73
3.5 setter观察者 76
3.6 延迟初始化 77
3.7 内建简单类型 79
3.7.1 Bool 80
3.7.2 数字 81
3.7.3 String 88
3.7.4 Character 93
3.7.5 Range 96
3.7.6 元组 98
3.7.7 Optional 102
第4章 对象类型 114
4.1 对象类型声明与特性 114
4.1.1 初始化器 115
4.1.2 属性 122
4.1.3 方法 125
4.1.4 下标 127
4.1.5 嵌套对象类型 128
4.1.6 实例引用 129
4.2 枚举 131
4.2.1 带有固定值的Case 132
4.2.2 带有类型值的Case 133
4.2.3 枚举初始化器 134
4.2.4 枚举属性 136
4.2.5 枚举方法 137
4.2.6 为何使用枚举 138
4.3 结构体 139
4.3.1 结构体初始化器、属性与方法 139
4.3.2 将结构体作为命名空间 140
4.4 类 141
4.4.1 值类型与引用类型 142
4.4.2 子类与父类 146
4.4.3 类初始化器 151
4.4.4 类析构器 159
4.4.5 类属性与方法 159
4.5 多态 161
4.6 类型转换 164
4.7 类型引用 168
4.8 协议 172
4.8.1 为何使用协议 174
4.8.2 协议类型测试与转换 176
4.8.3 声明协议 177
4.8.4 可选协议成员 178
4.8.5 类协议 180
4.8.6 隐式必备初始化器 180
4.8.7 字面值转换 182
4.9 泛型 183
4.9.1 泛型声明 185
4.9.2 类型约束 186
4.9.3 显式特化 189
4.9.4 关联类型链 190
4.9.5 附加约束 192
4.10 扩展 196
4.10.1 扩展对象类型 196
4.10.2 扩展协议 199
4.10.3 扩展泛型 202
4.11 保护类型 203
4.11.1 AnyObject 203
4.11.2 AnyClass 206
4.11.3 Any 207
4.12 集合类型 208
4.12.1 Array 208
4.12.2 Dictionary 222
4.12.3 Set 227
第5章 流程控制与其他 232
5.1 流程控制 232
5.1.1 分支 233
5.1.2 循环 245
5.1.3 跳转 250
5.2 运算符 261
5.3 隐私性 264
5.3.1 Private声明 265
5.3.2 Public声明 267
5.3.3 隐私性规则 267
5.4 内省 267
5.5 内存管理 269
5.5.1 弱引用 270
5.5.2 无主引用 272
5.5.3 匿名函数中的弱引用与无主引用 273
5.5.4 协议类型引用的内存管理 275
第二部分 IDE
第6章 Xcode项目剖析 279
6.1 新建项目 279
6.2 项目窗口 281
6.2.1 导航窗格 282
6.2.2 辅助窗格 288
6.2.3 编辑器 289
6.3 项目文件及其依赖 291
6.4 目标 293
6.4.1 构建阶段 294
6.4.2 构建设置 296
6.4.3 配置 297
6.4.4 方案与目标 298
6.5 从项目到运行应用 300
6.5.1 构建设置 303
6.5.2 属性列表设置 303
6.5.3 nib文件 304
6.5.4 其他资源 305
6.5.5 代码文件与应用启动过程 307
6.5.6 框架与SDK 312
6.6 对项目内容进行重命名 314
第7章 nib管理 316
7.1 nib编辑器界面概览 317
7.1.1 文档大纲 318
7.1.2 画布 321
7.1.3 查看器与库 323
7.2 nib加载 324
7.2.1 何时加载nib 325
7.2.2 手工加载nib 326
7.3 连接 328
7.3.1 插座变量 328
7.3.2 nib拥有者 330
7.3.3 自动配置nib 333
7.3.4 误配置的插座变量 333
7.3.5 删除插座变量 335
7.3.6 创建插座变量的其他方式 335
7.3.7 插座变量集合 338
7.3.8 动作连接 339
7.3.9 创建动作的其他方式 340
7.3.10 误配置的动作 342
7.3.11 nib之间的连接——不行！ 342
7.4 nib实例的其他配置 343
第8章 文档 346
8.1 文档窗口 346
8.2 类文档页面 349
8.3 示例代码 351
8.4 快速帮助 352
8.5 符号 353
8.6 头文件 354
8.7 互联网资源 355
第9章 项目的生命周期 356
9.1 设备架构与条件代码 356
9.1.1 向后兼容 357
9.1.2 设备类型 359
9.2 版本控制 360
9.3 编辑与代码导航 362
9.3.1 自动补令 363
9.3.2 代码片段 364
9.3.3 Fix-it与实时语法检查 365
9.3.4 导航 366
9.3.5 查找 368
9.4 在模拟器中运行 369
9.5 调试 370
9.5.1 原始调试 370
9.5.2 Xcode调试器 372
9.6 测试 378
9.7 清理 383
9.8 在设备中运行 384
9.8.1 在没有开发者计划成员资格的情况下运行 386
9.8.2 获取开发者计划成员资格 387
9.8.3 获取证书 387
9.8.4 获取开发配置文件 389
9.8.5 运行应用 390
9.8.6 配置文件与设备管理 390
9.9 分析 391
9.9.1 仪表盘 391
9.9.2 Instruments 392
9.10 本地化 394
9.10.1 本地化Info.plist 396
9.10.2 本地化nib文件 398
9.10.3 本地化代码字符串 399
9.10.4 使用XML文件进行本地化 401
9.11 归档与发布 403
9.12 Ad Hoc发布 405
9.13 最后的准备 406
9.13.1 应用图标 407
9.13.2 其他图标 408
9.13.3 启动图片 408
9.13.4 屏幕截图与视频预览 409
9.13.5 属性列表设置 410
9.14 向App Store提交应用 411
第三部分 Cocoa
第10章 Cocoa类 417
10.1 子类化 417
10.2 类别与扩展 420
10.2.1 Swift如何使用扩展 420
10.2.2 你应该如何使用扩展 421
10.2.3 Cocoa如何使用类别 421
10.3 协议 423
10.3.1 非正式协议 425
10.3.2 可选方法 425
10.4 Foundation类精讲 427
10.4.1 常用的结构体与常量 427
10.4.2 NSString及相关类 428
10.4.3 NSDate及相关类 431
10.4.4 NSNumber 433
10.4.5 NSValue 434
10.4.6 NSData 435
10.4.7 相等与比较 435
10.4.8 NSIndexSet 437
10.4.9 NSArray与NSMutableArray 438
10.4.10 NSDictionary与NSMutableDictionary 440
10.4.11 NSSet及相关类 440
10.4.12 NSNull 442
10.4.13 不变与可变 442
10.4.14 属性列表 443
10.5 访问器、属性与键值编码 443
10.5.1 Swift访问器 445
10.5.2 键值编码 446
10.5.3 键值编码的使用 447
10.5.4 KVC与插座变量 448
10.5.5 键路径 449
10.5.6 数组访问器 450
10.6 NSObject揭秘 450
第11章 Cocoa事件 453
11.1 为何使用事件 453
11.2 子类化 454
11.3 通知 455
11.3.1 接收通知 456
11.3.2 取消注册 458
11.3.3 发布通知 459
11.3.4 NSTimer 460
11.4 委托 461
11.4.1 Cocoa委托 461
11.4.2 实现委托 463
11.5 数据源 465
11.6 动作 465
11.7 响应器链 468
11.7.1 推迟职责 469
11.7.2 Nil-Targeted动作 470
11.8 键值观测 471
11.9 事件泥潭 475
11.10 延迟执行 477
第12章 内存管理 480
12.1 Cocoa内存管理的原理 480
12.2 Cocoa内存管理的原则 481
12.3 ARC及其作用 482
12.4 Cocoa对象管理内存的方式 483
12.5 自动释放池 484
12.6 实例属性的内存管理 486
12.7 保持循环与弱引用 487
12.8 值得注意的内存管理情况 488
12.9 nib加载与内存管理 492
12.10 CFTypeRefs的内存管理 493
12.11 属性的内存管理策略 495
12.12 调试内存管理的错误 497
第13章 对象间通信 499
13.1 实例化可见性 500
13.2 关系可见性 502
13.3 全局可见性 503
13.4 通知与KVO 504
13.5 模型－视图－控制器 505
附录A C、Objective-C与Swift 507
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS编程基础：Swift、Xcode和Cocoa入门指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>《iOS实战：苹果“生态圈”编程卷（Swift版）》
第1章准备开始
1．1本书结构
1．2本书中的约定
1．2．1实例代码约定
1．2．2图示约定
1．2．3图中手势
1．2．4方法命名约定
1．2．5构造器命名约定
第2章苹果网络
2．1网络结构
2．1．1客户端服务器结构网络
2．1．2对等结构网络
2．2基于Socket的C/S结构网络通信
2．2．1Socket概念
2．2．2Socket编程
2．2．3实例： CFStream实现TCP Socket服务器端
2．2．4实例： NSStream实现TCP Socket客户端
2．3Bonjour服务发现
2．3．1发布服务
2．3．2解析服务
2．3．3查找服务
2．3．4实例： 基于服务发现的Socket通信服务器端
2．3．5实例： 基于服务发现的Socket通信客户端
2．4对等结构网络
2．4．1使用Multipeer Connectivity开发对等结构网络应用
2．4．2实例： P2PGame游戏
本章小结
第3章Core Data数据持久化技术
3．1对象关系映射
3．2Core Data堆栈
3．3建模和生成实体
3．3．1建模
3．3．2生成实体
3．4实例： 采用Core Data实现MyNotes应用
3．4．1采用Core Data分层架构设计
3．4．2查询数据
3．4．3修改数据
本章小结
第4章iCloud编程
4．1苹果云服务——iCloud
4．2键值数据存储
4．2．1键值数据存储编程
4．2．2实例： iCloud键值数据存储
4．3文档存储
4．3．1iCloud存储运行过程
4．3．2实例： iCloud文档存储编程
4．4iCloud Core Data技术
4．4．1实例： iCloud Core Data实现MyNotes应用
4．4．2配置Xcode工程
4．4．3修改持久化存储协调者
4．4．4修改被管理的对象上下文
4．4．5合并iCloud数据
4．4．6更新UI
4．5CloudKit存储编程
4．5．1CloudKit术语
4．5．2iCloud Dashboard
4．5．3实例： CloudKit实现MyNotes应用
本章小结
第5章推送通知
5．1苹果中究竟有多少个“通知”
5．1．1广播通知
5．1．2本地通知
5．1．3推送通知
5．2配置推送通知
5．2．1证书签名请求
5．2．2创建App ID
5．2．3配置App ID支持推送通知
5．2．4生成APNS的SSL证书
5．2．5下载SSL证书
5．2．6为SSL证书导出p12文件
5．3iOS客户端编程
5．3．1代码实现
5．3．2可选择的推送通知
5．4推送服务端编程
5．4．1使用PHP实现推送服务
5．4．2使用Java推送服务
本章小结
第6章社交网络编程
6．1苹果的社交网络
6．1．1设置账户信息
6．1．2社交网络编程API
6．2使用iOS标准界面编写客户端
6．2．1撰写视图控制器SLComposeViewController
6．2．2实例： 新浪微博客户端
6．3编写自己的社交网络客户端
6．3．1编写社交网络客户端应用程序流程
6．3．2实例： 编写新浪微博客户端
本章小结
第7章报刊杂志——Newsstand应用编程
7．1报刊杂志应用
7．2报刊杂志应用编程
7．2．1配置报刊杂志应用
7．2．2使用Newsstand Kit API
7．3实例： 报刊杂志应用
7．3．1实例设计原型
7．3．2实例设计类图
7．3．3初始化杂志界面
7．3．4主动式下载资源
7．3．5后台下载资源
7．3．6断点续传
7．3．7读取杂志内容
本章小结
第8章应用内购买
8.1应用内购买实例设计
8.2搭建应用内购买开发环境
8.2.1添加测试用户
8.2.2创建App ID
8.2.3添加空白应用IAPDemo
8.2.4为IAPDemo应用添加购买项目
8.3内置产品类型应用内购买
8.3.1创建工程
8.3.2初始化处理
8.3.3获得产品信息
8.3.4处理交易结果
8.3.5恢复交易
8.3.6测试应用内购买
8.4服务器产品类型应用内购买
8.4.1工作流程
8.4.2应用内购买iOS客户端
8.4.3PHP服务器端实现
本章小结
第9章Passbook开发
9.1Passbook与Pass
9.1.1Pass的5种风格
9.1.2Pass的内部结构
9.2设计Pass
9.2.1pass.json文件结构
9.2.2Pass类型和字段
9.2.3二维条形码
9.2.4位置与时间
9.2.5本地化
9.2.6图标和图片的使用
9.3创建Pass
9.3.1创建Pass证书
9.3.2数字签名与打包Pass文件
9.4发布Pass
9.4.1Email发布
9.4.2Web网站发布
9.5Pass Kit编程
9.5.1实例： MyPass实例设计与说明
9.5.2配置Xcode工程
9.5.3访问Passbook
9.5.4添加与替换Pass
9.5.5查看Pass详细内容和删除Pass
本章小结
第10章智能家居与HomeKit编程
10.1苹果配件开发
10.2HomeKit智能家居平台
10.3HomeKit开发框架
10.3.1HomeKit术语
10.3.2HomeKitAPI
10.4HomeKit编程
10.4.1实例： Philips Light bulb控制设计与说明
10.4.2配置Xcode工程
10.4.3故事板设计实现
10.4.4创建家庭和房间
10.4.5配件查找和控制
10.4.6实例测试
本章小结
第11章Handoff编程
11.1Handoff技术
11.1.1使用Handoff的要求
11.1.2设置Handoff
11.1.3Handoff工作原理
11.2Handoff编程
11.2.1Handoff API
11.2.2Handoff编程的一般流程
11.3实例： 灯泡控制器
11.3.1实例描述
11.3.2故事板设计实现
11.3.3代码实现
本章小结
第12章定位
12.1获得用户的位置
12.1.1定位服务编程
12.1.2实例： 定位服务
12.1.3距离过滤器和精度
12.1.4启动和停止定位服务
12.1.5获得位置信息
12.1.6关于定位服务的测试
12.2地理信息编码与反编码
12.2.1地理信息反编码
12.2.2实例： 地理信息反编码
12.2.3地理信息编码查询
12.2.4实例： 地理信息编码查询
12.3微定位技术
12.3.1地理围栏
12.3.2iBeacon技术
12.3.3实例： iBeacon技术实现微定位
本章小结
第13章地图应用开发
13.1使用iOS苹果地图
13.1.1显示地图
13.1.2添加标注
13.1.3跟踪用户位置变化
13.2使用程序外地图
本章小结
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>《iOS实战：苹果“生态圈”编程卷（Swift版）》
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Cocos2D应用开发实践指南
《cocos2d应用开发实践指南：利用cocos2d、box2d和chipmunk开发ios游戏》
本书赞誉
译者序
前言
第一部分　cocos2d初接触
第1章　你好，cocos2d	1
1.1　下载和安装cocos2d	2
1.1.1　下载cocos2d	2
1.1.2　安装cocos2d模板	3
1.2　创建你的第一个cocos2d应用helloworld	3
1.2.1　查看cocos2d模板	4
1.2.2　构建cocos2d helloworld项目	4
1.2.3　使helloworld更上一层楼	6
1.2.4　添加移动	7
1.3　为更好奇的读者：理解cocos2d helloworld	8
1.3.1　场景和节点	8
1.3.2　开始	10
1.3.3　进一步探索cocos2d源代码	14
1.4　安装cchelloworld到iphone或ipad上	15
1.4.1　让xcode为你做所有事情	16
.1.4.2　为iphone或ipad构建应用	17
1.5　小结	17
1.6　习题	17
第2章　你好，space viking	18
2.1　创建space viking项目	18
2.2　创建space viking类对象	19
2.3　创建背景层	20
2.4　gameplayer层：把维京海盗ole加入游戏中	23
2.5　gamescene类：把层与场景连接起来	25
2.6　cocos2d director	26
2.7　添加运动	27
2.7.1　导入joystick类	28
2.7.2　添加joystick和按键	28
2.7.3　将joystick运动应用于维京海盗ole	31
2.8　纹理图集	35
2.8.1　纹理和纹理图集的技术细节	36
2.8.2　创建场景1纹理图集	38
2.8.3　添加场景1纹理图集到space viking	41
2.9　为更好奇的读者：测试ccspritebatchnode	41
2.10　在iphone 3g和老旧设备上调校性能	43
2.11　小结	43
2.12　习题	43
第3章　cocos2d动画和动作概述	45
3.1　cocos2d中的动画	45
3.2　space viking设计基础	49
3.3　cocos2d动作和动画基础	52
3.4　使用属性列表文件存储动画数据	53
3.5　组织、常量和通用协议	55
3.5.1　创建常量文件	56
3.5.2　通用协议文件	57
3.6　gameobject和gamecharacter类	59
3.6.1　创建gameobject	59
3.6.2　创建gamecharacter类	64
3.7　小结	66
3.8　习题	66
第4章　简单碰撞检测和第一个敌人	67
4.1　创建radardish和viking类	67
4.1.1　创建radardish类	67
4.1.2　创建viking类	72
4.2　最终步骤	86
4.3　小结	92
4.4　习题	92
第二部分　更多敌人和更多乐趣
第5章　更多动作、特效和cocos2d调度器	93
5.1　道具	94
5.1.1　mallet道具	94
5.1.2　health道具	96
5.1.3　空间货运飞船	98
5.2　敌人机器人	100
5.3　添加phaserbullet	111
5.4　gameplaylayer和viking更新	114
5.5　为更好奇的读者：cocos2d中的特效	118
5.5.1　space viking中有趣的特效	118
5.5.2　运行effectstest	120
5.5.3　将精灵和对象恢复正常	120
5.6　小结	121
5.7　习题	121
第6章　文字、字体和书面语	122
6.1　cclabelttf类	122
6.2　理解锚点和对齐	123
6.3　cclabelbmfont	125
6.4　使用glyph designer字体设计器	125
6.5　使用hiero字体构建工具	126
6.6　为更好奇的读者：实时调试	129
6.6.1　更新enemyrobot	129
6.6.2　更新gameplaylayer	132
6.6.3　文字调试器的其他应用	133
6.7　小结	133
6.8　习题	133
第三部分　从关卡到游戏
第7章　主菜单、关卡完成和致谢场景	135
7.1　cocos2d中的场景	135
7.2　gamemanager概述	136
7.3　cocos2d中的菜单	144
7.4　场景组织与图像	144
7.5　创建主菜单	146
7.5.1　创建mainmenuscene	146
7.5.2　mainmenulayer类	147
7.6　其他菜单和gameplaylayer	153
7.6.1　导入intro、levelcomplete、credits和options场景及层	153
7.6.2　gameplaylayer	153
7.6.3　修改spacevikingapp-delegate类	155
7.7　为更好奇的读者：introlayer类和levelcomplete类	156
7.8　小结	157
7.9　习题	157
第8章　添加音效	158
8.1　cocosdenshion概述	158
8.2　导入并设置音频文件	158
8.2.1　为space viking添加音频	159
8.2.2　音频常量	159
8.3　同步异步加载音频的比较	161
8.3.1　同步加载音频	161
8.3.2　异步加载音频	163
8.3.3　添加音频到gamemanager	163
8.4　添加soundengine到gameobject	174
8.5　为enemyrobot添加声音	177
8.6　为ole添加音效	180
8.7　为菜单场景添加音乐	185
8.7.1　为gameplay添加音乐	185
8.7.2　为mainmenu添加音乐	185
8.8　为更好奇的读者：如果你需要更多音频控制	185
8.9　小结	186
8.10　习题	186
第9章　当世界变得更大：添加滚动	187
9.1　为更广阔的世界添加逻辑	188
9.2　创建更广阔的世界	190
9.2.1　创建第2个游戏场景	191
9.2.2　创建滚动层	197
9.3　与视差层一起滚动	203
9.4　无限制滚动	206
9.4.1　创建滚动层	206
9.4.2　创建平台场景	214
9.5　瓷片地图	216
9.5.1　安装tiled工具	217
9.5.2　创建瓷片地图	218
9.5.3　cocos2d压缩tilemap类	220
9.5.4　添加tilemap到parallaxnode	222
9.6　小结	224
9.7　习题	225
第四部分　物 理 引 擎
第10章　基础游戏物理学：用box2d增加现实性	227
10.1　开始	227
10.1.1　关于死亡的疯狂梦想	229
10.1.2　创建新场景	229
10.1.3　添加box2d文件到你的项目	231
10.1.4　box2d单位	235
10.2　你好，box2d	236
10.2.1　创建box2d对象	237
10.2.2　box2d调试绘制	240
10.2.3　整合所有元素	241
10.2.4　创建地面	243
10.3　基础box2d交互和装饰	245
10.3.1　拖动对象	247
10.3.2　质量、密度、摩擦力和弹性	251
10.3.3　用精灵装饰box2d形体	254
10.4　制作一个box2d解谜游戏	261
10.5　小结	271
10.6　习题	271
第11章　中级游戏物理学：建模、竞速和跨越	272
11.1　开始	272
11.1.1　添加资源文件	272
11.1.2　创建基本的box2d场景	273
11.2　用box2d创建一个小车	283
11.2.1　用box2d创建一个定制图形	284
11.2.2　使用vertex helper工具	285
11.2.3　用box2d旋转关节添加轮子	288
11.3　让小车移动和跳跃	291
11.3.1　利用加速计使小车移动	292
11.3.2　让它可滚动	294
11.3.3　力和冲量	302
11.3.4　固定倾卸台	302
11.3.5　让小车跳跃	303
11.3.6　更灵敏的转向	306
11.4　小结	307
11.5　习题	307
第12章　高级游戏物理学：更真实的物体	308
12.1　关节和人偶：带ole回到场景	308
12.1.1　限制旋转关节	309
12.1.2　使用柱状关节	310
12.1.3　如何在恰当地点创建多个形体和关节	311
12.1.4　添加ole：实现	313
12.2　添加障碍物和桥梁	318
12.2.1　添加桥梁	318
12.2.2　添加尖刺	321
12.2.3　添加改良的主循环	325
12.3　关底战斗	326
12.3.1　危险的挖掘机	334
12.3.2　最后一击：添加通关后电影序幕	340
12.4　小结	344
12.5　习题	344
第13章　chipmunk物理引擎（不需要alvin）	345
13.1　chipmunk引擎是什么	345
13.2　chipmunk引擎入门	347
13.2.1　添加chipmunk引擎到你的项目中	351
13.2.2　创建基本的chipmunk引擎场景	354
13.3　添加精灵并使它们移动	361
13.3.1　通过直接设置速度跳跃	366
13.3.2　通过设置表面速度移动地面	367
13.3.3　地面碰撞检测	367
13.3.4　chipmunk引擎裁判器和法线	368
13.3.5　碰撞检测实现	368
13.3.6　移动和跳跃实现	372
13.4　chipmunk引擎和约束	376
13.4.1　旋转平台	378
13.4.2　枢轴、弹簧和普通平台	380
13.5　伟大的逃脱	385
13.5.1　跟随ole	385
13.5.2　布局平台	387
13.5.3　ole动画序列	387
13.5.4　音乐和音效	391
13.5.5　添加背景	392
13.5.6　添加赢/输条件限制	393
13.6　小结	394
13.7　习题	394
第五部分　粒子系统、游戏中心和性能
第14章　粒子系统：创建火焰、雪花、冰和更多	395
14.1　内置粒子系统	396
14.1.1　运行内置粒子系统	396
14.1.2　在沙漠中降雪	397
14.2　粒子设计器入门	398
14.3　为space viking创建并添加粒子系统	401
14.4　小结	406
14.5　习题	406
第15章　游戏中心的成就系统和高分榜	407
15.1　什么是游戏中心	407
15.2　为你的应用启用游戏中心	409
15.2.1　获取ios开发者账号	409
15.2.2　为应用创建一个应用程序id	409
15.2.3　在itunes里注册你的应用	412
15.2.4　启用游戏中心支持	415
15.3　游戏中心身份验证	416
15.3.1　确定游戏中心可用	416
15.3.2　尝试给玩家进行验证	416
15.3.3　如果验证状态发生变化则告知	417
15.3.4　实现	418
15.4　配置成就系统	423
15.4.1　添加成就系统到itunesconnect	423
15.4.2　成就系统如何工作	425
15.5　实现成就系统	426
15.5.1　创建游戏状态类	426
15.5.2　为加载和保存数据创建帮助函数	429
15.5.3　修改gchelper以发送成就数据	431
15.5.4　在space viking中使用gamestate和gchelper	436
15.5.5　在应用中显示成就	440
15.6　设置并实现高分榜	442
15.6.1　在itunes connect里设置高分榜	442
15.6.2　高分榜的工作原理	443
15.6.3　实现高分榜	444
15.6.4　在游戏中显示高分榜	445
15.7　小结	448
15.8　习题	448
第16章　性能优化	449
16.1　ccsprite与ccspritebatchnode比较	449
16.1.1　测试性能差别	453
16.1.2　对纹理和纹理图集的建议	453
16.2　复用ccsprite	455
16.3　cocos2d分析器	457
16.4　用instruments发现性能瓶颈	459
16.4.1　时间分析器	460
16.4.2　opengl driver instrument	461
16.5　小结	464
16.6　习题	464
第17章　结束语	465
17.1　展望未来	466
17.2　android及其他平台	466
17.3　最后的思考	467
附录　cocos2d的主要类	468
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Cocos2D应用开发实践指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>音视频开发进阶指南:基于Android与iOS平台的实践
推荐序一
推荐序二
前言
第1章　音视频基础概念 1
1.1　声音的物理性质 1
1.1.1　声音是波 1
1.1.2　声波的三要素 2
1.1.3　声音的传播介质 3
1.1.4　回声 3
1.1.5　共鸣 4
1.2　数字音频 4
1.3　音频编码 6
1.4　图像的物理现象 7
1.5　图像的数值表示 8
1.5.1　RGB表示方式 8
1.5.2　YUV表示方式 9
1.5.3　YUV和RGB的转化 10
1.6　视频的编码方式 10
1.6.1　视频编码 10
1.6.2　编码概念 11
1.7　本章小结 13
第2章　移动端环境搭建 14
2.1　在iOS上如何搭建一个基础项目 14
2.2　在Android上如何搭建一个基础项目 21
2.3　交叉编译的原理与实践 26
2.3.1　交叉编译的原理 26
2.3.2　iOS平台交叉编译的实践 27
2.3.3　Android平台交叉编译的实践 33
2.3.4　使用LAME编码MP3文件 38
2.4　本章小结 42
第3章　FFmpeg的介绍与使用 43
3.1　FFmpeg的编译与命令行工具的使用 43
3.1.1　FFmpeg的编译 43
3.1.2　FFmpeg命令行工具的使用 51
3.2　FFmpeg API的介绍与使用 60
3.3　FFmpeg源码结构 68
3.3.1　libavformat与libavcodec介绍 68
3.3.2　FFmpeg通用API分析 69
3.3.3　调用FFmpeg解码时用到的函数分析 70
3.3.4　调用FFmpeg编码时用到的函数分析 71
3.3.5　面向对象的C语言设计 72
3.4　本章小结 74
第4章　移动平台下的音视频渲染 75
4.1　AudioUnit介绍与实践 75
4.2　Android平台的音频渲染 84
4.2.1　AudioTrack的使用 85
4.2.2　OpenSL ES的使用 87
4.3　视频渲染 90
4.3.1　OpenGL ES介绍 90
4.3.2　OpenGL ES的实践 91
4.3.3　上下文环境搭建 98
4.3.4　OpenGL ES中的纹理 104
4.4　本章小结 109
第5章　实现一款视频播放器 110
5.1　架构设计 110
5.2　解码模块的实现 115
5.3　音频播放模块的实现 118
5.3.1　Android平台的音频渲染 118
5.3.2　iOS平台的音频渲染 119
5.4　画面播放模块的实现 121
5.4.1　Android平台的视频渲染 121
5.4.2　iOS平台的视频渲染 122
5.5　AVSync模块的实现 124
5.5.1　维护解码线程 124
5.5.2　音视频同步 125
5.6　中控系统串联起各个模块 127
5.6.1　初始化阶段 127
5.6.2　运行阶段 128
5.6.3　销毁阶段 129
5.7　本章小结 130
第6章　音视频的采集与编码 131
6.1　音频的采集 131
6.1.1　Android平台的音频采集 131
6.1.2　iOS平台的音频采集 134
6.2　视频画面的采集 137
6.2.1　Android平台的视频画面采集 137
6.2.2　iOS平台的视频画面采集 146
6.3　音频的编码 156
6.3.1　libfdk_aac编码AAC 156
6.3.2　Android平台的硬件编码器MediaCodec 158
6.3.3　iOS平台的硬件编码器AudioToolbox 161
6.4　视频画面的编码 166
6.4.1　libx264编码H264 166
6.4.2　Android平台的硬件编码器MediaCodec 172
6.4.3　iOS平台的硬件编码器 175
6.5　本章小结 184
第7章　实现一款视频录制应用 185
7.1　视频录制的架构设计 185
7.2　音频模块的实现 188
7.2.1　音频队列的实现 189
7.2.2　Android平台的实现 191
7.2.3　iOS平台的实现 194
7.3　音频编码模块的实现 198
7.3.1　改造编码器 198
7.3.2　编码器适配器 199
7.4　画面采集与编码模块的实现 202
7.4.1　视频队列的实现 202
7.4.2　Android平台画面编码后入队 203
7.4.3　iOS平台画面编码后入队 204
7.5　Mux模块 205
7.5.1　初始化 206
7.5.2　封装和输出 208
7.5.3　销毁资源 212
7.6　中控系统串联起各个模块 213
7.7　本章小结 214
第8章　音频效果器的介绍与实践 215
8.1　数字音频基础 215
8.1.1　波形图 215
8.1.2　频谱图 217
8.1.3　语谱图 219
8.1.4　深入理解时域与频域 219
8.2　数字音频处理：快速傅里叶变换 222
8.3　基本乐理知识 229
8.3.1　乐谱 229
8.3.2　音符的音高与十二平均律 231
8.3.3　音符的时值 233
8.3.4　节拍 233
8.3.5　MIDI格式 234
8.4　混音效果器 235
8.4.1　均衡效果器 236
8.4.2　压缩效果器 239
8.4.3　混响效果器 240
8.5　效果器实现 243
8.5.1　Android平台实现效果器 243
8.5.2　iOS平台实现效果器 252
8.6　本章小结 255
第9章　视频效果器的介绍与实践 256
9.1　图像处理的基本原理 256
9.1.1　亮度调节 257
9.1.2　对比度调节 258
9.1.3　饱和度调节 259
9.2　图像处理进阶 259
9.2.1　图像的卷积过程 260
9.2.2　锐化效果器 260
9.2.3　高斯模糊算法 262
9.2.4　双边滤波算法 263
9.2.5　图层混合介绍 264
9.3　使用FFmpeg内部的视频滤镜 266
9.3.1　FFmpeg视频滤镜介绍 266
9.3.2　滤镜图的构建 267
9.3.3　使用与销毁滤镜图 269
9.3.4　常用滤镜介绍 270
9.4　使用OpenGL ES实现视频滤镜 272
9.4.1　加水印 273
9.4.2　添加自定义文字 278
9.4.3　美颜效果器 282
9.4.4　动图贴纸效果器 284
9.4.5　主题效果器 288
9.5　本章小结 291
第10章　专业的视频录制应用实践 292
10.1　视频硬件解码器的使用 292
10.1.1　初始化信息准备 292
10.1.2　VideoToolbox解码H264 294
10.1.3　MediaCodec解码H264 298
10.2　音频效果器的集成 304
10.2.1　Android音效处理系统的实现 305
10.2.2　iOS音效处理系统的实现 308
10.3　一套跨平台的视频效果器的设计与实现 309
10.4　将特效处理库集成到视频录制项目中 315
10.4.1　Android平台特效集成 316
10.4.2　iOS平台特效集成 321
10.5　本章小结 325
第11章　直播应用的构建 327
11.1　直播场景分析 327
11.2　拉流播放器的构建 329
11.2.1　Android平台播放器增加后处理过程 329
11.2.2　iOS平台播放器增加后处理过程 332
11.3　推流器的构建 335
11.4　第三方云服务介绍 340
11.5　礼物系统的实现 341
11.5.1　Cocos2dX项目的运行原理 342
11.5.2　关键API详解 344
11.5.3　实现一款动画 348
11.6　聊天系统的实现 350
11.6.1　Android客户端的WebSocket实现 351
11.6.2　iOS客户端的WebSocket实现 352
11.7　本章小结 353
第12章　直播应用中的关键处理 354
12.1　直播应用的细节分析 354
12.1.1　推流端细节分析 354
12.1.2　拉流端细节分析 355
12.2　推流端的关键处理 355
12.2.1　自适应码率的实践 356
12.2.2　统计数据保证后续的应对策略 361
12.3　拉流端的关键处理 363
12.3.1　重试机制的实践 364
12.3.2　首屏时间的保证 366
12.3.3　统计数据保证后续的应对策略 370
12.4　本章小结 371
第13章　工欲善其事，必先利其器 372
13.1　Android平台工具详解 372
13.1.1　ADB工具的熟练使用 372
13.1.2　MAT工具检测Java端的内存泄漏 377
13.1.3　NDK工具详解 387
13.1.4　Native层的内存泄漏检测 389
13.1.5　breakpad收集线上Crash 396
13.2　iOS使用Instruments诊断应用 399
13.2.1　Debug Navigator 399
13.2.2　Time Profiler 400
13.2.3　Allocations 402
13.2.4　Leaks 403
13.3　本章小结 405
附录A　通过Ne10的交叉编译输入理解ndk-build 406
附录B　编码器的使用细节 415
附录C　视频的表示与编码 423
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>音视频开发进阶指南:基于Android与iOS平台的实践
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS应用开发详解
第1章  Mac操作系统和开发环境	1
1.1  Mac操作系统简介	1
1.2  Windows操作习惯的改变	2
1.3  Mac系统配置	3
1.4  使用Finder	3
1.5  Dock启动菜单	4
1.6  使用Terminal终端	5
1.7  使用App Store	5
1.8  Mac常用快捷键	6
1.9  下载并安装Xcode	9
第2章  Xcode的使用	11
2.1  Xcode简介	11
2.2  使用Xcode创建项目	11
2.3  Xcode界面纵览	14
2.4  使用Xcode中的Interface Builder构建界面	15
2.5  Xcode快捷键	16
2.6  Organizer组织中心	17
第3章  Hello World Objective-C	18
3.1  使用Xcode 编辑、编译和运行Hello World	18
3.2  使用命令行编辑、编译并运行Hello World	21
3.3  Objective-C中的注释	22
3.4  使用NSLog输出变量	22
3.5  NSLog的格式化输出	23
第4章  Objective-C中的面向对象	25
4.1  对象和类简介	25
4.2  Objective-C中类的定义	25
4.3  实例变量、实例方法、类方法	26
4.4  类的实例化及方法的调用	27
4.5  类的初始化	29
4.6  属性	30
第5章  Objective-C中的数据类型	32
5.1  整型	32
5.2  浮点类型	33
5.3  字符型（char）	34
5.4  布尔类型	35
5.5  整型修饰符（short, long, signed, unsigned）	36
5.6  特殊类型（id）	36
第6章  Objective-C中的运算符	38
6.1  赋值运算	38
6.2  算术运算	39
6.3  自增自减	40
6.4  关系运算	41
6.5  逻辑运算	42
6.6  位运算	43
第7章  Objective-C流程控制、数据结构	44
7.1  选择（if else、switch、三元运算）	44
7.2  循环（for、while、do while、break、continue）	46
7.3  常用的数据结构：数组、栈	49
第8章  Objective-C分类和协议	52
8.1  分类的概念	52
8.2  分类的用法	52
8.3  协议的概念	56
8.4  协议的用法	56
第9章  Objective-C继承和多态	60
9.1  继承和组合	60
9.2  OCP设计原则及多态	64
第10章  C语言特性在Objective-C中的应用	70
10.1  预处理	70
10.2  数组	72
10.3  指针	73
10.4  结构体	74
第11章  Objective-C内存管理	76
11.1  对象的引用计数	76
11.2  Autorelease Pool	77
11.3  属性的内存管理	78
11.4  内存的自动引用计数（ARC）	79
11.5  内存管理的其他注意事项	81
第12章  NSNumber和NSString	83
12.1  NSNumber	83
12.2  NSString（字符串）	87
12.3  NSMutableString（可变字符串）	89
第13章  Foundation中的集合框架	91
13.1  数组NSArray和NSMutableArray	91
13.2  集合NSSet和NSMutableSet	93
13.3  字典NSDictionary和NSMutableDictionary	95
第14章  Foundation框架中的文件和目录	97
14.1  使用NSFileManager管理文件	97
14.2  使用NSFileManager管理目录	102
14.3  使用NSFileHandler读写文件	103
第15章  Objective-C中的对象复制	105
15.1  概述	105
15.2  对象的浅复制和深复制	107
15.3  NSCopying和NSMutableCopying协议	108
第16章  Objective-C中的文件归档	110
16.1  概述	110
16.2  使用属性列表（plist）保存数据	110
16.3  使用NSKeyedArchiver归档	112
16.4  归档自定义类型	113
16.5  利用归档实现深复制	114
第17章  iOS编程中常用的设计模式	115
17.1  MVC	115
17.2  Target-Action	119
17.3 代理	120
第18章  iOS用户界面	122
18.1  UIResponder	123
18.2  UIView	125
18.2.1  UIView的创建	125
18.2.2  UIView的核心属性	126
18.3  UILabel	128
18.4  UITextView	130
18.5  UIButton	132
18.6  UITextField	133
18.7  UISwitch	134
18.8  UISlider	135
18.9  UISegmentedControl	137
18.10  UIProgressView	138
18.11  UIActivityIndicatorView	139
18.12  UIAlertView	140
18.13  UIActionSheet	143
18.14  UIImageView	145
18.15  UIScrollView	146
18.16  UIWebView	147
18.17  UIDatePicker	151
18.18  UIPickerView	153
第19章  iOS控制器	155
19.1  UIViewController	155
19.2  UITabBarController	156
19.3  UINavigationController	161
19.4  UISplitViewController	164
19.5  UIPopoverController	166
19.6  UITableViewController	167
19.6.1  UITableViewController基本用法	168
19.6.2  分区表	171
19.6.3  自定义表格单元格	173
19.6.4  编辑表格数据	175
第20章  图形图像和动画	177
20.1  字体和颜色	177
20.2  绘制文本	181
20.3  绘制图片	182
20.4  画线	183
20.5  绘制矩形	185
20.6  移动动画	186
20.7  缩放动画	188
20.8  旋转动画	189
第21章  iOS多媒体	191
21.1  为多媒体开发做准备	191
21.2  使用AVAudioPlayer播放音乐	192
21.3  使用AVAudioPlayerDelegate处理播放中断及续播	194
21.4  使用AVAudioRecorder实现录音	196
21.5  使用AVAudioRecorderDelegate处理录音中断和续录	198
21.6  使用MPMoviePlayerController播放视频	201
21.7  捕获视频缩略图	202
21.8  使用MPMediaPickerController选择系统音乐	204
21.9  使用UIImagePickerController进行拍照和录像	205
第22章  iOS SQLite数据库	209
22.1  SQLite简介	209
22.2  在命令行使用SQLite	209
22.3  使用SQLite实现表的增、删、查、改	211
22.4  SQLite和UITableView结合使用	217
第23章  iOS Core Data编程	221
23.1  Core Data简介	221
23.2  使用Xcode模板创建Core Data项目	223
23.3  使用Core Data实现数据的增、删、查、改	226
23.4  Core Data数据在UITableView中展现	230
第24章  iOS网络编程	234
24.1  检测网络状态	234
24.2  使用NSURLConnection从网络获取数据	236
24.3  使用NSMutableURLRequest向服务器发送数据	237
24.4  JSON数据解析	239
24.5  XML数据解析	242
24.6  使用开源框架ASIHttpRequest实现网络编程	245
第25章  iOS多线程	247
25.1  NSThread	247
25.2  Block基础	248
25.2.1  Block的声明与调用	248
25.2.2  有返回值和参数的Block	249
25.3  Grand Central Dispatch（GCD）	249
25.4  操作对象（Operation Object）	251
第26章  iOS GPS定位应用	255
26.1  为项目添加必要的框架	255
26.2  使用MKMapView显示地图	256
26.2.1  使用MapView组件直接显示地图	256
26.2.2  使用代码显示地图	257
26.3  使用MKMapView的代理MKMapViewDelegate	258
26.4  使用CLLocationManager获得设备当前经纬度信息	260
26.5  在地图上标注位置	261
26.6  使用CLGeocoder将位置描述转换为经纬度信息	262
26.7  使用CLGeocoder将经纬度信息转换为位置描述	264
26.8  使用Google Place API 查询周边位置信息	265
第27章  iOS手势处理	267
27.1  点击手势处理UITapGestureRecognizer	267
27.2  捏合手势处理UIPinchGestureRecognizer	269
27.3  旋转手势处理UIRotationGestureRecognizer	270
27.4  滑动手势处理UISwipeGestureRecognizer	271
27.5  拖动手势处理UIPanGestureRecognizer	273
27.6  长按手势处理UILongPressGestureRecognizer	274
第28章  iOS传感器编程	276
28.1  传感器编程的准备工作	277
28.2  加速度传感器（Accelerometer）	278
28.3  陀螺仪传感器（Gyroscope）	280
28.4  磁力传感器（Magnetometer）	282
28.5  设备移动传感器（Device motion）	284
28.6  通过加速度传感器控制小球运动	285
第29章  AddressBook联系人管理	287
29.1  概述	287
29.2  读取所有联系人	289
29.3  添加联系人	293
第30章  在App Store掘金	296
30.1  注册开发者账号	296
30.2  申请成为开发者	298
30.3  证书申请	302
30.4  真机调试	312
30.5  应用提交	313
第31章  iOS项目实战——新浪微博客户端	319
31.1  项目准备工作	319
31.2  搭建项目基础框架	323
31.3  项目功能概述	327
31.4  项目界面结构	332
31.5  获得最新微博信息	335
31.6  发布微博	340
31.7  获得微博详细信息	342
31.8  获得微博评论和转发	344
31.9  发表评论	351
31.10  转发微博	353
31.11  收藏微博	355
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS应用开发详解
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS软件开发兵法
第１章 弹起前奏曲：环境设置 1
1.1 前期准备 1
1.1.1 开发环境要求 1
1.1.2 注册为苹果开发者 1
1.2 安装Xcode 4
1.3 相关资源 5
第２章 让舞台多姿多彩：设计第一个iPhone 界面 ６
2.1 什么是Xcode 6
2.2 创建项目 7
2.3 Xcode 项目窗口 10
2.3.1 工具栏（Toolbar） 10
2.3.2 导航区域（Navigator area） 13
2.3.3 编辑区域与调试区域（Editor area/Debug area） 13
2.3.4 检查窗格（Inspector pane） 14
2.4 Interface Builder 15
2.5 Hello World 经典程序 16
2.6 实现视图自动旋转功能 17
2.7 掌握更多的常用控件 20
2.8 掌握表格视图 30
2.9 实现视图切换 41
2.10 本章总结 47
第３章 数学算术：计算器 48
3.1 实现简单计算器功能 48
3.1.1 基本功能 48
3.1.2 创建项目 48
3.1.3 构建视图 50
3.1.4 实现基本功能 50
3.1.5 实现存储 56
3.2 实现科学计算器 58
3.2.1 实现思路 58
3.2.2 创建另一个视图控制器 58
3.2.3 构建视图 58
3.2.4 旋转切换视图 61
3.3 本章总结 62
第4 章 上演第一幕：电子图书程序 63
4.1 程序结构 63
4.2 知识点分析 63
4.3 移动图书数据库结构 64
4.3.1 使用命令行创建SQLite 数据库 65
4.3.2 使用客户端软件创建SQLite 数据库 65
4.4 创建一个iPhone 项目 66
4.4.1 项目文件介绍 68
4.4.2 应用程序还需要哪些文件 71
4.5 创建另一个视图控制器 75
4.6 应用程序国际化 76
4.6.1 标题的国际化 76
4.6.2 文本的国际化 78
4.7 在项目中引入SQLite 支持 80
4.7.1 引入example_book.sqlite3 文件 80
4.7.2 操作SQLite 的类 81
4.7.3 SQLiteHelper 81
4.7.4 BookDB 83
4.8 了解UIViewController 87
4.9 设计并处理第1 个窗口：图书目录列表 88
4.9.1 初始代码分析 88
4.9.2 添加UITableView 90
4.9.3 添加视图控制器属性 92
4.9.4 关联IBOutlet 对象和UITableView 93
4.9.5 读取并处理图书目录 94
4.10 设计并处理第2 个窗口：图书正文 97
4.10.1 BookContentViewController.h 接口文件 97
4.10.2 BookContentViewController.xib 视图文件 97
4.10.3 关联IBOutlet 对象和控件 98
4.10.4 BookContentViewController.m 实现文件 99
4.10.5 如何显示正文 101
4.11 UITableViewDelegate 与UITableViewDataSource 102
4.12 设置程序启动画面 103
4.13 应用程序图标 103
4.14 本章总结 104
第5 章 学文识字：新华字典 105
5.1 分析新华字典功能 105
5.2 设计新华字典数据库结构 105
5.3 创建新华字典项目 106
5.4 搜索汉字 108
5.4.1 设计视图 108
5.4.2 了解UISearchBar 111
5.4.3 实现Word 字类 112
5.4.4 在数据库中查找汉字 113
5.4.5 显示汉字介绍 114
5.5 按拼音搜索 115
5.5.1 设计视图 115
5.5.2 在数据库中查找 116
5.5.3 了解UITableViewDataSource 117
5.5.4 实现代理方法 117
5.5.5 控制Tab 切换 117
5.6 按部首搜索 118
5.6.1 设计视图 119
5.6.2 在数据库中查找 120
5.6.3 具体实现 122
5.7 按笔画搜索 123
5.7.1 设计视图 123
5.7.2 了解多视图程序 124
5.7.3 具体实现 125
5.8 本章总结 128
第6 章 图霸天下：图片浏览器 129
6.1 图片浏览器结构 129
6.2 应用程序知识点分析 130
6.3 设计图片浏览器数据库结构 130
6.4 创建图片浏览器项目 130
6.5 相册属性类与图片属性类 133
6.6 引入SQLite 3 134
6.7 第1 个功能：管理相册 137
6.7.1 “添加”按钮 137
6.7.2 使用UIAlertView 添加相册 138
6.7.3 显示相册 140
6.7.4 修改相册 143
6.7.5 删除相册 146
6.8 第2 个功能：浏览相册 147
6.8.1 添加组件 148
6.8.2 从系统照片库复制图片 151
6.8.3 处理并显示图片 153
6.8.4 删除相册中的图片 158
6.9 第3 个功能：查看图片 160
6.9.1 了解UIScrollView 160
6.9.2 用电子邮件发送图片 161
6.9.3 将图片保存到系统照片库 165
6.9.4 用幻灯片播放图片 166
6.10 本章总结 169
第7 章 优胜劣汰：iTunes 歌曲排行榜 170
7.1 iTunes 歌曲排行榜结构 170
7.2 应用程序知识点分析 170
7.3 什么是Core Data 171
7.3.1 Core Data 基本架构 172
7.3.2 托管对象（Managed Objects）和托管对象模型（Managed Object Model） 176
7.3.3 基本实现 177
7.4 创建iPhone 项目 179
7.5 持久化存储模型 179
7.5.1 歌曲信息 180
7.5.2 配置托管对象模型 182
7.5.3 创建托管对象Song 182
7.6 NSOperation 与NSOperationQueue 183
7.7 NSURLConnection 184
7.8 libxml2 184
7.9 将歌曲排行榜下载到Core Data 185
7.9.1 iTunesRSSImporter 185
7.9.2 源代码分析 193
7.10 歌曲详细信息：SongDetailViewController 195
7.11 自定义歌曲排行榜中的歌曲信息显示 197
7.12 歌曲排行榜：TopSongsViewController 199
7.12.1 TopSongsViewController.h 接口文件 200
7.12.2 TopSongsViewController.m 实现文件 200
7.12.3 NSFetchedResultsController 205
7.12.4 获取数据 205
7.12.5 显示获取的数据 206
7.12.6 延迟加载封面图片 206
7.12.7 下载图片 207
7.12.8 ImageDownloader.h 接口文件 207
7.12.9 ImageDownloader.m 实现文件 207
7.13 AppDelegate 209
7.13.1 AppDelegate.h 接口文件 209
7.13.2 AppDelegate.m 实现文件 209
7.14 本章总结 213
第8 章 智商大战：挑战数独 215
8.1 什么是数独游戏 215
8.2 编写数独游戏第1 步 216
8.3 游戏菜单设计 218
8.4 数独棋盘设计 221
8.5 数字输入工具设计 229
8.6 辅助数字输入设计 233
8.7 游戏结束，判断正确性 242
8.8 本章总结 245
第9 章 人人爱玩：迷你连连看 246
9.1 什么是Cocos2d 246
9.2 安装Cocos2d 246
9.3 创建Cocos2d 应用 248
9.4 Cocos2d 目录结构 249
9.5 开始编写程序 250
9.5.1 main.m 250
9.5.2 预编译前缀头文件 251
9.5.3 AppDelegate 251
9.5.4 HelloWorldLayer 252
9.5.5 内存管理 254
9.6 主场景游戏菜单设计 254
9.7 游戏关卡选择 259
9.8 游戏界面设计 262
9.9 核心算法：生成随机的成对图片 267
9.10 核心算法：判断图片能否被消除 276
9.11 游戏时间进度条设计 292
9.12 游戏道具设计 295
9.13 游戏背景音乐与音效设置 299
9.14 存储游戏关卡设置与用户游戏数据 307
9.15 本章总结 317
第10 章 快乐旅途：地图、定位系统开发 318
10.1 MapKit 框架 318
10.2 Core Location 框架 322
10.2.1 什么是Core Location 322
10.2.2 使用Core Location 322
10.2.3 反向编码CLGeocoder 325
10.3 地图注解 326
10.3.1 添加地图注解 327
10.3.2 长按添加地图注解 332
10.4 本章总结 336
第11 章 用之不竭：iCloud 应用 337
11.1 什么是iCloud 337
11.2 iCloud 的存储方式 338
11.3 配置iCloud 应用的授权 339
11.4 实例：从iCloud 上传与下载文件 341
11.5 本章总结 351
第12 章 完美谢幕：iOS 应用程序发布与管理 352
12.1 注册开发者账号 352
12.2 iOS Provisioning Portal 352
12.2.1 证书 353
12.2.2 设备 355
12.2.3 App ID 355
12.2.4 创建Provisioning Portal 356
12.2.5 安装Provisioning Portal 356
12.3 发布应用程序 357
12.3.1 编译可发布应用程序 357
12.3.2 iTunes Connect 360
12.4 上传应用程序 361
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS软件开发兵法
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通iOS开发（第8版）
第1章　欢迎来到iOS和Swift世界　　1
1.1　关于本书　　1
1.2　必备条件　　2
1.2.1　选择开发者计划　　3
1.2.2　必备知识　　5
1.2.3　iOS应用程序的特点　　5
1.3　本书内容　　8
1.3.1　新版增加内容　　9
1.3.2　Swift和Xcode版本　　9
1.3.3　准备好了吗　　9
第2章　创建第一个App　　10
2.1　创建“Hello, World!”项目　　10
2.1.1　Xcode项目窗口　　13
2.1.2　深入了解项目　　20
2.2　Interface Builder简介　　21
2.2.1　文件格式　　22
2.2.2　storyboard　　22
2.2.3　实用工具　　23
2.2.4 在视图中添加标签　　24
2.2.5 属性修改　　27
2.3　画龙点睛——美化iPhone应用程序　　28
2.4　启动界面　　32
2.5　在设备上运行应用　　33
2.6　小结　　36
第3章　基本的用户交互　　37
3.1　MVC模式　　37
3.2　创建ButtonFun应用　　38
3.3　视图控制器　　39
3.3.1　输出接口和操作方法　　40
3.3.2　精简视图控制器代码　　41
3.3.3　设计用户界面　　42
3.3.4　测试ButtonFun应用　　49
3.3.5　布局预览　　57
3.3.6　改变文本样式　　59
3.4　应用程序委托　　60
3.5　小结　　62
第4章　更丰富的用户界面　　63
4.1　动态控件、静态控件和被动控件　　66
4.2　创建Control Fun应用程序　　66
4.3　实现图像视图和文本框　　67
4.3.1　添加图像视图　　67
4.3.2　调整图像视图的大小　　69
4.3.3　设置视图属性　　71
4.3.4　添加文本框　　72
4.3.5　添加约束　　78
4.3.6　创建并关联输出接口　　79
4.4　关闭键盘　　80
4.4.1　按下Done按钮关闭键盘　　81
4.4.2　触摸背景关闭键盘　　82
4.4.3　添加滑动条和标签　　83
4.4.4　创建并关联操作方法和输出接口　　85
4.4.5　实现操作方法　　85
4.5　实现开关、按钮和分段控件　　86
4.5.1　添加两个带标签的开关　　87
4.5.2　为开关创建并关联输出接口和操作方法　　87
4.5.3　实现开关的操作方法　　88
4.5.4　控件状态　　90
4.5.5　为按钮创建并关联输出接口和操作方法　　91
4.6　实现分段控件的操作方法　　91
4.7　实现操作表单和警告视图　　92
4.7.1　显示操作表单　　92
4.7.2　显示警告视图　　95
4.8　小结　　96
第5章　自动旋转　　97
5.1　自动旋转机制　　98
5.1.1　点、像素和Retina显示屏　　98
5.1.2　控制旋转　　98
5.2　创建Orientations项目　　99
5.2.1　应用级支持的方向　　99
5.2.2　独立控制器的旋转支持　　101
5.3　创建布局项目　　102
5.3.1　覆盖默认的约束　　105
5.3.2　与屏幕等宽的标签　　107
5.4　创建自适应布局　　109
5.4.1　创建Restructure 应用程序　　109
5.4.2　设置iPhone的横向（wC hC）配置布局　　116
5.4.3　设置iPad（以及iPhone Plus横向）的wR hR配置　　124
5.5　小结　　131
第6章　创建多视图应用　　132
6.1　多视图应用的常见类型　　132
6.2　多视图应用的体系结构　　135
6.2.1　根控制器　　137
6.2.2　内容视图剖析　　137
6.3　构建View Switcher项目　　137
6.3.1　重命名视图控制器　　137
6.3.2　添加内容视图控制器　　139
6.3.3　修改SwitchingViewController.swift　　140
6.3.4　创建拥有工具栏的视图　　140
6.3.5　连接工具栏按钮和视图控制器　　142
6.3.6　编写根视图控制器　　143
6.3.7　实现内容视图　　147
6.3.8　过渡动画效果　　150
6.4　小结　　152
第7章　分页栏与选取器　　153
7.1　Pickers应用程序　　153
7.2　委托和数据源　　156
7.3　创建Pickers应用程序　　157
7.3.1　创建视图控制器　　157
7.3.2　创建分页栏控制器　　158
7.3.3　首次模拟器测试　　161
7.3.4　实现日期选取器　　162
7.4　实现单滚轮选取器　　164
7.4.1　构建视图　　164
7.4.2　将控制器实现为数据源和委托　　168
7.5　实现多滚轮选取器　　170
7.5.1　构建视图　　170
7.5.2　实现控制器　　170
7.5.3　滚轮内容根据环境变化　　172
7.6　使用自定义选取器创建一个简单游戏　　178
7.6.1　编写控制器头文件　　178
7.6.2　构建视图　　178
7.6.3　实现控制器　　179
7.6.4　最后的细节　　182
7.7　小结　　185
第8章　表视图简介　　186
8.1　表视图基础　　186
8.1.1　表视图和表视图单元　　186
8.1.2　分组表和连续表　　187
8.2　实现一个简单表　　188
8.2.1　设计视图　　188
8.2.2　实现控制器　　190
8.2.3　添加一个图像　　193
8.2.4　表视图单元样式　　194
8.2.5　设置缩进级别　　197
8.2.6　处理行的选择　　197
8.2.7　更改字体大小和行高　　199
8.3　定制表视图单元　　200
8.4　实现自定义表视图应用程序　　201
8.4.1　创建UITableViewCell子类　　201
8.4.2　从XIB文件加载UITableViewCell　　205
8.5　分组分区和索引分区　　210
8.5.1　构建视图　　210
8.5.2　导入数据　　211
8.5.3　实现控制器　　212
8.5.4　添加索引　　214
8.5.5　添加搜索栏　　215
8.5.6　视图调试器　　220
8.6　小结　　222
第9章　表视图中的导航控制器　　223
9.1　导航控制器基础　　223
9.1.1　栈的概念　　223
9.1.2　控制器栈　　224
9.2　简单的字体浏览器：Fonts　　225
9.2.1　Fonts应用的子控制器　　225
9.2.2　Fonts应用的基础框架　　227
9.2.3　创建根视图控制器　　230
9.2.4　初始化storyboard　　232
9.2.5　第一个子控制器：字体列表视图　　233
9.2.6　设计字体列表的storyboard　　235
9.3　创建字体尺寸视图控制器　　237
9.3.1　设计字体尺寸视图控制器的storyboard　　238
9.3.2　对字体列表视图控制器的转场进行设置　　238
9.3.3　创建字体信息视图控制器　　239
9.3.4　设计字体信息视图控制器的storyboard　　240
9.3.5　调整字体列表视图控制器的转场　　243
9.3.6　我的收藏字体　　244
9.3.7　补充功能　　244
9.3.8　实现轻扫删除　　244
9.3.9　实现拖动排序　　246
9.4　小结　　247
第10章　集合视图　　248
10.1　创建DialogViewer项目　　248
10.1.1　配置自定义单元　　249
10.1.2　配置视图控制器　　252
10.1.3　提供内容单元　　252
10.1.4　实现流动布局　　254
10.1.5　实现标题视图　　255
10.2　小结　　257
第11章　iPad应用中的分割视图和浮动窗口　　258
11.1　创建基于UISplitViewController的分割视图应用程序　　260
11.1.1　在storyboard中定义结构　　262
11.1.2　使用代码定义功能　　263
11.1.3　Master-Detail模板应用程序的工作原理　　266
11.1.4　添加总统信息　　268
11.1.5　创建浮动窗口　　272
11.2　小结　　277
第12章　应用设置和用户默认设置　　278
12.1　设置捆绑包入门　　278
12.2　Bridge Control应用程序　　279
12.2.1　创建项目　　282
12.2.2　使用设置捆绑包　　283
12.2.3　读取应用中的设置　　295
12.2.4　在应用中修改默认设置　　298
12.2.5　注册默认值　　300
12.2.6　保证设置有效　　300
12.2.7　切换到Settings应用程序　　302
12.3　小结　　303
第13章　数据持久化基础知识　　304
13.1　应用程序的沙盒　　304
13.1.1　获取Documents和Library目录　　307
13.1.2　获取临时目录　　308
13.2　文件保存方案　　308
13.2.1　单文件持久化　　308
13.2.2　多文件持久化　　309
13.3　属性列表　　309
13.3.1　属性列表序列化　　309
13.3.2　创建Persistence应用程序的第一个版本　　310
13.4　对模型对象进行归档　　314
13.4.1　遵循NSCoding协议　　314
13.4.2　实现NSCopying协议　　315
13.4.3　对数据对象进行归档和取消归档　　316
13.4.4　归档应用　　316
13.4.5　使用iOS嵌入的SQLite3　　318
13.4.6　创建或打开数据库　　319
13.4.7　使用绑定变量　　320
13.5　创建SQLite3应用程序　　321
13.6　使用Core Data　　325
13.6.1　实体和托管对象　　326
13.6.2　Core Data应用　　329
13.6.3　修改AppDelegate.swift文件　　332
13.7　小结　　338
第14章　文档和iCloud　　339
14.1　使用UIDocument管理文档存储　　340
14.1.1　构建TinyPix　　340
14.1.2　创建TinyPixDocument类　　340
14.1.3　主控制器代码　　342
14.1.4　设置storyboard　　348
14.1.5　创建TinyPix视图的类　　350
14.1.6　设计storyboard的详情视图　　353
14.2　添加iCloud支持　　356
14.2.1　创建配置描述文件　　356
14.2.2　如何查询　　359
14.2.3　保存位置　　360
14.2.4　将偏好设置保存到iCloud　　361
14.3　小结　　363
第15章　用Grand Central Dispatch进行多线程编程　　364
15.1　创建SlowWorker应用程序　　365
15.1.1　线程基础知识　　367
15.1.2　工作单元　　368
15.1.3　GCD：底层队列　　368
15.1.4　改进SlowWorker　　369
15.2　后台处理　　372
15.3　应用生命周期　　373
15.4　状态更改通知　　373
15.4.1　创建State Lab项目　　374
15.4.2　探索执行状态　　375
15.4.3　利用执行状态更改　　376
15.4.4　处理不活跃状态　　377
15.4.5　处理后台状态　　380
15.4.6　进入后台时保存状态　　382
15.5　小结　　385
第16章　图形与绘制　　386
16.1　Quartz 2D基础概念　　386
16.2　Quartz 2D绘图方法　　387
16.2.1　Quartz 2D图形环境　　387
16.2.2　坐标系统　　388
16.2.3　指定颜色　　389
16.2.4　在环境中绘制图像　　390
16.2.5　绘制形状：多边形、直线和曲线　　390
16.2.6　Quartz 2D样例：图案、渐变色、虚线图　　391
16.3　QuartzFun应用程序　　392
16.3.1　构建QuartzFun应用程序　　392
16.3.2　添加Quartz 2D绘制代码　　398
16.3.3　优化QuartzFun应用程序　　402
16.4　小结　　404
第17章　SpriteKit制作简单游戏　　405
17.1　创建TextShooter应用　　405
17.1.1　自定义初始场景　　408
17.1.2　玩家移动　　411
17.1.3　创建敌人　　415
17.1.4　在场景中加入敌人　　416
17.1.5　开始射击　　417
17.1.6　物理攻击敌人　　420
17.1.7　完成关卡　　421
17.1.8　自定义碰撞　　423
17.1.9　粒子系统　　426
17.1.10　向场景中加入粒子　　428
17.1.11　游戏结束　　430
17.1.12　创建开始场景　　432
17.1.13　添加音效　　434
17.1.14　添加力场：为游戏提高一些难度　　434
17.2　小结　　437
第18章　轻点、触摸和手势　　438
18.1　多点触控术语　　438
18.2　响应者链　　439
18.2.1　响应事件　　439
18.2.2　转发事件：保持响应者链的活动状态　　440
18.3　多点触控体系结构　　440
18.4　4 个手势通知方法　　440
18.5　TouchExplorer应用　　441
18.5.1　创建Swipes应用程序　　445
18.5.2　使用触摸事件检测轻扫　　445
18.5.3　自动手势识别　　447
18.5.4　实现多指轻扫　　448
18.5.5　检测多次轻点　　450
18.5.6　检测捏合和旋转　　453
18.6　小结　　456
第19章　确定位置　　457
19.1　位置管理器　　457
19.1.1　设置期望精度　　457
19.1.2　设置距离筛选器　　458
19.1.3　获取使用定位服务的权限　　458
19.1.4　启动位置管理器　　458
19.1.5　合理使用位置管理器　　458
19.2　位置管理器委托　　459
19.2.1　获取位置更新　　459
19.2.2　使用CLLocation获取纬度和经度　　459
19.2.3　错误通知　　461
19.3　创建WhereAmI应用程序　　461
19.3.1　更新位置管理器　　465
19.3.2　将移动路线展现在地图上　　467
19.3.3　更改定位服务权限　　470
19.4　小结　　471
第20章　设备方向与动作　　472
20.1　加速计物理特性　　472
20.2　陀螺仪旋转特性　　473
20.3　Core Motion和动作管理器　　473
20.3.1　创建MotionMonitor应用程序　　473
20.3.2　主动动作访问　　476
20.3.3　陀螺仪和方位结果　　478
20.3.4　加速计结果　　479
20.4　检测摇动　　480
20.4.1　内嵌的摇动检测　　480
20.4.2　摇动与破碎　　480
20.5　将加速计用作方向控制器　　482
20.5.1　Ball应用程序　　482
20.5.2　实现BallView类　　484
20.5.3　计算弹珠运动　　486
20.6　小结　　488
第21章　摄像头和照片图库　　489
21.1　图像选取器和UIImagePickerController　　489
21.1.1　图像选取器控制器　　489
21.1.2　实现图像选取器控制器委托　　491
21.2　设计Camera界面　　492
21.2.1　隐私选项　　494
21.2.2　实现摄像头视图控制器　　495
21.3　小结　　498
第22章　本地化翻译应用　　499
22.1　本地化体系结构　　499
22.2　字符串文件　　500
22.2.1　字符串文件的格式　　500
22.2.2　本地化的字符串函数　　501
22.3　创建LocalizeMe应用　　502
22.3.1　本地化项目　　505
22.3.2　本地化storyboard　　508
22.3.3　创建并本地化字符串文件　　512
22.3.4　应用显示名称的本地化　　516
22.3.5　添加其他本地化　　517
22.4　小结　　517
22.5　全书总结　　518
附录A　Swift简介　　519
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通iOS开发（第8版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>《iOS实战：图形图像、动画和多媒体卷（Swift版）》
第1章 准备开始
1.1 本书结构
1.2 本书中的约定
1.2.1 实例代码约定
1.2.2 图示约定
1.2.3 图中手势
1.2.4 方法命名约定
1.2.5 构造器命名约定
第2章 UIKit与Quartz 2D绘图技术
2.1 绘制视图
2.1.1 视图绘制周期
2.1.2 实例： 填充矩形
2.1.3 填充与描边
2.1.4 绘制图像和文本
2.2 Quartz图形上下文
2.3 Quartz路径
2.4 Quartz坐标变换
2.4.1 坐标系
2.4.2 2D图形的基本变换
2.4.3 CTM变换矩阵
2.4.4 仿射变换
本章小结
第3章 图像处理
3.1 使用图像
3.1.1 创建图像
3.1.2 从设备图片库选取或从照相机抓取
3.2 Core Image框架
3.3 滤镜
3.3.1 使用滤镜
3.3.2 实例： 旧色调和高斯模糊滤镜
3.4 人脸识别
3.4.1 人脸识别开发
3.4.2 实例： 是猩猩还是小女孩
本章小结
第4章 动画技术
4.1 视图动画
4.1.1 动画块
4.1.2 动画生命周期事件
4.1.3 过渡动画
4.2 iOS自定义视图过渡动画
4.2.1 自定义过渡动画
4.2.2 树形结构导航自定义过渡动画
4.2.3 模态导航自定义过渡动画
4.2.4 实例： 使用HUAnimator自定义过渡动画框架
4.3 UIKit力学
4.3.1 UIKit力学基本框架
4.3.2 力学行为特性
4.3.3 实例： UIKit力学
4.4 运动效果
4.5 Core Animation框架
4.5.1 图层
4.5.2 隐式动画
4.5.3 显式动画
4.5.4 关键帧动画
4.5.5 使用路径
本章小结
第5章 音频
5.1 音频文件简介
5.2 音频API简介
5.3 AVFoundation框架实现音频录制与播放
5.3.1 音频播放
5.3.2 音频录制
5.3.3 语音合成
5.4 使用System Sound API
5.4.1 播放系统声音
5.4.2 发出警告提醒
5.4.3 振动
本章小结
第6章 视频
6.1 视频文件简介
6.2 播放视频
6.2.1 使用MediaPlayer框架
6.2.2 使用AVFoundation框架
6.3 录制视频
6.3.1 使用UIImagePickerController
6.3.2 使用AVFoundation框架
6.4 编辑视频
本章小结
第7章 流媒体技术
7.1 网络多媒体技术
7.1.1 渐进式下载
7.1.2 实时流媒体
7.2 渐进式下载开发
7.3 实时流媒体开发
7.3.1 媒体文件的分割与处理
7.3.2 搭建HLS流媒体服务器
7.3.3 使用本地技术开发客户端
7.3.4 使用Hybrid技术开发客户端
本章小结
第8章 AirPlay技术
8.1 AirPlay技术简介
8.1.1 支持AirPlay的设备
8.1.2 多媒体文件支持
8.2 AirPlay开发
8.2.1 MPMoviePlayerController
8.2.2 AVPlayer
8.2.3 UIWebView
本章小结
第9章 访问iPod媒体库
9.1 访问iPod媒体库相关API
9.2 访问与控制iPod媒体库
9.2.1 控制iPod媒体库播放
9.2.2 查看媒体信息
9.2.3 通知
9.3 搜索iPod媒体库
9.4 iPod媒体库选择器
本章小结
第10章 51CTO学院视频流媒体服务器与iPad客户端敏捷开发实战
10.1 应用分析与设计
10.1.1 应用简介
10.1.2 需求分析
10.1.3 原型设计
10.1.4 架构设计
10.1.5 数据库设计
10.1.6 网络拓扑图
10.2 iOS敏捷开发
10.2.1 敏捷开发宣言
10.2.2 iOS是否可以敏捷开发
10.2.3 iOS敏捷开发*佳实践
10.3 任务1： 环境搭建
10.3.1 任务1.1：iPad客户端环境搭建
10.3.2 任务1.2：Apache Server搭建
10.3.3 任务1.3：HLS流媒体服务器搭建
10.3.4 任务1.4：MySQL数据库服务器搭建
10.3.5 任务1.5：phpMyAdmin管理工具的配置
10.4 任务2： 信息系统层开发
10.4.1 任务2.1：创建数据库对象
10.4.2 任务2.2：导入测试数据
10.5 任务3： 业务逻辑层开发
10.5.1 任务3.1：业务逻辑类
10.5.2 任务3.2：服务器端辅助对象Skeleton
10.6 任务4： 表示层开发
10.6.1 任务4.1：客户端辅助对象Stub
10.6.2 任务4.2：根据原型设计初步设计iPad故事板
10.6.3 任务4.3：首页模块UI设计
10.6.4 任务4.4：首页视图控制器代码编写
10.6.5 任务4.5：首页到详细页的过渡
10.6.6 任务4.6：详细模块UI设计
10.6.7 任务4.6.1：主题颜色带
10.6.8 任务4.6.2：课程类别2列表
10.6.9 任务4.6.3：课程内容
10.6.10 任务4.7：详细视图控制器代码编写
本章小结
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>《iOS实战：图形图像、动画和多媒体卷（Swift版）》
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS UI开发捷径
第1章  Interface Builder概要
1.1 Interface Builder简介
1.1.1 Interface Builder是什么
1.1.2 xib是什么
1.1.3 拓展学习：Bundle概念的理解
1.1.4 理解Bundle对于IB的指导意义
1.1.5 storyboard是什么
1.1.6 nib是什么
1.1.7 storyboardc是什么
1.2 Interface Builder的优点
1.2.1 开发和维护效率高
1.2.2 减少大量的UI代码和“胶水代码”
1.2.3 适配变得十分简单
1.2.4 IB也可以做一些非UI的事情
1.2.5 利用IB学习控件可以达到事半功倍的效果
1.3 Interface Builder的缺点
1.3.1 IB的执行效率没有纯代码高
1.3.2 使用IB开发的过程中容易出现一些小问题
1.3.3 有一定的学习成本
1.3.4 文件易冲突
1.3.5 没有代码表达清晰
1.3.6 不利于代码的封装和工程架构的组织
1.4 Interface Builder学习的特点
1.4.1 简单、容易入门
1.4.2 容易犯错误
1.4.3 有很多“坑”，需要积累属于自己的经验
1.5 Interface Builder的发展
1.6 拓展学习：CocoaPods
1.6.1 CocoaPods介绍
1.6.2 Podfile文件与CocoaPods的三种依赖方式
1.6.3 podspec文件
第2章  使用Interface Builder
2.1 解决冲突
2.1.1 解决普通IB文件冲突
2.1.2 解决Xcode 8引起的IB文件冲突
2.2 创建xib文件
2.3 “关联”xib文件与源文件
2.3.1 “关联”xib文件与UIView子类的源文件
2.3.2 @IBOutlet与@IBAction
2.3.3 拓展学习：设计模式之MVC
2.3.4 理解File's Owner
2.3.5 “关联”xib文件与UIViewController子类的源文件
2.3.6 总结xib“关联”源文件
2.4 使用xib
2.4.1 使用与UIView子类源文件关联的xib
2.4.2 使用与UIViewController子类源文件关联的xib
2.4.3 xib嵌套使用的问题
2.4.4 深入学习：加载非main bundle中的资源
2.5 拓展学习：创建Bundle
2.5.1 使用简单的方法创建普通的Bundle
2.5.2 创建基于macOS Bundle的Target来获得Bundle
2.6 创建storyboard
2.7 使用storyboard
2.8 对比xib和storyboard的使用情况
2.9 拓展学习：App启动过程分析与UIApplication自定义举例
第3章  全面学习xib
3.1 操作页面
3.2 介绍Utilities中的检查器
3.2.1 Show the File inspector（文件检查器）
3.2.2 Show Quick Help inspector（快速帮助检查器）
3.2.3 Show the Identity inspector（ID检查器）
3.2.4 Show the Attributes inspector（属性检查器）
3.2.5 Show the Size inspector（尺寸检查器）
3.2.6 Show the Connections inspector（连接检查器）
3.2.7 “连线”方式总结
3.3 Show the Object library菜单
3.4 在xib中使用UITableView
3.4.1 将基于sb的工程变成基于xib的工程
3.4.2 利用xib简单展示UITableView
3.4.3 利用xib自定义UITableViewCell
3.4.4 利用xib自定义UITableViewCell的使用
3.5 Asset Catalog
3.5.1 使用Asset Catalog
3.5.2 Asset Catalog的优缺点
第4章  在Interface Builder中使用Auto Layout
4.1 IB与Auto Layout
4.1.1 学习Auto Layout的特点
4.1.2 在IB中使用Auto Layout的优缺点
4.2 深刻理解Auto Layout
4.2.1 如何理解“Auto Layout有别于frame系统”
4.2.2 如何理解“添加约束”
4.2.3 如何理解“间接表示”
4.3 约束
4.3.1 Auto Layout的数学公式
4.3.2 约束属性
4.3.3 约束关系
4.3.4 multiplier与constant
4.3.5 约束的创建与添加
4.3.6 约束的优先级
4.4 Auto Layout相关菜单介绍
4.4.1 Update frames介绍
4.4.2 Embed In Stack介绍
4.4.3 Align介绍
4.4.4 Add New Constraints介绍
4.4.5 Resolve Auto Layout Issues介绍
4.5 Show the Size inspector再介绍
4.5.1 Constraints菜单
4.5.2 Intrinsic Size——固有尺寸
4.5.3 Content Compression Resistance——压缩阻力
4.5.4 Content Hugging——内容吸附
4.5.5 使用NSLayoutConstraint与@IBOutlet“连线”
4.6 设置约束的方法介绍
4.6.1 在IB中设置约束
4.6.2 用苹果原生的API设置约束
4.6.3 用VFL（Visual Format Language）设置约束
4.6.4 通过第三方库设置约束
4.7 在Interface Builder中使用Auto Layout进行布局的实践
4.7.1 用Auto Layout布局拨打电话页面
4.7.2 stackView的使用
4.7.3 拓展学习：FDStackView
4.7.4 拓展学习：“黑魔法”——实现在低版本中使用高版本中才存在的类
4.7.5 Auto Layout的异类——UIScrollView
第5章  storyboard全面学习
5.1 Inspector其他菜单和标签的使用
5.1.1 使用View Controller
5.1.2 使用Page View Controller
5.1.3 使用Table View Cell
5.2 使用Extra View
5.3 使用storyboard中的segue
5.3.1 使用Relationship Segue
5.3.2 常见的segue选项
5.3.3 如何利用segue传参
5.3.4 更灵活的segue
5.3.5 自定义的segue
5.3.6 拓展学习：iOS中内存管理简介
5.3.7 深入学习：Embed Segue
5.3.8 Embed Segue与UIPageViewController的配合使用
5.3.9 深入学习：Unwind Segue
5.4 在sb中使用UITableView
5.4.1 在sb中使用自定义tableViewCell
5.4.2 在sb中给UITableView添加tableHeaderView和tableFooterView
5.4.3 segue在UITableView中的使用
5.4.4 在sb中使用静态cell
5.5 在sb中使用UICollectionView
5.6 Use as Launch Screen
5.6.1 Launch Screen的使用
5.6.2 使用Launch Screen的好处
第6章  Interface Builder进阶
6.1 Use Trait Variations
6.2 User Define Runtime Attribute
6.3 IB文件的加载过程
6.4 本地化
6.4.1 本地化的介绍
6.4.2 文本的本地化
6.4.3 Info.plist的本地化
6.4.4 图片资源的本地化
6.4.5 App内设置语言的本地化
6.5 Storyboard Reference的使用
6.6 使用RBStoryboardLink
6.7 用Object重构“神VC”
6.7.1 使用Object
6.7.2 用Object重构“神VC”的思路
6.7.3 如何用好Object
6.8 用External Object重构“神VC”
6.8.1 xib中External Object的使用
6.8.2 用External Object重构“神VC”的思路
6.8.3 Object和External Object总结
6.9 IB中的关键字总结
6.9.1 @IBAction
6.9.2 @IBOutlet
6.9.3 @IBDesignable
6.9.4 @IBInspectable
6.9.5 User Defined Runtime Attributes、@IBDesignable、@IBInspectable总结
第7章  在Interface Builder开发中的技巧和bug
7.1 调整View的尺寸，使它与显示内容的尺寸相适应
7.2 查看各个View之间的距离
7.3 在IB中添加参考线
7.4 快速调整底层被挡住View的位置
7.5 快速查看View的UI层次关系
7.6 “连线”小技巧
7.7 使用“吸管”快速设置颜色
7.8 IB中的复制与粘贴
7.9 利用Media Library快速设置图片
7.10 IB开发中遇到的一些小bug
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS UI开发捷径
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>腾讯iOS测试实践
作者简介
前言
第一部分　测试观
第1章　测试观概述2
1.1　引言2
1.2　工程效率3
1.2.1　自动化测试4
1.2.2　静态代码分析5
1.3　品质管理7
1.4　测试分析12
1.4.1　黑盒测试分析12
1.4.2　白盒测试分析13
1.5　测试设计14
1.5.1　探索式测试14
1.5.2　基于模型的测试14
1.6　数据反推15
1.6.1　测试过程中的数据15
1.6.2　线上数据17
1.7　未来的测试19
1.7.1　线上数据挖掘19
1.7.2　人工智能21
1.7.3　众测21
1.8　小结22
第二部分　iOS特色测试
第2章　走进iOS24
2.1　引言24
2.2　iOS平台的兴起24
2.3　iOS平台的特殊性25
2.3.1　证书25
2.3.2　越狱26
2.3.3　灰度27
2.3.4　AppStore审核29
2.3.5　自动化测试工具30
2.4　小结30
第3章　iOS兼容性测试31
3.1　引言31
3.2　系统兼容32
3.2.1　新增功能32
3.2.2　接口差异32
3.3　机型兼容37
3.3.1　新增功能37
3.3.2　屏幕变化37
3.3.3　处理器差异38
3.4　测试原则39
3.5　小结41
第4章　iOS性能测试43
4.1　引言43
4.2　性能测试简介44
4.2.1　性能测试介入时间45
4.2.2　iOS性能测试分类46
4.3　响应速度测试方法48
4.3.1　掐表计时法48
4.3.2　日志计时法48
4.3.3　录像分帧计时法49
4.3.4　网页速度对比测试举例51
4.4　稳定性测试55
4.4.1　测试框架介绍56
4.4.2　稳定性测试思路56
4.4.3　稳定性测试结果记录60
4.5　流量测试方法62
4.5.1　系统流量统计方法62
4.5.2　数据包分析法63
4.6　电量测试方法66
4.7　内存测试方法67
4.8　流畅性测试70
4.9　小结71
第5章　iOS自动化测试入门72
5.1　引言72
5.2　自动化测试适用场景72
5.3　自动化测试框架73
5.3.1　接口自动化测试框架73
5.3.2　UI自动化测试框架74
5.4　XCTest自动化框架介绍75
5.4.1　框架集成75
5.4.2　接口测试78
5.4.3　UI测试79
5.4.4　优缺点分析85
5.5　KIF自动化框架介绍86
5.5.1　框架集成86
5.5.2　用例编写89
5.5.3　优缺点分析92
5.6　小结93
第6章　iOS测试框架二次开发94
6.1　引言94
6.1.1　二次开发总体架构94
6.1.2　整体部署图94
6.1.3　整体架构图95
6.1.4　架构分析96
6.2　底层驱动层97
6.2.1　XCTest接口封装97
6.2.2　消息处理模块101
6.2.3　驱动模块104
6.3　中间层113
6.3.1　控件调用封装层113
6.3.2　截图模块115
6.3.3　日志处理模块118
6.4　应用层121
6.4.1　自动化脚本121
6.4.2　配置文件123
6.4.3　日志分析系统123
6.4.4　风险点128
6.5　截图智能分析130
6.5.1　OpenCV简介130
6.5.2　OpenCV模板识别130
6.5.3　OpenCV实践过程132
6.6　自动化持续集成135
6.6.1　Jenkins简介135
6.6.2　Jenkins特点135
6.6.3　使用方式135
6.6.4　配置Job137
6.7　自动化实践效果139
6.7.1　部署情况139
6.7.2　投入产出比139
6.7.3　运营数据140
6.8　小结142
第7章　iOS精准测试143
7.1　引言143
7.1.1　传统测试遇到的问题143
7.1.2　敏捷模型的挑战144
7.1.3　解决方案145
7.2　精准测试概念146
7.2.1　业界的精准测试概念146
7.2.2　我们自己的理解146
7.3　传统测试到精准测试的演变148
7.3.1　精准测试与传统测试的对比148
7.3.2　精准测试满足敏捷需求149
7.4　精准测试实践之路149
7.4.1　精准测试总体架构图149
7.4.2　代码分析150
7.4.3　用例关系库154
7.4.4　SVN代码变化监控分析156
7.4.5　精准自动化方案158
7.4.6　精准实现流程小结159
7.4.7　精准实践流程160
7.4.8　精准解决问题164
7.5　小结165
第三部分　通用测试实践
第8章　探索式测试168
8.1　引言168
8.2　探索式测试的发展史168
8.2.1　ET 1.0169
8.2.2　ET 1.5169
8.2.3　ET 2.0169
8.2.4　ET 3.0170
8.3　探索式测试入门实践170
8.3.1　实践前提171
8.3.2　实践过程174
8.3.3　实践后续177
8.4　研发各个阶段的实践形式179
8.4.1　测试设计179
8.4.2　迭代测试181
8.4.3　集成测试182
8.4.4　回归测试185
8.4.5　上线测试186
8.5　实践效果展示187
8.6　探索式测试的答疑189
8.6.1　理论方面的问题189
8.6.2　实践过程的问题189
8.6.3　提升方面的问题190
8.7　小结190
第9章　标准化测试191
9.1　引言191
9.2　功能测试的困惑191
9.2.1　手工测试现状191
9.2.2　黑盒测试困境192
9.2.3　外包测试模式192
9.3　测试分析模型192
9.3.1　ACC模型193
9.3.2　HTSM模型193
9.3.3　SBTM模型194
9.3.4　漫游模型194
9.3.5　场景模型196
9.4　点线面测试体系197
9.4.1　建筑模型197
9.4.2　责任分工199
9.4.3　三个标准化200
9.5　实践案例202
9.5.1　承载体和价值点提炼202
9.5.2　细化承载体和价值点204
9.5.3　变量因子及策略205
9.5.4　动态测试测程210
9.5.5　测试闭环215
9.6　收益评估216
9.6.1　充分利用动态思维216
9.6.2　建立用户角度测试模型217
9.6.3　测试过程及管理优化218
9.7　小结220
第10章　缺陷分析221
10.1　引言221
10.2　缺陷理论基础221
10.2.1　缺陷的定义221
10.2.2　缺陷的属性222
10.2.3　缺陷的修复成本222
10.3　缺陷定位（逆向分析）223
10.3.1　望224
10.3.2　闻224
10.3.3　问225
10.3.4　切226
10.4　缺陷报告（正向演进）226
10.4.1　缺陷现象—缺陷影响227
10.4.2　复现路径—测试思想228
10.4.3　缺陷原理—代码关注229
10.4.4　缺陷思考—扩展总结231
10.5　讨论分析232
10.5.1　投入产出比233
10.5.2　适用人群234
10.5.3　适用阶段234
10.6　小结234
后记235
附录A　参考引用及扩展阅读238
附录B　相关网址收录239
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>腾讯iOS测试实践
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS 9 开发指南
第一篇 必备技术篇
第1章 IOS开发入门 2
1．1 iOS系统介绍 2
1．1．1 iOS发展史 2
1．1．2 全新的版本——iOS 9 3
1．2 开始iOS 9开发之旅 4
1．3 工欲善其事，必先利其器——搭建开发环境 5
1．3．1 Xcode 介绍 6
1．3．2 下载并安装Xcode 7 6
1．3．3 创建iOS 9项目并启动模拟器 8
1．3．4 打开一个现有的iOS 9项目 10
1．4 iOS 9中的常用开发框架 10
1．4．1 Foundation框架简介 11
1．4．2 Cocoa框架简介 12
1．4．3 iOS程序框架 13
第2章 使用Xcode开发环境详解 14
2．1 基本面板介绍 14
2．1．1 调试工具栏 15
2．1．2 导航面板介绍 15
2．1．3 检查器面板 18
2．2 Xcode 7的基本操作 19
2．2．1 改变公司名称 19
2．2．2 通过搜索框缩小文件范围 19
2．2．3 格式化代码 20
2．2．4 代码缩进和自动完成 20
2．2．5 文件内查找和替代 21
2．2．6 快速定位到代码行 22
2．2．7 快速打开文件 22
2．2．8 使用书签 23
2．2．9 自定义导航条 24
2．2．10 使用Xcode帮助 24
2．2．11 调试代码 25
2．3 使用Xcode 7帮助系统 26
第3章 Objective-C语言基础 27
3．1 最耀眼的新星 27
3．1．1 看一份统计数据 27
3．1．2 究竟何为Objective-C 27
3．1．3 为什么选择Objective-C 28
3．2 Objective-C的优点及缺点 28
3．3 一个简单的例子 29
3．3．1 使用Xcode编辑代码 29
3．3．2 基本元素介绍 31
3．4 数据类型和常量 34
3．4．1 int类型 35
3．4．2 float类型 36
3．4．3 double类型 36
3．4．4 char类型 37
3．4．5 字符常量 38
3．4．6 id类型 39
3．4．7 限定词 40
3．4．8 总结基本数据类型 41
3．5 字符串 42
3．6 算数表达式 42
3．6．1 运算符的优先级 43
3．6．2 整数运算和一元负号运算符 44
3．6．3 模运算符 45
3．6．4 整型值和浮点值的相互转换 46
3．6．5 类型转换运算符 46
3．7 表达式 47
3．7．1 常量表达式 47
3．7．2 条件运算符 47
3．7．3 sizeof运算符 48
3．7．4 关系运算符 49
3．7．5 强制类型转换运算符 49
3．8 位运算符 50
3．8．1 按位与运算符 50
3．8．2 按位或运算符 50
3．8．3 按位异或运算符 51
3．8．4 一次求反运算符 51
3．8．5 向左移位运算符 52
3．8．6 向右移位运算符 52
3．8．7 总结Objective-C的运算符 53
第4章 Swift语言基础 55
4．1 Swift概述 55
4．1．1 Swift的创造者 55
4．1．2 Swift的优势 56
4．2 数据类型和常量 57
4．2．1 int类型 57
4．2．2 float类型 57
4．2．3 double类型 58
4．2．4 char类型 58
4．2．5 字符常量 58
4．3 变量和常量 58
4．3．1 常量详解 58
4．3．2 变量详解 59
4．4 字符串和字符 60
4．4．1 字符串字面量 60
4．4．2 初始化空字符串 60
4．4．3 字符串可变性 61
4．4．4 值类型字符串 61
4．4．5 计算字符数量 61
4．4．6 连接字符串和字符 62
4．4．7 字符串插值 62
4．4．8 比较字符串 63
4．4．9 Unicode 63
4．5 流程控制 65
4．5．1 for循环（1） 66
4．5．2 for循环（2） 67
4．5．3 while循环 67
4．6 条件语句 68
4．6．1 if语句 68
4．6．2 switch语句 69
4．7 函数 70
4．7．1 函数的声明与调用 70
4．7．2 函数的参数和返回值 71
4．8 实战演练——使用Xcode创建Swift程序 72
第5章 Cocoa Touch框架 74
5．1 Cocoa Touch基础 74
5．1．1 Cocoa Touch概述 74
5．1．2 Cocoa Touch中的框架 75
5．1．3 Cocoa Touch的优势 75
5．2 iPhone的技术层 76
5．2．1 Cocoa Touch层 76
5．2．2 多媒体层 80
5．2．3 核心服务层 80
5．2．4 核心OS层 81
5．3 Cocoa Touch中的框架 82
5．3．1 Core Animation（图形处理）框架 82
5．3．2 Core Audio（音频处理）框架 82
5．3．3 Core Data（数据处理）框架 83
5．4 Cocoa中的类 84
5．4．1 核心类 84
5．4．2 数据类型类 86
5．4．3 UI界面类 87
5．5 国际化 88
5．6 使用Xcode学习iOS框架 89
5．6．1 使用Xcode文档 89
5．6．2 快速帮助 90
第6章 Xcode Interface Builder界面开发 92
6．1 Interface Builder基础 92
6．2 和Interface Builder密切相关的库面板 94
6．3 Interface Builder采用的方法 95
6．4 Interface Builder中的故事板——Storyboarding 95
6．4．1 推出的背景 95
6．4．2 故事板的文档大纲 96
6．4．3 文档大纲的区域对象 98
6．5 创建一个界面 98
6．5．1 对象库 98
6．5．2 将对象加入到视图中 99
6．5．3 使用IB布局工具 100
6．6 定制界面外观 103
6．6．1 使用属性检查器 103
6．6．2 设置辅助功能属性 103
6．6．3 测试界面 104
6．7 iOS 9控件的属性 105
6．8 实战演练——将设计界面连接到代码 105
6．8．1 打开项目 105
6．8．2 输出口和操作 106
6．8．3 创建到输出口的连接 106
6．8．4 创建到操作的连接 108
6．9 实战演练——纯代码实现UI设计 109
第7章 使用Xcode编写MVC程序 112
7．1 MVC模式基础 112
7．1．1 分析结构 112
7．1．2 MVC的特点 113
7．2 Xcode中的MVC 113
7．2．1 原理 113
7．2．2 模板就是给予MVC的 114
7．3 在Xcode中实现MVC 114
7．3．1 视图 115
7．3．2 视图控制器 115
7．4 数据模型 116
7．5 实战演练——使用模板Single View Application 117
7．5．1 创建项目 117
7．5．2 规划变量和连接 120
7．5．3 设计界面 122
7．5．4 创建并连接输出口和操作 123
7．5．5 实现应用程序逻辑 126
7．5．6 生成应用程序 127
7．6 实战演练——创建一个MVC程序（Swift版） 127
第二篇 核心技术篇
第8章 文本框和文本视图 132
8．1 文本框（UITextField） 132
8．1．1 文本框基础 132
8．1．2 实战演练——控制是否显示TextField中信息 132
8．1．3 实战演练——对输入内容的长度进行验证 134
8．1．4 实战演练——实现用户登录框界面 135
8．1．5 实战演练——实现一个UITextField控件（Swift版） 136
8．2 文本视图（UITextView） 137
8．2．1 文本视图基础 137
8．2．2 实战演练——拖动输入的文本 138
8．2．3 实战演练——自定义设置文字的行间距 139
8．2．4 实战演练——自定义 UITextView 控件的样式 140
8．2．5 实战演练——在指定的区域中输入文本（Swift版） 143
第9章 按钮和标签 145
9．1 标签（UILabel） 145
9．1．1 标签（UILabel）的属性 145
9．1．2 实战演练——使用UILabel显示一段文本 145
9．1．3 实战演练——为文字分别添加上划线、下划线和中划线 147
9．1．4 实战演练——显示被触摸单词的字母 148
9．1．5 实战演练——显示一个指定样式的文本（Swift版） 150
9．2 按钮（UIButton） 151
9．2．1 按钮基础 151
9．2．2 实战演练——自定义设置按钮的图案 152
9．2．3 实战演练——实现了一个变换形状动画按钮 154
9．3 实战演练——联合使用文本框、文本视图和按钮 155
9．3．1 创建项目 155
9．3．2 设计界面 156
9．3．3 创建并连接输出口和操作 161
9．3．4 实现按钮模板 162
9．3．5 隐藏键盘 164
9．3．6 实现应用程序逻辑 165
9．3．7 总结执行 166
9．4 实战演练——自定义一个按钮（Swift版） 168
第10章 滑块、步进和图像 170
10．1 滑块控件（UISlider） 170
10．1．1 使用Slider 控件的基本方法 170
10．1．2 实战演练——使用素材图片实现滑动条特效 171
10．1．3 实战演练——实现自动显示刻度的滑动条 172
10．1．4 实战演练——实现各种各样的滑块 174
10．1．5 实战演练——自定义实现UISlider控件功能（Swift版） 177
10．2 步进控件（UIStepper） 178
10．2．1 步进控件介绍 178
10．2．2 实战演练——自定义步进控件的样式 179
10．2．3 实战演练——设置指定样式的步进控件 181
10．2．4 实战演练——使用步进控件自动增减数字（Swift版） 185
10．3 图像视图控件（UIImageView） 186
10．3．1 UIImageView的常用操作 186
10．3．2 实战演练——实现图像的模糊效果 187
10．3．3 实战演练——滚动浏览图片 190
10．3．4 实战演练——实现一个图片浏览器 191
10．3．5 实战演练——使用UIImageView控件（Swift版） 193
第11章 开关控件和分段控件 195
11．1 开关控件（UISwitch） 195
11．1．1 开关控件基础 195
11．1．2 实战演练——改变UISwitch的文本和颜色 195
11．1．3 实战演练——显示具有开关状态的开关 197
11．1．4 实战演练——联合使用UISlider与UISwitch控件 198
11．1．5 实战演练——控制是否显示密码明文（Swift版） 199
11．2 分段控件（UISegmentedControl） 200
11．2．1 分段控件的属性和方法 201
11．2．2 实战演练——使用 UISegmentedControl控件 202
11．2．3 实战演练——添加图标和文本 203
11．2．4 实战演练——使用分段控件控制背景颜色 204
11．2．5 实战演练——使用UISegmentedControl控件（Swift版） 205
第12章 Web视图控件、可滚动视图控件和翻页控件 206
12．1 Web视图（UIWebView） 206
12．1．1 Web视图基础 206
12．1．2 实战演练——在UIWebView控件中调用JavaScript 脚本 207
12．1．3 实战演练——使用滑动条动态改变字体的大小 208
12．1．4 实战演练——实现一个迷你浏览器工具 209
12．1．5 实战演练——使用UIWebView控件加载网页（Swift版） 211
12．2 可滚动的视图（UIScrollView） 212
12．2．1 UIScrollView的基本用法 213
12．2．2 实战演练——使用可滚动视图控件 213
12．2．3 实战演练——滑动隐藏状态栏 216
12．2．4 实战演练——使用UIScrollView控件（Swift版） 217
12．3 实战演练——联合使用开关、分段控件和Web视图控件 218
12．3．1 创建项目 219
12．3．2 设计界面 219
12．3．3 创建并连接输出口和操作 221
12．3．4 实现应用程序逻辑 223
12．3．5 调试运行 225
12．4 翻页控件（UIPageControl） 225
12．4．1 PageControll控件基础 225
12．4．2 实战演练——自定义 UIPageControl 控件的的外观样式 226
12．4．3 实战演练——实现一个图片播放器 228
12．4．4 实战演练——实现一个图片浏览程序 230
12．4．5 实战演练——使用UIPageControl控件设置4个界面（Swift版） 230
第13章 提醒和操作表 232
13．1 提醒视图（UIAlertView） 232
13．1．1 UIAlertView基础 232
13．1．2 实战演练——实现一个自定义提醒对话框 235
13．1．3 实战演练——实现振动提醒框效果 236
13．1．4 实战演练——自定义UIAlertView控件的外观 239
13．1．5 实战演练——使用UIAlertView控件（Swift版） 242
13．2 操作表（UIActionSheet） 243
13．2．1 操作表的基本用法 243
13．2．2 实战演练——实现特殊样式效果的UIActionSheet 244
13．2．3 实战演练——实现Reeder阅读器效果 248
13．2．4 实战演练——使用UIActionSheet控件定制一个按钮面板 251
13．2．5 实战演练——使用UIActionsheet实现一个分享App（Swift版） 251
第14章 工具栏、日期选择器 254
14．1 工具栏（UIToolbar） 254
14．1．1 工具栏基础 254
14．1．2 实战演练——联合使用UIToolBar和UIView 255
14．1．3 实战演练——自定义UIToolBar控件的颜色和样式 256
14．1．4 实战演练——创建一个带有图标按钮的工具栏 261
14．1．5 使用UIToolbar制作一个网页浏览器（Swift版） 262
14．2 选择器视图（UIPickerView） 264
14．2．1 选择器视图基础 264
14．2．2 实战演练——实现两个UIPickerView控件间的数据依赖 266
14．2．3 实战演练——自定义一个选择器 268
14．2．4 实战演练——实现一个单列选择器 275
14．2．5 实战演练——实现一个会发音的倒计时器（Swift版） 276
14．3 日期选择控件（UIDatePicker） 278
14．3．1 UIDatePicker基础 278
14．3．2 实战演练——实现一个日期选择器 280
14．3．3 实战演练——使用日期选择器自动选择一个时间 286
14．3．4 实战演练——使用UIDatePicker控件（Swift版） 287
第15章 表视图 290
15．1 表视图基础 290
15．1．1 表视图的外观 290
15．1．2 表单元格 290
15．1．3 添加表视图 290
15．1．4 UITableView详解 294
15．2 实战演练 296
15．2．1 实战演练——拆分表视图 296
15．2．2 实战演练——自定义UITableViewCell 298
15．2．3 实战演练——实现一个图文样式联系人列表效果 302
15．2．4 实战演练——在表视图中动态操作单元格（Swift版） 304
第16章 活动指示器、进度条和检索条 306
16．1 活动指示器（UIActivityIndicatorView） 306
16．1．1 活动指示器基础 306
16．1．2 实战演练——自定义UIActivityIndicatorView控件的样式 306
16．1．3 实战演练——自定义活动指示器的显示样式 309
16．1．4 实战演练——实现不同外观的活动指示器效果 312
16．1．5 实战演练——使用UIActivityIndicatorView控件（Swift版） 313
16．2 进度条（UIProgressView） 314
16．2．1 进度条基础 314
16．2．2 实战演练——自定义进度条的外观样式 314
16．2．3 实战演练——实现多个具有动态条纹背景的进度条 315
16．2．4 实战演练——自定义一个指定外观样式的进度条 317
16．2．5 实战演练——实现自定义进度条效果（Swift版） 321
16．3 检索条（UISearchBar） 322
16．3．1 检索条基础 322
16．3．2 实战演练——在查找信息输入关键字时实现自动提示功能 323
16．3．3 实战演练——实现文字输入的自动填充和自动提示功能 326
16．3．4 实战演练——使用检索控件快速搜索信息 329
16．3．5 使用UISearchBar控件 331
第17章 UIView详解 333
17．1 UIView基础 333
17．1．1 UIView的结构 333
17．1．2 视图架构 335
17．1．3 视图层次和子视图管理 335
17．2 实战演练——给任意UIView视图四条边框加上阴影 336
17．3 实战演练——给UIView加上各种圆角、边框效果 338
17．4 实战演练——使用UIView控件实现弹出式动画表单效果 343
17．5 实战演练——创建一个滚动图片浏览器（Swift版） 344
第18章 视图控制器 349
18．1 导航控制器（UIViewController）简介 349
18．1．1 UIViewController基础 349
18．1．2 实战演练——实现可以移动切换的视图效果 350
18．1．3 实战演练——实现手动旋转屏幕的效果 353
18．1．4 实战演练——实现会员登录系统（Swift版） 354
18．2 使用UINavigationController 355
18．2．1 UINavigationController详解 356
18．2．2 实战演练——使用导航控制器展现3个场景 358
18．2．3 实战演练——实现一个界面导航条功能 362
18．2．4 实战演练——创建主从关系的“主-子”视图（Swift版） 364
18．3 选项卡栏控制器 365
18．3．1 选项卡栏和选项卡栏项 366
18．3．2 实战演练——使用选项卡栏控制器构建3个场景 368
18．3．3 实战演练——使用动态单元格定制表格行 372
18．3．4 开发一个界面选择控制器（Swift版） 373
第三篇 技术进阶篇
第19章 实现多场景和弹出框 376
19．1 多场景故事板 376
19．1．1 多场景故事板基础 376
19．1．2 创建多场景项目 377
19．1．3 实战演练——使用第二个视图来编辑第一个视图中的信息 380
19．1．4 实战演练——实现多个视图之间的切换 384
19．2 实战演练——多场景视图数据传输（Swift版） 388
第20章 UICollectionView和UIVisual EffectView控件 391
20．1 UICollectionView控件详解 391
20．1．1 UICollectionView的构成 391
20．1．2 实现一个简单的UICollectionView 392
20．1．3 自定义的UICollectionViewLayout 394
20．1．4 实战演练——使用UICollectionView控件实现网格效果 395
20．1．5 实战演练——实现大小不相同的网格效果 398
20．1．6 实战演练——实现Pinterest样式的布局效果（Swift版） 400
20．2 UIVisualEffectView控件详解 402
20．2．1 UIVisualEffectView基础 402
20．2．2 使用VisualEffectView控件实现模糊特效 404
20．2．3 使用Visual Effect View实现Vibrancy效果 404
20．2．4 实战演练——在屏幕中实现了模糊效果 406
20．2．5 实战演练——在屏幕中实现了模糊效果 407
20．2．6 实战演练——编码实现指定图像的模糊效果（Swift版） 409
第21章 iPad弹出框和分割视图控制器 411
21．1 iPad弹出框 411
21．1．1 创建弹出框 411
21．1．2 创建弹出切换 411
21．1．3 手工显示弹出框 413
21．1．4 响应用户关闭弹出框 413
21．1．5 以编程方式创建并显示弹出框 414
21．1．6 实战演练——使用弹出框更新内容 416
21．2 探索分割视图控制器 418
21．2．1 分割视图控制器基础 418
21．2．2 表视图实战演练 420
第22章 界面旋转、大小和全屏处理 425
22．1 启用界面旋转 425
22．1．1 界面旋转基础 425
22．1．2 实战演练——实现界面自适应（Swift版） 426
22．2 设计可旋转和调整大小的界面 427
22．2．1 自动旋转和自动调整大小 427
22．2．2 调整框架 427
22．2．3 切换视图 427
22．2．4 实战演练——使用Interface Builder创建可旋转和调整大小的界面 427
22．2．5 实战演练——在旋转时调整控件 430
22．2．6 实战演练——旋转时切换视图 433
22．2．7 实战演练——实现屏幕视图的自动切换（Swift版） 436
第23章 图形、图像、图层和动画 437
23．1 图形处理 437
23．1．1 iOS的绘图机制 437
23．1．2 实战演练——在屏幕中绘制一个三角形 438
23．1．3 实战演练——使用CoreGraphic实现绘图操作 439
23．1．4 使用Quartz 2D绘制移动的曲线（Swift版） 442
23．2 图像处理 443
23．2．1 实战演练——实现颜色选择器/调色板功能 443
23．2．2 实战演练——在屏幕中绘制一个图像 444
23．3 图层 446
23．3．1 视图和图层 446
23．3．2 实战演练——实现图片、文字以及翻转效果 447
23．3．3 实战演练——滑动展示不同的图片 448
23．3．4 实战演练——演示CALayers图层的用法（Swift版） 449
23．4 实现动画 450
23．4．1 UIImageView动画 450
23．4．2 视图动画UIView 450
23．4．3 Core Animation详解 454
23．4．4 实战演练——使用图像动画 455
23．4．5 实战演练——实现UIView分类动画效果 463
23．4．6 实战演练——动画样式显示电量使用情况 465
23．4．7 实战演练——图形图像的人脸检测处理（Swift版） 468
第24章 声音服务 472
24．1 访问声音服务 472
24．1．1 声音服务基础 472
24．1．2 实战演练——播放声音文件 473
24．1．3 实战演练——使用AudioToolbox播放列表中的音乐（Swift版） 476
24．2 提醒和振动 479
24．2．1 播放提醒音 480
24．2．2 实战演练——实用iOS的提醒功能 480
24．2．3 实战演练——实现两种类型的振动效果（Swift版） 488
第25章 多媒体应用 490
25．1 Media Player框架 490
25．1．1 Media Player框架中的类 490
25．1．2 实战演练——使用Media Player播放视频 491
25．1．3 实战演练——边下载边播放视频 493
25．1．4 实战演练——播放指定的视频（Swift版） 495
25．2 AV Foundation框架 497
25．2．1 准备工作 497
25．2．2 使用AV音频播放器 497
25．2．3 实战演练——使用AV Foundation框架播放视频 498
25．2．4 实战演练——使用AVAudioPlayer播放和暂停指定的MP3（Swift版） 501
25．3 图像选择器（UIImagePickerController） 501
25．3．1 使用图像选择器 501
25．3．2 实战演练——获取图片并缩放 502
25．3．3 实战演练——通过弹出式菜单选择相机中的照片（Swift版） 506
25．4 实战演练——实现一个多媒体的应用程序 507
25．4．1 实现概述 507
25．4．2 创建项目 508
25．4．3 设计界面 509
25．4．4 创建并连接输出口和操作 509
25．4．5 实现电影播放器 510
25．4．6 实现音频录制和播放 511
25．4．7 使用照片库和相机 514
25．4．8 实现Core Image滤镜 515
25．4．9 访问并播放音乐库 516
第26章 定位处理 520
26．1 Core Location框架 520
26．1．1 Core Location基础 520
26．1．2 使用流程 520
26．1．3 实战演练——定位显示当前的位置信息（Swift版） 523
26．2 获取位置 526
26．2．1 位置管理器委托 526
26．2．2 获取航向 527
26．3 地图功能 528
26．3．1 Map Kit基础 528
26．3．2 为地图添加标注 529
26．3．3 实战演练——在地图中定位当前的位置信息（Swift版） 530
26．4 实战演练——创建一个支持定位的应用程序 531
26．4．1 创建项目 531
26．4．2 设计视图 532
26．4．3 创建并连接输出口 533
26．4．4 实现应用程序逻辑 533
26．4．5 生成应用程序 535
26．5 实战演练——定位当前的位置信息 535
26．6 实战演练——在地图中绘制导航线路 538
第27章 读写应用程序数据 541
27．1 iOS应用程序和数据存储 541
27．2 用户默认设置 542
27．3 设置束 542
27．3．1 设置束基础 543
27．3．2 实战演练——通过隐式首选项实现一个手电筒程序 544
27．4 直接访问文件系统 547
27．4．1 应用程序数据的存储位置 547
27．4．2 获取文件路径 548
27．4．3 读写数据 548
27．4．4 读取和写入文件 549
27．4．5 通过plist文件存取文件 550
27．4．6 保存和读取文件 552
27．4．7 文件共享和文件类型 552
27．4．8 实战演练——实现一个用户信息收集器 553
27．5 iCloud存储 557
27．6 使用SQLite3存储和读取数据 557
27．7 核心数据 561
27．7．1 Core Data基础 561
27．7．2 实战演练——使用CoreData 动态添加、删除数据 562
27．8 互联网数据 567
27．8．1 XML和JSON 567
27．8．2 实战演练——使用JSON获取网站中的照片信息 570
第四篇 技术提高篇
第28章 触摸、手势识别和Force Touch 574
28．1 多点触摸和手势识别基础 574
28．2 触摸处理 575
28．2．1 触摸事件和视图 575
28．2．2 iOS中的手势操作 577
28．2．3 实战演练——触摸的方式移动视图 578
28．2．4 实战演练——触摸挪动彩色方块（Swift版） 578
28．3 手势处理 582
28．3．1 手势处理基础 582
28．3．2 实战演练——实现一个手势识别器 586
28．3．3 实战演练——识别手势并移动屏幕中的方块（Swift版） 591
28．4 Force Touch技术 594
28．4．1 Force Touch介绍 595
28．4．2 Force Touch APIs介绍 595
28．4．3 实战演练——使用Force Touch 596
28．4．4 实战演练——启动Force Touch触控面板 598
第29章 和硬件之间的操作 600
29．1 加速计和陀螺仪 600
29．1．1 加速计基础 600
29．1．2 陀螺仪 604
29．1．3 实战演练——检测倾斜和旋转 604
29．1．4 实战演练——使用Motion传感器（Swift版） 608
29．2 访问朝向和运动数据 609
29．2．1 两种方法 610
29．2．2 实战演练——检测当前设备的朝向 611
29．3 实战演练——传感器综合练习（Swift版） 613
第30章 地址簿、邮件和Twitter 622
30．1 地址簿 622
30．1．1 框架Address Book UI 622
30．1．2 框架Address Book 623
30．2 Message UI电子邮件 624
30．2．1 Message UI基础 624
30．2．2 实战演练——使用Message UI发送邮件（Swift版） 625
30．3 使用Twitter发送推特信息 626
30．3．1 Twitter基础 626
30．3．2 实战演练——开发一个Twitter客户端（Swift版） 626
30．4 实战演练——联合使用地址簿、电子邮件、Twitter和地图 629
30．4．1 创建项目 630
30．4．2 设计界面 630
30．4．3 创建并连接输出口和操作 631
30．4．4 实现地址簿逻辑 631
30．4．5 实现地图逻辑 633
30．4．6 实现电子邮件逻辑 635
30．4．7 实现Twitter逻辑 636
30．4．8 调试运行 636
第31章 开发通用的项目程序 637
31．1 开发通用应用程序 637
31．1．1 在iOS 6中开发通用应用程序 637
31．1．2 在iOS 6+中开发通用应用程序 638
31．1．3 图标文件 645
31．1．4 启动图像 646
31．2 实战演练——使用通用程序模板创建通用应用程序 646
31．2．1 创建项目 646
31．2．2 设计界面 646
31．2．3 创建并连接输出口 647
31．2．4 实现应用程序逻辑 647
31．3 实战演练——使用视图控制器 648
31．3．1 创建项目 648
31．3．2 设计界面 649
31．3．3 创建并连接输出口 650
31．3．4 实现应用程序逻辑 650
31．3．5 生成应用程序 650
31．4 实战演练——使用多个目标 651
31．4．1 将iPhone目标转换为iPad目标 651
31．4．2 将iPad目标转换为iPhone目标 651
31．5 实战演练——创建基于“主—从”视图的应用程序 652
31．5．1 创建项目 652
31．5．2 调整iPad界面 653
31．5．3 调整iPhone界面 654
31．5．4 实现应用程序数据源 655
31．5．5 实现主视图控制器 657
31．5．6 实现细节视图控制器 658
31．5．7 调试运行 659
第32章 推服务和多线程 660
32．1 推服务 660
32．1．1 推服务介绍 660
32．1．2 推服务的机制 661
32．2 多线程 661
32．2．1 多线程基础 661
32．2．2 iOS中的多线程 663
32．2．3 线程的同步与锁 667
32．2．4 线程的交互 668
32．3 ARC机制 669
32．3．1 ARC概述 669
32．3．2 ARC中的新规则 670
第33章 Touch ID详解 671
33．1 开发Touch ID应用程序 671
33．1．1 Touch ID的官方资料 671
33．1．2 开发Touch ID应用程序的步骤 672
33．2 实战演练——使用Touch ID认证 673
33．3 实战演练——使用Touch ID密码和指纹认证 674
33．4 实战演练——Touch ID认证的综合演练 678
第34章 游戏开发 684
34．1 Sprite Kit框架基础 684
34．1．1 Sprite Kit的优点和缺点 684
34．1．2 Sprite Kit、Cocos2D、Cocos2D-X和Unity的选择 684
34．2 实战演练——开发一个Sprite Kit游戏程序 685
34．3 实战演练——开发一个四子棋游戏（Swift版） 693
第35章 watchOS 2智能手表开发 704
35．1 Apple Watch介绍 704
35．2 WatchKit开发详解 705
35．2．1 搭建WatchKit开发环境 706
35．2．2 WatchKit架构 706
35．2．3 WatchKit布局 708
35．2．4 Glances和Notifications 708
35．2．5 Watch App的生命周期 708
35．3 开发Apple Watch应用程序 709
35．3．1 创建Watch应用 710
35．3．2 创建Glance界面 710
35．3．3 自定义通知界面 710
35．3．4 配置Xcode项目 710
35．4 实战演练——实现AppleWatch界面布局 713
35．5 实战演练——演示AppleWatch的日历事件 715
35．6 实战演练——在手表中控制小球的移动 719
35．7 实战演练——实现一个Watch录音程序 720
第36章 HomeKit智能家居应用开发 730
36．1 HomeKit基础 730
36．1．1 苹果HomeKit如何牵动全国智能硬件格局 730
36．1．2 给开发者和厂家提供的巨大机会 731
36．1．3 苹果正式推出HomeKit硬件标准 731
36．2 HomeKit开发基础 732
36．2．1 HomeKit应用程序的层次模型 732
36．2．2 HomeKit程序架构模式 733
36．2．3 HomeKit中的类 734
36．3 实战演练——实现一个HomeKit控制程序 735
36．4 实战演练——WatchKit+HomeKit实现一个智能家居控制程序（Swift版） 739
第37章 HealthKit健康应用开发 748
37．1 HealthKit基础 748
37．1．1 Healthkit介绍 748
37．1．2 市面中的Healthkit应用现状 748
37．1．3 接入Healthkit的好处 749
37．2 HealthKit开发基础 750
37．2．1 开发要求 750
37．2．2 HealthKit开发思路 750
37．3 实战演练——检测一天消耗掉的能量 751
37．4 实战演练——心率检测（Swift版） 760
第五篇 综合实战篇
第38章 分析开源中国客户端 764
38．1 系统介绍 764
38．2 系统主界面 765
38．3 多线程处理 767
第39章 综合性智能手表管理系统（Swift版） 771
39．1 系统介绍 771
39．2 创建工程项目 771
39．3 iPhone端的具体实现 772
39．4 Watch端的具体实现 774
39．4．1 主界面视图 774
39．4．2 各个子界面视图的具体实现 776
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS 9 开发指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS 6编程经典实例
前言
第1章基础
前言
第1章基础
1.0概述
1.1使用Xcode创建一个简单的iOS应用
1.2了解界面构建器
1.3编译iOS应用程序
1.4在模拟器上运行iOS应用程序
1.5在iOS设备上运行iOS应用程序
1.6为分发而打包iOS应用程序
1.7在Objective—C中声明变量
1.8分配和使用字符串
1.9使用if语句来比较Obiective—C中的值
1.10使用for语句来实现循环
1.11使用while循环
1.12自定义类
1.13定义类的功能
1.14定义两个或多个同名方法
1.15分配和初始化对象
1.16为类添加属性
1.17从手工引用计数转到自动引用计数
1.18使用自动引用计算来实现强制类型转换
1.19通过协议代理任务
1.20确定某个实例或类方法是否可用
1.21在运行时确定某个类是否可用
1.22分配与运用数字
1.23分配与运用数组
1.24分配与运用字典
1.25分配与运用集合
1.26创建包
1.27从主包中加载数据
1.28从其他包中加载数据
1.29使用NSNotificationCenter发送通知
1.30监听来自NSNotificationCenter的通知
……
第2章实现控制器与视图
第3章自动布局与可视化格式语言
第4章构建与使用表格视图
第5章提要本
第6章并发
第7章内核定位与地图
第8章实现手势识别
第9章网络、JSON、XML和Twitter
第10章音频和视频
第11章地址簿
第12章文件和文件夹管理
第13章摄像头和照片库
第14章多任务
第15章核心数据
第16章日期、日历和事件
第17章图形和动画
第18章核心运动
第19章iCIoud
第20章PassKit
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS 6编程经典实例
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS开发指南：从Hello World到App Store上架（第5版）
第一部分　基　础　篇
第1章　开篇综述　　2
1.1　iOS概述　　2
1.1.1　iOS介绍　　2
1.1.2　iOS 10新特性　　2
1.2　开发环境及开发工具　　3
1.3　本书约定　　4
1.3.1　案例代码约定　　4
1.3.2　图示的约定　　5
1.3.3　方法命名约定　　6
1.3.4　构造函数命名约定　　7
1.3.5　错误处理约定　　7
第2章　第一个iOS应用程序　　8
2.1　创建HelloWorld工程　　8
2.1.1　通过Xcode创建工程　　9
2.1.2　添加标签　　11
2.1.3　运行应用　　13
2.1.4　Xcode中的iOS工程模板　　13
2.1.5　应用剖析　　14
2.2　应用生命周期　　16
2.2.1　非运行状态——应用启动场景　　18
2.2.2　点击Home键——应用退出场景　　18
2.2.3　挂起重新运行场景　　21
2.2.4　内存清除：应用终止场景　　21
2.3　设置产品属性　　22
2.3.1　Xcode中的工程和目标　　22
2.3.2　设置常用的产品属性　　24
2.4　iOS API简介　　26
2.4.1　API概述　　26
2.4.2　如何使用API帮助文档　　26
2.5　小结　　28
第3章　Cocoa Touch框架与构建应用界面　　29
3.1　视图控制器　　29
3.1.1　视图控制器种类　　29
3.1.2　视图的生命周期　　29
3.2　视图　　30
3.2.1　UIView继承层次结构　　30
3.2.2　视图分类　　32
3.2.3　应用界面构建层次　　33
3.3　使用故事板构建界面　　34
3.3.1　什么是故事板　　34
3.3.2　场景和过渡　　37
3.4　使用XIB文件构建界面　　38
3.4.1　重构HelloWorld　　38
3.4.2　XIB与故事板比较　　42
3.5　使用纯代码构建界面　　42
3.5.1　重构HelloWorld　　42
3.5.2　视图的几个重要属性　　44
3.6　三种构建界面技术讨论　　46
3.6.1　所见即所得　　46
3.6.2　原型驱动开发　　46
3.6.3　团队协同开发　　47
3.7　小结　　47
第4章　UIView与视图　　48
4.1　标签与按钮　　48
4.1.1　Interface Builder实现　　48
4.1.2　代码实现　　51
4.2　事件处理　　53
4.2.1　Interface Builder实现　　53
4.2.2　代码实现　　55
4.3　访问视图　　57
4.3.1　Interface Builder实现　　57
4.3.2　代码实现　　58
4.4　TextField和TextView　　60
4.4.1　Interface Builder实现　　60
4.4.2　代码实现　　62
4.4.3　键盘的打开和关闭　　64
4.4.4　关闭和打开键盘的通知　　64
4.4.5　键盘的种类　　65
4.5　开关控件、分段控件和滑块控件　　67
4.5.1　开关控件　　67
4.5.2　分段控件　　69
4.5.3　滑块控件　　70
4.6　Web视图：WKWebView类　　72
4.7　警告框和操作表　　77
4.7.1　使用UIAlertController实现警告框　　77
4.7.2　使用UIAlertController实现操作表　　79
4.8　等待相关的控件与进度条　　81
4.8.1　活动指示器ActivityIndicatorView　　81
4.8.2　进度条ProgressView　　83
4.9　工具栏和导航栏　　86
4.9.1　工具栏　　86
4.9.2　导航栏　　90
4.10　小结　　95
第5章　委托协议、数据源协议与高级视图　　96
5.1　视图中的委托协议和数据源协议　　96
5.2　选择器　　96
5.2.1　日期选择器　　96
5.2.2　普通选择器　　101
5.2.3　数据源协议与委托协议　　106
5.3　集合视图　　108
5.3.1　集合视图的组成　　108
5.3.2　集合视图数据源协议与委托协议　　109
5.4　案例：奥运会比赛项目　　109
5.4.1　创建工程　　110
5.4.2　自定义集合视图单元格　　110
5.4.3　添加集合视图　　112
5.4.4　实现数据源协议　　114
5.4.5　实现委托协议　　115
5.5　小结　　115
第6章　表视图　　116
6.1　概述　　116
6.1.1　表视图的组成　　116
6.1.2　表视图的相关类　　117
6.1.3　表视图分类　　117
6.1.4　单元格的组成和样式　　119
6.1.5　数据源协议与委托协议　　121
6.2　简单表视图　　122
6.2.1　实现协议方法　　122
6.2.2　UIViewController根视图控制器　　123
6.2.3　UITableViewController根视图控制器　　129
6.3　自定义表视图单元格　　133
6.3.1　Interface Builder实现　　133
6.3.2　代码实现　　137
6.4　添加搜索栏　　138
6.5　分节表视图　　143
6.5.1　添加索引　　143
6.5.2　分组　　146
6.6　插入和删除单元格　　147
6.6.1　Interface Builder实现　　149
6.6.2　代码实现　　154
6.7　移动单元格　　155
6.8　表视图UI设计模式　　157
6.8.1　分页模式　　157
6.8.2　下拉刷新模式　　158
6.8.3　下拉刷新控件　　159
6.9　小结　　160
第7章　界面布局　　161
7.1　界面布局概述　　161
7.1.1　表单布局模式　　161
7.1.2　列表布局模式　　161
7.1.3　网格布局模式　　162
7.2　iOS中各种“栏”　　162
7.3　传统界面布局问题　　163
7.4　Auto Layout布局技术　　164
7.4.1　在Interface Builder中管理Auto Layout约束　　164
7.4.2　案例：Auto Layout布局　　164
7.5　静态表布局　　169
7.5.1　什么是静态表　　169
7.5.2　案例：iMessage应用登录界面　　170
7.6　使用堆视图StackView　　174
7.6.1　堆视图与布局　　174
7.6.2　案例：堆视图布局　　175
7.7　小结　　180
第8章　屏幕适配　　181
8.1　iOS 屏幕的多样性　　181
8.1.1　iOS屏幕介绍　　181
8.1.2　iOS的3种分辨率　　182
8.1.3　获得iOS设备的屏幕信息　　183
8.2　Size Class与iOS多屏幕适配　　184
8.2.1　在Xcode 6和Xcode 7中使用SizeClass技术　　184
8.2.2　Size Class的九宫格　　185
8.2.3　Size Class的四个象限　　186
8.2.4　在Xcode 8中使用Size Class　　187
8.2.5　案例：使用Size Class　　190
8.3　资源目录与图片资源适配　　192
8.4　小结　　195
第9章　视图控制器与导航模式　　196
9.1　概述　　196
9.1.1　视图控制器的种类　　196
9.1.2　导航模式　　196
9.2　模态视图　　197
9.2.1　Interface Builder实现　　199
9.2.2　代码实现　　205
9.3　平铺导航　　206
9.3.1　应用场景　　206
9.3.2　基于分屏导航的实现　　208
9.3.3　基于电子书导航的实现　　213
9.4　标签导航　　219
9.4.1　应用场景　　219
9.4.2　Interface Builder实现　　220
9.4.3　代码实现　　223
9.5　树形结构导航　　225
9.5.1　应用场景　　225
9.5.2　Interface Builder实现　　226
9.5.3　代码实现　　233
9.6　组合使用导航模式　　235
9.6.1　应用场景　　235
9.6.2　Interface Builder实现　　236
9.6.3　代码实现　　243
9.7　小结　　246
第10章　iPad应用开发　　247
10.1　iPad与iPhone应用开发的差异　　247
10.1.1　应用场景不同　　247
10.1.2　导航模式不同　　247
10.1.3　API不同　　247
10.2　iPad树形结构导航　　248
10.2.1 “邮件”应用中的树形结构导航　　248
10.2.2　Master-Detail应用程序模板　　249
10.2.3　使用Interface Builder实现SplitViewSample案例　　254
10.2.4　使用代码实现SplitViewSample案例　　258
10.3　iPad模态视图　　261
10.3.1 “邮件”应用中的模态导航　　261
10.3.2　iPad模态导航相关API　　262
10.3.3　使用Interface Builder实现ModalViewSample案例　　264
10.3.4　使用代码实现ModalViewSample案例　　268
10.4　Popover视图　　271
10.4.1　Popover相关API　　272
10.4.2　PopoverViewSample案例　　272
10.5　分屏多任务　　276
10.5.1　Slide Over多任务　　276
10.5.2　分屏视图多任务　　278
10.5.3　画中画多任务　　280
10.6　iPad分屏多任务适配开发　　280
10.6.1　分屏多任务前提条件　　280
10.6.2　分屏多任务适配　　281
10.7　小结　　282
第11章　手势识别　　283
11.1　手势种类　　283
11.2　手势识别器　　284
11.2.1　视图对象与手势识别　　284
11.2.2　手势识别状态　　285
11.2.3　实例：识别Tap手势　　285
11.2.4　实例：识别Long Press手势　　290
11.2.5　实例：识别Pan手势　　291
11.2.6　实例：Swipe手势　　293
11.2.7　实例：Rotation手势　　295
11.2.8　实例：Pinch手势　　297
11.2.9　实例：Screen Edge Pan手势　　299
11.3　小结　　301
第12章　Quartz 2D绘图技术　　302
12.1　绘制技术基础　　302
12.1.1　视图绘制周期　　302
12.1.2　实例：填充屏幕　　302
12.1.3　填充与描边　　305
12.1.4　绘制图像和文本　　306
12.2　Quartz图形上下文　　308
12.3　Quartz路径　　309
12.3.1　Quartz路径概述　　309
12.3.2　实例：使用贝塞尔曲线　　311
12.4　Quartz坐标变换　　312
12.4.1　坐标系　　312
12.4.2　2D图形的基本变换　　315
12.4.3　CTM变换　　317
12.4.4　仿射变换　　322
12.5　小结　　322
第13章　动画技术　　323
13.1　视图动画　　323
13.1.1　动画块　　323
13.1.2　动画结束的处理　　325
13.1.3　过渡动画　　326
13.2　Core Animation框架　　329
13.2.1　图层　　329
13.2.2　隐式动画　　331
13.2.3　显式动画　　333
13.2.4　关键帧动画　　335
13.2.5　使用路径　　336
13.3　小结　　338
第二部分　数据与网络通信篇
第14章　数据持久化　　340
14.1　概述　　340
14.1.1　沙箱目录　　340
14.1.2　持久化方式　　341
14.2　实例：MyNotes应用　　341
14.3　属性列表　　343
14.4　使用SQLite数据库　　349
14.4.1　SQLite数据类型　　350
14.4.2　添加SQLite3库　　350
14.4.3　配置Swift环境　　351
14.4.4　创建数据库　　351
14.4.5　查询数据　　353
14.4.6　修改数据　　355
14.5　iOS 10中的Core Data技术　　357
14.5.1　对象关系映射技术　　357
14.5.2　添加Core Data支持　　358
14.5.3　Core Data栈　　359
14.6　案例：采用Core Data重构MyNotes应用　　360
14.6.1　建模和生成实体　　360
14.6.2　Core Data栈DAO　　366
14.6.3　查询数据　　367
14.6.4　修改数据　　369
14.7　小结　　370
第15章　数据交换格式　　371
15.1　XML数据交换格式　　372
15.1.1　XML文档结构　　372
15.1.2　解析XML文档　　373
15.2　案例：MyNotes应用读取XML数据　　374
15.2.1　使用NSXML解析　　376
15.2.2　使用TBXML解析　　379
15.3　JSON数据交换格式　　385
15.3.1　JSON文档结构　　385
15.3.2　JSON数据编码/解码　　386
15.4　案例：MyNotes应用JSON解码　　387
15.5　小结　　388
第16章　REST Web Service　　389
16.1　概述　　389
16.1.1　REST Web Service概念　　389
16.1.2　HTTP协议　　389
16.1.3　HTTPS协议　　390
16.1.4　苹果ATS限制　　390
16.2　使用NSURLSession　　391
16.2.1　NSURLSession API　　392
16.2.2　简单会话实现GET请求　　393
16.2.3　默认会话实现GET请求　　396
16.2.4　实现POST请求　　397
16.2.5　下载数据　　398
16.3　实例：使用NSURLSession重构MyNotes案例　　400
16.3.1　插入方法　　401
16.3.2　修改方法　　402
16.3.3　删除方法　　402
16.4　使用AFNetworking框架　　405
16.4.1　比较ASIHTTPRequest、AFNetwork-ing和MKNetworkKit　　405
16.4.2　安装和配置AFNetworking框架　　405
16.4.3　实现GET请求　　407
16.4.4　实现POST请求　　408
16.4.5　下载数据　　408
16.4.6　上传数据　　410
16.5　使用为Swift设计的网络框架：Alamofire　　412
16.5.1　安装和配置Alamofire框架　　412
16.5.2　实现GET请求　　413
16.5.3　实现POST请求　　414
16.5.4　下载数据　　414
16.5.5　上传数据　　415
16.6　反馈网络信息改善用户体验　　416
16.6.1　使用下拉刷新控件改善用户体验　　416
16.6.2　使用活动指示器控件　　419
16.6.3　使用网络活动指示器　　420
16.7　小结　　421
第三部分　进　阶　篇
第17章　定位服务　　424
17.1　定位服务概述　　424
17.1.1　定位服务编程　　425
17.1.2　测试定位服务　　428
17.2　管理定位服务　　432
17.2.1　应用启动与停止下的定位服务管理　　432
17.2.2　视图切换下的定位服务管理　　432
17.2.3　应用前后台切换下的定位服务管理　　433
17.2.4　设置自动暂停位置服务　　436
17.2.5　后台位置服务管理　　436
17.3　地理信息编码与反编码　　437
17.3.1　地理信息反编码　　437
17.3.2　实例：地理信息反编码　　437
17.3.3　地理信息编码查询　　438
17.3.4　实例：地理信息编码查询　　439
17.4　小结　　440
第18章　苹果地图应用　　441
18.1　使用iOS苹果地图　　441
18.1.1　显示地图　　441
18.1.2　显示3D地图　　445
18.2　添加标注　　446
18.2.1　实现查询　　447
18.2.2　在地图上添加标注　　449
18.3　跟踪用户位置变化　　450
18.4　使用程序外地图　　451
18.5　小结　　454
第19章　访问通讯录　　455
19.1　通讯录的安全访问设置　　455
19.2　使用Contacts框架读取联系人信息　　456
19.2.1　查询联系人　　457
19.2.2　读取单值属性　　460
19.2.3　读取多值属性　　461
19.2.4　读取图片属性　　464
19.3　使用Contacts框架写入联系人信息　　464
19.3.1　创建联系人　　465
19.3.2　修改联系人　　467
19.3.3　删除联系人　　468
19.4　使用系统提供的界面　　469
19.4.1　选择联系人　　470
19.4.2　显示和修改联系人　　472
19.5　小结　　475
第20章　iOS 10应用扩展　　476
20.1　应用扩展概述　　476
20.1.1　iOS 10应用扩展种类　　476
20.1.2　应用扩展工作原理　　477
20.1.3　应用扩展的生命周期　　478
20.2　Today应用扩展　　478
20.2.1　使用Today应用扩展　　479
20.2.2　实例：奥运会倒计时牌　　480
20.3　开发表情包　　483
20.3.1　iMessage应用　　483
20.3.2　表情包　　484
20.3.3　实例：开发表情包　　484
20.4　Message框架　　488
20.4.1　Message框架的主要API　　488
20.4.2　消息布局　　488
20.4.3　消息扩展界面的收缩和展开　　489
20.4.4　消息应用的生命周期　　490
20.4.5　消息会话　　490
20.4.6　实例：高斯模糊滤镜　　491
20.5　小结　　494
第21章　重装上阵的iOS 10用户通知　　495
21.1　用户通知概述　　495
21.1.1　通知种类　　495
21.1.2　通知界面　　495
21.1.3　设置通知　　497
21.2　开发本地通知　　498
21.2.1　开发本地通知案例　　498
21.2.2　请求授权　　500
21.2.3　通知的创建与发送　　501
21.2.4　通知接收后的处理　　503
21.3　开发推送通知　　503
21.3.1　推送通知机理　　504
21.3.2　生成SSL证书　　504
21.3.3　iOS客户端编程　　513
21.3.4　在iOS设备上运行客户端　　515
21.3.5　内容提供者推送通知　　518
21.4　小结　　519
第四部分　测试、调试和优化篇
第22章　找出程序中的bug——调试　　522
22.1　Xcode调试工具　　522
22.1.1　定位编译错误　　522
22.1.2　查看和显示日志　　523
22.1.3　设置和查看断点　　524
22.1.4　调试工具　　530
22.1.5　输出窗口　　532
22.1.6　变量查看窗口　　532
22.1.7　查看线程　　533
22.2　LLDB调试工具　　535
22.2.1　断点命令　　535
22.2.2　观察点命令　　537
22.2.3　查看变量和计算表达式命令　　538
22.3　日志与断言输出　　541
22.3.1　使用NSLog函数　　541
22.3.2　使用断言　　542
22.4　异常栈报告分析　　543
22.4.1　跟踪异常栈　　543
22.4.2　分析栈报告　　545
22.5　在iOS设备上调试　　546
22.5.1　Xcode设置　　546
22.5.2　设备设置　　546
22.6　Xcode设备管理工具　　548
22.6.1　查看设备上的应用程序　　548
22.6.2　设备日志　　550
22.7　小结　　551
第23章　iOS测试驱动与单元测试　　552
23.1　测试驱动的软件开发概述　　552
23.1.1　测试驱动的软件开发流程　　552
23.1.2　测试驱动的软件开发案例　　553
23.1.3　iOS单元测试框架　　555
23.2　使用XCTest测试框架　　555
23.2.1　添加XCTest到工程　　555
23.2.2　编写XCTest测试方法　　558
23.2.3　运行测试用例目标　　561
23.2.4　分析测试报告　　562
23.3　异步单元测试　　564
23.4　性能测试　　567
23.4.1　测试用例代码　　568
23.4.2　分析测试结果　　568
23.5　小结　　571
第24章　iOS应用UI测试　　572
24.1　UI测试概述　　572
24.2　添加UI测试到工程　　572
24.2.1　创建工程时添加UI测试框架　　572
24.2.2　在现有工程中添加UI测试用例目标　　573
24.3　录制脚本　　575
24.3.1　录制之前的准备　　575
24.3.2　录制过程　　575
24.3.3　修改录制脚本　　577
24.4　访问UI元素　　577
24.4.1　UI元素的层次结构树　　577
24.4.2　UI测试中相关API　　579
24.5　表示逻辑组件测试最佳实践　　579
24.5.1　备忘录查询操作　　580
24.5.2　增加备忘录操作　　580
24.5.3　删除备忘录操作　　581
24.5.4　显示备忘录详细信息操作　　582
24.6　小结　　582
第25章　让你的程序“飞”起来——性能优化　　583
25.1　内存优化　　583
25.1.1　内存管理　　583
25.1.2　使用Analyze工具检查内存泄漏　　583
25.1.3　使用Instruments工具检查内存泄漏　　587
25.1.4　使用Instruments工具检查僵尸对象　　592
25.1.5　autorelease的使用问题　　594
25.1.6　响应内存警告　　595
25.2　优化资源文件　　596
25.2.1　图片文件优化　　597
25.2.2　音频文件优化　　598
25.3　延迟加载　　599
25.3.1　资源文件的延迟加载　　599
25.3.2　故事板文件的延迟加载　　603
25.3.3　XIB文件的延迟加载　　605
25.4　数据持久化的优化　　607
25.4.1　使用文件　　607
25.4.2　使用SQLite数据库　　611
25.4.3　使用Core Data　　612
25.5　可重用对象的使用　　613
25.5.1　表视图中的可重用对象　　614
25.5.2　集合视图中的可重用对象　　615
25.5.3　地图视图中的可重用对象　　617
25.6　并发处理　　618
25.6.1　一些概念　　618
25.6.2　主线程阻塞问题　　618
25.6.3　选择NSThread、NSOperation还是GCD　　619
25.6.4　GCD技术　　619
25.7　小结　　620
第五部分　实　战　篇
第26章　管理好你的程序代码——代码版本控制　　622
26.1　概述　　622
26.1.1　版本控制历史　　622
26.1.2　基本概念　　623
26.2　Git代码版本控制　　623
26.2.1　服务器搭建　　623
26.2.2　Gitolite服务器管理　　625
26.2.3　Git常用命令　　627
26.2.4　Git分支　　628
26.2.5　Git协同开发　　632
26.2.6　Xcode中Git的配置与使用　　634
26.3　GitHub代码托管服务　　642
26.3.1　创建和配置GitHub账号　　642
26.3.2　创建代码库　　645
26.3.3　删除代码库　　646
26.3.4　派生代码库　　647
26.3.5　管理组织　　650
26.4　小结　　653
第27章　项目依赖管理　　654
27.1　使用CocoaPods工具管理依赖　　654
27.1.1　安装CocoaPods　　654
27.1.2　搜索库　　655
27.1.3　项目与第三方库搭配形式　　656
27.1.4　实例：静态链接库形式管理依赖　　657
27.1.5　实例：框架形式管理依赖　　659
27.2　使用Carthage工具管理依赖　　660
27.2.1　安装Carthage　　660
27.2.2　项目与第三方库搭配形式　　661
27.2.3　Cartfile文件　　661
27.2.4　实例：重构MyNotes依赖关系　　662
27.3　小结　　664
第28章　把应用放到App Store上　　665
28.1　收官　　665
28.1.1　在Xcode 中添加图标　　665
28.1.2　在Xcode中添加启动界面　　668
28.1.3　调整Identity和Deployment Info属性　　671
28.2　为发布进行编译　　672
28.2.1　创建开发者证书　　672
28.2.2　创建App ID　　675
28.2.3　创建描述文件　　676
28.2.4　发布编译　　679
28.3　发布上架　　680
28.3.1　创建应用　　681
28.3.2　应用定价　　683
28.3.3　基本信息输入　　684
28.3.4　上传应用　　687
28.3.5　提交审核　　689
28.4　常见审核不通过的原因　　691
28.4.1　功能问题　　691
28.4.2　用户界面问题　　691
28.4.3　商业问题　　691
28.4.4　不当内容　　691
28.4.5　其他问题　　692
28.5　小结　　692
第29章　iOS开发项目实战——2020东京奥运会应用开发及 App Store发布　　693
29.1　应用分析与设计　　693
29.1.1　应用概述　　693
29.1.2　需求分析　　693
29.1.3　原型设计　　694
29.1.4　数据库设计　　694
29.2　任务1：创建应用工程　　695
29.2.1　迭代1.1：创建工程　　696
29.2.2　迭代1.2：发布到GitHub　　696
29.3　任务2：数据库与数据持久化逻辑组件开发　　696
29.3.1　迭代2.1：编写数据库DDL脚本　　696
29.3.2　迭代2.2：插入初始数据到数据库　　697
29.3.3　迭代2.3：数据库版本控制　　697
29.3.4　迭代2.4：配置数据持久化逻辑组件　　698
29.3.5　迭代2.5：编写实体类　　698
29.3.6　迭代2.6：编写DAO类　　700
29.3.7　迭代2.7：数据库帮助类DBHelper　　704
29.3.8　迭代2.8：发布到GitHub　　706
29.4　任务3：表示逻辑组件开发　　706
29.4.1　迭代3.1：使用资源目录管理图片和图标资源　　707
29.4.2　迭代3.2：根据原型设计初步设计故事板　　708
29.4.3　迭代3.3：“首页”模块　　709
29.4.4　迭代3.4：“比赛项目”模块　　710
29.4.5　迭代3.5：“比赛日程”模块　　714
29.4.6　迭代3.6：“倒计时”模块　　718
29.4.7　迭代3.7：“关于我们”模块　　719
29.4.8　迭代3.8：发布到GitHub　　720
29.5　任务4：收工　　720
29.5.1　迭代4.1：添加图标　　720
29.5.2　迭代4.2：设计和添加启动界面　　720
29.5.3　迭代4.3：性能测试与改善　　721
29.5.4　迭代4.4：发布到GitHub　　722
29.5.5　迭代4.5：在App Store上发布应用　　722
29.6　小结　　722
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS开发指南：从Hello World到App Store上架（第5版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>《iOS实战：入门与提高卷（Swift版）》
第1章开始
1.1iOS概述
1.1.1iOS介绍
1.1.2iOS 8新特性
1.2开发环境及开发工具
1.3本书约定
1.3.1实例代码约定
1.3.2图示约定
1.3.3方法命名约定
1.3.4构造器命名约定
1.4创建HelloiOS工程
1.4.1创建工程
1.4.2Xcode中的iOS工程模板
1.4.3应用剖析
1.4.4应用生命周期
1.4.5Xcode中的Project和Target
1.4.6常用的产品属性
1.5iOS API简介
1.5.1API概述
1.5.2如何使用API帮助
1.6小结
第2章Cocoa Touch MVC设计模式
2.1MVC模式
2.1.1MVC模式概述
2.1.2Cocoa Touch MVC模式
2.2视图控制器
2.2.1视图控制器种类
2.2.2视图控制器生命周期
2.3视图与UIView
2.3.1UIView继承层次结构
2.3.2视图分类
2.3.3应用界面的构建层次
2.4界面构建技术
2.4.1使用故事板
2.4.2使用Xib文件
2.4.3使用代码
2.5小结
第3章视图
3.1控件与动作事件
3.1.1按钮
3.1.2定义动作事件
3.2视图与输出口
3.2.1标签
3.2.2定义输出口
3.3视图与委托协议
3.3.1委托设计模式
3.3.2实例： TextField委托协议
3.3.3键盘的打开和关闭
3.3.3键盘的种类
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>《iOS实战：入门与提高卷（Swift版）》
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Swift编程实战
前言 1
第1章 基础知识 9
第2章 扩展 107
第3章 使用HealthKit管理健康数据 149
第4章 使用HomeKit管理家用电器 189
第5章 创建有动态交互性的用户界面 228
第6章 表格视图和集合视图 252
第7章 并发和多任务 289
第8章 安全 336
第9章 Core Location、iBeacon和地图 370
第10章 手势识别 403
第11章 网络与分享 420
第12章 多媒体 451
第13章 通讯录 474
第14章 文件与文件夹管理 500
第15章 摄像头和照片库 521
第16章 通知 556
第17章 Core Data 594
第18章 日期、日历和事件 628
第19章 图形和动画 657
第20章 Core Motion 708
第21章 Cloud 724
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Swift编程实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>養成 iOS 7 App 程式設計實力的30堂課
Chapter 01　Hello World！開始你的第一個iPhone App
Chapter 02　Hello World App 是如何運作的？
Chapter 03　建立一個簡單的表格App
Chapter 04　使用Prototype Cell 自訂表格視圖
Chapter 05　處理表格視圖列的點選
Chapter 06　表格列刪除與模型－視圖－控制器
Chapter 07　使用Property List 來加強你的表格App
Chapter 08　幫你的iOS App 加上啟動畫面
Chapter 09　建立導覽控制器
Chapter 10　在不同視圖控制器間傳遞資料
Chapter 11　學習如何使用標籤欄控制器與網頁視圖
Chapter 12　物件導向程式語言介紹
Chapter 13　以更棒的視圖控制器來改善你的食譜App
Chapter 14　幫表格視圖加上搜尋欄
Chapter 15　使用UICollectionView建立網格佈局（Grid Layout）
Chapter 16　幫UICollectionView加上標頭及註腳視圖
Chapter 17　處理集合視圖的選取動作
Chapter 18　Core DataⅠ：Core Data 介紹
Chapter 19　Core Data Ⅱ：更新與刪除託管物件
Chapter 20　App 本地化－支援多國語系
Chapter 21　使用Storyboard 建立靜態表格視圖
Chapter 22　建立一個簡單的RSS閱讀器
Chapter 23　使用UIImagePickerController建構一個簡單相機App
Chapter 24　影片錄製與播放
Chapter 25　幫你的iOS App 加入本地通知
Chapter 26　要如何使用UIPageViewController來建立導引畫面
Chapter 27　加入側邊滑動選單到你的App
Chapter 28　運用Parse 為你的iOS App 加上雲端後台Ⅰ
Chapter 29　運用Parse 為你的iOS App 加上雲端後台Ⅱ
Chapter 30　AirDrop
Appendix A　Objective-C基礎
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>養成 iOS 7 App 程式設計實力的30堂課
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>疯狂iOS讲义（基础篇）
第1章　iOS应用与开发环境	1
1.1  iOS简介及其开发语言	2
1.1.1  Swift简介	2
1.1.2　Objective-C简介	2
1.1.3　iOS简介	3
1.2　搭建iOS开发环境	4
1.2.1　下载并安装Xcode和SDK	4
1.3　第一个Objective-C程序	7
1.3.1　使用文本编辑器开发Objective-C程序	7
1.3.2  使用Xcode工具开发Objective-C程序	9
1.4  熟悉Xcode	11
1.4.1  创建iOS项目	11
1.4.2  熟悉导航面板	13
1.4.3  熟悉检查器面板	16
1.4.4  熟悉库面板	17
1.4.5  使用Xcode的帮助系统	19
1.5  本章小结	21
第2章　数据类型和运算符	22
2.1  注释	23
2.2  标识符和变量	24
2.2.1  分隔符	24
2.2.2  标识符规则	26
2.2.3  Objective-C关键字	26
2.3  数据类型分类	26
2.4  基本数据类型	27
2.4.1  整型	27
2.4.2  NSLog输出函数及格式字符	28
2.4.3  字符型	30
2.4.4  浮点型	31
2.4.5  枚举型	32
2.4.6  BOOL类型	34
2.5  类型转换	35
2.5.1  自动类型转换	36
2.5.2  强制类型转换	37
2.5.3  表达式类型的自动提升	37
2.6  运算符	38
2.6.1  算术运算符	38
2.6.2  赋值运算符	41
2.6.3  位运算符	41
2.6.4  扩展后的赋值运算符	43
2.6.5  比较运算符	44
2.6.6  逻辑运算符	45
2.6.7  逗号运算符	45
2.6.8  三目运算符	46
2.6.9  运算符的结合性和优先级	47
2.7  本章小结	48
第3章　流程控制与数组	49
3.1  顺序结构	50
3.2  分支结构	50
3.2.1  if条件语句	50
3.2.2  switch分支语句	54
3.3  循环结构	56
3.3.1  while循环语句	56
3.3.2  do while循环语句	58
3.3.3  for循环	59
3.3.4  嵌套循环	62
3.4  控制循环结构	63
3.4.1  使用break结束循环	63
3.4.2  使用continue结束本次循环	64
3.4.3  使用return结束函数	64
3.5  goto语句	65
3.6  数组	67
3.6.1  定义数组	67
3.6.2  数组的显式初始化	68
3.6.3  使用数组	69
3.6.4  多维数组	70
3.6.5  多维数组的初始化	71
3.6.6  字符数组、字符串与结束标志	77
3.6.7  输出字符串和字符串函数	78
3.6.8  数组的应用举例	80
3.7  本章小结	81
第4章　C语言特性	82
4.1  函数	83
4.1.1  定义函数	83
4.1.2  函数声明	86
4.1.3  函数的参数传递机制	87
4.1.4  递归函数	91
4.1.5  数组作为函数参数	92
4.1.6  内部函数与外部函数	96
4.2  局部变量与全局变量	98
4.2.1  局部变量	98
4.2.2  全局变量	99
4.2.3  外部全局变量与内部全局变量	101
4.2.4  动态存储与静态存储	102
4.3  预处理	105
4.3.1  使用#define、#undef执行宏定义	105
4.3.2  带参数的宏定义	107
4.3.3  使用#ifdef、#ifndef、#else、#endif执行条件编译	108
4.3.4  使用#if、#elif、#else、#endif执行条件编译	110
4.3.5  #include与#import	111
4.4  指针	112
4.4.1  指针的概念	112
4.4.2  指针变量及其基本用法	113
4.4.3  指针变量作为函数参数	115
4.5  指针与数组	117
4.5.1  指向数组的指针变量	117
4.5.2  指针运算	118
4.5.3  数组变量作为函数参数	120
4.5.4  指向多维数组的指针变量	122
4.6  字符串与指针	124
4.6.1  使用字符指针表示字符串	125
4.6.2  字符指针作为函数参数	125
4.7  函数与指针	127
4.7.1  用函数指针变量调用函数	127
4.7.2  用函数指针变量作为函数参数	128
4.7.3  返回指针的函数	129
4.8  指针数组和指向指针变量的指针	131
4.8.1  指针数组与main()函数形参	131
4.8.2  指向指针变量的指针	134
4.9  结构体	134
4.9.1  定义结构体	134
4.9.2  typedef语句	136
4.9.3  初始化结构体变量	138
4.9.4  结构体数组	139
4.10  块	140
4.10.1  块的基本语法	140
4.10.2  块与局部变量	141
4.10.3  直接使用块作为参数	142
4.10.4  使用typedef定义块类型	143
4.11  本章小结	144
第5章　面向对象（上）	145
5.1  类和对象	146
5.1.1  定义类	146
5.1.2  对象的产生和使用	150
5.1.3  对象和指针	152
5.1.4  self关键字	154
5.1.5  id类型	157
5.2  方法详解	158
5.2.1  方法的所属性	158
5.2.2  形参个数可变的方法	159
5.3  成员变量	160
5.3.1  成员变量及其运行机制	160
5.3.2  模拟类变量	163
5.3.3  单例（Singleton）模式	164
5.4  隐藏和封装	165
5.4.1  理解封装	165
5.4.2  使用访问控制符	165
5.4.3  理解@package访问控制符	169
5.4.4  合成存取方法	170
5.4.5  使用点语法访问属性	176
5.5  键值编码（KVC）与键值监听（KVO）	176
5.5.1  简单的KVC	177
5.5.2  处理不存在的key	179
5.5.3  处理nil值	181
5.5.4  key路径	182
5.5.5  键值监听（KVO）	184
5.6  对象初始化	187
5.6.1  为对象分配空间	187
5.6.2  初始化方法与对象初始化	187
5.6.3  便利的初始化方法	189
5.7  类的继承	191
5.7.1  继承的特点	191
5.7.2  重写父类的方法	193
5.7.3  super关键字	194
5.8  多态	197
5.8.1  多态性	197
5.8.2  指针变量的强制类型转换	200
5.8.3  判断指针变量的实际类型	201
5.9  本章小结	202
第6章　面向对象（下）	203
6.1  Objective-C的包装类	204
6.1.1  它们不是包装类	204
6.1.2  NSValue和NSNumber	205
6.2  处理对象	206
6.2.1  打印对象和description方法	206
6.2.2  ==和isEqual:方法	208
6.3  类别与扩展	212
6.3.1  类别（category）	213
6.3.2  利用类别对类进行模块化设计	215
6.3.3  使用类别来调用私有方法	215
6.3.4  扩展（extension）	217
6.4  协议（protocol）与委托	219
6.4.1  规范、协议与接口	219
6.4.2  使用类别实现非正式协议	220
6.4.3  正式协议的定义	221
6.4.4  遵守（实现）协议	222
6.4.5  协议与委托（delegate）	225
6.5  使用@try处理异常	228
6.5.1  使用@try...@catch...@finally捕获异常	229
6.5.2  访问异常信息	231
6.5.3  使用@finally回收资源	232
6.5.4  抛出异常与自定义异常类	233
6.6  Objective-C反射机制	235
6.6.1  获得Class	235
6.6.2  检查继承关系	236
6.6.3  动态调用方法	237
6.7  手动内存管理	241
6.7.1  对象的引用计数	242
6.7.2  对象所属权	245
6.7.3  方法中的保留和释放	247
6.7.4  使用自动释放池	248
6.7.5  自动释放池的销毁时机与工作过程	250
6.7.6  临时对象与事件循环中的自动释放池	251
6.7.7  手动内存管理的规则总结	252
6.8  自动引用计数	253
6.8.1  自动引用计数概述	253
6.8.2  @autoreleasepool块	254
6.8.3  使用弱引用解决强引用循环	255
6.9  本章小结	258
第7章　Foundation框架详解	259
7.1  字符串（NSString与NSMutableString）	260
7.1.1  创建字符串	260
7.1.2  NSString的常用功能	261
7.1.3  可变字符串（NSMutableString）	262
7.2  日期与时间	263
7.2.1  日期与时间（NSDate）	264
7.2.2  日期格式器（NSDateFormatter）	265
7.2.3  日历（NSCalendar）与日期组件（NSDateComponents）	267
7.2.4  定时器（NSTimer）	268
7.3  对象复制	270
7.3.1  copy与mutableCopy方法	270
7.3.2  NSCopying与NSMutableCopying协议	271
7.3.3  浅复制与深复制	274
7.3.4  setter方法的复制选项	276
7.4  Objective-C集合概述	277
7.5  数组（NSArray与NSMutableArray）	278
7.5.1  NSArray的功能与用法	278
7.5.2  对集合元素整体调用方法	282
7.5.3  对NSArray进行排序	284
7.5.4  使用枚举器遍历NSArray集合元素	285
7.5.5  快速枚举（for-in）	286
7.5.6  可变数组（NSMutableArray）	287
7.5.7  NSArray的KVC与KVO	289
7.6  集合（NSSet与NSMutableSet）	290
7.6.1  NSSet的功能与用法	290
7.6.2  NSSet判断集合元素重复的标准	293
7.6.3  NSMutableSet的功能与用法	295
7.6.4  NSCountedSet的功能与用法	297
7.7  有序集合（NSOrderedSet与NSMutableOrderedSet）	298
7.8  字典（NSDictionary与NSMutableDictionary）	299
7.8.1  NSDictionary的功能与用法	300
7.8.2  对NSDictionary的key排序	303
7.8.3  对NSDictionary的key进行过滤	305
7.8.4  使用自定义类作为NSDictionary的key	306
7.8.5  NSMutableDictionary的功能与用法	307
7.9  谓词	308
7.9.1  定义谓词	308
7.9.2  使用谓词过滤集合	310
7.9.3  在谓词中使用占位符参数	311
7.9.4  谓词表达式语法	313
7.10  本章小结	315
第8章　文件I/O	316
8.1  使用NSData与NSMutableData	317
8.2  使用NSFileManager管理文件和目录	318
8.2.1  访问文件属性和内容	319
8.2.2  创建、删除、移动、复制	320
8.2.3  查看目录包含的内容	321
8.3  使用NSPathUtilities.h管理路径	322
8.4  使用NSProcessInfo获取进程信息	324
8.5  使用NSFileHandle处理文件IO	326
8.6  使用NSURL读取网络资源	328
8.7  使用NSBundle处理项目相关资源	329
8.8  对象归档	330
8.8.1  使用NSKeyedArchiver归档	330
8.8.2  实现NSCoding协议	332
8.8.3  使用NSData完成自定义归档	335
8.8.4  使用归档实现深复制	337
8.9  本章小结	338
第9章　iOS应用开发入门	339
9.1  从iOS项目开始	340
9.1.1  iOS项目包含的文件	340
9.1.2  Interface Builder简介	341
9.1.3  添加控件	343
9.1.4  修改控件属性	344
9.1.5  UIView支持的属性	346
9.1.6  UILabel支持的属性	348
9.2  MVC	350
9.2.1  程序入口和应用程序代理	350
9.2.2  理解iOS的MVC	354
9.2.3  掌握UIViewController控制器	355
9.3  事件机制	357
9.3.1  程序获取控件的两种方式	357
9.3.2  事件处理的三种方式	363
9.4  代码控制UI界面	370
9.4.1  不使用界面设计文件开发UI界面	370
实例：无界面设计文件开发iOS应用	370
9.4.2  使用代码创建UI界面	373
实例：动态添加、删除标签	373
9.4.3  自定义UI控件	376
实例：跟随手指运动的小球	376
9.5  美化iOS应用	379
9.5.1  定制iOS应用图标	379
9.5.2  定制iOS应用的启动画面	380
9.6  本章小结	382
第10章　iOS界面编程之基础控件	383
10.1  UI控件概述	384
10.1.1  活动、静态和被动控件	384
10.1.2  UIControl基类介绍	384
10.2  按钮（UIButton）	385
实例：丰富多彩的按钮	388
10.3  文本框控件（UITextField）	391
实例：用户登录界面	393
10.3.1  完成输入后关闭键盘	395
10.3.2  触碰背景关闭键盘	396
10.4  多行文本控件（UITextView）	397
10.4.1  UIScrollView支持的属性	398
10.4.2  使用委托对象处理UITextView事件	400
实例1：通过导航按钮关闭虚拟键盘	400
实例2：通过自定义键盘附件关闭虚拟键盘	403
10.4.3  自定义选择内容后的菜单	405
10.5  开关按钮（UISwitch）	407
实例：使用开关控制“手电筒”	408
10.6  分段控件（UISegmentedControl）	409
实例：通过分段控件控制背景颜色	410
10.7  图像控件（UIImageView）	411
实例1：图片浏览器	412
实例2：“幻灯片”播放器	415
10.8  进度条	416
10.8.1  UIProgressView	416
实例：定制进度条	418
10.8.2  UIActivityIndicatorView	420
10.9  拖动条（UISlider）	422
实例：通过拖动滑块改变图片透明度	423
10.10  iOS 9的警告框（UIAlertController）	424
10.10.1  弹出式警告框	425
10.10.2  带输入框的警告框	427
10.11  日期选择器（UIDatePicker）	429
10.12  选择器（UIPickerView）	431
10.12.1  单列选择器	432
10.12.2  多列选择器	435
10.12.3  相互依赖的多列选择器	436
10.12.4  自定义选择器视图	438
实例：“老虎机”游戏	439
10.13  iOS 8新增的UIVisualEffectView	442
10.14  微调器（UIStepper）	445
10.15  网页控件（UIWebView）	448
实例：迷你浏览器	450
10.16  工具条（UIToolBar）	453
实例：自定义工具条控件	455
10.17  本章小结	457
第11章　高级控件与特殊视图控制器	458
11.1  iOS 9新增的UIStackView	459
实例：嵌套UIStackView实现复杂界面	464
11.2  表格（UITableView）与表格控制器（UITableViewController）	466
11.2.1  简单表格	469
11.2.2  处理单元格的选中	473
实例：编辑选中行	473
11.2.3 定制表格行	478
实例1：继承UITableViewCell定制表格行	478
实例2：使用动态单元格原型定制表格行	481
11.2.4  编辑表格	483
11.2.5  多分区表格以及分区索引	488
11.2.6  直接使用UITableViewController	490
11.2.7  静态单元格	492
11.2.8  使用UIRefreshController刷新表格	494
11.3  搜索条（UISearchBar）	496
11.3.1  使用搜索条	498
11.3.2  使用UISearchController	500
11.4  导航条（UINavigationBar）与导航控制器（UINavigationController）	503
11.4.1  使用导航条	503
11.4.2  使用UINavigationController	506
实例：查看、编辑图书信息	508
11.4.3  使用segue导航	513
11.5　segue详解	517
11.5.1　使用segue控制过渡	517
11.5.2  Xcode 7新增的Storyboard Reference	521
11.6　网格（UICollectionView）与网格控制器（UICollectionViewController）	524
11.6.1  UICollectionView的功能与用法	526
11.6.2  使用UICollectionViewDelegate- FlowLayout定制布局	531
实例：单元格大小不同的网格	532
11.6.3  扩展UICollectionViewLayout定制布局	534
实例：环形布局的UICollectionView	535
11.6.4  多分区网格	539
实例：带页眉、页脚的多分区网格	539
11.6.5  直接使用UICollectionViewController	543
11.7  标签条（UITabBar）与标签页控制器（UITabBarController）	547
11.7.1  使用UITabBar	547
11.7.2  使用UITabBarController	548
11.7.3  在Storyboard中使用UITabBarController	552
11.8  页控件（UIPageControl）与页控制器（UIPageViewController）	553
11.8.1  UIPageControl与UIScrollView结合使用	553
11.8.2  使用UIPageViewController	558
11.9  iPad应用开发	562
11.10  本章小结	571
第12章　管理iOS应用的运行	572
12.1  iOS设备尺寸和自动旋转机制	573
12.1.1  配置应用支持的方向	573
12.1.2  指定视图控制器支持的方向	575
12.2  旋转时重构用户界面	576
12.3  自动布局	580
12.3.1  自动布局的添加方式	580
12.3.2  使用自动布局适应不同尺寸的屏幕	585
12.3.3  使用Size Class适应屏幕旋转	589
12.4  iOS应用的生命周期	594
12.4.1  应用程序的状态	594
12.4.2  应用程序启动过程	595
12.4.3  程序入口：main函数	596
12.4.4  响应中断	597
12.4.5  进入后台	599
12.4.6  返回前台运行	600
12.4.7  应用程序中止	601
12.4.8  Main Run Loop	601
12.5  本章小结	602
第13章　图形、图像与动画	603
13.1  使用UIImage和CGImage处理位图	604
13.1.1  显示动画	604
13.1.2  UIImage与CGImage	606
13.2  Quartz 2D绘图	606
13.2.1  Quartz 2D绘图基础：CGContextRef	607
13.2.2  绘制几何图形	610
13.2.3  点线模式	612
13.2.4  绘制文本	616
13.2.5  设置阴影	618
13.2.6  使用路径	619
实例：绘制任意多角星	623
13.2.7  绘制曲线	624
实例：使用曲线绘制多瓣花朵	626
13.2.8  在内存中绘图	627
实例：绘图板	630
13.2.9  绘制位图	635
实例：扩展UIImage的功能	635
13.3  图形变换	640
13.3.1  使用坐标变换	640
13.3.2  坐标变换与路径结合使用	642
实例：雪花飘飘	642
13.3.3  使用矩阵变换	644
13.4  控制叠加模式	647
13.5  处理填充	652
13.5.1  渐变填充	653
13.5.2  模式填充	658
13.6  动画	665
13.6.1  Core Animation动画基础	665
13.6.2  使用CALayer	666
13.6.3  使用CATransition控制过渡动画	669
13.6.4  使用属性动画	674
13.6.5  控制移动路径	679
实例：绕圈游动的小鱼	679
13.7  本章小结	682
第14章　疯狂连连看	683
14.1  游戏简介	684
14.2  开发游戏界面	685
14.2.1  开发界面布局	685
14.2.2  开发游戏界面控件	686
14.2.3  处理方块之间的连接线	692
14.3  游戏的状态数据模型	693
14.3.1  定义数据模型	694
14.3.2  初始化游戏状态数据	694
14.4  加载界面的图片	699
14.5  实现游戏视图控制器	701
14.6  实现游戏逻辑	703
14.6.1  GameService分析与初步实现	703
14.6.2  获取触碰点的方块	704
14.6.3  判断两个方块是否可以相连	706
14.6.4  定义获取通道的工具方法	707
14.6.5  没有转折点的横向连接	709
14.6.6  没有转折点的纵向连接	710
14.6.7  有一个转折点的连接	711
14.6.8  有两个转折点的连接	714
14.6.9  找出最短距离	723
14.7  本章小结	726
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>疯狂iOS讲义（基础篇）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS编程入门经典(第4版)
目    录
第1章  从编写一个真正的iOS App开始：Bands	1
1.1  Bands App介绍	2
1.2  正式开始	3
1.2.1  定义App的功能范围	4
1.2.2  功能定义	5
1.2.3  制定开发计划	6
1.3  小结	6
第2章  Objective-C介绍	9
2.1  Objective-C的历史	9
2.2  基础知识	10
2.2.1  对象和类	12
2.2.2  实例化一个对象	16
2.2.3  内存管理	21
2.2.4  自动引用计数	25
2.2.5  为类添加属性	26
2.2.6  字符串	31
2.2.7  使用基本数据结构	34
2.3  讨论高级概念	37
2.3.1  Model-View-Controller设计模式	37
2.3.2  委托和协议	39
2.3.3  使用Blocks	42
2.3.4  错误处理	43
2.4  小结	45
第3章  从一个新的App开始	49
3.1  使用Xcode创建一个新App	49
3.1.1  讨论Xcode模板	51
3.1.2  学习Bundle Identifier	52
3.1.3  Xcode项目布局介绍	52
3.1.4  UIkit框架	54
3.1.5  Main Storyboard	54
3.2  在Storyboard中添加标签	54
3.2.1  Interface Builder的使用	55
3.2.2  设置特性	56
3.2.3  查看器	56
3.2.4  UI对象的对齐	57
3.3  在模拟器中运行程序	57
3.3.1  选择一个设备	57
3.3.2  在所有类型的设备上测试	58
3.4  学习Auto Layout	59
3.4.1  自动布局基础	61
3.4.2  测试屏幕旋转	62
3.5  应用程序设置	63
3.5.1  设置版本和编译号	63
3.5.2  设置支持的旋转方向	65
3.5.3  设置App图标	65
3.5.4  设置启动界面	67
3.6  真机调试	68
3.7  小结	70
第4章  创建用户输入窗体	73
4.1  Band模型对象	73
4.1.1  创建Band模型对象	74
4.1.2  创建枚举	75
4.1.3  为Band模型对象添加属性	76
4.2  创建一个可交互的用户界面	77
4.2.1  学习IBOutlet	77
4.2.2  使用UITextField和UITextFieldDelegate	79
4.2.3  使用UITextView和UITextViewDelegate	82
4.2.4  使用UIButton和IBAction	83
4.2.5  使用UIStepper	84
4.2.6  使用UISegmentedControl	86
4.2.7  使用UISwitch	88
4.3  保存和取回数据	89
4.3.1  实现NSCoding协议	89
4.3.2  保存数据	91
4.3.3  取回数据	93
4.3.4  删除已存数据	95
4.4  小结	98
第5章  使用表视图	99
5.1  表视图	100
5.1.1  学习Tables	100
5.1.2  学习Cells	103
5.2  Bands应用程序数据源的实现	106
5.2.1  创建Band Storage	106
5.2.2  添加乐队	109
5.2.3  展示乐队信息	115
5.3  实现分类和索引	117
5.3.1  添加分类标识	117
5.3.2  显示分类索引	118
5.4  编辑表数据	119
5.4.1  开启编辑模式	119
5.4.2  删除单元格和数据	120
5.4.3  修改数据	122
5.5  小结	126
第6章  在iOS应用程序中整合照相机和照片库	129
6.1  添加一个Image View和手势识别	130
6.1.1  启用UIImageView的交互操作	130
6.1.2  学习手势识别	132
6.2  从照片库中选择一张图片	135
6.2.1  学习UIImagePicker- Controller	136
6.2.2  确定设备兼容性	136
6.2.3  允许编辑图片	137
6.2.4  保存乐队图片	139
6.2.5  删除乐队图片	142
6.3  使用摄像头拍一张照片	144
6.4  小结	147
第7章  整合社交媒体	149
7.1  发送E-mail和短消息	150
7.1.1  使用E-mail编辑器	150
7.1.2  使用消息编辑器	156
7.2  简化社交网络的整合	160
7.2.1  Activity View Controller介绍	160
7.2.2  整合Twitter	164
7.2.3  整合Facebook	165
7.2.4  Flickr整合	167
7.2.5  限制分享选项	167
7.3  小结	169
第8章  使用Web View	171
8.1  学习Web View	172
8.1.1  载入一个URL	176
8.1.2  载入一个包含特殊字符的URL	178
8.1.3  显示用户反馈	180
8.2  添加导航	183
8.2.1  创建Toolbar	183
8.2.2  打开Safari	188
8.3  小结	190
第9章  地图和本地搜索	193
9.1  学习Map View	194
9.1.1  获取用户位置	196
9.1.2  更改地图类型	199
9.2  实现本地搜索功能	201
9.2.1  动态标注	208
9.2.2  和标注进行互动	210
9.3  小结	215
第10章  开始学习Web Service	217
10.1  学习Web Service	218
10.1.1  探索iTunes Search API	218
10.1.2  讨论JSON	219
10.1.3  添加搜索视图	221
10.2  NSURLSESSION介绍	225
10.2.1  创建和调度一个Data task	225
10.2.2  JSON解析	229
10.3  显示搜索结果	231
10.3.1  预览歌曲	235
10.3.2  在iTunes中展示歌曲	237
10.4  小结	239
第11章  创建一个通用的应用程序	241
11.1  转变为通用应用程序	242
11.2  学习Popovers	248
11.2.1  在Popovers中呈现Action Sheet	249
11.2.2  使用UIPopover- Controller	251
11.3  完成iPad版本的实现	257
11.4  小结	265
第12章  部署iOS应用程序	267
12.1  部署应用程序给测试者	268
12.1.1  注册Beta设备	269
12.1.2  生成数字证书	271
12.1.3  创建一个App ID和Ad Hoc Provisioning Profile	273
12.1.4  签名并部署Ad Hoc Build	276
12.2  提交应用程序到苹果公司	280
12.2.1  使用iTunes Connect	280
12.2.2  创建一个App Store Provisioning Profile	283
12.2.3  验证及提交一个应用程序	283
12.3  小结	285
附录  练习答案	287

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS编程入门经典(第4版)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS10快速开发：18天零基础开发一个商业应用
前　言
第一部分
第1章　创建项目并集成LeanCloud SDK 2
1.1　访问LeanCloud 3
1.2　创建Xcode项目——Instagram 4
1.3　将LeanCloud SDK集成到iOS项目中 5
1.4　初始化 LeanCloud SDK 7
本章小结 10
第2章　创建用户登录界面 11
2.1　从故事板中创建视图 11
2.2　搭建用户的登录界面 13
2.3　为SignInVC类和视图创建Outlet和Action关联 16
2.3.1　什么是Outlet和Action 16
2.3.2　为SignInVC创建Outlet 17
2.3.3　为SignInVC创建Action 20
2.4　调整模拟设备 22
本章小结 22
第3章　创建用户注册界面 23
3.1　利用滚动视图创建用户注册界面 23
3.2　创建Outlet和Action关联 26
3.3　让注册视图消失 29
本章小结 30
第4章　注册视图中编写与界面相关的代码 31
4.1　获取当前屏幕的尺寸 31
4.2　添加键盘相关的Notification通知 33
4.3　Swift语言中的可选特性 35
4.4　以动画的方式改变滚动视图的高度 39
4.5　通过Tap手势让虚拟键盘消失 40
本章小结 41
第5章　设置注册页面的用户头像 42
5.1　为Image View添加单击手势识别 42
5.2　创建照片获取器 43
5.3　访问照片库的前期准备 45
5.4　将Image View的外观设置为圆形 47
本章小结 48
第6章　提交用户注册信息到LeanCloud 49
6.1　检验用户输入的数据 49
6.2　if语句中对可选链的处理 50
6.3　使用UIAlertController显示警告信息 50
6.4　提交数据到LeanCloud平台 52
6.5　在LeanCloud云端查看提交的信息 54
本章小结 55
第7章　用户登录 56
7.1　利用UserDefaults存储用户信息 56
7.2　SignInVC中的用户登录 60
本章小结 61
第8章　创建项目并集成LeanCloud SDK 62
8.1　删除已经安装到模拟器中的App 62
8.2　创建密码重置页面的视图 63
8.3　完成重置控制器代码 65
本章小结 66
第9章　调整注册和登录界面的布局 67
9.1　通过Size Classes查看界面布局在不同设备上的效果 67
9.2　对登录界面布局 68
9.3　对注册界面布局 70
9.4　对密码重置界面布局 72
本章小结 72
第10章　美化Instagram 73
10.1　添加字体 73
10.2　设置各功能视图的背景图 74
10.3　注册用户的邮箱校验 77
本章小结 78
第二部分
第11章　创建Home Page用户界面 80
11.1　在故事板中搭建集合视图 80
11.2　为集合视图创建代码类 83
11.3　添加Outlet和Action 84
11.4　调整集合单元格 85
本章小结 87
第12章　从云端读取当前用户信息 88
12.1　创建个人主页与标签控制器的关联 88
12.2　修改HomeVC的代码 89
12.3　应用程序传输安全协议 93
12.4　设置导航栏标题 94
本章小结 95
第13章　在个人主页中显示帖子信息 96
13.1　在LeanCloud云端创建数据类 96
13.2　编写接收数据的代码 99
13.3　创建单元格相关代码 102
本章小结 105
第14章　获取用户的帖子及关注数 106
14.1　注册后的用户登录 106
14.2　在云端创建关注记录 108
14.3　获取用户相关数据信息 110
本章小结 111
第15章　与统计数据之间的交互 112
15.1　在故事板中创建表格视图控制器 112
15.2　创建Outlet关联 113
15.3　统计数据被单击后的实现代码 115
本章小结 118
第16章　从云端载入关注人员信息 119
16.1　从云端获取关注人员信息 119
16.2　创建表格视图的单元格 120
16.3　设置关注按钮的状态 122
16.4　添加关注和取消关注 125
本章小结 127
第17章　创建访客的相关功能 128
17.1　在故事板中创建用户界面 128
17.2　实现GuestVC类的代码 129
17.3　从云端获取访客的帖子信息 132
17.4　获取访客个人页面的Header信息 134
17.5　单击访客统计数据后的实现代码 136
17.6　从其他控制器切换到GuestVC 138
17.7　对于访客的关注和取消关注 140
本章小结 141
第18章　设置访客页面的布局 142
18.1　用户的退出 142
18.2　设置HeaderView的布局 143
18.3　设置集合视图单元格的大小 145
18.4　关注页面的布局 146
本章小结 147
第三部分
第19章　创建用户配置界面 150
19.1　在故事板中创建个人配置控制器视图 150
19.2　创建Action和Outlet关联 154
19.3　为视图创建布局代码 155
19.4　实现与界面相关的代码 158
本章小结 162
第20章　个人配置页面数据的接收与提交 163
20.1　从云端获取个人用户信息 163
20.2　对Email和Web进行正则判断 164
20.3　发送信息到服务器 167
20.4　更新个人主页信息 169
本章小结 170
第21章　实现帖子上传功能 171
21.1　在故事板中创建上传用户界面 171
21.2　创建上传控制器代码类 173
21.3　实现照片获取器的相关代码 174
21.4　实现上传的相关代码 177
21.5　在个人主页刷新集合视图 179
21.6　移除上传页面中的照片 181
本章小结 183
第22章　实现分页载入功能 184
22.1　为HomeVC实现分页载入功能 184
22.2　为GuestVC实现分页载入功能 187
本章小结 187
第23
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS10快速开发：18天零基础开发一个商业应用
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Objective-C基础教程
第1章  启程  1.1  预备知识  1.2  历史背景  1.3  内容简介  1.4  小结第2章  对C的扩展  2.1  最简单的Objective-C程序  2.2  解构Hello Objective-C程序    2.2.1  #import    2.2.2  NSLog()和@“字符串”  2.3  布尔类型    2.3.1  BOOL强大的实用功能    2.3.2  比较  2.4  小结第3章  面向对象编程基础知识  3.1  间接    3.1.1  变量与间接    3.1.2  使用文件名的间接  3.2  在面向对象的编程中使用间接    3.2.1  过程式编程    3.2.2  实现面向对象编程  3.3  学习有关的术语  3.4  Objective-C中的OOP    3.4.1  @interface部分    3.4.2  @implementation部分    3.4.3  实例化对象    3.4.4  扩展Shapes-Object  3.5  小结第4章  继承  4.1  为何使用继承  4.2  继承语法  4.3  继承的工作机制    4.3.1  方法调度    4.3.2  实例变量  4.4  重写方法  4.5  小结第5章  复合  5.1  什么是复合    5.1.1  Car程序    5.1.2  自定义NSLog()  5.2  存取方法    5.2.1  设置发动机的属性    5.2.2  设置轮胎的属性    5.2.3  跟踪汽车的变化  5.3  扩展CarParts程序  5.4  复合还是继承  5.5  小结第6章  源文件组织  6.1  拆分接口和实现部分  6.2  拆分Car程序  6.3  使用跨文件依赖关系    6.3.1  重新编译须知    6.3.2  让汽车开动    6.3.3  导入和继承  6.4  小结第7章  深入了解Xcode  7.1  改变公司名称  7.2  使用编辑器的技巧与诀窍  7.3  在Xcode的帮助下编写代码    7.3.1  首行缩进    7.3.2  代码自动完成    7.3.3  括号匹配    7.3.4  批量编辑    7.3.5  代码导航    7.3.6  emacs不是Mac程序    7.3.7  任意搜索    7.3.8  芝麻开门    7.3.9  书签    7.3.10  集中注意力    7.3.11  开启导航条  7.4  获取信息    7.4.1  研究助手    7.4.2  文档管理程序  7.5  调试    7.5.1  暴力调试    7.5.2  Xcode的调试器    7.5.3  精巧的调试符号    7.5.4  开始调试    7.5.5  检查程序  7.5  备忘表  7.6  小结第8章  Foundation Kit快速教程  8.1  一些有用的数据类型    8.1.1  范围的作用    8.1.2  几何数据类型  8.2  字符串    8.2.1  创建字符串    8.2.2  类方法    8.2.3  关于大小    8.2.4  比较的策略    8.2.5  不区分大小写的比较    8.2.6  字符串内是否还包含别的字符串  8.3  可变性  8.4  集合家族    8.4.1  NSArray    8.4.2  可变数组    8.4.3  枚举“王国”    8.4.4  快速枚举    8.4.5  NSDictionary    8.4.6  使用，但不要扩展  8.5  各种数值    8.5.1  NSNumber    8.5.2  NSValue    8.5.3  NSNull  8.6  示例：查找文件  8.7  小结第9章  内存管理  9.1  对象生命周期    9.1.1  引用计数    9.1.2  对象所有权    9.1.3  访问方法中的保留和释放  9.2  自动释放    9.2.1  所有对象全部入池    9.2.2  自动释放池的销毁时间    9.2.3  自动释放池的工作过程  9.3  Cocoa内存管理规则    9.3.1  临时对象    9.3.2  拥有对象    9.3.3  垃圾回收  9.4  小结第10章  对象初始化  10.1  分配对象  10.2  初始化对象    10.2.1  编写初始化方法    10.2.2  初始化时做什么  10.3  便利初始化函数  10.4  更多部件改进    10.4.1  Tire类的初始化    10.4.2  更新main()函数    10.4.3  清理Car类  10.5  支持垃圾回收风格的Car类清理  10.6  指定初始化函数    10.6.1  子类化问题    10.6.2  改进Tire类的初始化函数    10.6.3  添加AllWeatherRadial类的初始化函数  10.7  初始化函数规则  10.8  小结第11章  特性  11.1  修改特性值    11.1.1  简化接口    11.1.2  简化实现    11.1.3  点表达式的妙用  11.2  特性扩展    11.2.1  名称的使用    11.2.2  只读特性    11.2.3  特性不是万能的  11.3  小结第12章  类别  12.1  创建类别    12.1.1  声明类别    12.1.2  实现类别    12.1.3  类别的局限性    12.1.4  类别的作用  12.2  利用类别分散实现  12.3  使用类别创建前向引用  12.4  非正式协议和委托类别    12.4.1  ITunesFinder项目    12.4.2  委托和类别    12.4.3  响应选择器    12.4.4  选择器的其他应用  12.5  小结第13章  协议  13.1  正式协议    13.1.1  声明协议    13.1.2  采用协议    13.1.3  实现协议  13.2  复制    13.2.1  复制Engine    13.2.2  复制Tire    13.2.3  复制Car    13.2.4  协议和数据类型  13.3  Objective-C 2.0的新特性  13.4  小结第14章  AppKit简介  14.1  构建项目  14.2  构建AppController @interface  14.3  Interface Builder  14.4  布局用户界面  14.5  连接    14.5.1  连接输出口    14.5.2  连接操作  14.6  AppController实现  14.7  小结第15章  文件加载与保存  15.1  属性列表    15.1.1  NSDate    15.1.2  NSData    15.1.3  写入和读取属性列表  15.2  编码对象  15.3  小结第16章  键/值编码  16.1  入门项目  16.2  KVC简介  16.3  路径  16.4  整体操作    16.4.1  中途小憩    16.4.2  流畅地运算  16.5  批处理  16.6  nil仍然可用  16.7  处理未定义的键  16.8  小结第17章  NSPredicate  17.1  创建谓词  17.2  燃料过滤器  17.3  格式说明符  17.4  运算符    17.4.1  比较和逻辑运算符    17.4.2  数组运算符  17.5  SELF足够了  17.6  字符串运算符  17.7  LIKE运算符  17.8  小结附录  从其他语言转向Objective-C
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Objective-C基础教程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>零成本实现Android/iOS自动化测试
第1章  移动应用测试基础	1
1.1  移动应用测试十大要领	1
1.2  移动应用测试框架	4
1.3  如何选择适合自己的框架	9
第2章  Appium基础知识	11
2.1  Appium简介	11
2.1.1  为什么选择Appium	12
2.1.2  Appium基本概念	12
2.2  Appium原理架构	14
2.2.1  Appium Android原理架构	15
2.2.2  Appium iOS原理架构	15
2.3  Appium运行环境准备	16
2.3.1  在Mac OS X上运行Appium	18
2.3.2  在Linux上运行Appium	19
2.3.3  在Windows上运行Appium	19
2.3.4  Android测试环境准备	20
2.4  Appium安装	21
2.4.1  通过命令行安装Appium	21
2.4.2  通过应用程序安装Appium	22
2.5  Appium发展历史	24
第3章  Appium自动化测试入门	27
3.1  第一个iOS自动化测试	27
3.1.1  准备待测应用（iOS）	27
3.1.2  创建iOS测试脚本	31
3.2  第一个Android自动化测试	39
3.2.1  准备待测应用（Android）	39
3.2.2  创建Android测试脚本	39
3.3  Appium server capabilities	48
3.3.1  设置Appium server capabilities（iOS）	53
3.3.2  设置Appium server capabilities（Android）	54
第4章  Appium自动化测试进阶	58
4.1  测试对象识别	58
4.1.1  定位策略	58
4.1.2  使用Appium Inspector定位元素	59
4.1.3  Appium Inspector实战	60
4.1.4  通过命令行定位元素	74
4.2  模拟用户基本操作	83
4.3  移动手势的自动化	84
4.3.1  触摸操作/多点触控 API的概述	84
4.3.2  缺陷和解决方法	86
4.3.3  移动手势自动化实战	87
4.4  混血应用的自动化	93
4.4.1  混血iOS应用	93
4.4.2  混血Android应用	96
4.4.3  混血iOS应用自动化实战	98
4.4.4  混血Android应用自动化实战	102
4.5  移动浏览器的自动化	105
4.5.1  Appium驱动移动浏览器	105
4.5.2  移动浏览器（Safari）自动化实战	107
4.5.3  移动浏览器（Chrome）自动化实战	110
4.6  Appium真机测试	113
4.6.1  Appium iOS真机测试	113
4.6.2  Appium Android真机测试	114
4.6.3  Appium iOS真机测试实战	114
4.6.4  Appium Android真机测试实战	118
4.7  Appium 故障排除	120
第5章  Appium与Cucumber	125
5.1  Cucumber基础	125
5.1.1  下载安装Cucumber	125
5.1.2  五分钟入门	126
5.2  Cucumber与Appium结合	128
5.3  采用中文描述的自动化测试	133
第6章  Test Perfect基础知识	137
6.1  Test Perfect简介	137
6.2  为什么选择Test Perfect	138
6.3  Test Perfect原理架构	140
6.4  Test Perfect安装	142
6.4.1  在Mac上安装Test Perfect	142
6.4.2  在Windows上安装Test Perfect	148
6.5  Test Perfect成功案例	151
第7章  Test Perfect自动化测试入门	153
7.1  系统预定义命令	153
7.2  测试用例管理	156
7.3  测试用例集管理	161
第8章  Test Perfect自动化测试进阶	166
8.1  测试项目管理	166
8.2  用户自定义步骤	173
8.3  系统设置	175
8.4  查看历史记录	180
8.5  Test Perfect并行测试	181
8.6  Test Perfect iOS 8 支持	183
第9章  Test Perfect & Appium实战	185
9.1  Test Perfect iOS自动化测试实战	185
9.2  Test Perfect Android自动化测试实战	196
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>零成本实现Android/iOS自动化测试
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Objective-C编程
第1部分  入门	1
第1章  读者与本书	3
1.1  C与Objective-C	3
1.2  主要内容及阅读方式	4
1.3  程序员要走的道路	4
第2章  第一个程序	7
2.1  安装Apple开发工具软件	7
2.2  Xcode入门	7
2.3  从哪里开始编写代码	9
2.4  如何运行程序	13
2.5  程序是如何产生的	14
2.6  不要半途而废	15
第2部分  如何编程	17
第3章  变量与类型	19
3.1  类型	19
3.2  使用变量的程序	20
3.3  练习	22
第4章  if和else	23
4.1  布尔变量	24
4.2  else if	25
4.3  深入学习：条件运算符（三元运算符）	25
4.4  练习	26
第5章  函数	27
5.1  应该在何时使用函数	27
5.2  如何编写并使用函数	27
5.3  函数间是如何协同工作的	30
5.4  局部变量、帧和栈	32
5.5  递归	34
5.6  通过调试器查看帧	35
5.7  return	37
5.8  全局变量与静态变量	39
5.9  练习	40
第6章  数字	41
6.1  printf()	41
6.2  整数	42
6.3  浮点数	46
6.4  练习	47
第7章  循环	49
7.1  while循环	49
7.2  for循环	50
7.3  break	51
7.4  continue	52
7.5  do-while循环	53
7.6  练习	54
第8章  地址与指针	55
8.1  获取地址	55
8.2  用指针保存地址	56
8.3  通过地址访问数据	57
8.4  不同类型的数据所占用的字节大小	57
8.5  NULL	58
8.6  指针声明的代码规范	59
8.7  练习	59
第9章  通过引用传递	61
9.1  编写通过引用传递参数的函数	62
9.2  不要对NULL取值	64
第10章  结构	65
10.1  练习	66
第11章  堆	69
第3部分  Objective-C与Foundation	73
第12章  对象	75
12.1  创建并使用对象	75
12.2  消息详解	77
12.3  内存中的对象	79
12.4  id	79
12.5  练习	80
第13章  再谈消息	81
13.1  消息的嵌套发送	81
13.2  多个实参	82
13.3  向nil发送消息	82
13.4  练习	83
第14章  NSString	85
14.1  练习	86
第15章  NSArray	87
15.1  NSMutableArray	89
15.2  练习	90
第16章  开发文档	93
16.1  参考页	94
16.2  快速帮助	96
16.3  其他文档功能和开发资源	98
第17章  第一个自定义类	101
17.1  存取方法	103
17.2  用点号调用存取方法	104
17.2  属性	105
17.4  self	106
17.5  多个实现文件	106
17.6  练习	106
第18章  继承	109
18.1  覆盖方法	112
18.2  super	113
18.3  练习	113
第19章  对象实例变量	115
19.1  对象所有权与ARC	117
19.2  练习	123
第20章  避免内存泄露	125
20.1  Retain循环	127
20.2  弱引用	129
20.3  弱引用的自动置零特性	130
20.4  深入学习：手动引用计数和ARC历史	131
第21章  Collection类	135
21.1  NSArray/NSMutableArray	135
21.2  NSSet/NSMutableSet	138
21.3  NSDictionary/NSMutableDictionary	140
21.4  C语言基本类型	142
21.5  Collection对象与nil	142
21.6  练习	143
第22章  常量	145
22.1  预处理指令	145
22.2  #include与#import	146
22.3  #define	146
22.4  全局变量	147
22.5  比较#define与全局变量	149
第23章  通过NSString和NSData将数据写入文件	151
23.1  将NSString对象写入文件	151
23.2  NSError	152
23.3  通过NSString读取文件	153
23.4  将NSData对象所保存的数据写入文件	154
23.5  从文件读取数据并存入NSData对象	155
第24章  回调	157
24.1  目标-动作对	157
24.2  辅助对象	160
24.3  通告	163
24.4  如何选择	164
24.5  回调与对象所有权	164
第25章  协议	167
第26章  Property List格式	171
26.1  练习	173
第4部分  由事件驱动的应用	175
第27章  第一个iOS应用	177
27.1  创建iTahDoodle	177
27.2  BNRAppDelegate	179
27.3  添加C语言辅助函数	180
27.4  iTahDoodle中的对象	181
27.5  Model-View-Controller	182
27.6  应用委托对象	183
27.7  设置视图	184
27.8  为UITableView对象提供数据	186
27.9  添加新任务	189
27.10  深入学习：main()的作用	190
第28章  第一个Cocoa应用	191
28.1  编辑BNRDocument.h	192
28.2  Interface Builder初探	193
28.3  编辑BNRDocument.xib	194
28.4  创建关联	198
28.5  再探MVC	202
28.6  编辑BNRDocument.m	202
28.7  练习	204
第5部分  Objective-C高级主题	205
第29章  init	207
29.1  编写init方法	207
29.2  实现基本的init方法	208
29.3  在init中使用存取方法	209
29.4  带实参的init方法	210
29.5  禁用init方法	215
第30章  属性	217
30.1  属性的特性	218
30.2  KVC	221
第31章  范畴	225
第32章  Block对象	227
32.1  定义Block对象	227
32.2  使用Block对象	228
32.3  typedef	233
32.4  返回值	233
32.5  内存管理	234
32.6  基于Block的编程是大势所趋	235
32.7  练习	235
第6部分  C语言高级主题	237
第33章  位运算	239
33.1  按位或	240
33.2  按位与	241
33.3  其他位运算符	242
33.4  用enum定义位掩码	245
33.5  占用更多字节的整数类型	245
33.6  练习	245
第34章  C字符串	247
34.1  char	247
34.2  char *	248
34.3  string literal	250
34.4  C字符串和NSString对象的相互转换	251
34.5  练习	252
第35章  C数组	253
第36章  命令行参数	257
第37章  switch语句	261
结束语	263
索引	265
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Objective-C编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>IO联网组织
自序 千金难买的真经验 施振荣
序一 享受管理知能大幅成长的喜悦 朱博涌
序二 立足台湾，经验全球 杨国安
导言 一只身价百亿元的白老鼠

第一部 知识e世纪

第一章 典范移转
产业发展六大趋势／市场愈来愈大、愈来愈自由／无国界的市场经济／超分工整合的发展／由产品导向变成顾客导向／价值创造来源的转移／e时代的数字革命

第二章 以小搏大――网络经济经营之道
推动网络经济／亚洲e策略／网络商机／网络经济的价值创造／台湾的网络生意

第三章 iO――知识经济时代的组织
新世纪，e世纪／知识经济／超分工整合世纪／iO的特质与优点／联网组织的挑战／台湾的iO

第四章 台湾新愿景――高感性、高科技
为何需要新愿景／SWOT分析／软硬兼优的新台

第二部 创造价值占有率

第五章 竞争力新解――创新价值

第六章 创新的无障碍空间

第三部 另类全球化

第七章 第四种模式

第八章 宏基突围，进军国际

第九章 从OEM到OBM

第四部 e领导

第十章 无形的基础建设――愿景与企业文化

第十一章 虚拟梦幻团队

第十二章 换人或换脑袋

后记一 十二堂星期三的课 萧富元
后记二 听听学生怎么说


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>IO联网组织
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>QoS在IOS中的实现与应用
第1章  服务质量概念	1  1.1  决定QOS的因素	1  1.2  端到端QOS服务模式	2    1.2.1  尽力而为服务模式	2    1.2.2  集成服务模式	2    1.2.3  区分服务模式	3    1.2.4  DS与PHB	4  1.3  区分服务模式的结构模型	4  1.4  IOS的QOS特性	6    1.4.1  实现QoS的IOS工具	6    1.4.2  实现QoS的流程	7  1.5  本章小结	8第2章  QOS与标识字段	9  2.1  帧与标识字段	9    2.1.1  ISL帧的格式与QoS	9    2.1.2  802.1q帧的格式与QoS	10  2.2  IPV4报文头与QOS	11    2.2.1  IPv4报文头的结构	11    2.2.2  IPv4 ToS字段	12  2.3  DSCP	13    2.3.1  ToS与DSCP	14    2.3.2  类别选择码	14    2.3.3  DSCP值	14    2.3.4  保证转发服务	15    2.3.5  无阻碍转发服务	15    2.3.6  其他定义	16  2.4  IPV6报文头与QOS	16  2.5  MPLS标签与QOS	16  2.6  DSCP/COS/IP PRE.映射	17    2.6.1  CoS-to-DSCP	17    2.6.2  DSCP-to-CoS	17    2.6.3  IP-Precedence-to-DSCP	19  2.7  默认对应关系总结	19  2.8  本章小结	20第3章  数据的分类与标记	21  3.1  分类流程	21  3.2  边界及边界信任	22    3.2.1  启用交换机的QoS功能	23    3.2.2  信任CoS	24    3.2.3  信任DSCP	24    3.2.4  信任IP Precedence	25    3.2.5  信任IP电话	25    3.2.6  启用被信任边界特性	26    3.2.7  为交换机端口设置默认CoS值	26    3.2.8  查看端口QoS状态	27    3.2.9  设置QoS域边界端口的信任特性	27  3.3  使用MQC分类	29    3.3.1  class-map 命令	29    3.3.2  class- map 示例	29    3.3.3  policy-map命令	32    3.3.4  policy-map示例	32    3.3.5  service-policy命令	34    3.3.6  MQC应用示例	34    3.3.7  class-map 嵌套	35    3.3.8  policy-map嵌套	36    3.3.9  检查配置的命令	37  3.4  使用NBAR分类	38    3.4.1  PDLM	38    3.4.2  PDLM 类型	39    3.4.3  MQC 与NBAR	40    3.4.4  使用MQC配置NBAR的步骤	40    3.4.5  NBAR应用示例	41    3.4.6  NBAR的一些局限	43  3.5  本章小结	43第4章  流量整治	44  4.1  令牌桶	44  4.2  令牌桶原理	45    4.2.1  单桶单速	46    4.2.2  双桶单速	46    4.2.3  双桶双速	46  4.3  CAR	47    4.3.1  CAR 语法通式	48    4.3.2  限速访问列表	49    4.3.3  限速访问列表的通配符掩码	49    4.3.4  限速访问列表示例	50    4.3.5  使用CAR限速的案例	50    4.3.6  检查CAR配置的命令	52  4.4  使用MQC整治流量	54    4.4.1  命令及步骤	54    4.4.2  Policed-DSCP Map	55    4.4.3  MQC用法示例	55    4.4.4  MQC流量整治案例	56    4.4.5  双速多行为示例	63    4.4.6  基于NBAR的流量整治	63    4.4.7  基于带宽百分比的流量整治	64    4.4.8  三级分层流量整治	65    4.4.9  集合整治器	69  4.5  本章小结	69第5章  队列及拥塞管理	70  5.1  先进先出队列	70  5.2  优先队列	71    5.2.1  原理	71    5.2.2  配置命令	72    5.2.3  配置示例	73  5.3  自定义队列	74    5.3.1  原理	74    5.3.2  轮询发送数据量	74    5.3.3  配置命令	76    5.3.4  配置示例	77  5.4  加权公平队列	78    5.4.1  基于数据流的加权公平队列	78    5.4.2  基于分类的加权公平队列	80  5.5  低延迟队列	84    5.5.1  原理	84    5.5.2  配置命令	85    5.5.3  配置示例	85  5.6  RTP 优先队列	88  5.7  交换机上的队列	89    5.7.1  交换机的QoS结构	89    5.7.2  队列及拥塞管理	90    5.7.3  入队列	90    5.7.4  出队列	94  5.8  本章小结	98第6章  拥塞避免技术	99  6.1  随机早期检测	99  6.2  丢弃概率	99  6.3  加权随机早期检测	100  6.4  平均队列长度	100  6.5  基于流的WRED	101  6.6  遵从区分服务的WRED	102  6.7  配置WRED	102    6.7.1  在物理接口上启用WRED	102    6.7.2  在VC接口上启用WRED	103    6.7.3  配置基于流的WRED	104    6.7.4  启用遵从区分服务的WRED	104  6.8  明确拥塞通知与WRED	110    6.8.1  原理概述	110    6.8.2  配置ECN	111  6.9  本章小结	113第7章  流量整形	114  7.1  流量整形的优点	114  7.2  流量整形技术	114  7.3  通用流量整形	114    7.3.1  配置GTS的基本命令	115    7.3.2  GTS利用ACL整形	115    7.3.3  帧中继的GTS	115    7.3.4  检查流量整形的命令	116  7.4  基于分类的流量整形	117    7.4.1  配置CBTS的命令	117    7.4.2  配置示例	118  7.5  帧中继流量整形	121    7.5.1  帧中继流量整形使用的命令	121    7.5.2  FR流量整形配置示例	122    7.5.3  帧中继流量整形与RTP优先队列	125    7.5.4  帧中继流量整形与LLQ	126    7.5.5  帧中继流量整形与PVC优先队列	129  7.6  基于MQC的帧中继流量整形	131    7.6.1  命令语法	131    7.6.2  配置示例	132  7.7  本章小结	132     第8章  链路优化技术	134  8.1  报文头压缩	134    8.1.1  RTP报文头压缩	134    8.1.2  配置RTP报文头压缩	135    8.1.3  查看RTP压缩信息	137    8.1.4  TCP报文头压缩	138    8.1.5  配置TCP报文头压缩	138    8.1.6  查看TCP压缩信息	139    8.1.7  基于分类的报文头压缩	140  8.2  帧的拆解与交错	142    8.2.1  拆解与交错概述	142    8.2.2  连载延迟	143    8.2.3  支持LFI的链路	143    8.2.4  在帧中继上应用LFI	143  8.3  PPP多链路捆绑	147    8.3.1  配置串行接口MLP	147    8.3.2  启用LFI特性	148    8.3.3  检查MLP状态	149  8.4  本章小结	149第9章  IPSEC VPN应用QOS	150  9.1  IPSEC VPN	150  9.2  IPSEC VPN 模式	150    9.2.1  传输模式	150    9.2.2  隧道模式	151  9.3  保存TOS字段值	152  9.4  使用报文头参数分类	152  9.5  应用实例	152    9.5.1  对ESP数据应用QoS	152    9.5.2  使用Pre-classify特性	156    9.5.3  GRE+IPSec隧道模式	159    9.5.4  基于站点的VPN与QoS策略	162  9.6  本章小结	168第10章  MPLS VPN应用QOS	169  10.1  MPLS 网络模型	169  10.2  数据分类与EXP字段	169  10.3  MPLS QOS策略	170  10.4  MPLS QOS专用命令	170  10.5  MPLS QOS隧道模式	170    10.5.1  统一模式及实现	171    10.5.2  管道模式及实现	178    10.5.3  短管道模式及实现	184  10.6  本章小结	189附录A  642-642考试真题练习	190附录B  642-642考试真题练习答案	206参考文献	207
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>QoS在IOS中的实现与应用
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS软件开发揭秘
目录
第1章iPhone开发环境设置1
1.1安装雪豹操作系统2
1.2安装iPhoneSDK5
1.2.1老版本Xcode3.0安装设置5
1.2.2Lion版本下iOSSDK安装设置7
1.3无证书开发环境Xcode设置9
1.4有证书开发环境Xcode设置13
1.5安装源代码版本管理工具13
1.6安装Wine14
1.7使用Wine安装SourceInsight15
1.8相关网络资源16
第2章Objective—C编程基础17
2.1Objective—C介绍18
2.2第一个iPhone程序18
2.3Objective—C基本类型19
2.3.1id19
2.3.2SEL19
2.3.3BOOL20
2.3.4nil、NULL和NSNull20
2.4常量声明和预处理宏22
2.5使用#import包含头文件24
2.6使用#pragmamark分隔代码块24
2.7Objective—C内存管理：retain和release25
2.8字符串操作28
2.8.1字符串常量28
2.8.2获取子字符串29
2.8.3合并和格式化字符串30
2.8.4分隔字符串31
2.8.5NSString和char*之间的转换31
2.8.6字符串比较32
2.9处理数值对象32
2.10处理日期时间NSDate33
2.11处理NSData类型34
2.12集合操作35
2.12.1数组操作：NSArray和NSMutableArray35
2.12.2字典操作：NSDictionary和NSMutableDictionary45
2.12.3集合操作：NSSet和NSMutableSet49
2.12.4堆栈操作52
2.13面向对象编程：类、实例和消息52
2.13.1类定义52
2.13.2类构造和构析函数53
2.13.3Singleton模式55
2.13.4@class、@protocol前向声明56
2.13.5self和super56
2.13.6实例方法和类方法57
2.13.7对象属性（@property）58
2.13.8静态属性（staticattributes）60
2.14类扩展（ClassCategories）61
2.15Objective—C接口编程63
2.15.1接口编程之@protocol63
2.15.2接口编程之后台线程65
2.15.3接口编程之Notifications68
2.15.4接口编程之NSOperationQueue70
2.15.5接口编程之私有方法72
2.15.6接口编程之静态库隐藏类73
2.15.7接口编程之@protocol封装类74
2.15.8接口稳定性和接口继承76
2.16定时器（NSTimer）编程79
2.17序列化和反序列化80
2.17.1序列化方法之PropertyList80
2.17.2序列化方法之NSKeyedArchiver81
2.17.3序列化方法之CoreData82
2.18Objective—C和C、C++混合编程82
2.19消息和NSInvocation89
2.20方法混合（MethodSwizzling）93
2.21使用NSAssert进行代码调试95
2.22本章总结95
2.23参考书籍96
第3章iPhoneSDK开发基础97
3.1iPhoneSDK介绍98
3.2第一个iPhone界面程序101
3.3iPhone程序启动过程107
3.4iPhone程序生命周期109
3.5掌握iPhone程序通信中心UIApplication和UIApplicationDelegate112
3.6iPhone坐标系统113
3.7UIView层次管理118
3.8触控（Touch）测试122
3.9多点触控（MultiTouch）和物体移动124
3.10UIView旋转和缩放127
3.11UIScrollView编程129
3.12iPhone程序框架131
3.12.1使用UINavigationController组织和管理UIView132
3.12.2使用UITabBarController组织和管理UIView132
3.12.3使用UISplitViewController组织和管理UIView135
3.13旋转屏幕（ScreenRotations）137
3.14掌握UIButton编程140
3.15管理界面字体141
3.16使用UILabel管理界面文本143
3.17管理界面颜色145
3.18界面风格（TRANSITIONINGSTYLES）150
3.19单词排序表格编程151
3.20NSUserDefaults和PropertyList文件152
3.21文件系统和外部资源管理154
3.22简单动画制作157
3.23闪屏制作——程序启动动画159
3.24多行文本输入控件制作161
3.25图片处理164
3.26CoreAudio编程165
3.27UITableView编程167
3.28UISegmentedControl编程169
3.29OpenFlow编程171
3.30UIPageControl编程174
3.31自定义仪表控件177
3.32本章总结182
第4章iPhoneSDK高级编程183
4.1Base64编解码184
4.2WebService和XML数据解析185
4.2.1使用TBXML类解析XML数据185
4.2.2使用SimpleXMLParser类解析XML数据187
4.3JSON数据解析188
4.4掌握SQLite管理用户数据191
4.5缓存（Caching）及CoreData数据管理195
4.6使用AES算法进行数据加解密211
4.7电子商务安全基础——RSA算法和数据加密214
4.7.1开发.NET版本RSA算法库214
4.7.2建立iPhone版本RSA算法库221
4.8自定义用户界面控件制作224
4.8.1ComboBox控件和UIPikerView设计224
4.8.2自定义UIDatePicker制作228
4.9Web和JavaScript高级编程233
4.9.1Web开发环境设置233
4.9.2Phonegap（Cordova）Web程序实例235
4.10本章总结237
第5章iPhone企业应用实例分析239
5.1综合应用概述240
5.2系统介绍240
5.3系统需求和主要用例241
5.4程序处理流程243
5.5主要实现类和相互关系244
5.6程序框架分析246
5.7技术要点分析251
5.7.1异步网络通信251
5.7.2CoreData缓存数据254
5.7.3RSA算法加解密260
5.7.4自定义控件制作260
5.7.5表格控件定制262
5.7.6自定义UIToolbar268
5.7.7目录浏览器制作270
5.7.8文件上传和下载275
5.8本章总结278
第6章iPad软件开发基础279
6.1iPad软件开发介绍280
6.2UISplitViewController编程280
6.3UIPopoverController编程287
6.4定制MPMoviePlayerController进行视频播放290
6.5开发调色板（Palette）控件294
6.6发送邮件296
6.7Google地图编程297
6.8本章总结314
第7章iPad商业软件实例分析315
7.1综合应用概述316
7.2系统介绍316
7.3系统需求和主要用例317
7.4程序处理流程319
7.5主要实现类和相互关系319
7.6程序框架321
7.7技术要点分析333
7.7.1图片分页和滚动显示333
7.7.2动态管理多国语言界面338
7.7.3播放网络视频339
7.8本章总结342
第8章iOS游戏开发基础343
8.1概述344
8.2cocos2d系统介绍344
8.3cocos2d编程基础347
8.3.1第一个cocos2d程序347
8.3.2基本动画351
8.4Box2D物理引擎354
8.4.1核心概念354
8.4.2碰撞检测355
8.5Chipmuck物理引擎359
8.5.1重要概念359
8.5.2物理模拟和碰撞检测361
8.6粒子系统363
8.6.1轨道卫星（OrbitSatellite）364
8.6.2太空陨石（SpaceRocks）365
8.7Web技术实现游戏开发367
8.83D手机游戏开发368
8.9本章总结369
第9章iOS商业游戏实例分析371
9.1概述372
9.2闪回（FlashBack）372
9.3法术的释放（GhostCastle）376
9.3.1GhostCastle中的TileMap管理378
9.3.2cocos2d中的TileMap管理381
9.4甜蜜的梦（SweetDreams）384
9.5毁灭之战（RavagedByWar）391
9.5.1A*算法393
9.5.2毁灭之战中的A*算法实现398
9.6吹吹鱼（PuffPuff）400
9.7本章总结404
第10章iPhone软件发布405
10.1AppStore概述406
10.2iPhone软件发布步骤406
10.3ipa安装包制作410
10.4iOS配置文件和Settings系统编程411
10.5本章总结416
附录417
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS软件开发揭秘
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS 6核心开发手册
目 录

第1章 姿势和触摸 1
1.1 触摸 1
1.1.1 阶段 2
1.1.2 触摸和响应者方法 3
1.1.3 触摸视图 3
1.1.4 多触摸 4
1.1.5 姿势识别器 4
1.2 秘诀：添加简单的直接操作界面 5
1.3 秘诀：添加平移姿势识别器 7
1.4 秘诀：同时使用多个姿势识别器 9
1.5 秘诀：约束移动 12
1.6 秘诀：测试触摸 14
1.7 秘诀：针对位图进行测试 16
1.8 秘诀：在屏幕上绘制触摸 18
1.9 秘诀：平滑绘图 20
1.10 秘诀：使用多触摸交互 23
1.11 秘诀：检测圆形 27
1.12 创建自定义的姿势识别器 31
1.13 秘诀：从滚动视图中拖动 33
1.14 秘诀：实时触摸反馈 37
1.14.1 启用触摸反馈 37
1.14.2 截取和转发触摸事件 38
1.14.3 实现TOUCHkit叠加视图 39
1.15 秘诀：给视图添加菜单 42
1.16 小结 43
第2章 构建和使用控件 45
2.1 UIControl类 45
2.1.1 目标—动作 45
2.1.2 控件的种类 46
2.1.3 控件事件 47
2.2 按钮 48
2.3 Interface Builder中的按钮 50
2.4 秘诀：构建按钮 51
2.4.1 多行按钮文本 53
2.4.2 给按钮添加动画式元素 54
2.4.3 给按钮添加额外的状态 54
2.5 秘诀：制作按钮响应的动画 54
2.6 秘诀：添加具有自定义指针的滑块 56
2.6.1 自定义UISlider 57
2.6.2 提高效率 58
2.7 外观代理 61
2.8 秘诀：创建可点按两次的分段控件 64
2.8.1 第二次点按反馈 65
2.8.2 控件和属性 65
2.9 处理选项开关和步进器 67
2.10 子类化UIControl 68
2.10.1 创建控件 69
2.10.2 跟踪触摸 69
2.10.3 调度事件 69
2.11 秘诀：构建星星滑块 72
2.12 构建触摸式转盘 75
2.13 秘诀：创建拉式控件 78
2.13.1 可发现性 79
2.13.2 测试触摸 79
2.14 构建自定义的锁定控件 82
2.15 添加页面指示控件 84
2.16 秘诀：创建可自定义的分页滚动条 87
2.17 构建工具栏 92
2.18 小结 94
第3章 提醒用户 95
3.1 通过警报直接与用户交流 95
3.1.1 构建简单的警报 95
3.1.2 警报委托 97
3.1.3 显示警报 98
3.1.4 警报的种类 98
3.2 “请等待”：给用户显示进度 99
3.2.1 使用UIActivityIndicatorView 99
3.2.2 使用UIProgressView 100
3.3 秘诀：不带按钮的警报 100
3.4 秘诀：利用事件处理循环创建模态警报 104
3.5 秘诀：结合使用可变参数与警报视图 106
3.6 展示选项列表 107
3.6.1 滚动菜单 109
3.6.2 在动作表中显示文本 110
3.7 秘诀：构建自定义的叠加 110
3.8 秘诀：基本的弹出窗口 112
3.9 秘诀：本地通知 114
3.10 警报指示器 115
3.11 秘诀：简单的音频警报 116
3.11.1 系统声音 117
3.11.2 振动 118
3.11.3 警报 118
3.11.4 延迟 119
3.11.5 系统声音的处理 119
3.12 小结 120
第4章 组合视图与动画 123
4.1 视图层次结构 123
4.2 秘诀：恢复视图层次结构树 125
4.3 秘诀：查询子视图 126
4.4 管理子视图 128
4.4.1 添加子视图 128
4.4.2 重新排序和删除子视图 128
4.4.3 视图回调 129
4.5 标记和检索视图 129
4.6 秘诀：通过对象关联命名视图 130
4.7 视图几何学 133
4.7.1 框架 133
4.7.2 矩形实用函数 134
4.7.3 点和大小 135
4.7.4 变换 135
4.7.5 坐标系统 136
4.8 秘诀：处理视图框架 136
4.8.1 调整大小 137
4.8.2 CGRect和Center 139
4.8.3 其他几何元素 140
4.9 秘诀：获取变换信息 144
4.9.1 获取变换属性 144
4.9.2 测试视图交叉 145
4.10 显示和交互特征 150
4.11 UIView动画 151
4.12 秘诀：淡入和淡出视图 152
4.13 交换视图 153
4.14 秘诀：翻转视图 154
4.15 秘诀：使用Core Animation渐变 156
4.16 秘诀：在视图出现时弹起它们 158
4.17 图像视图动画 159
4.18 小结 160
第5章 视图约束 163
5.1 约束是什么 163
5.2 对齐矩形 164
5.3 约束属性 165
5.4 约束的法则 166
5.5 创建约束 168
5.5.1 基本的约束声明 168
5.5.2 可视化的格式约束 169
5.5.3 变量绑定 170
5.6 格式字符串 170
5.6.1 方向 171
5.6.2 视图名称 172
5.6.3 连接 173
5.7 谓词 175
5.7.1 指标 176
5.7.2 视图之间的谓词 176
5.7.3 优先级 176
5.8 格式字符串小结 176
5.9 存储和更新约束 177
5.10 秘诀：比较约束 179
5.11 秘诀：描述约束 181
5.12 秘诀：创建固定大小的受约束的视图 183
5.12.1 禁用自动调整大小约束 184
5.12.2 在视图界限内开始 184
5.12.3 约束大小 185
5.13 秘诀：居中显示视图 187
5.14 秘诀：设置高宽比 188
5.15 对齐视图和灵活地调整大小 190
5.16 秘诀：响应方向变化 191
5.17 约束宏 193
5.17.1 一致的约束 193
5.17.2 充分的约束 194
5.17.3 宏 194
5.18 调试约束 196
5.19 小结 197
第6章 文本输入 199
6.1 秘诀：取消UITextField键盘 199
6.1.1 阻止键盘取消 200
6.1.2 文本特征属性 200
6.1.3 其他文本框属性 201
6.2 秘诀：利用自定义的附件视图代替文本视图 203
6.3 秘诀：调整键盘周围的视图 205
6.4 秘诀：调整附件视图周围的视图 209
6.5 秘诀：创建自定义的输入视图 212
6.6 秘诀：创建能够意识到文本输入的视图 216
6.7 秘诀：向非文本视图中添加自定义的输入视图 219
6.8 秘诀：构建更好的文本编辑器(第1部分) 222
6.9 秘诀：构建更好的文本编辑器(第2部分) 224
6.9.1 启用属性化的文本 224
6.9.2 控制属性 225
6.9.3 其他的响应者功能 225
6.10 秘诀：文本输入过滤 227
6.11 秘诀：检测文本模式 230
6.11.1 创建你自己的表达式 230
6.11.2 枚举正则表达式 231
6.11.3 数据检测器 231
6.11.4 使用内置的类型检测器 232
6.11.5 有用的网站 232
6.12 检测UITextView中的拼写错误 234
6.13 搜索文本字符串 235
6.14 小结 236
第7章 视图控制器的使用 237
7.1 视图控制器 237
7.1.1 UIViewController类 238
7.1.2 导航控制器 238
7.1.3 选项卡栏控制器 238
7.1.4 拆分视图控制器 239
7.1.6 页面视图控制器 239
7.1.7 弹出式控制器 239
7.2 使用导航控制器和拆分视图的开发 240
7.2.1 使用导航控制器和堆栈 241
7.2.2 压入和弹出视图控制器 241
7.2.3 栏按钮 242
7.3 秘诀：导航项类 242
7.3.1 标题和返回按钮 243
7.3.2 宏 243
7.4 秘诀：模态展示 244
7.5 秘诀：构建拆分视图控制器 248
7.6 创建通用拆分视图/导航应用 253
7.7 秘诀：选项卡栏 255
7.8 记忆选项卡状态 259
7.9 秘诀：页面视图控制器 262
7.9.1 书籍属性 263
7.9.2 包装实现 263
7.9.3 探索秘诀 265
7.9.4 构建展示索引 265
7.10 秘诀：在页面视图控制器中刮擦页面 271
7.11 秘诀：自定义容器 272
7.11.1 添加与移除子视图控制器 273
7.11.2 在视图控制器之间过渡 273
7.12 秘诀：延续 278
7.13 小结 284
第8章 常用控制器 285
8.1 图片选取器控制器 285
8.1.1 图片源 285
8.1.2 在iPhone和iPad上展示选取器 286
8.2 秘诀：选择图片 286
8.2.1 怎么做：给模拟器添加照片 286
8.2.2 Assets Library(资产库)框架 287
8.2.3 展示一个选取器 288
8.2.4 处理委托回调 288
8.3 秘诀：拍摄照片 293
8.3.1 设置选取器 293
8.3.2 显示图片 294
8.3.3 将图片保存到相簿 294
8.4 秘诀：录制视频 296
8.4.1 创建视频录制选取器 297
8.4.2 保存视频 298
8.5 秘诀：使用媒体播放器播放视频 299
8.6 秘诀：编辑视频 302
8.7 秘诀：选取并编辑视频 305
8.8 秘诀：通过邮件发送图片 307
8.9 发送文本信息 310
8.10 秘诀：贴出社交更新 313
8.11 秘诀：活动视图(Activity View)控制器 315
8.11.1 创建并展示控制器 316
8.11.2 添加服务 319
8.11.3 项目和服务 323
8.12 秘诀：Quick Look预览控制器 324
8.13 小结 328
第9章 可访问性 329
9.1 可访问性简介 329
9.2 启用可访问性 331
9.3 特征(Trait) 332
9.4 标签 333
9.5 提示 334
9.6 使用模拟器测试 334
9.7 广播更新 336
9.8 在iPhone上测试可访问性 336
9.9 小结 338
第10章 创建与管理表格视图 339
10.1 iOS表格 339
10.2 委托 340
10.3 创建表 341
10.3.1 表格风格 341
10.3.2 视图布局 341
10.3.3 指派数据源 341
10.3.4 给单元格提供服务 342
10.3.5 注册单元格类 342
10.3.6 单元格出列 343
10.3.7 指派委托 343
10.4 秘诀：实现一个基本的表格 343
10.4.1 数据源方法 344
10.4.2 响应用户碰触 344
10.5 表格视图单元格 347
10.5.1 选中的颜色 348
10.5.2 添加自定义选择特征 348
10.6 秘诀：创建复选表格单元格 348
10.7 使用展开附件 351
10.8 秘诀：表格编辑 353
10.8.1 添加撤销支持 353
10.8.2 支持撤销 354
10.8.3 显示移除控件 354
10.8.4 处理删除请求 355
10.8.5 轻扫单元格 355
10.8.6 重新排列单元格 355
10.8.7 添加单元格 355
10.9 秘诀：使用节 360
10.9.1 构建节 361
10.9.2 节数和行数 362
10.9.3 返回单元格 362
10.9.4 创建头部标题 364
10.9.5 自定义头部和脚注 365
10.9.6 创建节索引 365
10.9.7 处理节不匹配 366
10.9.8 带有节的委托 366
10.10 秘诀：搜索表格 368
10.10.1 创建搜索显示控制器 369
10.10.2 为搜索显示控制器注册单元格 370
10.10.3 构建可搜索的数据源方法 370
10.10.4 委托方法 372
10.10.5 使用搜索感知的索引 372
10.11 秘诀：给表格添加下拉刷新功能 374
10.12 添加动作行 377
10.13 编写自定义组表格的代码 381
10.14 秘诀：构建多滚轮表格 382
10.14.1 创建UIPickerView 383
10.14.2 数据源和委托方法 384
10.14.3 结合选取器使用视图 384
10.15 使用UIDatePicker 387
10.16 小结 388
第11章 集合视图 391
11.1 集合视图与表格的对比 391
11.2 建立集合视图 393
11.2.1 控制器 393
11.2.2 视图 394
11.2.3 数据源和委托 394
11.3 流布局 394
11.3.1 滚动方向 395
11.3.2 项目尺寸和线间距 395
11.3.3 头部和脚注的尺寸 396
11.3.4 嵌空 398
11.4 秘诀：基本的集合视图流 398
11.5 秘诀：自定义单元格 402
11.6 秘诀：滚动水平列表 404
11.7 秘诀：引入交互式布局效果 408
11.8 秘诀：滚动对齐 410
11.9 秘诀：创建圆形布局 411
11.9.1 创建与删除的动画 412
11.9.2 给圆形布局提供能量 412
11.9.3 布局 413
11.10 秘诀：给布局添加手势 417
11.11 秘诀：创建真正的网格布局 419
11.12 秘诀：自定义项目菜单 427
11.13 小结 429
第12章 初尝Core Data 431
12.1 Core Data导引 431
12.2 实体和模型 431
12.2.1 构建一个模型文件 432
12.2.2 属性和关系 433
12.2.3 构建对象类 433
12.3 创建上下文 434
12.4 添加数据 435
12.4.1 检查数据文件 436
12.4.2 查询数据库 438
12.4.3 设置提取请求 439
12.4.4 执行提取 439
12.5 移除对象 440
12.6 秘诀：使用Core Data作为表格数据源 441
12.6.1 索引路径访问 441
12.6.2 节键路径 442
12.6.3 节组 442
12.6.4 索引标题 442
12.6.5 表格的备妥程度 442
12.7 秘诀：搜索表格和Core Data 445
12.8 给Core Data表格视图添加编辑功能 448
12.8.1 添加撤消/重做支持 448
12.8.2 创建撤销事务 449
12.8.3 重新思考编辑 450
12.9 秘诀：由Core Data提供能量的集合视图 455
12.10 小结 461
第13章 网络基础 463
13.1 秘诀：检查网络状态 463
13.2 扫描连接性更改 466
13.3 秘诀：同步下载 468
13.4 秘诀：异步下载 473
13.5 一次调用无反馈异步下载 479
13.6 秘诀：使用JSON序列化 480
13.7 秘诀：将XML转换成树 482
13.7.1 树 483
13.7.2 构建分析树 483
13.8 小结 486
附录A Objective-C文字常量 487
A.1 数字 487
A.2 装箱 488
A.3 枚举 488
A.4 容器文字常量 489
A.5 下标 490
A.6 功能测试 490
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS 6核心开发手册
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS开发完全上手-使用Ios和Xcode 5开发移动与平板应用
《ios开发完全上手——使用ios 7和xcode 5开发移动与平板应用》
第1章 初识ios sdk 1
1.1 安装xcode 1
1.2 关于ios sdk 2
1.2.1 免费获取的开发者计划 3
1.2.2 ios开发者计划标准版(个人和公司) 4
1.2.3 企业开发者计划 4
1.2.4 大学开发者计划 5
1.2.5 注册 5
1.2.6 itunes u和在线课程 5
1.2.7 ios sdk工具 5
1.3 测试应用程序：模拟器和设备 7
1.3.1 模拟器的局限 8
1.3.2 接线 9
1.3.3 对ios设备的考量 10
1.4 理解设备型号间的差异 14
1.4.1 屏幕尺寸 14
1.4.2 摄像头 14
1.4.3 音频 15
1.4.4 电话通信 15
1.4.5 core location和core motion之间的差异 15
1.4.6 摇晃支持和接近 16
1.4.7 处理器速度 16
1.4.8 opengl es 17
1.4.9 ios 17
1.5 小结 18
第2章 objective-c新手训练营 19
2.1 使用模板创建hello world应用程序 19
2.1.1 创建hello world项目 19
2.1.2 xcode项目界面快速导航 23
2.1.3 添加hello world标签 24
2.2 objective-c新兵训练营 26
2.2.1 objective-c编程语言 27
2.2.2 类和对象 30
2.3 carvalet应用程序：实现car类 35
2.3.1 实现car方法 39
2.3.2 属性 43
2.3.3 创建并打印car对象 45
2.4 属性：另外两个特性 46
2.5 子类化和继承：挑战一下 49
2.6 小结 52
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS开发完全上手-使用Ios和Xcode 5开发移动与平板应用
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Cisco IOS精髓
译者序
关于作者献辞
关于审稿者
致谢
前言
第1章  IOS软件体系结构基础
1. 1  操作系统基础

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Cisco IOS精髓
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>从iOS到Apple Watch：用WatchKit创建新型可穿戴应用
前言xv
致谢xix
关于作者xxi
1、WatchKit编程入门1
Apple Watch的规格1
获取开发工具2
理解WatchKit程序的架构3
Apple Watch程序的安装4
Apple Watch与iPhone之间的交互4
与Containing iOS App通信5
Apple Watch程序的类型6
Hello, World!6
创建一个iPhone工程6
添加一个WatchKit App Target8
检查Storyboard11
WatchKit App的生命周期12
修改Interface Controller13
在模拟器上运行程序14
小结16
2、Apple Watch的界面导航17
Interface Controller和Storyboard17
Interface Controller的生命周期19
Interface Controller之间的导航22
Hierarchical导航23
Page-Based导航27
Interface Controller之间的数据传递28
自定义返回和取消按钮的文字34
使用代码进行导航35
显示一系列的页面38
修改当前显示的页面40
小结43
3、Apple Watch的用户界面45
响应用户界面45
按钮（Button）46
开关（Switch）59
滑块（Slider）62
显示信息65
标签（Label）65
图片（Image）65
表格（Table）71
获取信息82
获取文本信息82
获取表情符号85
控件的布局86
力感触控91
显示上下文菜单91
通过代码添加菜单项97
小结98
4、iOS程序接口99
本地化99
本地化用户界面102
创建本地化字符串106
使用日期控件112
WatchKit App和Extension之间的通信113
位置数据114
显示地图123
访问Web服务126
共享数据130
小结148
5、显示通知149
什么是通知149
Apple Watch中通知的类型152
实现Short-Look界面153
实现Long-Look界面167
小结178
6、显示Glance179
什么是Glance179
实现Glance180
自定义Glance182
测试Glance186
让程序变得实用186
创建一个共享的App Group187
实现后台抓取188
更新Glance192
小结194
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>从iOS到Apple Watch：用WatchKit创建新型可穿戴应用
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Cisco IOS的IPv6配置
第一章 CISCO IOS简介
第二章 IPV6体系结构
第三章 IPV6头部
第四章 IPV6寻址
第五章 配置IPV6寻址
第六章 在CISCO IOS上路由IPV6
第七章 在CISCO IOS上部署IPV6
第八章 IPV6安全
第九章 监视和诊断IPV6网络
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Cisco IOS的IPv6配置
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Cisco IOS网络安全
第1章　安全性概述
1. 1　本书内容简介
1. 1. 1　身份认证. 授权和统计
1. 1. 2　安全服务器协议
1. 1. 3　数据流过滤
1. 1. 4　网络数据加密

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Cisco IOS网络安全
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iO
总序
一 iO：超分工整合
引言
1 新世纪，e世纪
2 知识经济
3 超分工整合世纪
4 社会与产业的演进
5 运算能力与脑力
二 愿望如何实现
引言
1 为什么需要新愿景？
2 原2000年愿景及达成状况
3 台湾的SWOT
4 2010年新愿景
5 5年目标
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iO
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Cisco IOS IP技术指南
译者序前言第1章
概述

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Cisco IOS IP技术指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>7天玩转iOS 界面开发
第1天　iOS基础UI控件（上）	1
1.1　承载文字的精灵——UILabel	1
1.1.1　创建第一个iOS项目Hello World	1
1.1.2　使用代码重建Hello World项目	7
1.1.3　iOS系统中的UI坐标系	8
1.1.4　UILabel的相关属性设置	9
1.1.5　多行UILabel控件与换行模式	11
1.2　最简单的交互控件——UIButton	13
1.2.1　在屏幕上创建一个UIButton控件	13
1.2.2　UIButton控件的交互状态	14
1.2.3　UIButton类中可以自定义的一些常用属性	15
1.2.4　为UIButton对象添加触发方法	18
1.3　专业显示图片的控件——UIImageView	19
1.3.1　使用UIImageView在屏幕上创建一个图片元素	20
1.3.2　连续变换播放的图片形成动画——UIImageView的帧动画	21
1.4　搜索框控件——UISearchBar	23
1.4.1　添加一个搜索框控件	23
1.4.2　UISearchBar中常用属性的用法	24
1.4.3　UISearchBar的扩展栏	27
1.4.4　UISearchBar的代理方法	28
1.5　简洁小巧的切换控件——UISegmentedControl	30
1.5.1　创建和初始化UISegmentedControl对象	30
1.5.2　UISegmentedControl中的常用属性与方法	31
1.5.3　UISegmmentedControl中切换模块按钮的增、删、改以及布局操作	32
1.5.4　为UISementedControl控件对象添加触发方法	35
1.6　文本输入交互的基础——UITextField	36
1.6.1　搭建一个用户登录界面	36
1.6.2　为UITextField添加挂件	39
1.6.3　监听用户的输入操作	40
1.6.4　收键盘操作	42
1.7　连续变化的美——UISlider	43
1.7.1　通过滑块控件控制视图的颜色渐变	43
1.7.2　UISlider中常用的可自定义属性	44
第2天　基础UI控件（下）	47
2.1　简洁小巧的开关控件——UISwitch	47
2.1.1　创建一个UISwitch控件	47
2.1.2　UISwitch控件中常用属性解析	48
2.1.3　为UISwitch控件添加触发方法	49
2.2　让等待不再寂寞——UIActivityIndicatorView	49
2.2.1　在视图上创建一个UIActivityIndicatorView控件	50
2.2.2　设计一个全局共享的活动指示器控件	52
2.3　扁平化风格的进度条——UIProgressView	55
2.4　分页控制器——UIPageControl	57
2.5　步进控制器——UIStepper	58
2.5.1　创建一个步进控制器控件	58
2.5.2　为UIStepper控件添加图片修饰	60
2.6　警告框视图——UIAlertView	62
2.6.1　在视图上弹出一个警告框	62
2.6.2　UIAlertView的代理方法	64
2.7　活动列表——UIActionSheet	65
2.7.1　在视图上弹出一个UIActionSheet控件	65
2.7.2　UIActionSheet控件的代理方法	66
2.8　统一的警告控制器——UIAlertController	67
2.8.1　关于UIAlertAction类	67
2.8.2　使用UIAlertController创建警告框和活动列表	68
2.8.3　为警告框风格的UIAlertController添加文本输入框	69
第3天　高级UI控件	71
3.1　自由移动的视图——UIScrollView	71
3.1.1　创建一个UIScrollView控件来展示大图片	71
3.1.2　UIScrollView中常用方法与属性解析	72
3.1.3　UIScrollViewDelegate协议中的方法	74
3.1.4　关于UIScrollView的缩放操作	75
3.2　基础的表格视图——UITableView	77
3.2.1　使用表格视图展示列表数据	77
3.2.2　UITableView中数据载体cell的复用机制	79
3.2.3　数据载体UITableViewCell	80
3.2.4　UITableView的编辑模式	82
3.2.5　UITableView的头视图与尾视图	84
3.2.6　为UITableView添加索引栏	85
3.3　高级文本视图——UITextView	86
3.3.1　创建一个UITextView控件	86
3.3.2　UITextView中的常用属性与方法	87
3.3.3　UITextViewDelegate协议中的常用方法	88
3.4　高级集合布局视图——UICollectionView	90
3.4.1　UICollectionView控件的优势与布局方式	91
3.4.2　使用UICollectionView进行九宫格式的布局	91
3.4.3　创建更加灵活的流式布局	93
3.4.4　参差瀑布流布局	94
3.4.5　使用UICollectionView进行圆环布局	98
3.5　选择器控件——UIPickerView	101
3.5.1　创建一个UIPickerView控件	102
3.5.2　UIPickerView选中数据时的回调代理	103
3.6　时间选择器——UIDatePicker	104
3.7　网页视图与iOS原生视图的完美结合——UIWebView	106
3.7.1　APP网络传输安全策略	106
3.7.2　通过网络请求加载UIWebView	107
3.7.3　通过HTML字符串加载UIWebView	108
3.7.4　通过NSData数据加载UIWebView	109
3.7.5　UIWebView中常用方法解析	110
3.7.6　UIWebView的代理方法	111
第4天　视图与逻辑的管理者	113
4.1　基础的视图控制器——UIViewController	113
4.1.1　UIViewController的生命周期	113
4.1.2　UIViewController的视图层级结构	118
4.1.3　UIViewController的切换跳转	119
4.2　表格视图控制器——UITableViewController	121
4.2.1　自定义一个UITableViewController	121
4.2.2　UITableViewController自带的下拉刷新控件	122
4.3　导航控制器——UINavigationController	124
4.3.1　导航控制器的工作原理	124
4.3.2　使用导航控制器进行多界面搭建	125
4.3.3　关于导航栏UINavigationBar	129
4.3.4　导航按钮UIBarButtonItem	131
4.3.5　导航控制器的工具栏	133
4.3.6　iOS 8之后导航控制器的一些有趣功能	134
4.4　标签控制器——UITabBarController	135
4.4.1　标签控制器的工作原理	135
4.4.2　标签控制器的基础用法解析	135
4.4.3　UITabBarItem的使用	138
第5天　iOS动画开发基础	139
5.1　UIView层动画的应用	139
5.1.1　执行UIView层过渡动画的三个类方法	139
5.1.2　创建UIView层的阻尼动画	141
5.1.3　动画参数配置与组合动画	142
5.1.4　UIView层过渡动画支持的属性	144
5.2　UIView层动画的另一种创建方式	145
5.2.1　使用commit方式进行UIView层过渡动画的创建	145
5.2.2　两种UIView层动画创建方式的优劣	147
5.3　UIView的转场动画	147
5.3.1　重绘UIView视图时使用的转场动画	147
5.3.2　切换UIView视图时使用的转场动画	148
5.4　核心动画编程技术——CoreAnimation	149
5.4.1　锚点对视图控件几何位置的影响	150
5.4.2　色彩梯度层——CAGradientLayer	151
5.4.3　视图备份层——CAReplicatorLayer	152
5.4.4　图形渲染层——CAShapeLayer	153
5.4.5　文本绘制层——CATextLayer	154
5.4.6　CAAnimation动画体系介绍	155
5.4.7　使用CABasicAnimation创建基础动画	157
5.4.8　使用CAKeyframeAnimation类创建关键帧动画	160
5.4.9　CALayer层的转场动画——CATransition	161
5.4.10　CALayer层的组合动画——CAAnimationGroup	162
5.4.11　CATransform3D变换的应用	163
5.5　炫酷的粒子效果	165
5.5.1　粒子发射器——CAEmitterLayer	166
5.5.2　粒子单元——CAEmitterCell	168
5.5.3　创建粒子火焰动画	169
5.6　播放GIF动态图	171
5.6.1　使用UIWebView进行GIF动态图播放	171
5.6.2　使用UIImageView帧动画进行GIF动态图播放	172
第6天　iOS界面布局	175
6.1　传统的UIViewAutoresizing布局模式	175
6.1.1　通过代码来设置视图控件的UIViewAutoresizing模式	176
6.1.2　可视化地配置控件的autoresizing属性	179
6.2　autolayout自动布局框架	180
6.2.1　初识autolayout	180
6.2.2　autolayout的属性意义与一个简单的自动布局示例	182
6.2.3　使用Objective-C风格的方法进行代码autolayout布局	186
6.2.4　使用格式化的字符进行autolayout布局对象的创建	188
6.2.5　管理约束相关的几个方法	191
6.2.6  使用autolayout设计一个高度自适应的聊天输入框及动画优化	191
6.2.7　使用第三方库Masonry进行autolayout约束布局	193
第7天　iOS界面开发扩展知识	199
7.1　调用系统拨号与短信息应用	199
7.1.1　跳转到系统拨号应用界面	199
7.1.2　跳转到系统短消息界面	200
7.2　iOS视频播放技术	202
7.2.1　向应用中嵌入视频模块	203
7.2.2　MPMoviePlayerController常用属性与方法解析	204
7.3　视频播放器视图控制器——MPMoviePlayerViewController	208
7.4　AVPlayerViewController视频播放框架与画中画开发技术	209
7.4.1　使用AVPlayerViewController进行视频播放	210
7.4.2　iPad上的画中画播放技术	213
7.5　翻书效果的阅读器视图——UIPageViewController	215
7.5.1　创建UIPageViewController视图控制器	216
7.5.2　双翻页效果的UIPageViewController	220
7.6　更加灵活地创建标签文字——NSAttributedString的应用	221
7.6.1　NSAttributedString类简介	222
7.6.2　可变的属性字符串NSMutableAttributedString	222
7.7　毛玻璃效果的应用——界面模糊处理	224
7.8　iOS地图视图编程技术	226
7.8.1　进行设备地理位置定位	226
7.8.2　原生地图开发技术	229
7.8.3　在地图中添加大头针及标注	232
7.8.4　在地图视图中添加覆盖物	235
7.8.5　在地图中进行线路导航与附近兴趣点检索	238
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>7天玩转iOS 界面开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>《iOS实战：传感器卷（Swift版）》
第1章  准备开始………1
1.1  本书结构……1
1.2  本书中的约定1
1.2.1  实例代码约定…………．2
1.2.2  图示约定………3
1.2.3  方法命名约定…………．5
1.2.4  构造器命名约定………．6
第2章  手势识别………8
2.1手势种类……8
2.2使用手势识别器……… 10
2.2.1  视图对象与手势识别… 10
2.2.2  手势识别状态………… 10
2.2.3  检测Tap（单击）……… 12
2.2.4  检测Long Press（长按）………．  00
2.2.5  检测Pan（平移）……… 26
2.2.6  检测Swipe（滑动）…… 29
2.2.7  检测Rotation（旋转）…    ……32
2.2.8  检测Pinch（手指的合拢和张开）……… 36
2.2.9  检测Screen Edge Pan（屏幕边缘平移）…………． 39
2.3    触摸事件与手势识别… 40
2.3.1  事件处理机制 40
2.3.2  响应者对象与响应链… 41
2.3.3  触摸事件…… 42
2.3.4  手势识别…… 48
本章小结… 51
第3章  加速度计与陀螺仪……52
3.1   加速度计……… 53
3.1.1  访问加速度计 53
3.1.2  实例：通过CMMotionManager访问加速度计……… 54
3.1.3  数据的“滤波”………… 56
3.1.4  实例：数据的“滤波”… 58
3.1.5  感知设备方向 ………62
3.1.6  实例：感知设备方向… 62
3.2  陀螺仪………… 66
3.2.1  访问陀螺仪… 67
3.2.2  检测晃动设备 69
3.2.3  实例：检测晃动设备… 70
本章小结… 71
第4章  指南针与磁力计……… 72
4.1  访问磁力计…… 72
4.1.1  访问导航方面的API  73
4.1.2  磁力计与设备方向…… 73
4.1.3  实例：指南针应用…… 75
4.2  检测磁场……… 78
4.2.1  检测磁场API  79
4.2.2  实例：特斯拉计应用… 79
本章小结… 82
第5章  照相机与摄像头……… 83
5.1iOS设备摄像头……… 84
5.2  图像抓取……… 84
5.2.1  图像选择器… 84
5.2.2  实例：照相机抓取图片………． 85
5.2.3  编辑图片…… 89
5.2.4保存图片…… 90
5.2.5  添加照相机图层……… 92
5.3视频捕获……… 94
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>《iOS实战：传感器卷（Swift版）》
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>宏观经济分析IO和CGE模型应用研究
前言
第一章IO和CGE模型概论
第一节投入产出模型概论
第二节考虑固定资本磨损的投入产出平衡关系
第三节可计算一般均衡模型概论
第二章归因矩阵模型
第一节归因矩阵
第二节基于投人产出模型归因矩阵的定义及性质
第三章相对行标量模型
第一节行标量模型
第二节相对行标量模型
第四章结构分解分析模型
第一节结构分解分析引论
第二节加权平均分解法
第三节 占用变动、局部闭模型中的结构分解分析
第四节列结构分解分析
第五章炼焦业投入占用产出表的编制
第一节乡镇企业与非乡镇炼焦业投入占用产出表的编制
第二节用RAS方法修订第Ⅲ象限系数
第三节可比价投入占用产出序列表的编制方法
第六章投入产出模型在宏观经济分析中的应用
第一节中国乡镇企业和焦炭工业的基本情况
第二节归因矩阵模型分析
第三节焦炭使用强度
第四节相对行标量分析
第五节结构分解分析
第六节北京市产业发展战略研究
第七节长江流域片水利投入占用产出分析
第八节技术进步测算方法研究
第七章基于Excel的CGE“1—2—3”模型
第一节CGE模型概论
第二节“1——2——3”模型及其在Excel中的实现
第八章总结与讨论
参考文献
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>宏观经济分析IO和CGE模型应用研究
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Cisco IOS 12.0参考库――服务质量优化技术
目 录
导言：服务质量概述
QoS是什么
关于QoS体系结构
谁将因使用CISCOIOoQoS而受益
为什么要配置CISCoIOSQoS
端对端QoS模型
CISCO的QoS功能
关于CIscOIOS12.0软件参考书库
使用CISCOIOS软件
第一部 分类
第1章 分类概述
1.1 关于IP优先级
1.2 基于策略的路由选择
1.3 通过边界网关协议实现的QoS策
略传播
1.4 承诺访问速率
第2章 配置基于策略的路由选择
2.1 PBR配置任务列表
2.2 启用PBR
2.3 启用快速交换PBR
2.4 启用本地PBR
2.5 PBR配置示例
第3章 配置通过边界网关协议实现的QOS
策略传播
3.1 通过BGP实现的QoS策略传播
配置任务列表
3.2 配置基于群集列表的策略传播
3.3 配置基于AS路径属性的策
略传播
3.4 配置基于访问列表的策略传播
3.5 监视通过BGP实现的QoS策
略传播
3.6 通过BGP实现的QoS策略传
播配置示例
第4章 配置承诺访问速率
4.1 CAR配置任务列表
4.2 为所有的IP通信配置CAR和DCAR
4.3 配置CAR和DCAR策略
4.4 配置基于类的DCAR策略
4.5 监视CAR和DCAR
4.6 CAR和DCAR配置示例
第二部分 拥塞管理
第5章 拥塞管理概述
5.1 为什么需要使用拥塞管理技术
5.2 如何决定使用哪一种排队策略
5.3 先入先出排队方式
5.4 加权公平排队方式
5.5 自定义排队
5.6 优先权排队
第6章 配置加权公平排队
6.1 WFQ配置任务列表
6.2 配置WFQ和DWFQ
6.3 监视公平排队
6.4 公平排队配置示例
第7章 配置自定义排队
7.1 自定义排队配置任务列表
7.2 规定自定义排队列表
7.3 指定自定义队列的最大容量
7.4 把数据包分配给自定义队列
7.5 监视自定义队列列表
7.6 自定义排队配置示例
第8章 配置优先级排队
8.1 优先级配置任务列表
8.2 定义优先级列表
8.3 给某个接口分配优先级列表
8.4 监视优先级排队列表
8.5 优先级排队配置示例
第三部分 避免拥塞
第9章 避免拥塞概述
9.1 尾部丢弃
9.2 加权随机早期检测
第10章 配置加权随机早期检测
10.1 WRED配置任务列表
10.2 启动WRED
10.3 改变WRED参数
10.4 监视WRED和DWRED
10.5 WRED和DWRED的配置示例
第四部分 监督及规定
第11章 监督及规定概述
11.1 什么是令牌记录
11.2 用CAR监督
11.3 通信量规定
第12章 配置通用的通信量规定
12.1 GTS配置任务列表
12.2 配置GTS
12.3 为访问列表配置GTS
12.4 为帧中继网络配置自适应
的GTS
12.5 监控GTS配置
12.6 GTS配置示例
第13章 配置帧中继和帧中继通信量规定
13.1 FRTS配置任务目录
13.2 配置映射表等级
13.3 配置FRTS
13.4 监控帧中继连接
13.5 FRTS配置示例
第五部 分信令
第14章 信令概述
14.1 IP优先权
14.2 RSVP
14.3 工作原理
第15章 配置RSVP
15.1 RSVP保留类型
15.2 对RSVP配置进行规划
15.3 资源保留协议配置任务列表
15.4 使RSVP有效
15.5 在RSVP数据库中输入发送方
15.6 在RSVP数据库中输入接收方
15.7 输入多址传送地址
15.8 控制哪一个RSVP邻居能够
提供一个保留
15.9 监控RSVP
15.10 用于多址传送会话的RSVP
配置示例
第六部分 链接效率机制
第16章 链接效率机制概述
16.1 链接分块和交叉
16.2 CRTP报头
第17章 配置用于多链接PPP的链接
分块和交叉
17.1 用于多链接PPP的交叉的配置
任务列表
17.2 为实时通信配置MLP交叉和排队
17.3 监视PPP和MLP接口
17.4 MLP交叉和链接分块示例
第18章 配置压缩实时协议
18.1 CRTP配置任务列表
18.2 配置CRTP之前须知
18.3 在串行接口上使CRTP有效
18.4 使具有帧中继封装的CRTP有效
18.5 改变报头压缩连接的个数
18.6 显示系统和网络统计数据
18.7 CRTP配置示例
第19章 服务质量命令
CISC0术语

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Cisco IOS 12.0参考库――服务质量优化技术
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>网站开发非常之旅  iOS移动网站开发详解
第1篇　基础篇
第1章  iOS系统基础	2
1.1  iOS系统介绍	2
1.1.1  iOS发展史	2
1.1.2  全新的版本--iOS 7	3
1.2  从iPhone到iPad	4
1.2.1  让世界疯狂的iPhone	4
1.2.2  改变世界的iPad	5
1.3  iOS的常用开发框架	5
1.3.1  Foundation框架简介	5
1.3.2  Cocoa框架简介	7
第2章  搭建开发环境	9
2.1  开发前的准备--加入iOS开发团队	9
2.2  安装Xcode	11
2.2.1  Xcode介绍	12
2.2.2  iOS SDK介绍	12
2.2.3  下载并安装Xcode	14
2.3  创建一个Xcode项目并启动模拟器	17
2.4  在iOS设备中测试网页	21
第3章  HTML、CSS和JavaScript	24
3.1  HTML简介	24
3.1.1  HTML初步	24
3.1.2  字体格式设置	25
3.1.3  使用标示标记	28
3.1.4  使用区域和段落标记	29
3.1.5  使用表格标记	31
3.1.6  使用表单标记	34
3.2  CSS技术基础	38
3.2.1  基本语法	38
3.2.2  CSS编码规范	39
3.3  JavaScript技术基础	40
3.3.1  JavaScript概述	41
3.3.2  JavaScript运算符	42
3.3.3  JavaScript循环语句	43
3.3.4  JavaScript函数	45
3.3.5  JavaScript事件	47
第4章  创建移动Web	50
4.1  创建能在通用设备上运行的网站	50
4.1.1  确定应用程序类型	50
4.1.2  使用CSS改善HTML外观	51
4.1.3  加入移动<meta>标记	53
4.1.4  优化网站	54
4.2  将站点升级至HTML 5	54
4.2.1  确定何时升级和升级的具体方式	54
4.2.2  升级到HTML 5的步骤	56
4.2.3  将HTML 5特性作为额外内容添加至网站	57
4.2.4  HTML 5为移动Web提供的服务	57
4.3  将Web程序迁移到移动设备	58
4.3.1  选择Web编辑器	58
4.3.2  测试应用程序	58
4.3.3  移动网站的内容特点	59
4.3.4  为移动设备调整可视化的设计	59
4.3.5  HTML 5及CSS 3检测	60


第2篇　HTML 5技术篇
第5章  HTML 5在移动设备中	64
5.1  把握未来的风向标	64
5.1.1  漫长的发展历程	64
5.1.2  无与伦比的用户体验	64
5.2  在iOS设备中使用HTML 5	65
5.2.1  使用HTML 5设计移动网站时需要
考虑的问题	66
5.2.2  主流移动设备的屏幕分辨率	66
5.2.3  使用标准的HTML、CSS和JavaScript
技术	66
5.3  使用HTML 5设计移动网站前的准备	67
5.3.1  为移动网站准备专用的域名	67
5.3.2  准备测试环境	67
第6章  HTML 5的整体架构	69
6.1  设置网页头部元素	69
6.1.1  设置文档类型	69
6.1.2  设置所有链接的默认地址或默认目标	70
6.1.3  链接标记	71
6.1.4  设置有关页面的元信息	72
6.1.5  定义客户端脚本	73
6.1.6  定义HTML文档的样式信息	73
6.1.7  设置页面标题	74
6.2  设置页面正文	75
6.3  注释	76
6.4  和页面结构相关的新元素	77
6.4.1  定义区段的标记	77
6.4.2  定义独立内容的标记	78
6.4.3  定义导航链接标记	78
6.4.4  定义所处内容之外的内容	79
6.4.5  定义页脚内容的标记	80
第7章  体验基本元素	81
7.1  在页面中输出一段文字	81
7.2  对页面进行分栏设计	82
7.3  使用details标记元素实现交互	83
7.3.1  常用属性	83
7.3.2  实现下拉弹出效果	84
7.4  使用summary标记元素实现交互	85
7.5  使用menu标记元素	86
7.5.1  属性介绍	86
7.5.2  实现右键菜单功能	87
7.6  使用command标记元素	89
7.7  使用progress标记元素	90
7.8  使用meter标记元素	92
7.9  使用树节点标记元素	94
7.9.1  section元素	94
7.9.2  nav元素	94
7.9.3  hgroup元素	94
7.10  使用分组标记元素	96
7.10.1  ul元素	96
7.10.2  ol元素	97
7.11  使用文本层次语义标记	98
7.11.1  time元素	98
7.11.2  mark元素	99
7.11.3  cite元素	99
7.12  使用图片标记元素	100
7.13  使用框架标记元素	101
7.14  使用object标记元素	102
第8章  使用表单元素	104
8.1  表单元素的类型	104
8.1.1  email类型	104
8.1.2  url类型	105
8.1.3  number类型	106
8.1.4  range类型	107
8.1.5  Date Pickers（数据检出器）	109
8.1.6  search类型	111
8.2  表单元素的属性	112
8.2.1  记住表单中的数据	112
8.2.2  验证表单中输入的数据是否合法	114
8.2.3  在文本框中显示提示信息	115
8.2.4  验证文本框中的内容是否为空	116
8.2.5  开启表单的自动完成功能	117
8.2.6  重写表单中的某些属性	118
8.2.7  自动设置表单中传递数字	119
8.2.8  在表单中选择多个上传文件	119
8.3  新的表单元素	120
8.3.1  在表单中自动提示输入文本	120
8.3.2  一个简单的乘法计算器	122
8.3.3  在网页中生成一个密钥	123
第9章  音频和视频应用	124
9.1  处理视频	124
9.1.1  使用<video>标记	124
9.1.2  <video>标记的属性	125
9.2  处理音频	128
9.2.1  <audio>标记	128
9.2.2  <audio>标记的属性	129
9.3  高级应用	131
9.3.1  为播放的视频准备一幅素材图片	131
9.3.2  显示加载视频的状态	132
9.3.3  出错时在播放屏幕中显示出错信息	133
9.3.4  检测浏览器是否支持这个媒体类型	135
9.3.5  显示视频的播放状态	137
9.3.6  显示播放视频的时间信息	138
第10章  在网页中绘图	141
10.1  使用<canvas>标记	141
10.2  HTML DOM Canvas对象	142
10.3  HTML 5绘图实践	143
10.3.1  在指定位置绘制指定角度的相交线	143
10.3.2  绘制一个圆	144
10.3.3  在画布中显示一幅指定的图片	145
10.3.4  绘制一个指定大小的正方形	145
10.3.5  绘制一个带边框的矩形	146
10.3.6  绘制一个渐变图形	148
10.3.7  绘制不同的圆形	150
10.3.8  绘制一个渐变圆形	153
10.3.9  移动、缩放和旋转网页中的圆形	155
10.3.10  使用组合的方式显示图形	156
10.3.11  使用不同的方式平铺指定的图像	158
10.3.12  切割指定的图像	160
第11章  数据存储	162
11.1  Web存储	162
11.1.1  Web存储的定义	162
11.1.2  Web存储的影响	162
11.2  HTML 5中的两种存储方式	163
11.2.1  使用localStorage方式	163
11.2.2  使用sessionStorage方式	164
11.3  数据存储对象	165
11.3.1  使用sessionStorage对象	165
11.3.2  使用localStorage对象	167
11.3.3  使用localStorage对象中的clear()方法	170
11.3.4  使用localStorage对象中的属性	172
11.4  WebDB存储方式	173
11.4.1  WebDB存储基础	173
11.4.2  执行事务操作	174
11.4.3  执行SQL语句	175
11.5  实现一个日记式事务提醒系统	177


第3篇　jQuery Mobile技术篇
第12章  jQuery Mobile基础	180
12.1  jQuery Mobile简介	180
12.1.1  jQuery介绍	180
12.1.2  jQuery Mobile的特点	181
12.1.3  对浏览器的支持	181
12.2  jQuery Mobile的四个突出特性	182
12.2.1  跨所有移动平台的统一UI	182
12.2.2  简化的标记驱动开发	182
12.2.3  渐进式增强	183
12.2.4  响应式设计	183
12.3  jQuery Mobile语法基础	184
12.3.1  页面模板	184
12.3.2  多页面模板	187
12.3.3  使用Ajax修饰导航	188
12.3.4  转换	192
12.3.5  对话框	192
12.3.6  有媒体查询的响应式布局	198
第13章  实现导航功能	200
13.1  页眉栏	200
13.1.1  页眉基础	200
13.1.2  实现页眉定位	200
13.1.3  在页眉中使用按钮	203
13.1.4  在页眉中使用分段控件	206
13.1.5  实现回退按钮效果	209
13.2  页脚栏	211
13.2.1  页脚基础知识	212
13.2.2  页脚定位	215
13.2.3  页脚按钮	216
13.3  工具栏	216
13.3.1  带有图标的工具栏	216
13.3.2  带有分段控件的工具栏	218
13.4  标签栏	220
13.4.1  带有标准图标的标签栏	220
13.4.2  永久标签栏	222
13.4.3  有自定义图标的标签栏	223
13.4.4  带有分段控件的标签栏	225
第14章  按钮	228
14.1  链接按钮	228
14.2  表单按钮	229
14.3  使用图像按钮	230
14.4  使用有图标的按钮	231
14.5  使用只带有图标的按钮	233
14.6  实现按钮定位	235
14.7  自定义按钮图标	236
14.8  使用分组按钮	239
14.9  使用主题按钮	241
14.10  使用动态按钮	242
14.10.1  按钮选项	242
14.10.2  按钮方法	243
14.10.3  按钮事件	243
14.10.4  动态按钮演练	244
第15章  表单	247
15.1  表单基础	247
15.2  在表单中输入文本	249
15.2.1  动态输入文本	251
15.2.2  文本输入选项	251
15.2.3  文本输入方法	252
15.2.4  文本输入事件	252
15.3  选择菜单	254
15.3.1  自定义选择菜单	256
15.3.2  占位符选项	258
15.3.3  动态选择菜单	258
15.3.4  选择菜单选项	258
15.3.5  选择菜单方法	260
15.3.6  选择菜单事件	260
15.4  单选按钮	263
15.4.1  单选按钮选项	264
15.4.2  单选按钮方法	265
15.4.3  单选按钮事件	265
15.5  复选框	267
15.5.1  动态复选框	267
15.5.2  使用复选框	267
15.6  使用滑动条	270
15.6.1  滑动条基础	271
15.6.2  滑动条选项	272
15.6.3  滑动条方法	273
15.6.4  滑动条事件	273
15.7  使用开关控件	275
15.7.1  开关控件基础	275
15.7.2  使用动态开关控件	277
15.8  使用本地表单元素	278
15.9  使用Mobiscroll日期选择器	282
第16章  列表	285
16.1  列表基础	285
16.2  内置列表	286
16.3  列表分割线	288
16.4  带有缩略图和图标的列表	290
16.5  使用拆分按钮列表	295
16.6  使用编号列表	297
16.7  设置列表为只读	299
16.8  使用列表徽章（计数泡）	301
16.9  使用搜索栏过滤列表	304
16.10  实现动态列表效果	307
16.10.1  列表选项	307
16.10.2  列表方法	310
16.10.3  列表事件	310
第17章  内容格式化	313
17.1  使用基本的HTML样式	313
17.2  使用表格布局	313
17.2.1  表格模板	313
17.2.2  两列表格	314
17.2.3  三列表格	316
17.2.4  带有app图标的四列表格	317
17.2.5  使用五列表格	318
17.2.6  多行表格	319
17.2.7  不规则的表格	320
17.2.8  Springboard	322
17.3  可折叠的内容块	326
17.3.1  嵌套折叠和折叠组	327
17.3.2  创建可折叠的内容块	327
17.4  折叠组标记	329
17.4.1  折叠组标记（Collapsible set markup）
基础	330
17.4.2  实战演练	330
17.5  使用CSS实现设置样式	333
17.5.1  实现背景渐变	333
17.5.2  在Mozilla浏览器实现背景渐变	335
17.5.3  实现页眉渐变效果	337
第18章  主题化	340
18.1  主题设计基础	340
18.2  主题和调色板	343
18.3  使用主题的默认值	345
18.4  继承主题	347
18.5  自定义主题	351
18.6  使用ThemeRoller	358
18.6.1  调色板和全局设置	359
18.6.2  Preview Inspector和QuickSwatch Bar	359
18.6.3  使用Adobe Kuler集成工具	360
18.6.4  使用ThemeRoller	361
第19章  jQuery Mobile API	366
19.1  配置jQuery Mobile	366
19.1.1  mobileinit事件	366
19.1.2  可配置的jQuery Mobile选项	367
19.2  方法	369
19.3  事件	378
19.3.1  触摸事件（Touch Events）	378
19.3.2  虚拟鼠标事件（Virtual Mouse Events）	379
19.3.3  设备方向变化事件（Orientation Change
Events）	380
19.3.4  滚屏事件（Scroll Events）	381
19.3.5  页面加载事件（Page Load Events）	383
19.3.6  页面显示/隐藏事件（Page Show/Hide
Events）	388
19.3.7  页面初始化事件（Page Initialization
Events）	389
19.3.8  动画事件（Animation Events）	391
19.3.9  触发事件	393
19.4  属性	393
19.5  数据属性	393
19.6  有响应的布局助手	397
19.6.1  方向类（Orientation Classes）	397
19.6.2  最小/最大宽度折断点（Class Min/Max
Width Breakpoint Classes）	397
19.6.3  添加宽度折断点（Adding Width
Breakpoints）	398
19.6.4  运行媒介查询（Running Media Queries）	398


第4篇　PhoneGap技术篇
第20章  PhoneGap基础	400
20.1  PhoneGap简介	400
20.1.1  产生背景	400
20.1.2  什么是PhoneGap	401
20.1.3  PhoneGap的发展历程	401
20.1.4  全新的功能	402
20.1.5  PhoneGap的发展现状	402
20.2  PhoneGap的优点和缺点分析	403
20.2.1  原生应用	403
20.2.2  Web应用	404
20.2.3  混合型应用	404
20.3  PhoneGap API基础	405
20.4  PhoneGap的工作	406
20.5  PhoneGap开发必备技术	407
20.5.1  Titanium	407
20.5.2  Adobe AIR	408
20.5.3  Corona	409
20.5.4  常用的JavaScript移动UI框架	409
第21章  使用PhoneGap开发移动
Web应用	411
21.1  PhoneGap移动Web开发的步骤	411
21.2  搭建PhoneGap开发环境	412
21.2.1  准备工作	412
21.2.2  获得PhoneGap开发包	412
21.2.3  在iOS平台上创建基于PhoneGap
的程序	414
第22章  PhoneGap的事件机制	417
22.1  PhoneGap的事件列表	417
22.2  deviceready事件	418
22.3  pause和resume事件	420
22.4  online和offline事件	422
22.4.1  online事件	422
22.4.2  offline事件	423
22.5  batterycritical、batterylow和
batterystatus事件	424
第23章  API--应用、通知、设备、
网络连接和加速计	428
23.1  应用API	428
23.1.1  白名单安全机制	428
23.1.2  访问对象的方法	429
23.2  通知API	430
23.2.1  主要对象	430
23.2.2  业务操作	430
23.3  设备API	439
23.3.1  主要对象	439
23.3.2  使用设备API	439
23.4  网络连接API	440
23.5  加速计API	442
23.5.1  主要对象	442
23.5.2  getCurrentAcceleration()方法	443
23.5.3  watchAcceleration()方法	445
23.5.4  clearWatch()方法	447
第24章  API--地理位置和指南针	449
24.1  地理位置API	449
24.1.1  地理位置应用背景	449
24.1.2  Geolocation接口介绍	450
24.1.3  三个对象	450
24.1.4  三个参数	454
24.1.5  操作方法	455
24.2  指南针API	460
24.2.1  两个对象	460
24.2.2  三个参数	461
24.2.3  三个函数	461
第25章  API--照相机、采集、媒体	467
25.1  照相机	467
25.1.1  camera.getPicture()方法	467
25.1.2  业务操作	468
25.1.3  实战演练	469
25.2  Capture	474
25.2.1  Capture的对象	474
25.2.2  Capture的方法	477
25.3  Media	484
25.3.1  主要参数介绍	484
25.3.2  主要方法介绍	484
第26章  API--通讯录和数据存储	497
26.1  Contacts通讯录	497
26.1.1  主要对象	497
26.1.2  五个方法	508
26.1.3  综合实例	511
26.2  Storage存储	517
26.2.1  主要对象	518
26.2.2  主要方法	525
第27章  API--文件操作	526
27.1  主要对象	526
27.1.1  DirectoryEntry	526
27.1.2  DirectoryReader和File	527
27.1.3  FileEntry	527
27.1.4  FileError	527
27.1.5  FileReader	528
27.1.6  FileSystem	529
27.1.7  FileTransfer和FileTransferError	530
27.1.8  FileUploadOptions和FileUploadResult	530
27.1.9  FileWriter	531
27.1.10  Flags	534
27.1.11  LocalFileSystem	534
27.1.12  Metadata	535
27.2  主要方法	535
27.2.1  getMetadata()方法	536
27.2.2  moveTo()方法	536
27.2.3  copyTo()方法	537
27.2.4  toURI()方法	537
27.2.5  remove()方法	538
27.2.6  getParent()方法	538
27.2.7  createReader()和getDirectory()方法	539
27.2.8  getFile()方法	539
27.2.9  removeRecursively()方法	540
27.2.10  readEntries()方法	540
27.2.11  createWriter()方法	541
27.2.12  readAsDataURL()和readAsText()方法	541
27.2.13  upload()方法	544
27.2.14  download()方法	545
第28章  PhoneGap的插件	547
28.1  PhoneGap插件基础	547
28.2  使用PhoneGap插件	548
28.2.1  ChildBrowser插件介绍	548
28.2.2  使用ChildBrowser插件	549
28.3  实现PhoneGap插件	552
28.3.1  编写前的准备	552
28.3.2  编写PhoneGap插件	553
28.3.3  将PhoneGap嵌入到iOS程序中	557
28.4  常用的PhoneGap插件	559
28.4.1  NativeControls插件	559
28.4.2  WebGL插件	560
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>网站开发非常之旅  iOS移动网站开发详解
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS开发项目化入门教程
第1章 iOS应用开发入门 1.1 带你认识iOS 1.1.1 iOS简介 1.1.2 iOS框架层次 1.1.3 iOS开发设备 1.1.4  iOS8的全新功能 1.2 搭建开发环境 1.2.1 申请加入iOS开发团队 1.2.2 下载和安装Xcode与iOSSDK 1.2.3 Xcode6的新特性 1.3 配置iOS设备以运行程序 1.3.1 生成并安装证书 1.3.2 注册设备 1.3.3 创建应用程序ID 1.3.4 创建并安装描述文件 1.4 使用Xcode创建**个iOS程序 1.4.1 在Xcode中创建项目 1.4.2 熟悉Xcode界面 1.4.3 了解项目文件组织结构 1.4.4 编译并在模拟器上运行程序 1.4.5 使用InterfaceBuilder 丰富程序界面 1.4.6 使用iOS模拟器 1.5 本章小结 第2章 UI控件 2.1 UIView概述 2.1.1 什么是UIView 2.1.2 UIView的常见属性和方法 2.2 标签控件和图片控件 2.2.1 标签控件（UILabel） 2.2.2 图片控件（UIImageView） 2.2.3 实战演练--会喝牛奶的汤姆猫 2.3 按钮控件（UIButton） 2.3.1 按钮控件概述 2.3.2 实战演练--使用 按钮移动、旋转、缩放图片 2.4 文本框控件和文本控件 2.4.1 文本框控件（UITextField） 2.4.2 实战演练--用户 登录'传智播客' 2.4.3 多行文本控件（UITextView） 2.5 开关控件（UISwitch） 2.5.1 开关控件概述 2.5.2 实战演练--使用开关控制'灯泡' 2.6 滑块控件（UISlider） 2.6.1 滑块控件概述 2.6.2 实战演练--使用滑块控制音量 2.7 分段控件（UISegmentControl） 2.7.1 分段控件概述 2.7.2 实战演练--使用分段控件控制'花 朵' 2.8 数据选择控件 2.8.1 日期选择控件（UIDatePicker） 2.8.2 实战演练--倒计时 2.8.3 选择控件（UIPickerView） 2.8.4 实战演练--点菜系统 2.9 屏幕滚动控件（UIScrollView） 2.9.1 屏幕滚动控件概述 2.9.2 实战演练--喜马拉雅 2.10 页控件（UIPageControl） 2.10.1 页控件概述 2.10.2 实战演练--自动轮播器 2.11 本章小结 第3章 表视图 3.1 表视图基础 3.1.1 表视图的组成 3.1.2 表视图样式设置 3.1.3 数据源协议 3.1.4 委托协议 3.1.5 单元格的组成和样式 3.2 实战演练--汽车品牌 3.2.1 实战演练－创建简单表视图 3.2.2 实战演练--添加索引 3.2.3 实战演练--添加搜索栏 3.3 自定义单元格   3.4 静态单元格 3.5 实战演练--通信录 3.5.1 实战演练--删除和插入单元格 3.5.2 实战演练--移动单元格 3.6 表视图UI设计模式 3.6.1 分页模式 3.6.2 下拉刷新模式 3.6.3 iOS7的新特性--下拉刷新控件     3.6.4 项目实战--下拉刷新时间数据 3.7 本章小结 第4章 多视图控制器管理 4.1 视图控制器概述 4.1.1 程序启动原理 4.1.2 视图控制器 4.2 导航控制器 4.2.1 导航控制器的组成 4.2.2 导航控制器的工作原理 4.2.3 实战演练--图书列表 跳转到图书详情 4.3 标签页控制器 4.3.1 标签页控制器的组成 4.3.2 实战演练--搭建的UI框架 4.4 本章小结 第5章 iOS常用设计模式 5.1 MVC模式 5.1.1 MVC概述 5.1.2 CocoaTouch中的MVC模式 5.2 委托模式 5.2.1 委托模式概述 5.2.2 CocoaTouch框架的委托模式 5.2.3 自定义委托模式 5.3 观察者模式 5.3.1 观察者模式概述 5.3.2 KVC机制 5.3.3 KVO机制 5.3.4 通知机制 5.4 单例模式 5.4.1 单例模式概述 5.4.2 实战演练--ARC GCD 情况下的单例模式 5.5  本章小结 第6章 数据存储 6.1 沙盒机制 6.1.1 沙盒概述 6.1.2 沙盒结构分析 6.1.3 沙盒目录获取方式 6.2 plist属性列表 6.2.1 实战演练--创建PropertyList工程 6.2.2 实战演练--数据的保存 6.2.3 实战演练--数据的读取 6.3 偏好设置 6.3.1 偏好设置的概述 6.3.2 实战演练--记住密码 6.4 对象归档 6.4.1 对象归档概述 6.4.2 NSCoding协议 6.4.3 实战演练--归档自定义对象 6.5 SQLite数据库 6.5.1 SQLite简介 6.5.2 SQL语句 6.5.3 实战演练--使用 SQLite3存储对象 6.6 CoreData 6.6.1 CoreData简介 6.6.2 实战演练--使用CoreData 创建模型 6.6.3 实战演练--使用CoreData 插入、查询、删除数据   6.7 本章小结 第7章 事件与手势识别 7.1 事件概述 7.2 触摸处理 7.2.1 触屏对象 7.2.2 响应对象 7.2.3 响应者链条 7.2.4 实战演练--多点触摸 7.3 手势识别 7.3.1 UIGestureRecognizer类 7.3.2 实战演练--轻扫手势 7.3.3 实战演练--捏合手势 7.4 本章小结 第8章 核心动画 8.1 CALayer 8.1.1 CALayer类概述 8.1.2 实战演练--给图像添加 阴影、边框和圆角 8.2 CoreAnimation详解 8.3 属性动画 8.3.1 CAPropertyAnimation类 8.3.2 实战演练--使用动画旋转、平移、 渐变和缩放'爱心' 8.3.3 实战演练--小圆点绕矩形、圆形 轨迹循环运动 8.4 实战演练--使用动画组实现 '游动的小鱼' 8.5 转场动画 8.5.1 CATransition类 8.5.2 实战演练--图片浏览器 8.6 本章小结
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS开发项目化入门教程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Cisco IOS的IPv6配置
译者序
致谢
作者简介
技术顾问
技术编辑
前言

第1章 Cisco IOS简介
引言
连接到路由器
输入命令配置Cisco路由器
使用快捷方式提高效率
小结
内容要点
常见问题解答

第2章 IPv6体系结构
引言
了解IPv6的优点
比较IPv6和IPv4
IPv6网络结构
上层协议问题
了解ICMPv6
了解邻居发现
小结
内容要点
常见问题解答

第3章 IPv6头部
引言
分析IPv6头部
比较IPv6和IPv4头部
IPv6扩展头部
小结
内容要点
常见问题解答

第4章 IPv6寻址
引言
IPv6寻址的基础
IPv6寻址方案的特征
未来开发的需要
小结
内容要点
常见问题解答

第5章 配置IPv6寻址
引言
配置IPv6寻址
验证寻址配置
小结
内容要点
常见问题解答

第6章 在Cisco IOS上路由IPv6
引言
解释IPv6 RIP
配置IPv6 RIP
探讨IPv6 IS-IS
配置IPv6 IS-IS
描述IPv6多协议BGP扩展
配置IPv6 BGP扩展
其他路由协议和未来的发展
小结
内容要点
常见问题解答

第7章 在Cisco IOS上部署IPv6
引言
IPv6部署策略
了解部署方法
在IPv4和IPv6之间转换
小结
内容要点
常见问题解答

第8章 IPv6安全
引言
IPSec概述
了解IPSec的构件
组合IPSec的加密机制
应用周边安全
小结
内容要点
常见问题解答

第9章 监视和诊断IPv6网络
引言
使用show命令
使用debug命令
分析IPv6业务
小结212
内容要点
常见问题解答

附录 在Cisco IOS上配置IPv6的内容要点
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Cisco IOS的IPv6配置
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Cisco IOS技术基础
目 录
前言
第1章 路由和桥接理论
1.1 初识连网
1.1.1 OSI参考模型
1.1.2封装
1.1.3第2层定址
1.1.4 第3层定址
1.2总论
1.2.1桥接
1.2.2路由
1.3IOS
第2章 初始配置
2.1路由器的基本组成
2.1.1处理器
2.1.2内存
2.1.3接口
2.1.4控制台端口
2.1.5辅助端口
2.1.6配置文件
2.1.7进程
2.2计划配置
2.2.1名字
2.2.2接口
2.2.3网络协议
2.2.4接口地址
2.2.5密码
2.3连接路由器
2.3.1硬件连接
2.3.2软件连接
2.4 打开路由器
2.4.1运行引导软件
2.4.2运行IOS
2.5系统配置对话
2.5.1Dallas的设置
2.5.2FortWorth的设置
2.6路由器设置结果
2.7连接接口
2.8完成
第3章IOS命令行界面
3.1登录
3.2命令提示和模式
3.2.1用户模式
3.2.2特权模式
3.2.3配置模式
3.2.4 ROM监视器模式
3.3与IOS沟通
3.3.1命令行编辑
3.3.2缩写
3.3.3获取帮助
3.3.4 命令完成
3.3.5命令撤消
3.3.6屏幕过载
3.4 注销
3.5小结
第4章 检查IOS
4.1常规路由器信息
4.2输入/输出设备
4.2.1闪存
4.2.2控制器
4.2.3接口
4.2.4 终端线
4.3IOS状态
4.3.1CPU利用率
4.3.2内存利用率
4.3.3缓冲利用率
4.3.4堆栈
4.3.5路由和桥接表
4.3.6记录
4.3.7时间
4.3.8协议
4.3.9环境
4.4配置文件
4.4.1运行配置
4.4.2启动配置
4.5小结
第5章IOS常规任务
5.1简单的管理配置任务
5.1.1主机名
5.1.2标题
5.1.3密码
5.1.4命令提示
5.1.5地址解析
5.2 接口任务
5.2.1接口类型
5.2.2接口编号
5.2.3设置封装
5.2.4 设置带宽
5.2.5建立描述
5.2.6清除
5.2.7关闭接口
5.3终端行任务
5.3.1设置密码
5.3.2设置超时
5.3.3清除
5.4 管理配置文件
5.4.1显示运行配置
5.4.2更新运行配置
5.4.3备份运行配置
5.4.4显示启动配置
5.4.5替换启动配置
5.4.6备份启动配置
5.5.访问远程路由器
5.6Cisco搜索协议
5.7发送消息
5.8调试
5.9重新启动
第6章 配置IP
6.1IP定址
6.1.1子网
6.1.2公共和私有IP地址
6.2IP综述
6.2.1第1和第2层
6.2.2第3层
6.2.3第4层
6.2.4 第5、6和7层
6.3IP路由
6.4 配置接口IP
6.5增添一个路由器
6.5.1在DallasSerial0上配置IP
6.5.2在FortWorthSeriall上配置IP
6.5.3配置Austin
6.5.4 检查IP路由表
6.6静态路由
6.6.1用Ping测试连通情况
6.6.2增加更多的静态路由
6.6.3删除静态路由
6.7动态路由协议
6.7.1RIP
6.7.2IGRP
6.7.3EIGRP
6.7.4 OSPF
第7章 配置IPX
7.1IPX定址
7.2IPX综述
7.2.1第1和第2层
7.2.2第3层
7.2.3第4、56和7层
7.3IPX路由
7.4IPX配置
7.5IPX校验
7.6IPXEIGRP配置
7.7多IPX封装配置
7.8IPX配置总结
7.9删除IPX
第8章 配置AppleTalk
8.1AppleTalk定址
8.2AppleTalk综述
8.2.1第1和第2层
8.2.2第3层
8.2.3第4层
8.2.4第5层
8.2.5第6和第7层
8.3AppleTalk路由
8.4AppleTalk配置
8.5AppleTalk校验
8.6AppleTalkEIGRP配置
8.7AppleTalk配置总结
8.8删除AppleTa1k
第9章 配置DECnet
9.1DECnet定址
9.2DECnet综述
9.3DECnet配置
9.4DECnet校验
9.5DECnet配置总结
9.6删除DECnet
第10章 配置VINES
10.1VINES定址
10.2VINES综述
10.3VINES配置
10.4VINES校验
10.5VINES配置总结
10.6删除VINES
第11章 配置透明桥接
11.1透明桥接综述
11.2透明桥接配置
11.3透明桥接校验
11.4透明桥接配置总结
11.5删除透明桥接
第12章 配置帧中继
12.1帧中继综述
12.2帧中继配置
12.2.1帧中继NBMA配置和校验
12.2.2帧中继子接口配置和校验
12.3帧中继配置总结
第13章 配置SRB和DLSw
13.1SRB综述
13.2SRB配置
13.3DLSw综述
13.4DLSw配置
13.5SRB和DLSw校验
13.6SRB和DLSw总结
附录A 命令索引
附录B 缩语字典
附录C 最终配置
参考文献

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Cisco IOS技术基础
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Cisco IOS广域网解决方案 (精装)
第一章 广域网概述
第二章 在串行接口上进行ATM接入配置
第三章 在Cisco7500系列路由器的AIP配置ATM
第四章 在Cisco7200和7500系列路由器ATM端口适配器
第五章 在Cisco4500和4700路由器NPM上配置ATM
第六章 ATM 命令
第七章 配置帧中继
第八章 帧中继命令
……

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Cisco IOS广域网解决方案 (精装)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>疯狂iOS讲义（提高篇）（含光盘1张）
第1章　多点触摸与手势检测	1
1.1　响应者链	2
1.2　响应触碰方法	3
1.3　使用手势处理器（UIGestureRecognizer）	3
1.3.1　使用UITapGestureRecognizer处理点击手势	4
1.3.2　使用UIPinchGestureRecognizer处理捏合手势	6
实例：通过捏合手势缩放图片	7
1.3.3　使用UIRotationGestureRecognizer处理旋转手势	9
实例：通过旋转手势旋转图片	9
1.3.4　使用UISwipeGestureRecognizer处理轻扫手势	11
实例：贪食蛇	13
1.3.5　使用UIPanGestureRecognizer处理拖动手势	19
1.3.6　使用UILongPressGestureRecognizer处理长按手势	21
实例：长按添加按钮	22
1.4　创建和使用自定义手势处理器	24
1.4.1  开发自定义手势处理器	24
1.4.2　使用自定义手势处理器	26
1.5　本章小结	27
第2章　国际化	28
2.1　iOS应用国际化的基础	29
2.1.1　iOS应用的国际化思路	29
2.1.2　国际化支持的语言和国家	31
2.2　国际化界面设计文件	32
2.3　国际化应用程序的显示名称	36
2.4　国际化图片	39
2.5　国际化文本	41
2.6　本章小结	43
第3章　iOS的数据存储	44
3.1　应用程序沙盒	45
3.1.1　获取Documents目录	47
3.1.2　获取tmp目录	47
3.1.3　文件保存策略思考	47
3.2　应用程序参数与用户默认设置	48
3.2.1　使用Settings Bundle	48
3.2.2　使用NSUserDefaults读取、保
存应用程序参数	57
3.3　属性列表	62
实例：备忘录	62
3.4　对象归档和原生I/O API	66
3.5　使用SQLite 3数据库	66
3.5.1　iOS的SQLite编程	67
3.5.2　创建数据库和表	71
3.5.3　使用SQL语句执行查询	71
实例：英文生词本	72
3.5.4　使用sqlite3工具	76
3.5.5　使用SQLite Manager管理数据库	77
3.6　使用Core Data框架	79
3.6.1　Core Data简介	80
3.6.2　初始化Core Data项目	82
3.6.3　设计实体模型	86
3.6.4　使用Core Data实现数据的增、
删、改、查	88
3.6.5　管理实体的关联关系	95
实例：图书管理系统	95
3.7　本章小结	102
第4章　多媒体应用开发	103
4.1　音频和视频的播放	104
4.1.1　使用System Sound Services播放音效	104
4.1.2　使用AVAudioPlayer播放音乐	106
4.1.3　使用MPMediaPickerController选择系统音乐	110
实例：简单音乐播放器	111
4.1.4　使用AVPlayer播放视频	114
4.2　使用AVAudioRecorder录制音频	121
4.3  拍照和录制视频	125
4.3.1  使用UIImagePickerController拍照和录制视频	125
4.3.2  使用AVFoundation拍照和录制视频	130
实例：完全自定义的相机	132
4.4  使用AVFoundation生成视频缩略图	143
4.5  本章小结	145
第5章　管理手机	146
5.1  使用iOS 9新增的Contacts管理联系人	147
5.1.1  查询联系人	151
5.1.2  删除联系人	154
5.1.3  添加联系人	155
5.1.4  修改联系人	157
5.2  使用iOS 9的ContactsUI管理联系人	163
5.2.1  使用CNContactViewController添加联系人	164
5.2.2  使用CNContactViewController显示未知联系人	165
5.2.3  使用CNContactPickerViewController选择联系人	167
5.3  使用UIApplication打电话、发短信	169
5.4  使用MFMessageComposeViewController发送短信	171
5.5  使用MFMailComposeViewController发送邮件	174
5.6  本章小结	178
第6章　加速计与陀螺仪	179
6.1　iOS支持的加速计和陀螺仪	180
6.1.1　iOS加速计和陀螺仪的理论基础	180
6.1.2　基于代码块方式获取加速度数
据、陀螺仪数据、磁场数据	181
6.1.3　主动请求获取加速度数据、陀
螺仪数据、磁场数据	184
实例：怪物足球	187
6.2　感知设备移动	192
实例：水平仪	195
6.3　健康相关传感器	199
6.3.1　使用CMMotionActivityManager	199
6.3.2  使用CMPedometer获取步行数据	201
6.4　使用CMAltimeter获取高度改变信息	203
6.5　iOS 9新增的CMSensorRecorder	205
6.6　本章小结	207
第7章　多线程	208
7.1　线程概述	209
7.1.1　线程和进程	209
7.1.2　多线程的优势	210
7.2　使用NSThread实现多线程	211
7.2.1  创建和启动线程	211
7.2.2　线程的状态	213
7.2.3　终止子线程	213
7.2.4　线程睡眠	215
实例：使用线程下载网络图片	215
7.2.5　改变线程优先级	217
7.3　线程同步与线程通信	218
7.3.1　线程安全问题	218
7.3.2　使用同步代码块实现同步	220
7.3.3　释放对同步监视器的锁定	223
7.3.4　同步锁（NSLock）	223
7.3.5　使用NSCondition控制线程通信	224
实例：生产者-消费者	224
7.4　使用GCD实现多线程	228
7.4.1　创建队列	229
7.4.2　异步提交任务	230
实例：使用GCD下载图片	233
7.4.3　同步提交任务	234
7.4.4　多次执行的任务	235
7.4.5　只执行一次的任务	237
7.5　后台运行	238
7.5.1　进入后台时释放内存	238
实例：疯狂飞机大战	238
7.5.2　进入后台时保存状态	245
7.5.3　请求更多的后台时间	246
7.6　使用NSOperation与NSOperationQueue实现多线程	248
7.6.1　使用NSInvocationOperation和NSBlockOperation	249
实例：使用NSBlockOperation下载图片	249
7.6.2　定义NSOperation子类	251
7.7　本章小结	253
第8章　iOS网络编程	254
8.1　检测网络状态	255
8.1.1　检查网络状态	255
8.1.2　监听网络状态改变	259
8.2　使用CFNetwork实现TCP协议的通信	260
8.2.1　IP地址与端口号	260
8.2.2　TCP协议基础	261
8.2.3　使用CFSocket实现TCP服务器端	262
8.2.4　使用CFSocket实现TCP客户端	266
实例：网络聊天程序	268
8.2.5　使用CocoaAsyncSocket实现TCP客户端	271
8.3　使用NSURLSession	275
8.3.1　使用NSURLSession从网络获取数据	275
8.3.2　使用NSMutableURLRequest向服务器发送数据	280
8.4　XML解析	282
8.4.1　DOM与SAX	282
8.4.2　使用NSXMLParser解析XML文档	284
8.4.3　使用libxml2解析XML文档	289
8.4.4　使用KissXML解析XML文档	293
8.4.5  使用KissXML生成、修改XML文档	296
8.5　JSON解析	299
8.5.1　JSON的基本知识	299
8.5.2　使用NSJSONSerialization处理JSON数据	302
8.5.3　使用SBJson解析JSON数据	302
8.6　使用AFNetworking实现网络通信	307
8.6.1　提交GET请求与提交POST请求	307
实例：访问被保护资源	308
8.6.2　处理JSON或Plist响应	312
8.6.3　处理XML响应	315
8.6.4　上传文件	317
8.7　使用ASIHTTPRequest框架实现网络编程	320
8.7.1　发送同步或异步的GET请求	321
8.7.2  使用代码块	325
8.7.3　使用NSOperationQueue管理请求	326
8.7.4　发送请求参数和文件上传	328
实例：天气预报	330
8.8　本章小结	340
第9章　使用CoreLocation定位	341
9.1　iOS的定位支持	342
9.1.1　GPS卫星定位	342
9.1.2　基站定位	343
9.1.3　WiFi定位	343
9.2　获取定位信息	343
9.2.1　iOS 9增强的后台定位	344
9.2.2  使用iOS模拟器模拟位置	349
9.2.3　监控行车速度和行车距离	349
9.3　方向监测	352
实例：指南针	353
9.4　区域监测	355
9.5　本章小结	358
第10章　使用MapKit开发地图服务	359
10.1　使用MapKit框架	360
10.1.1　使用MKMapView控件	361
10.1.2　指定地图显示中心和显示区域	362
10.1.3　在地图上使用MKMapCamera	366
10.2　根据地址定位	367
10.2.1  地址解析与反向地址解析	367
10.2.2　根据地址定位	373
10.3　在地图上添加锚点	376
10.3.1　添加简单的锚点	376
10.3.2　添加自定义锚点	380
10.4　在地图上添加覆盖层	383
10.4.1　添加几何覆盖层	384
10.4.2　添加MKTileOverlay覆盖层	386
10.5　使用MKDirections获取导航路线	389
实例：行车导航仪	389
10.6　本章小结	393
第11章　消息推送与XMPP即时通信	394
11.1　使用NSNotificationCenter通信	395
11.1.1　使用NSNotificationCenter监听系统组件的通知	396
11.1.2　使用NSNotificationCenter监听自定义通知	398
11.2　iOS本地通知	400
11.3　iOS远程推送通知	405
11.3.1  开发远程推送客户端应用	407
11.3.2　开发推送通知的服务端程序	415
11.4　基于XMPP的即时通信	422
11.4.1　XMPP简介	422
11.4.2　下载和安装ejabberd	424
11.4.3  下载和安装XMPPFramework	427
实例：即时通信App	428
11.4.4　注册登录	429
11.4.5　查询好友列表	434
11.4.6　好友上线、下线	441
11.4.7　添加、删除好友	442
11.4.8　查询聊天室列表	443
11.4.9　创建、加入聊天室	447
11.4.10　接收、发送聊天消息	449
11.5　本章小结	459
第12章　iCloud服务	460
12.1　iCloud入门	461
12.1.1　为应用开启iCloud服务	462
12.1.2　使用NSMetadataQuery查询
文档	464
12.1.3　添加文档	469
12.1.4　编辑文档	472
12.1.5　删除文档	474
12.2　使用iCloud保存云端首选项	475
12.3　使用CloudKit保存数据	479
12.3.1　设计云端数据库	479
12.3.2　查询云端记录	481
实例：云端图书管理	482
12.3.3　删除云端记录	485
12.3.4　添加云端记录	486
12.3.5　修改云端记录	488
12.4　本章小结	490
第13章　HealthKit框架	491
13.1　HealthKit简介	492
13.1.1　HealthKit常识	492
13.1.2　HealthKit的基础API	493
13.1.3　HealthKit的数据简介	494
13.2　读取特征数据	494
13.2.1　请求获取授权	495
13.2.2　使用HKHealthStore读取数据	499
13.2.3　查询样本数据	503
13.2.4　添加样本数据	509
13.3　操作锻炼数据	510
13.3.1　查询锻炼数据	511
13.3.2　添加锻炼数据	515
13.4　本章小结	523
第14章　疯狂软件商城App	524
14.1  系统功能简介和架构设计	525
14.1.1  系统功能简介	525
14.1.2  系统架构设计	525
14.2  发送请求的工具类	526
14.3  应用界面设计	528
14.4  显示热卖商品	531
14.4.1  热卖商品的服务器端接口	532
14.4.2  加载显示热卖商品	532
14.5  显示商品详情	540
14.5.1  显示商品	540
14.5.2  加入购物车	544
14.6  处理订单	547
14.6.1  处理购物车	547
14.6.2  确认订单	553
14.6.3  微信支付	558
14.7  分类浏览	570
14.7.1  商品类别的服务器端接口	570
14.7.2  加载、显示商品分类	570
14.7.3  加载、显示指定分类的商品	573
14.8  商家介绍	576
14.9  本章小结	578
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>疯狂iOS讲义（提高篇）（含光盘1张）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS开发实战
第1章  开发准备	1
1.1  iOS 9新特性简述	2
1.1.1  新增压力传感器编程接口	2
1.1.2  全新的搜索功能API	2
1.1.3  更小、更快——全新的应用瘦身策略	3
1.1.4  使用更加安全的网络传输协议	4
1.2  熟悉iOS开发环境	4
1.2.1  安装Xcode开发工具	4
1.2.2  了解Xcode开发工具主界面	6
1.2.3  Xcode开发工具的使用技巧及常用快捷键	7
1.3  创建第一个iOS项目	8
1.4  使用Git进行项目版本管理	13
1.4.1  Git与Github简介	13
1.4.2  注册GitHub会员	13
1.4.3  使用Xcode创建Git仓库	14
1.4.4  用Xcode建立本地Git仓库与GitHub代码托管平台的联系	16
第2章  基础UI控件	19
2.1  iOS系统UI框架的介绍	20
2.1.1  MVC设计模式	20
2.1.2  代理设计模式	21
2.2  视图控制器——UIViewController	21
2.2.1  UIViewController的生命周期	21
2.2.2  UIViewController的视图层级结构	25
2.3  文本控件——UILabel	25
2.3.1  使用UILabel在屏幕上创建一个标签控件	26
2.3.2  自定义标签控件的相关属性	26
2.3.3  多行显示的UILabel与换行模式	27
2.4  按钮控件——UIButton	29
2.4.1  创建一个按钮来改变屏幕颜色	29
2.4.2  更加多彩的UIButton控件	32
2.5  文本输入框控件——UITextField	33
2.5.1  在屏幕上创建一个输入框	33
2.5.2  UITextField的常用属性介绍	35
2.5.3  UITextField的代理方法	36
2.5.4  实现一个监听输入信息的用户名输入框	37
2.6  开关控件——UISwitch	38
2.6.1  创建一个开关控件	38
2.6.2  为UISiwtch控件添加触发方法	39
2.7  分页控制器——UIPageControl	40
2.8  分段控制器——UISegmentedControl	41
2.8.1  UISegmentControl基本属性的应用	41
2.8.2  对UISegmentedControl中的按钮进行增、删、改操作	42
2.8.3  UISegmentedControl中按钮宽度的自适应	43
2.9  滑块控件——UISlider	43
2.9.1  UISlider的创建与常规设置	44
2.9.2  对UISlider添加图片修饰	45
2.10  活动指示器控件——UIActivityIndicatorView	45
2.11  进度条控件——UIProgressView	47
2.12  步进控制器——UIStepper	48
2.12.1  步进控制器的基本属性使用	48
2.12.2  自定义UIStepper按钮图片	49
2.13  选择器控件——UIPickerView	49
2.13.1  创建一个UIPickerView控件	50
2.13.2  UIPickerView选中数据时的回调代理	51
2.14  通过CALayer对视图进行修饰	52
2.14.1  创建圆角的控件	52
2.14.2  创建带边框的控件	52
2.14.3  为控件添加阴影效果	53
2.15  警告控制器——UIAlertController	54
2.15.1  UIAlertController的警告框	54
2.15.2  UIAlertController之活动列表	56
2.16  扩展篇	57
2.16.1  搜索栏控件——UISearchBar	57
2.16.2  日期时间选择器——UIDatePicker	59
2.16.3  警告视图——UIAlertView	61
2.16.4  活动列表——UIActionSheet	62
2.17  实战：登录注册界面的搭建	62
第3章  高级UI控件	68
3.1  导航控制器——UINavigationController	69
3.1.1  导航控制器的工作原理	69
3.1.2  使用导航控制器进行多界面搭建	70
3.1.3  导航栏UINavigationBar	73
3.1.4  导航按钮UIBarButtonItem	74
3.1.5  导航控制器的工具栏	77
3.1.6  iOS 8之后导航控制器的一些有趣功能	77
3.2  标签控制器——UITabBarController	78
3.2.1  标签控制器的工作原理	78
3.2.2  标签控制器的基础用法解析	78
3.2.3  关于UITabBarItem的使用	80
3.3  滚动视图——UIScrollView	81
3.3.1  使用UIScrollView展示视图内容	81
3.3.2  UIScrollView的代理方法	83
3.4  网络视图——UIWebView	84
3.4.1  App网络传输安全策略	85
3.4.2  通过网络请求加载UIWebView	86
3.4.3  通过HTML字符串加载UIWebView	86
3.4.4  通过NSData数据加载UIWebView	87
3.4.5  UIWebView中常用方法解析	88
3.4.6  UIWebView的代理方法	89
3.5  表格视图——UITableView	90
3.5.1  UITableView的创建与复用机制	90
3.5.2  创建一个表格视图UITableView	91
3.5.3  关于表格数据的载体UITableViewCell	93
3.5.4  设置UITableView的行高和头尾视图	95
3.5.5  UITableView的用户交互行为	96
3.5.6  为UITableView添加索引栏	99
3.6  复杂布局视图——UICollectionView	99
3.6.1  UICollectionView控件的优势与布局方式	100
3.6.2  使用UICollectionView进行九宫格式的布局	100
3.6.3  创建更加灵活的流式布局	102
3.6.4  自定义UICollectionViewFlowLayout进行参差瀑布流布局	103
3.6.5  使用UICollectionView进行圆环布局	106
3.7  实战：开发一款手机网页浏览器	109
3.7.1  网页浏览器工程的搭建	110
3.7.2  核心网页视图的设计	111
3.7.3  历史记录界面的设计	119
3.7.4  收藏界面的设计	122
3.7.5  启动页面、图标及应用名称的相关优化	124
第4章  网络编程	127
4.1  使用NSURLConnection请求网络数据	128
4.1.1  申请一个免费的API服务	128
4.1.2  使用NSURLConnection进行API服务数据的获取	131
4.1.3  使用NSURLConnection进行异步网络请求	132
4.1.4  使用NSURLConnection类通过代理回调的方式异步进行网络请求	134
4.2  设计封装一个更加易用的网络请求类	135
4.2.1  设计自定义的网络请求连接类	135
4.2.2  设计自定义的网络请求连接管理类	136
4.3  JSON类型数据的解析与数据模型的设计	139
4.3.1  JSON数据简介	139
4.3.2  在iOS中解析JSON数据	141
4.3.3  数据模型Model类的设计	142
4.4  使用CocoaPods进行第三方库的管理	146
4.4.1  在MAC上安装CocoaPods	146
4.4.2  用CocoaPods搭建一个使用第三方网络请求框架AFNetworking的工程	148
4.5  使用AFNetworking进行网络请求	150
4.5.1  详解HTTP/HTTPS协议	150
4.5.2  使用AFNetworking进行网络请求	151
4.6  实战：开发“笑一笑”应用程序	153
4.6.1  工程项目框架的搭建	154
4.6.2  “笑一笑”界面数据载体cell的设计	155
4.6.3  “笑一笑”界面的搭建	157
4.6.4  实现下拉刷新与加载更多功能	162
4.6.5  “趣图吧”界面数据载体cell的设计	164
4.6.6  “趣图吧”界面的设计	167
第5章  音视频开发	172
5.1  iOS音频开发基础——AVAudioPlayer类的使用	173
5.1.1  使用AVAudioPlayer进行MP3音频文件的播放	173
5.1.2  进行音频播放相关属性的控制	175
5.1.3  后台播放音频及用户交互的优化	180
5.2  iOS视频开发基础	184
5.2.1  使用MPMoviePlayerController向应用中嵌入视频模块	184
5.2.2  MPMoviePlayerController常用属性与方法解析	185
5.3  视频播放器视图控制器——MPMoviePlayerViewController	189
5.4  AVPlayerViewController视频播放框架与画中画开发技术	191
5.4.1  使用AVPlayerViewController进行视频播放	191
5.4.2  iPad的画中画播放技术	193
5.5  实战：“天后王菲”音频播放器的开发	195
5.5.1  工程搭建与LRC歌词文件简介	196
5.5.2  LRC歌词解析引擎的设计	197
5.5.3  核心播放器引擎的设计	201
5.5.4  歌曲列表与歌词显示视图界面的设计	208
5.5.5  播放器主页面的实现	213
5.5.6  后台播放音频用户交互的处理	219
第6章  动画开发	221
6.1  使用UIImageView播放图片组帧动画	222
6.2  UIView层动画的应用	223
6.2.1  执行UIView层过渡动画的三个类方法	223
6.2.2  创建UIView层的阻尼动画	225
6.2.3  动画参数配置与组合动画	225
6.2.4  UIView层过渡动画支持的属性	227
6.3  使用commit方式进行UIView层动画的创建	228
6.3.1  使用commit方式进行UIView层过渡动画的创建	228
6.3.2  两种UIView层动画创建方式的优劣	230
6.4  UIView的转场动画	230
6.4.1  重绘UIView视图时使用的转场动画	230
6.4.2  切换UIView视图时使用的转场动画	231
6.5  核心动画编程技术——CoreAnimation	232
6.5.1  锚点对视图控件几何位置的影响	233
6.5.2  色彩梯度层——CAGradientLayer	234
6.5.3  视图拷贝层——CAReplicatorLayer	235
6.5.4  图形渲染层——CAShapeLayer	236
6.5.5  文本绘制层——CATextLayer	237
6.5.6  CAAnimation动画体系介绍	238
6.5.7  使用CABasicAnimation创建基础动画	240
6.5.8  使用CAKeyframeAnimation类创建关键帧动画	242
6.5.9  CALayer层的转场动画——CATransition	243
6.5.10  CALayer层的组合动画——CAAnimationGroup	245
6.5.11  CATransform3D变换的应用	246
6.6  炫酷的粒子效果	248
6.6.1  粒子发射器——CAEmitterLayer	248
6.6.2  粒子单元——CAEmitterCell	250
6.6.3  创建粒子火焰动画	251
6.7  播放GIF动态图	253
6.7.1  使用UIWebView进行GIF动态图播放	253
6.7.2  使用UIImageView帧动画进行GIF动态图播放	254
6.8  实战：小游戏Flappy Bird的设计与开发	256
6.8.1  小鸟对象的设计	257
6.8.2  游戏开始界面的设计	259
6.8.3  游戏结束界面的设计	261
6.8.4  Flappy Bird游戏主框架的搭建	262
第7章  传感器开发	270
7.1  为应用程序添加手机密码及指纹识别的安全验证	271
7.1.1  使用手机密码为应用程序添加安全验证	271
7.1.2  使用用户指纹为应用程序添加安全验证	273
7.2  使用加速度传感器、螺旋仪传感器与磁力传感器获取设备空间状态	274
7.2.1  使用UIAccelerometer获取设备空间状态	274
7.2.2  使用CoreMotion框架获取设备空间状态信息	275
7.3  距离传感器的应用	278
7.4  iOS蓝牙开发技术	279
7.4.1  中心设备管理类CBCentralManager	280
7.4.2  外围设备管理类CBPeripheralManager	285
7.5  GPS应用与地图编程技术	289
7.5.1  进行设备地理位置定位	289
7.5.2  原生地图开发技术	292
7.5.3  在地图中添加大头针及标注	294
7.5.4  在地图视图中添加覆盖物	297
7.5.5  在地图中进行线路导航与附近兴趣点检索	299
7.6  实战：简易蓝牙对战五子棋	304
7.6.1  游戏核心通信类的设计	304
7.6.2  棋盘瓦片的设计	314
7.6.3  核心游戏视图与游戏核心逻辑的设计	315
7.6.4  核心游戏视图控制器的设计	325
第8章  界面布局	329
8.1  iOS中传统的UIViewAutoresizing布局模式	330
8.1.1  通过代码来设置视图控件的UIViewAutoresizing模式	330
8.1.2  在xib文件中可视化地配置控件的autoresizing属性	332
8.2  Autolayout自动布局框架	333
8.2.1  初识Autolayout	334
8.2.2  Autolayout的属性意义与一个简单的自动布局示例	335
8.2.3  使用Objective-C风格的方法进行代码Autolayout布局	338
8.2.4  使用格式化的字符串进行Autolayout布局对象的创建	341
8.2.5  与约束相关的几个方法	343
8.2.6  使用Autolayout设计一个高度自适应的聊天输入框及动画优化	343
8.2.7  使用第三方库Masonry进行Autolayout约束布局	345
第9章  数据持久化	351
9.1  使用plist文件进行轻量级数据持久化管理	352
9.1.1  在工程中读取plist文件数据	352
9.1.2  在程序沙盒Doucments目录中创建和使用plist文件	353
9.1.3  使用NSUserDefaults类进行数据持久化	354
9.2  使用归档技术进行数据模型持久化	356
9.2.1  进行单一系统数据类型的归档与解归档操作	356
9.2.2  对多个对象进行数据归档	357
9.2.3  进行自定义数据模型的归档	358
9.3  小型数据库SQLite在iOS开发中的应用	360
9.3.1  SQLite数据库常用语法介绍	360
9.3.2  使用iOS原生框架sqlite3对SQLite数据库进行操作	362
9.4  核心数据管理框架CoreData的使用	367
9.4.1  使用CoreData设计数据模型	367
9.4.2  CoreData编程框架中3个重要的类	370
9.4.3  CoreData编程框架的数据操作	373
9.4.4  使用CoreData进行数据与页面的绑定	378
9.5  网络缓存策略	384
9.5.1  为网络请求设置缓存策略	384
9.5.2  应用缓存管理类NSURLCache简介	385
第10章  提交应用程序到AppStore	387
10.1  使用Xcode开发工具进行程序调试	388
10.1.1  使用自定义断点进行代码调试	388
10.1.2  添加全局异常断点	389
10.1.3  使用LLDB调试器进行程序调试	390
10.2  Apple开发者账号的申请	391
10.2.1  几种类型的开发者账号	391
10.2.2  申请开发者账号的过程	391
10.3  进行应用程序的打包	394
10.3.1  在iTunes Connect中进行应用的创建与配置	394
10.3.2  使用Xcode进行打包与提交iTunes	401
第11章  进阶技巧	405
11.1  Objective-C中block语法的应用	406
11.1.1  声明与实现block语法块	406
11.1.2  block代码块中访问对象的微妙关系	407
11.2  iOS通知中心NSNotificationCenter的应用	408
11.2.1  通知类NSNotification简介	409
11.2.2  通知中心NSNotificationCenter应用	409
11.3  多线程开发技术	410
11.3.1  使用NSThread进行线程管理	411
11.3.2  使用NSOperation类与NSOperationQueue类进行多任务管理	412
11.3.3  iOS中GCD编程技术简介	416
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS开发实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS SDK Hacks
目次
クレジット
まえがき
1章 UIKitHacks
1. 　subviewsを辿る
2. 　respondsToSelectorをフックする
3. 　UIWebViewでユーザーエージェントを切り替える
4.　class-dump
5.　便利マクロ
6.　UITableView Hacks
7.　NSOperation
8. 　PNG最適化
9. 　MapKitとMKMapView
10.　MKMapViewでピンをアニメーションさせる
11.　AsyncSocket
12.　ImageStore
13.　AdHocビルド
14.　外部ディスプレイ
2章 QuartzHacks
15.　文字を高速に描画するには
16.　影付け
17.　クリッピング
18.　NSStringを使わない描画方法
19.　Quartzで2バイト文字等を描画する
20.　描画される文字の幅を調べる
21.　自分で用意したフォントを使う
22.　UIImage Hacks
23.　ピクセルデータから UIImageを作成する
3章 Objective-C
24.　Objective-Cの動的性質
25.　Method Swizzling
26.　Method Swizzlingによる UIWebView Hackの例（iOS 3）
27.　dlopen
4章パフォーマンスチューニング
28.　性能チューニング
29.　otool
30.　Instruments
31.　Shark
32.　ARMイントロダクション
33.　NEON
34.　VFP
5章ネットワークサービス
35.　Push Notification
36.　In App Purchase
6章 iOS4Hacks
37.　ユニバーサルバイナリ
38.　iOS 4のカメラ API
39.　Accelerate.framework
40.　UI Automation
41.　Grand Central Dispatchによる並列処理
索引
アプリケーション作成チェックシート
コラム目次
iPhone用オープンソースについて
仮想通貨の是非について
Appleの決済を使わないアプリケーション内課金について
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS SDK Hacks
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS游戏开发：基于iPad, iPhone和iPod Touch
第1章 简介
1.1 iPhone游戏程序设计
1.2 欢迎进入Apple世界——iPhone现象
1.3 iPhone家族——规范
1.4 开始之旅
1.4.1 下载书中的示例
1.4.2 反馈意见
第2章 基础知识——工作模式
2.1 iOSDev Center
2.2 下载并安装Xcode和iOS SDK
2.2.1 下载并尝试运行示例代码
2.2.2 使用iPhone模拟器
2.3 使用Xcode模板
2.4 基于控制台输出的Hello World程序
2.4.1 委托和Main方法
2.4.2 程序流、框架和App文件
2.4.3 委托类的结构和控制台输出的实现过程
2.5 视图实例中的Hello World文本
2.6 Objective-C语言简介
2.6.1 Objective-C语言的历史
2.6.2 与方法相关的语法
2.6.3 类声明
2.6.4 创建对象
2.6.5 实例和类方法
2.6.6 内存管理
2.6.7 自动引用计数（ARC）
2.7 应用程序的生命周期
2.8 更为广泛的支持——通用程序
2.8.1 iPad于游戏开发的优势
2.8.2 独立平台的程序设计
2.8.3 条件编码
2.8.4 通用应用程序开发示例
2.8.5 关闭状态栏
2.8.6 添加资源——应用程序图标和启动图像
2.8.7 设置应用程序名称
2.8.8 查询分辨率和文本输出
2.9 支持Retina显示
2.9.1 Retina分辨率的支持方式
2.9.2 测试Retina模拟器
第3章 游戏开发简介
3.1 游戏的工作方式
3.1.1 游戏的制作方式
3.1.2 相关知识
3.2 二维坐标系
3.3 构建示例项目
3.4 绘制类：渲染简单的场景
3.4.1 如何绘制直线
3.4.2 确定颜色和透明度
3.4.3 直线宽度
3.4.4 随机数和抽象艺术
3.4.5 如何绘制矩形
3.4.6 如何绘制圆
3.4.7 文本输出（字体和字号）
3.5 整合、加载和显示图像
3.6 游戏循环和帧
3.7 剪裁和动画
3.7.1 剪裁和贴图
3.7.2 创建精灵对象
3.7.3 利用数组进行有效的组织
3.8 碰撞控制
3.8.1 两点之间的距离
3.8.2 基于圆的碰撞检测
3.9 用户输入
3.10 游戏管理器和精灵对象管理器
3.10.1 游戏元素
3.10.2 赢得游戏
3.10.3 战胜对手
3.10.4 控制
3.10.5 HUD（平视显示）
3.10.6 菜单导航
3.10.7 组建代码
3.10.8 资源管理
3.10.9 精灵对象的管理
3.10.10 单次动画序列
3.10.11 有限状态机
3.10.12 用户输入
3.10.13 HUD和得分机制
3.11 背景音乐和音效
3.11.1 框架整合
3.11.2 AVAudioPlayer的应用方式
3.11.3 复音和音频格式
3.11.4 如何获取适宜的音频
3.11.5 将音频整合至游戏中
3.12 数据存储
第4章 基于GameKit和Game Center的多玩家游戏
4.1 简介
4.2 设置iTunes连接
4.3 通过Game Center测试应用程序
4.3.1 登录Game Center
4.3.2 回调句柄
4.3.3 上传积分榜
4.3.4 积分榜
4.3.5 将GCHelper整合应用程序中
4.4 多玩家游戏
第5章 OpenGL ES开发
5.1 为何使用OpenGL ES
5.2 OpenGL ES及其构建方式
5.3 OpenGL ES中的基本问题
5.4 OpenGL ES的整合操作
5.5 OpenGL坐标系
5.6 简单的绘制操作
5.7 数学绘图
5.8 图像和纹理
5.9 基于矩阵的转换函数
5.10 基于纹理剪裁的动画效果
5.11 滚屏和视差滚屏
5.12 基于OpenGL ES的射击游戏
5.12.1 完整框架
5.12.2 游戏体验
5.12.3 精灵类
5.12.4 游戏元素
5.13 基于OpenGL ES的视网膜显示
5.13.1 精确的像素渲染
5.13.2 是否采用全分辨率
5.13.3 性能问题
第6章 3D游戏
6.1 3D游戏的构建方式
6.2 基础框架
6.3 3D坐标系
6.4 绘制简单的图形
6.5 纹理表面
6.6 3D对象的纹理操作
6.7 光照效果
6.8 创建、加载并整合3D模型
6.8.1 表面
6.8.2 Obj文件创建过程
6.9 包含纹理的其他3D模型
6.10 第一人称视角：设定相机
6.11 3D飞行游戏
6.11.1 游戏概念：飞行
6.11.2 控制
6.11.3 游戏元素
6.11.4 三维精灵对象
6.11.5 游戏元素的实现
6.11.6 控制
6.11.7 第一人称视角
6.11.8 激光
6.11.9 碰撞信息
6.11.10 其他精灵对象
第7章 物理引擎Box2D
7.1 简介
7.1.1 物理引擎提供的内容
7.1.2 初步测试
7.2 Box2D的整合操作
7.3 Box2D实践
7.4 Box2D下的精灵对象
7.5 Box2D游戏实践
7.5.1 横向模式和纵向模式
7.5.2 新的Sprite类
7.5.3 构建石塔建筑
7.5.4 赢取游戏
7.5.5 展望
第8章 GLKit框架——简化OpenGL ES应用
8.1 简介
8.1.1 利弊关系
8.1.2 概述
8.2 示例
8.3 GLKitView和游戏循环
8.4 GLKit和3D——根据GLU模型使用相机
第9章 基于OpenAL的游戏声音
9.1 简介
9.2 封装OpenAL API
9.3 声音的构成方式
9.4 创建复音引擎
9.4.1 声音ID和缓冲区
9.4.2 音频上下文
9.4.3 加载声音
9.4.4 合成声音
9.4.5 播放声音
第10章 发布游戏
10.1 iTunes Connect操作
10.2 将游戏植入设备中
10.3 发布游戏
10.4 市场规划
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS游戏开发：基于iPad, iPhone和iPod Touch
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS应用逆向与安全
第1章  概述
1.1  逆向工程简介  1
1.1.1  iOS逆向学习基础  1
1.1.2  iOS逆向的流程  1
1.1.3  iOS逆向使用的工具  2
1.1.4  iOS逆向的应用场景  2
1.2  应用面临的安全风险  2
1.2.1  静态修改文件  3
1.2.2  动态篡改逻辑  3
1.2.3  协议分析  3
1.3  应用保护手段  3
1.3.1  数据加密  3
1.3.2  程序混淆  4
1.3.3  安全监测  4
1.4  本书工具  4
1.4.1  效率工具  4
1.4.2  实用工具  5
1.4.3  逆向工具  5
第2章  越狱设备
2.1  什么是越狱  6
2.2  Cydia  6
2.3  SSH  7
2.3.1  安装OpenSSH  8
2.3.2  配置dropbear  10
2.3.3  修改默认密码  11
2.3.4  公钥登录  11
2.3.5  通过USB登录  13
2.4  iOS系统结构  14
2.4.1  文件目录  15
2.4.2  文件权限  17
2.5  Cydia Substrate  18
2.5.1  MobileHooker  19
2.5.2  MobileLoader  19
2.5.3  Safe mode  20
2.6  越狱必备工具  21
2.6.1  adv-cmds  21
2.6.2  appsync  21
2.6.3  iFile  21
2.6.4  scp  22

第3章  逆向工具详解
3.1  应用解密  23
3.1.1  dumpdecrypted  23
3.1.2  Clutch  28
3.1.3  小结  30
3.2  class-dump  30
3.2.1  class-dump的使用  30
3.2.2  class-dump的原理  33
3.2.3  OC和Swift混编  40
3.3  Reveal  41
3.3.1  开发集成Reveal  41
3.3.2  越狱注入Reveal  42
3.4  Cycript  43
3.4.1  开发集成Cycript  44
3.4.2  使用Cycript越狱  45
3.4.3  使用Cycript分析应用  46
3.4.4  Cycript的高级用法  49
3.5  抓包  52
3.5.1  Charles抓包  53
3.5.2  修改网络请求  55
3.5.3  HTTPS抓包  59
3.5.4  Wireshark抓包  60

第4章  开发储备
4.1  App的结构及构建  66
4.1.1  获取应用包  66
4.1.2  应用包的格式  71
4.1.3  应用的构建过程  72
4.2  界面结构和事件传递  76
4.2.1  界面的组成  76
4.2.2  界面事件的响应  79
4.3  类与方法  83
4.3.1  类与方法的底层实现  84
4.3.2  运行时类的结构  89
4.3.3  消息机制  91
4.3.4  runtime的应用  94
4.4  App签名  98
4.4.1  配置Xcode签名  98
4.4.2  App签名的原理  100
4.4.3  重签名  107

第5章  分析与调试
5.1  静态分析  109
5.1.1  Hopper  109
5.1.2  IDA  118
5.1.3  静态库分析  125
5.2  动态调试  128
5.2.1  LLDB调试  128
5.2.2  LLDB解密  141
5.2.3  用Xcode调试第三方应用  144
5.2.4  LLDB的高级调试技巧  151
5.3  Theos  167
5.3.1  Theos的安装  168
5.3.2  Theos的基本应用  168
5.3.3  Theos的高级应用  172
5.4  MonkeyDev  177
5.4.1  安装MonkeyDev  178
5.4.2  Logos Tweak  179
5.4.3  CaptainHook Tweak  181
5.4.4  Command-line Tool  185

第6章  逆向进阶
6.1  程序加载  186
6.1.1  dyld简介  186
6.1.2  dyld加载流程  187
6.2  Mach-O文件格式  206
6.2.1  Mach-O文件的基本格式  206
6.2.2  Mach-O头部  208
6.2.3  Load Command  210
6.2.4  虚拟地址和文件偏移  214
6.2.5  懒加载和非懒加载  217
6.2.6  Code Signature  223
6.3  ARM汇编  228
6.3.1  ARM架构和指令集  228
6.3.2  AArch64寄存器  229
6.3.3  指令集编码  231
6.3.4  AArch64指令  233
6.3.5  栈和方法  236
6.3.6  Objective-C汇编  245
6.4  hook  247
6.4.1  Method Swizzle  247
6.4.2  fishhook  248
6.4.3  Cydia Substrate  253
6.4.4  Swift hook  256
6.5  动态库  259
6.5.1  编译和注入  260
6.5.2  导出和隐藏符号  260
6.5.3  C++ 和OC动态库  263
6.5.4  其他常见问题  267

第7章  实战演练
7.1  越狱设备分析  270
7.1.1  分析准备  270
7.1.2  开始分析  272
7.1.3  编写Tweak  284
7.1.4  安装与小结  287
7.2  非越狱设备分析  288
7.2.1  创建MonkeyDev项目  288
7.2.2  非越狱逆向实战  291
7.2.3  编写hook代码  303
7.2.4  制作非越狱Pod  304
7.2.5  小结  308
7.3  Frida实战应用  309
7.3.1  Frida的安装  309
7.3.2  Frida的初级使用  311
7.3.3  Frida的高级使用  319
7.3.4  小结  326

第8章  安全保护
8.1  数据加密  327
8.1.1  本地存储加密  328
8.1.2  网络传输加密  328
8.1.3  字符串加密  333
8.2  静态混淆  341
8.2.1  宏定义  342
8.2.2  二进制修改  347
8.3  动态保护  349
8.3.1  反调试  349
8.3.2  反反调试  352
8.3.3  反注入  359
8.3.4  hook检测  360
8.3.5  完整性校验  361
8.4  代码混淆  363
8.4.1  什么是LLVM  363
8.4.2  下载和编译LLVM  364
8.4.3  开发和调试Pass  366
8.4.4  OLLVM源代码分析  373
8.4.5  替换Xcode编译器  379
8.4.6  静态库混淆  389
8.5  本章总结  390
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS应用逆向与安全
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS程序员面试笔试宝典
前言
面试笔试经验技巧篇
经验技巧1   如何巧妙地回答面试官的问题2
经验技巧2   如何回答技术性问题3
经验技巧3   如何回答非技术性问题5
经验技巧4   如何回答快速估算类问题5
经验技巧5   如何回答算法设计问题6
经验技巧6   如何回答系统设计题9
经验技巧7   如何解决求职中的时间冲突问题11
经验技巧8   如果面试问题曾经遇见过，是否要告知面试官12
经验技巧9   被企业拒绝后是否可以再申请12
经验技巧10   如何应对自己不会回答的问题13
经验技巧11   如何应对面试官的“激将法”语言13
经验技巧12   如何处理与面试官持不同观点这个问题14
经验技巧13   什么是职场暗语15
经验技巧14   名企iOS工程师行业访谈录18
经验技巧15   iOS开发的前景如何20
经验技巧16   如何选择iOS开发语言20
经验技巧17   React Native 和Weex重要吗21
经验技巧18   企业对iOS开发者的要求有哪些22
经验技巧19   iOS开发招聘有哪些要求24
经验技巧20   iOS技术岗位面试精选27
面试笔试技术攻克篇
第1章   iOS开发基础概念35
1.1  概念35
1.1.1  什么是“应用瘦身”35
1.1.2  什么是Cocoa和Cocoa Touch36
1.1.3  什么是谓词36
1.1.4  什么是响应者链38
1.1.5  什么是“懒加载”39
1.1.6  类工厂方法是什么40
1.1.7  App ID和Bundle ID有什么不同40
1.1.8  什么是糖衣语法40
1.2  其他43
1.2.1  什么是SpriteKit和SceneKit43
1.2.2  iOS应用的生命周期回调方法主要有哪些43
1.2.3  iOS应用有哪几种不同状态？分别表示什么含义44
1.2.4  UIButton到NSObject之间的继承关系是怎样的45
1.2.5  Git和SVN有什么异同45
第2章   Objective-C语言基础47
2.1  Objective-C语言基础特性47
2.1.1  Objective-C的优缺点有哪些47
2.1.2  相对于Objective-C而言，Swift有什么新特性48
2.1.3  Foundation对象与Core Foundation对象有什么区别52
2.1.4  Objective-C中的类方法和实例方法有什么本质区别和联系53
2.1.5  子类初始化时为什么要调用self = [super init]54
2.1.6  #import与#include以及＃import<>与#import" "各有什么区别54
2.1.7  Objective-C中@class代表什么54
2.1.8  Objective-C中有二维数组吗？如何实现55
2.1.9  在Objective-C的数组或字典中，添加nil对象会有什么问题55
2.1.10  Objective-C中的可变和不可变类型是什么56
2.2  数据类型57
2.2.1  在Objective-C中，常量有哪几种类型57
2.2.2  Objective-C中数据类型的限定词有哪些58
2.2.3  Objective-C中的NSInteger类型和C语言中的int类型有什么区别59
2.2.4  NSNumber与NSInteger有什么区别59
2.3  运算符和表达式60
2.3.1  在Objective-C中，前置运算和后置运算有什么区别60
2.3.2  整型值和浮点值在赋值操作中如何相互转换61
第3章   Objective-C语言的高级特性63
3.1  Objective-C中的属性63
3.2  Objective-C语言的多态性72
3.2.1  什么叫多态72
3.2.2  重载、重写和隐藏的区别是什么74
3.2.3  Objective-C和Swift中有重载吗74
3.3  Objective-C语言的动态性75
3.3.1  什么是编译时与运行时79
3.3.2  所谓的Objective-C是动态运行时语言是什么意思79
3.3.3  Objective-C中的id类型指的是什么？id、nil代表什么82
3.3.4  一般的方法method和Objective-C中的选择器selector有什么区别83
3.3.5  什么时候会报unrecognized selector错误83
3.3.6  什么是目标-动作机制83
3.3.7  在runtime中类与对象如何表示84
3.3.8  如何打印一个类中所有的实例变量85
3.3.9  如何使用runtime动态添加一个类87
3.3.10  如何在Category中增加属性（关联对象）88
3.3.11  如何理解消息传递机制89
3.3.12  如何理解消息转发机制91
3.3.13  isKindOfClass和isMemberOfClass有什么区别与联系94
3.3.14  Objective-C有私有方法吗？有私有变量吗94
3.4  Objective-C中的类别与扩展机制96
3.4.1  类别与其他特性（类扩展和继承）有什么区别97
3.4.2  Objective-C中类别特性的作用及其局限性是什么97
3.4.3  类别和类扩展如何使用98
3.4.4  为什么类别只能添加扩展方法而不能添加属性变量101
3.5  Method Swizzling魔法102
3.5.1  Method Swizzling的应用场景有哪些102
3.5.2  如何使用runtime进行方法交换105
3.6  其他问题107
3.6.1  C和Objective-C如何混用107
3.6.2  Swift和Objective-C如何互调107
3.6.3  Objective-C对象可以被copy的条件是什么109
3.6.4  Objective-C等同性中的字符串相等如何判断110
3.6.5  一个Objective-C对象如何进行内存布局（考虑有父类的情况）111
第4章   Cocoa Touch框架相关112
4.1  UITableView112
4.1.1  UITableViewCell的复用原理是怎么样的112
4.1.2  能否在一个视图控制器中嵌入两个tableView控制器114
4.1.3  一个tableView是否可以关联两个不同的datasource数据源115
4.1.4  如何对UITableView的滚动加载进行优化，防止卡顿116
4.2  UI视图117
4.2.1  viewDidLoad和viewDidAppear的区别是什么117
4.2.2  frame和bounds有什么区别117
4.2.3  masksToBounds属性是什么？它有什么作用118
4.2.4  tintColor 的作用是什么118
4.2.5  UIViewController的生命周期方法有哪些118
4.2.6  View和View之间的传值方式有哪些119
4.3  其他问题119
4.3.1  xib和storyboard相比各自的优缺点是什么119
4.3.2  如何进行iOS 6和iOS 7的适配120
4.3.3  imageNamed和imageWithContentsOfFile有什么区别120
4.3.4  UIDevice如何获取设备信息120
4.3.5  iOS中是如何使用自定义字体的122
第5章   iOS开发中的对象间通信机制125
5.1  iOS中的Protocol和Delegate125
5.2  推送和通知126
5.2.1  什么是消息推送？和Notification有什么区别126
5.2.2  什么是Notification？什么时候用Delegate或Notification128
5.2.3  NSNotification是同步还是异步129
5.3  Objective-C中的键值编码和键值观察130
5.3.1  什么是键值编码KVC？键路径是什么? 什么是键值观察KVC130
5.3.2  KVC的应用场景有哪些132
5.3.3  如何运用KVO进行键值观察134
5.3.4  如何使用KVO设置键值观察依赖键136
5.3.5  KVO的背后原理是什么137
5.3.6  setValue:forKey:方法的底层实现是什么138
5.3.7 NSMutableDictionary中setValue和setObject有什么区别139
5.3.8  NSNotification、Delegate、Block和KVO的区别是什么140
第6章   iOS中的图层与动画142
6.1  图层142
6.1.1  UIView和CALayer的区别与联系是什么142
6.1.2  什么是Layer层对象143
6.1.3  如何使用CAShapeLayer绘制图层146
6.1.4  iOS中如何实现为UIImageView添加圆角148
6.1.5  contentsScale属性有什么作用149
6.1.6  如何理解anchorPoint和position的作用150
6.1.7  如何理解drawRect:方法151
6.1.8  如何使用mask属性实现图层蒙版功能152
6.1.9  如何解决masksToBounds离屏渲染带来的性能损耗153
6.1.10  QuartzCore和Core  Graphics有什么区别154
6.2  动画154
6.2.1  UIView动画原理是什么？以UIView类的animateWithDuration方法为例154
6.2.2  什么是隐式动画和显式动画154
6.2.3  隐式动画的实现原理是什么？如何禁用图层的隐式动画155
6.2.4  CGAffineTransform和CATransform3D分别有什么作用157
6.2.5  CATransition中过渡类型动画有哪几种type158
6.2.6  如何使用UIView动画自定义过渡动画159
6.2.7  如何理解并使用CAKeyframeAnimation160
6.2.8  如何自定义UIViewController之间的转场动画161
6.2.9  如何保持视图界面为动画结束时的状态164
第7章   iOS中的数据持久化167
7.1  沙盒机制169
7.2  数据持久化方案170
7.2.1  iOS平台做数据的持久化方式有哪些170
7.2.2  如何使用NSUserDefault偏好设置保存数据170
7.2.3  如何使用NSUserDefault保存自定义对象171
7.2.4  什么是序列化或者归档172
第8章   iOS中的内存管理174
8.1  内存管理174
8.1.1  什么是内存泄漏？什么是安全释放174
8.1.2  僵尸对象、野指针、空指针分别指什么？它们有什么区别174
8.1.3  Objective-C有GC垃圾回收机制吗175
8.1.4  在Objective-C中，与alloc语义相反的方法是dealloc还是release175
8.2   内存管理机制176
8.2.1  当使用block时，什么情况会发生引用循环？如何解决176
8.2.2  CAAnimation的delegate是强引用还是弱引用176
8.2.3  按照默认法则，哪些关键字生成的对象需要手动释放177
8.2.4  Objective-C是如何实现内存管理的179
8.2.5  如何实现autorealeasepool179
8.2.6  如果一个对象释放前被加到了NotificationCenter中，不在NotificationCenter中，那么remove对象可能会怎样181
8.2.7  NSArray和NSMutableArray在Copy和MutableCopy下的内存情况是怎样的182
第9章   iOS中的网络和多线程编程183
9.1  iOS网络编程与多线程基础183
9.1.1  什么是线程？线程与进程有什么区别？为什么要使用多线程189
9.1.2  如何理解多线程190
9.1.3  如何理解HTTP协议191
9.1.4  HTTPS协议与HTTP协议有什么区别与联系193
9.1.5  UIKit类要在哪一个应用线程上使用194
9.1.6  iOS中有哪几种从其他线程回到主线程的方法195
9.1.7  用户下载一个大图片，分成很多份下载，如何使用GCD实现196
9.1.8  项目中什么时候选择使用GCD？什么时候选择NSOperation196
9.1.9  NSOpertion如何实现线程依赖196
9.1.10  什么是线程死锁197
9.1.11  dispatch_barrier_(a)sync的作用是什么198
9.1.12  如何理解线程安全199
9.1.13  如何实现Cocoa中多线程的安全201
9.1.14  如何使用NSURLConnection进行网络请求202
9.1.15  如何使用NSURLSession进行网络请求205
9.2  block与GCD206
9.2.1  block有哪几种定义的方式206
9.2.2  在ARC环境下，是否需要使用copy关键字来修饰block207
9.2.3  在block内如何修改block外部变量208
9.2.4  在block中使用self关键字是否一定导致循环引用209
9.2.5  GCD中有哪几种队列211
9.2.6  如何理解GCD死锁211
9.2.7  如何使用GCD实现线程之间的通信212
9.2.8  GCD如何实现线程同步213
9.2.9  GCD多线程编程中什么时候会创建新线程215
9.2.10  iOS中如何触发定时任务或延时任务217
9.2.11  如何解决网络请求的依赖关系220
第10章   iOS其他话题221
10.1  iOS中函数响应式编程及ReactiveCocoa的使用221
10.1.1  什么是ReactiveCocoa？如何使用221
10.1.2  如何使用RAC防止button短时间内重复单击223
10.2  iOS基础设计模式223
10.2.1  什么是单例模式224
10.2.2  什么是MVC设计模式225
10.2.3  如何理解MVVM设计模式228
10.3   第三方框架229
10.3.1  SDWebImage是什么？加载图片的原理是什么230
10.3.2  什么是CocoaPods233
10.4  程序调试234
10.4.1  BAD_ACCESS在什么情况下出现234
10.4.2  如何调试BAD_ACCESS错误235
10.4.3  如何查看设备应用的crash日志235
10.4.4  如何检测内存泄漏237
10.4.5  lldb(gdb)常用的调试命令有哪些237
第11章   数据库239
11.1  数据库基础知识239
11.2  SQL语言的功能有哪些240
11.3  内连接与外连接有什么区别242
11.4  什么是事务243
11.5  什么是存储过程？它与函数有什么区别与联系245
11.6  一二三四范式有什么区别245
11.7  什么是触发器247
11.8  什么是游标248
11.9  如果数据库日志满了，那么会出现什么情况249
11.10  union和union all有什么区别249
11.11  什么是视图250
11.12  什么是数据库三级封锁协议251
11.13  索引的优缺点有哪些251
第12章   操作系统253
12.1  进程管理253
12.1.1  进程与线程有什么区别253
12.1.2  线程同步有哪些机制254
12.1.3  内核线程和用户线程有什么区别254
12.2  内存管理255
12.2.1  内存管理有哪几种方式255
12.2.2  什么是虚拟内存256
12.2.3  什么是内存碎片？什么是内碎片？什么是外碎片256
12.2.4  虚拟地址、逻辑地址、线性地址、物理地址有什么区别257
12.2.5  Cache替换算法有哪些257
12.3  用户编程接口259
12.3.1  库函数调用与系统调用有什么不同259
12.3.2  静态链接与动态链接有什么区别259
12.3.3  静态链接库与动态链接库有什么区别260
12.3.4  用户态和核心态有什么区别260
12.3.5  用户栈与内核栈有什么区别261
附录 262
真题1262
真题2264
真题3265
真题1答案267
真题2答案274
真题3答案281
参考文献 290
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS程序员面试笔试宝典
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS开发实战
第1章 开发准备 1
1.1 iOS 10新特性简述 2
1.1.1 新增触觉反馈编程接口 2
1.1.2 SiriKit框架的开放 4
1.1.3 引入Messages App 5
1.1.4 通知框架的整合与扩展 6
1.2 熟悉iOS开发环境 6
1.2.1 安装Xcode开发工具 6
1.2.2 了解Xcode开发工具主界面 8
1.2.3 Xcode开发工具的使用技巧及
常用快捷键 9
1.3 创建第一个iOS项目 10
1.4 使用Git进行项目版本管理 13
1.4.1 Git与Github简介 13
1.4.2 注册GitHub会员 13
1.4.3 使用Xcode创建Git仓库 15
1.4.4 用Xcode建立本地Git仓库与
GitHub代码托管平台的关联 16
第2章 基础UI控件 18
2.1 iOS系统UI框架的介绍 19
2.1.1 MVC设计模式 19
2.1.2 代理设计模式 20
2.2 视图控制器——UIViewController 20
2.2.1 UIViewController的生命周期 20
2.2.2 UIViewController的视图层级
结构 27
2.3 文本控件——UILabel 27
2.3.1 使用UILabel在屏幕上创建
一个标签控件 27
2.3.2 自定义标签控件的相关属性 28
2.3.3 多行显示的UILabel与换行模式 30
2.4 按钮控件——UIButton 32
2.4.1 创建一个按钮改变屏幕颜色 32
2.4.2 更加多彩的UIButton控件 35
2.5 文本输入框控件——UITextField 37
2.5.1 在屏幕上创建一个输入框 37
2.5.2 UITextField的常用属性介绍 39
2.5.3 UITextField的代理方法 40
2.5.4 实现一个监听输入信息的用户名
输入框 41
2.6 开关控件——UISwitch 43
2.6.1 创建一个开关控件 43
2.6.2 为UISiwtch控件添加触发方法 44
2.7 分页控制器——UIPageControl 45
2.8 分段控制器——UISegmentedControl 46
2.8.1 UISegmentedControl基本属性的
应用 46
2.8.2 对UISegmentedControl中的按钮
进行增、删、改操作 48
2.8.3 UISegmentedControl中按钮宽度的
自适应 48
2.9 滑块控件——UISlider 49
2.9.1 UISlider的创建与常规设置 49
2.9.2 对UISlider添加图片修饰 51
2.10 活动指示器控件——
UIActivityIndicatorView 51
2.11 进度条控件——UIProgressView 53
2.12 步进控制器——UIStepper 53
2.12.1 步进控制器的基本属性使用 54
2.12.2 自定义UIStepper按钮图片 55
2.13 选择器控件——UIPickerView 56
2.13.1 创建一个UIPickerView控件 56
2.13.2 UIPickerView选中数据时的
回调代理 58
2.14 通过CALayer对视图进行修饰 59
2.14.1 创建圆角的控件 59
2.14.2 创建带边框的控件 60
2.14.3 为控件添加阴影效果 60
2.15 警告控制器——UIAlertController 61
2.15.1 UIAlertController的警告框 61
2.15.2 UIAlertController之活动列表 64
2.16 扩展篇 65
2.16.1 搜索栏控件——UISearchBar 65
2.16.2 日期时间选择器——
UIDatePicker 69
2.16.3 警告视图——UIAlertView 71
2.16.4 活动列表——UIActionSheet 72
2.17 实战：登录注册界面的搭建 73
第3章 高级UI控件 80
3.1 导航控制器——UINavigationController 81
3.1.1 导航控制器的工作原理 81
3.1.2 使用导航控制器进行多界面
搭建 82
3.1.3 导航栏UINavigationBar 85
3.1.4 导航按钮UIBarButtonItem 87
3.1.5 导航控制器的工具栏 90
3.1.6 iOS 8之后导航控制器的一些
有趣功能 91
3.2 标签控制器——UITabBarController 92
3.2.1 标签控制器的工作原理 92
3.2.2 标签控制器的基础用法解析 92
3.2.3 关于UITabBarItem的使用 94
3.3 滚动视图——UIScrollView 96
3.3.1 使用UIScrollView展示视图
内容 96
3.3.2 UIScrollView的代理方法 98
3.4 网络视图——UIWebView 101
3.4.1 App网络传输安全策略 101
3.4.2 通过网络请求加载
UIWebView 102
3.4.3 通过HTML字符串加载
UIWebView 103
3.4.4 通过NSData数据加载
UIWebView 104
3.4.5 UIWebView中常用方法解析 104
3.4.6 UIWebView的代理方法 106
3.5 表格视图——UITableView 107
3.5.1 UITableView的创建与复用
机制 107
3.5.2 创建一个表格视图
UITableView 108
3.5.3 关于表格数据的载体
UITableViewCell 111
3.5.4 设置UITableView的行高和
头尾视图 113
3.5.5 UITableView的用户交互行为 115
3.5.6 为UITableView添加索引栏 118
3.6 复杂布局视图——UICollectionView 119
3.6.1 UICollectionView控件的优势与
布局方式 119
3.6.2 使用UICollectionView进行
九宫格式的布局 119
3.6.3 创建更加灵活的流式布局 122
3.6.4 自定义UICollectionViewFlowLayout进行参差瀑布流布局 123
3.6.5 使用UICollectionView进行圆环
布局 128
3.7 实战：开发一款手机网页浏览器 133
3.7.1 网页浏览器工程的搭建 133
3.7.2 核心网页视图的设计 135
3.7.3 历史记录界面的设计 147
3.7.4 收藏界面的设计 151
3.7.5 启动页面、图标及应用名称的
相关优化 154
第4章 网络编程 157
4.1 使用NSURLConnection请求网络
数据 158
4.1.1 申请一个免费的API服务 158
4.1.2 使用NSURLConnection进行API
服务数据的获取 161
4.1.3 使用NSURLConnection进行异步
网络请求 162
4.1.4 使用NSURLConnection类通过代理
回调的方式异步进行网络请求 164
4.2 设计封装一个更加易用的网络请求类 165
4.2.1 设计自定义的网络请求连接类 166
4.2.2 设计自定义的网络请求管理类 167
4.3 JSON类型数据的解析与数据模型的
设计 171
4.3.1 JSON数据简介 171
4.3.2 在iOS中解析JSON数据 173
4.3.3 数据模型Model类的设计 175
4.4 使用CocoaPods进行第三方库的管理 180
4.4.1 在MAC上安装CocoaPods 180
4.4.2 用CocoaPods搭建一个使用第三方
网络请求框架AFNetworking的
工程 182
4.5 使用AFNetworking进行网络请求 184
4.5.1 详解HTTP/HTTPS协议 184
4.5.2 使用AFNetworking进行网络
请求 185
4.6 实战：开发“笑一笑”应用程序 188
4.6.1 工程项目框架的搭建 188
4.6.2 “笑一笑”界面数据载体cell的
设计 190
4.6.3 “笑一笑”界面的搭建 193
4.6.4 实现下拉刷新与加载更多功能 200
4.6.5 “趣图吧”界面数据载体cell的
设计 203
4.6.6 “趣图吧”界面的设计 207
第5章 音频、视频开发 216
5.1 iOS音频开发基础——AVAudioPlayer
类的使用 217
5.1.1 使用AVAudioPlayer进行MP3
音频文件的播放 217
5.1.2 进行音频播放相关属性的控制 218
5.1.3 后台播放音频及用户交互的
优化 225
5.2 iOS视频开发基础 229
5.2.1 使用MPMoviePlayerController
向应用中嵌入视频模块 230
5.2.2 MPMoviePlayerController常用
属性与方法解析 231
5.3 视频播放器视图控制器——
MPMoviePlayerViewController 236
5.4 AVPlayerViewController视频播放框架与
画中画开发技术 238
5.4.1 使用AVPlayerViewController
进行视频播放 238
5.4.2 iPad的画中画播放技术 241
5.5 实战：“歌手王菲”音频播放器的
开发 244
5.5.1 工程搭建与LRC歌词文件
简介 244
5.5.2 LRC歌词解析引擎的设计 245
5.5.3 核心播放器引擎的设计 253
5.5.4 歌曲列表与歌词显示视图界面的
设计 265
5.5.5 播放器主页面的实现 274
5.5.6 后台播放音频用户交互的处理 285
第6章 动画开发 288
6.1 使用UIImageView播放图片组帧
动画 289
6.2 UIView层动画的应用 290
6.2.1 执行UIView层过渡动画的3个类
方法 290
6.2.2 创建UIView层的阻尼动画 293
6.2.3 动画参数配置与组合动画 293
6.2.4 UIView层过渡动画支持的
属性 297
6.3 使用commit方式进行UIView层动画的
创建 298
6.3.1 使用commit方式进行UIView层
过渡动画的创建 298
6.3.2 两种UIView层动画创建方式的
优劣 300
6.4 UIView的转场动画 300
6.4.1 重绘UIView视图时使用的转场
动画 300
6.4.2 切换UIView视图时使用的转场
动画 302
6.5 核心动画编程技术——CoreAnimation 303
6.5.1 锚点对视图控件几何位置的
影响 303
6.5.2 色彩梯度层——
CAGradientLayer 304
6.5.3 视图拷贝层——
CAReplicatorLayer 305
6.5.4 图形渲染层——
CAShapeLayer 307
6.5.5 文本绘制层——CATextLayer 309
6.5.6 CAAnimation动画体系介绍 310
6.5.7 使用CABasicAnimation创建
基础动画 312
6.5.8 使用CAKeyframeAnimation类
创建关键帧动画 316
6.5.9 CALayer层的转场动画——
CATransition 317
6.5.10 CALayer层的组合动画——
CAAnimationGroup 320
6.5.11 CATransform3D变换的应用 321
6.6 炫酷的粒子效果 324
6.6.1 粒子发射器——
CAEmitterLayer 324
6.6.2 粒子单元——CAEmitterCell 327
6.6.3 创建粒子火焰动画 330
6.7 播放GIF动态图 332
6.7.1 使用UIWebView进行GIF动态图
播放 332
6.7.2 使用UIImageView帧动画进行
GIF动态图播放 334
6.8 实战：小游戏Flappy Bird的设计与
开发 336
6.8.1 小鸟对象的设计 336
6.8.2 游戏开始界面的设计 341
6.8.3 游戏结束界面的设计 344
6.8.4 Flappy Bird游戏主框架的搭建 347
第7章 传感器开发 360
7.1 为应用程序添加手机密码及指纹识别的
安全验证 361
7.1.1 使用手机密码为应用程序添加
安全验证 361
7.1.2 使用用户指纹为应用程序添加
安全验证 363
7.2 使用加速度传感器、螺旋仪传感器与磁力
传感器获取设备空间状态 364
7.2.1 使用UIAccelerometer获取设备
空间状态 364
7.2.2 使用CoreMotion框架获取设备
空间状态信息 365
7.3 距离传感器的应用 371
7.4 iOS蓝牙开发技术 373
7.4.1 中心设备管理类
CBCentralManager 374
7.4.2 外围设备管理类
CBPeripheralManager 382
7.5 GPS应用与地图编程技术 388
7.5.1 进行设备地理位置定位 388
7.5.2 原生地图开发技术 392
7.5.3 在地图中添加大头针及标注 395
7.5.4 在地图视图中添加覆盖物 398
7.5.5 在地图中进行线路导航与附近
兴趣点检索 402
7.6 实战：简易蓝牙对战五子棋 410
7.6.1 游戏核心通信类的设计 410
7.6.2 棋盘瓦片的设计 427
7.6.3 核心游戏视图与游戏核心逻辑的
设计 430
7.6.4 核心游戏视图控制器的设计 448
第8章 界面布局 454
8.1 iOS中传统的UIViewAutoresizing布局
模式 455
8.1.1 通过代码设置视图控件的
UIViewAutoresizing模式 455
8.1.2 在xib文件中可视化地配置
控件的autoresizing属性 457
8.2 autolayout自动布局框架 459
8.2.1 初识autolayout 459
8.2.2 autolayout的属性意义与一个
简单的自动布局示例 461
8.2.3 使用Objective-C风格的方法
进行代码autolayout布局 464
8.2.4 使用格式化的字符串进行
autolayout布局对象的创建 467
8.2.5 与约束相关的几个方法 470
8.2.6 使用autolayout设计一个高度自适应
的聊天输入框和动画优化 470
8.2.7 使用第三方库Masonry进行
autolayout的约束布局 474
第9章 数据持久化 482
9.1 使用plist文件进行轻量级数据持久化
管理 483
9.1.1 在工程中读取plist文件数据 483
9.1.2 在程序沙盒Doucments目录中
创建和使用plist文件 485
9.1.3 使用NSUserDefaults类进行
数据持久化 486
9.2 使用归档技术进行数据模型持久化 489
9.2.1 进行单一系统数据类型的归档与
解归档操作 489
9.2.2 对多个对象进行数据归档 491
9.2.3 进行自定义数据模型的归档 492
9.3 小型数据库SQLite在iOS开发中的
应用 495
9.3.1 SQLite数据库常用语法介绍 495
9.3.2 使用iOS原生框架sqlite3对
SQLite数据库进行操作 497
9.4 核心数据管理框架CoreData的使用 501
9.4.1 使用CoreData设计数据模型 502
9.4.2 CoreData编程框架中3个
重要的类 504
9.4.3 CoreData编程框架的数据操作 510
9.4.4 使用CoreData进行数据与页面的
绑定 516
9.5 网络缓存策略 524
9.5.1 为网络请求设置缓存策略 524
9.5.2 应用缓存管理类NSURLCache
简介 525
第10章 提交应用程序到AppStore 527
10.1 使用Xcode开发工具进行程序调试 528
10.1.1 使用自定义断点进行代码
调试 528
10.1.2 添加全局异常断点 529
10.1.3 使用LLDB调试器进行程序
调试 530
10.2 Apple开发者账号的申请 531
10.2.1 几种类型的开发者账号 531
10.2.2 申请开发者账号的过程 531
10.3 进行应用程序的打包 534
10.3.1 在iTunes Connect中进行应用的
创建与配置 534
10.3.2 使用Xcode打包与提交
iTunes 541
第11章 更多功能与进阶技巧 545
11.1 Objective-C中block语法的应用 546
11.1.1 声明与实现block语法块 546
11.1.2 block代码块中访问对象的微妙
关系 547
11.2 iOS通知中心NSNotificationCenter的
应用 548
11.2.1 通知类NSNotification简介 549
11.2.2 通知中心NSNotificationCenter的
应用 549
11.3 多线程开发技术 550
11.3.1 使用NSThread进行线程
管理 550
11.3.2 使用NSOperation类与
NSOperationQueue类进行多任务
管理 552
11.3.3 iOS中GCD编程技术简介 556
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS开发实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS和macOS性能优化
1 CPU：原理  1
一个简单的例子  2
（微）基准的危险  3
更多整数求和的方式  4
Swift  5
其他语言  7
混编的力量   9
趋势   10
操作成本   12
复杂度计算  14
总结   16
2 CPU：测量和工具  17
命令行工具  18
top   18
time  19
sample  19
Xcode 测量工具  22
Instruments   23
设置和数据收集  24
性能分析选项  25
基本分析  27
源代码  29
数据挖掘I：Focus  31
数据挖掘II：Pruning  34
内部测量   35
测试   36
dtrace（dynamic tracing，动态跟踪）  37
职责之外的优化  38
总结   39
3 CPU：陷阱和优化技巧  41
数据表示   41
基本类型  42
字符串  45
对象   47
存取器  48
公共访问（Public Access）  51
对象创建和缓存  52
可变性和缓存  53
惰性求值  55
缓存注意事项  55
陷阱：通用（中级）表示  57
数组和批处理  58
字典   60
消息传递   63
IMP 缓存  65
转发   67
均匀性和优化  69
方法   70
陷阱：CoreFoundation  70
多核   71
线程（Thread）  72
工作队列  73
有节制地优化  74
4 CPU 实战：XML 解析  77
HTML 扫描器  78
将回调映射为消息  81
对象   83
对象的高效性能  85
性能评估   88
调整   91
优化整个组件：MAX  92
MAX 实现   94
总结   95
5 内存：原理  97
内存层次结构  97
Mach 虚拟内存  103
堆和栈   104
栈分配  106
使用malloc()进行堆分配  108
资源管理   111
垃圾回收  111
Foundation 对象所有权  112
跟踪垃圾回收  113
自动引用计数（Automatic Reference Counting）  114
过程式资源回收  115
总结   115
6 内存：测量与工具  117
Xcode 计量表  117
命令行工具  118
top  118
heap  120
leaks 及malloc_debug  122
代码内进行内存测量  123
内存监测工具  124
Leaks  124
Allocations  125
VM Tracker  132
计数器与性能监测事件  133
总结   134
7 内存：陷阱和优化技巧  137
引用计数   137
避免内存泄漏  139
Foundation 对象和基本类型对比  141
更小的结构  143
千禧危机  145
压缩  145
可清除内存  146
内存与并发  146
架构注意事项  147
临时分配与对象缓存  152
NSCache 与libcache  153
内存映射文件  154
madvise   157
iOS 注意事项  158
ARC 优化  158
总结   161
8 内存管理实战：FilterStream 架构  163
UNIX 管道及过滤器  163
面向对象的过滤器  165
DescriptionStream  166
消除description 中的无限递归  170
数据流层次结构  172
总结   173
9 Swift   175
Apple 所声称的Swift 性能  175
语言特性  177
基准代码  179
Swift 性能评估  180
基本性能特征  180
集合  181
更进一步   190
Nginx HTTP 解析器  190
Freddy JSON 解析器  191
图片处理  191
观察  192
编译时间   193
类型推断  193
泛型特化  195
全模块优化  197
控制编译时间  197
面向优化器编程  198
一个足够智能的编译器  199
优化编译器之死  201
实用建议  203
备用方案  204
总结   207
10 I/O：原理  209
硬件   209
硬盘驱动器  209
固态硬盘  211
网络  212
操作系统   212
抽象概念：字节流  212
文件I/O  214
网络栈  218
总结   218
11 I/O：测量与工具  221
负形空间：top 与time  222
信息概览：iostat 和netstat  223
Instruments  224
详细追踪：fs_usage  228
总结   231
12 I/O：陷阱和优化技巧  233
将字节封装为NSData  233
内存映射异常  235
如何分块  237
UNIXy I/O  238
网络I/O   240
堆叠传输  241
限制请求  243
数据处理  244
异步I/O  245
HTTP 服务  246
序列化   250
内存转储  251
一个简单的XML 格式  252
属性列表  254
归档  256
序列化总结  258
CoreData   260
批量创建和更新  261
Fetch 和Fault 技术  263
对象交互  266
子集  266
分析  267
SQLite   267
关系型和其他非数据库  269
事件发布   270
混合形式  271
隔离存储   272
总结   272
13 I/O：实战  273
iPhone 游戏字典  273
有趣的属性列表  277
二进制属性列表读取器  278
懒加载  282
避免中间代码  284
逗号分隔值  287
公共交通调度数据  289
站点信息  290
站点停靠时间检索  291
站点停靠时间导入  292
更快的CSV 解析  294
对象分配  294
Push 与Pull 的比较  296
感兴趣的键  296
并行  296
总结   299
14 图像和UI：原理  301
响应能力   301
软件和API  302
Quartz 和PostScript 图像模型  305
OpenGL   307
Metal   307
图形硬件加速  307
从Quartz 到Core Animation  311
总结   314
15 图像和UI：测量和工具  315
CPU 分析仪  315
Quartz 调试  317
Core Animation 工具  318
当CPU 不再是问题  319
我在测量什么  327
总结   329
16 图像和UI：陷阱和优化技巧  331
陷阱   331
优化技巧   332
过多通信导致安装缓慢  333
节流显示  333
使用节流显示  335
今日安装程序和进度报告  335
iPhone 无法承受之重  336
一切都是假象  338
图像的缩放和剪切  338
缩略图绘制  340
如何确定没有绘制缩略图  341
如何真的不绘制缩略图  341
如何绘制非缩略图  342
在iPhone 上绘制直线  344
总结   346
17 图像和UI：实战  347
优美的天气应用  347
更新  348
探索PNG  348
头脑风暴  350
JPEG 数据点  350
测量时的小错误  351
JPNG 与JPJP  353
优美的启动  353
Wunderlist 3  354
Wunderlist 2  354
整体架构  355
URI 与进程中REST  356
最终一致的异步数据存储  357
RESTOperation 队列  358
流畅、反应灵敏的UI  359
简评Wunderlist  361
总结   361
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS和macOS性能优化
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS面试之道
第1章  iOS工程师的面试   /  1
1.1  简历的准备   /  1
1.2  寻找机会   /  8
1.3  面试流程   /  9
1.4  代码和系统设计的准备   /  16
1.5  如何提问   /  22
1.6  Offer的比较和选择   /  24
第2章  算法基础   /  28
2.1  基本的数据结构   /  28
数组   /  28
字典和集合   /  30
字符串   /  32
2.2  链表   /  34
链表的基本概念   /  34
Dummy节点和尾插法   /  35
快行指针   /  38
2.3  栈和队列   /  40
栈和队列的基本概念   /  40
栈和队列互相转换   /  43
栈和队列面试实战题   /  45
2.4  二叉树   /  47
二叉树的基本概念   /  48
二叉树的遍历   /  50
二叉树面试实战题   /  51
2.5  排序和搜索   /  54
排序的基本概念   /  54
搜索的基本概念   /  57
排序面试实战题   /  59
搜索面试实战题   /  61
iOS中搜索与排序的配合使用   /  64
2.6  深度优先搜索和广度优先搜索   /  66
深度优先搜索和广度优先搜索的基本概念   /  66
深度优先搜索和广度优先搜索面试实战题   /  69
2.7  动态规划   /  74
斐波拉契数列问题   /  74
斐波拉契数列问题面试实战题   /  77
第3章  语言工具   /  81
3.1  Swift   /  81
Swift面试理论题   /  81
Swift面试实战题   /  88
3.2  Objective-C   /  91
Objective-C面试理论题   /  91
Objective-C面试实战题   /  96
3.3  Swift VS Objective-C   /  101
数据结构   /  101
编程思路   /  104
语言特性   /  105
3.4  Xcode使用   /  112
Xcode调试   /  112
分析与优化   /  114
Playground技巧   /  117
第4章  系统框架   /  119
4.1  UI相关知识   /  119
UIKit   /  119
UI控件和基本布局   /  119
动画   /  124
多任务开发   /  127
4.2  UIScrollView及其子类   /  131
UIScrollView及其子类理论面试题   /  131
拓展知识   /  134
优化进阶   /  138
4.3  网络、推送与数据处理   /  141
网络、推送与数据处理相关理论   /  142
iOS网络请求   /  144
信息推送   /  148
数据处理   /  150
4.4  并发编程   /  152
4.5  设计模式   /  168
第5章  经验之谈   /  175
5.1  架构的选择   /  175
5.2  面向协议的编程   /  184
POP VS OOP   /  184
POP面试实战题   /  189
5.3  App的测试和上架   /  195
测试相关知识   /  195
App Store相关知识   /  201
结束语   /  204
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS面试之道
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS性能优化实战
第1章  关于性能你需要知道的事	1
1.1  衡量应用程序性能优劣的一些标准	1
1.1.1  代码的执行效率	2
1.1.2  内存占用	4
1.1.3  CPU负担与能耗	5
1.1.4  动画流畅度	7
1.1.5  网络缓存	8
1.1.6  应用程序启动时间	9
1.1.7  应用程序包尺寸	9
1.2  Xcode断点与静态分析工具	10
1.2.1  添加自定义断点	10
1.2.2  为自定义断点添加行为	11
1.2.3  添加全局类型的断点	13
1.2.4  Xcode的静态分析工具	14
1.3  Instruments：性能分析和测试工具	16
1.3.1  Activity Monitor：活动监视器	16
1.3.2  Allocations：内存跟踪工具	17
1.3.3  CoreAnimation：核心动画监测工具	19
1.3.4  Counters：仪表计数器	20
1.3.5  Energy Log：能耗记录器	21
1.3.6  Leaks：内存泄漏检查工具	22
1.3.7  Network：网络连接检查工具	23
1.3.8  自定义Instruments工具模板	23
1.4  使用LLDB调试工具	25
1.4.1  使用expression指令进行动态代码执行	25
1.4.2  使用frame指令查看代码帧信息	27
1.4.3  使用thread相关指令操作线程	29
1.4.4  其他LLDB常用指令	33
1.5  日志与埋点	34
1.5.1  异常分析	35
1.5.2  使用Bugly异常捕获工具	41
1.5.3  应用程序埋点	43
1.5.4  使用Fabric分析工具	43
第2章  iOS内存管理	45
2.1  iOS的内存管理模型	45
2.1.1  关于内存消耗与引用计数	45
2.1.2  MRC内存管理	46
2.1.3  关于ARC	49
2.1.4  属性修饰符	51
2.1.5  ARC与MRC进行混编	53
2.2  自动释放内存	54
2.2.1  关于autorelease方法	55
2.2.2  自动释放池	57
2.2.3  系统维护的自动释放池	59
2.3  杜绝内存泄漏	60
2.3.1  Block与循环引用	61
2.3.2  代理与循环引用	63
2.3.3  定时器引起的内存泄漏	65
2.4  关于“僵尸”对象	66
2.4.1  捕获“僵尸”对象	66
2.4.2  处理“僵尸”对象	68
2.5  CoreFoundation框架中的内存管理	71
2.5.1  CoreFoundation中的引用计数	71
2.5.2  CoreFoundation框架与Foundation框架混用	72
2.6  扩展：关于id与void*	74
2.6.1  关于id类型	74
2.6.2  关于void与void*	75
2.6.3  解决最初的问题	76
第3章  应用程序网络与能耗优化	77
3.1  深入iOS网络开发技术	77
3.1.1  初识NSURLSession	79
3.1.2  NSURLConnection的简单应用	83
3.1.3  请求对象NSURLRequest	85
3.1.4  请求回执对象NSURLResponse	87
3.1.5  数据缓存对象NSURLCache	88
3.1.6  本地用户凭证对象NSHTTPCookie	90
3.1.7  使用第三方网络诊断库——LDNetDiagnoService_IOS	92
3.2  iOS网络开发及优化秘技	96
3.2.1  使用Charles抓包工具	96
3.2.2  使用Charles进行HTTPS抓包	100
3.2.3  使用Charles进行网络环境模拟	102
3.2.4  使用Charles添加请求断点	104
3.2.5  使用Charles进行数据模拟	106
3.2.6  Charles的请求重写功能	108
3.2.7  使用Mock.js搭建本地数据模拟服务	110
3.2.8  学习使用JSONModel库	116
3.2.9  属性自动生成工具	121
3.3  定位与地图	130
3.3.1  使用定位服务	130
3.3.2  原生地图开发	133
3.3.3  添加大头针与自定义标注	136
3.3.4  添加地图覆盖物	138
3.3.5  检索附近兴趣点和导航服务	140
3.4  定时器应用	146
3.4.1  NSTimer的简单应用	146
3.4.2  关于RunLoop的一些探究	148
3.4.3  中心化管理NSTimer定时器	149
3.4.4  CADisplayLink类的应用	153
3.4.5  使用GCD方式的定时器	154
第4章  从应用程序启动说起	156
4.1  应用程序的启动原理	156
4.1.1  深入UIApplication类	156
4.1.2  UIApplication相关类别介绍	159
4.1.3  关于UIApplicationDelegate	162
4.2  本地通知与远程推送	166
4.2.1  使用本地推送	166
4.2.2  远程推送基础	169
4.2.3  深入理解UserNotification框架	174
4.3  PushKit框架与CallKit框架	189
4.3.1  VoIP与PushKit	190
4.3.2  学习使用CallKit框架	192
4.3.3  来电拦截与号码识别	199

第5章  深入iOS视图与动画	204
5.1  关于视图控制器	204
5.1.1  UIViewController的生命周期	204
5.1.2  从StoryBoard加载UIViewController对象的传值陷阱	207
5.1.3  关于UIViewController的切换	209
5.2  视图控制器的转场动画	210
5.2.1  UIViewController的模态跳转转场	211
5.2.2  导航转场动画的自定义	218
5.2.3  UITabBarController的转场动画	221
5.3  列表视图的性能优化	221
5.3.1  UITableView的构建原理	221
5.3.2  对UITableView可变行高的优化方式	224
5.3.3  关于高度不定的列表分区头、尾视图	228
5.4  iOS图像绘制技术	230
5.4.1  CGPath路径类	231
5.4.2  理解图形上下文	238
5.4.3  颜色与色彩空间	252
5.4.4  图形变换函数	258
5.4.5  Patterns模型的应用	259
5.4.6  绘制梯度渐变视图	263
5.4.7  进行图像处理	268
5.4.8  关于层聚合	272
5.5  iOS核心动画技术	275
5.5.1  初识CoreAnimation	275
5.5.2  深入理解CALayer	277
5.5.3  几种常用的CALayer子类	282
5.5.4  CoreAnimation动画	287
第6章  iOS多线程开发技术	293
6.1  使用NSThread进行线程管理	293
6.1.1  NSThread中常用类方法	293
6.1.2  NSThread成员方法和属性的应用	295
6.1.3  隐式地使用NSThread进行多线程编程	296
6.2  NSOperation与NSOperationQueue的应用	296
6.2.1  关于Operation基类的解析	296
6.2.2  NSBlockOperation类的应用	297
6.2.3  NSInvocationOperation类的应用	299
6.2.4  操作之间的依赖关系	300
6.2.5  NSOperationQueue操作队列的应用	301
6.3  学习使用GCD	303
6.3.1  GCD的调度机制	303
6.3.2  添加任务到调度队列中	304
6.3.3  使用队列组	305
6.3.4  GCD对循环任务的处理	308
6.3.5  GCD中的消息与信号	309
6.3.6  队列的挂起与开启	310
6.3.7  使用GCD处理延时任务	310
6.3.8  数据存取的线程安全问题	311
6.3.9  GCD模式的单例	313
6.3.10  关于GCD中的内存管理	314
第7章  iOS运行时技术	315
7.1  动态的Objective-C语言	315
7.1.1  窥探消息转发机制	316
7.1.2  消息传递与继承链	318
7.1.3  拯救未知消息的三根救命稻草	320
7.1.4  你真的需要救命稻草吗	324
7.1.5  发送消息相关的几个函数	328
7.2  运行时方法解析	331
7.2.1  与运行时相关的类操作函数	332
7.2.2  与运行时相关的实例对象属性操作函数	334
7.2.3  与运行时相关的实例对象方法操作函数	337
7.2.4  与运行时相关的协议操作函数	340
7.3  运行时特性的基本应用	341
7.3.1  操作变量的巧妙方法	341
7.3.2  操作方法的巧妙方法	345
7.4  使用运行时动态修改UILabel的默认字体	348
7.4.1  使用框架统一处理	348
7.4.2  使用运行时函数替换UILabel的初始化方法	348
7.5  设置可自动归档的数据模型基类	352
第8章  JavaScript与Native交互技术的应用	354
8.1  JavaScriptCore框架详解	354
8.1.1  JavaScriptCore框架中的几个核心类	355
8.1.2  在Native中运行JavaScript脚本代码	356
8.1.3  在JavaScript脚本中调用Objective-C Native方法	358
8.1.4  深入JSContext类	359
8.1.5  深入JSValue类	360
8.1.6  Objective-C与JavaScript复杂对象的映射	365
8.1.7  C语言风格的API	366
8.1.8  设计Hybird App框架	371
8.2  WebKit框架的应用	377
8.2.1  WebKit框架概览	377
8.2.2  使用WKWebViewConfiguration对WebView进行配置	379
8.2.3  WKWebView中的属性和方法解析	382
8.2.4  WKWebView中的JavaScript与Native交互	384
8.2.5  WKNavigationDelegate协议中的方法解析	385
8.2.6  WKUIDelegate协议中的方法解析	388
第9章  iOS扩展开发	390
9.1  Today扩展的应用	390
9.1.1  创建Today扩展程序	391
9.1.2  Today扩展与宿主应用程序进行数据交互	393
9.2  分享扩展的应用	396
9.3  照片编辑扩展	399
9.4  自定义键盘扩展	400
9.4.1  了解UIInputViewController类	400
9.4.2  创建自定义的数字输入键盘	401
9.5  iMessage扩展的应用	404
9.5.1  开发独立的表情包	404
9.5.2  开发寄宿于宿主应用程序的表情包扩展	406
9.5.3  开发iMessage App	407
9.5.4  对开发iMessage App的几点建议	418
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS性能优化实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS编程（第6版）
第1章第一个简单的iOS应用	1
1.1    创建Xcode项目	2
1.2    模型-视图-控制器	5
1.3    设计 Quiz  	6
1.4    Interface Builder 	7
1.5    创建界面	8
创建视图对象	9
设置视图对象	11
在模拟器上运行	12
Auto Layout 简介	13
创建关联	16
1.6    创建模型对象	21
实现动作方法	22
加载第一个问题	22
1.7    编译完成的应用	23
1.8    应用图标	24
1.9    启动画面	26
第2章    Swift 语言	27
2.1    Swift 的数据类型	27
2.2    使用标准类型	28
推断类型	30
指定类型	30
字面量和角标	32
构造器	33
属性	34
实例方法	34
2.3    可选	35
字典角标	37
2.4    循环和字符串补全	37
2.5    枚举和 Switch   	38
枚举和初始值	39
2.6    查阅 Apple 的 Swift 文档	40
第3章视图与视图层次结构	 41
3.1    视图基础	41
3.2    视图层次结构	42
3.3    创建新项目	43
3.4    视图及 Frame   	44
自定义标签	51
3.5    自动布局系统	53
对齐矩形与布局属性	54
约束	55
通过 Interface Builder 添加约束	57
内部内容大小	58
视图位置错误	60
添加更多约束	61
3.6    初级练习:更多自动布局练习	62
第4章文本输入与委托	63
4.1    文本编辑	63
键盘属性	66
响应UITextField文字改变事件	67
隐藏键盘	70
4.2    实现温度转换	71
数字格式化	73
4.3    委托	74
实现协议	75
使用委托	75
更多协议	77
4.3    初级练习:禁止输入字母	77
第5章视图控制器	79
5.1    视图控制器的视图	80
5.2    设置初始视图控制器	80
5.3    UITabBarController	83
UITabBarItem	85
5.4    加载以及展示视图	87
访问子视图	89
5.5    与视图控制器及其视图交互	89
5.6    中级练习：夜间模式	90
5.7    深入学习：高清显示	90
第6章用代码实现视图	93
6.1    使用代码创建视图	94
6.2    代码实现约束	95
锚点	96
激活约束	97
LayoutGuides	98
边距	99
约束的细节	100
6.3    代码实现事件	101
6.4    初级练习:再添加一个 Tab  	102
6.5    中级练习:显示用户位置	103
6.6    高级练习:显示地图大头针	103
6.7    深入学习:NSAutoresizingMaskLayoutConstraint	103
第7章本地化	105
7.1    国际化	106
格式化	106
基础国际化	109
准备本地化	110
7.2    本地化	114
NSLocalizedString以及字符串表	117
7.3    初级练习:增加另外一种语言的本地化	120
7.4    深入学习:Bundle 在国际化中扮演的角色	120
7.5    深入学习:导入和导出 XLIFF 文件	121
第8章控制动画	123
8.1    基础动画	124
闭包	124
8.2    另一个标签	126
8.3    动画完成	129
8.4    对约束作动画	129
8.5    时间方法	133
8.6    初级练习:Spring 动画	135
8.7    中级练习:Layout Guides  	135
第9章调试	137
9.1    Buggy 项目	137
9.2    调试基础	139
解读控制台信息	139
修复第一个问题	141
原始调试	142
9.3    Xcode的调试器:LLDB  	144
设置断点	145
单步调试代码	146
LLDB 控制台	153
第10章UITableView与UITableViewController	155
10.1    编写Homepwner应用	156
10.2    UITableViewController	157
创建UITableViewController子类	158
10.3    创建 Item 类	159
自定义构造方法	160
10.4    UITableView数据源	161
让控制器访问ItemStore	163
实现数据源方法	165
10.5    UITableViewCells	166
创建并获取UITableViewCell	167
重用UITableViewCell	169
10.6    内容缩进	171
10.7    初级练习:多个分组	172
10.8    中级练习:固定的行	173
10.9    高级练习:自定义UITableView	173
第11章编辑UITableView	175
11.1    编辑模式	175
11.2    添加行	179
11.3    删除行	181
11.4    移动行	182
11.5    显示弹窗	183
11.6    设计模式	186
11.7    初级练习:修改删除按钮的标题	187
11.8    中级练习:禁止调整顺序	187
11.9    高级练习:真正地禁止调整顺序	187
第12章创建UITableViewCell子类	189
12.1    创建ItemCell	190
12.2    添加并关联ItemCell的属性	191
12.3    使用ItemCell	192
12.4    动态计算 Cell 高度	194
12.5    动态类型	194
响应用户的修改	196
12.6    初级练习:UITableViewCell的颜色	 197
第13章UIStackView	199
13.1    使用UIStackView	200
隐藏的约束	200
内容变多优先级	201
内容变少优先级	202
UIStackView的分配	202
嵌套的UIStackView	203
UIStackView间距	204
13.2    Segues  	205
13.3    绑定内容	206
13.4    传递数据	211
13.5    初级练习:更多的UIStackView	212
第14章UINavigationController	213
14.1    UINavigationController	214
14.2    使用UINavigationController导航	218
14.3    视图的出现和消失	218
14.4    隐藏键盘	219
事件处理基础	220
点击回车键来收起键盘	221
点击任意位置隐藏	221
14.5    UINavigationBar	223
在UINavigationBar上添加按钮	225
14.6    初级练习:显示数字键盘	228
14.7    中级练习:自定义UITextField	228
14.8    高级练习:添加更多UIViewController	 228
第15章相机	229
15.1    通过UIImageView对象显示图片	230
添加相机按钮	232
15.2    通过UIImagePickerController拍摄照片	234
设置UIImagePickerController对象的源	 235
设置UIImagePickerController对象的委托	236
以模态的形式显示UIImagePickerController对象	 237
权限	237
保存图片	240
15.3    创建ImageStore	240
15.4    让UIViewController可以访问ImageStore	242
15.5    创建并使用键	243
15.6    使用ImageStore	245
15.7    初级练习:编辑图片	246
15.8    中级练习:删除图片	246
15.9    高级练习:Camera Overlay  	246
15.10    深入学习:导航实现文件	246
//MARK:  	247
第16章保存、读取与应用状态	249
16.1    固化	250
16.2    应用沙盒	252
创建文件 URL  	253
16.3    NSKeyedArchiver与NSKeyedUnarchiver	 254
加载文件	257
16.4    应用状态与状态切换	257
16.5    通过NSData将数据写入文件	260
16.6    错误处理	263
16.7    初级练习:PNG   	265
16.8    深入学习:应用状态切换	265
16.9    深入学习:文件系统读/写	266
16.10    深入学习:应用程序包	268
第17章    Size Classes    	271
17.1    为特定的 Size Classes 定制界面	272
17.2    初级练习:垂直排列UITextField和UILabel	276
第18章触摸事件和UIResponder	277
18.1    触摸事件	277
18.2    创建TouchTracker应用	279
18.3    创建 Line 结构体	280
结构体	281
值类型和指针类型对比	281
18.4    创建DrawView	281
18.5    使用DrawView画图	282
18.6    处理触摸事件并绘制线条	283
处理多点触摸	284
18.7    @IBInspectable	288
18.8    中级练习:颜色	290
18.9    高级练习:圆圈	290
18.10    深入学习:响应对象链	290
18.11    深入学习:UIControl	291
第19章UIGestureRecognizer与UIMenuController	293
19.1    UIGestureRecognizer子类	294
19.2    使用UITapGestureRecognizer检测点击	294
19.3    多个UIGestureRecognizer	296
19.4    UIMenuController	299
19.5    更多UIGestureRecognizer	301
UIPanGestureRecognizer与同时识别	302
19.6    深入学习UIGestureRecognizer	306
19.7    中级练习:神奇的线条	307
19.8    高级练习:速度和大小	307
19.9    终极练习:颜色	307
19.10    深入学习:UIMenuController与UIResponderStandardEditActions	308
第20章网络服务	309
20.1    开始Photorama应用	310
20.2    创建 URL  	312
URL 和请求格式	312
URLComponents	313
20.3    发送请求	316
URLSession	 317
20.4    创建 Photo 模型	 320
20.5    JSON 数据	 320
JSONSerialization	321
枚举和相关值	322
解析 JSON 数据	323
20.6    下载并显示图片数据	 328
20.7    主线程	331
20.8    初级练习:打印返回信息	332
20.9    中级练习:从 Flickr 获取最新照片	332
20.10    深入学习:HTTP  	333
第21章UICollectionView	335
21.1    显示网格	336
21.2    UICollectionView数据源	338
21.3    自定义布局	341
21.4    创建自定义的UICollectionViewCell	343
21.5    下载照片数据	347
扩展	350
照片缓存	352
21.6    查看照片	353
21.7    中级练习:改变 Item 的尺寸	 356
21.8    高级练习:自定义布局	 356
第22章    Core Data  	357
22.1    对象图	 357
22.2    实体	358
模型实体	358
可变属性	360
NSManagedObject和它的子类	360
22.3    NSPersistentContainer	 362
22.4    更新数据	363
插入数据	 363
保存修改	365
22.5    更新数据源	365
NSFetchRequest和NSPredicate	365
22.6    初级练习:照片查看次数	 369
22.7    深入学习:Core Data Stack  	369
NSManagedObjectModel	 369
NSPersistentStoreCoordinator	 369
NSManagedObjectContext	370
第23章    Core Data 关系	371
23.1    关系	372
23.2    在界面中添加标签	374
23.3    后台任务	383
23.4    中级练习:收藏	387
第24章辅助功能	389
24.1    旁白	389
测试旁白	390
在Photorama中使用辅助功能	392
第25章后记	397
25.1    接下来做什么	397
25.2    关注我们	398
索引	399
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iOS编程（第6版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>九阴真经：iOS黑客攻防秘籍
第1章　iOS安全机制　　1
1.1　应用的安装源　　1
1.2　沙盒　　2
1.3　代码签名　　3
1.4　用户权限隔离　　4
1.5　数据执行保护　　4
1.6　地址随机化　　5
1.7　后台程序　　5
第2章　越狱环境开发工具的准备　　8
2.1　越狱与Cydia　　8
2.2　文件管理工具　　10
2.2.1　iFile：在手机上管理文件　　10
2.2.2　AFC2：通过USB管理手机文件　　10
2.3　命令行工具　　11
2.3.1　MTerminal：手机中执行命令行　　11
2.3.2　OpenSSH：在电脑上执行命令行　　12
2.4　代码注入测试工具　　13
2.5　远程调试工具　　14
2.5.1　debugserver的配置与启动　　14
2.5.2　LLDB连接debugserver及其调试　　15
2.5.3　通过USB连接SSH进行调试　　17
2.6　反汇编工具　　18
2.6.1　IDA　　18
2.6.2　Hopper　　21
2.7　其他工具　　22
第3章　ARM汇编基础　　30
3.1　ARMv7　　30
3.1.1　编写32位汇编代码　　30
3.1.2　寄存器与栈　　32
3.1.3　基础指令　　32
3.1.4　条件跳转与循环　　33
3.1.5　函数参数的调用过程　　34
3.1.6　Thumb指令　　35
3.2　ARM64　　36
3.2.1　编写64位的汇编代码　　36
3.2.2　寄存器与栈　　36
3.2.3　函数参数的调用过程　　37
3.3　在Xcode中使用内联汇编　　38
3.3.1　C/C++/Objective-C调用汇编函数　　39
3.3.2　直接编写内联汇编　　39
第4章　应用逆向分析　　41
4.1　寻找main函数的入口　　41
4.1.1　编写一个测试程序　　41
4.1.2　ARMv7的main函数入口　　42
4.1.3　ARM64的main函数入口　　43
4.2　动态调试　　44
4.2.1　反汇编　　44
4.2.2　添加断点　　45
4.2.3　打印数据　　50
4.2.4　读写数据　　51
4.2.5　修改程序的执行流程　　52
4.2.6　查看信息　　54
4.2.7　执行到上层调用栈　　56
4.2.8　临时修改变量的值　　57
4.2.9　使用帮助与搜索　　57
4.3　静态分析　　58
4.3.1　通过字符串定位到代码的引用位置　　58
4.3.2　查看函数被调用的位置　　62
4.3.3　重设基地址　　63
4.3.4　修改代码并保存文件　　64
4.3.5　使用IDA Python脚本　　65
4.4　逆向分析实例　　65
第5章　Tweak编写技术　　76
5.1　Theos开发环境的使用　　76
5.1.1　编写第一个Tweak　　76
5.1.2　Theos工程文件　　80
5.2　逆向分析与编写Tweak　　83
5.2.1　逆向分析　　83
5.2.2　编写Tweak　　91
第6章　注入与hook　　94
6.1　注入动态库　　94
6.1.1　编写动态库　　94
6.1.2　DynamicLibraries目录　　95
6.1.3　DYLD_INSERT_LIBRARIES环境变量　　95
6.1.4　不越狱注入动态库　　96
6.2　hook　　97
6.2.1　Cydia Substrate　　97
6.2.2　Symbol Table　　100
6.2.3　Method Swizzing　　102
第7章　Mach-O文件格式解析　　104
7.1　Mach-O文件格式　　104
7.1.1　Fat头部　　106
7.1.2　Mach头部　　108
7.1.3　Load command　　109
7.1.4　符号表与字符串表　　122
7.2　CFString的运行过程　　124
7.2.1　编写测试代码　　124
7.2.2　CFString的数据结构　　125
7.2.3　调试运行过程　　126
7.3　Mach-O ARM函数绑定的调用过程分析　　127
7.3.1　编写测试代码　　127
7.3.2　分析ARMv7函数绑定的调用过程　　128
7.3.3　分析ARM64函数绑定的调用过程　　136
7.3.4　总结　　140
7.4　静态库文件格式　　142
7.5　class-dump导出头文件的原理　　143
7.6　关于Bitcode　　147
7.6.1　Bitcode的作用　　148
7.6.2　在Xcode中如何生成Bitcode　　148
7.6.3　通过命令行编译Bitcode　　150
7.6.4　将Bitcode编译成可执行文件　　152
7.6.5　编译器相关参数　　153
第8章　唯一设备ID　　154
8.1　UDID与设备ID　　154
8.2　IDFA　　157
8.3　IDFV　　157
8.4　OpenUDID　　158
8.5　SimulateIDFA　　159
8.6　MAC地址　　160
8.7　ID的持久化存储　　163
8.8　DeviceToken　　167
第9章　刷量与作弊　　168
9.1　越狱环境下获取root权限　　168
9.2　修改手机信息　　169
9.2.1　修改基本信息　　169
9.2.2　修改Wi-Fi信息　　176
9.2.3　修改DeviceToken　　177
9.2.4　修改位置信息　　178
9.3　清除应用数据　　179
9.4　清除Keychain　　181
9.5　清除剪贴板　　183
9.6　发布应用　　183
9.6.1　将App打包成deb　　183
9.6.2　制作Cydia源发布应用　　184
9.7　权限的切换　　185
9.8　变化IP地址　　186
9.9　反越狱检测　　188
9.10　不用越狱修改任意位置信息　　190
9.11　在两个手机上同时登录同一微信　　192
9.12　微信的62数据　　193
第10章　重要信息获取与取证　　195
10.1　通讯录　　195
10.2　短信　　196
10.3　通话记录　　197
10.4　位置信息　　197
10.5　网络信息　　199
10.6　传感器信息　　206
10.7　系统信息　　210
10.8　硬件ID信息　　214
10.9　已安装的应用列表　　216
10.10　使用idb分析泄露的数据　　218
10.11　重要的文件与目录　　223
10.12　libimobiledevice获取手机信息　　226
第11章　应用破解　　228
11.1　重打包应用与多开　　228
11.1.1　重打包应用　　228
11.1.2　多开　　235
11.2　应用重签名　　238
11.2.1　代码签名　　238
11.2.2　授权机制　　241
11.2.3　配置文件　　243
11.2.4　重签名　　244
11.3　抓包和改包　　245
11.3.1　tcpdump抓包　　245
11.3.2　Wireshark抓包　　248
11.3.3　Charles抓取HTTPS数据包　　250
11.3.4　Charles修改数据包与重发　　254
11.3.5　突破SSL双向认证　　257
11.4　文件监控　　258
11.5　破解登录验证　　259
11.5.1　得到HTTP传输的数据　　259
11.5.2　得到解密的数据　　260
11.5.3　破解方法　　261
第12章　应用保护　　262
12.1　函数名混淆　　262
12.2　字符串加密　　262
12.3　代码混淆　　265
12.3.1　inline内联函数　　265
12.3.2　obfuscator-llvm编译器　　266
12.3.3　Xcode集成配置obfuscator-llvm　　268
12.3.4　Theos集成配置obfuscator-llvm　　270
12.4　越狱检测　　270
12.4.1　判断相关文件是否存在　　270
12.4.2　直接读取相关文件　　271
12.4.3　使用stat函数判断文件　　271
12.4.4　检查动态库列表　　272
12.4.5　检查环境变量　　272
12.4.6　检查函数是否被劫持　　272
12.5　反盗版　　273
12.5.1　检查Bundle identifier　　273
12.5.2　检查来源是否为App Store　　273
12.5.3　检查重签名　　276
12.5.4　代码校验　　277
12.6　反调试与反反调试　　278
12.6.1　反调试方法　　279
12.6.2　反反调试　　281
12.7　反注入与反反注入　　285
第13章　代码入口点劫持　　287
13.1　实现原理　　287
13.2　编写ShellCode　　287
13.2.1　编写ARM汇编　　288
13.2.2　计算main函数的跳转地址　　292
13.2.3　最终的ShellCode　　294
13.3　插入代码　　295
13.4　修改入口点　　296
13.4.1　关于指令切换　　296
13.4.2　ARMv7入口点　　297
13.4.3　ARM64入口点　　297
13.5　重签名　　298
第14章　写壳内幕　　300
14.1　判断文件格式类型　　300
14.2　代码的插入　　301
14.3　修改程序入口点　　303
14.4　Shellcode如何调用函数　　304
14.5　编写和调试Shellcode　　308
14.5.1　ARMv7 Shellcode　　309
14.5.2　ARM64 Shellcode　　316
14.6　总结　　329
第15章　系统相关　　331
15.1　Cydia的相关问题及修复方法　　331
15.2　降级传说　　334
15.3　访问限制密码的安全隐患　　335
15.4　扫码在线安装应用　　338
15.5　CVE-2018-4407远程溢出漏洞　　344
15.6　解决磁盘空间不足的问题　　345
附录A　书中用到的工具列表　　347

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>九阴真经：iOS黑客攻防秘籍
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Objective-C 2.0程序设计
译者序
作者简介
技术审校人员简介
第1章 前言
1.1 本书的内容
1.2 本书的组织方式
1.3 致谢
第1部分 objective-c语言
第2章 objective-c程序设计
2.1 编译并运行程序
2.1.1 使用xcode
2.1.2 使用terminal
2.2 解释第一个程序
2.3 显示变量的值
2.4 小结
2.5 练习
第3章 类、对象和方法
3.1 到底什么是对象
3.2 实例和方法
3.3 用于处理分数的objective-c类
.3.4 @interface部分
3.4.1 选择名称
3.4.2 实例变量
3.4.3 类和实例方法
3.5 @implementation部分
3.6 program部分
3.7 实例变量的访问以及数据封装
3.8 小结
3.9 练习
第4章 数据类型和表达式
4.1 数据类型和常量
4.1.1 int类型
4.1.2 float类型
4.1.3 double类型
4.1.4 char类型
4.1.5 限定词：long、long long、short、unsigned及signed
4.1.6 id类型
4.2 算术表达式
4.2.1 运算符的优先级
4.2.2 整数运算和一元负号运算符
4.2.3 模运算符
4.2.4 整型值和浮点值的相互转换
4.2.5 类型转换运算符
4.3 赋值运算符
4.4 计算器类
4.5 位运算符
4.5.1 按位与运算符
4.5.2 按位或运算符
4.5.3 按位异或运算符
4.5.4 一次求反运算符
4.5.5 向左移位运算符
4.5.6 向右移位运算符
4.6 类型：_bool、_complex和_imaginary
4.7 练习
第5章 循环结构
5.1 for语句
5.1.1 键盘输入
5.1.2 嵌套的for循环
5.1.3 for循环的变形
5.2 while语句
5.3 do语句
5.4 break语句
5.5 continue语句
5.6 小结
5.7 练习
第6章 选择结构
6.1 if语句
6.1.1 if-else结构
6.1.2 复合条件测试
6.1.3 嵌套的if语句
6.1.4 else if结构
6.2 switch语句
6.3 boolean变量
6.4 条件运算符
6.5 练习
第7章 类
7.1 分离接口和实现文件
7.2 合成存取器方法
7.3 使用点运算符访问属性
7.4 具有多个参数的方法
7.4.1 不带参数名的方法
7.4.2 关于分数的操作
7.5 局部变量
7.5.1 方法的参数
7.5.2 static关键字
7.6 self关键字
7.7 在方法中分配和返回对象
7.8 练习..
第8章 继承
8.1 一切从根类开始
8.2 通过继承扩展—添加新方法
8.2.1 point类和内存分配
8.2.2 @class指令
8.2.3 具有对象的类
8.3 重载方法
8.3.1 择哪个方法
8.3.2 重载dealloc方法和关键字super
8.4 通过继承扩展：添加新的实例变量
8.5 抽象类
8.6 练习
第9章 多态、动态类型和动态绑定
9.1 多态：相同的名称，不同的类
9.2 动态绑定和id类型
9.3 编译时和运行时检查
9.4 id数据类型与静态类型
9.5 有关类的问题
9.6 使用@try处理异常
9.7 练习
第10章 变量和数据类型
10.1 类的初始化
10.2 作用域回顾
10.2.1 控制实例变量作用域的指令
10.2.2 外部变量
10.2.3 静态变量
10.3 存储类说明符
10.3.1 auto
10.3.2 const
10.3.3 volatile
10.4 枚举数据类型
10.5 typedef语句
10.6 数据类型转换
10.6.1 转换规则
10.6.2 符号扩展
10.7 练习
第11章 分类和协议
11.1 分类
11.2 协议
11.3 合成对象
11.4 练习
第12章 预处理程序
12.1 ＃define语句
12.1.1 更高级的定义类型
12.1.2 #运算符
12.1.3 ##运算符
12.2 #import语句
12.3 条件编译
12.3.1 #ifdef、#endif、#else和#ifndef语句
12.3.2 #if和#elif预处理程序语句
12.3.3 #undef语句
12.4 练习
第13章 基本的c语言特性
13.1 数组
13.1.1 数组元素的初始化
13.1.2 字符数组
13.1.3 多维数组
13.2 函数
13.2.1 参数和局部变量
13.2.2 函数的返回结果
13.2.3 函数、方法和数组
13.3 结构
13.3.1 结构的初始化
13.3.2 结构数组
13.3.3 结构中的结构
13.3.4 关于结构的补充细节
13.3.5 不要忘记面向对象编程思想
13.4 指针
13.4.1 指针和结构
13.4.2 指针、方法和函数
13.4.3 指针和数组
13.4.4 指针运算
13.4.5 指针和内存地址
13.5 联合
13.6 它们不是对象
13.7 其他语言特性
13.7.1 compound literal
13.7.2 goto语句
13.7.3 空语句
13.7.4 逗号运算符
13.7.5 sizeof运算符
13.7.6 命令行参数
13.8 工作原理
事实#1：实例变量存储在结构中
事实#2：对象变量实际上是指针
事实#3：方法是函数，而消息表达式是
函数调用
事实#4：id类型是通用指针类型
13.9 练习
第二部分 foundation框架
第14章 foundation框架简介
第15章 数字、字符串和集合
15.1 数字对象
15.2 字符串对象
15.2.1 nslog函数
15.2.2 可变对象与不可变对象
15.2.3 可变字符串
15.2.4 所有对象到哪里去了
15.3 数组对象
15.4 同步addresscard方法
15.4.1 快速枚举
15.4.2 数组排序
15.5 词典对象
15.6 集合对象
15.7 练习
第16章 使用文件
16.1 管理文件和目录：nsfilemanager
16.1.1 使用nsdata类
16.1.2 使用目录
16.1.3 枚举目录中的内容
16.2 使用路径：nspathutilities.h
16.2.1 常用的路径处理方法
16.2.2 复制文件和使用nsprocessinfo类
16.3 基本的文件操作：nsfilehandle
16.4 练习
第17章 内存管理
17.1 自动释放池
17.2 引用计数
17.2.1 引用计数和字符串
17.2.2 引用计数与实例变量
17.3 自动释放池示例
17.4 内存管理规则摘要
17.5 垃圾回收
17.6 练习
第18章 复制对象
18.1 copy和mutablecopy方法
18.2 浅复制与深复制
18.3 实现[nscopying]协议
18.4 用赋值方法和取值方法复制对象
18.5 练习
第19章 归档
19.1 使用xml属性列表进行归档
19.2 使用nskeyedarchiver归档
19.3 编码方法和解码方法
19.4 使用nsdata创建自定义档案
19.5 使用归档程序复制对象
19.6 练习
第三部分 cocoa和iphone sdk
第20章 cocoa简介
20.1 框架层
20.2 接触cocoa
第21章 编写iphone应用程序
21.1 iphone sdk
21.2 第一个iphone应用程序
21.2.1 创建新的iphone应用程序项目
21.2.2 输入代码
21.2.3 设计界面
21.3 iphone分数计算器
21.3.1 启动新的fraction_calculator项目
21.3.2 定义视图控制器
21.3.3 fraction类
21.3.4 处理分数的calculator类
21.3.5 设计ui
21.4 小结
21.5 练习
第四部分 附录
附录a 术语表
附录b objective-c 2.0语言概览
附录c 地址簿源代码
附录d 资源
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Objective-C 2.0程序设计
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iPhone开发秘籍 （第2版）
第1章 iPhone SDK简介	1
1.1 iPhone开发人员计划	1
1.1.1 在线开发人员计划	1
1.1.2 标准开发人员计划	2
1.1.3 企业开发人员计划	2
1.1.4 大学开发人员计划	2
1.1.5 注册	2
1.2 开始	2
1.2.1 下载SDK	2
1.2.2 开发设备	3
1.2.3 模拟器的限制	4
1.2.4 Tethering	4
1.3 理解型号差异	5
1.3.1 摄像头	5
1.3.2 扬声器和麦克风	5
1.3.3 手机	6
1.3.4 Core Location的差异	6
1.3.5 振动支持和接近传感器	6
1.3.6 处理器速度	6
1.3.7 OpenGL ES	7
1.4 平台限制	7
1.4.1 存储限制	7
1.4.2 数据访问限制	7
1.4.3 内存限制	7
1.4.4 交互限制	8
1.4.5 电量限制	8
1.4.6 应用程序限制	8
1.4.7 用户行为限制	9
1.5 SDK限制	9
1.6 使用开发人员门户	9
1.6.1 建立团队	10
1.6.2 请求证书	10
1.6.3 注册设备	11
1.6.4 注册应用程序标识符	11
1.6.5 设置	12
1.7 组建iPhone项目	12
1.7.1 iPhone应用程序的主干	13
1.7.2 main.m	14
1.7.3 应用程序委托	15
1.7.4 视图控制器	16
1.7.5 关于本书示例代码的说明	16
1.8 iPhone应用程序组件	17
1.8.1 应用程序文件夹层次结构	17
1.8.2 可执行文件	17
1.8.3 Info.plist文件	17
1.8.4 图标和默认图像	19
1.8.5 NIB文件	20
1.8.6 应用程序束中不存在的文件	20
1.8.7 IPA归档	20
1.8.8 沙盒	20
1.9 编程范例	21
1.9.1 面向对象编程	21
1.9.2 模型—视图—控制器	22
1.10 小结	27
第2章 构建第一个项目	28
2.1 创建新项目	28
2.2 用模板构建Hello World应用程序	29
2.2.1 创建新项目	29
2.2.2 Project窗口	30
2.2.3 Detail窗格	31
2.2.4 编辑器窗口	32
2.2.5 查看项目	32
2.2.6 打开视图控制器.xib	33
2.2.7 编辑视图	34
2.2.8 运行应用程序	34
2.3 使用模拟器	35
2.4 极简单的Hello World	36
2.4.1 浏览SDK API	38
2.4.2 将Interface Builder文件转换成Objective-C代码	39
2.5 使用调试器	41
2.5.1 设置断点	41
2.5.2 打开调试器	41
2.5.3 运行程序	41
2.5.4 查看标签	42
2.5.5 设置另一个断点	42
2.5.6 使用文本消息	43
2.5.7 移动Clear Log按钮	43
2.5.8 启用Zombie	44
2.6 内存管理	45
2.6.1 泄漏	45
2.6.2 缓存	45
2.7 秘诀：使用Instruments检测内存泄漏	46
2.8 秘诀：使用Instruments监视缓存对象的内存分配	48
2.9 使用Clang静态分析器	50
2.10 针对iPhone进行构建	51
2.10.1 安装开发配置	51
2.10.2 编辑应用程序标识符	51
2.10.3 设置Code Signing Identity	52
2.10.4 编译和运行Hello World应用程序	53
2.10.5 对编译后的应用程序签名	53
2.11 从Xcode到iPhone：Organizer Interface	54
2.11.1 Projects and Sources列表	54
2.11.2 Devices列表	55
2.11.3 iPhone Development Tools列表	55
2.11.4 Summary选项卡	55
2.11.5 Console选项卡	56
2.11.6 Crash Logs选项卡	56
2.11.7 Screenshot选项卡	57
2.12 使用编译器指令	57
2.12.1 获得特定于iPhone的定义	58
2.12.2 运行时检查	58
2.12.3 记忆标记	59
2.12.4 折叠方法	60
2.13 针对发布进行构建	60
2.14 清除构建	61
2.14.1 针对App Store进行编译	62
2.14.2 调试App Store上传	63
2.15 针对临时发布进行构建	64
2.15.1 注册设备	64
2.15.2 构建临时配置	64
2.15.3 在项目中添加授权文件	64
2.15.4 在设置中添加授权文件	64
2.15.5 构建临时应用程序	65
2.15.6 为临时发布添加图片	65
2.16 定制Xcode标识	66
2.17 创建自定义Xcode模板	66
2.17.1 覆盖com.yourcompany	67
2.17.2 构建其他模板	67
2.18 并排查看代码	68
2.19 小结	69
第3章 Objective-C训练营	70
3.1 Objective-C编程语言	70
3.2 类与对象	70
3.2.1 创建对象	72
3.2.2 内存分配	72
3.2.3 释放内存	73
3.3 方法、消息和选择器	73
3.3.1 动态类型检查	74
3.3.2 继承方法	75
3.3.3 声明方法	76
3.3.4 实现方法	76
3.3.5 类方法	78
3.3.6 快速枚举	78
3.4 类层次结构	79
3.5 日志信息	79
3.6 属性	81
3.6.1 点表示法	81
3.6.2 属性与内存管理	81
3.6.3 创建属性	82
3.6.4 创建自定义的取值方法和赋值方法	83
3.6.5 属性的特性	84
3.7 简单的内存管理	85
3.7.1 创建对象	85
3.7.2 创建自动释放的对象	86
3.7.3 自动释放对象的生命周期	87
3.7.4 保留自动释放的对象	87
3.7.5 已保留属性	87
3.7.6 高保留计数	89
3.7.7 创建对象的其他方式	90
3.7.8 释放对象	91
3.8 创建单例	93
3.9 类别（扩展类）	93
3.10 协议	94
3.10.1 定义协议	95
3.10.2 合并协议	95
3.10.3 增加回调	95
3.10.4 声明可选回调	96
3.10.5 实现可选回调	96
3.10.6 符合协议	97
3.11 Foundation类	97
3.11.1 字符串	98
3.11.2 数字与日期	101
3.11.3 集合	103
3.12 补充内容：消息转发	107
3.12.1 实现消息转发	108
3.12.2 使用转发消息	109
3.12.3 思路整理	109
3.12.4 超级简单的转发	110
3.13 小结	110
第4章 设计界面	111
4.1 UIView和UIWindow	111
4.1.1 显示数据的视图	111
4.1.2 做出选择的视图	112
4.1.3 控件	112
4.1.4 表格和拾取器	113
4.1.5 栏	113
4.1.6 进度与活动	114
4.2 UIViewController	114
4.2.1 UIViewController	114
4.2.2 UINavigationController	115
4.2.3 UITabBarController	115
4.2.4 表格控制器	115
4.2.5 地址簿控制器	116
4.2.6 UIImagePickerController	116
4.2.7 邮件撰写	116
4.2.8 GKPeerPickerController	116
4.2.9 Media Player控制器	117
4.3 视图设计几何学	117
4.3.1 状态栏	117
4.3.2 导航栏、工具栏和选项卡栏	118
4.3.3 键盘和拾取器	119
4.3.4 文本字段	120
4.3.5 UIScreen类	120
4.4 构建界面	120
4.5 实战演练：使用IB构建温度单位转换器	121
4.5.1 新建项目	121
4.5.2 添加媒体	121
4.5.3 Interface Builder	121
4.5.4 编辑导航栏	122
4.5.5 替换主视图	123
4.5.6 启用仿真元素	123
4.5.7 创建图像背景	123
4.5.8 添加标签和视图	123
4.5.9 测试界面	124
4.5.10 添加出口和动作	124
4.5.11 检查新类头	125
4.5.12 添加连接	126
4.5.13 获取紫色	126
4.5.14 定义转换方法	127
4.5.15 运行应用程序	127
4.6 实战演练：手动构建温度单位转换器界面	127
4.7 实战演练：创建混合转换器	130
4.7.1 清理基本模板	131
4.7.2 通过.xib添加新视图控制器类	131
4.7.3 设计界面	131
4.7.4 编辑视图控制器实现	132
4.7.5 编辑main.m	132
4.7.6 运行应用程序	133
4.8 实战演练：直接从代码加载.xib文件	133
4.8.1 清理.xib	134
4.8.2 更新loadView	134
4.9 针对旋转进行设计	134
4.10 启用旋转	135
4.11 自动调整大小	136
4.11.1 自动调整大小示例	136
4.11.2 评估自动调整大小选项	138
4.12 移动视图	138
4.13 交换视图	141
4.14 补充内容：6个有用的Interface Builder技巧	142
4.15 小结	143
第5章 使用视图控制器	144
5.1 使用导航控制器开发	144
5.1.1 设置导航控制器	144
5.1.2 推入和弹出视图控制器	145
5.1.3 导航项类	145
5.1.4 模态演示	146
5.2 实用工具函数	146
5.3 秘诀：构建一个简单的双项菜单	147
5.4 秘诀：添加一个分段控件	149
5.5 秘诀：在视图控制器之间导航	150
5.6 秘诀：使用创意弹出选项	152
5.6.1 加载一个视图控制器数组	152
5.6.2 推入临时视图	152
5.7 秘诀：演示一个自定义模态信息视图	153
5.8 秘诀：选项卡栏	155
5.9 秘诀：记住选项卡状态	157
5.10 补充点：Interface Builder和选项卡栏控制器	160
5.11 小结	161
第6章 组合视图和动画	162
6.1 视图层次结构	162
6.2 秘诀：建立视图层次结构树	163
6.3 秘诀：查询子视图	164
6.4 管理子视图	166
6.4.1 添加子视图	166
6.4.2 重新排序和删除子视图	166
6.4.3 视图回调	166
6.5 秘诀：标记和检索视图	167
6.6 秘诀：命名视图	168
6.7 视图的几何特征	172
6.7.1 框架	172
6.7.2 变换	173
6.7.3 坐标系	173
6.8 秘诀：视图框架的处理	173
6.8.1 调整大小	174
6.8.2 CGRect和中心	175
6.8.3 其他实用工具方法	176
6.9 秘诀：移动带边界的视图到任意位置	179
6.10 秘诀：视图变形	180
6.11 显示和交互特性	183
6.12 UIView动画	183
6.12.1 建立UIView动画块	184
6.12.2 动画回调	184
6.13 秘诀：视图的淡入和淡出	185
6.14 秘诀：视图交换	186
6.15 秘诀：翻转视图	187
6.16 秘诀：使用Core Animation Transitions	188
6.17 秘诀：一般的Core Animation调用	190
6.18 翻页过渡	192
6.19 秘诀：当视图显示时反弹视图	193
6.20 秘诀：图像视图动画	195
6.21 补充内容：给视图添加映射	196
6.22 小结	199
第7章 图像处理	201
7.1 秘诀：查找和加载图像	201
7.1.1 读取图像数据	201
7.1.2 加载图像文件	203
7.2 秘诀：从iPhone相册访问照片	205
7.2.1 使用图像拾取器	206
7.2.2 添加2.x支持	206
7.2.3 添加3.1支持	206
7.2.4 拾取视频	206
7.3 秘诀：选择和定制相册中的图像	208
7.4 秘诀：拍摄照片并将照片写到相册上	210
7.5 秘诀：将图片保存到Documents文件夹	212
7.6 秘诀：通过电子邮件发送图片	213
7.7 秘诀：捕捉定时拍摄的照片	214
7.8 秘诀：使用定制摄像头覆盖图	216
7.9 秘诀：在可滚动视图中显示图像	218
7.10 秘诀：创建多图像分页滚动	220
7.11 秘诀：从头开始创建新图像	221
7.12 秘诀：构建图像缩略图	224
7.13 调整照片方向	227
7.14 捕捉屏幕截图	229
7.15 秘诀：直接处理位图	230
7.15.1 在位图上下文中绘制	230
7.15.2 应用图像处理	232
7.15.3 图像处理实况	233
7.16 补充内容：灰度模式	236
7.17 小结	237
第8章 手势和触摸	238
8.1 触摸	238
8.1.1 阶段	238
8.1.2 触摸和视图方法	239
8.1.3 触摸视图	239
8.1.4 多点触摸	240
8.2 秘诀：添加一个简单直观的操作界面	240
8.3 秘诀：限制移动	241
8.4 秘诀：测试触摸	242
8.5 秘诀：测试位图上的触摸	243
8.6 秘诀：向直接操作界面添加持久性	246
8.6.1 存储状态	246
8.6.2 恢复状态	247
8.7 秘诀：通过归档实现持久性	248
8.8 秘诀：添加撤销支持	250
8.8.1 创建撤销管理器	250
8.8.2 子视图撤销支持	250
8.8.3 使用导航栏	250
8.8.4 注册撤销	251
8.9 秘诀：添加晃动控制的撤销支持	252
8.9.1 添加撤销和恢复的动作名称	253
8.9.2 提供晃动以编辑支持	253
8.9.3 设置第一个响应程序	253
8.10 秘诀：屏幕绘图	254
8.11 秘诀：线的计算	255
8.12 秘诀：检测圆形	257
8.13 秘诀：多点触摸	259
8.14 秘诀：区分手势	260
8.15 补充内容：交互式调整大小和旋转	264
8.16 小结	269
第9章 构建和使用控件	270
9.1 UIControl类	270
9.1.1 控件种类	270
9.1.2 控件事件	270
9.2 按钮	272
9.3 在Interface Builder中添加按钮	273
9.3.1 样式	273
9.3.2 连接按钮与动作	274
9.3.3 假按钮	275
9.4 在Xcode中构建定制按钮	275
9.5 多行按钮文本	277
9.6 向按钮添加动画元素	277
9.7 秘诀：为按钮响应制作动画效果	278
9.8 秘诀：使用开关	279
9.9 秘诀：添加定制滑块缩略图	281
9.9.1 定制UISlider	281
9.9.2 增加效能	282
9.10 秘诀：创建一个可两次点击的分段控件	286
9.11 秘诀：子类化UIControl	287
9.11.1 跟踪触摸	288
9.11.2 分派事件	288
9.12 秘诀：关闭UITextField键盘	290
9.12.1 文本特征属性	291
9.12.2 其他文本字段属性	291
9.13 秘诀：关闭UITextView键盘	292
9.14 秘诀：构建更好的文本编辑器	294
9.15 秘诀：文本输入筛选	296
9.16 秘诀：添加一个页面指示器控件	298
9.17 秘诀：创建一个可定制的分页滚动条	300
9.18 秘诀：构建工具栏	304
9.18.1 在Xcode中构建工具栏	305
9.18.2 工具栏提示	307
9.19 补充内容：智能标签	307
9.20 小结	308
第10章 提醒用户	309
10.1 通过警告框直接与用户对话	309
10.1.1 构建简单的警告框	309
10.1.2 警告框委托	310
10.1.3 显示警告框	311
10.1.4 警告框类	311
10.2 秘诀：无按钮警告框	312
10.3 秘诀：使用run循环创建模态警告框	313
10.4 秘诀：要求用户进行文本输入	316
10.5 秘诀：对警告框视图使用可变参数	318
10.6 秘诀：展示简单的菜单	319
10.7 秘诀：在动作表中显示文本	321
10.8 “Please Wait”：向用户显示进度	321
10.9 秘诀：构建UIProgressView	322
10.10 构建定制覆盖图	324
10.11 秘诀：可点击的覆盖图	326
10.12 秘诀：可调整方向的滚动警告框	327
10.13 秘诀：使用网络活动指示器	329
10.14 秘诀：给应用程序贴标记	329
10.15 秘诀：简单的音频警告	330
10.15.1 系统声音	330
10.15.2 震动	331
10.15.3 警告	331
10.15.4 延迟	332
10.16 补充内容：展示音量警告框	333
10.17 小结	333
第11章 创建和管理表格视图	335
11.1 UITableView和UITableView- Controller简介	335
11.2 秘诀：实现最基本的表格	337
11.2.1 填充表格	337
11.2.2 数据源方法	338
11.2.3 重用单元格	338
11.2.4 字体表格示例	338
11.3 秘诀：更改表格的背景色	340
11.4 秘诀：创建表格图像后挡板	341
11.5 秘诀：单元格类型研究	343
11.6 秘诀：使用Interface Builder构建定制单元格	344
11.6.1 创建定制单元格的技巧	346
11.6.2 增加定制选择特性	347
11.7 秘诀：单元格颜色交替	347
11.8 秘诀：使用内置控件构建定制单元格	348
11.9 秘诀：记住定制单元格的控制状态	350
11.10 秘诀：创建勾选的表格单元格	353
11.11 移除单元格选中时的高亮显示状态	354
11.12 秘诀：处理展开配件	355
11.13 秘诀：删除单元格	357
11.13.1 显示删除控件	357
11.13.2 隐藏删除控件	357
11.13.3 处理删除请求	357
11.13.4 滑动单元格	358
11.13.5 添加单元格	358
11.14 秘诀：对单元格重新排序	360
11.15 秘诀：向表格添加撤销支持	361
11.15.1 支持“晃动以编辑”	362
11.15.2 添加Undo和Redo按钮	362
11.15.3 执行撤销和恢复	363
11.15.4 准备表格撤销操作	364
11.16 秘诀：表格排序	366
11.17 秘诀：搜索表格	367
11.17.1 构建搜索显示控制器	367
11.17.2 构建可搜索数据源方法	368
11.17.3 委托方法	369
11.18 秘诀：处理分段	370
11.18.1 创建基于分段的数据结构	370
11.18.2 分段计数和行计数	371
11.18.3 返回单元格	371
11.18.4 创建标题	372
11.18.5 创建分段索引	373
11.18.6 分段委托	374
11.19 秘诀：创建分组表格	374
11.20 秘诀：定制表头和脚注	375
11.21 秘诀：创建带有各种单元格类型和高度的分组表格	377
11.22 秘诀：构建多轮表格	380
11.23 秘诀：使用基于视图的选取器	383
11.24 秘诀：使用UIDatePicker	385
11.25 补充内容：格式化日期	388
11.26 小结	390
第12章 使用GameKit和Bonjour进行连接	391
12.1 秘诀：创建基本的GameKit服务	391
12.1.1 GameKit蓝牙限制	391
12.1.2 设备限制	392
12.1.3 会话	392
12.1.4  服务器、客户端、对等机	393
12.1.5  对等机连接过程	393
12.1.6  发送和接收数据	395
12.1.7  状态更改	396
12.1.8  创建GameKit辅助类	397
12.2  秘诀：后台监控	402
12.3  秘诀：通过GameKit发送复杂数据	403
12.4  秘诀：GameKit语音聊天	405
12.4.1  将GameKit作为中间人	405
12.4.2  实现语音聊天	406
12.5  秘诀：使用Bonjour创建iPhone服务器	407
12.6  秘诀：为iPhone Bonjour服务创建Mac客户端	411
12.7  秘诀：解决实际GameKit限制	414
12.7.1  使用iPhone粘贴板	415
12.7.2  存储数据	415
12.7.3  检索数据	415
12.7.4  可靠的粘贴板	415
12.8  秘诀：通过BonjourHelper连接iPhone进行游戏	418
12.8.1  注册Bonjour名称和端口	419
12.8.2  双工连接	419
12.8.3  读取数据	419
12.8.4  关闭连接	419
12.9  创建“在线”GameKit连接	426
12.10  补充内容：扫描服务	428
12.11  小结	431
第13章 网络连接	432
13.1  秘诀：检查网络状态	432
13.2  秘诀：为可达性扩展UIDevice类	433
13.3  秘诀：扫描连接变化	436
13.4  秘诀：重新获得IP和主机信息	439
13.5  秘诀：检查站点可用性	441
13.6  秘诀：同步下载	443
13.7  秘诀：异步下载	445
13.8  秘诀：应对身份验证的挑战	450
13.9  秘诀：使用密钥链存储敏感数据	451
13.9.1  密钥链包装器	451
13.9.2  密钥链持久性	452
13.10  秘诀：通过POST上传	453
13.11  秘诀：上传数据	456
13.12  秘诀：在应用程序之间共享密钥链	459
13.13  秘诀：将XML转换为树	460
13.13.1  构建解析树	461
13.13.2  使用树结果	462
13.13.3  分解树	464
13.14  秘诀：构建一个简单的基于Web的服务器	465
13.15  补充内容：FTPHelper	468
13.16  小结	469
第14章 设备能力	471
14.1 秘诀：访问核心设备信息	471
14.2 添加设备功能限制	472
14.3 秘诀：重新获得更多设备信息	473
14.4 秘诀：监控iPhone的电池状态	475
14.5 秘诀：启用和禁用接近传感器	476
14.6 秘诀：使用加速度将方向定位为“向上”	477
14.7 秘诀：使用加速度移动屏幕上的对象	479
14.8 秘诀：检测设备方向	481
14.9 秘诀：利用运动事件检测晃动	482
14.10 秘诀：直接从加速计检测晃动	484
14.11 补充内容：检查可用的磁盘空间	487
14.12 小结	487
第15章 音频、视频和媒体工具	488
15.1	秘诀：使用AVAudioPlayer播放音频	488
15.1.1  初始化音频播放器	488
15.1.2  监控音量水平	489
15.1.3  回放进度和拖曳播放	490
15.1.4  捕获回放结束	490
15.2  秘诀：循环播放音频	494
15.3  秘诀：处理音频中断	496
15.4  秘诀：忽略休眠的音频	497
15.5  秘诀：录制音频	499
15.6  秘诀：使用音频队列录制音频	503
15.7  秘诀：使用媒体播放器播放视频	508
15.8  秘决：录制视频	510
15.9  秘诀：选取和编辑视频	512
15.10  秘诀：使用MPMediaPicker- Controller选取音频	514
15.11  秘诀：创建媒体查询	517
15.11.1  建立查询	517
15.11.2  使用谓词	518
15.11.3  解决速度问题	519
15.12  秘诀：使用MPMusicPlayer- Controller	520
15.13  补充内容：额外的电影播放器属性	524
15.14  小结	524
第16章 推送通知	525
16.1 推送通知简介	525
16.1.1 推送技术的工作原理	526
16.1.2 多个提供商支持	526
16.1.3 安全	527
16.1.4 推送的局限性	527
16.2 准备推送	527
16.2.1 生成一个应用程序标识符	528
16.2.2 生成SSL证书	528
16.2.3 推送服务特有的准备文件	530
16.3 注册应用程序	530
16.3.1 检索设备令牌	531
16.3.2 处理令牌请求错误	532
16.3.3 响应通知	532
16.4 秘诀：推送客户端框架	533
16.5 构建通知的有效内容	538
16.5.1 本地化警告	539
16.5.2  从字典转换为JSON	539
16.5.3 自定义数据	540
16.5.4 启动时接收数据	540
16.6 秘诀：发送通知	541
16.7 秘诀：实际使用推送服务	545
16.8 反馈服务	549
16.9 推送服务设计	550
16.10 小结	550
第17章 使用Core Location和MapKit	552
17.1 Core Location的工作原理	552
17.1.1 GPS定位	552
17.1.2 Skyhook Wi-Fi定位	552
17.1.3 蜂窝基站定位技术	553
17.1.4 因特网提供商定位技术	553
17.1.5 混合使用这些方法	553
17.2 秘诀：Core Location简介	554
17.3 秘诀：跟踪速率	556
17.4 秘诀：计算速率和距离	557
17.5 秘诀：使用heading值跟踪北向	559
17.6 秘诀：逆向地理编码	561
17.7 秘诀：查看位置	562
17.8 秘诀：用户位置注解	565
17.9 秘诀：创建地图注解	567
17.9.1 创建、添加和删除注解	568
17.9.2 注解视图	568
17.9.3 自定义注解视图	569
17.9.4 响应注解按钮轻击事件	570
17.10 补充内容：地理编码	574
17.11 小结	577
第18章 连接地址簿	578
18.1  秘诀：使用地址簿	578
18.1.1  地址簿UI	578
18.1.2  地址簿	578
18.1.3  检索和设置ABRecord字符串	579
18.1.4  简单的日期属性	581
18.1.5  获取和设置多值记录属性	581
18.1.6  地址和即时消息属性	584
18.1.7  使用地址簿图像	586
18.1.8  创建、添加和删除记录	586
18.1.9  搜索联系人	587
18.1.10  处理分组	588
18.1.11  ABContact、ABGroup和ABContactsHelper	590
18.2  秘诀：搜索地址簿	590
18.3  秘诀：访问图像数据	592
18.4  秘诀：选取人员	594
18.5  秘诀：限制联系人选取器属性	595
18.6  秘诀：添加新联系人	597
18.7  秘诀：修改现有联系人	599
18.8  秘诀：ABUnknownPersonView-Controller	600
18.9  补充内容：添加随机的联系人拼图	602
18.10  小结	604
第19章 使用Core Data	605
19.1  Core Data简介	605
19.1.1  创建和编辑模型文件	605
19.1.2  生成头文件	606
19.1.3  创建Core Data上下文	607
19.1.4  添加对象	608
19.1.5  查询数据库	610
19.1.6  检测更改	611
19.1.7  删除对象	611
19.2  秘诀：将Core Data用作表格数据源	613
19.3  秘诀：搜索表与Core Data	616
19.4  秘诀：集成Core Data表与实时数据编辑	618
19.5  秘诀：使用Core Data实现撤销—重做支持	620
19.6  小结	622
第20章 StoreKit：应用程序内购买	623
20.1  StoreKit入门	623
20.2  创建测试账户	625
20.3  创建应用程序内购买商品	625
20.3.1  填写定价部分	626
20.3.2  添加商品详细信息	627
20.3.3  提交购买GUI屏幕截图	628
20.3.4  开发人员批准	628
20.4  提交应用程序	628
20.5  构建GUI	629
20.6  购买商品	631
20.6.1  注销iTunes账户以进行测试	631
20.6.2  购买之后重新获得编程控制	631
20.6.3  注册购买商品	632
20.6.4  恢复购买商品	633
20.6.5  购买多个商品	634
20.6.6  处理注册购买过程中的延迟	634
20.7  验证收据	634
20.8  小结	636
第21章 辅助功能以及其他iPhone OS服务	637
21.1  将VoiceOver辅助功能添加到应用程序	637
21.1.1  Interface Builder中的辅助功能	637
21.1.2  在代码中使用辅助功能	639
21.1.3  使用模拟器进行测试	640
21.1.4  在iPhone上测试辅助功能	640
21.2  秘诀：添加自定义设置包	641
21.2.1  Settings应用程序	642
21.2.2  避免敏感信息	643
21.2.3  Settings模式	643
21.2.4  定义设置包	643
21.2.5  设置和用户	647
21.2.6  检查用户默认值	647
21.3  秘诀：创建基于URL的服务	648
21.3.1  使用URL模式	648
21.3.2  服务缺点	648
21.3.3  交叉促销	649
21.3.4  注册模式：声明URL	649
21.3.5  注册模式：添加处理程序方法	649
21.3.6  使调用应用程序恢复控制	650
21.3.7  实现自定义模式	651
21.4  小结	652
附录A Info.plist密钥	653
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iPhone开发秘籍 （第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Objective-C 程序设计
1  引言	1
1.1  本书内容	2
1.2  本书组织方式	3
1.3  支持	5
1.4  致谢	6
1.5  第4版前言	7
2  Objective-C编程	9
2.1  编译并运行程序	9
2.1.1  使用Xcode	10
2.1.2  使用Terminal	16
2.2  解释第一个程序	19
2.3  显示变量的值	23
2.4  小结	25
2.5  练习	26
3  类、对象和方法	29
3.1  到底什么是对象	29
3.2  实例和方法	30
3.3  用于处理分数的Objective-C类	32
3.4  @interface部分	35
3.4.1  选择名称	35
3.4.3  类方法和实例方法	37
3.5  @implementation部分	39
3.6  program部分	41
3.7  实例变量的访问及数据封装	47
3.8  小结	51
3.9  练习	51
4  数据类型和表达式	53
4.1  数据类型和常量	53
4.1.1  int类型	53
4.1.2  float类型	54
4.1.3  char类型	54
4.1.4  限定词：long、long long、short、unsigned及signed	56
4.1.5  id类型	56
4.2  算术表达式	57
4.2.1  运算符的优先级	58
4.2.2  整数运算和一元负号运算符	60
4.2.3  模运算符	62
4.2.4  整型值和浮点值的相互转换	64
4.2.5  类型转换运算符	65
4.3  赋值运算符	66
4.4  Calculator类	67
4.5  练习	70
5  循环结构	73
5.1  for语句	74
5.1.1  键盘输入	81
5.1.2  嵌套的for循环	83
5.1.3  for循环的变体	85
5.2  while语句	86
5.3  do语句	90
5.4  break语句	92
5.5  continue语句	92
5.6  小结	93
5.7  练习	93
6  选择结构	95
6.1  if语句	95
6.1.1  if-else结构	100
6.1.2  复合条件测试	103
6.1.3  嵌套的if语句	106
6.1.4  else if结构	107
6.2  switch语句	117
6.3  Boolean变量	120
6.4  条件运算符	125
6.5  练习	127
7  类	129
7.1  分离接口和实现文件	129
7.2  合成存取方法	134
7.3  使用点运算符访问属性	136
7.4  具有多个参数的方法	137
7.4.1  不带参数名的方法	139
7.4.2  关于分数的操作	140
7.5  局部变量	142
7.5.1  方法的参数	143
7.5.2  static关键字	144
7.6  self关键字	147
7.7  在方法中分配和返回对象	148
7.8  练习	151
8  继承	153
8.1  一切从根类开始	153
8.2  通过继承来扩展：添加新方法	158
8.2.1  Point类和对象创建	162
8.2.2  @class指令	163
8.2.3  具有对象的类	167
8.3  覆写方法	171
8.4  抽象类	175
8.5  练习	176
9  多态、动态类型和动态绑定	179
9.1  多态：相同的名称，不同的类	179
9.2  动态绑定和id类型	182
9.3  编译时和运行时检查	184
9.4  id数据类型与静态类型	185
9.5  有关类的问题	187
9.6  使用@try处理异常	192
9.7  练习	194
10  变量和数据类型	197
10.1  对象的初始化	197
10.2  作用域回顾	200
10.2.1  控制实例变量作用域的指令	200
10.2.2  全局变量	202
10.2.3  静态变量	204
10.3  枚举数据类型	207
10.4  typedef语句	211
10.5  数据类型转换	212
10.6  位运算符	214
10.6.1  按位与运算符	215
10.6.2  按位或运算符	216
10.6.3  按位异或运算符	217
10.6.4  一次求反运算符	217
10.6.5  向左移位运算符	219
10.6.6  向右移位运算符	219
10.7  练习	220
11  分类和协议	223
11.1  分类	223
11.2  类的扩展	228
11.3  协议和代理	230
11.3.1  代理	233
11.3.2  非正式协议	233
11.4  合成对象	234
11.5  练习	236
12  预处理程序	239
12.1  #define语句	239
12.2  #import语句	246
12.3  条件编译	247
12.3.1  #ifdef、#endif、#else和#ifndef语句	247
12.3.2  #if和#elif预处理程序语句	250
12.3.3  #undef语句	251
12.4  练习	251
13  基本的C语言特性	253
13.1  数组	254
13.1.1  数组元素的初始化	256
13.1.2  字符数组	257
13.1.3  多维数组	258
13.2  函数	260
13.2.1  参数和局部变量	262
13.2.2  函数的返回结果	263
13.2.3  函数、方法和数组	267
13.3  块（Blocks）	268
13.4  结构	272
13.4.1  结构的初始化	275
13.4.2  结构中的结构	276
13.4.3  关于结构的补充细节	278
13.4.4  不要忘记面向对象编程思想	279
13.5  指针	279
13.5.1  指针和结构	283
13.5.2  指针、方法和函数	285
13.5.3  指针和数组	286
13.5.4  指针运算	297
13.5.5  指针和内存地址	299
13.6  它们不是对象	299
13.7  其他语言特性	300
13.7.1  复合字面量	300
13.7.2  goto语句	300
13.7.3  空语句	301
13.7.4  逗号运算符	301
13.7.5  sizeof运算符	302
13.7.6  命令行参数	303
13.8  工作原理	305
13.8.1  事实#1：实例变量存储在结构中	305
13.8.2  事实#2：对象变量实际上是指针	306
13.8.3  事实#3：方法是函数，而消息表达式是函数调用	306
13.8.4  事实#4：id类型是通用指针类型	307
13.9  练习	307
14  Foundation框架简介	309
14.1  Foundation文档	309
15  数字、字符串和集合	313
15.1  数字对象	313
15.2  字符串对象	318
15.2.1  NSLog函数	318
15.2.2  description方法	319
15.2.3  可变对象与不可变对象	320
15.2.4  可变字符串	327
15.3  数组对象	333
15.3.1  制作地址簿	337
15.3.2  数组排序	353
15.4  词典对象	360
15.4.1  枚举词典	361
15.5  集合对象	363
15.5.1  NSIndexSet	367
15.6  练习	370
16  使用文件	373
16.1  管理文件和目录：NSFileManager	374
16.1.1  使用NSData类	379
16.1.2  使用目录	380
16.1.3  枚举目录中的内容	383
16.2  使用路径：NSPathUtilities.h	385
16.2.1  常用的路径处理方法	388
16.2.2  复制文件和使用NSProcessInfo类	390
16.3  基本的文件操作：NSFileHandle	394
16.4  NSURL类	399
16.5  NSBundle类	400
16.6  练习	401
17  内存管理和自动引用计数	403
17.1  自动垃圾收集	405
17.2  手工管理内存计数	406
17.2.1  对象引用和自动释放池	407
17.3  事件循环和内存分配	409
17.4  手工内存管理规则的总结	411
17.5  自动引用计数（ARC）	412
17.6  强变量	412
17.7  弱变量	413
17.8  @autoreleasepool块	415
17.9  方法名和非ARC编译代码	415
18  复制对象	417
18.1  copy和mutableCopy方法	418
18.2  浅复制与深复制	420
18.3  实现<NSCopying>协议	422
18.4  用设值方法和取值方法复制对象	425
18.5  练习	428
19  归档	429
19.1  使用XML属性列表进行归档	429
19.2  使用NSKeyedArchiver归档	432
19.3  编码方法和解码方法	433
19.4  使用NSData创建自定义档案	440
19.5  使用归档程序复制对象	444
19.6  练习	445
20  Cocoa和Cocoa Touch简介	447
20.1  框架层	447
20.2  Cocoa Touch	448
21  编写iOS应用程序	451
21.1  iOS SDK	451
21.2  第一个iPhone应用程序	451
21.2.1  创建新的iPhone应用程序项目	454
21.2.2  输入代码	457
21.2.3  设计界面	460
21.3  iPhone分数计算器	466
21.3.1  启动新的Fraction_Calculator项目	468
21.3.2  定义视图控制器	468
21.3.3  Fraction类	474
21.3.4  处理分数的Calculator类	477
21.3.5  设计UI	479
21.4  小结	479
21.5  练习	481
附录A  术语表	483
附录B  地址簿示例源代码	495
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Objective-C 程序设计
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iPhone应用用户体验设计实战与案例
全方位敏捷用户体验
前言
致谢
作者简介
第一部分　iPhone应用和设备概述
第1章　iPhone应用软件概述	2
实用型应用	2
效率型应用	4
沉浸式应用	9
应用风格的选择	12
小结	13
第2章　iPhone硬件概述	14
盘点iPhone和iPod Touch的功能	14
多点触控显示器	15
光线感应器、距离感应器和方向感应器	19
位置信息和指南针功能	20
蓝牙功能		22
拍照和视频功能	22
麦克风和扬声器	24
小结	25
第二部分　定义iPhone应用
第3章　用户研究简介	28
有关用户研究的常见问题	28
影随用户并访谈	30
记录用户访谈	33
日记分析法	34
研究方法的选择	38
规划你的用户研究工作	39
招募用户		43
实施访谈		45
相关研究活动	47
小结	48
第4章　用户研究结果分析	49
共享资料		49
分析笔记		50
记录分析结果和创意	52
汇报成果		53
创建设计工具	56
编撰产品定义文档		62
小结	62
案例分析1：风力发电—Windspire	63
案例分析2：食蚁兽在移动—Aardvark Mobile	64
第5章　竞品评估	67
好处	67
应用应具备的内容	68
方法	68
选择方法	76
对产品定义的影响	77
小结	77
第三部分　开发应用概念
第6章　探索应用的概念	80
创建适于进行设计创作的环境	80
有效的头脑风暴	81
为你的概念勾勒草图	84
常见问题		93
小结	94
案例分析3：美食报道—Foodspotting	94
案例分析4：不是观光客—Not For Tourists	96
案例分析5：MUSE	98
第7章　制作应用概念的原型	100
为什么使用原型	100
常见问题	101
原型方法	104
小结	115
案例分析6：在Dan4公司制作原型	115
案例分析7：What's Shakin?117
第8章　对应用概念进行可用性测试	119
什么是可用性测试	119
为什么要进行可用性测试	120
背景信息的作用	121
可用性测试方法	121
可用性测试的时间表	123
制定测试计划	124
招募用户		127
起草测试指南	127
预测试	130
引导可用性测试	130
对可用性测试进行分析	132
报告可用性测试结果	133
可用性“游击”测试	133
beta测试		135
方法的选择	135
小结	136
案例分析8：REALTOR.com	136
第四部分　优化iPhone应用
第9章　用户界面设计	140
用户界面最佳实践	140
用户界面常见问题解答	150
后台的UI检查表	155
小结	156
案例分析9：Sonos	157
案例分析10：航班管理—FlightTrack	159
第10章　视觉设计	161
视觉设计的重要性	161
视觉设计应在何时开始	162
视觉结构	162
颜色	166
字体	169
图标和其他图片	172
小结	177
案例分析11：《今日美国》——USA TODAY	177
案例分析12：Voices	179
案例分析13：万能单位转换器—Convertbot	180
第11章　品牌和广告	183
什么是品牌	183
品牌的传达	185
移动广告的形式	189
小结	191
第12章　可达性和本地化	192
可达性	192
国际化和本地化	194
小结	197
展望未来	198
手持的形式会有所改变	198
移动支付将会普及	199
卫生保健的监控和报告将会有所提升	199
环境监测将会促进科学方面的发现	200
隐私问题将变得非常突出	200
小结	200
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iPhone应用用户体验设计实战与案例
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iPhone 3开发基础教程
第1章　欢迎来到iPhone的世界
1.1　关于本书
1.2　必要条件
1.3　必备知识
1.4　编写iPhone应用程序有何不同
1.4.1　只有一个正在运行的应用程序
1.4.2　只有一个窗口
1.4.3　受限访问
1.4.4　有限的响应时间
1.4.5　有限的屏幕大小
1.4.6　有限的系统资源
1.4.7　不支持垃圾收集
1.4.8　新功能
1.4.9　与众不同的方法
1.5　本书内容
1.6　本次更新的内容
1.7　准备开始吧
第2章　创建基本项目
2.1　在Xcode中设置项目
2.2　Interface Builder简介
2.2.1　nib文件的构成
2.2.2　在视图中添加标签
2.3　美化iPhone应用程序
2.4　小结
第3章　处理基本交互
3.1　MVC范型
3.2　创建项目
3.3　创建视图控制器
3.3.1　输出口
3.3.2　操作
3.3.3　将操作和输出口添加到视图控制器
3.3.4　将操作和输出口添加到实现文件
3.4　使用应用程序委托
3.5　编辑MainWindow.xib
3.6　编辑Button_FunViewController.xib
3.6.1　在Interface Builder中创建视图
3.6.2　连接所有元素
3.6.3　测试
3.7　小结
第4章　更丰富的用户界面
4.1　满是控件的屏幕
4.2　活动、静态和被动控件
4.3　创建应用程序
4.3.1　导入图像
4.3.2　实现图像视图和文本字段
4.3.3　添加图像视图
4.3.4　添加文本字段
4.3.5　设置第二个文本字段的属性
4.3.6　连接输出口
4.4　构建和运行
4.4.1　完成输入后关闭键盘
4.4.2　通过触摸背景关闭键盘
4.5　实现滑块和标签
4.5.1　确定输出口
4.5.2　确定操作
4.5.3　添加输出口和操作
4.5.4　添加滑块和标签
4.5.5　连接操作和输出口
4.6　实现开关、按钮和分段控件
4.6.1　确定输出口
4.6.2　确定操作
4.6.3　添加开关、按钮和分段控件
4.6.4　连接开关输出口和操作
4.6.5　添加按钮
4.7　实现操作表和警报
4.7.1　遵从操作表委托方法
4.7.2　显示操作表
4.7.3　操作表委托和创建警报
4.8　美化按钮
4.8.1　viewDidLoad方法
4.8.2　控件状态
4.8.3　可拉伸图像
4.9　成为出色的内存使用者
4.10　小结
第5章　自动旋转和自动调整大小
5.1　使用自动调整属性处理旋转
5.1.1　指定旋转支持
5.1.2　使用自动调整属性设计界面
5.1.3　自动调整属性
5.1.4　设置按钮的自动调整属性
5.2　在旋转时重构视图
5.2.1　声明和连接输出口
5.2.2　在旋转时移动按钮
5.3　切换视图
5.3.1　确定输出口
5.3.2　确定动作
5.3.3　声明动作和输出口
5.3.4　设计两个视图
5.3.5　实现交换和动作
5.4　小结
第6章　多视图应用程序
6.1　View Switcher应用程序
6.2　多视图应用程序的体系结构
6.3　构建View Switcher
6.3.1　创建视图控制器和nib文件
6.3.2　修改应用程序委托
6.3.3　SwitchViewController.h
6.3.4　修改MainWindow.xib
6.3.5　编写SwitchViewController.m
6.3.6　实现内容视图
6.4　制作转换动画
6.5　小结
第7章　标签栏与选取器
7.1　Pickers应用程序
7.2　委托和数据源
7.3　建立工具栏框架
7.3.1　创建文件
7.3.2　添加根视图控制器
7.4　实现日期选取器
7.5　实现单个组件选取器
7.5.1　声明输出口和操作
7.5.2　构建视图
7.5.3　将控制器实现为数据源和委托
7.6　实现多组件选取器
7.6.1　声明输出口和操作
7.6.2　构建视图
7.6.3　实现控制器
7.7　实现独立组件
7.8　使用自定义选取器创建简单游戏
7.8.1　编写控制器头文件
7.8.2　构建视图
7.8.3　添加图像资源
7.8.4　实现控制器
7.8.5　spin方法
7.8.6　viewDidLoad方法
7.8.7　最后的细节
7.8.8　链接Audio Toolbox框架
7.9　小结
第8章　表视图简介
8.1　表视图基础
8.2　实现一个简单的表
8.2.1　设计视图
8.2.2　编写控制器
8.3　添加一个图像
8.4　附加配置
8.4.1　设置缩进级别
8.4.2　处理行的选择
8.4.3　更改字体大小和行高
8.4.4　委托还能做什么
8.5　定制表视图单元
8.5.1　单元应用程序
8.5.2　向表视图单元添加子视图
8.5.3　使用UITableViewCell的自定义子类
8.6　分组分区和索引分区
8.6.1　构建视图
8.6.2　导入数据
8.6.3　实现控制器
8.6.4　添加索引
8.7　实现搜索栏
8.7.1　重新考虑设计
8.7.2　深层可变副本
8.7.3　更新控制器头文件
8.7.4　修改视图
8.7.5　修改控制器实现
8.8　小结
第9章　导航控制器和表视图
9.1　导航控制器
9.1.1　栈的性质
9.1.2　控制器栈
9.2　由6个部分组成的分层应用程序：Nav
9.3　构建Nav应用程序的骨架
9.3.1　创建第一级视图控制器
9.3.2　设置导航控制器
9.4　第一个子控制器：展示按钮视图
9.5　第二个子控制器：校验表
9.6　第三个子控制器：表行上的控件
9.7　第四个子控制器：可移动的行
9.7.1　编辑模式
9.7.2　创建一个新的二级控制器
9.8　第五个子控制器：可删除的行
9.9　第六个子控制器：可编辑的详细窗格
9.9.1　创建数据模型对象
9.9.2　创建控制器
9.9.3　创建详细视图控制器
9.10　其他内容
9.11　小结
第10章　应用程序设置和用户默认设置
10.1　设置束
10.2　AppSettings应用程序
10.3　创建项目
10.4　使用设置束
10.4.1　在项目中添加设置束
10.4.2　设置属性列表
10.4.3　添加文本字段设置
10.4.4　添加安全文本字段设置
10.4.5　添加多值字段
10.4.6　添加拨动开关设置
10.4.7　添加滑块设置
10.4.8　添加子设置视图
10.5　读取应用程序中的设置
10.6　更改应用程序中的默认设置
10.7　小结
第11章　基本数据持久性
11.1　应用程序的沙盒
11.1.1　获取Documents目录
11.1.2　获取tmp目录
11.2　文件保存策略
11.2.1　单个文件持久性
11.2.2　多个文件持久性
11.3　持久保存应用程序数据
11.4　持久性应用程序
11.4.1　创建持久性项目
11.4.2　设计持久性应用程序视图
11.4.3　编辑持久性类
11.4.4　对模型对象进行归档
11.4.5　实现NSCopying
11.5　归档应用程序
11.5.1　实现FourLines类
11.5.2　实现PersistenceView-Controller类
11.6　使用iPhone的嵌入式SQLite3
11.7　使用Core Data
11.7.1　实体和托管对象
11.7.2　键/值编码
11.7.3　在上下文中结合它们
11.7.4　创建新托管对象
11.7.5　检索托管对象
11.7.6　设计数据模型
11.7.7　创建持久视图和控制器
11.7.8　将持久视图控制器设置为应用程序的根控制器
11.8　小结
第12章　使用Quartz和OpenGL绘图
12.1　图形世界的两个视图
12.2　本章的绘图应用程序
12.3　Quart绘图方法
12.3.1　Quartz 2D的图形上下文
12.3.2　坐标系
12.3.3　指定颜色
12.3.4　在上下文中绘制图像
12.3.5　绘制形状：多边形、直线和曲线
12.3.6　Quartz 2D工具示例：模式、梯度、虚线模式
12.4　构建QuartzFun应用程序
12.4.1　创建随机颜色
12.4.2　定义应用程序常量
12.4.3　实现QuartzFunView框架
12.4.4　向视图控制器中添加输出口和操作
12.4.5　更新QuartzFunViewContro-ller.xib
12.4.6　绘制直线
12.4.7　绘制矩形和椭圆形
12.4.8　绘制图像
12.4.9　优化QuartzFun应用程序
12.5　一些OpenGL ES基础知识
12.5.1　构建GLFun应用程序
12.5.2　设计Nib、添加框架、运行应用程序
12.6　小结
第13章　轻击、触摸和手势
13.1　多触摸术语
13.2　响应者链
13.3　多触摸体系结构
13.4　触摸浏览器应用程序
13.5　Swipes应用程序
13.6　实现多个轻扫动作
13.7　检测多次轻击
13.8　检测捏合操作
13.9　自己定义手势
13.10　小结
第14章　使用Core Location定位功能
14.1　位置管理器
14.1.1　设置所需的精度
14.1.2　设置距离筛选器
14.1.3　启动位置管理器
14.1.4　更明智地使用位置管理器
14.2　位置管理器委托
14.2.1　获取位置更新
14.2.2　使用CLLocation获取纬度和经度
14.2.3　错误通知
14.3　尝试使用Core Location
14.3.1　更新位置管理器
14.3.2　确定移动距离
14.4　小结
第15章　加速计
15.1　加速计物理学
15.2　访问加速计
15.2.1　UIAcceleration
15.2.2　实现accelerometer: didAccelerate:方法
15.3　摇动与击碎
15.3.1　用于击碎的代码
15.3.2　加载模拟文件
15.3.3　完好如初——复原触摸
15.4　滚弹珠程序
15.4.1　实现Ball View控制器
15.4.2　编写Ball View
15.4.3　计算小球运动
15.5　小结
第16章　iPhone照相机和照片库
16.1　使用图像选取器和UIImagePicker-Controller
16.2　实现图像选取器控制器委托
16.3　实际测试照相机和库
16.3.1　设计界面
16.3.2　实现照相机视图控制器
16.4　小结
第17章　应用程序本地化
17.1　本地化体系结构
17.2　使用字符串文件
17.3　现实中的iPhone：本地化应用程序
17.3.1　查看当前区域设置
17.3.2　测试LocalizeMe
17.3.3　本地化nib文件
17.3.4　查看本地化的项目结构
17.3.5　本地化图像
17.3.6　本地化应用程序图标
17.3.7　生成和本地化字符串文件
17.4　小结
第18章　未来之路
18.1　别陷进单一的思路里
18.1.1　苹果公司的文档
18.1.2　邮件列表
18.1.3　论坛
18.1.4　网站
18.1.5　博客
18.1.6　Dave和Jeff的博客及Twitter
18.1.7　参考图书
18.1.8　如果仍未解决问题
18.2　再会
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iPhone 3开发基础教程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iPhone用户界面设计典型实例
第1章　App Cubby　3
1.1　从爱好者到开发者　3
1.2　学习Apple　4
1.3　点还是不点？　11
1.3.1　寻找用户　14
1.3.2　正确的测试方式　14
1.3.3　用户测试案例　15
1.3.4　以可用性测试为鉴　17
1.4　精致与完备　18
1.5　总结　19
第2章　新一代Google阅读器　23
2.1　开发新闻阅读器　23
2.2　分析现行新闻阅读器的缺陷　24
2.2.1　检验Google阅读器　24
2.2.2　缺乏总览图和导航繁琐　28
2.2.3　缺乏数据控制　30
2.3　改进新闻阅读器体验　31
2.3.1　应用定义声明　31
2.3.2　开发原生应用程序　32
2.3.3　高效导航　32
2.3.4　改进总览图　34
2.3.5　学习用户阅读模式　35
2.3.6　显示信息　35
2.4　后续工作　37
2.5　总结　37
第3章　Brightkite iPhone客户端　41
3.1　基于位置的社交网络Brightkite　41
3.2　Double Encore简介　42
3.3　从网页移植到移动设备　42
3.3.1　原生应用的崛起和网页应用的终结　44
3.3.2　一个突破性的使用模式转变　46
3.4　针对新用户的设计　48
3.5　虚拟无限级向下钻取　51
3.6　总结　53
第4章　Outpost　57
4.1　Outpost诞生　57
4.2　Outpost线框　58
4.3　Outpost设计　61
4.3.1　应用中的两个视图　61
4.3.2　第一次尝试　63
4.3.3　第二次尝试　63
4.4　风格　65
4.5　小团队合作　66
4.6　Html设计　67
4.7　All that Glitters　67
4.8　总结　69
第5章　TanZen和Zentomino　73
5.1　寻找点子　73
5.2　设计文档　75
5.3　深入编码　76
5.3.1　创建七巧板块UI　76
5.3.2　散落的七巧板　77
5.3.3　模拟器的陷井　78
5.3.4　理解玩家的心情　79
5.3.5　文字?不要烦人的文字　80
5.3.6　需要多少按钮　80
5.4　不仅仅是游戏　81
5.4.1　突破　82
5.4.2　扮演艺术家　82
5.4.3　不可见因素　84
5.4.4　冲刺　85
5.4.5　更好的旋转方式　85
5.5　实际设备上的最终测试　87
5.5.1　重回画板　88
5.5.2　危机时刻　90
5.6　App Store来临　90
5.6.1　上架第一天　92
5.6.2　回应旋转问题　92
5.6.3　接受还是婉拒　94
5.6.4　生存于App Store　95
5.7　开发第二款游戏的基础　96
5.7.1　重新设计用户界面　97
5.7.2　新规则，新界面　98
5.7.3　小屏幕上的设计　98
5.7.4　颜色　99
5.7.5　画龙点睛　100
5.8　总结　100
第6章　Flash of Genius: SAT Vocab　103
6.1　竞争对手　104
6.1.1　认知模型不一致　105
6.1.2　不恰当的方向模式　105
6.1.3　小按钮　106
6.2　启动　107
6.3　按钮设计　110
6.4　测试应用　111
6.5　发布应用　113
6.6　总结　113
第7章　Postage　117
7.1　保持应用的专注性　118
7.1.1　选择字体样式　119
7.1.2　选择字体颜色　120
7.1.3　应用图像效果　120
7.1.4　首选项设置和应用配置　121
7.1.5　分离子任务　123
7.2　环境分析　127
7.2.1　考虑Postage中的环境　128
7.2.2　面对环境的潜在问题　129
7.2.3　在Postage中使用熟悉的控件　130
7.3　创建应用流程　131
7.3.1　给出流程的提示　132
7.3.2　用展示代替叙述　134
7.3.3　避免图标重载　135
7.3.4　调整响应和反馈　135
7.4　探索Postage开发技术　137
7.4.1　创建原型和模型　137
7.4.2　编写规格说明　139
7.4.3　美工方面的考虑　141
7.4.4　调整触摸设备　142
7.5　总结　143
第8章　Falling Balls和Gravity Pods　147
8.1　创建Falling Balls　148
8.1.1　构建游戏　149
8.1.2　添加游戏控件　152
8.2　创建Gravity Pods　155
8.2.1　构建HUD　157
8.3　总结　162
第9章　FontShuffle　165
9.1　FontShuffle介绍　165
9.2　进入字型的世界　166
9.2.1　理解字体　166
9.2.2　字符和字形　167
9.2.3　字符结构　168
9.3　选择正确的屏幕字体　171
9.4　识别字型　172
9.4.1　Serif vs. Sans Serif　173
9.4.2　字体风格的剧增　173
9.4.3　字型分类　174
9.5　探索FontBook和FontShuffle　175
9.5.1　FontShop的字型类别　177
9.5.2　字型的纲和目　178
9.5.3　逐步深入FontShuffle　179
9.6　总结　185
第10章　Snow Reports for the iPhone　189
10.1　那么你喜欢设计吗？　190
10.2　为什么进行iPhone的设计？　190
10.3　编程不是程序员的事情吗？　191
10.4　为什么开发Snow Reports?　191
10.5　为什么学习iPhone编程？　193
10.6　我的设计过程　193
10.6.1　定义项目　194
10.6.2　获得第三方资源　195
10.6.3　创建流程图　196
10.6.4　创建三维模型　198
10.6.5　表皮设计　199
10.6.6　开发和编程　200
10.6.7　测试和部署　201
10.7　UI细节　202
10.7.1　形状　202
10.7.2　颜色　202
10.7.3　时机标志　202
10.7.4　按钮　203
10.7.5　字体　204
10.7.6　装入屏幕vs.启动屏幕　205
10.7.7　报告日期　206
10.8　来自Web设计背景　206
10.8.1　设计图标　207
10.9　总结　208
后记：活力音乐和不可见的界面　210
我们的做法和原因　210
使用传感器作为活力音乐的界面　211
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iPhone用户界面设计典型实例
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Cocoa设计模式
译者序
序
前言
作者简介
第一部分　一种可控制一切的模式
第1章　模型-视图-控制器	2
1.1　Cocoa中的MVC3
1.1.1　模型子系统的核心数据支持3
1.1.2　视图子系统的应用程序工具箱支持4
1.1.3　控制器子系统的应用程序工具箱支持6
1.1.4　Cocoa的文本架构7
1.1.5　Cocoa的文档架构7
1.1.6　Cocoa编写脚本的能力10
1.1.7　Cocoa的偏好窗格架构11
1.1.8　Quartz Composer的架构11
1.1.9　QTKit的架构12
1.2　小结12
第2章　分析和应用MVC13
2.1　非MVC设计13
2.2　MVC设计17
2.3　小结21
第二部分　基 础 模 式
第3章　两阶段创建24
3.1　动机24
3.2　解决方案25
3.2.1　分区26
3.2.2　初始化已分配的内存26
3.2.3　实现指定的初始化方法27
3.2.4　在初始化方法中使用分区29
3.2.5　创建临时实例30
3.3　Cocoa中的示例31
3.4　后果35
第4章　模板方法36
4.1　动机36
4.2　解决方案36
4.2.1　默认模板方法38
4.2.2　利用模板方法进行设计38
4.3　Cocoa中的示例38
4.3.1　使用-drawRect:模板方法39
4.3.2　其他Cocoa模板方法39
4.4　后果42
第5章　动态创建43
5.1　动机43
5.2　解决方案43
5.2.1　使用动态创建43
5.2.2　用动态创建实现插件架构49
5.3　Cocoa中的示例50
5.4　后果50
第6章　类别52
6.1　动机52
6.2　解决方案52
6.2.1　非正式协议55
6.2.2　匿名类别56
6.2.3　代码组织57
6.2.4　何时使用类别与子类化57
6.3　Cocoa中的示例57
6.3.1　把类别用于组织58
6.3.2　把类别用于非正式协议58
6.3.3　把类别用于框架划分60
6.4　后果61
6.4.1　方法冲突61
6.4.2　替换方法61
6.4.3　软件维护62
第7章　匿名类型和异类容器63
7.1　动机63
7.2　解决方案63
7.2.1　匿名类型64
7.2.2　赋值66
7.2.3　异类容器67
7.3　Cocoa中的示例68
7.4　后果68
第8章　枚举器70
8.1　动机70
8.2　解决方案70
8.2.1　使用枚举器对象70
8.2.2　使用快速枚举71
8.2.3　创建自定义的枚举器72
8.2.4　实现快速枚举76
8.2.5　内部枚举79
8.3　Cocoa中的示例80
8.4　后果80
第9章　执行选择器和延迟执行82
9.1　动机82
9.2　解决方案82
9.2.1　延迟执行84
9.2.2　Objective-C消息发送的实现85
9.3　Cocoa中的示例86
9.4　后果87
第10章　访问器89
10.1　动机90
10.2　解决方案90
10.2.1　引用计数的内存管理91
10.2.2　管理保留计数的访问器92
10.2.3　将内存管理限制在访问器中95
10.2.4　可变性95
10.2.5　NSKeyValueCoding97
10.2.6　Interface Builder插座变量98
10.2.7　Objective-C 2.0的属性98
10.3　Cocoa中的示例98
10.4　后果101
第11章　归档和解档102
11.1　动机102
11.2　解决方案102
11.3　Cocoa中的示例105
11.3.1　实现NSCoding协议106
11.3.2　编码和解码非对象类型108
11.3.3　对象替换110
11.3.4　nib意识110
11.4　后果111
第12章　复制112
12.1　动机112
12.2　解决方案114
12.3　Cocoa中的示例116
12.3.1　实现NSCopying116
12.3.2　实现深复制117
12.3.3　实现NSMutableCopying118
12.3.4　必需的复制119
12.3.5　复制Objective-C 2.0的属性119
12.3.6　避免使用NSCopyObject()121
12.4　后果121
第三部分　主要通过解耦来变得更强大的模式
第13章　单例124
13.1　动机124
13.2　解决方案124
13.2.1　封装共享资源124
13.2.2　创建和访问共享实例126
13.2.3　控制实例化127
13.2.4　取消分配129
13.2.5　确定是否创建了单例130
13.2.6　线程安全130
13.2.7　与Interface Builder协作130
13.3　Cocoa中的示例131
13.4　后果132
第14章　通知133
14.1　动机133
14.2　解决方案134
14.2.1　MYNotification类134
14.2.2　MYNotificationCenter类135
14.2.3　联合存储140
14.3　Cocoa中的示例140
14.3.1　全局通知名称140
14.3.2　 “Will”和“Did”通知141
14.3.3　同步通知与异步通知141
14.3.4　分布式通知143
14.4　后果144
第15章　委托146
15.1　动机146
15.2　解决方案149
15.2.1　实现委托支持150
15.2.2　实现委托155
15.2.3　数据源156
15.3　Cocoa中的示例157
15.4　后果157
第16章　层次结构159
16.1　动机159
16.2　解决方案159
16.2.1　实现层次结构160
16.2.2　Cocoa视图层次结构162
16.2.3　视图层次结构中的坐标系统163
16.2.4　浏览视图层次结构164
16.3　Cocoa中的示例171
16.4　后果171
第17章　插座变量、目标和动作172
17.1　动机173
17.2　解决方案173
17.2.1　插座变量176
17.2.2　目标176
17.2.3　动作176
17.2.4　动作和响应者链178
17.3　Cocoa中的示例179
17.4　后果181
第18章　响应者链183
18.1　动机183
18.2　解决方案183
18.2.1　术语183
18.2.2　响应者链184
18.2.3　扩展的响应者链185
18.2.4　遍历扩展的响应者链187
18.2.5　插入对象到响应者链中188
18.2.6　利用响应者链189
18.3　Cocoa中的示例191
18.4　后果191
第19章　联合存储192
19.1　动机192
19.2　解决方案192
19.3　Cocoa中的示例195
19.3.1　引用计数的内存管理195
19.3.2　键值编码198
19.4　后果198
第20章　调用200
20.1　动机200
20.2　解决方案200
20.2.1　方法签名200
20.2.2　使用NSInvocation对象201
20.2.3　使用计时器205
20.2.4　延迟的消息发送209
20.3　Cocoa中的示例210
20.4　后果211
第21章　原型212
21.1　动机212
21.2　解决方案212
21.3　Cocoa中的示例214
21.3.1　使用MYLabeledBarCell实例作为原型214
21.3.2　使用MYColorLabeledBarCell实例作为原型216
21.4　后果218
第22章　享元219
22.1　动机219
22.2　解决方案219
22.3　Cocoa中的示例219
22.3.1　封装非对象值220
22.3.2　减少存储需求220
22.3.3　替代其他对象221
22.4　后果222
第23章　装饰器223
23.1　动机224
23.2　解决方案224
23.3　Cocoa的示例225
23.4　后果226
第四部分　主要用于隐藏复杂性的模式
第24章　包228
24.1　动机228
24.2　解决方案228
24.3　Cocoa中的示例230
24.4　后果232
第25章　类簇233
25.1　动机233
25.2　解决方案233
25.3　Cocoa中的示例237
25.3.1　子类化类簇的公共接口类238
25.3.2　NSString的MYShortString子类239
25.3.3　从MYShortString获得的经验教训248
25.4　后果248
第26章　外观250
26.1　动机250
26.2　解决方案251
26.3　Cocoa中的示例254
26.3.1　文本外观254
26.3.2　图像外观255
26.3.3　持久存储外观255
26.3.4　用户交互外观256
26.4　后果257
第27章　代理和转发258
27.1　动机258
27.2　解决方案258
27.2.1　实现转发258
27.2.2　代理259
27.2.3　高阶消息265
27.3　Cocoa中的示例270
27.4　后果270
第28章　管理者271
28.1　动机271
28.2　解决方案271
28.2.1　扩展单例模式272
28.2.2　添加其他管理者特性275
28.3　Cocoa中的示例277
28.4　后果277
第29章　控制器279
29.1　动机279
29.2　解决方案279
29.2.1　MYShapeDraw模型子系统280
29.2.2　MYShapeDraw视图子系统281
29.2.3　MYShapeEditor控制器子系统283
29.2.4　扩展MYShapeDraw视图子系统以进行编辑292
29.2.5　重新设计和泛化解决方案294
29.3　Cocoa中的示例299
29.4　后果300
第五部分　模式应用的实用工具
第30章　核心数据模型304
30.1　模型子系统的角色304
30.2　核心数据的术语305
30.2.1　实体305
30.2.2　特性305
30.2.3　关系306
30.2.4　属性306
30.3　核心数据内模式之间的协作307
30.3.1　NSManagedObject和NSEntityDescription307
30.3.2　设计核心数据模型312
30.3.3　NSManagedObjectContext312
30.3.4　NSPersistentStoreCoordinator和NSPersistentStore313
30.4　核心数据的局限性和好处314
第31章　应用程序工具箱视图315
31.1　视图子系统的角色315
31.2　应用程序工具箱内的模式之间的协作316
31.2.1　NSApplication、事件和运行循环316
31.2.2　响应者317
31.2.3　响应者链317
31.2.4　NSWindow概述318
31.2.5　NSView概述319
31.2.6　目标和动作321
31.2.7　归档的对象和nib322
31.2.8　撤销和重做324
31.2.9　管理者324
31.3　应用程序工具箱的局限性和好处325
第32章　绑定和控制器326
32.1　绑定和控制器的角色326
32.1.1　绑定避免耦合328
32.1.2　结合使用控制器与绑定的重要性328
32.2　绑定和控制器内的模式之间的协作329
32.2.1　在-bind:toObject:withKeyPath:options:中发生了什么事情330
32.2.2　键值观察如何检查对所观察属性的更改使得观察对象可以得到通知330
32.2.3　在观察的属性的值改变时发送什么消息来通知注册的观察者331
32.3　绑定和控制器的局限性和好处333
附录　资源334
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Cocoa设计模式
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>苹果应用开发与营销
目 录
第1章 市场很拥挤,要有大局观    1
1.1 为什么要为iOS开发者写这本讲商业的书    1
1.1.1 面对移动营销的新世界    2
1.1.2 请放心,本书并非一本常规的商业书籍    3
1.2 为成功做好规划    3
1.3 如何使用本书    5
1.4 创建第一个iOS应用    7
1.5 已经进入AppStore了? 何时促销都不晚    8
1.6 为客户开发iOS应用    8
1.7 准备好深入学习了吗    9
第2章 打磨创意,提高应用竞争力    10
2.1 满足需求    10
2.1.1 发现未被开拓的市场    10
2.1.2 改善移动体验    13
2.1.3 与同类应用竞争    15
2.2 何时应该避免过饱和的产品分类    15
2.3 对竞争情况进行评估    17
2.3.1 使用其他目录进行竞争力研究    19
2.3.2 分析应用排名的统计信息    19
2.3.3 在竞争对手的客户评价中找到灵感    20
2.3.4 亲自测试竞争对手的产品    22
2.4 独树一帜    22
2.5 面向多种iOS设备    23
2.6 从商业角度来考虑通用应用    24
2.7 起名的学问    25
2.8 注册网站域名    28
2.9 为iOS应用制作一个独特的标识    29
2.10 继续前进    29
第3章 保护知识产权    30
3.1 什么是知识产权    30
3.2 确定知识产权策略    31
3.2.1 iOS应用的与众不同之处    31
3.2.2 拟定一个专门针对iOS应用的行动计划    32
3.2.3 对应用进行版权保护    33
3.2.4 为应用的图标和徽标申请商标    34
3.2.5 商业机密    36
3.2.6 专利    38
3.3 在合同和员工协议中解决知识产权归属问题    40
3.3.1 雇用承包商    41
3.3.2 雇用员工    41
3.4 知识产权的引进许可    42
3.4.1 书面记录你引进的许可    42
3.4.2 知道你都得到了哪些权利    42
3.4.3 避免病毒性许可    43
3.4.4 不要使用苹果的商标    43
3.5 创建自定义最终用户许可协议    43
3.5.1 EULA的作用    43
3.5.2 苹果的EULA     45
3.5.3 使用自己的EULA的原因    45
3.6 如何以及何时诉诸法律    45
3.6.1 解决争议的第一步    46
3.6.2 起诉前    46
3.6.3 诉讼    47
3.7 小结    47
第4章 应用本身就是最好的营销工具    48
4.1 成功的第一步:第一印象决定一切    48
4.1.1 第一个视觉信号    48
4.1.2 第二个视觉信号    49
4.1.3 良好的第一印象的更多好处    49
4.2 按苹果沙盒的规则出牌    49
4.3 面向多种iOS设备进行设计    51
4.3.1 准备用户界面的美工素材    51
4.3.2 iPad的方向    52
4.3.3 Retina显示屏的双倍效果    52
4.4 创建有效的应用图标和徽标    53
4.4.1 应用图标规则及工具    53
4.4.2 设计自定义的应用图标    55
4.4.3 不要忘了徽标    58
4.4.4 保持一致的品牌标识    60
4.5 界面设计:从用户而不是开发人员的角度思考    61
4.5.1 原型的巨大价值    62
4.5.2 挑战常规自定义界面设计    67
4.5.3 熟悉的UIKit让人放心    69
4.5.4 可访问性的设计    72
4.6 应对艺术性挑战的技巧    73
4.6.1 寻找图形和图标    73
4.6.2 选择字体    74
4.6.3 增加音频和音乐    74
4.6.4 使用专业的设计服务    75
4.7 继续提高你的创造力    76
第5章 植入社会营销功能:在应用中促销    77
5.1 鼓励用户在应用中进行评价    77
5.1.1 让用户在使用过程中给出反馈    77
5.1.2 何时要求用户评价    79
5.2 通过应用内电子邮件和社交网络功能告诉朋友    81
5.2.1 使用第三方Web服务    81
5.2.2 通过应用内的共享功能来连接用户    81
5.2.3 添加电子邮件支持    87
5.2.4 集成Twitter和Facebook     91
5.3 数量的优势:借助应用内交叉促销产生增效    96
5.3.1 建立商店    98
5.3.2 联合同行,共创繁荣    99
5.4 让用户通过第三方社交游戏平台进行交流    102
5.4.1 热情是会“传染”的    102
5.4.2 选择社交游戏平台    103
5.5 小结    104
第6章 生财之道:免费的回报    105
6.1 免费应用的生财之道    105
6.1.1 免费策略    105
6.1.2 在购买前先试用    106
6.2 二选一:精简版还是应用内购买    106
6.3 精简版方法:虽然内容不多,却有绝妙的体验    108
6.3.1 谨慎行事:免费精简版的约束    108
6.3.2 免费精简版真的能增加付费版的销量吗    109
6.3.3 如果牛奶免费了,那么人们不会再买牛    110
6.3.4 何时发布精简版    113
6.3.5 完善应用内宣传标语    113
6.3.6 让精简版足够可靠    119
6.3.7 把数据从精简版转移到付费版    119
6.4 保证市场份额:现在免费,然后追加销售    123
6.5 通过联盟计划挖掘额外收入    125
6.5.1 联盟计划的运作方式    125
6.5.2 加入iTunes联盟计划    127
6.6 更多免费策略    129
第7章 免费也赚钱:iAd和其他应用内广告    130
7.1 何时使用应用内广告    130
7.1.1 了解用户    130
7.1.2 把应用内广告作为一种销售工具    132
7.2 选择移动广告网络    133
7.2.1 研究可选方案    133
7.2.2 哪个广告网络最适合你    134
7.3 建立一个靠广告支持的应用    135
7.3.1 广告要兼顾UI设计的美学    136
7.3.2 发现最好的广告网络组合    138
7.3.3 利用自家广告的力量    140
7.4 在iOS应用中实现苹果的iAd     141
7.4.1 加入iAd网络    141
7.4.2 设计应用来显示iAd广告横幅    142
7.4.3 支持广告的应用编程    144
7.4.4 在应用中启用实际的广告    169
7.5 知识就是力量:通过分析来跟踪应用的使用情况    169
7.6 考虑赞助式广告和植入式广告    170
7.7 小结    172
第8章 免费增值模式与应用内购买的结合之道    173
8.1 人不如故:老用户是最好的客户    173
8.1.1 支持长尾效应:从持续开发中盈利    173
8.1.2 挑战用户的传统观念    174
8.2 何时以及如何使用应用内购买    178
8.2.1 理解基本原则    178
8.2.2 大道至简    180
8.2.3 展示是成功的关键    184
8.2.4 找准卖点    185
8.3 提供和管理应用内购买    187
8.3.1 解锁内置的内容    187
8.3.2 从服务器下载新内容    189
8.3.3 寻求帮助    191
8.4 在iTunesConnect中配置应用内购买    191
8.4.1 创建一个iTunesTestUser账户    191
8.4.2 创建应用内购买物品    192
8.4.3 管理应用内购买物品    196
8.5 准备测试设备    197
8.6 了解StoreKit框架    198
8.6.1 配置应用内购买的项目    198
8.6.2 做一些基本的设置工作    198
8.7 将应用内购买功能上线并运行    201
8.7.1 第1步:客户是否允许应用内购买    201
8.7.2 第2步:获取可用的应用内购买物品    201
8.7.3 第3步:提交购买请求    204
8.7.4 第4步:接收支付状态    206
8.7.5 第5步:提供对已购买内容的访问    208
8.8 在多个设备上同步所购买的内容    209
8.9 挖掘更多创收的机会    210
第9章 测试和可用性:给客户留下最好的印象    212
9.1 避免大部分一星级评价    212
9.1.1 避免常见问题    212
9.1.2 征询直接反馈    214
9.2 应用内帮助,减少用户的麻烦    215
9.2.1 通过屏幕提示为知识播种    216
9.2.2 指导视频:双刃剑    217
9.2.3 多用图像,少用文字    218
9.2.4 提供带文本帮助的移动手册    220
9.3 配置:准备开发设备    222
9.3.1 第1步:在XcodeOrganizer中建立测试设备    222
9.3.2 第2步:获取开发证书    223
9.3.3 第3步:注册设备ID     225
9.3.4 第4步:创建一个应用ID     226
9.3.5 第5步:生成和安装配置文件    228
9.3.6 第6步:在测试设备上运行Xcode项目    230
9.4 Beta测试:临时发布的步骤详解    231
9.4.1 第1步:获取发布证书    231
9.4.2 第2步:注册Beta测试人员的设备ID     234
9.4.3 第3步:生成和安装临时发布配置文件    236
9.4.4 第4步:为临时发布配置你的应用    237
9.4.5 第5步:创建Entitlements文件    238
9.4.6 第6步:编译iOS应用    238
9.4.7 第7步:把应用发布给beta测试人员    239
9.5 以无线方式发布给beta测试人员    240
9.6 测试是有力的保障    240
第10章 拉开舞会的帷幕:在发布前造势    241
10.1 最后的倒计时:准备行动    241
10.1.1 花时间寻找受众    241
10.1.2 精心准备电梯推介    242
10.1.3 收集其他预发布阶段的市场营销资料    243
10.2 iOS应用需要精心设计的网站    246
10.2.1 网络托管    247
10.2.2 格式的选择:博客与自定义站点    247
10.2.3 域名优势    247
10.2.4 SEO策略    249
10.2.5 跟踪网站流量    252
10.2.6 剖析iOS应用网站    252
10.2.7 先收集信息,再销售产品    267
10.3 为什么网站与MobileSafari的兼容性如此重要    268
10.3.1 “我准备好为你拍摄特写了,Viewport 先生”    268
10.3.2 使用浏览器检测来呈现有针对性的内容    270
10.3.3 用与iOS兼容的内容动态替换Flash     272
10.3.4 用书签装点主屏幕    274
10.4 宣传造势:博客、Twitter和社交网络的力量    274
10.4.1 发展壮大在线社区    275
10.4.2 博客推广    275
10.4.3 Twitter    276
10.4.4 Facebook     283
10.4.5 其他社交网络和书签网站    287
10.4.6 在论坛、讨论组和博客中发表评论    287
10.5 不要过度宣传:保持专业声誉    288
10.6 每个人都喜欢成功者:收集预发布媒体和推荐信息    289
10.6.1 准备待办事项清单    289
10.6.2 建立关系    290
10.6.3 提供独家新闻和应用宣传专用版,保证媒体进行报道    291
10.7 小结    291
第11章 芝麻开门:AppStore提交过程    292
11.1 定价策略    292
11.1.1 分析类似的应用    292
11.1.2 留下回旋余地    293
11.1.3 维持长期业务    294
11.1.4 认知价值和消费者阻力    295
11.2 使应用更易被发现:关键词和名称的艺术    297
11.2.1 指定关键词    297
11.2.2 命名游戏    299
11.3 完善应用描述的宣传标语    300
11.3.1 什么是应用描述    300
11.3.2 获奖和推荐    300
11.3.3 应用的功能和益处    301
11.3.4 综合描述    301
11.4 一图胜千言:屏幕截图的重要性    302
11.4.1 选择主要的屏幕截图    302
11.4.2 截图并不仅限于屏幕    305
11.5 为AppStore准备应用的二进制文件    306
11.5.1 第1步:确认发布证书已安装    307
11.5.2 第2步:生成和安装AppStore发布配置文件    307
11.5.3 第3步:为AppStore发布配置Xcode项目    308
11.5.4 第4步:编译iOS应用    309
11.6 确保苹果公司已处理了合同和付款设置    310
11.7 准备好了吗? 在iTunesConnect中提交你的应用    310
11.7.1 第1步:创建一个新的应用条目    311
11.7.2 第2步:设置上架日期和售价    313
11.7.3 第3步:提交应用的元数据    314
11.7.4 第4步:为应用指定等级    317
11.7.5 第5步:上传应用图标和屏幕截图    319
11.7.6 第6步:支持多语言    322
11.7.7 第7步:上传应用二进制文件供AppStore评审    322
11.8 再次尝试:应对AppStore的拒绝    325
11.9 获得批准! 前方就是乐土    326
11.10 分析AppStore的销售统计数据    327
11.11 开足马力,加速前进    328
第12章 提高应用的知名度    329
12.1 投入开发应用时付出的同等精力来宣传应用    329
12.1.1 利用宣传的新星爆发力发布应用    329
12.1.2 获得专家的帮助    330
12.2 精心撰写有效新闻稿的艺术    331
12.2.1 新闻稿的基本要素    331
12.2.2 翻译新闻稿    335
12.2.3 全天候的虚拟新闻发布室    335
12.2.4 与媒体联络    336
12.3 发放促销代码:向有影响力的博客和评论网站征求应用评论    338
12.3.1 提供评论材料    338
12.3.2 获取促销代码    340
12.3.3 宣传需要规划和耐心    341
12.4 开展促销和赠送活动,提高应用的曝光度    342
12.5 选准时机开展促销活动,重新推动应用下载    346
12.6 广告能够提高应用的销量吗    346
12.6.1 面向移动受众的广告    347
12.6.2 充分利用iAdforDevelopers    348
12.6.3 利用每安装付费来激励应用的交叉销售    349
12.7 与客户保持联系    350
12.7.1 经常进行应用更新    350
12.7.2 提供高质量的支持服务    350
12.8 维持应用在AppStore的发展趋势的更多技巧    352
12.8.1 充分利用有声望的奖项和推荐    352
12.8.2 分享知识    352
12.8.3 接受采访和参加播客节目    353
12.9 展望未来    353
附录A 应用研究和营销的在线资源    355
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>苹果应用开发与营销
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Sketch+Xcode双剑合璧
Chapter 1
华丽转身，从Web设计师到APP设计师
1.1 把网页设计稿缩小就是APP设计了吗？ / 3
1.2 手机型号、尺寸及分辨率 / 3
1.2.1 了解主流手机分辨率 / 3
1.2.2 用哪种分辨率作为设计稿的标准尺寸？ / 4
1.2.3 手机分辨率与输出素材对应速查表 / 6
1.3 移动设备上的字体与字号 / 6
1.3.1 移动设备使用的字体 / 7
1.3.2 dp、px、sp傻傻分不清楚 / 7
1.4 *小可点击区域 / 8
1.5 Android与iOS界面设计的异同 / 9
========================================================
Chapter 2
拥抱变化——Sketch初体验
2.1 下载并安装Sketch / 13
2.2 熟悉Sketch界面 / 14
2.2.1 欢迎界面 / 14
2.2.2 Sketch主界面 / 15
2.3 自定义工具栏 / 16
2.4 Sketch工具一览 / 17
========================================================
Chapter 3
快速上手——玩转Sketch
3.1 Sketch中的Artboard及图层 / 28
3.1.1 在工作区建立Artboard画板 / 28
3.1.2 Sketch中的图层结构 / 29
3.2 玩转Sketch图形工具 / 32
3.2.1 线条工具（Line） / 32
3.2.2 箭头工具（Arrow） / 33
3.2.3 矩形（Rectangle）与圆角矩形工具（Rounded） / 33
3.2.4 多边形工具 / 34
3.3 钢笔、铅笔类工具 / 35
3.3.1 使用钢笔工具绘制线段 / 35
3.3.2 使用钢笔工具画弧线 / 35
3.3.3 锚点的添加、删除及移动 / 36
3.3.4 像素对齐 / 37
3.3.5 铅笔工具 / 37
3.3.6 剪刀工具 / 37
3.3.7 描边选项 / 38
3.4 画龙点睛——不可或缺的文本工具 / 39
3.4.1 在Sketch中添加文本 / 39
3.4.2 改变文字属性 / 39
3.4.3 调整文本字体、字号及颜色 / 39
3.4.4 文本修饰 / 39
3.4.5 在文本上使用颜色渐变 / 39
3.4.6 文本框宽度 / 40
3.4.7 行间距、字间距与段间距 / 40
3.4.8 定义共享文本样式 / 40
3.4.9 将文字附加到路径 / 40
3.4.10 将文本转化为轮廓 / 41
3.5 少即是多——灵巧的位图处理工具 / 41
3.5.1 在Sketch中插入位图 / 41
3.5.2 位图在图层中的展示 / 41
3.5.3 使用矩形选区工具编辑位图 / 41
3.5.4 魔术棒工具（Magic Wand） / 42
3.5.5 反向选择（Invert Selection） / 42
3.5.6 使用颜色填充选区（Fill Selection） / 42
3.5.7 矢量填充（Vectorize Fill） / 42
3.5.8 裁切工具 （Crop） / 42
3.5.9 调整图像颜色 / 43
3.5.10 将图层转化为位图 / 43
3.5.11 替换图片 / 43
3.5.12 将图片还原为原始大小 / 43
3.5.13 缩小图片体积 / 43
3.5.14 九宫格图片 / 43
3.6 导入和导出多种格式的图形文件 / 45
3.6.1 导入文件到Sketch / 45
3.6.2 从Sketch中导出文件 / 46
3.7 事半功倍的秘诀——Sketch中的模板 / 48
3.7.1 Sketch3中自带的模板 / 49
3.7.2 建立自定义模板 / 52
3.8 不能说的秘密——Sketch强大的第三方插件 / 53
3.8.1 Sketch插件的安装方法 / 53
3.8.2 Sketch常用插件推荐 / 55
3.9 不加班，一稿过的绝密武器 / 60
3.9.1 在移动设备上预览并展示设计稿 / 60
3.9.2 完全还原手机系统真实字体——PDF方式预览设计稿 / 63
3.9.3 使用Promotee软件将设计稿通过仿真效果呈现 / 64
3.9.4 使用Mockup模拟真实使用场景 / 65
3.10 让Sketch更顺手——偏好设置及性能选项 / 66
3.10.1 General选项卡 / 66
3.10.2 Canvas选项卡 / 67
3.10.3 Layers选项卡 / 68
3.10.4 避免崩溃，应该知道的影响Sketch性能的因素 / 69
3.11 熟悉Sketch快捷键，进一步提升工作效率 / 70
3.11.1 Sketch快捷键一览 / 71
3.11.2 解决快捷键冲突 / 77
3.11.3 自定义Sketch快捷键 / 77
3.11.4 通过修改Sketch插件代码来修改插件快捷键 / 78
3.12 回到过去——Sketch中的时光机器 / 80
3.13 为开发做准备——设计稿交付与沟通 / 82
3.13.1 将Sketch设计稿导出为开发素材 / 82
3.13.2 为完美复现做好准备——标注你的设计稿 / 85
3.13.3 让“程序猿”更懂你——动起来的设计稿 / 88
3.14 实战——使用Sketch绘制图标 / 93
3.14.1 设计前的分析和思考 / 93
3.14.2 表盘的绘制 / 93
3.14.3 指针的绘制 / 95
3.15 实战——使用Sketch设计APP界面 / 96
3.15.1 分析画面元素 / 96
3.15.2 确定为何种平台做设计 / 97
3.15.3 选择合适的Artboard尺寸 / 97
3.15.4 绘制毛玻璃背景 / 97
3.15.5 绘制Status Bar / 99
3.15.6 绘制文字及图标 / 99
3.15.7 绘制输入框 / 101
3.16 实战——使用Sketch绘制可爱的卡通人物 / 102
3.16.1 分析角色构成 / 102
3.16.2 绘制头部及眼睛 / 102
3.16.3 绘制身体 / 103
3.16.4 绘制胳膊及手指 / 103
3.16.5 组合所有元素 / 104
3.17 使用Sketch设计Apple Watch界面 / 105
3.17.1 为Apple Watch创建画布 / 106
3.17.2 Apple Watch使用的字体与字号 / 106
3.18 静电的Sketch答疑教室 / 110
========================================================
Chapter 4
写给设计师看的Xcode教程
4.1 为什么要学习Xcode / 122
4.2 安装并运行Xcode / 124
4.2.1 了解Xcode / 124
4.2.2 下载并安装Xcode / 124
4.3 Xcode初体验 / 126
4.3.1 你好，Xcode! / 126
4.3.2 与新朋友一起玩耍 / 126
4.4 创建启动界面 / 129
4.4.1 熟悉Xcode中的各项模板 / 129
4.4.2 使用Single View Application开始新尝试 / 130
4.4.3 熟悉控件——自定义启动界面 / 131
4.4.4 导入图片资源文件 / 134
4.5 使用故事板创建交互效果 / 137
4.5.1 什么是故事板（StoryBoard）？ / 137
4.5.2 为使用故事板准备设计稿 / 138
4.5.3 设定Xcode故事板尺寸 / 139
4.5.4 为Storyboard添加控件 / 141
4.5.5 导入图片资源到Xcode / 143
4.5.6 让Storyboard显示图片 / 144
4.5.7 使用按钮为Storyboard加入单击事件 / 145
4.5.8 让Storyboard动起来 / 146
4.6 搞定Tab Bar交互效果 / 148
4.6.1 准备素材 / 148
4.6.2 新建Xcode工程 / 149
4.6.3 使用Tab Bar Controller来构建Tab Bar导航效果 / 149
4.6.4 一点点代码——修改Tab Bar背景颜色与单击图标颜色 / 154
4.7 创建Navigation Controller导航效果 / 155
4.7.1 为使用Navigation Controller准备素材 / 156
4.7.2 在Xcode中建立新工程 / 157
4.7.3 使用Navigation Controller / 158
4.7.4 导入素材图片 / 161
4.7.5 链接VC，创建交互效果 / 163
4.7.6 设置Title Bar属性 / 164
4.8 创建页面滚动效果 / 166
4.8.1 准备素材图片 / 166
4.8.2 建立Xcode工程与导入素材图片 / 167
4.8.3 使用ScrollView构建界面 / 169
4.8.4 让Scroll View滚动起来 / 171
4.9 使用SVN或Git与工程师协作 / 175
4.9.1 SVN和GIT是什么？ / 175
4.9.2 SVN对设计师有什么作用？ / 176
4.9.3 在Xcode中使用SVN或者GIT / 176
4.9.4 替换开发工程中的图片文件 / 177
4.10 静电老师的Xcode答疑教室 / 179
========================================================
Chapter 5
后记
关于Sketch和Xcode——静电的小伙伴有话说 / 184
让感性设计与理性思维迸发光芒——写在*后 / 186
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Sketch+Xcode双剑合璧
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精彩iPhone炫酷开发
Wolfgang Ante
第1 章 设计简单的Frenzic 式益智游戏　　3
1.1 创建Frenzic　　3
1.2 Formic 简介　　6
1.3 研究Formic 代码 7
1.3.1 建立工程　　8
1.3.2 编写游戏对象 10
1.3.3 编写视图控制器　　18
1.3.4 编写背景视图 21
1.3.5 增加iPhone 特定的功能　　22
1.4 小结　　25
Mike Ash
第2 章 深入剖析对等网络　　29
2.1 规划一个简单的协作游戏　　30
2.2 构建GUI 30
2.3 为游戏增加网络支持　　 35
2.3.1 定义网络目标 　　35
2.3.2 设计网络代码　　 36
2.3.3 理解字节序　　40
2.3.4 编写网络代码 　　41
2.4 集成网络与GUI　　 50
2.5 小结　　53
Gary Bennett
第3 章 “一心多用”：利用多线程提升性能　　57
3.1 开始编写多线程应用　　 58
3.1.1 明确何时使用线程　　59
3.1.2 理解多线程基础　　60
3.1.3 避免线程陷阱 62
3.2 编写Thread the Needle 应用 64
3.2.1 构建应用 　　64
3.2.2 创建线程 　　70
3.2.3 实现临界区　　73
3.2.4 一次停止多个线程　　74
3.3 小结　　75
Matthew“ Canis” Rosenfeld
第4 章 手指总动员：多指触控界面设计与实现　　79
4.1 了解iPhone 的功能　　80
4.2 多指触控设计　　82
4.3 研究多指触控API　　84
4.3.1 处理事件 85
4.3.2 识别手势 87
4.4 实现多指触控控件　　89
4.4.1 处理触控 90
4.4.2 确定移动的含义　　93
4.4.3 应用移动 95
4.4.4 应用重量和惯性　　96
4.4.5 集成　　98
4.5 小结　　99
Benjamin Jackson
第5 章 基于cocos2d-iPhone 框架的物理学、Sprite 和动画　　103
5.1 游戏编程入门　　104
5.1.1 OpenGL ES 简介　　104
5.1.2 cocos2d 和Chipmunk 简介　　105
5.2 开发Arcade Hockey 105
5.2.1 跟踪用户手指　　107
5.2.2 检测碰撞　　109
5.2.3 在2D 空间中模拟3D 光照　　112
5.3 创建一个简单的应用　　113
5.3.1 建立Xcode 工程　　113
5.3.2 设置场景　　115
5.3.3 创建游戏层　　115
5.4 小结　　123
Neil Mix
第6 章 流式音频与Pandora Radio 之路　　127
6.1 选择iPhone 开发　　127
6.2 Pandora Radio 技术介绍　　128
6.2.1 掌握音频开发基本知识　　128
6.2.2 管理复杂性　　130
6.2.3 示例应用概要介绍　　130
6.2.4 流式音频　　130
6.2.5 保证代码与格式无关　　132
6.2.6 使用信封和编码　　132
6.3 设计示例应用　　132
6.4 实现播放器　　135
6.4.1 AudioSession　　135
6.4.2 AudioRequest　　136
6.4.3 AudioFileStream　　138
6.4.4 AudioQueue　　140
6.4.5 AudioPlayer　　140
6.5 新的征程　　141
6.5.1 慢速网络中的滞后　　141
6.5.2 中断的连接　　143
6.5.3 尽量缩小歌曲间隙　　143
6.5.4 恢复歌曲　　144
6.5.5 改善应用响应性　　144
6.6 查找帮助资源　　144
6.7 测试：最好的留到最后　　145
6.8 小结　　145
Steven Peterson
第7 章 利用Core Location、XML 和SQLite 成就Routesy 之路　　149
7.1 从头开始　　150
7.2 确定应用需求　　150
7.3 为Routesy 创建UI 和类.152
7.4 为Routesy 引入实时预报　　.169
7.5 为Routesy 增加基于位置的信息　　179
7.6 Routesy BART 画龙点睛　　183
7.7 小结　　187
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精彩iPhone炫酷开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Swift语言实战入门
第1章  欢迎来到Swift语言的世界	1
1.1  起源	2
1.2  什么是Swift语言	3
1.3  特性	3
1.3.1  高级	3
1.3.2  易上手	4
1.3.3  兼容性	4
1.3.4  运行效率	4
1.3.5  运行时（Runtime）	5
1.3.6  可混编	5
1.3.7  开发工具	5
1.4  搭建Swift开发环境	5
1.4.1  Mac OS简介	6
1.4.2  Mac OS 下载安装	6
1.4.3  下载并安装Xcode	9
1.4.4  iOS开发者计划	11
1.5  熟悉Xcode及模拟器环境	11
1.5.1  升级和改变	11
1.5.2  第一个Swift语言程序	12
1.5.3  源代码文件基本组成	15
1.5.4  Xcode集成开发环境	16
1.5.5  iOS模拟器	17
1.5.6  体验Playground	18
1.6  Apple产品历史	20
1.7  小结	21
第2章  Swift基础语法	22
2.1  语法入门	22
2.1.1  变量与常量	23
2.1.2  整型	24
2.1.3  浮点型	25
2.1.4  布尔型	26
2.1.5  字符串和字符	27
2.1.6  可选（optional）	34
2.1.7  元组	37
2.1.8  类型别名	38
2.1.9  类型转换	38
2.1.10  断言（assertion）	40
2.2  运算符	42
2.2.1  基础运算符	42
2.2.2  高级运算符	50
2.2.3  自定义运算符	55
2.2.4  运算符优先级和结合性	55
2.3  复杂数据类型	57
2.3.1  数组	57
2.3.2  字典	59
2.3.3  结构体	59
2.3.4  枚举	61
2.4  控制流	62
2.4.1  条件结构	62
2.4.2  值绑定（Value Bindings）	66
2.4.3  循环结构	67
2.4.4  控制转向语句	71
2.5  函数	74
2.5.1  函数的定义和调用	74
2.5.2  函数的形参和返回值	75
2.6  闭包	78
2.6.1  什么是闭包	79
2.6.2  trailing闭包	80
2.6.3  捕获	81
2.7  表达式	81
2.7.1  基本表达式	81
2.7.2  前缀表达式和后缀表达式	82
2.7.3  表达式解析	84
2.8  小结	86
第3章  Swift面向对象编程基础	87
3.1  面向对象编程简介	87
3.1.1  面向对象编程的基本概念	90
3.1.2  面向对象编程的特点	92
3.1.3  为什么要使用面向对象编程	93
3.1.4  Swift语言中的面向对象概览	94
3.2  类、方法、属性介绍	94
3.2.1  编写第一个类	94
3.2.2  属性	96
3.3  方法	108
3.3.1  实例方法	108
3.3.2  类型方法	109
3.3.3  初始化方法和反初始化方法	111
3.3.4  下标脚本	118
3.4  枚举、类与结构体的对比	121
3.4.1  枚举与其他两者的关系	121
3.4.2  类与结构体的关系	122
3.5  小结	124
第4章  Swift语言的语法高级特性	125
4.1  高级面向对象特性	125
4.1.1  继承	125
4.1.2  多态	130
4.1.3  封装	134
4.2  面向对象的高级用法	136
4.2.1  类扩展	136
4.2.2  协议	140
4.2.3  类组合	144
4.3  可选链	147
4.3.1  可选概念回顾	147
4.3.2  可选链	149
4.3.3  多级可选链	150
4.4  泛型	150
4.5  小结	154
第5章  Swift语言操作Cocoa底层库	155
5.1  Cocoa开发体系	155
5.1.1  Core OS层	156
5.1.2  Core Service层	156
5.1.3  媒体层	157
5.1.4  UIKit层	158
5.2  Swift语言调用Objective-C	158
5.3  字符串	160
5.3.1  NSString与String互相转换	160
5.3.2  拆分字符串	161
5.3.3  查找字符串	162
5.4  数字	163
5.5  数组	165
5.5.1  NSArray与Array的互相转换	165
5.5.2  NSArray的初始化方法	166
5.5.3  NSArray的常用属性和方法	167
5.6  词典	170
5.6.1  Dictionary和NSDictionary互相转换	170
5.6.2  NSDictionay的初始化方法	171
5.6.3  NSDictionary常用的属性和方法	171
5.7  集	173
5.7.1  初始化	173
5.7.2  常用属性和方法	174
5.7.3  集合元素计数	176
5.8  数据存储NSData	177
5.8.1  创建NSData	177
5.8.2  访问数据	178
5.8.3  字节数据与Base64编码字符串相互转换	179
5.8.4  字节数据存储	180
5.8.5  NSMutableData	181
5.9  文件	182
5.9.1  应用的目录结构	183
5.9.2  访问文件	184
5.9.3  NSURL和NSURLComponents	185
5.9.4  NSFileManager	192
5.9.5  NSFileHandle	200
5.9.6  NSBundle	203
5.10  小结	207
第6章  Swift与Objective-C的互操作	208
6.1  Swift与Objective-C介绍	208
6.1.0  互操作简介	208
6.2  简单的互操作实践	208
6.2.1  Swift中调用Objective- C代码	209
6.2.2  Swift中调用C代码	213
6.2.3  Swift项目中的Objective- C代码调用Swift代码	214
6.2.4  Objective- C项目中调用Swift代码	219
6.3  Objective-C代码库的调用	220
6.3.1  理解框架代码相互调用过程	220
6.3.2  KKColorListPicker库的调用	221
6.3.3  SQLite3的引用	224
6.3.4  在Swift项目中引入GDataXML或DDXML	231
6.3.5  JSON解析及JSONKit的引用	235
6.4  Objective-C项目到Swift项目的迁移	238
6.5  小结	247
第7章  普通UI控件的开发：UIKit第一部分	248
7.1  标签（UILabel）	248
7.1.1  标签的创建	248
7.1.2  背景颜色和文字颜色的设置	248
7.1.3  对齐方式的设置	249
7.1.4  文字阴影设置	249
7.1.5  字体的设置	250
7.1.6  文字的省略方式	250
7.1.7  文字的自动调整	251
7.1.8  多行字符串	251
7.2  按钮（UIButton）	251
7.2.1  按钮的创建	251
7.2.2  按钮的文字、颜色和状态	252
7.2.3  按钮的图片	253
7.2.4  按钮的触摸事件	254
7.3  文本框（UITextField）	255
7.3.1  文本框的创建	255
7.3.2  设置文本样式	255
7.3.3  键盘设置	256
7.3.4  清除按钮	258
7.3.5  背景设置	259
7.4  多行文本控件（UITextView）	259
7.4.1  创建多行文本控件	259
7.4.2  设置文字	259
7.4.3  光标和选择范围	260
7.4.4  委托事件	261
7.5  开关按钮（UISwitch）	262
7.6  选择控件（UISegmentedControl）	263
7.6.1  选择控件的创建	263
7.6.2  选择控件基本设置	264
7.6.3  选择控件选项的插入和删除	264
7.6.4  选择控件获得选择的值	264
7.7  图像控件（UIImageView）	265
7.7.1  图片的显示	265
7.7.2  使用图像控件实现动画	266
7.8  进度条（UIProgressView）	267
7.9  滑块（UISlider）	268
7.9.1  滑块的创建	268
7.9.2  滑块的值通知机制	269
7.9.3  制定滑块样式	269
7.10  警告框（UIAlertView）与操作表（UIActionSheet）	270
7.10.1  警告框的使用	270
7.10.2  警告框的委托事件	272
7.10.3  操作表的使用	272
7.10.4  操作表的委托事件	273
7.11  选择框（UIPickerView）	274
7.11.1  建立选择框	274
7.11.2  调整选择框的尺寸	277
7.11.3  选择框选项内容	278
7.11.4  检测行的选择状态	278
7.12  微调器（UIStepper）	279
7.12.1  微调器的基本设置	279
7.12.2  微调器的外观设置	280
7.13  滚动视图（UIScrollView）	281
7.13.1  滚动视图的创建	281
7.13.2  放大缩小	282
7.13.3  页单位的滚动	283
7.14  加速度传感器（CoreMotion）	285
7.14.1  加速度传感器介绍	285
7.14.2  使用加速度传感器实现滚球效果	286
7.15  各种手势检测（UIGestureRecognizer以及具体识别器）	288
7.15.1  UIGestureRecognizer的基本用法	288
7.15.2  UITapGestureRecognizer 轻点手势	290
7.15.3  UIPinchGestureRecognizer 捏合手势	290
7.15.4  UIRotationGestureRecognizer旋转手势	291
7.15.5  UIPanGestureRecognizer拖动手势	291
7.16  小结	292
第8章  高级UI：UIKit第二部分	293
8.1  日期选择器（UIDatePicker）	293
8.1.1  控件介绍	293
8.1.2  UIDatePicker 时间日期显示实例	294
8.1.3  UIDatePicker倒计时显示实例	297
8.2  网页控件（UIWebView）	301
8.2.1  UIWebView控件详解	301
8.2.2  UIWebView基本实例	303
8.2.3  UIWebView 浏览器实例	306
8.3  工具条（UIToolbar）	309
8.3.1  工具条控件介绍	309
8.3.2  工具条控件操作实例	310
8.3.3  自制小型浏览器	311
8.4  表格（UITableView）	317
8.4.1  UITableView介绍	317
8.4.2  表格控件简单示例	319
8.4.3  表格控件属性详解	322
8.4.4  自定义单元格详解	330
8.4.5  表格的编辑	348
8.4.6  类微信聊天界面的设计	351
8.5  搜索条（UISearchBar）	359
8.5.1  控件介绍	359
8.5.2  搜索条简单示例	360
8.5.3  搜索条属性	364
8.5.4  利用UISearchDisplayController	364
8.6  导航条（UINavigationBar）与导航条控制器
（UINavigationController）	369
8.6.1  导航介绍	369
8.6.2  导航条示例	369
8.6.3  使用segue图形化设计导航	376
8.7  网格（UICollectionView）与网格控制器
（UICollectionViewController）	378
8.7.1  网格介绍	378
8.7.2  网格属性	378
8.7.3  流布局简单示例	379
8.7.4  自定义布局实现复杂界面	380
8.8  标签条（UITabBar）与标签页控制器（UITabBarController）	386
8.8.1  标签页介绍	386
8.8.2  使用storyboard设计标签页	386
8.8.3  代码实现标签页	388
8.9  页控件（UIPageControl）与页控制器（UIPageViewController）	390
8.9.1  页控件介绍	390
8.9.2  UIPageControl与UIScrollView结合使用	390
8.9.3  UIPageViewController实现翻页	393
8.10  故事板（UIStoryboard）	397
8.10.1  故事板介绍	397
8.10.2  故事板设计	398
8.10.3  故事板编程	399
8.11  分割视图控制器（UISplitViewController）	400
8.11.1  分割视图控制器介绍	400
8.11.2  分割视图控制器示例	401
8.11.3  开发兼容的iOS应用	403
8.12  UIActivity分享	404
8.12.1  UIActivity介绍	404
8.12.2  定制UIActivity分享	405
8.13  小结	407
第9章  2048游戏实战开发	408
9.1  编写游戏界面	408
9.1.1  入口界面	409
9.1.2  游戏主界面	411
9.1.3  游戏设置界面	418
9.2  建立游戏模型	422
9.2.1  游戏模型简介	422
9.2.2  游戏数据的存储	423
9.2.3  游戏数据的变更	429
9.3  游戏效果实现	435
9.3.1  闪现数字的动画	435
9.3.2  数字响应方向重排	439
9.3.3  合并数字实现与动画	448
9.4  游戏个性化设置	454
9.4.1  本地数据库的建立	454
9.4.2  个性化数据的保存	458
9.4.3  远程保存最高分	462
9.5  其他实战项目相关内容	468
9.5.1  项目属性介绍	468
9.5.2  应用图标和启动界面的设置	472
9.5.3  新手引导的制作	476
9.6  小结	479
第10章  程序模型与事件机制	480
10.1  MVC模式	480
10.1.1  MVC介绍	481
10.1.2  MVC在iOS开发中的具体使用	482
10.1.3  MVC在Swift 2048项目中体现	483
10.2  事件机制	484
10.2.1  iOS事件机制介绍	484
10.2.2  iOS开发事件的传递机制	487
10.3  简单设计模式	488
10.3.1  设计模式简介	489
10.3.2  常见设计模式	489
10.3.3  Swift 2048所用的模式	490
10.4  小结	491
第11章  真机测试及发布上架	492
11.1  真机测试	492
11.2  开发上架	495
11.2.1  生成发布到App Store的证书	495
11.2.2  到iTunes Connect网站提交应用说明	501
11.2.3  应用签名和打包	505
11.3  小结	511
后记	512
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Swift语言实战入门
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iPhone游戏编程实例
第1 章 简化复杂游戏的用户界面：国际象棋游戏Deep Green 成功之路  3
1.1 复杂的用户界面  4
1.2 为什么要考虑简单性      6
1.3 如何获得简单性  6
1.3.1 提取核心要素      7
1.3.2 改善图像  8
1.3.3 让用户集中注意力      9
1.3.4 深入挖掘    10
1.3.5 简单就是美    12
1.3.6 为用户赋予能力    14
1.3.7 让用户微笑    15
1.4 小结          16
第2 章 基于REST 式网页服务的响应式社交游戏 19
2.1 社交网络游戏和iPhone    20
2.2 创建原型高分网页服务    21
2.2.1 创建高分Rails 应用程序    22
2.2.2 使用REST 式XML 网页服务    24
2.3 在iPhone 上显示高分    26
2.3.1 创建UI            27
2.3.2 连接网页服务    32
2.3.3 解析XML    37
2.3.4 在表视图中显示高分      41
2.4 向网页服务提交高分    43
2.5 提交用户成就          46
2.6 引入ObjectiveResource    46
2.6.1 使用ObjectiveResource    47
2.6.2 用ObjectiveResource 提交高分    50
2.7 小结          50
第3 章 使用标准C 的快速游戏开发. 53
3.1 起步          55
3.2 创建工程          .57
3.3 解决保存游戏问题    64
3.3.1 如何保存    65
3.3.2 如何轻松保存    65
3.4 Space Hike：具体应用70
3.4.1 渲染循环和基本组织      70
3.4.2 游戏逻辑总览    72
3.4.3 绘制和处理游戏    73
3.4.4 改进游戏    84
3.5 小结          84
第4 章 Brian Greenstone 实现游戏优化的必要工作87
4.1 内存问题          .88
4.2 你懂C 吗          89
4.2.1 标准C 是最好的    89
4.2.2 Cocoa 与Core Foundation    90
4.3 编译器优化          90
4.3.1 Thumb 指令集    91
4.3.2 编译器优化级别    93
4.3.3 优化函数调用    93
4.4 音频优化          .94
4.4.1 流式音乐回放    94
4.4.2 OpenAL 的声音效果    95
4.5 OpenGL 优化          96
4.5.1 构造一个高效的OpenGL 绘制上下文      97
4.5.2 避免状态改变    98
4.5.3 缩减纹理大小    99
4.5.4 使用压缩纹理    100
4.5.5 几何形状数据缩减    102
4.5.6 限制绘制调用数量    102
4.6 性能工具          103
4.6.1 使用Instruments      104
4.6.2 使用Shark    105
4.7 小结          109
第5 章 成功之道始于游戏设计文档.113
5.1 游戏远景          114
5.2 游戏设计文档          114
5.2.1 标题          115
5.2.2 游戏摘要    .115
5.2.3 游戏细节    .115
5.2.4 游戏设置    .116
5.2.5 游戏系统/ 引擎    116
5.2.6 游戏玩法：控件和UI    117
5.2.7 过关地图    .118
5.2.8 美学设计    .119
5.2.9 标题和信息屏幕      120
5.2.10 声音效果    120
5.3 从远景到现实  120
5.3.1 创建真实人工智能的技巧      121
5.3.2 iPhone 设计的挑战    122
5.4 游戏开发技巧  124
5.4.1 Solitaire Top 3    124
5.4.2 Backgammon    124
5.4.3 Pool            125
5.4.4 Kaleidoscope    125
5.4.5 Shake N’Break    125
5.4.6 Bikini Hunt    127
5.4.7 YoYo          127
5.4.8 Apache Lander    .127
5.5 小结          128
第6 章 多平台游戏开发：面向Linux 和Windows 的 iPhone 游戏 .131
6.1 Smiles 的开发：一组智力游戏    132
6.2 跨平台和可移植性      136
6.2.1 编写可移植代码的原因    136
6.2.2 为什么不编写可移植代码      137
6.3 彻底的可移植性    137
6.3.1 经典游戏循环    138
6.3.2 实际游戏循环    139
6.3.3 帧与刷新速率    141
6.3.4 Work 与Draw 帧代码    141
6.4 与事件驱动操作系统合作    142
6.4.1 准备跟踪触控    142
6.4.2 跟踪触控    143
6.4.3 游戏循环中模拟触控和释放事件    145
6.5 跳帧          147
6.5.1 创建一个Unix 系统时间库    148
6.5.2 使用UnixTime 库实现跳帧    152
6.6 倾斜和触摸物理示例    154
6.6.1 物理模拟示例的游戏代码      154
6.6.2 可移植性的更多考虑    160
6.7 小结          161
第7 章 代码优化——来自Mike Lee（“世界上最顽强的程序员”）  165
7.1 第一代：粒子效果      166
7.2 全局          167
7.3 第2 代：烟与镜子      168
7.4 过早优化          170
7.4.1 构建效率    170
7.4.2 代码效率    172
7.4.3 算法效率    174
7.5 第3 代：鲨鱼出动      175
7.6 保持冷静          177
7.7 第4 代：更巧妙的优化      178
7.8 特定于应用程序的优化      179
7.9 小结          182
第8 章 网络化游戏：正确地选择    185
8.1 多人游戏网络化选择    186
8.1.1 通信是关键      186
8.1.2 局域网游戏中引入“Bonjour”    193
8.1.3 绘制到屏幕      202
8.2 井字游戏示例  203
8.3 小结          214
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iPhone游戏编程实例
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>好学的Objective-C
目 录
第一部分  Objective-C 简介
第1 章  Objective-C 简介　　2
1.1  使用Xcode 进行开发　　3
1.1.1  新建项目　　3
1.1.2  项目文件　　5
1.1.3  添加源码文件　　6
1.1.4  主Xcode 窗口　　7
1.2  理解编译过程　　9
1.2.1  编码　　9
1.2.2  源码、编译代码和可执行文件　　11
1.2.3  查看应用包　　11
1.2.4  编译设置　　13
1.3  使用Xcode 静态分析器　　17
1.4  Objective-C 运行时　　20
1.5  小结　　20
第2 章  基本语法　　21
2.1  使用语句和表达式　　23
2.1.1  声明变量　　23
2.1.2  使用注释　　25
2.1.3  标量类型　　25
2.1.4  使用特殊变量修饰符　　26
2.1.5  结构体　　28
2.1.6  使用类型定义　　29
2.1.7  使用enum 　　30
2.1.8  指针　　31
2.1.9  使用运算符　　35
2.1.10  三目运算符　　37
2.2  使用函数　　37
2.2.1  函数　　37
2.2.2  定义函数　　39
2.2.3  实现与接口　　41
2.2.4  链接实现文件　　42
2.3  控制程序流　43
2.3.1  使用条件语句　　44
2.3.2  使用循环语句　　47
2.4  活学活用　　50
2.5  小结　　53
第3 章  添加对象　　54
3.1  对象　　54
3.1.1  创建类　　58
3.1.2  声明对象　　64
3.1.3  调用对象方法　　65
3.2  使用属性　　66
3.2.1  状态和行为的区别　　66
3.2.2  使用点标记　　71
3.3  应用对象　　72
3.3.1  创建员工对象　　72
3.3.2  创建经理类　　75
3.3.3  在HR 主函数中关联不同的类　　77
3.4  小结　　78
第4 章  Objective-C 内存管理　　79
4.1  使用引用计数　　79
4.1.1  内存管理规则　　81
4.1.2  使用自动释放　　82
4.1.3  对象内部的内存　　85
4.2  使用垃圾回收　　88
4.2.1  垃圾回收器　　88
4.2.2  为项目配置垃圾回收　　90
4.2.3  在垃圾回收项目中使用框架　　91
4.3  关键的垃圾回收模式　　92
4.3.1  管理有限的资源　　92
4.3.2  编写支持垃圾回收的基础应用　　94
4.3.3  处理nib 文件中的对象　　94
4.3.4  强制垃圾回收　　95
4.3.5  处理空指针和垃圾回收　　95
4.3.6  使用垃圾回收的面向对象接口　　96
4.4  项目使用的内存管理模型　　97
4.5  小结　　97
第二部分  更多特性
第5 章  代码块　　100
5.1  了解代码块　　100
5.1.1  声明代码块　　100
5.1.2  使用代码块　　102
5.2  了解重要的代码块作用域　　103
5.2.1  管理代码块内存　　104
5.2.2  通过typedef 提高代码块的可读性  　105
5.3  在线程中使用代码块　　106
5.3.1  使用GCD　　106
5.3.2  使用GCD 在线程中调度代码块　　106
5.4  通用的代码块设计模式　　107
5.4.1  将代码块作为映射　　107
5.4.2  在标准API 中使用代码块　　108
5.5  在易并行任务中应用代码块　　109
5.5.1  创建项目　　109
5.5.2  在数组中使用代码块过滤素数　　111
5.5.3  使用GCD　　114
5.6  小结　　116
第6 章  键值编码和键值观察　　117
6.1  通过键值编码访问对象属性　　117
6.1.1  键路径　　119
6.1.2  编写符合KVC 标准的存取器方法　　121
6.1.3  在数组中使用KVC　 123
6.1.4  在结构体和标量中使用KVC　　127
6.1.5  查找对象特性　　128
6.2  观察对符合KVC 标准的值的修改　　128
6.2.1  使用KVO　　129
6.2.2  注册成为观察者　　129
6.2.3  定义KVO 的回调　　130
6.2.4  移除观察者　　131
6.2.5  实现手动通知　　132
6.2.6  使用KVO 的风险　　133
6.3  应用键值观察　　133
6.4  小结　　136
第7 章  使用协议　　137
7.1  优先使用组合而不是继承　　137
7.1.1  了解为什么不需要（或不想要）多继承　　139
7.1.2  理解协议如何解决问题　　139
7.1.3  记录期望别人实现的接口　　140
7.2  在对象中实现协议　　141
7.2.1  声明协议　　141
7.2.2  声明一个类实现了协议　　143
7.2.3  声明一个必须实现协议的对象　　143
7.2.4  正式协议和非正式协议　　144
7.2.5  确定一个对象是否实现了可选方法　　144
7.2.6  避免协议循环依赖　　146
7.3  协议使用示例　　146
7.4  小结　　147
第8 章  扩展现有类　　148
8.1  使用第三方框架和类　　148
8.2  使用类别　　149
8.2.1  声明类别　　149
8.2.2  实现类别方法　　150
8.2.3  在头文件中声明类别　　150
8.2.4  使用类别　　150
8.2.5  通过类别拆分功能　　151
8.2.6  扩展类方法　　151
8.2.7  分析类别的局限性　　153
8.2.8  通过类别实现协议　　153
8.2.9  了解在NSObject 上创建类别的风险　　154
8.3  通过匿名类别扩展类　　154
8.4  在现有类中关联变量　　155
8.5  小结　　157
第9 章  编写宏　　158
9.1  回顾编译过程　　158
9.2  定义宏　　162
9.2.1  定义常量　　163
9.2.2  通过编译传递常量　　163
9.2.3  在宏中使用变量　　165
9.2.4  字符串化　　165
9.2.5  使用条件判断　　167
9.2.6  使用内置宏　　167
9.3  小结　　167
第10 章  错误处理　　168
10.1  错误分类　　168
10.2  使用错误处理的不同机制　　169
10.2.1  使用返回码　　170
10.2.2  使用异常　　171
10.2.3  使用NSError　　176
10.3  小结　　180
第三部分  使用 Foundation 框架
第11 章  了解框架之间如何配合工作　　182
11.1  了解Foundation 框架　　182
11.2  在项目中使用框架　　184
11.2.1  添加框架　　184
11.2.2  包含头文件　　185
11.2.3  考虑垃圾回收　　185
11.3  小结　　185
第12 章  使用字符串　　186
12.1  了解字符串声明语法　　186
12.1.1  使用格式化字符串　　188
12.1.2  使用其他NSString 方法　　189
12.1.3  使用NSString 类别　　190
12.2  小结　　190
第13 章  使用集合　　191
13.1  使用数组　　191
13.1.1  使用字典　　193
13.1.2  使用Set 集合　　195
13.1.3  认识可变性　　196
13.2  了解集合和内存管理　　198
13.3  遍历　　200
13.4  向元素发送消息　　201
13.5  排序和过滤　　201
13.6  在集合中使用代码块　　203
13.7  小结　　204
第14 章  使用NSValue、NSNumber和NSData　　205
14.1  使用NSValue 和NSNumber　　206
14.1.1  通过NSValue 包装任意数据类型　　206
14.1.2  通过NSNumber 包装数字　　207
14.1.3  通过NSDecimalNumber进行算术运算　　207
14.2  使用NSData 和NSMutableData　　208
14.2.1  创建NSData 对象　　208
14.2.2  访问NSData 对象中的生数据　　209
14.3  小结　　209
第15 章  处理时间和日期　　210
构建日期　　211
使用时间间隔　　211
日期比较　　211
使用NSCalender　　212
使用时区　　213
15.1  使用NSDateFormatter　　214
15.2  小结　　214
第四部分  高级主题
第16 章  通过多个线程实现多处理　　216
16.1  同步代码　　217
16.1.1  使用锁　　217
16.1.2  使用@synchronize 关键字　　219
16.1.3  理解原子性　　220
16.2  创建NSTread　　221
16.2.1  创建线程　　221
16.2.2  控制运行的线程　　221
16.2.3  访问主线程　　222
16.2.4  通过执行选择器跨线程　　223
16.3  使用NSOperation 和NSOperationQueue　　223
16.3.1  创建操作　　224
16.3.2  将操作加入到队列　　225
16.3.3  控制队列参数　　225
16.3.4  使用不同的操作　　226
16.4  小结　　227
第17 章  Objective-C 设计模式　　228
17.1  识别解决方案中的模式　　228
17.2  用Objective-C 描述设计模式　　229
17.2.1  使用单例　　229
17.2.2  委托责任　　233
17.2.3  将变化通知给多个对象　　234
17.3  小结　　237
第18 章  利用NSCoder 读写数据　　238
在对象上实现NSCoding 协议　　238
对象编码　　238
基本类型编码　　240
使用对象图　　240
使用其他类型的数据　　241
解码对象　　242
18.1  使用NSArchiver 和NSUnarchiver　　243
18.2  处理存档文件格式和遗留数据　　244
18.3  小结　　244
第19 章  在其他平台上使用Objective-C　　245
19.1  使用GNUstep　　245
19.1.1  使用Cocotron　　247
19.1.2  使用其他开源库　　248
19.2  展望未来　　248
19.3  小结　　249
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>好学的Objective-C
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iPhone & iPad cocos2d游戏开发实战
目    录

第1章  简介	1
1.1  选择iPhone版cocos2d
的理由	2
1.1.1  免费	2
1.1.2  开源	2
1.1.3  Objective-C	2
1.1.4  2D游戏引擎	3
1.1.5  物理引擎	3
1.1.6  技术难度较低	3
1.1.7  依然需要编程	3
1.1.8  超棒的cocos2d社区	4
1.2  注意事项	4
1.2.1  Section 3.3.1	4
1.2.2  平台移植	5
1.3  本书读者对象	5
1.4  阅读前提	5
1.4.1  编程经验	5
1.4.2  Objective-C	5
1.5  本书内容	6
1.5.1  iOS游戏开发新手将
学会什么	7
1.5.2  iPhone应用程序开发者
将学会什么	7
1.5.3  cocos2d开发者将学会什么	7
1.6  章节介绍	8
1.7  问题和反馈	9
第2章  入门	11
2.1  准备工作	11
2.1.1  系统要求	11
2.1.2  注册成为iOS开发者	12
2.1.3  证书和授权文件	12
2.1.4  下载并安装iPhone SDK	12
2.1.5  下载并安装cocos2d	13
2.2  HelloWorld应用程序	16
2.2.1  HelloWorld文件在项目中
的位置	16
2.2.2  资源	17
2.2.3  其他资源	17
2.2.4  类	18
2.3  cocos2d中的内存管理问题	22
2.4  改变世界	24
2.5  你还应该知道的	26
2.5.1  iOS设备	26
2.5.2  关于内存的使用	27
2.5.3  模拟器	29
2.5.4  关于日志	30
2.6  本章小结	30
第3章  基础知识	31
3.1  cocos2d中的单件类	31
3.2  Director类	33
3.3  场景图	33
3.4  CCNode类层次体系	34
3.5  CCNode类	34
3.5.1  节点的处理方式	34
3.5.2  动作的处理方式	35
3.5.3  消息调度	36
3.6  场景和层	39
3.6.1  CCScene	40
3.6.2  场景和内存	40
3.6.3  推进和弹出场景	41
3.6.4  CCTransitionScene	42
3.6.5  CCLayer	43
3.7  CCSprite类	46
3.7.1  定位点揭秘	46
3.7.2  纹理大小	47
3.8  CCLabel类	47
3.9  菜单	48
3.10  动作	50
3.10.1  重复动作	50
3.10.2  流畅动作	50
3.10.3  动作序列	51
3.10.4  瞬时动作	52
3.11  cocos2d测试案例	53
3.12  本章小结	53
第4章  你的第一个游戏	55
4.1  按部就班地创建项目	55
4.2  添加Player Sprite	59
4.3  加速计输入	62
4.4  首次测试运行	63
4.5  玩家速度	63
4.6  添加障碍物	66
4.7  碰撞检测	72
4.8  得分标签	73
4.9  CCBitmapFontAtlas与Hiero
简介	74
4.10  添加音频	76
4.11  移植到iPad	76
4.12  本章小结	77
第5章  游戏组件	79
5.1  使用多个场景	79
5.1.1  添加多个场景	79
5.1.2  正在加载下一段，请做好
准备	81
5.2  使用多个层	83
5.2.1  实现关卡的最佳方法	89
5.2.2  CCColorLayer	90
5.3  从CCSprite类继承游戏
对象	90
5.4  使用CCSprite复合游戏
对象	91
5.5  奇妙的CCNode派生类	96
5.5.1  CCProgressTimer	96
5.5.2  CCParallaxNode	97
5.5.3  CCRibbon	99
5.5.4  CCMotionStreak	100
5.6  本章小结	101
第5章  深入了解精灵	103
6.1  CCSpriteBatchNode	103
6.1.1  何时使用
CCSpriteBatchNode	104
6.1.2  示例项目	105
6.2  精灵动画初体验	110
6.3  用于创建动画的辅助类别	112
6.4  使用纹理图册	114
6.4.1  何为纹理图册	114
6.4.2  Zwoptex工具介绍	114
6.4.3  使用Zwoptex桌面版创建
纹理图册	115
6.4.4  在cocos2d中使用纹理
图册	117
6.4.5  改进CCAnimation辅助
类别	119
6.4.6  将所有图像都放入一个
纹理图册中	120
6.5  自己动手	121
6.6  本章小结	122
第7章  滚屏射击游戏(上)	123
7.1  高级视差滚屏	123
7.1.1  将背景创建为底纹	123
7.1.2  在代码中重建背景	125
7.1.3  移动ParallaxBackground	126
7.1.4  视差滚动的速度因素	127
7.1.5  实现背景的无限滚动	129
7.1.6  消除闪烁	131
7.1.7  重复贴图	132
7.2  虚拟手柄	133
7.2.1  引入SneakyInput	133
7.2.2  集成SneakyInput	134
7.2.3  触摸按钮产生射击	135
7.2.4  为按钮添加皮肤	137
7.2.5  控制动作	139
7.2.6  数字控制	142
7.2.7  另一个选择：GPJoystick	143
7.3  本章小结	143
第8章  滚屏射击游戏(下)	145
8.1  添加BulletCache类	145
8.2  关于敌人	149
8.3  Entity类的继承体系	151
8.3.1  EnemyEntity类	151
8.3.2  EnemyCache类	155
8.3.3  组件类	159
8.4  射击开火	161
8.5  大怪物的生命条	163
8.6  本章小结	165
第9章  粒子效果	167
9.1  粒子效果实例	167
9.2  用复杂方法创建粒子效果	170
9.2.1  变化度属性	173
9.2.2  粒子数量	173
9.2.3  发射器持续时间	174
9.2.4  发射器模式	174
9.2.5  粒子位置	176
9.2.6  粒子大小	177
9.2.7  粒子方向	177
9.2.8  粒子生存期	177
9.2.9  粒子颜色	178
9.2.10  粒子混合模式	178
9.2.11  粒子贴图	179
9.3  Particle Designer介绍	180
9.3.1  使用Particle Designer生成
的粒子效果	182
9.3.2  分享粒子效果	183
9.4  在射击游戏中添加粒子
效果	185
9.5  本章小结	186
第10章  瓦片地图	189
10.1  瓦片地图简介	189
10.2  使用Zwoptex处理图片	191
10.3  Tiled地图编辑器	193
10.3.1  创建新的瓦片地图	193
10.3.2  设计瓦片地图	194
10.4  在cocos2d中使用直角
瓦片地图	196
10.4.1  定位被触摸的瓦片	199
10.4.2  提高性能和可读性	201
10.4.3  使用对象层	202
10.4.4  绘制对象层矩形	203
10.4.5  滚动瓦片地图	206
10.5  本章小结	207
第11章  斜角瓦片地图	209
11.1  设计斜角瓦片地图图形	209
11.2  使用Tiled编辑斜角瓦片
地图	211
11.2.1  新建一个斜角瓦片
地图	211
11.2.2  创建新的斜角瓦片集	212
11.2.3  设计斜角瓦片地图的
基本规则	213
11.3  将斜角瓦片地图应用到
游戏编程中	214
11.3.1  在cocos2d中加载斜角
瓦片地图	214
11.3.2  在cocos2d中设置斜角
瓦片地图	214
11.3.3  定位一个斜角瓦片	216
11.3.4  滚动斜角瓦片地图	218
11.3.5  斜角瓦片地图的边界
问题	219
11.3.6  增加一个可移动的玩家
角色	221
11.4  在游戏中加入更多内容	228
11.5  本章小结	228
第12章  物理引擎	231
12.1  物理引擎的基本概念	231
12.2  物理引擎的局限性	232
12.3  Box2D与Chipmunk	232
12.4  Box2D	233
12.4.1  Box2D眼中的世界	234
12.4.2  把移动范围限制在
屏幕内	235
12.4.3  转换点	237
12.4.4  在Box2D世界中添加
盒子	238
12.4.5  连接精灵和刚体	239
12.4.6  碰撞检测	240
12.4.7  连接刚体	243
12.5  Chipmunk	244
12.5.1  面向对象的Chipmunk	244
12.5.2  构建Chipmunk物理
空间	244
12.5.3  将盒子添加到物理
空间中	246
12.5.4  添加小盒子	247
12.5.5  更新盒子的精灵	249
12.5.6  Chipmunk碰撞实践	250
12.5.7  Chipmunk中的关节	251
12.6  本章小结	253
第13章  弹球游戏	255
13.1  图形：凸多边形和逆时针
方式	255
13.2  应用VertexHelper	256
13.3  创建弹球桌	258
13.4  加入动态元素	264
13.4.1  BodyNode类	264
13.4.2  球	267
13.4.3  反弹器	271
13.4.4  发射器	272
13.4.5  挡板	276
13.5  本章小结	280
第14章  Game Center	281
14.1  激活Game Center	281
14.1.1  在iTunes Connect中
创建应用程序	282
14.1.2  建立排行榜和成就	282
14.1.3  创建cocos2d Xcode
项目	283
14.1.4  配置Xcode 项目	284
14.1.5  小结	286
14.2  Game Kit编程	287
14.2.1  GameKitHelper代理	287
14.2.2  检查Game Center是否
可用	289
14.2.3  验证本地玩家身份	289
14.2.4  block对象	292
14.2.5  接收本地玩家的好友
列表	294
14.2.6  排行榜	296
14.2.7  成就	300
14.2.8  联机	304
14.3  本章小结	308
第15章  番外篇	311
15.1  一些有用的技术	311
15.1.1  社交网络	312
15.1.2  套接字服务器技术	313
15.1.3  广告和分析	313
15.1.4  推送通知供应商	314
15.2  从源码项目中受益	314
15.2.1  Sapus Tongue	315
15.2.2  LevelSVG	315
15.2.3  iPhone RPG Game Kit	315
15.2.4  Line-Drawing Game
Starterkit	316
15.3  参考	316
15.4  与出版商合作	317
15.5  寻找自由职业者	318
15.6  寻找免费的艺术品和
音频	319
15.7  寻找交易工具	319
15.8  市场	320
15.8.1  营销游戏和自己	320
15.8.2  公关和新闻发布	321
15.9  寻求帮助	322
15.9.1  cocos2d首页	323
15.9.2  栈交换网络	323
15.9.3  教程和常见问题解答	324
15.10  写在最后	324
15.11  本章小结	325

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iPhone & iPad cocos2d游戏开发实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iPhone摄影
目 录
Part 01　012　认识你的iPhone
014　Chapter 01　原来你的iPhone会摄影
026　Chapter 02　同步照片与购买App
038　Chapter 03　玩摄影，也要玩配件
042　Chapter 04　补充你的iPhone能量，分享你的iPhone照片
Part 02　048　各种iPhone有趣和好用的拍摄软件介绍
055　Chapter 05　拍出各式风格的摄影软件
056　5-1　Hipstamatic体验交换镜头的银盐之美
076　5-2　CameraBag一次掌握多种影像风格
086　5-3　CrossProcess掉入复古色彩的漩涡
092　5-4　Pudding Camera特有的韩式朦胧风格
105　Chapter 06　如同模型照片的软件
106　6-1　TiltShift Generator趣味的移轴画面
114　6-2　myFilm SLR-like充满日系色调的景深
122　6-3　iDOF在涂抹之间创造景深
129　Chapter 07　增强相机功能的摄影软件
130　Camera+找到各种摄影的可能
153　Chapter 08　拍摄画面处理的软件
154　8-1　Slow Shutter Cam拍下时间的流动
162　8-2　TrueHDR比内置功能更好用的HDR效果
172　8-3　AutoStitch Panorama拍出更广阔的景色
181　Chapter 09　影像编排软件
182　9-1　Adobe Photoshop Express拥有强大的照片编辑功能
196　9-2　Photoshake! 摇晃就能排版出有趣的照片
Part 03　206　各种iPhone绝妙摄影术
208　Chapter 10 　拍摄前，必须先知道的iPhone二三事
226　Chapter 11　向大师学习——川内伦子·淡雅的风景
240　Chapter 12　发生在生活周围的这些事
268　Chapter 13　向大师学习——森山大道·黑白的刹那
282　Chapter 14　恣意抓拍街上的景致
298　Chapter 15　向大师学习——蜷川实花·华丽而饱满的色彩盛宴
306　Chapter 16　近距离的浪漫
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iPhone摄影
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Objective-C编程（第2版）
第1部分  入    门
第1章  读者与本书 3
1.1  C语言和Objective-C语言 3
1.2  如何阅读本书 4
1.3  程序员要走的道路 5
第2章  第一个程序 7
2.1  安装苹果开发者工具 7
2.2  Xcode入门 7
2.3  从哪里开始编写代码 10
2.4  如何运行程序 13
2.5  程序是如何产生的 15
2.6  不要半途而废 16
第2部分  如 何 编 程
第3章  变量与类型 21
3.1  类型 21
3.2  使用变量的程序 22
第4章  if和else 25
4.1  布尔变量 27
4.2  花括号的使用规则 27
4.3  else if 28
4.4  深入学习：条件运算符（三元运算符） 28
第5章  函数 31
5.1  应该在何时使用函数 31
5.2  如何编写并使用函数 31
5.3  函数间是如何协同工作的 33
5.4  标准库 34
5.5  局部变量、帧和栈 35
5.6  作用域 37
5.7  递归 38
5.8  通过调试器查看帧 40
5.9  返回 42
5.10  全局变量与静态变量 43
第6章  格式化字符串 45
6.1  使用格式说明符 46
6.2  转义字符 46
第7章  数字 49
7.1  整数 49
7.2  浮点数 54
7.3  练习 55
第8章  循环 57
8.1  while循环 58
8.2  for循环 59
8.3  break 60
8.4  continue 61
8.5  do-while循环 62
第9章  地址与指针 67
9.1  获取地址 67
9.2  用指针保存地址 68
9.3  通过地址访问数据 69
9.4  不同类型的数据所占用的字节大小 70
9.5  NULL 71
9.6  指针声明的代码规范 72

第10章  通过引用传递 73
10.1  编写通过引用传递参数的函数 74
10.2  不要对NULL取值 75
第11章  结构 77
第12章  堆 81
第3部分  Objective-C与Foundation
第13章  对象 87
13.1  对象 87
13.2  类 87
13.3  创建并使用对象 88
13.4  方法和消息 90
13.5  消息发送 90
13.6  详解消息 91
13.7  类方法与实例方法 92
13.8  发送错误消息 93
13.9  大小写很重要！ 94
13.10  Objective-C语言命名习惯 95
13.11  术语小简介 96
第14章  再谈消息 97
14.1  传递实参的消息 97
14.2  多个实参 98
14.3  消息的嵌套发送 100
14.4  alloc和init 100
14.5  向nil发送消息 101
14.6  id 102
第15章  对象与内存 105
15.1  指针和指针的值 105
15.2  内存管理 107
15.3  ARC 108
第16章  NSString 111
16.1  创建NSString实例 111
16.2  NSString方法 112
16.3  类参考 113
16.4  文档的其他部分 117
16.5  练习：寻找更多的NSString方法 118
第17章  NSArray 119
17.1  创建数组 119
17.2  存取数组 120
17.3  遍历数组 123
17.4  NSMutableArray 124
17.5  旧式数组方法 125
第18章  第一个自定义类 129
18.1  存取方法 132
18.2  存取方法的命名规范 133
18.3  self 134
18.4  多个实现文件 134
18.5  类前缀 135
第19章  属性 137
19.1  声明属性 137
19.2  属性的特性 139
19.3  用点号调用存取方法 140
第20章  继承 141
20.1  覆盖方法 144
20.2  Super 145
20.3  继承层次 145
20.4  description方法和%@转换说明 148
第21章  对象实例变量及属性 151
21.1  对象所有权与ARC 153
21.2  创建BNRAsset类 154
21.3  为BNREmployee创建一对多关系 155
第22章  类扩展 161
22.1  隐藏可变属性 162
22.2  头文件与继承 163
22.3  头文件与生成的实例变量 164
第23章  避免内存泄露 165
23.1  强引用循环 167
23.2  弱引用 170
23.3  弱引用的自动置零特性 171
23.4  深入学习：手动引用计数和ARC历史 173
第24章  Collection类 177
24.1  NSSet/NSMutableSet 177
24.2  NSDictionary/NSMutableDictionary 180
24.3  不可修改对象 183
24.4  数组排序 184
24.5  过滤 185
24.6  Collection对象与所有权 186
24.7  C语言基本类型 187
24.8  Collection对象与nil 187
第25章  常量 189
25.1  预处理指令 190
25.2  #include与#import 191
25.3  #define 192
25.4  全局变量 192
25.5  enum 194
25.6  比较#define与全局变量 195
第26章  通过NSString和NSData将数据写入文件 197
26.1  将NSString对象写入文件 197
26.2  NSError 198
26.3  通过NSString读取文件 200
26.4  将NSData对象所保存的数据写入文件 201
26.5  从文件读取数据并存入NSData对象 202
26.6  寻找特别目录 203
第27章  回调 205
27.1  运行循环 206
27.2  目标－动作对 206
27.3  辅助对象 208
27.4  通知 212
27.5  如何选择 213
27.6  回调与对象所有权 214
27.7  深入学习：选择器的工作机制 215
第28章  Block对象 217
28.1  使用Block对象 218
28.2  Block对象 vs. 其他回调 223
28.3  深入学习Block对象 223
第29章  协议 229
调用可选方法 231
第30章  Property List格式 233
第4部分  由事件驱动的应用
第31章  第一个iOS应用 239
31.1  基于图形用户界面的应用 240
31.2  创建iTahDoodle 240
31.3  BNRAppDelegate 242
31.4  Model-View-Controller 243
31.5  应用委托对象 245
31.6  设置视图 246
31.7  在模拟器中运行程序 248
31.8  为按钮关联动作方法 249
31.9  为UITableView对象提供数据 252
31.10  保存并加载数组 255
31.11  深入学习：main()的作用 258
31.12  深入学习：在真机上运行iTahDoole 258
第32章  第一个Cocoa应用 259
32.1  开始开发TahDoodle 260
32.2  在Interface Builder中设置视图 262
32.3  创建关联 270
32.4  实现NSTableViewDataSource 275
32.5  保存并加载数据 276
第5部分  Objective-C高级主题
第33章  init 281
33.1  编写init方法 281
33.2  实现基本的init方法 282
33.3  instancetype类型 283
33.4  使用并检查父类的初始化方法 283
33.5  带实参的init方法 284
33.6  在init中使用存取方法 286
33.7  多个初始化方法 287
33.8  禁用init方法 290
第34章  再谈属性 291
34.1  再谈属性的特性 291
34.2  实现存取方法 294
第35章  KVC 297
第36章  KVO 301
36.1  在KVO中使用context 302
36.2  显式触发通知 303
36.3  独立的属性 303
第37章  范畴 305
第6部分  C语言高级主题
第38章  位运算 309
38.1  按位或 310
38.2  按位与 311
38.3  其他位运算符 313
38.4  用enum定义位掩码 315
38.5  占用更多字节的整数类型 316
第39章  C字符串 317
39.1  char 317
39.2  char * 318
39.3  string literal 321
39.4  C字符串和NSString对象的相互转换 322
39.5  练习 322
第40章  C数组 323
第41章  从命令行运行 329
41.1  命令行参数 330
41.2  命令行的简便方式 333
第42章  Switch语句 335
附录  Objective-C运行时 337
结束语 345
索引 347
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Objective-C编程（第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Cocoa编程开发者手册
第一部分 Cocoa概述
第1 章 Cocoa 与Mac OS X ............................................................................2
1.1 理解何时该用Cocoa ..................................................................................................2
1.1.1 Carbon ................................................................................................................3
1.1.2 Java .....................................................................................................................4
1.1.3 Cocoa .................................................................................................................5
1.1.4 UNIX API ..........................................................................................................6
1.1.5 其他选择 ............................................................................................................7
1.2 理解Cocoa 在Mac OS X 中的角色 ..........................................................................7
1.2.1 Cocoa .................................................................................................................8
1.2.2 Quartz .................................................................................................................9
1.2.3 Core Foundation ...............................................................................................11
1.2.4 Darwin ..............................................................................................................12
1.2.5 XNU .................................................................................................................13
1.3 概览 ...........................................................................................................................14
第2 章 Cocoa 的可选语言 .............................................................................15
2.1 面向对象 ...................................................................................................................15
2.2 Objective-C ................................................................................................................17
2.2.1 Objective-C 的可选编译器 .............................................................................18
2.2.2 与Java 及C++ 的区别 ...................................................................................19
2.2.3 Objective-C 2.0 ................................................................................................21
2.3 Ruby 与Python .........................................................................................................22
2.4 小结 ...........................................................................................................................22
第3 章 使用Apple 的开发工具 ......................................................................23
3.1 获取Apple 的开发工具 ............................................................................................24
3.2 Interface Builder ........................................................................................................24
3.2.1 Outlet 与Action ...............................................................................................26
3.2.2 Cocoa 绑定 ......................................................................................................27
3.2.3 绘制简单的应用程序 ......................................................................................28
3.3 Xcode .........................................................................................................................31
3.3.1 创建简单的项目 ..............................................................................................31
3.3.2 OpenStep Bundle .............................................................................................33
3.3.3 开发样例 ..........................................................................................................34
3.3.4 不用Xcode 来编译 .........................................................................................35
3.4 Objective-C ................................................................................................................36
3.4.1 为何学习Objective-C .....................................................................................37
3.4.2 对C 的添加 .....................................................................................................37
3.4.3 异常与同步 ......................................................................................................44
3.4.4 自省 ..................................................................................................................47
3.4.5 C 中的Objective-C .........................................................................................50
3.4.6 Objective-C 2.0 ................................................................................................51
3.4.7 Block ................................................................................................................54
3.4.8 Objective-C++ ..................................................................................................56
3.5 Cocoa 规约 ................................................................................................................57
3.5.1 命名 ..................................................................................................................57
3.5.2 内存管理 ..........................................................................................................60
3.5.3 构造器与初始化器 ..........................................................................................62
3.6 小结 ...........................................................................................................................64
第二部分 Cocoa框架
第4 章 Foundation: Objective-C 基础库 ........................................................66
4.1 一般概念 ...................................................................................................................67
4.1.1 可变的 ..............................................................................................................67
4.1.2 Class Cluster ....................................................................................................67
4.2 Core Foundation 类型 ...............................................................................................71
4.3 基本数据类型 ...........................................................................................................72
4.3.1 非对象类型 ......................................................................................................72
4.3.2 字符串 ..............................................................................................................73
4.3.3 数字和值的装箱 ..............................................................................................75
4.3.4 数据 ..................................................................................................................76
4.3.5 缓存和丢弃数据 ..............................................................................................77
4.3.6 日期和时间 ......................................................................................................78
4.4 容器 ...........................................................................................................................79
4.4.1 比较和排序 ......................................................................................................79
4.4.2 原生容器 ..........................................................................................................82
4.4.3 数组 ..................................................................................................................82
4.4.4 字典 ..................................................................................................................84
4.4.5 集合 ..................................................................................................................84
4.5 枚举类型 ...................................................................................................................85
4.5.1 利用高级消息枚举 ..........................................................................................87
4.5.2 利用block 枚举 ...............................................................................................89
4.5.3 支持快速枚举 ..................................................................................................90
4.6 属性列表 ...................................................................................................................95
4.6.1 序列化 ..............................................................................................................96
4.6.2 用户默认值 ......................................................................................................98
4.7 和文件系统交互 .....................................................................................................101
4.7.1 Bundle ............................................................................................................101
4.7.2 工作区和文件管理 ........................................................................................104
4.7.3 使用路径工作 ................................................................................................106
4.7.4 文件访问 ........................................................................................................106
4.8 通知 .........................................................................................................................107
4.8.1 请求通知 ........................................................................................................108
4.8.2 发送通知 ........................................................................................................109
4.8.3 发送异步通知 ................................................................................................110
4.8.4 分布式通知 ....................................................................................................113
4.9 小结 .........................................................................................................................114
第5 章 应用程序相关概念 ............................................................................ 115
5.1 Run Loop .................................................................................................................115
5.2 应用程序和委托 .....................................................................................................122
5.3 响应者链 .................................................................................................................123
5.3.1 事件传递 ........................................................................................................124
5.3.2 目标与活动 ....................................................................................................127
5.3.3 变成首先响应者 ............................................................................................128
5.4 应用程序里的Run Loop ........................................................................................128
5.5 委托与通知 .............................................................................................................131
5.6 视图层次 .................................................................................................................134
5.6.1 窗口 ................................................................................................................134
5.6.2 视图 ................................................................................................................135
5.6.3 格子 ................................................................................................................136
5.7 总结 .........................................................................................................................137
第6 章 创建图形用户界面 ............................................................................138
6.1 位置视图 .................................................................................................................138
6.2 嵌套视图 .................................................................................................................143
6.2.1 剪裁视图 ........................................................................................................143
6.2.2 滚动视图 ........................................................................................................144
6.2.3 页签视图 ........................................................................................................145
6.2.4 分割视图 ........................................................................................................146
6.2.5 方框 ................................................................................................................147
6.3 创建视图 .................................................................................................................148
6.3.1 按钮 ................................................................................................................148
6.3.2 文本视图 ........................................................................................................150
6.3.3 数据视图 ........................................................................................................150
6.3.4 菜单 ................................................................................................................158
6.4 Cocoa 绑定 ..............................................................................................................160
6.4.1 键—值编码 ....................................................................................................160
6.4.2 键—值观测 ....................................................................................................165
6.4.3 公开绑定 ........................................................................................................168
6.4.4 通用控制器 ....................................................................................................169
6.4.5 绑定与用户默认值 ........................................................................................170
6.4.6 在Interface Builder 中使用绑定 ..................................................................170
6.5 小结 .........................................................................................................................176
第7 章 窗口与菜单 .......................................................................................177
7.1 理解窗口 .................................................................................................................178
第8 章 Cocoa 中的文本 ...............................................................................181
8.1 字符串的构建与析构 .............................................................................................182
8.2 字符串标注 .............................................................................................................184
8.3 本地化 .....................................................................................................................186
8.3.1 本地化的宏定义 ............................................................................................187
8.3.2 Strings 文件 ...................................................................................................188
8.3.3 格式字符串的本地化 ....................................................................................189
8.4 文本存储 .................................................................................................................190
8.5 理解字体 .................................................................................................................191
8.5.1 转换字体 ........................................................................................................192
8.5.2 罗列字体 ........................................................................................................196
8.6 显示文本 .................................................................................................................196
8.6.1 基本绘制 ........................................................................................................196
8.6.2 布局管理器 ....................................................................................................199
8.6.3 附件（attachment） ........................................................................................202
8.6.4 文本视图 ........................................................................................................203
8.6.5 文本控件单元 ................................................................................................204
8.7 编写自定义文本容器 .............................................................................................208
8.8 使用多个文本视图 .................................................................................................212
8.9 小结 .........................................................................................................................215
第三部分 Cocoa文档
第9 章 创建文档驱动型应用程序 .................................................................218
9.1 Cocoa 文档模型 ......................................................................................................219
9.1.1 文件类型 ........................................................................................................220
9.1.2 文档对象 ........................................................................................................223
9.2 创建应用程序骨架 .................................................................................................223
9.3 创建文档 .................................................................................................................225
9.3.1 载入窗口 ........................................................................................................225
9.3.2 建立文档模型 ................................................................................................227
9.3.3 读入和保存文档 ............................................................................................227
9.3.4 文档创建事件 ................................................................................................230
9.4 扩展Outliner ...........................................................................................................231
9.4.1 定义原生文件格式 ........................................................................................231
9.4.2 定义外部文件格式 ........................................................................................233
9.4.3 支持读入和保存 ............................................................................................236
9.5 支持撤销 .................................................................................................................241
9.5.1 注册撤销操作 ................................................................................................242
9.5.2 创建撤销组 ....................................................................................................243
9.5.3 处理撤销操作 ................................................................................................244
9.5.4 撤销用户界面 ................................................................................................244
9.6 给Outliner 增加撤销功能 ......................................................................................245
9.7 总结 .........................................................................................................................254
第10 章 Core Data ......................................................................................255
10.1 数据建模介绍 .......................................................................................................256
10.2 理解托管对象 .......................................................................................................257
10.3 属性类型 ...............................................................................................................258
10.4 创建数据模型 .......................................................................................................259
10.5 选择持久存储 .......................................................................................................267
10.5.1 内存存储 ......................................................................................................267
10.5.2 XML 存储 ....................................................................................................267
10.5.3 二进制存储 ..................................................................................................268
10.5.4 SQLite 存储 .................................................................................................268
10.5.5 自定义存储 ..................................................................................................269
10.6 存储元数据 ...........................................................................................................269
10.7 自动还原 ...............................................................................................................271
10.8 Core Data、Spotlight 与Time Machine ...............................................................272
10.9 小结 .......................................................................................................................273
第四部分 复杂用户界面
第11 章 处理结构化数据 ..............................................................................276
11.1 数据源和委托对象 ................................................................................................277
11.2 表格 ........................................................................................................................277
11.2.1 表格视图的绘制 ..........................................................................................278
11.2.2 使用排序描述符 ..........................................................................................279
11.2.3 定制表格视图 ..............................................................................................281
11.3 大纲视图 ................................................................................................................284
11.3.1 扩展Outliner 示例 ......................................................................................285
11.4 浏览器视图 ............................................................................................................297
11.4.1 浏览器视图的委托 ......................................................................................297
11.4.2 创建浏览器 ..................................................................................................298
11.5 集合视图 ................................................................................................................301
11.5.1 在集合视图中显示文件 ..............................................................................302
11.6 用新控件单元定制视图 ........................................................................................305
11.7 创建主- 从视图 ....................................................................................................308
11.7.1 作为细节视图的检视器 ..............................................................................309
11.8 小结 ........................................................................................................................313
第12 章 动态视图 ........................................................................................314
12.1 多标签视图 ...........................................................................................................314
12.2 分析视图层级结构 ...............................................................................................315
12.3 修改视图层级结构 ...............................................................................................317
12.3.1 改变视图的父元素 ......................................................................................317
12.3.2 重排视图 ......................................................................................................321
12.3.3 可拖出窗口的标签 ......................................................................................325
12.4 创建动态输入表单 ...............................................................................................329
12.4.1 用矩阵控件创建表单 ..................................................................................330
12.4.2 用自定义视图创建表单 ..............................................................................335
12.4.3 用规则编辑器创建表单 ..............................................................................339
12.5 全屏应用程序 .......................................................................................................343
12.6 小结 .......................................................................................................................345
第五部分 高级图形
第13 章 自定义视图 .....................................................................................348
13.1 图形上下文 ...........................................................................................................349
13.2 Core Graphics ........................................................................................................350
13.3 用AppKit 绘图 .....................................................................................................353
13.3.1 绘制形状 ......................................................................................................354
13.3.2 用控件单元绘制 ..........................................................................................358
13.3.3 绘制文本 ......................................................................................................366
13.3.4 创建新控件单元 ..........................................................................................371
13.3.5 绘制位图 ......................................................................................................375
13.3.6 组合图像 ......................................................................................................380
13.4 打印与视图分页 ...................................................................................................382
13.4.1 打印信息 ......................................................................................................382
13.4.2 创建打印任务 ..............................................................................................383
13.4.3 视图分页 ......................................................................................................385
13.4.4 自动分页 ......................................................................................................391
13.5 用调板扩展Interface Builder ...............................................................................392
13.6 小结 .......................................................................................................................399
第14 章 声音与视频 .....................................................................................400
14.1 提示音 ...................................................................................................................400
14.2 播放简单的声音 ...................................................................................................401
14.3 理解Cocoa 的影片对象 .......................................................................................405
14.4 加上视频 ...............................................................................................................408
14.5 编辑媒体 ...............................................................................................................411
14.6 低层声音API ......................................................................................................412
14.7 录音和录像 ...........................................................................................................414
14.8 支持语音 ...............................................................................................................417
14.9 Cocoa 语音合成 ....................................................................................................418
14.10 跟用户交谈 .........................................................................................................419
14.11 总结 ......................................................................................................................424
第15 章 高级视觉效果 .................................................................................425
15.1 简单的动画 ...........................................................................................................425
15.2 Core Animation 综述 .............................................................................................427
15.2.1 在图层里绘画 ..............................................................................................428
15.2.2 设置图层的内容 ..........................................................................................431
15.3 理解动画的概念 ...................................................................................................432
15.4 加上简单动画 .......................................................................................................434
15.5 图像滤镜 ...............................................................................................................437
15.6 定义过渡 ...............................................................................................................443
15.7 创建复杂的动画 ...................................................................................................445
15.8 Core Animation 三维变换 .....................................................................................446
15.9 OpenGL 与Cocoa 视图 ........................................................................................450
15.10 Quartz 合成器 ......................................................................................................453
15.11 总结 ......................................................................................................................454
第16 章 支持PDF 和HTML ........................................................................455
16.1 AppKit 里的HTML...............................................................................................456
16.2 高级HTML 支持 ..................................................................................................458
16.2.1 WebKit 综述 ................................................................................................459
16.2.2 WebView 委托 ............................................................................................460
16.2.3 编辑HTML .................................................................................................461
16.3 WebKit 的动态接口 ..............................................................................................465
16.4 PDF 和Quartz .......................................................................................................471
16.5 显示PDF ..............................................................................................................472
16.5.1 理解PDF 标注 ............................................................................................476
16.5.2 设置文档的元数据 ......................................................................................479
16.5.3 编辑PDF .....................................................................................................480
16.6 小结 .......................................................................................................................484
第六部分 用户界面集成
第17 章 搜索与过滤 .....................................................................................486
17.1 维护文档索引 .......................................................................................................487
17.1.1 创建索引 ......................................................................................................487
17.1.2 对文档索引 ..................................................................................................489
17.1.3 搜索一个索引 ..............................................................................................490
17.2 显示搜索栏 ...........................................................................................................492
17.3 搜索文档 ...............................................................................................................493
17.4 Spotlight .................................................................................................................503
17.4.1 监视文件系统事件 ......................................................................................503
17.4.2 为元数据编制索引 ......................................................................................504
17.4.3 创建元数据导入插件 ..................................................................................506
17.4.4 用Spotlight 搜索 .........................................................................................511
17.4.5 Spotlight 的局限性 ......................................................................................514
17.5 断言 .......................................................................................................................515
17.5.1 断言语言 ......................................................................................................515
17.5.2 直接创建断言 ..............................................................................................517
17.5.3 使用断言 ......................................................................................................519
17.5.4 显示断言编辑器 ..........................................................................................520
17.6 Quick Look ............................................................................................................523
17.6.1 预览包 ..........................................................................................................524
17.6.2 实现Quick Look 插件 ................................................................................524
17.7 小结 .......................................................................................................................526
第18 章 联系人、日历和私密信息 ...............................................................528
18.1 地址簿概述 ...........................................................................................................529
18.1.1 一般概念 ......................................................................................................529
18.1.2 集合类 ..........................................................................................................530
18.2 获取联系人的信息 ...............................................................................................532
18.3 检索地址簿 ...........................................................................................................535
18.4 填写“ 我” vCard ....................................................................................................536
18.5 在地址簿里增加联系人 .......................................................................................538
18.6 保存私密信息 .......................................................................................................538
18.7 日历 .......................................................................................................................547
18.7.1 日历存储区的概念 ......................................................................................548
18.7.2 存取事件 ......................................................................................................549
18.7.3 新建日历 ......................................................................................................552
18.8 同步数据 ...............................................................................................................553
18.8.1 使用Apple 的纲要 ......................................................................................554
18.9 小结 .......................................................................................................................560
第19 章 剪贴板 ............................................................................................561
19.1 剪贴板概览 ...........................................................................................................561
19.2 剪贴板类型 ...........................................................................................................564
19.3 对类型进行过滤 ...................................................................................................566
19.4 属性列表数据 .......................................................................................................567
19.5 自编码对象 ...........................................................................................................567
19.6 文件和剪贴板 .......................................................................................................568
19.7 复制和粘贴 ...........................................................................................................569
19.8 拖动和投放 ...........................................................................................................571
19.8.1 拖动操作 ......................................................................................................572
19.8.2 投放操作 ......................................................................................................574
19.8.3 在自定义视图中实现拖放 ..........................................................................575
19.9 拖放和数据视图 ...................................................................................................582
19.10 小结 .....................................................................................................................588
第20 章 服务 ...............................................................................................589
20.1 服务示例 ...............................................................................................................589
20.2 一个计算服务 .......................................................................................................591
20.3 使用服务 ...............................................................................................................597
20.4 控制服务菜单 .......................................................................................................599
20.5 过滤器服务 ...........................................................................................................600
20.6 小结 .......................................................................................................................601
第21 章 增加脚本支持 .................................................................................602
21.1 脚本概览 ...............................................................................................................602
21.1.1 AppleScript 对象模型 ..................................................................................604
21.1.2 脚本词汇表 ..................................................................................................604
21.2 将对象脚本化 .......................................................................................................605
21.2.1 理解AppleScript 对象 ................................................................................606
21.2.2 提供对象指示符 ..........................................................................................607
21.2.3 提供一个脚本定义 ......................................................................................609
21.2.4 处理脚本命令 ..............................................................................................613
21.2.5 测试脚本支持 ..............................................................................................617
21.3 在Cocoa 程序中写脚本 .......................................................................................620
21.4 把服务显露给Automator .....................................................................................626
21.5 其他的脚本技术 ...................................................................................................626
21.5.1 分布式对象 ..................................................................................................627
21.5.2 F-Script .........................................................................................................627
21.6 小结 .......................................................................................................................628
第七部分 系统编程
第22 章 联网 ...............................................................................................630
22.1 底层套接字编程 ...................................................................................................630
22.2 Cocoa 流 ................................................................................................................636
22.3 URL 的处理 ..........................................................................................................637
22.3.1 创建URL .....................................................................................................638
22.3.2 从URL 装入 ................................................................................................638
22.3.3 扩展URL 装载系统 ....................................................................................641
22.4 Bonjour ..................................................................................................................644
22.4.1 多播DNS .....................................................................................................644
22.4.2 DNS 服务发现 .............................................................................................645
22.4.3 浏览服务 ......................................................................................................645
22.4.4 通告服务 ......................................................................................................648
22.5 分布式对象 ...........................................................................................................649
22.5.1 对象的发布 ..................................................................................................650
22.5.2 获取远程对象 ..............................................................................................652
22.5.3 一个简单的聊天程序 ..................................................................................653
22.6 总结 .......................................................................................................................660
第23 章 并发 ...............................................................................................661
23.1 分布式对象 ...........................................................................................................662
23.2 线程 .......................................................................................................................664
23.2.1 创建线程 ......................................................................................................664
23.2.2 线程局部存储 ..............................................................................................665
23.2.3 同步 ..............................................................................................................665
23.2.4 原子操作 ......................................................................................................673
23.2.5 未来与转发 ..................................................................................................676
23.2.6 线程压力测试 ..............................................................................................678
23.3 子进程 ...................................................................................................................679
23.3.1 创建子进程 ..................................................................................................679
23.3.2 跟子进程通信 ..............................................................................................680
23.3.3 共享内存 ......................................................................................................681
23.4 操作队列 ...............................................................................................................685
23.5 大调度中心 ...........................................................................................................690
23.6 OpenCL .................................................................................................................692
23.7 小结 .......................................................................................................................693
第八部分 附录
第24 章 可移植的Cocoa .............................................................................696
24.1 NeXT 和Sun .........................................................................................................696
24.2 iPhone 上的移动OS X .........................................................................................697
24.3 OpenStep 和GNU .................................................................................................697
24.4 GNUstep ................................................................................................................698
24.4.1 GORM ..........................................................................................................700
24.4.2 使用GNUstep 进行构建 .............................................................................701
24.4.3 Étoilé ............................................................................................................703
24.5 QuantumSTEP .......................................................................................................703
24.6 Cocotron .................................................................................................................704
24.7 GNUstepWeb 与SOPE .........................................................................................705
第25 章 高级技巧 ........................................................................................706
25.1 预处理器 ...............................................................................................................707
25.1.1 初始化程序 ..................................................................................................707
25.1.2 For Each .......................................................................................................707
25.1.3 Objective-C 常量 .........................................................................................709
25.1.4 简单模板 ......................................................................................................710
25.1.5 友好的调试输出 ..........................................................................................711
25.2 控制结构 ...............................................................................................................711
25.2.1 NSDictionary 滥用 ......................................................................................712
25.2.2 键—值编码 ..................................................................................................713
25.2.3 Trampoline ...................................................................................................714
25.2.4 状态机 ..........................................................................................................717
25.3 整洁代码 ...............................................................................................................719
25.3.1 Toll-Free 桥接 ..............................................................................................719
25.3.2 多重继承 ......................................................................................................720
25.4 优化 .......................................................................................................................722
25.4.1 实例方法指针 ..............................................................................................723
25.4.2 推翻动态调度 ..............................................................................................724
25.4.3 栈中的类 ......................................................................................................726
25.4.4 对象池 ..........................................................................................................730
25.4.5 内联函数 ......................................................................................................731
25.4.6 避免对象 ......................................................................................................733
25.5 Cocoa 跨平台 ........................................................................................................734
25.6 运行系统 ...............................................................................................................737
25.6.1 理解对象实现 ..............................................................................................738
25.6.2 枚举所有子类 ..............................................................................................740
25.6.3 给一个类增加方法 ......................................................................................743
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Cocoa编程开发者手册
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Objective-C程序设计（第6版）
预览目录
1引言	1
第一部分Objective-C语言
2Objective-C编程	9
3类、对象和方法	29
4数据类型和表达式	53
5循环结构	73
6选择结构	95
7类	129
8继承	155
9多态、动态类型和动态绑定	181
10变量和数据类型	199
11分类和协议	223
12预处理程序	239
13基本的C语言特性	253
第二部分Foundation框架
14Foundation框架简介	311
15数字、字符串和集合	315
16使用文件	379
17内存管理和自动引用计数	409
18复制对象	423
19归档	435
第三部分Cocoa、Cocoa Touch与iOS的SDK
20Cocoa和Cocoa Touch简介	453
21编写iOS应用程序	457
附录A术语表	489
附录B地址簿示例源代码	501
目录
1引言	1
1.1  本书内容	2
1.2  本书组织方式	3
1.3  支持	5
1.4  致谢	6
1.5  第6版前言	7
第一部分Objective-C语言
2Objective-C编程	9
2.1  编译并运行程序	9
2.1.1  使用Xcode	10
2.1.2  使用Terminal	17
2.2  解释第一个程序	20
2.3  显示变量的值	24
2.4  小结	26
2.5  练习	27
3类、对象和方法	29
3.1  到底什么是对象	29
3.2  实例和方法	30
3.3  用于处理分数的Objective-C类	32
3.4  @interface部分	35
3.4.1  选择名称	35
3.4.2  类方法和实例方法	37
3.5  @implementation部分	39
3.6  program部分	41
3.7  实例变量的访问及数据封装	47
3.8  小结	51
3.9  练习	51
4数据类型和表达式	53
4.1  数据类型和常量	53
4.1.1  int类型	53
4.1.2  float类型	54
4.1.3  char类型	54
4.1.4  限定词：long、long long、short、unsigned及signed	55
4.1.5  id类型	56
4.2  算术表达式	57
4.2.1  运算符的优先级	57
4.2.2  整数运算和一元负号运算符	60
4.2.3  模运算符	62
4.2.4  整型值和浮点值的相互转换	63
4.2.5  类型转换运算符	65
4.3  赋值运算符	66
4.4  Calculator类	67
4.5  练习	70
5循环结构	73
5.1  for语句	74
5.1.1  键盘输入	81
5.1.2  嵌套的for循环	83
5.1.3  for循环的变体	85
5.2  while语句	86
5.3  do语句	90
5.4  break语句	92
5.5  continue语句	92
5.6  小结	93
5.7  练习	93
6选择结构	95
6.1  if语句	95
6.1.1  if-else结构	100
6.1.2  复合条件测试	103
6.1.3  嵌套的if语句	106
6.1.4  else if结构	107
6.2  switch语句	117
6.3  Boolean变量	120
6.4  条件运算符	125
6.5  练习	127
7类	129
7.1  分离接口和实现文件	129
7.2  合成存取方法	135
7.3  使用点运算符访问属性	137
7.4  具有多个参数的方法	139
7.4.1  不带参数名的方法	141
7.4.2  关于分数的操作	141
7.5  局部变量	145
7.5.1  方法的参数	146
7.5.2  static关键字	147
7.6  self关键字	150
7.7  在方法中分配和返回对象	151
7.7.1  扩展类的定义和接口文件	153
7.8  练习	153
8继承	155
8.1  一切从根类开始	155
8.1.1  找出正确的方法	159
8.2  通过继承来扩展：添加新方法	160
8.2.1  Point类和对象创建	164
8.2.2  @class指令	165
8.2.3  具有对象的类	169
8.3  覆写方法	173
8.3.1  选择哪种方法	174
8.4  抽象类	177
8.5  练习	178
9多态、动态类型和动态绑定	181
9.1  多态：相同的名称，不同的类	181
9.2  动态绑定和id类型	184
9.3  编译时和运行时检查	186
9.4  id数据类型与静态类型	187
9.4.1  动态类型的参数和返回类型	188
9.5  有关类的问题	189
9.6  使用@try处理异常	194
9.7  练习	196
10变量和数据类型	199
10.1  对象的初始化	199
10.2  作用域回顾	203
10.2.1  关于属性、存取方法和实例变量	203
10.2.2  全局变量	204
10.2.3  静态变量	206
10.3  枚举数据类型	208
10.4  typedef语句	212
10.5  数据类型转换	213
10.5.1  转换规则	213
10.6  位运算符	215
10.6.1  按位与运算符	216
10.6.2  按位或运算符	217
10.6.3  按位异或运算符	218
10.6.4  一次求反运算符	218
10.6.5  向左移位运算符	220
10.6.6  向右移位运算符	221
10.7  练习	221
11分类和协议	223
11.1  分类	223
11.2  类的扩展	228
11.2.1  关于分类的注意事项	229
11.3  协议和代理	230
11.3.1  代理	233
11.3.2  非正式协议	234
11.4  合成对象	235
11.5  练习	236
12预处理程序	239
12.1  #define语句	239
12.1.1  更高级的定义类型	241
12.2  #import语句	246
12.3  条件编译	247
12.3.1  #ifdef、#endif、#else和#ifndef语句	248
12.3.2  #if和#elif预处理程序语句	250
12.3.3  #undef语句	251
12.4  练习	251
13基本的C语言特性	253
13.1  数组	254
13.1.1  数组元素的初始化	256
13.1.2  字符数组	257
13.1.3  多维数组	258
13.2  函数	260
13.2.1  参数和局部变量	262
13.2.2  函数的返回结果	263
13.2.3  函数、方法和数组	267
13.3  块（Blocks）	268
13.4  结构	272
13.4.1  结构的初始化	275
13.4.2  结构中的结构	276
13.4.3  关于结构的补充细节	278
13.4.4  不要忘记面向对象编程思想	279
13.5  指针	279
13.5.1  指针和结构	283
13.5.2  指针、方法和函数	285
13.5.3  指针和数组	287
13.5.4  指针运算	297
13.5.5  指针和内存地址	299
13.6  它们不是对象	299
13.7  其他语言特性	300
13.7.1  复合字面量	300
13.7.2  goto语句	301
13.7.3  空语句	301
13.7.4  逗号运算符	301
13.7.5  sizeof运算符	302
13.7.6  命令行参数	303
13.8  工作原理	305
13.8.1  事实#1：实例变量存储在结构中	306
13.8.2  事实#2：对象变量实际上是指针	306
13.8.3  事实#3：方法是函数，而消息表达式是函数调用	307
13.8.4  事实#4：id类型是通用指针类型	307
13.9  练习	307
第二部分Foundation框架
14Foundation框架简介	311
14.1  Foundation文档	311
15数字、字符串和集合	315
15.1  数字对象	315
15.2  字符串对象	321
15.2.1  NSLog函数	321
15.2.2  description方法	322
15.2.3  可变对象与不可变对象	323
15.2.4  可变字符串	330
15.3  数组对象	336
15.3.1  制作地址簿	341
15.3.2  数组排序	358
15.4  词典对象	364
15.4.1  枚举词典	366
15.5  集合对象	369
15.5.1  NSIndexSet	373
15.6  练习	375
16使用文件	379
16.1  管理文件和目录：NSFileManager	380
16.1.1  使用NSData类	385
16.1.2  使用目录	386
16.1.3  枚举目录中的内容	389
16.2  使用路径：NSPathUtilities.h	391
16.2.1  常用的路径处理方法	394
16.2.2  复制文件和使用NSProcessInfo类	396
16.3  基本的文件操作：NSFileHandle	400
16.4  NSURL类	405
16.5  NSBundle类	406
16.6  练习	407
17内存管理和自动引用计数	409
17.1  自动垃圾收集	411
17.2  手工管理内存计数	411
17.2.1  对象引用和自动释放池	412
17.3  事件循环和内存分配	414
17.4  手工内存管理规则的总结	416
17.5  自动引用计数（ARC）	417
17.6  强变量	418
17.7  弱变量	419
17.8  @autoreleasepool块	420
17.9  方法名和非ARC编译代码	420
18复制对象	423
18.1  copy和mutableCopy方法	424
18.2  浅复制与深复制	426
18.3  实现<NSCopying>协议	428
18.4  用设值方法和取值方法复制对象	431
18.5  练习	433
19归档	435
19.1  使用XML属性列表进行归档	435
19.2  使用NSKeyedArchiver归档	437
19.3  编码方法和解码方法	439
19.4  使用NSData创建自定义档案	446
19.5  使用归档程序复制对象	450
19.6  练习	451
第三部分Cocoa、Cocoa Touch与iOS的SDK
20Cocoa和Cocoa Touch简介	453
20.1  框架层	453
20.2  Cocoa Touch	454
21编写iOS应用程序	457
21.1  iOS SDK	457
21.2  第一个iPhone应用程序	457
21.2.1  创建新的iPhone应用程序项目	460
21.2.2  输入代码	463
21.2.3  设计界面	466
21.3  iPhone分数计算器	474
21.3.1  启动新的Fraction_Calculator项目	475
21.3.2  定义视图控制器	476
21.3.3  Fraction类	481
21.3.4  处理分数的Calculator类	485
21.3.5  设计UI	486
21.4  小结	487
21.5  练习	488
附录A术语表	489
附录B地址簿示例源代码	501
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Objective-C程序设计（第6版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iPad应用开发实战
《iPad应用开发实战》目录
前言
第1章   iPad开发入门 / 1
1.1   iPad概览 / 2
1.2   从PC到iPad / 3
1.3   从iPhone到iPad / 4
1.4   iPad开发的必备知识 / 5
1.5   iPad开发的必备工具 / 5
1.6   第一个iPad应用—Hello World / 6
1.6.1   建立工程：HelloWorldMail / 7
1.6.2   工程概览 / 8
1.6.3   添加按钮 / 15
1.6.4   邮件编辑器 / 17
1.7   小结 / 19
第2章   视图和视图控制器 / 20
2.1   视图（UIView） / 21
2.1.1   视图概览 / 21
2.1.2   窗口（UIWindow） / 22
2.1.3   网页视图（UIWebView） / 23
2.2   视图控制器（UIViewController） / 23
2.2.1   视图控制器概览 / 23
2.2.2   导航控制器（UINavigationController） / 24
2.2.3   标签控制器（UITabBarController） / 25
2.3   弹出控制器（UIPopoverController） / 26
2.4   分割视图控制器（UISplitViewController） / 27
2.5   实例：iPad网页导航 / 27
2.5.1   基于分割视图控制器的应用 / 27
2.5.2   网页视图 / 29
2.5.3   表格视图 / 31
2.6   小结 / 34
第3章   内存管理 / 35
3.1   对象所有权、引用计数与释放 / 36
3.2   自动释放与便捷方法 / 38
3.3   访问器方法与属性 / 39
3.4   改变引用计数的特殊情况 / 40
3.5   内存管理总结 / 41
第4章   键盘输入和自定义键盘 / 42
4.1   文本输入与系统键盘 / 43
4.2   自定义键盘之一：替代系统键盘 / 47
4.3   自定义键盘之二：与系统键盘共存 / 50
4.4   自定义键盘之三：修改系统键盘 / 51
4.5   小结 / 55
第5章   绘图 / 56
5.1   iOS概览 / 57
5.2   iOS中的绘图技术 / 58
5.3   Quartz 2D / 59
5.4   贝济埃路径的使用 / 61
5.5   画图实战：绘图板 / 62
5.6   小结 / 74
第6章   容器类的使用 / 76
6.1   数组（NSArray）与可变数组（NSMutableArray） / 77
6.1.1   数组的创建与初始化 / 78
6.1.2   查询数组 / 78
6.1.3   产生新数组 / 79
6.1.4   比较数组 / 79
6.1.5   保存数组 / 79
6.1.6   添加对象（NSMutableArray方法） / 79
6.1.7   移除对象（NSMutableArray方法） / 79
6.1.8   替换对象 / 80
6.2   字典（NSDictionary）与可变字典（NSMutableDictionary） / 80
6.2.1   创建字典 / 80
6.2.2   获取关键字与数值 / 81
6.2.3   保存字典 / 81
6.2.4   添加条目（NSMutableDictionary方法） / 81
6.2.5   移除条目（NSMutableDictionary方法） / 81
6.3   集合（NSSet）与可变集合（NSMutableSet） / 81
6.3.1   创建集合 / 82
6.3.2   读取集合 / 82
6.3.3   比较集合 / 82
6.3.4   添加或移除对象（NSMutableSet方法） / 82
6.3.5   集合操作（NSMutableSet方法） / 83
6.4   容器在拼图游戏中的使用 / 83
6.4.1   拼图游戏的设计 / 83
6.4.2   相关定义 / 84
6.4.3   Piece类与字典 / 87
6.4.4   Puzzle类与字典和数组 / 89
6.5   小结 / 93
第7章   文件系统 / 94
7.1   iOS文件系统概述 / 95
7.2   通过模拟器看应用的包裹 / 96
7.3   文件管理器 / 97
7.4   NSString的路径功能 / 98
7.5   拼图游戏中的文件管理 / 99
7.6   小结 / 107
第8章   绘图进阶 / 108
8.1   屏幕旋转 / 109
8.2   绘制曲线和切割图案 / 111
8.3   高级绘图在拼图游戏中的应用 / 114
8.4   小结 / 122
第9章   触摸事件与手势识别 / 123
9.1   触摸事件、视图结构与响应顺序 / 124
9.2   官方SDK中的手势识别器 / 126
9.3   Photo Jigsaw中对触摸的响应 / 128
9.4   自定义的手势识别器 / 135
9.5   小结 / 136
第10章   同时性编程与定时器 / 137
10.1   同时性编程概述 / 138
10.2   操作队列 / 140
10.3   拼图游戏中的同时性编程 / 142
10.4   定时器及其在拼图游戏中的使用 / 146
10.5   小结 / 148
第11章   动画 / 150
11.1   iOS动画技术概述 / 151
11.2   用图像视图来逐帧显示动画 / 153
11.3   视图的动画技术 / 154
11.4   CogRadio应用 / 156
11.5   CogRadio应用中的动画 / 160
11.6   小结 / 166
第12章   多媒体播放 / 167
12.1   音频播放 / 168
12.1.1   使用系统声音服务来播放音效 / 168
12.1.2   音频播放器 / 169
12.1.3   音乐播放器 / 169
12.2   视频播放 / 171
12.2.1   电影播放器 / 171
12.2.2   在网页视图中嵌入播放 / 174
12.3   CogRadio中的多媒体 / 175
12.4   小结 / 178
第13章   cocos2d开发入门 / 179
13.1   cocos2d简介 / 181
13.1.1   导演 / 181
13.1.2   场景和层 / 182
13.1.3   精灵与动作 / 183
13.2   创建cocos2d工程并添加场景 / 184
13.3   添加按钮、精灵和动作 / 185
13.4   粒子系统 / 187
13.5   小结 / 193
第14章   连接设备 / 195
14.1   游戏工具箱简介 / 196
14.1.1   游戏中心 / 196
14.1.2   点对点连接 / 198
14.1.3   语音聊天 / 198
14.2   实现点对点连接 / 199
14.3   OpenFeint 游戏平台 / 203
14.4   小结 / 209
第15章   加速度传感器 / 210
15.1   加速度传感器概述 / 211
15.2   飞机躲子弹游戏 / 212
15.3   倾斜设备来控制飞机 / 216
15.4   分离重力成分 / 219
15.5   小结 / 221
第16章   地图与连接服务器 / 222
16.1   地图编程概述 / 223
16.2   实战：地图编程 / 224
16.3   与服务器交互 / 227
16.4   实战：与服务器交互 / 229
16.5   小结 / 235
第17章   Objective-C与XCode进阶 / 236
17.1   NSLog扩展 / 237
17.2   范畴的使用 / 239
17.3   读写器的内存管理 / 240
17.4   KVO / 242
17.5   单例 / 243
17.6   运行时的对象查询 / 245
17.7   调试器的巧用 / 246
17.8   XCode快捷键 / 247
17.9   小结 / 249
第18章   iPad应用的开发证书与营销 / 250
18.1   开发证书的获取 / 251
18.2   联机调试 / 254
18.3   应用名字、说明以及图片 / 258
18.4   应用的提交 / 261
18.5   应用的推广 / 262
18.6   应用升级与销售技巧 / 263
18.7   iPad开发的长期策略 / 265
18.8   小结 / 266
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iPad应用开发实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Swifter : 100 个 Swift 开发必备 Tip
推荐序iii
序vii
I Swift 新元素1
Tip 1. 柯里化(Currying) 2
Tip 2. 将protocol 的方法声明为mutating 5
Tip 3. Sequence 6
Tip 4. 多元组（Tuple） 9
Tip 5. @autoclosure 和?? 操作符11
Tip 6. Optional Chaining 14
Tip 7. 操作符16
Tip 8. func 的参数修饰19
Tip 9. 方法参数名称省略22
Tip 10. 字面量转换25
Tip 11. 下标30
Tip 12. 方法嵌套32
Tip 13. 命名空间35
Tip 14. Any 和AnyObject 38
Tip 15. typealias 和泛型接口41
Tip 16. 可变参数函数44
Tip 17. 初始化方法顺序46
Tip 18. Designated、Convenience 和Required 48
Tip 19. 初始化返回nil 51
Tip 20. protocol 组合54
Tip 21. static 和class 58
Tip 22. 多类型和容器61
Tip 23. default 参数64
Tip 24. 正则表达式67
Tip 25. 模式匹配70
Tip 26. … 和..< 73
Tip 27. AnyClass、元类型和.self 75
Tip 28. 接口和类方法中的Self 78
Tip 29. 动态类型和多方法81
Tip 30. 属性观察83
Tip 31. final 86
Tip 32. lazy 修饰符和lazy 方法89
Tip 33. find 93
Tip 34. Reflection 和MirrorType 95
Tip 35. 隐式解包Optional 98
Tip 36. 多重Optional 100
Tip 37. Optional Map 103
II 从Objective-C/C 到Swift 105
Tip 38. Selector 106
Tip 39. 实例方法的动态调用109
Tip 40. 单例111
Tip 41. 条件编译114
Tip 42. 编译标记116
Tip 43. @UIApplicationMain 118
Tip 44. @objc 和dynamic 120
Tip 45. 可选接口123
Tip 46. 内存管理，weak 和unowned 125
Tip 47. @autoreleasepool 132
Tip 48. 值类型和引用类型135
Tip 49. Foundation 框架137
Tip 50. String 还是NSString 139
Tip 51. UnsafePointer 141
Tip 52. C 指针内存管理144
Tip 53. COpaquePointer 和CFunctionPointer 146
Tip 54. GCD 和延时调用148
Tip 55. 获取对象类型152
Tip 56. 自省154
Tip 57. 类型转换157
Tip 58. KVO 160
Tip 59. 局部scope 163
Tip 60. 判等167
Tip 61. 哈希170
Tip 62. 类簇172
Tip 63. Swizzle 175
Tip 64. 调用C 动态库178
Tip 65. 输出格式化180
Tip 66. Options 182
Tip 67. 性能考虑184
Tip 68. 数组enumerate 186
Tip 69. 类型编码@encode 188
Tip 70. C 代码调用和@asmname 190
Tip 71. sizeof 和sizeofValue 192
Tip 72. delegate 194
Tip 73. Associated Object 196
Tip 74. Lock 198
Tip 75. Toll-Free Bridging 和Unmanaged 200
III Swift 与开发环境及一些实践203
Tip 76. Swift 命令行工具204
Tip 77. 随机数生成206
Tip 78. Printable 和DebugPrintable 208
Tip 79. 错误处理210
Tip 80. 断言213
Tip 81. fatalError 215
Tip 82. 代码组织和Framework 218
Tip 83. Playground 延时运行222
Tip 84. Playground 可视化224
Tip 85. Playground 与项目协作226
Tip 86. Playground 限制228
Tip 87. 数学和数字230
Tip 88. JSON 232
Tip 89. NSNull 234
Tip 90. 文档注释236
Tip 91. Log 输出238
Tip 92. 溢出240
Tip 93. 宏定义define 242
Tip 94. 属性访问控制244
Tip 95. Swift 中的测试246
Tip 96. Core Data 248
Tip 97. 闭包歧义250
Tip 98. 泛型扩展254
Tip 99. 兼容性256
Tip 100. 列举enum 类型258
后记及致谢261
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Swifter : 100 个 Swift 开发必备 Tip
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>老码说编程之玩转Swift江湖
第1章　从零搭建Swift开发环境	1
1.1　虚拟机安装Mac OS	1
1.1.1　准备工作	1
1.1.2　动手吧	2
1.2　X86电脑安装Mac OS	33
1.2.1　安装方式简介	33
1.2.2　规划分区	34
1.2.3　使用硬盘助手Leopard	37
1.2.4　使用变色龙Chemeleon	38
1.2.5　使用HFS+	39
1.2.6　正式安装	41
1.3　结语	42
第2章　玩转XCode	43
2.1　下载与安装XCode	43
2.1.1　下载XCode	43
2.1.2　安装XCode	43
2.2　XCode之初体验	44
2.2.1　欢迎界面	44
2.2.2　第一个Swift程序	46
2.2.3　初识主界面	50
2.2.4　工具栏	50
2.2.5　导航区域	51
2.2.6　编辑区域	57
2.2.7　调试区域	58
2.2.8　组件区域	60
2.3　XCode的调试大法	60
2.3.1　简单粗暴的NSLog	60
2.3.2　断点调试之LLDB	64
2.4　老码的锦囊—帮助文档	69
2.5　结语	71
第3章　Swift语法那些事儿	72
3.1　Swift的碑文	72
3.2　常量和变量	73
3.2.1　常量和变量的命名	74
3.2.2　打印常量和变量	75
3.3　类型标注	76
3.4　注释	77
3.4.1　单行注释	77
3.4.2　多行注释	77
3.5　分号的落寞	77
3.6　语法届的直性子—整型	78
3.7　语法届学术范—浮点型	79
3.8　类型安全和类型推导	79
3.9　数字字面量	81
3.10  数字类型的转换	83
3.10.1　整型间的转换	83
3.10.2　整型和浮点型间的转换	84
3.11  类型别名	85
3.12  布尔型	85
3.13  字符串和字符	86
3.13.1　字符串字面量	87
3.13.2　字符串的创建和初始化	88
3.13.3　字符串和字符的连接	89
3.13.4　字符计数	90
3.13.5　字符串内插	91
3.13.6　比较字符串	92
3.14  元组	94
3.15  可选类型	96
3.15.1　If语句和强制解封可选类型	97
3.15.2　可选绑定	97
3.15.3　隐式解封可选类型	98
3.16  断言	99
3.17  集合	100
3.17.1　集合的可变性	100
3.17.2　数组的类型	100
3.17.3　数组字面量	101
3.17.4　访问和修改数组	103
3.17.5　数组遍历	105
3.17.6　数组创建和初始化	106
3.18  字典	107
3.18.1　字典字面量	108
3.18.2　访问和修改字典	109
3.18.3　字典遍历	111
3.18.4　创建空字典	112
3.19  结构体类型	112
3.19.1　基础数据类型都是结构体	112
3.19.2　结构体的定义	113
3.20  枚举类型	114
3.20.1　枚举的定义	115
3.20.2　通过Switch语句匹配枚举的值	116
3.20.3　关联值	117
3.20.4　原始值	118
3.21  结语	119
第4章　离不开的运算符，丢不下的流程控	120
4.1　运算符的家谱	120
4.2　赋值运算符	122
4.3　算术运算符	124
4.3.1　加减乘除	124
4.3.2　求余运算符	128
4.3.3　自变运算符	129
4.3.4　阴阳运算符	131
4.4　区间运算符	132
4.5　逻辑运算符	133
4.5.1　9种逻辑运算符综合演练	134
4.5.2　三目运算符(?:)	135
4.5.3　空合运算符(??)	136
4.5.4　特征等于运算符(===)和特征不等运算符(!==)	137
4.6　位运算符	137
4.6.1　位求非(~)	137
4.6.2　位求与(&)	139
4.6.3　位求或(|)	140
4.6.4　位求异或(^)	141
4.6.5　移位操作	142
4.7　运算符专题	144
4.7.1　运算符里的江湖等级	144
4.7.2　圆括号—打破江湖规矩的利器	147
4.7.3　定制自己的运算符套餐	147
4.8　语法界的建筑师	153
4.8.1　for语句	153
4.8.2　while循环	156
4.8.3　if判断	158
4.8.4　switch分拣	158
4.8.5　switch中的case专题	159
4.9　打破控制流程的壁垒	164
4.9.1　continue的用法	164
4.9.2　break的用法	165
4.9.3　return的用法	166
4.9.4　fallthrogh的用法	166
4.10  结语	167
第5章　语法届的高富帅之函数和闭包	168
5.1　写个函数来瞧瞧	168
5.2　函数怎么用	170
5.3　参数列表的奥妙	170
5.3.1　多参数的参数列表	170
5.3.2　没有参数怎么办	171
5.3.3　谁说参数不能有名字	171
5.3.4　酷炫的可变参数	173
5.3.5　默认参数的魅力	174
5.3.6　当默认参数遇上可变参数	176
5.3.7　参数性别是常量还是变量	177
5.3.8　让我变，不管函数内外	178
5.4　仔细分析一下返回值的各种情况	179
5.4.1　没返回值也行	179
5.4.2　一个返回值没问题	180
5.4.3　多返回值也可以	180
5.5　挖挖函数的老底	181
5.6　函数的高级玩法	182
5.6.1　函数类型的变量与常量	182
5.6.2　函数类型作为参数	183
5.6.3　函数类型作为返回值	184
5.7　嵌套函数	185
5.8　柯里化函数	185
5.9　闭包—牛人的玩物	189
5.10  闭包表达式很好用	189
5.11  简化闭包表达式	191
5.12  尾闭包	192
5.13  捕获值	193
5.14  挖挖闭包的老底	195
5.15  结语	195
第6章　Swift之面向对象	196
6.1　面向对象的身世之谜	196
6.2　Swift中的OOP	199
6.2.1　何为类	199
6.2.2　何为实例	200
6.2.3　何为属性	201
6.2.4　何为方法	212
6.2.5　继承者们	218
6.2.6　让我们构造一个类的实例吧	223
6.2.7　析构—回光返照时的精彩	236
6.3　一根藤上三朵花：类、结构体和枚举	238
6.4　Swift内存总管—自动引用计数（ARC）	243
6.4.1　强引用—霸道的关系	243
6.4.2　闭环与解环	246
6.4.3　解环妙法之弱引用	249
6.4.4　解环妙法之无主引用	250
6.4.5　解环妙法之捕获列表	252
6.5　玩转Swift的各种类型	257
6.5.1　可选链—用前就知道是不是nil哦	257
6.5.2　类型检查和转换	266
6.5.3　俄罗斯娃娃—类型里面还有类型	275
6.5.4　我们都是Swift的主人—扩展	278
6.5.5　用需求规划蓝图—协议	287
6.6　通用是一种美德—泛型	307
6.6.1　泛型函数	309
6.6.2　通用类型	310
6.6.3　类型约束	312
6.6.4　关联类型	315
6.7　结语	318
第7章　Swift与Cocoa框架	319
7.1　Swift和Objective-C的互用	319
7.1.1　将Objective-C导入Swift	319
7.1.2　将Swift导入Objective-C	324
7.1.3　互用性浅析	326
7.2　Cocoa框架	328
7.2.1　Cocoa的前世今生	329
7.2.2　CocoaTouch的世界	330
7.2.3　基础类库之Foundation框架	331
7.2.4　用户界面之UIKit/AppKit	340
7.2.5　Core Data	340
7.2.6　使用Cocoa设计模式	350
7.3　Cocoapods—开源界的利器	359
7.3.1　为什么需要Cocoapods	359
7.3.2　什么是Cocoapods	359
7.3.3　安装Cocoapods	359
7.3.4　Cocoapods环境设置	361
7.3.5　构建Cocoapods项目	362
7.4　结语	371
第8章　踏上Swift开发iOS之旅	372
8.1　无规划，不产品	372
8.2　伟大的建筑从草图开始	373
8.2.1　原型工具万花筒	373
8.2.2　打造“魔法盒子”的原型	374
8.3　动工吧	379
8.3.1　认识我们的Magic Box项目	380
8.3.2　五个文件—梦想起飞的地方	381
8.3.3　Baby版魔法盒诞生	390
8.4　神马是沙盒	401
8.4.1　沙盒原理	401
8.4.2　沙盒在哪里	402
8.4.3　沙盒的操作	405
8.5　结语	408
第9章　Swift商用版魔法盒	409
9.1　确定商用版魔法盒架构	409
9.1.1　功能化确认	409
9.1.2　客户端UI级架构	410
9.1.3　系统部署架构	410
9.2　认识UIKit	411
9.3　编码之主框架搭建	413
9.3.1　部署文件目录	413
9.3.2　刷新项目目录	415
9.3.3　添加Cocoapods库	415
9.3.4　桥文件中增加库引用	417
9.3.5　实现主视图和主视图控制器	418
9.3.6　增加子页面视图（View）	420
9.3.7　增加主页面控制器（Controller）	423
9.3.8　建立控制器和视图间的连接	425
9.3.9　主视图控制器把子页面组织起来	426
9.4　编码之实现BoxPlaza页面	432
9.4.1　准备供测试的图片	432
9.4.2　准备配置文件	433
9.4.3　实现配置文件解析	435
9.4.4　为Box App添加Model	438
9.4.5　实现CollectionView	440
9.4.6　Autolayout的使用	442
9.4.7　设计CollectionViewCell	446
9.4.8　添加代码	447
9.5　编码之实现MyBox页面	449
9.5.1　设计MyBox UI	449
9.5.2　添加代码	449
9.6　编码之实现MyInfo页面	451
9.6.1　准备一个HTML 5小应用	452
9.6.2　添加代码	454
9.7　结语	455
第10章　Swift致富版魔法盒	456
10.1　移动App赢利模式探讨	456
10.2　广告平台的选择	457
10.3　多盟广告平台SDK的使用	458
10.3.1　注册平台应用	458
10.3.2　设置广告类型	459
10.3.3　下载广告发布标识和SDK	460
10.3.4　添加代码	460
10.4　真机调试	462
10.4.1　基础知识	462
10.4.2　创建应用标识	463
10.4.3　创建开发证书（Development）	466
10.4.4　创建标识文件	469
10.4.5　添加设备	473
10.4.6　启用真机调试	474
10.5　打包IPA测试	475
10.6　云测试平台FIR.im使用	479
10.7　上传AppStore	482
10.8　结语	484
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>老码说编程之玩转Swift江湖
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Swift与Cocoa框架开发
前言　　XIII
第1章　Cocoa开发工具　　1
1.1　Mac和iOS开发者计划　　1
1.1.1　注册开发者计划　　2
1.1.2　下载Xcode　　3
1.2　用Xcode创建自己的第一个项目　　4
1.3　开发一个简单的Swift应用程序　　11
1.3.1　设计界面　　11
1.3.2　连接代码　　13
1.4　使用iOS模拟器　　14
1.5　用TestFlight测试iOS App　　16
第2章　用Swift设计程序　　17
2.1　Swift程序设计语言　　17
2.2　playground　　19
2.3　变量和常量　　20
2.4　类型　　21
2.4.1　元组　　23
2.4.2　数组　　23
2.4.3　字典　　25
2.5　控制流　　25
2.6　函数与闭包　　29
2.6.1　将函数用作变量　　32
2.6.2　闭包　　34
2.7　对象　　35
2.7.1　继承　　36
2.7.2　初始化与反初始化　　37
2.7.3　属性　　38
2.7.4　协议　　40
2.7.5　扩展　　41
2.7.6　访问控制　　43
2.7.7　运算符　　44
2.7.8　泛型　　45
2.8　与Objective-C的互操作　　46
2.9　在同一项目中使用Objective-C和Swift　　46
2.9.1　在Objective-C中使用Swift对象　　46
2.9.2　在Swift中使用Objective-C　　47
2.10　模块　　48
2.11　内存管理　　48
2.12　字符串　　49
2.12.1　比较字符串　　50
2.12.2　查找字符串　　50
2.13　数据　　50
2.13.1　从文件和URL加载数据　　51
2.13.2　序列化与反序列化　　51
2.14　Cocoa中的设计模式　　52
2.14.1　模型- 视图- 控制器　　52
2.14.2　委托　　53
第3章　OS X和iOS上的应用程序　　56
3.1　什么是应用程序　　56
3.1.1　应用程序、框架、实用工具及其他　　57
3.1.2　App的构成　　58
3.1.3　用NSBundle在应用程序中查找资源　　60
3.2　应用程序生命周期　　61
3.2.1　OS X应用程序　　61
3.2.2　iOS应用程序　　62
3.3　应用程序沙盒　　67
3.4　用NSNotification发送通知　　70
第4章　图形用户界面　　72
4.1　OS X和iOS中的界面　　72
4.2　MVC和应用程序设计　　73
4.3　nib文件和故事板　　73
4.3.1　nib文件的结构　　74
4.3.2　故事板　　77
4.3.3　输出口和操作　　77
4.3.4　如何加载nib文件和故事板　　78
4.4　构建界面　　79
4.5　构建具有nib和约束的App　　81
4.6　iOS上的界面　　84
4.7　UI Dynamics　　87
4.7.1　UI和重力　　87
4.7.2　吸附UI　　88
4.8　Core Animation　　89
4.8.1　层　　90
4.8.2　动画　　91
第5章　闭包和操作队列　　94
5.1　Cocoa中的闭包　　95
5.2　操作队列中的并发　　96
5.3　操作队列和NSOperation　　96
5.4　在操作队列中执行工作　　97
5.5　融会贯通　　98
第6章　在视图上绘制图形　　103
6.1　如何绘制　　103
6.2　像素网格　　105
6.2.1　Retina显示屏　　106
6.2.2　像素与屏幕点　　107
6.3　在视图中绘制　　107
6.3.1　框架矩形　　107
6.3.2　边界矩形　　108
6.4　创建自定义视图　　109
6.4.1　用纯色填充　　110
6.4.2　处理路径　　111
6.4.3　创建自定义路径　　112
6.4.4　多条子路径　　114
6.4.5　阴影　　115
6.4.6　渐变　　119
6.4.7　变换　　121
第7章　SpriteKit　　123
7.1　SpriteKit的体系结构　　123
7.2　制作使用SpriteKit的App　　124
7.3　使用SpriteKit场景　　125
7.4　SpriteKit节点　　127
7.5　将精灵放在场景中　　128
7.6　对触碰作出响应　　129
7.7　使用纹理　　130
7.8　纹理贴图集　　131
7.9　使用文本　　131
7.10　用操作实现内容的动画　　133
7.11　使用形状节点　　134
7.12　使用图像特效节点　　135
7.13　向SpirteKit对象增加物理属性　　137
7.14　向SpriteKit对象添加接合　　138
7.15　SpriteKit场景照明　　138
7.16　约束　　139
7.17　在SpriteKit中使用阴影　　140
7.18　使用SpriteKit编辑器　　142
第8章　SceneKit　　143
8.1　SceneKit结构　　144
8.2　使用SceneKit　　144
8.3　添加SceneKit视图　　145
8.4　添加场景　　146
8.5　添加照相机　　146
8.6　添加3D对象　　147
8.7　添加光源　　149
8.8　为场景中的内容实现动画　　150
8.9　创建文本几何体　　151
8.10　使用材料　　153
8.11　命中检测　　157
8.12　约束　　158
8.13　从COLLADA文件中加载数据　　160
8.14　向场景中添加物理仿真　　162
第9章　音频与视频　　165
9.1　AV Foundation　　165
9.2　用AVPlayer播放视频　　166
9.2.1　AVPlayerLayer　　167
9.2.2　融会贯通　　167
9.2.3　AVKit　　170
9.2.4　iOS上的AVKit　　172
9.2.5　用AVAudioPlayer播放声音　　174
9.3　语音合成　　175
9.4　使用照片库　　176
9.4.1　从相机采集照片和视频　　176
9.4.2　开发照片应用程序　　178
9.4.3　照片库　　181
第10章　iCloud和数据存储　　182
10.1　偏好设置　　182
10.1.1　注册默认偏好设置　　183
10.1.2　访问偏好设置　　184
10.1.3　设定偏好设置　　184
10.2　使用文件系统　　184
10.2.1　使用NSFileManager　　186
10.2.2　文件存储位置　　189
10.3　使用沙盒　　189
10.3.1　启用沙盒　　190
10.3.2　打开和保存面板　　190
10.3.3　安全范围内的书签　　191
10.4　iCould　　192
10.5　iCloud存储什么　　193
10.6　为iCloud进行设置　　194
10.7　测试iCloud是否正常工作　　194
10.8　存储设置　　195
10.8.1　处理外部修改　　196
10.8.2　iOS上的相应内容　　197
10.9　iCloud存储　　199
10.9.1　OS X上的iCloud存储　　200
10.9.2　iOS上的iCloud存储　　204
10.10　文档选取器　　206
10.11　iCloud的最佳使用　　210
第11章　Cocoa绑定　　211
11.1　将视图绑定到模型　　211
11.2　一个简单的绑定App　　212
11.3　绑定到控制器　　214
11.4　数组和对象控制器　　216
11.5　一个更复杂的绑定App　　216
第12章　表格视图和集合视图　　223
12.1　数据源和委托　　223
12.2　表格视图　　224
12.2.1　iOS上的UITableView　　224
12.2.2　OS X上的NSTableView　　231
12.3　集合视图　　236
第13章　基于文档的应用程序　　240
13.1　NSDocument和UIDocument类　　241
13.2　MVC 中的文档对象　　241
13.2.1　文档的类型　　241
13.2.2　文档的角色　　242
13.3　OS X上基于文档的应用程序　　243
13.3.1　自动保存与版本　　243
13.3.2　用NSDocument表示文档　　243
13.3.3　保存简单数据　　244
13.3.4　保存更复杂的数据　　246
13.4　iOS上基于文档的应用程序　　250
第14章　联网　　257
14.1　连接　　257
14.1.1　NSURL　　258
14.1.2　NSURLRequest　　259
14.1.3　NSURLSession　　259
14.1.4　NSURLResponse和NSHTTPURLResponse　　260
14.2　开发联网应用程序　　261
14.3　Bonjour服务的发现　　262
14.4　Multipeer Connectivity　　264
第15章　与现实世界互动　　269
15.1　使用位置　　269
15.1.1　位置硬件　　270
15.1.2　Core Location框架　　271
15.1.3　使用Core Location　　272
15.2　地理编码　　275
15.3　区域监测和iBeacon　　278
15.4　位置与隐私　　281
15.5　地图　　281
15.5.1　使用地图　　281
15.5.2　标记地图　　282
15.5.3　地图与覆盖物　　282
15.6　设备运动　　284
15.6.1　使用Core Motion　　285
15.6.2　使用内置高度计　　288
15.6.3　使用计步器　　289
15.7　打印文档　　290
15.7.1　在OS X 上打印　　291
15.7.2　在iOS 上打印　　291
15.8　Game Controller　　293
15.9　App Nap　　295
15.10　用Touch ID验证　　296
15.11　Handoff　　300
第16章　EventKit　　305
16.1　理解事件　　305
16.2　访问事件存储库　　306
16.3　访问日历　　307
16.4　访问事件　　307
16.5　处理事件　　308
16.6　开发一个事件应用程序　　310
16.7　用户隐私　　314
第17章　Instruments和调试器　　315
17.1　开始使用Instruments　　316
17.1.1　Instruments 界面　　318
17.1.2　观察数据　　318
17.1.3　从Library中添加Instruments　　319
17.2　用Instruments解决问题　　320
17.3　循环保留和漏洞　　324
17.4　使用调试器　　326
17.4.1　设置断点　　326
17.4.2　查看内存内容　　328
17.4.3　使用调试器控制台　　329
17.5　视图调试　　329
17.6　测试框架　　331
17.6.1　编写测试　　332
17.6.2　编写异步测试　　333
17.6.3　性能测试块　　334
17.7　调试仪表　　334
17.8　性能优化　　334
第18章　共享与通知　　336
18.1　共享　　336
18.2　在iOS上共享　　339
18.3　在OS X上共享　　341
18.4　通知　　342
18.4.1　注册通知设置　　342
18.4.2　推送通知　　347
18.4.3　通知到达时会发生什么　　347
18.5　发送推送通知　　348
18.6　设置接收推送通知　　349
18.7　接收推送通知　　350
18.8　本地通知　　352
第19章　非标准App　　354
19.1　命令行工具　　354
19.2　偏好设置窗格　　355
19.2.1　偏好设置窗格如何工作　　356
19.2.2　偏好设置域　　356
19.2.3　生成示例偏好设置窗格　　357
19.3　状态栏项目　　359
19.4　多窗口iOS App　　361
第20章　处理文本　　364
20.1　国际化与本地化　　364
20.1.1　字符串文件　　364
20.1.2　创建一个示例本地化应用程序　　365
20.2　用NSFormatter设定数据格式　　372
20.3　设定数字、长度、质量、能量和数据的格式　　374
20.3.1　NSNumberFormatter　　374
20.3.2　 NSEnergyFormatter、NSMassFormatter 和NSLengthFormatter　　375
20.3.3　NSByteCountFormatter　　376
20.4　用NSDataDetector检测数据　　377
20.5　TextKit　　379
作者介绍　　382
封面介绍　　382
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Swift与Cocoa框架开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Objective-C编程全解（第3版）
第1章　面向对象的编程　　1
1.1　对象的概念　　2
1.1.1　面向功能的软件设计的局限性　　2
1.1.2　面向对象的模块化　　2
1.1.3　消息传递　　3
1.1.4　模块的抽象化　　4
1.1.5　对象的属性　　5
专栏　面向对象的方方面面　　5
1.1.6　类　　6
专栏　Cocoa和Objective-C的历史　　8
1.2　模块和对象　　8
1.2.1　软件模块　　8
1.2.2　高独立性的模块　　9
1.2.3　模块的信息隐蔽　　9
1.2.4　类的定义和接口　　10
1.2.5　消息发送的实现　　10
专栏　C语言的新标准　　11
第2章　Objective-C程序设计　13
2.1　对象和消息　　14
2.1.1　消息表达式　　14
2.1.2　消息选择器　　15
2.1.3　实例变量的生成和初始化　　16
2.2　类的定义　　17
2.2.1　类的接口声明　　17
专栏　各种各样的布尔类型　　18
专栏　不指定方法的返回值　　18
2.2.2　类的实现　　19
2.2.3　一个遥控器的例子　　19
2.3　编译　　21
2.3.1　简单的编译方法　　21
2.3.2　多文件编译　　23
2.4　程序的书写风格　　24
2.4.1　混合编程　　24
2.4.2　C语言函数的使用方法　　25
2.4.3　静态变量的定义　　26
2.4.4　头文件的引入　　26
专栏　参考文档和SDK　　27
专栏　Xcode的安装　　28
第3章　类和继承　29
3.1　继承的概念　　30
3.1.1　父类和子类　　30
3.1.2　类的层次结构　　31
3.2　利用继承定义新类　　32
3.2.1　继承的定义　　32
3.2.2　类定义和头文件　　33
3.2.3　继承和方法调用　　34
3.2.4　调用父类的方法　　34
3.2.5　初始化方法的定义　　35
3.3　使用继承的程序示例　　36
3.3.1　追加新方法的例子　　36
3.3.2　方法重写的例子　　37
3.4　继承和方法调用　　38
3.4.1　使用self调用方法　　38
3.4.2　使用super调用方法　　39
3.4.3　测试程序　　40
3.5　方法定义时的注意事项　　41
3.5.1　局部方法　　41
3.5.2　指定初始化方法　　42
专栏　Objective-C与开源软件　　44
第4章　对象的类型和动态绑定　45
4.1　动态绑定　　46
4.1.1　什么是动态绑定　　46
4.1.2　多态　　47
4.2　作为类型的类　　48
4.2.1　把类作为一种类型　　48
4.2.2　空指针nil　　49
专栏　关系表达式　　50
4.2.3　静态类型检查　　51
4.2.4　静态类型检查的总结　　53
4.3　编程中的类型定义　　54
4.3.1　签名不一致时的情况　　54
专栏　重载　　55
4.3.2　类的前置声明　　56
4.3.3　强制类型转换的使用示例　　57
4.4　实例变量的数据封装　　58
4.4.1　实例变量的访问权限　　58
4.4.2　访问器　　60
4.4.3　实例变量的可见性　　61
4.4.4　在实现部分中定义实例变量　　62
4.5　类对象　　63
4.5.1　什么是类对象　　63
4.5.2　类对象的类型　　64
4.5.3　类方法的定义　　65
4.5.4　类变量　　65
4.5.5　类对象的初始化　　66
4.5.6　初始化方法的返回值　　68
第5章　基于引用计数的内存管理　69
5.1　动态内存管理　　70
5.1.1　内存管理的必要性　　70
5.1.2　引用计数、自动引用计数和自动垃圾回收　　70
5.2　手动引用计数内存管理　　71
5.2.1　引用计数　　71
5.2.2　测试引用计数的例子　　73
5.2.3　释放对象的方法　　74
5.2.4　访问方法和对象所有权　　75
专栏　静态对象　　75
5.2.5　自动释放　　76
5.2.6　使用自动释放池时需要注意的地方　　77
5.2.7　临时对象的生成　　77
5.2.8　运行回路和自动释放池　　78
5.2.9　常量对象　　78
专栏　常量修饰符const　　79
5.3　分数计算器的例子　　80
5.3.1　分数类Faction　　80
5.3.2　保存计算结果的FracRegister类　　83
5.3.3　主函数和执行示例　　85
5.4　ARC概要　　88
5.4.1　什么是ARC　　88
5.4.2　禁止调用引用计数的相关函数　　89
5.4.3　管理自动释放池的新语法　　90
5.4.4　变量的初始值　　90
5.4.5　方法族　　90
5.4.6　方法dealloc的定义　　92
5.4.7　使用ARC的程序的编译　　93
5.4.8　ARC的基本注意事项　　94
5.4.9　使用ARC重构分数计算器　　94
5.5　循环引用和弱引用　　95
5.5.1　循环引用　　95
5.5.2　所有权和对象间的关系　　96
5.5.3　弱引用　　97
5.5.4　自动nil化的弱引用　　98
5.5.5　对象之间引用关系的基本原则　　99
5.6　ARC编程时其他一些注意事项　　100
5.6.1　可以像通常的指针一样使用的对象　　100
5.6.2　setter方法的注意事项　　101
5.6.3　通过函数的参数返回结果对象　　102
5.6.4　C语言数组保存Objective-C对象　　103
5.6.5　ARC对结构体的一些限制　　105
5.6.6　提示编译器进行特别处理　　106
第6章　垃圾回收　107
6.1　垃圾回收的概要　　108
6.1.1　查找不再使用的对象　　108
6.1.2　编程时的注意事项　　109
6.1.3　垃圾收集器　　110
6.1.4　finalize方法的定义　　111
6.1.5　编译时的设定　　112
6.1.6　引用计数管理方式中方法的处理　　113
6.1.7　使用垃圾回收编程小结　　114
6.2　垃圾回收的详细功能　　114
6.2.1　分代垃圾回收　　114
6.2.2　弱引用　　115
6.2.3　自动nil化　　115
6.2.4　通过垃圾回收回收动态分配的内存　　116
6.2.5　_　_strong修饰符的使用方法　　117
6.2.6　NSGarbageCollector类　　117
6.2.7　实时API　　118
6.3　内存管理方式的比较　　119
6.3.1　引用计数和垃圾回收　　119
6.3.2　更改内存管理方式　　120
6.3.3　各种内存管理方式的比较　　120
第7章　属性声明　123
7.1　属性是什么　　124
7.1.1　使用属性编程　　124
7.1.2　属性的概念　　125
专栏　内省　　125
7.2　属性的声明和功能　　126
7.2.1　显式声明属性　　126
7.2.2　属性的实现　　127
7.2.3　@synthesize和实例变量　　129
7.2.4　通过@synthesize生成实例变量　　130
7.2.5　给属性指定选项　　131
7.2.6　赋值时的选项　　132
7.2.7　原子性　　134
7.2.8　属性声明和继承　　135
7.2.9　方法族和属性的关系　　135
7.3　通过点操作符访问属性　　136
7.3.1　点操作符的使用方法　　136
7.3.2　复杂的点操作符的使用方法　　137
7.3.3　何时使用点操作符　　139
第8章　类NSObject和运行时系统　141
8.1　类NSObject　　142
8.1.1　根类的作用　　142
8.1.2　类和实例　　142
8.1.3　实例对象的生成和释放　　143
8.1.4　初始化　　144
8.1.5　对象的比较　　144
8.1.6　对象的内容描述　　145
8.2　消息发送机制　　145
8.2.1　选择器和SEL类型　　145
8.2.2　消息搜索　　146
8.2.3　以函数的形式来调用方法　　147
专栏　函数指针　　148
8.2.4　对self进行赋值　　149
8.2.5　发送消息的速度　　149
8.2.6　类对象和根类　　152
8.2.7　Target-action　paradigm　　153
8.2.8　Xcode中的动作方法和Outlet的写法　　155
8.3　Objective-C和Cocoa环境　　156
8.3.1　cocoa环境和Mac　OS　X　　156
8.3.2　Cocoa　Touch和iOS　　156
8.3.3　框架　　157
8.3.4　框架的构成和头文件　　157
8.4　全新的运行时系统　　159
8.4.1　对64位的对应和现代运行时系统　　159
8.4.2　数据模型　　159
8.4.3　64位模型和整数类型　　159
8.4.4　Core　Graphics的浮点数类型　　160
8.4.5　健壮实例变量　　161
专栏　条件编译　　162
第9章　Foundation框架中常用的类　163
9.1　对象的可变性　　164
9.1.1　可变对象和不可变对象　　164
9.1.2　可变对象的生成　　165
9.2　字符串类NSString　　166
9.2.1　常量字符串　　166
9.2.2　NSString　　167
9.2.3　NSMutableString　　174
9.3　NSData　　176
9.3.1　NSData　　176
9.3.2　NSMutableData　　178
9.4　数组类　　179
9.4.1　NSArray　　179
9.4.2　NSMutableArray　　183
9.4.3　数组对象的所有权　　184
9.4.4　快速枚举　　185
9.4.5　枚举器NSEnumerator　　186
9.4.6　快速枚举和枚举器　　187
9.4.7　集合类　　188
9.5　词典类　　189
9.5.1　NSDictionary　　191
9.5.2　NSMutableDicitionary　　193
9.6　包裹类　　194
9.6.1　NSNumber　　194
9.6.2　NSValue　　196
9.6.3　类型编码和@encode()　　196
9.6.4　NSNull　　197
9.7　NSURL　　198
9.7.1　关于URL　　198
9.7.2　NSURL的概要　　199
9.7.3　使用NSURL来访问资源　　201
第10章　范畴　203
10.1　范畴　　204
10.1.1　范畴　　204
10.1.2　范畴和文件的组织　　205
10.1.3　作为子模块的范畴　　206
10.1.4　方法的前向声明　　207
10.1.5　私有方法　　208
10.1.6　类扩展　　209
10.1.7　范畴和属性声明　　210
10.2　给现有类追加范畴　　211
10.2.1　追加新的方法　　211
10.2.2　追加方法的例子　　212
专栏　可变参数的方法的定义　　213
10.2.3　覆盖已有的方法　　214
10.3　关联引用　　215
10.3.1　关联引用的概念　　215
10.3.2　添加和检索关联　　215
10.3.3　对象的存储方法　　216
10.3.4　断开关联　　217
10.3.5　利用范畴的例子　　217
第11章　抽象类和类簇　221
11.1　抽象类　　222
11.1.1　什么是抽象类　　222
11.1.2　抽象类的例子　　223
11.2　类簇　　228
11.2.1　类簇的概念　　228
11.2.2　测试程序　　229
11.2.3　编程中的注意事项　　230
11.3　生成类簇的子类　　231
11.3.1　使用范畴　　231
11.3.2　基本方法的重定义　　231
11.3.3　生成字符串的子类　　233
第12章　协议　　235
12.1　协议的概念　　236
12.1.1　什么是协议　　236
12.1.2　对象的协议　　236
12.2　Objective-C中协议的声明　　238
12.2.1　协议的声明　　238
12.2.2　协议的采用　　239
12.2.3　协议的继承　　240
12.2.4　指定协议的类型声明　　240
12.2.5　协议的前置声明　　241
12.2.6　协议适用性检查　　241
12.2.7　必选功能和可选功能　　242
12.2.8　使用协议的程序示例　　242
专栏　类的多重继承　　245
12.3　非正式协议　　246
12.3.1　什么是非正式协议　　246
12.3.2　非正式协议的用途　　246
专栏　使用宏（macro）来区分系统版本的差异　　247
第13章　对象的复制及存储　　249
13.1　对象的复制　　250
13.1.1　浅复制和深复制　　250
13.1.2　区域　　251
13.1.3　复制方法的定义　　251
13.1.4　复制方法的例子　　252
13.1.5　实现可变复制　　254
13.2　归档　　255
13.2.1　对象的归档　　255
13.2.2　Foundation框架的归档功能　　255
13.2.3　归档方法的定义　　256
13.2.4　归档的方法定义　　257
13.2.5　归档和解档的初始化方法　　258
13.3　属性表　　259
13.3.1　属性表概况　　259
13.3.2　ASCII码格式属性表　　260
13.3.3　XML格式属性表　　261
13.3.4　属性表的变换和检查　　261
第14章　块对象　263
14.1　什么是块对象　　264
14.1.1　C编译器和GCD　　264
14.1.2　块对象的定义　　264
14.1.3　块对象和类型声明　　266
14.1.4　块对象中的变量行为　　267
14.1.5　排序函数和块对象　　269
14.2　块对象的构成　　271
14.2.1　块对象的实例和生命周期　　271
14.2.2　应该避免的编码模式　　273
14.2.3　块对象的复制　　273
14.2.4　指定特殊变量_　_block　　274
14.3　Objective-C和块对象　　276
14.3.1　方法定义和块对象　　276
14.3.2　作为Objective-C对象的块对象　　276
14.3.3　ARC和块对象　　277
14.3.4　对象内变量的行为　　277
14.3.5　集合类中添加的方法　　279
14.3.6　在窗体中使用块对象　　280
14.3.7　ARC中使用块对象时的注意事项　　281
第15章　消息发送模式　283
15.1　应用和运行回路　　284
15.1.1　运行回路　　284
15.1.2　定时器对象　　285
15.1.3　消息的延迟执行　　286
15.2　委托　　286
15.2.1　委托的概念　　286
15.2.2　Cocoa环境中的委托　　287
15.2.3　委托的设置和协议　　288
15.2.4　使用委托的程序　　289
15.3　通知　　289
15.3.1　通知和通知中心的概念　　289
15.3.2　通知对象　　290
15.3.3　通知中心　　291
15.3.4　通知队列　　293
专栏　通知名或异常名的定义　　294
15.4　反应链　　294
15.4.1　反应链概述　　294
15.4.2　应用中的反应链　　295
15.5　消息转送　　296
15.5.1　消息转送的构成　　296
15.5.2　消息转送需要的信息　　296
15.5.3　消息转送的定义　　297
15.5.4　禁止使用消息　　298
15.5.5　程序示例　　298
15.6　撤销构造　　300
15.6.1　撤销构造的概念　　300
15.6.2　在撤销管理器中记录操作　　301
第16章　应用的构造　303
16.1　应用束　　304
16.1.1　应用束的构造　　304
16.1.2　nib文件和各语言资源　　305
专栏　指定语言和地区　　305
16.1.3　信息文件的主要内容　　306
16.1.4　通过NSBundle访问资源　　308
16.1.5　iOS中资源的访问　　310
16.1.6　通用二进制　　311
16.2　加载nib文件　　312
16.2.1　nib文件实例化　　312
16.2.2　在Mac　OS　X中加载nib文件　　313
16.2.3　在iOS中加载nib文件　　313
16.2.4　nib文件内的包含循环　　314
16.2.5　nib文件内对象的初始化　　314
16.2.6　启动应用　　314
16.3　iOS的文件保存场所　　316
16.3.1　主要目录及功能　　316
16.3.2　获取目录路径　　317
16.4　用户默认　　317
16.4.1　保存设定值　　317
16.4.2　默认域　　318
16.4.3　查找用户默认的工具　　319
16.4.4　NSUserDefaults概要　　319
16.5　应用的本地化　　321
16.5.1　消息的本地化　　321
16.5.2　本地化指针　　322
专栏　本地化应用名　　323
16.5.3　本地化　　323
专栏　消息内的语序　　324
16.6　模块的动态加载　　324
16.6.1　可加载束　　325
16.6.2　使用可加载束的程序　　325
16.6.3　插件概述　　326
专栏　沙盒（App　Sandbox）　　327
第17章　实例：简单图像视图　329
17.1　Application框架和Interface　Builder　　330
17.2　程序概况　　330
17.2.1　对象间的关系　　330
17.2.2　通知　　331
17.2.3　撤销和重做　　332
17.2.4　可加载束和本地化　　332
17.2.5　用户默认　　332
17.3　编程介绍　　333
17.3.1　main函数和MyViewerCtrl类　　333
17.3.2　类WinCtr　　336
17.3.3　类MyInspector　　341
17.4　应用束的组织　　345
17.4.1　创建编译和设置文件　　345
17.4.2　程序运行例子　　346
17.4.3　GUI定义文件和程序　　347
专栏　Objective-C调试器的功能　　349
第18章　异常和错误　351
18.1　异常　　352
18.1.1　异常处理的概念　　352
18.1.2　Objective-C中的异常处理　　352
18.2　异常处理机制概述　　353
18.2.1　异常句柄和异常处理域　　353
18.2.2　异常表示类NSException　　353
18.2.3　异常处理机制的语法　　354
18.2.4　简单的异常处理的示例程序　　355
专栏　日志输出函数NSLog()　　356
18.3　异常的发生和传播　　　357
18.3.1　异常的传播　　357
18.3.2　自己触发异常　　357
18.3.3　用　@throw语法产生异常　　357
18.3.4　@catch　的特殊语法　　　358
18.3.5　异常传播和　@finally　　　358
18.3.6　异常处理程序的注意点　　359
18.4　断言　　360
18.4.1　断言是什么　　360
18.4.2　断言宏　　361
专栏　包含可变个数的参数的宏　　361
18.5　错误处理　　362
18.5.1　错误处理结构的目的　　362
18.5.2　表示错误的类　NSError的使用方法　　362
18.5.3　获取错误对象的信息　　364
18.5.4　生成自定义错误对象　　364
18.6　错误反应链　　366
18.6.1　错误反应链的结构　　366
18.6.2　错误对象的更改和恢复　　367
专栏　单元测试　　369
第　19章　并行编程　371
19.1　多线程　　372
19.1.1　线程的基本概念　　372
19.1.2　线程安全　　372
19.1.3　注意点　　373
19.1.4　使用　NSThread创建线程　　373
19.1.5　当前线程　　374
19.1.6　GUI应用和线程　　374
19.2　互斥　　375
19.2.1　需要互斥的例子　　375
19.2.2　锁　　376
19.2.3　死锁　　377
19.2.4　尝试获得锁　　378
19.2.5　条件锁　　378
19.2.6　NSRecursiveLock　　379
19.2.7　@synchronized　　379
19.3　操作对象和并行处理　　380
19.3.1　新的并行处理程序　　380
19.3.2　使用NSOperation的处理概述　　381
19.3.3　NSOperation和NSOperationQueue的简单用法　　382
19.3.4　等待至聚合任务终止　　383
19.3.5　使用操作对象的简单例子　　383
19.3.6　NSInvocationOperation的使用方法　　385
19.3.7　NSBlockOperation　的使用方法　　385
19.3.8　NSBlockOperation中添加多个块对象　　386
19.3.9　设置任务间的依赖　　386
19.3.10　任务的优先级设置　　388
19.3.11　设定最大并行任务数　　388
19.3.12　终止任务　　389
19.3.13　设置队列调度为中断状态　　389
19.4　并行处理的示例程序　　390
19.4.1　程序概要　　390
19.4.2　类BrowsingViewerCtrl　　390
19.4.3　类BrowsingWinCtrl　　392
19.4.4　类DrawOperation　　394
19.4.5　其他改变　　396
19.5　使用连接的通信　　397
19.5.1　连接　　398
19.5.2　代理　　398
19.5.3　方法的指针参数　　399
19.5.4　对象的副本传递　　400
19.5.5　异步通信　　401
19.5.6　设置协议　　401
19.5.7　运行回路的开始　　402
19.5.8　收发消息时的处理　　402
19.5.9　线程间连接　　404
19.5.10　进程间连接　　406
19.5.11　进程间连接的例子　　407
第20章　键值编码　411
20.1　键值编码概况　　412
20.1.1　什么是键值编码　　412
20.1.2　键值编码的基本处理　　412
20.2　访问属性　　414
20.2.1　键值编码的方法的行为　　414
20.2.2　属性值的自动转换　　415
20.2.3　字典对象和键值编码　　416
20.2.4　根据键路径进行访问　　416
20.2.5　一对一关系和一对多关系　　417
20.2.6　数组对象和键值编码　　419
20.3　一对多关系的访问　　420
20.3.1　带索引的访问器模式　　420
20.3.2　一对多关系的可变访问　　421
20.4　KVC标准　　422
20.4.1　验证属性值　　422
20.4.2　键值编码的准则　　423
20.5　键值观察　　424
20.5.1　键值观察的基础　　424
20.5.2　示例程序　　426
20.5.3　一对多关系的属性监视　　429
20.5.4　依赖键的登记　　429
20.6　Cocoa绑定概述　　430
20.6.1　目标-行为-模式的弱点　　430
20.6.2　什么是Cocoa绑定　　430
20.6.3　Cocoa绑定所需的方法　　431
20.6.4　例题：绘制二次函数图的软件　　432
20.6.5　自定义视图的方法定义　　434
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Objective-C编程全解（第3版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>React Native：用JavaScript开发移动应用
第1 章简介. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 1
本书中你将学到的内容: 1
如何阅读本书1
各章节的组织结构2
第2 章安装配置新项目. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 3
在已有的iOS 应用中集成React Native 5
首先建立一个简单的iOS 应用5
安装React Native 5
创建React Native 应用6
将React Naitve 集成到iOS 应用中去7
在设备上编译和运行13
在设备上运行13
练习： 15
第3 章Flexbox 布局介绍. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 18
Web 开发中的Flexbox 18
Flexbox 布局究竟是什么呢？ 19
教程20
1. 栅格系统20
2. 圣杯布局24
3. 带有可变宽度搜索框的流式导航条27
4. 垂直居中32
在React Native 中使用Flexbox 35
第4 章开发第一个应用. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 38
在React Native 中完成“Hello World” 38
创建项目38
使用Xcode 39
使用模拟器39
项目结构41
React 基础43
render 函数43
样式45
注册组件46
修改组件46
搜索框和数据检索50
增加搜索框50
方法代理51
检索数据52
显示结果55
组件状态55
创建我们的ListView 组件56
创建每个数据单元57
给列表中每个结果项设置样式59
结果60
第5 章在React Native 中使用导航. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 66
第6 章动画和滑动菜单. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 71
我们需要做什么71
相关的代码71
它是如何运行的75
如何使用76
扩展一些缺少的功能78
ii 目录
第7 章用React Native 绘制Canvas. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 79
使用WebView 79
如何使用80
使用ReactART library 82
在网页中使用ReactART 82
在React Native 中使用ReactART 85
结论90
使用React Native 播放音频90
第8 章你的第一个自定义视图. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 97
尝试一下98
第9 章Flux 介绍. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 104
Flux 是什么？ 104
从React 到Flux 105
Flux 110
练习119
第10 章处理复杂的应用程序状态. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 120
解决方案121
初识Baobab 121
把我们的状态树并入ReactJS 123
连接单个游标到组件124
连接多个游标到组件124
如何改变Baobab 树的状态125
应用程序状态127
一个稍微复杂的例子129
Optimize 130
1.ReactJS 的级联渲染131
2. 重复渲染131
第11 章使用Node 来实现服务端API . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 135
安装Express： 135
目录iii
Request 和Response 对象136
理解中间件139
从URL 中获取参数142
处理相关参数143
路由实例143
重构路由144
使用JSON 146
JSON 结构146
在JavaScript 中使用JSON 149
iOS 中的HTTP 149
Web 服务151
NSURL, NSURLRequest, NSURLSession 和NSURLSessionTask 152
构造URL 和发送请求153
使用NSURLSession 153
JSON 数据155
解析JSON 数据156
主线程156
更深入的学习：请求主体157
第12 章在React Native 中使用文件上传. . . . . . . . . . . . . . . . . . . . . . . . . . . . 159
创建服务器159
注解161
进行文件验证161
总结： 162
React Native 文件上传的客户端： 162
第13 章理解JavaScript Promise . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 171
事件并不是万能的172
Promise 术语173
JavaScript 中的Promise 174
浏览器支持和Polyfill 175
与其他库的兼容性175
让复杂的异步代码变得更加简单176
iv 目录
将Promise 用于XMLHttpRequest 177
链式调用178
数值处理178
异步操作队列179
错误处理180
图片181
JavaScript 异常和Promise 182
错误处理实战182
并行和串行—— 鱼和熊掌兼得184
创建序列185
Promise 和Generator 190
Promise API 参考193
静态方法193
构造器194
实例方法194
第14 章Fetch 简介. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 195
XMLHttpRequest 快要过时了195
fetch 基础使用195
使用XMLHttpRequest 实现195
使用fetch 实现196
响应中的元数据197
响应类型197
Promsie 方法链198
使用fetch 请求发送凭证信息199
问答环节200
我该如何取消一个fetch 请求？ 200
有相关的polyfill 么？ 200
为什么在service workers 中支持“no-cors”，而在window 中却不行？ 200
第15 章在iOS 中使用SQLite . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 201
创建并打开数据库202
绑定变量203
目录v
开发SQLite 模块204
第16 章集成Google Admob . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 209
创建项目209
将SDK 添加到你的Xcode 项目209
第17 章React Native 组件国际化. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 214
我要做什么214
工作机制214
安装步骤214
在项目中使用218
第18 章测试React Native 组件. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 221
安装配置测试环境221
编写测试程序226
第19 章附录：React.js 快速介绍. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 228
JSX - React 的特殊语法228
开始和运行229
组件- 构建React 的基石229
在我的javascript 代码中，出现了HTML 片段？ 230
组件和状态231
第20 章附录B：Objective-C Primer . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 233
类的基本语法233
方法233
属性234
实现235
规范237
第21 章webpack 入门. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 238
为什么要使用webpack? 238
webpack 也适合Browserify 用户238
vi 目录
启动webpack 239
loader 的使用239
样式表和图片240
功能开关241
多个入口点（entrypoint） 242
优化共用代码243
异步加载243
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>React Native：用JavaScript开发移动应用
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Swift基础教程
第一部分 基础知识
第1章 Swift简介　　2
1.1 革命性的改良　　2
1.2 准备工作　　3
1.2.1 专业工具　　3
1.2.2 与Swift交互　　3
1.3 准备出发　　4
1.4 开始探索Swift　　6
1.4.1 帮助和退出　　6
1.4.2 Hello World　　6
1.5 声明的威力　　7
1.6 常量　　9
1.7 类型　　10
1.7.1 检查上限和下限　　11
1.7.2 类型转换　　11
1.7.3 显式地声明类型　　12
1.8 字符串　　13
1.8.1 字符串拼接　　13
1.8.2 Character类型　　14
1.9 数学运算符　　14
1.9.1 表达式　　15
1.9.2 混用不同的数值类型　　15
1.9.3 数值表示　　16
1.10 布尔类型　　17
1.11 轻松显示　　18
1.12 使用类型别名　　19
1.13 使用元组将数据编组　　19
1.14 可选类型　　20
1.15 小结　　22
第2章 使用集合　　23
2.1 糖果罐　　23
2.1.1 数组中所有元素的类型都必须相同　　26
2.1.2 增长数组　　26
2.1.3 替换和删除值　　27
2.1.4 将值插入到指定位置　　28
2.1.5 合并数组　　29
2.2 字典　　30
2.2.1 查找条目　　31
2.2.2 添加条目　　32
2.2.3 更新条目　　33
2.2.4 删除条目　　33
2.3 数组的数组　　34
2.4 创建空数组和空字典　　36
2.4.1 空数组　　36
2.4.2 空字典　　37
2.5 迭代集合　　38
2.5.1 迭代数组　　38
2.5.2 迭代字典　　39
2.6 小结　　40
第3章 流程控制　　41
3.1 for循环　　41
3.1.1 计数　　41
3.1.2 包含还是不包含结束数字　　42
3.1.3 老式for循环　　43
3.1.4 简写　　44
3.2 游乐场　　45
3.3 决策　　48
3.3.1 if语句　　48
3.3.2 检查多个条件　　52
3.3.3 switch语句　　53
3.3.4 while循环　　56
3.3.5 检查代码　　58
3.3.6 提早结束循环　　61
3.4 小结　　61
第4章 编写函数和闭包　　62
4.1 函数　　62
4.1.1 使用Swift编写函数　　63
4.1.2 执行函数　　64
4.1.3 参数并非只能是数字　　65
4.1.4 可变参数　　66
4.1.5 函数是一级对象　　69
4.1.6 从函数返回函数　　71
4.1.7 嵌套函数　　73
4.1.8 默认参数　　76
4.1.9 函数名包含哪些内容　　77
4.1.10 清晰程度　　79
4.1.11 用不用外部参数名　　80
4.1.12 变量参数　　81
4.1.13 inout 参数　　84
4.2 闭包　　86
4.3 小结　　88
4.4 类　　89
第5章 使用类和结构组织代码　　90
5.1 对象无处不在　　90
5.2 Swift对象是使用类定义的　　91
5.2.1 定义类　　91
5.2.2 创建对象　　93
5.2.3 开门和关门　　93
5.2.4 锁门和开锁　　94
5.2.5 查看属性　　96
5.2.6 门应是各式各样的　　97
5.2.7 修改颜色　　99
5.3 继承　　99
5.3.1 创建基类　　100
5.3.2 创建子类　　103
5.3.3 实例化子类　　104
5.3.4 便利初始化方法　　109
5.3.5 枚举　　111
5.3.6 结构　　113
5.3.7 值类型和引用类型　　114
5.4 小结　　116
第6章 使用协议和扩展进行规范化　　117
6.1 遵循协议　　117
6.1.1 类还是协议　　117
6.1.2 协议并非只能定义方法　　119
6.1.3 遵循多个协议　　121
6.1.4 协议也可继承　　122
6.1.5 委托　　123
6.2 扩展　　126
6.2.1 扩展基本类型　　127
6.2.2 在扩展中使用闭包　　130
6.3 小结　　132
第二部分 使用Swift开发软件
第7章 使用Xcode　　134
7.1 Xcode简史　　134
7.2 创建第一个Swift项目　　135
7.3 Xcode界面　　136
7.3.1 与Xcode窗口交互　　138
7.3.2 运行应用程序　　139
7.4 开发应用程序　　140
7.4.1 腾出空间　　141
7.4.2 创建界面　　142
7.4.3 美化　　145
7.4.4 编写代码　　146
7.4.5 建立连接　　149
7.5 小结　　151
第8章 改进应用程序　　152
8.1 细节很重要　　152
8.1.1 显示金额　　152
8.1.2 再谈可选类型　　154
8.1.3 可选类型拆封　　154
8.1.4 美化　　155
8.1.5 另一种格式设置方法　　156
8.2 计算复利　　159
8.2.1 连接起来　　161
8.2.2 测试　　164
8.3 调试　　164
8.3.1 bug在哪里　　164
8.3.2 断点　　165
8.3.3 复杂的复利计算　　168
8.4 测试的价值　　169
8.4.1 单元测试　　169
8.4.2 编写测试　　169
8.4.3 如果测试未通过　　172
8.4.4 始终运行的测试　　173
8.5 小结　　174
第9章 Swift移动开发　　175
9.1 移动设备和台式机　　175
9.2 挑战记忆力　　175
9.2.1 考虑玩法　　176
9.2.2 设计UI　　176
9.3 创建项目　　177
9.4 创建用户界面　　179
9.4.1 创建按钮　　180
9.4.2 在模拟器中运行　　182
9.4.3 设置约束　　183
9.5 MVC 　　186
9.6 编写游戏代码　　186
9.6.1 类　　189
9.6.2 枚举　　190
9.6.3 视图对象　　190
9.6.4 模型对象　　190
9.6.5 可重写的方法　　191
9.6.6 游戏的方法　　191
9.6.7 处理输赢　　195
9.7 回到故事板　　196
9.8 开玩　　198
第10章 其他主题　　199
10.1 Swift内存管理　　199
10.1.1 值和引用　　199
10.1.2 引用计数　　200
10.1.3 引用循环　　200
10.1.4 演示引用循环　　201
10.1.5 编写测试代码　　202
10.1.6 断开引用循环　　204
10.1.7 闭包中的引用循环　　205
10.1.8 感恩　　207
10.2 逻辑运算符　　207
10.2.1 逻辑非　　207
10.2.2 逻辑与　　208
10.2.3 逻辑或　　208
10.3 泛型　　209
10.4 运算符重载　　210
10.5 相等和相同　　213
10.6 Swift脚本编程　　214
10.6.1 编辑脚本　　215
10.6.2 设置权限　　216
10.6.3 运行脚本　　216
10.6.4 工作原理　　216
10.7 获取帮助　　218
10.8 独闯江湖　　219
10.8.1 研究苹果公司提供的框架　　219
10.8.2 加入苹果开发者计划　　220
10.8.3 成为社区的一分子　　220
10.8.4 活到老学到老　　220
10.8.5 一路平安　　220
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Swift基础教程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Objective-C初学者指南
目录

第1章　 成为优秀的iOS或Mac 程序员　 　 1
1.1　 像开发人员一样思考　 　 1
1.2　 完成开发周期　 　 4
1.3　 面向对象编程简介　 　 5
1.4　 操纵Alice界面　 　 7
1.5　 总结　 　 9
1.6　 习题　 　 9
第2章　 编程基础　 　 10
2.1　 和Alice一起漫游仙境　 　 10
2.1.1　 导航菜单　 　 11
2.1.2　 世界窗口　 　 11
2.1.3　 Alice中的类、对象和实例　 　 13
2.1.4　 对象树　 　 14
2.1.5　 编辑区域　 　 14
2.1.6　 细节区域　 　 15
2.1.7　 事件区域　 　 15
2.2　 创建一个Alice应用——登月　 　 16
2.3　 你的第一个Objective-C程序　 　 20
2.4　 总结　 　 26
2.5　 习题　 　 27
第3章　 关于数据　 　 28
3.1　 编程中用到的数字系统　 　 28
3.1.1　 比特　 　 28
3.1.2　 字节　 　 30
3.1.3　 十六进制计数　 　 31
3.1.4　 Unicode　 　 32
3.2　 数据类型　 　 32
3.3　 在Alice中使用变量和数据类型　 　 33
3.4　 数据类型与Objective-C　 　 40
3.5　 确定问题所在　 　 44
3.6　 总结　 　 45
3.7　 习题　 　 45
第4章　 程序流的决策与计划　 　 46
4.1　 布尔逻辑　 　 46
4.1.1　 真值表　 　 47
4.1.2　 比较运算符　 　 49
4.2　 应用设计　 　 49
4.2.1　 伪代码　 　 50
4.2.2　 设计需求　 　 51
4.2.3　 流程图　 　 54
4.2.4　 示例应用的设计和流程图　 　 55
4.2.5　 应用的设计　 　 55
4.2.6　 使用循环来重复程序语句　 　 56
4.3　 示例应用在Alice中的程序实现　 　 58
4.4　 示例应用在Objective-C中的程序实现　 　 60
4.4.1　 嵌套的if语句和else-if语句　 　 62
4.4.2　 删掉多余字符　 　 62
4.4.3　 通过重构改善代码　 　 63
4.4.4　 运行应用　 　 63
4.5　 和Alice道别　 　 64
4.6　 总结　 　 64
4.7　 习题　 　 65
第5章　 基于Objective-C的面向对象编程　 　 66
5.1　 对象　 　 66
5.2　 什么是类　 　 67
5.3　 类的设计　 　 68
5.3.1　 属性的设计　 　 68
5.3.2　 方法的设计　 　 70
5.3.3　 类的实现　 　 71
5.4　 继承　 　 76
5.5　 为什么使用OOP　 　 77
5.5.1　 它无处不在　 　 77
5.5.2　 消除冗余代码　 　 77
5.5.3　 方便调试　 　 77
5.5.4　 方便替换　 　 78
5.6　 高阶课题　 　 78
5.6.1　 接口　 　 78
5.6.2　 多态　 　 78
5.7　 总结　 　 78
5.8　 习题　 　 79
第6章　 学习Objective-C和Xcode　 　 80
6.1　 Objective-C简史　 　 80
6.2　 理解语言的符号　 　 81
6.3　 面向对象概念　 　 82
6.4　 用Xcode再写一个程序　 　 86
6.5　 总结　 　 98
6.6　 习题　 　 99
第7章　 Objective-C的类、对象及方法　 　 100
7.1　 创建Objective-C类　 　 100
7.1.1　 声明接口和实例变量　 　 101
7.1.2　 发送消息（方法）　 　 102
7.1.3　 实现文件的使用　 　 104
7.1.4　 方法的编码　 　 105
7.2　 新类的使用　 　 106
7.2.1　 创建项目　 　 106
7.2.2　 添加对象　 　 109
7.2.3　 完成实现文件　 　 111
7.2.4　 创建用户界面　 　 113
7.2.5　 连接代码　 　 116
7.2.6　 运行程序　 　 120
7.2.7　 充分发挥类方法的作用　 　 121
7.3　 访问Xcode文档　 　 121
7.4　 总结　 　 122
7.5　 习题　 　 122
第8章　 Objective-C编程基础　 　 123
8.1　 集合类　 　 123
8.1.1　 使用NSSet　 　 124
8.1.2　 使用NSArray　 　 125
8.1.3　 NSDictionary　 　 126
8.1.4　 确定集合元素的类型　 　 127
8.2　 使用可变类　 　 127
8.2.1　 NSMutableSet　 　 127
8.2.2　 NSMutableArray　 　 128
8.2.3　 NSMutableDictionary　 　 129
8.3　 创建BookStore应用程序　 　 130
8.4　 引入实例变量　 　 134
8.4.1　 访问实例变量　 　 134
8.4.2　 使用获取方法和设置方法　 　 135
8.5　 引入属性　 　 137
8.5.1　 属性的使用　 　 138
8.5.2　 理解惯例的重要性　 　 139
8.6　 完成MyBookstore程序　 　 139
8.6.1　 创建视图　 　 140
8.6.2　 添加实例变量　 　 141
8.6.3　 添加描述　 　 142
8.6.4　 创建一个简单的数据模型类　 　 144
8.6.5　 更改MasterViewController　 　 147
8.6.6　 更改DetailViewController　 　 151
8.7　 总结　 　 152
8.8　 习题　 　 152
第9章　 比较数据　 　 153
9.1　 复习布尔逻辑　 　 153
9.2　 使用关系操作符　 　 154
9.2.1　 比较数值　 　 154
9.2.2　 创建示例Xcode应用　 　 155
9.3　 使用布尔表达式　 　 158
9.3.1　 比较字符串　 　 159
9.3.2　 比较日期　 　 161
9.3.3　 比较的结合　 　 163
9.4　 使用switch语句　 　 164
9.5　 总结　 　 165
9.6　 习题　 　 166
第10章　 创建用户界面　 　 167
10.1　 理解Interface Builder　 　 168
10.2　 模型?视图?控制器　 　 168
10.3　 人机交互界面准则（HIG）　 　 170
10.4　 用Interface Builder创建iPhone示例应用　 　 171
10.4.1　 使用Interface Builder　 　 174
10.4.2　 Dock　 　 175
10.4.3　 库　 　 176
10.4.4　 查看器窗格和选择器工具条　 　 177
10.4.5　 创建视图　 　 177
10.4.6　 使用插口　 　 179
10.4.7　 连接动作和对象　 　 180
10.4.8　 实现文件　 　 181
10.5　 总结　 　 182
10.6　 习题　 　 182
第11章　 数据存储　 　 183
11.1　 存储注意事项　 　 183
11.2　 首选项　 　 183
11.2.1　 首选项的写操作　 　 184
11.2.2　 首选项的读操作　 　 185
11.3　 数据库　 　 185
11.4　 在数据库中存储信息　 　 185
11.5　 开始使用Core Data　 　 186
11.6　 模型　 　 188
11.6.1　 受控对象上下文　 　 194
11.6.2　 设置界面　 　 194
11.7　 总结　 　 199
11.8　 习题　 　 200
第12章　 协议和委托　 　 201
12.1　 多继承　 　 201
12.2　 理解协议　 　 202
12.3　 理解委托　 　 203
12.4　 下一步　 　 204
12.5　 总结　 　 205
第13章　 内存、地址和指针　 　 206
13.1　 理解内存　 　 206
13.1.1　 比特、字节和基数　 　 207
13.1.2　 十进制转换为二进制　 　 207
13.1.3　 使用十六进制的计数法　 　 208
13.2　 理解内存地址的基础　 　 210
13.3　 内存的分配　 　 213
13.4　 解除分配内存　 　 215
13.5　 在Objective-C中用ARC管理内存　 　 217
13.6　 没有ARC的Objective-C内存管理　 　 219
13.6.1　 使用保留/释放模型　 　 220
13.6.2　 处理隐含的保留消息和自动释放　 　 221
13.6.3　 发送dealloc消息　 　 222
13.7　 如果出了问题　 　 223
13.8　 ARC注意事项　 　 224
13.9　 总结　 　 224
13.10　 习题　 　 225
第14章　 Xcode调试器　 　 226
14.1　 准备调试　 　 226
14.1.1　 设置断点　 　 227
14.1.2　 使用断点导航器　 　 228
14.1.3　 调试基础　 　 230
14.1.4　 使用调试器控件　 　 231
14.1.5　 使用单步控件　 　 232
14.1.6　 查看线程窗口和调用栈　 　 233
14.1.7　 变量的调试　 　 234
14.2　 处理代码错误和警告　 　 235
14.3　 总结　 　 239

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Objective-C初学者指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Cocos2D权威指南
前　言
第一部分　基础篇
第1章　开始前的准备工作/ 2
1.1　什么是Cocos2D/ 2
1.1.1　Cocos2D的特点/ 2
1.1.2　Cocos2D的主要功能/ 2
1.1.3　Cocos2D应用/ 3
1.2　下载与安装/ 4
1.2.1　下载Cocos2D/ 4
1.2.2　安装Cocos2D模板/ 6
1.2.3　创建Cocos2D-iPhone的帮助文档/ 9
1.2.4　使用Cocos2D中内置的项目/ 10
1.3　HelloCocos2D实例/ 10
1.3.1　创建HelloCocos2D项目/ 10
1.3.2　添加小飞机/ 11
1.3.3　让飞机飞行/ 13
1.4　深入学习HelloCocos2D项目/ 13
1.4.1　初识场景和节点/ 13
1.4.2　实现代码分析/ 14
1.5　在设备上运行HelloCocos2D项目/ 23
1.5.1　使用Xcode的自动设置/ 23
1.5.2　在设备上编译运行项目/ 24
1.6　本章小结/ 24
第2章　你的第一款iPhone游戏—垂直射击游戏/ 25
2.1　准备工作/ 25
2.2　构建游戏场景/ 28
2.2.1　添加资源目录/ 28
2.2.2　添加游戏背景/ 28
2.2.3　添加玩家飞机/ 29
2.2.4　添加敌机/ 30
2.3　玩家交互/ 33
2.3.1　添加加速计移动/ 33
2.3.2　添加子弹并射击/ 35
2.4　碰撞检测/ 37
2.5　游戏音效/ 38
2.6　最后的点缀/ 39
2.6.1　添加计分和玩家生命值/ 39
2.6.2　添加游戏胜利和结束画面/ 42
2.7　本章小结/ 44
第3章　Cocos2D核心类/ 45
3.1　Cocos2D节点基础知识/ 45
3.1.1　节点层级图/ 45
3.1.2　什么是锚点/ 46
3.2　CCNode节点类/ 47
3.2.1　CCNode类的属性/ 47
3.2.2　CCNode类的方法/ 50
3.3　CCScene场景类/ 57
3.3.1　CCTransitionScene场景切换/ 58
3.3.2　Cocos2D支持的场景过渡效果/ 59
3.4　CCLayer层类/ 60
3.4.1　CCLayer类的作用/ 61
3.4.2　CCLayerColor色彩层/ 62
3.4.3　CCLayerGradient渐变色层/ 63
3.4.4　CCMenu菜单类/ 63
3.5　CCTexture纹理类/ 65
3.5.1　纹理和纹理图集/ 65
3.5.2　CCTexture2D、CCTextureCache和CCTextureAtlas/ 66
3.6　CCSprite精灵类/ 67
3.6.1　CCSprite类的属性及方法/ 67
3.6.2　CCSpriteBatchNode精灵表单/ 71
3.6.3　CCSpriteFrame精灵帧/ 73
3.6.4　CCSpriteFrameCache精灵帧缓存/ 74
3.7　Cocos2D中的单例/ 76
3.7.1　Cocos2D中的常用单例/ 77
3.7.2　CCDirector导演类/ 77
3.8　垂直射击游戏—加载游戏数据/ 81
3.8.1　注释draw方法和背景/ 81
3.8.2　加载游戏资源/ 82
3.8.3　修改AppDelegate.m文件/ 88
3.8.4　修改HelloWorldLayer/ 89
3.8.5　代码重构/ 90
3.9　本章小结/ 93
第4章　Cocos2D中的动作、特效与动画/ 94
4.1　Cocos2D中的节点动作/ 94
4.1.1　运行ActionsTest测试/ 94
4.1.2　Cocos2D中的动作类/ 96
4.2　动作的分类及使用/ 98
4.2.1　基本动作/ 98
4.2.2　组合动作/ 102
4.2.3　Ease动作/ 105
4.2.4　延迟动作/ 107
4.2.5　方法回调动作/ 107
4.2.6　块语句调用动作/ 112
4.2.7　反转动作/ 116
4.2.8　特殊动作/ 117
4.3　垂直射击游戏：加载进度条与滚动背景/ 117
4.3.1　使用CCProgressTo和CCProgressFromTo动作添加进度条/ 117
4.3.2　使用CCFollow和CCParallaxNode动作添加滚动背景/ 119
4.4　Cocos2D中的特效/ 122
4.4.1　Cocos2D中的网格/ 122
4.4.2　特效的种类及使用/ 123
4.4.3　让节点对象返回最初状态/ 127
4.5　Cocos2D中的动画/ 127
4.5.1　Cocos2D中与动画相关的类/ 127
4.5.2　在Cocos2D中实现动画效果/ 128
4.6　使用Zwoptex工具实现动画效果/ 129
4.6.1　安装Zwoptex工具/ 129
4.6.2　制作精灵表单/ 130
4.6.3　制作精灵动画/ 132
4.7　垂直射击游戏—添加飞行和爆炸动画/ 134
4.7.1　添加玩家飞机飞行动画/ 134
4.7.2　添加飞机爆炸效果/ 136
4.8　本章小结/ 138
第5章　Cocos2D中的文本渲染系统/ 139
5.1　文本渲染系统的组成/ 139
5.1.1　CCLabelTTF类/ 139
5.1.2　CCLabelAtlas类/ 145
5.1.3　CCLabelBMFont类/ 147
5.2　标签的对齐方式/ 151
5.3　使用第三方工具创建字体纹理图集/ 152
5.3.1　Hiero工具的使用方法/ 153
5.3.2　创建字体图集步骤/ 153
5.4　垂直射击游戏—美化游戏界面/ 155
5.4.1　渲染文本/ 155
5.4.2　实现倒计时功能/ 156
5.5　本章小结/ 158
第6章　Cocos2D中的事件处理机制/ 159
6.1　iOS中的交互事件处理/ 159
6.1.1　什么是用户输入事件/ 159
6.1.2　多点触摸事件处理机制/ 160
6.1.3　重力感应事件处理机制/ 162
6.2　Cocos2D中的触摸事件处理/ 164
6.2.1　如何处理触摸事件/ 165
6.2.2　模板中自带的TouchesTest项目/ 168
6.2.3　实战—随手指移动的小球/ 169
6.3　Cocos2D中的重力感应事件/ 172
6.3.1　如何处理重力感应事件/ 172
6.3.2　实战—受加速计控制的小球/ 172
6.4　垂直射击游戏—暂停游戏/ 177
6.4.1　PauseLayer类的实现/ 177
6.4.2　CustomMenu类的实现/ 180
6.4.3　游戏主场景添加暂停层/ 180
6.4.4　PauseLayerProtocol代理/ 181
6.5　本章小结/ 182
第7章　Cocos2D世界的声音/ 183
7.1　认识CocosDenshion音效引擎/ 183
7.1.1　CocosDenshion重要API/ 183
7.1.2　CocosDenshion相关类/ 184
7.1.3　Cocos2D支持的CocosDenshion/ 185
7.2　SimpleAudioEngine使用方法/ 186
7.2.1　添加背景音乐/ 187
7.2.2　控制音乐的播放和停止/ 188
7.2.3　判断当前是否播放背景音乐/ 192
7.2.4　添加音效/ 194
7.3　CDSoundEngine使用方法/ 195
7.3.1　设置CDSoundEngine/ 195
7.3.2　播放背景音乐和音效/ 199
7.4　游戏菜单中的声音设置选项/ 202
7.5　垂直射击游戏—GameOver/ 208
7.5.1　实现背景音乐暂停功能/ 208
7.5.2　实现菜单场景/ 208
7.5.3　实现高分榜场景/ 215
7.5.4　实现GameOver场景/ 221
7.6　本章小结/ 223
第8章　在Cocos2D中使用瓷砖地图/ 224
8.1　认识瓷砖地图/ 224
8.2　Tiled地图编辑器/ 225
8.2.1　安装Tiled/ 225
8.2.2　用Tiled绘制地图/ 226
8.2.3　在地图中添加对象/ 230
8.3　在项目中使用瓷砖地图/ 232
8.3.1　TMX文件解析/ 232
8.3.2　Cocos2D中的瓷砖地图类/ 233
8.3.3　在项目中载入TMX地图/ 238
8.3.4　使用TMX地图中的对象/ 239
8.4　超级玛丽—实现简单的原型/ 242
8.4.1　准备工作/ 243
8.4.2　创建高清版本Tiled地图/ 244
8.4.3　在代码里加载Tiled地图/ 248
8.4.4　利用WBTMXTool工具制作普清版本Tiled地图/ 250
8.4.5　添加遥感控制器/ 252
8.5　本章小结/ 254
第9章　物理引擎—更真实的Cocos2D世界/ 255
9.1　游戏物理引擎概况/ 255
9.1.1　物理引擎的应用/ 255
9.1.2　常见的游戏物理引擎/ 257
9.2　认识Box2D / 257
9.2.1　Box2D碰撞检测和处理系统/ 258
9.2.2　Box2D中的核心概念/ 259
9.3　示例项目HelloBox2D详解/ 265
9.3.1　使用模板创建HelloBox2D项目/ 265
9.3.2　解读HelloBox2D默认项目代码/ 267
9.3.3　完善HelloBox2D项目/ 280
9.4　Box2D实战—物理射击游戏/ 291
9.4.1　准备工作/ 292
9.4.2　创建会转动手臂的小人/ 294
9.4.3　发射子弹/ 300
9.4.4　使用PhysicEditor工具制作凹槽/ 303
9.4.5　凹槽实现升降机效果/ 306
9.4.6　处理碰撞传感器/ 307
9.4.7　加入更多障碍/ 309
9.5　超级玛丽—Box2D与Tiled结合/ 310
9.5.1　添加玛丽和物体的物理属性/ 310
9.5.2　使玛丽行走和跳跃/ 319
9.5.3　为游戏中的金币和箱子添加物理属性/ 325
9.5.4　碰撞检测—吃金币/ 329
9.5.5　游戏特效—吸金币/ 332
9.5.6　加入游戏音效/ 335
9.5.7　设计胜利和失败条件/ 335
9.6　本章小结/ 338
第二部分　实战篇
第10章　Angel Panda游戏的设计与实现/ 340
10.1　iOS游戏完整的制作流程/ 340
10.2　Angel Panda游戏设计/ 342
10.2.1　Angel Panda的创意来源/ 342
10.2.2　Angel Panda的故事背景及游戏规则/ 342
10.2.3　Angel Panda的游戏体验流程/ 343
10.3　开发前的准备工作/ 343
10.3.1　下载并安装合适的开发工具/ 343
10.3.2　将项目分解成不同的模块/ 344
10.3.3　准备游戏中所需要的资源/ 345
10.4　Angel Panda游戏的实现/ 345
10.4.1　使用Cocos2D模板创建新项目/ 345
10.4.2　设置游戏主场景/ 350
10.4.3　添加游戏角色/ 354
10.4.4　添加用户交互机制/ 368
10.4.5　添加游戏逻辑/ 370
10.4.6　添加音效/ 374
10.5　本章小结/ 377
第11章　AngryPanda游戏的设计与框架搭建/ 378
11.1　AngryPanda游戏设计/ 378
11.1.1　AngryPanda的创意来源/ 378
11.1.2　AngryPanda的故事背景及游戏规则/ 378
11.1.3　AngryPanda的游戏体验流程/ 379
11.2　开发前的准备工作/ 379
11.2.1　下载并安装合适的开发工具/ 379
11.2.2　将项目分解成不同的模块/ 380
11.2.3　准备游戏需要的资源/ 381
11.2.4　使用Box2D模板创建新项目/ 382
11.3　数据存储和游戏设置/ 383
11.3.1　创建和实现GameData类/ 384
11.3.2　GameData类中的重要方法/ 386
11.3.3　创建Constants.h头文件/ 389
11.4　游戏中的音效管理/ 390
11.4.1　创建GameSounds类/ 390
11.4.2　GameSounds类中的重要方法/ 391
11.5　游戏中的辅助界面/ 391
11.5.1　游戏开始界面/ 392
11.5.2　游戏介绍界面/ 400
11.5.3　关卡选择界面/ 404
11.5.4　关卡结束界面/ 407
11.6　本章小结/ 410
第12章　Angry Panda游戏主场景的实现/ 411
12.1　Box2D世界的物体/ 411
12.1.1　创建抽象物体类/ 411
12.1.2　创建熊猫角色/ 414
12.1.3　创建平台物体/ 418
12.1.4　创建外星怪物/ 419
12.1.5　创建遮挡物体/ 423
12.1.6　创建并放置攻击目标/ 425
12.2　实现游戏的主场景/ 427
12.2.1　创建MainScene类/ 428
12.2.2　场景的视觉呈现/ 431
12.2.3　如何与用户交互/ 437
12.2.4　实现游戏的逻辑机制/ 442
12.3　游戏中的碰撞检测机制/ 443
12.3.1　创建ContactListener类/ 444
12.3.2　碰撞检测机制的实现/ 444
12.4　本章小结/ 447
第三部分　高级篇
第13章　粒子系统/ 450
13.1　Cocos2D中的粒子系统/ 450
13.1.1　粒子系统相关的类/ 450
13.1.2　Cocos2D内置的粒子系统/ 452
13.2　手动创建粒子系统示例/ 453
13.2.1　创建ParticleEffect项目/ 453
13.2.2　添加Cocos2D内置的粒子系统/ 454
13.2.3　手动创建粒子系统类/ 455
13.2.4　设置粒子系统的属性/ 459
13.3　plist文件/ 464
13.3.1　particle.plist文件内容/ 464
13.3.2　使用plist文件创建粒子系统/ 466
13.4　粒子工具Particle Designer/ 468
13.4.1　下载安装Particle Designer/ 468
13.4.2　Particle Designer工具栏/ 469
13.4.3　如何设置Emitter Config属性/ 470
13.4.4　如何在项目中使用粒子系统/ 472
13.5　本章小结/ 473
第14章　CocosBuilder和Shader/ 474
14.1　CocosBuilder初体验/ 474
14.1.1　下载安装CocosBuilder/ 474
14.1.2　查看Example目录结构/ 476
14.1.3　如何打开样例文件/ 477
14.2　第一个CocosBuilder项目/ 478
14.2.1　创建HelloWorldCocosBuilder场景/ 478
14.2.2　加载HelloWorldCocosBuilder场景/ 483
14.2.3　建立文档与代码的连接/ 484
14.2.4　完善HelloWorldCocosBuilder场景/ 486
14.3　HelloWorldCocosBuilder项目功能完善/ 489
14.3.1　制作GameMenu场景/ 490
14.3.2　制作About场景/ 493
14.3.3　发布ZIP格式场景资源文件/ 495
14.3.4　如何支持多个设备分辨率/ 496
14.4　着色器/ 496
14.4.1　着色器的种类及工作原理/ 497
14.4.2　编写自己的Shader程序/ 500
14.4.3　如何为Sprite定制顶点着色器/ 503
14.4.4　如何定制片段着色器/ 507
14.4.5　旋风效果示例/ 509
14.5　本章小结/ 512
第15章　在游戏中添加对Game Center的支持/ 513
15.1　什么是Game Center/ 513
15.1.1　Game Center的功能/ 513
15.1.2　Game Center的特点/ 513
15.2　在项目中添加对Game Center的支持/ 514
15.2.1　注册iOS开发者账号/ 514
15.2.2　为应用创建并设置App ID/ 514
15.2.3　在iTunes Connect中注册应用/ 517
15.2.4　开启对Game Center的支持/ 520
15.2.5　在iTunes Connect中添加成就系统/ 520
15.2.6　在iTunes Connect中设置积分排行榜/ 523
15.3　示例项目GKTapper详解/ 524
15.3.1　添加Game Kit框架/ 525
15.3.2　检查Game Center是否可用/ 526
15.3.3　验证玩家是否登录Game Center/ 527
15.3.4　实现成就系统/ 530
15.3.5　实现积分排行榜/ 535
15.4　本章小结/ 539
第16章　在游戏中添加对IAP的支持/ 540
16.1　什么是IAP/ 540
16.1.1　IAP的功能/ 540
16.1.2　IAP中的商品类型/ 540
16.1.3　IAP实现机制/ 542
16.2　Store Kit Framework介绍/ 545
16.2.1　Store Kit Framework中的购买核心类/ 545
16.2.2　Store Kit Framework中的商品核心类/ 548
16.2.3　SKDownload类/ 550
16.2.4　Store Kit Framework中的协议/ 550
16.3　在iTunes Connect配置IAP/ 551
16.3.1　在iTunes Connect中添加商品信息/ 552
16.3.2　在iTunes Connect中添加沙盒测试账号/ 558
16.4　在项目中添加与IAP相关的代码/ 560
16.4.1　IAPGame项目简介/ 560
16.4.2　在项目中添加Store Kit框架/ 562
16.4.3　添加MyStore类/ 563
16.5　在设备中测试并提交审核/ 576
16.6　本章小结/ 583
第17章　游戏性能分析与优化/ 584
17.1　如何发现性能瓶颈/ 584
17.1.1　Instruments基本功能/ 584
17.1.2　Instruments中内置的分析工具/ 585
17.1.3　如何使用Time Profiler工具模板/ 586
17.1.4　如何使用OpenGL ES Driver工具模板/ 588
17.1.5　使用空白模板创建定制分析工具/ 590
17.2　Cocos2D内置的性能分析工具/ 591
17.2.1　CCProfiler和CCProfilingTimer/ 591
17.2.2　如何使用性能分析工具/ 593
17.3　优化Cocos2D游戏性能/ 595
17.3.1　在Cocos2D中开启自动引用计数/ 595
17.3.2　使用CCSpriteBatchNode 替代CCSprite/ 597
17.3.3　提升游戏性能的其他技巧/ 598
17.4　本章小结/ 600
第18章　产品的测试、发布与推广/ 601
18.1　用户体验测试/ 601
18.1.1　测试用户的选择/ 601
18.1.2　产品测试的步骤/ 601
18.2　产品的上传与发布/ 610
18.2.1　加入iOS开发者计划/ 610
18.2.2　在App Store中发布产品/ 618
18.3　App产品的宣传与推广/ 636
18.3.1　产品推广的原因/ 636
18.3.2　产品推广的方法/ 636
18.4　本章小结/ 638
第19章　Cocos2D的延伸/ 639
19.1　Cocos3D简介/ 639
19.1.1　Cocos3D的基本特性/ 639
19.1.2　Cocos3D核心类简介/ 640
19.1.3　下载并安装Cocos3D/ 642
19.2　Cocos2D-x 简介/ 643
19.2.1　创建iOS版的HelloWorld项目/ 643
19.2.2　创建基于Cocos2D-x的Android项目/ 648
19.3　Cocos2D-HTML5详解/ 661
19.3.1　Cocos2D-HTML5简介/ 661
19.3.2　下载安装Cocos2D-HTML5/ 662
19.3.3　安装配置WebServer（可选）/ 664
19.3.4　解析helloHTML5World项目/ 665
19.4　Cocos2D-Python简介/ 671
19.5　本章小结/ 671
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Cocos2D权威指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>人人点赞：让APP瞬间疯转的绝妙文案
1网站的运作	1
主流网站的一天	2
评审请求	3
较小的网站	5
评测如何发生	6
网站编辑们在寻找什么	7
为什么网站编辑要评测	10
吸引读者	11
提供评审意见	11
网站编辑如何评估	13
执行评审	14
配件和其他硬件的评审	16
评审的要素	17
图标设计	18
用户界面	19
价值	20
效用	21
设置	22
选择	23
特点	24
完结	24
评审每个产品需要花费多少时间	26
网站编辑是在什么样的时间轴下工作的	28
需要多长时间才能告知试用的结果	28
网站编辑会写哪种评论	29
第一印象	30
概述	30
实际操作	31
深入评测	31
选择评论类型	31
网站评审为什么很重要	32
营销现状	35
总结	37
2有吸引力的产品	38
产品定义	39
谁是你的目标用户	40
你的产品能解决什么问题	41
你的产品如何流行	42
是什么成就了一个好产品	43
具有非常棒并容易理解的用户界面	43
能够让用户完成一些事情	44
不断改变来满足用户的需求	45
成功的开发商都知道他们的市场	46
被打磨过	47
保持更新	48
相关的	48
为什么好的界面设计很重要	49
精炼产品	50
发布Beta版测试你的应用	52
爱上你的产品	54
保密、有限制和独家报道	55
与大佬竞争	58
建立自我营销渠道	59
总结	62
3书写文案	63
设计文案	64
文案的基本要素	65
有煽动性的主题	66
产品名称	66
产品价格	67
链接	68
截图	69
视频	71
描述	73
功能列表	74
联系方式	75
一份文案样例	76
提醒我们你是谁	78
通过邮件主题吸引眼球	79
邮件主题的角色	80
好的邮件主题	80
为什么邮件主题会失败	82
无须评审类文案主题	84
优惠码	86
如何发送优惠码	88
创建产品链接	89
创建公司链接	91
Mac下的Tokens	92
实行免费策略	94
硬件和软件之间的文案差异	95
设计	95
价值	97
功能	98
硬件产品的定价	99
视频的高价值	100
硬件评测逻辑	101
基准	102
Kickstarter简介	104
案例分析：Une Bobine的介绍视频	105
常见的硬件产品分类	106
保护套	106
耳机	107
基座	108
音响	109
硬盘	110
电源（电池、充电器、车载充电器）	111
相机配件	112
图书/电子书	113
电缆和小玩意	114
硬件产品的文案	115
总结	116
4文案写作的准则	117
了解网站	118
指明特定的网站编辑	118
瞄准系列报道	120
上播客	122
利用非评审的报道	122
提前排定日程	124
提供具体日期和时间表	125
提供独家首发的话题	126
不要操之过急	126
利用人格魅力	127
允许采访	128
请勿编造对话以推销你的应用	128
倾听网站编辑的反馈	129
要友善	130
不要把我们加到你的个人邮件列表	131
良好的沟通	132
利用已有的成就	133
不要装名人，除非你获得了风险投资	133
不要告发竞争对手	134
知道你的文案是写给谁的	134
没有人愿意做“备胎”	136
用母语进行评审	137
跟进	138
不要骚扰网站编辑	139
不要发送垃圾邮件给网站编辑	139
不要以为优惠码可以换取评测报告	141
不要以为实物的产品可以换取评测报告	142
不要指望收到回复	143
及时响应回复	143
不要重复提交文案	144
注意时机	144
适应时事	145
创造时机	145
遵循规则	146
不要造假	146
不要试图付费让编辑评测或提高你的产品评级	147
不要博同情分	149
不要假装成“客户”谈论你所“发现”的产品	150
不要引用断章取义的评论	150
不要为你的评审提“特殊要求”	151
不要撒谎和误导编辑	151
避免冒犯	152
不要有种族歧视、性别歧视等内容	152
不要自断退路	153
通过正规渠道提交	153
终止异常情况	155
投稿的时机	156
处理苹果审核中遇到的问题	158
总结	161
5案例分析	163
案例分析：短小而精悍	164
案例分析：可靠的查询	165
案例分析：专业的文案	167
案例分析：失去的度假机会	169
案例分析：无聊的文案	170
案例分析：让我们一笑了之的完全不恰当的文案	171
案例分析：赢在魅力	172
案例分析：完全文不对题	174
案例分析：自动校正的风险	175
案例分析：流行语	176
案例分析：不够详细	179
案例分析：我们甚至不知道文案在说什么	180
案例分析：跑题的文案	180
案例分析：不要一次提交多个产品	181
案例分析：机器翻译	182
案例分析：不要使用无针对性的项目列表	184
案例分析：出色的响应	185
案例分析：重写文案	187
原始的文案	187
重写后的文案	190
案例分析：牢记应用才是主角	191
案例分析：在Twitter上提交文案	193
最后的提示：要避免夸大	193
总结	196
6运营准备	197
让你的产品成型	198
准备营销文案	200
选择强力的品牌形象	201
网站要素	202
添加“联系我们”链接	204
维护公司的品牌	204
建立一份评审指南	206
评审指南之道	208
关于新闻稿	210
准备产品视频非常重要	212
录制视频	212
良好的演示视频品质	214
编辑视频	215
完善你的宣传视频	216
视频配乐	217
上传视频	218
现场演示	219
准备评审材料	221
你想要回你的产品吗	221
在包裹中应该放其他物件吗	222
应该提交完整的产品副本或限期归还产品的原型吗	222
社交媒体	223
互动	224
处事老练	225
不要有敌意	225
有人情味	225
权限集中	225
信息透明	226
活跃	226
使用自动发布工具	226
覆盖所有可能的渠道	227
赠送产品	227
总结	227
7协调和维系你的网站编辑	229
与网站编辑建立关系	229
要有耐心和毅力	230
要相互谅解	231
谦和地接受批评	231
呵护自己的产品	232
真诚待人	232
保持联系	233
了解网站编辑的关注点	233
“做个好人”的规则	234
回应评价，无论好评还是差评	236
处理好评	236
回应差评	237
不一致的评价	238
不实的内容	238
使用评论功能	239
为什么不评审我的产品	241
总结	243
8工作表和清单	244
了解你的客户：做客户分析	245
工作表1：潜在客户概览	245
竞争力分析	246
工作表2：评估竞争情况	247
计算潜在的市场规模	248
工作表3：市场规模计算表	252
文案检查清单	252
工作表4：检查你的邮件主题	253
工作表5：检查你的文案	254
评审指南检查清单	254
工作表6：关键的评审指南要素	255
网站编辑联系数据库	255
工作表7：网站编辑联系方式明细	255
总结	256
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>人人点赞：让APP瞬间疯转的绝妙文案
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iPad开发基础教程
第1章 改变思维模式
第2章 ipad开发起步
第3章  iPhone SDK 中的新iPad功能
第4章  新图形功能
第5章  使用Core Text
第6章  浮动界面
第7章  视频及显示输出
第8章  拆分视图和模态模式
第9章  新的输入方法
第10章  处理文档
第11章  从iPhone到iPad
第12章  用于iPad开发的其他资源
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iPad开发基础教程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iPhone与iPad开发实战
第1章 iPhone与iPad简介        1
1.1 历史回顾        1
1.2 人人为我，我为人人：iPhone OS平台        2
1.3 核心硬件规范        2
1.3.1 iPhone        2
1.3.2 iPad        3
1.3.3 iPod Touch        4
1.3.4 iPhone和iPad的输入及输出规范        4
1.3.5 iPhone和iPad网络规范        5
1.3.6 iPhone OS浏览器规范        6
1.3.7 移动Web标准        7
1.3.8 其他硬件特性        7
1.4 iPhone和iPad的独特之处        8
1.5 理解iPhone和iPad触摸式交互        9
1.6 小结        10
第2章 Objective-C和iPhone OS SDK        11
2.1 准备使用SDK        11
2.1.1 安装SDK        11
2.1.2 SDK剖析        13
2.2 Objective-C介绍        14
2.2.1 概述        14
2.2.2 消息        15
2.2.3 类定义        17
2.2.4 属性        18
2.2.5 其他编译器指令        20
2.2.6 类别和协议        20
2.2.7 Objective-C总结        21
2.3 iPhone OS介绍        22
2.3.1 iPhone OS剖析        22
2.3.2 iPhone OS的对象层次结构        23
2.3.3 窗口和视图        24
2.4 iPhone OS的方法        25
2.4.1 对象创建        25
2.4.2 内存管理        27
2.4.3 事件响应        28
2.4.4 生命周期管理        29
2.5 小结        30
第3章 使用Xcode        31
3.1 Xcode简介        31
3.1.1 剖析Xcode        31
3.1.2 在Xcode中编译和执行        33
3.2 在Xcode中创建第一个iPhone项目：Hello, World!        33
3.2.1 理解main.m        33
3.2.2 理解应用程序委托        34
3.2.3 编写“Hello, World!”        36
3.3 在Xcode中创建第一个iPad项目：
Hello, World!        38
3.4 在Xcode中创新建类        39
3.4.1 新类简介        39
3.4.2 头文件        39
3.4.3 源代码文件        40
3.4.4 链接        42
3.5 Xcode的其他功能        42
3.5.1 使用Xcode添加框架        42
3.5.2 在Xcode中使用其他模板        42
3.5.3 Xcode提示和技巧        43
3.6 小结        44
第4章 使用Interface Builder        45
4.1 Interface Builder介绍        45
4.1.1 Interface Builder剖析        46
4.1.2 在Interface Builder中模拟        48
4.2 在Interface Builder中创建第一个项目：图片和网页        48
4.2.1 新建对象        48
4.2.2 操作图形对象        49
4.2.3 使用检查器窗口        49
4.2.4 使用图片        51
4.3 在Interface Builder中建立连接        52
4.3.1 声明IBOutlet        52
4.3.2 连接对象        53
4.3.3 使用IBOutlet编写代码        54
4.4 其他Interface Builder功能        55
4.4.1 建立其他连接        55
4.4.2 创建外部对象        55
4.4.3 初始化Interface Builder对象        56
4.4.4 访问.xib文件        56
4.4.5 新建.xib文件        57
4.5 小结        57
第5章 创建基本视图控制器        58
5.1 视图控制器家族        58
5.2 标准视图控制器        59
5.2.1 视图控制器剖析        60
5.2.2 创建视图控制器        60
5.2.3 创建另一个视图控制器        60
5.2.4 构建视图控制器界面        61
5.2.5 使用视图控制器        62
5.3 表视图控制器        66
5.3.1 剖析表视图控制器        66
5.3.2 创建表视图控制器        66
5.3.3 构建表界面        67
5.3.4 使用表视图控制器        72
5.4 小结        73
第6章 监控事件和动作        74
6.1 事件简介        74
6.1.1 响应者链        74
6.1.2 触摸和事件        76
6.2 触摸的例子：事件报告程序        77
6.2.1 在Interface Builder中构建应用
程序        78
6.2.2 为触摸准备视图        79
6.2.3 控制事件        80
6.3 其他事件功能        82
6.3.1 规则化事件        82
6.3.2 其他事件方法和属性        83
6.4 动作简介        84
6.4.1 UIControl对象        84
6.4.2 控件事件和动作        84
6.4.3 使用addTarget:action:
forControlEvents:方法        86
6.5 向应用程序添加按钮        86
6.5.1 使用addTarget:action:
forControlEvents:与按钮        87
6.5.2 使用IBAction与按钮        87
6.6 其他动作功能        88
6.6.1 使用UITextField接受文本输入        88
6.6.2 允许使用UISlider来选择值        90
6.6.3 TextField/Slider组合        90
6.6.4 创建动作很容易        92
6.6.5 使用动作        92
6.7 通知简介        92
6.8 小结        93
第7章 创建高级视图控制器        94
7.1 标签栏视图控制器        94
7.1.1 剖析标签栏视图控制器        94
7.1.2 创建标签栏控制器        95
7.1.3 构建标签栏界面        97
7.1.4 使用标签栏控制器        100
7.2 导航控制器        101
7.2.1 剖析导航控制器        101
7.2.2 创建导航控制器        102
7.2.3 完成导航控制器        102
7.2.4 使用导航控制器        106
7.3 使用翻转控制器        108
7.4 分割视图控制器        110
7.4.1 创建分割视图控制器        110
7.4.2 构建分割视图控制器        112
7.4.3 使用分割视图控制器        115
7.4.4 为竖向模式和横向模式调整
界面        116
7.5 弹出式视图控制器和模式视图控制器        116
7.5.1 创建弹出式视图控制器        117
7.5.2 创建模式视图控制器        117
7.6 小结        118
第8章 数据：动作、首选项和文件        119
8.1 接收用户动作        119
8.2 管理用户首选项        120
8.2.1 创建自己的首选项        121
8.2.2 使用系统设置        125
8.3 打开文件        129
8.3.1 访问软件包        130
8.3.2 访问其他目录        131
8.3.3 操纵文件        131
8.3.4 Filesaver：一个UITextView示例        132
8.4 小结        135
第9章 数据：高级技术        136
9.1 使用SQLite        136
9.1.1 设置SQLite数据库        137
9.1.2 访问SQLite        138
9.1.3 访问SQLite数据库        138
9.1.4 通过数据库构建导航菜单        139
9.1.5 本例的扩展        145
9.2 访问地址簿        145
9.2.1 框架概述        145
9.2.2 访问地址簿属性        146
9.2.3 查询地址簿        147
9.2.4 使用地址簿UI        149
9.3 Core Data简介        153
9.3.1 关于Core Data的背景知识        153
9.3.2 在应用程序中设置Core Data        154
9.3.3 初始化Core Data对象        155
9.3.4 为数据库添加对象        158
9.3.5 在Core Data中提取、更新和删
除对象        158
9.4 小结        160
第10章 定位：加速计、位置和罗盘        161
10.1 加速计和方向        161
10.1.1 orientation属性        161
10.1.2 方向通知        162
10.2 加速计和移动        162
10.2.1 访问UIAccelerometer        163
10.2.2 解析UIAcceleration        163
10.2.3 查看重力        164
10.2.4 查看移动        166
10.2.5 识别简单的加速计移动        166
10.3 加速计和手势        168
10.4 Core Location        170
10.4.1 位置类        171
10.4.2 使用位置和距离的示例        172
10.4.3 使用海拔的示例        174
10.4.4 使用罗盘        177
10.4.5 Core Location和互联网        178
10.5 小结        178
第11章 媒体：图像和照相机        179
11.1 图像介绍        179
11.1.1 加载UIImage        180
11.1.2 绘制UIImageView        180
11.1.3 在UIKit中修改图像        181
11.2 利用Core Graphics绘制简单图像        182
11.3 访问照片        183
11.3.1 使用图像选取器        183
11.3.2 拍照        184
11.3.3 保存到相册        185
11.4 拼合：一个图像例子        185
11.4.1 拼合视图控制器        185
11.4.2 拼合临时图像视图        189
11.4.3 拼合视图        190
11.4.4 扩展这个例子        191
11.5 小结        191
第12章 媒体：音频和录音        192
12.1 播放iPod库中的音频        192
12.1.1 从iPod媒体库中检索音频
条目        192
12.1.2 获取MPMediaItem的信息        194
12.1.3 使用MPMusicPlayerController播放媒体条目        194
12.1.4 示例：创建一个简单的媒体
播放器应用程序        196
12.2 录制音频        198
12.2.1 初始化音频录音器        198
12.2.2 控制音频录音器        199
12.2.3 响应AVAudioRecorder事件        200
12.3 手动播放声音        201
12.3.1 初始化AVAudio Player        201
12.3.2 AVAudioPlayer Delegate        202
12.3.3 控制AVAudioPlayer        202
12.4 示例：创建一个简单的音频
录制/播放应用程序        203
12.4.1 创建一个基于视图的应用
程序        204
12.4.2 添加所需的框架        204
12.4.3 构建IBAction        204
12.4.4 创建界面        204
12.4.5 设置音频录音器并实现
IBAction操作        205
12.5 录制、播放和访问视频        206
12.6 小结        207
第13章 图形：Quartz、Core Animation
和OpenGL        209
13.1 Quartz 2D简介        209
13.2 Quartz上下文        210
13.2.1 在UIView上绘制图形        211
13.2.2 在位图上绘制图形        212
13.3 绘制路径        213
13.3.1 结束路径        214
13.3.2 创建可重用路径        214
13.3.3 绘制矩形        215
13.4 设置图形状态        216
13.4.1 设置颜色        216
13.4.2 变换        217
13.4.3 设置裁剪路径        219
13.4.4 其他设置        220
13.4.5 管理状态        220
13.5 Quartz中的高级绘图功能        220
13.5.1 绘制渐变        221
13.5.2 绘制图像        222
13.5.3 绘制文字        223
13.5.4 未介绍的内容        224
13.6 示例：在图片上绘图        224
13.6.1 PhotoDraw视图控制器        225
13.6.2 photodraw视图        226
13.6.3 扩展示例        228
13.7 Core Animation简介        229
13.7.1 Core Animation基础        230
13.7.2 Core Animation入门        230
13.7.3 绘制简单的隐式动画        230
13.7.4 绘制简单的显式动画        231
13.8 OpenGL简介        232
13.9 小结        232
第14章 Web：Web视图和互联网协议        234
14.1 互联网的层次结构        234
14.2 低层次联网        234
14.3 使用URL        236
14.3.1 创建NSURL        236
14.3.2 构建NSURLRequest        237
14.3.3 手动操作HTML数据        238
14.4 使用UIWebView        238
14.4.1 调用Web视图        239
14.4.2 管理Web视图委托        239
14.4.3 缩略图：一个Web视图例子        240
14.5 解析XML        242
14.5.1 启动NSXMLParser        242
14.5.2 充当委托        243
14.5.3 构建示例RSS阅读器        244
14.5.4 海拔高度重读：一个Core Location示例        248
14.6 提交给Web        250
14.6.1 手动提交        250
14.6.2 提交表单        251
14.7 访问社交网络        252
14.7.1 使用Web协议        252
14.7.2 使用TouchJSON        253
14.8 小结        255
第15章 使用Game Kit进行P2P连接        256
15.1 Game Kit概述        256
15.2 使用对等点选取器创建P2P应用程序        257
15.2.1 使用苹果公司的内置对等点
选取器        257
15.2.2 实现GKSession Delegate
方法        260
15.2.3 在对等点之间发送和接收
数据        261
15.3 示例：创建一个多人乒乓球游戏        263
15.3.1 启动GKTennis项目        264
15.3.2 创建头文件        264
15.3.3 创建乒乓球游戏界面        265
15.3.4 游戏初始化        266
15.3.5 建立对等点选取器并进行连接        267
15.3.6 实现send和receive方法        268
15.3.7 游戏循环        270
15.3.8 用户交互        273
15.4 小结        274
第16章 推送通知服务        275
16.1 什么是推送通知        275
16.2 苹果公司的推送通知系统概述        276
16.3 准备在应用程序中使用推送通知服务        277
16.3.1 设置应用程序证书        278
16.3.2 建立供应配置文件        279
16.3.3 处理推送通知的代码        279
16.3.4 准备音频文件        281
16.4 使用PHP创建一个推送通知提供程序        281
16.4.1 创建SSL证书        282
16.4.2 实现PHP推送通知提供程序        283
16.5 小结        284
第17章 Map Kit框架        285
17.1 Map Kit概述        285
17.2 向应用程序添加地图        285
17.2.1 使用Interface Builder添加地图        285
17.2.2 用编程方式添加地图        287
17.2.3 控制地图        287
17.3 翻译地理编码        289
17.4 标注地图        290
17.4.1 添加基本地图标注        291
17.4.2 添加自定义地图标注        292
17.5 小结        296
第18章 使用Store Kit实现应用内购买        297
18.1 建立沙盒测试环境        297
18.1.1 创建iTunes测试用户        298
18.1.2 添加产品        299
18.2 创建一个简单的商店界面        301
18.3 小结        309
第19章 iPhone SDK增强功能        311
19.1 自定义键盘附件        311
19.1.1 扩展UITextField        312
19.1.2 实现自定义UIText Field        314
19.1.3 自定义键盘        314
19.2 继续：iPhone 4.0 SDK        316
19.2.1 多任务        316
19.2.2 用户体验增强功能        317
19.2.3 多媒体框架增强功能        317
19.2.4 Game Center        317
19.3 小结        318
附录A iPhone OS类参考        319
附录B 外部资源和参考资料        322
附录C 发布SDK程序        324
附录D 针对iPad更新当前应用程序        327
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iPhone与iPad开发实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Sencha Touch权威指南
前　言
第一部分　准　备　篇
第1章　Sencha Touch 2.0概述 / 2
1.1　认识Sencha Touch   / 2
1.1.1　Sencha Touch框架的特性 / 2
1.1.2　Sencha Touch 2.0中的新特性 / 3
1.2　Sencha Touch 2.0框架 / 4
1.2.1　搭建学习环境 / 4
1.2.2　开发包中的内容 / 10
1.2.3　第一个Sencha Touch 2.0示例页面 / 11
1.3　构建及发布应用程序 / 13
1.3.1　Sencha Touch 2.0中的动态加载技术 / 13
1.3.2　几种核心脚本文件之间的区别 / 14
1.3.3　构建应用程序时执行的处理 / 14
1.3.4　发布应用程序 / 16
1.4　本章小结 / 17
第2章　Sencha Touch 2.0基础知识 / 18
2.1　一个简单的示例页面 / 18
2.2　配置对象与配置选项 / 19
2.3　应用程序的命名与启动 / 21
2.4　Sencha Touch 2.0中的面板组件 / 22
2.4.1　如何创建面板组件 / 22
2.4.2　Viewport组件 / 23
2.5　对DOM的访问及控制 / 23
2.5.1　Ext.get方法的使用 / 24
2.5.2　Ext.ComponentManager.get方法的使用 / 24
2.5.3　Ext.fly方法的使用 / 25
2.6　本章小结 / 26
第二部分　基　础　篇
第3章　面板与布局 / 28
3.1　在面板组件中放置图片 / 28
3.1.1　示例代码及配置选项 / 28
3.1.2　Sencha Touch 2.0中的图片组件 / 30
3.1.3　Sencha Touch 2.0中的事件监听器及事件处理函数 / 30
3.1.4　Sencha Touch 2.0中的动态加载技术 / 31
3.2　Tab面板组件 / 33
3.2.1　Tab面板组件的使用及示例 / 33
3.2.2　Tab面板组件的配置选项 / 35
3.2.3　Sencha Touch 2.0中的内置图标 / 36
3.3　Sencha Touch 2.0中的常用布局 / 38
3.3.1　盒布局 / 38
3.3.2　Fit布局 / 42
3.3.3　Card布局 / 44
3.3.4　容器内部组件的停靠 / 47
3.4　Carousel组件 / 49
3.4.1　Carousel组件的使用及示例 / 49
3.4.2　容器组件的defaults配置选项 / 51
3.4.3　Carousel组件的常用方法 / 52
3.5　NavigationView组件 / 53
3.5.1　NavigationView组件的使用及示例 / 53
3.5.2　配置NavigationView组件的标题栏 / 55
3.6　xtype配置选项 / 56
3.6.1　xtype配置选项的使用及示例 / 56
3.6.2　使用getComponent方法获取容器中的子组件 / 58
3.6.3　重要组件的xtype值及作用 / 59
3.7　本章小结 / 60
第4章　表单及表单域组件 / 61
4.1　一个最简单的表单示例 / 61
4.1.1　表单的核心组件 / 61
4.1.2　第一个表单使用示例 / 62
4.1.3　表单所用配置选项 / 63
4.1.4　Sencha Touch 2.0中的滚动 / 67
4.2　Sencha Touch 2.0中的特殊输入组件 / 69
4.2.1　密码输入组件 / 69
4.2.2　数值输入组件 / 70
4.2.3　Spinner组件 / 71
4.2.4　Email输入组件 / 72
4.2.5　Url输入组件 / 73
4.2.6　TextArea组件 / 74
4.2.7　Search组件 / 75
4.3　单选框与复选框组件 / 76
4.3.1　单选框组件 / 76
4.3.2　复选框组件 / 80
4.4　选取框组件 / 81
4.4.1　选取框组件的使用示例 / 81
4.4.2　选取框组件所用配置选项 / 83
4.5　使用数据仓库装载选取框 / 84
4.5.1　什么是数据仓库 / 84
4.5.2　使用本地数据装载选取框 / 86
4.5.3　代理与阅读器 / 88
4.5.4　使用服务器端数据装载选取框 / 89
4.6　日期选择组件 / 91
4.6.1　日期选择组件使用示例 / 91
4.6.2　日期选择组件所用配置选项 / 92
4.7　滑动条组件 / 94
4.7.1　滑动条组件使用示例 / 94
4.7.2　滑动条组件所用配置选项 / 95
4.7.3　setValue方法与getValue方法 / 95
4.8　Toggle组件 / 95
4.9　Hidden组件 / 96
4.10　本章小结 / 97
第5章　表单验证及提交 / 98
5.1　Sencha Touch 2.0中的按钮 / 98
5.1.1　按钮的使用及示例 / 98
5.1.2　修改按钮的样式 / 99
5.1.3　定义按钮的功能 / 102
5.2　表单验证 / 103
5.2.1　实现表单的AJAX异步提交 / 103
5.2.2　使用Sencha Touch 2.0中的内置验证 / 108
5.2.3　服务器端验证及验证成功后数据的追加 / 114
5.3装载表单数据 / 115
5.3.1装载本地数据 / 115
5.3.2装载服务器端数据 / 117
5.3.3修改服务器端数据 / 120
5.3.4　删除服务器端数据 / 123
5.4　将表单设定为无效状态 / 125
5.5　本章小结 / 126
第6章工具条 / 127
6.1　工具条组件的使用及示例 / 127
6.2　segmentedButton组件 / 128
6.2.1在工具条中放置segmentedButton组件示例 / 129
6.2.2segmentedButton组件的配置选项 / 130
6.3工具条的对齐方式与分隔符 / 131
6.3.1工具条右对齐示例 / 131
6.3.2在子组件中插入间隔距离示例 / 132
6.4　在工具条中使用图标按钮 / 133
6.4.1使用自定义图标按钮 / 133
6.4.2使用Sencha Touch 2.0中的内置图标按钮 / 135
6.5　在工具条中使用表单域组件 / 135
6.6　标题条组件 / 138
6.6.1标题条组件与工具条组件的区别 / 138
6.6.2　标题条组件的使用示例 / 139
6.7本章小结 / 139
第7章　XTemplate模板与DomHelper组件 / 141
7.1　XTemplate模板 / 141
7.1.1　定义XTemplate模板 / 141
7.1.2在模板中使用数组 / 144
7.1.3　在模板中使用操作符 / 148
7.1.4　在模板中使用内置变量 / 149
7.1.5在模板中使用自定义函数 / 151
7.2　DomHelper组件 / 153
7.2.1使用append方法追加元素 / 153
7.2.2　使用overwrite方法重写元素 / 155
7.2.3　在指定位置处追加与删除元素 / 156
7.3　本章小结 / 162
第8章DataView组件 / 163
8.1DataView组件的基本功能 / 163
8.1.1DataView组件的使用及示例 / 163
8.1.2对DataView组件使用样式 / 166
8.1.3　将DataView组件中的数据进行排序 / 168
8.1.4　DataView组件的选取方式 / 171
8.2　DataView组件的常用事件 / 171
8.2.1　itemsingletap事件、itemdoubletab事件与itemtap事件 / 171
8.2.2　itemswipe事件 / 173
8.2.3　refresh事件 / 175
8.2.4　selectionchange事件与deselect事件 / 177
8.3使用DataView组件制作一览表 / 183
8.3.1制作一览表的步骤 / 183
8.3.2为一览表添加排序功能 / 185
8.3.3为一览表添加搜索功能 / 189
8.4使用DataView组件显示服务器端数据 / 193
8.4.1显示XML文件中的数据 / 193
8.4.2显示JSON文件中的数据 / 197
8.4.3显示服务器端数据库中的数据 / 198
8.4.4对服务器端的数据进行分页 / 200
8.4.5在服务器端对数据进行排序 / 206
8.4.6对数据库中的数据进行搜索 / 212
8.5使用代理管理数据 / 223
8.5.1Memory代理 / 223
8.5.2SessionStorage代理 / 235
8.5.3LocalStorage代理 / 240
8.5.4Ajax代理 / 241
8.5.5Rest代理 / 247
8.6　Operation对象的使用方法 / 253
8.6.1通过Operation对象插入url参数 / 253
8.6.2获取分页数据 / 255
8.6.3　对服务器端数据进行排序与过滤 / 260
8.7获取异域数据 / 263
8.7.1通过JsonP代理获取异域数据 / 264
8.7.2利用Ext.data.JsonP对象获取异域数据 / 268
8.8　本章小结 / 275
第9章List组件 / 276
9.1List组件的基本功能 / 276
9.1.1使用List组件在页面上显示列表 / 276
9.1.2itemDisclosure事件 / 277
9.1.3在List组件中使用索引栏 / 279
9.1.4ListPagingView插件 / 280
9.2将List组件中的数据进行分组 / 282
9.2.1使用grouper配置选项进行分组 / 283
9.2.2动态设置List组件的分组方式 / 286
9.2.3动态更新数据时List组件的自动分组 / 287
9.3nestedList组件 / 289
9.3.1nestedList组件的使用及示例 / 290
9.3.2显示服务器端文件夹及文件列表 / 297
9.3.3显示服务器端数据库中的数据 / 302
9.4本章小结 / 307
第10章地图与多媒体 / 308
10.1　利用Map组件在页面中显示Google地图 / 308
10.1.1　Map组件的使用及示例     / 308
10.1.2　Ext.util.Geolocation类的使用及示例 / 309
10.2利用Video组件播放视频文件 / 313
10.2.1　Video组件的使用及示例 / 313
10.2.2　控制视频的主要的方法 / 315
10.3利用Audio组件播放音频文件 / 317
10.3.1　Audio组件的使用及示例 / 317
10.3.2　控制音频的主要方法 / 318
10.4本章小结 / 320
第11章使用具有关联关系的模型 / 321
11.1定义具有关联关系的模型 / 321
11.2定义具有一对多关系的模型 / 322
11.2.1　一对多关系模型的使用示例 / 323
11.2.2使用子模型的数据仓库存取数据 / 326
11.2.3　定制父模型的过滤器 / 337
11.3　定义具有多对一关系的模型 / 343
11.3.1　多对一关系的模型的使用示例 / 343
11.3.2　通过子模型的getter方法获取父模型的记录 / 346
11.3.3　通过子模型的setter方法设置关联id / 351
11.4　定义具有一对一关系的模型 / 361
11.4.1　通过模型的getter方法获取其关联模型的记录 / 361
11.4.2　通过模型的setter方法设置关联id / 363
11.5　在同一个模型内部建立关联关系 / 364
11.6　本章小结 / 369
第12章Sencha Touch 2.0中的Ext Direct API / 370
12.1　服务器端提供的组件  / 370
12.1.1　配置 / 370
12.1.2　API / 372
12.1.3　路由 / 372
12.2　Sencha Touch 2.0中的Provider / 374
12.2.1　PollingProvider方法的使用及示例 / 374
12.2.2　RemotingProvider方法的使用及示例 / 377
12.3　 Direct代理 / 387
12.3.1　Direct代理的使用示例 / 388
12.3.2　在Direct代理所使用的方法中提交命名参数 / 391
12.4　DirectStore数据仓库  / 394
12.5　本章小结 / 402
第13章　自适应尺寸的Sheet组件 / 403
13.1　Sheet组件简介 / 403
13.2　ActionSheet组件的使用及示例 / 403
13.3　Sencha Touch 2.0中的提示信息框 / 406
13.3.1　提示信息框 / 406
13.3.2　确认信息框 / 408
13.3.3　Ext.Msg.show方法 / 409
13.4　Picker组件的使用及示例 / 411
13.5　使用DatePicker组件选取日期 / 417
13.6　本章小结 / 419
第14章　Sencha Touch 2.0中的样式与主题 / 420
14.1　利用配置选项设置单个组件的样式 / 420
14.2　Sencha Touch 2.0中的内置主题 / 421
14.2.1　重载默认主题中组件的样式 / 421
14.2.2　修改Sencha Touch 2.0中的内置主题 / 422
14.3　利用SASS定制Sencha Touch 2.0的主题 / 423
14.3.1　安装SASS和Compass / 423
14.3.2　在Sencha Touch 2.0中使用SASS  / 424
14.3.3　修改Sencha Touch 2.0默认主题中的变量 / 425
14.4　SCSS样式表文件 / 426
14.4.1　SCSS提供的高级特性 / 426
14.4.2　Sencha Touch 2.0提供的mixin / 431
14.4.3　编译SCSS样式表文件 / 432
14.4.4　应用SCSS样式表文件定制主题示例 / 433
14.4.5　SCSS样式表文件中自定义组件样式的示例 / 434
14.5　本章小结 / 436
第15章　创建自定义组件与MVC模式的应用程序 / 437
15.1　实现自定义组件 / 437
15.1.1　Sencha Touch 2.0中的包与命名空间 / 437
15.1.2　创建自定义组件 / 438
15.1.3　为自定义组件添加自定义方法 / 441
15.2　使用命令行工具创建及部署MVC模式的应用程序 / 443
15.2.1　命令行工具的安装及使用 / 443
15.2.2　创建MVC模式的应用程序 / 444
15.2.3　部署MVC模式的应用程序 / 446
15.2.4　页面文件与脚本文件分析 / 447
15.2.5　应用程序中的默认命名约定 / 450
15.2.6　应用程序启动时的函数调用顺序 / 451
15.3　创建视图与控制器 / 452
15.3.1创建应用程序的主视图 / 452
15.3.2创建应用程序的主控制器 / 453
15.3.3通过控制器实现用户与应用程序之间的交互 / 454
15.4　在控制器中指定路由 / 457
15.4.1　通过routes配置选项指定路由 / 458
15.4.2　在路由中使用参数 / 464
15.4.3　通过before配置选项拦截路由方法的执行 / 467
15.5　设备配置文件 / 474
15.5.1　检测应用程序当前所用的设备配置文件 / 474
15.5.2　为应用程序编制设备配置文件 / 475
15.5.3　在设备配置文件中使用launch函数 / 476
15.5.4　为设备单独编写视图 / 477
15.5.5　将各种视图在不同的设备中以不同的方式进行结合 / 480
15.5.6　为设备单独编写控制器 / 487
15.6　本章小结 / 491
第三部分　综 合 案 例
第16章　综合应用案例 / 494
16.1　应用程序的所有文件及其路径 / 494
16.2　应用程序的页面文件与脚本文件 / 496
16.3　利用SASS定制样式主题 / 498
16.4　设备配置文件 / 500
16.5　模型与数据仓库 / 501
16.6　视图与控制器 / 508
16.6.1　应用程序的主视图 / 508
16.6.2　用户注册/登录视图与控制器 / 510
16.6.3　展示视图及其控制器 / 516
16.6.4　书籍列表展示视图与控制器 / 524
16.6.5　书籍信息编辑视图与控制器 / 534
16.7　本章小结 / 540
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Sencha Touch权威指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>AppleScript权威指南
前言
第一部分　applescript概述
第1章　为什么使用applescript
applescript的自然性和目的
这个应用程序是可脚本化的吗？
计算和重复
缩减
个性化
组合特性
第2章　在哪里使用applescript
脚本编辑器
内部可脚本化的应用程序
script runner
自动地址
应用程序
unix
超链接
自动器
第3章　基本概念
apple事件
. 　开放式脚本结构
script
编译和反编译
已编译的脚本文件
脚本文本文件
applet和droplet
附加脚本
词典
丢失的外部引用对象
可脚本化模式
第二部分　applescript语言
第4章　applescript语言简介
小型语言
扩展性及其风险
不可思议的“类英语”语言
“类对象”语言
“类lisp”语言
学习曲线
第5章　语法的基本构成
行
结果
注释
缩写词和同义词
段（blocks）
the
第6章　要素概述
作用域段
层次和嵌套
顶层
代码和运行句柄
变量
第7章　变量
赋值和取值
变量声明和定义
变量名
第8章　脚本对象
脚本对象定义
运行句柄
脚本属性
作为值的脚本对象
顶层实体
作为脚本对象的已编译脚本文件
继承
多态
第9章　句柄
句柄定义
返回值
作为值的句柄
参数
通过引用传值
定义和调用句柄的语法
事件句柄
运行句柄
递归
功能强大的句柄技巧
第10章　作用域
作用域范围
变量类型
顶层实体作用域
局部变量的作用域
全局变量的作用域
未声明变量的作用域
声明您的变量
自由变量
变量的重声明
封闭域
第11章　对象
消息
属性
类
目标
get
it
me
属性和元素
元素标识符
对多项引用的操作
多重属性的赋值
对象字符串标识符
第12章　引用
作为目标的引用
作为咒语（incantation）的引用．
创建一个引用
区分引用
解引用
contents的问题
创建指向变量的引用
作为参数的引用
第13章　数据类型
应用程序（application）
机器（machine）
数据（data）
布尔值（boolean）
整数、实数和数字
日期（date）
字符串（string）
unicode文本
文件（file）和别名（alias）
列表
记录
第14章　强制转换
隐式强制转换
显式强制转换
布尔强制转换
数字、字符串和日期强制转换
文件强制转换
列表强制转换
单位换算
第15章　操作符
隐式强制转换
算术操作符
布尔操作符
比较操作符
包含操作符
串接操作符
括号
谁执行操作
第16章　全局属性
字符串
数字
杂项
第17章　常量
第18章　命令
应用程序命令
标准命令
日志命令
第19章　控制
分支
循环
tell
using terms from
with
considering/ignoring
错误
second-level evaluation（二级赋值）
第三部分　实践中的applescript
第20章　词典
术语解释
术语冲突
无意义的apple事件
原始的四字母码
多词术语
词典中有什么
aeut资源
词典的不足
第21章　附加脚本
附加脚本的利与弊
classic附加脚本
加载附加脚本
标准附加脚本命令
第22章　速度
交易的工具
apple事件
列表访问
附加脚本
上下文
第23章　可脚本化的应用程序
指向可脚本化应用程序
一些可脚本化的应用程序
第24章　不可脚本化的应用程序
历史背景
由可访问性开始
gui脚本编程示例
第25章　unix
do shell script
osascript
第26章　自动触发脚本
数字集线器脚本编程（digital hub scripting）
对文件夹的操作
cgi应用程序
定时器、耦合（hooks）、可配属性、可监控性
第27章　编写应用程序
applet
applescript studio
applescript studio脚本化能力
第四部分　附录
附录a　applescript的体验
附录b　不含applescript的apple事件
附录c　工具与资源
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>AppleScript权威指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Objective-C 2.0编程快速上手(苹果开发与应用系列)
译者序
前言
第1章Objective-C基础知识⋯⋯⋯⋯⋯⋯⋯1
1.1 创建第一个程序⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯3
1.2 编译并运行第一个程序⋯⋯⋯⋯⋯⋯⋯⋯6
1.3 使用变量⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯8
1.4 显示变量中的值⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯9
1.5 使用数据类型⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯11
1.6 添加注释⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯13
1.7 使用算术运算符⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯15
1.8 使用赋值运算符⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯17
1.9 使用自增和自减运算符⋯⋯⋯⋯⋯⋯⋯19
1.10 使用强制转型运算符改变类型⋯⋯⋯⋯21
第2章控制程序流程⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯23
2.1 使用if语句⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯26
2.2 使用else语句⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯27
2.3 使用switch语句⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯29
2.4 使用比较运算符⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯31
2.5 使用逻辑运算符⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯32
2.6 使用条件运算符⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯33
2.7 使用for循环⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯35
2.8 使用while循环⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯37
2.9 使用do...while循环⋯⋯⋯⋯⋯⋯⋯⋯⋯39
2.10 使用break语句⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯41
第3章处理数据⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯43
3.1 创建NS类对象⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯45
3.2 创建数组⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯46
3.3 初始化数组⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯47
3.4 循环遍历数组⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯48
3.5 创建二维数组⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯49
3.6 使用指针⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯51
3.7 使用指针数学运算⋯⋯⋯⋯⋯⋯⋯⋯⋯52
3.8 交换指针和数组⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯53
3.9 使用字符串⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯54
3.10 向字符串对象传递消息⋯⋯⋯⋯⋯⋯⋯56
3.11 使用枚举⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯57
第4章创建函数⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯59
4.1 定义函数⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯61
4.2 使用原型声明函数⋯⋯⋯⋯⋯⋯⋯⋯⋯62
4.3 向函数传递参数⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯64
4.4 从函数返回值⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯66
4.5 使用函数作用域⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯68
4.6 向函数传递指针⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯70
4.7 向函数传递数组⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯72
4.8 向函数传递常量数据⋯⋯⋯⋯⋯⋯⋯⋯74
4.9 使用递归⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯76
4.10 使用函数指针⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯77
第5章类和对象⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯79
5.1 创建Objective-C类和对象⋯⋯⋯⋯⋯⋯82
5.2 使用类方法⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯84
5.3 创建对象⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯86
5.4 创建对象方法⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯87
5.5 在对象中存储数据⋯⋯⋯⋯⋯⋯⋯⋯⋯88
5.6 向方法传递多个参数⋯⋯⋯⋯⋯⋯⋯⋯90
5.7 在头文件中存储接口⋯⋯⋯⋯⋯⋯⋯⋯92
5.8 把实现添加到头文件⋯⋯⋯⋯⋯⋯⋯⋯94
5.9 连接多个文件⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯95
5.10 使用构造方法⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯97
第6章面向对象编程⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯99
6.1 访问限定符⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯100
6.2 使用公有访问⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯102
6.3 使用私有访问⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯103
6.4 使用保护访问⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯105
6.5 使用类变量⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯107
6.6 访问当前对象⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯109
6.7 针对多个对象类型创建一个变量⋯⋯⋯111
6.8 验证对象属于一个类⋯⋯⋯⋯⋯⋯⋯⋯113
6.9 使用isKindOfClass查看一个对象的类⋯115
6.10 验证对象支持一个方法⋯⋯⋯⋯⋯⋯117
6.11 检查对象是否支持一个方法⋯⋯⋯⋯118
第7章使用面向对象继承⋯⋯⋯⋯⋯⋯⋯119
7.1 从类继承⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯121
7.2 继承基类数据成员⋯⋯⋯⋯⋯⋯⋯⋯⋯122
7.3 继承基类方法⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯124
7.4 覆盖基类方法⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯126
7.5 重载基类方法⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯128
7.6 使用多层级继承⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯130
7.7 有限访问⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯132
7.8 限制访问⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯134
7.9 在继承中使用构造方法⋯⋯⋯⋯⋯⋯⋯136
7.10 使用多态⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯138
第8章分类、扮演和协议⋯⋯⋯⋯⋯⋯⋯141
8.1 关于分类⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯143
8.2 分类：创建基类⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯145
8.3 分类：创建分类⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯146
8.4 分类：综合运用⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯147
8.5 关于扮演⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯149
8.6 扮演：创建基类⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯151
8.7 扮演：创建派生类⋯⋯⋯⋯⋯⋯⋯⋯⋯152
8.8 扮演：综合应用⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯153
8.9 关于协议⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯155
8.10 协议：定义协议和接口⋯⋯⋯⋯⋯⋯157
8.11 协议：创建类实现⋯⋯⋯⋯⋯⋯⋯⋯159
8.12 协议：综合应用⋯⋯⋯⋯⋯⋯⋯⋯⋯161
第9章使用数组和字典⋯⋯⋯⋯⋯⋯⋯⋯163
9.1 创建数组⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯165
9.2 访问数组元素⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯166
9.3 使用枚举遍历数组⋯⋯⋯⋯⋯⋯⋯⋯⋯167
9.4 创建可变数组⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯169
9.5 为可变数组添加元素⋯⋯⋯⋯⋯⋯⋯⋯171
9.6 排序数组⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯173
9.7 释放数组内存⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯175
9.8 创建字典⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯176
9.9 枚举字典⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯178
9.10 创建可变字典⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯180
9.11 给可变字典添加对象⋯⋯⋯⋯⋯⋯⋯181
第10章在Objective-C中管理内存⋯⋯⋯183
10.1 创建测试对象⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯185
10.2 显示保留计数⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯186
10.3 增加对象的保留计数⋯⋯⋯⋯⋯⋯⋯188
10.4 减少对象的保留计数⋯⋯⋯⋯⋯⋯⋯190
10.5 从内存收回对象⋯⋯⋯⋯⋯⋯⋯⋯⋯192
10.6 使用自动释放池⋯⋯⋯⋯⋯⋯⋯⋯⋯194
10.7 使用自管理内存⋯⋯⋯⋯⋯⋯⋯⋯⋯195
10.8 自行回收内存：创建类⋯⋯⋯⋯⋯⋯197
10.9 自行回收内存：存储内部对象⋯⋯⋯198
10.10 自行回收内存：创建main方法⋯⋯⋯200
10.11 自行回收内存：执行回收⋯⋯⋯⋯⋯201
第11章异常处理⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯203
11.1 捕获异常⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯205
11.2 处理异常⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯206
11.3 使用终止处理程序⋯⋯⋯⋯⋯⋯⋯⋯207
11.4 创建异常⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯209
11.5 检查发生了什么异常⋯⋯⋯⋯⋯⋯⋯211
11.6 处理多个异常⋯⋯⋯⋯⋯⋯⋯⋯⋯⋯213
11.7 把异常向上传递到调用堆栈⋯⋯⋯⋯215
11.8 从异常处理程序返回值⋯⋯⋯⋯⋯⋯217
11.9 从异常处理程序返回void值⋯⋯⋯⋯219
11.10 捕获未捕获的异常⋯⋯⋯⋯⋯⋯⋯⋯221
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Objective-C 2.0编程快速上手(苹果开发与应用系列)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通Objective-C
第1章　入门　　1
1.1　简介
1.1.1　苹果公司的Objective-C平台　　1
1.1.2　选择Objective-C的原因　　2
1.2　开发一个简单的Objective-C程序　　3
1.2.1　新建工程　　3
1.2.2　编写第一个Objective-C程序　　7
1.3　小结　　9
第2章　使用类　　10
2.1　开发第一个类　　10
2.1.1　向项目中添加一个类　　10
2.1.2　编写Atom类的接口　　12
2.1.3　编写实现Atom类的代码　　13
2.2　实例变量　　15
2.2.1　设置访问实例变量的方式　　16
2.2.2　声明实例变量　　16
2.2.3　访问实例变量　　17
2.3　属性　　17
2.3.1　属性声明　　17
2.3.2　属性定义　　18
2.3.3　由属性支持的实例变量　　19
2.3.4　访问属性　　19
2.4　方法　　20
2.4.1　语法　　20
2.4.2　调用方法　　21
2.5　协议　　21
2.6　分类　　24
2.7　小结　　27
第3章　对象和消息传递　　28
3.1　创建对象　　28
3.1.1　初始化对象　　29
3.1.2　延伸Elements工程　　30
3.2　发送消息　　35
3.3　消息转发　　36
3.3.1　转发选项　　37
3.3.2　向Hydrogen类添加快速转发机制　　3
3.4　小结　　41
第4章　内存管理　　43
4.1　程序的内存使用情况　　　　43
4.2　Objective-C的内存模型　　45
4.3　手动管理　　45
4.3.1　对象引用和对象所有权　　45
4.3.2　内存管理基本原则　　45
4.3.3　使用MRR　　48
4.4　使用自动引用计数　　54
4.4.1　使用ARC的规则和约定　　55
4.4.2　ARC的生命周期限定符　　56
4.4.3　使用ARC　　56
4.4.4　避免循环引用　　　　60
4.5　小结　　60
第5章　预处理器　　62
5.1　概述　　62
5.2　预处理器语言　　63
5.2.1　指令　　64
5.2.2　宏　　71
5.3　小结　　72
第6章　专家级技巧：使用ARC　　74
6.1　ARC和对象所有权　　74
6.1.1　声明对象的所有权　　74
6.1.2　释放对象的所有权　　75
6.2　扩展订单条目工程　　76
6.3　将ARC与苹果公司提供的框架和服务一同使用　　82
6.4　Objective-C直接桥接　　　　83
6.5　使用ARC桥接转换　　85
6.6　小结　　89
第7章　运行时系统　　90
7.1　动态功能　　90
7.2　对象消息　　90
7.2.1　选择器　　92
7.2.2　方法签名　　93
7.2.3　使用对象消息　　　　94
7.3　动态类型　　100
7.4　动态绑定　　101
7.5　动态方法决议　　102
7.6　动态加载　　104
7.7　内省　　105
7.8　小结　　106
第8章　运行时系统的结构　　107
8.1　运行时系统的组成部分　　107
8.1.1　编译器　　107
8.1.2　运行时系统库　　112
8.2　与运行时系统交互　　120
8.2.1　NSObject类的运行时方法　　121
8.2.2　执行对象内省　　121
8.3　小结　　123
第9章　专家级技巧：使用运行时系统API　　125
9.1　使用可选包扩展程序　　125
9.1.1　方法　　125
9.1.2　步骤1：编写基础代码　　125
9.1.3　步骤2：创建一个可选包　　128
9.1.4　步骤3：动态加载包　　132
9.2　使用运行时系统API　　138
9.2.1　定义方法的实现函数　　140
9.2.2　创建并注册类　　140
9.2.3　创建类实例　　141
9.2.4　以动态方式向类实例添加变量　　141
9.3　创建动态代理　　142
9.3.1　创建Invoker协议　　143
9.3.2　编写代理类　　144
9.3.3　测试AspectProxy程序　　147
9.4　小结　　149
第10章　Foundation框架中的常用类　　150
10.1　根类　　150
10.1.1　NSObject协议　　150
10.1.2　NSObject类　　151
10.1.3　NSProxy类　　153
10.2　字符串　153
10.2.1　NSString类　　　154
10.2.2　NSAttributedString类　　157
10.2.3　NSString常量　　157
10.2.4　格式化字符串　　157
10.3　值对象　　158
10.3.1　NSValue类　　158
10.3.2　NSNumber类　　158
10.3.3　NSDecimalNumber类　　159
10.3.4　NSNumber常量　　159
10.3.5　对日期和时间的支持　　160
10.3.6　NSCache类　　160
10.4　集合　　161
10.4.1　NSArray类　　161
10.4.2　NSPointerArray类　　162
10.4.3　NSDictionary类　　162
10.4.4　NSMapTable类　　163
10.4.5　NSSet类　　163
10.4.6　NSCountedSet类　　163
10.4.7　NSHashTable类　　163
10.4.8　NSPointerFunctions类　　164
10.5　XML处理类　　164
10.5.1　XML的DTD处理类　　164
10.5.2　基于树形结构的XML处理类　　164
10.5.3　事件驱动的XML处理类　　165
10.6　谓词类　　165
10.7　小结　　166
第11章　Foundation框架中的系统服务　　167
11.1　网络服务　　167
11.1.1　NSHost类　　167
11.1.2　Bonjour网络服务　　167
11.2　应用服务　　168
11.3　正则表达式和文本处理　　168
11.4　文件系统实用程序　　169
11.4.1　应用程序包　　169
11.4.2　文件管理　　170
11.4.3　数据流的输入输出　　170
11.4.4　元数据查询　　171
11.5　并发机制和线程　　171
11.5.1　线程管理　　171
11.5.2　并行操作　　172
11.5.3　锁定　　173
11.5.4　计时器和运行循环　　173
11.5.5　创建Bonjour网络服务客户端　　174
11.6　URL处理　　178
11.6.1　URL加载　　178
11.6.2　缓存管理　　180
11.6.3　使用URL加载API下载资源　　180
11.6.4　身份认证和证书管理　　185
11.6.5　Cookie管理　　186
11.6.6　协议支持　　186
11.7　进程间通信　　186
11.7.1　通过信道通信　　187
11.7.2　通过端口通信　　187
11.7.3　端口注册　　187
11.8　小结　　188
第12章　Foundation框架的专用服务　　189
12.1　通知　　189
12.2　归档和序列化　　192
12.2.1　归档　　192
12.2.2　属性列表序列化　　193
12.2.3　归档对象图　　195
12.3　分布式对象　　204
12.4　脚本　　205
12.5　小结　　205
第13章　Foundation框架函数和数据类型　　206
13.1　Foundation框架函数　　206
13.1.1　断言　　206
13.1.2　记录日志　　209
13.1.3　包　　209
13.1.4　十进制数值运算和字节排序　　211
13.1.5　与运行时系统进行交互　　214
13.1.6　文件路径　　214
13.1.7　几何图形　　215
13.2　数据类型　　216
13.3　常数　　216
13.4　小结　　216
第14章　专家级技巧：错误处理　　217
14.1　运行时错误情况　　217
14.1.1　断言　　217
14.1.2　错误编码　　218
14.1.3　错误对象　　218
14.1.4　异常　　218
14.2　NSError类　　218
14.2.1　使用错误对象　　219
14.2.2　处理委托方法错误　　221
14.2.3　通过间接方式创建错误对象　　225
14.2.4　错误恢复　　226
14.2.5　错误回应对象　　227
14.2.6　NSError编码　　227
14.3　异常处理　　227
14.4　NSException类　　228
14.4.1　异常和内存管理　　229
14.4.2　执行异常处理　　230
14.5　Foundation框架标准异常名称　　232
14.6　错误处理指导原则　　233
14.7　小结　　234
第15章　块　　235
15.1　块的语法　　235
15.2　块就是闭包　　239
15.2.1　词汇范围　　239
15.2.2　可修改的__block变量　　241
15.3　块的内存管理　　241
15.4　使用块　　243
15.4.1　使用块为数组排序　　243
15.4.2　使用块加载URL　　245
15.4.3　使用块的并行编程方式　　248
15.5　小结　　251
第16章　Objective-C常量　　252
16.1　常量　　252
16.2　NSNumber常量　　253
16.3　容器常量　　254
16.3.1　NSArray常量　　254
16.3.2　NSDictionary常量　　255
16.4　表达式常量　　256
16.5　对象下标　　257
16.5.1　NSArray对象的下标　　257
16.5.2　NSDictionary对象的下标　　258
16.6　自定义下标　　259
16.7　使用自定义下标编辑寄存器值　　260
16.8　小结　　270
第17章　并发编程　　272
17.1　并发编程的基本原则　　272
17.1.1　并发处理的优势　　273
17.1.2　实现并发处理　　274
17.2　并行处理带来的挑战　　274
17.3　共享数据　　275
17.4　消息传递　　276
17.5　在Objective-C中实现并发编程　　276
17.6　语言特性　　277
17.7　消息传递　　278
17.8　线程　　279
17.8.1　NSObject线程　　279
17.8.2　NSThread　　280
17.8.3　线程同步　　281
17.9　使用线程实现并发处理　　284
17.10　操作和操作队列　　288
17.11　实现并发操作　　291
17.12　使用操作队列实现并发处理　　295
17.13　Grand Central Dispatch　　298
17.14　为并发编程选择合适的API　　301
17.15　小结　　301
第18章　键值编程　　303
18.1　键值编码　　303
18.2　设计和实现KVC　　306
18.2.1　键值编码API　　307
18.2.2　键值搜索模式　　308
18.2.3　属性访问方法的命名约定　　308
18.2.4　一对多属性访问方法命名约定　　309
18.2.5　键值检验　　310
18.2.6　键值编码的集合操作符　　311
18.3　键值观察　　313
18.3.1　键值观察和通知　　314
18.3.2　键值观察API　　314
18.4　KVO的设计和实现　　316
18.5　使用键值编程　　316
18.6　小结　　323
附录A　语言元素　　325
附录B　Xcode的配置功能　　337
附录C　使用LLDB　　353
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通Objective-C
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Swift权威指南
第1章 未来的iOS开发语言Swift
语言介绍
1.1 Swift语言的前世今生
1.2 Swift到底是怎样的一种语言
1.3 Swift开发环境搭建
1.4 创建Swift工程（OS X和iOS平台）
1.5 瞧一瞧Swift到底长啥样
1.6 所见即所得的Playground
1.7 小结
第2章 千里之行始于足下--Swift语言基础
2.1 Swift语句和分号
2.2 变量和常量
2.2.1 定义和初始化
2.2.2 将变量和常量值插入字符串中
2.2.3 变量和常量的命名规则
2.2.4 为变量和常量指定数据类型
2.3 数据类型
2.3.1 整数类型
2.3.2 数制转换
2.3.3 浮点类型
2.3.4 数值的可读性
2.3.5 数值类型之间的转换
2.3.6 类型别名
2.3.7 布尔类型
2.4 字符和字符串
2.4.1 字符类型的常量和变量
2.4.2 字符串类型的常量和变量
2.4.3 枚举字符串中的所有字符
2.4.4 获取字符串中字符的Unicode编码
2.4.5 字符串和字符的连接
2.4.6 在字符串中包含特殊字符
2.4.7 字符串之间的比较
2.4.8 字符串的大小写转换
2.5 元组（tuples）类型
2.5.1 元组类型的定义
2.5.2 获取元组中的元素值
2.5.3 为元组中的元素命名
2.6 可选类型
2.7 注释
2.8 小结
第3章 万丈高楼平地起--基本操作符
3.1 操作符的种类
3.2 赋值操作符
3.3 数值操作符
3.3.1 四则运算操作符
3.3.2 整数求余
3.3.3 浮点数求余
3.3.4 自增和自减
3.3.5 一元负号和正号
3.4 复合赋值操作符
3.5 比较操作符
3.6 三元条件操作符
3.7 区间操作符
3.8 逻辑操作符
3.8.1 逻辑非
3.8.2 逻辑与
3.8.3 逻辑或
3.8.4 组合逻辑
3.8.5 使用圆括号指定优先级
3.9 小结
第4章 此字典非彼字典--数组和字典
4.1 数组（Array）
4.1.1 创建和初始化数组
4.1.2 创建空数组
4.1.3 创建固定长度的数组
4.1.4 数组的加法
4.1.5 获取和设置数组元素值
4.1.6 数组区间赋值
4.1.7 添加和删除数组元素
4.1.8 枚举数组中的所有元素
4.2 字典（Dictionary）
4.2.1 创建和初始化字典
4.2.2 创建空的字典
4.2.3 添加、修改和删除字典中的数据
4.2.4 获取字典中的值
4.2.5 将value转换为指定的类型值
4.2.6 枚举字典中的key和value
4.2.7 将keys和values转换为数组
4.3 小结
第5章 千变万化的程序--控制流
5.1 for循环
5.1.1 对区间操作符进行循环
5.1.2 枚举数组和字典中的元素
5.1.3 枚举字符串中的所有字符
5.1.4 条件增量for循环语句
5.2 while和do...while循环
5.2.1 while循环
5.2.2 do...while循环
5.3 条件语句（if和switch）
5.3.1 if条件语句
5.3.2 Switch条件语句的基本用法
5.3.3 fallthrough语句
5.3.4 使用区间操作符进行条件匹配
5.3.5 使用元组进行条件匹配
5.3.6 where子句
5.4 在控制流中使用的控制语句（continue和break）
5.5 可跳转的标签
5.6 小结
第6章 丰富多彩的功能--函数
6.1 函数的定义和调用
6.2 返回多值的函数
6.3 扩展参数
6.4 扩展参数和内部参数合二为一
6.5 默认参数值
6.6 可变参数
6.7 常量和变量参数
6.8 输入输出参数
6.9 函数类型
6.10 嵌套函数
6.11 小结
第7章 代码之美的诠释--闭包
7.1 闭包表达式
7.1.1 使用闭包表达式代替回调函数
7.1.2 省略参数类型
7.1.3 省略返回值类型
7.1.4 省略return语句
7.1.5 既然都一样，那就去掉一个
7.1.6 直接给跪了！连骨架都没了
7.2 尾随闭包
7.3 捕获值
7.4 闭包是引用类型
7.5 小结
第8章 特殊的数据--枚举类型
8.1 枚举类型的语法格式
8.2 匹配枚举成员
8.3 组合枚举成员
8.4 设置枚举成员的原始值
8.5 小结
第9章 Swift语言的核心--类和结构体
9.1 类和结构体基础
9.1.1 类和结构体的异同点
9.1.2 定义类和结构体
9.1.3 创建类和结构体实例
9.1.4 访问和设置类和结构体成员的值
9.1.5 值类型和引用类型
9.1.6 判断两个变量或常量引用了同一个类对象
9.2 属性
9.2.1 存储属性
9.2.2 惰性存储属性
9.2.3 可读写的计算属性
9.2.4 只读计算属性
9.2.5 属性观察器
9.2.6 静态属性
9.3 方法
9.3.1 实例方法
9.3.2 方法的局部参数名和外部参数名
9.3.3 为方法的第一个参数增加外部参数名
9.3.4 类型中的self
9.3.5 方法的变异（mutating）
9.3.6 类型方法
9.4 构造器
9.4.1 没有参数的构造器
9.4.2 构造器重载
9.4.3 构造器的内部参数和外部参数
9.4.4 默认构造器
9.4.5 结构体的逐一成员构造器
9.5 析构器
9.6 为类和结构体增加下标（Subscript）操作
9.7 小结
第10章 容易犯错的地方--类的继承
10.1 如何继承一个父类
10.2 重写方法
10.3 重写属性
10.4 重写属性观察器
10.5 方法被重写
10.6 构造器在继承中的调用规则
10.6.1 构造器和便利构造器
10.6.2 指定构造器和便利构造器是如何继承的
10.6.3 为什么子类必须调用父类的构造器
10.7 小结
第11章 内存管理机制--ARC
11.1 ARC的工作原理
11.2 测试ARC在内存管理中所起到的作用
11.3 解决循环强引用问题
11.3.1 什么是循环强引用
11.3.2 弱引用
11.3.3 无主引用
11.4 闭包引起的循环强引用
11.5 小结
第12章 让程序不抛出异常顺畅运行--可选链
12.1 什么是可选链
12.2 使用可选链访问属性
12.3 使用可选链调用方法
12.4 使用可选链调用下标
12.5 多层连续使用可选链
12.6 对方法返回值执行可选链
12.7 小结
第13章 Swift语言的摩法--类型转换
13.1 类型转换概述
13.2 类型检测
13.3 类型强行转换
13.4 AnyObject和Any的类型转换
13.4.1 AnyObject类型
13.4.2 Any类型
13.5 小结
第14章 为程序增添无限动力--扩展
14.1 什么是扩展
14.2 扩展语法
14.3 扩展计算型属性
14.4 扩展构造器
14.5 扩展方法
14.6 修改实例方法
14.7 扩展下标
14.8 扩展嵌套类型
14.9 小结
第15章 开发大型程序必备无素--协议
15.1 协议的语法
15.2 协议中的成员
15.2.1 属性
15.2.2 方法
15.2.3 突变方法
15.3 协议类型
15.4 委托（Delegate）
15.5 在扩展中添加成员
15.6 通过扩展补充协议声明
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Swift权威指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iPhone App开发实战手册
引言	1
第一部分
第1章  创建你的第一个iPhone应用	9
准备工具	9
安装Xcode	11
安装iPhone SDK	12
关于SDK要进一步了解什么	15
熟悉新工具	17
每个Flashlight都需要一个部件表	17
组装	21
在Mac上运行一下	22
修改的决定	24
第2章  方括号的力量	29
Objective-C：iPhone应用开发基本功	29
方括号的领地	30
对象的要素	31
让对象干活	31
众多的类	32
类详解	34
疯狂背后的原理	36
用类别表达	37
实现：美丽背后的智慧	38
创建新类	40
管理内存	42
来一片nil	44
轻松地自动释放	45
属性和点	47
类方法	48
初始化对象	49
解除地址分配	50
循环：更好还是更坏	51
异常处理代码	52
从崩溃中学习	53
使用选择器	55
出示你的id	57
下一步	60
开发文档	60
学会偷懒	63
第3章  Cocoa Touch：让Objective-C运行起来	65
Cocoa Touch入门	65
三大巨头：模型、视图、控制器	66
视图	67
模型	67
控制器	68
值对象	69
基础数据类型	69
对象化（Objectified）	70
集合	73
深度复制	74
属性列表	74
可变还是不可变	75
让它可改变	76
保护你的数据	77
委托和数据源	78
目标和操作	80
用户界面：复杂的方法	81
用户界面：简单的方法	85
通知	96
单例	99
将单例作为全局变量	99
下一步	100
设计语言	101
第4章  设计工具：做一个更好的FlashLight	103
编码之前的计划	103
为何要找个设计师	103
设计目标	104
iPhone的独有设计模式	104
设计过程	107
与设计师和谐共处	111
反馈，不要只考虑到自己的想法	112
反馈的提供者	112
Flashlight 2.0	114
更大，更强，更快	115
正面	115
背面	116
绘图板	117
在图片和代码之间的技术设计	117
开始命名	118
下一步	120
准备编码	120
第二部分
第5章  开始深入开发	125
超越模板	125
选择SDK	126
修改项目设置	126
修改目标设置	127
编译设置	132
重复配置	134
官方授权	134
加入iPhone开发者计划	135
打开这扇门	136
如果失败	149
移动体验	152
准备开工	152
第6章  专业版Flashlight	153
一趟观光旅行	153
从哪里开始	153
打开旅行指南	154
Flashlight_ProAppDelegate	155
观察NIB文件	156
MainWindow.xib	157
MainView.xib	158
调整视图尺寸	160
自动尺寸调整	161
SettingsView.xib	162
AboutView.xib	164
细化外观	165
LightView	166
IFInfoView	170
你自己的Cocoa Touch	180
UIColor+Brightness	180
UIView+Brightness	181
UIView+Concealed	181
优化模型	186
SOSModel	187
FlashlightModel	188
整合起来	191
MainViewController	191
SettingsViewController	197
AboutViewController	201
本地化的语言	203
Localizable.strings文件	203
AboutView.xib	205
总结	206
第三部分
第7章  收尾工作	209
Beta测试	209
应用在你这里运行一切正常，但是……	209
Ad Hoc & Roll	210
清理外观	223
美化委员会	223
程序语言本地化	224
Web开发	224
网站	225
App Store，我来了	227
第8章  销售	229
签订合同	229
欢迎	229
第一件要做的事情	230
提出你的申明	234
出口合规	234
概要	235
评分	240
上传——展示	241
定价	243
本地化	245
检查	246
调整	246
市场	247
度量	248
竞争	251
两个开发人员，一个商店	252
定价策略	253
先试后买	255
上传	256
最终版配置文件	257
最终目标	257
最终版本的构建	258
最终版本的上传	258
最终的测试	259
第一次推广	261
应用审查	261
确保你没有破坏任何规则	262
应对拒绝	263
可以销售了	264
发布日	265
第9章  你已经拥有了客户	267
销售统计	267
日常销售报告	267
月度财务报告	270
获得付款	271
广告与促销	272
新闻稿	272
口碑传播	273
社交网络：疯狂的口头传播	273
让用户可以说些什么	275
大爆炸	277
网络广告	278
推广码	282
销售价格	283
把效果绘制出来	284
监控覆盖	285
注册	287
客户支持	291
一切都是完美的	292
崩溃原因	292
支持邮件的处理	293
产品更新	294
新信息	294
欢迎回到iTunes	294
升级	295
恭喜	296
第四部分
附录A  去哪里进一步学习	299
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iPhone App开发实战手册
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Swift开发指南
第一部分　基础篇
第1章　准备开始　　2
1.1　本书学习路线图　　2
1.2　本书中的约定　　3
1.2.1　示例代码约定　　4
1.2.2　图示的约定　　4
1.3　Xcode开发工具　　6
1.3.1　Xcode安装和卸载　　7
1.3.2　Xcode界面　　10
1.4　如何使用API帮助　　11
1.5　本章小结　　14
1.6　同步练习　　14
第2章　第一个Swift程序　　15
2.1　使用Playground编写　　15
2.1.1　编程利器Playground　　15
2.1.2　编写HelloWorld程序　　16
2.2　代码解释　　19
2.3　本章小结　　20
2.4　同步练习　　20
第3章　Swift基本语法　　21
3.1　标识符和关键字　　21
3.1.1　标识符　　21
3.1.2　关键字　　22
3.2　常量和变量　　22
3.2.1　常量　　22
3.2.2　变量　　23
3.2.3　命名规范　　23
3.3　注释　　24
3.4　表达式　　25
3.5　本章小结　　26
3.6　同步练习　　26
第4章　基本运算符　　28
4.1　算术运算符　　28
4.1.1　一元运算符　　28
4.1.2　二元运算符　　29
4.1.3　算术赋值运算符　　30
4.2　关系运算符　　31
4.3　逻辑运算符　　33
4.4　位运算符　　34
4.5　其他运算符　　36
4.6　本章小结　　37
4.7　同步练习　　37
第5章　基本数据类型　　39
5.1　Swift数据类型　　39
5.2　整型　　39
5.3　浮点型　　41
5.4　数字表示方式　　41
5.4.1　进制数字表示　　41
5.4.2　指数表示　　42
5.4.3　其他表示　　42
5.5　数字类型之间的转换　　42
5.5.1　整型之间的转换　　42
5.5.2　整型与浮点型之间的转换　　43
5.6　布尔型　　44
5.7　元组类型　　44
5.8　本章小结　　45
5.9　同步练习　　45
第6章　字符和字符串　　47
6.1　字符　　47
6.1.1　Unicode编码　　47
6.1.2　转义符　　48
6.2　创建字符串　　49
6.3　字符串可变性　　49
6.4　字符串比较　　50
6.4.1　大小和相等比较　　50
6.4.2　前缀和后缀比较　　51
6.5　本章小结　　52
6.6　同步练习　　52
第7章　控制语句　　54
7.1　分支语句　　54
7.1.1　条件语句if　　54
7.1.2　多分支语句switch　　56
7.1.3　在switch中使用范围匹配　　58
7.1.4　在switch中比较元组类型　　59
7.2　循环语句　　61
7.2.1　while语句　　61
7.2.2　do while语句　　63
7.2.3　for语句　　63
7.2.4　for in语句　　64
7.3　跳转语句　　65
7.3.1　break语句　　66
7.3.2　continue语句　　67
7.3.3　fallthrough语句　　69
7.4　本章小结　　71
7.5　同步练习　　71
第8章　集合　　75
8.1　数组集合　　75
8.1.1　数组声明与初始化　　76
8.1.2　数组的修改　　77
8.1.3　数组遍历　　78
8.2　字典集合　　78
8.2.1　字典声明与初始化　　79
8.2.2　字典的修改　　80
8.2.3　字典遍历　　81
8.3　集合的复制　　82
8.3.1　字典复制　　82
8.3.2　数组复制　　84
8.4　本章小结　　86
8.5　同步练习　　86
第9章　函数　　88
9.1　使用函数　　88
9.2　传递参数　　89
9.2.1　使用外部参数名　　89
9.2.2　参数默认值　　90
9.2.3　可变参数　　90
9.2.4　参数的传递引用　　91
9.3　函数返回值　　92
9.3.1　无返回值函数　　92
9.3.2　多返回值函数　　93
9.4　函数类型　　93
9.4.1　作为函数返回类型使用　　94
9.4.2　作为参数类型使用　　95
9.5　函数重载　　96
9.6　嵌套函数　　97
9.7　泛型和泛型函数　　98
9.7.1　一个问题的思考　　99
9.7.2　泛型函数　　99
9.8　本章小结　　100
9.9　同步练习　　100
第10章　闭包　　104
10.1　回顾嵌套函数　　104
10.2　闭包的概念　　105
10.3　使用闭包表达式　　106
10.3.1　类型推断简化　　106
10.3.2　隐藏return关键字　　107
10.3.3　缩写参数名称　　107
10.3.4　使用闭包返回值　　108
10.4　使用尾随闭包　　108
10.5　捕获上下文中的变量和常量　　109
10.6　本章小结　　110
10.7　同步练习　　110
第二部分　面向对象篇
第11章　Swift语言中的面向对象特性　　114
11.1　面向对象概念和基本特征　　114
11.2　Swift中的面向对象类型　　114
11.3　枚举　　115
11.3.1　成员值　　115
11.3.2　原始值　　117
11.3.3　相关值　　118
11.4　结构体与类　　120
11.4.1　类和结构体定义　　120
11.4.2　再谈值类型和引用类型　　121
11.4.3　引用类型的比较　　123
11.5　类型嵌套　　124
11.6　可选类型与可选链　　125
11.6.1　可选类型　　125
11.6.2　可选链　　126
11.7　本章小结　　129
11.8　同步练习　　130
第12章　属性与下标　　134
12.1　存储属性　　134
12.1.1　存储属性概念　　134
12.1.2　延迟存储属性　　135
12.1.3　属性观察者　　136
12.2　计算属性　　136
12.2.1　计算属性概念　　136
12.2.2　只读计算属性　　138
12.2.3　结构体和枚举中的计算
属性　　139
12.3　属性观察者　　139
12.4　静态属性　　141
12.4.1　结构体静态属性　　143
12.4.2　枚举静态属性　　144
12.4.3　类静态属性　　145
12.5　使用下标　　145
12.5.1　下标概念　　146
12.5.2　示例：二维数组　　146
12.6　本章小结　　148
12.7　同步练习　　148
第13章　方法　　150
13.1　实例方法　　150
13.1.1　使用规范的命名　　151
13.1.2　结构体和枚举方法变异　　154
13.2　静态方法　　155
13.2.1　结构体中静态方法　　155
13.2.2　枚举中静态方法　　156
13.2.3　类中静态方法　　156
13.3　本章小结　　157
13.4　同步练习　　157
第14章　构造与析构　　158
14.1　构造器　　158
14.1.1　默认构造器　　158
14.1.2　构造器与存储属性初始化　　159
14.1.3　使用外部参数名　　160
14.2　构造器重载　　162
14.2.1　构造器重载概念　　162
14.2.2　值类型构造器代理　　163
14.2.3　引用类型构造器横向代理　　164
14.3　析构器　　165
14.4　本章小结　　166
14.5　同步练习　　166
第15章　继承　　169
15.1　从一个示例开始　　169
15.2　构造器继承　　170
15.2.1　构造器调用规则　　170
15.2.2　构造过程安全检查　　172
15.2.3　构造器自动继承　　175
15.3　重写　　177
15.3.1　属性重写　　177
15.3.2　方法重写　　179
15.3.3　下标重写　　180
15.3.4　使用final关键字　　182
15.4　类型检查与转换　　183
15.4.1　使用is操作符　　185
15.4.2　使用as操作符　　185
15.4.3　使用Any和AnyObject类型　　187
15.5　本章小结　　187
15.6　同步练习　　188
第16章　扩展和协议　　190
16.1　扩展　　190
16.1.1　声明扩展　　190
16.1.2　扩展计算属性　　191
16.1.3　扩展方法　　192
16.1.4　扩展构造器　　193
16.1.5　扩展下标　　195
16.2　协议　　196
16.2.1　声明和遵守协议　　197
16.2.2　协议方法　　197
16.2.3　协议属性　　200
16.2.4　把协议作为类型使用　　202
16.2.5　协议的继承　　204
16.2.6　协议的合成　　205
16.3　扩展中声明协议　　207
16.4　本章小结　　207
16.5　同步练习　　208
第17章　Swift内存管理　　210
17.1　Swift内存管理概述　　210
17.1.1　引用计数　　210
17.1.2　示例：Swift自动引用计数　　211
17.2　强引用循环　　213
17.3　打破强引用循环　　216
17.3.1　弱引用　　216
17.3.2　无主引用　　218
17.4　闭包中的强引用循环　　220
17.4.1　一个闭包中的强引用循环示例　　221
17.4.2　解决闭包强引用循环　　221
17.5　本章小结　　223
17.6　同步练习　　223
第三部分　过渡篇
第18章　从Objective-C到Swift　　226
18.1　选择语言　　226
18.2　Swift调用Objective-C　　226
18.2.1　创建Swift工程　　227
18.2.2　在Swift工程中添加
Objective-C类　　229
18.2.3　调用代码　　230
18.3　Objective-C调用Swift　　232
18.3.1　创建Objective-C工程　　233
18.3.2　在Objective-C工程中添加Swift类　　234
18.3.3　调用代码　　235
18.4　本章小结　　236
18.5　同步练习　　237
第19章　使用Foundation框架　　238
19.1　数字类NSNumber　　238
19.1.1　获得NSNumber实例　　238
19.1.2　NSNumber对象的比较　　241
19.2　字符串类　　242
19.2.1　NSString类　　242
19.2.2　NSMutableString类　　245
19.2.3　NSString与String之间的关系　　246
19.3　数组类　　247
19.3.1　NSArray类　　247
19.3.2　NSMutableArray类　　248
19.3.3　NSArray与Array之间的关系　　249
19.4　字典类　　250
19.4.1　NSDictionary类　　250
19.4.2　NSMutableDictionary类　　251
19.4.3　NSDictionary与Dictionary之间的关系　　252
19.5　本章小结　　253
19.6　同步练习　　253
第四部分　实战篇
第20章　iOS开发基础　　256
20.1　iOS介绍　　256
20.2　第一个iOS应用HelloWorld　　257
20.2.1　创建工程　　257
20.2.2　Xcode中的iOS工程模板　　265
20.2.3　程序剖析　　266
20.3　iOS API简介　　268
20.4　本章小结　　268
20.5　同步练习　　268
第21章　项目实战——基于分层架构的多版本iPhone计算器　　270
21.1　应用分析与设计　　270
21.1.1　应用概述　　270
21.1.2　需求分析　　270
21.1.3　原型设计　　271
21.1.4　分层架构设计　　272
21.1.5　应用设计　　273
21.2　创建工程　　274
21.3　业务逻辑层开发　　276
21.3.1　创建CalcLogic.swift文件　　276
21.3.2　枚举类型Operator　　277
21.3.3　CalcLogic类中属性　　278
21.3.4　CalcLogic类中构造器和析构器　　278
21.3.5　CalcLogic类中更新主标签方法　　279
21.3.6　CalcLogic类中判断是否包含小数点方法　　280
21.3.7　CalcLogic类中计算方法　　280
21.3.8　CalcLogic类中清除方法　　281
21.4　表示层开发　　282
21.4.1　添加图片资源　　282
21.4.2　改变设计界面大小　　284
21.4.3　添加计算器背景　　284
21.4.4　在设计界面中添加主标签　　286
21.4.5　在设计界面中添加按钮　　288
21.4.6　控件的输出口和动作　　292
21.4.7　视图控制器　　296
21.5　Objective-C版本的计算器　　297
21.5.1　Xcode工程文件结构比较　　297
21.5.2　表示层比较　　298
21.5.3　业务逻辑层比较　　299
21.6　Swift调用Objective-C实现的计算器　　302
21.6.1　在Swift工程中添加Objective-C类　　303
21.6.2　调用代码　　305
21.7　Objective-C调用Swift实现的计算器　　306
21.7.1　在Objective-C工程中添加Swift类　　306
21.7.2　调用代码　　307
21.8　本章小结　　310
21.9　同步练习　　310
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Swift开发指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Objective-C程序设计
第1章　Objective-C语言概述1.1　Mac操作系统和Objective-C语言  1.2　Objective-C的开发工具  1.3　Objective-C程序简介  1.4　面向对象编程  1.4.1　面向对象的分析  1.4.2　面向对象的特征  1.5　Objective-C程序结构   1.5.1　类接口（@interface）   1.5.2　类实现（@implementation）   1.5.3　应用程序   1.5.4　Objective-C的方法调用   1.5.5　输入和输出数据   1.5.6  变量和标识符   1.5.7　指令符（@）   1.5.8　语句   第2章  数据类型和运算符2.1　简单数据类型   2.1.1　整型   2.1.2　实型   2.1.3　字符型   2.1.4　字符串   2.1.5　id类型   2.1.6　类型转换   2.1.7　枚举类型   2.1.8　typedef   2.2　Objective-C的其他数据类型   2.2.1　BOOL   2.2.2　SEL   2.2.3　Class   2.2.4　nil和Nil   2.3　运算符和表达式   2.3.1　Objective-C运算符   2.3.2　表达式和运算优先级   2.3.3　算术运算符   2.3.4　算术表达式   2.3.5　强制类型转换运算符   2.3.6　自增、自减运算符   2.3.7　位运算符   2.3.8　赋值运算符   2.3.9　关系运算符   2.3.10　布尔逻辑运算符   第3章  程序控制语句3.1　条件语句   3.1.1　if语句   3.1.2　if语句的嵌套   3.1.3　switch语句   3.1.4　三目条件运算符   3.1.5　布尔表达式   3.2　循环语句   3.2.1　while语句   3.2.2　do-while语句   3.2.3　for语句   3.2.4　for循环多变量的处理   3.2.5　嵌套循环   3.2.6　几种循环的比较   3.3　跳转语句   3.3.1　break语句   3.3.2　continue 语句   3.3.3　return语句   3.4　综合实例   第4章  类4.1　类的通用格式   4.2　声明对象和对象初始化   4.3　变量   4.3.1　局部变量、全局变量和实例变量  4.3.2　理解static  4.3.3　变量的存储类别  4.4　@property和 @synthesize  4.5　多输入参数的方法  4.6　协议（protocol）  4.7　异常处理  4.8　调用nil对象的方法  4.9　指针  4.9.1　指针的类型和指针所指向的类型  4.9.2　指针的值  4.9.3　对象变量实际上是指针  4.10　线程  4.11　Singleton（单例模式）  第5章  继承5.1　继承  5.2　方法重写  5.3　方法重载  5.4　使用super  5.5　抽象类  5.6　动态方法调用  5.7　访问控制  5.8　Category（类别）  第6章  编译预处理6.1　宏定义  6.1.1　无参宏定义  6.1.2　带参宏定义  6.1.3　#运算符  6.2　import  6.3　条件编译  6.3.1　#ifdef、#endif、#else和#ifndef语句  6.3.2　#if和#elif预处理程序语句  6.3.3　#undef  第7章  基础框架（Foundation Framework）7.1　数字对象（NSNumber）  7.1.1　数字对象的使用  7.1.2　NSNumber方法总结  7.2　字符串对象  7.2.1　不可修改字符串（NSString）  7.2.2　可修改的字符串（NSMutableString）  7.3　数组对象  7.3.1　不可变数组（NSArray）  7.3.2　可修改数组（NSMutableArray）  7.4　字典对象（NSDictionary和NSMutableDictionary）  7.5　集合对象（NSSet）  7.6　枚举访问  第8章  文件操作8.1　管理文件（NSFileManager）  8.2　管理目录  8.3　操作文件数据（NSData）  8.4　操作目录总结  8.5　文件的读写（NSFileHandle）  8.6　NSProcessInfo  8.6.1　NSProcessInfo方法  8.6.2　NSProcessInfo实例  8.6.3　NSArray和NSProcessInfo综合例子  第9章  内存管理9.1　基本的内存管理  9.1.1　申请内存（alloc）  9.1.2　释放内存（dealloc）  9.2　引用记数（retainCount）  9.2.1　字符串的处理  9.2.2　类成员变量的处理  9.3　自动释放（autorelease）池  9.4　内存泄露  9.5　垃圾回收（Garbage-collection）  9.6　copy、nonatomic  第10章  数据保存10.1　XML属性列表  10.2　NSKeyedArchiver  10.3　保存多个对象到一个文件  10.4　Objective-C综合实例  第11章  AppKit和UIKit11.1　图形化用户界面和Cocoa  11.2　AppKit  11.3　UIKit  11.4　多线程（NSOperation和NSOperationQueue）  第12章  iPhone应用程序12.1　创建Xcode项目  12.2　在iPhone模拟器上运行  12.3　iPhone项目结构  12.4　在界面创建器（Interface Builder）上设计界面  12.5　iPhone开发的更多内容  第13章  iPad编程13.1　iPad介绍  13.2　iPad与iPhone开发的对比  13.3　iPad应用程序开发实例  13.4　委托（Delegate） 13.5　NSError   第14章   高级话题14.1　Objective-C++ 14.1.1　混合语言 14.1.2　C++词汇歧义和冲突 14.1.3　一些限制14.2　访问MySQL数据库
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Objective-C程序设计
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>疯狂Swift讲义
1.2.2  安装辅助工具和文档	6
1.3  第一个Swift程序	7
1.3.1  Swift程序入口	7
1.3.2  使用Playground工具	8
1.3.3  开发Swift项目	11
1.4  使用终端窗口编译、运行Swift程序	13
1.4.1  使用swiftc编译Swift程序	13
1.4.2  在早期版本的OS X平台上编译Swift程序	14
1.4.3  使用swift交互命令	15
1.5  熟悉Xcode	16
1.5.1  创建iOS项目	16
1.5.2  熟悉导航面板	17
1.5.3  熟悉检查器面板	20
1.5.4  熟悉库面板	21
1.5.5  使用Xcode的帮助系统	23
1.6  本章小结	26
第2章　Swift的基本数据类型	27
2.1  注释	28
2.2  变量与常量	29
2.2.1  分隔符	29
2.2.2  标识符规则	31
2.2.3  Swift的关键字	31
2.2.4  声明变量和常量	32
2.2.5  输出变量和常量	33
2.3  整型	34
2.4  浮点型	35
2.5  数值型之间的类型转换	37
2.5.1  整型之间的转换	37
2.5.2  浮点型与整型之间的转换	38
2.6 布尔型	39
2.7  元组（tuple）类型	40
2.7.1  定义元组类型的变量	40
2.7.2  获取元组中的元素值	40
2.7.3  为元组中的元素命名	41
2.8  可选类型	42
2.8.1  可选和nil	42
2.8.2  强制解析	43
2.8.3  可选绑定	44
2.8.4  隐式可选类型	44
2.9  类型别名	45
2.10 字符和字符串	46
2.10.1  字符类型	46
2.10.2  字符串类型	47
2.10.3  字符串的可变性	49
2.10.4  字符串的基本操作	49
2.10.5  字符串比较	50
2.10.6  获取字符串中字符的Unicode编码	50
2.11 本章小结	51
第3章　运算符与表达式	52
3.1  赋值运算符	53
3.2  算术运算符	54
3.3  溢出运算符	57
3.3.1  值的上溢	57
3.3.2  值的下溢	58
3.3.3  除零溢出	58
3.4  位运算符	59
3.5  扩展后的赋值运算符	61
3.6  范围运算符	61
3.6.1  闭范围运算符	61
3.6.2  半开范围运算符	62
3.7  比较运算符	62
3.8  逻辑运算符	63
3.8.1  Swift的6个逻辑运算符	63
3.8.2  组合逻辑与括号	64
3.9  三目运算符	65
3.10  nil合并运算符	66
3.11 运算符的结合性和优先级	67
3.12 本章小结	68
第4章　流程控制	69
4.1  顺序结构	70
4.2  分支结构	70
4.2.1  if条件语句	70
4.2.2  switch分支语句	73
4.2.3  switch不存在隐式贯穿（fallthrough）和显式贯穿	74
4.2.4  使用break结束switch	76
4.2.5  switch的范围匹配	76
4.2.6  switch的元组匹配	77
4.2.7  case的值绑定	78
4.2.8  case的where子句	79
4.3  循环结构	80
4.3.1  while循环语句	80
4.3.2  do while循环语句	81
4.3.3  for循环	82
4.3.4  for-in循环	84
4.3.5  嵌套循环	85
4.4  控制循环结构	86
4.4.1  使用break结束循环	86
4.4.2  使用continue忽略本次循环的剩下语句	87
4.4.3  使用return结束方法	88
4.5  本章小结	89
第5章　集合	90
5.1  数组	91
5.1.1  声明和创建数组	91
5.1.2  使用数组	92
5.1.3  使用for-in遍历数组	93
5.1.4  数组的可变性和数组的修改	94
5.1.5  多维数组	96
5.1.6  数组的应用举例	99
5.2  字典	101
5.2.1  声明和创建字典	102
5.2.2  使用字典	103
5.2.3  使用for-in遍历字典	104
5.2.4  单独使用字典的keys或values	104
5.2.5  字典的可变性和字典的修改	105
5.2.6  字典的应用举例	106
5.3  集合的复制	107
5.3.1  数组的复制	107
5.3.2  字典的复制	109
5.4  本章小结	110
第6章　函数和闭包	111
6.1  函数入门	112
6.1.1  定义和调用函数	112
6.1.2  函数返回值	113
6.1.3  递归函数	115
6.2  函数的形参	116
6.2.1  外部形参名及其简化形式	116
6.2.2  形参默认值	117
6.2.3  个数可变的形参	119
6.2.4  常量形参和变量形参	119
6.2.5  In-Out形参	120
6.3  函数类型	124
6.3.1  使用函数类型	124
6.3.2  使用函数类型作为形参类型	125
6.3.3  使用函数类型作为返回值类型	126
6.4  函数重载	127
6.5  嵌套函数	129
6.6  嵌套函数与闭包	130
6.6.1  回顾嵌套函数	130
6.6.2  使用闭包表达式代替嵌套函数	131
6.7  闭包表达式	132
6.7.1  调用闭包（使用闭包返回值）	132
6.7.2  利用上下文推断类型	133
6.7.3  省略return	133
6.7.4  省略形参名	134
6.7.5  尾随闭包	134
6.8  捕获上下文中的变量和常量	136
6.9  闭包是引用类型	137
6.10 本章小结	137
第7章　面向对象（上）	139
7.1  Swift的面向对象支持	140
7.1.1  面向对象概述	140
7.1.2  Swift的面向对象类型	140
7.2  枚举	141
7.2.1  定义枚举	141
7.2.2  枚举值和switch语句	143
7.2.3  原始值	144
7.2.4  关联值	145
7.3  类和结构体	147
7.3.1  定义结构体和类	147
7.3.2  创建实例	151
7.3.3  值类型与引用类型	152
7.3.4  引用类型的比较	154
7.3.5  self关键字	156
7.3.6  类和结构体的选择	158
7.4  存储属性	159
7.4.1  实例存储属性与实例变量	159
7.4.2  结构体常量与实例属性	160
7.4.3  延迟存储属性	160
7.5  计算属性	161
7.5.1  定义计算属性	162
7.5.2  setter方法简化	164
7.5.3  只读的计算属性	164
7.6  属性观察者	165
7.7  方法	167
7.7.1  方法的所属性	167
7.7.2  将方法转换为函数	168
7.7.3  方法的外部形参名	169
7.7.4  Swift方法的命名习惯	171
7.7.5  值类型的可变方法	172
7.7.6  属性和方法的统一	174
7.8  下标	175
7.8.1  下标的基本用法	175
7.8.2  下标重载	178
7.9  可选链	180
7.9.1  使用可选链代替强制解析	180
7.9.2  使用可选链调用方法	182
7.9.3  使用可选链调用下标	183
7.10 类型属性和类型方法	183
7.10.1  类型成员的修饰符	184
7.10.2  值类型的类型属性	184
7.10.3  类的类型属性	185
7.10.4  值类型的类型方法	186
7.10.5  类的类型方法	186
7.11 构造器	187
7.11.1  类和结构体的默认构造器	187
7.11.2  构造器的外部形参名	188
7.11.3　在构造过程中常量属性是可修改的	190
7.11.4  使用闭包或函数为属性设置初始值	191
7.11.5  值类型的构造器重载	192
7.12 可能失败的构造器	194
7.12.1  结构体与可能失败的构造器	194
7.12.2　枚举与可能失败的构造器	195
7.13  本章小结	196
第8章　面向对象（下）	197
8.1  继承	198
8.1.1  继承的特点	198
8.1.2  重写父类的方法	199
8.1.3  重写父类的属性	200
8.1.4  重写属性观察者	201
8.1.5  重写父类的下标	202
8.1.6  使用final防止重写	203
8.2  类的构造与析构	204
8.2.1  类的指定构造器和便利构造器	205
8.2.2  类的构造器链	206
8.2.3  两段式构造	208
8.2.4  构造器的继承和重写	212
8.2.5  类与可能失败的构造器	215
8.2.6  可能失败的构造器的传播	216
8.2.7  重写可能失败的构造器	217
8.2.8  子类必须包含的构造器	219
8.2.9  析构器	220
8.3  多态	221
8.3.1  多态性	221
8.3.2  使用is运算符检查类型	223
8.3.3  使用as运算符向下转型	223
8.3.4  Any和AnyObject	226
8.4  嵌套类型	226
8.5  扩展	227
8.5.1  使用扩展添加属性	228
8.5.2  使用扩展添加方法	230
8.5.3  使用扩展添加可变方法	231
8.5.4  使用扩展添加构造器	232
8.5.5  使用扩展添加下标	232
8.5.6  使用扩展添加嵌套类型	233
8.6  协议	233
8.6.1  规范、接口与协议语法	233
8.6.2  协议指定的属性要求	235
8.6.3  协议指定的方法要求	238
8.6.4  协议指定的可变方法要求	240
8.6.5  协议指定的下标要求	241
8.6.6  协议指定的构造器要求	243
8.6.7  使用协议作为类型	245
8.6.8  合成协议	246
8.6.9  通过扩展为已有的类型添加协议	247
8.6.10 唯类（Class-Only）协议	248
8.6.11 可选协议	249
8.6.12 输出实例和Printable协议	251
8.6.13 使用自定义类型作为字典的key	252
8.7  隐藏与封装	255
8.7.1  理解封装	255
8.7.2  访问控制符	256
8.7.3  访问控制语法	257
8.7.4  使用访问权限定义类型	258
8.7.5  子类的访问权限	260
8.7.6  常量、变量、属性、下标的访问权限	260
8.7.7  构造器的访问权限	262
8.7.8  协议的访问权限	262
8.7.9  扩展的访问权限	262
8.7.10 类型别名的访问权限	263
8.8  Swift内存管理	263
8.8.1  理解自动引用计数（ARC）	263
8.8.2  强引用循环	265
8.8.3  使用弱引用解决强引用循环	267
8.8.4  使用无主引用解决强引用循环	269
8.8.5  闭包与对象的强引用循环	271
8.8.6  使用弱引用或无主引用解决闭包的强引用循环	272
8.9  Swift面向对象语法总结	273
8.10 本章小结	274
第9章　泛型	275
9.1  泛型的作用	276
9.2  泛型函数	277
9.2.1  定义泛型函数	277
9.2.2  定义多个类型参数	278
9.3  泛型类型	280
9.3.1  定义泛型类型	280
9.3.2  从泛型类派生子类	281
9.3.3  扩展泛型类型	282
9.4  类型约束	283
9.5  关联类型	285
9.5.1  使用关联类型	285
9.5.2  扩展已有类型来确定关联类型	287
9.6  where子句	287
9.7  本章小结	289
第10章　运算符函数	290
10.1  运算符重载	291
10.2  前置和后置运算符	293
10.3  扩展后的赋值运算符	295
10.4  比较运算符	295
10.5  自定义运算符	296
10.5.1  开发自定义运算符	297
10.5.2  自定义运算符的结合性和优先级	298
10.6  本章小结	299
第11章　Foundation框架详解	300
11.1  包装类	301
11.1.1  它们不是包装类	301
11.1.2  NSValue和NSNumber	302
11.2  字符串（NSString与NSMutableString）	303
11.2.1  NSString的常用功能	303
11.2.2  可变字符串（NSMutableString）	305
11.3  日期与时间	306
11.3.1  日期与时间（NSDate）	306
11.3.2  日期格式器（NSDateFormatter）	307
11.3.3  日历（NSCalendar）与日期组件（NSDateComponents）	309
11.4  数组（NSArray与NSMutableArray）	310
11.4.1  NSArray的功能与用法	310
11.4.2  对集合元素整体调用方法	313
11.4.3  对NSArray进行排序	314
11.4.4  使用枚举器遍历NSArray集合元素	315
11.4.5  可变数组（NSMutableArray）	316
11.5  集合（NSSet与NSMutableSet）	317
11.5.1  NSSet的功能与用法	317
11.5.2  NSSet判断集合元素重复的标准	320
11.5.3  NSMutableSet的功能与用法	323
11.5.4  NSCountedSet的功能与用法	324
11.6  有序集合（NSOrderedSet与NSMutableOrderedSet）	325
11.7  字典（NSDictionary与NSMutableDictionary）	326
11.7.1  NSDictionary的功能与用法	327
11.7.2  对NSDictionary的key排序	330
11.7.3  对NSDictionary的key进行过滤	331
11.7.4  NSMutableDictionary的功能与用法	332
11.8  本章小结	333
第12章　使用Swift开发iOS应用	334
12.1  从iOS项目开始	335
12.1.1  iOS项目包含的文件	335
12.1.2  Interface Builder简介	336
12.1.3  添加控件	338
12.1.4  修改控件属性	339
12.1.5  UIView支持的属性	340
12.1.6  UILabel支持的属性	343
12.2  MVC	345
12.2.1  程序入口和应用程序代理	345
12.2.2  理解iOS的MVC	347
12.2.3  掌握UIViewController控制器	348
12.3  事件机制	350
12.3.1  程序获取控件的两种方式	350
12.3.2  事件处理的3种方式	356
12.4  代码控制UI界面	362
12.4.1  不使用界面设计文件开发UI界面	362
12.4.2  使用代码创建UI界面	364
12.4.3  自定义UI控件	366
12.5  本章小结	369
第13章　Objective-C与Swift混编	370
13.1　Swift调用Objective-C	371
13.1.1　创建Swift项目	371
13.1.2　添加Objective-C类	372
13.1.3　调用Objective-C类	374
13.2　Objective-C调用Swift	376
13.2.1　为Objective-C项目添加Swift类	376
13.2.2　调用Swift类	378
13.3　本章小结	379
第14章　俄罗斯方块	380
14.1　俄罗斯方块简介	381
14.2　开发游戏界面	382
14.2.1　界面布局设计	382
14.2.2　开发游戏界面控件	385
14.3　俄罗斯方块的数据模型	387
14.3.1　定义数据模型	387
14.3.2　初始化游戏状态数据	388
14.4　实现游戏逻辑	391
14.4.1　处理方块掉落	391
14.4.2　处理方块左移	396
14.4.3　处理方块右移	397
14.4.4　处理方块旋转	398
14.4.5　启动游戏	401
14.5　本章小结	402
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>疯狂Swift讲义
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>函数式Swift
I 函数式Swift 基础1
第1 章函数式思想2
1.1 案例：Battleship 2
1.2 一等函数7
1.3 类型驱动开发11
1.4 注解11
第2 章案例研究：封装Core Image 12
2.1 滤镜类型12
2.2 构建滤镜13
模糊13
颜色叠层13
2.3 组合滤镜15
复合函数16
2.4 理论背景：柯里化17
2.5 讨论18
第3 章Map、Filter 和Reduce 20
3.1 泛型介绍20
顶层函数和扩展24
3.2 Filter 24
3.3 Reduce 26
3.4 实际运用29
3.5 泛型和Any 类型31
3.6 注释32
第4 章可选值34
4.1 案例研究：字典34
4.2 玩转可选值37
可选值链37
分支上的可选值39
可选映射40
再谈可选绑定41
4.3 为什么使用可选值43
第5 章案例研究：QuickCheck 47
5.1 构建QuickCheck 49
生成随机数49
实现check 函数51
5.2 缩小范围53
反复缩小范围54
5.3 随机数组55
5.4 使用QuickCheck 58
5.5 展望59
第6 章不可变性的价值60
6.1 变量和引用60
6.2 值类型与引用类型61
结构体与类：究竟是否可变63
Objective-C 64
6.3 讨论65
第7 章枚举68
7.1 关于枚举68
7.2 关联值71
7.3 添加泛型72
7.4 Swift中的错误处理74
7.5 再聊聊可选值75
7.6 数据类型中的代数学76
7.7 为什么使用枚举78
第8 章纯函数式数据结构79
8.1 二叉搜索树79
8.2 基于字典树的自动补全85
字符串字典树91
8.3 讨论93
第9 章案例研究：图表94
9.1 绘制正方形和圆形94
9.2 核心数据结构97
9.3 计算与绘制99
9.4 创建视图与PDF 105
9.5 额外的组合算子106
9.6 讨论107
II 函数式Swift 进阶109
第10 章生成器和序列110
10.1 生成器110
10.2 序列115
10.3 案例研究：遍历二叉树118
10.4 案例研究：优化QuickCheck 的范围收缩119
函数式Swift xi
10.5 不止是Map 与Filter 123
第11 章案例研究：解析器组合算子127
11.1 核心部分127
11.2 选择131
11.3 顺序解析131
改进133
11.4 便利组合算子138
11.5 一个简单的计算器143
第12 章案例研究：构建一个表格应用148
12.1 示例代码148
12.2 解析器149
符号化149
解析153
12.3 求值器158
12.4 GUI 163
数据源163
代理165
窗口控制器165
第13 章函子、适用函子与单子167
13.1 函子167
13.2 适用函子169
13.3 单子172
13.4 讨论174
第14 章尾声176
14.1 拓展阅读177
14.2 结语178
参考文献179
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>函数式Swift
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Objective-C开发范例代码大全
第1章  应用开发	1
1.1  创建终端应用	1
1.2  输出到控制台	3
1.3  创建新的自定义类	5
1.4  编写属性访问器	7
1.5  使用@synthesize编写属性
访问器	10
1.6  向自定义类中添加类方法	12
1.7  向自定义类中添加
实例方法	14
1.8  使用类别对类进行扩展	15
1.9  从终端创建基于窗口的
Mac应用	17
1.10  向Mac应用添加用户控件	20
1.11  从Xcode创建基于窗口的
Mac应用	23
1.12  从Xcode创建iOS应用	25
1.13  使用目标-动作向iOS应用
添加用户控件	29
1.14  使用委托向iOS应用添加
用户控件	33
第2章  使用字符串与数字	37
2.1  创建字符串对象	37
2.2  在Mac上从文件读取
字符串	39
2.3  在iOS上从文件读取
字符串	41
2.4  在Mac上将字符串写到
文件中	43
2.5  在iOS上将字符串写到
文件中	45
2.6  比较字符串	48
2.7  操纵字符串	50
2.8  搜索字符串	53
2.9  本地化字符串	54
2.10  将数字转换为字符串	56
2.11  将字符串转换为数字	58
2.12  格式化数字	59
第3章  使用对象集合	61
3.1  创建数组	62
3.2  引用数组中的对象	63
3.3  获取数组中元素的数量	65
3.4  遍历数组	66
3.5  排序数组	68
3.6  查询数组	72
3.7  操纵数组内容	75
3.8  将数组保存到文件系统中	78
3.9  从文件系统读取数组	80
3.10  创建字典	81
3.11  引用数组中的对象	83
3.12  获取字典中元素的数量	84
3.13  遍历字典	85
3.14  操纵字典内容	87
3.15  将字典保存到文件系统中	89
3.16  从文件系统读取字典	90
3.17  创建集合	92
3.18  获取集合中元素的数量	93
3.19  比较集合	94
3.20  遍历集合	96
3.21  操纵集合内容	97
第4章  文件系统	101
4.1  引用并使用文件管理器	101
4.2  获得指向Mac系统目录的
引用	103
4.3  获得指向关键iOS目录的
引用	105
4.4  获取文件属性	107
4.5  获得目录下的文件与子目录
列表	109
4.6  管理目录	111
4.7  管理文件	114
4.8  查看文件状态	117
4.9  修改文件属性	119
4.10  使用NSFileManager
委托	121
4.11  使用NSData处理数据	127
4.12  使用NSCache缓存内容	131
第5章  使用日期、时间与定时器	137
5.1  创建表示今天的日期对象	137
5.2  通过Component创建
自定义日期	138
5.3  比较两个日期	140
5.4  将字符串转换为日期	143
5.5  格式化日期以便显示	144
5.6  加减日期	146
5.7  使用定时器调度并重复
执行任务	147
第6章  异步处理	151
6.1  在新线程中执行处理	151
6.2  主线程与后台线程之间的
通信	156
6.3  使用NSLock锁定线程	163
6.4  使用@synchronized
锁定线程	167
6.5  使用Grand Central Dispatch(GCD)
进行异步处理	171
6.6  在GCD中使用顺序队列	177
6.7  使用NSOperationQueue
实现异步处理	182
第7章  使用Web服务	187
7.1  下载文件	187
7.2  通过XML使用Web服务	189
7.3  通过JSON使用Web服务	195
7.4  异步地使用Web服务	198
第8章  内存管理	201
8.1  理解内存管理	201
8.2  创建不使用ARC的应用	203
8.3  使用引用计数管理内存	205
8.4  为自定义类添加内存管理	207
8.5  使用autorelease消息	210
8.6  为Mac应用启用垃圾收集	215
第9章  使用对象图	217
9.1  创建对象图	218
9.2  使用键-值编码	229
9.3  在对象图中使用键路径	236
9.4  使用键路径聚合信息	241
9.5  实现观察者模式	247
9.6  探查类与对象	252
9.7  归档对象图	257
第10章  Core Data	267
10.1  向应用添加Core Data
支持	267
10.2  添加实体描述	274
10.3  向应用添加托管对象	276
10.4  向Core Data添加
托管对象	280
10.5  从数据存储中检索对象	285
10.6  将变更发回数据存储	290
10.7  使用Core Data管理一对
一关联关系	296
10.8  使用Core Data管理一对
多关联关系	304
10.9  管理数据存储的版本	315
第11章  Objective-C：超越Mac与
iOS	325
11.1  在Windows上安装
GNUstep	325
11.2  Windows上的Objective-C
程序Hello World	327
11.3  下载Objective-J以进行
Web应用开发	330
11.4  编写Objective-J应用
Hello World	331
11.5  向Objective-J应用添加
按钮	336
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Objective-C开发范例代码大全
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android开发权威指南
第1章 初识Android平台 1
1.1 Android简介 1
1.2 Android的制胜法宝 2
1.3 Android的版本发展历程 3
1.3.1 Android1.5（纸杯蛋糕） 3
1.3.2 Android1.6（甜甜圈） 4
1.3.3 Android2.1（松饼） 4
1.3.4 Android2.2（冻酸奶） 5
1.3.5 Android2.3（姜饼） 5
1.3.6 Android3.0（蜂巢） 6
1.3.7 Android4.0（冰激凌三明治） 6
1.3.8 Android4.1/4.2（果冻豆） 7
1.4 Android的系统架构 8
1.5 小结 9
第2章 搭建Android开发和测试环境 10
2.1 搭建Android开发环境需要些什么 10
2.2 安装Java开发环境 10
2.2.1 安装JDK 11
2.2.2 安装和配置Eclipse 11
2.3 安装Android开发环境 12
2.3.1 下载和安装AndroidSDK 13
2.3.2 下载和安装AndroidNDK 13
2.3.3 安装和配置Eclipse插件：ADT 14
2.4 配置Android测试环境 15
2.4.1 建立Android虚拟设备（AVD） 15
2.4.2 启动Android模拟器 16
2.4.3 安装真机测试环境 17
2.5 小结 18
第3章 第一个Android应用程序 19
3.1 从第一个Android程序中可以学到什么 19
3.2 建立Android工程 19
3.3 Android工程的结构 21
3.4 在窗口上放两个按钮 22
3.5 编写窗口类 23
3.6 修改字符串资源 24
3.7 运行Android应用程序 25
3.8 调试Android应用程序 27
3.9 签名Android应用程序 27
3.10 小结 29
第4章 Android应用程序架构 30
4.1 Android应用程序中的资源 30
4.1.1 资源存放在哪里 30
4.1.2 资源的基本使用方法 30
4.2 Android的应用程序组件 32
4.2.1 窗口（Activity）组件 32
4.2.2 服务（Service）组件 32
4.2.3 广播接收者（Broadcastreceivers）组件 33
4.2.4 内容提供者（ContentProvider）组件 33
4.3 AndroidManifest.xml文件的结构 33
4.4 小结 34
第5章 窗口（Activity）与视图（View） 35
5.1 声明和使用Activity 35
5.1.1 Activity的基本用法 35
5.1.2 同时适合手机和平板电脑的窗口风格 38
5.2 Activity的生命周期 40
5.3 窗口的常用事件 43
5.3.1 设置窗口标题事件（onTitleChanged） 44
5.3.2 键盘按下和抬起事件（onKeyDown和onKeyUp） 45
5.3.3 任意情况下捕捉键盘事件（dispatchKeyEvent） 48
5.3.4 回退事件（onBackPressed） 49
5.3.5 按键长按事件（onKeyLongPress） 50
5.3.6 屏幕触摸事件（onTouchEvent） 50
5.3.7 窗口获得焦点事件（onWindowFocusChanged） 51
5.4 在不同Activity之间传递数据 52
5.4.1 使用Intent传递数据 53
5.4.2 使用静态变量传递数据 54
5.4.3 使用剪贴板传递数据 55
5.4.4 使用全局对象传递数据 57
5.5 从Activity返回数据 59
5.6 视图（View） 61
5.6.1 视图简介 61
5.6.2 使用XML布局文件定义视图 61
5.6.3 在代码中控制视图 62
5.7 显示系统窗口 64
5.7.1 直接拨号 65
5.7.2 将电话号传入拨号程序 65
5.7.3 调用拨号程序 65
5.7.4 浏览网页 65
5.7.5 查看联系人 66
5.7.6 显示系统设置界面（设置主界面、Wi—Fi设置界面） 66
5.7.7 启动处理音频的程序 66
5.7.8 回到Home窗口（相当于按Home键） 66
5.8 与Activity相关的技巧与特效 67
5.8.1 全屏显示（隐藏标题栏和状态栏） 67
5.8.2 定制窗口标题栏 71
5.8.3 为程序添加Splash 75
5.8.4 改变窗口大小、位置和透明度 76
5.8.5 按两次关闭窗口 79
5.8.6 关闭所有的窗口 79
5.8.7 窗口截屏 80
5.9 小结 82
第6章 Intent与IntentFilter 83
6.1 Android系统的信使：Intent 83
6.2 Intent对象 84
6.2.1 Intent对象可以封装和传递哪些信息 84
6.2.2 组件名（Componentname） 84
6.2.3 动作（Action） 85
6.2.4 种类（Category） 86
6.2.5 数据（Data） 87
6.2.6 附加数据（Extra） 88
6.2.7 标志（Flags） 89
6.3 显式和隐式访问窗口 89
6.4 跨应用程序访问窗口 90
6.5 Android系统的过滤机制大揭秘 96
6.5.1 过滤条件的设置 96
6.5.2 过滤器的筛选规则 97
6.5.3 示例：过滤机制应用演示 101
6.6 Android源代码与过滤器 104
6.6.1 系统内置程序有哪些窗口可以利用 104
6.6.2 显示计算器（Calculator） 105
6.6.3 用浏览器（Browser）显示网页 106
6.6.4 拨打电话（Phone）与授权 108
6.7 获取第三方程序中可调用的窗口 109
6.8 传递附加数据（Extra） 111
6.9 解析数据 113
6.10 小结 114
第7章 窗口（Activity）高级技术 115
7.1 ActivityXML属性详解 115
7.1.1 设置Activity的基本信息 115
7.1.2 屏幕方向切换（android：screenOrientation） 117
7.1.3 阻止Activity销毁和重建（android：configChanges） 119
7.1.4 允许Activity被实例化（android：enabled） 123
7.1.5 在最近应用列表中显示（android：excludeFromRecents） 124
7.1.6 允许其他程序访问当前窗口（android：exported） 124
7.1.7 硬件加速（android：hardwareAccelerated） 125
7.1.8 在多进程中创建窗口实例（android：multiprocess） 125
7.1.9 无法返回的Activity（android：noHistory） 125
7.1.10 指定要返回的窗口（android：parentActivityName） 126
7.1.11 使窗口受到权限的保护（android：permission） 126
7.1.12 改变窗口所在的进程（android：process） 127
7.1.13 不保存窗口的状态（android：stateNotNeeded） 129
7.1.14 窗口的主题（android：theme） 129
7.1.15 扩展窗口UI（android：uiOptions） 129
7.1.16 设置输入法显示模式（android：windowSoftInputMode） 130
7.2 深入探索Activity从创建到销毁的过程 130
7.2.1 任务（Task）与回退栈（BackStack） 131
7.2.2 保存窗口（Activity）状态 133
7.2.3 管理任务和回退栈 134
7.2.4 Activity的4种创建模式 135
7.2.5 用Java代码设置窗口创建模式 141
7.2.6 窗口的乾坤大挪移（affinity） 144
7.2.7 销毁不再使用的窗口 147
7.3 Activity的别名 149
7.4 小结 151
第8章 布局 152
8.1 Android的五大布局 152
8.1.1 框架布局（FrameLayout） 152
8.1.2 线性布局（LinearLayout） 154
8.1.3 相对布局（RelativeLayout） 158
8.1.4 表格布局（TableLayout） 159
8.1.5 绝对布局（AbsoluteLayout） 160
8.2 属性资源与Android命名空间 160
8.3 布局属性 162
8.4 布局高级技术 163
8.4.1 布局别名 163
8.4.2 重用布局 164
8.4.3 优化布局 166
8.4.4 动态装载布局 167
8.4.5 动态设置布局属性 169
8.4.6 从右到左布局（RTLLayout） 169
8.5 小结 170
第9章 菜单 171
9.1 菜单的基本用法 171
9.1.1 创建选项菜单（OptionsMenu） 171
9.1.2 关联Activity 173
9.1.3 响应菜单的单击动作 173
9.1.4 动态添加、修改和删除选项菜单 174
9.1.5 带复选框和选项按钮的子菜单 175
9.1.6 上下文菜单 176
9.1.7 菜单事件 177
9.1.8 从菜单资源中装载菜单 177
9.2 菜单特效 177
9.2.1 自定义菜单 178
9.2.2 模拟UCWeb菜单效果 180
9.3 小结 184
第10章 Android的资源详解（一） 185
10.1 创建资源 185
10.1.1 手工创建资源文件 185
10.1.2 用ADT模板创建本地化图标资源 186
10.1.3 用ADT模板创建XML文件资源 188
10.2 使用资源 188
10.2.1 生成资源类文件（R.java） 188
10.2.2 从XML文件中访问资源 190
10.2.3 使用Java代码访问资源 191
10.2.4 Java反射技术与枚举资源 192
10.3 字符串（String）资源 193
10.3.1 普通字符串 193
10.3.2 字符串数组 194
10.3.3 复数字符串 194
10.3.4 在字符串中使用引号 195
10.3.5 用占位符格式化字符串 195
10.3.6 用HTML标签格式化字符串资源 195
10.4 值（values）资源 196
10.4.1 整数（Integer）资源 196
10.4.2 尺寸（Dimension）资源 197
10.4.3 布尔（Boolean）资源 198
10.4.4 颜色（Color）资源 198
10.4.5 ID资源 199
10.4.6 整数数组（Integer—Array）资源 200
10.4.7 类型数组（Typed—Array）资源 200
10.5 菜单（menu）资源 200
10.6 图像（drawable）资源 203
10.6.1 普通图像资源 203
10.6.2 XML图像资源 204
10.6.3 Nine—Patch图像资源 204
10.6.4 XMLNine—Patch图像资源 205
10.6.5 图层（Layer）资源 205
10.6.6 图像状态（State）资源 206
10.6.7 图像级别（Level）资源 207
10.6.8 淡入淡出（Cross—fade）资源 208
10.6.9 嵌入（Inset）图像资源 210
10.6.10 剪切（Clip）图像资源 210
10.6.11 外形（Shape）资源 211
10.7 小结 212
第11章 Android的资源详解（二） 213
11.1 动画资源 213
11.1.1 属性（Property）动画 213
11.1.2 帧（Frame）动画 215
11.1.3 移动补间（TranslateTween）动画 217
11.1.4 循环向右移动的EditText与上下弹跳的球 218
11.1.5 缩放补间（ScaleTween）动画 220
11.1.6 跳动的心 221
11.1.7 旋转补间（RotateTween）动画 222
11.1.8 旋转的星系 222
11.1.9 透明度补间（AlphaTween）动画 223
11.1.10 投掷炸弹 224
11.1.11 震动渲染器（ShakeInterpolator） 226
11.1.12 自定义渲染器（Interpolator） 227
11.2 风格（Style）资源与主题（Theme） 229
11.3 小结 232
第12章 资源的本地化 233
12.1 建立本地化的资源目录 233
12.2 资源目录的命名规则 237
12.3 建立别名资源 237
12.3.1 图像别名资源 237
12.3.2 布局别名资源 238
12.3.3 字符串别名资源 238
12.3.4 其他简单值别名资源 238
12.4 资源目录的优先级 238
12.5屏幕适配 239
12.5.1 屏幕适配要考虑的因素 239
12.5.2 适配不同屏幕可以采用的规则 241
12.5.3 屏幕尺寸和屏幕密度 241
12.5.4 位置、尺寸和字体应使用屏幕密度单位 244
12.5.5 与屏幕适配有关的标识符 244
12.5.6 影响屏幕适配的重要因素：布局和图像 245
12.5.7 典型的屏幕适配案例 246
12.5.8 在GooglePlay上限制屏幕尺寸和屏幕密度 247
12.5.9 在Android模拟器上测试各种屏幕尺寸和密度 248
12.6 小结 248
第13章 Android的控件详解（一） 249
13.1 显示文本的控件（TextView） 249
13.1.1 显示富文本（URL、不同大小、字体、颜色的文本） 250
13.1.2 用标签在TextView控件上显示图像 252
13.1.3 单击链接弹出Activity 254
13.1.4 为指定文本添加背景 256
13.2 编辑文本的控件（EditText） 258
13.2.1 像QQ一样输入表情图像 259
13.2.2 在EditText中输入特定的字符 260
13.2.3 AutoCompleteTextView（自动完成输入内容的控件） 261
13.3 按钮（Button）和复选框（Checkbox）控件 263
13.3.1 Button（普通按钮控件） 263
13.3.2 图文混排的按钮 265
13.3.3 ImageButton（图像按钮控件） 266
13.3.4 RadioButton（选项按钮控件） 267
13.3.5 ToggleButton（开关状态按钮控件） 267
13.3.6 CheckBox（复选框控件） 268
13.4 图像控件（ImageView） 270
13.4.1 ImageView控件的基本用法 270
13.4.2 显示指定区域的图像 270
13.4.3 缩放和旋转图像 272
13.5 时间与日期控件 273
13.5.1 DatePicker（输入日期的控件） 273
13.5.2 TimePicker（输入时间的控件） 274
13.5.3 DatePicker、TimePicker与TextView同步显示日期和时间 274
13.5.4 AnalogClock和DigitalClock（显示时钟的控件） 275
13.6 小结 275
第14章 Android的控件详解（二） 276
14.1 进度条控件 276
14.1.1 ProgressBar（进度条控件） 276
14.1.2 SeekBar（拖动条控件） 278
14.1.3 设置ProgressBar和SeekBar的颜色及背景图 278
14.1.4 RatingBar（评分控件） 281
14.2 列表控件 282
14.2.1 ListView（普通列表控件） 282
14.2.2 为ListView列表项添加复选框和选项按钮 285
14.2.3 对列表项进行增、删、改操作 286
14.2.4 改变列表项的背景色 290
14.2.5 ListActivity（封装ListView的Activity） 290
14.2.6 ExpandableListView（可扩展的列表控件） 291
14.2.7 Spinner（下拉列表控件） 293
14.3 GridView（网格控件） 296
14.4 TabHost（标签控件） 298
14.5 ViewStub（惰性装载控件） 299
14.6 小结 300
第15章 可视化UI设计 301
15.1 拖放控件 301
15.2 设置视图属性 303
15.3 预览各种屏幕尺寸 303
15.4 语言和地区的本地化测试 304
15.5 其他可视化功能 304
15.6 小结 305
第16章 对话框、Toast与通知栏（Notification） 306
16.1 对话框 306
16.1.1 带2个按钮（确认／取消）的对话框 306
16.1.2 带3个按钮（覆盖／忽略／取消）的对话框 307
16.1.3 简单列表对话框 308
16.1.4 单选列表对话框 309
16.1.5 多选列表对话框 311
16.1.6 进度对话框 312
16.1.7 登录对话框 315
16.1.8 使用Activity托管对话框 316
16.2 Toast 318
16.3 通知（Notification） 319
16.3.1 在状态栏上显示通知信息 319
16.3.2 永久存在的Notification 322
16.3.3 自定义Notification 323
16.4 小结 324
第17章 封装UI和代码利器——Fragment 325
17.1 Fragment简介 325
17.2 什么时候使用Fragment 326
17.3 按照Fragment设计原则编写程序 328
17.4 Fragment的生命周期 332
17.5 创建Fragment 341
17.5.1 通过XML布局文件创建Fragment 341
17.5.2 通过Java代码创建Fragment 342
17.5.3 创建无UI的Fragment 344
17.5.4 在低版本Android中使用Fragment（SupportLibrary） 345
17.6 Activity与Fragment之间的交互 346
17.6.1 Fragment与Activity之间的交互 346
17.6.2 Fragment的回调机制 348
17.7 Fragment状态的持久化 351
17.8 Fragment与回退栈（导航） 355
17.9 FragmentManager与FragmentTransaction 357
17.9.1 管理Fragment事务 357
17.9.2 查找Fragment 357
17.9.3 跟踪回退栈状态 358
17.9.4 恢复历史状态 358
17.9.5 管理Fragment的状态 359
17.9.6 添加、删除和替换Fragment 359
17.9.7 分离（Detach）与附加（Attach）Fragment 360
17.9.8 显示和隐藏Fragment 361
17.10 Fragment扩展 361
17.10.1 ListFragment 361
17.10.2 DialogFragment 363
17.10.3 其他Fragment扩展类 366
17.11 Fragment模板源代码分析 366
17.12 小结 368
第18章 动作栏——ActionBar 369
18.1 ActionBar简介 369
18.2 ActionBar基础 370
18.2.1 隐藏／显示ActionBar 370
18.2.2 添加和响应Action按钮 372
18.3可上下两分的ActionBar 374
18.4 应用程序图标导航 376
18.5 收缩和展开ActionView 377
18.6 ActionProvider 380
18.6.1 分享信息（ShareActionProvider） 380
18.6.2 定制ActionProvider 382
18.7 导航标签 384
18.8 下拉导航列表 388
18.9 小结 390
第19章 Android的拖放技术 391
19.1 Android中的拖放操作 391
19.2 拖放状态与拖放处理 391
19.3 拖动阴影 392
19.4 示例：拖动复制图像 393
19.5 小结 395
第20章 数据存储解决方案 396
20.1 读写key—value对：SharedPreferences 396
20.2 文件流操作 397
20.2.1 openFileOutput和openFileInput方法 398
20.2.2 读写SD卡中的文件 399
20.3 读写JSON格式的数据 400
20.4 SQLite数据库 404
20.4.1 SQLite数据库管理工具 404
20.4.2 SQLiteOpenHelper类与自动升级数据库 405
20.4.3 数据绑定与SimpleCursorAdapter类 406
20.4.4 操作SD卡上的数据库 409
20.4.5 将数据库与应用程序一起发布 410
20.4.6 内存数据库 411
20.5 小结 412
第21章 内容提供者（ContentProvider） 413
21.1 ContentProvider的作用 413
21.2 获得系统数据 413
21.2.1 读取联系人信息 414
21.2.2 查看收件箱的短信 415
21.3 自定义ContentProvider 417
21.3.1 查询城市信息 417
21.3.2 为ContentProvider添加访问权限 422
21.4 如何查找系统提供的ContentProvider 423
21.5 小结 425
第22章 广播接收器（BroadcastReceiver） 426
22.1 什么是广播 426
22.2 接收系统广播 427
22.2.1 短信拦截 427
22.2.2 用代码注册广播接收器 429
22.2.3 广播接收器的优先级 429
22.2.4 来去电拦截 430
22.2.5 截获屏幕休眠与唤醒 432
22.2.6 开机自动运行 433
22.2.7 显示手机电池的当前电量 434
22.3 发送广播 434
22.4 小结 435
第23章 服务（Service） 436
23.1 Service基础 436
23.1.1 Service的生命周期 436
23.1.2 开机启动Service 438
23.2 跨进程访问（AIDL服务） 439
23.2.1 什么是AIDL服务 439
23.2.2 建立AIDL服务的步骤 439
23.2.3 创建和调用AIDL服务 440
23.2.4 传递复杂数据的AIDL服务 442
23.2.5 AIDL与来去电自动挂断 445
23.3 小结 447
第24章 Android的组件开发 448
24.1 Android支持哪些组件开发方式 448
24.2 引用jar文件 449
24.3 跨工程引用 450
24.4 引用NDKLibrary 451
24.5 动态引用APK文件 451
24.6 动静结合的组件 453
24.7 脚本类型组件（JavaScript）与WebView控件 453
24.8 如何确定动态组件是否安装 457
24.9 升级动态组件 459
24.10 小结 461
第25章 Android的蓝牙开发技术 462
25.1 蓝牙简介 462
25.2 打开和关闭蓝牙设备 462
25.3 搜索蓝牙设备 463
25.4 蓝牙数据传输 465
25.5 蓝牙通信一定需要UUID吗 467
25.6 小结 467
第26章 近距离天线通信——NFC技术 468
26.1 NFC简介 468
26.2 NFC、蓝牙和红外之间的差异 469
26.3 NFC技术的未来前景 470
26.4 Android中的NFC技术 471
26.4.1 NDEF与非NDEF数据 471
26.4.2 NFC的三重过滤机制 471
26.4.3 开启Android的NFC功能 472
26.4.4 编写NFC程序的基本步骤 473
26.5 测试NFC程序需要的设备 474
26.6 让Android手机自动运行程序 475
26.6.1 向NFC标签写入数据的基本步骤 475
26.6.2 向NFC标签写入启动Android应用程序的消息 476
26.7 让Android手机自动打开网页 483
26.8 读写NFC标签中的文本 485
26.8.1 实现读写文本数据应用的基本思路 485
26.8.2 如何将NFC标签变成NDEF文本格式 485
26.8.3 NDEF文本格式解析 486
26.8.4 实现读写文本数据的Android应用程序 490
26.9 读写NFC标签中的Uri 496
26.9.1 NDEFUri格式解析 496
26.9.2 实现读写Uri的Android应用程序 499
26.10 利用NFC标签支持的数据格式进行过滤 502
26.11 处理任意NFC标签 504
26.12 读写非NDEF格式的数据 505
26.13 AndroidBeam技术与数据交互 507
26.13.1 传递NDEF消息 507
26.13.2 传输文件 511
26.14 小结 513
第27章 Android的网络开发技术 514
27.1 提交HTTPGET和HTTPPOST请求 514
27.2 HttpURLConnection类 516
27.3 上传文件 517
27.4 下载管理（DownloadManager） 519
27.5 Wi—FiDirect 524
27.5.1 Wi—FiDirectAPI的核心部分 524
27.5.2 创建监听Wi—FiDirect动作的广播接收器 524
27.5.3 注册广播接收器 525
27.5.4 发现Wi—FiDirect设备 526
27.5.5 连接Wi—FiDirect设备 526
27.5.6 数据传输 527
27.6 Internet电话（SIP） 528
27.6.1 使用SIP的要求和限制 528
27.6.2 配置Android版SIP电话 528
27.6.3 创建SipManager 529
27.6.4 注册SIP服务器 529
27.6.5 开始打电话 530
27.6.6 接听电话 530
27.7 小结 531
第28章 并发与定时器 532
28.1 Handler 532
28.1.1 更新UI 532
28.1.2 延迟执行 535
28.2 定时器 537
28.2.1 单秒循环的定时器：Chronometer 537
28.2.2 任意时间间隔的定时器：Timer 538
28.2.3 全局定时器：AlarmManager 539
28.3 AsyncTask 541
28.4 小结 543
第29章 异步装载（Loader） 544
29.1 Loader简介 544
29.2 Loader的核心类／接口 544
29.3 如何使用Loader 545
29.3.1 创建／重用Loader 545
29.3.2 遗弃旧的数据 546
29.3.3 LoaderManager与方法回调 546
29.3.4 创建Loader对象（onCreateLoader） 547
29.3.5 完成数据装载（onLoadFinished） 547
29.3.6 Loader被重置（onLoaderReset） 548
29.4 异步装载联系人（CursorLoader的应用） 548
29.5 小结 552
第30章 Android推送技术 553
30.1 IOS的推送方案 553
30.2 WindowsPhone的推送方案 554
30.3 Android的推送方案 554
30.4 第三方推送服务：极光推送 556
30.5 自己搭建推送服务器：AndroidPN 557
30.6 小结 558
第31章 Android的多媒体开发技术 559
31.1 音频 559
31.1.1 音频播放 559
31.1.2 录制音频 561
31.2 视频 563
31.2.1 播放视频 563
31.2.2 录制视频 564
31.3 相机 565
31.3.1 调用系统的拍照功能 565
31.3.2 自定义拍照功能 566
31.4 铃声 570
31.5 小结 572
第32章 Android的2D绘图 573
32.1 绘制基本的图形 573
32.1.1 绘制像素点 573
32.1.2 绘制直线 574
32.1.3 绘制圆形 574
32.1.4 绘制圆弧 574
32.1.5 绘制文本 575
32.1.6 示例：绘制基本的图形和文本 575
32.2 绘制位图 578
32.2.1 绘制Bitmap对象 578
32.2.2 使用Drawable.draw方法绘制位图 579
32.2.3 示例：用两种方式绘制位图 579
32.3 设置图像的透明度 580
32.4 旋转图像 581
32.5 小结 583
第33章 3D绘图之OpenGLES 584
33.1 OpenGLES简介 584
33.2 在3D空间中绘图 585
33.2.1 要绘制3D图形了，第一步要做什么 585
33.2.2 定义顶点 587
33.2.3 绘制三角形 588
33.2.4 三角形合并法绘制矩形 590
33.2.5 顶点法绘制矩形 592
33.2.6 顶点的选取顺序 592
33.2.7 索引法绘制矩形 593
33.2.8 基于OpenGLES的动画原理 594
33.2.9 旋转的矩形 594
33.3 视图 595
33.3.1 有趣的比喻：照相机拍照 596
33.3.2 模型变换：立方体旋转 597
33.3.3 用gluLookAt方法变换视图 599
33.4 颜色 600
33.5 小结 602
第34章 Android的桌面上的“尤物” 603
34.1 窗口小部件（AppWidget） 603
34.1.1 在Android桌面上添加AppWidget 603
34.1.2 开发AppWidget的步骤 603
34.1.3 数字时钟 605
34.1.4 AppWidgetProvider类 607
34.1.5 向AppWidget添加配置窗口 608
34.1.6 可以选择风格的数字时钟 608
34.2 动态壁纸（随机变换的圆圈） 612
34.3 小结 618
第35章 Android中的短信（SMS）与彩信（MMS）开发技术 619
35.1 通过系统程序发短信 619
35.2 直接发送短信 619
35.3 保存短信发送记录 620
35.4 监听短信和彩信 621
35.5 显示视频缩略图 622
35.6 彩信内容与SMIL协议 624
35.7 小结 631
第36章 Android的传感器开发技术 632
36.1 如何使用传感器 632
36.2 加速度传感器（Accelerometer） 635
36.3 重力传感器（Gravity） 635
36.4 光线传感器（Light） 636
36.5 陀螺仪传感器（Gyroscope） 636
36.5 方向传感器（Orientation） 637
36.6 其他传感器 638
36.7 小结 638
第37章 Android的全球定位系统（GPS） 639
37.1 GPS的核心API 639
37.2 获取位置提供者（LocationProvider） 641
37.2.1 获取所有可用的LocationProvider 641
37.2.2 根据名称获取LocationProvider 642
37.2.3 根据条件（Criteria）获取LocationProvider 642
37.3 实时获取GPS定位数据 643
37.4 测量地球上任意两点之间的距离 645
37.5 邻近警告 646
37.6 小结 647
第38章 谷歌地图（GoogleMap）开发应用 648
38.1 GoogleMap的跨平台解决方案：MapsJavaScriptAPIv3 648
38.2 GoogleMap的显示与定位 648
38.3 在GoogleMap上插入图像标志 651
38.4 插入多个图像标志 653
38.5 带阴影的位置坐标信息 653
38.6 地图与Java交互 655
38.7 小结 657
第39章 Android中的人机交互设计 658
39.1 手势（Gesture） 658
39.1.1 创建手势文件 658
39.1.2 通过手势输入字符串 658
39.1.3 通过手势调用程序 660
39.1.4 编写自己的手势创建器 661
39.2 多点触摸与放大／缩小操作 662
39.3 语音识别 664
39.4 让手机说话（TTS） 665
39.5 小结 666
第40章 Android中的输入法开发 667
40.1 Android输入法简介 667
40.2 控制输入法 668
40.3 输入法实战 669
40.3.1 实现输入法的步骤 669
40.3.2 编写输入法程序 669
40.3.3 输入法服务的生命周期 672
40.3.4 预输入文本 672
40.3.5 输入法设置 673
40.4 小结 673
第41章 AndroidNDK开发 674
41.1 AndroidNDK简介 674
41.2 安装、配置和测试NDK开发环境 674
41.2.1 系统和软件要求 675
41.2.2 下载和安装AndroidNDK 675
41.2.3 下载和安装Cygwin 675
41.2.4 配置AndroidNDK的开发环境 677
41.3 利用NDKSamples学习NDK开发 678
41.3.1 编译NDKSamples 678
41.3.2 NDK程序的结构与命名规则 678
41.4 AndroidNDK配置文件详解 679
41.4.1 AndroidNDK定义的变量 680
41.4.2 AndroidNDK定义的函数 680
41.4.3 描述模块的变量 681
41.4.4 配置Application.mk文件 682
41.5 第一个NDK示例：字母的大小写转换 682
41.5.1 编写NDK程序 682
41.5.2 编写调用NDK函数的Java程序 684
41.5.3 在Eclipse中开发和编译NDK程序 684
41.6 NDK程序读取Java字段值 686
41.7 小结 687
第42章 Android的测试驱动开发（TDD） 688
42.1 JUnit测试框架 688
42.2 测试Activity 688
42.3 测试ContentProvider 691
42.4 测试Service 692
42.5 测试普通类 692
42.6 小结 693
第43章 Android应用的性能优化 694
43.1 性能优化的基础知识 694
43.2 编写Java程序的最优化原则 695
43.2.1 用静态工厂方法代替构造方法 695
43.2.2 避免创建重复的对象 695
43.2.3 防止内存泄漏 697
43.2.4 返回零长度的集合而不是null 697
43.2.5 通过接口引用对象 698
43.3 避免ANR 698
43.4 执行时间测试 699
43.5 内存消耗测试 700
43.6 测试性能的工具：traceview 701
43.7 小结 702
第44章 游戏项目实战：笑脸连连看 703
44.1 游戏玩法 703
44.2 准备图像素材 703
44.3 实现主界面 704
44.4 随机生成连连看图像 705
44.5 选中两个相同图像后消失 705
44.6 用定时器限制游戏时间 706
44.7 小结 707
第45章 开源项目实战：NFC侠（NFCMan） 708
45.1 什么是NFCMan 708
45.2 用Android模拟器和非NFC设备测试NFC应用 709
45.3 NFCMan的实现原理 711
45.4 实现服务端程序（NFCMan） 711
45.4.1 可视化SWT开发环境 712
45.4.2 创建NFC标签 712
45.4.3 描述虚拟NFC标签的NFCTag类 714
45.4.4 保证虚拟NFC标签的全局唯一 715
45.4.5 显示与保存虚拟NFC标签 716
45.4.6 装载已经存在的虚拟NFC标签 719
45.4.7 开启服务 720
45.4.8 处理客户端请求 721
45.4.9 保证虚拟Android设备全局唯一 723
45.4.10 描述虚拟Android设备 724
45.4.11 添加虚拟Android设备 725
45.4.12 异常处理机制 727
45.5 客户端与服务端之间的数据管道（NFCManService） 728
45.5.1 与NFCMan交互（Socket方式） 728
45.5.2 与ANFCMan交互（广播方式） 732
45.6 客户端Library（ANFCMan） 733
45.6.1 ANFCMan的数据结构和异常类 733
45.6.2 ANFCMan的入口类 734
45.6.3 模拟检测到NFC标签的广播接收器 734
45.6.4 同时处理物理NFC标签和虚拟NFC标签的窗口 735
45.7 测试ANFCMan（TestANFCMan） 738
45.8 小结 739
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Android开发权威指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iPhone 4应用程序开发入门与实战
第1章　手机应用概述
第2章　配置iphone开发环境
第3章　iphone开发模式
第4章　objective-c编程语言
第5章　iphone应用程序的调试
第6章　视图、图形和图像
第7章　控制器、导航控制器和标签栏控制器
第8章　iphone数据的输入、显示和保存
第9章　手机应用和云计算平台的集成
第10章　gps、地图和通讯录编程
第11章　与照片相关的编程
第12章　音频和视频编程
第13章　游戏和ipad编程
第14章　高级话题
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iPhone 4应用程序开发入门与实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>写给大忙人看的Swift
第1章　Swift介绍	1
1.1　基本语法	4
1.1.1　变量和常量	4
1.1.2　字符串插值	7
1.1.3　流程控制	8
1.2　基本数据类型	12
1.2.1　整型	12
1.2.2　Double和Float	14
1.2.3　布尔型	15
1.2.4　字符串	16
1.2.5　数组	17
1.2.6　字典	21
习题	22
第2章　深入学习Swift 语法	23
2.1　可空类型	26
2.2　泛型	29
2.3　类型声明和类型推断	32
2.4　函数和闭包	33
2.4.1　全局函数	33
2.4.2　嵌套函数	34
2.4.3　闭包表达式	35
2.5　元组	36
2.6　switch语句和模式匹配	38
习题	41
第3章　对象和类	43
3.1　枚举	46
3.2　类	51
3.3　结构体	55
3.4　继承	57
3.5　重载	58
3.6　重写	60
3.7　初始化	61
3.8　属性	63
3.8.1　计算型属性	65
3.8.2　属性观察者	66
3.8.3　延迟属性	68
3.9　下标	69
3.10　协议	71
3.11　扩展	73
3.12　访问控制	74
习题	79
第4章　可空类型	81
4.1　可空类型和nil	84
4.2　有效性检查、可空绑定和强制拆箱	86
4.3　可空链	89
4.4　带隐式拆箱的可空	94
习题	96
第5章　泛型	99
5.1　为什么使用泛型	102
5.2　泛型函数	102
5.2.1　类型参数	103
5.2.2　使用多个类型参数	104
5.3　泛型类型	104
5.3.1　关联类型	108
5.3.2　where子句	110
习题	111
第6章　函数和闭包	113
6.1　函数	116
6.1.1　参数	116
6.1.2　外部参数名	117
6.1.3　参数的默认值	119
6.1.4　可变参数和inout参数	120
6.1.5　返回类型	121
6.2　闭包	123
6.2.1　参数及返回值的类型推断	124
6.2.2　尾随闭包	125
6.3　函数式编程	126
习题	129
第7章　使用Objective-C	131
7.1　与C和Objective-C APIs打交道	134
7.1.1　可空属性和返回值	135
7.1.2　AnyObject类型	137
7.1.3　继承、扩展和协议	138
7.1.4　自动转换类型	139
7.1.5　选择器和枚举	142
7.1.6　与C代码交互	143
7.2　在项目中同时使用Swift和Objective-C代码	144
习题	147
第8章　常见模式	149
8.1　嵌套类型	152
8.2　单例	153
8.3　使用GCD	154
8.3.1　dispatch_once	155
8.3.2　dispatch_async	155
8.3.3　dispatch_after	156
8.3.4　dispatch_apply	156
8.4　Sequences和Generators	157
8.5　运算符	161
8.5.1　运算符重载	162
8.5.2　自定义运算符	163
习题	164
索引	165
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>写给大忙人看的Swift
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Unity3D大风暴之入门篇(海量教学视频版)
第1章 unity3d介绍	1
1.1 unity3d基础知识概览	2
1.1.1 真实的unity3d	2
1.1.2 成长中的unity3d	2
1.1.3 unity3d的大好市场前景	2
1.1.4 unity3d的个性	3
1.2 unity3d开发平台	6
1.2.1 unity3d引擎的搭建与安装	6
1.2.2 hello world——开始unity漫步之旅	14
第2章 界面	19
2.1 unity集成开发环境的整体布局	20
2.1.1 界面的自定义	22
2.1.2 scene窗口	24
2.1.3 game窗口	30
2.1.4 project窗口	31
2.1.5 inspector窗口	33
2.1.6 界面操作	33
2.1.7 标题栏	33
2.1.8 工具栏	33
.2.1.9 状态栏与控制台	35
2.2 菜单栏	36
2.2.1 file菜单	36
2.2.2 edit菜单	38
2.2.3 assets菜单	44
2.2.4 gameobject菜单	46
2.2.5 terrain菜单	47
2.2.6 window菜单	48
2.2.7 help菜单	51
第3章 工程的新建与管理	52
3.1 新建工程及导入资源包	53
3.2 工程的保存与管理	57
第4章 创建物体	58
4.1 地形	59
4.1.1 高度图的导入与导出	59
4.1.2 地形的绘制	60
4.1.3 实例：绘制地形	63
4.1.4 地形贴图	65
4.1.5 为地形添加树贴图	67
4.1.6 为地形添加草贴图	68
4.1.7 设置地形参数	71
4.1.8 为地形添加水体	77
4.2 摄像机	80
4.2.1 摄像机概述	80
4.2.2 摄像机的创建	80
4.2.3 摄像机参数的调节	81
4.2.4 镜头的移动	87
4.3 光源	92
4.3.1 基础光源	92
4.3.2 开启光影	96
4.4 辅助元素	102
4.5 添加角色和道具	103
4.5.1 添加角色	103
4.5.2 添加道具	111
4.6 优化渲染	117
4.7 天空盒	120
4.7.1 创建天空盒	120
4.7.2 雾化效果	125
4.7.3 实例：添加天空盒	127
第5章 物理特效	129
5.1 刚体及碰撞器	130
5.1.1 刚体	130
5.1.2 碰撞器	132
5.2 关节	137
5.2.1 铰链关节	137
5.2.2 固定关节	139
5.2.3 弹簧关节	140
5.2.4 布娃娃	142
5.2.5 角色关节	144
5.2.6 可配置关节	145
5.3 实例：钟摆	147
5.4 粒子系统	150
5.4.1 创建粒子	150
5.4.2 粒子系统的属性及参数	152
5.4.3 实例：火焰效果	168
第6章 控制	175
6.1 unity脚本程序编辑	176
6.1.1 unity专用脚本语言	176
6.1.2 unity的help菜单	176
6.1.3 脚本编写	177
6.2 unity中的javascript脚本语言入门	184
6.2.1 变量	184
6.2.2 运算符	185
6.2.3 逻辑运算符	188
6.2.4 条件运算	189
6.2.5 循环	192
6.3 函数	194
6.4 控制	203
6.4.1 访问unity内的部分组件	203
6.4.2 input控键	207
6.4.3 物体的创建和销毁	212
6.4.4 碰撞与触发	218
6.4.5 增量时间	223
6.4.6 延迟	223
6.5 人工智能	224
6.5.1 让对象智能起来的代码	224
6.5.2 寻路设置	225
6.5.3 依靠物理组件实现人工智能	227
第7章 gui	232
7.1 gui相关函数	233
7.1.1 实现函数	233
7.1.2 通过按钮实现音乐播放功能	234
7.1.3 关于audio source组件的延伸	237
7.1.4 关于界面控件位置的简单说明	239
7.2 更多的gui变量和函数	243
7.2.1 guicontent构造函数	243
7.2.2 gui变量	246
7.2.3 其他gui函数	251
7.3 gui在游戏中的应用	255
7.3.1 输出游戏中的信息	256
7.3.2 游戏界面的切换	258
第8章 后期工作	264
8.1 音频的处理	265
8.1.1 音频的导入	265
8.1.2 音频的设置	265
8.1.3 支持格式	268
8.1.4 监听器	269
8.1.5 添加音频	269
8.1.6 音频的属性	271
8.1.7 音频混响区	272
8.1.8 音频过滤器	274
8.2 项目的调试和优化	276
8.3 日志文件	279
8.3.1 后期处理所有导入的资源	279
8.3.2 导出未使用的资源	279
8.3.3 设置打印文件的大小	280
8.3.4 制作纹理	280
8.3.5 压缩网格、动画和视频	281
8.4 打包发布	284
8.5 创建独立项目	286
第9章 综合实例	287
9.1 3d实例	288
9.1.1 游戏功能简介	288
9.1.2 游戏策划及准备工作	288
9.1.3 场景搭建	289
9.1.4 欢迎界面的制作	297
9.2 2d实例	302
9.2.1 游戏功能简介	302
9.2.2 游戏策划	302
9.2.3 场景介绍	303
9.2.4 游戏制作	303
9.2.5 游戏功能的实现	310
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Unity3D大风暴之入门篇(海量教学视频版)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Swift编程权威指南（第2版）
第一部分　起步
第1章　起步　　2
1.1　Xcode起步　　2
1.2　尝试playground　　4
1.3　修改变量并打印信息到控制台　　5
1.4　继续前进　　7
1.5　青铜挑战练习　　7
第2章　类型、常量和变量　　8
2.1　类型　　8
2.2　常量与变量　　9
2.3　字符串插值　　11
2.4　青铜挑战练习　　12
第二部分　基础知识
第3章　条件语句　　14
3.1　if/else　　14
3.2　三目运算符　　16
3.3　嵌套的if　　17
3.4　else if　　18
3.5　青铜挑战练习　　19
第4章　数　　20
4.1　整数　　20
4.2　创建整数实例　　22
4.3　整数操作符　　23
4.3.1　整数除法　　24
4.3.2　快捷操作符　　24
4.3.3　溢出操作符　　25
4.4　转换整数类型　　26
4.5　浮点数　　27
4.6　青铜挑战练习　　28
第5章　switch语句　　29
5.1　什么是switch　　29
5.2　开始使用switch　　30
5.2.1　区间　　32
5.2.2　值绑定　　33
5.2.3　where子句　　34
5.2.4　元组和模式匹配　　35
5.3　switch与if/else　　38
5.4　青铜挑战练习　　39
5.5　白银挑战练习　　40
第6章　循环　　41
6.1　for-in循环　　41
6.2　类型推断概述　　45
6.3　while循环　　45
6.4　repeat-while循环　　46
6.5　重提控制转移语句　　47
6.6　白银挑战练习　　50
第7章　字符串　　51
7.1　使用字符串　　51
7.2　Unicode　　53
7.2.1　Unicode标量　　53
7.2.2　标准等价　　55
7.3　青铜挑战练习　　57
7.4　白银挑战练习　　57
第8章　可空类型　　58
8.1　可空类型　　58
8.2　可空实例绑定　　60
8.3　隐式展开可空类型　　62
8.4　可空链式调用　　63
8.5　原地修改可空实例　　64
8.6　nil合并运算符　　65
8.7　青铜挑战练习　　66
8.8　白银挑战练习　　66
第三部分　容器和函数
第9章　数组　　68
9.1　创建数组　　68
9.2　访问和修改数组　　69
9.3　数组相等　　75
9.4　不可变数组　　76
9.5　文档　　77
9.6　青铜挑战练习　　78
9.7　白银挑战练习　　78
9.8　黄金挑战练习　　78
第10章　字典　　79
10.1　创建字典　　79
10.2　填充字典　　80
10.3　访问和修改字典　　80
10.4　增加和删除值　　82
10.5　循环　　84
10.6　不可变字典　　85
10.7　把字典转换为数组　　85
10.8　白银挑战练习　　86
10.9　黄金挑战练习　　86
第11章　集合　　87
11.1　什么是集合　　87
11.2　创建集合　　87
11.3　运用集合　　89
11.3.1　并集　　89
11.3.2　交集　　90
11.3.3　不相交　　91
11.4　青铜挑战练习　　92
11.5　白银挑战练习　　92
第12章　函数　　93
12.1　一个基本的函数　　93
12.2　函数参数　　94
12.2.1　参数名字　　95
12.2.2　变长参数　　96
12.2.3　默认参数值　　97
12.2.4　in-out参数　　98
12.3　从函数返回　　99
12.4　嵌套函数和作用域　　100
12.5　多个返回值　　101
12.6　可空返回值类型　　102
12.7　提前退出函数　　103
12.8　函数类型　　103
12.9　青铜挑战练习　　104
12.10　白银挑战练习　　104
12.11　深入学习：Void　　105
第13章　闭包　　106
13.1　闭包的语法　　106
13.2　闭包表达式语法　　107
13.3　函数作为返回值　　110
13.4　函数作为参数　　111
13.5　闭包能捕获变量　　113
13.6　闭包是引用类型　　115
13.7　函数式编程　　116
13.8　青铜挑战练习　　119
13.9　青铜挑战练习　　119
13.10　黄金挑战练习　　119
第四部分　枚举、结构体和类
第14章　枚举　　122
14.1　基本枚举　　122
14.2　原始值枚举　　125
14.3　方法　　128
14.4　关联值　　131
14.5　递归枚举　　133
14.6　青铜挑战练习　　136
14.7　白银挑战练习　　136
第15章　结构体和类　　137
15.1　新工程　　137
15.2　结构体　　141
15.3　实例方法　　144
15.4　mutating方法　　145
15.5　类　　145
15.5.1　Monster类　　146
15.5.2　继承　　147
15.6　应该用哪种类型　　150
15.7　青铜挑战练习　　150
15.8　白银挑战练习　　150
15.9　深入学习：类型方法　　151
15.10　深入学习：mutating方法　　152
第16章　属性　　158
16.1　基本的存储属性　　158
16.2　嵌套类型　　159
16.3　惰性存储属性　　160
16.4　计算属性　　162
16.5　属性观察者　　164
16.6　类型属性　　165
16.7　访问控制　　168
16.8　青铜挑战练习　　171
16.9　白银挑战练习　　171
16.10　黄金挑战练习　　171
第17章　初始化　　172
17.1　初始化方法语法　　172
17.2　结构体初始化　　172
17.2.1　结构体的默认初始化方法　　177
17.3.1　类的默认初始化方法　　177
17.3.2　初始化和类继承　　177
17.3.3　类的必需初始化方法　　183
17.3.4　反初始化　　184
17.4　可失败的初始化方法　　185
17.5　掌握初始化　　188
17.6　白银挑战练习　　188
17.7　黄金挑战练习　　188
17.8　深入学习：初始化方法参数　　189
第18章　值类型与引用类型　　190
18.1　值语义　　190
18.2　引用语义　　192
18.3　值类型常量和引用类型常量　　194
18.4　配合使用值类型和引用类型　　196
18.5　复制　　197
18.6　相等与同一　　199
18.7　我应该用什么　　200
18.8　深入学习：写时复制　　201
第五部分　Swift高级编程
第19章　协议　　210
19.1　格式化表格数据　　210
19.2　协议　　214
19.3　符合协议　　217
19.4　协议继承　　218
19.5　协议组合　　219
19.6　mutating方法　　220
19.7　白银挑战练习　　221
19.8　黄金挑战练习　　221
第20章　错误处理　　222
20.1　错误分类　　222
20.2　对输入字符串做词法分析　　223
20.3　捕获错误　　231
20.4　解析符号数组　　232
20.5　用鸵鸟政策处理错误　　236
20.6　Swift的错误处理哲学　　239
20.7　青铜挑战练习　　240
20.8　白银挑战练习　　240
20.9　黄金挑战练习　　241
第21章　扩展　　242
21.1　扩展已有类型　　242
21.2　扩展自己的类型　　244
21.2.1　用扩展使类型符合协议　　245
21.2.3　嵌套类型和扩展　　246
21.2.4　扩展中的函数　　247
21.3　青铜挑战练习　　248
21.4　青铜挑战练习　　248
21.5　白银挑战练习　　248
第22章　泛型　　249
22.1　泛型数据结构　　249
22.2　泛型函数和方法　　251
22.3　类型约束　　253
22.4　关联类型协议　　254
22.5　类型约束中的where子句　　257
22.6　青铜挑战练习　　259
22.7　白银挑战练习　　259
22.8　黄金挑战练习　　259
22.9　深入学习：理解可空类型　　260
22.10　深入学习：参数多态　　260
第23章　协议扩展　　262
23.1　为锻炼建模　　262
23.2　扩展Exercise　　264
23.3　带where子句的协议扩展　　265
23.4　用协议扩展提供默认实现　　266
23.5　关于命名：一个警世故事　　268
23.6　青铜挑战练习　　270
23.7　黄金挑战练习　　270
第24章　内存管理和ARC　　271
24.1　内存分配　　271
24.2　循环强引用　　272
24.3　用weak打破循环强引用　　276
24.4　闭包中的循环引用　　277
24.5　逃逸闭包和非逃逸闭包　　281
24.6　青铜挑战练习　　283
24.7　白银挑战练习　　283
24.8　深入学习：我能获取实例的引用计数吗　　283
第25章　Equatable和Comparable　　284
25.1.1　插曲：中缀运算符　　286
25.1.2　方法“买一赠一”　　287
25.2　符合Comparable　　287
25.3　继承Comparable　　289
25.4　青铜挑战练习　　290
25.5　黄金挑战练习　　290
25.6　白金挑战练习　　291
25.7　深入学习：自定义运算符　　291
第六部分　事件驱动的应用
第26章　第一个Cocoa应用　　296
26.1　开始创建VocalTextEdit　　297
26.2　模型-视图-控制器　　298
26.3　设置视图控制器　　299
26.4　在Interface Builder中设置视图　　302
26.4.2　添加文本视图　　303
26.4.3　自动布局　　305
26.5　连接　　307
26.5.1　为VocalTextEdit的按钮设置目标-动作对　　307
26.5.2　连接文本视图出口　　308
26.6　让VocalTextEdit“说话”　　310
26.7　保存和加载文档　　311
26.7.1　类型转换　　313
26.7.2　保存文档　　314
26.7.3　加载文档　　316
26.7.4　按照MVC模式整理代码　　320
26.8　白银挑战练习　　320
26.9　黄金挑战练习　　320
第27章　第一个iOS应用　　321
27.1　开始创建iTahDoodle　　322
27.2　布局用户界面　　323
27.3　为待办事项列表建模　　331
27.4　设置UITableView　　335
27.5　保存和加载TodoList　　337
27.5.1　保存TodoList　　337
27.5.2　加载TodoList　　339
27.6　青铜挑战练习　　341
27.7　白银挑战练习　　341
27.8　黄金挑战练习　　341
第28章　互操作　　342
28.1　一个Objective-C工程　　342
28.2　在Objective-C工程中加入Swift　　361
28.4　白银挑战练习　　368
28.5　黄金挑战练习　　368
第29章　结语　　369
29.1　接下来学习什么　　369
29.2　插个广告　　369
29.3　邀请　　369
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Swift编程权威指南（第2版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iPhone&iPad高级编程
《iphone & ipad高级编程》
第1章 导航 1
1.1 导航栈 2
1.2 导航栏 2
1.2.1 uinavigationbardelegate协议 2
1.2.2 配置导航栏 2
1.2.3 压入和弹出导航项 3
1.3 一个简单的导航栏 3
1.3.1 开发步骤：一个简单的导航栏 4
1.3.2 测试应用程序 16
1.4 工具栏 17
1.5 一个简单的工具栏 17
1.5.1 开发步骤：一个简单的工具栏 18
1.5.2 测试应用程序 25
1.6 选项卡栏 25
1.6.1 uitabbardelegate协议 25
1.6.2 定制选项卡栏 25
1.7 一个简单的选项卡栏 25
1.7.1 开发步骤：一个简单的选项卡栏 26
1.7.2 设计视图控制器 28
.1.7.3 测试应用程序 49
1.8 小结 49
第2章 警告、操作列表和模态视图 51
2.1 警告 51
2.1.1 设计警告视图 51
2.1.2 uialertviewdelegate协议 52
2.2 一个简单的iphone-ipod touch和ipad警告视图 52
2.2.1 开发步骤：向uitextview中加载一个文件 53
2.2.2 测试应用程序 63
2.3 操作列表 63
2.3.1 设计操作列表 63
2.3.2 uiactionsheetdelegate协议 64
2.4 一个iphone-ipod touch操作列表 64
2.4.1 开发步骤：创建一个iphone或ipod touch操作列表 65
2.4.2 测试应用程序 76
2.5 一个ipad操作列表 76
2.5.1 开发步骤：创建一个ipad操作列表 76
2.5.2 最终步骤：建立关联 89
2.5.3 测试应用程序 91
2.6 模态视图 91
2.6.1 显示和取消模态视图 91
2.6.2 转换方式 91
2.6.3 模态显示方式(仅适用于ipad) 91
2.7 一个iphone和ipod touch模态视图 91
2.7.1 开发步骤：创建一个iphone和ipod touch模态视图 92
2.7.2 测试应用程序 101
2.8 一个ipad模态视图 101
2.8.1 开发步骤：创建一个ipad模态视图 103
2.8.2 测试应用程序 113
2.9 小结 113
第3章 定制表格视图 115
3.1 表格视图 115
3.1.1 表格视图单元格 116
3.1.2 uitableviewdatasource协议 116
3.1.3 uitableviewdelegate协议 116
3.2 一个定制表格视图应用程序 116
3.2.1 开发步骤：一个定制表格视图应用程序 117
3.2.2 创建contacts.plist属性列表文件 128
3.2.3 测试应用程序 129
3.3 小结 129
第4章 拆分视图 131
4.1 uisplitviewcontroller类 131
4.1.1 uipopovercontrollerdelegate协议 132
4.1.2 uisplitviewcontrollerdelegate协议 132
4.2 一个简单的拆分视图应用程序 132
4.2.1 开发步骤：一个简单的ipad拆分视图应用程序 135
4.2.2 创建datasource.plist属性列表文件 138
4.2.3 测试应用程序 152
4.3 小结 152
第5章 触控事件 153
5.1 处理触控事件 153
5.1.1 单点触控 154
5.1.2 多点触控 154
5.1.3 点击 155
5.1.4 滑动和手势 155
5.2 一个简单的触控处理程序 156
5.2.1 开发步骤：一个简单的触控处理程序 157
5.2.2 测试应用程序 167
5.3 一个简单的手势识别器 167
5.3.1 开发步骤：一个简单的手势识别器 169
5.3.2 测试应用程序 190
5.4 小结 190
第6章 处理通知 191
6.1 nsnotification概念 192
6.1.1 通知中心 192
6.1.2 注册本地通知 192
6.1.3 发布本地通知 192
6.1.4 注销观察者 193
6.2 一个本地命名通知 193
6.2.1 开发步骤：一个本地命名通知 193
6.2.2 测试应用程序 202
6.3 一个本地键盘通知 202
6.3.1 开发步骤：一个本地键盘通知 203
6.3.2 测试应用程序 216
6.4 小结 216
第7章 联网概念 217
7.1 网络通信 218
7.2 一个简单的网络浏览器 220
7.2.1 开发步骤：一个简单的网络浏览器 220
7.2.2 测试应用程序 234
7.3 对等设备通信 234
7.3.1 开发步骤：对等设备通信 235
7.3.2 测试应用程序 252
7.4 小结 252
第8章 多媒体 253
8.1 音频框架 253
8.1.1 媒体播放器 253
8.1.2 av基础框架 253
8.1.3 音频工具箱 254
8.1.4 音频单元框架 254
8.1.5 openal框架 254
8.2 视频框架 254
8.2.1 mpmovieplayercontroller 255
8.2.2 支持的格式 255
8.3 一个播放ipod库中音频的应用程序 255
8.3.1 开发步骤：播放ipod库中的音频 256
8.3.2 测试应用程序 280
8.4 一个播放ipod库中视频的应用程序 281
8.4.1 开发步骤：一个播放ipod库中视频的应用程序 281
8.4.2 测试应用程序 302
8.5 小结 302
第9章 应用程序首选项 303
9.1 应用程序配置 303
9.1.1 应用程序首选项指南 304
9.1.2 首选项元素类型 304
9.1.3 实现首选项层次结构 304
9.1.4 访问应用程序首选项 304
9.2 设置简单的首选项 305
9.2.1 开发步骤：设置简单的首选项 305
9.2.2 测试应用程序 314
9.3 创建一个子窗格首选项层次结构 314
9.3.1 开发步骤：创建一个子窗格首选项层次结构 315
9.3.2 测试应用程序 325
9.4 小结 325
第10章 数据存储 327
10.1 属性列表 327
10.1.1 属性列表的使用 327
10.1.2 推荐的数据元素类型 328
10.1.3 保存和还原属性列表 328
10.2 核心数据 329
10.2.1 核心数据栈 329
10.2.2 托管对象 329
10.2.3 托管对象上下文 329
10.2.4 托管对象模型 329
10.2.5 持久存储协调器 329
10.2.6 xcode建模工具 330
10.2.7 获取托管对象 330
10.2.8 删除托管对象 330
10.3 数据存储的共同基础 331
10.3.1 开发步骤：一个使用属性列表的简单应用程序 332
10.3.2 测试应用程序 354
10.3.3 开发步骤：一个使用核心数据的简单应用程序 354
10.3.4 测试应用程序 381
10.4 小结 381
第11章 剪贴板 383
11.1 剪贴板的概念 384
11.1.1 命名的剪贴板 384
11.1.2 持久性 384
11.1.3 编辑菜单 384
11.1.4 剪切所选内容 385
11.1.5 粘贴项 386
11.1.6 取消编辑菜单 386
11.2 剪切和粘贴文本 386
11.2.1 开发步骤：剪切和粘贴文本 387
11.2.2 测试应用程序 395
11.3 剪切和粘贴图像 395
11.3.1 开发步骤：剪切和粘贴图像 396
11.3.2 测试应用程序 403
11.4 为ipad创建定制菜单 404
11.4.1 开发步骤：为ipad创建定制菜单 405
11.4.2 测试应用程序 413
11.5 小结 413
第12章 单元测试 415
12.1 设置环境 415
12.2 一个简单的单元测试 416
12.2.1 开发步骤：一个简单的单元测试 417
12.2.2 创建data.plist数据源 427
12.2.3 测试应用程序 430
12.3 创建单元测试的步骤：一个简单的单元测试 431
12.3.1 对应用程序进行单元测试 435
12.3.2 注册设备 436
12.3.3 对应用程序进行单元测试 436
12.4 小结 437
第13章 调整和优化性能 439
13.1 性能分析 439
13.1.1 使用模拟器 440
13.1.2 使用设备 440
13.1.3 性能分析的好处 440
13.2 一个简单的内存泄漏测试 440
13.2.1 开发步骤：内存泄漏测试 444
13.2.2 开发步骤(续)：使用检测应用程序 452
13.2.3 开发步骤(续)：在主菜单中使用build and analyze选项 452
13.3 小结 453
第14章 集成iad网络 455
14.1 加入iad网络 455
14.1.1 设置银行账户信息 456
14.1.2 为应用程序启用iad网络选项 456
14.1.3 配置iad首选项 456
14.2 使应用程序做好使用iad网络的准备 456
14.2.1 实现adbannerview 456
14.2.2 集成iad框架 456
14.3 一个使用iad网络的简单应用程序 457
14.3.1 开发步骤：一个使用iad网络的简单应用程序 457
14.3.2 测试应用程序 464
14.4 小结 464
第15章 多任务处理 465
15.1 多任务处理服务 465
15.1.1 uiapplication委托消息 466
15.1.2 多任务处理的作用 466
15.1.3 xcode模拟器中多任务处理的限制 467
15.1.4 支持多任务处理的设备 467
15.2 一个多任务音频应用程序 467
15.2.1 开发步骤：一个多任务音频应用程序 468
15.2.2 测试应用程序 486
15.3 小结 487
附录a 开发应用程序的初始步骤 489
附录b iphone开发中心 499
附录c cocoa touch静态库 505
附录d 苹果开发资源 527
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iPhone&iPad高级编程
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Swift开发实战权威指南
上篇 Swift语言基础篇
第1章 Swift语言介绍 2
1.1 Swift语言介绍 2
1.2 Swift和Objective-C语言对比 3
1.3 Swift优秀的特性 5
1.4 使用Xcode建立Swift项目 9
1.5 Swift使用Playground 13
第2章 基础知识 16
2.1 常量与变量 16
2.1.1 常量和变量的声明 16
2.1.2 常量或变量的类型 17
2.1.3 常量和变量的命名 17
2.1.4 常量和变量的输出 18
2.1.5 字符串的连接输出 19
2.1.6 注释 19
2.1.7 分号 20
2.1.8 汉字命名方式 20
2.2 类型定义 20
2.2.1 整型 20
2.2.2 浮点型 21
2.2.3 自定义类型typealias 22
2.2.4 类型安全及类型推导 22
2.2.5 常数和数值进制的表示方法 22
2.2.6 类型转换 23
2.2.7 类型别名 24
2.2.8 布尔类型 25
2.2.9 元组Tube 25
2.3 可选类型Optional 26
2.3.1 可选类型的声明 27
2.3.2 可选类型的赋值 27
2.3.3 可选类型的使用 27
2.3.4 可选类型nil的使用 28
2.4 基本运算符 28
2.4.1 赋值运算符 28
2.4.2 算术运算符 28
2.4.3 复合运算符 31
2.4.4 比较运算符 31
2.4.5 三目运算符 32
2.4.6 区间运算符 32
2.4.7 逻辑运算符 33
2.4.8 断言Assert操作 34
第3章 字符串、数组、字典 35
3.1 字符串 35
3.1.1 字符串字面量 35
3.1.2 字符串的连接 36
3.1.3 字符串与其他数据类型的拼接 36
3.1.4 字符串相关操作方法 37
3.1.5 与其他类型的转换 38
3.2 数组 39
3.2.1 数组的声明及初始化 39
3.2.2 数组元素的访问与修改 41
3.2.3 数组的遍历 42
3.2.4 数组元素的插入与删除 42
3.3 字典 43
3.3.1 字典的声明及初始化 44
3.3.2 字典元素的访问与修改 44
3.3.3 字典的遍历 45
第4章 控制语句和函数 47
4.1 分支结构 47
4.1.1 if条件语句 47
4.1.2 switch语句 48
4.2 语句的作用域 50
4.3 循 环 结 构 51
4.3.1 for循环 51
4.3.2 forin循环 51
4.3.3 while循环 52
4.3.4 do-while循环 52
4.4 跳转语句及块标签 53
4.4.1 continue语句 53
4.4.2 break语句 53
4.4.3 fallthrough语句 54
4.5 函数 54
4.5.1 函数的定义及调用方法 55
4.5.2 函数的参数 55
4.5.3 函数的返回值 57
4.5.4 函数的变量参数 58
4.5.5 函数的类型 58
4.5.6 函数的嵌套 59
第5章 枚举和结构体 60
5.1 枚举 60
5.1.1 枚举的声明 60
5.1.2 枚举的值 60
5.1.3 枚举的使用方法 62
5.2 结构体 63
5.2.1 结构体的声明和定义 63
5.2.2 结构体的构造方法 63
5.2.3 结构体的赋值和取值 64
5.2.4 结构体的嵌套 64
5.2.5 结构体是值拷贝类型 65
第6章 类 66
6.1 类的声明与定义 66
6.1.1 类对象的创建 66
6.1.2 类的属性的访问 67
6.1.3 类的相互引用 67
6.1.4 类的嵌套 67
6.1.5 类是引用类型 68
6.1.6 恒等操作符(===/!===) 68
6.1.7 类的哈希 69
6.1.8 集合类型对象之间的赋值和拷贝 69
6.2 属性 71
6.2.1 对象属性 71
6.2.2 运算属性 76
6.2.3 类属性 77
6.3 方法 77
6.3.1 对象方法 77
6.3.2 类方法 80
6.4 subscript下标 81
6.4.1 subscript的作用 81
6.4.2 subscript的声明 82
6.4.3 subscript的使用方法 82
6.4.4 subscript使用方法的例子 82
第7章 继承 85
7.1 继承实例分析 85
7.2 重写 88
7.2.1 重写方法 89
7.2.2 重写属性 89
7.2.3 重写属性观察器 91
7.2.4 super关键字 93
7.2.5 final关键字 95
7.3 构造方法 97
7.3.1 构造方法的基本语法 97
7.3.2 构造方法的参数名称 98
7.3.3 属性的缺省值 99
7.3.4 结构体的构造方法 100
7.3.5 枚举类型的构造方法 101
7.3.6 值类型的构造方法代理 102
7.3.7 可选类型属性与构造方法 103
7.3.8 常量属性与构造方法 104
7.3.9 通过闭包或者函数设置属性的缺省值 105
7.3.10 派生类的构造方法 107
7.3.11 构造方法的重写 113
7.3.12 构造方法的自动继承 115
7.3.13 必须构造方法 118
7.4 析构方法 119
7.4.1 析构方法语法 119
7.4.2 析构方法的自动继承 120
7.5 类扩展 121
7.5.1 类扩展的语法 121
7.5.2 扩展运算属性 121
7.5.3 扩展构造方法 122
7.5.4 扩展普通方法 122
7.5.5 扩展下标 123
第8章 自动引用计数 125
8.1 自动引用计数的工作机制 125
8.2 自动引用计数实战 126
8.3 对象之间的循环强引用 129
8.4 解决对象之间的循环强引用 131
8.4.1 弱引用weak 131
8.4.2 无主引用unowner 134
8.4.3 无主引用以及显式展开的可选属性 136
8.5 闭包引起的循环强引用 137
8.6 解决闭包引起的循环强引用 140
8.6.1 定义占有列表 140
8.6.2 弱引用和无主引用 141
第9章 可选链和类型转换 143
9.1 可选链 143
9.1.1 可选链可替代强制解析 143
9.1.2 为可选链定义模型类 145
9.1.3 通过可选链调用属性 146
9.1.4 通过可选链调用方法 147
9.1.5 使用可选链调用下标 147
9.1.6 可选链多层链接 148
9.1.7 链接自判断返回值的方法 149
9.2 类型转换 150
9.2.1 子类的对象赋值为基类 150
9.2.2 类型检查 151
9.2.3 类型转换 151
9.2.4 Any和AnyObject类型转换 152
第10章 协议 155
10.1 协议的语法 155
10.1.1 属性要求 155
10.1.2 方法要求 157
10.1.3 Mutating方法要求 157
10.1.4 使用协议规范构造函数 158
10.1.5 实现构造协议的类 158
10.1.6 协议类型 159
10.2 委托/代理设计模式 160
10.3 协议的各种使用 163
10.3.1 在扩展中添加协议成员 163
10.3.2 通过扩展补充协议声明 164
10.3.3 集合中的协议类型 164
10.3.4 仅在类中使用协议 165
10.4 协议的继承 165
10.4.1 协议合成 166
10.4.2 检验协议的一致性 167
10.4.3 可选协议要求 168
第11章 闭包和操作符重载 171
11.1 闭包表达式 171
11.1.1 sorted函数 171
11.1.2 闭包表达式语法 172
11.1.3 根据上下文推断参数类型 173
11.1.4 单表达式闭包隐式返回 173
11.1.5 参数名称缩写 173
11.1.6 运算符函数 174
11.2 尾部闭包 174
11.2.1 访问上下文值 176
11.2.2 闭包是引用类型 177
11.3 运算符重载 178
11.3.1 中置运算符函数 178
11.3.2 前置和后置运算符 179
11.3.3 组合赋值运算符 179
11.3.4 比较运算符 180
11.3.5 自定义运算符 180
11.3.6 自定义中置运算符的优先级和结合性 181
11.4 泛型 182
11.4.1 泛型解决的问题 182
11.4.2 泛型类型 184
11.4.3 关联类型 190
11.5 Swift和Objective-C交互 194
11.5.1 Swift调用Objective-C函数 194
11.5.2 Objective-C 调用Swift程序 197
下篇 Swift UI设计篇
第12章 第一个UI项目 202
12.1 创建工程 202
12.2 Xcode工程界面 204
12.3 代码及运行 205
12.4 运行 207
第13章 UIView视图 208
13.1 UIView的创建 208
13.2 CGRect详解 209
13.3 UIColor的使用 211
13.4 UIView的显示 214
13.5 父视图与子视图 214
13.5.1 概念 214
13.5.2 多视图 215
13.5.3 UIView的透明度属性 216
13.6 UIView其他操作 216
13.6.1 子视图数组 216
13.6.2 添加子视图的其他方法 217
13.6.3 子视图的层次的改变方法 219
13.6.4 UIView的简单动画 220
13.7 UIView的tag属性 223
13.8 UIView的移除 224
第14章 iOS中的各种控件 226
14.1 UILabel标签 226
14.1.1 UILabel的创建 226
14.1.2 UILabel的背景颜色和文字颜色 226
14.1.3 设置文本对齐方式 227
14.1.4 文字大小与标签宽度的自适应 228
14.1.5 行数与换行设置 230
14.1.6 UIFont字体的使用 232
14.1.7 文字阴影的设置 237
14.2 UIButton按钮控件 237
14.2.1 按钮的创建 237
14.2.2 UIButton的文字及颜色设置 238
14.2.3 State按钮的状态 240
14.2.4 Type按钮的类型 242
14.2.5 UIImage类的使用及给按钮添加图片 243
14.2.6 给按钮添加事件响应 252
14.3 UIImageView图片视图 258
14.3.1 UIImageView的创建并显示图片 258
14.3.2 UIImageView显示图片的拉伸设置 261
14.3.3 使用UIImageView实现动画 262
14.3.4 UIImageView的用户响应 265
14.4 UITextField单行文本框 267
14.4.1 UITextField创建 267
14.4.2 UITextField属性设置 268
14.4.3 键盘 275
14.4.4 UITextField响应用户事件 278
14.4.5 UITextField监控输入内容 280
第15章 UIViewControler视图控制器 285
15.1 创建视图控制器 285
15.2 视图控制器的产生过程 288
15.3 视图控制器的切换 290
15.3.1 弹出界面 290
15.3.2 回收界面 292
15.4 视图控制器的生命周期 293
15.5 视图控制器的切换动画 294
第16章 UINavigationController导航栏控制器 297
16.1 导航栏控制器概述 297
16.2 导航栏控制器的创建 298
16.3 导航栏 299
16.3.1 导航栏的标题 299
16.3.2 导航栏的背景颜色 300
16.3.3 导航栏的背景图片 300
16.3.4 导航栏的透明 302
16.3.5 导航栏的隐藏 303
16.4 视图控制器之间的切换 304
16.4.1 push 304
16.4.2 pop 306
16.5 navigationItem属性详解 312
16.5.1 提示区域 312
16.5.2 标题区域 312
16.5.3 设置右侧按钮 315
16.5.4 设置左侧按钮 319
16.5.5 设置一组按钮 321
16.5.6 设置返回按钮 322
16.6 UIToolBar的使用详解 325
16.6.1 系统自带的工具栏 325
16.6.2 使用工具栏 326
16.6.3 自定义工具栏 328
第17章 界面之间的传值 330
17.1 正向传值 330
17.2 反向传值 331
17.2.1 协议代理 332
17.2.2 闭包 334
第18章 UITabBarController标签栏控制器 337
18.1 标签栏控制器概述 337
18.2 标签栏控制器的创建 337
18.3 标签的创建 340
18.3.1 通过tabBarItem属性设置 340
18.3.2 自定义UITabBarItem 342
18.4 当创建的标签超过5个时的状态 344
18.5 标签栏控制器代理 346
18.5.1 捕捉编辑完成状态 346
18.5.2 捕捉标签选择的动作 348
18.6 标签栏控制器的其他属性设置 349
18.6.1 标签的徽标 349
18.6.2 手动选择标签 349
18.7 NSUserDefault本地化存储 350
第19章 UIScrollView滚动视图 352
19.1 UIScrollView的创建 352
19.2 滚动条的设置 353
19.2.1 滚动条的样式 354
19.2.2 滚动条的隐藏 354
19.3 滚动边界反弹效果 355
19.4 偏移量 356
19.5 滚动视图的代理方法 356
19.5.1 缩放 357
19.5.2 监控滚动视图的滚动 358
19.6 分屏滚动 359
19.7 引导页的实现 360
19.8 UIPageControl控件 363
19.8.1 创建方式 363
19.8.2 随着滚动视图的滚动改变当前页 363
19.8.3 设置显示效果 364
第20章 UITableView表视图 367
20.1 UITableView概述 367
20.1.1 UITableView的创建及显示 367
20.1.2 UITableView的头视图 368
20.1.3 UITableView的脚视图 369
20.1.4 UITableView的数据源 370
20.1.5 UITableView的分隔线 371
20.1.6 UITableViewCell单元格 373
20.1.7 UITableView的代理 377
20.1.8 UITableView的复用机制 379
20.2 NSIndexPath 380
20.3 多分区tableView 380
20.3.1 多分区tableView的创建 380
20.3.2 分区头标题 382
20.3.3 分区脚标题 383
20.3.4 分区头视图及头视图的高度 384
20.3.5 分区脚视图及脚视图的高度 385
20.4 UITableView行编辑 386
20.4.1 设置cell为编辑状态 386
20.4.2 修改cell的编辑状态 388
20.4.3 cell的响应编辑及左滑编辑功能 389
20.4.4 cell的删除 391
20.4.5 cell的增加 391
20.5 UITableView索引 392
20.6 UITableView搜索 395
20.6.1 搜索框 395
20.6.2 搜索显示控制器 395
20.7 UITableViewCell的定制 402
20.7.1 纯代码实现 404
20.7.2 xib实现定制 407
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Swift开发实战权威指南
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Swift语言快速入门
第1章　马斯堡游记	1
1.1  买票	1
1.2  导游	13
1.3  飞碟	22
1.4  斗法	23
1.5  题诗	27
第2章　Swift初见	28
2.1  Hello World	28
2.2  简单值	29
2.3  控制流	30
2.4  函数和闭包	33
2.5  对象和类	35
2.6  枚举和结构	39
2.7  协议和扩展	42
2.8  泛型	43
第3章　语法入门	45
3.1　基础	45
3.1.1　常量和变量	45
3.1.2　注释	48
3.1.3　分号	49
3.1.4　整数	49
3.1.5　浮点数	50
3.1.6　类型安全和类型推断	50
3.1.7　数值字面量	51
3.1.8　数值类型转换	52
3.1.9　类型别名	53
3.1.10 布尔值	54
3.1.11 元组	55
3.1.12 可选	56
3.1.13 断言	60
3.2　基本运算符	61
3.2.1　术语	61
3.2.2　赋值运算符	62
3.2.3　算术运算符	62
3.2.4　求余运算符	63
3.2.5　浮点数求余运算符	64
3.2.6　自增和自减运算符	64
3.2.7　单目负号运算符	65
3.2.8　单目正号运算符	65
3.2.9　复合赋值运算符	65
3.2.10 比较运算符	66
3.2.11 三目条件运算符	66
3.2.12  nil合并运算符	67
3.2.13 区间运算符	68
3.2.14 逻辑运算符	69
3.3  字符串与字符	71
3.3.1　字符串字面量	72
3.3.2　初始化空字符串	73
3.3.3　字符串可变性	73
3.3.4　字符串是值类型	73
3.3.5　使用字符	74
3.3.6　连接字符串和字符	74
3.3.7　字符串插值	75
3.3.8  Unicode	75
3.3.9　计算字符数量	77
3.3.10 比较字符串	78
3.4　集合类型	79
3.4.1　集合的可变性	80
3.4.2　数组	80
3.4.3　字典	84
3.5  流程流	89
3.5.1　for循环	89
3.5.2　while循环	93
3.5.3　条件语句	96
3.5.4　控制转移语句	103
3.6　函数	108
3.6.1　函数的定义与调用	108
3.6.2　函数参数和返回值	110
3.6.3　函数参数名称	113
3.6.4　函数类型	119
3.6.5　嵌套函数	122
3.7  闭包	122
3.7.1　闭包表达式	123
3.7.2　尾随闭包	126
3.7.3　值捕获	128
3.7.4　闭包是引用类型	130
3.8　枚举	130
3.8.1  枚举语法	131
3.8.2　使用switch 语句匹配枚举值	132
3.8.3　关联值	133
3.8.4　原始值	135
3.9　类和结构体	136
3.9.1　类和结构体的对比	137
3.9.2　结构体和枚举是值类型	139
3.9.3　类是引用类型	141
3.9.4　类和结构体的选择	142
3.9.5  字符串、数组及字典的赋值和复制行为	143
第4章　初级语法	144
4.1  属性	144
4.1.1　存储属性	144
4.1.2　计算属性	147
4.1.3　属性监察器	149
4.1.4　全局变量和本地变量	151
4.1.5　类型属性	151
4.2　方法	155
4.2.1　实例方法	155
4.2.2　类型方法	160
4.3　下标	163
4.3.1　下标语法	163
4.3.2　下标用法	164
4.3.3　下标选项	164
4.4　继承	166
4.4.1　定义一个基类	167
4.4.2　子类生成	168
4.4.3　重写	169
4.4.4　防止重写	173
4.5　构造	173
4.5.1　存储属性的初始赋值	173
4.5.2　自定义构造	174
4.5.3　默认构造器	178
4.5.4　值类型的构造器代理	179
4.5.5　类的继承和构造	180
4.5.6　通过闭包或函数来设置属性的默认值	190
4.6　析构	192
4.6.1　析构原理	192
4.6.2　析构实例	192
4.7　自动引用计数	194
4.7.1　ARC的工作原理	195
4.7.2　ARC实践	195
4.7.3　类实例间的强引用环	196
4.7.4　解决类实例间的强引用环	199
4.7.5　闭包产生的强引用环	205
4.7.6　解决闭包产生的强引用环	207
4.8　可选链	210
4.8.1　可选链替代可选强制解析	210
4.8.2　为可选链定义模型类	211
4.8.3　通过可选链获取属性	213
4.8.4　通过可选链调用方法	214
4.8.5　使用可选链获取下标	214
4.8.6　连接多层链	215
4.8.7　可选链中返回可选类型的方法	216
4.9　类型转换	217
4.9.1　定义一个类层次作为例子	217
4.9.2　类型检查	218
4.9.3　向下转换	219
4.9.4　Any和AnyObject的转换	220
4.10 类型嵌套	222
4.10.1 类型嵌套实践	223
4.10.2 引用嵌套类型	224
第5章　高级语法	225
5.1　扩展	225
5.1.1　扩展语法	225
5.1.2　计算属性	226
5.1.3　构造器	227
5.1.4　方法	228
5.1.5　可变实例方法	229
5.1.6　下标	229
5.1.7　嵌套类型	230
5.2　协议	231
5.2.1　协议语法	231
5.2.2　属性要求	232
5.2.3　方法要求	233
5.2.4　可变方法要求	234
5.2.5　协议作为类型	235
5.2.6　集合中的协议类型	240
5.2.7　协议的继承	241
5.2.8　协议合成	242
5.2.9　检查协议的一致性	243
5.2.10 可选协议要求	245
5.3  泛型	247
5.3.1　泛型解决的问题	247
5.3.2　泛型函数	248
5.3.3　类型参数	249
5.3.4　命名类型参数	249
5.3.5　泛型类型	250
5.3.6  扩展泛型类型	252
5.3.7　类型约束	253
5.3.8　关联类型	256
5.3.9  where子句	258
5.4  访问控制	260
5.4.1  模块和源文件	261
5.4.2  访问级别	261
5.4.3  访问控制语法	262
5.4.4  自定义类型	263
5.4.5  子类	265
5.4.6  常量、变量、属性和下标	266
5.4.7  协议	268
5.4.8  扩展	269
5.5  高级运算符	269
5.5.1  位运算符	270
5.5.2  溢出运算符	274
5.5.3  优先级和结合性	276
5.5.4  运算符函数	277
5.5.5  前置和后置运算符	278
5.5.6  组合赋值运算符	279
5.5.7  比较运算符	280
5.5.8  自定义运算符	280
5.5.9  自定义中置运算符的优先级和结合性	281
第6章　词法参考	282
6.1  关于词法参考	282
6.2  词法结构	283
6.2.1  空白与注释	283
6.2.2  标识符	283
6.2.3  关键字和标点符号	285
6.2.4  字面量	286
6.2.5  运算符	290
6.3  类型	292
6.3.1  类型标注	292
6.3.2  类型标识符	293
6.3.3  元组类型	293
6.3.4  函数类型	294
6.3.5  数组类型	295
6.3.6  字典类型	296
6.3.7  可选类型	296
6.3.8  隐式解析可选类型	297
6.3.9  合成协议	298
6.3.10 元类型	298
6.3.11 类型继承语法	299
6.3.12 类型推断	299
6.4  表达式	300
6.4.1  前缀表达式	300
6.4.2  二元表达式	301
6.4.3  赋值表达式	303
6.4.4  三元条件运算符	303
6.4.5  类型转换运算符	304
6.4.6  主表达式	305
6.4.7  后缀表达式	310
6.5  语句	314
6.5.1  循环语句	315
6.5.2  分支语句	317
6.5.3  带标签的语句	320
6.5.4  控制传递语句	321
6.6  声明	322
6.6.1  全局代码	323
6.6.2  代码块	323
6.6.3  导入声明	324
6.6.4  常量声明	324
6.6.5  变量声明	325
6.6.6  类和静态变量属性	327
6.6.7  类型别名	328
6.6.8  函数声明	328
6.6.9  枚举声明	332
6.6.10 结构体声明	334
6.6.11 类声明	335
6.6.12 协议声明	336
6.6.13 协议构造器声明	338
6.6.14 协议下标声明	338
6.6.15 协议相关类型声明	338
6.6.16 构造器声明	339
6.6.17 析构器声明	340
6.6.18 扩展声明	340
6.6.19 下标声明	341
6.6.20 运算符声明	342
6.6.21 特征声明修饰符	343
6.6.22 访问控制级别	344
6.7  特征	345
6.7.1  声明特征	345
6.7.2  Interface Builder使用的声明特征	348
6.7.3  类型特征	348
6.8  模式	349
6.8.1  通配符模式	349
6.8.2  标识符模式	350
6.8.3  值绑定模式	350
6.8.4  元组模式	350
6.8.5  枚举用例模式	351
6.8.6  类型转换模式	352
6.8.7  表达式模式	352
6.9  泛型形参和实参	353
6.9.1  泛型形参子句	353
6.9.2  where 子句	354
6.9.3  泛型参数子句	355
6.10 语法总结	356
6.10.1  语句（Statements）	356
6.10.2  泛型形参与实参（Generic Parameter and Arguments）	358
6.10.3  声明（Declarations）	358
6.10.4  模式（Patterns）	364
6.10.5  特征（Attributes）	365
6.10.6  表达式（Expression）	365
6.10.7  词法结构（Lexical Structure）	368
6.10.8  类型（Types）	372
第7章　使用Cocoa框架与ObjC	374
7.1  基本设置	374
7.1.1  建立你的Swift环境	374
7.1.2  理解Swift的导入过程	375
7.2  与ObjC API交互	376
7.2.1  初始化	376
7.2.2  访问属性	377
7.2.3  使用方法	377
7.2.4  id兼容性	378
7.2.5  使用nil	379
7.2.6  扩展	380
7.2.7  闭包	381
7.2.8  对象比较	381
7.2.9  Swift类型兼容性	381
7.2.10  Objective-C选择器	382
7.3  以ObjC的行为写Swift	383
7.3.1  继承Objective-C的类	383
7.3.2  适配协议	384
7.3.3  编写构造器和析构器	384
7.3.4  集成Interface Builder	384
7.3.5  指明属性特性	386
7.3.6  实现核心数据管理对象的子类	386
7.4  使用Cocoa数据类型	386
7.4.1  字符串	387
7.4.2  数字	387
7.4.3  集合类	388
7.4.4  Foundation数据类型	390
7.4.5  Foundation函数	390
7.4.6  Core Foundation	390
7.5  采用Cocoa设计模式	392
7.5.1  委托	392
7.5.2  错误报告	392
7.5.3  键值观察	393
7.5.4  Target-Action	394
7.5.5  内省	394
7.6  与C API交互	395
7.6.1  基本类型	395
7.6.2  枚举	396
7.6.3  指针	397
7.6.4  全局常量	401
7.6.5  预处理指令	401
7.7  与ObjC混编	402
7.7.1  混编概述	402
7.7.2  在同一个app target中进行代码导入	403
7.7.3  在同一个framework target中导入代码	404
7.7.4  导入外部框架	405
7.7.5  在Objective-C中使用Swift代码	406
7.7.6  product模式命名	407
7.7.7  故障排除和提醒	407
7.8  迁移ObjC代码至Swift	408
7.8.1  为你的Objective-C代码迁移做好准备	408
7.8.2  迁移过程	408
7.8.3  技巧和提示	409
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Swift语言快速入门
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Swifter（第二版） : 100 个 Swift 2 开发必备 Tip
1Swift新元素1
Tip1柯里化（Currying）2
Tip2将protocol的方法声明为mutating4
Tip3Sequence5
Tip4多元组（Tuple）7
Tip5@autoclosure和？？9
Tip6OptionalChaining12
Tip7操作符14
Tip8func的参数修饰17
Tip9字面量转换19
Tip10下标23
Tip11方法嵌套25
Tip12命名空间28
Tip13Any和AnyObject30
Tip14typealias和泛型接口33
Tip15可变参数函数35
Tip16初始化方法顺序37
Tip17Designated，Convenience和Required39
Tip18初始化返回nil42
Tip19protocol组合45
Tip20static和class49
Tip21多类型和容器52
Tip22default参数55
Tip23正则表达式57
Tip24模式匹配60
Tip25…和..＜63
Tip26AnyClass、元类型和.self65
Tip27接口和类方法中的Self68
Tip28动态类型和多方法71
Tip29属性观察73
Tip30final76
Tip31lazy修饰符和lazy方法79
Tip32Reflection和Mirror82
Tip33隐式解包Optional85
Tip34多重Optional87
Tip35OptionaIMap89
Tip36ProtocolExtension91
Tip37where和模式匹配96
Tip38indirect和嵌套enum99
2从Objective—C／C到Swift101
Tip39Selector102
Tip40实例方法的动态调用104
Tip41单例106
Tip42条件编译109
Tip43编译标记111
Tip44@UIApplicationMain113
Tip45@objc和dynamic115
Tip46可选接口和接口扩展118
Tip47内存管理，weak和unowned120
Tip48@autoreleasepool125
Tip49值类型和引用类型128
Tip50String还是NSString130
Tip51UnsafePointer132
Tip52C指针内存管理135
Tip53COpaquePointer和Cconvention137
Tip54GCD和延时调用139
Tip55获取对象类型143
Tip56自省145
Tip57KVO147
Tip58局部scope150
Tip59判等153
Tip60哈希156
Tip61类簇158
Tip62Swizzle160
Tip63调用C动态库163
Tip64输出格式化165
Tip65Options167
Tip66数组enumerate169
Tip67类型编码@encode171
Tip68C代码调用和@asmname173
Tip69sizeof和sizeofValueP75
Tip70delegate177
Tip71Associated Object179
Tip72Lock181
Tip73Toll—Free Bridging和Unmanaged183
3Swift与开发环境及一些实践187
Tip74Swift命令行工具188
Tip75随机数生成190
Tip76print和debugPrint192
Tip77错误和异常处理194
Tip78断言200
Tip79fatalError202
Tip80代码组织和Framework205
Tip81Playground延时运行209
Tip82Playground可视化211
Tip83Playground与项目协作213
Tip84数学和数字215
Tip85JSON217
Tip86NSNull219
Tip87文档注释221
Tip88性能考虑223
Tip89Log输出225
Tip90溢出227
Tip91宏定义define229
Tip92属性访问控制231
Tip93Swift中的测试233
Tip94Core Data235
Tip95闭包歧义237
Tip96泛型扩展241
Tip97兼容性243
Tip98列举enum类型245
Tip99尾递归248
Tip100安全的资源组织方式250
后记及致谢252
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Swifter（第二版） : 100 个 Swift 2 开发必备 Tip
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>编写高质量代码
前　言
第1章　让自己习惯Objective-C 1
建议1：视Objective-C为一门动态语言 1
建议2：在头文件中尽量减少其他头文件的引用 6
建议3：尽量使用const、enum来替换预处理#define 10
建议4：优先使用对象字面量语法而非等效方法 13
建议5：处理隐藏的返回类型，优先选择实例类型而非id 17
建议6：尽量使用模块方式与多类建立复合关系 19
建议7：明解Objective-C++中的有所为而有所不为 23
第2章　数据类型、集合和控制语句 28
建议8：C语言与Objective-C语言的关系是充分而非必要条件 28
建议9：高度警惕空指针和野指针的袭击 31
建议10：在64位环境下尽可能利用标记指针 35
建议11：谨记兼容32位和64位环境下代码编写事项 38
建议12：清楚常量字符串和一般字符串的区别 43
建议13：在访问集合时要优先考虑使用快速枚举 44
建议14：有序对象适宜存于数组，而无序对象适宜存于集 48
建议15：存在公共键时，字典是在对象之间传递信息的绝佳方式 53
建议16：明智而审慎地使用BOOL类型 55
第3章　内存管理 57
建议17：理解内存和Objective-C内存管理规则 57
建议18：内存管理讲究“好借好还，再借不难” 61
建议19：区别开alloc、init、retain、release和dealloc之间的差异 63
建议20：优先选用存取方法来简化内存管理 66
建议21：对象销毁或者被移除一定考虑所有权的释放 70
建议22：明智而审慎地使用dealloc 73
第4章　设计与声明 75
建议23：编写代码要遵守Cocoa API约定 75
建议24：洞悉实例变量 77
建议25：透彻了解属性的里里外外 81
建议26：存取方法是良好的类接口必要组成部分 85
建议27：明晓类公共领域的方法都是虚方法 87
建议28：初始化还是解码取决于是否支持归档和解档 92
建议29：利用键–值机制访问类的私有成员变量和方法 93
建议30：浅复制适宜指针而深复制适宜数据 101
建议31：明智而审慎地使用NSCopying 103
建议32：使用协议来实现匿名对象的提供 106
第5章　实现 108
建议33：使用类别把类的实现拆分成不同的文件 108
建议34：明智地使用内省可使程序更加高效和健壮 109
建议35：尽量使用不可变性对象而非可变性对象 113
建议36：利用复合能巧妙地把两个类或两个对象融合 115
建议37：使用类扩展来隐藏实现的细节 120
建议38：使用内联块应注意避免循环引用 122
建议39：利用类别把方法添加到现有的类 124
建议40：通过强弱引用来管理对象的所有权 127
第6章　继承与面向对象设计 133
建议41：明确isa在继承上的作用 133
建议42：利用类别和协议实现类似多重继承的机制 136
建议43：类别和类扩展是类继承的延续性拓展 139
建议44：继承基类的实现行为勿忘调用super 141
第7章　设计模式与Cocoa编程 145
建议45：设计模式是特定环境下的特定问题的解决方案 145
建议46：MVC模式是一种复合或聚合模式 147
建议47：对象建模在数据库中也广泛使用 155
建议48：类簇可简化框架的公开架构而又不减少功能的丰富性 160
建议49：委托用于界面控制，而数据源用于数据控制 165
第8章　定制init...和dealloc 171
建议50：了解对象的alloc和init... 171
建议51：直接访问实例变量的init...方法 174
建议52：初始化方法必须以“init”字母开头 176
建议53：从init...方法得到的对象可能是不想要的 177
建议54：实现init...方法的唯一性或者指定性并非“不可能” 179
建议55：init...方法有“轻重级别”之分 181
第9章　Objective-C与Swift的兼容性 184
建议56：Objective-C和Swift的互用性基于映射机制 184
建议57：利用Swift的特性可增强已有的Objective-C代码 191
建议58：洞悉Objective-C 和Swift类型转换的处理机制 194
建议59：C语言的数据类型在Swift中“有所变有所不变” 199
建议60：Swift和Objective-C兼容性是基于混搭机制 204
建议61：利用迁移机制实现Objective-C代码的重生 209
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>编写高质量代码
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Xcode江湖录
写在前面
初入江湖—基础篇
第1章　小试牛刀—Xcode初体验2
1.1下载Xcode2
1.2　苹果开发者计划3
1.3　欢迎界面4
1.4　认识Playground5
1.5　创建项目7
1.6　Hello world9
1.7　生成并运行应用10
1.8　移除项目10
第2章　纵观全局—布局探索12
2.1　工作区12
2.2　工具栏13
2.3　导航器区域14
2.3.1　项目导航器14
2.3.2　符号导航器15
2.3.3　搜索导航器16
2.3.4　事件导航器17
2.3.5　测试导航器17
2.3.6调试导航器17
2.3.7　断点导航器18
2.3.8　日志导航器18
2.4　跳转栏19
2.5　编辑器区域22
2.5.1　标准编辑器22
2.5.2　辅助编辑器22
2.5.3　版本编辑器24
2.6　调试区域25
2.7　工具区域26
2.8　标签页27
第3章　藏经阁—项目管理28
3.1　文件管理29
3.1.1　创建文件29
3.1.2　分组34
3.1.3　删除及重命名文件34
3.2　对象管理35
3.2.1　添加对象35
3.2.2　对象设置36
3.2.3　对象联系44
3.2.4　删除对象44
3.3　资源管理45
3.3.1创建 Asset Catalog45
3.3.2　添加图标46
3.3.3　添加加载界面48
3.3.4　管理图片集48
3.3.5　移除图片集49
外功修炼—设计篇
第4章　风水宝地—界面生成器52
4.1　简介52
4.2　界面生成器53
4.2.1　画布54
4.2.2　对象窗口55
4.2.3　检查器56
4.3　Xib文件57
4.4　故事板58
4.4.1　添加新的场景58
4.4.2　设置初始场景59
4.4.3　添加页面间的转场59
4.5　配置界面61
4.5.1　添加对象和媒体61
4.5.2　调整对象61
4.5.3　配置属性63
第5章　万物莫不有规矩—自动布局65
5.1　没有规矩，不成方圆65
5.2　约束种类66
5.3　添加约束68
5.4　查看约束69
5.5　所谓“空白”71
5.6　修正约束错误71
第6章　万法归一—屏幕分类73
6.1　为了适配，也是蛮拼的74
6.2　激活这个技能75
6.3　变更视图76
6.3.1　改变约束的值77
6.3.2　启用、禁用元素78
6.3.3　变更字体78
6.4　资源目录79
内功修炼—开发篇
第7章　渐入佳境—高级编辑82
7.1　在设计和开发之间搭桥82
7.1.1　连接代码和界面83
7.1.2　输出口85
7.1.3　动作89
7.2　语法感知90
7.2.1　语法高亮90
7.2.2　聚焦和折叠代码91
7.2.3　自动填充92
7.3　查看数据定义92
7.4　全局修改数据93
7.5　重构和迁移94
7.5.1　重构操作94
7.5.2　迁移操作99
7.6　建立工作区105
7.7　搜索106
7.7.1　单文件搜索106
7.7.2　搜索导航器107
7.7.3　快速打开111
7.8　国际化与本地化113
7.8.1　工作机制113
7.8.2　国际化支持113
7.8.3　字符串本地化115
7.8.4　图像本地化118
第8章　气沉丹田—持久化存储编辑器119
8.1　属性列表119
8.1.1　属性列表简介120
8.1.2　项目属性列表120
8.1.3　创建属性列表121
8.2　Core Data模型122
8.2.1　相关术语介绍123
8.2.2　数据建模编辑器124
第9章　前人栽树—共享代码135
9.1　共享代码机制135
9.1.1　库135
9.1.2　框架136
9.1.3　包137
9.2　使用现有框架137
9.2.1　使用系统框架138
9.2.2　使用第三方框架139
9.2.3　使用CocoaPods管理框架140
9.3　创建框架144
9.3.1　创建静态库145
9.3.2　创建动态库147
9.3.3　创建框架149
第10章　武功是怎样练成的—编译系统150
10.1　编译方案150
10.1.1　管理方案151
10.1.2　编辑方案154
10.2　运行目标165
第11章　谨防走火入魔—调试168
11.1　语法错误168
11.2　编译时错误169
11.3　静态分析170
11.3.1　使用静态分析器170
11.3.2　分析所解决的问题172
11.4　断点调试173
11.4.1　添加断点174
11.4.2　断点导航器175
11.4.3　断点设置176
11.4.4　断点类型180
11.5　调试区域182
11.5.1　调试工具栏183
11.5.2　变量视图184
11.5.3　控制台185
11.5.4　查看线程185
11.5.5　查看内存信息185
11.5.6　模拟位置186
11.5.7　变量设置187
11.6　调试导航器189
11.6.1　调试仪器190
11.6.2　线程和队列198
11.7　快速查看198
11.7.1　查看变量199
11.7.2　为自定义类启用快速查看199
11.7.3　自定义快速查看支持的返回类型200
11.8　LLDB调试205
11.8.1　打印对象和值206
11.8.2　执行表达式208
11.8.3　控制程序执行208
11.8.4　获取帮助209
11.9　视图调试209
11.9.1　启动视图调试209
11.9.2　视图调试功能210
11.10　Instruments214
11.10.1　性能214
11.10.2　打开Instruments215
11.10.3　Instruments模板216
11.10.4　运行Instruments217
11.10.5　Instruments实例220
第12章　功力精进的途径—单元测试222
12.1　测试基础概念223
12.2　测试导航栏224
12.2.1　添加测试对象和测试类224
12.2.2　运行测试225
12.3　功能测试226
12.3.1　基础测试227
12.3.2　布尔测试227
12.3.3　相等测试227
12.3.4　空值测试228
12.3.5　无条件失败228
12.3.6　测试实例228
12.4　性能测试229
12.5　测试调试231
12.5.1　测试调试之前231
12.5.2　测试调试工具232
第13章　返老还童—版本管理234
13.1　工程快照234
13.1.1　创建快照235
13.1.2　管理快照235
13.1.3　从快照中恢复235
13.2　使用Git237
13.2.1　Git简介238
13.2.2　连接代码托管库238
13.2.3　提交更改239
13.2.4　查看更改239
13.2.5　撤销更改240
13.2.6　分支240
13.2.7　下载别人的版本241
第14章　实战是提升实力的唯一真理242
14.1　基础知识242
14.2　配置Xcode244
14.3　启用真机调试245
14.4　把应用提交到App Store247
随身锦囊—附录
附录A　Xcode小技巧252
附录B　不二法门—Xcode工具箱280
附录C　武术套路—模板292
附录D　你不会孤独求败—求助渠道345
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Xcode江湖录
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Swift基础教程 第2版
第一部分　基础知识
第1章　Swift简介　　2
1.1　革命性的改良　　2
1.2　准备工作　　3
1.2.1　专业工具　　3
1.2.2　与Swift交互　　3
1.3　准备出发　　4
1.4　开始探索Swift　　6
1.4.1　帮助和退出　　6
1.4.2　Hello World　　7
1.5　声明的威力　　7
1.6　常量　　9
1.7　类型　　10
1.7.1　检查上限和下限　　11
1.7.2　类型转换　　11
1.7.3　显式地声明类型　　13
1.8　字符串　　13
1.8.1　字符串拼接　　14
1.8.2　Character类型　　14
1.9　数学运算符　　15
1.9.1　表达式　　15
1.9.2　混用不同的数值类型　　16
1.9.3　数值表示　　16
1.10　布尔类型　　17
1.11　轻松显示　　18
1.12　使用类型别名　　19
1.13　使用元组将数据编组　　20
1.14　可选类型　　21
1.15　小结　　22
第2章　使用集合　　23
2.1　糖果罐　　23
2.1.1　数组中所有元素的类型都必须相同　　26
2.1.2　增长数组　　26
2.1.3　替换和删除值　　27
2.1.4　将值插入到指定位置　　28
2.1.5　合并数组　　29
2.2　字典　　30
2.2.1　查找条目　　31
2.2.2　添加条目　　32
2.2.3　更新条目　　33
2.2.4　删除条目　　33
2.3　数组的数组　　34
2.4　创建空数组和空字典　　36
2.4.1　空数组　　36
2.4.2　空字典　　37
2.5　迭代集合　　37
2.5.1　迭代数组　　38
2.5.2　迭代字典　　39
2.6　小结　　40
第3章　流程控制　　41
3.1　for 循环　　41
3.1.1　计数　　41
3.1.2　包含还是不包含结束数字　　42
3.1.3　老式for循环　　43
3.1.4　简写　　44
3.2　游乐场　　45
3.3　决策　　48
3.3.1　if语句　　49
3.3.2　检查多个条件　　52
3.3.3　switch语句　　53
3.3.4　while循环　　57
3.3.5　检查代码　　59
3.3.6　提早结束循环　　62
3.4　小结　　62
第4章　编写函数和闭包　　63
4.1　函数　　63
4.1.1　使用Swift编写函数　　64
4.1.2　执行函数　　65
4.1.3　参数并非只能是数字　　66
4.1.4　可变参数　　67
4.1.5　函数是一级对象　　70
4.1.6　从函数返回函数　　71
4.1.7　嵌套函数　　74
4.1.8　默认参数　　76
4.1.9　函数名包含哪些内容　　77
4.1.10　清晰程度　　78
4.1.11　用不用参数名　　79
4.1.12　变量参数　　79
4.1.13　inout参数　　81
4.2　闭包　　82
4.3　小结　　84
4.4　类　　84
第5章　使用类和结构组织代码　　85
5.1　对象无处不在　　85
5.2　Swift对象是使用类定义的　　86
5.2.1　定义类　　86
5.2.2　创建对象　　88
5.2.3　开门和关门　　88
5.2.4　锁门和开锁　　89
5.2.5　查看属性　　92
5.2.6　门应是各式各样的　　92
5.2.7　修改颜色　　94
5.3　继承　　95
5.3.1　创建基类　　96
5.3.2　创建子类　　98
5.3.3　实例化子类　　100
5.3.4　便利初始化方法　　104
5.4　枚举　　106
5.5　结构　　109
5.6　值类型和引用类型　　110
5.7　小结　　112
第6章　使用协议和扩展进行规范化　　113
6.1　遵循协议　　113
6.1.1　类还是协议　　113
6.1.2　协议并非只能定义方法　　115
6.1.3　遵循多个协议　　117
6.1.4　协议也可继承　　118
6.1.5　委托　　119
6.2　扩展　　122
6.2.1　扩展基本类型　　123
6.2.2　在扩展中使用闭包　　127
6.3　小结　　129
第二部分　使用Swift开发软件
第7章　使用Xcode　　132
7.1　Xcode简史　　132
7.2　创建第一个Swift项目　　133
7.3　Xcode界面　　135
7.3.1　与Xcode窗口交互　　136
7.3.2　运行应用程序　　138
7.4　开发应用程序　　139
7.4.1　腾出空间　　139
7.4.2　创建界面　　141
7.4.3　美化　　143
7.4.4　编写代码　　145
7.4.5　建立连接　　149
7.5　小结　　151
第8章　改进应用程序　　152
8.1　细节很重要　　152
8.1.1　显示金额　　152
8.1.2　再谈可选类型　　154
8.1.3　可选类型拆封　　155
8.1.4　美化　　155
8.1.5　另一种格式设置方法　　156
8.2　计算复利　　160
8.2.1　连接起来　　162
8.2.2　测试　　165
8.3　调试　　165
8.3.1　bug在哪里　　165
8.3.2　断点　　166
8.3.3　复杂的复利计算　　169
8.4　测试的价值　　170
8.4.1　单元测试　　170
8.4.2　编写测试　　171
8.4.3　如果测试未通过　　173
8.4.4　始终运行的测试　　174
8.5　小结　　175
第9章　Swift移动开发　　176
9.1　移动设备和台式机　　176
9.2　挑战记忆力　　176
9.2.1　考虑玩法　　177
9.2.2　设计UI　　177
9.3　创建项目　　178
9.4　创建用户界面　　180
9.4.1　创建按钮　　181
9.4.2　在模拟器中运行　　183
9.4.3　设置约束　　184
9.5　MVC　　187
9.6　编写游戏代码　　187
9.6.1　类　　190
9.6.2　枚举　　191
9.6.3　视图对象　　191
9.6.4　模型对象　　191
9.6.5　可重写的方法　　192
9.6.6　游戏的方法　　193
9.6.7　处理输赢　　196
9.7　回到故事板　　198
9.8　开玩　　200
第10章　成为专家　　201
10.1　Swift内存管理　　201
10.1.1　值和引用　　201
10.1.2　引用计数　　202
10.1.3　引用循环　　203
10.1.4　演示引用循环　　 203
10.1.5　编写测试代码　　 204
10.1.6　断开引用循环　　 206
10.1.7　闭包中的引用循环　　207
10.1.8　感恩　　209
10.2　逻辑运算符　　209
10.2.1　逻辑非　　209
10.2.2　逻辑与　　210
10.2.3　逻辑或　　210
10.3　泛型　　211
10.4　运算符重载　　212
10.5　相等和相同　　214
10.6　错误处理　　216
10.6.1　引发错误　　216
10.6.2　捕获错误　　217
10.7　Swift脚本编程　　219
10.7.1　创建脚本　　219
10.7.2　设置权限　　221
10.7.3　执行脚本　　221
10.7.4　工作原理　　222
10.8　获取帮助　　223
10.9　小结　　225
第11章　高山滑雪　　226
11.1　游戏开发技术　　226
11.1.1　GameKit　　226
11.1.2　SpriteKit　　227
11.2　始于构思　　227
11.2.1　高山滑雪　　227
11.2.2　社交功能　　227
11.3　出发　　227
11.3.1　怎么玩　　228
11.3.2　玩一玩　　228
11.4　研究这个项目的组织结构　　231
11.4.1　类　　231
11.4.2　素材　　232
11.4.3　场景　　232
11.5　探索源代码　　232
11.5.1　场景Home　　232
11.5.2　场景Game　　235
11.5.3　游戏视图控制器　　239
11.5.4　全面了解　　241
11.6　独闯江湖　　241
11.6.1　研究苹果公司提供的框架　　241
11.6.2　加入苹果开发者计划　　242
11.6.3　成为社区的一分子　　242
11.6.4　活到老学到老　　242
11.6.5　一路平安　　242
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Swift基础教程 第2版
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Swift开发指南（修订版）
第一部分　基础篇
第1章　准备开始　　2
1.1　本书学习路线图　　2
1.2　本书中的约定　　3
1.2.1　示例代码约定　　4
1.2.2　图示的约定　　4
1.3　Xcode开发工具　　6
1.3.1　Xcode安装和卸载　　7
1.3.2　Xcode界面　　10
1.4　如何使用API帮助　　11
1.5　本章小结　　14
1.6　同步练习　　14
第2章　第一个Swift程序　　15
2.1　使用Playground编写　　15
2.1.1　编程利器Playground　　15
2.1.2　编写HelloWorld程序　　16
2.2　代码解释　　20
2.3　本章小结　　20
2.4　同步练习　　20
第3章　Swift基本语法　　21
3.1　标识符和关键字　　21
3.1.1　标识符　　21
3.1.2　关键字　　22
3.2　常量和变量　　22
3.2.1　常量　　22
3.2.2　变量　　23
3.2.3　命名规范　　23
3.3　注释　　24
3.4　表达式　　25
3.5　本章小结　　26
3.6　同步练习　　26
第4章　基本运算符　　28
4.1　算术运算符　　28
4.1.1　一元运算符　　28
4.1.2　二元运算符　　29
4.1.3　算术赋值运算符　　30
4.2　关系运算符　　31
4.3　逻辑运算符　　33
4.4　位运算符　　34
4.5　其他运算符　　36
4.6　本章小结　　37
4.7　同步练习　　37
第5章　基本数据类型　　39
5.1　Swift数据类型　　39
5.2　整型　　39
5.3　浮点型　　41
5.4　数字表示方式　　41
5.4.1　进制数字表示　　41
5.4.2　指数表示　　42
5.4.3　其他表示　　42
5.5　数字类型之间的转换　　42
5.5.1　整型之间的转换　　42
5.5.2　整型与浮点型之间的转换　　43
5.6　布尔型　　44
5.7　元组类型　　44
5.8　本章小结　　45
5.9　同步练习　　45
第6章　字符和字符串　　47
6.1　字符　　47
6.1.1　Unicode编码　　47
6.1.2　转义符　　48
6.2　创建字符串　　49
6.3　字符串可变性　　49
6.4　字符串比较　　50
6.4.1　大小和相等比较　　50
6.4.2　前缀和后缀比较　　51
6.5　本章小结　　52
6.6　同步练习　　52
第7章　控制语句　　53
7.1　分支语句　　53
7.1.1　条件语句if　　53
7.1.2　多分支语句switch　　55
7.1.3　在switch中使用范围匹配　　57
7.1.4　在switch中比较元组类型　　58
7.2　循环语句　　60
7.2.1　while语句　　60
7.2.2　do while语句　　62
7.2.3　for语句　　62
7.2.4　for in语句　　63
7.3　跳转语句　　64
7.3.1　break语句　　65
7.3.2　continue语句　　66
7.3.3　fallthrough语句　　68
7.4　本章小结　　70
7.5　同步练习　　70
第8章　集合　　74
8.1　数组集合　　74
8.1.1　数组声明与初始化　　75
8.1.2　数组的修改　　76
8.1.3　数组遍历　　77
8.2　字典集合　　77
8.2.1　字典声明与初始化　　78
8.2.2　字典的修改　　79
8.2.3　字典遍历　　80
8.3　集合的复制　　81
8.3.1　字典复制　　81
8.3.2　数组复制　　83
8.4　本章小结　　85
8.5　同步练习　　85
第9章　函数　　87
9.1　使用函数　　87
9.2　传递参数　　88
9.2.1　使用外部参数名　　88
9.2.2　参数默认值　　89
9.2.3　可变参数　　89
9.2.4　参数的传递引用　　90
9.3　函数返回值　　91
9.3.1　无返回值函数　　91
9.3.2　多返回值函数　　92
9.4　函数类型　　92
9.4.1　作为函数返回类型使用　　93
9.4.2　作为参数类型使用　　94
9.5　函数重载　　95
9.6　嵌套函数　　96
9.7　泛型和泛型函数　　97
9.7.1　一个问题的思考　　98
9.7.2　泛型函数　　98
9.8　本章小结　　99
9.9　同步练习　　99
第10章　闭包　　103
10.1　回顾嵌套函数　　103
10.2　闭包的概念　　104
10.3　使用闭包表达式　　105
10.3.1　类型推断简化　　105
10.3.2　隐藏return关键字　　106
10.3.3　缩写参数名称　　106
10.3.4　使用闭包返回值　　107
10.4　使用尾随闭包　　107
10.5　捕获上下文中的变量和常量　　108
10.6　本章小结　　109
10.7　同步练习　　109
第二部分　面向对象篇
第11章　Swift语言中的面向对象特性　　112
11.1　面向对象概念和基本特征　　112
11.2　Swift中的面向对象类型　　112
11.3　枚举　　113
11.3.1　成员值　　113
11.3.2　原始值　　115
11.3.3　相关值　　116
11.4　结构体与类　　118
11.4.1　类和结构体定义　　118
11.4.2　再谈值类型和引用类型　　119
11.4.3　引用类型的比较　　121
11.5　类型嵌套　　122
11.6　可选类型与可选链　　123
11.6.1　可选类型　　123
11.6.2　可选链　　124
11.7　访问限定　　127
11.7.1　访问范围　　127
11.7.2　访问级别　　129
11.7.3　使用访问级别最佳实践　　130
11.8　本章小结　　133
11.9　同步练习　　133
第12章　属性与下标　　137
12.1　存储属性　　137
12.1.1　存储属性概念　　137
12.1.2　延迟存储属性　　138
12.1.3　属性观察者　　139
12.2　计算属性　　139
12.2.1　计算属性概念　　139
12.2.2　只读计算属性　　141
12.2.3　结构体和枚举中的计算属性　　142
12.3　属性观察者　　142
12.4　静态属性　　144
12.4.1　结构体静态属性　　146
12.4.2　枚举静态属性　　147
12.4.3　类静态属性　　148
12.5　使用下标　　148
12.5.1　下标概念　　149
12.5.2　示例：二维数组　　149
12.6　本章小结　　151
12.7　同步练习　　151
第13章　方法　　153
13.1　实例方法　　153
13.1.1　使用规范的命名　　154
13.1.2　结构体和枚举方法变异　　157
13.2　静态方法　　158
13.2.1　结构体中静态方法　　158
13.2.2　枚举中静态方法　　159
13.2.3　类中静态方法　　159
13.3　本章小结　　160
13.4　同步练习　　160
第14章　构造与析构　　161
14.1　构造器　　161
14.1.1　默认构造器　　161
14.1.2　构造器与存储属性初始化　　162
14.1.3　使用外部参数名　　163
14.2　构造器重载　　165
14.2.1　构造器重载概念　　165
14.2.2　值类型构造器代理　　166
14.2.3　引用类型构造器横向代理　　167
14.3　析构器　　168
14.4　本章小结　　173
14.5　同步练习　　173
第15章　继承　　175
15.1　从一个示例开始　　175
15.2　构造器继承　　176
15.2.1　构造器调用规则　　176
15.2.2　构造过程安全检查　　178
15.2.3　构造器继承　　180
15.3　重写　　182
15.3.1　属性重写　　182
15.3.2　方法重写　　185
15.3.3　下标重写　　186
15.3.4　使用final关键字　　187
15.4　类型检查与转换　　189
15.4.1　使用is操作符　　190
15.4.2　使用as操作符　　191
15.4.3　使用Any和AnyObject类型　　192
15.5　本章小结　　193
15.6　同步练习　　193
第16章　扩展和协议　　195
16.1　扩展　　195
16.1.1　声明扩展　　195
16.1.2　扩展计算属性　　196
16.1.3　扩展方法　　197
16.1.4　扩展构造器　　198
16.1.5　扩展下标　　200
16.2　协议　　201
16.2.1　声明和遵守协议　　202
16.2.2　协议方法　　202
16.2.3　协议属性　　205
16.2.4　把协议作为类型使用　　207
16.2.5　协议的继承　　209
16.2.6　协议的合成　　210
16.3　扩展中声明协议　　212
16.4　本章小结　　212
16.5　同步练习　　213
第17章　Swift内存管理　　215
17.1　Swift内存管理概述　　215
17.1.1　引用计数　　215
17.1.2　示例：Swift自动引用计数　　216
17.2　强引用循环　　218
17.3　打破强引用循环　　221
17.3.1　弱引用　　221
17.3.2　无主引用　　223
17.4　闭包中的强引用循环　　225
17.4.1　一个闭包中的强引用循环示例　　226
17.4.2　解决闭包强引用循环　　226
17.5　本章小结　　228
17.6　同步练习　　228
第三部分　过渡篇
第18章　从Objective-C到Swift　　232
18.1　选择语言　　232
18.2　Swift调用Objective-C　　232
18.2.1　创建Swift的iOS工程　　233
18.2.2　在Swift工程中添加Objective-C类　　234
18.2.3　调用代码　　235
18.3　Objective-C调用Swift　　236
18.3.1　创建Objective-C的iOS工程　　236
18.3.2　在Objective-C工程中添加Swift类　　238
18.3.3　调用代码　　240
18.4　本章小结　　241
18.5　同步练习　　241
第19章　使用Foundation框架　　243
19.1　数字类NSNumber　　243
19.1.1　获得NSNumber实例　　243
19.1.2　NSNumber对象的比较　　246
19.2　字符串类　　247
19.2.1　NSString类　　247
19.2.2　NSMutableString类　　250
19.2.3　NSString与String之间的关系　　251
19.3　数组类　　252
19.3.1　NSArray类　　252
19.3.2　NSMutableArray类　　253
19.3.3　NSArray与Array之间的关系　　254
19.4　字典类　　255
19.4.1　NSDictionary类　　255
19.4.2　NSMutableDictionary类　　256
19.4.3　NSDictionary与Dictionary之间的关系　　257
19.5　本章小结　　258
19.6　同步练习　　258
第四部分　实战篇
第20章　iOS开发基础　　260
20.1　iOS介绍　　260
20.2　第一个iOS应用HelloWorld　　261
20.2.1　创建工程　　261
20.2.2　Xcode中的iOS工程模板　　268
20.2.3　程序剖析　　269
20.3　iOS API简介　　271
20.4　本章小结　　272
20.5　同步练习　　272
第21章　项目实战——基于分层架构的多版本iPhone计算器　　273
21.1　应用分析与设计　　273
21.1.1　应用概述　　273
21.1.2　需求分析　　273
21.1.3　原型设计　　274
21.1.4　分层架构设计　　275
21.1.5　应用设计　　276
21.2　创建工程　　277
21.3　业务逻辑层开发　　279
21.3.1　创建CalcLogic.swift文件　　279
21.3.2　枚举类型Operator　　280
21.3.3　CalcLogic类中属性　　281
21.3.4　CalcLogic类中构造器和析构器　　281
21.3.5　CalcLogic类中更新主标签方法　　282
21.3.6　CalcLogic类中判断是否包含小数点方法　　283
21.3.7　CalcLogic类中计算方法　　283
21.3.8　CalcLogic类中清除方法　　284
21.4　表示层开发　　285
21.4.1　添加图片资源　　285
21.4.2　改变设计界面大小　　287
21.4.3　添加计算器背景　　287
21.4.4　在设计界面中添加主标签　　289
21.4.5　在设计界面中添加按钮　　291
21.4.6　控件的输出口和动作　　295
21.4.7　视图控制器　　299
21.5　Objective-C版本的计算器　　300
21.5.1　Xcode工程文件结构比较　　300
21.5.2　表示层比较　　301
21.5.3　业务逻辑层比较　　302
21.6　Swift调用Objective-C实现的计算器　　305
21.6.1　在Swift工程中添加Objective-C类　　306
21.6.2　调用代码　　308
21.7　Objective-C调用Swift实现的计算器　　309
21.7.1　在Objective-C工程中添加Swift类　　309
21.7.2　调用代码　　310
21.8　本章小结　　313
21.9　同步练习　　313

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Swift开发指南（修订版）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入浅出Objective-C
第一篇  苹果开发初窥门径
第1章  邀请函——来自Objective-C
1.1  概述
1.2  苹果开发简介
1.3  Objective-C的个人简历
1.4  本书的扼要提纲
1.5  成为伟大的苹果开发者
第2章  搭建开发环境——让我们穿戴整齐去参加热闹的派对吧
2.1  IDE的准备
2.1.1  Xcode不同版本的下载
2.1.2  Xcode不同版本的共存
2.2  IDE的熟悉
2.2.1  Xcode的代码撰写界面
2.2.2  Xcode的界面文件
2.2.3  工程管理的注意事项
2.2.4  Xcode的使用注意事项
2.3  本章小结
第二篇  扎实功底略有所成
第3章  创建应用程序——自家的孩子自家疼
3.1  iOS应用程序的创建
3.2  iOS工程结构分析
3.3  MacOSX应用程序的创建和程序启动
3.4  本章小结
第4章  开始开发——和Objective-C交个朋友
4.1  语法——打铁势必从姿势学起
4.2  消息
4.3  类的创建
4.4  继承和重写（override）
4.5  分类（Category）
4.6  协议（Protocols）和代理（Delegation）
4.7  本章小结
第5章  打印日志——维持秩序的摄像头
5.1  简单使用示例
5.2  进阶使用示例
5.2.1  使NSLog的打印结果更详细
5.2.2  NSLog原理详解
5.3  日志描述
5.4  本章小结
第6章  基本数据类型，表达式和语句——锅碗瓢盆一个都不少
6.1  概述
6.2  基本数据类型
6.3  命名规则
6.3.1  命名错误
6.3.2  命名规范
6.3.3  命名空间
6.4  表达式
6.5  语句
6.5.1  if/else
6.5.2  switch
6.5.3  for循环
6.5.4  for循环的in语法
6.5.5  while循环
6.5.6  跳出当前回合循环
6.6  本章小结
第7章  内存管理——打理矫情程序的超级拖把
7.1  内存管理机制——出色程序的重要资本
7.1.1  内存的创建和释放
7.1.2  自动释放池和使用
7.1.3  实例方法和类方法
7.1.4  保留（retain）对象
7.1.5  复制（copy）对象
7.1.6  浅拷贝和深拷贝
7.1.7  自动保留（retain）
7.1.8  其他创建和释放对象的方式
7.2  单例模式
7.3  取值方法（getter）和赋值方法（setter）
7.3.1  取值方法和赋值方法
7.3.2  属性关键字
7.3.3  synthesize和dynamic的区别
7.4  自动拖把ARC
7.4.1  ARC的使用方法
7.4.2  ARC新增关键字
7.4.3  ARC机制的使用规则
7.4.4  ARC机制的注意事项
7.4.5  迁移程序到ARC的做法
7.5  本章小结
第8章  Foundation Kit——巧妇可为有米之炊
8.1  字符串（NSString）
8.1.1  简单的字符串使用
8.1.2  可变字符串使用
8.1.3  字符串的路径相关使用
8.2  数组（NSArray）和集合（NSSet）
8.2.1  数组和集合的简单使用
8.2.2  可变数组和可变集合的使用
8.3  字典（NSDictionary）
8.3.1  简单的字典使用方法
8.3.2  可变字典 107
8.4  数据（NSData）
8.5  数字（NSNumber）
8.5.1  NSNumber的使用
8.5.2  简单的数学计算
8.5.3  数字格式
8.6  配置文件
8.7  本章小结
第9章  KVC机制——让生活过得更好
9.1  KVC的使用和举例
9.1.1  KVC机制
9.1.2  KVC的取值
9.1.3  KVC的存值
9.1.4  KVC协议的实现
9.1.5  一对多关系适用的运算符
9.2  KVO的使用和举例
9.3  绑定的使用和示例
9.3.1  绑定的简单使用
9.3.2  绑定的高级使用
9.4  本章小结
第10章  错误处理——知错能改善莫大焉
10.1  概述
10.2  Objective-C的错误处理机制
10.3  友善的抓虫好友——NSError
10.4  铁血无情的判官——NSException
10.5  黑白两道通吃——Signal
10.6  本章小节
第11章  block——大块头有大智慧
11.1  概述
11.2  block的基本使用示例
11.2.1  简单的block
11.2.2  将block作为参数的API
11.2.3  block的声明
11.2.4  block的typedef
11.2.5  block的值返回
11.3  block的外部变量使用
11.3.1  block体的外部变量使用的奇怪之处
11.3.2  克服外部变量的魔咒
11.4  block的内存管理
11.5  本章小结
第三篇  拓展能力融会贯通
第12章  视图——展现外形美的窗口
12.1  MVC模式及示例
12.2  UIViewController（视图控制器）
12.2.1  UIViewController和它的主视图
12.2.2  主视图的管理函数
12.2.3  UIViewController对于旋转的支持
12.2.4  多层UIViewController
12.3  导航视图控制器（UINavigationController）
12.3.1  栈
12.3.2  自身的层次
12.3.3  导航控制器的使用示例：导航精通大师（一）
12.3.4  导航控制器的使用示例——导航栏左中右位置的配置
12.3.5  导航控制器的使用示例——导航栏右位置的多按钮
12.3.6  导航控制器的使用示例——工具栏内容修改和全屏显示
12.3.7  导航控制器的使用示例——动画过渡和超大视图
12.4  标签页视图控制器
12.4.1  标签页控制器的创建
12.4.2  标签页控制器的More标签项目
12.4.3  标签页上的标记
12.4.4  标签页栏上的警告框
12.4.5  隐藏标签栏
12.5  弹出视图控制器（PopoverViewController）
12.5.1  使用示例
12.5.2  自定义式样
12.6  分隔视图控制器（UISplitViewController）
12.7  本章小结
第13章  控件——沟通心灵美的桥梁
13.1  控件使用的注意事项
13.2  标签（UILabel）
13.3  文本视图（UITextView）
13.3.1  不可编辑的文本视图控件
13.3.2  自定义选中文本后的弹出选项
13.3.3  可编辑的文本视图控件
13.3.4  收起键盘
13.4  文本域（UITextField）
13.4.1  特有的特性
13.4.2  可拉伸图片
13.4.3  避免被键盘挡住
13.5  进度视图（UIProgressView）
13.6  滑动条（UISlider）
13.7  分隔栏控件（UISegmentControl）
13.8  按钮（UIButton）
13.8.1  按钮的基本使用
13.8.2  应对怪咔需求
13.9  本章小结
第14章  滚动视图——表达内涵美的手段
14.1  滚动视图（UIScrollView）
14.2  表视图（UITableView）
14.2.1  表视图的工作流程
14.2.2  表视图的示例（1）：皇家马德里队球员名单
14.2.3  表视图的示例（2）：名单的分段显示
14.2.4  表视图的示例（3）：名单的索引显示
14.2.5  表视图的示例（4）：系统样式的表视图单元
14.2.6  表视图的示例（5）：自定义表视图的单元
14.2.7  表视图的示例（6）：组式样的表视图
14.2.8  表视图的示例（7）：表视图的编辑功能（删除）
14.2.9  表视图的示例（8）：表视图的编辑功能（新增）
14.2.10  表视图的示例（9）：表视图的编辑功能（排序）
14.2.11  表视图的示例（10）：表视图的编辑功能（多选）
14.3  取值控件（UIPicker）
14.3.1  取值控件示例（1）：球员角色菜单
14.3.2  取值控件示例（2）：自定义UIPicker的选项外观
14.4  本章小结
第15章  警告框——强势地闹别扭
15.1  概述
15.2  iOS警告框的示例和使用
15.2.1  普通的警告框使用
15.2.2  无按钮警告框
15.2.3  当场取得返回值的警告框
15.2.4  显示文本输入框的警告框
15.2.5  显示加密文本输入框的警告框
15.2.6  显示登录框的警告框
15.2.7  多参数格式的警告框
15.2.8  客官请点菜，Sheet是您的菜单
15.3  MacOSX警告框的示例和使用
15.3.1  警告框的快捷实现
15.3.2  警告框的创建
15.3.3  警告框的sheet方式显示
15.3.4  警告框的扩展信息
15.3.5  警告框的可选栏控件
15.3.6  Carbon下的警告框显示
15.3.7  温文尔雅地提醒
15.4  本章小结
第16章  视图展示——画上美丽妆容尽情舞动吧
16.1  横竖屏和自动布局机制
16.1.1  简单的硬代码横竖屏示例
16.1.2  autoresize横竖屏示例
16.1.3  autolayout横竖屏示例（1）—何谓自动布局
16.1.4  autolayout横竖屏示例（2）—自动布局机制的实现
16.1.5  autolayout横竖屏示例（3）—冲突处理和设备适配
16.1.6  autolayout的代码使用
16.2  Quartz——我们手上的神笔
16.2.1  绘画示例：随意画
16.2.2  图形示例：各种图形画法
16.2.3  渐变示例
16.3  用动画来提升用户体验
16.3.1  UIView的基本动画效果
16.3.2  UIView的转场动画效果
16.3.3  CAAnimation的转场动画效果
16.3.4  CAAnimation的私有动画效果
16.3.5  CAAnimation的视图自身2D动画——弹簧跳
16.3.6  CAAnimation的视图自身2D动画——撒腿就跑
16.3.7  CAAnimation的视图自身2D动画——闪烁
16.3.8  CAAnimation的视图自身3D动画——翻开书籍封面
16.4  本章小结
第四篇  修得绝技炉火纯青
第17章  网络请求——互联网客户端的武功宝典
17.1  概述
17.2  NSURL网络编程
17.2.1  同步下载
17.2.2  异步下载
17.2.3  堵塞下载
17.3  HTTP请求
17.3.1  PUT网络请求
17.3.2  POST简单网络请求
17.3.3  POST进阶网络请求
17.3.4  SOAP网络请求
17.4  XML解析
17.5  JSON解析
17.6  CFNetwork网络编程
17.6.1  和纯C的socket网络开发区别
17.6.2  简单的HTTP请求
17.6.3  异步HTTP请求
17.6.4  验证HTTP请求
17.7  本章小结
第18章  数据库——化繁为简，唯快不破
18.1  概述
18.2  CoreData的模型建立
18.3  CoreData的钢铁三兄弟
18.4  CoreData数据模型的属性类型支持
18.5  CoreData的数据导入
18.6  CoreData持久性数据库的内容分析
18.7  CoreData的数据读取
18.8  CoreData和表视图的完美配合
18.9  表视图集成CoreData的新增和删除功能
18.10  表视图集成CoreData的更新功能
18.11  本章小结
第19章  多线程编程——凌波微步，可战可退
19.1  性能为王——线程概述
19.2  基本线程使用——NSThread
19.3  基本线程使用——pthread
19.4 基本线程使用——GCD
19.4.1  默认队列的使用
19.4.2  组队列的使用
19.4.3  GCD和函数指针配合使用
19.5  线程安全
19.5.1  NSLock的使用
19.5.2  synchronized的使用
19.5.3  condition的使用
19.6  进阶并行开发——NSOperation
19.6.1  苹果提供给开发者执行并发任务方法
19.6.2  NSOperation的并行开发的两种做法
19.6.3  NSOperation的练手之作（一）：RSS的读取
19.6.4  NSOperation的练手之作（二）：RSS数据解析
19.6.5  NSOperation的练手之作（三）：和界面的协调
19.6.6  NSOperation的练手之作（四）：批量小图的下载
19.6.7  NSOperation的练手之作（五）：预览图的并行下载
19.7  消息循环（NSRunLoop）
19.8  本章小结
第20章  钥匙串——防火、防盗、防黑客
20.1  概述
20.2  何时使用钥匙串
20.3  iOS中的钥匙串使用
20.3.1  新增和删除钥匙串项目
20.3.2  查找和更新钥匙串项目
20.3.3  钥匙串的Group概念
20.4  MacOSX中的钥匙串使用
20.4.1  新增和删除钥匙串项目
20.4.2  查找和更新钥匙串项目
20.5  加密的简单示例
20.6  本章小结
第21章  通知——弹指神通，指哪动哪
21.1  通知和代理的区别
21.2  本地通知的使用
21.2.1  通知接收环境的建立
21.2.2  通知的简单发送
21.2.3  通知的异步发送
21.3  跨进程通知发送
21.4  本章小结
第22章  手势——触摸改变了世界
22.1  事件响应链
22.1.1  事件的生命周期
22.1.2  事件响应链
22.2  触摸事件的接收示例
22.3  手势响应示例——多种手势识别器
22.3.1  程序框架的搭建
22.3.2  Tap点击手势的识别
22.3.3  依样画葫芦地完成多种手势识别器
22.4  手势之间的优先级
22.5  本章小结
第23章  推送——应用也有生命
23.1  推送简介
23.2  推送证书的准备步骤
23.3  推送的内容
23.4  远程推送的使用方法
23.5  本地推送的使用方法
23.6  推送的注意事项和常见错误解决方案
23.7  本章小结
第24章  程序间通信——应用组实现的最佳方案
24.1  打破沙盒的限制
24.2  自定义URL Scheme
24.2.1  调用系统应用程序
24.2.2  自定义URL Scheme
24.2.3  OpenIn：让其他应用程序打开文件
24.2.4  自定义程序候选面板的按钮
24.3  本章小结
第五篇  内外兼修大师风范
第25章  iOS 5和iOS 6开发相关的新特性——最先进的用户体验
25.1  概述
25.2  iOS 5新特性
25.2.1  书报亭（Newsstand）
25.2.2  iCloud
25.2.3  消息中心
25.2.4  输入法
25.3  iOS 6新特性
25.3.1  Passbook的概念
25.3.2  Passbook的开发思路
25.4  本章小结
第26章  开发调试技巧——最强力的集成环境
26.1  自定义代码段
26.2  静态分析
26.3  内存泄漏检测
26.4  单元测试：提交测试前，把关质量的最后一道锁
26.4.1  逻辑代码的单元测试示例
26.4.2  UI上的单元测试示例
26.5  本章小结
第27章  视网膜屏——最爽快的视觉享受
27.1  概述
27.2  视网膜屏的兼容解决方案
27.2.1  程序中的资源
27.2.2  启动图片
27.2.3  图标
27.3  本章小结
第28章  本地化——最贴心的国际化
28.1  本地化的解决方案
28.1.1  使用Xcode的本地化功能的开发举例
28.1.2  资源文件本地化的开发举例
28.1.3  本地化映射表的开发举例
28.1.4  本地化的原理和相关知识
28.1.5  本地化格式的开发举例
28.1.6  本地化应用程序名字
28.2  本章小结
第29章  程序通用设定——最适合的功能划分
29.1  通用设定的使用范围
29.1.1  两种解决方案的使用场景各有特点
29.1.2  评价者的意图
29.2  通用设定的示例
29.2.1  系统设置的本地化开发举例
29.2.2  系统设置的配置举例：文本输入框
29.2.3  系统设置的配置举例：滑块
29.2.4  系统设置的配置举例：左标题右内容
29.2.5  系统设置的配置举例：多选项
29.2.6  系统设置的配置举例：子设置视图
29.3  通用设定的同步
29.4  本章小结
第30章  辅助功能——最周全的系统设想
30.1  辅助功能简介
30.2  辅助功能示例——Interface Builder中的VoiceOver
30.3  辅助功能示例——代码中的VoiceOver
30.3.1  使用xib设置辅助功能示例
30.3.2  重写辅助功能的示例
30.4  本章小结
第六篇  独步天下不可不知
第31章  苹果终极开发技巧——不传秘籍重现天日
31.1  创建iPhone和iPad的通用应用程序
31.2  真机调试
31.3  DMG制作
31.3.1  简单DMG文件制作
31.3.2  高级DMG文件制作
31.4  区分操作系统版本环境
31.5  本章小结
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入浅出Objective-C
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iPhone玩味攝影
Chapter1 口袋裡的照相機 你也是iPhone攝影師
Chapter2 好好拍的攝影軟體
Chapter3 iPhone四季時光機
Chapter4 iPhone遇見調皮的光影
Chapter5 iPhone留戀的城市意象
Chapter6 帶著iPhone探險旅行
Chapter7 生活瞬間─iPhone隨手拍
Chapter8 人像與寵物趣味攝影
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iPhone玩味攝影
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>20天搞定iPhone软件开发
目　录
第1讲　配置开发环境.................................................1
1.1　Mac应用程序开发环境 .................................................1
1.2　iPhone应用程序开发环境 ..................................................................2
1.3　查看安装目录内容 ........................................................4
1.3.1　启动Xcode................................................................... 5
1.3.2　启动Interface Builder .................................................. 6
1.4　Mac中的基本操作 .........................................................6
1.4.1　弹出菜单的显示方法 .................................................. 6
1.4.2　工具条的定制 .............................................................. 8
第2讲　应用程序与框架 ...............................................................10
2.1　关于应用程序 ..............................................................10
2.1.1　应用程序的种类 .........................................................11
2.1.2　关于iPhone应用程序 ................................................. 12
2.2　框架 .............................................................................13
2.2.1　简单的【Hello World】程序 ..................................... 13
2.2.2　框架的出现 ............................................................... 13
2.2.3　编程语言与框架的关系 ............................................. 14
2.3　Mac OS X以及iPhone SDK中的框架 ..............................................14
2.3.1　框架的安装目录 ........................................................ 14
2.3.2　Cocoa与Carbon ......................................................... 15
2.3.3　应用程序中使用的框架 ............................................. 16
2.4　Cocoa与Carbon的发展轨迹 .............................................................18
第3讲　Cocoa与Objective-C ......................................................20
3.1　框架的使用 .................................................................20
3.1.1　关于API .................................................................... 20
3.1.2　API与编程语言的关系 .............................................. 21
3.2　Objective-C的发展史 ...................................................22
3.3　用于其他语言中的Cocoa API ..........................................................23
3.3.1　通过桥调用Cocoa...................................................... 23
3.3.2　是否应提倡在Objective-C以外的语言中调用Cocoa API的开发方式 .................. 24
3.4　解答与Objective-C相关的几个疑问 ................................................25
第4讲　开发工具 .......................................................27
4.1　Xcode ...........................................................................27
4.1.1　 综合开发环境Xcode的功能 ..................................... 27
4.1.2　工程窗口 ................................................................... 28
4.1.3　文本编辑器的功能 .................................................... 32
4.1.4　开发者手册 ............................................................... 35
4.2　Interface Builder ...........................................................36
4.3　Dashcode ......................................................................37
4.4　iPhone模拟器 ...............................................................38
4.5　其他工具 .....................................................................38
4.5.1　FileMerge .................................................................. 38
4.5.2　Icon Composer .......................................................... 39
4.5.3　Property List Editor ................................................... 39
4.6　Mac或iPhone应用程序开发的流程 .................................................39
4.6.1　准备应用程序用的材料 ............................................. 39
4.6.2　建立步骤 ................................................................... 41
4.6.3　gcc ........................................................ 42
第5讲　Cocoa环境下的面向对象编程 .....................................43
5.1　面向对象的基本概念术语 ...............................................................43
5.1.1　类 ......................................................... 44
5.1.2　实例 ..................................................... 44
5.1.3　实例变量 ................................................................... 44
5.1.4　方法 ..................................................... 45
5.1.5　继承 ..................................................... 45
5.1.6　相互关系 ................................................................... 46
5.1.7　对象 ..................................................... 46
5.2　在Cocoa实例中理解基本术语 .........................................................47
5.2.1　通过按钮配置理解基本术语 ..................................... 47
5.2.2　文本输入框的继承关系 ............................................. 48
第6讲　Hello World应用程序 ......................................................49
6.1　Hello World程序 ...........................................................49
6.2　启动Xcode创建工程 ....................................................49
6.3　编辑代码 .....................................................................51
6.4　启动Interface Builder设计用户界面 ................................................52
6.4.1　xib文件................................................. 52
6.4.2　Interface Builder窗口 ................................................ 53
6.4.3　设计Hello World的用户界面 ..................................... 55
6.5　连接插座与动作 ..........................................................55
6.6　完成Hello World App Delegate的代码编写 ....................................................58
6.7　建立与运行 .................................................................59
6.8　开发步骤再回顾 ........................................................61
第7讲　MVC构架 ......................................................62
7.1　Hello World应用程序开发流程中包含的信息 ..........................................................62
7.2　什么是MVC构架 .........................................................62
7.2.1　视图层 .................................................. 63
7.2.2　模型层 .................................................. 63
7.2.3　控制层 .................................................. 64
7.3　使用MVC构架的实例 .................................................64
7.3.1　iTunes的模型 ............................................................ 64
7.3.2　iTunes的视图 ............................................................ 65
7.3.3　iTunes的控制 ............................................................ 66
7.4　使用MVC构架的Cocoa应用程序开发特点 ..................................................66
7.4.1　视图组件由Cocoa提供 .............................................. 66
7.4.2　保持视图与模型间的相互独立 ................................. 67
7.4.3　应用程序特有的功能由控制提供 ................................................... 67
7.4.4　只用创建模型以及控制的类 ..................................... 67
第8讲　插座与动作 ...................................................68
8.1　视图与控制间信息交换 ...................................................................68
8.2　插座与动作 .................................................................69
8.2.1　什么是插座 ............................................................... 69
8.2.2　什么是动作 ............................................................... 69
8.3　插座与动作的连接 .....................................................70
8.3.1　插座与动作的追加 .................................................... 70
8.3.2　插座的连接 ............................................................... 71
8.3.3　动作的连接 ............................................................... 72
8.3.4　连接确认 ...................................................................73
第9讲　Objective-C的语法 ..........................................................75
9.1　Objective-C的编程概论 ....................................................................75
9.1.1　Objective-C与C语言 ................................................. 75
9.1.2　Objective-C程序 ........................................................ 75
9.1.3　类的声明与实体 ........................................................ 76
9.1.4　创建Objective-C的测试工程 ..................................... 76
9.2　类的声明 .....................................................................81
9.2.1　导入声明文件 ............................................................ 81
9.2.2　类的声明 ................................................................... 82
9.2.3　实例变量的声明 ........................................................ 82
9.2.4　实例方法的声明 ........................................................ 83
9.3　编写类的实体 ..............................................................87
9.3.1　编写类的实体 ............................................................ 87
9.3.2　编写方法代码 ............................................................ 87
9.3.3　关于方法的声明 ........................................................ 88
9.4　对象专用变量类型 ......................................................88
9.4.1　实例对象专用的变量类型 ......................................... 88
9.4.2　id类型 .................................................. 89
9.4.3　nil类型 ................................................. 89
9.4.4　在条件表达式中使用对象变量 ................................. 89
9.5　方法调用 .....................................................................90
9.5.1　实例方法的调用 ........................................................ 90
9.5.2　类方法的调用 ............................................................ 91
9.5.3　对象为nil的情况 ....................................................... 92
9.6　命名规则 .....................................................................92
9.6.1　类的命名规则 ............................................................ 92
9.6.2　实例变量的命名规则 ................................................ 93
9.6.3　方法的命名规则 ........................................................ 93
9.7　重新解析Cocoa的Hello World程序..................................................94
9.7.1　HelloWorldAppDelegate.h ......................................... 94
9.7.2　HelloWorldAppDelegate.m ........................................ 95
第10讲　内存管理 .....................................................98
10.1　内存分配与释放 ........................................................98
10.2　与内存相关的问题 ....................................................99
10.2.1　内存释放的时机 .................................................... 99
10.2.2　内存泄漏 ............................................................. 100
10.3　使用垃圾收集进行内存管理 .......................................................100
10.3.1　垃圾回收 ............................................................. 100
10.3.2　Objective-C与垃圾回收 ...................................... 102
10.3.3　垃圾回收功能有效化 .......................................... 103
10.3.4　垃圾回收编程的规则 .......................................... 103
10.4　由参照统计实现的内存管理 .......................................................104
10.4.1　参照统计的基本概念 .......................................... 104
10.4.2　retain、release方法 ............................................. 104
10.4.3　对象保持到释放的流程 ...................................... 105
10.5　类的实例化 ..............................................................106
10.5.1　类的实例化与初期化 .......................................... 107
10.5.2　自动释放 ............................................................. 108
10.5.3　创建实例的方法 .................................................. 108
10.5.4　实例的释放 ......................................................... 109
10.6　内存管理的规则 ......................................................110
10.6.1　临时对象 ..............................................................110
10.6.2　内存管理经验总结 ...............................................111
第11讲　字符串 ........................................................113
11.1　字符串专用类 ...........................................................113
11.2　NSString与NSMutableString ........................................................113
11.3　字符编码 ..................................................................114
11.3.1　什么是字符编码 ...................................................114
11.3.2　NSString的字符代码为Unicode ................................................115
11.3.3　NSStringEncoding ................................................115
11.4　字符串的生成 ...........................................................116
11.4.1　使用【@“”】的形式创建新字符串 ......................................116
11.4.2　创建中文字符串 ...................................................116
11.4.3　使用格式创建字符串 ...........................................118
11.5　NSRange ..................................................................119
11.6　字符串处理 ...............................................................120
11.6.1　计算字符串的长度 .............................................. 120
11.6.2　字符串连接、插入、删除 ................................... 121
11.6.3　字符串的比较 ..................................................... 124
11.6.4　字符串的检索 ..................................................... 125
11.6.5　抽取部分字符串 .................................................. 126
11.7　读写文本文件 ...........................................................127
11.7.1　读取文本文件 ..................................................... 127
11.7.2　文本文件输出 ..................................................... 128
第12讲　集合 ............................................................130
12.1　数组 .........................................................................130
12.1.1　NSArray与 NSMutableArray .................................................... 130
12.1.2　数组的创建 ......................................................... 131
12.1.3　数组的长度 ......................................................... 132
12.1.4　通过索引取得对象 .............................................. 132
12.1.5　使用NSEnumerator取得对象 ................................................... 133
12.1.6　使用高速枚举取得对象 ...................................... 136
12.1.7　对象的追加与删除 .............................................. 136
12.2　字典 .........................................................................138
12.2.1　什么是字典类型 .................................................. 138
12.2.2　NSDictionary与 NSMutableDictionary ..................................... 139
12.2.3　NSDictionary的创建 ........................................... 139
12.2.4　键与值的取得 ..................................................... 141
12.2.5　键与值的追加 ..................................................... 142
12.3　包装类 .....................................................................143
12.3.1　什么是包装类 ..................................................... 143
12.3.2　NSNumber .......................................................... 144
12.4　对象的等价与同值 ..................................................146
12.4.1　拥有相同值的对象 .............................................. 146
12.4.2　等价与同值的判定 .............................................. 146
12.4.3　在集合类中的应用 .............................................. 147
12.5　集合类与参照统计 ..................................................148
12.5.1　NSArray与参照统计 ........................................... 148
12.5.2　NSDictionary与参照统计 .................................... 149
第13讲　XML应用 ...................................................150
13.1　XML概要 .................................................................150
13.1.1 什么是XML ........................................................ 150
13.1.2　一种常用的XML实例——RSS ................................................ 150
13.2　XML的解析 ..............................................................151
13.2.1　解析及解析器 ..................................................... 151
13.2.2　XML解析器的种类 ............................................. 152
13.2.3　树结构................................................................. 153
13.3　Cocoa的XML解析器 ....................................................................154
13.3.1　NSXMLDocument、NSXMLNode、NSXMLElement .................................. 154
13.3.2　XML文档的解析器 ............................................. 155
13.3.3　Xpath .................................................................. 157
13.3.4　节点信息 ............................................................. 158
13.3.5　节点的父子关系 .................................................. 159
13.3.6　属性值的取得 ..................................................... 161
13.4　iPhone 应用软件中的XML解析实例 ..........................................162
13.4.1　第三方API及实例概要 ........................................ 162
13.4.2　创建并完成RSS文件解析程序 ................................................. 163
第14讲　UIKit框架简介及iPhone应用程序基础类 ..................................168
14.1　UIKit概要 ................................................................168
14.1.1　UIKit类列表 ........................................................ 168
14.1.2　iPhone Hello World程序 ...................................... 171
14.1.3　不使用Interface Builder的Hello World程序 ............................. 175
14.1.4　在Xcode 4中创建Hello World程序 ........................................... 180
14.2　画面构成基础——UIView ...........................................................184
14.2.1　UIView概要 ........................................................ 184
14.2.2　UIView嵌套 ........................................................ 187
14.3　UIViewController与画面控制 ......................................................195
14.3.1　使用UIViewController实现简单的画面切换 ............................ 195
14.3.2　使用UITabBarController实现并列画面跳转 ............................ 200
14.3.3　使用UINavigationController实现多层画面跳转 ...................... 204
14.3.4　跳转到任意画面 .................................................. 210
14.3.5　模态（modal）画面的显示方法 .............................................. 212
第15讲　iPhone应用程序中的事件响应 ................................215
15.1　事件响应 .................................................................215
15.1.1　按钮的触摸 ......................................................... 215
15.1.2　响应方法的定义 .................................................. 217
15.1.3　滑块的滑动 ......................................................... 218
15.2　UIResponder .............................................................221
15.2.1　画面触摸的检测 .................................................. 221
15.2.2　标签触摸的检测 .................................................. 222
15.2.3　响应链................................................................. 224
15.2.4　触摸系列最终处理及取消 ................................... 228
15.3　二次触碰 .................................................................229
15.4　手势 .........................................................................232
15.4.1　拖动检测 ............................................................. 232
15.4.2　滑动检测 ............................................................. 236
15.4.3　快速滑动检测 ..................................................... 240
15.5　多点触摸 .................................................................243
15.5.1　检测多点触摸 .................................................... 243
15.5.2　检测双指滑动 ..................................................... 244
15.5.3　检测扩大／缩小 .................................................. 246
15.6　振动 .........................................................................249
15.6.1　检测振动 .............................................................249
第16讲　常用UI控件 ...................................................................252
16.1　标签（UILabel） .....................................................252
16.1.1　文本与对齐方式的设置 ...................................... 252
16.1.2　标签颜色与文本颜色的修改 .................................................... 253
16.1.3　改变字体 ............................................................. 254
16.1.4　字体尺寸的自动调整 .......................................... 254
16.1.5　多行字符串 ......................................................... 255
16.1.6　换行与省略 ......................................................... 256
16.1.7　高亮时的文本颜色 .............................................. 256
16.1.8　阴影显示 ............................................................. 256
16.1.9　绘制方法的定制 .................................................. 258
16.2　按钮（UIButton） ...................................................259
16.2.1　按钮的配置与触摸检测 ...................................... 259
16.2.2　按钮的种类 ......................................................... 259
16.2.3　按钮的状态及标题变化 ...................................... 260
16.2.4　按钮触摸时的阴影反转 ...................................... 261
16.2.5　按钮触摸时的背景闪烁 ...................................... 261
16.2.6　在按钮中追加图片 .............................................. 262
16.2.7　设置按钮背景图片 .............................................. 263
16.2.8　调整按钮的边间距 .............................................. 264
16.2.9　设置标题的换行／省略 ...................................... 265
16.3　文本输入框（UITextField） ........................................................266
16.3.1　文本输入框的显示 .............................................. 266
16.3.2　键盘的显示／隐藏 .............................................. 266
16.3.3　键盘的各种设置 .................................................. 267
16.3.4　文本输入框的边框线 .......................................... 267
16.3.5　文本的横向与纵向的调整 ................................... 267
16.3.6　文本输入框的字体及颜色 ................................... 268
16.3.7　提示信息的设置 .................................................. 269
16.3.8　清空按钮的显示 .................................................. 269
16.3.9　背景图片的设置 .................................................. 270
16.3.10 UIView的追加 .................................................... 270
16.3.11 文本输入框的状态监视 ...................................... 272
16.4　开关（UISwitch） ...................................................272
16.5　选择控件（UISegmentedController） .........................................274
16.5.1　选择控件的使用方法 .......................................... 274
16.5.2　选择控件的种类 .................................................. 276
16.5.3　不显示选择状态 .................................................. 276
16.5.4　选择控件的颜色变更 .......................................... 276
16.5.5　使用图标的选择控件 .......................................... 277
16.5.6　修改选项内容的显示位置 ................................... 278
16.5.7　设置选项的非活性 .............................................. 278
16.5.8　选项的插入与删除 .............................................. 278
16.6　滑块（UISlider） .....................................................280
16.6.1　滑块的使用方法 .................................................. 280
16.6.2　滑块值的通知时机 .............................................. 281
16.6.3　向滑块中追加图标 .............................................. 281
16.6.4　滑块的定制 ......................................................... 282
16.7　日期时刻选择框（UIDatePicker） .............................................284
16.7.1　日期时刻选择框的使用 ...................................... 284
16.7.2　以动画形式改变日期 .......................................... 285
16.7.3　设置间隔及最小／最大值 ................................... 285
16.7.4　日期选择框的种类 .............................................. 286
16.7.5　定制日期选择框 .................................................. 287
第17讲　表格视图（UITableView） .......................................290
17.1　表格显示 .................................................................290
17.1.1　最简单的表格显示 .............................................. 290
17.1.2　单元选择时的动作 .............................................. 293
17.1.3　表格的分段显示 .................................................. 294
17.1.4　表格的分组显示 .................................................. 297
17.1.5　段脚的显示 ......................................................... 299
17.1.6　索引的活用 ......................................................... 299
17.2　单元的定制 ..............................................................301
17.2.1　单元尺寸及颜色的修改 ...................................... 301
17.2.2　单元分隔线的修改 .............................................. 302
17.2.3　追加图片 ............................................................. 303
17.2.4　追加细节标签 ..................................................... 305
17.2.5　追加附件 ............................................................. 306
17.2.6　追加自定义附件 .................................................. 308
17.2.7　追加仅编辑模式时显示的附件 ................................................ 309
17.2.8　追加控件 ..............................................................311
17.2.9　定制单元背景 ..................................................... 315
第18讲　使用SQLite数据库 ......................................................317
18.1　SQLite数据库及使用SQLite数据库的前期准备 ................................................317
18.1.1　SQLite数据库概要 .............................................. 317
18.1.2　使用SQLite数据库的前期准备 ................................................ 318
18.2　创建数据库及表格 ..................................................319
18.3　连接数据库 ..............................................................321
18.4　数据检索 .................................................................324
18.5　数据的追加与删除 ..................................................328
18.6　数据库更新 ..............................................................332
18.7　使用Core Data进行数据的追加、删除 .......................................335
18.7.1　Core Data的优点 ................................................. 335
18.7.2　创建使用Core Data的应用程序................................................ 336
18.7.3　改造Core Data的数据模型 .................................. 337
18.7.4　修改数据登录与保持代码 ................................... 341
18.7.5　数据删除代码 ..................................................... 342
18.8　追加编辑数据画面 ..................................................342
18.9　添加排序项目 ..........................................................345
第19讲　调试方法 ...................................................349
19.1　缺陷与调试 ..............................................................349
19.1.1　什么是缺陷与调试 .............................................. 349
19.1.2　描述缺陷 ............................................................. 350
19.1.3　缺陷的重现 ......................................................... 350
19.2　NSLog ......................................................................351
19.2.1　使用NSlog输出调试信息 .................................... 351
19.2.2　NSLog的格式 ...................................................... 353
19.3　调试工具 .................................................................354
19.3.1　什么是调试工具 .................................................. 355
19.3.2　调试构建配置 ..................................................... 355
19.3.3　断点与调试模式的启动 ...................................... 356
19.3.4　调试界面 ............................................................. 356
19.3.5　调试的分步执行 .................................................. 358
19.4　例外 .........................................................................359
19.4.1　什么是例外 ......................................................... 359
19.4.2　捕捉例外 ............................................................. 360
19.4.3　发生例外时停止运行 .......................................... 362
19.4.4　避免使用太多的例外 .......................................... 363
第20讲　使用iPhone终端进行测试 .........................................364
20.1　iPhone Developer Program ............................................................364
20.1.1　【iPhone Developer Program】的会员种类 ............................. 364
20.1.2　【iPhone Developer Program】的注册手续 ............................. 365
20.1.3　关于【Apple ID】 ............................................... 365
20.1.4　【iPhone Developer Program】的付款及认证手续 .................. 366
20.2　在实际iPhone手机上的调试 ........................................................366
索引 ..............................................................................379
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>20天搞定iPhone软件开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Swift进阶
第1 章介绍1
1.1 本书所面向的读者2
1.2 主题3
1.3 术语6
1.4 Swift风格指南9
第2 章内建集合类型11
2.1 数组11
数组和可变性11
数组和可选值13
数组变形14
数组类型25
2.2 字典27
可变性28
有用的字典扩展28
Hashable 要求30
2.3 Set 31
集合代数32
索引集合和字符集合33
在闭包中使用集合34
2.4 Range 34
第3 章集合类型协议37
3.1 序列37
迭代器38
无限序列44
不稳定序列44
序列和迭代器之间的关系45
子序列46
3.2 集合类型47
为队列设计协议48
队列的实现50
遵守Collection 协议51
遵守ExpressibleByArrayLiteral 协议54
关联类型55
3.3 索引57
索引失效58
索引步进59
链表60
3.4 切片70
实现自定义切片71
切片与原集合共享索引74
通用的PrefixIterator 74
3.5 专门的集合类型75
前向索引76
双向索引77
随机存取索引78
MutableCollection 79
RangeReplaceableCollection 80
3.6 总结82
第4 章可选值84
4.1 哨岗值84
4.2 通过枚举解决魔法数的问题86
4.3 可选值概览88
if let 88
while let 89
双重可选值92
if var and while var 94
解包后可选值的作用域95
可选链97
nil 合并运算符99
可选值map 101
可选值flatMap 103
使用flatMap 过滤nil 104
可选值判等105
switch-case 匹配可选值108
可选值比较109
4.4 强制解包的时机109
改进强制解包的错误信息111
在调试版本中进行断言111
4.5 多灾多难的隐式可选值113
隐式可选值行为113
4.6 总结114
第5 章结构体和类115
5.1 值类型116
5.2 可变性117
5.3 结构体120
5.4 写时复制127
写时复制(昂贵方式) 129
写时复制(高效方式) 130
写时复制的陷阱132
5.5 闭包和可变性134
5.6 内存135
weak 引用137
unowned 引用138
5.7 闭包和内存139
结构体和类使用实践139
5.8 闭包和内存142
引用循环143
捕获列表144
5.9 总结145
第6 章函数146
6.1 函数的灵活性152
函数作为数据155
6.2 局部函数和变量捕获161
6.3 函数作为代理163
Foundation 框架的代理163
结构体代理164
使用函数，而非代理165
6.4 inout 参数和可变方法167
嵌套函数和inout 169
& 不意味inout 的情况170
6.5 计算属性和下标171
延迟存储属性172
使用不同参数重载下标173
下标进阶175
6.6 自动闭包175
@escaping 标注177
6.7 总结179
第7 章字符串180
7.1 不再固定宽度180
字位簇和标准等价181
7.2 字符串和集合184
字符串与切片187
7.3 简单的正则表达式匹配器189
7.4 ExpressibleByStringLiteral 192
7.5 String 的内部结构193
Character 的内部组织结构199
7.6 编码单元表示方式199
7.7 CustomStringConvertible 和
CustomDebugStringConvertible 201
7.8 文本输出流203
7.9 字符串性能207
7.10 展望211
第8 章错误处理212
8.1 Result 类型213
8.2 抛出和捕获214
8.3 带有类型的错误216
8.4 将错误桥接到Objective-C 217
8.5 错误和函数参数218
Rethrows 220
8.6 使用defer 进行清理221
8.7 错误和可选值222
8.8 错误链223
链结果223
8.9 高阶函数和错误224
8.10 总结226
第9 章泛型228
9.1 重载228
自由函数的重载229
运算符的重载230
使用泛型约束进行重载231
使用闭包对行为进行参数化235
9.2 对集合采用泛型操作236
二分查找236
泛型二分查找238
集合随机排列241
SubSequence 和泛型算法244
重写与优化246
9.3 使用泛型进行代码设计247
提取共通功能249
创建泛型数据类型250
9.4 泛型的工作方式251
泛型特化253
全模块优化254
9.5 总结255
第10 章协议256
10.1 面向协议编程258
协议扩展260
在协议扩展中重写方法260
10.2 协议的两种类型262
类型抹消264
10.3 带有Self 的协议267
10.4 协议内幕269
性能影响270
10.5 总结271
第11 章互用性272
11.1 实践：封装CommonMark 272
封装C 代码库272
封装cmark_node 类型273
更安全的接口278
11.2 低层级类型概览284
11.3 函数指针286
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Swift进阶
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iPhone x iPad x Photography 究極行動攝影術
第一話 iPhone 攝影的可能性
iPhone及iPad內建攝影軟體教學
取景構圖及光線影響
各種常見環境的拍照方式
特別攝影技巧、LOMO、微距、全景、縮時攝影
第二話 iPhone+iPad的行動攝影工作室
iPhone照片傳到iPad、iPad與電腦間的照片互傳
iPad可以幫忙攝影師的事
作品展示
iPad與其他輸出設備搭配
第三話 攝影作品的後製與實作
攝影作品使用後製對於作品表現的重要性
相片後製修改的案例教學
第四話 即時分享及雲端相片管理
網路相簿管理
部落格圖文分享
相片分享平台
AirPrint無線列印相片
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iPhone x iPad x Photography 究極行動攝影術
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>软件创富密码
第20章 iPhone应用程序的特征...1
20.1 iPhone的本质...1
20.1.1 iPhone的特征.....2
20.2 如何开发iPhone特色的应用程序......3
20.2.1 牢记将iPhone特色硬件优势发挥到极致.......3
20.2.2 诱导iPhone用户的创造力.....4
20.2.3 多数iPhone应用程序的不足之处5
20.2.4 突出自己的特色.....6
第21章 iPhone宝宝性别预测程序 ..... 7
21.1 性别预测应用程序的概要7
21.2 设计用户界面......8
21.3 创建并改造工程.....9
21.3.1 创建工程..9
21.3.2 改造GuessChild工程.....10
21.4 追加各个画面的类文件及实际代码......14
21.4.1 追加准妈妈生日输入画面的类及代码.....14
21.4.2 追加准爸爸生日输入画面的类及代码.....18
21.4.3 追加怀孕日期输入画面的类及代码.........21
21.4.4 追加预测结果画面的类及代码..23
21.5 调试及在模拟器上测试..28
第22章 使用iPhone终端进行测试.....30
22.1 iPhone Developer Program.30
22.1.1 iPhone Developer Program的会员种类......30
22.1.2 iPhone Developer Program的注册手续......31
22.1.3 关于Apple ID........32
22.1.4 iPhone Developer Program的付款及认证手续.......32
22.2 在实际iPhone上的调试....32
第23章 发布前的最后加工....47
23.1 图标等的设置.....47
23.1.1 图标.......47
23.1.2 编辑Info.plist文件.......48
23.1.3 设置启动默认画面......49
23.2 环境设置.....50
23.2.1 环境设置的元素类型.........51
23.2.2 创建Settings Bundle.....52
23.2.3 创建设置用的图标.....55
23.2.4 读取环境设置数值......55
23.3 iPhone应用程序的本地化设置......56
23.3.1 本地化处理的基本过程......56
23.3.2 字符串的本地化处理.....60
23.3.3 Settings.Bundle的本地化处理...64
23.3.4 应用程序名称的本地化处理.....64
第24章 发布iPhone应用程序......66
24.1 关于App Store.......66
24.2 在App Store中发布应用程序.......67
24.2.1 关于iTunes Connect.....67
24.2.2 必要的准备事项.....68
24.2.3 创建App Store发布用的证书.....70
24.2.4 创建应用程序的发布版本.........72
24.2.5 “性别预测”程序的具体发布流程.........75
第25章 高级应用程序之一—利用GPS制作出行导航程序......81
25.1 导航应用程序的概要......81
25.1.1 概要 ........ 81
25.1.2 画面构成 ........ 82
25.1.3 导航应用程序的处理流程. 84
25.2 各种功能方法与实现代码......86
25.2.1 创建工程及相关类的定义 ....... 86
25.2.2 属性和方法的定义以及画面的设计 ....... 87
25.2.3 实现GPS定位功能 ......... 93
25.2.4 导入Google地图功能..... 100
25.2.5 补充—如何调用外部应用程序..... 105
第26章 高级应用程序之二—使用了摄像头及Core Animation的蛋糕分切程序.....108
26.1 蛋糕分切程序的概要....108
26.2 使用cameraOverlayView在镜头画面中加入其他视图.....110
26.2.1 创建工程......110
26.2.2 创建ScaleView类 .....111
26.2.3 在应用程序中启动摄像头 .....117
26.2.4 实现在摄像头中追加定制UIView ........119
26.3 使用Core Animation制作切分效果......121
第27章 高级应用程序之三—将iPhone变成乐器.........128
27.1 “8bit WHISTLE”应用程序的概要.........128
27.1.1 概要 ...... 128
27.1.2 画面构成 ...... 129
27.1.3 “8bit WHISTLE”应用程序的处理流程 ..... 131
27.2 各功能方法与实现代码133
27.2.1 创建工程及设计启动画面 ..... 133
27.2.2 实现录音功能 ....... 139
27.2.3 实现音频播放功能 ....... 154
27.2.4 探测麦克风输入声音，播放指定音频 ......... 168
27.2.5 动作方法及触摸事件处理的实现代码 ......... 180
第28章 高级应用程序之四—综合使用摄像头以及声音特效的实例......189
28.1 声音特效应用程序的概要......189
28.2 音响处理的概要......190
28.3 声音的录制与播放.........190
28.3.1 编写AudioCameraFilterViewController类的定义 . 192
28.3.2 设计用户界面 ....... 193
28.3.3 编写录音以及播放声音的代码 ..... 195
28.4 获取摄像头的图像.........204
28.4.1 启动摄像头并显示按钮 205
28.4.2 取得辉度的平均值及标准偏差 ..... 207
28.4.3 将获取的辉度平均值与标准偏差作为滤波器处理的参数 ...... 209
第29章 高级应用程序之五—照片的僵尸特效（ZombieCamera）.......213
29.1 僵尸特效应用程序的概要......213
29.1.1 概要 ...... 213
29.1.2 画面构成 ......213
29.1.3 僵尸特效应用程序的处理流程 .....218
29.2 各功能与实现代码........220
29.2.1 创建工程及设计启动画面 .... 220
29.2.2 实现启动摄像头功能 ..... 225
29.2.3 实现图片的僵尸特效 ..... 230
29.2.4 链接外部网站实现图片上传 . 243
第30章 iPhone传感器应用程序开发技巧.......251
30.1 AudioQueue的使用技巧.251
30.1.1 使用AudioQueue实现音频播放 ...... 251
30.1.2 取得音频音量 ....... 256
30.1.3 使用AudioQueue实现录音 ...... 257
30.2 iPhone摄像头相关应用的使用技巧.....261
30.2.1 在照片上放置其他图形 261
30.2.2 获取照片的纵横位置 .... 263
30.3 视频相关使用技巧.........264
30.3.1 使用录像功能 ........ 264
30.3.2 使用视频播放器播放视频 ..... 269
30.3.3 在视频播放器上显示定制图形 ..... 270
30.4 其他传感器的应用技巧273
30.4.1 探测振动烈度 ....... 273
30.4.2 使用接近传感器 ..... 275
30.4.3 检测iPhone持机方向 .... 276
索 引......279
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>软件创富密码
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iPhone开发入门与实战
第1章  关于iPhone
1.1  iPhone是苹果公司创新的产物
1.2  iPhone开创手机应用商店新纪元
1.3  iPhone屏幕
1.4  iPhone键盘
1.5  iPhone显示效果
1.6  iPhone用户体验
1.7  iPhone只有一个按键
1.8  iPhone 是一款纯Touch机
1.9  多点触摸（Multi-Touch）
1.10  当前窗口只能有一个
1.11  如何排列主屏图标
1.12  如何删除应用
第2章  关于Mac操作系统
2.1  Mac OS概述
2.2  Mac OS版本演变
2.3  iPhone开发一定需要苹果电脑吗
2.4  Mac OS X也可运行在Windows PC上
2.4.1  安装前的准备工作
2.4.2  安装过程中的磁盘分区
2.5  小结
第3章  iPhone开发环境的配置
3.1  确认Mac OS X版本
3.2  注册Apple ID
3.3  SDK下载与安装
3.3.1  下载iPhone SDK
3.3.2  安装iPhone SDK
3.4  注册IDP会员
第4章  iPhone应用程序开发工具
4.1  Xcode
4.2  Interface builder
4.3  Cocoa Touch
第5章  iPhone开发语言（Objective-C）
5.1  Objective-C概述
5.2  Objective-C是C语言的超集
5.3  类与实例
5.4  类
5.5  属性（property）
5.6  委托（Delegation）
5.7  对象
5.8  方法（method）
5.8.1  方法的声明
5.8.2  方法的调用
5.9  输出口（Outlet）
5.10  操作（Action）
5.11  什么是框架（Framework）
5.12  UIKit类图
5.13  编程规范（Coding Standard）
5.14  NSString
5.15  dealloc
5.16  小结
第6章  创建一个简单的应用
6.1  启动Xcode
6.2  创建工程
6.3  Xcode工程窗口
6.3.1  应用委托类（App Delegate）
6.3.2  MainWindow.xib
6.3.3  Main.m文件
6.4  编译配置和运行
6.5  小结
第7章  iPhone常用控件
7.1  按钮（Button）
7.1.1  如何添加一个按钮（Button）
7.1.2  按钮检查器
7.1.3  按钮的属性
7.1.4  按钮的实例方法
7.1.5  一个关于按钮的应用程序
7.2  标签（Label）
7.2.1  标签检查器
7.2.2  标签的属性
7.2.3  一个关于标签的应用程序
7.3  文本框（Text Field）
7.3.1  文本框属性
7.3.2  文本框类
7.3.3  一个关于文本框的应用程序
7.4  图像视图
……
第8章  基于Window-based应用程序设计
第9章  基于标签栏的应用
第10章  表视图应用
第11章  iPhone多点触摸技术的应用
第12章  iPhone加速计的应用
第13章  iPhone程序的调试方法
第14章  Cute iClock娱乐应用程序设计与实现
第15章  一个基于OpenGL的摇骰子游戏
第16章  iPhone应用程序的签名及其发布
第17章  如何将应用发布到App Store上
第18章  如何注册一个App Store免费账户
参考文献
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iPhone开发入门与实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>苹果APP界面设计,你该知道的大小事
目录
Chapter 1
手机应用程序设计与众不同的地方 9
手机设计与网络 10
我们如何通过手机上网 12
苹果设计与网络设计的不同之处 14
一位成功应用程序设计师的特点 18
如何由网站设计或印刷设计向手机设计转变 20
Chapter 2
应用程序是如何创建的 23
应用程序设计及开发 24
不同类型的应用程序 28
程序语言 30
自定义设计与模板设计 32
什么时候使用苹果UI构成要素 35
Chapter 3
定义应用程序的首要任务 39
你的应用程序能实现什么功能？ 40
更多需要考虑的因素 43
去除冗余的功能 44
Chapter 4
市场研究 49
理念调查 50
关注现有的解决方案 52
解决方案的比对 54
发现技术的局限性 56
未来功能的计划 57
定义你的目标受众 59
他们需要什么？ 61
拥有苹果手机的人口数量统计 62
目标客户如何影响你的设计 64
Chapter 5
交互设计 67
什么是交互设计？ 68
为手势设计 70
加速计、陀螺仪、指南针，以及倾角仪 72
M7协处理器 76
如何利用其他软件和硬件的特性 78
Chapter 6
用户体验设计 89
什么是用户体验设计 90
导航元素与风格 92
iOS视图控件和导航 94
临时窗口 98
控件 99
过渡和动画 102
内容视图 104
设置 106
用例场景 107
纸原型和定义应用程序流 109
线框图和故事板 112
Chapter 7
界面设计 115
什么是界面设计 116
自定义界面注意事项 118
未来的屏幕尺寸 119
iPhone UI设计剖析 120
应用程序设计正在改变 121
为iOS7及以上版本考虑的关键设计因素 123
需要考虑的关键技术因素 126
Chapter 8
图标设计 129
iOS7操作系统图标设计 130
各种类型的苹果应用程序图标 131
iOS7图标设计的关键技巧 132
图标的尺寸和布置 134
图标设计的关键因素 136
Chapter 9
屏幕截图设计 139
我们如何决定买哪个应用程序 140
选择你的屏幕截图 142
成功截图的关键技巧 144
截图规范 145
Chapter 10
准备最后的作品 147
切分图形 148
为开发者提供图像文件 151
结论 153
术语表 154
尺寸索引 157
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>苹果APP界面设计,你该知道的大小事
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iPhone User Experience簡單法則
前言
歡迎讀者賜教
致謝
關於作者
PART ONE：iPhone的應用程式和裝置概述
Ch1：iPhone應用程式概述
Ch2：iPhone裝置概述
PART TOW：定義你的iPhone應用程式
Ch3：使用者研究簡介
Ch4：分析使用者研究
Ch5：評估競爭對手
PART THREE：發展應用程式的概念
Ch6：探索應用程式概念
Ch7：建立應用程式概念的原型
Ch8：對應用程式概念進行使用性測試
PART FOUR：改善iPhone應用程式
Ch9：使用者介面設計
Ch10：視覺設計
Ch11：品牌行銷和廣告
Ch12：輔助使用和當地語系化
展望未來
索引
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>iPhone User Experience簡單法則
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Xcode实战开发
目　录
第1部分　入门　1
第1章　安装Xcode　2
1.1　下载　4
1.2　参与计划　4
1.3　更多素材　5
1.4　小结　5
第2章　探索Xcode环境　6
2.1　得到一个窗口　8
2.2　创建项目　8
2.3　工作区窗口　10
2.4　导航器区域　11
2.4.1　项目导航器　11
2.4.2　符号导航器　12
2.4.3　搜索导航器　13
2.4.4　问题导航器　13
2.4.5　调试导航器　15
2.4.6　断点导航器　16
2.4.7　日志导航器　16
2.5　跳转栏　18
2.6　编辑器区域　19
2.6.1　辅助窗格简介　20
2.6.2　在辅助窗格中打开文件　20
2.6.3　添加和删除辅助窗格　20
2.6.4　更改布局行为　21
2.6.5　更改辅助行为模式　22
2.7　工具区域　23
2.8　调试区域　24
2.9　活动查看器　24
2.10　标签式编码　25
2.11　组织器窗口　26
2.12　小结　26
第3章　获得帮助　28
3.1　帮助菜单　30
3.1.1　Xcode帮助　30
3.1.2　Xcode用户指南　30
3.1.3　文档和API参考　30
3.1.4　其余菜单项　30
3.2　组织器的文档选项卡　31
3.2.1　探索　31
3.2.2　搜索　32
3.2.3　书签　32
3.3　源代码编辑器　32
3.3.1　工具区域中的快速帮助　32
3.3.2　搜索选中文本的文档　33
3.4　社区帮助和反馈　34
3.4.1　Apple的开发人员论坛　34
3.4.2　文档错误　34
3.5　小结　34
第2部分　构建应用程序　37
第4章　建立工作区　38
4.1　工作区定义　40
4.2　何时使用工作区　41
4.2.1　截然不同的应用程序　41
4.2.2　应用程序套件　41
4.3　创建照明套件工作区　42
4.3.1　在工作区中添加项目　42
4.4　小结　44
第5章　添加资源和代码　46
5.1　使用文件　48
5.1.1　使用添加文件表单　48
5.1.2　使用拖放　49
5.1.3　创建新文件　50
5.1.4　使用文件模板库　51
5.1.5　从项目中删除文件　52
5.2　向Lamp添加文件　52
5.3　　使用源代码编辑器　53
5.3.1　聚焦和折叠代码　54
5.3.2　自动添加代码　55
5.4　小结　59
第6章　用Xcode快照进行版本控制　60
6.1　Xcode快照　62
6.1.1　配置快照　62
6.1.2　创建快照　63
6.1.3　管理快照　63
6.1.4　从快照中恢复　64
6.2　小结　65
第7章　构建用户界面　66
7.1　理解Nib　68
7.1.1　文件的属主和控制器对象　68
7.1.2　动作和出口　68
7.1.3　分类法　69
7.2　熟悉界面构建器　69
7.2.1　编辑器区域　70
7.2.2　工具区域　72
7.2.3　库　74
7.2.4　辅助窗格　75
7.3　添加用户界面元素　76
7.3.1　添加一个开关　77
7.3.2　使用弹簧和支架　78
7.3.3　使用自动布局　79
7.3.4　建立连接　82
7.4　故事板　85
7.4.1　添加UI　87
7.4.2　使用场景和切换　88
7.5　小结　92
第8章　创建CoreData模型　94
8.1　CoreData简介　96
8.1.1　托管对象模型　96
8.1.2　持久化存储　96
8.1.3　实体　97
8.1.4　托管对象上下文　97
8.2　使用数据模型编辑器　98
8.3　为Lamp创建基本数据模型　99
8.3.1　规划　100
8.3.2　构建模型　100
8.3.3　生成子类　102
8.4　小结　105
第9章　调试应用程序　106
9.1　交互式调试　108
9.1.1　使用调试栏　108
9.1.2　使用基本控件　109
9.1.3　在控制台中工作　110
9.1.4　使用断点　110
9.1.5　与源代码编辑器交互　112
9.1.6　使用调试导航器　113
9.2　调试Flashlight应用程序　113
9.2.1　中断并进入　113
9.2.2　检查数据　115
9.3　静态分析　115
9.3.1　使用静态分析器　116
9.3.2　探索分析器结果　117
9.4　小结　119
第10章　部署　120
10.1　存档　122
10.1.1　创建存档　122
10.1.2　查找存档　122
10.1.3　检查存档　123
10.1.4　测试应用程序　124
10.2　验证应用程序　124
10.3　分发渠道　126
10.3.1　服务提供配置文件和代码签名　126
10.3.2　iOS应用分发　129
10.3.3　Mac应用分发　133
10.4　存档的替代方法　137
10.5　小结　137
第3部分　进一步的探索　139
第11章　在Xcode4中使用旧的项目　140
11.1　项目现代化方法　142
11.1.1　等等！别急着按下那个按钮　143
11.1.2　应用程序现代化　143
11.1.3　现代化是为一些没有主见的人设计的　145
11.2　代码现代化方法　146
11.2.1　更新工具　146
11.2.2　更新代码　147
11.2.3　使用ARC　149
11.3　小结　151
第12章　高级编辑　152
12.1　重命名符号　154
12.2　重构　155
12.2.1　重构工具　155
12.2.2　重构预览　158
12.3　用宏组织代码　159
12.4　更改编辑器键绑定　160
12.4.1　管理命令集　161
12.4.2　自定义快捷键　162
12.5　调整项目设置　162
12.6　使用搜索导航器　163
12.6.1　使用查找选项　164
12.6.2　创建自定义查找范围　165
12.6.3　替换文本　167
12.7　在文件中搜索　168
12.8　小结　169
第13章　构建系统　170
13.1　概述　172
13.1.1　目标　172
13.1.2　方案　172
13.1.3　构建设置　172
13.1.4　配置　172
13.1.5　运行目标　173
13.1.6　构建阶段　173
13.1.7　构建规则　173
13.2　使用目标　173
13.2.1　寻找项目的目标　174
13.2.2　项目范围设置　175
13.2.3　探索目标　176
13.2.4　添加新目标　187
13.3　使用方案　191
13.3.1　寻找项目的方案　191
13.3.2　管理方案　192
13.3.3　编辑方案　194
13.4　授权和沙箱　203
13.4.1　代码签名　205
13.4.2　激活授权和沙箱　205
13.4.3　设置具体授权　206
13.5　小结　207
第14章　使用框架　208
14.1　什么是库、框架和包？　210
14.1.1　库　210
14.1.2　框架　211
14.1.3　可加载包　211
14.2　使用现有的库和框架　212
14.2.1　系统框架示例　212
14.2.2　使用第三方框架　216
14.3　创建一个框架　219
14.3.1　创建项目　219
14.3.2　添加一些代码　220
14.3.3　配置头文件　222
14.4　小结　224
第15章　改进代码质量　226
15.1　调试　228
15.1.1　观察和修改变量　228
15.1.2　自定义断点　229
15.1.3　使用控制台　230
15.2　Instruments　234
15.2.1　启动Instruments　234
15.2.2　Instruments用户界面概述　237
15.2.3　应用程序的时间剖面　245
15.2.4　其他分析工具　247
15.3　单元测试　248
15.3.1　Xcode中的单元测试　249
15.3.2　由OCUnit推动　250
15.3.3　编写单元测试　253
15.4　小结　261
第16章　脚本和预处理　262
16.1　用自定义脚本扩展工作流　264
16.1.1　脚本的机会　264
16.1.2　Xcode的环境变量　268
16.2　研究一个简单的脚本示例　268
16.2.1　设定场景　269
16.2.2　创建脚本　269
16.2.3　仅在发行构建上进行存档操作　270
16.2.4　扩展脚本　273
16.3　使用预处理器　273
16.3.1　宏　274
16.3.2　中毒　275
16.3.3　忽略　276
16.3.4　条件语句　277
16.3.5　在构建环境中的宏　278
16.3.6　局限　282
16.4　小结　282
第17章　Xcode的命令行界面　284
17.1　命令行工具　286
17.2　从命令行构建　287
17.2.1　持续集成　288
17.2.2　xcodebuild　288
17.2.3　处理工作区、项目、目标和方案　289
17.2.4　构建选项　290
17.2.5　SDK和架构　291
17.3　使用多个版本的Xcode　293
17.4　访问命令行工具　294
17.5　小结　295
第18章　用SCM系统进行版本控制　296
18.1　使用Git和Subversion　298
18.1.1　Git和SVN的差别　298
18.1.2　管理存储库　299
18.1.3　执行常规的SCM任务　305
18.2　使用托管的Git服务　315
18.2.1　在托管服务中添加一个项目　315
18.2.2　使用功能分支　318
18.3　小结　321
附录A　管理iOS设备　322
A.1　使用组织器的设备选项卡　324
A.2　在设备上安装iOS　327
A.3　管理设备屏幕截图　328
A.3.1　截取屏幕截图　328
A.3.2　比较屏幕截图　328
A.3.3　使用屏幕截图作为默认图像　329
A.4　管理应用程序与数据　330
A.4.1　安装和删除应用程序　331
A.4.2　下载和上传应用程序数据　331
A.5　检查日志　332
附录B　文档更新　334
B.1　设置文档首选项　336
附录C　其他资源　338
C.1　本书网站　340
C.2　Apple资源　340
C.3　第三方资源　340
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Xcode实战开发
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Cisco IOS12.0参考库――综合服务应用技术
目 录
第0章 简介
0.1 语音、视频和宽带应用程序概述
0.2 语音初级
0.3 CiscoIOS12.0REFERENC
ELIBRARY 简介
0.4 使用CiscoIOS软件
第一部分 语 音
第1章 为Cisco3600系列产品配置
VoiceoverIP
1.1 VOIP怎样处理电话呼叫
1.2 术语列表
1.3 预需求任务
1.4 VOICEOVERIP配置任务列表
1.5 为实时语音传输配置IP网络
1.6 为VOIVEOVERIP配置帧中继
1.7 配置号的扩展
1.8 配置拨号点
1.9 优化拨号点和网络接口配置
1.10 为MICROSOFTNETMEETING
配置VOICE OVERIP
1.11 VOICE OVERIP配置实例
第2章 为CiscoMC3810配置帧中继语音
2.1 术语表
2.2 预需求任务
2.3 帧中继语音配置任务列表
2.4 配置帧中继网络以支持实时语音传输
2.5 准备配置语音拨号点
2.6 配置拨号点
2.7 拨号点高级配置
2.8 帧中继语音配置实例
第3章 为CiscoMC3810配置ATM语音
3.1 术语表
3.2 预需求任务
3.3 ATM语音配置任务列表
3.4 ATM语音初步配置
3.5 准备配置语音拨号点
3.6 配置拨号点
3.7 ATM语音配置实例
第4章 为CiscoMC3810配置HDLC语音
4.1 HDLC语音配置任务列表
4.2 配置HDLC语音封装
4.3 配置拨号点
4.4 HDLC 语音配置示例
第5章 语音相关命令
5.1 ACC－QOS
5.2 ALT－DIAI
5.3 ANSWER－ADDRESS
5.4 ATMCOMPRESSION
5.5 CABLELENGTHLONG
5.6 CABLELENGTHSHORT
5.7 CHANNEL－GROUP
5.8 CLEARVOICEPORT
5.9 CLOCKRATELINE
5.1 0CLOCKRATENETWORK－CLOCK
5.11 CLOCKSOURCE
5.12 （拨号点）
5.13 COMPRESS
5.14 CROSS－CONNECT
5.15 DESTINATION－PATTERN
5.16 DIAL－CONTROL－MIB
5.17 DIAL-PEER TERMINATOR
5.18 DIAL-PEBR VOICE
5.19 ENCAPSULATION
5.20 EXPECT - FACTOR
5.21 FAX-RATE
5.22 FORWARD-DIGITS
5.23 FR-ATM CONNECT DLCI
5.24 FRAME-RELAY INTERFACE-DLCI
5.25 FRAME-RELAY ROUTE
5.26 ICPIF
5.27 INTERFACE FR-ATM
5.28 IP PRECEDENCE
5.29 IP UDP CHECKSUM
5.30 LOOP-DETECT
5.31 LOOPBACK
5.32 MODE
5.33 NETWORK-CLOCK BASE-RATE
5.34 NETWORK-CLOCK-SELECT
5.35 NETWORK-CLOCK-SWITCH
5.36 NUM-EXP
5.37 PORT
5.38 PREFERENCE
5.39 PREFIX
5.40 REQ-QOS
5.41 SESSION PROTOCOL
5.42 SESSION TARGET
5.43 SHOW CALL ACTIVE VOICE
5.44 SHOW CALL HISTORY VOICE
5.45 SHOWDIAL-PEERVOICE
5.46 SHOW DIALPLAN INCALL
NUMBER
5.47 SHOWDIALPLANNUMBER
5.48 SHOW NETWORK-CLOCKS
5.49 SHOWNUM-EXP
5.50 SHOW VOICE CALL
5.51 SHOWVOICEDSP
5.52 SHOW VOICE PORT
5.53 (DIAL-PEER)
5.54 (DSl LINK)
5.55 SNMP ENABLE PEER-TRAP
POOR-QOV
5.56 SNMP-SERVER ENABLE TRAPS
5.57 TDM-GROUP
5.58 VAD(DIAL PEER)
5.59 VBR-RI
5.60 VOICE-ENCAP
5.61 VOICE-GROUP
5.62 VOICE LOCAL-BYPASS
第6章 配置语音端口
6.1 Cisco3600系列上的语音端口
6.2 配置 Cisco 3600 系列上的语音端口
6.3 Cisco3600系列上的语音端口配置任务单
6.4 Cisco 1^103810上的语音端口
6.5 BfiB Cisco 1^03810 上的语音端口
6.6 Cisco 1^03810?上的语音端口配置任务单
第7章 语单端口命令
7.1 AUTO-CUT-THROUGH
7.2 （语音端口）
7.3 COMFORT-NOISE
7.4 COMPAND-TYPE
7.5 CONDITION
7.6 CONNECTION
7.7 CPTONE
7.8 DEFINE
7.9 DESCRIPTION
7.10 DIAL-TYPE
7.11 ECHO-CANCEL COVERAGE
7.12 ECHO-CANCEL ENABLE
7.13 IGNORE
7.14 IMPEDANCE
7.15 INPUTGAIN
7.16 MUSIC-THRESHOLD
7.17 NON-LINEAR
7.18 OPERATION
7.19 OUTPUT ATTENUATION
7.20 PLAYOUT-DELAY
7.21 RINGCADENCE
7.22 RING FREQUENCY
7.23 RING NUMBER
7.24 SHUTDOWN
7.25 SIGNAL
7.26 SNMP TRAP LINK-STATUS
7.27 SUPERVISORY DISCONNECT
7.28 TIMEOUTS INITIAL
7.29 TIMEOUTS INTERDIGIT
7.30 TIMEOUTS WAIT-RELEASE
7.31 TIMING CLEAR-WAIT
7.32 TIMING DELAY-DURATION
7.33 TIMING DELAY-START
7.34 TIMING DELAY-WITH-INTEGRITY
7.35 TIMING DIAL-PULSE MIN-DELAY
7.36 TIMING DIALOUT-DELAY
7.37 TIMING DIGIT
7.38 TIMING INTER-DIGIT
7.39 TIMING PERCENTBREAK
7.40 TIMING PULSE
7.41 TIMING PULSE-INTER-DIGIT
7.42 TIMING WINK-DURATION
7.43 TIMING WINK-WAIT
7.44 TYPE
7.45 VAD
7.46 VOICE CONFIRMATION-TONE
7.47 VOICE-PORT
^SSS. BEBCisco MCSaiOltefi^'RATM
第8章 配置Cisco MC3810帧中继和ATM网间互联
8.1 帧中继和ATM网间互联概念
8.2 配置帧中继和ATM网间互联
8.3 帧中继与ATM网间互联配置示例
第二部分 视 频
第9章 配置 Cisco Mc3810的视频支持
9.1 配置传递（PASS-THROUGH）模式
的视频
9.2 配置ATMAALI上的视频
9.3 CES视频流量配置示例
第10章 视频相关命令
10.1 (恒定位速率)
10.2 （CES信元丢失综合周期）
10.3 (CES 时钟模式同步）
10.4 (CES连接）
10.5 (CES 初始延迟）
10.6 (CES最大缓冲区大小)
10.7 (CES 服务)
10.8 (CES 服务)
10.9 (ATM CES 封装)
第三部分 宽 带
第11章 配置Cisco uBR7246 通用宽带路由器特征
11.1 CiscoUBR7246电缆路由器的描述
11.2 CiscoUBR7246的益处
11.3 术语清单
11.4 额外任务
11.5 通用宽带特征配置作务列表
11.6 配置下游电缆接口
11.7 配置上游电缆接口
11.8 配置和激活基线保密性
11.9 配置和激活频率灵活性
11.10 激活IP地址解析协议
11.11 激活主机到主机通信
11.12 设置可选IP参数
11.13 管理HFC网络上电缆调制解调器
11.14 通用宽带特征配置示例
第12章 Cisoo uBR7246通用宽带路由器特征命令
12.1 CABLEARP
12.2 CABLE CHANNEL-CHANGE
12.3 CABLE DOWNSTREAM ANNEX
12.4 CABLE DOWNSTREAM
FREQUENCY
12.5 CABLE DOWNSTREAM IF-OUTPUT
12.6 CABLE DOWNSTREAM
INTERLEAVE-DEPTH
12.7 CABLE DOWNSTREAM
MODULATION
12.8 CABLE DOWNSTREAM
SYMBOL-RATE
12.9 CABLE INSERTION-rNTERVAL
12.10 CABLE IP-MULTICAST-ECHO
12.11 CABLE IP-BROADCAST-ECHO
12.12 CABLE PRIVACY KEK GRACE-
TIME
12.13 CABLE PRIVACY KEK LIFE-TIME
12.14 CABLE PRIVACY TEK GRACE-TIME
12.15 CABLE PRIVACY TEK LIFE-TIME
12.16 CABLE PROXY-ARP
12.17 CABLE SHARED-SECRET
12.18 CABLE SPECTRUM-GROUP
12.19 CABLE SPECTRUM-GROUP
FREQUENCY
12.20 CABLE SOURCE-VERIFY
12.21 CABLEUPSTREAMFEC
12.22 CABLE UPSTREAM'FREQUENCY
12.23 CABLE UPSTREAM POWER-LEVEL
12.24 CABLE UPSTREAM SCRAMBLER
12.25 CABLE UPSTREAM SHUTDOWN
12.26 SHOW CABLE BURST-PROFILE
12.27 SHOW CABLE MODEM
12.28 SHOW CABLE MODULATION-
PROFILE
12.29 SHOW CABLE PRIVACY
12.30 SHOW CABLE QOS
12.31 SHOW CABLE SPECTRUM GROUP
12.32 SHOW CONTROLLERS CABLE
12.33 SHOW INTERFACE CABLE
12.34 SHOW INTERFACE CABLE
SIGNAL-QUALITY
12.35 SHOW INTERFACE CABLE SID
12.36 SHOW DIAG
12.37 SHOW C7200
第四部分 附 录
配置Cisco MC3810同步时
A.1 同步时钟概念
A.2配置CiscoMC3810时钟源
A.3配置备用时钟源层次

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Cisco IOS12.0参考库――综合服务应用技术
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Cisco IOS12.0参考库――接口配置技术
目 录
第0章 接口配置概述
0.1由CISC0路由器支持的接口类型
0.2了解接口配置
0.3了解分接口
0.4可用于任何接口的配置特性
0.5了解OIR
0.6了解快速交换支持
0.7监控和维护接口
0.8接口配置范例
0.9关于Cisc0IOS 12.0
ReferenceLibrary
0.10Cisc0Ios软件的使用
第1章 LAN接口配置
1.1一个以太网或一个快速以太
网接口配置
1.2配置FASTEtherChannel
1.3配置光纤分布式数据接口
1.4配置一个集线器接口
1.5配置一个LANExtender接口
1.6配置令牌环接口
1.7LAN接口配置范例
第2章 串行接口配置
2.1高速串行接口的配置
2.2同步串行接口的配置
2.3信道化T3接口处理器的配置
2.4PA－E3和PA－2E3串行端口
适配器的配置
2.5PA－T3和PA－2T3串行端口
适配器的配置
2.6PacketOC－3接口的配置
2.7Packet－Over－SONET电路的
自动保护交换配置
2.8用于CSU/DSU服务模型串
行接口的配置
2.9低速串行接口的配置
2.10串行接口配置范例
第3章 逻辑接口配置
3.1回路接口的配置
3.2空接口的配置
3.3隧道接口的配置
3.4逻辑接口配置范例
第4章 配置接口命令
4.1（标准）
4.2（类型代码）
4.3 apsauthenticate
4.4 apsforce
4.5 apsgr0up
4.6 apslockout
4.7 apsmanual
4.8 aps protect
4.9 aps revert
4.10 aps timers
4.11 aps unidirectional
4.12 apsworking
4.13 atmsonet
4.14 auto-polarity
4.15 bandwidth
4.16 cablelength
4.17 cablelength long
4.18 cablelength short
4.19 cas-group
4.20 (Fast Ether-
Channel)
4.21 clear controller lex
4.22 clear counters
4.23 clear hub
4.24 clear hub counters
4.25 clear interface
4.26 clear interface fastethemet
4.27 clear rif-cache
4.28 clear service-module serial
4.29 clock rate
4.30 (CT3Ip)
4.31 (Cisco AS5200)
4.32 (Cisco MC3810)
4.33 (控制器)
4.34 (接口)
4.35 cmt connect
4.36 cmt disconnect
4.37 compress
4.38 controller t3
4.39 copy flash lex
4.40 copy tftp lex
4.41 crc
4.42 crc4
4.43 crc bits 5
4.44 cut-through
4.45 delay
4.46 dce-terminal-timing enable
4.47 (控制器)
4.48 down-when-looped
4.49 dsu bandwidth
4.50 dsu mode
4.51 dte-invert-txc
4.52 duplex
4.53 early-token-release
4.54 encapsulation
4.55 fddi burst-count
4.56 fddi c-min
4.57 fddi cmt-signal-bits
4.58 fddi duplicate-address-check
4.59 fddi encapsulate
4.60 fddi frames-per-token
4.61 fddi smt-frames
4.62 fddi tb-min
4.63 fddi tl-min-time
4.64 fddi t-out
4.65 fddi token-rotation-time
4.66 fddi valid-transmission-time
4.67 fdl
4.68 (El/Tl控制器）
4.69 (E3/T3控制器)
4.70 （T3控制器)
4.71 full-duplex
4.72 half-duplex
4.73 half-duplex controlled-camer
4.74 half-duplex timer
4.75 hold-queue
4.76 hssi extemal-loop-request
4.77 hssi intemal-clock
4.78 hub
4.79 ignore-dcd
4.80 ignore-hw local-loopback
4.81 interface
4.82 interface dialer
4.83 interface fastethemet.
4.84 interface group-async
4.85 interface port-channel
4.86 interface vg-anylan
4.87 intemational bit
4.88 invert data
4.89 invert rxclock
4.90 invert-transmit-clock
4.91 inverttxclock
4.92 keepalive
4.93 lex bumed-in-address
4.94 lex input-address-list
4.95 lex input-type-list
4.96 lex priority-group
4.97 lex retry-count
4.98 lex timeout
4.99 linecode
4.100 link-test
4.101 local-lnm
4.102 (接口)
4.103 (E3/T3接口)
4.104 (T1接口)
4.105 (T3控制器)
4.106 loopback applique
4.107 loopbackdte
4.108 loopback line
4.109 loopback remote (接口)
4.110 mdl
4.111 media-type
4.112 mop enabled
4.113 mop sysid
4.114 mtu
4.115 nationalbit
4.116 nrzi-encoding
4.117 physical-layer
4.118 port
4.119 posflag
4.120 pos framing
4.121 pos intemal-clock
4.122 posreport
4.123 pos scramble-atm
4.124 posthreshold
4.125 pri-group,
4.126 pulse-time
4.127 ring-speed
4.128 scramble
4.129 service-module 56k clock rate
4.130 service-module 56k clock-
source
4.131 service-module 56k data-
coding
4.132 service-module 56k network-
type
4.133 service-module 56k remote-
loopback
4.134 service-module 56k switched-
carrier
4.135 service-module tl clock source
4.136 service-module tl data-coding
4.137 service-module tl fdl
4.138 service-module tl framing
4.139 service-module tl Ibo
4.140 service-module tl linecode
4.141 service-module tl remote-
alarm-enable
4.142 service-module tl remote-
loopback
4.143 service-module tl timeslots
4.144 show aps
4.145 show bridge group
4.146 show compress
4.147 show controllers cbus
4.148 show controllers ethemet
4.149 show controllers fastethemet
4.150 show controllers fddi
4.151 show controllers lex
4.152 show controllers mci
4.153 show controllers pcbus
4.154 show controllers pos
4.155 show controllers serial
4.156 show controllers tl
4.157 show controllers t3
5.158 show controllers token
5.159 show controllers vg-anylan
4.160 showdiag
4.161 show diagbus
4.162 show hub
4.163 show interfaces
4.164 show interfaces ethemet
4.165 show interfaces fastethemet
4.166 show interfaces fddi
4.167 show interfaces hssi
4.168 show interfaces ip-brief
4.169 show interfaces lex
4.170 show interfaces loopback
4.171 show interfaces port-channel
4.172 show interfaces pos
4.173 show irterfaces serial
4.174 show interfaces tokenring
4.175 show interfaces tunnel
4.176 show interfaces vg- anylan
4.177 show ip interface
4.178 show pas eswitch address
4.179 showrif
4.180 show service-module serial
4.181 (控制器)
4.182 shutdown(hub)
4.183 shutdown (interface)
4.184 smt-queue-threshold
4.185 snmp trap illegal-address
4.186 source-address
4.187 speed,
4.188 squelch
4.189 tl bert
4.190 tl clock source
4.191 tl extemal
4.192 tlfdlansi
4.193 tl framing
4.194 tl linecode
4.195 tl test
4.196 tl timeslot
4.197 tl yellow
4.198 test interface fastethemet
4.199 test service-module
4.200 timeslot
4.201 transmit-clock-intemal
4.202 transmitter-delay
4.203 is16
4.204 tunnel checksum
4.205 tunnel destination
4.206 tunnel key
4.207 tunnel mode
4.208 tunnel sequence-datagrams
4.209 tunnel source
4.210 tx-queue-limit

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Cisco IOS12.0参考库――接口配置技术
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Cisco IOS12.0 Dial Solutions拨号解决方案(上中下)(1CD)
前言
调用类型
Cisco IOS Dial Universe
T1和E1控制器
通道化T1与通道化E1（非ISDN）
B通道与D通道
线路类型
关于Cisco IOS 12.0参考库
使用Cisco IOS软件
第1章 配置modem支持与其它异步特性
基本modem配置任务表
配置Modem和线
生成组异步接口
监视与维护连接
外部连接Modem故障排除

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Cisco IOS12.0 Dial Solutions拨号解决方案(上中下)(1CD)
