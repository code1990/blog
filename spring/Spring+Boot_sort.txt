第1章　入门　　1
1.1　Spring风云再起　　1
1.1.1　重新认识Spring　　2
1.1.2　Spring Boot精要　　3
1.1.3　Spring Boot不是什么　　6
1.2　Spring Boot入门　　6
· · · · · · (更多)
第1章　入门　　1
1.1　Spring风云再起　　1
1.1.1　重新认识Spring　　2
1.1.2　Spring Boot精要　　3
1.1.3　Spring Boot不是什么　　6
1.2　Spring Boot入门　　6
· · · · · · (更多)
第1章　入门　　1
1.1　Spring风云再起　　1
1.1.1　重新认识Spring　　2
1.1.2　Spring Boot精要　　3
1.1.3　Spring Boot不是什么　　6
1.2　Spring Boot入门　　6
1.2.1　安装Spring Boot CLI　　7
1.2.2　使用Spring Initializr初始化Spring Boot项目　　10
1.3　小结　　18
第2章　开发第一个应用程序　　19
2.1　运用Spring Boot　　19
2.1.1　查看初始化的Spring Boot新项目　　21
2.1.2　Spring Boot项目构建过程解析　　24
2.2　使用起步依赖　　27
2.2.1　指定基于功能的依赖　　28
2.2.2　覆盖起步依赖引入的传递依赖　　29
2.3　使用自动配置　　30
2.3.1　专注于应用程序功能　　31
2.3.2　运行应用程序　　36
2.3.3　刚刚发生了什么　　38
2.4　小结　　41
第3章　自定义配置　　42
3.1　覆盖Spring Boot自动配置　　42
3.1.1　保护应用程序　　43
3.1.2　创建自定义的安全配置　　44
3.1.3　掀开自动配置的神秘面纱　　48
3.2　通过属性文件外置配置　　49
3.2.1　自动配置微调　　50
3.2.2　应用程序Bean的配置外置　　55
3.2.3　使用Profile进行配置　　59
3.3　定制应用程序错误页面　　62
3.4　小结　　64
第4章　测试　　66
4.1　集成测试自动配置　　66
4.2　测试Web应用程序　　68
4.2.1　模拟Spring MVC　　69
4.2.2　测试Web安全　　72
4.3　测试运行中的应用程序　　74
4.3.1　用随机端口启动服务器　　75
4.3.2　使用Selenium测试HTML页面　　76
4.4　小结　　78
第5章　Groovy与Spring Boot CLI　　80
5.1　开发Spring Boot CLI应用程序　　80
5.1.1　设置CLI项目　　81
5.1.2　通过Groovy消除代码噪声　　81
5.1.3　发生了什么　　85
5.2　获取依赖　　86
5.2.1　覆盖默认依赖版本　　87
5.2.2　添加依赖仓库　　88
5.3　用CLI运行测试　　89
5.4　创建可部署的产物　　91
5.5　小结　　91
第6章　在Spring Boot中使用Grails　　93
6.1　使用GORM进行数据持久化　　93
6.2　使用Groovy Server Pages定义视图　　98
6.3　结合Spring Boot与Grails 3　　100
6.3.1　创建新的Grails项目　　100
6.3.2　定义领域模型　　103
6.3.3　开发Grails控制器　　104
6.3.4　创建视图　　105
6.4　小结　　107
第7章　深入Actuator　　108
7.1　揭秘Actuator的端点　　108
7.1.1　查看配置明细　　109
7.1.2　运行时度量　　115
7.1.3　关闭应用程序　　121
7.1.4　获取应用信息　　121
7.2　连接Actuator的远程shell　　122
7.2.1　查看autoconfig报告　　123
7.2.2　列出应用程序的Bean　　124
7.2.3　查看应用程序的度量信息　　124
7.2.4　调用Actuator端点　　125
7.3　通过JMX监控应用程序　　126
7.4　定制Actuator　　128
7.4.1　修改端点ID　　128
7.4.2　启用和禁用端点　　129
7.4.3　添加自定义度量信息　　129
7.4.4　创建自定义跟踪仓库　　132
7.4.5　插入自定义健康指示器　　134
7.5　保护Actuator端点　　136
7.6　小结　　138
第8章　部署Spring Boot应用程序　　139
8.1　衡量多种部署方式　　139
8.2　部署到应用服务器　　140
8.2.1　构建WAR文件　　141
8.2.2　创建生产Profile　　142
8.2.3　开启数据库迁移　　145
8.3　推上云端　　150
8.3.1　部署到Cloud Foundry　　150
8.3.2　部署到Heroku　　153
8.4　小结　　155
附录A　Spring Boot开发者工具　　157
附录B　Spring Boot起步依赖　　163
附录C　配置属性　　169
附录D　Spring Boot依赖　　202
· · · · · · (收起)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Spring Boot实战
第1章　入门　　1
1.1　Spring风云再起　　1
1.1.1　重新认识Spring　　2
1.1.2　Spring Boot精要　　3
1.1.3　Spring Boot不是什么　　6
1.2　Spring Boot入门　　6
1.2.1　安装Spring Boot CLI　　7
1.2.2　使用Spring Initializr初始化Spring Boot项目　　10
1.3　小结　　18
第2章　开发第一个应用程序　　19
2.1　运用Spring Boot　　19
2.1.1　查看初始化的Spring Boot新项目　　21
2.1.2　Spring Boot项目构建过程解析　　24
2.2　使用起步依赖　　27
2.2.1　指定基于功能的依赖　　28
2.2.2　覆盖起步依赖引入的传递依赖　　29
2.3　使用自动配置　　30
2.3.1　专注于应用程序功能　　31
2.3.2　运行应用程序　　36
2.3.3　刚刚发生了什么　　38
2.4　小结　　41
第3章　自定义配置　　42
3.1　覆盖Spring Boot自动配置　　42
3.1.1　保护应用程序　　43
3.1.2　创建自定义的安全配置　　44
3.1.3　掀开自动配置的神秘面纱　　48
3.2　通过属性文件外置配置　　49
3.2.1　自动配置微调　　50
3.2.2　应用程序Bean的配置外置　　55
3.2.3　使用Profile进行配置　　59
3.3　定制应用程序错误页面　　62
3.4　小结　　64
第4章　测试　　66
4.1　集成测试自动配置　　66
4.2　测试Web应用程序　　68
4.2.1　模拟Spring MVC　　69
4.2.2　测试Web安全　　72
4.3　测试运行中的应用程序　　74
4.3.1　用随机端口启动服务器　　75
4.3.2　使用Selenium测试HTML页面　　76
4.4　小结　　78
第5章　Groovy与Spring Boot CLI　　80
5.1　开发Spring Boot CLI应用程序　　80
5.1.1　设置CLI项目　　81
5.1.2　通过Groovy消除代码噪声　　81
5.1.3　发生了什么　　85
5.2　获取依赖　　86
5.2.1　覆盖默认依赖版本　　87
5.2.2　添加依赖仓库　　88
5.3　用CLI运行测试　　89
5.4　创建可部署的产物　　91
5.5　小结　　91
第6章　在Spring Boot中使用Grails　　93
6.1　使用GORM进行数据持久化　　93
6.2　使用Groovy Server Pages定义视图　　98
6.3　结合Spring Boot与Grails 3　　100
6.3.1　创建新的Grails项目　　100
6.3.2　定义领域模型　　103
6.3.3　开发Grails控制器　　104
6.3.4　创建视图　　105
6.4　小结　　107
第7章　深入Actuator　　108
7.1　揭秘Actuator的端点　　108
7.1.1　查看配置明细　　109
7.1.2　运行时度量　　115
7.1.3　关闭应用程序　　121
7.1.4　获取应用信息　　121
7.2　连接Actuator的远程shell　　122
7.2.1　查看autoconfig报告　　123
7.2.2　列出应用程序的Bean　　124
7.2.3　查看应用程序的度量信息　　124
7.2.4　调用Actuator端点　　125
7.3　通过JMX监控应用程序　　126
7.4　定制Actuator　　128
7.4.1　修改端点ID　　128
7.4.2　启用和禁用端点　　129
7.4.3　添加自定义度量信息　　129
7.4.4　创建自定义跟踪仓库　　132
7.4.5　插入自定义健康指示器　　134
7.5　保护Actuator端点　　136
7.6　小结　　138
第8章　部署Spring Boot应用程序　　139
8.1　衡量多种部署方式　　139
8.2　部署到应用服务器　　140
8.2.1　构建WAR文件　　141
8.2.2　创建生产Profile　　142
8.2.3　开启数据库迁移　　145
8.3　推上云端　　150
8.3.1　部署到Cloud Foundry　　150
8.3.2　部署到Heroku　　153
8.4　小结　　155
附录A　Spring Boot开发者工具　　157
附录B　Spring Boot起步依赖　　163
附录C　配置属性　　169
附录D　Spring Boot依赖　　202
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Spring Boot实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaEE开发的颠覆者: Spring Boot实战 : Spring Boot实战
第一部分 点睛Spring 4.x
第1 章 Spring 基础 2
1.1 Spring 概述 2
1.1.1 Spring 的简史 2
1.1.2 Spring 概述 3
1.2 Spring 项目快速搭建 5
1.2.1 Maven 简介 6
1.2.2 Maven 安装 6
1.2.3 Maven 的pom.xml 7
1.2.4 Spring 项目的搭建 9
1.3 Spring 基础配置 17
1.3.1 依赖注入 18
1.3.2 Java 配置 21
1.3.3 AOP 24
第2 章 Spring 常用配置 30
2.1 Bean 的Scope 30
2.1.1 点睛 30
2.1.2 示例 31
2.2 Spring EL 和资源调用. 33
2.2.1 点睛 33
2.2.2 示例 33
2.3 Bean 的初始化和销毁 37
2.3.1 点睛 37
2.3.2 演示 38
2.4 Profile 40
2.4.1 点睛 40
2.4.2 演示 41
2.5 事件（Application Event） 44
2.5.1 点睛 44
2.5.2 示例 44
第3 章 Spring 高级话题 48
3.1 Spring Aware 48
3.1.1 点睛 48
3.1.2 示例 49
3.2 多线程 51
3.2.1 点睛 51
3.2.2 示例 51
3.3 计划任务 54
3.3.1 点睛 54
3.3.2 示例 54
3.4 条件注解@Conditional 56
3.4.1 点睛 56
3.4.2 示例 57
3.5 组合注解与元注解 60
3.5.1 点睛 60
3.5.2 示例 60
3.6 @Enable*注解的工作原理 63
3.6.1 第一类：直接导入配置类 63
3.6.2 第二类：依据条件选择配置类 64
3.6.3 第三类：动态注册Bean 65
3.7 测试 66
3.7.1 点睛 66
3.7.2 示例 67
第二部分 点睛Spring MVC 4.x
第4 章 Spring MVC 基础 72
4.1 Spring MVC 概述 73
4.2 Spring MVC 项目快速搭建 74
4.2.1 点睛 74
4.2.2 示例 74
4.3 Spring MVC 的常用注解 82
4.3.1 点睛 82
4.3.2 示例 83
4.4 Spring MVC 基本配置 87
4.4.1 静态资源映射 88
4.4.2 拦截器配置 89
4.4.3 @ControllerAdvice 91
4.4.4 其他配置 94
4.5 Spring MVC 的高级配置 98
4.5.1 文件上传配置 98
4.5.2 自定义HttpMessageConverter 101
4.5.3 服务器端推送技术 106
4.6 Spring MVC 的测试 113
4.6.1 点睛 113
4.6.2 示例 114
第三部分 实战Spring Boot
第5 章 Spring Boot 基础 122
5.1 Spring Boot 概述 122
5.1.1 什么是Spring Boot 122
5.1.2 Spring Boot 核心功能 122
5.1.3 Spring Boot 的优缺点 124
5.1.4 关于本书的Spring Boot 版本 124
5.2 Spring Boot 快速搭建 124
5.2.1 http://start.spring.io 124
5.2.2 Spring Tool Suite 127
5.2.3 IntelliJ IDEA 129
5.2.4 Spring Boot CLI 132
5.2.5 Maven 手工构建 134
5.2.6 简单演示 136
第6 章 Spring Boot 核心 138
6.1 基本配置 138
6.1.1 入口类和@SpringBootApplication 138
6.1.2 关闭特定的自动配置 139
6.1.3 定制Banner 139
6.1.4 Spring Boot 的配置文件 140
6.1.5 starter pom 141
6.1.6 使用xml 配置 143
6.2 外部配置 143
6.2.1 命令行参数配置 143
6.2.2 常规属性配置 144
6.2.3 类型安全的配置（基于properties） 145
6.3 日志配置 148
6.4 Profile 配置 148
实战 148
6.5 Spring Boot 运行原理 150
6.5.1 运作原理 153
6.5.2 核心注解 154
6.5.3 实例分析 157
6.5.4 实战 160
第7 章 Spring Boot 的Web 开发 170
7.1 Spring Boot 的Web 开发支持 170
7.2 Thymeleaf 模板引擎 171
7.2.1 Thymeleaf 基础知识 171
7.2.2 与Spring MVC 集成 174
7.2.3 Spring Boot 的Thymeleaf 支持 175
7.2.4 实战 177
7.3 Web 相关配置 182
7.3.1 Spring Boot 提供的自动配置 182
7.3.2 接管Spring Boot 的Web 配置 185
7.3.3 注册Servlet、Filter、Listener 186
7.4 Tomcat 配置 187
7.4.1 配置Tomcat 187
7.4.2 代码配置Tomcat 188
7.4.3 替换Tomcat 190
7.4.4 SSL 配置 191
7.5 Favicon 配置 196
7.5.1 默认的Favicon 196
7.5.2 关闭Favicon 196
7.5.3 设置自己的Favicon 197
7.6 WebSocket 197
7.6.1 什么是WebSocket 197
7.6.2 Spring Boot 提供的自动配置 197
7.6.3 实战 198
7.7 基于Bootstrap 和AngularJS 的现代Web 应用 212
7.7.1 Bootstrap 213
7.7.2 AngularJS 216
7.7.3 实战 222
第8 章 Spring Boot 的数据访问 233
8.1 引入Docker 237
8.1.1 Docker 的安装 238
8.1.2 Docker 常用命令及参数 242
8.1.3 下载本书所需的Docker 镜像 247
8.1.4 异常处理 247
8.2 Spring Data JPA 248
8.2.1 点睛Spring Data JPA 248
8.2.2 Spring Boot 的支持 258
8.2.3 实战 260
8.3 Spring Data REST 284
8.3.1 点睛Spring Data REST 284
8.3.2 Spring Boot 的支持 285
8.3.3 实战 286
8.4 声名式事务 297
8.4.1 Spring 的事务机制 297
8.4.2 声名式事务 298
8.4.3 注解事务行为 299
8.4.4 类级别使用@Transactional 300
8.4.5 Spring Data JPA 的事务支持 300
8.4.6 Spring Boot 的事务支持 302
8.4.7 实战 303
8.5 数据缓存Cache 309
8.5.1 Spring 缓存支持 309
8.5.2 Spring Boot 的支持 310
8.5.3 实战 312
8.5.4 切换缓存技术 319
8.6 非关系型数据库NoSQL 320
8.6.1 MongoDB 320
8.6.2 Redis 329
第9 章 Spring Boot 企业级开发 340
9.1 安全控制Spring Security 340
9.1.1 Spring Security 快速入门 340
9.1.2 Spring Boot 的支持 347
9.1.3 实战 348
9.2 批处理Spring Batch 362
9.2.1 Spring Batch 快速入门 362
9.2.2 Spring Boot 的支持 370
9.2.3 实战 371
9.3 异步消息 385
9.3.1 企业级消息代理 386
9.3.2 Spring 的支持 386
9.3.3 Spring Boot 的支持 386
9.3.4 JMS 实战 387
9.3.5 AMQP 实战 391
9.4 系统集成Spring Integration 395
9.4.1 Spring Integration 快速入门 395
9.4.2 Message 395
9.4.3 Channel 395
9.4.4 Message EndPoint 398
9.4.5 Spring Integration Java DSL 400
9.4.6 实战 400
第10 章 Spring Boot 开发部署与测试 407
10.1 开发的热部署 407
10.1.1 模板热部署 407
10.1.2 Spring Loaded 407
10.1.3 JRebel 409
10.1.4 spring-boot-devtools 413
10.2 常规部署 413
10.2.1 jar 形式 413
10.2.2 war 形式 417
10.3 云部署——基于Docker 的部署 419
10.3.1 Dockerfile 419
10.3.2 安装Docker 421
10.3.3 项目目录及文件 421
10.3.4 编译镜像 423
10.3.5 运行 424
10.4 Spring Boot 的测试 424
10.4.1 新建Spring Boot 项目 425
10.4.2 业务代码 425
10.4.3 测试用例 427
10.4.4 执行测试 429
第11 章 应用监控 431
11.1 http 431
11.1.1 新建Spring Boot 项目 432
11.1.2 测试端点 432
11.1.3 定制端点 439
11.1.4 自定义端点 440
11.1.5 自定义HealthIndicator 444
11.2 JMX 447
11.3 SSH 449
11.3.1 新建Spring Boot 项目 449
11.3.2 运行 449
11.3.3 常用命令 451
11.3.4 定制登录用户 452
11.3.5 扩展命令 452
第12 章 分布式系统开发 456
12.1 微服务、原生云应用 456
12.2 Spring Cloud 快速入门 457
12.2.1 配置服务 457
12.2.2 服务发现 457
12.2.3 路由网关 457
12.2.4 负载均衡 457
12.2.5 断路器 458
12.3 实战 458
12.3.1 项目构建 458
12.3.2 服务发现——Discovery（Eureka Server） 459
12.3.3 配置——Config（Config Server） 461
12.3.4 服务模块——Person 服务 463
12.3.5 服务模块——Some 服务 466
12.3.6 界面模块——UI（Ribbon,Feign） 468
12.3.7 断路器监控——Monitor（DashBoard） 473
12.3.8 运行 474
12.4 基于Docker 部署 478
12.4.1 Dockerfile 编写 478
12.4.2 Docker Compose 480
12.4.3 Docker-compose.yml 编写 481
12.4.4 运行 483
附录A 485
A.1 基于JHipster 的代码生成 485
A.2 常用应用属性配置列表 488
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JavaEE开发的颠覆者: Spring Boot实战 : Spring Boot实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Spring Boot实战派 : （Spring Boot让开发像搭积木一样简单,全实例讲解，含Spring Securit
目录
+++++++++入 门 篇
第1章 进入Spring Boot世界 /2
1.1 认识Spring Boot /2
∣1.1.1 什么是Spring Boot /2
∣1.1.2 Spring、Spring Boot、Spring Cloud的关系 /4
∣1.1.3 Spring Boot的特色 /5
∣1.1.4 Spring Boot支持的开发语言 /6
∣1.1.5 学习Spring Boot的前景展望 /6
1.2 学习Spring Boot的建议 /7
∣1.2.1 看透本书理论，模仿实战例子 /7
∣1.2.2 利用开发工具自动学习 /7
∣1.2.3 发现新功能的方法 /8
∣1.2.4 建立高阶的思维方式 /9
∣1.2.5 控制版本，降低犯错的代价 /10
∣1.2.6 获取最新、最全的资料 /11
∣1.2.7 学会自己发现和解决问题 /11
∣1.2.8 善于提问，成功一半 /12
第2章 准备开发环境 /14
2.1 搭建环境 /14
∣2.1.1 安装Java开发环境JDK /14
∣2.1.2 配置JDK的环境变量 /15
2.2 熟悉Maven /18
∣2.2.1 安装及配置Maven /18
∣2.2.2 认识其中的pom.xml文件 /19
∣2.2.3 Maven的运作方式 /23
∣2.2.4 配置国内仓库 /23
第3章 使用开发工具 /25
3.1 安装开发工具IDEA及插件 /25
∣3.1.1 安装IDEA /25
∣3.1.2 配置IDEA的Maven环境 /27
∣3.1.3 安装Spring Assistant插件 /27
∣3.1.4 安装插件Lombok /28
3.2 【实例1】用Spring Boot输出“Hello World” /30
∣3.2.1 构建Spring Boot项目 /30
∣3.2.2 编写控制器，实现输出功能 /31
∣3.2.3 在IDEA中运行程序 /33
∣3.2.4 打包成可执行的JAR包 /33
3.3 在Eclipse中开发Spring Boot应用程序 /35
∣3.3.1 安装Eclipse /35
∣3.3.2 安装Spring Tools 4插件 /35
∣3.3.3 配置Eclipse的Maven环境 /36
∣3.3.4 创建Spring Boot项目 /37
3.4 了解Spring官方开发工具STS /37
3.5 必会的IDEA实用技能 /38
∣3.5.1 智能提示代码 /38
∣3.5.2 自动提示参数 /39
∣3.5.3 实现自动转义 /39
∣3.5.4 自定义高复用代码块 /40
∣3.5.5 设置注释信息 /41
∣3.5.6 超能的“Alt+Enter”快捷键 /42
∣3.5.7 使用全局配置 /42
∣3.5.8 自动生成语句 /43
3.6 比较IDEA与Eclipse /44
3.7 如何使用本书源代码 /47
∣3.7.1 在IDEA中使用 /47
∣3.7.2 在Eclipse（STS）中使用 /47
∣
+++++++++基 础 篇
第4章 Spring Boot基础 /50
4.1 了解Spring Boot /50
∣4.1.1 了解Spring Boot项目结构 /50
∣4.1.2 了解Spring Boot的入口类 /51
∣4.1.3 了解Spring Boot的自动配置 /52
∣4.1.4 了解Spring Boot热部署 /52
∣4.1.5 【实例2】定制启动画面 /53
4.2 Spring Boot的常用注解 /54
∣4.2.1 什么是注解式编程 /55
∣4.2.2 了解系统注解 /55
∣4.2.3 Spring Boot的常用注解 /56
4.3 使用配置文件 /61
∣4.3.1 【实例3】演示如何使用application.yml文件 /62
∣4.3.2 【实例4】演示如何使用application.properties文件 /65
∣4.3.3 【实例5】用application.yml和application.properties配置多环境 /67
4.4 Spring Boot的Starter /69
∣4.4.1 了解Starter /69
∣4.4.2 使用Starter /70
第5章 分层开发Web应用程序 /71
5.1 应用程序分层开发模式——MVC /71
∣5.1.1 了解MVC模式 /71
∣5.1.2 MVC和三层架构的关系 /72
5.2 使用视图技术Thymeleaf /73
∣5.2.1 认识Thymeleaf /73
∣5.2.2 基础语法 /75
∣5.2.3 处理循环遍历 /78
∣5.2.4 处理公共代码块 /80
∣5.2.5 处理分页 /81
∣5.2.6 验证和提示错误消息 /82
∣5.2.7 【实例6】编写Thymeleaf视图以展示数据 /83
5.3 使用控制器 /85
∣5.3.1 常用注解 /85
∣5.3.2 将URL映射到方法 /86
∣5.3.3 处理HTTP请求的方法 /87
∣5.3.4 处理内容类型 /89
∣5.3.5 在方法中使用参数 /90
5.4 理解模型 /93
5.5 【实例7】实现MVC模式的Web应用程序 /94
∣5.5.1 添加依赖 /94
∣5.5.2 创建实体模型 /95
∣5.5.3 创建控制器 /95
∣5.5.4 创建用于展示的视图 /96
5.6 验证数据 /96
∣5.6.1 认识内置的验证器Hibernate∣validator /96
∣5.6.2 自定义验证功能 /98
∣5.6.3 【实例8】验证表单数据并实现数据的自定义验证 /99
第6章 响应式编程 /103
6.1 认识响应式编程 /103
∣6.1.1 什么是WebFlux /103
∣6.1.2 比较MVC和WebFlux /103
∣6.1.3 认识Mono和Flux /105
∣6.1.4 开发WebFlux的流程 /106
6.2 【实例9】用注解式开发实现Hello World /107
∣6.2.1 配置WebFlux依赖 /107
∣6.2.2 编写控制器 /107
6.3 【实例10】用注解式开发实现数据的增、删、改、查 /108
∣6.3.1 创建实体类 /108
∣6.3.2 编写控制器 /108
∣6.3.3 测试API功能 /110
6.4 【实例11】用响应式开发方式开发WebFlux /111
∣6.4.1 编写处理器类Handler /111
∣6.4.2 编写路由器类Router /112
6.5 【实例12】用WebFlux模式操作MongoDB数据库,实现数据的增、删、改、查功能 /112
∣6.5.1 添加依赖 /112
∣6.5.2 创建实体类 /113
∣6.5.3 编写接口 /113
6.5.4 编写增、删、改、查数据的API /113
∣
+++++++++进 阶 篇
第7章 Spring Boot进阶 /118
7.1 面向切面编程 /118
∣7.1.1 认识Spring AOP /118
∣7.1.2 【实例13】用AOP方式管理日志 /119
7.2 认识IoC容器和Servlet容器 /121
∣7.2.1 认识容器 /121
∣7.2.2 【实例14】用IoC管理Bean /123
∣7.2.3 【实例15】用Servlet处理请求 /125
7.3 过滤器与监听器 /126
∣7.3.1 认识过滤器 /126
∣7.3.2 【实例16】实现过滤器 /128
∣7.3.3 认识监听器 /128
∣7.3.4 【实例17】实现监听器 /129
7.4 自动配置 /130
∣7.4.1 自定义入口类 /130
∣7.4.2 自动配置的原理 /131
∣7.4.3 【实例18】自定义Starter /133
7.5 元注解 /136
∣7.5.1 了解元注解 /136
∣7.5.2 【实例19】自定义注解 /137
7.6 异常处理 /138
∣7.6.1 认识异常处理 /138
∣7.6.2 使用控制器通知 /141
∣7.6.3 【实例20】自定义错误处理控制器 /142
∣7.6.4 【实例21】自定义业务异常类 /143
7.7 单元测试 /145
∣7.7.1 了解单元测试 /145
∣7.7.2 Spring Boot 的测试库 /145
∣7.7.3 快速创建测试单元 /149
∣7.7.4 【实例22】Controller层的单元测试 /150
∣7.7.5 【实例23】Service层的单元测试 /153
∣7.7.6 【实例24】Repository层的单元测试 /154
第8章 用ORM操作SQL数据库 /156
8.1 认识Java的数据库连接模板JDBCTemplate /156
∣8.1.1 认识JDBCTemplate /156
∣8.1.2 【实例25】用JDBCTemplate实现数据的增、删、改、查 /157
∣8.1.3 认识ORM /161
8.2 JPA——Java持久层API /161
∣8.2.1 认识Spring Data /161
∣8.2.2 认识JPA /162
∣8.2.3 使用JPA /164
∣8.2.4 了解JPA注解和属性 /165
∣8.2.5 【实例26】用JPA构建实体数据表 /167
8.3 认识JPA的接口 /169
∣8.3.1 JPA接口JpaRepository /169
∣8.3.2 分页排序接口PagingAndSortingRepository /169
∣8.3.3 数据操作接口CrudRepository /170
∣8.3.4 分页接口Pageable和Page /170
∣8.3.5 排序类Sort /171
8.4 JPA的查询方式 /171
∣8.4.1 使用约定方法名 /171
∣8.4.2 用JPQL进行查询 /173
∣8.4.3 用原生SQL进行查询 /174
∣8.4.4 用Specifications进行查询 /175
∣8.4.5 用ExampleMatcher进行查询 /177
∣8.4.6 用谓语QueryDSL进行查询 /177
∣8.4.7 用NamedQuery进行查询 /177
8.5 【实例27】用JPA开发文章管理模块 /178
∣8.5.1 实现文章实体 /178
∣8.5.2 实现数据持久层 /179
∣8.5.3 实现服务接口和服务接口的实现类 /179
∣8.5.4 实现增、删、改、查的控制层API功能 /180
∣8.5.5 实现增、删、改、查功能的视图层 /182
8.6 实现自动填充字段 /185
8.7 掌握关系映射开发 /187
∣8.7.1 认识实体间关系映射 /187
∣8.7.2 【实例28】实现“一对一”映射 /188
∣8.7.3 【实例29】实现“一对多”映射 /192
∣8.7.4 【实例30】实现“多对多”映射 /195
8.8 认识MyBatis——Java数据持久层框架 /197
∣8.8.1 CRUD注解 /198
∣8.8.2 映射注解 /198
∣8.8.3 高级注解 /199
8.9 【实例31】用MyBatis实现数据的增加、删除、修改、查询和分页 /200
∣8.9.1 创建Spring Boot项目并引入依赖 /201
∣8.9.2 实现数据表的自动初始化 /201
∣8.9.3 实现实体对象建模 /202
∣8.9.4 实现实体和数据表的映射关系 /202
∣8.9.5 实现增、删、改、查功能 /203
∣8.9.6 配置分页功能 /204
∣8.9.7 实现分页控制器 /205
∣8.9.8 创建分页视图 /206
8.10 比较JPA与MyBatis /207
第9章 接口架构风格——RESTful /209
9.1 REST——前后台间的通信方式 /209
∣9.1.1 认识REST /209
∣9.1.2 认识HTTP方法与CRUD动作映射 /210
∣9.1.3 实现RESTful风格的数据增、删、改、查 /210
9.2 设计统一的RESTful风格的数据接口 /212
∣9.2.1 版本控制 /212
∣9.2.2 过滤信息 /213
∣9.2.3 确定HTTP的方法 /213
∣9.2.4 确定HTTP的返回状态 /213
∣9.2.5 定义统一返回的格式 /214
9.3 【实例32】为手机APP、PC、H5网页提供统一风格的API /214
∣9.3.1 实现响应的枚举类 /214
∣9.3.2 实现返回的对象实体 /215
∣9.3.3 封装返回结果 /215
∣9.3.4 统一处理异常 /215
∣9.3.5 编写测试控制器 /219
∣9.3.6 实现数据的增、删、改、查控制器 /220
∣9.3.7 测试数据 /221
9.4 【实例33】用Swagger实现接口文档 /222
∣9.4.1 配置Swagger /222
∣9.4.2 编写接口文档 /224
9.5 用RestTemplate发起请求 /224
∣9.5.1 认识RestTemplate /224
∣9.5.2 【实例34】用RestTemplate发送GET请求 /225
∣9.5.3 【实例35】用RestTemplate发送POST请求 /228
∣9.5.4 用RestTemplate发送PUT和DELETE请求 /231
第10章 集成安全框架，实现安全认证和授权 /233
10.1 Spring Security——Spring的安全框架 /233
∣10.1.1 认识Spring Security /233
∣10.1.2 核心类 /235
10.2 配置Spring Security /240
∣10.2.1 继承WebSecurityConfigurer Adapter /240
∣10.2.2 配置自定义策略 /240
∣10.2.3 配置加密方式 /242
∣10.2.4 自定义加密规则 /242
∣10.2.5 配置多用户系统 /242
∣10.2.6 获取当前登录用户信息的几种方式 /244
10.3 【实例36】用Spring Security实现后台登录及权限认证功能 /246
∣10.3.1 引入依赖 /246
∣10.3.2 创建权限开放的页面 /246
∣10.3.3 创建需要权限验证的页面 /247
∣10.3.4 配置Spring Security /247
∣10.3.5 创建登录页面 /248
∣10.3.6 测试权限 /249
10.4 权限控制方式 /249
∣10.4.1 Spring EL权限表达式 /249
∣10.4.2 通过表达式控制URL权限 /250
∣10.4.3 通过表达式控制方法权限 /252
∣10.4.4 【实例37】使用JSR∣250注解 /254
∣10.4.5 【实例38】实现RBAC权限模型 /256
10.5 认识JWT /258
10.6 【实例39】用JWT技术为Spring Boot的API增加认证和授权保护 /260
∣10.6.1 配置安全类 /260
∣10.6.2 处理注册 /261
∣10.6.3 处理登录 /262
∣10.6.4 测试多方式注册和登录 /264
∣10.6.5 测试token方式登录和授权 /265
10.7 Shiro——Apache通用安全框架 /266
∣10.7.1 认识Shiro安全框架 /266
∣10.7.2 认识Shiro的核心组件 /267
10.8 【实例40】用Shiro实现管理后台的动态权限功能 /267
∣10.8.1 创建实体 /267
∣10.8.2 实现视图模板 /270
∣10.8.3 进行权限配置 /271
∣10.8.4 实现认证身份功能 /271
∣10.8.5 测试权限 /272
10.9 对比Spring Security与Shiro /273
第11章 集成Redis，实现高并发 /275
11.1 认识Spring Cache /275
∣11.1.1 声明式缓存注解 /276
∣11.1.2 【实例41】用Spring Cache进行缓存管理 /278
∣11.1.3 整合Ehcache /281
∣11.1.4 整合Caffeine /281
11.2 认识Redis /282
∣11.2.1 对比Redis与Memcached /282
∣11.2.2 Redis的适用场景 /285
11.3 Redis的数据类型 /285
11.4 用RedisTemplate操作Redis的5种数据类型 /287
∣11.4.1 认识opsFor方法 /287
∣11.4.2 【实例42】操作字符串 /287
∣11.4.3 【实例43】操作散列 /290
∣11.4.4 【实例44】操作列表 /294
∣11.4.5 【实例45】操作集合 /298
∣11.4.6 【实例46】操作有序集合 /301
∣11.4.7 比较RedisTemplate和StringRedisTemplate /306
11.5 【实例47】用Redis和MyBatis完成缓存数据的增加、删除、修改、查询功能 /306
∣11.5.1 在Spring Boot中集成Redis /306
∣11.5.2 配置Redis类 /307
∣11.5.3 创建测试实体类 /308
∣11.5.4 实现实体和数据表的映射关系 /309
∣11.5.5 创建Redis缓存服务层 /309
∣11.5.6 完成增、删、改、查测试API /310
11.6 【实例48】用Redis和JPA实现缓存文章和点击量 /311
∣11.6.1 实现缓存文章 /311
∣11.6.2 实现统计点击量 /312
∣11.6.3 实现定时同步 /312
11.7 【实例49】实现分布式Session /313
∣11.7.1 用Redis实现Session共享 /313
∣11.7.2 配置Nginx实现负载均衡 /314
第12章 集成RabbitMQ，实现系统间的数据交换 /316
12.1 认识RabbitMQ /316
∣12.1.1 介绍RabbitMQ /316
∣12.1.2 使用场景 /317
∣12.1.3 特性 /318
12.2 RabbitMQ的基本概念 /318
∣12.2.1 生产者、消费者和代理 /318
∣12.2.2 消息队列 /319
∣12.2.3 交换机 /319
∣12.2.4 绑定 /320
∣12.2.5 通道 /321
∣12.2.6 消息确认 /321
12.3 RabbitMQ的6种工作模式 /321
∣12.3.1 简单模式 /321
∣12.3.2 工作队列模式 /321
∣12.3.3 交换机模式 /322
∣12.3.4 Routing转发模式 /322
∣12.3.5 主题转发模式 /322
∣12.3.6 RPC模式 /323
12.4 认识AmqpTemplate接口 /323
∣12.4.1 发送消息 /324
∣12.4.2 接收消息 /324
∣12.4.3 异步接收消息 /325
12.5 在Spring Boot中集成RabbitMQ /325
∣12.5.1 安装RabbitMQ /325
∣12.5.2 界面化管理RabbitMQ /326
∣12.5.3 在Spring Boot中配置RabbitMQ /327
12.6 在Spring Boot中实现RabbitMQ的4种发送/接收模式 /328
∣12.6.1 【实例50】实现发送和接收队列 /328
∣12.6.2 【实例51】实现发送和接收对象 /330
∣12.6.3 【实例52】实现用接收器接收多个主题 /331
∣12.6.4 【实例53】实现广播模式 /334
12.7 【实例54】实现消息队列延迟功能 /336
第13章 集成NoSQL数据库，实现搜索引擎 /339
13.1 Elasticsearch——搜索应用服务器 /339
∣13.1.1 什么是搜索引擎 /339
∣13.1.2 用数据库实现搜索功能 /339
∣13.1.3 认识Elasticsearch /343
∣13.1.4 Elasticsearch应用案例 /343
∣13.1.5 对比Elasticsearch与MySQL /343
∣13.1.6 认识ElasticSearchRepository /344
∣13.1.7 认识ElasticsearchTemplate /345
∣13.1.8 认识注解@Document /345
∣13.1.9 管理索引 /347
13.2 【实例55】用ELK管理Spring Boot应用程序的日志 /348
∣13.2.1 安装Elasticsearch /348
∣13.2.2 安装Logstash /349
∣13.2.3 安装Kibana /350
∣13.2.4 配置Spring Boot项目 /350
∣13.2.5 创建日志计划任务 /351
∣13.2.6 用Kibana查看管理日志 /352
13.3 【实例56】在Spring Boot中集成Elasticsearch，实现增、删、改、查功能 /353
∣13.3.1 集成Elasticsearch /353
∣13.3.2 创建实体 /353
∣13.3.3 实现增、删、改、查文档的功能 /355
13.4 Elasticsearch查询 /356
∣13.4.1 自定义方法 /356
∣13.4.2 精准查询 /357
∣13.4.3 模糊查询 /359
∣13.4.4 范围查询 /362
∣13.4.5 组合查询 /362
∣13.4.6 分页查询 /363
∣13.4.7 聚合查询 /364
13.5 【实例57】实现产品搜索引擎 /365
13.6 Solr——搜索应用服务器 /367
∣13.6.1 了解Solr /367
∣13.6.2 安装配置Solr /367
∣13.6.3 整合Spring Boot和Solr /368
13.7 【实例58】在Sping Boot中集成Solr，实现数据的增、删、改和查 /369
∣13.7.1 创建User类 /369
∣13.7.2 测试增、删、改、查功能 /369
13.8 对比Elasticsearch和Solr /372
∣
+++++++++项目实战篇
第14章 开发企业级通用的后台系统 /376
14.1 用JPA实现实体间的映射关系 /376
∣14.1.1 创建用户实体 /376
∣14.1.2 创建角色实体 /377
∣14.1.3 创建权限实体 /378
14.2 用Spring Security实现动态授权（RBAC）功能 /380
∣14.2.1 实现管理（增、删、改、查）管理员角色功能 /380
∣14.2.2 实现管理权限功能 /381
∣14.2.3 实现管理管理员功能 /383
∣14.2.4 配置安全类 /384
∣14.2.5 实现基于RBAC权限控制功能 /386
14.3 监控Spring Boot应用 /387
∣14.3.1 在Spring Boot中集成Actuator /387
∣14.3.2 在Spring Boot中集成Spring Boot Admin应用监控 /390
∣14.3.3 在Spring Boot中集成Druid 连接池监控 /392
第15章 实现一个类似“京东”的电子商务商城 /394
15.1 用Spring Security实现会员系统 /394
∣15.1.1 实现会员实体 /394
∣15.1.2 实现会员接口 /395
∣15.1.3 实现用户名、邮箱、手机号多方式注册功能 /396
∣15.1.4 实现用RabbitMQ发送会员注册验证邮件 /398
∣15.1.5 实现用户名、邮箱、手机号多方式登录功能 /399
15.2 整合会员系统（Web、APP多端、多方式注册登录）和后台系统 /400
∣15.3 实现购物系统 /401
∣15.3.1 设计数据表 /401
∣15.3.2 实现商品展示功能 /402
∣15.3.3 实现购物车功能 /403
∣15.3.4 用Redis实现购物车数据持久化 /404
15.4 用Redis实现分布式秒杀系统 /406
∣15.4.1 实现抢购功能，解决并发超卖问题 /406
∣15.4.2 缓存页面和限流 /409
15.5 用RabbitMQ实现订单过期取消功能 /409
15.6 实现结算和支付功能 /411
∣15.6.1 实现结算生成订单功能 /411
∣15.6.2 集成支付 /412
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Spring Boot实战派 : （Spring Boot让开发像搭积木一样简单,全实例讲解，含Spring Securit
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Spring Boot编程思想（核心篇）
第1部分 总览Spring Boot
第1章 初览Spring Boot 2
1.1 Spring Framework时代 2
1.2 Spring Boot简介 3
1.3 Spring Boot的特性 5
1.4 准备运行环境 5
1.4.1 装配JDK 8 5
1.4.2 装配Maven 6
1.4.3 装配IDE（集成开发环境） 8
第2章 理解独立的Spring应用 9
2.1 创建Spring Boot应用 10
2.1.1 命令行方式创建Spring Boot应用 11
2.1.2 图形化界面创建Spring Boot应用 21
2.1.3 创建Spring Boot应用可执行JAR 29
2.2 运行Spring Boot应用 31
2.2.1 执行Spring Boot应用可执行JAR 32
2.2.2 Spring Boot应用可执行JAR资源结构 32
2.2.3 FAT JAR和WAR执行模块——spring-boot-loader 36
2.2.4 JarLauncher的实现原理 40
第3章 理解固化的Maven依赖 58
3.1 spring-boot-starter-parent与spring-boot-dependencies简介 58
3.2 理解spring-boot-starter-parent与spring-boot- dependencies 61
第4章 理解嵌入式Web容器 70
4.1 嵌入式Servlet Web容器 71
4.1.1 Tomcat作为嵌入式Servlet Web容器 72
4.1.2 Jetty作为嵌入式Servlet Web容器 77
4.1.3 Undertow作为嵌入式Servlet Web容器 80
4.2 嵌入式Reactive Web容器 82
4.2.1 UndertowServletWebServer作为嵌入式Reactive Web容器 82
4.2.2 UndertowWebServer作为嵌入式Reactive Web容器 84
4.2.3 WebServerInitializedEvent 91
4.2.4 Jetty作为嵌入式Reactive Web容器 93
4.2.5 Tomcat作为嵌入式Reactive Web容器 94
第5章 理解自动装配 96
5.1 理解@SpringBootApplication注解语义 97
5.2 @SpringBootApplication属性别名 103
5.3 @SpringBootApplication标注非引导类 107
5.4 @EnableAutoConfiguration激活自动装配 108
5.5 @SpringBootApplication“继承”@Configuration CGLIB提升特性 110
5.6 理解自动配置机制 112
5.7 创建自动配置类 116
第6章 理解Production- Ready特性 119
6.1 理解Production-Ready一般性定义 120
6.2 理解Spring Boot Actuator 123
6.3 Spring Boot Actuator Endpoints 124
6.4 理解“外部化配置 129
6.5 理解“规约大于配置” 132
6.6 小马哥有话说 134
6.6.1 Spring Boot作为微服务中间件 134
6.6.2 Spring Boot作为Spring Cloud基础设施 135
6.7 下一站：走向自动装配 135
第2部分 走向自动装配
第7章 走向注解驱动编程（Annotation-Driven） 138
7.1 注解驱动发展史 138
7.1.1 注解驱动启蒙时代：Spring Framework 1.x 138
7.1.2 注解驱动过渡时代：Spring Framework 2.x 139
7.1.3 注解驱动黄金时代：Spring Framework 3.x 142
7.1.4 注解驱动完善时代：Spring Framework 4.x 146
7.1.5 注解驱动当下时代：Spring Framework 5.x 151
7.2 Spring核心注解场景分类 152
7.3 Spring注解编程模型 154
7.3.1 元注解（Meta-Annotations） 154
7.3.2 Spring模式注解（Stereotype Annotations） 155
7.3.3 Spring组合注解（Composed Annotations） 187
7.3.4 Spring注解属性别名和覆盖（Attribute Aliases and Overrides） 195
第8章 Spring注解驱动设计模式 225
8.1 Spring @Enable模块驱动 225
8.1.1 理解@Enable模块驱动 225
8.1.2 自定义@Enable模块驱动 226
8.1.3 @Enable模块驱动原理 236
8.2 Spring Web自动装配 250
8.2.1 理解Web自动装配 250
8.2.2 自定义Web自动装配 254
8.2.3 Web自动装配原理 258
8.3 Spring条件装配 270
8.3.1 理解配置条件装配 271
8.3.2 自定义配置条件装配 274
8.3.3 配置条件装配原理 277
第9章 Spring Boot自动装配 292
9.1 理解Spring Boot自动装配 295
9.1.1 理解@EnableAutoConfiguration 296
9.1.2 优雅地替换自动装配 298
9.1.3 失效自动装配 298
9.2 Spring Boot自动装配原理 299
9.2.1 @EnableAutoConfiguration读取候选装配组件 301
9.2.2 @EnableAutoConfiguration排除自动装配组件 305
9.2.3 @EnableAutoConfiguration过滤自动装配组件 307
9.2.4 @EnableAutoConfiguration自动装配事件 313
9.2.5 @EnableAutoConfiguration自动装配生命周期 317
9.2.6 @EnableAutoConfiguration排序自动装配组件 324
9.2.7 @EnableAutoConfiguration自动装配BasePackages 332
9.3 自定义Spring Boot自动装配 337
9.3.1 自动装配Class命名的潜规则 338
9.3.2 自动装配package命名的潜规则 338
9.3.3 自定义Spring Boot Starter 340
9.4 Spring Boot条件化自动装配 346
9.4.1 Class条件注解 347
9.4.2 Bean条件注解 358
9.4.3 属性条件注解 370
9.4.4 Resource条件注解 376
9.4.5 Web应用条件注解 391
9.4.6 Spring表达式条件注解 397
9.5 小马哥有话说 401
9.6 下一站：理解SpringApplication 402
第3部分 理解SpringApplication
第10章 SpringApplication初始化阶段 405
10.1 SpringApplication构造阶段 405
10.1.1 理解SpringApplication主配置类 406
10.1.2 SpringApplication的构造过程 410
10.1.3 推断Web应用类型 411
10.1.4 加载Spring应用上下文初始化器（ApplicationContextInitializer） 412
10.1.5 加载Spring应用事件监听器（ApplicationListener） 415
10.1.6 推断应用引导类 416
10.2 SpringApplication配置阶段 417
10.2.1 自定义SpringApplication 417
10.2.2 调整SpringApplication设置 417
10.2.3 增加SpringApplication配置源 420
10.2.4 调整Spring Boot外部化配置 423
第11章 SpringApplication运行阶段 425
11.1 SpringApplication准备阶段 425
11.1.1 理解SpringApplicationRunListeners 426
11.1.2 理解SpringApplicationRunListener 428
11.1.3 理解Spring Boot事件 431
11.1.4 理解Spring事件/监听机制 432
11.1.5 理解Spring Boot事件/监听机制 492
11.1.6 装配ApplicationArguments 509
11.1.7 准备ConfigurableEnvironment 512
11.1.8 创建Spring应用上下文（ConfigurableApplicationContext） 512
11.1.9 Spring应用上下文运行前准备 516
11.2 Spring应用上下文启动阶段 537
11.3 Spring应用上下文启动后阶段 539
11.3.1 afterRefresh方法签名的变化 540
11.3.2 afterRefresh方法语义的变化 541
11.3.3 Spring Boot事件ApplicationStartedEvent语义的变化 543
11.3.4 执行CommandLineRunner和ApplicationRunner 548
第12章 SpringApplication结束阶段 550
12.1 SpringApplication正常结束 550
12.2 SpringApplication异常结束 555
12.2.1 Spring Boot异常处理 556
12.2.2 错误分析报告器——FailureAnalysisReporter 562
12.2.3 自定义实现FailureAnalyzer和FailureAnalysisReporter 564
12.2.4 Spring Boot 2.0重构handleRunFailure和reportFailure方法 566
12.2.5 Spring Boot 2.0的SpringBootExceptionReporter接口 567
第13章 Spring Boot应用退出 571
13.1 Spring Boot应用正常退出 572
13.1.1 ExitCodeGenerator Bean生成退出码 572
13.1.2 ExitCodeGenerator Bean退出码使用场景 576
13.2 Spring Boot应用异常退出 580
13.2.1 ExitCodeGenerator异常使用场景 582
13.2.2 ExitCodeExceptionMapper Bean映射异常与退出码 587
13.2.3 退出码用于SpringApplication异常结束 589
13.3 小马哥有话说 594
13.4 下一站：运维篇 596
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Spring Boot编程思想（核心篇）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入浅出Spring Boot 2.x
第　1章 Spring Boot来临　1
1.1　Spring的历史　1
1.2　注解还是XML　2
1.3　Spring Boot的优点　3
1.4　传统Spring MVC和Spring Boot的对比　4
第　2章 聊聊开发环境搭建和基本开发　10
2.1　搭建Spring Boot开发环境　10
2.1.1　搭建Eclipse开发环境　10
2.1.2　搭建IntelliJ IDEA开发环境　13
2.2　Spring Boot的依赖和自动配置　15
2.3　使用自定义配置　19
2.4　开发自己的Spring Boot项目　21
第3章　全注解下的Spring IoC　23
3.1　IoC容器简介　23
3.2　装配你的Bean　27
3.2.1　通过扫描装配你的Bean　27
3.2.2　自定义第三方Bean　31
3.3　依赖注入　32
3.3.1　注解@Autowired　34
3.3.2　消除歧义性——@Primary和@Quelifier　35
3.3.3　带有参数的构造方法类的装配　36
3.4　生命周期　37
3.5　使用属性文件　42
3.6　条件装配Bean　45
3.7　Bean的作用域　46
3.8　使用@Profile　48
3.9　引入XML配置Bean　50
3.10　使用Spring EL　51
第4章　开始约定编程——Spring AOP　53
4.1　约定编程　53
4.1.1　约定　53
4.1.2　ProxyBean的实现　57
4.1.3　总结　60
4.2　AOP的概念　61
4.2.1　为什么使用AOP　61
4.2.2　AOP 术语和流程　64
4.3　AOP开发详解　65
4.3.1　确定连接点　65
4.3.2　开发切面　66
4.3.3　切点定义　67
4.3.4　测试AOP　68
4.3.5　环绕通知　71
4.3.6　引入　72
4.3.7　通知获取参数　74
4.3.8　织入　75
4.4　多个切面　77
第5章　访问数据库　82
5.1　配置数据源　83
5.1.1　启动默认数据源　83
5.1.2　配置自定义数据源　83
5.2　使用JdbcTemplate操作数据库　86
5.3　使用JPA（Hibernate）操作数据　90
5.3.1　概述　90
5.3.2　开发JPA　90
5.4　整合MyBatis框架　96
5.4.1　MyBatis简介　96
5.4.2　MyBatis的配置　97
5.4.3　Spring Boot整合MyBatis　101
5.4.4　MyBatis的其他配置　104
第6章　聊聊数据库事务处理　107
6.1　JDBC的数据库事务　108
6.2　Spring声明式事务的使用　110
6.2.1　Spring声明式数据库事务约定　110
6.2.2　@Transactional的配置项　111
6.2.3　Spring事务管理器　113
6.2.4　测试数据库事务　114
6.3　隔离级别　118
6.3.1　数据库事务的知识　118
6.3.2　详解隔离级别　120
6.4　传播行为　124
6.4.1　传播行为的定义　125
6.4.2　测试传播行为　126
6.5　@Transactional自调用失效问题　130
第7章　使用性能利器——Redis　134
7.1　spring-data-redis项目简介　135
7.1.1　spring-data-redis项目的设计　135
7.1.2　RedisTemplate　137
7.1.3　Spring对Redis数据类型操作的封装　139
7.1.4　SessionCallback和RedisCallback接口　141
7.2　在Spring Boot中配置和使用Redis　142
7.2.1　在Spring Boot中配置Redis　142
7.2.2　操作Redis数据类型　143
7.3　Redis的一些特殊用法　148
7.3.1　使用Redis事务　148
7.3.2　使用Redis流水线　149
7.3.3　使用Redis发布订阅　150
7.3.4　使用Lua脚本　153
7.4　使用Spring缓存注解操作Redis　156
7.4.1　缓存管理器和缓存的启用　156
7.4.2　开发缓存注解　157
7.4.3　测试缓存注解　163
7.4.4　缓存注解自调用失效问题　165
7.4.5　缓存脏数据说明　165
7.4.6　自定义缓存管理器　166
第8章　文档数据库——MongoDB　168
8.1　配置MongoDB　169
8.2　使用MongoTemplate实例　170
8.2.1　搭建开发环境　170
8.2.2　使用MongoTemplate操作文档　173
8.3　使用JPA　178
8.3.1　基本用法　178
8.3.2　使用自定义查询　180
第9章　初识Spring MVC　183
9.1　Spring MVC框架的设计　183
9.2　Spring MVC流程　184
9.3　定制Spring MVC的初始化　191
9.4　Spring MVC实例　192
9.4.1　开发控制器　193
9.4.2　视图和视图渲染　194
第　10章 深入Spring MVC开发　197
10.1　处理器映射　197
10.2　获取控制器参数　198
10.2.1　在无注解下获取参数　199
10.2.2　使用@RequestParam获取参数　199
10.2.3　传递数组　200
10.2.4　传递JSON　200
10.2.5　通过URL传递参数　203
10.2.6　获取格式化参数　204
10.3　自定义参数转换规则　205
10.3.1　处理器获取参数逻辑　205
10.3.2　一对一转换器（Converter）　208
10.3.3　GenericConverter集合和数组转换　210
10.4　数据验证　211
10.4.1　JSR-303 验证　211
10.4.2　参数验证机制　214
10.5　数据模型　217
10.6　视图和视图解析器　219
10.6.1　视图设计　219
10.6.2　视图实例——导出PDF文件　220
10.7　文件上传　224
10.7.1　Spring MVC对文件上传的支持　224
10.7.2　开发文件上传功能　226
10.8　拦截器　228
10.8.1　拦截器的设计　228
10.8.2　开发拦截器　229
10.8.3　多个拦截器的顺序　231
10.9　国际化　234
10.9.1　国际化消息源　234
10.9.2　国际化解析器　235
10.9.3　国际化实例——SessionLocaleResolver　237
10.10　Spring MVC拾遗　240
10.10.1　@ResponseBody转换为JSON的秘密　240
10.10.2　重定向　241
10.10.3　操作会话对象　243
10.10.4　给控制器增加通知　245
10.10.5　获取请求头参数　247
第　11章 构建REST风格网站　249
11.1　REST简述　249
11.1.1　REST名词解释　249
11.1.2　HTTP的动作　250
11.1.3　REST风格的一些误区　251
11.2　使用Spring MVC开发REST风格端点　251
11.2.1　Spring MVC整合REST　252
11.2.2　使用Spring开发REST风格的端点　252
11.2.3　使用@RestController　260
11.2.4　渲染结果　261
11.2.5　处理HTTP状态码、异常和响应头　262
11.3　客户端请求RestTemplate　266
11.3.1　使用RestTemplate请求后端　267
11.3.2　获取响应头、状态码和资源交换　269
第　12章 安全——Spring Security　271
12.1　概述和简单安全认证　271
12.2　使用WebSecurityConfigurerAdapter自定义　273
12.3　自定义用户服务信息　274
12.3.1　使用内存签名服务　275
12.3.2　使用数据库定义用户认证服务　276
12.3.3　使用自定义用户认证服务　279
12.4　限制请求　281
12.4.1　配置请求路径访问权限　282
12.4.2　使用Spring表达式配置访问权限　283
12.4.3　强制使用HTTPS　285
12.4.4　防止跨站点请求伪造　285
12.5　用户认证功能　287
12.5.1　自定义登录页面　287
12.5.2　启用HTTP Basic认证　288
12.5.3　登出　289
第　13章 学点Spring其他的技术　291
13.1　异步线程池　291
13.1.1　定义线程池和开启异步可用　292
13.1.2　异步实例　292
13.2　异步消息　294
13.2.1　JMS实例——ActiveMQ　295
13.2.2　使用AMQP——RabbitMQ　299
13.3　定时任务　303
13.4　WebSocket 应用　306
13.4.1　开发简易的WebSocket服务　306
13.4.2　使用STOMP　311
第　14章 Spring 5新框架——WebFlux　319
14.1　基础概念　319
14.1.1　响应式编程的宣言　320
14.1.2　Reactor模型　320
14.1.3　Spring WebFlux的概述　322
14.1.4　WebHandler接口和运行流程　323
14.2　通过Spring MVC方式开发WebFlux服务端　325
14.2.1　开发持久层　325
14.2.2　开发服务层　327
14.2.3　开发控制层　328
14.2.4　配置服务　330
14.2.5　客户端开发——WebClient　331
14.3　深入WebFlux服务端开发　335
14.3.1　类型转换器——Converter　335
14.3.2　验证器——Validator　337
14.3.3　访问静态资源　338
14.4　深入客户端开发　339
14.4.1　处理服务端错误和转换　339
14.4.2　设置请求头　341
14.5　使用路由函数方式开发WebFlux　342
14.5.1　开发处理器　342
14.5.2　开发请求路由　346
14.5.3　使用过滤器　347
第　15章 实践一下——抢购商品　349
15.1　设计与开发　349
15.1.1　数据库表设计　349
15.1.2　使用MyBatis开发持久层　350
15.1.3　使用Spring开发业务层和控制层　353
15.1.4　测试和配置　355
15.2　高并发开发　357
15.2.1　超发现象　357
15.2.2　悲观锁　358
15.2.3　乐观锁　359
15.2.4　使用Redis处理高并发　365
第　16章 部署、测试和监控　371
16.1　部署和运行　371
16.1.1　打包　371
16.1.2　运行项目　373
16.1.3　热部署　375
16.2　测试　376
16.2.1　构建测试类　376
16.2.2　使用随机端口和REST风格测试　377
16.2.3　Mock测试　378
16.3　Actuator监控端点　379
16.4　HTTP监控　381
16.4.1　查看敏感信息　382
16.4.2　shutdown端点　383
16.4.3　配置端点　385
16.4.4　自定义端点　387
16.4.5　健康指标项　389
16.5　JMX监控　392
第　17章 分布式开发——Spring Cloud　393
17.1　服务治理和服务发现——Eureka　395
17.1.1　配置服务治理节点　395
17.1.2　服务发现　397
17.1.3　配置多个服务治理中心节点　401
17.2　微服务之间的调用　403
17.2.1　Ribbon客户端负载均衡　403
17.2.2　Feign声明式调用　406
17.3　断路器——Hystrix　409
17.3.1　使用降级服务　410
17.3.2　启用Hystrix仪表盘　412
17.4　路由网关——Zuul　415
17.4.1　构建Zuul网关　415
17.4.2　使用过滤器　418
17.5　使用@SpringCloudApplication　421
附录　Spring Boot知识点补充　423
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入浅出Spring Boot 2.x
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>云原生Java : Spring Boot、Spring Cloud与Cloud Foundry弹性系统设计
目录
前言（James Watters）.......................................................xv
前言（Rod Johnson）........................................................ xvii
前言................................................................................ xix
第Ⅰ部分　基础知识
第1 章　云原生应用程序.......................................................... 3
亚马逊的故事 ........................................................................................................ 3
平台的承诺 ............................................................................................................ 5
模式 ........................................................................................................................ 7
可扩展性 ................................................................................................................. 7
可靠性 .................................................................................................................... 8
敏捷性 ..................................................................................................................... 8
Netflix 的故事 ......................................................................................................... 9
微服务 ................................................................................................................. 11
拆分单体系统 ...................................................................................................... 12
Netflix OSS ......................................................................................................... 13
云原生Java ......................................................................................................... 14
十二要素原则 ....................................................................................................... 14
代码库 ................................................................................................................. 15
依赖 ..................................................................................................................... 15
配置 ..................................................................................................................... 16
x ｜ 目录
后端服务 ............................................................................................................. 17
构建、发布、运行 .............................................................................................. 17
进程 ..................................................................................................................... 17
端口绑定 ............................................................................................................. 18
并发 ..................................................................................................................... 18
易处理 ................................................................................................................. 18
开发/ 生产环境一致 ........................................................................................... 19
日志 ..................................................................................................................... 19
管理进程 ............................................................................................................. 19
总结 ........................................................................................................................ 20
第2 章　训练营：Spring Boot 和Cloud Foundry......................21
什么是Spring Boot ................................................................................................ 21
Spring Initializr 入门 .............................................................................................. 21
Spring Tool Suite 入门 ............................................................................................ 30
安装Spring Tool Suite（STS）............................................................................. 30
使用Spring Initializr 创建一个新项目 ................................................................ 31
Spring 指南大全 ................................................................................................... 36
遵循STS 中的指南 ............................................................................................. 38
配置 ....................................................................................................................... 40
Cloud Foundry 平台 ............................................................................................... 52
总结 ....................................................................................................................... 66
第3 章　符合十二要素程序风格的配置....................................... 67
令人迷惑的“配置”合并 ........................................................................................... 67
Spring 框架对配置的支持 .................................................................................... 67
PropertyPlaceholderConfigurer ............................................................................ 68
Environment 接口和@Value 注解 ....................................................................... 69
Profile .................................................................................................................. 71
启动配置 ............................................................................................................. 73
使用Spring Cloud Config Server 进行中心化、日志型的配置................................... 76
Spring Cloud Config Server ................................................................................. 76
Spring Cloud Config 客户端 ................................................................................ 78
安全 ..................................................................................................................... 79
目录 ｜ xi
可刷新的配置 ....................................................................................................... 79
总结 ...................................................................................................................... 83
第４章　测试..................................................................... 85
测试的构成 ........................................................................................................... 86
在Spring Boot 中进行测试 ................................................................................... 86
集成测试 ............................................................................................................. 88
测试切片 ............................................................................................................. 89
测试中的Mock ................................................................................................... 89
使用@SpringBootTest 中的Servlet 容器 ............................................................ 93
测试分片 ............................................................................................................. 94
端到端测试 ......................................................................................................... 102
测试分布式系统 ................................................................................................ 102
消费者驱动的契约测试 ..................................................................................... 104
Spring Cloud Contract ....................................................................................... 105
总结 .................................................................................................................... 113
第5 章　迁移遗留的应用程序................................................. 115
契约 .................................................................................................................... 115
迁移应用程序环境 ................................................................................................ 116
开箱即用的构建包（Buildpacks） ..................................................................... 116
自定义的构建包 ................................................................................................ 117
容器化的应用程序 ............................................................................................ 118
将应用程序迁移到云上的微重构 ........................................................................ 119
连接后端服务 .................................................................................................... 120
用Spring 实现服务平等 .................................................................................... 121
总结 .................................................................................................................... 133
第Ⅱ部分　Web 服务
第6 章　REST API........................................................... 137
伦纳德· 理查森的成熟模型 .................................................................................. 137
使用Spring MVC 实现简单的REST API ................................................................. 139
内容协商 .............................................................................................................. 142
xii ｜ 目录
读写二进制数据 ................................................................................................ 142
Google Protocol Buffers .................................................................................... 145
错误处理 ............................................................................................................. 150
超媒体 ................................................................................................................. 152
媒体类型和模式 ................................................................................................ 158
API 版本 ............................................................................................................. 159
编写REST API 文档 ........................................................................................... 162
客户端 ................................................................................................................ 167
用于临时浏览和交互的REST 客户端 ............................................................... 167
RestTemplate ..................................................................................................... 171
总结 ................................................................................................................... 177
第7 章　路由.................................................................... 179
DiscoveryClient 接口 .......................................................................................... 180
Cloud Foundry Route 服务 .................................................................................. 190
总结 ...................................................................................................................... 195
第8 章　边缘服务............................................................... 197
Greetings 服务 ...................................................................................................... 198
一个简单的边缘服务 ........................................................................................... 200
Netflix Feign ........................................................................................................ 202
使用Netflix Zuul 进行过滤和代理 ........................................................................... 204
自定义Zuul 过滤器 ........................................................................................... 214
边缘服务的安全 .................................................................................................... 218
OAuth ................................................................................................................... 219
服务端应用程序 ................................................................................................ 220
HTML5 和JavaScript 单页面应用程序 ............................................................. 221
没有用户的应用 ................................................................................................ 221
受信任的客户端 ................................................................................................ 221
Spring Security .................................................................................................... 222
Spring Cloud Security ........................................................................................... 227
一个Spring Security OAuth 授权服务器 ........................................................... 227
保护Greetings 资源服务器的安全 .................................................................... 232
创建一个受OAuth 保护的单页面应用程序 ...................................................... 238
总结 ..................................................................................................................... 247
目录 ｜ xiii
第Ⅲ部分　数据整合
第9 章　数据管理............................................................... 251
数据建模 ............................................................................................................... 251
关系数据库管理系统（RDBMS） ...................................................................... 252
NoSQL............................................................................................................... 253
Spring Data ......................................................................................................... 253
Spring Data 应用程序的结构 ............................................................................. 254
域类 ................................................................................................................... 254
库 ...................................................................................................................... 254
为领域数据组织Java 包 .................................................................................... 255
使用JDBC 访问RDBMS 数据 ............................................................................... 258
Spring 的JDBC 支持 ........................................................................................... 259
Spring Data 示例 ................................................................................................. 261
Spring Data JPA.................................................................................................... 264
Account Service ................................................................................................. 264
集成测试 ........................................................................................................... 274
Spring Data MongoDB ......................................................................................... 275
Order Service ..................................................................................................... 275
集成测试 ........................................................................................................... 282
Spring Data Neo4j ............................................................................................... 284
Inventory Service ............................................................................................... 284
集成测试 ........................................................................................................... 294
Spring Data Redis ................................................................................................ 297
高速缓存 ........................................................................................................... 298
总结 .................................................................................................................... 302
第10 章　消息系统............................................................. 303
Spring Integration 的事件驱动架构 ..................................................................... 304
消息端点 ........................................................................................................... 305
使用简单的组件构建复杂的系统 ...................................................................... 306
消息代理、桥接、竞争消费者模式和事件溯源 ................................................... 314
发布—订阅目的地 ............................................................................................ 314
点对点目的地 .................................................................................................... 315
xiv ｜ 目录
Spring Cloud Stream .......................................................................................... 315
流生产者 ........................................................................................................... 316
流消费者 ........................................................................................................... 321
总结 .................................................................................................................... 323
第11 章　批处理和任务........................................................ 325
批处理工作 ........................................................................................................ 325
Spring Batch ....................................................................................................... 326
我们的第一个批处理作业 ................................................................................. 327
调度 .................................................................................................................... 336
通过消息传递远程分区Spring 批处理作业 ............................................................. 337
任务管理 ............................................................................................................. 346
通过Workflow 进行的以工作流为中心的整合 ........................................................ 348
使用消息传递的分布式......................................................................................... 362
总结 ..................................................................................................................... 362
第12 章　数据集成............................................................. 363
分布式事务 .......................................................................................................... 364
故障隔离和优雅的降级........................................................................................ 364
saga 模式 ............................................................................................................. 369
CQRS（命令查询责任分离） .............................................................................. 369
投诉API ............................................................................................................ 371
投诉统计API .................................................................................................... 383
Spring Cloud Data Flow ...................................................................................... 385
Stream ............................................................................................................... 387
任务 ................................................................................................................... 390
REST API .......................................................................................................... 391
实现Data Flow 客户端 ...................................................................................... 392
总结 .................................................................................................................... 407
第IV 部分　生产
第13 章　可观测的系统....................................................... 411
你构建，你运行 ................................................................................................. 412
目录 ｜ xv
谋杀神秘微服务 .................................................................................................. 413
十二要素运维 ..................................................................................................... 413
新方式 ................................................................................................................. 414
可观测性 ............................................................................................................ 416
推与拉的可观测性和解析率 ................................................................................ 416
使用Spring Boot Actuator 捕获应用程序的当前状态 .......................................... 417
度量 ...................................................................................................................... 418
通过/info 端点识别服务 ......................................................................................... 431
健康检查 ............................................................................................................. 432
审计事件 .............................................................................................................. 436
应用程序日志 ...................................................................................................... 439
指定日志输出 .................................................................................................... 440
指定日志级别 .................................................................................................... 441
分布式跟踪 ......................................................................................................... 445
用Spring Cloud Sleuth 寻找线索 ...................................................................... 446
多少数据是足够的 ............................................................................................ 447
OpenZipkin ：一张图片胜过千丝万缕 ............................................................... 448
跟踪其他平台和技术 ......................................................................................... 454
仪表板 ................................................................................................................ 455
使用Hystrix 仪表板监控下游服务 .................................................................... 455
Codecentric 的Spring Boot Admin .................................................................... 459
Ordina Microservices 仪表板 ............................................................................. 462
Pivotal Cloud Foundry 的AppsManager ............................................................ 463
修复 .................................................................................................................. 465
总结 ................................................................................................................... 467
第14 章　服务代理.............................................................................................469
创建后台服务 .................................................................................................. 470
平台视图 ............................................................................................................ 472
使用Spring Cloud Cloud Foundry Service Broker 实现服务代理 ........................ 473
简单的Amazon S3 服务代理 ............................................................................ 473
服务目录 ........................................................................................................... 474
管理服务实例 .................................................................................................... 476
服务绑定 ........................................................................................................... 482
保护服务代理 .................................................................................................... 486
xvi ｜ 目录
部署 ................................................................................................................... 487
使用BOSH 发布 ............................................................................................... 487
使用Cloud Foundry 发布 .................................................................................. 488
注册Amazon S3 Service Broker ....................................................................... 489
创建Amazon S3 服务实例 ................................................................................ 490
消费服务实例 .................................................................................................... 491
S3 客户端应用程序 ........................................................................................... 493
运行测试 ........................................................................................................... 496
总结 .................................................................................................................. 496
第15 章　持续交付.............................................................497
持续集成之外 .................................................................................................. 497
John Allspaw 在Flickr 以及后来的Etsy ........................................................... 498
Netflix 的Adrian Cockroft ................................................................................ 499
亚马逊的持续交付 ............................................................................................ 500
流水线 ................................................................................................................ 500
测试 .................................................................................................................... 501
持续交付微服务 ................................................................................................502
工具 .................................................................................................................. 503
Concourse ......................................................................................................... 503
容器 ................................................................................................................... 504
持续交付微服务 ................................................................................................. 504
安装Concourse ................................................................................................. 505
基本的管道设计 ................................................................................................ 506
持续集成 ........................................................................................................... 518
消费者驱动的协约测试...................................................................................... 518
User 微服务流水线 ............................................................................................ 519
数据 ................................................................................................................... 522
生产 ................................................................................................................... 523
第V 部分　附录
附录A　在Java EE 中使用Spring Boot................................527
索引............................................................................... 552
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>云原生Java : Spring Boot、Spring Cloud与Cloud Foundry弹性系统设计
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入实践Spring Boot
前　言
第一部分　基础应用开发
第1章　Spring Boot入门 3
1.1　配置开发环境 3
1.1.1　安装JDK 3
1.1.2　安装InterlliJ IDEA 4
1.1.3　安装Apache Maven 4
1.1.4　安装Git客户端 5
1.2　创建项目工程 8
1.2.1　使用Maven新建项目 8
1.2.2　使用Spring Initializr新建项目 11
1.3　使用Spring Boot 14
1.3.1　Maven依赖管理 14
1.3.2　一个简单的实例 17
1.4　运行与发布 18
1.4.1　在IDEA环境中运行 18
1.4.2　将应用打包发布 19
1.5　关于Spring Boot配置 22
1.6　小结 23
第2章　在Spring Boot中使用数据库 24
2.1　使用MySQL 24
2.1.1　MySQL依赖配置 25
2.1.2　实体建模 25
2.1.3　实体持久化 27
2.1.4　MySQL测试 29
2.2　使用Redis 33
2.2.1　Redis依赖配置 33
2.2.2　创建Redis服务类 34
2.2.3　Redis测试 36
2.3　使用MongoDB 38
2.3.1　MongoDB依赖配置 38
2.3.2　文档建模 39
2.3.3　文档持久化 40
2.3.4　MongoDB测试 41
2.4　使用Neo4j 43
2.4.1　Neo4j依赖配置 43
2.4.2　节点和关系实体建模 43
2.4.3　节点实体持久化 45
2.4.4　Neo4j测试 46
2.5　小结 49
第3章　Spring Boot界面设计 50
3.1　模型设计 50
3.1.1　节点实体建模 51
3.1.2　关系实体建模 51
3.1.3　分页查询设计 52
3.2　控制器设计 53
3.2.1　新建控制器 53
3.2.2　查看控制器 53
3.2.3　修改控制器 54
3.2.4　删除控制器 55
3.2.5　分页查询控制器 55
3.3　使用Thymeleaf模板 56
3.3.1　Thymeleaf配置 56
3.3.2　Thymeleaf功能简介 57
3.4　视图设计 60
3.4.1　列表视图设计 60
3.4.2　新建视图设计 64
3.4.3　查看视图设计 68
3.4.4　修改视图设计 70
3.4.5　删除视图设计 72
3.5　运行与发布 73
3.6　小结 74
第4章　提高数据库访问性能 75
4.1　使用Druid 75
4.1.1　配置Druid依赖 76
4.1.2　关于XML配置 76
4.1.3　Druid数据源配置 77
4.1.4　开启监控功能 78
4.2　扩展JPA功能 80
4.2.1　扩展JPA接口 81
4.2.2　装配自定义的扩展接口 83
4.2.3　使用扩展接口 85
4.3　使用Redis做缓存 86
4.3.1　使用Spring Cache注解 86
4.3.2　使用RedisTemplate 88
4.4　Web应用模块 91
4.4.1　引用数据管理模块 91
4.4.2　Web应用配置 92
4.5　运行与发布 94
4.6　小结 95
第5章　Spring Boot安全设计 96
5.1　依赖配置管理 96
5.2　安全策略配置 97
5.2.1　权限管理规则 98
5.2.2　登录成功处理器 99
5.2.3　防攻击策略 100
5.2.4　记住登录状态 102
5.3　登录认证设计 103
5.3.1　用户实体建模 103
5.3.2　用户身份验证 104
5.3.3　登录界面设计 106
5.3.4　验证码验证 108
5.4　权限管理设计 109
5.4.1　权限管理配置 109
5.4.2　权限管理过滤器 110
5.4.3　权限配置资源管理器 111
5.4.4　权限管理决断器 112
5.5　根据权限设置链接 113
5.6　运行与发布 116
5.6.1　系统初始化 116
5.6.2　系统运行与发布 118
5.7　小结 119
第二部分　分布式应用开发
第6章　Spring Boot SSO 123
6.1　模块化设计 123
6.2　登录认证模块 124
6.2.1　使用OAuth2 124
6.2.2　创建数字证书 125
6.2.3　认证服务端配置 125
6.3　安全配置模块 128
6.4　SSO客户端 129
6.4.1　客户端配置 129
6.4.2　登录登出设计 130
6.5　共享资源服务 132
6.5.1　提供共享资源接口 133
6.5.2　使用共享资源 134
6.5.3　查询登录用户的详细信息 135
6.6　运行与发布 136
6.7　小结 138
第7章　使用分布式文件系统 139
7.1　FastDFS安装 139
7.1.1　下载安装包 141
7.1.2　安装服务 141
7.1.3　Tracker Server配置 142
7.1.4　Storage Server配置 145
7.1.5　启动服务 148
7.1.6　客户端测试 148
7.2　FastFDS客户端 149
7.2.1　客户端配置 150
7.2.2　客户端服务类 150
7.3　使用定制方式上传图片 151
7.3.1　实体建模 151
7.3.2　上传图片 152
7.4　使用富文本编辑器上传图片 156
7.4.1　使用富文本编辑器 156
7.4.2　实现文件上传 157
7.5　使用本地文件库 158
7.5.1　本地文件库建模 159
7.5.2　文件保存方法 159
7.5.3　文件库管理 161
7.6　运行与发布 163
7.7　小结 164
第8章　云应用开发 165
8.1　使用配置管理 166
8.1.1　创建配置管理服务器 167
8.1.2　使用配置管理的客户端 168
8.1.3　实现在线更新 171
8.1.4　更新所有客户端的配置 172
8.2　使用发现服务 174
8.2.1　创建发现服务器 174
8.2.2　使用发现服务的客户端配置 175
8.2.3　发现服务器测试 175
8.3　使用动态路由和断路器 176
8.3.1　依赖配置 176
8.3.2　共享REST资源 177
8.3.3　通过路由访问REST资源 180
8.3.4　使用断路器功能 182
8.3.5　路由器和断路器测试 183
8.4　使用监控服务 184
8.4.1　创建监控服务器 184
……
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>深入实践Spring Boot
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>从企业级开发到云原生微服务：Spring Boot实战 : 本书不仅讲解了Spring 5.2和Spring Boot 2.2的相关知识，还介绍了微
目录
第 1 章 初识 Spring Boot ............................................................................................... 1
1.1 Spring Boot 概述 ............................................................................................................ 1 1.2 快速建立 Spring Boot 应用 ........................................................................................... 2
1.2.1 安装 Java ............................................................................................................. 2
1.2.2 使用 Spring Initializr ........................................................................................... 2
1.2.3 第一段代码 ......................................................................................................... 3
1.3 体验 Spring Boot ............................................................................................................ 4 1.3.1 Spring Boot 的应用结构 ..................................................................................... 4
1.3.2 build.gradle .......................................................................................................... 5
1.3.3 QuickStartApplication ......................................................................................... 5
1.3.4 application.properties .......................................................................................... 6
1.4 小结 ................................................................................................................................ 6
第 2 章 函数式编程 ........................................................................................................ 7
2.1 了解函数式编程 ............................................................................................................ 7
2.2 Lambda 表达式 .............................................................................................................. 7
2.2.1 了解Lambda 表达式 .......................................................................................... 7
2.2.2 把 Lambda 表达式作为参数 .............................................................................. 8
2.3 函数接口 ........................................................................................................................ 9
2.3.1 Predicate ............................................................................................................ 10
2.3.2 Function ............................................................................................................. 12
2.3.3 Consumer .......................................................................................................... 14
2.3.4 Supplier ............................................................................................................. 14
2.3.5 Operator ............................................................................................................. 15
2.3.6 Comparator ........................................................................................................ 15
2.3.7 自定义函数接口 ............................................................................................... 16
2.4 方法引用 ...................................................................................................................... 16
2.4.1 构造器方法引用 ............................................................................................... 16
2.4.2 静态方法引用 ................................................................................................... 17
2.4.3 实例方法引用 ................................................................................................... 18
2.4.4 引用特定类的任意对象的方法 ....................................................................... 18
2.5 Stream ........................................................................................................................... 18
2.5.1 Stream 简介 ....................................................................................................... 19
2.5.2 获得 Stream ....................................................................................................... 19
2.5.3 中间操作 ........................................................................................................... 20
2.5.4 终结操作 ........................................................................................................... 23
2.6 Optional ........................................................................................................................ 27
2.6.1 获得Optional .................................................................................................... 28
2.6.2 Optional 的用法 ................................................................................................ 28
2.7小结......................................................................................................................29
第 3 章 Spring 5.X 基础 ............................................................................................... 30
3.1 IoC 容器 ....................................................................................................................... 30
3.2 Spring Bean 的配置 ..................................................................................................... 31
3.2.1 注解配置（@Component） ............................................................................. 31
3.2.2 Java 配置（@Configuration 和@Bean） ........................................................ 31
3.2.3 依赖注入（Dependency Injection） ................................................................ 32
3.2.4 运行检验（CommandLineRunner） ............................................................... 37
3.2.5 Bean 的 Scope ................................................................................................... 38
3.2.6 Bean 的生命周期 .............................................................................................. 40
3.2.7 应用环境 ........................................................................................................... 43
3.2.8 条件配置（@Conditional） ............................................................................ 46
3.2.9 开启配置（@Enable*和@Import） ................................................................ 47
3.3 对 Bean 的处理（BeanPostProcessor） ...................................................................... 53
3.4 Spring Aware 容器 ....................................................................................................... 54
3.5 Bean 之间的事件通信 ................................................................................................. 57
3.6 Spring EL ...................................................................................................................... 59
3.7 AOP .............................................................................................................................. 61
3.8 注解工作原理 .............................................................................................................. 64
3.8.1 BeanPostProcessor ............................................................................................ 64
3.8.2 BeanFactoryPostProcessor ................................................................................ 66
3.8.3 使用AOP .......................................................................................................... 68
3.8.4 组合元注解 ....................................................................................................... 68
3.9小结......................................................................................................................68
第 4 章 深入 Spring Boot ............................................................................................. 69
4.1 Spring Boot 介绍 .......................................................................................................... 69
4.2 Spring Boot 的“魔法” .................................................................................................. 69
4.2.1 加载自动配置 ................................................................................................... 69
4.2.2 实现自动配置 ................................................................................................... 71
4.3 Spring Boot 的配置 ...................................................................................................... 73
4.3.1 应用配置 ........................................................................................................... 74
4.3.2 修改默认配置 ................................................................................................... 76
4.3.3 外部配置 ........................................................................................................... 79
4.4 日志和报告 .................................................................................................................. 91
4.4.1 日志 ................................................................................................................... 91
4.4.2 报告 ................................................................................................................... 93
4.5 多线程任务和计划任务 .............................................................................................. 94
4.5.1 Task Executor .................................................................................................... 94
4.5.2 Task Scheduler .................................................................................................. 97
4.6 Gradle 插件 .................................................................................................................. 99
4.6.1 依赖 ................................................................................................................... 99
4.6.2 Spring Boot Starter .......................................................................................... 100
4.6.3 插件任务 ......................................................................................................... 100
4.7 自定义Starter ............................................................................................................. 100
4.7.1 包装技术库 ..................................................................................................... 101
4.7.2 Starter 的结构 ................................................................................................. 103
4.7.3 autoconfigure 模块 .......................................................................................... 105
4.7.4 Starter 模块 ..................................................................................................... 107
4.7.5 使用 Starter ..................................................................................................... 108
4.8 Spring Boot Actuator .................................................................................................. 110
4.8.1 常用端点 ......................................................................................................... 110
4.8.2 自定义 ............................................................................................................. 119
4.8.3 使用 Prometheus 和Grafana 监控指标 ......................................................... 124
4.9 小结 ............................................................................................................................ 128
第 5 章 Spring Web MVC .......................................................................................... 129
5.1 Spring Web MVC 简介 .............................................................................................. 129
5.2 用 Spring Boot 学习Web MVC ................................................................................ 129
5.2.1 核心注解 ......................................................................................................... 129
5.2.2 RESTful 服务 .................................................................................................. 130
5.2.3 @ControllerAdvice ......................................................................................... 146
5.2.4 @RestControllerAdvice .................................................................................. 151
5.2.5 JSON 定制 ...................................................................................................... 156
5.2.6 RestTemplate ................................................................................................... 159
5.3 Web MVC 配置 .......................................................................................................... 161
5.3.1 Spring MVC 的工作原理 ............................................................................... 161
5.3.2 配置MVC ....................................................................................................... 161
5.3.3 Interceptor ....................................................................................................... 162
5.3.4 Formatter ......................................................................................................... 164
5.3.5 HttpMessageConverter .................................................................................... 166
5.3.6 方法参数和返回值处理设置 ......................................................................... 169
5.3.7 初始化数据绑定设置 ..................................................................................... 176
5.3.8 类型转换原理与设置 ..................................................................................... 176
5.3.9 路径匹配和内容协商 ..................................................................................... 183
5.3.10 JSON ............................................................................................................. 188
5.3.11 其他外部属性配置 ......................................................................................... 189
5.4 Servlet 容器 ................................................................................................................ 191
5.4.1 注册 Servlet、Filter 和 Listener ..................................................................... 191
5.4.2 配置 Servlet 容器 ............................................................................................ 196
5.5 异步请求 .................................................................................................................... 202
5.5.1 Servlet 3.0 异步返回 ...................................................................................... 202
5.5.2 HTTP Streaming.............................................................................................. 206
5.5.3 HTTP/2 ............................................................................................................ 212
5.6 小结 ............................................................................................................................ 214
第 6 章 数据访问 ....................................................................................................... 215
6.1 Spring Data Repository ............................................................................................. 215
6.1.1 DDD 与 Spring Data Repository ..................................................................... 215
6.1.2 查询方法 ......................................................................................................... 218
6.2 关系数据库——Spring Data JPA .............................................................................. 218
6.2.1 JPA、Hibernate 和Spring Data JPA .............................................................. 218
6.2.2 环境准备 ......................................................................................................... 218
6.2.3 自动配置 ......................................................................................................... 220
6.2.4 定义聚合 ......................................................................................................... 221
6.2.5 定义聚合 Repository ...................................................................................... 224
6.2.6 查询 ................................................................................................................. 226
6.2.7 事件监听 ......................................................................................................... 238
6.2.8 领域事件 ......................................................................................................... 242
6.2.9 审计功能 ......................................................................................................... 245
6.2.10 Web 支持 ...................................................................................................... 246
6.2.11 数据库初始化 ............................................................................................... 248
6.3 NoSQL——Spring Data Elasticsearch ....................................................................... 252
6.3.1 Elascticsearch 简介 ......................................................................................... 252
6.3.2 环境准备 ......................................................................................................... 252
6.3.3 自动配置 ......................................................................................................... 253
6.3.4 定义聚合 ......................................................................................................... 254
6.3.5 定义聚合 Repository ...................................................................................... 255
6.3.6 查询 ................................................................................................................. 256
6.4 数据缓存 .................................................................................................................... 261
6.4.1 Spring Boot 与缓存......................................................................................... 261
6.4.2 环境准备 ......................................................................................................... 262
6.4.3 使用缓存注解 ................................................................................................. 264
6.5 小结 ............................................................................................................................ 266
第 7 章 安全控制 ....................................................................................................... 267
7.1 Spring Security 的应用 .............................................................................................. 267
7.1.1 Spring Boot 的自动配置 ................................................................................. 267
7.1.2 开启Web 安全配置 ....................................................................................... 268
7.1.3 定制Web 安全配置 ....................................................................................... 268
7.1.4 Authentication ................................................................................................. 269
7.1.5 Authorization ................................................................................................... 281
7.1.6 Spring Data 集成 ............................................................................................. 294
7.2 Spring Security 实战 .................................................................................................. 295
7.3 OAuth 2.0 ................................................................................................................... 301
7.3.1 OAuth 2.0 Authorization Server ...................................................................... 301
7.3.2 OAuth 2.0 Resource Server ............................................................................. 310
7.3.3 OAuth 2.0 Client ............................................................................................. 317
7.4 小结 ............................................................................................................................ 322
第 8 章 响应式编程 .................................................................................................... 323
8.1 Project Reactor............................................................................................................ 323
8.1.1 Reactive Streams 的基础接口 ........................................................................ 323
8.1.2 Flux 和 Mono .................................................................................................. 325
8.2 Spring WebFlux .......................................................................................................... 327
8.2.1 Spring WebFlux 基础 ..................................................................................... 327
8.2.2 Spring Boot 的自动配置 ................................................................................. 328
8.2.3 注解控制器 ..................................................................................................... 329
8.2.4 函数式端点 ..................................................................................................... 332
8.2.5 Spring WebFlux 的配置 ................................................................................. 334
8.3 Reactive NoSQL ......................................................................................................... 334
8.3.1 响应式 Elasticsearch ....................................................................................... 335
8.3.2 响应式 MongoDB ........................................................................................... 339
8.4 Reactive 关系型数据库：R2DBC ............................................................................. 342
8.4.1 安装 PostgreSQL ............................................................................................ 343
8.4.2 Spring Boot 的自动配置 ................................................................................. 343
8.4.3 示例 ................................................................................................................. 344
8.5 Reactive Spring Security ............................................................................................ 347
8.5.1 Reactive Spring Security 原理 ........................................................................ 347
8.5.2 Spring Boot 的自动配置 ................................................................................. 347
8.5.3 示例 ................................................................................................................. 348
8.6 小结 ............................................................................................................................ 354
第 9 章 事件驱动 ....................................................................................................... 355
9.1 JMS ............................................................................................................................. 355
9.1.1 安装Apache ActiveMQ Artemis .................................................................... 355
9.1.2 新建应用 ......................................................................................................... 356
9.1.3 Spring Boot 的自动配置 ................................................................................. 356
9.1.4 示例 ................................................................................................................. 356
9.1.5 Topic 和 Queue ............................................................................................... 358
9.2 RabbitMQ ................................................................................................................... 360
9.3 Kafka .......................................................................................................................... 367
9.4 Websocket .................................................................................................................. 374
9.4.1 STOMP Websocket ......................................................................................... 374
9.4.2 Reactive Websocket ........................................................................................ 379
9.5 RSocket ....................................................................................................................... 382
9.5.1 新建应用 ......................................................................................................... 382
9.5.2 Spring Boot 的自动配置 ................................................................................. 383
9.5.3 示例 ................................................................................................................. 383
9.6 小结 ............................................................................................................................ 388
第 10 章 系统集成与批处理 ....................................................................................... 389
10.1 Spring Integration ..................................................................................................... 389
10.1.1 Spring Integration 基础 ................................................................................. 389
10.1.2 Spring Integration Java DSL ......................................................................... 391
10.1.3 示例 ............................................................................................................... 392
10.2 Spring Batch ............................................................................................................. 395
10.2.1 Spring Batch 的流程 ..................................................................................... 396
10.2.2 Spring Boot 的自动配置 ............................................................................... 396
10.2.3 示例 ............................................................................................................... 397
10.3 小结 .......................................................................................................................... 402
第 11 章 Spring Cloud 与微服务 ................................................................................ 403 11.1 微服务基础 .............................................................................................................. 403 11.1.1 微服务和云原生应用 ................................................................................... 403
11.1.2 领域驱动设计 ............................................................................................... 404
11.2 Spring Cloud ............................................................................................................. 405
11.2.1 服务发现 ....................................................................................................... 405
11.2.2 配置管理 ....................................................................................................... 408
11.2.3 同步服务交互 ............................................................................................... 412
11.2.4 异步服务交互 ............................................................................................... 417
11.2.5 响应式异步交互 ........................................................................................... 427
11.2.6 应用网关：Spring Cloud Gateway .............................................................. 430
11.2.7 认证授权 ....................................................................................................... 433
11.3 小结 .......................................................................................................................... 442
第 12 章 Kubernetes 与微服务 .................................................................................. 443
12.1 Kubernetes ................................................................................................................ 443
12.1.1 安装 ............................................................................................................... 443
12.1.2 Kubernetes 基础知识 .................................................................................... 445
12.1.3 Helm .............................................................................................................. 460
12.1.4 DevOps .......................................................................................................... 463
12.1.5 安装Jenkins .................................................................................................. 464
12.1.6 微服务示例 ................................................................................................... 465
12.1.7 镜像仓库和 Dockerfile ................................................................................. 467
12.1.8 使用Helm 打包应用 .................................................................................... 471
12.1.9 Jenkins 流程 .................................................................................................. 475
12.2 Service Mesh 和 Istio ............................................................................................... 481
12.2.1 安装Istio ....................................................................................................... 482
12.2.2 微服务示例 ................................................................................................... 483
12.3 小结 .......................................................................................................................... 490
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>从企业级开发到云原生微服务：Spring Boot实战 : 本书不仅讲解了Spring 5.2和Spring Boot 2.2的相关知识，还介绍了微
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Spring Boot 2精髓 : 从构建小系统到架构分布式大系统
第1章　Java EE简介
1.1　Java EE
1.1.1　Java EE架构
1.1.2　Java EE的缺点
1.2　Spring
1.2.1　Spring IoC容器和AOP
1.2.2　Spring的缺点
1.3　Spring Boot
1.4　Hello，Spring Boot
1.4.1　创建一个Maven工程
1.4.2　增加Web支持
1.4.3　Hello Spring Boot示例
1.4.4　使用热部署
1.4.5　添加REST支持
第2章　Spring Boot基础
2.1　检查Java环境与安装Java
2.2　安装和配置Maven
2.2.1　Maven介绍
2.2.2　安装Maven
2.2.3　设置Maven
2.2.4　使用IDE设置Maven
2.2.5　Maven的常用命令
2.3　Spring核心技术
2.3.1　Spring的历史
2.3.2　Spring容器介绍
2.3.3　Spring AOP介绍
第3章　MVC框架
3.1　集成MVC框架
3.1.1　引入依赖
3.1.2　Web应用目录结构
3.1.3　Java包名结构
3.2　使用Controller
3.3　URL映射到方法
3.3.1　@RequestMapping
3.3.2　URL路径匹配
3.3.3　HTTP method匹配
3.3.4　consumes和produces
3.3.5　params和header匹配
3.4　方法参数
3.4.1　PathVariable
3.4.2　Model&ModelAndView
3.4.3　JavaBean接受HTTP参数
3.4.4　@RequsetBody接受JSON
3.4.5　MultipartFile
3.4.6　@ModelAttribute
3.4.7　@InitBinder
3.5　验证框架
3.5.1　JSR-303
3.5.2　MVC中使用@Validated
3.5.3　自定义校验
3.6　WebMvcConfigurer
3.6.1　拦截器
3.6.2　跨域访问
3.6.3　格式化
3.6.4　注册Controller
3.7　视图技术
3.7.1　使用Freemarker
3.7.2　使用Beetl
3.7.3　使用Jackson
3.7.4　Redirect和Forward
3.8　通用错误处理
3.9　@Service和@Transactional
3.9.1　声明一个Service类
3.9.2　事务管理
3.10　curl命令
第4章　视图技术
4.1　Beetl模板引擎
4.1.1　安装Beetl
4.1.2　设置定界符号和占位符
4.1.3　配置Beetl
4.1.4　groupTemplate
4.2　使用变量
4.2.1　全局变量
4.2.2　局部变量
4.2.3　共享变量
4.2.4　模板变量
4.3　表达式
4.3.1　计算表达式
4.3.2　逻辑表达式
4.4　控制语句
4.4.1　循环语句
4.4.2　条件语句
4.4.3　try catch
4.5　函数调用
4.6　格式化函数
4.7　直接调用Java
4.8　标签函数
4.9　HTML标签
4.10　安全输出
4.11　高级功能
4.11.1　配置Beetl
4.11.2　自定义函数
4.11.3　自定义格式化函数
4.11.4　自定义标签函数
4.11.5　自定义HTML标签
4.11.6　布局
4.11.7　AJAX局部渲染
4.12　脚本引擎
4.13　JSON技术
4.13.1　在Spring Boot中使用Jackson
4.13.2　自定义ObjectMapper
4.13.3　Jackson的三种使用方式
4.13.4　Jackson树遍历
4.13.5　对象绑定
4.13.6　流式操作
4.13.7　Jackson注解
4.13.8　集合的反序列化
4.14　MVC分离开发
4.14.1　集成WebSimulate
4.14.2　模拟JSON响应
4.14.3　模拟模板渲染
第5章　数据库访问
5.1　配置数据源
5.2　Spring JDBC Template
5.2.1　查询
5.2.2　修改
5.2.3　JdbcTemplate增强
5.3　BeetlSQL介绍
5.3.1　BeetlSQL功能概览
5.3.2　添加Maven依赖
5.3.3　配置BeetlSQL
5.3.4　SQLManager
5.3.5　使用SQL文件
5.3.6　Mapper
5.3.7　使用实体
5.4　SQLManager内置CRUD
5.4.1　内置的插入API
5.4.2　内置的更新（删除）API
5.4.3　内置的查询API
5.4.4　代码生成方法
5.5　使用sqlId
5.5.1　md文件命名
5.5.2　md文件构成
5.5.3　调用sqlId
5.5.4　翻页查询
5.5.5　TailBean
5.5.6　ORM查询
5.5.7　其他API
5.5.8　Mapper详解
5.6　BeetlSQL的其他功能
5.6.1　常用函数和标签
5.6.2　主键设置
5.6.3　BeetlSQL注解
5.6.4　NameConversion
5.6.5　锁
第6章　Spring Data JPA
6.1　集成Spring Data JPA
6.1.1　集成数据源
6.1.2　配置JPA支持
6.1.3　创建Entity
6.1.4　简化Entity
6.2　Repository
6.2.1　CrudRepository
6.2.2　PagingAndSortingRepository
6.2.3　JpaRepository
6.2.4　持久化Entity
6.2.5　Sort
6.2.6　Pageable和Page
6.2.7　基于方法名字查询
6.2.8　@Query查询
6.2.9　使用JPA Query
6.2.10　Example查询
第7章　Spring Boot配置
7.1　配置Spring Boot
7.1.1　服务器配置
7.1.2　使用其他Web服务器
7.1.3　配置启动信息
7.1.4　配置浏览器显示ico
7.2　日志配置
7.3　读取应用配置
7.3.1　Environment
7.3.2　@Value
7.3.3　@ConfigurationProperties
7.4　Spring Boot自动装配
7.4.1　@Configuration和@Bean
7.4.2　Bean条件装配
7.4.3　Class条件装配
7.4.4　Environment装配
7.4.5　其他条件装配
7.4.6　联合多个条件
7.4.7　Condition接口
7.4.8　制作Starter
第8章　部署Spring Boot应用
8.1　以jar文件运行
8.2　以war方式部署
8.3　多环境部署
8.4　@Profile注解
第9章　Testing单元测试
9.1　JUnit介绍
9.1.1　JUnit的相关概念
9.1.2　JUnit测试
9.1.3　Assert
9.1.4　Suite
9.2　Spring Boot单元测试
9.2.1　测试范围依赖
9.2.2　Spring Boot测试脚手架
9.2.3　测试Service
9.2.4　测试MVC
9.2.5　完成MVC请求模拟
9.2.6　比较MVC的返回结果
9.2.7　JSON比较
9.3　Mockito
9.3.1　模拟对象
9.3.2　模拟方法参数
9.3.3　模拟方法返回值
9.4　面向数据库应用的单元测试
9.4.1　@Sql
9.4.2　XLSUnit
9.4.3　XLSUnit的基本用法
第10章　REST
10.1　REST简介
10.1.1　REST风格的架构
10.1.2　使用“api”作为上下文
10.1.3　增加一个版本标识
10.1.4　标识资源
10.1.5　确定HTTP Method
10.1.6　确定HTTP Status
10.1.7　REST VS. WebService
10.2　Spring Boot集成REST
10.2.1　集成REST
10.2.2　@RestController
10.2.3　REST Client
10.3　Swagger UI
10.3.1　集成Swagger
10.3.2　Swagger规范
10.3.3　接口描述
10.3.4　查询参数描述
10.3.5　URI中的参数
10.3.6　HTTP头参数
10.3.7　表单参数
10.3.8　文件上传参数
10.3.9　整个请求体作为参数
10.4　模拟REST服务
第11章　MongoDB
11.1　安装MongoDB
11.2　使用shell
11.2.1　指定数据库
11.2.2　插入文档
11.2.3　查询文档
11.2.4　更新操作
11.2.5　删除操作
11.3　Spring Boot集成MongoDB
11.4　增删改查
11.4.1　增加API
11.4.2　根据主键查询API
11.4.3　查询API
11.4.4　修改API
11.4.5　删除API
11.4.6　使用MongoDatabase
11.4.7　打印日志
第12章　Redis
12.1　安装Redis
12.2　使用redis-cli
12.2.1　安全设置
12.2.2　基本操作
12.2.3　keys
12.2.4　Redis List
12.2.5　Redis Hash
12.2.6　Set
12.2.7　Pub/Sub
12.3　Spring Boot集成Redis
12.4　使用StringRedisTemplate
12.4.1　opsFor
12.4.2　绑定Key的操作
12.4.3　RedisConnection
12.4.4　Pub/Sub
12.5　序列化策略
12.5.1　默认序列化策略
12.5.2　自定义序列化策略
第13章　Elasticsearch
13.1　Elasticsearch介绍
13.1.1　安装Elasticsearch
13.1.2　Elasticsearch的基本概念
13.2　使用REST访问Elasticsearch
13.2.1　添加文档
13.2.2　根据主键查询
13.2.3　根据主键更新
13.2.4　根据主键删除
13.2.5　搜索文档
13.2.6　联合多个索引搜索
13.3　使用RestTemplate访问ES
13.3.1　创建Book
13.3.2　使用RestTemplate获取搜索结果
13.4　Spring Data Elastic
13.4.1　安装Spring Data
13.4.2　编写Entity
13.4.3　编写Dao
13.4.4　编写Controller
第14章　Cache
14.1　关于Cache
14.1.1　Cache的组件和概念
14.1.2　Cache的单体应用
14.1.3　使用专有的Cache服务器
14.1.4　使用一二级缓存服务器
14.2　Spring Boot Cache
14.3　注释驱动缓存
14.3.1　@Cacheable
14.3.2　Key生成器
14.3.3　@CachePut
14.3.4　@CacheEvict
14.3.5　@Caching
14.3.6　@CacheConfig
14.4　使用Redis Cache
14.4.1　集成Redis缓存
14.4.2　禁止缓存
14.4.3　定制缓存
14.5　Redis缓存原理
14.6　实现Redis两级缓存
14.6.1　实现TwoLevelCacheManager
14.6.2　创建RedisAndLocalCache
14.6.3　缓存同步说明
14.6.4　将代码组合在一起
第15章　Spring Session
15.1　水平扩展实现
15.2　Nginx的安装和配置
15.2.1　安装Nginx
15.2.2　配置Nginx
15.3　Spring Session
15.3.1　Spring Session介绍
15.3.2　使用Redis
15.3.3　Nginx+Redis
第16章　Spring Boot和ZooKeeper
16.1　ZooKeeper
16.1.1　ZooKeeper的数据结构
16.1.2　安装ZooKeeper
16.1.3　ZooKeeper的基本命令
16.1.4　领导选取演示
16.1.5　分布式锁演示
16.1.6　服务注册演示
16.2　Spring Boot集成ZooKeeper
16.2.1　集成Curator
16.2.2　Curator API
16.3　实现分布式锁
16.4　服务注册
16.4.1　通过ServiceDiscovery注册服务
16.4.2　获取服务
16.5　领导选取
第17章　监控Spring Boot应用
17.1　安装Acutator
17.2　HTTP跟踪
17.3　日志查看
17.4　线程栈信息
17.5　内存信息
17.6　查看URL映射
17.7　查看Spring容器管理的Bean
17.8　其他监控
17.9　编写自己的监控信息
17.9.1　编写HealthIndicator
17.9.2　自定义监控
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Spring Boot 2精髓 : 从构建小系统到架构分布式大系统
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>微服务架构基础:Spring Boot+Spring Cloud+Docker
第1章认识微服务架构1
1.1 为什么需要微服务架构 2
1.1.1 传统单体应用架构的问题 2
1.1.2 如何解决传统应用架构的问题 3
1.2 微服务架构是什么 4
1.2.1 微服务架构的概念 4
1.2.2 微服务架构的优点 5
1.2.3 微服务架构的不足 6
1.2.4 微服务架构与SOA的区别 6
1.3 如何构建微服务架构 6
1.3.1 微服务的拆分 7
1.3.2 微服务架构的组件 7
1.3.3 微服务架构的搭建 7
1.3.4 微服务架构的技术选型 8
1.4 本章小结 10
第2章 初识Spring Boot 11
2.1 Spring Boot介绍 12
2.1.1 Spring Boot的由来和特点 12
2.1.2 Spring Boot的使用要求 12
2.2 Spring Boot入门 13
2.2.1 Spring Boot项目的快速搭建 13
2.2.2 第一个Spring Boot程序 18
2.3 Spring Boot的工作机制 20
2.3.1 @Spring BootApplication 20
2.3.2 Spring Application 21
2.4 本章小结 22
第3章 Spring Boot应用开发 23
3.1 Spring Boot与MyBatis的集成 24
3.2 Spring Boot与Redis的集成 29
3.2.1 添加Redis缓存 29
3.2.2 清除Redis缓存 31
3.3 Spring Boot与ActiveMQ的集成 31
3.3.1 使用内嵌的ActiveMQ 31
3.3.2 使用外部的ActiveMQ 33
3.4 Spring Boot应用的打包和部署 35
3.4.1 JAR包 35
3.4.2 WAR包 36
3.5 本章小结 37
第4章 Spring Cloud（上） 38
4.1 Spring Cloud简介 39
4.1.1 什么是Spring Cloud 39
4.1.2 Spring Cloud的特点 39
4.1.3 Spring Cloud的版本 39
4.2 服务发现 40
4.2.1 Eureka介绍 40
4.2.2 如何使用Eureka注册服务 41
4.2.3 如何实现服务间的调用 47
4.3 客户端负载均衡 50
4.3.1 Ribbon介绍 50
4.3.2 Ribbon的使用 51
4.4 本章小结 53
第5章 Spring Cloud（下） 54
5.1 服务容错保护 55
5.1.1 Spring Cloud Hystrix介绍 55
5.1.2 Spring Cloud Hystrix的使用 56
5.1.3 HystrixDashboard的使用 59
5.2 API网关服务 63
5.2.1 为什么需要API网关 63
5.2.2 如何使用Zuul构建API网关服务 64
5.3 分布式配置管理 68
5.3.1 Spring Cloud Config简介 68
5.3.2 使用本地存储的方式实现配置管理 69
5.3.3 使用Git存储的方式实现配置管理 73
5.4 本章小结 76
第6章 初识Docker 77
6.1 Docker概述 78
6.1.1 什么是Docker 78
6.1.2 Docker的特点 78
6.1.3 Docker与虚拟机的区别 79
6.2 Docker的安装要求 79
6.3 Docker的安装方式 80
6.3.1 在线安装 80
6.3.2 离线安装 82
6.3.3 脚本文件安装 83
6.3.4 安装时的问题及解决方法 84
6.4 Docker的运行机制 85
6.4.1 Docker的引擎 85
6.4.2 Docker的架构 85
6.5 Docker的底层技术 87
6.6 本章小结 87
第7章 Docker的使用 88
7.1 Docker入门程序 89
7.2 Dockerfile介绍 92
7.2.1 Dockerfile基本结构 92
7.2.2 Dockerfile常用指令 93
7.2.3 dockerignore文件 95
7.3 Docker客户端常用指令 96
7.3.1 Docker常用操作指令 96
7.3.2 Docker管理指令 101
7.4 Docker镜像管理 102
7.4.1 Docker镜像管理工具 102
7.4.2 Docker Hub远程镜像管理 103
7.4.3 Docker Registry本地私有仓库搭建 106
7.4.4 Docker Registry本地私有仓库配置 107
7.5 本章小结 112
第8章 Docker中的网络与数据管理 113
8.1 Docker网络管理 114
8.1.1 Docker默认网络管理 114
8.1.2 自定义网络介绍 115
8.1.3 自定义bridge网络 116
8.1.4 容器之间的网络通信 118
8.2 Docker Swarm集群 122
8.2.1 Docker Swarm概述 122
8.2.2 Docker Swarm使用 123
8.3 Docker数据管理 127
8.3.1 Docker数据存储机制 127
8.3.2 Docker数据存储方式 129
8.4 Volumes数据卷管理 129
8.4.1 Volumes数据卷的优势 129
8.4.2 Volumes数据卷使用 130
8.5 本章小结 134
第9章 微服务项目的整合与测试 135
9.1 微服务项目整合 136
9.1.1 微服务项目结构预览 136
9.1.2 微服务项目功能介绍 136
9.1.3 微服务项目的启动和测试 140
9.2 接口可视化工具—Swagger—UI 143
9.2.1 Swagger—UI使用方法 143
9.2.2 Swagger—UI使用测试 145
9.3 本章小结 147
第10章 微服务的部署 149
10.1 Docker Compose编排工具 150
10.1.1 Docker Compose介绍 150
10.1.2 Docker Compose的安装与卸载 150
10.1.3 Composefile文件的使用说明 151
10.2 微服务与Docker的整合 154
10.3 环境搭建以及镜像准备 159
10.3.1 环境搭建 159
10.3.2 镜像准备 161
10.4 微服务的手动部署 162
10.4.1 非集群环境下的服务部署 162
10.4.2 集群环境下服务部署 163
10.4.3 微服务测试 167
10.5 使用Jenkins自动部署微服务 169
10.5.1 Jenkins介绍 169
10.5.2 Jenkins安装 170
10.5.3 Jenkins集成插件配置 173
10.5.4 服务自动化部署 175
10.6 本章小结 180
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>微服务架构基础:Spring Boot+Spring Cloud+Docker
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Spring Boot 开发实战
前　言
第Ⅰ部分　Spring Boot框架基础
第1章　Spring Boot简介 2
1.1　从Spring到Spring Boot 2
1.1.1　从EJB到Spring 3
1.1.2　Spring框架发展简史 4
1.1.3　Spring框架的核心模块 5
1.2　Spring Boot简介 7
1.2.1　Spring Boot是什么 7
1.2.2　Spring Boot核心模块 10
1.3　约定优于配置极简化理念 11
1.4　本章小结 12
第2章　快速开始HelloWorld 13
2.1　创建Spring Boot项目 13
2.2　Spring Boot项目的入口类 16
2.3　添加HelloWorldController 18
2.4　Spring Boot应用注解@Spring BootApplication 19
2.4.1　Spring Boot配置类注解 20
2.4.2　启用自动配置注解 21
2.4.3　组件扫描注解 21
2.5　XML配置与注解配置 22
2.6　本章小结 22
第3章　深入理解Spring Boot自动配置 23
3.1　传统的SSM开发过程 23
3.2　Spring Boot自动配置原理 26
3.2.1　Java配置 26
3.2.2　条件化Bean 27
3.2.3　组合注解 32
3.3　Spring Boot自动配置过程 33
3.3.1　@EnableAutoConfiguration注解 33
3.3.2　spring.factories文件 34
3.3.3　获取候选配置类 35
3.4　FreeMarkerAutoConfiguration实例分析 35
3.4.1　spring-boot-starter-freemarker工程 35
3.4.2　spring-boot-autoconfigure工程 37
3.5　本章小结 39
第Ⅱ部分　Spring Boot项目综合实战
第4章　Spring Boot集成MyBatis数据库层开发 42
4.1　Java EE分层架构 42
4.2　MyBatis简介 43
4.2.1　概述 43
4.2.2　MyBatis框架组成 44
4.2.3　MyBatis基础设施 46
4.3　项目实战 54
4.3.1　使用Spring Boot CLI创建工程 54
4.3.2　Spring Boot命令行CLI简介 54
4.3.3　配置application.properties 58
4.3.4　使用IDEA中自带的连接数据库客户端 59
4.3.5　使用MyBatis Generator生成dao层代码 60
4.3.6　设置MyBatis同时使用Mapper.xml和注解 62
4.3.7　使用@Select注解 62
4.3.8　使用MyBatis分页插件pagehelper 63
4.3.9　MyBatis插件机制 64
4.3.10　实现分页接口 64
4.3.11　PageHelper工作原理 67
4.3.12　多表关联查询级联 74
4.4　本章小结 78
第5章　Spring Boot集成JPA数据库层开发 79
5.1　JPA简介 79
5.1.1　JPA生态 81
5.1.2　JPA技术栈 82
5.2　ORM框架概述 83
5.3　Hibernate简介 83
5.4　Spring Data JPA简介 88
5.5　项目实战 90
5.5.1　Spring Data JPA提供的接口 90
5.5.2　创建项目 91
5.5.3　配置数据库连接 91
5.5.4　自动生成Entity实体类代码 91
5.5.5　配置项目数据源信息 95
5.5.6　实现查询接口 96
5.5.7　分页查询 97
5.5.8　多表级联查询 99
5.5.9　级联类型 101
5.5.10　模糊搜索接口 102
5.5.11　JPQL语法基础 103
5.5.12　JPA常用注解 108
5.6　本章小结 109
第6章　Spring Boot Gradle插件应用开发 110
6.1　Gradle简介 110
6.2　用Gradle构建生命周期 112
6.3　Gradle 插件 114
6.4　项目实战 118
6.4.1　创建项目 118
6.4.2　添加依赖 121
6.4.3　配置上传本地Maven仓库 121
6.4.4　实现插件 122
6.4.5　添加插件属性配置 124
6.4.6　运行测试 124
6.4.7　在项目中使用kor插件 126
6.5　本章小结 128
第7章　使用Spring MVC开发Web应用 129
7.1　Spring MVC简介 129
7.1.1　Servlet概述 129
7.1.2　MVC简介 131
7.1.3　Spring、Spring MVC与Spring Boot 2.0 132
7.1.4　Spring MVC框架 133
7.2　Spring MVC常用注解 136
7.3　项目实战：使用FreeMarker模板引擎 137
7.3.1　FreeMarker简介 137
7.3.2　实现一个分页查询页面 138
7.4　实现文件下载 144
7.5　本章小结 145
第8章　Spring Boot自定义Web MVC配置 146
8.1　Web MVC配置简介 146
8.1.1　静态资源配置 147
8.1.2　拦截器配置 148
8.1.3　跨域配置 148
8.1.4　视图控制器配置 149
8.1.5　消息转换器配置 150
8.1.6　数据格式化器配置 150
8.1.7　视图解析器配置 151
8.2　全局异常处理 152
8.2.1　使用@ControllerAdvice和@ExceptionHandler注解 152
8.2.2　实现HandlerExceptionResolver接口 154
8.3　定制Web容器 157
8.4　定制Spring Boot应用程序启动Banner 158
8.5　自定义注册Servlet、Filter和Listener 161
8.5.1　注册Servlet 161
8.5.2　注册Filter 163
8.5.3　注册Listener 168
8.6　本章小结 169
第9章　Spring Boot中的AOP编程 170
9.1　Spring Boot与AOP 170
9.1.1　AOP简介 170
9.1.2　Spring AOP介绍 172
9.1.3　实现一个简单的日志切面 172
9.2　项目实战：使用AOP + Filter实现登录鉴权与权限控制 175
9.2.1　系统整体架构 175
9.2.2　创建工程 176
9.2.3　数据库表结构设计 177
9.2.4　用户登录逻辑 179
9.2.5　登录态鉴权过滤器 181
9.2.6　AOP实现用户权限管理 185
9.2.7　用户注册 187
9.2.8　数据后端校验 188
9.3　本章小结 192
第10章　Spring Boot集成Spring Security安全开发 193
10.1　Spring Security简介 193
10.2　Spring Security核心组件 194
10.3　项目实战 201
10.3.1　初阶Security：默认认证用户名密码 201
10.3.2　中阶Security：内存用户名密码认证 204
10.3.3　角色权限控制 206
10.3.4　进阶Security：基于数据库的用户和角色权限 211
10.4　本章小结 225
第11章　Spring Boot集成React.js开发前后端分离项目 226
11.1　Web前端技术简史 226
11.2　前后端分离架构 228
11.3　项目实战 229
11.3.1　系统功能介绍 229
11.3.2　实现登录后端接口 230
11.3.3　实现登录前端页面 231
11.3.4　实现列表展示后端接口 232
11.3.5　前后端联调测试 233
11.4　本章小结 235
第12章　任务调度与邮件服务开发 236
12.1　定时任务 236
12.1.1　通用实现方法 236
12.1.2　静态定时任务 237
12.1.3　Cron简介 238
12.1.4　动态定时任务 240
12.1.5　多线程执行任务 243
12.2　开发任务调度服务 245
12.2.1　同步与异步 245
12.2.2　同步任务执行 245
12.2.3　异步任务执行 247
12.3　开发邮件服务 250
12.3.1　发送富文本邮件 252
12.3.2　发送带附件的富文本邮件 253
12.4　本章小结 254
第13章　Spring Boot集成WebFlux开发响应式Web应用 255
13.1　响应式宣言及架构 255
13.2　项目实战 256
13.2.1　创建项目 256
13.2.2　代码分析 258
13.3　本章小结 262
第14章　Spring Boot缓存 263
14.1　Spring Cache简介 263
14.2　Cache注解 264
14.3　项目实战 266
14.4　本章小结 272
第15章　使用Spring Session集成Redis实现Session共享 273
15.1　Spring Session简介 273
15.2　Redis简介 275
15.2.1　Redis是什么 275
15.2.2　安装Redis 275
15.2.3　设置Redis密码 276
15.2.4　Redis数据类型 277
15.2.5　Spring Boot集成Redis 279
15.3　项目实战 281
15.4　本章小结 285
第16章　使用Zuul开发API Gateway 286
16.1　API Gateway简介 286
16.2　Zuul简介 287
16.3　项目实战 290
16.4　本章小结 294
第17章　Spring Boot日志 295
17.1　Logback简介 295
17.2　配置logback日志 296
17.3　logback.groovy配置文件 298
17.3.1　显示系统Log级别 298
17.3.2　使用logback.groovy配置 299
17.3.3　配置文件说明 301
17.4　本章小结 306
第Ⅲ部分　Spring Boot系统监控、测试与运维
第18章　Spring Boot应用的监控：Actuator与Admin 308
18.1　Actuator简介 308
18.2　启用Actuator 309
18.3　揭秘端点 311
18.3.1　常用的Actuator端点 311
18.3.2　启用和禁用端点 317
18.4　自定义Actuator端点 318
18.4.1　Endpoint接口 319
18.4.2　实现Endpoint接口 320
18.4.3　继承AbstractEndpoint抽象类 321
18.4.4　实现健康指标接口HealthIndicator 323
18.4.5　实现度量指标接口PublicMetrics 324
18.4.6　统计方法执行数据 328
18.5　使用Admin 331
18.5.1　Admin简介 331
18.5.2　创建Admin Server项目 334
18.5.3　在客户端使用Admin Server 335
18.6　本章小结 339
第19章　Spring Boot应用的测试 340
19.1　准备工作 340
19.2　分层测试 340
19.2.1　dao层测试 341
19.2.2　service层测试 342
19.2.3　使用Mockito测试service层代码 342
19.2.4　controller层测试 344
19.2.5　JSON接口测试 346
19.3　本章小结 347
第20章　Spring Boot应用Docker化 348
20.1　Spring Boot应用打包 348
20.2　Spring Boot应用运维 352
20.2.1　查看JVM参数的值 352
20.2.2　应用重启 353
20.3　使用Docker构建部署运行Spring Boot应用 353
20.3.1　Docker简介 354
20.3.2　环境搭建 355
20.4　项目实战 356
20.4.1　添加Docker构建插件 356
20.4.2　配置Dockerfile文件创建自定义的镜像 357
20.4.3　Dockerfile配置说明 358
20.4.4　构建镜像 362
20.4.5　运行测试 363
20.5　本章小结 364
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Spring Boot 开发实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Spring Boot 2实战之旅
目录
第1章 Spring Boot概述 1
1.1 Spring Boot简介 1
1.2 Spring Boot的特点 2
1.2.1 快速构建项目 2
1.2.2 嵌入式Web容器 3
1.2.3 易于构建任何应用 3
1.2.4 自动化配置 3
1.2.5 开发者工具 4
1.2.6 强大的应用监控 4
1.2.7 默认提供测试框架 4
1.2.8 可执行Jar部署 4
1.2.9 IDE多样性 4
1.3 为什么要学习Spring Boot 5
1.3.1 简化工作 5
1.3.2 微服务时代 5
1.3.3 社区背景强大 6
1.3.4 市场需求 6
1.4 Spring Boot的发展历史 7
1.4.1 发布里程碑（2013.8.6） 7
1.4.2 Spring Boot 1.0（2014.4） 7
1.4.3 Spring Boot 1.1（2014.6） 8
1.4.4 Spring Boot 1.2（2015.3） 8
1.4.5 Spring Boot 1.3（2016.12） 8
1.4.6 Spring Boot 1.4（2017.1） 8
1.4.7 Spring Boot 1.5（2017.2） 9
1.4.8 Spring Boot 2.0（2018.3） 9
1.5 小结 10
第2章 走进Spring Boot 11
2.1 环境搭建 11
2.1.1 JDK安装 11
2.1.2 IntelliJ IDEA的安装 12
2.1.3 Maven的安装 12
2.1.4 IntelliJ IDEA内配置JDK和Maven 15
2.2 新建Spring Boot项目 16
2.2.1 开始创建项目 16
2.2.2 配置JDK版本和Initializr Service URL 17
2.2.3 配置Project Metadata信息 17
2.2.4 配置Spring Boot版本及默认引入组件 18
2.2.5 配置项目名称和项目位置 18
2.3 项目工程介绍 19
2.3.1 Java类文件 20
2.3.2 资源文件 20
2.3.3 测试类文件 20
2.3.4 pom文件 21
2.4 运行项目 22
2.5 小结 22
第3章 Spring Boot的Web之旅 23
3.1 Spring Boot的第一个Web项目 23
3.1.1 加入Web依赖 23
3.1.2 创建Controller 23
3.1.3 测试运行 24
3.2 WebFlux的使用 25
3.2.1 添加WebFlux依赖 25
3.2.2 创建一个处理方法类 26
3.2.3 创建一个Router类 26
3.2.4 测试运行 27
3.3 使用热部署 27
3.4 配置文件 28
3.4.1 配置文件类型 28
3.4.2 自定义属性 28
3.4.3 使用随机数 29
3.4.4 多环境配置 31
3.4.5 自定义配置文件 31
3.5 使用页面模板 32
3.5.1 使用Thymeleaf 32
3.5.2 使用FreeMarker 35
3.5.3 使用传统JSP 37
3.6 使用WebJars 39
3.7 国际化使用 41
3.8 文件的上传和下载 44
3.9 小结 48
第4章 Spring Boot的数据库之旅 49
4.1 使用数据库 49
4.1.1 使用MySQL数据库 49
4.1.2 使用SQL Server数据库 50
4.1.3 使用Oracle数据库 51
4.1.4 使用MongoDB数据库 55
4.1.5 使用Neo4j数据库 56
4.1.6 使用Redis数据库 57
4.1.7 使用Memcached数据库 58
4.2 使用JDBC操作数据库 58
4.2.1 JDBC依赖配置 59
4.2.2 配置数据库信息 59
4.2.3 创建实体类 60
4.2.4 使用Controller进行测试 60
4.3 使用JPA操作数据库 68
4.3.1 JPA介绍 68
4.3.2 JPA依赖配置 68
4.3.3 配置文件 69
4.3.4 创建实体对象 69
4.3.5 创建数据操作层 71
4.3.6 简单测试运行 73
4.3.7 JPA扩展学习 74
4.3.8 基于WebFlux的使用 75
4.4 使用MyBatis操作数据库 80
4.4.1 MyBatis简介 80
4.4.2 MyBatis依赖配置 80
4.4.3 配置文件 80
4.4.4 基于XML的使用 82
4.4.5 基于注解使用 85
4.4.6 测试运行 85
4.4.7 Mybatis-Generator插件学习 87
4.4.8 PageHelper插件 96
4.4.9 Mybatis-Plus插件 97
4.5 配置多数据源 101
4.5.1 多数据源情况分析 102
4.5.2 配置多数据源 102
4.5.3 基于JPA使用多数据源 105
4.5.4 基于MyBatis使用多数据 106
4.6 使用Druid数据库连接池 108
4.6.1 Druid简介 108
4.6.2 配置Druid 109
4.6.3 操作数据库 114
4.6.4 Druid监控页面介绍 115
4.7 小结 121
第5章 Spring Boot的缓存之旅 122
5.1 使用Spring Cache 122
5.1.1 Spring Cache简介 122
5.1.2 配置Spring Cache依赖 124
5.1.3 测试运行 125
5.1.4 验证缓存 126
5.2 使用Redis 127
5.2.1 Redis简介 127
5.2.2 项目配置 127
5.2.3 测试运行 129
5.2.4 使用Redis缓存 130
5.3 使用Memcached 132
5.3.1 Memcached简介 132
5.3.2 配置Memcached依赖 132
5.3.3 使用Memcached缓存 137
5.3.4 Redis与Memcached的区别 138
5.4 小结 138
第6章 Spring Boot的日志之旅 139
6.1 Logback日志 139
6.1.1 Logback简介 139
6.1.2 日志格式 140
6.1.3 控制台输出 140
6.1.4 日志文件输出 141
6.1.5 日志级别 141
6.1.6 日志配置 142
6.1.7 基于XML配置日志 142
6.2 Log4j日志 145
6.2.1 Log4j简介 146
6.2.2 Spring Boot使用Log4j 146
6.2.3 控制台输出 146
6.2.4 日志文件输出 147
6.3 Log4j 2日志 148
6.3.1 Log4j 2简介 148
6.3.2 Spring Boot使用Log4j 2 150
6.3.3 控制台输出 151
6.3.4 日志文件输出 152
6.3.5 异步日志 152
6.4 ELK日志收集 155
6.4.1 ELK日志收集流程介绍 155
6.4.2 ELK安装 155
6.4.3 ELK配置 157
6.4.4 使用Kibana查看日志 159
6.4.5 Spring Boot直接输出到Logstash 162
6.4.6 ELK日志收集优化方案及建议 163
6.5 小结 164
第7章 Spring Boot的安全之旅 165
7.1 使用Shiro安全管理 165
7.1.1 什么是Shiro 165
7.1.2 使用Shiro做权限控制 167
7.2 使用Spring Security 177
7.2.1 Spring Security简介 177
7.2.2 使用Spring Security做权限控制 178
7.3 小结 184
第8章 Spring Boot的监控之旅 185
8.1 使用actuator监控 185
8.1.1 actuator是什么 185
8.1.2 如何使用actuator 185
8.1.3 actuator监控介绍 186
8.1.4 保护HTTP端点 188
8.1.5 健康信息 190
8.1.6 自定义应用程序信息 192
8.1.7 自定义管理端点路径 192
8.2 使用Admin监控 193
8.2.1 什么是Spring Boot Admin 193
8.2.2 设置Spring Boot Admin Server 193
8.2.3 Spring Cloud Eureka 194
8.2.4 Spring Boot Admin Client的使用 197
8.2.5 安全验证 202
8.2.6 JMX-bean管理 203
8.2.7 通知 203
8.3 Prometheus Grafana监控 207
8.3.1 Prometheus的安装 207
8.3.2 Grafana的安装 208
8.3.3 Spring Boot项目使用Prometheus 208
8.3.4 Prometheus配置 210
8.3.5 启动Grafana 211
8.4 小结 213
第9章 Spring Boot的消息之旅 214
9.1 RabbitMQ消息队列 214
9.1.1 RabbitMQ介绍 214
9.1.2 RabbitMQ的几种角色 215
9.1.3 RabbitMQ的几种模式 216
9.1.4 Spring Boot使用RabbitMQ 218
9.2 Kafka消息队列 226
9.2.1 Kafka介绍 226
9.2.2 Spring Boot使用Kafka 228
9.3 RocketMQ消息队列 230
9.3.1 RocketMQ介绍 230
9.3.2 Spring Boot使用RocketMQ 231
9.4 消息队列对比 236
9.5 小结 238
第10章 Spring Boot的搜索之旅 239
10.1 使用Solr 239
10.1.1 Solr简介 239
10.1.2 Spring Boot使用Solr 240
10.2 使用Elasticsearch 246
10.2.1 Elasticsearch简介 246
10.2.2 Spring Boot使用Elasticsearch 246
10.2.3 使用Elasticsearch Repository进行操作 247
10.2.4 使用Elasticsearch Template进行操作 248
10.2.5 非聚合查询 249
10.2.6 聚合查询 251
10.2.7 复杂查询练习 252
10.3 搜索引擎对比 256
10.3.1 技术背景 256
10.3.2 热度比较 258
10.3.3 集群部署 259
10.3.4 数据格式 259
10.3.5 效率 259
10.4 小结 259
第11章 Spring Boot的小彩蛋 260
11.1 修改启动Banner 260
11.1.1 启动Banner介绍 260
11.1.2 启动Banner修改 263
11.2 使用LomBok让编程更简单 264
11.2.1 什么是LomBok 264
11.2.2 IntelliJ IDEA安装Lombok插件 264
11.2.3 如何使用LomBok 265
11.3 邮件发送 266
11.3.1 在Spring Boot中使用邮件发送 266
11.3.2 基础配置信息 267
11.3.3 文本邮件发送 268
11.3.4 网页邮件发送 269
11.3.5 附件邮件发送 270
11.3.6 嵌入静态资源邮件发送 271
11.4 三“器”的使用 272
11.4.1 过滤器 272
11.4.2 拦截器 274
11.4.3 监听器 275
11.4.4 Spring Boot引用三“器” 276
11.4.5 测试 277
11.5 事务使用 278
11.5.1 事务介绍 278
11.5.2 在项目中使用事务 279
11.5.3 Spring事务拓展介绍 280
11.6 统一处理异常 282
11.6.1 异常介绍 282
11.6.2 Java异常分类 282
11.6.3 Spring Boot中统一处理异常 284
11.7 使用AOP 284
11.7.1 AOP介绍 285
11.7.2 Spring Boot使用AOP 285
11.8 使用validator后台校验 288
11.9 使用Swagger构建接口文档 291
11.9.1 什么是Swagger 291
11.9.2 Swagger 2注解介绍 291
11.9.3 Spring Boot使用Swagger 293
11.10 使用ApiDoc构建接口文档 298
11.10.1 如何使用ApiDoc接口文档 298
11.10.2 ApiDoc常用注解 298
11.10.3 Spring Boot使用ApiDoc 299
11.11 小结 302
第12章 Spring Boot打包部署 303
12.1 使用IDE启动 303
12.1.1 运行Spring Boot应用程序 303
12.1.2 IntelliJ IDEA启动多实例 304
12.2 使用Maven启动 305
12.3 JAR形式启动 305
12.3.1 使用命令将Spring Boot应用程序打成JAR 305
12.3.2 IntelliJ IDEA打JAR包 306
12.4 War形式启动 307
12.4.1 创建项目 307
12.4.2 打War包部署到Tomcat 308
12.5 使用Docker构建Spring Boot项目 308
12.5.1 Docker简介 309
12.5.2 安装Docker 309
12.5.3 Dockerfile 309
12.5.4 运行Docker镜像 310
12.6 使用Jenkins自动化部署SpringBoot应用 311
12.6.1 Jenkins简介 311
12.6.2 Spring Boot应用使用Jenkins 311
12.7 小结 317
第13章 Spring Boot实战之博客系统 318
13.1 博客的制作思路 318
13.1.1 博客布局介绍 318
13.1.2 博客功能介绍 319
13.2 博客模板制作 320
13.3 效果展示 325
13.4 依赖配置 328
13.5 配置文件 329
13.6 后台实体 330
13.6.1 文章表 330
13.6.2 标签表 332
13.6.3 链接表 333
13.6.4 消息表 333
13.6.5 博客访问记录表 334
13.6.6 博客配置表 335
13.7 主功能 336
13.7.1 博客页 336
13.7.2 搜索页 339
13.7.3 文章详情页 341
13.7.4 联系页 343
13.8 辅助功能 344
13.8.1 拦截器 344
13.8.2 定时器 345
13.8.3 初始化 346
13.9 小结 347
第14章 Spring Boot实战之博客后台系统 350
14.1 博客后台的制作思路 350
14.1.1 博客后台布局介绍 350
14.1.2 博客功能介绍 351
14.2 博客后台模板制作 352
14.3 效果展示 352
14.4 依赖配置 356
14.5 配置文件 358
14.6 后台实体 359
14.6.1 用户表 359
14.6.2 角色表 360
14.7 主功能 361
14.7.1 首页 362
14.7.2 文章管理 363
14.8 辅助功能 368
14.8.1 拦截器 368
14.8.2 定时器 369
14.8.3 认证和授权 370
14.8.4 工具类 373
14.8.5 初始化方法 373
14.9 小结 374
参考文献 375
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Spring Boot 2实战之旅
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通Spring
目 录
第1章 Spring Boot 2.0 1
1.1 Spring Boot概述 2
1.2 利用Spring Boot简化应用程序开发 3
1.3 Spring Boot中的核心组件 5
1.3.1 Spring Boot Starter 5
1.3.2 Spring Boot Starter Parent POM 7
1.3.3 Spring Boot auto-configuration 7
1.3.4 启用Spring Boot auto-configuration 9
1.3.5 Spring Boot CLI 11
1.3.6 Spring Boot Actuator 11
1.4 设置Spring Boot工作区 12
1.4.1 利用Maven设置Spring Boot 13
1.4.2 利用Gradle设置Spring Boot 13
1.5 开发第一个Spring Boot应用程序 15
1.5.1 使用Web界面 15
1.5.2 利用STS IDE创建Spring Boot项目 17
1.6 实现REST服务 19
1.7 Spring Boot 2.0中的新特性 22
1.8 本章小结 22
第2章 定制auto-configuration 25
2.1 理解auto-configuration 26
2.2 定制Spring Boot 27
2.2.1 利用Spring Boot属性进行定制 27
2.2.2 替换已生成的Bean 29
2.2.3 禁用特定的auto-configuration类 29
2.2.4 修改库的依赖关系 30
2.3 基于属性的配置外部化 31
2.3.1 属性的评估顺序 31
2.3.2 重命名Spring应用程序中的application.properties 32
2.4 外部配置应用程序属性 33
2.5 基于日志记录的调优 35
2.6 YAML配置文件 36
2.6.1 针对属性的YAML 36
2.6.2 单一YAML文件中的多个属性 37
2.7 定制应用程序错误页面 37
2.8 本章小结 39
第3章 Spring CLI和Actuator 41
3.1 使用Spring Boot CLI 41
3.1.1 安装Spring Boot CLI 42
3.1.2 从安装文件中手动安装Spring Boot CLI 42
3.1.3 使用SDKMAN!安装Spring Boot CLI 43
3.1.4 利用OSX Homebrew安装Spring Boot CLI 43
3.2 使用Initializr 44
3.3 Spring Boot Actuator 48
3.3.1 在应用程序中启用Spring Boot Actuator 49
3.3.2 分析Actuator的端点 49
3.3.3 显示配置细节 51
3.3.4 显示指标端点 56
3.3.5 显示应用程序信息 57
3.3.6 关闭应用程序 59
3.3.7 自定义Actuator端点 59
3.3.8 创建一个自定义端点 64
3.4 Actuator端点的安全性 66
3.5 Spring Boot 2.x中的Actuator 67
3.6 本章小结 68
第4章 Spring Cloud和配置操作 69
4.1 原生云应用程序架构 69
4.1.1 微服务架构 71
4.1.2 微服务的优点 72
4.1.3 微服务面临的挑战 73
4.2 Spring Cloud简介 74
4.2.1 云和微服务程序的构造块 74
4.2.2 Spring Cloud应用 76
4.3 配置Spring Cloud应用程序 77
4.4 创建配置生成器—Spring Cloud Config Server 78
4.5 实现Cloud Config Server 79
4.5.1 配置application.properties文件 80
4.5.2 创建Git存储库作为配置存储 80
4.6 利用模式配置多个存储库 83
4.6.1 身份验证 84
4.6.2 force-pull属性 85
4.7 创建Spring Cloud客户端 85
4.8 本章小结 87
第5章 Spring Cloud Netflix和Service Discovery 89
5.1 Spring Cloud Netflix简介 89
5.2 微服务架构中的Service Discovery 90
5.3 实现Service Discovery—Eureka Server 92
5.3.1 Maven构建配置文件 92
5.3.2 Gradle构建配置文件 93
5.3.3 启用Eureka服务器作为Discovery Service服务器 94
5.4 实现Service Discovery—Eureka客户端 96
5.4.1 添加Maven依赖关系配置 96
5.4.2 Gradle构建配置 98
5.5 利用Eureka注册客户端 99
5.5.1 使用REST服务 102
5.5.2 使用EurekaClient 102
5.5.3 Feign Client 107
5.6 本章小结 111
第6章 构建Spring Boot RESTful微服务 113
6.1 基于Spring Boot的微服务 113
6.1.1 bootstrap.yml和application.yml简介 114
6.1.2 简单的微服务示例 115
6.2 Spring Data简介 128
6.2.1 Apache Ignite存储库 129
6.2.2 Spring Data MongoDB 129
6.2.3 Spring Data JPA 130
6.3 本章小结 130
第7章 利用Netflix Zuul创建API网关 133
7.1 API网关模式需求 133
7.1.1 API Gateway模式的优点 135
7.1.2 API Gateway的一些缺点 135
7.1.3 API Gateway模式组件 135
7.2 利用Netflix Zuul Proxy实现API Gateway 136
7.2.1 利用Maven依赖关系包含Zuul 137
7.2.2 启用Zuul服务代理 137
7.2.3 配置Zuul属性 138
7.2.4 添加过滤器 141
7.3 本章小结 144
第8章 利用Feign客户端简化HTTP API 145
8.1 Feign基础知识 145
8.2 在云应用程序中包含Feign 148
8.2.1 重载Feign的默认配置 153
8.2.2 创建Feign客户端 155
8.2.3 Feign继承机制 156
8.2.4 多重继承 156
8.3 Feign客户端的高级应用 157
8.4 异常处理 158
8.5 自定义编码器和解码器 159
8.5.1 自定义编码器 160
8.5.2 自定义解码器 161
8.6 Feign和Hystrix 161
8.7 Feign客户端单元测试 163
8.8 本章小结 164
第9章 构建事件驱动和异步响应式系统 165
9.1 事件驱动型架构模式 165
9.1.1 调停者拓扑 165
9.1.2 代理拓扑 166
9.2 响应式编程简介 167
9.2.1 Spring Reactive 167
9.2.2 ReactiveX 168
9.3 命令查询的责任分离简介 168
9.3.1 Event Sourcing模式简介 170
9.3.2 最终一致性 171
9.4 构建事件驱动型响应式异步系统 172
9.5 Spring Cloud Streaming简介 173
9.5.1 向应用程序中添加Kafka 174
9.5.2 安装和运行Kafka 175
9.5.3 Kafka配置属性 175
9.5.4 用于写入Kafka的服务 176
9.5.5 Rest API控制器 177
9.5.6 监听Kafka主题 177
9.6 本章小结 181
第10章 利用Hystrix和Turbine构建弹性系统 183
10.1 断路器模式 184
10.2 使用Hystrix library 186
10.3 在应用程序中配置Hystrix 187
10.3.1 Maven依赖关系 188
10.3.2 启用断路器 188
10.3.3 向服务中添加Hystrix注解 189
10.3.4 错误传递 192
10.4 在客户服务中实现REST控制器 192
10.5 构建和测试客户服务 195
10.6 自定义默认的配置项 196
10.7 Hystrix Metrics Stream 198
10.8 在项目中实现Hystrix Dashboard 199
10.9 Turbine仪表盘 201
10.10 基于Hystrix和Feign的REST使用者 204
10.11 本章小结 206
第11章 测试Spring Boot应用程序 207
11.1 测试驱动开发 207
11.2 单元测试机制 208
11.2.1 单元测试的优点 211
11.2.2 单元测试的缺点 212
11.2.3 其他模拟库 212
11.3 集成测试 212
11.3.1 Spring测试的优点 214
11.3.2 激活测试类的配置 214
11.4 Spring Boot应用程序的JUnit测试 214
11.5 使用Mockito模拟服务 216
11.6 测试RESTful服务契约的Postman 217
11.7 本章小结 220
第12章 微服务的容器化 221
12.1 微服务架构的容器 222
12.1.1 虚拟机和容器 222
12.1.2 容器方案的优点 224
12.1.3 面向容器方案的缺点 224
12.2 Docker简介 225
12.2.1 安装Docker 226
12.2.2 在Linux上安装Docker 226
12.2.3 在Windows中安装Docker 227
12.2.4 Docker架构 229
12.2.5 Docker引擎 231
12.2.6 Docker容器 232
12.2.7 编写Dockerfile 233
12.3 Docker化Spring Boot应用程序 235
12.4 利用Maven创建Docker镜像 239
12.5 Docker Compose简介 240
12.5.1 安装Docker Compose 241
12.5.2 使用Docker Compose 242
12.5.3 编写docker-compose文件 242
12.5.4 基于docker-compose文件的编排操作 244
12.5.5 利用docker-compose和负载平衡扩展容器 247
12.6 Kubernetes简介 248
12.7 本章小结 249
第13章 API管理器 251
13.1 API管理 251
13.1.1 API管理软件的优点 252
13.1.2 API管理工具 252
13.2 速率限制 252
13.3 KONG简介 253
13.3.1 基于KONG架构的微服务REST API 254
13.3.2 未采用KONG架构的API应用 255
13.3.3 安装KONG 255
13.3.4 使用KONG API 257
13.4 Swagger 265
13.4.1 Swagger应用 265
13.4.2 在微服务中使用Swagger 266
13.4.3 Swagger的优点 277
13.5 本章小结 278
第14章 云部署（AWS） 279
14.1 AWS EC2实例 279
14.2 AWS上的微服务架构 284
14.3 在AWS EC2上安装Docker 289
14.4 在AWS EC2上运行微服务 291
14.5 本章小结 293
第15章 生产服务监视和最佳实践 295
15.1 监视容器 295
15.2 日志机制所面临的挑战 295
15.3 微服务架构的中心日志方案 297
15.3.1 基于ELK栈的日志聚合 299
15.3.2 使用Sleuth的请求跟踪 306
15.3.3 基于Zipkin的请求跟踪 310
15.4 本章小结 315
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>精通Spring
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Spring Boot 企业级应用开发实战
第1 章 Spring Boot 概述................................................................1
1.1 传统企业级应用开发之痛与革新 .................................................................................... 2
1.2 Spring Boot 2 总览 ........................................................................................................ 11
1.3 快速开启第一个 Spring Boot 项目 ................................................................................. 16
1.4 如何进行 Spring Boot 项目的开发及测试 ...................................................................... 24
第2 章 Spring 框架核心概念..........................................................32
2.1 Spring 框架总览 ............................................................................................................ 33
2.2 依赖注入与控制反转 .................................................................................................... 37
2.3 AOP 编程 ...................................................................................................................... 46
第3 章 Spring MVC 及常用 MediaType.........................................52
3.1 Spring MVC 简介 .......................................................................................................... 53
3.2 JSON 类型的处理 ......................................................................................................... 56
3.3 XML 类型的处理 ........................................................................................................... 61
3.4 文件上传的处理 ............................................................................................................ 63
第4 章 集成 Thymeleaf................................................................67
4.1 常用 Java 模板引擎 ...................................................................................................... 68
4.2 Thymeleaf 标准方言 ...................................................................................................... 74
4.3 Thymeleaf 设置属性值 ................................................................................................... 84
4.4 Thymeleaf 迭代器与条件语句 ........................................................................................ 88
4.5 Thymeleaf 模板片段 ...................................................................................................... 92
4.6 Thymeleaf 表达式基本对象 ........................................................................................... 95
4.7 Thymeleaf 与 Spring Boot 集成 ...................................................................................... 97
4.8 Thymeleaf 实战 ............................................................................................................. 98
第5 章 数据持久化...................................................................... 107
5.1 JPA 概述 ..................................................................................................................... 108
5.2 Spring Data JPA .......................................................................................................... 127
5.3 Spring Data JPA 与 Hibernate、Spring Boot 集成 ......................................................... 143
5.4 数据持久化实战 .......................................................................................................... 147
第6 章 全文搜索......................................................................... 156
6.1 全文搜索概述 ............................................................................................................. 157
6.2 Elasticsearch 核心概念 ................................................................................................ 159
6.3 Elasticsearch 与 Spring Boot 集成 ................................................................................ 164
6.4 Elasticsearch 实战 ....................................................................................................... 168
第7 章 架构设计与分层................................................................ 175
7.1 为什么需要分层 .......................................................................................................... 176
7.2 系统的架构设计及职责划分 ........................................................................................ 179
第8 章 集成 Bootstrap............................................................... 182
8.1 Bootstrap 简介 ............................................................................................................ 183
8.2 Bootstrap 核心概念 ..................................................................................................... 185
8.3 Bootstrap 及常用前端框架与 Spring Boot 集成 ............................................................ 189
8.4 Bootstrap 实战 ............................................................................................................ 192
第９章 博客系统的需求分析与设计.................................................. 196
9.1 博客系统的需求分析 .................................................................................................. 197
9.2 博客系统的原型设计 .................................................................................................. 201
第10 章 集成 Spring Security..................................................... 206
10.1 基于角色的权限管理 ................................................................................................ 207
10.2 Spring Security 概述 .................................................................................................. 210
10.3 Spring Security 与 Spring Boot 集成 ........................................................................... 218
10.4 Spring Security 实战 .................................................................................................. 219
第11 章 博客系统的整体框架实现................................................... 227
11.1 如何设计 API............................................................................................................. 228
11.2 实现后台整体控制层 ................................................................................................ 233
11.3 实现前台整体布局 .................................................................................................... 237
第12 章 用户管理实现................................................................. 242
12.1 用户管理的需求回顾 ................................................................................................ 243
12.2 用户管理的后台实现 ................................................................................................ 245
12.3 用户管理的前台实现 ................................................................................................ 254
第13 章 角色管理实现................................................................. 264
13.1 角色管理的需求回顾 ................................................................................................ 265
13.2 角色管理的后台实现 ................................................................................................ 266
13.3 角色管理的前台实现 ................................................................................................ 272
第14 章 权限管理实现................................................................. 276
14.1 权限管理的需求回顾 ................................................................................................ 277
14.2 权限管理的后台实现 ................................................................................................ 278
14.3 CSRF 防护处理 ........................................................................................................ 281
14.4 权限管理的前台实现 ................................................................................................ 282
第15 章 文件服务器实现.............................................................. 285
15.1 文件服务器的需求分析 ............................................................................................. 286
15.2 MongoDB 简介 ......................................................................................................... 286
15.3 MongoDB 与 Spring Boot 集成 .................................................................................. 291
15.4 文件服务器的实现 .................................................................................................... 293
第16 章 博客管理实现................................................................. 303
16.1 博客管理的需求回顾 ................................................................................................ 304
16.2 实现个人设置和头像变更 ......................................................................................... 306
16.3 博客管理的后台实现 ................................................................................................ 316
16.4 博客管理的前台实现 ................................................................................................ 325
第17 章 评论管理实现................................................................. 337
17.1 评论管理的需求回顾 ................................................................................................ 338
17.2 评论管理的后台实现 ................................................................................................ 338
17.3 评论管理的前台实现 ................................................................................................ 346
第18 章 点赞管理实现................................................................. 350
18.1 点赞管理的需求回顾 ................................................................................................ 351
18.2 点赞管理的后台实现 ................................................................................................ 351
18.3 点赞管理的前台实现 ................................................................................................ 358
第19 章 分类管理实现................................................................. 362
19.1 分类管理的需求回顾 ................................................................................................ 363
19.2 分类管理的后台实现 ................................................................................................ 364
19.3 分类管理的前台实现 ................................................................................................ 372
第20 章 标签管理实现................................................................. 380
20.1 标签管理的需求回顾 ................................................................................................ 381
20.2 标签管理的后台实现 ................................................................................................ 381
20.3 标签管理的前台实现 ................................................................................................ 383
第21 章 首页搜索实现................................................................. 385
21.1 首页搜索的需求回顾 ................................................................................................ 386
21.2 首页搜索的后台实现 ................................................................................................ 387
21.3 首页搜索的前台实现 ................................................................................................ 399
21.4 使用中文分词 ........................................................................................................... 405
第22 章 总结与展望.................................................................... 408
22.1 Spring Boot 企业级应用开发的总结 .......................................................................... 409
22.2 博客系统的展望 ........................................................................................................ 412
附录A　开发环境的搭建............................................................................................................. 414
附录B　Thymeleaf 属性 .............................................................................................................. 418
附录C　Thymeleaf 表达式工具对象 ............................................................................................ 420
附录D　Bean Validation 内置约束 ............................................................................................... 438
附录E　本书所涉及的技术及相关版本 ....................................................................................... 440
参考文献 ..................................................................................................................................... 442
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Spring Boot 企业级应用开发实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Spring Boot 2企业应用实战
第1章 Spring Boot入门 1
1.1 Spring简介 2
1.1.1 Spring概述 2
1.1.2 Spring的生态圈 3
1.1.3 Spring 5的变化 4
1.1.4 Spring的配置简化 4
1.2 Spring Boot简介 4
1.2.1 Spring Boot概述 4
1.2.2 Spring Boot解决的问题 5
1.2.3 Spring Boot的主要特性 5
1.2.4 Spring Boot 2.0的重要改变 5
1.3 “开箱即用”的依赖模块 5
1.3.1 日志依赖模块spring-boot-starter-logging 6
1.3.2 Web开发依赖模块spring-boot-starter-web 7
1.4 开发第一个Spring Boot应用 8
1.4.1 下载和安装Maven 8
1.4.2 Eclipse集成Maven 9
1.4.3 示例：第一个Spring Boot应用 10
1.5 本章小结 18
第2章 Spring Boot核心 19
2.1 Spring Boot的启动类与核心注解@SpringBootApplication 20
2.2 Spring Boot基本配置介绍 21
2.2.1 关闭某个自动配置 21
2.2.2 定制启动banner 22
2.2.3 应用的全局配置文件 23
2.2.4 Spring Boot的依赖模块 24
2.3 Spring Boot自动配置原理 25
2.3.1 源码分析 25
2.3.2 spring.factories分析 27
2.3.3 Spring Boot Web开发的自动配置 29
2.4 本章小结 30
第3章 Spring Boot的Web开发 31
3.1 Spring Boot的Web开发支持 32
3.2 Thymeleaf模板引擎 32
3.2.1 Thymeleaf概述 33
3.2.2 Thymeleaf基础语法 33
3.3 Spring和Thymeleaf的整合 36
3.4 Spring Boot的Thymeleaf支持 37
3.5 Spring Boot的Web开发实例 38
示例：第一个Spring Boot的Web应用 38
示例：Thymeleaf常用功能 45
3.6 Spring Boot对JSP的支持 52
示例：Spring Boot添加JSP支持 53
3.7 Spring Boot处理JSON数据 57
示例：Spring Boot处理JSON 57
3.8 Spring Boot文件上传下载 63
示例：Spring Boot文件上传 63
示例：使用对象方式接收上传文件 66
示例：文件下载 69
3.9 Spring Boot的异常处理 71
示例：ExceptionHandler处理异常 71
示例：父类Controller处理异常 73
示例：Advice处理异常返回JSON 76
3.10 本章小结 78
第4章 Spring Boot的数据访问 79
4.1 Hibernate/JPA/Spring Data JPA的概念 80
4.1.1 对象/关系数据库映射（ORM） 80
4.1.2 基本映射方式 81
4.1.3 流行的ORM框架简介 82
4.2 Spring Data JPA 83
4.2.1 Spring Data核心数据访问接口 83
示例：CrudRepository接口访问数据 84
示例：PagingAndSortingRepository接口访问数据 91
4.2.2 Spring Data JPA开发 99
示例：简单条件查询 100
示例：关联查询和@Query查询 105
示例：@NamedQuery查询 114
示例：Specification查询 118
4.3 Spring Boot使用JdbcTemplate 128
示例：JdbcTemplate访问数据 128
4.4 Spring Boot整合MyBatis 135
示例：Spring Boot整合MyBatis开发 135
4.5 本章小结 141
第5章 Spring Boot的热部署与单元测试 142
5.1 使用spring-boot-devtools进行热部署 143
示例：使用spring-boot-devtools实现热部署 143
5.2 Spring Boot的单元测试 147
示例：使用Spring Boot的单元测试 147
5.3 本章小结 155
第6章 Spring Boot的Security安全控制 156
6.1 Spring Security是什么 157
6.2 Spring Security入门 157
6.2.1 Security适配器 157
6.2.2 用户认证 158
6.2.3 用户授权 158
6.2.4 Spring Security核心类 160
6.2.5 Spring Security的验证机制 161
6.2.6 Spring Boot的支持 161
示例：简单Spring Boot Security应用 162
6.3 企业项目中的Spring Security操作 173
示例：基于JPA的Spring Boot Security操作 173
示例：基于MyBatis的Spring Boot
Security操作 180
示例：基于JDBC的Spring Boot Security操作 183
6.4 本章小结 185
第7章 实战项目：信息管理系统 186
7.1 项目简介及系统架构 187
7.1.1 系统功能介绍 187
7.1.2 相关技术介绍 187
7.1.3 系统结构 188
7.1.4 系统的功能模块 188
7.2 配置文件 189
7.3 持久化类 191
7.3.1 设计持久化实体 191
7.3.2 创建持久化实体类 192
7.3.3 导入初始数据 197
7.4 定义Repository接口实现Repository持久层 198
7.5 实现Service持久层 200
7.5.1 业务逻辑组件的设计 201
7.5.2 实现业务逻辑组件 201
7.5.3 事务管理 224
7.6 实现Web层 224
7.6.1 控制器 224
7.6.2 系统登录 225
7.6.3 菜单管理 233
7.6.4 角色管理 235
7.6.5 用户管理 240
7.6.6 功能扩展 245
7.7 本章小结 249
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Spring Boot 2企业应用实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Spring Boot 2+Thymeleaf企业应用实战
第1章 概述 1
1.1 Java EE开发技术 2
1.1.1 Java EE的三层架构 2
1.1.2 MVC框架 2
1.1.3 数据访问层框架 3
1.1.4 视图技术 3
1.2 JDK的下载与安装 3
1.3 安装与配置Maven 4
1.3.1 关于Maven 4
1.3.2 下载与安装Maven 4
1.3.3 配置远程仓库 5
1.4 安装Eclipse 5
1.4.1 Eclipse版本 5
1.4.2 在Eclipse中配置Maven 5
1.4.3 获取本书代码 6
1.5 本章小结 6
第2章 初试Spring Boot 7
2.1 Spring Boot介绍 8
2.1.1 Spring Boot简介 8
2.1.2 starter模块 8
2.2 构建第一个Spring Boot程序 9
2.2.1 新建Maven项目 9
2.2.2 编写启动类 10
2.2.3 编写控制器 11
2.2.4 开发环境的热部署 12
2.3 运行单元测试 12
2.3.1 测试Web服务 12
2.3.2 模拟Web测试 13
2.3.3 测试业务组件 13
2.3.4 模拟业务组件 14
2.4 发布与调用REST服务 15
2.4.1 REST 15
2.4.2 发布REST服务 15
2.4.3 使用RestTemplate调用服务 16
2.4.4 使用Feign调用服务 18
2.5 本章小结 19
第3章 Spring Boot配置 20
3.1 配置文件 21
3.1.1 默认配置文件 21
3.1.2 指定配置文件 22
3.1.3 yml文件 22
3.1.4 使用profile指定配置 23
3.2 Web配置 24
3.2.1 Servlet配置 24
3.2.2 Listener配置 25
3.2.3 Filter配置 26
3.2.4 构建可部署的war包 26
3.2.5 JSP配置 28
3.3 其他配置 30
3.3.1 服务器常用配置 30
3.3.2 响应压缩 30
3.3.3 SSL配置 32
3.3.4 使用其他服务器 32
3.3.5 服务器访问日志 33
3.3.6 banner配置 34
3.4 自定义配置 35
3.4.1 @Value注解 35
3.4.2 定义属性映射对象 36
3.4.3 使用配置 37
3.4.4 属性自动识别 38
3.5 本章小结 39
第4章 Spring Boot的注解 40
4.1 Spring的常用注解 41
4.1.1 bean定义 41
4.1.2 依赖注入 42
4.1.3 使用Primary注解 44
4.1.4 Scope注解 45
4.1.5 方法注入 46
4.1.6 AOP注解 47
4.1.7 ComponentScan注解 49
4.2 高级Spring注解 50
4.2.1 限定注解 50
4.2.2 自定义限定注解 51
4.2.3 自定义bean的生命周期 52
4.3 Spring MVC的常用注解 54
4.3.1 Controller注解 54
4.3.2 RequestMapping注解 55
4.3.3 PathVariable注解 56
4.3.4 MatrixVariable注解 56
4.3.5 RequestParam注解 57
4.3.6 文件上传 58
4.3.7 RestController注解 58
4.4 Spring Boot的条件注解 59
4.4.1 类条件注解 59
4.4.2 项目依赖问题 60
4.4.3 其他条件注解 61
4.4.4 自定义条件注解 61
4.4.5 Spring Boot的自动配置 62
4.5 本章小结 63
第5章 初试Thymeleaf 64
5.1 Thymeleaf 65
5.1.1 什么是Thymeleaf 65
5.1.2 支持的模板类型 65
5.1.3 HTML模板 65
5.1.4 XML模板 66
5.2 初试Thymeleaf API 66
5.2.1 处理HTML 66
5.2.2 更换模板解析器 67
5.2.3 处理资源文件 67
5.2.4 变量处理 68
5.2.5 遍历集合 69
5.2.6 设置前缀与后缀 69
5.3 在Servlet应用中整合Thymeleaf 70
5.3.1 建立项目 70
5.3.2 配置模板引擎 71
5.3.3 在Servlet中使用Thymeleaf 72
5.3.4 编写模板文件 73
5.4 在Struts2中整合Thymeleaf 74
5.4.1 建立与配置Struts2项目 74
5.4.2 配置Struts Action 75
5.4.3 整合Themeleaf 76
5.5 在Spring Boot中整合Thymeleaf 77
5.5.1 建立与配置项目 77
5.5.2 编写控制器与模板 78
5.5.3 静态资源 79
5.6 本章小结 79
第6章 Thymeleaf对象的使用 80
6.1 文本处理 81
6.1.1 外部文本输出 81
6.1.2 文本国际化 82
6.1.3 处理转义文本 83
6.1.4 读取变量 83
6.1.5 在文本信息中使用变量 84
6.1.6 其他读取变量的方式 84
6.1.7 链接表达式 85
6.2 基本对象 86
6.2.1 基本对象概述 86
6.2.2 #ctx对象 87
6.2.3 Web对象 87
6.2.4 内置变量 88
6.2.5 使用基本对象的注意事项 88
6.3 数字对象 89
6.3.1 整数格式化 89
6.3.2 小数格式化 90
6.3.3 货币格式化 91
6.3.4 百分比格式化 92
6.3.5 使用sequence方法 92
6.4 字符串对象 92
6.4.1 toString与length方法 93
6.4.2 非空判断与默认值处理 93
6.4.3 包含判断 94
6.4.4 截取与替换 94
6.4.5 追加与拼接 95
6.4.6 分割与连接 96
6.4.7 大小写转换 96
6.4.8 字符串编码与解码 97
6.4.9 其他处理 98
6.5 日期对象 98
6.5.1 格式化日期 98
6.5.2 获取日期字段 99
6.5.3 创建日期 100
6.6 数组与集合对象 101
6.6.1 数组 101
6.6.2 List与Set 101
6.6.3 Map 101
6.7 其他内置对象 102
6.7.1 messages对象 102
6.7.2 uris对象 102
6.7.3 aggregates对象 103
6.8 本章小结 103
第7章 Thymeleaf常用语法 104
7.1 表达式语法之运算符 105
7.1.1 表达式常量 105
7.1.2 字符串拼接 106
7.1.3 算术运算符 106
7.1.4 关系运算符 107
7.1.5 条件运算符 108
7.1.6 无操作符 108
7.2 表达式语法进阶 108
7.2.1 数据转换 108
7.2.2 自定义数据转换类 109
7.2.3 Spring Boot数据转换 110
7.2.4 表达式预处理 112
7.2.5 表达式调用工具方法 113
7.3 属性设置 114
7.3.1 使用th:attr 114
7.3.2 设置HTML节点属性 114
7.3.3 属性值拼接 115
7.3.4 HTML5属性支持 115
7.4 条件判断与数据迭代 116
7.4.1 条件判断 116
7.4.2 switch case语法 117
7.4.3 使用th:each属性 117
7.4.4 常见迭代类型 118
7.4.5 迭代状态对象 118
7.4.6 数据延迟加载 120
7.4.7 在Spring Boot中使用延迟加载 121
7.4.8 星号表达式 121
7.5 本章小结 122
第8章 深入Thymeleaf模板 123
8.1 模板片断 124
8.1.1 定义与引用模板片断 124
8.1.2 片断引用语法 125
8.1.3 选择器的基础语法 126
8.1.4 选择器的其他语法 128
8.1.5 insert、replace与include的区别 128
8.1.6 含有变量的片断引用 129
8.1.7 片断块引用 130
8.1.8 无操作符的使用 131
8.1.9 删除模板 132
8.1.10 基本表达式总结 134
8.2 模板与逻辑分离 134
8.2.1 逻辑分离例子 134
8.2.2 逻辑分离配置 136
8.2.3 关联节点的选择 137
8.3 模板注释 137
8.3.1 解析层注释 138
8.3.2 原型注释 139
8.4 内联语法 139
8.4.1 使用内联语法显示文本 139
8.4.2 在JavaScript中使用内联语法 140
8.4.3 在CSS中使用内联语法 140
8.4.4 内联语法注释 141
8.4.5 内联语法序列化 142
8.5 模板缓存 143
8.5.1 开启与配置缓存 143
8.5.2 缓存有效时间 145
8.6 本章小结 146
第9章 Thymeleaf原理与扩展 147
9.1 概念与接口介绍 148
9.1.1 方言 148
9.1.2 处理器 149
9.1.3 模板处理者 150
9.1.4 模板解析事件 150
9.1.5 节点与标签 151
9.2 深入Thymeleaf模板处理 151
9.2.1 策略模式 151
9.2.2 责任链模式 153
9.2.3 合并使用策略模式与责任链模式 156
9.2.4 模板处理过程 159
9.2.5 模板事件 161
9.3 处理器 161
9.3.1 预处理器 161
9.3.2 后处理器 163
9.3.3 一般处理器 164
9.3.4 处理器优先级 165
9.3.5 标签处理器 167
9.3.6 模型处理器 168
9.3.7 边界处理器 170
9.3.8 其他处理器 170
9.4 Thymeleaf扩展 171
9.4.1 自定义标签 171
9.4.2 自定义模板属性 173
9.4.3 自定义内置对象 175
9.4.4 自定义执行属性 176
9.5 本章小结 177
第10章 Spring Boot与Thymeleaf整合 178
10.1 在Spring Boot中配置Thymeleaf 179
10.1.1 模板引擎配置 179
10.1.2 Spring MVC视图解析器 181
10.1.3 Thymeleaf视图解析器 184
10.1.4 数据转换配置 186
10.1.5 模板国际化 186
10.2 表单处理 188
10.2.1 表单提交 188
10.2.2 使用th:field属性 189
10.2.3 HTML节点的id生成 190
10.2.4 实现label节点 192
10.2.5 在模板中处理checkbox与radio 193
10.2.6 表单提交处理checkbox与radio 195
10.3 表单验证 195
10.3.1 表单验证 195
10.3.2 修改信息文件 197
10.3.3 输出错误信息 197
10.4 片断的使用 198
10.4.1 引用片断 198
10.4.2 使用bean选择片断 199
10.4.3 在控制器中引用片断 201
10.5 自定义标签 201
10.5.1 方言与处理器 201
10.5.2 配置方言 203
10.6 本章小结 204
第11章 使用JavaScript库 205
11.1 使用jQuery 206
11.1.1 概述 206
11.1.2 选择器 206
11.1.3 事件 207
11.1.4 数据列表 208
11.1.5 AJAX调用GET方法 209
11.1.6 AJAX调用POST方法 210
11.1.7 表单验证 211
11.2 Bootstrap 213
11.2.1 概述 213
11.2.2 数据列表 214
11.2.3 分页 215
11.2.4 表单 218
11.2.5 警告框的使用 219
11.3 Vue.js 221
11.3.1 概述 221
11.3.2 组件 222
11.3.3 指令 224
11.3.4 循环指令 225
11.3.5 表单验证 226
11.4 本章小结 227
第12章 数据库实战 228
12.1 概述 229
12.1.1 关于Spring Data 229
12.1.2 Spring Data的功能 229
12.1.3 Spring Data模块 230
12.2 Spring Data与JPA 230
12.2.1 构建项目 230
12.2.2 数据访问层与业务层 231
12.2.3 自定义数据存储逻辑 233
12.2.4 方法名查询 233
12.2.5 使用@Query注解 234
12.3 Spring Data与MongoDB 235
12.3.1 安装MongoDB 235
12.3.2 配置权限 236
12.3.3 MongoDB的相关概念 236
12.3.4 构建项目 236
12.3.5 数据访问层与业务层 237
12.3.6 自定义数据存储逻辑 238
12.3.7 方法名查询 239
12.3.8 使用@Query注解 240
12.4 Spring Data与Redis 241
12.4.1 Redis的安装与配置 241
12.4.2 Redis的数据类型 242
12.4.3 使用Jedis 242
12.4.4 构建Spring Data项目 243
12.4.5 数据访问层与业务层 244
12.4.6 自定义数据存储逻辑 246
12.4.7 方法名查询 247
12.5 本章小结 247
第13章 开发微服务 248
13.1 微服务与Spring Cloud 249
13.1.1 微服务简介 249
13.1.2 Netflix与Spring Cloud 249
13.1.3 Spring Cloud模块介绍 250
13.2 Eureka服务治理 250
13.2.1 Eureka架构 250
13.2.2 构建服务器 251
13.2.3 服务提供者 253
13.2.4 服务调用者 255
13.2.5 程序结构 257
13.3 Ribbon负载均衡 257
13.3.1 Ribbon介绍 258
13.3.2 第一个Ribbon程序 258
13.3.3 在Spring Cloud中测试使用 Ribbon 259
13.4 客户端Feign 260
13.4.1 Feign介绍 260
13.4.2 第一个Feign程序 260
13.4.3 使用Feign调用微服务 262
13.5 容错框架Hystrix 263
13.5.1 Hystrix介绍 263
13.5.2 第一个Hystrix程序 265
13.5.3 在Spring Cloud中整合Hystrix 266
13.6 本章小结 268
第14章 实战案例 269
14.1 系统功能及界面 270
14.1.1 登录与首页 270
14.1.2 图书管理模块 271
14.1.3 入库模块 272
14.1.4 销售模块 273
14.1.5 导航组件与分页组件 274
14.1.6 运行本章案例 275
14.2 数据库设计 275
14.2.1 用户表 275
14.2.2 图书表与库存表 275
14.2.3 入库单数据表 276
14.2.4 销售单数据表 276
14.3 搭建项目框架 277
14.3.1 项目依赖与项目结构 277
14.3.2 项目配置 278
14.3.3 实体设计 279
14.3.4 用户登录 281
14.3.5 片断定义 282
14.4 图书管理 283
14.4.1 数据列表 283
14.4.2 通用的分页组件 285
14.4.3 图片上传 286
14.4.4 新建图书 288
14.4.5 查看与修改图书 289
14.4.6 删除图书 290
14.5 销售单模块 291
14.5.1 列表与分页功能 291
14.5.2 选择图书 293
14.5.3 删除已选图书与修改数量 295
14.5.4 新建销售单 297
14.5.5 操作库存 299
14.6 首页数据查询与排序 300
14.6.1 库存查询 300
14.6.2 图书查询与轮播 301
14.6.3 数据排序 303
14.7 本章小结 304
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Spring Boot 2+Thymeleaf企业应用实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Spring Boot 2+Thymeleaf企业应用实战
第1章 概述 1
1.1 Java EE开发技术 2
1.1.1 Java EE的三层架构 2
1.1.2 MVC框架 2
1.1.3 数据访问层框架 3
1.1.4 视图技术 3
1.2 JDK的下载与安装 3
1.3 安装与配置Maven 4
1.3.1 关于Maven 4
1.3.2 下载与安装Maven 4
1.3.3 配置远程仓库 5
1.4 安装Eclipse 5
1.4.1 Eclipse版本 5
1.4.2 在Eclipse中配置Maven 5
1.4.3 获取本书代码 6
1.5 本章小结 6
第2章 初试Spring Boot 7
2.1 Spring Boot介绍 8
2.1.1 Spring Boot简介 8
2.1.2 starter模块 8
2.2 构建第一个Spring Boot程序 9
2.2.1 新建Maven项目 9
2.2.2 编写启动类 10
2.2.3 编写控制器 11
2.2.4 开发环境的热部署 12
2.3 运行单元测试 12
2.3.1 测试Web服务 12
2.3.2 模拟Web测试 13
2.3.3 测试业务组件 13
2.3.4 模拟业务组件 14
2.4 发布与调用REST服务 15
2.4.1 REST 15
2.4.2 发布REST服务 15
2.4.3 使用RestTemplate调用服务 16
2.4.4 使用Feign调用服务 18
2.5 本章小结 19
第3章 Spring Boot配置 20
3.1 配置文件 21
3.1.1 默认配置文件 21
3.1.2 指定配置文件 22
3.1.3 yml文件 22
3.1.4 使用profile指定配置 23
3.2 Web配置 24
3.2.1 Servlet配置 24
3.2.2 Listener配置 25
3.2.3 Filter配置 26
3.2.4 构建可部署的war包 26
3.2.5 JSP配置 28
3.3 其他配置 30
3.3.1 服务器常用配置 30
3.3.2 响应压缩 30
3.3.3 SSL配置 32
3.3.4 使用其他服务器 32
3.3.5 服务器访问日志 33
3.3.6 banner配置 34
3.4 自定义配置 35
3.4.1 @Value注解 35
3.4.2 定义属性映射对象 36
3.4.3 使用配置 37
3.4.4 属性自动识别 38
3.5 本章小结 39
第4章 Spring Boot的注解 40
4.1 Spring的常用注解 41
4.1.1 bean定义 41
4.1.2 依赖注入 42
4.1.3 使用Primary注解 44
4.1.4 Scope注解 45
4.1.5 方法注入 46
4.1.6 AOP注解 47
4.1.7 ComponentScan注解 49
4.2 高级Spring注解 50
4.2.1 限定注解 50
4.2.2 自定义限定注解 51
4.2.3 自定义bean的生命周期 52
4.3 Spring MVC的常用注解 54
4.3.1 Controller注解 54
4.3.2 RequestMapping注解 55
4.3.3 PathVariable注解 56
4.3.4 MatrixVariable注解 56
4.3.5 RequestParam注解 57
4.3.6 文件上传 58
4.3.7 RestController注解 58
4.4 Spring Boot的条件注解 59
4.4.1 类条件注解 59
4.4.2 项目依赖问题 60
4.4.3 其他条件注解 61
4.4.4 自定义条件注解 61
4.4.5 Spring Boot的自动配置 62
4.5 本章小结 63
第5章 初试Thymeleaf 64
5.1 Thymeleaf 65
5.1.1 什么是Thymeleaf 65
5.1.2 支持的模板类型 65
5.1.3 HTML模板 65
5.1.4 XML模板 66
5.2 初试Thymeleaf API 66
5.2.1 处理HTML 66
5.2.2 更换模板解析器 67
5.2.3 处理资源文件 67
5.2.4 变量处理 68
5.2.5 遍历集合 69
5.2.6 设置前缀与后缀 69
5.3 在Servlet应用中整合Thymeleaf 70
5.3.1 建立项目 70
5.3.2 配置模板引擎 71
5.3.3 在Servlet中使用Thymeleaf 72
5.3.4 编写模板文件 73
5.4 在Struts2中整合Thymeleaf 74
5.4.1 建立与配置Struts2项目 74
5.4.2 配置Struts Action 75
5.4.3 整合Themeleaf 76
5.5 在Spring Boot中整合Thymeleaf 77
5.5.1 建立与配置项目 77
5.5.2 编写控制器与模板 78
5.5.3 静态资源 79
5.6 本章小结 79
第6章 Thymeleaf对象的使用 80
6.1 文本处理 81
6.1.1 外部文本输出 81
6.1.2 文本国际化 82
6.1.3 处理转义文本 83
6.1.4 读取变量 83
6.1.5 在文本信息中使用变量 84
6.1.6 其他读取变量的方式 84
6.1.7 链接表达式 85
6.2 基本对象 86
6.2.1 基本对象概述 86
6.2.2 #ctx对象 87
6.2.3 Web对象 87
6.2.4 内置变量 88
6.2.5 使用基本对象的注意事项 88
6.3 数字对象 89
6.3.1 整数格式化 89
6.3.2 小数格式化 90
6.3.3 货币格式化 91
6.3.4 百分比格式化 92
6.3.5 使用sequence方法 92
6.4 字符串对象 92
6.4.1 toString与length方法 93
6.4.2 非空判断与默认值处理 93
6.4.3 包含判断 94
6.4.4 截取与替换 94
6.4.5 追加与拼接 95
6.4.6 分割与连接 96
6.4.7 大小写转换 96
6.4.8 字符串编码与解码 97
6.4.9 其他处理 98
6.5 日期对象 98
6.5.1 格式化日期 98
6.5.2 获取日期字段 99
6.5.3 创建日期 100
6.6 数组与集合对象 101
6.6.1 数组 101
6.6.2 List与Set 101
6.6.3 Map 101
6.7 其他内置对象 102
6.7.1 messages对象 102
6.7.2 uris对象 102
6.7.3 aggregates对象 103
6.8 本章小结 103
第7章 Thymeleaf常用语法 104
7.1 表达式语法之运算符 105
7.1.1 表达式常量 105
7.1.2 字符串拼接 106
7.1.3 算术运算符 106
7.1.4 关系运算符 107
7.1.5 条件运算符 108
7.1.6 无操作符 108
7.2 表达式语法进阶 108
7.2.1 数据转换 108
7.2.2 自定义数据转换类 109
7.2.3 Spring Boot数据转换 110
7.2.4 表达式预处理 112
7.2.5 表达式调用工具方法 113
7.3 属性设置 114
7.3.1 使用th:attr 114
7.3.2 设置HTML节点属性 114
7.3.3 属性值拼接 115
7.3.4 HTML5属性支持 115
7.4 条件判断与数据迭代 116
7.4.1 条件判断 116
7.4.2 switch case语法 117
7.4.3 使用th:each属性 117
7.4.4 常见迭代类型 118
7.4.5 迭代状态对象 118
7.4.6 数据延迟加载 120
7.4.7 在Spring Boot中使用延迟加载 121
7.4.8 星号表达式 121
7.5 本章小结 122
第8章 深入Thymeleaf模板 123
8.1 模板片断 124
8.1.1 定义与引用模板片断 124
8.1.2 片断引用语法 125
8.1.3 选择器的基础语法 126
8.1.4 选择器的其他语法 128
8.1.5 insert、replace与include的区别 128
8.1.6 含有变量的片断引用 129
8.1.7 片断块引用 130
8.1.8 无操作符的使用 131
8.1.9 删除模板 132
8.1.10 基本表达式总结 134
8.2 模板与逻辑分离 134
8.2.1 逻辑分离例子 134
8.2.2 逻辑分离配置 136
8.2.3 关联节点的选择 137
8.3 模板注释 137
8.3.1 解析层注释 138
8.3.2 原型注释 139
8.4 内联语法 139
8.4.1 使用内联语法显示文本 139
8.4.2 在JavaScript中使用内联语法 140
8.4.3 在CSS中使用内联语法 140
8.4.4 内联语法注释 141
8.4.5 内联语法序列化 142
8.5 模板缓存 143
8.5.1 开启与配置缓存 143
8.5.2 缓存有效时间 145
8.6 本章小结 146
第9章 Thymeleaf原理与扩展 147
9.1 概念与接口介绍 148
9.1.1 方言 148
9.1.2 处理器 149
9.1.3 模板处理者 150
9.1.4 模板解析事件 150
9.1.5 节点与标签 151
9.2 深入Thymeleaf模板处理 151
9.2.1 策略模式 151
9.2.2 责任链模式 153
9.2.3 合并使用策略模式与责任链模式 156
9.2.4 模板处理过程 159
9.2.5 模板事件 161
9.3 处理器 161
9.3.1 预处理器 161
9.3.2 后处理器 163
9.3.3 一般处理器 164
9.3.4 处理器优先级 165
9.3.5 标签处理器 167
9.3.6 模型处理器 168
9.3.7 边界处理器 170
9.3.8 其他处理器 170
9.4 Thymeleaf扩展 171
9.4.1 自定义标签 171
9.4.2 自定义模板属性 173
9.4.3 自定义内置对象 175
9.4.4 自定义执行属性 176
9.5 本章小结 177
第10章 Spring Boot与Thymeleaf整合 178
10.1 在Spring Boot中配置Thymeleaf 179
10.1.1 模板引擎配置 179
10.1.2 Spring MVC视图解析器 181
10.1.3 Thymeleaf视图解析器 184
10.1.4 数据转换配置 186
10.1.5 模板国际化 186
10.2 表单处理 188
10.2.1 表单提交 188
10.2.2 使用th:field属性 189
10.2.3 HTML节点的id生成 190
10.2.4 实现label节点 192
10.2.5 在模板中处理checkbox与radio 193
10.2.6 表单提交处理checkbox与radio 195
10.3 表单验证 195
10.3.1 表单验证 195
10.3.2 修改信息文件 197
10.3.3 输出错误信息 197
10.4 片断的使用 198
10.4.1 引用片断 198
10.4.2 使用bean选择片断 199
10.4.3 在控制器中引用片断 201
10.5 自定义标签 201
10.5.1 方言与处理器 201
10.5.2 配置方言 203
10.6 本章小结 204
第11章 使用JavaScript库 205
11.1 使用jQuery 206
11.1.1 概述 206
11.1.2 选择器 206
11.1.3 事件 207
11.1.4 数据列表 208
11.1.5 AJAX调用GET方法 209
11.1.6 AJAX调用POST方法 210
11.1.7 表单验证 211
11.2 Bootstrap 213
11.2.1 概述 213
11.2.2 数据列表 214
11.2.3 分页 215
11.2.4 表单 218
11.2.5 警告框的使用 219
11.3 Vue.js 221
11.3.1 概述 221
11.3.2 组件 222
11.3.3 指令 224
11.3.4 循环指令 225
11.3.5 表单验证 226
11.4 本章小结 227
第12章 数据库实战 228
12.1 概述 229
12.1.1 关于Spring Data 229
12.1.2 Spring Data的功能 229
12.1.3 Spring Data模块 230
12.2 Spring Data与JPA 230
12.2.1 构建项目 230
12.2.2 数据访问层与业务层 231
12.2.3 自定义数据存储逻辑 233
12.2.4 方法名查询 233
12.2.5 使用@Query注解 234
12.3 Spring Data与MongoDB 235
12.3.1 安装MongoDB 235
12.3.2 配置权限 236
12.3.3 MongoDB的相关概念 236
12.3.4 构建项目 236
12.3.5 数据访问层与业务层 237
12.3.6 自定义数据存储逻辑 238
12.3.7 方法名查询 239
12.3.8 使用@Query注解 240
12.4 Spring Data与Redis 241
12.4.1 Redis的安装与配置 241
12.4.2 Redis的数据类型 242
12.4.3 使用Jedis 242
12.4.4 构建Spring Data项目 243
12.4.5 数据访问层与业务层 244
12.4.6 自定义数据存储逻辑 246
12.4.7 方法名查询 247
12.5 本章小结 247
第13章 开发微服务 248
13.1 微服务与Spring Cloud 249
13.1.1 微服务简介 249
13.1.2 Netflix与Spring Cloud 249
13.1.3 Spring Cloud模块介绍 250
13.2 Eureka服务治理 250
13.2.1 Eureka架构 250
13.2.2 构建服务器 251
13.2.3 服务提供者 253
13.2.4 服务调用者 255
13.2.5 程序结构 257
13.3 Ribbon负载均衡 257
13.3.1 Ribbon介绍 258
13.3.2 第一个Ribbon程序 258
13.3.3 在Spring Cloud中测试使用 Ribbon 259
13.4 客户端Feign 260
13.4.1 Feign介绍 260
13.4.2 第一个Feign程序 260
13.4.3 使用Feign调用微服务 262
13.5 容错框架Hystrix 263
13.5.1 Hystrix介绍 263
13.5.2 第一个Hystrix程序 265
13.5.3 在Spring Cloud中整合Hystrix 266
13.6 本章小结 268
第14章 实战案例 269
14.1 系统功能及界面 270
14.1.1 登录与首页 270
14.1.2 图书管理模块 271
14.1.3 入库模块 272
14.1.4 销售模块 273
14.1.5 导航组件与分页组件 274
14.1.6 运行本章案例 275
14.2 数据库设计 275
14.2.1 用户表 275
14.2.2 图书表与库存表 275
14.2.3 入库单数据表 276
14.2.4 销售单数据表 276
14.3 搭建项目框架 277
14.3.1 项目依赖与项目结构 277
14.3.2 项目配置 278
14.3.3 实体设计 279
14.3.4 用户登录 281
14.3.5 片断定义 282
14.4 图书管理 283
14.4.1 数据列表 283
14.4.2 通用的分页组件 285
14.4.3 图片上传 286
14.4.4 新建图书 288
14.4.5 查看与修改图书 289
14.4.6 删除图书 290
14.5 销售单模块 291
14.5.1 列表与分页功能 291
14.5.2 选择图书 293
14.5.3 删除已选图书与修改数量 295
14.5.4 新建销售单 297
14.5.5 操作库存 299
14.6 首页数据查询与排序 300
14.6.1 库存查询 300
14.6.2 图书查询与轮播 301
14.6.3 数据排序 303
14.7 本章小结 304
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Spring Boot 2+Thymeleaf企业应用实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Spring Boot 2+Thymeleaf企业应用实战
第1章 概述 1
1.1 Java EE开发技术 2
1.1.1 Java EE的三层架构 2
1.1.2 MVC框架 2
1.1.3 数据访问层框架 3
1.1.4 视图技术 3
1.2 JDK的下载与安装 3
1.3 安装与配置Maven 4
1.3.1 关于Maven 4
1.3.2 下载与安装Maven 4
1.3.3 配置远程仓库 5
1.4 安装Eclipse 5
1.4.1 Eclipse版本 5
1.4.2 在Eclipse中配置Maven 5
1.4.3 获取本书代码 6
1.5 本章小结 6
第2章 初试Spring Boot 7
2.1 Spring Boot介绍 8
2.1.1 Spring Boot简介 8
2.1.2 starter模块 8
2.2 构建第一个Spring Boot程序 9
2.2.1 新建Maven项目 9
2.2.2 编写启动类 10
2.2.3 编写控制器 11
2.2.4 开发环境的热部署 12
2.3 运行单元测试 12
2.3.1 测试Web服务 12
2.3.2 模拟Web测试 13
2.3.3 测试业务组件 13
2.3.4 模拟业务组件 14
2.4 发布与调用REST服务 15
2.4.1 REST 15
2.4.2 发布REST服务 15
2.4.3 使用RestTemplate调用服务 16
2.4.4 使用Feign调用服务 18
2.5 本章小结 19
第3章 Spring Boot配置 20
3.1 配置文件 21
3.1.1 默认配置文件 21
3.1.2 指定配置文件 22
3.1.3 yml文件 22
3.1.4 使用profile指定配置 23
3.2 Web配置 24
3.2.1 Servlet配置 24
3.2.2 Listener配置 25
3.2.3 Filter配置 26
3.2.4 构建可部署的war包 26
3.2.5 JSP配置 28
3.3 其他配置 30
3.3.1 服务器常用配置 30
3.3.2 响应压缩 30
3.3.3 SSL配置 32
3.3.4 使用其他服务器 32
3.3.5 服务器访问日志 33
3.3.6 banner配置 34
3.4 自定义配置 35
3.4.1 @Value注解 35
3.4.2 定义属性映射对象 36
3.4.3 使用配置 37
3.4.4 属性自动识别 38
3.5 本章小结 39
第4章 Spring Boot的注解 40
4.1 Spring的常用注解 41
4.1.1 bean定义 41
4.1.2 依赖注入 42
4.1.3 使用Primary注解 44
4.1.4 Scope注解 45
4.1.5 方法注入 46
4.1.6 AOP注解 47
4.1.7 ComponentScan注解 49
4.2 高级Spring注解 50
4.2.1 限定注解 50
4.2.2 自定义限定注解 51
4.2.3 自定义bean的生命周期 52
4.3 Spring MVC的常用注解 54
4.3.1 Controller注解 54
4.3.2 RequestMapping注解 55
4.3.3 PathVariable注解 56
4.3.4 MatrixVariable注解 56
4.3.5 RequestParam注解 57
4.3.6 文件上传 58
4.3.7 RestController注解 58
4.4 Spring Boot的条件注解 59
4.4.1 类条件注解 59
4.4.2 项目依赖问题 60
4.4.3 其他条件注解 61
4.4.4 自定义条件注解 61
4.4.5 Spring Boot的自动配置 62
4.5 本章小结 63
第5章 初试Thymeleaf 64
5.1 Thymeleaf 65
5.1.1 什么是Thymeleaf 65
5.1.2 支持的模板类型 65
5.1.3 HTML模板 65
5.1.4 XML模板 66
5.2 初试Thymeleaf API 66
5.2.1 处理HTML 66
5.2.2 更换模板解析器 67
5.2.3 处理资源文件 67
5.2.4 变量处理 68
5.2.5 遍历集合 69
5.2.6 设置前缀与后缀 69
5.3 在Servlet应用中整合Thymeleaf 70
5.3.1 建立项目 70
5.3.2 配置模板引擎 71
5.3.3 在Servlet中使用Thymeleaf 72
5.3.4 编写模板文件 73
5.4 在Struts2中整合Thymeleaf 74
5.4.1 建立与配置Struts2项目 74
5.4.2 配置Struts Action 75
5.4.3 整合Themeleaf 76
5.5 在Spring Boot中整合Thymeleaf 77
5.5.1 建立与配置项目 77
5.5.2 编写控制器与模板 78
5.5.3 静态资源 79
5.6 本章小结 79
第6章 Thymeleaf对象的使用 80
6.1 文本处理 81
6.1.1 外部文本输出 81
6.1.2 文本国际化 82
6.1.3 处理转义文本 83
6.1.4 读取变量 83
6.1.5 在文本信息中使用变量 84
6.1.6 其他读取变量的方式 84
6.1.7 链接表达式 85
6.2 基本对象 86
6.2.1 基本对象概述 86
6.2.2 #ctx对象 87
6.2.3 Web对象 87
6.2.4 内置变量 88
6.2.5 使用基本对象的注意事项 88
6.3 数字对象 89
6.3.1 整数格式化 89
6.3.2 小数格式化 90
6.3.3 货币格式化 91
6.3.4 百分比格式化 92
6.3.5 使用sequence方法 92
6.4 字符串对象 92
6.4.1 toString与length方法 93
6.4.2 非空判断与默认值处理 93
6.4.3 包含判断 94
6.4.4 截取与替换 94
6.4.5 追加与拼接 95
6.4.6 分割与连接 96
6.4.7 大小写转换 96
6.4.8 字符串编码与解码 97
6.4.9 其他处理 98
6.5 日期对象 98
6.5.1 格式化日期 98
6.5.2 获取日期字段 99
6.5.3 创建日期 100
6.6 数组与集合对象 101
6.6.1 数组 101
6.6.2 List与Set 101
6.6.3 Map 101
6.7 其他内置对象 102
6.7.1 messages对象 102
6.7.2 uris对象 102
6.7.3 aggregates对象 103
6.8 本章小结 103
第7章 Thymeleaf常用语法 104
7.1 表达式语法之运算符 105
7.1.1 表达式常量 105
7.1.2 字符串拼接 106
7.1.3 算术运算符 106
7.1.4 关系运算符 107
7.1.5 条件运算符 108
7.1.6 无操作符 108
7.2 表达式语法进阶 108
7.2.1 数据转换 108
7.2.2 自定义数据转换类 109
7.2.3 Spring Boot数据转换 110
7.2.4 表达式预处理 112
7.2.5 表达式调用工具方法 113
7.3 属性设置 114
7.3.1 使用th:attr 114
7.3.2 设置HTML节点属性 114
7.3.3 属性值拼接 115
7.3.4 HTML5属性支持 115
7.4 条件判断与数据迭代 116
7.4.1 条件判断 116
7.4.2 switch case语法 117
7.4.3 使用th:each属性 117
7.4.4 常见迭代类型 118
7.4.5 迭代状态对象 118
7.4.6 数据延迟加载 120
7.4.7 在Spring Boot中使用延迟加载 121
7.4.8 星号表达式 121
7.5 本章小结 122
第8章 深入Thymeleaf模板 123
8.1 模板片断 124
8.1.1 定义与引用模板片断 124
8.1.2 片断引用语法 125
8.1.3 选择器的基础语法 126
8.1.4 选择器的其他语法 128
8.1.5 insert、replace与include的区别 128
8.1.6 含有变量的片断引用 129
8.1.7 片断块引用 130
8.1.8 无操作符的使用 131
8.1.9 删除模板 132
8.1.10 基本表达式总结 134
8.2 模板与逻辑分离 134
8.2.1 逻辑分离例子 134
8.2.2 逻辑分离配置 136
8.2.3 关联节点的选择 137
8.3 模板注释 137
8.3.1 解析层注释 138
8.3.2 原型注释 139
8.4 内联语法 139
8.4.1 使用内联语法显示文本 139
8.4.2 在JavaScript中使用内联语法 140
8.4.3 在CSS中使用内联语法 140
8.4.4 内联语法注释 141
8.4.5 内联语法序列化 142
8.5 模板缓存 143
8.5.1 开启与配置缓存 143
8.5.2 缓存有效时间 145
8.6 本章小结 146
第9章 Thymeleaf原理与扩展 147
9.1 概念与接口介绍 148
9.1.1 方言 148
9.1.2 处理器 149
9.1.3 模板处理者 150
9.1.4 模板解析事件 150
9.1.5 节点与标签 151
9.2 深入Thymeleaf模板处理 151
9.2.1 策略模式 151
9.2.2 责任链模式 153
9.2.3 合并使用策略模式与责任链模式 156
9.2.4 模板处理过程 159
9.2.5 模板事件 161
9.3 处理器 161
9.3.1 预处理器 161
9.3.2 后处理器 163
9.3.3 一般处理器 164
9.3.4 处理器优先级 165
9.3.5 标签处理器 167
9.3.6 模型处理器 168
9.3.7 边界处理器 170
9.3.8 其他处理器 170
9.4 Thymeleaf扩展 171
9.4.1 自定义标签 171
9.4.2 自定义模板属性 173
9.4.3 自定义内置对象 175
9.4.4 自定义执行属性 176
9.5 本章小结 177
第10章 Spring Boot与Thymeleaf整合 178
10.1 在Spring Boot中配置Thymeleaf 179
10.1.1 模板引擎配置 179
10.1.2 Spring MVC视图解析器 181
10.1.3 Thymeleaf视图解析器 184
10.1.4 数据转换配置 186
10.1.5 模板国际化 186
10.2 表单处理 188
10.2.1 表单提交 188
10.2.2 使用th:field属性 189
10.2.3 HTML节点的id生成 190
10.2.4 实现label节点 192
10.2.5 在模板中处理checkbox与radio 193
10.2.6 表单提交处理checkbox与radio 195
10.3 表单验证 195
10.3.1 表单验证 195
10.3.2 修改信息文件 197
10.3.3 输出错误信息 197
10.4 片断的使用 198
10.4.1 引用片断 198
10.4.2 使用bean选择片断 199
10.4.3 在控制器中引用片断 201
10.5 自定义标签 201
10.5.1 方言与处理器 201
10.5.2 配置方言 203
10.6 本章小结 204
第11章 使用JavaScript库 205
11.1 使用jQuery 206
11.1.1 概述 206
11.1.2 选择器 206
11.1.3 事件 207
11.1.4 数据列表 208
11.1.5 AJAX调用GET方法 209
11.1.6 AJAX调用POST方法 210
11.1.7 表单验证 211
11.2 Bootstrap 213
11.2.1 概述 213
11.2.2 数据列表 214
11.2.3 分页 215
11.2.4 表单 218
11.2.5 警告框的使用 219
11.3 Vue.js 221
11.3.1 概述 221
11.3.2 组件 222
11.3.3 指令 224
11.3.4 循环指令 225
11.3.5 表单验证 226
11.4 本章小结 227
第12章 数据库实战 228
12.1 概述 229
12.1.1 关于Spring Data 229
12.1.2 Spring Data的功能 229
12.1.3 Spring Data模块 230
12.2 Spring Data与JPA 230
12.2.1 构建项目 230
12.2.2 数据访问层与业务层 231
12.2.3 自定义数据存储逻辑 233
12.2.4 方法名查询 233
12.2.5 使用@Query注解 234
12.3 Spring Data与MongoDB 235
12.3.1 安装MongoDB 235
12.3.2 配置权限 236
12.3.3 MongoDB的相关概念 236
12.3.4 构建项目 236
12.3.5 数据访问层与业务层 237
12.3.6 自定义数据存储逻辑 238
12.3.7 方法名查询 239
12.3.8 使用@Query注解 240
12.4 Spring Data与Redis 241
12.4.1 Redis的安装与配置 241
12.4.2 Redis的数据类型 242
12.4.3 使用Jedis 242
12.4.4 构建Spring Data项目 243
12.4.5 数据访问层与业务层 244
12.4.6 自定义数据存储逻辑 246
12.4.7 方法名查询 247
12.5 本章小结 247
第13章 开发微服务 248
13.1 微服务与Spring Cloud 249
13.1.1 微服务简介 249
13.1.2 Netflix与Spring Cloud 249
13.1.3 Spring Cloud模块介绍 250
13.2 Eureka服务治理 250
13.2.1 Eureka架构 250
13.2.2 构建服务器 251
13.2.3 服务提供者 253
13.2.4 服务调用者 255
13.2.5 程序结构 257
13.3 Ribbon负载均衡 257
13.3.1 Ribbon介绍 258
13.3.2 第一个Ribbon程序 258
13.3.3 在Spring Cloud中测试使用 Ribbon 259
13.4 客户端Feign 260
13.4.1 Feign介绍 260
13.4.2 第一个Feign程序 260
13.4.3 使用Feign调用微服务 262
13.5 容错框架Hystrix 263
13.5.1 Hystrix介绍 263
13.5.2 第一个Hystrix程序 265
13.5.3 在Spring Cloud中整合Hystrix 266
13.6 本章小结 268
第14章 实战案例 269
14.1 系统功能及界面 270
14.1.1 登录与首页 270
14.1.2 图书管理模块 271
14.1.3 入库模块 272
14.1.4 销售模块 273
14.1.5 导航组件与分页组件 274
14.1.6 运行本章案例 275
14.2 数据库设计 275
14.2.1 用户表 275
14.2.2 图书表与库存表 275
14.2.3 入库单数据表 276
14.2.4 销售单数据表 276
14.3 搭建项目框架 277
14.3.1 项目依赖与项目结构 277
14.3.2 项目配置 278
14.3.3 实体设计 279
14.3.4 用户登录 281
14.3.5 片断定义 282
14.4 图书管理 283
14.4.1 数据列表 283
14.4.2 通用的分页组件 285
14.4.3 图片上传 286
14.4.4 新建图书 288
14.4.5 查看与修改图书 289
14.4.6 删除图书 290
14.5 销售单模块 291
14.5.1 列表与分页功能 291
14.5.2 选择图书 293
14.5.3 删除已选图书与修改数量 295
14.5.4 新建销售单 297
14.5.5 操作库存 299
14.6 首页数据查询与排序 300
14.6.1 库存查询 300
14.6.2 图书查询与轮播 301
14.6.3 数据排序 303
14.7 本章小结 304
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Spring Boot 2+Thymeleaf企业应用实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Spring响应式微服务 : Spring Boot 2+Spring 5+Spring Cloud实战
第1章 直面响应式微服务架构 1
1.1 响应式系统核心概念 1
1.1.1 从传统编程方法到响应式编程方法 1
1.1.2 响应式宣言与响应式系统 4
1.2 剖析微服务架构 6
1.2.1 分布式系统与微服务架构 6
1.2.2 服务拆分与集成 8
1.2.3 微服务架构的核心组件 11
1.2.4 微服务架构技术体系 13
1.3 构建响应式微服务架构 15
1.3.1 响应式微服务架构设计原则 15
1.3.2 整合响应式编程与微服务架构 18
1.4 全书架构 19
1.5 本章小结 20
第2章 响应式编程模型与Reactor框架 21
2.1 响应式编程模型 21
2.1.1 流 22
2.1.2 背压 24
2.1.3 响应式流 25
2.2 Reactor框架 28
2.2.1 响应式编程实现技术概述 28
2.2.2 引入Reactor框架 31
2.3 创建Flux和Mono 34
2.3.1 创建Flux 34
2.3.2 创建Mono 37
2.4 Flux和Mono操作符 39
2.4.1 转换操作符 39
2.4.2 过滤操作符 43
2.4.3 组合操作符 46
2.4.4 条件操作符 49
2.4.5 数学操作符 52
2.4.6 Observable工具操作符 54
2.4.7 日志和调试操作符 56
2.5 Reactor框架中的背压机制 58
2.6 本章小结 60
第3章 构建响应式RESTful服务 61
3.1 使用Spring Boot 2.0构建微服务 61
3.1.1 Spring Boot基本特性 61
3.1.2 基于Spring Boot的第一个RESTful服务 63
3.1.3 使用Actuator组件强化服务 67
3.2 使用Spring WebFlux构建响应式服务 80
3.2.1 使用Spring Initializer初始化响应式Web应用 80
3.2.2 对比响应式Spring WebFlux与传统Spring WebMvc 82
3.2.3 使用注解编程模型创建响应式RESTful服务 84
3.2.4 使用函数式编程模型创建响应式RESTful服务 88
3.3 本章小结 93
第4章 构建响应式数据访问组件 94
4.1 Spring Data数据访问模型 94
4.1.1 Spring Data抽象 95
4.1.2 集成Spring Data JPA 98
4.1.3 集成Spring Data Redis 100
4.1.4 集成Spring Data Mongodb 103
4.2 响应式数据访问模型 104
4.2.1 Spring Reactive Data抽象 105
4.2.2 创建响应式数据访问层组件 107
4.3 响应式Mongodb 108
4.3.1 初始化Reactive Mongodb运行环境 109
4.3.2 创建Reactive Mongodb Repository 112
4.3.3 使用CommandLineRunner初始化Mongodb数据 113
4.3.4 在Service层中调用Reactive MongodbRepository 114
4.4 响应式Redis 117
4.4.1 初始化Reactive Redis运行环境 117
4.4.2 创建Reactive Redis Repository 121
4.4.3 在Service层中调用Reactive Repository 122
4.5 本章小结 123
第5章 构建响应式消息通信组件 124
5.1 消息通信系统简介 125
5.2 使用Spring Cloud Stream构建消息通信系统 126
5.2.1 Spring Cloud Stream基本架构 126
5.2.2 Spring Cloud Stream中的Binder组件 130
5.2.3 使用Source组件实现消息发布者 135
5.2.4 使用@StreamListener注解实现消息消费者 137
5.3 引入Reactive Spring Cloud Stream实现响应式 消息通信系统 139
5.3.1 Reactive Spring Cloud Stream组件 139
5.3.2 Reactive Spring Cloud Stream示例 141
5.4 本章小结 147
第6章 构建响应式微服务架构 148
6.1 使用Spring Cloud创建响应式微服务架构 148
6.1.1 服务治理 149
6.1.2 负载均衡 154
6.1.3 服务容错 161
6.1.4 服务网关 166
6.1.5 服务配置 173
6.1.6 服务监控 177
6.2 使用WebClient实现响应式服务调用 182
6.2.1 创建和配置WebClient 182
6.2.2 使用WebClient访问服务 183
6.3 本章小结 187
第7章 测试响应式微服务架构 188
7.1 初始化测试环境 189
7.1.1 引入spring-boot-starter-test组件 189
7.1.2 解析基础类测试注解 190
7.1.3 编写第一个测试用例 191
7.2 测试Reactor组件 192
7.3 测试响应式Repository层组件 194
7.3.1 测试内嵌式Mongodb 194
7.3.2 测试真实MongoDB 197
7.4　测试响应式Service层组件 199
7.5 测试响应式Controller层组件 201
7.6 本章小结 204
第8章 响应式微服务架构演进案例分析 205
8.1 PrescriptionSystem案例简介 205
8.2 传统微服务架构实现案例 207
8.2.1 构建基础设施类服务 207
8.2.2 构建Medicine服务 213
8.2.3 构建Card服务 219
8.2.4 构建Prescription服务 224
８.3 响应式微服务架构演进案例 237
8.3.1 更新基础设施类服务 237
8.3.2 更新数据访问方式 241
8.3.3 更新事件通信方式 246
8.4 本章小结 266
参考文献 267
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Spring响应式微服务 : Spring Boot 2+Spring 5+Spring Cloud实战
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>微服务架构实战 : 基于Spring Boot、Spring Cloud、Docker
第1章 微服务架构设计 1
1.1 直面微服务架构 1
1.1.1 分布式系统与微服务架构 1
1.1.2 微服务架构的优势与挑战 3
1.1.3 实施微服务架构 5
1.2 服务建模方法 6
1.2.1 服务的模型 6
1.2.2 服务的边界 7
1.2.3 服务的数据 7
1.3 服务拆分与集成 8
1.3.1 服务拆分 8
1.3.2 服务集成 9
1.4 微服务架构的基础组件和关键要素 10
1.4.1 微服务架构的基础组件 11
1.4.2 微服务架构的关键元素 11
1.5 实现微服务架构 13
1.5.1 微服务架构技术体系 13
1.5.2 微服务架构实现技术选型 14
1.6 案例分析 17
1.7 全书架构 18
1.8 本章小结 19
第2章 使用Spring Boot构建服务 21
2.1 引入Spring Boot 21
2.2 基于Spring Boot的第一个服务 23
2.2.1 环境准备 23
2.2.2 实现RESTful服务 24
2.3 Spring Boot常见功能 28
2.3.1 集成Spring Data 28
2.3.2 集成消息中间件 37
2.3.3 系统监控 39
2.4 Spring Boot基本原理 44
2.5 本章小结 46
第3章 Spring Cloud Netflix Eureka与服务治理 47
3.1 服务治理解决方案 48
3.1.1 服务治理的需求和模型 48
3.1.2 服务治理的基本方案 49
3.2 构建Eureka服务 52
3.2.1 构建单个Eureka服务器 52
3.2.2 构建Eureka服务器集群 55
3.3 使用Eureka注册和发现服务 57
3.3.1 通过配置实现服务注册 58
3.3.2 获取服务注册信息 59
3.4 Eureka基本架构 61
3.4.1 Eureka服务注册和发现架构 61
3.4.2 Eureka高可用架构 64
3.4.3 Eureka区域亲和性 65
3.5 本章小结 66
第4章 Spring Cloud Netflix Ribbon与负载均衡 67
4.1 负载均衡 68
4.1.1 负载均衡的类型 68
4.1.2 负载均衡的算法 70
4.2 使用Ribbon实现客户端负载均衡 71
4.2.1 Spring Cloud Netflix Ribbon简介 71
4.2.2 使用DiscoveryClient查找服务 72
4.2.3 通过RestTemplate调用服务 74
4.3 Ribbon基本架构 78
4.3.1 Ribbon核心机制 79
4.3.2 Ribbon负载均衡策略 81
4.3.3 @LoadBalanced注解与RestTemplate 82
4.3.4 @RibbonClient注解与自定义负载均衡策略 83
4.4 本章小结 85
第5章 Spring Cloud Netflix Hystrix与服务容错 86
5.1 服务消费者容错思想和模式 87
5.1.1 服务消费者容错的需求 87
5.1.2 服务隔离 88
5.1.3 服务熔断 90
5.1.4 服务回退 91
5.2 使用Hystrix实现服务容错 91
5.2.1 引入Hystrix 92
5.2.2 使用Hystrix实现服务隔离 93
5.2.3 使用Hystrix实现服务熔断 96
5.2.4 使用Hystrix实现服务回退 99
5.3 Hystrix基本原理 101
5.3.1 服务隔离 101
5.3.2 服务熔断 103
5.3.3 Hystrix配置项 105
5.4 本章小结 109
第6章 Spring Cloud Netflix Zuul与API网关 110
6.1 服务网关的设计理念 111
6.1.1 服务网关的作用 111
6.1.2 服务网关的结构和功能 112
6.2 使用Zuul构建服务网关 113
6.2.1 构建Zuul服务器 113
6.2.2 配置Zuul服务路由 115
6.3 Zuul基本架构 120
6.3.1 ZuulFilter组件架构 120
6.3.2 使用Zuul过滤器 124
6.4 本章小结 129
第7章 Spring Cloud Config与配置中心 130
7.1 分布式配置中心方案 131
7.1.1 分布式配置模型 131
7.1.2 配置中心实现工具 133
7.2 构建配置中心服务器 134
7.2.1 引入Spring Cloud Config 134
7.2.2 实现基于本地文件系统的配置方案 135
7.2.3 实现基于Git的配置方案 139
7.3 使用配置服务 140
7.3.1 访问配置项 141
7.3.2 配置数据安全性 145
7.4 Spring Cloud Config特性 148
7.4.1 Spring Cloud Config对比Zookeeper 148
7.4.2 Spring Cloud Config高可用 149
7.5 本章小结 150
第8章 Spring Cloud Stream与事件驱动 151
8.1 事件驱动架构与模型 152
8.1.1 基本事件驱动架构与实现机制 152
8.1.2 事件驱动与领域模型 155
8.2 引入Spring Cloud Stream 157
8.2.1 Spring Cloud Stream基本架构 157
8.2.2 Spring Cloud Stream与Spring Integration 159
8.2.3 Spring Cloud Stream与消息中间件 162
8.3 实现消息发布者 165
8.3.1 消息发送场景与实现流程 165
8.3.2 在服务中添加消息发布者 166
8.4 实现消息消费者 170
8.4.1 消息消费场景与实现流程 170
8.4.2 在服务中添加消息消费者 172
8.5 本章小结 177
第9章 Spring Cloud Security与服务安全 178
9.1 服务访问安全性与OAuth协议 178
9.1.1 微服务架构中的安全性设计 179
9.1.2 OAuth协议 180
9.2 构建OAuth认证服务器 184
9.2.1 引入Spring Cloud Security 185
9.2.2 初始化用户与客户端 186
9.2.3 生成Token 191
9.3 使用OAuth保护服务访问 195
9.3.1 集成OAuth认证服务 195
9.3.2 创建服务访问策略 196
9.3.3 使用OAuth2RestTemplate传播Token 201
9.4 本章小结 206
第10章 Spring Cloud Sleuth与服务监控 207
10.1 服务监控与Spring Cloud Sleuth 207
10.1.1 服务监控基本原理 207
10.1.2 引入Spring Cloud Sleuth 209
10.2 整合Spring Cloud Sleuth与Zipkin 215
10.2.1 Zipkin基本结构 215
10.2.2 引入Zipkin 216
10.2.3 使用Zipkin跟踪服务调用链路 218
10.2.4 使用Zipkin实现自定义跟踪 226
10.3 本章小结 228
第11章 Spring Test与服务测试 230
11.1 微服务测试的方法 231
11.1.1 单元测试 231
11.1.2 集成测试 233
11.1.3 端到端测试 233
11.2 测试Spring Boot应用程序 234
11.2.1 初始化测试环境 234
11.2.2 执行单元测试 237
11.3 使用Mock和注解实施集成测试 241
11.3.1 使用@JsonTest注解测试JSON数据 242
11.3.2 使用@DataJpaTest注解测试Repository层 244
11.3.3 使用Mock测试Service层 248
11.3.4 使用Mock和@WebMvcTest注解测试Controller层 252
11.4 消费者驱动的契约测试 254
11.4.1 面向契约的端对端测试 254
11.4.2 实现面向契约的端对端测试 257
11.5 本章小结 266
第12章 Docker与服务部署 267
12.1 Docker与微服务架构 267
12.1.1 Docker的优势 268
12.1.2 Docker组件与命令 268
12.2 使用Dockerfile构建服务镜像 272
12.2.1 Dockerfile命令 272
12.2.2 使用Dockerfile命令构建镜像 273
12.3 使用Docker Compose编排服务 276
12.3.1 Docker Compose组件与命令 276
12.3.2 使用Docker Compose 279
12.3.3 Docker Compose案例分析 281
12.4 本章小结 283
参考文献 284
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>微服务架构实战 : 基于Spring Boot、Spring Cloud、Docker
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Servlet＆JSP技術手冊 : 從Servlet到Spring Boot
目錄
第1章 簡介Web應用程式
第2章 撰寫與設定Servlet
第3章 請求與回應
第4章 會話管理
第5章 Servlet進階API、過濾器與傾聽器
第6章 使用JSP
第7章 使用JSTL
第8章 自訂標籤
第9章 整合資料庫
第10章 Web容器安全管理
第11章 JavaMail入門
第12章 從模式到框架
附錄A 如何使用本書專案
附錄B MySQL入門
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Servlet＆JSP技術手冊 : 從Servlet到Spring Boot
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JSP & Servlet学习笔记（第3版） : 从Servlet到Spring Boot
Chapter 1 Web应用程序简介 1
1.1 Web应用程序基础 2
1.1.1 关于HTML 2
1.1.2 URL、URN与URI 3
1.1.3 关于HTTP 5
1.1.4 HTTP请求方法 6
1.1.5 有关URI编码 9
1.1.6 后端与前端 11
1.1.7　Web安全概念 13
1.2 Servlet/JSP简介 14
1.2.1 何谓Web容器 14
1.2.2 Servlet与JSP的关系 16
1.2.3 关于MVC/Model 2 19
1.2.4 Java EE简介 22
1.3 重点复习 23
Chapter 2 编写与设置Servlet 24
2.1 第一个Servlet 25
2.1.1 准备开发环境 25
2.1.2 第一个Servlet程序 27
2.2 在Hello之后 29
2.2.1 关于HttpServlet 30
2.2.2 使用@WebServlet 32
2.2.3 使用web.xml 33
2.2.4 文件组织与部署 36
2.3 进阶部署设置 37
2.3.1 URL模式设置 37
2.3.2 Web文件夹结构 40
2.3.3 使用web-fragment.xml 41
2.4 重点复习 44
2.5 课后练习 45
Chapter 3 请求与响应 46
3.1 从容器到HttpServlet 47
3.1.1 Web容器做了什么 47
3.1.2 doXXX()方法 49
3.2 关于HttpServletRequest 52
3.2.1 处理请求参数 52
3.2.2　处理请求标头 55
3.2.3 请求参数编码处理 56
3.2.4 getReader()、getInputStream()读取内容 58
3.2.5 getPart()、getParts()取得
上传文件 62
3.2.6 使用RequestDispatcher调派请求 67
3.3 关于HttpServletResponse 73
3.3.1 设置响应标头、缓冲区 73
3.3.2 使用getWriter()输出字符 75
3.3.3 使用getOutputStream()输出
二进制字符 78
3.3.4 使用sendRedirect()、
sendError() 80
3.4 综合练习 81
3.4.1 微博应用程序功能概述 82
3.4.2 实现会员注册功能 83
3.4.3 实现会员登录功能 88
3.5 重点复习 89
3.6 课后练习 90
Chapter 4 会话管理 92
4.1 会话管理基本原理 93
4.1.1 使用隐藏域 93
4.1.2 使用Cookie 96
4.1.3 使用URI重写 100
4.2 HttpSession会话管理 102
4.2.1 使用HttpSession 103
4.2.2 HttpSession会话管理
原理 107
4.2.3 HttpSession与URI重写 109
4.3 综合练习 111
4.3.1 登录与注销 111
4.3.2　会员信息管理 112
4.3.3　新增与删除信息 116
4.4 重点复习 118
4.5 课后练习 119
Chapter 5 Servlet进阶API、过滤
器与监听器 120
5.1 Servlet进阶API 121
5.1.1 Servlet、ServletConfig与GenericServlet 121
5.1.2 使用ServletConfig 123
5.1.3 使用ServletContext 126
5.1.4　使用PushBuilder 128
5.2 应用程序事件、监听器 130
5.2.1 ServletContext事件、
监听器 130
5.2.2 HttpSession事件、
监听器 135
5.2.3 HttpServletRequest事件、
监听器 141
5.3 过滤器 142
5.3.1 过滤器的概念 142
5.3.2 实现与设置过滤器 144
5.3.3 请求封装器 149
5.3.4 响应封装器 153
5.4 异步处理 157
5.4.1 AsyncContext简介 158
5.4.2 异步Long Polling 160
5.4.3 更多AsyncContext细节 163
5.4.4　异步Server-Sent Event 164
5.4.5　使用ReadListener 167
5.4.6　使用WriteListener 169
5.5 综合练习 172
5.5.1 创建UserService 172
5.5.2 设置过滤器 177
5.5.3 重构微博 179
5.6 重点复习 183
5.7 课后练习 185
Chapter 6 使用JSP 186
6.1 从JSP到Servlet 187
6.1.1 JSP生命周期 187
6.1.2 Servlet至JSP的简单
转换 191
6.1.3 指示元素 194
6.1.4 声明、Scriptlet与表达式
元素 197
6.1.5 注释元素 201
6.1.6 隐式对象 201
6.1.7 错误处理 204
6.2 标准标签 208
6.2.1 、标签 208
6.2.2 、与简介 209
6.2.3 深入、与 211
6.2.4 谈谈Model 1 214
6.2.5 XML格式标签 216
6.3 表达式语言(EL) 217
6.3.1 EL简介 218
6.3.2 使用EL取得属性 220
6.3.3 EL隐式对象 222
6.3.4 EL运算符 223
6.3.5 自定义EL函数 224
6.3.6　EL 3.0 226
6.4 综合练习 227
6.4.1 改用JSP实现视图 228
6.4.2 重构UserService与
member.jsp 231
6.4.3 创建register.jsp、index.jsp、user.jsp 234
6.5 重点复习 242
6.6 课后练习 243
Chapter 7 使用JSTL 244
7.1 JSTL简介 245
7.2 核心标签库 246
7.2.1 流程处理标签 246
7.2.2 错误处理标签 249
7.2.3 网页导入、重定向、URI
处理标签 250
7.2.4 属性处理与输出标签 252
7.3 I18N兼容格式标签库 254
7.3.1 I18N基础 254
7.3.2 信息标签 257
7.3.3 地区标签 259
7.3.4 格式标签 264
7.4 XML标签库 267
7.4.1 XPath、XSLT基础 267
7.4.2 解析、设置与输出标签 270
7.4.3 流程处理标签 271
7.4.4 文件转换标签 272
7.5 函数标签库 274
7.6 综合练习 275
7.6.1 修改index.jsp、
register.jsp 275
7.6.2 修改member.jsp 277
7.6.3 修改user.jsp 278
7.7 重点复习 278
7.8 课后练习 280
Chapter 8 自定义标签 281
8.1 Tag File自定义标签 282
8.1.1 Tag File简介 282
8.1.2 处理标签属性与Body 285
8.1.3 TLD文件 287
8.2 Simple Tag自定义标签 288
8.2.1 Simple Tag简介 288
8.2.2 了解API架构与生命
周期 290
8.2.3 处理标签属性与Body 293
8.2.4 与父标签沟通 296
8.2.5 TLD文件 300
8.3 Tag自定义标签 301
8.3.1 Tag简介 301
8.3.2 了解架构与生命周期 302
8.3.3 重复执行标签Body 304
8.3.4 处理Body运行结果 306
8.3.5 与父标签沟通 309
8.4 综合练习 311
8.4.1　重构/使用DAO 312
8.4.2　加强user.jsp 315
8.5 重点复习 317
8.6 课后练习 319
Chapter 9 整合数据库 320
9.1 JDBC入门 321
9.1.1 JDBC简介 321
9.1.2 连接数据库 327
9.1.3 使用Statement、
ResultSet 331
9.1.4 使用PreparedStatement、CallableStatement 335
9.2 JDBC进阶 338
9.2.1 使用DataSource取得
连接 338
9.2.2 使用ResultSet卷动、更新
数据 341
9.2.3 批次更新 343
9.2.4 Blob与Clob 344
9.2.5 事务简介 350
9.2.6 metadata简介 356
9.2.7 RowSet简介 358
9.3 使用SQL标签库 363
9.3.1 数据源、查询标签 363
9.3.2 更新、参数、事务标签 364
9.4 综合练习 366
9.4.1 使用JDBC实现DAO 366
9.4.2 设置JNDI部署描述 369
9.4.3　实现首页最新信息 370
9.5 重点复习 374
9.6 课后练习 375
Chapter 10 Web容器安全管理 376
10.1 了解与实现Web容器安全
管理 377
10.1.1 Java EE安全基本
概念 377
10.1.2 声明式基本身份验证 379
10.1.3 容器基本身份验证
原理 384
10.1.4 声明式窗体验证 385
10.1.5 容器窗体验证原理 386
10.1.6 使用HTTPS保护
数据 387
10.1.7 编程式安全管理 389
10.1.8 标注访问控制 391
10.2 综合练习 393
10.2.1 使用容器窗体验证 393
10.2.2 设置DataSource-
Realm 395
10.3 重点复习 396
10.4 课后练习 397
Chapter 11 JavaMail入门 398
11.1 使用JavaMail 399
11.1.1 发送纯文字邮件 399
11.1.2 发送多重内容邮件 401
11.2 综合练习 405
11.2.1 发送验证账号邮件 405
11.2.2　验证用户账号 411
11.2.3　发送重设密码邮件 412
11.2.4　重新设置密码 415
11.3 重点复习 418
11.4 课后练习 419
Chapter 12 Spring起步走 420
12.1　使用Gradle 421
12.1.1　下载和设置Gradle 421
12.1.2　简单的Gradle项目 422
12.1.3　Gradle与Eclipse 423
12.2　认识Spring核心 425
12.2.1　相依注入 425
12.2.2　使用Spring核心 427
12.3　重点复习 430
12.4 课后练习 430
Chapter 13 整合Spring MVC 431
13.1　初识Spring MVC 432
13.1.1　链接库或框架 432
13.1.2　初步套用Spring
MVC 433
13.1.3　注入服务对象与
属性 440
13.2　逐步善用Spring MVC 444
13.2.1　简化控制器 444
13.2.2　建立窗体对象 449
13.2.3　关于Thymeleaf
模板 452
13.3　重点复习 455
13.4 课后练习 456
Chapter 14 简介Spring Boot 457
14.1　初识Spring Boot 458
14.1.1　哈喽！Spring Boot！ 458
14.1.2　实现MVC 461
14.1.3　使用JSP 464
14.2　整合IDE 465
14.2.1　导入Spring Boot
项目 465
14.2.2　Spring Tool Suite 466
14.3　重点复习 467
14.4 课后练习 468
Appendix A 如何使用《JSP & Servlet学习笔记（第3版）——从Servlet到Spring Boot》项目 469
A.1　项目环境配置 470
A.2　范例项目导入 470
Java EE 7/8 新功能索引
web.xml版本变动 33
web.xml新增 34
HttpServletRequest新增getHttpServletMapping() 39
web.xml新增 57
Part新增getSubmittedFileName() 64
web.xml新增 76
HttpServletRequest新增changeSessionId() 104
ServletContext新增setSessionTimeout() 109
新增PushBuilder 128
新增HttpSessionIdListener 141
新增了GenericFilter、HttpFilter类别 145
ServletInputStream非阻断输入 168
ServletOutputStream非阻断输出 170
Expression Language 3.0 226
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>JSP & Servlet学习笔记（第3版） : 从Servlet到Spring Boot
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>SpringBoot 揭秘 : 快速构建微服务体系
推荐序1
推荐序2
序言
前言
第1章了解微服务
1.1什么是微服务
1.2微服务因何而生
1.3微服务会带来哪些好处
1.3.1独立，独立，还是独立
1.3.2多语言生态
1.4微服务会带来哪些挑战
1.5本章小结
第2章饮水思源：回顾与探索Spring框架的本质
2.1Spring框架的起源
2.2Spring IoC其实很简单
2.3了解一点儿JavaConfig
2.3.1那些高曝光率的Annotation
2.4本章小结
第3章SpringBoot的工作机制
3.1SpringBoot初体验
3.2@SpringBootApplication背后的秘密
3.2.1@Configuration创世纪
3.2.2@EnableAutoConfiguration的功效
3.2.3可有可无的@ComponentScan
3.3SpringApplication：SpringBoot程序启动的一站式解决方案
3.3.1深入探索SpringApplication执行流程
3.3.2SpringApplicationRunListener
3.3.3ApplicationListener
3.3.4ApplicationContextInitializer
3.3.5CommandLineRunner
3.4再谈自动配置
3.4.1基于条件的自动配置
3.4.2调整自动配置的顺序
3.5本章小结
第4章了解纷杂的spring—boot—starter
4.1应用日志和spring—boot—starter—logging
4.2快速Web应用开发与spring—boot—starter—web
4.2.1项目结构层面的约定
4.2.2SpringMVC框架层面的约定和定制
4.2.3嵌入式Web容器层面的约定和定制
4.3数据访问与spring—boot—starter—jdbc
4.3.1SpringBoot应用的数据库版本化管理
4.4spring—boot—starter—aop及其使用场景说明
4.4.1spring—boot—starter—aop在构建spring—boot—starter—metrics自定义模块中的应用
4.5应用安全与spring—boot—starter—security
4.5.1了解SpringSecurity基本设计
4.5.2进一步定制spring—boot—starter—security
4.6应用监控与spring—boot—starter—actuator
4.6.1自定义应用的健康状态检查
4.6.2开放的endpoints才真正“有用”
4.6.3用还是不用，这是个问题
4.7本章小结
第5章SpringBoot微服务实践探索
5.1使用SpringBoot构建微服务
5.1.1创建基于Dubbo框架的SpringBoot微服务
5.1.2使用SpringBoot快速构建Web API
5.1.3使用SpringBoot构建其他形式的微服务
5.2SpringBoot微服务的发布与部署
5.2.1spring—boot—starter的发布与部署方式
5.2.2基于RPM的发布与部署方式
5.2.3基于Docker的发布与部署方式
5.3SpringBoot微服务的注册与发现
5.4SpringBoot微服务的监控与运维
5.4.1推还是拉，这一直是个问题
5.4.2从局部性触发式报警到系统性智能化报警
5.5SpringBoot微服务的安全与防护
5.6SpringBoot微服务体系的脊梁：发布与部署平台
5.7本章小结
第6章SpringBoot与Scala
6.1使用Maven构建和发布基于SpringBoot的Scala应用
6.1.1进一步简化基于Maven的Scala项目创建
6.1.2进一步简化基于Scala的Web API开发
6.2使用SBT构建和发布基于SpringBoot的Scala应用
6.2.1探索基于SBT的SpringBoot应用开发模式
6.2.2探索基于SBT的SpringBoot应用发布策略
6.3本章小结
第7章SpringBoot总结与展望
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>SpringBoot 揭秘 : 快速构建微服务体系
