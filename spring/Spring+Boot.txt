1	{"count":49,"start":0,"total":49,"books":[{"rating":{"max":10,"numRaters":312,"average":"7.1","min":0},"subtitle":"","author":["[美]克雷格·沃斯"],"pubdate":"2016-9","tags":[{"count":218,"name":"SpringBoot","title":"SpringBoot"},{"count":175,"name":"Spring","title":"Spring"},{"count":164,"name":"Java","title":"Java"},{"count":66,"name":"计算机","title":"计算机"},{"count":64,"name":"编程","title":"编程"},{"count":49,"name":"微服务","title":"微服务"},{"count":39,"name":"软件开发","title":"软件开发"},{"count":35,"name":"技术","title":"技术"}],"origin_title":"Spring Boot in Action","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s28983685.jpg","binding":"平装","translator":["丁雪丰"],"catalog":"第1章　入门　　1\n1.1　Spring风云再起　　1\n1.1.1　重新认识Spring　　2\n1.1.2　Spring Boot精要　　3\n1.1.3　Spring Boot不是什么　　6\n1.2　Spring Boot入门　　6\n1.2.1　安装Spring Boot CLI　　7\n1.2.2　使用Spring Initializr初始化Spring Boot项目　　10\n1.3　小结　　18\n第2章　开发第一个应用程序　　19\n2.1　运用Spring Boot　　19\n2.1.1　查看初始化的Spring Boot新项目　　21\n2.1.2　Spring Boot项目构建过程解析　　24\n2.2　使用起步依赖　　27\n2.2.1　指定基于功能的依赖　　28\n2.2.2　覆盖起步依赖引入的传递依赖　　29\n2.3　使用自动配置　　30\n2.3.1　专注于应用程序功能　　31\n2.3.2　运行应用程序　　36\n2.3.3　刚刚发生了什么　　38\n2.4　小结　　41\n第3章　自定义配置　　42\n3.1　覆盖Spring Boot自动配置　　42\n3.1.1　保护应用程序　　43\n3.1.2　创建自定义的安全配置　　44\n3.1.3　掀开自动配置的神秘面纱　　48\n3.2　通过属性文件外置配置　　49\n3.2.1　自动配置微调　　50\n3.2.2　应用程序Bean的配置外置　　55\n3.2.3　使用Profile进行配置　　59\n3.3　定制应用程序错误页面　　62\n3.4　小结　　64\n第4章　测试　　66\n4.1　集成测试自动配置　　66\n4.2　测试Web应用程序　　68\n4.2.1　模拟Spring MVC　　69\n4.2.2　测试Web安全　　72\n4.3　测试运行中的应用程序　　74\n4.3.1　用随机端口启动服务器　　75\n4.3.2　使用Selenium测试HTML页面　　76\n4.4　小结　　78\n第5章　Groovy与Spring Boot CLI　　80\n5.1　开发Spring Boot CLI应用程序　　80\n5.1.1　设置CLI项目　　81\n5.1.2　通过Groovy消除代码噪声　　81\n5.1.3　发生了什么　　85\n5.2　获取依赖　　86\n5.2.1　覆盖默认依赖版本　　87\n5.2.2　添加依赖仓库　　88\n5.3　用CLI运行测试　　89\n5.4　创建可部署的产物　　91\n5.5　小结　　91\n第6章　在Spring Boot中使用Grails　　93\n6.1　使用GORM进行数据持久化　　93\n6.2　使用Groovy Server Pages定义视图　　98\n6.3　结合Spring Boot与Grails 3　　100\n6.3.1　创建新的Grails项目　　100\n6.3.2　定义领域模型　　103\n6.3.3　开发Grails控制器　　104\n6.3.4　创建视图　　105\n6.4　小结　　107\n第7章　深入Actuator　　108\n7.1　揭秘Actuator的端点　　108\n7.1.1　查看配置明细　　109\n7.1.2　运行时度量　　115\n7.1.3　关闭应用程序　　121\n7.1.4　获取应用信息　　121\n7.2　连接Actuator的远程shell　　122\n7.2.1　查看autoconfig报告　　123\n7.2.2　列出应用程序的Bean　　124\n7.2.3　查看应用程序的度量信息　　124\n7.2.4　调用Actuator端点　　125\n7.3　通过JMX监控应用程序　　126\n7.4　定制Actuator　　128\n7.4.1　修改端点ID　　128\n7.4.2　启用和禁用端点　　129\n7.4.3　添加自定义度量信息　　129\n7.4.4　创建自定义跟踪仓库　　132\n7.4.5　插入自定义健康指示器　　134\n7.5　保护Actuator端点　　136\n7.6　小结　　138\n第8章　部署Spring Boot应用程序　　139\n8.1　衡量多种部署方式　　139\n8.2　部署到应用服务器　　140\n8.2.1　构建WAR文件　　141\n8.2.2　创建生产Profile　　142\n8.2.3　开启数据库迁移　　145\n8.3　推上云端　　150\n8.3.1　部署到Cloud Foundry　　150\n8.3.2　部署到Heroku　　153\n8.4　小结　　155\n附录A　Spring Boot开发者工具　　157\n附录B　Spring Boot起步依赖　　163\n附录C　配置属性　　169\n附录D　Spring Boot依赖　　202","pages":"209","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s28983685.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s28983685.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s28983685.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26857423\/","id":"26857423","publisher":"人民邮电出版社","isbn10":"7115433143","isbn13":"9787115433145","title":"Spring Boot实战","url":"https:\/\/api.douban.com\/v2\/book\/26857423","alt_title":"Spring Boot in Action","author_intro":"Craig Walls\nPivotal高级工程师，Spring Social及Spring Sync项目领导者，著名技术博主，畅销书《Spring实战》作者。他致力于推广Spring框架，笔耕不辍，亦时常作为演讲嘉宾出席各类相关会议。\n译者简介：\n丁雪丰　 资深开发及运维工程师，活跃的技术图书译者，致力于推动优秀技术在国内的发展，出版了《Spring攻略》《MongoDB实战》《RESTful Web Service Cookbook中文版》等6部译著。","summary":"本书以Spring应用程序开发为中心，全面讲解如何运用Spring Boot提高效率，使应用程序的开发和管理更加轻松有趣。作者行文亲切流畅，以大量示例讲解了Spring Boot在各类情境中的应用，内容涵盖起步依赖、Spring Boot CLI、Groovy、Grails、Actuator。对于Spring Boot开发应用中较为繁琐的内容，附录奉上整理完毕的表格，一目了然，方便读者查阅。","price":"59.00元"},{"rating":{"max":10,"numRaters":158,"average":"6.2","min":0},"subtitle":"Spring Boot实战","author":["汪云飞"],"pubdate":"2016-3-1","tags":[{"count":106,"name":"springboot","title":"springboot"},{"count":60,"name":"Java","title":"Java"},{"count":41,"name":"spring","title":"spring"},{"count":30,"name":"编程","title":"编程"},{"count":25,"name":"计算机","title":"计算机"},{"count":25,"name":"Spring","title":"Spring"},{"count":18,"name":"java","title":"java"},{"count":12,"name":"技术","title":"技术"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s28588050.jpg","binding":"平装","translator":[],"catalog":"第一部分 点睛Spring 4.x\n第1 章 Spring 基础 2\n1.1 Spring 概述  2\n1.1.1 Spring 的简史  2\n1.1.2 Spring 概述  3\n1.2 Spring 项目快速搭建 5\n1.2.1 Maven 简介  6\n1.2.2 Maven 安装  6\n1.2.3 Maven 的pom.xml 7\n1.2.4 Spring 项目的搭建  9\n1.3 Spring 基础配置 17\n1.3.1 依赖注入  18\n1.3.2 Java 配置  21\n1.3.3 AOP 24\n第2 章 Spring 常用配置 30\n2.1 Bean 的Scope  30\n2.1.1 点睛 30\n2.1.2 示例 31\n2.2 Spring EL 和资源调用. 33\n2.2.1 点睛 33\n2.2.2 示例 33\n2.3 Bean 的初始化和销毁 37\n2.3.1 点睛 37\n2.3.2 演示 38\n2.4 Profile  40\n2.4.1 点睛 40\n2.4.2 演示 41\n2.5 事件（Application Event）  44\n2.5.1 点睛 44\n2.5.2 示例 44\n第3 章 Spring 高级话题 48\n3.1 Spring Aware 48\n3.1.1 点睛 48\n3.1.2 示例 49\n3.2 多线程  51\n3.2.1 点睛 51\n3.2.2 示例 51\n3.3 计划任务 54\n3.3.1 点睛 54\n3.3.2 示例 54\n3.4 条件注解@Conditional  56\n3.4.1 点睛 56\n3.4.2 示例 57\n3.5 组合注解与元注解  60\n3.5.1 点睛 60\n3.5.2 示例 60\n3.6 @Enable*注解的工作原理  63\n3.6.1 第一类：直接导入配置类 63\n3.6.2 第二类：依据条件选择配置类  64\n3.6.3 第三类：动态注册Bean 65\n3.7 测试  66\n3.7.1 点睛 66\n3.7.2 示例 67\n第二部分 点睛Spring MVC 4.x\n第4 章 Spring MVC 基础  72\n4.1 Spring MVC 概述  73\n4.2 Spring MVC 项目快速搭建 74\n4.2.1 点睛 74\n4.2.2 示例 74\n4.3 Spring MVC 的常用注解  82\n4.3.1 点睛 82\n4.3.2 示例 83\n4.4 Spring MVC 基本配置  87\n4.4.1 静态资源映射  88\n4.4.2 拦截器配置 89\n4.4.3 @ControllerAdvice 91\n4.4.4 其他配置  94\n4.5 Spring MVC 的高级配置  98\n4.5.1 文件上传配置  98\n4.5.2 自定义HttpMessageConverter  101\n4.5.3 服务器端推送技术  106\n4.6 Spring MVC 的测试  113\n4.6.1 点睛  113\n4.6.2 示例  114\n第三部分 实战Spring Boot\n第5 章 Spring Boot 基础 122\n5.1 Spring Boot 概述  122\n5.1.1 什么是Spring Boot  122\n5.1.2 Spring Boot 核心功能 122\n5.1.3 Spring Boot 的优缺点 124\n5.1.4 关于本书的Spring Boot 版本  124\n5.2 Spring Boot 快速搭建  124\n5.2.1 http:\/\/start.spring.io  124\n5.2.2 Spring Tool Suite  127\n5.2.3 IntelliJ IDEA  129\n5.2.4 Spring Boot CLI 132\n5.2.5 Maven 手工构建  134\n5.2.6 简单演示  136\n第6 章 Spring Boot 核心 138\n6.1 基本配置  138\n6.1.1 入口类和@SpringBootApplication 138\n6.1.2 关闭特定的自动配置 139\n6.1.3 定制Banner 139\n6.1.4 Spring Boot 的配置文件  140\n6.1.5 starter pom 141\n6.1.6 使用xml 配置 143\n6.2 外部配置  143\n6.2.1 命令行参数配置  143\n6.2.2 常规属性配置 144\n6.2.3 类型安全的配置（基于properties）  145\n6.3 日志配置  148\n6.4 Profile 配置 148\n实战  148\n6.5 Spring Boot 运行原理  150\n6.5.1 运作原理  153\n6.5.2 核心注解  154\n6.5.3 实例分析  157\n6.5.4 实战  160\n第7 章 Spring Boot 的Web 开发  170\n7.1 Spring Boot 的Web 开发支持 170\n7.2 Thymeleaf 模板引擎  171\n7.2.1 Thymeleaf 基础知识  171\n7.2.2 与Spring MVC 集成  174\n7.2.3 Spring Boot 的Thymeleaf 支持  175\n7.2.4 实战  177\n7.3 Web 相关配置  182\n7.3.1 Spring Boot 提供的自动配置 182\n7.3.2 接管Spring Boot 的Web 配置  185\n7.3.3 注册Servlet、Filter、Listener  186\n7.4 Tomcat 配置  187\n7.4.1 配置Tomcat 187\n7.4.2 代码配置Tomcat  188\n7.4.3 替换Tomcat 190\n7.4.4 SSL 配置  191\n7.5 Favicon 配置  196\n7.5.1 默认的Favicon  196\n7.5.2 关闭Favicon  196\n7.5.3 设置自己的Favicon  197\n7.6 WebSocket  197\n7.6.1 什么是WebSocket  197\n7.6.2 Spring Boot 提供的自动配置 197\n7.6.3 实战  198\n7.7 基于Bootstrap 和AngularJS 的现代Web 应用 212\n7.7.1 Bootstrap  213\n7.7.2 AngularJS  216\n7.7.3 实战  222\n第8 章 Spring Boot 的数据访问  233\n8.1 引入Docker  237\n8.1.1 Docker 的安装  238\n8.1.2 Docker 常用命令及参数  242\n8.1.3 下载本书所需的Docker 镜像  247\n8.1.4 异常处理  247\n8.2 Spring Data JPA  248\n8.2.1 点睛Spring Data JPA  248\n8.2.2 Spring Boot 的支持  258\n8.2.3 实战  260\n8.3 Spring Data REST  284\n8.3.1 点睛Spring Data REST 284\n8.3.2 Spring Boot 的支持  285\n8.3.3 实战  286\n8.4 声名式事务 297\n8.4.1 Spring 的事务机制  297\n8.4.2 声名式事务  298\n8.4.3 注解事务行为 299\n8.4.4 类级别使用@Transactional 300\n8.4.5 Spring Data JPA 的事务支持  300\n8.4.6 Spring Boot 的事务支持  302\n8.4.7 实战  303\n8.5 数据缓存Cache  309\n8.5.1 Spring 缓存支持  309\n8.5.2 Spring Boot 的支持  310\n8.5.3 实战  312\n8.5.4 切换缓存技术 319\n8.6 非关系型数据库NoSQL 320\n8.6.1 MongoDB  320\n8.6.2 Redis 329\n第9 章 Spring Boot 企业级开发  340\n9.1 安全控制Spring Security  340\n9.1.1 Spring Security 快速入门 340\n9.1.2 Spring Boot 的支持  347\n9.1.3 实战  348\n9.2 批处理Spring Batch  362\n9.2.1 Spring Batch 快速入门  362\n9.2.2 Spring Boot 的支持  370\n9.2.3 实战  371\n9.3 异步消息  385\n9.3.1 企业级消息代理  386\n9.3.2 Spring 的支持 386\n9.3.3 Spring Boot 的支持  386\n9.3.4 JMS 实战  387\n9.3.5 AMQP 实战 391\n9.4 系统集成Spring Integration  395\n9.4.1 Spring Integration 快速入门  395\n9.4.2 Message  395\n9.4.3 Channel  395\n9.4.4 Message EndPoint 398\n9.4.5 Spring Integration Java DSL  400\n9.4.6 实战  400\n第10 章 Spring Boot 开发部署与测试  407\n10.1 开发的热部署 407\n10.1.1 模板热部署  407\n10.1.2 Spring Loaded  407\n10.1.3 JRebel  409\n10.1.4 spring-boot-devtools  413\n10.2 常规部署  413\n10.2.1 jar 形式 413\n10.2.2 war 形式  417\n10.3 云部署——基于Docker 的部署 419\n10.3.1 Dockerfile  419\n10.3.2 安装Docker  421\n10.3.3 项目目录及文件 421\n10.3.4 编译镜像 423\n10.3.5 运行  424\n10.4 Spring Boot 的测试  424\n10.4.1 新建Spring Boot 项目 425\n10.4.2 业务代码 425\n10.4.3 测试用例 427\n10.4.4 执行测试 429\n第11 章 应用监控  431\n11.1 http 431\n11.1.1 新建Spring Boot 项目 432\n11.1.2 测试端点 432\n11.1.3 定制端点 439\n11.1.4 自定义端点  440\n11.1.5 自定义HealthIndicator  444\n11.2 JMX  447\n11.3 SSH  449\n11.3.1 新建Spring Boot 项目 449\n11.3.2 运行  449\n11.3.3 常用命令 451\n11.3.4 定制登录用户  452\n11.3.5 扩展命令 452\n第12 章 分布式系统开发  456\n12.1 微服务、原生云应用 456\n12.2 Spring Cloud 快速入门  457\n12.2.1 配置服务 457\n12.2.2 服务发现 457\n12.2.3 路由网关 457\n12.2.4 负载均衡 457\n12.2.5 断路器  458\n12.3 实战  458\n12.3.1 项目构建 458\n12.3.2 服务发现——Discovery（Eureka Server）  459\n12.3.3 配置——Config（Config Server）  461\n12.3.4 服务模块——Person 服务  463\n12.3.5 服务模块——Some 服务  466\n12.3.6 界面模块——UI（Ribbon,Feign） 468\n12.3.7 断路器监控——Monitor（DashBoard） 473\n12.3.8 运行  474\n12.4 基于Docker 部署 478\n12.4.1 Dockerfile 编写  478\n12.4.2 Docker Compose 480\n12.4.3 Docker-compose.yml 编写 481\n12.4.4 运行  483\n附录A 485\nA.1 基于JHipster 的代码生成 485\nA.2 常用应用属性配置列表 488","ebook_url":"https:\/\/read.douban.com\/ebook\/35728830\/","pages":"524","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s28588050.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s28588050.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s28588050.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26762595\/","id":"26762595","publisher":"电子工业出版社","isbn10":"7121282089","isbn13":"9787121282089","title":"JavaEE开发的颠覆者: Spring Boot实战","url":"https:\/\/api.douban.com\/v2\/book\/26762595","alt_title":"","author_intro":"","summary":"在当今Java EE 开发中，Spring 框架是当之无愧的王者。而Spring Boot 是Spring 主推的基于“习惯优于配置”的原则，让你能够快速搭建应用的框架，从而使得Java EE 开发变得异常简单。\n《JavaEE开发的颠覆者: Spring Boot实战》从Spring 基础、Spring MVC 基础讲起，从而无难度地引入Spring Boot 的学习。涵盖使用Spring Boot 进行Java EE 开发的绝大数应用场景，包含：Web 开发、数据访问、安全控制、批处理、异步消息、系统集成、开发与部署、应用监控、分布式系统开发等。\n当你学完《JavaEE开发的颠覆者: Spring Boot实战》后，你将能使用Spring Boot 解决Java EE 开发中所遇到的绝大多数问题。","ebook_price":"44.50","price":"89.00元"},{"rating":{"max":10,"numRaters":12,"average":"9.4","min":0},"subtitle":"（Spring Boot让开发像搭积木一样简单,全实例讲解，含Spring Security和Shiro、Elasticsearch和Solr、JPA和Mybatis、Redis、RabbitMQ）","author":["龙中华"],"pubdate":"2020-1","tags":[{"count":8,"name":"springboot","title":"springboot"},{"count":2,"name":"Java","title":"Java"},{"count":1,"name":"计算机","title":"计算机"},{"count":1,"name":"web","title":"web"},{"count":1,"name":"spring","title":"spring"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s33524243.jpg","binding":"","translator":[],"catalog":"目录\n+++++++++入 门 篇\n第1章  进入Spring Boot世界  \/2\n1.1  认识Spring Boot  \/2\n∣1.1.1  什么是Spring Boot  \/2\n∣1.1.2  Spring、Spring Boot、Spring Cloud的关系  \/4\n∣1.1.3  Spring Boot的特色  \/5\n∣1.1.4  Spring Boot支持的开发语言  \/6\n∣1.1.5  学习Spring Boot的前景展望  \/6\n1.2  学习Spring Boot的建议  \/7\n∣1.2.1  看透本书理论，模仿实战例子  \/7\n∣1.2.2  利用开发工具自动学习  \/7\n∣1.2.3  发现新功能的方法  \/8\n∣1.2.4  建立高阶的思维方式  \/9\n∣1.2.5  控制版本，降低犯错的代价  \/10\n∣1.2.6  获取最新、最全的资料  \/11\n∣1.2.7  学会自己发现和解决问题  \/11\n∣1.2.8  善于提问，成功一半  \/12\n第2章  准备开发环境  \/14\n2.1  搭建环境  \/14\n∣2.1.1  安装Java开发环境JDK  \/14\n∣2.1.2  配置JDK的环境变量  \/15\n2.2  熟悉Maven  \/18\n∣2.2.1  安装及配置Maven  \/18\n∣2.2.2  认识其中的pom.xml文件  \/19\n∣2.2.3  Maven的运作方式  \/23\n∣2.2.4  配置国内仓库  \/23\n第3章  使用开发工具  \/25\n3.1  安装开发工具IDEA及插件  \/25\n∣3.1.1  安装IDEA  \/25\n∣3.1.2  配置IDEA的Maven环境  \/27\n∣3.1.3  安装Spring Assistant插件  \/27\n∣3.1.4  安装插件Lombok  \/28\n3.2  【实例1】用Spring Boot输出“Hello World”  \/30\n∣3.2.1  构建Spring Boot项目  \/30\n∣3.2.2  编写控制器，实现输出功能  \/31\n∣3.2.3  在IDEA中运行程序  \/33\n∣3.2.4  打包成可执行的JAR包  \/33\n3.3  在Eclipse中开发Spring Boot应用程序  \/35\n∣3.3.1  安装Eclipse  \/35\n∣3.3.2  安装Spring Tools 4插件  \/35\n∣3.3.3  配置Eclipse的Maven环境  \/36\n∣3.3.4  创建Spring Boot项目  \/37\n3.4  了解Spring官方开发工具STS  \/37\n3.5  必会的IDEA实用技能  \/38\n∣3.5.1  智能提示代码  \/38\n∣3.5.2  自动提示参数  \/39\n∣3.5.3  实现自动转义  \/39\n∣3.5.4  自定义高复用代码块  \/40\n∣3.5.5  设置注释信息  \/41\n∣3.5.6  超能的“Alt+Enter”快捷键  \/42\n∣3.5.7  使用全局配置  \/42\n∣3.5.8  自动生成语句  \/43\n3.6  比较IDEA与Eclipse  \/44\n3.7  如何使用本书源代码  \/47\n∣3.7.1  在IDEA中使用  \/47\n∣3.7.2  在Eclipse（STS）中使用  \/47\n∣\n+++++++++基 础 篇\n第4章  Spring Boot基础  \/50\n4.1  了解Spring Boot  \/50\n∣4.1.1  了解Spring Boot项目结构  \/50\n∣4.1.2  了解Spring Boot的入口类  \/51\n∣4.1.3  了解Spring Boot的自动配置  \/52\n∣4.1.4  了解Spring Boot热部署  \/52\n∣4.1.5  【实例2】定制启动画面  \/53\n4.2  Spring Boot的常用注解  \/54\n∣4.2.1  什么是注解式编程  \/55\n∣4.2.2  了解系统注解  \/55\n∣4.2.3  Spring Boot的常用注解  \/56\n4.3  使用配置文件  \/61\n∣4.3.1  【实例3】演示如何使用application.yml文件  \/62\n∣4.3.2  【实例4】演示如何使用application.properties文件  \/65\n∣4.3.3  【实例5】用application.yml和application.properties配置多环境  \/67\n4.4  Spring Boot的Starter  \/69\n∣4.4.1  了解Starter  \/69\n∣4.4.2  使用Starter  \/70\n第5章  分层开发Web应用程序  \/71\n5.1  应用程序分层开发模式——MVC  \/71\n∣5.1.1  了解MVC模式  \/71\n∣5.1.2  MVC和三层架构的关系  \/72\n5.2  使用视图技术Thymeleaf  \/73\n∣5.2.1  认识Thymeleaf  \/73\n∣5.2.2  基础语法  \/75\n∣5.2.3  处理循环遍历  \/78\n∣5.2.4  处理公共代码块  \/80\n∣5.2.5  处理分页  \/81\n∣5.2.6  验证和提示错误消息  \/82\n∣5.2.7  【实例6】编写Thymeleaf视图以展示数据  \/83\n5.3  使用控制器  \/85\n∣5.3.1  常用注解  \/85\n∣5.3.2  将URL映射到方法  \/86\n∣5.3.3  处理HTTP请求的方法  \/87\n∣5.3.4  处理内容类型  \/89\n∣5.3.5  在方法中使用参数  \/90\n5.4  理解模型  \/93\n5.5  【实例7】实现MVC模式的Web应用程序  \/94\n∣5.5.1  添加依赖  \/94\n∣5.5.2  创建实体模型  \/95\n∣5.5.3  创建控制器  \/95\n∣5.5.4  创建用于展示的视图  \/96\n5.6  验证数据  \/96\n∣5.6.1  认识内置的验证器Hibernate∣validator  \/96\n∣5.6.2  自定义验证功能  \/98\n∣5.6.3  【实例8】验证表单数据并实现数据的自定义验证  \/99\n第6章  响应式编程  \/103\n6.1  认识响应式编程  \/103\n∣6.1.1  什么是WebFlux  \/103\n∣6.1.2  比较MVC和WebFlux  \/103\n∣6.1.3  认识Mono和Flux  \/105\n∣6.1.4  开发WebFlux的流程  \/106\n6.2  【实例9】用注解式开发实现Hello World  \/107\n∣6.2.1  配置WebFlux依赖  \/107\n∣6.2.2  编写控制器  \/107\n6.3  【实例10】用注解式开发实现数据的增、删、改、查  \/108\n∣6.3.1  创建实体类  \/108\n∣6.3.2  编写控制器  \/108\n∣6.3.3  测试API功能  \/110\n6.4  【实例11】用响应式开发方式开发WebFlux  \/111\n∣6.4.1  编写处理器类Handler  \/111\n∣6.4.2  编写路由器类Router  \/112\n6.5  【实例12】用WebFlux模式操作MongoDB数据库,实现数据的增、删、改、查功能  \/112\n∣6.5.1  添加依赖  \/112\n∣6.5.2  创建实体类  \/113\n∣6.5.3  编写接口  \/113\n6.5.4  编写增、删、改、查数据的API  \/113\n∣\n+++++++++进 阶 篇\n第7章  Spring Boot进阶  \/118\n7.1  面向切面编程  \/118\n∣7.1.1  认识Spring AOP  \/118\n∣7.1.2  【实例13】用AOP方式管理日志  \/119\n7.2  认识IoC容器和Servlet容器  \/121\n∣7.2.1  认识容器  \/121\n∣7.2.2  【实例14】用IoC管理Bean  \/123\n∣7.2.3  【实例15】用Servlet处理请求  \/125\n7.3  过滤器与监听器  \/126\n∣7.3.1  认识过滤器  \/126\n∣7.3.2  【实例16】实现过滤器  \/128\n∣7.3.3  认识监听器  \/128\n∣7.3.4  【实例17】实现监听器  \/129\n7.4  自动配置  \/130\n∣7.4.1  自定义入口类  \/130\n∣7.4.2  自动配置的原理  \/131\n∣7.4.3  【实例18】自定义Starter  \/133\n7.5  元注解  \/136\n∣7.5.1  了解元注解  \/136\n∣7.5.2  【实例19】自定义注解  \/137\n7.6  异常处理  \/138\n∣7.6.1  认识异常处理  \/138\n∣7.6.2  使用控制器通知  \/141\n∣7.6.3  【实例20】自定义错误处理控制器  \/142\n∣7.6.4  【实例21】自定义业务异常类  \/143\n7.7  单元测试  \/145\n∣7.7.1  了解单元测试  \/145\n∣7.7.2  Spring Boot 的测试库  \/145\n∣7.7.3  快速创建测试单元  \/149\n∣7.7.4  【实例22】Controller层的单元测试  \/150\n∣7.7.5  【实例23】Service层的单元测试  \/153\n∣7.7.6  【实例24】Repository层的单元测试  \/154\n第8章  用ORM操作SQL数据库  \/156\n8.1  认识Java的数据库连接模板JDBCTemplate  \/156\n∣8.1.1  认识JDBCTemplate  \/156\n∣8.1.2  【实例25】用JDBCTemplate实现数据的增、删、改、查  \/157\n∣8.1.3  认识ORM  \/161\n8.2  JPA——Java持久层API  \/161\n∣8.2.1  认识Spring Data  \/161\n∣8.2.2  认识JPA  \/162\n∣8.2.3  使用JPA  \/164\n∣8.2.4  了解JPA注解和属性  \/165\n∣8.2.5  【实例26】用JPA构建实体数据表  \/167\n8.3  认识JPA的接口  \/169\n∣8.3.1  JPA接口JpaRepository  \/169\n∣8.3.2  分页排序接口PagingAndSortingRepository  \/169\n∣8.3.3  数据操作接口CrudRepository  \/170\n∣8.3.4  分页接口Pageable和Page  \/170\n∣8.3.5  排序类Sort  \/171\n8.4  JPA的查询方式  \/171\n∣8.4.1  使用约定方法名  \/171\n∣8.4.2  用JPQL进行查询  \/173\n∣8.4.3  用原生SQL进行查询  \/174\n∣8.4.4  用Specifications进行查询  \/175\n∣8.4.5  用ExampleMatcher进行查询  \/177\n∣8.4.6  用谓语QueryDSL进行查询  \/177\n∣8.4.7  用NamedQuery进行查询  \/177\n8.5  【实例27】用JPA开发文章管理模块  \/178\n∣8.5.1  实现文章实体  \/178\n∣8.5.2  实现数据持久层  \/179\n∣8.5.3  实现服务接口和服务接口的实现类  \/179\n∣8.5.4  实现增、删、改、查的控制层API功能  \/180\n∣8.5.5  实现增、删、改、查功能的视图层  \/182\n8.6  实现自动填充字段  \/185\n8.7  掌握关系映射开发  \/187\n∣8.7.1  认识实体间关系映射  \/187\n∣8.7.2  【实例28】实现“一对一”映射  \/188\n∣8.7.3  【实例29】实现“一对多”映射  \/192\n∣8.7.4  【实例30】实现“多对多”映射  \/195\n8.8  认识MyBatis——Java数据持久层框架  \/197\n∣8.8.1  CRUD注解  \/198\n∣8.8.2  映射注解  \/198\n∣8.8.3  高级注解  \/199\n8.9  【实例31】用MyBatis实现数据的增加、删除、修改、查询和分页  \/200\n∣8.9.1  创建Spring Boot项目并引入依赖  \/201\n∣8.9.2  实现数据表的自动初始化  \/201\n∣8.9.3  实现实体对象建模  \/202\n∣8.9.4  实现实体和数据表的映射关系  \/202\n∣8.9.5  实现增、删、改、查功能  \/203\n∣8.9.6  配置分页功能  \/204\n∣8.9.7  实现分页控制器  \/205\n∣8.9.8  创建分页视图  \/206\n8.10  比较JPA与MyBatis  \/207\n第9章  接口架构风格——RESTful  \/209\n9.1  REST——前后台间的通信方式  \/209\n∣9.1.1  认识REST  \/209\n∣9.1.2  认识HTTP方法与CRUD动作映射  \/210\n∣9.1.3  实现RESTful风格的数据增、删、改、查  \/210\n9.2  设计统一的RESTful风格的数据接口  \/212\n∣9.2.1  版本控制  \/212\n∣9.2.2  过滤信息  \/213\n∣9.2.3  确定HTTP的方法  \/213\n∣9.2.4  确定HTTP的返回状态  \/213\n∣9.2.5  定义统一返回的格式  \/214\n9.3  【实例32】为手机APP、PC、H5网页提供统一风格的API  \/214\n∣9.3.1  实现响应的枚举类  \/214\n∣9.3.2  实现返回的对象实体  \/215\n∣9.3.3  封装返回结果  \/215\n∣9.3.4  统一处理异常  \/215\n∣9.3.5  编写测试控制器  \/219\n∣9.3.6  实现数据的增、删、改、查控制器  \/220\n∣9.3.7  测试数据  \/221\n9.4  【实例33】用Swagger实现接口文档  \/222\n∣9.4.1  配置Swagger  \/222\n∣9.4.2  编写接口文档  \/224\n9.5  用RestTemplate发起请求  \/224\n∣9.5.1  认识RestTemplate  \/224\n∣9.5.2  【实例34】用RestTemplate发送GET请求  \/225\n∣9.5.3  【实例35】用RestTemplate发送POST请求  \/228\n∣9.5.4  用RestTemplate发送PUT和DELETE请求  \/231\n第10章  集成安全框架，实现安全认证和授权  \/233\n10.1  Spring Security——Spring的安全框架  \/233\n∣10.1.1  认识Spring Security  \/233\n∣10.1.2  核心类  \/235\n10.2  配置Spring Security  \/240\n∣10.2.1  继承WebSecurityConfigurer Adapter  \/240\n∣10.2.2  配置自定义策略  \/240\n∣10.2.3  配置加密方式  \/242\n∣10.2.4  自定义加密规则  \/242\n∣10.2.5  配置多用户系统  \/242\n∣10.2.6  获取当前登录用户信息的几种方式  \/244\n10.3  【实例36】用Spring Security实现后台登录及权限认证功能  \/246\n∣10.3.1  引入依赖  \/246\n∣10.3.2  创建权限开放的页面  \/246\n∣10.3.3  创建需要权限验证的页面  \/247\n∣10.3.4  配置Spring Security  \/247\n∣10.3.5  创建登录页面  \/248\n∣10.3.6  测试权限  \/249\n10.4  权限控制方式  \/249\n∣10.4.1  Spring EL权限表达式  \/249\n∣10.4.2  通过表达式控制URL权限  \/250\n∣10.4.3  通过表达式控制方法权限  \/252\n∣10.4.4  【实例37】使用JSR∣250注解  \/254\n∣10.4.5  【实例38】实现RBAC权限模型  \/256\n10.5  认识JWT  \/258\n10.6  【实例39】用JWT技术为Spring Boot的API增加认证和授权保护  \/260\n∣10.6.1  配置安全类  \/260\n∣10.6.2  处理注册  \/261\n∣10.6.3  处理登录  \/262\n∣10.6.4  测试多方式注册和登录  \/264\n∣10.6.5  测试token方式登录和授权  \/265\n10.7  Shiro——Apache通用安全框架  \/266\n∣10.7.1  认识Shiro安全框架  \/266\n∣10.7.2  认识Shiro的核心组件  \/267\n10.8  【实例40】用Shiro实现管理后台的动态权限功能  \/267\n∣10.8.1  创建实体  \/267\n∣10.8.2  实现视图模板  \/270\n∣10.8.3  进行权限配置  \/271\n∣10.8.4  实现认证身份功能  \/271\n∣10.8.5  测试权限  \/272\n10.9   对比Spring Security与Shiro  \/273\n第11章  集成Redis，实现高并发  \/275\n11.1  认识Spring Cache  \/275\n∣11.1.1  声明式缓存注解  \/276\n∣11.1.2  【实例41】用Spring Cache进行缓存管理  \/278\n∣11.1.3  整合Ehcache  \/281\n∣11.1.4  整合Caffeine  \/281\n11.2  认识Redis  \/282\n∣11.2.1  对比Redis与Memcached  \/282\n∣11.2.2  Redis的适用场景  \/285\n11.3  Redis的数据类型  \/285\n11.4  用RedisTemplate操作Redis的5种数据类型  \/287\n∣11.4.1  认识opsFor方法  \/287\n∣11.4.2  【实例42】操作字符串  \/287\n∣11.4.3  【实例43】操作散列  \/290\n∣11.4.4  【实例44】操作列表  \/294\n∣11.4.5  【实例45】操作集合  \/298\n∣11.4.6  【实例46】操作有序集合  \/301\n∣11.4.7  比较RedisTemplate和StringRedisTemplate  \/306\n11.5  【实例47】用Redis和MyBatis完成缓存数据的增加、删除、修改、查询功能  \/306\n∣11.5.1  在Spring Boot中集成Redis  \/306\n∣11.5.2  配置Redis类  \/307\n∣11.5.3  创建测试实体类  \/308\n∣11.5.4  实现实体和数据表的映射关系  \/309\n∣11.5.5  创建Redis缓存服务层  \/309\n∣11.5.6  完成增、删、改、查测试API  \/310\n11.6  【实例48】用Redis和JPA实现缓存文章和点击量  \/311\n∣11.6.1  实现缓存文章  \/311\n∣11.6.2  实现统计点击量  \/312\n∣11.6.3  实现定时同步  \/312\n11.7  【实例49】实现分布式Session  \/313\n∣11.7.1  用Redis实现Session共享  \/313\n∣11.7.2  配置Nginx实现负载均衡  \/314\n第12章  集成RabbitMQ，实现系统间的数据交换  \/316\n12.1  认识RabbitMQ  \/316\n∣12.1.1  介绍RabbitMQ  \/316\n∣12.1.2  使用场景  \/317\n∣12.1.3  特性  \/318\n12.2  RabbitMQ的基本概念  \/318\n∣12.2.1  生产者、消费者和代理  \/318\n∣12.2.2  消息队列  \/319\n∣12.2.3  交换机  \/319\n∣12.2.4  绑定  \/320\n∣12.2.5  通道  \/321\n∣12.2.6  消息确认  \/321\n12.3  RabbitMQ的6种工作模式  \/321\n∣12.3.1  简单模式  \/321\n∣12.3.2  工作队列模式  \/321\n∣12.3.3  交换机模式  \/322\n∣12.3.4  Routing转发模式  \/322\n∣12.3.5  主题转发模式  \/322\n∣12.3.6  RPC模式  \/323\n12.4  认识AmqpTemplate接口  \/323\n∣12.4.1  发送消息  \/324\n∣12.4.2  接收消息  \/324\n∣12.4.3  异步接收消息  \/325\n12.5  在Spring Boot中集成RabbitMQ  \/325\n∣12.5.1  安装RabbitMQ  \/325\n∣12.5.2  界面化管理RabbitMQ  \/326\n∣12.5.3  在Spring Boot中配置RabbitMQ  \/327\n12.6  在Spring Boot中实现RabbitMQ的4种发送\/接收模式  \/328\n∣12.6.1  【实例50】实现发送和接收队列  \/328\n∣12.6.2  【实例51】实现发送和接收对象  \/330\n∣12.6.3  【实例52】实现用接收器接收多个主题  \/331\n∣12.6.4  【实例53】实现广播模式  \/334\n12.7  【实例54】实现消息队列延迟功能  \/336\n第13章  集成NoSQL数据库，实现搜索引擎  \/339\n13.1  Elasticsearch——搜索应用服务器  \/339\n∣13.1.1  什么是搜索引擎  \/339\n∣13.1.2  用数据库实现搜索功能  \/339\n∣13.1.3  认识Elasticsearch  \/343\n∣13.1.4  Elasticsearch应用案例  \/343\n∣13.1.5  对比Elasticsearch与MySQL  \/343\n∣13.1.6  认识ElasticSearchRepository  \/344\n∣13.1.7  认识ElasticsearchTemplate  \/345\n∣13.1.8  认识注解@Document  \/345\n∣13.1.9  管理索引  \/347\n13.2  【实例55】用ELK管理Spring Boot应用程序的日志  \/348\n∣13.2.1  安装Elasticsearch  \/348\n∣13.2.2  安装Logstash  \/349\n∣13.2.3  安装Kibana  \/350\n∣13.2.4  配置Spring Boot项目  \/350\n∣13.2.5  创建日志计划任务  \/351\n∣13.2.6  用Kibana查看管理日志  \/352\n13.3  【实例56】在Spring Boot中集成Elasticsearch，实现增、删、改、查功能  \/353\n∣13.3.1  集成Elasticsearch  \/353\n∣13.3.2  创建实体  \/353\n∣13.3.3  实现增、删、改、查文档的功能  \/355\n13.4  Elasticsearch查询  \/356\n∣13.4.1  自定义方法  \/356\n∣13.4.2  精准查询  \/357\n∣13.4.3  模糊查询  \/359\n∣13.4.4  范围查询  \/362\n∣13.4.5  组合查询  \/362\n∣13.4.6  分页查询  \/363\n∣13.4.7  聚合查询  \/364\n13.5  【实例57】实现产品搜索引擎  \/365\n13.6  Solr——搜索应用服务器  \/367\n∣13.6.1  了解Solr  \/367\n∣13.6.2  安装配置Solr  \/367\n∣13.6.3  整合Spring Boot和Solr  \/368\n13.7  【实例58】在Sping Boot中集成Solr，实现数据的增、删、改和查  \/369\n∣13.7.1  创建User类  \/369\n∣13.7.2  测试增、删、改、查功能  \/369\n13.8  对比Elasticsearch和Solr  \/372\n∣\n+++++++++项目实战篇\n第14章  开发企业级通用的后台系统  \/376\n14.1  用JPA实现实体间的映射关系  \/376\n∣14.1.1  创建用户实体  \/376\n∣14.1.2  创建角色实体  \/377\n∣14.1.3  创建权限实体  \/378\n14.2  用Spring Security实现动态授权（RBAC）功能  \/380\n∣14.2.1  实现管理（增、删、改、查）管理员角色功能  \/380\n∣14.2.2  实现管理权限功能  \/381\n∣14.2.3  实现管理管理员功能  \/383\n∣14.2.4  配置安全类  \/384\n∣14.2.5  实现基于RBAC权限控制功能  \/386\n14.3  监控Spring Boot应用  \/387\n∣14.3.1  在Spring Boot中集成Actuator  \/387\n∣14.3.2  在Spring Boot中集成Spring Boot Admin应用监控  \/390\n∣14.3.3  在Spring Boot中集成Druid 连接池监控  \/392\n第15章  实现一个类似“京东”的电子商务商城  \/394\n15.1  用Spring Security实现会员系统  \/394\n∣15.1.1  实现会员实体  \/394\n∣15.1.2  实现会员接口  \/395\n∣15.1.3  实现用户名、邮箱、手机号多方式注册功能  \/396\n∣15.1.4  实现用RabbitMQ发送会员注册验证邮件  \/398\n∣15.1.5  实现用户名、邮箱、手机号多方式登录功能  \/399\n15.2  整合会员系统（Web、APP多端、多方式注册登录）和后台系统  \/400\n∣15.3  实现购物系统  \/401\n∣15.3.1  设计数据表  \/401\n∣15.3.2  实现商品展示功能  \/402\n∣15.3.3  实现购物车功能  \/403\n∣15.3.4  用Redis实现购物车数据持久化  \/404\n15.4  用Redis实现分布式秒杀系统  \/406\n∣15.4.1  实现抢购功能，解决并发超卖问题  \/406\n∣15.4.2  缓存页面和限流  \/409\n15.5  用RabbitMQ实现订单过期取消功能  \/409\n15.6  实现结算和支付功能  \/411\n∣15.6.1  实现结算生成订单功能  \/411\n∣15.6.2  集成支付  \/412","pages":"432页","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s33524243.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s33524243.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s33524243.jpg"},"alt":"https:\/\/book.douban.com\/subject\/34894533\/","id":"34894533","publisher":"电子工业出版社","isbn10":"7121377365","isbn13":"9787121377365","title":"Spring Boot实战派","url":"https:\/\/api.douban.com\/v2\/book\/34894533","alt_title":"","author_intro":"龙中华\n12年来一直在某一线互联网公司担任资深系统分析师。目前带领3个研发团队，承担系统分析、设计、实施、演进、技术团队管理和各部门的培训等职责。\n专注于某领域的领域驱动设计（DDD）和命令查询职责分离（CQRS）。以工程思维、领域思维等全面理解业务需求；设计和实施系统的解决方案；保证系统质量、可扩展性、自动化部署、持续演进性以及运维一体化（DevOps）。有独到的团队建设和管理经验。对互联网多种技术特点和发展趋势有较深入研究。对多种技术如Spring Boot、Spring Cloud和Service Mesh有深入的研究和实战经验。","summary":"编辑推荐\n版本点新：针对Spring Boot 2.0及以上版本\n体例科学：用“知识点+实例”形式编写\n实例丰富：58个基础实例 + 2个综合项目\n对比选优：对比讲解多种同类技术，便于技术选型，如，Spring Security和Shiro、Elasticsearch和Solr、JPA和Mybatis。\n技术点新：讲解了时下流行的接口架构风格RESTful、用来实现高并发的Redis、以及用来实现系统间通信的中间件RabbitMQ。\n内容提要\n《Spring Boot实战派》针对Spring Boot 2.0及以上版本，采用“知识点+实例”的形式编写。本书通过“58个基于知识的实例+2个综合性的项目”，深入地讲解Spring Boot的技术原理、知识点和具体应用；把晦涩难懂的理论用实例展现出来，使得读者对知识的理解变得非常容易，同时也立即学会如何使用它。\n要成为一本有“温度”的书，只做到上面这些还远远不够。所以，本书花费大量的篇幅对比讲解多种同类技术的知识点、使用和区别，读者可以根据自己的喜好进行技术选型；还讲解了时下流行的接口架构风格RESTful，以及用来实现高并发的Redis和系统间通信的中间件RabbitMQ。最后两章融合了本书所讲知识点，讲解了两个常用又实用的实战项目。\n《Spring Boot实战派》适合所有对Spring Boot感兴趣的读者阅读。\n前言\n写作初衷\n因为15岁的侄儿对Web后端开发很感兴趣，于是买了十多本关于青少年编程的图书给他。但是，他读过之后感觉所读的图书并不适用，纯理论知识的图书很枯燥，太实战的图书又摸不着头脑。所以，笔者想尝试自己来写一本符合自己期望的图书，当然这是主观愿望，笔者个人也认为市面上很多图书非常不错，只是针对人群不同。\n正好，在笔者熟悉的C、Python、PHP、Go和Java语言中，Java的Spring Boot框架技术就像搭积木一样简单、愉悦。并且，各大企业都在广泛应用它，Java相关的技术岗位目前依然是需求量最大的。而且在十年之内，估计不会出现技术落后的情况。所以，笔者就打定主意，要写一本阅读轻松、快乐，有即时获得感、创造性，并融入了产品思维和技术及业务思维的Spring Boot实战类图书。\n对于大部分普通家庭的孩子来说，IT业是一个单靠个人或者团队能力就能“最快实现人生小目标”的行业。所以，如果这本书可以帮助读者学会Spring Boot，那笔者的写作就是非常有意义的。\n本书的价值\n本书基于Spring Boot 2.X版本，采用“知识点+实例”的形式编写，通过“58个基于知识的实例+2个综合性的项目”，全面深入地讲解了Spring Boot的主要技术原理和应用。\n本书把晦涩难懂的理论通过图文结合的方式讲解，把不便理解的名词用通俗化的文字进行讲解，将每个抽象的知识点用具化的实例进行展现。这使读者在阅读时既能读懂理论和概念，也能立即学会如何使用。\n本书讲解了在工作中如何根据应用场景和历史包袱进行各版本间的无缝升级、降级（公司项目相对于自己学习的版本可能存在老旧和不对应的情况，所以需要进行项目的升级或根据公司的历史项目进行老版本的维护）。\n工欲善其事，必先利其器，本书还讲解了开发工具的使用，以及一些非常实用的技能，以帮助读者实现高效开发。\n不仅如此，本书还对比讲解了多种同类技术的使用和区别，读者可以根据自己的喜好进行选择。\n下面列举说明。\n开发模式：本书讲解了历史悠久，但现在依然被广泛使用的分层应用开发模式MVC（Model View Controller），还讲解了当下逐渐火热的响应式开发模式WebFlux。\nORM（Object Relational Mapping，对象关系映射）框架：数据库的操作是程序开发中非常重要的一块，根据国内外用户的习惯，本书对比讲解了全球最火的JPA和中国最流行的MyBatis。\n安全框架：安全框架是必备内容。本书讲解了相关书籍、资料非常少，国内很少用，但是超级实用和好用的Spring Boot官方安全框架Spring Security。同时也比较全面地讲解了国内使用较多的Apache安全框架Shiro。\n搜索引擎：搜索是各公司使用非常多的功能，但基本都是集成两大搜索框架——Elasticsearch和Solr。所以，本书也非常详细地讲解了这两大搜索框架的原理和具体使用方法。\nRedis：Redis是大规模互联网应用必不可少的内存高速缓存数据库，所以本书也专门用一章讲解了Redis的原理、概念和实际应用。\nRabbitMQ：RabbitMQ是近年来使用非常广泛的消息中间件，本书深入地讲解了它的原理、概念和具体应用。\n实战：本书以实例贯穿全书。每章都会有大大小小可以用于商业生产的实例。不仅如此，在最后两章讲解了多种技术的综合应用，而且也都是可以用于生产项目的实例。本书的各个章节的实例都力求实用，且实现简单、逻辑清晰，使读者看后能及时理解知识点，并实现对知识点的具体应用，收获满满。\n本书适用的读者群体\n本书定位于入门、进阶、实战。所以，会照顾到有一定编程经验，对编程有一定了解的初学者，同时也兼顾相对资深的开发人员。\n以下读者都可以轻松地学习本书。\n具有一定英文基础的大中专院校计算机相关专业的学生。\nJava语言初学者。\n在培训机构学习过几个月Java语言的学生。\n需要提高动手能力的技术人员。\n了解过Java框架，如SSH（Struts+Spring+Hibernate）、SSM（Spring+SpringMVC+ MyBatis）、JFinal、SpringMVC、Struts、Hibernate等，想了解新技术的开发、测试、项目管理的人员。\n已经熟练使用Java EE、Java SE，想转而使用Spring Boot的技术人员。\n使用过其他语言，如：PHP、C#、Python的开发人员。\n使用过其他语言框架，如Laravel、Yii、Thinkphp、Symfony和Zend，想转而使用Java语言的开发人员（这种类型的开发人员转入Spring Boot尤为轻松）。\n会使用Scala、Java、Groovy和Kotlin等JVM语言的开发人员。\n致谢\n特别感谢本书的编辑吴宏伟老师。吴老师对我的作品始终坚持高标准、严要求，以确保高质量，获得读者认可。吴老师甚至对一个多余的空格，都能严格地检查出来，更别说对英文大小写、语法、知识点错误的谨慎检查和修改，以及对知识点和实例代码的实用价值的重视程度。同时他还对本书的内容框架做了非常多的指导工作。\n特别感谢电子工业出版社其他为本书默默奉献的同志，谢谢你们辛苦、严谨的工作。\n还要特别感谢购买或是阅读到本书的有缘读者，很感恩有你们。因为你们的阅读，作品才不孤独，文字才有意义，你的赞赏或批评，都是对笔者最真诚的认可和鼓励，因为，我深知作为中国技术书籍的作者，仍然有很远的路要走，一切都可以做得更好。\n最后，特别感谢东软集团一位特别细心、严谨的资深高级软件开发工程师王蕾，在本书的样书阅读中提供了非常多的宝贵意见。\nSpring Boot技术博大精深，由于本书篇幅有限，且本人精力和技术有限，难免会出现纰漏或知识点介绍不全面的情况，敬请批评与指正。联系作者请发E-mail到363694485@qq.com，或者加入本书讨论QQ群：755572590，或者去本书的源代码仓库GitHub提交问题，地址是：https:\/\/github.com\/ xiuhuai\/Spring-Boot-Book。\n若你是一位有才的人士，有缘看到本书，想要出版技术方面的好书，推荐直接联系编辑吴宏伟老师，请发E-mail到wuhongwei@phei.com.cn。\n龙中华\n2019年8月26日","price":"109.00元"},{"rating":{"max":10,"numRaters":61,"average":"6.5","min":0},"subtitle":"","author":["小马哥"],"pubdate":"2019-4","tags":[{"count":69,"name":"SpringBoot","title":"SpringBoot"},{"count":34,"name":"Java","title":"Java"},{"count":25,"name":"Spring","title":"Spring"},{"count":15,"name":"计算机","title":"计算机"},{"count":11,"name":"spring","title":"spring"},{"count":6,"name":"boot","title":"boot"},{"count":5,"name":"编程","title":"编程"},{"count":5,"name":"开发_Java","title":"开发_Java"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s32277130.jpg","binding":"平装","translator":[],"catalog":"第1部分  总览Spring Boot\n第1章  初览Spring Boot  2\n1.1  Spring Framework时代  2\n1.2  Spring Boot简介  3\n1.3  Spring Boot的特性  5\n1.4  准备运行环境  5\n1.4.1  装配JDK 8  5\n1.4.2  装配Maven  6\n1.4.3  装配IDE（集成开发环境）  8\n第2章  理解独立的Spring应用  9\n2.1  创建Spring Boot应用  10\n2.1.1  命令行方式创建Spring Boot应用  11\n2.1.2  图形化界面创建Spring Boot应用  21\n2.1.3  创建Spring Boot应用可执行JAR  29\n2.2  运行Spring Boot应用  31\n2.2.1  执行Spring Boot应用可执行JAR  32\n2.2.2  Spring Boot应用可执行JAR资源结构  32\n2.2.3  FAT JAR和WAR执行模块——spring-boot-loader  36\n2.2.4  JarLauncher的实现原理  40\n第3章  理解固化的Maven依赖  58\n3.1  spring-boot-starter-parent与spring-boot-dependencies简介  58\n3.2  理解spring-boot-starter-parent与spring-boot- dependencies  61\n第4章  理解嵌入式Web容器  70\n4.1  嵌入式Servlet Web容器  71\n4.1.1  Tomcat作为嵌入式Servlet Web容器  72\n4.1.2  Jetty作为嵌入式Servlet Web容器  77\n4.1.3  Undertow作为嵌入式Servlet Web容器  80\n4.2  嵌入式Reactive Web容器  82\n4.2.1  UndertowServletWebServer作为嵌入式Reactive Web容器  82\n4.2.2  UndertowWebServer作为嵌入式Reactive Web容器  84\n4.2.3  WebServerInitializedEvent  91\n4.2.4  Jetty作为嵌入式Reactive Web容器  93\n4.2.5  Tomcat作为嵌入式Reactive Web容器  94\n第5章  理解自动装配  96\n5.1  理解@SpringBootApplication注解语义  97\n5.2  @SpringBootApplication属性别名  103\n5.3  @SpringBootApplication标注非引导类  107\n5.4  @EnableAutoConfiguration激活自动装配  108\n5.5  @SpringBootApplication“继承”@Configuration CGLIB提升特性  110\n5.6  理解自动配置机制  112\n5.7  创建自动配置类  116\n第6章  理解Production- Ready特性  119\n6.1  理解Production-Ready一般性定义  120\n6.2  理解Spring Boot Actuator  123\n6.3  Spring Boot Actuator Endpoints  124\n6.4  理解“外部化配置  129\n6.5  理解“规约大于配置”  132\n6.6  小马哥有话说  134\n6.6.1  Spring Boot作为微服务中间件  134\n6.6.2  Spring Boot作为Spring Cloud基础设施  135\n6.7  下一站：走向自动装配  135\n第2部分  走向自动装配\n第7章  走向注解驱动编程（Annotation-Driven）  138\n7.1  注解驱动发展史  138\n7.1.1  注解驱动启蒙时代：Spring Framework 1.x  138\n7.1.2  注解驱动过渡时代：Spring Framework 2.x  139\n7.1.3  注解驱动黄金时代：Spring Framework 3.x  142\n7.1.4  注解驱动完善时代：Spring Framework 4.x  146\n7.1.5  注解驱动当下时代：Spring Framework 5.x  151\n7.2  Spring核心注解场景分类  152\n7.3  Spring注解编程模型  154\n7.3.1  元注解（Meta-Annotations）  154\n7.3.2  Spring模式注解（Stereotype Annotations）  155\n7.3.3  Spring组合注解（Composed Annotations）  187\n7.3.4  Spring注解属性别名和覆盖（Attribute Aliases and Overrides）  195\n第8章  Spring注解驱动设计模式  225\n8.1  Spring @Enable模块驱动  225\n8.1.1  理解@Enable模块驱动  225\n8.1.2  自定义@Enable模块驱动  226\n8.1.3  @Enable模块驱动原理  236\n8.2  Spring Web自动装配  250\n8.2.1  理解Web自动装配  250\n8.2.2  自定义Web自动装配  254\n8.2.3  Web自动装配原理  258\n8.3  Spring条件装配  270\n8.3.1  理解配置条件装配  271\n8.3.2  自定义配置条件装配  274\n8.3.3  配置条件装配原理  277\n第9章  Spring Boot自动装配  292\n9.1  理解Spring Boot自动装配  295\n9.1.1  理解@EnableAutoConfiguration  296\n9.1.2  优雅地替换自动装配  298\n9.1.3  失效自动装配  298\n9.2  Spring Boot自动装配原理  299\n9.2.1  @EnableAutoConfiguration读取候选装配组件  301\n9.2.2  @EnableAutoConfiguration排除自动装配组件  305\n9.2.3  @EnableAutoConfiguration过滤自动装配组件  307\n9.2.4  @EnableAutoConfiguration自动装配事件  313\n9.2.5  @EnableAutoConfiguration自动装配生命周期  317\n9.2.6  @EnableAutoConfiguration排序自动装配组件  324\n9.2.7  @EnableAutoConfiguration自动装配BasePackages  332\n9.3  自定义Spring Boot自动装配  337\n9.3.1  自动装配Class命名的潜规则  338\n9.3.2  自动装配package命名的潜规则  338\n9.3.3  自定义Spring Boot Starter  340\n9.4  Spring Boot条件化自动装配  346\n9.4.1  Class条件注解  347\n9.4.2  Bean条件注解  358\n9.4.3  属性条件注解  370\n9.4.4  Resource条件注解  376\n9.4.5  Web应用条件注解  391\n9.4.6  Spring表达式条件注解  397\n9.5  小马哥有话说  401\n9.6  下一站：理解SpringApplication  402\n第3部分  理解SpringApplication\n第10章  SpringApplication初始化阶段  405\n10.1  SpringApplication构造阶段  405\n10.1.1  理解SpringApplication主配置类  406\n10.1.2  SpringApplication的构造过程  410\n10.1.3  推断Web应用类型  411\n10.1.4  加载Spring应用上下文初始化器（ApplicationContextInitializer）  412\n10.1.5  加载Spring应用事件监听器（ApplicationListener）  415\n10.1.6  推断应用引导类  416\n10.2  SpringApplication配置阶段  417\n10.2.1  自定义SpringApplication  417\n10.2.2  调整SpringApplication设置  417\n10.2.3  增加SpringApplication配置源  420\n10.2.4  调整Spring Boot外部化配置  423\n第11章  SpringApplication运行阶段  425\n11.1  SpringApplication准备阶段  425\n11.1.1  理解SpringApplicationRunListeners  426\n11.1.2  理解SpringApplicationRunListener  428\n11.1.3  理解Spring Boot事件  431\n11.1.4  理解Spring事件\/监听机制  432\n11.1.5  理解Spring Boot事件\/监听机制  492\n11.1.6  装配ApplicationArguments  509\n11.1.7  准备ConfigurableEnvironment  512\n11.1.8  创建Spring应用上下文（ConfigurableApplicationContext）  512\n11.1.9  Spring应用上下文运行前准备  516\n11.2  Spring应用上下文启动阶段  537\n11.3  Spring应用上下文启动后阶段  539\n11.3.1  afterRefresh方法签名的变化  540\n11.3.2  afterRefresh方法语义的变化  541\n11.3.3  Spring Boot事件ApplicationStartedEvent语义的变化  543\n11.3.4  执行CommandLineRunner和ApplicationRunner  548\n第12章  SpringApplication结束阶段  550\n12.1  SpringApplication正常结束  550\n12.2  SpringApplication异常结束  555\n12.2.1  Spring Boot异常处理  556\n12.2.2  错误分析报告器——FailureAnalysisReporter  562\n12.2.3  自定义实现FailureAnalyzer和FailureAnalysisReporter  564\n12.2.4  Spring Boot 2.0重构handleRunFailure和reportFailure方法  566\n12.2.5  Spring Boot 2.0的SpringBootExceptionReporter接口  567\n第13章  Spring Boot应用退出  571\n13.1  Spring Boot应用正常退出  572\n13.1.1  ExitCodeGenerator Bean生成退出码  572\n13.1.2  ExitCodeGenerator Bean退出码使用场景  576\n13.2  Spring Boot应用异常退出  580\n13.2.1  ExitCodeGenerator异常使用场景  582\n13.2.2  ExitCodeExceptionMapper Bean映射异常与退出码  587\n13.2.3  退出码用于SpringApplication异常结束  589\n13.3  小马哥有话说  594\n13.4  下一站：运维篇  596","pages":"628","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s32277130.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s32277130.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s32277130.jpg"},"alt":"https:\/\/book.douban.com\/subject\/33390560\/","id":"33390560","publisher":"电子工业出版社","isbn10":"712136039X","isbn13":"9787121360398","title":"Spring Boot编程思想（核心篇）","url":"https:\/\/api.douban.com\/v2\/book\/33390560","alt_title":"","author_intro":"小马哥（mercyblitz）\n“我是谁？”是一个不错的哲学问题。\n在“江湖”上，大家亲切地称我为“小马哥”，我做公益，也做生意；在社区中，我又以 mercyblitz的身份出没在众多开源项目中，“mercy”符合我的性格，“blitz”说明我的风格。\n承蒙错爱，不少朋友对我过去的分享称赞有加，然而“千夫诺诺，不如一士谔谔”，时常又让自己陷入一种迷思，到底是平台的帮衬，还是个人的确禁得起考验？于是我选择隐匿真名，希望能够听到更真实的声音。尽管在互联网时代，个人信息几乎无处遁形。无可讳言，我所属的公司及职业头衔必然会形成“舞台效应”，如此一来，不但违背了写书的初衷，而且模糊了讨论的焦点。所以，本书既不会出现这些信息，又不会搞“个人崇拜”。它的价值应该体现在知识的传播上，至于它的优劣则由诸君来评判。\n个人简介\nApache Dubbo PMC、Spring Cloud Alibaba项目架构师。目前主要负责集团中间件开源项目、微服务技术实施、架构演进、基础设施构建等工作。通过了SUN Java（SCJP、SCWCD、SCBCD）及Oracle OCA等认证。","summary":"本书是《Spring Boot 编程思想》的核心篇，开篇总览Spring Boot核心特性，接着讨论自动装配（Auto-Configuration）与SpringApplication。《Spring Boot编程思想（核心篇）》的讨论以Spring Boot为中心，议题发散至Spring技术栈、JSR及Java。希望透过全局的视角，帮助读者了解Spring Boot变迁的历程；经过多方的比较，帮助读者理解Spring Boot特性的原理；整合标准的规范，帮助读者掌握Spring Boot设计的哲学。\n《Spring Boot编程思想（核心篇）》适合对Spring Boot感兴趣的读者阅读。","price":"118.00元"},{"rating":{"max":10,"numRaters":41,"average":"7.7","min":0},"subtitle":"","author":["杨开振"],"pubdate":"2018-8-1","tags":[{"count":18,"name":"springboot","title":"springboot"},{"count":12,"name":"Spring","title":"Spring"},{"count":8,"name":"java","title":"java"},{"count":7,"name":"Java","title":"Java"},{"count":5,"name":"计算机科学","title":"计算机科学"},{"count":4,"name":"计算机","title":"计算机"},{"count":3,"name":"编程","title":"编程"},{"count":3,"name":"框架","title":"框架"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29875871.jpg","binding":"平装","translator":[],"catalog":"第　1章 Spring Boot来临　1\n1.1　Spring的历史　1\n1.2　注解还是XML　2\n1.3　Spring Boot的优点　3\n1.4　传统Spring MVC和Spring Boot的对比　4\n第　2章 聊聊开发环境搭建和基本开发　10\n2.1　搭建Spring Boot开发环境　10\n2.1.1　搭建Eclipse开发环境　10\n2.1.2　搭建IntelliJ IDEA开发环境　13\n2.2　Spring Boot的依赖和自动配置　15\n2.3　使用自定义配置　19\n2.4　开发自己的Spring Boot项目　21\n第3章　全注解下的Spring IoC　23\n3.1　IoC容器简介　23\n3.2　装配你的Bean　27\n3.2.1　通过扫描装配你的Bean　27\n3.2.2　自定义第三方Bean　31\n3.3　依赖注入　32\n3.3.1　注解@Autowired　34\n3.3.2　消除歧义性——@Primary和@Quelifier　35\n3.3.3　带有参数的构造方法类的装配　36\n3.4　生命周期　37\n3.5　使用属性文件　42\n3.6　条件装配Bean　45\n3.7　Bean的作用域　46\n3.8　使用@Profile　48\n3.9　引入XML配置Bean　50\n3.10　使用Spring EL　51\n第4章　开始约定编程——Spring AOP　53\n4.1　约定编程　53\n4.1.1　约定　53\n4.1.2　ProxyBean的实现　57\n4.1.3　总结　60\n4.2　AOP的概念　61\n4.2.1　为什么使用AOP　61\n4.2.2　AOP 术语和流程　64\n4.3　AOP开发详解　65\n4.3.1　确定连接点　65\n4.3.2　开发切面　66\n4.3.3　切点定义　67\n4.3.4　测试AOP　68\n4.3.5　环绕通知　71\n4.3.6　引入　72\n4.3.7　通知获取参数　74\n4.3.8　织入　75\n4.4　多个切面　77\n第5章　访问数据库　82\n5.1　配置数据源　83\n5.1.1　启动默认数据源　83\n5.1.2　配置自定义数据源　83\n5.2　使用JdbcTemplate操作数据库　86\n5.3　使用JPA（Hibernate）操作数据　90\n5.3.1　概述　90\n5.3.2　开发JPA　90\n5.4　整合MyBatis框架　96\n5.4.1　MyBatis简介　96\n5.4.2　MyBatis的配置　97\n5.4.3　Spring Boot整合MyBatis　101\n5.4.4　MyBatis的其他配置　104\n第6章　聊聊数据库事务处理　107\n6.1　JDBC的数据库事务　108\n6.2　Spring声明式事务的使用　110\n6.2.1　Spring声明式数据库事务约定　110\n6.2.2　@Transactional的配置项　111\n6.2.3　Spring事务管理器　113\n6.2.4　测试数据库事务　114\n6.3　隔离级别　118\n6.3.1　数据库事务的知识　118\n6.3.2　详解隔离级别　120\n6.4　传播行为　124\n6.4.1　传播行为的定义　125\n6.4.2　测试传播行为　126\n6.5　@Transactional自调用失效问题　130\n第7章　使用性能利器——Redis　134\n7.1　spring-data-redis项目简介　135\n7.1.1　spring-data-redis项目的设计　135\n7.1.2　RedisTemplate　137\n7.1.3　Spring对Redis数据类型操作的封装　139\n7.1.4　SessionCallback和RedisCallback接口　141\n7.2　在Spring Boot中配置和使用Redis　142\n7.2.1　在Spring Boot中配置Redis　142\n7.2.2　操作Redis数据类型　143\n7.3　Redis的一些特殊用法　148\n7.3.1　使用Redis事务　148\n7.3.2　使用Redis流水线　149\n7.3.3　使用Redis发布订阅　150\n7.3.4　使用Lua脚本　153\n7.4　使用Spring缓存注解操作Redis　156\n7.4.1　缓存管理器和缓存的启用　156\n7.4.2　开发缓存注解　157\n7.4.3　测试缓存注解　163\n7.4.4　缓存注解自调用失效问题　165\n7.4.5　缓存脏数据说明　165\n7.4.6　自定义缓存管理器　166\n第8章　文档数据库——MongoDB　168\n8.1　配置MongoDB　169\n8.2　使用MongoTemplate实例　170\n8.2.1　搭建开发环境　170\n8.2.2　使用MongoTemplate操作文档　173\n8.3　使用JPA　178\n8.3.1　基本用法　178\n8.3.2　使用自定义查询　180\n第9章　初识Spring MVC　183\n9.1　Spring MVC框架的设计　183\n9.2　Spring MVC流程　184\n9.3　定制Spring MVC的初始化　191\n9.4　Spring MVC实例　192\n9.4.1　开发控制器　193\n9.4.2　视图和视图渲染　194\n第　10章 深入Spring MVC开发　197\n10.1　处理器映射　197\n10.2　获取控制器参数　198\n10.2.1　在无注解下获取参数　199\n10.2.2　使用@RequestParam获取参数　199\n10.2.3　传递数组　200\n10.2.4　传递JSON　200\n10.2.5　通过URL传递参数　203\n10.2.6　获取格式化参数　204\n10.3　自定义参数转换规则　205\n10.3.1　处理器获取参数逻辑　205\n10.3.2　一对一转换器（Converter）　208\n10.3.3　GenericConverter集合和数组转换　210\n10.4　数据验证　211\n10.4.1　JSR-303 验证　211\n10.4.2　参数验证机制　214\n10.5　数据模型　217\n10.6　视图和视图解析器　219\n10.6.1　视图设计　219\n10.6.2　视图实例——导出PDF文件　220\n10.7　文件上传　224\n10.7.1　Spring MVC对文件上传的支持　224\n10.7.2　开发文件上传功能　226\n10.8　拦截器　228\n10.8.1　拦截器的设计　228\n10.8.2　开发拦截器　229\n10.8.3　多个拦截器的顺序　231\n10.9　国际化　234\n10.9.1　国际化消息源　234\n10.9.2　国际化解析器　235\n10.9.3　国际化实例——SessionLocaleResolver　237\n10.10　Spring MVC拾遗　240\n10.10.1　@ResponseBody转换为JSON的秘密　240\n10.10.2　重定向　241\n10.10.3　操作会话对象　243\n10.10.4　给控制器增加通知　245\n10.10.5　获取请求头参数　247\n第　11章 构建REST风格网站　249\n11.1　REST简述　249\n11.1.1　REST名词解释　249\n11.1.2　HTTP的动作　250\n11.1.3　REST风格的一些误区　251\n11.2　使用Spring MVC开发REST风格端点　251\n11.2.1　Spring MVC整合REST　252\n11.2.2　使用Spring开发REST风格的端点　252\n11.2.3　使用@RestController　260\n11.2.4　渲染结果　261\n11.2.5　处理HTTP状态码、异常和响应头　262\n11.3　客户端请求RestTemplate　266\n11.3.1　使用RestTemplate请求后端　267\n11.3.2　获取响应头、状态码和资源交换　269\n第　12章 安全——Spring Security　271\n12.1　概述和简单安全认证　271\n12.2　使用WebSecurityConfigurerAdapter自定义　273\n12.3　自定义用户服务信息　274\n12.3.1　使用内存签名服务　275\n12.3.2　使用数据库定义用户认证服务　276\n12.3.3　使用自定义用户认证服务　279\n12.4　限制请求　281\n12.4.1　配置请求路径访问权限　282\n12.4.2　使用Spring表达式配置访问权限　283\n12.4.3　强制使用HTTPS　285\n12.4.4　防止跨站点请求伪造　285\n12.5　用户认证功能　287\n12.5.1　自定义登录页面　287\n12.5.2　启用HTTP Basic认证　288\n12.5.3　登出　289\n第　13章 学点Spring其他的技术　291\n13.1　异步线程池　291\n13.1.1　定义线程池和开启异步可用　292\n13.1.2　异步实例　292\n13.2　异步消息　294\n13.2.1　JMS实例——ActiveMQ　295\n13.2.2　使用AMQP——RabbitMQ　299\n13.3　定时任务　303\n13.4　WebSocket 应用　306\n13.4.1　开发简易的WebSocket服务　306\n13.4.2　使用STOMP　311\n第　14章 Spring 5新框架——WebFlux　319\n14.1　基础概念　319\n14.1.1　响应式编程的宣言　320\n14.1.2　Reactor模型　320\n14.1.3　Spring WebFlux的概述　322\n14.1.4　WebHandler接口和运行流程　323\n14.2　通过Spring MVC方式开发WebFlux服务端　325\n14.2.1　开发持久层　325\n14.2.2　开发服务层　327\n14.2.3　开发控制层　328\n14.2.4　配置服务　330\n14.2.5　客户端开发——WebClient　331\n14.3　深入WebFlux服务端开发　335\n14.3.1　类型转换器——Converter　335\n14.3.2　验证器——Validator　337\n14.3.3　访问静态资源　338\n14.4　深入客户端开发　339\n14.4.1　处理服务端错误和转换　339\n14.4.2　设置请求头　341\n14.5　使用路由函数方式开发WebFlux　342\n14.5.1　开发处理器　342\n14.5.2　开发请求路由　346\n14.5.3　使用过滤器　347\n第　15章 实践一下——抢购商品　349\n15.1　设计与开发　349\n15.1.1　数据库表设计　349\n15.1.2　使用MyBatis开发持久层　350\n15.1.3　使用Spring开发业务层和控制层　353\n15.1.4　测试和配置　355\n15.2　高并发开发　357\n15.2.1　超发现象　357\n15.2.2　悲观锁　358\n15.2.3　乐观锁　359\n15.2.4　使用Redis处理高并发　365\n第　16章 部署、测试和监控　371\n16.1　部署和运行　371\n16.1.1　打包　371\n16.1.2　运行项目　373\n16.1.3　热部署　375\n16.2　测试　376\n16.2.1　构建测试类　376\n16.2.2　使用随机端口和REST风格测试　377\n16.2.3　Mock测试　378\n16.3　Actuator监控端点　379\n16.4　HTTP监控　381\n16.4.1　查看敏感信息　382\n16.4.2　shutdown端点　383\n16.4.3　配置端点　385\n16.4.4　自定义端点　387\n16.4.5　健康指标项　389\n16.5　JMX监控　392\n第　17章 分布式开发——Spring Cloud　393\n17.1　服务治理和服务发现——Eureka　395\n17.1.1　配置服务治理节点　395\n17.1.2　服务发现　397\n17.1.3　配置多个服务治理中心节点　401\n17.2　微服务之间的调用　403\n17.2.1　Ribbon客户端负载均衡　403\n17.2.2　Feign声明式调用　406\n17.3　断路器——Hystrix　409\n17.3.1　使用降级服务　410\n17.3.2　启用Hystrix仪表盘　412\n17.4　路由网关——Zuul　415\n17.4.1　构建Zuul网关　415\n17.4.2　使用过滤器　418\n17.5　使用@SpringCloudApplication　421\n附录　Spring Boot知识点补充　423","pages":"428","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29875871.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29875871.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29875871.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30323325\/","id":"30323325","publisher":"人民邮电出版社","isbn10":"7115486387","isbn13":"9787115486387","title":"深入浅出Spring Boot 2.x","url":"https:\/\/api.douban.com\/v2\/book\/30323325","alt_title":"","author_intro":"杨开振，精通Java 互联网技术开发和实践，拥有十余年一线企业开发经验，著有业内畅销书《深入浅出MyBatis 技术原理与实战》和《Java EE 互联网轻量级框架整合开发——SSM 框架（Spring MVC+Spring+MyBatis） 和Redis 实现 》，目前成为自由职业人，在淘宝教育平台上从事Java EE 互联网相关的在线培训工作。","summary":"Spring框架是Java EE开发的事实标准，而Spring Boot是业界最流行的微服务开发框架。本书从一个最简单的工程开始讲解Spring Boot企业级开发，其内容包含全注解下的Spring IoC和AOP、数据库编程、数据库事务、NoSQL技术、Spring MVC、Spring 5新一代响应式框架WebFlux、REST风格和Spring Cloud分布式开发等。","price":"99.00元"},{"rating":{"max":10,"numRaters":55,"average":"6.8","min":0},"subtitle":"","author":["Craig Walls"],"pubdate":"2016-1-3","tags":[{"count":34,"name":"Java","title":"Java"},{"count":33,"name":"SpringBoot","title":"SpringBoot"},{"count":26,"name":"Spring","title":"Spring"},{"count":9,"name":"编程","title":"编程"},{"count":6,"name":"计算机","title":"计算机"},{"count":4,"name":"java","title":"java"},{"count":3,"name":"计算机科学","title":"计算机科学"},{"count":2,"name":"spring","title":"spring"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s28376225.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"264","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s28376225.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s28376225.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s28376225.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26435858\/","id":"26435858","publisher":"Manning Publications","isbn10":"1617292540","isbn13":"9781617292545","title":"Spring Boot in Action","url":"https:\/\/api.douban.com\/v2\/book\/26435858","alt_title":"","author_intro":"Craig Walls is a software developer, author of the poplular book Spring in Action, Fourth Edition, and a frequent speaker at conferences.","summary":"A developer-focused guide to writing applications using Spring Boot. You'll learn how to bypass the tedious configuration steps so that you can concentrate on your application's behavior.\nSpring Boot in Action is a developer-focused guide to writing applications using Spring Boot. In it, you?ll learn how to bypass configuration steps so you can focus on your application?s behavior. Spring expert Craig Walls uses interesting and practical examples to teach you both how to use the default settings effectively and how to override and customize Spring Boot for your unique environment. Along the way, you?ll pick up insights from Craig?s years of Spring development experience.","price":"USD 44.99"},{"rating":{"max":10,"numRaters":9,"average":"0.0","min":0},"subtitle":"Spring Boot、Spring Cloud与Cloud Foundry弹性系统设计","author":["乔西·朗 (Josh Long)","肯尼·巴斯塔尼 (Kenny Bastani)"],"pubdate":"2018-7-1","tags":[{"count":18,"name":"Java","title":"Java"},{"count":10,"name":"微服务","title":"微服务"},{"count":9,"name":"云原生Java","title":"云原生Java"},{"count":6,"name":"计算机","title":"计算机"},{"count":3,"name":"云原生","title":"云原生"},{"count":2,"name":"软件开发","title":"软件开发"},{"count":2,"name":"架构","title":"架构"},{"count":2,"name":"java","title":"java"}],"origin_title":"Cloud Native Java: Designing Resilient Systems with Spring Boot, Spring Cloud, and Cloud Foundry","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29873853.jpg","binding":"平装","translator":["张若飞","宋净超"],"catalog":"目录\n前言（James Watters）.......................................................xv\n前言（Rod Johnson）........................................................ xvii\n前言................................................................................ xix\n第Ⅰ部分　基础知识\n第1 章　云原生应用程序.......................................................... 3\n亚马逊的故事 ........................................................................................................ 3\n平台的承诺 ............................................................................................................ 5\n模式 ........................................................................................................................ 7\n可扩展性 ................................................................................................................. 7\n可靠性 .................................................................................................................... 8\n敏捷性 ..................................................................................................................... 8\nNetflix 的故事 ......................................................................................................... 9\n微服务 ................................................................................................................. 11\n拆分单体系统 ...................................................................................................... 12\nNetflix OSS ......................................................................................................... 13\n云原生Java ......................................................................................................... 14\n十二要素原则 ....................................................................................................... 14\n代码库 ................................................................................................................. 15\n依赖 ..................................................................................................................... 15\n配置 ..................................................................................................................... 16\nx ｜ 目录\n后端服务 ............................................................................................................. 17\n构建、发布、运行 .............................................................................................. 17\n进程 ..................................................................................................................... 17\n端口绑定 ............................................................................................................. 18\n并发 ..................................................................................................................... 18\n易处理 ................................................................................................................. 18\n开发\/ 生产环境一致 ........................................................................................... 19\n日志 ..................................................................................................................... 19\n管理进程 ............................................................................................................. 19\n总结 ........................................................................................................................ 20\n第2 章　训练营：Spring Boot 和Cloud Foundry......................21\n什么是Spring Boot ................................................................................................ 21\nSpring Initializr 入门 .............................................................................................. 21\nSpring Tool Suite 入门 ............................................................................................ 30\n安装Spring Tool Suite（STS）............................................................................. 30\n使用Spring Initializr 创建一个新项目 ................................................................ 31\nSpring 指南大全 ................................................................................................... 36\n遵循STS 中的指南 ............................................................................................. 38\n配置 ....................................................................................................................... 40\nCloud Foundry 平台 ............................................................................................... 52\n总结 ....................................................................................................................... 66\n第3 章　符合十二要素程序风格的配置....................................... 67\n令人迷惑的“配置”合并 ........................................................................................... 67\nSpring 框架对配置的支持 .................................................................................... 67\nPropertyPlaceholderConfigurer ............................................................................ 68\nEnvironment 接口和@Value 注解 ....................................................................... 69\nProfile .................................................................................................................. 71\n启动配置 ............................................................................................................. 73\n使用Spring Cloud Config Server 进行中心化、日志型的配置................................... 76\nSpring Cloud Config Server ................................................................................. 76\nSpring Cloud Config 客户端 ................................................................................ 78\n安全 ..................................................................................................................... 79\n目录 ｜ xi\n可刷新的配置 ....................................................................................................... 79\n总结 ...................................................................................................................... 83\n第４章　测试..................................................................... 85\n测试的构成 ........................................................................................................... 86\n在Spring Boot 中进行测试 ................................................................................... 86\n集成测试 ............................................................................................................. 88\n测试切片 ............................................................................................................. 89\n测试中的Mock ................................................................................................... 89\n使用@SpringBootTest 中的Servlet 容器 ............................................................ 93\n测试分片 ............................................................................................................. 94\n端到端测试 ......................................................................................................... 102\n测试分布式系统 ................................................................................................ 102\n消费者驱动的契约测试 ..................................................................................... 104\nSpring Cloud Contract ....................................................................................... 105\n总结 .................................................................................................................... 113\n第5 章　迁移遗留的应用程序................................................. 115\n契约 .................................................................................................................... 115\n迁移应用程序环境 ................................................................................................ 116\n开箱即用的构建包（Buildpacks） ..................................................................... 116\n自定义的构建包 ................................................................................................ 117\n容器化的应用程序 ............................................................................................ 118\n将应用程序迁移到云上的微重构 ........................................................................ 119\n连接后端服务 .................................................................................................... 120\n用Spring 实现服务平等 .................................................................................... 121\n总结 .................................................................................................................... 133\n第Ⅱ部分　Web 服务\n第6 章　REST API........................................................... 137\n伦纳德· 理查森的成熟模型 .................................................................................. 137\n使用Spring MVC 实现简单的REST API ................................................................. 139\n内容协商 .............................................................................................................. 142\nxii ｜ 目录\n读写二进制数据 ................................................................................................ 142\nGoogle Protocol Buffers .................................................................................... 145\n错误处理 ............................................................................................................. 150\n超媒体 ................................................................................................................. 152\n媒体类型和模式 ................................................................................................ 158\nAPI 版本 ............................................................................................................. 159\n编写REST API 文档 ........................................................................................... 162\n客户端 ................................................................................................................ 167\n用于临时浏览和交互的REST 客户端 ............................................................... 167\nRestTemplate ..................................................................................................... 171\n总结 ................................................................................................................... 177\n第7 章　路由.................................................................... 179\nDiscoveryClient 接口 .......................................................................................... 180\nCloud Foundry Route 服务 .................................................................................. 190\n总结 ...................................................................................................................... 195\n第8 章　边缘服务............................................................... 197\nGreetings 服务 ...................................................................................................... 198\n一个简单的边缘服务 ........................................................................................... 200\nNetflix Feign ........................................................................................................ 202\n使用Netflix Zuul 进行过滤和代理 ........................................................................... 204\n自定义Zuul 过滤器 ........................................................................................... 214\n边缘服务的安全 .................................................................................................... 218\nOAuth ................................................................................................................... 219\n服务端应用程序 ................................................................................................ 220\nHTML5 和JavaScript 单页面应用程序 ............................................................. 221\n没有用户的应用 ................................................................................................ 221\n受信任的客户端 ................................................................................................ 221\nSpring Security .................................................................................................... 222\nSpring Cloud Security ........................................................................................... 227\n一个Spring Security OAuth 授权服务器 ........................................................... 227\n保护Greetings 资源服务器的安全 .................................................................... 232\n创建一个受OAuth 保护的单页面应用程序 ...................................................... 238\n总结 ..................................................................................................................... 247\n目录 ｜ xiii\n第Ⅲ部分　数据整合\n第9 章　数据管理............................................................... 251\n数据建模 ............................................................................................................... 251\n关系数据库管理系统（RDBMS） ...................................................................... 252\nNoSQL............................................................................................................... 253\nSpring Data ......................................................................................................... 253\nSpring Data 应用程序的结构 ............................................................................. 254\n域类 ................................................................................................................... 254\n库 ...................................................................................................................... 254\n为领域数据组织Java 包 .................................................................................... 255\n使用JDBC 访问RDBMS 数据 ............................................................................... 258\nSpring 的JDBC 支持 ........................................................................................... 259\nSpring Data 示例 ................................................................................................. 261\nSpring Data JPA.................................................................................................... 264\nAccount Service ................................................................................................. 264\n集成测试 ........................................................................................................... 274\nSpring Data MongoDB ......................................................................................... 275\nOrder Service ..................................................................................................... 275\n集成测试 ........................................................................................................... 282\nSpring Data Neo4j ............................................................................................... 284\nInventory Service ............................................................................................... 284\n集成测试 ........................................................................................................... 294\nSpring Data Redis ................................................................................................ 297\n高速缓存 ........................................................................................................... 298\n总结 .................................................................................................................... 302\n第10 章　消息系统............................................................. 303\nSpring Integration 的事件驱动架构 ..................................................................... 304\n消息端点 ........................................................................................................... 305\n使用简单的组件构建复杂的系统 ...................................................................... 306\n消息代理、桥接、竞争消费者模式和事件溯源 ................................................... 314\n发布—订阅目的地 ............................................................................................ 314\n点对点目的地 .................................................................................................... 315\nxiv ｜ 目录\nSpring Cloud Stream .......................................................................................... 315\n流生产者 ........................................................................................................... 316\n流消费者 ........................................................................................................... 321\n总结 .................................................................................................................... 323\n第11 章　批处理和任务........................................................ 325\n批处理工作 ........................................................................................................ 325\nSpring Batch ....................................................................................................... 326\n我们的第一个批处理作业 ................................................................................. 327\n调度 .................................................................................................................... 336\n通过消息传递远程分区Spring 批处理作业 ............................................................. 337\n任务管理 ............................................................................................................. 346\n通过Workflow 进行的以工作流为中心的整合 ........................................................ 348\n使用消息传递的分布式......................................................................................... 362\n总结 ..................................................................................................................... 362\n第12 章　数据集成............................................................. 363\n分布式事务 .......................................................................................................... 364\n故障隔离和优雅的降级........................................................................................ 364\nsaga 模式 ............................................................................................................. 369\nCQRS（命令查询责任分离） .............................................................................. 369\n投诉API ............................................................................................................ 371\n投诉统计API .................................................................................................... 383\nSpring Cloud Data Flow ...................................................................................... 385\nStream ............................................................................................................... 387\n任务 ................................................................................................................... 390\nREST API .......................................................................................................... 391\n实现Data Flow 客户端 ...................................................................................... 392\n总结 .................................................................................................................... 407\n第IV 部分　生产\n第13 章　可观测的系统....................................................... 411\n你构建，你运行 ................................................................................................. 412\n目录 ｜ xv\n谋杀神秘微服务 .................................................................................................. 413\n十二要素运维 ..................................................................................................... 413\n新方式 ................................................................................................................. 414\n可观测性 ............................................................................................................ 416\n推与拉的可观测性和解析率 ................................................................................ 416\n使用Spring Boot Actuator 捕获应用程序的当前状态 .......................................... 417\n度量 ...................................................................................................................... 418\n通过\/info 端点识别服务 ......................................................................................... 431\n健康检查 ............................................................................................................. 432\n审计事件 .............................................................................................................. 436\n应用程序日志 ...................................................................................................... 439\n指定日志输出 .................................................................................................... 440\n指定日志级别 .................................................................................................... 441\n分布式跟踪 ......................................................................................................... 445\n用Spring Cloud Sleuth 寻找线索 ...................................................................... 446\n多少数据是足够的 ............................................................................................ 447\nOpenZipkin ：一张图片胜过千丝万缕 ............................................................... 448\n跟踪其他平台和技术 ......................................................................................... 454\n仪表板 ................................................................................................................ 455\n使用Hystrix 仪表板监控下游服务 .................................................................... 455\nCodecentric 的Spring Boot Admin .................................................................... 459\nOrdina Microservices 仪表板 ............................................................................. 462\nPivotal Cloud Foundry 的AppsManager ............................................................ 463\n修复 .................................................................................................................. 465\n总结 ................................................................................................................... 467\n第14 章　服务代理.............................................................................................469\n创建后台服务 .................................................................................................. 470\n平台视图 ............................................................................................................ 472\n使用Spring Cloud Cloud Foundry Service Broker 实现服务代理 ........................ 473\n简单的Amazon S3 服务代理 ............................................................................ 473\n服务目录 ........................................................................................................... 474\n管理服务实例 .................................................................................................... 476\n服务绑定 ........................................................................................................... 482\n保护服务代理 .................................................................................................... 486\nxvi ｜ 目录\n部署 ................................................................................................................... 487\n使用BOSH 发布 ............................................................................................... 487\n使用Cloud Foundry 发布 .................................................................................. 488\n注册Amazon S3 Service Broker ....................................................................... 489\n创建Amazon S3 服务实例 ................................................................................ 490\n消费服务实例 .................................................................................................... 491\nS3 客户端应用程序 ........................................................................................... 493\n运行测试 ........................................................................................................... 496\n总结 .................................................................................................................. 496\n第15 章　持续交付.............................................................497\n持续集成之外 .................................................................................................. 497\nJohn Allspaw 在Flickr 以及后来的Etsy ........................................................... 498\nNetflix 的Adrian Cockroft ................................................................................ 499\n亚马逊的持续交付 ............................................................................................ 500\n流水线 ................................................................................................................ 500\n测试 .................................................................................................................... 501\n持续交付微服务 ................................................................................................502\n工具 .................................................................................................................. 503\nConcourse ......................................................................................................... 503\n容器 ................................................................................................................... 504\n持续交付微服务 ................................................................................................. 504\n安装Concourse ................................................................................................. 505\n基本的管道设计 ................................................................................................ 506\n持续集成 ........................................................................................................... 518\n消费者驱动的协约测试......................................................................................  518\nUser 微服务流水线 ............................................................................................ 519\n数据 ................................................................................................................... 522\n生产 ................................................................................................................... 523\n第V 部分　附录\n附录A　在Java EE 中使用Spring Boot................................527\n索引............................................................................... 552","pages":"600","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29873853.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29873853.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29873853.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30270037\/","id":"30270037","publisher":"电子工业出版社","isbn10":"7121342510","isbn13":"9787121342516","title":"云原生Java","url":"https:\/\/api.douban.com\/v2\/book\/30270037","alt_title":"Cloud Native Java: Designing Resilient Systems with Spring Boot, Spring Cloud, and Cloud Foundry","author_intro":"Josh Long是一名Spring developer advocate，是InfoQ.com Java团队的编辑。他也是多部著作的主要作者，如Spring Recipes, 2nd Edition(Apress)。\nKenny Bastani是Pivotal的一名Spring developer advocate。作为一名开源贡献者和软件架构博主（WWW.kennybastani.com），他为软件开发者提供关于构建事件驱动的微服务和无服务器架构方面的教程。他也在一些行业会议上做演讲，如OSCON、SpringOne Platform和GOTO大会。","summary":"无论是传统IT行业，还是互联网行业，都正处于行业历史上最剧烈的变革中 ：大量的系统正在从传统的IT架构转向基于云的架构， 开发模式也正在从开发和运维分工的传统模式，逐渐转向统一的“DevOps”模式。Java技术已经进入了新的生命周期，大量被用于构建现代的、基于云的应用程序。 本书详细阐述了开发云原生应用程序的机遇和挑战，明确指出了成功实现的方向，并且重点介绍了微服务框架Spring Boot。Spring Boot可以轻松创建任何粒度的 Spring服务，并部署到现代的容器环境中。本书主要面向正在使用 Spring Boot、SpringCloud和Cloud Foundry， 以便更快、更好地构建软件的Java\/JVM 开发人员。\n本书一共分为4个部分共15章。第1章和第2章介绍了云原生思想产生的背景，然后介绍了Spring Foundry。第3章介绍了如何配置Spring Boot应用程序。第4章介绍了如何测试Spring应用程序，从如何测试最简单的组件到测试分布式系统。第5章介绍了可以将应用程序迁移到Cloud Foundry等云平台的轻量级重构方式。第6章介绍了如何使用Spring构建HTTP和RESTful服务。第7章介绍了在分布式系统中控制请求进出的常用方法。第8章介绍了如何构建一个响应外部请求的服务。第9章介绍了如何使用Spring Data在Spring中管理数据。这为领域驱动的思想奠定了基础。第10章介绍了如何使用Spring中事件驱动、消息中心化的能力，来集成分布式服务和数据。第11章介绍了如何利用云平台（如Cloud Foundry）的能力来处理长期运行的工作。第12章介绍了在分布式系统中管理状态的一些方法。第13章介绍了如何构建具备可观测性和可操作性的系统。第14章介绍了如何构建类似于Cloud Foundry平台的服务代理。第15章介绍了持续交付背后的思想。","price":"CNY 128.00"},{"rating":{"max":10,"numRaters":28,"average":"4.8","min":0},"subtitle":"","author":["陈韶健"],"pubdate":"2016-11","tags":[{"count":6,"name":"SpingBoot","title":"SpingBoot"},{"count":5,"name":"Spring","title":"Spring"},{"count":5,"name":"Java","title":"Java"},{"count":4,"name":"计算机","title":"计算机"},{"count":4,"name":"spring","title":"spring"},{"count":3,"name":"boot","title":"boot"},{"count":2,"name":"适合有一定的经验，跟着书敲，里面涉及都比较新，还是有收获的","title":"适合有一定的经验，跟着书敲，里面涉及都比较新，还是有收获的"},{"count":2,"name":"技术","title":"技术"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29476275.jpg","binding":"平装","translator":[],"catalog":"前　言\n第一部分　基础应用开发\n第1章　Spring Boot入门 3\n1.1　配置开发环境 3\n1.1.1　安装JDK 3\n1.1.2　安装InterlliJ IDEA 4\n1.1.3　安装Apache Maven 4\n1.1.4　安装Git客户端 5\n1.2　创建项目工程 8\n1.2.1　使用Maven新建项目 8\n1.2.2　使用Spring Initializr新建项目 11\n1.3　使用Spring Boot 14\n1.3.1　Maven依赖管理 14\n1.3.2　一个简单的实例 17\n1.4　运行与发布 18\n1.4.1　在IDEA环境中运行 18\n1.4.2　将应用打包发布 19\n1.5　关于Spring Boot配置 22\n1.6　小结 23\n第2章　在Spring Boot中使用数据库 24\n2.1　使用MySQL 24\n2.1.1　MySQL依赖配置 25\n2.1.2　实体建模 25\n2.1.3　实体持久化 27\n2.1.4　MySQL测试 29\n2.2　使用Redis 33\n2.2.1　Redis依赖配置 33\n2.2.2　创建Redis服务类 34\n2.2.3　Redis测试 36\n2.3　使用MongoDB 38\n2.3.1　MongoDB依赖配置 38\n2.3.2　文档建模 39\n2.3.3　文档持久化 40\n2.3.4　MongoDB测试 41\n2.4　使用Neo4j 43\n2.4.1　Neo4j依赖配置 43\n2.4.2　节点和关系实体建模 43\n2.4.3　节点实体持久化 45\n2.4.4　Neo4j测试 46\n2.5　小结 49\n第3章　Spring Boot界面设计 50\n3.1　模型设计 50\n3.1.1　节点实体建模 51\n3.1.2　关系实体建模 51\n3.1.3　分页查询设计 52\n3.2　控制器设计 53\n3.2.1　新建控制器 53\n3.2.2　查看控制器 53\n3.2.3　修改控制器 54\n3.2.4　删除控制器 55\n3.2.5　分页查询控制器 55\n3.3　使用Thymeleaf模板 56\n3.3.1　Thymeleaf配置 56\n3.3.2　Thymeleaf功能简介 57\n3.4　视图设计 60\n3.4.1　列表视图设计 60\n3.4.2　新建视图设计 64\n3.4.3　查看视图设计 68\n3.4.4　修改视图设计 70\n3.4.5　删除视图设计 72\n3.5　运行与发布 73\n3.6　小结 74\n第4章　提高数据库访问性能 75\n4.1　使用Druid 75\n4.1.1　配置Druid依赖 76\n4.1.2　关于XML配置 76\n4.1.3　Druid数据源配置 77\n4.1.4　开启监控功能 78\n4.2　扩展JPA功能 80\n4.2.1　扩展JPA接口 81\n4.2.2　装配自定义的扩展接口 83\n4.2.3　使用扩展接口 85\n4.3　使用Redis做缓存 86\n4.3.1　使用Spring Cache注解 86\n4.3.2　使用RedisTemplate 88\n4.4　Web应用模块 91\n4.4.1　引用数据管理模块 91\n4.4.2　Web应用配置 92\n4.5　运行与发布 94\n4.6　小结 95\n第5章　Spring Boot安全设计 96\n5.1　依赖配置管理 96\n5.2　安全策略配置 97\n5.2.1　权限管理规则 98\n5.2.2　登录成功处理器 99\n5.2.3　防攻击策略 100\n5.2.4　记住登录状态 102\n5.3　登录认证设计 103\n5.3.1　用户实体建模 103\n5.3.2　用户身份验证 104\n5.3.3　登录界面设计 106\n5.3.4　验证码验证 108\n5.4　权限管理设计 109\n5.4.1　权限管理配置 109\n5.4.2　权限管理过滤器 110\n5.4.3　权限配置资源管理器 111\n5.4.4　权限管理决断器 112\n5.5　根据权限设置链接 113\n5.6　运行与发布 116\n5.6.1　系统初始化 116\n5.6.2　系统运行与发布 118\n5.7　小结 119\n第二部分　分布式应用开发\n第6章　Spring Boot SSO 123\n6.1　模块化设计 123\n6.2　登录认证模块 124\n6.2.1　使用OAuth2 124\n6.2.2　创建数字证书 125\n6.2.3　认证服务端配置 125\n6.3　安全配置模块 128\n6.4　SSO客户端 129\n6.4.1　客户端配置 129\n6.4.2　登录登出设计 130\n6.5　共享资源服务 132\n6.5.1　提供共享资源接口 133\n6.5.2　使用共享资源 134\n6.5.3　查询登录用户的详细信息 135\n6.6　运行与发布 136\n6.7　小结 138\n第7章　使用分布式文件系统 139\n7.1　FastDFS安装 139\n7.1.1　下载安装包 141\n7.1.2　安装服务 141\n7.1.3　Tracker Server配置 142\n7.1.4　Storage Server配置 145\n7.1.5　启动服务 148\n7.1.6　客户端测试 148\n7.2　FastFDS客户端 149\n7.2.1　客户端配置 150\n7.2.2　客户端服务类 150\n7.3　使用定制方式上传图片 151\n7.3.1　实体建模 151\n7.3.2　上传图片 152\n7.4　使用富文本编辑器上传图片 156\n7.4.1　使用富文本编辑器 156\n7.4.2　实现文件上传 157\n7.5　使用本地文件库 158\n7.5.1　本地文件库建模 159\n7.5.2　文件保存方法 159\n7.5.3　文件库管理 161\n7.6　运行与发布 163\n7.7　小结 164\n第8章　云应用开发 165\n8.1　使用配置管理 166\n8.1.1　创建配置管理服务器 167\n8.1.2　使用配置管理的客户端 168\n8.1.3　实现在线更新 171\n8.1.4　更新所有客户端的配置 172\n8.2　使用发现服务 174\n8.2.1　创建发现服务器 174\n8.2.2　使用发现服务的客户端配置 175\n8.2.3　发现服务器测试 175\n8.3　使用动态路由和断路器 176\n8.3.1　依赖配置 176\n8.3.2　共享REST资源 177\n8.3.3　通过路由访问REST资源 180\n8.3.4　使用断路器功能 182\n8.3.5　路由器和断路器测试 183\n8.4　使用监控服务 184\n8.4.1　创建监控服务器 184\n……","pages":"261","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s29476275.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s29476275.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29476275.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26968640\/","id":"26968640","publisher":"机械工业出版社","isbn10":"7111550889","isbn13":"9787111550884","title":"深入实践Spring Boot","url":"https:\/\/api.douban.com\/v2\/book\/26968640","alt_title":"","author_intro":"陈韶健（Chen Shaojian）\n华阳通信技术总监，有超过15年的IT行业从业经验。从普通的程序开发到系统分析、架构设计，从服务器的组建、维护到系统性能的优化和安全策略实施等，都积累了相当丰富的实践经验。\n尤其擅长Java和C#技术，有着深入的实践经验。在数据库使用和分布式应用系统的开发和实施方面也有深入的研究和探讨，并取得了丰硕的成果。\n利用Spring Boot进行了大量的项目实践，对其有深入的理解。","summary":"本书是Spring Boot领域的经典著作，从技术、实践和原理3个维度对Spring Boot进行了系统且深入的讲解。作者是Spring Boot领域的资深专家，有超过15年的IT行业从业经验。\n技术维度\n第一部分（1~5章），针对性地介绍了Spring Boot入门、数据库的使用和访问性能提升、界面设计、安全设计等重要技术知识，以实用性为主，旨在帮助读者快速掌握Spring Boot开发方法和精髓，尽快融入生产实践中。\n实践维度\n第二部分（6~9章），用生产环境中的实际案例讲解了如何使用Spring Boot开发分布式应用和云应用，以及如何用微服务构建高可用的服务平台，实践性极强。\n原理维度\n第三部分（10~12章），从源码层面着重分析了Spring Boot的程序加载、自动配置、数据管理、Spring Cloud的配置管理、发现服务和负载均衡服务等核心功能的实现原理，旨在帮助读者能更深刻地理解Spring Boot开发，掌握其精髓。","price":"59.00"},{"rating":{"max":10,"numRaters":7,"average":"0.0","min":0},"subtitle":"","author":["Alex Antonov"],"pubdate":"2015-10-1","tags":[{"count":5,"name":"SpringBoot","title":"SpringBoot"},{"count":1,"name":"信息技术","title":"信息技术"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s28389742.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"189","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s28389742.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s28389742.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s28389742.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26714767\/","id":"26714767","publisher":"Packt Publishing - ebooks Account","isbn10":"1785284150","isbn13":"9781785284151","title":"Spring Boot Cookbook","url":"https:\/\/api.douban.com\/v2\/book\/26714767","alt_title":"","author_intro":"","summary":"","price":"USD 29.99"},{"rating":{"max":10,"numRaters":3,"average":"0.0","min":0},"subtitle":"","author":["Greg L. Turnquist"],"pubdate":"2014-11-25","tags":[{"count":2,"name":"spring","title":"spring"},{"count":2,"name":"groovy","title":"groovy"},{"count":1,"name":"软件开发","title":"软件开发"},{"count":1,"name":"programming","title":"programming"},{"count":1,"name":"boot","title":"boot"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s28120780.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"252","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s28120780.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s28120780.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s28120780.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26435856\/","id":"26435856","publisher":"Packt Publishing - ebooks Account","isbn10":"1784393029","isbn13":"9781784393021","title":"Learning Spring Boot","url":"https:\/\/api.douban.com\/v2\/book\/26435856","alt_title":"","author_intro":"","summary":"","price":"USD 44.99"},{"rating":{"max":10,"numRaters":31,"average":"5.4","min":0},"subtitle":"从构建小系统到架构分布式大系统","author":["李家智"],"pubdate":"2017-10-23","tags":[{"count":12,"name":"SpringBoot2","title":"SpringBoot2"},{"count":4,"name":"架构","title":"架构"},{"count":4,"name":"Java","title":"Java"},{"count":2,"name":"程序设计","title":"程序设计"},{"count":2,"name":"微服务","title":"微服务"},{"count":1,"name":"Spring","title":"Spring"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29588927.jpg","binding":"平装","translator":[],"catalog":"第1章　Java EE简介\n1.1　Java EE\n1.1.1　Java EE架构\n1.1.2　Java EE的缺点\n1.2　Spring\n1.2.1　Spring IoC容器和AOP\n1.2.2　Spring的缺点\n1.3　Spring Boot\n1.4　Hello，Spring Boot\n1.4.1　创建一个Maven工程\n1.4.2　增加Web支持\n1.4.3　Hello Spring Boot示例\n1.4.4　使用热部署\n1.4.5　添加REST支持\n第2章　Spring Boot基础\n2.1　检查Java环境与安装Java\n2.2　安装和配置Maven\n2.2.1　Maven介绍\n2.2.2　安装Maven\n2.2.3　设置Maven\n2.2.4　使用IDE设置Maven\n2.2.5　Maven的常用命令\n2.3　Spring核心技术\n2.3.1　Spring的历史\n2.3.2　Spring容器介绍\n2.3.3　Spring AOP介绍\n第3章　MVC框架\n3.1　集成MVC框架\n3.1.1　引入依赖\n3.1.2　Web应用目录结构\n3.1.3　Java包名结构\n3.2　使用Controller\n3.3　URL映射到方法\n3.3.1　@RequestMapping\n3.3.2　URL路径匹配\n3.3.3　HTTP method匹配\n3.3.4　consumes和produces\n3.3.5　params和header匹配\n3.4　方法参数\n3.4.1　PathVariable\n3.4.2　Model&ModelAndView\n3.4.3　JavaBean接受HTTP参数\n3.4.4　@RequsetBody接受JSON\n3.4.5　MultipartFile\n3.4.6　@ModelAttribute\n3.4.7　@InitBinder\n3.5　验证框架\n3.5.1　JSR-303\n3.5.2　MVC中使用@Validated\n3.5.3　自定义校验\n3.6　WebMvcConfigurer\n3.6.1　拦截器\n3.6.2　跨域访问\n3.6.3　格式化\n3.6.4　注册Controller\n3.7　视图技术\n3.7.1　使用Freemarker\n3.7.2　使用Beetl\n3.7.3　使用Jackson\n3.7.4　Redirect和Forward\n3.8　通用错误处理\n3.9　@Service和@Transactional\n3.9.1　声明一个Service类\n3.9.2　事务管理\n3.10　curl命令\n第4章　视图技术\n4.1　Beetl模板引擎\n4.1.1　安装Beetl\n4.1.2　设置定界符号和占位符\n4.1.3　配置Beetl\n4.1.4　groupTemplate\n4.2　使用变量\n4.2.1　全局变量\n4.2.2　局部变量\n4.2.3　共享变量\n4.2.4　模板变量\n4.3　表达式\n4.3.1　计算表达式\n4.3.2　逻辑表达式\n4.4　控制语句\n4.4.1　循环语句\n4.4.2　条件语句\n4.4.3　try catch\n4.5　函数调用\n4.6　格式化函数\n4.7　直接调用Java\n4.8　标签函数\n4.9　HTML标签\n4.10　安全输出\n4.11　高级功能\n4.11.1　配置Beetl\n4.11.2　自定义函数\n4.11.3　自定义格式化函数\n4.11.4　自定义标签函数\n4.11.5　自定义HTML标签\n4.11.6　布局\n4.11.7　AJAX局部渲染\n4.12　脚本引擎\n4.13　JSON技术\n4.13.1　在Spring Boot中使用Jackson\n4.13.2　自定义ObjectMapper\n4.13.3　Jackson的三种使用方式\n4.13.4　Jackson树遍历\n4.13.5　对象绑定\n4.13.6　流式操作\n4.13.7　Jackson注解\n4.13.8　集合的反序列化\n4.14　MVC分离开发\n4.14.1　集成WebSimulate\n4.14.2　模拟JSON响应\n4.14.3　模拟模板渲染\n第5章　数据库访问\n5.1　配置数据源\n5.2　Spring JDBC Template\n5.2.1　查询\n5.2.2　修改\n5.2.3　JdbcTemplate增强\n5.3　BeetlSQL介绍\n5.3.1　BeetlSQL功能概览\n5.3.2　添加Maven依赖\n5.3.3　配置BeetlSQL\n5.3.4　SQLManager\n5.3.5　使用SQL文件\n5.3.6　Mapper\n5.3.7　使用实体\n5.4　SQLManager内置CRUD\n5.4.1　内置的插入API\n5.4.2　内置的更新（删除）API\n5.4.3　内置的查询API\n5.4.4　代码生成方法\n5.5　使用sqlId\n5.5.1　md文件命名\n5.5.2　md文件构成\n5.5.3　调用sqlId\n5.5.4　翻页查询\n5.5.5　TailBean\n5.5.6　ORM查询\n5.5.7　其他API\n5.5.8　Mapper详解\n5.6　BeetlSQL的其他功能\n5.6.1　常用函数和标签\n5.6.2　主键设置\n5.6.3　BeetlSQL注解\n5.6.4　NameConversion\n5.6.5　锁\n第6章　Spring Data JPA\n6.1　集成Spring Data JPA\n6.1.1　集成数据源\n6.1.2　配置JPA支持\n6.1.3　创建Entity\n6.1.4　简化Entity\n6.2　Repository\n6.2.1　CrudRepository\n6.2.2　PagingAndSortingRepository\n6.2.3　JpaRepository\n6.2.4　持久化Entity\n6.2.5　Sort\n6.2.6　Pageable和Page\n6.2.7　基于方法名字查询\n6.2.8　@Query查询\n6.2.9　使用JPA Query\n6.2.10　Example查询\n第7章　Spring Boot配置\n7.1　配置Spring Boot\n7.1.1　服务器配置\n7.1.2　使用其他Web服务器\n7.1.3　配置启动信息\n7.1.4　配置浏览器显示ico\n7.2　日志配置\n7.3　读取应用配置\n7.3.1　Environment\n7.3.2　@Value\n7.3.3　@ConfigurationProperties\n7.4　Spring Boot自动装配\n7.4.1　@Configuration和@Bean\n7.4.2　Bean条件装配\n7.4.3　Class条件装配\n7.4.4　Environment装配\n7.4.5　其他条件装配\n7.4.6　联合多个条件\n7.4.7　Condition接口\n7.4.8　制作Starter\n第8章　部署Spring Boot应用\n8.1　以jar文件运行\n8.2　以war方式部署\n8.3　多环境部署\n8.4　@Profile注解\n第9章　Testing单元测试\n9.1　JUnit介绍\n9.1.1　JUnit的相关概念\n9.1.2　JUnit测试\n9.1.3　Assert\n9.1.4　Suite\n9.2　Spring Boot单元测试\n9.2.1　测试范围依赖\n9.2.2　Spring Boot测试脚手架\n9.2.3　测试Service\n9.2.4　测试MVC\n9.2.5　完成MVC请求模拟\n9.2.6　比较MVC的返回结果\n9.2.7　JSON比较\n9.3　Mockito\n9.3.1　模拟对象\n9.3.2　模拟方法参数\n9.3.3　模拟方法返回值\n9.4　面向数据库应用的单元测试\n9.4.1　@Sql\n9.4.2　XLSUnit\n9.4.3　XLSUnit的基本用法\n第10章　REST\n10.1　REST简介\n10.1.1　REST风格的架构\n10.1.2　使用“api”作为上下文\n10.1.3　增加一个版本标识\n10.1.4　标识资源\n10.1.5　确定HTTP Method\n10.1.6　确定HTTP Status\n10.1.7　REST VS. WebService\n10.2　Spring Boot集成REST\n10.2.1　集成REST\n10.2.2　@RestController\n10.2.3　REST Client\n10.3　Swagger UI\n10.3.1　集成Swagger\n10.3.2　Swagger规范\n10.3.3　接口描述\n10.3.4　查询参数描述\n10.3.5　URI中的参数\n10.3.6　HTTP头参数\n10.3.7　表单参数\n10.3.8　文件上传参数\n10.3.9　整个请求体作为参数\n10.4　模拟REST服务\n第11章　MongoDB\n11.1　安装MongoDB\n11.2　使用shell\n11.2.1　指定数据库\n11.2.2　插入文档\n11.2.3　查询文档\n11.2.4　更新操作\n11.2.5　删除操作\n11.3　Spring Boot集成MongoDB\n11.4　增删改查\n11.4.1　增加API\n11.4.2　根据主键查询API\n11.4.3　查询API\n11.4.4　修改API\n11.4.5　删除API\n11.4.6　使用MongoDatabase\n11.4.7　打印日志\n第12章　Redis\n12.1　安装Redis\n12.2　使用redis-cli\n12.2.1　安全设置\n12.2.2　基本操作\n12.2.3　keys\n12.2.4　Redis List\n12.2.5　Redis Hash\n12.2.6　Set\n12.2.7　Pub\/Sub\n12.3　Spring Boot集成Redis\n12.4　使用StringRedisTemplate\n12.4.1　opsFor\n12.4.2　绑定Key的操作\n12.4.3　RedisConnection\n12.4.4　Pub\/Sub\n12.5　序列化策略\n12.5.1　默认序列化策略\n12.5.2　自定义序列化策略\n第13章　Elasticsearch\n13.1　Elasticsearch介绍\n13.1.1　安装Elasticsearch\n13.1.2　Elasticsearch的基本概念\n13.2　使用REST访问Elasticsearch\n13.2.1　添加文档\n13.2.2　根据主键查询\n13.2.3　根据主键更新\n13.2.4　根据主键删除\n13.2.5　搜索文档\n13.2.6　联合多个索引搜索\n13.3　使用RestTemplate访问ES\n13.3.1　创建Book\n13.3.2　使用RestTemplate获取搜索结果\n13.4　Spring Data Elastic\n13.4.1　安装Spring Data\n13.4.2　编写Entity\n13.4.3　编写Dao\n13.4.4　编写Controller\n第14章　Cache\n14.1　关于Cache\n14.1.1　Cache的组件和概念\n14.1.2　Cache的单体应用\n14.1.3　使用专有的Cache服务器\n14.1.4　使用一二级缓存服务器\n14.2　Spring Boot Cache\n14.3　注释驱动缓存\n14.3.1　@Cacheable\n14.3.2　Key生成器\n14.3.3　@CachePut\n14.3.4　@CacheEvict\n14.3.5　@Caching\n14.3.6　@CacheConfig\n14.4　使用Redis Cache\n14.4.1　集成Redis缓存\n14.4.2　禁止缓存\n14.4.3　定制缓存\n14.5　Redis缓存原理\n14.6　实现Redis两级缓存\n14.6.1　实现TwoLevelCacheManager\n14.6.2　创建RedisAndLocalCache\n14.6.3　缓存同步说明\n14.6.4　将代码组合在一起\n第15章　Spring Session\n15.1　水平扩展实现\n15.2　Nginx的安装和配置\n15.2.1　安装Nginx\n15.2.2　配置Nginx\n15.3　Spring Session\n15.3.1　Spring Session介绍\n15.3.2　使用Redis\n15.3.3　Nginx+Redis\n第16章　Spring Boot和ZooKeeper\n16.1　ZooKeeper\n16.1.1　ZooKeeper的数据结构\n16.1.2　安装ZooKeeper\n16.1.3　ZooKeeper的基本命令\n16.1.4　领导选取演示\n16.1.5　分布式锁演示\n16.1.6　服务注册演示\n16.2　Spring Boot集成ZooKeeper\n16.2.1　集成Curator\n16.2.2　Curator API\n16.3　实现分布式锁\n16.4　服务注册\n16.4.1　通过ServiceDiscovery注册服务\n16.4.2　获取服务\n16.5　领导选取\n第17章　监控Spring Boot应用\n17.1　安装Acutator\n17.2　HTTP跟踪\n17.3　日志查看\n17.4　线程栈信息\n17.5　内存信息\n17.6　查看URL映射\n17.7　查看Spring容器管理的Bean\n17.8　其他监控\n17.9　编写自己的监控信息\n17.9.1　编写HealthIndicator\n17.9.2　自定义监控","pages":"384","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s29588927.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s29588927.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29588927.jpg"},"alt":"https:\/\/book.douban.com\/subject\/27180193\/","id":"27180193","publisher":"中国工信出版集团","isbn10":"7121328259","isbn13":"9787121328251","title":"Spring Boot 2精髓","url":"https:\/\/api.douban.com\/v2\/book\/27180193","alt_title":"","author_intro":"","summary":"Spring Boot是目前Spring技术体系中炙手可热的框架之一，既可用于构建业务复杂的企业应用系统，也可以开发高性能和高吞吐量的互联网应用。Spring Boot框架降低了Spring技术体系的使用门槛，简化了Spring应用的搭建和开发过程，提供了流行的第三方开源技术的自动集成。\n本书系统介绍了Spring Boot 2的主要技术，侧重于两个方面，一方面是极速开发一个Web应用系统，详细介绍Spring Boot框架、Spring MVC、视图技术、数据库访问技术，并且介绍多环境部署、自动装配、单元测试等高级特性；另一方面，当系统模块增加，性能和吞吐量要求增加时，如何平滑地用Spring Boot实现分布式架构，也会在本书后半部分介绍，包括使用Spring实现RESTful架构，在Spring Boot框架下使用Redis、MongoDB、ZooKeeper、Elasticsearch等流行技术，使用Spring Session实现系统水平扩展，使用Spring Cache提高系统性能。","price":"79.00"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"本书不仅讲解了Spring 5.2和Spring Boot 2.2的相关知识，还介绍了微服务、云原生应用方面的知识，做到让微服务、云原生应用落地。","author":["汪云飞","沈永林","陈晓茜"],"pubdate":"2020-1","tags":[{"count":1,"name":"计算机","title":"计算机"},{"count":1,"name":"web","title":"web"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s33524275.jpg","binding":"","translator":[],"catalog":"目录\n第 1 章  初识 Spring Boot ............................................................................................... 1\n1.1  Spring Boot 概述 ............................................................................................................ 1  1.2  快速建立 Spring Boot 应用 ........................................................................................... 2\n1.2.1  安装 Java ............................................................................................................. 2\n1.2.2  使用 Spring Initializr ........................................................................................... 2\n1.2.3  第一段代码 ......................................................................................................... 3\n1.3  体验 Spring Boot ............................................................................................................ 4  1.3.1  Spring Boot 的应用结构 ..................................................................................... 4\n1.3.2  build.gradle .......................................................................................................... 5\n1.3.3  QuickStartApplication ......................................................................................... 5\n1.3.4  application.properties .......................................................................................... 6\n1.4  小结 ................................................................................................................................ 6\n第 2 章  函数式编程 ........................................................................................................ 7\n2.1  了解函数式编程 ............................................................................................................ 7\n2.2  Lambda 表达式 .............................................................................................................. 7\n2.2.1  了解Lambda 表达式 .......................................................................................... 7\n2.2.2  把 Lambda 表达式作为参数 .............................................................................. 8\n2.3  函数接口 ........................................................................................................................ 9\n2.3.1  Predicate ............................................................................................................ 10\n2.3.2  Function ............................................................................................................. 12\n2.3.3  Consumer .......................................................................................................... 14\n2.3.4  Supplier ............................................................................................................. 14\n2.3.5  Operator ............................................................................................................. 15\n2.3.6  Comparator ........................................................................................................ 15\n2.3.7  自定义函数接口 ............................................................................................... 16\n2.4  方法引用 ...................................................................................................................... 16\n2.4.1  构造器方法引用 ............................................................................................... 16\n2.4.2  静态方法引用 ................................................................................................... 17\n2.4.3  实例方法引用 ................................................................................................... 18\n2.4.4  引用特定类的任意对象的方法 ....................................................................... 18\n2.5  Stream ........................................................................................................................... 18\n2.5.1  Stream 简介 ....................................................................................................... 19\n2.5.2  获得 Stream ....................................................................................................... 19\n2.5.3  中间操作 ........................................................................................................... 20\n2.5.4  终结操作 ........................................................................................................... 23\n2.6  Optional ........................................................................................................................ 27\n2.6.1  获得Optional .................................................................................................... 28\n2.6.2  Optional 的用法 ................................................................................................ 28\n2.7小结......................................................................................................................29\n第 3 章  Spring 5.X 基础 ............................................................................................... 30\n3.1  IoC 容器 ....................................................................................................................... 30\n3.2  Spring Bean 的配置 ..................................................................................................... 31\n3.2.1  注解配置（@Component） ............................................................................. 31\n3.2.2  Java 配置（@Configuration 和@Bean） ........................................................ 31\n3.2.3  依赖注入（Dependency Injection） ................................................................ 32\n3.2.4  运行检验（CommandLineRunner） ............................................................... 37\n3.2.5  Bean 的 Scope ................................................................................................... 38\n3.2.6  Bean 的生命周期 .............................................................................................. 40\n3.2.7  应用环境 ........................................................................................................... 43\n3.2.8  条件配置（@Conditional） ............................................................................ 46\n3.2.9  开启配置（@Enable*和@Import） ................................................................ 47\n3.3  对 Bean 的处理（BeanPostProcessor） ...................................................................... 53\n3.4  Spring Aware 容器 ....................................................................................................... 54\n3.5  Bean 之间的事件通信 ................................................................................................. 57\n3.6  Spring EL ...................................................................................................................... 59\n3.7  AOP .............................................................................................................................. 61\n3.8  注解工作原理 .............................................................................................................. 64\n3.8.1  BeanPostProcessor ............................................................................................ 64\n3.8.2  BeanFactoryPostProcessor ................................................................................ 66\n3.8.3  使用AOP .......................................................................................................... 68\n3.8.4  组合元注解 ....................................................................................................... 68\n3.9小结......................................................................................................................68\n第 4 章  深入 Spring Boot ............................................................................................. 69\n4.1  Spring Boot 介绍 .......................................................................................................... 69\n4.2  Spring Boot 的“魔法” .................................................................................................. 69\n4.2.1  加载自动配置 ................................................................................................... 69\n4.2.2  实现自动配置 ................................................................................................... 71\n4.3  Spring Boot 的配置 ...................................................................................................... 73\n4.3.1  应用配置 ........................................................................................................... 74\n4.3.2  修改默认配置 ................................................................................................... 76\n4.3.3  外部配置 ........................................................................................................... 79\n4.4  日志和报告 .................................................................................................................. 91\n4.4.1  日志 ................................................................................................................... 91\n4.4.2  报告 ................................................................................................................... 93\n4.5  多线程任务和计划任务 .............................................................................................. 94\n4.5.1  Task Executor .................................................................................................... 94\n4.5.2  Task Scheduler .................................................................................................. 97\n4.6  Gradle 插件 .................................................................................................................. 99\n4.6.1  依赖 ................................................................................................................... 99\n4.6.2  Spring Boot Starter .......................................................................................... 100\n4.6.3  插件任务 ......................................................................................................... 100\n4.7  自定义Starter ............................................................................................................. 100\n4.7.1  包装技术库 ..................................................................................................... 101\n4.7.2  Starter 的结构 ................................................................................................. 103\n4.7.3  autoconfigure 模块 .......................................................................................... 105\n4.7.4  Starter 模块 ..................................................................................................... 107\n4.7.5  使用 Starter ..................................................................................................... 108\n4.8  Spring Boot Actuator .................................................................................................. 110\n4.8.1  常用端点 ......................................................................................................... 110\n4.8.2  自定义 ............................................................................................................. 119\n4.8.3  使用 Prometheus 和Grafana 监控指标 ......................................................... 124\n4.9  小结 ............................................................................................................................ 128\n第 5 章  Spring Web MVC .......................................................................................... 129\n5.1  Spring Web MVC 简介 .............................................................................................. 129\n5.2  用 Spring Boot 学习Web MVC ................................................................................ 129\n5.2.1  核心注解 ......................................................................................................... 129\n5.2.2  RESTful 服务 .................................................................................................. 130\n5.2.3  @ControllerAdvice ......................................................................................... 146\n5.2.4  @RestControllerAdvice .................................................................................. 151\n5.2.5  JSON 定制 ...................................................................................................... 156\n5.2.6  RestTemplate ................................................................................................... 159\n5.3  Web MVC 配置 .......................................................................................................... 161\n5.3.1  Spring MVC 的工作原理 ............................................................................... 161\n5.3.2  配置MVC ....................................................................................................... 161\n5.3.3  Interceptor ....................................................................................................... 162\n5.3.4  Formatter ......................................................................................................... 164\n5.3.5  HttpMessageConverter .................................................................................... 166\n5.3.6  方法参数和返回值处理设置 ......................................................................... 169\n5.3.7  初始化数据绑定设置 ..................................................................................... 176\n5.3.8  类型转换原理与设置 ..................................................................................... 176\n5.3.9  路径匹配和内容协商 ..................................................................................... 183\n5.3.10  JSON ............................................................................................................. 188\n5.3.11 其他外部属性配置 ......................................................................................... 189\n5.4  Servlet 容器 ................................................................................................................ 191\n5.4.1  注册 Servlet、Filter 和 Listener ..................................................................... 191\n5.4.2  配置 Servlet 容器 ............................................................................................ 196\n5.5  异步请求 .................................................................................................................... 202\n5.5.1  Servlet 3.0 异步返回 ...................................................................................... 202\n5.5.2  HTTP Streaming.............................................................................................. 206\n5.5.3  HTTP\/2 ............................................................................................................ 212\n5.6  小结 ............................................................................................................................ 214\n第 6 章  数据访问 ....................................................................................................... 215\n6.1   Spring Data Repository ............................................................................................. 215\n6.1.1  DDD 与 Spring Data Repository ..................................................................... 215\n6.1.2  查询方法 ......................................................................................................... 218\n6.2  关系数据库——Spring Data JPA .............................................................................. 218\n6.2.1  JPA、Hibernate 和Spring Data JPA .............................................................. 218\n6.2.2  环境准备 ......................................................................................................... 218\n6.2.3  自动配置 ......................................................................................................... 220\n6.2.4  定义聚合 ......................................................................................................... 221\n6.2.5  定义聚合 Repository ...................................................................................... 224\n6.2.6  查询 ................................................................................................................. 226\n6.2.7  事件监听 ......................................................................................................... 238\n6.2.8  领域事件 ......................................................................................................... 242\n6.2.9  审计功能 ......................................................................................................... 245\n6.2.10  Web 支持 ...................................................................................................... 246\n6.2.11  数据库初始化 ............................................................................................... 248\n6.3  NoSQL——Spring Data Elasticsearch ....................................................................... 252\n6.3.1  Elascticsearch 简介 ......................................................................................... 252\n6.3.2  环境准备 ......................................................................................................... 252\n6.3.3  自动配置 ......................................................................................................... 253\n6.3.4  定义聚合 ......................................................................................................... 254\n6.3.5  定义聚合 Repository ...................................................................................... 255\n6.3.6  查询 ................................................................................................................. 256\n6.4  数据缓存 .................................................................................................................... 261\n6.4.1  Spring Boot 与缓存......................................................................................... 261\n6.4.2  环境准备 ......................................................................................................... 262\n6.4.3  使用缓存注解 ................................................................................................. 264\n6.5  小结 ............................................................................................................................ 266\n第 7 章  安全控制 ....................................................................................................... 267\n7.1  Spring Security 的应用 .............................................................................................. 267\n7.1.1  Spring Boot 的自动配置 ................................................................................. 267\n7.1.2  开启Web 安全配置 ....................................................................................... 268\n7.1.3  定制Web 安全配置 ....................................................................................... 268\n7.1.4  Authentication ................................................................................................. 269\n7.1.5  Authorization ................................................................................................... 281\n7.1.6  Spring Data 集成 ............................................................................................. 294\n7.2  Spring Security 实战 .................................................................................................. 295\n7.3  OAuth 2.0 ................................................................................................................... 301\n7.3.1  OAuth 2.0 Authorization Server ...................................................................... 301\n7.3.2  OAuth 2.0 Resource Server ............................................................................. 310\n7.3.3  OAuth 2.0 Client ............................................................................................. 317\n7.4  小结 ............................................................................................................................ 322\n第 8 章  响应式编程 .................................................................................................... 323\n8.1  Project Reactor............................................................................................................ 323\n8.1.1  Reactive Streams 的基础接口 ........................................................................ 323\n8.1.2  Flux 和 Mono .................................................................................................. 325\n8.2  Spring WebFlux .......................................................................................................... 327\n8.2.1  Spring WebFlux 基础 ..................................................................................... 327\n8.2.2  Spring Boot 的自动配置 ................................................................................. 328\n8.2.3  注解控制器 ..................................................................................................... 329\n8.2.4  函数式端点 ..................................................................................................... 332\n8.2.5  Spring WebFlux 的配置 ................................................................................. 334\n8.3  Reactive NoSQL ......................................................................................................... 334\n8.3.1  响应式 Elasticsearch ....................................................................................... 335\n8.3.2  响应式 MongoDB ........................................................................................... 339\n8.4  Reactive 关系型数据库：R2DBC ............................................................................. 342\n8.4.1  安装 PostgreSQL ............................................................................................ 343\n8.4.2  Spring Boot 的自动配置 ................................................................................. 343\n8.4.3  示例 ................................................................................................................. 344\n8.5  Reactive Spring Security ............................................................................................ 347\n8.5.1  Reactive Spring Security 原理 ........................................................................ 347\n8.5.2  Spring Boot 的自动配置 ................................................................................. 347\n8.5.3  示例 ................................................................................................................. 348\n8.6  小结 ............................................................................................................................ 354\n第 9 章  事件驱动 ....................................................................................................... 355\n9.1  JMS ............................................................................................................................. 355\n9.1.1  安装Apache ActiveMQ Artemis .................................................................... 355\n9.1.2  新建应用 ......................................................................................................... 356\n9.1.3  Spring Boot 的自动配置 ................................................................................. 356\n9.1.4  示例 ................................................................................................................. 356\n9.1.5  Topic 和 Queue ............................................................................................... 358\n9.2  RabbitMQ ................................................................................................................... 360\n9.3  Kafka .......................................................................................................................... 367\n9.4  Websocket .................................................................................................................. 374\n9.4.1  STOMP Websocket ......................................................................................... 374\n9.4.2  Reactive Websocket ........................................................................................ 379\n9.5  RSocket ....................................................................................................................... 382\n9.5.1  新建应用 ......................................................................................................... 382\n9.5.2  Spring Boot 的自动配置 ................................................................................. 383\n9.5.3  示例 ................................................................................................................. 383\n9.6  小结 ............................................................................................................................ 388\n第 10 章  系统集成与批处理 ....................................................................................... 389\n10.1  Spring Integration ..................................................................................................... 389\n10.1.1  Spring Integration 基础 ................................................................................. 389\n10.1.2  Spring Integration Java DSL ......................................................................... 391\n10.1.3  示例 ............................................................................................................... 392\n10.2  Spring Batch ............................................................................................................. 395\n10.2.1  Spring Batch 的流程 ..................................................................................... 396\n10.2.2  Spring Boot 的自动配置 ............................................................................... 396\n10.2.3  示例 ............................................................................................................... 397\n10.3  小结 .......................................................................................................................... 402\n第 11 章  Spring Cloud 与微服务 ................................................................................ 403  11.1  微服务基础 .............................................................................................................. 403  11.1.1  微服务和云原生应用 ................................................................................... 403\n11.1.2  领域驱动设计 ............................................................................................... 404\n11.2  Spring Cloud ............................................................................................................. 405\n11.2.1  服务发现 ....................................................................................................... 405\n11.2.2  配置管理 ....................................................................................................... 408\n11.2.3  同步服务交互 ............................................................................................... 412\n11.2.4  异步服务交互 ............................................................................................... 417\n11.2.5  响应式异步交互 ........................................................................................... 427\n11.2.6  应用网关：Spring Cloud Gateway .............................................................. 430\n11.2.7  认证授权 ....................................................................................................... 433\n11.3  小结 .......................................................................................................................... 442\n第 12 章  Kubernetes 与微服务 .................................................................................. 443\n12.1  Kubernetes ................................................................................................................ 443\n12.1.1  安装 ............................................................................................................... 443\n12.1.2  Kubernetes 基础知识 .................................................................................... 445\n12.1.3  Helm .............................................................................................................. 460\n12.1.4  DevOps .......................................................................................................... 463\n12.1.5  安装Jenkins .................................................................................................. 464\n12.1.6  微服务示例 ................................................................................................... 465\n12.1.7  镜像仓库和 Dockerfile ................................................................................. 467\n12.1.8  使用Helm 打包应用 .................................................................................... 471\n12.1.9  Jenkins 流程 .................................................................................................. 475\n12.2  Service Mesh 和 Istio ............................................................................................... 481\n12.2.1  安装Istio ....................................................................................................... 482\n12.2.2  微服务示例 ................................................................................................... 483\n12.3  小结 .......................................................................................................................... 490","pages":"504","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s33524275.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s33524275.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s33524275.jpg"},"alt":"https:\/\/book.douban.com\/subject\/34894577\/","id":"34894577","publisher":"电子工业出版社","isbn10":"7121377926","isbn13":"9787121377921","title":"从企业级开发到云原生微服务：Spring Boot实战","url":"https:\/\/api.douban.com\/v2\/book\/34894577","alt_title":"","author_intro":"","summary":"编辑推荐\n《从企业级开发到云原生微服务：Spring Boot实战》以Spring 5.2和Spring Boot 2.2为基础，内容由浅入深，适合各个级别的读者学习。\n无论是简单的技术点，还是复杂的技术点，都配有实战案例，系统地讲解在日常企业级开发和微服务开发中面临的大部分的问题。\n内容提要\n《从企业级开发到云原生微服务：Spring Boot实战》以Spring 5.2和Spring Boot 2.2为基础，系统地讲解了在日常企业级开发和微服务开发中面临的大部分的问题，如函数式编程、Spring MVC、Spring Data、Spring Security、响应式编程、事件驱动、Spring Integration、Spring Batch、Spring Cloud、Kubernetes与微服务等。《从企业级开发到云原生微服务：Spring Boot实战》内容由浅入深，适合有Java基础的初级程序员学习。同时，本书还介绍了较深的理论及原理知识，可供中、高级工程师提升使用。本书讲解的所有主题都附有实战案例，读者可快速将相关技术应用于工作实践中。\n前言\n缘起\n距离我的第一本书《Java EE 开发的颠覆者：Spring Boot开发》的出版已经过去了四年，在这四年中，Spring Boot从刚开始被关注到现在被广泛应用于企业级开发，我很荣幸参与了这一进程。\n在这四年里，技术发生了许多的变化，微服务、云原生已经成为技术流行词，这也促使我们对技术的关注点从企业级开发逐渐向微服务、云原生应用转移。在规划本书时，本想将其作为《Java EE开发的颠覆者：Spring Boot开发》的第二版，但最终还是以一本新书推出，原因有二：\n第一，内容完全重新编写，全部基于Spring 5.2和Spring Boot 2.2编写，只是部分章节名称和第一本书相同。\n第二，添加了微服务、云原生应用方面的知识，做到让微服务、云原生应用落地。\n第一本书收到了许多读者的好评，这给了我很大的信心再写一本关于最新的Spring Boot实战的书籍。为了能更多地照顾到应用开发的方方面面，最初我列出了26章，这让本书几乎无法完成。此时，我想起《人月神话》中的“第二系统效应”：在完成一个小型、优雅而成功的系统之后，人们倾向于对下一个计划有过度的期待，可能因此建造出一个巨大的、有各种特色的“怪兽系统”。\n这正是我最初在写作本书时的心态，此时我将精力重新聚焦在Spring Boot在企业级应用和云原生应用，经过近半年的努力，终于让本书与大家见面。\n特色\n非常感谢各位读者对我的第一本书的厚爱，期待大家同样喜欢本书。本书特色如下：\n◎由浅入深，适合初学者及各个级别的学习者学习。\n◎无论是简单的技术点，还是复杂的技术点，都配有实战案例。\n本书内容\n第1章初识Spring Boot。以简单的方式新建Spring Boot应用，让初学者可以对Spring Boot有感性的认识。如果读者已经学习或使用过Spring Boot，则可快速阅读或略过本章。\n第2章函数式编程。Spring 5.X 支持的 JDK 基线版本为 8，本书中的大量代码都涉及函\n数式编程的内容，响应式编程更是以函数式编程为基础，所以学好函数式编程会给后面的学习 打下良好的基础。\n第3章Spring 5.X基础。本章带领读者快速学习 Spring 5.2常用的主要内容，为学习和理解Spring Boot打下坚实的基础。\n第4章深入Spring Boot。本章首先讲解Spring Boot的运行原理，然后讲解Spring Boot 2.2的核心内容。\n第5章Spring Web MVC。Spring Web MVC是工程师开发工作的核心，本章从简单应用和深层配置等各个方面对Spring MVC进行深入的讲解。\n第6章数据访问。本章讲解Spring Data伞形项目，Spring Data是Spring生态中有魅力、能提高生产力的框架之一，它可以使用相同的编程模型对不同的数据库技术进行开发，本章包含 Spring Data JPA、Spring Data Elasticsearch和数据缓存。\n第7章安全控制。Spring Security是Java EE领域成熟的安全解决方案，本章学习Spring Security和OAuth 2.0的应用。\n第8章响应式编程。响应式编程是未来几年的技术趋势，本章从开发的各个环节完全打通响应式开发，包含Project Reactor、Spring WebFlux、Reactive NoSQL、R2DBC和Reactive Spring Security。\n第9章事件驱动。本章讲解在事件驱动开发中的常用技术，以达到应用之间的松耦合，本章包含 JMS、RabbitMQ、Kafka、Websocket和RSocket。\n第10章系统集成与批处理。本章主要讲解系统集成框架 Spring Integration和批处理框架Spring Batch。\n第11章Spring Cloud与微服务。本章讲解微服务和Spring Cloud的主要知识，还特别介绍了在Spring Cloud下OAuth 2.0的使用。\n第12章Kubernetes 与微服务。在微服务开发完成后，它的部署主要基于Kubernetes平台。本章首先讲解基于Kubernetes、Jenkins和Helm的部署，然后介绍服务网格Istio在微服务部署中的应用。\n由于时间及作者本人水平有限，书中难免有所错漏，望各位读者及时指出书中的不当之处并与我联系：https:\/\/github.com\/wiselyman\/spring-boot-book-source-code。","price":"108.00元"},{"rating":{"max":10,"numRaters":4,"average":"0.0","min":0},"subtitle":"","author":["Felipe Gutierrez"],"pubdate":"2016-6-20","tags":[{"count":2,"name":"计算机","title":"计算机"},{"count":2,"name":"编程","title":"编程"},{"count":1,"name":"SpringBoot","title":"SpringBoot"},{"count":1,"name":"Java","title":"Java"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s28789523.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"388","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s28789523.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s28789523.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s28789523.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26811238\/","id":"26811238","publisher":"Apress","isbn10":"1484214323","isbn13":"9781484214329","title":"Pro Spring Boot","url":"https:\/\/api.douban.com\/v2\/book\/26811238","alt_title":"","author_intro":"","summary":"","price":"GBP 26.50"},{"rating":{"max":10,"numRaters":2,"average":"0.0","min":0},"subtitle":"Applications and Microservices with the Spring Framework","author":["K. Siva Prasad Reddy"],"pubdate":"2017-10-26","tags":[{"count":2,"name":"Java","title":"Java"},{"count":1,"name":"编程语言","title":"编程语言"},{"count":1,"name":"中国","title":"中国"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29658737.jpg","binding":"平装","translator":[],"catalog":"1. Introduction to SpringBoot\n2. Getting Started with SpringBoot\n3. SpringBoot AutoConfiguration\n4. SpringBoot Essentials\n5. Working with JdbcTemplate\n6. Working with MyBatis\n7. Working with JOOQ\n8. Working with JPA\n9. Working with MongoDB\n10. Web Applications with SpringBoot\n11. Building REST API using SpringBoot\n12. Reactive Programming using Spring WebFlux\n13. Securing Web Applications\n14. SpringBoot Actuator\n15. Testing SpringBoot Applications\n16. Creating Custom SpringBoot Starter\n17. SpringBoot with Groovy, Scala, and Kotlin\n18. Introducing JHipster\n19. Deploying SpringBoot Applications","pages":"304","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s29658737.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s29658737.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29658737.jpg"},"alt":"https:\/\/book.douban.com\/subject\/27623117\/","id":"27623117","publisher":"Apress","isbn10":"1484229304","isbn13":"9781484229309","title":"Beginning Spring Boot 2","url":"https:\/\/api.douban.com\/v2\/book\/27623117","alt_title":"","author_intro":"K. Siva Prasad Reddy is a Senior Software Engineer having more than seven years of experience in developing enterprise applications with Java and Java EE technologies. Siva is a Sun Certified Java Programmer and has a lot of experience in server-side technologies such as Java, Java EE, Spring, Hibernate, MyBatis, JSF, PrimeFaces, and WebServices (SOAP\/REST).","summary":"Learn Spring Boot and how to build Java-based enterprise, web, and microservice applications with it. In this book, you'll see how to work with relational and NoSQL databases, build your first microservice, enterprise, or web application, and enhance that application with REST APIs. You'll also learn how to build reactive web applications using Spring Boot along with Spring Web Reactive. Then you’ll secure your Spring Boot-created application or service before testing and deploying it.\nAfter reading and learning with Beginning Spring Boot 2, you'll have the skills and techniques to start building your first Spring Boot applications and microservices with confidence to take the next steps in your career journey.\nWhat You'll Learn\nUse Spring Boot auto configuration\nWork with relational and NoSQL databases\nBuild web applications with Spring Boot\nApply REST APIs using Spring Boot\nCreate reactive web applications using Spring Web Reactive\nSecure your Spring Boot applications or web services\nTest and deploy your Spring Boot applications\nWho This Book Is For\nExperienced Java and Spring Framework developers who are new to the new Spring Boot micro-framework.","price":"371.00元"},{"rating":{"max":10,"numRaters":1,"average":"0.0","min":0},"subtitle":"Build and deploy Java microservices using Spring Cloud, Istio, and Kubernetes","author":["Magnus Larsson"],"pubdate":"2019-9-20","tags":[{"count":1,"name":"软件工程","title":"软件工程"},{"count":1,"name":"分布式","title":"分布式"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s33542789.jpg","binding":"Paperback","translator":[],"catalog":"Table of Contents\nIntroduction to Microservices\nIntroduction to Spring Boot\nCreating a Set of Cooperating Microservices\nDeploying Our Microservices Using Docker\nAdding an API Description Using OpenAPI\/Swagger\nAdding Persisitence\nDeveloping Reactive Microservices\nIntroduction to Spring Cloud\nAdding Service Discovery Using Netflix Eureka and Ribbon\nUsing Spring Cloud Gateway to Hide Microservices Behind an Edge Server\nSecuring Access to APIs\nCentralized Configuration\nImproving Resilience using Resilience4j\nUnderstanding Distributed Tracing\nIntroduction to Kubernetes\nDeploying Our Microservices to Kubernetes\nImplementing Kubernetes Features as an Alternative\nUsing a Service Mesh to Improve Observability and Management\nCentralized Logging with the EFK Stack\nMonitoring Microservices","pages":"668","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s33542789.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s33542789.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s33542789.jpg"},"alt":"https:\/\/book.douban.com\/subject\/34923105\/","id":"34923105","publisher":"Packt Publishing","isbn10":"1789613477","isbn13":"9781789613476","title":"Hands-On Microservices with Spring Boot and Spring Cloud","url":"https:\/\/api.douban.com\/v2\/book\/34923105","alt_title":"","author_intro":"Magnus Larsson has been in the IT industry for more than 30 years, working as a consultant for large companies in Sweden such as Volvo, Ericsson, and AstraZeneca. He has seen a lot of different communication technologies come and go over the years, such as RPC, CORBA, SOAP, and REST. In the past, he struggled with the challenges associated with distributed systems as there was no substantial help from the software available at that time. This has, however, changed dramatically over the last few years with the introduction of open source projects such as Spring Cloud, Netflix OSS, Docker, and Kubernetes. Over the last five years, Magnus has been helping customers use these new software technologies and has also done several presentations and blog posts on the subject.","summary":"Book Description\nMicroservices architecture allows developers to build and maintain applications with ease, and enterprises are rapidly adopting it to build software using Spring Boot as their default framework. With this book, you'll learn how to efficiently build and deploy microservices using Spring Boot.\nThis microservices book will take you through tried and tested approaches to building distributed systems and implementing microservices architecture in your organization. Starting with a set of simple cooperating microservices developed using Spring Boot, you'll learn how you can add functionalities such as persistence, make your microservices reactive, and describe their APIs using Swagger\/OpenAPI. As you advance, you'll understand how to add different services from Spring Cloud to your microservice system. The book also demonstrates how to deploy your microservices using Kubernetes and manage them with Istio for improved security and traffic management. Finally, you'll explore centralized log management using the EFK stack and monitor microservices using Prometheus and Grafana.\nBy the end of this book, you'll be able to build microservices that are scalable and robust using Spring Boot and Spring Cloud.\nWhat you will learn\nBuild reactive microservices using Spring Boot\nDevelop resilient and scalable microservices using Spring Cloud\nUse OAuth 2.0\/OIDC and Spring Security to protect public APIs\nImplement Docker to bridge the gap between development, testing, and production\nDeploy and manage microservices using Kubernetes\nApply Istio for improved security, observability, and traffic management","price":"USD 39.99"},{"rating":{"max":10,"numRaters":2,"average":"0.0","min":0},"subtitle":"Messaging APIs for Enterprise and Integration Solutions","author":["Felipe Gutierrez"],"pubdate":"2017-6-15","tags":[{"count":1,"name":"消息","title":"消息"},{"count":1,"name":"微服务","title":"微服务"},{"count":1,"name":"Spring","title":"Spring"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29537280.jpg","binding":"平装","translator":[],"catalog":"1. Introduction to Messaging\n2. Spring Boot\n3. Spring Application Events\n4. Spring JMS\n5. Spring AMQP\n6. Spring Pub\/Sub with Redis\n7. Messaging over the Web\n8. Spring Integration Messaging\n9. Spring Cloud Stream\n10. Reactor\n11. Messaging with Microservices","pages":"196","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29537280.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29537280.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29537280.jpg"},"alt":"https:\/\/book.douban.com\/subject\/27133464\/","id":"27133464","publisher":"Apress","isbn10":"1484212258","isbn13":"9781484212257","title":"Spring Boot Messaging","url":"https:\/\/api.douban.com\/v2\/book\/27133464","alt_title":"","author_intro":"Felipe Gutierrez is an expert developer, engineer working at EMC-Pivotal, the makers and backers of the Spring Framework and platform. He is an active, expert Spring and enterprise Java applications developer","summary":"Build messaging applications using the power of Spring Boot; use Spring application events over the Web; use WebSocket, SockJS, and STOMP messaging with Spring MVC; and use Spring JMS, Redis Pub\/Sub and Spring AMQP for reliable messaging solutions. This book covers all the Spring Messaging APIs using Spring Boot. Written by a Pivotal engineer, Spring Boot Messaging is an authoritative guide to the many messaging APIs and how to use these for creating enterprise and integration solutions.You will learn and integrate these messaging APIs with more complex enterprise and cloud applications: for example, you will see how to use Spring Cloud Stream for creating message-driven and cloud native microservices. In addition, you'll discover the new Spring Integration DSL and use it with Spring Cloud Stream to build integration solutions using every enterprise integration pattern. Finally, you'll see Spring Reactor and Spring Cloud to take your application to the next level.","price":"USD"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"Build modern and scalable full stack applications using the Java-based Spring Framework 5.0 and React","author":["Juha Hinkula"],"pubdate":"2018-6-21","tags":[],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29908153.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"302","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29908153.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29908153.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29908153.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30364042\/","id":"30364042","publisher":"Packt Publishing","isbn10":"1789138086","isbn13":"9781789138085","title":"Hands-On Full Stack Development with Spring Boot 2.0  and React","url":"https:\/\/api.douban.com\/v2\/book\/30364042","alt_title":"","author_intro":"","summary":"","price":"GBP 32.99"},{"rating":{"max":10,"numRaters":7,"average":"0.0","min":0},"subtitle":"","author":["黑马程序员"],"pubdate":"","tags":[{"count":1,"name":"spring","title":"spring"},{"count":1,"name":"java","title":"java"},{"count":1,"name":"Java","title":"Java"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29858182.jpg","binding":"","translator":[],"catalog":"第1章认识微服务架构1\n1.1 为什么需要微服务架构 2\n1.1.1 传统单体应用架构的问题 2\n1.1.2 如何解决传统应用架构的问题 3\n1.2 微服务架构是什么 4\n1.2.1 微服务架构的概念 4\n1.2.2 微服务架构的优点 5\n1.2.3 微服务架构的不足 6\n1.2.4 微服务架构与SOA的区别 6\n1.3 如何构建微服务架构 6\n1.3.1 微服务的拆分 7\n1.3.2 微服务架构的组件 7\n1.3.3 微服务架构的搭建 7\n1.3.4 微服务架构的技术选型 8\n1.4 本章小结 10\n第2章 初识Spring Boot 11\n2.1 Spring Boot介绍 12\n2.1.1 Spring Boot的由来和特点 12\n2.1.2 Spring Boot的使用要求 12\n2.2 Spring Boot入门 13\n2.2.1 Spring Boot项目的快速搭建 13\n2.2.2 第一个Spring Boot程序 18\n2.3 Spring Boot的工作机制 20\n2.3.1 @Spring BootApplication 20\n2.3.2 Spring Application 21\n2.4 本章小结 22\n第3章 Spring Boot应用开发 23\n3.1 Spring Boot与MyBatis的集成 24\n3.2 Spring Boot与Redis的集成 29\n3.2.1 添加Redis缓存 29\n3.2.2 清除Redis缓存 31\n3.3 Spring Boot与ActiveMQ的集成 31\n3.3.1 使用内嵌的ActiveMQ 31\n3.3.2 使用外部的ActiveMQ 33\n3.4 Spring Boot应用的打包和部署 35\n3.4.1 JAR包 35\n3.4.2 WAR包 36\n3.5 本章小结 37\n第4章 Spring Cloud（上） 38\n4.1 Spring Cloud简介 39\n4.1.1 什么是Spring Cloud 39\n4.1.2 Spring Cloud的特点 39\n4.1.3 Spring Cloud的版本 39\n4.2 服务发现 40\n4.2.1 Eureka介绍 40\n4.2.2 如何使用Eureka注册服务 41\n4.2.3 如何实现服务间的调用 47\n4.3 客户端负载均衡 50\n4.3.1 Ribbon介绍 50\n4.3.2 Ribbon的使用 51\n4.4 本章小结 53\n第5章 Spring Cloud（下） 54\n5.1 服务容错保护 55\n5.1.1 Spring Cloud Hystrix介绍 55\n5.1.2 Spring Cloud Hystrix的使用 56\n5.1.3 HystrixDashboard的使用 59\n5.2 API网关服务 63\n5.2.1 为什么需要API网关 63\n5.2.2 如何使用Zuul构建API网关服务 64\n5.3 分布式配置管理 68\n5.3.1 Spring Cloud Config简介 68\n5.3.2 使用本地存储的方式实现配置管理 69\n5.3.3 使用Git存储的方式实现配置管理 73\n5.4 本章小结 76\n第6章 初识Docker 77\n6.1 Docker概述 78\n6.1.1 什么是Docker 78\n6.1.2 Docker的特点 78\n6.1.3 Docker与虚拟机的区别 79\n6.2 Docker的安装要求 79\n6.3 Docker的安装方式 80\n6.3.1 在线安装 80\n6.3.2 离线安装 82\n6.3.3 脚本文件安装 83\n6.3.4 安装时的问题及解决方法 84\n6.4 Docker的运行机制 85\n6.4.1 Docker的引擎 85\n6.4.2 Docker的架构 85\n6.5 Docker的底层技术 87\n6.6 本章小结 87\n第7章 Docker的使用 88\n7.1 Docker入门程序 89\n7.2 Dockerfile介绍 92\n7.2.1 Dockerfile基本结构 92\n7.2.2 Dockerfile常用指令 93\n7.2.3 dockerignore文件 95\n7.3 Docker客户端常用指令 96\n7.3.1 Docker常用操作指令 96\n7.3.2 Docker管理指令 101\n7.4 Docker镜像管理 102\n7.4.1 Docker镜像管理工具 102\n7.4.2 Docker Hub远程镜像管理 103\n7.4.3 Docker Registry本地私有仓库搭建 106\n7.4.4 Docker Registry本地私有仓库配置 107\n7.5 本章小结 112\n第8章 Docker中的网络与数据管理 113\n8.1 Docker网络管理 114\n8.1.1 Docker默认网络管理 114\n8.1.2 自定义网络介绍 115\n8.1.3 自定义bridge网络 116\n8.1.4 容器之间的网络通信 118\n8.2 Docker Swarm集群 122\n8.2.1 Docker Swarm概述 122\n8.2.2 Docker Swarm使用 123\n8.3 Docker数据管理 127\n8.3.1 Docker数据存储机制 127\n8.3.2 Docker数据存储方式 129\n8.4 Volumes数据卷管理 129\n8.4.1 Volumes数据卷的优势 129\n8.4.2 Volumes数据卷使用 130\n8.5 本章小结 134\n第9章 微服务项目的整合与测试 135\n9.1 微服务项目整合 136\n9.1.1 微服务项目结构预览 136\n9.1.2 微服务项目功能介绍 136\n9.1.3 微服务项目的启动和测试 140\n9.2 接口可视化工具—Swagger—UI 143\n9.2.1 Swagger—UI使用方法 143\n9.2.2 Swagger—UI使用测试 145\n9.3 本章小结 147\n第10章 微服务的部署 149\n10.1 Docker Compose编排工具 150\n10.1.1 Docker Compose介绍 150\n10.1.2 Docker Compose的安装与卸载 150\n10.1.3 Composefile文件的使用说明 151\n10.2 微服务与Docker的整合 154\n10.3 环境搭建以及镜像准备 159\n10.3.1 环境搭建 159\n10.3.2 镜像准备 161\n10.4 微服务的手动部署 162\n10.4.1 非集群环境下的服务部署 162\n10.4.2 集群环境下服务部署 163\n10.4.3 微服务测试 167\n10.5 使用Jenkins自动部署微服务 169\n10.5.1 Jenkins介绍 169\n10.5.2 Jenkins安装 170\n10.5.3 Jenkins集成插件配置 173\n10.5.4 服务自动化部署 175\n10.6 本章小结 180","pages":"","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29858182.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29858182.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29858182.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30314756\/","id":"30314756","publisher":"","isbn10":"7115443203","isbn13":"9787115443205","title":"微服务架构基础:Spring Boot+Spring Cloud+Docker","url":"https:\/\/api.douban.com\/v2\/book\/30314756","alt_title":"","author_intro":"黑马程序员，传智播客旗下高端IT教育品牌，成立于2006年，它是由中国Java培训领先者张孝祥老师发起，联合全球最大的中文IT社区CSDN、中关村软件园共同创办的一家专业教育机构。办学至今，我们一直坚守着“为千万人少走弯路而著书，为中华软件之崛起而讲课”的办学理念，坚持培养优秀软件应用工程师的宏伟目标，在累计培养的十万余名学员中，其中90%的学员均已在北、上、广等一线城市高薪就业。","summary":"","price":""},{"rating":{"max":10,"numRaters":2,"average":"0.0","min":0},"subtitle":"","author":["Alex Antonov"],"pubdate":"2018-2","tags":[{"count":1,"name":"计算机","title":"计算机"},{"count":1,"name":"Java","title":"Java"},{"count":1,"name":"DEV","title":"DEV"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29732745.jpg","binding":"","translator":[],"catalog":"Title Page\nCopyright and Credits\nSpring Boot 2.0 Cookbook Second Edition\nDedication\nPackt Upsell\nWhy subscribe?\nPacktPub.com\nContributors\nAbout the author\nAbout the reviewers\nPackt is searching for authors like you\nPreface\nWho this book is for\nWhat this book covers\nTo get the most out of this book\nDownload the example code files\nConventions used\nSections\nGetting ready\nHow to do it...\nHow it works...\nThere's more...\nSee also\nGet in touch\nReviews\nGetting Started with Spring Boot\nIntroduction\nUsing a Spring Boot template and starter\nHow to do it...\nHow it works...\nCreating a simple application\nHow to do it...\nHow it works...\nLaunching an application using Gradle\nHow to do it...\nHow it works...\nUsing the command-line runners\nHow to do it...\nHow it works...\nSetting up a database connection\nGetting ready\nHow to do it...\nHow it works...\nSetting up a data repository service\nHow to do it...\nHow it works...\nScheduling executors\nGetting ready\nHow to do it...\nHow it works...\nConfiguring Web Applications\nCreating a basic RESTful application\nHow to do it...\nHow it works...\nCreating Spring Data REST service\nHow to do it...\nHow it works...\nConfiguring custom servlet filters\nHow to do it...\nHow it works...\nConfiguring custom interceptors\nHow to do it...\nHow it works...\nConfiguring custom HttpMessageConverters\nHow to do it...\nHow it works...\nConfiguring custom PropertyEditors\nHow to do it...\nHow it works...\nConfiguring custom type formatters\nHow to do it...\nHow it works...\nWeb Framework Behavior Tuning\nIntroduction\nConfiguring route matching patterns\nHow to do it...\nHow it works...\nConfiguring custom static path mappings\nHow to do it...\nHow it works...\nTuning Tomcat via ServletWebServerFactory\nHow to do it...\nHow it works...\nChoosing embedded servlet containers\nHow to do it...\nHow it works...\nAdding custom connectors\nGetting ready\nHow to do it...\nHow it works...\nWriting Custom Spring Boot Starters\nIntroduction\nUnderstanding Spring Boot autoconfiguration\nHow to do it...\nHow it works...\nCreating a custom Spring Boot autoconfiguration starter\nHow to do it...\nHow it works...\nConfiguring custom conditional bean instantiations\nHow to do it...\nHow it works...\nUsing custom @Enable annotations to toggle configuration\nHow to do it...\nHow it works...\nApplication Testing\nIntroduction\nCreating tests for MVC controllers\nHow to do it...\nHow it works...\nConfiguring a database schema and populating it\nHow to do it...\nHow it works...\nInitializing the database with Spring JPA and Hibernate\nInitializing the database with Spring JDBC\nCreating tests using an in-memory database\nHow to do it...\nHow it works...\nCreating tests using mock objects\nHow to do it...\nHow it works...\nCreating a JPA component test\nHow to do it...\nHow it works...\nCreating a WebMvc component test\nHow to do it...\nHow it works...\nWriting tests using Cucumber\nHow to do it...\nHow it works...\nWriting tests using Spock\nHow to do it...\nHow it works...\nApplication Packaging and Deployment\nIntroduction\nCreating a Spring Boot executable JAR\nHow to do it...\nHow it works...\nCreating Docker images\nHow to do it...\nHow it works...\nBuilding self-executing binaries\nGetting ready\nHow to do it...\nHow it works...\nSpring Boot environment configuration, hierarchy, and precedence\nHow to do it...\nHow it works...\nAdding a custom PropertySource to the environment using EnvironmentPostProcessor\nHow to do it...\nHow it works...\nExternalizing an environmental configuration using property files\nHow to do it...\nHow it works...\nExternalizing an environmental configuration using environment variables\nHow to do it...\nHow it works...\nExternalizing an environmental configuration using Java system properties\nHow to do it...\nHow it works...\nExternalizing an environmental config using JSON\nHow to do it...\nHow it works...\nSetting up Consul\nHow to do it...\nHow it works...\nExternalizing an environmental config using Consul and envconsul\nGetting ready\nHow to do it...\nHow it works...\nHealth Monitoring and Data Visualization\nIntroduction\nWriting custom health indicators\nHow to do it...\nHow it works...\nConfiguring management context\nHow to do it...\nHow it works...\nEmitting metrics\nGetting ready\nHow to do it...\nHow it works...\nMonitoring Spring Boot via JMX\nGetting ready\nHow to do it...\nHow it works...\nManaging Spring Boot via SSHd Shell and writing custom remote Shell commands\nHow to do it...\nHow it works...\nIntegrating Micrometer metrics with Graphite\nGetting ready\nHow to do it...\nHow it works...\nIntegrating Micrometer metrics with Dashing\nGetting ready\nHow to do it...\nHow it works...\nSpring Boot DevTools\nIntroduction\nAdding Spring Boot DevTools to a project\nHow to do it...\nHow it works...\nConfiguring LiveReload\nHow to do it...\nHow it works...\nConfiguring dynamic application restart triggers\nHow to do it...\nHow it works...\nUsing Remote Update\nHow to do it...\nHow it works...\nSpring Cloud\nIntroduction\nGetting started with Spring Cloud\nHow to do it...\nHow it works...\nService discovery using Spring Cloud Consul\nHow to do it...\nHow it works...\nUsing Spring Cloud Netflix – Feign\nHow to do it...\nHow it works...\nService discovery using Spring Cloud Netflix – Eureka\nHow to do it...\nHow it works...\nUsing Spring Cloud Netflix – Hystrix\nHow to do it...\nHow it works...\nOther Books You May Enjoy\nLeave a review - let other readers know what you think","pages":"","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s29732745.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s29732745.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29732745.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30187580\/","id":"30187580","publisher":"","isbn10":"1787129829","isbn13":"9781787129825","title":"Spring Boot 2.0 Cookbook - Second Edition","url":"https:\/\/api.douban.com\/v2\/book\/30187580","alt_title":"","author_intro":"","summary":"Take your application development skills to the next level by implementing Spring Boot features effectively\nAbout This Book\nThis collection of effective recipes serves as guidelines for Spring Boot application development\nGet up to date with features of the latest version of Spring Boot 2.0\nTips and tricks to improve your efficiency through the stages of software development\nWho This Book Is For\nThis book is for Java Developers who have good knowledge and understanding of Spring and Java application development.\nWhat You Will Learn\nGet to know Spring Boot Starters and create custom auto-configurations\nWork with custom annotations that enable bean activation\nUse DevTools to easily develop and debug applications\nLearn the effective testing techniques by integrating Cucumber and Spock\nObserve an eternal application configuration using Consul\nMove your existing Spring Boot applications to the cloud\nUse Hashicorp Consul and Netflix Eureka for dynamic Service Discovery\nUnderstand the various mechanisms that Spring Boot provides to examine an application's health\nIn Detail\nThe Spring framework provides great flexibility for Java development, which also results in tedious configuration work. Spring Boot addresses the configuration difficulties of Spring and makes it easy to create standalone, production-grade Spring-based applications.\nThis practical guide makes the existing development process more efficient. Spring Boot Cookbook 2.0 Second Edition smartly combines all the skills and expertise to efficiently develop, test, deploy, and monitor applications using Spring Boot on premise and in the cloud. We start with an overview of the important Spring Boot features you will learn to create a web application for a RESTful service. Learn to fine-tune the behavior of a web application by learning about custom routes and asset paths and how to modify routing patterns. Address the requirements of a complex enterprise application and cover the creation of custom Spring Boot starters.\nThis book also includes examples of the new and improved facilities available to create various kinds of tests introduced in Spring Boot 1.4 and 2.0, and gain insights into Spring Boot DevTools. Explore the basics of Spring Boot Cloud modules and various Cloud starters to make applications in “Cloud Native” and take advantage of Service Discovery and Circuit Breakers.\nStyle and approach\nThis practical guide follows a recipe-based approach and provides extremely helpful guidelines to build, configure, and customize your Spring Boot applications.\nDownloading the example code for this book You can download the example code files for all Packt books you have purchased from your account at http:\/\/www.PacktPub.com. If you purchased this book elsewhere, you can visit http:\/\/www.PacktPub.com\/support and register to have the files e-mailed directly to you.","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Felipe Gutierrez"],"pubdate":"","tags":[],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s30007802.jpg","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s30007802.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s30007802.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s30007802.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30411224\/","id":"30411224","publisher":"","isbn10":"1484236750","isbn13":"9781484236758","title":"Pro Spring Boot 2","url":"https:\/\/api.douban.com\/v2\/book\/30411224","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":5,"average":"0.0","min":0},"subtitle":"","author":["陈光剑"],"pubdate":"2018-8","tags":[{"count":4,"name":"计算机","title":"计算机"},{"count":3,"name":"spring","title":"spring"},{"count":2,"name":"计算机科学","title":"计算机科学"},{"count":2,"name":"springboot","title":"springboot"},{"count":2,"name":"Java","title":"Java"},{"count":1,"name":"编程","title":"编程"},{"count":1,"name":"java","title":"java"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29864167.jpg","binding":"平装","translator":[],"catalog":"前　言\n第Ⅰ部分　Spring Boot框架基础\n第1章　Spring Boot简介 2\n1.1　从Spring到Spring Boot 2\n1.1.1　从EJB到Spring 3\n1.1.2　Spring框架发展简史 4\n1.1.3　Spring框架的核心模块 5\n1.2　Spring Boot简介 7\n1.2.1　Spring Boot是什么 7\n1.2.2　Spring Boot核心模块 10\n1.3　约定优于配置极简化理念 11\n1.4　本章小结 12\n第2章　快速开始HelloWorld 13\n2.1　创建Spring Boot项目 13\n2.2　Spring Boot项目的入口类 16\n2.3　添加HelloWorldController 18\n2.4　Spring Boot应用注解@Spring BootApplication 19\n2.4.1　Spring Boot配置类注解 20\n2.4.2　启用自动配置注解 21\n2.4.3　组件扫描注解 21\n2.5　XML配置与注解配置 22\n2.6　本章小结 22\n第3章　深入理解Spring Boot自动配置 23\n3.1　传统的SSM开发过程 23\n3.2　Spring Boot自动配置原理 26\n3.2.1　Java配置 26\n3.2.2　条件化Bean 27\n3.2.3　组合注解 32\n3.3　Spring Boot自动配置过程 33\n3.3.1　@EnableAutoConfiguration注解 33\n3.3.2　spring.factories文件 34\n3.3.3　获取候选配置类 35\n3.4　FreeMarkerAutoConfiguration实例分析 35\n3.4.1　spring-boot-starter-freemarker工程 35\n3.4.2　spring-boot-autoconfigure工程 37\n3.5　本章小结 39\n第Ⅱ部分　Spring Boot项目综合实战\n第4章　Spring Boot集成MyBatis数据库层开发 42\n4.1　Java EE分层架构 42\n4.2　MyBatis简介 43\n4.2.1　概述 43\n4.2.2　MyBatis框架组成 44\n4.2.3　MyBatis基础设施 46\n4.3　项目实战 54\n4.3.1　使用Spring Boot CLI创建工程 54\n4.3.2　Spring Boot命令行CLI简介 54\n4.3.3　配置application.properties 58\n4.3.4　使用IDEA中自带的连接数据库客户端 59\n4.3.5　使用MyBatis Generator生成dao层代码 60\n4.3.6　设置MyBatis同时使用Mapper.xml和注解 62\n4.3.7　使用@Select注解 62\n4.3.8　使用MyBatis分页插件pagehelper 63\n4.3.9　MyBatis插件机制 64\n4.3.10　实现分页接口 64\n4.3.11　PageHelper工作原理 67\n4.3.12　多表关联查询级联 74\n4.4　本章小结 78\n第5章　Spring Boot集成JPA数据库层开发 79\n5.1　JPA简介 79\n5.1.1　JPA生态 81\n5.1.2　JPA技术栈 82\n5.2　ORM框架概述 83\n5.3　Hibernate简介 83\n5.4　Spring Data JPA简介 88\n5.5　项目实战 90\n5.5.1　Spring Data JPA提供的接口 90\n5.5.2　创建项目 91\n5.5.3　配置数据库连接 91\n5.5.4　自动生成Entity实体类代码 91\n5.5.5　配置项目数据源信息 95\n5.5.6　实现查询接口 96\n5.5.7　分页查询 97\n5.5.8　多表级联查询 99\n5.5.9　级联类型 101\n5.5.10　模糊搜索接口 102\n5.5.11　JPQL语法基础 103\n5.5.12　JPA常用注解 108\n5.6　本章小结 109\n第6章　Spring Boot Gradle插件应用开发 110\n6.1　Gradle简介 110\n6.2　用Gradle构建生命周期 112\n6.3　Gradle 插件 114\n6.4　项目实战 118\n6.4.1　创建项目 118\n6.4.2　添加依赖 121\n6.4.3　配置上传本地Maven仓库 121\n6.4.4　实现插件 122\n6.4.5　添加插件属性配置 124\n6.4.6　运行测试 124\n6.4.7　在项目中使用kor插件 126\n6.5　本章小结 128\n第7章　使用Spring MVC开发Web应用 129\n7.1　Spring MVC简介 129\n7.1.1　Servlet概述 129\n7.1.2　MVC简介 131\n7.1.3　Spring、Spring MVC与Spring Boot 2.0 132\n7.1.4　Spring MVC框架 133\n7.2　Spring MVC常用注解 136\n7.3　项目实战：使用FreeMarker模板引擎 137\n7.3.1　FreeMarker简介 137\n7.3.2　实现一个分页查询页面 138\n7.4　实现文件下载 144\n7.5　本章小结 145\n第8章　Spring Boot自定义Web MVC配置 146\n8.1　Web MVC配置简介 146\n8.1.1　静态资源配置 147\n8.1.2　拦截器配置 148\n8.1.3　跨域配置 148\n8.1.4　视图控制器配置 149\n8.1.5　消息转换器配置 150\n8.1.6　数据格式化器配置 150\n8.1.7　视图解析器配置 151\n8.2　全局异常处理 152\n8.2.1　使用@ControllerAdvice和@ExceptionHandler注解 152\n8.2.2　实现HandlerExceptionResolver接口 154\n8.3　定制Web容器 157\n8.4　定制Spring Boot应用程序启动Banner 158\n8.5　自定义注册Servlet、Filter和Listener 161\n8.5.1　注册Servlet 161\n8.5.2　注册Filter 163\n8.5.3　注册Listener 168\n8.6　本章小结 169\n第9章　Spring Boot中的AOP编程 170\n9.1　Spring Boot与AOP 170\n9.1.1　AOP简介 170\n9.1.2　Spring AOP介绍 172\n9.1.3　实现一个简单的日志切面 172\n9.2　项目实战：使用AOP + Filter实现登录鉴权与权限控制 175\n9.2.1　系统整体架构 175\n9.2.2　创建工程 176\n9.2.3　数据库表结构设计 177\n9.2.4　用户登录逻辑 179\n9.2.5　登录态鉴权过滤器 181\n9.2.6　AOP实现用户权限管理 185\n9.2.7　用户注册 187\n9.2.8　数据后端校验 188\n9.3　本章小结 192\n第10章　Spring Boot集成Spring Security安全开发 193\n10.1　Spring Security简介 193\n10.2　Spring Security核心组件 194\n10.3　项目实战 201\n10.3.1　初阶Security：默认认证用户名密码 201\n10.3.2　中阶Security：内存用户名密码认证 204\n10.3.3　角色权限控制 206\n10.3.4　进阶Security：基于数据库的用户和角色权限 211\n10.4　本章小结 225\n第11章　Spring Boot集成React.js开发前后端分离项目 226\n11.1　Web前端技术简史 226\n11.2　前后端分离架构 228\n11.3　项目实战 229\n11.3.1　系统功能介绍 229\n11.3.2　实现登录后端接口 230\n11.3.3　实现登录前端页面 231\n11.3.4　实现列表展示后端接口 232\n11.3.5　前后端联调测试 233\n11.4　本章小结 235\n第12章　任务调度与邮件服务开发 236\n12.1　定时任务 236\n12.1.1　通用实现方法 236\n12.1.2　静态定时任务 237\n12.1.3　Cron简介 238\n12.1.4　动态定时任务 240\n12.1.5　多线程执行任务 243\n12.2　开发任务调度服务 245\n12.2.1　同步与异步 245\n12.2.2　同步任务执行 245\n12.2.3　异步任务执行 247\n12.3　开发邮件服务 250\n12.3.1　发送富文本邮件 252\n12.3.2　发送带附件的富文本邮件 253\n12.4　本章小结 254\n第13章　Spring Boot集成WebFlux开发响应式Web应用 255\n13.1　响应式宣言及架构 255\n13.2　项目实战 256\n13.2.1　创建项目 256\n13.2.2　代码分析 258\n13.3　本章小结 262\n第14章　Spring Boot缓存 263\n14.1　Spring Cache简介 263\n14.2　Cache注解 264\n14.3　项目实战 266\n14.4　本章小结 272\n第15章　使用Spring Session集成Redis实现Session共享 273\n15.1　Spring Session简介 273\n15.2　Redis简介 275\n15.2.1　Redis是什么 275\n15.2.2　安装Redis 275\n15.2.3　设置Redis密码 276\n15.2.4　Redis数据类型 277\n15.2.5　Spring Boot集成Redis 279\n15.3　项目实战 281\n15.4　本章小结 285\n第16章　使用Zuul开发API Gateway 286\n16.1　API Gateway简介 286\n16.2　Zuul简介 287\n16.3　项目实战 290\n16.4　本章小结 294\n第17章　Spring Boot日志 295\n17.1　Logback简介 295\n17.2　配置logback日志 296\n17.3　logback.groovy配置文件 298\n17.3.1　显示系统Log级别 298\n17.3.2　使用logback.groovy配置 299\n17.3.3　配置文件说明 301\n17.4　本章小结 306\n第Ⅲ部分　Spring Boot系统监控、测试与运维\n第18章　Spring Boot应用的监控：Actuator与Admin 308\n18.1　Actuator简介 308\n18.2　启用Actuator 309\n18.3　揭秘端点 311\n18.3.1　常用的Actuator端点 311\n18.3.2　启用和禁用端点 317\n18.4　自定义Actuator端点 318\n18.4.1　Endpoint接口 319\n18.4.2　实现Endpoint接口 320\n18.4.3　继承AbstractEndpoint抽象类 321\n18.4.4　实现健康指标接口HealthIndicator 323\n18.4.5　实现度量指标接口PublicMetrics 324\n18.4.6　统计方法执行数据 328\n18.5　使用Admin 331\n18.5.1　Admin简介 331\n18.5.2　创建Admin Server项目 334\n18.5.3　在客户端使用Admin Server 335\n18.6　本章小结 339\n第19章　Spring Boot应用的测试 340\n19.1　准备工作 340\n19.2　分层测试 340\n19.2.1　dao层测试 341\n19.2.2　service层测试 342\n19.2.3　使用Mockito测试service层代码 342\n19.2.4　controller层测试 344\n19.2.5　JSON接口测试 346\n19.3　本章小结 347\n第20章　Spring Boot应用Docker化 348\n20.1　Spring Boot应用打包 348\n20.2　Spring Boot应用运维 352\n20.2.1　查看JVM参数的值 352\n20.2.2　应用重启 353\n20.3　使用Docker构建部署运行Spring Boot应用 353\n20.3.1　Docker简介 354\n20.3.2　环境搭建 355\n20.4　项目实战 356\n20.4.1　添加Docker构建插件 356\n20.4.2　配置Dockerfile文件创建自定义的镜像 357\n20.4.3　Dockerfile配置说明 358\n20.4.4　构建镜像 362\n20.4.5　运行测试 363\n20.5　本章小结 364","pages":"364","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s29864167.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s29864167.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29864167.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30320873\/","id":"30320873","publisher":"机械工业出版社","isbn10":"7111603338","isbn13":"9787111603337","title":"Spring Boot 开发实战","url":"https:\/\/api.douban.com\/v2\/book\/30320873","alt_title":"","author_intro":"","summary":"本书系统介绍如何使用SpringBoot2.0框架快速开发企业级应用。全书共分三大部分，共20章。第I部分“SpringBoot框架基础”包含第1-3章，介绍SpringBoot框架的特性，并展示了快速建立HelloWorld的WebMVC示例，介绍怎样通过自动配置实现极简化的Spring应用程序开发。第II部分“SpringBoot项目综合实战”包含第4~17章，介绍了大量相关项目案例，并给出了案例代码。如集成JPA数据库层，Gradle插件应用，自定义WebMVC配置，AOP编程，集成SpringSecurity安全开发，集成React.js开发前后端分离项目，任务调度与邮件服务开发，集成WebFlux开发响应式Web应用，SpringBoot缓存，使用Zuul开发APIGateway，SpringBoot日志应用等。第III部分“SpringBoot系统监控、测试与运维”包含第18-20章，详细介绍如何高效部署运维SpringBoot应用，并给出了综合案例。","series":{"id":"12919","title":"华章程序员书库"},"price":""},{"rating":{"max":10,"numRaters":3,"average":"0.0","min":0},"subtitle":"Simplify the development of lightning fast applications based on microservices and reactive programming","author":["Greg L. Turnquist"],"pubdate":"2017-12-6","tags":[{"count":3,"name":"spring","title":"spring"},{"count":2,"name":"计算机","title":"计算机"},{"count":2,"name":"java","title":"java"},{"count":1,"name":"计算机科学","title":"计算机科学"},{"count":1,"name":"Spring","title":"Spring"},{"count":1,"name":"IT","title":"IT"},{"count":1,"name":"DEV","title":"DEV"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29604435.jpg","binding":"Paperback","translator":[],"catalog":"Quick Start with Java\nReactive Web with Spring Boot\nReactive Data Access with Spring Boot\nTesting with Spring Boot\nDeveloper Tools for Spring Boot Apps\nAMQP Messaging with Spring Boot\nMicroservices with Spring Boot\nWebSockets with Spring Boot\nSecuring Your App with Spring Boot\nTaking your app to production with Spring Boot","pages":"460","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s29604435.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s29604435.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29604435.jpg"},"alt":"https:\/\/book.douban.com\/subject\/27194303\/","id":"27194303","publisher":"Packt Publishing - ebooks Account","isbn10":"1786463784","isbn13":"9781786463784","title":"Learning Spring Boot 2.0 - Second Edition","url":"https:\/\/api.douban.com\/v2\/book\/27194303","alt_title":"","author_intro":"Greg L. Turnquist has been a software professional since 1997. In 2002, he joined the senior software team that worked on Harris' $3.5 billion FAA telco program, architecting mission-critical enterprise apps while managing a software team. He provided after-hours support to a nation-wide system and is no stranger to midnight failures and software triages. In 2010, he joined the SpringSource division of VMware, which was spun off into Pivotal in 2013.\nAs a test-bitten script junky, Java geek, and JavaScript Padawan, he is a member of the Spring Data team and the lead for Spring Session MongoDB. He has made key contributions to Spring Boot, Spring HATEOAS, and Spring Data REST while also serving as editor-at-large for Spring's Getting Started Guides.\nGreg wrote technical best sellers Python Testing Cookbook and Learning Spring Boot, First Edition, for Packt. When he isn't slinging code, Greg enters the world of magic and cross swords, having written the speculative fiction action and adventure novel, Darklight.\nHe completed his master's degree in computer engineering at Auburn University and lives in the United States with his family.","summary":"Key Features\nGet up to date with the defining characteristics of Spring Boot 2.0 in Spring Framework 5\nLearn to perform Reactive programming with SpringBoot\nLearn about developer tools, AMQP messaging, WebSockets, security, MongoDB data access, REST, and more\nBook Description\nSpring Boot provides a variety of features that address today's business needs along with today's scalable requirements. In this book, you will learn how to leverage powerful databases and Spring Boot's state-of-the-art WebFlux framework. This practical guide will help you get up and running with all the latest features of Spring Boot, especially the new Reactor-based toolkit.\nThe book starts off by helping you build a simple app, then shows you how to bundle and deploy it to the cloud. From here, we take you through reactive programming, showing you how to interact with controllers and templates and handle data access. Once you're done, you can start writing unit tests, slice tests, embedded container tests, and even autoconfiguration tests.\nWe go into detail about developer tools, AMQP messaging, WebSockets, security, and deployment. You will learn how to secure your application using both routes and method-based rules. By the end of the book, you'll have built a social media platform from which to apply the lessons you have learned to any problem. If you want a good understanding of building scalable applications using the core functionality of Spring Boot, this is the book for you.\nWhat you will learn\nCreate powerful, production-grade applications and services with minimal fuss\nSupport multiple environments with one artifact, and add production-grade support with features\nFind out how to tweak your apps through different properties\nUse custom metrics to track the number of messages published and consumed\nEnhance the security model of your apps\nMake use of reactive programming in Spring Boot\nBuild anything from lightweight unit tests to fully running embedded web container integration tests","price":"USD 44.99"},{"rating":{"max":10,"numRaters":1,"average":"0.0","min":0},"subtitle":"","author":["杨洋"],"pubdate":"2019-7","tags":[{"count":3,"name":"springboot","title":"springboot"},{"count":2,"name":"spring","title":"spring"},{"count":1,"name":"计算机","title":"计算机"},{"count":1,"name":"编程","title":"编程"},{"count":1,"name":"java","title":"java"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s33476646.jpg","binding":"","translator":[],"catalog":"目录\n第1章 Spring Boot概述  1\n1.1 Spring Boot简介  1\n1.2 Spring Boot的特点  2\n1.2.1 快速构建项目  2\n1.2.2 嵌入式Web容器  3\n1.2.3 易于构建任何应用  3\n1.2.4 自动化配置  3\n1.2.5 开发者工具  4\n1.2.6 强大的应用监控  4\n1.2.7 默认提供测试框架  4\n1.2.8 可执行Jar部署  4\n1.2.9 IDE多样性  4\n1.3 为什么要学习Spring Boot  5\n1.3.1 简化工作  5\n1.3.2 微服务时代  5\n1.3.3 社区背景强大  6\n1.3.4 市场需求  6\n1.4 Spring Boot的发展历史  7\n1.4.1 发布里程碑（2013.8.6）  7\n1.4.2 Spring Boot 1.0（2014.4）  7\n1.4.3 Spring Boot 1.1（2014.6）  8\n1.4.4 Spring Boot 1.2（2015.3）  8\n1.4.5 Spring Boot 1.3（2016.12）  8\n1.4.6 Spring Boot 1.4（2017.1）  8\n1.4.7 Spring Boot 1.5（2017.2）  9\n1.4.8 Spring Boot 2.0（2018.3）  9\n1.5 小结  10\n第2章 走进Spring Boot  11\n2.1 环境搭建  11\n2.1.1 JDK安装  11\n2.1.2 IntelliJ IDEA的安装  12\n2.1.3 Maven的安装  12\n2.1.4 IntelliJ IDEA内配置JDK和Maven  15\n2.2 新建Spring Boot项目  16\n2.2.1 开始创建项目  16\n2.2.2 配置JDK版本和Initializr Service URL  17\n2.2.3 配置Project Metadata信息  17\n2.2.4 配置Spring Boot版本及默认引入组件  18\n2.2.5 配置项目名称和项目位置  18\n2.3 项目工程介绍  19\n2.3.1 Java类文件  20\n2.3.2 资源文件  20\n2.3.3 测试类文件  20\n2.3.4 pom文件  21\n2.4 运行项目  22\n2.5 小结  22\n第3章 Spring Boot的Web之旅  23\n3.1 Spring Boot的第一个Web项目  23\n3.1.1 加入Web依赖  23\n3.1.2 创建Controller  23\n3.1.3 测试运行  24\n3.2 WebFlux的使用  25\n3.2.1 添加WebFlux依赖  25\n3.2.2 创建一个处理方法类  26\n3.2.3 创建一个Router类  26\n3.2.4 测试运行  27\n3.3 使用热部署  27\n3.4 配置文件  28\n3.4.1 配置文件类型  28\n3.4.2 自定义属性  28\n3.4.3 使用随机数  29\n3.4.4 多环境配置  31\n3.4.5 自定义配置文件  31\n3.5 使用页面模板  32\n3.5.1 使用Thymeleaf  32\n3.5.2 使用FreeMarker  35\n3.5.3 使用传统JSP  37\n3.6 使用WebJars  39\n3.7 国际化使用  41\n3.8 文件的上传和下载  44\n3.9 小结  48\n第4章 Spring Boot的数据库之旅  49\n4.1 使用数据库  49\n4.1.1 使用MySQL数据库  49\n4.1.2 使用SQL Server数据库  50\n4.1.3 使用Oracle数据库  51\n4.1.4 使用MongoDB数据库  55\n4.1.5 使用Neo4j数据库  56\n4.1.6 使用Redis数据库  57\n4.1.7 使用Memcached数据库  58\n4.2 使用JDBC操作数据库  58\n4.2.1 JDBC依赖配置  59\n4.2.2 配置数据库信息  59\n4.2.3 创建实体类  60\n4.2.4 使用Controller进行测试  60\n4.3 使用JPA操作数据库  68\n4.3.1 JPA介绍  68\n4.3.2 JPA依赖配置  68\n4.3.3 配置文件  69\n4.3.4 创建实体对象  69\n4.3.5 创建数据操作层  71\n4.3.6 简单测试运行  73\n4.3.7 JPA扩展学习  74\n4.3.8 基于WebFlux的使用  75\n4.4 使用MyBatis操作数据库  80\n4.4.1 MyBatis简介  80\n4.4.2 MyBatis依赖配置  80\n4.4.3 配置文件  80\n4.4.4 基于XML的使用  82\n4.4.5 基于注解使用  85\n4.4.6 测试运行  85\n4.4.7 Mybatis-Generator插件学习  87\n4.4.8 PageHelper插件  96\n4.4.9 Mybatis-Plus插件  97\n4.5 配置多数据源  101\n4.5.1 多数据源情况分析  102\n4.5.2 配置多数据源  102\n4.5.3 基于JPA使用多数据源  105\n4.5.4 基于MyBatis使用多数据  106\n4.6 使用Druid数据库连接池  108\n4.6.1 Druid简介  108\n4.6.2 配置Druid  109\n4.6.3 操作数据库  114\n4.6.4 Druid监控页面介绍  115\n4.7 小结  121\n第5章 Spring Boot的缓存之旅  122\n5.1 使用Spring Cache  122\n5.1.1 Spring Cache简介  122\n5.1.2 配置Spring Cache依赖  124\n5.1.3 测试运行  125\n5.1.4 验证缓存  126\n5.2 使用Redis  127\n5.2.1 Redis简介  127\n5.2.2 项目配置  127\n5.2.3 测试运行  129\n5.2.4 使用Redis缓存  130\n5.3 使用Memcached  132\n5.3.1 Memcached简介  132\n5.3.2 配置Memcached依赖  132\n5.3.3 使用Memcached缓存  137\n5.3.4 Redis与Memcached的区别  138\n5.4 小结  138\n第6章 Spring Boot的日志之旅  139\n6.1 Logback日志  139\n6.1.1 Logback简介  139\n6.1.2 日志格式  140\n6.1.3 控制台输出  140\n6.1.4 日志文件输出  141\n6.1.5 日志级别  141\n6.1.6 日志配置  142\n6.1.7 基于XML配置日志  142\n6.2 Log4j日志  145\n6.2.1 Log4j简介  146\n6.2.2 Spring Boot使用Log4j  146\n6.2.3 控制台输出  146\n6.2.4 日志文件输出  147\n6.3 Log4j 2日志  148\n6.3.1 Log4j 2简介  148\n6.3.2 Spring Boot使用Log4j 2  150\n6.3.3 控制台输出  151\n6.3.4 日志文件输出  152\n6.3.5 异步日志  152\n6.4 ELK日志收集  155\n6.4.1 ELK日志收集流程介绍  155\n6.4.2 ELK安装  155\n6.4.3 ELK配置  157\n6.4.4 使用Kibana查看日志  159\n6.4.5 Spring Boot直接输出到Logstash  162\n6.4.6 ELK日志收集优化方案及建议  163\n6.5 小结  164\n第7章 Spring Boot的安全之旅  165\n7.1 使用Shiro安全管理  165\n7.1.1 什么是Shiro  165\n7.1.2 使用Shiro做权限控制  167\n7.2 使用Spring Security  177\n7.2.1 Spring Security简介  177\n7.2.2 使用Spring Security做权限控制  178\n7.3 小结  184\n第8章 Spring Boot的监控之旅  185\n8.1 使用actuator监控  185\n8.1.1 actuator是什么  185\n8.1.2 如何使用actuator  185\n8.1.3 actuator监控介绍  186\n8.1.4 保护HTTP端点  188\n8.1.5 健康信息  190\n8.1.6 自定义应用程序信息  192\n8.1.7 自定义管理端点路径  192\n8.2 使用Admin监控  193\n8.2.1 什么是Spring Boot Admin  193\n8.2.2 设置Spring Boot Admin Server  193\n8.2.3 Spring Cloud Eureka  194\n8.2.4 Spring Boot Admin Client的使用  197\n8.2.5 安全验证  202\n8.2.6 JMX-bean管理  203\n8.2.7 通知  203\n8.3 Prometheus Grafana监控  207\n8.3.1 Prometheus的安装  207\n8.3.2 Grafana的安装  208\n8.3.3 Spring Boot项目使用Prometheus  208\n8.3.4 Prometheus配置  210\n8.3.5 启动Grafana  211\n8.4 小结  213\n第9章 Spring Boot的消息之旅  214\n9.1 RabbitMQ消息队列  214\n9.1.1 RabbitMQ介绍  214\n9.1.2 RabbitMQ的几种角色  215\n9.1.3 RabbitMQ的几种模式  216\n9.1.4 Spring Boot使用RabbitMQ  218\n9.2 Kafka消息队列  226\n9.2.1 Kafka介绍  226\n9.2.2 Spring Boot使用Kafka  228\n9.3 RocketMQ消息队列  230\n9.3.1 RocketMQ介绍  230\n9.3.2 Spring Boot使用RocketMQ  231\n9.4 消息队列对比  236\n9.5 小结  238\n第10章 Spring Boot的搜索之旅  239\n10.1 使用Solr  239\n10.1.1 Solr简介  239\n10.1.2 Spring Boot使用Solr  240\n10.2 使用Elasticsearch  246\n10.2.1 Elasticsearch简介  246\n10.2.2 Spring Boot使用Elasticsearch  246\n10.2.3 使用Elasticsearch Repository进行操作  247\n10.2.4 使用Elasticsearch Template进行操作  248\n10.2.5 非聚合查询  249\n10.2.6 聚合查询  251\n10.2.7 复杂查询练习  252\n10.3 搜索引擎对比  256\n10.3.1 技术背景  256\n10.3.2 热度比较  258\n10.3.3 集群部署  259\n10.3.4 数据格式  259\n10.3.5 效率  259\n10.4 小结  259\n第11章 Spring Boot的小彩蛋  260\n11.1 修改启动Banner  260\n11.1.1 启动Banner介绍  260\n11.1.2 启动Banner修改  263\n11.2 使用LomBok让编程更简单  264\n11.2.1 什么是LomBok  264\n11.2.2 IntelliJ IDEA安装Lombok插件  264\n11.2.3 如何使用LomBok  265\n11.3 邮件发送  266\n11.3.1 在Spring Boot中使用邮件发送  266\n11.3.2 基础配置信息  267\n11.3.3 文本邮件发送  268\n11.3.4 网页邮件发送  269\n11.3.5 附件邮件发送  270\n11.3.6 嵌入静态资源邮件发送  271\n11.4 三“器”的使用  272\n11.4.1 过滤器  272\n11.4.2 拦截器  274\n11.4.3 监听器  275\n11.4.4 Spring Boot引用三“器”  276\n11.4.5 测试  277\n11.5 事务使用  278\n11.5.1 事务介绍  278\n11.5.2 在项目中使用事务  279\n11.5.3 Spring事务拓展介绍  280\n11.6 统一处理异常  282\n11.6.1 异常介绍  282\n11.6.2 Java异常分类  282\n11.6.3 Spring Boot中统一处理异常  284\n11.7 使用AOP  284\n11.7.1 AOP介绍  285\n11.7.2 Spring Boot使用AOP  285\n11.8 使用validator后台校验  288\n11.9 使用Swagger构建接口文档  291\n11.9.1 什么是Swagger  291\n11.9.2 Swagger 2注解介绍  291\n11.9.3 Spring Boot使用Swagger  293\n11.10 使用ApiDoc构建接口文档  298\n11.10.1 如何使用ApiDoc接口文档  298\n11.10.2 ApiDoc常用注解  298\n11.10.3 Spring Boot使用ApiDoc  299\n11.11 小结  302\n第12章 Spring Boot打包部署  303\n12.1 使用IDE启动  303\n12.1.1 运行Spring Boot应用程序  303\n12.1.2 IntelliJ IDEA启动多实例  304\n12.2 使用Maven启动  305\n12.3 JAR形式启动  305\n12.3.1 使用命令将Spring Boot应用程序打成JAR  305\n12.3.2 IntelliJ IDEA打JAR包  306\n12.4 War形式启动  307\n12.4.1 创建项目  307\n12.4.2 打War包部署到Tomcat  308\n12.5 使用Docker构建Spring Boot项目  308\n12.5.1 Docker简介  309\n12.5.2 安装Docker  309\n12.5.3 Dockerfile  309\n12.5.4 运行Docker镜像  310\n12.6 使用Jenkins自动化部署SpringBoot应用  311\n12.6.1 Jenkins简介  311\n12.6.2 Spring Boot应用使用Jenkins  311\n12.7 小结  317\n第13章 Spring Boot实战之博客系统  318\n13.1 博客的制作思路  318\n13.1.1 博客布局介绍  318\n13.1.2 博客功能介绍  319\n13.2 博客模板制作  320\n13.3 效果展示  325\n13.4 依赖配置  328\n13.5 配置文件  329\n13.6 后台实体  330\n13.6.1 文章表  330\n13.6.2 标签表  332\n13.6.3 链接表  333\n13.6.4 消息表  333\n13.6.5 博客访问记录表  334\n13.6.6 博客配置表  335\n13.7 主功能  336\n13.7.1 博客页  336\n13.7.2 搜索页  339\n13.7.3 文章详情页  341\n13.7.4 联系页  343\n13.8 辅助功能  344\n13.8.1 拦截器  344\n13.8.2 定时器  345\n13.8.3 初始化  346\n13.9 小结  347\n第14章 Spring Boot实战之博客后台系统  350\n14.1 博客后台的制作思路  350\n14.1.1 博客后台布局介绍  350\n14.1.2 博客功能介绍  351\n14.2 博客后台模板制作  352\n14.3 效果展示  352\n14.4 依赖配置  356\n14.5 配置文件  358\n14.6 后台实体  359\n14.6.1 用户表  359\n14.6.2 角色表  360\n14.7 主功能  361\n14.7.1 首页  362\n14.7.2 文章管理  363\n14.8 辅助功能  368\n14.8.1 拦截器  368\n14.8.2 定时器  369\n14.8.3 认证和授权  370\n14.8.4 工具类  373\n14.8.5 初始化方法  373\n14.9 小结  374\n参考文献  375","ebook_url":"https:\/\/read.douban.com\/ebook\/127446826\/","pages":"","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s33476646.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s33476646.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s33476646.jpg"},"alt":"https:\/\/book.douban.com\/subject\/34723954\/","id":"34723954","publisher":"清华大学出版社","isbn10":"7302531625","isbn13":"9787302531623","title":"Spring Boot 2实战之旅","url":"https:\/\/api.douban.com\/v2\/book\/34723954","alt_title":"","author_intro":"杨洋，网名：大老杨，高级Java工程师，热衷于各种主流技术，长期钻研微服务，对Spring Boot和Spring Cloud有深入的研究，并且具备丰富的实战经验。目前在北京一家金融公司担任技术负责人，负责公司主要产品的开发和维护，长期活跃于各大技术论坛、博客，分享新技术与开发经验。","summary":"Spring Boot框架是目前微服务框架的最佳选择之一。本书采用Spring Boot 2.0.3版本讲解，从零起步系统深入地剖析了Spring Boot的核心技术。从功能点出发，每一章都是不同的Spring Boot应用之旅。全书分为14章，第1章和第2章是学习Spr ing Boot的入门阶段，从Spring Boot简介到开发环境部署等，让读者对Spring Boot有一个初步的认识；第3章到第10章是Spring Boot的融合阶段，介绍了Spring Boot搭建Web项目、操作数据库、使用缓存、日志、整合安全框架、结合消息队列和搜索框架，这些都是日常开发中一定会用到的内容，经过这个阶段的学习，会让读者熟练地运用Spring Boot进行敏捷开发。第11章和第12章是Spring Boot的拓展阶段，主要介绍了Spring Boot的一些常用的功能和如何在实际应用中的部署。第13章和第14章是Spring Boot的实战阶段，经过这两章的学习，使读者对Spring Boot的运用更加熟练，掌握实际项目的开发技能。\n本书的特点是示例代码丰富，实用性和系统性较强，读者可以直接还原书中的示例。本书适用于初学者、Java开发人员、Spring爱好者和架构师。","ebook_price":"55.30","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":[],"pubdate":"","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","large":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","medium":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif"},"alt":"https:\/\/book.douban.com\/subject\/34448287\/","id":"34448287","publisher":"","isbn10":"7115004730","isbn13":"9787115004734","title":"Spring开发三剑客：Spring实战 第4版+Spring微服务实战+Spring Boot（套装共3册）","url":"https:\/\/api.douban.com\/v2\/book\/34448287","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Dinesh Rajput"],"pubdate":"2019-6","tags":[],"origin_title":"Mastering Spring Boot 2.0","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s33311757.jpg","binding":"","translator":[],"catalog":"目    录\n第1章  Spring Boot 2.0 1\n1.1  Spring Boot概述 2\n1.2  利用Spring Boot简化应用程序开发 3\n1.3  Spring Boot中的核心组件 5\n1.3.1  Spring Boot Starter 5\n1.3.2  Spring Boot Starter Parent POM 7\n1.3.3  Spring Boot auto-configuration 7\n1.3.4  启用Spring Boot auto-configuration 9\n1.3.5  Spring Boot CLI 11\n1.3.6  Spring Boot Actuator 11\n1.4  设置Spring Boot工作区 12\n1.4.1  利用Maven设置Spring Boot 13\n1.4.2  利用Gradle设置Spring Boot 13\n1.5  开发第一个Spring Boot应用程序 15\n1.5.1  使用Web界面 15\n1.5.2  利用STS IDE创建Spring Boot项目 17\n1.6  实现REST服务 19\n1.7  Spring Boot 2.0中的新特性 22\n1.8  本章小结 22\n第2章  定制auto-configuration 25\n2.1  理解auto-configuration 26\n2.2  定制Spring Boot 27\n2.2.1  利用Spring Boot属性进行定制 27\n2.2.2  替换已生成的Bean 29\n2.2.3  禁用特定的auto-configuration类 29\n2.2.4  修改库的依赖关系 30\n2.3  基于属性的配置外部化 31\n2.3.1  属性的评估顺序 31\n2.3.2  重命名Spring应用程序中的application.properties 32\n2.4  外部配置应用程序属性 33\n2.5  基于日志记录的调优 35\n2.6  YAML配置文件 36\n2.6.1  针对属性的YAML 36\n2.6.2  单一YAML文件中的多个属性 37\n2.7  定制应用程序错误页面 37\n2.8  本章小结 39\n第3章  Spring CLI和Actuator 41\n3.1  使用Spring Boot CLI 41\n3.1.1  安装Spring Boot CLI 42\n3.1.2  从安装文件中手动安装Spring Boot CLI 42\n3.1.3  使用SDKMAN!安装Spring Boot CLI 43\n3.1.4  利用OSX Homebrew安装Spring Boot CLI 43\n3.2  使用Initializr 44\n3.3  Spring Boot Actuator 48\n3.3.1  在应用程序中启用Spring Boot Actuator 49\n3.3.2  分析Actuator的端点 49\n3.3.3  显示配置细节 51\n3.3.4  显示指标端点 56\n3.3.5  显示应用程序信息 57\n3.3.6  关闭应用程序 59\n3.3.7  自定义Actuator端点 59\n3.3.8  创建一个自定义端点 64\n3.4  Actuator端点的安全性 66\n3.5  Spring Boot 2.x中的Actuator 67\n3.6  本章小结 68\n第4章  Spring Cloud和配置操作 69\n4.1  原生云应用程序架构 69\n4.1.1  微服务架构 71\n4.1.2  微服务的优点 72\n4.1.3  微服务面临的挑战 73\n4.2  Spring Cloud简介 74\n4.2.1  云和微服务程序的构造块 74\n4.2.2  Spring Cloud应用 76\n4.3  配置Spring Cloud应用程序 77\n4.4  创建配置生成器—Spring Cloud Config Server 78\n4.5  实现Cloud Config Server 79\n4.5.1  配置application.properties文件 80\n4.5.2  创建Git存储库作为配置存储 80\n4.6  利用模式配置多个存储库 83\n4.6.1  身份验证 84\n4.6.2  force-pull属性 85\n4.7  创建Spring Cloud客户端 85\n4.8  本章小结 87\n第5章  Spring Cloud Netflix和Service Discovery 89\n5.1  Spring Cloud Netflix简介 89\n5.2  微服务架构中的Service Discovery 90\n5.3  实现Service Discovery—Eureka Server 92\n5.3.1  Maven构建配置文件 92\n5.3.2  Gradle构建配置文件 93\n5.3.3  启用Eureka服务器作为Discovery Service服务器 94\n5.4  实现Service Discovery—Eureka客户端 96\n5.4.1  添加Maven依赖关系配置 96\n5.4.2  Gradle构建配置 98\n5.5  利用Eureka注册客户端 99\n5.5.1  使用REST服务 102\n5.5.2  使用EurekaClient 102\n5.5.3  Feign Client 107\n5.6  本章小结 111\n第6章  构建Spring Boot RESTful微服务 113\n6.1  基于Spring Boot的微服务 113\n6.1.1  bootstrap.yml和application.yml简介 114\n6.1.2  简单的微服务示例 115\n6.2  Spring Data简介 128\n6.2.1  Apache Ignite存储库 129\n6.2.2  Spring Data MongoDB 129\n6.2.3  Spring Data JPA 130\n6.3  本章小结 130\n第7章  利用Netflix Zuul创建API网关 133\n7.1  API网关模式需求 133\n7.1.1  API Gateway模式的优点 135\n7.1.2  API Gateway的一些缺点 135\n7.1.3  API Gateway模式组件 135\n7.2  利用Netflix Zuul Proxy实现API Gateway 136\n7.2.1  利用Maven依赖关系包含Zuul 137\n7.2.2  启用Zuul服务代理 137\n7.2.3  配置Zuul属性 138\n7.2.4  添加过滤器 141\n7.3  本章小结 144\n第8章  利用Feign客户端简化HTTP API 145\n8.1  Feign基础知识 145\n8.2  在云应用程序中包含Feign 148\n8.2.1  重载Feign的默认配置 153\n8.2.2  创建Feign客户端 155\n8.2.3  Feign继承机制 156\n8.2.4  多重继承 156\n8.3  Feign客户端的高级应用 157\n8.4  异常处理 158\n8.5  自定义编码器和解码器 159\n8.5.1  自定义编码器 160\n8.5.2  自定义解码器 161\n8.6  Feign和Hystrix 161\n8.7  Feign客户端单元测试 163\n8.8  本章小结 164\n第9章  构建事件驱动和异步响应式系统 165\n9.1  事件驱动型架构模式 165\n9.1.1  调停者拓扑 165\n9.1.2  代理拓扑 166\n9.2  响应式编程简介 167\n9.2.1  Spring Reactive 167\n9.2.2  ReactiveX 168\n9.3  命令查询的责任分离简介 168\n9.3.1  Event Sourcing模式简介 170\n9.3.2  最终一致性 171\n9.4  构建事件驱动型响应式异步系统 172\n9.5  Spring Cloud Streaming简介 173\n9.5.1  向应用程序中添加Kafka 174\n9.5.2  安装和运行Kafka 175\n9.5.3  Kafka配置属性 175\n9.5.4  用于写入Kafka的服务 176\n9.5.5  Rest API控制器 177\n9.5.6  监听Kafka主题 177\n9.6  本章小结 181\n第10章  利用Hystrix和Turbine构建弹性系统 183\n10.1  断路器模式 184\n10.2  使用Hystrix library 186\n10.3  在应用程序中配置Hystrix 187\n10.3.1  Maven依赖关系 188\n10.3.2  启用断路器 188\n10.3.3  向服务中添加Hystrix注解 189\n10.3.4  错误传递 192\n10.4  在客户服务中实现REST控制器 192\n10.5  构建和测试客户服务 195\n10.6  自定义默认的配置项 196\n10.7  Hystrix Metrics Stream 198\n10.8  在项目中实现Hystrix Dashboard 199\n10.9  Turbine仪表盘 201\n10.10  基于Hystrix和Feign的REST使用者 204\n10.11  本章小结 206\n第11章  测试Spring Boot应用程序 207\n11.1  测试驱动开发 207\n11.2  单元测试机制 208\n11.2.1  单元测试的优点 211\n11.2.2  单元测试的缺点 212\n11.2.3  其他模拟库 212\n11.3  集成测试 212\n11.3.1  Spring测试的优点 214\n11.3.2  激活测试类的配置 214\n11.4  Spring Boot应用程序的JUnit测试 214\n11.5  使用Mockito模拟服务 216\n11.6  测试RESTful服务契约的Postman 217\n11.7  本章小结 220\n第12章  微服务的容器化 221\n12.1  微服务架构的容器 222\n12.1.1  虚拟机和容器 222\n12.1.2  容器方案的优点 224\n12.1.3  面向容器方案的缺点 224\n12.2  Docker简介 225\n12.2.1  安装Docker 226\n12.2.2  在Linux上安装Docker 226\n12.2.3  在Windows中安装Docker 227\n12.2.4  Docker架构 229\n12.2.5  Docker引擎 231\n12.2.6  Docker容器 232\n12.2.7  编写Dockerfile 233\n12.3  Docker化Spring Boot应用程序 235\n12.4  利用Maven创建Docker镜像 239\n12.5  Docker Compose简介 240\n12.5.1  安装Docker Compose 241\n12.5.2  使用Docker Compose 242\n12.5.3  编写docker-compose文件 242\n12.5.4  基于docker-compose文件的编排操作 244\n12.5.5  利用docker-compose和负载平衡扩展容器 247\n12.6  Kubernetes简介 248\n12.7  本章小结 249\n第13章  API管理器 251\n13.1  API管理 251\n13.1.1  API管理软件的优点 252\n13.1.2  API管理工具 252\n13.2  速率限制 252\n13.3  KONG简介 253\n13.3.1  基于KONG架构的微服务REST API 254\n13.3.2  未采用KONG架构的API应用 255\n13.3.3  安装KONG 255\n13.3.4  使用KONG API 257\n13.4  Swagger 265\n13.4.1  Swagger应用 265\n13.4.2  在微服务中使用Swagger 266\n13.4.3  Swagger的优点 277\n13.5  本章小结 278\n第14章  云部署（AWS） 279\n14.1  AWS EC2实例 279\n14.2  AWS上的微服务架构 284\n14.3  在AWS EC2上安装Docker 289\n14.4  在AWS EC2上运行微服务 291\n14.5  本章小结 293\n第15章  生产服务监视和最佳实践 295\n15.1  监视容器 295\n15.2  日志机制所面临的挑战 295\n15.3  微服务架构的中心日志方案 297\n15.3.1  基于ELK栈的日志聚合 299\n15.3.2  使用Sleuth的请求跟踪 306\n15.3.3  基于Zipkin的请求跟踪 310\n15.4  本章小结 315","pages":"","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s33311757.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s33311757.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s33311757.jpg"},"alt":"https:\/\/book.douban.com\/subject\/34449509\/","id":"34449509","publisher":"清华大学出版社","isbn10":"7302530246","isbn13":"9787302530244","title":"精通Spring","url":"https:\/\/api.douban.com\/v2\/book\/34449509","alt_title":"Mastering Spring Boot 2.0","author_intro":"","summary":"本书详细阐述了与Spring Boot 2.0相关的基本解决方案，主要包括定制auto-configuration、Spring CLI和Actuator、Spring Cloud和配置操作、Spring Cloud Netflix和Service Discovery、构建Spring Boot RESTful微服务、利用Netflix Zuul 创建API网关、利用Feign客户端简化HTTP API、构建事件驱动和异步响应式系统、利用Hystrix和Turbine构建弹性系统、测试Spring Boot应用程序、微服务的容器化、API管理器、云部署（AWS）、生产服务监视和*实践等内容。此外，本书还提供了相应的示例、代码，以帮助读者进一步理解相关方案的实现过程。 本书适合作为高等院校计算机及相关专业的教材和教学参考书，也可作为相关开发人员的自学教材和参考手册。","price":""},{"rating":{"max":10,"numRaters":23,"average":"6.0","min":0},"subtitle":"","author":["柳伟卫"],"pubdate":"2018-3","tags":[{"count":25,"name":"spring-boot","title":"spring-boot"},{"count":10,"name":"SpringBoot","title":"SpringBoot"},{"count":9,"name":"微服务","title":"微服务"},{"count":8,"name":"spring","title":"spring"},{"count":8,"name":"Java","title":"Java"},{"count":7,"name":"spring_boot","title":"spring_boot"},{"count":6,"name":"计算机","title":"计算机"},{"count":4,"name":"Spring","title":"Spring"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29738006.jpg","binding":"平装","translator":[],"catalog":"第1 章 Spring Boot 概述................................................................1\n1.1 传统企业级应用开发之痛与革新 .................................................................................... 2\n1.2 Spring Boot 2 总览 ........................................................................................................ 11\n1.3 快速开启第一个 Spring Boot 项目 ................................................................................. 16\n1.4 如何进行 Spring Boot 项目的开发及测试 ...................................................................... 24\n第2 章 Spring 框架核心概念..........................................................32\n2.1 Spring 框架总览 ............................................................................................................ 33\n2.2 依赖注入与控制反转 .................................................................................................... 37\n2.3 AOP 编程 ...................................................................................................................... 46\n第3 章 Spring MVC 及常用 MediaType.........................................52\n3.1 Spring MVC 简介 .......................................................................................................... 53\n3.2 JSON 类型的处理 ......................................................................................................... 56\n3.3 XML 类型的处理 ........................................................................................................... 61\n3.4 文件上传的处理 ............................................................................................................ 63\n第4 章 集成 Thymeleaf................................................................67\n4.1 常用 Java 模板引擎 ...................................................................................................... 68\n4.2 Thymeleaf 标准方言 ...................................................................................................... 74\n4.3 Thymeleaf 设置属性值 ................................................................................................... 84\n4.4 Thymeleaf 迭代器与条件语句 ........................................................................................ 88\n4.5 Thymeleaf 模板片段 ...................................................................................................... 92\n4.6 Thymeleaf 表达式基本对象 ........................................................................................... 95\n4.7 Thymeleaf 与 Spring Boot 集成 ...................................................................................... 97\n4.8 Thymeleaf 实战 ............................................................................................................. 98\n第5 章 数据持久化...................................................................... 107\n5.1 JPA 概述 ..................................................................................................................... 108\n5.2 Spring Data JPA .......................................................................................................... 127\n5.3 Spring Data JPA 与 Hibernate、Spring Boot 集成 ......................................................... 143\n5.4 数据持久化实战 .......................................................................................................... 147\n第6 章 全文搜索......................................................................... 156\n6.1 全文搜索概述 ............................................................................................................. 157\n6.2 Elasticsearch 核心概念 ................................................................................................ 159\n6.3 Elasticsearch 与 Spring Boot 集成 ................................................................................ 164\n6.4 Elasticsearch 实战 ....................................................................................................... 168\n第7 章 架构设计与分层................................................................ 175\n7.1 为什么需要分层 .......................................................................................................... 176\n7.2 系统的架构设计及职责划分 ........................................................................................ 179\n第8 章 集成 Bootstrap............................................................... 182\n8.1 Bootstrap 简介 ............................................................................................................ 183\n8.2 Bootstrap 核心概念 ..................................................................................................... 185\n8.3 Bootstrap 及常用前端框架与 Spring Boot 集成 ............................................................ 189\n8.4 Bootstrap 实战 ............................................................................................................ 192\n第９章 博客系统的需求分析与设计.................................................. 196\n9.1 博客系统的需求分析 .................................................................................................. 197\n9.2 博客系统的原型设计 .................................................................................................. 201\n第10 章 集成 Spring Security..................................................... 206\n10.1 基于角色的权限管理 ................................................................................................ 207\n10.2 Spring Security 概述 .................................................................................................. 210\n10.3 Spring Security 与 Spring Boot 集成 ........................................................................... 218\n10.4 Spring Security 实战 .................................................................................................. 219\n第11 章 博客系统的整体框架实现................................................... 227\n11.1 如何设计 API............................................................................................................. 228\n11.2 实现后台整体控制层 ................................................................................................ 233\n11.3 实现前台整体布局 .................................................................................................... 237\n第12 章 用户管理实现................................................................. 242\n12.1 用户管理的需求回顾 ................................................................................................ 243\n12.2 用户管理的后台实现 ................................................................................................ 245\n12.3 用户管理的前台实现 ................................................................................................ 254\n第13 章 角色管理实现................................................................. 264\n13.1 角色管理的需求回顾 ................................................................................................ 265\n13.2 角色管理的后台实现 ................................................................................................ 266\n13.3 角色管理的前台实现 ................................................................................................ 272\n第14 章 权限管理实现................................................................. 276\n14.1 权限管理的需求回顾 ................................................................................................ 277\n14.2 权限管理的后台实现 ................................................................................................ 278\n14.3 CSRF 防护处理 ........................................................................................................ 281\n14.4 权限管理的前台实现 ................................................................................................ 282\n第15 章 文件服务器实现.............................................................. 285\n15.1 文件服务器的需求分析 ............................................................................................. 286\n15.2 MongoDB 简介 ......................................................................................................... 286\n15.3 MongoDB 与 Spring Boot 集成 .................................................................................. 291\n15.4 文件服务器的实现 .................................................................................................... 293\n第16 章 博客管理实现................................................................. 303\n16.1 博客管理的需求回顾 ................................................................................................ 304\n16.2 实现个人设置和头像变更 ......................................................................................... 306\n16.3 博客管理的后台实现 ................................................................................................ 316\n16.4 博客管理的前台实现 ................................................................................................ 325\n第17 章 评论管理实现................................................................. 337\n17.1 评论管理的需求回顾 ................................................................................................ 338\n17.2 评论管理的后台实现 ................................................................................................ 338\n17.3 评论管理的前台实现 ................................................................................................ 346\n第18 章 点赞管理实现................................................................. 350\n18.1 点赞管理的需求回顾 ................................................................................................ 351\n18.2 点赞管理的后台实现 ................................................................................................ 351\n18.3 点赞管理的前台实现 ................................................................................................ 358\n第19 章 分类管理实现................................................................. 362\n19.1 分类管理的需求回顾 ................................................................................................ 363\n19.2 分类管理的后台实现 ................................................................................................ 364\n19.3 分类管理的前台实现 ................................................................................................ 372\n第20 章 标签管理实现................................................................. 380\n20.1 标签管理的需求回顾 ................................................................................................ 381\n20.2 标签管理的后台实现 ................................................................................................ 381\n20.3 标签管理的前台实现 ................................................................................................ 383\n第21 章 首页搜索实现................................................................. 385\n21.1 首页搜索的需求回顾 ................................................................................................ 386\n21.2 首页搜索的后台实现 ................................................................................................ 387\n21.3 首页搜索的前台实现 ................................................................................................ 399\n21.4 使用中文分词 ........................................................................................................... 405\n第22 章 总结与展望.................................................................... 408\n22.1 Spring Boot 企业级应用开发的总结 .......................................................................... 409\n22.2 博客系统的展望 ........................................................................................................ 412\n附录A　开发环境的搭建............................................................................................................. 414\n附录B　Thymeleaf 属性 .............................................................................................................. 418\n附录C　Thymeleaf 表达式工具对象 ............................................................................................ 420\n附录D　Bean Validation 内置约束 ............................................................................................... 438\n附录E　本书所涉及的技术及相关版本 ....................................................................................... 440\n参考文献 ..................................................................................................................................... 442","pages":"442","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s29738006.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s29738006.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29738006.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30192752\/","id":"30192752","publisher":"北京大学出版社","isbn10":"7301292309","isbn13":"9787301292303","title":"Spring Boot 企业级应用开发实战","url":"https:\/\/api.douban.com\/v2\/book\/30192752","alt_title":"","author_intro":"柳伟卫（waylau.com 站长），关注编程、系统架构、性能优化。\n在大型IT公司担任过项目经理、架构师、高级开发顾问等职位，具有多年软件开发管理及系统架构经验。\n负责过多个省级、国家级大型分布式系统的设计与研发，参与了多个大型项目的微服务架构的技术改造，在实际工作中积累了大量的微服务架构经验。\n是CSDN、开源中国、云栖社区等技术社区专家。已出版专著《分布式系统常用技术及案例分析》、《Spring Boot 企业级应用开发实战》。\n对技术抱有极大的热情，坚持每天学习，喜欢开源，乐于分享。已经为开源社区撰写了超过一打的开源技术书籍（https:\/\/waylau.com\/books\/）。","summary":"内容简介：\n本书围绕如何整合以目前最新的 Spring Boot 2 版本为核心的技术栈，来实现一个完整的企业级博客系统而展开。读者可以通过学习构建这个博客系统的整个过程，来达到设计和实现一个企业级 Java EE 应用开发的目的。该博客系统是一个类似于 WordPress 的专注于博客功能的博客平台，支持多用户访问和使用。该博客系统所涉及的相关技术有 Spring Boot、Spring、Spring MVC、Spring Security 、Spring Data、Hibernate、Gradle、Bootstrap、jQuery、HTML5、JavaScript、CSS、Thymeleaf、MySQL、H2、Elasticsearch、MongoDB 等，技术点较为丰富，内容富有前瞻性。\n本书面向实战，除了给出基本的原理外，会辅以大量的案例和源码，利于读者理论联系实践。全书对于技术讲解的安排，是按照渐进式的教学方式来进行的。按照学习的难度，大致可以分为实战入门阶段、实战进阶阶段、实战高级阶段三个部分，内容包括Spring Boot 概述、Spring 框架核心概念、Spring MVC 及常用MediaType、集成 Thymeleaf、数据持久化、全文搜索、架构设计与分层、集成Bootstrap、博客系统的需求分析与设计、集成Spring Security、博客系统的整体框架实现、用户管理实现、角色管理实现、权限管理实现、文件服务器实现、博客管理实现、评论管理实现、点赞管理实现、分类管理实现、标签管理实现、首页搜索实现等。\n本书主要面向的用户是 Java 开发者，以及对 Spring Boot 及企业级开发感兴趣并有一定了解的读者。\n写作背景：\n对于 Spring Boot 知识的整理归纳，最早是在笔者的第一本书《分布式系统常用技术及案例分析》 的微服务章节中，作为微服务的技术实现方式来展开的。由于篇幅限制，当时讲解的案例深度和广度也 比较有限。其后，笔者又在 GitHub 上，以开源方式撰写了《Spring Boot 教程》系列课程 ，为网友们提 供了更加丰富的使用案例。在 2017 年年初，笔者应邀给慕课网做了一个关于 Spring Boot 实战的系列视频课程 。视频课程上线后受到了广大的 Spring Boot 技术爱好者的关注，课程的内容也引发了热烈的反响。很多该课程的学员，通过学习该课程，不但技术能力提高了，而且在如何采用新技术来实现企业级应用上有了更深刻的理解，最重要的是提升了自己在市场上的价值。\n鉴于 Spring Boot 技术人才在社会上的需求依然很旺盛，而市面上有关 Spring Boot 学习资料，大多 停留在“Hello World”级别的案例，缺乏使用 Spring Boot 来构建完整企业级应用实战的能力。故笔者将以往系列课程中的技术做了总结和归纳，采用目前最新的 Spring Boot 2 技术来重新编写了整个教学案例，整理成书，希望能够弥补 Spring Boot 在实战方面的空白，使广大 Spring Boot 爱好者都能受益。","price":"98"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"Get to know the building blocks of Kotlin and best practices when using quality world-class applications","author":["Ashish Belagali","Hardik Trivedi","Akshay Chordiya"],"pubdate":"2017-12-8","tags":[],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29701104.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"227","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s29701104.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s29701104.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29701104.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30153862\/","id":"30153862","publisher":"Packt Publishing","isbn10":"1788390806","isbn13":"9781788390804","title":"Kotlin Blueprints: A practical guide to building industry-grade web, mobile, and desktop applications in Kotlin using frameworks such as Spring Boot and Node.js","url":"https:\/\/api.douban.com\/v2\/book\/30153862","alt_title":"","author_intro":"About the Author\nAshish Belagali is an IIT Bombay alumnus with 24 years of experience in software technology, management, consulting, and client handling. He has successfully executed offshore engagements in both onsite and offshore roles. He is known as a turnaround specialist, having turned many IT projects from red to green in a short time.In spite of the senior positions he has handled, Ashish loves coding and has managed to stay hands-on with it. He often speaks about technology, entrepreneurship, and work effectiveness. He is a Kotlin enthusiast and has worked on several Kotlin projects. He is also the founder of the Kotlin Pune User Group.Hardik Trivedi is a self-taught computer program writer. He has extensively worked on Android and Java since 2010 and has also immersed himself in Kotlin and JavaScript. When he is not working on client projects, he loves contributing back to the development community by spending time on stack overflow and writing tech blogs.Hardik also mentors college students, professionals, and companies who have a keen interest in mobile app development. He is also an active community speaker. Someday in the future, you may find him owning a restaurant and serving exquisite cuisines to his customers.Akshay Chordiya is the co-founder of BitFurther, an Android Developer by heart, and a Kotlin enthusiast. He has been working with Android for over 4 years. He is an active community speaker who is mostly found talking about Android and Kotlin.Akshay is an avid blogger and instructor. He has a love for anything with the word \"\"technology\"\" in it! The vision of bringing about a change in the world through his knowledge is what makes him get out of bed every day and work on his apps and his start-up. \"\"Doing what you love\"\" can be said to sum up his life until now and in the exciting years to come ahead!\nRead more","summary":"Key Features\nLearn to build exciting and scalable Android and web applications (both the server-side and client-side parts) with your Kotlin skillsDive into the great ecosystem of Kotlin frameworks and libraries through projects that you’ll build using this bookThis project-based guide contains clear instructions to help you extend your applications across a wide domain\nBook Description\nKotlin is a powerful language that has applications in a wide variety of fields. It is a concise, safe, interoperable, and tool-friendly language. The Android team has also announced first-class support for Kotlin, which is an added boost to the language. Kotlin’s growth is fueled through carefully designed business and technology benefits.\nThe collection of projects demonstrates the versatility of the language and enables you to build standalone applications on your own. You’ll build comprehensive applications using the various features of Kotlin. Scale, performance, and high availability lie at the heart of the projects, and the lessons learned throughout this book.\nYou’ll learn how to build a social media aggregator app that will help you efficiently track various feeds, develop a geospatial webservice with Kotlin and Spring Boot, build responsive web applications with Kotlin, build a REST API for a news feed reader, and build a server-side chat application with Kotlin.\nIt also covers the various libraries and frameworks used in the projects. Through the course of building applications, you’ll not only get to grips with the various features of Kotlin, but you’ll also discover how to design and prototype professional-grade applications.\nWhat you will learn\nSee how Kotlin's power and versatility make it a great choice to create applications across various platforms, and how it delivers business and technology benefitsWrite a robust web applications using Kotlin with Spring BootWrite Android applications with ease using KotlinWrite rich desktop applications in KotlinLearn how Kotlin can generate Javascript and how this can be used on client side and server side developmentUnderstand how native applications can be written with Kotlin\/NativeLearn the practical aspects of programming in each of the applications\nWho This Book Is For\nThis practical guide is for programmers who are already familiar with Kotlin. If you are familiar with Kotlin and want to put your knowledge to work, then this is the book for you. Kotlin programming knowledge is a must.\nTable of Contents\nThe Power of KotlinGeospatial MessengerSocial Media Aggregator Android AppWeather App Using Kotlin for JavaScriptChat Application with Server-side JavaScript GenerationNews Feed - REST APICSV Reader in Kotlin NativeDictionary Desktop Application - Tornado FX","price":"USD 41.04"},{"rating":{"max":10,"numRaters":10,"average":"6.2","min":0},"subtitle":"","author":["疯狂软件"],"pubdate":"2018-6","tags":[{"count":4,"name":"spring","title":"spring"},{"count":3,"name":"SpringBoot","title":"SpringBoot"},{"count":2,"name":"Spring","title":"Spring"},{"count":1,"name":"编程","title":"编程"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29785016.jpg","binding":"","translator":[],"catalog":"第1章  Spring Boot入门  1\n1.1  Spring简介  2\n1.1.1  Spring概述  2\n1.1.2  Spring的生态圈  3\n1.1.3  Spring 5的变化  4\n1.1.4  Spring的配置简化  4\n1.2  Spring Boot简介  4\n1.2.1  Spring Boot概述  4\n1.2.2  Spring Boot解决的问题  5\n1.2.3  Spring Boot的主要特性  5\n1.2.4  Spring Boot 2.0的重要改变  5\n1.3  “开箱即用”的依赖模块  5\n1.3.1  日志依赖模块spring-boot-starter-logging  6\n1.3.2  Web开发依赖模块spring-boot-starter-web  7\n1.4  开发第一个Spring Boot应用  8\n1.4.1  下载和安装Maven  8\n1.4.2  Eclipse集成Maven  9\n1.4.3  示例：第一个Spring Boot应用  10\n1.5  本章小结  18\n第2章  Spring Boot核心  19\n2.1  Spring Boot的启动类与核心注解@SpringBootApplication  20\n2.2  Spring Boot基本配置介绍  21\n2.2.1  关闭某个自动配置  21\n2.2.2  定制启动banner  22\n2.2.3  应用的全局配置文件  23\n2.2.4  Spring Boot的依赖模块  24\n2.3  Spring Boot自动配置原理  25\n2.3.1  源码分析  25\n2.3.2  spring.factories分析  27\n2.3.3  Spring Boot Web开发的自动配置  29\n2.4  本章小结  30\n第3章  Spring Boot的Web开发  31\n3.1  Spring Boot的Web开发支持  32\n3.2  Thymeleaf模板引擎  32\n3.2.1  Thymeleaf概述  33\n3.2.2  Thymeleaf基础语法  33\n3.3  Spring和Thymeleaf的整合  36\n3.4  Spring Boot的Thymeleaf支持  37\n3.5  Spring Boot的Web开发实例  38\n示例：第一个Spring Boot的Web应用  38\n示例：Thymeleaf常用功能  45\n3.6  Spring Boot对JSP的支持  52\n示例：Spring Boot添加JSP支持  53\n3.7  Spring Boot处理JSON数据  57\n示例：Spring Boot处理JSON  57\n3.8  Spring Boot文件上传下载  63\n示例：Spring Boot文件上传  63\n示例：使用对象方式接收上传文件  66\n示例：文件下载  69\n3.9  Spring Boot的异常处理  71\n示例：ExceptionHandler处理异常  71\n示例：父类Controller处理异常  73\n示例：Advice处理异常返回JSON  76\n3.10  本章小结  78\n第4章  Spring Boot的数据访问  79\n4.1  Hibernate\/JPA\/Spring Data JPA的概念  80\n4.1.1  对象\/关系数据库映射（ORM）  80\n4.1.2  基本映射方式  81\n4.1.3  流行的ORM框架简介  82\n4.2  Spring Data JPA  83\n4.2.1  Spring Data核心数据访问接口  83\n示例：CrudRepository接口访问数据  84\n示例：PagingAndSortingRepository接口访问数据  91\n4.2.2  Spring Data JPA开发  99\n示例：简单条件查询  100\n示例：关联查询和@Query查询  105\n示例：@NamedQuery查询  114\n示例：Specification查询  118\n4.3  Spring Boot使用JdbcTemplate  128\n示例：JdbcTemplate访问数据  128\n4.4  Spring Boot整合MyBatis  135\n示例：Spring Boot整合MyBatis开发  135\n4.5  本章小结  141\n第5章  Spring Boot的热部署与单元测试  142\n5.1  使用spring-boot-devtools进行热部署  143\n示例：使用spring-boot-devtools实现热部署  143\n5.2  Spring Boot的单元测试  147\n示例：使用Spring Boot的单元测试  147\n5.3  本章小结  155\n第6章  Spring Boot的Security安全控制  156\n6.1  Spring Security是什么  157\n6.2  Spring Security入门  157\n6.2.1  Security适配器  157\n6.2.2  用户认证  158\n6.2.3  用户授权  158\n6.2.4  Spring Security核心类  160\n6.2.5  Spring Security的验证机制  161\n6.2.6  Spring Boot的支持  161\n示例：简单Spring Boot Security应用  162\n6.3  企业项目中的Spring Security操作  173\n示例：基于JPA的Spring Boot Security操作  173\n示例：基于MyBatis的Spring Boot\nSecurity操作  180\n示例：基于JDBC的Spring Boot Security操作  183\n6.4  本章小结  185\n第7章  实战项目：信息管理系统  186\n7.1  项目简介及系统架构  187\n7.1.1  系统功能介绍  187\n7.1.2  相关技术介绍  187\n7.1.3  系统结构  188\n7.1.4  系统的功能模块  188\n7.2  配置文件  189\n7.3  持久化类  191\n7.3.1  设计持久化实体  191\n7.3.2  创建持久化实体类  192\n7.3.3  导入初始数据  197\n7.4  定义Repository接口实现Repository持久层  198\n7.5  实现Service持久层  200\n7.5.1  业务逻辑组件的设计  201\n7.5.2  实现业务逻辑组件  201\n7.5.3  事务管理  224\n7.6  实现Web层  224\n7.6.1  控制器  224\n7.6.2  系统登录  225\n7.6.3  菜单管理  233\n7.6.4  角色管理  235\n7.6.5  用户管理  240\n7.6.6  功能扩展  245\n7.7  本章小结  249","pages":"256","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s29785016.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s29785016.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29785016.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30239778\/","id":"30239778","publisher":"电子工业出版社","isbn10":"7121341166","isbn13":"9787121341168","title":"Spring Boot 2企业应用实战","url":"https:\/\/api.douban.com\/v2\/book\/30239778","alt_title":"","author_intro":"疯狂软件，多年来从事Java开发、移动开发等方面的培训及研发工作，承接大型研发项目。疯狂软件是广州为学教育科技有限公司的教育品牌，立志以务实的技术来改变中国的软件教育，所培训的学生入职华为、阿里软件、唯品会、网易、IBM等IT名企。","summary":"本书介绍了Java EE领域的全新开源框架：Spring Boot 2。本书的示例建议在Tomcat 8上运行。\n本书重点介绍如何使用Spring Boot进行Java EE快速开发，从内容上可以划分为四个部分。第一部分详细介绍了Spring Boot的核心知识。第二部分详细介绍了Spring Boot的Web开发。第三部分重点介绍了Spring Boot的数据访问。第四部分重点介绍了Spring Boot的Spring Security安全控制。书中示范开发了一个包含7个表、表之间具有复杂的关联映射关系，且业务功能也相对完善的信息管理系统案例，希望让读者理论联系实际，将Spring Boot框架真正运用到实际开发当中去。该案例采用目前最流行、最规范的Java EE架构，整个应用分为DAO持久层、领域对象层、业务逻辑层、控制器层和视图层，各层之间分层清晰，层与层之间以松耦合的方法组织在一起。所有代码完全基于Eclipse IDE来完成，一步步带领读者深入两个框架的核心。\n阅读本书之前，建议先阅读疯狂软件教育的《疯狂Java讲义》一书。本书适合有较好的Java编程基础，JSP、Servlet、JDBC基础，Spring框架基础的读者，尤其适合于对Spring Boot了解不够深入，或对Spring Boot整合开发不太熟悉的开发人员阅读。","price":"58"},{"rating":{"max":10,"numRaters":1,"average":"0.0","min":0},"subtitle":"","author":["杨恩雄"],"pubdate":"2018-9","tags":[{"count":3,"name":"springboot","title":"springboot"},{"count":2,"name":"文学","title":"文学"},{"count":2,"name":"springmvc","title":"springmvc"},{"count":2,"name":"spring","title":"spring"},{"count":1,"name":"thymeleaf","title":"thymeleaf"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29874287.jpg","binding":"平装","translator":[],"catalog":"第1章  概述  1\n1.1  Java EE开发技术  2\n1.1.1  Java EE的三层架构  2\n1.1.2  MVC框架  2\n1.1.3  数据访问层框架  3\n1.1.4  视图技术  3\n1.2  JDK的下载与安装  3\n1.3  安装与配置Maven  4\n1.3.1  关于Maven  4\n1.3.2  下载与安装Maven  4\n1.3.3  配置远程仓库  5\n1.4  安装Eclipse  5\n1.4.1  Eclipse版本  5\n1.4.2  在Eclipse中配置Maven  5\n1.4.3  获取本书代码  6\n1.5  本章小结  6\n第2章  初试Spring Boot  7\n2.1  Spring Boot介绍  8\n2.1.1  Spring Boot简介  8\n2.1.2  starter模块  8\n2.2  构建第一个Spring Boot程序  9\n2.2.1  新建Maven项目  9\n2.2.2  编写启动类  10\n2.2.3  编写控制器  11\n2.2.4  开发环境的热部署  12\n2.3  运行单元测试  12\n2.3.1 测试Web服务  12\n2.3.2  模拟Web测试  13\n2.3.3  测试业务组件  13\n2.3.4  模拟业务组件  14\n2.4  发布与调用REST服务  15\n2.4.1  REST  15\n2.4.2  发布REST服务  15\n2.4.3  使用RestTemplate调用服务  16\n2.4.4  使用Feign调用服务  18\n2.5  本章小结  19\n第3章  Spring Boot配置  20\n3.1  配置文件  21\n3.1.1  默认配置文件  21\n3.1.2  指定配置文件  22\n3.1.3  yml文件  22\n3.1.4  使用profile指定配置  23\n3.2  Web配置  24\n3.2.1  Servlet配置  24\n3.2.2  Listener配置  25\n3.2.3  Filter配置  26\n3.2.4  构建可部署的war包  26\n3.2.5  JSP配置  28\n3.3  其他配置  30\n3.3.1  服务器常用配置  30\n3.3.2  响应压缩  30\n3.3.3  SSL配置  32\n3.3.4  使用其他服务器  32\n3.3.5  服务器访问日志  33\n3.3.6  banner配置  34\n3.4  自定义配置  35\n3.4.1  @Value注解  35\n3.4.2  定义属性映射对象  36\n3.4.3  使用配置  37\n3.4.4  属性自动识别  38\n3.5  本章小结  39\n第4章  Spring Boot的注解  40\n4.1  Spring的常用注解  41\n4.1.1  bean定义  41\n4.1.2  依赖注入  42\n4.1.3  使用Primary注解  44\n4.1.4  Scope注解  45\n4.1.5  方法注入  46\n4.1.6  AOP注解  47\n4.1.7  ComponentScan注解  49\n4.2  高级Spring注解  50\n4.2.1  限定注解  50\n4.2.2  自定义限定注解  51\n4.2.3  自定义bean的生命周期  52\n4.3  Spring MVC的常用注解  54\n4.3.1  Controller注解  54\n4.3.2  RequestMapping注解  55\n4.3.3  PathVariable注解  56\n4.3.4  MatrixVariable注解  56\n4.3.5  RequestParam注解  57\n4.3.6  文件上传  58\n4.3.7  RestController注解  58\n4.4  Spring Boot的条件注解  59\n4.4.1  类条件注解  59\n4.4.2  项目依赖问题  60\n4.4.3  其他条件注解  61\n4.4.4  自定义条件注解  61\n4.4.5  Spring Boot的自动配置  62\n4.5  本章小结  63\n第5章  初试Thymeleaf  64\n5.1  Thymeleaf  65\n5.1.1  什么是Thymeleaf  65\n5.1.2  支持的模板类型  65\n5.1.3  HTML模板  65\n5.1.4  XML模板  66\n5.2  初试Thymeleaf API  66\n5.2.1  处理HTML  66\n5.2.2  更换模板解析器  67\n5.2.3  处理资源文件  67\n5.2.4  变量处理  68\n5.2.5  遍历集合  69\n5.2.6  设置前缀与后缀  69\n5.3  在Servlet应用中整合Thymeleaf  70\n5.3.1  建立项目  70\n5.3.2  配置模板引擎  71\n5.3.3  在Servlet中使用Thymeleaf  72\n5.3.4  编写模板文件  73\n5.4  在Struts2中整合Thymeleaf  74\n5.4.1  建立与配置Struts2项目  74\n5.4.2  配置Struts Action  75\n5.4.3  整合Themeleaf  76\n5.5  在Spring Boot中整合Thymeleaf  77\n5.5.1  建立与配置项目  77\n5.5.2  编写控制器与模板  78\n5.5.3  静态资源  79\n5.6  本章小结  79\n第6章  Thymeleaf对象的使用  80\n6.1  文本处理  81\n6.1.1  外部文本输出  81\n6.1.2  文本国际化  82\n6.1.3  处理转义文本  83\n6.1.4  读取变量  83\n6.1.5  在文本信息中使用变量  84\n6.1.6  其他读取变量的方式  84\n6.1.7  链接表达式  85\n6.2  基本对象  86\n6.2.1  基本对象概述  86\n6.2.2  #ctx对象  87\n6.2.3  Web对象  87\n6.2.4  内置变量  88\n6.2.5  使用基本对象的注意事项  88\n6.3  数字对象  89\n6.3.1  整数格式化  89\n6.3.2  小数格式化  90\n6.3.3  货币格式化  91\n6.3.4  百分比格式化  92\n6.3.5  使用sequence方法  92\n6.4  字符串对象  92\n6.4.1  toString与length方法  93\n6.4.2  非空判断与默认值处理  93\n6.4.3  包含判断  94\n6.4.4  截取与替换  94\n6.4.5  追加与拼接  95\n6.4.6  分割与连接  96\n6.4.7  大小写转换  96\n6.4.8  字符串编码与解码  97\n6.4.9  其他处理  98\n6.5  日期对象  98\n6.5.1  格式化日期  98\n6.5.2  获取日期字段  99\n6.5.3  创建日期  100\n6.6  数组与集合对象  101\n6.6.1  数组  101\n6.6.2  List与Set  101\n6.6.3  Map  101\n6.7  其他内置对象  102\n6.7.1  messages对象  102\n6.7.2  uris对象  102\n6.7.3  aggregates对象  103\n6.8  本章小结  103\n第7章  Thymeleaf常用语法  104\n7.1  表达式语法之运算符  105\n7.1.1  表达式常量  105\n7.1.2  字符串拼接  106\n7.1.3  算术运算符  106\n7.1.4  关系运算符  107\n7.1.5  条件运算符  108\n7.1.6  无操作符  108\n7.2  表达式语法进阶  108\n7.2.1  数据转换  108\n7.2.2  自定义数据转换类  109\n7.2.3  Spring Boot数据转换  110\n7.2.4  表达式预处理  112\n7.2.5  表达式调用工具方法  113\n7.3  属性设置  114\n7.3.1  使用th:attr  114\n7.3.2  设置HTML节点属性  114\n7.3.3  属性值拼接  115\n7.3.4  HTML5属性支持  115\n7.4  条件判断与数据迭代  116\n7.4.1  条件判断  116\n7.4.2  switch case语法  117\n7.4.3  使用th:each属性  117\n7.4.4  常见迭代类型  118\n7.4.5  迭代状态对象  118\n7.4.6  数据延迟加载  120\n7.4.7  在Spring Boot中使用延迟加载  121\n7.4.8  星号表达式  121\n7.5  本章小结  122\n第8章  深入Thymeleaf模板  123\n8.1  模板片断  124\n8.1.1  定义与引用模板片断  124\n8.1.2  片断引用语法  125\n8.1.3  选择器的基础语法  126\n8.1.4  选择器的其他语法  128\n8.1.5  insert、replace与include的区别  128\n8.1.6  含有变量的片断引用  129\n8.1.7  片断块引用  130\n8.1.8  无操作符的使用  131\n8.1.9  删除模板  132\n8.1.10  基本表达式总结  134\n8.2  模板与逻辑分离  134\n8.2.1  逻辑分离例子  134\n8.2.2  逻辑分离配置  136\n8.2.3  关联节点的选择  137\n8.3  模板注释  137\n8.3.1  解析层注释  138\n8.3.2  原型注释  139\n8.4  内联语法  139\n8.4.1  使用内联语法显示文本  139\n8.4.2  在JavaScript中使用内联语法  140\n8.4.3  在CSS中使用内联语法  140\n8.4.4  内联语法注释  141\n8.4.5  内联语法序列化  142\n8.5  模板缓存  143\n8.5.1  开启与配置缓存  143\n8.5.2  缓存有效时间  145\n8.6  本章小结  146\n第9章  Thymeleaf原理与扩展  147\n9.1  概念与接口介绍  148\n9.1.1  方言  148\n9.1.2  处理器  149\n9.1.3  模板处理者  150\n9.1.4  模板解析事件  150\n9.1.5  节点与标签  151\n9.2  深入Thymeleaf模板处理  151\n9.2.1  策略模式  151\n9.2.2  责任链模式  153\n9.2.3  合并使用策略模式与责任链模式  156\n9.2.4  模板处理过程  159\n9.2.5  模板事件  161\n9.3  处理器  161\n9.3.1  预处理器  161\n9.3.2  后处理器  163\n9.3.3  一般处理器  164\n9.3.4  处理器优先级  165\n9.3.5  标签处理器  167\n9.3.6  模型处理器  168\n9.3.7  边界处理器  170\n9.3.8  其他处理器  170\n9.4  Thymeleaf扩展  171\n9.4.1  自定义标签  171\n9.4.2  自定义模板属性  173\n9.4.3  自定义内置对象  175\n9.4.4  自定义执行属性  176\n9.5  本章小结  177\n第10章  Spring Boot与Thymeleaf整合  178\n10.1  在Spring Boot中配置Thymeleaf  179\n10.1.1  模板引擎配置  179\n10.1.2  Spring MVC视图解析器  181\n10.1.3  Thymeleaf视图解析器  184\n10.1.4  数据转换配置  186\n10.1.5  模板国际化  186\n10.2  表单处理  188\n10.2.1  表单提交  188\n10.2.2  使用th:field属性  189\n10.2.3  HTML节点的id生成  190\n10.2.4  实现label节点  192\n10.2.5  在模板中处理checkbox与radio  193\n10.2.6  表单提交处理checkbox与radio  195\n10.3  表单验证  195\n10.3.1  表单验证  195\n10.3.2  修改信息文件  197\n10.3.3  输出错误信息  197\n10.4  片断的使用  198\n10.4.1  引用片断  198\n10.4.2  使用bean选择片断  199\n10.4.3  在控制器中引用片断  201\n10.5  自定义标签  201\n10.5.1  方言与处理器  201\n10.5.2  配置方言  203\n10.6  本章小结  204\n第11章  使用JavaScript库  205\n11.1  使用jQuery  206\n11.1.1  概述  206\n11.1.2  选择器  206\n11.1.3  事件  207\n11.1.4  数据列表  208\n11.1.5  AJAX调用GET方法  209\n11.1.6  AJAX调用POST方法  210\n11.1.7  表单验证  211\n11.2  Bootstrap  213\n11.2.1  概述  213\n11.2.2  数据列表  214\n11.2.3  分页  215\n11.2.4  表单  218\n11.2.5  警告框的使用  219\n11.3  Vue.js  221\n11.3.1  概述  221\n11.3.2  组件  222\n11.3.3  指令  224\n11.3.4  循环指令  225\n11.3.5  表单验证  226\n11.4  本章小结  227\n第12章  数据库实战  228\n12.1  概述  229\n12.1.1  关于Spring Data  229\n12.1.2  Spring Data的功能  229\n12.1.3  Spring Data模块  230\n12.2  Spring Data与JPA  230\n12.2.1  构建项目  230\n12.2.2  数据访问层与业务层  231\n12.2.3  自定义数据存储逻辑  233\n12.2.4  方法名查询  233\n12.2.5  使用@Query注解  234\n12.3  Spring Data与MongoDB  235\n12.3.1  安装MongoDB  235\n12.3.2  配置权限  236\n12.3.3  MongoDB的相关概念  236\n12.3.4  构建项目  236\n12.3.5  数据访问层与业务层  237\n12.3.6  自定义数据存储逻辑  238\n12.3.7  方法名查询  239\n12.3.8  使用@Query注解  240\n12.4  Spring Data与Redis  241\n12.4.1  Redis的安装与配置  241\n12.4.2  Redis的数据类型  242\n12.4.3  使用Jedis  242\n12.4.4  构建Spring Data项目  243\n12.4.5  数据访问层与业务层  244\n12.4.6  自定义数据存储逻辑  246\n12.4.7  方法名查询  247\n12.5  本章小结  247\n第13章  开发微服务  248\n13.1  微服务与Spring Cloud  249\n13.1.1  微服务简介  249\n13.1.2  Netflix与Spring Cloud  249\n13.1.3  Spring Cloud模块介绍  250\n13.2  Eureka服务治理  250\n13.2.1  Eureka架构  250\n13.2.2  构建服务器  251\n13.2.3  服务提供者  253\n13.2.4  服务调用者  255\n13.2.5  程序结构  257\n13.3  Ribbon负载均衡  257\n13.3.1  Ribbon介绍  258\n13.3.2  第一个Ribbon程序  258\n13.3.3  在Spring Cloud中测试使用  Ribbon  259\n13.4  客户端Feign  260\n13.4.1  Feign介绍  260\n13.4.2  第一个Feign程序  260\n13.4.3  使用Feign调用微服务  262\n13.5  容错框架Hystrix  263\n13.5.1  Hystrix介绍  263\n13.5.2  第一个Hystrix程序  265\n13.5.3  在Spring Cloud中整合Hystrix  266\n13.6  本章小结  268\n第14章  实战案例  269\n14.1  系统功能及界面  270\n14.1.1  登录与首页  270\n14.1.2  图书管理模块  271\n14.1.3  入库模块  272\n14.1.4  销售模块  273\n14.1.5  导航组件与分页组件  274\n14.1.6  运行本章案例  275\n14.2  数据库设计  275\n14.2.1  用户表  275\n14.2.2  图书表与库存表  275\n14.2.3  入库单数据表  276\n14.2.4  销售单数据表  276\n14.3  搭建项目框架  277\n14.3.1  项目依赖与项目结构  277\n14.3.2  项目配置  278\n14.3.3  实体设计  279\n14.3.4  用户登录  281\n14.3.5  片断定义  282\n14.4  图书管理  283\n14.4.1  数据列表  283\n14.4.2  通用的分页组件  285\n14.4.3  图片上传  286\n14.4.4  新建图书  288\n14.4.5  查看与修改图书  289\n14.4.6  删除图书  290\n14.5  销售单模块  291\n14.5.1  列表与分页功能  291\n14.5.2  选择图书  293\n14.5.3  删除已选图书与修改数量  295\n14.5.4  新建销售单  297\n14.5.5  操作库存  299\n14.6  首页数据查询与排序  300\n14.6.1  库存查询  300\n14.6.2  图书查询与轮播  301\n14.6.3  数据排序  303\n14.7  本章小结  304","pages":"316","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s29874287.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s29874287.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29874287.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30331077\/","id":"30331077","publisher":"电子工业出版社","isbn10":"7121349248","isbn13":"9787121349249","title":"Spring Boot 2+Thymeleaf企业应用实战","url":"https:\/\/api.douban.com\/v2\/book\/30331077","alt_title":"","author_intro":"杨恩雄，从事十多年Java EE企业应用开发，曾任中企动力系统设计师、中企开源项目经理、数码辰星科技公司项目经理，参与多个企业OA、ERP项目的设计与架构工作，在大数据应用、SOA、互联网产品方面有着丰富的开发经验及架构经验，曾著《疯狂工作流讲义》《疯狂Spring Cloud微服务架构实战》等书籍。","summary":"Java经过多年的发展，市面上出现的开发框架多不胜数，技术发展日新月异。每一次技术的更替都牵动着广大Java程序员的心。\n在《Spring Boot 2+Thymeleaf企业应用实战》的前面部分，讲解目前市面上流行的Spring Boot框架，使用该框架我们可以轻松构建出各种项目。在此基础上，介绍Spring MVC的使用。学习完这些知识后，读者可以掌握Spring Boot、Spring MVC的核心内容。在《Spring Boot 2+Thymeleaf企业应用实战》的第二部分，会深入讲解Thymeleaf框架，这是一个较为新颖的模板引擎。使用Thymeleaf，可以完全抛弃JSP，进入一种更为简便的页面开发模式。第11章讲解目前市面上常见的几个JavaScript框架，例如jQuery、Bootstrap及Vue.js。学习完这些知识后，读者可以使用这些框架开发大部分的页面功能。第12章介绍如何使用Spring Data框架操作各个主流数据库，例如MySQL、Redis和MongoDB等。第13章介绍如何使用Spring Cloud中的主要框架，学完本章知识后，读者可以开发最基本的微服务项目。《Spring Boot 2+Thymeleaf企业应用实战》的最后一章，以一个案例对所学知识进行运用。\n《Spring Boot 2+Thymeleaf企业应用实战》定位为一本Java Web开发的入门级书籍，从表现层到持久层，力求为大家提供一整套Java Web开发的技术教程。","price":"69.00元"},{"rating":{"max":10,"numRaters":4,"average":"0.0","min":0},"subtitle":"A Problem-Solution Approach","author":["Marten Deinum"],"pubdate":"2019-1-16","tags":[{"count":2,"name":"Java","title":"Java"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29935694.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"356","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s29935694.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s29935694.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29935694.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30390886\/","id":"30390886","publisher":"Apress","isbn10":"1484239628","isbn13":"9781484239629","title":"Spring Boot 2 Recipes","url":"https:\/\/api.douban.com\/v2\/book\/30390886","alt_title":"","author_intro":"","summary":"","price":"GBP 24.99"},{"rating":{"max":10,"numRaters":21,"average":"5.2","min":0},"subtitle":"","author":[],"pubdate":"","tags":[{"count":8,"name":"Springboot","title":"Springboot"},{"count":6,"name":"Java","title":"Java"},{"count":3,"name":"Vue","title":"Vue"},{"count":2,"name":"编程","title":"编程"},{"count":2,"name":"Vue.js","title":"Vue.js"},{"count":1,"name":"计算机","title":"计算机"},{"count":1,"name":"技术","title":"技术"},{"count":1,"name":"IT","title":"IT"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s30551966.jpg","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s30551966.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s30551966.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s30551966.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30747218\/","id":"30747218","publisher":"","isbn10":"7302517975","isbn13":"9787302517979","title":"Spring Boot+Vue全栈开发实战","url":"https:\/\/api.douban.com\/v2\/book\/30747218","alt_title":"","author_intro":"","summary":"","price":"54.50元"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":[],"pubdate":"","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","large":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","medium":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif"},"alt":"https:\/\/book.douban.com\/subject\/31280737\/","id":"31280737","publisher":"","isbn10":"7115486697","isbn13":"9787115486691","title":"微服务实战（Dubbox +Spring Boot+Docker）","url":"https:\/\/api.douban.com\/v2\/book\/31280737","alt_title":"","author_intro":"","summary":"","price":"25.00元"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":[],"pubdate":"","tags":[],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s31524922.jpg","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s31524922.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s31524922.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s31524922.jpg"},"alt":"https:\/\/book.douban.com\/subject\/32634476\/","id":"32634476","publisher":"","isbn10":"1978163142","isbn13":"9781978163140","title":"Spring Boot: How to Get Started and Build a Microservice","url":"https:\/\/api.douban.com\/v2\/book\/32634476","alt_title":"","author_intro":"","summary":"Sale for a short time - regular price 14.95$Heavily revised and extended 2nd editionFrom Zero Spring Experience to Building Your First Microservice with Spring Boot 2Learn to build your first microservice with Spring Boot. Together we will write a production-ready microservice with a REST API in just a few hours. All starting from having zero experience with Spring at all.Updated to use Spring Boot 2.0.0.RELEASEOur guides give you brief lessons on a single topic to get you started in no time. We leave the fluff out so you can focus and learn better and faster. Stop wasting hours of your life with watching video courses or reading boring compendiums. Use our guide and save your precious time and be way ahead of your competitors on that next big project.We build a real application (less than 850 lines of code though) using a standard Maven project structure together, and I will explain you the steps and libraries involved on the go. You learn best by coding. The way I love learning too. And not by reading fluffy compendiums or watching 10 hours and more of videos. Sure, you can do that, but any developer following my guide will be way ahead of you before you are even halfway through that video course.What you will build:We build a Microservice for storing comments and providing a REST Interface for interacting with the data. The sample application is modeled after a real production application to guide you through building your first Spring Boot application.What you will learn:What problem the Spring Framework actually solvesThe basics of the Spring Framework aka CoreHow to build a microservice with Spring Boot 2How to work with a relational database using the Spring Data JPA FrameworkHow to write the REST API using Spring MVCHow to create a service layer and integrate a legacy library using its own Spring ApplicationContext in an XML fileHow to test the applicationA simple way to secure your applicationHow to use monitoring and health check out of the box with Spring BootHow to deploy your applicationHow to navigate in the project with MavenYou must have experience with Java as we are not covering Java basics. Everything else we use is covered in the pocket guide.If you have questions, do not hesitate to contact me using the email address at the end of the book. I'll answer your questions and improve the book with your feedback.","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":[],"pubdate":"","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","large":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","medium":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif"},"alt":"https:\/\/book.douban.com\/subject\/34804855\/","id":"34804855","publisher":"","isbn10":"7302528195","isbn13":"9787302528197","title":"Spring Boot开发实战－微课视频版（清华科技大讲堂）","url":"https:\/\/api.douban.com\/v2\/book\/34804855","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":[],"pubdate":"","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","large":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","medium":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif"},"alt":"https:\/\/book.douban.com\/subject\/34891471\/","id":"34891471","publisher":"","isbn10":"7302539499","isbn13":"9787302539490","title":"Spring Boot 2攻略","url":"https:\/\/api.douban.com\/v2\/book\/34891471","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":2,"average":"0.0","min":0},"subtitle":"","author":[],"pubdate":"","tags":[{"count":1,"name":"微服务","title":"微服务"}],"origin_title":"","image":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","large":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","medium":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif"},"alt":"https:\/\/book.douban.com\/subject\/34838054\/","id":"34838054","publisher":"","isbn10":"7302535655","isbn13":"9787302535652","title":"Spring Boot微服务实战 使用RabbitMQ、Eureka、Ribbon、Zuul和C","url":"https:\/\/api.douban.com\/v2\/book\/34838054","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":[],"pubdate":"","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","large":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","medium":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif"},"alt":"https:\/\/book.douban.com\/subject\/34838481\/","id":"34838481","publisher":"","isbn10":"7115512795","isbn13":"9787115512796","title":"Spring Boot企业级开发教程","url":"https:\/\/api.douban.com\/v2\/book\/34838481","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":[],"pubdate":"","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","large":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","medium":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif"},"alt":"https:\/\/book.douban.com\/subject\/34931018\/","id":"34931018","publisher":"","isbn10":"7302542481","isbn13":"9787302542483","title":"一步一步学Spring Boot:微服务项目实战(第2版)","url":"https:\/\/api.douban.com\/v2\/book\/34931018","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":9,"average":"0.0","min":0},"subtitle":"Designing Resilient Systems with Spring Boot, Spring Cloud, and Cloud Foundry","author":["Josh Long","Kenny Bastani"],"pubdate":"2017-9-4","tags":[{"count":16,"name":"Java","title":"Java"},{"count":13,"name":"spring","title":"spring"},{"count":10,"name":"microservice","title":"microservice"},{"count":2,"name":"计算机","title":"计算机"},{"count":2,"name":"cloud","title":"cloud"},{"count":2,"name":"Programming","title":"Programming"},{"count":1,"name":"软件工程","title":"软件工程"},{"count":1,"name":"计算机科学","title":"计算机科学"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29500322.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"256","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29500322.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29500322.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29500322.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26435857\/","id":"26435857","publisher":"O'Reilly Media","isbn10":"1449374646","isbn13":"9781449374648","title":"Cloud Native Java","url":"https:\/\/api.douban.com\/v2\/book\/26435857","alt_title":"","author_intro":"Josh Long is the Spring developer advocate for SpringSource, a division of VMware. Josh is the lead author on Apress' Spring Recipes, 2nd Edition, and a SpringSource committer and contributor. When he's not hacking on code for SpringSource or other open-source projects, he can be found at the local Java User Group or at the local coffee shop. Josh likes solutions that push the boundaries of the technologies that enable them. His interests include scalability, integration, rich clients, BPM, grid processing, mobile computing and so-called \"smart\" systems. He blogs at blog.springsource.org or joshlong.com.\nKenny Bastani is a passionate technology evangelist and and open source software advocate in Silicon Valley. As an enterprise software consultant he has applied a diverse set of skills needed for projects requiring a full stack web developer in agile mode. As a passionate blogger and open source contributor, Kenny engages a community of passionate developers who are looking to take advantage of newer graph processing techniques to analyze data.","summary":"What separates the traditional enterprise from the likes of Amazon, Netflix, and Etsy? Those companies have refined the art of cloud native development to maintain their competitive edge and stay well ahead of the competition. This practical guide shows Java\/JVM developers how to build better software, faster, using Spring Boot, Spring Cloud, and Cloud Foundry.\nMany organizations have already waded into cloud computing, test-driven development, microservices, and continuous integration and delivery. Authors Josh Long and Kenny Bastani fully immerse you in the tools and methodologies that will help you transform your legacy application into one that is genuinely cloud native.\nIn four sections, this book takes you through:\nThe Basics: learn the motivations behind cloud native thinking; configure and test a Spring Boot application; and move your legacy application to the cloud\nWeb Services: build HTTP and RESTful services with Spring; route requests in your distributed system; and build edge services closer to the data\nData Integration: manage your data with Spring Data, and integrate distributed services with Spring’s support for event-driven, messaging-centric architectures\nProduction: make your system observable; use service brokers to connect stateful services; and understand the big ideas behind continuous delivery","price":"USD 69.99"},{"rating":{"max":10,"numRaters":2,"average":"0.0","min":0},"subtitle":"Spring Boot 2+Spring 5+Spring Cloud实战","author":["郑天民"],"pubdate":"2019-6","tags":[{"count":3,"name":"响应式","title":"响应式"},{"count":2,"name":"开发_架构","title":"开发_架构"},{"count":2,"name":"spring","title":"spring"},{"count":1,"name":"计算机","title":"计算机"},{"count":1,"name":"reactive","title":"reactive"},{"count":1,"name":"11","title":"11"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s32744146.jpg","binding":"平装","translator":[],"catalog":"第1章  直面响应式微服务架构\t1\n1.1  响应式系统核心概念\t1\n1.1.1  从传统编程方法到响应式编程方法\t1\n1.1.2  响应式宣言与响应式系统\t4\n1.2  剖析微服务架构\t6\n1.2.1  分布式系统与微服务架构\t6\n1.2.2  服务拆分与集成\t8\n1.2.3  微服务架构的核心组件\t11\n1.2.4  微服务架构技术体系\t13\n1.3  构建响应式微服务架构\t15\n1.3.1  响应式微服务架构设计原则\t15\n1.3.2  整合响应式编程与微服务架构\t18\n1.4  全书架构\t19\n1.5  本章小结\t20\n第2章  响应式编程模型与Reactor框架\t21\n2.1  响应式编程模型\t21\n2.1.1  流\t22\n2.1.2  背压\t24\n2.1.3  响应式流\t25\n2.2  Reactor框架\t28\n2.2.1  响应式编程实现技术概述\t28\n2.2.2  引入Reactor框架\t31\n2.3  创建Flux和Mono\t34\n2.3.1  创建Flux\t34\n2.3.2  创建Mono\t37\n2.4  Flux和Mono操作符\t39\n2.4.1  转换操作符\t39\n2.4.2  过滤操作符\t43\n2.4.3  组合操作符\t46\n2.4.4  条件操作符\t49\n2.4.5  数学操作符\t52\n2.4.6  Observable工具操作符\t54\n2.4.7  日志和调试操作符\t56\n2.5  Reactor框架中的背压机制\t58\n2.6  本章小结\t60\n第3章  构建响应式RESTful服务\t61\n3.1  使用Spring Boot 2.0构建微服务\t61\n3.1.1  Spring Boot基本特性\t61\n3.1.2  基于Spring Boot的第一个RESTful服务\t63\n3.1.3  使用Actuator组件强化服务\t67\n3.2  使用Spring WebFlux构建响应式服务\t80\n3.2.1  使用Spring Initializer初始化响应式Web应用\t80\n3.2.2  对比响应式Spring WebFlux与传统Spring WebMvc\t82\n3.2.3  使用注解编程模型创建响应式RESTful服务\t84\n3.2.4  使用函数式编程模型创建响应式RESTful服务\t88\n3.3  本章小结\t93\n第4章  构建响应式数据访问组件\t94\n4.1  Spring Data数据访问模型\t94\n4.1.1  Spring Data抽象\t95\n4.1.2  集成Spring Data JPA\t98\n4.1.3  集成Spring Data Redis\t100\n4.1.4  集成Spring Data Mongodb\t103\n4.2  响应式数据访问模型\t104\n4.2.1  Spring Reactive Data抽象\t105\n4.2.2  创建响应式数据访问层组件\t107\n4.3  响应式Mongodb\t108\n4.3.1  初始化Reactive Mongodb运行环境\t109\n4.3.2  创建Reactive Mongodb Repository\t112\n4.3.3  使用CommandLineRunner初始化Mongodb数据\t113\n4.3.4  在Service层中调用Reactive MongodbRepository\t114\n4.4  响应式Redis\t117\n4.4.1  初始化Reactive Redis运行环境\t117\n4.4.2  创建Reactive Redis Repository\t121\n4.4.3  在Service层中调用Reactive Repository\t122\n4.5  本章小结\t123\n第5章  构建响应式消息通信组件\t124\n5.1  消息通信系统简介\t125\n5.2  使用Spring Cloud Stream构建消息通信系统\t126\n5.2.1  Spring Cloud Stream基本架构\t126\n5.2.2  Spring Cloud Stream中的Binder组件\t130\n5.2.3  使用Source组件实现消息发布者\t135\n5.2.4  使用@StreamListener注解实现消息消费者\t137\n5.3  引入Reactive Spring Cloud Stream实现响应式 消息通信系统\t139\n5.3.1  Reactive Spring Cloud Stream组件\t139\n5.3.2  Reactive Spring Cloud Stream示例\t141\n5.4  本章小结\t147\n第6章  构建响应式微服务架构\t148\n6.1  使用Spring Cloud创建响应式微服务架构\t148\n6.1.1  服务治理\t149\n6.1.2  负载均衡\t154\n6.1.3  服务容错\t161\n6.1.4  服务网关\t166\n6.1.5  服务配置\t173\n6.1.6  服务监控\t177\n6.2  使用WebClient实现响应式服务调用\t182\n6.2.1  创建和配置WebClient\t182\n6.2.2  使用WebClient访问服务\t183\n6.3  本章小结\t187\n第7章  测试响应式微服务架构\t188\n7.1  初始化测试环境\t189\n7.1.1  引入spring-boot-starter-test组件\t189\n7.1.2  解析基础类测试注解\t190\n7.1.3  编写第一个测试用例\t191\n7.2  测试Reactor组件\t192\n7.3  测试响应式Repository层组件\t194\n7.3.1  测试内嵌式Mongodb\t194\n7.3.2  测试真实MongoDB\t197\n7.4　测试响应式Service层组件\t199\n7.5  测试响应式Controller层组件\t201\n7.6  本章小结\t204\n第8章  响应式微服务架构演进案例分析\t205\n8.1  PrescriptionSystem案例简介\t205\n8.2  传统微服务架构实现案例\t207\n8.2.1  构建基础设施类服务\t207\n8.2.2  构建Medicine服务\t213\n8.2.3  构建Card服务\t219\n8.2.4  构建Prescription服务\t224\n８.3  响应式微服务架构演进案例\t237\n8.3.1  更新基础设施类服务\t237\n8.3.2  更新数据访问方式\t241\n8.3.3  更新事件通信方式\t246\n8.4  本章小结\t266\n参考文献\t267","pages":"276","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s32744146.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s32744146.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s32744146.jpg"},"alt":"https:\/\/book.douban.com\/subject\/33950050\/","id":"33950050","publisher":"电子工业出版社","isbn10":"7121363836","isbn13":"9787121363832","title":"Spring响应式微服务","url":"https:\/\/api.douban.com\/v2\/book\/33950050","alt_title":"","author_intro":"","summary":"《Spring响应式微服务：Spring Boot 2+Spring 5+Spring Cloud实战》主要包含构建响应式微服务架构过程中所应具备的技术体系和工程实践。围绕响应式编程和微服务 架构的整合，我们将讨论如何使用 Reactor 响应式编程框架、如何构建响应式 RESTful 服务、如何构建响应式数据访问组件、如何构建响应式消息通信组件、如何构建响应式微服务架构，以及如何测试响应式微服务 架构等核心主题，并基于这些核心主题给出具体的案例分析。\n《Spring响应式微服务：Spring Boot 2+Spring 5+Spring Cloud实战》面向立志于成为微服务架构师（尤其是响应式微服务架构师）的后端服务开发人员，读者不需要有 很高的技术水平，也不限于特定的开发语言，但熟悉 Java EE 常见技术并掌握一定异步编程模型和分布式架构的基本概念有助于更好地理解书中的内容。同时，本书也可以供具备不同技术体系的架构师同行参考，希 望能给日常研发和管理工作带来启发和帮助。","price":"75.00元"},{"rating":{"max":10,"numRaters":2,"average":"0.0","min":0},"subtitle":"基于Spring Boot、Spring Cloud、Docker","author":["郑天民"],"pubdate":"2018-12","tags":[{"count":2,"name":"架构","title":"架构"},{"count":2,"name":"技术","title":"技术"},{"count":1,"name":"计算机","title":"计算机"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29963738.jpg","binding":"","translator":[],"catalog":"第1章 微服务架构设计 1\n1.1 直面微服务架构 1\n1.1.1 分布式系统与微服务架构 1\n1.1.2 微服务架构的优势与挑战 3\n1.1.3 实施微服务架构 5\n1.2 服务建模方法 6\n1.2.1 服务的模型 6\n1.2.2 服务的边界 7\n1.2.3 服务的数据 7\n1.3 服务拆分与集成 8\n1.3.1 服务拆分 8\n1.3.2 服务集成 9\n1.4 微服务架构的基础组件和关键要素 10\n1.4.1 微服务架构的基础组件 11\n1.4.2 微服务架构的关键元素 11\n1.5 实现微服务架构 13\n1.5.1 微服务架构技术体系 13\n1.5.2 微服务架构实现技术选型 14\n1.6 案例分析 17\n1.7 全书架构 18\n1.8 本章小结 19\n第2章 使用Spring Boot构建服务 21\n2.1 引入Spring Boot 21\n2.2 基于Spring Boot的第一个服务 23\n2.2.1 环境准备 23\n2.2.2 实现RESTful服务 24\n2.3 Spring Boot常见功能 28\n2.3.1 集成Spring Data 28\n2.3.2 集成消息中间件 37\n2.3.3 系统监控 39\n2.4 Spring Boot基本原理 44\n2.5 本章小结 46\n第3章 Spring Cloud Netflix Eureka与服务治理 47\n3.1 服务治理解决方案 48\n3.1.1 服务治理的需求和模型 48\n3.1.2 服务治理的基本方案 49\n3.2 构建Eureka服务 52\n3.2.1 构建单个Eureka服务器 52\n3.2.2 构建Eureka服务器集群 55\n3.3 使用Eureka注册和发现服务 57\n3.3.1 通过配置实现服务注册 58\n3.3.2 获取服务注册信息 59\n3.4 Eureka基本架构 61\n3.4.1 Eureka服务注册和发现架构 61\n3.4.2 Eureka高可用架构 64\n3.4.3 Eureka区域亲和性 65\n3.5 本章小结 66\n第4章 Spring Cloud Netflix Ribbon与负载均衡 67\n4.1 负载均衡 68\n4.1.1 负载均衡的类型 68\n4.1.2 负载均衡的算法 70\n4.2 使用Ribbon实现客户端负载均衡 71\n4.2.1 Spring Cloud Netflix Ribbon简介 71\n4.2.2 使用DiscoveryClient查找服务 72\n4.2.3 通过RestTemplate调用服务 74\n4.3 Ribbon基本架构 78\n4.3.1 Ribbon核心机制 79\n4.3.2 Ribbon负载均衡策略 81\n4.3.3 @LoadBalanced注解与RestTemplate 82\n4.3.4 @RibbonClient注解与自定义负载均衡策略 83\n4.4 本章小结 85\n第5章 Spring Cloud Netflix Hystrix与服务容错 86\n5.1 服务消费者容错思想和模式 87\n5.1.1 服务消费者容错的需求 87\n5.1.2 服务隔离 88\n5.1.3 服务熔断 90\n5.1.4 服务回退 91\n5.2 使用Hystrix实现服务容错 91\n5.2.1 引入Hystrix 92\n5.2.2 使用Hystrix实现服务隔离 93\n5.2.3 使用Hystrix实现服务熔断 96\n5.2.4 使用Hystrix实现服务回退 99\n5.3 Hystrix基本原理 101\n5.3.1 服务隔离 101\n5.3.2 服务熔断 103\n5.3.3 Hystrix配置项 105\n5.4 本章小结 109\n第6章 Spring Cloud Netflix Zuul与API网关 110\n6.1 服务网关的设计理念 111\n6.1.1 服务网关的作用 111\n6.1.2 服务网关的结构和功能 112\n6.2 使用Zuul构建服务网关 113\n6.2.1 构建Zuul服务器 113\n6.2.2 配置Zuul服务路由 115\n6.3 Zuul基本架构 120\n6.3.1 ZuulFilter组件架构 120\n6.3.2 使用Zuul过滤器 124\n6.4 本章小结 129\n第7章 Spring Cloud Config与配置中心 130\n7.1 分布式配置中心方案 131\n7.1.1 分布式配置模型 131\n7.1.2 配置中心实现工具 133\n7.2 构建配置中心服务器 134\n7.2.1 引入Spring Cloud Config 134\n7.2.2 实现基于本地文件系统的配置方案 135\n7.2.3 实现基于Git的配置方案 139\n7.3 使用配置服务 140\n7.3.1 访问配置项 141\n7.3.2 配置数据安全性 145\n7.4 Spring Cloud Config特性 148\n7.4.1 Spring Cloud Config对比Zookeeper 148\n7.4.2 Spring Cloud Config高可用 149\n7.5 本章小结 150\n第8章 Spring Cloud Stream与事件驱动 151\n8.1 事件驱动架构与模型 152\n8.1.1 基本事件驱动架构与实现机制 152\n8.1.2 事件驱动与领域模型 155\n8.2 引入Spring Cloud Stream 157\n8.2.1 Spring Cloud Stream基本架构 157\n8.2.2 Spring Cloud Stream与Spring Integration 159\n8.2.3 Spring Cloud Stream与消息中间件 162\n8.3 实现消息发布者 165\n8.3.1 消息发送场景与实现流程 165\n8.3.2 在服务中添加消息发布者 166\n8.4 实现消息消费者 170\n8.4.1 消息消费场景与实现流程 170\n8.4.2 在服务中添加消息消费者 172\n8.5 本章小结 177\n第9章 Spring Cloud Security与服务安全 178\n9.1 服务访问安全性与OAuth协议 178\n9.1.1 微服务架构中的安全性设计 179\n9.1.2 OAuth协议 180\n9.2 构建OAuth认证服务器 184\n9.2.1 引入Spring Cloud Security 185\n9.2.2 初始化用户与客户端 186\n9.2.3 生成Token 191\n9.3 使用OAuth保护服务访问 195\n9.3.1 集成OAuth认证服务 195\n9.3.2 创建服务访问策略 196\n9.3.3 使用OAuth2RestTemplate传播Token 201\n9.4 本章小结 206\n第10章 Spring Cloud Sleuth与服务监控 207\n10.1 服务监控与Spring Cloud Sleuth 207\n10.1.1 服务监控基本原理 207\n10.1.2 引入Spring Cloud Sleuth 209\n10.2 整合Spring Cloud Sleuth与Zipkin 215\n10.2.1 Zipkin基本结构 215\n10.2.2 引入Zipkin 216\n10.2.3 使用Zipkin跟踪服务调用链路 218\n10.2.4 使用Zipkin实现自定义跟踪 226\n10.3 本章小结 228\n第11章 Spring Test与服务测试 230\n11.1 微服务测试的方法 231\n11.1.1 单元测试 231\n11.1.2 集成测试 233\n11.1.3 端到端测试 233\n11.2 测试Spring Boot应用程序 234\n11.2.1 初始化测试环境 234\n11.2.2 执行单元测试 237\n11.3 使用Mock和注解实施集成测试 241\n11.3.1 使用@JsonTest注解测试JSON数据 242\n11.3.2 使用@DataJpaTest注解测试Repository层 244\n11.3.3 使用Mock测试Service层 248\n11.3.4 使用Mock和@WebMvcTest注解测试Controller层 252\n11.4 消费者驱动的契约测试 254\n11.4.1 面向契约的端对端测试 254\n11.4.2 实现面向契约的端对端测试 257\n11.5 本章小结 266\n第12章 Docker与服务部署 267\n12.1 Docker与微服务架构 267\n12.1.1 Docker的优势 268\n12.1.2 Docker组件与命令 268\n12.2 使用Dockerfile构建服务镜像 272\n12.2.1 Dockerfile命令 272\n12.2.2 使用Dockerfile命令构建镜像 273\n12.3 使用Docker Compose编排服务 276\n12.3.1 Docker Compose组件与命令 276\n12.3.2 使用Docker Compose 279\n12.3.3 Docker Compose案例分析 281\n12.4 本章小结 283\n参考文献 284","pages":"281","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s29963738.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s29963738.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29963738.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30417709\/","id":"30417709","publisher":"人民邮电出版社","isbn10":"7115490902","isbn13":"9787115490902","title":"微服务架构实战","url":"https:\/\/api.douban.com\/v2\/book\/30417709","alt_title":"","author_intro":"郑天民，网名天涯兰，日本足利工业大学信息工程学硕士。10年软件行业从业经验，在医疗、安防和电商行业都有所涉及，前后担任系统分析架构师、部门经理、技术总监等职务，对架构设计和技术管理有丰富的经验和深入的理解。主持过十余个面向研发人员的技术和管理类培训课程，著有《系统架构设计：程序员向架构师转型之路》、《向技术管理者转型：软件开发人员跨越行业、技术、管理的转型思维与实践》、《微服务设计原理与架构》等书籍。","summary":"本书主要包含微服务架构实现过程中所应具备的技术体系和工程实践，围绕实现微服务架构的基础组件和关键要素，我们将讨论使用Spring Boot构建服务、服务治理、负载均衡、服务容错、API网关、配置中心、事件驱动、服务安全、服务监控、服务测试和Docker与服务部署等核心主题，并基于这些核心主题给出具体的案例分析。","price":"59.80"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"Event-Based Java Microservices with Spring Boot and Spring Cloud","author":["Binildas Christudas"],"pubdate":"2019-8-10","tags":[{"count":2,"name":"软件工程","title":"软件工程"},{"count":1,"name":"软件架构","title":"软件架构"},{"count":1,"name":"计算机科学","title":"计算机科学"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s33304847.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"902","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s33304847.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s33304847.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s33304847.jpg"},"alt":"https:\/\/book.douban.com\/subject\/34441352\/","id":"34441352","publisher":"Apress","isbn10":"1484245008","isbn13":"9781484245002","title":"Practical Microservices Architectural Patterns","url":"https:\/\/api.douban.com\/v2\/book\/34441352","alt_title":"","author_intro":"Binildas provides technical architecture consultancy for IT solutions. He has over 20 years of IT experience, mostly in Microsoft and Oracle technologies. Distributed computing and service-oriented integration are his main skills, with extensive hands-on experience in Java and C# programming. A well-known and highly sought-after thought leader, Binil has designed and built many highly scalable middle-tier and integration solutions for several top-notch clients including Fortune 500 companies. He has been previously employed by multiple IT consulting firms including Infosys, India and Tata Consultancy Services and currently works for IBS Software Private Limited, as their chief architect and head of technology where he leads technology and architecture strategies for IBS’s product portfolio.\nBinil is a Sun Certified Programmer (SCJP), Developer (SCJD), Business Component Developer (SCBCD) and Enterprise Architect (SCEA), Microsoft Certified Professional (MCP) and Open Group (TOGAF8) Certified Enterprise Architecture Practitioner. He is also a Licensed Zapthink Architect (LZA) in SOA. IBS has applied for his proposal titled “A Method and a System for Facilitating Multitenancy of Services” to be a patent with the USPTO.","summary":"Take your distributed applications to the next level and see what the reference architectures associated with microservices can do for you. This book begins by showing you the distributed computing architecture landscape and provides an in-depth view of microservices architecture. Following this, you will work with CQRS, an essential pattern for microservices, and get a view of how distributed messaging works. Moving on, you will take a deep dive into Spring Boot and Spring Cloud.\nComing back to CQRS, you will learn how event-driven microservices work with this pattern, using the Axon 2 framework. This takes you on to how transactions work with microservices followed by advanced architectures to address non-functional aspects such as high availability and scalability. In the concluding part of the book you develop your own microservices application using the Axon framework and true BASE transactions, while making it as secure as possible.\nYou will:\nShift from monolith architecture to microservices\nBuild solid architectures without ACID-compliant databases\nWork with transactional systems\nDiscover the high availability principles in microservices","price":"USD 59.99"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"Build reactive and cloud-native microservices with Kotlin using Spring 5 and Spring Boot 2.0","author":["Juan Antonio Medina Iglesias"],"pubdate":"2018-1-29","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29802017.jpg","binding":"平装","translator":[],"catalog":"Understanding Microservices\nGetting Started with Spring Boot 2.0\nCreating RESTful services\nCreating Reactive Microservices\nReactive Spring Data\nCreating Cloud Native Microservices\nCreating Dockers\nScaling Microservices\nTesting Spring Microservices\nMonitoring Microservices\nDeploying Microservices\nBest Practices","pages":"414","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s29802017.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s29802017.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29802017.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30257151\/","id":"30257151","publisher":"Packt Publishing","isbn10":"1788471458","isbn13":"9781788471459","title":"Hands-On Microservices with Kotlin","url":"https:\/\/api.douban.com\/v2\/book\/30257151","alt_title":"","author_intro":"Juan Antonio Medina Iglesias began his career 20 years ago as an indie game developer and worked abroad four countries since then, from embedded software to enterprise applications. He has a lifetime's dedication to software craftsmanship.\nSince 2006, he works at Santander Technology with a talented group of professionals who performed one of the biggest transformations in the banking industry.\nNowadays, he works as a Senior Engineer in the Digital Transformation team within Santander Technology UK.","summary":"Key Features\nWrite easy-to-maintain lean and clean code with Kotlin for developing better microservices\nScale your Microserivces in your own cloud with Docker and Docker Swarm\nExplore Spring 5 functional reactive web programming with Spring WebFlux\nBook Description\nWith Google's inclusion of first-class support for Kotlin in their Android ecosystem, Kotlin's future as a mainstream language is assured. Microservices help design scalable, easy-to-maintain web applications; Kotlin allows us to take advantage of modern idioms to simplify our development and create high-quality services. With 100% interoperability with the JVM, Kotlin makes working with existing Java code easier. Well-known Java systems such as Spring, Jackson, and Reactor have included Kotlin modules to exploit its language features.\nThis book guides the reader in designing and implementing services, and producing production-ready, testable, lean code that's shorter and simpler than a traditional Java implementation. Reap the benefits of using the reactive paradigm and take advantage of non-blocking techniques to take your services to the next level in terms of industry standards. You will consume NoSQL databases reactively to allow you to create high-throughput microservices. Create cloud-native microservices that can run on a wide range of cloud providers, and monitor them. You will create Docker containers for your microservices and scale them. Finally, you will deploy your microservices in OpenShift Online.\nWhat you will learn\nUnderstand microservice architectures and principles\nBuild microservices in Kotlin using Spring Boot 2.0 and Spring Framework 5.0\nCreate reactive microservices that perform non-blocking operations with Spring WebFlux\nUse Spring Data to get data reactively from MongoDB\nTest effectively with JUnit and Kotlin\nCreate cloud-native microservices with Spring Cloud\nBuild and publish Docker images of your microservices\nScaling microservices with Docker Swarm\nMonitor microservices with JMX\nDeploy microservices in OpenShift Online\nWho This Book Is For\nIf you are a Kotlin developer with a basic knowledge of microservice architectures and now want to effectively implement these services on enterprise-level web applications, then this book is for you","price":"$44.99"},{"rating":{"max":10,"numRaters":1,"average":"0.0","min":0},"subtitle":"從Servlet到Spring Boot","author":["林信良"],"pubdate":"2018-5-2","tags":[{"count":1,"name":"软件工程","title":"软件工程"},{"count":1,"name":"计算机科学","title":"计算机科学"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s32299849.jpg","binding":"平装","translator":[],"catalog":"目錄\n第1章 簡介Web應用程式\n第2章 撰寫與設定Servlet\n第3章 請求與回應\n第4章 會話管理\n第5章 Servlet進階API、過濾器與傾聽器\n第6章 使用JSP\n第7章 使用JSTL\n第8章 自訂標籤\n第9章 整合資料庫\n第10章 Web容器安全管理\n第11章 JavaMail入門\n第12章 從模式到框架\n附錄A 如何使用本書專案\n附錄B MySQL入門","pages":"640","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s32299849.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s32299849.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s32299849.jpg"},"alt":"https:\/\/book.douban.com\/subject\/33421201\/","id":"33421201","publisher":"碁峰","isbn10":"9864767852","isbn13":"9789864767854","title":"Servlet＆JSP技術手冊","url":"https:\/\/api.douban.com\/v2\/book\/33421201","alt_title":"","author_intro":"林信良（网名：良葛格）\n学历：台湾大学电机工程学系\n经历：台湾升阳教育训练技术顾问、专业讲师，Oracle授权训练中心讲师\n著作：《Java JDK 5.0学习笔记》、《Java SE 6技术手册》、《Spring技术手册》等\n译作：《Ajax实战手册》、《jQuery实战手册(第2版)》\n个人网站：http:\/\/openhome.cc","summary":"Java權威技術顧問與專業講師 林信良(良葛格) 最新力作！\n- Servlet 4.0新功能介紹\n- 加強Web安全基本觀念\n- 銜接Spring MVC、Spring Boot\n- 提供Lab實作檔案\n‧本書為作者數年來實務教學過程，匯整學員在課程中遇到的觀念、實作、應用或認證考試上等各種問題之學習經驗集合。\n‧基於Servlet 4.0\/Java SE 8重新改版，範例程式碼做了重新審閱與翻新。\n‧介紹OWASP TOP 10、CWE、CVE，討論注入攻擊、會話安全、密碼管理、Java EE安全機制、CSRF等Web安全基本概念。\n‧增加Spring、Spring MVC、Spring Boot入門介紹，認識Web MVC框架與快速開發工具之使用。\n‧涵蓋中文處理、圖片驗證、自動登入、驗證過濾器、壓縮處理、線上檔案管理、郵件傳送等實用範例。\n‧貫穿全書的「微網誌」綜合練習專案，可應用學得之技術，並使用重構來改進應用程式架構。\n‧建議練習的範例提供實作檔案，更能掌握練習重點，IDE操作為本書內容之一，更能與實務結合。","price":"NT 600"},{"rating":{"max":10,"numRaters":1,"average":"0.0","min":0},"subtitle":"Using Jakarta EE, Eclipse MicroProfile, Spring Boot, and the Axon Framework","author":["Vijay Nair"],"pubdate":"2019-9-6","tags":[{"count":1,"name":"软件工程","title":"软件工程"},{"count":1,"name":"计算机科学","title":"计算机科学"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s33476382.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"379","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s33476382.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s33476382.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s33476382.jpg"},"alt":"https:\/\/book.douban.com\/subject\/34823856\/","id":"34823856","publisher":"Apress","isbn10":"1484245423","isbn13":"9781484245422","title":"Practical Domain-Driven Design in Enterprise Java","url":"https:\/\/api.douban.com\/v2\/book\/34823856","alt_title":"","author_intro":"Vijay Nair is Director of Engineering within Oracle’s Financial Services Global Business Unit.  He has around 18 years of experience in architecting and building mission-critical applications in the financial services industry.","summary":"See how Domain-Driven Design (DDD) combines with Jakarta EE MicroProfile or Spring Boot to offer a complete suite for building enterprise-grade applications. In this book you will see how these all come together in one of the most efficient ways to develop complex software.\nPractical Domain-Driven Design in Enterprise Java starts by building out the Cargo Tracker reference application as a monolithic application using the Jakarta EE platform. By doing so, you will map concepts of DDD (bounded contexts, language, and aggregates) to the corresponding available tools (CDI, JAX-RS, and JPA) within the Jakarta EE platform.\nOnce you have completed the monolithic application, you will walk through the complete conversion of the monolith to a microservices-based architecture, again mapping the concepts of DDD and the corresponding available tools within the MicroProfile platform (config, discovery, and fault tolerance). To finish this section, you will examine the same microservices architecture on the Spring Boot platform.\nThe final set of chapters looks at what the application would be like if you used the CQRS and event sourcing patterns. Here you’ll use the Axon framework as the base framework.\nYou will:\nDiscover the DDD architectural principles and use the DDD design patterns\nUse the new Eclipse Jakarta EE platform\nWork with the Spring Boot framework\nImplement microservices design patterns, including context mapping, logic design, entities, integration, testing, and security\nCarry out event sourcing\nApply CQRS","price":"USD 32.99"},{"rating":{"max":10,"numRaters":1,"average":"0.0","min":0},"subtitle":"从Servlet到Spring Boot","author":["林信良"],"pubdate":"2019-4","tags":[],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s32323480.jpg","binding":"平装","translator":[],"catalog":"Chapter 1  Web应用程序简介   1\n1.1  Web应用程序基础   2\n1.1.1  关于HTML   2\n1.1.2  URL、URN与URI   3\n1.1.3  关于HTTP   5\n1.1.4  HTTP请求方法   6\n1.1.5  有关URI编码   9\n1.1.6  后端与前端   11\n1.1.7　Web安全概念   13\n1.2  Servlet\/JSP简介   14\n1.2.1  何谓Web容器   14\n1.2.2  Servlet与JSP的关系   16\n1.2.3  关于MVC\/Model 2   19\n1.2.4  Java EE简介   22\n1.3  重点复习   23\nChapter 2  编写与设置Servlet   24\n2.1  第一个Servlet   25\n2.1.1  准备开发环境   25\n2.1.2  第一个Servlet程序   27\n2.2  在Hello之后   29\n2.2.1  关于HttpServlet   30\n2.2.2  使用@WebServlet   32\n2.2.3  使用web.xml   33\n2.2.4  文件组织与部署   36\n2.3  进阶部署设置   37\n2.3.1  URL模式设置   37\n2.3.2  Web文件夹结构   40\n2.3.3  使用web-fragment.xml   41\n2.4  重点复习   44\n2.5  课后练习   45\nChapter 3  请求与响应   46\n3.1  从容器到HttpServlet   47\n3.1.1  Web容器做了什么   47\n3.1.2  doXXX()方法   49\n3.2  关于HttpServletRequest   52\n3.2.1  处理请求参数   52\n3.2.2　处理请求标头   55\n3.2.3  请求参数编码处理   56\n3.2.4  getReader()、getInputStream()读取内容   58\n3.2.5  getPart()、getParts()取得\n上传文件   62\n3.2.6  使用RequestDispatcher调派请求   67\n3.3  关于HttpServletResponse   73\n3.3.1  设置响应标头、缓冲区   73\n3.3.2  使用getWriter()输出字符   75\n3.3.3  使用getOutputStream()输出\n二进制字符   78\n3.3.4  使用sendRedirect()、\nsendError()   80\n3.4  综合练习   81\n3.4.1  微博应用程序功能概述   82\n3.4.2  实现会员注册功能   83\n3.4.3  实现会员登录功能   88\n3.5  重点复习   89\n3.6  课后练习   90\nChapter 4  会话管理   92\n4.1  会话管理基本原理   93\n4.1.1  使用隐藏域   93\n4.1.2  使用Cookie   96\n4.1.3  使用URI重写   100\n4.2  HttpSession会话管理   102\n4.2.1  使用HttpSession   103\n4.2.2  HttpSession会话管理\n原理   107\n4.2.3  HttpSession与URI重写   109\n4.3  综合练习   111\n4.3.1  登录与注销   111\n4.3.2　会员信息管理   112\n4.3.3　新增与删除信息   116\n4.4  重点复习   118\n4.5  课后练习   119\nChapter 5  Servlet进阶API、过滤\n器与监听器   120\n5.1  Servlet进阶API   121\n5.1.1  Servlet、ServletConfig与GenericServlet   121\n5.1.2  使用ServletConfig   123\n5.1.3  使用ServletContext   126\n5.1.4　使用PushBuilder   128\n5.2  应用程序事件、监听器   130\n5.2.1  ServletContext事件、\n监听器   130\n5.2.2  HttpSession事件、\n监听器   135\n5.2.3  HttpServletRequest事件、\n监听器   141\n5.3  过滤器   142\n5.3.1  过滤器的概念   142\n5.3.2  实现与设置过滤器   144\n5.3.3  请求封装器   149\n5.3.4  响应封装器   153\n5.4  异步处理   157\n5.4.1  AsyncContext简介   158\n5.4.2  异步Long Polling   160\n5.4.3  更多AsyncContext细节   163\n5.4.4　异步Server-Sent Event   164\n5.4.5　使用ReadListener   167\n5.4.6　使用WriteListener   169\n5.5  综合练习   172\n5.5.1  创建UserService   172\n5.5.2  设置过滤器   177\n5.5.3  重构微博   179\n5.6  重点复习   183\n5.7  课后练习   185\nChapter 6  使用JSP   186\n6.1  从JSP到Servlet   187\n6.1.1  JSP生命周期   187\n6.1.2  Servlet至JSP的简单\n转换   191\n6.1.3  指示元素   194\n6.1.4  声明、Scriptlet与表达式\n元素   197\n6.1.5  注释元素   201\n6.1.6  隐式对象   201\n6.1.7  错误处理   204\n6.2  标准标签   208\n6.2.1  、标签   208\n6.2.2  、与简介   209\n6.2.3  深入、与   211\n6.2.4  谈谈Model 1   214\n6.2.5  XML格式标签   216\n6.3  表达式语言(EL)   217\n6.3.1  EL简介   218\n6.3.2  使用EL取得属性   220\n6.3.3  EL隐式对象   222\n6.3.4  EL运算符   223\n6.3.5  自定义EL函数   224\n6.3.6　EL 3.0   226\n6.4  综合练习   227\n6.4.1  改用JSP实现视图   228\n6.4.2  重构UserService与\nmember.jsp   231\n6.4.3  创建register.jsp、index.jsp、user.jsp   234\n6.5  重点复习   242\n6.6  课后练习   243\nChapter 7  使用JSTL   244\n7.1  JSTL简介   245\n7.2  核心标签库   246\n7.2.1  流程处理标签   246\n7.2.2  错误处理标签   249\n7.2.3  网页导入、重定向、URI\n处理标签   250\n7.2.4  属性处理与输出标签   252\n7.3  I18N兼容格式标签库   254\n7.3.1  I18N基础   254\n7.3.2  信息标签   257\n7.3.3  地区标签   259\n7.3.4  格式标签   264\n7.4  XML标签库   267\n7.4.1  XPath、XSLT基础   267\n7.4.2  解析、设置与输出标签   270\n7.4.3  流程处理标签   271\n7.4.4  文件转换标签   272\n7.5  函数标签库   274\n7.6  综合练习   275\n7.6.1  修改index.jsp、\nregister.jsp   275\n7.6.2  修改member.jsp   277\n7.6.3  修改user.jsp   278\n7.7  重点复习   278\n7.8  课后练习   280\nChapter 8  自定义标签   281\n8.1  Tag File自定义标签   282\n8.1.1  Tag File简介   282\n8.1.2  处理标签属性与Body   285\n8.1.3  TLD文件   287\n8.2  Simple Tag自定义标签   288\n8.2.1  Simple Tag简介   288\n8.2.2  了解API架构与生命\n周期   290\n8.2.3  处理标签属性与Body   293\n8.2.4  与父标签沟通   296\n8.2.5  TLD文件   300\n8.3  Tag自定义标签   301\n8.3.1  Tag简介   301\n8.3.2  了解架构与生命周期   302\n8.3.3  重复执行标签Body   304\n8.3.4  处理Body运行结果   306\n8.3.5  与父标签沟通   309\n8.4  综合练习   311\n8.4.1　重构\/使用DAO   312\n8.4.2　加强user.jsp   315\n8.5  重点复习   317\n8.6  课后练习   319\nChapter 9  整合数据库   320\n9.1  JDBC入门   321\n9.1.1  JDBC简介   321\n9.1.2  连接数据库   327\n9.1.3  使用Statement、\nResultSet   331\n9.1.4  使用PreparedStatement、CallableStatement   335\n9.2  JDBC进阶   338\n9.2.1  使用DataSource取得\n连接   338\n9.2.2  使用ResultSet卷动、更新\n数据   341\n9.2.3  批次更新   343\n9.2.4  Blob与Clob   344\n9.2.5  事务简介   350\n9.2.6  metadata简介   356\n9.2.7  RowSet简介   358\n9.3  使用SQL标签库   363\n9.3.1  数据源、查询标签   363\n9.3.2  更新、参数、事务标签   364\n9.4  综合练习   366\n9.4.1  使用JDBC实现DAO   366\n9.4.2  设置JNDI部署描述   369\n9.4.3　实现首页最新信息   370\n9.5  重点复习   374\n9.6  课后练习   375\nChapter 10  Web容器安全管理   376\n10.1  了解与实现Web容器安全\n管理   377\n10.1.1  Java EE安全基本\n概念   377\n10.1.2  声明式基本身份验证   379\n10.1.3  容器基本身份验证\n原理   384\n10.1.4  声明式窗体验证   385\n10.1.5  容器窗体验证原理   386\n10.1.6  使用HTTPS保护\n数据   387\n10.1.7  编程式安全管理   389\n10.1.8  标注访问控制   391\n10.2  综合练习   393\n10.2.1  使用容器窗体验证   393\n10.2.2  设置DataSource-\nRealm   395\n10.3  重点复习   396\n10.4  课后练习   397\nChapter 11  JavaMail入门   398\n11.1  使用JavaMail   399\n11.1.1  发送纯文字邮件   399\n11.1.2  发送多重内容邮件   401\n11.2  综合练习   405\n11.2.1  发送验证账号邮件   405\n11.2.2　验证用户账号   411\n11.2.3　发送重设密码邮件   412\n11.2.4　重新设置密码   415\n11.3  重点复习   418\n11.4  课后练习   419\nChapter 12  Spring起步走   420\n12.1　使用Gradle   421\n12.1.1　下载和设置Gradle   421\n12.1.2　简单的Gradle项目   422\n12.1.3　Gradle与Eclipse   423\n12.2　认识Spring核心   425\n12.2.1　相依注入   425\n12.2.2　使用Spring核心   427\n12.3　重点复习   430\n12.4  课后练习   430\nChapter 13  整合Spring MVC   431\n13.1　初识Spring MVC   432\n13.1.1　链接库或框架   432\n13.1.2　初步套用Spring\nMVC   433\n13.1.3　注入服务对象与\n属性   440\n13.2　逐步善用Spring MVC   444\n13.2.1　简化控制器   444\n13.2.2　建立窗体对象   449\n13.2.3　关于Thymeleaf\n模板   452\n13.3　重点复习   455\n13.4  课后练习   456\nChapter 14  简介Spring Boot   457\n14.1　初识Spring Boot   458\n14.1.1　哈喽！Spring Boot！   458\n14.1.2　实现MVC   461\n14.1.3　使用JSP   464\n14.2　整合IDE   465\n14.2.1　导入Spring Boot\n项目   465\n14.2.2　Spring Tool Suite   466\n14.3　重点复习   467\n14.4  课后练习   468\nAppendix A  如何使用《JSP & Servlet学习笔记（第3版）——从Servlet到Spring Boot》项目   469\nA.1　项目环境配置   470\nA.2　范例项目导入   470\n\n\nJava EE 7\/8 新功能索引\nweb.xml版本变动   33\nweb.xml新增   34\nHttpServletRequest新增getHttpServletMapping()   39\nweb.xml新增   57\nPart新增getSubmittedFileName()   64\nweb.xml新增   76\nHttpServletRequest新增changeSessionId()   104\nServletContext新增setSessionTimeout()   109\n新增PushBuilder   128\n新增HttpSessionIdListener   141\n新增了GenericFilter、HttpFilter类别   145\nServletInputStream非阻断输入   168\nServletOutputStream非阻断输出   170\nExpression Language 3.0   226","pages":"470","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s32323480.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s32323480.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s32323480.jpg"},"alt":"https:\/\/book.douban.com\/subject\/33451083\/","id":"33451083","publisher":"清华大学出版社","isbn10":"7302522456","isbn13":"9787302522454","title":"JSP & Servlet学习笔记（第3版）","url":"https:\/\/api.douban.com\/v2\/book\/33451083","alt_title":"","author_intro":"林信良(网名：良葛格)，毕业于台湾大学电机工程学系。擅长技术写作、翻译与教育培训。喜好研究程序语言、框架、社群，从中学习设计、典范及文化，并利用闲暇之余记录所学技术，涵盖C\/C 、Java、Ruby\/Rails、Python、JavaScript、Haskell、OpenSCAD等领域。目前出版的著作有《JSP & Servlet学习笔记(第2版)》《Spring技术手册》《Java JDK 8 学习笔记》《Java JDK 9 学习笔记》，译作有《Ajax实战手册》《jQuery实战手册（第2版）》。","summary":"JSP & Servlet学习笔记（第3版）——从Servlet到Spring Boot》是作者多年来教学实践经验的总结，汇集了学员在学习JSP & Servlet或认证考试时遇到的概念、操作、应用等各种问题及解决方案\n? 基于Servlet 4.0\/Java SE 8重新改版，无论章节架构还是范例程序代码，都做了全面更新\n? 详细介绍了OWASP TOP10、CWE、CVE，讨论了会话安全、密码管理、Java EE安全机制、CSRF等Web安全基本概念\n? 增加了对Spring、Spring MVC、Spring Boot的入门介绍，认识Web MVC框架与快速开发工具的使用\n? 涵盖了文本处理、图片验证、自动登录、验证过滤器、压缩处理、线上文件管理、邮件发送等实用范例\n? 以“微博”项目贯穿全书，将JSP & Servlet技术应用于实际项目开发之中，并使用重构方式来改进应用程序架构\n? 提供练习的Lab操作文档，方便读者掌握练习重点，将IDE操作纳入教学内容，使读者能与实践结合\n? 《JSP & Servlet学习笔记（第3版）——从Servlet到Spring Boot》适合JSP & Servlet初学者以及广大JSP & Servlet技术应用人员","price":"98.00"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"Explore more than 100 recipes that show how to build robust mobile and web applications with Kotlin, Spring Boot, and Android","author":["Aanand Shekhar Roy","Rashi Karanpuria"],"pubdate":"2018-1-25","tags":[],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29802013.jpg","binding":"平装","translator":[],"catalog":"Installation and working with Environment\nControl flow\nClasses and Objects\nFunctions\nObject oriented programming\nCollections Framework\nHandling File operations in Kotlin\nAnko Commons and Extension function\nAnko Layouts\nDatabases and Dependency Injection\nNetworking and Concurrency\nLambdas and Delegates\nTesting\nWeb services with Kotlin","pages":"434","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29802013.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29802013.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29802013.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30257146\/","id":"30257146","publisher":"Packt Publishing","isbn10":"1788472144","isbn13":"9781788472142","title":"Kotlin Programming Cookbook","url":"https:\/\/api.douban.com\/v2\/book\/30257146","alt_title":"","author_intro":"Aanand Shekhar Roy is a freelance Android developer. His mobile engineering career includes working for various startups and companies, such as Netherlands-based ConceptOffice and U.S.-based startups Consciously.Life and NextFan-FantasyIndyCar.\nHe is also a mentor for the Associate Android Developer Fast Track program by Google on Udacity and mentors a team of 20 software developers. He is also a writer at AndroidPub.\nRashi Karanpuria is a professional Android developer. She started her career by working on a wallet app for a New Zealand based Fintech startup. She has developed projects in various domains such as IOT, AdTech, Business, Social, and live streaming apps. Over the years, she has acquired a deep understanding of the user experience needed to develop a successful mobile application. She combines her design skills with scalable and maintainable code using best practices to create quality products.","summary":"Key Features\nPractical solutions to your common programming problems with Kotlin 1.1\nLeverage the functional power of Kotlin to ease your Android application development\nLearn to use Java code in conjunction with Kotlin\nBook Description\nThe Android team has announced first-class support for Kotlin 1.1. This acts as an added boost to the language and more and more developers are now looking at Kotlin for their application development. This recipe-based book will be your guide to learning the Kotlin programming language.\nThe recipes in this book build from simple language concepts to more complex applications of the language. After the fundamentals of the language, you will learn how to apply the object-oriented programming features of Kotlin 1.1. Programming with Lambdas will show you how to use the functional power of Kotlin.\nThis book has recipes that will get you started with Android programming with Kotlin 1.1, providing quick solutions to common problems encountered during Android app development. You will also be taken through recipes that will teach you microservice and concurrent programming with Kotlin. Going forward, you will learn to test and secure your applications with Kotlin. Finally, this book supplies recipes that will help you migrate your Java code to Kotlin and will help ensure that it's interoperable with Java.\nWhat you will learn\nUnderstand the basics and object-oriented concepts of Kotlin Programming\nExplore the full potential of collection frameworks in Kotlin\nWork with SQLite databases in Android, make network calls, and fetch data over a network\nUse Kotlin's Anko library for efficient and quick Android development\nUncover some of the best features of Kotlin: Lambdas and Delegates\nSet up web service development environments, write servlets, and build RESTful services with Kotlin\nLearn how to write unit tests, integration tests, and instrumentation\/acceptance tests.\nWho This Book Is For\nThis book will appeal to Kotlin developers keen to find solutions for their common programming problems. Java programming knowledge would be an added advantage.","price":"$49.99"},{"rating":{"max":10,"numRaters":1,"average":"0.0","min":0},"subtitle":"Build a modern, full-stack web application using Spring Boot and Vuex","author":["James J. Ye"],"pubdate":"2018-10-26","tags":[{"count":1,"name":"vue","title":"vue"},{"count":1,"name":"to","title":"to"},{"count":1,"name":"set","title":"set"},{"count":1,"name":"proxy","title":"proxy"},{"count":1,"name":"new","title":"new"},{"count":1,"name":"have","title":"have"},{"count":1,"name":"for","title":"for"},{"count":1,"name":"create","title":"create"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s31200249.jpg","binding":"平装","translator":[],"catalog":"Table of Contents\nModern Web Application Development: This is a new era\nVue.js 2 - It Works in the Way You Expected\nSpring 5 - The Right Stack for the Job at Hand\nTaskAgile: A Trello-like task management tool\nData Modeling: Design the foundation of the application\nCode Design: Design for stability and extensibility\nRESTful API Design: Build the language between front-end and back-end\nCreating Application Scaffold: Take off like a rocket\nForm and Validation: Create the User module\nSpring Security: Make our application secure\nState management and i18n: Building home page\nComponents Communication and Real-Time Update: Build the Board module\nFile Processing and Scalability: Write the Card module\nScaling The System: Scale it from architecture level\nPerformance Tuning: Faster, faster, and faster","pages":"","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s31200249.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s31200249.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s31200249.jpg"},"alt":"https:\/\/book.douban.com\/subject\/32306841\/","id":"32306841","publisher":"Packt Publishing","isbn10":"1788836960","isbn13":"9781788836968","title":"Building Applications with Spring 5 and Vue.js 2","url":"https:\/\/api.douban.com\/v2\/book\/32306841","alt_title":"","author_intro":"James J. Ye is an experienced software engineer and architect with a particular interest in full-stack engineering. James works at 6Connex Inc. as VP of Engineering. He manages the offshore engineering team in Suzhou, China. The team is responsible for all the engineering of the Virtual Experience SaaS platform. He has been using Spring since version 2.5.x and Vue.js since version 1.0. He also likes Angular, React, TypeScript, and Python.","summary":"Become efficient in both frontend and backend web development with Spring and Vue\nKey Features\nConnect application’s frontend and backend with Vue, Vuex, and Spring Boot\nLeverage the latest web standards to enhance code performance, readability, and cross-compatibility\nBuild secure full-stack web applications with Spring Security\nBook Description\nBuilding Applications with Spring 5 and Vue.js 2, with its practical approach, helps you become a full-stack web developer. As well as knowing how to write frontend and backend code, a developer has to tackle all problems encountered in the application development life cycle – starting from the simple idea of an application, to the UI and technical designs, and all the way to implementation, testing, production deployment, and monitoring.","price":""},{"rating":{"max":10,"numRaters":4,"average":"0.0","min":0},"subtitle":"A Magnum Journal","author":["Magnum"],"pubdate":"2009-10-31","tags":[{"count":1,"name":"画册","title":"画册"},{"count":1,"name":"摄影","title":"摄影"},{"count":1,"name":"Magnum","title":"Magnum"},{"count":1,"name":"Foto","title":"Foto"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s4423963.jpg","binding":"Hardcover","translator":[],"catalog":"","pages":"264","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s4423963.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s4423963.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s4423963.jpg"},"alt":"https:\/\/book.douban.com\/subject\/4058079\/","id":"4058079","publisher":"Chris Boot","isbn10":"1905712154","isbn13":"9781905712151","title":"Georgian Spring","url":"https:\/\/api.douban.com\/v2\/book\/4058079","alt_title":"","author_intro":"","summary":"In this volume, ten Magnum photographers turn their lenses on contemporary Georgia. Situated on the cusp of Russia and Asia, but with a European culture dating back to the 7th century BC, Georgia was forcibly incorporated into the Soviet Union in 1922. Its independence was restored in 1991, but it then suffered from civil war and a breakdown of its economic infrastructure. In the last decade, however, despite ongoing tensions in its relations with Russia, Georgia has mounted a spirited comeback. Magnum photographers Antoine d’Agata, Jonas Bendiksen, Thomas Dworzak,Martine Franck, Alex Majoli, Gueorgui Pinkhassov,Martin Parr, Paolo Pellegrin,Mark Power and Alec Soth visited the country during spring 2009, each pursuing their own theme (Alec Soth goes in search of the ‘most beautiful woman in Georgia’, for example). All found themselves enchanted by the Georgian people, something strongly conveyed in their photographs as well as in personal text journals which accompany the images. This well-designed volume also includes a foldout map,marked with each photographer’s journey; a chapter showing the best of Magnum photographers’work over 60 years (including by Magnum’s founders Robert Capa from his visit to Georgia with John Steinbeck in 1948 and Henri Cartier-Bresson); and an illuminating introduction by the Paris-based NewYorker writer, and Georgia expert,Wendell Steavenson.","price":"USD 50.00"}]}
