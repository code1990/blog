1	{"count":59,"start":0,"total":59,"books":[{"rating":{"max":10,"numRaters":11,"average":"6.2","min":0},"subtitle":"","author":["谭勇德（Tom）"],"pubdate":"2019-7","tags":[{"count":13,"name":"Spring","title":"Spring"},{"count":5,"name":"java","title":"java"},{"count":4,"name":"Framework","title":"Framework"},{"count":3,"name":"AA-Spring","title":"AA-Spring"},{"count":2,"name":"计算机","title":"计算机"},{"count":2,"name":"架构","title":"架构"},{"count":2,"name":"Java","title":"Java"},{"count":1,"name":"编程","title":"编程"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s33322879.jpg","binding":"平装","translator":[],"catalog":"第1篇  Spring内功心法\n第1章　软件架构设计原则\t2\n1.1  开闭原则\t2\n1.2  依赖倒置原则\t4\n1.3  单一职责原则\t7\n1.4  接口隔离原则\t10\n1.5  迪米特原则\t12\n1.6  里氏替换原则\t14\n1.7  合成复用原则\t19\n1.8  设计原则总结\t20\n第2章　Spring中常用的设计模式\t21\n2.1  为什么要从设计模式开始\t21\n2.1.1  写出优雅的代码\t22\n2.1.2  更好地重构项目\t24\n2.1.3  经典框架都在用设计模式解决问题\t36\n2.2  工厂模式详解\t36\n2.2.1  工厂模式的由来\t36\n2.2.2  简单工厂模式\t37\n2.2.3  工厂方法模式\t41\n2.2.4  抽象工厂模式\t43\n2.2.5  利用工厂模式重构的实践案例\t47\n2.3  单例模式详解\t53\n2.3.1  单例模式的应用场景\t53\n2.3.2  饿汉式单例模式\t53\n2.3.3  懒汉式单例模式\t54\n2.3.4  反射破坏单例\t60\n2.3.5  序列化破坏单例\t61\n2.3.6  注册式单例模式\t68\n2.3.7  线程单例实现ThreadLocal\t74\n2.3.8  单例模式小结\t75\n2.4  原型模式详解\t75\n2.4.1  原型模式的应用场景\t75\n2.4.2  浅克隆\t77\n2.4.3  深克隆\t79\n2.4.4  克隆破坏单例模式\t81\n2.4.5  clone()方法的源码\t82\n2.5  代理模式详解\t82\n2.5.1  代理模式的应用场景\t82\n2.5.2  静态代理\t83\n2.5.3  动态代理\t88\n2.5.4  代理模式与Spring\t107\n2.5.5  静态代理和动态代理的本质区别\t108\n2.5.6  代理模式的优缺点\t109\n2.6  委派模式详解\t109\n2.6.1  委派模式的定义及应用场景\t109\n2.6.2  委派模式在源码中的体现\t111\n2.7  策略模式详解\t114\n2.7.1  策略模式的应用场景\t114\n2.7.2  用策略模式实现选择支付方式的业务场景\t114\n2.7.3  策略模式在JDK源码中的体现\t122\n2.7.4  策略模式的优缺点\t125\n2.7.5  委派模式与策略模式综合应用\t125\n2.8  模板模式详解\t129\n2.8.1  模板模式的应用场景\t129\n2.8.2  利用模板模式重构JDBC操作业务场景\t132\n2.8.3  模板模式在源码中的体现\t136\n2.8.4  模板模式的优缺点\t138\n2.9  适配器模式详解\t139\n2.9.1  适配器模式的应用场景\t139\n2.9.2  重构第三方登录自由适配的业务场景\t141\n2.9.3  适配器模式在源码中的体现\t149\n2.9.4  适配器模式的优缺点\t153\n2.10  装饰者模式详解\t153\n2.10.1  装饰者模式的应用场景\t153\n2.10.2  装饰者模式和适配器模式对比\t163\n2.10.3  装饰者模式在源码中的应用\t163\n2.10.4  装饰者模式的优缺点\t165\n2.11  观察者模式详解\t165\n2.11.1  观察者模式的应用场景\t165\n2.11.2  观察者模式在源码中的应用\t175\n2.11.3  基于Guava API轻松落地观察者模式\t176\n2.11.4  观察者模式的优缺点\t177\n2.12  各设计模式的总结与对比\t177\n2.12.1  GoF 23种设计模式简介\t177\n2.12.2  设计模式之间的关联关系\t178\n2.12.3  Spring中常用的设计模式\t182\n2.13  Spring中的编程思想总结\t183\n第2篇  Spring环境预热\n第3章　Spring的前世今生\t186\n3.1  一切从Bean开始\t187\n3.2  Spring的设计初衷\t188\n3.3  BOP编程伊始\t188\n3.4  理解BeanFactory\t189\n3.5  AOP编程理念\t189\n第4章　Spring 5系统架构\t191\n4.1  核心容器\t192\n4.2  AOP和设备支持\t192\n4.3  数据访问与集成\t193\n4.4  Web组件\t194\n4.5  通信报文\t194\n4.6  集成测试\t194\n4.7  集成兼容\t194\n4.8  各模块之间的依赖关系\t194\n第5章　Spring版本命名规则\t196\n5.1  常见软件的版本命名\t196\n5.2  语义化版本命名通行规则\t197\n5.3  商业软件中常见的修饰词\t197\n5.4  软件版本号使用限定\t198\n5.5  Spring版本命名规则\t199\n第6章　Spring源码下载及构建技巧\t200\n6.1  Spring 5源码下载\t200\n6.2  基于Gradle的源码构建技巧\t201\n6.3  Gradle构建过程中的坑\t207\n第3篇  Spring核心原理\n第7章　用300行代码手写提炼Spring核心原理\t210\n7.1  自定义配置\t210\n7.1.1  配置application.properties文件\t210\n7.1.2  配置web.xml文件\t210\n7.1.3  自定义注解\t211\n7.1.4  配置注解\t212\n7.2  容器初始化\t213\n7.2.1  实现1.0版本\t213\n7.2.2  实现2.0版本\t216\n7.2.3  实现3.0版本\t223\n7.3  运行效果演示\t227\n第8章　一步一步手绘Spring IoC运行时序图\t228\n8.1  Spring核心之IoC容器初体验\t228\n8.1.1  再谈IoC与DI\t228\n8.1.2  Spring核心容器类图\t229\n8.1.3  Web IoC容器初体验\t232\n8.2  基于XML的IoC容器的初始化\t237\n8.2.1  寻找入口\t238\n8.2.2  获得配置路径\t238\n8.2.3  开始启动\t240\n8.2.4  创建容器\t242\n8.2.5  载入配置路径\t243\n8.2.6  分配路径处理策略\t244\n8.2.7  解析配置文件路径\t247\n8.2.8  开始读取配置内容\t249\n8.2.9  准备文档对象\t250\n8.2.10  分配解析策略\t251\n8.2.11  将配置载入内存\t252\n8.2.12  载入<bean>元素\t257\n8.2.13  载入<property>元素\t261\n8.2.14  载入<property>子元素\t264\n8.2.15  载入<list>子元素\t266\n8.2.16  分配注册策略\t267\n8.2.17  向容器注册\t267\n8.3  基于注解的IoC初始化\t270\n8.3.1  注解的前世今生\t270\n8.3.2  定位Bean扫描路径\t271\n8.3.3  读取注解的元数据\t273\n8.3.4  扫描指定包并解析为BeanDefinition\t277\n8.3.5  注册注解BeanDefinition\t283\n8.4  IoC容器初始化小结\t285\n第9章　一步一步手绘Spring DI运行时序图\t287\n9.1  Spring自动装配之依赖注入\t287\n9.1.1  依赖注入发生的时间\t287\n9.1.2  寻找获取Bean的入口\t288\n9.1.3  开始实例化\t293\n9.1.4  选择Bean实例化策略\t297\n9.1.5  执行Bean实例化\t299\n9.1.6  准备依赖注入\t301\n9.1.7  解析属性依赖注入规则\t306\n9.1.8  注入赋值\t310\n9.2  Spring IoC容器中那些鲜为人知的细节\t314\n9.2.1  关于延时加载\t314\n9.2.2  关于FactoryBean和BeanFactory\t317\n9.2.3  再述autowiring\t322\n第10章　一步一步手绘Spring AOP运行时序图\t326\n10.1  Spring AOP初体验\t326\n10.1.1  再述Spring AOP应用场景\t326\n10.1.2  AOP中必须明白的几个概念\t327\n10.1.3  使用Spring AOP的两种方式\t329\n10.1.4  切入点表达式的配置规则\t333\n10.2  Spring AOP源码分析\t334\n10.2.1  寻找入口\t334\n10.2.2  选择代理策略\t338\n10.2.3  调用代理方法\t341\n10.2.4  触发通知\t347\n第11章　一步一步手绘Spring MVC运行时序图\t352\n11.1  初探Spring MVC请求处理流程\t352\n11.2  Spring MVC九大组件\t353\n11.2.1  HandlerMapping\t353\n11.2.2  HandlerAdapter\t353\n11.2.3  HandlerExceptionResolver\t354\n11.2.4  ViewResolver\t354\n11.2.5  RequestToViewNameTranslator\t354\n11.2.6  LocaleResolver\t354\n11.2.7  ThemeResolver\t355\n11.2.8  MultipartResolver\t355\n11.2.9  FlashMapManager\t355\n11.3  Spring MVC源码分析\t355\n11.3.1  初始化阶段\t356\n11.3.2  运行调用阶段\t359\n11.4  Spring MVC优化建议\t367\n第4篇  Spring手写实战\n第12章　环境准备\t370\n12.1  IDEA集成Lombok插件\t370\n12.1.1  安装插件\t370\n12.1.2  配置注解处理器\t373\n12.1.3  使用插件\t374\n12.2  从Servlet到ApplicationContext\t375\n12.3  准备基础配置\t376\n12.3.1  application.properties配置\t377\n12.3.2  pom.xml配置\t377\n12.3.3  web.xml配置\t378\n12.3.4  GPDispatcherServlet\t378\n第13章　IoC顶层结构设计\t380\n13.1  Annotation（自定义配置）模块\t380\n13.1.1  @GPService\t380\n13.1.2  @GPAutowired\t381\n13.1.3  @GPController\t381\n13.1.4  @GPRequestMapping\t382\n13.1.5  @GPRequestParam\t382\n13.2  core（顶层接口）模块\t382\n13.2.1  GPFactoryBean\t382\n13.2.2  GPBeanFactory\t383\n13.3  beans（配置封装）模块\t383\n13.3.1  GPBeanDefinition\t383\n13.3.2  GPBeanWrapper\t384\n13.4  context（IoC容器）模块\t385\n13.4.1  GPAbstractApplicationContext\t385\n13.4.2  GPDefaultListableBeanFactory\t385\n13.4.3  GPApplicationContext\t385\n13.4.4  GPBeanDefinitionReader\t388\n13.4.5  GPApplicationContextAware\t391\n第14章　完成DI模块的功能\t392\n14.1  从getBean()方法开始\t393\n14.2  GPBeanPostProcessor\t395\n第15章　完成MVC模块的功能\t396\n15.1  MVC顶层设计\t396\n15.1.1  GPDispatcherServlet\t396\n15.1.2  GPHandlerMapping\t402\n15.1.3  GPHandlerAdapter\t403\n15.1.4  GPModelAndView\t406\n15.1.5  GPViewResolver\t406\n15.1.6  GPView\t407\n15.2  业务代码实现\t409\n15.2.1  IQueryService\t409\n15.2.2  QueryService\t410\n15.2.3  IModifyService\t410\n15.2.4  ModifyService\t411\n15.2.5  MyAction\t412\n15.2.6  PageAction\t413\n15.3  定制模板页面\t414\n15.3.1  first.html\t414\n15.3.2  404.html\t414\n15.3.3  500.html\t415\n15.4  运行效果演示\t415\n第16章　完成AOP代码织入\t417\n16.1  基础配置\t417\n16.2  完成AOP顶层设计\t418\n16.2.1  GPJoinPoint\t418\n16.2.2  GPMethodInterceptor\t419\n16.2.3  GPAopConfig\t419\n16.2.4  GPAdvisedSupport\t420\n16.2.5  GPAopProxy\t422\n16.2.6  GPCglibAopProxy\t423\n16.2.7  GPJdkDynamicAopProxy\t423\n16.2.8  GPMethodInvocation\t425\n16.3  设计AOP基础实现\t427\n16.3.1  GPAdvice\t427\n16.3.2  GPAbstractAspectJAdvice\t427\n16.3.3  GPMethodBeforeAdvice\t428\n16.3.4  GPAfterReturningAdvice\t429\n16.3.5  GPAfterThrowingAdvice\t430\n16.3.6  接入getBean()方法\t430\n16.4  织入业务代码\t432\n16.4.1  LogAspect\t432\n16.4.2  IModifyService\t433\n16.4.3  ModifyService\t434\n16.5  运行效果演示\t435\n第5篇  Spring数据访问\n第17章　数据库事务原理详解\t438\n17.1  从Spring事务配置说起\t438\n17.2  事务的基本概念\t439\n17.3  事务的基本原理\t439\n17.4  Spring事务的传播属性\t440\n17.5  数据库事务隔离级别\t441\n17.6  Spring中的事务隔离级别\t441\n17.7  事务的嵌套\t442\n17.8  Spring事务API架构图\t444\n17.9  浅谈分布式事务\t444\n第18章　Spring JDBC源码初探\t446\n18.1  异常处理\t447\n18.2  config模块\t448\n18.3  core模块\t450\n18.4  DataSource\t456\n18.5  object模块\t457\n18.6  JdbcTemplate\t458\n18.7  NamedParameterJdbcTemplate\t458\n第19章　基于Spring JDBC手写ORM框架\t459\n19.1  实现思路概述\t459\n19.1.1  从ResultSet说起\t459\n19.1.2  为什么需要ORM框架\t464\n19.2  搭建基础架构\t467\n19.2.1  Page\t467\n19.2.2  ResultMsg\t470\n19.2.3  BaseDao\t471\n19.2.4  QueryRule\t473\n19.2.5  Order\t479\n19.3  基于Spring JDBC实现关键功能\t480\n19.3.1  ClassMappings\t480\n19.3.2  EntityOperation\t483\n19.3.3  QueryRuleSqlBuilder\t488\n19.3.4  BaseDaoSupport\t498\n19.4  动态数据源切换的底层原理\t507\n19.4.1  DynamicDataSource\t508\n19.4.2  DynamicDataSourceEntry\t509\n19.5  运行效果演示\t510\n19.5.1  创建Member实体类\t510\n19.5.2  创建Order实体类\t511\n19.5.3  创建MemberDao\t512\n19.5.4  创建OrderDao\t512\n19.5.5  修改db.properties文件\t514\n19.5.6  修改application-db.xml文件\t515\n19.5.7  编写测试用例\t516\n第6篇  Spring经验分享\n第20章　Spring 5新特性总结\t520\n20.1  升级到Java SE 8和Java EE 7\t520\n20.2  反应式编程模型\t521\n20.3  使用注解进行编程\t521\n20.4  函数式编程\t522\n20.5  使用 REST 端点执行反应式编程\t523\n20.6  支持HTTP\/2\t523\n20.7  Kotlin和Spring WebFlux\t523\n20.8  使用Lambda表达式注册Bean\t524\n20.9  Spring Web MVC 支持最新的 API\t524\n20.10  使用JUnit 5执行条件和并发测试\t525\n20.11  包清理和弃用\t526\n20.12  Spring核心和容器的一般更新\t526\n20.13  我如何看Spring 5\t527\n第21章　关于Spring的经典高频面试题\t528\n21.1  什么是Spring框架，Spring框架有哪些主要模块\t528\n21.2  使用Spring框架能带来哪些好处\t528\n21.3  什么是控制反转（IoC），什么是依赖注入\t529\n21.4  在Java中依赖注入有哪些方式\t529\n21.5  BeanFactory和ApplicationContext有什么区别\t530\n21.6  Spring提供几种配置方式来设置元数据\t530\n21.7  如何使用XML配置方式配置Spring\t531\n21.8  Spring提供哪些配置形式\t532\n21.9  怎样用注解的方式配置Spring\t533\n21.10  请解释Spring Bean的生命周期\t534\n21.11  Spring Bean作用域的区别是什么\t535\n21.12  什么是Spring Inner Bean\t535\n21.13  Spring中的单例Bean是线程安全的吗\t536\n21.14  请举例说明如何在Spring中注入一个Java集合\t536\n21.15  如何向Spring Bean中注入java.util.Properties\t537\n21.16  请解释Spring Bean的自动装配\t538\n21.17  自动装配有哪些局限性\t538\n21.18  请解释各种自动装配模式的区别\t539\n21.19  请举例解释@Required注解\t539\n21.20  请举例说明@Qualifier注解\t540\n21.21  构造方法注入和设值注入有什么区别\t540\n21.22  Spring中有哪些不同类型的事件\t541\n21.23  FileSystemResource和ClassPathResource有什么区别\t542\n21.24  Spring中用到了哪些设计模式\t542\n21.25  在Spring中如何更有效地使用JDBC\t543\n21.26  请解释Spring中的IoC容器\t543\n21.27  在Spring中可以注入null或空字符串吗\t543","pages":"560","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s33322879.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s33322879.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s33322879.jpg"},"alt":"https:\/\/book.douban.com\/subject\/34466260\/","id":"34466260","publisher":"电子工业出版社","isbn10":"7121367416","isbn13":"9787121367410","title":"Spring 5核心原理与30个类手写实战","url":"https:\/\/api.douban.com\/v2\/book\/34466260","alt_title":"","author_intro":"谭勇德（Tom）\n10余年Java开发经验。\n咕泡学院联合创始人。\n在大型IT公司担任过CTO、系统架构师。\n精通Java语言、JS、CSS、AS、PHP等；负责过多个大型分布式系统的微服务架构的技术改造；多年以来对Spring框架有深入研究及独特见解；开发过多套企业内部UI框架和ORM框架；热衷于分享经验，共同进步。\n格言：不只做一个技术者，更要做一个思考者。","summary":"《Spring 5核心原理与30个类手写实战》基于编程开发实践，不仅深度解析Spring 5的原理与新特性，更从环境准备、顶层结构设计、数据访问等方面一步步地推导出Spring的设计原理。在每个知识点上，均以大量的经典代码案例辅助讲解，使理论紧密联系实际。最后手写30个类，以体会Spring作者的创作过程，让每一位读者学以致用。\n对于立志成为Java架构师的技术人员，以及对以Spring为核心的Java Web开发感兴趣的计算机专业高校生、在职Java开发人员来说，本书是一本具备超强实战意义的技术升级指南。读者通过本书可以看源码不再“晕车”，轻松找到入口；系统学习设计思想，提高解决问题的效率；培养架构思维能力，以及自驱学习能力。","price":"118.00"},{"rating":{"max":10,"numRaters":2,"average":"0.0","min":0},"subtitle":"Master reactive programming, microservices, Cloud Native applications, and more","author":["Ranga Rao Karanam"],"pubdate":"2017-6-28","tags":[{"count":1,"name":"spring5","title":"spring5"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29695376.jpg","binding":"Paperback","translator":[],"catalog":"Table of Contents\n1: EVOLUTION TO SPRING FRAMEWORK 5.0\n2: DEPENDENCY INJECTION\n3: BUILDING A WEB APPLICATION WITH SPRING MVC\n4: EVOLUTION TOWARD MICROSERVICES AND CLOUD-NATIVE APPLICATIONS\n5: BUILDING MICROSERVICES WITH SPRING BOOT\n6: EXTENDING MICROSERVICES\n7: ADVANCED SPRING BOOT FEATURES\n8: SPRING DATA\n9: SPRING CLOUD\n10: SPRING CLOUD DATA FLOW\n11: REACTIVE PROGRAMMING\n12: SPRING BEST PRACTICES\n13: WORKING WITH KOTLIN IN SPRING","pages":"496","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s29695376.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s29695376.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29695376.jpg"},"alt":"https:\/\/book.douban.com\/subject\/27091398\/","id":"27091398","publisher":"Packt Publishing","isbn10":"1787123170","isbn13":"9781787123175","title":"Mastering Spring 5.0","url":"https:\/\/api.douban.com\/v2\/book\/27091398","alt_title":"","author_intro":"Ranga Karanam\nRanga Rao Karanam is a programmer, trainer, and architect. His areas of interest include Cloud Native Applications, microservices, evolutionary design, high-quality code, DevOps, BDD, TDD, and refactoring. He loves consulting for start-ups on developing scalable, component-based Cloud Native applications, and following modern development practices such as BDD, continuous delivery, and DevOps. He loves the freedom the Spring Framework brings to developing enterprise Java applications.\nRanga started in28minutes with the vision of creating high-quality courses on developing Cloud Native Java applications. He is looking forward to enhancing his already considerable success--75,000 students on Udemy and 35,000 subscribers on YouTube.\nRanga likes to play cricket and go hiking. His dream is to spend a year hiking the Himalayas.","summary":"Spring 5.0 is due to arrive with a myriad of new and exciting features that will change the way we’ve used the framework so far. This book will show you this evolution—from solving the problems of testable applications to building distributed applications on the cloud.\nThe book begins with an insight into the new features in Spring 5.0 and shows you how to build an application using Spring MVC. You will realize how application architectures have evolved from monoliths to those built around microservices. You will then get a thorough understanding of how to build and extend microservices using Spring Boot. You will also understand how to build and deploy Cloud-Native microservices with Spring Cloud. The advanced features of Spring Boot will be illustrated through powerful examples. We will be introduced to a JVM language that’s quickly gaining popularity - Kotlin. Also, we will discuss how to set up a Kotlin project in Eclipse.\nBy the end of the book, you will be equipped with the knowledge and best practices required to develop microservices with the Spring Framework.\nWhat You Will Learn\nExplore the new features in Spring Framework 5.0\nBuild microservices with Spring Boot\nGet to know the advanced features of Spring Boot in order to effectively develop and monitor applications\nUse Spring Cloud to deploy and manage applications on the Cloud\nUnderstand Spring Data and Spring Cloud Data Flow\nUnderstand the basics of reactive programming\nGet to know the best practices when developing applications with the Spring Framework\nCreate a new project using Kotlin and implement a couple of basic services with unit and integration testing","price":"$43.10"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"From Novice to Professional","author":["Joseph B. Ottinger","Andrew Lombardi"],"pubdate":"","tags":[],"origin_title":"Beginning Spring 5","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s33548975.jpg","binding":"平装","translator":[],"catalog":"","pages":"367","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s33548975.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s33548975.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s33548975.jpg"},"alt":"https:\/\/book.douban.com\/subject\/34932622\/","id":"34932622","publisher":"","isbn10":"1484244869","isbn13":"9781484244869","title":"Beginning Spring 5","url":"https:\/\/api.douban.com\/v2\/book\/34932622","alt_title":"Beginning Spring 5","author_intro":"Joseph B. Ottinger (@josephbottinger) is a distributed systems architect with\nexperience in many cloud platforms. He was the editor-in-chief of both Java Developer\nJournal and TheServerSide.com and has also contributed to many, many publications,\nopen source projects, and commercial projects over the years, using many different\nlanguages (but primarily Java, Python, and JavaScript). He’s also a previously published\nauthor online (with too many publications to note individually) and in print, through\nApress.\nAndrew Lombardi (@kinabalu) is a veteran entrepreneur and systems engineer. He’s\nrun the successful boutique consulting firm Mystic Coders for 18 years. With his team\nthey’ve helped companies as large as Walmart and firms with problems as interesting\nas helicopter simulation. A few years ago, he authored a book on WebSocket for O’Reilly\nwhich focused on the server and client components all written with JavaScript and Node.\njs. He firmly believes that the best thing he’s done so far is being a great dad.","summary":"Spring is an application framework providing Dependency Injection features for the Java\nVirtual Machine – features that enable testability, reliability, and flexibility to application\ndevelopers. It changed how Java is developed, and here’s how and why.","price":"USD32.99"},{"rating":{"max":10,"numRaters":1,"average":"0.0","min":0},"subtitle":"","author":["Dinesh Rajput"],"pubdate":"2017-12-11","tags":[{"count":2,"name":"设计模式","title":"设计模式"},{"count":2,"name":"spring","title":"spring"},{"count":1,"name":"软件工程","title":"软件工程"},{"count":1,"name":"计算机","title":"计算机"},{"count":1,"name":"分布式","title":"分布式"},{"count":1,"name":"Spring","title":"Spring"},{"count":1,"name":"AA-框架","title":"AA-框架"},{"count":1,"name":"AA-Spring","title":"AA-Spring"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29579843.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"411","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29579843.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29579843.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29579843.jpg"},"alt":"https:\/\/book.douban.com\/subject\/27171536\/","id":"27171536","publisher":"Packt Publishing - ebooks Account","isbn10":"1788299450","isbn13":"9781788299459","title":"Spring 5 Design Patterns","url":"https:\/\/api.douban.com\/v2\/book\/27171536","alt_title":"","author_intro":"","summary":"","price":"USD 44.99"},{"rating":{"max":10,"numRaters":1,"average":"0.0","min":0},"subtitle":"A practical, comprehensive, and user-friendly approach to building microservices in Spring","author":["Rajesh R V"],"pubdate":"2017-10-5","tags":[{"count":2,"name":"Spring","title":"Spring"},{"count":2,"name":"Microservices","title":"Microservices"},{"count":1,"name":"程序设计","title":"程序设计"},{"count":1,"name":"Programming","title":"Programming"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29505272.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"334","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29505272.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29505272.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29505272.jpg"},"alt":"https:\/\/book.douban.com\/subject\/27099737\/","id":"27099737","publisher":"Packt Publishing","isbn10":"1787127680","isbn13":"9781787127685","title":"Spring 5.0 Microservices - Second Edition","url":"https:\/\/api.douban.com\/v2\/book\/27099737","alt_title":"","author_intro":"About the Author\nRajesh R VRajesh R V is a seasoned IT architect with extensive experience in diversified technologies and more than 18 years of airline IT experience. He received a degree in computer engineering from the University of Cochin, India, and he joined the JEE community during the early days of EJB. During his course as an architect, he worked on many large-scale, mission-critical projects, including the new generation Passenger Reservation System (iFly Res) and next generation Cargo Reservation System (Skychain, CROAMIS) in the Airline domain. At present, as a chief architect at Emirates, Rajesh handles the solution architecture portfolio spread across various capabilities, such as JEE, SOA, NoSQL, IoT, cognitive computing, mobile, UI, and integration. At Emirates, the Open Travel Platform (OTP) architected by him earned the group the prestigious 2011 Red Hat Innovation Award in the Carved Out Costs category. In 2011, he introduced the innovative concept of the Honeycomb architecture based on the hexagonal architecture pattern for transforming the legacy mainframe system. Rajesh has a deep passion for technology and architecture. He also holds several certifications, such as BEA Certified Weblogic Administrator, Sun Certified Java Enterprise Architect, Open Group Certified TOGAF practitioner, Licensed ZapThink Architect in SOA, and IASA global CITA-A Certified Architecture Specialist. He has written Spring Microservices and reviewed Service-Oriented Java Business Integration by Packt Publishing.\nRead more","summary":"About This Book\nUpdate existing applications to integrate reactive streams released as a part of Spring 5.0Learn how to use Docker and Mesos to push the boundaries and build successful microservicesUpgrade the capability model to implement scalable microservices\nWho This Book Is For\nThis book is ideal for Spring developers who want to build cloud-ready, Internet-scale applications, and simple RESTful services to meet modern business demands.\nWhat You Will Learn\nFamiliarize yourself with the microservices architecture and its benefitsFind out how to avoid common challenges and pitfalls while developing microservicesUse Spring Boot and Spring Cloud to develop microservicesHandle logging and monitoring microservicesLeverage Reactive Programming in Spring 5.0 to build modern cloud native applicationsManage internet-scale microservices using Docker, Mesos, and MarathonGain insights into the latest inclusion of Reactive Streams in Spring and make applications more resilient and scalable\nIn Detail\nThe Spring Framework is an application framework and inversion of the control container for the Java platform. The framework's core features can be used by any Java application, but there are extensions to build web applications on top of the Java EE platform.\nThis book will help you implement the microservice architecture in Spring Framework, Spring Boot, and Spring Cloud. Written to the latest specifications of Spring that focuses","price":"USD 49.99"},{"rating":{"max":10,"numRaters":1,"average":"0.0","min":0},"subtitle":"","author":["Sherwin John Calleja Tragura"],"pubdate":"2017-9","tags":[{"count":1,"name":"计算机","title":"计算机"},{"count":1,"name":"Spring","title":"Spring"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29663473.jpg","binding":"平装","translator":[],"catalog":"Table of Contents\n1: GETTING STARTED WITH SPRING\n2: LEARNING DEPENDENCY INJECTION (DI)\n3: IMPLEMENTING MVC DESIGN PATTERNS\n4: SECURING SPRING MVC APPLICATIONS\n5: CROSS-CUTTING THE MVC\n6: FUNCTIONAL PROGRAMMING\n7: REACTIVE PROGRAMMING\n8: REACTIVE WEB APPLICATIONS\n9: SPRING BOOT 2.0\n10: THE MICROSERVICES\n11: BATCH AND MESSAGE-DRIVEN PROCESSES\n12: OTHER SPRING 5 FEATURES\n13: TESTING SPRING 5 COMPONENTS","pages":"670","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29663473.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29663473.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29663473.jpg"},"alt":"https:\/\/book.douban.com\/subject\/27663142\/","id":"27663142","publisher":"packtpub","isbn10":"1787128318","isbn13":"9781787128316","title":"spring 5.0 cookbook","url":"https:\/\/api.douban.com\/v2\/book\/27663142","alt_title":"","author_intro":"Sherwin John Calleja Tragura started his career as a student assistant and a mathematics tutor during his college years at the University of the Philippines Los Baños, Laguna, Philippines. With meager resources, he graduated as a Department of Science and Technology (DOST) R.A. 7687 scholar under the Bachelor Of Computer Science degree. Immediately after graduation, he took up the offer to teach CMSC 150 (numerical and symbolic computation) at the Institute of Computer Science and completed his master's degree in computer science simultaneously. He became part of the International Rice Research Institute (IRRI) software team, which gave him the opportunity to use Struts, Spring, and RCP frameworks in many of its software projects.\nBased on his experience at IRRI, he was given an opportunity to work as a Java analyst in various companies in Manila, such as ABSI, PHILAM- AIG, and Ayala Systems and Technology Inc. (ASTI). These companies have strengthened his skill set through training in Java and Java Enterprise platforms and some popular tools such as EMC Documentum, Alfresco Document, and Records Management System. He got his first career certification in the EMC Documentum Proven Associate course (E20-120).\nAfter a few years, he decided to become an independent consultant and trainer, providing services mostly for Java-based projects, Alfresco, and Apache OFBiz requirements. He started his venture as a Java-JEE Bootcamp with 77Global and is currently a trainer at Software Laboratory Inc. (SLI), Alibata Business and Technology Services Inc. and Nityo Infotech, Philippines. He also conducts training and talks around the Philippines, for instance, in Cebu City and Tacloban City.\nSherwin has contributed as a technical reviewer to various books by Packt Publishing, including Delphi Cookbook, Alfresco 3 Records Management, Alfresco Share, and Mastering Hibernate. He owes everything to Packt Publishing with the unforgettable experience in the technical reviewing tasks, which have been an essential part of his career.\nAs an Oracle Certified Associate and Java SE 7 Programmer (1Z0-803), Sherwin will continue his mandate as a technical trainer, developer, architect, and designer to help the industry improve its standards in information technology. He will always be an epitome of honor, excellence, and service when it comes to software development and business intelligence.","summary":"The Spring framework has been the go-to framework for Java developers for quite some time. It enhances modularity, provides more readable code, and enables the developer to focus on developing the application while the underlying framework takes care of transaction APIs, remote APIs, JMX APIs, and JMS APIs.\nThe upcoming version of the Spring Framework has a lot to offer, above and beyond the platform upgrade to Java 9, and this book will show you all you need to know to overcome common to advanced problems you might face.\nEach recipe will showcase some old and new issues and solutions, right from configuring Spring 5.0 container to testing its components. Most importantly, the book will highlight concurrent processes, asynchronous MVC and reactive programming using Reactor Core APIs. Aside from the core components, this book will also include integration of third-party technologies that are mostly needed in building enterprise applications.\nBy the end of the book, the reader will not only be well versed with the essential concepts of Spring, but will also have mastered its latest features in a solution-oriented manner.","price":"USD 49.9"},{"rating":{"max":10,"numRaters":24,"average":"7.5","min":0},"subtitle":"","author":["柳伟卫"],"pubdate":"2018-10-1","tags":[{"count":27,"name":"Spring","title":"Spring"},{"count":18,"name":"Spring5","title":"Spring5"},{"count":15,"name":"微服务","title":"微服务"},{"count":12,"name":"软件架构","title":"软件架构"},{"count":12,"name":"java","title":"java"},{"count":9,"name":"分布式","title":"分布式"},{"count":5,"name":"全面","title":"全面"},{"count":4,"name":"实用","title":"实用"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29914176.jpg","binding":"平装","translator":[],"catalog":"目录\n第1章Spring 5 概述\n1.1 Spring 与 Java EE\n1.1.1Java 平台发展简史\n1.1.2Java EE 现状\n重点1.1.3Spring 与 Java EE 的关系\n1.2 Spring 简史\n1.2.1挑衅 EJB\n1.2.2化繁为简\n难点1.2.3Spring 设计哲学\n重点1.2.4面向未来的 Spring\n1.3 Spring 5 的新特性\n1.3.1基准升级\n1.3.2兼容 JDK 9\n1.3.3响应式编程模型\n1.3.4函数式编程\n1.3.5多语言的支持\n1.3.6支持 HTTP\/2\n1.3.7清理了代码\n1.3.8更强的测试套件\n1.4 快速开启第一个 Spring 应用\n实战1.4.1Hello World项目概述\n重点1.4.2使用 Maven\n重点1.4.3使用 Gradle\n重点1.4.4创建服务类\n1.4.5创建打印器\n1.4.6创建应用主类\n1.4.7运行\n1.5 Gradle 与 Maven 的抉择\n1.5.1Maven 概述\n1.5.2Gradle 概述\n1.5.3Gradle 与 Maven 对比\n第2章Spring 框架核心概念\n2.1 Spring 框架总览\n重点2.1.1Spring 的狭义与广义\n2.1.2Spring 框架概述\n难点2.1.3Spring 框架常用模块\n2.1.4Spring 设计模式\n2.2 IoC 容器\n难点2.2.1依赖注入与控制反转\n难点2.2.2IoC 容器和 bean\n重点2.2.3配置元数据\n重点2.2.4实例化容器\n2.2.5使用容器\n2.2.6bean 的命名\n2.2.7实例化 bean 的方式\n重点2.2.8注入方式\n重点2.2.9实战：依赖注入的例子\n2.2.10依赖注入的详细配置\n难点2.2.11使用 depends-on\n2.2.12延迟加载 bean\n重点2.2.13自动装配\n2.2.14方法注入\n难点2.2.15bean scope\n重点2.2.16singleton bean 与 prototype bean\n2.2.17request、session、application 及 websocket scope\n2.2.18自定义 scope\n2.2.19实战：自定义 scope 的例子\n2.2.20自定义 bean 的生命周期\n难点\n2.2.21bean 定义继承\n难点\n2.2.22容器扩展点\n2.2.23实战：容器扩展的例子\n重点2.2.24基于注解的配置\n2.2.25基于注解的配置与基于 XML 的配置\n重点2.2.26类路径扫描及组件管理\n2.2.27JSR-330 规范注解\n重点2.2.28基于 Java 的容器配置\n重点2.2.29环境抽象\n2.2.30国际化\n2.2.31事件与监听器\n2.3 AOP 编程\n2.3.1AOP 概述\n重点2.3.2AOP 核心概念\n2.3.3Spring AOP\n难点2.3.4AOP 代理\n2.3.5使用 @AspectJ\n2.3.6实战：使用 @AspectJ 的例子\n重点2.3.7基于 XML 的 AOP\n2.3.8实战：基于 XML 的 AOP 例子\n2.3.9如何选择 AOP 类型\n难点2.3.10理解代理机制\n2.3.11创建 @AspectJ 代理\n2.4 资源处理\n重点2.4.1常用资源接口\n2.4.2内置资源接口实现\n2.4.3ResourceLoader\n重点2.4.4ResourceLoaderAware\n2.4.5资源作为依赖\n2.5 Bean 验证\n重点2.5.1Bean 验证概述\n2.5.2Validator 接口\n2.6 表达式语言 SpEL\n2.6.1SpEL 概述\n难点2.6.2表达式接口\n2.6.3对于 bean 定义的支持\n重点2.6.4常用表达式\n2.6.5实战：使用 SpEL 的例子\n2.7 数据缓冲器和编解码器\n2.7.1数据缓冲器\n2.7.2编解码器\n2.8 空安全\n2.8.1空安全概述\n2.8.2如何使用\n第3章测试\n3.1 测试概述\n3.1.1传统的测试所面临的问题\n3.1.2如何破解测试面临的问题\n3.2 测试的类型和范围\n3.2.1测试类型\n3.2.2测试范围\n3.2.3测试比例\n3.3 如何进行微服务的测试\n3.3.1微服务的单元测试\n3.3.2mock 与 stub 的区别\n3.3.3微服务的集成测试\n3.3.4微服务的系统测试\n第4章单元测试\n4.1 Mock 对象\n重点4.1.1Environment\n4.1.2JNDI\n重点4.1.3Servlet API\n新功能4.1.4Spring Web Reactive\n4.2 测试工具类\n4.2.1测试工具\n4.2.2测试 Spring MVC\n第5章集成测试\n5.1 集成测试概述\n难点5.1.1上下文管理与缓存\n重点5.1.2测试夹具的依赖注入\n重点5.1.3事务管理\n重点5.1.4集成测试类\n测试5.1.5JDBC\n5.2 测试相关的注解\n5.2.1@BootstrapWith\n5.2.2@ContextConfiguration\n5.2.3@WebAppConfiguration\n5.2.4@ContextHierarchy\n5.2.5@ActiveProfiles\n5.2.6@TestPropertySource\n5.2.7@DirtiesContext\n5.2.8@TestExecutionListeners\n5.2.9@Commit\n5.2.10@Rollback\n5.2.11@BeforeTransaction\n5.2.12@AfterTransaction\n5.2.13@Sql\n5.2.14@SqlConfig\n5.2.15@SqlGroup\n5.2.16标准注解\n5.2.17Spring JUnit 4 注解\n新功能5.2.18Spring JUnit Jupiter 注解\n5.2.19元注解\n难点5.3 Spring TestContext 框架\n5.3.1Spring TestContext 框架概述\n5.3.2核心抽象\n5.3.3引导 TestContext\n5.3.4TestExecutionListener 配置\n难点5.3.5上下文管理\n5.3.6测试夹具的依赖注入\n难点5.3.7如何测试 request bean 和 session bean\n重点5.3.8事务管理\n5.3.9执行 SQL 脚本\n新功能5.3.10并行测试\n新功能5.3.11SpringExtension 测试类\n5.4 Spring MVC Test 框架\n5.4.1服务端测试概述\n难点5.4.2选择测试策略\n重点5.4.3设置测试功能\n重点5.4.4执行请求\n难点5.4.5定义期望\n5.4.6注册过滤器\n5.4.7脱离容器的测试\n5.4.8实战：服务端测试的例子\n5.4.9HtmlUnit 集成\n5.4.10客户端 REST 测试\n5.4.11实战：客户端 REST 测试的例子\n★新功能  5.5 WebTestClient\n5.5.1WebTestClient 概述\n5.5.2设置 WebTestClient\n5.5.3如何编写测试用例\n5.5.4处理空内容\n5.5.5处理 JSON\n5.5.6处理流式响应\n第6章事务管理\n6.1 事务管理概述\n6.1.1Spring 事务管理优势\n难点6.1.2Spring 事务模型\n6.2 通过事务实现资源同步\n6.2.1高级别的同步方法\n6.2.2低级别的同步方法\n6.2.3TransactionAwareDataSourceProxy\n6.3 声明式事务管理\n重点6.3.1声明式事务管理\n6.3.2实战：声明式事务管理的例子\n重点6.3.3事务回滚\n6.3.4配置不同的事务策略\n重点6.3.5@Transactional 详解\n重点6.3.6事务传播机制\n6.4 编程式事务管理\n6.4.1编程式事务管理概述\n6.4.2声明式事务管理和编程式事务管理\n6.5 事件中的事务\n第7章DAO\n7.1 DAO 概述\n7.2 DAO 常用异常类\n7.3 DAO 常用注解\n第8章基于 JDBC 的数据访问\n8.1 Spring JDBC 概述\n8.1.1不同的 JDBC 访问方式\n8.1.2Spring JDBC 包\n8.2 JDBC 核心类\n重点8.2.1JdbcTemplate\n8.2.2实战：使用 JdbcTemplate 的例子\n8.2.3NamedParameterJdbcTemplate\n8.2.4SQLExceptionTranslator\n重点8.2.5执行语句\n重点8.2.6运行查询\n重点8.2.7更新数据\n8.2.8检索自动生成的主键\n8.3 控制数据库连接\n8.4 批处理\n8.4.1使用 JdbcTemplate 实现批处理\n8.4.2批量更新 List\n8.4.3多个批次更新\n8.5 SimpleJdbc 类\n8.5.1使用 SimpleJdbcInsert 插入数据\n8.5.2使用 SimpleJdbcInsert 检索自动生成的主键\n8.5.3使用 SqlParameterSource\n8.5.4使用 SimpleJdbcCall\n8.6 JDBC 转为对象模型\n8.6.1SqlQuery\n8.6.2MappingSqlQuery\n8.6.3SqlUpdate\n8.6.4StoredProcedure\n8.6.5实战：JDBC 转为对象模型的例子\n8.7 内嵌数据库\n重点8.7.1使用内嵌数据库的好处\n8.7.2使用 Spring XML 创建内存数据库\n8.7.3编程方式创建内存数据库\n8.7.4实战：使用内存数据库进行测试的例子\n8.8 初始化 DataSource\n第9章基于 ORM 的数据访问\n9.1 Spring ORM 概述\n9.2 ORM 集成注意事项\n重点9.2.1资源与事务管理\n难点9.2.2异常处理\n9.3 集成 Hibernate\n重点9.3.1设置 SessionFactory\n9.3.2基于 Hibernate 的 DAO\n重点9.3.3声明式事务\n重点9.3.4编程事务\n9.3.5事务管理策略\n9.4 JPA\n9.4.1设置 JPA 不同方式\n重点9.4.2基于 JPA 的 DAO\n9.4.3JPA 事务\n重点9.4.4JpaDialect\n9.4.5JTA 事务管理\n第10章XML 与对象的转换\n10.1 XML 解析概述\n10.2 XML 的序列化与反序列化\n10.2.1序列化接口 Marshaller\n10.2.2反序列化接口 Unmarshaller\n10.2.3XML 解析异常类\n重点10.2.4如何使用 XML 的序列化与反序列化\n10.2.5XML 配置命名空间\n10.3 常用 XML 解析工具\n10.3.1JAXB\n10.3.2Castor\n10.3.3JiBX\n10.3.4XStream\n10.3.5实战：使用 JAXB 解析 XML 的例子\n第11章Spring Web MVC\n11.1 Spring Web MVC 概述\n11.2 DispatcherServlet\n11.2.1DispatcherServlet 概述\n重点11.2.2上下文层次结构\n11.2.3特定的 bean\n重点11.2.4框架配置\n11.2.5容器配置\n11.2.6处理流程\n11.2.7拦截\n11.2.8视图解析\n11.2.9语言环境\n重点11.2.10Multipart 请求\n11.3 过滤器\n11.3.1HTTP PUT 表单\n11.3.2转发头\n11.3.3ShallowEtagHeaderFilter\n11.3.4CORS\n11.4 控制器\n11.4.1控制器概述\n重点11.4.2声明控制器\n重点11.4.3请求映射\n重点11.4.4处理器方法\n重点11.4.5模型方法\n11.4.6绑定器方法\n11.5 URI 处理\n11.5.1URI 链接\n11.5.2链接到控制器\n11.5.3视图中的链接\n11.6 异常处理\n11.6.1异常处理概述\n11.6.2@ExceptionHandler\n11.6.3框架异常处理\n11.6.4REST API 异常\n11.6.5注解异常\n11.6.6容器错误页面\n11.7 异步请求\n难点11.7.1异步请求处理流程\n11.7.2异常处理\n11.7.3异步拦截器\n难点11.7.4流式响应\n重点11.7.5Server-Sent Events\n11.7.6发送原生数据\n新功能11.7.7响应式返回值\n11.7.8配置\n11.8 CORS 处理\n重点11.8.1CORS 概述\n重点11.8.2@CrossOrigin\n11.8.3全局 CORS 配置\n11.8.4自定义CORS\n11.8.5CORS 过滤器\n11.9 HTTP 缓存\n11.9.1HTTP 缓存概述\n重点11.9.2缓存控制\n重点11.9.3静态资源\n11.9.4控制器缓存\n11.10 MVC 配置\n11.10.1启用 MVC 配置\n11.10.2类型转换\n11.10.3验证\n重点 11.10.4拦截器\n11.10.5内容类型\n重点11.10.6消息转换器\n重点11.10.7视图控制器\n重点11.10.8视图解析器\n重点11.10.9静态资源\n11.10.10DefaultServletHttpRequestHandler\n难点11.10.11路径匹配\n11.11 视图处理\n重点11.11.1常用视图技术\n11.11.2文档视图\n11.11.3Feed 视图\n★新功能  11.12 HTTP\/2\n11.12.1TLS 的考虑\n11.12.2容器配置\n实战11.13 基于 Spring Web MVC 的 REST 接口\n11.13.1系统概述\n难点11.13.2接口设计\n重点11.13.3系统配置\n重点11.13.4后台编码实现\n重点11.13.5应用配置\n11.13.6运行\n第12章REST 客户端\n12.1 RestTemplate\n★新功能  12.2 WebClient\n实战12.3 基于 RestTemplate 的天气预报服务\n重点12.3.1系统配置\n重点12.3.2后台编码实现\n12.3.3运行\n第13章WebSocket\n13.1 WebSocket 概述\n13.1.1HTTP和WebSocket\n重点13.1.2理解 WebSocket 使用场景\n13.2 WebSocket 常用 API\n重点13.2.1WebSocketHandler\n13.2.2WebSocket 握手\n13.2.3部署\n重点13.2.4配置\n13.2.5跨域处理\n13.3 SockJS\n13.3.1SockJS 概述\n13.3.2启用 SockJS\n13.3.3心跳\n13.3.4客户端断开连接\n13.3.5CORS 处理\n13.3.6SockJsClient\n13.4 STOMP\n13.4.1STOMP 概述\n13.4.2启用 STOMP\n重点13.4.3消息流程\n13.4.4处理器方法\n重点13.4.5发送消息\n13.4.6内嵌 Broker和外部 Broker\n重点13.4.7连接到 Broker\n13.4.8认证\n重点13.4.9用户目的地\n13.4.10事件和拦截\n13.4.11STOMP 客户端\n13.4.12WebSocket Scope\n难点13.4.13性能优化\n13.5 基于 STOMP 的聊天室\n实战13.5.1聊天室项目的概述\n重点13.5.2设置 Broker\n重点13.5.3服务端编码\n重点13.5.4客户端编码\n13.5.5运行\n第14章Spring WebFlux\n★新功能  14.1 响应式编程概述\n14.1.1响应式编程简述\n重点14.1.2Spring WebFlux 与 Spring MVC 的区别\n重点14.1.3响应式 API\n难点14.1.4响应式编程模型\n★新功能  14.2 Spring 中的响应式编程\n重点14.2.1HttpHandler\n重点14.2.2WebHandler API\n14.2.3编码器和解码器\n★新功能  14.3 DispatcherHandler\n重点14.3.1Spring WebFlux 常用 bean\n14.3.2配置\n14.3.3执行\n★新功能  14.4 控制器\n重点14.4.1@Controller\n重点14.4.2请求映射\n重点14.4.3处理器方法\n★新功能  14.5 常用函数\n重点14.5.1HandlerFunction\n重点14.5.2RouterFunction\n14.5.3运行服务器\n14.5.4HandlerFilterFunction\n★新功能  14.6 WebFlux 相关配置\n重点14.6.1启用 WebFlux\n难点14.6.2配置 WebFlux\n重点14.6.3数据转换\n重点14.6.4数据验证\n重点14.6.5内容类型解析器\n重点14.6.6HTTP 消息编码器和解码器\n重点14.6.7视图解析器\n重点14.6.8静态资源\n重点14.6.9路径匹配\n★新功能  14.7 CORS 处理\n重点14.7.1CORS 概述\n重点14.7.2@CrossOrigin\n14.7.3全局CORS 配置\n14.7.4自定义CORS\n14.7.5CORS 过滤器\n第15章响应式编程中的 WebClient\n★新功能  重点 15.1 retrieve() 方法\n★新功能  重点 15.2 exchange() 方法\n★新功能  15.3 请求主体\n重点15.3.1处理 Form 表单数据\n重点15.3.2处理文件上传数据\n★新功能  15.4 生成器\n★新功能  15.5 过滤器\n★新功能 实战 15.6 基于 WebClient 的文件上传、下载\n15.6.1应用的概述\n重点15.6.2文件上传的编码实现\n重点15.6.3文件下载的编码实现\n15.6.4运行\n第16章响应式编程中的 WebSocket\n16.1 WebSocket 概述\n16.2 WebSocket 常用 API\n重点16.2.1WebSocketHandler\n16.2.2WebSocket 握手\n重点16.2.3配置\n16.2.4跨域处理\n★新功能  16.3 WebSocketClient\n第17章常用集成模式\n17.1 Spring 集成模式概述\n17.2 使用 RMI\n重点17.2.1使用 RmiServiceExporter 暴露服务\n重点17.2.2客户端访问服务\n17.3 使用 Hessian\n重点17.3.1编写 DispatcherServlet\n重点17.3.2使用 HessianServiceExporter 暴露 bean\n重点17.3.3客户端访问服务\n17.3.4在 Hessian 中使用基本认证\n17.4 使用 HTTP\n重点17.4.1暴露服务\n重点17.4.2客户端访问服务\n17.5 Web 服务\n重点17.5.1暴露基于 JAX-WS 的 Web 服务\n重点17.5.2访问服务\n17.6 JMS\n17.6.1JMS 概述\n重点17.6.2服务端配置\n重点17.6.3客户端配置\n17.7 REST 服务\n重点17.7.1RestTemplate\n17.7.2HTTP 消息转换器\n第18章EJB 集成\n18.1 EJB 集成概述\n18.2 EJB 集成的实现\n18.2.1访问本地 SLSB\n18.2.2访问远程 SLSB\n第19章JMS 集成\n19.1 JMS 集成概述\n19.2 Spring JMS\n重点19.2.1JmsTemplate\n重点19.2.2连接管理\n重点19.2.3目的地管理\n19.2.4消息监听器容器\n重点19.2.5事务管理\n19.3 发送消息\n19.3.1使用消息转换器\n19.3.2回调\n19.4 接收消息\n19.4.1同步接收\n重点19.4.2异步接收\n19.4.3SessionAwareMessageListener\n19.4.4MessageListenerAdapter\n19.4.5处理事务\n重点\n19.5 JCA 消息端点\n19.6 基于注解的监听器\n19.6.1启用基于注解的监听器\n重点19.6.2编程式端点注册\n重点19.6.3基于注解的端点方法签名\n19.6.4响应管理\n19.7 JMS 命名空间\n难点19.8 基于 JMS 的消息发送、接收\n19.8.1项目概述\n19.8.2配置\n19.8.3编码实现\n19.8.4运行\n第20章JMX 集成\n20.1 JMX 集成概述\n20.2 bean 转为 JMX\n重点20.2.1创建 MBeanServer\n20.2.2重用 MBeanServer\n20.2.3延迟实例化 MBean\n20.2.4MBean 自动注册\n重点20.2.5控制注册行为\n20.3 bean 的控制管理\n20.3.1MBeanInfoAssembler\n重点20.3.2注解\n20.3.3AutodetectCapableMBeanInfoAssembler\n重点20.3.4定义管理接口\n20.3.5MethodNameBasedMBeanInfoAssembler\n20.4 通知\n20.4.1注册监听器\n20.4.2发布通知\n第21章JCA CCI 集成\n21.1 JCA CCI 集成概述\n21.2 配置 CCI\n21.2.1连接器配置\n21.2.2ConnectionFactory 配置\n21.2.3配置连接\n21.3 使用 CCI 进行访问\n21.3.1记录转换\n重点21.3.2CciTemplate\n21.3.3DAO\n21.3.4自动输出记录生成\n21.4 CCI 访问对象建模\n21.4.1MappingRecordOperation\n21.4.2MappingCommAreaOperation\n21.5 CCI 中的事务处理\n第22章使用 E-mail\n22.1 使用 E-mail 概述\n22.2 实现发送 E-mail\n重点22.2.1MailSender 和 SimpleMailMessage 的基本用法\n重点22.2.2JavaMailSender 和 MimeMessagePreparator 的用法\n22.3 使用 MimeMessageHelper\n难点22.3.1发送附件和内联资源\n重点22.3.2使用模板创建 E-mail 内容\n实战22.4   实现 E-mail 服务器\n22.4.1项目概述\n22.4.2E-mail 服务器编码实现\n22.4.3格式化 E-mail 内容\n22.4.4运行\n第23章任务执行与调度\n23.1 任务执行与调度概述\n23.2 TaskExecutor\n23.2.1TaskExecutor 类型\n23.2.2使用 TaskExecutor\n23.3 TaskScheduler\n23.3.1Trigger 接口\n23.3.2实现\n23.4 任务调度及异步执行\n23.4.1启用调度注解\n重点23.4.2@Scheduled\n重点23.4.3@Async\n23.4.4@Async 的异常处理\n23.4.5命名空间\n23.5 使用 Quartz Scheduler\n23.5.1使用 JobDetailFactoryBean\n23.5.2使用 MethodInvokingJobDetailFactoryBean\n实战23.6  基于 Quartz Scheduler 的天气预报系统\n23.6.1项目概述\n23.6.2后台编码实现\n23.6.3运行\n第24章缓存\n24.1 缓存概述\n24.2 声明式缓存注解\n重点24.2.1@Cacheable\n重点24.2.2@CachePut\n重点24.2.3@CacheEvict\n重点24.2.4@Caching\n24.2.5@CacheConfig\n重点24.2.6启用缓存\n24.2.7使用自定义缓存\n24.3 JCache 注解\n24.3.1JCache 注解概述\n24.3.2与 Spring 缓存注解的差异\n24.4 基于 XML 的声明式缓存\n24.5 配置缓存存储\n24.5.1基于 JDK 的缓存\n24.5.2基于 Ehcache 的缓存\n24.5.3基于 Caffeine 的缓存\n24.5.4基于 GemFire 的缓存\n24.5.5基于 JSR-107 的缓存\n实战 24.6 基于缓存的天气预报系统\n24.6.1项目概述\n24.6.2后台编码实现\n24.6.3缓存配置\n24.6.4运行\n第25章Spring Boot\n25.1 从单块架构到微服务架构\n25.1.1单块架构的概念\n重点25.1.2单块架构的优缺点\n难点25.1.3将单块架构进化为微服务架构\n25.2 微服务设计原则\n难点25.2.1拆分足够“微”\n重点25.2.2轻量级通信\n难点25.2.3领域驱动原则\n重点25.2.4单一职责原则\n重点25.2.5DevOps 及两个比萨原则\n重点25.2.6不限于技术栈\n重点25.2.7可独立部署\n25.3 Spring Boot 概述\n难点25.3.1Spring Boot 产生的背景\n重点25.3.2Spring Boot 的目标\n重点25.3.3Spring Boot 与其他 Spring 应用的关系\n重点25.3.4Starter\n实战25.4 开启第一个 Spring Boot 项目\n25.4.1通过 Spring Initializr 初始化一个 Spring Boot 原型\n25.4.2用 Gradle 编译项目\n25.4.3探索项目\n第26章Spring Cloud\n★新功能  26.1 Spring Cloud 概述\n26.1.1Spring Cloud 简介\n26.1.2Spring Cloud 与 Spring Boot 的关系\n★新功能  26.2 Spring Cloud 入门配置\n重点26.2.1Maven 配置\n重点26.2.2Gradle 配置\n重点26.2.3声明式方法\n★新功能  26.3 Spring Cloud 的子项目介绍\n26.3.1Spring Cloud 子项目的组成\n重点26.3.2Spring Cloud 组件的版本\n★新功能 实战  26.4 实现微服务的注册与发现\n26.4.1服务发现的意义\n重点26.4.2集成 Eureka Server\n重点26.4.3集成 Eureka Client\n重点26.4.4实现服务的注册与发现\n附录\n附录A  EJB 规范摘要\nA1EJB 2.1 规范目标\nA2EJB 3.2 规范目标\n附录B  Bean Validation 内置约束\n附录C\t提升 Gradle 的构建速度\n附录D\t本书所采用的技术及相关版本\n参考文献","pages":"600","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s29914176.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s29914176.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29914176.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30370024\/","id":"30370024","publisher":"北京大学出版社","isbn10":"730129882X","isbn13":"9787301298824","title":"Spring 5 开发大全","url":"https:\/\/api.douban.com\/v2\/book\/30370024","alt_title":"","author_intro":"柳伟卫，网名“老卫”（waylau），在 IT 公司担任项目经理、架构师、高级技术顾问等职位，是 CSDN、 开源中国、云栖社区等技术社区专家，慕课网特邀讲师。\n具有多年软件开发管理及系统架构经验。负责过多个省、国家级大型分布式系统的设计与研发，参与了多个大型项目的微服务架构的技术改造，在实际工作中，积累了大量的微服务架构经验。\n业余时间创建了 waylau.com 网站，用于分享个人技术心得。喜欢开源，长期跃于各大开源社区，为开源社区无私编著了《Spring Framework 4.x参考文档》、《Netty 实战(精髓)》、《REST 实战》、《分布式 Java》、《Spring Boot 教程》、《Spring Security 教程》、《Thymeleaf 教程》等近30余本技术教程，广受网友好评。并已经出版了《分布式系统常用技术及案例分析》、《Spring Boot 企业级应用开发实战》、《Spring Cloud 微服务架构开发实战》、《Spring 5 开发大全》等专著（https:\/\/waylau.com\/books\/）。","summary":"内容简介：\n自 Spring 诞生以来，以 Spring 技术栈为核心的企业级应用开发方式深入人心，已经成为 Java EE 开发的最佳实践。随着 Spring 5 版本的发布，Spring 自身也发生了巨大的变革。本书力求全面介绍 Spring 框架，涵盖了 Spring 核心、测试、数据访问、Web 开发、响应式编程、系统集成及微服务等方面在内的共26 章的内容，可以说是 Spring 技术的“百科全书”。\n同时，本书基于 Spring 5 版本来编写，除了涉及 Spring 5 版本的新特性外，还介绍了 REST 服务、响应式 Web 开发、微服务设计、Spring Boot、Spring Cloud 等方面的前瞻技术。而且除了讲解 Spring 的理论知识外，还在每个知识点上辅以大量的代码案例，使理论可以联系实际，具备更强的可操作性。\n本书主要面向的是Java 开发者，以及对以Spring 为核心的Java EE 开发感兴趣的计算机专业的学生、软件开发人员和系统架构师。\n写作背景：\nSpring 自诞生以来，一直被广大开发者作为 Java 企业级应用开发的首选。无论是早年流行的 SSH 框架（Spring、Struts、Hibernate），还是近些年盛行的 SSM 组合（Spring、Spring MVC、MyBatis）， 唯一不变的就是 Spring。伴随互联网十几年的风云变迁，Spring 也不断地进行着技术革命，向着云计算、平台化方向发展。\nSpring 至今仍然奉行着最初的宗旨——简化企业级应用的开发。特别是 Spring Boot、Spring Cloud 等项目的诞生，进一步简化了基于 Spring 的企业级、分布式系统的应用开发方式。为此，笔者在2014 年以开源方式翻译了《Spring Framework 4.x 参考文档》，备受广大开发者关注。在2017 年，笔者编写了一系列关于 Spring 开发实战的书籍及培训视频教程，包括《Spring Boot 企业级应用开发实战》和《Spring Cloud 微服务架构开发实战》等（见https:\/\/waylau.com\/books\/） ，致力于让广大读者能够真正领略 Spring 所带来的力量和乐趣。\n目前，Spring 5 已经发布，并带来了大量的新特性。鉴于市面上关于 Spring 5 的介绍资料比较匮乏，故笔者撰写本书以补空白，助力国内开发者能够享受到新技术所带来的便利。","price":"119"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["周冠亚","黄文毅"],"pubdate":"2019-6","tags":[{"count":2,"name":"spring","title":"spring"},{"count":1,"name":"黄文毅","title":"黄文毅"},{"count":1,"name":"计算机","title":"计算机"},{"count":1,"name":"编程","title":"编程"},{"count":1,"name":"周冠亚","title":"周冠亚"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s33476653.jpg","binding":"","translator":[],"catalog":"目录\n第一篇 Spring基础篇\n第1章 环境搭建  3\n1.1 Spring介绍  3\n1.1.1 Spring设计目标  3\n1.1.2 Spring各个子模块  3\n1.1.3 Spring使用场景  4\n1.1.4 Spring与Spring MVC的关系  5\n1.1.5 Spring 5高级特性  5\n1.2 环境准备  5\n1.2.1 安装JDK  5\n1.2.2 安装IntelliJ IDEA  6\n1.2.3 安装Apache Maven  6\n1.2.4 安装Apache Tomcat  7\n1.3 快速搭建Spring 5项目  8\n1.3.1 使用IntelliJ IDEA创建Spring 5 Spring MVC项目  8\n1.3.2 测试部署  9\n1.4 小结  9\n第2章 Spring IoC容器原理  10\n2.1 IoC容器揭秘  10\n2.1.1 IoC的概念  10\n2.1.2 依赖倒置原则  11\n2.1.3 依赖注入  16\n2.2 Spring IoC的实现方式  17\n2.2.1 XML方式实现  17\n2.2.2 通过注解方式实现  20\n2.3 Spring IoC实现原理解析  21\n2.3.1 BeanFactory代码解析  21\n2.3.2 ApplicationContext代码解析  22\n2.3.3 BeanDefinition代码解析  23\n2.3.4 Spring IoC代码分析  23\n2.4 Spring IoC容器中Bean的生命周期  44\n2.5 小结  52\n第3章 Spring AOP揭秘  53\n3.1 AOP前置知识  53\n3.1.1 JDK动态代理  53\n3.1.2 CGLIB动态代理  56\n3.1.3 AOP联盟  58\n3.2 AOP概述  58\n3.2.1 AOP基本概念  58\n3.2.2 Spring AOP相关概念  59\n3.3 Spring AOP实现  60\n3.3.1 基于JDK动态代理实现  60\n3.3.2 基于CGLIB动态代理实现  65\n3.4 基于Spring AOP的实战  70\n3.4.1 增强类型  70\n3.4.2 前置增强  71\n3.4.3 后置增强  73\n3.4.4 环绕增强  74\n3.4.5 异常抛出增强  75\n3.4.6 引介增强  75\n3.4.7 切入点类型  77\n3.5 Spring集成AspectJ实战  78\n3.5.1 使用AspectJ方式配置Spring AOP  78\n3.5.2 AspectJ各种切点指示器  81\n3.5.3 args()与“@args()”  81\n3.5.4 @annotation()  87\n3.5.5 execution  89\n3.5.6 target()与“@target()”  90\n3.5.7 this()  92\n3.5.8 within()与“@within()”  95\n3.6 Spring AOP的实现原理  98\n3.6.1 设计原理  99\n3.6.2 JdkDynamicAopProxy  106\n3.6.3 CglibAopProxy  110\n3.7 小结  115\n第二篇 Spring 5新特性篇\n第4章 Spring 5新特性概述  117\n4.1 Spring 5.0新特性  117\n4.1.1 运行环境  117\n4.1.2 删除的代码  118\n4.1.3 核心修改  118\n4.1.4 核心容器更新  118\n4.1.5 Spring Web MVC更新  118\n4.1.6 Spring WebFlux  119\n4.1.7 对Kotlin的支持  119\n4.1.8 测试改进  120\n4.2 Spring 5.1新特性  121\n4.2.1 核心修改  121\n4.2.2 核心容器更新  121\n4.2.3 Web修改  121\n4.2.4 Spring Web MVC更新  121\n4.2.5 Spring WebFlux更新  122\n4.2.6 Spring Messaging更新  122\n4.2.7 Spring ORM更新  122\n4.2.8 测试更新  122\n第5章 Java 8新特性概述  123\n5.1 Lambda表达式  123\n5.1.1 Lambda表达式初探  123\n5.1.2 Lambda表达式作用域  125\n5.1.3 在线程中使用Lambda表达式  126\n5.1.4 在集合中使用Lambda表达式  127\n5.1.5 在Stream中使用Lambda表达式  128\n5.2 接口默认方法  129\n5.3 小结  132\n第6章 Spring WebFlux响应式编程  133\n6.1 传统的编程模型  133\n6.2 响应式编程模型  134\n6.3 Reactor  135\n6.3.1 Flux与Mono  135\n6.3.2 subscribe()  137\n6.3.3 操作符（Operator）  139\n6.3.4 线程模型  144\n6.4 Spring WebFlux  146\n6.4.1 基于注解的WebFlux开发方式  146\n6.4.2 基于函数式的WebFlux开发方式  147\n6.5 小结  152\n第7章 WebClient响应式客户端  153\n7.1 RestTemplate调试Spring MVC  153\n7.2 WebClient调试Spring WebFlux  156\n7.3 小结  158\n第8章 Spring 5结合Kotlin编程  159\n8.1 Kotlin简介  159\n8.1.1 Kotlin的特性  159\n8.1.2 Kotlin基本数据类型  161\n8.1.3 Kotlin开发环境搭建  161\n8.1.4 在Kotlin中定义常量与变量  162\n8.1.5 字符串模板  162\n8.1.6 NULL检查机制  163\n8.1.7 For循环和区间  163\n8.1.8 定义函数  166\n8.1.9 类和对象  167\n8.1.10 Kotlin与Java互操作  169\n8.2 Spring 5集成Kotlin  170\n8.3 小结  172\n第9章 Spring 5更多新特性  173\n9.1 Resource接口  173\n9.2 HTTP 2  174\n9.2.1 HTTP的现状  174\n9.2.2 HTTP 2的新特性  174\n9.2.3 多路复用与长连接的区别  175\n9.3 JUnit 5  176\n9.3.1 JUnit 5简介  176\n9.3.2 JUnit 5快速体验  176\n9.3.3 JUnit 5常用注解  178\n9.4 小结  179\n第三篇 Spring系统集成篇\n第10章 Spring集成Log4j2  181\n10.1 Log4j2配置详解  181\n10.2 Log4j2日志级别  184\n10.3 Log4j2实战演练  185\n10.4 小结  188\n第11章 Spring集成Spring MVC  189\n11.1 Spring MVC快速体验  189\n11.1.1 web.xml配置  189\n11.1.2 创建Spring MVC的配置 文件  190\n11.1.3 创建Spring MVC的视图 文件  190\n11.1.4 创建控制器  191\n11.1.5 测试运行  191\n11.2 Spring MVC视图呈现  192\n11.2.1 FreeMarker视图的实现  192\n11.2.2 XML视图的实现  193\n11.2.3 JSON视图的实现  195\n11.3 Spring MVC拦截器  196\n11.4 Spring MVC代码解析  198\n11.5 小结  225\n第12章 Spring集成MyBatis  226\n12.1 Spring、Spring MVC和MyBatis集成 快速体验  226\n12.2 MyBatis代码解析  236\n12.3 小结  243\n第13章 Spring事务管理  244\n13.1 事务的特性  244\n13.2 事务的隔离级别  244\n13.2.1 READ_UNCOMMITTED  245\n13.2.2 READ_COMMITTED  245\n13.2.3 REPEATABLE_READ  246\n13.2.4 SERIALIZABLE  246\n13.3 JDBC方式使用事务  247\n13.4 Spring事务管理快速体验  248\n13.5 Spring事务隔离级别  254\n13.6 Spring事务传播行为  255\n13.7 Spring事务代码分析  255\n13.8 小结  263\n第14章 Spring集成Redis  264\n14.1 Redis单节点安装  264\n14.2 Redis支持的数据类型  266\n14.2.1 Redis String类型的使用 方式  266\n14.2.2 Redis Hash类型的使用 方式  271\n14.2.3 Redis List类型的使用 方式  274\n14.2.4 Redis Set类型的使用 方式  277\n14.2.5 Redis SortedSet类型的使用 方式  280\n14.3 Redis持久化策略  284\n14.3.1 Redis RDB持久化  284\n14.3.2 Redis AOF持久化  285\n14.4 Redis主从复制模式  287\n14.4.1 Redis一主一从拓扑结构  289\n14.4.2 Redis一主多从拓扑结构  289\n14.4.3 Redis树形拓扑结构  290\n14.4.4 Redis主从架构的缺点  291\n14.5 Redis哨兵模式  291\n14.5.1 Redis哨兵模式简介  291\n14.5.2 Redis哨兵定时监控任务  292\n14.5.3 主观下线和客观下线  294\n14.5.4 Redis哨兵选举领导者  295\n14.5.5 故障转移  295\n14.5.6 Redis哨兵模式安装部署  296\n14.6 Redis集群模式  302\n14.6.1 Redis集群模式数据共享  303\n14.6.2 Redis集群中的主从复制  303\n14.6.3 Redis集群中的一致性 问题  303\n14.6.4 Redis集群架构  304\n14.6.5 Redis集群容错  304\n14.6.6 Redis集群环境搭建  305\n14.7 Spring、MyBatis和Redis集成快速 体验  313\n14.8 Redis缓存穿透和雪崩  323\n14.8.1 Redis缓存穿透  323\n14.8.2 Redis缓存雪崩  326\n14.9 小结  329\n第15章 Spring集成ZooKeeper  330\n15.1 ZooKeeper集群安装  330\n15.2 ZooKeeper总体架构  336\n15.2.1 ZooKeeper选举机制  336\n15.2.2 ZooKeeper数据模型  338\n15.3 Spring集成ZooKeeper快速体验  342\n15.4 ZooKeeper发布订阅  346\n15.4.1 NodeCache  346\n15.4.2 PathChildrenCache  349\n15.4.3 TreeCache  352\n15.5 ZooKeeper分布式锁  356\n15.6 小结  361\n第16章 Spring集成Kafka  362\n16.1 Kafka集群安装  362\n16.2 Kafka总体架构  365\n16.3 Spring集成Kafka快速体验  374\n16.4 小结  377\n第17章 Spring集成Mycat  379\n17.1 Mycat分库分表  379\n17.2 Mycat分库分表实战  381\n17.3 Spring MyBatis Mycat快速体验  386\n17.4 小结  397\n第18章 Spring集成Sharding-JDBC  398\n18.1 Spring集成Sharding-JDBC快速 体验  398\n18.2 Sharding-JDBC强制路由  407\n18.3 Sharding-JDBC分布式主键  408\n18.4 小结  413\n第19章 Spring集成Dubbo  414\n19.1 远程过程调用协议  414\n19.2 Spring集成Dubbo快速体验  415\n19.3 Dubbo代码分析  419\n19.4 小结  452\n附录A 设计模式  453\nA.1 工厂模式  453\nA.2 抽象工厂模式  456\nA.3 单例模式  462\nA.4 建造者模式  463\nA.5 原型模式  468\nA.6 适配器模式  472\nA.7 桥接模式  476\nA.8 标准模式  477\nA.9 组合模式  481\nA.10 装饰器模式  483\nA.11 外观模式  486\nA.12 享元模式  489\nA.13 代理模式  491\nA.14 责任链模式  493\nA.15 命令模式  496\nA.16 解释器模式  499\nA.17 迭代器模式  502\nA.18 中介者模式  504\nA.19 备忘录模式  506\nA.20 观察者模式  509\nA.21 状态 模 式  511\nA.22 空对象模式  513\nA.23 策略模式  516\nA.24 模板模式  519\nA.25 拦截过滤器模式  522\n参考文献  365","ebook_url":"https:\/\/read.douban.com\/ebook\/127447030\/","pages":"","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s33476653.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s33476653.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s33476653.jpg"},"alt":"https:\/\/book.douban.com\/subject\/34451893\/","id":"34451893","publisher":"清华大学出版社","isbn10":"7302531021","isbn13":"9787302531029","title":"Spring 5企业级开发实战","url":"https:\/\/api.douban.com\/v2\/book\/34451893","alt_title":"","author_intro":"周冠亚，上海交通大学软件工程硕士，先后就职于万达网络科技有限公司、上海2345网络科技有限公司、美团点评，主要从事后端Java开发工作，拥有丰富的软件开发经验，熟悉Java、高并发、微服务、大数据及相关软件架构。\n黄文毅，CSDN博客专家，CSDN学院、网易学院和腾讯学院等网络学院讲师；曾就职于厦门星耀蓝图科技有限公司和上海美团，目前就职于厦门美图科技有限公司，主要从事美图秀秀和美拍后端开发工作。","summary":"Spring框架是为了降低解决企业系统开发的复杂度而产生的，掌握并学会使用Spring框架进行项目开发，是Java开发人员必备技能之一，本书从企业应用开发的角度出发，深入浅出地讲解了Spring 5的新特性和Spring集成开发技术。全书共19章，第1章~第3章主要讲解如何搭建Spring开发环境以及Spring IoC和AOP容器的原理及代码分析。第4章和第5章概述Spring 5和Java 8的新特性。第6章和第7章讲解Spring 5新特性—— WebFlux响应式编程、开发和调试。第8章和第9章主要讲解Spring 5集成Kotlin语言以及更多Spring 5新特性的细节。第10章~第19章主要介绍Spring集成其他热门技术，例如，Log4j2日志框架、Spring MVC、MyBatis、Redis缓存、 ZooKeeper、Kafka消息中间件、Mycat分库分表中间件、Sharding-JDBC和Dubbo服务治理框架等。附录部分介绍本书涉及的以及在面试中常见的设计模式。\n本书适用于所有Java编程语言开发人员、分布式系统开发爱好者以及计算机专业的学生等。","ebook_price":"82.60","price":""},{"rating":{"max":10,"numRaters":2,"average":"0.0","min":0},"subtitle":"","author":["Igor Lozynskyi","Oleh Dokuka"],"pubdate":"2018-10","tags":[{"count":2,"name":"spring","title":"spring"},{"count":2,"name":"reactive","title":"reactive"},{"count":1,"name":"软件开发","title":"软件开发"},{"count":1,"name":"计算机","title":"计算机"},{"count":1,"name":"编程","title":"编程"},{"count":1,"name":"programming","title":"programming"},{"count":1,"name":"Java","title":"Java"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s32279078.jpg","binding":"平装","translator":[],"catalog":"Why Reactive Spring\nReactive Programming in Spring - Basic Concepts\nReactive Streams - the new Streams' Standard\nProject Reactor - the Foundation for Reactive Apps\nGoing Reactive with Spring Boot 2\nAsync nonblocking communication with Spring 5 WebFlux\nReactive Database access\nScale up with Spring Cloud Streams and Reactive Microservices\nTesting the Reactive Application\nAnd, Finally Release It","pages":"556","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s32279078.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s32279078.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s32279078.jpg"},"alt":"https:\/\/book.douban.com\/subject\/33394191\/","id":"33394191","publisher":"Packt Publishing","isbn10":"1787284956","isbn13":"9781787284951","title":"Hands-On Reactive Programming in Spring 5","url":"https:\/\/api.douban.com\/v2\/book\/33394191","alt_title":"","author_intro":"","summary":"These days, businesses need a new type of system that can remain responsive at all times. This is achievable with reactive programming; however, the development of these kinds of systems is a complex task, requiring a deep understanding of the domain. In order to develop highly responsive systems, the developers of the Spring Framework came up with Project Reactor.\nHands-On Reactive Programming in Spring 5 begins with the fundamentals of Spring Reactive programming. You'll explore the endless possibilities of building efficient reactive systems with the Spring 5 Framework along with other tools such as WebFlux and Spring Boot. Further on, you'll study reactive programming techniques and apply them to databases and cross-server communication. You will advance your skills in scaling up Spring Cloud Streams and run independent, high-performant reactive microservices.\nBy the end of the book, you will be able to put your skills to use and get on board with the reactive revolution in Spring 5.1!","price":""},{"rating":{"max":10,"numRaters":2,"average":"0.0","min":0},"subtitle":"","author":["Deinum, Marten, Rubio, Daniel, Long, Josh"],"pubdate":"2017","tags":[{"count":1,"name":"计算机","title":"计算机"},{"count":1,"name":"Spring","title":"Spring"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29669898.jpg","binding":"平装","translator":[],"catalog":"Table of contents (17 chapters)\nSpring Development Tools\nPages 1-26\nSpring Core Tasks\nPages 27-116\nSpring MVC\nPages 117-181\nSpring REST\nPages 183-208\nSpring MVC: Async Processing\nPages 209-266\nSpring Social\nPages 267-295\nSpring Security\nPages 297-344\nSpring Mobile\nPages 345-360\nData Access\nPages 361-414\nSpring Transaction Management\nPages 415-446\nSpring Batch\nPages 447-481\nSpring with NoSQL\nPages 483-540\nSpring Java Enterprise Services and Remoting Technologies\nPages 541-613\nSpring Messaging\nPages 615-654\nSpring Integration\nPages 655-689\nSpring Testing\nPages 691-730\nGrails\nPages 731-773","pages":"773","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s29669898.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s29669898.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29669898.jpg"},"alt":"https:\/\/book.douban.com\/subject\/28456607\/","id":"28456607","publisher":"APRESS","isbn10":"1484227905","isbn13":"9781484227909","title":"Spring 5 Recipes","url":"https:\/\/api.douban.com\/v2\/book\/28456607","alt_title":"","author_intro":"Marten Deinum is a submitter on the open source Spring Framework project. He is also a Java\/software consultant working for Conspect. He has developed and architected software, primarily in Java, for small and large companies. He is an enthusiastic open source user and longtime fan, user and advocate of the Spring Framework. He has held a number of positions including Software Engineer, Development Lead, Coach, and also as a Java and Spring Trainer.\nDaniel Rubio is an independent consultant with over 10 years of experience in enterprise and web-based software. More recently, Daniel is founder and technical lead at MashupSoft.com.  He has co-authored the best selling Spring Recipes as well as other books for Apress Media, LLC.  Daniel's expertise lies in Java, Spring, Python, Django, JavaScript\/CSS and HTML.\nJosh Long is the Spring Developer Advocate at Pivotal. Josh is a Java Champion, author of 5 books\n(including O'Reilly's upcoming \"Cloud Native Java: Designing Resilient Systems with Spring Boot, Spring Cloud, and Cloud Foundry\") and 3 best-selling video trainings (including \"Building Microservices with Spring Boot Livelessons\" w\/ Phil Webb), and an open-source contributor (Spring Boot, Spring Integration, Spring Cloud, Activiti and Vaadin).","summary":"Solve all your Spring 5 problems using complete and real-world code examples. When you start a new project, you’ll be able to copy the code and configuration files from this book, and then modify them for your needs. This can save you a great deal of work over creating a project from scratch.\nThe recipes in Spring 5 Recipes cover Spring fundamentals such as Spring IoC container, Spring AOP\/ AspectJ, and more. Other recipes include Spring enterprise solutions for topics such as Spring Java EE integration, Spring Integration, Spring Batch, Spring Remoting, messaging, transactions, and working with big data and the cloud using Hadoop and MongoDB. Finally, Spring web recipes cover Spring MVC, other dynamic scripting, integration with the popular Grails Framework (and Groovy), REST\/web services, and more.\nYou’ll also see recipes on new topics such as Spring Framework 5, reactive Spring, Spring 5 microservices, the functional web framework and much more.\nThis book\nbuilds upon the best-selling success of the previous editions and focuses on the latest Spring Framework features for building enterprise Java applications.\nWhat You'll Learn\nGet re-usable code recipes and snippets for core Spring, annotations and other development tools\nAccess Spring MVC for web development\nWork with Spring REST and microservices for web services development and integration into your enterprise Java applications\nUse Spring Batch, NoSQL and big data for building and integrating various cloud computing services and resources\nIntegrate Java Enterprise Edition and other Java APIs for use in Spring\nUse Grails code and much more\nWho This Book Is For\nExperienced Java and Spring programmers.","price":"USD 39.99"},{"rating":{"max":10,"numRaters":1,"average":"0.0","min":0},"subtitle":"","author":["Marten Deinum","Daniel Rubio","Josh Long"],"pubdate":"2017-10-17","tags":[{"count":2,"name":"Spring","title":"Spring"},{"count":2,"name":"Java","title":"Java"},{"count":1,"name":"计算机","title":"计算机"},{"count":1,"name":"编程","title":"编程"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29699975.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"831","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s29699975.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s29699975.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s29699975.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30152750\/","id":"30152750","publisher":"Apress","isbn10":"1484227891","isbn13":"9781484227893","title":"Spring 5 Recipes: A Problem-Solution Approach","url":"https:\/\/api.douban.com\/v2\/book\/30152750","alt_title":"","author_intro":"From the Back Cover\nSolve all your Spring 5 problems using complete and real-world code examples. When you start a new project, you’ll be able to copy the code and configuration files from this book, and then modify them for your needs. This can save you a great deal of work over creating a project from scratch.The recipes inSpring 5 Recipescover Spring fundamentals such as Spring IoC container, Spring AOP\/ AspectJ, and more. Other recipes include Spring enterprise solutions for topics such as Spring Java EE integration, Spring Integration, Spring Batch, Spring Remoting, messaging, transactions, and working with big data and the cloud using Hadoop and MongoDB. Finally, Spring web recipes cover Spring MVC, other dynamic scripting, integration with the popular Grails Framework (and Groovy), REST\/web services, and more.You’ll also see recipes on new topics such as Spring Framework 5, reactive Spring, Spring 5 microservices, the functional web framework and much more.This book builds upon the best-selling success of the previous editions and focuses on the latest Spring Framework features for building enterprise Java applications.You will:Get re-usable code recipes and snippets for core Spring, annotations and other development toolsAccess Spring MVC for web developmentWork with Spring REST and microservices for web services development and integration into your enterprise Java applicationsUse Spring Batch, NoSQL and big data for building and integrating various cloud computing services and resourcesIntegrate Java Enterprise Edition and other Java APIs for use in SpringUse Grails code and much more\nRead more\nAbout the Author\nMarten Deinumis a submitter on the open source Spring Framework project.He is also a Java\/software consultant working for Conspect. He has developed and architected software, primarily in Java, for small and large companies. He is an enthusiastic open source user and longtime fan, user and advocate of the Spring Framework. He has held a number of positions including Software Engineer, Development Lead, Coach, and also as a Java and Spring Trainer. Daniel Rubiois an independent consultant with over 10 years of experience in enterprise and web-based software. More recently, Daniel is founder and technical lead at MashupSoft.com. He has co-authored the best selling Spring Recipes as well as other books for Apress Media, LLC. Daniel's expertise lies in Java, Spring, Python, Django, JavaScript\/CSS and HTML.  Josh Longis the Spring Developer Advocate at Pivotal. Josh is a Java Champion, author of 5 books (including O'Reilly's upcoming \"Cloud Native Java: Designing Resilient Systems with Spring Boot, Spring Cloud, and Cloud Foundry\") and 3 best-selling video trainings (including \"Building Microservices with Spring Boot Livelessons\" w\/ Phil Webb), and an open-source contributor (Spring Boot, Spring Integration, Spring Cloud, Activiti and Vaadin).\nRead more","summary":"Solve all your Spring 5 problems using complete and real-world code examples. When you start a new project, you’ll be able to copy the code and configuration files from this book, and then modify them for your needs. This can save you a great deal of work over creating a project from scratch.\nThe recipes in Spring 5 Recipes cover Spring fundamentals such as Spring IoC container, Spring AOP\/ AspectJ, and more. Other recipes include Spring enterprise solutions for topics such as Spring Java EE integration, Spring Integration, Spring Batch, Spring Remoting, messaging, transactions, and working with big data and the cloud using Hadoop and MongoDB. Finally, Spring web recipes cover Spring MVC, other dynamic scripting, integration with the popular Grails Framework (and Groovy), REST\/web services, and more.\nYou’ll also see recipes on new topics such as Spring Framework 5, reactive Spring, Spring 5 microservices, the functional web framework and much more.\nThis book\nbuilds upon the best-selling success of the previous editions and focuses on the latest Spring Framework features for building enterprise Java applications.\nWhat You'll Learn\nGet re-usable code recipes and snippets for core Spring, annotations and other development toolsAccess Spring MVC for web developmentWork with Spring REST and microservices for web services development and integration into your enterprise Java applicationsUse Spring Batch, NoSQL and big data for building and integrating various cloud computing services and resourcesIntegrate Java Enterprise Edition and other Java APIs for use in SpringUse Grails code and much more\nWho This Book Is For\nExperienced Java and Spring programmers.","price":"USD 47.49"},{"rating":{"max":10,"numRaters":8,"average":"0.0","min":0},"subtitle":"","author":["Iuliana Cosmina","Rob Harrop","Chris Schaefer","Clarence Ho"],"pubdate":"2018-12","tags":[{"count":9,"name":"Spring","title":"Spring"},{"count":6,"name":"Spring5","title":"Spring5"},{"count":3,"name":"编程手册","title":"编程手册"},{"count":3,"name":"Java","title":"Java"},{"count":1,"name":"java-web","title":"java-web"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29998032.jpg","binding":"","translator":[],"catalog":"目录\n第1章 Spring介绍  1\n1.1 什么是Spring  1\n1.1.1 Spring框架的演变  1\n1.1.2 翻转控制或依赖注入  5\n1.1.3 依赖注入的演变  6\n1.1.4 除了依赖注入  7\n1.2 Spring项目  10\n1.2.1 Spring的起源  10\n1.2.2 Spring社区  10\n1.2.3 Spring工具套件  11\n1.2.4 Spring Security项目  11\n1.2.5 Spring Boot  11\n1.2.6 Spring批处理和集成  11\n1.2.7 许多其他项目  11\n1.3 Spring的替代品  12\n1.3.1 JBoss Seam框架  12\n1.3.2 Google Guice  12\n1.3.3 PicoContainer  12\n1.3.4 JEE 7容器  12\n1.4 小结  12\n第2章 入门  13\n2.1 获取Spring框架  13\n2.1.1 快速入门  13\n2.1.2 在GitHub中查找Spring  14\n2.1.3 使用正确的JDK  14\n2.2 了解Spring打包  14\n2.2.1 为自己的应用程序选择模块  15\n2.2.2 在Maven存储库上访问Spring模块  15\n2.2.3 使用Gradle访问Spring模块  16\n2.2.4 使用Spring文档  17\n2.2.5 将Spring放入Hello World中  17\n2.2.6 构建示例Hello World应用程序  17\n2.2.7 用Spring重构  20\n2.3 小结  22\n第3章 在Spring中引入IoC和DI  23\n3.1 控制反转和依赖注入  23\n3.2 控制反转的类型  23\n3.2.1 依赖拉取  24\n3.2.2 上下文依赖查找  24\n3.2.3 构造函数依赖注入  25\n3.2.4 setter依赖注入  25\n3.2.5 注入与查找  25\n3.2.6 setter注入与构造函数注入  26\n3.3 Spring中的控制反转  28\n3.4 Spring中的依赖注入  28\n3.4.1 bean和BeanFactory  28\n3.4.2 BeanFactory实现  29\n3.4.3 ApplicationContext  30\n3.5 配置ApplicationContext  30\n3.5.1 设置Spring配置选项  30\n3.5.2 基本配置概述  30\n3.5.3 声明Spring组件  31\n3.5.4 使用方法注入  53\n3.5.5 了解bean命名  60\n3.5.6 了解bean实例化模式  66\n3.6 解析依赖项  69\n3.7 自动装配bean  71\n3.8 设置bean继承  77\n3.9 小结  79\n第4章 详述Spring配置和Spring Boot  80\n4.1 Spring对应用程序可移植性的影响  80\n4.2 管理bean生命周期  81\n4.3 挂钩到bean的创建  82\n4.3.1 在创建bean时执行方法  82\n4.3.2 实现InitializingBean接口  84\n4.3.3 使用JSR-250 @PostConstruct注解  86\n4.4 使用@Bean声明一个初始化方法  88\n4.5 挂钩到bean的销毁  89\n4.5.1 在bean被销毁时执行一个方法  89\n4.5.2 实现DisposableBean接口  91\n4.5.3 使用JSR-250 @PreDestroy注解  92\n4.6 使用@Bean声明销毁方法  93\n4.7 了解解析的顺序  94\n4.8 让Spring感知bean  94\n4.8.1 使用BeanNameAware接口  95\n4.8.2 使用ApplicationContextAware接口  96\n4.9 使用FactoryBean  97\n4.10 直接访问FactoryBean  100\n4.11 使用factory-bean和factory-method属性  101\n4.12 JavaBean PropertyEditor  102\n4.12.1 使用内置的PropertyEditor  102\n4.12.2 创建自定义PropertyEditor  106\n4.13 更多的Spring ApplicationContext配置  108\n4.13.1 使用MessageSource进行国际化  108\n4.13.2 在独立的应用程序中使用MessageSource  110\n4.13.3 应用程序事件  111\n4.14 访问资源  112\n4.15 使用Java类进行配置  113\n4.15.1 Java中的ApplicationContext配置  113\n4.15.2 Spring混合配置  119\n4.15.3 Java或XML配置？  121\n4.16 配置文件  121\n4.17 使用Java配置来配置Spring配置文件  123\n4.18 Environment和PropertySource抽象  125\n4.19 使用JSR-330注解进行配置  128\n4.20 使用Groovy进行配置  130\n4.21 Spring Boot  132\n4.22 小结  135\n第5章 Spring AOP  136\n5.1 AOP概念  137\n5.2 AOP的类型  137\n5.2.1 使用静态AOP  137\n5.2.2 使用动态AOP  137\n5.2.3 选择AOP类型  138\n5.3 Spring中的AOP  138\n5.3.1 AOP Alliance  138\n5.3.2 AOP中的Hello World示例  138\n5.4 Spring AOP架构  139\n5.4.1 Spring中的连接点  139\n5.4.2 Spring中的切面  140\n5.4.3 关于ProxyFactory类  140\n5.4.4 在Spring中创建通知  140\n5.4.5 通知的接口  141\n5.4.6 创建前置通知  141\n5.4.7 通过使用前置通知保护方法访问  142\n5.4.8 创建后置返回通知  145\n5.4.9 创建环绕通知  147\n5.4.10 创建异常通知  148\n5.4.11 选择通知类型  150\n5.5 在Spring中使用顾问和切入点  150\n5.5.1 Pointcut接口  151\n5.5.2 可用的切入点实现  152\n5.5.3 使用DefaultPointcutAdvisor  152\n5.5.4 使用StaticMethodMatcherPointcut创建静态切入点  153\n5.5.5 使用DyanmicMethodMatcherPointcut创建动态切入点  155\n5.5.6 使用简单名称匹配  157\n5.5.7 用正则表达式创建切入点  158\n5.5.8 使用AspectJ切入点表达式创建切入点  159\n5.5.9 创建注解匹配切入点  160\n5.5.10 便捷的Advisor实现  161\n5.6 了解代理  161\n5.6.1 使用JDK动态代理  162\n5.6.2 使用CGLIB代理  162\n5.6.3 比较代理性能  163\n5.6.4 选择要使用的代理  165\n5.7 切入点的高级使用  166\n5.7.1 使用控制流切入点  166\n5.7.2 使用组合切入点  168\n5.7.3 组合和切入点接口  170\n5.7.4 切入点小结  170\n5.8 引入入门  170\n5.8.1 引入的基础知识  171\n5.8.2 使用引入进行对象修改检测  172\n5.8.3 引入小结  175\n5.9 AOP的框架服务  175\n5.9.1 以声明的方式配置AOP  175\n5.9.2 使用ProxyFactoryBean  176\n5.9.3 使用aop名称空间  180\n5.10 使用@AspectJ样式注解  184\n5.11 AspectJ集成  189\n5.11.1 关于AspectJ  189\n5.11.2 使用单例切面  189\n5.12 小结  191\n第6章 Spring JDBC支持  192\n6.1 介绍Lambda表达式  192\n6.2 示例代码的示例数据模型  193\n6.3 研究JDBC基础结构  196\n6.4 Spring JDBC基础结构  199\n6.5 数据库连接和数据源  200\n6.6 嵌入数据库支持  203\n6.7 在DAO类中使用DataSource  204\n6.8 异常处理  206\n6.9 JdbcTemplate类  207\n6.9.1 在DAO类中初始化JdbcTemplate  207\n6.9.2 通过NamedParameterJdbcTemplate使用命名参数  209\n6.9.3 使用RowMapper检索域对象  210\n6.10 使用ResultSetExtractor检索嵌套域对象  211\n6.11 建模JDBC操作的Spring类  213\n6.12 使用MappingSqlQuery查询数据  215\n6.13 插入数据并检索生成的键  220\n6.14 使用BatchSqlUpdate进行批处理操作  221\n6.15 使用SqlFunction调用存储函数  225\n6.16 Spring Data项目：JDBC Extensions  226\n6.17 使用JDBC的注意事项  226\n6.18 Spring Boot JDBC  227\n6.19 小结  229\n第7章 在Spring中使用Hibernate  230\n7.1 示例代码的示例数据模型  230\n7.2 配置Hibernate的SessionFactory  232\n7.3 使用Hibernate注解的ORM映射  234\n7.3.1 简单的映射  235\n7.3.2 一对多映射  238\n7.3.3 多对多映射  239\n7.4 Hibernate会话接口  240\n7.4.1 使用Hibernate查询语言查询数据  241\n7.4.2 使用延迟获取进行简单查询  241\n7.4.3 使用关联获取进行查询  243\n7.5 插入数据  245\n7.6 更新数据  248\n7.7 删除数据  249\n7.8 配置Hibernate以便从实体生成表  250\n7.9 注解方法或字段？  252\n7.10 使用Hibernate时的注意事项  254\n7.11 小结  254\n第8章 在Spring中使用JPA 2进行数据访问  255\n8.1 JPA 2.1介绍  255\n8.1.1 示例代码的示例数据模型  256\n8.1.2 配置JPA的EntityManagerFactory  256\n8.1.3 使用JPA注解进行ORM映射  258\n8.2 使用JPA执行数据库操作  259\n8.2.1 使用Java持久化查询语言来查询数据  260\n8.2.2 查询非类型化结果  266\n8.3 使用构造函数表达式查询自定义结果类型  267\n8.3.1 插入数据  269\n8.3.2 更新数据  271\n8.3.3 删除数据  272\n8.4 使用本地查询  273\n8.5 使用简单的本地查询  273\n8.6 使用SQL ResultSet映射进行本地查询  274\n8.7 Spring Data JPA介绍  278\n8.7.1 添加Spring Data JPA库依赖项  279\n8.7.2 使用Spring Data JPA Repository抽象进行数据库操作  279\n8.8 使用JpaRepository  283\n8.9 带有自定义查询的Spring Data JPA  284\n8.10 通过使用Hibernate Envers保存实体版本  293\n8.10.1 为实体版本控制添加表  293\n8.10.2 为实体版本控制配置EntityManagerFactory  294\n8.10.3 启用实体版本控制和历史检索  296\n8.10.4 测试实体版本控制  297\n8.11 Spring Boot JPA  298\n8.12 使用JPA时的注意事项  302\n8.13 小结  302\n第9章 事务管理  303\n9.1 研究Spring事务抽象层  303\n9.2 PlatformTransactionManager的实现  304\n9.3 分析事务属性  305\n9.3.1 TransactionDefinition接口  305\n9.3.2 TransactionStatus接口  306\n9.4 示例代码的示例数据模型和基础结构  307\n9.4.1 创建一个带有依赖项的简单Spring JPA项目  307\n9.4.2 示例数据模型和通用类  308\n9.4.3 使用AOP配置进行事务管理  315\n9.5 使用编程式事务  316\n9.6 使用Spring实现全局事务  318\n9.6.1 实现JTA示例的基础结构  318\n9.6.2 使用JTA实现全局事务  319\n9.6.3 Spring Boot JTA  325\n9.6.4 使用JTA事务管理器的注意事项  328\n9.7 小结  329\n第10章 使用类型转换和格式化进行验证  330\n10.1 依赖项  330\n10.2 Spring类型转换系统  331\n10.3 使用PropertyEditors从字符串进行转换  331\n10.4 Spring类型转换介绍  333\n10.4.1 实现自定义转换器  333\n10.4.2 配置ConversionService  334\n10.4.3 任意类型之间的转换  335\n10.5 Spring中的字段格式化  338\n10.5.1 实现自定义格式化器  338\n10.5.2 配置ConversionServiceFactoryBean  339\n10.6 Spring中的验证  340\n10.6.1 使用Spring Validator接口  340\n10.6.2 使用JSR-349 Bean Validation  342\n10.6.3 在Spring中配置Bean Validation支持  343\n10.6.4 创建自定义验证器  344\n10.7 使用AssertTrue进行自定义验证  346\n10.8 自定义验证的注意事项  347\n10.9 决定使用哪种验证API  347\n10.10 小结  347\n第11章 任务调度  348\n11.1 任务调度示例的依赖项  348\n11.2 Spring中的任务调度  349\n11.2.1 Spring TaskScheduler抽象介绍  349\n11.2.2 研究示例任务  350\n11.2.3 使用注解进行任务调度  355\n11.2.4 Spring中异步任务的执行  357\n11.3 Spring中任务的执行  359\n11.4 小结  360\n第12章 使用Spring远程处理  361\n12.1 使用示例的数据模型  362\n12.2 为JPA后端添加必需的依赖项  363\n12.3 实现和配置SingerService  364\n12.3.1 实现SingerService  364\n12.3.2 配置SingerService  365\n12.3.3 公开服务  367\n12.3.4 调用服务  368\n12.4 在Spring中使用JMS  369\n12.4.1 在Spring中实现JMS监听器  371\n12.4.2 在Spring中发送JMS消息  372\n12.5 Spring Boot Artemis启动器  373\n12.6 在Spring中使用RESTful-WS  375\n12.6.1 RESTful Web服务介绍  375\n12.6.2 为示例添加必需的依赖项  376\n12.6.3 设计Singer RESTful Web服务  376\n12.6.4 使用Spring MVC展示REST样式的Web服务  376\n12.7 配置Castor XML  377\n12.7.1 实现SingerController  378\n12.7.2 配置Spring Web应用程序  380\n12.7.3 使用curl测试RESTful-WS  382\n12.7.4 使用RestTemplate访问RESTful-WS  383\n12.7.5 使用Spring Security来保护RESTful-WS  386\n12.8 使用Spring Boot开发RESTful-WS  389\n12.9 在Spring中使用AMQP  392\n12.10 小结  397\n第13章 Spring测试  398\n13.1 测试类别介绍  398\n13.2 使用Spring测试注解  399\n13.3 实施逻辑单元测试  400\n13.3.1 添加所需的依赖项  400\n13.3.2 单元测试Spring MVC控制器  401\n13.4 实现集成测试  403\n13.4.1 添加所需的依赖项  403\n13.4.2 配置用于服务层测试的配置文件  403\n13.4.3 Java配置版本  404\n13.4.4 实施基础结构类  405\n13.4.5 对服务层进行单元测试  408\n13.4.6 丢弃DbUnit  410\n13.5 实现前端单元测试  413\n13.6 小结  413\n第14章 Spring中的脚本支持  414\n14.1 在Java中使用脚本支持  414\n14.2 Groovy介绍  415\n14.2.1 动态类型化  416\n14.2.2 简化的语法  416\n14.2.3 闭包  417\n14.3 与Spring一起使用Groovy  418\n14.3.1 开发Singer对象域  418\n14.3.2 实现规则引擎  418\n14.3.3 将规则工厂实现为Spring可刷新bean  420\n14.3.4 测试年龄分类规则  421\n14.3.5 内联动态语言代码  423\n14.4 小结  424\n第15章 应用程序监控  425\n15.1 Spring中的JMX支持  425\n15.2 将Spring bean导出为JMX  425\n15.3 使用Java VisualVM进行JMX监控  426\n15.4 监视Hibernate统计信息  428\n15.5 使用了Spring Boot的JMX  429\n15.6 小结  431\n第16章 Web应用程序  432\n16.1 实现示例的服务层  433\n16.1.1 对示例使用数据模型  433\n16.1.2 实现DAO层  435\n16.1.3 实现服务层  435\n16.2 配置SingerService  436\n16.3 MVC和Spring MVC介绍  437\n16.3.1 MVC介绍  438\n16.3.2 Spring MVC介绍  438\n16.3.3 Spring MVC WebApplicationContext层次结构  439\n16.3.4 Spring MVC请求生命周期  439\n16.3.5 Spring MVC配置  440\n16.3.6 在Spring MVC中创建第一个视图  442\n16.3.7 配置DispatcherServlet  443\n16.3.8 实现SingerController  444\n16.3.9 实现歌手列表视图  445\n16.3.10 测试歌手列表视图  445\n16.4 理解Spring MVC项目结构  445\n16.5 实现国际化(il8n)  446\n16.5.1 在DispatcherServlet配置中配置国际化  446\n16.5.2 为国际化支持而修改歌手列表视图  448\n16.6 使用主题和模板  448\n16.7 使用Apache Tiles查看模板  450\n16.7.1 设计模板布局  450\n16.7.2 实现页面布局组件  451\n16.8 在Spring MVC中配置Tiles  453\n16.9 实现歌手信息视图  454\n16.9.1 将URL映射到视图  454\n16.9.2 实现显示歌手视图  454\n16.9.3 实现编辑歌手视图  456\n16.9.4 实现添加歌手视图  459\n16.9.5 启用JSR-349(bean验证)  460\n16.10 使用jQuery和jQuery UI  462\n16.10.1 jQuery和jQuery UI介绍  462\n16.10.2 在视图中使用jQuery和jQuery UI  462\n16.10.3 使用CKEditor进行富文本编辑  463\n16.10.4 使用jqGrid实现具有分页支持的数据网格  464\n16.10.5 在歌手列表视图中启用jqGrid  464\n16.10.6 在服务器端启用分页  466\n16.11 处理文件上传  468\n16.11.1 配置文件上传支持  468\n16.11.2 修改视图以支持文件上传  469\n16.11.3 修改控制器以支持文件上传  470\n16.12 用Spring Security保护Web应用程序  471\n16.12.1 配置Spring安全性  471\n16.12.2 将登录功能添加到应用程序中  473\n16.12.3 使用注解来保护控制器方法  475\n16.13 使用Spring Boot创建Spring Web应用程序  475\n16.14 设置DAO层  476\n16.14.1 设置服务层  477\n16.14.2 设置Web层  478\n16.14.3 设置Spring安全性  479\n16.15 创建Thymeleaf视图  479\n16.16 使用Thymeleaf扩展  482\n16.17 小结  486\n第17章 WebSocket  487\n17.1 WebSocket介绍  487\n17.2 与Spring一起使用WebSocket  487\n17.3 使用WebSocket API  488\n17.4 使用STOMP发送消息  496\n17.5 小结  500\n第18章 Spring项目：批处理、集成和XD等  501\n18.1 Spring Batch  502\n18.2 JSR-352  507\n18.3 Spring Boot Batch  509\n18.4 Spring Integration  512\n18.5 Spring XD  516\n18.6 Spring框架的五个最显著的功能  517\n18.6.1 功能性Web框架  518\n18.6.2 Java 9 互操作性  526\n18.6.3 JDK模块化  526\n18.6.4 使用Java 9和Spring WebFlux进行反应式编程  528\n18.6.5 Spring支持JUnit 5 Jupiter  529\n18.7 小结  536\n附录A 设置开发环境  537","pages":"556","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29998032.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29998032.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29998032.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30452637\/","id":"30452637","publisher":"清华大学出版社","isbn10":"7302516448","isbn13":"9787302516446","title":"Spring 5高级编程（第5版）","url":"https:\/\/api.douban.com\/v2\/book\/30452637","alt_title":"","author_intro":"Iuliana Cosmina是一名Spring认证的Web应用程序开发人员，也是Spring认证的Spring专家(由Pivotal定义，Pivotal是Spring框架、Spring Boot以及其他工具的制造商)。她曾与Apress出版社合作出版了多本关于核心Spring认证和Spring认证Web开发的书籍。她是来自Bearing Point Software的一名软件架构师，也是GitHub、Stack Overflow等平台上活跃的编码者和软件贡献者。\nRob Harrop是一位软件顾问，致力于提供高性能、高度可扩展的企业级应用程序。他是一位经验丰富的架构师，对于理解和解决复杂的设计问题具有极高天赋。凭借扎实的Java和.NET开发功力，Harrop已经成功在两种平台上部署不少项目。此外，他还在其他行业拥有丰富的经验，尤其是零售和政府领域。Harrop共独自撰写或参与撰写了5本书，其中就包括本书(当然不是第5版)，该书广受好评，包含大量关于Spring框架的资源。\nChris Schaefer是Pivotal Spring项目的主要软件开发人员，Pivotal是Spring框架、Spring Boot以及其他Spring工具的制造商。\nClarence Ho是中国香港软件咨询公司SkywideSoft Technology Limited的Java高级架构师。Clarence在IT领域工作了20多年，一直担任许多内部应用程序开发项目的团队负责人，并为客户提供有关企业解决方案的咨询服务。","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":[],"pubdate":"","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s31870377.jpg","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s31870377.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s31870377.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s31870377.jpg"},"alt":"https:\/\/book.douban.com\/subject\/32980216\/","id":"32980216","publisher":"","isbn10":"197401536X","isbn13":"9781974015368","title":"Spring 5.0 Complete Self-assessment Guide","url":"https:\/\/api.douban.com\/v2\/book\/32980216","alt_title":"","author_intro":"","summary":"What will be the consequences to the business (financial, reputation etc) if Spring 5.0 does not go ahead or fails to deliver the objectives? Is Spring 5.0 linked to key business goals and objectives? What does Spring 5.0 success mean to the stakeholders? How do we go about Securing Spring 5.0? Is Spring 5.0 dependent on the successful delivery of a current project? Defining, designing, creating, and implementing a process to solve a business challenge or meet a business objective is the most valuable role… In EVERY company, organization and department.Unless you are talking a one-time, single-use project within a business, there should be a process. Whether that process is managed and implemented by humans, AI, or a combination of the two, it needs to be designed by someone with a complex enough perspective to ask the right questions. Someone capable of asking the right questions and step back and say, 'What are we really trying to accomplish here? And is there a different way to look at it?'For more than twenty years, The Art of Service's Self-Assessments empower people who can do just that - whether their title is marketer, entrepreneur, manager, salesperson, consultant, business process manager, executive assistant, IT Manager, CxO etc... - they are the people who rule the future. They are people who watch the process as it happens, and ask the right questions to make the process work better.This book is for managers, advisors, consultants, specialists, professionals and anyone interested in Spring 5.0 assessment.All the tools you need to an in-depth Spring 5.0 Self-Assessment. Featuring 618 new and updated case-based questions, organized into seven core areas of process design, this Self-Assessment will help you identify areas in which Spring 5.0 improvements can be made.In using the questions you will be better able to: - diagnose Spring 5.0 projects, initiatives, organizations, businesses and processes using accepted diagnostic standards and practices - implement evidence-based best practice strategies aligned with overall goals - integrate recent advances in Spring 5.0 and process design strategies into practice according to best practice guidelinesUsing a Self-Assessment tool known as the Spring 5.0 Scorecard, you will develop a clear picture of which Spring 5.0 areas need attention.Included with your purchase of the book is the Spring 5.0 Self-Assessment downloadable resource, which contains all questions and Self-Assessment areas of this book in a ready to use Excel dashboard, including the self-assessment, graphic insights, and project planning automation - all with examples to get you started with the assessment right away. Access instructions can be found in the book.You are free to use the Self-Assessment contents in your presentations and materials for customers without asking us - we are here to help.","price":""},{"rating":{"max":10,"numRaters":2,"average":"0.0","min":0},"subtitle":"","author":["Iuliana Cosmina","Rob Harrop","Chris Schaefer"],"pubdate":"2017-10-17","tags":[{"count":3,"name":"Spring","title":"Spring"},{"count":2,"name":"Java","title":"Java"},{"count":1,"name":"计算机","title":"计算机"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29699562.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"849","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29699562.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29699562.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29699562.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30152422\/","id":"30152422","publisher":"Apress","isbn10":"1484228073","isbn13":"9781484228074","title":"Pro Spring 5: An In-Depth Guide to the Spring Framework and Its Tools","url":"https:\/\/api.douban.com\/v2\/book\/30152422","alt_title":"","author_intro":"From the Back Cover\nMaster Spring basics and core topics, and share the authors’ insights and real–world experiences with remoting, Hibernate, and EJB. Beyond the basics, you'll learn how to leverage the Spring Framework to build the various tiers and parts of an enterprise Java application: transactions, web and presentation tiers, deployment, and much more. A full sample application allows you to apply many of the technologies and techniques covered inPro Spring 5and see how they work together.This book updates the perennial bestseller with the latest that the new Spring Framework 5 has to offer. Now in its fifth edition, this popular title is by far the most comprehensive and definitive treatment of Spring available. It covers the new functional web framework, microservices and more, including interoperability with Java 9.After reading this definitive book, you'll be armed with the power of Spring to build complex Spring applications, top to bottom.The agile, lightweight, open-source Spring Framework continues to be the de facto leading enterprise Java application development framework for today's Java programmers and developers. It works with other leading open-source, agile, and lightweight Java technologies such as Hibernate, Groovy, MyBatis, and more. Spring now works with Java EE and JPA 2 as well.You will:Discover what’s new in Spring Framework 5Use the Spring Framework with Java 9Master data access and transactionsWork with the new functional web frameworkCreate microservices and other web services\nRead more\nAbout the Author\nIuliana Cosmina is a Spring Certified Web Developer and is also Spring Certified Core Spring Professional. She is a Spring certified expert, as defined by Pivotal, the makers of Spring Framework, Boot and other tools. She has authored books with Apress on Core Spring certification and Spring Certified web development. She is a software architect at Bearing Point Software and is an active coder and software contributor on GitHub, StackOverFlow and more. Rob Harropis a software consultant specializing in delivering high-performance, highly-scalable enterprise applications. He is an experienced architect with a particular flair for understanding and solving complex design issues. With a thorough knowledge of both Java and .NET, Harrop has successfully deployed projects across both platforms. He also has extensive experience across a variety of sectors, retail and government in particular. Harrop is the author of five books, including Pro Spring, a widely-acclaimed, comprehensive resource on the Spring Framework.Chris Schaeferis a Principle Software Developer for Spring project at Pivotal, the makers of Spring Framework, Boot and other Spring tools.Clarence Hois the Senior Java Architect of a HK-based software consultancy firm, SkywideSoft Technology Limited. Having been worked in the IT field for over 20 years, Clarence had been the team leader of many in-house application development projects, as well as providing consultancy services on enterprise solutions to clients.\nRead more","summary":"Master Spring basics and core topics, and share the authors’ insights and real–world experiences with remoting, Hibernate, and EJB. Beyond the basics, you'll learn how to leverage the Spring Framework to build the various tiers and parts of an enterprise Java application: transactions, web and presentation tiers, deployment, and much more. A full sample application allows you to apply many of the technologies and techniques covered in Pro Spring 5 and see how they work together.\nThis book updates the perennial bestseller with the latest that the new Spring Framework 5 has to offer. Now in its fifth edition, this popular title is by far the most comprehensive and definitive treatment of Spring available. It covers the new functional web framework and interoperability with Java 9.\nAfter reading this definitive book, you'll be armed with the power of Spring to build complex Spring applications, top to bottom.\nThe agile, lightweight, open-source Spring Framework\ncontinues to be the de facto leading enterprise Java application development framework for today's Java programmers and developers. It works with other leading open-source, agile, and lightweight Java technologies such as Hibernate, Groovy, MyBatis, and more. Spring now works with Java EE and JPA 2 as well.\nWhat You'll Learn\nDiscover what’s new in Spring Framework 5Use the Spring Framework with Java 9Master data access and transactionsWork with the new functional web frameworkCreate microservices and other web services\nWho This Book Is For\nExperienced Java and enterprise Java developers and programmers. Some experience with Spring highly recommended.","price":"USD 37.71"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"A complete guide to build robust and scalable web applications with Spring and Angular.","author":["Ajitesh Shukla"],"pubdate":"2017-8-24","tags":[{"count":1,"name":"spring","title":"spring"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29695987.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"370","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s29695987.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s29695987.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29695987.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30148768\/","id":"30148768","publisher":"Packt Publishing","isbn10":"1787284662","isbn13":"9781787284661","title":"Building Web Apps with Spring 5 and Angular","url":"https:\/\/api.douban.com\/v2\/book\/30148768","alt_title":"","author_intro":"About the Author\nAjitesh ShuklaAjitesh Shukla is an accomplished software engineer with over 18 years experience in the IT industry, taking up different roles and responsibilities in startups and bigger companies, including Infosys, Computer Associates, WaveCrest, Evoke Technologies, and Raksan Consulting. He has worked on several web and mobile app projects based on technologies such as Java, Spring, Hibernate, AngularJS\/Angular, ReactJS, and Ionic framework. Currently, he's interested in building cloud-native apps, cloud platforms, blockchain, and cyber security. Ajitesh is an avid blogger and writes for websites such as DZone and Vitalflux, among many others. His hobbies include playing musical instruments, writing, and attending and organizing meetups. Currently, Ajitesh has been working with a startup, Raksan consulting, as a Technology Evangelist where he is leading their innovation team and carving out newer solutions in the area of cloud platforms such as AWS\/Google cloud, cloud-native technologies, data analytics, and blockchain. You can follow Ajitesh on LinkedIn (\/ajitesh) and GitHub (\/eajitesh). You can also follow Ajitesh on Stack Overflow (\/users\/554132\/ajitesh).\nRead more","summary":"About This Book\nThis hands on guide will teach you how to build an end-to-end modern web application using Spring and Angular.It is easy to read and will benefit Java developers who have been used to develop the back-end part of web application while front-end (UI) has been left for UI developers.Learn the core aspects involved in developing the backend and the UI, right from designing to integrating and deploying.\nWho This Book Is For\nThis book is targeted towards Java Web Developers with a basic knowledge of Spring who want to build complete web applications in a fast and effective way. They will want to gain a stronghold on both frontend and backend development to advance in their careers.\nWhat You Will Learn\nSet up development environment for Spring Web App and Angular app.Process web request and response and build REST API endpoints.Create data access components using Spring Web MVC framework and HibernateUse Junit 5 to test your applicationLearn the fundamental concepts around building AngularConfigure and use Routes and Components.Protect Angular app content from common web vulnerabilities and attacks.Integrate Angular apps with Spring Boot Web API endpointsDeploy the web application based on CI and CD using Jenkins and Docker containers\nIn Detail\nSpring is the most popular application development framework being adopted by millions of developers around the world to create high performing, easily","price":"USD 38.58"},{"rating":{"max":10,"numRaters":1,"average":"0.0","min":0},"subtitle":"Build a modern, full-stack web application using Spring Boot and Vuex","author":["James J. Ye"],"pubdate":"2018-10-26","tags":[{"count":1,"name":"vue","title":"vue"},{"count":1,"name":"to","title":"to"},{"count":1,"name":"set","title":"set"},{"count":1,"name":"proxy","title":"proxy"},{"count":1,"name":"new","title":"new"},{"count":1,"name":"have","title":"have"},{"count":1,"name":"for","title":"for"},{"count":1,"name":"create","title":"create"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s31200249.jpg","binding":"平装","translator":[],"catalog":"Table of Contents\nModern Web Application Development: This is a new era\nVue.js 2 - It Works in the Way You Expected\nSpring 5 - The Right Stack for the Job at Hand\nTaskAgile: A Trello-like task management tool\nData Modeling: Design the foundation of the application\nCode Design: Design for stability and extensibility\nRESTful API Design: Build the language between front-end and back-end\nCreating Application Scaffold: Take off like a rocket\nForm and Validation: Create the User module\nSpring Security: Make our application secure\nState management and i18n: Building home page\nComponents Communication and Real-Time Update: Build the Board module\nFile Processing and Scalability: Write the Card module\nScaling The System: Scale it from architecture level\nPerformance Tuning: Faster, faster, and faster","pages":"","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s31200249.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s31200249.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s31200249.jpg"},"alt":"https:\/\/book.douban.com\/subject\/32306841\/","id":"32306841","publisher":"Packt Publishing","isbn10":"1788836960","isbn13":"9781788836968","title":"Building Applications with Spring 5 and Vue.js 2","url":"https:\/\/api.douban.com\/v2\/book\/32306841","alt_title":"","author_intro":"James J. Ye is an experienced software engineer and architect with a particular interest in full-stack engineering. James works at 6Connex Inc. as VP of Engineering. He manages the offshore engineering team in Suzhou, China. The team is responsible for all the engineering of the Virtual Experience SaaS platform. He has been using Spring since version 2.5.x and Vue.js since version 1.0. He also likes Angular, React, TypeScript, and Python.","summary":"Become efficient in both frontend and backend web development with Spring and Vue\nKey Features\nConnect application’s frontend and backend with Vue, Vuex, and Spring Boot\nLeverage the latest web standards to enhance code performance, readability, and cross-compatibility\nBuild secure full-stack web applications with Spring Security\nBook Description\nBuilding Applications with Spring 5 and Vue.js 2, with its practical approach, helps you become a full-stack web developer. As well as knowing how to write frontend and backend code, a developer has to tackle all problems encountered in the application development life cycle – starting from the simple idea of an application, to the UI and technical designs, and all the way to implementation, testing, production deployment, and monitoring.","price":""},{"rating":{"max":10,"numRaters":2,"average":"0.0","min":0},"subtitle":"Spring Boot 2+Spring 5+Spring Cloud实战","author":["郑天民"],"pubdate":"2019-6","tags":[{"count":3,"name":"响应式","title":"响应式"},{"count":2,"name":"开发_架构","title":"开发_架构"},{"count":2,"name":"spring","title":"spring"},{"count":1,"name":"计算机","title":"计算机"},{"count":1,"name":"reactive","title":"reactive"},{"count":1,"name":"11","title":"11"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s32744146.jpg","binding":"平装","translator":[],"catalog":"第1章  直面响应式微服务架构\t1\n1.1  响应式系统核心概念\t1\n1.1.1  从传统编程方法到响应式编程方法\t1\n1.1.2  响应式宣言与响应式系统\t4\n1.2  剖析微服务架构\t6\n1.2.1  分布式系统与微服务架构\t6\n1.2.2  服务拆分与集成\t8\n1.2.3  微服务架构的核心组件\t11\n1.2.4  微服务架构技术体系\t13\n1.3  构建响应式微服务架构\t15\n1.3.1  响应式微服务架构设计原则\t15\n1.3.2  整合响应式编程与微服务架构\t18\n1.4  全书架构\t19\n1.5  本章小结\t20\n第2章  响应式编程模型与Reactor框架\t21\n2.1  响应式编程模型\t21\n2.1.1  流\t22\n2.1.2  背压\t24\n2.1.3  响应式流\t25\n2.2  Reactor框架\t28\n2.2.1  响应式编程实现技术概述\t28\n2.2.2  引入Reactor框架\t31\n2.3  创建Flux和Mono\t34\n2.3.1  创建Flux\t34\n2.3.2  创建Mono\t37\n2.4  Flux和Mono操作符\t39\n2.4.1  转换操作符\t39\n2.4.2  过滤操作符\t43\n2.4.3  组合操作符\t46\n2.4.4  条件操作符\t49\n2.4.5  数学操作符\t52\n2.4.6  Observable工具操作符\t54\n2.4.7  日志和调试操作符\t56\n2.5  Reactor框架中的背压机制\t58\n2.6  本章小结\t60\n第3章  构建响应式RESTful服务\t61\n3.1  使用Spring Boot 2.0构建微服务\t61\n3.1.1  Spring Boot基本特性\t61\n3.1.2  基于Spring Boot的第一个RESTful服务\t63\n3.1.3  使用Actuator组件强化服务\t67\n3.2  使用Spring WebFlux构建响应式服务\t80\n3.2.1  使用Spring Initializer初始化响应式Web应用\t80\n3.2.2  对比响应式Spring WebFlux与传统Spring WebMvc\t82\n3.2.3  使用注解编程模型创建响应式RESTful服务\t84\n3.2.4  使用函数式编程模型创建响应式RESTful服务\t88\n3.3  本章小结\t93\n第4章  构建响应式数据访问组件\t94\n4.1  Spring Data数据访问模型\t94\n4.1.1  Spring Data抽象\t95\n4.1.2  集成Spring Data JPA\t98\n4.1.3  集成Spring Data Redis\t100\n4.1.4  集成Spring Data Mongodb\t103\n4.2  响应式数据访问模型\t104\n4.2.1  Spring Reactive Data抽象\t105\n4.2.2  创建响应式数据访问层组件\t107\n4.3  响应式Mongodb\t108\n4.3.1  初始化Reactive Mongodb运行环境\t109\n4.3.2  创建Reactive Mongodb Repository\t112\n4.3.3  使用CommandLineRunner初始化Mongodb数据\t113\n4.3.4  在Service层中调用Reactive MongodbRepository\t114\n4.4  响应式Redis\t117\n4.4.1  初始化Reactive Redis运行环境\t117\n4.4.2  创建Reactive Redis Repository\t121\n4.4.3  在Service层中调用Reactive Repository\t122\n4.5  本章小结\t123\n第5章  构建响应式消息通信组件\t124\n5.1  消息通信系统简介\t125\n5.2  使用Spring Cloud Stream构建消息通信系统\t126\n5.2.1  Spring Cloud Stream基本架构\t126\n5.2.2  Spring Cloud Stream中的Binder组件\t130\n5.2.3  使用Source组件实现消息发布者\t135\n5.2.4  使用@StreamListener注解实现消息消费者\t137\n5.3  引入Reactive Spring Cloud Stream实现响应式 消息通信系统\t139\n5.3.1  Reactive Spring Cloud Stream组件\t139\n5.3.2  Reactive Spring Cloud Stream示例\t141\n5.4  本章小结\t147\n第6章  构建响应式微服务架构\t148\n6.1  使用Spring Cloud创建响应式微服务架构\t148\n6.1.1  服务治理\t149\n6.1.2  负载均衡\t154\n6.1.3  服务容错\t161\n6.1.4  服务网关\t166\n6.1.5  服务配置\t173\n6.1.6  服务监控\t177\n6.2  使用WebClient实现响应式服务调用\t182\n6.2.1  创建和配置WebClient\t182\n6.2.2  使用WebClient访问服务\t183\n6.3  本章小结\t187\n第7章  测试响应式微服务架构\t188\n7.1  初始化测试环境\t189\n7.1.1  引入spring-boot-starter-test组件\t189\n7.1.2  解析基础类测试注解\t190\n7.1.3  编写第一个测试用例\t191\n7.2  测试Reactor组件\t192\n7.3  测试响应式Repository层组件\t194\n7.3.1  测试内嵌式Mongodb\t194\n7.3.2  测试真实MongoDB\t197\n7.4　测试响应式Service层组件\t199\n7.5  测试响应式Controller层组件\t201\n7.6  本章小结\t204\n第8章  响应式微服务架构演进案例分析\t205\n8.1  PrescriptionSystem案例简介\t205\n8.2  传统微服务架构实现案例\t207\n8.2.1  构建基础设施类服务\t207\n8.2.2  构建Medicine服务\t213\n8.2.3  构建Card服务\t219\n8.2.4  构建Prescription服务\t224\n８.3  响应式微服务架构演进案例\t237\n8.3.1  更新基础设施类服务\t237\n8.3.2  更新数据访问方式\t241\n8.3.3  更新事件通信方式\t246\n8.4  本章小结\t266\n参考文献\t267","pages":"276","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s32744146.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s32744146.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s32744146.jpg"},"alt":"https:\/\/book.douban.com\/subject\/33950050\/","id":"33950050","publisher":"电子工业出版社","isbn10":"7121363836","isbn13":"9787121363832","title":"Spring响应式微服务","url":"https:\/\/api.douban.com\/v2\/book\/33950050","alt_title":"","author_intro":"","summary":"《Spring响应式微服务：Spring Boot 2+Spring 5+Spring Cloud实战》主要包含构建响应式微服务架构过程中所应具备的技术体系和工程实践。围绕响应式编程和微服务 架构的整合，我们将讨论如何使用 Reactor 响应式编程框架、如何构建响应式 RESTful 服务、如何构建响应式数据访问组件、如何构建响应式消息通信组件、如何构建响应式微服务架构，以及如何测试响应式微服务 架构等核心主题，并基于这些核心主题给出具体的案例分析。\n《Spring响应式微服务：Spring Boot 2+Spring 5+Spring Cloud实战》面向立志于成为微服务架构师（尤其是响应式微服务架构师）的后端服务开发人员，读者不需要有 很高的技术水平，也不限于特定的开发语言，但熟悉 Java EE 常见技术并掌握一定异步编程模型和分布式架构的基本概念有助于更好地理解书中的内容。同时，本书也可以供具备不同技术体系的架构师同行参考，希 望能给日常研发和管理工作带来启发和帮助。","price":"75.00元"},{"rating":{"max":10,"numRaters":3,"average":"0.0","min":0},"subtitle":"Struts 2.1+Hibernate 3.5+Spring 3.0整合开发","author":["陈天河 [等]编著"],"pubdate":"2011-1","tags":[{"count":1,"name":"struts2","title":"struts2"},{"count":1,"name":"Web","title":"Web"}],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s6248007.jpg","binding":"平装","translator":[],"catalog":"","pages":"629","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s6248007.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s6248007.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s6248007.jpg"},"alt":"https:\/\/book.douban.com\/subject\/5351838\/","id":"5351838","publisher":"电子工业出版社","isbn10":"7121119536","isbn13":"9787121119538","title":"轻量级Web应用开发宝典","url":"https:\/\/api.douban.com\/v2\/book\/5351838","alt_title":"","author_intro":"","summary":"《轻量级Web应用开发宝典:Struts 2.1＋Hibernate 3.5＋Spring 3.0整合开发》详细讲解了Struts 2.1，Hibernate 3.5和Spring 3.0这三个组件的基础知识和基本使用方法，并通过一系列集成开发实例讲解了这三个组件在J2EE项目中的应用。《轻量级Web应用开发宝典:Struts 2.1＋Hibernate 3.5＋Spring 3.0整合开发》对每一个组件的讲解都是以入门级实例开始的，然后对组件的架构以及各方面的功能进行了深入的探讨。这样安排的好处是使读者在具备了初步知识的基础上对组件进行更深入的理解，并通过一系列贴近实际的实例来提高读者对组件的把握能力以及迅速丰富开发经验。《轻量级Web应用开发宝典:Struts 2.1＋Hibernate 3.5＋Spring 3.0整合开发》的配套光盘中包含了《轻量级Web应用开发宝典:Struts 2.1＋Hibernate 3.5＋Spring 3.0整合开发》所有实例的完整源代码以及开发中需要使用到的辅助工具。《轻量级Web应用开发宝典:Struts 2.1＋Hibernate 3.5＋Spring 3.0整合开发》适合于使用基于Struts，Hibernate，Spring的Java应用程序进行开发的技术人员，同时也非常适合对这三种技术感兴趣的读者进行学习和提高。","price":"79.00元"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"Build reactive and cloud-native microservices with Kotlin using Spring 5 and Spring Boot 2.0","author":["Juan Antonio Medina Iglesias"],"pubdate":"2018-1-29","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29802017.jpg","binding":"平装","translator":[],"catalog":"Understanding Microservices\nGetting Started with Spring Boot 2.0\nCreating RESTful services\nCreating Reactive Microservices\nReactive Spring Data\nCreating Cloud Native Microservices\nCreating Dockers\nScaling Microservices\nTesting Spring Microservices\nMonitoring Microservices\nDeploying Microservices\nBest Practices","pages":"414","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s29802017.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s29802017.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s29802017.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30257151\/","id":"30257151","publisher":"Packt Publishing","isbn10":"1788471458","isbn13":"9781788471459","title":"Hands-On Microservices with Kotlin","url":"https:\/\/api.douban.com\/v2\/book\/30257151","alt_title":"","author_intro":"Juan Antonio Medina Iglesias began his career 20 years ago as an indie game developer and worked abroad four countries since then, from embedded software to enterprise applications. He has a lifetime's dedication to software craftsmanship.\nSince 2006, he works at Santander Technology with a talented group of professionals who performed one of the biggest transformations in the banking industry.\nNowadays, he works as a Senior Engineer in the Digital Transformation team within Santander Technology UK.","summary":"Key Features\nWrite easy-to-maintain lean and clean code with Kotlin for developing better microservices\nScale your Microserivces in your own cloud with Docker and Docker Swarm\nExplore Spring 5 functional reactive web programming with Spring WebFlux\nBook Description\nWith Google's inclusion of first-class support for Kotlin in their Android ecosystem, Kotlin's future as a mainstream language is assured. Microservices help design scalable, easy-to-maintain web applications; Kotlin allows us to take advantage of modern idioms to simplify our development and create high-quality services. With 100% interoperability with the JVM, Kotlin makes working with existing Java code easier. Well-known Java systems such as Spring, Jackson, and Reactor have included Kotlin modules to exploit its language features.\nThis book guides the reader in designing and implementing services, and producing production-ready, testable, lean code that's shorter and simpler than a traditional Java implementation. Reap the benefits of using the reactive paradigm and take advantage of non-blocking techniques to take your services to the next level in terms of industry standards. You will consume NoSQL databases reactively to allow you to create high-throughput microservices. Create cloud-native microservices that can run on a wide range of cloud providers, and monitor them. You will create Docker containers for your microservices and scale them. Finally, you will deploy your microservices in OpenShift Online.\nWhat you will learn\nUnderstand microservice architectures and principles\nBuild microservices in Kotlin using Spring Boot 2.0 and Spring Framework 5.0\nCreate reactive microservices that perform non-blocking operations with Spring WebFlux\nUse Spring Data to get data reactively from MongoDB\nTest effectively with JUnit and Kotlin\nCreate cloud-native microservices with Spring Cloud\nBuild and publish Docker images of your microservices\nScaling microservices with Docker Swarm\nMonitor microservices with JMX\nDeploy microservices in OpenShift Online\nWho This Book Is For\nIf you are a Kotlin developer with a basic knowledge of microservice architectures and now want to effectively implement these services on enterprise-level web applications, then this book is for you","price":"$44.99"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"本书不仅讲解了Spring 5.2和Spring Boot 2.2的相关知识，还介绍了微服务、云原生应用方面的知识，做到让微服务、云原生应用落地。","author":["汪云飞","沈永林","陈晓茜"],"pubdate":"2020-1","tags":[{"count":1,"name":"计算机","title":"计算机"},{"count":1,"name":"web","title":"web"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s33524275.jpg","binding":"","translator":[],"catalog":"目录\n第 1 章  初识 Spring Boot ............................................................................................... 1\n1.1  Spring Boot 概述 ............................................................................................................ 1  1.2  快速建立 Spring Boot 应用 ........................................................................................... 2\n1.2.1  安装 Java ............................................................................................................. 2\n1.2.2  使用 Spring Initializr ........................................................................................... 2\n1.2.3  第一段代码 ......................................................................................................... 3\n1.3  体验 Spring Boot ............................................................................................................ 4  1.3.1  Spring Boot 的应用结构 ..................................................................................... 4\n1.3.2  build.gradle .......................................................................................................... 5\n1.3.3  QuickStartApplication ......................................................................................... 5\n1.3.4  application.properties .......................................................................................... 6\n1.4  小结 ................................................................................................................................ 6\n第 2 章  函数式编程 ........................................................................................................ 7\n2.1  了解函数式编程 ............................................................................................................ 7\n2.2  Lambda 表达式 .............................................................................................................. 7\n2.2.1  了解Lambda 表达式 .......................................................................................... 7\n2.2.2  把 Lambda 表达式作为参数 .............................................................................. 8\n2.3  函数接口 ........................................................................................................................ 9\n2.3.1  Predicate ............................................................................................................ 10\n2.3.2  Function ............................................................................................................. 12\n2.3.3  Consumer .......................................................................................................... 14\n2.3.4  Supplier ............................................................................................................. 14\n2.3.5  Operator ............................................................................................................. 15\n2.3.6  Comparator ........................................................................................................ 15\n2.3.7  自定义函数接口 ............................................................................................... 16\n2.4  方法引用 ...................................................................................................................... 16\n2.4.1  构造器方法引用 ............................................................................................... 16\n2.4.2  静态方法引用 ................................................................................................... 17\n2.4.3  实例方法引用 ................................................................................................... 18\n2.4.4  引用特定类的任意对象的方法 ....................................................................... 18\n2.5  Stream ........................................................................................................................... 18\n2.5.1  Stream 简介 ....................................................................................................... 19\n2.5.2  获得 Stream ....................................................................................................... 19\n2.5.3  中间操作 ........................................................................................................... 20\n2.5.4  终结操作 ........................................................................................................... 23\n2.6  Optional ........................................................................................................................ 27\n2.6.1  获得Optional .................................................................................................... 28\n2.6.2  Optional 的用法 ................................................................................................ 28\n2.7小结......................................................................................................................29\n第 3 章  Spring 5.X 基础 ............................................................................................... 30\n3.1  IoC 容器 ....................................................................................................................... 30\n3.2  Spring Bean 的配置 ..................................................................................................... 31\n3.2.1  注解配置（@Component） ............................................................................. 31\n3.2.2  Java 配置（@Configuration 和@Bean） ........................................................ 31\n3.2.3  依赖注入（Dependency Injection） ................................................................ 32\n3.2.4  运行检验（CommandLineRunner） ............................................................... 37\n3.2.5  Bean 的 Scope ................................................................................................... 38\n3.2.6  Bean 的生命周期 .............................................................................................. 40\n3.2.7  应用环境 ........................................................................................................... 43\n3.2.8  条件配置（@Conditional） ............................................................................ 46\n3.2.9  开启配置（@Enable*和@Import） ................................................................ 47\n3.3  对 Bean 的处理（BeanPostProcessor） ...................................................................... 53\n3.4  Spring Aware 容器 ....................................................................................................... 54\n3.5  Bean 之间的事件通信 ................................................................................................. 57\n3.6  Spring EL ...................................................................................................................... 59\n3.7  AOP .............................................................................................................................. 61\n3.8  注解工作原理 .............................................................................................................. 64\n3.8.1  BeanPostProcessor ............................................................................................ 64\n3.8.2  BeanFactoryPostProcessor ................................................................................ 66\n3.8.3  使用AOP .......................................................................................................... 68\n3.8.4  组合元注解 ....................................................................................................... 68\n3.9小结......................................................................................................................68\n第 4 章  深入 Spring Boot ............................................................................................. 69\n4.1  Spring Boot 介绍 .......................................................................................................... 69\n4.2  Spring Boot 的“魔法” .................................................................................................. 69\n4.2.1  加载自动配置 ................................................................................................... 69\n4.2.2  实现自动配置 ................................................................................................... 71\n4.3  Spring Boot 的配置 ...................................................................................................... 73\n4.3.1  应用配置 ........................................................................................................... 74\n4.3.2  修改默认配置 ................................................................................................... 76\n4.3.3  外部配置 ........................................................................................................... 79\n4.4  日志和报告 .................................................................................................................. 91\n4.4.1  日志 ................................................................................................................... 91\n4.4.2  报告 ................................................................................................................... 93\n4.5  多线程任务和计划任务 .............................................................................................. 94\n4.5.1  Task Executor .................................................................................................... 94\n4.5.2  Task Scheduler .................................................................................................. 97\n4.6  Gradle 插件 .................................................................................................................. 99\n4.6.1  依赖 ................................................................................................................... 99\n4.6.2  Spring Boot Starter .......................................................................................... 100\n4.6.3  插件任务 ......................................................................................................... 100\n4.7  自定义Starter ............................................................................................................. 100\n4.7.1  包装技术库 ..................................................................................................... 101\n4.7.2  Starter 的结构 ................................................................................................. 103\n4.7.3  autoconfigure 模块 .......................................................................................... 105\n4.7.4  Starter 模块 ..................................................................................................... 107\n4.7.5  使用 Starter ..................................................................................................... 108\n4.8  Spring Boot Actuator .................................................................................................. 110\n4.8.1  常用端点 ......................................................................................................... 110\n4.8.2  自定义 ............................................................................................................. 119\n4.8.3  使用 Prometheus 和Grafana 监控指标 ......................................................... 124\n4.9  小结 ............................................................................................................................ 128\n第 5 章  Spring Web MVC .......................................................................................... 129\n5.1  Spring Web MVC 简介 .............................................................................................. 129\n5.2  用 Spring Boot 学习Web MVC ................................................................................ 129\n5.2.1  核心注解 ......................................................................................................... 129\n5.2.2  RESTful 服务 .................................................................................................. 130\n5.2.3  @ControllerAdvice ......................................................................................... 146\n5.2.4  @RestControllerAdvice .................................................................................. 151\n5.2.5  JSON 定制 ...................................................................................................... 156\n5.2.6  RestTemplate ................................................................................................... 159\n5.3  Web MVC 配置 .......................................................................................................... 161\n5.3.1  Spring MVC 的工作原理 ............................................................................... 161\n5.3.2  配置MVC ....................................................................................................... 161\n5.3.3  Interceptor ....................................................................................................... 162\n5.3.4  Formatter ......................................................................................................... 164\n5.3.5  HttpMessageConverter .................................................................................... 166\n5.3.6  方法参数和返回值处理设置 ......................................................................... 169\n5.3.7  初始化数据绑定设置 ..................................................................................... 176\n5.3.8  类型转换原理与设置 ..................................................................................... 176\n5.3.9  路径匹配和内容协商 ..................................................................................... 183\n5.3.10  JSON ............................................................................................................. 188\n5.3.11 其他外部属性配置 ......................................................................................... 189\n5.4  Servlet 容器 ................................................................................................................ 191\n5.4.1  注册 Servlet、Filter 和 Listener ..................................................................... 191\n5.4.2  配置 Servlet 容器 ............................................................................................ 196\n5.5  异步请求 .................................................................................................................... 202\n5.5.1  Servlet 3.0 异步返回 ...................................................................................... 202\n5.5.2  HTTP Streaming.............................................................................................. 206\n5.5.3  HTTP\/2 ............................................................................................................ 212\n5.6  小结 ............................................................................................................................ 214\n第 6 章  数据访问 ....................................................................................................... 215\n6.1   Spring Data Repository ............................................................................................. 215\n6.1.1  DDD 与 Spring Data Repository ..................................................................... 215\n6.1.2  查询方法 ......................................................................................................... 218\n6.2  关系数据库——Spring Data JPA .............................................................................. 218\n6.2.1  JPA、Hibernate 和Spring Data JPA .............................................................. 218\n6.2.2  环境准备 ......................................................................................................... 218\n6.2.3  自动配置 ......................................................................................................... 220\n6.2.4  定义聚合 ......................................................................................................... 221\n6.2.5  定义聚合 Repository ...................................................................................... 224\n6.2.6  查询 ................................................................................................................. 226\n6.2.7  事件监听 ......................................................................................................... 238\n6.2.8  领域事件 ......................................................................................................... 242\n6.2.9  审计功能 ......................................................................................................... 245\n6.2.10  Web 支持 ...................................................................................................... 246\n6.2.11  数据库初始化 ............................................................................................... 248\n6.3  NoSQL——Spring Data Elasticsearch ....................................................................... 252\n6.3.1  Elascticsearch 简介 ......................................................................................... 252\n6.3.2  环境准备 ......................................................................................................... 252\n6.3.3  自动配置 ......................................................................................................... 253\n6.3.4  定义聚合 ......................................................................................................... 254\n6.3.5  定义聚合 Repository ...................................................................................... 255\n6.3.6  查询 ................................................................................................................. 256\n6.4  数据缓存 .................................................................................................................... 261\n6.4.1  Spring Boot 与缓存......................................................................................... 261\n6.4.2  环境准备 ......................................................................................................... 262\n6.4.3  使用缓存注解 ................................................................................................. 264\n6.5  小结 ............................................................................................................................ 266\n第 7 章  安全控制 ....................................................................................................... 267\n7.1  Spring Security 的应用 .............................................................................................. 267\n7.1.1  Spring Boot 的自动配置 ................................................................................. 267\n7.1.2  开启Web 安全配置 ....................................................................................... 268\n7.1.3  定制Web 安全配置 ....................................................................................... 268\n7.1.4  Authentication ................................................................................................. 269\n7.1.5  Authorization ................................................................................................... 281\n7.1.6  Spring Data 集成 ............................................................................................. 294\n7.2  Spring Security 实战 .................................................................................................. 295\n7.3  OAuth 2.0 ................................................................................................................... 301\n7.3.1  OAuth 2.0 Authorization Server ...................................................................... 301\n7.3.2  OAuth 2.0 Resource Server ............................................................................. 310\n7.3.3  OAuth 2.0 Client ............................................................................................. 317\n7.4  小结 ............................................................................................................................ 322\n第 8 章  响应式编程 .................................................................................................... 323\n8.1  Project Reactor............................................................................................................ 323\n8.1.1  Reactive Streams 的基础接口 ........................................................................ 323\n8.1.2  Flux 和 Mono .................................................................................................. 325\n8.2  Spring WebFlux .......................................................................................................... 327\n8.2.1  Spring WebFlux 基础 ..................................................................................... 327\n8.2.2  Spring Boot 的自动配置 ................................................................................. 328\n8.2.3  注解控制器 ..................................................................................................... 329\n8.2.4  函数式端点 ..................................................................................................... 332\n8.2.5  Spring WebFlux 的配置 ................................................................................. 334\n8.3  Reactive NoSQL ......................................................................................................... 334\n8.3.1  响应式 Elasticsearch ....................................................................................... 335\n8.3.2  响应式 MongoDB ........................................................................................... 339\n8.4  Reactive 关系型数据库：R2DBC ............................................................................. 342\n8.4.1  安装 PostgreSQL ............................................................................................ 343\n8.4.2  Spring Boot 的自动配置 ................................................................................. 343\n8.4.3  示例 ................................................................................................................. 344\n8.5  Reactive Spring Security ............................................................................................ 347\n8.5.1  Reactive Spring Security 原理 ........................................................................ 347\n8.5.2  Spring Boot 的自动配置 ................................................................................. 347\n8.5.3  示例 ................................................................................................................. 348\n8.6  小结 ............................................................................................................................ 354\n第 9 章  事件驱动 ....................................................................................................... 355\n9.1  JMS ............................................................................................................................. 355\n9.1.1  安装Apache ActiveMQ Artemis .................................................................... 355\n9.1.2  新建应用 ......................................................................................................... 356\n9.1.3  Spring Boot 的自动配置 ................................................................................. 356\n9.1.4  示例 ................................................................................................................. 356\n9.1.5  Topic 和 Queue ............................................................................................... 358\n9.2  RabbitMQ ................................................................................................................... 360\n9.3  Kafka .......................................................................................................................... 367\n9.4  Websocket .................................................................................................................. 374\n9.4.1  STOMP Websocket ......................................................................................... 374\n9.4.2  Reactive Websocket ........................................................................................ 379\n9.5  RSocket ....................................................................................................................... 382\n9.5.1  新建应用 ......................................................................................................... 382\n9.5.2  Spring Boot 的自动配置 ................................................................................. 383\n9.5.3  示例 ................................................................................................................. 383\n9.6  小结 ............................................................................................................................ 388\n第 10 章  系统集成与批处理 ....................................................................................... 389\n10.1  Spring Integration ..................................................................................................... 389\n10.1.1  Spring Integration 基础 ................................................................................. 389\n10.1.2  Spring Integration Java DSL ......................................................................... 391\n10.1.3  示例 ............................................................................................................... 392\n10.2  Spring Batch ............................................................................................................. 395\n10.2.1  Spring Batch 的流程 ..................................................................................... 396\n10.2.2  Spring Boot 的自动配置 ............................................................................... 396\n10.2.3  示例 ............................................................................................................... 397\n10.3  小结 .......................................................................................................................... 402\n第 11 章  Spring Cloud 与微服务 ................................................................................ 403  11.1  微服务基础 .............................................................................................................. 403  11.1.1  微服务和云原生应用 ................................................................................... 403\n11.1.2  领域驱动设计 ............................................................................................... 404\n11.2  Spring Cloud ............................................................................................................. 405\n11.2.1  服务发现 ....................................................................................................... 405\n11.2.2  配置管理 ....................................................................................................... 408\n11.2.3  同步服务交互 ............................................................................................... 412\n11.2.4  异步服务交互 ............................................................................................... 417\n11.2.5  响应式异步交互 ........................................................................................... 427\n11.2.6  应用网关：Spring Cloud Gateway .............................................................. 430\n11.2.7  认证授权 ....................................................................................................... 433\n11.3  小结 .......................................................................................................................... 442\n第 12 章  Kubernetes 与微服务 .................................................................................. 443\n12.1  Kubernetes ................................................................................................................ 443\n12.1.1  安装 ............................................................................................................... 443\n12.1.2  Kubernetes 基础知识 .................................................................................... 445\n12.1.3  Helm .............................................................................................................. 460\n12.1.4  DevOps .......................................................................................................... 463\n12.1.5  安装Jenkins .................................................................................................. 464\n12.1.6  微服务示例 ................................................................................................... 465\n12.1.7  镜像仓库和 Dockerfile ................................................................................. 467\n12.1.8  使用Helm 打包应用 .................................................................................... 471\n12.1.9  Jenkins 流程 .................................................................................................. 475\n12.2  Service Mesh 和 Istio ............................................................................................... 481\n12.2.1  安装Istio ....................................................................................................... 482\n12.2.2  微服务示例 ................................................................................................... 483\n12.3  小结 .......................................................................................................................... 490","pages":"504","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s33524275.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s33524275.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s33524275.jpg"},"alt":"https:\/\/book.douban.com\/subject\/34894577\/","id":"34894577","publisher":"电子工业出版社","isbn10":"7121377926","isbn13":"9787121377921","title":"从企业级开发到云原生微服务：Spring Boot实战","url":"https:\/\/api.douban.com\/v2\/book\/34894577","alt_title":"","author_intro":"","summary":"编辑推荐\n《从企业级开发到云原生微服务：Spring Boot实战》以Spring 5.2和Spring Boot 2.2为基础，内容由浅入深，适合各个级别的读者学习。\n无论是简单的技术点，还是复杂的技术点，都配有实战案例，系统地讲解在日常企业级开发和微服务开发中面临的大部分的问题。\n内容提要\n《从企业级开发到云原生微服务：Spring Boot实战》以Spring 5.2和Spring Boot 2.2为基础，系统地讲解了在日常企业级开发和微服务开发中面临的大部分的问题，如函数式编程、Spring MVC、Spring Data、Spring Security、响应式编程、事件驱动、Spring Integration、Spring Batch、Spring Cloud、Kubernetes与微服务等。《从企业级开发到云原生微服务：Spring Boot实战》内容由浅入深，适合有Java基础的初级程序员学习。同时，本书还介绍了较深的理论及原理知识，可供中、高级工程师提升使用。本书讲解的所有主题都附有实战案例，读者可快速将相关技术应用于工作实践中。\n前言\n缘起\n距离我的第一本书《Java EE 开发的颠覆者：Spring Boot开发》的出版已经过去了四年，在这四年中，Spring Boot从刚开始被关注到现在被广泛应用于企业级开发，我很荣幸参与了这一进程。\n在这四年里，技术发生了许多的变化，微服务、云原生已经成为技术流行词，这也促使我们对技术的关注点从企业级开发逐渐向微服务、云原生应用转移。在规划本书时，本想将其作为《Java EE开发的颠覆者：Spring Boot开发》的第二版，但最终还是以一本新书推出，原因有二：\n第一，内容完全重新编写，全部基于Spring 5.2和Spring Boot 2.2编写，只是部分章节名称和第一本书相同。\n第二，添加了微服务、云原生应用方面的知识，做到让微服务、云原生应用落地。\n第一本书收到了许多读者的好评，这给了我很大的信心再写一本关于最新的Spring Boot实战的书籍。为了能更多地照顾到应用开发的方方面面，最初我列出了26章，这让本书几乎无法完成。此时，我想起《人月神话》中的“第二系统效应”：在完成一个小型、优雅而成功的系统之后，人们倾向于对下一个计划有过度的期待，可能因此建造出一个巨大的、有各种特色的“怪兽系统”。\n这正是我最初在写作本书时的心态，此时我将精力重新聚焦在Spring Boot在企业级应用和云原生应用，经过近半年的努力，终于让本书与大家见面。\n特色\n非常感谢各位读者对我的第一本书的厚爱，期待大家同样喜欢本书。本书特色如下：\n◎由浅入深，适合初学者及各个级别的学习者学习。\n◎无论是简单的技术点，还是复杂的技术点，都配有实战案例。\n本书内容\n第1章初识Spring Boot。以简单的方式新建Spring Boot应用，让初学者可以对Spring Boot有感性的认识。如果读者已经学习或使用过Spring Boot，则可快速阅读或略过本章。\n第2章函数式编程。Spring 5.X 支持的 JDK 基线版本为 8，本书中的大量代码都涉及函\n数式编程的内容，响应式编程更是以函数式编程为基础，所以学好函数式编程会给后面的学习 打下良好的基础。\n第3章Spring 5.X基础。本章带领读者快速学习 Spring 5.2常用的主要内容，为学习和理解Spring Boot打下坚实的基础。\n第4章深入Spring Boot。本章首先讲解Spring Boot的运行原理，然后讲解Spring Boot 2.2的核心内容。\n第5章Spring Web MVC。Spring Web MVC是工程师开发工作的核心，本章从简单应用和深层配置等各个方面对Spring MVC进行深入的讲解。\n第6章数据访问。本章讲解Spring Data伞形项目，Spring Data是Spring生态中有魅力、能提高生产力的框架之一，它可以使用相同的编程模型对不同的数据库技术进行开发，本章包含 Spring Data JPA、Spring Data Elasticsearch和数据缓存。\n第7章安全控制。Spring Security是Java EE领域成熟的安全解决方案，本章学习Spring Security和OAuth 2.0的应用。\n第8章响应式编程。响应式编程是未来几年的技术趋势，本章从开发的各个环节完全打通响应式开发，包含Project Reactor、Spring WebFlux、Reactive NoSQL、R2DBC和Reactive Spring Security。\n第9章事件驱动。本章讲解在事件驱动开发中的常用技术，以达到应用之间的松耦合，本章包含 JMS、RabbitMQ、Kafka、Websocket和RSocket。\n第10章系统集成与批处理。本章主要讲解系统集成框架 Spring Integration和批处理框架Spring Batch。\n第11章Spring Cloud与微服务。本章讲解微服务和Spring Cloud的主要知识，还特别介绍了在Spring Cloud下OAuth 2.0的使用。\n第12章Kubernetes 与微服务。在微服务开发完成后，它的部署主要基于Kubernetes平台。本章首先讲解基于Kubernetes、Jenkins和Helm的部署，然后介绍服务网格Istio在微服务部署中的应用。\n由于时间及作者本人水平有限，书中难免有所错漏，望各位读者及时指出书中的不当之处并与我联系：https:\/\/github.com\/wiselyman\/spring-boot-book-source-code。","price":"108.00元"},{"rating":{"max":10,"numRaters":1,"average":"0.0","min":0},"subtitle":"Proceedings of the Spring School on Nonperturbative Aspects of String Theory and Supersymmetric Gauge Theories ICTP, Trieste, Italy 23-31 March 1998 - Proceedings of the Trieste Conference on Super-five-branes and Physics in 5+1 Dimensions ICTP, Trieste, Italy 1-3 April 1998","author":["Trieste Spring School (1998 Trieste, Italy)\/ Sezgin, E. (EDT)\/ Pope, C. (EDT)\/ Greene, B. (EDT)\/ Louis, J. (EDT)\/ Duff, M. J. (EDT)\/ Duff, M. J.\/ Trie"],"pubdate":"1999-7","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s8444238.jpg","binding":"HRD","translator":[],"catalog":"","pages":"454","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s8444238.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s8444238.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s8444238.jpg"},"alt":"https:\/\/book.douban.com\/subject\/1804853\/","id":"1804853","publisher":"World Scientific Pub Co Inc","isbn10":"9810237855","isbn13":"9789810237851","title":"Nonperturbative Aspects of Strings, Branes and Supersymmetry","url":"https:\/\/api.douban.com\/v2\/book\/1804853","alt_title":"","author_intro":"","summary":"","price":"674.00元"},{"rating":{"max":10,"numRaters":3,"average":"0.0","min":0},"subtitle":"Struts 2+Spring 5+Hibernate 5\/JPA 2整合开发","author":["李刚"],"pubdate":"2018-3","tags":[{"count":4,"name":"编程","title":"编程"},{"count":3,"name":"计算机","title":"计算机"},{"count":1,"name":"软件开发","title":"软件开发"},{"count":1,"name":"web","title":"web"},{"count":1,"name":"Java","title":"Java"},{"count":1,"name":"JAVA","title":"JAVA"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29724940.jpg","binding":"平装","translator":[],"catalog":"第1章  Java EE应用和开发环境  1\n1.1  Java EE应用概述  2\n1.1.1  Java EE应用的分层模型  2\n1.1.2  Java EE应用的组件  3\n1.1.3  Java EE应用的结构和优势  4\n1.1.4  常用的Java EE服务器  4\n1.2  轻量级Java EE应用相关技术  5\n1.2.1  JSP、Servlet 3.x和JavaBean及替代技术  5\n1.2.2  Struts 2.5及替代技术  5\n1.2.3  Hibernate 5.2及替代技术  6\n1.2.4  Spring 5.0及替代技术  6\n1.3  Tomcat的下载和安装  7\n1.3.1  安装Tomcat服务器  8\n1.3.2  配置Tomcat的服务端口  9\n1.3.3  进入控制台  9\n1.3.4  部署Web应用  12\n1.3.5  配置Tomcat的数据源  12\n1.4  Eclipse的安装和使用  14\n1.4.1  Eclipse的下载和安装  14\n1.4.2  在线安装Eclipse插件  15\n1.4.3  从本地压缩包安装插件  17\n1.4.4  手动安装Eclipse插件  17\n1.4.5  使用Eclipse开发Java EE应用  17\n1.4.6  导入Eclipse项目  20\n1.4.7  导入非Eclipse项目  21\n1.5  Ant的安装和使用  22\n1.5.1  Ant的下载和安装  23\n1.5.2  使用Ant工具  23\n1.5.3  定义生成文件  25\n1.5.4  Ant的任务（task）  29\n1.6  Maven的安装和使用  31\n1.6.1  下载和安装Maven  31\n1.6.2  设置Maven  32\n1.6.3  创建、构建简单的项目  33\n1.6.4  Maven的核心概念  36\n1.6.5  依赖管理  41\n1.6.6  POM文件的元素  43\n1.7  使用SVN进行协作开发  44\n1.7.1  下载和安装SVN服务器  45\n1.7.2  配置SVN资源库  45\n1.7.3  下载和安装SVN客户端  47\n1.7.4  将项目发布到服务器  47\n1.7.5  从服务器下载项目  48\n1.7.6  提交（Commit）修改  48\n1.7.7  同步（Update）本地文件  48\n1.7.8  添加文件和目录  49\n1.7.9  删除文件和目录  50\n1.7.10  查看文件或目录的版本变革  50\n1.7.11  从以前版本重新开始  50\n1.7.12  创建分支  51\n1.7.13  沿着分支开发  51\n1.7.14  合并分支  52\n1.7.15  使用Eclipse作为SVN客户端  52\n1.8  使用Git进行软件配置管理（SCM）  55\n1.8.1  下载和安装Git、TortoiseGit  56\n1.8.2  创建本地资源库  58\n1.8.3  添加（Add）文件和目录  59\n1.8.4  提交（Commit）修改  60\n1.8.5  查看文件或目录的版本变更  61\n1.8.6  删除文件和目录  62\n1.8.7  从以前版本重新开始  62\n1.8.8  克隆（Clone）项目  63\n1.8.9  创建分支  64\n1.8.10  沿着分支开发  64\n1.8.11  合并分支  65\n1.8.12  使用Eclipse作为Git客户端  65\n1.8.13  配置远程中央资源库  67\n1.8.14  推送（Push）项目  69\n1.8.15  获取（Fetch）项目和拉取（Pull）项目  70\n1.9  本章小结  72\n第2章  JSP\/Servlet及相关技术详解  73\n2.1  Web应用和web.xml文件  74\n2.1.1  构建Web应用  74\n2.1.2  配置描述符web.xml  75\n2.2  JSP的基本原理  76\n2.3  JSP的4种基本语法  80\n2.3.1  JSP注释  80\n2.3.2  JSP声明  81\n2.3.3  JSP输出表达式  82\n2.3.4  JSP小脚本  83\n2.4  JSP的3个编译指令  85\n2.4.1  page指令  85\n2.4.2  include指令  89\n2.5  JSP的7个动作指令  90\n2.5.1  forward指令  90\n2.5.2  include指令  92\n2.5.3  useBean、setProperty、getProperty指令  93\n2.5.4  plugin指令  96\n2.5.5  param指令  96\n2.6  JSP脚本中的9个内置对象  96\n2.6.1  application对象  98\n2.6.2  config对象  103\n2.6.3  exception对象  105\n2.6.4  out对象  107\n2.6.5  pageContext对象  108\n2.6.6  request对象  109\n2.6.7  response对象  116\n2.6.8  session对象  120\n2.7  Servlet介绍  122\n2.7.1  Servlet的开发  122\n2.7.2  Servlet的配置  124\n2.7.3  JSP\/Servlet的生命周期  125\n2.7.4  load-on-startup Servlet  126\n2.7.5  访问Servlet的配置参数  127\n2.7.6  使用Servlet作为控制器  129\n2.8  JSP 2的自定义标签  133\n2.8.1  开发自定义标签类  133\n2.8.2  建立TLD文件  134\n2.8.3  使用标签库  135\n2.8.4  带属性的标签  136\n2.8.5  带标签体的标签  139\n2.8.6  以页面片段作为属性的标签  141\n2.8.7  动态属性的标签  143\n2.9  Filter介绍  144\n2.9.1  创建Filter类  145\n2.9.2  配置Filter  146\n2.9.3  使用URL Rewrite实现网站伪静态  149\n2.10  Listener介绍  150\n2.10.1  实现Listener类  151\n2.10.2  配置Listener  152\n2.10.3  使用ServletContextAttributeListener  153\n2.10.4  使用ServletRequestListener和ServletRequestAttributeListener  154\n2.10.5  使用HttpSessionListener和HttpSessionAttributeListener  155\n2.11  JSP 2特性  160\n2.11.1  配置JSP属性  160\n2.11.2  表达式语言  162\n2.11.3  Tag File支持  170\n2.12  Servlet 3新特性  172\n2.12.1  Servlet 3的注解  172\n2.12.2  Servlet 3的Web模块支持  172\n2.12.3  Servlet 3提供的异步处理  174\n2.12.4  改进的Servlet API  177\n2.13  Servlet 3.1新增的非阻塞式IO  180\n2.14  Tomcat 8.5的WebSocket支持  182\n2.15  本章小结  187\n第3章  Struts 2的基本用法  188\n3.1  MVC思想概述  189\n3.1.1  传统Model 1和Model 2  189\n3.1.2  MVC思想及其优势  190\n3.2  Struts 2的下载和安装  191\n3.2.1  为Web应用增加Struts 2支持  191\n3.2.2  在Eclipse中使用Struts 2  192\n3.2.3  增加登录处理  193\n3.3  Struts 2的流程  196\n3.3.1  Struts 2应用的开发步骤  196\n3.3.2  Struts 2的运行流程  197\n3.4  Struts 2的常规配置  198\n3.4.1  常量配置  198\n3.4.2  包含其他配置文件  204\n3.5  实现Action  204\n3.5.1  Action接口和ActionSupport基类  206\n3.5.2  Action访问Servlet API  208\n3.5.3  Action直接访问Servlet API  210\n3.5.4  使用ServletActionContext访问Servlet API  212\n3.6  配置Action  212\n3.6.1  包和命名空间  213\n3.6.2  Action的基本配置  216\n3.6.3  使用Action的动态方法调用  217\n3.6.4  指定method属性及使用通配符  219\n3.6.5  配置默认Action  224\n3.6.6  配置Action的默认处理类  225\n3.7  配置处理结果  225\n3.7.1  理解处理结果  225\n3.7.2  配置结果  226\n3.7.3  Struts 2支持的结果类型  227\n3.7.4  plainText结果类型  229\n3.7.5  redirect结果类型  230\n3.7.6  redirectAction结果类型  231\n3.7.7  动态结果  232\n3.7.8  Action属性值决定物理视图资源  232\n3.7.9  全局结果  234\n3.7.10  使用PreResultListener  235\n3.8  配置Struts 2的异常处理  236\n3.8.1  Struts 2的异常处理机制  236\n3.8.2  声明式异常捕捉  238\n3.8.3  输出异常信息  239\n3.9  Convention插件与“约定”支持  240\n3.9.1  Action的搜索和映射约定  241\n3.9.2  按约定映射Result  243\n3.9.3  Action链的约定  246\n3.9.4  自动重加载映射  247\n3.9.5  Convention插件的相关常量  247\n3.9.6  Convention插件相关注解  248\n3.10  使用Struts 2的国际化  248\n3.10.1  视图页面的国际化  249\n3.10.2  Action的国际化  250\n3.10.3  使用包范围的国际化资源  251\n3.10.4  使用全局国际化资源  252\n3.10.5  输出带占位符的国际化消息  254\n3.10.6  加载资源文件的顺序  256\n3.11  使用Struts 2的标签库  256\n3.11.1  Struts 2标签库概述  256\n3.11.2  使用Struts 2标签  257\n3.11.3  Struts 2的OGNL表达式语言  258\n3.11.4  OGNL中的集合操作  260\n3.11.5  访问静态成员  261\n3.11.6  Lambda（）表达式  261\n3.11.7  控制标签  262\n3.11.8  数据标签  271\n3.11.9  主题和模板  279\n3.11.10  自定义主题  281\n3.11.11  表单标签  282\n3.11.12  非表单标签  294\n3.12  本章小结  297\n第4章  深入使用Struts 2  298\n4.1  详解Struts 2的类型转换  299\n4.1.1  Struts 2内建的类型转换器  299\n4.1.2  基于OGNL的类型转换  300\n4.1.3  指定集合元素的类型  302\n4.1.4  自定义类型转换器  304\n4.1.5  注册类型转换器  306\n4.1.6  基于Struts 2的自定义类型转换器  308\n4.1.7  处理Set集合  308\n4.1.8  类型转换中的错误处理  311\n4.2  使用Struts 2的输入校验  316\n4.2.1  编写校验规则文件  316\n4.2.2  国际化提示信息  319\n4.2.3  使用客户端校验  320\n4.2.4  字段校验器配置风格  321\n4.2.5  非字段校验器配置风格  322\n4.2.6  短路校验器  324\n4.2.7  校验文件的搜索规则  325\n4.2.8  校验顺序和短路  327\n4.2.9  内建校验器  327\n4.2.10  基于注解的输入校验  337\n4.2.11  手动完成输入校验  339\n4.3  使用Struts 2控制文件上传  342\n4.3.1  Struts 2的文件上传  342\n4.3.2  实现文件上传的Action  343\n4.3.3  配置文件上传的Action  345\n4.3.4  手动实现文件过滤  347\n4.3.5  拦截器实现文件过滤  348\n4.3.6  输出错误提示  349\n4.3.7  文件上传的常量配置  350\n4.4  使用Struts 2控制文件下载  351\n4.4.1  实现文件下载的Action  351\n4.4.2  配置Action  352\n4.4.3  下载前的授权控制  352\n4.5  详解Struts 2的拦截器机制  353\n4.5.1  拦截器在Struts 2中的作用  354\n4.5.2  Struts 2内建的拦截器  354\n4.5.3  配置拦截器  356\n4.5.4  使用拦截器的配置语法  357\n4.5.5  配置默认拦截器  358\n4.5.6  实现拦截器类  360\n4.5.7  使用拦截器  361\n4.5.8  拦截方法的拦截器  362\n4.5.9  拦截器的执行顺序  365\n4.5.10  拦截结果的监听器  366\n4.5.11  覆盖拦截器栈里特定拦截器的参数  367\n4.5.12  使用拦截器完成权限控制  368\n4.6  使用Struts 2的Ajax支持  370\n4.6.1  使用stream类型的Result实现Ajax  370\n4.6.2  JSON的基本知识  372\n4.6.3  实现Action逻辑  375\n4.6.4  JSON插件与json类型的Result  376\n4.6.5  实现JSP页面  377\n4.7  本章小结  378\n第5章  Hibernate的基本用法  380\n5.1  ORM和Hibernate  381\n5.1.1  对象\/关系数据库映射（ORM）  381\n5.1.2  基本映射方式  382\n5.1.3  流行的ORM框架简介  383\n5.1.4  Hibernate概述  383\n5.2  Hibernate入门  384\n5.2.1  Hibernate下载和安装  384\n5.2.2  Hibernate的数据库操作  385\n5.2.3  在Eclipse中使用Hibernate  389\n5.3  Hibernate的体系结构  392\n5.4  深入Hibernate配置文件  393\n5.4.1  创建Configuration对象  393\n5.4.2  hibernate.properties文件与hibernate.cfg.xml文件  396\n5.4.3  JDBC连接属性  396\n5.4.4  数据库方言  397\n5.4.5  JNDI数据源的连接属性  398\n5.4.6  Hibernate事务属性  399\n5.4.7  二级缓存相关属性  399\n5.4.8  外连接抓取属性  399\n5.4.9  其他常用的配置属性  400\n5.5  深入理解持久化对象  400\n5.5.1  持久化类的要求  400\n5.5.2  持久化对象的状态  401\n5.5.3  改变持久化对象状态的方法  402\n5.6  深入Hibernate映射  405\n5.6.1  映射属性  407\n5.6.2  映射主键  415\n5.6.3  使用Hibernate的主键生成器  417\n5.6.4  映射集合属性  418\n5.6.5  集合属性的性能分析  424\n5.6.6  有序集合映射  426\n5.6.7  映射数据库对象  427\n5.7  映射组件属性  430\n5.7.1  组件属性为集合  432\n5.7.2  集合属性的元素为组件  433\n5.7.3  组件作为Map的索引  434\n5.7.4  组件作为复合主键  436\n5.7.5  多列作为联合主键  438\n5.8  使用传统的映射文件  439\n5.8.1  增加XML映射文件  439\n5.8.2  注解，还是XML映射文件  441\n5.9  本章小结  442\n第6章  深入使用Hibernate与JPA  443\n6.1  Hibernate的关联映射  444\n6.1.1  单向N－1关联  444\n6.1.2  单向1－1关联  449\n6.1.3  单向1－N关联  450\n6.1.4  单向N－N关联  453\n6.1.5  双向1－N关联  455\n6.1.6  双向N－N关联  458\n6.1.7  双向1－1关联  459\n6.1.8  组件属性包含的关联实体  461\n6.1.9  基于复合主键的关联关系  463\n6.1.10  复合主键的成员属性为关联实体  464\n6.1.11  持久化的传播性  467\n6.2  继承映射  468\n6.2.1  整个类层次对应一个表的映射策略  470\n6.2.2  连接子类的映射策略  472\n6.2.3  每个具体类对应一个表的映射策略  475\n6.3  批量处理策略  477\n6.3.1  批量插入  477\n6.3.2  JPA与Hibernate  478\n6.3.3  JPA的批量插入  479\n6.3.4  批量更新  481\n6.3.5  DML风格的批量更新\/删除  481\n6.3.6  JPA的DML支持  482\n6.4  HQL查询和JPQL查询  483\n6.4.1  HQL查询  483\n6.4.2  JPQL查询  485\n6.4.3  from子句  487\n6.4.4  关联和连接  487\n6.4.5  查询的select子句  490\n6.4.6  HQL查询的聚集函数  491\n6.4.7  多态查询  491\n6.4.8  HQL查询的where子句  492\n6.4.9  表达式  493\n6.4.10  order by子句  495\n6.4.11  group by子句  495\n6.4.12  子查询  495\n6.4.13  命名查询  496\n6.5  动态条件查询  497\n6.5.1  执行DML语句  501\n6.5.2  select的用法  502\n6.5.3  元组查询  503\n6.5.4  多Root查询  504\n6.5.5  关联和动态关联  505\n6.5.6  分组、聚集和排序  508\n6.6  原生SQL查询  510\n6.6.1  标量查询  510\n6.6.2  实体查询  511\n6.6.3  处理关联和继承  514\n6.6.4  命名SQL查询  515\n6.6.5  调用存储过程  517\n6.6.6  使用定制SQL  518\n6.6.7  JPA的原生SQL查询  520\n6.7  数据过滤  524\n6.8  事务控制  526\n6.8.1  事务的概念  527\n6.8.2  Session与事务  527\n6.8.3  上下文相关的Session  529\n6.9  二级缓存和查询缓存  530\n6.9.1  开启二级缓存  530\n6.9.2  管理缓存和统计缓存  533\n6.9.3  使用查询缓存  534\n6.10  事件机制  537\n6.10.1  拦截器  537\n6.10.2  事件系统  539\n6.11  本章小结  541\n第7章  Spring的基本用法  542\n7.1  Spring简介和Spring 5.0的变化  543\n7.1.1  Spring简介  543\n7.1.2  Spring 5.0的变化  544\n7.2  Spring入门  544\n7.2.1  Spring下载和安装  544\n7.2.2  使用Spring管理Bean  545\n7.2.3  在Eclipse中使用Spring  548\n7.3  Spring的核心机制：依赖注入  551\n7.3.1  理解依赖注入  552\n7.3.2  设值注入  553\n7.3.3  构造注入  557\n7.3.4  两种注入方式的对比  558\n7.4  使用Spring容器  559\n7.4.1  Spring容器  559\n7.4.2  使用ApplicationContext  560\n7.4.3  ApplicationContext的国际化支持  562\n7.4.4  ApplicationContext的事件机制  563\n7.4.5  让Bean获取Spring容器  566\n7.5  Spring容器中的Bean  568\n7.5.1  Bean的基本定义和Bean别名  568\n7.5.2  容器中Bean的作用域  569\n7.5.3  配置依赖  572\n7.5.4  设置普通属性值  574\n7.5.5  配置合作者Bean  575\n7.5.6  使用自动装配注入合作者Bean  575\n7.5.7  注入嵌套Bean  578\n7.5.8  注入集合值  579\n7.5.9  组合属性  583\n7.5.10  Spring的Bean和JavaBean  584\n7.6  Spring提供的Java配置管理  585\n7.7  创建Bean的3种方式  588\n7.7.1  使用构造器创建Bean实例  588\n7.7.2  使用静态工厂方法创建Bean  589\n7.7.3  调用实例工厂方法创建Bean  591\n7.8  深入理解容器中的Bean  593\n7.8.1  抽象Bean与子Bean  593\n7.8.2  Bean继承与Java继承的区别  595\n7.8.3  容器中的工厂Bean  595\n7.8.4  获得Bean本身的id  597\n7.8.5  强制初始化Bean  598\n7.9  容器中Bean的生命周期  598\n7.9.1  依赖关系注入之后的行为  599\n7.9.2  Bean销毁之前的行为  601\n7.9.3  协调作用域不同步的Bean  603\n7.10  高级依赖关系配置  606\n7.10.1  获取其他Bean的属性值  607\n7.10.2  获取Field值  609\n7.10.3  获取方法返回值  611\n7.11  基于XML Schema的简化配置方式  614\n7.11.1  使用p:命名空间简化配置  614\n7.11.2  使用c:命名空间简化配置  615\n7.11.3  使用util:命名空间简化配置  617\n7.12  Spring提供的表达式语言（SpEL）  619\n7.12.1  使用Expression接口进行表达式求值  619\n7.12.2  Bean定义中的表达式语言支持  621\n7.12.3  SpEL语法详述  622\n7.13  本章小结  627\n第8章  深入使用Spring  628\n8.1  两种后处理器  629\n8.1.1  Bean后处理器  629\n8.1.2  Bean后处理器的用处  633\n8.1.3  容器后处理器  633\n8.1.4  属性占位符配置器  634\n8.1.5  重写占位符配置器  636\n8.2  Spring的“零配置”支持  637\n8.2.1  搜索Bean类  637\n8.2.2  指定Bean的作用域  640\n8.2.3  使用@Resource和@Value配置依赖  640\n8.2.4  使用@PostConstruct和@PreDestroy定制生命周期行为  641\n8.2.5  使用@DependsOn和@Lazy改变初始化行为  642\n8.2.6  自动装配和精确装配  643\n8.2.7  Spring 5新增的注解  647\n8.2.8  使用@Required检查注入  648\n8.3  资源访问  648\n8.3.1  Resource实现类  649\n8.3.2  ResourceLoader接口和ResourceLoaderAware接口  653\n8.3.3  使用Resource作为属性  655\n8.3.4  在ApplicationContext中使用资源  656\n8.4  Spring的AOP  660\n8.4.1  为什么需要AOP  660\n8.4.2  使用AspectJ实现AOP  661\n8.4.3  AOP的基本概念  667\n8.4.4  Spring的AOP支持  668\n8.4.5  基于注解的“零配置”方式  669\n8.4.6  基于XML配置文件的管理方式  684\n8.5  Spring的缓存机制  690\n8.5.1  启用Spring缓存  690\n8.5.2  使用@Cacheable执行缓存  693\n8.5.3  使用@CacheEvict清除缓存  696\n8.6  Spring的事务  698\n8.6.1  Spring支持的事务策略  698\n8.6.2  使用XML Schema配置事务策略  702\n8.6.3  使用@Transactional  708\n8.7  Spring整合Struts 2  709\n8.7.1  启动Spring容器  709\n8.7.2  MVC框架与Spring整合的思考  710\n8.7.3  让Spring管理控制器  711\n8.7.4  使用自动装配  715\n8.8  Spring整合Hibernate  717\n8.8.1  Spring提供的DAO支持  717\n8.8.2  管理Hibernate的SessionFactory  718\n8.8.3  实现DAO组件的基类  719\n8.8.4  HibernateTemplate和HibernateDaoSupport  722\n8.8.5  实现DAO组件  725\n8.8.6  使用IoC容器组装各种组件  725\n8.8.7  使用声明式事务  728\n8.9  Spring整合JPA  729\n8.9.1  管理EntityManagerFactory  729\n8.9.2  实现DAO组件基类  732\n8.9.3  使用声明式事务  734\n8.10  本章小结  735\n第9章  企业应用开发的思考和策略  736\n9.1  企业应用开发面临的挑战  737\n9.1.1  可扩展性、可伸缩性  737\n9.1.2  快捷、可控的开发  738\n9.1.3  稳定性、高效性  738\n9.1.4  花费最小化，利益最大化  739\n9.2  如何面对挑战  739\n9.2.1  使用建模工具  739\n9.2.2  利用优秀的框架  739\n9.2.3  选择性地扩展  741\n9.2.4  使用代码生成器  742\n9.3  常见设计模式精讲  742\n9.3.1  单例模式  743\n9.3.2  简单工厂  744\n9.3.3  工厂方法和抽象工厂  750\n9.3.4  代理模式  753\n9.3.5  命令模式  758\n9.3.6  策略模式  761\n9.3.7  门面模式  763\n9.3.8  桥接模式  766\n9.3.9  观察者模式  769\n9.4  常见的架构设计策略  773\n9.4.1  贫血模型  773\n9.4.2  领域对象模型  776\n9.4.3  合并业务逻辑组件与DAO组件  778\n9.4.4  合并业务逻辑组件和Domain Object  779\n9.4.5  抛弃业务逻辑层  780\n9.5  本章小结  781\n第10章  简单工作流系统  782\n10.1  项目背景及系统结构  783\n10.1.1  应用背景  783\n10.1.2  系统功能介绍  783\n10.1.3  相关技术介绍  784\n10.1.4  系统结构  785\n10.1.5  系统的功能模块  785\n10.2  Hibernate持久层  786\n10.2.1  设计持久化实体  786\n10.2.2  创建持久化实体类  787\n10.3  实现DAO层  792\n10.3.1  DAO组件的定义  792\n10.3.2  实现DAO组件  795\n10.3.3  部署DAO层  797\n10.4  实现Service层  799\n10.4.1  业务逻辑组件的设计  799\n10.4.2  实现业务逻辑组件  800\n10.4.3  事务管理  805\n10.4.4  部署业务逻辑组件  806\n10.5  实现任务的自动调度  806\n10.5.1  使用Quartz  806\n10.5.2  在Spring中使用Quartz  810\n10.6  实现系统Web层  813\n10.6.1  Struts 2和Spring的整合  813\n10.6.2  控制器的处理顺序图  814\n10.6.3  员工登录  814\n10.6.4  进入打卡  816\n10.6.5  处理打卡  818\n10.6.6  进入申请  819\n10.6.7  提交申请  821\n10.6.8  使用拦截器完成权限管理  823\n10.7  本章小结  824","pages":"836","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29724940.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29724940.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29724940.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30179599\/","id":"30179599","publisher":"电子工业出版社","isbn10":"7121337169","isbn13":"9787121337161","title":"轻量级Java EE企业应用实战（第5版）","url":"https:\/\/api.douban.com\/v2\/book\/30179599","alt_title":"","author_intro":"李刚，十余年软件开发从业经验，疯狂软件教育中心教学总监。疯狂Java实训营创始人，疯狂Java体系原创图书作者。广东技术师范学院计算机科学系兼职副教授，CSDN特邀讲师。培训的学生已在腾讯、阿里、华为、IBM、网易、唯品会、电信盈科等名企就职。国内知名高端IT技术图书作家，已出版《疯狂Java讲义》《疯狂Android讲义》《轻量级Java EE企业应用实战》《疯狂前端开发讲义》《疯狂HTML5\/CSS3\/JavaScript讲义》《疯狂iOS讲义（基础篇）（提高篇）》《疯狂XML讲义》《经典JavaEE企业应用实战》《Struts 2.x quanwei指南》等著作。其中疯狂Java体系图书均已沉淀多年，赢得极高的市场认同，多次重印，多部著作印刷数量超过10万册，并被多所“985”“211”院校选作教材，部分图书已被翻译成繁体中文版，授权到中国台湾地区。","summary":"《轻量级Java EE企业应用实战（第5版）——Struts 2+Spring 5+Hibernate 5\/JPA 2整合开发》是《轻量级Java EE企业应用实战》的第5版，这一版保持了前几版内容全面、深入的特点，主要完成全部知识的升级。\n《轻量级Java EE企业应用实战（第5版）——Struts 2+Spring 5+Hibernate 5\/JPA 2整合开发》介绍了Java EE领域的四个开源框架和技术：Struts 2、Spring、Hibernate和JPA。其中Struts 2升级到2.5.14，Spring升级到5.0.2，Hibernate升级到5.2.12。第5版新增介绍了JPA的内容，包括其API的基本用法、JPA查询、JPA动态条件查询等。本书还全面介绍了Servlet 3.1的新特性，以及Tomcat 8.5的配置和用法，本书的示例也应该在Tomcat 8.5上运行。\n《轻量级Java EE企业应用实战（第5版）——Struts 2+Spring 5+Hibernate 5\/JPA 2整合开发》重点介绍了如何整合Struts 2.5+Spring 5.0+Hibernate 5.2进行Java EE开发，主要包括三部分。第一部介绍了Java EE开发的基础知识，以及如何搭建开发环境。第二部分详细讲解了Struts 2.5、Spring 5.0、Hibernate 5.2、JPA的用法，在介绍三个框架时，以Eclipse IDE的使用来上手，一步步带领读者深入这些技术的核心。这部分内容是笔者讲授“疯狂Java实训”的培训讲义，因此是本书的重点部分。这部分内容既包含了笔者多年开发经历的领悟，也融入了丰富的授课经验。第三部分示范开发了一个包含7个表，表之间具有复杂的关联映射、继承映射等关系，且业务也相对复杂的工作流案例，希望让读者理论联系实际，将三个框架真正运用到实际开发中。该案例采用目前非常流行、规范的Java EE架构，整个应用分为领域对象层、DAO层、业务逻辑层、MVC层和视图层，各层之间分层清晰，层与层之间以松耦合的方式组织在一起。该案例既提供了与IDE无关的、基于Ant管理的项目源码，也提供了基于Eclipse IDE的项目源码，以最大限度地满足读者的需求。\n《轻量级Java EE企业应用实战（第5版）——Struts 2+Spring 5+Hibernate 5\/JPA 2整合开发》不再介绍Struts 1.x相关内容，如果读者希望获取《轻量级Java EE企业应用实战》第1版中关于Struts 1.x的知识，请登录http:\/\/www.crazyit.org下载。当读者阅读此书遇到技术难题时，也可登录http:\/\/www.crazyit.org发帖，笔者将会及时予以解答。\n在阅读《轻量级Java EE企业应用实战（第5版）——Struts 2+Spring 5+Hibernate 5\/JPA 2整合开发》之前，建议先认真阅读笔者所著的《疯狂Java讲义》一书。本书适合于有较好的Java编程基础，或者有初步JSP、Servlet基础的读者阅读。本书尤其适合于对Struts 2、Spring、Hibernate了解不够深入，或者对Struts 2+ Spring+Hibernate整合开发不太熟悉的开发人员阅读。","price":"128"},{"rating":{"max":10,"numRaters":1,"average":"0.0","min":0},"subtitle":"Learn how to implement Reactive Programming paradigms with Kotlin, and apply them to web programming with Spring Framework 5.0 and in Android Application Development.","author":["Rivu Chakraborty"],"pubdate":"2017-12-5","tags":[{"count":1,"name":"软件设计","title":"软件设计"},{"count":1,"name":"软件工程","title":"软件工程"},{"count":1,"name":"计算机科学","title":"计算机科学"},{"count":1,"name":"计算机","title":"计算机"},{"count":1,"name":"编程","title":"编程"},{"count":1,"name":"程序设计","title":"程序设计"},{"count":1,"name":"流式架构","title":"流式架构"},{"count":1,"name":"流式","title":"流式"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29734302.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"322","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29734302.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29734302.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29734302.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30189102\/","id":"30189102","publisher":"Packt Publishing","isbn10":"1788473027","isbn13":"9781788473026","title":"Reactive Programming in Kotlin: Design and build non-blocking, asynchronous Kotlin applications with RXKotlin, Reactor-Kotlin, Android, and Spring","url":"https:\/\/api.douban.com\/v2\/book\/30189102","alt_title":"","author_intro":"About the Author\nRivu Chakraborty is a Google-certified Android developer and a senior tech member at the Institute of Engineers (India), and also has certifications in Scrum. With over 5 years of experience, he is currently working as a senior software engineer (Android) at Indus Net Technologies Pvt. Ltd.He considers himself a Kotlin and Android enthusiast and a Kotlin evangelist. He has been using Kotlin since December 2015, so he has around 2 years of experience in Kotlin at the time of publishing this book. As a part of his mission to spread the use and knowledge of the Kotlin language as much as possible, he created the KotlinKolkata user group-one of the most active Kotlin user groups throughout the world, and he is the Founder Organizer of KotlinKolkata. He is also an active member of GDG Kolkata and gives talks at the GDG Kolkata meetups.As Rivu believes that knowledge increases by sharing, he writes a lot of tutorials on JavaCodeGeeks, AndroidHive, and his own site, which you can visit to read his tutorials and learn more about him.\nRead more","summary":"Key Features\nLearn how to solve blocking user experience with Reactive Programming and get deep insights into RxKotlinIntegrate Reactive Kotlin with Spring and build fantastic Android Apps with RxKotlin and RxAndroidBuild reactive architectures that reduce complexity throughout the development process and make your apps(web and Android) scalable\nBook Description\nIn today’s app-driven era, when programs are asynchronous, and responsiveness is so vital, reactive programming can help you write code that’s more reliable, easier to scale, and better-performing. Reactive programming is revolutionary.\nWith this practical book, Kotlin developers will first learn how to view problems in the reactive way, and then build programs that leverage the best features of this exciting new programming paradigm. You will begin with the general concepts of Reactive programming and then gradually move on to working with asynchronous data streams. You will dive into advanced techniques such as manipulating time in data-flow, customizing operators and provider and how to Use the concurrency model to control asynchronicity of code and process event handlers effectively.\nYou will then be introduced to functional reactive programming and will learn to apply FRP in practical use cases in Kotlin. This book will also take you one step forward by introducing you to spring 5 and spring boot 2 using Kotlin. By the end of the book, you will be able to build real-world applications with reactive user interfaces as well as you’ll learn to implement reactive programming paradigms in Android.\nWhat you will learn\nLearn about reactive programming paradigms and how reactive programming can improve your existing projectsGain in-depth knowledge in RxKotlin 2.0 and the ReactiveX FrameworkUse RxKotlin with AndroidCreate your own custom operators in RxKotlinUse Spring Framework 5.0 with KotlinUse the reactor-kotlin extensionBuild Rest APIs with Spring,Hibernate, and RxKotlinUse testSubscriber to test RxKotlin applicationsUse backpressure management and Flowables\nWho This Book Is For\nThis book is for Kotlin developers who would like to build fault-tolerant, scalable, and distributed systems. A basic knowledge of Kotlin is required, but no prior knowledge of reactive programming.\nTable of Contents\nA Short Introduction to Reactive ProgrammingFunctional Programming with Kotlin and RxKotlinObservables, Observers, and SubjectsIntroduction Backpressure and FlowablesAsynchronous Data Operators and TransformationsMore on Operators and Error HandlingConcurrency and Parallel Processing in RxKotlin with SchedulersTesting RxKotlin ApplicationResource Management and Extending RxKotlinIntroduction to Web Programming with Spring for Kotlin DevelopersREST API with Spring JPA and HibernateReactive Kotlin and Android","price":"USD 44.99"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"Build modern and scalable full stack applications using the Java-based Spring Framework 5.0 and React","author":["Juha Hinkula"],"pubdate":"2018-6-21","tags":[],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29908153.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"302","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29908153.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s29908153.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29908153.jpg"},"alt":"https:\/\/book.douban.com\/subject\/30364042\/","id":"30364042","publisher":"Packt Publishing","isbn10":"1789138086","isbn13":"9781789138085","title":"Hands-On Full Stack Development with Spring Boot 2.0  and React","url":"https:\/\/api.douban.com\/v2\/book\/30364042","alt_title":"","author_intro":"","summary":"","price":"GBP 32.99"},{"rating":{"max":10,"numRaters":13,"average":"7.6","min":0},"subtitle":"Spring框架创始人倾情推荐的权威开发指南","author":["Jan Machacek","Aleksa Vukotic","Anirvan Chakraborty","Jessica Ditt"],"pubdate":"2009.9","tags":[{"count":15,"name":"Spring","title":"Spring"},{"count":7,"name":"Java","title":"Java"},{"count":5,"name":"编程","title":"编程"},{"count":1,"name":"权威","title":"权威"},{"count":1,"name":"开发指南","title":"开发指南"},{"count":1,"name":"spring","title":"spring"},{"count":1,"name":"programming","title":"programming"},{"count":1,"name":"Rob","title":"Rob"}],"origin_title":"Pro Spring 2.5","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s3949444.jpg","binding":"","translator":["马连浩","栗磊","张龙","张俊"],"catalog":"","pages":"780","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s3949444.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s3949444.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s3949444.jpg"},"alt":"https:\/\/book.douban.com\/subject\/3993595\/","id":"3993595","publisher":"人民邮电出版社","isbn10":"711521204X","isbn13":"9787115212047","title":"Spring高级程序设计","url":"https:\/\/api.douban.com\/v2\/book\/3993595","alt_title":"Pro Spring 2.5","author_intro":"Jan Machacek　Cake解决方案的首席软件架构师，在所有项目的架构讨论中他都是核心人物。除了软件架构，Jan也经常为实现一些最复杂和最具挑战性的功能提供帮助。自从加入了Cake项目以来，Jan不但参与了各种各样复杂的项目，还出版了不少技术专著，证明了他在Java开发领域的高深造诣。闲暇之余，Jan热衷于自行车运动，是曼彻斯特自行车俱乐部会员。不管是计时赛还是公路赛，他都全力争胜！Jan负责第1~4、6、9、11、14、16、22章的撰写。\nAleksa Vukotic中Cake解决方案的软件架构师，负责大部分Cake项目的架构及实现。他在Java EE 方面，特别是在Sping MVC应用开发和安全领域有着丰富的经验。他掌握了很多技术诀窍，这让他几乎可以解决所有技术难题。他还是一位出色的领导者，率领Cake解决方案开发团队，帮助团队解决最棘手的问题。除了醉心于Java和.NET平台外，他还喜欢体育、音乐和夜生活。他与Jan一起负责Cake解决方案的所有主要项目。Aleksa负责第5、8、10、15、17、21章的撰写。\nAnirvan Chakraborty　Cake解决方案的高级开发工程师。由于在Spring框架方面有着丰富的经验并对细节实现有深入了解，他负责实现一些具有挑战性的项目。Anirvan为他的代码感到自豪，始终都确保他的代码能够作为范例示人。除了爱捣弄Java EE和Linux之外，他喜欢跟朋友们一起聚会，享用美食。他还热衷于板球，喜欢阅读侦探小说。Anirvan负责第7、13、19、20章的撰写。\nJessica Ditt　自2008年初开始成为伦敦Avenue A | Razorfish公司的开发人员。在此之前她为Cake解决方案工作了两年半。她主要负责一些企业级项目，所有项目都用到了本书所介绍的Spring框架和Spring Web Flow。Jessica掌握了大量的专业知识，擅长使用Lucene获取更高效率的索引，使用Gigaspaces有效地提升Java EE应用的可扩展性。工作之余，Jessica热衷于排球运动和健身。Jessica负责第12、18章的撰写。","summary":"作为最强大、应用最广泛的企业级Java开发框架，Spring因其强大的适应性和可扩展性而适用于各种企业级系统。本书是由资深Spring开发专家编写，囊括了Spring开发人员需要了解的精炼要点和复杂主题。基于目前企业中应用最广泛的Spring 2.5版本，不但全面介绍了Spring开发框架的关键技术和模块，并且还介绍了AJAX、Web工作流、动态语言等主流技术。\n本书适合所有Java开发人员，特别是企业级Java开发人员阅读参考。是一本由Spring框架核心开发人员为读者奉献的权威开发指南，将带给你设计和构建高效、可扩展的Spring应用的丰富知识和经验。","series":{"id":"46192","title":"图灵程序设计丛书·Java系列"},"price":"99.00元"},{"rating":{"max":10,"numRaters":3,"average":"0.0","min":0},"subtitle":"","author":["Jan Machacek","Jessica Ditt","Aleksa Vukotic","Anirvan Chakraborty"],"pubdate":"2008","tags":[{"count":5,"name":"Spring","title":"Spring"},{"count":4,"name":"Java","title":"Java"},{"count":3,"name":"软件工程","title":"软件工程"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s3247690.jpg","binding":"Paperback","translator":[],"catalog":"","pages":"920","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s3247690.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s3247690.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s3247690.jpg"},"alt":"https:\/\/book.douban.com\/subject\/2283185\/","id":"2283185","publisher":"Apress","isbn10":"1590599217","isbn13":"9781590599211","title":"Pro Spring 2.5","url":"https:\/\/api.douban.com\/v2\/book\/2283185","alt_title":"","author_intro":"","summary":"The move from so–called heavyweight architectures, such as Enterprise JavaBeans, toward lightweight frameworks, like Spring, has not stopped since Pro Spring was published by Rob Harrop and Jan Machacek in 2005; in fact, it’s picked up pace. The Spring Framework remains the leader in this move and provides a platform on which you can build your own applications and services.\nPro Spring 2.5 covers the new features of Spring 2.5, but moreover, it is focused on the best practices and core standards of contemporary Spring development. As members of the Spring development team at Cake Solutions, the author team brings extensive practical experience gained from working with Spring since version 1.0 and delivering successful systems on top of it.\nLearn the approaches that really matter in a professional, enterprise–level environment, so you can apply them to your projects today, safe in the knowledge that they just work.","price":"USD 49.99"},{"rating":{"max":10,"numRaters":1,"average":"0.0","min":0},"subtitle":"","author":["上遠野浩平","佐藤友哉","西尾維新","浦賀和宏","龍騎士07","奈須磨菇","奈須きのこ","武内崇","北山猛邦","瀧本龍彥","舞城王太郎","清涼院流水","渡邊浩貳","東浩紀"],"pubdate":"2005-05","tags":[{"count":2,"name":"西尾维新","title":"西尾维新"},{"count":2,"name":"浮士德","title":"浮士德"},{"count":2,"name":"上遠野浩平","title":"上遠野浩平"},{"count":1,"name":"浦贺和宏","title":"浦贺和宏"},{"count":1,"name":"日本杂志","title":"日本杂志"},{"count":1,"name":"小说","title":"小说"},{"count":1,"name":"哇——內個人畫的封面","title":"哇——內個人畫的封面"},{"count":1,"name":"佐藤友哉","title":"佐藤友哉"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s3990054.jpg","binding":"","translator":[],"catalog":"","pages":"840","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s3990054.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s3990054.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s3990054.jpg"},"alt":"https:\/\/book.douban.com\/subject\/4050428\/","id":"4050428","publisher":"講談社","isbn10":"4061795724","isbn13":"9784061795723","title":"ファウスト Vol.5 2005 SPRING","url":"https:\/\/api.douban.com\/v2\/book\/4050428","alt_title":"浮士德 Vol.5","author_intro":"","summary":"☆第一特輯 上遠野浩平\n上遠野浩平 <アウトランドスの戀 outlandos d'amour>\n上遠野浩平 <ポルシェ式ヤークト・ティーガー Jagdtiger (Porsche Laufwerk)>\n會談 上遠野浩平、西尾維新、北山猛邦\nInterview 上遠野浩平 by 東浩紀\n☆第二特輯 龍騎士07 《秋蟬鳴泣之時》\n對談 龍騎士07、奈須きのこ\nInterview 龍騎士07 by 渡邊浩貳\n☆其他小說\n佐藤友哉 <対ロボット戰爭の前夜>\n佐藤友哉 <ナオミに捧ぐ 愛も汚辱のうちに>\n佐藤友哉 <私のひょろひょろお兄ちゃん>\n西尾維新 <新本格魔法少女りすか 鍵となる存在!!>\n浦賀和宏 <あなたとここにいるということ>","series":{"id":"19579","title":"ファウスト"},"price":"日元 1575圓"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Thoreau, Henry David"],"pubdate":"","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s17887699.jpg","binding":"","translator":[],"catalog":"","pages":"68","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s17887699.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s17887699.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s17887699.jpg"},"alt":"https:\/\/book.douban.com\/subject\/15609378\/","id":"15609378","publisher":"","isbn10":"1236433815","isbn13":"9781236433817","title":"Early Spring in Massachusetts Volume 5; From the Journal of Henry D. Thoreau","url":"https:\/\/api.douban.com\/v2\/book\/15609378","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["카도노 코헤이","上远野浩平","니시오 이신","西尾维新","사토 유야","佐藤友哉","우라가 카즈히로","浦贺和宏"],"pubdate":"2008-04-25","tags":[{"count":1,"name":"哇——內個人畫的封面","title":"哇——內個人畫的封面"}],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s4005246.jpg","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s4005246.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s4005246.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s4005246.jpg"},"alt":"https:\/\/book.douban.com\/subject\/4069435\/","id":"4069435","publisher":"학산문화사（鹤山文化社）","isbn10":"8952992164","isbn13":"9788952992161","title":"파우스트 vol.5 2008 SPRING","url":"https:\/\/api.douban.com\/v2\/book\/4069435","alt_title":"浮文誌(韩文版) vol.5","author_intro":"","summary":"제1특집\n집중조명,카도노 코헤이\n중량감 넘치는 신작 2편\n-아웃랜도스의 사랑\n-포르셰식 야크트티거\n공감 100%심층토크!\n-슈퍼토크섹샨\nwith 니시오 이신&키타야마 타케쿠니\n제2특집\n<쓰르라미 울 적에>의 용기사07 스페셜!\n파워풀 좌담 용기사07 with 나스 기노코\n용기사07 롱 인터뷰 - 와타나베 코지\n장은호\n-첫 출근\n김미리\n-화염소녀\n한동진\n-경성 탐정록","price":"KRW12000元"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Willow Creek Association"],"pubdate":"","tags":[],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s11750221.jpg","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s11750221.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s11750221.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s11750221.jpg"},"alt":"https:\/\/book.douban.com\/subject\/11909962\/","id":"11909962","publisher":"","isbn10":"0310645018","isbn13":"9780310645016","title":"Grade 4\/5 5-G Impact Spring Refresher Pack","url":"https:\/\/api.douban.com\/v2\/book\/11909962","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Institute of Navigation"],"pubdate":"","tags":[],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s26418712.jpg","binding":"","translator":[],"catalog":"","pages":"60","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s26418712.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s26418712.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s26418712.jpg"},"alt":"https:\/\/book.douban.com\/subject\/24561030\/","id":"24561030","publisher":"","isbn10":"125868442X","isbn13":"9781258684426","title":"Navigation, V5, No. 5, Spring, 1957","url":"https:\/\/api.douban.com\/v2\/book\/24561030","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Institute of Navigation"],"pubdate":"","tags":[],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s26419334.jpg","binding":"","translator":[],"catalog":"","pages":"60","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s26419334.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s26419334.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s26419334.jpg"},"alt":"https:\/\/book.douban.com\/subject\/24561671\/","id":"24561671","publisher":"","isbn10":"125869090X","isbn13":"9781258690908","title":"Navigation, V5, No. 5, Spring, 1957","url":"https:\/\/api.douban.com\/v2\/book\/24561671","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Holzner, Steve"],"pubdate":"2005-4","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s7071177.jpg","binding":"Pap","translator":[],"catalog":"","pages":"360","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s7071177.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s7071177.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s7071177.jpg"},"alt":"https:\/\/book.douban.com\/subject\/2654659\/","id":"2654659","publisher":"Prentice Hall Ptr","isbn10":"0131498622","isbn13":"9780131498624","title":"Spring into PHP 5","url":"https:\/\/api.douban.com\/v2\/book\/2654659","alt_title":"","author_intro":"","summary":"This is the PHP 5 entry in the new Spring Into series. It is written in the  unique, structured style of Spring Into books. Each chapter begins with  introductory text, followed by a single-page or facing-page tutorial. Every  chapter is semi-autonomous, and focuses on an example or set of examples  allowing the reader to quickly learn and apply. The discussions are to the point  and emphasize results without extraneous coding. In 350 pages, Spring Into  PHP 5 is designed to give professionals the skills they need to be productive  with PHP 5--quickly--by covering dozens of chunks in rapid-fire format.  PHP is clearly emerging as the most popular language for the creation of web  applications. PHP 5 is the next major revision of the language. It provides a  top-notch object system that behaves the way traditional heavyweight  languages do, as well as real exceptions. In addition to these language additions,  PHP 5 offers robust XML processing, improved MySQL and SQLite database  support and a large number of improvements to areas of efficiency,  extensibility and security. According to Netcraft's August 2004 survey, over 16  million domains run PHP. By comparison, Netcraft reports 2.5 million  domains running ASP.Net.","price":"$ 45.19"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Dess"],"pubdate":"","tags":[],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s11181470.jpg","binding":"","translator":[],"catalog":"","pages":"332","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s11181470.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s11181470.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s11181470.jpg"},"alt":"https:\/\/book.douban.com\/subject\/6066302\/","id":"6066302","publisher":"","isbn10":"1847194028","isbn13":"9781847194022","title":"Spring 2.5 Aspect Oriented Programming","url":"https:\/\/api.douban.com\/v2\/book\/6066302","alt_title":"","author_intro":"","summary":"","price":"309.00"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Anonymous"],"pubdate":"","tags":[],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s10639226.jpg","binding":"","translator":[],"catalog":"","pages":"26","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s10639226.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s10639226.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s10639226.jpg"},"alt":"https:\/\/book.douban.com\/subject\/11350602\/","id":"11350602","publisher":"","isbn10":"1275513573","isbn13":"9781275513570","title":"The Crown Calendar for the Yorkshire Spring Assizes, Holden at the Castle of York, in and for the County of York, on Thursday, the 5th Day of March, i","url":"https:\/\/api.douban.com\/v2\/book\/11350602","alt_title":"","author_intro":"","summary":"","price":"$ 16.67"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Hentz, Caroline Lee"],"pubdate":"","tags":[],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s14769441.jpg","binding":"","translator":[],"catalog":"","pages":"116","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s14769441.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s14769441.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s14769441.jpg"},"alt":"https:\/\/book.douban.com\/subject\/13637049\/","id":"13637049","publisher":"","isbn10":"1150458046","isbn13":"9781150458040","title":"Marcus Warland; Or, the Long Moss Spring Volume 5","url":"https:\/\/api.douban.com\/v2\/book\/13637049","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Society, Massachusetts Sabbath"],"pubdate":"","tags":[],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s13597421.jpg","binding":"","translator":[],"catalog":"","pages":"462","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s13597421.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s13597421.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s13597421.jpg"},"alt":"https:\/\/book.douban.com\/subject\/12905805\/","id":"12905805","publisher":"","isbn10":"1130120686","isbn13":"9781130120684","title":"The Well-Spring Volume 5-6","url":"https:\/\/api.douban.com\/v2\/book\/12905805","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Willow Creek Association"],"pubdate":"","tags":[],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s11750220.jpg","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s11750220.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s11750220.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s11750220.jpg"},"alt":"https:\/\/book.douban.com\/subject\/11909958\/","id":"11909958","publisher":"","isbn10":"031064500X","isbn13":"9780310645009","title":"Grade 2\/3 5-G Challenge Spring Refresher Pack","url":"https:\/\/api.douban.com\/v2\/book\/11909958","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Willow Creek Association"],"pubdate":"","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","large":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","medium":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif"},"alt":"https:\/\/book.douban.com\/subject\/11909959\/","id":"11909959","publisher":"","isbn10":"0310644992","isbn13":"9780310644996","title":"Grade K\/1 5-G Discovery Spring Refresher Pack","url":"https:\/\/api.douban.com\/v2\/book\/11909959","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Compass Point Books"],"pubdate":"","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","large":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","medium":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif"},"alt":"https:\/\/book.douban.com\/subject\/12349214\/","id":"12349214","publisher":"","isbn10":"0756541832","isbn13":"9780756541835","title":"Headline Science Spring 200-5v","url":"https:\/\/api.douban.com\/v2\/book\/12349214","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Jillson, Herbert L."],"pubdate":"","tags":[],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s17021521.jpg","binding":"","translator":[],"catalog":"","pages":"542","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s17021521.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s17021521.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s17021521.jpg"},"alt":"https:\/\/book.douban.com\/subject\/14734536\/","id":"14734536","publisher":"","isbn10":"1175971898","isbn13":"9781175971890","title":"Northward-Ho! Covering Maine's Inland Resorts, Moosehead Lake, the Rangeleys, Belgrade Lakes and Poland Spring Volume 5","url":"https:\/\/api.douban.com\/v2\/book\/14734536","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":[],"pubdate":"","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","binding":"","translator":[],"catalog":"","pages":"0","images":{"small":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","large":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","medium":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif"},"alt":"https:\/\/book.douban.com\/subject\/17733198\/","id":"17733198","publisher":"GO STATIONERY LTD","isbn10":"1781034826","isbn13":"9781781034828","title":"SPRING FLOWERS A5 NOTEBOOK","url":"https:\/\/api.douban.com\/v2\/book\/17733198","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":[],"pubdate":"","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","binding":"","translator":[],"catalog":"","pages":"0","images":{"small":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","large":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","medium":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif"},"alt":"https:\/\/book.douban.com\/subject\/17733199\/","id":"17733199","publisher":"GO STATIONERY LTD","isbn10":"1781034834","isbn13":"9781781034835","title":"SPRING STRIPES A5 NOTEBOOK","url":"https:\/\/api.douban.com\/v2\/book\/17733199","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Marsh, Sherman P.; U. S. Department of the Interior, United; Et Al"],"pubdate":"","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s26435719.jpg","binding":"","translator":[],"catalog":"","pages":"68","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s26435719.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s26435719.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s26435719.jpg"},"alt":"https:\/\/book.douban.com\/subject\/24578704\/","id":"24578704","publisher":"","isbn10":"1288827229","isbn13":"9781288827220","title":"Analytical Results of Rock Samples from the Brooks Spring 7.5 Minute Quadrangle, Nevada","url":"https:\/\/api.douban.com\/v2\/book\/24578704","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["McGrew, A. J.; Brown, E. L.;"],"pubdate":"","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s26422238.jpg","binding":"","translator":[],"catalog":"","pages":"24","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s26422238.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s26422238.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s26422238.jpg"},"alt":"https:\/\/book.douban.com\/subject\/24565139\/","id":"24565139","publisher":"","isbn10":"1287055249","isbn13":"9781287055242","title":"Geologic Map of Kious Spring and Garrison 7.5' Quadrangles, White Pine County, Nevada and Millard County, Utah","url":"https:\/\/api.douban.com\/v2\/book\/24565139","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Runes, Dagobert D."],"pubdate":"","tags":[],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s26760036.jpg","binding":"","translator":[],"catalog":"","pages":"84","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s26760036.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s26760036.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s26760036.jpg"},"alt":"https:\/\/book.douban.com\/subject\/24776128\/","id":"24776128","publisher":"Literary Licensing, LLC","isbn10":"1258712377","isbn13":"9781258712372","title":"The Journal of Aesthetics and Art Criticism, No. 5, Spring, 1942","url":"https:\/\/api.douban.com\/v2\/book\/24776128","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Runes, Dagobert D."],"pubdate":"","tags":[],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s26759443.jpg","binding":"","translator":[],"catalog":"","pages":"84","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s26759443.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s26759443.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s26759443.jpg"},"alt":"https:\/\/book.douban.com\/subject\/24775532\/","id":"24775532","publisher":"Literary Licensing, LLC","isbn10":"1258706423","isbn13":"9781258706425","title":"The Journal of Aesthetics and Art Criticism, No. 5, Spring, 1942","url":"https:\/\/api.douban.com\/v2\/book\/24775532","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Thorsten Göckeler"],"pubdate":"2008-01-01","tags":[],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s4186460.jpg","binding":"Hardcover","translator":[],"catalog":"","pages":"","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s4186460.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s4186460.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s4186460.jpg"},"alt":"https:\/\/book.douban.com\/subject\/4302105\/","id":"4302105","publisher":"Addison Wesley Verlag","isbn10":"3827326222","isbn13":"9783827326225","title":"Spring 2.5","url":"https:\/\/api.douban.com\/v2\/book\/4302105","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Pellizzi, Francesco"],"pubdate":"","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","binding":"","translator":[],"catalog":"","pages":"116","images":{"small":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","large":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","medium":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif"},"alt":"https:\/\/book.douban.com\/subject\/20552856\/","id":"20552856","publisher":"","isbn10":"0873657683","isbn13":"9780873657686","title":"Res - Anthropology and Aesthetics, 5, Spring 1983","url":"https:\/\/api.douban.com\/v2\/book\/20552856","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Douglass, Harlan Paul"],"pubdate":"","tags":[],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s26417663.jpg","binding":"","translator":[],"catalog":"","pages":"182","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s26417663.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s26417663.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s26417663.jpg"},"alt":"https:\/\/book.douban.com\/subject\/24559993\/","id":"24559993","publisher":"","isbn10":"1258673851","isbn13":"9781258673857","title":"Christendom, V5, No. 2, Spring, 1940","url":"https:\/\/api.douban.com\/v2\/book\/24559993","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Miller, Nyle H.; Mechem, Kirke; Malin, James C."],"pubdate":"","tags":[],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s26418030.jpg","binding":"","translator":[],"catalog":"","pages":"90","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s26418030.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s26418030.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s26418030.jpg"},"alt":"https:\/\/book.douban.com\/subject\/24560366\/","id":"24560366","publisher":"","isbn10":"1258677598","isbn13":"9781258677596","title":"Kansas Historical Quarterly, V21, No. 5, Spring, 1955","url":"https:\/\/api.douban.com\/v2\/book\/24560366","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Miller, Nyle H.; Mechem, Kirke; Malin, James C."],"pubdate":"","tags":[],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s26417573.jpg","binding":"","translator":[],"catalog":"","pages":"90","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s26417573.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s26417573.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s26417573.jpg"},"alt":"https:\/\/book.douban.com\/subject\/24559906\/","id":"24559906","publisher":"","isbn10":"1258673029","isbn13":"9781258673024","title":"Kansas Historical Quarterly, V21, No. 5, Spring, 1955","url":"https:\/\/api.douban.com\/v2\/book\/24559906","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Institute of Navigation"],"pubdate":"","tags":[],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s26418755.jpg","binding":"","translator":[],"catalog":"","pages":"72","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s26418755.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s26418755.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s26418755.jpg"},"alt":"https:\/\/book.douban.com\/subject\/24561088\/","id":"24561088","publisher":"","isbn10":"1258684985","isbn13":"9781258684983","title":"Navigation, V6, No. 5, Spring, 1959","url":"https:\/\/api.douban.com\/v2\/book\/24561088","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Institute of Navigation"],"pubdate":"","tags":[],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s26419396.jpg","binding":"","translator":[],"catalog":"","pages":"72","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s26419396.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s26419396.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s26419396.jpg"},"alt":"https:\/\/book.douban.com\/subject\/24561730\/","id":"24561730","publisher":"","isbn10":"1258691469","isbn13":"9781258691462","title":"Navigation, V6, No. 5, Spring, 1959","url":"https:\/\/api.douban.com\/v2\/book\/24561730","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["Douglass, Harlan Paul"],"pubdate":"","tags":[],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s26418265.jpg","binding":"","translator":[],"catalog":"","pages":"182","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s26418265.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s26418265.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s26418265.jpg"},"alt":"https:\/\/book.douban.com\/subject\/24560593\/","id":"24560593","publisher":"","isbn10":"1258679957","isbn13":"9781258679958","title":"Christendom, V5, No. 2, Spring, 1940","url":"https:\/\/api.douban.com\/v2\/book\/24560593","alt_title":"","author_intro":"","summary":"","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":[""],"pubdate":"","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","large":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif","medium":"https://img1.doubanio.com\/f\/shire\/5522dd1f5b742d1e1394a17f44d590646b63871d\/pics\/book-default-lpic.gif"},"alt":"https:\/\/book.douban.com\/subject\/31131704\/","id":"31131704","publisher":"","isbn10":"0483547239","isbn13":"9780483547230","title":"【预订】Argus, Vol. 5: Spring, 1981 (Classic Reprint)","url":"https:\/\/api.douban.com\/v2\/book\/31131704","alt_title":"","author_intro":"","summary":"","price":"750.68元"},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":[],"pubdate":"","tags":[],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s31986963.jpg","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s31986963.jpg","large":"https://img3.doubanio.com\/view\/subject\/l\/public\/s31986963.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s31986963.jpg"},"alt":"https:\/\/book.douban.com\/subject\/33096969\/","id":"33096969","publisher":"","isbn10":"1544019173","isbn13":"9781544019178","title":"So Lucky to Be a 5th Grade Teacher Journal: Teachers Gifts, Children Books for Spring (Diary, Notebook, Journal)","url":"https:\/\/api.douban.com\/v2\/book\/33096969","alt_title":"","author_intro":"","summary":"Blank lined journals are perfect to record all the important events in your life and this 6 x 9, 108 page lined notebook is excellent for doing just that.A place for all your thoughts, poems, funny quips or even recipes.Honestly it is just lined paper inside so you can make it into anything you want. A day timer, travel journal, diary, notebook for school, etc. You could even write the next bestselling graphic novel in it. O.K. I know you get it.Oh and it makes the perfect gift.Blank Book Billionaire Journals, Coloring Books and Puzzle Books is focused on creating high quality, fun and yet practical books to enhance your daily life. Whether you are looking for a funny and hilarious journal as a gift option or something to track your fondest memories or your favorite recipes we have it.We have the following books ready for you in multiple varieties:Notorious NotebooksJournal Your Life’s JourneyMy Recipe JournalMy Travel JournalMy Bucket List My Diet JournalMy Food JournalMy Dream JournalMy Gratitude JournalMy Pregnancy JournalMy To Do List JournalMy Address BookMy Smoothie Recipe JournalMy Fitness JournalMy Workout JournalMy Golfing Log BookMy Running JournalMy Daily JournalMy Lined JournalMy Lined NotebookKadence Lee Coloring BooksJust search Amazon for any one of these author names and look for ones with Blank Book Billionaire. Scroll up and grab your copy today, nah grab two ;)","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":[],"pubdate":"","tags":[],"origin_title":"","image":"https://img1.doubanio.com\/view\/subject\/m\/public\/s31871068.jpg","binding":"","translator":[],"catalog":"","pages":"","images":{"small":"https://img1.doubanio.com\/view\/subject\/s\/public\/s31871068.jpg","large":"https://img1.doubanio.com\/view\/subject\/l\/public\/s31871068.jpg","medium":"https://img1.doubanio.com\/view\/subject\/m\/public\/s31871068.jpg"},"alt":"https:\/\/book.douban.com\/subject\/32980894\/","id":"32980894","publisher":"","isbn10":"1326121731","isbn13":"9781326121730","title":"The Circle Review n. 5-6 (Marzo - Giugno 2014) Spring\/Summer Issue","url":"https:\/\/api.douban.com\/v2\/book\/32980894","alt_title":"","author_intro":"","summary":"THE CIRCLE REVIEW e una rivista letteraria trimestrale online promossa dal blog collettivo http:\/\/ilcircolodellearti.myblog.it e fondata dal creatore del blog collettivo Lorenzo V. (arteletteratura). Le categorie di scritti che saranno presenti in questa rivista sono, per la prosa: * novel & fiction, \"romanzo e narrativa\"; * essays, \"saggistica\"; * play in prose, \"opera teatrale in prosa\". Per la poesia, invece: * poetry, \"poesia\"; * play in verses, \"opera teatrale in versi\". Questa e una pubblicazione informale online, viene aggiornata e pubblicata senza alcuna periodicita e non puo pertanto considerarsi un prodotto editoriale o una testata giornalistica ai sensi della legge n. 62 del 7.03.2001. I contenuti di questa rivista online rappresenta-no il punto di vista degli autori, salvo citazioni regolarmente attribuite agli autori\/trici.","price":""},{"rating":{"max":10,"numRaters":0,"average":"0.0","min":0},"subtitle":"","author":["[美] 克雷格·沃斯"],"pubdate":"2020-2","tags":[],"origin_title":"","image":"https://img9.doubanio.com\/view\/subject\/m\/public\/s33562244.jpg","binding":"平装","translator":["张卫滨"],"catalog":"第1部分 Spring 基础\n第 1 章 Spring 起步 3\n1.1 什么是Spring 4\n1.2 初始化Spring 应用 6\n1.2.1 使用Spring Tool Suite\n初始化Spring 项目 7\n1.2.2 检查Spring 项目的\n结构 10\n1.3 编写Spring 应用 16\n1.3.1 处理Web 请求 16\n1.3.2 定义视图 17\n1.3.3 测试控制器 18\n1.3.4 构建和运行应用 20\n1.3.5 了解Spring Boot DevTools 21\n1.3.6 回顾一下 23\n1.4 俯瞰Spring 风景线 24\n1.4.1 Spring 核心框架 24\n1.4.2 Spring Boot 25\n1.4.3 Spring Data 25\n1.4.4 Spring Security 25\n1.4.5 Spring Integration 和Spring\nBatch 26\n1.4.6 Spring Cloud 26\n1.5 小结 26\n第 2 章 开发Web 应用 27\n2.1 展现信息 27\n2.1.1 构建领域类 28\n2.1.2 创建控制器类 30\n2.1.3 设计视图 33\n2.2 处理表单提交 37\n2.3 校验表单输入 43\n2.3.1 声明校验规则 43\n2.3.2 在表单绑定的时候执行\n校验 45\n2.3.3 展现校验错误 46\n2.4 使用视图控制器 48\n2.5 选择视图模板库 49\n2.6 小结 52\n第3 章 使用数据 53\n3.1 使用JDBC 读取和写入\n数据 53\n3.1.1 调整领域对象以适应\n持久化 55\n3.1.2 使用JdbcTemplate 56\n3.1.3 定义模式和预加载数据 61\n3.1.4 插入数据 63\n3.2 使用Spring Data JPA 持久\n化数据 72\n3.2.1 添加Spring Data JPA 到\n项目中 72\n3.2.2 将领域对象标注为实体 73\n3.2.3 声明JPA repository 76\n3.2.4 自定义JPA repository 77\n3.3 小结 80\n第4 章 保护Spring 81\n4.1 启用Spring Security 81\n4.2 配置Spring Security 83\n4.2.1 基于内存的用户存储 85\n4.2.2 基于JDBC 的用户存储 86\n4.2.3 以LDAP 作为后端的\n用户存储 89\n4.2.4 自定义用户认证 92\n4.3 保护Web 请求 100\n4.3.1 保护请求 100\n4.3.2 创建自定义的登录页 103\n4.3.3 tui出 105\n4.3.4 防止跨站请求伪造 106\n4.4 了解用户是谁 107\n4.5 小结 109\n第5 章 使用配置属性 111\n5.1 细粒度的自动配置 112\n5.1.1 理解Spring 的环境抽象 112\n5.1.2 配置数据源 114\n5.1.3 配置嵌入式服务器 115\n5.1.4 配置日志 116\n5.1.5 使用特定的属性值 118\n5.2 创建自己的配置属性 118\n5.2.1 定义配置属性的持有者 120\n5.2.2 声明配置属性元数据 123\n5.3 使用profile 进行配置 125\n5.3.1 定义特定profile 的属性 126\n5.3.2 激活profile 127\n5.3.3 使用profile 条件化地创建\nbean 128\n5.4 小结 129\n第２部分 Spring 集成\n第6 章 创建REST 服务 133\n6.1 编写RESTful 控制器 134\n6.1.1 从服务器中检索数据 136\n6.1.2 发送数据到服务器端 140\n6.1.3 在服务器上更新数据 142\n6.1.4 删除服务器上的数据 144\n6.2 启用超媒体 145\n6.2.1 添加超链接 147\n6.2.2 创建资源装配器 149\n6.2.3 命名嵌套式的关联关系 154\n6.3 启用数据后端服务 155\n6.3.1 调整资源路径和关系\n名称 157\n6.3.2 分页和排序 159\n6.3.3 添加自定义的端点 160\n6.3.4 为Spring Data 端点添加\n自定义的超链接 162\n6.4 小结 163\n第7 章 消费REST 服务 165\n7.1 使用RestTemplate 消费\nREST 端点 166\n7.1.1 GET 资源 167\n7.1.2 PUT 资源 169\n7.1.3 DELETE 资源 169\n7.1.4 POST 资源 169\n7.2 使用Traverson 导航\nREST API 170\n7.3 小结 172\n第8 章 发送异步消息 173\n8.1 使用JMS 发送消息 174\n8.1.1 搭建JMS 环境 174\n8.1.2 使用JmsTemplate 发送\n消息 176\n8.1.3 接收JMS 消息 183\n8.2 使用RabbitMQ 和\nAMQP 186\n8.2.1 添加RabbitMQ 到\nSpring 中 188\n8.2.2 通过RabbitTemplate 发送\n消息 189\n8.2.3 接收来自RabbitMQ 的\n消息 192\n8.3 使用Kafka 的消息 196\n8.3.1 为Spring 搭建支持Kafka\n消息的环境 197\n8.3.2 通过KafkaTemplate 发送\n消息 198\n8.3.3 编写Kafka 监听器 200\n8.4 小结 201\n第9 章 Spring 集成 203\n9.1 声明一个简单的\n集成流 204\n9.1.1 使用XML 定义集成流 205\n9.1.2 使用Java 配置集成流 207\n9.1.3 使用Spring Integration 的\nDSL 配置 209\n9.2 Spring Integration 功能\n概览 210\n9.2.1 消息通道 211\n9.2.2 过滤器 212\n9.2.3 转换器 213\n9.2.4 路由器 214\n9.2.5 切分器 216\n9.2.6 服务激活器 218\n9.2.7 网关 220\n9.2.8 通道适配器 221\n9.2.9 端点模块 223\n9.3 创建Email 集成流 224\n9.4 小结 229\n第３部分 反应式Spring\n第 10 章 理解反应式编程 233\n10.1 反应式编程概览 234\n10.2 初识Reactor 237\n10.2.1 绘制反应式流图 238\n10.2.2 添加Reactor 依赖 239\n10.3 使用常见的反应式\n操作 240\n10.3.1 创建反应式类型 240\n10.3.2 组合反应式类型 244\n10.3.3 转换和过滤反应式流 248\n10.3.4 在反应式类型上执行逻辑\n操作 258\n10.4 小结 259\n第 11 章 开发反应式API 261\n11.1 使用Spring WebFlux 261\n11.1.1 Spring WebFlux 简介 262\n11.1.2 编写反应式控制器 264\n11.2 定义函数式请求处\n理器 268\n11.3 测试反应式控制器 271\n11.3.1 测试GET 请求 271\n11.3.2 测试POST 请求 274\n11.3.3 使用实时服务器进行\n测试 275\n11.4 反应式消费\nREST API 276\n11.4.1 获取资源 277\n11.4.2 发送资源 279\n11.4.3 删除资源 280\n11.4.4 处理错误 280\n11.4.5 交换请求 282\n11.5 保护反应式Web API 283\n11.5.1 配置反应式Web 应用的\n安全性 284\n11.5.2 配置反应式的用户详情\n服务 285\n11.6 小结 287\n第 12 章 反应式持久化数据 289\n12.1 理解Spring Data 的\n反应式概况 290\n12.1.1 Spring Data 反应式本\n质论 290\n12.1.2 反应式和非反应式类型\n之间的转换 291\n12.1.3 开发反应式repository 292\n12.2 使用反应式的\nCassandra repository 293\n12.2.1 启用Spring Data\nCassandra 293\n12.2.2 理解Cassandra 的数据\n模型 296\n12.2.3 将领域对象映射为Cassandra\n持久化 296\n12.2.4 编写反应式\nCassandra repository 301\n12.3 编写反应式的\nMongoDB repository 304\n12.3.1 启用Spring Data\nMongoDB 304\n12.3.2 将领域对象映射为\n文档 306\n12.3.3 编写反应式的MongoDB\nrepository 接口 309\n12.4 小结 312\n第4 部分 云原生Spring\n第 13 章 注册和发现服务 315\n13.1 思考微服务 316\n13.2 搭建服务注册中心 318\n13.2.1 配置Eureka 321\n13.2.2 扩展Eureka 324\n13.3 注册和发现服务 325\n13.3.1 配置Eureka 客户端\n属性 326\n13.3.2 消费服务 328\n13.4 小结 332\n第 14 章 管理配置 333\n14.1 共享配置 334\n14.2 运行配置服务器 335\n14.2.1 启用配置服务器 336\n14.2.2 填充配置仓库 339\n14.3 消费共享配置 341\n14.4 提供特定应用和profile 的\n属性 343\n14.4.1 提供特定应用的属性 343\n14.4.2 提供来自profile 的\n属性 344\n14.5 保持配置属性的\n私密性 346\n14.5.1 在Git 中加密属性 346\n14.5.2 在Vault 中存储私密\n信息 349\n14.6 在运行时刷新配置\n属性 353\n14.6.1 手动刷新配置属性 354\n14.6.2 自动刷新配置属性 356\n14.7 小结 363\n第 15 章 处理失败和延迟 365\n15.1 理解断路器模式 365\n15.2 声明断路器 367\n15.2.1 缓解延迟 369\n15.2.2 管理断路器的阈值 371\n15.3 监控失败 372\n15.3.1 Hystrix dashboard\n简介 373\n15.3.2 理解Hystrix 的线程\n模型 375\n15.4 聚合多个Hystrix 流 377\n15.5 小结 378\n第5 部分 部署Spring\n第 16 章 使用Spring Boot\nActuator 381\n16.1 Actuator 概览 382\n16.1.1 配置Actuator 的基础\n路径 383\n16.1.2 启用和禁用Actuator\n端点 383\n16.2 消费Actuator 端点 384\n16.2.1 获取应用的基础信息 385\n16.2.2 查看配置细节 388\n16.2.3 查看应用的活动 396\n16.2.4 获取应用的指标 398\n16.3 自定义Actuator 401\n16.3.1 为“\/info”端点提供信息 401\n16.3.2 实现自定义的健康\n指示器 405\n16.3.3 注册自定义的指标 407\n16.3.4 创建自定义的端点 408\n16.4 保护Actuator 411\n16.5 小结 413\n第 17 章 管理Spring 415\n17.1 使用Spring Boot\nAdmin 415\n17.1.1 创建Admin 服务器 416\n17.1.2 注册Admin 客户端 418\n17.2 探索Admin 服务器 421\n17.2.1 查看应用基本的健康状况\n和信息 421\n17.2.2 观察核心指标 423\n17.2.3 探查环境属性 424\n17.2.4 查看和设置日志\n级别 424\n17.2.5 监控线程 425\n17.2.6 跟踪HTTP 请求 426\n17.3 保护Admin 服务器 428\n17.3.1 为Admin 服务器启用登录\n功能 428\n17.3.2 为Actuator 启用认证 429\n17.4 小结 429\n第 18 章 使用JMX 监控\nSpring 431\n18.1 使用Actuator MBean 431\n18.2 创建自己的MBean 434\n18.3 发送通知 436\n18.4 小结 437\n第 19 章 部署Spring 439\n19.1 权衡各种部署方案 440\n19.2 构建和部署WAR\n文件 441\n19.3 推送JAR 文件到Cloud\nFoundry 上 443\n19.4 在Docker 容器中运行\nSpring Boot 445\n19.5 以终为始 449\n19.6 小结 449\n附录 初始化Spring 应用 451\nA.1 使用Spring Tool Suite\n初始化项目 451\nA.2 使用IntelliJ IDEA 初始化\n项目 454\nA.3 使用NetBeans 初始化\n项目 457\nA.4 在start.spring.io 中初始化\n项目 459\nA.5 使用命令行初始化\n项目 462\nA.5.1 curl 和Initializr API 462\nA.5.2 Spring Boot 命令行\n接口 464\nA.6 使用元框架创建Spring\n应用 465\nA.7 构建和运行项目 465","pages":"466","images":{"small":"https://img9.doubanio.com\/view\/subject\/s\/public\/s33562244.jpg","large":"https://img9.doubanio.com\/view\/subject\/l\/public\/s33562244.jpg","medium":"https://img9.doubanio.com\/view\/subject\/m\/public\/s33562244.jpg"},"alt":"https:\/\/book.douban.com\/subject\/34949443\/","id":"34949443","publisher":"人民邮电出版社","isbn10":"711552792X","isbn13":"9787115527929","title":"Spring实战（第5版 ）","url":"https:\/\/api.douban.com\/v2\/book\/34949443","alt_title":"","author_intro":"克雷格·沃斯（Craig Walls）\nPivotal的首席软件工程师、畅销书作者、Spring框架的热情支持者，经常在各种技术会议上发表演讲。","summary":"本书是一本经典而实用的畅销Spring 学习指南。 第5 版涵盖了Spring 5.0 和Spring Boot 2.0 里程碑式的更新。全书分为5 个部分，共19 章。第1 部分（第1～5 章）涵盖了构建Spring 应用的基础话题。第2 部分（第6～9章）讨论如何将Spring 应用与其他应用进行集成。第3 部分（第10～12 章）探讨Spring对反应式编程提供的全新支持。第4 部分（第13～15 章）拆分单体应用模型，介绍SpringCloud 和微服务开发。第5 部分（第16～19 章）讨论如何为应用投入生产环境做准备以及如何进行部署。 本书既适合刚开始学习Spring Boot 和Spring 框架的Java 开发人员快速上手，也适合经验丰富的Spring 开发人员学习Spring 的新特性，尤其适用于企业级Java 开发人员。","price":"99.00元"}]}
